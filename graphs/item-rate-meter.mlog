set SWITCH null
set MESSAGE null
set SOURCE_MEMORY null
set TARGET_MEMORY null
print "Item Rate Meter"
set n @links
jump 23 lessThanEq n 0
op sub n n 1
getlink block n
print "\nFound: "
print block
sensor __tmp5 block @type
jump 15 notEqual __tmp5 @message
set MESSAGE block
jump 22 always 0 0
jump 18 notEqual __tmp5 @switch
set SWITCH block
jump 22 always 0 0
jump 20 equal __tmp5 @memory-bank
jump 22 notEqual __tmp5 @memory-cell
set TARGET_MEMORY SOURCE_MEMORY
set SOURCE_MEMORY block
jump 7 greaterThan n 0
print "\nMessage: "
print MESSAGE
print "\nSwitch: "
print SWITCH
print "\nSource memory: "
print SOURCE_MEMORY
print "\nTarget memory: "
print TARGET_MEMORY
jump 33 notEqual SOURCE_MEMORY null
print "\nNo memory."
printflush MESSAGE
jump 4 equal SOURCE_MEMORY null
jump 37 notEqual TARGET_MEMORY null
set TARGET_MEMORY SOURCE_MEMORY
set startIndex 0
sensor __tmp11 TARGET_MEMORY @type
jump 42 notEqual __tmp11 @memory-cell
set __tmp12 64
jump 46 always 0 0
jump 45 notEqual __tmp11 @memory-bank
set __tmp12 512
jump 46 always 0 0
set __tmp12 0
set memSize __tmp12
jump 50 notEqual SOURCE_MEMORY TARGET_MEMORY
op idiv startIndex __tmp12 2
op sub memSize __tmp12 1
set prevTick @tick
read prev SOURCE_MEMORY 0
set currTick prevTick
set curr prev
read __tmp19 TARGET_MEMORY startIndex
op max index startIndex __tmp19
set nextTick prevTick
sensor __tmp21 switch1 @enabled
jump 102 notEqual __tmp21 0
op add nextTick nextTick 60
op add __tmp24 nextTick 60
jump 65 lessThanEq @tick __tmp24
set prevTick @tick
op add nextTick prevTick 60
set currTick prevTick
jump 73 greaterThanEq @tick nextTick
jump 68 greaterThanEq @tick prevTick
end
read value SOURCE_MEMORY 0
jump 72 equal value curr
set currTick @tick
set curr value
jump 66 lessThan @tick nextTick
op sub amount curr prev
op sub time currTick prevTick
set rate 0
jump 79 equal amount 0
op div __tmp40 amount time
op max rate __tmp40 0
op add index index 1
jump 82 lessThan index memSize
op add index startIndex 1
write index TARGET_MEMORY startIndex
write rate TARGET_MEMORY index
print "Item Rate Meter\nTotal items: [gold]"
print curr
op idiv __tmp47 rate 0.0002777777777777778
print "[]\nCurrent rate [green]"
print __tmp47
print "[]/min\n  memory start: [gold]"
print startIndex
print "[]\n  memory index: [gold]"
print index
op floor __tmp48 time 0
print "[]\n[lightgray]Loop time: "
print __tmp48
print " ms"
printflush message1
set prevTick currTick
set prev curr
sensor __tmp21 switch1 @enabled
jump 59 equal __tmp21 0
control enabled switch1 0 0 0 0

