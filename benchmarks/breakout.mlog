set BRICKS bank1
set DISPLAY display1
set PADDLECONTROLLER switch1
draw color 255 255 255 255 0 0
set :paddleWidth 40
op sub :paddleX 88 20
set :ballX 88
set :ballY 88
op rand *tmp2 10 0
op sub :ballVX *tmp2 5
op rand *tmp4 10 0
op sub :ballVY *tmp4 5
set :brickCount 6
write 1 BRICKS 0
write 1 BRICKS 1
write 1 BRICKS 2
write 1 BRICKS 3
write 1 BRICKS 4
write 1 BRICKS 5
draw clear 0 0 0 0 0 0
draw rect :paddleX 10 :paddleWidth 5 0 0
draw rect :ballX :ballY 5 5 0 0
sensor *tmp8 PADDLECONTROLLER @enabled
jump 28 equal *tmp8 false
op sub *tmp10 176 :paddleWidth
jump 30 greaterThanEq :paddleX *tmp10
op add :paddleX :paddleX 3
jump 30 always 0 0
jump 30 lessThanEq :paddleX 0
op sub :paddleX :paddleX 3
op add :ballX :ballX :ballVX
op add :ballY :ballY :ballVY
op add :ballXEnd :ballX 5
op add :ballYEnd :ballY 5
op lessThan *tmp17 :ballX 0
op greaterThan *tmp18 :ballXEnd 176
op or *tmp20 *tmp17 *tmp18
jump 39 equal *tmp20 false
op mul :ballVX :ballVX -1
jump 41 lessThanEq :ballYEnd 176
op mul :ballVY :ballVY -1
op greaterThan *tmp24 :ballXEnd :paddleX
op add *tmp25 :paddleX :paddleWidth
op lessThan *tmp26 :ballX *tmp25
op land *tmp27 *tmp24 *tmp26
op greaterThan *tmp28 :ballYEnd 10
op land *tmp29 *tmp27 *tmp28
op lessThan *tmp30 :ballY 15
op land *tmp31 *tmp29 *tmp30
jump 58 equal *tmp31 false
op mul :ballVY :ballVY -1.1
op add *tmp33 :ballX 2.5
op sub *tmp34 *tmp33 :paddleX
op div *tmp35 :paddleWidth 2
op add *tmp36 *tmp34 *tmp35
op div *tmp37 *tmp36 10
op add :ballVX :ballVX *tmp37
op sub :paddleWidth :paddleWidth 1
read *tmp41 BRICKS 0
jump 78 equal *tmp41 false
draw rect 1 126 57.666666666666664 9 0 0
op greaterThan *tmp43 :ballXEnd 1
op lessThan *tmp45 :ballX 59.666666666666664
op land *tmp46 *tmp43 *tmp45
op greaterThan *tmp47 :ballYEnd 126
op land *tmp48 *tmp46 *tmp47
op lessThan *tmp50 :ballY 136
op land *tmp51 *tmp48 *tmp50
jump 78 equal *tmp51 false
write 0 BRICKS 0
op sub :brickCount :brickCount 1
op greaterThan *tmp56 :ballX -3
op lessThan *tmp58 :ballX 63.666666666666664
op land *tmp59 *tmp56 *tmp58
jump 77 equal *tmp59 false
op mul :ballVY :ballVY -1
jump 78 always 0 0
op mul :ballVX :ballVX -1
read *tmp41 BRICKS 1
jump 98 equal *tmp41 false
draw rect 59.666666666666664 126 57.666666666666664 9 0 0
op greaterThan *tmp43 :ballXEnd 59.666666666666664
op lessThan *tmp45 :ballX 118.33333333333333
op land *tmp46 *tmp43 *tmp45
op greaterThan *tmp47 :ballYEnd 126
op land *tmp48 *tmp46 *tmp47
op lessThan *tmp50 :ballY 136
op land *tmp51 *tmp48 *tmp50
jump 98 equal *tmp51 false
write 0 BRICKS 1
op sub :brickCount :brickCount 1
op greaterThan *tmp56 :ballX 55.666666666666664
op lessThan *tmp58 :ballX 122.33333333333333
op land *tmp59 *tmp56 *tmp58
jump 97 equal *tmp59 false
op mul :ballVY :ballVY -1
jump 98 always 0 0
op mul :ballVX :ballVX -1
read *tmp41 BRICKS 2
jump 118 equal *tmp41 false
draw rect 118.33333333333333 126 57.666666666666664 9 0 0
op greaterThan *tmp43 :ballXEnd 118.33333333333333
op lessThan *tmp45 :ballX 177
op land *tmp46 *tmp43 *tmp45
op greaterThan *tmp47 :ballYEnd 126
op land *tmp48 *tmp46 *tmp47
op lessThan *tmp50 :ballY 136
op land *tmp51 *tmp48 *tmp50
jump 118 equal *tmp51 false
write 0 BRICKS 2
op sub :brickCount :brickCount 1
op greaterThan *tmp56 :ballX 114.33333333333333
op lessThan *tmp58 :ballX 181
op land *tmp59 *tmp56 *tmp58
jump 117 equal *tmp59 false
op mul :ballVY :ballVY -1
jump 118 always 0 0
op mul :ballVX :ballVX -1
read *tmp41 BRICKS 3
jump 138 equal *tmp41 false
draw rect 1 116 57.666666666666664 9 0 0
op greaterThan *tmp43 :ballXEnd 1
op lessThan *tmp45 :ballX 59.666666666666664
op land *tmp46 *tmp43 *tmp45
op greaterThan *tmp47 :ballYEnd 116
op land *tmp48 *tmp46 *tmp47
op lessThan *tmp50 :ballY 126
op land *tmp51 *tmp48 *tmp50
jump 138 equal *tmp51 false
write 0 BRICKS 3
op sub :brickCount :brickCount 1
op greaterThan *tmp56 :ballX -3
op lessThan *tmp58 :ballX 63.666666666666664
op land *tmp59 *tmp56 *tmp58
jump 137 equal *tmp59 false
op mul :ballVY :ballVY -1
jump 138 always 0 0
op mul :ballVX :ballVX -1
read *tmp41 BRICKS 4
jump 158 equal *tmp41 false
draw rect 59.666666666666664 116 57.666666666666664 9 0 0
op greaterThan *tmp43 :ballXEnd 59.666666666666664
op lessThan *tmp45 :ballX 118.33333333333333
op land *tmp46 *tmp43 *tmp45
op greaterThan *tmp47 :ballYEnd 116
op land *tmp48 *tmp46 *tmp47
op lessThan *tmp50 :ballY 126
op land *tmp51 *tmp48 *tmp50
jump 158 equal *tmp51 false
write 0 BRICKS 4
op sub :brickCount :brickCount 1
op greaterThan *tmp56 :ballX 55.666666666666664
op lessThan *tmp58 :ballX 122.33333333333333
op land *tmp59 *tmp56 *tmp58
jump 157 equal *tmp59 false
op mul :ballVY :ballVY -1
jump 158 always 0 0
op mul :ballVX :ballVX -1
read *tmp41 BRICKS 5
jump 178 equal *tmp41 false
draw rect 118.33333333333333 116 57.666666666666664 9 0 0
op greaterThan *tmp43 :ballXEnd 118.33333333333333
op lessThan *tmp45 :ballX 177
op land *tmp46 *tmp43 *tmp45
op greaterThan *tmp47 :ballYEnd 116
op land *tmp48 *tmp46 *tmp47
op lessThan *tmp50 :ballY 126
op land *tmp51 *tmp48 *tmp50
jump 178 equal *tmp51 false
write 0 BRICKS 5
op sub :brickCount :brickCount 1
op greaterThan *tmp56 :ballX 114.33333333333333
op lessThan *tmp58 :ballX 181
op land *tmp59 *tmp56 *tmp58
jump 177 equal *tmp59 false
op mul :ballVY :ballVY -1
jump 178 always 0 0
op mul :ballVX :ballVX -1
op lessThan *tmp61 :ballY 0
op equal *tmp62 :brickCount 0
op or *tmp64 *tmp61 *tmp62
jump 4 notEqual *tmp64 false
drawflush DISPLAY
jump 19 always 0 0
print "Compiled by Mindcode - github.com/cardillan/mindcode"

