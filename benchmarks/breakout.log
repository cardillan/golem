File breakout.mnd: number of reported ambiguities: 48
Active optimizations:
    case-expression-optimization = experimental,
    case-switching = experimental,
    data-flow-optimization = experimental,
    dead-code-elimination = experimental,
    expression-optimization = experimental,
    function-inlining = experimental,
    if-expression-optimization = experimental,
    jump-normalization = experimental,
    jump-optimization = experimental,
    jump-straightening = experimental,
    jump-threading = experimental,
    loop-hoisting = experimental,
    loop-optimization = experimental,
    loop-unrolling = experimental,
    print-merging = experimental,
    return-optimization = experimental,
    single-step-elimination = experimental,
    stack-optimization = experimental,
    temp-variables-elimination = experimental,
    unreachable-code-elimination = experimental

   159 instructions before optimizations.
    20 instructions eliminated by Temp Variables Elimination.
    20 instructions eliminated by Dead Code Elimination (5 iterations).
     2 instructions eliminated by Jump Normalization (3 iterations).
     7 instructions eliminated by Jump Optimization (3 iterations).
     8 instructions eliminated by Single Step Elimination (4 iterations).
    38 instructions eliminated by Data Flow Optimization (4 passes, 13 iterations).
     3 instructions eliminated by Loop Optimization (2 iterations).
     3 loops improved by Loop Optimization.
   126 instructions added by Loop Unrolling (5 iterations).
     3 loops unrolled by Loop Unrolling.
     1 instructions eliminated by Jump Straightening (3 iterations).
     2 instructions updated by JumpThreading.
     2 instructions eliminated by Unreachable Code Elimination.
   184 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 903):
    Loop Unrolling: unroll loop at line 40                       cost     2, benefit     7500.0, efficiency     3750.0
    Loop Unrolling: unroll loop at line 81                       cost    25, benefit    62500.0, efficiency     2500.0
  * Loop Unrolling: unroll loop at line 82                       cost    47, benefit  2343750.0, efficiency    49867.0 (+38 instructions)

Pass 1: speed optimization selection (cost limit 865):
  * Loop Unrolling: unroll loop at line 40                       cost     2, benefit     7500.0, efficiency     3750.0 (+2 instructions)
    Loop Unrolling: unroll loop at line 81                       cost    63, benefit    62500.0, efficiency      992.1

Pass 1: speed optimization selection (cost limit 863):
  * Loop Unrolling: unroll loop at line 81                       cost    63, benefit    62500.0, efficiency      992.1 (+50 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-12 instructions):
 
    41 label __label11
    42 set __tmp10 null
    43 label __label12
-    * set __tmp7 __tmp10
    44 jump __label10 always
    45 label __label9
    46 op greaterThan __tmp12 paddleX 0
 
    52 label __label13
    53 set __tmp13 null
    54 label __label14
-    * set __tmp7 __tmp13
    55 label __label10
    56 op add __tmp15 ballX ballVX
    57 set ballX __tmp15
 
    68 jump __label15 equal __tmp22 false
    69 op mul __tmp24 ballVX -1
    70 set ballVX __tmp24
-    * set __tmp23 ballVX
    71 jump __label16 always
    72 label __label15
-    * set __tmp23 null
    73 label __label16
    74 op greaterThan __tmp25 ballYEnd 176
    75 jump __label17 equal __tmp25 false
    76 op mul __tmp27 ballVY -1
    77 set ballVY __tmp27
-    * set __tmp26 ballVY
    78 jump __label18 always
    79 label __label17
-    * set __tmp26 null
    80 label __label18
    81 op greaterThan __tmp28 ballXEnd paddleX
    82 op add __tmp29 paddleX paddleWidth
 
    98 set ballVX __tmp43
    99 op sub __tmp44 paddleWidth 1
   100 set paddleWidth __tmp44
-    * set __tmp36 paddleWidth
   101 jump __label20 always
   102 label __label19
-    * set __tmp36 null
   103 label __label20
   104 set brickPtr 0
   105 set y 126
 
   147 label __label29
   148 set __tmp58 null
   149 label __label30
-    * set __tmp48 __tmp58
   150 jump __label28 always
   151 label __label27
-    * set __tmp48 null
   152 label __label28
   153 op add __tmp68 brickPtr 1
   154 set brickPtr __tmp68
 
   168 op notEqual __tmp74 __tmp73 false
   169 jump __label33 equal __tmp74 false
   170 jump __label8 always
-    * set __tmp75 null
   171 jump __label34 always
   172 label __label33
-    * set __tmp75 null
   173 label __label34
   174 drawflush DISPLAY
   175 label __label7

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-6 instructions):
 
    36 jump __label11 equal __tmp9 false
    37 op add __tmp11 paddleX 3
    38 set paddleX __tmp11
-    * set __tmp10 paddleX
    39 jump __label12 always
    40 label __label11
-    * set __tmp10 null
    41 label __label12
    42 jump __label10 always
    43 label __label9
 
    45 jump __label13 equal __tmp12 false
    46 op sub __tmp14 paddleX 3
    47 set paddleX __tmp14
-    * set __tmp13 paddleX
    48 jump __label14 always
    49 label __label13
-    * set __tmp13 null
    50 label __label14
    51 label __label10
    52 op add __tmp15 ballX ballVX
 
   138 set ballVX __tmp67
   139 set __tmp65 ballVX
   140 label __label32
-    * set __tmp58 __tmp65
   141 jump __label30 always
   142 label __label29
-    * set __tmp58 null
   143 label __label30
   144 jump __label28 always
   145 label __label27

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
   131 jump __label31 equal __tmp64 false
   132 op mul __tmp66 ballVY -1
   133 set ballVY __tmp66
-    * set __tmp65 ballVY
   134 jump __label32 always
   135 label __label31
   136 op mul __tmp67 ballVX -1
   137 set ballVX __tmp67
-    * set __tmp65 ballVX
   138 label __label32
   139 jump __label30 always
   140 label __label29

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-20 instructions):
 
     5 jump __label2 equal true false
     6 set paddleWidth 40
     7 op div __tmp0 paddleWidth 2
-    * op sub __tmp1 88 __tmp0
-    * set paddleX __tmp1
+    8 op sub paddleX 88 __tmp0
     9 set ballX 88
    10 set ballY 88
    11 op rand __tmp2 10
-    * op sub __tmp3 __tmp2 5
-    * set ballVX __tmp3
+   12 op sub ballVX __tmp2 5
    13 op rand __tmp4 10
-    * op sub __tmp5 __tmp4 5
-    * set ballVY __tmp5
+   14 op sub ballVY __tmp4 5
    15 set brickCount 6
    16 set i 0
    17 label __label3
 
    31 op sub __tmp8 176 paddleWidth
    32 op lessThan __tmp9 paddleX __tmp8
    33 jump __label11 equal __tmp9 false
-    * op add __tmp11 paddleX 3
-    * set paddleX __tmp11
+   34 op add paddleX paddleX 3
    35 jump __label12 always
    36 label __label11
    37 label __label12
 
    39 label __label9
    40 op greaterThan __tmp12 paddleX 0
    41 jump __label13 equal __tmp12 false
-    * op sub __tmp14 paddleX 3
-    * set paddleX __tmp14
+   42 op sub paddleX paddleX 3
    43 jump __label14 always
    44 label __label13
    45 label __label14
    46 label __label10
-    * op add __tmp15 ballX ballVX
-    * set ballX __tmp15
-    * op add __tmp16 ballY ballVY
-    * set ballY __tmp16
-    * op add __tmp17 ballX 5
-    * set ballXEnd __tmp17
-    * op add __tmp18 ballY 5
-    * set ballYEnd __tmp18
+   47 op add ballX ballX ballVX
+   48 op add ballY ballY ballVY
+   49 op add ballXEnd ballX 5
+   50 op add ballYEnd ballY 5
    51 op lessThan __tmp19 ballX 0
    52 op greaterThan __tmp20 ballXEnd 176
    53 op or __tmp21 __tmp19 __tmp20
    54 op notEqual __tmp22 __tmp21 false
    55 jump __label15 equal __tmp22 false
-    * op mul __tmp24 ballVX -1
-    * set ballVX __tmp24
+   56 op mul ballVX ballVX -1
    57 jump __label16 always
    58 label __label15
    59 label __label16
    60 op greaterThan __tmp25 ballYEnd 176
    61 jump __label17 equal __tmp25 false
-    * op mul __tmp27 ballVY -1
-    * set ballVY __tmp27
+   62 op mul ballVY ballVY -1
    63 jump __label18 always
    64 label __label17
    65 label __label18
 
    72 op lessThan __tmp34 ballY 15
    73 op land __tmp35 __tmp33 __tmp34
    74 jump __label19 equal __tmp35 false
-    * op mul __tmp37 ballVY -1.1
-    * set ballVY __tmp37
+   75 op mul ballVY ballVY -1.1
    76 op add __tmp38 ballX 2.5
    77 op sub __tmp39 __tmp38 paddleX
    78 op div __tmp40 paddleWidth 2
    79 op add __tmp41 __tmp39 __tmp40
    80 op div __tmp42 __tmp41 10
-    * op add __tmp43 ballVX __tmp42
-    * set ballVX __tmp43
-    * op sub __tmp44 paddleWidth 1
-    * set paddleWidth __tmp44
+   81 op add ballVX ballVX __tmp42
+   82 op sub paddleWidth paddleWidth 1
    83 jump __label20 always
    84 label __label19
    85 label __label20
 
   106 op land __tmp57 __tmp54 __tmp56
   107 jump __label29 equal __tmp57 false
   108 write 0 BRICKS brickPtr
-    * op sub __tmp59 brickCount 1
-    * set brickCount __tmp59
+  109 op sub brickCount brickCount 1
   110 set brickWidthPlusBallSizeMinus1 62.666666666666664
   111 op sub __tmp60 x 4
   112 op greaterThan __tmp61 ballX __tmp60
 
   114 op lessThan __tmp63 ballX __tmp62
   115 op land __tmp64 __tmp61 __tmp63
   116 jump __label31 equal __tmp64 false
-    * op mul __tmp66 ballVY -1
-    * set ballVY __tmp66
+  117 op mul ballVY ballVY -1
   118 jump __label32 always
   119 label __label31
-    * op mul __tmp67 ballVX -1
-    * set ballVX __tmp67
+  120 op mul ballVX ballVX -1
   121 label __label32
   122 jump __label30 always
   123 label __label29
 
   125 jump __label28 always
   126 label __label27
   127 label __label28
-    * op add __tmp68 brickPtr 1
-    * set brickPtr __tmp68
+  128 op add brickPtr brickPtr 1
   129 label __label25
-    * op add __tmp69 x 58.666666666666664
-    * set x __tmp69
+  130 op add x x 58.666666666666664
   131 jump __label24 always
   132 label __label26
   133 label __label22
-    * op sub __tmp70 y 10
-    * set y __tmp70
+  134 op sub y y 10
   135 jump __label21 always
   136 label __label23
   137 op lessThan __tmp71 ballY 0

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-2 instructions):
 
     2 set PADDLECONTROLLER switch1
     3 draw color 255 255 255 255
     4 label __label0
-    * jump __label2 equal true false
     5 set paddleWidth 40
     6 op div __tmp0 paddleWidth 2
     7 op sub paddleX 88 __tmp0
 
    21 jump __label3 always
    22 label __label5
    23 label __label6
-    * jump __label8 equal true false
    24 draw clear 0 0 0
    25 draw rect paddleX 10 paddleWidth 5
    26 draw rect ballX ballY 5 5

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-7 instructions):
 
    27 sensor __tmp6 PADDLECONTROLLER @enabled
    28 jump __label9 equal __tmp6 false
    29 op sub __tmp8 176 paddleWidth
-    * op lessThan __tmp9 paddleX __tmp8
-    * jump __label11 equal __tmp9 false
+   30 jump __label11 greaterThanEq paddleX __tmp8
    31 op add paddleX paddleX 3
    32 jump __label12 always
    33 label __label11
    34 label __label12
    35 jump __label10 always
    36 label __label9
-    * op greaterThan __tmp12 paddleX 0
-    * jump __label13 equal __tmp12 false
+   37 jump __label13 lessThanEq paddleX 0
    38 op sub paddleX paddleX 3
    39 jump __label14 always
    40 label __label13
 
    47 op lessThan __tmp19 ballX 0
    48 op greaterThan __tmp20 ballXEnd 176
    49 op or __tmp21 __tmp19 __tmp20
-    * op notEqual __tmp22 __tmp21 false
-    * jump __label15 equal __tmp22 false
+   50 jump __label15 equal __tmp21 false
    51 op mul ballVX ballVX -1
    52 jump __label16 always
    53 label __label15
    54 label __label16
-    * op greaterThan __tmp25 ballYEnd 176
-    * jump __label17 equal __tmp25 false
+   55 jump __label17 lessThanEq ballYEnd 176
    56 op mul ballVY ballVY -1
    57 jump __label18 always
    58 label __label17
 
    80 set brickPtr 0
    81 set y 126
    82 label __label21
-    * op greaterThan __tmp45 y 106
-    * jump __label23 equal __tmp45 false
+   83 jump __label23 lessThanEq y 106
    84 set x 1
    85 label __label24
-    * op lessThan __tmp46 x 176
-    * jump __label26 equal __tmp46 false
+   86 jump __label26 greaterThanEq x 176
    87 read __tmp47 BRICKS brickPtr
    88 jump __label27 equal __tmp47 false
    89 draw rect x y 57.666666666666664 9
 
   129 op lessThan __tmp71 ballY 0
   130 op equal __tmp72 brickCount 0
   131 op or __tmp73 __tmp71 __tmp72
-    * op notEqual __tmp74 __tmp73 false
-    * jump __label33 equal __tmp74 false
+  132 jump __label33 equal __tmp73 false
   133 jump __label8 always
   134 jump __label34 always
   135 label __label33

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-8 instructions):
 
    29 op sub __tmp8 176 paddleWidth
    30 jump __label11 greaterThanEq paddleX __tmp8
    31 op add paddleX paddleX 3
-    * jump __label12 always
    32 label __label11
    33 label __label12
    34 jump __label10 always
    35 label __label9
    36 jump __label13 lessThanEq paddleX 0
    37 op sub paddleX paddleX 3
-    * jump __label14 always
    38 label __label13
    39 label __label14
    40 label __label10
 
    47 op or __tmp21 __tmp19 __tmp20
    48 jump __label15 equal __tmp21 false
    49 op mul ballVX ballVX -1
-    * jump __label16 always
    50 label __label15
    51 label __label16
    52 jump __label17 lessThanEq ballYEnd 176
    53 op mul ballVY ballVY -1
-    * jump __label18 always
    54 label __label17
    55 label __label18
    56 op greaterThan __tmp28 ballXEnd paddleX
 
    70 op div __tmp42 __tmp41 10
    71 op add ballVX ballVX __tmp42
    72 op sub paddleWidth paddleWidth 1
-    * jump __label20 always
    73 label __label19
    74 label __label20
    75 set brickPtr 0
 
   106 label __label31
   107 op mul ballVX ballVX -1
   108 label __label32
-    * jump __label30 always
   109 label __label29
   110 label __label30
-    * jump __label28 always
   111 label __label27
   112 label __label28
   113 op add brickPtr brickPtr 1
 
   124 op or __tmp73 __tmp71 __tmp72
   125 jump __label33 equal __tmp73 false
   126 jump __label8 always
-    * jump __label34 always
   127 label __label33
   128 label __label34
   129 drawflush DISPLAY

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     3 draw color 255 255 255 255
     4 label __label0
     5 set paddleWidth 40
-    * op div __tmp0 paddleWidth 2
-    * op sub paddleX 88 __tmp0
+    6 op div __tmp0 40 2
+    7 op sub paddleX 88 20
     8 set ballX 88
     9 set ballY 88
    10 op rand __tmp2 10
 
    97 set brickWidthPlusBallSizeMinus1 62.666666666666664
    98 op sub __tmp60 x 4
    99 op greaterThan __tmp61 ballX __tmp60
-    * op add __tmp62 x brickWidthPlusBallSizeMinus1
+  100 op add __tmp62 x 62.666666666666664
   101 op lessThan __tmp63 ballX __tmp62
   102 op land __tmp64 __tmp61 __tmp63
   103 jump __label31 equal __tmp64 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
     3 draw color 255 255 255 255
     4 label __label0
     5 set paddleWidth 40
-    * op div __tmp0 40 2
     6 op sub paddleX 88 20
     7 set ballX 88
     8 set ballY 88
 
    93 jump __label29 equal __tmp57 false
    94 write 0 BRICKS brickPtr
    95 op sub brickCount brickCount 1
-    * set brickWidthPlusBallSizeMinus1 62.666666666666664
    96 op sub __tmp60 x 4
    97 op greaterThan __tmp61 ballX __tmp60
    98 op add __tmp62 x 62.666666666666664

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-3 instructions):
 
    13 set brickCount 6
    14 set i 0
    15 label __label3
-    * jump __label5 greaterThanEq i 6
+   16 label __label35
    17 write 1 BRICKS i
    18 label __label4
    19 op add i i 1
-    * jump __label3 always
+   20 jump __label35 lessThan i 6
    21 label __label5
    22 label __label6
    23 draw clear 0 0 0
 
    74 set brickPtr 0
    75 set y 126
    76 label __label21
-    * jump __label23 lessThanEq y 106
+   77 label __label36
    78 set x 1
    79 label __label24
-    * jump __label26 greaterThanEq x 176
+   80 label __label37
    81 read __tmp47 BRICKS brickPtr
    82 jump __label27 equal __tmp47 false
    83 draw rect x y 57.666666666666664 9
 
   111 op add brickPtr brickPtr 1
   112 label __label25
   113 op add x x 58.666666666666664
-    * jump __label24 always
+  114 jump __label37 lessThan x 176
   115 label __label26
   116 label __label22
   117 op sub y y 10
-    * jump __label21 always
+  118 jump __label36 greaterThan y 106
   119 label __label23
   120 op lessThan __tmp71 ballY 0
   121 op equal __tmp72 brickCount 0

Modifications by Loop Unrolling: unroll loop at line 82 (+51 instructions):
 
    75 set y 126
    76 label __label21
    77 label __label36
-    * set x 1
-    * label __label24
-    * label __label37
-    * read __tmp47 BRICKS brickPtr
-    * jump __label27 equal __tmp47 false
-    * draw rect x y 57.666666666666664 9
-    * op greaterThan __tmp49 ballXEnd x
-    * op add __tmp50 x 58.666666666666664
-    * op lessThan __tmp51 ballX __tmp50
-    * op land __tmp52 __tmp49 __tmp51
-    * op greaterThan __tmp53 ballYEnd y
-    * op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 y 10
-    * op lessThan __tmp56 ballY __tmp55
-    * op land __tmp57 __tmp54 __tmp56
-    * jump __label29 equal __tmp57 false
-    * write 0 BRICKS brickPtr
-    * op sub brickCount brickCount 1
-    * op sub __tmp60 x 4
-    * op greaterThan __tmp61 ballX __tmp60
-    * op add __tmp62 x 62.666666666666664
-    * op lessThan __tmp63 ballX __tmp62
-    * op land __tmp64 __tmp61 __tmp63
-    * jump __label31 equal __tmp64 false
-    * op mul ballVY ballVY -1
-    * jump __label32 always
-    * label __label31
-    * op mul ballVX ballVX -1
-    * label __label32
-    * label __label29
-    * label __label30
-    * label __label27
-    * label __label28
-    * op add brickPtr brickPtr 1
-    * label __label25
-    * op add x x 58.666666666666664
-    * jump __label37 lessThan x 176
-    * label __label26
+   78 set x 1
+   79 label __label38
+   80 label __label39
+   81 read __tmp47 BRICKS brickPtr
+   82 jump __label44 equal __tmp47 false
+   83 draw rect x y 57.666666666666664 9
+   84 op greaterThan __tmp49 ballXEnd x
+   85 op add __tmp50 x 58.666666666666664
+   86 op lessThan __tmp51 ballX __tmp50
+   87 op land __tmp52 __tmp49 __tmp51
+   88 op greaterThan __tmp53 ballYEnd y
+   89 op land __tmp54 __tmp52 __tmp53
+   90 op add __tmp55 y 10
+   91 op lessThan __tmp56 ballY __tmp55
+   92 op land __tmp57 __tmp54 __tmp56
+   93 jump __label42 equal __tmp57 false
+   94 write 0 BRICKS brickPtr
+   95 op sub brickCount brickCount 1
+   96 op sub __tmp60 x 4
+   97 op greaterThan __tmp61 ballX __tmp60
+   98 op add __tmp62 x 62.666666666666664
+   99 op lessThan __tmp63 ballX __tmp62
+  100 op land __tmp64 __tmp61 __tmp63
+  101 jump __label40 equal __tmp64 false
+  102 op mul ballVY ballVY -1
+  103 jump __label41 always
+  104 label __label40
+  105 op mul ballVX ballVX -1
+  106 label __label41
+  107 label __label42
+  108 label __label43
+  109 label __label44
+  110 label __label45
+  111 op add brickPtr brickPtr 1
+  112 label __label46
+  113 op add x x 58.666666666666664
+  114 label __label47
+  115 read __tmp47 BRICKS brickPtr
+  116 jump __label52 equal __tmp47 false
+  117 draw rect x y 57.666666666666664 9
+  118 op greaterThan __tmp49 ballXEnd x
+  119 op add __tmp50 x 58.666666666666664
+  120 op lessThan __tmp51 ballX __tmp50
+  121 op land __tmp52 __tmp49 __tmp51
+  122 op greaterThan __tmp53 ballYEnd y
+  123 op land __tmp54 __tmp52 __tmp53
+  124 op add __tmp55 y 10
+  125 op lessThan __tmp56 ballY __tmp55
+  126 op land __tmp57 __tmp54 __tmp56
+  127 jump __label50 equal __tmp57 false
+  128 write 0 BRICKS brickPtr
+  129 op sub brickCount brickCount 1
+  130 op sub __tmp60 x 4
+  131 op greaterThan __tmp61 ballX __tmp60
+  132 op add __tmp62 x 62.666666666666664
+  133 op lessThan __tmp63 ballX __tmp62
+  134 op land __tmp64 __tmp61 __tmp63
+  135 jump __label48 equal __tmp64 false
+  136 op mul ballVY ballVY -1
+  137 jump __label49 always
+  138 label __label48
+  139 op mul ballVX ballVX -1
+  140 label __label49
+  141 label __label50
+  142 label __label51
+  143 label __label52
+  144 label __label53
+  145 op add brickPtr brickPtr 1
+  146 label __label54
+  147 op add x x 58.666666666666664
+  148 label __label55
+  149 read __tmp47 BRICKS brickPtr
+  150 jump __label60 equal __tmp47 false
+  151 draw rect x y 57.666666666666664 9
+  152 op greaterThan __tmp49 ballXEnd x
+  153 op add __tmp50 x 58.666666666666664
+  154 op lessThan __tmp51 ballX __tmp50
+  155 op land __tmp52 __tmp49 __tmp51
+  156 op greaterThan __tmp53 ballYEnd y
+  157 op land __tmp54 __tmp52 __tmp53
+  158 op add __tmp55 y 10
+  159 op lessThan __tmp56 ballY __tmp55
+  160 op land __tmp57 __tmp54 __tmp56
+  161 jump __label58 equal __tmp57 false
+  162 write 0 BRICKS brickPtr
+  163 op sub brickCount brickCount 1
+  164 op sub __tmp60 x 4
+  165 op greaterThan __tmp61 ballX __tmp60
+  166 op add __tmp62 x 62.666666666666664
+  167 op lessThan __tmp63 ballX __tmp62
+  168 op land __tmp64 __tmp61 __tmp63
+  169 jump __label56 equal __tmp64 false
+  170 op mul ballVY ballVY -1
+  171 jump __label57 always
+  172 label __label56
+  173 op mul ballVX ballVX -1
+  174 label __label57
+  175 label __label58
+  176 label __label59
+  177 label __label60
+  178 label __label61
+  179 op add brickPtr brickPtr 1
+  180 label __label62
+  181 op add x x 58.666666666666664
+  182 label __label26
   183 label __label22
   184 op sub y y 10
   185 jump __label36 greaterThan y 106

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    80 label __label39
    81 read __tmp47 BRICKS brickPtr
    82 jump __label44 equal __tmp47 false
-    * draw rect x y 57.666666666666664 9
-    * op greaterThan __tmp49 ballXEnd x
-    * op add __tmp50 x 58.666666666666664
-    * op lessThan __tmp51 ballX __tmp50
+   83 draw rect 1 y 57.666666666666664 9
+   84 op greaterThan __tmp49 ballXEnd 1
+   85 op add __tmp50 1 58.666666666666664
+   86 op lessThan __tmp51 ballX 59.666666666666664
    87 op land __tmp52 __tmp49 __tmp51
    88 op greaterThan __tmp53 ballYEnd y
    89 op land __tmp54 __tmp52 __tmp53
 
    93 jump __label42 equal __tmp57 false
    94 write 0 BRICKS brickPtr
    95 op sub brickCount brickCount 1
-    * op sub __tmp60 x 4
-    * op greaterThan __tmp61 ballX __tmp60
-    * op add __tmp62 x 62.666666666666664
-    * op lessThan __tmp63 ballX __tmp62
+   96 op sub __tmp60 1 4
+   97 op greaterThan __tmp61 ballX -3
+   98 op add __tmp62 1 62.666666666666664
+   99 op lessThan __tmp63 ballX 63.666666666666664
   100 op land __tmp64 __tmp61 __tmp63
   101 jump __label40 equal __tmp64 false
   102 op mul ballVY ballVY -1
 
   110 label __label45
   111 op add brickPtr brickPtr 1
   112 label __label46
-    * op add x x 58.666666666666664
+  113 op add x 1 58.666666666666664
   114 label __label47
   115 read __tmp47 BRICKS brickPtr
   116 jump __label52 equal __tmp47 false
-    * draw rect x y 57.666666666666664 9
-    * op greaterThan __tmp49 ballXEnd x
-    * op add __tmp50 x 58.666666666666664
-    * op lessThan __tmp51 ballX __tmp50
+  117 draw rect 59.666666666666664 y 57.666666666666664 9
+  118 op greaterThan __tmp49 ballXEnd 59.666666666666664
+  119 op add __tmp50 59.666666666666664 58.666666666666664
+  120 op lessThan __tmp51 ballX 118.33333333333333
   121 op land __tmp52 __tmp49 __tmp51
   122 op greaterThan __tmp53 ballYEnd y
   123 op land __tmp54 __tmp52 __tmp53
 
   127 jump __label50 equal __tmp57 false
   128 write 0 BRICKS brickPtr
   129 op sub brickCount brickCount 1
-    * op sub __tmp60 x 4
-    * op greaterThan __tmp61 ballX __tmp60
-    * op add __tmp62 x 62.666666666666664
-    * op lessThan __tmp63 ballX __tmp62
+  130 op sub __tmp60 59.666666666666664 4
+  131 op greaterThan __tmp61 ballX 55.666666666666664
+  132 op add __tmp62 59.666666666666664 62.666666666666664
+  133 op lessThan __tmp63 ballX 122.33333333333333
   134 op land __tmp64 __tmp61 __tmp63
   135 jump __label48 equal __tmp64 false
   136 op mul ballVY ballVY -1
 
   144 label __label53
   145 op add brickPtr brickPtr 1
   146 label __label54
-    * op add x x 58.666666666666664
+  147 op add x 59.666666666666664 58.666666666666664
   148 label __label55
   149 read __tmp47 BRICKS brickPtr
   150 jump __label60 equal __tmp47 false
-    * draw rect x y 57.666666666666664 9
-    * op greaterThan __tmp49 ballXEnd x
-    * op add __tmp50 x 58.666666666666664
-    * op lessThan __tmp51 ballX __tmp50
+  151 draw rect 118.33333333333333 y 57.666666666666664 9
+  152 op greaterThan __tmp49 ballXEnd 118.33333333333333
+  153 op add __tmp50 118.33333333333333 58.666666666666664
+  154 op lessThan __tmp51 ballX 177
   155 op land __tmp52 __tmp49 __tmp51
   156 op greaterThan __tmp53 ballYEnd y
   157 op land __tmp54 __tmp52 __tmp53
 
   161 jump __label58 equal __tmp57 false
   162 write 0 BRICKS brickPtr
   163 op sub brickCount brickCount 1
-    * op sub __tmp60 x 4
-    * op greaterThan __tmp61 ballX __tmp60
-    * op add __tmp62 x 62.666666666666664
-    * op lessThan __tmp63 ballX __tmp62
+  164 op sub __tmp60 118.33333333333333 4
+  165 op greaterThan __tmp61 ballX 114.33333333333333
+  166 op add __tmp62 118.33333333333333 62.666666666666664
+  167 op lessThan __tmp63 ballX 181
   168 op land __tmp64 __tmp61 __tmp63
   169 jump __label56 equal __tmp64 false
   170 op mul ballVY ballVY -1
 
   178 label __label61
   179 op add brickPtr brickPtr 1
   180 label __label62
-    * op add x x 58.666666666666664
+  181 op add x 118.33333333333333 58.666666666666664
   182 label __label26
   183 label __label22
   184 op sub y y 10

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
    75 set y 126
    76 label __label21
    77 label __label36
-    * set x 1
    78 label __label38
    79 label __label39
    80 read __tmp47 BRICKS brickPtr
    81 jump __label44 equal __tmp47 false
    82 draw rect 1 y 57.666666666666664 9
    83 op greaterThan __tmp49 ballXEnd 1
-    * op add __tmp50 1 58.666666666666664
    84 op lessThan __tmp51 ballX 59.666666666666664
    85 op land __tmp52 __tmp49 __tmp51
    86 op greaterThan __tmp53 ballYEnd y
 
    91 jump __label42 equal __tmp57 false
    92 write 0 BRICKS brickPtr
    93 op sub brickCount brickCount 1
-    * op sub __tmp60 1 4
    94 op greaterThan __tmp61 ballX -3
-    * op add __tmp62 1 62.666666666666664
    95 op lessThan __tmp63 ballX 63.666666666666664
    96 op land __tmp64 __tmp61 __tmp63
    97 jump __label40 equal __tmp64 false
 
   106 label __label45
   107 op add brickPtr brickPtr 1
   108 label __label46
-    * op add x 1 58.666666666666664
   109 label __label47
   110 read __tmp47 BRICKS brickPtr
   111 jump __label52 equal __tmp47 false
   112 draw rect 59.666666666666664 y 57.666666666666664 9
   113 op greaterThan __tmp49 ballXEnd 59.666666666666664
-    * op add __tmp50 59.666666666666664 58.666666666666664
   114 op lessThan __tmp51 ballX 118.33333333333333
   115 op land __tmp52 __tmp49 __tmp51
   116 op greaterThan __tmp53 ballYEnd y
 
   121 jump __label50 equal __tmp57 false
   122 write 0 BRICKS brickPtr
   123 op sub brickCount brickCount 1
-    * op sub __tmp60 59.666666666666664 4
   124 op greaterThan __tmp61 ballX 55.666666666666664
-    * op add __tmp62 59.666666666666664 62.666666666666664
   125 op lessThan __tmp63 ballX 122.33333333333333
   126 op land __tmp64 __tmp61 __tmp63
   127 jump __label48 equal __tmp64 false
 
   136 label __label53
   137 op add brickPtr brickPtr 1
   138 label __label54
-    * op add x 59.666666666666664 58.666666666666664
   139 label __label55
   140 read __tmp47 BRICKS brickPtr
   141 jump __label60 equal __tmp47 false
   142 draw rect 118.33333333333333 y 57.666666666666664 9
   143 op greaterThan __tmp49 ballXEnd 118.33333333333333
-    * op add __tmp50 118.33333333333333 58.666666666666664
   144 op lessThan __tmp51 ballX 177
   145 op land __tmp52 __tmp49 __tmp51
   146 op greaterThan __tmp53 ballYEnd y
 
   151 jump __label58 equal __tmp57 false
   152 write 0 BRICKS brickPtr
   153 op sub brickCount brickCount 1
-    * op sub __tmp60 118.33333333333333 4
   154 op greaterThan __tmp61 ballX 114.33333333333333
-    * op add __tmp62 118.33333333333333 62.666666666666664
   155 op lessThan __tmp63 ballX 181
   156 op land __tmp64 __tmp61 __tmp63
   157 jump __label56 equal __tmp64 false
 
   166 label __label61
   167 op add brickPtr brickPtr 1
   168 label __label62
-    * op add x 118.33333333333333 58.666666666666664
   169 label __label26
   170 label __label22
   171 op sub y y 10

Modifications by Loop Unrolling: unroll loop at line 40 (+9 instructions):
 
    11 op rand __tmp4 10
    12 op sub ballVY __tmp4 5
    13 set brickCount 6
-    * set i 0
-    * label __label3
-    * label __label35
-    * write 1 BRICKS i
-    * label __label4
-    * op add i i 1
-    * jump __label35 lessThan i 6
-    * label __label5
+   14 set i 0
+   15 label __label63
+   16 label __label64
+   17 write 1 BRICKS i
+   18 label __label65
+   19 op add i i 1
+   20 label __label66
+   21 write 1 BRICKS i
+   22 label __label67
+   23 op add i i 1
+   24 label __label68
+   25 write 1 BRICKS i
+   26 label __label69
+   27 op add i i 1
+   28 label __label70
+   29 write 1 BRICKS i
+   30 label __label71
+   31 op add i i 1
+   32 label __label72
+   33 write 1 BRICKS i
+   34 label __label73
+   35 op add i i 1
+   36 label __label74
+   37 write 1 BRICKS i
+   38 label __label75
+   39 op add i i 1
+   40 label __label5
    41 label __label6
    42 draw clear 0 0 0
    43 draw rect paddleX 10 paddleWidth 5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    14 set i 0
    15 label __label63
    16 label __label64
-    * write 1 BRICKS i
+   17 write 1 BRICKS 0
    18 label __label65
-    * op add i i 1
+   19 op add i 0 1
    20 label __label66
-    * write 1 BRICKS i
+   21 write 1 BRICKS 1
    22 label __label67
-    * op add i i 1
+   23 op add i 1 1
    24 label __label68
-    * write 1 BRICKS i
+   25 write 1 BRICKS 2
    26 label __label69
-    * op add i i 1
+   27 op add i 2 1
    28 label __label70
-    * write 1 BRICKS i
+   29 write 1 BRICKS 3
    30 label __label71
-    * op add i i 1
+   31 op add i 3 1
    32 label __label72
-    * write 1 BRICKS i
+   33 write 1 BRICKS 4
    34 label __label73
-    * op add i i 1
+   35 op add i 4 1
    36 label __label74
-    * write 1 BRICKS i
+   37 write 1 BRICKS 5
    38 label __label75
-    * op add i i 1
+   39 op add i 5 1
    40 label __label5
    41 label __label6
    42 draw clear 0 0 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
    11 op rand __tmp4 10
    12 op sub ballVY __tmp4 5
    13 set brickCount 6
-    * set i 0
    14 label __label63
    15 label __label64
    16 write 1 BRICKS 0
    17 label __label65
-    * op add i 0 1
    18 label __label66
    19 write 1 BRICKS 1
    20 label __label67
-    * op add i 1 1
    21 label __label68
    22 write 1 BRICKS 2
    23 label __label69
-    * op add i 2 1
    24 label __label70
    25 write 1 BRICKS 3
    26 label __label71
-    * op add i 3 1
    27 label __label72
    28 write 1 BRICKS 4
    29 label __label73
-    * op add i 4 1
    30 label __label74
    31 write 1 BRICKS 5
    32 label __label75
-    * op add i 5 1
    33 label __label5
    34 label __label6
    35 draw clear 0 0 0

Modifications by Loop Unrolling: unroll loop at line 81 (+66 instructions):
 
    84 label __label19
    85 label __label20
    86 set brickPtr 0
-    * set y 126
-    * label __label21
-    * label __label36
-    * label __label38
-    * label __label39
-    * read __tmp47 BRICKS brickPtr
-    * jump __label44 equal __tmp47 false
-    * draw rect 1 y 57.666666666666664 9
-    * op greaterThan __tmp49 ballXEnd 1
-    * op lessThan __tmp51 ballX 59.666666666666664
-    * op land __tmp52 __tmp49 __tmp51
-    * op greaterThan __tmp53 ballYEnd y
-    * op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 y 10
-    * op lessThan __tmp56 ballY __tmp55
-    * op land __tmp57 __tmp54 __tmp56
-    * jump __label42 equal __tmp57 false
-    * write 0 BRICKS brickPtr
-    * op sub brickCount brickCount 1
-    * op greaterThan __tmp61 ballX -3
-    * op lessThan __tmp63 ballX 63.666666666666664
-    * op land __tmp64 __tmp61 __tmp63
-    * jump __label40 equal __tmp64 false
-    * op mul ballVY ballVY -1
-    * jump __label41 always
-    * label __label40
-    * op mul ballVX ballVX -1
-    * label __label41
-    * label __label42
-    * label __label43
-    * label __label44
-    * label __label45
-    * op add brickPtr brickPtr 1
-    * label __label46
-    * label __label47
-    * read __tmp47 BRICKS brickPtr
-    * jump __label52 equal __tmp47 false
-    * draw rect 59.666666666666664 y 57.666666666666664 9
-    * op greaterThan __tmp49 ballXEnd 59.666666666666664
-    * op lessThan __tmp51 ballX 118.33333333333333
-    * op land __tmp52 __tmp49 __tmp51
-    * op greaterThan __tmp53 ballYEnd y
-    * op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 y 10
-    * op lessThan __tmp56 ballY __tmp55
-    * op land __tmp57 __tmp54 __tmp56
-    * jump __label50 equal __tmp57 false
-    * write 0 BRICKS brickPtr
-    * op sub brickCount brickCount 1
-    * op greaterThan __tmp61 ballX 55.666666666666664
-    * op lessThan __tmp63 ballX 122.33333333333333
-    * op land __tmp64 __tmp61 __tmp63
-    * jump __label48 equal __tmp64 false
-    * op mul ballVY ballVY -1
-    * jump __label49 always
-    * label __label48
-    * op mul ballVX ballVX -1
-    * label __label49
-    * label __label50
-    * label __label51
-    * label __label52
-    * label __label53
-    * op add brickPtr brickPtr 1
-    * label __label54
-    * label __label55
-    * read __tmp47 BRICKS brickPtr
-    * jump __label60 equal __tmp47 false
-    * draw rect 118.33333333333333 y 57.666666666666664 9
-    * op greaterThan __tmp49 ballXEnd 118.33333333333333
-    * op lessThan __tmp51 ballX 177
-    * op land __tmp52 __tmp49 __tmp51
-    * op greaterThan __tmp53 ballYEnd y
-    * op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 y 10
-    * op lessThan __tmp56 ballY __tmp55
-    * op land __tmp57 __tmp54 __tmp56
-    * jump __label58 equal __tmp57 false
-    * write 0 BRICKS brickPtr
-    * op sub brickCount brickCount 1
-    * op greaterThan __tmp61 ballX 114.33333333333333
-    * op lessThan __tmp63 ballX 181
-    * op land __tmp64 __tmp61 __tmp63
-    * jump __label56 equal __tmp64 false
-    * op mul ballVY ballVY -1
-    * jump __label57 always
-    * label __label56
-    * op mul ballVX ballVX -1
-    * label __label57
-    * label __label58
-    * label __label59
-    * label __label60
-    * label __label61
-    * op add brickPtr brickPtr 1
-    * label __label62
-    * label __label26
-    * label __label22
-    * op sub y y 10
-    * jump __label36 greaterThan y 106
-    * label __label23
+   87 set y 126
+   88 label __label76
+   89 label __label77
+   90 label __label78
+   91 label __label79
+   92 read __tmp47 BRICKS brickPtr
+   93 jump __label84 equal __tmp47 false
+   94 draw rect 1 y 57.666666666666664 9
+   95 op greaterThan __tmp49 ballXEnd 1
+   96 op lessThan __tmp51 ballX 59.666666666666664
+   97 op land __tmp52 __tmp49 __tmp51
+   98 op greaterThan __tmp53 ballYEnd y
+   99 op land __tmp54 __tmp52 __tmp53
+  100 op add __tmp55 y 10
+  101 op lessThan __tmp56 ballY __tmp55
+  102 op land __tmp57 __tmp54 __tmp56
+  103 jump __label82 equal __tmp57 false
+  104 write 0 BRICKS brickPtr
+  105 op sub brickCount brickCount 1
+  106 op greaterThan __tmp61 ballX -3
+  107 op lessThan __tmp63 ballX 63.666666666666664
+  108 op land __tmp64 __tmp61 __tmp63
+  109 jump __label80 equal __tmp64 false
+  110 op mul ballVY ballVY -1
+  111 jump __label81 always
+  112 label __label80
+  113 op mul ballVX ballVX -1
+  114 label __label81
+  115 label __label82
+  116 label __label83
+  117 label __label84
+  118 label __label85
+  119 op add brickPtr brickPtr 1
+  120 label __label86
+  121 label __label87
+  122 read __tmp47 BRICKS brickPtr
+  123 jump __label92 equal __tmp47 false
+  124 draw rect 59.666666666666664 y 57.666666666666664 9
+  125 op greaterThan __tmp49 ballXEnd 59.666666666666664
+  126 op lessThan __tmp51 ballX 118.33333333333333
+  127 op land __tmp52 __tmp49 __tmp51
+  128 op greaterThan __tmp53 ballYEnd y
+  129 op land __tmp54 __tmp52 __tmp53
+  130 op add __tmp55 y 10
+  131 op lessThan __tmp56 ballY __tmp55
+  132 op land __tmp57 __tmp54 __tmp56
+  133 jump __label90 equal __tmp57 false
+  134 write 0 BRICKS brickPtr
+  135 op sub brickCount brickCount 1
+  136 op greaterThan __tmp61 ballX 55.666666666666664
+  137 op lessThan __tmp63 ballX 122.33333333333333
+  138 op land __tmp64 __tmp61 __tmp63
+  139 jump __label88 equal __tmp64 false
+  140 op mul ballVY ballVY -1
+  141 jump __label89 always
+  142 label __label88
+  143 op mul ballVX ballVX -1
+  144 label __label89
+  145 label __label90
+  146 label __label91
+  147 label __label92
+  148 label __label93
+  149 op add brickPtr brickPtr 1
+  150 label __label94
+  151 label __label95
+  152 read __tmp47 BRICKS brickPtr
+  153 jump __label100 equal __tmp47 false
+  154 draw rect 118.33333333333333 y 57.666666666666664 9
+  155 op greaterThan __tmp49 ballXEnd 118.33333333333333
+  156 op lessThan __tmp51 ballX 177
+  157 op land __tmp52 __tmp49 __tmp51
+  158 op greaterThan __tmp53 ballYEnd y
+  159 op land __tmp54 __tmp52 __tmp53
+  160 op add __tmp55 y 10
+  161 op lessThan __tmp56 ballY __tmp55
+  162 op land __tmp57 __tmp54 __tmp56
+  163 jump __label98 equal __tmp57 false
+  164 write 0 BRICKS brickPtr
+  165 op sub brickCount brickCount 1
+  166 op greaterThan __tmp61 ballX 114.33333333333333
+  167 op lessThan __tmp63 ballX 181
+  168 op land __tmp64 __tmp61 __tmp63
+  169 jump __label96 equal __tmp64 false
+  170 op mul ballVY ballVY -1
+  171 jump __label97 always
+  172 label __label96
+  173 op mul ballVX ballVX -1
+  174 label __label97
+  175 label __label98
+  176 label __label99
+  177 label __label100
+  178 label __label101
+  179 op add brickPtr brickPtr 1
+  180 label __label102
+  181 label __label103
+  182 label __label104
+  183 op sub y y 10
+  184 label __label105
+  185 label __label106
+  186 label __label107
+  187 read __tmp47 BRICKS brickPtr
+  188 jump __label112 equal __tmp47 false
+  189 draw rect 1 y 57.666666666666664 9
+  190 op greaterThan __tmp49 ballXEnd 1
+  191 op lessThan __tmp51 ballX 59.666666666666664
+  192 op land __tmp52 __tmp49 __tmp51
+  193 op greaterThan __tmp53 ballYEnd y
+  194 op land __tmp54 __tmp52 __tmp53
+  195 op add __tmp55 y 10
+  196 op lessThan __tmp56 ballY __tmp55
+  197 op land __tmp57 __tmp54 __tmp56
+  198 jump __label110 equal __tmp57 false
+  199 write 0 BRICKS brickPtr
+  200 op sub brickCount brickCount 1
+  201 op greaterThan __tmp61 ballX -3
+  202 op lessThan __tmp63 ballX 63.666666666666664
+  203 op land __tmp64 __tmp61 __tmp63
+  204 jump __label108 equal __tmp64 false
+  205 op mul ballVY ballVY -1
+  206 jump __label109 always
+  207 label __label108
+  208 op mul ballVX ballVX -1
+  209 label __label109
+  210 label __label110
+  211 label __label111
+  212 label __label112
+  213 label __label113
+  214 op add brickPtr brickPtr 1
+  215 label __label114
+  216 label __label115
+  217 read __tmp47 BRICKS brickPtr
+  218 jump __label120 equal __tmp47 false
+  219 draw rect 59.666666666666664 y 57.666666666666664 9
+  220 op greaterThan __tmp49 ballXEnd 59.666666666666664
+  221 op lessThan __tmp51 ballX 118.33333333333333
+  222 op land __tmp52 __tmp49 __tmp51
+  223 op greaterThan __tmp53 ballYEnd y
+  224 op land __tmp54 __tmp52 __tmp53
+  225 op add __tmp55 y 10
+  226 op lessThan __tmp56 ballY __tmp55
+  227 op land __tmp57 __tmp54 __tmp56
+  228 jump __label118 equal __tmp57 false
+  229 write 0 BRICKS brickPtr
+  230 op sub brickCount brickCount 1
+  231 op greaterThan __tmp61 ballX 55.666666666666664
+  232 op lessThan __tmp63 ballX 122.33333333333333
+  233 op land __tmp64 __tmp61 __tmp63
+  234 jump __label116 equal __tmp64 false
+  235 op mul ballVY ballVY -1
+  236 jump __label117 always
+  237 label __label116
+  238 op mul ballVX ballVX -1
+  239 label __label117
+  240 label __label118
+  241 label __label119
+  242 label __label120
+  243 label __label121
+  244 op add brickPtr brickPtr 1
+  245 label __label122
+  246 label __label123
+  247 read __tmp47 BRICKS brickPtr
+  248 jump __label128 equal __tmp47 false
+  249 draw rect 118.33333333333333 y 57.666666666666664 9
+  250 op greaterThan __tmp49 ballXEnd 118.33333333333333
+  251 op lessThan __tmp51 ballX 177
+  252 op land __tmp52 __tmp49 __tmp51
+  253 op greaterThan __tmp53 ballYEnd y
+  254 op land __tmp54 __tmp52 __tmp53
+  255 op add __tmp55 y 10
+  256 op lessThan __tmp56 ballY __tmp55
+  257 op land __tmp57 __tmp54 __tmp56
+  258 jump __label126 equal __tmp57 false
+  259 write 0 BRICKS brickPtr
+  260 op sub brickCount brickCount 1
+  261 op greaterThan __tmp61 ballX 114.33333333333333
+  262 op lessThan __tmp63 ballX 181
+  263 op land __tmp64 __tmp61 __tmp63
+  264 jump __label124 equal __tmp64 false
+  265 op mul ballVY ballVY -1
+  266 jump __label125 always
+  267 label __label124
+  268 op mul ballVX ballVX -1
+  269 label __label125
+  270 label __label126
+  271 label __label127
+  272 label __label128
+  273 label __label129
+  274 op add brickPtr brickPtr 1
+  275 label __label130
+  276 label __label131
+  277 label __label132
+  278 op sub y y 10
+  279 label __label23
   280 op lessThan __tmp71 ballY 0
   281 op equal __tmp72 brickCount 0
   282 op or __tmp73 __tmp71 __tmp72

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    89 label __label77
    90 label __label78
    91 label __label79
-    * read __tmp47 BRICKS brickPtr
+   92 read __tmp47 BRICKS 0
    93 jump __label84 equal __tmp47 false
-    * draw rect 1 y 57.666666666666664 9
+   94 draw rect 1 126 57.666666666666664 9
    95 op greaterThan __tmp49 ballXEnd 1
    96 op lessThan __tmp51 ballX 59.666666666666664
    97 op land __tmp52 __tmp49 __tmp51
-    * op greaterThan __tmp53 ballYEnd y
+   98 op greaterThan __tmp53 ballYEnd 126
    99 op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 y 10
-    * op lessThan __tmp56 ballY __tmp55
+  100 op add __tmp55 126 10
+  101 op lessThan __tmp56 ballY 136
   102 op land __tmp57 __tmp54 __tmp56
   103 jump __label82 equal __tmp57 false
-    * write 0 BRICKS brickPtr
+  104 write 0 BRICKS 0
   105 op sub brickCount brickCount 1
   106 op greaterThan __tmp61 ballX -3
   107 op lessThan __tmp63 ballX 63.666666666666664
 
   116 label __label83
   117 label __label84
   118 label __label85
-    * op add brickPtr brickPtr 1
+  119 op add brickPtr 0 1
   120 label __label86
   121 label __label87
-    * read __tmp47 BRICKS brickPtr
+  122 read __tmp47 BRICKS 1
   123 jump __label92 equal __tmp47 false
-    * draw rect 59.666666666666664 y 57.666666666666664 9
+  124 draw rect 59.666666666666664 126 57.666666666666664 9
   125 op greaterThan __tmp49 ballXEnd 59.666666666666664
   126 op lessThan __tmp51 ballX 118.33333333333333
   127 op land __tmp52 __tmp49 __tmp51
-    * op greaterThan __tmp53 ballYEnd y
+  128 op greaterThan __tmp53 ballYEnd 126
   129 op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 y 10
-    * op lessThan __tmp56 ballY __tmp55
+  130 op add __tmp55 126 10
+  131 op lessThan __tmp56 ballY 136
   132 op land __tmp57 __tmp54 __tmp56
   133 jump __label90 equal __tmp57 false
-    * write 0 BRICKS brickPtr
+  134 write 0 BRICKS 1
   135 op sub brickCount brickCount 1
   136 op greaterThan __tmp61 ballX 55.666666666666664
   137 op lessThan __tmp63 ballX 122.33333333333333
 
   146 label __label91
   147 label __label92
   148 label __label93
-    * op add brickPtr brickPtr 1
+  149 op add brickPtr 1 1
   150 label __label94
   151 label __label95
-    * read __tmp47 BRICKS brickPtr
+  152 read __tmp47 BRICKS 2
   153 jump __label100 equal __tmp47 false
-    * draw rect 118.33333333333333 y 57.666666666666664 9
+  154 draw rect 118.33333333333333 126 57.666666666666664 9
   155 op greaterThan __tmp49 ballXEnd 118.33333333333333
   156 op lessThan __tmp51 ballX 177
   157 op land __tmp52 __tmp49 __tmp51
-    * op greaterThan __tmp53 ballYEnd y
+  158 op greaterThan __tmp53 ballYEnd 126
   159 op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 y 10
-    * op lessThan __tmp56 ballY __tmp55
+  160 op add __tmp55 126 10
+  161 op lessThan __tmp56 ballY 136
   162 op land __tmp57 __tmp54 __tmp56
   163 jump __label98 equal __tmp57 false
-    * write 0 BRICKS brickPtr
+  164 write 0 BRICKS 2
   165 op sub brickCount brickCount 1
   166 op greaterThan __tmp61 ballX 114.33333333333333
   167 op lessThan __tmp63 ballX 181
 
   176 label __label99
   177 label __label100
   178 label __label101
-    * op add brickPtr brickPtr 1
+  179 op add brickPtr 2 1
   180 label __label102
   181 label __label103
   182 label __label104
-    * op sub y y 10
+  183 op sub y 126 10
   184 label __label105
   185 label __label106
   186 label __label107
-    * read __tmp47 BRICKS brickPtr
+  187 read __tmp47 BRICKS 3
   188 jump __label112 equal __tmp47 false
-    * draw rect 1 y 57.666666666666664 9
+  189 draw rect 1 116 57.666666666666664 9
   190 op greaterThan __tmp49 ballXEnd 1
   191 op lessThan __tmp51 ballX 59.666666666666664
   192 op land __tmp52 __tmp49 __tmp51
-    * op greaterThan __tmp53 ballYEnd y
+  193 op greaterThan __tmp53 ballYEnd 116
   194 op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 y 10
-    * op lessThan __tmp56 ballY __tmp55
+  195 op add __tmp55 116 10
+  196 op lessThan __tmp56 ballY 126
   197 op land __tmp57 __tmp54 __tmp56
   198 jump __label110 equal __tmp57 false
-    * write 0 BRICKS brickPtr
+  199 write 0 BRICKS 3
   200 op sub brickCount brickCount 1
   201 op greaterThan __tmp61 ballX -3
   202 op lessThan __tmp63 ballX 63.666666666666664
 
   211 label __label111
   212 label __label112
   213 label __label113
-    * op add brickPtr brickPtr 1
+  214 op add brickPtr 3 1
   215 label __label114
   216 label __label115
-    * read __tmp47 BRICKS brickPtr
+  217 read __tmp47 BRICKS 4
   218 jump __label120 equal __tmp47 false
-    * draw rect 59.666666666666664 y 57.666666666666664 9
+  219 draw rect 59.666666666666664 116 57.666666666666664 9
   220 op greaterThan __tmp49 ballXEnd 59.666666666666664
   221 op lessThan __tmp51 ballX 118.33333333333333
   222 op land __tmp52 __tmp49 __tmp51
-    * op greaterThan __tmp53 ballYEnd y
+  223 op greaterThan __tmp53 ballYEnd 116
   224 op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 y 10
-    * op lessThan __tmp56 ballY __tmp55
+  225 op add __tmp55 116 10
+  226 op lessThan __tmp56 ballY 126
   227 op land __tmp57 __tmp54 __tmp56
   228 jump __label118 equal __tmp57 false
-    * write 0 BRICKS brickPtr
+  229 write 0 BRICKS 4
   230 op sub brickCount brickCount 1
   231 op greaterThan __tmp61 ballX 55.666666666666664
   232 op lessThan __tmp63 ballX 122.33333333333333
 
   241 label __label119
   242 label __label120
   243 label __label121
-    * op add brickPtr brickPtr 1
+  244 op add brickPtr 4 1
   245 label __label122
   246 label __label123
-    * read __tmp47 BRICKS brickPtr
+  247 read __tmp47 BRICKS 5
   248 jump __label128 equal __tmp47 false
-    * draw rect 118.33333333333333 y 57.666666666666664 9
+  249 draw rect 118.33333333333333 116 57.666666666666664 9
   250 op greaterThan __tmp49 ballXEnd 118.33333333333333
   251 op lessThan __tmp51 ballX 177
   252 op land __tmp52 __tmp49 __tmp51
-    * op greaterThan __tmp53 ballYEnd y
+  253 op greaterThan __tmp53 ballYEnd 116
   254 op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 y 10
-    * op lessThan __tmp56 ballY __tmp55
+  255 op add __tmp55 116 10
+  256 op lessThan __tmp56 ballY 126
   257 op land __tmp57 __tmp54 __tmp56
   258 jump __label126 equal __tmp57 false
-    * write 0 BRICKS brickPtr
+  259 write 0 BRICKS 5
   260 op sub brickCount brickCount 1
   261 op greaterThan __tmp61 ballX 114.33333333333333
   262 op lessThan __tmp63 ballX 181
 
   271 label __label127
   272 label __label128
   273 label __label129
-    * op add brickPtr brickPtr 1
+  274 op add brickPtr 5 1
   275 label __label130
   276 label __label131
   277 label __label132
-    * op sub y y 10
+  278 op sub y 116 10
   279 label __label23
   280 op lessThan __tmp71 ballY 0
   281 op equal __tmp72 brickCount 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-16 instructions):
 
    83 op sub paddleWidth paddleWidth 1
    84 label __label19
    85 label __label20
-    * set brickPtr 0
-    * set y 126
    86 label __label76
    87 label __label77
    88 label __label78
 
    95 op land __tmp52 __tmp49 __tmp51
    96 op greaterThan __tmp53 ballYEnd 126
    97 op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 126 10
    98 op lessThan __tmp56 ballY 136
    99 op land __tmp57 __tmp54 __tmp56
   100 jump __label82 equal __tmp57 false
 
   113 label __label83
   114 label __label84
   115 label __label85
-    * op add brickPtr 0 1
   116 label __label86
   117 label __label87
   118 read __tmp47 BRICKS 1
 
   123 op land __tmp52 __tmp49 __tmp51
   124 op greaterThan __tmp53 ballYEnd 126
   125 op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 126 10
   126 op lessThan __tmp56 ballY 136
   127 op land __tmp57 __tmp54 __tmp56
   128 jump __label90 equal __tmp57 false
 
   141 label __label91
   142 label __label92
   143 label __label93
-    * op add brickPtr 1 1
   144 label __label94
   145 label __label95
   146 read __tmp47 BRICKS 2
 
   151 op land __tmp52 __tmp49 __tmp51
   152 op greaterThan __tmp53 ballYEnd 126
   153 op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 126 10
   154 op lessThan __tmp56 ballY 136
   155 op land __tmp57 __tmp54 __tmp56
   156 jump __label98 equal __tmp57 false
 
   169 label __label99
   170 label __label100
   171 label __label101
-    * op add brickPtr 2 1
   172 label __label102
   173 label __label103
   174 label __label104
-    * op sub y 126 10
   175 label __label105
   176 label __label106
   177 label __label107
 
   183 op land __tmp52 __tmp49 __tmp51
   184 op greaterThan __tmp53 ballYEnd 116
   185 op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 116 10
   186 op lessThan __tmp56 ballY 126
   187 op land __tmp57 __tmp54 __tmp56
   188 jump __label110 equal __tmp57 false
 
   201 label __label111
   202 label __label112
   203 label __label113
-    * op add brickPtr 3 1
   204 label __label114
   205 label __label115
   206 read __tmp47 BRICKS 4
 
   211 op land __tmp52 __tmp49 __tmp51
   212 op greaterThan __tmp53 ballYEnd 116
   213 op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 116 10
   214 op lessThan __tmp56 ballY 126
   215 op land __tmp57 __tmp54 __tmp56
   216 jump __label118 equal __tmp57 false
 
   229 label __label119
   230 label __label120
   231 label __label121
-    * op add brickPtr 4 1
   232 label __label122
   233 label __label123
   234 read __tmp47 BRICKS 5
 
   239 op land __tmp52 __tmp49 __tmp51
   240 op greaterThan __tmp53 ballYEnd 116
   241 op land __tmp54 __tmp52 __tmp53
-    * op add __tmp55 116 10
   242 op lessThan __tmp56 ballY 126
   243 op land __tmp57 __tmp54 __tmp56
   244 jump __label126 equal __tmp57 false
 
   257 label __label127
   258 label __label128
   259 label __label129
-    * op add brickPtr 5 1
   260 label __label130
   261 label __label131
   262 label __label132
-    * op sub y 116 10
   263 label __label23
   264 op lessThan __tmp71 ballY 0
   265 op equal __tmp72 brickCount 0

Modifications by Final phase, Jump Straightening, iteration 1 (-1 instructions):
 
   264 op lessThan __tmp71 ballY 0
   265 op equal __tmp72 brickCount 0
   266 op or __tmp73 __tmp71 __tmp72
-    * jump __label33 equal __tmp73 false
-    * jump __label8 always
+  267 jump __label8 notEqual __tmp73 false
   268 label __label33
   269 label __label34
   270 drawflush DISPLAY

Modifications by Final phase, Jump Threading, iteration 1:
 
    38 sensor __tmp6 PADDLECONTROLLER @enabled
    39 jump __label9 equal __tmp6 false
    40 op sub __tmp8 176 paddleWidth
-    * jump __label11 greaterThanEq paddleX __tmp8
+   41 jump __label10 greaterThanEq paddleX __tmp8
    42 op add paddleX paddleX 3
    43 label __label11
    44 label __label12
 
   264 op lessThan __tmp71 ballY 0
   265 op equal __tmp72 brickCount 0
   266 op or __tmp73 __tmp71 __tmp72
-    * jump __label8 notEqual __tmp73 false
+  267 jump __label0 notEqual __tmp73 false
   268 label __label33
   269 label __label34
   270 drawflush DISPLAY

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-2 instructions):
 
   270 drawflush DISPLAY
   271 label __label7
   272 jump __label6 always
-    * label __label8
-    * label __label1
-    * jump __label0 always
-    * label __label2
-    * end

Final code before resolving virtual instructions:

    0:  set BRICKS bank1                                             param BRICKS = bank1;
    1:  set DISPLAY display1                                         param DISPLAY = display1;
    2:  set PADDLECONTROLLER switch1                                 param PADDLECONTROLLER = switch1;
    3:  draw color 255 255 255 255 0 0                               color(255, 255, 255, 255);
        label __label0                                               while true do
    4:  set paddleWidth 40                                           paddleWidth = 40;
    5:  op sub paddleX 88 20                                         paddleX = size / 2 - paddleWidth / 2;
    6:  set ballX 88                                                 ballX = size / 2;
    7:  set ballY 88                                                 ballY = size / 2;
    8:  op rand __tmp2 10 0                                          ballVX = rand(ballMaxStartSpeed * 2) - ballMaxStartSpeed;
    9:  op sub ballVX __tmp2 5                                       ...
   10:  op rand __tmp4 10 0                                          ballVY = rand(ballMaxStartSpeed * 2) - ballMaxStartSpeed;
   11:  op sub ballVY __tmp4 5                                       ...
   12:  set brickCount 6                                             brickCount = brickTotal;
   13:  write 1 BRICKS 0                                             BRICKS[i] = 1;
   14:  write 1 BRICKS 1                                             ...
   15:  write 1 BRICKS 2                                             ...
   16:  write 1 BRICKS 3                                             ...
   17:  write 1 BRICKS 4                                             ...
   18:  write 1 BRICKS 5                                             ...
        label __label6                                               while true do
   19:  draw clear 0 0 0 0 0 0                                       clear(0, 0, 0);
   20:  draw rect paddleX 10 paddleWidth 5 0 0                       rect(paddleX, paddleY, paddleWidth, paddleHeight);
   21:  draw rect ballX ballY 5 5 0 0                                rect(ballX, ballY, ballSize, ballSize);
   22:  sensor __tmp6 PADDLECONTROLLER @enabled                      if PADDLECONTROLLER.@enabled then
   23:  jump __label9 equal __tmp6 false                             ...
   24:  op sub __tmp8 176 paddleWidth                                if paddleX < size - paddleWidth then
   25:  jump __label10 greaterThanEq paddleX __tmp8                  ...
   26:  op add paddleX paddleX 3                                     paddleX += paddleSpeed;
   27:  jump __label10 always 0 0                                    if PADDLECONTROLLER.@enabled then
        label __label9                                               ...
   28:  jump __label13 lessThanEq paddleX 0                          elsif paddleX > 0 then
   29:  op sub paddleX paddleX 3                                     paddleX -= paddleSpeed;
        label __label13                                              elsif paddleX > 0 then
        label __label10                                              if PADDLECONTROLLER.@enabled then
   30:  op add ballX ballX ballVX                                    ballX += ballVX;
   31:  op add ballY ballY ballVY                                    ballY += ballVY;
   32:  op add ballXEnd ballX 5                                      ballXEnd = ballX + ballSize;
   33:  op add ballYEnd ballY 5                                      ballYEnd = ballY + ballSize;
   34:  op lessThan __tmp19 ballX 0                                  if ballX < 0 || ballXEnd > size then
   35:  op greaterThan __tmp20 ballXEnd 176                          ...
   36:  op or __tmp21 __tmp19 __tmp20                                ...
   37:  jump __label15 equal __tmp21 false                           ...
   38:  op mul ballVX ballVX -1                                      ballVX *= -1;
        label __label15                                              if ballX < 0 || ballXEnd > size then
   39:  jump __label17 lessThanEq ballYEnd 176                       if ballYEnd > size then
   40:  op mul ballVY ballVY -1                                      ballVY *= -1;
        label __label17                                              if ballYEnd > size then
   41:  op greaterThan __tmp28 ballXEnd paddleX                      if ballXEnd > paddleX && ballX < paddleX + paddleWidth && ballYEnd > paddleY && ballY < paddleY + paddleHeight then
   42:  op add __tmp29 paddleX paddleWidth                           ...
   43:  op lessThan __tmp30 ballX __tmp29                            ...
   44:  op land __tmp31 __tmp28 __tmp30                              ...
   45:  op greaterThan __tmp32 ballYEnd 10                           ...
   46:  op land __tmp33 __tmp31 __tmp32                              ...
   47:  op lessThan __tmp34 ballY 15                                 ...
   48:  op land __tmp35 __tmp33 __tmp34                              ...
   49:  jump __label19 equal __tmp35 false                           ...
   50:  op mul ballVY ballVY -1.1                                    ballVY *= -1.1;
   51:  op add __tmp38 ballX 2.5                                     ballVX += (ballX + ballSize / 2 - paddleX + paddleWidth / 2) / 10;
   52:  op sub __tmp39 __tmp38 paddleX                               ...
   53:  op div __tmp40 paddleWidth 2                                 ...
   54:  op add __tmp41 __tmp39 __tmp40                               ...
   55:  op div __tmp42 __tmp41 10                                    ...
   56:  op add ballVX ballVX __tmp42                                 ...
   57:  op sub paddleWidth paddleWidth 1                             paddleWidth -= 1;
        label __label19                                              if ballXEnd > paddleX && ballX < paddleX + paddleWidth && ballYEnd > paddleY && ballY < paddleY + paddleHeight then
   58:  read __tmp47 BRICKS 0                                        if BRICKS[brickPtr] then
   59:  jump __label84 equal __tmp47 false                           ...
   60:  draw rect 1 126 57.666666666666664 9 0 0                     rect(x, y, brickWidth - 1, brickHeight - 1);
   61:  op greaterThan __tmp49 ballXEnd 1                            ballXEnd > x &&
   62:  op lessThan __tmp51 ballX 59.666666666666664                 ballX < x + brickWidth &&
   63:  op land __tmp52 __tmp49 __tmp51                              ballXEnd > x &&
   64:  op greaterThan __tmp53 ballYEnd 126                          ballYEnd > y &&
   65:  op land __tmp54 __tmp52 __tmp53                              ballXEnd > x &&
   66:  op lessThan __tmp56 ballY 136                                ballY < y + brickHeight
   67:  op land __tmp57 __tmp54 __tmp56                              ballXEnd > x &&
   68:  jump __label82 equal __tmp57 false                           if
   69:  write 0 BRICKS 0                                             BRICKS[brickPtr] = 0;
   70:  op sub brickCount brickCount 1                               brickCount -= 1;
   71:  op greaterThan __tmp61 ballX -3                              ballX > x - ballSizeMinus1 &&
   72:  op lessThan __tmp63 ballX 63.666666666666664                 ballX < x + brickWidthPlusBallSizeMinus1
   73:  op land __tmp64 __tmp61 __tmp63                              ballX > x - ballSizeMinus1 &&
   74:  jump __label80 equal __tmp64 false                           if
   75:  op mul ballVY ballVY -1                                      ballVY *= -1;
   76:  jump __label81 always 0 0                                    if
        label __label80                                              ...
   77:  op mul ballVX ballVX -1                                      ballVX *= -1;
        label __label81                                              if
        label __label82                                              if
        label __label84                                              if BRICKS[brickPtr] then
   78:  read __tmp47 BRICKS 1                                        ...
   79:  jump __label92 equal __tmp47 false                           ...
   80:  draw rect 59.666666666666664 126 57.666666666666664 9 0 0    rect(x, y, brickWidth - 1, brickHeight - 1);
   81:  op greaterThan __tmp49 ballXEnd 59.666666666666664           ballXEnd > x &&
   82:  op lessThan __tmp51 ballX 118.33333333333333                 ballX < x + brickWidth &&
   83:  op land __tmp52 __tmp49 __tmp51                              ballXEnd > x &&
   84:  op greaterThan __tmp53 ballYEnd 126                          ballYEnd > y &&
   85:  op land __tmp54 __tmp52 __tmp53                              ballXEnd > x &&
   86:  op lessThan __tmp56 ballY 136                                ballY < y + brickHeight
   87:  op land __tmp57 __tmp54 __tmp56                              ballXEnd > x &&
   88:  jump __label90 equal __tmp57 false                           if
   89:  write 0 BRICKS 1                                             BRICKS[brickPtr] = 0;
   90:  op sub brickCount brickCount 1                               brickCount -= 1;
   91:  op greaterThan __tmp61 ballX 55.666666666666664              ballX > x - ballSizeMinus1 &&
   92:  op lessThan __tmp63 ballX 122.33333333333333                 ballX < x + brickWidthPlusBallSizeMinus1
   93:  op land __tmp64 __tmp61 __tmp63                              ballX > x - ballSizeMinus1 &&
   94:  jump __label88 equal __tmp64 false                           if
   95:  op mul ballVY ballVY -1                                      ballVY *= -1;
   96:  jump __label89 always 0 0                                    if
        label __label88                                              ...
   97:  op mul ballVX ballVX -1                                      ballVX *= -1;
        label __label89                                              if
        label __label90                                              if
        label __label92                                              if BRICKS[brickPtr] then
   98:  read __tmp47 BRICKS 2                                        ...
   99:  jump __label100 equal __tmp47 false                          ...
  100:  draw rect 118.33333333333333 126 57.666666666666664 9 0 0    rect(x, y, brickWidth - 1, brickHeight - 1);
  101:  op greaterThan __tmp49 ballXEnd 118.33333333333333           ballXEnd > x &&
  102:  op lessThan __tmp51 ballX 177                                ballX < x + brickWidth &&
  103:  op land __tmp52 __tmp49 __tmp51                              ballXEnd > x &&
  104:  op greaterThan __tmp53 ballYEnd 126                          ballYEnd > y &&
  105:  op land __tmp54 __tmp52 __tmp53                              ballXEnd > x &&
  106:  op lessThan __tmp56 ballY 136                                ballY < y + brickHeight
  107:  op land __tmp57 __tmp54 __tmp56                              ballXEnd > x &&
  108:  jump __label98 equal __tmp57 false                           if
  109:  write 0 BRICKS 2                                             BRICKS[brickPtr] = 0;
  110:  op sub brickCount brickCount 1                               brickCount -= 1;
  111:  op greaterThan __tmp61 ballX 114.33333333333333              ballX > x - ballSizeMinus1 &&
  112:  op lessThan __tmp63 ballX 181                                ballX < x + brickWidthPlusBallSizeMinus1
  113:  op land __tmp64 __tmp61 __tmp63                              ballX > x - ballSizeMinus1 &&
  114:  jump __label96 equal __tmp64 false                           if
  115:  op mul ballVY ballVY -1                                      ballVY *= -1;
  116:  jump __label97 always 0 0                                    if
        label __label96                                              ...
  117:  op mul ballVX ballVX -1                                      ballVX *= -1;
        label __label97                                              if
        label __label98                                              if
        label __label100                                             if BRICKS[brickPtr] then
  118:  read __tmp47 BRICKS 3                                        ...
  119:  jump __label112 equal __tmp47 false                          ...
  120:  draw rect 1 116 57.666666666666664 9 0 0                     rect(x, y, brickWidth - 1, brickHeight - 1);
  121:  op greaterThan __tmp49 ballXEnd 1                            ballXEnd > x &&
  122:  op lessThan __tmp51 ballX 59.666666666666664                 ballX < x + brickWidth &&
  123:  op land __tmp52 __tmp49 __tmp51                              ballXEnd > x &&
  124:  op greaterThan __tmp53 ballYEnd 116                          ballYEnd > y &&
  125:  op land __tmp54 __tmp52 __tmp53                              ballXEnd > x &&
  126:  op lessThan __tmp56 ballY 126                                ballY < y + brickHeight
  127:  op land __tmp57 __tmp54 __tmp56                              ballXEnd > x &&
  128:  jump __label110 equal __tmp57 false                          if
  129:  write 0 BRICKS 3                                             BRICKS[brickPtr] = 0;
  130:  op sub brickCount brickCount 1                               brickCount -= 1;
  131:  op greaterThan __tmp61 ballX -3                              ballX > x - ballSizeMinus1 &&
  132:  op lessThan __tmp63 ballX 63.666666666666664                 ballX < x + brickWidthPlusBallSizeMinus1
  133:  op land __tmp64 __tmp61 __tmp63                              ballX > x - ballSizeMinus1 &&
  134:  jump __label108 equal __tmp64 false                          if
  135:  op mul ballVY ballVY -1                                      ballVY *= -1;
  136:  jump __label109 always 0 0                                   if
        label __label108                                             ...
  137:  op mul ballVX ballVX -1                                      ballVX *= -1;
        label __label109                                             if
        label __label110                                             if
        label __label112                                             if BRICKS[brickPtr] then
  138:  read __tmp47 BRICKS 4                                        ...
  139:  jump __label120 equal __tmp47 false                          ...
  140:  draw rect 59.666666666666664 116 57.666666666666664 9 0 0    rect(x, y, brickWidth - 1, brickHeight - 1);
  141:  op greaterThan __tmp49 ballXEnd 59.666666666666664           ballXEnd > x &&
  142:  op lessThan __tmp51 ballX 118.33333333333333                 ballX < x + brickWidth &&
  143:  op land __tmp52 __tmp49 __tmp51                              ballXEnd > x &&
  144:  op greaterThan __tmp53 ballYEnd 116                          ballYEnd > y &&
  145:  op land __tmp54 __tmp52 __tmp53                              ballXEnd > x &&
  146:  op lessThan __tmp56 ballY 126                                ballY < y + brickHeight
  147:  op land __tmp57 __tmp54 __tmp56                              ballXEnd > x &&
  148:  jump __label118 equal __tmp57 false                          if
  149:  write 0 BRICKS 4                                             BRICKS[brickPtr] = 0;
  150:  op sub brickCount brickCount 1                               brickCount -= 1;
  151:  op greaterThan __tmp61 ballX 55.666666666666664              ballX > x - ballSizeMinus1 &&
  152:  op lessThan __tmp63 ballX 122.33333333333333                 ballX < x + brickWidthPlusBallSizeMinus1
  153:  op land __tmp64 __tmp61 __tmp63                              ballX > x - ballSizeMinus1 &&
  154:  jump __label116 equal __tmp64 false                          if
  155:  op mul ballVY ballVY -1                                      ballVY *= -1;
  156:  jump __label117 always 0 0                                   if
        label __label116                                             ...
  157:  op mul ballVX ballVX -1                                      ballVX *= -1;
        label __label117                                             if
        label __label118                                             if
        label __label120                                             if BRICKS[brickPtr] then
  158:  read __tmp47 BRICKS 5                                        ...
  159:  jump __label128 equal __tmp47 false                          ...
  160:  draw rect 118.33333333333333 116 57.666666666666664 9 0 0    rect(x, y, brickWidth - 1, brickHeight - 1);
  161:  op greaterThan __tmp49 ballXEnd 118.33333333333333           ballXEnd > x &&
  162:  op lessThan __tmp51 ballX 177                                ballX < x + brickWidth &&
  163:  op land __tmp52 __tmp49 __tmp51                              ballXEnd > x &&
  164:  op greaterThan __tmp53 ballYEnd 116                          ballYEnd > y &&
  165:  op land __tmp54 __tmp52 __tmp53                              ballXEnd > x &&
  166:  op lessThan __tmp56 ballY 126                                ballY < y + brickHeight
  167:  op land __tmp57 __tmp54 __tmp56                              ballXEnd > x &&
  168:  jump __label126 equal __tmp57 false                          if
  169:  write 0 BRICKS 5                                             BRICKS[brickPtr] = 0;
  170:  op sub brickCount brickCount 1                               brickCount -= 1;
  171:  op greaterThan __tmp61 ballX 114.33333333333333              ballX > x - ballSizeMinus1 &&
  172:  op lessThan __tmp63 ballX 181                                ballX < x + brickWidthPlusBallSizeMinus1
  173:  op land __tmp64 __tmp61 __tmp63                              ballX > x - ballSizeMinus1 &&
  174:  jump __label124 equal __tmp64 false                          if
  175:  op mul ballVY ballVY -1                                      ballVY *= -1;
  176:  jump __label125 always 0 0                                   if
        label __label124                                             ...
  177:  op mul ballVX ballVX -1                                      ballVX *= -1;
        label __label125                                             if
        label __label126                                             if
        label __label128                                             if BRICKS[brickPtr] then
  178:  op lessThan __tmp71 ballY 0                                  if ballY < 0 || brickCount == 0 then
  179:  op equal __tmp72 brickCount 0                                ...
  180:  op or __tmp73 __tmp71 __tmp72                                ...
  181:  jump __label0 notEqual __tmp73 false                         ...
  182:  drawflush DISPLAY                                            drawflush(DISPLAY);
  183:  jump __label6 always 0 0                                     while true do


Performance: parsed in 751 ms, compiled in 101 ms, optimized in 351 ms, run in 15 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (23 steps):

Execution exception at instruction 22: sensor __tmp6 PADDLECONTROLLER @enabled:
Instruction not supported by Mindcode emulator.
(Use '#set err-unsupported-opcode = false;' directive or '--err-unsupported-opcode false' command line option to ignore this exception.)
