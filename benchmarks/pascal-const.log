    52 instructions before optimizations.
     3 instructions eliminated by Temp Variables Elimination.
     3 instructions eliminated by Dead Code Elimination (3 iterations).
    44 instructions eliminated by Jump Normalization (4 iterations).
     1 instructions eliminated by Jump Optimization (4 iterations).
    10 instructions eliminated by Single Step Elimination (2 passes, 6 iterations).
   212 instructions eliminated by Data Flow Optimization (18 passes, 65 iterations).
     1 instructions eliminated by Loop Optimization (3 iterations).
     3 loops improved by Loop Optimization.
   585 instructions added by Loop Unrolling (20 iterations).
    17 loops unrolled by Loop Unrolling.
     8 instructions eliminated by Unreachable Code Elimination.
     3 instructions eliminated by Print Merging.
   352 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 961):
  * Unroll loop at line 26:5                                     cost   172, benefit      400.0, efficiency        2.3 (+129 instructions)

Pass 1: speed optimization selection (cost limit 832):
  * Unroll loop at line 28:9                                     cost     1, benefit      100.0, efficiency      100.0 (-1 instructions)
    Unroll loop at line 34:9                                     cost     4, benefit      150.0, efficiency       37.5
    Unroll loop at line 28:9                                     cost     6, benefit      150.0, efficiency       25.0
    Unroll loop at line 34:9                                     cost     8, benefit      200.0, efficiency       25.0
    Unroll loop at line 28:9                                     cost    11, benefit      200.0, efficiency       18.2
    Unroll loop at line 34:9                                     cost    12, benefit      250.0, efficiency       20.8
    Unroll loop at line 28:9                                     cost    16, benefit      250.0, efficiency       15.6
    Unroll loop at line 34:9                                     cost    16, benefit      300.0, efficiency       18.8
    Unroll loop at line 28:9                                     cost    21, benefit      300.0, efficiency       14.3
    Unroll loop at line 34:9                                     cost    20, benefit      350.0, efficiency       17.5
    Unroll loop at line 28:9                                     cost    26, benefit      350.0, efficiency       13.5
    Unroll loop at line 34:9                                     cost    24, benefit      400.0, efficiency       16.7
    Unroll loop at line 28:9                                     cost    31, benefit      400.0, efficiency       12.9
    Unroll loop at line 34:9                                     cost    28, benefit      450.0, efficiency       16.1
    Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5
    Unroll loop at line 34:9                                     cost    32, benefit      500.0, efficiency       15.6

Pass 1: speed optimization selection (cost limit 833):
  * Unroll loop at line 34:9                                     cost     4, benefit      150.0, efficiency       37.5 (+4 instructions)
    Unroll loop at line 28:9                                     cost     6, benefit      150.0, efficiency       25.0
    Unroll loop at line 34:9                                     cost     8, benefit      200.0, efficiency       25.0
    Unroll loop at line 28:9                                     cost    11, benefit      200.0, efficiency       18.2
    Unroll loop at line 34:9                                     cost    12, benefit      250.0, efficiency       20.8
    Unroll loop at line 28:9                                     cost    16, benefit      250.0, efficiency       15.6
    Unroll loop at line 34:9                                     cost    16, benefit      300.0, efficiency       18.8
    Unroll loop at line 28:9                                     cost    21, benefit      300.0, efficiency       14.3
    Unroll loop at line 34:9                                     cost    20, benefit      350.0, efficiency       17.5
    Unroll loop at line 28:9                                     cost    26, benefit      350.0, efficiency       13.5
    Unroll loop at line 34:9                                     cost    24, benefit      400.0, efficiency       16.7
    Unroll loop at line 28:9                                     cost    31, benefit      400.0, efficiency       12.9
    Unroll loop at line 34:9                                     cost    28, benefit      450.0, efficiency       16.1
    Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5
    Unroll loop at line 34:9                                     cost    32, benefit      500.0, efficiency       15.6

Pass 1: speed optimization selection (cost limit 829):
  * Unroll loop at line 28:9                                     cost     6, benefit      150.0, efficiency       25.0 (+3 instructions)
    Unroll loop at line 34:9                                     cost     8, benefit      200.0, efficiency       25.0
    Unroll loop at line 28:9                                     cost    11, benefit      200.0, efficiency       18.2
    Unroll loop at line 34:9                                     cost    12, benefit      250.0, efficiency       20.8
    Unroll loop at line 28:9                                     cost    16, benefit      250.0, efficiency       15.6
    Unroll loop at line 34:9                                     cost    16, benefit      300.0, efficiency       18.8
    Unroll loop at line 28:9                                     cost    21, benefit      300.0, efficiency       14.3
    Unroll loop at line 34:9                                     cost    20, benefit      350.0, efficiency       17.5
    Unroll loop at line 28:9                                     cost    26, benefit      350.0, efficiency       13.5
    Unroll loop at line 34:9                                     cost    24, benefit      400.0, efficiency       16.7
    Unroll loop at line 28:9                                     cost    31, benefit      400.0, efficiency       12.9
    Unroll loop at line 34:9                                     cost    28, benefit      450.0, efficiency       16.1
    Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5
    Unroll loop at line 34:9                                     cost    32, benefit      500.0, efficiency       15.6

Pass 1: speed optimization selection (cost limit 826):
  * Unroll loop at line 34:9                                     cost     8, benefit      200.0, efficiency       25.0 (+8 instructions)
    Unroll loop at line 28:9                                     cost    11, benefit      200.0, efficiency       18.2
    Unroll loop at line 34:9                                     cost    12, benefit      250.0, efficiency       20.8
    Unroll loop at line 28:9                                     cost    16, benefit      250.0, efficiency       15.6
    Unroll loop at line 34:9                                     cost    16, benefit      300.0, efficiency       18.8
    Unroll loop at line 28:9                                     cost    21, benefit      300.0, efficiency       14.3
    Unroll loop at line 34:9                                     cost    20, benefit      350.0, efficiency       17.5
    Unroll loop at line 28:9                                     cost    26, benefit      350.0, efficiency       13.5
    Unroll loop at line 34:9                                     cost    24, benefit      400.0, efficiency       16.7
    Unroll loop at line 28:9                                     cost    31, benefit      400.0, efficiency       12.9
    Unroll loop at line 34:9                                     cost    28, benefit      450.0, efficiency       16.1
    Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5
    Unroll loop at line 34:9                                     cost    32, benefit      500.0, efficiency       15.6

Pass 1: speed optimization selection (cost limit 818):
    Unroll loop at line 28:9                                     cost    11, benefit      200.0, efficiency       18.2
  * Unroll loop at line 34:9                                     cost    12, benefit      250.0, efficiency       20.8 (+12 instructions)
    Unroll loop at line 28:9                                     cost    16, benefit      250.0, efficiency       15.6
    Unroll loop at line 34:9                                     cost    16, benefit      300.0, efficiency       18.8
    Unroll loop at line 28:9                                     cost    21, benefit      300.0, efficiency       14.3
    Unroll loop at line 34:9                                     cost    20, benefit      350.0, efficiency       17.5
    Unroll loop at line 28:9                                     cost    26, benefit      350.0, efficiency       13.5
    Unroll loop at line 34:9                                     cost    24, benefit      400.0, efficiency       16.7
    Unroll loop at line 28:9                                     cost    31, benefit      400.0, efficiency       12.9
    Unroll loop at line 34:9                                     cost    28, benefit      450.0, efficiency       16.1
    Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5
    Unroll loop at line 34:9                                     cost    32, benefit      500.0, efficiency       15.6

Pass 1: speed optimization selection (cost limit 806):
    Unroll loop at line 28:9                                     cost    11, benefit      200.0, efficiency       18.2
    Unroll loop at line 28:9                                     cost    16, benefit      250.0, efficiency       15.6
  * Unroll loop at line 34:9                                     cost    16, benefit      300.0, efficiency       18.8 (+16 instructions)
    Unroll loop at line 28:9                                     cost    21, benefit      300.0, efficiency       14.3
    Unroll loop at line 34:9                                     cost    20, benefit      350.0, efficiency       17.5
    Unroll loop at line 28:9                                     cost    26, benefit      350.0, efficiency       13.5
    Unroll loop at line 34:9                                     cost    24, benefit      400.0, efficiency       16.7
    Unroll loop at line 28:9                                     cost    31, benefit      400.0, efficiency       12.9
    Unroll loop at line 34:9                                     cost    28, benefit      450.0, efficiency       16.1
    Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5
    Unroll loop at line 34:9                                     cost    32, benefit      500.0, efficiency       15.6

Pass 1: speed optimization selection (cost limit 790):
  * Unroll loop at line 28:9                                     cost    11, benefit      200.0, efficiency       18.2 (+7 instructions)
    Unroll loop at line 28:9                                     cost    16, benefit      250.0, efficiency       15.6
    Unroll loop at line 28:9                                     cost    21, benefit      300.0, efficiency       14.3
    Unroll loop at line 34:9                                     cost    20, benefit      350.0, efficiency       17.5
    Unroll loop at line 28:9                                     cost    26, benefit      350.0, efficiency       13.5
    Unroll loop at line 34:9                                     cost    24, benefit      400.0, efficiency       16.7
    Unroll loop at line 28:9                                     cost    31, benefit      400.0, efficiency       12.9
    Unroll loop at line 34:9                                     cost    28, benefit      450.0, efficiency       16.1
    Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5
    Unroll loop at line 34:9                                     cost    32, benefit      500.0, efficiency       15.6

Pass 1: speed optimization selection (cost limit 783):
    Unroll loop at line 28:9                                     cost    16, benefit      250.0, efficiency       15.6
    Unroll loop at line 28:9                                     cost    21, benefit      300.0, efficiency       14.3
  * Unroll loop at line 34:9                                     cost    20, benefit      350.0, efficiency       17.5 (+20 instructions)
    Unroll loop at line 28:9                                     cost    26, benefit      350.0, efficiency       13.5
    Unroll loop at line 34:9                                     cost    24, benefit      400.0, efficiency       16.7
    Unroll loop at line 28:9                                     cost    31, benefit      400.0, efficiency       12.9
    Unroll loop at line 34:9                                     cost    28, benefit      450.0, efficiency       16.1
    Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5
    Unroll loop at line 34:9                                     cost    32, benefit      500.0, efficiency       15.6

Pass 1: speed optimization selection (cost limit 763):
    Unroll loop at line 28:9                                     cost    16, benefit      250.0, efficiency       15.6
    Unroll loop at line 28:9                                     cost    21, benefit      300.0, efficiency       14.3
    Unroll loop at line 28:9                                     cost    26, benefit      350.0, efficiency       13.5
  * Unroll loop at line 34:9                                     cost    24, benefit      400.0, efficiency       16.7 (+24 instructions)
    Unroll loop at line 28:9                                     cost    31, benefit      400.0, efficiency       12.9
    Unroll loop at line 34:9                                     cost    28, benefit      450.0, efficiency       16.1
    Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5
    Unroll loop at line 34:9                                     cost    32, benefit      500.0, efficiency       15.6

Pass 1: speed optimization selection (cost limit 739):
    Unroll loop at line 28:9                                     cost    16, benefit      250.0, efficiency       15.6
    Unroll loop at line 28:9                                     cost    21, benefit      300.0, efficiency       14.3
    Unroll loop at line 28:9                                     cost    26, benefit      350.0, efficiency       13.5
    Unroll loop at line 28:9                                     cost    31, benefit      400.0, efficiency       12.9
  * Unroll loop at line 34:9                                     cost    28, benefit      450.0, efficiency       16.1 (+28 instructions)
    Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5
    Unroll loop at line 34:9                                     cost    32, benefit      500.0, efficiency       15.6

Pass 1: speed optimization selection (cost limit 711):
  * Unroll loop at line 28:9                                     cost    16, benefit      250.0, efficiency       15.6 (+11 instructions)
    Unroll loop at line 28:9                                     cost    21, benefit      300.0, efficiency       14.3
    Unroll loop at line 28:9                                     cost    26, benefit      350.0, efficiency       13.5
    Unroll loop at line 28:9                                     cost    31, benefit      400.0, efficiency       12.9
    Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5
    Unroll loop at line 34:9                                     cost    32, benefit      500.0, efficiency       15.6

Pass 1: speed optimization selection (cost limit 700):
    Unroll loop at line 28:9                                     cost    21, benefit      300.0, efficiency       14.3
    Unroll loop at line 28:9                                     cost    26, benefit      350.0, efficiency       13.5
    Unroll loop at line 28:9                                     cost    31, benefit      400.0, efficiency       12.9
    Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5
  * Unroll loop at line 34:9                                     cost    32, benefit      500.0, efficiency       15.6 (+32 instructions)

Pass 1: speed optimization selection (cost limit 668):
  * Unroll loop at line 28:9                                     cost    21, benefit      300.0, efficiency       14.3 (+15 instructions)
    Unroll loop at line 28:9                                     cost    26, benefit      350.0, efficiency       13.5
    Unroll loop at line 28:9                                     cost    31, benefit      400.0, efficiency       12.9
    Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5

Pass 1: speed optimization selection (cost limit 653):
  * Unroll loop at line 28:9                                     cost    26, benefit      350.0, efficiency       13.5 (+19 instructions)
    Unroll loop at line 28:9                                     cost    31, benefit      400.0, efficiency       12.9
    Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5

Pass 1: speed optimization selection (cost limit 634):
  * Unroll loop at line 28:9                                     cost    31, benefit      400.0, efficiency       12.9 (+23 instructions)
    Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5

Pass 1: speed optimization selection (cost limit 611):
  * Unroll loop at line 28:9                                     cost    36, benefit      450.0, efficiency       12.5 (+27 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-3 instructions):
 
    28 label *label5
    29 set *tmp12 :lineLength
    30 write 1 :currentLine *tmp12
-    * set *tmp14 :lineLength
    31 op add :lineLength :lineLength 1
    32 set *tmp15 :lineLength
    33 set :c 0
 
    40 op lessThan *tmp19 :c *tmp18
    41 jump *label9 equal *tmp19 false
    42 print " "
-    * set *tmp20 " "
    43 jump *label10 always
    44 label *label9
-    * set *tmp20 null
    45 label *label10
    46 label *label7
    47 op add :c :c 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-3 instructions):
 
    15 label *label3
    16 jump *label5 greaterThan :j *tmp3
    17 set *tmp4 :j
-    * op sub *tmp6 :j 1
-    * set *tmp7 *tmp6
+   18 op sub *tmp7 :j 1
    19 set *tmp9 :j
    20 read *tmp8 :previousLine *tmp7
    21 read *tmp10 :previousLine *tmp9
 
    25 op add :j :j 1
    26 jump *label3 always
    27 label *label5
-    * set *tmp12 :lineLength
-    * write 1 :currentLine *tmp12
+   28 write 1 :currentLine :lineLength
    29 op add :lineLength :lineLength 1
    30 set *tmp15 :lineLength
    31 set :c 0
    32 label *label6
    33 jump *label8 greaterThanEq :c *tmp15
-    * set *tmp16 :c
-    * read *tmp17 :currentLine *tmp16
+   34 read *tmp17 :currentLine :c
    35 print *tmp17
    36 op sub *tmp18 :lineLength 1
    37 op lessThan *tmp19 :c *tmp18

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-1 instructions):
 
    34 read *tmp17 :currentLine :c
    35 print *tmp17
    36 op sub *tmp18 :lineLength 1
-    * op lessThan *tmp19 :c *tmp18
-    * jump *label9 equal *tmp19 false
+   37 jump *label9 greaterThanEq :c *tmp18
    38 print " "
    39 jump *label10 always
    40 label *label9

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-1 instructions):
 
    36 op sub *tmp18 :lineLength 1
    37 jump *label9 greaterThanEq :c *tmp18
    38 print " "
-    * jump *label10 always
    39 label *label9
    40 label *label10
    41 label *label7

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     4 set :lineLength 2
     5 set :previousLine cell1
     6 set :currentLine cell2
-    * write 1 :previousLine 0
-    * write 1 :previousLine 1
+    7 write 1 cell1 0
+    8 write 1 cell1 1
     9 set :i 3
    10 label *label0
    11 jump *label2 greaterThan :i 10
 
    13 set *tmp3 :lineLength
    14 set :j 1
    15 label *label3
-    * jump *label5 greaterThan :j *tmp3
+   16 jump *label5 greaterThan :j :lineLength
    17 set *tmp4 :j
    18 op sub *tmp7 :j 1
    19 set *tmp9 :j
    20 read *tmp8 :previousLine *tmp7
-    * read *tmp10 :previousLine *tmp9
+   21 read *tmp10 :previousLine :j
    22 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :currentLine *tmp4
+   23 write *tmp11 :currentLine :j
    24 label *label4
    25 op add :j :j 1
    26 jump *label3 always
 
    30 set *tmp15 :lineLength
    31 set :c 0
    32 label *label6
-    * jump *label8 greaterThanEq :c *tmp15
+   33 jump *label8 greaterThanEq :c :lineLength
    34 read *tmp17 :currentLine :c
    35 print *tmp17
    36 op sub *tmp18 :lineLength 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
    10 label *label0
    11 jump *label2 greaterThan :i 10
    12 write 1 :currentLine 0
-    * set *tmp3 :lineLength
    13 set :j 1
    14 label *label3
    15 jump *label5 greaterThan :j :lineLength
-    * set *tmp4 :j
    16 op sub *tmp7 :j 1
-    * set *tmp9 :j
    17 read *tmp8 :previousLine *tmp7
    18 read *tmp10 :previousLine :j
    19 op add *tmp11 *tmp8 *tmp10
 
    24 label *label5
    25 write 1 :currentLine :lineLength
    26 op add :lineLength :lineLength 1
-    * set *tmp15 :lineLength
    27 set :c 0
    28 label *label6
    29 jump *label8 greaterThanEq :c :lineLength

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
     8 write 1 cell1 1
     9 set :i 3
    10 label *label0
-    * jump *label2 greaterThan :i 10
+   11 label *label11
    12 write 1 :currentLine 0
    13 set :j 1
    14 label *label3
    15 jump *label5 greaterThan :j :lineLength
+   16 label *label12
    17 op sub *tmp7 :j 1
    18 read *tmp8 :previousLine *tmp7
    19 read *tmp10 :previousLine :j
 
    21 write *tmp11 :currentLine :j
    22 label *label4
    23 op add :j :j 1
-    * jump *label3 always
+   24 jump *label12 lessThanEq :j :lineLength
    25 label *label5
    26 write 1 :currentLine :lineLength
    27 op add :lineLength :lineLength 1
    28 set :c 0
    29 label *label6
    30 jump *label8 greaterThanEq :c :lineLength
+   31 label *label13
    32 read *tmp17 :currentLine :c
    33 print *tmp17
    34 op sub *tmp18 :lineLength 1
 
    38 label *label10
    39 label *label7
    40 op add :c :c 1
-    * jump *label6 always
+   41 jump *label13 lessThan :c :lineLength
    42 label *label8
    43 print "\n"
    44 set :tmp :previousLine
 
    46 set :currentLine :tmp
    47 label *label1
    48 op add :i :i 1
-    * jump *label0 always
+   49 jump *label11 lessThanEq :i 10
    50 label *label2
    51 printflush message1
    52 end

Modifications by Unroll loop at line 26:5 (+181 instructions):
 
     6 set :currentLine cell2
     7 write 1 cell1 0
     8 write 1 cell1 1
-    * set :i 3
-    * label *label0
-    * label *label11
-    * write 1 :currentLine 0
-    * set :j 1
-    * label *label3
-    * jump *label5 greaterThan :j :lineLength
-    * label *label12
-    * op sub *tmp7 :j 1
-    * read *tmp8 :previousLine *tmp7
-    * read *tmp10 :previousLine :j
-    * op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :currentLine :j
-    * label *label4
-    * op add :j :j 1
-    * jump *label12 lessThanEq :j :lineLength
-    * label *label5
-    * write 1 :currentLine :lineLength
-    * op add :lineLength :lineLength 1
-    * set :c 0
-    * label *label6
-    * jump *label8 greaterThanEq :c :lineLength
-    * label *label13
-    * read *tmp17 :currentLine :c
-    * print *tmp17
-    * op sub *tmp18 :lineLength 1
-    * jump *label9 greaterThanEq :c *tmp18
-    * print " "
-    * label *label9
-    * label *label10
-    * label *label7
-    * op add :c :c 1
-    * jump *label13 lessThan :c :lineLength
-    * label *label8
-    * print "\n"
-    * set :tmp :previousLine
-    * set :previousLine :currentLine
-    * set :currentLine :tmp
-    * label *label1
-    * op add :i :i 1
-    * jump *label11 lessThanEq :i 10
-    * label *label2
+    9 set :i 3
+   10 label *label14
+   11 label *label15
+   12 write 1 :currentLine 0
+   13 set :j 1
+   14 label *label16
+   15 jump *label19 greaterThan :j :lineLength
+   16 label *label17
+   17 op sub *tmp7 :j 1
+   18 read *tmp8 :previousLine *tmp7
+   19 read *tmp10 :previousLine :j
+   20 op add *tmp11 *tmp8 *tmp10
+   21 write *tmp11 :currentLine :j
+   22 label *label18
+   23 op add :j :j 1
+   24 jump *label17 lessThanEq :j :lineLength
+   25 label *label19
+   26 write 1 :currentLine :lineLength
+   27 op add :lineLength :lineLength 1
+   28 set :c 0
+   29 label *label20
+   30 jump *label25 greaterThanEq :c :lineLength
+   31 label *label21
+   32 read *tmp17 :currentLine :c
+   33 print *tmp17
+   34 op sub *tmp18 :lineLength 1
+   35 jump *label22 greaterThanEq :c *tmp18
+   36 print " "
+   37 label *label22
+   38 label *label23
+   39 label *label24
+   40 op add :c :c 1
+   41 jump *label21 lessThan :c :lineLength
+   42 label *label25
+   43 print "\n"
+   44 set :tmp :previousLine
+   45 set :previousLine :currentLine
+   46 set :currentLine :tmp
+   47 label *label26
+   48 op add :i :i 1
+   49 label *label27
+   50 write 1 :currentLine 0
+   51 set :j 1
+   52 label *label28
+   53 jump *label31 greaterThan :j :lineLength
+   54 label *label29
+   55 op sub *tmp7 :j 1
+   56 read *tmp8 :previousLine *tmp7
+   57 read *tmp10 :previousLine :j
+   58 op add *tmp11 *tmp8 *tmp10
+   59 write *tmp11 :currentLine :j
+   60 label *label30
+   61 op add :j :j 1
+   62 jump *label29 lessThanEq :j :lineLength
+   63 label *label31
+   64 write 1 :currentLine :lineLength
+   65 op add :lineLength :lineLength 1
+   66 set :c 0
+   67 label *label32
+   68 jump *label37 greaterThanEq :c :lineLength
+   69 label *label33
+   70 read *tmp17 :currentLine :c
+   71 print *tmp17
+   72 op sub *tmp18 :lineLength 1
+   73 jump *label34 greaterThanEq :c *tmp18
+   74 print " "
+   75 label *label34
+   76 label *label35
+   77 label *label36
+   78 op add :c :c 1
+   79 jump *label33 lessThan :c :lineLength
+   80 label *label37
+   81 print "\n"
+   82 set :tmp :previousLine
+   83 set :previousLine :currentLine
+   84 set :currentLine :tmp
+   85 label *label38
+   86 op add :i :i 1
+   87 label *label39
+   88 write 1 :currentLine 0
+   89 set :j 1
+   90 label *label40
+   91 jump *label43 greaterThan :j :lineLength
+   92 label *label41
+   93 op sub *tmp7 :j 1
+   94 read *tmp8 :previousLine *tmp7
+   95 read *tmp10 :previousLine :j
+   96 op add *tmp11 *tmp8 *tmp10
+   97 write *tmp11 :currentLine :j
+   98 label *label42
+   99 op add :j :j 1
+  100 jump *label41 lessThanEq :j :lineLength
+  101 label *label43
+  102 write 1 :currentLine :lineLength
+  103 op add :lineLength :lineLength 1
+  104 set :c 0
+  105 label *label44
+  106 jump *label49 greaterThanEq :c :lineLength
+  107 label *label45
+  108 read *tmp17 :currentLine :c
+  109 print *tmp17
+  110 op sub *tmp18 :lineLength 1
+  111 jump *label46 greaterThanEq :c *tmp18
+  112 print " "
+  113 label *label46
+  114 label *label47
+  115 label *label48
+  116 op add :c :c 1
+  117 jump *label45 lessThan :c :lineLength
+  118 label *label49
+  119 print "\n"
+  120 set :tmp :previousLine
+  121 set :previousLine :currentLine
+  122 set :currentLine :tmp
+  123 label *label50
+  124 op add :i :i 1
+  125 label *label51
+  126 write 1 :currentLine 0
+  127 set :j 1
+  128 label *label52
+  129 jump *label55 greaterThan :j :lineLength
+  130 label *label53
+  131 op sub *tmp7 :j 1
+  132 read *tmp8 :previousLine *tmp7
+  133 read *tmp10 :previousLine :j
+  134 op add *tmp11 *tmp8 *tmp10
+  135 write *tmp11 :currentLine :j
+  136 label *label54
+  137 op add :j :j 1
+  138 jump *label53 lessThanEq :j :lineLength
+  139 label *label55
+  140 write 1 :currentLine :lineLength
+  141 op add :lineLength :lineLength 1
+  142 set :c 0
+  143 label *label56
+  144 jump *label61 greaterThanEq :c :lineLength
+  145 label *label57
+  146 read *tmp17 :currentLine :c
+  147 print *tmp17
+  148 op sub *tmp18 :lineLength 1
+  149 jump *label58 greaterThanEq :c *tmp18
+  150 print " "
+  151 label *label58
+  152 label *label59
+  153 label *label60
+  154 op add :c :c 1
+  155 jump *label57 lessThan :c :lineLength
+  156 label *label61
+  157 print "\n"
+  158 set :tmp :previousLine
+  159 set :previousLine :currentLine
+  160 set :currentLine :tmp
+  161 label *label62
+  162 op add :i :i 1
+  163 label *label63
+  164 write 1 :currentLine 0
+  165 set :j 1
+  166 label *label64
+  167 jump *label67 greaterThan :j :lineLength
+  168 label *label65
+  169 op sub *tmp7 :j 1
+  170 read *tmp8 :previousLine *tmp7
+  171 read *tmp10 :previousLine :j
+  172 op add *tmp11 *tmp8 *tmp10
+  173 write *tmp11 :currentLine :j
+  174 label *label66
+  175 op add :j :j 1
+  176 jump *label65 lessThanEq :j :lineLength
+  177 label *label67
+  178 write 1 :currentLine :lineLength
+  179 op add :lineLength :lineLength 1
+  180 set :c 0
+  181 label *label68
+  182 jump *label73 greaterThanEq :c :lineLength
+  183 label *label69
+  184 read *tmp17 :currentLine :c
+  185 print *tmp17
+  186 op sub *tmp18 :lineLength 1
+  187 jump *label70 greaterThanEq :c *tmp18
+  188 print " "
+  189 label *label70
+  190 label *label71
+  191 label *label72
+  192 op add :c :c 1
+  193 jump *label69 lessThan :c :lineLength
+  194 label *label73
+  195 print "\n"
+  196 set :tmp :previousLine
+  197 set :previousLine :currentLine
+  198 set :currentLine :tmp
+  199 label *label74
+  200 op add :i :i 1
+  201 label *label75
+  202 write 1 :currentLine 0
+  203 set :j 1
+  204 label *label76
+  205 jump *label79 greaterThan :j :lineLength
+  206 label *label77
+  207 op sub *tmp7 :j 1
+  208 read *tmp8 :previousLine *tmp7
+  209 read *tmp10 :previousLine :j
+  210 op add *tmp11 *tmp8 *tmp10
+  211 write *tmp11 :currentLine :j
+  212 label *label78
+  213 op add :j :j 1
+  214 jump *label77 lessThanEq :j :lineLength
+  215 label *label79
+  216 write 1 :currentLine :lineLength
+  217 op add :lineLength :lineLength 1
+  218 set :c 0
+  219 label *label80
+  220 jump *label85 greaterThanEq :c :lineLength
+  221 label *label81
+  222 read *tmp17 :currentLine :c
+  223 print *tmp17
+  224 op sub *tmp18 :lineLength 1
+  225 jump *label82 greaterThanEq :c *tmp18
+  226 print " "
+  227 label *label82
+  228 label *label83
+  229 label *label84
+  230 op add :c :c 1
+  231 jump *label81 lessThan :c :lineLength
+  232 label *label85
+  233 print "\n"
+  234 set :tmp :previousLine
+  235 set :previousLine :currentLine
+  236 set :currentLine :tmp
+  237 label *label86
+  238 op add :i :i 1
+  239 label *label87
+  240 write 1 :currentLine 0
+  241 set :j 1
+  242 label *label88
+  243 jump *label91 greaterThan :j :lineLength
+  244 label *label89
+  245 op sub *tmp7 :j 1
+  246 read *tmp8 :previousLine *tmp7
+  247 read *tmp10 :previousLine :j
+  248 op add *tmp11 *tmp8 *tmp10
+  249 write *tmp11 :currentLine :j
+  250 label *label90
+  251 op add :j :j 1
+  252 jump *label89 lessThanEq :j :lineLength
+  253 label *label91
+  254 write 1 :currentLine :lineLength
+  255 op add :lineLength :lineLength 1
+  256 set :c 0
+  257 label *label92
+  258 jump *label97 greaterThanEq :c :lineLength
+  259 label *label93
+  260 read *tmp17 :currentLine :c
+  261 print *tmp17
+  262 op sub *tmp18 :lineLength 1
+  263 jump *label94 greaterThanEq :c *tmp18
+  264 print " "
+  265 label *label94
+  266 label *label95
+  267 label *label96
+  268 op add :c :c 1
+  269 jump *label93 lessThan :c :lineLength
+  270 label *label97
+  271 print "\n"
+  272 set :tmp :previousLine
+  273 set :previousLine :currentLine
+  274 set :currentLine :tmp
+  275 label *label98
+  276 op add :i :i 1
+  277 label *label99
+  278 write 1 :currentLine 0
+  279 set :j 1
+  280 label *label100
+  281 jump *label103 greaterThan :j :lineLength
+  282 label *label101
+  283 op sub *tmp7 :j 1
+  284 read *tmp8 :previousLine *tmp7
+  285 read *tmp10 :previousLine :j
+  286 op add *tmp11 *tmp8 *tmp10
+  287 write *tmp11 :currentLine :j
+  288 label *label102
+  289 op add :j :j 1
+  290 jump *label101 lessThanEq :j :lineLength
+  291 label *label103
+  292 write 1 :currentLine :lineLength
+  293 op add :lineLength :lineLength 1
+  294 set :c 0
+  295 label *label104
+  296 jump *label109 greaterThanEq :c :lineLength
+  297 label *label105
+  298 read *tmp17 :currentLine :c
+  299 print *tmp17
+  300 op sub *tmp18 :lineLength 1
+  301 jump *label106 greaterThanEq :c *tmp18
+  302 print " "
+  303 label *label106
+  304 label *label107
+  305 label *label108
+  306 op add :c :c 1
+  307 jump *label105 lessThan :c :lineLength
+  308 label *label109
+  309 print "\n"
+  310 set :tmp :previousLine
+  311 set :previousLine :currentLine
+  312 set :currentLine :tmp
+  313 label *label110
+  314 op add :i :i 1
+  315 label *label2
   316 printflush message1
   317 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
     9 set :i 3
    10 label *label14
    11 label *label15
-    * write 1 :currentLine 0
+   12 write 1 cell2 0
    13 set :j 1
    14 label *label16
-    * jump *label19 greaterThan :j :lineLength
+   15 jump *label19 greaterThan 1 2
    16 label *label17
    17 op sub *tmp7 :j 1
-    * read *tmp8 :previousLine *tmp7
-    * read *tmp10 :previousLine :j
+   18 read *tmp8 cell1 *tmp7
+   19 read *tmp10 cell1 :j
    20 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :currentLine :j
+   21 write *tmp11 cell2 :j
    22 label *label18
    23 op add :j :j 1
-    * jump *label17 lessThanEq :j :lineLength
+   24 jump *label17 lessThanEq :j 2
    25 label *label19
-    * write 1 :currentLine :lineLength
-    * op add :lineLength :lineLength 1
+   26 write 1 cell2 2
+   27 op add :lineLength 2 1
    28 set :c 0
    29 label *label20
-    * jump *label25 greaterThanEq :c :lineLength
+   30 jump *label25 greaterThanEq 0 3
    31 label *label21
-    * read *tmp17 :currentLine :c
+   32 read *tmp17 cell2 :c
    33 print *tmp17
-    * op sub *tmp18 :lineLength 1
-    * jump *label22 greaterThanEq :c *tmp18
+   34 op sub *tmp18 3 1
+   35 jump *label22 greaterThanEq :c 2
    36 print " "
    37 label *label22
    38 label *label23
    39 label *label24
    40 op add :c :c 1
-    * jump *label21 lessThan :c :lineLength
+   41 jump *label21 lessThan :c 3
    42 label *label25
    43 print "\n"
-    * set :tmp :previousLine
-    * set :previousLine :currentLine
+   44 set :tmp cell1
+   45 set :previousLine cell2
    46 set :currentLine :tmp
    47 label *label26
-    * op add :i :i 1
+   48 op add :i 3 1
    49 label *label27
-    * write 1 :currentLine 0
+   50 write 1 :tmp 0
    51 set :j 1
    52 label *label28
-    * jump *label31 greaterThan :j :lineLength
+   53 jump *label31 greaterThan 1 3
    54 label *label29
    55 op sub *tmp7 :j 1
    56 read *tmp8 :previousLine *tmp7
    57 read *tmp10 :previousLine :j
    58 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :currentLine :j
+   59 write *tmp11 :tmp :j
    60 label *label30
    61 op add :j :j 1
-    * jump *label29 lessThanEq :j :lineLength
+   62 jump *label29 lessThanEq :j 3
    63 label *label31
-    * write 1 :currentLine :lineLength
-    * op add :lineLength :lineLength 1
+   64 write 1 :tmp 3
+   65 op add :lineLength 3 1
    66 set :c 0
    67 label *label32
-    * jump *label37 greaterThanEq :c :lineLength
+   68 jump *label37 greaterThanEq 0 4
    69 label *label33
-    * read *tmp17 :currentLine :c
+   70 read *tmp17 :tmp :c
    71 print *tmp17
-    * op sub *tmp18 :lineLength 1
-    * jump *label34 greaterThanEq :c *tmp18
+   72 op sub *tmp18 4 1
+   73 jump *label34 greaterThanEq :c 3
    74 print " "
    75 label *label34
    76 label *label35
    77 label *label36
    78 op add :c :c 1
-    * jump *label33 lessThan :c :lineLength
+   79 jump *label33 lessThan :c 4
    80 label *label37
    81 print "\n"
    82 set :tmp :previousLine
    83 set :previousLine :currentLine
    84 set :currentLine :tmp
    85 label *label38
-    * op add :i :i 1
+   86 op add :i 4 1
    87 label *label39
-    * write 1 :currentLine 0
+   88 write 1 :tmp 0
    89 set :j 1
    90 label *label40
-    * jump *label43 greaterThan :j :lineLength
+   91 jump *label43 greaterThan 1 4
    92 label *label41
    93 op sub *tmp7 :j 1
    94 read *tmp8 :previousLine *tmp7
    95 read *tmp10 :previousLine :j
    96 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :currentLine :j
+   97 write *tmp11 :tmp :j
    98 label *label42
    99 op add :j :j 1
-    * jump *label41 lessThanEq :j :lineLength
+  100 jump *label41 lessThanEq :j 4
   101 label *label43
-    * write 1 :currentLine :lineLength
-    * op add :lineLength :lineLength 1
+  102 write 1 :tmp 4
+  103 op add :lineLength 4 1
   104 set :c 0
   105 label *label44
-    * jump *label49 greaterThanEq :c :lineLength
+  106 jump *label49 greaterThanEq 0 5
   107 label *label45
-    * read *tmp17 :currentLine :c
+  108 read *tmp17 :tmp :c
   109 print *tmp17
-    * op sub *tmp18 :lineLength 1
-    * jump *label46 greaterThanEq :c *tmp18
+  110 op sub *tmp18 5 1
+  111 jump *label46 greaterThanEq :c 4
   112 print " "
   113 label *label46
   114 label *label47
   115 label *label48
   116 op add :c :c 1
-    * jump *label45 lessThan :c :lineLength
+  117 jump *label45 lessThan :c 5
   118 label *label49
   119 print "\n"
   120 set :tmp :previousLine
   121 set :previousLine :currentLine
   122 set :currentLine :tmp
   123 label *label50
-    * op add :i :i 1
+  124 op add :i 5 1
   125 label *label51
-    * write 1 :currentLine 0
+  126 write 1 :tmp 0
   127 set :j 1
   128 label *label52
-    * jump *label55 greaterThan :j :lineLength
+  129 jump *label55 greaterThan 1 5
   130 label *label53
   131 op sub *tmp7 :j 1
   132 read *tmp8 :previousLine *tmp7
   133 read *tmp10 :previousLine :j
   134 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :currentLine :j
+  135 write *tmp11 :tmp :j
   136 label *label54
   137 op add :j :j 1
-    * jump *label53 lessThanEq :j :lineLength
+  138 jump *label53 lessThanEq :j 5
   139 label *label55
-    * write 1 :currentLine :lineLength
-    * op add :lineLength :lineLength 1
+  140 write 1 :tmp 5
+  141 op add :lineLength 5 1
   142 set :c 0
   143 label *label56
-    * jump *label61 greaterThanEq :c :lineLength
+  144 jump *label61 greaterThanEq 0 6
   145 label *label57
-    * read *tmp17 :currentLine :c
+  146 read *tmp17 :tmp :c
   147 print *tmp17
-    * op sub *tmp18 :lineLength 1
-    * jump *label58 greaterThanEq :c *tmp18
+  148 op sub *tmp18 6 1
+  149 jump *label58 greaterThanEq :c 5
   150 print " "
   151 label *label58
   152 label *label59
   153 label *label60
   154 op add :c :c 1
-    * jump *label57 lessThan :c :lineLength
+  155 jump *label57 lessThan :c 6
   156 label *label61
   157 print "\n"
   158 set :tmp :previousLine
   159 set :previousLine :currentLine
   160 set :currentLine :tmp
   161 label *label62
-    * op add :i :i 1
+  162 op add :i 6 1
   163 label *label63
-    * write 1 :currentLine 0
+  164 write 1 :tmp 0
   165 set :j 1
   166 label *label64
-    * jump *label67 greaterThan :j :lineLength
+  167 jump *label67 greaterThan 1 6
   168 label *label65
   169 op sub *tmp7 :j 1
   170 read *tmp8 :previousLine *tmp7
   171 read *tmp10 :previousLine :j
   172 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :currentLine :j
+  173 write *tmp11 :tmp :j
   174 label *label66
   175 op add :j :j 1
-    * jump *label65 lessThanEq :j :lineLength
+  176 jump *label65 lessThanEq :j 6
   177 label *label67
-    * write 1 :currentLine :lineLength
-    * op add :lineLength :lineLength 1
+  178 write 1 :tmp 6
+  179 op add :lineLength 6 1
   180 set :c 0
   181 label *label68
-    * jump *label73 greaterThanEq :c :lineLength
+  182 jump *label73 greaterThanEq 0 7
   183 label *label69
-    * read *tmp17 :currentLine :c
+  184 read *tmp17 :tmp :c
   185 print *tmp17
-    * op sub *tmp18 :lineLength 1
-    * jump *label70 greaterThanEq :c *tmp18
+  186 op sub *tmp18 7 1
+  187 jump *label70 greaterThanEq :c 6
   188 print " "
   189 label *label70
   190 label *label71
   191 label *label72
   192 op add :c :c 1
-    * jump *label69 lessThan :c :lineLength
+  193 jump *label69 lessThan :c 7
   194 label *label73
   195 print "\n"
   196 set :tmp :previousLine
   197 set :previousLine :currentLine
   198 set :currentLine :tmp
   199 label *label74
-    * op add :i :i 1
+  200 op add :i 7 1
   201 label *label75
-    * write 1 :currentLine 0
+  202 write 1 :tmp 0
   203 set :j 1
   204 label *label76
-    * jump *label79 greaterThan :j :lineLength
+  205 jump *label79 greaterThan 1 7
   206 label *label77
   207 op sub *tmp7 :j 1
   208 read *tmp8 :previousLine *tmp7
   209 read *tmp10 :previousLine :j
   210 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :currentLine :j
+  211 write *tmp11 :tmp :j
   212 label *label78
   213 op add :j :j 1
-    * jump *label77 lessThanEq :j :lineLength
+  214 jump *label77 lessThanEq :j 7
   215 label *label79
-    * write 1 :currentLine :lineLength
-    * op add :lineLength :lineLength 1
+  216 write 1 :tmp 7
+  217 op add :lineLength 7 1
   218 set :c 0
   219 label *label80
-    * jump *label85 greaterThanEq :c :lineLength
+  220 jump *label85 greaterThanEq 0 8
   221 label *label81
-    * read *tmp17 :currentLine :c
+  222 read *tmp17 :tmp :c
   223 print *tmp17
-    * op sub *tmp18 :lineLength 1
-    * jump *label82 greaterThanEq :c *tmp18
+  224 op sub *tmp18 8 1
+  225 jump *label82 greaterThanEq :c 7
   226 print " "
   227 label *label82
   228 label *label83
   229 label *label84
   230 op add :c :c 1
-    * jump *label81 lessThan :c :lineLength
+  231 jump *label81 lessThan :c 8
   232 label *label85
   233 print "\n"
   234 set :tmp :previousLine
   235 set :previousLine :currentLine
   236 set :currentLine :tmp
   237 label *label86
-    * op add :i :i 1
+  238 op add :i 8 1
   239 label *label87
-    * write 1 :currentLine 0
+  240 write 1 :tmp 0
   241 set :j 1
   242 label *label88
-    * jump *label91 greaterThan :j :lineLength
+  243 jump *label91 greaterThan 1 8
   244 label *label89
   245 op sub *tmp7 :j 1
   246 read *tmp8 :previousLine *tmp7
   247 read *tmp10 :previousLine :j
   248 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :currentLine :j
+  249 write *tmp11 :tmp :j
   250 label *label90
   251 op add :j :j 1
-    * jump *label89 lessThanEq :j :lineLength
+  252 jump *label89 lessThanEq :j 8
   253 label *label91
-    * write 1 :currentLine :lineLength
-    * op add :lineLength :lineLength 1
+  254 write 1 :tmp 8
+  255 op add :lineLength 8 1
   256 set :c 0
   257 label *label92
-    * jump *label97 greaterThanEq :c :lineLength
+  258 jump *label97 greaterThanEq 0 9
   259 label *label93
-    * read *tmp17 :currentLine :c
+  260 read *tmp17 :tmp :c
   261 print *tmp17
-    * op sub *tmp18 :lineLength 1
-    * jump *label94 greaterThanEq :c *tmp18
+  262 op sub *tmp18 9 1
+  263 jump *label94 greaterThanEq :c 8
   264 print " "
   265 label *label94
   266 label *label95
   267 label *label96
   268 op add :c :c 1
-    * jump *label93 lessThan :c :lineLength
+  269 jump *label93 lessThan :c 9
   270 label *label97
   271 print "\n"
   272 set :tmp :previousLine
   273 set :previousLine :currentLine
   274 set :currentLine :tmp
   275 label *label98
-    * op add :i :i 1
+  276 op add :i 9 1
   277 label *label99
-    * write 1 :currentLine 0
+  278 write 1 :tmp 0
   279 set :j 1
   280 label *label100
-    * jump *label103 greaterThan :j :lineLength
+  281 jump *label103 greaterThan 1 9
   282 label *label101
   283 op sub *tmp7 :j 1
   284 read *tmp8 :previousLine *tmp7
   285 read *tmp10 :previousLine :j
   286 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :currentLine :j
+  287 write *tmp11 :tmp :j
   288 label *label102
   289 op add :j :j 1
-    * jump *label101 lessThanEq :j :lineLength
+  290 jump *label101 lessThanEq :j 9
   291 label *label103
-    * write 1 :currentLine :lineLength
-    * op add :lineLength :lineLength 1
+  292 write 1 :tmp 9
+  293 op add :lineLength 9 1
   294 set :c 0
   295 label *label104
-    * jump *label109 greaterThanEq :c :lineLength
+  296 jump *label109 greaterThanEq 0 10
   297 label *label105
-    * read *tmp17 :currentLine :c
+  298 read *tmp17 :tmp :c
   299 print *tmp17
-    * op sub *tmp18 :lineLength 1
-    * jump *label106 greaterThanEq :c *tmp18
+  300 op sub *tmp18 10 1
+  301 jump *label106 greaterThanEq :c 9
   302 print " "
   303 label *label106
   304 label *label107
   305 label *label108
   306 op add :c :c 1
-    * jump *label105 lessThan :c :lineLength
+  307 jump *label105 lessThan :c 10
   308 label *label109
   309 print "\n"
   310 set :tmp :previousLine
-    * set :previousLine :currentLine
-    * set :currentLine :tmp
   311 label *label110
-    * op add :i :i 1
+  312 op add :i 10 1
   313 label *label2
   314 printflush message1
   315 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-30 instructions):
 
     1 print "\n"
     2 print "1 1"
     3 print "\n"
-    * set :lineLength 2
-    * set :previousLine cell1
-    * set :currentLine cell2
     4 write 1 cell1 0
     5 write 1 cell1 1
-    * set :i 3
     6 label *label14
     7 label *label15
     8 write 1 cell2 0
 
    20 jump *label17 lessThanEq :j 2
    21 label *label19
    22 write 1 cell2 2
-    * op add :lineLength 2 1
    23 set :c 0
    24 label *label20
    25 jump *label25 greaterThanEq 0 3
    26 label *label21
    27 read *tmp17 cell2 :c
    28 print *tmp17
-    * op sub *tmp18 3 1
    29 jump *label22 greaterThanEq :c 2
    30 print " "
    31 label *label22
 
    37 print "\n"
    38 set :tmp cell1
    39 set :previousLine cell2
-    * set :currentLine :tmp
+   40 set :currentLine cell1
    41 label *label26
-    * op add :i 3 1
    42 label *label27
-    * write 1 :tmp 0
+   43 write 1 cell1 0
    44 set :j 1
    45 label *label28
    46 jump *label31 greaterThan 1 3
    47 label *label29
    48 op sub *tmp7 :j 1
-    * read *tmp8 :previousLine *tmp7
-    * read *tmp10 :previousLine :j
+   49 read *tmp8 cell2 *tmp7
+   50 read *tmp10 cell2 :j
    51 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :tmp :j
+   52 write *tmp11 cell1 :j
    53 label *label30
    54 op add :j :j 1
    55 jump *label29 lessThanEq :j 3
    56 label *label31
-    * write 1 :tmp 3
-    * op add :lineLength 3 1
+   57 write 1 cell1 3
    58 set :c 0
    59 label *label32
    60 jump *label37 greaterThanEq 0 4
    61 label *label33
-    * read *tmp17 :tmp :c
+   62 read *tmp17 cell1 :c
    63 print *tmp17
-    * op sub *tmp18 4 1
    64 jump *label34 greaterThanEq :c 3
    65 print " "
    66 label *label34
 
    70 jump *label33 lessThan :c 4
    71 label *label37
    72 print "\n"
-    * set :tmp :previousLine
+   73 set :tmp cell2
    74 set :previousLine :currentLine
    75 set :currentLine :tmp
    76 label *label38
-    * op add :i 4 1
    77 label *label39
    78 write 1 :tmp 0
    79 set :j 1
 
    90 jump *label41 lessThanEq :j 4
    91 label *label43
    92 write 1 :tmp 4
-    * op add :lineLength 4 1
    93 set :c 0
    94 label *label44
    95 jump *label49 greaterThanEq 0 5
    96 label *label45
    97 read *tmp17 :tmp :c
    98 print *tmp17
-    * op sub *tmp18 5 1
    99 jump *label46 greaterThanEq :c 4
   100 print " "
   101 label *label46
 
   109 set :previousLine :currentLine
   110 set :currentLine :tmp
   111 label *label50
-    * op add :i 5 1
   112 label *label51
   113 write 1 :tmp 0
   114 set :j 1
 
   125 jump *label53 lessThanEq :j 5
   126 label *label55
   127 write 1 :tmp 5
-    * op add :lineLength 5 1
   128 set :c 0
   129 label *label56
   130 jump *label61 greaterThanEq 0 6
   131 label *label57
   132 read *tmp17 :tmp :c
   133 print *tmp17
-    * op sub *tmp18 6 1
   134 jump *label58 greaterThanEq :c 5
   135 print " "
   136 label *label58
 
   144 set :previousLine :currentLine
   145 set :currentLine :tmp
   146 label *label62
-    * op add :i 6 1
   147 label *label63
   148 write 1 :tmp 0
   149 set :j 1
 
   160 jump *label65 lessThanEq :j 6
   161 label *label67
   162 write 1 :tmp 6
-    * op add :lineLength 6 1
   163 set :c 0
   164 label *label68
   165 jump *label73 greaterThanEq 0 7
   166 label *label69
   167 read *tmp17 :tmp :c
   168 print *tmp17
-    * op sub *tmp18 7 1
   169 jump *label70 greaterThanEq :c 6
   170 print " "
   171 label *label70
 
   179 set :previousLine :currentLine
   180 set :currentLine :tmp
   181 label *label74
-    * op add :i 7 1
   182 label *label75
   183 write 1 :tmp 0
   184 set :j 1
 
   195 jump *label77 lessThanEq :j 7
   196 label *label79
   197 write 1 :tmp 7
-    * op add :lineLength 7 1
   198 set :c 0
   199 label *label80
   200 jump *label85 greaterThanEq 0 8
   201 label *label81
   202 read *tmp17 :tmp :c
   203 print *tmp17
-    * op sub *tmp18 8 1
   204 jump *label82 greaterThanEq :c 7
   205 print " "
   206 label *label82
 
   214 set :previousLine :currentLine
   215 set :currentLine :tmp
   216 label *label86
-    * op add :i 8 1
   217 label *label87
   218 write 1 :tmp 0
   219 set :j 1
 
   230 jump *label89 lessThanEq :j 8
   231 label *label91
   232 write 1 :tmp 8
-    * op add :lineLength 8 1
   233 set :c 0
   234 label *label92
   235 jump *label97 greaterThanEq 0 9
   236 label *label93
   237 read *tmp17 :tmp :c
   238 print *tmp17
-    * op sub *tmp18 9 1
   239 jump *label94 greaterThanEq :c 8
   240 print " "
   241 label *label94
 
   247 print "\n"
   248 set :tmp :previousLine
   249 set :previousLine :currentLine
-    * set :currentLine :tmp
   250 label *label98
-    * op add :i 9 1
   251 label *label99
   252 write 1 :tmp 0
   253 set :j 1
 
   264 jump *label101 lessThanEq :j 9
   265 label *label103
   266 write 1 :tmp 9
-    * op add :lineLength 9 1
   267 set :c 0
   268 label *label104
   269 jump *label109 greaterThanEq 0 10
   270 label *label105
   271 read *tmp17 :tmp :c
   272 print *tmp17
-    * op sub *tmp18 10 1
   273 jump *label106 greaterThanEq :c 9
   274 print " "
   275 label *label106
 
   279 jump *label105 lessThan :c 10
   280 label *label109
   281 print "\n"
-    * set :tmp :previousLine
   282 label *label110
-    * op add :i 10 1
   283 label *label2
   284 printflush message1
   285 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-2 instructions):
 
    35 jump *label21 lessThan :c 3
    36 label *label25
    37 print "\n"
-    * set :tmp cell1
-    * set :previousLine cell2
    38 set :currentLine cell1
    39 label *label26
    40 label *label27
 
    69 label *label37
    70 print "\n"
    71 set :tmp cell2
-    * set :previousLine :currentLine
-    * set :currentLine :tmp
+   72 set :previousLine cell1
+   73 set :currentLine cell2
    74 label *label38
    75 label *label39
-    * write 1 :tmp 0
+   76 write 1 cell2 0
    77 set :j 1
    78 label *label40
    79 jump *label43 greaterThan 1 4
 
    82 read *tmp8 :previousLine *tmp7
    83 read *tmp10 :previousLine :j
    84 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :tmp :j
+   85 write *tmp11 cell2 :j
    86 label *label42
    87 op add :j :j 1
    88 jump *label41 lessThanEq :j 4
    89 label *label43
-    * write 1 :tmp 4
+   90 write 1 cell2 4
    91 set :c 0
    92 label *label44
    93 jump *label49 greaterThanEq 0 5
    94 label *label45
-    * read *tmp17 :tmp :c
+   95 read *tmp17 cell2 :c
    96 print *tmp17
    97 jump *label46 greaterThanEq :c 4
    98 print " "
 
   253 jump *label103 greaterThan 1 9
   254 label *label101
   255 op sub *tmp7 :j 1
-    * read *tmp8 :previousLine *tmp7
-    * read *tmp10 :previousLine :j
+  256 read *tmp8 :currentLine *tmp7
+  257 read *tmp10 :currentLine :j
   258 op add *tmp11 *tmp8 *tmp10
   259 write *tmp11 :tmp :j
   260 label *label102

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-3 instructions):
 
    35 jump *label21 lessThan :c 3
    36 label *label25
    37 print "\n"
-    * set :currentLine cell1
    38 label *label26
    39 label *label27
    40 write 1 cell1 0
 
    67 jump *label33 lessThan :c 4
    68 label *label37
    69 print "\n"
-    * set :tmp cell2
    70 set :previousLine cell1
    71 set :currentLine cell2
    72 label *label38
 
    77 jump *label43 greaterThan 1 4
    78 label *label41
    79 op sub *tmp7 :j 1
-    * read *tmp8 :previousLine *tmp7
-    * read *tmp10 :previousLine :j
+   80 read *tmp8 cell1 *tmp7
+   81 read *tmp10 cell1 :j
    82 op add *tmp11 *tmp8 *tmp10
    83 write *tmp11 cell2 :j
    84 label *label42
 
   101 jump *label45 lessThan :c 5
   102 label *label49
   103 print "\n"
-    * set :tmp :previousLine
-    * set :previousLine :currentLine
+  104 set :tmp cell1
+  105 set :previousLine cell2
   106 set :currentLine :tmp
   107 label *label50
   108 label *label51
 
   242 label *label97
   243 print "\n"
   244 set :tmp :previousLine
-    * set :previousLine :currentLine
   245 label *label98
   246 label *label99
   247 write 1 :tmp 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-2 instructions):
 
    67 jump *label33 lessThan :c 4
    68 label *label37
    69 print "\n"
-    * set :previousLine cell1
-    * set :currentLine cell2
    70 label *label38
    71 label *label39
    72 write 1 cell2 0
 
   101 print "\n"
   102 set :tmp cell1
   103 set :previousLine cell2
-    * set :currentLine :tmp
+  104 set :currentLine cell1
   105 label *label50
   106 label *label51
-    * write 1 :tmp 0
+  107 write 1 cell1 0
   108 set :j 1
   109 label *label52
   110 jump *label55 greaterThan 1 5
   111 label *label53
   112 op sub *tmp7 :j 1
-    * read *tmp8 :previousLine *tmp7
-    * read *tmp10 :previousLine :j
+  113 read *tmp8 cell2 *tmp7
+  114 read *tmp10 cell2 :j
   115 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :tmp :j
+  116 write *tmp11 cell1 :j
   117 label *label54
   118 op add :j :j 1
   119 jump *label53 lessThanEq :j 5
   120 label *label55
-    * write 1 :tmp 5
+  121 write 1 cell1 5
   122 set :c 0
   123 label *label56
   124 jump *label61 greaterThanEq 0 6
   125 label *label57
-    * read *tmp17 :tmp :c
+  126 read *tmp17 cell1 :c
   127 print *tmp17
   128 jump *label58 greaterThanEq :c 5
   129 print " "
 
   134 jump *label57 lessThan :c 6
   135 label *label61
   136 print "\n"
-    * set :tmp :previousLine
+  137 set :tmp cell2
   138 set :previousLine :currentLine
   139 set :currentLine :tmp
   140 label *label62
 
   242 set :tmp :previousLine
   243 label *label98
   244 label *label99
-    * write 1 :tmp 0
+  245 write 1 :previousLine 0
   246 set :j 1
   247 label *label100
   248 jump *label103 greaterThan 1 9
 
   251 read *tmp8 :currentLine *tmp7
   252 read *tmp10 :currentLine :j
   253 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :tmp :j
+  254 write *tmp11 :previousLine :j
   255 label *label102
   256 op add :j :j 1
   257 jump *label101 lessThanEq :j 9
   258 label *label103
-    * write 1 :tmp 9
+  259 write 1 :previousLine 9
   260 set :c 0
   261 label *label104
   262 jump *label109 greaterThanEq 0 10
   263 label *label105
-    * read *tmp17 :tmp :c
+  264 read *tmp17 :previousLine :c
   265 print *tmp17
   266 jump *label106 greaterThanEq :c 9
   267 print " "

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-3 instructions):
 
    99 jump *label45 lessThan :c 5
   100 label *label49
   101 print "\n"
-    * set :tmp cell1
-    * set :previousLine cell2
   102 set :currentLine cell1
   103 label *label50
   104 label *label51
 
   133 label *label61
   134 print "\n"
   135 set :tmp cell2
-    * set :previousLine :currentLine
-    * set :currentLine :tmp
+  136 set :previousLine cell1
+  137 set :currentLine cell2
   138 label *label62
   139 label *label63
-    * write 1 :tmp 0
+  140 write 1 cell2 0
   141 set :j 1
   142 label *label64
   143 jump *label67 greaterThan 1 6
 
   146 read *tmp8 :previousLine *tmp7
   147 read *tmp10 :previousLine :j
   148 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :tmp :j
+  149 write *tmp11 cell2 :j
   150 label *label66
   151 op add :j :j 1
   152 jump *label65 lessThanEq :j 6
   153 label *label67
-    * write 1 :tmp 6
+  154 write 1 cell2 6
   155 set :c 0
   156 label *label68
   157 jump *label73 greaterThanEq 0 7
   158 label *label69
-    * read *tmp17 :tmp :c
+  159 read *tmp17 cell2 :c
   160 print *tmp17
   161 jump *label70 greaterThanEq :c 6
   162 print " "
 
   237 jump *label93 lessThan :c 9
   238 label *label97
   239 print "\n"
-    * set :tmp :previousLine
   240 label *label98
   241 label *label99
   242 write 1 :previousLine 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-2 instructions):
 
    99 jump *label45 lessThan :c 5
   100 label *label49
   101 print "\n"
-    * set :currentLine cell1
   102 label *label50
   103 label *label51
   104 write 1 cell1 0
 
   131 jump *label57 lessThan :c 6
   132 label *label61
   133 print "\n"
-    * set :tmp cell2
   134 set :previousLine cell1
   135 set :currentLine cell2
   136 label *label62
 
   141 jump *label67 greaterThan 1 6
   142 label *label65
   143 op sub *tmp7 :j 1
-    * read *tmp8 :previousLine *tmp7
-    * read *tmp10 :previousLine :j
+  144 read *tmp8 cell1 *tmp7
+  145 read *tmp10 cell1 :j
   146 op add *tmp11 *tmp8 *tmp10
   147 write *tmp11 cell2 :j
   148 label *label66
 
   165 jump *label69 lessThan :c 7
   166 label *label73
   167 print "\n"
-    * set :tmp :previousLine
-    * set :previousLine :currentLine
+  168 set :tmp cell1
+  169 set :previousLine cell2
   170 set :currentLine :tmp
   171 label *label74
   172 label *label75
 
   243 jump *label103 greaterThan 1 9
   244 label *label101
   245 op sub *tmp7 :j 1
-    * read *tmp8 :currentLine *tmp7
-    * read *tmp10 :currentLine :j
+  246 read *tmp8 :tmp *tmp7
+  247 read *tmp10 :tmp :j
   248 op add *tmp11 *tmp8 *tmp10
   249 write *tmp11 :previousLine :j
   250 label *label102

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-3 instructions):
 
   131 jump *label57 lessThan :c 6
   132 label *label61
   133 print "\n"
-    * set :previousLine cell1
-    * set :currentLine cell2
   134 label *label62
   135 label *label63
   136 write 1 cell2 0
 
   165 print "\n"
   166 set :tmp cell1
   167 set :previousLine cell2
-    * set :currentLine :tmp
+  168 set :currentLine cell1
   169 label *label74
   170 label *label75
-    * write 1 :tmp 0
+  171 write 1 cell1 0
   172 set :j 1
   173 label *label76
   174 jump *label79 greaterThan 1 7
   175 label *label77
   176 op sub *tmp7 :j 1
-    * read *tmp8 :previousLine *tmp7
-    * read *tmp10 :previousLine :j
+  177 read *tmp8 cell2 *tmp7
+  178 read *tmp10 cell2 :j
   179 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :tmp :j
+  180 write *tmp11 cell1 :j
   181 label *label78
   182 op add :j :j 1
   183 jump *label77 lessThanEq :j 7
   184 label *label79
-    * write 1 :tmp 7
+  185 write 1 cell1 7
   186 set :c 0
   187 label *label80
   188 jump *label85 greaterThanEq 0 8
   189 label *label81
-    * read *tmp17 :tmp :c
+  190 read *tmp17 cell1 :c
   191 print *tmp17
   192 jump *label82 greaterThanEq :c 7
   193 print " "
 
   198 jump *label81 lessThan :c 8
   199 label *label85
   200 print "\n"
-    * set :tmp :previousLine
+  201 set :tmp cell2
   202 set :previousLine :currentLine
-    * set :currentLine :tmp
   203 label *label86
   204 label *label87
   205 write 1 :tmp 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 9 (-2 instructions):
 
   163 jump *label69 lessThan :c 7
   164 label *label73
   165 print "\n"
-    * set :tmp cell1
-    * set :previousLine cell2
   166 set :currentLine cell1
   167 label *label74
   168 label *label75
 
   197 label *label85
   198 print "\n"
   199 set :tmp cell2
-    * set :previousLine :currentLine
+  200 set :previousLine cell1
   201 label *label86
   202 label *label87
-    * write 1 :tmp 0
+  203 write 1 cell2 0
   204 set :j 1
   205 label *label88
   206 jump *label91 greaterThan 1 8
   207 label *label89
   208 op sub *tmp7 :j 1
-    * read *tmp8 :previousLine *tmp7
-    * read *tmp10 :previousLine :j
+  209 read *tmp8 :currentLine *tmp7
+  210 read *tmp10 :currentLine :j
   211 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :tmp :j
+  212 write *tmp11 cell2 :j
   213 label *label90
   214 op add :j :j 1
   215 jump *label89 lessThanEq :j 8
   216 label *label91
-    * write 1 :tmp 8
+  217 write 1 cell2 8
   218 set :c 0
   219 label *label92
   220 jump *label97 greaterThanEq 0 9
   221 label *label93
-    * read *tmp17 :tmp :c
+  222 read *tmp17 cell2 :c
   223 print *tmp17
   224 jump *label94 greaterThanEq :c 8
   225 print " "
 
   232 print "\n"
   233 label *label98
   234 label *label99
-    * write 1 :previousLine 0
+  235 write 1 :currentLine 0
   236 set :j 1
   237 label *label100
   238 jump *label103 greaterThan 1 9
   239 label *label101
   240 op sub *tmp7 :j 1
-    * read *tmp8 :tmp *tmp7
-    * read *tmp10 :tmp :j
+  241 read *tmp8 cell2 *tmp7
+  242 read *tmp10 cell2 :j
   243 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :previousLine :j
+  244 write *tmp11 :currentLine :j
   245 label *label102
   246 op add :j :j 1
   247 jump *label101 lessThanEq :j 9
   248 label *label103
-    * write 1 :previousLine 9
+  249 write 1 :currentLine 9
   250 set :c 0
   251 label *label104
   252 jump *label109 greaterThanEq 0 10
   253 label *label105
-    * read *tmp17 :previousLine :c
+  254 read *tmp17 :currentLine :c
   255 print *tmp17
   256 jump *label106 greaterThanEq :c 9
   257 print " "

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 10 (-2 instructions):
 
   196 jump *label81 lessThan :c 8
   197 label *label85
   198 print "\n"
-    * set :tmp cell2
-    * set :previousLine cell1
   199 label *label86
   200 label *label87
   201 write 1 cell2 0
 
   204 jump *label91 greaterThan 1 8
   205 label *label89
   206 op sub *tmp7 :j 1
-    * read *tmp8 :currentLine *tmp7
-    * read *tmp10 :currentLine :j
+  207 read *tmp8 cell1 *tmp7
+  208 read *tmp10 cell1 :j
   209 op add *tmp11 *tmp8 *tmp10
   210 write *tmp11 cell2 :j
   211 label *label90
 
   230 print "\n"
   231 label *label98
   232 label *label99
-    * write 1 :currentLine 0
+  233 write 1 cell1 0
   234 set :j 1
   235 label *label100
   236 jump *label103 greaterThan 1 9
 
   239 read *tmp8 cell2 *tmp7
   240 read *tmp10 cell2 :j
   241 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 :currentLine :j
+  242 write *tmp11 cell1 :j
   243 label *label102
   244 op add :j :j 1
   245 jump *label101 lessThanEq :j 9
   246 label *label103
-    * write 1 :currentLine 9
+  247 write 1 cell1 9
   248 set :c 0
   249 label *label104
   250 jump *label109 greaterThanEq 0 10
   251 label *label105
-    * read *tmp17 :currentLine :c
+  252 read *tmp17 cell1 :c
   253 print *tmp17
   254 jump *label106 greaterThanEq :c 9
   255 print " "

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 11 (-1 instructions):
 
   163 jump *label69 lessThan :c 7
   164 label *label73
   165 print "\n"
-    * set :currentLine cell1
   166 label *label74
   167 label *label75
   168 write 1 cell1 0

Modifications by Unroll loop at line 28:9 (+4 instructions):
 
     6 label *label14
     7 label *label15
     8 write 1 cell2 0
-    * set :j 1
-    * label *label16
-    * jump *label19 greaterThan 1 2
-    * label *label17
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
-    * op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
-    * label *label18
-    * op add :j :j 1
-    * jump *label17 lessThanEq :j 2
-    * label *label19
+    9 set :j 1
+   10 label *label111
+   11 label *label112
+   12 op sub *tmp7 :j 1
+   13 read *tmp8 cell1 *tmp7
+   14 read *tmp10 cell1 :j
+   15 op add *tmp11 *tmp8 *tmp10
+   16 write *tmp11 cell2 :j
+   17 label *label113
+   18 op add :j :j 1
+   19 label *label114
+   20 op sub *tmp7 :j 1
+   21 read *tmp8 cell1 *tmp7
+   22 read *tmp10 cell1 :j
+   23 op add *tmp11 *tmp8 *tmp10
+   24 write *tmp11 cell2 :j
+   25 label *label115
+   26 op add :j :j 1
+   27 label *label19
    28 write 1 cell2 2
    29 set :c 0
    30 label *label20

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     9 set :j 1
    10 label *label111
    11 label *label112
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+   12 op sub *tmp7 1 1
+   13 read *tmp8 cell1 0
+   14 read *tmp10 cell1 1
    15 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+   16 write *tmp11 cell2 1
    17 label *label113
-    * op add :j :j 1
+   18 op add :j 1 1
    19 label *label114
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+   20 op sub *tmp7 2 1
+   21 read *tmp8 cell1 1
+   22 read *tmp10 cell1 2
    23 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+   24 write *tmp11 cell2 2
    25 label *label115
-    * op add :j :j 1
+   26 op add :j 2 1
    27 label *label19
    28 write 1 cell2 2
    29 set :c 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
 
     6 label *label14
     7 label *label15
     8 write 1 cell2 0
-    * set :j 1
     9 label *label111
    10 label *label112
-    * op sub *tmp7 1 1
    11 read *tmp8 cell1 0
    12 read *tmp10 cell1 1
    13 op add *tmp11 *tmp8 *tmp10
    14 write *tmp11 cell2 1
    15 label *label113
-    * op add :j 1 1
    16 label *label114
-    * op sub *tmp7 2 1
    17 read *tmp8 cell1 1
    18 read *tmp10 cell1 2
    19 op add *tmp11 *tmp8 *tmp10
    20 write *tmp11 cell2 2
    21 label *label115
-    * op add :j 2 1
    22 label *label19
    23 write 1 cell2 2
    24 set :c 0

Modifications by Unroll loop at line 34:9 (+8 instructions):
 
    21 label *label115
    22 label *label19
    23 write 1 cell2 2
-    * set :c 0
-    * label *label20
-    * jump *label25 greaterThanEq 0 3
-    * label *label21
-    * read *tmp17 cell2 :c
-    * print *tmp17
-    * jump *label22 greaterThanEq :c 2
-    * print " "
-    * label *label22
-    * label *label23
-    * label *label24
-    * op add :c :c 1
-    * jump *label21 lessThan :c 3
-    * label *label25
+   24 set :c 0
+   25 label *label116
+   26 label *label117
+   27 read *tmp17 cell2 :c
+   28 print *tmp17
+   29 jump *label118 greaterThanEq :c 2
+   30 print " "
+   31 label *label118
+   32 label *label119
+   33 label *label120
+   34 op add :c :c 1
+   35 label *label121
+   36 read *tmp17 cell2 :c
+   37 print *tmp17
+   38 jump *label122 greaterThanEq :c 2
+   39 print " "
+   40 label *label122
+   41 label *label123
+   42 label *label124
+   43 op add :c :c 1
+   44 label *label125
+   45 read *tmp17 cell2 :c
+   46 print *tmp17
+   47 jump *label126 greaterThanEq :c 2
+   48 print " "
+   49 label *label126
+   50 label *label127
+   51 label *label128
+   52 op add :c :c 1
+   53 label *label25
    54 print "\n"
    55 label *label26
    56 label *label27

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    24 set :c 0
    25 label *label116
    26 label *label117
-    * read *tmp17 cell2 :c
+   27 read *tmp17 cell2 0
    28 print *tmp17
-    * jump *label118 greaterThanEq :c 2
+   29 jump *label118 greaterThanEq 0 2
    30 print " "
    31 label *label118
    32 label *label119
    33 label *label120
-    * op add :c :c 1
+   34 op add :c 0 1
    35 label *label121
-    * read *tmp17 cell2 :c
+   36 read *tmp17 cell2 1
    37 print *tmp17
-    * jump *label122 greaterThanEq :c 2
+   38 jump *label122 greaterThanEq 1 2
    39 print " "
    40 label *label122
    41 label *label123
    42 label *label124
-    * op add :c :c 1
+   43 op add :c 1 1
    44 label *label125
-    * read *tmp17 cell2 :c
+   45 read *tmp17 cell2 2
    46 print *tmp17
-    * jump *label126 greaterThanEq :c 2
+   47 jump *label126 greaterThanEq 2 2
    48 print " "
    49 label *label126
    50 label *label127
    51 label *label128
-    * op add :c :c 1
+   52 op add :c 2 1
    53 label *label25
    54 print "\n"
    55 label *label26

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
    21 label *label115
    22 label *label19
    23 write 1 cell2 2
-    * set :c 0
    24 label *label116
    25 label *label117
    26 read *tmp17 cell2 0
 
    30 label *label118
    31 label *label119
    32 label *label120
-    * op add :c 0 1
    33 label *label121
    34 read *tmp17 cell2 1
    35 print *tmp17
 
    38 label *label122
    39 label *label123
    40 label *label124
-    * op add :c 1 1
    41 label *label125
    42 read *tmp17 cell2 2
    43 print *tmp17
 
    46 label *label126
    47 label *label127
    48 label *label128
-    * op add :c 2 1
    49 label *label25
    50 print "\n"
    51 label *label26

Modifications by Unroll loop at line 28:9 (+10 instructions):
 
    51 label *label26
    52 label *label27
    53 write 1 cell1 0
-    * set :j 1
-    * label *label28
-    * jump *label31 greaterThan 1 3
-    * label *label29
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
-    * op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
-    * label *label30
-    * op add :j :j 1
-    * jump *label29 lessThanEq :j 3
-    * label *label31
+   54 set :j 1
+   55 label *label129
+   56 label *label130
+   57 op sub *tmp7 :j 1
+   58 read *tmp8 cell2 *tmp7
+   59 read *tmp10 cell2 :j
+   60 op add *tmp11 *tmp8 *tmp10
+   61 write *tmp11 cell1 :j
+   62 label *label131
+   63 op add :j :j 1
+   64 label *label132
+   65 op sub *tmp7 :j 1
+   66 read *tmp8 cell2 *tmp7
+   67 read *tmp10 cell2 :j
+   68 op add *tmp11 *tmp8 *tmp10
+   69 write *tmp11 cell1 :j
+   70 label *label133
+   71 op add :j :j 1
+   72 label *label134
+   73 op sub *tmp7 :j 1
+   74 read *tmp8 cell2 *tmp7
+   75 read *tmp10 cell2 :j
+   76 op add *tmp11 *tmp8 *tmp10
+   77 write *tmp11 cell1 :j
+   78 label *label135
+   79 op add :j :j 1
+   80 label *label31
    81 write 1 cell1 3
    82 set :c 0
    83 label *label32

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    54 set :j 1
    55 label *label129
    56 label *label130
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+   57 op sub *tmp7 1 1
+   58 read *tmp8 cell2 0
+   59 read *tmp10 cell2 1
    60 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+   61 write *tmp11 cell1 1
    62 label *label131
-    * op add :j :j 1
+   63 op add :j 1 1
    64 label *label132
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+   65 op sub *tmp7 2 1
+   66 read *tmp8 cell2 1
+   67 read *tmp10 cell2 2
    68 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+   69 write *tmp11 cell1 2
    70 label *label133
-    * op add :j :j 1
+   71 op add :j 2 1
    72 label *label134
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+   73 op sub *tmp7 3 1
+   74 read *tmp8 cell2 2
+   75 read *tmp10 cell2 3
    76 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+   77 write *tmp11 cell1 3
    78 label *label135
-    * op add :j :j 1
+   79 op add :j 3 1
    80 label *label31
    81 write 1 cell1 3
    82 set :c 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
    51 label *label26
    52 label *label27
    53 write 1 cell1 0
-    * set :j 1
    54 label *label129
    55 label *label130
-    * op sub *tmp7 1 1
    56 read *tmp8 cell2 0
    57 read *tmp10 cell2 1
    58 op add *tmp11 *tmp8 *tmp10
    59 write *tmp11 cell1 1
    60 label *label131
-    * op add :j 1 1
    61 label *label132
-    * op sub *tmp7 2 1
    62 read *tmp8 cell2 1
    63 read *tmp10 cell2 2
    64 op add *tmp11 *tmp8 *tmp10
    65 write *tmp11 cell1 2
    66 label *label133
-    * op add :j 2 1
    67 label *label134
-    * op sub *tmp7 3 1
    68 read *tmp8 cell2 2
    69 read *tmp10 cell2 3
    70 op add *tmp11 *tmp8 *tmp10
    71 write *tmp11 cell1 3
    72 label *label135
-    * op add :j 3 1
    73 label *label31
    74 write 1 cell1 3
    75 set :c 0

Modifications by Unroll loop at line 34:9 (+13 instructions):
 
    72 label *label135
    73 label *label31
    74 write 1 cell1 3
-    * set :c 0
-    * label *label32
-    * jump *label37 greaterThanEq 0 4
-    * label *label33
-    * read *tmp17 cell1 :c
-    * print *tmp17
-    * jump *label34 greaterThanEq :c 3
-    * print " "
-    * label *label34
-    * label *label35
-    * label *label36
-    * op add :c :c 1
-    * jump *label33 lessThan :c 4
-    * label *label37
+   75 set :c 0
+   76 label *label136
+   77 label *label137
+   78 read *tmp17 cell1 :c
+   79 print *tmp17
+   80 jump *label138 greaterThanEq :c 3
+   81 print " "
+   82 label *label138
+   83 label *label139
+   84 label *label140
+   85 op add :c :c 1
+   86 label *label141
+   87 read *tmp17 cell1 :c
+   88 print *tmp17
+   89 jump *label142 greaterThanEq :c 3
+   90 print " "
+   91 label *label142
+   92 label *label143
+   93 label *label144
+   94 op add :c :c 1
+   95 label *label145
+   96 read *tmp17 cell1 :c
+   97 print *tmp17
+   98 jump *label146 greaterThanEq :c 3
+   99 print " "
+  100 label *label146
+  101 label *label147
+  102 label *label148
+  103 op add :c :c 1
+  104 label *label149
+  105 read *tmp17 cell1 :c
+  106 print *tmp17
+  107 jump *label150 greaterThanEq :c 3
+  108 print " "
+  109 label *label150
+  110 label *label151
+  111 label *label152
+  112 op add :c :c 1
+  113 label *label37
   114 print "\n"
   115 label *label38
   116 label *label39

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    75 set :c 0
    76 label *label136
    77 label *label137
-    * read *tmp17 cell1 :c
+   78 read *tmp17 cell1 0
    79 print *tmp17
-    * jump *label138 greaterThanEq :c 3
+   80 jump *label138 greaterThanEq 0 3
    81 print " "
    82 label *label138
    83 label *label139
    84 label *label140
-    * op add :c :c 1
+   85 op add :c 0 1
    86 label *label141
-    * read *tmp17 cell1 :c
+   87 read *tmp17 cell1 1
    88 print *tmp17
-    * jump *label142 greaterThanEq :c 3
+   89 jump *label142 greaterThanEq 1 3
    90 print " "
    91 label *label142
    92 label *label143
    93 label *label144
-    * op add :c :c 1
+   94 op add :c 1 1
    95 label *label145
-    * read *tmp17 cell1 :c
+   96 read *tmp17 cell1 2
    97 print *tmp17
-    * jump *label146 greaterThanEq :c 3
+   98 jump *label146 greaterThanEq 2 3
    99 print " "
   100 label *label146
   101 label *label147
   102 label *label148
-    * op add :c :c 1
+  103 op add :c 2 1
   104 label *label149
-    * read *tmp17 cell1 :c
+  105 read *tmp17 cell1 3
   106 print *tmp17
-    * jump *label150 greaterThanEq :c 3
+  107 jump *label150 greaterThanEq 3 3
   108 print " "
   109 label *label150
   110 label *label151
   111 label *label152
-    * op add :c :c 1
+  112 op add :c 3 1
   113 label *label37
   114 print "\n"
   115 label *label38

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
 
    72 label *label135
    73 label *label31
    74 write 1 cell1 3
-    * set :c 0
    75 label *label136
    76 label *label137
    77 read *tmp17 cell1 0
 
    81 label *label138
    82 label *label139
    83 label *label140
-    * op add :c 0 1
    84 label *label141
    85 read *tmp17 cell1 1
    86 print *tmp17
 
    89 label *label142
    90 label *label143
    91 label *label144
-    * op add :c 1 1
    92 label *label145
    93 read *tmp17 cell1 2
    94 print *tmp17
 
    97 label *label146
    98 label *label147
    99 label *label148
-    * op add :c 2 1
   100 label *label149
   101 read *tmp17 cell1 3
   102 print *tmp17
 
   105 label *label150
   106 label *label151
   107 label *label152
-    * op add :c 3 1
   108 label *label37
   109 print "\n"
   110 label *label38

Modifications by Unroll loop at line 34:9 (+18 instructions):
 
   124 jump *label41 lessThanEq :j 4
   125 label *label43
   126 write 1 cell2 4
-    * set :c 0
-    * label *label44
-    * jump *label49 greaterThanEq 0 5
-    * label *label45
-    * read *tmp17 cell2 :c
-    * print *tmp17
-    * jump *label46 greaterThanEq :c 4
-    * print " "
-    * label *label46
-    * label *label47
-    * label *label48
-    * op add :c :c 1
-    * jump *label45 lessThan :c 5
-    * label *label49
+  127 set :c 0
+  128 label *label153
+  129 label *label154
+  130 read *tmp17 cell2 :c
+  131 print *tmp17
+  132 jump *label155 greaterThanEq :c 4
+  133 print " "
+  134 label *label155
+  135 label *label156
+  136 label *label157
+  137 op add :c :c 1
+  138 label *label158
+  139 read *tmp17 cell2 :c
+  140 print *tmp17
+  141 jump *label159 greaterThanEq :c 4
+  142 print " "
+  143 label *label159
+  144 label *label160
+  145 label *label161
+  146 op add :c :c 1
+  147 label *label162
+  148 read *tmp17 cell2 :c
+  149 print *tmp17
+  150 jump *label163 greaterThanEq :c 4
+  151 print " "
+  152 label *label163
+  153 label *label164
+  154 label *label165
+  155 op add :c :c 1
+  156 label *label166
+  157 read *tmp17 cell2 :c
+  158 print *tmp17
+  159 jump *label167 greaterThanEq :c 4
+  160 print " "
+  161 label *label167
+  162 label *label168
+  163 label *label169
+  164 op add :c :c 1
+  165 label *label170
+  166 read *tmp17 cell2 :c
+  167 print *tmp17
+  168 jump *label171 greaterThanEq :c 4
+  169 print " "
+  170 label *label171
+  171 label *label172
+  172 label *label173
+  173 op add :c :c 1
+  174 label *label49
   175 print "\n"
   176 label *label50
   177 label *label51

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   127 set :c 0
   128 label *label153
   129 label *label154
-    * read *tmp17 cell2 :c
+  130 read *tmp17 cell2 0
   131 print *tmp17
-    * jump *label155 greaterThanEq :c 4
+  132 jump *label155 greaterThanEq 0 4
   133 print " "
   134 label *label155
   135 label *label156
   136 label *label157
-    * op add :c :c 1
+  137 op add :c 0 1
   138 label *label158
-    * read *tmp17 cell2 :c
+  139 read *tmp17 cell2 1
   140 print *tmp17
-    * jump *label159 greaterThanEq :c 4
+  141 jump *label159 greaterThanEq 1 4
   142 print " "
   143 label *label159
   144 label *label160
   145 label *label161
-    * op add :c :c 1
+  146 op add :c 1 1
   147 label *label162
-    * read *tmp17 cell2 :c
+  148 read *tmp17 cell2 2
   149 print *tmp17
-    * jump *label163 greaterThanEq :c 4
+  150 jump *label163 greaterThanEq 2 4
   151 print " "
   152 label *label163
   153 label *label164
   154 label *label165
-    * op add :c :c 1
+  155 op add :c 2 1
   156 label *label166
-    * read *tmp17 cell2 :c
+  157 read *tmp17 cell2 3
   158 print *tmp17
-    * jump *label167 greaterThanEq :c 4
+  159 jump *label167 greaterThanEq 3 4
   160 print " "
   161 label *label167
   162 label *label168
   163 label *label169
-    * op add :c :c 1
+  164 op add :c 3 1
   165 label *label170
-    * read *tmp17 cell2 :c
+  166 read *tmp17 cell2 4
   167 print *tmp17
-    * jump *label171 greaterThanEq :c 4
+  168 jump *label171 greaterThanEq 4 4
   169 print " "
   170 label *label171
   171 label *label172
   172 label *label173
-    * op add :c :c 1
+  173 op add :c 4 1
   174 label *label49
   175 print "\n"
   176 label *label50

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   124 jump *label41 lessThanEq :j 4
   125 label *label43
   126 write 1 cell2 4
-    * set :c 0
   127 label *label153
   128 label *label154
   129 read *tmp17 cell2 0
 
   133 label *label155
   134 label *label156
   135 label *label157
-    * op add :c 0 1
   136 label *label158
   137 read *tmp17 cell2 1
   138 print *tmp17
 
   141 label *label159
   142 label *label160
   143 label *label161
-    * op add :c 1 1
   144 label *label162
   145 read *tmp17 cell2 2
   146 print *tmp17
 
   149 label *label163
   150 label *label164
   151 label *label165
-    * op add :c 2 1
   152 label *label166
   153 read *tmp17 cell2 3
   154 print *tmp17
 
   157 label *label167
   158 label *label168
   159 label *label169
-    * op add :c 3 1
   160 label *label170
   161 read *tmp17 cell2 4
   162 print *tmp17
 
   165 label *label171
   166 label *label172
   167 label *label173
-    * op add :c 4 1
   168 label *label49
   169 print "\n"
   170 label *label50

Modifications by Unroll loop at line 34:9 (+23 instructions):
 
   184 jump *label53 lessThanEq :j 5
   185 label *label55
   186 write 1 cell1 5
-    * set :c 0
-    * label *label56
-    * jump *label61 greaterThanEq 0 6
-    * label *label57
-    * read *tmp17 cell1 :c
-    * print *tmp17
-    * jump *label58 greaterThanEq :c 5
-    * print " "
-    * label *label58
-    * label *label59
-    * label *label60
-    * op add :c :c 1
-    * jump *label57 lessThan :c 6
-    * label *label61
+  187 set :c 0
+  188 label *label174
+  189 label *label175
+  190 read *tmp17 cell1 :c
+  191 print *tmp17
+  192 jump *label176 greaterThanEq :c 5
+  193 print " "
+  194 label *label176
+  195 label *label177
+  196 label *label178
+  197 op add :c :c 1
+  198 label *label179
+  199 read *tmp17 cell1 :c
+  200 print *tmp17
+  201 jump *label180 greaterThanEq :c 5
+  202 print " "
+  203 label *label180
+  204 label *label181
+  205 label *label182
+  206 op add :c :c 1
+  207 label *label183
+  208 read *tmp17 cell1 :c
+  209 print *tmp17
+  210 jump *label184 greaterThanEq :c 5
+  211 print " "
+  212 label *label184
+  213 label *label185
+  214 label *label186
+  215 op add :c :c 1
+  216 label *label187
+  217 read *tmp17 cell1 :c
+  218 print *tmp17
+  219 jump *label188 greaterThanEq :c 5
+  220 print " "
+  221 label *label188
+  222 label *label189
+  223 label *label190
+  224 op add :c :c 1
+  225 label *label191
+  226 read *tmp17 cell1 :c
+  227 print *tmp17
+  228 jump *label192 greaterThanEq :c 5
+  229 print " "
+  230 label *label192
+  231 label *label193
+  232 label *label194
+  233 op add :c :c 1
+  234 label *label195
+  235 read *tmp17 cell1 :c
+  236 print *tmp17
+  237 jump *label196 greaterThanEq :c 5
+  238 print " "
+  239 label *label196
+  240 label *label197
+  241 label *label198
+  242 op add :c :c 1
+  243 label *label61
   244 print "\n"
   245 label *label62
   246 label *label63

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   187 set :c 0
   188 label *label174
   189 label *label175
-    * read *tmp17 cell1 :c
+  190 read *tmp17 cell1 0
   191 print *tmp17
-    * jump *label176 greaterThanEq :c 5
+  192 jump *label176 greaterThanEq 0 5
   193 print " "
   194 label *label176
   195 label *label177
   196 label *label178
-    * op add :c :c 1
+  197 op add :c 0 1
   198 label *label179
-    * read *tmp17 cell1 :c
+  199 read *tmp17 cell1 1
   200 print *tmp17
-    * jump *label180 greaterThanEq :c 5
+  201 jump *label180 greaterThanEq 1 5
   202 print " "
   203 label *label180
   204 label *label181
   205 label *label182
-    * op add :c :c 1
+  206 op add :c 1 1
   207 label *label183
-    * read *tmp17 cell1 :c
+  208 read *tmp17 cell1 2
   209 print *tmp17
-    * jump *label184 greaterThanEq :c 5
+  210 jump *label184 greaterThanEq 2 5
   211 print " "
   212 label *label184
   213 label *label185
   214 label *label186
-    * op add :c :c 1
+  215 op add :c 2 1
   216 label *label187
-    * read *tmp17 cell1 :c
+  217 read *tmp17 cell1 3
   218 print *tmp17
-    * jump *label188 greaterThanEq :c 5
+  219 jump *label188 greaterThanEq 3 5
   220 print " "
   221 label *label188
   222 label *label189
   223 label *label190
-    * op add :c :c 1
+  224 op add :c 3 1
   225 label *label191
-    * read *tmp17 cell1 :c
+  226 read *tmp17 cell1 4
   227 print *tmp17
-    * jump *label192 greaterThanEq :c 5
+  228 jump *label192 greaterThanEq 4 5
   229 print " "
   230 label *label192
   231 label *label193
   232 label *label194
-    * op add :c :c 1
+  233 op add :c 4 1
   234 label *label195
-    * read *tmp17 cell1 :c
+  235 read *tmp17 cell1 5
   236 print *tmp17
-    * jump *label196 greaterThanEq :c 5
+  237 jump *label196 greaterThanEq 5 5
   238 print " "
   239 label *label196
   240 label *label197
   241 label *label198
-    * op add :c :c 1
+  242 op add :c 5 1
   243 label *label61
   244 print "\n"
   245 label *label62

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   184 jump *label53 lessThanEq :j 5
   185 label *label55
   186 write 1 cell1 5
-    * set :c 0
   187 label *label174
   188 label *label175
   189 read *tmp17 cell1 0
 
   193 label *label176
   194 label *label177
   195 label *label178
-    * op add :c 0 1
   196 label *label179
   197 read *tmp17 cell1 1
   198 print *tmp17
 
   201 label *label180
   202 label *label181
   203 label *label182
-    * op add :c 1 1
   204 label *label183
   205 read *tmp17 cell1 2
   206 print *tmp17
 
   209 label *label184
   210 label *label185
   211 label *label186
-    * op add :c 2 1
   212 label *label187
   213 read *tmp17 cell1 3
   214 print *tmp17
 
   217 label *label188
   218 label *label189
   219 label *label190
-    * op add :c 3 1
   220 label *label191
   221 read *tmp17 cell1 4
   222 print *tmp17
 
   225 label *label192
   226 label *label193
   227 label *label194
-    * op add :c 4 1
   228 label *label195
   229 read *tmp17 cell1 5
   230 print *tmp17
 
   233 label *label196
   234 label *label197
   235 label *label198
-    * op add :c 5 1
   236 label *label61
   237 print "\n"
   238 label *label62

Modifications by Unroll loop at line 28:9 (+16 instructions):
 
   110 label *label38
   111 label *label39
   112 write 1 cell2 0
-    * set :j 1
-    * label *label40
-    * jump *label43 greaterThan 1 4
-    * label *label41
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
-    * op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
-    * label *label42
-    * op add :j :j 1
-    * jump *label41 lessThanEq :j 4
-    * label *label43
+  113 set :j 1
+  114 label *label199
+  115 label *label200
+  116 op sub *tmp7 :j 1
+  117 read *tmp8 cell1 *tmp7
+  118 read *tmp10 cell1 :j
+  119 op add *tmp11 *tmp8 *tmp10
+  120 write *tmp11 cell2 :j
+  121 label *label201
+  122 op add :j :j 1
+  123 label *label202
+  124 op sub *tmp7 :j 1
+  125 read *tmp8 cell1 *tmp7
+  126 read *tmp10 cell1 :j
+  127 op add *tmp11 *tmp8 *tmp10
+  128 write *tmp11 cell2 :j
+  129 label *label203
+  130 op add :j :j 1
+  131 label *label204
+  132 op sub *tmp7 :j 1
+  133 read *tmp8 cell1 *tmp7
+  134 read *tmp10 cell1 :j
+  135 op add *tmp11 *tmp8 *tmp10
+  136 write *tmp11 cell2 :j
+  137 label *label205
+  138 op add :j :j 1
+  139 label *label206
+  140 op sub *tmp7 :j 1
+  141 read *tmp8 cell1 *tmp7
+  142 read *tmp10 cell1 :j
+  143 op add *tmp11 *tmp8 *tmp10
+  144 write *tmp11 cell2 :j
+  145 label *label207
+  146 op add :j :j 1
+  147 label *label43
   148 write 1 cell2 4
   149 label *label153
   150 label *label154

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   113 set :j 1
   114 label *label199
   115 label *label200
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  116 op sub *tmp7 1 1
+  117 read *tmp8 cell1 0
+  118 read *tmp10 cell1 1
   119 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  120 write *tmp11 cell2 1
   121 label *label201
-    * op add :j :j 1
+  122 op add :j 1 1
   123 label *label202
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  124 op sub *tmp7 2 1
+  125 read *tmp8 cell1 1
+  126 read *tmp10 cell1 2
   127 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  128 write *tmp11 cell2 2
   129 label *label203
-    * op add :j :j 1
+  130 op add :j 2 1
   131 label *label204
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  132 op sub *tmp7 3 1
+  133 read *tmp8 cell1 2
+  134 read *tmp10 cell1 3
   135 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  136 write *tmp11 cell2 3
   137 label *label205
-    * op add :j :j 1
+  138 op add :j 3 1
   139 label *label206
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  140 op sub *tmp7 4 1
+  141 read *tmp8 cell1 3
+  142 read *tmp10 cell1 4
   143 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  144 write *tmp11 cell2 4
   145 label *label207
-    * op add :j :j 1
+  146 op add :j 4 1
   147 label *label43
   148 write 1 cell2 4
   149 label *label153

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   110 label *label38
   111 label *label39
   112 write 1 cell2 0
-    * set :j 1
   113 label *label199
   114 label *label200
-    * op sub *tmp7 1 1
   115 read *tmp8 cell1 0
   116 read *tmp10 cell1 1
   117 op add *tmp11 *tmp8 *tmp10
   118 write *tmp11 cell2 1
   119 label *label201
-    * op add :j 1 1
   120 label *label202
-    * op sub *tmp7 2 1
   121 read *tmp8 cell1 1
   122 read *tmp10 cell1 2
   123 op add *tmp11 *tmp8 *tmp10
   124 write *tmp11 cell2 2
   125 label *label203
-    * op add :j 2 1
   126 label *label204
-    * op sub *tmp7 3 1
   127 read *tmp8 cell1 2
   128 read *tmp10 cell1 3
   129 op add *tmp11 *tmp8 *tmp10
   130 write *tmp11 cell2 3
   131 label *label205
-    * op add :j 3 1
   132 label *label206
-    * op sub *tmp7 4 1
   133 read *tmp8 cell1 3
   134 read *tmp10 cell1 4
   135 op add *tmp11 *tmp8 *tmp10
   136 write *tmp11 cell2 4
   137 label *label207
-    * op add :j 4 1
   138 label *label43
   139 write 1 cell2 4
   140 label *label153

Modifications by Unroll loop at line 34:9 (+28 instructions):
 
   265 jump *label65 lessThanEq :j 6
   266 label *label67
   267 write 1 cell2 6
-    * set :c 0
-    * label *label68
-    * jump *label73 greaterThanEq 0 7
-    * label *label69
-    * read *tmp17 cell2 :c
-    * print *tmp17
-    * jump *label70 greaterThanEq :c 6
-    * print " "
-    * label *label70
-    * label *label71
-    * label *label72
-    * op add :c :c 1
-    * jump *label69 lessThan :c 7
-    * label *label73
+  268 set :c 0
+  269 label *label208
+  270 label *label209
+  271 read *tmp17 cell2 :c
+  272 print *tmp17
+  273 jump *label210 greaterThanEq :c 6
+  274 print " "
+  275 label *label210
+  276 label *label211
+  277 label *label212
+  278 op add :c :c 1
+  279 label *label213
+  280 read *tmp17 cell2 :c
+  281 print *tmp17
+  282 jump *label214 greaterThanEq :c 6
+  283 print " "
+  284 label *label214
+  285 label *label215
+  286 label *label216
+  287 op add :c :c 1
+  288 label *label217
+  289 read *tmp17 cell2 :c
+  290 print *tmp17
+  291 jump *label218 greaterThanEq :c 6
+  292 print " "
+  293 label *label218
+  294 label *label219
+  295 label *label220
+  296 op add :c :c 1
+  297 label *label221
+  298 read *tmp17 cell2 :c
+  299 print *tmp17
+  300 jump *label222 greaterThanEq :c 6
+  301 print " "
+  302 label *label222
+  303 label *label223
+  304 label *label224
+  305 op add :c :c 1
+  306 label *label225
+  307 read *tmp17 cell2 :c
+  308 print *tmp17
+  309 jump *label226 greaterThanEq :c 6
+  310 print " "
+  311 label *label226
+  312 label *label227
+  313 label *label228
+  314 op add :c :c 1
+  315 label *label229
+  316 read *tmp17 cell2 :c
+  317 print *tmp17
+  318 jump *label230 greaterThanEq :c 6
+  319 print " "
+  320 label *label230
+  321 label *label231
+  322 label *label232
+  323 op add :c :c 1
+  324 label *label233
+  325 read *tmp17 cell2 :c
+  326 print *tmp17
+  327 jump *label234 greaterThanEq :c 6
+  328 print " "
+  329 label *label234
+  330 label *label235
+  331 label *label236
+  332 op add :c :c 1
+  333 label *label73
   334 print "\n"
   335 label *label74
   336 label *label75

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   268 set :c 0
   269 label *label208
   270 label *label209
-    * read *tmp17 cell2 :c
+  271 read *tmp17 cell2 0
   272 print *tmp17
-    * jump *label210 greaterThanEq :c 6
+  273 jump *label210 greaterThanEq 0 6
   274 print " "
   275 label *label210
   276 label *label211
   277 label *label212
-    * op add :c :c 1
+  278 op add :c 0 1
   279 label *label213
-    * read *tmp17 cell2 :c
+  280 read *tmp17 cell2 1
   281 print *tmp17
-    * jump *label214 greaterThanEq :c 6
+  282 jump *label214 greaterThanEq 1 6
   283 print " "
   284 label *label214
   285 label *label215
   286 label *label216
-    * op add :c :c 1
+  287 op add :c 1 1
   288 label *label217
-    * read *tmp17 cell2 :c
+  289 read *tmp17 cell2 2
   290 print *tmp17
-    * jump *label218 greaterThanEq :c 6
+  291 jump *label218 greaterThanEq 2 6
   292 print " "
   293 label *label218
   294 label *label219
   295 label *label220
-    * op add :c :c 1
+  296 op add :c 2 1
   297 label *label221
-    * read *tmp17 cell2 :c
+  298 read *tmp17 cell2 3
   299 print *tmp17
-    * jump *label222 greaterThanEq :c 6
+  300 jump *label222 greaterThanEq 3 6
   301 print " "
   302 label *label222
   303 label *label223
   304 label *label224
-    * op add :c :c 1
+  305 op add :c 3 1
   306 label *label225
-    * read *tmp17 cell2 :c
+  307 read *tmp17 cell2 4
   308 print *tmp17
-    * jump *label226 greaterThanEq :c 6
+  309 jump *label226 greaterThanEq 4 6
   310 print " "
   311 label *label226
   312 label *label227
   313 label *label228
-    * op add :c :c 1
+  314 op add :c 4 1
   315 label *label229
-    * read *tmp17 cell2 :c
+  316 read *tmp17 cell2 5
   317 print *tmp17
-    * jump *label230 greaterThanEq :c 6
+  318 jump *label230 greaterThanEq 5 6
   319 print " "
   320 label *label230
   321 label *label231
   322 label *label232
-    * op add :c :c 1
+  323 op add :c 5 1
   324 label *label233
-    * read *tmp17 cell2 :c
+  325 read *tmp17 cell2 6
   326 print *tmp17
-    * jump *label234 greaterThanEq :c 6
+  327 jump *label234 greaterThanEq 6 6
   328 print " "
   329 label *label234
   330 label *label235
   331 label *label236
-    * op add :c :c 1
+  332 op add :c 6 1
   333 label *label73
   334 print "\n"
   335 label *label74

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   265 jump *label65 lessThanEq :j 6
   266 label *label67
   267 write 1 cell2 6
-    * set :c 0
   268 label *label208
   269 label *label209
   270 read *tmp17 cell2 0
 
   274 label *label210
   275 label *label211
   276 label *label212
-    * op add :c 0 1
   277 label *label213
   278 read *tmp17 cell2 1
   279 print *tmp17
 
   282 label *label214
   283 label *label215
   284 label *label216
-    * op add :c 1 1
   285 label *label217
   286 read *tmp17 cell2 2
   287 print *tmp17
 
   290 label *label218
   291 label *label219
   292 label *label220
-    * op add :c 2 1
   293 label *label221
   294 read *tmp17 cell2 3
   295 print *tmp17
 
   298 label *label222
   299 label *label223
   300 label *label224
-    * op add :c 3 1
   301 label *label225
   302 read *tmp17 cell2 4
   303 print *tmp17
 
   306 label *label226
   307 label *label227
   308 label *label228
-    * op add :c 4 1
   309 label *label229
   310 read *tmp17 cell2 5
   311 print *tmp17
 
   314 label *label230
   315 label *label231
   316 label *label232
-    * op add :c 5 1
   317 label *label233
   318 read *tmp17 cell2 6
   319 print *tmp17
 
   322 label *label234
   323 label *label235
   324 label *label236
-    * op add :c 6 1
   325 label *label73
   326 print "\n"
   327 label *label74

Modifications by Unroll loop at line 34:9 (+33 instructions):
 
   341 jump *label77 lessThanEq :j 7
   342 label *label79
   343 write 1 cell1 7
-    * set :c 0
-    * label *label80
-    * jump *label85 greaterThanEq 0 8
-    * label *label81
-    * read *tmp17 cell1 :c
-    * print *tmp17
-    * jump *label82 greaterThanEq :c 7
-    * print " "
-    * label *label82
-    * label *label83
-    * label *label84
-    * op add :c :c 1
-    * jump *label81 lessThan :c 8
-    * label *label85
+  344 set :c 0
+  345 label *label237
+  346 label *label238
+  347 read *tmp17 cell1 :c
+  348 print *tmp17
+  349 jump *label239 greaterThanEq :c 7
+  350 print " "
+  351 label *label239
+  352 label *label240
+  353 label *label241
+  354 op add :c :c 1
+  355 label *label242
+  356 read *tmp17 cell1 :c
+  357 print *tmp17
+  358 jump *label243 greaterThanEq :c 7
+  359 print " "
+  360 label *label243
+  361 label *label244
+  362 label *label245
+  363 op add :c :c 1
+  364 label *label246
+  365 read *tmp17 cell1 :c
+  366 print *tmp17
+  367 jump *label247 greaterThanEq :c 7
+  368 print " "
+  369 label *label247
+  370 label *label248
+  371 label *label249
+  372 op add :c :c 1
+  373 label *label250
+  374 read *tmp17 cell1 :c
+  375 print *tmp17
+  376 jump *label251 greaterThanEq :c 7
+  377 print " "
+  378 label *label251
+  379 label *label252
+  380 label *label253
+  381 op add :c :c 1
+  382 label *label254
+  383 read *tmp17 cell1 :c
+  384 print *tmp17
+  385 jump *label255 greaterThanEq :c 7
+  386 print " "
+  387 label *label255
+  388 label *label256
+  389 label *label257
+  390 op add :c :c 1
+  391 label *label258
+  392 read *tmp17 cell1 :c
+  393 print *tmp17
+  394 jump *label259 greaterThanEq :c 7
+  395 print " "
+  396 label *label259
+  397 label *label260
+  398 label *label261
+  399 op add :c :c 1
+  400 label *label262
+  401 read *tmp17 cell1 :c
+  402 print *tmp17
+  403 jump *label263 greaterThanEq :c 7
+  404 print " "
+  405 label *label263
+  406 label *label264
+  407 label *label265
+  408 op add :c :c 1
+  409 label *label266
+  410 read *tmp17 cell1 :c
+  411 print *tmp17
+  412 jump *label267 greaterThanEq :c 7
+  413 print " "
+  414 label *label267
+  415 label *label268
+  416 label *label269
+  417 op add :c :c 1
+  418 label *label85
   419 print "\n"
   420 label *label86
   421 label *label87

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   344 set :c 0
   345 label *label237
   346 label *label238
-    * read *tmp17 cell1 :c
+  347 read *tmp17 cell1 0
   348 print *tmp17
-    * jump *label239 greaterThanEq :c 7
+  349 jump *label239 greaterThanEq 0 7
   350 print " "
   351 label *label239
   352 label *label240
   353 label *label241
-    * op add :c :c 1
+  354 op add :c 0 1
   355 label *label242
-    * read *tmp17 cell1 :c
+  356 read *tmp17 cell1 1
   357 print *tmp17
-    * jump *label243 greaterThanEq :c 7
+  358 jump *label243 greaterThanEq 1 7
   359 print " "
   360 label *label243
   361 label *label244
   362 label *label245
-    * op add :c :c 1
+  363 op add :c 1 1
   364 label *label246
-    * read *tmp17 cell1 :c
+  365 read *tmp17 cell1 2
   366 print *tmp17
-    * jump *label247 greaterThanEq :c 7
+  367 jump *label247 greaterThanEq 2 7
   368 print " "
   369 label *label247
   370 label *label248
   371 label *label249
-    * op add :c :c 1
+  372 op add :c 2 1
   373 label *label250
-    * read *tmp17 cell1 :c
+  374 read *tmp17 cell1 3
   375 print *tmp17
-    * jump *label251 greaterThanEq :c 7
+  376 jump *label251 greaterThanEq 3 7
   377 print " "
   378 label *label251
   379 label *label252
   380 label *label253
-    * op add :c :c 1
+  381 op add :c 3 1
   382 label *label254
-    * read *tmp17 cell1 :c
+  383 read *tmp17 cell1 4
   384 print *tmp17
-    * jump *label255 greaterThanEq :c 7
+  385 jump *label255 greaterThanEq 4 7
   386 print " "
   387 label *label255
   388 label *label256
   389 label *label257
-    * op add :c :c 1
+  390 op add :c 4 1
   391 label *label258
-    * read *tmp17 cell1 :c
+  392 read *tmp17 cell1 5
   393 print *tmp17
-    * jump *label259 greaterThanEq :c 7
+  394 jump *label259 greaterThanEq 5 7
   395 print " "
   396 label *label259
   397 label *label260
   398 label *label261
-    * op add :c :c 1
+  399 op add :c 5 1
   400 label *label262
-    * read *tmp17 cell1 :c
+  401 read *tmp17 cell1 6
   402 print *tmp17
-    * jump *label263 greaterThanEq :c 7
+  403 jump *label263 greaterThanEq 6 7
   404 print " "
   405 label *label263
   406 label *label264
   407 label *label265
-    * op add :c :c 1
+  408 op add :c 6 1
   409 label *label266
-    * read *tmp17 cell1 :c
+  410 read *tmp17 cell1 7
   411 print *tmp17
-    * jump *label267 greaterThanEq :c 7
+  412 jump *label267 greaterThanEq 7 7
   413 print " "
   414 label *label267
   415 label *label268
   416 label *label269
-    * op add :c :c 1
+  417 op add :c 7 1
   418 label *label85
   419 print "\n"
   420 label *label86

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   341 jump *label77 lessThanEq :j 7
   342 label *label79
   343 write 1 cell1 7
-    * set :c 0
   344 label *label237
   345 label *label238
   346 read *tmp17 cell1 0
 
   350 label *label239
   351 label *label240
   352 label *label241
-    * op add :c 0 1
   353 label *label242
   354 read *tmp17 cell1 1
   355 print *tmp17
 
   358 label *label243
   359 label *label244
   360 label *label245
-    * op add :c 1 1
   361 label *label246
   362 read *tmp17 cell1 2
   363 print *tmp17
 
   366 label *label247
   367 label *label248
   368 label *label249
-    * op add :c 2 1
   369 label *label250
   370 read *tmp17 cell1 3
   371 print *tmp17
 
   374 label *label251
   375 label *label252
   376 label *label253
-    * op add :c 3 1
   377 label *label254
   378 read *tmp17 cell1 4
   379 print *tmp17
 
   382 label *label255
   383 label *label256
   384 label *label257
-    * op add :c 4 1
   385 label *label258
   386 read *tmp17 cell1 5
   387 print *tmp17
 
   390 label *label259
   391 label *label260
   392 label *label261
-    * op add :c 5 1
   393 label *label262
   394 read *tmp17 cell1 6
   395 print *tmp17
 
   398 label *label263
   399 label *label264
   400 label *label265
-    * op add :c 6 1
   401 label *label266
   402 read *tmp17 cell1 7
   403 print *tmp17
 
   406 label *label267
   407 label *label268
   408 label *label269
-    * op add :c 7 1
   409 label *label85
   410 print "\n"
   411 label *label86

Modifications by Unroll loop at line 34:9 (+38 instructions):
 
   425 jump *label89 lessThanEq :j 8
   426 label *label91
   427 write 1 cell2 8
-    * set :c 0
-    * label *label92
-    * jump *label97 greaterThanEq 0 9
-    * label *label93
-    * read *tmp17 cell2 :c
-    * print *tmp17
-    * jump *label94 greaterThanEq :c 8
-    * print " "
-    * label *label94
-    * label *label95
-    * label *label96
-    * op add :c :c 1
-    * jump *label93 lessThan :c 9
-    * label *label97
+  428 set :c 0
+  429 label *label270
+  430 label *label271
+  431 read *tmp17 cell2 :c
+  432 print *tmp17
+  433 jump *label272 greaterThanEq :c 8
+  434 print " "
+  435 label *label272
+  436 label *label273
+  437 label *label274
+  438 op add :c :c 1
+  439 label *label275
+  440 read *tmp17 cell2 :c
+  441 print *tmp17
+  442 jump *label276 greaterThanEq :c 8
+  443 print " "
+  444 label *label276
+  445 label *label277
+  446 label *label278
+  447 op add :c :c 1
+  448 label *label279
+  449 read *tmp17 cell2 :c
+  450 print *tmp17
+  451 jump *label280 greaterThanEq :c 8
+  452 print " "
+  453 label *label280
+  454 label *label281
+  455 label *label282
+  456 op add :c :c 1
+  457 label *label283
+  458 read *tmp17 cell2 :c
+  459 print *tmp17
+  460 jump *label284 greaterThanEq :c 8
+  461 print " "
+  462 label *label284
+  463 label *label285
+  464 label *label286
+  465 op add :c :c 1
+  466 label *label287
+  467 read *tmp17 cell2 :c
+  468 print *tmp17
+  469 jump *label288 greaterThanEq :c 8
+  470 print " "
+  471 label *label288
+  472 label *label289
+  473 label *label290
+  474 op add :c :c 1
+  475 label *label291
+  476 read *tmp17 cell2 :c
+  477 print *tmp17
+  478 jump *label292 greaterThanEq :c 8
+  479 print " "
+  480 label *label292
+  481 label *label293
+  482 label *label294
+  483 op add :c :c 1
+  484 label *label295
+  485 read *tmp17 cell2 :c
+  486 print *tmp17
+  487 jump *label296 greaterThanEq :c 8
+  488 print " "
+  489 label *label296
+  490 label *label297
+  491 label *label298
+  492 op add :c :c 1
+  493 label *label299
+  494 read *tmp17 cell2 :c
+  495 print *tmp17
+  496 jump *label300 greaterThanEq :c 8
+  497 print " "
+  498 label *label300
+  499 label *label301
+  500 label *label302
+  501 op add :c :c 1
+  502 label *label303
+  503 read *tmp17 cell2 :c
+  504 print *tmp17
+  505 jump *label304 greaterThanEq :c 8
+  506 print " "
+  507 label *label304
+  508 label *label305
+  509 label *label306
+  510 op add :c :c 1
+  511 label *label97
   512 print "\n"
   513 label *label98
   514 label *label99

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   428 set :c 0
   429 label *label270
   430 label *label271
-    * read *tmp17 cell2 :c
+  431 read *tmp17 cell2 0
   432 print *tmp17
-    * jump *label272 greaterThanEq :c 8
+  433 jump *label272 greaterThanEq 0 8
   434 print " "
   435 label *label272
   436 label *label273
   437 label *label274
-    * op add :c :c 1
+  438 op add :c 0 1
   439 label *label275
-    * read *tmp17 cell2 :c
+  440 read *tmp17 cell2 1
   441 print *tmp17
-    * jump *label276 greaterThanEq :c 8
+  442 jump *label276 greaterThanEq 1 8
   443 print " "
   444 label *label276
   445 label *label277
   446 label *label278
-    * op add :c :c 1
+  447 op add :c 1 1
   448 label *label279
-    * read *tmp17 cell2 :c
+  449 read *tmp17 cell2 2
   450 print *tmp17
-    * jump *label280 greaterThanEq :c 8
+  451 jump *label280 greaterThanEq 2 8
   452 print " "
   453 label *label280
   454 label *label281
   455 label *label282
-    * op add :c :c 1
+  456 op add :c 2 1
   457 label *label283
-    * read *tmp17 cell2 :c
+  458 read *tmp17 cell2 3
   459 print *tmp17
-    * jump *label284 greaterThanEq :c 8
+  460 jump *label284 greaterThanEq 3 8
   461 print " "
   462 label *label284
   463 label *label285
   464 label *label286
-    * op add :c :c 1
+  465 op add :c 3 1
   466 label *label287
-    * read *tmp17 cell2 :c
+  467 read *tmp17 cell2 4
   468 print *tmp17
-    * jump *label288 greaterThanEq :c 8
+  469 jump *label288 greaterThanEq 4 8
   470 print " "
   471 label *label288
   472 label *label289
   473 label *label290
-    * op add :c :c 1
+  474 op add :c 4 1
   475 label *label291
-    * read *tmp17 cell2 :c
+  476 read *tmp17 cell2 5
   477 print *tmp17
-    * jump *label292 greaterThanEq :c 8
+  478 jump *label292 greaterThanEq 5 8
   479 print " "
   480 label *label292
   481 label *label293
   482 label *label294
-    * op add :c :c 1
+  483 op add :c 5 1
   484 label *label295
-    * read *tmp17 cell2 :c
+  485 read *tmp17 cell2 6
   486 print *tmp17
-    * jump *label296 greaterThanEq :c 8
+  487 jump *label296 greaterThanEq 6 8
   488 print " "
   489 label *label296
   490 label *label297
   491 label *label298
-    * op add :c :c 1
+  492 op add :c 6 1
   493 label *label299
-    * read *tmp17 cell2 :c
+  494 read *tmp17 cell2 7
   495 print *tmp17
-    * jump *label300 greaterThanEq :c 8
+  496 jump *label300 greaterThanEq 7 8
   497 print " "
   498 label *label300
   499 label *label301
   500 label *label302
-    * op add :c :c 1
+  501 op add :c 7 1
   502 label *label303
-    * read *tmp17 cell2 :c
+  503 read *tmp17 cell2 8
   504 print *tmp17
-    * jump *label304 greaterThanEq :c 8
+  505 jump *label304 greaterThanEq 8 8
   506 print " "
   507 label *label304
   508 label *label305
   509 label *label306
-    * op add :c :c 1
+  510 op add :c 8 1
   511 label *label97
   512 print "\n"
   513 label *label98

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-10 instructions):
 
   425 jump *label89 lessThanEq :j 8
   426 label *label91
   427 write 1 cell2 8
-    * set :c 0
   428 label *label270
   429 label *label271
   430 read *tmp17 cell2 0
 
   434 label *label272
   435 label *label273
   436 label *label274
-    * op add :c 0 1
   437 label *label275
   438 read *tmp17 cell2 1
   439 print *tmp17
 
   442 label *label276
   443 label *label277
   444 label *label278
-    * op add :c 1 1
   445 label *label279
   446 read *tmp17 cell2 2
   447 print *tmp17
 
   450 label *label280
   451 label *label281
   452 label *label282
-    * op add :c 2 1
   453 label *label283
   454 read *tmp17 cell2 3
   455 print *tmp17
 
   458 label *label284
   459 label *label285
   460 label *label286
-    * op add :c 3 1
   461 label *label287
   462 read *tmp17 cell2 4
   463 print *tmp17
 
   466 label *label288
   467 label *label289
   468 label *label290
-    * op add :c 4 1
   469 label *label291
   470 read *tmp17 cell2 5
   471 print *tmp17
 
   474 label *label292
   475 label *label293
   476 label *label294
-    * op add :c 5 1
   477 label *label295
   478 read *tmp17 cell2 6
   479 print *tmp17
 
   482 label *label296
   483 label *label297
   484 label *label298
-    * op add :c 6 1
   485 label *label299
   486 read *tmp17 cell2 7
   487 print *tmp17
 
   490 label *label300
   491 label *label301
   492 label *label302
-    * op add :c 7 1
   493 label *label303
   494 read *tmp17 cell2 8
   495 print *tmp17
 
   498 label *label304
   499 label *label305
   500 label *label306
-    * op add :c 8 1
   501 label *label97
   502 print "\n"
   503 label *label98

Modifications by Unroll loop at line 28:9 (+22 instructions):
 
   183 label *label50
   184 label *label51
   185 write 1 cell1 0
-    * set :j 1
-    * label *label52
-    * jump *label55 greaterThan 1 5
-    * label *label53
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
-    * op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
-    * label *label54
-    * op add :j :j 1
-    * jump *label53 lessThanEq :j 5
-    * label *label55
+  186 set :j 1
+  187 label *label307
+  188 label *label308
+  189 op sub *tmp7 :j 1
+  190 read *tmp8 cell2 *tmp7
+  191 read *tmp10 cell2 :j
+  192 op add *tmp11 *tmp8 *tmp10
+  193 write *tmp11 cell1 :j
+  194 label *label309
+  195 op add :j :j 1
+  196 label *label310
+  197 op sub *tmp7 :j 1
+  198 read *tmp8 cell2 *tmp7
+  199 read *tmp10 cell2 :j
+  200 op add *tmp11 *tmp8 *tmp10
+  201 write *tmp11 cell1 :j
+  202 label *label311
+  203 op add :j :j 1
+  204 label *label312
+  205 op sub *tmp7 :j 1
+  206 read *tmp8 cell2 *tmp7
+  207 read *tmp10 cell2 :j
+  208 op add *tmp11 *tmp8 *tmp10
+  209 write *tmp11 cell1 :j
+  210 label *label313
+  211 op add :j :j 1
+  212 label *label314
+  213 op sub *tmp7 :j 1
+  214 read *tmp8 cell2 *tmp7
+  215 read *tmp10 cell2 :j
+  216 op add *tmp11 *tmp8 *tmp10
+  217 write *tmp11 cell1 :j
+  218 label *label315
+  219 op add :j :j 1
+  220 label *label316
+  221 op sub *tmp7 :j 1
+  222 read *tmp8 cell2 *tmp7
+  223 read *tmp10 cell2 :j
+  224 op add *tmp11 *tmp8 *tmp10
+  225 write *tmp11 cell1 :j
+  226 label *label317
+  227 op add :j :j 1
+  228 label *label55
   229 write 1 cell1 5
   230 label *label174
   231 label *label175

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   186 set :j 1
   187 label *label307
   188 label *label308
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  189 op sub *tmp7 1 1
+  190 read *tmp8 cell2 0
+  191 read *tmp10 cell2 1
   192 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  193 write *tmp11 cell1 1
   194 label *label309
-    * op add :j :j 1
+  195 op add :j 1 1
   196 label *label310
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  197 op sub *tmp7 2 1
+  198 read *tmp8 cell2 1
+  199 read *tmp10 cell2 2
   200 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  201 write *tmp11 cell1 2
   202 label *label311
-    * op add :j :j 1
+  203 op add :j 2 1
   204 label *label312
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  205 op sub *tmp7 3 1
+  206 read *tmp8 cell2 2
+  207 read *tmp10 cell2 3
   208 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  209 write *tmp11 cell1 3
   210 label *label313
-    * op add :j :j 1
+  211 op add :j 3 1
   212 label *label314
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  213 op sub *tmp7 4 1
+  214 read *tmp8 cell2 3
+  215 read *tmp10 cell2 4
   216 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  217 write *tmp11 cell1 4
   218 label *label315
-    * op add :j :j 1
+  219 op add :j 4 1
   220 label *label316
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  221 op sub *tmp7 5 1
+  222 read *tmp8 cell2 4
+  223 read *tmp10 cell2 5
   224 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  225 write *tmp11 cell1 5
   226 label *label317
-    * op add :j :j 1
+  227 op add :j 5 1
   228 label *label55
   229 write 1 cell1 5
   230 label *label174

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
   183 label *label50
   184 label *label51
   185 write 1 cell1 0
-    * set :j 1
   186 label *label307
   187 label *label308
-    * op sub *tmp7 1 1
   188 read *tmp8 cell2 0
   189 read *tmp10 cell2 1
   190 op add *tmp11 *tmp8 *tmp10
   191 write *tmp11 cell1 1
   192 label *label309
-    * op add :j 1 1
   193 label *label310
-    * op sub *tmp7 2 1
   194 read *tmp8 cell2 1
   195 read *tmp10 cell2 2
   196 op add *tmp11 *tmp8 *tmp10
   197 write *tmp11 cell1 2
   198 label *label311
-    * op add :j 2 1
   199 label *label312
-    * op sub *tmp7 3 1
   200 read *tmp8 cell2 2
   201 read *tmp10 cell2 3
   202 op add *tmp11 *tmp8 *tmp10
   203 write *tmp11 cell1 3
   204 label *label313
-    * op add :j 3 1
   205 label *label314
-    * op sub *tmp7 4 1
   206 read *tmp8 cell2 3
   207 read *tmp10 cell2 4
   208 op add *tmp11 *tmp8 *tmp10
   209 write *tmp11 cell1 4
   210 label *label315
-    * op add :j 4 1
   211 label *label316
-    * op sub *tmp7 5 1
   212 read *tmp8 cell2 4
   213 read *tmp10 cell2 5
   214 op add *tmp11 *tmp8 *tmp10
   215 write *tmp11 cell1 5
   216 label *label317
-    * op add :j 5 1
   217 label *label55
   218 write 1 cell1 5
   219 label *label174

Modifications by Unroll loop at line 34:9 (+43 instructions):
 
   536 jump *label101 lessThanEq :j 9
   537 label *label103
   538 write 1 cell1 9
-    * set :c 0
-    * label *label104
-    * jump *label109 greaterThanEq 0 10
-    * label *label105
-    * read *tmp17 cell1 :c
-    * print *tmp17
-    * jump *label106 greaterThanEq :c 9
-    * print " "
-    * label *label106
-    * label *label107
-    * label *label108
-    * op add :c :c 1
-    * jump *label105 lessThan :c 10
-    * label *label109
+  539 set :c 0
+  540 label *label318
+  541 label *label319
+  542 read *tmp17 cell1 :c
+  543 print *tmp17
+  544 jump *label320 greaterThanEq :c 9
+  545 print " "
+  546 label *label320
+  547 label *label321
+  548 label *label322
+  549 op add :c :c 1
+  550 label *label323
+  551 read *tmp17 cell1 :c
+  552 print *tmp17
+  553 jump *label324 greaterThanEq :c 9
+  554 print " "
+  555 label *label324
+  556 label *label325
+  557 label *label326
+  558 op add :c :c 1
+  559 label *label327
+  560 read *tmp17 cell1 :c
+  561 print *tmp17
+  562 jump *label328 greaterThanEq :c 9
+  563 print " "
+  564 label *label328
+  565 label *label329
+  566 label *label330
+  567 op add :c :c 1
+  568 label *label331
+  569 read *tmp17 cell1 :c
+  570 print *tmp17
+  571 jump *label332 greaterThanEq :c 9
+  572 print " "
+  573 label *label332
+  574 label *label333
+  575 label *label334
+  576 op add :c :c 1
+  577 label *label335
+  578 read *tmp17 cell1 :c
+  579 print *tmp17
+  580 jump *label336 greaterThanEq :c 9
+  581 print " "
+  582 label *label336
+  583 label *label337
+  584 label *label338
+  585 op add :c :c 1
+  586 label *label339
+  587 read *tmp17 cell1 :c
+  588 print *tmp17
+  589 jump *label340 greaterThanEq :c 9
+  590 print " "
+  591 label *label340
+  592 label *label341
+  593 label *label342
+  594 op add :c :c 1
+  595 label *label343
+  596 read *tmp17 cell1 :c
+  597 print *tmp17
+  598 jump *label344 greaterThanEq :c 9
+  599 print " "
+  600 label *label344
+  601 label *label345
+  602 label *label346
+  603 op add :c :c 1
+  604 label *label347
+  605 read *tmp17 cell1 :c
+  606 print *tmp17
+  607 jump *label348 greaterThanEq :c 9
+  608 print " "
+  609 label *label348
+  610 label *label349
+  611 label *label350
+  612 op add :c :c 1
+  613 label *label351
+  614 read *tmp17 cell1 :c
+  615 print *tmp17
+  616 jump *label352 greaterThanEq :c 9
+  617 print " "
+  618 label *label352
+  619 label *label353
+  620 label *label354
+  621 op add :c :c 1
+  622 label *label355
+  623 read *tmp17 cell1 :c
+  624 print *tmp17
+  625 jump *label356 greaterThanEq :c 9
+  626 print " "
+  627 label *label356
+  628 label *label357
+  629 label *label358
+  630 op add :c :c 1
+  631 label *label109
   632 print "\n"
   633 label *label110
   634 label *label2

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   539 set :c 0
   540 label *label318
   541 label *label319
-    * read *tmp17 cell1 :c
+  542 read *tmp17 cell1 0
   543 print *tmp17
-    * jump *label320 greaterThanEq :c 9
+  544 jump *label320 greaterThanEq 0 9
   545 print " "
   546 label *label320
   547 label *label321
   548 label *label322
-    * op add :c :c 1
+  549 op add :c 0 1
   550 label *label323
-    * read *tmp17 cell1 :c
+  551 read *tmp17 cell1 1
   552 print *tmp17
-    * jump *label324 greaterThanEq :c 9
+  553 jump *label324 greaterThanEq 1 9
   554 print " "
   555 label *label324
   556 label *label325
   557 label *label326
-    * op add :c :c 1
+  558 op add :c 1 1
   559 label *label327
-    * read *tmp17 cell1 :c
+  560 read *tmp17 cell1 2
   561 print *tmp17
-    * jump *label328 greaterThanEq :c 9
+  562 jump *label328 greaterThanEq 2 9
   563 print " "
   564 label *label328
   565 label *label329
   566 label *label330
-    * op add :c :c 1
+  567 op add :c 2 1
   568 label *label331
-    * read *tmp17 cell1 :c
+  569 read *tmp17 cell1 3
   570 print *tmp17
-    * jump *label332 greaterThanEq :c 9
+  571 jump *label332 greaterThanEq 3 9
   572 print " "
   573 label *label332
   574 label *label333
   575 label *label334
-    * op add :c :c 1
+  576 op add :c 3 1
   577 label *label335
-    * read *tmp17 cell1 :c
+  578 read *tmp17 cell1 4
   579 print *tmp17
-    * jump *label336 greaterThanEq :c 9
+  580 jump *label336 greaterThanEq 4 9
   581 print " "
   582 label *label336
   583 label *label337
   584 label *label338
-    * op add :c :c 1
+  585 op add :c 4 1
   586 label *label339
-    * read *tmp17 cell1 :c
+  587 read *tmp17 cell1 5
   588 print *tmp17
-    * jump *label340 greaterThanEq :c 9
+  589 jump *label340 greaterThanEq 5 9
   590 print " "
   591 label *label340
   592 label *label341
   593 label *label342
-    * op add :c :c 1
+  594 op add :c 5 1
   595 label *label343
-    * read *tmp17 cell1 :c
+  596 read *tmp17 cell1 6
   597 print *tmp17
-    * jump *label344 greaterThanEq :c 9
+  598 jump *label344 greaterThanEq 6 9
   599 print " "
   600 label *label344
   601 label *label345
   602 label *label346
-    * op add :c :c 1
+  603 op add :c 6 1
   604 label *label347
-    * read *tmp17 cell1 :c
+  605 read *tmp17 cell1 7
   606 print *tmp17
-    * jump *label348 greaterThanEq :c 9
+  607 jump *label348 greaterThanEq 7 9
   608 print " "
   609 label *label348
   610 label *label349
   611 label *label350
-    * op add :c :c 1
+  612 op add :c 7 1
   613 label *label351
-    * read *tmp17 cell1 :c
+  614 read *tmp17 cell1 8
   615 print *tmp17
-    * jump *label352 greaterThanEq :c 9
+  616 jump *label352 greaterThanEq 8 9
   617 print " "
   618 label *label352
   619 label *label353
   620 label *label354
-    * op add :c :c 1
+  621 op add :c 8 1
   622 label *label355
-    * read *tmp17 cell1 :c
+  623 read *tmp17 cell1 9
   624 print *tmp17
-    * jump *label356 greaterThanEq :c 9
+  625 jump *label356 greaterThanEq 9 9
   626 print " "
   627 label *label356
   628 label *label357
   629 label *label358
-    * op add :c :c 1
+  630 op add :c 9 1
   631 label *label109
   632 print "\n"
   633 label *label110

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
   536 jump *label101 lessThanEq :j 9
   537 label *label103
   538 write 1 cell1 9
-    * set :c 0
   539 label *label318
   540 label *label319
   541 read *tmp17 cell1 0
 
   545 label *label320
   546 label *label321
   547 label *label322
-    * op add :c 0 1
   548 label *label323
   549 read *tmp17 cell1 1
   550 print *tmp17
 
   553 label *label324
   554 label *label325
   555 label *label326
-    * op add :c 1 1
   556 label *label327
   557 read *tmp17 cell1 2
   558 print *tmp17
 
   561 label *label328
   562 label *label329
   563 label *label330
-    * op add :c 2 1
   564 label *label331
   565 read *tmp17 cell1 3
   566 print *tmp17
 
   569 label *label332
   570 label *label333
   571 label *label334
-    * op add :c 3 1
   572 label *label335
   573 read *tmp17 cell1 4
   574 print *tmp17
 
   577 label *label336
   578 label *label337
   579 label *label338
-    * op add :c 4 1
   580 label *label339
   581 read *tmp17 cell1 5
   582 print *tmp17
 
   585 label *label340
   586 label *label341
   587 label *label342
-    * op add :c 5 1
   588 label *label343
   589 read *tmp17 cell1 6
   590 print *tmp17
 
   593 label *label344
   594 label *label345
   595 label *label346
-    * op add :c 6 1
   596 label *label347
   597 read *tmp17 cell1 7
   598 print *tmp17
 
   601 label *label348
   602 label *label349
   603 label *label350
-    * op add :c 7 1
   604 label *label351
   605 read *tmp17 cell1 8
   606 print *tmp17
 
   609 label *label352
   610 label *label353
   611 label *label354
-    * op add :c 8 1
   612 label *label355
   613 read *tmp17 cell1 9
   614 print *tmp17
 
   617 label *label356
   618 label *label357
   619 label *label358
-    * op add :c 9 1
   620 label *label109
   621 print "\n"
   622 label *label110

Modifications by Unroll loop at line 28:9 (+28 instructions):
 
   270 label *label62
   271 label *label63
   272 write 1 cell2 0
-    * set :j 1
-    * label *label64
-    * jump *label67 greaterThan 1 6
-    * label *label65
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
-    * op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
-    * label *label66
-    * op add :j :j 1
-    * jump *label65 lessThanEq :j 6
-    * label *label67
+  273 set :j 1
+  274 label *label359
+  275 label *label360
+  276 op sub *tmp7 :j 1
+  277 read *tmp8 cell1 *tmp7
+  278 read *tmp10 cell1 :j
+  279 op add *tmp11 *tmp8 *tmp10
+  280 write *tmp11 cell2 :j
+  281 label *label361
+  282 op add :j :j 1
+  283 label *label362
+  284 op sub *tmp7 :j 1
+  285 read *tmp8 cell1 *tmp7
+  286 read *tmp10 cell1 :j
+  287 op add *tmp11 *tmp8 *tmp10
+  288 write *tmp11 cell2 :j
+  289 label *label363
+  290 op add :j :j 1
+  291 label *label364
+  292 op sub *tmp7 :j 1
+  293 read *tmp8 cell1 *tmp7
+  294 read *tmp10 cell1 :j
+  295 op add *tmp11 *tmp8 *tmp10
+  296 write *tmp11 cell2 :j
+  297 label *label365
+  298 op add :j :j 1
+  299 label *label366
+  300 op sub *tmp7 :j 1
+  301 read *tmp8 cell1 *tmp7
+  302 read *tmp10 cell1 :j
+  303 op add *tmp11 *tmp8 *tmp10
+  304 write *tmp11 cell2 :j
+  305 label *label367
+  306 op add :j :j 1
+  307 label *label368
+  308 op sub *tmp7 :j 1
+  309 read *tmp8 cell1 *tmp7
+  310 read *tmp10 cell1 :j
+  311 op add *tmp11 *tmp8 *tmp10
+  312 write *tmp11 cell2 :j
+  313 label *label369
+  314 op add :j :j 1
+  315 label *label370
+  316 op sub *tmp7 :j 1
+  317 read *tmp8 cell1 *tmp7
+  318 read *tmp10 cell1 :j
+  319 op add *tmp11 *tmp8 *tmp10
+  320 write *tmp11 cell2 :j
+  321 label *label371
+  322 op add :j :j 1
+  323 label *label67
   324 write 1 cell2 6
   325 label *label208
   326 label *label209

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   273 set :j 1
   274 label *label359
   275 label *label360
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  276 op sub *tmp7 1 1
+  277 read *tmp8 cell1 0
+  278 read *tmp10 cell1 1
   279 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  280 write *tmp11 cell2 1
   281 label *label361
-    * op add :j :j 1
+  282 op add :j 1 1
   283 label *label362
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  284 op sub *tmp7 2 1
+  285 read *tmp8 cell1 1
+  286 read *tmp10 cell1 2
   287 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  288 write *tmp11 cell2 2
   289 label *label363
-    * op add :j :j 1
+  290 op add :j 2 1
   291 label *label364
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  292 op sub *tmp7 3 1
+  293 read *tmp8 cell1 2
+  294 read *tmp10 cell1 3
   295 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  296 write *tmp11 cell2 3
   297 label *label365
-    * op add :j :j 1
+  298 op add :j 3 1
   299 label *label366
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  300 op sub *tmp7 4 1
+  301 read *tmp8 cell1 3
+  302 read *tmp10 cell1 4
   303 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  304 write *tmp11 cell2 4
   305 label *label367
-    * op add :j :j 1
+  306 op add :j 4 1
   307 label *label368
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  308 op sub *tmp7 5 1
+  309 read *tmp8 cell1 4
+  310 read *tmp10 cell1 5
   311 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  312 write *tmp11 cell2 5
   313 label *label369
-    * op add :j :j 1
+  314 op add :j 5 1
   315 label *label370
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  316 op sub *tmp7 6 1
+  317 read *tmp8 cell1 5
+  318 read *tmp10 cell1 6
   319 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  320 write *tmp11 cell2 6
   321 label *label371
-    * op add :j :j 1
+  322 op add :j 6 1
   323 label *label67
   324 write 1 cell2 6
   325 label *label208

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
   270 label *label62
   271 label *label63
   272 write 1 cell2 0
-    * set :j 1
   273 label *label359
   274 label *label360
-    * op sub *tmp7 1 1
   275 read *tmp8 cell1 0
   276 read *tmp10 cell1 1
   277 op add *tmp11 *tmp8 *tmp10
   278 write *tmp11 cell2 1
   279 label *label361
-    * op add :j 1 1
   280 label *label362
-    * op sub *tmp7 2 1
   281 read *tmp8 cell1 1
   282 read *tmp10 cell1 2
   283 op add *tmp11 *tmp8 *tmp10
   284 write *tmp11 cell2 2
   285 label *label363
-    * op add :j 2 1
   286 label *label364
-    * op sub *tmp7 3 1
   287 read *tmp8 cell1 2
   288 read *tmp10 cell1 3
   289 op add *tmp11 *tmp8 *tmp10
   290 write *tmp11 cell2 3
   291 label *label365
-    * op add :j 3 1
   292 label *label366
-    * op sub *tmp7 4 1
   293 read *tmp8 cell1 3
   294 read *tmp10 cell1 4
   295 op add *tmp11 *tmp8 *tmp10
   296 write *tmp11 cell2 4
   297 label *label367
-    * op add :j 4 1
   298 label *label368
-    * op sub *tmp7 5 1
   299 read *tmp8 cell1 4
   300 read *tmp10 cell1 5
   301 op add *tmp11 *tmp8 *tmp10
   302 write *tmp11 cell2 5
   303 label *label369
-    * op add :j 5 1
   304 label *label370
-    * op sub *tmp7 6 1
   305 read *tmp8 cell1 5
   306 read *tmp10 cell1 6
   307 op add *tmp11 *tmp8 *tmp10
   308 write *tmp11 cell2 6
   309 label *label371
-    * op add :j 6 1
   310 label *label67
   311 write 1 cell2 6
   312 label *label208

Modifications by Unroll loop at line 28:9 (+34 instructions):
 
   371 label *label74
   372 label *label75
   373 write 1 cell1 0
-    * set :j 1
-    * label *label76
-    * jump *label79 greaterThan 1 7
-    * label *label77
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
-    * op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
-    * label *label78
-    * op add :j :j 1
-    * jump *label77 lessThanEq :j 7
-    * label *label79
+  374 set :j 1
+  375 label *label372
+  376 label *label373
+  377 op sub *tmp7 :j 1
+  378 read *tmp8 cell2 *tmp7
+  379 read *tmp10 cell2 :j
+  380 op add *tmp11 *tmp8 *tmp10
+  381 write *tmp11 cell1 :j
+  382 label *label374
+  383 op add :j :j 1
+  384 label *label375
+  385 op sub *tmp7 :j 1
+  386 read *tmp8 cell2 *tmp7
+  387 read *tmp10 cell2 :j
+  388 op add *tmp11 *tmp8 *tmp10
+  389 write *tmp11 cell1 :j
+  390 label *label376
+  391 op add :j :j 1
+  392 label *label377
+  393 op sub *tmp7 :j 1
+  394 read *tmp8 cell2 *tmp7
+  395 read *tmp10 cell2 :j
+  396 op add *tmp11 *tmp8 *tmp10
+  397 write *tmp11 cell1 :j
+  398 label *label378
+  399 op add :j :j 1
+  400 label *label379
+  401 op sub *tmp7 :j 1
+  402 read *tmp8 cell2 *tmp7
+  403 read *tmp10 cell2 :j
+  404 op add *tmp11 *tmp8 *tmp10
+  405 write *tmp11 cell1 :j
+  406 label *label380
+  407 op add :j :j 1
+  408 label *label381
+  409 op sub *tmp7 :j 1
+  410 read *tmp8 cell2 *tmp7
+  411 read *tmp10 cell2 :j
+  412 op add *tmp11 *tmp8 *tmp10
+  413 write *tmp11 cell1 :j
+  414 label *label382
+  415 op add :j :j 1
+  416 label *label383
+  417 op sub *tmp7 :j 1
+  418 read *tmp8 cell2 *tmp7
+  419 read *tmp10 cell2 :j
+  420 op add *tmp11 *tmp8 *tmp10
+  421 write *tmp11 cell1 :j
+  422 label *label384
+  423 op add :j :j 1
+  424 label *label385
+  425 op sub *tmp7 :j 1
+  426 read *tmp8 cell2 *tmp7
+  427 read *tmp10 cell2 :j
+  428 op add *tmp11 *tmp8 *tmp10
+  429 write *tmp11 cell1 :j
+  430 label *label386
+  431 op add :j :j 1
+  432 label *label79
   433 write 1 cell1 7
   434 label *label237
   435 label *label238

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   374 set :j 1
   375 label *label372
   376 label *label373
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  377 op sub *tmp7 1 1
+  378 read *tmp8 cell2 0
+  379 read *tmp10 cell2 1
   380 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  381 write *tmp11 cell1 1
   382 label *label374
-    * op add :j :j 1
+  383 op add :j 1 1
   384 label *label375
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  385 op sub *tmp7 2 1
+  386 read *tmp8 cell2 1
+  387 read *tmp10 cell2 2
   388 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  389 write *tmp11 cell1 2
   390 label *label376
-    * op add :j :j 1
+  391 op add :j 2 1
   392 label *label377
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  393 op sub *tmp7 3 1
+  394 read *tmp8 cell2 2
+  395 read *tmp10 cell2 3
   396 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  397 write *tmp11 cell1 3
   398 label *label378
-    * op add :j :j 1
+  399 op add :j 3 1
   400 label *label379
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  401 op sub *tmp7 4 1
+  402 read *tmp8 cell2 3
+  403 read *tmp10 cell2 4
   404 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  405 write *tmp11 cell1 4
   406 label *label380
-    * op add :j :j 1
+  407 op add :j 4 1
   408 label *label381
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  409 op sub *tmp7 5 1
+  410 read *tmp8 cell2 4
+  411 read *tmp10 cell2 5
   412 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  413 write *tmp11 cell1 5
   414 label *label382
-    * op add :j :j 1
+  415 op add :j 5 1
   416 label *label383
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  417 op sub *tmp7 6 1
+  418 read *tmp8 cell2 5
+  419 read *tmp10 cell2 6
   420 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  421 write *tmp11 cell1 6
   422 label *label384
-    * op add :j :j 1
+  423 op add :j 6 1
   424 label *label385
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  425 op sub *tmp7 7 1
+  426 read *tmp8 cell2 6
+  427 read *tmp10 cell2 7
   428 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  429 write *tmp11 cell1 7
   430 label *label386
-    * op add :j :j 1
+  431 op add :j 7 1
   432 label *label79
   433 write 1 cell1 7
   434 label *label237

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-15 instructions):
 
   371 label *label74
   372 label *label75
   373 write 1 cell1 0
-    * set :j 1
   374 label *label372
   375 label *label373
-    * op sub *tmp7 1 1
   376 read *tmp8 cell2 0
   377 read *tmp10 cell2 1
   378 op add *tmp11 *tmp8 *tmp10
   379 write *tmp11 cell1 1
   380 label *label374
-    * op add :j 1 1
   381 label *label375
-    * op sub *tmp7 2 1
   382 read *tmp8 cell2 1
   383 read *tmp10 cell2 2
   384 op add *tmp11 *tmp8 *tmp10
   385 write *tmp11 cell1 2
   386 label *label376
-    * op add :j 2 1
   387 label *label377
-    * op sub *tmp7 3 1
   388 read *tmp8 cell2 2
   389 read *tmp10 cell2 3
   390 op add *tmp11 *tmp8 *tmp10
   391 write *tmp11 cell1 3
   392 label *label378
-    * op add :j 3 1
   393 label *label379
-    * op sub *tmp7 4 1
   394 read *tmp8 cell2 3
   395 read *tmp10 cell2 4
   396 op add *tmp11 *tmp8 *tmp10
   397 write *tmp11 cell1 4
   398 label *label380
-    * op add :j 4 1
   399 label *label381
-    * op sub *tmp7 5 1
   400 read *tmp8 cell2 4
   401 read *tmp10 cell2 5
   402 op add *tmp11 *tmp8 *tmp10
   403 write *tmp11 cell1 5
   404 label *label382
-    * op add :j 5 1
   405 label *label383
-    * op sub *tmp7 6 1
   406 read *tmp8 cell2 5
   407 read *tmp10 cell2 6
   408 op add *tmp11 *tmp8 *tmp10
   409 write *tmp11 cell1 6
   410 label *label384
-    * op add :j 6 1
   411 label *label385
-    * op sub *tmp7 7 1
   412 read *tmp8 cell2 6
   413 read *tmp10 cell2 7
   414 op add *tmp11 *tmp8 *tmp10
   415 write *tmp11 cell1 7
   416 label *label386
-    * op add :j 7 1
   417 label *label79
   418 write 1 cell1 7
   419 label *label237

Modifications by Unroll loop at line 28:9 (+40 instructions):
 
   486 label *label86
   487 label *label87
   488 write 1 cell2 0
-    * set :j 1
-    * label *label88
-    * jump *label91 greaterThan 1 8
-    * label *label89
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
-    * op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
-    * label *label90
-    * op add :j :j 1
-    * jump *label89 lessThanEq :j 8
-    * label *label91
+  489 set :j 1
+  490 label *label387
+  491 label *label388
+  492 op sub *tmp7 :j 1
+  493 read *tmp8 cell1 *tmp7
+  494 read *tmp10 cell1 :j
+  495 op add *tmp11 *tmp8 *tmp10
+  496 write *tmp11 cell2 :j
+  497 label *label389
+  498 op add :j :j 1
+  499 label *label390
+  500 op sub *tmp7 :j 1
+  501 read *tmp8 cell1 *tmp7
+  502 read *tmp10 cell1 :j
+  503 op add *tmp11 *tmp8 *tmp10
+  504 write *tmp11 cell2 :j
+  505 label *label391
+  506 op add :j :j 1
+  507 label *label392
+  508 op sub *tmp7 :j 1
+  509 read *tmp8 cell1 *tmp7
+  510 read *tmp10 cell1 :j
+  511 op add *tmp11 *tmp8 *tmp10
+  512 write *tmp11 cell2 :j
+  513 label *label393
+  514 op add :j :j 1
+  515 label *label394
+  516 op sub *tmp7 :j 1
+  517 read *tmp8 cell1 *tmp7
+  518 read *tmp10 cell1 :j
+  519 op add *tmp11 *tmp8 *tmp10
+  520 write *tmp11 cell2 :j
+  521 label *label395
+  522 op add :j :j 1
+  523 label *label396
+  524 op sub *tmp7 :j 1
+  525 read *tmp8 cell1 *tmp7
+  526 read *tmp10 cell1 :j
+  527 op add *tmp11 *tmp8 *tmp10
+  528 write *tmp11 cell2 :j
+  529 label *label397
+  530 op add :j :j 1
+  531 label *label398
+  532 op sub *tmp7 :j 1
+  533 read *tmp8 cell1 *tmp7
+  534 read *tmp10 cell1 :j
+  535 op add *tmp11 *tmp8 *tmp10
+  536 write *tmp11 cell2 :j
+  537 label *label399
+  538 op add :j :j 1
+  539 label *label400
+  540 op sub *tmp7 :j 1
+  541 read *tmp8 cell1 *tmp7
+  542 read *tmp10 cell1 :j
+  543 op add *tmp11 *tmp8 *tmp10
+  544 write *tmp11 cell2 :j
+  545 label *label401
+  546 op add :j :j 1
+  547 label *label402
+  548 op sub *tmp7 :j 1
+  549 read *tmp8 cell1 *tmp7
+  550 read *tmp10 cell1 :j
+  551 op add *tmp11 *tmp8 *tmp10
+  552 write *tmp11 cell2 :j
+  553 label *label403
+  554 op add :j :j 1
+  555 label *label91
   556 write 1 cell2 8
   557 label *label270
   558 label *label271

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   489 set :j 1
   490 label *label387
   491 label *label388
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  492 op sub *tmp7 1 1
+  493 read *tmp8 cell1 0
+  494 read *tmp10 cell1 1
   495 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  496 write *tmp11 cell2 1
   497 label *label389
-    * op add :j :j 1
+  498 op add :j 1 1
   499 label *label390
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  500 op sub *tmp7 2 1
+  501 read *tmp8 cell1 1
+  502 read *tmp10 cell1 2
   503 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  504 write *tmp11 cell2 2
   505 label *label391
-    * op add :j :j 1
+  506 op add :j 2 1
   507 label *label392
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  508 op sub *tmp7 3 1
+  509 read *tmp8 cell1 2
+  510 read *tmp10 cell1 3
   511 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  512 write *tmp11 cell2 3
   513 label *label393
-    * op add :j :j 1
+  514 op add :j 3 1
   515 label *label394
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  516 op sub *tmp7 4 1
+  517 read *tmp8 cell1 3
+  518 read *tmp10 cell1 4
   519 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  520 write *tmp11 cell2 4
   521 label *label395
-    * op add :j :j 1
+  522 op add :j 4 1
   523 label *label396
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  524 op sub *tmp7 5 1
+  525 read *tmp8 cell1 4
+  526 read *tmp10 cell1 5
   527 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  528 write *tmp11 cell2 5
   529 label *label397
-    * op add :j :j 1
+  530 op add :j 5 1
   531 label *label398
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  532 op sub *tmp7 6 1
+  533 read *tmp8 cell1 5
+  534 read *tmp10 cell1 6
   535 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  536 write *tmp11 cell2 6
   537 label *label399
-    * op add :j :j 1
+  538 op add :j 6 1
   539 label *label400
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  540 op sub *tmp7 7 1
+  541 read *tmp8 cell1 6
+  542 read *tmp10 cell1 7
   543 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  544 write *tmp11 cell2 7
   545 label *label401
-    * op add :j :j 1
+  546 op add :j 7 1
   547 label *label402
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell1 *tmp7
-    * read *tmp10 cell1 :j
+  548 op sub *tmp7 8 1
+  549 read *tmp8 cell1 7
+  550 read *tmp10 cell1 8
   551 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell2 :j
+  552 write *tmp11 cell2 8
   553 label *label403
-    * op add :j :j 1
+  554 op add :j 8 1
   555 label *label91
   556 write 1 cell2 8
   557 label *label270

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-17 instructions):
 
   486 label *label86
   487 label *label87
   488 write 1 cell2 0
-    * set :j 1
   489 label *label387
   490 label *label388
-    * op sub *tmp7 1 1
   491 read *tmp8 cell1 0
   492 read *tmp10 cell1 1
   493 op add *tmp11 *tmp8 *tmp10
   494 write *tmp11 cell2 1
   495 label *label389
-    * op add :j 1 1
   496 label *label390
-    * op sub *tmp7 2 1
   497 read *tmp8 cell1 1
   498 read *tmp10 cell1 2
   499 op add *tmp11 *tmp8 *tmp10
   500 write *tmp11 cell2 2
   501 label *label391
-    * op add :j 2 1
   502 label *label392
-    * op sub *tmp7 3 1
   503 read *tmp8 cell1 2
   504 read *tmp10 cell1 3
   505 op add *tmp11 *tmp8 *tmp10
   506 write *tmp11 cell2 3
   507 label *label393
-    * op add :j 3 1
   508 label *label394
-    * op sub *tmp7 4 1
   509 read *tmp8 cell1 3
   510 read *tmp10 cell1 4
   511 op add *tmp11 *tmp8 *tmp10
   512 write *tmp11 cell2 4
   513 label *label395
-    * op add :j 4 1
   514 label *label396
-    * op sub *tmp7 5 1
   515 read *tmp8 cell1 4
   516 read *tmp10 cell1 5
   517 op add *tmp11 *tmp8 *tmp10
   518 write *tmp11 cell2 5
   519 label *label397
-    * op add :j 5 1
   520 label *label398
-    * op sub *tmp7 6 1
   521 read *tmp8 cell1 5
   522 read *tmp10 cell1 6
   523 op add *tmp11 *tmp8 *tmp10
   524 write *tmp11 cell2 6
   525 label *label399
-    * op add :j 6 1
   526 label *label400
-    * op sub *tmp7 7 1
   527 read *tmp8 cell1 6
   528 read *tmp10 cell1 7
   529 op add *tmp11 *tmp8 *tmp10
   530 write *tmp11 cell2 7
   531 label *label401
-    * op add :j 7 1
   532 label *label402
-    * op sub *tmp7 8 1
   533 read *tmp8 cell1 7
   534 read *tmp10 cell1 8
   535 op add *tmp11 *tmp8 *tmp10
   536 write *tmp11 cell2 8
   537 label *label403
-    * op add :j 8 1
   538 label *label91
   539 write 1 cell2 8
   540 label *label270

Modifications by Unroll loop at line 28:9 (+46 instructions):
 
   615 label *label98
   616 label *label99
   617 write 1 cell1 0
-    * set :j 1
-    * label *label100
-    * jump *label103 greaterThan 1 9
-    * label *label101
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
-    * op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
-    * label *label102
-    * op add :j :j 1
-    * jump *label101 lessThanEq :j 9
-    * label *label103
+  618 set :j 1
+  619 label *label404
+  620 label *label405
+  621 op sub *tmp7 :j 1
+  622 read *tmp8 cell2 *tmp7
+  623 read *tmp10 cell2 :j
+  624 op add *tmp11 *tmp8 *tmp10
+  625 write *tmp11 cell1 :j
+  626 label *label406
+  627 op add :j :j 1
+  628 label *label407
+  629 op sub *tmp7 :j 1
+  630 read *tmp8 cell2 *tmp7
+  631 read *tmp10 cell2 :j
+  632 op add *tmp11 *tmp8 *tmp10
+  633 write *tmp11 cell1 :j
+  634 label *label408
+  635 op add :j :j 1
+  636 label *label409
+  637 op sub *tmp7 :j 1
+  638 read *tmp8 cell2 *tmp7
+  639 read *tmp10 cell2 :j
+  640 op add *tmp11 *tmp8 *tmp10
+  641 write *tmp11 cell1 :j
+  642 label *label410
+  643 op add :j :j 1
+  644 label *label411
+  645 op sub *tmp7 :j 1
+  646 read *tmp8 cell2 *tmp7
+  647 read *tmp10 cell2 :j
+  648 op add *tmp11 *tmp8 *tmp10
+  649 write *tmp11 cell1 :j
+  650 label *label412
+  651 op add :j :j 1
+  652 label *label413
+  653 op sub *tmp7 :j 1
+  654 read *tmp8 cell2 *tmp7
+  655 read *tmp10 cell2 :j
+  656 op add *tmp11 *tmp8 *tmp10
+  657 write *tmp11 cell1 :j
+  658 label *label414
+  659 op add :j :j 1
+  660 label *label415
+  661 op sub *tmp7 :j 1
+  662 read *tmp8 cell2 *tmp7
+  663 read *tmp10 cell2 :j
+  664 op add *tmp11 *tmp8 *tmp10
+  665 write *tmp11 cell1 :j
+  666 label *label416
+  667 op add :j :j 1
+  668 label *label417
+  669 op sub *tmp7 :j 1
+  670 read *tmp8 cell2 *tmp7
+  671 read *tmp10 cell2 :j
+  672 op add *tmp11 *tmp8 *tmp10
+  673 write *tmp11 cell1 :j
+  674 label *label418
+  675 op add :j :j 1
+  676 label *label419
+  677 op sub *tmp7 :j 1
+  678 read *tmp8 cell2 *tmp7
+  679 read *tmp10 cell2 :j
+  680 op add *tmp11 *tmp8 *tmp10
+  681 write *tmp11 cell1 :j
+  682 label *label420
+  683 op add :j :j 1
+  684 label *label421
+  685 op sub *tmp7 :j 1
+  686 read *tmp8 cell2 *tmp7
+  687 read *tmp10 cell2 :j
+  688 op add *tmp11 *tmp8 *tmp10
+  689 write *tmp11 cell1 :j
+  690 label *label422
+  691 op add :j :j 1
+  692 label *label103
   693 write 1 cell1 9
   694 label *label318
   695 label *label319

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   618 set :j 1
   619 label *label404
   620 label *label405
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  621 op sub *tmp7 1 1
+  622 read *tmp8 cell2 0
+  623 read *tmp10 cell2 1
   624 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  625 write *tmp11 cell1 1
   626 label *label406
-    * op add :j :j 1
+  627 op add :j 1 1
   628 label *label407
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  629 op sub *tmp7 2 1
+  630 read *tmp8 cell2 1
+  631 read *tmp10 cell2 2
   632 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  633 write *tmp11 cell1 2
   634 label *label408
-    * op add :j :j 1
+  635 op add :j 2 1
   636 label *label409
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  637 op sub *tmp7 3 1
+  638 read *tmp8 cell2 2
+  639 read *tmp10 cell2 3
   640 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  641 write *tmp11 cell1 3
   642 label *label410
-    * op add :j :j 1
+  643 op add :j 3 1
   644 label *label411
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  645 op sub *tmp7 4 1
+  646 read *tmp8 cell2 3
+  647 read *tmp10 cell2 4
   648 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  649 write *tmp11 cell1 4
   650 label *label412
-    * op add :j :j 1
+  651 op add :j 4 1
   652 label *label413
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  653 op sub *tmp7 5 1
+  654 read *tmp8 cell2 4
+  655 read *tmp10 cell2 5
   656 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  657 write *tmp11 cell1 5
   658 label *label414
-    * op add :j :j 1
+  659 op add :j 5 1
   660 label *label415
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  661 op sub *tmp7 6 1
+  662 read *tmp8 cell2 5
+  663 read *tmp10 cell2 6
   664 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  665 write *tmp11 cell1 6
   666 label *label416
-    * op add :j :j 1
+  667 op add :j 6 1
   668 label *label417
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  669 op sub *tmp7 7 1
+  670 read *tmp8 cell2 6
+  671 read *tmp10 cell2 7
   672 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  673 write *tmp11 cell1 7
   674 label *label418
-    * op add :j :j 1
+  675 op add :j 7 1
   676 label *label419
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  677 op sub *tmp7 8 1
+  678 read *tmp8 cell2 7
+  679 read *tmp10 cell2 8
   680 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  681 write *tmp11 cell1 8
   682 label *label420
-    * op add :j :j 1
+  683 op add :j 8 1
   684 label *label421
-    * op sub *tmp7 :j 1
-    * read *tmp8 cell2 *tmp7
-    * read *tmp10 cell2 :j
+  685 op sub *tmp7 9 1
+  686 read *tmp8 cell2 8
+  687 read *tmp10 cell2 9
   688 op add *tmp11 *tmp8 *tmp10
-    * write *tmp11 cell1 :j
+  689 write *tmp11 cell1 9
   690 label *label422
-    * op add :j :j 1
+  691 op add :j 9 1
   692 label *label103
   693 write 1 cell1 9
   694 label *label318

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-19 instructions):
 
   615 label *label98
   616 label *label99
   617 write 1 cell1 0
-    * set :j 1
   618 label *label404
   619 label *label405
-    * op sub *tmp7 1 1
   620 read *tmp8 cell2 0
   621 read *tmp10 cell2 1
   622 op add *tmp11 *tmp8 *tmp10
   623 write *tmp11 cell1 1
   624 label *label406
-    * op add :j 1 1
   625 label *label407
-    * op sub *tmp7 2 1
   626 read *tmp8 cell2 1
   627 read *tmp10 cell2 2
   628 op add *tmp11 *tmp8 *tmp10
   629 write *tmp11 cell1 2
   630 label *label408
-    * op add :j 2 1
   631 label *label409
-    * op sub *tmp7 3 1
   632 read *tmp8 cell2 2
   633 read *tmp10 cell2 3
   634 op add *tmp11 *tmp8 *tmp10
   635 write *tmp11 cell1 3
   636 label *label410
-    * op add :j 3 1
   637 label *label411
-    * op sub *tmp7 4 1
   638 read *tmp8 cell2 3
   639 read *tmp10 cell2 4
   640 op add *tmp11 *tmp8 *tmp10
   641 write *tmp11 cell1 4
   642 label *label412
-    * op add :j 4 1
   643 label *label413
-    * op sub *tmp7 5 1
   644 read *tmp8 cell2 4
   645 read *tmp10 cell2 5
   646 op add *tmp11 *tmp8 *tmp10
   647 write *tmp11 cell1 5
   648 label *label414
-    * op add :j 5 1
   649 label *label415
-    * op sub *tmp7 6 1
   650 read *tmp8 cell2 5
   651 read *tmp10 cell2 6
   652 op add *tmp11 *tmp8 *tmp10
   653 write *tmp11 cell1 6
   654 label *label416
-    * op add :j 6 1
   655 label *label417
-    * op sub *tmp7 7 1
   656 read *tmp8 cell2 6
   657 read *tmp10 cell2 7
   658 op add *tmp11 *tmp8 *tmp10
   659 write *tmp11 cell1 7
   660 label *label418
-    * op add :j 7 1
   661 label *label419
-    * op sub *tmp7 8 1
   662 read *tmp8 cell2 7
   663 read *tmp10 cell2 8
   664 op add *tmp11 *tmp8 *tmp10
   665 write *tmp11 cell1 8
   666 label *label420
-    * op add :j 8 1
   667 label *label421
-    * op sub *tmp7 9 1
   668 read *tmp8 cell2 8
   669 read *tmp10 cell2 9
   670 op add *tmp11 *tmp8 *tmp10
   671 write *tmp11 cell1 9
   672 label *label422
-    * op add :j 9 1
   673 label *label103
   674 write 1 cell1 9
   675 label *label318

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-44 instructions):
 
    25 label *label117
    26 read *tmp17 cell2 0
    27 print *tmp17
-    * jump *label118 greaterThanEq 0 2
    28 print " "
    29 label *label118
    30 label *label119
 
    32 label *label121
    33 read *tmp17 cell2 1
    34 print *tmp17
-    * jump *label122 greaterThanEq 1 2
    35 print " "
    36 label *label122
    37 label *label123
 
    39 label *label125
    40 read *tmp17 cell2 2
    41 print *tmp17
-    * jump *label126 greaterThanEq 2 2
+   42 jump *label126 always
    43 print " "
    44 label *label126
    45 label *label127
 
    74 label *label137
    75 read *tmp17 cell1 0
    76 print *tmp17
-    * jump *label138 greaterThanEq 0 3
    77 print " "
    78 label *label138
    79 label *label139
 
    81 label *label141
    82 read *tmp17 cell1 1
    83 print *tmp17
-    * jump *label142 greaterThanEq 1 3
    84 print " "
    85 label *label142
    86 label *label143
 
    88 label *label145
    89 read *tmp17 cell1 2
    90 print *tmp17
-    * jump *label146 greaterThanEq 2 3
    91 print " "
    92 label *label146
    93 label *label147
 
    95 label *label149
    96 read *tmp17 cell1 3
    97 print *tmp17
-    * jump *label150 greaterThanEq 3 3
+   98 jump *label150 always
    99 print " "
   100 label *label150
   101 label *label151
 
   136 label *label154
   137 read *tmp17 cell2 0
   138 print *tmp17
-    * jump *label155 greaterThanEq 0 4
   139 print " "
   140 label *label155
   141 label *label156
 
   143 label *label158
   144 read *tmp17 cell2 1
   145 print *tmp17
-    * jump *label159 greaterThanEq 1 4
   146 print " "
   147 label *label159
   148 label *label160
 
   150 label *label162
   151 read *tmp17 cell2 2
   152 print *tmp17
-    * jump *label163 greaterThanEq 2 4
   153 print " "
   154 label *label163
   155 label *label164
 
   157 label *label166
   158 read *tmp17 cell2 3
   159 print *tmp17
-    * jump *label167 greaterThanEq 3 4
   160 print " "
   161 label *label167
   162 label *label168
 
   164 label *label170
   165 read *tmp17 cell2 4
   166 print *tmp17
-    * jump *label171 greaterThanEq 4 4
+  167 jump *label171 always
   168 print " "
   169 label *label171
   170 label *label172
 
   211 label *label175
   212 read *tmp17 cell1 0
   213 print *tmp17
-    * jump *label176 greaterThanEq 0 5
   214 print " "
   215 label *label176
   216 label *label177
 
   218 label *label179
   219 read *tmp17 cell1 1
   220 print *tmp17
-    * jump *label180 greaterThanEq 1 5
   221 print " "
   222 label *label180
   223 label *label181
 
   225 label *label183
   226 read *tmp17 cell1 2
   227 print *tmp17
-    * jump *label184 greaterThanEq 2 5
   228 print " "
   229 label *label184
   230 label *label185
 
   232 label *label187
   233 read *tmp17 cell1 3
   234 print *tmp17
-    * jump *label188 greaterThanEq 3 5
   235 print " "
   236 label *label188
   237 label *label189
 
   239 label *label191
   240 read *tmp17 cell1 4
   241 print *tmp17
-    * jump *label192 greaterThanEq 4 5
   242 print " "
   243 label *label192
   244 label *label193
 
   246 label *label195
   247 read *tmp17 cell1 5
   248 print *tmp17
-    * jump *label196 greaterThanEq 5 5
+  249 jump *label196 always
   250 print " "
   251 label *label196
   252 label *label197
 
   299 label *label209
   300 read *tmp17 cell2 0
   301 print *tmp17
-    * jump *label210 greaterThanEq 0 6
   302 print " "
   303 label *label210
   304 label *label211
 
   306 label *label213
   307 read *tmp17 cell2 1
   308 print *tmp17
-    * jump *label214 greaterThanEq 1 6
   309 print " "
   310 label *label214
   311 label *label215
 
   313 label *label217
   314 read *tmp17 cell2 2
   315 print *tmp17
-    * jump *label218 greaterThanEq 2 6
   316 print " "
   317 label *label218
   318 label *label219
 
   320 label *label221
   321 read *tmp17 cell2 3
   322 print *tmp17
-    * jump *label222 greaterThanEq 3 6
   323 print " "
   324 label *label222
   325 label *label223
 
   327 label *label225
   328 read *tmp17 cell2 4
   329 print *tmp17
-    * jump *label226 greaterThanEq 4 6
   330 print " "
   331 label *label226
   332 label *label227
 
   334 label *label229
   335 read *tmp17 cell2 5
   336 print *tmp17
-    * jump *label230 greaterThanEq 5 6
   337 print " "
   338 label *label230
   339 label *label231
 
   341 label *label233
   342 read *tmp17 cell2 6
   343 print *tmp17
-    * jump *label234 greaterThanEq 6 6
+  344 jump *label234 always
   345 print " "
   346 label *label234
   347 label *label235
 
   400 label *label238
   401 read *tmp17 cell1 0
   402 print *tmp17
-    * jump *label239 greaterThanEq 0 7
   403 print " "
   404 label *label239
   405 label *label240
 
   407 label *label242
   408 read *tmp17 cell1 1
   409 print *tmp17
-    * jump *label243 greaterThanEq 1 7
   410 print " "
   411 label *label243
   412 label *label244
 
   414 label *label246
   415 read *tmp17 cell1 2
   416 print *tmp17
-    * jump *label247 greaterThanEq 2 7
   417 print " "
   418 label *label247
   419 label *label248
 
   421 label *label250
   422 read *tmp17 cell1 3
   423 print *tmp17
-    * jump *label251 greaterThanEq 3 7
   424 print " "
   425 label *label251
   426 label *label252
 
   428 label *label254
   429 read *tmp17 cell1 4
   430 print *tmp17
-    * jump *label255 greaterThanEq 4 7
   431 print " "
   432 label *label255
   433 label *label256
 
   435 label *label258
   436 read *tmp17 cell1 5
   437 print *tmp17
-    * jump *label259 greaterThanEq 5 7
   438 print " "
   439 label *label259
   440 label *label260
 
   442 label *label262
   443 read *tmp17 cell1 6
   444 print *tmp17
-    * jump *label263 greaterThanEq 6 7
   445 print " "
   446 label *label263
   447 label *label264
 
   449 label *label266
   450 read *tmp17 cell1 7
   451 print *tmp17
-    * jump *label267 greaterThanEq 7 7
+  452 jump *label267 always
   453 print " "
   454 label *label267
   455 label *label268
 
   514 label *label271
   515 read *tmp17 cell2 0
   516 print *tmp17
-    * jump *label272 greaterThanEq 0 8
   517 print " "
   518 label *label272
   519 label *label273
 
   521 label *label275
   522 read *tmp17 cell2 1
   523 print *tmp17
-    * jump *label276 greaterThanEq 1 8
   524 print " "
   525 label *label276
   526 label *label277
 
   528 label *label279
   529 read *tmp17 cell2 2
   530 print *tmp17
-    * jump *label280 greaterThanEq 2 8
   531 print " "
   532 label *label280
   533 label *label281
 
   535 label *label283
   536 read *tmp17 cell2 3
   537 print *tmp17
-    * jump *label284 greaterThanEq 3 8
   538 print " "
   539 label *label284
   540 label *label285
 
   542 label *label287
   543 read *tmp17 cell2 4
   544 print *tmp17
-    * jump *label288 greaterThanEq 4 8
   545 print " "
   546 label *label288
   547 label *label289
 
   549 label *label291
   550 read *tmp17 cell2 5
   551 print *tmp17
-    * jump *label292 greaterThanEq 5 8
   552 print " "
   553 label *label292
   554 label *label293
 
   556 label *label295
   557 read *tmp17 cell2 6
   558 print *tmp17
-    * jump *label296 greaterThanEq 6 8
   559 print " "
   560 label *label296
   561 label *label297
 
   563 label *label299
   564 read *tmp17 cell2 7
   565 print *tmp17
-    * jump *label300 greaterThanEq 7 8
   566 print " "
   567 label *label300
   568 label *label301
 
   570 label *label303
   571 read *tmp17 cell2 8
   572 print *tmp17
-    * jump *label304 greaterThanEq 8 8
+  573 jump *label304 always
   574 print " "
   575 label *label304
   576 label *label305
 
   641 label *label319
   642 read *tmp17 cell1 0
   643 print *tmp17
-    * jump *label320 greaterThanEq 0 9
   644 print " "
   645 label *label320
   646 label *label321
 
   648 label *label323
   649 read *tmp17 cell1 1
   650 print *tmp17
-    * jump *label324 greaterThanEq 1 9
   651 print " "
   652 label *label324
   653 label *label325
 
   655 label *label327
   656 read *tmp17 cell1 2
   657 print *tmp17
-    * jump *label328 greaterThanEq 2 9
   658 print " "
   659 label *label328
   660 label *label329
 
   662 label *label331
   663 read *tmp17 cell1 3
   664 print *tmp17
-    * jump *label332 greaterThanEq 3 9
   665 print " "
   666 label *label332
   667 label *label333
 
   669 label *label335
   670 read *tmp17 cell1 4
   671 print *tmp17
-    * jump *label336 greaterThanEq 4 9
   672 print " "
   673 label *label336
   674 label *label337
 
   676 label *label339
   677 read *tmp17 cell1 5
   678 print *tmp17
-    * jump *label340 greaterThanEq 5 9
   679 print " "
   680 label *label340
   681 label *label341
 
   683 label *label343
   684 read *tmp17 cell1 6
   685 print *tmp17
-    * jump *label344 greaterThanEq 6 9
   686 print " "
   687 label *label344
   688 label *label345
 
   690 label *label347
   691 read *tmp17 cell1 7
   692 print *tmp17
-    * jump *label348 greaterThanEq 7 9
   693 print " "
   694 label *label348
   695 label *label349
 
   697 label *label351
   698 read *tmp17 cell1 8
   699 print *tmp17
-    * jump *label352 greaterThanEq 8 9
   700 print " "
   701 label *label352
   702 label *label353
 
   704 label *label355
   705 read *tmp17 cell1 9
   706 print *tmp17
-    * jump *label356 greaterThanEq 9 9
+  707 jump *label356 always
   708 print " "
   709 label *label356
   710 label *label357

Modifications by Final phase, Unreachable Code Elimination, iteration 1 (-8 instructions):
 
    40 read *tmp17 cell2 2
    41 print *tmp17
    42 jump *label126 always
-    * print " "
    43 label *label126
    44 label *label127
    45 label *label128
 
    95 read *tmp17 cell1 3
    96 print *tmp17
    97 jump *label150 always
-    * print " "
    98 label *label150
    99 label *label151
   100 label *label152
 
   163 read *tmp17 cell2 4
   164 print *tmp17
   165 jump *label171 always
-    * print " "
   166 label *label171
   167 label *label172
   168 label *label173
 
   244 read *tmp17 cell1 5
   245 print *tmp17
   246 jump *label196 always
-    * print " "
   247 label *label196
   248 label *label197
   249 label *label198
 
   338 read *tmp17 cell2 6
   339 print *tmp17
   340 jump *label234 always
-    * print " "
   341 label *label234
   342 label *label235
   343 label *label236
 
   445 read *tmp17 cell1 7
   446 print *tmp17
   447 jump *label267 always
-    * print " "
   448 label *label267
   449 label *label268
   450 label *label269
 
   565 read *tmp17 cell2 8
   566 print *tmp17
   567 jump *label304 always
-    * print " "
   568 label *label304
   569 label *label305
   570 label *label306
 
   698 read *tmp17 cell1 9
   699 print *tmp17
   700 jump *label356 always
-    * print " "
   701 label *label356
   702 label *label357
   703 label *label358

Modifications by Final phase, Single Step Elimination, iteration 1 (-9 instructions):
 
    39 label *label125
    40 read *tmp17 cell2 2
    41 print *tmp17
-    * jump *label126 always
    42 label *label126
    43 label *label127
    44 label *label128
 
    93 label *label149
    94 read *tmp17 cell1 3
    95 print *tmp17
-    * jump *label150 always
    96 label *label150
    97 label *label151
    98 label *label152
 
   160 label *label170
   161 read *tmp17 cell2 4
   162 print *tmp17
-    * jump *label171 always
   163 label *label171
   164 label *label172
   165 label *label173
 
   240 label *label195
   241 read *tmp17 cell1 5
   242 print *tmp17
-    * jump *label196 always
   243 label *label196
   244 label *label197
   245 label *label198
 
   333 label *label233
   334 read *tmp17 cell2 6
   335 print *tmp17
-    * jump *label234 always
   336 label *label234
   337 label *label235
   338 label *label236
 
   439 label *label266
   440 read *tmp17 cell1 7
   441 print *tmp17
-    * jump *label267 always
   442 label *label267
   443 label *label268
   444 label *label269
 
   558 label *label303
   559 read *tmp17 cell2 8
   560 print *tmp17
-    * jump *label304 always
   561 label *label304
   562 label *label305
   563 label *label306
 
   690 label *label355
   691 read *tmp17 cell1 9
   692 print *tmp17
-    * jump *label356 always
   693 label *label356
   694 label *label357
   695 label *label358
 
   698 label *label110
   699 label *label2
   700 printflush message1
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-3 instructions):
-    * print "1"
-    * print "\n"
-    * print "1 1"
-    * print "\n"
+    0 print "1\n1 1\n"
     1 write 1 cell1 0
     2 write 1 cell1 1
     3 label *label14

Final code before resolving virtual instructions:

    0:  print "1\n1 1\n"                                             println("1 1");
    1:  write 1 cell1 0                                              previousLine[0] = 1;
    2:  write 1 cell1 1                                              previousLine[1] = 1;
    3:  write 1 cell2 0                                              currentLine[0] = 1;
    4:  read *tmp8 cell1 0                                           currentLine[j] = previousLine[j - 1] + previousLine[j];
    5:  read *tmp10 cell1 1                                          ...
    6:  op add *tmp11 *tmp8 *tmp10                                   ...
    7:  write *tmp11 cell2 1                                         ...
    8:  read *tmp8 cell1 1                                           ...
    9:  read *tmp10 cell1 2                                          ...
   10:  op add *tmp11 *tmp8 *tmp10                                   ...
   11:  write *tmp11 cell2 2                                         ...
   12:  write 1 cell2 2                                              currentLine[lineLength] = 1;
   13:  read *tmp17 cell2 0                                          print(currentLine[c]);
   14:  print *tmp17                                                 ...
   15:  print " "                                                    print(" ");
   16:  read *tmp17 cell2 1                                          print(currentLine[c]);
   17:  print *tmp17                                                 ...
   18:  print " "                                                    print(" ");
   19:  read *tmp17 cell2 2                                          print(currentLine[c]);
   20:  print *tmp17                                                 ...
   21:  print "\n"                                                   println();
   22:  write 1 cell1 0                                              currentLine[0] = 1;
   23:  read *tmp8 cell2 0                                           currentLine[j] = previousLine[j - 1] + previousLine[j];
   24:  read *tmp10 cell2 1                                          ...
   25:  op add *tmp11 *tmp8 *tmp10                                   ...
   26:  write *tmp11 cell1 1                                         ...
   27:  read *tmp8 cell2 1                                           ...
   28:  read *tmp10 cell2 2                                          ...
   29:  op add *tmp11 *tmp8 *tmp10                                   ...
   30:  write *tmp11 cell1 2                                         ...
   31:  read *tmp8 cell2 2                                           ...
   32:  read *tmp10 cell2 3                                          ...
   33:  op add *tmp11 *tmp8 *tmp10                                   ...
   34:  write *tmp11 cell1 3                                         ...
   35:  write 1 cell1 3                                              currentLine[lineLength] = 1;
   36:  read *tmp17 cell1 0                                          print(currentLine[c]);
   37:  print *tmp17                                                 ...
   38:  print " "                                                    print(" ");
   39:  read *tmp17 cell1 1                                          print(currentLine[c]);
   40:  print *tmp17                                                 ...
   41:  print " "                                                    print(" ");
   42:  read *tmp17 cell1 2                                          print(currentLine[c]);
   43:  print *tmp17                                                 ...
   44:  print " "                                                    print(" ");
   45:  read *tmp17 cell1 3                                          print(currentLine[c]);
   46:  print *tmp17                                                 ...
   47:  print "\n"                                                   println();
   48:  write 1 cell2 0                                              currentLine[0] = 1;
   49:  read *tmp8 cell1 0                                           currentLine[j] = previousLine[j - 1] + previousLine[j];
   50:  read *tmp10 cell1 1                                          ...
   51:  op add *tmp11 *tmp8 *tmp10                                   ...
   52:  write *tmp11 cell2 1                                         ...
   53:  read *tmp8 cell1 1                                           ...
   54:  read *tmp10 cell1 2                                          ...
   55:  op add *tmp11 *tmp8 *tmp10                                   ...
   56:  write *tmp11 cell2 2                                         ...
   57:  read *tmp8 cell1 2                                           ...
   58:  read *tmp10 cell1 3                                          ...
   59:  op add *tmp11 *tmp8 *tmp10                                   ...
   60:  write *tmp11 cell2 3                                         ...
   61:  read *tmp8 cell1 3                                           ...
   62:  read *tmp10 cell1 4                                          ...
   63:  op add *tmp11 *tmp8 *tmp10                                   ...
   64:  write *tmp11 cell2 4                                         ...
   65:  write 1 cell2 4                                              currentLine[lineLength] = 1;
   66:  read *tmp17 cell2 0                                          print(currentLine[c]);
   67:  print *tmp17                                                 ...
   68:  print " "                                                    print(" ");
   69:  read *tmp17 cell2 1                                          print(currentLine[c]);
   70:  print *tmp17                                                 ...
   71:  print " "                                                    print(" ");
   72:  read *tmp17 cell2 2                                          print(currentLine[c]);
   73:  print *tmp17                                                 ...
   74:  print " "                                                    print(" ");
   75:  read *tmp17 cell2 3                                          print(currentLine[c]);
   76:  print *tmp17                                                 ...
   77:  print " "                                                    print(" ");
   78:  read *tmp17 cell2 4                                          print(currentLine[c]);
   79:  print *tmp17                                                 ...
   80:  print "\n"                                                   println();
   81:  write 1 cell1 0                                              currentLine[0] = 1;
   82:  read *tmp8 cell2 0                                           currentLine[j] = previousLine[j - 1] + previousLine[j];
   83:  read *tmp10 cell2 1                                          ...
   84:  op add *tmp11 *tmp8 *tmp10                                   ...
   85:  write *tmp11 cell1 1                                         ...
   86:  read *tmp8 cell2 1                                           ...
   87:  read *tmp10 cell2 2                                          ...
   88:  op add *tmp11 *tmp8 *tmp10                                   ...
   89:  write *tmp11 cell1 2                                         ...
   90:  read *tmp8 cell2 2                                           ...
   91:  read *tmp10 cell2 3                                          ...
   92:  op add *tmp11 *tmp8 *tmp10                                   ...
   93:  write *tmp11 cell1 3                                         ...
   94:  read *tmp8 cell2 3                                           ...
   95:  read *tmp10 cell2 4                                          ...
   96:  op add *tmp11 *tmp8 *tmp10                                   ...
   97:  write *tmp11 cell1 4                                         ...
   98:  read *tmp8 cell2 4                                           ...
   99:  read *tmp10 cell2 5                                          ...
  100:  op add *tmp11 *tmp8 *tmp10                                   ...
  101:  write *tmp11 cell1 5                                         ...
  102:  write 1 cell1 5                                              currentLine[lineLength] = 1;
  103:  read *tmp17 cell1 0                                          print(currentLine[c]);
  104:  print *tmp17                                                 ...
  105:  print " "                                                    print(" ");
  106:  read *tmp17 cell1 1                                          print(currentLine[c]);
  107:  print *tmp17                                                 ...
  108:  print " "                                                    print(" ");
  109:  read *tmp17 cell1 2                                          print(currentLine[c]);
  110:  print *tmp17                                                 ...
  111:  print " "                                                    print(" ");
  112:  read *tmp17 cell1 3                                          print(currentLine[c]);
  113:  print *tmp17                                                 ...
  114:  print " "                                                    print(" ");
  115:  read *tmp17 cell1 4                                          print(currentLine[c]);
  116:  print *tmp17                                                 ...
  117:  print " "                                                    print(" ");
  118:  read *tmp17 cell1 5                                          print(currentLine[c]);
  119:  print *tmp17                                                 ...
  120:  print "\n"                                                   println();
  121:  write 1 cell2 0                                              currentLine[0] = 1;
  122:  read *tmp8 cell1 0                                           currentLine[j] = previousLine[j - 1] + previousLine[j];
  123:  read *tmp10 cell1 1                                          ...
  124:  op add *tmp11 *tmp8 *tmp10                                   ...
  125:  write *tmp11 cell2 1                                         ...
  126:  read *tmp8 cell1 1                                           ...
  127:  read *tmp10 cell1 2                                          ...
  128:  op add *tmp11 *tmp8 *tmp10                                   ...
  129:  write *tmp11 cell2 2                                         ...
  130:  read *tmp8 cell1 2                                           ...
  131:  read *tmp10 cell1 3                                          ...
  132:  op add *tmp11 *tmp8 *tmp10                                   ...
  133:  write *tmp11 cell2 3                                         ...
  134:  read *tmp8 cell1 3                                           ...
  135:  read *tmp10 cell1 4                                          ...
  136:  op add *tmp11 *tmp8 *tmp10                                   ...
  137:  write *tmp11 cell2 4                                         ...
  138:  read *tmp8 cell1 4                                           ...
  139:  read *tmp10 cell1 5                                          ...
  140:  op add *tmp11 *tmp8 *tmp10                                   ...
  141:  write *tmp11 cell2 5                                         ...
  142:  read *tmp8 cell1 5                                           ...
  143:  read *tmp10 cell1 6                                          ...
  144:  op add *tmp11 *tmp8 *tmp10                                   ...
  145:  write *tmp11 cell2 6                                         ...
  146:  write 1 cell2 6                                              currentLine[lineLength] = 1;
  147:  read *tmp17 cell2 0                                          print(currentLine[c]);
  148:  print *tmp17                                                 ...
  149:  print " "                                                    print(" ");
  150:  read *tmp17 cell2 1                                          print(currentLine[c]);
  151:  print *tmp17                                                 ...
  152:  print " "                                                    print(" ");
  153:  read *tmp17 cell2 2                                          print(currentLine[c]);
  154:  print *tmp17                                                 ...
  155:  print " "                                                    print(" ");
  156:  read *tmp17 cell2 3                                          print(currentLine[c]);
  157:  print *tmp17                                                 ...
  158:  print " "                                                    print(" ");
  159:  read *tmp17 cell2 4                                          print(currentLine[c]);
  160:  print *tmp17                                                 ...
  161:  print " "                                                    print(" ");
  162:  read *tmp17 cell2 5                                          print(currentLine[c]);
  163:  print *tmp17                                                 ...
  164:  print " "                                                    print(" ");
  165:  read *tmp17 cell2 6                                          print(currentLine[c]);
  166:  print *tmp17                                                 ...
  167:  print "\n"                                                   println();
  168:  write 1 cell1 0                                              currentLine[0] = 1;
  169:  read *tmp8 cell2 0                                           currentLine[j] = previousLine[j - 1] + previousLine[j];
  170:  read *tmp10 cell2 1                                          ...
  171:  op add *tmp11 *tmp8 *tmp10                                   ...
  172:  write *tmp11 cell1 1                                         ...
  173:  read *tmp8 cell2 1                                           ...
  174:  read *tmp10 cell2 2                                          ...
  175:  op add *tmp11 *tmp8 *tmp10                                   ...
  176:  write *tmp11 cell1 2                                         ...
  177:  read *tmp8 cell2 2                                           ...
  178:  read *tmp10 cell2 3                                          ...
  179:  op add *tmp11 *tmp8 *tmp10                                   ...
  180:  write *tmp11 cell1 3                                         ...
  181:  read *tmp8 cell2 3                                           ...
  182:  read *tmp10 cell2 4                                          ...
  183:  op add *tmp11 *tmp8 *tmp10                                   ...
  184:  write *tmp11 cell1 4                                         ...
  185:  read *tmp8 cell2 4                                           ...
  186:  read *tmp10 cell2 5                                          ...
  187:  op add *tmp11 *tmp8 *tmp10                                   ...
  188:  write *tmp11 cell1 5                                         ...
  189:  read *tmp8 cell2 5                                           ...
  190:  read *tmp10 cell2 6                                          ...
  191:  op add *tmp11 *tmp8 *tmp10                                   ...
  192:  write *tmp11 cell1 6                                         ...
  193:  read *tmp8 cell2 6                                           ...
  194:  read *tmp10 cell2 7                                          ...
  195:  op add *tmp11 *tmp8 *tmp10                                   ...
  196:  write *tmp11 cell1 7                                         ...
  197:  write 1 cell1 7                                              currentLine[lineLength] = 1;
  198:  read *tmp17 cell1 0                                          print(currentLine[c]);
  199:  print *tmp17                                                 ...
  200:  print " "                                                    print(" ");
  201:  read *tmp17 cell1 1                                          print(currentLine[c]);
  202:  print *tmp17                                                 ...
  203:  print " "                                                    print(" ");
  204:  read *tmp17 cell1 2                                          print(currentLine[c]);
  205:  print *tmp17                                                 ...
  206:  print " "                                                    print(" ");
  207:  read *tmp17 cell1 3                                          print(currentLine[c]);
  208:  print *tmp17                                                 ...
  209:  print " "                                                    print(" ");
  210:  read *tmp17 cell1 4                                          print(currentLine[c]);
  211:  print *tmp17                                                 ...
  212:  print " "                                                    print(" ");
  213:  read *tmp17 cell1 5                                          print(currentLine[c]);
  214:  print *tmp17                                                 ...
  215:  print " "                                                    print(" ");
  216:  read *tmp17 cell1 6                                          print(currentLine[c]);
  217:  print *tmp17                                                 ...
  218:  print " "                                                    print(" ");
  219:  read *tmp17 cell1 7                                          print(currentLine[c]);
  220:  print *tmp17                                                 ...
  221:  print "\n"                                                   println();
  222:  write 1 cell2 0                                              currentLine[0] = 1;
  223:  read *tmp8 cell1 0                                           currentLine[j] = previousLine[j - 1] + previousLine[j];
  224:  read *tmp10 cell1 1                                          ...
  225:  op add *tmp11 *tmp8 *tmp10                                   ...
  226:  write *tmp11 cell2 1                                         ...
  227:  read *tmp8 cell1 1                                           ...
  228:  read *tmp10 cell1 2                                          ...
  229:  op add *tmp11 *tmp8 *tmp10                                   ...
  230:  write *tmp11 cell2 2                                         ...
  231:  read *tmp8 cell1 2                                           ...
  232:  read *tmp10 cell1 3                                          ...
  233:  op add *tmp11 *tmp8 *tmp10                                   ...
  234:  write *tmp11 cell2 3                                         ...
  235:  read *tmp8 cell1 3                                           ...
  236:  read *tmp10 cell1 4                                          ...
  237:  op add *tmp11 *tmp8 *tmp10                                   ...
  238:  write *tmp11 cell2 4                                         ...
  239:  read *tmp8 cell1 4                                           ...
  240:  read *tmp10 cell1 5                                          ...
  241:  op add *tmp11 *tmp8 *tmp10                                   ...
  242:  write *tmp11 cell2 5                                         ...
  243:  read *tmp8 cell1 5                                           ...
  244:  read *tmp10 cell1 6                                          ...
  245:  op add *tmp11 *tmp8 *tmp10                                   ...
  246:  write *tmp11 cell2 6                                         ...
  247:  read *tmp8 cell1 6                                           ...
  248:  read *tmp10 cell1 7                                          ...
  249:  op add *tmp11 *tmp8 *tmp10                                   ...
  250:  write *tmp11 cell2 7                                         ...
  251:  read *tmp8 cell1 7                                           ...
  252:  read *tmp10 cell1 8                                          ...
  253:  op add *tmp11 *tmp8 *tmp10                                   ...
  254:  write *tmp11 cell2 8                                         ...
  255:  write 1 cell2 8                                              currentLine[lineLength] = 1;
  256:  read *tmp17 cell2 0                                          print(currentLine[c]);
  257:  print *tmp17                                                 ...
  258:  print " "                                                    print(" ");
  259:  read *tmp17 cell2 1                                          print(currentLine[c]);
  260:  print *tmp17                                                 ...
  261:  print " "                                                    print(" ");
  262:  read *tmp17 cell2 2                                          print(currentLine[c]);
  263:  print *tmp17                                                 ...
  264:  print " "                                                    print(" ");
  265:  read *tmp17 cell2 3                                          print(currentLine[c]);
  266:  print *tmp17                                                 ...
  267:  print " "                                                    print(" ");
  268:  read *tmp17 cell2 4                                          print(currentLine[c]);
  269:  print *tmp17                                                 ...
  270:  print " "                                                    print(" ");
  271:  read *tmp17 cell2 5                                          print(currentLine[c]);
  272:  print *tmp17                                                 ...
  273:  print " "                                                    print(" ");
  274:  read *tmp17 cell2 6                                          print(currentLine[c]);
  275:  print *tmp17                                                 ...
  276:  print " "                                                    print(" ");
  277:  read *tmp17 cell2 7                                          print(currentLine[c]);
  278:  print *tmp17                                                 ...
  279:  print " "                                                    print(" ");
  280:  read *tmp17 cell2 8                                          print(currentLine[c]);
  281:  print *tmp17                                                 ...
  282:  print "\n"                                                   println();
  283:  write 1 cell1 0                                              currentLine[0] = 1;
  284:  read *tmp8 cell2 0                                           currentLine[j] = previousLine[j - 1] + previousLine[j];
  285:  read *tmp10 cell2 1                                          ...
  286:  op add *tmp11 *tmp8 *tmp10                                   ...
  287:  write *tmp11 cell1 1                                         ...
  288:  read *tmp8 cell2 1                                           ...
  289:  read *tmp10 cell2 2                                          ...
  290:  op add *tmp11 *tmp8 *tmp10                                   ...
  291:  write *tmp11 cell1 2                                         ...
  292:  read *tmp8 cell2 2                                           ...
  293:  read *tmp10 cell2 3                                          ...
  294:  op add *tmp11 *tmp8 *tmp10                                   ...
  295:  write *tmp11 cell1 3                                         ...
  296:  read *tmp8 cell2 3                                           ...
  297:  read *tmp10 cell2 4                                          ...
  298:  op add *tmp11 *tmp8 *tmp10                                   ...
  299:  write *tmp11 cell1 4                                         ...
  300:  read *tmp8 cell2 4                                           ...
  301:  read *tmp10 cell2 5                                          ...
  302:  op add *tmp11 *tmp8 *tmp10                                   ...
  303:  write *tmp11 cell1 5                                         ...
  304:  read *tmp8 cell2 5                                           ...
  305:  read *tmp10 cell2 6                                          ...
  306:  op add *tmp11 *tmp8 *tmp10                                   ...
  307:  write *tmp11 cell1 6                                         ...
  308:  read *tmp8 cell2 6                                           ...
  309:  read *tmp10 cell2 7                                          ...
  310:  op add *tmp11 *tmp8 *tmp10                                   ...
  311:  write *tmp11 cell1 7                                         ...
  312:  read *tmp8 cell2 7                                           ...
  313:  read *tmp10 cell2 8                                          ...
  314:  op add *tmp11 *tmp8 *tmp10                                   ...
  315:  write *tmp11 cell1 8                                         ...
  316:  read *tmp8 cell2 8                                           ...
  317:  read *tmp10 cell2 9                                          ...
  318:  op add *tmp11 *tmp8 *tmp10                                   ...
  319:  write *tmp11 cell1 9                                         ...
  320:  write 1 cell1 9                                              currentLine[lineLength] = 1;
  321:  read *tmp17 cell1 0                                          print(currentLine[c]);
  322:  print *tmp17                                                 ...
  323:  print " "                                                    print(" ");
  324:  read *tmp17 cell1 1                                          print(currentLine[c]);
  325:  print *tmp17                                                 ...
  326:  print " "                                                    print(" ");
  327:  read *tmp17 cell1 2                                          print(currentLine[c]);
  328:  print *tmp17                                                 ...
  329:  print " "                                                    print(" ");
  330:  read *tmp17 cell1 3                                          print(currentLine[c]);
  331:  print *tmp17                                                 ...
  332:  print " "                                                    print(" ");
  333:  read *tmp17 cell1 4                                          print(currentLine[c]);
  334:  print *tmp17                                                 ...
  335:  print " "                                                    print(" ");
  336:  read *tmp17 cell1 5                                          print(currentLine[c]);
  337:  print *tmp17                                                 ...
  338:  print " "                                                    print(" ");
  339:  read *tmp17 cell1 6                                          print(currentLine[c]);
  340:  print *tmp17                                                 ...
  341:  print " "                                                    print(" ");
  342:  read *tmp17 cell1 7                                          print(currentLine[c]);
  343:  print *tmp17                                                 ...
  344:  print " "                                                    print(" ");
  345:  read *tmp17 cell1 8                                          print(currentLine[c]);
  346:  print *tmp17                                                 ...
  347:  print " "                                                    print(" ");
  348:  read *tmp17 cell1 9                                          print(currentLine[c]);
  349:  print *tmp17                                                 ...
  350:  print "\n"                                                   println();
  351:  printflush message1                                          printflush(message1);


Performance: parsed in 102 ms, compiled in 168 ms, optimized in 431 ms, run in 11 ms.

Compiled mlog code was sent to Mlog Watcher.
  No response from Mlog Watcher - maybe an old version is installed?

Program output (352 steps):
1
1 1
1 2 1
1 3 3 1
1 4 6 4 1
1 5 10 10 5 1
1 6 15 20 15 6 1
1 7 21 35 35 21 7 1
1 8 28 56 70 56 28 8 1
1 9 36 84 126 126 84 36 9 1

