set .types*0 @mega
set .types*1 @poly
set .types*2 @horizon
set .types*3 @flare
set .types*4 @mono
set :findUnit*address 9
set *mainProcessor @this
wait 1e12
jump 7 always 0 0
sensor :findUnit:currentType :findUnit:currentUnit @type
print "Trying to find unit better than "
print :findUnit:currentUnit
printflush message1
jump 13 equal .types*0 :findUnit:currentType
print "Finding unit: "
print .types*0
printflush message1
ubind .types*0
jump 21 notEqual @unit null
set *tmp4 null
jump 33 always 0 0
set :findFreeUnit.0:first_unit @unit
sensor *tmp7 @unit @controlled
jump 27 notEqual *tmp7 0
ucontrol flag 0 0 0 0 0
set *tmp4 @unit
jump 33 always 0 0
sensor *tmp10 :findFreeUnit.0:first_unit @dead
jump 30 notEqual *tmp10 1
set :findFreeUnit.0:first_unit @unit
ubind .types*0
jump 22 notEqual :findFreeUnit.0:first_unit @unit
set *tmp4 null
jump 39 equal *tmp4 null
print "Returning unit: "
print *tmp4
printflush message1
set :findUnit*retval *tmp4
jump 142 always 0 0
jump 13 equal .types*1 :findUnit:currentType
print "Finding unit: "
print .types*1
printflush message1
ubind .types*1
jump 47 notEqual @unit null
set *tmp4 null
jump 59 always 0 0
set :findFreeUnit.0:first_unit @unit
sensor *tmp7 @unit @controlled
jump 53 notEqual *tmp7 0
ucontrol flag 0 0 0 0 0
set *tmp4 @unit
jump 59 always 0 0
sensor *tmp10 :findFreeUnit.0:first_unit @dead
jump 56 notEqual *tmp10 1
set :findFreeUnit.0:first_unit @unit
ubind .types*1
jump 48 notEqual :findFreeUnit.0:first_unit @unit
set *tmp4 null
jump 65 equal *tmp4 null
print "Returning unit: "
print *tmp4
printflush message1
set :findUnit*retval *tmp4
jump 142 always 0 0
jump 13 equal .types*2 :findUnit:currentType
print "Finding unit: "
print .types*2
printflush message1
ubind .types*2
jump 73 notEqual @unit null
set *tmp4 null
jump 85 always 0 0
set :findFreeUnit.0:first_unit @unit
sensor *tmp7 @unit @controlled
jump 79 notEqual *tmp7 0
ucontrol flag 0 0 0 0 0
set *tmp4 @unit
jump 85 always 0 0
sensor *tmp10 :findFreeUnit.0:first_unit @dead
jump 82 notEqual *tmp10 1
set :findFreeUnit.0:first_unit @unit
ubind .types*2
jump 74 notEqual :findFreeUnit.0:first_unit @unit
set *tmp4 null
jump 91 equal *tmp4 null
print "Returning unit: "
print *tmp4
printflush message1
set :findUnit*retval *tmp4
jump 142 always 0 0
jump 13 equal .types*3 :findUnit:currentType
print "Finding unit: "
print .types*3
printflush message1
ubind .types*3
jump 99 notEqual @unit null
set *tmp4 null
jump 111 always 0 0
set :findFreeUnit.0:first_unit @unit
sensor *tmp7 @unit @controlled
jump 105 notEqual *tmp7 0
ucontrol flag 0 0 0 0 0
set *tmp4 @unit
jump 111 always 0 0
sensor *tmp10 :findFreeUnit.0:first_unit @dead
jump 108 notEqual *tmp10 1
set :findFreeUnit.0:first_unit @unit
ubind .types*3
jump 100 notEqual :findFreeUnit.0:first_unit @unit
set *tmp4 null
jump 117 equal *tmp4 null
print "Returning unit: "
print *tmp4
printflush message1
set :findUnit*retval *tmp4
jump 142 always 0 0
jump 13 equal .types*4 :findUnit:currentType
print "Finding unit: "
print .types*4
printflush message1
ubind .types*4
jump 125 notEqual @unit null
set *tmp4 null
jump 137 always 0 0
set :findFreeUnit.0:first_unit @unit
sensor *tmp7 @unit @controlled
jump 131 notEqual *tmp7 0
ucontrol flag 0 0 0 0 0
set *tmp4 @unit
jump 137 always 0 0
sensor *tmp10 :findFreeUnit.0:first_unit @dead
jump 134 notEqual *tmp10 1
set :findFreeUnit.0:first_unit @unit
ubind .types*4
jump 126 notEqual :findFreeUnit.0:first_unit @unit
set *tmp4 null
jump 13 equal *tmp4 null
print "Returning unit: "
print *tmp4
printflush message1
set :findUnit*retval *tmp4
write :findUnit*retval *mainProcessor ":findUnit*retval"
write true *mainProcessor ":findUnit*finished"
jump 7 always 0 0
print "Compiled by Mindcode - github.com/cardillan/mindcode"

