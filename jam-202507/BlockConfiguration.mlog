set :packCfg:th 0
print "const PRESS = "
printchar 34
print "#'+nA######%"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst BATTERY1 = "
printchar 34
print "k*/(7######$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst BATTERY2 = "
printchar 34
print "k+/(7######$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst GENERATOR = "
printchar 34
print "m*.<2######$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst SMELTER = "
printchar 34
print "%+-A<######%"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst INVERTED_SORT1 = "
printchar 34
print "T+,%%######$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst PNEUMATIC_DRILL = "
printchar 34
print "w**5#-#####%"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst UNLOADER1 = "
printchar 34
printchar 130
print "*,###A<###$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst INVERTED_SORT2 = "
printchar 34
print "T),%%######$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst OVERFLOW_GATE1 = "
printchar 34
print "W*-'%######$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst PROCESSOR = "
printchar 34
print "®-.}U#U####$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst POWER_NODE = "
printchar 34
print "g)'%)######$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst UNLOADER2 = "
printchar 34
printchar 130
print "(*###A<###$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst AIR_FACTORY = "
printchar 34
printchar 151
print "'(_i#####&&"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst UNLOADER3 = "
set :packCfg:rotation 0
printchar 34
printchar 130
print ",)###A<###$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst INVERTED_SORT3 = "
printchar 34
print "T,*%%######$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst KILN = "
printchar 34
print "',+_AA#####%"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst WATER_EXT = "
printchar 34
print "z%-AAA##A##%"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst OVERFLOW_GATE2 = "
printchar 34
print "W'*'%######$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst OVERFLOW_GATE3 = "
printchar 34
print "W&*'%######$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst STEAM_GEN = "
printchar 34
print "o%+FK<A####%"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst MULTIPRESS = "
printchar 34
print "$(.#"
printchar 135
print "U<"
printchar 135
print "###&"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst WATER_EXT2 = "
printchar 34
print "z%/AAA##A##%"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst PAYLOAD_ROUTER = "
set :packCfg:mg 0
printchar 34
print " '%-#2#####&"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst UNLOADER4 = "
printchar 34
printchar 130
print "*(###A<###$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst UNDERFLOW_GATE = "
printchar 34
print "X*''%######$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst ADDITIVE_REC = "
printchar 34
printchar 153
print "*%ë"
printchar 155
print "#}####&"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst BATTERY_LARGE = "
printchar 34
print "l/,#U#A7###&"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst OVERFLOW_GATE4 = "
printchar 34
print "W&*'%######$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst LASER_DRILL = "
printchar 34
print "x**F#AA7###&"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst SOLAR_PANEL = "
set :packCfg:gr 0
printchar 34
print "r**#-#+####$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst CONTAINER = "
printchar 34
printchar 129
print "**####"
printchar 135
print "###%"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst SMELTER2 = "
printchar 34
print "%.)A<######%"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst INVERTED_SORT4 = "
set :packCfg:size 1
printchar 34
print "T-*%%######$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst INVERTED_SORT5 = "
printchar 34
print "T-)%%######$"
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\nconst UNLOADER5 = "
set :packCfg:type @unloader
set :packCfg:cu 0
set :packCfg:pb 0
set :packCfg:si 30
set :packCfg:ti 25
printchar 34
set *tmp0 95
op add *tmp1 35 95
printchar 130
op add *tmp2 7 3
op floor *tmp3 10 0
op add *tmp4 35 10
print "--###A<###$"
op add *tmp5 7 3
op floor *tmp6 10 0
op add *tmp7 35 10
op add *tmp8 35 0
op add *tmp9 35 0
op add *tmp10 35 0
op add *tmp11 35 30
op add *tmp12 35 25
op add *tmp13 35 0
op add *tmp14 35 0
op add *tmp15 35 0
op add *tmp16 35 1
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\n"
set :packCfg:name "UNLOADER6"
set :packCfg:x 1
set :packCfg:y -2
set :packCfg*retaddr 337
jump 360 always 0 0
set :packCfg:name "UNDERFLOW_GATE2"
set :packCfg:type @underflow-gate
set :packCfg:y -3
set :packCfg:cu 4
set :packCfg:pb 2
set :packCfg:si 0
set :packCfg:ti 0
set :packCfg*retaddr 346
jump 360 always 0 0
set :packCfg:name "MULTIPLICATIVE_REC"
set :packCfg:type @multiplicative-reconstructor
set :packCfg:x 4
set :packCfg:y -4
set :packCfg:cu 0
set :packCfg:pb 650
set :packCfg:si 450
set :packCfg:ti 350
set :packCfg:th 650
set :packCfg:size 5
set :packCfg*retaddr 358
jump 360 always 0 0
printflush message1
end
print "const {0} = "
format :packCfg:name
printchar 34
sensor *tmp0 :packCfg:type @id
op add *tmp1 35 *tmp0
printchar *tmp1
op add *tmp2 7 :packCfg:x
op floor *tmp3 *tmp2 0
op add *tmp4 35 *tmp3
printchar *tmp4
op add *tmp5 7 :packCfg:y
op floor *tmp6 *tmp5 0
op add *tmp7 35 *tmp6
printchar *tmp7
op add *tmp8 35 :packCfg:cu
printchar *tmp8
op add *tmp9 35 :packCfg:pb
printchar *tmp9
op add *tmp10 35 :packCfg:gr
printchar *tmp10
op add *tmp11 35 :packCfg:si
printchar *tmp11
op add *tmp12 35 :packCfg:ti
printchar *tmp12
op add *tmp13 35 :packCfg:mg
printchar *tmp13
op add *tmp14 35 :packCfg:th
printchar *tmp14
op add *tmp15 35 :packCfg:rotation
printchar *tmp15
op add *tmp16 35 :packCfg:size
printchar *tmp16
set *tmp17 .index
op add .index .index 1
op add *tmp18 35 *tmp17
printchar *tmp18
printchar 34
print ";\n"
set @counter :packCfg*retaddr
print "Compiled by Mindcode - github.com/cardillan/mindcode"

