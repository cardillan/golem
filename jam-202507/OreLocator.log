  1588 instructions before optimizations.
   110 instructions eliminated by Temp Variables Elimination (2 iterations).
   196 instructions eliminated by Dead Code Elimination (7 iterations).
C:\Home\golem\jam-202507\OreLocator.mnd:23:19 Variable 'mapProgress' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:23:32 Variable 'mapTotal' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:23:42 Variable 'mapAction' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:28:5 Variable 'water1X' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:28:14 Variable 'water1Y' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:29:5 Variable 'water2X' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:29:14 Variable 'water2Y' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:30:5 Variable 'generatorX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:30:17 Variable 'generatorY' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:31:5 Variable 'nodeX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:31:12 Variable 'nodeY' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:32:5 Variable 'panelX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:32:13 Variable 'panelY' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:33:5 Variable 'batteryX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:33:15 Variable 'batteryY' is not used.
     2 instructions eliminated by Jump Normalization (6 iterations).
    95 instructions eliminated by Jump Optimization (6 iterations).
   110 instructions eliminated by Single Step Elimination (3 passes, 10 iterations).
     8 instructions modified by Expression Optimization (2 passes, 3 iterations).
   336 instructions eliminated by Data Flow Optimization (7 passes, 26 iterations).
     2 loops improved by Loop Hoisting.
     2 instructions added by Loop Optimization (3 iterations).
    12 loops improved by Loop Optimization.
    53 instructions added by Loop Unrolling (12 iterations).
     1 loops unrolled by Loop Unrolling.
   190 instructions added by Function Inlining (12 iterations).
     6 function calls inlined by Function Inlining.
     6 instructions eliminated by Jump Straightening (2 passes, 6 iterations).
    30 instructions updated by JumpThreading.
    63 instructions eliminated by Unreachable Code Elimination (3 iterations).
   915 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 215):
    Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000
  * Replicate loop condition at line 41:5                        size    +1, benefit    31250.0, efficiency  31250.000 (+1 instructions)
    Replicate loop condition at line 41:5                        size    +1, benefit     1250.0, efficiency   1250.000
    Replicate loop condition at line 41:5                        size    +1, benefit      650.0, efficiency    650.000
    Unroll loop at line 463:5                                    size   +69, benefit     9100.0, efficiency    131.884
    Unroll loop at line 464:9                                    size   +44, benefit   227500.0, efficiency   5170.455
    Unroll iteration loop at line 679:5                          size  +193, benefit       19.0, efficiency      0.098
  ! Inline function 'computeRowValues' defined at line 73:1      size  +239, benefit    31250.0, efficiency    130.753
    Inline function 'tryPlaceGenerator' defined at line 547:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function 'printMask' defined at line 719:1            size   +19, benefit       12.0, efficiency      0.632
    Inline function call at line 151:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 152:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 153:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 154:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 155:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 644:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 645:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 646:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 676:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 698:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 214):
    Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000
    Replicate loop condition at line 41:5                        size    +1, benefit     1250.0, efficiency   1250.000
    Replicate loop condition at line 41:5                        size    +1, benefit      650.0, efficiency    650.000
    Unroll loop at line 463:5                                    size   +69, benefit     9100.0, efficiency    131.884
  * Unroll loop at line 464:9                                    size   +44, benefit   227500.0, efficiency   5170.455 (+45 instructions)
    Unroll iteration loop at line 679:5                          size  +193, benefit       19.0, efficiency      0.098
  ! Inline function 'computeRowValues' defined at line 73:1      size  +239, benefit    31250.0, efficiency    130.753
    Inline function 'tryPlaceGenerator' defined at line 547:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function 'printMask' defined at line 719:1            size   +19, benefit       12.0, efficiency      0.632
    Inline function call at line 151:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 152:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 153:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 154:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 155:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 644:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 645:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 646:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 676:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 698:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 169):
    Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000
  * Replicate loop condition at line 41:5                        size    +1, benefit     1250.0, efficiency   1250.000 (+1 instructions)
    Replicate loop condition at line 41:5                        size    +1, benefit      650.0, efficiency    650.000
  ! Unroll loop at line 463:5                                    size  +339, benefit     9100.0, efficiency     26.844
  ! Unroll iteration loop at line 679:5                          size  +193, benefit       19.0, efficiency      0.098
  ! Inline function 'computeRowValues' defined at line 73:1      size  +239, benefit    31250.0, efficiency    130.753
    Inline function 'tryPlaceGenerator' defined at line 547:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function 'printMask' defined at line 719:1            size   +19, benefit       12.0, efficiency      0.632
    Inline function call at line 151:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 152:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 153:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 154:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 155:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 644:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 645:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 646:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 676:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 698:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 168):
    Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000
  * Replicate loop condition at line 41:5                        size    +1, benefit      650.0, efficiency    650.000 (+1 instructions)
  ! Unroll loop at line 463:5                                    size  +339, benefit     9100.0, efficiency     26.844
  ! Unroll iteration loop at line 679:5                          size  +193, benefit       19.0, efficiency      0.098
  ! Inline function 'computeRowValues' defined at line 73:1      size  +239, benefit    31250.0, efficiency    130.753
    Inline function 'tryPlaceGenerator' defined at line 547:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function 'printMask' defined at line 719:1            size   +19, benefit       12.0, efficiency      0.632
    Inline function call at line 151:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 152:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 153:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 154:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 155:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 644:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 645:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 646:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 676:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 698:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 167):
    Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000
  ! Unroll loop at line 463:5                                    size  +339, benefit     9100.0, efficiency     26.844
  ! Unroll iteration loop at line 679:5                          size  +193, benefit       19.0, efficiency      0.098
  ! Inline function 'computeRowValues' defined at line 73:1      size  +239, benefit    31250.0, efficiency    130.753
    Inline function 'tryPlaceGenerator' defined at line 547:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function 'printMask' defined at line 719:1            size   +19, benefit       12.0, efficiency      0.632
  * Inline function call at line 151:14                          size   +60, benefit     6250.0, efficiency    104.167 (+55 instructions)
    Inline function call at line 152:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 153:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 154:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 155:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 644:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 645:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 646:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 676:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 698:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 112):
    Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000
  ! Unroll loop at line 463:5                                    size  +339, benefit     9100.0, efficiency     26.844
  ! Unroll iteration loop at line 679:5                          size  +193, benefit       19.0, efficiency      0.098
  ! Inline function 'computeRowValues' defined at line 73:1      size  +179, benefit    25000.0, efficiency    139.665
    Inline function 'tryPlaceGenerator' defined at line 547:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function 'printMask' defined at line 719:1            size   +19, benefit       12.0, efficiency      0.632
  * Inline function call at line 152:14                          size   +60, benefit     6250.0, efficiency    104.167 (+55 instructions)
    Inline function call at line 153:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 154:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 155:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 644:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 645:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 646:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 676:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 698:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 57):
  * Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000 (+1 instructions)
  ! Unroll loop at line 463:5                                    size  +339, benefit     9100.0, efficiency     26.844
  ! Unroll iteration loop at line 679:5                          size  +193, benefit       19.0, efficiency      0.098
  ! Inline function 'computeRowValues' defined at line 73:1      size  +119, benefit    18750.0, efficiency    157.563
  ! Inline function 'tryPlaceGenerator' defined at line 547:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function 'printMask' defined at line 719:1            size   +19, benefit       12.0, efficiency      0.632
  ! Inline function call at line 153:14                          size   +60, benefit     6250.0, efficiency    104.167
  ! Inline function call at line 154:14                          size   +60, benefit     6250.0, efficiency    104.167
  ! Inline function call at line 155:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 644:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 645:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 646:5                           size   +10, benefit        4.0, efficiency      0.400
  ! Inline function call at line 676:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 698:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 56):
  ! Unroll loop at line 463:5                                    size  +339, benefit     9100.0, efficiency     26.844
  ! Unroll iteration loop at line 679:5                          size  +193, benefit       19.0, efficiency      0.098
  ! Inline function 'computeRowValues' defined at line 73:1      size  +119, benefit    18750.0, efficiency    157.563
  ! Inline function 'tryPlaceGenerator' defined at line 547:1    size   +72, benefit      143.0, efficiency      1.986
  * Inline function 'printMask' defined at line 719:1            size   +19, benefit       12.0, efficiency      0.632 (+14 instructions)
  ! Inline function call at line 153:14                          size   +60, benefit     6250.0, efficiency    104.167
  ! Inline function call at line 154:14                          size   +60, benefit     6250.0, efficiency    104.167
  ! Inline function call at line 155:14                          size   +60, benefit     6250.0, efficiency    104.167
    Inline function call at line 644:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 645:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 646:5                           size   +10, benefit        4.0, efficiency      0.400
  ! Inline function call at line 676:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 698:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 42):
  ! Unroll loop at line 463:5                                    size  +339, benefit     9100.0, efficiency     26.844
  ! Unroll iteration loop at line 679:5                          size  +193, benefit       19.0, efficiency      0.098
  ! Inline function 'computeRowValues' defined at line 73:1      size  +119, benefit    18750.0, efficiency    157.563
  ! Inline function 'tryPlaceGenerator' defined at line 547:1    size   +72, benefit      143.0, efficiency      1.986
  ! Inline function call at line 153:14                          size   +60, benefit     6250.0, efficiency    104.167
  ! Inline function call at line 154:14                          size   +60, benefit     6250.0, efficiency    104.167
  ! Inline function call at line 155:14                          size   +60, benefit     6250.0, efficiency    104.167
  ! Inline function call at line 676:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 698:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 2: speed optimization selection (cost limit 67):
  ! Unroll loop at line 463:5                                    size  +297, benefit     9100.0, efficiency     30.640
  ! Unroll iteration loop at line 679:5                          size  +189, benefit       19.0, efficiency      0.101
  ! Inline function 'computeRowValues' defined at line 73:1      size  +117, benefit    18750.0, efficiency    160.256
  ! Inline function 'tryPlaceGenerator' defined at line 547:1    size   +72, benefit      143.0, efficiency      1.986
  * Inline function call at line 153:14                          size   +59, benefit     6250.0, efficiency    105.932 (+53 instructions)
    Inline function call at line 154:14                          size   +59, benefit     6250.0, efficiency    105.932
    Inline function call at line 155:14                          size   +59, benefit     6250.0, efficiency    105.932
  ! Inline function call at line 676:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 698:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 2: speed optimization selection (cost limit 14):
  ! Unroll loop at line 463:5                                    size  +297, benefit     9100.0, efficiency     30.640
  ! Unroll iteration loop at line 679:5                          size  +189, benefit       19.0, efficiency      0.101
  ! Inline function 'computeRowValues' defined at line 73:1      size   +58, benefit    12500.0, efficiency    215.517
  ! Inline function 'tryPlaceGenerator' defined at line 547:1    size   +72, benefit      143.0, efficiency      1.986
  ! Inline function call at line 154:14                          size   +59, benefit     6250.0, efficiency    105.932
  ! Inline function call at line 155:14                          size   +59, benefit     6250.0, efficiency    105.932
  ! Inline function call at line 676:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 698:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 3: speed optimization selection (cost limit 14):
  ! Unroll loop at line 463:5                                    size  +297, benefit     9100.0, efficiency     30.640
  ! Unroll iteration loop at line 679:5                          size  +189, benefit       19.0, efficiency      0.101
  ! Inline function 'computeRowValues' defined at line 73:1      size   +58, benefit    12500.0, efficiency    215.517
  ! Inline function 'tryPlaceGenerator' defined at line 547:1    size   +72, benefit      143.0, efficiency      1.986
  ! Inline function call at line 154:14                          size   +59, benefit     6250.0, efficiency    105.932
  ! Inline function call at line 155:14                          size   +59, benefit     6250.0, efficiency    105.932
  ! Inline function call at line 676:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 698:12                          size   +73, benefit      137.5, efficiency      1.884

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-127 instructions):
 
   227 jump *label61 equal *tmp111 false
   228 set *tmp83 false
   229 jump *label51 always
-    * set *tmp112 null
   230 jump *label62 always
   231 label *label61
-    * set *tmp112 null
   232 label *label62
   233 op sub *tmp113 :locateOreAway:x .coreX
   234 op abs *tmp114 *tmp113
 
   250 label *label65
   251 set *tmp124 null
   252 label *label66
-    * set *tmp122 *tmp124
   253 jump *label64 always
   254 label *label63
-    * set *tmp122 null
   255 label *label64
   256 op greaterThanEq *tmp125 :locateOreAway:coreDist 7
   257 jump *label67 equal *tmp125 false
 
   282 jump *label75 equal *tmp141 false
   283 set *tmp129 true
   284 jump *label71 always
-    * set *tmp142 null
   285 jump *label76 always
   286 label *label75
-    * set *tmp142 null
   287 label *label76
   288 label *label73
   289 op add :visited:i :visited:i 1
 
   312 label *label69
   313 set *tmp128 null
   314 label *label70
-    * set *tmp126 *tmp128
   315 jump *label68 always
   316 label *label67
-    * set *tmp126 null
   317 label *label68
   318 label *label53
   319 jump *label52 always
 
   329 op greaterThan *tmp149 :findDrillLocationLocal:capacity 0
   330 set :findDrillLocationLocal*retval *tmp149
   331 jump *label42 always
-    * set *tmp148 null
   332 jump *label80 always
   333 label *label79
-    * set *tmp148 null
   334 label *label80
   335 op greaterThanEq *tmp150 :findDrillLocationLocal:limit 1000
   336 jump *label81 equal *tmp150 false
   337 set *tmp152 .mapSpots
   338 op add .mapSpots .mapSpots 1
-    * set *tmp151 *tmp152
   339 jump *label82 always
   340 label *label81
-    * set *tmp151 null
   341 label *label82
   342 set :moveTo.5:x :findDrillLocationLocal:oreX
   343 set :moveTo.5:y :findDrillLocationLocal:oreY
 
   445 label *label103
   446 set *tmp178 null
   447 label *label104
-    * set *tmp176 *tmp178
   448 jump *label102 always
   449 label *label101
-    * set *tmp176 null
   450 label *label102
   451 label *label100
   452 set :updatePosition.1:dx -0.5
 
   464 label *label108
   465 set *tmp182 null
   466 label *label109
-    * set *tmp180 *tmp182
   467 jump *label107 always
   468 label *label106
-    * set *tmp180 null
   469 label *label107
   470 label *label105
   471 set :updatePosition.2:dx 0.5
 
   483 label *label113
   484 set *tmp186 null
   485 label *label114
-    * set *tmp184 *tmp186
   486 jump *label112 always
   487 label *label111
-    * set *tmp184 null
   488 label *label112
   489 label *label110
   490 set :updatePosition.3:dx 1.5
 
   502 label *label118
   503 set *tmp190 null
   504 label *label119
-    * set *tmp188 *tmp190
   505 jump *label117 always
   506 label *label116
-    * set *tmp188 null
   507 label *label117
   508 label *label115
   509 label *label99
 
   525 label *label124
   526 set *tmp194 null
   527 label *label125
-    * set *tmp192 *tmp194
   528 jump *label123 always
   529 label *label122
-    * set *tmp192 null
   530 label *label123
   531 label *label121
   532 set :updatePosition.5:dx -0.5
 
   544 label *label129
   545 set *tmp198 null
   546 label *label130
-    * set *tmp196 *tmp198
   547 jump *label128 always
   548 label *label127
-    * set *tmp196 null
   549 label *label128
   550 label *label126
   551 set :updatePosition.6:dx 0.5
 
   563 label *label134
   564 set *tmp202 null
   565 label *label135
-    * set *tmp200 *tmp202
   566 jump *label133 always
   567 label *label132
-    * set *tmp200 null
   568 label *label133
   569 label *label131
   570 set :updatePosition.7:dx 1.5
 
   582 label *label139
   583 set *tmp206 null
   584 label *label140
-    * set *tmp204 *tmp206
   585 jump *label138 always
   586 label *label137
-    * set *tmp204 null
   587 label *label138
   588 label *label136
   589 label *label120
 
   605 label *label145
   606 set *tmp210 null
   607 label *label146
-    * set *tmp208 *tmp210
   608 jump *label144 always
   609 label *label143
-    * set *tmp208 null
   610 label *label144
   611 label *label142
   612 set :updatePosition.9:dx -0.5
 
   624 label *label150
   625 set *tmp214 null
   626 label *label151
-    * set *tmp212 *tmp214
   627 jump *label149 always
   628 label *label148
-    * set *tmp212 null
   629 label *label149
   630 label *label147
   631 set :updatePosition.10:dx 0.5
 
   643 label *label155
   644 set *tmp218 null
   645 label *label156
-    * set *tmp216 *tmp218
   646 jump *label154 always
   647 label *label153
-    * set *tmp216 null
   648 label *label154
   649 label *label152
   650 set :updatePosition.11:dx 1.5
 
   662 label *label160
   663 set *tmp222 null
   664 label *label161
-    * set *tmp220 *tmp222
   665 jump *label159 always
   666 label *label158
-    * set *tmp220 null
   667 label *label159
   668 label *label157
   669 label *label141
 
   685 label *label166
   686 set *tmp226 null
   687 label *label167
-    * set *tmp224 *tmp226
   688 jump *label165 always
   689 label *label164
-    * set *tmp224 null
   690 label *label165
   691 label *label163
   692 set :updatePosition.13:dx -0.5
 
   704 label *label171
   705 set *tmp230 null
   706 label *label172
-    * set *tmp228 *tmp230
   707 jump *label170 always
   708 label *label169
-    * set *tmp228 null
   709 label *label170
   710 label *label168
   711 set :updatePosition.14:dx 0.5
 
   723 label *label176
   724 set *tmp234 null
   725 label *label177
-    * set *tmp232 *tmp234
   726 jump *label175 always
   727 label *label174
-    * set *tmp232 null
   728 label *label175
   729 label *label173
   730 set :updatePosition.15:dx 1.5
 
   742 label *label181
   743 set *tmp238 null
   744 label *label182
-    * set *tmp236 *tmp238
   745 jump *label180 always
   746 label *label179
-    * set *tmp236 null
   747 label *label180
   748 label *label178
   749 label *label162
-    * set *tmp170 null
   750 jump *label98 always
   751 label *label97
   752 op equal *tmp239 :findBestPosition:size 3
 
   778 label *label189
   779 set *tmp251 null
   780 label *label190
-    * set *tmp249 *tmp251
   781 jump *label188 always
   782 label *label187
-    * set *tmp249 null
   783 label *label188
   784 label *label186
   785 set :updatePosition.17:dx 0
 
   797 label *label194
   798 set *tmp255 null
   799 label *label195
-    * set *tmp253 *tmp255
   800 jump *label193 always
   801 label *label192
-    * set *tmp253 null
   802 label *label193
   803 label *label191
   804 set :updatePosition.18:dx 1
 
   816 label *label199
   817 set *tmp259 null
   818 label *label200
-    * set *tmp257 *tmp259
   819 jump *label198 always
   820 label *label197
-    * set *tmp257 null
   821 label *label198
   822 label *label196
   823 label *label185
 
   839 label *label205
   840 set *tmp264 null
   841 label *label206
-    * set *tmp262 *tmp264
   842 jump *label204 always
   843 label *label203
-    * set *tmp262 null
   844 label *label204
   845 label *label202
   846 set :updatePosition.20:dx 0
 
   858 label *label210
   859 set *tmp268 null
   860 label *label211
-    * set *tmp266 *tmp268
   861 jump *label209 always
   862 label *label208
-    * set *tmp266 null
   863 label *label209
   864 label *label207
   865 set :updatePosition.21:dx 1
 
   877 label *label215
   878 set *tmp272 null
   879 label *label216
-    * set *tmp270 *tmp272
   880 jump *label214 always
   881 label *label213
-    * set *tmp270 null
   882 label *label214
   883 label *label212
   884 label *label201
 
   900 label *label221
   901 set *tmp277 null
   902 label *label222
-    * set *tmp275 *tmp277
   903 jump *label220 always
   904 label *label219
-    * set *tmp275 null
   905 label *label220
   906 label *label218
   907 set :updatePosition.23:dx 0
 
   919 label *label226
   920 set *tmp281 null
   921 label *label227
-    * set *tmp279 *tmp281
   922 jump *label225 always
   923 label *label224
-    * set *tmp279 null
   924 label *label225
   925 label *label223
   926 set :updatePosition.24:dx 1
 
   938 label *label231
   939 set *tmp285 null
   940 label *label232
-    * set *tmp283 *tmp285
   941 jump *label230 always
   942 label *label229
-    * set *tmp283 null
   943 label *label230
   944 label *label228
   945 label *label217
 
   972 label *label237
   973 set *tmp297 null
   974 label *label238
-    * set *tmp295 *tmp297
   975 jump *label236 always
   976 label *label235
-    * set *tmp295 null
   977 label *label236
   978 label *label234
   979 set :updatePosition.26:dx 0.5
 
   991 label *label242
   992 set *tmp301 null
   993 label *label243
-    * set *tmp299 *tmp301
   994 jump *label241 always
   995 label *label240
-    * set *tmp299 null
   996 label *label241
   997 label *label239
   998 label *label233
 
  1014 label *label248
  1015 set *tmp307 null
  1016 label *label249
-    * set *tmp305 *tmp307
  1017 jump *label247 always
  1018 label *label246
-    * set *tmp305 null
  1019 label *label247
  1020 label *label245
  1021 set :updatePosition.28:dx 0.5
 
  1033 label *label253
  1034 set *tmp311 null
  1035 label *label254
-    * set *tmp309 *tmp311
  1036 jump *label252 always
  1037 label *label251
-    * set *tmp309 null
  1038 label *label252
  1039 label *label250
  1040 label *label244
  1041 set *tmp240 null
  1042 label *label184
-    * set *tmp170 *tmp240
  1043 label *label98
  1044 jump *label256 equal false false
  1045 printflush message1
 
  1049 sensor *tmp314 switch1 @enabled
  1050 jump *label258 notEqual *tmp314 false
  1051 label *label260
-    * set *tmp312 null
  1052 jump *label257 always
  1053 label *label256
-    * set *tmp312 null
  1054 label *label257
  1055 label *label255
  1056 op mul *tmp315 :findBestPosition:best 255
 
  1069 op lessThan *tmp320 :findDrillLocationLocal:limit 1000
  1070 jump *label263 equal *tmp320 false
  1071 set .mapSpots :findDrillLocationLocal:score
-    * set *tmp321 :findDrillLocationLocal:score
  1072 jump *label264 always
  1073 label *label263
-    * set *tmp321 null
  1074 label *label264
  1075 op greaterThanEq *tmp322 :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
  1076 jump *label265 equal *tmp322 false
 
  1091 op add .count .count 1
  1092 set *tmp331 .count
  1093 write :saveLocation:y bank1 *tmp331
-    * set *tmp333 .locations
  1094 op add .locations .locations 1
  1095 label *label267
  1096 ucontrol unbind
 
  1101 label *label265
  1102 set *tmp323 null
  1103 label *label266
-    * set *tmp317 *tmp323
  1104 jump *label262 always
  1105 label *label261
-    * set *tmp317 null
  1106 label *label262
  1107 op greaterThan *tmp334 :findDrillLocationLocal:score :findDrillLocationLocal:best
  1108 jump *label268 equal *tmp334 false
 
  1111 op add *tmp337 :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1112 set :findDrillLocationLocal:bestY *tmp337
  1113 set :findDrillLocationLocal:best :findDrillLocationLocal:score
-    * set *tmp335 :findDrillLocationLocal:best
  1114 jump *label269 always
  1115 label *label268
-    * set *tmp335 null
  1116 label *label269
  1117 op lessThanEq *tmp338 :findDrillLocationLocal:score :findDrillLocationLocal:last
  1118 jump *label270 equal *tmp338 false
  1119 jump *label90 always
-    * set *tmp339 null
  1120 jump *label271 always
  1121 label *label270
-    * set *tmp339 null
  1122 label *label271
  1123 set :findDrillLocationLocal:last :findDrillLocationLocal:score
  1124 op mul *tmp340 :findDrillLocationLocal:diffX 1.1
 
  1143 op lessThan *tmp353 *tmp352 7
  1144 jump *label274 equal *tmp353 false
  1145 jump *label90 always
-    * set *tmp354 null
  1146 jump *label275 always
  1147 label *label274
-    * set *tmp354 null
  1148 label *label275
  1149 label *label89
  1150 jump *label88 always
 
  1166 op add .count .count 1
  1167 set *tmp362 .count
  1168 write :saveLocation.1:y bank1 *tmp362
-    * set *tmp364 .locations
  1169 op add .locations .locations 1
  1170 label *label276
  1171 set :debugPrintSpot:text ""
 
  1197 set *tmp376 :debugPrintSpot:index
  1198 read *tmp377 bank1 *tmp376
  1199 set :debugPrintSpot:y *tmp377
-    * set *tmp378 :debugPrintSpot:index
  1200 op add :debugPrintSpot:index :debugPrintSpot:index 1
  1201 remark :debugPrintSpot:x
  1202 remark ","
 
  1213 label *label283
  1214 print :debugPrintSpot:text
  1215 printflush message1
-    * set *tmp365 null
  1216 jump *label279 always
  1217 label *label278
-    * set *tmp365 null
  1218 label *label279
  1219 label *label277
  1220 label *label49
 
  1295 op add *tmp397 *tmp396 :findPossiblePlacement:x
  1296 set :findPossiblePlacement*retval *tmp397
  1297 jump *label297 always
-    * set *tmp394 null
  1298 jump *label305 always
  1299 label *label304
-    * set *tmp394 null
  1300 label *label305
  1301 op sub *tmp398 3 :findPossiblePlacement:width
  1302 op greaterThan *tmp399 :findPossiblePlacement:x *tmp398
  1303 jump *label306 equal *tmp399 false
  1304 jump *label303 always
-    * set *tmp400 null
  1305 jump *label307 always
  1306 label *label306
-    * set *tmp400 null
  1307 label *label307
  1308 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
  1309 label *label302
 
  1314 op greaterThan *tmp402 :findPossiblePlacement:y *tmp401
  1315 jump *label308 equal *tmp402 false
  1316 jump *label300 always
-    * set *tmp403 null
  1317 jump *label309 always
  1318 label *label308
-    * set *tmp403 null
  1319 label *label309
  1320 label *label299
  1321 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
 
  1355 set .generatorY *tmp414
  1356 op shl *tmp415 :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:shift
  1357 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp415
-    * set *tmp406 :tryPlaceGenerator:terrainMask
  1358 jump *label313 always
  1359 label *label312
  1360 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1372 jump *label315 equal *tmp417 false
  1373 set :tryPlaceGenerator*retval false
  1374 jump *label310 always
-    * set *tmp418 null
  1375 jump *label316 always
  1376 label *label315
-    * set *tmp418 null
  1377 label *label316
  1378 op add *tmp419 :tryPlaceGenerator:centerX 0.5
  1379 op add *tmp420 *tmp419 :tryPlaceGenerator:c
 
  1389 set .generatorY *tmp426
  1390 op shl *tmp427 :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:shift
  1391 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp427
-    * set *tmp406 :tryPlaceGenerator:terrainMask
  1392 label *label313
  1393 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
  1394 set :findPossiblePlacement:placementMask 1
 
  1405 jump *label318 equal *tmp429 false
  1406 set :tryPlaceGenerator*retval false
  1407 jump *label310 always
-    * set *tmp430 null
  1408 jump *label319 always
  1409 label *label318
-    * set *tmp430 null
  1410 label *label319
  1411 op add *tmp431 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
  1412 set .nodeX *tmp431
 
  1429 jump *label321 equal *tmp435 false
  1430 set :tryPlaceGenerator*retval false
  1431 jump *label310 always
-    * set *tmp436 null
  1432 jump *label322 always
  1433 label *label321
-    * set *tmp436 null
  1434 label *label322
  1435 op add *tmp437 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
  1436 set .panelX *tmp437
 
  1453 jump *label324 equal *tmp441 false
  1454 set :tryPlaceGenerator*retval false
  1455 jump *label310 always
-    * set *tmp442 null
  1456 jump *label325 always
  1457 label *label324
-    * set *tmp442 null
  1458 label *label325
  1459 op add *tmp443 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
  1460 set .batteryX *tmp443
 
  1566 sensor *tmp484 switch1 @enabled
  1567 jump *label340 notEqual *tmp484 false
  1568 label *label342
-    * set *tmp482 null
  1569 jump *label339 always
  1570 label *label338
-    * set *tmp482 null
  1571 label *label339
  1572 label *label337
  1573 end
-    * set *tmp481 null
  1574 jump *label336 always
  1575 label *label335
-    * set *tmp481 null
  1576 label *label336
  1577 label *label334
  1578 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
 
  1596 set .water1Y *tmp491
  1597 op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:shift
  1598 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
-    * set *tmp487 :layoutThoriumDrillAtLocation:terrainMask
  1599 jump *label345 always
  1600 label *label344
-    * set *tmp487 null
  1601 label *label345
  1602 set :createFixedMatrix.3:row0 0b1111
  1603 set :createFixedMatrix.3:row1 0b1111
 
  1633 jump *label349 equal *tmp504 false
  1634 set :layoutThoriumDrillAtLocation*retval true
  1635 jump *label326 always
-    * set *tmp505 null
  1636 jump *label350 always
  1637 label *label349
-    * set *tmp505 null
  1638 label *label350
  1639 set :layoutThoriumDrillAtLocation:sx 3
  1640 set :layoutThoriumDrillAtLocation:sy 3
 
  1679 jump *label360 equal *tmp517 false
  1680 set *tmp512 0
  1681 jump *label359 always
-    * set *tmp518 null
  1682 jump *label361 always
  1683 label *label360
-    * set *tmp518 null
  1684 label *label361
  1685 op mul *tmp519 7 :shiftMask:shiftY
  1686 op add *tmp520 :shiftMask:shiftX *tmp519
 
  1692 op and *tmp524 :shiftMask:mask :shiftMask:clearMask
  1693 op shl *tmp525 *tmp524 :shiftMask:shift
  1694 set :shiftMask:mask *tmp525
-    * set *tmp522 :shiftMask:mask
  1695 jump *label363 always
  1696 label *label362
  1697 op sub *tmp526 0 :shiftMask:shift
  1698 op shr :shiftMask:mask :shiftMask:mask *tmp526
-    * set *tmp522 :shiftMask:mask
  1699 label *label363
  1700 op notEqual *tmp527 :shiftMask:shiftX 0
  1701 jump *label364 equal *tmp527 false
 
  1708 op abs *tmp534 :shiftMask:shiftX
  1709 op sub *tmp535 7 *tmp534
  1710 op shl :shiftMask:keep :shiftMask:keep *tmp535
-    * set *tmp533 :shiftMask:keep
  1711 jump *label367 always
  1712 label *label366
-    * set *tmp533 null
  1713 label *label367
  1714 op shl *tmp536 :shiftMask:keep 7
  1715 op or :shiftMask:keep :shiftMask:keep *tmp536
 
  1718 op shl *tmp538 :shiftMask:keep 21
  1719 op or :shiftMask:keep :shiftMask:keep *tmp538
  1720 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
-    * set *tmp528 :shiftMask:mask
  1721 jump *label365 always
  1722 label *label364
-    * set *tmp528 null
  1723 label *label365
  1724 set *tmp512 :shiftMask:mask
  1725 jump *label359 always
 
  1742 jump *label369 equal *tmp542 false
  1743 set :layoutThoriumDrillAtLocation*retval true
  1744 jump *label326 always
-    * set *tmp543 null
  1745 jump *label370 always
  1746 label *label369
-    * set *tmp543 null
  1747 label *label370
  1748 label *label352
  1749 multijump *tmp506 0 0 (m:marker0)
 
  1791 jump *label375 equal *tmp544 false
  1792 set :layoutThoriumDrill*retval false
  1793 jump *label373 always
-    * set *tmp545 null
  1794 jump *label376 always
  1795 label *label375
-    * set *tmp545 null
  1796 label *label376
  1797 setaddr :layoutThoriumDrillAtLocation*retaddr *label377 (h:*label377)
  1798 call *label12 *invalid :layoutThoriumDrillAtLocation*retval (m:*label377) (h:*label377)
 
  1832 op sub :printMask:r :printMask:r 1
  1833 jump *label381 always
  1834 label *label383
-    * set *tmp546 null
  1835 jump *label380 always
  1836 label *label379
-    * set *tmp546 null
  1837 label *label380
  1838 label *label378
  1839 return :printMask*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-67 instructions):
 
   245 op equal *tmp123 :locateOreAway:lastY :locateOreAway:y
   246 jump *label65 equal *tmp123 false
   247 jump *label53 always
-    * set *tmp124 null
   248 jump *label66 always
   249 label *label65
-    * set *tmp124 null
   250 label *label66
   251 jump *label64 always
   252 label *label63
 
   305 label *label77
   306 set *tmp144 null
   307 label *label78
-    * set *tmp128 *tmp144
   308 jump *label70 always
   309 label *label69
-    * set *tmp128 null
   310 label *label70
   311 jump *label68 always
   312 label *label67
 
   330 label *label80
   331 op greaterThanEq *tmp150 :findDrillLocationLocal:limit 1000
   332 jump *label81 equal *tmp150 false
-    * set *tmp152 .mapSpots
   333 op add .mapSpots .mapSpots 1
   334 jump *label82 always
   335 label *label81
 
   435 set :findDrillLocationLocal:diffX :updatePosition:dx
   436 set :findDrillLocationLocal:diffY :updatePosition:dy
   437 set :findBestPosition:best :updatePosition:value
-    * set *tmp178 :findBestPosition:best
   438 jump *label104 always
   439 label *label103
-    * set *tmp178 null
   440 label *label104
   441 jump *label102 always
   442 label *label101
 
   452 set :findDrillLocationLocal:diffX :updatePosition.1:dx
   453 set :findDrillLocationLocal:diffY :updatePosition.1:dy
   454 set :findBestPosition:best :updatePosition.1:value
-    * set *tmp182 :findBestPosition:best
   455 jump *label109 always
   456 label *label108
-    * set *tmp182 null
   457 label *label109
   458 jump *label107 always
   459 label *label106
 
   469 set :findDrillLocationLocal:diffX :updatePosition.2:dx
   470 set :findDrillLocationLocal:diffY :updatePosition.2:dy
   471 set :findBestPosition:best :updatePosition.2:value
-    * set *tmp186 :findBestPosition:best
   472 jump *label114 always
   473 label *label113
-    * set *tmp186 null
   474 label *label114
   475 jump *label112 always
   476 label *label111
 
   486 set :findDrillLocationLocal:diffX :updatePosition.3:dx
   487 set :findDrillLocationLocal:diffY :updatePosition.3:dy
   488 set :findBestPosition:best :updatePosition.3:value
-    * set *tmp190 :findBestPosition:best
   489 jump *label119 always
   490 label *label118
-    * set *tmp190 null
   491 label *label119
   492 jump *label117 always
   493 label *label116
 
   507 set :findDrillLocationLocal:diffX :updatePosition.4:dx
   508 set :findDrillLocationLocal:diffY :updatePosition.4:dy
   509 set :findBestPosition:best :updatePosition.4:value
-    * set *tmp194 :findBestPosition:best
   510 jump *label125 always
   511 label *label124
-    * set *tmp194 null
   512 label *label125
   513 jump *label123 always
   514 label *label122
 
   524 set :findDrillLocationLocal:diffX :updatePosition.5:dx
   525 set :findDrillLocationLocal:diffY :updatePosition.5:dy
   526 set :findBestPosition:best :updatePosition.5:value
-    * set *tmp198 :findBestPosition:best
   527 jump *label130 always
   528 label *label129
-    * set *tmp198 null
   529 label *label130
   530 jump *label128 always
   531 label *label127
 
   541 set :findDrillLocationLocal:diffX :updatePosition.6:dx
   542 set :findDrillLocationLocal:diffY :updatePosition.6:dy
   543 set :findBestPosition:best :updatePosition.6:value
-    * set *tmp202 :findBestPosition:best
   544 jump *label135 always
   545 label *label134
-    * set *tmp202 null
   546 label *label135
   547 jump *label133 always
   548 label *label132
 
   558 set :findDrillLocationLocal:diffX :updatePosition.7:dx
   559 set :findDrillLocationLocal:diffY :updatePosition.7:dy
   560 set :findBestPosition:best :updatePosition.7:value
-    * set *tmp206 :findBestPosition:best
   561 jump *label140 always
   562 label *label139
-    * set *tmp206 null
   563 label *label140
   564 jump *label138 always
   565 label *label137
 
   579 set :findDrillLocationLocal:diffX :updatePosition.8:dx
   580 set :findDrillLocationLocal:diffY :updatePosition.8:dy
   581 set :findBestPosition:best :updatePosition.8:value
-    * set *tmp210 :findBestPosition:best
   582 jump *label146 always
   583 label *label145
-    * set *tmp210 null
   584 label *label146
   585 jump *label144 always
   586 label *label143
 
   596 set :findDrillLocationLocal:diffX :updatePosition.9:dx
   597 set :findDrillLocationLocal:diffY :updatePosition.9:dy
   598 set :findBestPosition:best :updatePosition.9:value
-    * set *tmp214 :findBestPosition:best
   599 jump *label151 always
   600 label *label150
-    * set *tmp214 null
   601 label *label151
   602 jump *label149 always
   603 label *label148
 
   613 set :findDrillLocationLocal:diffX :updatePosition.10:dx
   614 set :findDrillLocationLocal:diffY :updatePosition.10:dy
   615 set :findBestPosition:best :updatePosition.10:value
-    * set *tmp218 :findBestPosition:best
   616 jump *label156 always
   617 label *label155
-    * set *tmp218 null
   618 label *label156
   619 jump *label154 always
   620 label *label153
 
   630 set :findDrillLocationLocal:diffX :updatePosition.11:dx
   631 set :findDrillLocationLocal:diffY :updatePosition.11:dy
   632 set :findBestPosition:best :updatePosition.11:value
-    * set *tmp222 :findBestPosition:best
   633 jump *label161 always
   634 label *label160
-    * set *tmp222 null
   635 label *label161
   636 jump *label159 always
   637 label *label158
 
   651 set :findDrillLocationLocal:diffX :updatePosition.12:dx
   652 set :findDrillLocationLocal:diffY :updatePosition.12:dy
   653 set :findBestPosition:best :updatePosition.12:value
-    * set *tmp226 :findBestPosition:best
   654 jump *label167 always
   655 label *label166
-    * set *tmp226 null
   656 label *label167
   657 jump *label165 always
   658 label *label164
 
   668 set :findDrillLocationLocal:diffX :updatePosition.13:dx
   669 set :findDrillLocationLocal:diffY :updatePosition.13:dy
   670 set :findBestPosition:best :updatePosition.13:value
-    * set *tmp230 :findBestPosition:best
   671 jump *label172 always
   672 label *label171
-    * set *tmp230 null
   673 label *label172
   674 jump *label170 always
   675 label *label169
 
   685 set :findDrillLocationLocal:diffX :updatePosition.14:dx
   686 set :findDrillLocationLocal:diffY :updatePosition.14:dy
   687 set :findBestPosition:best :updatePosition.14:value
-    * set *tmp234 :findBestPosition:best
   688 jump *label177 always
   689 label *label176
-    * set *tmp234 null
   690 label *label177
   691 jump *label175 always
   692 label *label174
 
   702 set :findDrillLocationLocal:diffX :updatePosition.15:dx
   703 set :findDrillLocationLocal:diffY :updatePosition.15:dy
   704 set :findBestPosition:best :updatePosition.15:value
-    * set *tmp238 :findBestPosition:best
   705 jump *label182 always
   706 label *label181
-    * set *tmp238 null
   707 label *label182
   708 jump *label180 always
   709 label *label179
 
   736 set :findDrillLocationLocal:diffX :updatePosition.16:dx
   737 set :findDrillLocationLocal:diffY :updatePosition.16:dy
   738 set :findBestPosition:best :updatePosition.16:value
-    * set *tmp251 :findBestPosition:best
   739 jump *label190 always
   740 label *label189
-    * set *tmp251 null
   741 label *label190
   742 jump *label188 always
   743 label *label187
 
   753 set :findDrillLocationLocal:diffX :updatePosition.17:dx
   754 set :findDrillLocationLocal:diffY :updatePosition.17:dy
   755 set :findBestPosition:best :updatePosition.17:value
-    * set *tmp255 :findBestPosition:best
   756 jump *label195 always
   757 label *label194
-    * set *tmp255 null
   758 label *label195
   759 jump *label193 always
   760 label *label192
 
   770 set :findDrillLocationLocal:diffX :updatePosition.18:dx
   771 set :findDrillLocationLocal:diffY :updatePosition.18:dy
   772 set :findBestPosition:best :updatePosition.18:value
-    * set *tmp259 :findBestPosition:best
   773 jump *label200 always
   774 label *label199
-    * set *tmp259 null
   775 label *label200
   776 jump *label198 always
   777 label *label197
 
   791 set :findDrillLocationLocal:diffX :updatePosition.19:dx
   792 set :findDrillLocationLocal:diffY :updatePosition.19:dy
   793 set :findBestPosition:best :updatePosition.19:value
-    * set *tmp264 :findBestPosition:best
   794 jump *label206 always
   795 label *label205
-    * set *tmp264 null
   796 label *label206
   797 jump *label204 always
   798 label *label203
 
   808 set :findDrillLocationLocal:diffX :updatePosition.20:dx
   809 set :findDrillLocationLocal:diffY :updatePosition.20:dy
   810 set :findBestPosition:best :updatePosition.20:value
-    * set *tmp268 :findBestPosition:best
   811 jump *label211 always
   812 label *label210
-    * set *tmp268 null
   813 label *label211
   814 jump *label209 always
   815 label *label208
 
   825 set :findDrillLocationLocal:diffX :updatePosition.21:dx
   826 set :findDrillLocationLocal:diffY :updatePosition.21:dy
   827 set :findBestPosition:best :updatePosition.21:value
-    * set *tmp272 :findBestPosition:best
   828 jump *label216 always
   829 label *label215
-    * set *tmp272 null
   830 label *label216
   831 jump *label214 always
   832 label *label213
 
   846 set :findDrillLocationLocal:diffX :updatePosition.22:dx
   847 set :findDrillLocationLocal:diffY :updatePosition.22:dy
   848 set :findBestPosition:best :updatePosition.22:value
-    * set *tmp277 :findBestPosition:best
   849 jump *label222 always
   850 label *label221
-    * set *tmp277 null
   851 label *label222
   852 jump *label220 always
   853 label *label219
 
   863 set :findDrillLocationLocal:diffX :updatePosition.23:dx
   864 set :findDrillLocationLocal:diffY :updatePosition.23:dy
   865 set :findBestPosition:best :updatePosition.23:value
-    * set *tmp281 :findBestPosition:best
   866 jump *label227 always
   867 label *label226
-    * set *tmp281 null
   868 label *label227
   869 jump *label225 always
   870 label *label224
 
   880 set :findDrillLocationLocal:diffX :updatePosition.24:dx
   881 set :findDrillLocationLocal:diffY :updatePosition.24:dy
   882 set :findBestPosition:best :updatePosition.24:value
-    * set *tmp285 :findBestPosition:best
   883 jump *label232 always
   884 label *label231
-    * set *tmp285 null
   885 label *label232
   886 jump *label230 always
   887 label *label229
   888 label *label230
   889 label *label228
   890 label *label217
-    * set *tmp240 null
   891 jump *label184 always
   892 label *label183
   893 op add *tmp286 :findBestPosition:y1 :findBestPosition:y2
 
   911 set :findDrillLocationLocal:diffX :updatePosition.25:dx
   912 set :findDrillLocationLocal:diffY :updatePosition.25:dy
   913 set :findBestPosition:best :updatePosition.25:value
-    * set *tmp297 :findBestPosition:best
   914 jump *label238 always
   915 label *label237
-    * set *tmp297 null
   916 label *label238
   917 jump *label236 always
   918 label *label235
 
   928 set :findDrillLocationLocal:diffX :updatePosition.26:dx
   929 set :findDrillLocationLocal:diffY :updatePosition.26:dy
   930 set :findBestPosition:best :updatePosition.26:value
-    * set *tmp301 :findBestPosition:best
   931 jump *label243 always
   932 label *label242
-    * set *tmp301 null
   933 label *label243
   934 jump *label241 always
   935 label *label240
 
   949 set :findDrillLocationLocal:diffX :updatePosition.27:dx
   950 set :findDrillLocationLocal:diffY :updatePosition.27:dy
   951 set :findBestPosition:best :updatePosition.27:value
-    * set *tmp307 :findBestPosition:best
   952 jump *label249 always
   953 label *label248
-    * set *tmp307 null
   954 label *label249
   955 jump *label247 always
   956 label *label246
 
   966 set :findDrillLocationLocal:diffX :updatePosition.28:dx
   967 set :findDrillLocationLocal:diffY :updatePosition.28:dy
   968 set :findBestPosition:best :updatePosition.28:value
-    * set *tmp311 :findBestPosition:best
   969 jump *label254 always
   970 label *label253
-    * set *tmp311 null
   971 label *label254
   972 jump *label252 always
   973 label *label251
   974 label *label252
   975 label *label250
   976 label *label244
-    * set *tmp240 null
   977 label *label184
   978 label *label98
   979 jump *label256 equal false false
 
  1031 ucontrol unbind
  1032 set :findDrillLocationLocal*retval true
  1033 jump *label42 always
-    * set *tmp323 null
  1034 jump *label266 always
  1035 label *label265
-    * set *tmp323 null
  1036 label *label266
  1037 jump *label262 always
  1038 label *label261

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
   300 printflush message1
   301 set *tmp83 true
   302 jump *label51 always
-    * set *tmp144 null
   303 jump *label78 always
   304 label *label77
-    * set *tmp144 null
   305 label *label78
   306 jump *label70 always
   307 label *label69

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-110 instructions):
 
    10 jump *label15 always
    11 end
    12 label *label5
-    * op sub *tmp0 :computeRowValues:x 2
-    * set :spotValue:x *tmp0
+   13 op sub :spotValue:x :computeRowValues:x 2
    14 set :spotValue:y :computeRowValues:y
    15 set :spotValue:ore :computeRowValues:ore
    16 ucontrol getBlock :spotValue:x :spotValue:y type building floor
 
    20 set *tmp1 :spotValue:result
    21 label *label17
    22 set :computeRowValues:x1 *tmp1
-    * op sub *tmp2 :computeRowValues:x 1
-    * set :spotValue.1:x *tmp2
+   23 op sub :spotValue.1:x :computeRowValues:x 1
    24 set :spotValue.1:y :computeRowValues:y
    25 set :spotValue.1:ore :computeRowValues:ore
    26 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
 
    30 set *tmp3 :spotValue.1:result
    31 label *label18
    32 set :computeRowValues:x2 *tmp3
-    * op add *tmp4 :computeRowValues:x 0
-    * set :spotValue.2:x *tmp4
+   33 op add :spotValue.2:x :computeRowValues:x 0
    34 set :spotValue.2:y :computeRowValues:y
    35 set :spotValue.2:ore :computeRowValues:ore
    36 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
 
    40 set *tmp5 :spotValue.2:result
    41 label *label19
    42 set :computeRowValues:x3 *tmp5
-    * op add *tmp6 :computeRowValues:x 1
-    * set :spotValue.3:x *tmp6
+   43 op add :spotValue.3:x :computeRowValues:x 1
    44 set :spotValue.3:y :computeRowValues:y
    45 set :spotValue.3:ore :computeRowValues:ore
    46 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
 
    50 set *tmp7 :spotValue.3:result
    51 label *label20
    52 set :computeRowValues:x4 *tmp7
-    * op add *tmp8 :computeRowValues:x 2
-    * set :spotValue.4:x *tmp8
+   53 op add :spotValue.4:x :computeRowValues:x 2
    54 set :spotValue.4:y :computeRowValues:y
    55 set :spotValue.4:ore :computeRowValues:ore
    56 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
 
    66 op add *tmp13 :computeRowValues:x2 :computeRowValues:x3
    67 op add *tmp14 :computeRowValues:x3 :computeRowValues:x4
    68 op add *tmp15 :computeRowValues:x4 :computeRowValues:x5
-    * packcolor *tmp16 *tmp12 *tmp13 *tmp14 *tmp15
-    * set :computeRowValues*retval *tmp16
+   69 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
    70 jump *label16 always
    71 set *tmp11 null
    72 jump *label23 always
 
    79 op add *tmp22 *tmp21 :computeRowValues:x4
    80 op add *tmp23 :computeRowValues:x3 :computeRowValues:x4
    81 op add *tmp24 *tmp23 :computeRowValues:x5
-    * packcolor *tmp25 *tmp20 *tmp22 *tmp24 0
-    * set :computeRowValues*retval *tmp25
+   82 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
    83 jump *label16 always
    84 set *tmp18 null
    85 jump *label25 always
 
    90 op add *tmp29 :computeRowValues:x2 :computeRowValues:x3
    91 op add *tmp30 *tmp29 :computeRowValues:x4
    92 op add *tmp31 *tmp30 :computeRowValues:x5
-    * packcolor *tmp32 *tmp28 *tmp31 0 0
-    * set :computeRowValues*retval *tmp32
+   93 packcolor :computeRowValues*retval *tmp28 *tmp31 0 0
    94 jump *label16 always
    95 set *tmp18 null
    96 label *label25
 
   137 label *label44
   138 label *label43
   139 op div *tmp76 :findDrillLocationLocal:distanceLimit 3.8197185279121366
-    * op pow *tmp77 *tmp76 2
-    * set .mapTotal *tmp77
+  140 op pow .mapTotal *tmp76 2
   141 set :findDrillLocationLocal:oreX 0
   142 set :findDrillLocationLocal:oreY 0
   143 label *label48
 
   146 set :findDrillLocationLocal:bestX :findDrillLocationLocal:x
   147 set :findDrillLocationLocal:bestY :findDrillLocationLocal:y
   148 op sub *tmp78 :findDrillLocationLocal:limit :findDrillLocationLocal:capacity
-    * op mul *tmp79 *tmp78 .attenuationRate
-    * set :findDrillLocationLocal:maxDistance *tmp79
-    * op min *tmp80 :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
-    * set :findDrillLocationLocal:distanceLimit *tmp80
+  149 op mul :findDrillLocationLocal:maxDistance *tmp78 .attenuationRate
+  150 op min :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
   151 op div *tmp81 :findDrillLocationLocal:distanceLimit 3.8197185279121366
-    * op pow *tmp82 *tmp81 2
-    * set .mapTotal *tmp82
+  152 op pow .mapTotal *tmp81 2
   153 set :locateOreAway:ore :findDrillLocationLocal:item
   154 set :locateOreAway:x :findDrillLocationLocal:oreX
   155 set :locateOreAway:y :findDrillLocationLocal:oreY
   156 set :locateOreAway:distanceLimit :findDrillLocationLocal:distanceLimit
-    * op mul *tmp84 3.8197185279121366 .angle
-    * set :locateOreAway:distance *tmp84
+  157 op mul :locateOreAway:distance 3.8197185279121366 .angle
   158 set :locateOreAway:lastX -1
   159 set :locateOreAway:lastY -1
-    * op max *tmp85 .angle @pi
-    * set .angle *tmp85
-    * op mul *tmp86 .angle .angle
-    * set .mapProgress *tmp86
+  160 op max .angle .angle @pi
+  161 op mul .mapProgress .angle .angle
   162 label *label52
   163 op lessThan *tmp87 :locateOreAway:distance :locateOreAway:distanceLimit
   164 jump *label54 equal *tmp87 false
-    * op div *tmp88 .angle @degToRad
-    * set :locateOreAway:a *tmp88
+  165 op div :locateOreAway:a .angle @degToRad
   166 op sin *tmp89 :locateOreAway:a
   167 op mul *tmp90 *tmp89 :locateOreAway:distance
   168 op add *tmp91 .coreX *tmp90
 
   171 set :limit:low 5
   172 set :limit:high *tmp92
   173 op max *tmp94 :limit:value :limit:low
-    * op min *tmp95 *tmp94 :limit:high
-    * set *tmp93 *tmp95
+  174 op min *tmp93 *tmp94 :limit:high
   175 label *label55
   176 set :locateOreAway:lx *tmp93
   177 op cos *tmp96 :locateOreAway:a
 
   182 set :limit.1:low 5
   183 set :limit.1:high *tmp99
   184 op max *tmp101 :limit.1:value :limit.1:low
-    * op min *tmp102 *tmp101 :limit.1:high
-    * set *tmp100 *tmp102
+  185 op min *tmp100 *tmp101 :limit.1:high
   186 label *label56
   187 set :locateOreAway:ly *tmp100
   188 set :moveTo.4:x :locateOreAway:lx
 
   200 label *label57
   201 op div *tmp106 3.8197185279121366 :locateOreAway:distance
   202 op add .angle .angle *tmp106
-    * op mul *tmp107 .angle .angle
-    * set .mapProgress *tmp107
-    * op mul *tmp108 3.8197185279121366 .angle
-    * set :locateOreAway:distance *tmp108
-    * ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp109 *tmp110
+  203 op mul .mapProgress .angle .angle
+  204 op mul :locateOreAway:distance 3.8197185279121366 .angle
+  205 ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp109 0
   206 op equal *tmp111 *tmp109 false
   207 jump *label61 equal *tmp111 false
   208 set *tmp83 false
 
   214 op abs *tmp114 *tmp113
   215 op sub *tmp115 :locateOreAway:y .coreY
   216 op abs *tmp116 *tmp115
-    * op max *tmp117 *tmp114 *tmp116
-    * set :locateOreAway:coreDist *tmp117
+  217 op max :locateOreAway:coreDist *tmp114 *tmp116
   218 op sub *tmp118 :locateOreAway:x :locateOreAway:lx
   219 op sub *tmp119 :locateOreAway:y :locateOreAway:ly
-    * op len *tmp120 *tmp118 *tmp119
-    * set :locateOreAway:unitDist *tmp120
+  220 op len :locateOreAway:unitDist *tmp118 *tmp119
   221 op equal *tmp121 :locateOreAway:lastX :locateOreAway:x
   222 jump *label63 equal *tmp121 false
   223 op equal *tmp123 :locateOreAway:lastY :locateOreAway:y
 
   241 set :visited:i .locationsStart
   242 label *label72
   243 jump *label74 greaterThanEq :visited:i *tmp130
-    * op mul *tmp131 4 :visited:i
-    * set :visited:index *tmp131
-    * op add *tmp132 :visited:index 2
-    * set *tmp133 *tmp132
-    * read *tmp134 bank1 *tmp133
-    * set :visited:lx *tmp134
+  244 op mul :visited:index 4 :visited:i
+  245 op add *tmp133 :visited:index 2
+  246 read :visited:lx bank1 *tmp133
   247 op add *tmp135 :visited:index 3
-    * set *tmp136 *tmp135
-    * read *tmp137 bank1 *tmp136
-    * set :visited:ly *tmp137
+  248 read :visited:ly bank1 *tmp135
   249 op sub *tmp138 :visited:x :visited:lx
   250 op sub *tmp139 :visited:y :visited:ly
   251 op len *tmp140 *tmp138 *tmp139
 
   268 jump *label77 equal *tmp143 false
   269 op div *tmp145 7.639437055824273 :locateOreAway:distance
   270 op add .angle .angle *tmp145
-    * op mul *tmp146 .angle .angle
-    * set .mapProgress *tmp146
+  271 op mul .mapProgress .angle .angle
   272 printflush message1
   273 set *tmp83 true
   274 jump *label51 always
 
   292 set :findDrillLocationLocal:oreY :locateOreAway:y
   293 op equal *tmp147 *tmp83 false
   294 jump *label79 equal *tmp147 false
-    * op greaterThan *tmp149 :findDrillLocationLocal:capacity 0
-    * set :findDrillLocationLocal*retval *tmp149
+  295 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   296 jump *label42 always
   297 jump *label80 always
   298 label *label79
 
   336 setaddr :computeRowValues*retaddr *label92 (h:*label92)
   337 call *label5 *invalid :computeRowValues*retval (m:*label92) (h:*label92)
   338 label *label92
-    * set *tmp160 :computeRowValues*retval
-    * set :findBestPosition:y1 *tmp160
+  339 set :findBestPosition:y1 :computeRowValues*retval
   340 op sub *tmp161 :findBestPosition:y 1
   341 set :computeRowValues:x :findBestPosition:x
   342 set :computeRowValues:y *tmp161
 
   345 setaddr :computeRowValues*retaddr *label93 (h:*label93)
   346 call *label5 *invalid :computeRowValues*retval (m:*label93) (h:*label93)
   347 label *label93
-    * set *tmp162 :computeRowValues*retval
-    * set :findBestPosition:y2 *tmp162
+  348 set :findBestPosition:y2 :computeRowValues*retval
   349 op add *tmp163 :findBestPosition:y 0
   350 set :computeRowValues:x :findBestPosition:x
   351 set :computeRowValues:y *tmp163
 
   354 setaddr :computeRowValues*retaddr *label94 (h:*label94)
   355 call *label5 *invalid :computeRowValues*retval (m:*label94) (h:*label94)
   356 label *label94
-    * set *tmp164 :computeRowValues*retval
-    * set :findBestPosition:y3 *tmp164
+  357 set :findBestPosition:y3 :computeRowValues*retval
   358 op add *tmp165 :findBestPosition:y 1
   359 set :computeRowValues:x :findBestPosition:x
   360 set :computeRowValues:y *tmp165
 
   363 setaddr :computeRowValues*retaddr *label95 (h:*label95)
   364 call *label5 *invalid :computeRowValues*retval (m:*label95) (h:*label95)
   365 label *label95
-    * set *tmp166 :computeRowValues*retval
-    * set :findBestPosition:y4 *tmp166
+  366 set :findBestPosition:y4 :computeRowValues*retval
   367 op add *tmp167 :findBestPosition:y 2
   368 set :computeRowValues:x :findBestPosition:x
   369 set :computeRowValues:y *tmp167
 
   372 setaddr :computeRowValues*retaddr *label96 (h:*label96)
   373 call *label5 *invalid :computeRowValues*retval (m:*label96) (h:*label96)
   374 label *label96
-    * set *tmp168 :computeRowValues*retval
-    * set :findBestPosition:y5 *tmp168
+  375 set :findBestPosition:y5 :computeRowValues*retval
   376 set :findBestPosition:best 0
   377 set :findDrillLocationLocal:diffX 0
   378 set :findDrillLocationLocal:diffY 0
   379 op equal *tmp169 :findBestPosition:size 2
   380 jump *label97 equal *tmp169 false
-    * op add *tmp171 :findBestPosition:y1 :findBestPosition:y2
-    * set :findBestPosition:row1 *tmp171
-    * op add *tmp172 :findBestPosition:y2 :findBestPosition:y3
-    * set :findBestPosition:row2 *tmp172
-    * op add *tmp173 :findBestPosition:y3 :findBestPosition:y4
-    * set :findBestPosition:row3 *tmp173
-    * op add *tmp174 :findBestPosition:y4 :findBestPosition:y5
-    * set :findBestPosition:row4 *tmp174
+  381 op add :findBestPosition:row1 :findBestPosition:y1 :findBestPosition:y2
+  382 op add :findBestPosition:row2 :findBestPosition:y2 :findBestPosition:y3
+  383 op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
+  384 op add :findBestPosition:row4 :findBestPosition:y4 :findBestPosition:y5
   385 set :updateRowPositions2x2:dy -1.5
   386 set :updateRowPositions2x2:rowSum :findBestPosition:row1
   387 unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :updateRowPositions2x2:rowSum
 
   675 op equal *tmp239 :findBestPosition:size 3
   676 jump *label183 equal *tmp239 false
   677 op add *tmp241 :findBestPosition:y1 :findBestPosition:y2
-    * op add *tmp242 *tmp241 :findBestPosition:y3
-    * set :findBestPosition:row1.1 *tmp242
+  678 op add :findBestPosition:row1.1 *tmp241 :findBestPosition:y3
   679 op add *tmp243 :findBestPosition:y2 :findBestPosition:y3
-    * op add *tmp244 *tmp243 :findBestPosition:y4
-    * set :findBestPosition:row2.1 *tmp244
+  680 op add :findBestPosition:row2.1 *tmp243 :findBestPosition:y4
   681 op add *tmp245 :findBestPosition:y3 :findBestPosition:y4
-    * op add *tmp246 *tmp245 :findBestPosition:y5
-    * set :findBestPosition:row3.1 *tmp246
+  682 op add :findBestPosition:row3.1 *tmp245 :findBestPosition:y5
   683 set :updateRowPositions3x3:dy -1
   684 set :updateRowPositions3x3:rowSum :findBestPosition:row1.1
-    * unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 *tmp247 :updateRowPositions3x3:rowSum
+  685 unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :updateRowPositions3x3:rowSum
   686 set :updatePosition.16:dx -1
   687 set :updatePosition.16:dy :updateRowPositions3x3:dy
   688 set :updatePosition.16:value :updateRowPositions3x3:col1
 
   737 label *label185
   738 set :updateRowPositions3x3.1:dy 0
   739 set :updateRowPositions3x3.1:rowSum :findBestPosition:row2.1
-    * unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 *tmp260 :updateRowPositions3x3.1:rowSum
+  740 unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :updateRowPositions3x3.1:rowSum
   741 set :updatePosition.19:dx -1
   742 set :updatePosition.19:dy :updateRowPositions3x3.1:dy
   743 set :updatePosition.19:value :updateRowPositions3x3.1:col1
 
   792 label *label201
   793 set :updateRowPositions3x3.2:dy 1
   794 set :updateRowPositions3x3.2:rowSum :findBestPosition:row3.1
-    * unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 *tmp273 :updateRowPositions3x3.2:rowSum
+  795 unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :updateRowPositions3x3.2:rowSum
   796 set :updatePosition.22:dx -1
   797 set :updatePosition.22:dy :updateRowPositions3x3.2:dy
   798 set :updatePosition.22:value :updateRowPositions3x3.2:col1
 
   849 label *label183
   850 op add *tmp286 :findBestPosition:y1 :findBestPosition:y2
   851 op add *tmp287 *tmp286 :findBestPosition:y3
-    * op add *tmp288 *tmp287 :findBestPosition:y4
-    * set :findBestPosition:row1.2 *tmp288
+  852 op add :findBestPosition:row1.2 *tmp287 :findBestPosition:y4
   853 op add *tmp289 :findBestPosition:y2 :findBestPosition:y3
   854 op add *tmp290 *tmp289 :findBestPosition:y4
-    * op add *tmp291 *tmp290 :findBestPosition:y5
-    * set :findBestPosition:row2.2 *tmp291
+  855 op add :findBestPosition:row2.2 *tmp290 :findBestPosition:y5
   856 set :updateRowPositions4x4:dy -0.5
   857 set :updateRowPositions4x4:rowSum :findBestPosition:row1.2
-    * unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 *tmp292 *tmp293 :updateRowPositions4x4:rowSum
+  858 unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 0 0 :updateRowPositions4x4:rowSum
   859 set :updatePosition.25:dx -0.5
   860 set :updatePosition.25:dy :updateRowPositions4x4:dy
   861 set :updatePosition.25:value :updateRowPositions4x4:col1
 
   893 label *label233
   894 set :updateRowPositions4x4.1:dy 0.5
   895 set :updateRowPositions4x4.1:rowSum :findBestPosition:row2.2
-    * unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 *tmp302 *tmp303 :updateRowPositions4x4.1:rowSum
+  896 unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 0 0 :updateRowPositions4x4.1:rowSum
   897 set :updatePosition.27:dx -0.5
   898 set :updatePosition.27:dy :updateRowPositions4x4.1:dy
   899 set :updatePosition.27:value :updateRowPositions4x4.1:col1
 
   943 label *label256
   944 label *label257
   945 label *label255
-    * op mul *tmp315 :findBestPosition:best 255
-    * set *tmp158 *tmp315
+  946 op mul *tmp158 :findBestPosition:best 255
   947 jump *label91 always
   948 set *tmp158 null
   949 label *label91
   950 set :findDrillLocationLocal:score *tmp158
   951 op greaterThan *tmp316 :findDrillLocationLocal:score :findDrillLocationLocal:capacity
   952 jump *label261 equal *tmp316 false
-    * op add *tmp318 :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
-    * set :findDrillLocationLocal:dx *tmp318
-    * op add *tmp319 :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:dy *tmp319
+  953 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
+  954 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   955 set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
   956 op lessThan *tmp320 :findDrillLocationLocal:limit 1000
   957 jump *label263 equal *tmp320 false
 
   970 sensor *tmp326 :saveLocation:item @id
   971 write *tmp326 bank1 *tmp324
   972 op add .count .count 1
-    * set *tmp327 .count
-    * write :saveLocation:value bank1 *tmp327
+  973 write :saveLocation:value bank1 .count
   974 op add .count .count 1
-    * set *tmp329 .count
-    * write :saveLocation:x bank1 *tmp329
+  975 write :saveLocation:x bank1 .count
   976 op add .count .count 1
-    * set *tmp331 .count
-    * write :saveLocation:y bank1 *tmp331
+  977 write :saveLocation:y bank1 .count
   978 op add .locations .locations 1
   979 label *label267
   980 ucontrol unbind
 
   988 label *label262
   989 op greaterThan *tmp334 :findDrillLocationLocal:score :findDrillLocationLocal:best
   990 jump *label268 equal *tmp334 false
-    * op add *tmp336 :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
-    * set :findDrillLocationLocal:bestX *tmp336
-    * op add *tmp337 :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:bestY *tmp337
+  991 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
+  992 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   993 set :findDrillLocationLocal:best :findDrillLocationLocal:score
   994 jump *label269 always
   995 label *label268
 
  1001 label *label270
  1002 label *label271
  1003 set :findDrillLocationLocal:last :findDrillLocationLocal:score
-    * op mul *tmp340 :findDrillLocationLocal:diffX 1.1
-    * set :round:x *tmp340
+ 1004 op mul :round:x :findDrillLocationLocal:diffX 1.1
  1005 op add *tmp342 :round:x 0.5
-    * op floor *tmp343 *tmp342
-    * set *tmp341 *tmp343
+ 1006 op floor *tmp341 *tmp342
  1007 label *label272
  1008 op add :findDrillLocationLocal:oreX :findDrillLocationLocal:oreX *tmp341
-    * op mul *tmp344 :findDrillLocationLocal:diffY 1.1
-    * set :round.1:x *tmp344
+ 1009 op mul :round.1:x :findDrillLocationLocal:diffY 1.1
  1010 op add *tmp346 :round.1:x 0.5
-    * op floor *tmp347 *tmp346
-    * set *tmp345 *tmp347
+ 1011 op floor *tmp345 *tmp346
  1012 label *label273
  1013 op add :findDrillLocationLocal:oreY :findDrillLocationLocal:oreY *tmp345
  1014 op sub *tmp348 :findDrillLocationLocal:oreX .coreX
 
  1034 sensor *tmp357 :saveLocation.1:item @id
  1035 write *tmp357 bank1 *tmp355
  1036 op add .count .count 1
-    * set *tmp358 .count
-    * write :saveLocation.1:value bank1 *tmp358
+ 1037 write :saveLocation.1:value bank1 .count
  1038 op add .count .count 1
-    * set *tmp360 .count
-    * write :saveLocation.1:x bank1 *tmp360
+ 1039 write :saveLocation.1:x bank1 .count
  1040 op add .count .count 1
-    * set *tmp362 .count
-    * write :saveLocation.1:y bank1 *tmp362
+ 1041 write :saveLocation.1:y bank1 .count
  1042 op add .locations .locations 1
  1043 label *label276
  1044 set :debugPrintSpot:text ""
  1045 jump *label278 equal false false
-    * op sub *tmp366 @second .start
-    * set :round.2:x *tmp366
+ 1046 op sub :round.2:x @second .start
  1047 op add *tmp368 :round.2:x 0.5
-    * op floor *tmp369 *tmp368
-    * set *tmp367 *tmp369
+ 1048 op floor *tmp367 *tmp368
  1049 label *label280
  1050 remark "Time: "
  1051 remark *tmp367
  1052 remark " s\n"
-    * op mul *tmp370 4 .locationsStart
-    * set :debugPrintSpot:index *tmp370
+ 1053 op mul :debugPrintSpot:index 4 .locationsStart
  1054 set *tmp371 .locations
  1055 set :debugPrintSpot:i .locationsStart
  1056 label *label281
  1057 jump *label283 greaterThanEq :debugPrintSpot:i *tmp371
  1058 op add :debugPrintSpot:index :debugPrintSpot:index 1
-    * set *tmp372 :debugPrintSpot:index
-    * read *tmp373 bank1 *tmp372
-    * set :debugPrintSpot:size *tmp373
+ 1059 read :debugPrintSpot:size bank1 :debugPrintSpot:index
  1060 op add :debugPrintSpot:index :debugPrintSpot:index 1
-    * set *tmp374 :debugPrintSpot:index
-    * read *tmp375 bank1 *tmp374
-    * set :debugPrintSpot:x *tmp375
+ 1061 read :debugPrintSpot:x bank1 :debugPrintSpot:index
  1062 op add :debugPrintSpot:index :debugPrintSpot:index 1
-    * set *tmp376 :debugPrintSpot:index
-    * read *tmp377 bank1 *tmp376
-    * set :debugPrintSpot:y *tmp377
+ 1063 read :debugPrintSpot:y bank1 :debugPrintSpot:index
  1064 op add :debugPrintSpot:index :debugPrintSpot:index 1
  1065 remark :debugPrintSpot:x
  1066 remark ","
 
  1124 select :isBlocked:result equal type @air 0 1
  1125 set *tmp387 :isBlocked:result
  1126 label *label296
-    * op or *tmp388 *tmp384 *tmp387
-    * set :createTerrainMask:result *tmp388
+ 1127 op or :createTerrainMask:result *tmp384 *tmp387
  1128 label *label294
  1129 op sub :createTerrainMask:c :createTerrainMask:c 1
  1130 jump *label293 always
 
  1145 jump *label300 greaterThan :findPossiblePlacement:y 3
  1146 op add *tmp389 :findPossiblePlacement:y 3
  1147 op mul *tmp390 7 *tmp389
-    * op shl *tmp391 :findPossiblePlacement:placementMask *tmp390
-    * set :findPossiblePlacement:mask *tmp391
+ 1148 op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp390
  1149 set :findPossiblePlacement:x -3
  1150 label *label301
  1151 jump *label303 greaterThan :findPossiblePlacement:x 3
 
  1154 jump *label304 equal *tmp393 false
  1155 op mul *tmp395 :findPossiblePlacement:y 7
  1156 op add *tmp396 24 *tmp395
-    * op add *tmp397 *tmp396 :findPossiblePlacement:x
-    * set :findPossiblePlacement*retval *tmp397
+ 1157 op add :findPossiblePlacement*retval *tmp396 :findPossiblePlacement:x
  1158 jump *label297 always
  1159 jump *label305 always
  1160 label *label304
 
  1198 label *label311
  1199 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1200 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp404 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp404
+ 1201 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1202 op greaterThanEq *tmp405 :tryPlaceGenerator:shift 0
  1203 jump *label312 equal *tmp405 false
  1204 op add *tmp407 :tryPlaceGenerator:centerX 0.5
-    * op add *tmp408 *tmp407 :tryPlaceGenerator:c
-    * set .water2X *tmp408
+ 1205 op add .water2X *tmp407 :tryPlaceGenerator:c
  1206 op add *tmp409 :tryPlaceGenerator:centerY 0.5
-    * op add *tmp410 *tmp409 :tryPlaceGenerator:r
-    * set .water2Y *tmp410
+ 1207 op add .water2Y *tmp409 :tryPlaceGenerator:r
  1208 op add *tmp411 :tryPlaceGenerator:centerX 2.5
-    * op add *tmp412 *tmp411 :tryPlaceGenerator:c
-    * set .generatorX *tmp412
+ 1209 op add .generatorX *tmp411 :tryPlaceGenerator:c
  1210 op add *tmp413 :tryPlaceGenerator:centerY 0.5
-    * op add *tmp414 *tmp413 :tryPlaceGenerator:r
-    * set .generatorY *tmp414
+ 1211 op add .generatorY *tmp413 :tryPlaceGenerator:r
  1212 op shl *tmp415 :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:shift
  1213 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp415
  1214 jump *label313 always
 
  1222 label *label314
  1223 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1224 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp416 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp416
+ 1225 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1226 op lessThan *tmp417 :tryPlaceGenerator:shift 0
  1227 jump *label315 equal *tmp417 false
  1228 set :tryPlaceGenerator*retval false
 
  1231 label *label315
  1232 label *label316
  1233 op add *tmp419 :tryPlaceGenerator:centerX 0.5
-    * op add *tmp420 *tmp419 :tryPlaceGenerator:c
-    * set .water2X *tmp420
+ 1234 op add .water2X *tmp419 :tryPlaceGenerator:c
  1235 op add *tmp421 :tryPlaceGenerator:centerY 0.5
-    * op add *tmp422 *tmp421 :tryPlaceGenerator:r
-    * set .water2Y *tmp422
+ 1236 op add .water2Y *tmp421 :tryPlaceGenerator:r
  1237 op add *tmp423 :tryPlaceGenerator:centerX 0.5
-    * op add *tmp424 *tmp423 :tryPlaceGenerator:c
-    * set .generatorX *tmp424
+ 1238 op add .generatorX *tmp423 :tryPlaceGenerator:c
  1239 op add *tmp425 :tryPlaceGenerator:centerY 2.5
-    * op add *tmp426 *tmp425 :tryPlaceGenerator:r
-    * set .generatorY *tmp426
+ 1240 op add .generatorY *tmp425 :tryPlaceGenerator:r
  1241 op shl *tmp427 :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:shift
  1242 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp427
  1243 label *label313
 
  1250 label *label317
  1251 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1252 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp428 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp428
+ 1253 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1254 op lessThan *tmp429 :tryPlaceGenerator:shift 0
  1255 jump *label318 equal *tmp429 false
  1256 set :tryPlaceGenerator*retval false
 
  1258 jump *label319 always
  1259 label *label318
  1260 label *label319
-    * op add *tmp431 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * set .nodeX *tmp431
-    * op add *tmp432 :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * set .nodeY *tmp432
+ 1261 op add .nodeX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
+ 1262 op add .nodeY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
  1263 op shl *tmp433 1 :tryPlaceGenerator:shift
  1264 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp433
  1265 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1271 label *label320
  1272 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1273 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp434 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp434
+ 1274 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1275 op lessThan *tmp435 :tryPlaceGenerator:shift 0
  1276 jump *label321 equal *tmp435 false
  1277 set :tryPlaceGenerator*retval false
 
  1279 jump *label322 always
  1280 label *label321
  1281 label *label322
-    * op add *tmp437 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * set .panelX *tmp437
-    * op add *tmp438 :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * set .panelY *tmp438
+ 1282 op add .panelX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
+ 1283 op add .panelY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
  1284 op shl *tmp439 1 :tryPlaceGenerator:shift
  1285 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp439
  1286 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1292 label *label323
  1293 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1294 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp440 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp440
+ 1295 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1296 op lessThan *tmp441 :tryPlaceGenerator:shift 0
  1297 jump *label324 equal *tmp441 false
  1298 set :tryPlaceGenerator*retval false
 
  1300 jump *label325 always
  1301 label *label324
  1302 label *label325
-    * op add *tmp443 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * set .batteryX *tmp443
-    * op add *tmp444 :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * set .batteryY *tmp444
+ 1303 op add .batteryX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
+ 1304 op add .batteryY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
  1305 op shl *tmp445 1 :tryPlaceGenerator:shift
  1306 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp445
  1307 set :tryPlaceGenerator*retval true
 
  1324 setaddr :createTerrainMask*retaddr *label327 (h:*label327)
  1325 call *label9 *invalid :createTerrainMask*retval (m:*label327) (h:*label327)
  1326 label *label327
-    * set *tmp446 :createTerrainMask*retval
-    * set :layoutThoriumDrillAtLocation:plainTerrainMask *tmp446
+ 1327 set :layoutThoriumDrillAtLocation:plainTerrainMask :createTerrainMask*retval
  1328 set :createFixedMatrix:row0 0b0000000
  1329 set :createFixedMatrix:row1 0b0000000
  1330 set :createFixedMatrix:row2 0b0011100
 
  1344 op shl *tmp457 :createFixedMatrix:row5 35
  1345 op or *tmp458 *tmp456 *tmp457
  1346 op shl *tmp459 :createFixedMatrix:row6 42
-    * op or *tmp460 *tmp458 *tmp459
-    * set *tmp447 *tmp460
+ 1347 op or *tmp447 *tmp458 *tmp459
  1348 label *label328
-    * op or *tmp461 :layoutThoriumDrillAtLocation:plainTerrainMask *tmp447
-    * set :layoutThoriumDrillAtLocation:terrainMask *tmp461
+ 1349 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:plainTerrainMask *tmp447
  1350 set :createFixedMatrix.1:row0 0b1000001
  1351 set :createFixedMatrix.1:row1 0b0000000
  1352 set :createFixedMatrix.1:row2 0b0011100
 
  1366 op shl *tmp472 :createFixedMatrix.1:row5 35
  1367 op or *tmp473 *tmp471 *tmp472
  1368 op shl *tmp474 :createFixedMatrix.1:row6 42
-    * op or *tmp475 *tmp473 *tmp474
-    * set *tmp462 *tmp475
+ 1369 op or *tmp462 *tmp473 *tmp474
  1370 label *label329
-    * op or *tmp476 :layoutThoriumDrillAtLocation:terrainMask *tmp462
-    * set :layoutThoriumDrillAtLocation:cornersMask *tmp476
+ 1371 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp462
  1372 set :createFixedMatrix.2:row0 0b11
  1373 set :createFixedMatrix.2:row1 0b11
  1374 op shl *tmp478 :createFixedMatrix.2:row0 0
  1375 op shl *tmp479 :createFixedMatrix.2:row1 7
-    * op or *tmp480 *tmp478 *tmp479
-    * set *tmp477 *tmp480
+ 1376 op or *tmp477 *tmp478 *tmp479
  1377 label *label330
  1378 set :layoutThoriumDrillAtLocation:extractorMask *tmp477
  1379 set :printMask:text "terrainMask:"
 
  1420 label *label343
  1421 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1422 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
-    * set *tmp485 :findPossiblePlacement*retval
-    * set :layoutThoriumDrillAtLocation:shift *tmp485
+ 1423 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
  1424 op greaterThanEq *tmp486 :layoutThoriumDrillAtLocation:shift 0
  1425 jump *label344 equal *tmp486 false
  1426 op add *tmp488 .drillX 0.5
-    * op add *tmp489 *tmp488 :layoutThoriumDrillAtLocation:c
-    * set .water1X *tmp489
+ 1427 op add .water1X *tmp488 :layoutThoriumDrillAtLocation:c
  1428 op add *tmp490 .drillY 0.5
-    * op add *tmp491 *tmp490 :layoutThoriumDrillAtLocation:r
-    * set .water1Y *tmp491
+ 1429 op add .water1Y *tmp490 :layoutThoriumDrillAtLocation:r
  1430 op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:shift
  1431 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
  1432 jump *label345 always
 
  1436 set :createFixedMatrix.3:row1 0b1111
  1437 op shl *tmp493 :createFixedMatrix.3:row0 0
  1438 op shl *tmp494 :createFixedMatrix.3:row1 7
-    * op or *tmp495 *tmp493 *tmp494
-    * set *tmp492 *tmp495
+ 1439 op or *tmp492 *tmp493 *tmp494
  1440 label *label346
  1441 set :layoutThoriumDrillAtLocation:generatorHorizontal *tmp492
  1442 set :createFixedMatrix.4:row0 0b11
 
  1449 op shl *tmp500 :createFixedMatrix.4:row2 14
  1450 op or *tmp501 *tmp499 *tmp500
  1451 op shl *tmp502 :createFixedMatrix.4:row3 21
-    * op or *tmp503 *tmp501 *tmp502
-    * set *tmp496 *tmp503
+ 1452 op or *tmp496 *tmp501 *tmp502
  1453 label *label347
  1454 set :layoutThoriumDrillAtLocation:generatorVertical *tmp496
  1455 set :tryPlaceGenerator:centerX .drillX
 
  1460 setaddr :tryPlaceGenerator*retaddr *label348 (h:*label348)
  1461 call *label11 *invalid :tryPlaceGenerator*retval (m:*label348) (h:*label348)
  1462 label *label348
-    * set *tmp504 :tryPlaceGenerator*retval
-    * jump *label349 equal *tmp504 false
+ 1463 jump *label349 equal :tryPlaceGenerator*retval false
  1464 set :layoutThoriumDrillAtLocation*retval true
  1465 jump *label326 always
  1466 jump *label350 always
 
  1485 set :layoutThoriumDrillAtLocation:sy -3
  1486 setaddr *tmp506 *label357
  1487 label *label351
-    * op add *tmp507 .drillX :layoutThoriumDrillAtLocation:sx
-    * set :layoutThoriumDrillAtLocation:newX *tmp507
-    * op add *tmp508 .drillY :layoutThoriumDrillAtLocation:sy
-    * set :layoutThoriumDrillAtLocation:newY *tmp508
+ 1488 op add :layoutThoriumDrillAtLocation:newX .drillX :layoutThoriumDrillAtLocation:sx
+ 1489 op add :layoutThoriumDrillAtLocation:newY .drillY :layoutThoriumDrillAtLocation:sy
  1490 set :createTerrainMask:x :layoutThoriumDrillAtLocation:newX
  1491 set :createTerrainMask:y :layoutThoriumDrillAtLocation:newY
  1492 setaddr :createTerrainMask*retaddr *label358 (h:*label358)
  1493 call *label9 *invalid :createTerrainMask*retval (m:*label358) (h:*label358)
  1494 label *label358
-    * set *tmp509 :createTerrainMask*retval
-    * set :layoutThoriumDrillAtLocation:newTerrainMask *tmp509
+ 1495 set :layoutThoriumDrillAtLocation:newTerrainMask :createTerrainMask*retval
  1496 op sub *tmp510 0 :layoutThoriumDrillAtLocation:sx
  1497 op sub *tmp511 0 :layoutThoriumDrillAtLocation:sy
  1498 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
 
  1510 label *label360
  1511 label *label361
  1512 op mul *tmp519 7 :shiftMask:shiftY
-    * op add *tmp520 :shiftMask:shiftX *tmp519
-    * set :shiftMask:shift *tmp520
+ 1513 op add :shiftMask:shift :shiftMask:shiftX *tmp519
  1514 op greaterThan *tmp521 :shiftMask:shift 0
  1515 jump *label362 equal *tmp521 false
-    * op shr *tmp523 562949953421311 :shiftMask:shift
-    * set :shiftMask:clearMask *tmp523
+ 1516 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
  1517 op and *tmp524 :shiftMask:mask :shiftMask:clearMask
-    * op shl *tmp525 *tmp524 :shiftMask:shift
-    * set :shiftMask:mask *tmp525
+ 1518 op shl :shiftMask:mask *tmp524 :shiftMask:shift
  1519 jump *label363 always
  1520 label *label362
  1521 op sub *tmp526 0 :shiftMask:shift
 
  1525 jump *label364 equal *tmp527 false
  1526 op abs *tmp529 :shiftMask:shiftX
  1527 op sub *tmp530 7 *tmp529
-    * op shr *tmp531 0b1111111 *tmp530
-    * set :shiftMask:keep *tmp531
+ 1528 op shr :shiftMask:keep 0b1111111 *tmp530
  1529 op greaterThan *tmp532 :shiftMask:shiftX 0
  1530 jump *label366 equal *tmp532 false
  1531 op abs *tmp534 :shiftMask:shiftX
 
  1549 set *tmp512 null
  1550 label *label359
  1551 set :layoutThoriumDrillAtLocation:shiftedMask *tmp512
-    * op or *tmp539 :layoutThoriumDrillAtLocation:newTerrainMask :layoutThoriumDrillAtLocation:shiftedMask
-    * set :layoutThoriumDrillAtLocation:combinedMask *tmp539
+ 1552 op or :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:newTerrainMask :layoutThoriumDrillAtLocation:shiftedMask
  1553 op add *tmp540 .drillX :layoutThoriumDrillAtLocation:sx
  1554 op add *tmp541 .drillY :layoutThoriumDrillAtLocation:sy
  1555 set :tryPlaceGenerator:centerX *tmp540
 
  1560 setaddr :tryPlaceGenerator*retaddr *label368 (h:*label368)
  1561 call *label11 *invalid :tryPlaceGenerator*retval (m:*label368) (h:*label368)
  1562 label *label368
-    * set *tmp542 :tryPlaceGenerator*retval
-    * jump *label369 equal *tmp542 false
+ 1563 jump *label369 equal :tryPlaceGenerator*retval false
  1564 set :layoutThoriumDrillAtLocation*retval true
  1565 jump *label326 always
  1566 jump *label370 always

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-2 instructions):
 
   141 set :findDrillLocationLocal:oreX 0
   142 set :findDrillLocationLocal:oreY 0
   143 label *label48
-    * jump *label50 equal true false
   144 set :findDrillLocationLocal:best 0
   145 set :findDrillLocationLocal:bestX :findDrillLocationLocal:x
   146 set :findDrillLocationLocal:bestY :findDrillLocationLocal:y
 
   322 label *label83
   323 set :findDrillLocationLocal:last 0
   324 label *label88
-    * jump *label90 equal true false
   325 set :findBestPosition:x :findDrillLocationLocal:oreX
   326 set :findBestPosition:y :findDrillLocationLocal:oreY
   327 set :findBestPosition:ore :findDrillLocationLocal:ore
 
   929 label *label244
   930 label *label184
   931 label *label98
-    * jump *label256 equal false false
+  932 jump *label256 always
   933 printflush message1
   934 control enabled switch1 true
   935 label *label258
 
  1040 op add .locations .locations 1
  1041 label *label276
  1042 set :debugPrintSpot:text ""
-    * jump *label278 equal false false
+ 1043 jump *label278 always
  1044 op sub :round.2:x @second .start
  1045 op add *tmp368 :round.2:x 0.5
  1046 op floor *tmp367 *tmp368
 
  1390 call *label13 *invalid :printMask*retval (m:*label333) (h:*label333)
  1391 label *label333
  1392 set :debugStop:format ""
-    * jump *label335 equal false false
+ 1393 jump *label335 always
  1394 print :debugStop:format
-    * jump *label338 equal false false
+ 1395 jump *label338 always
  1396 printflush message1
  1397 control enabled switch1 true
  1398 label *label340
 
  1622 jump *label15 always
  1623 end
  1624 label *label13
-    * jump *label379 equal false false
+ 1625 jump *label379 always
  1626 print :printMask:text
  1627 print "\n"
  1628 op sub :printMask:r 7 1

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-95 instructions):
 
    60 set *tmp9 :spotValue.4:result
    61 label *label21
    62 set :computeRowValues:x5 *tmp9
-    * op equal *tmp10 :computeRowValues:size 2
-    * jump *label22 equal *tmp10 false
+   63 jump *label22 notEqual :computeRowValues:size 2
    64 op add *tmp12 :computeRowValues:x1 :computeRowValues:x2
    65 op add *tmp13 :computeRowValues:x2 :computeRowValues:x3
    66 op add *tmp14 :computeRowValues:x3 :computeRowValues:x4
 
    70 set *tmp11 null
    71 jump *label23 always
    72 label *label22
-    * op equal *tmp17 :computeRowValues:size 3
-    * jump *label24 equal *tmp17 false
+   73 jump *label24 notEqual :computeRowValues:size 3
    74 op add *tmp19 :computeRowValues:x1 :computeRowValues:x2
    75 op add *tmp20 *tmp19 :computeRowValues:x3
    76 op add *tmp21 :computeRowValues:x2 :computeRowValues:x3
 
   125 set :moveTo.3:radius 6
   126 label *label45
   127 ucontrol within :moveTo.3:x :moveTo.3:y :moveTo.3:radius *tmp73
-    * op equal *tmp74 *tmp73 false
-    * jump *label47 equal *tmp74 false
+  128 jump *label47 notEqual *tmp73 false
   129 op sub *tmp75 :moveTo.3:radius 0.5
   130 ucontrol approach :moveTo.3:x :moveTo.3:y *tmp75
   131 label *label46
 
   156 op max .angle .angle @pi
   157 op mul .mapProgress .angle .angle
   158 label *label52
-    * op lessThan *tmp87 :locateOreAway:distance :locateOreAway:distanceLimit
-    * jump *label54 equal *tmp87 false
+  159 jump *label54 greaterThanEq :locateOreAway:distance :locateOreAway:distanceLimit
   160 op div :locateOreAway:a .angle @degToRad
   161 op sin *tmp89 :locateOreAway:a
   162 op mul *tmp90 *tmp89 :locateOreAway:distance
 
   185 set :moveTo.4:radius 5
   186 label *label58
   187 ucontrol within :moveTo.4:x :moveTo.4:y :moveTo.4:radius *tmp103
-    * op equal *tmp104 *tmp103 false
-    * jump *label60 equal *tmp104 false
+  188 jump *label60 notEqual *tmp103 false
   189 op sub *tmp105 :moveTo.4:radius 0.5
   190 ucontrol approach :moveTo.4:x :moveTo.4:y *tmp105
   191 label *label59
 
   197 op mul .mapProgress .angle .angle
   198 op mul :locateOreAway:distance 3.8197185279121366 .angle
   199 ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp109 0
-    * op equal *tmp111 *tmp109 false
-    * jump *label61 equal *tmp111 false
+  200 jump *label61 notEqual *tmp109 false
   201 set *tmp83 false
   202 jump *label51 always
   203 jump *label62 always
 
   211 op sub *tmp118 :locateOreAway:x :locateOreAway:lx
   212 op sub *tmp119 :locateOreAway:y :locateOreAway:ly
   213 op len :locateOreAway:unitDist *tmp118 *tmp119
-    * op equal *tmp121 :locateOreAway:lastX :locateOreAway:x
-    * jump *label63 equal *tmp121 false
-    * op equal *tmp123 :locateOreAway:lastY :locateOreAway:y
-    * jump *label65 equal *tmp123 false
+  214 jump *label63 notEqual :locateOreAway:lastX :locateOreAway:x
+  215 jump *label65 notEqual :locateOreAway:lastY :locateOreAway:y
   216 jump *label53 always
   217 jump *label66 always
   218 label *label65
 
   220 jump *label64 always
   221 label *label63
   222 label *label64
-    * op greaterThanEq *tmp125 :locateOreAway:coreDist 7
-    * jump *label67 equal *tmp125 false
-    * op lessThan *tmp127 :locateOreAway:unitDist :locateOreAway:distance
-    * jump *label69 equal *tmp127 false
+  223 jump *label67 lessThan :locateOreAway:coreDist 7
+  224 jump *label69 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
   225 set :locateOreAway:lastX :locateOreAway:x
   226 set :locateOreAway:lastY :locateOreAway:y
   227 set :visited:x :locateOreAway:x
 
   238 op sub *tmp138 :visited:x :visited:lx
   239 op sub *tmp139 :visited:y :visited:ly
   240 op len *tmp140 *tmp138 *tmp139
-    * op lessThan *tmp141 *tmp140 7
-    * jump *label75 equal *tmp141 false
+  241 jump *label75 greaterThanEq *tmp140 7
   242 set *tmp129 true
   243 jump *label71 always
   244 jump *label76 always
 
   252 jump *label71 always
   253 set *tmp129 null
   254 label *label71
-    * op equal *tmp143 *tmp129 false
-    * jump *label77 equal *tmp143 false
+  255 jump *label77 notEqual *tmp129 false
   256 op div *tmp145 7.639437055824273 :locateOreAway:distance
   257 op add .angle .angle *tmp145
   258 op mul .mapProgress .angle .angle
 
   277 label *label51
   278 set :findDrillLocationLocal:oreX :locateOreAway:x
   279 set :findDrillLocationLocal:oreY :locateOreAway:y
-    * op equal *tmp147 *tmp83 false
-    * jump *label79 equal *tmp147 false
+  280 jump *label79 notEqual *tmp83 false
   281 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   282 jump *label42 always
   283 jump *label80 always
   284 label *label79
   285 label *label80
-    * op greaterThanEq *tmp150 :findDrillLocationLocal:limit 1000
-    * jump *label81 equal *tmp150 false
+  286 jump *label81 lessThan :findDrillLocationLocal:limit 1000
   287 op add .mapSpots .mapSpots 1
   288 jump *label82 always
   289 label *label81
 
   297 set :moveTo.6:radius 6
   298 label *label85
   299 ucontrol within :moveTo.6:x :moveTo.6:y :moveTo.6:radius *tmp155
-    * op equal *tmp156 *tmp155 false
-    * jump *label87 equal *tmp156 false
+  300 jump *label87 notEqual *tmp155 false
   301 op sub *tmp157 :moveTo.6:radius 0.5
   302 ucontrol approach :moveTo.6:x :moveTo.6:y *tmp157
   303 label *label86
 
   359 set :findBestPosition:best 0
   360 set :findDrillLocationLocal:diffX 0
   361 set :findDrillLocationLocal:diffY 0
-    * op equal *tmp169 :findBestPosition:size 2
-    * jump *label97 equal *tmp169 false
+  362 jump *label97 notEqual :findBestPosition:size 2
   363 op add :findBestPosition:row1 :findBestPosition:y1 :findBestPosition:y2
   364 op add :findBestPosition:row2 :findBestPosition:y2 :findBestPosition:y3
   365 op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
 
   370 set :updatePosition:dx -1.5
   371 set :updatePosition:dy :updateRowPositions2x2:dy
   372 set :updatePosition:value :updateRowPositions2x2:col1
-    * op lessThan *tmp175 :updatePosition:value 0.0784313725490196
-    * jump *label101 equal *tmp175 false
-    * op greaterThan *tmp177 :updatePosition:value :findBestPosition:best
-    * jump *label103 equal *tmp177 false
+  373 jump *label101 greaterThanEq :updatePosition:value 0.0784313725490196
+  374 jump *label103 lessThanEq :updatePosition:value :findBestPosition:best
   375 set :findDrillLocationLocal:diffX :updatePosition:dx
   376 set :findDrillLocationLocal:diffY :updatePosition:dy
   377 set :findBestPosition:best :updatePosition:value
 
   385 set :updatePosition.1:dx -0.5
   386 set :updatePosition.1:dy :updateRowPositions2x2:dy
   387 set :updatePosition.1:value :updateRowPositions2x2:col2
-    * op lessThan *tmp179 :updatePosition.1:value 0.0784313725490196
-    * jump *label106 equal *tmp179 false
-    * op greaterThan *tmp181 :updatePosition.1:value :findBestPosition:best
-    * jump *label108 equal *tmp181 false
+  388 jump *label106 greaterThanEq :updatePosition.1:value 0.0784313725490196
+  389 jump *label108 lessThanEq :updatePosition.1:value :findBestPosition:best
   390 set :findDrillLocationLocal:diffX :updatePosition.1:dx
   391 set :findDrillLocationLocal:diffY :updatePosition.1:dy
   392 set :findBestPosition:best :updatePosition.1:value
 
   400 set :updatePosition.2:dx 0.5
   401 set :updatePosition.2:dy :updateRowPositions2x2:dy
   402 set :updatePosition.2:value :updateRowPositions2x2:col3
-    * op lessThan *tmp183 :updatePosition.2:value 0.0784313725490196
-    * jump *label111 equal *tmp183 false
-    * op greaterThan *tmp185 :updatePosition.2:value :findBestPosition:best
-    * jump *label113 equal *tmp185 false
+  403 jump *label111 greaterThanEq :updatePosition.2:value 0.0784313725490196
+  404 jump *label113 lessThanEq :updatePosition.2:value :findBestPosition:best
   405 set :findDrillLocationLocal:diffX :updatePosition.2:dx
   406 set :findDrillLocationLocal:diffY :updatePosition.2:dy
   407 set :findBestPosition:best :updatePosition.2:value
 
   415 set :updatePosition.3:dx 1.5
   416 set :updatePosition.3:dy :updateRowPositions2x2:dy
   417 set :updatePosition.3:value :updateRowPositions2x2:col4
-    * op lessThan *tmp187 :updatePosition.3:value 0.0784313725490196
-    * jump *label116 equal *tmp187 false
-    * op greaterThan *tmp189 :updatePosition.3:value :findBestPosition:best
-    * jump *label118 equal *tmp189 false
+  418 jump *label116 greaterThanEq :updatePosition.3:value 0.0784313725490196
+  419 jump *label118 lessThanEq :updatePosition.3:value :findBestPosition:best
   420 set :findDrillLocationLocal:diffX :updatePosition.3:dx
   421 set :findDrillLocationLocal:diffY :updatePosition.3:dy
   422 set :findBestPosition:best :updatePosition.3:value
 
   434 set :updatePosition.4:dx -1.5
   435 set :updatePosition.4:dy :updateRowPositions2x2.1:dy
   436 set :updatePosition.4:value :updateRowPositions2x2.1:col1
-    * op lessThan *tmp191 :updatePosition.4:value 0.0784313725490196
-    * jump *label122 equal *tmp191 false
-    * op greaterThan *tmp193 :updatePosition.4:value :findBestPosition:best
-    * jump *label124 equal *tmp193 false
+  437 jump *label122 greaterThanEq :updatePosition.4:value 0.0784313725490196
+  438 jump *label124 lessThanEq :updatePosition.4:value :findBestPosition:best
   439 set :findDrillLocationLocal:diffX :updatePosition.4:dx
   440 set :findDrillLocationLocal:diffY :updatePosition.4:dy
   441 set :findBestPosition:best :updatePosition.4:value
 
   449 set :updatePosition.5:dx -0.5
   450 set :updatePosition.5:dy :updateRowPositions2x2.1:dy
   451 set :updatePosition.5:value :updateRowPositions2x2.1:col2
-    * op lessThan *tmp195 :updatePosition.5:value 0.0784313725490196
-    * jump *label127 equal *tmp195 false
-    * op greaterThan *tmp197 :updatePosition.5:value :findBestPosition:best
-    * jump *label129 equal *tmp197 false
+  452 jump *label127 greaterThanEq :updatePosition.5:value 0.0784313725490196
+  453 jump *label129 lessThanEq :updatePosition.5:value :findBestPosition:best
   454 set :findDrillLocationLocal:diffX :updatePosition.5:dx
   455 set :findDrillLocationLocal:diffY :updatePosition.5:dy
   456 set :findBestPosition:best :updatePosition.5:value
 
   464 set :updatePosition.6:dx 0.5
   465 set :updatePosition.6:dy :updateRowPositions2x2.1:dy
   466 set :updatePosition.6:value :updateRowPositions2x2.1:col3
-    * op lessThan *tmp199 :updatePosition.6:value 0.0784313725490196
-    * jump *label132 equal *tmp199 false
-    * op greaterThan *tmp201 :updatePosition.6:value :findBestPosition:best
-    * jump *label134 equal *tmp201 false
+  467 jump *label132 greaterThanEq :updatePosition.6:value 0.0784313725490196
+  468 jump *label134 lessThanEq :updatePosition.6:value :findBestPosition:best
   469 set :findDrillLocationLocal:diffX :updatePosition.6:dx
   470 set :findDrillLocationLocal:diffY :updatePosition.6:dy
   471 set :findBestPosition:best :updatePosition.6:value
 
   479 set :updatePosition.7:dx 1.5
   480 set :updatePosition.7:dy :updateRowPositions2x2.1:dy
   481 set :updatePosition.7:value :updateRowPositions2x2.1:col4
-    * op lessThan *tmp203 :updatePosition.7:value 0.0784313725490196
-    * jump *label137 equal *tmp203 false
-    * op greaterThan *tmp205 :updatePosition.7:value :findBestPosition:best
-    * jump *label139 equal *tmp205 false
+  482 jump *label137 greaterThanEq :updatePosition.7:value 0.0784313725490196
+  483 jump *label139 lessThanEq :updatePosition.7:value :findBestPosition:best
   484 set :findDrillLocationLocal:diffX :updatePosition.7:dx
   485 set :findDrillLocationLocal:diffY :updatePosition.7:dy
   486 set :findBestPosition:best :updatePosition.7:value
 
   498 set :updatePosition.8:dx -1.5
   499 set :updatePosition.8:dy :updateRowPositions2x2.2:dy
   500 set :updatePosition.8:value :updateRowPositions2x2.2:col1
-    * op lessThan *tmp207 :updatePosition.8:value 0.0784313725490196
-    * jump *label143 equal *tmp207 false
-    * op greaterThan *tmp209 :updatePosition.8:value :findBestPosition:best
-    * jump *label145 equal *tmp209 false
+  501 jump *label143 greaterThanEq :updatePosition.8:value 0.0784313725490196
+  502 jump *label145 lessThanEq :updatePosition.8:value :findBestPosition:best
   503 set :findDrillLocationLocal:diffX :updatePosition.8:dx
   504 set :findDrillLocationLocal:diffY :updatePosition.8:dy
   505 set :findBestPosition:best :updatePosition.8:value
 
   513 set :updatePosition.9:dx -0.5
   514 set :updatePosition.9:dy :updateRowPositions2x2.2:dy
   515 set :updatePosition.9:value :updateRowPositions2x2.2:col2
-    * op lessThan *tmp211 :updatePosition.9:value 0.0784313725490196
-    * jump *label148 equal *tmp211 false
-    * op greaterThan *tmp213 :updatePosition.9:value :findBestPosition:best
-    * jump *label150 equal *tmp213 false
+  516 jump *label148 greaterThanEq :updatePosition.9:value 0.0784313725490196
+  517 jump *label150 lessThanEq :updatePosition.9:value :findBestPosition:best
   518 set :findDrillLocationLocal:diffX :updatePosition.9:dx
   519 set :findDrillLocationLocal:diffY :updatePosition.9:dy
   520 set :findBestPosition:best :updatePosition.9:value
 
   528 set :updatePosition.10:dx 0.5
   529 set :updatePosition.10:dy :updateRowPositions2x2.2:dy
   530 set :updatePosition.10:value :updateRowPositions2x2.2:col3
-    * op lessThan *tmp215 :updatePosition.10:value 0.0784313725490196
-    * jump *label153 equal *tmp215 false
-    * op greaterThan *tmp217 :updatePosition.10:value :findBestPosition:best
-    * jump *label155 equal *tmp217 false
+  531 jump *label153 greaterThanEq :updatePosition.10:value 0.0784313725490196
+  532 jump *label155 lessThanEq :updatePosition.10:value :findBestPosition:best
   533 set :findDrillLocationLocal:diffX :updatePosition.10:dx
   534 set :findDrillLocationLocal:diffY :updatePosition.10:dy
   535 set :findBestPosition:best :updatePosition.10:value
 
   543 set :updatePosition.11:dx 1.5
   544 set :updatePosition.11:dy :updateRowPositions2x2.2:dy
   545 set :updatePosition.11:value :updateRowPositions2x2.2:col4
-    * op lessThan *tmp219 :updatePosition.11:value 0.0784313725490196
-    * jump *label158 equal *tmp219 false
-    * op greaterThan *tmp221 :updatePosition.11:value :findBestPosition:best
-    * jump *label160 equal *tmp221 false
+  546 jump *label158 greaterThanEq :updatePosition.11:value 0.0784313725490196
+  547 jump *label160 lessThanEq :updatePosition.11:value :findBestPosition:best
   548 set :findDrillLocationLocal:diffX :updatePosition.11:dx
   549 set :findDrillLocationLocal:diffY :updatePosition.11:dy
   550 set :findBestPosition:best :updatePosition.11:value
 
   562 set :updatePosition.12:dx -1.5
   563 set :updatePosition.12:dy :updateRowPositions2x2.3:dy
   564 set :updatePosition.12:value :updateRowPositions2x2.3:col1
-    * op lessThan *tmp223 :updatePosition.12:value 0.0784313725490196
-    * jump *label164 equal *tmp223 false
-    * op greaterThan *tmp225 :updatePosition.12:value :findBestPosition:best
-    * jump *label166 equal *tmp225 false
+  565 jump *label164 greaterThanEq :updatePosition.12:value 0.0784313725490196
+  566 jump *label166 lessThanEq :updatePosition.12:value :findBestPosition:best
   567 set :findDrillLocationLocal:diffX :updatePosition.12:dx
   568 set :findDrillLocationLocal:diffY :updatePosition.12:dy
   569 set :findBestPosition:best :updatePosition.12:value
 
   577 set :updatePosition.13:dx -0.5
   578 set :updatePosition.13:dy :updateRowPositions2x2.3:dy
   579 set :updatePosition.13:value :updateRowPositions2x2.3:col2
-    * op lessThan *tmp227 :updatePosition.13:value 0.0784313725490196
-    * jump *label169 equal *tmp227 false
-    * op greaterThan *tmp229 :updatePosition.13:value :findBestPosition:best
-    * jump *label171 equal *tmp229 false
+  580 jump *label169 greaterThanEq :updatePosition.13:value 0.0784313725490196
+  581 jump *label171 lessThanEq :updatePosition.13:value :findBestPosition:best
   582 set :findDrillLocationLocal:diffX :updatePosition.13:dx
   583 set :findDrillLocationLocal:diffY :updatePosition.13:dy
   584 set :findBestPosition:best :updatePosition.13:value
 
   592 set :updatePosition.14:dx 0.5
   593 set :updatePosition.14:dy :updateRowPositions2x2.3:dy
   594 set :updatePosition.14:value :updateRowPositions2x2.3:col3
-    * op lessThan *tmp231 :updatePosition.14:value 0.0784313725490196
-    * jump *label174 equal *tmp231 false
-    * op greaterThan *tmp233 :updatePosition.14:value :findBestPosition:best
-    * jump *label176 equal *tmp233 false
+  595 jump *label174 greaterThanEq :updatePosition.14:value 0.0784313725490196
+  596 jump *label176 lessThanEq :updatePosition.14:value :findBestPosition:best
   597 set :findDrillLocationLocal:diffX :updatePosition.14:dx
   598 set :findDrillLocationLocal:diffY :updatePosition.14:dy
   599 set :findBestPosition:best :updatePosition.14:value
 
   607 set :updatePosition.15:dx 1.5
   608 set :updatePosition.15:dy :updateRowPositions2x2.3:dy
   609 set :updatePosition.15:value :updateRowPositions2x2.3:col4
-    * op lessThan *tmp235 :updatePosition.15:value 0.0784313725490196
-    * jump *label179 equal *tmp235 false
-    * op greaterThan *tmp237 :updatePosition.15:value :findBestPosition:best
-    * jump *label181 equal *tmp237 false
+  610 jump *label179 greaterThanEq :updatePosition.15:value 0.0784313725490196
+  611 jump *label181 lessThanEq :updatePosition.15:value :findBestPosition:best
   612 set :findDrillLocationLocal:diffX :updatePosition.15:dx
   613 set :findDrillLocationLocal:diffY :updatePosition.15:dy
   614 set :findBestPosition:best :updatePosition.15:value
 
   622 label *label162
   623 jump *label98 always
   624 label *label97
-    * op equal *tmp239 :findBestPosition:size 3
-    * jump *label183 equal *tmp239 false
+  625 jump *label183 notEqual :findBestPosition:size 3
   626 op add *tmp241 :findBestPosition:y1 :findBestPosition:y2
   627 op add :findBestPosition:row1.1 *tmp241 :findBestPosition:y3
   628 op add *tmp243 :findBestPosition:y2 :findBestPosition:y3
 
   635 set :updatePosition.16:dx -1
   636 set :updatePosition.16:dy :updateRowPositions3x3:dy
   637 set :updatePosition.16:value :updateRowPositions3x3:col1
-    * op lessThan *tmp248 :updatePosition.16:value 0.0784313725490196
-    * jump *label187 equal *tmp248 false
-    * op greaterThan *tmp250 :updatePosition.16:value :findBestPosition:best
-    * jump *label189 equal *tmp250 false
+  638 jump *label187 greaterThanEq :updatePosition.16:value 0.0784313725490196
+  639 jump *label189 lessThanEq :updatePosition.16:value :findBestPosition:best
   640 set :findDrillLocationLocal:diffX :updatePosition.16:dx
   641 set :findDrillLocationLocal:diffY :updatePosition.16:dy
   642 set :findBestPosition:best :updatePosition.16:value
 
   650 set :updatePosition.17:dx 0
   651 set :updatePosition.17:dy :updateRowPositions3x3:dy
   652 set :updatePosition.17:value :updateRowPositions3x3:col2
-    * op lessThan *tmp252 :updatePosition.17:value 0.0784313725490196
-    * jump *label192 equal *tmp252 false
-    * op greaterThan *tmp254 :updatePosition.17:value :findBestPosition:best
-    * jump *label194 equal *tmp254 false
+  653 jump *label192 greaterThanEq :updatePosition.17:value 0.0784313725490196
+  654 jump *label194 lessThanEq :updatePosition.17:value :findBestPosition:best
   655 set :findDrillLocationLocal:diffX :updatePosition.17:dx
   656 set :findDrillLocationLocal:diffY :updatePosition.17:dy
   657 set :findBestPosition:best :updatePosition.17:value
 
   665 set :updatePosition.18:dx 1
   666 set :updatePosition.18:dy :updateRowPositions3x3:dy
   667 set :updatePosition.18:value :updateRowPositions3x3:col3
-    * op lessThan *tmp256 :updatePosition.18:value 0.0784313725490196
-    * jump *label197 equal *tmp256 false
-    * op greaterThan *tmp258 :updatePosition.18:value :findBestPosition:best
-    * jump *label199 equal *tmp258 false
+  668 jump *label197 greaterThanEq :updatePosition.18:value 0.0784313725490196
+  669 jump *label199 lessThanEq :updatePosition.18:value :findBestPosition:best
   670 set :findDrillLocationLocal:diffX :updatePosition.18:dx
   671 set :findDrillLocationLocal:diffY :updatePosition.18:dy
   672 set :findBestPosition:best :updatePosition.18:value
 
   684 set :updatePosition.19:dx -1
   685 set :updatePosition.19:dy :updateRowPositions3x3.1:dy
   686 set :updatePosition.19:value :updateRowPositions3x3.1:col1
-    * op lessThan *tmp261 :updatePosition.19:value 0.0784313725490196
-    * jump *label203 equal *tmp261 false
-    * op greaterThan *tmp263 :updatePosition.19:value :findBestPosition:best
-    * jump *label205 equal *tmp263 false
+  687 jump *label203 greaterThanEq :updatePosition.19:value 0.0784313725490196
+  688 jump *label205 lessThanEq :updatePosition.19:value :findBestPosition:best
   689 set :findDrillLocationLocal:diffX :updatePosition.19:dx
   690 set :findDrillLocationLocal:diffY :updatePosition.19:dy
   691 set :findBestPosition:best :updatePosition.19:value
 
   699 set :updatePosition.20:dx 0
   700 set :updatePosition.20:dy :updateRowPositions3x3.1:dy
   701 set :updatePosition.20:value :updateRowPositions3x3.1:col2
-    * op lessThan *tmp265 :updatePosition.20:value 0.0784313725490196
-    * jump *label208 equal *tmp265 false
-    * op greaterThan *tmp267 :updatePosition.20:value :findBestPosition:best
-    * jump *label210 equal *tmp267 false
+  702 jump *label208 greaterThanEq :updatePosition.20:value 0.0784313725490196
+  703 jump *label210 lessThanEq :updatePosition.20:value :findBestPosition:best
   704 set :findDrillLocationLocal:diffX :updatePosition.20:dx
   705 set :findDrillLocationLocal:diffY :updatePosition.20:dy
   706 set :findBestPosition:best :updatePosition.20:value
 
   714 set :updatePosition.21:dx 1
   715 set :updatePosition.21:dy :updateRowPositions3x3.1:dy
   716 set :updatePosition.21:value :updateRowPositions3x3.1:col3
-    * op lessThan *tmp269 :updatePosition.21:value 0.0784313725490196
-    * jump *label213 equal *tmp269 false
-    * op greaterThan *tmp271 :updatePosition.21:value :findBestPosition:best
-    * jump *label215 equal *tmp271 false
+  717 jump *label213 greaterThanEq :updatePosition.21:value 0.0784313725490196
+  718 jump *label215 lessThanEq :updatePosition.21:value :findBestPosition:best
   719 set :findDrillLocationLocal:diffX :updatePosition.21:dx
   720 set :findDrillLocationLocal:diffY :updatePosition.21:dy
   721 set :findBestPosition:best :updatePosition.21:value
 
   733 set :updatePosition.22:dx -1
   734 set :updatePosition.22:dy :updateRowPositions3x3.2:dy
   735 set :updatePosition.22:value :updateRowPositions3x3.2:col1
-    * op lessThan *tmp274 :updatePosition.22:value 0.0784313725490196
-    * jump *label219 equal *tmp274 false
-    * op greaterThan *tmp276 :updatePosition.22:value :findBestPosition:best
-    * jump *label221 equal *tmp276 false
+  736 jump *label219 greaterThanEq :updatePosition.22:value 0.0784313725490196
+  737 jump *label221 lessThanEq :updatePosition.22:value :findBestPosition:best
   738 set :findDrillLocationLocal:diffX :updatePosition.22:dx
   739 set :findDrillLocationLocal:diffY :updatePosition.22:dy
   740 set :findBestPosition:best :updatePosition.22:value
 
   748 set :updatePosition.23:dx 0
   749 set :updatePosition.23:dy :updateRowPositions3x3.2:dy
   750 set :updatePosition.23:value :updateRowPositions3x3.2:col2
-    * op lessThan *tmp278 :updatePosition.23:value 0.0784313725490196
-    * jump *label224 equal *tmp278 false
-    * op greaterThan *tmp280 :updatePosition.23:value :findBestPosition:best
-    * jump *label226 equal *tmp280 false
+  751 jump *label224 greaterThanEq :updatePosition.23:value 0.0784313725490196
+  752 jump *label226 lessThanEq :updatePosition.23:value :findBestPosition:best
   753 set :findDrillLocationLocal:diffX :updatePosition.23:dx
   754 set :findDrillLocationLocal:diffY :updatePosition.23:dy
   755 set :findBestPosition:best :updatePosition.23:value
 
   763 set :updatePosition.24:dx 1
   764 set :updatePosition.24:dy :updateRowPositions3x3.2:dy
   765 set :updatePosition.24:value :updateRowPositions3x3.2:col3
-    * op lessThan *tmp282 :updatePosition.24:value 0.0784313725490196
-    * jump *label229 equal *tmp282 false
-    * op greaterThan *tmp284 :updatePosition.24:value :findBestPosition:best
-    * jump *label231 equal *tmp284 false
+  766 jump *label229 greaterThanEq :updatePosition.24:value 0.0784313725490196
+  767 jump *label231 lessThanEq :updatePosition.24:value :findBestPosition:best
   768 set :findDrillLocationLocal:diffX :updatePosition.24:dx
   769 set :findDrillLocationLocal:diffY :updatePosition.24:dy
   770 set :findBestPosition:best :updatePosition.24:value
 
   790 set :updatePosition.25:dx -0.5
   791 set :updatePosition.25:dy :updateRowPositions4x4:dy
   792 set :updatePosition.25:value :updateRowPositions4x4:col1
-    * op lessThan *tmp294 :updatePosition.25:value 0.0784313725490196
-    * jump *label235 equal *tmp294 false
-    * op greaterThan *tmp296 :updatePosition.25:value :findBestPosition:best
-    * jump *label237 equal *tmp296 false
+  793 jump *label235 greaterThanEq :updatePosition.25:value 0.0784313725490196
+  794 jump *label237 lessThanEq :updatePosition.25:value :findBestPosition:best
   795 set :findDrillLocationLocal:diffX :updatePosition.25:dx
   796 set :findDrillLocationLocal:diffY :updatePosition.25:dy
   797 set :findBestPosition:best :updatePosition.25:value
 
   805 set :updatePosition.26:dx 0.5
   806 set :updatePosition.26:dy :updateRowPositions4x4:dy
   807 set :updatePosition.26:value :updateRowPositions4x4:col2
-    * op lessThan *tmp298 :updatePosition.26:value 0.0784313725490196
-    * jump *label240 equal *tmp298 false
-    * op greaterThan *tmp300 :updatePosition.26:value :findBestPosition:best
-    * jump *label242 equal *tmp300 false
+  808 jump *label240 greaterThanEq :updatePosition.26:value 0.0784313725490196
+  809 jump *label242 lessThanEq :updatePosition.26:value :findBestPosition:best
   810 set :findDrillLocationLocal:diffX :updatePosition.26:dx
   811 set :findDrillLocationLocal:diffY :updatePosition.26:dy
   812 set :findBestPosition:best :updatePosition.26:value
 
   824 set :updatePosition.27:dx -0.5
   825 set :updatePosition.27:dy :updateRowPositions4x4.1:dy
   826 set :updatePosition.27:value :updateRowPositions4x4.1:col1
-    * op lessThan *tmp304 :updatePosition.27:value 0.0784313725490196
-    * jump *label246 equal *tmp304 false
-    * op greaterThan *tmp306 :updatePosition.27:value :findBestPosition:best
-    * jump *label248 equal *tmp306 false
+  827 jump *label246 greaterThanEq :updatePosition.27:value 0.0784313725490196
+  828 jump *label248 lessThanEq :updatePosition.27:value :findBestPosition:best
   829 set :findDrillLocationLocal:diffX :updatePosition.27:dx
   830 set :findDrillLocationLocal:diffY :updatePosition.27:dy
   831 set :findBestPosition:best :updatePosition.27:value
 
   839 set :updatePosition.28:dx 0.5
   840 set :updatePosition.28:dy :updateRowPositions4x4.1:dy
   841 set :updatePosition.28:value :updateRowPositions4x4.1:col2
-    * op lessThan *tmp308 :updatePosition.28:value 0.0784313725490196
-    * jump *label251 equal *tmp308 false
-    * op greaterThan *tmp310 :updatePosition.28:value :findBestPosition:best
-    * jump *label253 equal *tmp310 false
+  842 jump *label251 greaterThanEq :updatePosition.28:value 0.0784313725490196
+  843 jump *label253 lessThanEq :updatePosition.28:value :findBestPosition:best
   844 set :findDrillLocationLocal:diffX :updatePosition.28:dx
   845 set :findDrillLocationLocal:diffY :updatePosition.28:dy
   846 set :findBestPosition:best :updatePosition.28:value
 
   871 set *tmp158 null
   872 label *label91
   873 set :findDrillLocationLocal:score *tmp158
-    * op greaterThan *tmp316 :findDrillLocationLocal:score :findDrillLocationLocal:capacity
-    * jump *label261 equal *tmp316 false
+  874 jump *label261 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:capacity
   875 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   876 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   877 set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
-    * op lessThan *tmp320 :findDrillLocationLocal:limit 1000
-    * jump *label263 equal *tmp320 false
+  878 jump *label263 greaterThanEq :findDrillLocationLocal:limit 1000
   879 set .mapSpots :findDrillLocationLocal:score
   880 jump *label264 always
   881 label *label263
   882 label *label264
-    * op greaterThanEq *tmp322 :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
-    * jump *label265 equal *tmp322 false
+  883 jump *label265 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
   884 set :saveLocation:item :findDrillLocationLocal:item
   885 set :saveLocation:value :findDrillLocationLocal:score
   886 set :saveLocation:x :findDrillLocationLocal:dx
 
   906 jump *label262 always
   907 label *label261
   908 label *label262
-    * op greaterThan *tmp334 :findDrillLocationLocal:score :findDrillLocationLocal:best
-    * jump *label268 equal *tmp334 false
+  909 jump *label268 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
   910 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   911 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   912 set :findDrillLocationLocal:best :findDrillLocationLocal:score
   913 jump *label269 always
   914 label *label268
   915 label *label269
-    * op lessThanEq *tmp338 :findDrillLocationLocal:score :findDrillLocationLocal:last
-    * jump *label270 equal *tmp338 false
+  916 jump *label270 greaterThan :findDrillLocationLocal:score :findDrillLocationLocal:last
   917 jump *label90 always
   918 jump *label271 always
   919 label *label270
 
   934 op sub *tmp350 :findDrillLocationLocal:oreY .coreY
   935 op abs *tmp351 *tmp350
   936 op min *tmp352 *tmp349 *tmp351
-    * op lessThan *tmp353 *tmp352 7
-    * jump *label274 equal *tmp353 false
+  937 jump *label274 greaterThanEq *tmp352 7
   938 jump *label90 always
   939 jump *label275 always
   940 label *label274
 
  1015 set :moveTo.8:radius 6
  1016 label *label287
  1017 ucontrol within :moveTo.8:x :moveTo.8:y :moveTo.8:radius *tmp381
-    * op equal *tmp382 *tmp381 false
-    * jump *label289 equal *tmp382 false
+ 1018 jump *label289 notEqual *tmp381 false
  1019 op sub *tmp383 :moveTo.8:radius 0.5
  1020 ucontrol approach :moveTo.8:x :moveTo.8:y *tmp383
  1021 label *label288
 
  1066 label *label301
  1067 jump *label303 greaterThan :findPossiblePlacement:x 3
  1068 op and *tmp392 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
-    * op equal *tmp393 *tmp392 0
-    * jump *label304 equal *tmp393 false
+ 1069 jump *label304 notEqual *tmp392 0
  1070 op mul *tmp395 :findPossiblePlacement:y 7
  1071 op add *tmp396 24 *tmp395
  1072 op add :findPossiblePlacement*retval *tmp396 :findPossiblePlacement:x
 
  1075 label *label304
  1076 label *label305
  1077 op sub *tmp398 3 :findPossiblePlacement:width
-    * op greaterThan *tmp399 :findPossiblePlacement:x *tmp398
-    * jump *label306 equal *tmp399 false
+ 1078 jump *label306 lessThanEq :findPossiblePlacement:x *tmp398
  1079 jump *label303 always
  1080 jump *label307 always
  1081 label *label306
 
  1086 jump *label301 always
  1087 label *label303
  1088 op sub *tmp401 3 :findPossiblePlacement:height
-    * op greaterThan *tmp402 :findPossiblePlacement:y *tmp401
-    * jump *label308 equal *tmp402 false
+ 1089 jump *label308 lessThanEq :findPossiblePlacement:y *tmp401
  1090 jump *label300 always
  1091 jump *label309 always
  1092 label *label308
 
  1112 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1113 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1114 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op greaterThanEq *tmp405 :tryPlaceGenerator:shift 0
-    * jump *label312 equal *tmp405 false
+ 1115 jump *label312 lessThan :tryPlaceGenerator:shift 0
  1116 op add *tmp407 :tryPlaceGenerator:centerX 0.5
  1117 op add .water2X *tmp407 :tryPlaceGenerator:c
  1118 op add *tmp409 :tryPlaceGenerator:centerY 0.5
 
  1135 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1136 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1137 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp417 :tryPlaceGenerator:shift 0
-    * jump *label315 equal *tmp417 false
+ 1138 jump *label315 greaterThanEq :tryPlaceGenerator:shift 0
  1139 set :tryPlaceGenerator*retval false
  1140 jump *label310 always
  1141 jump *label316 always
 
  1162 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1163 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1164 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp429 :tryPlaceGenerator:shift 0
-    * jump *label318 equal *tmp429 false
+ 1165 jump *label318 greaterThanEq :tryPlaceGenerator:shift 0
  1166 set :tryPlaceGenerator*retval false
  1167 jump *label310 always
  1168 jump *label319 always
 
  1182 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1183 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1184 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp435 :tryPlaceGenerator:shift 0
-    * jump *label321 equal *tmp435 false
+ 1185 jump *label321 greaterThanEq :tryPlaceGenerator:shift 0
  1186 set :tryPlaceGenerator*retval false
  1187 jump *label310 always
  1188 jump *label322 always
 
  1202 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1203 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1204 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp441 :tryPlaceGenerator:shift 0
-    * jump *label324 equal *tmp441 false
+ 1205 jump *label324 greaterThanEq :tryPlaceGenerator:shift 0
  1206 set :tryPlaceGenerator*retval false
  1207 jump *label310 always
  1208 jump *label325 always
 
  1329 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1330 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
  1331 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
-    * op greaterThanEq *tmp486 :layoutThoriumDrillAtLocation:shift 0
-    * jump *label344 equal *tmp486 false
+ 1332 jump *label344 lessThan :layoutThoriumDrillAtLocation:shift 0
  1333 op add *tmp488 .drillX 0.5
  1334 op add .water1X *tmp488 :layoutThoriumDrillAtLocation:c
  1335 op add *tmp490 .drillY 0.5
 
  1418 label *label361
  1419 op mul *tmp519 7 :shiftMask:shiftY
  1420 op add :shiftMask:shift :shiftMask:shiftX *tmp519
-    * op greaterThan *tmp521 :shiftMask:shift 0
-    * jump *label362 equal *tmp521 false
+ 1421 jump *label362 lessThanEq :shiftMask:shift 0
  1422 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
  1423 op and *tmp524 :shiftMask:mask :shiftMask:clearMask
  1424 op shl :shiftMask:mask *tmp524 :shiftMask:shift
 
  1427 op sub *tmp526 0 :shiftMask:shift
  1428 op shr :shiftMask:mask :shiftMask:mask *tmp526
  1429 label *label363
-    * op notEqual *tmp527 :shiftMask:shiftX 0
-    * jump *label364 equal *tmp527 false
+ 1430 jump *label364 equal :shiftMask:shiftX 0
  1431 op abs *tmp529 :shiftMask:shiftX
  1432 op sub *tmp530 7 *tmp529
  1433 op shr :shiftMask:keep 0b1111111 *tmp530
-    * op greaterThan *tmp532 :shiftMask:shiftX 0
-    * jump *label366 equal *tmp532 false
+ 1434 jump *label366 lessThanEq :shiftMask:shiftX 0
  1435 op abs *tmp534 :shiftMask:shiftX
  1436 op sub *tmp535 7 *tmp534
  1437 op shl :shiftMask:keep :shiftMask:keep *tmp535
 
  1512 label *label374
  1513 set .drillX :findDrillLocationLocal:dx
  1514 set .drillY :findDrillLocationLocal:dy
-    * op equal *tmp544 :findDrillLocationLocal*retval false
-    * jump *label375 equal *tmp544 false
+ 1515 jump *label375 notEqual :findDrillLocationLocal*retval false
  1516 set :layoutThoriumDrill*retval false
  1517 jump *label373 always
  1518 jump *label376 always

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-92 instructions):
 
   200 jump *label61 notEqual *tmp109 false
   201 set *tmp83 false
   202 jump *label51 always
-    * jump *label62 always
   203 label *label61
   204 label *label62
   205 op sub *tmp113 :locateOreAway:x .coreX
 
   213 jump *label63 notEqual :locateOreAway:lastX :locateOreAway:x
   214 jump *label65 notEqual :locateOreAway:lastY :locateOreAway:y
   215 jump *label53 always
-    * jump *label66 always
   216 label *label65
   217 label *label66
-    * jump *label64 always
   218 label *label63
   219 label *label64
   220 jump *label67 lessThan :locateOreAway:coreDist 7
 
   238 jump *label75 greaterThanEq *tmp140 7
   239 set *tmp129 true
   240 jump *label71 always
-    * jump *label76 always
   241 label *label75
   242 label *label76
   243 label *label73
 
   255 printflush message1
   256 set *tmp83 true
   257 jump *label51 always
-    * jump *label78 always
   258 label *label77
   259 label *label78
-    * jump *label70 always
   260 label *label69
   261 label *label70
-    * jump *label68 always
   262 label *label67
   263 label *label68
   264 label *label53
 
   273 jump *label79 notEqual *tmp83 false
   274 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   275 jump *label42 always
-    * jump *label80 always
   276 label *label79
   277 label *label80
   278 jump *label81 lessThan :findDrillLocationLocal:limit 1000
   279 op add .mapSpots .mapSpots 1
-    * jump *label82 always
   280 label *label81
   281 label *label82
   282 set :moveTo.5:x :findDrillLocationLocal:oreX
 
   366 set :findDrillLocationLocal:diffX :updatePosition:dx
   367 set :findDrillLocationLocal:diffY :updatePosition:dy
   368 set :findBestPosition:best :updatePosition:value
-    * jump *label104 always
   369 label *label103
   370 label *label104
-    * jump *label102 always
   371 label *label101
   372 label *label102
   373 label *label100
 
   379 set :findDrillLocationLocal:diffX :updatePosition.1:dx
   380 set :findDrillLocationLocal:diffY :updatePosition.1:dy
   381 set :findBestPosition:best :updatePosition.1:value
-    * jump *label109 always
   382 label *label108
   383 label *label109
-    * jump *label107 always
   384 label *label106
   385 label *label107
   386 label *label105
 
   392 set :findDrillLocationLocal:diffX :updatePosition.2:dx
   393 set :findDrillLocationLocal:diffY :updatePosition.2:dy
   394 set :findBestPosition:best :updatePosition.2:value
-    * jump *label114 always
   395 label *label113
   396 label *label114
-    * jump *label112 always
   397 label *label111
   398 label *label112
   399 label *label110
 
   405 set :findDrillLocationLocal:diffX :updatePosition.3:dx
   406 set :findDrillLocationLocal:diffY :updatePosition.3:dy
   407 set :findBestPosition:best :updatePosition.3:value
-    * jump *label119 always
   408 label *label118
   409 label *label119
-    * jump *label117 always
   410 label *label116
   411 label *label117
   412 label *label115
 
   422 set :findDrillLocationLocal:diffX :updatePosition.4:dx
   423 set :findDrillLocationLocal:diffY :updatePosition.4:dy
   424 set :findBestPosition:best :updatePosition.4:value
-    * jump *label125 always
   425 label *label124
   426 label *label125
-    * jump *label123 always
   427 label *label122
   428 label *label123
   429 label *label121
 
   435 set :findDrillLocationLocal:diffX :updatePosition.5:dx
   436 set :findDrillLocationLocal:diffY :updatePosition.5:dy
   437 set :findBestPosition:best :updatePosition.5:value
-    * jump *label130 always
   438 label *label129
   439 label *label130
-    * jump *label128 always
   440 label *label127
   441 label *label128
   442 label *label126
 
   448 set :findDrillLocationLocal:diffX :updatePosition.6:dx
   449 set :findDrillLocationLocal:diffY :updatePosition.6:dy
   450 set :findBestPosition:best :updatePosition.6:value
-    * jump *label135 always
   451 label *label134
   452 label *label135
-    * jump *label133 always
   453 label *label132
   454 label *label133
   455 label *label131
 
   461 set :findDrillLocationLocal:diffX :updatePosition.7:dx
   462 set :findDrillLocationLocal:diffY :updatePosition.7:dy
   463 set :findBestPosition:best :updatePosition.7:value
-    * jump *label140 always
   464 label *label139
   465 label *label140
-    * jump *label138 always
   466 label *label137
   467 label *label138
   468 label *label136
 
   478 set :findDrillLocationLocal:diffX :updatePosition.8:dx
   479 set :findDrillLocationLocal:diffY :updatePosition.8:dy
   480 set :findBestPosition:best :updatePosition.8:value
-    * jump *label146 always
   481 label *label145
   482 label *label146
-    * jump *label144 always
   483 label *label143
   484 label *label144
   485 label *label142
 
   491 set :findDrillLocationLocal:diffX :updatePosition.9:dx
   492 set :findDrillLocationLocal:diffY :updatePosition.9:dy
   493 set :findBestPosition:best :updatePosition.9:value
-    * jump *label151 always
   494 label *label150
   495 label *label151
-    * jump *label149 always
   496 label *label148
   497 label *label149
   498 label *label147
 
   504 set :findDrillLocationLocal:diffX :updatePosition.10:dx
   505 set :findDrillLocationLocal:diffY :updatePosition.10:dy
   506 set :findBestPosition:best :updatePosition.10:value
-    * jump *label156 always
   507 label *label155
   508 label *label156
-    * jump *label154 always
   509 label *label153
   510 label *label154
   511 label *label152
 
   517 set :findDrillLocationLocal:diffX :updatePosition.11:dx
   518 set :findDrillLocationLocal:diffY :updatePosition.11:dy
   519 set :findBestPosition:best :updatePosition.11:value
-    * jump *label161 always
   520 label *label160
   521 label *label161
-    * jump *label159 always
   522 label *label158
   523 label *label159
   524 label *label157
 
   534 set :findDrillLocationLocal:diffX :updatePosition.12:dx
   535 set :findDrillLocationLocal:diffY :updatePosition.12:dy
   536 set :findBestPosition:best :updatePosition.12:value
-    * jump *label167 always
   537 label *label166
   538 label *label167
-    * jump *label165 always
   539 label *label164
   540 label *label165
   541 label *label163
 
   547 set :findDrillLocationLocal:diffX :updatePosition.13:dx
   548 set :findDrillLocationLocal:diffY :updatePosition.13:dy
   549 set :findBestPosition:best :updatePosition.13:value
-    * jump *label172 always
   550 label *label171
   551 label *label172
-    * jump *label170 always
   552 label *label169
   553 label *label170
   554 label *label168
 
   560 set :findDrillLocationLocal:diffX :updatePosition.14:dx
   561 set :findDrillLocationLocal:diffY :updatePosition.14:dy
   562 set :findBestPosition:best :updatePosition.14:value
-    * jump *label177 always
   563 label *label176
   564 label *label177
-    * jump *label175 always
   565 label *label174
   566 label *label175
   567 label *label173
 
   573 set :findDrillLocationLocal:diffX :updatePosition.15:dx
   574 set :findDrillLocationLocal:diffY :updatePosition.15:dy
   575 set :findBestPosition:best :updatePosition.15:value
-    * jump *label182 always
   576 label *label181
   577 label *label182
-    * jump *label180 always
   578 label *label179
   579 label *label180
   580 label *label178
 
   599 set :findDrillLocationLocal:diffX :updatePosition.16:dx
   600 set :findDrillLocationLocal:diffY :updatePosition.16:dy
   601 set :findBestPosition:best :updatePosition.16:value
-    * jump *label190 always
   602 label *label189
   603 label *label190
-    * jump *label188 always
   604 label *label187
   605 label *label188
   606 label *label186
 
   612 set :findDrillLocationLocal:diffX :updatePosition.17:dx
   613 set :findDrillLocationLocal:diffY :updatePosition.17:dy
   614 set :findBestPosition:best :updatePosition.17:value
-    * jump *label195 always
   615 label *label194
   616 label *label195
-    * jump *label193 always
   617 label *label192
   618 label *label193
   619 label *label191
 
   625 set :findDrillLocationLocal:diffX :updatePosition.18:dx
   626 set :findDrillLocationLocal:diffY :updatePosition.18:dy
   627 set :findBestPosition:best :updatePosition.18:value
-    * jump *label200 always
   628 label *label199
   629 label *label200
-    * jump *label198 always
   630 label *label197
   631 label *label198
   632 label *label196
 
   642 set :findDrillLocationLocal:diffX :updatePosition.19:dx
   643 set :findDrillLocationLocal:diffY :updatePosition.19:dy
   644 set :findBestPosition:best :updatePosition.19:value
-    * jump *label206 always
   645 label *label205
   646 label *label206
-    * jump *label204 always
   647 label *label203
   648 label *label204
   649 label *label202
 
   655 set :findDrillLocationLocal:diffX :updatePosition.20:dx
   656 set :findDrillLocationLocal:diffY :updatePosition.20:dy
   657 set :findBestPosition:best :updatePosition.20:value
-    * jump *label211 always
   658 label *label210
   659 label *label211
-    * jump *label209 always
   660 label *label208
   661 label *label209
   662 label *label207
 
   668 set :findDrillLocationLocal:diffX :updatePosition.21:dx
   669 set :findDrillLocationLocal:diffY :updatePosition.21:dy
   670 set :findBestPosition:best :updatePosition.21:value
-    * jump *label216 always
   671 label *label215
   672 label *label216
-    * jump *label214 always
   673 label *label213
   674 label *label214
   675 label *label212
 
   685 set :findDrillLocationLocal:diffX :updatePosition.22:dx
   686 set :findDrillLocationLocal:diffY :updatePosition.22:dy
   687 set :findBestPosition:best :updatePosition.22:value
-    * jump *label222 always
   688 label *label221
   689 label *label222
-    * jump *label220 always
   690 label *label219
   691 label *label220
   692 label *label218
 
   698 set :findDrillLocationLocal:diffX :updatePosition.23:dx
   699 set :findDrillLocationLocal:diffY :updatePosition.23:dy
   700 set :findBestPosition:best :updatePosition.23:value
-    * jump *label227 always
   701 label *label226
   702 label *label227
-    * jump *label225 always
   703 label *label224
   704 label *label225
   705 label *label223
 
   711 set :findDrillLocationLocal:diffX :updatePosition.24:dx
   712 set :findDrillLocationLocal:diffY :updatePosition.24:dy
   713 set :findBestPosition:best :updatePosition.24:value
-    * jump *label232 always
   714 label *label231
   715 label *label232
-    * jump *label230 always
   716 label *label229
   717 label *label230
   718 label *label228
 
   736 set :findDrillLocationLocal:diffX :updatePosition.25:dx
   737 set :findDrillLocationLocal:diffY :updatePosition.25:dy
   738 set :findBestPosition:best :updatePosition.25:value
-    * jump *label238 always
   739 label *label237
   740 label *label238
-    * jump *label236 always
   741 label *label235
   742 label *label236
   743 label *label234
 
   749 set :findDrillLocationLocal:diffX :updatePosition.26:dx
   750 set :findDrillLocationLocal:diffY :updatePosition.26:dy
   751 set :findBestPosition:best :updatePosition.26:value
-    * jump *label243 always
   752 label *label242
   753 label *label243
-    * jump *label241 always
   754 label *label240
   755 label *label241
   756 label *label239
 
   766 set :findDrillLocationLocal:diffX :updatePosition.27:dx
   767 set :findDrillLocationLocal:diffY :updatePosition.27:dy
   768 set :findBestPosition:best :updatePosition.27:value
-    * jump *label249 always
   769 label *label248
   770 label *label249
-    * jump *label247 always
   771 label *label246
   772 label *label247
   773 label *label245
 
   779 set :findDrillLocationLocal:diffX :updatePosition.28:dx
   780 set :findDrillLocationLocal:diffY :updatePosition.28:dy
   781 set :findBestPosition:best :updatePosition.28:value
-    * jump *label254 always
   782 label *label253
   783 label *label254
-    * jump *label252 always
   784 label *label251
   785 label *label252
   786 label *label250
 
   795 sensor *tmp314 switch1 @enabled
   796 jump *label258 notEqual *tmp314 false
   797 label *label260
-    * jump *label257 always
   798 label *label256
   799 label *label257
   800 label *label255
 
   809 set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
   810 jump *label263 greaterThanEq :findDrillLocationLocal:limit 1000
   811 set .mapSpots :findDrillLocationLocal:score
-    * jump *label264 always
   812 label *label263
   813 label *label264
   814 jump *label265 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
 
   831 ucontrol unbind
   832 set :findDrillLocationLocal*retval true
   833 jump *label42 always
-    * jump *label266 always
   834 label *label265
   835 label *label266
-    * jump *label262 always
   836 label *label261
   837 label *label262
   838 jump *label268 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
   839 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   840 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   841 set :findDrillLocationLocal:best :findDrillLocationLocal:score
-    * jump *label269 always
   842 label *label268
   843 label *label269
   844 jump *label270 greaterThan :findDrillLocationLocal:score :findDrillLocationLocal:last
   845 jump *label90 always
-    * jump *label271 always
   846 label *label270
   847 label *label271
   848 set :findDrillLocationLocal:last :findDrillLocationLocal:score
 
   863 op min *tmp352 *tmp349 *tmp351
   864 jump *label274 greaterThanEq *tmp352 7
   865 jump *label90 always
-    * jump *label275 always
   866 label *label274
   867 label *label275
   868 label *label89
 
   920 label *label283
   921 print :debugPrintSpot:text
   922 printflush message1
-    * jump *label279 always
   923 label *label278
   924 label *label279
   925 label *label277
 
   996 op add *tmp396 24 *tmp395
   997 op add :findPossiblePlacement*retval *tmp396 :findPossiblePlacement:x
   998 jump *label297 always
-    * jump *label305 always
   999 label *label304
  1000 label *label305
  1001 op sub *tmp398 3 :findPossiblePlacement:width
  1002 jump *label306 lessThanEq :findPossiblePlacement:x *tmp398
  1003 jump *label303 always
-    * jump *label307 always
  1004 label *label306
  1005 label *label307
  1006 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
 
  1011 op sub *tmp401 3 :findPossiblePlacement:height
  1012 jump *label308 lessThanEq :findPossiblePlacement:y *tmp401
  1013 jump *label300 always
-    * jump *label309 always
  1014 label *label308
  1015 label *label309
  1016 label *label299
 
  1060 jump *label315 greaterThanEq :tryPlaceGenerator:shift 0
  1061 set :tryPlaceGenerator*retval false
  1062 jump *label310 always
-    * jump *label316 always
  1063 label *label315
  1064 label *label316
  1065 op add *tmp419 :tryPlaceGenerator:centerX 0.5
 
  1086 jump *label318 greaterThanEq :tryPlaceGenerator:shift 0
  1087 set :tryPlaceGenerator*retval false
  1088 jump *label310 always
-    * jump *label319 always
  1089 label *label318
  1090 label *label319
  1091 op add .nodeX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
 
  1105 jump *label321 greaterThanEq :tryPlaceGenerator:shift 0
  1106 set :tryPlaceGenerator*retval false
  1107 jump *label310 always
-    * jump *label322 always
  1108 label *label321
  1109 label *label322
  1110 op add .panelX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
 
  1124 jump *label324 greaterThanEq :tryPlaceGenerator:shift 0
  1125 set :tryPlaceGenerator*retval false
  1126 jump *label310 always
-    * jump *label325 always
  1127 label *label324
  1128 label *label325
  1129 op add .batteryX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
 
  1228 sensor *tmp484 switch1 @enabled
  1229 jump *label340 notEqual *tmp484 false
  1230 label *label342
-    * jump *label339 always
  1231 label *label338
  1232 label *label339
  1233 label *label337
  1234 end
-    * jump *label336 always
  1235 label *label335
  1236 label *label336
  1237 label *label334
 
  1252 op add .water1Y *tmp490 :layoutThoriumDrillAtLocation:r
  1253 op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:shift
  1254 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
-    * jump *label345 always
  1255 label *label344
  1256 label *label345
  1257 set :createFixedMatrix.3:row0 0b1111
 
  1285 jump *label349 equal :tryPlaceGenerator*retval false
  1286 set :layoutThoriumDrillAtLocation*retval true
  1287 jump *label326 always
-    * jump *label350 always
  1288 label *label349
  1289 label *label350
  1290 set :layoutThoriumDrillAtLocation:sx 3
 
  1327 jump *label360 equal *tmp517 false
  1328 set *tmp512 0
  1329 jump *label359 always
-    * jump *label361 always
  1330 label *label360
  1331 label *label361
  1332 op mul *tmp519 7 :shiftMask:shiftY
 
  1348 op abs *tmp534 :shiftMask:shiftX
  1349 op sub *tmp535 7 *tmp534
  1350 op shl :shiftMask:keep :shiftMask:keep *tmp535
-    * jump *label367 always
  1351 label *label366
  1352 label *label367
  1353 op shl *tmp536 :shiftMask:keep 7
 
  1357 op shl *tmp538 :shiftMask:keep 21
  1358 op or :shiftMask:keep :shiftMask:keep *tmp538
  1359 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
-    * jump *label365 always
  1360 label *label364
  1361 label *label365
  1362 set *tmp512 :shiftMask:mask
 
  1378 jump *label369 equal :tryPlaceGenerator*retval false
  1379 set :layoutThoriumDrillAtLocation*retval true
  1380 jump *label326 always
-    * jump *label370 always
  1381 label *label369
  1382 label *label370
  1383 label *label352
 
  1425 jump *label375 notEqual :findDrillLocationLocal*retval false
  1426 set :layoutThoriumDrill*retval false
  1427 jump *label373 always
-    * jump *label376 always
  1428 label *label375
  1429 label *label376
  1430 setaddr :layoutThoriumDrillAtLocation*retaddr *label377 (h:*label377)
 
  1465 op sub :printMask:r :printMask:r 1
  1466 jump *label381 always
  1467 label *label383
-    * jump *label380 always
  1468 label *label379
  1469 label *label380
  1470 label *label378

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1:
 
    30 set *tmp3 :spotValue.1:result
    31 label *label18
    32 set :computeRowValues:x2 *tmp3
-    * op add :spotValue.2:x :computeRowValues:x 0
+   33 set :spotValue.2:x :computeRowValues:x
    34 set :spotValue.2:y :computeRowValues:y
    35 set :spotValue.2:ore :computeRowValues:ore
    36 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
 
   320 call *label5 *invalid :computeRowValues*retval (m:*label93) (h:*label93)
   321 label *label93
   322 set :findBestPosition:y2 :computeRowValues*retval
-    * op add *tmp163 :findBestPosition:y 0
+  323 set *tmp163 :findBestPosition:y
   324 set :computeRowValues:x :findBestPosition:x
   325 set :computeRowValues:y *tmp163
   326 set :computeRowValues:ore :findBestPosition:ore
 
  1158 set :createFixedMatrix:row4 0b0011100
  1159 set :createFixedMatrix:row5 0b0000000
  1160 set :createFixedMatrix:row6 0b0000000
-    * op shl *tmp448 :createFixedMatrix:row0 0
+ 1161 set *tmp448 :createFixedMatrix:row0
  1162 op shl *tmp449 :createFixedMatrix:row1 7
  1163 op or *tmp450 *tmp448 *tmp449
  1164 op shl *tmp451 :createFixedMatrix:row2 14
 
  1180 set :createFixedMatrix.1:row4 0b0011100
  1181 set :createFixedMatrix.1:row5 0b0000000
  1182 set :createFixedMatrix.1:row6 0b1000001
-    * op shl *tmp463 :createFixedMatrix.1:row0 0
+ 1183 set *tmp463 :createFixedMatrix.1:row0
  1184 op shl *tmp464 :createFixedMatrix.1:row1 7
  1185 op or *tmp465 *tmp463 *tmp464
  1186 op shl *tmp466 :createFixedMatrix.1:row2 14
 
  1197 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp462
  1198 set :createFixedMatrix.2:row0 0b11
  1199 set :createFixedMatrix.2:row1 0b11
-    * op shl *tmp478 :createFixedMatrix.2:row0 0
+ 1200 set *tmp478 :createFixedMatrix.2:row0
  1201 op shl *tmp479 :createFixedMatrix.2:row1 7
  1202 op or *tmp477 *tmp478 *tmp479
  1203 label *label330
 
  1256 label *label345
  1257 set :createFixedMatrix.3:row0 0b1111
  1258 set :createFixedMatrix.3:row1 0b1111
-    * op shl *tmp493 :createFixedMatrix.3:row0 0
+ 1259 set *tmp493 :createFixedMatrix.3:row0
  1260 op shl *tmp494 :createFixedMatrix.3:row1 7
  1261 op or *tmp492 *tmp493 *tmp494
  1262 label *label346
 
  1265 set :createFixedMatrix.4:row1 0b11
  1266 set :createFixedMatrix.4:row2 0b11
  1267 set :createFixedMatrix.4:row3 0b11
-    * op shl *tmp497 :createFixedMatrix.4:row0 0
+ 1268 set *tmp497 :createFixedMatrix.4:row0
  1269 op shl *tmp498 :createFixedMatrix.4:row1 7
  1270 op or *tmp499 *tmp497 *tmp498
  1271 op shl *tmp500 :createFixedMatrix.4:row2 14

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-42 instructions):
 
    19 select :spotValue:result notEqual solid false WALL value
    20 set *tmp1 :spotValue:result
    21 label *label17
-    * set :computeRowValues:x1 *tmp1
+   22 set :computeRowValues:x1 :spotValue:result
    23 op sub :spotValue.1:x :computeRowValues:x 1
    24 set :spotValue.1:y :computeRowValues:y
    25 set :spotValue.1:ore :computeRowValues:ore
 
    29 select :spotValue.1:result notEqual solid false WALL value
    30 set *tmp3 :spotValue.1:result
    31 label *label18
-    * set :computeRowValues:x2 *tmp3
+   32 set :computeRowValues:x2 :spotValue.1:result
    33 set :spotValue.2:x :computeRowValues:x
    34 set :spotValue.2:y :computeRowValues:y
    35 set :spotValue.2:ore :computeRowValues:ore
 
    39 select :spotValue.2:result notEqual solid false WALL value
    40 set *tmp5 :spotValue.2:result
    41 label *label19
-    * set :computeRowValues:x3 *tmp5
+   42 set :computeRowValues:x3 :spotValue.2:result
    43 op add :spotValue.3:x :computeRowValues:x 1
    44 set :spotValue.3:y :computeRowValues:y
    45 set :spotValue.3:ore :computeRowValues:ore
 
    49 select :spotValue.3:result notEqual solid false WALL value
    50 set *tmp7 :spotValue.3:result
    51 label *label20
-    * set :computeRowValues:x4 *tmp7
+   52 set :computeRowValues:x4 :spotValue.3:result
    53 op add :spotValue.4:x :computeRowValues:x 2
    54 set :spotValue.4:y :computeRowValues:y
    55 set :spotValue.4:ore :computeRowValues:ore
 
    59 select :spotValue.4:result notEqual solid false WALL value
    60 set *tmp9 :spotValue.4:result
    61 label *label21
-    * set :computeRowValues:x5 *tmp9
+   62 set :computeRowValues:x5 :spotValue.4:result
    63 jump *label22 notEqual :computeRowValues:size 2
-    * op add *tmp12 :computeRowValues:x1 :computeRowValues:x2
-    * op add *tmp13 :computeRowValues:x2 :computeRowValues:x3
-    * op add *tmp14 :computeRowValues:x3 :computeRowValues:x4
-    * op add *tmp15 :computeRowValues:x4 :computeRowValues:x5
+   64 op add *tmp12 *tmp1 *tmp3
+   65 op add *tmp13 *tmp3 *tmp5
+   66 op add *tmp14 *tmp5 *tmp7
+   67 op add *tmp15 *tmp7 *tmp9
    68 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
    69 jump *label16 always
-    * set *tmp11 null
    70 jump *label23 always
    71 label *label22
    72 jump *label24 notEqual :computeRowValues:size 3
-    * op add *tmp19 :computeRowValues:x1 :computeRowValues:x2
-    * op add *tmp20 *tmp19 :computeRowValues:x3
-    * op add *tmp21 :computeRowValues:x2 :computeRowValues:x3
-    * op add *tmp22 *tmp21 :computeRowValues:x4
-    * op add *tmp23 :computeRowValues:x3 :computeRowValues:x4
-    * op add *tmp24 *tmp23 :computeRowValues:x5
+   73 op add *tmp19 *tmp1 *tmp3
+   74 op add *tmp20 *tmp19 *tmp5
+   75 op add *tmp21 *tmp3 *tmp5
+   76 op add *tmp22 *tmp21 *tmp7
+   77 op add *tmp23 *tmp5 *tmp7
+   78 op add *tmp24 *tmp23 *tmp9
    79 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
    80 jump *label16 always
-    * set *tmp18 null
    81 jump *label25 always
    82 label *label24
-    * op add *tmp26 :computeRowValues:x1 :computeRowValues:x2
-    * op add *tmp27 *tmp26 :computeRowValues:x3
-    * op add *tmp28 *tmp27 :computeRowValues:x4
-    * op add *tmp29 :computeRowValues:x2 :computeRowValues:x3
-    * op add *tmp30 *tmp29 :computeRowValues:x4
-    * op add *tmp31 *tmp30 :computeRowValues:x5
+   83 op add *tmp26 *tmp1 *tmp3
+   84 op add *tmp27 *tmp26 *tmp5
+   85 op add *tmp28 *tmp27 *tmp7
+   86 op add *tmp29 *tmp3 *tmp5
+   87 op add *tmp30 *tmp29 *tmp7
+   88 op add *tmp31 *tmp30 *tmp9
    89 packcolor :computeRowValues*retval *tmp28 *tmp31 0 0
    90 jump *label16 always
-    * set *tmp18 null
    91 label *label25
-    * set *tmp11 *tmp18
+   92 set *tmp11 null
    93 label *label23
-    * set :computeRowValues*retval *tmp11
+   94 set :computeRowValues*retval null
    95 label *label16
    96 return :computeRowValues*retaddr
    97 end
 
   104 set :findDrillLocationLocal:dy :findDrillLocationLocal:capacity
   105 set :findDrillLocationLocal:dx :findDrillLocationLocal:dy
   106 set .mapSpots :findDrillLocationLocal:dx
-    * op sub *tmp68 @mapw .coreX
-    * op sub *tmp69 @maph .coreY
-    * op max *tmp70 .coreX .coreY
+  107 op sub *tmp68 @mapw :findDrillLocationLocal:x
+  108 op sub *tmp69 @maph :findDrillLocationLocal:y
+  109 op max *tmp70 :findDrillLocationLocal:x :findDrillLocationLocal:y
   110 op max *tmp70 *tmp70 *tmp68
   111 op max *tmp70 *tmp70 *tmp69
   112 set :findDrillLocationLocal:distanceLimit *tmp70
   113 set .mapAction "Locating ore..."
   114 set .angle 0
-    * set .mapProgress .angle
-    * set :moveTo.2:x .coreX
-    * set :moveTo.2:y .coreY
-    * set *tmp71 :moveTo.2:x
-    * set *tmp72 :moveTo.2:y
-    * set :moveTo.3:x *tmp71
-    * set :moveTo.3:y *tmp72
+  115 set .mapProgress 0
+  116 set :moveTo.2:x :findDrillLocationLocal:x
+  117 set :moveTo.2:y :findDrillLocationLocal:y
+  118 set *tmp71 .coreX
+  119 set *tmp72 .coreY
+  120 set :moveTo.3:x :moveTo.2:x
+  121 set :moveTo.3:y :moveTo.2:y
   122 set :moveTo.3:radius 6
   123 label *label45
-    * ucontrol within :moveTo.3:x :moveTo.3:y :moveTo.3:radius *tmp73
+  124 ucontrol within *tmp71 *tmp72 6 *tmp73
   125 jump *label47 notEqual *tmp73 false
-    * op sub *tmp75 :moveTo.3:radius 0.5
-    * ucontrol approach :moveTo.3:x :moveTo.3:y *tmp75
+  126 op sub *tmp75 6 0.5
+  127 ucontrol approach *tmp71 *tmp72 5.5
   128 label *label46
   129 jump *label45 always
   130 label *label47
   131 label *label44
   132 label *label43
-    * op div *tmp76 :findDrillLocationLocal:distanceLimit 3.8197185279121366
+  133 op div *tmp76 *tmp70 3.8197185279121366
   134 op pow .mapTotal *tmp76 2
   135 set :findDrillLocationLocal:oreX 0
   136 set :findDrillLocationLocal:oreY 0
 
   153 op max .angle .angle @pi
   154 op mul .mapProgress .angle .angle
   155 label *label52
-    * jump *label54 greaterThanEq :locateOreAway:distance :locateOreAway:distanceLimit
+  156 jump *label54 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   157 op div :locateOreAway:a .angle @degToRad
   158 op sin *tmp89 :locateOreAway:a
   159 op mul *tmp90 *tmp89 :locateOreAway:distance
 
   162 set :limit:value *tmp91
   163 set :limit:low 5
   164 set :limit:high *tmp92
-    * op max *tmp94 :limit:value :limit:low
-    * op min *tmp93 *tmp94 :limit:high
+  165 op max *tmp94 *tmp91 5
+  166 op min *tmp93 *tmp94 *tmp92
   167 label *label55
   168 set :locateOreAway:lx *tmp93
   169 op cos *tmp96 :locateOreAway:a
 
   173 set :limit.1:value *tmp98
   174 set :limit.1:low 5
   175 set :limit.1:high *tmp99
-    * op max *tmp101 :limit.1:value :limit.1:low
-    * op min *tmp100 *tmp101 :limit.1:high
+  176 op max *tmp101 *tmp98 5
+  177 op min *tmp100 *tmp101 *tmp99
   178 label *label56
   179 set :locateOreAway:ly *tmp100
-    * set :moveTo.4:x :locateOreAway:lx
-    * set :moveTo.4:y :locateOreAway:ly
+  180 set :moveTo.4:x *tmp93
+  181 set :moveTo.4:y *tmp100
   182 set :moveTo.4:radius 5
   183 label *label58
-    * ucontrol within :moveTo.4:x :moveTo.4:y :moveTo.4:radius *tmp103
+  184 ucontrol within :locateOreAway:lx :locateOreAway:ly 5 *tmp103
   185 jump *label60 notEqual *tmp103 false
-    * op sub *tmp105 :moveTo.4:radius 0.5
-    * ucontrol approach :moveTo.4:x :moveTo.4:y *tmp105
+  186 op sub *tmp105 5 0.5
+  187 ucontrol approach :locateOreAway:lx :locateOreAway:ly 4.5
   188 label *label59
   189 jump *label58 always
   190 label *label60
 
   193 op add .angle .angle *tmp106
   194 op mul .mapProgress .angle .angle
   195 op mul :locateOreAway:distance 3.8197185279121366 .angle
-    * ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp109 0
+  196 ulocate ore core true :findDrillLocationLocal:item :locateOreAway:x :locateOreAway:y *tmp109 0
   197 jump *label61 notEqual *tmp109 false
   198 set *tmp83 false
   199 jump *label51 always
 
   204 op sub *tmp115 :locateOreAway:y .coreY
   205 op abs *tmp116 *tmp115
   206 op max :locateOreAway:coreDist *tmp114 *tmp116
-    * op sub *tmp118 :locateOreAway:x :locateOreAway:lx
-    * op sub *tmp119 :locateOreAway:y :locateOreAway:ly
+  207 op sub *tmp118 :locateOreAway:x *tmp93
+  208 op sub *tmp119 :locateOreAway:y *tmp100
   209 op len :locateOreAway:unitDist *tmp118 *tmp119
   210 jump *label63 notEqual :locateOreAway:lastX :locateOreAway:x
   211 jump *label65 notEqual :locateOreAway:lastY :locateOreAway:y
 
   223 set *tmp130 .locations
   224 set :visited:i .locationsStart
   225 label *label72
-    * jump *label74 greaterThanEq :visited:i *tmp130
+  226 jump *label74 greaterThanEq :visited:i .locations
   227 op mul :visited:index 4 :visited:i
   228 op add *tmp133 :visited:index 2
   229 read :visited:lx bank1 *tmp133
   230 op add *tmp135 :visited:index 3
   231 read :visited:ly bank1 *tmp135
-    * op sub *tmp138 :visited:x :visited:lx
-    * op sub *tmp139 :visited:y :visited:ly
+  232 op sub *tmp138 :locateOreAway:x :visited:lx
+  233 op sub *tmp139 :locateOreAway:y :visited:ly
   234 op len *tmp140 *tmp138 *tmp139
   235 jump *label75 greaterThanEq *tmp140 7
   236 set *tmp129 true
 
   243 label *label74
   244 set *tmp129 false
   245 jump *label71 always
-    * set *tmp129 null
   246 label *label71
   247 jump *label77 notEqual *tmp129 false
-    * op div *tmp145 7.639437055824273 :locateOreAway:distance
+  248 op div *tmp145 2 .angle
   249 op add .angle .angle *tmp145
   250 op mul .mapProgress .angle .angle
   251 printflush message1
 
   262 label *label54
   263 set *tmp83 false
   264 jump *label51 always
-    * set *tmp83 null
   265 label *label51
   266 set :findDrillLocationLocal:oreX :locateOreAway:x
   267 set :findDrillLocationLocal:oreY :locateOreAway:y
 
   274 op add .mapSpots .mapSpots 1
   275 label *label81
   276 label *label82
-    * set :moveTo.5:x :findDrillLocationLocal:oreX
-    * set :moveTo.5:y :findDrillLocationLocal:oreY
-    * set *tmp153 :moveTo.5:x
-    * set *tmp154 :moveTo.5:y
-    * set :moveTo.6:x *tmp153
-    * set :moveTo.6:y *tmp154
+  277 set :moveTo.5:x :locateOreAway:x
+  278 set :moveTo.5:y :locateOreAway:y
+  279 set *tmp153 :findDrillLocationLocal:oreX
+  280 set *tmp154 :findDrillLocationLocal:oreY
+  281 set :moveTo.6:x :moveTo.5:x
+  282 set :moveTo.6:y :moveTo.5:y
   283 set :moveTo.6:radius 6
   284 label *label85
-    * ucontrol within :moveTo.6:x :moveTo.6:y :moveTo.6:radius *tmp155
+  285 ucontrol within *tmp153 *tmp154 6 *tmp155
   286 jump *label87 notEqual *tmp155 false
-    * op sub *tmp157 :moveTo.6:radius 0.5
-    * ucontrol approach :moveTo.6:x :moveTo.6:y *tmp157
+  287 op sub *tmp157 6 0.5
+  288 ucontrol approach *tmp153 *tmp154 5.5
   289 label *label86
   290 jump *label85 always
   291 label *label87
 
   297 set :findBestPosition:y :findDrillLocationLocal:oreY
   298 set :findBestPosition:ore :findDrillLocationLocal:ore
   299 set :findBestPosition:size :findDrillLocationLocal:size
-    * op sub *tmp159 :findBestPosition:y 2
-    * set :computeRowValues:x :findBestPosition:x
+  300 op sub *tmp159 :findDrillLocationLocal:oreY 2
+  301 set :computeRowValues:x :findDrillLocationLocal:oreX
   302 set :computeRowValues:y *tmp159
-    * set :computeRowValues:ore :findBestPosition:ore
-    * set :computeRowValues:size :findBestPosition:size
+  303 set :computeRowValues:ore :findDrillLocationLocal:ore
+  304 set :computeRowValues:size :findDrillLocationLocal:size
   305 setaddr :computeRowValues*retaddr *label92 (h:*label92)
   306 call *label5 *invalid :computeRowValues*retval (m:*label92) (h:*label92)
   307 label *label92
 
   317 set :findBestPosition:y2 :computeRowValues*retval
   318 set *tmp163 :findBestPosition:y
   319 set :computeRowValues:x :findBestPosition:x
-    * set :computeRowValues:y *tmp163
+  320 set :computeRowValues:y :findBestPosition:y
   321 set :computeRowValues:ore :findBestPosition:ore
   322 set :computeRowValues:size :findBestPosition:size
   323 setaddr :computeRowValues*retaddr *label94 (h:*label94)
 
   349 op add :findBestPosition:row1 :findBestPosition:y1 :findBestPosition:y2
   350 op add :findBestPosition:row2 :findBestPosition:y2 :findBestPosition:y3
   351 op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
-    * op add :findBestPosition:row4 :findBestPosition:y4 :findBestPosition:y5
+  352 op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
   353 set :updateRowPositions2x2:dy -1.5
   354 set :updateRowPositions2x2:rowSum :findBestPosition:row1
-    * unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :updateRowPositions2x2:rowSum
+  355 unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :findBestPosition:row1
   356 set :updatePosition:dx -1.5
-    * set :updatePosition:dy :updateRowPositions2x2:dy
+  357 set :updatePosition:dy -1.5
   358 set :updatePosition:value :updateRowPositions2x2:col1
-    * jump *label101 greaterThanEq :updatePosition:value 0.0784313725490196
-    * jump *label103 lessThanEq :updatePosition:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition:dx
-    * set :findDrillLocationLocal:diffY :updatePosition:dy
-    * set :findBestPosition:best :updatePosition:value
+  359 jump *label101 greaterThanEq :updateRowPositions2x2:col1 0.0784313725490196
+  360 jump *label103 lessThanEq :updateRowPositions2x2:col1 0
+  361 set :findDrillLocationLocal:diffX -1.5
+  362 set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  363 set :findBestPosition:best :updateRowPositions2x2:col1
   364 label *label103
   365 label *label104
   366 label *label101
   367 label *label102
   368 label *label100
   369 set :updatePosition.1:dx -0.5
-    * set :updatePosition.1:dy :updateRowPositions2x2:dy
+  370 set :updatePosition.1:dy -1.5
   371 set :updatePosition.1:value :updateRowPositions2x2:col2
-    * jump *label106 greaterThanEq :updatePosition.1:value 0.0784313725490196
-    * jump *label108 lessThanEq :updatePosition.1:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.1:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.1:dy
-    * set :findBestPosition:best :updatePosition.1:value
+  372 jump *label106 greaterThanEq :updateRowPositions2x2:col2 0.0784313725490196
+  373 jump *label108 lessThanEq :updateRowPositions2x2:col2 :findBestPosition:best
+  374 set :findDrillLocationLocal:diffX -0.5
+  375 set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  376 set :findBestPosition:best :updateRowPositions2x2:col2
   377 label *label108
   378 label *label109
   379 label *label106
   380 label *label107
   381 label *label105
   382 set :updatePosition.2:dx 0.5
-    * set :updatePosition.2:dy :updateRowPositions2x2:dy
+  383 set :updatePosition.2:dy -1.5
   384 set :updatePosition.2:value :updateRowPositions2x2:col3
-    * jump *label111 greaterThanEq :updatePosition.2:value 0.0784313725490196
-    * jump *label113 lessThanEq :updatePosition.2:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.2:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.2:dy
-    * set :findBestPosition:best :updatePosition.2:value
+  385 jump *label111 greaterThanEq :updateRowPositions2x2:col3 0.0784313725490196
+  386 jump *label113 lessThanEq :updateRowPositions2x2:col3 :findBestPosition:best
+  387 set :findDrillLocationLocal:diffX 0.5
+  388 set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  389 set :findBestPosition:best :updateRowPositions2x2:col3
   390 label *label113
   391 label *label114
   392 label *label111
   393 label *label112
   394 label *label110
   395 set :updatePosition.3:dx 1.5
-    * set :updatePosition.3:dy :updateRowPositions2x2:dy
+  396 set :updatePosition.3:dy -1.5
   397 set :updatePosition.3:value :updateRowPositions2x2:col4
-    * jump *label116 greaterThanEq :updatePosition.3:value 0.0784313725490196
-    * jump *label118 lessThanEq :updatePosition.3:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.3:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.3:dy
-    * set :findBestPosition:best :updatePosition.3:value
+  398 jump *label116 greaterThanEq :updateRowPositions2x2:col4 0.0784313725490196
+  399 jump *label118 lessThanEq :updateRowPositions2x2:col4 :findBestPosition:best
+  400 set :findDrillLocationLocal:diffX 1.5
+  401 set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  402 set :findBestPosition:best :updateRowPositions2x2:col4
   403 label *label118
   404 label *label119
   405 label *label116
 
   408 label *label99
   409 set :updateRowPositions2x2.1:dy -0.5
   410 set :updateRowPositions2x2.1:rowSum :findBestPosition:row2
-    * unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :updateRowPositions2x2.1:rowSum
+  411 unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :findBestPosition:row2
   412 set :updatePosition.4:dx -1.5
-    * set :updatePosition.4:dy :updateRowPositions2x2.1:dy
+  413 set :updatePosition.4:dy -0.5
   414 set :updatePosition.4:value :updateRowPositions2x2.1:col1
-    * jump *label122 greaterThanEq :updatePosition.4:value 0.0784313725490196
-    * jump *label124 lessThanEq :updatePosition.4:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.4:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.4:dy
-    * set :findBestPosition:best :updatePosition.4:value
+  415 jump *label122 greaterThanEq :updateRowPositions2x2.1:col1 0.0784313725490196
+  416 jump *label124 lessThanEq :updateRowPositions2x2.1:col1 :findBestPosition:best
+  417 set :findDrillLocationLocal:diffX -1.5
+  418 set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  419 set :findBestPosition:best :updateRowPositions2x2.1:col1
   420 label *label124
   421 label *label125
   422 label *label122
   423 label *label123
   424 label *label121
   425 set :updatePosition.5:dx -0.5
-    * set :updatePosition.5:dy :updateRowPositions2x2.1:dy
+  426 set :updatePosition.5:dy -0.5
   427 set :updatePosition.5:value :updateRowPositions2x2.1:col2
-    * jump *label127 greaterThanEq :updatePosition.5:value 0.0784313725490196
-    * jump *label129 lessThanEq :updatePosition.5:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.5:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.5:dy
-    * set :findBestPosition:best :updatePosition.5:value
+  428 jump *label127 greaterThanEq :updateRowPositions2x2.1:col2 0.0784313725490196
+  429 jump *label129 lessThanEq :updateRowPositions2x2.1:col2 :findBestPosition:best
+  430 set :findDrillLocationLocal:diffX -0.5
+  431 set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  432 set :findBestPosition:best :updateRowPositions2x2.1:col2
   433 label *label129
   434 label *label130
   435 label *label127
   436 label *label128
   437 label *label126
   438 set :updatePosition.6:dx 0.5
-    * set :updatePosition.6:dy :updateRowPositions2x2.1:dy
+  439 set :updatePosition.6:dy -0.5
   440 set :updatePosition.6:value :updateRowPositions2x2.1:col3
-    * jump *label132 greaterThanEq :updatePosition.6:value 0.0784313725490196
-    * jump *label134 lessThanEq :updatePosition.6:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.6:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.6:dy
-    * set :findBestPosition:best :updatePosition.6:value
+  441 jump *label132 greaterThanEq :updateRowPositions2x2.1:col3 0.0784313725490196
+  442 jump *label134 lessThanEq :updateRowPositions2x2.1:col3 :findBestPosition:best
+  443 set :findDrillLocationLocal:diffX 0.5
+  444 set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  445 set :findBestPosition:best :updateRowPositions2x2.1:col3
   446 label *label134
   447 label *label135
   448 label *label132
   449 label *label133
   450 label *label131
   451 set :updatePosition.7:dx 1.5
-    * set :updatePosition.7:dy :updateRowPositions2x2.1:dy
+  452 set :updatePosition.7:dy -0.5
   453 set :updatePosition.7:value :updateRowPositions2x2.1:col4
-    * jump *label137 greaterThanEq :updatePosition.7:value 0.0784313725490196
-    * jump *label139 lessThanEq :updatePosition.7:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.7:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.7:dy
-    * set :findBestPosition:best :updatePosition.7:value
+  454 jump *label137 greaterThanEq :updateRowPositions2x2.1:col4 0.0784313725490196
+  455 jump *label139 lessThanEq :updateRowPositions2x2.1:col4 :findBestPosition:best
+  456 set :findDrillLocationLocal:diffX 1.5
+  457 set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  458 set :findBestPosition:best :updateRowPositions2x2.1:col4
   459 label *label139
   460 label *label140
   461 label *label137
 
   464 label *label120
   465 set :updateRowPositions2x2.2:dy 0.5
   466 set :updateRowPositions2x2.2:rowSum :findBestPosition:row3
-    * unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :updateRowPositions2x2.2:rowSum
+  467 unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :findBestPosition:row3
   468 set :updatePosition.8:dx -1.5
-    * set :updatePosition.8:dy :updateRowPositions2x2.2:dy
+  469 set :updatePosition.8:dy 0.5
   470 set :updatePosition.8:value :updateRowPositions2x2.2:col1
-    * jump *label143 greaterThanEq :updatePosition.8:value 0.0784313725490196
-    * jump *label145 lessThanEq :updatePosition.8:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.8:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.8:dy
-    * set :findBestPosition:best :updatePosition.8:value
+  471 jump *label143 greaterThanEq :updateRowPositions2x2.2:col1 0.0784313725490196
+  472 jump *label145 lessThanEq :updateRowPositions2x2.2:col1 :findBestPosition:best
+  473 set :findDrillLocationLocal:diffX -1.5
+  474 set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  475 set :findBestPosition:best :updateRowPositions2x2.2:col1
   476 label *label145
   477 label *label146
   478 label *label143
   479 label *label144
   480 label *label142
   481 set :updatePosition.9:dx -0.5
-    * set :updatePosition.9:dy :updateRowPositions2x2.2:dy
+  482 set :updatePosition.9:dy 0.5
   483 set :updatePosition.9:value :updateRowPositions2x2.2:col2
-    * jump *label148 greaterThanEq :updatePosition.9:value 0.0784313725490196
-    * jump *label150 lessThanEq :updatePosition.9:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.9:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.9:dy
-    * set :findBestPosition:best :updatePosition.9:value
+  484 jump *label148 greaterThanEq :updateRowPositions2x2.2:col2 0.0784313725490196
+  485 jump *label150 lessThanEq :updateRowPositions2x2.2:col2 :findBestPosition:best
+  486 set :findDrillLocationLocal:diffX -0.5
+  487 set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  488 set :findBestPosition:best :updateRowPositions2x2.2:col2
   489 label *label150
   490 label *label151
   491 label *label148
   492 label *label149
   493 label *label147
   494 set :updatePosition.10:dx 0.5
-    * set :updatePosition.10:dy :updateRowPositions2x2.2:dy
+  495 set :updatePosition.10:dy 0.5
   496 set :updatePosition.10:value :updateRowPositions2x2.2:col3
-    * jump *label153 greaterThanEq :updatePosition.10:value 0.0784313725490196
-    * jump *label155 lessThanEq :updatePosition.10:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.10:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.10:dy
-    * set :findBestPosition:best :updatePosition.10:value
+  497 jump *label153 greaterThanEq :updateRowPositions2x2.2:col3 0.0784313725490196
+  498 jump *label155 lessThanEq :updateRowPositions2x2.2:col3 :findBestPosition:best
+  499 set :findDrillLocationLocal:diffX 0.5
+  500 set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  501 set :findBestPosition:best :updateRowPositions2x2.2:col3
   502 label *label155
   503 label *label156
   504 label *label153
   505 label *label154
   506 label *label152
   507 set :updatePosition.11:dx 1.5
-    * set :updatePosition.11:dy :updateRowPositions2x2.2:dy
+  508 set :updatePosition.11:dy 0.5
   509 set :updatePosition.11:value :updateRowPositions2x2.2:col4
-    * jump *label158 greaterThanEq :updatePosition.11:value 0.0784313725490196
-    * jump *label160 lessThanEq :updatePosition.11:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.11:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.11:dy
-    * set :findBestPosition:best :updatePosition.11:value
+  510 jump *label158 greaterThanEq :updateRowPositions2x2.2:col4 0.0784313725490196
+  511 jump *label160 lessThanEq :updateRowPositions2x2.2:col4 :findBestPosition:best
+  512 set :findDrillLocationLocal:diffX 1.5
+  513 set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  514 set :findBestPosition:best :updateRowPositions2x2.2:col4
   515 label *label160
   516 label *label161
   517 label *label158
 
   520 label *label141
   521 set :updateRowPositions2x2.3:dy 1.5
   522 set :updateRowPositions2x2.3:rowSum :findBestPosition:row4
-    * unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :updateRowPositions2x2.3:rowSum
+  523 unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :findBestPosition:row4
   524 set :updatePosition.12:dx -1.5
-    * set :updatePosition.12:dy :updateRowPositions2x2.3:dy
+  525 set :updatePosition.12:dy 1.5
   526 set :updatePosition.12:value :updateRowPositions2x2.3:col1
-    * jump *label164 greaterThanEq :updatePosition.12:value 0.0784313725490196
-    * jump *label166 lessThanEq :updatePosition.12:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.12:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.12:dy
-    * set :findBestPosition:best :updatePosition.12:value
+  527 jump *label164 greaterThanEq :updateRowPositions2x2.3:col1 0.0784313725490196
+  528 jump *label166 lessThanEq :updateRowPositions2x2.3:col1 :findBestPosition:best
+  529 set :findDrillLocationLocal:diffX -1.5
+  530 set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  531 set :findBestPosition:best :updateRowPositions2x2.3:col1
   532 label *label166
   533 label *label167
   534 label *label164
   535 label *label165
   536 label *label163
   537 set :updatePosition.13:dx -0.5
-    * set :updatePosition.13:dy :updateRowPositions2x2.3:dy
+  538 set :updatePosition.13:dy 1.5
   539 set :updatePosition.13:value :updateRowPositions2x2.3:col2
-    * jump *label169 greaterThanEq :updatePosition.13:value 0.0784313725490196
-    * jump *label171 lessThanEq :updatePosition.13:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.13:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.13:dy
-    * set :findBestPosition:best :updatePosition.13:value
+  540 jump *label169 greaterThanEq :updateRowPositions2x2.3:col2 0.0784313725490196
+  541 jump *label171 lessThanEq :updateRowPositions2x2.3:col2 :findBestPosition:best
+  542 set :findDrillLocationLocal:diffX -0.5
+  543 set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  544 set :findBestPosition:best :updateRowPositions2x2.3:col2
   545 label *label171
   546 label *label172
   547 label *label169
   548 label *label170
   549 label *label168
   550 set :updatePosition.14:dx 0.5
-    * set :updatePosition.14:dy :updateRowPositions2x2.3:dy
+  551 set :updatePosition.14:dy 1.5
   552 set :updatePosition.14:value :updateRowPositions2x2.3:col3
-    * jump *label174 greaterThanEq :updatePosition.14:value 0.0784313725490196
-    * jump *label176 lessThanEq :updatePosition.14:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.14:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.14:dy
-    * set :findBestPosition:best :updatePosition.14:value
+  553 jump *label174 greaterThanEq :updateRowPositions2x2.3:col3 0.0784313725490196
+  554 jump *label176 lessThanEq :updateRowPositions2x2.3:col3 :findBestPosition:best
+  555 set :findDrillLocationLocal:diffX 0.5
+  556 set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  557 set :findBestPosition:best :updateRowPositions2x2.3:col3
   558 label *label176
   559 label *label177
   560 label *label174
   561 label *label175
   562 label *label173
   563 set :updatePosition.15:dx 1.5
-    * set :updatePosition.15:dy :updateRowPositions2x2.3:dy
+  564 set :updatePosition.15:dy 1.5
   565 set :updatePosition.15:value :updateRowPositions2x2.3:col4
-    * jump *label179 greaterThanEq :updatePosition.15:value 0.0784313725490196
-    * jump *label181 lessThanEq :updatePosition.15:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.15:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.15:dy
-    * set :findBestPosition:best :updatePosition.15:value
+  566 jump *label179 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
+  567 jump *label181 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
+  568 set :findDrillLocationLocal:diffX 1.5
+  569 set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  570 set :findBestPosition:best :updateRowPositions2x2.3:col4
   571 label *label181
   572 label *label182
   573 label *label179
 
   582 op add *tmp243 :findBestPosition:y2 :findBestPosition:y3
   583 op add :findBestPosition:row2.1 *tmp243 :findBestPosition:y4
   584 op add *tmp245 :findBestPosition:y3 :findBestPosition:y4
-    * op add :findBestPosition:row3.1 *tmp245 :findBestPosition:y5
+  585 op add :findBestPosition:row3.1 *tmp245 :computeRowValues*retval
   586 set :updateRowPositions3x3:dy -1
   587 set :updateRowPositions3x3:rowSum :findBestPosition:row1.1
-    * unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :updateRowPositions3x3:rowSum
+  588 unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :findBestPosition:row1.1
   589 set :updatePosition.16:dx -1
-    * set :updatePosition.16:dy :updateRowPositions3x3:dy
+  590 set :updatePosition.16:dy -1
   591 set :updatePosition.16:value :updateRowPositions3x3:col1
-    * jump *label187 greaterThanEq :updatePosition.16:value 0.0784313725490196
-    * jump *label189 lessThanEq :updatePosition.16:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.16:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.16:dy
-    * set :findBestPosition:best :updatePosition.16:value
+  592 jump *label187 greaterThanEq :updateRowPositions3x3:col1 0.0784313725490196
+  593 jump *label189 lessThanEq :updateRowPositions3x3:col1 0
+  594 set :findDrillLocationLocal:diffX -1
+  595 set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  596 set :findBestPosition:best :updateRowPositions3x3:col1
   597 label *label189
   598 label *label190
   599 label *label187
   600 label *label188
   601 label *label186
   602 set :updatePosition.17:dx 0
-    * set :updatePosition.17:dy :updateRowPositions3x3:dy
+  603 set :updatePosition.17:dy -1
   604 set :updatePosition.17:value :updateRowPositions3x3:col2
-    * jump *label192 greaterThanEq :updatePosition.17:value 0.0784313725490196
-    * jump *label194 lessThanEq :updatePosition.17:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.17:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.17:dy
-    * set :findBestPosition:best :updatePosition.17:value
+  605 jump *label192 greaterThanEq :updateRowPositions3x3:col2 0.0784313725490196
+  606 jump *label194 lessThanEq :updateRowPositions3x3:col2 :findBestPosition:best
+  607 set :findDrillLocationLocal:diffX 0
+  608 set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  609 set :findBestPosition:best :updateRowPositions3x3:col2
   610 label *label194
   611 label *label195
   612 label *label192
   613 label *label193
   614 label *label191
   615 set :updatePosition.18:dx 1
-    * set :updatePosition.18:dy :updateRowPositions3x3:dy
+  616 set :updatePosition.18:dy -1
   617 set :updatePosition.18:value :updateRowPositions3x3:col3
-    * jump *label197 greaterThanEq :updatePosition.18:value 0.0784313725490196
-    * jump *label199 lessThanEq :updatePosition.18:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.18:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.18:dy
-    * set :findBestPosition:best :updatePosition.18:value
+  618 jump *label197 greaterThanEq :updateRowPositions3x3:col3 0.0784313725490196
+  619 jump *label199 lessThanEq :updateRowPositions3x3:col3 :findBestPosition:best
+  620 set :findDrillLocationLocal:diffX 1
+  621 set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  622 set :findBestPosition:best :updateRowPositions3x3:col3
   623 label *label199
   624 label *label200
   625 label *label197
 
   628 label *label185
   629 set :updateRowPositions3x3.1:dy 0
   630 set :updateRowPositions3x3.1:rowSum :findBestPosition:row2.1
-    * unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :updateRowPositions3x3.1:rowSum
+  631 unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :findBestPosition:row2.1
   632 set :updatePosition.19:dx -1
-    * set :updatePosition.19:dy :updateRowPositions3x3.1:dy
+  633 set :updatePosition.19:dy 0
   634 set :updatePosition.19:value :updateRowPositions3x3.1:col1
-    * jump *label203 greaterThanEq :updatePosition.19:value 0.0784313725490196
-    * jump *label205 lessThanEq :updatePosition.19:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.19:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.19:dy
-    * set :findBestPosition:best :updatePosition.19:value
+  635 jump *label203 greaterThanEq :updateRowPositions3x3.1:col1 0.0784313725490196
+  636 jump *label205 lessThanEq :updateRowPositions3x3.1:col1 :findBestPosition:best
+  637 set :findDrillLocationLocal:diffX -1
+  638 set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  639 set :findBestPosition:best :updateRowPositions3x3.1:col1
   640 label *label205
   641 label *label206
   642 label *label203
   643 label *label204
   644 label *label202
   645 set :updatePosition.20:dx 0
-    * set :updatePosition.20:dy :updateRowPositions3x3.1:dy
+  646 set :updatePosition.20:dy 0
   647 set :updatePosition.20:value :updateRowPositions3x3.1:col2
-    * jump *label208 greaterThanEq :updatePosition.20:value 0.0784313725490196
-    * jump *label210 lessThanEq :updatePosition.20:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.20:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.20:dy
-    * set :findBestPosition:best :updatePosition.20:value
+  648 jump *label208 greaterThanEq :updateRowPositions3x3.1:col2 0.0784313725490196
+  649 jump *label210 lessThanEq :updateRowPositions3x3.1:col2 :findBestPosition:best
+  650 set :findDrillLocationLocal:diffX 0
+  651 set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  652 set :findBestPosition:best :updateRowPositions3x3.1:col2
   653 label *label210
   654 label *label211
   655 label *label208
   656 label *label209
   657 label *label207
   658 set :updatePosition.21:dx 1
-    * set :updatePosition.21:dy :updateRowPositions3x3.1:dy
+  659 set :updatePosition.21:dy 0
   660 set :updatePosition.21:value :updateRowPositions3x3.1:col3
-    * jump *label213 greaterThanEq :updatePosition.21:value 0.0784313725490196
-    * jump *label215 lessThanEq :updatePosition.21:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.21:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.21:dy
-    * set :findBestPosition:best :updatePosition.21:value
+  661 jump *label213 greaterThanEq :updateRowPositions3x3.1:col3 0.0784313725490196
+  662 jump *label215 lessThanEq :updateRowPositions3x3.1:col3 :findBestPosition:best
+  663 set :findDrillLocationLocal:diffX 1
+  664 set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  665 set :findBestPosition:best :updateRowPositions3x3.1:col3
   666 label *label215
   667 label *label216
   668 label *label213
 
   671 label *label201
   672 set :updateRowPositions3x3.2:dy 1
   673 set :updateRowPositions3x3.2:rowSum :findBestPosition:row3.1
-    * unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :updateRowPositions3x3.2:rowSum
+  674 unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :findBestPosition:row3.1
   675 set :updatePosition.22:dx -1
-    * set :updatePosition.22:dy :updateRowPositions3x3.2:dy
+  676 set :updatePosition.22:dy 1
   677 set :updatePosition.22:value :updateRowPositions3x3.2:col1
-    * jump *label219 greaterThanEq :updatePosition.22:value 0.0784313725490196
-    * jump *label221 lessThanEq :updatePosition.22:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.22:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.22:dy
-    * set :findBestPosition:best :updatePosition.22:value
+  678 jump *label219 greaterThanEq :updateRowPositions3x3.2:col1 0.0784313725490196
+  679 jump *label221 lessThanEq :updateRowPositions3x3.2:col1 :findBestPosition:best
+  680 set :findDrillLocationLocal:diffX -1
+  681 set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  682 set :findBestPosition:best :updateRowPositions3x3.2:col1
   683 label *label221
   684 label *label222
   685 label *label219
   686 label *label220
   687 label *label218
   688 set :updatePosition.23:dx 0
-    * set :updatePosition.23:dy :updateRowPositions3x3.2:dy
+  689 set :updatePosition.23:dy 1
   690 set :updatePosition.23:value :updateRowPositions3x3.2:col2
-    * jump *label224 greaterThanEq :updatePosition.23:value 0.0784313725490196
-    * jump *label226 lessThanEq :updatePosition.23:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.23:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.23:dy
-    * set :findBestPosition:best :updatePosition.23:value
+  691 jump *label224 greaterThanEq :updateRowPositions3x3.2:col2 0.0784313725490196
+  692 jump *label226 lessThanEq :updateRowPositions3x3.2:col2 :findBestPosition:best
+  693 set :findDrillLocationLocal:diffX 0
+  694 set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  695 set :findBestPosition:best :updateRowPositions3x3.2:col2
   696 label *label226
   697 label *label227
   698 label *label224
   699 label *label225
   700 label *label223
   701 set :updatePosition.24:dx 1
-    * set :updatePosition.24:dy :updateRowPositions3x3.2:dy
+  702 set :updatePosition.24:dy 1
   703 set :updatePosition.24:value :updateRowPositions3x3.2:col3
-    * jump *label229 greaterThanEq :updatePosition.24:value 0.0784313725490196
-    * jump *label231 lessThanEq :updatePosition.24:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.24:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.24:dy
-    * set :findBestPosition:best :updatePosition.24:value
+  704 jump *label229 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
+  705 jump *label231 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
+  706 set :findDrillLocationLocal:diffX 1
+  707 set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  708 set :findBestPosition:best :updateRowPositions3x3.2:col3
   709 label *label231
   710 label *label232
   711 label *label229
 
   719 op add :findBestPosition:row1.2 *tmp287 :findBestPosition:y4
   720 op add *tmp289 :findBestPosition:y2 :findBestPosition:y3
   721 op add *tmp290 *tmp289 :findBestPosition:y4
-    * op add :findBestPosition:row2.2 *tmp290 :findBestPosition:y5
+  722 op add :findBestPosition:row2.2 *tmp290 :computeRowValues*retval
   723 set :updateRowPositions4x4:dy -0.5
   724 set :updateRowPositions4x4:rowSum :findBestPosition:row1.2
-    * unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 0 0 :updateRowPositions4x4:rowSum
+  725 unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 0 0 :findBestPosition:row1.2
   726 set :updatePosition.25:dx -0.5
-    * set :updatePosition.25:dy :updateRowPositions4x4:dy
+  727 set :updatePosition.25:dy -0.5
   728 set :updatePosition.25:value :updateRowPositions4x4:col1
-    * jump *label235 greaterThanEq :updatePosition.25:value 0.0784313725490196
-    * jump *label237 lessThanEq :updatePosition.25:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.25:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.25:dy
-    * set :findBestPosition:best :updatePosition.25:value
+  729 jump *label235 greaterThanEq :updateRowPositions4x4:col1 0.0784313725490196
+  730 jump *label237 lessThanEq :updateRowPositions4x4:col1 0
+  731 set :findDrillLocationLocal:diffX -0.5
+  732 set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  733 set :findBestPosition:best :updateRowPositions4x4:col1
   734 label *label237
   735 label *label238
   736 label *label235
   737 label *label236
   738 label *label234
   739 set :updatePosition.26:dx 0.5
-    * set :updatePosition.26:dy :updateRowPositions4x4:dy
+  740 set :updatePosition.26:dy -0.5
   741 set :updatePosition.26:value :updateRowPositions4x4:col2
-    * jump *label240 greaterThanEq :updatePosition.26:value 0.0784313725490196
-    * jump *label242 lessThanEq :updatePosition.26:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.26:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.26:dy
-    * set :findBestPosition:best :updatePosition.26:value
+  742 jump *label240 greaterThanEq :updateRowPositions4x4:col2 0.0784313725490196
+  743 jump *label242 lessThanEq :updateRowPositions4x4:col2 :findBestPosition:best
+  744 set :findDrillLocationLocal:diffX 0.5
+  745 set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  746 set :findBestPosition:best :updateRowPositions4x4:col2
   747 label *label242
   748 label *label243
   749 label *label240
 
   752 label *label233
   753 set :updateRowPositions4x4.1:dy 0.5
   754 set :updateRowPositions4x4.1:rowSum :findBestPosition:row2.2
-    * unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 0 0 :updateRowPositions4x4.1:rowSum
+  755 unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 0 0 :findBestPosition:row2.2
   756 set :updatePosition.27:dx -0.5
-    * set :updatePosition.27:dy :updateRowPositions4x4.1:dy
+  757 set :updatePosition.27:dy 0.5
   758 set :updatePosition.27:value :updateRowPositions4x4.1:col1
-    * jump *label246 greaterThanEq :updatePosition.27:value 0.0784313725490196
-    * jump *label248 lessThanEq :updatePosition.27:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.27:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.27:dy
-    * set :findBestPosition:best :updatePosition.27:value
+  759 jump *label246 greaterThanEq :updateRowPositions4x4.1:col1 0.0784313725490196
+  760 jump *label248 lessThanEq :updateRowPositions4x4.1:col1 :findBestPosition:best
+  761 set :findDrillLocationLocal:diffX -0.5
+  762 set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  763 set :findBestPosition:best :updateRowPositions4x4.1:col1
   764 label *label248
   765 label *label249
   766 label *label246
   767 label *label247
   768 label *label245
   769 set :updatePosition.28:dx 0.5
-    * set :updatePosition.28:dy :updateRowPositions4x4.1:dy
+  770 set :updatePosition.28:dy 0.5
   771 set :updatePosition.28:value :updateRowPositions4x4.1:col2
-    * jump *label251 greaterThanEq :updatePosition.28:value 0.0784313725490196
-    * jump *label253 lessThanEq :updatePosition.28:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.28:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.28:dy
-    * set :findBestPosition:best :updatePosition.28:value
+  772 jump *label251 greaterThanEq :updateRowPositions4x4.1:col2 0.0784313725490196
+  773 jump *label253 lessThanEq :updateRowPositions4x4.1:col2 :findBestPosition:best
+  774 set :findDrillLocationLocal:diffX 0.5
+  775 set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  776 set :findBestPosition:best :updateRowPositions4x4.1:col2
   777 label *label253
   778 label *label254
   779 label *label251
 
   795 label *label255
   796 op mul *tmp158 :findBestPosition:best 255
   797 jump *label91 always
-    * set *tmp158 null
   798 label *label91
   799 set :findDrillLocationLocal:score *tmp158
-    * jump *label261 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:capacity
+  800 jump *label261 lessThanEq *tmp158 :findDrillLocationLocal:capacity
   801 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   802 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
+  803 set :findDrillLocationLocal:capacity *tmp158
   804 jump *label263 greaterThanEq :findDrillLocationLocal:limit 1000
-    * set .mapSpots :findDrillLocationLocal:score
+  805 set .mapSpots *tmp158
   806 label *label263
   807 label *label264
   808 jump *label265 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
   809 set :saveLocation:item :findDrillLocationLocal:item
-    * set :saveLocation:value :findDrillLocationLocal:score
+  810 set :saveLocation:value *tmp158
   811 set :saveLocation:x :findDrillLocationLocal:dx
   812 set :saveLocation:y :findDrillLocationLocal:dy
   813 op add .count .count 1
   814 set *tmp324 .count
-    * sensor *tmp326 :saveLocation:item @id
-    * write *tmp326 bank1 *tmp324
+  815 sensor *tmp326 :findDrillLocationLocal:item @id
+  816 write *tmp326 bank1 .count
   817 op add .count .count 1
-    * write :saveLocation:value bank1 .count
+  818 write :findDrillLocationLocal:score bank1 .count
   819 op add .count .count 1
-    * write :saveLocation:x bank1 .count
+  820 write :findDrillLocationLocal:dx bank1 .count
   821 op add .count .count 1
-    * write :saveLocation:y bank1 .count
+  822 write :findDrillLocationLocal:dy bank1 .count
   823 op add .locations .locations 1
   824 label *label267
   825 ucontrol unbind
 
   829 label *label266
   830 label *label261
   831 label *label262
-    * jump *label268 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
+  832 jump *label268 lessThanEq *tmp158 :findDrillLocationLocal:best
   833 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   834 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:best :findDrillLocationLocal:score
+  835 set :findDrillLocationLocal:best *tmp158
   836 label *label268
   837 label *label269
-    * jump *label270 greaterThan :findDrillLocationLocal:score :findDrillLocationLocal:last
+  838 jump *label270 greaterThan *tmp158 :findDrillLocationLocal:last
   839 jump *label90 always
   840 label *label270
   841 label *label271
-    * set :findDrillLocationLocal:last :findDrillLocationLocal:score
+  842 set :findDrillLocationLocal:last *tmp158
   843 op mul :round:x :findDrillLocationLocal:diffX 1.1
   844 op add *tmp342 :round:x 0.5
   845 op floor *tmp341 *tmp342
 
   868 set :saveLocation.1:y :findDrillLocationLocal:bestY
   869 op add .count .count 1
   870 set *tmp355 .count
-    * sensor *tmp357 :saveLocation.1:item @id
-    * write *tmp357 bank1 *tmp355
+  871 sensor *tmp357 :findDrillLocationLocal:item @id
+  872 write *tmp357 bank1 .count
   873 op add .count .count 1
-    * write :saveLocation.1:value bank1 .count
+  874 write :findDrillLocationLocal:best bank1 .count
   875 op add .count .count 1
-    * write :saveLocation.1:x bank1 .count
+  876 write :findDrillLocationLocal:bestX bank1 .count
   877 op add .count .count 1
-    * write :saveLocation.1:y bank1 .count
+  878 write :findDrillLocationLocal:bestY bank1 .count
   879 op add .locations .locations 1
   880 label *label276
-    * set :debugPrintSpot:text ""
   881 jump *label278 always
-    * op sub :round.2:x @second .start
-    * op add *tmp368 :round.2:x 0.5
-    * op floor *tmp367 *tmp368
   882 label *label280
   883 remark "Time: "
   884 remark *tmp367
   885 remark " s\n"
-    * op mul :debugPrintSpot:index 4 .locationsStart
-    * set *tmp371 .locations
-    * set :debugPrintSpot:i .locationsStart
   886 label *label281
-    * jump *label283 greaterThanEq :debugPrintSpot:i *tmp371
-    * op add :debugPrintSpot:index :debugPrintSpot:index 1
-    * read :debugPrintSpot:size bank1 :debugPrintSpot:index
-    * op add :debugPrintSpot:index :debugPrintSpot:index 1
-    * read :debugPrintSpot:x bank1 :debugPrintSpot:index
-    * op add :debugPrintSpot:index :debugPrintSpot:index 1
-    * read :debugPrintSpot:y bank1 :debugPrintSpot:index
-    * op add :debugPrintSpot:index :debugPrintSpot:index 1
+  887 jump *label283 greaterThanEq :debugPrintSpot:i .locations
   888 remark :debugPrintSpot:x
   889 remark ","
   890 remark " "
 
   898 op add :debugPrintSpot:i :debugPrintSpot:i 1
   899 jump *label281 always
   900 label *label283
-    * print :debugPrintSpot:text
+  901 print ""
   902 printflush message1
   903 label *label278
   904 label *label279
 
   913 label *label9
   914 set :moveTo.7:x :createTerrainMask:x
   915 set :moveTo.7:y :createTerrainMask:y
-    * set *tmp379 :moveTo.7:x
-    * set *tmp380 :moveTo.7:y
-    * set :moveTo.8:x *tmp379
-    * set :moveTo.8:y *tmp380
+  916 set *tmp379 :createTerrainMask:x
+  917 set *tmp380 :createTerrainMask:y
+  918 set :moveTo.8:x :moveTo.7:x
+  919 set :moveTo.8:y :moveTo.7:y
   920 set :moveTo.8:radius 6
   921 label *label287
-    * ucontrol within :moveTo.8:x :moveTo.8:y :moveTo.8:radius *tmp381
+  922 ucontrol within *tmp379 *tmp380 6 *tmp381
   923 jump *label289 notEqual *tmp381 false
-    * op sub *tmp383 :moveTo.8:radius 0.5
-    * ucontrol approach :moveTo.8:x :moveTo.8:y *tmp383
+  924 op sub *tmp383 6 0.5
+  925 ucontrol approach *tmp379 *tmp380 5.5
   926 label *label288
   927 jump *label287 always
   928 label *label289
 
   945 select :isBlocked:result equal type @air 0 1
   946 set *tmp387 :isBlocked:result
   947 label *label296
-    * op or :createTerrainMask:result *tmp384 *tmp387
+  948 op or :createTerrainMask:result *tmp384 :isBlocked:result
   949 label *label294
   950 op sub :createTerrainMask:c :createTerrainMask:c 1
   951 jump *label293 always
 
   956 label *label292
   957 set :createTerrainMask*retval :createTerrainMask:result
   958 jump *label284 always
-    * set :createTerrainMask*retval null
   959 label *label284
   960 return :createTerrainMask*retaddr
   961 end
 
   998 label *label300
   999 set :findPossiblePlacement*retval -1
  1000 jump *label297 always
-    * set :findPossiblePlacement*retval null
  1001 label *label297
  1002 return :findPossiblePlacement*retaddr
  1003 end
 
  1012 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1013 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1014 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label312 lessThan :tryPlaceGenerator:shift 0
+ 1015 jump *label312 lessThan :findPossiblePlacement*retval 0
  1016 op add *tmp407 :tryPlaceGenerator:centerX 0.5
-    * op add .water2X *tmp407 :tryPlaceGenerator:c
+ 1017 op add .water2X *tmp407 :findPossiblePlacement:x
  1018 op add *tmp409 :tryPlaceGenerator:centerY 0.5
-    * op add .water2Y *tmp409 :tryPlaceGenerator:r
+ 1019 op add .water2Y *tmp409 :findPossiblePlacement:y
  1020 op add *tmp411 :tryPlaceGenerator:centerX 2.5
-    * op add .generatorX *tmp411 :tryPlaceGenerator:c
+ 1021 op add .generatorX *tmp411 :findPossiblePlacement:x
  1022 op add *tmp413 :tryPlaceGenerator:centerY 0.5
-    * op add .generatorY *tmp413 :tryPlaceGenerator:r
-    * op shl *tmp415 :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:shift
+ 1023 op add .generatorY *tmp409 :findPossiblePlacement:y
+ 1024 op shl *tmp415 :tryPlaceGenerator:generatorHorizontal :findPossiblePlacement*retval
  1025 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp415
  1026 jump *label313 always
  1027 label *label312
 
  1035 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1036 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1037 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label315 greaterThanEq :tryPlaceGenerator:shift 0
+ 1038 jump *label315 greaterThanEq :findPossiblePlacement*retval 0
  1039 set :tryPlaceGenerator*retval false
  1040 jump *label310 always
  1041 label *label315
  1042 label *label316
  1043 op add *tmp419 :tryPlaceGenerator:centerX 0.5
-    * op add .water2X *tmp419 :tryPlaceGenerator:c
+ 1044 op add .water2X *tmp419 :findPossiblePlacement:x
  1045 op add *tmp421 :tryPlaceGenerator:centerY 0.5
-    * op add .water2Y *tmp421 :tryPlaceGenerator:r
+ 1046 op add .water2Y *tmp421 :findPossiblePlacement:y
  1047 op add *tmp423 :tryPlaceGenerator:centerX 0.5
-    * op add .generatorX *tmp423 :tryPlaceGenerator:c
+ 1048 op add .generatorX *tmp419 :findPossiblePlacement:x
  1049 op add *tmp425 :tryPlaceGenerator:centerY 2.5
-    * op add .generatorY *tmp425 :tryPlaceGenerator:r
-    * op shl *tmp427 :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:shift
+ 1050 op add .generatorY *tmp425 :findPossiblePlacement:y
+ 1051 op shl *tmp427 :tryPlaceGenerator:generatorVertical :findPossiblePlacement*retval
  1052 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp427
  1053 label *label313
  1054 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1061 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1062 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1063 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label318 greaterThanEq :tryPlaceGenerator:shift 0
+ 1064 jump *label318 greaterThanEq :findPossiblePlacement*retval 0
  1065 set :tryPlaceGenerator*retval false
  1066 jump *label310 always
  1067 label *label318
  1068 label *label319
-    * op add .nodeX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * op add .nodeY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * op shl *tmp433 1 :tryPlaceGenerator:shift
+ 1069 op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
+ 1070 op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
+ 1071 op shl *tmp433 1 :findPossiblePlacement*retval
  1072 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp433
  1073 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
  1074 set :findPossiblePlacement:placementMask 1
 
  1080 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1081 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1082 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label321 greaterThanEq :tryPlaceGenerator:shift 0
+ 1083 jump *label321 greaterThanEq :findPossiblePlacement*retval 0
  1084 set :tryPlaceGenerator*retval false
  1085 jump *label310 always
  1086 label *label321
  1087 label *label322
-    * op add .panelX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * op add .panelY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * op shl *tmp439 1 :tryPlaceGenerator:shift
+ 1088 op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
+ 1089 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
+ 1090 op shl *tmp439 1 :findPossiblePlacement*retval
  1091 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp439
  1092 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
  1093 set :findPossiblePlacement:placementMask 1
 
  1099 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1100 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1101 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label324 greaterThanEq :tryPlaceGenerator:shift 0
+ 1102 jump *label324 greaterThanEq :findPossiblePlacement*retval 0
  1103 set :tryPlaceGenerator*retval false
  1104 jump *label310 always
  1105 label *label324
  1106 label *label325
-    * op add .batteryX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * op add .batteryY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * op shl *tmp445 1 :tryPlaceGenerator:shift
-    * op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp445
+ 1107 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
+ 1108 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
+ 1109 op shl *tmp445 1 :findPossiblePlacement*retval
  1110 set :tryPlaceGenerator*retval true
  1111 jump *label310 always
-    * set :tryPlaceGenerator*retval null
  1112 label *label310
  1113 return :tryPlaceGenerator*retaddr
  1114 end
 
  1134 set :createFixedMatrix:row4 0b0011100
  1135 set :createFixedMatrix:row5 0b0000000
  1136 set :createFixedMatrix:row6 0b0000000
-    * set *tmp448 :createFixedMatrix:row0
-    * op shl *tmp449 :createFixedMatrix:row1 7
-    * op or *tmp450 *tmp448 *tmp449
-    * op shl *tmp451 :createFixedMatrix:row2 14
-    * op or *tmp452 *tmp450 *tmp451
-    * op shl *tmp453 :createFixedMatrix:row3 21
-    * op or *tmp454 *tmp452 *tmp453
-    * op shl *tmp455 :createFixedMatrix:row4 28
-    * op or *tmp456 *tmp454 *tmp455
-    * op shl *tmp457 :createFixedMatrix:row5 35
-    * op or *tmp458 *tmp456 *tmp457
-    * op shl *tmp459 :createFixedMatrix:row6 42
-    * op or *tmp447 *tmp458 *tmp459
+ 1137 set *tmp448 0b0000000
+ 1138 op shl *tmp449 0b0000000 7
+ 1139 op or *tmp450 :createFixedMatrix:row0 0
+ 1140 op shl *tmp451 0b0011100 14
+ 1141 op or *tmp452 *tmp450 458752
+ 1142 op shl *tmp453 0b0011100 21
+ 1143 op or *tmp454 *tmp452 58720256
+ 1144 op shl *tmp455 0b0011100 28
+ 1145 op or *tmp456 *tmp454 7516192768
+ 1146 op shl *tmp457 0b0000000 35
+ 1147 op or *tmp458 *tmp456 0
+ 1148 op shl *tmp459 0b0000000 42
+ 1149 op or *tmp447 *tmp458 0
  1150 label *label328
-    * op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:plainTerrainMask *tmp447
+ 1151 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval *tmp447
  1152 set :createFixedMatrix.1:row0 0b1000001
  1153 set :createFixedMatrix.1:row1 0b0000000
  1154 set :createFixedMatrix.1:row2 0b0011100
 
  1156 set :createFixedMatrix.1:row4 0b0011100
  1157 set :createFixedMatrix.1:row5 0b0000000
  1158 set :createFixedMatrix.1:row6 0b1000001
-    * set *tmp463 :createFixedMatrix.1:row0
-    * op shl *tmp464 :createFixedMatrix.1:row1 7
-    * op or *tmp465 *tmp463 *tmp464
-    * op shl *tmp466 :createFixedMatrix.1:row2 14
-    * op or *tmp467 *tmp465 *tmp466
-    * op shl *tmp468 :createFixedMatrix.1:row3 21
-    * op or *tmp469 *tmp467 *tmp468
-    * op shl *tmp470 :createFixedMatrix.1:row4 28
-    * op or *tmp471 *tmp469 *tmp470
-    * op shl *tmp472 :createFixedMatrix.1:row5 35
-    * op or *tmp473 *tmp471 *tmp472
-    * op shl *tmp474 :createFixedMatrix.1:row6 42
-    * op or *tmp462 *tmp473 *tmp474
+ 1159 set *tmp463 0b1000001
+ 1160 op shl *tmp464 0b0000000 7
+ 1161 op or *tmp465 :createFixedMatrix.1:row0 0
+ 1162 op shl *tmp466 0b0011100 14
+ 1163 op or *tmp467 *tmp465 458752
+ 1164 op shl *tmp468 0b0011100 21
+ 1165 op or *tmp469 *tmp467 58720256
+ 1166 op shl *tmp470 0b0011100 28
+ 1167 op or *tmp471 *tmp469 7516192768
+ 1168 op shl *tmp472 0b0000000 35
+ 1169 op or *tmp473 *tmp471 0
+ 1170 op shl *tmp474 0b1000001 42
+ 1171 op or *tmp462 *tmp473 285873023221760
  1172 label *label329
  1173 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp462
  1174 set :createFixedMatrix.2:row0 0b11
  1175 set :createFixedMatrix.2:row1 0b11
-    * set *tmp478 :createFixedMatrix.2:row0
-    * op shl *tmp479 :createFixedMatrix.2:row1 7
-    * op or *tmp477 *tmp478 *tmp479
+ 1176 set *tmp478 0b11
+ 1177 op shl *tmp479 0b11 7
+ 1178 op or *tmp477 :createFixedMatrix.2:row0 384
  1179 label *label330
  1180 set :layoutThoriumDrillAtLocation:extractorMask *tmp477
-    * set :printMask:text "terrainMask:"
-    * set :printMask:mask :layoutThoriumDrillAtLocation:terrainMask
  1181 setaddr :printMask*retaddr *label331 (h:*label331)
  1182 call *label13 *invalid :printMask*retval (m:*label331) (h:*label331)
  1183 label *label331
-    * set :printMask:text "cornersMask:"
-    * set :printMask:mask :layoutThoriumDrillAtLocation:cornersMask
  1184 setaddr :printMask*retaddr *label332 (h:*label332)
  1185 call *label13 *invalid :printMask*retval (m:*label332) (h:*label332)
  1186 label *label332
-    * set :printMask:text "extractorMask:"
-    * set :printMask:mask :layoutThoriumDrillAtLocation:extractorMask
+ 1187 set :printMask:mask *tmp477
  1188 setaddr :printMask*retaddr *label333 (h:*label333)
  1189 call *label13 *invalid :printMask*retval (m:*label333) (h:*label333)
  1190 label *label333
-    * set :debugStop:format ""
  1191 jump *label335 always
-    * print :debugStop:format
+ 1192 print ""
  1193 jump *label338 always
  1194 printflush message1
  1195 control enabled switch1 true
 
  1206 label *label336
  1207 label *label334
  1208 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
-    * set :findPossiblePlacement:placementMask :layoutThoriumDrillAtLocation:extractorMask
+ 1209 set :findPossiblePlacement:placementMask *tmp477
  1210 set :findPossiblePlacement:width 2
  1211 set :findPossiblePlacement:height 2
  1212 setaddr :findPossiblePlacement*retaddr *label343 (h:*label343)
 
  1215 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1216 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
  1217 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
-    * jump *label344 lessThan :layoutThoriumDrillAtLocation:shift 0
+ 1218 jump *label344 lessThan :findPossiblePlacement*retval 0
  1219 op add *tmp488 .drillX 0.5
-    * op add .water1X *tmp488 :layoutThoriumDrillAtLocation:c
+ 1220 op add .water1X *tmp488 :findPossiblePlacement:x
  1221 op add *tmp490 .drillY 0.5
-    * op add .water1Y *tmp490 :layoutThoriumDrillAtLocation:r
-    * op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:shift
+ 1222 op add .water1Y *tmp490 :findPossiblePlacement:y
+ 1223 op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :findPossiblePlacement*retval
  1224 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
  1225 label *label344
  1226 label *label345
  1227 set :createFixedMatrix.3:row0 0b1111
  1228 set :createFixedMatrix.3:row1 0b1111
-    * set *tmp493 :createFixedMatrix.3:row0
-    * op shl *tmp494 :createFixedMatrix.3:row1 7
-    * op or *tmp492 *tmp493 *tmp494
+ 1229 set *tmp493 0b1111
+ 1230 op shl *tmp494 0b1111 7
+ 1231 op or *tmp492 :createFixedMatrix.3:row0 1920
  1232 label *label346
  1233 set :layoutThoriumDrillAtLocation:generatorHorizontal *tmp492
  1234 set :createFixedMatrix.4:row0 0b11
  1235 set :createFixedMatrix.4:row1 0b11
  1236 set :createFixedMatrix.4:row2 0b11
  1237 set :createFixedMatrix.4:row3 0b11
-    * set *tmp497 :createFixedMatrix.4:row0
-    * op shl *tmp498 :createFixedMatrix.4:row1 7
-    * op or *tmp499 *tmp497 *tmp498
-    * op shl *tmp500 :createFixedMatrix.4:row2 14
-    * op or *tmp501 *tmp499 *tmp500
-    * op shl *tmp502 :createFixedMatrix.4:row3 21
-    * op or *tmp496 *tmp501 *tmp502
+ 1238 set *tmp497 0b11
+ 1239 op shl *tmp498 0b11 7
+ 1240 op or *tmp499 :createFixedMatrix.4:row0 384
+ 1241 op shl *tmp500 0b11 14
+ 1242 op or *tmp501 *tmp499 49152
+ 1243 op shl *tmp502 0b11 21
+ 1244 op or *tmp496 *tmp501 6291456
  1245 label *label347
  1246 set :layoutThoriumDrillAtLocation:generatorVertical *tmp496
  1247 set :tryPlaceGenerator:centerX .drillX
  1248 set :tryPlaceGenerator:centerY .drillY
  1249 set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:terrainMask
-    * set :tryPlaceGenerator:generatorHorizontal :layoutThoriumDrillAtLocation:generatorHorizontal
-    * set :tryPlaceGenerator:generatorVertical :layoutThoriumDrillAtLocation:generatorVertical
+ 1250 set :tryPlaceGenerator:generatorHorizontal *tmp492
+ 1251 set :tryPlaceGenerator:generatorVertical *tmp496
  1252 setaddr :tryPlaceGenerator*retaddr *label348 (h:*label348)
  1253 call *label11 *invalid :tryPlaceGenerator*retval (m:*label348) (h:*label348)
  1254 label *label348
 
  1289 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
  1290 set :shiftMask:shiftX *tmp510
  1291 set :shiftMask:shiftY *tmp511
-    * op abs *tmp513 :shiftMask:shiftX
+ 1292 op abs *tmp513 *tmp510
  1293 op greaterThan *tmp514 *tmp513 6
-    * op abs *tmp515 :shiftMask:shiftY
+ 1294 op abs *tmp515 *tmp511
  1295 op greaterThan *tmp516 *tmp515 6
  1296 op or *tmp517 *tmp514 *tmp516
  1297 jump *label360 equal *tmp517 false
 
  1299 jump *label359 always
  1300 label *label360
  1301 label *label361
-    * op mul *tmp519 7 :shiftMask:shiftY
-    * op add :shiftMask:shift :shiftMask:shiftX *tmp519
+ 1302 op mul *tmp519 7 *tmp511
+ 1303 op add :shiftMask:shift *tmp510 *tmp519
  1304 jump *label362 lessThanEq :shiftMask:shift 0
  1305 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
-    * op and *tmp524 :shiftMask:mask :shiftMask:clearMask
+ 1306 op and *tmp524 :layoutThoriumDrillAtLocation:terrainMask :shiftMask:clearMask
  1307 op shl :shiftMask:mask *tmp524 :shiftMask:shift
  1308 jump *label363 always
  1309 label *label362
  1310 op sub *tmp526 0 :shiftMask:shift
-    * op shr :shiftMask:mask :shiftMask:mask *tmp526
+ 1311 op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask *tmp526
  1312 label *label363
-    * jump *label364 equal :shiftMask:shiftX 0
-    * op abs *tmp529 :shiftMask:shiftX
-    * op sub *tmp530 7 *tmp529
+ 1313 jump *label364 equal *tmp510 0
+ 1314 op abs *tmp529 *tmp510
+ 1315 op sub *tmp530 7 *tmp513
  1316 op shr :shiftMask:keep 0b1111111 *tmp530
-    * jump *label366 lessThanEq :shiftMask:shiftX 0
-    * op abs *tmp534 :shiftMask:shiftX
-    * op sub *tmp535 7 *tmp534
-    * op shl :shiftMask:keep :shiftMask:keep *tmp535
+ 1317 jump *label366 lessThanEq *tmp510 0
+ 1318 op abs *tmp534 *tmp510
+ 1319 op sub *tmp535 7 *tmp513
+ 1320 op shl :shiftMask:keep :shiftMask:keep *tmp530
  1321 label *label366
  1322 label *label367
  1323 op shl *tmp536 :shiftMask:keep 7
 
  1331 label *label365
  1332 set *tmp512 :shiftMask:mask
  1333 jump *label359 always
-    * set *tmp512 null
  1334 label *label359
  1335 set :layoutThoriumDrillAtLocation:shiftedMask *tmp512
-    * op or :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:newTerrainMask :layoutThoriumDrillAtLocation:shiftedMask
+ 1336 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp512
  1337 op add *tmp540 .drillX :layoutThoriumDrillAtLocation:sx
  1338 op add *tmp541 .drillY :layoutThoriumDrillAtLocation:sy
  1339 set :tryPlaceGenerator:centerX *tmp540
 
  1355 label *label353
  1356 set :layoutThoriumDrillAtLocation*retval true
  1357 jump *label326 always
-    * set :layoutThoriumDrillAtLocation*retval null
  1358 label *label326
  1359 return :layoutThoriumDrillAtLocation*retaddr
  1360 end
 
  1407 jump *label379 always
  1408 print :printMask:text
  1409 print "\n"
-    * op sub :printMask:r 7 1
  1410 label *label381
  1411 jump *label383 lessThan :printMask:r 0
-    * set :printMask:c 0
  1412 label *label384
  1413 jump *label386 greaterThanEq :printMask:c 7
-    * op mul *tmp547 7 :printMask:r
-    * op add *tmp548 *tmp547 :printMask:c
-    * op shl *tmp549 1 *tmp548
-    * op and *tmp550 :printMask:mask *tmp549
  1414 jump *label387 equal *tmp550 false
-    * set *tmp551 "x"
  1415 jump *label388 always
  1416 label *label387
-    * set *tmp551 "o"
  1417 label *label388
-    * print *tmp551
+ 1418 print "x"
  1419 label *label385
-    * op add :printMask:c :printMask:c 1
  1420 jump *label384 always
  1421 label *label386
  1422 print "\n"
  1423 label *label382
-    * op sub :printMask:r :printMask:r 1
  1424 jump *label381 always
  1425 label *label383
  1426 label *label379

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-206 instructions):
 
    19 select :spotValue:result notEqual solid false WALL value
    20 set *tmp1 :spotValue:result
    21 label *label17
-    * set :computeRowValues:x1 :spotValue:result
    22 op sub :spotValue.1:x :computeRowValues:x 1
    23 set :spotValue.1:y :computeRowValues:y
    24 set :spotValue.1:ore :computeRowValues:ore
 
    28 select :spotValue.1:result notEqual solid false WALL value
    29 set *tmp3 :spotValue.1:result
    30 label *label18
-    * set :computeRowValues:x2 :spotValue.1:result
    31 set :spotValue.2:x :computeRowValues:x
    32 set :spotValue.2:y :computeRowValues:y
    33 set :spotValue.2:ore :computeRowValues:ore
 
    37 select :spotValue.2:result notEqual solid false WALL value
    38 set *tmp5 :spotValue.2:result
    39 label *label19
-    * set :computeRowValues:x3 :spotValue.2:result
    40 op add :spotValue.3:x :computeRowValues:x 1
    41 set :spotValue.3:y :computeRowValues:y
    42 set :spotValue.3:ore :computeRowValues:ore
 
    46 select :spotValue.3:result notEqual solid false WALL value
    47 set *tmp7 :spotValue.3:result
    48 label *label20
-    * set :computeRowValues:x4 :spotValue.3:result
    49 op add :spotValue.4:x :computeRowValues:x 2
    50 set :spotValue.4:y :computeRowValues:y
    51 set :spotValue.4:ore :computeRowValues:ore
 
    55 select :spotValue.4:result notEqual solid false WALL value
    56 set *tmp9 :spotValue.4:result
    57 label *label21
-    * set :computeRowValues:x5 :spotValue.4:result
    58 jump *label22 notEqual :computeRowValues:size 2
-    * op add *tmp12 *tmp1 *tmp3
-    * op add *tmp13 *tmp3 *tmp5
-    * op add *tmp14 *tmp5 *tmp7
-    * op add *tmp15 *tmp7 *tmp9
+   59 op add *tmp12 :spotValue:result :spotValue.1:result
+   60 op add *tmp13 :spotValue.1:result :spotValue.2:result
+   61 op add *tmp14 :spotValue.2:result :spotValue.3:result
+   62 op add *tmp15 :spotValue.3:result :spotValue.4:result
    63 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
    64 jump *label16 always
    65 jump *label23 always
    66 label *label22
    67 jump *label24 notEqual :computeRowValues:size 3
-    * op add *tmp19 *tmp1 *tmp3
-    * op add *tmp20 *tmp19 *tmp5
-    * op add *tmp21 *tmp3 *tmp5
-    * op add *tmp22 *tmp21 *tmp7
-    * op add *tmp23 *tmp5 *tmp7
-    * op add *tmp24 *tmp23 *tmp9
+   68 op add *tmp19 :spotValue:result :spotValue.1:result
+   69 op add *tmp20 *tmp19 :spotValue.2:result
+   70 op add *tmp21 :spotValue.1:result :spotValue.2:result
+   71 op add *tmp22 *tmp21 :spotValue.3:result
+   72 op add *tmp23 :spotValue.2:result :spotValue.3:result
+   73 op add *tmp24 *tmp23 :spotValue.4:result
    74 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
    75 jump *label16 always
    76 jump *label25 always
    77 label *label24
-    * op add *tmp26 *tmp1 *tmp3
-    * op add *tmp27 *tmp26 *tmp5
-    * op add *tmp28 *tmp27 *tmp7
-    * op add *tmp29 *tmp3 *tmp5
-    * op add *tmp30 *tmp29 *tmp7
-    * op add *tmp31 *tmp30 *tmp9
+   78 op add *tmp26 :spotValue:result :spotValue.1:result
+   79 op add *tmp27 *tmp26 :spotValue.2:result
+   80 op add *tmp28 *tmp27 :spotValue.3:result
+   81 op add *tmp29 :spotValue.1:result :spotValue.2:result
+   82 op add *tmp30 *tmp29 :spotValue.3:result
+   83 op add *tmp31 *tmp30 :spotValue.4:result
    84 packcolor :computeRowValues*retval *tmp28 *tmp31 0 0
    85 jump *label16 always
    86 label *label25
-    * set *tmp11 null
    87 label *label23
-    * set :computeRowValues*retval null
    88 label *label16
    89 return :computeRowValues*retaddr
    90 end
 
   108 set .mapProgress 0
   109 set :moveTo.2:x :findDrillLocationLocal:x
   110 set :moveTo.2:y :findDrillLocationLocal:y
-    * set *tmp71 .coreX
-    * set *tmp72 .coreY
-    * set :moveTo.3:x :moveTo.2:x
-    * set :moveTo.3:y :moveTo.2:y
-    * set :moveTo.3:radius 6
+  111 set *tmp71 :findDrillLocationLocal:x
+  112 set *tmp72 :findDrillLocationLocal:y
+  113 set :moveTo.3:x :findDrillLocationLocal:x
+  114 set :moveTo.3:y :findDrillLocationLocal:y
   115 label *label45
-    * ucontrol within *tmp71 *tmp72 6 *tmp73
+  116 ucontrol within .coreX .coreY 6 *tmp73
   117 jump *label47 notEqual *tmp73 false
-    * op sub *tmp75 6 0.5
-    * ucontrol approach *tmp71 *tmp72 5.5
+  118 ucontrol approach .coreX .coreY 5.5
   119 label *label46
   120 jump *label45 always
   121 label *label47
 
   134 op min :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
   135 op div *tmp81 :findDrillLocationLocal:distanceLimit 3.8197185279121366
   136 op pow .mapTotal *tmp81 2
-    * set :locateOreAway:ore :findDrillLocationLocal:item
   137 set :locateOreAway:x :findDrillLocationLocal:oreX
   138 set :locateOreAway:y :findDrillLocationLocal:oreY
-    * set :locateOreAway:distanceLimit :findDrillLocationLocal:distanceLimit
   139 op mul :locateOreAway:distance 3.8197185279121366 .angle
   140 set :locateOreAway:lastX -1
   141 set :locateOreAway:lastY -1
 
   148 op mul *tmp90 *tmp89 :locateOreAway:distance
   149 op add *tmp91 .coreX *tmp90
   150 op sub *tmp92 @mapw 5
-    * set :limit:value *tmp91
-    * set :limit:low 5
-    * set :limit:high *tmp92
   151 op max *tmp94 *tmp91 5
   152 op min *tmp93 *tmp94 *tmp92
   153 label *label55
 
   156 op mul *tmp97 *tmp96 :locateOreAway:distance
   157 op add *tmp98 .coreY *tmp97
   158 op sub *tmp99 @maph 5
-    * set :limit.1:value *tmp98
-    * set :limit.1:low 5
-    * set :limit.1:high *tmp99
   159 op max *tmp101 *tmp98 5
   160 op min *tmp100 *tmp101 *tmp99
   161 label *label56
   162 set :locateOreAway:ly *tmp100
-    * set :moveTo.4:x *tmp93
-    * set :moveTo.4:y *tmp100
-    * set :moveTo.4:radius 5
   163 label *label58
-    * ucontrol within :locateOreAway:lx :locateOreAway:ly 5 *tmp103
+  164 ucontrol within *tmp93 *tmp100 5 *tmp103
   165 jump *label60 notEqual *tmp103 false
-    * op sub *tmp105 5 0.5
-    * ucontrol approach :locateOreAway:lx :locateOreAway:ly 4.5
+  166 ucontrol approach *tmp93 *tmp100 4.5
   167 label *label59
   168 jump *label58 always
   169 label *label60
 
   197 jump *label69 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
   198 set :locateOreAway:lastX :locateOreAway:x
   199 set :locateOreAway:lastY :locateOreAway:y
-    * set :visited:x :locateOreAway:x
-    * set :visited:y :locateOreAway:y
-    * set *tmp130 .locations
   200 set :visited:i .locationsStart
   201 label *label72
   202 jump *label74 greaterThanEq :visited:i .locations
 
   252 label *label82
   253 set :moveTo.5:x :locateOreAway:x
   254 set :moveTo.5:y :locateOreAway:y
-    * set *tmp153 :findDrillLocationLocal:oreX
-    * set *tmp154 :findDrillLocationLocal:oreY
-    * set :moveTo.6:x :moveTo.5:x
-    * set :moveTo.6:y :moveTo.5:y
-    * set :moveTo.6:radius 6
+  255 set *tmp153 :locateOreAway:x
+  256 set *tmp154 :locateOreAway:y
+  257 set :moveTo.6:x :locateOreAway:x
+  258 set :moveTo.6:y :locateOreAway:y
   259 label *label85
-    * ucontrol within *tmp153 *tmp154 6 *tmp155
+  260 ucontrol within :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 6 *tmp155
   261 jump *label87 notEqual *tmp155 false
-    * op sub *tmp157 6 0.5
-    * ucontrol approach *tmp153 *tmp154 5.5
+  262 ucontrol approach :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 5.5
   263 label *label86
   264 jump *label85 always
   265 label *label87
 
   289 call *label5 *invalid :computeRowValues*retval (m:*label93) (h:*label93)
   290 label *label93
   291 set :findBestPosition:y2 :computeRowValues*retval
-    * set *tmp163 :findBestPosition:y
   292 set :computeRowValues:x :findBestPosition:x
   293 set :computeRowValues:y :findBestPosition:y
   294 set :computeRowValues:ore :findBestPosition:ore
 
   314 setaddr :computeRowValues*retaddr *label96 (h:*label96)
   315 call *label5 *invalid :computeRowValues*retval (m:*label96) (h:*label96)
   316 label *label96
-    * set :findBestPosition:y5 :computeRowValues*retval
   317 set :findBestPosition:best 0
   318 set :findDrillLocationLocal:diffX 0
   319 set :findDrillLocationLocal:diffY 0
 
   323 op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
   324 op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
   325 set :updateRowPositions2x2:dy -1.5
-    * set :updateRowPositions2x2:rowSum :findBestPosition:row1
   326 unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :findBestPosition:row1
-    * set :updatePosition:dx -1.5
-    * set :updatePosition:dy -1.5
-    * set :updatePosition:value :updateRowPositions2x2:col1
   327 jump *label101 greaterThanEq :updateRowPositions2x2:col1 0.0784313725490196
   328 jump *label103 lessThanEq :updateRowPositions2x2:col1 0
   329 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  330 set :findDrillLocationLocal:diffY -1.5
   331 set :findBestPosition:best :updateRowPositions2x2:col1
   332 label *label103
   333 label *label104
   334 label *label101
   335 label *label102
   336 label *label100
-    * set :updatePosition.1:dx -0.5
-    * set :updatePosition.1:dy -1.5
-    * set :updatePosition.1:value :updateRowPositions2x2:col2
   337 jump *label106 greaterThanEq :updateRowPositions2x2:col2 0.0784313725490196
   338 jump *label108 lessThanEq :updateRowPositions2x2:col2 :findBestPosition:best
   339 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  340 set :findDrillLocationLocal:diffY -1.5
   341 set :findBestPosition:best :updateRowPositions2x2:col2
   342 label *label108
   343 label *label109
   344 label *label106
   345 label *label107
   346 label *label105
-    * set :updatePosition.2:dx 0.5
-    * set :updatePosition.2:dy -1.5
-    * set :updatePosition.2:value :updateRowPositions2x2:col3
   347 jump *label111 greaterThanEq :updateRowPositions2x2:col3 0.0784313725490196
   348 jump *label113 lessThanEq :updateRowPositions2x2:col3 :findBestPosition:best
   349 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  350 set :findDrillLocationLocal:diffY -1.5
   351 set :findBestPosition:best :updateRowPositions2x2:col3
   352 label *label113
   353 label *label114
   354 label *label111
   355 label *label112
   356 label *label110
-    * set :updatePosition.3:dx 1.5
-    * set :updatePosition.3:dy -1.5
-    * set :updatePosition.3:value :updateRowPositions2x2:col4
   357 jump *label116 greaterThanEq :updateRowPositions2x2:col4 0.0784313725490196
   358 jump *label118 lessThanEq :updateRowPositions2x2:col4 :findBestPosition:best
   359 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  360 set :findDrillLocationLocal:diffY -1.5
   361 set :findBestPosition:best :updateRowPositions2x2:col4
   362 label *label118
   363 label *label119
 
   366 label *label115
   367 label *label99
   368 set :updateRowPositions2x2.1:dy -0.5
-    * set :updateRowPositions2x2.1:rowSum :findBestPosition:row2
   369 unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :findBestPosition:row2
-    * set :updatePosition.4:dx -1.5
-    * set :updatePosition.4:dy -0.5
-    * set :updatePosition.4:value :updateRowPositions2x2.1:col1
   370 jump *label122 greaterThanEq :updateRowPositions2x2.1:col1 0.0784313725490196
   371 jump *label124 lessThanEq :updateRowPositions2x2.1:col1 :findBestPosition:best
   372 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  373 set :findDrillLocationLocal:diffY -0.5
   374 set :findBestPosition:best :updateRowPositions2x2.1:col1
   375 label *label124
   376 label *label125
   377 label *label122
   378 label *label123
   379 label *label121
-    * set :updatePosition.5:dx -0.5
-    * set :updatePosition.5:dy -0.5
-    * set :updatePosition.5:value :updateRowPositions2x2.1:col2
   380 jump *label127 greaterThanEq :updateRowPositions2x2.1:col2 0.0784313725490196
   381 jump *label129 lessThanEq :updateRowPositions2x2.1:col2 :findBestPosition:best
   382 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  383 set :findDrillLocationLocal:diffY -0.5
   384 set :findBestPosition:best :updateRowPositions2x2.1:col2
   385 label *label129
   386 label *label130
   387 label *label127
   388 label *label128
   389 label *label126
-    * set :updatePosition.6:dx 0.5
-    * set :updatePosition.6:dy -0.5
-    * set :updatePosition.6:value :updateRowPositions2x2.1:col3
   390 jump *label132 greaterThanEq :updateRowPositions2x2.1:col3 0.0784313725490196
   391 jump *label134 lessThanEq :updateRowPositions2x2.1:col3 :findBestPosition:best
   392 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  393 set :findDrillLocationLocal:diffY -0.5
   394 set :findBestPosition:best :updateRowPositions2x2.1:col3
   395 label *label134
   396 label *label135
   397 label *label132
   398 label *label133
   399 label *label131
-    * set :updatePosition.7:dx 1.5
-    * set :updatePosition.7:dy -0.5
-    * set :updatePosition.7:value :updateRowPositions2x2.1:col4
   400 jump *label137 greaterThanEq :updateRowPositions2x2.1:col4 0.0784313725490196
   401 jump *label139 lessThanEq :updateRowPositions2x2.1:col4 :findBestPosition:best
   402 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  403 set :findDrillLocationLocal:diffY -0.5
   404 set :findBestPosition:best :updateRowPositions2x2.1:col4
   405 label *label139
   406 label *label140
 
   409 label *label136
   410 label *label120
   411 set :updateRowPositions2x2.2:dy 0.5
-    * set :updateRowPositions2x2.2:rowSum :findBestPosition:row3
   412 unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :findBestPosition:row3
-    * set :updatePosition.8:dx -1.5
-    * set :updatePosition.8:dy 0.5
-    * set :updatePosition.8:value :updateRowPositions2x2.2:col1
   413 jump *label143 greaterThanEq :updateRowPositions2x2.2:col1 0.0784313725490196
   414 jump *label145 lessThanEq :updateRowPositions2x2.2:col1 :findBestPosition:best
   415 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  416 set :findDrillLocationLocal:diffY 0.5
   417 set :findBestPosition:best :updateRowPositions2x2.2:col1
   418 label *label145
   419 label *label146
   420 label *label143
   421 label *label144
   422 label *label142
-    * set :updatePosition.9:dx -0.5
-    * set :updatePosition.9:dy 0.5
-    * set :updatePosition.9:value :updateRowPositions2x2.2:col2
   423 jump *label148 greaterThanEq :updateRowPositions2x2.2:col2 0.0784313725490196
   424 jump *label150 lessThanEq :updateRowPositions2x2.2:col2 :findBestPosition:best
   425 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  426 set :findDrillLocationLocal:diffY 0.5
   427 set :findBestPosition:best :updateRowPositions2x2.2:col2
   428 label *label150
   429 label *label151
   430 label *label148
   431 label *label149
   432 label *label147
-    * set :updatePosition.10:dx 0.5
-    * set :updatePosition.10:dy 0.5
-    * set :updatePosition.10:value :updateRowPositions2x2.2:col3
   433 jump *label153 greaterThanEq :updateRowPositions2x2.2:col3 0.0784313725490196
   434 jump *label155 lessThanEq :updateRowPositions2x2.2:col3 :findBestPosition:best
   435 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  436 set :findDrillLocationLocal:diffY 0.5
   437 set :findBestPosition:best :updateRowPositions2x2.2:col3
   438 label *label155
   439 label *label156
   440 label *label153
   441 label *label154
   442 label *label152
-    * set :updatePosition.11:dx 1.5
-    * set :updatePosition.11:dy 0.5
-    * set :updatePosition.11:value :updateRowPositions2x2.2:col4
   443 jump *label158 greaterThanEq :updateRowPositions2x2.2:col4 0.0784313725490196
   444 jump *label160 lessThanEq :updateRowPositions2x2.2:col4 :findBestPosition:best
   445 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  446 set :findDrillLocationLocal:diffY 0.5
   447 set :findBestPosition:best :updateRowPositions2x2.2:col4
   448 label *label160
   449 label *label161
 
   452 label *label157
   453 label *label141
   454 set :updateRowPositions2x2.3:dy 1.5
-    * set :updateRowPositions2x2.3:rowSum :findBestPosition:row4
   455 unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :findBestPosition:row4
-    * set :updatePosition.12:dx -1.5
-    * set :updatePosition.12:dy 1.5
-    * set :updatePosition.12:value :updateRowPositions2x2.3:col1
   456 jump *label164 greaterThanEq :updateRowPositions2x2.3:col1 0.0784313725490196
   457 jump *label166 lessThanEq :updateRowPositions2x2.3:col1 :findBestPosition:best
   458 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  459 set :findDrillLocationLocal:diffY 1.5
   460 set :findBestPosition:best :updateRowPositions2x2.3:col1
   461 label *label166
   462 label *label167
   463 label *label164
   464 label *label165
   465 label *label163
-    * set :updatePosition.13:dx -0.5
-    * set :updatePosition.13:dy 1.5
-    * set :updatePosition.13:value :updateRowPositions2x2.3:col2
   466 jump *label169 greaterThanEq :updateRowPositions2x2.3:col2 0.0784313725490196
   467 jump *label171 lessThanEq :updateRowPositions2x2.3:col2 :findBestPosition:best
   468 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  469 set :findDrillLocationLocal:diffY 1.5
   470 set :findBestPosition:best :updateRowPositions2x2.3:col2
   471 label *label171
   472 label *label172
   473 label *label169
   474 label *label170
   475 label *label168
-    * set :updatePosition.14:dx 0.5
-    * set :updatePosition.14:dy 1.5
-    * set :updatePosition.14:value :updateRowPositions2x2.3:col3
   476 jump *label174 greaterThanEq :updateRowPositions2x2.3:col3 0.0784313725490196
   477 jump *label176 lessThanEq :updateRowPositions2x2.3:col3 :findBestPosition:best
   478 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  479 set :findDrillLocationLocal:diffY 1.5
   480 set :findBestPosition:best :updateRowPositions2x2.3:col3
   481 label *label176
   482 label *label177
   483 label *label174
   484 label *label175
   485 label *label173
-    * set :updatePosition.15:dx 1.5
-    * set :updatePosition.15:dy 1.5
-    * set :updatePosition.15:value :updateRowPositions2x2.3:col4
   486 jump *label179 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
   487 jump *label181 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
   488 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  489 set :findDrillLocationLocal:diffY 1.5
   490 set :findBestPosition:best :updateRowPositions2x2.3:col4
   491 label *label181
   492 label *label182
 
   504 op add *tmp245 :findBestPosition:y3 :findBestPosition:y4
   505 op add :findBestPosition:row3.1 *tmp245 :computeRowValues*retval
   506 set :updateRowPositions3x3:dy -1
-    * set :updateRowPositions3x3:rowSum :findBestPosition:row1.1
   507 unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :findBestPosition:row1.1
-    * set :updatePosition.16:dx -1
-    * set :updatePosition.16:dy -1
-    * set :updatePosition.16:value :updateRowPositions3x3:col1
   508 jump *label187 greaterThanEq :updateRowPositions3x3:col1 0.0784313725490196
   509 jump *label189 lessThanEq :updateRowPositions3x3:col1 0
   510 set :findDrillLocationLocal:diffX -1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  511 set :findDrillLocationLocal:diffY -1
   512 set :findBestPosition:best :updateRowPositions3x3:col1
   513 label *label189
   514 label *label190
   515 label *label187
   516 label *label188
   517 label *label186
-    * set :updatePosition.17:dx 0
-    * set :updatePosition.17:dy -1
-    * set :updatePosition.17:value :updateRowPositions3x3:col2
   518 jump *label192 greaterThanEq :updateRowPositions3x3:col2 0.0784313725490196
   519 jump *label194 lessThanEq :updateRowPositions3x3:col2 :findBestPosition:best
   520 set :findDrillLocationLocal:diffX 0
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  521 set :findDrillLocationLocal:diffY -1
   522 set :findBestPosition:best :updateRowPositions3x3:col2
   523 label *label194
   524 label *label195
   525 label *label192
   526 label *label193
   527 label *label191
-    * set :updatePosition.18:dx 1
-    * set :updatePosition.18:dy -1
-    * set :updatePosition.18:value :updateRowPositions3x3:col3
   528 jump *label197 greaterThanEq :updateRowPositions3x3:col3 0.0784313725490196
   529 jump *label199 lessThanEq :updateRowPositions3x3:col3 :findBestPosition:best
   530 set :findDrillLocationLocal:diffX 1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  531 set :findDrillLocationLocal:diffY -1
   532 set :findBestPosition:best :updateRowPositions3x3:col3
   533 label *label199
   534 label *label200
 
   537 label *label196
   538 label *label185
   539 set :updateRowPositions3x3.1:dy 0
-    * set :updateRowPositions3x3.1:rowSum :findBestPosition:row2.1
   540 unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :findBestPosition:row2.1
-    * set :updatePosition.19:dx -1
-    * set :updatePosition.19:dy 0
-    * set :updatePosition.19:value :updateRowPositions3x3.1:col1
   541 jump *label203 greaterThanEq :updateRowPositions3x3.1:col1 0.0784313725490196
   542 jump *label205 lessThanEq :updateRowPositions3x3.1:col1 :findBestPosition:best
   543 set :findDrillLocationLocal:diffX -1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  544 set :findDrillLocationLocal:diffY 0
   545 set :findBestPosition:best :updateRowPositions3x3.1:col1
   546 label *label205
   547 label *label206
   548 label *label203
   549 label *label204
   550 label *label202
-    * set :updatePosition.20:dx 0
-    * set :updatePosition.20:dy 0
-    * set :updatePosition.20:value :updateRowPositions3x3.1:col2
   551 jump *label208 greaterThanEq :updateRowPositions3x3.1:col2 0.0784313725490196
   552 jump *label210 lessThanEq :updateRowPositions3x3.1:col2 :findBestPosition:best
   553 set :findDrillLocationLocal:diffX 0
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  554 set :findDrillLocationLocal:diffY 0
   555 set :findBestPosition:best :updateRowPositions3x3.1:col2
   556 label *label210
   557 label *label211
   558 label *label208
   559 label *label209
   560 label *label207
-    * set :updatePosition.21:dx 1
-    * set :updatePosition.21:dy 0
-    * set :updatePosition.21:value :updateRowPositions3x3.1:col3
   561 jump *label213 greaterThanEq :updateRowPositions3x3.1:col3 0.0784313725490196
   562 jump *label215 lessThanEq :updateRowPositions3x3.1:col3 :findBestPosition:best
   563 set :findDrillLocationLocal:diffX 1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  564 set :findDrillLocationLocal:diffY 0
   565 set :findBestPosition:best :updateRowPositions3x3.1:col3
   566 label *label215
   567 label *label216
 
   570 label *label212
   571 label *label201
   572 set :updateRowPositions3x3.2:dy 1
-    * set :updateRowPositions3x3.2:rowSum :findBestPosition:row3.1
   573 unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :findBestPosition:row3.1
-    * set :updatePosition.22:dx -1
-    * set :updatePosition.22:dy 1
-    * set :updatePosition.22:value :updateRowPositions3x3.2:col1
   574 jump *label219 greaterThanEq :updateRowPositions3x3.2:col1 0.0784313725490196
   575 jump *label221 lessThanEq :updateRowPositions3x3.2:col1 :findBestPosition:best
   576 set :findDrillLocationLocal:diffX -1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  577 set :findDrillLocationLocal:diffY 1
   578 set :findBestPosition:best :updateRowPositions3x3.2:col1
   579 label *label221
   580 label *label222
   581 label *label219
   582 label *label220
   583 label *label218
-    * set :updatePosition.23:dx 0
-    * set :updatePosition.23:dy 1
-    * set :updatePosition.23:value :updateRowPositions3x3.2:col2
   584 jump *label224 greaterThanEq :updateRowPositions3x3.2:col2 0.0784313725490196
   585 jump *label226 lessThanEq :updateRowPositions3x3.2:col2 :findBestPosition:best
   586 set :findDrillLocationLocal:diffX 0
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  587 set :findDrillLocationLocal:diffY 1
   588 set :findBestPosition:best :updateRowPositions3x3.2:col2
   589 label *label226
   590 label *label227
   591 label *label224
   592 label *label225
   593 label *label223
-    * set :updatePosition.24:dx 1
-    * set :updatePosition.24:dy 1
-    * set :updatePosition.24:value :updateRowPositions3x3.2:col3
   594 jump *label229 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
   595 jump *label231 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
   596 set :findDrillLocationLocal:diffX 1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  597 set :findDrillLocationLocal:diffY 1
   598 set :findBestPosition:best :updateRowPositions3x3.2:col3
   599 label *label231
   600 label *label232
 
   611 op add *tmp290 *tmp289 :findBestPosition:y4
   612 op add :findBestPosition:row2.2 *tmp290 :computeRowValues*retval
   613 set :updateRowPositions4x4:dy -0.5
-    * set :updateRowPositions4x4:rowSum :findBestPosition:row1.2
   614 unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 0 0 :findBestPosition:row1.2
-    * set :updatePosition.25:dx -0.5
-    * set :updatePosition.25:dy -0.5
-    * set :updatePosition.25:value :updateRowPositions4x4:col1
   615 jump *label235 greaterThanEq :updateRowPositions4x4:col1 0.0784313725490196
   616 jump *label237 lessThanEq :updateRowPositions4x4:col1 0
   617 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  618 set :findDrillLocationLocal:diffY -0.5
   619 set :findBestPosition:best :updateRowPositions4x4:col1
   620 label *label237
   621 label *label238
   622 label *label235
   623 label *label236
   624 label *label234
-    * set :updatePosition.26:dx 0.5
-    * set :updatePosition.26:dy -0.5
-    * set :updatePosition.26:value :updateRowPositions4x4:col2
   625 jump *label240 greaterThanEq :updateRowPositions4x4:col2 0.0784313725490196
   626 jump *label242 lessThanEq :updateRowPositions4x4:col2 :findBestPosition:best
   627 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  628 set :findDrillLocationLocal:diffY -0.5
   629 set :findBestPosition:best :updateRowPositions4x4:col2
   630 label *label242
   631 label *label243
 
   634 label *label239
   635 label *label233
   636 set :updateRowPositions4x4.1:dy 0.5
-    * set :updateRowPositions4x4.1:rowSum :findBestPosition:row2.2
   637 unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 0 0 :findBestPosition:row2.2
-    * set :updatePosition.27:dx -0.5
-    * set :updatePosition.27:dy 0.5
-    * set :updatePosition.27:value :updateRowPositions4x4.1:col1
   638 jump *label246 greaterThanEq :updateRowPositions4x4.1:col1 0.0784313725490196
   639 jump *label248 lessThanEq :updateRowPositions4x4.1:col1 :findBestPosition:best
   640 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  641 set :findDrillLocationLocal:diffY 0.5
   642 set :findBestPosition:best :updateRowPositions4x4.1:col1
   643 label *label248
   644 label *label249
   645 label *label246
   646 label *label247
   647 label *label245
-    * set :updatePosition.28:dx 0.5
-    * set :updatePosition.28:dy 0.5
-    * set :updatePosition.28:value :updateRowPositions4x4.1:col2
   648 jump *label251 greaterThanEq :updateRowPositions4x4.1:col2 0.0784313725490196
   649 jump *label253 lessThanEq :updateRowPositions4x4.1:col2 :findBestPosition:best
   650 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  651 set :findDrillLocationLocal:diffY 0.5
   652 set :findBestPosition:best :updateRowPositions4x4.1:col2
   653 label *label253
   654 label *label254
 
   682 label *label263
   683 label *label264
   684 jump *label265 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
-    * set :saveLocation:item :findDrillLocationLocal:item
-    * set :saveLocation:value *tmp158
-    * set :saveLocation:x :findDrillLocationLocal:dx
-    * set :saveLocation:y :findDrillLocationLocal:dy
   685 op add .count .count 1
-    * set *tmp324 .count
   686 sensor *tmp326 :findDrillLocationLocal:item @id
   687 write *tmp326 bank1 .count
   688 op add .count .count 1
-    * write :findDrillLocationLocal:score bank1 .count
+  689 write *tmp158 bank1 .count
   690 op add .count .count 1
   691 write :findDrillLocationLocal:dx bank1 .count
   692 op add .count .count 1
 
   733 label *label89
   734 jump *label88 always
   735 label *label90
-    * set :saveLocation.1:item :findDrillLocationLocal:item
-    * set :saveLocation.1:value :findDrillLocationLocal:best
-    * set :saveLocation.1:x :findDrillLocationLocal:bestX
-    * set :saveLocation.1:y :findDrillLocationLocal:bestY
   736 op add .count .count 1
-    * set *tmp355 .count
   737 sensor *tmp357 :findDrillLocationLocal:item @id
   738 write *tmp357 bank1 .count
   739 op add .count .count 1
 
   761 remark "\"
   762 remark "n"
   763 label *label282
-    * op add :debugPrintSpot:i :debugPrintSpot:i 1
   764 jump *label281 always
   765 label *label283
   766 print ""
 
   780 set :moveTo.7:y :createTerrainMask:y
   781 set *tmp379 :createTerrainMask:x
   782 set *tmp380 :createTerrainMask:y
-    * set :moveTo.8:x :moveTo.7:x
-    * set :moveTo.8:y :moveTo.7:y
-    * set :moveTo.8:radius 6
+  783 set :moveTo.8:x :createTerrainMask:x
+  784 set :moveTo.8:y :createTerrainMask:y
   785 label *label287
-    * ucontrol within *tmp379 *tmp380 6 *tmp381
+  786 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp381
   787 jump *label289 notEqual *tmp381 false
-    * op sub *tmp383 6 0.5
-    * ucontrol approach *tmp379 *tmp380 5.5
+  788 ucontrol approach :createTerrainMask:x :createTerrainMask:y 5.5
   789 label *label288
   790 jump *label287 always
   791 label *label289
 
   806 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   807 select type equal type @boulder @air type
   808 select :isBlocked:result equal type @air 0 1
-    * set *tmp387 :isBlocked:result
   809 label *label296
   810 op or :createTerrainMask:result *tmp384 :isBlocked:result
   811 label *label294
 
   871 setaddr :findPossiblePlacement*retaddr *label311 (h:*label311)
   872 call *label10 *invalid :findPossiblePlacement*retval (m:*label311) (h:*label311)
   873 label *label311
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
   874 jump *label312 lessThan :findPossiblePlacement*retval 0
   875 op add *tmp407 :tryPlaceGenerator:centerX 0.5
   876 op add .water2X *tmp407 :findPossiblePlacement:x
 
   878 op add .water2Y *tmp409 :findPossiblePlacement:y
   879 op add *tmp411 :tryPlaceGenerator:centerX 2.5
   880 op add .generatorX *tmp411 :findPossiblePlacement:x
-    * op add *tmp413 :tryPlaceGenerator:centerY 0.5
   881 op add .generatorY *tmp409 :findPossiblePlacement:y
   882 op shl *tmp415 :tryPlaceGenerator:generatorHorizontal :findPossiblePlacement*retval
   883 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp415
 
   890 setaddr :findPossiblePlacement*retaddr *label314 (h:*label314)
   891 call *label10 *invalid :findPossiblePlacement*retval (m:*label314) (h:*label314)
   892 label *label314
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
   893 jump *label315 greaterThanEq :findPossiblePlacement*retval 0
   894 set :tryPlaceGenerator*retval false
   895 jump *label310 always
 
   899 op add .water2X *tmp419 :findPossiblePlacement:x
   900 op add *tmp421 :tryPlaceGenerator:centerY 0.5
   901 op add .water2Y *tmp421 :findPossiblePlacement:y
-    * op add *tmp423 :tryPlaceGenerator:centerX 0.5
   902 op add .generatorX *tmp419 :findPossiblePlacement:x
   903 op add *tmp425 :tryPlaceGenerator:centerY 2.5
   904 op add .generatorY *tmp425 :findPossiblePlacement:y
 
   912 setaddr :findPossiblePlacement*retaddr *label317 (h:*label317)
   913 call *label10 *invalid :findPossiblePlacement*retval (m:*label317) (h:*label317)
   914 label *label317
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
   915 jump *label318 greaterThanEq :findPossiblePlacement*retval 0
   916 set :tryPlaceGenerator*retval false
   917 jump *label310 always
 
   928 setaddr :findPossiblePlacement*retaddr *label320 (h:*label320)
   929 call *label10 *invalid :findPossiblePlacement*retval (m:*label320) (h:*label320)
   930 label *label320
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
   931 jump *label321 greaterThanEq :findPossiblePlacement*retval 0
   932 set :tryPlaceGenerator*retval false
   933 jump *label310 always
 
   944 setaddr :findPossiblePlacement*retaddr *label323 (h:*label323)
   945 call *label10 *invalid :findPossiblePlacement*retval (m:*label323) (h:*label323)
   946 label *label323
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
   947 jump *label324 greaterThanEq :findPossiblePlacement*retval 0
   948 set :tryPlaceGenerator*retval false
   949 jump *label310 always
 
   951 label *label325
   952 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   953 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
-    * op shl *tmp445 1 :findPossiblePlacement*retval
   954 set :tryPlaceGenerator*retval true
   955 jump *label310 always
   956 label *label310
 
   970 setaddr :createTerrainMask*retaddr *label327 (h:*label327)
   971 call *label9 *invalid :createTerrainMask*retval (m:*label327) (h:*label327)
   972 label *label327
-    * set :layoutThoriumDrillAtLocation:plainTerrainMask :createTerrainMask*retval
   973 set :createFixedMatrix:row0 0b0000000
-    * set :createFixedMatrix:row1 0b0000000
-    * set :createFixedMatrix:row2 0b0011100
-    * set :createFixedMatrix:row3 0b0011100
-    * set :createFixedMatrix:row4 0b0011100
-    * set :createFixedMatrix:row5 0b0000000
-    * set :createFixedMatrix:row6 0b0000000
-    * set *tmp448 0b0000000
-    * op shl *tmp449 0b0000000 7
-    * op or *tmp450 :createFixedMatrix:row0 0
-    * op shl *tmp451 0b0011100 14
-    * op or *tmp452 *tmp450 458752
-    * op shl *tmp453 0b0011100 21
-    * op or *tmp454 *tmp452 58720256
-    * op shl *tmp455 0b0011100 28
-    * op or *tmp456 *tmp454 7516192768
-    * op shl *tmp457 0b0000000 35
-    * op or *tmp458 *tmp456 0
-    * op shl *tmp459 0b0000000 42
-    * op or *tmp447 *tmp458 0
+  974 op or *tmp450 0b0000000 0
+  975 op or *tmp452 0 458752
+  976 op or *tmp454 458752 58720256
+  977 op or *tmp456 59179008 7516192768
+  978 op or *tmp458 7575371776 0
+  979 op or *tmp447 7575371776 0
   980 label *label328
-    * op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval *tmp447
+  981 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
   982 set :createFixedMatrix.1:row0 0b1000001
-    * set :createFixedMatrix.1:row1 0b0000000
-    * set :createFixedMatrix.1:row2 0b0011100
-    * set :createFixedMatrix.1:row3 0b0011100
-    * set :createFixedMatrix.1:row4 0b0011100
-    * set :createFixedMatrix.1:row5 0b0000000
-    * set :createFixedMatrix.1:row6 0b1000001
-    * set *tmp463 0b1000001
-    * op shl *tmp464 0b0000000 7
-    * op or *tmp465 :createFixedMatrix.1:row0 0
-    * op shl *tmp466 0b0011100 14
-    * op or *tmp467 *tmp465 458752
-    * op shl *tmp468 0b0011100 21
-    * op or *tmp469 *tmp467 58720256
-    * op shl *tmp470 0b0011100 28
-    * op or *tmp471 *tmp469 7516192768
-    * op shl *tmp472 0b0000000 35
-    * op or *tmp473 *tmp471 0
-    * op shl *tmp474 0b1000001 42
-    * op or *tmp462 *tmp473 285873023221760
+  983 op or *tmp465 0b1000001 0
+  984 op or *tmp467 65 458752
+  985 op or *tmp469 458817 58720256
+  986 op or *tmp471 59179073 7516192768
+  987 op or *tmp473 7575371841 0
+  988 op or *tmp462 7575371841 285873023221760
   989 label *label329
-    * op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp462
+  990 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
   991 set :createFixedMatrix.2:row0 0b11
-    * set :createFixedMatrix.2:row1 0b11
-    * set *tmp478 0b11
-    * op shl *tmp479 0b11 7
-    * op or *tmp477 :createFixedMatrix.2:row0 384
+  992 op or *tmp477 0b11 384
   993 label *label330
-    * set :layoutThoriumDrillAtLocation:extractorMask *tmp477
+  994 set :layoutThoriumDrillAtLocation:extractorMask 387
   995 setaddr :printMask*retaddr *label331 (h:*label331)
   996 call *label13 *invalid :printMask*retval (m:*label331) (h:*label331)
   997 label *label331
   998 setaddr :printMask*retaddr *label332 (h:*label332)
   999 call *label13 *invalid :printMask*retval (m:*label332) (h:*label332)
  1000 label *label332
-    * set :printMask:mask *tmp477
+ 1001 set :printMask:mask 387
  1002 setaddr :printMask*retaddr *label333 (h:*label333)
  1003 call *label13 *invalid :printMask*retval (m:*label333) (h:*label333)
  1004 label *label333
 
  1020 label *label336
  1021 label *label334
  1022 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
-    * set :findPossiblePlacement:placementMask *tmp477
+ 1023 set :findPossiblePlacement:placementMask 387
  1024 set :findPossiblePlacement:width 2
  1025 set :findPossiblePlacement:height 2
  1026 setaddr :findPossiblePlacement*retaddr *label343 (h:*label343)
  1027 call *label10 *invalid :findPossiblePlacement*retval (m:*label343) (h:*label343)
  1028 label *label343
-    * set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
-    * set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
-    * set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
  1029 jump *label344 lessThan :findPossiblePlacement*retval 0
  1030 op add *tmp488 .drillX 0.5
  1031 op add .water1X *tmp488 :findPossiblePlacement:x
 
  1036 label *label344
  1037 label *label345
  1038 set :createFixedMatrix.3:row0 0b1111
-    * set :createFixedMatrix.3:row1 0b1111
-    * set *tmp493 0b1111
-    * op shl *tmp494 0b1111 7
-    * op or *tmp492 :createFixedMatrix.3:row0 1920
+ 1039 op or *tmp492 0b1111 1920
  1040 label *label346
-    * set :layoutThoriumDrillAtLocation:generatorHorizontal *tmp492
+ 1041 set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
  1042 set :createFixedMatrix.4:row0 0b11
-    * set :createFixedMatrix.4:row1 0b11
-    * set :createFixedMatrix.4:row2 0b11
-    * set :createFixedMatrix.4:row3 0b11
-    * set *tmp497 0b11
-    * op shl *tmp498 0b11 7
-    * op or *tmp499 :createFixedMatrix.4:row0 384
-    * op shl *tmp500 0b11 14
-    * op or *tmp501 *tmp499 49152
-    * op shl *tmp502 0b11 21
-    * op or *tmp496 *tmp501 6291456
+ 1043 op or *tmp499 0b11 384
+ 1044 op or *tmp501 387 49152
+ 1045 op or *tmp496 49539 6291456
  1046 label *label347
-    * set :layoutThoriumDrillAtLocation:generatorVertical *tmp496
+ 1047 set :layoutThoriumDrillAtLocation:generatorVertical 6340995
  1048 set :tryPlaceGenerator:centerX .drillX
  1049 set :tryPlaceGenerator:centerY .drillY
  1050 set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:terrainMask
-    * set :tryPlaceGenerator:generatorHorizontal *tmp492
-    * set :tryPlaceGenerator:generatorVertical *tmp496
+ 1051 set :tryPlaceGenerator:generatorHorizontal 1935
+ 1052 set :tryPlaceGenerator:generatorVertical 6340995
  1053 setaddr :tryPlaceGenerator*retaddr *label348 (h:*label348)
  1054 call *label11 *invalid :tryPlaceGenerator*retval (m:*label348) (h:*label348)
  1055 label *label348
 
  1084 setaddr :createTerrainMask*retaddr *label358 (h:*label358)
  1085 call *label9 *invalid :createTerrainMask*retval (m:*label358) (h:*label358)
  1086 label *label358
-    * set :layoutThoriumDrillAtLocation:newTerrainMask :createTerrainMask*retval
  1087 op sub *tmp510 0 :layoutThoriumDrillAtLocation:sx
  1088 op sub *tmp511 0 :layoutThoriumDrillAtLocation:sy
  1089 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
-    * set :shiftMask:shiftX *tmp510
-    * set :shiftMask:shiftY *tmp511
  1090 op abs *tmp513 *tmp510
  1091 op greaterThan *tmp514 *tmp513 6
  1092 op abs *tmp515 *tmp511
 
  1109 op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask *tmp526
  1110 label *label363
  1111 jump *label364 equal *tmp510 0
-    * op abs *tmp529 *tmp510
  1112 op sub *tmp530 7 *tmp513
  1113 op shr :shiftMask:keep 0b1111111 *tmp530
  1114 jump *label366 lessThanEq *tmp510 0
-    * op abs *tmp534 *tmp510
-    * op sub *tmp535 7 *tmp513
  1115 op shl :shiftMask:keep :shiftMask:keep *tmp530
  1116 label *label366
  1117 label *label367
 
  1127 set *tmp512 :shiftMask:mask
  1128 jump *label359 always
  1129 label *label359
-    * set :layoutThoriumDrillAtLocation:shiftedMask *tmp512
  1130 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp512
  1131 op add *tmp540 .drillX :layoutThoriumDrillAtLocation:sx
  1132 op add *tmp541 .drillY :layoutThoriumDrillAtLocation:sy

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-58 instructions):
 
    17 select value equal floor :spotValue:ore 0.00392156862745098 0
    18 sensor solid type @solid
    19 select :spotValue:result notEqual solid false WALL value
-    * set *tmp1 :spotValue:result
    20 label *label17
    21 op sub :spotValue.1:x :computeRowValues:x 1
    22 set :spotValue.1:y :computeRowValues:y
 
    25 select value equal floor :spotValue.1:ore 0.00392156862745098 0
    26 sensor solid type @solid
    27 select :spotValue.1:result notEqual solid false WALL value
-    * set *tmp3 :spotValue.1:result
    28 label *label18
    29 set :spotValue.2:x :computeRowValues:x
    30 set :spotValue.2:y :computeRowValues:y
 
    33 select value equal floor :spotValue.2:ore 0.00392156862745098 0
    34 sensor solid type @solid
    35 select :spotValue.2:result notEqual solid false WALL value
-    * set *tmp5 :spotValue.2:result
    36 label *label19
    37 op add :spotValue.3:x :computeRowValues:x 1
    38 set :spotValue.3:y :computeRowValues:y
 
    41 select value equal floor :spotValue.3:ore 0.00392156862745098 0
    42 sensor solid type @solid
    43 select :spotValue.3:result notEqual solid false WALL value
-    * set *tmp7 :spotValue.3:result
    44 label *label20
    45 op add :spotValue.4:x :computeRowValues:x 2
    46 set :spotValue.4:y :computeRowValues:y
 
    49 select value equal floor :spotValue.4:ore 0.00392156862745098 0
    50 sensor solid type @solid
    51 select :spotValue.4:result notEqual solid false WALL value
-    * set *tmp9 :spotValue.4:result
    52 label *label21
    53 jump *label22 notEqual :computeRowValues:size 2
    54 op add *tmp12 :spotValue:result :spotValue.1:result
 
   101 set .mapAction "Locating ore..."
   102 set .angle 0
   103 set .mapProgress 0
-    * set :moveTo.2:x :findDrillLocationLocal:x
-    * set :moveTo.2:y :findDrillLocationLocal:y
-    * set *tmp71 :findDrillLocationLocal:x
-    * set *tmp72 :findDrillLocationLocal:y
-    * set :moveTo.3:x :findDrillLocationLocal:x
-    * set :moveTo.3:y :findDrillLocationLocal:y
   104 label *label45
-    * ucontrol within .coreX .coreY 6 *tmp73
+  105 ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp73
   106 jump *label47 notEqual *tmp73 false
-    * ucontrol approach .coreX .coreY 5.5
+  107 ucontrol approach :findDrillLocationLocal:x :findDrillLocationLocal:y 5.5
   108 label *label46
   109 jump *label45 always
   110 label *label47
 
   140 op max *tmp94 *tmp91 5
   141 op min *tmp93 *tmp94 *tmp92
   142 label *label55
-    * set :locateOreAway:lx *tmp93
   143 op cos *tmp96 :locateOreAway:a
   144 op mul *tmp97 *tmp96 :locateOreAway:distance
   145 op add *tmp98 .coreY *tmp97
 
   147 op max *tmp101 *tmp98 5
   148 op min *tmp100 *tmp101 *tmp99
   149 label *label56
-    * set :locateOreAway:ly *tmp100
   150 label *label58
   151 ucontrol within *tmp93 *tmp100 5 *tmp103
   152 jump *label60 notEqual *tmp103 false
 
   237 op add .mapSpots .mapSpots 1
   238 label *label81
   239 label *label82
-    * set :moveTo.5:x :locateOreAway:x
-    * set :moveTo.5:y :locateOreAway:y
-    * set *tmp153 :locateOreAway:x
-    * set *tmp154 :locateOreAway:y
-    * set :moveTo.6:x :locateOreAway:x
-    * set :moveTo.6:y :locateOreAway:y
   240 label *label85
-    * ucontrol within :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 6 *tmp155
+  241 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp155
   242 jump *label87 notEqual *tmp155 false
-    * ucontrol approach :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 5.5
+  243 ucontrol approach :locateOreAway:x :locateOreAway:y 5.5
   244 label *label86
   245 jump *label85 always
   246 label *label87
 
   303 op add :findBestPosition:row2 :findBestPosition:y2 :findBestPosition:y3
   304 op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
   305 op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
-    * set :updateRowPositions2x2:dy -1.5
   306 unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :findBestPosition:row1
   307 jump *label101 greaterThanEq :updateRowPositions2x2:col1 0.0784313725490196
   308 jump *label103 lessThanEq :updateRowPositions2x2:col1 0
 
   345 label *label117
   346 label *label115
   347 label *label99
-    * set :updateRowPositions2x2.1:dy -0.5
   348 unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :findBestPosition:row2
   349 jump *label122 greaterThanEq :updateRowPositions2x2.1:col1 0.0784313725490196
   350 jump *label124 lessThanEq :updateRowPositions2x2.1:col1 :findBestPosition:best
 
   387 label *label138
   388 label *label136
   389 label *label120
-    * set :updateRowPositions2x2.2:dy 0.5
   390 unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :findBestPosition:row3
   391 jump *label143 greaterThanEq :updateRowPositions2x2.2:col1 0.0784313725490196
   392 jump *label145 lessThanEq :updateRowPositions2x2.2:col1 :findBestPosition:best
 
   429 label *label159
   430 label *label157
   431 label *label141
-    * set :updateRowPositions2x2.3:dy 1.5
   432 unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :findBestPosition:row4
   433 jump *label164 greaterThanEq :updateRowPositions2x2.3:col1 0.0784313725490196
   434 jump *label166 lessThanEq :updateRowPositions2x2.3:col1 :findBestPosition:best
 
   480 op add :findBestPosition:row2.1 *tmp243 :findBestPosition:y4
   481 op add *tmp245 :findBestPosition:y3 :findBestPosition:y4
   482 op add :findBestPosition:row3.1 *tmp245 :computeRowValues*retval
-    * set :updateRowPositions3x3:dy -1
   483 unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :findBestPosition:row1.1
   484 jump *label187 greaterThanEq :updateRowPositions3x3:col1 0.0784313725490196
   485 jump *label189 lessThanEq :updateRowPositions3x3:col1 0
 
   512 label *label198
   513 label *label196
   514 label *label185
-    * set :updateRowPositions3x3.1:dy 0
   515 unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :findBestPosition:row2.1
   516 jump *label203 greaterThanEq :updateRowPositions3x3.1:col1 0.0784313725490196
   517 jump *label205 lessThanEq :updateRowPositions3x3.1:col1 :findBestPosition:best
 
   544 label *label214
   545 label *label212
   546 label *label201
-    * set :updateRowPositions3x3.2:dy 1
   547 unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :findBestPosition:row3.1
   548 jump *label219 greaterThanEq :updateRowPositions3x3.2:col1 0.0784313725490196
   549 jump *label221 lessThanEq :updateRowPositions3x3.2:col1 :findBestPosition:best
 
   584 op add *tmp289 :findBestPosition:y2 :findBestPosition:y3
   585 op add *tmp290 *tmp289 :findBestPosition:y4
   586 op add :findBestPosition:row2.2 *tmp290 :computeRowValues*retval
-    * set :updateRowPositions4x4:dy -0.5
   587 unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 0 0 :findBestPosition:row1.2
   588 jump *label235 greaterThanEq :updateRowPositions4x4:col1 0.0784313725490196
   589 jump *label237 lessThanEq :updateRowPositions4x4:col1 0
 
   606 label *label241
   607 label *label239
   608 label *label233
-    * set :updateRowPositions4x4.1:dy 0.5
   609 unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 0 0 :findBestPosition:row2.2
   610 jump *label246 greaterThanEq :updateRowPositions4x4.1:col1 0.0784313725490196
   611 jump *label248 lessThanEq :updateRowPositions4x4.1:col1 :findBestPosition:best
 
   644 op mul *tmp158 :findBestPosition:best 255
   645 jump *label91 always
   646 label *label91
-    * set :findDrillLocationLocal:score *tmp158
   647 jump *label261 lessThanEq *tmp158 :findDrillLocationLocal:capacity
   648 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   649 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
 
   747 return :findDrillLocationLocal*retaddr
   748 end
   749 label *label9
-    * set :moveTo.7:x :createTerrainMask:x
-    * set :moveTo.7:y :createTerrainMask:y
-    * set *tmp379 :createTerrainMask:x
-    * set *tmp380 :createTerrainMask:y
-    * set :moveTo.8:x :createTerrainMask:x
-    * set :moveTo.8:y :createTerrainMask:y
   750 label *label287
   751 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp381
   752 jump *label289 notEqual *tmp381 false
 
   935 setaddr :createTerrainMask*retaddr *label327 (h:*label327)
   936 call *label9 *invalid :createTerrainMask*retval (m:*label327) (h:*label327)
   937 label *label327
-    * set :createFixedMatrix:row0 0b0000000
-    * op or *tmp450 0b0000000 0
-    * op or *tmp452 0 458752
-    * op or *tmp454 458752 58720256
-    * op or *tmp456 59179008 7516192768
-    * op or *tmp458 7575371776 0
-    * op or *tmp447 7575371776 0
   938 label *label328
   939 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
-    * set :createFixedMatrix.1:row0 0b1000001
-    * op or *tmp465 0b1000001 0
-    * op or *tmp467 65 458752
-    * op or *tmp469 458817 58720256
-    * op or *tmp471 59179073 7516192768
-    * op or *tmp473 7575371841 0
-    * op or *tmp462 7575371841 285873023221760
   940 label *label329
   941 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
-    * set :createFixedMatrix.2:row0 0b11
-    * op or *tmp477 0b11 384
   942 label *label330
   943 set :layoutThoriumDrillAtLocation:extractorMask 387
   944 setaddr :printMask*retaddr *label331 (h:*label331)
 
   947 setaddr :printMask*retaddr *label332 (h:*label332)
   948 call *label13 *invalid :printMask*retval (m:*label332) (h:*label332)
   949 label *label332
-    * set :printMask:mask 387
   950 setaddr :printMask*retaddr *label333 (h:*label333)
   951 call *label13 *invalid :printMask*retval (m:*label333) (h:*label333)
   952 label *label333
 
   983 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
   984 label *label344
   985 label *label345
-    * set :createFixedMatrix.3:row0 0b1111
-    * op or *tmp492 0b1111 1920
   986 label *label346
   987 set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
-    * set :createFixedMatrix.4:row0 0b11
-    * op or *tmp499 0b11 384
-    * op or *tmp501 387 49152
-    * op or *tmp496 49539 6291456
   988 label *label347
   989 set :layoutThoriumDrillAtLocation:generatorVertical 6340995
   990 set :tryPlaceGenerator:centerX .drillX

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
   130 set :locateOreAway:lastY -1
   131 op max .angle .angle @pi
   132 op mul .mapProgress .angle .angle
+  133 op sub *tmp92 @mapw 5
+  134 op sub *tmp99 @maph 5
   135 label *label52
   136 jump *label54 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   137 op div :locateOreAway:a .angle @degToRad
   138 op sin *tmp89 :locateOreAway:a
   139 op mul *tmp90 *tmp89 :locateOreAway:distance
   140 op add *tmp91 .coreX *tmp90
-    * op sub *tmp92 @mapw 5
   141 op max *tmp94 *tmp91 5
   142 op min *tmp93 *tmp94 *tmp92
   143 label *label55
   144 op cos *tmp96 :locateOreAway:a
   145 op mul *tmp97 *tmp96 :locateOreAway:distance
   146 op add *tmp98 .coreY *tmp97
-    * op sub *tmp99 @maph 5
   147 op max *tmp101 *tmp98 5
   148 op min *tmp100 *tmp101 *tmp99
   149 label *label56
 
   761 label *label290
   762 jump *label292 lessThan :createTerrainMask:r -3
   763 set :createTerrainMask:c 3
+  764 op add *tmp386 :createTerrainMask:y :createTerrainMask:r
   765 label *label293
   766 jump *label295 lessThan :createTerrainMask:c -3
   767 op shl *tmp384 :createTerrainMask:result 1
   768 op add *tmp385 :createTerrainMask:x :createTerrainMask:c
-    * op add *tmp386 :createTerrainMask:y :createTerrainMask:r
   769 set :isBlocked:x *tmp385
   770 set :isBlocked:y *tmp386
   771 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-2 instructions):
 
   134 op sub *tmp99 @maph 5
   135 label *label52
   136 jump *label54 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
+  137 label *label389
   138 op div :locateOreAway:a .angle @degToRad
   139 op sin *tmp89 :locateOreAway:a
   140 op mul *tmp90 *tmp89 :locateOreAway:distance
 
   188 set :visited:i .locationsStart
   189 label *label72
   190 jump *label74 greaterThanEq :visited:i .locations
+  191 label *label390
   192 op mul :visited:index 4 :visited:i
   193 op add *tmp133 :visited:index 2
   194 read :visited:lx bank1 *tmp133
 
   204 label *label76
   205 label *label73
   206 op add :visited:i :visited:i 1
-    * jump *label72 always
+  207 jump *label390 lessThan :visited:i .locations
   208 label *label74
   209 set *tmp129 false
   210 jump *label71 always
 
   223 label *label67
   224 label *label68
   225 label *label53
-    * jump *label52 always
+  226 jump *label389 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   227 label *label54
   228 set *tmp83 false
   229 jump *label51 always
 
   761 set :createTerrainMask:result 0
   762 set :createTerrainMask:r 3
   763 label *label290
-    * jump *label292 lessThan :createTerrainMask:r -3
+  764 label *label391
   765 set :createTerrainMask:c 3
   766 op add *tmp386 :createTerrainMask:y :createTerrainMask:r
   767 label *label293
-    * jump *label295 lessThan :createTerrainMask:c -3
+  768 label *label392
   769 op shl *tmp384 :createTerrainMask:result 1
   770 op add *tmp385 :createTerrainMask:x :createTerrainMask:c
   771 set :isBlocked:x *tmp385
 
   777 op or :createTerrainMask:result *tmp384 :isBlocked:result
   778 label *label294
   779 op sub :createTerrainMask:c :createTerrainMask:c 1
-    * jump *label293 always
+  780 jump *label392 greaterThanEq :createTerrainMask:c -3
   781 label *label295
   782 label *label291
   783 op sub :createTerrainMask:r :createTerrainMask:r 1
-    * jump *label290 always
+  784 jump *label391 greaterThanEq :createTerrainMask:r -3
   785 label *label292
   786 set :createTerrainMask*retval :createTerrainMask:result
   787 jump *label284 always
 
   792 set :findPossiblePlacement:y -3
   793 label *label298
   794 jump *label300 greaterThan :findPossiblePlacement:y 3
+  795 label *label393
   796 op add *tmp389 :findPossiblePlacement:y 3
   797 op mul *tmp390 7 *tmp389
   798 op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp390
   799 set :findPossiblePlacement:x -3
   800 label *label301
   801 jump *label303 greaterThan :findPossiblePlacement:x 3
+  802 label *label394
   803 op and *tmp392 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
   804 jump *label304 notEqual *tmp392 0
   805 op mul *tmp395 :findPossiblePlacement:y 7
 
   816 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
   817 label *label302
   818 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
-    * jump *label301 always
+  819 jump *label394 lessThanEq :findPossiblePlacement:x 3
   820 label *label303
   821 op sub *tmp401 3 :findPossiblePlacement:height
   822 jump *label308 lessThanEq :findPossiblePlacement:y *tmp401
 
   825 label *label309
   826 label *label299
   827 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
-    * jump *label298 always
+  828 jump *label393 lessThanEq :findPossiblePlacement:y 3
   829 label *label300
   830 set :findPossiblePlacement*retval -1
   831 jump *label297 always
 
  1149 print "\n"
  1150 label *label381
  1151 jump *label383 lessThan :printMask:r 0
+ 1152 label *label395
  1153 label *label384
  1154 jump *label386 greaterThanEq :printMask:c 7
+ 1155 label *label396
  1156 jump *label387 equal *tmp550 false
  1157 jump *label388 always
  1158 label *label387
  1159 label *label388
  1160 print "x"
  1161 label *label385
-    * jump *label384 always
+ 1162 jump *label396 lessThan :printMask:c 7
  1163 label *label386
  1164 print "\n"
  1165 label *label382
-    * jump *label381 always
+ 1166 jump *label395 greaterThanEq :printMask:r 0
  1167 label *label383
  1168 label *label379
  1169 label *label380

Modifications by Replicate loop condition at line 41:5 (+1 instructions):
 
   151 label *label58
   152 ucontrol within *tmp93 *tmp100 5 *tmp103
   153 jump *label60 notEqual *tmp103 false
+  154 label *label397
   155 ucontrol approach *tmp93 *tmp100 4.5
   156 label *label59
-    * jump *label58 always
+  157 ucontrol within *tmp93 *tmp100 5 *tmp103
+  158 jump *label397 equal *tmp103 false
   159 label *label60
   160 label *label57
   161 op div *tmp106 3.8197185279121366 :locateOreAway:distance

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   189 set :locateOreAway:lastY :locateOreAway:y
   190 set :visited:i .locationsStart
   191 label *label72
-    * jump *label74 greaterThanEq :visited:i .locations
+  192 jump *label74 greaterThanEq .locationsStart .locations
   193 label *label390
   194 op mul :visited:index 4 :visited:i
   195 op add *tmp133 :visited:index 2

Modifications by Unroll loop at line 464:9 (+53 instructions):
 
   764 set :createTerrainMask:r 3
   765 label *label290
   766 label *label391
-    * set :createTerrainMask:c 3
-    * op add *tmp386 :createTerrainMask:y :createTerrainMask:r
-    * label *label293
-    * label *label392
-    * op shl *tmp384 :createTerrainMask:result 1
-    * op add *tmp385 :createTerrainMask:x :createTerrainMask:c
-    * set :isBlocked:x *tmp385
-    * set :isBlocked:y *tmp386
-    * ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
-    * select type equal type @boulder @air type
-    * select :isBlocked:result equal type @air 0 1
-    * label *label296
-    * op or :createTerrainMask:result *tmp384 :isBlocked:result
-    * label *label294
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
-    * jump *label392 greaterThanEq :createTerrainMask:c -3
-    * label *label295
+  767 set :createTerrainMask:c 3
+  768 op add *tmp386 :createTerrainMask:y :createTerrainMask:r
+  769 label *label398
+  770 label *label399
+  771 op shl *tmp384 :createTerrainMask:result 1
+  772 op add *tmp385 :createTerrainMask:x :createTerrainMask:c
+  773 set :isBlocked:x *tmp385
+  774 set :isBlocked:y *tmp386
+  775 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
+  776 select type equal type @boulder @air type
+  777 select :isBlocked:result equal type @air 0 1
+  778 label *label400
+  779 op or :createTerrainMask:result *tmp384 :isBlocked:result
+  780 label *label401
+  781 op sub :createTerrainMask:c :createTerrainMask:c 1
+  782 label *label402
+  783 op shl *tmp384 :createTerrainMask:result 1
+  784 op add *tmp385 :createTerrainMask:x :createTerrainMask:c
+  785 set :isBlocked:x *tmp385
+  786 set :isBlocked:y *tmp386
+  787 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
+  788 select type equal type @boulder @air type
+  789 select :isBlocked:result equal type @air 0 1
+  790 label *label403
+  791 op or :createTerrainMask:result *tmp384 :isBlocked:result
+  792 label *label404
+  793 op sub :createTerrainMask:c :createTerrainMask:c 1
+  794 label *label405
+  795 op shl *tmp384 :createTerrainMask:result 1
+  796 op add *tmp385 :createTerrainMask:x :createTerrainMask:c
+  797 set :isBlocked:x *tmp385
+  798 set :isBlocked:y *tmp386
+  799 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
+  800 select type equal type @boulder @air type
+  801 select :isBlocked:result equal type @air 0 1
+  802 label *label406
+  803 op or :createTerrainMask:result *tmp384 :isBlocked:result
+  804 label *label407
+  805 op sub :createTerrainMask:c :createTerrainMask:c 1
+  806 label *label408
+  807 op shl *tmp384 :createTerrainMask:result 1
+  808 op add *tmp385 :createTerrainMask:x :createTerrainMask:c
+  809 set :isBlocked:x *tmp385
+  810 set :isBlocked:y *tmp386
+  811 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
+  812 select type equal type @boulder @air type
+  813 select :isBlocked:result equal type @air 0 1
+  814 label *label409
+  815 op or :createTerrainMask:result *tmp384 :isBlocked:result
+  816 label *label410
+  817 op sub :createTerrainMask:c :createTerrainMask:c 1
+  818 label *label411
+  819 op shl *tmp384 :createTerrainMask:result 1
+  820 op add *tmp385 :createTerrainMask:x :createTerrainMask:c
+  821 set :isBlocked:x *tmp385
+  822 set :isBlocked:y *tmp386
+  823 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
+  824 select type equal type @boulder @air type
+  825 select :isBlocked:result equal type @air 0 1
+  826 label *label412
+  827 op or :createTerrainMask:result *tmp384 :isBlocked:result
+  828 label *label413
+  829 op sub :createTerrainMask:c :createTerrainMask:c 1
+  830 label *label414
+  831 op shl *tmp384 :createTerrainMask:result 1
+  832 op add *tmp385 :createTerrainMask:x :createTerrainMask:c
+  833 set :isBlocked:x *tmp385
+  834 set :isBlocked:y *tmp386
+  835 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
+  836 select type equal type @boulder @air type
+  837 select :isBlocked:result equal type @air 0 1
+  838 label *label415
+  839 op or :createTerrainMask:result *tmp384 :isBlocked:result
+  840 label *label416
+  841 op sub :createTerrainMask:c :createTerrainMask:c 1
+  842 label *label417
+  843 op shl *tmp384 :createTerrainMask:result 1
+  844 op add *tmp385 :createTerrainMask:x :createTerrainMask:c
+  845 set :isBlocked:x *tmp385
+  846 set :isBlocked:y *tmp386
+  847 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
+  848 select type equal type @boulder @air type
+  849 select :isBlocked:result equal type @air 0 1
+  850 label *label418
+  851 op or :createTerrainMask:result *tmp384 :isBlocked:result
+  852 label *label419
+  853 op sub :createTerrainMask:c :createTerrainMask:c 1
+  854 label *label295
   855 label *label291
   856 op sub :createTerrainMask:r :createTerrainMask:r 1
   857 jump *label391 greaterThanEq :createTerrainMask:r -3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   769 label *label398
   770 label *label399
   771 op shl *tmp384 :createTerrainMask:result 1
-    * op add *tmp385 :createTerrainMask:x :createTerrainMask:c
+  772 op add *tmp385 :createTerrainMask:x 3
   773 set :isBlocked:x *tmp385
   774 set :isBlocked:y *tmp386
   775 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
 
   778 label *label400
   779 op or :createTerrainMask:result *tmp384 :isBlocked:result
   780 label *label401
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
+  781 op sub :createTerrainMask:c 3 1
   782 label *label402
   783 op shl *tmp384 :createTerrainMask:result 1
-    * op add *tmp385 :createTerrainMask:x :createTerrainMask:c
+  784 op add *tmp385 :createTerrainMask:x 2
   785 set :isBlocked:x *tmp385
   786 set :isBlocked:y *tmp386
   787 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
 
   790 label *label403
   791 op or :createTerrainMask:result *tmp384 :isBlocked:result
   792 label *label404
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
+  793 op sub :createTerrainMask:c 2 1
   794 label *label405
   795 op shl *tmp384 :createTerrainMask:result 1
-    * op add *tmp385 :createTerrainMask:x :createTerrainMask:c
+  796 op add *tmp385 :createTerrainMask:x 1
   797 set :isBlocked:x *tmp385
   798 set :isBlocked:y *tmp386
   799 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
 
   802 label *label406
   803 op or :createTerrainMask:result *tmp384 :isBlocked:result
   804 label *label407
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
+  805 op sub :createTerrainMask:c 1 1
   806 label *label408
   807 op shl *tmp384 :createTerrainMask:result 1
-    * op add *tmp385 :createTerrainMask:x :createTerrainMask:c
+  808 op add *tmp385 :createTerrainMask:x 0
   809 set :isBlocked:x *tmp385
   810 set :isBlocked:y *tmp386
   811 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
 
   814 label *label409
   815 op or :createTerrainMask:result *tmp384 :isBlocked:result
   816 label *label410
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
+  817 op sub :createTerrainMask:c 0 1
   818 label *label411
   819 op shl *tmp384 :createTerrainMask:result 1
-    * op add *tmp385 :createTerrainMask:x :createTerrainMask:c
+  820 op add *tmp385 :createTerrainMask:x -1
   821 set :isBlocked:x *tmp385
   822 set :isBlocked:y *tmp386
   823 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
 
   826 label *label412
   827 op or :createTerrainMask:result *tmp384 :isBlocked:result
   828 label *label413
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
+  829 op sub :createTerrainMask:c -1 1
   830 label *label414
   831 op shl *tmp384 :createTerrainMask:result 1
-    * op add *tmp385 :createTerrainMask:x :createTerrainMask:c
+  832 op add *tmp385 :createTerrainMask:x -2
   833 set :isBlocked:x *tmp385
   834 set :isBlocked:y *tmp386
   835 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
 
   838 label *label415
   839 op or :createTerrainMask:result *tmp384 :isBlocked:result
   840 label *label416
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
+  841 op sub :createTerrainMask:c -2 1
   842 label *label417
   843 op shl *tmp384 :createTerrainMask:result 1
-    * op add *tmp385 :createTerrainMask:x :createTerrainMask:c
+  844 op add *tmp385 :createTerrainMask:x -3
   845 set :isBlocked:x *tmp385
   846 set :isBlocked:y *tmp386
   847 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
 
   850 label *label418
   851 op or :createTerrainMask:result *tmp384 :isBlocked:result
   852 label *label419
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
+  853 op sub :createTerrainMask:c -3 1
   854 label *label295
   855 label *label291
   856 op sub :createTerrainMask:r :createTerrainMask:r 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   764 set :createTerrainMask:r 3
   765 label *label290
   766 label *label391
-    * set :createTerrainMask:c 3
   767 op add *tmp386 :createTerrainMask:y :createTerrainMask:r
   768 label *label398
   769 label *label399
 
   777 label *label400
   778 op or :createTerrainMask:result *tmp384 :isBlocked:result
   779 label *label401
-    * op sub :createTerrainMask:c 3 1
   780 label *label402
   781 op shl *tmp384 :createTerrainMask:result 1
   782 op add *tmp385 :createTerrainMask:x 2
 
   788 label *label403
   789 op or :createTerrainMask:result *tmp384 :isBlocked:result
   790 label *label404
-    * op sub :createTerrainMask:c 2 1
   791 label *label405
   792 op shl *tmp384 :createTerrainMask:result 1
   793 op add *tmp385 :createTerrainMask:x 1
 
   799 label *label406
   800 op or :createTerrainMask:result *tmp384 :isBlocked:result
   801 label *label407
-    * op sub :createTerrainMask:c 1 1
   802 label *label408
   803 op shl *tmp384 :createTerrainMask:result 1
   804 op add *tmp385 :createTerrainMask:x 0
 
   810 label *label409
   811 op or :createTerrainMask:result *tmp384 :isBlocked:result
   812 label *label410
-    * op sub :createTerrainMask:c 0 1
   813 label *label411
   814 op shl *tmp384 :createTerrainMask:result 1
   815 op add *tmp385 :createTerrainMask:x -1
 
   821 label *label412
   822 op or :createTerrainMask:result *tmp384 :isBlocked:result
   823 label *label413
-    * op sub :createTerrainMask:c -1 1
   824 label *label414
   825 op shl *tmp384 :createTerrainMask:result 1
   826 op add *tmp385 :createTerrainMask:x -2
 
   832 label *label415
   833 op or :createTerrainMask:result *tmp384 :isBlocked:result
   834 label *label416
-    * op sub :createTerrainMask:c -2 1
   835 label *label417
   836 op shl *tmp384 :createTerrainMask:result 1
   837 op add *tmp385 :createTerrainMask:x -3
 
   843 label *label418
   844 op or :createTerrainMask:result *tmp384 :isBlocked:result
   845 label *label419
-    * op sub :createTerrainMask:c -3 1
   846 label *label295
   847 label *label291
   848 op sub :createTerrainMask:r :createTerrainMask:r 1

Modifications by Replicate loop condition at line 41:5 (+1 instructions):
 
   244 label *label85
   245 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp155
   246 jump *label87 notEqual *tmp155 false
+  247 label *label420
   248 ucontrol approach :locateOreAway:x :locateOreAway:y 5.5
   249 label *label86
-    * jump *label85 always
+  250 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp155
+  251 jump *label420 equal *tmp155 false
   252 label *label87
   253 label *label84
   254 label *label83

Modifications by Replicate loop condition at line 41:5 (+1 instructions):
 
   756 label *label287
   757 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp381
   758 jump *label289 notEqual *tmp381 false
+  759 label *label421
   760 ucontrol approach :createTerrainMask:x :createTerrainMask:y 5.5
   761 label *label288
-    * jump *label287 always
+  762 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp381
+  763 jump *label421 equal *tmp381 false
   764 label *label289
   765 label *label286
   766 label *label285

Modifications by Inline function call at line 151:14 (+59 instructions):
 
   263 set :computeRowValues:y *tmp159
   264 set :computeRowValues:ore :findDrillLocationLocal:ore
   265 set :computeRowValues:size :findDrillLocationLocal:size
-    * setaddr :computeRowValues*retaddr *label92 (h:*label92)
-    * call *label5 *invalid :computeRowValues*retval (m:*label92) (h:*label92)
-    * label *label92
+  266 label *label422
+  267 op sub :spotValue:x :computeRowValues:x 2
+  268 set :spotValue:y :computeRowValues:y
+  269 set :spotValue:ore :computeRowValues:ore
+  270 ucontrol getBlock :spotValue:x :spotValue:y type building floor
+  271 select value equal floor :spotValue:ore 0.00392156862745098 0
+  272 sensor solid type @solid
+  273 select :spotValue:result notEqual solid false WALL value
+  274 label *label423
+  275 op sub :spotValue.1:x :computeRowValues:x 1
+  276 set :spotValue.1:y :computeRowValues:y
+  277 set :spotValue.1:ore :computeRowValues:ore
+  278 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
+  279 select value equal floor :spotValue.1:ore 0.00392156862745098 0
+  280 sensor solid type @solid
+  281 select :spotValue.1:result notEqual solid false WALL value
+  282 label *label424
+  283 set :spotValue.2:x :computeRowValues:x
+  284 set :spotValue.2:y :computeRowValues:y
+  285 set :spotValue.2:ore :computeRowValues:ore
+  286 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
+  287 select value equal floor :spotValue.2:ore 0.00392156862745098 0
+  288 sensor solid type @solid
+  289 select :spotValue.2:result notEqual solid false WALL value
+  290 label *label425
+  291 op add :spotValue.3:x :computeRowValues:x 1
+  292 set :spotValue.3:y :computeRowValues:y
+  293 set :spotValue.3:ore :computeRowValues:ore
+  294 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
+  295 select value equal floor :spotValue.3:ore 0.00392156862745098 0
+  296 sensor solid type @solid
+  297 select :spotValue.3:result notEqual solid false WALL value
+  298 label *label426
+  299 op add :spotValue.4:x :computeRowValues:x 2
+  300 set :spotValue.4:y :computeRowValues:y
+  301 set :spotValue.4:ore :computeRowValues:ore
+  302 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
+  303 select value equal floor :spotValue.4:ore 0.00392156862745098 0
+  304 sensor solid type @solid
+  305 select :spotValue.4:result notEqual solid false WALL value
+  306 label *label427
+  307 jump *label428 notEqual :computeRowValues:size 2
+  308 op add *tmp12 :spotValue:result :spotValue.1:result
+  309 op add *tmp13 :spotValue.1:result :spotValue.2:result
+  310 op add *tmp14 :spotValue.2:result :spotValue.3:result
+  311 op add *tmp15 :spotValue.3:result :spotValue.4:result
+  312 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
+  313 jump *label432 always
+  314 jump *label431 always
+  315 label *label428
+  316 jump *label429 notEqual :computeRowValues:size 3
+  317 op add *tmp19 :spotValue:result :spotValue.1:result
+  318 op add *tmp20 *tmp19 :spotValue.2:result
+  319 op add *tmp21 :spotValue.1:result :spotValue.2:result
+  320 op add *tmp22 *tmp21 :spotValue.3:result
+  321 op add *tmp23 :spotValue.2:result :spotValue.3:result
+  322 op add *tmp24 *tmp23 :spotValue.4:result
+  323 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
+  324 jump *label432 always
+  325 jump *label430 always
+  326 label *label429
+  327 op add *tmp26 :spotValue:result :spotValue.1:result
+  328 op add *tmp27 *tmp26 :spotValue.2:result
+  329 op add *tmp28 *tmp27 :spotValue.3:result
+  330 op add *tmp29 :spotValue.1:result :spotValue.2:result
+  331 op add *tmp30 *tmp29 :spotValue.3:result
+  332 op add *tmp31 *tmp30 :spotValue.4:result
+  333 packcolor :computeRowValues*retval *tmp28 *tmp31 0 0
+  334 jump *label432 always
+  335 label *label430
+  336 label *label431
+  337 label *label432
   338 set :findBestPosition:y1 :computeRowValues*retval
   339 op sub *tmp161 :findBestPosition:y 1
   340 set :computeRowValues:x :findBestPosition:x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   264 set :computeRowValues:ore :findDrillLocationLocal:ore
   265 set :computeRowValues:size :findDrillLocationLocal:size
   266 label *label422
-    * op sub :spotValue:x :computeRowValues:x 2
-    * set :spotValue:y :computeRowValues:y
-    * set :spotValue:ore :computeRowValues:ore
+  267 op sub :spotValue:x :findDrillLocationLocal:oreX 2
+  268 set :spotValue:y *tmp159
+  269 set :spotValue:ore :findDrillLocationLocal:ore
   270 ucontrol getBlock :spotValue:x :spotValue:y type building floor
   271 select value equal floor :spotValue:ore 0.00392156862745098 0
   272 sensor solid type @solid
   273 select :spotValue:result notEqual solid false WALL value
   274 label *label423
-    * op sub :spotValue.1:x :computeRowValues:x 1
-    * set :spotValue.1:y :computeRowValues:y
-    * set :spotValue.1:ore :computeRowValues:ore
+  275 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
+  276 set :spotValue.1:y *tmp159
+  277 set :spotValue.1:ore :findDrillLocationLocal:ore
   278 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
   279 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   280 sensor solid type @solid
   281 select :spotValue.1:result notEqual solid false WALL value
   282 label *label424
-    * set :spotValue.2:x :computeRowValues:x
-    * set :spotValue.2:y :computeRowValues:y
-    * set :spotValue.2:ore :computeRowValues:ore
+  283 set :spotValue.2:x :findDrillLocationLocal:oreX
+  284 set :spotValue.2:y *tmp159
+  285 set :spotValue.2:ore :findDrillLocationLocal:ore
   286 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
   287 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   288 sensor solid type @solid
   289 select :spotValue.2:result notEqual solid false WALL value
   290 label *label425
-    * op add :spotValue.3:x :computeRowValues:x 1
-    * set :spotValue.3:y :computeRowValues:y
-    * set :spotValue.3:ore :computeRowValues:ore
+  291 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
+  292 set :spotValue.3:y *tmp159
+  293 set :spotValue.3:ore :findDrillLocationLocal:ore
   294 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
   295 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   296 sensor solid type @solid
   297 select :spotValue.3:result notEqual solid false WALL value
   298 label *label426
-    * op add :spotValue.4:x :computeRowValues:x 2
-    * set :spotValue.4:y :computeRowValues:y
-    * set :spotValue.4:ore :computeRowValues:ore
+  299 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
+  300 set :spotValue.4:y *tmp159
+  301 set :spotValue.4:ore :findDrillLocationLocal:ore
   302 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
   303 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   304 sensor solid type @solid
   305 select :spotValue.4:result notEqual solid false WALL value
   306 label *label427
-    * jump *label428 notEqual :computeRowValues:size 2
+  307 jump *label428 notEqual :findDrillLocationLocal:size 2
   308 op add *tmp12 :spotValue:result :spotValue.1:result
   309 op add *tmp13 :spotValue.1:result :spotValue.2:result
   310 op add *tmp14 :spotValue.2:result :spotValue.3:result
 
   313 jump *label432 always
   314 jump *label431 always
   315 label *label428
-    * jump *label429 notEqual :computeRowValues:size 3
+  316 jump *label429 notEqual :findDrillLocationLocal:size 3
   317 op add *tmp19 :spotValue:result :spotValue.1:result
   318 op add *tmp20 *tmp19 :spotValue.2:result
   319 op add *tmp21 :spotValue.1:result :spotValue.2:result
 
   336 label *label431
   337 label *label432
   338 set :findBestPosition:y1 :computeRowValues*retval
-    * op sub *tmp161 :findBestPosition:y 1
-    * set :computeRowValues:x :findBestPosition:x
+  339 op sub *tmp161 :findDrillLocationLocal:oreY 1
+  340 set :computeRowValues:x :findDrillLocationLocal:oreX
   341 set :computeRowValues:y *tmp161
-    * set :computeRowValues:ore :findBestPosition:ore
-    * set :computeRowValues:size :findBestPosition:size
+  342 set :computeRowValues:ore :findDrillLocationLocal:ore
+  343 set :computeRowValues:size :findDrillLocationLocal:size
   344 setaddr :computeRowValues*retaddr *label93 (h:*label93)
   345 call *label5 *invalid :computeRowValues*retval (m:*label93) (h:*label93)
   346 label *label93

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   259 set :findBestPosition:ore :findDrillLocationLocal:ore
   260 set :findBestPosition:size :findDrillLocationLocal:size
   261 op sub *tmp159 :findDrillLocationLocal:oreY 2
-    * set :computeRowValues:x :findDrillLocationLocal:oreX
-    * set :computeRowValues:y *tmp159
-    * set :computeRowValues:ore :findDrillLocationLocal:ore
-    * set :computeRowValues:size :findDrillLocationLocal:size
   262 label *label422
   263 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   264 set :spotValue:y *tmp159

Modifications by Inline function call at line 152:14 (+59 instructions):
 
   337 set :computeRowValues:y *tmp161
   338 set :computeRowValues:ore :findDrillLocationLocal:ore
   339 set :computeRowValues:size :findDrillLocationLocal:size
-    * setaddr :computeRowValues*retaddr *label93 (h:*label93)
-    * call *label5 *invalid :computeRowValues*retval (m:*label93) (h:*label93)
-    * label *label93
+  340 label *label433
+  341 op sub :spotValue:x :computeRowValues:x 2
+  342 set :spotValue:y :computeRowValues:y
+  343 set :spotValue:ore :computeRowValues:ore
+  344 ucontrol getBlock :spotValue:x :spotValue:y type building floor
+  345 select value equal floor :spotValue:ore 0.00392156862745098 0
+  346 sensor solid type @solid
+  347 select :spotValue:result notEqual solid false WALL value
+  348 label *label434
+  349 op sub :spotValue.1:x :computeRowValues:x 1
+  350 set :spotValue.1:y :computeRowValues:y
+  351 set :spotValue.1:ore :computeRowValues:ore
+  352 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
+  353 select value equal floor :spotValue.1:ore 0.00392156862745098 0
+  354 sensor solid type @solid
+  355 select :spotValue.1:result notEqual solid false WALL value
+  356 label *label435
+  357 set :spotValue.2:x :computeRowValues:x
+  358 set :spotValue.2:y :computeRowValues:y
+  359 set :spotValue.2:ore :computeRowValues:ore
+  360 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
+  361 select value equal floor :spotValue.2:ore 0.00392156862745098 0
+  362 sensor solid type @solid
+  363 select :spotValue.2:result notEqual solid false WALL value
+  364 label *label436
+  365 op add :spotValue.3:x :computeRowValues:x 1
+  366 set :spotValue.3:y :computeRowValues:y
+  367 set :spotValue.3:ore :computeRowValues:ore
+  368 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
+  369 select value equal floor :spotValue.3:ore 0.00392156862745098 0
+  370 sensor solid type @solid
+  371 select :spotValue.3:result notEqual solid false WALL value
+  372 label *label437
+  373 op add :spotValue.4:x :computeRowValues:x 2
+  374 set :spotValue.4:y :computeRowValues:y
+  375 set :spotValue.4:ore :computeRowValues:ore
+  376 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
+  377 select value equal floor :spotValue.4:ore 0.00392156862745098 0
+  378 sensor solid type @solid
+  379 select :spotValue.4:result notEqual solid false WALL value
+  380 label *label438
+  381 jump *label439 notEqual :computeRowValues:size 2
+  382 op add *tmp12 :spotValue:result :spotValue.1:result
+  383 op add *tmp13 :spotValue.1:result :spotValue.2:result
+  384 op add *tmp14 :spotValue.2:result :spotValue.3:result
+  385 op add *tmp15 :spotValue.3:result :spotValue.4:result
+  386 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
+  387 jump *label443 always
+  388 jump *label442 always
+  389 label *label439
+  390 jump *label440 notEqual :computeRowValues:size 3
+  391 op add *tmp19 :spotValue:result :spotValue.1:result
+  392 op add *tmp20 *tmp19 :spotValue.2:result
+  393 op add *tmp21 :spotValue.1:result :spotValue.2:result
+  394 op add *tmp22 *tmp21 :spotValue.3:result
+  395 op add *tmp23 :spotValue.2:result :spotValue.3:result
+  396 op add *tmp24 *tmp23 :spotValue.4:result
+  397 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
+  398 jump *label443 always
+  399 jump *label441 always
+  400 label *label440
+  401 op add *tmp26 :spotValue:result :spotValue.1:result
+  402 op add *tmp27 *tmp26 :spotValue.2:result
+  403 op add *tmp28 *tmp27 :spotValue.3:result
+  404 op add *tmp29 :spotValue.1:result :spotValue.2:result
+  405 op add *tmp30 *tmp29 :spotValue.3:result
+  406 op add *tmp31 *tmp30 :spotValue.4:result
+  407 packcolor :computeRowValues*retval *tmp28 *tmp31 0 0
+  408 jump *label443 always
+  409 label *label441
+  410 label *label442
+  411 label *label443
   412 set :findBestPosition:y2 :computeRowValues*retval
   413 set :computeRowValues:x :findBestPosition:x
   414 set :computeRowValues:y :findBestPosition:y

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   338 set :computeRowValues:ore :findDrillLocationLocal:ore
   339 set :computeRowValues:size :findDrillLocationLocal:size
   340 label *label433
-    * op sub :spotValue:x :computeRowValues:x 2
-    * set :spotValue:y :computeRowValues:y
-    * set :spotValue:ore :computeRowValues:ore
+  341 op sub :spotValue:x :findDrillLocationLocal:oreX 2
+  342 set :spotValue:y *tmp161
+  343 set :spotValue:ore :findDrillLocationLocal:ore
   344 ucontrol getBlock :spotValue:x :spotValue:y type building floor
   345 select value equal floor :spotValue:ore 0.00392156862745098 0
   346 sensor solid type @solid
   347 select :spotValue:result notEqual solid false WALL value
   348 label *label434
-    * op sub :spotValue.1:x :computeRowValues:x 1
-    * set :spotValue.1:y :computeRowValues:y
-    * set :spotValue.1:ore :computeRowValues:ore
+  349 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
+  350 set :spotValue.1:y *tmp161
+  351 set :spotValue.1:ore :findDrillLocationLocal:ore
   352 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
   353 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   354 sensor solid type @solid
   355 select :spotValue.1:result notEqual solid false WALL value
   356 label *label435
-    * set :spotValue.2:x :computeRowValues:x
-    * set :spotValue.2:y :computeRowValues:y
-    * set :spotValue.2:ore :computeRowValues:ore
+  357 set :spotValue.2:x :findDrillLocationLocal:oreX
+  358 set :spotValue.2:y *tmp161
+  359 set :spotValue.2:ore :findDrillLocationLocal:ore
   360 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
   361 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   362 sensor solid type @solid
   363 select :spotValue.2:result notEqual solid false WALL value
   364 label *label436
-    * op add :spotValue.3:x :computeRowValues:x 1
-    * set :spotValue.3:y :computeRowValues:y
-    * set :spotValue.3:ore :computeRowValues:ore
+  365 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
+  366 set :spotValue.3:y *tmp161
+  367 set :spotValue.3:ore :findDrillLocationLocal:ore
   368 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
   369 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   370 sensor solid type @solid
   371 select :spotValue.3:result notEqual solid false WALL value
   372 label *label437
-    * op add :spotValue.4:x :computeRowValues:x 2
-    * set :spotValue.4:y :computeRowValues:y
-    * set :spotValue.4:ore :computeRowValues:ore
+  373 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
+  374 set :spotValue.4:y *tmp161
+  375 set :spotValue.4:ore :findDrillLocationLocal:ore
   376 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
   377 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   378 sensor solid type @solid
   379 select :spotValue.4:result notEqual solid false WALL value
   380 label *label438
-    * jump *label439 notEqual :computeRowValues:size 2
+  381 jump *label439 notEqual :findDrillLocationLocal:size 2
   382 op add *tmp12 :spotValue:result :spotValue.1:result
   383 op add *tmp13 :spotValue.1:result :spotValue.2:result
   384 op add *tmp14 :spotValue.2:result :spotValue.3:result
 
   387 jump *label443 always
   388 jump *label442 always
   389 label *label439
-    * jump *label440 notEqual :computeRowValues:size 3
+  390 jump *label440 notEqual :findDrillLocationLocal:size 3
   391 op add *tmp19 :spotValue:result :spotValue.1:result
   392 op add *tmp20 *tmp19 :spotValue.2:result
   393 op add *tmp21 :spotValue.1:result :spotValue.2:result
 
   410 label *label442
   411 label *label443
   412 set :findBestPosition:y2 :computeRowValues*retval
-    * set :computeRowValues:x :findBestPosition:x
-    * set :computeRowValues:y :findBestPosition:y
-    * set :computeRowValues:ore :findBestPosition:ore
-    * set :computeRowValues:size :findBestPosition:size
+  413 set :computeRowValues:x :findDrillLocationLocal:oreX
+  414 set :computeRowValues:y :findDrillLocationLocal:oreY
+  415 set :computeRowValues:ore :findDrillLocationLocal:ore
+  416 set :computeRowValues:size :findDrillLocationLocal:size
   417 setaddr :computeRowValues*retaddr *label94 (h:*label94)
   418 call *label5 *invalid :computeRowValues*retval (m:*label94) (h:*label94)
   419 label *label94

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   333 label *label432
   334 set :findBestPosition:y1 :computeRowValues*retval
   335 op sub *tmp161 :findDrillLocationLocal:oreY 1
-    * set :computeRowValues:x :findDrillLocationLocal:oreX
-    * set :computeRowValues:y *tmp161
-    * set :computeRowValues:ore :findDrillLocationLocal:ore
-    * set :computeRowValues:size :findDrillLocationLocal:size
   336 label *label433
   337 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   338 set :spotValue:y *tmp161

Modifications by Replicate loop condition at line 41:5 (+1 instructions):
 
   104 label *label45
   105 ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp73
   106 jump *label47 notEqual *tmp73 false
+  107 label *label444
   108 ucontrol approach :findDrillLocationLocal:x :findDrillLocationLocal:y 5.5
   109 label *label46
-    * jump *label45 always
+  110 ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp73
+  111 jump *label444 equal *tmp73 false
   112 label *label47
   113 label *label44
   114 label *label43

Modifications by Inline function 'printMask' defined at line 719:1 (+14 instructions):
 
  1146 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
  1147 label *label330
  1148 set :layoutThoriumDrillAtLocation:extractorMask 387
-    * setaddr :printMask*retaddr *label331 (h:*label331)
-    * call *label13 *invalid :printMask*retval (m:*label331) (h:*label331)
-    * label *label331
-    * setaddr :printMask*retaddr *label332 (h:*label332)
-    * call *label13 *invalid :printMask*retval (m:*label332) (h:*label332)
-    * label *label332
-    * setaddr :printMask*retaddr *label333 (h:*label333)
-    * call *label13 *invalid :printMask*retval (m:*label333) (h:*label333)
-    * label *label333
+ 1149 label *label445
+ 1150 jump *label456 always
+ 1151 print :printMask:text
+ 1152 print "\n"
+ 1153 label *label446
+ 1154 jump *label455 lessThan :printMask:r 0
+ 1155 label *label447
+ 1156 label *label448
+ 1157 jump *label453 greaterThanEq :printMask:c 7
+ 1158 label *label449
+ 1159 jump *label450 equal *tmp550 false
+ 1160 jump *label451 always
+ 1161 label *label450
+ 1162 label *label451
+ 1163 print "x"
+ 1164 label *label452
+ 1165 jump *label449 lessThan :printMask:c 7
+ 1166 label *label453
+ 1167 print "\n"
+ 1168 label *label454
+ 1169 jump *label447 greaterThanEq :printMask:r 0
+ 1170 label *label455
+ 1171 label *label456
+ 1172 label *label457
+ 1173 label *label458
+ 1174 label *label459
+ 1175 jump *label470 always
+ 1176 print :printMask:text
+ 1177 print "\n"
+ 1178 label *label460
+ 1179 jump *label469 lessThan :printMask:r 0
+ 1180 label *label461
+ 1181 label *label462
+ 1182 jump *label467 greaterThanEq :printMask:c 7
+ 1183 label *label463
+ 1184 jump *label464 equal *tmp550 false
+ 1185 jump *label465 always
+ 1186 label *label464
+ 1187 label *label465
+ 1188 print "x"
+ 1189 label *label466
+ 1190 jump *label463 lessThan :printMask:c 7
+ 1191 label *label467
+ 1192 print "\n"
+ 1193 label *label468
+ 1194 jump *label461 greaterThanEq :printMask:r 0
+ 1195 label *label469
+ 1196 label *label470
+ 1197 label *label471
+ 1198 label *label472
+ 1199 label *label473
+ 1200 jump *label484 always
+ 1201 print :printMask:text
+ 1202 print "\n"
+ 1203 label *label474
+ 1204 jump *label483 lessThan :printMask:r 0
+ 1205 label *label475
+ 1206 label *label476
+ 1207 jump *label481 greaterThanEq :printMask:c 7
+ 1208 label *label477
+ 1209 jump *label478 equal *tmp550 false
+ 1210 jump *label479 always
+ 1211 label *label478
+ 1212 label *label479
+ 1213 print "x"
+ 1214 label *label480
+ 1215 jump *label477 lessThan :printMask:c 7
+ 1216 label *label481
+ 1217 print "\n"
+ 1218 label *label482
+ 1219 jump *label475 greaterThanEq :printMask:r 0
+ 1220 label *label483
+ 1221 label *label484
+ 1222 label *label485
+ 1223 label *label486
  1224 jump *label335 always
  1225 print ""
  1226 jump *label338 always
 
  1410 set :layoutThoriumDrill*finished true
  1411 jump *label15 always
  1412 end
-    * label *label13
-    * jump *label379 always
-    * print :printMask:text
-    * print "\n"
-    * label *label381
-    * jump *label383 lessThan :printMask:r 0
-    * label *label395
-    * label *label384
-    * jump *label386 greaterThanEq :printMask:c 7
-    * label *label396
-    * jump *label387 equal *tmp550 false
-    * jump *label388 always
-    * label *label387
-    * label *label388
-    * print "x"
-    * label *label385
-    * jump *label396 lessThan :printMask:c 7
-    * label *label386
-    * print "\n"
-    * label *label382
-    * jump *label395 greaterThanEq :printMask:r 0
-    * label *label383
-    * label *label379
-    * label *label380
-    * label *label378
-    * return :printMask*retaddr
-    * end

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-13 instructions):
 
    77 op add *tmp30 *tmp29 :spotValue.3:result
    78 op add *tmp31 *tmp30 :spotValue.4:result
    79 packcolor :computeRowValues*retval *tmp28 *tmp31 0 0
-    * jump *label16 always
    80 label *label25
    81 label *label23
    82 label *label16
 
   210 jump *label390 lessThan :visited:i .locations
   211 label *label74
   212 set *tmp129 false
-    * jump *label71 always
   213 label *label71
   214 jump *label77 notEqual *tmp129 false
   215 op div *tmp145 2 .angle
 
   228 jump *label389 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   229 label *label54
   230 set *tmp83 false
-    * jump *label51 always
   231 label *label51
   232 set :findDrillLocationLocal:oreX :locateOreAway:x
   233 set :findDrillLocationLocal:oreY :locateOreAway:y
 
   326 op add *tmp30 *tmp29 :spotValue.3:result
   327 op add *tmp31 *tmp30 :spotValue.4:result
   328 packcolor :computeRowValues*retval *tmp28 *tmp31 0 0
-    * jump *label432 always
   329 label *label430
   330 label *label431
   331 label *label432
 
   399 op add *tmp30 *tmp29 :spotValue.3:result
   400 op add *tmp31 *tmp30 :spotValue.4:result
   401 packcolor :computeRowValues*retval *tmp28 *tmp31 0 0
-    * jump *label443 always
   402 label *label441
   403 label *label442
   404 label *label443
 
   775 label *label257
   776 label *label255
   777 op mul *tmp158 :findBestPosition:best 255
-    * jump *label91 always
   778 label *label91
   779 jump *label261 lessThanEq *tmp158 :findDrillLocationLocal:capacity
   780 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
 
   979 jump *label391 greaterThanEq :createTerrainMask:r -3
   980 label *label292
   981 set :createTerrainMask*retval :createTerrainMask:result
-    * jump *label284 always
   982 label *label284
   983 return :createTerrainMask*retaddr
   984 end
 
  1022 jump *label393 lessThanEq :findPossiblePlacement:y 3
  1023 label *label300
  1024 set :findPossiblePlacement*retval -1
-    * jump *label297 always
  1025 label *label297
  1026 return :findPossiblePlacement*retaddr
  1027 end
 
  1149 jump *label453 greaterThanEq :printMask:c 7
  1150 label *label449
  1151 jump *label450 equal *tmp550 false
-    * jump *label451 always
  1152 label *label450
  1153 label *label451
  1154 print "x"
 
  1173 jump *label467 greaterThanEq :printMask:c 7
  1174 label *label463
  1175 jump *label464 equal *tmp550 false
-    * jump *label465 always
  1176 label *label464
  1177 label *label465
  1178 print "x"
 
  1197 jump *label481 greaterThanEq :printMask:c 7
  1198 label *label477
  1199 jump *label478 equal *tmp550 false
-    * jump *label479 always
  1200 label *label478
  1201 label *label479
  1202 print "x"
 
  1327 label *label364
  1328 label *label365
  1329 set *tmp512 :shiftMask:mask
-    * jump *label359 always
  1330 label *label359
  1331 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp512
  1332 op add *tmp540 .drillX :layoutThoriumDrillAtLocation:sx
 
  1349 multilabel *label357 (m:marker0)
  1350 label *label353
  1351 set :layoutThoriumDrillAtLocation*retval true
-    * jump *label326 always
  1352 label *label326
  1353 return :layoutThoriumDrillAtLocation*retaddr
  1354 end

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-3 instructions):
 
  1148 label *label448
  1149 jump *label453 greaterThanEq :printMask:c 7
  1150 label *label449
-    * jump *label450 equal *tmp550 false
  1151 label *label450
  1152 label *label451
  1153 print "x"
 
  1171 label *label462
  1172 jump *label467 greaterThanEq :printMask:c 7
  1173 label *label463
-    * jump *label464 equal *tmp550 false
  1174 label *label464
  1175 label *label465
  1176 print "x"
 
  1194 label *label476
  1195 jump *label481 greaterThanEq :printMask:c 7
  1196 label *label477
-    * jump *label478 equal *tmp550 false
  1197 label *label478
  1198 label *label479
  1199 print "x"

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   931 label *label407
   932 label *label408
   933 op shl *tmp384 :createTerrainMask:result 1
-    * op add *tmp385 :createTerrainMask:x 0
+  934 set *tmp385 :createTerrainMask:x
   935 set :isBlocked:x *tmp385
   936 set :isBlocked:y *tmp386
   937 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-9 instructions):
 
   304 op add *tmp13 :spotValue.1:result :spotValue.2:result
   305 op add *tmp14 :spotValue.2:result :spotValue.3:result
   306 op add *tmp15 :spotValue.3:result :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
+  307 packcolor :findBestPosition:y1 *tmp12 *tmp13 *tmp14 *tmp15
   308 jump *label432 always
   309 jump *label431 always
   310 label *label428
 
   315 op add *tmp22 *tmp21 :spotValue.3:result
   316 op add *tmp23 :spotValue.2:result :spotValue.3:result
   317 op add *tmp24 *tmp23 :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
+  318 packcolor :findBestPosition:y1 *tmp20 *tmp22 *tmp24 0
   319 jump *label432 always
   320 jump *label430 always
   321 label *label429
 
   325 op add *tmp29 :spotValue.1:result :spotValue.2:result
   326 op add *tmp30 *tmp29 :spotValue.3:result
   327 op add *tmp31 *tmp30 :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp28 *tmp31 0 0
+  328 packcolor :findBestPosition:y1 *tmp28 *tmp31 0 0
   329 label *label430
   330 label *label431
   331 label *label432
-    * set :findBestPosition:y1 :computeRowValues*retval
   332 op sub *tmp161 :findDrillLocationLocal:oreY 1
   333 label *label433
   334 op sub :spotValue:x :findDrillLocationLocal:oreX 2
 
   376 op add *tmp13 :spotValue.1:result :spotValue.2:result
   377 op add *tmp14 :spotValue.2:result :spotValue.3:result
   378 op add *tmp15 :spotValue.3:result :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
+  379 packcolor :findBestPosition:y2 *tmp12 *tmp13 *tmp14 *tmp15
   380 jump *label443 always
   381 jump *label442 always
   382 label *label439
 
   387 op add *tmp22 *tmp21 :spotValue.3:result
   388 op add *tmp23 :spotValue.2:result :spotValue.3:result
   389 op add *tmp24 *tmp23 :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
+  390 packcolor :findBestPosition:y2 *tmp20 *tmp22 *tmp24 0
   391 jump *label443 always
   392 jump *label441 always
   393 label *label440
 
   397 op add *tmp29 :spotValue.1:result :spotValue.2:result
   398 op add *tmp30 *tmp29 :spotValue.3:result
   399 op add *tmp31 *tmp30 :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp28 *tmp31 0 0
+  400 packcolor :findBestPosition:y2 *tmp28 *tmp31 0 0
   401 label *label441
   402 label *label442
   403 label *label443
-    * set :findBestPosition:y2 :computeRowValues*retval
   404 set :computeRowValues:x :findDrillLocationLocal:oreX
   405 set :computeRowValues:y :findDrillLocationLocal:oreY
   406 set :computeRowValues:ore :findDrillLocationLocal:ore
 
   896 label *label398
   897 label *label399
   898 op shl *tmp384 :createTerrainMask:result 1
-    * op add *tmp385 :createTerrainMask:x 3
-    * set :isBlocked:x *tmp385
+  899 op add :isBlocked:x :createTerrainMask:x 3
   900 set :isBlocked:y *tmp386
   901 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   902 select type equal type @boulder @air type
 
   906 label *label401
   907 label *label402
   908 op shl *tmp384 :createTerrainMask:result 1
-    * op add *tmp385 :createTerrainMask:x 2
-    * set :isBlocked:x *tmp385
+  909 op add :isBlocked:x :createTerrainMask:x 2
   910 set :isBlocked:y *tmp386
   911 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   912 select type equal type @boulder @air type
 
   916 label *label404
   917 label *label405
   918 op shl *tmp384 :createTerrainMask:result 1
-    * op add *tmp385 :createTerrainMask:x 1
-    * set :isBlocked:x *tmp385
+  919 op add :isBlocked:x :createTerrainMask:x 1
   920 set :isBlocked:y *tmp386
   921 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   922 select type equal type @boulder @air type
 
   926 label *label407
   927 label *label408
   928 op shl *tmp384 :createTerrainMask:result 1
-    * set *tmp385 :createTerrainMask:x
-    * set :isBlocked:x *tmp385
+  929 set :isBlocked:x :createTerrainMask:x
   930 set :isBlocked:y *tmp386
   931 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   932 select type equal type @boulder @air type
 
   936 label *label410
   937 label *label411
   938 op shl *tmp384 :createTerrainMask:result 1
-    * op add *tmp385 :createTerrainMask:x -1
-    * set :isBlocked:x *tmp385
+  939 op add :isBlocked:x :createTerrainMask:x -1
   940 set :isBlocked:y *tmp386
   941 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   942 select type equal type @boulder @air type
 
   946 label *label413
   947 label *label414
   948 op shl *tmp384 :createTerrainMask:result 1
-    * op add *tmp385 :createTerrainMask:x -2
-    * set :isBlocked:x *tmp385
+  949 op add :isBlocked:x :createTerrainMask:x -2
   950 set :isBlocked:y *tmp386
   951 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   952 select type equal type @boulder @air type
 
   956 label *label416
   957 label *label417
   958 op shl *tmp384 :createTerrainMask:result 1
-    * op add *tmp385 :createTerrainMask:x -3
-    * set :isBlocked:x *tmp385
+  959 op add :isBlocked:x :createTerrainMask:x -3
   960 set :isBlocked:y *tmp386
   961 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   962 select type equal type @boulder @air type

Modifications by Inline function call at line 153:14 (+58 instructions):
 
   405 set :computeRowValues:y :findDrillLocationLocal:oreY
   406 set :computeRowValues:ore :findDrillLocationLocal:ore
   407 set :computeRowValues:size :findDrillLocationLocal:size
-    * setaddr :computeRowValues*retaddr *label94 (h:*label94)
-    * call *label5 *invalid :computeRowValues*retval (m:*label94) (h:*label94)
-    * label *label94
+  408 label *label487
+  409 op sub :spotValue:x :computeRowValues:x 2
+  410 set :spotValue:y :computeRowValues:y
+  411 set :spotValue:ore :computeRowValues:ore
+  412 ucontrol getBlock :spotValue:x :spotValue:y type building floor
+  413 select value equal floor :spotValue:ore 0.00392156862745098 0
+  414 sensor solid type @solid
+  415 select :spotValue:result notEqual solid false WALL value
+  416 label *label488
+  417 op sub :spotValue.1:x :computeRowValues:x 1
+  418 set :spotValue.1:y :computeRowValues:y
+  419 set :spotValue.1:ore :computeRowValues:ore
+  420 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
+  421 select value equal floor :spotValue.1:ore 0.00392156862745098 0
+  422 sensor solid type @solid
+  423 select :spotValue.1:result notEqual solid false WALL value
+  424 label *label489
+  425 set :spotValue.2:x :computeRowValues:x
+  426 set :spotValue.2:y :computeRowValues:y
+  427 set :spotValue.2:ore :computeRowValues:ore
+  428 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
+  429 select value equal floor :spotValue.2:ore 0.00392156862745098 0
+  430 sensor solid type @solid
+  431 select :spotValue.2:result notEqual solid false WALL value
+  432 label *label490
+  433 op add :spotValue.3:x :computeRowValues:x 1
+  434 set :spotValue.3:y :computeRowValues:y
+  435 set :spotValue.3:ore :computeRowValues:ore
+  436 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
+  437 select value equal floor :spotValue.3:ore 0.00392156862745098 0
+  438 sensor solid type @solid
+  439 select :spotValue.3:result notEqual solid false WALL value
+  440 label *label491
+  441 op add :spotValue.4:x :computeRowValues:x 2
+  442 set :spotValue.4:y :computeRowValues:y
+  443 set :spotValue.4:ore :computeRowValues:ore
+  444 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
+  445 select value equal floor :spotValue.4:ore 0.00392156862745098 0
+  446 sensor solid type @solid
+  447 select :spotValue.4:result notEqual solid false WALL value
+  448 label *label492
+  449 jump *label493 notEqual :computeRowValues:size 2
+  450 op add *tmp12 :spotValue:result :spotValue.1:result
+  451 op add *tmp13 :spotValue.1:result :spotValue.2:result
+  452 op add *tmp14 :spotValue.2:result :spotValue.3:result
+  453 op add *tmp15 :spotValue.3:result :spotValue.4:result
+  454 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
+  455 jump *label497 always
+  456 jump *label496 always
+  457 label *label493
+  458 jump *label494 notEqual :computeRowValues:size 3
+  459 op add *tmp19 :spotValue:result :spotValue.1:result
+  460 op add *tmp20 *tmp19 :spotValue.2:result
+  461 op add *tmp21 :spotValue.1:result :spotValue.2:result
+  462 op add *tmp22 *tmp21 :spotValue.3:result
+  463 op add *tmp23 :spotValue.2:result :spotValue.3:result
+  464 op add *tmp24 *tmp23 :spotValue.4:result
+  465 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
+  466 jump *label497 always
+  467 jump *label495 always
+  468 label *label494
+  469 op add *tmp26 :spotValue:result :spotValue.1:result
+  470 op add *tmp27 *tmp26 :spotValue.2:result
+  471 op add *tmp28 *tmp27 :spotValue.3:result
+  472 op add *tmp29 :spotValue.1:result :spotValue.2:result
+  473 op add *tmp30 *tmp29 :spotValue.3:result
+  474 op add *tmp31 *tmp30 :spotValue.4:result
+  475 packcolor :computeRowValues*retval *tmp28 *tmp31 0 0
+  476 label *label495
+  477 label *label496
+  478 label *label497
   479 set :findBestPosition:y3 :computeRowValues*retval
   480 op add *tmp165 :findBestPosition:y 1
   481 set :computeRowValues:x :findBestPosition:x

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
   451 op add *tmp13 :spotValue.1:result :spotValue.2:result
   452 op add *tmp14 :spotValue.2:result :spotValue.3:result
   453 op add *tmp15 :spotValue.3:result :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
+  454 packcolor :findBestPosition:y3 *tmp12 *tmp13 *tmp14 *tmp15
   455 jump *label497 always
   456 jump *label496 always
   457 label *label493
 
   462 op add *tmp22 *tmp21 :spotValue.3:result
   463 op add *tmp23 :spotValue.2:result :spotValue.3:result
   464 op add *tmp24 *tmp23 :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
+  465 packcolor :findBestPosition:y3 *tmp20 *tmp22 *tmp24 0
   466 jump *label497 always
   467 jump *label495 always
   468 label *label494
 
   472 op add *tmp29 :spotValue.1:result :spotValue.2:result
   473 op add *tmp30 *tmp29 :spotValue.3:result
   474 op add *tmp31 *tmp30 :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp28 *tmp31 0 0
+  475 packcolor :findBestPosition:y3 *tmp28 *tmp31 0 0
   476 label *label495
   477 label *label496
   478 label *label497
-    * set :findBestPosition:y3 :computeRowValues*retval
   479 op add *tmp165 :findBestPosition:y 1
   480 set :computeRowValues:x :findBestPosition:x
   481 set :computeRowValues:y *tmp165

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2:
 
   406 set :computeRowValues:ore :findDrillLocationLocal:ore
   407 set :computeRowValues:size :findDrillLocationLocal:size
   408 label *label487
-    * op sub :spotValue:x :computeRowValues:x 2
-    * set :spotValue:y :computeRowValues:y
-    * set :spotValue:ore :computeRowValues:ore
+  409 op sub :spotValue:x :findDrillLocationLocal:oreX 2
+  410 set :spotValue:y :findDrillLocationLocal:oreY
+  411 set :spotValue:ore :findDrillLocationLocal:ore
   412 ucontrol getBlock :spotValue:x :spotValue:y type building floor
   413 select value equal floor :spotValue:ore 0.00392156862745098 0
   414 sensor solid type @solid
   415 select :spotValue:result notEqual solid false WALL value
   416 label *label488
-    * op sub :spotValue.1:x :computeRowValues:x 1
-    * set :spotValue.1:y :computeRowValues:y
-    * set :spotValue.1:ore :computeRowValues:ore
+  417 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
+  418 set :spotValue.1:y :findDrillLocationLocal:oreY
+  419 set :spotValue.1:ore :findDrillLocationLocal:ore
   420 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
   421 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   422 sensor solid type @solid
   423 select :spotValue.1:result notEqual solid false WALL value
   424 label *label489
-    * set :spotValue.2:x :computeRowValues:x
-    * set :spotValue.2:y :computeRowValues:y
-    * set :spotValue.2:ore :computeRowValues:ore
+  425 set :spotValue.2:x :findDrillLocationLocal:oreX
+  426 set :spotValue.2:y :findDrillLocationLocal:oreY
+  427 set :spotValue.2:ore :findDrillLocationLocal:ore
   428 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
   429 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   430 sensor solid type @solid
   431 select :spotValue.2:result notEqual solid false WALL value
   432 label *label490
-    * op add :spotValue.3:x :computeRowValues:x 1
-    * set :spotValue.3:y :computeRowValues:y
-    * set :spotValue.3:ore :computeRowValues:ore
+  433 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
+  434 set :spotValue.3:y :findDrillLocationLocal:oreY
+  435 set :spotValue.3:ore :findDrillLocationLocal:ore
   436 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
   437 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   438 sensor solid type @solid
   439 select :spotValue.3:result notEqual solid false WALL value
   440 label *label491
-    * op add :spotValue.4:x :computeRowValues:x 2
-    * set :spotValue.4:y :computeRowValues:y
-    * set :spotValue.4:ore :computeRowValues:ore
+  441 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
+  442 set :spotValue.4:y :findDrillLocationLocal:oreY
+  443 set :spotValue.4:ore :findDrillLocationLocal:ore
   444 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
   445 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   446 sensor solid type @solid
   447 select :spotValue.4:result notEqual solid false WALL value
   448 label *label492
-    * jump *label493 notEqual :computeRowValues:size 2
+  449 jump *label493 notEqual :findDrillLocationLocal:size 2
   450 op add *tmp12 :spotValue:result :spotValue.1:result
   451 op add *tmp13 :spotValue.1:result :spotValue.2:result
   452 op add *tmp14 :spotValue.2:result :spotValue.3:result
 
   455 jump *label497 always
   456 jump *label496 always
   457 label *label493
-    * jump *label494 notEqual :computeRowValues:size 3
+  458 jump *label494 notEqual :findDrillLocationLocal:size 3
   459 op add *tmp19 :spotValue:result :spotValue.1:result
   460 op add *tmp20 *tmp19 :spotValue.2:result
   461 op add *tmp21 :spotValue.1:result :spotValue.2:result
 
   476 label *label495
   477 label *label496
   478 label *label497
-    * op add *tmp165 :findBestPosition:y 1
-    * set :computeRowValues:x :findBestPosition:x
+  479 op add *tmp165 :findDrillLocationLocal:oreY 1
+  480 set :computeRowValues:x :findDrillLocationLocal:oreX
   481 set :computeRowValues:y *tmp165
-    * set :computeRowValues:ore :findBestPosition:ore
-    * set :computeRowValues:size :findBestPosition:size
+  482 set :computeRowValues:ore :findDrillLocationLocal:ore
+  483 set :computeRowValues:size :findDrillLocationLocal:size
   484 setaddr :computeRowValues*retaddr *label95 (h:*label95)
   485 call *label5 *invalid :computeRowValues*retval (m:*label95) (h:*label95)
   486 label *label95

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-4 instructions):
 
   401 label *label441
   402 label *label442
   403 label *label443
-    * set :computeRowValues:x :findDrillLocationLocal:oreX
-    * set :computeRowValues:y :findDrillLocationLocal:oreY
-    * set :computeRowValues:ore :findDrillLocationLocal:ore
-    * set :computeRowValues:size :findDrillLocationLocal:size
   404 label *label487
   405 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   406 set :spotValue:y :findDrillLocationLocal:oreY

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    17 select value equal floor :spotValue:ore 0.00392156862745098 0
    18 sensor solid type @solid
    19 select :spotValue:result notEqual solid false WALL value
-    * label *label17
    20 op sub :spotValue.1:x :computeRowValues:x 1
    21 set :spotValue.1:y :computeRowValues:y
    22 set :spotValue.1:ore :computeRowValues:ore
 
    24 select value equal floor :spotValue.1:ore 0.00392156862745098 0
    25 sensor solid type @solid
    26 select :spotValue.1:result notEqual solid false WALL value
-    * label *label18
    27 set :spotValue.2:x :computeRowValues:x
    28 set :spotValue.2:y :computeRowValues:y
    29 set :spotValue.2:ore :computeRowValues:ore
 
    31 select value equal floor :spotValue.2:ore 0.00392156862745098 0
    32 sensor solid type @solid
    33 select :spotValue.2:result notEqual solid false WALL value
-    * label *label19
    34 op add :spotValue.3:x :computeRowValues:x 1
    35 set :spotValue.3:y :computeRowValues:y
    36 set :spotValue.3:ore :computeRowValues:ore
 
    38 select value equal floor :spotValue.3:ore 0.00392156862745098 0
    39 sensor solid type @solid
    40 select :spotValue.3:result notEqual solid false WALL value
-    * label *label20
    41 op add :spotValue.4:x :computeRowValues:x 2
    42 set :spotValue.4:y :computeRowValues:y
    43 set :spotValue.4:ore :computeRowValues:ore
 
    45 select value equal floor :spotValue.4:ore 0.00392156862745098 0
    46 sensor solid type @solid
    47 select :spotValue.4:result notEqual solid false WALL value
-    * label *label21
    48 jump *label22 notEqual :computeRowValues:size 2
    49 op add *tmp12 :spotValue:result :spotValue.1:result
    50 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
    95 set .mapAction "Locating ore..."
    96 set .angle 0
    97 set .mapProgress 0
-    * label *label45
    98 ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp73
    99 jump *label47 notEqual *tmp73 false
   100 label *label444
   101 ucontrol approach :findDrillLocationLocal:x :findDrillLocationLocal:y 5.5
-    * label *label46
   102 ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp73
   103 jump *label444 equal *tmp73 false
   104 label *label47
-    * label *label44
-    * label *label43
   105 op div *tmp76 *tmp70 3.8197185279121366
   106 op pow .mapTotal *tmp76 2
   107 set :findDrillLocationLocal:oreX 0
 
   124 op mul .mapProgress .angle .angle
   125 op sub *tmp92 @mapw 5
   126 op sub *tmp99 @maph 5
-    * label *label52
   127 jump *label54 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   128 label *label389
   129 op div :locateOreAway:a .angle @degToRad
 
   132 op add *tmp91 .coreX *tmp90
   133 op max *tmp94 *tmp91 5
   134 op min *tmp93 *tmp94 *tmp92
-    * label *label55
   135 op cos *tmp96 :locateOreAway:a
   136 op mul *tmp97 *tmp96 :locateOreAway:distance
   137 op add *tmp98 .coreY *tmp97
   138 op max *tmp101 *tmp98 5
   139 op min *tmp100 *tmp101 *tmp99
-    * label *label56
-    * label *label58
   140 ucontrol within *tmp93 *tmp100 5 *tmp103
   141 jump *label60 notEqual *tmp103 false
   142 label *label397
   143 ucontrol approach *tmp93 *tmp100 4.5
-    * label *label59
   144 ucontrol within *tmp93 *tmp100 5 *tmp103
   145 jump *label397 equal *tmp103 false
   146 label *label60
-    * label *label57
   147 op div *tmp106 3.8197185279121366 :locateOreAway:distance
   148 op add .angle .angle *tmp106
   149 op mul .mapProgress .angle .angle
 
   153 set *tmp83 false
   154 jump *label51 always
   155 label *label61
-    * label *label62
   156 op sub *tmp113 :locateOreAway:x .coreX
   157 op abs *tmp114 *tmp113
   158 op sub *tmp115 :locateOreAway:y .coreY
 
   165 jump *label65 notEqual :locateOreAway:lastY :locateOreAway:y
   166 jump *label53 always
   167 label *label65
-    * label *label66
   168 label *label63
-    * label *label64
   169 jump *label67 lessThan :locateOreAway:coreDist 7
   170 jump *label69 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
   171 set :locateOreAway:lastX :locateOreAway:x
   172 set :locateOreAway:lastY :locateOreAway:y
   173 set :visited:i .locationsStart
-    * label *label72
   174 jump *label74 greaterThanEq .locationsStart .locations
   175 label *label390
   176 op mul :visited:index 4 :visited:i
 
   185 set *tmp129 true
   186 jump *label71 always
   187 label *label75
-    * label *label76
-    * label *label73
   188 op add :visited:i :visited:i 1
   189 jump *label390 lessThan :visited:i .locations
   190 label *label74
 
   198 set *tmp83 true
   199 jump *label51 always
   200 label *label77
-    * label *label78
   201 label *label69
-    * label *label70
   202 label *label67
-    * label *label68
   203 label *label53
   204 jump *label389 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   205 label *label54
 
   211 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   212 jump *label42 always
   213 label *label79
-    * label *label80
   214 jump *label81 lessThan :findDrillLocationLocal:limit 1000
   215 op add .mapSpots .mapSpots 1
   216 label *label81
-    * label *label82
-    * label *label85
   217 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp155
   218 jump *label87 notEqual *tmp155 false
   219 label *label420
   220 ucontrol approach :locateOreAway:x :locateOreAway:y 5.5
-    * label *label86
   221 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp155
   222 jump *label420 equal *tmp155 false
   223 label *label87
-    * label *label84
-    * label *label83
   224 set :findDrillLocationLocal:last 0
   225 label *label88
   226 set :findBestPosition:x :findDrillLocationLocal:oreX
 
   228 set :findBestPosition:ore :findDrillLocationLocal:ore
   229 set :findBestPosition:size :findDrillLocationLocal:size
   230 op sub *tmp159 :findDrillLocationLocal:oreY 2
-    * label *label422
   231 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   232 set :spotValue:y *tmp159
   233 set :spotValue:ore :findDrillLocationLocal:ore
 
   235 select value equal floor :spotValue:ore 0.00392156862745098 0
   236 sensor solid type @solid
   237 select :spotValue:result notEqual solid false WALL value
-    * label *label423
   238 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
   239 set :spotValue.1:y *tmp159
   240 set :spotValue.1:ore :findDrillLocationLocal:ore
 
   242 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   243 sensor solid type @solid
   244 select :spotValue.1:result notEqual solid false WALL value
-    * label *label424
   245 set :spotValue.2:x :findDrillLocationLocal:oreX
   246 set :spotValue.2:y *tmp159
   247 set :spotValue.2:ore :findDrillLocationLocal:ore
 
   249 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   250 sensor solid type @solid
   251 select :spotValue.2:result notEqual solid false WALL value
-    * label *label425
   252 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
   253 set :spotValue.3:y *tmp159
   254 set :spotValue.3:ore :findDrillLocationLocal:ore
 
   256 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   257 sensor solid type @solid
   258 select :spotValue.3:result notEqual solid false WALL value
-    * label *label426
   259 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
   260 set :spotValue.4:y *tmp159
   261 set :spotValue.4:ore :findDrillLocationLocal:ore
 
   263 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   264 sensor solid type @solid
   265 select :spotValue.4:result notEqual solid false WALL value
-    * label *label427
   266 jump *label428 notEqual :findDrillLocationLocal:size 2
   267 op add *tmp12 :spotValue:result :spotValue.1:result
   268 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
   294 label *label431
   295 label *label432
   296 op sub *tmp161 :findDrillLocationLocal:oreY 1
-    * label *label433
   297 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   298 set :spotValue:y *tmp161
   299 set :spotValue:ore :findDrillLocationLocal:ore
 
   301 select value equal floor :spotValue:ore 0.00392156862745098 0
   302 sensor solid type @solid
   303 select :spotValue:result notEqual solid false WALL value
-    * label *label434
   304 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
   305 set :spotValue.1:y *tmp161
   306 set :spotValue.1:ore :findDrillLocationLocal:ore
 
   308 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   309 sensor solid type @solid
   310 select :spotValue.1:result notEqual solid false WALL value
-    * label *label435
   311 set :spotValue.2:x :findDrillLocationLocal:oreX
   312 set :spotValue.2:y *tmp161
   313 set :spotValue.2:ore :findDrillLocationLocal:ore
 
   315 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   316 sensor solid type @solid
   317 select :spotValue.2:result notEqual solid false WALL value
-    * label *label436
   318 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
   319 set :spotValue.3:y *tmp161
   320 set :spotValue.3:ore :findDrillLocationLocal:ore
 
   322 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   323 sensor solid type @solid
   324 select :spotValue.3:result notEqual solid false WALL value
-    * label *label437
   325 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
   326 set :spotValue.4:y *tmp161
   327 set :spotValue.4:ore :findDrillLocationLocal:ore
 
   329 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   330 sensor solid type @solid
   331 select :spotValue.4:result notEqual solid false WALL value
-    * label *label438
   332 jump *label439 notEqual :findDrillLocationLocal:size 2
   333 op add *tmp12 :spotValue:result :spotValue.1:result
   334 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
   359 label *label441
   360 label *label442
   361 label *label443
-    * label *label487
   362 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   363 set :spotValue:y :findDrillLocationLocal:oreY
   364 set :spotValue:ore :findDrillLocationLocal:ore
 
   366 select value equal floor :spotValue:ore 0.00392156862745098 0
   367 sensor solid type @solid
   368 select :spotValue:result notEqual solid false WALL value
-    * label *label488
   369 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
   370 set :spotValue.1:y :findDrillLocationLocal:oreY
   371 set :spotValue.1:ore :findDrillLocationLocal:ore
 
   373 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   374 sensor solid type @solid
   375 select :spotValue.1:result notEqual solid false WALL value
-    * label *label489
   376 set :spotValue.2:x :findDrillLocationLocal:oreX
   377 set :spotValue.2:y :findDrillLocationLocal:oreY
   378 set :spotValue.2:ore :findDrillLocationLocal:ore
 
   380 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   381 sensor solid type @solid
   382 select :spotValue.2:result notEqual solid false WALL value
-    * label *label490
   383 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
   384 set :spotValue.3:y :findDrillLocationLocal:oreY
   385 set :spotValue.3:ore :findDrillLocationLocal:ore
 
   387 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   388 sensor solid type @solid
   389 select :spotValue.3:result notEqual solid false WALL value
-    * label *label491
   390 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
   391 set :spotValue.4:y :findDrillLocationLocal:oreY
   392 set :spotValue.4:ore :findDrillLocationLocal:ore
 
   394 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   395 sensor solid type @solid
   396 select :spotValue.4:result notEqual solid false WALL value
-    * label *label492
   397 jump *label493 notEqual :findDrillLocationLocal:size 2
   398 op add *tmp12 :spotValue:result :spotValue.1:result
   399 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
   456 set :findDrillLocationLocal:diffY -1.5
   457 set :findBestPosition:best :updateRowPositions2x2:col1
   458 label *label103
-    * label *label104
   459 label *label101
-    * label *label102
-    * label *label100
   460 jump *label106 greaterThanEq :updateRowPositions2x2:col2 0.0784313725490196
   461 jump *label108 lessThanEq :updateRowPositions2x2:col2 :findBestPosition:best
   462 set :findDrillLocationLocal:diffX -0.5
   463 set :findDrillLocationLocal:diffY -1.5
   464 set :findBestPosition:best :updateRowPositions2x2:col2
   465 label *label108
-    * label *label109
   466 label *label106
-    * label *label107
-    * label *label105
   467 jump *label111 greaterThanEq :updateRowPositions2x2:col3 0.0784313725490196
   468 jump *label113 lessThanEq :updateRowPositions2x2:col3 :findBestPosition:best
   469 set :findDrillLocationLocal:diffX 0.5
   470 set :findDrillLocationLocal:diffY -1.5
   471 set :findBestPosition:best :updateRowPositions2x2:col3
   472 label *label113
-    * label *label114
   473 label *label111
-    * label *label112
-    * label *label110
   474 jump *label116 greaterThanEq :updateRowPositions2x2:col4 0.0784313725490196
   475 jump *label118 lessThanEq :updateRowPositions2x2:col4 :findBestPosition:best
   476 set :findDrillLocationLocal:diffX 1.5
   477 set :findDrillLocationLocal:diffY -1.5
   478 set :findBestPosition:best :updateRowPositions2x2:col4
   479 label *label118
-    * label *label119
   480 label *label116
-    * label *label117
-    * label *label115
-    * label *label99
   481 unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :findBestPosition:row2
   482 jump *label122 greaterThanEq :updateRowPositions2x2.1:col1 0.0784313725490196
   483 jump *label124 lessThanEq :updateRowPositions2x2.1:col1 :findBestPosition:best
 
   485 set :findDrillLocationLocal:diffY -0.5
   486 set :findBestPosition:best :updateRowPositions2x2.1:col1
   487 label *label124
-    * label *label125
   488 label *label122
-    * label *label123
-    * label *label121
   489 jump *label127 greaterThanEq :updateRowPositions2x2.1:col2 0.0784313725490196
   490 jump *label129 lessThanEq :updateRowPositions2x2.1:col2 :findBestPosition:best
   491 set :findDrillLocationLocal:diffX -0.5
   492 set :findDrillLocationLocal:diffY -0.5
   493 set :findBestPosition:best :updateRowPositions2x2.1:col2
   494 label *label129
-    * label *label130
   495 label *label127
-    * label *label128
-    * label *label126
   496 jump *label132 greaterThanEq :updateRowPositions2x2.1:col3 0.0784313725490196
   497 jump *label134 lessThanEq :updateRowPositions2x2.1:col3 :findBestPosition:best
   498 set :findDrillLocationLocal:diffX 0.5
   499 set :findDrillLocationLocal:diffY -0.5
   500 set :findBestPosition:best :updateRowPositions2x2.1:col3
   501 label *label134
-    * label *label135
   502 label *label132
-    * label *label133
-    * label *label131
   503 jump *label137 greaterThanEq :updateRowPositions2x2.1:col4 0.0784313725490196
   504 jump *label139 lessThanEq :updateRowPositions2x2.1:col4 :findBestPosition:best
   505 set :findDrillLocationLocal:diffX 1.5
   506 set :findDrillLocationLocal:diffY -0.5
   507 set :findBestPosition:best :updateRowPositions2x2.1:col4
   508 label *label139
-    * label *label140
   509 label *label137
-    * label *label138
-    * label *label136
-    * label *label120
   510 unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :findBestPosition:row3
   511 jump *label143 greaterThanEq :updateRowPositions2x2.2:col1 0.0784313725490196
   512 jump *label145 lessThanEq :updateRowPositions2x2.2:col1 :findBestPosition:best
 
   514 set :findDrillLocationLocal:diffY 0.5
   515 set :findBestPosition:best :updateRowPositions2x2.2:col1
   516 label *label145
-    * label *label146
   517 label *label143
-    * label *label144
-    * label *label142
   518 jump *label148 greaterThanEq :updateRowPositions2x2.2:col2 0.0784313725490196
   519 jump *label150 lessThanEq :updateRowPositions2x2.2:col2 :findBestPosition:best
   520 set :findDrillLocationLocal:diffX -0.5
   521 set :findDrillLocationLocal:diffY 0.5
   522 set :findBestPosition:best :updateRowPositions2x2.2:col2
   523 label *label150
-    * label *label151
   524 label *label148
-    * label *label149
-    * label *label147
   525 jump *label153 greaterThanEq :updateRowPositions2x2.2:col3 0.0784313725490196
   526 jump *label155 lessThanEq :updateRowPositions2x2.2:col3 :findBestPosition:best
   527 set :findDrillLocationLocal:diffX 0.5
   528 set :findDrillLocationLocal:diffY 0.5
   529 set :findBestPosition:best :updateRowPositions2x2.2:col3
   530 label *label155
-    * label *label156
   531 label *label153
-    * label *label154
-    * label *label152
   532 jump *label158 greaterThanEq :updateRowPositions2x2.2:col4 0.0784313725490196
   533 jump *label160 lessThanEq :updateRowPositions2x2.2:col4 :findBestPosition:best
   534 set :findDrillLocationLocal:diffX 1.5
   535 set :findDrillLocationLocal:diffY 0.5
   536 set :findBestPosition:best :updateRowPositions2x2.2:col4
   537 label *label160
-    * label *label161
   538 label *label158
-    * label *label159
-    * label *label157
-    * label *label141
   539 unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :findBestPosition:row4
   540 jump *label164 greaterThanEq :updateRowPositions2x2.3:col1 0.0784313725490196
   541 jump *label166 lessThanEq :updateRowPositions2x2.3:col1 :findBestPosition:best
 
   543 set :findDrillLocationLocal:diffY 1.5
   544 set :findBestPosition:best :updateRowPositions2x2.3:col1
   545 label *label166
-    * label *label167
   546 label *label164
-    * label *label165
-    * label *label163
   547 jump *label169 greaterThanEq :updateRowPositions2x2.3:col2 0.0784313725490196
   548 jump *label171 lessThanEq :updateRowPositions2x2.3:col2 :findBestPosition:best
   549 set :findDrillLocationLocal:diffX -0.5
   550 set :findDrillLocationLocal:diffY 1.5
   551 set :findBestPosition:best :updateRowPositions2x2.3:col2
   552 label *label171
-    * label *label172
   553 label *label169
-    * label *label170
-    * label *label168
   554 jump *label174 greaterThanEq :updateRowPositions2x2.3:col3 0.0784313725490196
   555 jump *label176 lessThanEq :updateRowPositions2x2.3:col3 :findBestPosition:best
   556 set :findDrillLocationLocal:diffX 0.5
   557 set :findDrillLocationLocal:diffY 1.5
   558 set :findBestPosition:best :updateRowPositions2x2.3:col3
   559 label *label176
-    * label *label177
   560 label *label174
-    * label *label175
-    * label *label173
   561 jump *label179 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
   562 jump *label181 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
   563 set :findDrillLocationLocal:diffX 1.5
   564 set :findDrillLocationLocal:diffY 1.5
   565 set :findBestPosition:best :updateRowPositions2x2.3:col4
   566 label *label181
-    * label *label182
   567 label *label179
-    * label *label180
-    * label *label178
-    * label *label162
   568 jump *label98 always
   569 label *label97
   570 jump *label183 notEqual :findBestPosition:size 3
 
   581 set :findDrillLocationLocal:diffY -1
   582 set :findBestPosition:best :updateRowPositions3x3:col1
   583 label *label189
-    * label *label190
   584 label *label187
-    * label *label188
-    * label *label186
   585 jump *label192 greaterThanEq :updateRowPositions3x3:col2 0.0784313725490196
   586 jump *label194 lessThanEq :updateRowPositions3x3:col2 :findBestPosition:best
   587 set :findDrillLocationLocal:diffX 0
   588 set :findDrillLocationLocal:diffY -1
   589 set :findBestPosition:best :updateRowPositions3x3:col2
   590 label *label194
-    * label *label195
   591 label *label192
-    * label *label193
-    * label *label191
   592 jump *label197 greaterThanEq :updateRowPositions3x3:col3 0.0784313725490196
   593 jump *label199 lessThanEq :updateRowPositions3x3:col3 :findBestPosition:best
   594 set :findDrillLocationLocal:diffX 1
   595 set :findDrillLocationLocal:diffY -1
   596 set :findBestPosition:best :updateRowPositions3x3:col3
   597 label *label199
-    * label *label200
   598 label *label197
-    * label *label198
-    * label *label196
-    * label *label185
   599 unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :findBestPosition:row2.1
   600 jump *label203 greaterThanEq :updateRowPositions3x3.1:col1 0.0784313725490196
   601 jump *label205 lessThanEq :updateRowPositions3x3.1:col1 :findBestPosition:best
 
   603 set :findDrillLocationLocal:diffY 0
   604 set :findBestPosition:best :updateRowPositions3x3.1:col1
   605 label *label205
-    * label *label206
   606 label *label203
-    * label *label204
-    * label *label202
   607 jump *label208 greaterThanEq :updateRowPositions3x3.1:col2 0.0784313725490196
   608 jump *label210 lessThanEq :updateRowPositions3x3.1:col2 :findBestPosition:best
   609 set :findDrillLocationLocal:diffX 0
   610 set :findDrillLocationLocal:diffY 0
   611 set :findBestPosition:best :updateRowPositions3x3.1:col2
   612 label *label210
-    * label *label211
   613 label *label208
-    * label *label209
-    * label *label207
   614 jump *label213 greaterThanEq :updateRowPositions3x3.1:col3 0.0784313725490196
   615 jump *label215 lessThanEq :updateRowPositions3x3.1:col3 :findBestPosition:best
   616 set :findDrillLocationLocal:diffX 1
   617 set :findDrillLocationLocal:diffY 0
   618 set :findBestPosition:best :updateRowPositions3x3.1:col3
   619 label *label215
-    * label *label216
   620 label *label213
-    * label *label214
-    * label *label212
-    * label *label201
   621 unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :findBestPosition:row3.1
   622 jump *label219 greaterThanEq :updateRowPositions3x3.2:col1 0.0784313725490196
   623 jump *label221 lessThanEq :updateRowPositions3x3.2:col1 :findBestPosition:best
 
   625 set :findDrillLocationLocal:diffY 1
   626 set :findBestPosition:best :updateRowPositions3x3.2:col1
   627 label *label221
-    * label *label222
   628 label *label219
-    * label *label220
-    * label *label218
   629 jump *label224 greaterThanEq :updateRowPositions3x3.2:col2 0.0784313725490196
   630 jump *label226 lessThanEq :updateRowPositions3x3.2:col2 :findBestPosition:best
   631 set :findDrillLocationLocal:diffX 0
   632 set :findDrillLocationLocal:diffY 1
   633 set :findBestPosition:best :updateRowPositions3x3.2:col2
   634 label *label226
-    * label *label227
   635 label *label224
-    * label *label225
-    * label *label223
   636 jump *label229 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
   637 jump *label231 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
   638 set :findDrillLocationLocal:diffX 1
   639 set :findDrillLocationLocal:diffY 1
   640 set :findBestPosition:best :updateRowPositions3x3.2:col3
   641 label *label231
-    * label *label232
   642 label *label229
-    * label *label230
-    * label *label228
-    * label *label217
   643 jump *label184 always
   644 label *label183
   645 op add *tmp286 :findBestPosition:y1 :findBestPosition:y2
 
   655 set :findDrillLocationLocal:diffY -0.5
   656 set :findBestPosition:best :updateRowPositions4x4:col1
   657 label *label237
-    * label *label238
   658 label *label235
-    * label *label236
-    * label *label234
   659 jump *label240 greaterThanEq :updateRowPositions4x4:col2 0.0784313725490196
   660 jump *label242 lessThanEq :updateRowPositions4x4:col2 :findBestPosition:best
   661 set :findDrillLocationLocal:diffX 0.5
   662 set :findDrillLocationLocal:diffY -0.5
   663 set :findBestPosition:best :updateRowPositions4x4:col2
   664 label *label242
-    * label *label243
   665 label *label240
-    * label *label241
-    * label *label239
-    * label *label233
   666 unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 0 0 :findBestPosition:row2.2
   667 jump *label246 greaterThanEq :updateRowPositions4x4.1:col1 0.0784313725490196
   668 jump *label248 lessThanEq :updateRowPositions4x4.1:col1 :findBestPosition:best
 
   670 set :findDrillLocationLocal:diffY 0.5
   671 set :findBestPosition:best :updateRowPositions4x4.1:col1
   672 label *label248
-    * label *label249
   673 label *label246
-    * label *label247
-    * label *label245
   674 jump *label251 greaterThanEq :updateRowPositions4x4.1:col2 0.0784313725490196
   675 jump *label253 lessThanEq :updateRowPositions4x4.1:col2 :findBestPosition:best
   676 set :findDrillLocationLocal:diffX 0.5
   677 set :findDrillLocationLocal:diffY 0.5
   678 set :findBestPosition:best :updateRowPositions4x4.1:col2
   679 label *label253
-    * label *label254
   680 label *label251
-    * label *label252
-    * label *label250
-    * label *label244
   681 label *label184
   682 label *label98
   683 jump *label256 always
   684 printflush message1
   685 control enabled switch1 true
   686 label *label258
-    * label *label259
   687 sensor *tmp314 switch1 @enabled
   688 jump *label258 notEqual *tmp314 false
-    * label *label260
   689 label *label256
-    * label *label257
-    * label *label255
   690 op mul *tmp158 :findBestPosition:best 255
-    * label *label91
   691 jump *label261 lessThanEq *tmp158 :findDrillLocationLocal:capacity
   692 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   693 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
 
   695 jump *label263 greaterThanEq :findDrillLocationLocal:limit 1000
   696 set .mapSpots *tmp158
   697 label *label263
-    * label *label264
   698 jump *label265 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
   699 op add .count .count 1
   700 sensor *tmp326 :findDrillLocationLocal:item @id
 
   706 op add .count .count 1
   707 write :findDrillLocationLocal:dy bank1 .count
   708 op add .locations .locations 1
-    * label *label267
   709 ucontrol unbind
   710 set :findDrillLocationLocal*retval true
   711 jump *label42 always
   712 label *label265
-    * label *label266
   713 label *label261
-    * label *label262
   714 jump *label268 lessThanEq *tmp158 :findDrillLocationLocal:best
   715 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   716 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   717 set :findDrillLocationLocal:best *tmp158
   718 label *label268
-    * label *label269
   719 jump *label270 greaterThan *tmp158 :findDrillLocationLocal:last
   720 jump *label90 always
   721 label *label270
-    * label *label271
   722 set :findDrillLocationLocal:last *tmp158
   723 op mul :round:x :findDrillLocationLocal:diffX 1.1
   724 op add *tmp342 :round:x 0.5
   725 op floor *tmp341 *tmp342
-    * label *label272
   726 op add :findDrillLocationLocal:oreX :findDrillLocationLocal:oreX *tmp341
   727 op mul :round.1:x :findDrillLocationLocal:diffY 1.1
   728 op add *tmp346 :round.1:x 0.5
   729 op floor *tmp345 *tmp346
-    * label *label273
   730 op add :findDrillLocationLocal:oreY :findDrillLocationLocal:oreY *tmp345
   731 op sub *tmp348 :findDrillLocationLocal:oreX .coreX
   732 op abs *tmp349 *tmp348
 
   736 jump *label274 greaterThanEq *tmp352 7
   737 jump *label90 always
   738 label *label274
-    * label *label275
-    * label *label89
   739 jump *label88 always
   740 label *label90
   741 op add .count .count 1
 
   748 op add .count .count 1
   749 write :findDrillLocationLocal:bestY bank1 .count
   750 op add .locations .locations 1
-    * label *label276
   751 jump *label278 always
-    * label *label280
   752 remark "Time: "
   753 remark *tmp367
   754 remark " s\n"
 
   763 remark :debugPrintSpot:size
   764 remark "\"
   765 remark "n"
-    * label *label282
   766 jump *label281 always
   767 label *label283
   768 print ""
   769 printflush message1
   770 label *label278
-    * label *label279
-    * label *label277
-    * label *label49
   771 jump *label48 always
-    * label *label50
   772 set :findDrillLocationLocal*retval null
   773 label *label42
   774 return :findDrillLocationLocal*retaddr
   775 end
   776 label *label9
-    * label *label287
   777 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp381
   778 jump *label289 notEqual *tmp381 false
   779 label *label421
   780 ucontrol approach :createTerrainMask:x :createTerrainMask:y 5.5
-    * label *label288
   781 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp381
   782 jump *label421 equal *tmp381 false
   783 label *label289
-    * label *label286
-    * label *label285
   784 set :createTerrainMask:result 0
   785 set :createTerrainMask:r 3
-    * label *label290
   786 label *label391
   787 op add *tmp386 :createTerrainMask:y :createTerrainMask:r
-    * label *label398
-    * label *label399
   788 op shl *tmp384 :createTerrainMask:result 1
   789 op add :isBlocked:x :createTerrainMask:x 3
   790 set :isBlocked:y *tmp386
   791 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   792 select type equal type @boulder @air type
   793 select :isBlocked:result equal type @air 0 1
-    * label *label400
   794 op or :createTerrainMask:result *tmp384 :isBlocked:result
-    * label *label401
-    * label *label402
   795 op shl *tmp384 :createTerrainMask:result 1
   796 op add :isBlocked:x :createTerrainMask:x 2
   797 set :isBlocked:y *tmp386
   798 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   799 select type equal type @boulder @air type
   800 select :isBlocked:result equal type @air 0 1
-    * label *label403
   801 op or :createTerrainMask:result *tmp384 :isBlocked:result
-    * label *label404
-    * label *label405
   802 op shl *tmp384 :createTerrainMask:result 1
   803 op add :isBlocked:x :createTerrainMask:x 1
   804 set :isBlocked:y *tmp386
   805 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   806 select type equal type @boulder @air type
   807 select :isBlocked:result equal type @air 0 1
-    * label *label406
   808 op or :createTerrainMask:result *tmp384 :isBlocked:result
-    * label *label407
-    * label *label408
   809 op shl *tmp384 :createTerrainMask:result 1
   810 set :isBlocked:x :createTerrainMask:x
   811 set :isBlocked:y *tmp386
   812 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   813 select type equal type @boulder @air type
   814 select :isBlocked:result equal type @air 0 1
-    * label *label409
   815 op or :createTerrainMask:result *tmp384 :isBlocked:result
-    * label *label410
-    * label *label411
   816 op shl *tmp384 :createTerrainMask:result 1
   817 op add :isBlocked:x :createTerrainMask:x -1
   818 set :isBlocked:y *tmp386
   819 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   820 select type equal type @boulder @air type
   821 select :isBlocked:result equal type @air 0 1
-    * label *label412
   822 op or :createTerrainMask:result *tmp384 :isBlocked:result
-    * label *label413
-    * label *label414
   823 op shl *tmp384 :createTerrainMask:result 1
   824 op add :isBlocked:x :createTerrainMask:x -2
   825 set :isBlocked:y *tmp386
   826 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   827 select type equal type @boulder @air type
   828 select :isBlocked:result equal type @air 0 1
-    * label *label415
   829 op or :createTerrainMask:result *tmp384 :isBlocked:result
-    * label *label416
-    * label *label417
   830 op shl *tmp384 :createTerrainMask:result 1
   831 op add :isBlocked:x :createTerrainMask:x -3
   832 set :isBlocked:y *tmp386
   833 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   834 select type equal type @boulder @air type
   835 select :isBlocked:result equal type @air 0 1
-    * label *label418
   836 op or :createTerrainMask:result *tmp384 :isBlocked:result
-    * label *label419
-    * label *label295
-    * label *label291
   837 op sub :createTerrainMask:r :createTerrainMask:r 1
   838 jump *label391 greaterThanEq :createTerrainMask:r -3
-    * label *label292
   839 set :createTerrainMask*retval :createTerrainMask:result
-    * label *label284
   840 return :createTerrainMask*retaddr
   841 end
   842 label *label10
   843 set :findPossiblePlacement:y -3
-    * label *label298
   844 jump *label300 greaterThan :findPossiblePlacement:y 3
   845 label *label393
   846 op add *tmp389 :findPossiblePlacement:y 3
   847 op mul *tmp390 7 *tmp389
   848 op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp390
   849 set :findPossiblePlacement:x -3
-    * label *label301
   850 jump *label303 greaterThan :findPossiblePlacement:x 3
   851 label *label394
   852 op and *tmp392 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
 
   856 op add :findPossiblePlacement*retval *tmp396 :findPossiblePlacement:x
   857 jump *label297 always
   858 label *label304
-    * label *label305
   859 op sub *tmp398 3 :findPossiblePlacement:width
   860 jump *label306 lessThanEq :findPossiblePlacement:x *tmp398
   861 jump *label303 always
   862 label *label306
-    * label *label307
   863 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
-    * label *label302
   864 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
   865 jump *label394 lessThanEq :findPossiblePlacement:x 3
   866 label *label303
 
   868 jump *label308 lessThanEq :findPossiblePlacement:y *tmp401
   869 jump *label300 always
   870 label *label308
-    * label *label309
-    * label *label299
   871 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
   872 jump *label393 lessThanEq :findPossiblePlacement:y 3
   873 label *label300
 
   906 set :tryPlaceGenerator*retval false
   907 jump *label310 always
   908 label *label315
-    * label *label316
   909 op add *tmp419 :tryPlaceGenerator:centerX 0.5
   910 op add .water2X *tmp419 :findPossiblePlacement:x
   911 op add *tmp421 :tryPlaceGenerator:centerY 0.5
 
   927 set :tryPlaceGenerator*retval false
   928 jump *label310 always
   929 label *label318
-    * label *label319
   930 op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   931 op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   932 op shl *tmp433 1 :findPossiblePlacement*retval
 
   942 set :tryPlaceGenerator*retval false
   943 jump *label310 always
   944 label *label321
-    * label *label322
   945 op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   946 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   947 op shl *tmp439 1 :findPossiblePlacement*retval
 
   957 set :tryPlaceGenerator*retval false
   958 jump *label310 always
   959 label *label324
-    * label *label325
   960 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   961 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   962 set :tryPlaceGenerator*retval true
 
   978 setaddr :createTerrainMask*retaddr *label327 (h:*label327)
   979 call *label9 *invalid :createTerrainMask*retval (m:*label327) (h:*label327)
   980 label *label327
-    * label *label328
   981 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
-    * label *label329
   982 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
-    * label *label330
   983 set :layoutThoriumDrillAtLocation:extractorMask 387
-    * label *label445
   984 jump *label456 always
   985 print :printMask:text
   986 print "\n"
-    * label *label446
   987 jump *label455 lessThan :printMask:r 0
   988 label *label447
-    * label *label448
   989 jump *label453 greaterThanEq :printMask:c 7
   990 label *label449
-    * label *label450
-    * label *label451
   991 print "x"
-    * label *label452
   992 jump *label449 lessThan :printMask:c 7
   993 label *label453
   994 print "\n"
-    * label *label454
   995 jump *label447 greaterThanEq :printMask:r 0
   996 label *label455
   997 label *label456
-    * label *label457
-    * label *label458
-    * label *label459
   998 jump *label470 always
   999 print :printMask:text
  1000 print "\n"
-    * label *label460
  1001 jump *label469 lessThan :printMask:r 0
  1002 label *label461
-    * label *label462
  1003 jump *label467 greaterThanEq :printMask:c 7
  1004 label *label463
-    * label *label464
-    * label *label465
  1005 print "x"
-    * label *label466
  1006 jump *label463 lessThan :printMask:c 7
  1007 label *label467
  1008 print "\n"
-    * label *label468
  1009 jump *label461 greaterThanEq :printMask:r 0
  1010 label *label469
  1011 label *label470
-    * label *label471
-    * label *label472
-    * label *label473
  1012 jump *label484 always
  1013 print :printMask:text
  1014 print "\n"
-    * label *label474
  1015 jump *label483 lessThan :printMask:r 0
  1016 label *label475
-    * label *label476
  1017 jump *label481 greaterThanEq :printMask:c 7
  1018 label *label477
-    * label *label478
-    * label *label479
  1019 print "x"
-    * label *label480
  1020 jump *label477 lessThan :printMask:c 7
  1021 label *label481
  1022 print "\n"
-    * label *label482
  1023 jump *label475 greaterThanEq :printMask:r 0
  1024 label *label483
  1025 label *label484
-    * label *label485
-    * label *label486
  1026 jump *label335 always
  1027 print ""
  1028 jump *label338 always
  1029 printflush message1
  1030 control enabled switch1 true
  1031 label *label340
-    * label *label341
  1032 sensor *tmp484 switch1 @enabled
  1033 jump *label340 notEqual *tmp484 false
-    * label *label342
  1034 label *label338
-    * label *label339
-    * label *label337
  1035 end
  1036 label *label335
-    * label *label336
-    * label *label334
  1037 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
  1038 set :findPossiblePlacement:placementMask 387
  1039 set :findPossiblePlacement:width 2
 
  1049 op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :findPossiblePlacement*retval
  1050 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
  1051 label *label344
-    * label *label345
-    * label *label346
  1052 set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
-    * label *label347
  1053 set :layoutThoriumDrillAtLocation:generatorVertical 6340995
  1054 set :tryPlaceGenerator:centerX .drillX
  1055 set :tryPlaceGenerator:centerY .drillY
 
  1063 set :layoutThoriumDrillAtLocation*retval true
  1064 jump *label326 always
  1065 label *label349
-    * label *label350
  1066 set :layoutThoriumDrillAtLocation:sx 3
  1067 set :layoutThoriumDrillAtLocation:sy 3
  1068 setaddr *tmp506 *label354
 
  1101 set *tmp512 0
  1102 jump *label359 always
  1103 label *label360
-    * label *label361
  1104 op mul *tmp519 7 *tmp511
  1105 op add :shiftMask:shift *tmp510 *tmp519
  1106 jump *label362 lessThanEq :shiftMask:shift 0
 
  1118 jump *label366 lessThanEq *tmp510 0
  1119 op shl :shiftMask:keep :shiftMask:keep *tmp530
  1120 label *label366
-    * label *label367
  1121 op shl *tmp536 :shiftMask:keep 7
  1122 op or :shiftMask:keep :shiftMask:keep *tmp536
  1123 op shl *tmp537 :shiftMask:keep 14
 
  1126 op or :shiftMask:keep :shiftMask:keep *tmp538
  1127 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
  1128 label *label364
-    * label *label365
  1129 set *tmp512 :shiftMask:mask
  1130 label *label359
  1131 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp512
 
  1143 set :layoutThoriumDrillAtLocation*retval true
  1144 jump *label326 always
  1145 label *label369
-    * label *label370
-    * label *label352
  1146 multijump *tmp506 0 0 (m:marker0)
  1147 multilabel *label357 (m:marker0)
-    * label *label353
  1148 set :layoutThoriumDrillAtLocation*retval true
  1149 label *label326
  1150 return :layoutThoriumDrillAtLocation*retaddr
 
  1164 set :findDrillLocation:dy :findDrillLocationLocal:dy
  1165 set :findDrillLocation:capacity :findDrillLocationLocal:capacity
  1166 set :findDrillLocation*retval :findDrillLocationLocal*retval
-    * label *label371
  1167 set :findDrillLocation*finished true
  1168 jump *label15 always
  1169 end
 
  1184 set :layoutThoriumDrill*retval false
  1185 jump *label373 always
  1186 label *label375
-    * label *label376
  1187 setaddr :layoutThoriumDrillAtLocation*retaddr *label377 (h:*label377)
  1188 call *label12 *invalid :layoutThoriumDrillAtLocation*retval (m:*label377) (h:*label377)
  1189 label *label377

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-5 instructions):
 
   162 op sub *tmp119 :locateOreAway:y *tmp100
   163 op len :locateOreAway:unitDist *tmp118 *tmp119
   164 jump *label63 notEqual :locateOreAway:lastX :locateOreAway:x
-    * jump *label65 notEqual :locateOreAway:lastY :locateOreAway:y
-    * jump *label53 always
+  165 jump *label53 equal :locateOreAway:lastY :locateOreAway:y
   166 label *label65
   167 label *label63
   168 jump *label67 lessThan :locateOreAway:coreDist 7
 
   715 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   716 set :findDrillLocationLocal:best *tmp158
   717 label *label268
-    * jump *label270 greaterThan *tmp158 :findDrillLocationLocal:last
-    * jump *label90 always
+  718 jump *label90 lessThanEq *tmp158 :findDrillLocationLocal:last
   719 label *label270
   720 set :findDrillLocationLocal:last *tmp158
   721 op mul :round:x :findDrillLocationLocal:diffX 1.1
 
   731 op sub *tmp350 :findDrillLocationLocal:oreY .coreY
   732 op abs *tmp351 *tmp350
   733 op min *tmp352 *tmp349 *tmp351
-    * jump *label274 greaterThanEq *tmp352 7
-    * jump *label90 always
+  734 jump *label90 lessThan *tmp352 7
   735 label *label274
   736 jump *label88 always
   737 label *label90
 
   854 jump *label297 always
   855 label *label304
   856 op sub *tmp398 3 :findPossiblePlacement:width
-    * jump *label306 lessThanEq :findPossiblePlacement:x *tmp398
-    * jump *label303 always
+  857 jump *label303 greaterThan :findPossiblePlacement:x *tmp398
   858 label *label306
   859 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
   860 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
   861 jump *label394 lessThanEq :findPossiblePlacement:x 3
   862 label *label303
   863 op sub *tmp401 3 :findPossiblePlacement:height
-    * jump *label308 lessThanEq :findPossiblePlacement:y *tmp401
-    * jump *label300 always
+  864 jump *label300 greaterThan :findPossiblePlacement:y *tmp401
   865 label *label308
   866 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
   867 jump *label393 lessThanEq :findPossiblePlacement:y 3

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   163 op len :locateOreAway:unitDist *tmp118 *tmp119
   164 jump *label63 notEqual :locateOreAway:lastX :locateOreAway:x
   165 jump *label53 equal :locateOreAway:lastY :locateOreAway:y
-    * label *label65
   166 label *label63
   167 jump *label67 lessThan :locateOreAway:coreDist 7
   168 jump *label69 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
 
   715 set :findDrillLocationLocal:best *tmp158
   716 label *label268
   717 jump *label90 lessThanEq *tmp158 :findDrillLocationLocal:last
-    * label *label270
   718 set :findDrillLocationLocal:last *tmp158
   719 op mul :round:x :findDrillLocationLocal:diffX 1.1
   720 op add *tmp342 :round:x 0.5
 
   730 op abs *tmp351 *tmp350
   731 op min *tmp352 *tmp349 *tmp351
   732 jump *label90 lessThan *tmp352 7
-    * label *label274
   733 jump *label88 always
   734 label *label90
   735 op add .count .count 1
 
   852 label *label304
   853 op sub *tmp398 3 :findPossiblePlacement:width
   854 jump *label303 greaterThan :findPossiblePlacement:x *tmp398
-    * label *label306
   855 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
   856 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
   857 jump *label394 lessThanEq :findPossiblePlacement:x 3
   858 label *label303
   859 op sub *tmp401 3 :findPossiblePlacement:height
   860 jump *label300 greaterThan :findPossiblePlacement:y *tmp401
-    * label *label308
   861 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
   862 jump *label393 lessThanEq :findPossiblePlacement:y 3
   863 label *label300

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
+    0 label __start__
     1 jump *label14 always
     2 jump *label0 always
     3 jump *label1 always
 
    52 op add *tmp14 :spotValue.2:result :spotValue.3:result
    53 op add *tmp15 :spotValue.3:result :spotValue.4:result
    54 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
-    * jump *label16 always
-    * jump *label23 always
+   55 return :computeRowValues*retaddr
+   56 return :computeRowValues*retaddr
    57 label *label22
    58 jump *label24 notEqual :computeRowValues:size 3
    59 op add *tmp19 :spotValue:result :spotValue.1:result
 
    63 op add *tmp23 :spotValue.2:result :spotValue.3:result
    64 op add *tmp24 *tmp23 :spotValue.4:result
    65 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
-    * jump *label16 always
-    * jump *label25 always
+   66 return :computeRowValues*retaddr
+   67 return :computeRowValues*retaddr
    68 label *label24
    69 op add *tmp26 :spotValue:result :spotValue.1:result
    70 op add *tmp27 *tmp26 :spotValue.2:result
 
   208 set :findDrillLocationLocal:oreY :locateOreAway:y
   209 jump *label79 notEqual *tmp83 false
   210 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
-    * jump *label42 always
+  211 return :findDrillLocationLocal*retaddr
   212 label *label79
   213 jump *label81 lessThan :findDrillLocationLocal:limit 1000
   214 op add .mapSpots .mapSpots 1
 
   557 set :findBestPosition:best :updateRowPositions2x2.3:col3
   558 label *label176
   559 label *label174
-    * jump *label179 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
-    * jump *label181 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
+  560 jump *label256 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
+  561 jump *label256 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
   562 set :findDrillLocationLocal:diffX 1.5
   563 set :findDrillLocationLocal:diffY 1.5
   564 set :findBestPosition:best :updateRowPositions2x2.3:col4
   565 label *label181
   566 label *label179
-    * jump *label98 always
+  567 jump *label256 always
   568 label *label97
   569 jump *label183 notEqual :findBestPosition:size 3
   570 op add *tmp241 :findBestPosition:y1 :findBestPosition:y2
 
   632 set :findBestPosition:best :updateRowPositions3x3.2:col2
   633 label *label226
   634 label *label224
-    * jump *label229 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
-    * jump *label231 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
+  635 jump *label256 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
+  636 jump *label256 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
   637 set :findDrillLocationLocal:diffX 1
   638 set :findDrillLocationLocal:diffY 1
   639 set :findBestPosition:best :updateRowPositions3x3.2:col3
   640 label *label231
   641 label *label229
-    * jump *label184 always
+  642 jump *label256 always
   643 label *label183
   644 op add *tmp286 :findBestPosition:y1 :findBestPosition:y2
   645 op add *tmp287 *tmp286 :findBestPosition:y3
 
   670 set :findBestPosition:best :updateRowPositions4x4.1:col1
   671 label *label248
   672 label *label246
-    * jump *label251 greaterThanEq :updateRowPositions4x4.1:col2 0.0784313725490196
-    * jump *label253 lessThanEq :updateRowPositions4x4.1:col2 :findBestPosition:best
+  673 jump *label256 greaterThanEq :updateRowPositions4x4.1:col2 0.0784313725490196
+  674 jump *label256 lessThanEq :updateRowPositions4x4.1:col2 :findBestPosition:best
   675 set :findDrillLocationLocal:diffX 0.5
   676 set :findDrillLocationLocal:diffY 0.5
   677 set :findBestPosition:best :updateRowPositions4x4.1:col2
 
   707 op add .locations .locations 1
   708 ucontrol unbind
   709 set :findDrillLocationLocal*retval true
-    * jump *label42 always
+  710 return :findDrillLocationLocal*retaddr
   711 label *label265
   712 label *label261
   713 jump *label268 lessThanEq *tmp158 :findDrillLocationLocal:best
 
   743 op add .count .count 1
   744 write :findDrillLocationLocal:bestY bank1 .count
   745 op add .locations .locations 1
-    * jump *label278 always
+  746 jump *label48 always
   747 remark "Time: "
   748 remark *tmp367
   749 remark " s\n"
 
   849 op mul *tmp395 :findPossiblePlacement:y 7
   850 op add *tmp396 24 *tmp395
   851 op add :findPossiblePlacement*retval *tmp396 :findPossiblePlacement:x
-    * jump *label297 always
+  852 return :findPossiblePlacement*retaddr
   853 label *label304
   854 op sub *tmp398 3 :findPossiblePlacement:width
   855 jump *label303 greaterThan :findPossiblePlacement:x *tmp398
 
   895 label *label314
   896 jump *label315 greaterThanEq :findPossiblePlacement*retval 0
   897 set :tryPlaceGenerator*retval false
-    * jump *label310 always
+  898 return :tryPlaceGenerator*retaddr
   899 label *label315
   900 op add *tmp419 :tryPlaceGenerator:centerX 0.5
   901 op add .water2X *tmp419 :findPossiblePlacement:x
 
   916 label *label317
   917 jump *label318 greaterThanEq :findPossiblePlacement*retval 0
   918 set :tryPlaceGenerator*retval false
-    * jump *label310 always
+  919 return :tryPlaceGenerator*retaddr
   920 label *label318
   921 op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   922 op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
 
   931 label *label320
   932 jump *label321 greaterThanEq :findPossiblePlacement*retval 0
   933 set :tryPlaceGenerator*retval false
-    * jump *label310 always
+  934 return :tryPlaceGenerator*retaddr
   935 label *label321
   936 op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   937 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
 
   946 label *label323
   947 jump *label324 greaterThanEq :findPossiblePlacement*retval 0
   948 set :tryPlaceGenerator*retval false
-    * jump *label310 always
+  949 return :tryPlaceGenerator*retaddr
   950 label *label324
   951 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   952 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   953 set :tryPlaceGenerator*retval true
-    * jump *label310 always
+  954 return :tryPlaceGenerator*retaddr
   955 label *label310
   956 return :tryPlaceGenerator*retaddr
   957 end
 
   972 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
   973 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
   974 set :layoutThoriumDrillAtLocation:extractorMask 387
-    * jump *label456 always
+  975 jump *label335 always
   976 print :printMask:text
   977 print "\n"
-    * jump *label455 lessThan :printMask:r 0
+  978 jump *label335 lessThan :printMask:r 0
   979 label *label447
   980 jump *label453 greaterThanEq :printMask:c 7
   981 label *label449
 
   986 jump *label447 greaterThanEq :printMask:r 0
   987 label *label455
   988 label *label456
-    * jump *label470 always
+  989 jump *label335 always
   990 print :printMask:text
   991 print "\n"
-    * jump *label469 lessThan :printMask:r 0
+  992 jump *label335 lessThan :printMask:r 0
   993 label *label461
   994 jump *label467 greaterThanEq :printMask:c 7
   995 label *label463
 
  1000 jump *label461 greaterThanEq :printMask:r 0
  1001 label *label469
  1002 label *label470
-    * jump *label484 always
+ 1003 jump *label335 always
  1004 print :printMask:text
  1005 print "\n"
-    * jump *label483 lessThan :printMask:r 0
+ 1006 jump *label335 lessThan :printMask:r 0
  1007 label *label475
  1008 jump *label481 greaterThanEq :printMask:c 7
  1009 label *label477
 
  1016 label *label484
  1017 jump *label335 always
  1018 print ""
-    * jump *label338 always
+ 1019 jump *label14 always
  1020 printflush message1
  1021 control enabled switch1 true
  1022 label *label340
 
  1052 label *label348
  1053 jump *label349 equal :tryPlaceGenerator*retval false
  1054 set :layoutThoriumDrillAtLocation*retval true
-    * jump *label326 always
+ 1055 return :layoutThoriumDrillAtLocation*retaddr
  1056 label *label349
  1057 set :layoutThoriumDrillAtLocation:sx 3
  1058 set :layoutThoriumDrillAtLocation:sy 3
 
  1132 label *label368
  1133 jump *label369 equal :tryPlaceGenerator*retval false
  1134 set :layoutThoriumDrillAtLocation*retval true
-    * jump *label326 always
+ 1135 return :layoutThoriumDrillAtLocation*retaddr
  1136 label *label369
  1137 multijump *tmp506 0 0 (m:marker0)
  1138 multilabel *label357 (m:marker0)

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-63 instructions):
-    * label __start__
     0 jump *label14 always
     1 jump *label0 always
     2 jump *label1 always
 
     8 label *label15
     9 wait 1e12
    10 jump *label15 always
-    * end
    11 label *label5
    12 op sub :spotValue:x :computeRowValues:x 2
    13 set :spotValue:y :computeRowValues:y
 
    51 op add *tmp15 :spotValue.3:result :spotValue.4:result
    52 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
    53 return :computeRowValues*retaddr
-    * return :computeRowValues*retaddr
    54 label *label22
    55 jump *label24 notEqual :computeRowValues:size 3
    56 op add *tmp19 :spotValue:result :spotValue.1:result
 
    61 op add *tmp24 *tmp23 :spotValue.4:result
    62 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
    63 return :computeRowValues*retaddr
-    * return :computeRowValues*retaddr
    64 label *label24
    65 op add *tmp26 :spotValue:result :spotValue.1:result
    66 op add *tmp27 *tmp26 :spotValue.2:result
 
    69 op add *tmp30 *tmp29 :spotValue.3:result
    70 op add *tmp31 *tmp30 :spotValue.4:result
    71 packcolor :computeRowValues*retval *tmp28 *tmp31 0 0
-    * label *label25
-    * label *label23
-    * label *label16
    72 return :computeRowValues*retaddr
-    * end
    73 label *label8
    74 set .locationsStart .locations
    75 set .coreX :findDrillLocationLocal:x
 
   261 op add *tmp15 :spotValue.3:result :spotValue.4:result
   262 packcolor :findBestPosition:y1 *tmp12 *tmp13 *tmp14 *tmp15
   263 jump *label432 always
-    * jump *label431 always
   264 label *label428
   265 jump *label429 notEqual :findDrillLocationLocal:size 3
   266 op add *tmp19 :spotValue:result :spotValue.1:result
 
   271 op add *tmp24 *tmp23 :spotValue.4:result
   272 packcolor :findBestPosition:y1 *tmp20 *tmp22 *tmp24 0
   273 jump *label432 always
-    * jump *label430 always
   274 label *label429
   275 op add *tmp26 :spotValue:result :spotValue.1:result
   276 op add *tmp27 *tmp26 :spotValue.2:result
 
   325 op add *tmp15 :spotValue.3:result :spotValue.4:result
   326 packcolor :findBestPosition:y2 *tmp12 *tmp13 *tmp14 *tmp15
   327 jump *label443 always
-    * jump *label442 always
   328 label *label439
   329 jump *label440 notEqual :findDrillLocationLocal:size 3
   330 op add *tmp19 :spotValue:result :spotValue.1:result
 
   335 op add *tmp24 *tmp23 :spotValue.4:result
   336 packcolor :findBestPosition:y2 *tmp20 *tmp22 *tmp24 0
   337 jump *label443 always
-    * jump *label441 always
   338 label *label440
   339 op add *tmp26 :spotValue:result :spotValue.1:result
   340 op add *tmp27 *tmp26 :spotValue.2:result
 
   388 op add *tmp15 :spotValue.3:result :spotValue.4:result
   389 packcolor :findBestPosition:y3 *tmp12 *tmp13 *tmp14 *tmp15
   390 jump *label497 always
-    * jump *label496 always
   391 label *label493
   392 jump *label494 notEqual :findDrillLocationLocal:size 3
   393 op add *tmp19 :spotValue:result :spotValue.1:result
 
   398 op add *tmp24 *tmp23 :spotValue.4:result
   399 packcolor :findBestPosition:y3 *tmp20 *tmp22 *tmp24 0
   400 jump *label497 always
-    * jump *label495 always
   401 label *label494
   402 op add *tmp26 :spotValue:result :spotValue.1:result
   403 op add *tmp27 *tmp26 :spotValue.2:result
 
   548 set :findDrillLocationLocal:diffX 1.5
   549 set :findDrillLocationLocal:diffY 1.5
   550 set :findBestPosition:best :updateRowPositions2x2.3:col4
-    * label *label181
-    * label *label179
   551 jump *label256 always
   552 label *label97
   553 jump *label183 notEqual :findBestPosition:size 3
 
   621 set :findDrillLocationLocal:diffX 1
   622 set :findDrillLocationLocal:diffY 1
   623 set :findBestPosition:best :updateRowPositions3x3.2:col3
-    * label *label231
-    * label *label229
   624 jump *label256 always
   625 label *label183
   626 op add *tmp286 :findBestPosition:y1 :findBestPosition:y2
 
   657 set :findDrillLocationLocal:diffX 0.5
   658 set :findDrillLocationLocal:diffY 0.5
   659 set :findBestPosition:best :updateRowPositions4x4.1:col2
-    * label *label253
-    * label *label251
-    * label *label184
-    * label *label98
   660 jump *label256 always
-    * printflush message1
-    * control enabled switch1 true
-    * label *label258
-    * sensor *tmp314 switch1 @enabled
-    * jump *label258 notEqual *tmp314 false
   661 label *label256
   662 op mul *tmp158 :findBestPosition:best 255
   663 jump *label261 lessThanEq *tmp158 :findDrillLocationLocal:capacity
 
   717 write :findDrillLocationLocal:bestY bank1 .count
   718 op add .locations .locations 1
   719 jump *label48 always
-    * remark "Time: "
-    * remark *tmp367
-    * remark " s\n"
-    * label *label281
-    * jump *label283 greaterThanEq :debugPrintSpot:i .locations
-    * remark :debugPrintSpot:x
-    * remark ","
-    * remark " "
-    * remark :debugPrintSpot:y
-    * remark ":"
-    * remark " "
-    * remark :debugPrintSpot:size
-    * remark "\"
-    * remark "n"
-    * jump *label281 always
-    * label *label283
-    * print ""
-    * printflush message1
-    * label *label278
-    * jump *label48 always
-    * set :findDrillLocationLocal*retval null
-    * label *label42
-    * return :findDrillLocationLocal*retaddr
-    * end
   720 label *label9
   721 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp381
   722 jump *label289 notEqual *tmp381 false
 
   782 jump *label391 greaterThanEq :createTerrainMask:r -3
   783 set :createTerrainMask*retval :createTerrainMask:result
   784 return :createTerrainMask*retaddr
-    * end
   785 label *label10
   786 set :findPossiblePlacement:y -3
   787 jump *label300 greaterThan :findPossiblePlacement:y 3
 
   811 jump *label393 lessThanEq :findPossiblePlacement:y 3
   812 label *label300
   813 set :findPossiblePlacement*retval -1
-    * label *label297
   814 return :findPossiblePlacement*retaddr
-    * end
   815 label *label11
   816 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
   817 set :findPossiblePlacement:placementMask :tryPlaceGenerator:generatorHorizontal
 
   898 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   899 set :tryPlaceGenerator*retval true
   900 return :tryPlaceGenerator*retaddr
-    * label *label310
-    * return :tryPlaceGenerator*retaddr
-    * end
   901 label *label12
   902 set .panelY -1
   903 set .panelX -1
 
   916 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
   917 set :layoutThoriumDrillAtLocation:extractorMask 387
   918 jump *label335 always
-    * print :printMask:text
-    * print "\n"
-    * jump *label335 lessThan :printMask:r 0
-    * label *label447
-    * jump *label453 greaterThanEq :printMask:c 7
-    * label *label449
-    * print "x"
-    * jump *label449 lessThan :printMask:c 7
-    * label *label453
-    * print "\n"
-    * jump *label447 greaterThanEq :printMask:r 0
-    * label *label455
-    * label *label456
-    * jump *label335 always
-    * print :printMask:text
-    * print "\n"
-    * jump *label335 lessThan :printMask:r 0
-    * label *label461
-    * jump *label467 greaterThanEq :printMask:c 7
-    * label *label463
-    * print "x"
-    * jump *label463 lessThan :printMask:c 7
-    * label *label467
-    * print "\n"
-    * jump *label461 greaterThanEq :printMask:r 0
-    * label *label469
-    * label *label470
-    * jump *label335 always
-    * print :printMask:text
-    * print "\n"
-    * jump *label335 lessThan :printMask:r 0
-    * label *label475
-    * jump *label481 greaterThanEq :printMask:c 7
-    * label *label477
-    * print "x"
-    * jump *label477 lessThan :printMask:c 7
-    * label *label481
-    * print "\n"
-    * jump *label475 greaterThanEq :printMask:r 0
-    * label *label483
-    * label *label484
-    * jump *label335 always
-    * print ""
-    * jump *label14 always
-    * printflush message1
-    * control enabled switch1 true
-    * label *label340
-    * sensor *tmp484 switch1 @enabled
-    * jump *label340 notEqual *tmp484 false
-    * label *label338
-    * end
   919 label *label335
   920 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
   921 set :findPossiblePlacement:placementMask 387
 
  1029 multijump *tmp506 0 0 (m:marker0)
  1030 multilabel *label357 (m:marker0)
  1031 set :layoutThoriumDrillAtLocation*retval true
-    * label *label326
  1032 return :layoutThoriumDrillAtLocation*retaddr
-    * end
  1033 label *label0
  1034 set :findDrillLocationLocal:x :findDrillLocation:x
  1035 set :findDrillLocationLocal:y :findDrillLocation:y
 
  1047 set :findDrillLocation*retval :findDrillLocationLocal*retval
  1048 set :findDrillLocation*finished true
  1049 jump *label15 always
-    * end
  1050 label *label1
  1051 set :findDrillLocationLocal:x :layoutThoriumDrill:x
  1052 set :findDrillLocationLocal:y :layoutThoriumDrill:y
 
  1071 label *label373
  1072 set :layoutThoriumDrill*finished true
  1073 jump *label15 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
   279 op add *tmp30 *tmp29 :spotValue.3:result
   280 op add *tmp31 *tmp30 :spotValue.4:result
   281 packcolor :findBestPosition:y1 *tmp28 *tmp31 0 0
-    * label *label430
-    * label *label431
   282 label *label432
   283 op sub *tmp161 :findDrillLocationLocal:oreY 1
   284 op sub :spotValue:x :findDrillLocationLocal:oreX 2
 
   341 op add *tmp30 *tmp29 :spotValue.3:result
   342 op add *tmp31 *tmp30 :spotValue.4:result
   343 packcolor :findBestPosition:y2 *tmp28 *tmp31 0 0
-    * label *label441
-    * label *label442
   344 label *label443
   345 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   346 set :spotValue:y :findDrillLocationLocal:oreY
 
   402 op add *tmp30 *tmp29 :spotValue.3:result
   403 op add *tmp31 *tmp30 :spotValue.4:result
   404 packcolor :findBestPosition:y3 *tmp28 *tmp31 0 0
-    * label *label495
-    * label *label496
   405 label *label497
   406 op add *tmp165 :findDrillLocationLocal:oreY 1
   407 set :computeRowValues:x :findDrillLocationLocal:oreX

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-2 instructions):
 
   651 set :findDrillLocationLocal:diffX 0.5
   652 set :findDrillLocationLocal:diffY 0.5
   653 set :findBestPosition:best :updateRowPositions4x4.1:col2
-    * jump *label256 always
   654 label *label256
   655 op mul *tmp158 :findBestPosition:best 255
   656 jump *label261 lessThanEq *tmp158 :findDrillLocationLocal:capacity
 
   908 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
   909 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
   910 set :layoutThoriumDrillAtLocation:extractorMask 387
-    * jump *label335 always
   911 label *label335
   912 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
   913 set :findPossiblePlacement:placementMask 387

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
   908 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
   909 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
   910 set :layoutThoriumDrillAtLocation:extractorMask 387
-    * label *label335
   911 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
   912 set :findPossiblePlacement:placementMask 387
   913 set :findPossiblePlacement:width 2

Modifications by Jumps phase, Jump Straightening, pass 5, iteration 1 (-1 instructions):
 
   696 op sub *tmp350 :findDrillLocationLocal:oreY .coreY
   697 op abs *tmp351 *tmp350
   698 op min *tmp352 *tmp349 *tmp351
-    * jump *label90 lessThan *tmp352 7
-    * jump *label88 always
+  699 jump *label88 greaterThanEq *tmp352 7
   700 label *label90
   701 op add .count .count 1
   702 sensor *tmp357 :findDrillLocationLocal:item @id

Final code before resolving virtual instructions:

    0:  jump *label14 always 0 0                                     #set target = 8;
    1:  jump *label0 always 0 0                                      ...
    2:  jump *label1 always 0 0                                      ...
    3:  draw triangle bank1 message1 .angle .attenuationRate .batteryX .batteryY
    4:  draw triangle .coreX .coreY .count .drillX .drillY .generatorX
    5:  draw triangle .generatorY .locations .locationsStart .mapAction .mapProgress .mapSpots
    6:  draw triangle .mapTotal .nodeX .nodeY .panelX .panelY .water1X
    7:  draw triangle .water1Y .water2X .water2Y :computeRowValues:ore :computeRowValues:size :computeRowValues:x
    8:  draw triangle :computeRowValues:y :createTerrainMask:r :createTerrainMask:result :createTerrainMask:x :createTerrainMask:y :findBestPosition:best
    9:  draw triangle :findBestPosition:ore :findBestPosition:row1 :findBestPosition:row1.2 :findBestPosition:row1.1 :findBestPosition:row2.1 :findBestPosition:row2.2
   10:  draw triangle :findBestPosition:row2 :findBestPosition:row3 :findBestPosition:row3.1 :findBestPosition:row4 :findBestPosition:size :findBestPosition:x
   11:  draw triangle :findBestPosition:y :findBestPosition:y1 :findBestPosition:y2 :findBestPosition:y3 :findBestPosition:y4 :findDrillLocation:capacity
   12:  draw triangle :findDrillLocation:dx :findDrillLocation:dy :findDrillLocation:item :findDrillLocation:limit :findDrillLocation:ore :findDrillLocation:size
   13:  draw triangle :findDrillLocation:unit :findDrillLocation:x :findDrillLocation:y :findDrillLocationLocal:best :findDrillLocationLocal:bestX :findDrillLocationLocal:bestY
   14:  draw triangle :findDrillLocationLocal:capacity :findDrillLocationLocal:diffX :findDrillLocationLocal:diffY :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:dx :findDrillLocationLocal:dy
   15:  draw triangle :findDrillLocationLocal:item :findDrillLocationLocal:last :findDrillLocationLocal:limit :findDrillLocationLocal:maxDistance :findDrillLocationLocal:ore :findDrillLocationLocal:oreX
   16:  draw triangle :findDrillLocationLocal:oreY :findDrillLocationLocal:size :findDrillLocationLocal:unit :findDrillLocationLocal:x :findDrillLocationLocal:y :findPossiblePlacement:height
   17:  draw triangle :findPossiblePlacement:mask :findPossiblePlacement:placementMask :findPossiblePlacement:terrainMask :findPossiblePlacement:width :findPossiblePlacement:x :findPossiblePlacement:y
   18:  draw triangle :isBlocked:result :isBlocked:x :isBlocked:y :layoutThoriumDrill:limit :layoutThoriumDrill:unit :layoutThoriumDrill:x
   19:  draw triangle :layoutThoriumDrill:y :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:generatorHorizontal :layoutThoriumDrillAtLocation:generatorVertical
   20:  draw triangle :layoutThoriumDrillAtLocation:newX :layoutThoriumDrillAtLocation:newY :layoutThoriumDrillAtLocation:sx :layoutThoriumDrillAtLocation:sy :layoutThoriumDrillAtLocation:terrainMask :locateOreAway:a
   21:  draw triangle :locateOreAway:coreDist :locateOreAway:distance :locateOreAway:lastX :locateOreAway:lastY :locateOreAway:unitDist :locateOreAway:x
   22:  draw triangle :locateOreAway:y :round.1:x :round:x :shiftMask:clearMask :shiftMask:keep :shiftMask:mask
   23:  draw triangle :shiftMask:shift :spotValue.1:ore :spotValue.3:ore :spotValue:ore :spotValue.2:ore :spotValue.4:ore
   24:  draw triangle :spotValue.1:result :spotValue.3:result :spotValue.4:result :spotValue:result :spotValue.2:result :spotValue:x
   25:  draw triangle :spotValue.3:x :spotValue.2:x :spotValue.1:x :spotValue.4:x :spotValue:y :spotValue.3:y
   26:  draw triangle :spotValue.2:y :spotValue.1:y :spotValue.4:y :tryPlaceGenerator:centerX :tryPlaceGenerator:centerY :tryPlaceGenerator:generatorHorizontal
   27:  draw triangle :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:terrainMask :updateRowPositions2x2:col1 :updateRowPositions2x2.3:col1 :updateRowPositions2x2.2:col1 :updateRowPositions2x2.1:col1
   28:  draw triangle :updateRowPositions2x2:col2 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.1:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2.3:col3
   29:  draw triangle :updateRowPositions2x2.2:col3 :updateRowPositions2x2.1:col3 :updateRowPositions2x2:col4 :updateRowPositions2x2.3:col4 :updateRowPositions2x2.2:col4 :updateRowPositions2x2.1:col4
   30:  draw triangle :updateRowPositions3x3:col1 :updateRowPositions3x3.2:col1 :updateRowPositions3x3.1:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.1:col2
   31:  draw triangle :updateRowPositions3x3:col3 :updateRowPositions3x3.2:col3 :updateRowPositions3x3.1:col3 :updateRowPositions4x4:col1 :updateRowPositions4x4.1:col1 :updateRowPositions4x4:col2
   32:  draw triangle :updateRowPositions4x4.1:col2 :visited:i :visited:index :visited:lx :visited:ly 0
        label *label14                                               ...
   33:  set .attenuationRate 50                                      remote var attenuationRate = 50;
   34:  set .count -1                                                var count = -1, locations = 0, locationsStart;
   35:  set .locations 0                                             ...
   36:  set *signature "d40420de727b906a:v1"                         #set target = 8;
        label *label15                                               ...
   37:  wait 1e12                                                    ...
   38:  jump *label15 always 0 0                                     ...
        label *label5                                                def computeRowValues(x, y, ore, size)
   39:  op sub :spotValue:x :computeRowValues:x 2                    var x1 = spotValue(x - 2, y, ore);
   40:  set :spotValue:y :computeRowValues:y                         ...
   41:  set :spotValue:ore :computeRowValues:ore                     ...
   42:  ucontrol getBlock :spotValue:x :spotValue:y type building fl mlog(in x, in y, in ore, out result) {
   43:  select value equal floor :spotValue:ore 0.00392156862745098  ...
   44:  sensor solid type @solid                                     ...
   45:  select :spotValue:result notEqual solid false WALL value     ...
   46:  op sub :spotValue.1:x :computeRowValues:x 1                  var x2 = spotValue(x - 1, y, ore);
   47:  set :spotValue.1:y :computeRowValues:y                       ...
   48:  set :spotValue.1:ore :computeRowValues:ore                   ...
   49:  ucontrol getBlock :spotValue.1:x :spotValue.1:y type buildin mlog(in x, in y, in ore, out result) {
   50:  select value equal floor :spotValue.1:ore 0.0039215686274509 ...
   51:  sensor solid type @solid                                     ...
   52:  select :spotValue.1:result notEqual solid false WALL value   ...
   53:  set :spotValue.2:x :computeRowValues:x                       var x3 = spotValue(x + 0, y, ore);
   54:  set :spotValue.2:y :computeRowValues:y                       ...
   55:  set :spotValue.2:ore :computeRowValues:ore                   ...
   56:  ucontrol getBlock :spotValue.2:x :spotValue.2:y type buildin mlog(in x, in y, in ore, out result) {
   57:  select value equal floor :spotValue.2:ore 0.0039215686274509 ...
   58:  sensor solid type @solid                                     ...
   59:  select :spotValue.2:result notEqual solid false WALL value   ...
   60:  op add :spotValue.3:x :computeRowValues:x 1                  var x4 = spotValue(x + 1, y, ore);
   61:  set :spotValue.3:y :computeRowValues:y                       ...
   62:  set :spotValue.3:ore :computeRowValues:ore                   ...
   63:  ucontrol getBlock :spotValue.3:x :spotValue.3:y type buildin mlog(in x, in y, in ore, out result) {
   64:  select value equal floor :spotValue.3:ore 0.0039215686274509 ...
   65:  sensor solid type @solid                                     ...
   66:  select :spotValue.3:result notEqual solid false WALL value   ...
   67:  op add :spotValue.4:x :computeRowValues:x 2                  var x5 = spotValue(x + 2, y, ore);
   68:  set :spotValue.4:y :computeRowValues:y                       ...
   69:  set :spotValue.4:ore :computeRowValues:ore                   ...
   70:  ucontrol getBlock :spotValue.4:x :spotValue.4:y type buildin mlog(in x, in y, in ore, out result) {
   71:  select value equal floor :spotValue.4:ore 0.0039215686274509 ...
   72:  sensor solid type @solid                                     ...
   73:  select :spotValue.4:result notEqual solid false WALL value   ...
   74:  jump *label22 notEqual :computeRowValues:size 2              if size == 2 then
   75:  op add *tmp12 :spotValue:result :spotValue.1:result          x1 + x2,        // drill at x - 1.5
   76:  op add *tmp13 :spotValue.1:result :spotValue.2:result        x2 + x3,        // drill at x - 0.5
   77:  op add *tmp14 :spotValue.2:result :spotValue.3:result        x3 + x4,        // drill at x + 0.5
   78:  op add *tmp15 :spotValue.3:result :spotValue.4:result        x4 + x5         // drill at x + 1.5
   79:  packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp return packcolor(
   80:  return :computeRowValues*retaddr                             ...
        label *label22                                               if size == 2 then
   81:  jump *label24 notEqual :computeRowValues:size 3              elsif size == 3 then
   82:  op add *tmp19 :spotValue:result :spotValue.1:result          x1 + x2 + x3,   // drill at x - 1
   83:  op add *tmp20 *tmp19 :spotValue.2:result                     ...
   84:  op add *tmp21 :spotValue.1:result :spotValue.2:result        x2 + x3 + x4,   // drill at x
   85:  op add *tmp22 *tmp21 :spotValue.3:result                     ...
   86:  op add *tmp23 :spotValue.2:result :spotValue.3:result        x3 + x4 + x5,   // drill at x + 1
   87:  op add *tmp24 *tmp23 :spotValue.4:result                     ...
   88:  packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0    return packcolor(
   89:  return :computeRowValues*retaddr                             ...
        label *label24                                               elsif size == 3 then
   90:  op add *tmp26 :spotValue:result :spotValue.1:result          x1 + x2 + x3 + x4,   // drill at x - 0.5
   91:  op add *tmp27 *tmp26 :spotValue.2:result                     ...
   92:  op add *tmp28 *tmp27 :spotValue.3:result                     ...
   93:  op add *tmp29 :spotValue.1:result :spotValue.2:result        x2 + x3 + x4 + x5,   // drill at x + 0.5
   94:  op add *tmp30 *tmp29 :spotValue.3:result                     ...
   95:  op add *tmp31 *tmp30 :spotValue.4:result                     ...
   96:  packcolor :computeRowValues*retval *tmp28 *tmp31 0 0         return packcolor(
   97:  return :computeRowValues*retaddr                             def computeRowValues(x, y, ore, size)
        label *label8                                                noinline def findDrillLocationLocal(x, y, unit, item, ore, size, limit, out dx, out dy, out capacity)
   98:  set .locationsStart .locations                               locationsStart = locations;
   99:  set .coreX :findDrillLocationLocal:x                         coreX = x;
  100:  set .coreY :findDrillLocationLocal:y                         coreY = y;
  101:  ubind :findDrillLocationLocal:unit                           ubind(unit);
  102:  set :findDrillLocationLocal:capacity 0                       mapSpots = dx = dy = capacity = 0;
  103:  set :findDrillLocationLocal:dy :findDrillLocationLocal:capac ...
  104:  set :findDrillLocationLocal:dx :findDrillLocationLocal:dy    ...
  105:  set .mapSpots :findDrillLocationLocal:dx                     ...
  106:  op sub *tmp68 @mapw :findDrillLocationLocal:x                var distanceLimit = max(coreX, coreY, @mapw - coreX, @maph - coreY);
  107:  op sub *tmp69 @maph :findDrillLocationLocal:y                ...
  108:  op max *tmp70 :findDrillLocationLocal:x :findDrillLocationLo ...
  109:  op max *tmp70 *tmp70 *tmp68                                  ...
  110:  op max *tmp70 *tmp70 *tmp69                                  ...
  111:  set :findDrillLocationLocal:distanceLimit *tmp70             ...
  112:  set .mapAction "Locating ore..."                             mapAction = "Locating ore...";
  113:  set .angle 0                                                 mapProgress = angle = 0;
  114:  set .mapProgress 0                                           ...
  115:  ucontrol within :findDrillLocationLocal:x :findDrillLocation while !within(x, y, radius) do
  116:  jump *label47 notEqual *tmp73 false                          ...
        label *label444                                              ...
  117:  ucontrol approach :findDrillLocationLocal:x :findDrillLocati approach(x, y, radius - 0.5);
  118:  ucontrol within :findDrillLocationLocal:x :findDrillLocation while !within(x, y, radius) do
  119:  jump *label444 equal *tmp73 false                            ...
        label *label47                                               ...
  120:  op div *tmp76 *tmp70 3.8197185279121366                      mapTotal = (distanceLimit / SPIRAL_WIDTH) ** 2;
  121:  op pow .mapTotal *tmp76 2                                    ...
  122:  set :findDrillLocationLocal:oreX 0                           var oreX = 0, oreY = 0;
  123:  set :findDrillLocationLocal:oreY 0                           ...
        label *label48                                               while true do
  124:  set :findDrillLocationLocal:best 0                           var best = 0, bestX = x, bestY = y;
  125:  set :findDrillLocationLocal:bestX :findDrillLocationLocal:x  ...
  126:  set :findDrillLocationLocal:bestY :findDrillLocationLocal:y  ...
  127:  op sub *tmp78 :findDrillLocationLocal:limit :findDrillLocati var maxDistance = (limit - capacity) * attenuationRate;
  128:  op mul :findDrillLocationLocal:maxDistance *tmp78 .attenuati ...
  129:  op min :findDrillLocationLocal:distanceLimit :findDrillLocat distanceLimit = min(distanceLimit, maxDistance);
  130:  op div *tmp81 :findDrillLocationLocal:distanceLimit 3.819718 mapTotal = (distanceLimit / SPIRAL_WIDTH) ** 2;
  131:  op pow .mapTotal *tmp81 2                                    ...
  132:  set :locateOreAway:x :findDrillLocationLocal:oreX            if !locateOreAway(item, in out oreX, in out oreY, in distanceLimit) then
  133:  set :locateOreAway:y :findDrillLocationLocal:oreY            ...
  134:  op mul :locateOreAway:distance 3.8197185279121366 .angle     var distance = SPIRAL_WIDTH * angle;
  135:  set :locateOreAway:lastX -1                                  var lastX = -1, lastY = -1;
  136:  set :locateOreAway:lastY -1                                  ...
  137:  op max .angle .angle @pi                                     angle = max(angle, @pi);
  138:  op mul .mapProgress .angle .angle                            mapProgress = angle * angle;
  139:  op sub *tmp92 @mapw 5                                        while distance < distanceLimit do
  140:  op sub *tmp99 @maph 5                                        ...
  141:  jump *label54 greaterThanEq :locateOreAway:distance :findDri ...
        label *label389                                              ...
  142:  op div :locateOreAway:a .angle @degToRad                     var a = angle / @degToRad;
  143:  op sin *tmp89 :locateOreAway:a 0                             var lx = limit(coreX + sin(a) * distance, 5, @mapw - 5);
  144:  op mul *tmp90 *tmp89 :locateOreAway:distance                 ...
  145:  op add *tmp91 .coreX *tmp90                                  ...
  146:  op max *tmp94 *tmp91 5                                       min(max(value, low), high);
  147:  op min *tmp93 *tmp94 *tmp92                                  var lx = limit(coreX + sin(a) * distance, 5, @mapw - 5);
  148:  op cos *tmp96 :locateOreAway:a 0                             var ly = limit(coreY + cos(a) * distance, 5, @maph - 5);
  149:  op mul *tmp97 *tmp96 :locateOreAway:distance                 ...
  150:  op add *tmp98 .coreY *tmp97                                  ...
  151:  op max *tmp101 *tmp98 5                                      min(max(value, low), high);
  152:  op min *tmp100 *tmp101 *tmp99                                var ly = limit(coreY + cos(a) * distance, 5, @maph - 5);
  153:  ucontrol within *tmp93 *tmp100 5 *tmp103 0                   while !within(x, y, radius) do
  154:  jump *label60 notEqual *tmp103 false                         ...
        label *label397                                              ...
  155:  ucontrol approach *tmp93 *tmp100 4.5 0 0                     approach(x, y, radius - 0.5);
  156:  ucontrol within *tmp93 *tmp100 5 *tmp103 0                   while !within(x, y, radius) do
  157:  jump *label397 equal *tmp103 false                           ...
        label *label60                                               ...
  158:  op div *tmp106 3.8197185279121366 :locateOreAway:distance    angle += SPIRAL_WIDTH / distance;
  159:  op add .angle .angle *tmp106                                 ...
  160:  op mul .mapProgress .angle .angle                            mapProgress = angle * angle;
  161:  op mul :locateOreAway:distance 3.8197185279121366 .angle     distance = SPIRAL_WIDTH * angle;
  162:  ulocate ore core true :findDrillLocationLocal:item :locateOr if !ulocate(:ore, ore, out x, out y) then
  163:  jump *label61 notEqual *tmp109 false                         ...
  164:  set *tmp83 false                                             return false;
  165:  jump *label51 always 0 0                                     ...
        label *label61                                               if !ulocate(:ore, ore, out x, out y) then
  166:  op sub *tmp113 :locateOreAway:x .coreX                       var coreDist = max(abs(x - coreX), abs(y - coreY));
  167:  op abs *tmp114 *tmp113 0                                     ...
  168:  op sub *tmp115 :locateOreAway:y .coreY                       ...
  169:  op abs *tmp116 *tmp115 0                                     ...
  170:  op max :locateOreAway:coreDist *tmp114 *tmp116               ...
  171:  op sub *tmp118 :locateOreAway:x *tmp93                       var unitDist = len(x - lx, y - ly);
  172:  op sub *tmp119 :locateOreAway:y *tmp100                      ...
  173:  op len :locateOreAway:unitDist *tmp118 *tmp119               ...
  174:  jump *label63 notEqual :locateOreAway:lastX :locateOreAway:x if lastX == x then if lastY == y then continue; end; end;
  175:  jump *label53 equal :locateOreAway:lastY :locateOreAway:y    ...
        label *label63                                               ...
  176:  jump *label67 lessThan :locateOreAway:coreDist 7             if coreDist >= 7 then
  177:  jump *label69 greaterThanEq :locateOreAway:unitDist :locateO if unitDist < distance then
  178:  set :locateOreAway:lastX :locateOreAway:x                    lastX = x;
  179:  set :locateOreAway:lastY :locateOreAway:y                    lastY = y;
  180:  set :visited:i .locationsStart                               for var i in locationsStart ... locations do
  181:  jump *label74 greaterThanEq .locationsStart .locations       ...
        label *label390                                              ...
  182:  op mul :visited:index 4 :visited:i                           var index = 4 * i;
  183:  op add *tmp133 :visited:index 2                              var lx = bank1[index + 2];
  184:  read :visited:lx bank1 *tmp133                               ...
  185:  op add *tmp135 :visited:index 3                              var ly = bank1[index + 3];
  186:  read :visited:ly bank1 *tmp135                               ...
  187:  op sub *tmp138 :locateOreAway:x :visited:lx                  if len(x - lx, y - ly) < 7 then
  188:  op sub *tmp139 :locateOreAway:y :visited:ly                  ...
  189:  op len *tmp140 *tmp138 *tmp139                               ...
  190:  jump *label75 greaterThanEq *tmp140 7                        ...
  191:  set *tmp129 true                                             return true;
  192:  jump *label71 always 0 0                                     ...
        label *label75                                               if len(x - lx, y - ly) < 7 then
  193:  op add :visited:i :visited:i 1                               for var i in locationsStart ... locations do
  194:  jump *label390 lessThan :visited:i .locations                ...
        label *label74                                               ...
  195:  set *tmp129 false                                            return false;
        label *label71                                               if !visited(x, y) then
  196:  jump *label77 notEqual *tmp129 false                         ...
  197:  op div *tmp145 2 .angle                                      angle += 2 * SPIRAL_WIDTH / distance;
  198:  op add .angle .angle *tmp145                                 ...
  199:  op mul .mapProgress .angle .angle                            mapProgress = angle * angle;
  200:  printflush message1                                          printflush(message1);
  201:  set *tmp83 true                                              return true;
  202:  jump *label51 always 0 0                                     ...
        label *label77                                               if !visited(x, y) then
        label *label69                                               if unitDist < distance then
        label *label67                                               if coreDist >= 7 then
        label *label53                                               while distance < distanceLimit do
  203:  jump *label389 lessThan :locateOreAway:distance :findDrillLo ...
        label *label54                                               ...
  204:  set *tmp83 false                                             return false;
        label *label51                                               if !locateOreAway(item, in out oreX, in out oreY, in distanceLimit) then
  205:  set :findDrillLocationLocal:oreX :locateOreAway:x            ...
  206:  set :findDrillLocationLocal:oreY :locateOreAway:y            ...
  207:  jump *label79 notEqual *tmp83 false                          ...
  208:  op greaterThan :findDrillLocationLocal*retval :findDrillLoca return capacity > 0;
  209:  return :findDrillLocationLocal*retaddr                       ...
        label *label79                                               if !locateOreAway(item, in out oreX, in out oreY, in distanceLimit) then
  210:  jump *label81 lessThan :findDrillLocationLocal:limit 1000    if limit >= 1000 then mapSpots++; end;
  211:  op add .mapSpots .mapSpots 1                                 ...
        label *label81                                               ...
  212:  ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp155  while !within(x, y, radius) do
  213:  jump *label87 notEqual *tmp155 false                         ...
        label *label420                                              ...
  214:  ucontrol approach :locateOreAway:x :locateOreAway:y 5.5 0 0  approach(x, y, radius - 0.5);
  215:  ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp155  while !within(x, y, radius) do
  216:  jump *label420 equal *tmp155 false                           ...
        label *label87                                               ...
  217:  set :findDrillLocationLocal:last 0                           var last = 0;
        label *label88                                               while true do
  218:  set :findBestPosition:x :findDrillLocationLocal:oreX         var score = findBestPosition(oreX, oreY, ore, size, ref diffX, ref diffY);
  219:  set :findBestPosition:y :findDrillLocationLocal:oreY         ...
  220:  set :findBestPosition:ore :findDrillLocationLocal:ore        ...
  221:  set :findBestPosition:size :findDrillLocationLocal:size      ...
  222:  op sub *tmp159 :findDrillLocationLocal:oreY 2                var y1 = computeRowValues(x, y - 2, ore, size);
  223:  op sub :spotValue:x :findDrillLocationLocal:oreX 2           var x1 = spotValue(x - 2, y, ore);
  224:  set :spotValue:y *tmp159                                     ...
  225:  set :spotValue:ore :findDrillLocationLocal:ore               ...
  226:  ucontrol getBlock :spotValue:x :spotValue:y type building fl mlog(in x, in y, in ore, out result) {
  227:  select value equal floor :spotValue:ore 0.00392156862745098  ...
  228:  sensor solid type @solid                                     ...
  229:  select :spotValue:result notEqual solid false WALL value     ...
  230:  op sub :spotValue.1:x :findDrillLocationLocal:oreX 1         var x2 = spotValue(x - 1, y, ore);
  231:  set :spotValue.1:y *tmp159                                   ...
  232:  set :spotValue.1:ore :findDrillLocationLocal:ore             ...
  233:  ucontrol getBlock :spotValue.1:x :spotValue.1:y type buildin mlog(in x, in y, in ore, out result) {
  234:  select value equal floor :spotValue.1:ore 0.0039215686274509 ...
  235:  sensor solid type @solid                                     ...
  236:  select :spotValue.1:result notEqual solid false WALL value   ...
  237:  set :spotValue.2:x :findDrillLocationLocal:oreX              var x3 = spotValue(x + 0, y, ore);
  238:  set :spotValue.2:y *tmp159                                   ...
  239:  set :spotValue.2:ore :findDrillLocationLocal:ore             ...
  240:  ucontrol getBlock :spotValue.2:x :spotValue.2:y type buildin mlog(in x, in y, in ore, out result) {
  241:  select value equal floor :spotValue.2:ore 0.0039215686274509 ...
  242:  sensor solid type @solid                                     ...
  243:  select :spotValue.2:result notEqual solid false WALL value   ...
  244:  op add :spotValue.3:x :findDrillLocationLocal:oreX 1         var x4 = spotValue(x + 1, y, ore);
  245:  set :spotValue.3:y *tmp159                                   ...
  246:  set :spotValue.3:ore :findDrillLocationLocal:ore             ...
  247:  ucontrol getBlock :spotValue.3:x :spotValue.3:y type buildin mlog(in x, in y, in ore, out result) {
  248:  select value equal floor :spotValue.3:ore 0.0039215686274509 ...
  249:  sensor solid type @solid                                     ...
  250:  select :spotValue.3:result notEqual solid false WALL value   ...
  251:  op add :spotValue.4:x :findDrillLocationLocal:oreX 2         var x5 = spotValue(x + 2, y, ore);
  252:  set :spotValue.4:y *tmp159                                   ...
  253:  set :spotValue.4:ore :findDrillLocationLocal:ore             ...
  254:  ucontrol getBlock :spotValue.4:x :spotValue.4:y type buildin mlog(in x, in y, in ore, out result) {
  255:  select value equal floor :spotValue.4:ore 0.0039215686274509 ...
  256:  sensor solid type @solid                                     ...
  257:  select :spotValue.4:result notEqual solid false WALL value   ...
  258:  jump *label428 notEqual :findDrillLocationLocal:size 2       if size == 2 then
  259:  op add *tmp12 :spotValue:result :spotValue.1:result          x1 + x2,        // drill at x - 1.5
  260:  op add *tmp13 :spotValue.1:result :spotValue.2:result        x2 + x3,        // drill at x - 0.5
  261:  op add *tmp14 :spotValue.2:result :spotValue.3:result        x3 + x4,        // drill at x + 0.5
  262:  op add *tmp15 :spotValue.3:result :spotValue.4:result        x4 + x5         // drill at x + 1.5
  263:  packcolor :findBestPosition:y1 *tmp12 *tmp13 *tmp14 *tmp15   return packcolor(
  264:  jump *label432 always 0 0                                    ...
        label *label428                                              if size == 2 then
  265:  jump *label429 notEqual :findDrillLocationLocal:size 3       elsif size == 3 then
  266:  op add *tmp19 :spotValue:result :spotValue.1:result          x1 + x2 + x3,   // drill at x - 1
  267:  op add *tmp20 *tmp19 :spotValue.2:result                     ...
  268:  op add *tmp21 :spotValue.1:result :spotValue.2:result        x2 + x3 + x4,   // drill at x
  269:  op add *tmp22 *tmp21 :spotValue.3:result                     ...
  270:  op add *tmp23 :spotValue.2:result :spotValue.3:result        x3 + x4 + x5,   // drill at x + 1
  271:  op add *tmp24 *tmp23 :spotValue.4:result                     ...
  272:  packcolor :findBestPosition:y1 *tmp20 *tmp22 *tmp24 0        return packcolor(
  273:  jump *label432 always 0 0                                    ...
        label *label429                                              elsif size == 3 then
  274:  op add *tmp26 :spotValue:result :spotValue.1:result          x1 + x2 + x3 + x4,   // drill at x - 0.5
  275:  op add *tmp27 *tmp26 :spotValue.2:result                     ...
  276:  op add *tmp28 *tmp27 :spotValue.3:result                     ...
  277:  op add *tmp29 :spotValue.1:result :spotValue.2:result        x2 + x3 + x4 + x5,   // drill at x + 0.5
  278:  op add *tmp30 *tmp29 :spotValue.3:result                     ...
  279:  op add *tmp31 *tmp30 :spotValue.4:result                     ...
  280:  packcolor :findBestPosition:y1 *tmp28 *tmp31 0 0             return packcolor(
        label *label432                                              var y1 = computeRowValues(x, y - 2, ore, size);
  281:  op sub *tmp161 :findDrillLocationLocal:oreY 1                var y2 = computeRowValues(x, y - 1, ore, size);
  282:  op sub :spotValue:x :findDrillLocationLocal:oreX 2           var x1 = spotValue(x - 2, y, ore);
  283:  set :spotValue:y *tmp161                                     ...
  284:  set :spotValue:ore :findDrillLocationLocal:ore               ...
  285:  ucontrol getBlock :spotValue:x :spotValue:y type building fl mlog(in x, in y, in ore, out result) {
  286:  select value equal floor :spotValue:ore 0.00392156862745098  ...
  287:  sensor solid type @solid                                     ...
  288:  select :spotValue:result notEqual solid false WALL value     ...
  289:  op sub :spotValue.1:x :findDrillLocationLocal:oreX 1         var x2 = spotValue(x - 1, y, ore);
  290:  set :spotValue.1:y *tmp161                                   ...
  291:  set :spotValue.1:ore :findDrillLocationLocal:ore             ...
  292:  ucontrol getBlock :spotValue.1:x :spotValue.1:y type buildin mlog(in x, in y, in ore, out result) {
  293:  select value equal floor :spotValue.1:ore 0.0039215686274509 ...
  294:  sensor solid type @solid                                     ...
  295:  select :spotValue.1:result notEqual solid false WALL value   ...
  296:  set :spotValue.2:x :findDrillLocationLocal:oreX              var x3 = spotValue(x + 0, y, ore);
  297:  set :spotValue.2:y *tmp161                                   ...
  298:  set :spotValue.2:ore :findDrillLocationLocal:ore             ...
  299:  ucontrol getBlock :spotValue.2:x :spotValue.2:y type buildin mlog(in x, in y, in ore, out result) {
  300:  select value equal floor :spotValue.2:ore 0.0039215686274509 ...
  301:  sensor solid type @solid                                     ...
  302:  select :spotValue.2:result notEqual solid false WALL value   ...
  303:  op add :spotValue.3:x :findDrillLocationLocal:oreX 1         var x4 = spotValue(x + 1, y, ore);
  304:  set :spotValue.3:y *tmp161                                   ...
  305:  set :spotValue.3:ore :findDrillLocationLocal:ore             ...
  306:  ucontrol getBlock :spotValue.3:x :spotValue.3:y type buildin mlog(in x, in y, in ore, out result) {
  307:  select value equal floor :spotValue.3:ore 0.0039215686274509 ...
  308:  sensor solid type @solid                                     ...
  309:  select :spotValue.3:result notEqual solid false WALL value   ...
  310:  op add :spotValue.4:x :findDrillLocationLocal:oreX 2         var x5 = spotValue(x + 2, y, ore);
  311:  set :spotValue.4:y *tmp161                                   ...
  312:  set :spotValue.4:ore :findDrillLocationLocal:ore             ...
  313:  ucontrol getBlock :spotValue.4:x :spotValue.4:y type buildin mlog(in x, in y, in ore, out result) {
  314:  select value equal floor :spotValue.4:ore 0.0039215686274509 ...
  315:  sensor solid type @solid                                     ...
  316:  select :spotValue.4:result notEqual solid false WALL value   ...
  317:  jump *label439 notEqual :findDrillLocationLocal:size 2       if size == 2 then
  318:  op add *tmp12 :spotValue:result :spotValue.1:result          x1 + x2,        // drill at x - 1.5
  319:  op add *tmp13 :spotValue.1:result :spotValue.2:result        x2 + x3,        // drill at x - 0.5
  320:  op add *tmp14 :spotValue.2:result :spotValue.3:result        x3 + x4,        // drill at x + 0.5
  321:  op add *tmp15 :spotValue.3:result :spotValue.4:result        x4 + x5         // drill at x + 1.5
  322:  packcolor :findBestPosition:y2 *tmp12 *tmp13 *tmp14 *tmp15   return packcolor(
  323:  jump *label443 always 0 0                                    ...
        label *label439                                              if size == 2 then
  324:  jump *label440 notEqual :findDrillLocationLocal:size 3       elsif size == 3 then
  325:  op add *tmp19 :spotValue:result :spotValue.1:result          x1 + x2 + x3,   // drill at x - 1
  326:  op add *tmp20 *tmp19 :spotValue.2:result                     ...
  327:  op add *tmp21 :spotValue.1:result :spotValue.2:result        x2 + x3 + x4,   // drill at x
  328:  op add *tmp22 *tmp21 :spotValue.3:result                     ...
  329:  op add *tmp23 :spotValue.2:result :spotValue.3:result        x3 + x4 + x5,   // drill at x + 1
  330:  op add *tmp24 *tmp23 :spotValue.4:result                     ...
  331:  packcolor :findBestPosition:y2 *tmp20 *tmp22 *tmp24 0        return packcolor(
  332:  jump *label443 always 0 0                                    ...
        label *label440                                              elsif size == 3 then
  333:  op add *tmp26 :spotValue:result :spotValue.1:result          x1 + x2 + x3 + x4,   // drill at x - 0.5
  334:  op add *tmp27 *tmp26 :spotValue.2:result                     ...
  335:  op add *tmp28 *tmp27 :spotValue.3:result                     ...
  336:  op add *tmp29 :spotValue.1:result :spotValue.2:result        x2 + x3 + x4 + x5,   // drill at x + 0.5
  337:  op add *tmp30 *tmp29 :spotValue.3:result                     ...
  338:  op add *tmp31 *tmp30 :spotValue.4:result                     ...
  339:  packcolor :findBestPosition:y2 *tmp28 *tmp31 0 0             return packcolor(
        label *label443                                              var y2 = computeRowValues(x, y - 1, ore, size);
  340:  op sub :spotValue:x :findDrillLocationLocal:oreX 2           var x1 = spotValue(x - 2, y, ore);
  341:  set :spotValue:y :findDrillLocationLocal:oreY                ...
  342:  set :spotValue:ore :findDrillLocationLocal:ore               ...
  343:  ucontrol getBlock :spotValue:x :spotValue:y type building fl mlog(in x, in y, in ore, out result) {
  344:  select value equal floor :spotValue:ore 0.00392156862745098  ...
  345:  sensor solid type @solid                                     ...
  346:  select :spotValue:result notEqual solid false WALL value     ...
  347:  op sub :spotValue.1:x :findDrillLocationLocal:oreX 1         var x2 = spotValue(x - 1, y, ore);
  348:  set :spotValue.1:y :findDrillLocationLocal:oreY              ...
  349:  set :spotValue.1:ore :findDrillLocationLocal:ore             ...
  350:  ucontrol getBlock :spotValue.1:x :spotValue.1:y type buildin mlog(in x, in y, in ore, out result) {
  351:  select value equal floor :spotValue.1:ore 0.0039215686274509 ...
  352:  sensor solid type @solid                                     ...
  353:  select :spotValue.1:result notEqual solid false WALL value   ...
  354:  set :spotValue.2:x :findDrillLocationLocal:oreX              var x3 = spotValue(x + 0, y, ore);
  355:  set :spotValue.2:y :findDrillLocationLocal:oreY              ...
  356:  set :spotValue.2:ore :findDrillLocationLocal:ore             ...
  357:  ucontrol getBlock :spotValue.2:x :spotValue.2:y type buildin mlog(in x, in y, in ore, out result) {
  358:  select value equal floor :spotValue.2:ore 0.0039215686274509 ...
  359:  sensor solid type @solid                                     ...
  360:  select :spotValue.2:result notEqual solid false WALL value   ...
  361:  op add :spotValue.3:x :findDrillLocationLocal:oreX 1         var x4 = spotValue(x + 1, y, ore);
  362:  set :spotValue.3:y :findDrillLocationLocal:oreY              ...
  363:  set :spotValue.3:ore :findDrillLocationLocal:ore             ...
  364:  ucontrol getBlock :spotValue.3:x :spotValue.3:y type buildin mlog(in x, in y, in ore, out result) {
  365:  select value equal floor :spotValue.3:ore 0.0039215686274509 ...
  366:  sensor solid type @solid                                     ...
  367:  select :spotValue.3:result notEqual solid false WALL value   ...
  368:  op add :spotValue.4:x :findDrillLocationLocal:oreX 2         var x5 = spotValue(x + 2, y, ore);
  369:  set :spotValue.4:y :findDrillLocationLocal:oreY              ...
  370:  set :spotValue.4:ore :findDrillLocationLocal:ore             ...
  371:  ucontrol getBlock :spotValue.4:x :spotValue.4:y type buildin mlog(in x, in y, in ore, out result) {
  372:  select value equal floor :spotValue.4:ore 0.0039215686274509 ...
  373:  sensor solid type @solid                                     ...
  374:  select :spotValue.4:result notEqual solid false WALL value   ...
  375:  jump *label493 notEqual :findDrillLocationLocal:size 2       if size == 2 then
  376:  op add *tmp12 :spotValue:result :spotValue.1:result          x1 + x2,        // drill at x - 1.5
  377:  op add *tmp13 :spotValue.1:result :spotValue.2:result        x2 + x3,        // drill at x - 0.5
  378:  op add *tmp14 :spotValue.2:result :spotValue.3:result        x3 + x4,        // drill at x + 0.5
  379:  op add *tmp15 :spotValue.3:result :spotValue.4:result        x4 + x5         // drill at x + 1.5
  380:  packcolor :findBestPosition:y3 *tmp12 *tmp13 *tmp14 *tmp15   return packcolor(
  381:  jump *label497 always 0 0                                    ...
        label *label493                                              if size == 2 then
  382:  jump *label494 notEqual :findDrillLocationLocal:size 3       elsif size == 3 then
  383:  op add *tmp19 :spotValue:result :spotValue.1:result          x1 + x2 + x3,   // drill at x - 1
  384:  op add *tmp20 *tmp19 :spotValue.2:result                     ...
  385:  op add *tmp21 :spotValue.1:result :spotValue.2:result        x2 + x3 + x4,   // drill at x
  386:  op add *tmp22 *tmp21 :spotValue.3:result                     ...
  387:  op add *tmp23 :spotValue.2:result :spotValue.3:result        x3 + x4 + x5,   // drill at x + 1
  388:  op add *tmp24 *tmp23 :spotValue.4:result                     ...
  389:  packcolor :findBestPosition:y3 *tmp20 *tmp22 *tmp24 0        return packcolor(
  390:  jump *label497 always 0 0                                    ...
        label *label494                                              elsif size == 3 then
  391:  op add *tmp26 :spotValue:result :spotValue.1:result          x1 + x2 + x3 + x4,   // drill at x - 0.5
  392:  op add *tmp27 *tmp26 :spotValue.2:result                     ...
  393:  op add *tmp28 *tmp27 :spotValue.3:result                     ...
  394:  op add *tmp29 :spotValue.1:result :spotValue.2:result        x2 + x3 + x4 + x5,   // drill at x + 0.5
  395:  op add *tmp30 *tmp29 :spotValue.3:result                     ...
  396:  op add *tmp31 *tmp30 :spotValue.4:result                     ...
  397:  packcolor :findBestPosition:y3 *tmp28 *tmp31 0 0             return packcolor(
        label *label497                                              var y3 = computeRowValues(x, y + 0, ore, size);
  398:  op add *tmp165 :findDrillLocationLocal:oreY 1                var y4 = computeRowValues(x, y + 1, ore, size);
  399:  set :computeRowValues:x :findDrillLocationLocal:oreX         ...
  400:  set :computeRowValues:y *tmp165                              ...
  401:  set :computeRowValues:ore :findDrillLocationLocal:ore        ...
  402:  set :computeRowValues:size :findDrillLocationLocal:size      ...
  403:  setaddr :computeRowValues*retaddr *label95                   ...
  404:  call *label5 *invalid :computeRowValues*retval               ...
        label *label95                                               ...
  405:  set :findBestPosition:y4 :computeRowValues*retval            ...
  406:  op add *tmp167 :findBestPosition:y 2                         var y5 = computeRowValues(x, y + 2, ore, size);
  407:  set :computeRowValues:x :findBestPosition:x                  ...
  408:  set :computeRowValues:y *tmp167                              ...
  409:  set :computeRowValues:ore :findBestPosition:ore              ...
  410:  set :computeRowValues:size :findBestPosition:size            ...
  411:  setaddr :computeRowValues*retaddr *label96                   ...
  412:  call *label5 *invalid :computeRowValues*retval               ...
        label *label96                                               ...
  413:  set :findBestPosition:best 0                                 var best = 0;
  414:  set :findDrillLocationLocal:diffX 0                          bestX = 0;
  415:  set :findDrillLocationLocal:diffY 0                          bestY = 0;
  416:  jump *label97 notEqual :findBestPosition:size 2              if size == 2 then
  417:  op add :findBestPosition:row1 :findBestPosition:y1 :findBest var row1 = y1 + y2;         // drill at y - 1.5
  418:  op add :findBestPosition:row2 :findBestPosition:y2 :findBest var row2 = y2 + y3;         // drill at y - 0.5
  419:  op add :findBestPosition:row3 :findBestPosition:y3 :findBest var row3 = y3 + y4;         // drill at y + 0.5
  420:  op add :findBestPosition:row4 :findBestPosition:y4 :computeR var row4 = y4 + y5;         // drill at y + 1.5
  421:  unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2 unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  422:  jump *label101 greaterThanEq :updateRowPositions2x2:col1 0.0 if value < LIMIT then
  423:  jump *label103 lessThanEq :updateRowPositions2x2:col1 0      if value > best then
  424:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  425:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  426:  set :findBestPosition:best :updateRowPositions2x2:col1       best = value;
        label *label103                                              if value > best then
        label *label101                                              if value < LIMIT then
  427:  jump *label106 greaterThanEq :updateRowPositions2x2:col2 0.0 ...
  428:  jump *label108 lessThanEq :updateRowPositions2x2:col2 :findB if value > best then
  429:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  430:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  431:  set :findBestPosition:best :updateRowPositions2x2:col2       best = value;
        label *label108                                              if value > best then
        label *label106                                              if value < LIMIT then
  432:  jump *label111 greaterThanEq :updateRowPositions2x2:col3 0.0 ...
  433:  jump *label113 lessThanEq :updateRowPositions2x2:col3 :findB if value > best then
  434:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  435:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  436:  set :findBestPosition:best :updateRowPositions2x2:col3       best = value;
        label *label113                                              if value > best then
        label *label111                                              if value < LIMIT then
  437:  jump *label116 greaterThanEq :updateRowPositions2x2:col4 0.0 ...
  438:  jump *label118 lessThanEq :updateRowPositions2x2:col4 :findB if value > best then
  439:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  440:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  441:  set :findBestPosition:best :updateRowPositions2x2:col4       best = value;
        label *label118                                              if value > best then
        label *label116                                              if value < LIMIT then
  442:  unpackcolor :updateRowPositions2x2.1:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  443:  jump *label122 greaterThanEq :updateRowPositions2x2.1:col1 0 if value < LIMIT then
  444:  jump *label124 lessThanEq :updateRowPositions2x2.1:col1 :fin if value > best then
  445:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  446:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  447:  set :findBestPosition:best :updateRowPositions2x2.1:col1     best = value;
        label *label124                                              if value > best then
        label *label122                                              if value < LIMIT then
  448:  jump *label127 greaterThanEq :updateRowPositions2x2.1:col2 0 ...
  449:  jump *label129 lessThanEq :updateRowPositions2x2.1:col2 :fin if value > best then
  450:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  451:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  452:  set :findBestPosition:best :updateRowPositions2x2.1:col2     best = value;
        label *label129                                              if value > best then
        label *label127                                              if value < LIMIT then
  453:  jump *label132 greaterThanEq :updateRowPositions2x2.1:col3 0 ...
  454:  jump *label134 lessThanEq :updateRowPositions2x2.1:col3 :fin if value > best then
  455:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  456:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  457:  set :findBestPosition:best :updateRowPositions2x2.1:col3     best = value;
        label *label134                                              if value > best then
        label *label132                                              if value < LIMIT then
  458:  jump *label137 greaterThanEq :updateRowPositions2x2.1:col4 0 ...
  459:  jump *label139 lessThanEq :updateRowPositions2x2.1:col4 :fin if value > best then
  460:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  461:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  462:  set :findBestPosition:best :updateRowPositions2x2.1:col4     best = value;
        label *label139                                              if value > best then
        label *label137                                              if value < LIMIT then
  463:  unpackcolor :updateRowPositions2x2.2:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  464:  jump *label143 greaterThanEq :updateRowPositions2x2.2:col1 0 if value < LIMIT then
  465:  jump *label145 lessThanEq :updateRowPositions2x2.2:col1 :fin if value > best then
  466:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  467:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  468:  set :findBestPosition:best :updateRowPositions2x2.2:col1     best = value;
        label *label145                                              if value > best then
        label *label143                                              if value < LIMIT then
  469:  jump *label148 greaterThanEq :updateRowPositions2x2.2:col2 0 ...
  470:  jump *label150 lessThanEq :updateRowPositions2x2.2:col2 :fin if value > best then
  471:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  472:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  473:  set :findBestPosition:best :updateRowPositions2x2.2:col2     best = value;
        label *label150                                              if value > best then
        label *label148                                              if value < LIMIT then
  474:  jump *label153 greaterThanEq :updateRowPositions2x2.2:col3 0 ...
  475:  jump *label155 lessThanEq :updateRowPositions2x2.2:col3 :fin if value > best then
  476:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  477:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  478:  set :findBestPosition:best :updateRowPositions2x2.2:col3     best = value;
        label *label155                                              if value > best then
        label *label153                                              if value < LIMIT then
  479:  jump *label158 greaterThanEq :updateRowPositions2x2.2:col4 0 ...
  480:  jump *label160 lessThanEq :updateRowPositions2x2.2:col4 :fin if value > best then
  481:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  482:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  483:  set :findBestPosition:best :updateRowPositions2x2.2:col4     best = value;
        label *label160                                              if value > best then
        label *label158                                              if value < LIMIT then
  484:  unpackcolor :updateRowPositions2x2.3:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  485:  jump *label164 greaterThanEq :updateRowPositions2x2.3:col1 0 if value < LIMIT then
  486:  jump *label166 lessThanEq :updateRowPositions2x2.3:col1 :fin if value > best then
  487:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  488:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  489:  set :findBestPosition:best :updateRowPositions2x2.3:col1     best = value;
        label *label166                                              if value > best then
        label *label164                                              if value < LIMIT then
  490:  jump *label169 greaterThanEq :updateRowPositions2x2.3:col2 0 ...
  491:  jump *label171 lessThanEq :updateRowPositions2x2.3:col2 :fin if value > best then
  492:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  493:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  494:  set :findBestPosition:best :updateRowPositions2x2.3:col2     best = value;
        label *label171                                              if value > best then
        label *label169                                              if value < LIMIT then
  495:  jump *label174 greaterThanEq :updateRowPositions2x2.3:col3 0 ...
  496:  jump *label176 lessThanEq :updateRowPositions2x2.3:col3 :fin if value > best then
  497:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  498:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  499:  set :findBestPosition:best :updateRowPositions2x2.3:col3     best = value;
        label *label176                                              if value > best then
        label *label174                                              if value < LIMIT then
  500:  jump *label256 greaterThanEq :updateRowPositions2x2.3:col4 0 ...
  501:  jump *label256 lessThanEq :updateRowPositions2x2.3:col4 :fin if value > best then
  502:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  503:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  504:  set :findBestPosition:best :updateRowPositions2x2.3:col4     best = value;
  505:  jump *label256 always 0 0                                    if size == 2 then
        label *label97                                               ...
  506:  jump *label183 notEqual :findBestPosition:size 3             elsif size == 3 then
  507:  op add *tmp241 :findBestPosition:y1 :findBestPosition:y2     var row1 = y1 + y2 + y3;    // drill at y - 1
  508:  op add :findBestPosition:row1.1 *tmp241 :findBestPosition:y3 ...
  509:  op add *tmp243 :findBestPosition:y2 :findBestPosition:y3     var row2 = y2 + y3 + y4;    // drill at y
  510:  op add :findBestPosition:row2.1 *tmp243 :findBestPosition:y4 ...
  511:  op add *tmp245 :findBestPosition:y3 :findBestPosition:y4     var row3 = y3 + y4 + y5;    // drill at y + 1
  512:  op add :findBestPosition:row3.1 *tmp245 :computeRowValues*re ...
  513:  unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3 unpackcolor(out col1, out col2, out col3, , rowSum);
  514:  jump *label187 greaterThanEq :updateRowPositions3x3:col1 0.0 if value < LIMIT then
  515:  jump *label189 lessThanEq :updateRowPositions3x3:col1 0      if value > best then
  516:  set :findDrillLocationLocal:diffX -1                         bestX = dx;
  517:  set :findDrillLocationLocal:diffY -1                         bestY = dy;
  518:  set :findBestPosition:best :updateRowPositions3x3:col1       best = value;
        label *label189                                              if value > best then
        label *label187                                              if value < LIMIT then
  519:  jump *label192 greaterThanEq :updateRowPositions3x3:col2 0.0 ...
  520:  jump *label194 lessThanEq :updateRowPositions3x3:col2 :findB if value > best then
  521:  set :findDrillLocationLocal:diffX 0                          bestX = dx;
  522:  set :findDrillLocationLocal:diffY -1                         bestY = dy;
  523:  set :findBestPosition:best :updateRowPositions3x3:col2       best = value;
        label *label194                                              if value > best then
        label *label192                                              if value < LIMIT then
  524:  jump *label197 greaterThanEq :updateRowPositions3x3:col3 0.0 ...
  525:  jump *label199 lessThanEq :updateRowPositions3x3:col3 :findB if value > best then
  526:  set :findDrillLocationLocal:diffX 1                          bestX = dx;
  527:  set :findDrillLocationLocal:diffY -1                         bestY = dy;
  528:  set :findBestPosition:best :updateRowPositions3x3:col3       best = value;
        label *label199                                              if value > best then
        label *label197                                              if value < LIMIT then
  529:  unpackcolor :updateRowPositions3x3.1:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, , rowSum);
  530:  jump *label203 greaterThanEq :updateRowPositions3x3.1:col1 0 if value < LIMIT then
  531:  jump *label205 lessThanEq :updateRowPositions3x3.1:col1 :fin if value > best then
  532:  set :findDrillLocationLocal:diffX -1                         bestX = dx;
  533:  set :findDrillLocationLocal:diffY 0                          bestY = dy;
  534:  set :findBestPosition:best :updateRowPositions3x3.1:col1     best = value;
        label *label205                                              if value > best then
        label *label203                                              if value < LIMIT then
  535:  jump *label208 greaterThanEq :updateRowPositions3x3.1:col2 0 ...
  536:  jump *label210 lessThanEq :updateRowPositions3x3.1:col2 :fin if value > best then
  537:  set :findDrillLocationLocal:diffX 0                          bestX = dx;
  538:  set :findDrillLocationLocal:diffY 0                          bestY = dy;
  539:  set :findBestPosition:best :updateRowPositions3x3.1:col2     best = value;
        label *label210                                              if value > best then
        label *label208                                              if value < LIMIT then
  540:  jump *label213 greaterThanEq :updateRowPositions3x3.1:col3 0 ...
  541:  jump *label215 lessThanEq :updateRowPositions3x3.1:col3 :fin if value > best then
  542:  set :findDrillLocationLocal:diffX 1                          bestX = dx;
  543:  set :findDrillLocationLocal:diffY 0                          bestY = dy;
  544:  set :findBestPosition:best :updateRowPositions3x3.1:col3     best = value;
        label *label215                                              if value > best then
        label *label213                                              if value < LIMIT then
  545:  unpackcolor :updateRowPositions3x3.2:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, , rowSum);
  546:  jump *label219 greaterThanEq :updateRowPositions3x3.2:col1 0 if value < LIMIT then
  547:  jump *label221 lessThanEq :updateRowPositions3x3.2:col1 :fin if value > best then
  548:  set :findDrillLocationLocal:diffX -1                         bestX = dx;
  549:  set :findDrillLocationLocal:diffY 1                          bestY = dy;
  550:  set :findBestPosition:best :updateRowPositions3x3.2:col1     best = value;
        label *label221                                              if value > best then
        label *label219                                              if value < LIMIT then
  551:  jump *label224 greaterThanEq :updateRowPositions3x3.2:col2 0 ...
  552:  jump *label226 lessThanEq :updateRowPositions3x3.2:col2 :fin if value > best then
  553:  set :findDrillLocationLocal:diffX 0                          bestX = dx;
  554:  set :findDrillLocationLocal:diffY 1                          bestY = dy;
  555:  set :findBestPosition:best :updateRowPositions3x3.2:col2     best = value;
        label *label226                                              if value > best then
        label *label224                                              if value < LIMIT then
  556:  jump *label256 greaterThanEq :updateRowPositions3x3.2:col3 0 ...
  557:  jump *label256 lessThanEq :updateRowPositions3x3.2:col3 :fin if value > best then
  558:  set :findDrillLocationLocal:diffX 1                          bestX = dx;
  559:  set :findDrillLocationLocal:diffY 1                          bestY = dy;
  560:  set :findBestPosition:best :updateRowPositions3x3.2:col3     best = value;
  561:  jump *label256 always 0 0                                    elsif size == 3 then
        label *label183                                              ...
  562:  op add *tmp286 :findBestPosition:y1 :findBestPosition:y2     var row1 = y1 + y2 + y3 + y4;    // drill at y - 0.5
  563:  op add *tmp287 *tmp286 :findBestPosition:y3                  ...
  564:  op add :findBestPosition:row1.2 *tmp287 :findBestPosition:y4 ...
  565:  op add *tmp289 :findBestPosition:y2 :findBestPosition:y3     var row2 = y2 + y3 + y4 + y5;    // drill at y + 0.5
  566:  op add *tmp290 *tmp289 :findBestPosition:y4                  ...
  567:  op add :findBestPosition:row2.2 *tmp290 :computeRowValues*re ...
  568:  unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4 unpackcolor(out col1, out col2, , , rowSum);
  569:  jump *label235 greaterThanEq :updateRowPositions4x4:col1 0.0 if value < LIMIT then
  570:  jump *label237 lessThanEq :updateRowPositions4x4:col1 0      if value > best then
  571:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  572:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  573:  set :findBestPosition:best :updateRowPositions4x4:col1       best = value;
        label *label237                                              if value > best then
        label *label235                                              if value < LIMIT then
  574:  jump *label240 greaterThanEq :updateRowPositions4x4:col2 0.0 ...
  575:  jump *label242 lessThanEq :updateRowPositions4x4:col2 :findB if value > best then
  576:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  577:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  578:  set :findBestPosition:best :updateRowPositions4x4:col2       best = value;
        label *label242                                              if value > best then
        label *label240                                              if value < LIMIT then
  579:  unpackcolor :updateRowPositions4x4.1:col1 :updateRowPosition unpackcolor(out col1, out col2, , , rowSum);
  580:  jump *label246 greaterThanEq :updateRowPositions4x4.1:col1 0 if value < LIMIT then
  581:  jump *label248 lessThanEq :updateRowPositions4x4.1:col1 :fin if value > best then
  582:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  583:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  584:  set :findBestPosition:best :updateRowPositions4x4.1:col1     best = value;
        label *label248                                              if value > best then
        label *label246                                              if value < LIMIT then
  585:  jump *label256 greaterThanEq :updateRowPositions4x4.1:col2 0 ...
  586:  jump *label256 lessThanEq :updateRowPositions4x4.1:col2 :fin if value > best then
  587:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  588:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  589:  set :findBestPosition:best :updateRowPositions4x4.1:col2     best = value;
        label *label256                                              if debug then
  590:  op mul *tmp158 :findBestPosition:best 255                    return best * 255;
  591:  jump *label261 lessThanEq *tmp158 :findDrillLocationLocal:ca if score > capacity then
  592:  op add :findDrillLocationLocal:dx :findDrillLocationLocal:or dx = oreX + diffX;
  593:  op add :findDrillLocationLocal:dy :findDrillLocationLocal:or dy = oreY + diffY;
  594:  set :findDrillLocationLocal:capacity *tmp158                 capacity = score;
  595:  jump *label263 greaterThanEq :findDrillLocationLocal:limit 1 if limit < 1000 then mapSpots = score; end;
  596:  set .mapSpots *tmp158                                        ...
        label *label263                                              ...
  597:  jump *label265 lessThan :findDrillLocationLocal:capacity :fi if capacity >= limit then
  598:  op add .count .count 1                                       bank1[++count] = item.@id;
  599:  sensor *tmp326 :findDrillLocationLocal:item @id              ...
  600:  write *tmp326 bank1 .count                                   ...
  601:  op add .count .count 1                                       bank1[++count] = value;
  602:  write *tmp158 bank1 .count                                   ...
  603:  op add .count .count 1                                       bank1[++count] = x;
  604:  write :findDrillLocationLocal:dx bank1 .count                ...
  605:  op add .count .count 1                                       bank1[++count] = y;
  606:  write :findDrillLocationLocal:dy bank1 .count                ...
  607:  op add .locations .locations 1                               saveLocation(item, score, dx, dy);
  608:  ucontrol unbind 0 0 0 0 0                                    unbind();
  609:  set :findDrillLocationLocal*retval true                      return true;
  610:  return :findDrillLocationLocal*retaddr                       ...
        label *label265                                              if capacity >= limit then
        label *label261                                              if score > capacity then
  611:  jump *label268 lessThanEq *tmp158 :findDrillLocationLocal:be if score > best then
  612:  op add :findDrillLocationLocal:bestX :findDrillLocationLocal bestX = oreX + diffX;
  613:  op add :findDrillLocationLocal:bestY :findDrillLocationLocal bestY = oreY + diffY;
  614:  set :findDrillLocationLocal:best *tmp158                     best = score;
        label *label268                                              if score > best then
  615:  jump *label90 lessThanEq *tmp158 :findDrillLocationLocal:las if score <= last then break; end;
  616:  set :findDrillLocationLocal:last *tmp158                     last = score;
  617:  op mul :round:x :findDrillLocationLocal:diffX 1.1            oreX += round(diffX * 1.1);    // Rounds halves to higher absolute values
  618:  op add *tmp342 :round:x 0.5                                  *math: floor(x + 0.5);
  619:  op floor *tmp341 *tmp342 0                                   oreX += round(diffX * 1.1);    // Rounds halves to higher absolute values
  620:  op add :findDrillLocationLocal:oreX :findDrillLocationLocal: ...
  621:  op mul :round.1:x :findDrillLocationLocal:diffY 1.1          oreY += round(diffY * 1.1);
  622:  op add *tmp346 :round.1:x 0.5                                *math: floor(x + 0.5);
  623:  op floor *tmp345 *tmp346 0                                   oreY += round(diffY * 1.1);
  624:  op add :findDrillLocationLocal:oreY :findDrillLocationLocal: ...
  625:  op sub *tmp348 :findDrillLocationLocal:oreX .coreX           if min(abs(oreX - coreX), abs(oreY - coreY)) < 7 then break; end;
  626:  op abs *tmp349 *tmp348 0                                     ...
  627:  op sub *tmp350 :findDrillLocationLocal:oreY .coreY           ...
  628:  op abs *tmp351 *tmp350 0                                     ...
  629:  op min *tmp352 *tmp349 *tmp351                               ...
  630:  jump *label88 greaterThanEq *tmp352 7                        ...
        label *label90                                               while true do
  631:  op add .count .count 1                                       bank1[++count] = item.@id;
  632:  sensor *tmp357 :findDrillLocationLocal:item @id              ...
  633:  write *tmp357 bank1 .count                                   ...
  634:  op add .count .count 1                                       bank1[++count] = value;
  635:  write :findDrillLocationLocal:best bank1 .count              ...
  636:  op add .count .count 1                                       bank1[++count] = x;
  637:  write :findDrillLocationLocal:bestX bank1 .count             ...
  638:  op add .count .count 1                                       bank1[++count] = y;
  639:  write :findDrillLocationLocal:bestY bank1 .count             ...
  640:  op add .locations .locations 1                               saveLocation(item, best, bestX, bestY);
  641:  jump *label48 always 0 0                                     if debug then
        label *label9                                                noinline def createTerrainMask(x, y)
  642:  ucontrol within :createTerrainMask:x :createTerrainMask:y 6  while !within(x, y, radius) do
  643:  jump *label289 notEqual *tmp381 false                        ...
        label *label421                                              ...
  644:  ucontrol approach :createTerrainMask:x :createTerrainMask:y  approach(x, y, radius - 0.5);
  645:  ucontrol within :createTerrainMask:x :createTerrainMask:y 6  while !within(x, y, radius) do
  646:  jump *label421 equal *tmp381 false                           ...
        label *label289                                              ...
  647:  set :createTerrainMask:result 0                              var result = 0;
  648:  set :createTerrainMask:r 3                                   for var r in -3 .. 3 descending do
        label *label391                                              ...
  649:  op add *tmp386 :createTerrainMask:y :createTerrainMask:r     for var c in -3 .. 3 descending do
  650:  op shl *tmp384 :createTerrainMask:result 1                   result = (result << 1) | isBlocked(x + c, y + r);
  651:  op add :isBlocked:x :createTerrainMask:x 3                   ...
  652:  set :isBlocked:y *tmp386                                     ...
  653:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  654:  select type equal type @boulder @air type                    ...
  655:  select :isBlocked:result equal type @air 0 1                 ...
  656:  op or :createTerrainMask:result *tmp384 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  657:  op shl *tmp384 :createTerrainMask:result 1                   ...
  658:  op add :isBlocked:x :createTerrainMask:x 2                   ...
  659:  set :isBlocked:y *tmp386                                     ...
  660:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  661:  select type equal type @boulder @air type                    ...
  662:  select :isBlocked:result equal type @air 0 1                 ...
  663:  op or :createTerrainMask:result *tmp384 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  664:  op shl *tmp384 :createTerrainMask:result 1                   ...
  665:  op add :isBlocked:x :createTerrainMask:x 1                   ...
  666:  set :isBlocked:y *tmp386                                     ...
  667:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  668:  select type equal type @boulder @air type                    ...
  669:  select :isBlocked:result equal type @air 0 1                 ...
  670:  op or :createTerrainMask:result *tmp384 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  671:  op shl *tmp384 :createTerrainMask:result 1                   ...
  672:  set :isBlocked:x :createTerrainMask:x                        ...
  673:  set :isBlocked:y *tmp386                                     ...
  674:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  675:  select type equal type @boulder @air type                    ...
  676:  select :isBlocked:result equal type @air 0 1                 ...
  677:  op or :createTerrainMask:result *tmp384 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  678:  op shl *tmp384 :createTerrainMask:result 1                   ...
  679:  op add :isBlocked:x :createTerrainMask:x -1                  ...
  680:  set :isBlocked:y *tmp386                                     ...
  681:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  682:  select type equal type @boulder @air type                    ...
  683:  select :isBlocked:result equal type @air 0 1                 ...
  684:  op or :createTerrainMask:result *tmp384 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  685:  op shl *tmp384 :createTerrainMask:result 1                   ...
  686:  op add :isBlocked:x :createTerrainMask:x -2                  ...
  687:  set :isBlocked:y *tmp386                                     ...
  688:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  689:  select type equal type @boulder @air type                    ...
  690:  select :isBlocked:result equal type @air 0 1                 ...
  691:  op or :createTerrainMask:result *tmp384 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  692:  op shl *tmp384 :createTerrainMask:result 1                   ...
  693:  op add :isBlocked:x :createTerrainMask:x -3                  ...
  694:  set :isBlocked:y *tmp386                                     ...
  695:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  696:  select type equal type @boulder @air type                    ...
  697:  select :isBlocked:result equal type @air 0 1                 ...
  698:  op or :createTerrainMask:result *tmp384 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  699:  op sub :createTerrainMask:r :createTerrainMask:r 1           for var r in -3 .. 3 descending do
  700:  jump *label391 greaterThanEq :createTerrainMask:r -3         ...
  701:  set :createTerrainMask*retval :createTerrainMask:result      return result;
  702:  return :createTerrainMask*retaddr                            noinline def createTerrainMask(x, y)
        label *label10                                               noinline def findPossiblePlacement(terrainMask, placementMask, width, height, out x, out y)
  703:  set :findPossiblePlacement:y -3                              for y in -3 .. 3 do
  704:  jump *label300 greaterThan :findPossiblePlacement:y 3        ...
        label *label393                                              ...
  705:  op add *tmp389 :findPossiblePlacement:y 3                    var mask = placementMask << 7 * (y + 3);
  706:  op mul *tmp390 7 *tmp389                                     ...
  707:  op shl :findPossiblePlacement:mask :findPossiblePlacement:pl ...
  708:  set :findPossiblePlacement:x -3                              for x in -3 .. 3 do
  709:  jump *label303 greaterThan :findPossiblePlacement:x 3        ...
        label *label394                                              ...
  710:  op and *tmp392 :findPossiblePlacement:terrainMask :findPossi if (terrainMask & mask) == 0 then return 3 * 8 + y * 7 + x; end;
  711:  jump *label304 notEqual *tmp392 0                            ...
  712:  op mul *tmp395 :findPossiblePlacement:y 7                    ...
  713:  op add *tmp396 24 *tmp395                                    ...
  714:  op add :findPossiblePlacement*retval *tmp396 :findPossiblePl ...
  715:  return :findPossiblePlacement*retaddr                        ...
        label *label304                                              ...
  716:  op sub *tmp398 3 :findPossiblePlacement:width                if x > 3 - width then break; end;
  717:  jump *label303 greaterThan :findPossiblePlacement:x *tmp398  ...
  718:  op shl :findPossiblePlacement:mask :findPossiblePlacement:ma mask <<= 1;
  719:  op add :findPossiblePlacement:x :findPossiblePlacement:x 1   for x in -3 .. 3 do
  720:  jump *label394 lessThanEq :findPossiblePlacement:x 3         ...
        label *label303                                              ...
  721:  op sub *tmp401 3 :findPossiblePlacement:height               if y > 3 - height then break; end;
  722:  jump *label300 greaterThan :findPossiblePlacement:y *tmp401  ...
  723:  op add :findPossiblePlacement:y :findPossiblePlacement:y 1   for y in -3 .. 3 do
  724:  jump *label393 lessThanEq :findPossiblePlacement:y 3         ...
        label *label300                                              ...
  725:  set :findPossiblePlacement*retval -1                         return -1;
  726:  return :findPossiblePlacement*retaddr                        noinline def findPossiblePlacement(terrainMask, placementMask, width, height, out x, out y)
        label *label11                                               def tryPlaceGenerator(centerX, centerY, terrainMask, generatorHorizontal, generatorVertical)
  727:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te var shift = findPossiblePlacement(terrainMask, generatorHorizontal, 4, 2, out c, out r);
  728:  set :findPossiblePlacement:placementMask :tryPlaceGenerator: ...
  729:  set :findPossiblePlacement:width 4                           ...
  730:  set :findPossiblePlacement:height 2                          ...
  731:  setaddr :findPossiblePlacement*retaddr *label311             ...
  732:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label311                                              ...
  733:  jump *label312 lessThan :findPossiblePlacement*retval 0      if shift >= 0 then
  734:  op add *tmp407 :tryPlaceGenerator:centerX 0.5                water2X = centerX + 0.5 + c;
  735:  op add .water2X *tmp407 :findPossiblePlacement:x             ...
  736:  op add *tmp409 :tryPlaceGenerator:centerY 0.5                water2Y = centerY + 0.5 + r;
  737:  op add .water2Y *tmp409 :findPossiblePlacement:y             ...
  738:  op add *tmp411 :tryPlaceGenerator:centerX 2.5                generatorX = centerX + 2.5 + c;
  739:  op add .generatorX *tmp411 :findPossiblePlacement:x          ...
  740:  op add .generatorY *tmp409 :findPossiblePlacement:y          generatorY = centerY + 0.5 + r;
  741:  op shl *tmp415 :tryPlaceGenerator:generatorHorizontal :findP terrainMask |= (generatorHorizontal << shift);
  742:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
  743:  jump *label313 always 0 0                                    if shift >= 0 then
        label *label312                                              ...
  744:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, generatorVertical, 2, 4, out c, out r);
  745:  set :findPossiblePlacement:placementMask :tryPlaceGenerator: ...
  746:  set :findPossiblePlacement:width 2                           ...
  747:  set :findPossiblePlacement:height 4                          ...
  748:  setaddr :findPossiblePlacement*retaddr *label314             ...
  749:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label314                                              ...
  750:  jump *label315 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  751:  set :tryPlaceGenerator*retval false                          ...
  752:  return :tryPlaceGenerator*retaddr                            ...
        label *label315                                              ...
  753:  op add *tmp419 :tryPlaceGenerator:centerX 0.5                water2X = centerX + 0.5 + c;
  754:  op add .water2X *tmp419 :findPossiblePlacement:x             ...
  755:  op add *tmp421 :tryPlaceGenerator:centerY 0.5                water2Y = centerY + 0.5 + r;
  756:  op add .water2Y *tmp421 :findPossiblePlacement:y             ...
  757:  op add .generatorX *tmp419 :findPossiblePlacement:x          generatorX = centerX + 0.5 + c;
  758:  op add *tmp425 :tryPlaceGenerator:centerY 2.5                generatorY = centerY + 2.5 + r;
  759:  op add .generatorY *tmp425 :findPossiblePlacement:y          ...
  760:  op shl *tmp427 :tryPlaceGenerator:generatorVertical :findPos terrainMask |= (generatorVertical << shift);
  761:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
        label *label313                                              if shift >= 0 then
  762:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, 1, 1, 1, out c, out r);
  763:  set :findPossiblePlacement:placementMask 1                   ...
  764:  set :findPossiblePlacement:width 1                           ...
  765:  set :findPossiblePlacement:height 1                          ...
  766:  setaddr :findPossiblePlacement*retaddr *label317             ...
  767:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label317                                              ...
  768:  jump *label318 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  769:  set :tryPlaceGenerator*retval false                          ...
  770:  return :tryPlaceGenerator*retaddr                            ...
        label *label318                                              ...
  771:  op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacem nodeX = centerX + c;
  772:  op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacem nodeY = centerY + r;
  773:  op shl *tmp433 1 :findPossiblePlacement*retval               terrainMask |= (1 << shift);
  774:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
  775:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, 1, 1, 1, out c, out r);
  776:  set :findPossiblePlacement:placementMask 1                   ...
  777:  set :findPossiblePlacement:width 1                           ...
  778:  set :findPossiblePlacement:height 1                          ...
  779:  setaddr :findPossiblePlacement*retaddr *label320             ...
  780:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label320                                              ...
  781:  jump *label321 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  782:  set :tryPlaceGenerator*retval false                          ...
  783:  return :tryPlaceGenerator*retaddr                            ...
        label *label321                                              ...
  784:  op add .panelX :tryPlaceGenerator:centerX :findPossiblePlace panelX = centerX + c;
  785:  op add .panelY :tryPlaceGenerator:centerY :findPossiblePlace panelY = centerY + r;
  786:  op shl *tmp439 1 :findPossiblePlacement*retval               terrainMask |= (1 << shift);
  787:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
  788:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, 1, 1, 1, out c, out r);
  789:  set :findPossiblePlacement:placementMask 1                   ...
  790:  set :findPossiblePlacement:width 1                           ...
  791:  set :findPossiblePlacement:height 1                          ...
  792:  setaddr :findPossiblePlacement*retaddr *label323             ...
  793:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label323                                              ...
  794:  jump *label324 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  795:  set :tryPlaceGenerator*retval false                          ...
  796:  return :tryPlaceGenerator*retaddr                            ...
        label *label324                                              ...
  797:  op add .batteryX :tryPlaceGenerator:centerX :findPossiblePla batteryX = centerX + c;
  798:  op add .batteryY :tryPlaceGenerator:centerY :findPossiblePla batteryY = centerY + r;
  799:  set :tryPlaceGenerator*retval true                           return true;
  800:  return :tryPlaceGenerator*retaddr                            ...
        label *label12                                               noinline def layoutThoriumDrillAtLocation()
  801:  set .panelY -1                                               water1X = water1Y = water2X = water2Y = generatorX = generatorY = panelX = panelY = -1;
  802:  set .panelX -1                                               ...
  803:  set .generatorY -1                                           ...
  804:  set .generatorX -1                                           ...
  805:  set .water2Y -1                                              ...
  806:  set .water2X -1                                              ...
  807:  set .water1Y -1                                              ...
  808:  set .water1X -1                                              ...
  809:  set :createTerrainMask:x .drillX                             var plainTerrainMask = createTerrainMask(drillX, drillY);
  810:  set :createTerrainMask:y .drillY                             ...
  811:  setaddr :createTerrainMask*retaddr *label327                 ...
  812:  call *label9 *invalid :createTerrainMask*retval              ...
        label *label327                                              ...
  813:  op or :layoutThoriumDrillAtLocation:terrainMask :createTerra var terrainMask = plainTerrainMask | createFixedMatrix(
  814:  op or :layoutThoriumDrillAtLocation:cornersMask :layoutThori var cornersMask = terrainMask | createFixedMatrix(
  815:  set :layoutThoriumDrillAtLocation:extractorMask 387          var extractorMask = createFixedMatrix(0b11, 0b11);
  816:  set :findPossiblePlacement:terrainMask :layoutThoriumDrillAt var shift = findPossiblePlacement(cornersMask, extractorMask, 2, 2, out c, out r);
  817:  set :findPossiblePlacement:placementMask 387                 ...
  818:  set :findPossiblePlacement:width 2                           ...
  819:  set :findPossiblePlacement:height 2                          ...
  820:  setaddr :findPossiblePlacement*retaddr *label343             ...
  821:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label343                                              ...
  822:  jump *label344 lessThan :findPossiblePlacement*retval 0      if shift >= 0 then
  823:  op add *tmp488 .drillX 0.5                                   water1X = drillX + 0.5 + c;
  824:  op add .water1X *tmp488 :findPossiblePlacement:x             ...
  825:  op add *tmp490 .drillY 0.5                                   water1Y = drillY + 0.5 + r;
  826:  op add .water1Y *tmp490 :findPossiblePlacement:y             ...
  827:  op shl :layoutThoriumDrillAtLocation:extractorMask :layoutTh extractorMask <<= shift;
  828:  op or :layoutThoriumDrillAtLocation:terrainMask :layoutThori terrainMask |= extractorMask;
        label *label344                                              if shift >= 0 then
  829:  set :layoutThoriumDrillAtLocation:generatorHorizontal 1935   var generatorHorizontal = createFixedMatrix(0b1111, 0b1111);
  830:  set :layoutThoriumDrillAtLocation:generatorVertical 6340995  var generatorVertical = createFixedMatrix(0b11, 0b11, 0b11, 0b11);
  831:  set :tryPlaceGenerator:centerX .drillX                       if tryPlaceGenerator(drillX, drillY, terrainMask, generatorHorizontal, generatorVertical) then return true; end;
  832:  set :tryPlaceGenerator:centerY .drillY                       ...
  833:  set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLoca ...
  834:  set :tryPlaceGenerator:generatorHorizontal 1935              ...
  835:  set :tryPlaceGenerator:generatorVertical 6340995             ...
  836:  setaddr :tryPlaceGenerator*retaddr *label348                 ...
  837:  call *label11 *invalid :tryPlaceGenerator*retval             ...
        label *label348                                              ...
  838:  jump *label349 equal :tryPlaceGenerator*retval false         ...
  839:  set :layoutThoriumDrillAtLocation*retval true                ...
  840:  return :layoutThoriumDrillAtLocation*retaddr                 ...
        label *label349                                              ...
  841:  set :layoutThoriumDrillAtLocation:sx 3                       for var sx in 3, 3, -3, -3; var sy in 3, -3, 3, -3 do
  842:  set :layoutThoriumDrillAtLocation:sy 3                       ...
  843:  setaddr *tmp506 *label354                                    ...
  844:  jump *label351 always 0 0                                    ...
        multilabel *label354                                         ...
  845:  set :layoutThoriumDrillAtLocation:sx 3                       ...
  846:  set :layoutThoriumDrillAtLocation:sy -3                      ...
  847:  setaddr *tmp506 *label355                                    ...
  848:  jump *label351 always 0 0                                    ...
        multilabel *label355                                         ...
  849:  set :layoutThoriumDrillAtLocation:sx -3                      ...
  850:  set :layoutThoriumDrillAtLocation:sy 3                       ...
  851:  setaddr *tmp506 *label356                                    ...
  852:  jump *label351 always 0 0                                    ...
        multilabel *label356                                         ...
  853:  set :layoutThoriumDrillAtLocation:sx -3                      ...
  854:  set :layoutThoriumDrillAtLocation:sy -3                      ...
  855:  setaddr *tmp506 *label357                                    ...
        label *label351                                              ...
  856:  op add :layoutThoriumDrillAtLocation:newX .drillX :layoutTho var newX = drillX + sx;
  857:  op add :layoutThoriumDrillAtLocation:newY .drillY :layoutTho var newY = drillY + sy;
  858:  set :createTerrainMask:x :layoutThoriumDrillAtLocation:newX  var newTerrainMask = createTerrainMask(newX, newY);
  859:  set :createTerrainMask:y :layoutThoriumDrillAtLocation:newY  ...
  860:  setaddr :createTerrainMask*retaddr *label358                 ...
  861:  call *label9 *invalid :createTerrainMask*retval              ...
        label *label358                                              ...
  862:  op sub *tmp510 0 :layoutThoriumDrillAtLocation:sx            var shiftedMask = shiftMask(terrainMask, -sx, -sy);
  863:  op sub *tmp511 0 :layoutThoriumDrillAtLocation:sy            ...
  864:  set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMas ...
  865:  op abs *tmp513 *tmp510 0                                     if abs(shiftX) > 6 or abs(shiftY) > 6 then return 0; end;
  866:  op greaterThan *tmp514 *tmp513 6                             ...
  867:  op abs *tmp515 *tmp511 0                                     ...
  868:  op greaterThan *tmp516 *tmp515 6                             ...
  869:  op or *tmp517 *tmp514 *tmp516                                ...
  870:  jump *label360 equal *tmp517 false                           ...
  871:  set *tmp512 0                                                ...
  872:  jump *label359 always 0 0                                    ...
        label *label360                                              ...
  873:  op mul *tmp519 7 *tmp511                                     var shift = shiftX + 7 * shiftY;
  874:  op add :shiftMask:shift *tmp510 *tmp519                      ...
  875:  jump *label362 lessThanEq :shiftMask:shift 0                 if shift > 0 then
  876:  op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift var clearMask = ((1 << 49) - 1) >> shift;
  877:  op and *tmp524 :layoutThoriumDrillAtLocation:terrainMask :sh mask = (mask & clearMask) << shift;
  878:  op shl :shiftMask:mask *tmp524 :shiftMask:shift              ...
  879:  jump *label363 always 0 0                                    if shift > 0 then
        label *label362                                              ...
  880:  op sub *tmp526 0 :shiftMask:shift                            mask >>= -shift;
  881:  op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrain ...
        label *label363                                              if shift > 0 then
  882:  jump *label364 equal *tmp510 0                               if shiftX != 0 then
  883:  op sub *tmp530 7 *tmp513                                     var keep = 0b1111111 >> (7 - abs(shiftX));          // The bits we need to keep
  884:  op shr :shiftMask:keep 0b1111111 *tmp530                     ...
  885:  jump *label366 lessThanEq *tmp510 0                          if shiftX > 0 then keep <<= 7 - abs(shiftX); end;   // Shift to the proper side
  886:  op shl :shiftMask:keep :shiftMask:keep *tmp530               ...
        label *label366                                              ...
  887:  op shl *tmp536 :shiftMask:keep 7                             keep |= keep << 7;
  888:  op or :shiftMask:keep :shiftMask:keep *tmp536                ...
  889:  op shl *tmp537 :shiftMask:keep 14                            keep |= keep << 14;
  890:  op or :shiftMask:keep :shiftMask:keep *tmp537                ...
  891:  op shl *tmp538 :shiftMask:keep 21                            keep |= keep << 21;
  892:  op or :shiftMask:keep :shiftMask:keep *tmp538                ...
  893:  op and :shiftMask:mask :shiftMask:mask :shiftMask:keep       mask &= keep;
        label *label364                                              if shiftX != 0 then
  894:  set *tmp512 :shiftMask:mask                                  return mask;
        label *label359                                              var shiftedMask = shiftMask(terrainMask, -sx, -sy);
  895:  op or :layoutThoriumDrillAtLocation:combinedMask :createTerr var combinedMask = newTerrainMask | shiftedMask;
  896:  op add *tmp540 .drillX :layoutThoriumDrillAtLocation:sx      if tryPlaceGenerator(drillX + sx, drillY + sy, combinedMask, generatorHorizontal, generatorVertical) then return true; end;
  897:  op add *tmp541 .drillY :layoutThoriumDrillAtLocation:sy      ...
  898:  set :tryPlaceGenerator:centerX *tmp540                       ...
  899:  set :tryPlaceGenerator:centerY *tmp541                       ...
  900:  set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLoca ...
  901:  set :tryPlaceGenerator:generatorHorizontal :layoutThoriumDri ...
  902:  set :tryPlaceGenerator:generatorVertical :layoutThoriumDrill ...
  903:  setaddr :tryPlaceGenerator*retaddr *label368                 ...
  904:  call *label11 *invalid :tryPlaceGenerator*retval             ...
        label *label368                                              ...
  905:  jump *label369 equal :tryPlaceGenerator*retval false         ...
  906:  set :layoutThoriumDrillAtLocation*retval true                ...
  907:  return :layoutThoriumDrillAtLocation*retaddr                 ...
        label *label369                                              ...
  908:  multijump *tmp506 0 0                                        for var sx in 3, 3, -3, -3; var sy in 3, -3, 3, -3 do
        multilabel *label357                                         ...
  909:  set :layoutThoriumDrillAtLocation*retval true                return true;
  910:  return :layoutThoriumDrillAtLocation*retaddr                 noinline def layoutThoriumDrillAtLocation()
        label *label0                                                remote def findDrillLocation(x, y, unit, item, ore, size, limit, out dx, out dy, out capacity)
  911:  set :findDrillLocationLocal:x :findDrillLocation:x           findDrillLocationLocal(x, y, unit, item, ore, size, limit, out dx, out dy, out capacity);
  912:  set :findDrillLocationLocal:y :findDrillLocation:y           ...
  913:  set :findDrillLocationLocal:unit :findDrillLocation:unit     ...
  914:  set :findDrillLocationLocal:item :findDrillLocation:item     ...
  915:  set :findDrillLocationLocal:ore :findDrillLocation:ore       ...
  916:  set :findDrillLocationLocal:size :findDrillLocation:size     ...
  917:  set :findDrillLocationLocal:limit :findDrillLocation:limit   ...
  918:  setaddr :findDrillLocationLocal*retaddr *label372            ...
  919:  call *label8 *invalid :findDrillLocationLocal*retval         ...
        label *label372                                              ...
  920:  set :findDrillLocation:dx :findDrillLocationLocal:dx         ...
  921:  set :findDrillLocation:dy :findDrillLocationLocal:dy         ...
  922:  set :findDrillLocation:capacity :findDrillLocationLocal:capa ...
  923:  set :findDrillLocation*retval :findDrillLocationLocal*retval remote def findDrillLocation(x, y, unit, item, ore, size, limit, out dx, out dy, out capacity)
  924:  set :findDrillLocation*finished true                         ...
  925:  jump *label15 always 0 0                                     ...
        label *label1                                                remote def layoutThoriumDrill(x, y, unit, limit)
  926:  set :findDrillLocationLocal:x :layoutThoriumDrill:x          if !findDrillLocationLocal(x, y, unit, @thorium, @ore-thorium, 3, limit, out drillX, out drillY) then
  927:  set :findDrillLocationLocal:y :layoutThoriumDrill:y          ...
  928:  set :findDrillLocationLocal:unit :layoutThoriumDrill:unit    ...
  929:  set :findDrillLocationLocal:item @thorium                    ...
  930:  set :findDrillLocationLocal:ore @ore-thorium                 ...
  931:  set :findDrillLocationLocal:size 3                           ...
  932:  set :findDrillLocationLocal:limit :layoutThoriumDrill:limit  ...
  933:  setaddr :findDrillLocationLocal*retaddr *label374            ...
  934:  call *label8 *invalid :findDrillLocationLocal*retval         ...
        label *label374                                              ...
  935:  set .drillX :findDrillLocationLocal:dx                       ...
  936:  set .drillY :findDrillLocationLocal:dy                       ...
  937:  jump *label375 notEqual :findDrillLocationLocal*retval false ...
  938:  set :layoutThoriumDrill*retval false                         return false;
  939:  jump *label373 always 0 0                                    ...
        label *label375                                              if !findDrillLocationLocal(x, y, unit, @thorium, @ore-thorium, 3, limit, out drillX, out drillY) then
  940:  setaddr :layoutThoriumDrillAtLocation*retaddr *label377      layoutThoriumDrillAtLocation();
  941:  call *label12 *invalid :layoutThoriumDrillAtLocation*retval  ...
        label *label377                                              ...
  942:  set :layoutThoriumDrill*retval :layoutThoriumDrillAtLocation remote def layoutThoriumDrill(x, y, unit, limit)
        label *label373                                              ...
  943:  set :layoutThoriumDrill*finished true                        ...
  944:  jump *label15 always 0 0                                     ...


Performance: parsed in 578 ms, compiled in 478 ms, optimized in 2,072 ms, run in 5 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (6 steps):
The program didn't generate any output.
Execution exception at instruction 37: wait 1e12:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
