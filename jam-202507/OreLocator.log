  2017 instructions before optimizations.
   100 instructions eliminated by Temp Variables Elimination (2 iterations).
   179 instructions eliminated by Dead Code Elimination (7 iterations).
C:\Home\golem\jam-202507\OreLocator.mnd:22:26 Variable 'maxAngle' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:22:36 Variable 'bestSpot' is not used.
     5 instructions eliminated by Jump Normalization (2 passes, 6 iterations).
    91 instructions eliminated by Jump Optimization (6 iterations).
    94 instructions eliminated by Single Step Elimination (3 passes, 9 iterations).
     7 instructions modified by Expression Optimization (3 iterations).
   314 instructions eliminated by Data Flow Optimization (4 passes, 13 iterations).
     2 loops improved by Loop Hoisting.
     2 instructions eliminated by Loop Optimization (3 iterations).
     7 loops improved by Loop Optimization.
     8 instructions eliminated by Function Inlining (5 iterations).
     2 function calls inlined by Function Inlining.
     5 instructions eliminated by Jump Straightening (2 passes, 6 iterations).
    11 instructions updated by JumpThreading.
    59 instructions eliminated by Unreachable Code Elimination (3 iterations).
   311 instructions eliminated by Print Merging.
   849 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at line 39:5                        size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit    39062.5, efficiency  39062.500
  ! Replicate loop condition at line 39:5                        size    +1, benefit     1562.5, efficiency   1562.500
  ! Replicate loop condition at line 39:5                        size    +1, benefit      975.0, efficiency    975.000
  ! Unroll loop at line 360:5                                    size   +63, benefit    13650.0, efficiency    216.667
  ! Unroll loop at line 361:9                                    size   +45, benefit   341250.0, efficiency   7583.333
  ! Unroll iteration loop at line 570:5                          size   +89, benefit       28.5, efficiency      0.320
  ! Inline function 'computeRowValues' defined at line 66:1      size  +295, benefit    39062.5, efficiency    132.415
  * Inline function 'isBlocked' defined at line 344:1            size    -1, benefit    97500.0, efficiency   Infinity (-5 instructions)
    Inline function 'shiftMask' defined at line 371:1            size    -1, benefit      168.8, efficiency   Infinity
  ! Inline function 'tryPlaceGenerator' defined at line 444:1    size   +59, benefit      214.5, efficiency      3.636
  ! Inline function call at line 126:14                          size   +74, benefit     7812.5, efficiency    105.574
  ! Inline function call at line 127:14                          size   +74, benefit     7812.5, efficiency    105.574
  ! Inline function call at line 128:14                          size   +74, benefit     7812.5, efficiency    105.574
  ! Inline function call at line 129:14                          size   +74, benefit     7812.5, efficiency    105.574
  ! Inline function call at line 130:14                          size   +74, benefit     7812.5, efficiency    105.574
  ! Inline function call at line 362:38                          size    +3, benefit    97500.0, efficiency  32500.000
  ! Inline function call at line 567:8                           size   +60, benefit        8.3, efficiency      0.138
  ! Inline function call at line 578:27                          size   +30, benefit      168.8, efficiency      5.625
  ! Inline function call at line 589:12                          size   +60, benefit      206.3, efficiency      3.438

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at line 39:5                        size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit    39062.5, efficiency  39062.500
  ! Replicate loop condition at line 39:5                        size    +1, benefit     1562.5, efficiency   1562.500
  ! Replicate loop condition at line 39:5                        size    +1, benefit      975.0, efficiency    975.000
  ! Unroll loop at line 360:5                                    size   +69, benefit    13650.0, efficiency    197.826
  ! Unroll loop at line 361:9                                    size   +51, benefit   341250.0, efficiency   6691.176
  ! Unroll iteration loop at line 570:5                          size   +89, benefit       28.5, efficiency      0.320
  ! Inline function 'computeRowValues' defined at line 66:1      size  +295, benefit    39062.5, efficiency    132.415
  * Inline function 'shiftMask' defined at line 371:1            size    -1, benefit      168.8, efficiency   Infinity (-7 instructions)
  ! Inline function 'tryPlaceGenerator' defined at line 444:1    size   +59, benefit      214.5, efficiency      3.636
  ! Inline function call at line 126:14                          size   +74, benefit     7812.5, efficiency    105.574
  ! Inline function call at line 127:14                          size   +74, benefit     7812.5, efficiency    105.574
  ! Inline function call at line 128:14                          size   +74, benefit     7812.5, efficiency    105.574
  ! Inline function call at line 129:14                          size   +74, benefit     7812.5, efficiency    105.574
  ! Inline function call at line 130:14                          size   +74, benefit     7812.5, efficiency    105.574
  ! Inline function call at line 567:8                           size   +60, benefit        8.3, efficiency      0.138
  ! Inline function call at line 578:27                          size   +30, benefit      168.8, efficiency      5.625
  ! Inline function call at line 589:12                          size   +60, benefit      206.3, efficiency      3.438

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at line 39:5                        size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit    39062.5, efficiency  39062.500
  ! Replicate loop condition at line 39:5                        size    +1, benefit     1562.5, efficiency   1562.500
  ! Replicate loop condition at line 39:5                        size    +1, benefit      975.0, efficiency    975.000
  ! Unroll loop at line 360:5                                    size   +69, benefit    13650.0, efficiency    197.826
  ! Unroll loop at line 361:9                                    size   +51, benefit   341250.0, efficiency   6691.176
  ! Unroll iteration loop at line 570:5                          size  +193, benefit       28.5, efficiency      0.148
  ! Inline function 'computeRowValues' defined at line 66:1      size  +295, benefit    39062.5, efficiency    132.415
  ! Inline function 'tryPlaceGenerator' defined at line 444:1    size   +59, benefit      214.5, efficiency      3.636
  ! Inline function call at line 126:14                          size   +74, benefit     7812.5, efficiency    105.574
  ! Inline function call at line 127:14                          size   +74, benefit     7812.5, efficiency    105.574
  ! Inline function call at line 128:14                          size   +74, benefit     7812.5, efficiency    105.574
  ! Inline function call at line 129:14                          size   +74, benefit     7812.5, efficiency    105.574
  ! Inline function call at line 130:14                          size   +74, benefit     7812.5, efficiency    105.574
  ! Inline function call at line 567:8                           size   +60, benefit        8.3, efficiency      0.138
  ! Inline function call at line 589:12                          size   +60, benefit      206.3, efficiency      3.438

Pass 2: speed optimization selection (cost limit 0):
  ! Replicate loop condition at line 39:5                        size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit    39062.5, efficiency  39062.500
  ! Replicate loop condition at line 39:5                        size    +1, benefit     1562.5, efficiency   1562.500
  ! Replicate loop condition at line 39:5                        size    +1, benefit      975.0, efficiency    975.000
  ! Unroll loop at line 360:5                                    size   +57, benefit    13650.0, efficiency    239.474
  ! Unroll loop at line 361:9                                    size   +32, benefit   341250.0, efficiency  10664.063
  ! Unroll iteration loop at line 570:5                          size  +189, benefit       28.5, efficiency      0.151
  ! Inline function 'computeRowValues' defined at line 66:1      size  +291, benefit    39062.5, efficiency    134.235
  ! Inline function 'tryPlaceGenerator' defined at line 444:1    size   +59, benefit      214.5, efficiency      3.636
  ! Inline function call at line 126:14                          size   +73, benefit     7812.5, efficiency    107.021
  ! Inline function call at line 127:14                          size   +73, benefit     7812.5, efficiency    107.021
  ! Inline function call at line 128:14                          size   +73, benefit     7812.5, efficiency    107.021
  ! Inline function call at line 129:14                          size   +73, benefit     7812.5, efficiency    107.021
  ! Inline function call at line 130:14                          size   +73, benefit     7812.5, efficiency    107.021
  ! Inline function call at line 567:8                           size   +60, benefit        8.3, efficiency      0.138
  ! Inline function call at line 589:12                          size   +60, benefit      206.3, efficiency      3.438

Pass 3: speed optimization selection (cost limit 0):
  ! Replicate loop condition at line 39:5                        size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit        6.3, efficiency      6.250
  ! Replicate loop condition at line 39:5                        size    +1, benefit    39062.5, efficiency  39062.500
  ! Replicate loop condition at line 39:5                        size    +1, benefit     1562.5, efficiency   1562.500
  ! Replicate loop condition at line 39:5                        size    +1, benefit      975.0, efficiency    975.000
  ! Unroll loop at line 360:5                                    size   +57, benefit    13650.0, efficiency    239.474
  ! Unroll loop at line 361:9                                    size   +32, benefit   341250.0, efficiency  10664.063
  ! Unroll iteration loop at line 570:5                          size  +189, benefit       28.5, efficiency      0.151
  ! Inline function 'computeRowValues' defined at line 66:1      size  +291, benefit    39062.5, efficiency    134.235
  ! Inline function 'tryPlaceGenerator' defined at line 444:1    size   +59, benefit      214.5, efficiency      3.636
  ! Inline function call at line 126:14                          size   +73, benefit     7812.5, efficiency    107.021
  ! Inline function call at line 127:14                          size   +73, benefit     7812.5, efficiency    107.021
  ! Inline function call at line 128:14                          size   +73, benefit     7812.5, efficiency    107.021
  ! Inline function call at line 129:14                          size   +73, benefit     7812.5, efficiency    107.021
  ! Inline function call at line 130:14                          size   +73, benefit     7812.5, efficiency    107.021
  ! Inline function call at line 567:8                           size   +60, benefit        8.3, efficiency      0.138
  ! Inline function call at line 589:12                          size   +60, benefit      206.3, efficiency      3.438

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-123 instructions):
 
    53 print :dy
    54 print "."
    55 print "\n"
-    * set *tmp7 null
    56 jump *label23 always
    57 label *label22
    58 set .drillX 129
 
    85 label *label29
    86 ucontrol build :buildAt:x :buildAt:y :buildAt:block 0 null
    87 wait 0.1
-    * set *tmp9 null
    88 jump *label28 always
    89 label *label27
-    * set *tmp9 null
    90 label *label28
    91 label *label26
    92 set :buildAt.1:x .water1X
 
   114 label *label37
   115 ucontrol build :buildAt.1:x :buildAt.1:y :buildAt.1:block 0 null
   116 wait 0.1
-    * set *tmp16 null
   117 jump *label36 always
   118 label *label35
-    * set *tmp16 null
   119 label *label36
   120 label *label34
   121 set :buildAt.2:x .water2X
 
   143 label *label45
   144 ucontrol build :buildAt.2:x :buildAt.2:y :buildAt.2:block 0 null
   145 wait 0.1
-    * set *tmp23 null
   146 jump *label44 always
   147 label *label43
-    * set *tmp23 null
   148 label *label44
   149 label *label42
   150 set :buildAt.3:x .generatorX
 
   172 label *label53
   173 ucontrol build :buildAt.3:x :buildAt.3:y :buildAt.3:block 0 null
   174 wait 0.1
-    * set *tmp30 null
   175 jump *label52 always
   176 label *label51
-    * set *tmp30 null
   177 label *label52
   178 label *label50
   179 set :buildAt.4:x .nodeX
 
   201 label *label61
   202 ucontrol build :buildAt.4:x :buildAt.4:y :buildAt.4:block 0 null
   203 wait 0.1
-    * set *tmp37 null
   204 jump *label60 always
   205 label *label59
-    * set *tmp37 null
   206 label *label60
   207 label *label58
   208 set :buildAt.5:x .panelX
 
   230 label *label69
   231 ucontrol build :buildAt.5:x :buildAt.5:y :buildAt.5:block 0 null
   232 wait 0.1
-    * set *tmp44 null
   233 jump *label68 always
   234 label *label67
-    * set *tmp44 null
   235 label *label68
   236 label *label66
-    * set *tmp7 null
   237 label *label23
   238 set :debugStop:format "Finished."
   239 jump *label75 equal .debug false
 
   246 sensor *tmp53 switch1 @enabled
   247 jump *label80 notEqual *tmp53 false
   248 label *label82
-    * set *tmp51 null
   249 jump *label79 always
   250 label *label78
-    * set *tmp51 null
   251 label *label79
   252 label *label77
   253 end
-    * set *tmp50 null
   254 jump *label76 always
   255 label *label75
-    * set *tmp50 null
   256 label *label76
   257 label *label74
   258 set *signature "ed92997f66c3d80:v1"
 
   340 print " "
   341 print *tmp68
   342 print "\n"
-    * set *tmp69 null
   343 jump *label92 always
   344 label *label91
-    * set *tmp69 null
   345 label *label92
   346 label *label90
   347 jump *label93 equal :computeRowValues:large false
 
   463 jump *label109 equal *tmp118 false
   464 set *tmp91 false
   465 jump *label99 always
-    * set *tmp119 null
   466 jump *label110 always
   467 label *label109
-    * set *tmp119 null
   468 label *label110
   469 op sub *tmp120 :locateOreAway:x .coreX
   470 op abs *tmp121 *tmp120
 
   501 jump *label119 equal *tmp142 false
   502 set *tmp132 true
   503 jump *label115 always
-    * set *tmp143 null
   504 jump *label120 always
   505 label *label119
-    * set *tmp143 null
   506 label *label120
   507 op add :visited:index :visited:index 3
   508 label *label117
 
   530 label *label113
   531 set *tmp131 null
   532 label *label114
-    * set *tmp129 *tmp131
   533 jump *label112 always
   534 label *label111
-    * set *tmp129 null
   535 label *label112
   536 label *label101
   537 jump *label100 always
 
   547 op greaterThan *tmp150 :findDrillLocationLocal:capacity 0
   548 set :findDrillLocationLocal*retval *tmp150
   549 jump *label95 always
-    * set *tmp149 null
   550 jump *label124 always
   551 label *label123
-    * set *tmp149 null
   552 label *label124
   553 set :moveTo.14:x :findDrillLocationLocal:oreX
   554 set :moveTo.14:y :findDrillLocationLocal:oreY
 
   670 label *label145
   671 set *tmp179 null
   672 label *label146
-    * set *tmp177 *tmp179
   673 jump *label144 always
   674 label *label143
-    * set *tmp177 null
   675 label *label144
   676 print "\n"
   677 label *label142
 
   704 label *label150
   705 set *tmp184 null
   706 label *label151
-    * set *tmp182 *tmp184
   707 jump *label149 always
   708 label *label148
-    * set *tmp182 null
   709 label *label149
   710 print "\n"
   711 label *label147
 
   738 label *label155
   739 set *tmp189 null
   740 label *label156
-    * set *tmp187 *tmp189
   741 jump *label154 always
   742 label *label153
-    * set *tmp187 null
   743 label *label154
   744 print "\n"
   745 label *label152
 
   786 label *label161
   787 set *tmp196 null
   788 label *label162
-    * set *tmp194 *tmp196
   789 jump *label160 always
   790 label *label159
-    * set *tmp194 null
   791 label *label160
   792 print "\n"
   793 label *label158
 
   820 label *label166
   821 set *tmp201 null
   822 label *label167
-    * set *tmp199 *tmp201
   823 jump *label165 always
   824 label *label164
-    * set *tmp199 null
   825 label *label165
   826 print "\n"
   827 label *label163
 
   854 label *label171
   855 set *tmp206 null
   856 label *label172
-    * set *tmp204 *tmp206
   857 jump *label170 always
   858 label *label169
-    * set *tmp204 null
   859 label *label170
   860 print "\n"
   861 label *label168
 
   902 label *label177
   903 set *tmp213 null
   904 label *label178
-    * set *tmp211 *tmp213
   905 jump *label176 always
   906 label *label175
-    * set *tmp211 null
   907 label *label176
   908 print "\n"
   909 label *label174
 
   936 label *label182
   937 set *tmp218 null
   938 label *label183
-    * set *tmp216 *tmp218
   939 jump *label181 always
   940 label *label180
-    * set *tmp216 null
   941 label *label181
   942 print "\n"
   943 label *label179
 
   970 label *label187
   971 set *tmp223 null
   972 label *label188
-    * set *tmp221 *tmp223
   973 jump *label186 always
   974 label *label185
-    * set *tmp221 null
   975 label *label186
   976 print "\n"
   977 label *label184
 
   996 print " "
   997 print *tmp225
   998 print "\n"
-    * set *tmp167 null
   999 jump *label140 always
  1000 label *label139
  1001 op add *tmp226 :findBestPosition:y1 :findBestPosition:y2
 
  1038 label *label193
  1039 set *tmp234 null
  1040 label *label194
-    * set *tmp232 *tmp234
  1041 jump *label192 always
  1042 label *label191
-    * set *tmp232 null
  1043 label *label192
  1044 print "\n"
  1045 label *label190
 
  1072 label *label198
  1073 set *tmp239 null
  1074 label *label199
-    * set *tmp237 *tmp239
  1075 jump *label197 always
  1076 label *label196
-    * set *tmp237 null
  1077 label *label197
  1078 print "\n"
  1079 label *label195
 
  1106 label *label203
  1107 set *tmp244 null
  1108 label *label204
-    * set *tmp242 *tmp244
  1109 jump *label202 always
  1110 label *label201
-    * set *tmp242 null
  1111 label *label202
  1112 print "\n"
  1113 label *label200
 
  1140 label *label208
  1141 set *tmp249 null
  1142 label *label209
-    * set *tmp247 *tmp249
  1143 jump *label207 always
  1144 label *label206
-    * set *tmp247 null
  1145 label *label207
  1146 print "\n"
  1147 label *label205
 
  1178 label *label214
  1179 set *tmp254 null
  1180 label *label215
-    * set *tmp252 *tmp254
  1181 jump *label213 always
  1182 label *label212
-    * set *tmp252 null
  1183 label *label213
  1184 print "\n"
  1185 label *label211
 
  1212 label *label219
  1213 set *tmp259 null
  1214 label *label220
-    * set *tmp257 *tmp259
  1215 jump *label218 always
  1216 label *label217
-    * set *tmp257 null
  1217 label *label218
  1218 print "\n"
  1219 label *label216
 
  1246 label *label224
  1247 set *tmp264 null
  1248 label *label225
-    * set *tmp262 *tmp264
  1249 jump *label223 always
  1250 label *label222
-    * set *tmp262 null
  1251 label *label223
  1252 print "\n"
  1253 label *label221
 
  1280 label *label229
  1281 set *tmp269 null
  1282 label *label230
-    * set *tmp267 *tmp269
  1283 jump *label228 always
  1284 label *label227
-    * set *tmp267 null
  1285 label *label228
  1286 print "\n"
  1287 label *label226
 
  1318 label *label235
  1319 set *tmp274 null
  1320 label *label236
-    * set *tmp272 *tmp274
  1321 jump *label234 always
  1322 label *label233
-    * set *tmp272 null
  1323 label *label234
  1324 print "\n"
  1325 label *label232
 
  1352 label *label240
  1353 set *tmp279 null
  1354 label *label241
-    * set *tmp277 *tmp279
  1355 jump *label239 always
  1356 label *label238
-    * set *tmp277 null
  1357 label *label239
  1358 print "\n"
  1359 label *label237
 
  1386 label *label245
  1387 set *tmp284 null
  1388 label *label246
-    * set *tmp282 *tmp284
  1389 jump *label244 always
  1390 label *label243
-    * set *tmp282 null
  1391 label *label244
  1392 print "\n"
  1393 label *label242
 
  1420 label *label250
  1421 set *tmp289 null
  1422 label *label251
-    * set *tmp287 *tmp289
  1423 jump *label249 always
  1424 label *label248
-    * set *tmp287 null
  1425 label *label249
  1426 print "\n"
  1427 label *label247
 
  1458 label *label256
  1459 set *tmp294 null
  1460 label *label257
-    * set *tmp292 *tmp294
  1461 jump *label255 always
  1462 label *label254
-    * set *tmp292 null
  1463 label *label255
  1464 print "\n"
  1465 label *label253
 
  1492 label *label261
  1493 set *tmp299 null
  1494 label *label262
-    * set *tmp297 *tmp299
  1495 jump *label260 always
  1496 label *label259
-    * set *tmp297 null
  1497 label *label260
  1498 print "\n"
  1499 label *label258
 
  1526 label *label266
  1527 set *tmp304 null
  1528 label *label267
-    * set *tmp302 *tmp304
  1529 jump *label265 always
  1530 label *label264
-    * set *tmp302 null
  1531 label *label265
  1532 print "\n"
  1533 label *label263
 
  1560 label *label271
  1561 set *tmp309 null
  1562 label *label272
-    * set *tmp307 *tmp309
  1563 jump *label270 always
  1564 label *label269
-    * set *tmp307 null
  1565 label *label270
  1566 print "\n"
  1567 label *label268
  1568 label *label252
-    * set *tmp167 null
  1569 label *label140
  1570 jump *label274 equal .debug false
  1571 printflush message1
 
  1575 sensor *tmp312 switch1 @enabled
  1576 jump *label276 notEqual *tmp312 false
  1577 label *label278
-    * set *tmp310 null
  1578 jump *label275 always
  1579 label *label274
-    * set *tmp310 null
  1580 label *label275
  1581 label *label273
  1582 op mul *tmp313 :findBestPosition:best 255
 
  1611 sensor *tmp316 switch1 @enabled
  1612 jump *label282 notEqual *tmp316 false
  1613 label *label284
-    * set *tmp314 null
  1614 jump *label281 always
  1615 label *label280
-    * set *tmp314 null
  1616 label *label281
  1617 label *label279
  1618 op greaterThan *tmp317 :findDrillLocationLocal:score :findDrillLocationLocal:capacity
 
  1633 label *label287
  1634 set *tmp322 null
  1635 label *label288
-    * set *tmp318 *tmp322
  1636 jump *label286 always
  1637 label *label285
-    * set *tmp318 null
  1638 label *label286
  1639 op greaterThan *tmp323 :findDrillLocationLocal:score :findDrillLocationLocal:best
  1640 jump *label289 equal *tmp323 false
 
  1643 op add *tmp326 :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1644 set :findDrillLocationLocal:bestY *tmp326
  1645 set :findDrillLocationLocal:best :findDrillLocationLocal:score
-    * set *tmp324 :findDrillLocationLocal:best
  1646 jump *label290 always
  1647 label *label289
-    * set *tmp324 null
  1648 label *label290
  1649 op lessThanEq *tmp327 :findDrillLocationLocal:score :findDrillLocationLocal:last
  1650 jump *label291 equal *tmp327 false
  1651 jump *label132 always
-    * set *tmp328 null
  1652 jump *label292 always
  1653 label *label291
-    * set *tmp328 null
  1654 label *label292
  1655 set :findDrillLocationLocal:last :findDrillLocationLocal:score
  1656 op mul *tmp329 :findDrillLocationLocal:diffX 1.1
 
  1675 op lessThan *tmp342 *tmp341 7
  1676 jump *label295 equal *tmp342 false
  1677 jump *label132 always
-    * set *tmp343 null
  1678 jump *label296 always
  1679 label *label295
-    * set *tmp343 null
  1680 label *label296
  1681 label *label131
  1682 jump *label130 always
 
  1690 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
  1691 set *tmp348 :findDrillLocationLocal:count
  1692 write :findDrillLocationLocal:bestY bank1 *tmp348
-    * set *tmp350 .locations
  1693 op add .locations .locations 1
  1694 set :debugPrintSpot:text ""
  1695 op sub *tmp351 @second .start
 
  1827 jump *label319 equal *tmp375 false
  1828 set :shiftMask*retval 0
  1829 jump *label318 always
-    * set *tmp376 null
  1830 jump *label320 always
  1831 label *label319
-    * set *tmp376 null
  1832 label *label320
  1833 op mul *tmp377 7 :shiftMask:shiftY
  1834 op add *tmp378 :shiftMask:shiftX *tmp377
 
  1840 op and *tmp382 :shiftMask:mask :shiftMask:clearMask
  1841 op shl *tmp383 *tmp382 :shiftMask:shift
  1842 set :shiftMask:mask *tmp383
-    * set *tmp380 :shiftMask:mask
  1843 jump *label322 always
  1844 label *label321
  1845 op sub *tmp384 0 :shiftMask:shift
  1846 op shr :shiftMask:mask :shiftMask:mask *tmp384
-    * set *tmp380 :shiftMask:mask
  1847 label *label322
  1848 op notEqual *tmp385 :shiftMask:shiftX 0
  1849 jump *label323 equal *tmp385 false
 
  1856 op abs *tmp392 :shiftMask:shiftX
  1857 op sub *tmp393 7 *tmp392
  1858 op shl :shiftMask:keep :shiftMask:keep *tmp393
-    * set *tmp391 :shiftMask:keep
  1859 jump *label326 always
  1860 label *label325
-    * set *tmp391 null
  1861 label *label326
  1862 op shl *tmp394 :shiftMask:keep 7
  1863 op or :shiftMask:keep :shiftMask:keep *tmp394
 
  1866 op shl *tmp396 :shiftMask:keep 21
  1867 op or :shiftMask:keep :shiftMask:keep *tmp396
  1868 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
-    * set *tmp386 :shiftMask:mask
  1869 jump *label324 always
  1870 label *label323
-    * set *tmp386 null
  1871 label *label324
  1872 set :shiftMask*retval :shiftMask:mask
  1873 jump *label318 always
 
  1894 op add *tmp405 *tmp404 :findPossiblePlacement:x
  1895 set :findPossiblePlacement*retval *tmp405
  1896 jump *label327 always
-    * set *tmp402 null
  1897 jump *label335 always
  1898 label *label334
-    * set *tmp402 null
  1899 label *label335
  1900 op sub *tmp406 3 :findPossiblePlacement:width
  1901 op greaterThan *tmp407 :findPossiblePlacement:x *tmp406
  1902 jump *label336 equal *tmp407 false
  1903 jump *label333 always
-    * set *tmp408 null
  1904 jump *label337 always
  1905 label *label336
-    * set *tmp408 null
  1906 label *label337
  1907 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
  1908 label *label332
 
  1913 op greaterThan *tmp410 :findPossiblePlacement:y *tmp409
  1914 jump *label338 equal *tmp410 false
  1915 jump *label330 always
-    * set *tmp411 null
  1916 jump *label339 always
  1917 label *label338
-    * set *tmp411 null
  1918 label *label339
  1919 label *label329
  1920 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
 
  1954 set .generatorY *tmp422
  1955 op shl *tmp423 :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:shift
  1956 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp423
-    * set *tmp414 :tryPlaceGenerator:terrainMask
  1957 jump *label343 always
  1958 label *label342
  1959 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1971 jump *label345 equal *tmp425 false
  1972 set :tryPlaceGenerator*retval false
  1973 jump *label340 always
-    * set *tmp426 null
  1974 jump *label346 always
  1975 label *label345
-    * set *tmp426 null
  1976 label *label346
  1977 op add *tmp427 :tryPlaceGenerator:centerX 0.5
  1978 op add *tmp428 *tmp427 :tryPlaceGenerator:c
 
  1988 set .generatorY *tmp434
  1989 op shl *tmp435 :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:shift
  1990 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp435
-    * set *tmp414 :tryPlaceGenerator:terrainMask
  1991 label *label343
  1992 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
  1993 set :findPossiblePlacement:placementMask 1
 
  2004 jump *label348 equal *tmp437 false
  2005 set :tryPlaceGenerator*retval false
  2006 jump *label340 always
-    * set *tmp438 null
  2007 jump *label349 always
  2008 label *label348
-    * set *tmp438 null
  2009 label *label349
  2010 op add *tmp439 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
  2011 set .nodeX *tmp439
 
  2028 jump *label351 equal *tmp443 false
  2029 set :tryPlaceGenerator*retval false
  2030 jump *label340 always
-    * set *tmp444 null
  2031 jump *label352 always
  2032 label *label351
-    * set *tmp444 null
  2033 label *label352
  2034 op add *tmp445 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
  2035 set .panelX *tmp445
 
  2134 set .water1Y *tmp488
  2135 op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:shift
  2136 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
-    * set *tmp484 :layoutThoriumDrillAtLocation:terrainMask
  2137 jump *label360 always
  2138 label *label359
-    * set *tmp484 null
  2139 label *label360
  2140 set :createFixedMatrix.3:row0 0b1111
  2141 set :createFixedMatrix.3:row1 0b1111
 
  2171 jump *label364 equal *tmp501 false
  2172 set :layoutThoriumDrillAtLocation*retval true
  2173 jump *label353 always
-    * set *tmp502 null
  2174 jump *label365 always
  2175 label *label364
-    * set *tmp502 null
  2176 label *label365
  2177 set :layoutThoriumDrillAtLocation:sx 3
  2178 set :layoutThoriumDrillAtLocation:sy 3
 
  2229 jump *label376 equal *tmp512 false
  2230 set :layoutThoriumDrillAtLocation*retval true
  2231 jump *label353 always
-    * set *tmp513 null
  2232 jump *label377 always
  2233 label *label376
-    * set *tmp513 null
  2234 label *label377
  2235 label *label367
  2236 multijump *tmp503 0 0 (m:marker0)
 
  2259 jump *label380 equal *tmp514 false
  2260 set :layoutThoriumDrill*retval false
  2261 jump *label378 always
-    * set *tmp515 null
  2262 jump *label381 always
  2263 label *label380
-    * set *tmp515 null
  2264 label *label381
  2265 setaddr :layoutThoriumDrillAtLocation*retaddr *label382 (h:*label382)
  2266 call *label12 *invalid :layoutThoriumDrillAtLocation*retval (m:*label382) (h:*label382)

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-54 instructions):
 
   525 label *label121
   526 set *tmp145 null
   527 label *label122
-    * set *tmp131 *tmp145
   528 jump *label114 always
   529 label *label113
-    * set *tmp131 null
   530 label *label114
   531 jump *label112 always
   532 label *label111
 
   663 set :findDrillLocationLocal:diffX :updatePosition:dx
   664 set :findDrillLocationLocal:diffY :updatePosition:dy
   665 set :findBestPosition:best :updatePosition:value
-    * set *tmp179 :findBestPosition:best
   666 jump *label146 always
   667 label *label145
-    * set *tmp179 null
   668 label *label146
   669 jump *label144 always
   670 label *label143
 
   695 set :findDrillLocationLocal:diffX :updatePosition.1:dx
   696 set :findDrillLocationLocal:diffY :updatePosition.1:dy
   697 set :findBestPosition:best :updatePosition.1:value
-    * set *tmp184 :findBestPosition:best
   698 jump *label151 always
   699 label *label150
-    * set *tmp184 null
   700 label *label151
   701 jump *label149 always
   702 label *label148
 
   727 set :findDrillLocationLocal:diffX :updatePosition.2:dx
   728 set :findDrillLocationLocal:diffY :updatePosition.2:dy
   729 set :findBestPosition:best :updatePosition.2:value
-    * set *tmp189 :findBestPosition:best
   730 jump *label156 always
   731 label *label155
-    * set *tmp189 null
   732 label *label156
   733 jump *label154 always
   734 label *label153
 
   773 set :findDrillLocationLocal:diffX :updatePosition.3:dx
   774 set :findDrillLocationLocal:diffY :updatePosition.3:dy
   775 set :findBestPosition:best :updatePosition.3:value
-    * set *tmp196 :findBestPosition:best
   776 jump *label162 always
   777 label *label161
-    * set *tmp196 null
   778 label *label162
   779 jump *label160 always
   780 label *label159
 
   805 set :findDrillLocationLocal:diffX :updatePosition.4:dx
   806 set :findDrillLocationLocal:diffY :updatePosition.4:dy
   807 set :findBestPosition:best :updatePosition.4:value
-    * set *tmp201 :findBestPosition:best
   808 jump *label167 always
   809 label *label166
-    * set *tmp201 null
   810 label *label167
   811 jump *label165 always
   812 label *label164
 
   837 set :findDrillLocationLocal:diffX :updatePosition.5:dx
   838 set :findDrillLocationLocal:diffY :updatePosition.5:dy
   839 set :findBestPosition:best :updatePosition.5:value
-    * set *tmp206 :findBestPosition:best
   840 jump *label172 always
   841 label *label171
-    * set *tmp206 null
   842 label *label172
   843 jump *label170 always
   844 label *label169
 
   883 set :findDrillLocationLocal:diffX :updatePosition.6:dx
   884 set :findDrillLocationLocal:diffY :updatePosition.6:dy
   885 set :findBestPosition:best :updatePosition.6:value
-    * set *tmp213 :findBestPosition:best
   886 jump *label178 always
   887 label *label177
-    * set *tmp213 null
   888 label *label178
   889 jump *label176 always
   890 label *label175
 
   915 set :findDrillLocationLocal:diffX :updatePosition.7:dx
   916 set :findDrillLocationLocal:diffY :updatePosition.7:dy
   917 set :findBestPosition:best :updatePosition.7:value
-    * set *tmp218 :findBestPosition:best
   918 jump *label183 always
   919 label *label182
-    * set *tmp218 null
   920 label *label183
   921 jump *label181 always
   922 label *label180
 
   947 set :findDrillLocationLocal:diffX :updatePosition.8:dx
   948 set :findDrillLocationLocal:diffY :updatePosition.8:dy
   949 set :findBestPosition:best :updatePosition.8:value
-    * set *tmp223 :findBestPosition:best
   950 jump *label188 always
   951 label *label187
-    * set *tmp223 null
   952 label *label188
   953 jump *label186 always
   954 label *label185
 
  1013 set :findDrillLocationLocal:diffX :updatePosition.9:dx
  1014 set :findDrillLocationLocal:diffY :updatePosition.9:dy
  1015 set :findBestPosition:best :updatePosition.9:value
-    * set *tmp234 :findBestPosition:best
  1016 jump *label194 always
  1017 label *label193
-    * set *tmp234 null
  1018 label *label194
  1019 jump *label192 always
  1020 label *label191
 
  1045 set :findDrillLocationLocal:diffX :updatePosition.10:dx
  1046 set :findDrillLocationLocal:diffY :updatePosition.10:dy
  1047 set :findBestPosition:best :updatePosition.10:value
-    * set *tmp239 :findBestPosition:best
  1048 jump *label199 always
  1049 label *label198
-    * set *tmp239 null
  1050 label *label199
  1051 jump *label197 always
  1052 label *label196
 
  1077 set :findDrillLocationLocal:diffX :updatePosition.11:dx
  1078 set :findDrillLocationLocal:diffY :updatePosition.11:dy
  1079 set :findBestPosition:best :updatePosition.11:value
-    * set *tmp244 :findBestPosition:best
  1080 jump *label204 always
  1081 label *label203
-    * set *tmp244 null
  1082 label *label204
  1083 jump *label202 always
  1084 label *label201
 
  1109 set :findDrillLocationLocal:diffX :updatePosition.12:dx
  1110 set :findDrillLocationLocal:diffY :updatePosition.12:dy
  1111 set :findBestPosition:best :updatePosition.12:value
-    * set *tmp249 :findBestPosition:best
  1112 jump *label209 always
  1113 label *label208
-    * set *tmp249 null
  1114 label *label209
  1115 jump *label207 always
  1116 label *label206
 
  1145 set :findDrillLocationLocal:diffX :updatePosition.13:dx
  1146 set :findDrillLocationLocal:diffY :updatePosition.13:dy
  1147 set :findBestPosition:best :updatePosition.13:value
-    * set *tmp254 :findBestPosition:best
  1148 jump *label215 always
  1149 label *label214
-    * set *tmp254 null
  1150 label *label215
  1151 jump *label213 always
  1152 label *label212
 
  1177 set :findDrillLocationLocal:diffX :updatePosition.14:dx
  1178 set :findDrillLocationLocal:diffY :updatePosition.14:dy
  1179 set :findBestPosition:best :updatePosition.14:value
-    * set *tmp259 :findBestPosition:best
  1180 jump *label220 always
  1181 label *label219
-    * set *tmp259 null
  1182 label *label220
  1183 jump *label218 always
  1184 label *label217
 
  1209 set :findDrillLocationLocal:diffX :updatePosition.15:dx
  1210 set :findDrillLocationLocal:diffY :updatePosition.15:dy
  1211 set :findBestPosition:best :updatePosition.15:value
-    * set *tmp264 :findBestPosition:best
  1212 jump *label225 always
  1213 label *label224
-    * set *tmp264 null
  1214 label *label225
  1215 jump *label223 always
  1216 label *label222
 
  1241 set :findDrillLocationLocal:diffX :updatePosition.16:dx
  1242 set :findDrillLocationLocal:diffY :updatePosition.16:dy
  1243 set :findBestPosition:best :updatePosition.16:value
-    * set *tmp269 :findBestPosition:best
  1244 jump *label230 always
  1245 label *label229
-    * set *tmp269 null
  1246 label *label230
  1247 jump *label228 always
  1248 label *label227
 
  1277 set :findDrillLocationLocal:diffX :updatePosition.17:dx
  1278 set :findDrillLocationLocal:diffY :updatePosition.17:dy
  1279 set :findBestPosition:best :updatePosition.17:value
-    * set *tmp274 :findBestPosition:best
  1280 jump *label236 always
  1281 label *label235
-    * set *tmp274 null
  1282 label *label236
  1283 jump *label234 always
  1284 label *label233
 
  1309 set :findDrillLocationLocal:diffX :updatePosition.18:dx
  1310 set :findDrillLocationLocal:diffY :updatePosition.18:dy
  1311 set :findBestPosition:best :updatePosition.18:value
-    * set *tmp279 :findBestPosition:best
  1312 jump *label241 always
  1313 label *label240
-    * set *tmp279 null
  1314 label *label241
  1315 jump *label239 always
  1316 label *label238
 
  1341 set :findDrillLocationLocal:diffX :updatePosition.19:dx
  1342 set :findDrillLocationLocal:diffY :updatePosition.19:dy
  1343 set :findBestPosition:best :updatePosition.19:value
-    * set *tmp284 :findBestPosition:best
  1344 jump *label246 always
  1345 label *label245
-    * set *tmp284 null
  1346 label *label246
  1347 jump *label244 always
  1348 label *label243
 
  1373 set :findDrillLocationLocal:diffX :updatePosition.20:dx
  1374 set :findDrillLocationLocal:diffY :updatePosition.20:dy
  1375 set :findBestPosition:best :updatePosition.20:value
-    * set *tmp289 :findBestPosition:best
  1376 jump *label251 always
  1377 label *label250
-    * set *tmp289 null
  1378 label *label251
  1379 jump *label249 always
  1380 label *label248
 
  1409 set :findDrillLocationLocal:diffX :updatePosition.21:dx
  1410 set :findDrillLocationLocal:diffY :updatePosition.21:dy
  1411 set :findBestPosition:best :updatePosition.21:value
-    * set *tmp294 :findBestPosition:best
  1412 jump *label257 always
  1413 label *label256
-    * set *tmp294 null
  1414 label *label257
  1415 jump *label255 always
  1416 label *label254
 
  1441 set :findDrillLocationLocal:diffX :updatePosition.22:dx
  1442 set :findDrillLocationLocal:diffY :updatePosition.22:dy
  1443 set :findBestPosition:best :updatePosition.22:value
-    * set *tmp299 :findBestPosition:best
  1444 jump *label262 always
  1445 label *label261
-    * set *tmp299 null
  1446 label *label262
  1447 jump *label260 always
  1448 label *label259
 
  1473 set :findDrillLocationLocal:diffX :updatePosition.23:dx
  1474 set :findDrillLocationLocal:diffY :updatePosition.23:dy
  1475 set :findBestPosition:best :updatePosition.23:value
-    * set *tmp304 :findBestPosition:best
  1476 jump *label267 always
  1477 label *label266
-    * set *tmp304 null
  1478 label *label267
  1479 jump *label265 always
  1480 label *label264
 
  1505 set :findDrillLocationLocal:diffX :updatePosition.24:dx
  1506 set :findDrillLocationLocal:diffY :updatePosition.24:dy
  1507 set :findBestPosition:best :updatePosition.24:value
-    * set *tmp309 :findBestPosition:best
  1508 jump *label272 always
  1509 label *label271
-    * set *tmp309 null
  1510 label *label272
  1511 jump *label270 always
  1512 label *label269
 
  1576 ucontrol unbind
  1577 set :findDrillLocationLocal*retval true
  1578 jump *label95 always
-    * set *tmp322 null
  1579 jump *label288 always
  1580 label *label287
-    * set *tmp322 null
  1581 label *label288
  1582 jump *label286 always
  1583 label *label285

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
   520 set .angle *tmp147
   521 set *tmp91 true
   522 jump *label99 always
-    * set *tmp145 null
   523 jump *label122 always
   524 label *label121
-    * set *tmp145 null
   525 label *label122
   526 jump *label114 always
   527 label *label113

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-100 instructions):
 
     8 printflush message1
     9 label *label15
    10 ubind @poly
-    * ulocate building core false @copper :x :y *tmp1 *tmp0
-    * set :core *tmp0
+   11 ulocate building core false @copper :x :y 0 :core
    12 label *label16
    13 op equal *tmp2 :core null
    14 jump *label15 notEqual *tmp2 false
 
    26 jump *label19 always
    27 label *label21
    28 label *label18
-    * set *tmp6 @second
-    * set .start *tmp6
+   29 set .start @second
    30 jump *label22 equal true false
    31 set :findDrillLocationLocal:x :x
    32 set :findDrillLocationLocal:y :y
 
   259 jump *label83 always
   260 end
   261 label *label5
-    * op sub *tmp54 :computeRowValues:x 2
-    * set :spotValue:x *tmp54
+  262 op sub :spotValue:x :computeRowValues:x 2
   263 set :spotValue:y :computeRowValues:y
   264 set :spotValue:ore :computeRowValues:ore
   265 ucontrol getBlock :spotValue:x :spotValue:y type building floor
 
   269 set *tmp55 :spotValue:result
   270 label *label85
   271 set :computeRowValues:x1 *tmp55
-    * op sub *tmp56 :computeRowValues:x 1
-    * set :spotValue.1:x *tmp56
+  272 op sub :spotValue.1:x :computeRowValues:x 1
   273 set :spotValue.1:y :computeRowValues:y
   274 set :spotValue.1:ore :computeRowValues:ore
   275 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
 
   279 set *tmp57 :spotValue.1:result
   280 label *label86
   281 set :computeRowValues:x2 *tmp57
-    * op add *tmp58 :computeRowValues:x 0
-    * set :spotValue.2:x *tmp58
+  282 op add :spotValue.2:x :computeRowValues:x 0
   283 set :spotValue.2:y :computeRowValues:y
   284 set :spotValue.2:ore :computeRowValues:ore
   285 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
 
   289 set *tmp59 :spotValue.2:result
   290 label *label87
   291 set :computeRowValues:x3 *tmp59
-    * op add *tmp60 :computeRowValues:x 1
-    * set :spotValue.3:x *tmp60
+  292 op add :spotValue.3:x :computeRowValues:x 1
   293 set :spotValue.3:y :computeRowValues:y
   294 set :spotValue.3:ore :computeRowValues:ore
   295 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
 
   299 set *tmp61 :spotValue.3:result
   300 label *label88
   301 set :computeRowValues:x4 *tmp61
-    * op add *tmp62 :computeRowValues:x 2
-    * set :spotValue.4:x *tmp62
+  302 op add :spotValue.4:x :computeRowValues:x 2
   303 set :spotValue.4:y :computeRowValues:y
   304 set :spotValue.4:ore :computeRowValues:ore
   305 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
 
   344 op add *tmp74 *tmp73 :computeRowValues:x4
   345 op add *tmp75 :computeRowValues:x3 :computeRowValues:x4
   346 op add *tmp76 *tmp75 :computeRowValues:x5
-    * packcolor *tmp77 *tmp72 *tmp74 *tmp76 0
-    * set :computeRowValues*retval *tmp77
+  347 packcolor :computeRowValues*retval *tmp72 *tmp74 *tmp76 0
   348 jump *label84 always
   349 set *tmp70 null
   350 jump *label94 always
 
   353 op add *tmp79 :computeRowValues:x2 :computeRowValues:x3
   354 op add *tmp80 :computeRowValues:x3 :computeRowValues:x4
   355 op add *tmp81 :computeRowValues:x4 :computeRowValues:x5
-    * packcolor *tmp82 *tmp78 *tmp79 *tmp80 *tmp81
-    * set :computeRowValues*retval *tmp82
+  356 packcolor :computeRowValues*retval *tmp78 *tmp79 *tmp80 *tmp81
   357 jump *label84 always
   358 set *tmp70 null
   359 label *label94
 
   373 set :findDrillLocationLocal:distanceLimit *tmp85
   374 ubind :findDrillLocationLocal:unit
   375 set .angle 0
-    * op div *tmp86 :findDrillLocationLocal:distanceLimit 3.8197185279121366
-    * set .maxAngle *tmp86
+  376 op div .maxAngle :findDrillLocationLocal:distanceLimit 3.8197185279121366
   377 set :findDrillLocationLocal:count -1
   378 set :findDrillLocationLocal:oreX 0
   379 set :findDrillLocationLocal:oreY 0
 
   387 set :findDrillLocationLocal:bestX :findDrillLocationLocal:x
   388 set :findDrillLocationLocal:bestY :findDrillLocationLocal:y
   389 op sub *tmp87 :findDrillLocationLocal:limit :findDrillLocationLocal:capacity
-    * op mul *tmp88 *tmp87 .attenuationRate
-    * set :findDrillLocationLocal:maxDistance *tmp88
-    * op min *tmp89 :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
-    * set :findDrillLocationLocal:distanceLimit *tmp89
-    * op div *tmp90 :findDrillLocationLocal:distanceLimit 3.8197185279121366
-    * set .maxAngle *tmp90
+  390 op mul :findDrillLocationLocal:maxDistance *tmp87 .attenuationRate
+  391 op min :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
+  392 op div .maxAngle :findDrillLocationLocal:distanceLimit 3.8197185279121366
   393 set :locateOreAway:ore :findDrillLocationLocal:item
   394 set :locateOreAway:x :findDrillLocationLocal:oreX
   395 set :locateOreAway:y :findDrillLocationLocal:oreY
   396 set :locateOreAway:distanceLimit :findDrillLocationLocal:distanceLimit
-    * op mul *tmp92 3.8197185279121366 .angle
-    * set :locateOreAway:distance *tmp92
-    * op max *tmp93 .angle @pi
-    * set .angle *tmp93
+  397 op mul :locateOreAway:distance 3.8197185279121366 .angle
+  398 op max .angle .angle @pi
   399 label *label100
   400 op lessThan *tmp94 :locateOreAway:distance :locateOreAway:distanceLimit
   401 jump *label102 equal *tmp94 false
-    * op div *tmp95 .angle @degToRad
-    * set :locateOreAway:a *tmp95
+  402 op div :locateOreAway:a .angle @degToRad
   403 op sin *tmp96 :locateOreAway:a
   404 op mul *tmp97 *tmp96 :locateOreAway:distance
   405 op add *tmp98 .coreX *tmp97
 
   408 set :limit:low 5
   409 set :limit:high *tmp99
   410 op max *tmp101 :limit:value :limit:low
-    * op min *tmp102 *tmp101 :limit:high
-    * set *tmp100 *tmp102
+  411 op min *tmp100 *tmp101 :limit:high
   412 label *label103
   413 set :locateOreAway:lx *tmp100
   414 op cos *tmp103 :locateOreAway:a
 
   419 set :limit.1:low 5
   420 set :limit.1:high *tmp106
   421 op max *tmp108 :limit.1:value :limit.1:low
-    * op min *tmp109 *tmp108 :limit.1:high
-    * set *tmp107 *tmp109
+  422 op min *tmp107 *tmp108 :limit.1:high
   423 label *label104
   424 set :locateOreAway:ly *tmp107
   425 set :moveTo.13:x :locateOreAway:lx
 
   436 label *label108
   437 label *label105
   438 op div *tmp113 3.8197185279121366 :locateOreAway:distance
-    * op add *tmp114 .angle *tmp113
-    * set .angle *tmp114
-    * op mul *tmp115 3.8197185279121366 .angle
-    * set :locateOreAway:distance *tmp115
-    * ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp116 *tmp117
+  439 op add .angle .angle *tmp113
+  440 op mul :locateOreAway:distance 3.8197185279121366 .angle
+  441 ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp116 0
   442 op equal *tmp118 *tmp116 false
   443 jump *label109 equal *tmp118 false
   444 set *tmp91 false
 
   450 op abs *tmp121 *tmp120
   451 op sub *tmp122 :locateOreAway:y .coreY
   452 op abs *tmp123 *tmp122
-    * op max *tmp124 *tmp121 *tmp123
-    * set :locateOreAway:coreDist *tmp124
+  453 op max :locateOreAway:coreDist *tmp121 *tmp123
   454 op sub *tmp125 :locateOreAway:x :locateOreAway:lx
   455 op sub *tmp126 :locateOreAway:y :locateOreAway:ly
-    * op len *tmp127 *tmp125 *tmp126
-    * set :locateOreAway:unitDist *tmp127
+  456 op len :locateOreAway:unitDist *tmp125 *tmp126
   457 op greaterThanEq *tmp128 :locateOreAway:coreDist 7
   458 jump *label111 equal *tmp128 false
   459 op lessThan *tmp130 :locateOreAway:unitDist :locateOreAway:distance
 
   465 set :visited:i 0
   466 label *label116
   467 jump *label118 greaterThanEq :visited:i *tmp133
-    * set *tmp134 :visited:index
-    * read *tmp135 bank1 *tmp134
-    * set :visited:lx *tmp135
+  468 read :visited:lx bank1 :visited:index
   469 op add *tmp136 :visited:index 1
-    * set *tmp137 *tmp136
-    * read *tmp138 bank1 *tmp137
-    * set :visited:ly *tmp138
+  470 read :visited:ly bank1 *tmp136
   471 op sub *tmp139 :visited:x :visited:lx
   472 op sub *tmp140 :visited:y :visited:ly
   473 op len *tmp141 *tmp139 *tmp140
 
   490 op equal *tmp144 *tmp132 false
   491 jump *label121 equal *tmp144 false
   492 op div *tmp146 7.639437055824273 :locateOreAway:distance
-    * op add *tmp147 .angle *tmp146
-    * set .angle *tmp147
+  493 op add .angle .angle *tmp146
   494 set *tmp91 true
   495 jump *label99 always
   496 jump *label122 always
 
   513 set :findDrillLocationLocal:oreY :locateOreAway:y
   514 op equal *tmp148 *tmp91 false
   515 jump *label123 equal *tmp148 false
-    * op greaterThan *tmp150 :findDrillLocationLocal:capacity 0
-    * set :findDrillLocationLocal*retval *tmp150
+  516 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   517 jump *label95 always
   518 jump *label124 always
   519 label *label123
 
   551 setaddr :computeRowValues*retaddr *label134 (h:*label134)
   552 call *label5 *invalid :computeRowValues*retval (m:*label134) (h:*label134)
   553 label *label134
-    * set *tmp158 :computeRowValues*retval
-    * set :findBestPosition:y1 *tmp158
+  554 set :findBestPosition:y1 :computeRowValues*retval
   555 op sub *tmp159 :findBestPosition:y 1
   556 set :computeRowValues:x :findBestPosition:x
   557 set :computeRowValues:y *tmp159
 
   560 setaddr :computeRowValues*retaddr *label135 (h:*label135)
   561 call *label5 *invalid :computeRowValues*retval (m:*label135) (h:*label135)
   562 label *label135
-    * set *tmp160 :computeRowValues*retval
-    * set :findBestPosition:y2 *tmp160
+  563 set :findBestPosition:y2 :computeRowValues*retval
   564 op add *tmp161 :findBestPosition:y 0
   565 set :computeRowValues:x :findBestPosition:x
   566 set :computeRowValues:y *tmp161
 
   569 setaddr :computeRowValues*retaddr *label136 (h:*label136)
   570 call *label5 *invalid :computeRowValues*retval (m:*label136) (h:*label136)
   571 label *label136
-    * set *tmp162 :computeRowValues*retval
-    * set :findBestPosition:y3 *tmp162
+  572 set :findBestPosition:y3 :computeRowValues*retval
   573 op add *tmp163 :findBestPosition:y 1
   574 set :computeRowValues:x :findBestPosition:x
   575 set :computeRowValues:y *tmp163
 
   578 setaddr :computeRowValues*retaddr *label137 (h:*label137)
   579 call *label5 *invalid :computeRowValues*retval (m:*label137) (h:*label137)
   580 label *label137
-    * set *tmp164 :computeRowValues*retval
-    * set :findBestPosition:y4 *tmp164
+  581 set :findBestPosition:y4 :computeRowValues*retval
   582 op add *tmp165 :findBestPosition:y 2
   583 set :computeRowValues:x :findBestPosition:x
   584 set :computeRowValues:y *tmp165
 
   587 setaddr :computeRowValues*retaddr *label138 (h:*label138)
   588 call *label5 *invalid :computeRowValues*retval (m:*label138) (h:*label138)
   589 label *label138
-    * set *tmp166 :computeRowValues*retval
-    * set :findBestPosition:y5 *tmp166
+  590 set :findBestPosition:y5 :computeRowValues*retval
   591 set :findBestPosition:best 0
   592 set :findDrillLocationLocal:diffX 0
   593 set :findDrillLocationLocal:diffY 0
   594 jump *label139 equal :findBestPosition:large false
   595 op add *tmp168 :findBestPosition:y1 :findBestPosition:y2
-    * op add *tmp169 *tmp168 :findBestPosition:y3
-    * set :findBestPosition:row1 *tmp169
+  596 op add :findBestPosition:row1 *tmp168 :findBestPosition:y3
   597 op add *tmp170 :findBestPosition:y2 :findBestPosition:y3
-    * op add *tmp171 *tmp170 :findBestPosition:y4
-    * set :findBestPosition:row2 *tmp171
+  598 op add :findBestPosition:row2 *tmp170 :findBestPosition:y4
   599 op add *tmp172 :findBestPosition:y3 :findBestPosition:y4
-    * op add *tmp173 *tmp172 :findBestPosition:y5
-    * set :findBestPosition:row3 *tmp173
+  600 op add :findBestPosition:row3 *tmp172 :findBestPosition:y5
   601 set :updateRowPositions3:dy -1
   602 set :updateRowPositions3:row :findBestPosition:row1
-    * unpackcolor :updateRowPositions3:col1 :updateRowPositions3:col2 :updateRowPositions3:col3 *tmp174 :updateRowPositions3:row
+  603 unpackcolor :updateRowPositions3:col1 :updateRowPositions3:col2 :updateRowPositions3:col3 0 :updateRowPositions3:row
   604 set :updatePosition:dx -1
   605 set :updatePosition:dy :updateRowPositions3:dy
   606 set :updatePosition:value :updateRowPositions3:col1
 
   710 label *label141
   711 set :updateRowPositions3.1:dy 0
   712 set :updateRowPositions3.1:row :findBestPosition:row2
-    * unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 *tmp191 :updateRowPositions3.1:row
+  713 unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 0 :updateRowPositions3.1:row
   714 set :updatePosition.3:dx -1
   715 set :updatePosition.3:dy :updateRowPositions3.1:dy
   716 set :updatePosition.3:value :updateRowPositions3.1:col1
 
   820 label *label157
   821 set :updateRowPositions3.2:dy 1
   822 set :updateRowPositions3.2:row :findBestPosition:row3
-    * unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 *tmp208 :updateRowPositions3.2:row
+  823 unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 0 :updateRowPositions3.2:row
   824 set :updatePosition.6:dx -1
   825 set :updatePosition.6:dy :updateRowPositions3.2:dy
   826 set :updatePosition.6:value :updateRowPositions3.2:col1
 
   940 print "\n"
   941 jump *label140 always
   942 label *label139
-    * op add *tmp226 :findBestPosition:y1 :findBestPosition:y2
-    * set :findBestPosition:row1.1 *tmp226
-    * op add *tmp227 :findBestPosition:y2 :findBestPosition:y3
-    * set :findBestPosition:row2.1 *tmp227
-    * op add *tmp228 :findBestPosition:y3 :findBestPosition:y4
-    * set :findBestPosition:row3.1 *tmp228
-    * op add *tmp229 :findBestPosition:y4 :findBestPosition:y5
-    * set :findBestPosition:row4 *tmp229
+  943 op add :findBestPosition:row1.1 :findBestPosition:y1 :findBestPosition:y2
+  944 op add :findBestPosition:row2.1 :findBestPosition:y2 :findBestPosition:y3
+  945 op add :findBestPosition:row3.1 :findBestPosition:y3 :findBestPosition:y4
+  946 op add :findBestPosition:row4 :findBestPosition:y4 :findBestPosition:y5
   947 set :updateRowPositions4:dy -1.5
   948 set :updateRowPositions4:row :findBestPosition:row1.1
   949 unpackcolor :updateRowPositions4:col1 :updateRowPositions4:col2 :updateRowPositions4:col3 :updateRowPositions4:col4 :updateRowPositions4:row
 
  1485 label *label274
  1486 label *label275
  1487 label *label273
-    * op mul *tmp313 :findBestPosition:best 255
-    * set *tmp156 *tmp313
+ 1488 op mul *tmp156 :findBestPosition:best 255
  1489 jump *label133 always
  1490 set *tmp156 null
  1491 label *label133
 
  1522 label *label279
  1523 op greaterThan *tmp317 :findDrillLocationLocal:score :findDrillLocationLocal:capacity
  1524 jump *label285 equal *tmp317 false
-    * op add *tmp319 :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
-    * set :findDrillLocationLocal:dx *tmp319
-    * op add *tmp320 :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:dy *tmp320
+ 1525 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
+ 1526 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1527 set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
  1528 set .bestSpot :findDrillLocationLocal:score
  1529 op greaterThanEq *tmp321 :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
 
  1539 label *label286
  1540 op greaterThan *tmp323 :findDrillLocationLocal:score :findDrillLocationLocal:best
  1541 jump *label289 equal *tmp323 false
-    * op add *tmp325 :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
-    * set :findDrillLocationLocal:bestX *tmp325
-    * op add *tmp326 :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:bestY *tmp326
+ 1542 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
+ 1543 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1544 set :findDrillLocationLocal:best :findDrillLocationLocal:score
  1545 jump *label290 always
  1546 label *label289
 
  1552 label *label291
  1553 label *label292
  1554 set :findDrillLocationLocal:last :findDrillLocationLocal:score
-    * op mul *tmp329 :findDrillLocationLocal:diffX 1.1
-    * set :round:x *tmp329
+ 1555 op mul :round:x :findDrillLocationLocal:diffX 1.1
  1556 op add *tmp331 :round:x 0.5
-    * op floor *tmp332 *tmp331
-    * set *tmp330 *tmp332
+ 1557 op floor *tmp330 *tmp331
  1558 label *label293
  1559 op add :findDrillLocationLocal:oreX :findDrillLocationLocal:oreX *tmp330
-    * op mul *tmp333 :findDrillLocationLocal:diffY 1.1
-    * set :round.1:x *tmp333
+ 1560 op mul :round.1:x :findDrillLocationLocal:diffY 1.1
  1561 op add *tmp335 :round.1:x 0.5
-    * op floor *tmp336 *tmp335
-    * set *tmp334 *tmp336
+ 1562 op floor *tmp334 *tmp335
  1563 label *label294
  1564 op add :findDrillLocationLocal:oreY :findDrillLocationLocal:oreY *tmp334
  1565 op sub *tmp337 :findDrillLocationLocal:oreX .coreX
 
  1577 jump *label130 always
  1578 label *label132
  1579 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
-    * set *tmp344 :findDrillLocationLocal:count
-    * write :findDrillLocationLocal:best bank1 *tmp344
+ 1580 write :findDrillLocationLocal:best bank1 :findDrillLocationLocal:count
  1581 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
-    * set *tmp346 :findDrillLocationLocal:count
-    * write :findDrillLocationLocal:bestX bank1 *tmp346
+ 1582 write :findDrillLocationLocal:bestX bank1 :findDrillLocationLocal:count
  1583 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
-    * set *tmp348 :findDrillLocationLocal:count
-    * write :findDrillLocationLocal:bestY bank1 *tmp348
+ 1584 write :findDrillLocationLocal:bestY bank1 :findDrillLocationLocal:count
  1585 op add .locations .locations 1
  1586 set :debugPrintSpot:text ""
-    * op sub *tmp351 @second .start
-    * set :round.2:x *tmp351
+ 1587 op sub :round.2:x @second .start
  1588 op add *tmp353 :round.2:x 0.5
-    * op floor *tmp354 *tmp353
-    * set *tmp352 *tmp354
+ 1589 op floor *tmp352 *tmp353
  1590 label *label298
  1591 print "Time: "
  1592 print *tmp352
 
  1598 label *label299
  1599 jump *label301 greaterThanEq :debugPrintSpot:i *tmp355
  1600 op add :debugPrintSpot:index :debugPrintSpot:index 1
-    * set *tmp356 :debugPrintSpot:index
-    * read *tmp357 bank1 *tmp356
-    * set :debugPrintSpot:size *tmp357
+ 1601 read :debugPrintSpot:size bank1 :debugPrintSpot:index
  1602 op add :debugPrintSpot:index :debugPrintSpot:index 1
-    * set *tmp358 :debugPrintSpot:index
-    * read *tmp359 bank1 *tmp358
-    * set :debugPrintSpot:x *tmp359
+ 1603 read :debugPrintSpot:x bank1 :debugPrintSpot:index
  1604 op add :debugPrintSpot:index :debugPrintSpot:index 1
-    * set *tmp360 :debugPrintSpot:index
-    * read *tmp361 bank1 *tmp360
-    * set :debugPrintSpot:y *tmp361
+ 1605 read :debugPrintSpot:y bank1 :debugPrintSpot:index
  1606 print :debugPrintSpot:x
  1607 print ","
  1608 print " "
 
  1686 setaddr :isBlocked*retaddr *label317 (h:*label317)
  1687 call *label7 *invalid :isBlocked*retval (m:*label317) (h:*label317)
  1688 label *label317
-    * op or *tmp370 *tmp367 :isBlocked*retval
-    * set :createTerrainMask:result *tmp370
+ 1689 op or :createTerrainMask:result *tmp367 :isBlocked*retval
  1690 label *label315
  1691 op sub :createTerrainMask:c :createTerrainMask:c 1
  1692 jump *label314 always
 
  1714 label *label319
  1715 label *label320
  1716 op mul *tmp377 7 :shiftMask:shiftY
-    * op add *tmp378 :shiftMask:shiftX *tmp377
-    * set :shiftMask:shift *tmp378
+ 1717 op add :shiftMask:shift :shiftMask:shiftX *tmp377
  1718 op greaterThan *tmp379 :shiftMask:shift 0
  1719 jump *label321 equal *tmp379 false
-    * op shr *tmp381 562949953421311 :shiftMask:shift
-    * set :shiftMask:clearMask *tmp381
+ 1720 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
  1721 op and *tmp382 :shiftMask:mask :shiftMask:clearMask
-    * op shl *tmp383 *tmp382 :shiftMask:shift
-    * set :shiftMask:mask *tmp383
+ 1722 op shl :shiftMask:mask *tmp382 :shiftMask:shift
  1723 jump *label322 always
  1724 label *label321
  1725 op sub *tmp384 0 :shiftMask:shift
 
  1729 jump *label323 equal *tmp385 false
  1730 op abs *tmp387 :shiftMask:shiftX
  1731 op sub *tmp388 7 *tmp387
-    * op shr *tmp389 0b1111111 *tmp388
-    * set :shiftMask:keep *tmp389
+ 1732 op shr :shiftMask:keep 0b1111111 *tmp388
  1733 op greaterThan *tmp390 :shiftMask:shiftX 0
  1734 jump *label325 equal *tmp390 false
  1735 op abs *tmp392 :shiftMask:shiftX
 
  1760 jump *label330 greaterThan :findPossiblePlacement:y 3
  1761 op add *tmp397 :findPossiblePlacement:y 3
  1762 op mul *tmp398 7 *tmp397
-    * op shl *tmp399 :findPossiblePlacement:placementMask *tmp398
-    * set :findPossiblePlacement:mask *tmp399
+ 1763 op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp398
  1764 set :findPossiblePlacement:x -3
  1765 label *label331
  1766 jump *label333 greaterThan :findPossiblePlacement:x 3
 
  1769 jump *label334 equal *tmp401 false
  1770 op mul *tmp403 :findPossiblePlacement:y 7
  1771 op add *tmp404 24 *tmp403
-    * op add *tmp405 *tmp404 :findPossiblePlacement:x
-    * set :findPossiblePlacement*retval *tmp405
+ 1772 op add :findPossiblePlacement*retval *tmp404 :findPossiblePlacement:x
  1773 jump *label327 always
  1774 jump *label335 always
  1775 label *label334
 
  1813 label *label341
  1814 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1815 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp412 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp412
+ 1816 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1817 op greaterThanEq *tmp413 :tryPlaceGenerator:shift 0
  1818 jump *label342 equal *tmp413 false
  1819 op add *tmp415 :tryPlaceGenerator:centerX 0.5
-    * op add *tmp416 *tmp415 :tryPlaceGenerator:c
-    * set .water2X *tmp416
+ 1820 op add .water2X *tmp415 :tryPlaceGenerator:c
  1821 op add *tmp417 :tryPlaceGenerator:centerY 0.5
-    * op add *tmp418 *tmp417 :tryPlaceGenerator:r
-    * set .water2Y *tmp418
+ 1822 op add .water2Y *tmp417 :tryPlaceGenerator:r
  1823 op add *tmp419 :tryPlaceGenerator:centerX 2.5
-    * op add *tmp420 *tmp419 :tryPlaceGenerator:c
-    * set .generatorX *tmp420
+ 1824 op add .generatorX *tmp419 :tryPlaceGenerator:c
  1825 op add *tmp421 :tryPlaceGenerator:centerY 0.5
-    * op add *tmp422 *tmp421 :tryPlaceGenerator:r
-    * set .generatorY *tmp422
+ 1826 op add .generatorY *tmp421 :tryPlaceGenerator:r
  1827 op shl *tmp423 :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:shift
  1828 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp423
  1829 jump *label343 always
 
  1837 label *label344
  1838 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1839 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp424 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp424
+ 1840 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1841 op lessThan *tmp425 :tryPlaceGenerator:shift 0
  1842 jump *label345 equal *tmp425 false
  1843 set :tryPlaceGenerator*retval false
 
  1846 label *label345
  1847 label *label346
  1848 op add *tmp427 :tryPlaceGenerator:centerX 0.5
-    * op add *tmp428 *tmp427 :tryPlaceGenerator:c
-    * set .water2X *tmp428
+ 1849 op add .water2X *tmp427 :tryPlaceGenerator:c
  1850 op add *tmp429 :tryPlaceGenerator:centerY 0.5
-    * op add *tmp430 *tmp429 :tryPlaceGenerator:r
-    * set .water2Y *tmp430
+ 1851 op add .water2Y *tmp429 :tryPlaceGenerator:r
  1852 op add *tmp431 :tryPlaceGenerator:centerX 0.5
-    * op add *tmp432 *tmp431 :tryPlaceGenerator:c
-    * set .generatorX *tmp432
+ 1853 op add .generatorX *tmp431 :tryPlaceGenerator:c
  1854 op add *tmp433 :tryPlaceGenerator:centerY 2.5
-    * op add *tmp434 *tmp433 :tryPlaceGenerator:r
-    * set .generatorY *tmp434
+ 1855 op add .generatorY *tmp433 :tryPlaceGenerator:r
  1856 op shl *tmp435 :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:shift
  1857 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp435
  1858 label *label343
 
  1865 label *label347
  1866 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1867 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp436 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp436
+ 1868 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1869 op lessThan *tmp437 :tryPlaceGenerator:shift 0
  1870 jump *label348 equal *tmp437 false
  1871 set :tryPlaceGenerator*retval false
 
  1873 jump *label349 always
  1874 label *label348
  1875 label *label349
-    * op add *tmp439 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * set .nodeX *tmp439
-    * op add *tmp440 :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * set .nodeY *tmp440
+ 1876 op add .nodeX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
+ 1877 op add .nodeY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
  1878 op shl *tmp441 1 :tryPlaceGenerator:shift
  1879 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp441
  1880 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1886 label *label350
  1887 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1888 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp442 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp442
+ 1889 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1890 op lessThan *tmp443 :tryPlaceGenerator:shift 0
  1891 jump *label351 equal *tmp443 false
  1892 set :tryPlaceGenerator*retval false
 
  1894 jump *label352 always
  1895 label *label351
  1896 label *label352
-    * op add *tmp445 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * set .panelX *tmp445
-    * op add *tmp446 :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * set .panelY *tmp446
+ 1897 op add .panelX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
+ 1898 op add .panelY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
  1899 set :tryPlaceGenerator*retval true
  1900 jump *label340 always
  1901 set :tryPlaceGenerator*retval null
 
  1916 setaddr :createTerrainMask*retaddr *label354 (h:*label354)
  1917 call *label8 *invalid :createTerrainMask*retval (m:*label354) (h:*label354)
  1918 label *label354
-    * set *tmp447 :createTerrainMask*retval
-    * set :layoutThoriumDrillAtLocation:plainTerrainMask *tmp447
+ 1919 set :layoutThoriumDrillAtLocation:plainTerrainMask :createTerrainMask*retval
  1920 set :createFixedMatrix:row0 0b0000000
  1921 set :createFixedMatrix:row1 0b0000000
  1922 set :createFixedMatrix:row2 0b0011100
 
  1936 op shl *tmp458 :createFixedMatrix:row5 35
  1937 op or *tmp459 *tmp457 *tmp458
  1938 op shl *tmp460 :createFixedMatrix:row6 42
-    * op or *tmp461 *tmp459 *tmp460
-    * set *tmp448 *tmp461
+ 1939 op or *tmp448 *tmp459 *tmp460
  1940 label *label355
-    * op or *tmp462 :layoutThoriumDrillAtLocation:plainTerrainMask *tmp448
-    * set :layoutThoriumDrillAtLocation:terrainMask *tmp462
+ 1941 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:plainTerrainMask *tmp448
  1942 set :createFixedMatrix.1:row0 0b1000001
  1943 set :createFixedMatrix.1:row1 0b0000000
  1944 set :createFixedMatrix.1:row2 0b0011100
 
  1958 op shl *tmp473 :createFixedMatrix.1:row5 35
  1959 op or *tmp474 *tmp472 *tmp473
  1960 op shl *tmp475 :createFixedMatrix.1:row6 42
-    * op or *tmp476 *tmp474 *tmp475
-    * set *tmp463 *tmp476
+ 1961 op or *tmp463 *tmp474 *tmp475
  1962 label *label356
-    * op or *tmp477 :layoutThoriumDrillAtLocation:terrainMask *tmp463
-    * set :layoutThoriumDrillAtLocation:cornersMask *tmp477
+ 1963 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp463
  1964 set :createFixedMatrix.2:row0 0b11
  1965 set :createFixedMatrix.2:row1 0b11
  1966 op shl *tmp479 :createFixedMatrix.2:row0 0
  1967 op shl *tmp480 :createFixedMatrix.2:row1 7
-    * op or *tmp481 *tmp479 *tmp480
-    * set *tmp478 *tmp481
+ 1968 op or *tmp478 *tmp479 *tmp480
  1969 label *label357
  1970 set :layoutThoriumDrillAtLocation:extractorMask *tmp478
  1971 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
 
  1977 label *label358
  1978 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1979 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
-    * set *tmp482 :findPossiblePlacement*retval
-    * set :layoutThoriumDrillAtLocation:shift *tmp482
+ 1980 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
  1981 op greaterThanEq *tmp483 :layoutThoriumDrillAtLocation:shift 0
  1982 jump *label359 equal *tmp483 false
  1983 op add *tmp485 .drillX 0.5
-    * op add *tmp486 *tmp485 :layoutThoriumDrillAtLocation:c
-    * set .water1X *tmp486
+ 1984 op add .water1X *tmp485 :layoutThoriumDrillAtLocation:c
  1985 op add *tmp487 .drillY 0.5
-    * op add *tmp488 *tmp487 :layoutThoriumDrillAtLocation:r
-    * set .water1Y *tmp488
+ 1986 op add .water1Y *tmp487 :layoutThoriumDrillAtLocation:r
  1987 op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:shift
  1988 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
  1989 jump *label360 always
 
  1993 set :createFixedMatrix.3:row1 0b1111
  1994 op shl *tmp490 :createFixedMatrix.3:row0 0
  1995 op shl *tmp491 :createFixedMatrix.3:row1 7
-    * op or *tmp492 *tmp490 *tmp491
-    * set *tmp489 *tmp492
+ 1996 op or *tmp489 *tmp490 *tmp491
  1997 label *label361
  1998 set :layoutThoriumDrillAtLocation:generatorHorizontal *tmp489
  1999 set :createFixedMatrix.4:row0 0b11
 
  2006 op shl *tmp497 :createFixedMatrix.4:row2 14
  2007 op or *tmp498 *tmp496 *tmp497
  2008 op shl *tmp499 :createFixedMatrix.4:row3 21
-    * op or *tmp500 *tmp498 *tmp499
-    * set *tmp493 *tmp500
+ 2009 op or *tmp493 *tmp498 *tmp499
  2010 label *label362
  2011 set :layoutThoriumDrillAtLocation:generatorVertical *tmp493
  2012 set :tryPlaceGenerator:centerX .drillX
 
  2017 setaddr :tryPlaceGenerator*retaddr *label363 (h:*label363)
  2018 call *label11 *invalid :tryPlaceGenerator*retval (m:*label363) (h:*label363)
  2019 label *label363
-    * set *tmp501 :tryPlaceGenerator*retval
-    * jump *label364 equal *tmp501 false
+ 2020 jump *label364 equal :tryPlaceGenerator*retval false
  2021 set :layoutThoriumDrillAtLocation*retval true
  2022 jump *label353 always
  2023 jump *label365 always
 
  2042 set :layoutThoriumDrillAtLocation:sy -3
  2043 setaddr *tmp503 *label372
  2044 label *label366
-    * op add *tmp504 .drillX :layoutThoriumDrillAtLocation:sx
-    * set :layoutThoriumDrillAtLocation:newX *tmp504
-    * op add *tmp505 .drillY :layoutThoriumDrillAtLocation:sy
-    * set :layoutThoriumDrillAtLocation:newY *tmp505
+ 2045 op add :layoutThoriumDrillAtLocation:newX .drillX :layoutThoriumDrillAtLocation:sx
+ 2046 op add :layoutThoriumDrillAtLocation:newY .drillY :layoutThoriumDrillAtLocation:sy
  2047 set :createTerrainMask:x :layoutThoriumDrillAtLocation:newX
  2048 set :createTerrainMask:y :layoutThoriumDrillAtLocation:newY
  2049 setaddr :createTerrainMask*retaddr *label373 (h:*label373)
  2050 call *label8 *invalid :createTerrainMask*retval (m:*label373) (h:*label373)
  2051 label *label373
-    * set *tmp506 :createTerrainMask*retval
-    * set :layoutThoriumDrillAtLocation:newTerrainMask *tmp506
+ 2052 set :layoutThoriumDrillAtLocation:newTerrainMask :createTerrainMask*retval
  2053 op sub *tmp507 0 :layoutThoriumDrillAtLocation:sx
  2054 op sub *tmp508 0 :layoutThoriumDrillAtLocation:sy
  2055 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
 
  2059 call *label9 *invalid :shiftMask*retval (m:*label374) (h:*label374)
  2060 label *label374
  2061 set :layoutThoriumDrillAtLocation:shiftedMask :shiftMask*retval
-    * op or *tmp509 :layoutThoriumDrillAtLocation:newTerrainMask :layoutThoriumDrillAtLocation:shiftedMask
-    * set :layoutThoriumDrillAtLocation:combinedMask *tmp509
+ 2062 op or :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:newTerrainMask :layoutThoriumDrillAtLocation:shiftedMask
  2063 op add *tmp510 .drillX :layoutThoriumDrillAtLocation:sx
  2064 op add *tmp511 .drillY :layoutThoriumDrillAtLocation:sy
  2065 set :tryPlaceGenerator:centerX *tmp510
 
  2070 setaddr :tryPlaceGenerator*retaddr *label375 (h:*label375)
  2071 call *label11 *invalid :tryPlaceGenerator*retval (m:*label375) (h:*label375)
  2072 label *label375
-    * set *tmp512 :tryPlaceGenerator*retval
-    * jump *label376 equal *tmp512 false
+ 2073 jump *label376 equal :tryPlaceGenerator*retval false
  2074 set :layoutThoriumDrillAtLocation*retval true
  2075 jump *label353 always
  2076 jump *label377 always

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-3 instructions):
 
    27 label *label21
    28 label *label18
    29 set .start @second
-    * jump *label22 equal true false
    30 set :findDrillLocationLocal:x :x
    31 set :findDrillLocationLocal:y :y
    32 set :findDrillLocationLocal:unit @unit
 
   381 set :findDrillLocationLocal:dx :findDrillLocationLocal:dy
   382 set .bestSpot :findDrillLocationLocal:dx
   383 label *label96
-    * jump *label98 equal true false
   384 set :findDrillLocationLocal:best 0
   385 set :findDrillLocationLocal:bestX :findDrillLocationLocal:x
   386 set :findDrillLocationLocal:bestY :findDrillLocationLocal:y
 
   536 label *label125
   537 set :findDrillLocationLocal:last 0
   538 label *label130
-    * jump *label132 equal true false
   539 set :findBestPosition:x :findDrillLocationLocal:oreX
   540 set :findBestPosition:y :findDrillLocationLocal:oreY
   541 set :findBestPosition:ore :findDrillLocationLocal:ore

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-91 instructions):
 
    10 ubind @poly
    11 ulocate building core false @copper :x :y 0 :core
    12 label *label16
-    * op equal *tmp2 :core null
-    * jump *label15 notEqual *tmp2 false
+   13 jump *label15 equal :core null
    14 label *label17
    15 set :moveTo:x :x
    16 set :moveTo:y :y
    17 set :moveTo:radius 1
    18 label *label19
    19 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp3
-    * op equal *tmp4 *tmp3 false
-    * jump *label21 equal *tmp4 false
+   20 jump *label21 notEqual *tmp3 false
    21 op sub *tmp5 :moveTo:radius 0.5
    22 ucontrol approach :moveTo:x :moveTo:y *tmp5
    23 label *label20
 
    58 set :buildAt:x .drillX
    59 set :buildAt:y .drillY
    60 set :buildAt:block @laser-drill
-    * op greaterThanEq *tmp8 :buildAt:x 0
-    * jump *label27 equal *tmp8 false
+   61 jump *label27 lessThan :buildAt:x 0
    62 set :moveTo.1:x :buildAt:x
    63 set :moveTo.1:y :buildAt:y
    64 set *tmp10 :moveTo.1:x
 
    68 set :moveTo.2:radius 6
    69 label *label31
    70 ucontrol within :moveTo.2:x :moveTo.2:y :moveTo.2:radius *tmp12
-    * op equal *tmp13 *tmp12 false
-    * jump *label33 equal *tmp13 false
+   71 jump *label33 notEqual *tmp12 false
    72 op sub *tmp14 :moveTo.2:radius 0.5
    73 ucontrol approach :moveTo.2:x :moveTo.2:y *tmp14
    74 label *label32
 
    85 set :buildAt.1:x .water1X
    86 set :buildAt.1:y .water1Y
    87 set :buildAt.1:block @water-extractor
-    * op greaterThanEq *tmp15 :buildAt.1:x 0
-    * jump *label35 equal *tmp15 false
+   88 jump *label35 lessThan :buildAt.1:x 0
    89 set :moveTo.3:x :buildAt.1:x
    90 set :moveTo.3:y :buildAt.1:y
    91 set *tmp17 :moveTo.3:x
 
    95 set :moveTo.4:radius 6
    96 label *label39
    97 ucontrol within :moveTo.4:x :moveTo.4:y :moveTo.4:radius *tmp19
-    * op equal *tmp20 *tmp19 false
-    * jump *label41 equal *tmp20 false
+   98 jump *label41 notEqual *tmp19 false
    99 op sub *tmp21 :moveTo.4:radius 0.5
   100 ucontrol approach :moveTo.4:x :moveTo.4:y *tmp21
   101 label *label40
 
   112 set :buildAt.2:x .water2X
   113 set :buildAt.2:y .water2Y
   114 set :buildAt.2:block @water-extractor
-    * op greaterThanEq *tmp22 :buildAt.2:x 0
-    * jump *label43 equal *tmp22 false
+  115 jump *label43 lessThan :buildAt.2:x 0
   116 set :moveTo.5:x :buildAt.2:x
   117 set :moveTo.5:y :buildAt.2:y
   118 set *tmp24 :moveTo.5:x
 
   122 set :moveTo.6:radius 6
   123 label *label47
   124 ucontrol within :moveTo.6:x :moveTo.6:y :moveTo.6:radius *tmp26
-    * op equal *tmp27 *tmp26 false
-    * jump *label49 equal *tmp27 false
+  125 jump *label49 notEqual *tmp26 false
   126 op sub *tmp28 :moveTo.6:radius 0.5
   127 ucontrol approach :moveTo.6:x :moveTo.6:y *tmp28
   128 label *label48
 
   139 set :buildAt.3:x .generatorX
   140 set :buildAt.3:y .generatorY
   141 set :buildAt.3:block @steam-generator
-    * op greaterThanEq *tmp29 :buildAt.3:x 0
-    * jump *label51 equal *tmp29 false
+  142 jump *label51 lessThan :buildAt.3:x 0
   143 set :moveTo.7:x :buildAt.3:x
   144 set :moveTo.7:y :buildAt.3:y
   145 set *tmp31 :moveTo.7:x
 
   149 set :moveTo.8:radius 6
   150 label *label55
   151 ucontrol within :moveTo.8:x :moveTo.8:y :moveTo.8:radius *tmp33
-    * op equal *tmp34 *tmp33 false
-    * jump *label57 equal *tmp34 false
+  152 jump *label57 notEqual *tmp33 false
   153 op sub *tmp35 :moveTo.8:radius 0.5
   154 ucontrol approach :moveTo.8:x :moveTo.8:y *tmp35
   155 label *label56
 
   166 set :buildAt.4:x .nodeX
   167 set :buildAt.4:y .nodeY
   168 set :buildAt.4:block @power-node
-    * op greaterThanEq *tmp36 :buildAt.4:x 0
-    * jump *label59 equal *tmp36 false
+  169 jump *label59 lessThan :buildAt.4:x 0
   170 set :moveTo.9:x :buildAt.4:x
   171 set :moveTo.9:y :buildAt.4:y
   172 set *tmp38 :moveTo.9:x
 
   176 set :moveTo.10:radius 6
   177 label *label63
   178 ucontrol within :moveTo.10:x :moveTo.10:y :moveTo.10:radius *tmp40
-    * op equal *tmp41 *tmp40 false
-    * jump *label65 equal *tmp41 false
+  179 jump *label65 notEqual *tmp40 false
   180 op sub *tmp42 :moveTo.10:radius 0.5
   181 ucontrol approach :moveTo.10:x :moveTo.10:y *tmp42
   182 label *label64
 
   193 set :buildAt.5:x .panelX
   194 set :buildAt.5:y .panelY
   195 set :buildAt.5:block @solar-panel
-    * op greaterThanEq *tmp43 :buildAt.5:x 0
-    * jump *label67 equal *tmp43 false
+  196 jump *label67 lessThan :buildAt.5:x 0
   197 set :moveTo.11:x :buildAt.5:x
   198 set :moveTo.11:y :buildAt.5:y
   199 set *tmp45 :moveTo.11:x
 
   203 set :moveTo.12:radius 6
   204 label *label71
   205 ucontrol within :moveTo.12:x :moveTo.12:y :moveTo.12:radius *tmp47
-    * op equal *tmp48 *tmp47 false
-    * jump *label73 equal *tmp48 false
+  206 jump *label73 notEqual *tmp47 false
   207 op sub *tmp49 :moveTo.12:radius 0.5
   208 ucontrol approach :moveTo.12:x :moveTo.12:y *tmp49
   209 label *label72
 
   381 op mul :locateOreAway:distance 3.8197185279121366 .angle
   382 op max .angle .angle @pi
   383 label *label100
-    * op lessThan *tmp94 :locateOreAway:distance :locateOreAway:distanceLimit
-    * jump *label102 equal *tmp94 false
+  384 jump *label102 greaterThanEq :locateOreAway:distance :locateOreAway:distanceLimit
   385 op div :locateOreAway:a .angle @degToRad
   386 op sin *tmp96 :locateOreAway:a
   387 op mul *tmp97 *tmp96 :locateOreAway:distance
 
   410 set :moveTo.13:radius 5
   411 label *label106
   412 ucontrol within :moveTo.13:x :moveTo.13:y :moveTo.13:radius *tmp110
-    * op equal *tmp111 *tmp110 false
-    * jump *label108 equal *tmp111 false
+  413 jump *label108 notEqual *tmp110 false
   414 op sub *tmp112 :moveTo.13:radius 0.5
   415 ucontrol approach :moveTo.13:x :moveTo.13:y *tmp112
   416 label *label107
 
   421 op add .angle .angle *tmp113
   422 op mul :locateOreAway:distance 3.8197185279121366 .angle
   423 ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp116 0
-    * op equal *tmp118 *tmp116 false
-    * jump *label109 equal *tmp118 false
+  424 jump *label109 notEqual *tmp116 false
   425 set *tmp91 false
   426 jump *label99 always
   427 jump *label110 always
 
   435 op sub *tmp125 :locateOreAway:x :locateOreAway:lx
   436 op sub *tmp126 :locateOreAway:y :locateOreAway:ly
   437 op len :locateOreAway:unitDist *tmp125 *tmp126
-    * op greaterThanEq *tmp128 :locateOreAway:coreDist 7
-    * jump *label111 equal *tmp128 false
-    * op lessThan *tmp130 :locateOreAway:unitDist :locateOreAway:distance
-    * jump *label113 equal *tmp130 false
+  438 jump *label111 lessThan :locateOreAway:coreDist 7
+  439 jump *label113 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
   440 set :visited:x :locateOreAway:x
   441 set :visited:y :locateOreAway:y
   442 set :visited:index 1
 
   450 op sub *tmp139 :visited:x :visited:lx
   451 op sub *tmp140 :visited:y :visited:ly
   452 op len *tmp141 *tmp139 *tmp140
-    * op lessThan *tmp142 *tmp141 7
-    * jump *label119 equal *tmp142 false
+  453 jump *label119 greaterThanEq *tmp141 7
   454 set *tmp132 true
   455 jump *label115 always
   456 jump *label120 always
 
   465 jump *label115 always
   466 set *tmp132 null
   467 label *label115
-    * op equal *tmp144 *tmp132 false
-    * jump *label121 equal *tmp144 false
+  468 jump *label121 notEqual *tmp132 false
   469 op div *tmp146 7.639437055824273 :locateOreAway:distance
   470 op add .angle .angle *tmp146
   471 set *tmp91 true
 
   488 label *label99
   489 set :findDrillLocationLocal:oreX :locateOreAway:x
   490 set :findDrillLocationLocal:oreY :locateOreAway:y
-    * op equal *tmp148 *tmp91 false
-    * jump *label123 equal *tmp148 false
+  491 jump *label123 notEqual *tmp91 false
   492 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   493 jump *label95 always
   494 jump *label124 always
 
   503 set :moveTo.15:radius 6
   504 label *label127
   505 ucontrol within :moveTo.15:x :moveTo.15:y :moveTo.15:radius *tmp153
-    * op equal *tmp154 *tmp153 false
-    * jump *label129 equal *tmp154 false
+  506 jump *label129 notEqual *tmp153 false
   507 op sub *tmp155 :moveTo.15:radius 0.5
   508 ucontrol approach :moveTo.15:x :moveTo.15:y *tmp155
   509 label *label128
 
   592 print " "
   593 print :findDrillLocationLocal:diffY
   594 print ")"
-    * op lessThan *tmp176 :updatePosition:value 0.0392156862745098
-    * jump *label143 equal *tmp176 false
-    * op greaterThan *tmp178 :updatePosition:value :findBestPosition:best
-    * jump *label145 equal *tmp178 false
+  595 jump *label143 greaterThanEq :updatePosition:value 0.0392156862745098
+  596 jump *label145 lessThanEq :updatePosition:value :findBestPosition:best
   597 set :findDrillLocationLocal:diffX :updatePosition:dx
   598 set :findDrillLocationLocal:diffY :updatePosition:dy
   599 set :findBestPosition:best :updatePosition:value
 
   622 print " "
   623 print :findDrillLocationLocal:diffY
   624 print ")"
-    * op lessThan *tmp181 :updatePosition.1:value 0.0392156862745098
-    * jump *label148 equal *tmp181 false
-    * op greaterThan *tmp183 :updatePosition.1:value :findBestPosition:best
-    * jump *label150 equal *tmp183 false
+  625 jump *label148 greaterThanEq :updatePosition.1:value 0.0392156862745098
+  626 jump *label150 lessThanEq :updatePosition.1:value :findBestPosition:best
   627 set :findDrillLocationLocal:diffX :updatePosition.1:dx
   628 set :findDrillLocationLocal:diffY :updatePosition.1:dy
   629 set :findBestPosition:best :updatePosition.1:value
 
   652 print " "
   653 print :findDrillLocationLocal:diffY
   654 print ")"
-    * op lessThan *tmp186 :updatePosition.2:value 0.0392156862745098
-    * jump *label153 equal *tmp186 false
-    * op greaterThan *tmp188 :updatePosition.2:value :findBestPosition:best
-    * jump *label155 equal *tmp188 false
+  655 jump *label153 greaterThanEq :updatePosition.2:value 0.0392156862745098
+  656 jump *label155 lessThanEq :updatePosition.2:value :findBestPosition:best
   657 set :findDrillLocationLocal:diffX :updatePosition.2:dx
   658 set :findDrillLocationLocal:diffY :updatePosition.2:dy
   659 set :findBestPosition:best :updatePosition.2:value
 
   696 print " "
   697 print :findDrillLocationLocal:diffY
   698 print ")"
-    * op lessThan *tmp193 :updatePosition.3:value 0.0392156862745098
-    * jump *label159 equal *tmp193 false
-    * op greaterThan *tmp195 :updatePosition.3:value :findBestPosition:best
-    * jump *label161 equal *tmp195 false
+  699 jump *label159 greaterThanEq :updatePosition.3:value 0.0392156862745098
+  700 jump *label161 lessThanEq :updatePosition.3:value :findBestPosition:best
   701 set :findDrillLocationLocal:diffX :updatePosition.3:dx
   702 set :findDrillLocationLocal:diffY :updatePosition.3:dy
   703 set :findBestPosition:best :updatePosition.3:value
 
   726 print " "
   727 print :findDrillLocationLocal:diffY
   728 print ")"
-    * op lessThan *tmp198 :updatePosition.4:value 0.0392156862745098
-    * jump *label164 equal *tmp198 false
-    * op greaterThan *tmp200 :updatePosition.4:value :findBestPosition:best
-    * jump *label166 equal *tmp200 false
+  729 jump *label164 greaterThanEq :updatePosition.4:value 0.0392156862745098
+  730 jump *label166 lessThanEq :updatePosition.4:value :findBestPosition:best
   731 set :findDrillLocationLocal:diffX :updatePosition.4:dx
   732 set :findDrillLocationLocal:diffY :updatePosition.4:dy
   733 set :findBestPosition:best :updatePosition.4:value
 
   756 print " "
   757 print :findDrillLocationLocal:diffY
   758 print ")"
-    * op lessThan *tmp203 :updatePosition.5:value 0.0392156862745098
-    * jump *label169 equal *tmp203 false
-    * op greaterThan *tmp205 :updatePosition.5:value :findBestPosition:best
-    * jump *label171 equal *tmp205 false
+  759 jump *label169 greaterThanEq :updatePosition.5:value 0.0392156862745098
+  760 jump *label171 lessThanEq :updatePosition.5:value :findBestPosition:best
   761 set :findDrillLocationLocal:diffX :updatePosition.5:dx
   762 set :findDrillLocationLocal:diffY :updatePosition.5:dy
   763 set :findBestPosition:best :updatePosition.5:value
 
   800 print " "
   801 print :findDrillLocationLocal:diffY
   802 print ")"
-    * op lessThan *tmp210 :updatePosition.6:value 0.0392156862745098
-    * jump *label175 equal *tmp210 false
-    * op greaterThan *tmp212 :updatePosition.6:value :findBestPosition:best
-    * jump *label177 equal *tmp212 false
+  803 jump *label175 greaterThanEq :updatePosition.6:value 0.0392156862745098
+  804 jump *label177 lessThanEq :updatePosition.6:value :findBestPosition:best
   805 set :findDrillLocationLocal:diffX :updatePosition.6:dx
   806 set :findDrillLocationLocal:diffY :updatePosition.6:dy
   807 set :findBestPosition:best :updatePosition.6:value
 
   830 print " "
   831 print :findDrillLocationLocal:diffY
   832 print ")"
-    * op lessThan *tmp215 :updatePosition.7:value 0.0392156862745098
-    * jump *label180 equal *tmp215 false
-    * op greaterThan *tmp217 :updatePosition.7:value :findBestPosition:best
-    * jump *label182 equal *tmp217 false
+  833 jump *label180 greaterThanEq :updatePosition.7:value 0.0392156862745098
+  834 jump *label182 lessThanEq :updatePosition.7:value :findBestPosition:best
   835 set :findDrillLocationLocal:diffX :updatePosition.7:dx
   836 set :findDrillLocationLocal:diffY :updatePosition.7:dy
   837 set :findBestPosition:best :updatePosition.7:value
 
   860 print " "
   861 print :findDrillLocationLocal:diffY
   862 print ")"
-    * op lessThan *tmp220 :updatePosition.8:value 0.0392156862745098
-    * jump *label185 equal *tmp220 false
-    * op greaterThan *tmp222 :updatePosition.8:value :findBestPosition:best
-    * jump *label187 equal *tmp222 false
+  863 jump *label185 greaterThanEq :updatePosition.8:value 0.0392156862745098
+  864 jump *label187 lessThanEq :updatePosition.8:value :findBestPosition:best
   865 set :findDrillLocationLocal:diffX :updatePosition.8:dx
   866 set :findDrillLocationLocal:diffY :updatePosition.8:dy
   867 set :findBestPosition:best :updatePosition.8:value
 
   920 print " "
   921 print :findDrillLocationLocal:diffY
   922 print ")"
-    * op lessThan *tmp231 :updatePosition.9:value 0.0392156862745098
-    * jump *label191 equal *tmp231 false
-    * op greaterThan *tmp233 :updatePosition.9:value :findBestPosition:best
-    * jump *label193 equal *tmp233 false
+  923 jump *label191 greaterThanEq :updatePosition.9:value 0.0392156862745098
+  924 jump *label193 lessThanEq :updatePosition.9:value :findBestPosition:best
   925 set :findDrillLocationLocal:diffX :updatePosition.9:dx
   926 set :findDrillLocationLocal:diffY :updatePosition.9:dy
   927 set :findBestPosition:best :updatePosition.9:value
 
   950 print " "
   951 print :findDrillLocationLocal:diffY
   952 print ")"
-    * op lessThan *tmp236 :updatePosition.10:value 0.0392156862745098
-    * jump *label196 equal *tmp236 false
-    * op greaterThan *tmp238 :updatePosition.10:value :findBestPosition:best
-    * jump *label198 equal *tmp238 false
+  953 jump *label196 greaterThanEq :updatePosition.10:value 0.0392156862745098
+  954 jump *label198 lessThanEq :updatePosition.10:value :findBestPosition:best
   955 set :findDrillLocationLocal:diffX :updatePosition.10:dx
   956 set :findDrillLocationLocal:diffY :updatePosition.10:dy
   957 set :findBestPosition:best :updatePosition.10:value
 
   980 print " "
   981 print :findDrillLocationLocal:diffY
   982 print ")"
-    * op lessThan *tmp241 :updatePosition.11:value 0.0392156862745098
-    * jump *label201 equal *tmp241 false
-    * op greaterThan *tmp243 :updatePosition.11:value :findBestPosition:best
-    * jump *label203 equal *tmp243 false
+  983 jump *label201 greaterThanEq :updatePosition.11:value 0.0392156862745098
+  984 jump *label203 lessThanEq :updatePosition.11:value :findBestPosition:best
   985 set :findDrillLocationLocal:diffX :updatePosition.11:dx
   986 set :findDrillLocationLocal:diffY :updatePosition.11:dy
   987 set :findBestPosition:best :updatePosition.11:value
 
  1010 print " "
  1011 print :findDrillLocationLocal:diffY
  1012 print ")"
-    * op lessThan *tmp246 :updatePosition.12:value 0.0392156862745098
-    * jump *label206 equal *tmp246 false
-    * op greaterThan *tmp248 :updatePosition.12:value :findBestPosition:best
-    * jump *label208 equal *tmp248 false
+ 1013 jump *label206 greaterThanEq :updatePosition.12:value 0.0392156862745098
+ 1014 jump *label208 lessThanEq :updatePosition.12:value :findBestPosition:best
  1015 set :findDrillLocationLocal:diffX :updatePosition.12:dx
  1016 set :findDrillLocationLocal:diffY :updatePosition.12:dy
  1017 set :findBestPosition:best :updatePosition.12:value
 
  1044 print " "
  1045 print :findDrillLocationLocal:diffY
  1046 print ")"
-    * op lessThan *tmp251 :updatePosition.13:value 0.0392156862745098
-    * jump *label212 equal *tmp251 false
-    * op greaterThan *tmp253 :updatePosition.13:value :findBestPosition:best
-    * jump *label214 equal *tmp253 false
+ 1047 jump *label212 greaterThanEq :updatePosition.13:value 0.0392156862745098
+ 1048 jump *label214 lessThanEq :updatePosition.13:value :findBestPosition:best
  1049 set :findDrillLocationLocal:diffX :updatePosition.13:dx
  1050 set :findDrillLocationLocal:diffY :updatePosition.13:dy
  1051 set :findBestPosition:best :updatePosition.13:value
 
  1074 print " "
  1075 print :findDrillLocationLocal:diffY
  1076 print ")"
-    * op lessThan *tmp256 :updatePosition.14:value 0.0392156862745098
-    * jump *label217 equal *tmp256 false
-    * op greaterThan *tmp258 :updatePosition.14:value :findBestPosition:best
-    * jump *label219 equal *tmp258 false
+ 1077 jump *label217 greaterThanEq :updatePosition.14:value 0.0392156862745098
+ 1078 jump *label219 lessThanEq :updatePosition.14:value :findBestPosition:best
  1079 set :findDrillLocationLocal:diffX :updatePosition.14:dx
  1080 set :findDrillLocationLocal:diffY :updatePosition.14:dy
  1081 set :findBestPosition:best :updatePosition.14:value
 
  1104 print " "
  1105 print :findDrillLocationLocal:diffY
  1106 print ")"
-    * op lessThan *tmp261 :updatePosition.15:value 0.0392156862745098
-    * jump *label222 equal *tmp261 false
-    * op greaterThan *tmp263 :updatePosition.15:value :findBestPosition:best
-    * jump *label224 equal *tmp263 false
+ 1107 jump *label222 greaterThanEq :updatePosition.15:value 0.0392156862745098
+ 1108 jump *label224 lessThanEq :updatePosition.15:value :findBestPosition:best
  1109 set :findDrillLocationLocal:diffX :updatePosition.15:dx
  1110 set :findDrillLocationLocal:diffY :updatePosition.15:dy
  1111 set :findBestPosition:best :updatePosition.15:value
 
  1134 print " "
  1135 print :findDrillLocationLocal:diffY
  1136 print ")"
-    * op lessThan *tmp266 :updatePosition.16:value 0.0392156862745098
-    * jump *label227 equal *tmp266 false
-    * op greaterThan *tmp268 :updatePosition.16:value :findBestPosition:best
-    * jump *label229 equal *tmp268 false
+ 1137 jump *label227 greaterThanEq :updatePosition.16:value 0.0392156862745098
+ 1138 jump *label229 lessThanEq :updatePosition.16:value :findBestPosition:best
  1139 set :findDrillLocationLocal:diffX :updatePosition.16:dx
  1140 set :findDrillLocationLocal:diffY :updatePosition.16:dy
  1141 set :findBestPosition:best :updatePosition.16:value
 
  1168 print " "
  1169 print :findDrillLocationLocal:diffY
  1170 print ")"
-    * op lessThan *tmp271 :updatePosition.17:value 0.0392156862745098
-    * jump *label233 equal *tmp271 false
-    * op greaterThan *tmp273 :updatePosition.17:value :findBestPosition:best
-    * jump *label235 equal *tmp273 false
+ 1171 jump *label233 greaterThanEq :updatePosition.17:value 0.0392156862745098
+ 1172 jump *label235 lessThanEq :updatePosition.17:value :findBestPosition:best
  1173 set :findDrillLocationLocal:diffX :updatePosition.17:dx
  1174 set :findDrillLocationLocal:diffY :updatePosition.17:dy
  1175 set :findBestPosition:best :updatePosition.17:value
 
  1198 print " "
  1199 print :findDrillLocationLocal:diffY
  1200 print ")"
-    * op lessThan *tmp276 :updatePosition.18:value 0.0392156862745098
-    * jump *label238 equal *tmp276 false
-    * op greaterThan *tmp278 :updatePosition.18:value :findBestPosition:best
-    * jump *label240 equal *tmp278 false
+ 1201 jump *label238 greaterThanEq :updatePosition.18:value 0.0392156862745098
+ 1202 jump *label240 lessThanEq :updatePosition.18:value :findBestPosition:best
  1203 set :findDrillLocationLocal:diffX :updatePosition.18:dx
  1204 set :findDrillLocationLocal:diffY :updatePosition.18:dy
  1205 set :findBestPosition:best :updatePosition.18:value
 
  1228 print " "
  1229 print :findDrillLocationLocal:diffY
  1230 print ")"
-    * op lessThan *tmp281 :updatePosition.19:value 0.0392156862745098
-    * jump *label243 equal *tmp281 false
-    * op greaterThan *tmp283 :updatePosition.19:value :findBestPosition:best
-    * jump *label245 equal *tmp283 false
+ 1231 jump *label243 greaterThanEq :updatePosition.19:value 0.0392156862745098
+ 1232 jump *label245 lessThanEq :updatePosition.19:value :findBestPosition:best
  1233 set :findDrillLocationLocal:diffX :updatePosition.19:dx
  1234 set :findDrillLocationLocal:diffY :updatePosition.19:dy
  1235 set :findBestPosition:best :updatePosition.19:value
 
  1258 print " "
  1259 print :findDrillLocationLocal:diffY
  1260 print ")"
-    * op lessThan *tmp286 :updatePosition.20:value 0.0392156862745098
-    * jump *label248 equal *tmp286 false
-    * op greaterThan *tmp288 :updatePosition.20:value :findBestPosition:best
-    * jump *label250 equal *tmp288 false
+ 1261 jump *label248 greaterThanEq :updatePosition.20:value 0.0392156862745098
+ 1262 jump *label250 lessThanEq :updatePosition.20:value :findBestPosition:best
  1263 set :findDrillLocationLocal:diffX :updatePosition.20:dx
  1264 set :findDrillLocationLocal:diffY :updatePosition.20:dy
  1265 set :findBestPosition:best :updatePosition.20:value
 
  1292 print " "
  1293 print :findDrillLocationLocal:diffY
  1294 print ")"
-    * op lessThan *tmp291 :updatePosition.21:value 0.0392156862745098
-    * jump *label254 equal *tmp291 false
-    * op greaterThan *tmp293 :updatePosition.21:value :findBestPosition:best
-    * jump *label256 equal *tmp293 false
+ 1295 jump *label254 greaterThanEq :updatePosition.21:value 0.0392156862745098
+ 1296 jump *label256 lessThanEq :updatePosition.21:value :findBestPosition:best
  1297 set :findDrillLocationLocal:diffX :updatePosition.21:dx
  1298 set :findDrillLocationLocal:diffY :updatePosition.21:dy
  1299 set :findBestPosition:best :updatePosition.21:value
 
  1322 print " "
  1323 print :findDrillLocationLocal:diffY
  1324 print ")"
-    * op lessThan *tmp296 :updatePosition.22:value 0.0392156862745098
-    * jump *label259 equal *tmp296 false
-    * op greaterThan *tmp298 :updatePosition.22:value :findBestPosition:best
-    * jump *label261 equal *tmp298 false
+ 1325 jump *label259 greaterThanEq :updatePosition.22:value 0.0392156862745098
+ 1326 jump *label261 lessThanEq :updatePosition.22:value :findBestPosition:best
  1327 set :findDrillLocationLocal:diffX :updatePosition.22:dx
  1328 set :findDrillLocationLocal:diffY :updatePosition.22:dy
  1329 set :findBestPosition:best :updatePosition.22:value
 
  1352 print " "
  1353 print :findDrillLocationLocal:diffY
  1354 print ")"
-    * op lessThan *tmp301 :updatePosition.23:value 0.0392156862745098
-    * jump *label264 equal *tmp301 false
-    * op greaterThan *tmp303 :updatePosition.23:value :findBestPosition:best
-    * jump *label266 equal *tmp303 false
+ 1355 jump *label264 greaterThanEq :updatePosition.23:value 0.0392156862745098
+ 1356 jump *label266 lessThanEq :updatePosition.23:value :findBestPosition:best
  1357 set :findDrillLocationLocal:diffX :updatePosition.23:dx
  1358 set :findDrillLocationLocal:diffY :updatePosition.23:dy
  1359 set :findBestPosition:best :updatePosition.23:value
 
  1382 print " "
  1383 print :findDrillLocationLocal:diffY
  1384 print ")"
-    * op lessThan *tmp306 :updatePosition.24:value 0.0392156862745098
-    * jump *label269 equal *tmp306 false
-    * op greaterThan *tmp308 :updatePosition.24:value :findBestPosition:best
-    * jump *label271 equal *tmp308 false
+ 1385 jump *label269 greaterThanEq :updatePosition.24:value 0.0392156862745098
+ 1386 jump *label271 lessThanEq :updatePosition.24:value :findBestPosition:best
  1387 set :findDrillLocationLocal:diffX :updatePosition.24:dx
  1388 set :findDrillLocationLocal:diffY :updatePosition.24:dy
  1389 set :findBestPosition:best :updatePosition.24:value
 
  1444 label *label280
  1445 label *label281
  1446 label *label279
-    * op greaterThan *tmp317 :findDrillLocationLocal:score :findDrillLocationLocal:capacity
-    * jump *label285 equal *tmp317 false
+ 1447 jump *label285 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:capacity
  1448 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1449 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1450 set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
  1451 set .bestSpot :findDrillLocationLocal:score
-    * op greaterThanEq *tmp321 :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
-    * jump *label287 equal *tmp321 false
+ 1452 jump *label287 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
  1453 ucontrol unbind
  1454 set :findDrillLocationLocal*retval true
  1455 jump *label95 always
 
  1459 jump *label286 always
  1460 label *label285
  1461 label *label286
-    * op greaterThan *tmp323 :findDrillLocationLocal:score :findDrillLocationLocal:best
-    * jump *label289 equal *tmp323 false
+ 1462 jump *label289 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
  1463 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1464 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1465 set :findDrillLocationLocal:best :findDrillLocationLocal:score
  1466 jump *label290 always
  1467 label *label289
  1468 label *label290
-    * op lessThanEq *tmp327 :findDrillLocationLocal:score :findDrillLocationLocal:last
-    * jump *label291 equal *tmp327 false
+ 1469 jump *label291 greaterThan :findDrillLocationLocal:score :findDrillLocationLocal:last
  1470 jump *label132 always
  1471 jump *label292 always
  1472 label *label291
 
  1487 op sub *tmp339 :findDrillLocationLocal:oreY .coreY
  1488 op abs *tmp340 *tmp339
  1489 op min *tmp341 *tmp338 *tmp340
-    * op lessThan *tmp342 *tmp341 7
-    * jump *label295 equal *tmp342 false
+ 1490 jump *label295 greaterThanEq *tmp341 7
  1491 jump *label132 always
  1492 jump *label296 always
  1493 label *label295
 
  1581 set :moveTo.17:radius 6
  1582 label *label308
  1583 ucontrol within :moveTo.17:x :moveTo.17:y :moveTo.17:radius *tmp364
-    * op equal *tmp365 *tmp364 false
-    * jump *label310 equal *tmp365 false
+ 1584 jump *label310 notEqual *tmp364 false
  1585 op sub *tmp366 :moveTo.17:radius 0.5
  1586 ucontrol approach :moveTo.17:x :moveTo.17:y *tmp366
  1587 label *label309
 
  1633 label *label320
  1634 op mul *tmp377 7 :shiftMask:shiftY
  1635 op add :shiftMask:shift :shiftMask:shiftX *tmp377
-    * op greaterThan *tmp379 :shiftMask:shift 0
-    * jump *label321 equal *tmp379 false
+ 1636 jump *label321 lessThanEq :shiftMask:shift 0
  1637 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
  1638 op and *tmp382 :shiftMask:mask :shiftMask:clearMask
  1639 op shl :shiftMask:mask *tmp382 :shiftMask:shift
 
  1642 op sub *tmp384 0 :shiftMask:shift
  1643 op shr :shiftMask:mask :shiftMask:mask *tmp384
  1644 label *label322
-    * op notEqual *tmp385 :shiftMask:shiftX 0
-    * jump *label323 equal *tmp385 false
+ 1645 jump *label323 equal :shiftMask:shiftX 0
  1646 op abs *tmp387 :shiftMask:shiftX
  1647 op sub *tmp388 7 *tmp387
  1648 op shr :shiftMask:keep 0b1111111 *tmp388
-    * op greaterThan *tmp390 :shiftMask:shiftX 0
-    * jump *label325 equal *tmp390 false
+ 1649 jump *label325 lessThanEq :shiftMask:shiftX 0
  1650 op abs *tmp392 :shiftMask:shiftX
  1651 op sub *tmp393 7 *tmp392
  1652 op shl :shiftMask:keep :shiftMask:keep *tmp393
 
  1680 label *label331
  1681 jump *label333 greaterThan :findPossiblePlacement:x 3
  1682 op and *tmp400 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
-    * op equal *tmp401 *tmp400 0
-    * jump *label334 equal *tmp401 false
+ 1683 jump *label334 notEqual *tmp400 0
  1684 op mul *tmp403 :findPossiblePlacement:y 7
  1685 op add *tmp404 24 *tmp403
  1686 op add :findPossiblePlacement*retval *tmp404 :findPossiblePlacement:x
 
  1689 label *label334
  1690 label *label335
  1691 op sub *tmp406 3 :findPossiblePlacement:width
-    * op greaterThan *tmp407 :findPossiblePlacement:x *tmp406
-    * jump *label336 equal *tmp407 false
+ 1692 jump *label336 lessThanEq :findPossiblePlacement:x *tmp406
  1693 jump *label333 always
  1694 jump *label337 always
  1695 label *label336
 
  1700 jump *label331 always
  1701 label *label333
  1702 op sub *tmp409 3 :findPossiblePlacement:height
-    * op greaterThan *tmp410 :findPossiblePlacement:y *tmp409
-    * jump *label338 equal *tmp410 false
+ 1703 jump *label338 lessThanEq :findPossiblePlacement:y *tmp409
  1704 jump *label330 always
  1705 jump *label339 always
  1706 label *label338
 
  1726 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1727 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1728 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op greaterThanEq *tmp413 :tryPlaceGenerator:shift 0
-    * jump *label342 equal *tmp413 false
+ 1729 jump *label342 lessThan :tryPlaceGenerator:shift 0
  1730 op add *tmp415 :tryPlaceGenerator:centerX 0.5
  1731 op add .water2X *tmp415 :tryPlaceGenerator:c
  1732 op add *tmp417 :tryPlaceGenerator:centerY 0.5
 
  1749 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1750 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1751 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp425 :tryPlaceGenerator:shift 0
-    * jump *label345 equal *tmp425 false
+ 1752 jump *label345 greaterThanEq :tryPlaceGenerator:shift 0
  1753 set :tryPlaceGenerator*retval false
  1754 jump *label340 always
  1755 jump *label346 always
 
  1776 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1777 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1778 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp437 :tryPlaceGenerator:shift 0
-    * jump *label348 equal *tmp437 false
+ 1779 jump *label348 greaterThanEq :tryPlaceGenerator:shift 0
  1780 set :tryPlaceGenerator*retval false
  1781 jump *label340 always
  1782 jump *label349 always
 
  1796 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1797 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1798 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp443 :tryPlaceGenerator:shift 0
-    * jump *label351 equal *tmp443 false
+ 1799 jump *label351 greaterThanEq :tryPlaceGenerator:shift 0
  1800 set :tryPlaceGenerator*retval false
  1801 jump *label340 always
  1802 jump *label352 always
 
  1886 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1887 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
  1888 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
-    * op greaterThanEq *tmp483 :layoutThoriumDrillAtLocation:shift 0
-    * jump *label359 equal *tmp483 false
+ 1889 jump *label359 lessThan :layoutThoriumDrillAtLocation:shift 0
  1890 op add *tmp485 .drillX 0.5
  1891 op add .water1X *tmp485 :layoutThoriumDrillAtLocation:c
  1892 op add *tmp487 .drillY 0.5
 
  2006 label *label379
  2007 set .drillX :findDrillLocationLocal:dx
  2008 set .drillY :findDrillLocationLocal:dy
-    * op equal *tmp514 :findDrillLocationLocal*retval false
-    * jump *label380 equal *tmp514 false
+ 2009 jump *label380 notEqual :findDrillLocationLocal*retval false
  2010 set :layoutThoriumDrill*retval false
  2011 jump *label378 always
  2012 jump *label381 always

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-85 instructions):
 
    78 label *label29
    79 ucontrol build :buildAt:x :buildAt:y :buildAt:block 0 null
    80 wait 0.1
-    * jump *label28 always
    81 label *label27
    82 label *label28
    83 label *label26
 
   104 label *label37
   105 ucontrol build :buildAt.1:x :buildAt.1:y :buildAt.1:block 0 null
   106 wait 0.1
-    * jump *label36 always
   107 label *label35
   108 label *label36
   109 label *label34
 
   130 label *label45
   131 ucontrol build :buildAt.2:x :buildAt.2:y :buildAt.2:block 0 null
   132 wait 0.1
-    * jump *label44 always
   133 label *label43
   134 label *label44
   135 label *label42
 
   156 label *label53
   157 ucontrol build :buildAt.3:x :buildAt.3:y :buildAt.3:block 0 null
   158 wait 0.1
-    * jump *label52 always
   159 label *label51
   160 label *label52
   161 label *label50
 
   182 label *label61
   183 ucontrol build :buildAt.4:x :buildAt.4:y :buildAt.4:block 0 null
   184 wait 0.1
-    * jump *label60 always
   185 label *label59
   186 label *label60
   187 label *label58
 
   208 label *label69
   209 ucontrol build :buildAt.5:x :buildAt.5:y :buildAt.5:block 0 null
   210 wait 0.1
-    * jump *label68 always
   211 label *label67
   212 label *label68
   213 label *label66
 
   223 sensor *tmp53 switch1 @enabled
   224 jump *label80 notEqual *tmp53 false
   225 label *label82
-    * jump *label79 always
   226 label *label78
   227 label *label79
   228 label *label77
   229 end
-    * jump *label76 always
   230 label *label75
   231 label *label76
   232 label *label74
 
   310 print " "
   311 print *tmp68
   312 print "\n"
-    * jump *label92 always
   313 label *label91
   314 label *label92
   315 label *label90
 
   415 jump *label109 notEqual *tmp116 false
   416 set *tmp91 false
   417 jump *label99 always
-    * jump *label110 always
   418 label *label109
   419 label *label110
   420 op sub *tmp120 :locateOreAway:x .coreX
 
   443 jump *label119 greaterThanEq *tmp141 7
   444 set *tmp132 true
   445 jump *label115 always
-    * jump *label120 always
   446 label *label119
   447 label *label120
   448 op add :visited:index :visited:index 3
 
   459 op add .angle .angle *tmp146
   460 set *tmp91 true
   461 jump *label99 always
-    * jump *label122 always
   462 label *label121
   463 label *label122
-    * jump *label114 always
   464 label *label113
   465 label *label114
-    * jump *label112 always
   466 label *label111
   467 label *label112
   468 label *label101
 
   477 jump *label123 notEqual *tmp91 false
   478 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   479 jump *label95 always
-    * jump *label124 always
   480 label *label123
   481 label *label124
   482 set :moveTo.14:x :findDrillLocationLocal:oreX
 
   582 set :findDrillLocationLocal:diffX :updatePosition:dx
   583 set :findDrillLocationLocal:diffY :updatePosition:dy
   584 set :findBestPosition:best :updatePosition:value
-    * jump *label146 always
   585 label *label145
   586 label *label146
-    * jump *label144 always
   587 label *label143
   588 label *label144
   589 print "\n"
 
   610 set :findDrillLocationLocal:diffX :updatePosition.1:dx
   611 set :findDrillLocationLocal:diffY :updatePosition.1:dy
   612 set :findBestPosition:best :updatePosition.1:value
-    * jump *label151 always
   613 label *label150
   614 label *label151
-    * jump *label149 always
   615 label *label148
   616 label *label149
   617 print "\n"
 
   638 set :findDrillLocationLocal:diffX :updatePosition.2:dx
   639 set :findDrillLocationLocal:diffY :updatePosition.2:dy
   640 set :findBestPosition:best :updatePosition.2:value
-    * jump *label156 always
   641 label *label155
   642 label *label156
-    * jump *label154 always
   643 label *label153
   644 label *label154
   645 print "\n"
 
   680 set :findDrillLocationLocal:diffX :updatePosition.3:dx
   681 set :findDrillLocationLocal:diffY :updatePosition.3:dy
   682 set :findBestPosition:best :updatePosition.3:value
-    * jump *label162 always
   683 label *label161
   684 label *label162
-    * jump *label160 always
   685 label *label159
   686 label *label160
   687 print "\n"
 
   708 set :findDrillLocationLocal:diffX :updatePosition.4:dx
   709 set :findDrillLocationLocal:diffY :updatePosition.4:dy
   710 set :findBestPosition:best :updatePosition.4:value
-    * jump *label167 always
   711 label *label166
   712 label *label167
-    * jump *label165 always
   713 label *label164
   714 label *label165
   715 print "\n"
 
   736 set :findDrillLocationLocal:diffX :updatePosition.5:dx
   737 set :findDrillLocationLocal:diffY :updatePosition.5:dy
   738 set :findBestPosition:best :updatePosition.5:value
-    * jump *label172 always
   739 label *label171
   740 label *label172
-    * jump *label170 always
   741 label *label169
   742 label *label170
   743 print "\n"
 
   778 set :findDrillLocationLocal:diffX :updatePosition.6:dx
   779 set :findDrillLocationLocal:diffY :updatePosition.6:dy
   780 set :findBestPosition:best :updatePosition.6:value
-    * jump *label178 always
   781 label *label177
   782 label *label178
-    * jump *label176 always
   783 label *label175
   784 label *label176
   785 print "\n"
 
   806 set :findDrillLocationLocal:diffX :updatePosition.7:dx
   807 set :findDrillLocationLocal:diffY :updatePosition.7:dy
   808 set :findBestPosition:best :updatePosition.7:value
-    * jump *label183 always
   809 label *label182
   810 label *label183
-    * jump *label181 always
   811 label *label180
   812 label *label181
   813 print "\n"
 
   834 set :findDrillLocationLocal:diffX :updatePosition.8:dx
   835 set :findDrillLocationLocal:diffY :updatePosition.8:dy
   836 set :findBestPosition:best :updatePosition.8:value
-    * jump *label188 always
   837 label *label187
   838 label *label188
-    * jump *label186 always
   839 label *label185
   840 label *label186
   841 print "\n"
 
   892 set :findDrillLocationLocal:diffX :updatePosition.9:dx
   893 set :findDrillLocationLocal:diffY :updatePosition.9:dy
   894 set :findBestPosition:best :updatePosition.9:value
-    * jump *label194 always
   895 label *label193
   896 label *label194
-    * jump *label192 always
   897 label *label191
   898 label *label192
   899 print "\n"
 
   920 set :findDrillLocationLocal:diffX :updatePosition.10:dx
   921 set :findDrillLocationLocal:diffY :updatePosition.10:dy
   922 set :findBestPosition:best :updatePosition.10:value
-    * jump *label199 always
   923 label *label198
   924 label *label199
-    * jump *label197 always
   925 label *label196
   926 label *label197
   927 print "\n"
 
   948 set :findDrillLocationLocal:diffX :updatePosition.11:dx
   949 set :findDrillLocationLocal:diffY :updatePosition.11:dy
   950 set :findBestPosition:best :updatePosition.11:value
-    * jump *label204 always
   951 label *label203
   952 label *label204
-    * jump *label202 always
   953 label *label201
   954 label *label202
   955 print "\n"
 
   976 set :findDrillLocationLocal:diffX :updatePosition.12:dx
   977 set :findDrillLocationLocal:diffY :updatePosition.12:dy
   978 set :findBestPosition:best :updatePosition.12:value
-    * jump *label209 always
   979 label *label208
   980 label *label209
-    * jump *label207 always
   981 label *label206
   982 label *label207
   983 print "\n"
 
  1008 set :findDrillLocationLocal:diffX :updatePosition.13:dx
  1009 set :findDrillLocationLocal:diffY :updatePosition.13:dy
  1010 set :findBestPosition:best :updatePosition.13:value
-    * jump *label215 always
  1011 label *label214
  1012 label *label215
-    * jump *label213 always
  1013 label *label212
  1014 label *label213
  1015 print "\n"
 
  1036 set :findDrillLocationLocal:diffX :updatePosition.14:dx
  1037 set :findDrillLocationLocal:diffY :updatePosition.14:dy
  1038 set :findBestPosition:best :updatePosition.14:value
-    * jump *label220 always
  1039 label *label219
  1040 label *label220
-    * jump *label218 always
  1041 label *label217
  1042 label *label218
  1043 print "\n"
 
  1064 set :findDrillLocationLocal:diffX :updatePosition.15:dx
  1065 set :findDrillLocationLocal:diffY :updatePosition.15:dy
  1066 set :findBestPosition:best :updatePosition.15:value
-    * jump *label225 always
  1067 label *label224
  1068 label *label225
-    * jump *label223 always
  1069 label *label222
  1070 label *label223
  1071 print "\n"
 
  1092 set :findDrillLocationLocal:diffX :updatePosition.16:dx
  1093 set :findDrillLocationLocal:diffY :updatePosition.16:dy
  1094 set :findBestPosition:best :updatePosition.16:value
-    * jump *label230 always
  1095 label *label229
  1096 label *label230
-    * jump *label228 always
  1097 label *label227
  1098 label *label228
  1099 print "\n"
 
  1124 set :findDrillLocationLocal:diffX :updatePosition.17:dx
  1125 set :findDrillLocationLocal:diffY :updatePosition.17:dy
  1126 set :findBestPosition:best :updatePosition.17:value
-    * jump *label236 always
  1127 label *label235
  1128 label *label236
-    * jump *label234 always
  1129 label *label233
  1130 label *label234
  1131 print "\n"
 
  1152 set :findDrillLocationLocal:diffX :updatePosition.18:dx
  1153 set :findDrillLocationLocal:diffY :updatePosition.18:dy
  1154 set :findBestPosition:best :updatePosition.18:value
-    * jump *label241 always
  1155 label *label240
  1156 label *label241
-    * jump *label239 always
  1157 label *label238
  1158 label *label239
  1159 print "\n"
 
  1180 set :findDrillLocationLocal:diffX :updatePosition.19:dx
  1181 set :findDrillLocationLocal:diffY :updatePosition.19:dy
  1182 set :findBestPosition:best :updatePosition.19:value
-    * jump *label246 always
  1183 label *label245
  1184 label *label246
-    * jump *label244 always
  1185 label *label243
  1186 label *label244
  1187 print "\n"
 
  1208 set :findDrillLocationLocal:diffX :updatePosition.20:dx
  1209 set :findDrillLocationLocal:diffY :updatePosition.20:dy
  1210 set :findBestPosition:best :updatePosition.20:value
-    * jump *label251 always
  1211 label *label250
  1212 label *label251
-    * jump *label249 always
  1213 label *label248
  1214 label *label249
  1215 print "\n"
 
  1240 set :findDrillLocationLocal:diffX :updatePosition.21:dx
  1241 set :findDrillLocationLocal:diffY :updatePosition.21:dy
  1242 set :findBestPosition:best :updatePosition.21:value
-    * jump *label257 always
  1243 label *label256
  1244 label *label257
-    * jump *label255 always
  1245 label *label254
  1246 label *label255
  1247 print "\n"
 
  1268 set :findDrillLocationLocal:diffX :updatePosition.22:dx
  1269 set :findDrillLocationLocal:diffY :updatePosition.22:dy
  1270 set :findBestPosition:best :updatePosition.22:value
-    * jump *label262 always
  1271 label *label261
  1272 label *label262
-    * jump *label260 always
  1273 label *label259
  1274 label *label260
  1275 print "\n"
 
  1296 set :findDrillLocationLocal:diffX :updatePosition.23:dx
  1297 set :findDrillLocationLocal:diffY :updatePosition.23:dy
  1298 set :findBestPosition:best :updatePosition.23:value
-    * jump *label267 always
  1299 label *label266
  1300 label *label267
-    * jump *label265 always
  1301 label *label264
  1302 label *label265
  1303 print "\n"
 
  1324 set :findDrillLocationLocal:diffX :updatePosition.24:dx
  1325 set :findDrillLocationLocal:diffY :updatePosition.24:dy
  1326 set :findBestPosition:best :updatePosition.24:value
-    * jump *label272 always
  1327 label *label271
  1328 label *label272
-    * jump *label270 always
  1329 label *label269
  1330 label *label270
  1331 print "\n"
 
  1340 sensor *tmp312 switch1 @enabled
  1341 jump *label276 notEqual *tmp312 false
  1342 label *label278
-    * jump *label275 always
  1343 label *label274
  1344 label *label275
  1345 label *label273
 
  1374 sensor *tmp316 switch1 @enabled
  1375 jump *label282 notEqual *tmp316 false
  1376 label *label284
-    * jump *label281 always
  1377 label *label280
  1378 label *label281
  1379 label *label279
 
  1386 ucontrol unbind
  1387 set :findDrillLocationLocal*retval true
  1388 jump *label95 always
-    * jump *label288 always
  1389 label *label287
  1390 label *label288
-    * jump *label286 always
  1391 label *label285
  1392 label *label286
  1393 jump *label289 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
  1394 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1395 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1396 set :findDrillLocationLocal:best :findDrillLocationLocal:score
-    * jump *label290 always
  1397 label *label289
  1398 label *label290
  1399 jump *label291 greaterThan :findDrillLocationLocal:score :findDrillLocationLocal:last
  1400 jump *label132 always
-    * jump *label292 always
  1401 label *label291
  1402 label *label292
  1403 set :findDrillLocationLocal:last :findDrillLocationLocal:score
 
  1418 op min *tmp341 *tmp338 *tmp340
  1419 jump *label295 greaterThanEq *tmp341 7
  1420 jump *label132 always
-    * jump *label296 always
  1421 label *label295
  1422 label *label296
  1423 label *label131
 
  1556 jump *label319 equal *tmp375 false
  1557 set :shiftMask*retval 0
  1558 jump *label318 always
-    * jump *label320 always
  1559 label *label319
  1560 label *label320
  1561 op mul *tmp377 7 :shiftMask:shiftY
 
  1577 op abs *tmp392 :shiftMask:shiftX
  1578 op sub *tmp393 7 *tmp392
  1579 op shl :shiftMask:keep :shiftMask:keep *tmp393
-    * jump *label326 always
  1580 label *label325
  1581 label *label326
  1582 op shl *tmp394 :shiftMask:keep 7
 
  1586 op shl *tmp396 :shiftMask:keep 21
  1587 op or :shiftMask:keep :shiftMask:keep *tmp396
  1588 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
-    * jump *label324 always
  1589 label *label323
  1590 label *label324
  1591 set :shiftMask*retval :shiftMask:mask
 
  1610 op add *tmp404 24 *tmp403
  1611 op add :findPossiblePlacement*retval *tmp404 :findPossiblePlacement:x
  1612 jump *label327 always
-    * jump *label335 always
  1613 label *label334
  1614 label *label335
  1615 op sub *tmp406 3 :findPossiblePlacement:width
  1616 jump *label336 lessThanEq :findPossiblePlacement:x *tmp406
  1617 jump *label333 always
-    * jump *label337 always
  1618 label *label336
  1619 label *label337
  1620 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
 
  1625 op sub *tmp409 3 :findPossiblePlacement:height
  1626 jump *label338 lessThanEq :findPossiblePlacement:y *tmp409
  1627 jump *label330 always
-    * jump *label339 always
  1628 label *label338
  1629 label *label339
  1630 label *label329
 
  1674 jump *label345 greaterThanEq :tryPlaceGenerator:shift 0
  1675 set :tryPlaceGenerator*retval false
  1676 jump *label340 always
-    * jump *label346 always
  1677 label *label345
  1678 label *label346
  1679 op add *tmp427 :tryPlaceGenerator:centerX 0.5
 
  1700 jump *label348 greaterThanEq :tryPlaceGenerator:shift 0
  1701 set :tryPlaceGenerator*retval false
  1702 jump *label340 always
-    * jump *label349 always
  1703 label *label348
  1704 label *label349
  1705 op add .nodeX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
 
  1719 jump *label351 greaterThanEq :tryPlaceGenerator:shift 0
  1720 set :tryPlaceGenerator*retval false
  1721 jump *label340 always
-    * jump *label352 always
  1722 label *label351
  1723 label *label352
  1724 op add .panelX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
 
  1812 op add .water1Y *tmp487 :layoutThoriumDrillAtLocation:r
  1813 op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:shift
  1814 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
-    * jump *label360 always
  1815 label *label359
  1816 label *label360
  1817 set :createFixedMatrix.3:row0 0b1111
 
  1845 jump *label364 equal :tryPlaceGenerator*retval false
  1846 set :layoutThoriumDrillAtLocation*retval true
  1847 jump *label353 always
-    * jump *label365 always
  1848 label *label364
  1849 label *label365
  1850 set :layoutThoriumDrillAtLocation:sx 3
 
  1897 jump *label376 equal :tryPlaceGenerator*retval false
  1898 set :layoutThoriumDrillAtLocation*retval true
  1899 jump *label353 always
-    * jump *label377 always
  1900 label *label376
  1901 label *label377
  1902 label *label367
 
  1925 jump *label380 notEqual :findDrillLocationLocal*retval false
  1926 set :layoutThoriumDrill*retval false
  1927 jump *label378 always
-    * jump *label381 always
  1928 label *label380
  1929 label *label381
  1930 setaddr :layoutThoriumDrillAtLocation*retaddr *label382 (h:*label382)

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1:
 
   256 set *tmp57 :spotValue.1:result
   257 label *label86
   258 set :computeRowValues:x2 *tmp57
-    * op add :spotValue.2:x :computeRowValues:x 0
+  259 set :spotValue.2:x :computeRowValues:x
   260 set :spotValue.2:y :computeRowValues:y
   261 set :spotValue.2:ore :computeRowValues:ore
   262 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
 
   520 call *label5 *invalid :computeRowValues*retval (m:*label135) (h:*label135)
   521 label *label135
   522 set :findBestPosition:y2 :computeRowValues*retval
-    * op add *tmp161 :findBestPosition:y 0
+  523 set *tmp161 :findBestPosition:y
   524 set :computeRowValues:x :findBestPosition:x
   525 set :computeRowValues:y *tmp161
   526 set :computeRowValues:ore :findBestPosition:ore
 
  1751 set :createFixedMatrix:row4 0b0011100
  1752 set :createFixedMatrix:row5 0b0000000
  1753 set :createFixedMatrix:row6 0b0000000
-    * op shl *tmp449 :createFixedMatrix:row0 0
+ 1754 set *tmp449 :createFixedMatrix:row0
  1755 op shl *tmp450 :createFixedMatrix:row1 7
  1756 op or *tmp451 *tmp449 *tmp450
  1757 op shl *tmp452 :createFixedMatrix:row2 14
 
  1773 set :createFixedMatrix.1:row4 0b0011100
  1774 set :createFixedMatrix.1:row5 0b0000000
  1775 set :createFixedMatrix.1:row6 0b1000001
-    * op shl *tmp464 :createFixedMatrix.1:row0 0
+ 1776 set *tmp464 :createFixedMatrix.1:row0
  1777 op shl *tmp465 :createFixedMatrix.1:row1 7
  1778 op or *tmp466 *tmp464 *tmp465
  1779 op shl *tmp467 :createFixedMatrix.1:row2 14
 
  1790 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp463
  1791 set :createFixedMatrix.2:row0 0b11
  1792 set :createFixedMatrix.2:row1 0b11
-    * op shl *tmp479 :createFixedMatrix.2:row0 0
+ 1793 set *tmp479 :createFixedMatrix.2:row0
  1794 op shl *tmp480 :createFixedMatrix.2:row1 7
  1795 op or *tmp478 *tmp479 *tmp480
  1796 label *label357
 
  1816 label *label360
  1817 set :createFixedMatrix.3:row0 0b1111
  1818 set :createFixedMatrix.3:row1 0b1111
-    * op shl *tmp490 :createFixedMatrix.3:row0 0
+ 1819 set *tmp490 :createFixedMatrix.3:row0
  1820 op shl *tmp491 :createFixedMatrix.3:row1 7
  1821 op or *tmp489 *tmp490 *tmp491
  1822 label *label361
 
  1825 set :createFixedMatrix.4:row1 0b11
  1826 set :createFixedMatrix.4:row2 0b11
  1827 set :createFixedMatrix.4:row3 0b11
-    * op shl *tmp494 :createFixedMatrix.4:row0 0
+ 1828 set *tmp494 :createFixedMatrix.4:row0
  1829 op shl *tmp495 :createFixedMatrix.4:row1 7
  1830 op or *tmp496 *tmp494 *tmp495
  1831 op shl *tmp497 :createFixedMatrix.4:row2 14

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-24 instructions):
 
     2 jump *label1 always
     3 label *label14
     4 set .attenuationRate 50
-    * set .debug false
     5 set .debug true
     6 printflush message1
     7 printflush message1
 
    15 set :moveTo:y :y
    16 set :moveTo:radius 1
    17 label *label19
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp3
+   18 ucontrol within :x :y 1 *tmp3
    19 jump *label21 notEqual *tmp3 false
-    * op sub *tmp5 :moveTo:radius 0.5
-    * ucontrol approach :moveTo:x :moveTo:y *tmp5
+   20 op sub *tmp5 1 0.5
+   21 ucontrol approach :x :y 0.5
    22 label *label20
    23 jump *label19 always
    24 label *label21
 
    38 set :dy :findDrillLocationLocal:dy
    39 set :capacity :findDrillLocationLocal:capacity
    40 print "Found "
-    * print :capacity
+   41 print :findDrillLocationLocal:capacity
    42 print " "
    43 print "at "
-    * print :dx
+   44 print :findDrillLocationLocal:dx
    45 print ","
    46 print " "
-    * print :dy
+   47 print :findDrillLocationLocal:dy
    48 print "."
    49 print "\n"
    50 jump *label23 always
 
    56 label *label25
    57 set :buildAt:x .drillX
    58 set :buildAt:y .drillY
-    * set :buildAt:block @laser-drill
    59 jump *label27 lessThan :buildAt:x 0
    60 set :moveTo.1:x :buildAt:x
    61 set :moveTo.1:y :buildAt:y
-    * set *tmp10 :moveTo.1:x
-    * set *tmp11 :moveTo.1:y
-    * set :moveTo.2:x *tmp10
-    * set :moveTo.2:y *tmp11
-    * set :moveTo.2:radius 6
+   62 set *tmp10 :buildAt:x
+   63 set *tmp11 :buildAt:y
+   64 set :moveTo.2:x :moveTo.1:x
+   65 set :moveTo.2:y :moveTo.1:y
    66 label *label31
-    * ucontrol within :moveTo.2:x :moveTo.2:y :moveTo.2:radius *tmp12
+   67 ucontrol within *tmp10 *tmp11 6 *tmp12
    68 jump *label33 notEqual *tmp12 false
-    * op sub *tmp14 :moveTo.2:radius 0.5
-    * ucontrol approach :moveTo.2:x :moveTo.2:y *tmp14
+   69 op sub *tmp14 6 0.5
+   70 ucontrol approach *tmp10 *tmp11 5.5
    71 label *label32
    72 jump *label31 always
    73 label *label33
    74 label *label30
    75 label *label29
-    * ucontrol build :buildAt:x :buildAt:y :buildAt:block 0 null
+   76 ucontrol build :buildAt:x :buildAt:y @laser-drill 0 null
    77 wait 0.1
    78 label *label27
    79 label *label28
    80 label *label26
    81 set :buildAt.1:x .water1X
    82 set :buildAt.1:y .water1Y
-    * set :buildAt.1:block @water-extractor
    83 jump *label35 lessThan :buildAt.1:x 0
    84 set :moveTo.3:x :buildAt.1:x
    85 set :moveTo.3:y :buildAt.1:y
-    * set *tmp17 :moveTo.3:x
-    * set *tmp18 :moveTo.3:y
-    * set :moveTo.4:x *tmp17
-    * set :moveTo.4:y *tmp18
-    * set :moveTo.4:radius 6
+   86 set *tmp17 :buildAt.1:x
+   87 set *tmp18 :buildAt.1:y
+   88 set :moveTo.4:x :moveTo.3:x
+   89 set :moveTo.4:y :moveTo.3:y
    90 label *label39
-    * ucontrol within :moveTo.4:x :moveTo.4:y :moveTo.4:radius *tmp19
+   91 ucontrol within *tmp17 *tmp18 6 *tmp19
    92 jump *label41 notEqual *tmp19 false
-    * op sub *tmp21 :moveTo.4:radius 0.5
-    * ucontrol approach :moveTo.4:x :moveTo.4:y *tmp21
+   93 op sub *tmp21 6 0.5
+   94 ucontrol approach *tmp17 *tmp18 5.5
    95 label *label40
    96 jump *label39 always
    97 label *label41
    98 label *label38
    99 label *label37
-    * ucontrol build :buildAt.1:x :buildAt.1:y :buildAt.1:block 0 null
+  100 ucontrol build :buildAt.1:x :buildAt.1:y @water-extractor 0 null
   101 wait 0.1
   102 label *label35
   103 label *label36
   104 label *label34
   105 set :buildAt.2:x .water2X
   106 set :buildAt.2:y .water2Y
-    * set :buildAt.2:block @water-extractor
   107 jump *label43 lessThan :buildAt.2:x 0
   108 set :moveTo.5:x :buildAt.2:x
   109 set :moveTo.5:y :buildAt.2:y
-    * set *tmp24 :moveTo.5:x
-    * set *tmp25 :moveTo.5:y
-    * set :moveTo.6:x *tmp24
-    * set :moveTo.6:y *tmp25
-    * set :moveTo.6:radius 6
+  110 set *tmp24 :buildAt.2:x
+  111 set *tmp25 :buildAt.2:y
+  112 set :moveTo.6:x :moveTo.5:x
+  113 set :moveTo.6:y :moveTo.5:y
   114 label *label47
-    * ucontrol within :moveTo.6:x :moveTo.6:y :moveTo.6:radius *tmp26
+  115 ucontrol within *tmp24 *tmp25 6 *tmp26
   116 jump *label49 notEqual *tmp26 false
-    * op sub *tmp28 :moveTo.6:radius 0.5
-    * ucontrol approach :moveTo.6:x :moveTo.6:y *tmp28
+  117 op sub *tmp28 6 0.5
+  118 ucontrol approach *tmp24 *tmp25 5.5
   119 label *label48
   120 jump *label47 always
   121 label *label49
   122 label *label46
   123 label *label45
-    * ucontrol build :buildAt.2:x :buildAt.2:y :buildAt.2:block 0 null
+  124 ucontrol build :buildAt.2:x :buildAt.2:y @water-extractor 0 null
   125 wait 0.1
   126 label *label43
   127 label *label44
   128 label *label42
   129 set :buildAt.3:x .generatorX
   130 set :buildAt.3:y .generatorY
-    * set :buildAt.3:block @steam-generator
   131 jump *label51 lessThan :buildAt.3:x 0
   132 set :moveTo.7:x :buildAt.3:x
   133 set :moveTo.7:y :buildAt.3:y
-    * set *tmp31 :moveTo.7:x
-    * set *tmp32 :moveTo.7:y
-    * set :moveTo.8:x *tmp31
-    * set :moveTo.8:y *tmp32
-    * set :moveTo.8:radius 6
+  134 set *tmp31 :buildAt.3:x
+  135 set *tmp32 :buildAt.3:y
+  136 set :moveTo.8:x :moveTo.7:x
+  137 set :moveTo.8:y :moveTo.7:y
   138 label *label55
-    * ucontrol within :moveTo.8:x :moveTo.8:y :moveTo.8:radius *tmp33
+  139 ucontrol within *tmp31 *tmp32 6 *tmp33
   140 jump *label57 notEqual *tmp33 false
-    * op sub *tmp35 :moveTo.8:radius 0.5
-    * ucontrol approach :moveTo.8:x :moveTo.8:y *tmp35
+  141 op sub *tmp35 6 0.5
+  142 ucontrol approach *tmp31 *tmp32 5.5
   143 label *label56
   144 jump *label55 always
   145 label *label57
   146 label *label54
   147 label *label53
-    * ucontrol build :buildAt.3:x :buildAt.3:y :buildAt.3:block 0 null
+  148 ucontrol build :buildAt.3:x :buildAt.3:y @steam-generator 0 null
   149 wait 0.1
   150 label *label51
   151 label *label52
   152 label *label50
   153 set :buildAt.4:x .nodeX
   154 set :buildAt.4:y .nodeY
-    * set :buildAt.4:block @power-node
   155 jump *label59 lessThan :buildAt.4:x 0
   156 set :moveTo.9:x :buildAt.4:x
   157 set :moveTo.9:y :buildAt.4:y
-    * set *tmp38 :moveTo.9:x
-    * set *tmp39 :moveTo.9:y
-    * set :moveTo.10:x *tmp38
-    * set :moveTo.10:y *tmp39
-    * set :moveTo.10:radius 6
+  158 set *tmp38 :buildAt.4:x
+  159 set *tmp39 :buildAt.4:y
+  160 set :moveTo.10:x :moveTo.9:x
+  161 set :moveTo.10:y :moveTo.9:y
   162 label *label63
-    * ucontrol within :moveTo.10:x :moveTo.10:y :moveTo.10:radius *tmp40
+  163 ucontrol within *tmp38 *tmp39 6 *tmp40
   164 jump *label65 notEqual *tmp40 false
-    * op sub *tmp42 :moveTo.10:radius 0.5
-    * ucontrol approach :moveTo.10:x :moveTo.10:y *tmp42
+  165 op sub *tmp42 6 0.5
+  166 ucontrol approach *tmp38 *tmp39 5.5
   167 label *label64
   168 jump *label63 always
   169 label *label65
   170 label *label62
   171 label *label61
-    * ucontrol build :buildAt.4:x :buildAt.4:y :buildAt.4:block 0 null
+  172 ucontrol build :buildAt.4:x :buildAt.4:y @power-node 0 null
   173 wait 0.1
   174 label *label59
   175 label *label60
   176 label *label58
   177 set :buildAt.5:x .panelX
   178 set :buildAt.5:y .panelY
-    * set :buildAt.5:block @solar-panel
   179 jump *label67 lessThan :buildAt.5:x 0
   180 set :moveTo.11:x :buildAt.5:x
   181 set :moveTo.11:y :buildAt.5:y
-    * set *tmp45 :moveTo.11:x
-    * set *tmp46 :moveTo.11:y
-    * set :moveTo.12:x *tmp45
-    * set :moveTo.12:y *tmp46
-    * set :moveTo.12:radius 6
+  182 set *tmp45 :buildAt.5:x
+  183 set *tmp46 :buildAt.5:y
+  184 set :moveTo.12:x :moveTo.11:x
+  185 set :moveTo.12:y :moveTo.11:y
   186 label *label71
-    * ucontrol within :moveTo.12:x :moveTo.12:y :moveTo.12:radius *tmp47
+  187 ucontrol within *tmp45 *tmp46 6 *tmp47
   188 jump *label73 notEqual *tmp47 false
-    * op sub *tmp49 :moveTo.12:radius 0.5
-    * ucontrol approach :moveTo.12:x :moveTo.12:y *tmp49
+  189 op sub *tmp49 6 0.5
+  190 ucontrol approach *tmp45 *tmp46 5.5
   191 label *label72
   192 jump *label71 always
   193 label *label73
   194 label *label70
   195 label *label69
-    * ucontrol build :buildAt.5:x :buildAt.5:y :buildAt.5:block 0 null
+  196 ucontrol build :buildAt.5:x :buildAt.5:y @solar-panel 0 null
   197 wait 0.1
   198 label *label67
   199 label *label68
   200 label *label66
   201 label *label23
   202 set :debugStop:format "Finished."
-    * jump *label75 equal .debug false
-    * print :debugStop:format
-    * jump *label78 equal .debug false
+  203 jump *label75 equal true false
+  204 print "Finished."
+  205 jump *label78 equal true false
   206 printflush message1
   207 control enabled switch1 true
   208 label *label80
 
   217 label *label75
   218 label *label76
   219 label *label74
-    * set *signature "ed92997f66c3d80:v1"
   220 label *label83
   221 wait 1e12
   222 jump *label83 always
 
   231 select :spotValue:result equal type @air value 0.06274509803921569
   232 set *tmp55 :spotValue:result
   233 label *label85
-    * set :computeRowValues:x1 *tmp55
+  234 set :computeRowValues:x1 :spotValue:result
   235 op sub :spotValue.1:x :computeRowValues:x 1
   236 set :spotValue.1:y :computeRowValues:y
   237 set :spotValue.1:ore :computeRowValues:ore
 
   241 select :spotValue.1:result equal type @air value 0.06274509803921569
   242 set *tmp57 :spotValue.1:result
   243 label *label86
-    * set :computeRowValues:x2 *tmp57
+  244 set :computeRowValues:x2 :spotValue.1:result
   245 set :spotValue.2:x :computeRowValues:x
   246 set :spotValue.2:y :computeRowValues:y
   247 set :spotValue.2:ore :computeRowValues:ore
 
   251 select :spotValue.2:result equal type @air value 0.06274509803921569
   252 set *tmp59 :spotValue.2:result
   253 label *label87
-    * set :computeRowValues:x3 *tmp59
+  254 set :computeRowValues:x3 :spotValue.2:result
   255 op add :spotValue.3:x :computeRowValues:x 1
   256 set :spotValue.3:y :computeRowValues:y
   257 set :spotValue.3:ore :computeRowValues:ore
 
   261 select :spotValue.3:result equal type @air value 0.06274509803921569
   262 set *tmp61 :spotValue.3:result
   263 label *label88
-    * set :computeRowValues:x4 *tmp61
+  264 set :computeRowValues:x4 :spotValue.3:result
   265 op add :spotValue.4:x :computeRowValues:x 2
   266 set :spotValue.4:y :computeRowValues:y
   267 set :spotValue.4:ore :computeRowValues:ore
 
   271 select :spotValue.4:result equal type @air value 0.06274509803921569
   272 set *tmp63 :spotValue.4:result
   273 label *label89
-    * set :computeRowValues:x5 *tmp63
-    * op mul *tmp64 :computeRowValues:x1 255
-    * op mul *tmp65 :computeRowValues:x2 255
-    * op mul *tmp66 :computeRowValues:x3 255
-    * op mul *tmp67 :computeRowValues:x4 255
-    * op mul *tmp68 :computeRowValues:x5 255
+  274 set :computeRowValues:x5 :spotValue.4:result
+  275 op mul *tmp64 *tmp55 255
+  276 op mul *tmp65 *tmp57 255
+  277 op mul *tmp66 *tmp59 255
+  278 op mul *tmp67 *tmp61 255
+  279 op mul *tmp68 *tmp63 255
   280 jump *label91 equal .debug false
   281 print "Spot values for row "
   282 print :computeRowValues:y
 
   300 label *label92
   301 label *label90
   302 jump *label93 equal :computeRowValues:large false
-    * op add *tmp71 :computeRowValues:x1 :computeRowValues:x2
-    * op add *tmp72 *tmp71 :computeRowValues:x3
-    * op add *tmp73 :computeRowValues:x2 :computeRowValues:x3
-    * op add *tmp74 *tmp73 :computeRowValues:x4
-    * op add *tmp75 :computeRowValues:x3 :computeRowValues:x4
-    * op add *tmp76 *tmp75 :computeRowValues:x5
+  303 op add *tmp71 *tmp55 *tmp57
+  304 op add *tmp72 *tmp71 *tmp59
+  305 op add *tmp73 *tmp57 *tmp59
+  306 op add *tmp74 *tmp73 *tmp61
+  307 op add *tmp75 *tmp59 *tmp61
+  308 op add *tmp76 *tmp75 *tmp63
   309 packcolor :computeRowValues*retval *tmp72 *tmp74 *tmp76 0
   310 jump *label84 always
-    * set *tmp70 null
   311 jump *label94 always
   312 label *label93
-    * op add *tmp78 :computeRowValues:x1 :computeRowValues:x2
-    * op add *tmp79 :computeRowValues:x2 :computeRowValues:x3
-    * op add *tmp80 :computeRowValues:x3 :computeRowValues:x4
-    * op add *tmp81 :computeRowValues:x4 :computeRowValues:x5
+  313 op add *tmp78 *tmp55 *tmp57
+  314 op add *tmp79 *tmp57 *tmp59
+  315 op add *tmp80 *tmp59 *tmp61
+  316 op add *tmp81 *tmp61 *tmp63
   317 packcolor :computeRowValues*retval *tmp78 *tmp79 *tmp80 *tmp81
   318 jump *label84 always
-    * set *tmp70 null
   319 label *label94
-    * set :computeRowValues*retval *tmp70
+  320 set :computeRowValues*retval null
   321 label *label84
   322 return :computeRowValues*retaddr
   323 end
 
   325 set .locations 0
   326 set .coreX :findDrillLocationLocal:x
   327 set .coreY :findDrillLocationLocal:y
-    * op sub *tmp83 @mapw .coreX
-    * op sub *tmp84 @maph .coreY
-    * op max *tmp85 .coreX .coreY
+  328 op sub *tmp83 @mapw :findDrillLocationLocal:x
+  329 op sub *tmp84 @maph :findDrillLocationLocal:y
+  330 op max *tmp85 :findDrillLocationLocal:x :findDrillLocationLocal:y
   331 op max *tmp85 *tmp85 *tmp83
   332 op max *tmp85 *tmp85 *tmp84
   333 set :findDrillLocationLocal:distanceLimit *tmp85
   334 ubind :findDrillLocationLocal:unit
   335 set .angle 0
-    * op div .maxAngle :findDrillLocationLocal:distanceLimit 3.8197185279121366
+  336 op div .maxAngle *tmp85 3.8197185279121366
   337 set :findDrillLocationLocal:count -1
   338 set :findDrillLocationLocal:oreX 0
   339 set :findDrillLocationLocal:oreY 0
 
   356 op mul :locateOreAway:distance 3.8197185279121366 .angle
   357 op max .angle .angle @pi
   358 label *label100
-    * jump *label102 greaterThanEq :locateOreAway:distance :locateOreAway:distanceLimit
+  359 jump *label102 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   360 op div :locateOreAway:a .angle @degToRad
   361 op sin *tmp96 :locateOreAway:a
   362 op mul *tmp97 *tmp96 :locateOreAway:distance
 
   365 set :limit:value *tmp98
   366 set :limit:low 5
   367 set :limit:high *tmp99
-    * op max *tmp101 :limit:value :limit:low
-    * op min *tmp100 *tmp101 :limit:high
+  368 op max *tmp101 *tmp98 5
+  369 op min *tmp100 *tmp101 *tmp99
   370 label *label103
   371 set :locateOreAway:lx *tmp100
   372 op cos *tmp103 :locateOreAway:a
 
   376 set :limit.1:value *tmp105
   377 set :limit.1:low 5
   378 set :limit.1:high *tmp106
-    * op max *tmp108 :limit.1:value :limit.1:low
-    * op min *tmp107 *tmp108 :limit.1:high
+  379 op max *tmp108 *tmp105 5
+  380 op min *tmp107 *tmp108 *tmp106
   381 label *label104
   382 set :locateOreAway:ly *tmp107
-    * set :moveTo.13:x :locateOreAway:lx
-    * set :moveTo.13:y :locateOreAway:ly
+  383 set :moveTo.13:x *tmp100
+  384 set :moveTo.13:y *tmp107
   385 set :moveTo.13:radius 5
   386 label *label106
-    * ucontrol within :moveTo.13:x :moveTo.13:y :moveTo.13:radius *tmp110
+  387 ucontrol within :locateOreAway:lx :locateOreAway:ly 5 *tmp110
   388 jump *label108 notEqual *tmp110 false
-    * op sub *tmp112 :moveTo.13:radius 0.5
-    * ucontrol approach :moveTo.13:x :moveTo.13:y *tmp112
+  389 op sub *tmp112 5 0.5
+  390 ucontrol approach :locateOreAway:lx :locateOreAway:ly 4.5
   391 label *label107
   392 jump *label106 always
   393 label *label108
 
   395 op div *tmp113 3.8197185279121366 :locateOreAway:distance
   396 op add .angle .angle *tmp113
   397 op mul :locateOreAway:distance 3.8197185279121366 .angle
-    * ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp116 0
+  398 ulocate ore core true :findDrillLocationLocal:item :locateOreAway:x :locateOreAway:y *tmp116 0
   399 jump *label109 notEqual *tmp116 false
   400 set *tmp91 false
   401 jump *label99 always
 
   406 op sub *tmp122 :locateOreAway:y .coreY
   407 op abs *tmp123 *tmp122
   408 op max :locateOreAway:coreDist *tmp121 *tmp123
-    * op sub *tmp125 :locateOreAway:x :locateOreAway:lx
-    * op sub *tmp126 :locateOreAway:y :locateOreAway:ly
+  409 op sub *tmp125 :locateOreAway:x *tmp100
+  410 op sub *tmp126 :locateOreAway:y *tmp107
   411 op len :locateOreAway:unitDist *tmp125 *tmp126
   412 jump *label111 lessThan :locateOreAway:coreDist 7
   413 jump *label113 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
 
   417 set *tmp133 .locations
   418 set :visited:i 0
   419 label *label116
-    * jump *label118 greaterThanEq :visited:i *tmp133
+  420 jump *label118 greaterThanEq :visited:i .locations
   421 read :visited:lx bank1 :visited:index
   422 op add *tmp136 :visited:index 1
   423 read :visited:ly bank1 *tmp136
-    * op sub *tmp139 :visited:x :visited:lx
-    * op sub *tmp140 :visited:y :visited:ly
+  424 op sub *tmp139 :locateOreAway:x :visited:lx
+  425 op sub *tmp140 :locateOreAway:y :visited:ly
   426 op len *tmp141 *tmp139 *tmp140
   427 jump *label119 greaterThanEq *tmp141 7
   428 set *tmp132 true
 
   436 label *label118
   437 set *tmp132 false
   438 jump *label115 always
-    * set *tmp132 null
   439 label *label115
   440 jump *label121 notEqual *tmp132 false
   441 op div *tmp146 7.639437055824273 :locateOreAway:distance
 
   453 label *label102
   454 set *tmp91 false
   455 jump *label99 always
-    * set *tmp91 null
   456 label *label99
   457 set :findDrillLocationLocal:oreX :locateOreAway:x
   458 set :findDrillLocationLocal:oreY :locateOreAway:y
 
   461 jump *label95 always
   462 label *label123
   463 label *label124
-    * set :moveTo.14:x :findDrillLocationLocal:oreX
-    * set :moveTo.14:y :findDrillLocationLocal:oreY
-    * set *tmp151 :moveTo.14:x
-    * set *tmp152 :moveTo.14:y
-    * set :moveTo.15:x *tmp151
-    * set :moveTo.15:y *tmp152
+  464 set :moveTo.14:x :locateOreAway:x
+  465 set :moveTo.14:y :locateOreAway:y
+  466 set *tmp151 :findDrillLocationLocal:oreX
+  467 set *tmp152 :findDrillLocationLocal:oreY
+  468 set :moveTo.15:x :moveTo.14:x
+  469 set :moveTo.15:y :moveTo.14:y
   470 set :moveTo.15:radius 6
   471 label *label127
-    * ucontrol within :moveTo.15:x :moveTo.15:y :moveTo.15:radius *tmp153
+  472 ucontrol within *tmp151 *tmp152 6 *tmp153
   473 jump *label129 notEqual *tmp153 false
-    * op sub *tmp155 :moveTo.15:radius 0.5
-    * ucontrol approach :moveTo.15:x :moveTo.15:y *tmp155
+  474 op sub *tmp155 6 0.5
+  475 ucontrol approach *tmp151 *tmp152 5.5
   476 label *label128
   477 jump *label127 always
   478 label *label129
 
   484 set :findBestPosition:y :findDrillLocationLocal:oreY
   485 set :findBestPosition:ore :findDrillLocationLocal:ore
   486 set :findBestPosition:large :findDrillLocationLocal:large
-    * op sub *tmp157 :findBestPosition:y 2
-    * set :computeRowValues:x :findBestPosition:x
+  487 op sub *tmp157 :findDrillLocationLocal:oreY 2
+  488 set :computeRowValues:x :findDrillLocationLocal:oreX
   489 set :computeRowValues:y *tmp157
-    * set :computeRowValues:ore :findBestPosition:ore
-    * set :computeRowValues:large :findBestPosition:large
+  490 set :computeRowValues:ore :findDrillLocationLocal:ore
+  491 set :computeRowValues:large :findDrillLocationLocal:large
   492 setaddr :computeRowValues*retaddr *label134 (h:*label134)
   493 call *label5 *invalid :computeRowValues*retval (m:*label134) (h:*label134)
   494 label *label134
 
   504 set :findBestPosition:y2 :computeRowValues*retval
   505 set *tmp161 :findBestPosition:y
   506 set :computeRowValues:x :findBestPosition:x
-    * set :computeRowValues:y *tmp161
+  507 set :computeRowValues:y :findBestPosition:y
   508 set :computeRowValues:ore :findBestPosition:ore
   509 set :computeRowValues:large :findBestPosition:large
   510 setaddr :computeRowValues*retaddr *label136 (h:*label136)
 
   538 op add *tmp170 :findBestPosition:y2 :findBestPosition:y3
   539 op add :findBestPosition:row2 *tmp170 :findBestPosition:y4
   540 op add *tmp172 :findBestPosition:y3 :findBestPosition:y4
-    * op add :findBestPosition:row3 *tmp172 :findBestPosition:y5
+  541 op add :findBestPosition:row3 *tmp172 :computeRowValues*retval
   542 set :updateRowPositions3:dy -1
   543 set :updateRowPositions3:row :findBestPosition:row1
-    * unpackcolor :updateRowPositions3:col1 :updateRowPositions3:col2 :updateRowPositions3:col3 0 :updateRowPositions3:row
+  544 unpackcolor :updateRowPositions3:col1 :updateRowPositions3:col2 :updateRowPositions3:col3 0 :findBestPosition:row1
   545 set :updatePosition:dx -1
-    * set :updatePosition:dy :updateRowPositions3:dy
+  546 set :updatePosition:dy -1
   547 set :updatePosition:value :updateRowPositions3:col1
-    * op mul *tmp175 :updatePosition:value 255
+  548 op mul *tmp175 :updateRowPositions3:col1 255
   549 print *tmp175
   550 print " at "
-    * print :updatePosition:dx
+  551 print -1
   552 print ","
   553 print " "
-    * print :updatePosition:dy
+  554 print :updateRowPositions3:dy
   555 print " "
   556 print "("
-    * print :findDrillLocationLocal:diffX
+  557 print 0
   558 print ","
   559 print " "
-    * print :findDrillLocationLocal:diffY
+  560 print 0
   561 print ")"
-    * jump *label143 greaterThanEq :updatePosition:value 0.0392156862745098
-    * jump *label145 lessThanEq :updatePosition:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition:dx
-    * set :findDrillLocationLocal:diffY :updatePosition:dy
-    * set :findBestPosition:best :updatePosition:value
+  562 jump *label143 greaterThanEq :updateRowPositions3:col1 0.0392156862745098
+  563 jump *label145 lessThanEq :updateRowPositions3:col1 0
+  564 set :findDrillLocationLocal:diffX -1
+  565 set :findDrillLocationLocal:diffY :updateRowPositions3:dy
+  566 set :findBestPosition:best :updateRowPositions3:col1
   567 label *label145
   568 label *label146
   569 label *label143
 
   571 print "\n"
   572 label *label142
   573 set :updatePosition.1:dx 0
-    * set :updatePosition.1:dy :updateRowPositions3:dy
+  574 set :updatePosition.1:dy -1
   575 set :updatePosition.1:value :updateRowPositions3:col2
-    * op mul *tmp180 :updatePosition.1:value 255
+  576 op mul *tmp180 :updateRowPositions3:col2 255
   577 print *tmp180
   578 print " at "
-    * print :updatePosition.1:dx
+  579 print 0
   580 print ","
   581 print " "
-    * print :updatePosition.1:dy
+  582 print :updateRowPositions3:dy
   583 print " "
   584 print "("
   585 print :findDrillLocationLocal:diffX
 
   587 print " "
   588 print :findDrillLocationLocal:diffY
   589 print ")"
-    * jump *label148 greaterThanEq :updatePosition.1:value 0.0392156862745098
-    * jump *label150 lessThanEq :updatePosition.1:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.1:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.1:dy
-    * set :findBestPosition:best :updatePosition.1:value
+  590 jump *label148 greaterThanEq :updateRowPositions3:col2 0.0392156862745098
+  591 jump *label150 lessThanEq :updateRowPositions3:col2 :findBestPosition:best
+  592 set :findDrillLocationLocal:diffX 0
+  593 set :findDrillLocationLocal:diffY :updateRowPositions3:dy
+  594 set :findBestPosition:best :updateRowPositions3:col2
   595 label *label150
   596 label *label151
   597 label *label148
 
   599 print "\n"
   600 label *label147
   601 set :updatePosition.2:dx 1
-    * set :updatePosition.2:dy :updateRowPositions3:dy
+  602 set :updatePosition.2:dy -1
   603 set :updatePosition.2:value :updateRowPositions3:col3
-    * op mul *tmp185 :updatePosition.2:value 255
+  604 op mul *tmp185 :updateRowPositions3:col3 255
   605 print *tmp185
   606 print " at "
-    * print :updatePosition.2:dx
+  607 print 1
   608 print ","
   609 print " "
-    * print :updatePosition.2:dy
+  610 print :updateRowPositions3:dy
   611 print " "
   612 print "("
   613 print :findDrillLocationLocal:diffX
 
   615 print " "
   616 print :findDrillLocationLocal:diffY
   617 print ")"
-    * jump *label153 greaterThanEq :updatePosition.2:value 0.0392156862745098
-    * jump *label155 lessThanEq :updatePosition.2:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.2:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.2:dy
-    * set :findBestPosition:best :updatePosition.2:value
+  618 jump *label153 greaterThanEq :updateRowPositions3:col3 0.0392156862745098
+  619 jump *label155 lessThanEq :updateRowPositions3:col3 :findBestPosition:best
+  620 set :findDrillLocationLocal:diffX 1
+  621 set :findDrillLocationLocal:diffY :updateRowPositions3:dy
+  622 set :findBestPosition:best :updateRowPositions3:col3
   623 label *label155
   624 label *label156
   625 label *label153
 
   639 label *label141
   640 set :updateRowPositions3.1:dy 0
   641 set :updateRowPositions3.1:row :findBestPosition:row2
-    * unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 0 :updateRowPositions3.1:row
+  642 unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 0 :findBestPosition:row2
   643 set :updatePosition.3:dx -1
-    * set :updatePosition.3:dy :updateRowPositions3.1:dy
+  644 set :updatePosition.3:dy 0
   645 set :updatePosition.3:value :updateRowPositions3.1:col1
-    * op mul *tmp192 :updatePosition.3:value 255
+  646 op mul *tmp192 :updateRowPositions3.1:col1 255
   647 print *tmp192
   648 print " at "
-    * print :updatePosition.3:dx
+  649 print -1
   650 print ","
   651 print " "
-    * print :updatePosition.3:dy
+  652 print :updateRowPositions3.1:dy
   653 print " "
   654 print "("
   655 print :findDrillLocationLocal:diffX
 
   657 print " "
   658 print :findDrillLocationLocal:diffY
   659 print ")"
-    * jump *label159 greaterThanEq :updatePosition.3:value 0.0392156862745098
-    * jump *label161 lessThanEq :updatePosition.3:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.3:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.3:dy
-    * set :findBestPosition:best :updatePosition.3:value
+  660 jump *label159 greaterThanEq :updateRowPositions3.1:col1 0.0392156862745098
+  661 jump *label161 lessThanEq :updateRowPositions3.1:col1 :findBestPosition:best
+  662 set :findDrillLocationLocal:diffX -1
+  663 set :findDrillLocationLocal:diffY :updateRowPositions3.1:dy
+  664 set :findBestPosition:best :updateRowPositions3.1:col1
   665 label *label161
   666 label *label162
   667 label *label159
 
   669 print "\n"
   670 label *label158
   671 set :updatePosition.4:dx 0
-    * set :updatePosition.4:dy :updateRowPositions3.1:dy
+  672 set :updatePosition.4:dy 0
   673 set :updatePosition.4:value :updateRowPositions3.1:col2
-    * op mul *tmp197 :updatePosition.4:value 255
+  674 op mul *tmp197 :updateRowPositions3.1:col2 255
   675 print *tmp197
   676 print " at "
-    * print :updatePosition.4:dx
+  677 print 0
   678 print ","
   679 print " "
-    * print :updatePosition.4:dy
+  680 print :updateRowPositions3.1:dy
   681 print " "
   682 print "("
   683 print :findDrillLocationLocal:diffX
 
   685 print " "
   686 print :findDrillLocationLocal:diffY
   687 print ")"
-    * jump *label164 greaterThanEq :updatePosition.4:value 0.0392156862745098
-    * jump *label166 lessThanEq :updatePosition.4:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.4:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.4:dy
-    * set :findBestPosition:best :updatePosition.4:value
+  688 jump *label164 greaterThanEq :updateRowPositions3.1:col2 0.0392156862745098
+  689 jump *label166 lessThanEq :updateRowPositions3.1:col2 :findBestPosition:best
+  690 set :findDrillLocationLocal:diffX 0
+  691 set :findDrillLocationLocal:diffY :updateRowPositions3.1:dy
+  692 set :findBestPosition:best :updateRowPositions3.1:col2
   693 label *label166
   694 label *label167
   695 label *label164
 
   697 print "\n"
   698 label *label163
   699 set :updatePosition.5:dx 1
-    * set :updatePosition.5:dy :updateRowPositions3.1:dy
+  700 set :updatePosition.5:dy 0
   701 set :updatePosition.5:value :updateRowPositions3.1:col3
-    * op mul *tmp202 :updatePosition.5:value 255
+  702 op mul *tmp202 :updateRowPositions3.1:col3 255
   703 print *tmp202
   704 print " at "
-    * print :updatePosition.5:dx
+  705 print 1
   706 print ","
   707 print " "
-    * print :updatePosition.5:dy
+  708 print :updateRowPositions3.1:dy
   709 print " "
   710 print "("
   711 print :findDrillLocationLocal:diffX
 
   713 print " "
   714 print :findDrillLocationLocal:diffY
   715 print ")"
-    * jump *label169 greaterThanEq :updatePosition.5:value 0.0392156862745098
-    * jump *label171 lessThanEq :updatePosition.5:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.5:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.5:dy
-    * set :findBestPosition:best :updatePosition.5:value
+  716 jump *label169 greaterThanEq :updateRowPositions3.1:col3 0.0392156862745098
+  717 jump *label171 lessThanEq :updateRowPositions3.1:col3 :findBestPosition:best
+  718 set :findDrillLocationLocal:diffX 1
+  719 set :findDrillLocationLocal:diffY :updateRowPositions3.1:dy
+  720 set :findBestPosition:best :updateRowPositions3.1:col3
   721 label *label171
   722 label *label172
   723 label *label169
 
   737 label *label157
   738 set :updateRowPositions3.2:dy 1
   739 set :updateRowPositions3.2:row :findBestPosition:row3
-    * unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 0 :updateRowPositions3.2:row
+  740 unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 0 :findBestPosition:row3
   741 set :updatePosition.6:dx -1
-    * set :updatePosition.6:dy :updateRowPositions3.2:dy
+  742 set :updatePosition.6:dy 1
   743 set :updatePosition.6:value :updateRowPositions3.2:col1
-    * op mul *tmp209 :updatePosition.6:value 255
+  744 op mul *tmp209 :updateRowPositions3.2:col1 255
   745 print *tmp209
   746 print " at "
-    * print :updatePosition.6:dx
+  747 print -1
   748 print ","
   749 print " "
-    * print :updatePosition.6:dy
+  750 print :updateRowPositions3.2:dy
   751 print " "
   752 print "("
   753 print :findDrillLocationLocal:diffX
 
   755 print " "
   756 print :findDrillLocationLocal:diffY
   757 print ")"
-    * jump *label175 greaterThanEq :updatePosition.6:value 0.0392156862745098
-    * jump *label177 lessThanEq :updatePosition.6:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.6:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.6:dy
-    * set :findBestPosition:best :updatePosition.6:value
+  758 jump *label175 greaterThanEq :updateRowPositions3.2:col1 0.0392156862745098
+  759 jump *label177 lessThanEq :updateRowPositions3.2:col1 :findBestPosition:best
+  760 set :findDrillLocationLocal:diffX -1
+  761 set :findDrillLocationLocal:diffY :updateRowPositions3.2:dy
+  762 set :findBestPosition:best :updateRowPositions3.2:col1
   763 label *label177
   764 label *label178
   765 label *label175
 
   767 print "\n"
   768 label *label174
   769 set :updatePosition.7:dx 0
-    * set :updatePosition.7:dy :updateRowPositions3.2:dy
+  770 set :updatePosition.7:dy 1
   771 set :updatePosition.7:value :updateRowPositions3.2:col2
-    * op mul *tmp214 :updatePosition.7:value 255
+  772 op mul *tmp214 :updateRowPositions3.2:col2 255
   773 print *tmp214
   774 print " at "
-    * print :updatePosition.7:dx
+  775 print 0
   776 print ","
   777 print " "
-    * print :updatePosition.7:dy
+  778 print :updateRowPositions3.2:dy
   779 print " "
   780 print "("
   781 print :findDrillLocationLocal:diffX
 
   783 print " "
   784 print :findDrillLocationLocal:diffY
   785 print ")"
-    * jump *label180 greaterThanEq :updatePosition.7:value 0.0392156862745098
-    * jump *label182 lessThanEq :updatePosition.7:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.7:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.7:dy
-    * set :findBestPosition:best :updatePosition.7:value
+  786 jump *label180 greaterThanEq :updateRowPositions3.2:col2 0.0392156862745098
+  787 jump *label182 lessThanEq :updateRowPositions3.2:col2 :findBestPosition:best
+  788 set :findDrillLocationLocal:diffX 0
+  789 set :findDrillLocationLocal:diffY :updateRowPositions3.2:dy
+  790 set :findBestPosition:best :updateRowPositions3.2:col2
   791 label *label182
   792 label *label183
   793 label *label180
 
   795 print "\n"
   796 label *label179
   797 set :updatePosition.8:dx 1
-    * set :updatePosition.8:dy :updateRowPositions3.2:dy
+  798 set :updatePosition.8:dy 1
   799 set :updatePosition.8:value :updateRowPositions3.2:col3
-    * op mul *tmp219 :updatePosition.8:value 255
+  800 op mul *tmp219 :updateRowPositions3.2:col3 255
   801 print *tmp219
   802 print " at "
-    * print :updatePosition.8:dx
+  803 print 1
   804 print ","
   805 print " "
-    * print :updatePosition.8:dy
+  806 print :updateRowPositions3.2:dy
   807 print " "
   808 print "("
   809 print :findDrillLocationLocal:diffX
 
   811 print " "
   812 print :findDrillLocationLocal:diffY
   813 print ")"
-    * jump *label185 greaterThanEq :updatePosition.8:value 0.0392156862745098
-    * jump *label187 lessThanEq :updatePosition.8:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.8:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.8:dy
-    * set :findBestPosition:best :updatePosition.8:value
+  814 jump *label185 greaterThanEq :updateRowPositions3.2:col3 0.0392156862745098
+  815 jump *label187 lessThanEq :updateRowPositions3.2:col3 :findBestPosition:best
+  816 set :findDrillLocationLocal:diffX 1
+  817 set :findDrillLocationLocal:diffY :updateRowPositions3.2:dy
+  818 set :findBestPosition:best :updateRowPositions3.2:col3
   819 label *label187
   820 label *label188
   821 label *label185
 
   841 print :findDrillLocationLocal:diffY
   842 print ":"
   843 print " "
-    * print *tmp225
+  844 print *tmp224
   845 print "\n"
   846 jump *label140 always
   847 label *label139
   848 op add :findBestPosition:row1.1 :findBestPosition:y1 :findBestPosition:y2
   849 op add :findBestPosition:row2.1 :findBestPosition:y2 :findBestPosition:y3
   850 op add :findBestPosition:row3.1 :findBestPosition:y3 :findBestPosition:y4
-    * op add :findBestPosition:row4 :findBestPosition:y4 :findBestPosition:y5
+  851 op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
   852 set :updateRowPositions4:dy -1.5
   853 set :updateRowPositions4:row :findBestPosition:row1.1
-    * unpackcolor :updateRowPositions4:col1 :updateRowPositions4:col2 :updateRowPositions4:col3 :updateRowPositions4:col4 :updateRowPositions4:row
+  854 unpackcolor :updateRowPositions4:col1 :updateRowPositions4:col2 :updateRowPositions4:col3 :updateRowPositions4:col4 :findBestPosition:row1.1
   855 set :updatePosition.9:dx -1.5
-    * set :updatePosition.9:dy :updateRowPositions4:dy
+  856 set :updatePosition.9:dy -1.5
   857 set :updatePosition.9:value :updateRowPositions4:col1
-    * op mul *tmp230 :updatePosition.9:value 255
+  858 op mul *tmp230 :updateRowPositions4:col1 255
   859 print *tmp230
   860 print " at "
-    * print :updatePosition.9:dx
+  861 print -1.5
   862 print ","
   863 print " "
-    * print :updatePosition.9:dy
+  864 print :updateRowPositions4:dy
   865 print " "
   866 print "("
-    * print :findDrillLocationLocal:diffX
+  867 print 0
   868 print ","
   869 print " "
-    * print :findDrillLocationLocal:diffY
+  870 print 0
   871 print ")"
-    * jump *label191 greaterThanEq :updatePosition.9:value 0.0392156862745098
-    * jump *label193 lessThanEq :updatePosition.9:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.9:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.9:dy
-    * set :findBestPosition:best :updatePosition.9:value
+  872 jump *label191 greaterThanEq :updateRowPositions4:col1 0.0392156862745098
+  873 jump *label193 lessThanEq :updateRowPositions4:col1 0
+  874 set :findDrillLocationLocal:diffX -1.5
+  875 set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  876 set :findBestPosition:best :updateRowPositions4:col1
   877 label *label193
   878 label *label194
   879 label *label191
 
   881 print "\n"
   882 label *label190
   883 set :updatePosition.10:dx -0.5
-    * set :updatePosition.10:dy :updateRowPositions4:dy
+  884 set :updatePosition.10:dy -1.5
   885 set :updatePosition.10:value :updateRowPositions4:col2
-    * op mul *tmp235 :updatePosition.10:value 255
+  886 op mul *tmp235 :updateRowPositions4:col2 255
   887 print *tmp235
   888 print " at "
-    * print :updatePosition.10:dx
+  889 print -0.5
   890 print ","
   891 print " "
-    * print :updatePosition.10:dy
+  892 print :updateRowPositions4:dy
   893 print " "
   894 print "("
   895 print :findDrillLocationLocal:diffX
 
   897 print " "
   898 print :findDrillLocationLocal:diffY
   899 print ")"
-    * jump *label196 greaterThanEq :updatePosition.10:value 0.0392156862745098
-    * jump *label198 lessThanEq :updatePosition.10:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.10:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.10:dy
-    * set :findBestPosition:best :updatePosition.10:value
+  900 jump *label196 greaterThanEq :updateRowPositions4:col2 0.0392156862745098
+  901 jump *label198 lessThanEq :updateRowPositions4:col2 :findBestPosition:best
+  902 set :findDrillLocationLocal:diffX -0.5
+  903 set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  904 set :findBestPosition:best :updateRowPositions4:col2
   905 label *label198
   906 label *label199
   907 label *label196
 
   909 print "\n"
   910 label *label195
   911 set :updatePosition.11:dx 0.5
-    * set :updatePosition.11:dy :updateRowPositions4:dy
+  912 set :updatePosition.11:dy -1.5
   913 set :updatePosition.11:value :updateRowPositions4:col3
-    * op mul *tmp240 :updatePosition.11:value 255
+  914 op mul *tmp240 :updateRowPositions4:col3 255
   915 print *tmp240
   916 print " at "
-    * print :updatePosition.11:dx
+  917 print 0.5
   918 print ","
   919 print " "
-    * print :updatePosition.11:dy
+  920 print :updateRowPositions4:dy
   921 print " "
   922 print "("
   923 print :findDrillLocationLocal:diffX
 
   925 print " "
   926 print :findDrillLocationLocal:diffY
   927 print ")"
-    * jump *label201 greaterThanEq :updatePosition.11:value 0.0392156862745098
-    * jump *label203 lessThanEq :updatePosition.11:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.11:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.11:dy
-    * set :findBestPosition:best :updatePosition.11:value
+  928 jump *label201 greaterThanEq :updateRowPositions4:col3 0.0392156862745098
+  929 jump *label203 lessThanEq :updateRowPositions4:col3 :findBestPosition:best
+  930 set :findDrillLocationLocal:diffX 0.5
+  931 set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  932 set :findBestPosition:best :updateRowPositions4:col3
   933 label *label203
   934 label *label204
   935 label *label201
 
   937 print "\n"
   938 label *label200
   939 set :updatePosition.12:dx 1.5
-    * set :updatePosition.12:dy :updateRowPositions4:dy
+  940 set :updatePosition.12:dy -1.5
   941 set :updatePosition.12:value :updateRowPositions4:col4
-    * op mul *tmp245 :updatePosition.12:value 255
+  942 op mul *tmp245 :updateRowPositions4:col4 255
   943 print *tmp245
   944 print " at "
-    * print :updatePosition.12:dx
+  945 print 1.5
   946 print ","
   947 print " "
-    * print :updatePosition.12:dy
+  948 print :updateRowPositions4:dy
   949 print " "
   950 print "("
   951 print :findDrillLocationLocal:diffX
 
   953 print " "
   954 print :findDrillLocationLocal:diffY
   955 print ")"
-    * jump *label206 greaterThanEq :updatePosition.12:value 0.0392156862745098
-    * jump *label208 lessThanEq :updatePosition.12:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.12:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.12:dy
-    * set :findBestPosition:best :updatePosition.12:value
+  956 jump *label206 greaterThanEq :updateRowPositions4:col4 0.0392156862745098
+  957 jump *label208 lessThanEq :updateRowPositions4:col4 :findBestPosition:best
+  958 set :findDrillLocationLocal:diffX 1.5
+  959 set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  960 set :findBestPosition:best :updateRowPositions4:col4
   961 label *label208
   962 label *label209
   963 label *label206
 
   967 label *label189
   968 set :updateRowPositions4.1:dy -0.5
   969 set :updateRowPositions4.1:row :findBestPosition:row2.1
-    * unpackcolor :updateRowPositions4.1:col1 :updateRowPositions4.1:col2 :updateRowPositions4.1:col3 :updateRowPositions4.1:col4 :updateRowPositions4.1:row
+  970 unpackcolor :updateRowPositions4.1:col1 :updateRowPositions4.1:col2 :updateRowPositions4.1:col3 :updateRowPositions4.1:col4 :findBestPosition:row2.1
   971 set :updatePosition.13:dx -1.5
-    * set :updatePosition.13:dy :updateRowPositions4.1:dy
+  972 set :updatePosition.13:dy -0.5
   973 set :updatePosition.13:value :updateRowPositions4.1:col1
-    * op mul *tmp250 :updatePosition.13:value 255
+  974 op mul *tmp250 :updateRowPositions4.1:col1 255
   975 print *tmp250
   976 print " at "
-    * print :updatePosition.13:dx
+  977 print -1.5
   978 print ","
   979 print " "
-    * print :updatePosition.13:dy
+  980 print :updateRowPositions4.1:dy
   981 print " "
   982 print "("
   983 print :findDrillLocationLocal:diffX
 
   985 print " "
   986 print :findDrillLocationLocal:diffY
   987 print ")"
-    * jump *label212 greaterThanEq :updatePosition.13:value 0.0392156862745098
-    * jump *label214 lessThanEq :updatePosition.13:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.13:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.13:dy
-    * set :findBestPosition:best :updatePosition.13:value
+  988 jump *label212 greaterThanEq :updateRowPositions4.1:col1 0.0392156862745098
+  989 jump *label214 lessThanEq :updateRowPositions4.1:col1 :findBestPosition:best
+  990 set :findDrillLocationLocal:diffX -1.5
+  991 set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+  992 set :findBestPosition:best :updateRowPositions4.1:col1
   993 label *label214
   994 label *label215
   995 label *label212
 
   997 print "\n"
   998 label *label211
   999 set :updatePosition.14:dx -0.5
-    * set :updatePosition.14:dy :updateRowPositions4.1:dy
+ 1000 set :updatePosition.14:dy -0.5
  1001 set :updatePosition.14:value :updateRowPositions4.1:col2
-    * op mul *tmp255 :updatePosition.14:value 255
+ 1002 op mul *tmp255 :updateRowPositions4.1:col2 255
  1003 print *tmp255
  1004 print " at "
-    * print :updatePosition.14:dx
+ 1005 print -0.5
  1006 print ","
  1007 print " "
-    * print :updatePosition.14:dy
+ 1008 print :updateRowPositions4.1:dy
  1009 print " "
  1010 print "("
  1011 print :findDrillLocationLocal:diffX
 
  1013 print " "
  1014 print :findDrillLocationLocal:diffY
  1015 print ")"
-    * jump *label217 greaterThanEq :updatePosition.14:value 0.0392156862745098
-    * jump *label219 lessThanEq :updatePosition.14:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.14:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.14:dy
-    * set :findBestPosition:best :updatePosition.14:value
+ 1016 jump *label217 greaterThanEq :updateRowPositions4.1:col2 0.0392156862745098
+ 1017 jump *label219 lessThanEq :updateRowPositions4.1:col2 :findBestPosition:best
+ 1018 set :findDrillLocationLocal:diffX -0.5
+ 1019 set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+ 1020 set :findBestPosition:best :updateRowPositions4.1:col2
  1021 label *label219
  1022 label *label220
  1023 label *label217
 
  1025 print "\n"
  1026 label *label216
  1027 set :updatePosition.15:dx 0.5
-    * set :updatePosition.15:dy :updateRowPositions4.1:dy
+ 1028 set :updatePosition.15:dy -0.5
  1029 set :updatePosition.15:value :updateRowPositions4.1:col3
-    * op mul *tmp260 :updatePosition.15:value 255
+ 1030 op mul *tmp260 :updateRowPositions4.1:col3 255
  1031 print *tmp260
  1032 print " at "
-    * print :updatePosition.15:dx
+ 1033 print 0.5
  1034 print ","
  1035 print " "
-    * print :updatePosition.15:dy
+ 1036 print :updateRowPositions4.1:dy
  1037 print " "
  1038 print "("
  1039 print :findDrillLocationLocal:diffX
 
  1041 print " "
  1042 print :findDrillLocationLocal:diffY
  1043 print ")"
-    * jump *label222 greaterThanEq :updatePosition.15:value 0.0392156862745098
-    * jump *label224 lessThanEq :updatePosition.15:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.15:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.15:dy
-    * set :findBestPosition:best :updatePosition.15:value
+ 1044 jump *label222 greaterThanEq :updateRowPositions4.1:col3 0.0392156862745098
+ 1045 jump *label224 lessThanEq :updateRowPositions4.1:col3 :findBestPosition:best
+ 1046 set :findDrillLocationLocal:diffX 0.5
+ 1047 set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+ 1048 set :findBestPosition:best :updateRowPositions4.1:col3
  1049 label *label224
  1050 label *label225
  1051 label *label222
 
  1053 print "\n"
  1054 label *label221
  1055 set :updatePosition.16:dx 1.5
-    * set :updatePosition.16:dy :updateRowPositions4.1:dy
+ 1056 set :updatePosition.16:dy -0.5
  1057 set :updatePosition.16:value :updateRowPositions4.1:col4
-    * op mul *tmp265 :updatePosition.16:value 255
+ 1058 op mul *tmp265 :updateRowPositions4.1:col4 255
  1059 print *tmp265
  1060 print " at "
-    * print :updatePosition.16:dx
+ 1061 print 1.5
  1062 print ","
  1063 print " "
-    * print :updatePosition.16:dy
+ 1064 print :updateRowPositions4.1:dy
  1065 print " "
  1066 print "("
  1067 print :findDrillLocationLocal:diffX
 
  1069 print " "
  1070 print :findDrillLocationLocal:diffY
  1071 print ")"
-    * jump *label227 greaterThanEq :updatePosition.16:value 0.0392156862745098
-    * jump *label229 lessThanEq :updatePosition.16:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.16:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.16:dy
-    * set :findBestPosition:best :updatePosition.16:value
+ 1072 jump *label227 greaterThanEq :updateRowPositions4.1:col4 0.0392156862745098
+ 1073 jump *label229 lessThanEq :updateRowPositions4.1:col4 :findBestPosition:best
+ 1074 set :findDrillLocationLocal:diffX 1.5
+ 1075 set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+ 1076 set :findBestPosition:best :updateRowPositions4.1:col4
  1077 label *label229
  1078 label *label230
  1079 label *label227
 
  1083 label *label210
  1084 set :updateRowPositions4.2:dy 0.5
  1085 set :updateRowPositions4.2:row :findBestPosition:row3.1
-    * unpackcolor :updateRowPositions4.2:col1 :updateRowPositions4.2:col2 :updateRowPositions4.2:col3 :updateRowPositions4.2:col4 :updateRowPositions4.2:row
+ 1086 unpackcolor :updateRowPositions4.2:col1 :updateRowPositions4.2:col2 :updateRowPositions4.2:col3 :updateRowPositions4.2:col4 :findBestPosition:row3.1
  1087 set :updatePosition.17:dx -1.5
-    * set :updatePosition.17:dy :updateRowPositions4.2:dy
+ 1088 set :updatePosition.17:dy 0.5
  1089 set :updatePosition.17:value :updateRowPositions4.2:col1
-    * op mul *tmp270 :updatePosition.17:value 255
+ 1090 op mul *tmp270 :updateRowPositions4.2:col1 255
  1091 print *tmp270
  1092 print " at "
-    * print :updatePosition.17:dx
+ 1093 print -1.5
  1094 print ","
  1095 print " "
-    * print :updatePosition.17:dy
+ 1096 print :updateRowPositions4.2:dy
  1097 print " "
  1098 print "("
  1099 print :findDrillLocationLocal:diffX
 
  1101 print " "
  1102 print :findDrillLocationLocal:diffY
  1103 print ")"
-    * jump *label233 greaterThanEq :updatePosition.17:value 0.0392156862745098
-    * jump *label235 lessThanEq :updatePosition.17:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.17:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.17:dy
-    * set :findBestPosition:best :updatePosition.17:value
+ 1104 jump *label233 greaterThanEq :updateRowPositions4.2:col1 0.0392156862745098
+ 1105 jump *label235 lessThanEq :updateRowPositions4.2:col1 :findBestPosition:best
+ 1106 set :findDrillLocationLocal:diffX -1.5
+ 1107 set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+ 1108 set :findBestPosition:best :updateRowPositions4.2:col1
  1109 label *label235
  1110 label *label236
  1111 label *label233
 
  1113 print "\n"
  1114 label *label232
  1115 set :updatePosition.18:dx -0.5
-    * set :updatePosition.18:dy :updateRowPositions4.2:dy
+ 1116 set :updatePosition.18:dy 0.5
  1117 set :updatePosition.18:value :updateRowPositions4.2:col2
-    * op mul *tmp275 :updatePosition.18:value 255
+ 1118 op mul *tmp275 :updateRowPositions4.2:col2 255
  1119 print *tmp275
  1120 print " at "
-    * print :updatePosition.18:dx
+ 1121 print -0.5
  1122 print ","
  1123 print " "
-    * print :updatePosition.18:dy
+ 1124 print :updateRowPositions4.2:dy
  1125 print " "
  1126 print "("
  1127 print :findDrillLocationLocal:diffX
 
  1129 print " "
  1130 print :findDrillLocationLocal:diffY
  1131 print ")"
-    * jump *label238 greaterThanEq :updatePosition.18:value 0.0392156862745098
-    * jump *label240 lessThanEq :updatePosition.18:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.18:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.18:dy
-    * set :findBestPosition:best :updatePosition.18:value
+ 1132 jump *label238 greaterThanEq :updateRowPositions4.2:col2 0.0392156862745098
+ 1133 jump *label240 lessThanEq :updateRowPositions4.2:col2 :findBestPosition:best
+ 1134 set :findDrillLocationLocal:diffX -0.5
+ 1135 set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+ 1136 set :findBestPosition:best :updateRowPositions4.2:col2
  1137 label *label240
  1138 label *label241
  1139 label *label238
 
  1141 print "\n"
  1142 label *label237
  1143 set :updatePosition.19:dx 0.5
-    * set :updatePosition.19:dy :updateRowPositions4.2:dy
+ 1144 set :updatePosition.19:dy 0.5
  1145 set :updatePosition.19:value :updateRowPositions4.2:col3
-    * op mul *tmp280 :updatePosition.19:value 255
+ 1146 op mul *tmp280 :updateRowPositions4.2:col3 255
  1147 print *tmp280
  1148 print " at "
-    * print :updatePosition.19:dx
+ 1149 print 0.5
  1150 print ","
  1151 print " "
-    * print :updatePosition.19:dy
+ 1152 print :updateRowPositions4.2:dy
  1153 print " "
  1154 print "("
  1155 print :findDrillLocationLocal:diffX
 
  1157 print " "
  1158 print :findDrillLocationLocal:diffY
  1159 print ")"
-    * jump *label243 greaterThanEq :updatePosition.19:value 0.0392156862745098
-    * jump *label245 lessThanEq :updatePosition.19:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.19:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.19:dy
-    * set :findBestPosition:best :updatePosition.19:value
+ 1160 jump *label243 greaterThanEq :updateRowPositions4.2:col3 0.0392156862745098
+ 1161 jump *label245 lessThanEq :updateRowPositions4.2:col3 :findBestPosition:best
+ 1162 set :findDrillLocationLocal:diffX 0.5
+ 1163 set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+ 1164 set :findBestPosition:best :updateRowPositions4.2:col3
  1165 label *label245
  1166 label *label246
  1167 label *label243
 
  1169 print "\n"
  1170 label *label242
  1171 set :updatePosition.20:dx 1.5
-    * set :updatePosition.20:dy :updateRowPositions4.2:dy
+ 1172 set :updatePosition.20:dy 0.5
  1173 set :updatePosition.20:value :updateRowPositions4.2:col4
-    * op mul *tmp285 :updatePosition.20:value 255
+ 1174 op mul *tmp285 :updateRowPositions4.2:col4 255
  1175 print *tmp285
  1176 print " at "
-    * print :updatePosition.20:dx
+ 1177 print 1.5
  1178 print ","
  1179 print " "
-    * print :updatePosition.20:dy
+ 1180 print :updateRowPositions4.2:dy
  1181 print " "
  1182 print "("
  1183 print :findDrillLocationLocal:diffX
 
  1185 print " "
  1186 print :findDrillLocationLocal:diffY
  1187 print ")"
-    * jump *label248 greaterThanEq :updatePosition.20:value 0.0392156862745098
-    * jump *label250 lessThanEq :updatePosition.20:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.20:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.20:dy
-    * set :findBestPosition:best :updatePosition.20:value
+ 1188 jump *label248 greaterThanEq :updateRowPositions4.2:col4 0.0392156862745098
+ 1189 jump *label250 lessThanEq :updateRowPositions4.2:col4 :findBestPosition:best
+ 1190 set :findDrillLocationLocal:diffX 1.5
+ 1191 set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+ 1192 set :findBestPosition:best :updateRowPositions4.2:col4
  1193 label *label250
  1194 label *label251
  1195 label *label248
 
  1199 label *label231
  1200 set :updateRowPositions4.3:dy 1.5
  1201 set :updateRowPositions4.3:row :findBestPosition:row4
-    * unpackcolor :updateRowPositions4.3:col1 :updateRowPositions4.3:col2 :updateRowPositions4.3:col3 :updateRowPositions4.3:col4 :updateRowPositions4.3:row
+ 1202 unpackcolor :updateRowPositions4.3:col1 :updateRowPositions4.3:col2 :updateRowPositions4.3:col3 :updateRowPositions4.3:col4 :findBestPosition:row4
  1203 set :updatePosition.21:dx -1.5
-    * set :updatePosition.21:dy :updateRowPositions4.3:dy
+ 1204 set :updatePosition.21:dy 1.5
  1205 set :updatePosition.21:value :updateRowPositions4.3:col1
-    * op mul *tmp290 :updatePosition.21:value 255
+ 1206 op mul *tmp290 :updateRowPositions4.3:col1 255
  1207 print *tmp290
  1208 print " at "
-    * print :updatePosition.21:dx
+ 1209 print -1.5
  1210 print ","
  1211 print " "
-    * print :updatePosition.21:dy
+ 1212 print :updateRowPositions4.3:dy
  1213 print " "
  1214 print "("
  1215 print :findDrillLocationLocal:diffX
 
  1217 print " "
  1218 print :findDrillLocationLocal:diffY
  1219 print ")"
-    * jump *label254 greaterThanEq :updatePosition.21:value 0.0392156862745098
-    * jump *label256 lessThanEq :updatePosition.21:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.21:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.21:dy
-    * set :findBestPosition:best :updatePosition.21:value
+ 1220 jump *label254 greaterThanEq :updateRowPositions4.3:col1 0.0392156862745098
+ 1221 jump *label256 lessThanEq :updateRowPositions4.3:col1 :findBestPosition:best
+ 1222 set :findDrillLocationLocal:diffX -1.5
+ 1223 set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+ 1224 set :findBestPosition:best :updateRowPositions4.3:col1
  1225 label *label256
  1226 label *label257
  1227 label *label254
 
  1229 print "\n"
  1230 label *label253
  1231 set :updatePosition.22:dx -0.5
-    * set :updatePosition.22:dy :updateRowPositions4.3:dy
+ 1232 set :updatePosition.22:dy 1.5
  1233 set :updatePosition.22:value :updateRowPositions4.3:col2
-    * op mul *tmp295 :updatePosition.22:value 255
+ 1234 op mul *tmp295 :updateRowPositions4.3:col2 255
  1235 print *tmp295
  1236 print " at "
-    * print :updatePosition.22:dx
+ 1237 print -0.5
  1238 print ","
  1239 print " "
-    * print :updatePosition.22:dy
+ 1240 print :updateRowPositions4.3:dy
  1241 print " "
  1242 print "("
  1243 print :findDrillLocationLocal:diffX
 
  1245 print " "
  1246 print :findDrillLocationLocal:diffY
  1247 print ")"
-    * jump *label259 greaterThanEq :updatePosition.22:value 0.0392156862745098
-    * jump *label261 lessThanEq :updatePosition.22:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.22:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.22:dy
-    * set :findBestPosition:best :updatePosition.22:value
+ 1248 jump *label259 greaterThanEq :updateRowPositions4.3:col2 0.0392156862745098
+ 1249 jump *label261 lessThanEq :updateRowPositions4.3:col2 :findBestPosition:best
+ 1250 set :findDrillLocationLocal:diffX -0.5
+ 1251 set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+ 1252 set :findBestPosition:best :updateRowPositions4.3:col2
  1253 label *label261
  1254 label *label262
  1255 label *label259
 
  1257 print "\n"
  1258 label *label258
  1259 set :updatePosition.23:dx 0.5
-    * set :updatePosition.23:dy :updateRowPositions4.3:dy
+ 1260 set :updatePosition.23:dy 1.5
  1261 set :updatePosition.23:value :updateRowPositions4.3:col3
-    * op mul *tmp300 :updatePosition.23:value 255
+ 1262 op mul *tmp300 :updateRowPositions4.3:col3 255
  1263 print *tmp300
  1264 print " at "
-    * print :updatePosition.23:dx
+ 1265 print 0.5
  1266 print ","
  1267 print " "
-    * print :updatePosition.23:dy
+ 1268 print :updateRowPositions4.3:dy
  1269 print " "
  1270 print "("
  1271 print :findDrillLocationLocal:diffX
 
  1273 print " "
  1274 print :findDrillLocationLocal:diffY
  1275 print ")"
-    * jump *label264 greaterThanEq :updatePosition.23:value 0.0392156862745098
-    * jump *label266 lessThanEq :updatePosition.23:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.23:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.23:dy
-    * set :findBestPosition:best :updatePosition.23:value
+ 1276 jump *label264 greaterThanEq :updateRowPositions4.3:col3 0.0392156862745098
+ 1277 jump *label266 lessThanEq :updateRowPositions4.3:col3 :findBestPosition:best
+ 1278 set :findDrillLocationLocal:diffX 0.5
+ 1279 set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+ 1280 set :findBestPosition:best :updateRowPositions4.3:col3
  1281 label *label266
  1282 label *label267
  1283 label *label264
 
  1285 print "\n"
  1286 label *label263
  1287 set :updatePosition.24:dx 1.5
-    * set :updatePosition.24:dy :updateRowPositions4.3:dy
+ 1288 set :updatePosition.24:dy 1.5
  1289 set :updatePosition.24:value :updateRowPositions4.3:col4
-    * op mul *tmp305 :updatePosition.24:value 255
+ 1290 op mul *tmp305 :updateRowPositions4.3:col4 255
  1291 print *tmp305
  1292 print " at "
-    * print :updatePosition.24:dx
+ 1293 print 1.5
  1294 print ","
  1295 print " "
-    * print :updatePosition.24:dy
+ 1296 print :updateRowPositions4.3:dy
  1297 print " "
  1298 print "("
  1299 print :findDrillLocationLocal:diffX
 
  1301 print " "
  1302 print :findDrillLocationLocal:diffY
  1303 print ")"
-    * jump *label269 greaterThanEq :updatePosition.24:value 0.0392156862745098
-    * jump *label271 lessThanEq :updatePosition.24:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.24:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.24:dy
-    * set :findBestPosition:best :updatePosition.24:value
+ 1304 jump *label269 greaterThanEq :updateRowPositions4.3:col4 0.0392156862745098
+ 1305 jump *label271 lessThanEq :updateRowPositions4.3:col4 :findBestPosition:best
+ 1306 set :findDrillLocationLocal:diffX 1.5
+ 1307 set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+ 1308 set :findBestPosition:best :updateRowPositions4.3:col4
  1309 label *label271
  1310 label *label272
  1311 label *label269
 
  1327 label *label273
  1328 op mul *tmp156 :findBestPosition:best 255
  1329 jump *label133 always
-    * set *tmp156 null
  1330 label *label133
  1331 set :findDrillLocationLocal:score *tmp156
  1332 print "Ore at "
 
  1336 print :findDrillLocationLocal:oreY
  1337 print ":"
  1338 print " score "
-    * print :findDrillLocationLocal:score
+ 1339 print *tmp156
  1340 print ","
  1341 print " best "
  1342 print :findDrillLocationLocal:best
 
  1358 label *label280
  1359 label *label281
  1360 label *label279
-    * jump *label285 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:capacity
+ 1361 jump *label285 lessThanEq *tmp156 :findDrillLocationLocal:capacity
  1362 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1363 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
-    * set .bestSpot :findDrillLocationLocal:score
+ 1364 set :findDrillLocationLocal:capacity *tmp156
+ 1365 set .bestSpot *tmp156
  1366 jump *label287 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
  1367 ucontrol unbind
  1368 set :findDrillLocationLocal*retval true
 
  1371 label *label288
  1372 label *label285
  1373 label *label286
-    * jump *label289 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
+ 1374 jump *label289 lessThanEq *tmp156 :findDrillLocationLocal:best
  1375 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1376 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:best :findDrillLocationLocal:score
+ 1377 set :findDrillLocationLocal:best *tmp156
  1378 label *label289
  1379 label *label290
-    * jump *label291 greaterThan :findDrillLocationLocal:score :findDrillLocationLocal:last
+ 1380 jump *label291 greaterThan *tmp156 :findDrillLocationLocal:last
  1381 jump *label132 always
  1382 label *label291
  1383 label *label292
-    * set :findDrillLocationLocal:last :findDrillLocationLocal:score
+ 1384 set :findDrillLocationLocal:last *tmp156
  1385 op mul :round:x :findDrillLocationLocal:diffX 1.1
  1386 op add *tmp331 :round:x 0.5
  1387 op floor *tmp330 *tmp331
 
  1424 set *tmp355 .locations
  1425 set :debugPrintSpot:i 0
  1426 label *label299
-    * jump *label301 greaterThanEq :debugPrintSpot:i *tmp355
+ 1427 jump *label301 greaterThanEq :debugPrintSpot:i .locations
  1428 op add :debugPrintSpot:index :debugPrintSpot:index 1
  1429 read :debugPrintSpot:size bank1 :debugPrintSpot:index
  1430 op add :debugPrintSpot:index :debugPrintSpot:index 1
 
  1443 op add :debugPrintSpot:i :debugPrintSpot:i 1
  1444 jump *label299 always
  1445 label *label301
-    * print :debugPrintSpot:text
+ 1446 print ""
  1447 printflush message1
  1448 label *label297
  1449 label *label97
 
  1483 label *label8
  1484 set :moveTo.16:x :createTerrainMask:x
  1485 set :moveTo.16:y :createTerrainMask:y
-    * set *tmp362 :moveTo.16:x
-    * set *tmp363 :moveTo.16:y
-    * set :moveTo.17:x *tmp362
-    * set :moveTo.17:y *tmp363
+ 1486 set *tmp362 :createTerrainMask:x
+ 1487 set *tmp363 :createTerrainMask:y
+ 1488 set :moveTo.17:x :moveTo.16:x
+ 1489 set :moveTo.17:y :moveTo.16:y
  1490 set :moveTo.17:radius 6
  1491 label *label308
-    * ucontrol within :moveTo.17:x :moveTo.17:y :moveTo.17:radius *tmp364
+ 1492 ucontrol within *tmp362 *tmp363 6 *tmp364
  1493 jump *label310 notEqual *tmp364 false
-    * op sub *tmp366 :moveTo.17:radius 0.5
-    * ucontrol approach :moveTo.17:x :moveTo.17:y *tmp366
+ 1494 op sub *tmp366 6 0.5
+ 1495 ucontrol approach *tmp362 *tmp363 5.5
  1496 label *label309
  1497 jump *label308 always
  1498 label *label310
 
  1524 label *label313
  1525 set :createTerrainMask*retval :createTerrainMask:result
  1526 jump *label305 always
-    * set :createTerrainMask*retval null
  1527 label *label305
  1528 return :createTerrainMask*retaddr
  1529 end
 
  1551 label *label322
  1552 jump *label323 equal :shiftMask:shiftX 0
  1553 op abs *tmp387 :shiftMask:shiftX
-    * op sub *tmp388 7 *tmp387
+ 1554 op sub *tmp388 7 *tmp371
  1555 op shr :shiftMask:keep 0b1111111 *tmp388
  1556 jump *label325 lessThanEq :shiftMask:shiftX 0
  1557 op abs *tmp392 :shiftMask:shiftX
-    * op sub *tmp393 7 *tmp392
-    * op shl :shiftMask:keep :shiftMask:keep *tmp393
+ 1558 op sub *tmp393 7 *tmp371
+ 1559 op shl :shiftMask:keep :shiftMask:keep *tmp388
  1560 label *label325
  1561 label *label326
  1562 op shl *tmp394 :shiftMask:keep 7
 
  1570 label *label324
  1571 set :shiftMask*retval :shiftMask:mask
  1572 jump *label318 always
-    * set :shiftMask*retval null
  1573 label *label318
  1574 return :shiftMask*retaddr
  1575 end
 
  1612 label *label330
  1613 set :findPossiblePlacement*retval -1
  1614 jump *label327 always
-    * set :findPossiblePlacement*retval null
  1615 label *label327
  1616 return :findPossiblePlacement*retaddr
  1617 end
 
  1626 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1627 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1628 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label342 lessThan :tryPlaceGenerator:shift 0
+ 1629 jump *label342 lessThan :findPossiblePlacement*retval 0
  1630 op add *tmp415 :tryPlaceGenerator:centerX 0.5
-    * op add .water2X *tmp415 :tryPlaceGenerator:c
+ 1631 op add .water2X *tmp415 :findPossiblePlacement:x
  1632 op add *tmp417 :tryPlaceGenerator:centerY 0.5
-    * op add .water2Y *tmp417 :tryPlaceGenerator:r
+ 1633 op add .water2Y *tmp417 :findPossiblePlacement:y
  1634 op add *tmp419 :tryPlaceGenerator:centerX 2.5
-    * op add .generatorX *tmp419 :tryPlaceGenerator:c
+ 1635 op add .generatorX *tmp419 :findPossiblePlacement:x
  1636 op add *tmp421 :tryPlaceGenerator:centerY 0.5
-    * op add .generatorY *tmp421 :tryPlaceGenerator:r
-    * op shl *tmp423 :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:shift
+ 1637 op add .generatorY *tmp417 :findPossiblePlacement:y
+ 1638 op shl *tmp423 :tryPlaceGenerator:generatorHorizontal :findPossiblePlacement*retval
  1639 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp423
  1640 jump *label343 always
  1641 label *label342
 
  1649 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1650 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1651 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label345 greaterThanEq :tryPlaceGenerator:shift 0
+ 1652 jump *label345 greaterThanEq :findPossiblePlacement*retval 0
  1653 set :tryPlaceGenerator*retval false
  1654 jump *label340 always
  1655 label *label345
  1656 label *label346
  1657 op add *tmp427 :tryPlaceGenerator:centerX 0.5
-    * op add .water2X *tmp427 :tryPlaceGenerator:c
+ 1658 op add .water2X *tmp427 :findPossiblePlacement:x
  1659 op add *tmp429 :tryPlaceGenerator:centerY 0.5
-    * op add .water2Y *tmp429 :tryPlaceGenerator:r
+ 1660 op add .water2Y *tmp429 :findPossiblePlacement:y
  1661 op add *tmp431 :tryPlaceGenerator:centerX 0.5
-    * op add .generatorX *tmp431 :tryPlaceGenerator:c
+ 1662 op add .generatorX *tmp427 :findPossiblePlacement:x
  1663 op add *tmp433 :tryPlaceGenerator:centerY 2.5
-    * op add .generatorY *tmp433 :tryPlaceGenerator:r
-    * op shl *tmp435 :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:shift
+ 1664 op add .generatorY *tmp433 :findPossiblePlacement:y
+ 1665 op shl *tmp435 :tryPlaceGenerator:generatorVertical :findPossiblePlacement*retval
  1666 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp435
  1667 label *label343
  1668 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1675 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1676 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1677 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label348 greaterThanEq :tryPlaceGenerator:shift 0
+ 1678 jump *label348 greaterThanEq :findPossiblePlacement*retval 0
  1679 set :tryPlaceGenerator*retval false
  1680 jump *label340 always
  1681 label *label348
  1682 label *label349
-    * op add .nodeX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * op add .nodeY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * op shl *tmp441 1 :tryPlaceGenerator:shift
+ 1683 op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
+ 1684 op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
+ 1685 op shl *tmp441 1 :findPossiblePlacement*retval
  1686 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp441
  1687 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
  1688 set :findPossiblePlacement:placementMask 1
 
  1694 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1695 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1696 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label351 greaterThanEq :tryPlaceGenerator:shift 0
+ 1697 jump *label351 greaterThanEq :findPossiblePlacement*retval 0
  1698 set :tryPlaceGenerator*retval false
  1699 jump *label340 always
  1700 label *label351
  1701 label *label352
-    * op add .panelX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * op add .panelY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
+ 1702 op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
+ 1703 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
  1704 set :tryPlaceGenerator*retval true
  1705 jump *label340 always
-    * set :tryPlaceGenerator*retval null
  1706 label *label340
  1707 return :tryPlaceGenerator*retaddr
  1708 end
 
  1728 set :createFixedMatrix:row4 0b0011100
  1729 set :createFixedMatrix:row5 0b0000000
  1730 set :createFixedMatrix:row6 0b0000000
-    * set *tmp449 :createFixedMatrix:row0
-    * op shl *tmp450 :createFixedMatrix:row1 7
-    * op or *tmp451 *tmp449 *tmp450
-    * op shl *tmp452 :createFixedMatrix:row2 14
-    * op or *tmp453 *tmp451 *tmp452
-    * op shl *tmp454 :createFixedMatrix:row3 21
-    * op or *tmp455 *tmp453 *tmp454
-    * op shl *tmp456 :createFixedMatrix:row4 28
-    * op or *tmp457 *tmp455 *tmp456
-    * op shl *tmp458 :createFixedMatrix:row5 35
-    * op or *tmp459 *tmp457 *tmp458
-    * op shl *tmp460 :createFixedMatrix:row6 42
-    * op or *tmp448 *tmp459 *tmp460
+ 1731 set *tmp449 0b0000000
+ 1732 op shl *tmp450 0b0000000 7
+ 1733 op or *tmp451 :createFixedMatrix:row0 0
+ 1734 op shl *tmp452 0b0011100 14
+ 1735 op or *tmp453 *tmp451 458752
+ 1736 op shl *tmp454 0b0011100 21
+ 1737 op or *tmp455 *tmp453 58720256
+ 1738 op shl *tmp456 0b0011100 28
+ 1739 op or *tmp457 *tmp455 7516192768
+ 1740 op shl *tmp458 0b0000000 35
+ 1741 op or *tmp459 *tmp457 0
+ 1742 op shl *tmp460 0b0000000 42
+ 1743 op or *tmp448 *tmp459 0
  1744 label *label355
-    * op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:plainTerrainMask *tmp448
+ 1745 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval *tmp448
  1746 set :createFixedMatrix.1:row0 0b1000001
  1747 set :createFixedMatrix.1:row1 0b0000000
  1748 set :createFixedMatrix.1:row2 0b0011100
 
  1750 set :createFixedMatrix.1:row4 0b0011100
  1751 set :createFixedMatrix.1:row5 0b0000000
  1752 set :createFixedMatrix.1:row6 0b1000001
-    * set *tmp464 :createFixedMatrix.1:row0
-    * op shl *tmp465 :createFixedMatrix.1:row1 7
-    * op or *tmp466 *tmp464 *tmp465
-    * op shl *tmp467 :createFixedMatrix.1:row2 14
-    * op or *tmp468 *tmp466 *tmp467
-    * op shl *tmp469 :createFixedMatrix.1:row3 21
-    * op or *tmp470 *tmp468 *tmp469
-    * op shl *tmp471 :createFixedMatrix.1:row4 28
-    * op or *tmp472 *tmp470 *tmp471
-    * op shl *tmp473 :createFixedMatrix.1:row5 35
-    * op or *tmp474 *tmp472 *tmp473
-    * op shl *tmp475 :createFixedMatrix.1:row6 42
-    * op or *tmp463 *tmp474 *tmp475
+ 1753 set *tmp464 0b1000001
+ 1754 op shl *tmp465 0b0000000 7
+ 1755 op or *tmp466 :createFixedMatrix.1:row0 0
+ 1756 op shl *tmp467 0b0011100 14
+ 1757 op or *tmp468 *tmp466 458752
+ 1758 op shl *tmp469 0b0011100 21
+ 1759 op or *tmp470 *tmp468 58720256
+ 1760 op shl *tmp471 0b0011100 28
+ 1761 op or *tmp472 *tmp470 7516192768
+ 1762 op shl *tmp473 0b0000000 35
+ 1763 op or *tmp474 *tmp472 0
+ 1764 op shl *tmp475 0b1000001 42
+ 1765 op or *tmp463 *tmp474 285873023221760
  1766 label *label356
  1767 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp463
  1768 set :createFixedMatrix.2:row0 0b11
  1769 set :createFixedMatrix.2:row1 0b11
-    * set *tmp479 :createFixedMatrix.2:row0
-    * op shl *tmp480 :createFixedMatrix.2:row1 7
-    * op or *tmp478 *tmp479 *tmp480
+ 1770 set *tmp479 0b11
+ 1771 op shl *tmp480 0b11 7
+ 1772 op or *tmp478 :createFixedMatrix.2:row0 384
  1773 label *label357
  1774 set :layoutThoriumDrillAtLocation:extractorMask *tmp478
  1775 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
-    * set :findPossiblePlacement:placementMask :layoutThoriumDrillAtLocation:extractorMask
+ 1776 set :findPossiblePlacement:placementMask *tmp478
  1777 set :findPossiblePlacement:width 2
  1778 set :findPossiblePlacement:height 2
  1779 setaddr :findPossiblePlacement*retaddr *label358 (h:*label358)
 
  1782 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1783 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
  1784 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
-    * jump *label359 lessThan :layoutThoriumDrillAtLocation:shift 0
+ 1785 jump *label359 lessThan :findPossiblePlacement*retval 0
  1786 op add *tmp485 .drillX 0.5
-    * op add .water1X *tmp485 :layoutThoriumDrillAtLocation:c
+ 1787 op add .water1X *tmp485 :findPossiblePlacement:x
  1788 op add *tmp487 .drillY 0.5
-    * op add .water1Y *tmp487 :layoutThoriumDrillAtLocation:r
-    * op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:shift
+ 1789 op add .water1Y *tmp487 :findPossiblePlacement:y
+ 1790 op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :findPossiblePlacement*retval
  1791 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
  1792 label *label359
  1793 label *label360
  1794 set :createFixedMatrix.3:row0 0b1111
  1795 set :createFixedMatrix.3:row1 0b1111
-    * set *tmp490 :createFixedMatrix.3:row0
-    * op shl *tmp491 :createFixedMatrix.3:row1 7
-    * op or *tmp489 *tmp490 *tmp491
+ 1796 set *tmp490 0b1111
+ 1797 op shl *tmp491 0b1111 7
+ 1798 op or *tmp489 :createFixedMatrix.3:row0 1920
  1799 label *label361
  1800 set :layoutThoriumDrillAtLocation:generatorHorizontal *tmp489
  1801 set :createFixedMatrix.4:row0 0b11
  1802 set :createFixedMatrix.4:row1 0b11
  1803 set :createFixedMatrix.4:row2 0b11
  1804 set :createFixedMatrix.4:row3 0b11
-    * set *tmp494 :createFixedMatrix.4:row0
-    * op shl *tmp495 :createFixedMatrix.4:row1 7
-    * op or *tmp496 *tmp494 *tmp495
-    * op shl *tmp497 :createFixedMatrix.4:row2 14
-    * op or *tmp498 *tmp496 *tmp497
-    * op shl *tmp499 :createFixedMatrix.4:row3 21
-    * op or *tmp493 *tmp498 *tmp499
+ 1805 set *tmp494 0b11
+ 1806 op shl *tmp495 0b11 7
+ 1807 op or *tmp496 :createFixedMatrix.4:row0 384
+ 1808 op shl *tmp497 0b11 14
+ 1809 op or *tmp498 *tmp496 49152
+ 1810 op shl *tmp499 0b11 21
+ 1811 op or *tmp493 *tmp498 6291456
  1812 label *label362
  1813 set :layoutThoriumDrillAtLocation:generatorVertical *tmp493
  1814 set :tryPlaceGenerator:centerX .drillX
  1815 set :tryPlaceGenerator:centerY .drillY
  1816 set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:terrainMask
-    * set :tryPlaceGenerator:generatorHorizontal :layoutThoriumDrillAtLocation:generatorHorizontal
-    * set :tryPlaceGenerator:generatorVertical :layoutThoriumDrillAtLocation:generatorVertical
+ 1817 set :tryPlaceGenerator:generatorHorizontal *tmp489
+ 1818 set :tryPlaceGenerator:generatorVertical *tmp493
  1819 setaddr :tryPlaceGenerator*retaddr *label363 (h:*label363)
  1820 call *label11 *invalid :tryPlaceGenerator*retval (m:*label363) (h:*label363)
  1821 label *label363
 
  1860 call *label9 *invalid :shiftMask*retval (m:*label374) (h:*label374)
  1861 label *label374
  1862 set :layoutThoriumDrillAtLocation:shiftedMask :shiftMask*retval
-    * op or :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:newTerrainMask :layoutThoriumDrillAtLocation:shiftedMask
+ 1863 op or :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:newTerrainMask :shiftMask*retval
  1864 op add *tmp510 .drillX :layoutThoriumDrillAtLocation:sx
  1865 op add *tmp511 .drillY :layoutThoriumDrillAtLocation:sy
  1866 set :tryPlaceGenerator:centerX *tmp510
 
  1882 label *label368
  1883 set :layoutThoriumDrillAtLocation*retval true
  1884 jump *label353 always
-    * set :layoutThoriumDrillAtLocation*retval null
  1885 label *label353
  1886 return :layoutThoriumDrillAtLocation*retaddr
  1887 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-212 instructions):
 
    11 label *label16
    12 jump *label15 equal :core null
    13 label *label17
-    * set :moveTo:x :x
-    * set :moveTo:y :y
-    * set :moveTo:radius 1
    14 label *label19
    15 ucontrol within :x :y 1 *tmp3
    16 jump *label21 notEqual *tmp3 false
-    * op sub *tmp5 1 0.5
    17 ucontrol approach :x :y 0.5
    18 label *label20
    19 jump *label19 always
 
    30 setaddr :findDrillLocationLocal*retaddr *label24 (h:*label24)
    31 call *label6 *invalid :findDrillLocationLocal*retval (m:*label24) (h:*label24)
    32 label *label24
-    * set :dx :findDrillLocationLocal:dx
-    * set :dy :findDrillLocationLocal:dy
-    * set :capacity :findDrillLocationLocal:capacity
    33 print "Found "
    34 print :findDrillLocationLocal:capacity
    35 print " "
 
    50 set :buildAt:x .drillX
    51 set :buildAt:y .drillY
    52 jump *label27 lessThan :buildAt:x 0
-    * set :moveTo.1:x :buildAt:x
-    * set :moveTo.1:y :buildAt:y
-    * set *tmp10 :buildAt:x
-    * set *tmp11 :buildAt:y
-    * set :moveTo.2:x :moveTo.1:x
-    * set :moveTo.2:y :moveTo.1:y
+   53 set :moveTo.2:x :buildAt:x
+   54 set :moveTo.2:y :buildAt:y
    55 label *label31
-    * ucontrol within *tmp10 *tmp11 6 *tmp12
+   56 ucontrol within :buildAt:x :buildAt:y 6 *tmp12
    57 jump *label33 notEqual *tmp12 false
-    * op sub *tmp14 6 0.5
-    * ucontrol approach *tmp10 *tmp11 5.5
+   58 ucontrol approach :buildAt:x :buildAt:y 5.5
    59 label *label32
    60 jump *label31 always
    61 label *label33
 
    69 set :buildAt.1:x .water1X
    70 set :buildAt.1:y .water1Y
    71 jump *label35 lessThan :buildAt.1:x 0
-    * set :moveTo.3:x :buildAt.1:x
-    * set :moveTo.3:y :buildAt.1:y
-    * set *tmp17 :buildAt.1:x
-    * set *tmp18 :buildAt.1:y
-    * set :moveTo.4:x :moveTo.3:x
-    * set :moveTo.4:y :moveTo.3:y
+   72 set :moveTo.4:x :buildAt.1:x
+   73 set :moveTo.4:y :buildAt.1:y
    74 label *label39
-    * ucontrol within *tmp17 *tmp18 6 *tmp19
+   75 ucontrol within :buildAt.1:x :buildAt.1:y 6 *tmp19
    76 jump *label41 notEqual *tmp19 false
-    * op sub *tmp21 6 0.5
-    * ucontrol approach *tmp17 *tmp18 5.5
+   77 ucontrol approach :buildAt.1:x :buildAt.1:y 5.5
    78 label *label40
    79 jump *label39 always
    80 label *label41
 
    88 set :buildAt.2:x .water2X
    89 set :buildAt.2:y .water2Y
    90 jump *label43 lessThan :buildAt.2:x 0
-    * set :moveTo.5:x :buildAt.2:x
-    * set :moveTo.5:y :buildAt.2:y
-    * set *tmp24 :buildAt.2:x
-    * set *tmp25 :buildAt.2:y
-    * set :moveTo.6:x :moveTo.5:x
-    * set :moveTo.6:y :moveTo.5:y
+   91 set :moveTo.6:x :buildAt.2:x
+   92 set :moveTo.6:y :buildAt.2:y
    93 label *label47
-    * ucontrol within *tmp24 *tmp25 6 *tmp26
+   94 ucontrol within :buildAt.2:x :buildAt.2:y 6 *tmp26
    95 jump *label49 notEqual *tmp26 false
-    * op sub *tmp28 6 0.5
-    * ucontrol approach *tmp24 *tmp25 5.5
+   96 ucontrol approach :buildAt.2:x :buildAt.2:y 5.5
    97 label *label48
    98 jump *label47 always
    99 label *label49
 
   107 set :buildAt.3:x .generatorX
   108 set :buildAt.3:y .generatorY
   109 jump *label51 lessThan :buildAt.3:x 0
-    * set :moveTo.7:x :buildAt.3:x
-    * set :moveTo.7:y :buildAt.3:y
-    * set *tmp31 :buildAt.3:x
-    * set *tmp32 :buildAt.3:y
-    * set :moveTo.8:x :moveTo.7:x
-    * set :moveTo.8:y :moveTo.7:y
+  110 set :moveTo.8:x :buildAt.3:x
+  111 set :moveTo.8:y :buildAt.3:y
   112 label *label55
-    * ucontrol within *tmp31 *tmp32 6 *tmp33
+  113 ucontrol within :buildAt.3:x :buildAt.3:y 6 *tmp33
   114 jump *label57 notEqual *tmp33 false
-    * op sub *tmp35 6 0.5
-    * ucontrol approach *tmp31 *tmp32 5.5
+  115 ucontrol approach :buildAt.3:x :buildAt.3:y 5.5
   116 label *label56
   117 jump *label55 always
   118 label *label57
 
   126 set :buildAt.4:x .nodeX
   127 set :buildAt.4:y .nodeY
   128 jump *label59 lessThan :buildAt.4:x 0
-    * set :moveTo.9:x :buildAt.4:x
-    * set :moveTo.9:y :buildAt.4:y
-    * set *tmp38 :buildAt.4:x
-    * set *tmp39 :buildAt.4:y
-    * set :moveTo.10:x :moveTo.9:x
-    * set :moveTo.10:y :moveTo.9:y
+  129 set :moveTo.10:x :buildAt.4:x
+  130 set :moveTo.10:y :buildAt.4:y
   131 label *label63
-    * ucontrol within *tmp38 *tmp39 6 *tmp40
+  132 ucontrol within :buildAt.4:x :buildAt.4:y 6 *tmp40
   133 jump *label65 notEqual *tmp40 false
-    * op sub *tmp42 6 0.5
-    * ucontrol approach *tmp38 *tmp39 5.5
+  134 ucontrol approach :buildAt.4:x :buildAt.4:y 5.5
   135 label *label64
   136 jump *label63 always
   137 label *label65
 
   145 set :buildAt.5:x .panelX
   146 set :buildAt.5:y .panelY
   147 jump *label67 lessThan :buildAt.5:x 0
-    * set :moveTo.11:x :buildAt.5:x
-    * set :moveTo.11:y :buildAt.5:y
-    * set *tmp45 :buildAt.5:x
-    * set *tmp46 :buildAt.5:y
-    * set :moveTo.12:x :moveTo.11:x
-    * set :moveTo.12:y :moveTo.11:y
+  148 set :moveTo.12:x :buildAt.5:x
+  149 set :moveTo.12:y :buildAt.5:y
   150 label *label71
-    * ucontrol within *tmp45 *tmp46 6 *tmp47
+  151 ucontrol within :buildAt.5:x :buildAt.5:y 6 *tmp47
   152 jump *label73 notEqual *tmp47 false
-    * op sub *tmp49 6 0.5
-    * ucontrol approach *tmp45 *tmp46 5.5
+  153 ucontrol approach :buildAt.5:x :buildAt.5:y 5.5
   154 label *label72
   155 jump *label71 always
   156 label *label73
 
   162 label *label68
   163 label *label66
   164 label *label23
-    * set :debugStop:format "Finished."
   165 jump *label75 equal true false
   166 print "Finished."
   167 jump *label78 equal true false
 
   193 select :spotValue:result equal type @air value 0.06274509803921569
   194 set *tmp55 :spotValue:result
   195 label *label85
-    * set :computeRowValues:x1 :spotValue:result
   196 op sub :spotValue.1:x :computeRowValues:x 1
   197 set :spotValue.1:y :computeRowValues:y
   198 set :spotValue.1:ore :computeRowValues:ore
 
   202 select :spotValue.1:result equal type @air value 0.06274509803921569
   203 set *tmp57 :spotValue.1:result
   204 label *label86
-    * set :computeRowValues:x2 :spotValue.1:result
   205 set :spotValue.2:x :computeRowValues:x
   206 set :spotValue.2:y :computeRowValues:y
   207 set :spotValue.2:ore :computeRowValues:ore
 
   211 select :spotValue.2:result equal type @air value 0.06274509803921569
   212 set *tmp59 :spotValue.2:result
   213 label *label87
-    * set :computeRowValues:x3 :spotValue.2:result
   214 op add :spotValue.3:x :computeRowValues:x 1
   215 set :spotValue.3:y :computeRowValues:y
   216 set :spotValue.3:ore :computeRowValues:ore
 
   220 select :spotValue.3:result equal type @air value 0.06274509803921569
   221 set *tmp61 :spotValue.3:result
   222 label *label88
-    * set :computeRowValues:x4 :spotValue.3:result
   223 op add :spotValue.4:x :computeRowValues:x 2
   224 set :spotValue.4:y :computeRowValues:y
   225 set :spotValue.4:ore :computeRowValues:ore
 
   229 select :spotValue.4:result equal type @air value 0.06274509803921569
   230 set *tmp63 :spotValue.4:result
   231 label *label89
-    * set :computeRowValues:x5 :spotValue.4:result
-    * op mul *tmp64 *tmp55 255
-    * op mul *tmp65 *tmp57 255
-    * op mul *tmp66 *tmp59 255
-    * op mul *tmp67 *tmp61 255
-    * op mul *tmp68 *tmp63 255
+  232 op mul *tmp64 :spotValue:result 255
+  233 op mul *tmp65 :spotValue.1:result 255
+  234 op mul *tmp66 :spotValue.2:result 255
+  235 op mul *tmp67 :spotValue.3:result 255
+  236 op mul *tmp68 :spotValue.4:result 255
   237 jump *label91 equal .debug false
   238 print "Spot values for row "
   239 print :computeRowValues:y
 
   257 label *label92
   258 label *label90
   259 jump *label93 equal :computeRowValues:large false
-    * op add *tmp71 *tmp55 *tmp57
-    * op add *tmp72 *tmp71 *tmp59
-    * op add *tmp73 *tmp57 *tmp59
-    * op add *tmp74 *tmp73 *tmp61
-    * op add *tmp75 *tmp59 *tmp61
-    * op add *tmp76 *tmp75 *tmp63
+  260 op add *tmp71 :spotValue:result :spotValue.1:result
+  261 op add *tmp72 *tmp71 :spotValue.2:result
+  262 op add *tmp73 :spotValue.1:result :spotValue.2:result
+  263 op add *tmp74 *tmp73 :spotValue.3:result
+  264 op add *tmp75 :spotValue.2:result :spotValue.3:result
+  265 op add *tmp76 *tmp75 :spotValue.4:result
   266 packcolor :computeRowValues*retval *tmp72 *tmp74 *tmp76 0
   267 jump *label84 always
   268 jump *label94 always
   269 label *label93
-    * op add *tmp78 *tmp55 *tmp57
-    * op add *tmp79 *tmp57 *tmp59
-    * op add *tmp80 *tmp59 *tmp61
-    * op add *tmp81 *tmp61 *tmp63
+  270 op add *tmp78 :spotValue:result :spotValue.1:result
+  271 op add *tmp79 :spotValue.1:result :spotValue.2:result
+  272 op add *tmp80 :spotValue.2:result :spotValue.3:result
+  273 op add *tmp81 :spotValue.3:result :spotValue.4:result
   274 packcolor :computeRowValues*retval *tmp78 *tmp79 *tmp80 *tmp81
   275 jump *label84 always
   276 label *label94
-    * set :computeRowValues*retval null
   277 label *label84
   278 return :computeRowValues*retaddr
   279 end
 
   305 op mul :findDrillLocationLocal:maxDistance *tmp87 .attenuationRate
   306 op min :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
   307 op div .maxAngle :findDrillLocationLocal:distanceLimit 3.8197185279121366
-    * set :locateOreAway:ore :findDrillLocationLocal:item
   308 set :locateOreAway:x :findDrillLocationLocal:oreX
   309 set :locateOreAway:y :findDrillLocationLocal:oreY
-    * set :locateOreAway:distanceLimit :findDrillLocationLocal:distanceLimit
   310 op mul :locateOreAway:distance 3.8197185279121366 .angle
   311 op max .angle .angle @pi
   312 label *label100
 
   316 op mul *tmp97 *tmp96 :locateOreAway:distance
   317 op add *tmp98 .coreX *tmp97
   318 op sub *tmp99 @mapw 5
-    * set :limit:value *tmp98
-    * set :limit:low 5
-    * set :limit:high *tmp99
   319 op max *tmp101 *tmp98 5
   320 op min *tmp100 *tmp101 *tmp99
   321 label *label103
 
   324 op mul *tmp104 *tmp103 :locateOreAway:distance
   325 op add *tmp105 .coreY *tmp104
   326 op sub *tmp106 @maph 5
-    * set :limit.1:value *tmp105
-    * set :limit.1:low 5
-    * set :limit.1:high *tmp106
   327 op max *tmp108 *tmp105 5
   328 op min *tmp107 *tmp108 *tmp106
   329 label *label104
   330 set :locateOreAway:ly *tmp107
-    * set :moveTo.13:x *tmp100
-    * set :moveTo.13:y *tmp107
-    * set :moveTo.13:radius 5
   331 label *label106
-    * ucontrol within :locateOreAway:lx :locateOreAway:ly 5 *tmp110
+  332 ucontrol within *tmp100 *tmp107 5 *tmp110
   333 jump *label108 notEqual *tmp110 false
-    * op sub *tmp112 5 0.5
-    * ucontrol approach :locateOreAway:lx :locateOreAway:ly 4.5
+  334 ucontrol approach *tmp100 *tmp107 4.5
   335 label *label107
   336 jump *label106 always
   337 label *label108
 
   355 op len :locateOreAway:unitDist *tmp125 *tmp126
   356 jump *label111 lessThan :locateOreAway:coreDist 7
   357 jump *label113 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
-    * set :visited:x :locateOreAway:x
-    * set :visited:y :locateOreAway:y
   358 set :visited:index 1
-    * set *tmp133 .locations
   359 set :visited:i 0
   360 label *label116
   361 jump *label118 greaterThanEq :visited:i .locations
 
   404 label *label124
   405 set :moveTo.14:x :locateOreAway:x
   406 set :moveTo.14:y :locateOreAway:y
-    * set *tmp151 :findDrillLocationLocal:oreX
-    * set *tmp152 :findDrillLocationLocal:oreY
-    * set :moveTo.15:x :moveTo.14:x
-    * set :moveTo.15:y :moveTo.14:y
-    * set :moveTo.15:radius 6
+  407 set *tmp151 :locateOreAway:x
+  408 set *tmp152 :locateOreAway:y
+  409 set :moveTo.15:x :locateOreAway:x
+  410 set :moveTo.15:y :locateOreAway:y
   411 label *label127
-    * ucontrol within *tmp151 *tmp152 6 *tmp153
+  412 ucontrol within :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 6 *tmp153
   413 jump *label129 notEqual *tmp153 false
-    * op sub *tmp155 6 0.5
-    * ucontrol approach *tmp151 *tmp152 5.5
+  414 ucontrol approach :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 5.5
   415 label *label128
   416 jump *label127 always
   417 label *label129
 
   441 call *label5 *invalid :computeRowValues*retval (m:*label135) (h:*label135)
   442 label *label135
   443 set :findBestPosition:y2 :computeRowValues*retval
-    * set *tmp161 :findBestPosition:y
   444 set :computeRowValues:x :findBestPosition:x
   445 set :computeRowValues:y :findBestPosition:y
   446 set :computeRowValues:ore :findBestPosition:ore
 
   466 setaddr :computeRowValues*retaddr *label138 (h:*label138)
   467 call *label5 *invalid :computeRowValues*retval (m:*label138) (h:*label138)
   468 label *label138
-    * set :findBestPosition:y5 :computeRowValues*retval
   469 set :findBestPosition:best 0
   470 set :findDrillLocationLocal:diffX 0
   471 set :findDrillLocationLocal:diffY 0
 
   477 op add *tmp172 :findBestPosition:y3 :findBestPosition:y4
   478 op add :findBestPosition:row3 *tmp172 :computeRowValues*retval
   479 set :updateRowPositions3:dy -1
-    * set :updateRowPositions3:row :findBestPosition:row1
   480 unpackcolor :updateRowPositions3:col1 :updateRowPositions3:col2 :updateRowPositions3:col3 0 :findBestPosition:row1
-    * set :updatePosition:dx -1
-    * set :updatePosition:dy -1
-    * set :updatePosition:value :updateRowPositions3:col1
   481 op mul *tmp175 :updateRowPositions3:col1 255
   482 print *tmp175
   483 print " at "
   484 print -1
   485 print ","
   486 print " "
-    * print :updateRowPositions3:dy
+  487 print -1
   488 print " "
   489 print "("
   490 print 0
 
   495 jump *label143 greaterThanEq :updateRowPositions3:col1 0.0392156862745098
   496 jump *label145 lessThanEq :updateRowPositions3:col1 0
   497 set :findDrillLocationLocal:diffX -1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3:dy
+  498 set :findDrillLocationLocal:diffY -1
   499 set :findBestPosition:best :updateRowPositions3:col1
   500 label *label145
   501 label *label146
 
   503 label *label144
   504 print "\n"
   505 label *label142
-    * set :updatePosition.1:dx 0
-    * set :updatePosition.1:dy -1
-    * set :updatePosition.1:value :updateRowPositions3:col2
   506 op mul *tmp180 :updateRowPositions3:col2 255
   507 print *tmp180
   508 print " at "
   509 print 0
   510 print ","
   511 print " "
-    * print :updateRowPositions3:dy
+  512 print -1
   513 print " "
   514 print "("
   515 print :findDrillLocationLocal:diffX
 
   520 jump *label148 greaterThanEq :updateRowPositions3:col2 0.0392156862745098
   521 jump *label150 lessThanEq :updateRowPositions3:col2 :findBestPosition:best
   522 set :findDrillLocationLocal:diffX 0
-    * set :findDrillLocationLocal:diffY :updateRowPositions3:dy
+  523 set :findDrillLocationLocal:diffY -1
   524 set :findBestPosition:best :updateRowPositions3:col2
   525 label *label150
   526 label *label151
 
   528 label *label149
   529 print "\n"
   530 label *label147
-    * set :updatePosition.2:dx 1
-    * set :updatePosition.2:dy -1
-    * set :updatePosition.2:value :updateRowPositions3:col3
   531 op mul *tmp185 :updateRowPositions3:col3 255
   532 print *tmp185
   533 print " at "
   534 print 1
   535 print ","
   536 print " "
-    * print :updateRowPositions3:dy
+  537 print -1
   538 print " "
   539 print "("
   540 print :findDrillLocationLocal:diffX
 
   545 jump *label153 greaterThanEq :updateRowPositions3:col3 0.0392156862745098
   546 jump *label155 lessThanEq :updateRowPositions3:col3 :findBestPosition:best
   547 set :findDrillLocationLocal:diffX 1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3:dy
+  548 set :findDrillLocationLocal:diffY -1
   549 set :findBestPosition:best :updateRowPositions3:col3
   550 label *label155
   551 label *label156
 
   565 print "\n"
   566 label *label141
   567 set :updateRowPositions3.1:dy 0
-    * set :updateRowPositions3.1:row :findBestPosition:row2
   568 unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 0 :findBestPosition:row2
-    * set :updatePosition.3:dx -1
-    * set :updatePosition.3:dy 0
-    * set :updatePosition.3:value :updateRowPositions3.1:col1
   569 op mul *tmp192 :updateRowPositions3.1:col1 255
   570 print *tmp192
   571 print " at "
   572 print -1
   573 print ","
   574 print " "
-    * print :updateRowPositions3.1:dy
+  575 print 0
   576 print " "
   577 print "("
   578 print :findDrillLocationLocal:diffX
 
   583 jump *label159 greaterThanEq :updateRowPositions3.1:col1 0.0392156862745098
   584 jump *label161 lessThanEq :updateRowPositions3.1:col1 :findBestPosition:best
   585 set :findDrillLocationLocal:diffX -1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3.1:dy
+  586 set :findDrillLocationLocal:diffY 0
   587 set :findBestPosition:best :updateRowPositions3.1:col1
   588 label *label161
   589 label *label162
 
   591 label *label160
   592 print "\n"
   593 label *label158
-    * set :updatePosition.4:dx 0
-    * set :updatePosition.4:dy 0
-    * set :updatePosition.4:value :updateRowPositions3.1:col2
   594 op mul *tmp197 :updateRowPositions3.1:col2 255
   595 print *tmp197
   596 print " at "
   597 print 0
   598 print ","
   599 print " "
-    * print :updateRowPositions3.1:dy
+  600 print 0
   601 print " "
   602 print "("
   603 print :findDrillLocationLocal:diffX
 
   608 jump *label164 greaterThanEq :updateRowPositions3.1:col2 0.0392156862745098
   609 jump *label166 lessThanEq :updateRowPositions3.1:col2 :findBestPosition:best
   610 set :findDrillLocationLocal:diffX 0
-    * set :findDrillLocationLocal:diffY :updateRowPositions3.1:dy
+  611 set :findDrillLocationLocal:diffY 0
   612 set :findBestPosition:best :updateRowPositions3.1:col2
   613 label *label166
   614 label *label167
 
   616 label *label165
   617 print "\n"
   618 label *label163
-    * set :updatePosition.5:dx 1
-    * set :updatePosition.5:dy 0
-    * set :updatePosition.5:value :updateRowPositions3.1:col3
   619 op mul *tmp202 :updateRowPositions3.1:col3 255
   620 print *tmp202
   621 print " at "
   622 print 1
   623 print ","
   624 print " "
-    * print :updateRowPositions3.1:dy
+  625 print 0
   626 print " "
   627 print "("
   628 print :findDrillLocationLocal:diffX
 
   633 jump *label169 greaterThanEq :updateRowPositions3.1:col3 0.0392156862745098
   634 jump *label171 lessThanEq :updateRowPositions3.1:col3 :findBestPosition:best
   635 set :findDrillLocationLocal:diffX 1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3.1:dy
+  636 set :findDrillLocationLocal:diffY 0
   637 set :findBestPosition:best :updateRowPositions3.1:col3
   638 label *label171
   639 label *label172
 
   653 print "\n"
   654 label *label157
   655 set :updateRowPositions3.2:dy 1
-    * set :updateRowPositions3.2:row :findBestPosition:row3
   656 unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 0 :findBestPosition:row3
-    * set :updatePosition.6:dx -1
-    * set :updatePosition.6:dy 1
-    * set :updatePosition.6:value :updateRowPositions3.2:col1
   657 op mul *tmp209 :updateRowPositions3.2:col1 255
   658 print *tmp209
   659 print " at "
   660 print -1
   661 print ","
   662 print " "
-    * print :updateRowPositions3.2:dy
+  663 print 1
   664 print " "
   665 print "("
   666 print :findDrillLocationLocal:diffX
 
   671 jump *label175 greaterThanEq :updateRowPositions3.2:col1 0.0392156862745098
   672 jump *label177 lessThanEq :updateRowPositions3.2:col1 :findBestPosition:best
   673 set :findDrillLocationLocal:diffX -1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3.2:dy
+  674 set :findDrillLocationLocal:diffY 1
   675 set :findBestPosition:best :updateRowPositions3.2:col1
   676 label *label177
   677 label *label178
 
   679 label *label176
   680 print "\n"
   681 label *label174
-    * set :updatePosition.7:dx 0
-    * set :updatePosition.7:dy 1
-    * set :updatePosition.7:value :updateRowPositions3.2:col2
   682 op mul *tmp214 :updateRowPositions3.2:col2 255
   683 print *tmp214
   684 print " at "
   685 print 0
   686 print ","
   687 print " "
-    * print :updateRowPositions3.2:dy
+  688 print 1
   689 print " "
   690 print "("
   691 print :findDrillLocationLocal:diffX
 
   696 jump *label180 greaterThanEq :updateRowPositions3.2:col2 0.0392156862745098
   697 jump *label182 lessThanEq :updateRowPositions3.2:col2 :findBestPosition:best
   698 set :findDrillLocationLocal:diffX 0
-    * set :findDrillLocationLocal:diffY :updateRowPositions3.2:dy
+  699 set :findDrillLocationLocal:diffY 1
   700 set :findBestPosition:best :updateRowPositions3.2:col2
   701 label *label182
   702 label *label183
 
   704 label *label181
   705 print "\n"
   706 label *label179
-    * set :updatePosition.8:dx 1
-    * set :updatePosition.8:dy 1
-    * set :updatePosition.8:value :updateRowPositions3.2:col3
   707 op mul *tmp219 :updateRowPositions3.2:col3 255
   708 print *tmp219
   709 print " at "
   710 print 1
   711 print ","
   712 print " "
-    * print :updateRowPositions3.2:dy
+  713 print 1
   714 print " "
   715 print "("
   716 print :findDrillLocationLocal:diffX
 
   721 jump *label185 greaterThanEq :updateRowPositions3.2:col3 0.0392156862745098
   722 jump *label187 lessThanEq :updateRowPositions3.2:col3 :findBestPosition:best
   723 set :findDrillLocationLocal:diffX 1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3.2:dy
+  724 set :findDrillLocationLocal:diffY 1
   725 set :findBestPosition:best :updateRowPositions3.2:col3
   726 label *label187
   727 label *label188
 
   740 print *tmp224
   741 print "\n"
   742 label *label173
-    * op mul *tmp225 :findBestPosition:best 255
   743 print "findBestPosition: "
   744 print :findDrillLocationLocal:diffX
   745 print ","
 
   756 op add :findBestPosition:row3.1 :findBestPosition:y3 :findBestPosition:y4
   757 op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
   758 set :updateRowPositions4:dy -1.5
-    * set :updateRowPositions4:row :findBestPosition:row1.1
   759 unpackcolor :updateRowPositions4:col1 :updateRowPositions4:col2 :updateRowPositions4:col3 :updateRowPositions4:col4 :findBestPosition:row1.1
-    * set :updatePosition.9:dx -1.5
-    * set :updatePosition.9:dy -1.5
-    * set :updatePosition.9:value :updateRowPositions4:col1
   760 op mul *tmp230 :updateRowPositions4:col1 255
   761 print *tmp230
   762 print " at "
   763 print -1.5
   764 print ","
   765 print " "
-    * print :updateRowPositions4:dy
+  766 print -1.5
   767 print " "
   768 print "("
   769 print 0
 
   774 jump *label191 greaterThanEq :updateRowPositions4:col1 0.0392156862745098
   775 jump *label193 lessThanEq :updateRowPositions4:col1 0
   776 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  777 set :findDrillLocationLocal:diffY -1.5
   778 set :findBestPosition:best :updateRowPositions4:col1
   779 label *label193
   780 label *label194
 
   782 label *label192
   783 print "\n"
   784 label *label190
-    * set :updatePosition.10:dx -0.5
-    * set :updatePosition.10:dy -1.5
-    * set :updatePosition.10:value :updateRowPositions4:col2
   785 op mul *tmp235 :updateRowPositions4:col2 255
   786 print *tmp235
   787 print " at "
   788 print -0.5
   789 print ","
   790 print " "
-    * print :updateRowPositions4:dy
+  791 print -1.5
   792 print " "
   793 print "("
   794 print :findDrillLocationLocal:diffX
 
   799 jump *label196 greaterThanEq :updateRowPositions4:col2 0.0392156862745098
   800 jump *label198 lessThanEq :updateRowPositions4:col2 :findBestPosition:best
   801 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  802 set :findDrillLocationLocal:diffY -1.5
   803 set :findBestPosition:best :updateRowPositions4:col2
   804 label *label198
   805 label *label199
 
   807 label *label197
   808 print "\n"
   809 label *label195
-    * set :updatePosition.11:dx 0.5
-    * set :updatePosition.11:dy -1.5
-    * set :updatePosition.11:value :updateRowPositions4:col3
   810 op mul *tmp240 :updateRowPositions4:col3 255
   811 print *tmp240
   812 print " at "
   813 print 0.5
   814 print ","
   815 print " "
-    * print :updateRowPositions4:dy
+  816 print -1.5
   817 print " "
   818 print "("
   819 print :findDrillLocationLocal:diffX
 
   824 jump *label201 greaterThanEq :updateRowPositions4:col3 0.0392156862745098
   825 jump *label203 lessThanEq :updateRowPositions4:col3 :findBestPosition:best
   826 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  827 set :findDrillLocationLocal:diffY -1.5
   828 set :findBestPosition:best :updateRowPositions4:col3
   829 label *label203
   830 label *label204
 
   832 label *label202
   833 print "\n"
   834 label *label200
-    * set :updatePosition.12:dx 1.5
-    * set :updatePosition.12:dy -1.5
-    * set :updatePosition.12:value :updateRowPositions4:col4
   835 op mul *tmp245 :updateRowPositions4:col4 255
   836 print *tmp245
   837 print " at "
   838 print 1.5
   839 print ","
   840 print " "
-    * print :updateRowPositions4:dy
+  841 print -1.5
   842 print " "
   843 print "("
   844 print :findDrillLocationLocal:diffX
 
   849 jump *label206 greaterThanEq :updateRowPositions4:col4 0.0392156862745098
   850 jump *label208 lessThanEq :updateRowPositions4:col4 :findBestPosition:best
   851 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  852 set :findDrillLocationLocal:diffY -1.5
   853 set :findBestPosition:best :updateRowPositions4:col4
   854 label *label208
   855 label *label209
 
   859 label *label205
   860 label *label189
   861 set :updateRowPositions4.1:dy -0.5
-    * set :updateRowPositions4.1:row :findBestPosition:row2.1
   862 unpackcolor :updateRowPositions4.1:col1 :updateRowPositions4.1:col2 :updateRowPositions4.1:col3 :updateRowPositions4.1:col4 :findBestPosition:row2.1
-    * set :updatePosition.13:dx -1.5
-    * set :updatePosition.13:dy -0.5
-    * set :updatePosition.13:value :updateRowPositions4.1:col1
   863 op mul *tmp250 :updateRowPositions4.1:col1 255
   864 print *tmp250
   865 print " at "
   866 print -1.5
   867 print ","
   868 print " "
-    * print :updateRowPositions4.1:dy
+  869 print -0.5
   870 print " "
   871 print "("
   872 print :findDrillLocationLocal:diffX
 
   877 jump *label212 greaterThanEq :updateRowPositions4.1:col1 0.0392156862745098
   878 jump *label214 lessThanEq :updateRowPositions4.1:col1 :findBestPosition:best
   879 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+  880 set :findDrillLocationLocal:diffY -0.5
   881 set :findBestPosition:best :updateRowPositions4.1:col1
   882 label *label214
   883 label *label215
 
   885 label *label213
   886 print "\n"
   887 label *label211
-    * set :updatePosition.14:dx -0.5
-    * set :updatePosition.14:dy -0.5
-    * set :updatePosition.14:value :updateRowPositions4.1:col2
   888 op mul *tmp255 :updateRowPositions4.1:col2 255
   889 print *tmp255
   890 print " at "
   891 print -0.5
   892 print ","
   893 print " "
-    * print :updateRowPositions4.1:dy
+  894 print -0.5
   895 print " "
   896 print "("
   897 print :findDrillLocationLocal:diffX
 
   902 jump *label217 greaterThanEq :updateRowPositions4.1:col2 0.0392156862745098
   903 jump *label219 lessThanEq :updateRowPositions4.1:col2 :findBestPosition:best
   904 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+  905 set :findDrillLocationLocal:diffY -0.5
   906 set :findBestPosition:best :updateRowPositions4.1:col2
   907 label *label219
   908 label *label220
 
   910 label *label218
   911 print "\n"
   912 label *label216
-    * set :updatePosition.15:dx 0.5
-    * set :updatePosition.15:dy -0.5
-    * set :updatePosition.15:value :updateRowPositions4.1:col3
   913 op mul *tmp260 :updateRowPositions4.1:col3 255
   914 print *tmp260
   915 print " at "
   916 print 0.5
   917 print ","
   918 print " "
-    * print :updateRowPositions4.1:dy
+  919 print -0.5
   920 print " "
   921 print "("
   922 print :findDrillLocationLocal:diffX
 
   927 jump *label222 greaterThanEq :updateRowPositions4.1:col3 0.0392156862745098
   928 jump *label224 lessThanEq :updateRowPositions4.1:col3 :findBestPosition:best
   929 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+  930 set :findDrillLocationLocal:diffY -0.5
   931 set :findBestPosition:best :updateRowPositions4.1:col3
   932 label *label224
   933 label *label225
 
   935 label *label223
   936 print "\n"
   937 label *label221
-    * set :updatePosition.16:dx 1.5
-    * set :updatePosition.16:dy -0.5
-    * set :updatePosition.16:value :updateRowPositions4.1:col4
   938 op mul *tmp265 :updateRowPositions4.1:col4 255
   939 print *tmp265
   940 print " at "
   941 print 1.5
   942 print ","
   943 print " "
-    * print :updateRowPositions4.1:dy
+  944 print -0.5
   945 print " "
   946 print "("
   947 print :findDrillLocationLocal:diffX
 
   952 jump *label227 greaterThanEq :updateRowPositions4.1:col4 0.0392156862745098
   953 jump *label229 lessThanEq :updateRowPositions4.1:col4 :findBestPosition:best
   954 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+  955 set :findDrillLocationLocal:diffY -0.5
   956 set :findBestPosition:best :updateRowPositions4.1:col4
   957 label *label229
   958 label *label230
 
   962 label *label226
   963 label *label210
   964 set :updateRowPositions4.2:dy 0.5
-    * set :updateRowPositions4.2:row :findBestPosition:row3.1
   965 unpackcolor :updateRowPositions4.2:col1 :updateRowPositions4.2:col2 :updateRowPositions4.2:col3 :updateRowPositions4.2:col4 :findBestPosition:row3.1
-    * set :updatePosition.17:dx -1.5
-    * set :updatePosition.17:dy 0.5
-    * set :updatePosition.17:value :updateRowPositions4.2:col1
   966 op mul *tmp270 :updateRowPositions4.2:col1 255
   967 print *tmp270
   968 print " at "
   969 print -1.5
   970 print ","
   971 print " "
-    * print :updateRowPositions4.2:dy
+  972 print 0.5
   973 print " "
   974 print "("
   975 print :findDrillLocationLocal:diffX
 
   980 jump *label233 greaterThanEq :updateRowPositions4.2:col1 0.0392156862745098
   981 jump *label235 lessThanEq :updateRowPositions4.2:col1 :findBestPosition:best
   982 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+  983 set :findDrillLocationLocal:diffY 0.5
   984 set :findBestPosition:best :updateRowPositions4.2:col1
   985 label *label235
   986 label *label236
 
   988 label *label234
   989 print "\n"
   990 label *label232
-    * set :updatePosition.18:dx -0.5
-    * set :updatePosition.18:dy 0.5
-    * set :updatePosition.18:value :updateRowPositions4.2:col2
   991 op mul *tmp275 :updateRowPositions4.2:col2 255
   992 print *tmp275
   993 print " at "
   994 print -0.5
   995 print ","
   996 print " "
-    * print :updateRowPositions4.2:dy
+  997 print 0.5
   998 print " "
   999 print "("
  1000 print :findDrillLocationLocal:diffX
 
  1005 jump *label238 greaterThanEq :updateRowPositions4.2:col2 0.0392156862745098
  1006 jump *label240 lessThanEq :updateRowPositions4.2:col2 :findBestPosition:best
  1007 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+ 1008 set :findDrillLocationLocal:diffY 0.5
  1009 set :findBestPosition:best :updateRowPositions4.2:col2
  1010 label *label240
  1011 label *label241
 
  1013 label *label239
  1014 print "\n"
  1015 label *label237
-    * set :updatePosition.19:dx 0.5
-    * set :updatePosition.19:dy 0.5
-    * set :updatePosition.19:value :updateRowPositions4.2:col3
  1016 op mul *tmp280 :updateRowPositions4.2:col3 255
  1017 print *tmp280
  1018 print " at "
  1019 print 0.5
  1020 print ","
  1021 print " "
-    * print :updateRowPositions4.2:dy
+ 1022 print 0.5
  1023 print " "
  1024 print "("
  1025 print :findDrillLocationLocal:diffX
 
  1030 jump *label243 greaterThanEq :updateRowPositions4.2:col3 0.0392156862745098
  1031 jump *label245 lessThanEq :updateRowPositions4.2:col3 :findBestPosition:best
  1032 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+ 1033 set :findDrillLocationLocal:diffY 0.5
  1034 set :findBestPosition:best :updateRowPositions4.2:col3
  1035 label *label245
  1036 label *label246
 
  1038 label *label244
  1039 print "\n"
  1040 label *label242
-    * set :updatePosition.20:dx 1.5
-    * set :updatePosition.20:dy 0.5
-    * set :updatePosition.20:value :updateRowPositions4.2:col4
  1041 op mul *tmp285 :updateRowPositions4.2:col4 255
  1042 print *tmp285
  1043 print " at "
  1044 print 1.5
  1045 print ","
  1046 print " "
-    * print :updateRowPositions4.2:dy
+ 1047 print 0.5
  1048 print " "
  1049 print "("
  1050 print :findDrillLocationLocal:diffX
 
  1055 jump *label248 greaterThanEq :updateRowPositions4.2:col4 0.0392156862745098
  1056 jump *label250 lessThanEq :updateRowPositions4.2:col4 :findBestPosition:best
  1057 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+ 1058 set :findDrillLocationLocal:diffY 0.5
  1059 set :findBestPosition:best :updateRowPositions4.2:col4
  1060 label *label250
  1061 label *label251
 
  1065 label *label247
  1066 label *label231
  1067 set :updateRowPositions4.3:dy 1.5
-    * set :updateRowPositions4.3:row :findBestPosition:row4
  1068 unpackcolor :updateRowPositions4.3:col1 :updateRowPositions4.3:col2 :updateRowPositions4.3:col3 :updateRowPositions4.3:col4 :findBestPosition:row4
-    * set :updatePosition.21:dx -1.5
-    * set :updatePosition.21:dy 1.5
-    * set :updatePosition.21:value :updateRowPositions4.3:col1
  1069 op mul *tmp290 :updateRowPositions4.3:col1 255
  1070 print *tmp290
  1071 print " at "
  1072 print -1.5
  1073 print ","
  1074 print " "
-    * print :updateRowPositions4.3:dy
+ 1075 print 1.5
  1076 print " "
  1077 print "("
  1078 print :findDrillLocationLocal:diffX
 
  1083 jump *label254 greaterThanEq :updateRowPositions4.3:col1 0.0392156862745098
  1084 jump *label256 lessThanEq :updateRowPositions4.3:col1 :findBestPosition:best
  1085 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+ 1086 set :findDrillLocationLocal:diffY 1.5
  1087 set :findBestPosition:best :updateRowPositions4.3:col1
  1088 label *label256
  1089 label *label257
 
  1091 label *label255
  1092 print "\n"
  1093 label *label253
-    * set :updatePosition.22:dx -0.5
-    * set :updatePosition.22:dy 1.5
-    * set :updatePosition.22:value :updateRowPositions4.3:col2
  1094 op mul *tmp295 :updateRowPositions4.3:col2 255
  1095 print *tmp295
  1096 print " at "
  1097 print -0.5
  1098 print ","
  1099 print " "
-    * print :updateRowPositions4.3:dy
+ 1100 print 1.5
  1101 print " "
  1102 print "("
  1103 print :findDrillLocationLocal:diffX
 
  1108 jump *label259 greaterThanEq :updateRowPositions4.3:col2 0.0392156862745098
  1109 jump *label261 lessThanEq :updateRowPositions4.3:col2 :findBestPosition:best
  1110 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+ 1111 set :findDrillLocationLocal:diffY 1.5
  1112 set :findBestPosition:best :updateRowPositions4.3:col2
  1113 label *label261
  1114 label *label262
 
  1116 label *label260
  1117 print "\n"
  1118 label *label258
-    * set :updatePosition.23:dx 0.5
-    * set :updatePosition.23:dy 1.5
-    * set :updatePosition.23:value :updateRowPositions4.3:col3
  1119 op mul *tmp300 :updateRowPositions4.3:col3 255
  1120 print *tmp300
  1121 print " at "
  1122 print 0.5
  1123 print ","
  1124 print " "
-    * print :updateRowPositions4.3:dy
+ 1125 print 1.5
  1126 print " "
  1127 print "("
  1128 print :findDrillLocationLocal:diffX
 
  1133 jump *label264 greaterThanEq :updateRowPositions4.3:col3 0.0392156862745098
  1134 jump *label266 lessThanEq :updateRowPositions4.3:col3 :findBestPosition:best
  1135 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+ 1136 set :findDrillLocationLocal:diffY 1.5
  1137 set :findBestPosition:best :updateRowPositions4.3:col3
  1138 label *label266
  1139 label *label267
 
  1141 label *label265
  1142 print "\n"
  1143 label *label263
-    * set :updatePosition.24:dx 1.5
-    * set :updatePosition.24:dy 1.5
-    * set :updatePosition.24:value :updateRowPositions4.3:col4
  1144 op mul *tmp305 :updateRowPositions4.3:col4 255
  1145 print *tmp305
  1146 print " at "
  1147 print 1.5
  1148 print ","
  1149 print " "
-    * print :updateRowPositions4.3:dy
+ 1150 print 1.5
  1151 print " "
  1152 print "("
  1153 print :findDrillLocationLocal:diffX
 
  1158 jump *label269 greaterThanEq :updateRowPositions4.3:col4 0.0392156862745098
  1159 jump *label271 lessThanEq :updateRowPositions4.3:col4 :findBestPosition:best
  1160 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+ 1161 set :findDrillLocationLocal:diffY 1.5
  1162 set :findBestPosition:best :updateRowPositions4.3:col4
  1163 label *label271
  1164 label *label272
 
  1182 op mul *tmp156 :findBestPosition:best 255
  1183 jump *label133 always
  1184 label *label133
-    * set :findDrillLocationLocal:score *tmp156
  1185 print "Ore at "
  1186 print :findDrillLocationLocal:oreX
  1187 print ","
 
  1264 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
  1265 write :findDrillLocationLocal:bestY bank1 :findDrillLocationLocal:count
  1266 op add .locations .locations 1
-    * set :debugPrintSpot:text ""
  1267 op sub :round.2:x @second .start
  1268 op add *tmp353 :round.2:x 0.5
  1269 op floor *tmp352 *tmp353
 
  1273 print " s"
  1274 print "\n"
  1275 set :debugPrintSpot:index -1
-    * set *tmp355 .locations
  1276 set :debugPrintSpot:i 0
  1277 label *label299
  1278 jump *label301 greaterThanEq :debugPrintSpot:i .locations
 
  1336 set :moveTo.16:y :createTerrainMask:y
  1337 set *tmp362 :createTerrainMask:x
  1338 set *tmp363 :createTerrainMask:y
-    * set :moveTo.17:x :moveTo.16:x
-    * set :moveTo.17:y :moveTo.16:y
-    * set :moveTo.17:radius 6
+ 1339 set :moveTo.17:x :createTerrainMask:x
+ 1340 set :moveTo.17:y :createTerrainMask:y
  1341 label *label308
-    * ucontrol within *tmp362 *tmp363 6 *tmp364
+ 1342 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp364
  1343 jump *label310 notEqual *tmp364 false
-    * op sub *tmp366 6 0.5
-    * ucontrol approach *tmp362 *tmp363 5.5
+ 1344 ucontrol approach :createTerrainMask:x :createTerrainMask:y 5.5
  1345 label *label309
  1346 jump *label308 always
  1347 label *label310
 
  1399 op shr :shiftMask:mask :shiftMask:mask *tmp384
  1400 label *label322
  1401 jump *label323 equal :shiftMask:shiftX 0
-    * op abs *tmp387 :shiftMask:shiftX
  1402 op sub *tmp388 7 *tmp371
  1403 op shr :shiftMask:keep 0b1111111 *tmp388
  1404 jump *label325 lessThanEq :shiftMask:shiftX 0
-    * op abs *tmp392 :shiftMask:shiftX
-    * op sub *tmp393 7 *tmp371
  1405 op shl :shiftMask:keep :shiftMask:keep *tmp388
  1406 label *label325
  1407 label *label326
 
  1469 setaddr :findPossiblePlacement*retaddr *label341 (h:*label341)
  1470 call *label10 *invalid :findPossiblePlacement*retval (m:*label341) (h:*label341)
  1471 label *label341
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1472 jump *label342 lessThan :findPossiblePlacement*retval 0
  1473 op add *tmp415 :tryPlaceGenerator:centerX 0.5
  1474 op add .water2X *tmp415 :findPossiblePlacement:x
 
  1476 op add .water2Y *tmp417 :findPossiblePlacement:y
  1477 op add *tmp419 :tryPlaceGenerator:centerX 2.5
  1478 op add .generatorX *tmp419 :findPossiblePlacement:x
-    * op add *tmp421 :tryPlaceGenerator:centerY 0.5
  1479 op add .generatorY *tmp417 :findPossiblePlacement:y
  1480 op shl *tmp423 :tryPlaceGenerator:generatorHorizontal :findPossiblePlacement*retval
  1481 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp423
 
  1488 setaddr :findPossiblePlacement*retaddr *label344 (h:*label344)
  1489 call *label10 *invalid :findPossiblePlacement*retval (m:*label344) (h:*label344)
  1490 label *label344
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1491 jump *label345 greaterThanEq :findPossiblePlacement*retval 0
  1492 set :tryPlaceGenerator*retval false
  1493 jump *label340 always
 
  1497 op add .water2X *tmp427 :findPossiblePlacement:x
  1498 op add *tmp429 :tryPlaceGenerator:centerY 0.5
  1499 op add .water2Y *tmp429 :findPossiblePlacement:y
-    * op add *tmp431 :tryPlaceGenerator:centerX 0.5
  1500 op add .generatorX *tmp427 :findPossiblePlacement:x
  1501 op add *tmp433 :tryPlaceGenerator:centerY 2.5
  1502 op add .generatorY *tmp433 :findPossiblePlacement:y
 
  1510 setaddr :findPossiblePlacement*retaddr *label347 (h:*label347)
  1511 call *label10 *invalid :findPossiblePlacement*retval (m:*label347) (h:*label347)
  1512 label *label347
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1513 jump *label348 greaterThanEq :findPossiblePlacement*retval 0
  1514 set :tryPlaceGenerator*retval false
  1515 jump *label340 always
 
  1526 setaddr :findPossiblePlacement*retaddr *label350 (h:*label350)
  1527 call *label10 *invalid :findPossiblePlacement*retval (m:*label350) (h:*label350)
  1528 label *label350
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1529 jump *label351 greaterThanEq :findPossiblePlacement*retval 0
  1530 set :tryPlaceGenerator*retval false
  1531 jump *label340 always
 
  1552 setaddr :createTerrainMask*retaddr *label354 (h:*label354)
  1553 call *label8 *invalid :createTerrainMask*retval (m:*label354) (h:*label354)
  1554 label *label354
-    * set :layoutThoriumDrillAtLocation:plainTerrainMask :createTerrainMask*retval
  1555 set :createFixedMatrix:row0 0b0000000
-    * set :createFixedMatrix:row1 0b0000000
-    * set :createFixedMatrix:row2 0b0011100
-    * set :createFixedMatrix:row3 0b0011100
-    * set :createFixedMatrix:row4 0b0011100
-    * set :createFixedMatrix:row5 0b0000000
-    * set :createFixedMatrix:row6 0b0000000
-    * set *tmp449 0b0000000
-    * op shl *tmp450 0b0000000 7
-    * op or *tmp451 :createFixedMatrix:row0 0
-    * op shl *tmp452 0b0011100 14
-    * op or *tmp453 *tmp451 458752
-    * op shl *tmp454 0b0011100 21
-    * op or *tmp455 *tmp453 58720256
-    * op shl *tmp456 0b0011100 28
-    * op or *tmp457 *tmp455 7516192768
-    * op shl *tmp458 0b0000000 35
-    * op or *tmp459 *tmp457 0
-    * op shl *tmp460 0b0000000 42
-    * op or *tmp448 *tmp459 0
+ 1556 op or *tmp451 0b0000000 0
+ 1557 op or *tmp453 0 458752
+ 1558 op or *tmp455 458752 58720256
+ 1559 op or *tmp457 59179008 7516192768
+ 1560 op or *tmp459 7575371776 0
+ 1561 op or *tmp448 7575371776 0
  1562 label *label355
-    * op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval *tmp448
+ 1563 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
  1564 set :createFixedMatrix.1:row0 0b1000001
-    * set :createFixedMatrix.1:row1 0b0000000
-    * set :createFixedMatrix.1:row2 0b0011100
-    * set :createFixedMatrix.1:row3 0b0011100
-    * set :createFixedMatrix.1:row4 0b0011100
-    * set :createFixedMatrix.1:row5 0b0000000
-    * set :createFixedMatrix.1:row6 0b1000001
-    * set *tmp464 0b1000001
-    * op shl *tmp465 0b0000000 7
-    * op or *tmp466 :createFixedMatrix.1:row0 0
-    * op shl *tmp467 0b0011100 14
-    * op or *tmp468 *tmp466 458752
-    * op shl *tmp469 0b0011100 21
-    * op or *tmp470 *tmp468 58720256
-    * op shl *tmp471 0b0011100 28
-    * op or *tmp472 *tmp470 7516192768
-    * op shl *tmp473 0b0000000 35
-    * op or *tmp474 *tmp472 0
-    * op shl *tmp475 0b1000001 42
-    * op or *tmp463 *tmp474 285873023221760
+ 1565 op or *tmp466 0b1000001 0
+ 1566 op or *tmp468 65 458752
+ 1567 op or *tmp470 458817 58720256
+ 1568 op or *tmp472 59179073 7516192768
+ 1569 op or *tmp474 7575371841 0
+ 1570 op or *tmp463 7575371841 285873023221760
  1571 label *label356
-    * op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp463
+ 1572 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
  1573 set :createFixedMatrix.2:row0 0b11
-    * set :createFixedMatrix.2:row1 0b11
-    * set *tmp479 0b11
-    * op shl *tmp480 0b11 7
-    * op or *tmp478 :createFixedMatrix.2:row0 384
+ 1574 op or *tmp478 0b11 384
  1575 label *label357
-    * set :layoutThoriumDrillAtLocation:extractorMask *tmp478
+ 1576 set :layoutThoriumDrillAtLocation:extractorMask 387
  1577 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
-    * set :findPossiblePlacement:placementMask *tmp478
+ 1578 set :findPossiblePlacement:placementMask 387
  1579 set :findPossiblePlacement:width 2
  1580 set :findPossiblePlacement:height 2
  1581 setaddr :findPossiblePlacement*retaddr *label358 (h:*label358)
  1582 call *label10 *invalid :findPossiblePlacement*retval (m:*label358) (h:*label358)
  1583 label *label358
-    * set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
-    * set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
-    * set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
  1584 jump *label359 lessThan :findPossiblePlacement*retval 0
  1585 op add *tmp485 .drillX 0.5
  1586 op add .water1X *tmp485 :findPossiblePlacement:x
 
  1591 label *label359
  1592 label *label360
  1593 set :createFixedMatrix.3:row0 0b1111
-    * set :createFixedMatrix.3:row1 0b1111
-    * set *tmp490 0b1111
-    * op shl *tmp491 0b1111 7
-    * op or *tmp489 :createFixedMatrix.3:row0 1920
+ 1594 op or *tmp489 0b1111 1920
  1595 label *label361
-    * set :layoutThoriumDrillAtLocation:generatorHorizontal *tmp489
+ 1596 set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
  1597 set :createFixedMatrix.4:row0 0b11
-    * set :createFixedMatrix.4:row1 0b11
-    * set :createFixedMatrix.4:row2 0b11
-    * set :createFixedMatrix.4:row3 0b11
-    * set *tmp494 0b11
-    * op shl *tmp495 0b11 7
-    * op or *tmp496 :createFixedMatrix.4:row0 384
-    * op shl *tmp497 0b11 14
-    * op or *tmp498 *tmp496 49152
-    * op shl *tmp499 0b11 21
-    * op or *tmp493 *tmp498 6291456
+ 1598 op or *tmp496 0b11 384
+ 1599 op or *tmp498 387 49152
+ 1600 op or *tmp493 49539 6291456
  1601 label *label362
-    * set :layoutThoriumDrillAtLocation:generatorVertical *tmp493
+ 1602 set :layoutThoriumDrillAtLocation:generatorVertical 6340995
  1603 set :tryPlaceGenerator:centerX .drillX
  1604 set :tryPlaceGenerator:centerY .drillY
  1605 set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:terrainMask
-    * set :tryPlaceGenerator:generatorHorizontal *tmp489
-    * set :tryPlaceGenerator:generatorVertical *tmp493
+ 1606 set :tryPlaceGenerator:generatorHorizontal 1935
+ 1607 set :tryPlaceGenerator:generatorVertical 6340995
  1608 setaddr :tryPlaceGenerator*retaddr *label363 (h:*label363)
  1609 call *label11 *invalid :tryPlaceGenerator*retval (m:*label363) (h:*label363)
  1610 label *label363
 
  1648 setaddr :shiftMask*retaddr *label374 (h:*label374)
  1649 call *label9 *invalid :shiftMask*retval (m:*label374) (h:*label374)
  1650 label *label374
-    * set :layoutThoriumDrillAtLocation:shiftedMask :shiftMask*retval
  1651 op or :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:newTerrainMask :shiftMask*retval
  1652 op add *tmp510 .drillX :layoutThoriumDrillAtLocation:sx
  1653 op add *tmp511 .drillY :layoutThoriumDrillAtLocation:sy

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-72 instructions):
 
    47 setaddr :layoutThoriumDrillAtLocation*retaddr *label25 (h:*label25)
    48 call *label12 *invalid :layoutThoriumDrillAtLocation*retval (m:*label25) (h:*label25)
    49 label *label25
-    * set :buildAt:x .drillX
-    * set :buildAt:y .drillY
    50 jump *label27 lessThan :buildAt:x 0
-    * set :moveTo.2:x :buildAt:x
-    * set :moveTo.2:y :buildAt:y
    51 label *label31
    52 ucontrol within :buildAt:x :buildAt:y 6 *tmp12
    53 jump *label33 notEqual *tmp12 false
 
    62 label *label27
    63 label *label28
    64 label *label26
-    * set :buildAt.1:x .water1X
-    * set :buildAt.1:y .water1Y
    65 jump *label35 lessThan :buildAt.1:x 0
-    * set :moveTo.4:x :buildAt.1:x
-    * set :moveTo.4:y :buildAt.1:y
    66 label *label39
    67 ucontrol within :buildAt.1:x :buildAt.1:y 6 *tmp19
    68 jump *label41 notEqual *tmp19 false
 
    77 label *label35
    78 label *label36
    79 label *label34
-    * set :buildAt.2:x .water2X
-    * set :buildAt.2:y .water2Y
    80 jump *label43 lessThan :buildAt.2:x 0
-    * set :moveTo.6:x :buildAt.2:x
-    * set :moveTo.6:y :buildAt.2:y
    81 label *label47
    82 ucontrol within :buildAt.2:x :buildAt.2:y 6 *tmp26
    83 jump *label49 notEqual *tmp26 false
 
    92 label *label43
    93 label *label44
    94 label *label42
-    * set :buildAt.3:x .generatorX
-    * set :buildAt.3:y .generatorY
    95 jump *label51 lessThan :buildAt.3:x 0
-    * set :moveTo.8:x :buildAt.3:x
-    * set :moveTo.8:y :buildAt.3:y
    96 label *label55
    97 ucontrol within :buildAt.3:x :buildAt.3:y 6 *tmp33
    98 jump *label57 notEqual *tmp33 false
 
   107 label *label51
   108 label *label52
   109 label *label50
-    * set :buildAt.4:x .nodeX
-    * set :buildAt.4:y .nodeY
   110 jump *label59 lessThan :buildAt.4:x 0
-    * set :moveTo.10:x :buildAt.4:x
-    * set :moveTo.10:y :buildAt.4:y
   111 label *label63
   112 ucontrol within :buildAt.4:x :buildAt.4:y 6 *tmp40
   113 jump *label65 notEqual *tmp40 false
 
   122 label *label59
   123 label *label60
   124 label *label58
-    * set :buildAt.5:x .panelX
-    * set :buildAt.5:y .panelY
   125 jump *label67 lessThan :buildAt.5:x 0
-    * set :moveTo.12:x :buildAt.5:x
-    * set :moveTo.12:y :buildAt.5:y
   126 label *label71
   127 ucontrol within :buildAt.5:x :buildAt.5:y 6 *tmp47
   128 jump *label73 notEqual *tmp47 false
 
   167 select value equal floor :spotValue:ore 0.00392156862745098 0
   168 select type equal type @boulder @air type
   169 select :spotValue:result equal type @air value 0.06274509803921569
-    * set *tmp55 :spotValue:result
   170 label *label85
   171 op sub :spotValue.1:x :computeRowValues:x 1
   172 set :spotValue.1:y :computeRowValues:y
 
   175 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   176 select type equal type @boulder @air type
   177 select :spotValue.1:result equal type @air value 0.06274509803921569
-    * set *tmp57 :spotValue.1:result
   178 label *label86
   179 set :spotValue.2:x :computeRowValues:x
   180 set :spotValue.2:y :computeRowValues:y
 
   183 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   184 select type equal type @boulder @air type
   185 select :spotValue.2:result equal type @air value 0.06274509803921569
-    * set *tmp59 :spotValue.2:result
   186 label *label87
   187 op add :spotValue.3:x :computeRowValues:x 1
   188 set :spotValue.3:y :computeRowValues:y
 
   191 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   192 select type equal type @boulder @air type
   193 select :spotValue.3:result equal type @air value 0.06274509803921569
-    * set *tmp61 :spotValue.3:result
   194 label *label88
   195 op add :spotValue.4:x :computeRowValues:x 2
   196 set :spotValue.4:y :computeRowValues:y
 
   199 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   200 select type equal type @boulder @air type
   201 select :spotValue.4:result equal type @air value 0.06274509803921569
-    * set *tmp63 :spotValue.4:result
   202 label *label89
   203 op mul *tmp64 :spotValue:result 255
   204 op mul *tmp65 :spotValue.1:result 255
 
   290 op max *tmp101 *tmp98 5
   291 op min *tmp100 *tmp101 *tmp99
   292 label *label103
-    * set :locateOreAway:lx *tmp100
   293 op cos *tmp103 :locateOreAway:a
   294 op mul *tmp104 *tmp103 :locateOreAway:distance
   295 op add *tmp105 .coreY *tmp104
 
   297 op max *tmp108 *tmp105 5
   298 op min *tmp107 *tmp108 *tmp106
   299 label *label104
-    * set :locateOreAway:ly *tmp107
   300 label *label106
   301 ucontrol within *tmp100 *tmp107 5 *tmp110
   302 jump *label108 notEqual *tmp110 false
 
   371 jump *label95 always
   372 label *label123
   373 label *label124
-    * set :moveTo.14:x :locateOreAway:x
-    * set :moveTo.14:y :locateOreAway:y
-    * set *tmp151 :locateOreAway:x
-    * set *tmp152 :locateOreAway:y
-    * set :moveTo.15:x :locateOreAway:x
-    * set :moveTo.15:y :locateOreAway:y
   374 label *label127
-    * ucontrol within :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 6 *tmp153
+  375 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp153
   376 jump *label129 notEqual *tmp153 false
-    * ucontrol approach :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 5.5
+  377 ucontrol approach :locateOreAway:x :locateOreAway:y 5.5
   378 label *label128
   379 jump *label127 always
   380 label *label129
 
   439 op add :findBestPosition:row2 *tmp170 :findBestPosition:y4
   440 op add *tmp172 :findBestPosition:y3 :findBestPosition:y4
   441 op add :findBestPosition:row3 *tmp172 :computeRowValues*retval
-    * set :updateRowPositions3:dy -1
   442 unpackcolor :updateRowPositions3:col1 :updateRowPositions3:col2 :updateRowPositions3:col3 0 :findBestPosition:row1
   443 op mul *tmp175 :updateRowPositions3:col1 255
   444 print *tmp175
 
   526 print *tmp190
   527 print "\n"
   528 label *label141
-    * set :updateRowPositions3.1:dy 0
   529 unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 0 :findBestPosition:row2
   530 op mul *tmp192 :updateRowPositions3.1:col1 255
   531 print *tmp192
 
   613 print *tmp207
   614 print "\n"
   615 label *label157
-    * set :updateRowPositions3.2:dy 1
   616 unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 0 :findBestPosition:row3
   617 op mul *tmp209 :updateRowPositions3.2:col1 255
   618 print *tmp209
 
   715 op add :findBestPosition:row2.1 :findBestPosition:y2 :findBestPosition:y3
   716 op add :findBestPosition:row3.1 :findBestPosition:y3 :findBestPosition:y4
   717 op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
-    * set :updateRowPositions4:dy -1.5
   718 unpackcolor :updateRowPositions4:col1 :updateRowPositions4:col2 :updateRowPositions4:col3 :updateRowPositions4:col4 :findBestPosition:row1.1
   719 op mul *tmp230 :updateRowPositions4:col1 255
   720 print *tmp230
 
   817 print "\n"
   818 label *label205
   819 label *label189
-    * set :updateRowPositions4.1:dy -0.5
   820 unpackcolor :updateRowPositions4.1:col1 :updateRowPositions4.1:col2 :updateRowPositions4.1:col3 :updateRowPositions4.1:col4 :findBestPosition:row2.1
   821 op mul *tmp250 :updateRowPositions4.1:col1 255
   822 print *tmp250
 
   919 print "\n"
   920 label *label226
   921 label *label210
-    * set :updateRowPositions4.2:dy 0.5
   922 unpackcolor :updateRowPositions4.2:col1 :updateRowPositions4.2:col2 :updateRowPositions4.2:col3 :updateRowPositions4.2:col4 :findBestPosition:row3.1
   923 op mul *tmp270 :updateRowPositions4.2:col1 255
   924 print *tmp270
 
  1021 print "\n"
  1022 label *label247
  1023 label *label231
-    * set :updateRowPositions4.3:dy 1.5
  1024 unpackcolor :updateRowPositions4.3:col1 :updateRowPositions4.3:col2 :updateRowPositions4.3:col3 :updateRowPositions4.3:col4 :findBestPosition:row4
  1025 op mul *tmp290 :updateRowPositions4.3:col1 255
  1026 print *tmp290
 
  1288 return :isBlocked*retaddr
  1289 end
  1290 label *label8
-    * set :moveTo.16:x :createTerrainMask:x
-    * set :moveTo.16:y :createTerrainMask:y
-    * set *tmp362 :createTerrainMask:x
-    * set *tmp363 :createTerrainMask:y
-    * set :moveTo.17:x :createTerrainMask:x
-    * set :moveTo.17:y :createTerrainMask:y
  1291 label *label308
  1292 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp364
  1293 jump *label310 notEqual *tmp364 false
 
  1502 setaddr :createTerrainMask*retaddr *label354 (h:*label354)
  1503 call *label8 *invalid :createTerrainMask*retval (m:*label354) (h:*label354)
  1504 label *label354
-    * set :createFixedMatrix:row0 0b0000000
-    * op or *tmp451 0b0000000 0
-    * op or *tmp453 0 458752
-    * op or *tmp455 458752 58720256
-    * op or *tmp457 59179008 7516192768
-    * op or *tmp459 7575371776 0
-    * op or *tmp448 7575371776 0
  1505 label *label355
  1506 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
-    * set :createFixedMatrix.1:row0 0b1000001
-    * op or *tmp466 0b1000001 0
-    * op or *tmp468 65 458752
-    * op or *tmp470 458817 58720256
-    * op or *tmp472 59179073 7516192768
-    * op or *tmp474 7575371841 0
-    * op or *tmp463 7575371841 285873023221760
  1507 label *label356
  1508 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
-    * set :createFixedMatrix.2:row0 0b11
-    * op or *tmp478 0b11 384
  1509 label *label357
  1510 set :layoutThoriumDrillAtLocation:extractorMask 387
  1511 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
 
  1524 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
  1525 label *label359
  1526 label *label360
-    * set :createFixedMatrix.3:row0 0b1111
-    * op or *tmp489 0b1111 1920
  1527 label *label361
  1528 set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
-    * set :createFixedMatrix.4:row0 0b11
-    * op or *tmp496 0b11 384
-    * op or *tmp498 387 49152
-    * op or *tmp493 49539 6291456
  1529 label *label362
  1530 set :layoutThoriumDrillAtLocation:generatorVertical 6340995
  1531 set :tryPlaceGenerator:centerX .drillX

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
   280 set :locateOreAway:y :findDrillLocationLocal:oreY
   281 op mul :locateOreAway:distance 3.8197185279121366 .angle
   282 op max .angle .angle @pi
+  283 op sub *tmp99 @mapw 5
+  284 op sub *tmp106 @maph 5
   285 label *label100
   286 jump *label102 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   287 op div :locateOreAway:a .angle @degToRad
   288 op sin *tmp96 :locateOreAway:a
   289 op mul *tmp97 *tmp96 :locateOreAway:distance
   290 op add *tmp98 .coreX *tmp97
-    * op sub *tmp99 @mapw 5
   291 op max *tmp101 *tmp98 5
   292 op min *tmp100 *tmp101 *tmp99
   293 label *label103
   294 op cos *tmp103 :locateOreAway:a
   295 op mul *tmp104 *tmp103 :locateOreAway:distance
   296 op add *tmp105 .coreY *tmp104
-    * op sub *tmp106 @maph 5
   297 op max *tmp108 *tmp105 5
   298 op min *tmp107 *tmp108 *tmp106
   299 label *label104

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-2 instructions):
 
   284 op sub *tmp106 @maph 5
   285 label *label100
   286 jump *label102 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
+  287 label *label394
   288 op div :locateOreAway:a .angle @degToRad
   289 op sin *tmp96 :locateOreAway:a
   290 op mul *tmp97 *tmp96 :locateOreAway:distance
 
   329 set :visited:i 0
   330 label *label116
   331 jump *label118 greaterThanEq :visited:i .locations
+  332 label *label395
   333 read :visited:lx bank1 :visited:index
   334 op add *tmp136 :visited:index 1
   335 read :visited:ly bank1 *tmp136
 
   344 op add :visited:index :visited:index 3
   345 label *label117
   346 op add :visited:i :visited:i 1
-    * jump *label116 always
+  347 jump *label395 lessThan :visited:i .locations
   348 label *label118
   349 set *tmp132 false
   350 jump *label115 always
 
   361 label *label111
   362 label *label112
   363 label *label101
-    * jump *label100 always
+  364 jump *label394 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   365 label *label102
   366 set *tmp91 false
   367 jump *label99 always
 
  1234 set :debugPrintSpot:i 0
  1235 label *label299
  1236 jump *label301 greaterThanEq :debugPrintSpot:i .locations
+ 1237 label *label396
  1238 op add :debugPrintSpot:index :debugPrintSpot:index 1
  1239 read :debugPrintSpot:size bank1 :debugPrintSpot:index
  1240 op add :debugPrintSpot:index :debugPrintSpot:index 1
 
  1251 print "\n"
  1252 label *label300
  1253 op add :debugPrintSpot:i :debugPrintSpot:i 1
-    * jump *label299 always
+ 1254 jump *label396 lessThan :debugPrintSpot:i .locations
  1255 label *label301
  1256 print ""
  1257 printflush message1
 
  1303 set :createTerrainMask:result 0
  1304 set :createTerrainMask:r 3
  1305 label *label311
-    * jump *label313 lessThan :createTerrainMask:r -3
+ 1306 label *label397
  1307 set :createTerrainMask:c 3
  1308 label *label314
-    * jump *label316 lessThan :createTerrainMask:c -3
+ 1309 label *label398
  1310 op shl *tmp367 :createTerrainMask:result 1
  1311 op add *tmp368 :createTerrainMask:x :createTerrainMask:c
  1312 op add *tmp369 :createTerrainMask:y :createTerrainMask:r
 
  1318 op or :createTerrainMask:result *tmp367 :isBlocked*retval
  1319 label *label315
  1320 op sub :createTerrainMask:c :createTerrainMask:c 1
-    * jump *label314 always
+ 1321 jump *label398 greaterThanEq :createTerrainMask:c -3
  1322 label *label316
  1323 label *label312
  1324 op sub :createTerrainMask:r :createTerrainMask:r 1
-    * jump *label311 always
+ 1325 jump *label397 greaterThanEq :createTerrainMask:r -3
  1326 label *label313
  1327 set :createTerrainMask*retval :createTerrainMask:result
  1328 jump *label305 always
 
  1376 set :findPossiblePlacement:y -3
  1377 label *label328
  1378 jump *label330 greaterThan :findPossiblePlacement:y 3
+ 1379 label *label399
  1380 op add *tmp397 :findPossiblePlacement:y 3
  1381 op mul *tmp398 7 *tmp397
  1382 op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp398
  1383 set :findPossiblePlacement:x -3
  1384 label *label331
  1385 jump *label333 greaterThan :findPossiblePlacement:x 3
+ 1386 label *label400
  1387 op and *tmp400 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
  1388 jump *label334 notEqual *tmp400 0
  1389 op mul *tmp403 :findPossiblePlacement:y 7
 
  1400 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
  1401 label *label332
  1402 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
-    * jump *label331 always
+ 1403 jump *label400 lessThanEq :findPossiblePlacement:x 3
  1404 label *label333
  1405 op sub *tmp409 3 :findPossiblePlacement:height
  1406 jump *label338 lessThanEq :findPossiblePlacement:y *tmp409
 
  1409 label *label339
  1410 label *label329
  1411 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
-    * jump *label328 always
+ 1412 jump *label399 lessThanEq :findPossiblePlacement:y 3
  1413 label *label330
  1414 set :findPossiblePlacement*retval -1
  1415 jump *label327 always

Modifications by Inline function 'isBlocked' defined at line 344:1 (-4 instructions):
 
  1282 set :findDrillLocation*finished true
  1283 jump *label83 always
  1284 end
-    * label *label7
-    * ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
-    * select type equal type @boulder @air type
-    * select :isBlocked:result equal type @air 0 1
-    * set :isBlocked*retval :isBlocked:result
-    * label *label304
-    * return :isBlocked*retaddr
-    * end
  1285 label *label8
  1286 label *label308
  1287 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp364
 
  1304 op add *tmp369 :createTerrainMask:y :createTerrainMask:r
  1305 set :isBlocked:x *tmp368
  1306 set :isBlocked:y *tmp369
-    * setaddr :isBlocked*retaddr *label317 (h:*label317)
-    * call *label7 *invalid :isBlocked*retval (m:*label317) (h:*label317)
-    * label *label317
+ 1307 label *label401
+ 1308 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
+ 1309 select type equal type @boulder @air type
+ 1310 select :isBlocked:result equal type @air 0 1
+ 1311 set :isBlocked*retval :isBlocked:result
+ 1312 label *label402
  1313 op or :createTerrainMask:result *tmp367 :isBlocked*retval
  1314 label *label315
  1315 op sub :createTerrainMask:c :createTerrainMask:c 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   328 set :visited:index 1
   329 set :visited:i 0
   330 label *label116
-    * jump *label118 greaterThanEq :visited:i .locations
+  331 jump *label118 greaterThanEq 0 .locations
   332 label *label395
   333 read :visited:lx bank1 :visited:index
   334 op add *tmp136 :visited:index 1
 
  1233 set :debugPrintSpot:index -1
  1234 set :debugPrintSpot:i 0
  1235 label *label299
-    * jump *label301 greaterThanEq :debugPrintSpot:i .locations
+ 1236 jump *label301 greaterThanEq 0 .locations
  1237 label *label396
  1238 op add :debugPrintSpot:index :debugPrintSpot:index 1
  1239 read :debugPrintSpot:size bank1 :debugPrintSpot:index
 
  1310 select :isBlocked:result equal type @air 0 1
  1311 set :isBlocked*retval :isBlocked:result
  1312 label *label402
-    * op or :createTerrainMask:result *tmp367 :isBlocked*retval
+ 1313 op or :createTerrainMask:result *tmp367 :isBlocked:result
  1314 label *label315
  1315 op sub :createTerrainMask:c :createTerrainMask:c 1
  1316 jump *label398 greaterThanEq :createTerrainMask:c -3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
  1308 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
  1309 select type equal type @boulder @air type
  1310 select :isBlocked:result equal type @air 0 1
-    * set :isBlocked*retval :isBlocked:result
  1311 label *label402
  1312 op or :createTerrainMask:result *tmp367 :isBlocked:result
  1313 label *label315

Modifications by Inline function 'shiftMask' defined at line 371:1 (-4 instructions):
 
  1323 label *label305
  1324 return :createTerrainMask*retaddr
  1325 end
-    * label *label9
-    * op abs *tmp371 :shiftMask:shiftX
-    * op greaterThan *tmp372 *tmp371 6
-    * op abs *tmp373 :shiftMask:shiftY
-    * op greaterThan *tmp374 *tmp373 6
-    * op or *tmp375 *tmp372 *tmp374
-    * jump *label319 equal *tmp375 false
-    * set :shiftMask*retval 0
-    * jump *label318 always
-    * label *label319
-    * label *label320
-    * op mul *tmp377 7 :shiftMask:shiftY
-    * op add :shiftMask:shift :shiftMask:shiftX *tmp377
-    * jump *label321 lessThanEq :shiftMask:shift 0
-    * op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
-    * op and *tmp382 :shiftMask:mask :shiftMask:clearMask
-    * op shl :shiftMask:mask *tmp382 :shiftMask:shift
-    * jump *label322 always
-    * label *label321
-    * op sub *tmp384 0 :shiftMask:shift
-    * op shr :shiftMask:mask :shiftMask:mask *tmp384
-    * label *label322
-    * jump *label323 equal :shiftMask:shiftX 0
-    * op sub *tmp388 7 *tmp371
-    * op shr :shiftMask:keep 0b1111111 *tmp388
-    * jump *label325 lessThanEq :shiftMask:shiftX 0
-    * op shl :shiftMask:keep :shiftMask:keep *tmp388
-    * label *label325
-    * label *label326
-    * op shl *tmp394 :shiftMask:keep 7
-    * op or :shiftMask:keep :shiftMask:keep *tmp394
-    * op shl *tmp395 :shiftMask:keep 14
-    * op or :shiftMask:keep :shiftMask:keep *tmp395
-    * op shl *tmp396 :shiftMask:keep 21
-    * op or :shiftMask:keep :shiftMask:keep *tmp396
-    * op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
-    * label *label323
-    * label *label324
-    * set :shiftMask*retval :shiftMask:mask
-    * jump *label318 always
-    * label *label318
-    * return :shiftMask*retaddr
-    * end
  1326 label *label10
  1327 set :findPossiblePlacement:y -3
  1328 label *label328
 
  1529 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
  1530 set :shiftMask:shiftX *tmp507
  1531 set :shiftMask:shiftY *tmp508
-    * setaddr :shiftMask*retaddr *label374 (h:*label374)
-    * call *label9 *invalid :shiftMask*retval (m:*label374) (h:*label374)
-    * label *label374
+ 1532 label *label403
+ 1533 op abs *tmp371 :shiftMask:shiftX
+ 1534 op greaterThan *tmp372 *tmp371 6
+ 1535 op abs *tmp373 :shiftMask:shiftY
+ 1536 op greaterThan *tmp374 *tmp373 6
+ 1537 op or *tmp375 *tmp372 *tmp374
+ 1538 jump *label404 equal *tmp375 false
+ 1539 set :shiftMask*retval 0
+ 1540 jump *label412 always
+ 1541 label *label404
+ 1542 label *label405
+ 1543 op mul *tmp377 7 :shiftMask:shiftY
+ 1544 op add :shiftMask:shift :shiftMask:shiftX *tmp377
+ 1545 jump *label406 lessThanEq :shiftMask:shift 0
+ 1546 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
+ 1547 op and *tmp382 :shiftMask:mask :shiftMask:clearMask
+ 1548 op shl :shiftMask:mask *tmp382 :shiftMask:shift
+ 1549 jump *label407 always
+ 1550 label *label406
+ 1551 op sub *tmp384 0 :shiftMask:shift
+ 1552 op shr :shiftMask:mask :shiftMask:mask *tmp384
+ 1553 label *label407
+ 1554 jump *label410 equal :shiftMask:shiftX 0
+ 1555 op sub *tmp388 7 *tmp371
+ 1556 op shr :shiftMask:keep 0b1111111 *tmp388
+ 1557 jump *label408 lessThanEq :shiftMask:shiftX 0
+ 1558 op shl :shiftMask:keep :shiftMask:keep *tmp388
+ 1559 label *label408
+ 1560 label *label409
+ 1561 op shl *tmp394 :shiftMask:keep 7
+ 1562 op or :shiftMask:keep :shiftMask:keep *tmp394
+ 1563 op shl *tmp395 :shiftMask:keep 14
+ 1564 op or :shiftMask:keep :shiftMask:keep *tmp395
+ 1565 op shl *tmp396 :shiftMask:keep 21
+ 1566 op or :shiftMask:keep :shiftMask:keep *tmp396
+ 1567 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
+ 1568 label *label410
+ 1569 label *label411
+ 1570 set :shiftMask*retval :shiftMask:mask
+ 1571 jump *label412 always
+ 1572 label *label412
  1573 op or :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:newTerrainMask :shiftMask*retval
  1574 op add *tmp510 .drillX :layoutThoriumDrillAtLocation:sx
  1575 op add *tmp511 .drillY :layoutThoriumDrillAtLocation:sy

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1530 set :shiftMask:shiftX *tmp507
  1531 set :shiftMask:shiftY *tmp508
  1532 label *label403
-    * op abs *tmp371 :shiftMask:shiftX
+ 1533 op abs *tmp371 *tmp507
  1534 op greaterThan *tmp372 *tmp371 6
-    * op abs *tmp373 :shiftMask:shiftY
+ 1535 op abs *tmp373 *tmp508
  1536 op greaterThan *tmp374 *tmp373 6
  1537 op or *tmp375 *tmp372 *tmp374
  1538 jump *label404 equal *tmp375 false
 
  1540 jump *label412 always
  1541 label *label404
  1542 label *label405
-    * op mul *tmp377 7 :shiftMask:shiftY
-    * op add :shiftMask:shift :shiftMask:shiftX *tmp377
+ 1543 op mul *tmp377 7 *tmp508
+ 1544 op add :shiftMask:shift *tmp507 *tmp377
  1545 jump *label406 lessThanEq :shiftMask:shift 0
  1546 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
-    * op and *tmp382 :shiftMask:mask :shiftMask:clearMask
+ 1547 op and *tmp382 :layoutThoriumDrillAtLocation:terrainMask :shiftMask:clearMask
  1548 op shl :shiftMask:mask *tmp382 :shiftMask:shift
  1549 jump *label407 always
  1550 label *label406
  1551 op sub *tmp384 0 :shiftMask:shift
-    * op shr :shiftMask:mask :shiftMask:mask *tmp384
+ 1552 op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask *tmp384
  1553 label *label407
-    * jump *label410 equal :shiftMask:shiftX 0
+ 1554 jump *label410 equal *tmp507 0
  1555 op sub *tmp388 7 *tmp371
  1556 op shr :shiftMask:keep 0b1111111 *tmp388
-    * jump *label408 lessThanEq :shiftMask:shiftX 0
+ 1557 jump *label408 lessThanEq *tmp507 0
  1558 op shl :shiftMask:keep :shiftMask:keep *tmp388
  1559 label *label408
  1560 label *label409
 
  1570 set :shiftMask*retval :shiftMask:mask
  1571 jump *label412 always
  1572 label *label412
-    * op or :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:newTerrainMask :shiftMask*retval
+ 1573 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval :shiftMask*retval
  1574 op add *tmp510 .drillX :layoutThoriumDrillAtLocation:sx
  1575 op add *tmp511 .drillY :layoutThoriumDrillAtLocation:sy
  1576 set :tryPlaceGenerator:centerX *tmp510

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
  1523 setaddr :createTerrainMask*retaddr *label373 (h:*label373)
  1524 call *label8 *invalid :createTerrainMask*retval (m:*label373) (h:*label373)
  1525 label *label373
-    * set :layoutThoriumDrillAtLocation:newTerrainMask :createTerrainMask*retval
  1526 op sub *tmp507 0 :layoutThoriumDrillAtLocation:sx
  1527 op sub *tmp508 0 :layoutThoriumDrillAtLocation:sy
  1528 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
-    * set :shiftMask:shiftX *tmp507
-    * set :shiftMask:shiftY *tmp508
  1529 label *label403
  1530 op abs *tmp371 *tmp507
  1531 op greaterThan *tmp372 *tmp371 6

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-2 instructions):
 
   138 label *label68
   139 label *label66
   140 label *label23
-    * jump *label75 equal true false
   141 print "Finished."
-    * jump *label78 equal true false
   142 printflush message1
   143 control enabled switch1 true
   144 label *label80

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-8 instructions):
 
   241 op add *tmp80 :spotValue.2:result :spotValue.3:result
   242 op add *tmp81 :spotValue.3:result :spotValue.4:result
   243 packcolor :computeRowValues*retval *tmp78 *tmp79 *tmp80 *tmp81
-    * jump *label84 always
   244 label *label94
   245 label *label84
   246 return :computeRowValues*retaddr
 
   344 jump *label395 lessThan :visited:i .locations
   345 label *label118
   346 set *tmp132 false
-    * jump *label115 always
   347 label *label115
   348 jump *label121 notEqual *tmp132 false
   349 op div *tmp146 7.639437055824273 :locateOreAway:distance
 
   360 jump *label394 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   361 label *label102
   362 set *tmp91 false
-    * jump *label99 always
   363 label *label99
   364 set :findDrillLocationLocal:oreX :locateOreAway:x
   365 set :findDrillLocationLocal:oreY :locateOreAway:y
 
  1133 label *label275
  1134 label *label273
  1135 op mul *tmp156 :findBestPosition:best 255
-    * jump *label133 always
  1136 label *label133
  1137 print "Ore at "
  1138 print :findDrillLocationLocal:oreX
 
  1313 jump *label397 greaterThanEq :createTerrainMask:r -3
  1314 label *label313
  1315 set :createTerrainMask*retval :createTerrainMask:result
-    * jump *label305 always
  1316 label *label305
  1317 return :createTerrainMask*retaddr
  1318 end
 
  1356 jump *label399 lessThanEq :findPossiblePlacement:y 3
  1357 label *label330
  1358 set :findPossiblePlacement*retval -1
-    * jump *label327 always
  1359 label *label327
  1360 return :findPossiblePlacement*retaddr
  1361 end
 
  1557 label *label410
  1558 label *label411
  1559 set :shiftMask*retval :shiftMask:mask
-    * jump *label412 always
  1560 label *label412
  1561 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval :shiftMask*retval
  1562 op add *tmp510 .drillX :layoutThoriumDrillAtLocation:sx
 
  1579 multilabel *label372 (m:marker0)
  1580 label *label368
  1581 set :layoutThoriumDrillAtLocation*retval true
-    * jump *label353 always
  1582 label *label353
  1583 return :layoutThoriumDrillAtLocation*retaddr
  1584 end

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-2 instructions):
 
  1294 label *label314
  1295 label *label398
  1296 op shl *tmp367 :createTerrainMask:result 1
-    * op add *tmp368 :createTerrainMask:x :createTerrainMask:c
-    * op add *tmp369 :createTerrainMask:y :createTerrainMask:r
-    * set :isBlocked:x *tmp368
-    * set :isBlocked:y *tmp369
+ 1297 op add :isBlocked:x :createTerrainMask:x :createTerrainMask:c
+ 1298 op add :isBlocked:y :createTerrainMask:y :createTerrainMask:r
  1299 label *label401
  1300 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
  1301 select type equal type @boulder @air type

Modifications by Iterated phase, Loop Hoisting, pass 2, iteration 1:
 
  1291 label *label311
  1292 label *label397
  1293 set :createTerrainMask:c 3
+ 1294 op add :isBlocked:y :createTerrainMask:y :createTerrainMask:r
  1295 label *label314
  1296 label *label398
  1297 op shl *tmp367 :createTerrainMask:result 1
  1298 op add :isBlocked:x :createTerrainMask:x :createTerrainMask:c
-    * op add :isBlocked:y :createTerrainMask:y :createTerrainMask:r
  1299 label *label401
  1300 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
  1301 select type equal type @boulder @air type

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
     8 label *label15
     9 ubind @poly
    10 ulocate building core false @copper :x :y 0 :core
-    * label *label16
    11 jump *label15 equal :core null
-    * label *label17
    12 label *label19
    13 ucontrol within :x :y 1 *tmp3
    14 jump *label21 notEqual *tmp3 false
    15 ucontrol approach :x :y 0.5
-    * label *label20
    16 jump *label19 always
    17 label *label21
-    * label *label18
    18 set .start @second
    19 set :findDrillLocationLocal:x :x
    20 set :findDrillLocationLocal:y :y
 
    37 print "."
    38 print "\n"
    39 jump *label23 always
-    * label *label22
    40 set .drillX 129
    41 set .drillY 96
    42 setaddr :layoutThoriumDrillAtLocation*retaddr *label25 (h:*label25)
 
    47 ucontrol within :buildAt:x :buildAt:y 6 *tmp12
    48 jump *label33 notEqual *tmp12 false
    49 ucontrol approach :buildAt:x :buildAt:y 5.5
-    * label *label32
    50 jump *label31 always
    51 label *label33
-    * label *label30
-    * label *label29
    52 ucontrol build :buildAt:x :buildAt:y @laser-drill 0 null
    53 wait 0.1
    54 label *label27
-    * label *label28
-    * label *label26
    55 jump *label35 lessThan :buildAt.1:x 0
    56 label *label39
    57 ucontrol within :buildAt.1:x :buildAt.1:y 6 *tmp19
    58 jump *label41 notEqual *tmp19 false
    59 ucontrol approach :buildAt.1:x :buildAt.1:y 5.5
-    * label *label40
    60 jump *label39 always
    61 label *label41
-    * label *label38
-    * label *label37
    62 ucontrol build :buildAt.1:x :buildAt.1:y @water-extractor 0 null
    63 wait 0.1
    64 label *label35
-    * label *label36
-    * label *label34
    65 jump *label43 lessThan :buildAt.2:x 0
    66 label *label47
    67 ucontrol within :buildAt.2:x :buildAt.2:y 6 *tmp26
    68 jump *label49 notEqual *tmp26 false
    69 ucontrol approach :buildAt.2:x :buildAt.2:y 5.5
-    * label *label48
    70 jump *label47 always
    71 label *label49
-    * label *label46
-    * label *label45
    72 ucontrol build :buildAt.2:x :buildAt.2:y @water-extractor 0 null
    73 wait 0.1
    74 label *label43
-    * label *label44
-    * label *label42
    75 jump *label51 lessThan :buildAt.3:x 0
    76 label *label55
    77 ucontrol within :buildAt.3:x :buildAt.3:y 6 *tmp33
    78 jump *label57 notEqual *tmp33 false
    79 ucontrol approach :buildAt.3:x :buildAt.3:y 5.5
-    * label *label56
    80 jump *label55 always
    81 label *label57
-    * label *label54
-    * label *label53
    82 ucontrol build :buildAt.3:x :buildAt.3:y @steam-generator 0 null
    83 wait 0.1
    84 label *label51
-    * label *label52
-    * label *label50
    85 jump *label59 lessThan :buildAt.4:x 0
    86 label *label63
    87 ucontrol within :buildAt.4:x :buildAt.4:y 6 *tmp40
    88 jump *label65 notEqual *tmp40 false
    89 ucontrol approach :buildAt.4:x :buildAt.4:y 5.5
-    * label *label64
    90 jump *label63 always
    91 label *label65
-    * label *label62
-    * label *label61
    92 ucontrol build :buildAt.4:x :buildAt.4:y @power-node 0 null
    93 wait 0.1
    94 label *label59
-    * label *label60
-    * label *label58
    95 jump *label67 lessThan :buildAt.5:x 0
    96 label *label71
    97 ucontrol within :buildAt.5:x :buildAt.5:y 6 *tmp47
    98 jump *label73 notEqual *tmp47 false
    99 ucontrol approach :buildAt.5:x :buildAt.5:y 5.5
-    * label *label72
   100 jump *label71 always
   101 label *label73
-    * label *label70
-    * label *label69
   102 ucontrol build :buildAt.5:x :buildAt.5:y @solar-panel 0 null
   103 wait 0.1
   104 label *label67
-    * label *label68
-    * label *label66
   105 label *label23
   106 print "Finished."
   107 printflush message1
   108 control enabled switch1 true
   109 label *label80
-    * label *label81
   110 sensor *tmp53 switch1 @enabled
   111 jump *label80 notEqual *tmp53 false
-    * label *label82
-    * label *label78
-    * label *label79
-    * label *label77
   112 end
-    * label *label75
-    * label *label76
-    * label *label74
   113 label *label83
   114 wait 1e12
   115 jump *label83 always
 
   122 select value equal floor :spotValue:ore 0.00392156862745098 0
   123 select type equal type @boulder @air type
   124 select :spotValue:result equal type @air value 0.06274509803921569
-    * label *label85
   125 op sub :spotValue.1:x :computeRowValues:x 1
   126 set :spotValue.1:y :computeRowValues:y
   127 set :spotValue.1:ore :computeRowValues:ore
 
   129 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   130 select type equal type @boulder @air type
   131 select :spotValue.1:result equal type @air value 0.06274509803921569
-    * label *label86
   132 set :spotValue.2:x :computeRowValues:x
   133 set :spotValue.2:y :computeRowValues:y
   134 set :spotValue.2:ore :computeRowValues:ore
 
   136 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   137 select type equal type @boulder @air type
   138 select :spotValue.2:result equal type @air value 0.06274509803921569
-    * label *label87
   139 op add :spotValue.3:x :computeRowValues:x 1
   140 set :spotValue.3:y :computeRowValues:y
   141 set :spotValue.3:ore :computeRowValues:ore
 
   143 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   144 select type equal type @boulder @air type
   145 select :spotValue.3:result equal type @air value 0.06274509803921569
-    * label *label88
   146 op add :spotValue.4:x :computeRowValues:x 2
   147 set :spotValue.4:y :computeRowValues:y
   148 set :spotValue.4:ore :computeRowValues:ore
 
   150 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   151 select type equal type @boulder @air type
   152 select :spotValue.4:result equal type @air value 0.06274509803921569
-    * label *label89
   153 op mul *tmp64 :spotValue:result 255
   154 op mul *tmp65 :spotValue.1:result 255
   155 op mul *tmp66 :spotValue.2:result 255
 
   175 print *tmp68
   176 print "\n"
   177 label *label91
-    * label *label92
-    * label *label90
   178 jump *label93 equal :computeRowValues:large false
   179 op add *tmp71 :spotValue:result :spotValue.1:result
   180 op add *tmp72 *tmp71 :spotValue.2:result
 
   229 op max .angle .angle @pi
   230 op sub *tmp99 @mapw 5
   231 op sub *tmp106 @maph 5
-    * label *label100
   232 jump *label102 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   233 label *label394
   234 op div :locateOreAway:a .angle @degToRad
 
   237 op add *tmp98 .coreX *tmp97
   238 op max *tmp101 *tmp98 5
   239 op min *tmp100 *tmp101 *tmp99
-    * label *label103
   240 op cos *tmp103 :locateOreAway:a
   241 op mul *tmp104 *tmp103 :locateOreAway:distance
   242 op add *tmp105 .coreY *tmp104
   243 op max *tmp108 *tmp105 5
   244 op min *tmp107 *tmp108 *tmp106
-    * label *label104
   245 label *label106
   246 ucontrol within *tmp100 *tmp107 5 *tmp110
   247 jump *label108 notEqual *tmp110 false
   248 ucontrol approach *tmp100 *tmp107 4.5
-    * label *label107
   249 jump *label106 always
   250 label *label108
-    * label *label105
   251 op div *tmp113 3.8197185279121366 :locateOreAway:distance
   252 op add .angle .angle *tmp113
   253 op mul :locateOreAway:distance 3.8197185279121366 .angle
 
   256 set *tmp91 false
   257 jump *label99 always
   258 label *label109
-    * label *label110
   259 op sub *tmp120 :locateOreAway:x .coreX
   260 op abs *tmp121 *tmp120
   261 op sub *tmp122 :locateOreAway:y .coreY
 
   268 jump *label113 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
   269 set :visited:index 1
   270 set :visited:i 0
-    * label *label116
   271 jump *label118 greaterThanEq 0 .locations
   272 label *label395
   273 read :visited:lx bank1 :visited:index
 
   280 set *tmp132 true
   281 jump *label115 always
   282 label *label119
-    * label *label120
   283 op add :visited:index :visited:index 3
-    * label *label117
   284 op add :visited:i :visited:i 1
   285 jump *label395 lessThan :visited:i .locations
   286 label *label118
 
   292 set *tmp91 true
   293 jump *label99 always
   294 label *label121
-    * label *label122
   295 label *label113
-    * label *label114
   296 label *label111
-    * label *label112
-    * label *label101
   297 jump *label394 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   298 label *label102
   299 set *tmp91 false
 
   304 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   305 jump *label95 always
   306 label *label123
-    * label *label124
   307 label *label127
   308 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp153
   309 jump *label129 notEqual *tmp153 false
   310 ucontrol approach :locateOreAway:x :locateOreAway:y 5.5
-    * label *label128
   311 jump *label127 always
   312 label *label129
-    * label *label126
-    * label *label125
   313 set :findDrillLocationLocal:last 0
   314 label *label130
   315 set :findBestPosition:x :findDrillLocationLocal:oreX
 
   390 set :findDrillLocationLocal:diffY -1
   391 set :findBestPosition:best :updateRowPositions3:col1
   392 label *label145
-    * label *label146
   393 label *label143
-    * label *label144
   394 print "\n"
-    * label *label142
   395 op mul *tmp180 :updateRowPositions3:col2 255
   396 print *tmp180
   397 print " at "
 
   412 set :findDrillLocationLocal:diffY -1
   413 set :findBestPosition:best :updateRowPositions3:col2
   414 label *label150
-    * label *label151
   415 label *label148
-    * label *label149
   416 print "\n"
-    * label *label147
   417 op mul *tmp185 :updateRowPositions3:col3 255
   418 print *tmp185
   419 print " at "
 
   434 set :findDrillLocationLocal:diffY -1
   435 set :findBestPosition:best :updateRowPositions3:col3
   436 label *label155
-    * label *label156
   437 label *label153
-    * label *label154
   438 print "\n"
-    * label *label152
   439 op mul *tmp190 :findBestPosition:best 255
   440 print "updateRowPositions3: "
   441 print :findDrillLocationLocal:diffX
 
   446 print " "
   447 print *tmp190
   448 print "\n"
-    * label *label141
   449 unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 0 :findBestPosition:row2
   450 op mul *tmp192 :updateRowPositions3.1:col1 255
   451 print *tmp192
 
   467 set :findDrillLocationLocal:diffY 0
   468 set :findBestPosition:best :updateRowPositions3.1:col1
   469 label *label161
-    * label *label162
   470 label *label159
-    * label *label160
   471 print "\n"
-    * label *label158
   472 op mul *tmp197 :updateRowPositions3.1:col2 255
   473 print *tmp197
   474 print " at "
 
   489 set :findDrillLocationLocal:diffY 0
   490 set :findBestPosition:best :updateRowPositions3.1:col2
   491 label *label166
-    * label *label167
   492 label *label164
-    * label *label165
   493 print "\n"
-    * label *label163
   494 op mul *tmp202 :updateRowPositions3.1:col3 255
   495 print *tmp202
   496 print " at "
 
   511 set :findDrillLocationLocal:diffY 0
   512 set :findBestPosition:best :updateRowPositions3.1:col3
   513 label *label171
-    * label *label172
   514 label *label169
-    * label *label170
   515 print "\n"
-    * label *label168
   516 op mul *tmp207 :findBestPosition:best 255
   517 print "updateRowPositions3: "
   518 print :findDrillLocationLocal:diffX
 
   523 print " "
   524 print *tmp207
   525 print "\n"
-    * label *label157
   526 unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 0 :findBestPosition:row3
   527 op mul *tmp209 :updateRowPositions3.2:col1 255
   528 print *tmp209
 
   544 set :findDrillLocationLocal:diffY 1
   545 set :findBestPosition:best :updateRowPositions3.2:col1
   546 label *label177
-    * label *label178
   547 label *label175
-    * label *label176
   548 print "\n"
-    * label *label174
   549 op mul *tmp214 :updateRowPositions3.2:col2 255
   550 print *tmp214
   551 print " at "
 
   566 set :findDrillLocationLocal:diffY 1
   567 set :findBestPosition:best :updateRowPositions3.2:col2
   568 label *label182
-    * label *label183
   569 label *label180
-    * label *label181
   570 print "\n"
-    * label *label179
   571 op mul *tmp219 :updateRowPositions3.2:col3 255
   572 print *tmp219
   573 print " at "
 
   588 set :findDrillLocationLocal:diffY 1
   589 set :findBestPosition:best :updateRowPositions3.2:col3
   590 label *label187
-    * label *label188
   591 label *label185
-    * label *label186
   592 print "\n"
-    * label *label184
   593 op mul *tmp224 :findBestPosition:best 255
   594 print "updateRowPositions3: "
   595 print :findDrillLocationLocal:diffX
 
   600 print " "
   601 print *tmp224
   602 print "\n"
-    * label *label173
   603 print "findBestPosition: "
   604 print :findDrillLocationLocal:diffX
   605 print ","
 
   636 set :findDrillLocationLocal:diffY -1.5
   637 set :findBestPosition:best :updateRowPositions4:col1
   638 label *label193
-    * label *label194
   639 label *label191
-    * label *label192
   640 print "\n"
-    * label *label190
   641 op mul *tmp235 :updateRowPositions4:col2 255
   642 print *tmp235
   643 print " at "
 
   658 set :findDrillLocationLocal:diffY -1.5
   659 set :findBestPosition:best :updateRowPositions4:col2
   660 label *label198
-    * label *label199
   661 label *label196
-    * label *label197
   662 print "\n"
-    * label *label195
   663 op mul *tmp240 :updateRowPositions4:col3 255
   664 print *tmp240
   665 print " at "
 
   680 set :findDrillLocationLocal:diffY -1.5
   681 set :findBestPosition:best :updateRowPositions4:col3
   682 label *label203
-    * label *label204
   683 label *label201
-    * label *label202
   684 print "\n"
-    * label *label200
   685 op mul *tmp245 :updateRowPositions4:col4 255
   686 print *tmp245
   687 print " at "
 
   702 set :findDrillLocationLocal:diffY -1.5
   703 set :findBestPosition:best :updateRowPositions4:col4
   704 label *label208
-    * label *label209
   705 label *label206
-    * label *label207
   706 print "\n"
-    * label *label205
-    * label *label189
   707 unpackcolor :updateRowPositions4.1:col1 :updateRowPositions4.1:col2 :updateRowPositions4.1:col3 :updateRowPositions4.1:col4 :findBestPosition:row2.1
   708 op mul *tmp250 :updateRowPositions4.1:col1 255
   709 print *tmp250
 
   725 set :findDrillLocationLocal:diffY -0.5
   726 set :findBestPosition:best :updateRowPositions4.1:col1
   727 label *label214
-    * label *label215
   728 label *label212
-    * label *label213
   729 print "\n"
-    * label *label211
   730 op mul *tmp255 :updateRowPositions4.1:col2 255
   731 print *tmp255
   732 print " at "
 
   747 set :findDrillLocationLocal:diffY -0.5
   748 set :findBestPosition:best :updateRowPositions4.1:col2
   749 label *label219
-    * label *label220
   750 label *label217
-    * label *label218
   751 print "\n"
-    * label *label216
   752 op mul *tmp260 :updateRowPositions4.1:col3 255
   753 print *tmp260
   754 print " at "
 
   769 set :findDrillLocationLocal:diffY -0.5
   770 set :findBestPosition:best :updateRowPositions4.1:col3
   771 label *label224
-    * label *label225
   772 label *label222
-    * label *label223
   773 print "\n"
-    * label *label221
   774 op mul *tmp265 :updateRowPositions4.1:col4 255
   775 print *tmp265
   776 print " at "
 
   791 set :findDrillLocationLocal:diffY -0.5
   792 set :findBestPosition:best :updateRowPositions4.1:col4
   793 label *label229
-    * label *label230
   794 label *label227
-    * label *label228
   795 print "\n"
-    * label *label226
-    * label *label210
   796 unpackcolor :updateRowPositions4.2:col1 :updateRowPositions4.2:col2 :updateRowPositions4.2:col3 :updateRowPositions4.2:col4 :findBestPosition:row3.1
   797 op mul *tmp270 :updateRowPositions4.2:col1 255
   798 print *tmp270
 
   814 set :findDrillLocationLocal:diffY 0.5
   815 set :findBestPosition:best :updateRowPositions4.2:col1
   816 label *label235
-    * label *label236
   817 label *label233
-    * label *label234
   818 print "\n"
-    * label *label232
   819 op mul *tmp275 :updateRowPositions4.2:col2 255
   820 print *tmp275
   821 print " at "
 
   836 set :findDrillLocationLocal:diffY 0.5
   837 set :findBestPosition:best :updateRowPositions4.2:col2
   838 label *label240
-    * label *label241
   839 label *label238
-    * label *label239
   840 print "\n"
-    * label *label237
   841 op mul *tmp280 :updateRowPositions4.2:col3 255
   842 print *tmp280
   843 print " at "
 
   858 set :findDrillLocationLocal:diffY 0.5
   859 set :findBestPosition:best :updateRowPositions4.2:col3
   860 label *label245
-    * label *label246
   861 label *label243
-    * label *label244
   862 print "\n"
-    * label *label242
   863 op mul *tmp285 :updateRowPositions4.2:col4 255
   864 print *tmp285
   865 print " at "
 
   880 set :findDrillLocationLocal:diffY 0.5
   881 set :findBestPosition:best :updateRowPositions4.2:col4
   882 label *label250
-    * label *label251
   883 label *label248
-    * label *label249
   884 print "\n"
-    * label *label247
-    * label *label231
   885 unpackcolor :updateRowPositions4.3:col1 :updateRowPositions4.3:col2 :updateRowPositions4.3:col3 :updateRowPositions4.3:col4 :findBestPosition:row4
   886 op mul *tmp290 :updateRowPositions4.3:col1 255
   887 print *tmp290
 
   903 set :findDrillLocationLocal:diffY 1.5
   904 set :findBestPosition:best :updateRowPositions4.3:col1
   905 label *label256
-    * label *label257
   906 label *label254
-    * label *label255
   907 print "\n"
-    * label *label253
   908 op mul *tmp295 :updateRowPositions4.3:col2 255
   909 print *tmp295
   910 print " at "
 
   925 set :findDrillLocationLocal:diffY 1.5
   926 set :findBestPosition:best :updateRowPositions4.3:col2
   927 label *label261
-    * label *label262
   928 label *label259
-    * label *label260
   929 print "\n"
-    * label *label258
   930 op mul *tmp300 :updateRowPositions4.3:col3 255
   931 print *tmp300
   932 print " at "
 
   947 set :findDrillLocationLocal:diffY 1.5
   948 set :findBestPosition:best :updateRowPositions4.3:col3
   949 label *label266
-    * label *label267
   950 label *label264
-    * label *label265
   951 print "\n"
-    * label *label263
   952 op mul *tmp305 :updateRowPositions4.3:col4 255
   953 print *tmp305
   954 print " at "
 
   969 set :findDrillLocationLocal:diffY 1.5
   970 set :findBestPosition:best :updateRowPositions4.3:col4
   971 label *label271
-    * label *label272
   972 label *label269
-    * label *label270
   973 print "\n"
-    * label *label268
-    * label *label252
   974 label *label140
   975 jump *label274 equal .debug false
   976 printflush message1
   977 control enabled switch1 true
   978 label *label276
-    * label *label277
   979 sensor *tmp312 switch1 @enabled
   980 jump *label276 notEqual *tmp312 false
-    * label *label278
   981 label *label274
-    * label *label275
-    * label *label273
   982 op mul *tmp156 :findBestPosition:best 255
-    * label *label133
   983 print "Ore at "
   984 print :findDrillLocationLocal:oreX
   985 print ","
 
  1002 printflush message1
  1003 control enabled switch1 true
  1004 label *label282
-    * label *label283
  1005 sensor *tmp316 switch1 @enabled
  1006 jump *label282 notEqual *tmp316 false
-    * label *label284
  1007 label *label280
-    * label *label281
-    * label *label279
  1008 jump *label285 lessThanEq *tmp156 :findDrillLocationLocal:capacity
  1009 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1010 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
 
  1015 set :findDrillLocationLocal*retval true
  1016 jump *label95 always
  1017 label *label287
-    * label *label288
  1018 label *label285
-    * label *label286
  1019 jump *label289 lessThanEq *tmp156 :findDrillLocationLocal:best
  1020 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1021 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1022 set :findDrillLocationLocal:best *tmp156
  1023 label *label289
-    * label *label290
  1024 jump *label291 greaterThan *tmp156 :findDrillLocationLocal:last
  1025 jump *label132 always
  1026 label *label291
-    * label *label292
  1027 set :findDrillLocationLocal:last *tmp156
  1028 op mul :round:x :findDrillLocationLocal:diffX 1.1
  1029 op add *tmp331 :round:x 0.5
  1030 op floor *tmp330 *tmp331
-    * label *label293
  1031 op add :findDrillLocationLocal:oreX :findDrillLocationLocal:oreX *tmp330
  1032 op mul :round.1:x :findDrillLocationLocal:diffY 1.1
  1033 op add *tmp335 :round.1:x 0.5
  1034 op floor *tmp334 *tmp335
-    * label *label294
  1035 op add :findDrillLocationLocal:oreY :findDrillLocationLocal:oreY *tmp334
  1036 op sub *tmp337 :findDrillLocationLocal:oreX .coreX
  1037 op abs *tmp338 *tmp337
 
  1041 jump *label295 greaterThanEq *tmp341 7
  1042 jump *label132 always
  1043 label *label295
-    * label *label296
-    * label *label131
  1044 jump *label130 always
  1045 label *label132
  1046 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
 
  1053 op sub :round.2:x @second .start
  1054 op add *tmp353 :round.2:x 0.5
  1055 op floor *tmp352 *tmp353
-    * label *label298
  1056 print "Time: "
  1057 print *tmp352
  1058 print " s"
  1059 print "\n"
  1060 set :debugPrintSpot:index -1
  1061 set :debugPrintSpot:i 0
-    * label *label299
  1062 jump *label301 greaterThanEq 0 .locations
  1063 label *label396
  1064 op add :debugPrintSpot:index :debugPrintSpot:index 1
 
  1075 print " "
  1076 print :debugPrintSpot:size
  1077 print "\n"
-    * label *label300
  1078 op add :debugPrintSpot:i :debugPrintSpot:i 1
  1079 jump *label396 lessThan :debugPrintSpot:i .locations
  1080 label *label301
  1081 print ""
  1082 printflush message1
-    * label *label297
-    * label *label97
  1083 jump *label96 always
-    * label *label98
  1084 set :findDrillLocationLocal*retval null
  1085 label *label95
  1086 return :findDrillLocationLocal*retaddr
 
  1100 set :findDrillLocation:dy :findDrillLocationLocal:dy
  1101 set :findDrillLocation:capacity :findDrillLocationLocal:capacity
  1102 set :findDrillLocation*retval :findDrillLocationLocal*retval
-    * label *label302
  1103 set :findDrillLocation*finished true
  1104 jump *label83 always
  1105 end
 
  1108 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp364
  1109 jump *label310 notEqual *tmp364 false
  1110 ucontrol approach :createTerrainMask:x :createTerrainMask:y 5.5
-    * label *label309
  1111 jump *label308 always
  1112 label *label310
-    * label *label307
-    * label *label306
  1113 set :createTerrainMask:result 0
  1114 set :createTerrainMask:r 3
-    * label *label311
  1115 label *label397
  1116 set :createTerrainMask:c 3
  1117 op add :isBlocked:y :createTerrainMask:y :createTerrainMask:r
-    * label *label314
  1118 label *label398
  1119 op shl *tmp367 :createTerrainMask:result 1
  1120 op add :isBlocked:x :createTerrainMask:x :createTerrainMask:c
-    * label *label401
  1121 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
  1122 select type equal type @boulder @air type
  1123 select :isBlocked:result equal type @air 0 1
-    * label *label402
  1124 op or :createTerrainMask:result *tmp367 :isBlocked:result
-    * label *label315
  1125 op sub :createTerrainMask:c :createTerrainMask:c 1
  1126 jump *label398 greaterThanEq :createTerrainMask:c -3
-    * label *label316
-    * label *label312
  1127 op sub :createTerrainMask:r :createTerrainMask:r 1
  1128 jump *label397 greaterThanEq :createTerrainMask:r -3
-    * label *label313
  1129 set :createTerrainMask*retval :createTerrainMask:result
-    * label *label305
  1130 return :createTerrainMask*retaddr
  1131 end
  1132 label *label10
  1133 set :findPossiblePlacement:y -3
-    * label *label328
  1134 jump *label330 greaterThan :findPossiblePlacement:y 3
  1135 label *label399
  1136 op add *tmp397 :findPossiblePlacement:y 3
  1137 op mul *tmp398 7 *tmp397
  1138 op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp398
  1139 set :findPossiblePlacement:x -3
-    * label *label331
  1140 jump *label333 greaterThan :findPossiblePlacement:x 3
  1141 label *label400
  1142 op and *tmp400 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
 
  1146 op add :findPossiblePlacement*retval *tmp404 :findPossiblePlacement:x
  1147 jump *label327 always
  1148 label *label334
-    * label *label335
  1149 op sub *tmp406 3 :findPossiblePlacement:width
  1150 jump *label336 lessThanEq :findPossiblePlacement:x *tmp406
  1151 jump *label333 always
  1152 label *label336
-    * label *label337
  1153 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
-    * label *label332
  1154 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
  1155 jump *label400 lessThanEq :findPossiblePlacement:x 3
  1156 label *label333
 
  1158 jump *label338 lessThanEq :findPossiblePlacement:y *tmp409
  1159 jump *label330 always
  1160 label *label338
-    * label *label339
-    * label *label329
  1161 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
  1162 jump *label399 lessThanEq :findPossiblePlacement:y 3
  1163 label *label330
 
  1196 set :tryPlaceGenerator*retval false
  1197 jump *label340 always
  1198 label *label345
-    * label *label346
  1199 op add *tmp427 :tryPlaceGenerator:centerX 0.5
  1200 op add .water2X *tmp427 :findPossiblePlacement:x
  1201 op add *tmp429 :tryPlaceGenerator:centerY 0.5
 
  1217 set :tryPlaceGenerator*retval false
  1218 jump *label340 always
  1219 label *label348
-    * label *label349
  1220 op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
  1221 op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
  1222 op shl *tmp441 1 :findPossiblePlacement*retval
 
  1232 set :tryPlaceGenerator*retval false
  1233 jump *label340 always
  1234 label *label351
-    * label *label352
  1235 op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
  1236 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
  1237 set :tryPlaceGenerator*retval true
 
  1253 setaddr :createTerrainMask*retaddr *label354 (h:*label354)
  1254 call *label8 *invalid :createTerrainMask*retval (m:*label354) (h:*label354)
  1255 label *label354
-    * label *label355
  1256 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
-    * label *label356
  1257 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
-    * label *label357
  1258 set :layoutThoriumDrillAtLocation:extractorMask 387
  1259 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
  1260 set :findPossiblePlacement:placementMask 387
 
  1271 op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :findPossiblePlacement*retval
  1272 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
  1273 label *label359
-    * label *label360
-    * label *label361
  1274 set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
-    * label *label362
  1275 set :layoutThoriumDrillAtLocation:generatorVertical 6340995
  1276 set :tryPlaceGenerator:centerX .drillX
  1277 set :tryPlaceGenerator:centerY .drillY
 
  1285 set :layoutThoriumDrillAtLocation*retval true
  1286 jump *label353 always
  1287 label *label364
-    * label *label365
  1288 set :layoutThoriumDrillAtLocation:sx 3
  1289 set :layoutThoriumDrillAtLocation:sy 3
  1290 setaddr *tmp503 *label369
 
  1314 op sub *tmp507 0 :layoutThoriumDrillAtLocation:sx
  1315 op sub *tmp508 0 :layoutThoriumDrillAtLocation:sy
  1316 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
-    * label *label403
  1317 op abs *tmp371 *tmp507
  1318 op greaterThan *tmp372 *tmp371 6
  1319 op abs *tmp373 *tmp508
 
  1323 set :shiftMask*retval 0
  1324 jump *label412 always
  1325 label *label404
-    * label *label405
  1326 op mul *tmp377 7 *tmp508
  1327 op add :shiftMask:shift *tmp507 *tmp377
  1328 jump *label406 lessThanEq :shiftMask:shift 0
 
  1340 jump *label408 lessThanEq *tmp507 0
  1341 op shl :shiftMask:keep :shiftMask:keep *tmp388
  1342 label *label408
-    * label *label409
  1343 op shl *tmp394 :shiftMask:keep 7
  1344 op or :shiftMask:keep :shiftMask:keep *tmp394
  1345 op shl *tmp395 :shiftMask:keep 14
 
  1348 op or :shiftMask:keep :shiftMask:keep *tmp396
  1349 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
  1350 label *label410
-    * label *label411
  1351 set :shiftMask*retval :shiftMask:mask
  1352 label *label412
  1353 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval :shiftMask*retval
 
  1365 set :layoutThoriumDrillAtLocation*retval true
  1366 jump *label353 always
  1367 label *label376
-    * label *label377
-    * label *label367
  1368 multijump *tmp503 0 0 (m:marker0)
  1369 multilabel *label372 (m:marker0)
-    * label *label368
  1370 set :layoutThoriumDrillAtLocation*retval true
  1371 label *label353
  1372 return :layoutThoriumDrillAtLocation*retaddr
 
  1388 set :layoutThoriumDrill*retval false
  1389 jump *label378 always
  1390 label *label380
-    * label *label381
  1391 setaddr :layoutThoriumDrillAtLocation*retaddr *label382 (h:*label382)
  1392 call *label12 *invalid :layoutThoriumDrillAtLocation*retval (m:*label382) (h:*label382)
  1393 label *label382

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-4 instructions):
 
  1021 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1022 set :findDrillLocationLocal:best *tmp156
  1023 label *label289
-    * jump *label291 greaterThan *tmp156 :findDrillLocationLocal:last
-    * jump *label132 always
+ 1024 jump *label132 lessThanEq *tmp156 :findDrillLocationLocal:last
  1025 label *label291
  1026 set :findDrillLocationLocal:last *tmp156
  1027 op mul :round:x :findDrillLocationLocal:diffX 1.1
 
  1037 op sub *tmp339 :findDrillLocationLocal:oreY .coreY
  1038 op abs *tmp340 *tmp339
  1039 op min *tmp341 *tmp338 *tmp340
-    * jump *label295 greaterThanEq *tmp341 7
-    * jump *label132 always
+ 1040 jump *label132 lessThan *tmp341 7
  1041 label *label295
  1042 jump *label130 always
  1043 label *label132
 
  1145 jump *label327 always
  1146 label *label334
  1147 op sub *tmp406 3 :findPossiblePlacement:width
-    * jump *label336 lessThanEq :findPossiblePlacement:x *tmp406
-    * jump *label333 always
+ 1148 jump *label333 greaterThan :findPossiblePlacement:x *tmp406
  1149 label *label336
  1150 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
  1151 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
  1152 jump *label400 lessThanEq :findPossiblePlacement:x 3
  1153 label *label333
  1154 op sub *tmp409 3 :findPossiblePlacement:height
-    * jump *label338 lessThanEq :findPossiblePlacement:y *tmp409
-    * jump *label330 always
+ 1155 jump *label330 greaterThan :findPossiblePlacement:y *tmp409
  1156 label *label338
  1157 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
  1158 jump *label399 lessThanEq :findPossiblePlacement:y 3

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
  1022 set :findDrillLocationLocal:best *tmp156
  1023 label *label289
  1024 jump *label132 lessThanEq *tmp156 :findDrillLocationLocal:last
-    * label *label291
  1025 set :findDrillLocationLocal:last *tmp156
  1026 op mul :round:x :findDrillLocationLocal:diffX 1.1
  1027 op add *tmp331 :round:x 0.5
 
  1037 op abs *tmp340 *tmp339
  1038 op min *tmp341 *tmp338 *tmp340
  1039 jump *label132 lessThan *tmp341 7
-    * label *label295
  1040 jump *label130 always
  1041 label *label132
  1042 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
 
  1144 label *label334
  1145 op sub *tmp406 3 :findPossiblePlacement:width
  1146 jump *label333 greaterThan :findPossiblePlacement:x *tmp406
-    * label *label336
  1147 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
  1148 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
  1149 jump *label400 lessThanEq :findPossiblePlacement:x 3
  1150 label *label333
  1151 op sub *tmp409 3 :findPossiblePlacement:height
  1152 jump *label330 greaterThan :findPossiblePlacement:y *tmp409
-    * label *label338
  1153 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
  1154 jump *label399 lessThanEq :findPossiblePlacement:y 3
  1155 label *label330

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   183 op add *tmp75 :spotValue.2:result :spotValue.3:result
   184 op add *tmp76 *tmp75 :spotValue.4:result
   185 packcolor :computeRowValues*retval *tmp72 *tmp74 *tmp76 0
-    * jump *label84 always
-    * jump *label94 always
+  186 return :computeRowValues*retaddr
+  187 return :computeRowValues*retaddr
   188 label *label93
   189 op add *tmp78 :spotValue:result :spotValue.1:result
   190 op add *tmp79 :spotValue.1:result :spotValue.2:result
 
   302 set :findDrillLocationLocal:oreY :locateOreAway:y
   303 jump *label123 notEqual *tmp91 false
   304 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
-    * jump *label95 always
+  305 return :findDrillLocationLocal*retaddr
   306 label *label123
   307 label *label127
   308 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp153
 
  1013 jump *label287 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
  1014 ucontrol unbind
  1015 set :findDrillLocationLocal*retval true
-    * jump *label95 always
+ 1016 return :findDrillLocationLocal*retaddr
  1017 label *label287
  1018 label *label285
  1019 jump *label289 lessThanEq *tmp156 :findDrillLocationLocal:best
 
  1140 op mul *tmp403 :findPossiblePlacement:y 7
  1141 op add *tmp404 24 *tmp403
  1142 op add :findPossiblePlacement*retval *tmp404 :findPossiblePlacement:x
-    * jump *label327 always
+ 1143 return :findPossiblePlacement*retaddr
  1144 label *label334
  1145 op sub *tmp406 3 :findPossiblePlacement:width
  1146 jump *label333 greaterThan :findPossiblePlacement:x *tmp406
 
  1186 label *label344
  1187 jump *label345 greaterThanEq :findPossiblePlacement*retval 0
  1188 set :tryPlaceGenerator*retval false
-    * jump *label340 always
+ 1189 return :tryPlaceGenerator*retaddr
  1190 label *label345
  1191 op add *tmp427 :tryPlaceGenerator:centerX 0.5
  1192 op add .water2X *tmp427 :findPossiblePlacement:x
 
  1207 label *label347
  1208 jump *label348 greaterThanEq :findPossiblePlacement*retval 0
  1209 set :tryPlaceGenerator*retval false
-    * jump *label340 always
+ 1210 return :tryPlaceGenerator*retaddr
  1211 label *label348
  1212 op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
  1213 op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
 
  1222 label *label350
  1223 jump *label351 greaterThanEq :findPossiblePlacement*retval 0
  1224 set :tryPlaceGenerator*retval false
-    * jump *label340 always
+ 1225 return :tryPlaceGenerator*retaddr
  1226 label *label351
  1227 op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
  1228 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
  1229 set :tryPlaceGenerator*retval true
-    * jump *label340 always
+ 1230 return :tryPlaceGenerator*retaddr
  1231 label *label340
  1232 return :tryPlaceGenerator*retaddr
  1233 end
 
  1275 label *label363
  1276 jump *label364 equal :tryPlaceGenerator*retval false
  1277 set :layoutThoriumDrillAtLocation*retval true
-    * jump *label353 always
+ 1278 return :layoutThoriumDrillAtLocation*retaddr
  1279 label *label364
  1280 set :layoutThoriumDrillAtLocation:sx 3
  1281 set :layoutThoriumDrillAtLocation:sy 3
 
  1355 label *label375
  1356 jump *label376 equal :tryPlaceGenerator*retval false
  1357 set :layoutThoriumDrillAtLocation*retval true
-    * jump *label353 always
+ 1358 return :layoutThoriumDrillAtLocation*retaddr
  1359 label *label376
  1360 multijump *tmp503 0 0 (m:marker0)
  1361 multilabel *label372 (m:marker0)

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-59 instructions):
 
    37 print "."
    38 print "\n"
    39 jump *label23 always
-    * set .drillX 129
-    * set .drillY 96
-    * setaddr :layoutThoriumDrillAtLocation*retaddr *label25 (h:*label25)
-    * call *label12 *invalid :layoutThoriumDrillAtLocation*retval (m:*label25) (h:*label25)
-    * label *label25
-    * jump *label27 lessThan :buildAt:x 0
-    * label *label31
-    * ucontrol within :buildAt:x :buildAt:y 6 *tmp12
-    * jump *label33 notEqual *tmp12 false
-    * ucontrol approach :buildAt:x :buildAt:y 5.5
-    * jump *label31 always
-    * label *label33
-    * ucontrol build :buildAt:x :buildAt:y @laser-drill 0 null
-    * wait 0.1
-    * label *label27
-    * jump *label35 lessThan :buildAt.1:x 0
-    * label *label39
-    * ucontrol within :buildAt.1:x :buildAt.1:y 6 *tmp19
-    * jump *label41 notEqual *tmp19 false
-    * ucontrol approach :buildAt.1:x :buildAt.1:y 5.5
-    * jump *label39 always
-    * label *label41
-    * ucontrol build :buildAt.1:x :buildAt.1:y @water-extractor 0 null
-    * wait 0.1
-    * label *label35
-    * jump *label43 lessThan :buildAt.2:x 0
-    * label *label47
-    * ucontrol within :buildAt.2:x :buildAt.2:y 6 *tmp26
-    * jump *label49 notEqual *tmp26 false
-    * ucontrol approach :buildAt.2:x :buildAt.2:y 5.5
-    * jump *label47 always
-    * label *label49
-    * ucontrol build :buildAt.2:x :buildAt.2:y @water-extractor 0 null
-    * wait 0.1
-    * label *label43
-    * jump *label51 lessThan :buildAt.3:x 0
-    * label *label55
-    * ucontrol within :buildAt.3:x :buildAt.3:y 6 *tmp33
-    * jump *label57 notEqual *tmp33 false
-    * ucontrol approach :buildAt.3:x :buildAt.3:y 5.5
-    * jump *label55 always
-    * label *label57
-    * ucontrol build :buildAt.3:x :buildAt.3:y @steam-generator 0 null
-    * wait 0.1
-    * label *label51
-    * jump *label59 lessThan :buildAt.4:x 0
-    * label *label63
-    * ucontrol within :buildAt.4:x :buildAt.4:y 6 *tmp40
-    * jump *label65 notEqual *tmp40 false
-    * ucontrol approach :buildAt.4:x :buildAt.4:y 5.5
-    * jump *label63 always
-    * label *label65
-    * ucontrol build :buildAt.4:x :buildAt.4:y @power-node 0 null
-    * wait 0.1
-    * label *label59
-    * jump *label67 lessThan :buildAt.5:x 0
-    * label *label71
-    * ucontrol within :buildAt.5:x :buildAt.5:y 6 *tmp47
-    * jump *label73 notEqual *tmp47 false
-    * ucontrol approach :buildAt.5:x :buildAt.5:y 5.5
-    * jump *label71 always
-    * label *label73
-    * ucontrol build :buildAt.5:x :buildAt.5:y @solar-panel 0 null
-    * wait 0.1
-    * label *label67
    40 label *label23
    41 print "Finished."
    42 printflush message1
 
    48 label *label83
    49 wait 1e12
    50 jump *label83 always
-    * end
    51 label *label5
    52 op sub :spotValue:x :computeRowValues:x 2
    53 set :spotValue:y :computeRowValues:y
 
   118 op add *tmp76 *tmp75 :spotValue.4:result
   119 packcolor :computeRowValues*retval *tmp72 *tmp74 *tmp76 0
   120 return :computeRowValues*retaddr
-    * return :computeRowValues*retaddr
   121 label *label93
   122 op add *tmp78 :spotValue:result :spotValue.1:result
   123 op add *tmp79 :spotValue.1:result :spotValue.2:result
   124 op add *tmp80 :spotValue.2:result :spotValue.3:result
   125 op add *tmp81 :spotValue.3:result :spotValue.4:result
   126 packcolor :computeRowValues*retval *tmp78 *tmp79 *tmp80 *tmp81
-    * label *label94
-    * label *label84
   127 return :computeRowValues*retaddr
-    * end
   128 label *label6
   129 set .locations 0
   130 set .coreX :findDrillLocationLocal:x
 
  1007 print ""
  1008 printflush message1
  1009 jump *label96 always
-    * set :findDrillLocationLocal*retval null
-    * label *label95
-    * return :findDrillLocationLocal*retaddr
-    * end
  1010 label *label0
  1011 set :findDrillLocationLocal:x :findDrillLocation:x
  1012 set :findDrillLocationLocal:y :findDrillLocation:y
 
  1024 set :findDrillLocation*retval :findDrillLocationLocal*retval
  1025 set :findDrillLocation*finished true
  1026 jump *label83 always
-    * end
  1027 label *label8
  1028 label *label308
  1029 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp364
 
  1049 jump *label397 greaterThanEq :createTerrainMask:r -3
  1050 set :createTerrainMask*retval :createTerrainMask:result
  1051 return :createTerrainMask*retaddr
-    * end
  1052 label *label10
  1053 set :findPossiblePlacement:y -3
  1054 jump *label330 greaterThan :findPossiblePlacement:y 3
 
  1078 jump *label399 lessThanEq :findPossiblePlacement:y 3
  1079 label *label330
  1080 set :findPossiblePlacement*retval -1
-    * label *label327
  1081 return :findPossiblePlacement*retaddr
-    * end
  1082 label *label11
  1083 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
  1084 set :findPossiblePlacement:placementMask :tryPlaceGenerator:generatorHorizontal
 
  1150 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
  1151 set :tryPlaceGenerator*retval true
  1152 return :tryPlaceGenerator*retaddr
-    * label *label340
-    * return :tryPlaceGenerator*retaddr
-    * end
  1153 label *label12
  1154 set .panelY -1
  1155 set .panelX -1
 
  1279 multijump *tmp503 0 0 (m:marker0)
  1280 multilabel *label372 (m:marker0)
  1281 set :layoutThoriumDrillAtLocation*retval true
-    * label *label353
  1282 return :layoutThoriumDrillAtLocation*retaddr
-    * end
  1283 label *label1
  1284 set :findDrillLocationLocal:x :layoutThoriumDrill:x
  1285 set :findDrillLocationLocal:y :layoutThoriumDrill:y
 
  1304 label *label378
  1305 set :layoutThoriumDrill*finished true
  1306 jump *label83 always
-    * end

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-1 instructions):
 
    36 print :findDrillLocationLocal:dy
    37 print "."
    38 print "\n"
-    * jump *label23 always
    39 label *label23
    40 print "Finished."
    41 printflush message1

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    36 print :findDrillLocationLocal:dy
    37 print "."
    38 print "\n"
-    * label *label23
    39 print "Finished."
    40 printflush message1
    41 control enabled switch1 true

Modifications by Jumps phase, Jump Straightening, pass 5, iteration 1 (-1 instructions):
 
   964 op sub *tmp339 :findDrillLocationLocal:oreY .coreY
   965 op abs *tmp340 *tmp339
   966 op min *tmp341 *tmp338 *tmp340
-    * jump *label132 lessThan *tmp341 7
-    * jump *label130 always
+  967 jump *label130 greaterThanEq *tmp341 7
   968 label *label132
   969 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
   970 write :findDrillLocationLocal:best bank1 :findDrillLocationLocal:count

Modifications by Final phase, Print Merging, iteration 1 (-311 instructions):
 
    26 setaddr :findDrillLocationLocal*retaddr *label24 (h:*label24)
    27 call *label6 *invalid :findDrillLocationLocal*retval (m:*label24) (h:*label24)
    28 label *label24
-    * print "Found "
-    * print :findDrillLocationLocal:capacity
-    * print " "
-    * print "at "
-    * print :findDrillLocationLocal:dx
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:dy
-    * print "."
-    * print "\n"
-    * print "Finished."
+   29 print "Found {0} at {0}, {0}.\nFinished."
+   30 format :findDrillLocationLocal:capacity
+   31 format :findDrillLocationLocal:dx
+   32 format :findDrillLocationLocal:dy
    33 printflush message1
    34 control enabled switch1 true
    35 label *label80
 
    81 op mul *tmp67 :spotValue.3:result 255
    82 op mul *tmp68 :spotValue.4:result 255
    83 jump *label91 equal .debug false
-    * print "Spot values for row "
-    * print :computeRowValues:y
-    * print ":"
-    * print " "
-    * print *tmp64
-    * print ","
-    * print " "
-    * print *tmp65
-    * print ","
-    * print " "
-    * print *tmp66
-    * print ","
-    * print " "
-    * print *tmp67
-    * print ","
-    * print " "
-    * print *tmp68
-    * print "\n"
+   84 print "Spot values for row {0}: {0}, {0}, {0}, {0}, {0}\n"
+   85 format :computeRowValues:y
+   86 format *tmp64
+   87 format *tmp65
+   88 format *tmp66
+   89 format *tmp67
+   90 format *tmp68
    91 label *label91
    92 jump *label93 equal :computeRowValues:large false
    93 op add *tmp71 :spotValue:result :spotValue.1:result
 
   282 unpackcolor :updateRowPositions3:col1 :updateRowPositions3:col2 :updateRowPositions3:col3 0 :findBestPosition:row1
   283 op mul *tmp175 :updateRowPositions3:col1 255
   284 print *tmp175
-    * print " at "
-    * print -1
-    * print ","
-    * print " "
-    * print -1
-    * print " "
-    * print "("
-    * print 0
-    * print ","
-    * print " "
-    * print 0
-    * print ")"
+  285 print " at -1, -1 (0, 0)"
   286 jump *label143 greaterThanEq :updateRowPositions3:col1 0.0392156862745098
   287 jump *label145 lessThanEq :updateRowPositions3:col1 0
   288 set :findDrillLocationLocal:diffX -1
 
   290 set :findBestPosition:best :updateRowPositions3:col1
   291 label *label145
   292 label *label143
-    * print "\n"
+  293 print "\n{0} at 0, -1 ({0}, {0})"
   294 op mul *tmp180 :updateRowPositions3:col2 255
-    * print *tmp180
-    * print " at "
-    * print 0
-    * print ","
-    * print " "
-    * print -1
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  295 format *tmp180
+  296 format :findDrillLocationLocal:diffX
+  297 format :findDrillLocationLocal:diffY
   298 jump *label148 greaterThanEq :updateRowPositions3:col2 0.0392156862745098
   299 jump *label150 lessThanEq :updateRowPositions3:col2 :findBestPosition:best
   300 set :findDrillLocationLocal:diffX 0
 
   302 set :findBestPosition:best :updateRowPositions3:col2
   303 label *label150
   304 label *label148
-    * print "\n"
+  305 print "\n{0} at 1, -1 ({0}, {0})"
   306 op mul *tmp185 :updateRowPositions3:col3 255
-    * print *tmp185
-    * print " at "
-    * print 1
-    * print ","
-    * print " "
-    * print -1
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  307 format *tmp185
+  308 format :findDrillLocationLocal:diffX
+  309 format :findDrillLocationLocal:diffY
   310 jump *label153 greaterThanEq :updateRowPositions3:col3 0.0392156862745098
   311 jump *label155 lessThanEq :updateRowPositions3:col3 :findBestPosition:best
   312 set :findDrillLocationLocal:diffX 1
 
   314 set :findBestPosition:best :updateRowPositions3:col3
   315 label *label155
   316 label *label153
-    * print "\n"
+  317 print "\nupdateRowPositions3: {0}, {0}: {0}\n{0} at -1, 0 ({0}, {0})"
   318 op mul *tmp190 :findBestPosition:best 255
-    * print "updateRowPositions3: "
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ":"
-    * print " "
-    * print *tmp190
-    * print "\n"
+  319 format :findDrillLocationLocal:diffX
+  320 format :findDrillLocationLocal:diffY
+  321 format *tmp190
   322 unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 0 :findBestPosition:row2
   323 op mul *tmp192 :updateRowPositions3.1:col1 255
-    * print *tmp192
-    * print " at "
-    * print -1
-    * print ","
-    * print " "
-    * print 0
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  324 format *tmp192
+  325 format :findDrillLocationLocal:diffX
+  326 format :findDrillLocationLocal:diffY
   327 jump *label159 greaterThanEq :updateRowPositions3.1:col1 0.0392156862745098
   328 jump *label161 lessThanEq :updateRowPositions3.1:col1 :findBestPosition:best
   329 set :findDrillLocationLocal:diffX -1
 
   331 set :findBestPosition:best :updateRowPositions3.1:col1
   332 label *label161
   333 label *label159
-    * print "\n"
+  334 print "\n{0} at 0, 0 ({0}, {0})"
   335 op mul *tmp197 :updateRowPositions3.1:col2 255
-    * print *tmp197
-    * print " at "
-    * print 0
-    * print ","
-    * print " "
-    * print 0
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  336 format *tmp197
+  337 format :findDrillLocationLocal:diffX
+  338 format :findDrillLocationLocal:diffY
   339 jump *label164 greaterThanEq :updateRowPositions3.1:col2 0.0392156862745098
   340 jump *label166 lessThanEq :updateRowPositions3.1:col2 :findBestPosition:best
   341 set :findDrillLocationLocal:diffX 0
 
   343 set :findBestPosition:best :updateRowPositions3.1:col2
   344 label *label166
   345 label *label164
-    * print "\n"
+  346 print "\n{0} at 1, 0 ({0}, {0})"
   347 op mul *tmp202 :updateRowPositions3.1:col3 255
-    * print *tmp202
-    * print " at "
-    * print 1
-    * print ","
-    * print " "
-    * print 0
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  348 format *tmp202
+  349 format :findDrillLocationLocal:diffX
+  350 format :findDrillLocationLocal:diffY
   351 jump *label169 greaterThanEq :updateRowPositions3.1:col3 0.0392156862745098
   352 jump *label171 lessThanEq :updateRowPositions3.1:col3 :findBestPosition:best
   353 set :findDrillLocationLocal:diffX 1
 
   355 set :findBestPosition:best :updateRowPositions3.1:col3
   356 label *label171
   357 label *label169
-    * print "\n"
+  358 print "\nupdateRowPositions3: {0}, {0}: {0}\n{0} at -1, 1 ({0}, {0})"
   359 op mul *tmp207 :findBestPosition:best 255
-    * print "updateRowPositions3: "
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ":"
-    * print " "
-    * print *tmp207
-    * print "\n"
+  360 format :findDrillLocationLocal:diffX
+  361 format :findDrillLocationLocal:diffY
+  362 format *tmp207
   363 unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 0 :findBestPosition:row3
   364 op mul *tmp209 :updateRowPositions3.2:col1 255
-    * print *tmp209
-    * print " at "
-    * print -1
-    * print ","
-    * print " "
-    * print 1
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  365 format *tmp209
+  366 format :findDrillLocationLocal:diffX
+  367 format :findDrillLocationLocal:diffY
   368 jump *label175 greaterThanEq :updateRowPositions3.2:col1 0.0392156862745098
   369 jump *label177 lessThanEq :updateRowPositions3.2:col1 :findBestPosition:best
   370 set :findDrillLocationLocal:diffX -1
 
   372 set :findBestPosition:best :updateRowPositions3.2:col1
   373 label *label177
   374 label *label175
-    * print "\n"
+  375 print "\n{0} at 0, 1 ({0}, {0})"
   376 op mul *tmp214 :updateRowPositions3.2:col2 255
-    * print *tmp214
-    * print " at "
-    * print 0
-    * print ","
-    * print " "
-    * print 1
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  377 format *tmp214
+  378 format :findDrillLocationLocal:diffX
+  379 format :findDrillLocationLocal:diffY
   380 jump *label180 greaterThanEq :updateRowPositions3.2:col2 0.0392156862745098
   381 jump *label182 lessThanEq :updateRowPositions3.2:col2 :findBestPosition:best
   382 set :findDrillLocationLocal:diffX 0
 
   384 set :findBestPosition:best :updateRowPositions3.2:col2
   385 label *label182
   386 label *label180
-    * print "\n"
+  387 print "\n{0} at 1, 1 ({0}, {0})"
   388 op mul *tmp219 :updateRowPositions3.2:col3 255
-    * print *tmp219
-    * print " at "
-    * print 1
-    * print ","
-    * print " "
-    * print 1
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  389 format *tmp219
+  390 format :findDrillLocationLocal:diffX
+  391 format :findDrillLocationLocal:diffY
   392 jump *label185 greaterThanEq :updateRowPositions3.2:col3 0.0392156862745098
   393 jump *label187 lessThanEq :updateRowPositions3.2:col3 :findBestPosition:best
   394 set :findDrillLocationLocal:diffX 1
 
   396 set :findBestPosition:best :updateRowPositions3.2:col3
   397 label *label187
   398 label *label185
-    * print "\n"
+  399 print "\nupdateRowPositions3: {0}, {0}: {0}\nfindBestPosition: {0}, {0}: {0}\n"
   400 op mul *tmp224 :findBestPosition:best 255
-    * print "updateRowPositions3: "
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ":"
-    * print " "
-    * print *tmp224
-    * print "\n"
-    * print "findBestPosition: "
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ":"
-    * print " "
-    * print *tmp224
-    * print "\n"
+  401 format :findDrillLocationLocal:diffX
+  402 format :findDrillLocationLocal:diffY
+  403 format *tmp224
+  404 format :findDrillLocationLocal:diffX
+  405 format :findDrillLocationLocal:diffY
+  406 format *tmp224
   407 jump *label140 always
   408 label *label139
   409 op add :findBestPosition:row1.1 :findBestPosition:y1 :findBestPosition:y2
 
   413 unpackcolor :updateRowPositions4:col1 :updateRowPositions4:col2 :updateRowPositions4:col3 :updateRowPositions4:col4 :findBestPosition:row1.1
   414 op mul *tmp230 :updateRowPositions4:col1 255
   415 print *tmp230
-    * print " at "
-    * print -1.5
-    * print ","
-    * print " "
-    * print -1.5
-    * print " "
-    * print "("
-    * print 0
-    * print ","
-    * print " "
-    * print 0
-    * print ")"
+  416 print " at -1.5, -1.5 (0, 0)"
   417 jump *label191 greaterThanEq :updateRowPositions4:col1 0.0392156862745098
   418 jump *label193 lessThanEq :updateRowPositions4:col1 0
   419 set :findDrillLocationLocal:diffX -1.5
 
   421 set :findBestPosition:best :updateRowPositions4:col1
   422 label *label193
   423 label *label191
-    * print "\n"
+  424 print "\n{0} at -0.5, -1.5 ({0}, {0})"
   425 op mul *tmp235 :updateRowPositions4:col2 255
-    * print *tmp235
-    * print " at "
-    * print -0.5
-    * print ","
-    * print " "
-    * print -1.5
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  426 format *tmp235
+  427 format :findDrillLocationLocal:diffX
+  428 format :findDrillLocationLocal:diffY
   429 jump *label196 greaterThanEq :updateRowPositions4:col2 0.0392156862745098
   430 jump *label198 lessThanEq :updateRowPositions4:col2 :findBestPosition:best
   431 set :findDrillLocationLocal:diffX -0.5
 
   433 set :findBestPosition:best :updateRowPositions4:col2
   434 label *label198
   435 label *label196
-    * print "\n"
+  436 print "\n{0} at 0.5, -1.5 ({0}, {0})"
   437 op mul *tmp240 :updateRowPositions4:col3 255
-    * print *tmp240
-    * print " at "
-    * print 0.5
-    * print ","
-    * print " "
-    * print -1.5
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  438 format *tmp240
+  439 format :findDrillLocationLocal:diffX
+  440 format :findDrillLocationLocal:diffY
   441 jump *label201 greaterThanEq :updateRowPositions4:col3 0.0392156862745098
   442 jump *label203 lessThanEq :updateRowPositions4:col3 :findBestPosition:best
   443 set :findDrillLocationLocal:diffX 0.5
 
   445 set :findBestPosition:best :updateRowPositions4:col3
   446 label *label203
   447 label *label201
-    * print "\n"
+  448 print "\n{0} at 1.5, -1.5 ({0}, {0})"
   449 op mul *tmp245 :updateRowPositions4:col4 255
-    * print *tmp245
-    * print " at "
-    * print 1.5
-    * print ","
-    * print " "
-    * print -1.5
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  450 format *tmp245
+  451 format :findDrillLocationLocal:diffX
+  452 format :findDrillLocationLocal:diffY
   453 jump *label206 greaterThanEq :updateRowPositions4:col4 0.0392156862745098
   454 jump *label208 lessThanEq :updateRowPositions4:col4 :findBestPosition:best
   455 set :findDrillLocationLocal:diffX 1.5
 
   457 set :findBestPosition:best :updateRowPositions4:col4
   458 label *label208
   459 label *label206
-    * print "\n"
+  460 print "\n{0} at -1.5, -0.5 ({0}, {0})"
   461 unpackcolor :updateRowPositions4.1:col1 :updateRowPositions4.1:col2 :updateRowPositions4.1:col3 :updateRowPositions4.1:col4 :findBestPosition:row2.1
   462 op mul *tmp250 :updateRowPositions4.1:col1 255
-    * print *tmp250
-    * print " at "
-    * print -1.5
-    * print ","
-    * print " "
-    * print -0.5
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  463 format *tmp250
+  464 format :findDrillLocationLocal:diffX
+  465 format :findDrillLocationLocal:diffY
   466 jump *label212 greaterThanEq :updateRowPositions4.1:col1 0.0392156862745098
   467 jump *label214 lessThanEq :updateRowPositions4.1:col1 :findBestPosition:best
   468 set :findDrillLocationLocal:diffX -1.5
 
   470 set :findBestPosition:best :updateRowPositions4.1:col1
   471 label *label214
   472 label *label212
-    * print "\n"
+  473 print "\n{0} at -0.5, -0.5 ({0}, {0})"
   474 op mul *tmp255 :updateRowPositions4.1:col2 255
-    * print *tmp255
-    * print " at "
-    * print -0.5
-    * print ","
-    * print " "
-    * print -0.5
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  475 format *tmp255
+  476 format :findDrillLocationLocal:diffX
+  477 format :findDrillLocationLocal:diffY
   478 jump *label217 greaterThanEq :updateRowPositions4.1:col2 0.0392156862745098
   479 jump *label219 lessThanEq :updateRowPositions4.1:col2 :findBestPosition:best
   480 set :findDrillLocationLocal:diffX -0.5
 
   482 set :findBestPosition:best :updateRowPositions4.1:col2
   483 label *label219
   484 label *label217
-    * print "\n"
+  485 print "\n{0} at 0.5, -0.5 ({0}, {0})"
   486 op mul *tmp260 :updateRowPositions4.1:col3 255
-    * print *tmp260
-    * print " at "
-    * print 0.5
-    * print ","
-    * print " "
-    * print -0.5
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  487 format *tmp260
+  488 format :findDrillLocationLocal:diffX
+  489 format :findDrillLocationLocal:diffY
   490 jump *label222 greaterThanEq :updateRowPositions4.1:col3 0.0392156862745098
   491 jump *label224 lessThanEq :updateRowPositions4.1:col3 :findBestPosition:best
   492 set :findDrillLocationLocal:diffX 0.5
 
   494 set :findBestPosition:best :updateRowPositions4.1:col3
   495 label *label224
   496 label *label222
-    * print "\n"
+  497 print "\n{0} at 1.5, -0.5 ({0}, {0})"
   498 op mul *tmp265 :updateRowPositions4.1:col4 255
-    * print *tmp265
-    * print " at "
-    * print 1.5
-    * print ","
-    * print " "
-    * print -0.5
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  499 format *tmp265
+  500 format :findDrillLocationLocal:diffX
+  501 format :findDrillLocationLocal:diffY
   502 jump *label227 greaterThanEq :updateRowPositions4.1:col4 0.0392156862745098
   503 jump *label229 lessThanEq :updateRowPositions4.1:col4 :findBestPosition:best
   504 set :findDrillLocationLocal:diffX 1.5
 
   506 set :findBestPosition:best :updateRowPositions4.1:col4
   507 label *label229
   508 label *label227
-    * print "\n"
+  509 print "\n{0} at -1.5, 0.5 ({0}, {0})"
   510 unpackcolor :updateRowPositions4.2:col1 :updateRowPositions4.2:col2 :updateRowPositions4.2:col3 :updateRowPositions4.2:col4 :findBestPosition:row3.1
   511 op mul *tmp270 :updateRowPositions4.2:col1 255
-    * print *tmp270
-    * print " at "
-    * print -1.5
-    * print ","
-    * print " "
-    * print 0.5
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  512 format *tmp270
+  513 format :findDrillLocationLocal:diffX
+  514 format :findDrillLocationLocal:diffY
   515 jump *label233 greaterThanEq :updateRowPositions4.2:col1 0.0392156862745098
   516 jump *label235 lessThanEq :updateRowPositions4.2:col1 :findBestPosition:best
   517 set :findDrillLocationLocal:diffX -1.5
 
   519 set :findBestPosition:best :updateRowPositions4.2:col1
   520 label *label235
   521 label *label233
-    * print "\n"
+  522 print "\n{0} at -0.5, 0.5 ({0}, {0})"
   523 op mul *tmp275 :updateRowPositions4.2:col2 255
-    * print *tmp275
-    * print " at "
-    * print -0.5
-    * print ","
-    * print " "
-    * print 0.5
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  524 format *tmp275
+  525 format :findDrillLocationLocal:diffX
+  526 format :findDrillLocationLocal:diffY
   527 jump *label238 greaterThanEq :updateRowPositions4.2:col2 0.0392156862745098
   528 jump *label240 lessThanEq :updateRowPositions4.2:col2 :findBestPosition:best
   529 set :findDrillLocationLocal:diffX -0.5
 
   531 set :findBestPosition:best :updateRowPositions4.2:col2
   532 label *label240
   533 label *label238
-    * print "\n"
+  534 print "\n{0} at 0.5, 0.5 ({0}, {0})"
   535 op mul *tmp280 :updateRowPositions4.2:col3 255
-    * print *tmp280
-    * print " at "
-    * print 0.5
-    * print ","
-    * print " "
-    * print 0.5
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  536 format *tmp280
+  537 format :findDrillLocationLocal:diffX
+  538 format :findDrillLocationLocal:diffY
   539 jump *label243 greaterThanEq :updateRowPositions4.2:col3 0.0392156862745098
   540 jump *label245 lessThanEq :updateRowPositions4.2:col3 :findBestPosition:best
   541 set :findDrillLocationLocal:diffX 0.5
 
   543 set :findBestPosition:best :updateRowPositions4.2:col3
   544 label *label245
   545 label *label243
-    * print "\n"
+  546 print "\n{0} at 1.5, 0.5 ({0}, {0})"
   547 op mul *tmp285 :updateRowPositions4.2:col4 255
-    * print *tmp285
-    * print " at "
-    * print 1.5
-    * print ","
-    * print " "
-    * print 0.5
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  548 format *tmp285
+  549 format :findDrillLocationLocal:diffX
+  550 format :findDrillLocationLocal:diffY
   551 jump *label248 greaterThanEq :updateRowPositions4.2:col4 0.0392156862745098
   552 jump *label250 lessThanEq :updateRowPositions4.2:col4 :findBestPosition:best
   553 set :findDrillLocationLocal:diffX 1.5
 
   555 set :findBestPosition:best :updateRowPositions4.2:col4
   556 label *label250
   557 label *label248
-    * print "\n"
+  558 print "\n{0} at -1.5, 1.5 ({0}, {0})"
   559 unpackcolor :updateRowPositions4.3:col1 :updateRowPositions4.3:col2 :updateRowPositions4.3:col3 :updateRowPositions4.3:col4 :findBestPosition:row4
   560 op mul *tmp290 :updateRowPositions4.3:col1 255
-    * print *tmp290
-    * print " at "
-    * print -1.5
-    * print ","
-    * print " "
-    * print 1.5
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  561 format *tmp290
+  562 format :findDrillLocationLocal:diffX
+  563 format :findDrillLocationLocal:diffY
   564 jump *label254 greaterThanEq :updateRowPositions4.3:col1 0.0392156862745098
   565 jump *label256 lessThanEq :updateRowPositions4.3:col1 :findBestPosition:best
   566 set :findDrillLocationLocal:diffX -1.5
 
   568 set :findBestPosition:best :updateRowPositions4.3:col1
   569 label *label256
   570 label *label254
-    * print "\n"
+  571 print "\n{0} at -0.5, 1.5 ({0}, {0})"
   572 op mul *tmp295 :updateRowPositions4.3:col2 255
-    * print *tmp295
-    * print " at "
-    * print -0.5
-    * print ","
-    * print " "
-    * print 1.5
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  573 format *tmp295
+  574 format :findDrillLocationLocal:diffX
+  575 format :findDrillLocationLocal:diffY
   576 jump *label259 greaterThanEq :updateRowPositions4.3:col2 0.0392156862745098
   577 jump *label261 lessThanEq :updateRowPositions4.3:col2 :findBestPosition:best
   578 set :findDrillLocationLocal:diffX -0.5
 
   580 set :findBestPosition:best :updateRowPositions4.3:col2
   581 label *label261
   582 label *label259
-    * print "\n"
+  583 print "\n{0} at 0.5, 1.5 ({0}, {0})"
   584 op mul *tmp300 :updateRowPositions4.3:col3 255
-    * print *tmp300
-    * print " at "
-    * print 0.5
-    * print ","
-    * print " "
-    * print 1.5
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  585 format *tmp300
+  586 format :findDrillLocationLocal:diffX
+  587 format :findDrillLocationLocal:diffY
   588 jump *label264 greaterThanEq :updateRowPositions4.3:col3 0.0392156862745098
   589 jump *label266 lessThanEq :updateRowPositions4.3:col3 :findBestPosition:best
   590 set :findDrillLocationLocal:diffX 0.5
 
   592 set :findBestPosition:best :updateRowPositions4.3:col3
   593 label *label266
   594 label *label264
-    * print "\n"
+  595 print "\n{0} at 1.5, 1.5 ({0}, {0})"
   596 op mul *tmp305 :updateRowPositions4.3:col4 255
-    * print *tmp305
-    * print " at "
-    * print 1.5
-    * print ","
-    * print " "
-    * print 1.5
-    * print " "
-    * print "("
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:diffY
-    * print ")"
+  597 format *tmp305
+  598 format :findDrillLocationLocal:diffX
+  599 format :findDrillLocationLocal:diffY
   600 jump *label269 greaterThanEq :updateRowPositions4.3:col4 0.0392156862745098
   601 jump *label271 lessThanEq :updateRowPositions4.3:col4 :findBestPosition:best
   602 set :findDrillLocationLocal:diffX 1.5
 
   614 jump *label276 notEqual *tmp312 false
   615 label *label274
   616 op mul *tmp156 :findBestPosition:best 255
-    * print "Ore at "
-    * print :findDrillLocationLocal:oreX
-    * print ","
-    * print " "
-    * print :findDrillLocationLocal:oreY
-    * print ":"
-    * print " score "
-    * print *tmp156
-    * print ","
-    * print " best "
-    * print :findDrillLocationLocal:best
-    * print ","
-    * print " dx "
-    * print :findDrillLocationLocal:diffX
-    * print ","
-    * print " dy "
-    * print :findDrillLocationLocal:diffY
-    * print "\n"
+  617 print "Ore at {0}, {0}: score {0}, best {0}, dx {0}, dy {0}\n"
+  618 format :findDrillLocationLocal:oreX
+  619 format :findDrillLocationLocal:oreY
+  620 format *tmp156
+  621 format :findDrillLocationLocal:best
+  622 format :findDrillLocationLocal:diffX
+  623 format :findDrillLocationLocal:diffY
   624 jump *label280 equal .debug false
   625 printflush message1
   626 control enabled switch1 true
 
   671 op sub :round.2:x @second .start
   672 op add *tmp353 :round.2:x 0.5
   673 op floor *tmp352 *tmp353
-    * print "Time: "
-    * print *tmp352
-    * print " s"
-    * print "\n"
+  674 print "Time: {0} s\n"
+  675 format *tmp352
   676 set :debugPrintSpot:index -1
   677 set :debugPrintSpot:i 0
   678 jump *label301 greaterThanEq 0 .locations
 
   684 op add :debugPrintSpot:index :debugPrintSpot:index 1
   685 read :debugPrintSpot:y bank1 :debugPrintSpot:index
   686 print :debugPrintSpot:x
-    * print ","
-    * print " "
-    * print :debugPrintSpot:y
-    * print ":"
-    * print " "
-    * print :debugPrintSpot:size
-    * print "\n"
+  687 print ", {0}: {0}\n"
+  688 format :debugPrintSpot:y
+  689 format :debugPrintSpot:size
   690 op add :debugPrintSpot:i :debugPrintSpot:i 1
   691 jump *label396 lessThan :debugPrintSpot:i .locations
   692 label *label301

Final code before resolving virtual instructions:

    0:  jump *label14 always 0 0                                     #set target = 8;
    1:  jump *label0 always 0 0                                      ...
    2:  jump *label1 always 0 0                                      ...
    3:  draw triangle bank1 message1 switch1 .angle .attenuationRate .bestSpot
    4:  draw triangle .coreX .coreY .debug .drillX .drillY .generatorX
    5:  draw triangle .generatorY .locations .maxAngle .nodeX .nodeY .panelX
    6:  draw triangle .panelY .start .water1X .water1Y .water2X .water2Y
    7:  draw triangle :core :x :y :computeRowValues:large :computeRowValues:ore :computeRowValues:x
    8:  draw triangle :computeRowValues:y :createTerrainMask:c :createTerrainMask:r :createTerrainMask:result :createTerrainMask:x :createTerrainMask:y
    9:  draw triangle :debugPrintSpot:i :debugPrintSpot:index :debugPrintSpot:size :debugPrintSpot:x :debugPrintSpot:y :findBestPosition:best
   10:  draw triangle :findBestPosition:large :findBestPosition:ore :findBestPosition:row1 :findBestPosition:row1.1 :findBestPosition:row2.1 :findBestPosition:row2
   11:  draw triangle :findBestPosition:row3 :findBestPosition:row3.1 :findBestPosition:row4 :findBestPosition:x :findBestPosition:y :findBestPosition:y1
   12:  draw triangle :findBestPosition:y2 :findBestPosition:y3 :findBestPosition:y4 :findDrillLocation:capacity :findDrillLocation:dx :findDrillLocation:dy
   13:  draw triangle :findDrillLocation:item :findDrillLocation:large :findDrillLocation:limit :findDrillLocation:ore :findDrillLocation:unit :findDrillLocation:x
   14:  draw triangle :findDrillLocation:y :findDrillLocationLocal:best :findDrillLocationLocal:bestX :findDrillLocationLocal:bestY :findDrillLocationLocal:capacity :findDrillLocationLocal:count
   15:  draw triangle :findDrillLocationLocal:diffX :findDrillLocationLocal:diffY :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:dx :findDrillLocationLocal:dy :findDrillLocationLocal:item
   16:  draw triangle :findDrillLocationLocal:large :findDrillLocationLocal:last :findDrillLocationLocal:limit :findDrillLocationLocal:maxDistance :findDrillLocationLocal:ore :findDrillLocationLocal:oreX
   17:  draw triangle :findDrillLocationLocal:oreY :findDrillLocationLocal:unit :findDrillLocationLocal:x :findDrillLocationLocal:y :findPossiblePlacement:height :findPossiblePlacement:mask
   18:  draw triangle :findPossiblePlacement:placementMask :findPossiblePlacement:terrainMask :findPossiblePlacement:width :findPossiblePlacement:x :findPossiblePlacement:y :isBlocked:result
   19:  draw triangle :isBlocked:x :isBlocked:y :layoutThoriumDrill:limit :layoutThoriumDrill:unit :layoutThoriumDrill:x :layoutThoriumDrill:y
   20:  draw triangle :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:generatorHorizontal :layoutThoriumDrillAtLocation:generatorVertical :layoutThoriumDrillAtLocation:newX
   21:  draw triangle :layoutThoriumDrillAtLocation:newY :layoutThoriumDrillAtLocation:sx :layoutThoriumDrillAtLocation:sy :layoutThoriumDrillAtLocation:terrainMask :locateOreAway:a :locateOreAway:coreDist
   22:  draw triangle :locateOreAway:distance :locateOreAway:unitDist :locateOreAway:x :locateOreAway:y :round.1:x :round:x
   23:  draw triangle :round.2:x :shiftMask:clearMask :shiftMask:keep :shiftMask:mask :shiftMask:shift :spotValue.1:ore
   24:  draw triangle :spotValue.3:ore :spotValue:ore :spotValue.2:ore :spotValue.4:ore :spotValue.1:result :spotValue.3:result
   25:  draw triangle :spotValue.4:result :spotValue:result :spotValue.2:result :spotValue:x :spotValue.3:x :spotValue.2:x
   26:  draw triangle :spotValue.1:x :spotValue.4:x :spotValue:y :spotValue.3:y :spotValue.2:y :spotValue.1:y
   27:  draw triangle :spotValue.4:y :tryPlaceGenerator:centerX :tryPlaceGenerator:centerY :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:terrainMask
   28:  draw triangle :updateRowPositions3.1:col1 :updateRowPositions3.2:col1 :updateRowPositions3:col1 :updateRowPositions3.1:col2 :updateRowPositions3.2:col2 :updateRowPositions3:col2
   29:  draw triangle :updateRowPositions3.1:col3 :updateRowPositions3.2:col3 :updateRowPositions3:col3 :updateRowPositions4.1:col1 :updateRowPositions4.3:col1 :updateRowPositions4:col1
   30:  draw triangle :updateRowPositions4.2:col1 :updateRowPositions4.1:col2 :updateRowPositions4.3:col2 :updateRowPositions4:col2 :updateRowPositions4.2:col2 :updateRowPositions4.1:col3
   31:  draw triangle :updateRowPositions4.3:col3 :updateRowPositions4:col3 :updateRowPositions4.2:col3 :updateRowPositions4.1:col4 :updateRowPositions4.3:col4 :updateRowPositions4:col4
   32:  draw triangle :updateRowPositions4.2:col4 :visited:i :visited:index :visited:lx :visited:ly 0
        label *label14                                               ...
   33:  set .attenuationRate 50                                      remote var attenuationRate = 50;
   34:  set .debug true                                              debug = true;
   35:  printflush message1                                          printflush(message1);
   36:  printflush message1                                          printflush(message1);
        label *label15                                               do
   37:  ubind @poly                                                  ubind(@poly);
   38:  ulocate building core false @copper :x :y 0 :core            core = ulocate(:building, :core, false, out x, out y);
   39:  jump *label15 equal :core null                               do
        label *label19                                               while !within(x, y, radius) do
   40:  ucontrol within :x :y 1 *tmp3 0                              ...
   41:  jump *label21 notEqual *tmp3 false                           ...
   42:  ucontrol approach :x :y 0.5 0 0                              approach(x, y, radius - 0.5);
   43:  jump *label19 always 0 0                                     while !within(x, y, radius) do
        label *label21                                               ...
   44:  set .start @second                                           start = @second;
   45:  set :findDrillLocationLocal:x :x                             findDrillLocationLocal(x, y, @unit, @thorium, @ore-thorium, true, 7, out dx, out dy, out capacity);
   46:  set :findDrillLocationLocal:y :y                             ...
   47:  set :findDrillLocationLocal:unit @unit                       ...
   48:  set :findDrillLocationLocal:item @thorium                    ...
   49:  set :findDrillLocationLocal:ore @ore-thorium                 ...
   50:  set :findDrillLocationLocal:large true                       ...
   51:  set :findDrillLocationLocal:limit 7                          ...
   52:  setaddr :findDrillLocationLocal*retaddr *label24             ...
   53:  call *label6 *invalid :findDrillLocationLocal*retval         ...
        label *label24                                               ...
   54:  print "Found {0} at {0}, {0}.\nFinished."                    println($"Found $capacity at $dx, $dy.");
   55:  format :findDrillLocationLocal:capacity                      ...
   56:  format :findDrillLocationLocal:dx                            ...
   57:  format :findDrillLocationLocal:dy                            ...
   58:  printflush message1                                          printflush(message1);
   59:  control enabled switch1 true 0 0 0                           switch1.enabled = true;
        label *label80                                               do while switch1.enabled;
   60:  sensor *tmp53 switch1 @enabled                               ...
   61:  jump *label80 notEqual *tmp53 false                          ...
   62:  end                                                          end();
        label *label83                                               #set target = 8;
   63:  wait 1e12                                                    ...
   64:  jump *label83 always 0 0                                     ...
        label *label5                                                def computeRowValues(x, y, ore, large)
   65:  op sub :spotValue:x :computeRowValues:x 2                    var x1 = spotValue(x - 2, y, ore);
   66:  set :spotValue:y :computeRowValues:y                         ...
   67:  set :spotValue:ore :computeRowValues:ore                     ...
   68:  ucontrol getBlock :spotValue:x :spotValue:y type building fl mlog(in x, in y, in ore, out result) {
   69:  select value equal floor :spotValue:ore 0.00392156862745098  ...
   70:  select type equal type @boulder @air type                    ...
   71:  select :spotValue:result equal type @air value 0.06274509803 ...
   72:  op sub :spotValue.1:x :computeRowValues:x 1                  var x2 = spotValue(x - 1, y, ore);
   73:  set :spotValue.1:y :computeRowValues:y                       ...
   74:  set :spotValue.1:ore :computeRowValues:ore                   ...
   75:  ucontrol getBlock :spotValue.1:x :spotValue.1:y type buildin mlog(in x, in y, in ore, out result) {
   76:  select value equal floor :spotValue.1:ore 0.0039215686274509 ...
   77:  select type equal type @boulder @air type                    ...
   78:  select :spotValue.1:result equal type @air value 0.062745098 ...
   79:  set :spotValue.2:x :computeRowValues:x                       var x3 = spotValue(x + 0, y, ore);
   80:  set :spotValue.2:y :computeRowValues:y                       ...
   81:  set :spotValue.2:ore :computeRowValues:ore                   ...
   82:  ucontrol getBlock :spotValue.2:x :spotValue.2:y type buildin mlog(in x, in y, in ore, out result) {
   83:  select value equal floor :spotValue.2:ore 0.0039215686274509 ...
   84:  select type equal type @boulder @air type                    ...
   85:  select :spotValue.2:result equal type @air value 0.062745098 ...
   86:  op add :spotValue.3:x :computeRowValues:x 1                  var x4 = spotValue(x + 1, y, ore);
   87:  set :spotValue.3:y :computeRowValues:y                       ...
   88:  set :spotValue.3:ore :computeRowValues:ore                   ...
   89:  ucontrol getBlock :spotValue.3:x :spotValue.3:y type buildin mlog(in x, in y, in ore, out result) {
   90:  select value equal floor :spotValue.3:ore 0.0039215686274509 ...
   91:  select type equal type @boulder @air type                    ...
   92:  select :spotValue.3:result equal type @air value 0.062745098 ...
   93:  op add :spotValue.4:x :computeRowValues:x 2                  var x5 = spotValue(x + 2, y, ore);
   94:  set :spotValue.4:y :computeRowValues:y                       ...
   95:  set :spotValue.4:ore :computeRowValues:ore                   ...
   96:  ucontrol getBlock :spotValue.4:x :spotValue.4:y type buildin mlog(in x, in y, in ore, out result) {
   97:  select value equal floor :spotValue.4:ore 0.0039215686274509 ...
   98:  select type equal type @boulder @air type                    ...
   99:  select :spotValue.4:result equal type @air value 0.062745098 ...
  100:  op mul *tmp64 :spotValue:result 255                          debugPrint($"Spot values for row $: $, $, $, $, $", y, x1 * 255, x2 * 255, x3 * 255, x4 * 255, x5 * 255);
  101:  op mul *tmp65 :spotValue.1:result 255                        ...
  102:  op mul *tmp66 :spotValue.2:result 255                        ...
  103:  op mul *tmp67 :spotValue.3:result 255                        ...
  104:  op mul *tmp68 :spotValue.4:result 255                        ...
  105:  jump *label91 equal .debug false                             if debug then
  106:  print "Spot values for row {0}: {0}, {0}, {0}, {0}, {0}\n"   println(format, params);
  107:  format :computeRowValues:y                                   ...
  108:  format *tmp64                                                ...
  109:  format *tmp65                                                ...
  110:  format *tmp66                                                ...
  111:  format *tmp67                                                ...
  112:  format *tmp68                                                ...
        label *label91                                               if debug then
  113:  jump *label93 equal :computeRowValues:large false            if large then
  114:  op add *tmp71 :spotValue:result :spotValue.1:result          x1 + x2 + x3,   // drill at x - 1
  115:  op add *tmp72 *tmp71 :spotValue.2:result                     ...
  116:  op add *tmp73 :spotValue.1:result :spotValue.2:result        x2 + x3 + x4,   // drill at x
  117:  op add *tmp74 *tmp73 :spotValue.3:result                     ...
  118:  op add *tmp75 :spotValue.2:result :spotValue.3:result        x3 + x4 + x5,   // drill at x + 1
  119:  op add *tmp76 *tmp75 :spotValue.4:result                     ...
  120:  packcolor :computeRowValues*retval *tmp72 *tmp74 *tmp76 0    return packcolor(
  121:  return :computeRowValues*retaddr                             ...
        label *label93                                               if large then
  122:  op add *tmp78 :spotValue:result :spotValue.1:result          x1 + x2,        // drill at x - 1.5
  123:  op add *tmp79 :spotValue.1:result :spotValue.2:result        x2 + x3,        // drill at x - 0.5
  124:  op add *tmp80 :spotValue.2:result :spotValue.3:result        x3 + x4,        // drill at x + 0.5
  125:  op add *tmp81 :spotValue.3:result :spotValue.4:result        x4 + x5         // drill at x + 1.5
  126:  packcolor :computeRowValues*retval *tmp78 *tmp79 *tmp80 *tmp return packcolor(
  127:  return :computeRowValues*retaddr                             def computeRowValues(x, y, ore, large)
        label *label6                                                noinline def findDrillLocationLocal(x, y, unit, item, ore, large, limit, out dx, out dy, out capacity)
  128:  set .locations 0                                             locations = 0;
  129:  set .coreX :findDrillLocationLocal:x                         coreX = x;
  130:  set .coreY :findDrillLocationLocal:y                         coreY = y;
  131:  op sub *tmp83 @mapw :findDrillLocationLocal:x                var distanceLimit = max(coreX, coreY, @mapw - coreX, @maph - coreY);
  132:  op sub *tmp84 @maph :findDrillLocationLocal:y                ...
  133:  op max *tmp85 :findDrillLocationLocal:x :findDrillLocationLo ...
  134:  op max *tmp85 *tmp85 *tmp83                                  ...
  135:  op max *tmp85 *tmp85 *tmp84                                  ...
  136:  set :findDrillLocationLocal:distanceLimit *tmp85             ...
  137:  ubind :findDrillLocationLocal:unit                           ubind(unit);
  138:  set .angle 0                                                 angle = 0;
  139:  op div .maxAngle *tmp85 3.8197185279121366                   maxAngle = distanceLimit / SPIRAL_WIDTH;
  140:  set :findDrillLocationLocal:count -1                         var count = -1;
  141:  set :findDrillLocationLocal:oreX 0                           var oreX = 0, oreY = 0;
  142:  set :findDrillLocationLocal:oreY 0                           ...
  143:  set :findDrillLocationLocal:capacity 0                       bestSpot = dx = dy = capacity = 0;
  144:  set :findDrillLocationLocal:dy :findDrillLocationLocal:capac ...
  145:  set :findDrillLocationLocal:dx :findDrillLocationLocal:dy    ...
  146:  set .bestSpot :findDrillLocationLocal:dx                     ...
        label *label96                                               while true do
  147:  set :findDrillLocationLocal:best 0                           var best = 0, bestX = x, bestY = y;
  148:  set :findDrillLocationLocal:bestX :findDrillLocationLocal:x  ...
  149:  set :findDrillLocationLocal:bestY :findDrillLocationLocal:y  ...
  150:  op sub *tmp87 :findDrillLocationLocal:limit :findDrillLocati var maxDistance = (limit - capacity) * attenuationRate;
  151:  op mul :findDrillLocationLocal:maxDistance *tmp87 .attenuati ...
  152:  op min :findDrillLocationLocal:distanceLimit :findDrillLocat distanceLimit = min(distanceLimit, maxDistance);
  153:  op div .maxAngle :findDrillLocationLocal:distanceLimit 3.819 maxAngle = distanceLimit / SPIRAL_WIDTH;
  154:  set :locateOreAway:x :findDrillLocationLocal:oreX            if !locateOreAway(item, in out oreX, in out oreY, in distanceLimit) then
  155:  set :locateOreAway:y :findDrillLocationLocal:oreY            ...
  156:  op mul :locateOreAway:distance 3.8197185279121366 .angle     var distance = SPIRAL_WIDTH * angle;
  157:  op max .angle .angle @pi                                     angle = max(angle, @pi);
  158:  op sub *tmp99 @mapw 5                                        while distance < distanceLimit do
  159:  op sub *tmp106 @maph 5                                       ...
  160:  jump *label102 greaterThanEq :locateOreAway:distance :findDr ...
        label *label394                                              ...
  161:  op div :locateOreAway:a .angle @degToRad                     var a = angle / @degToRad;
  162:  op sin *tmp96 :locateOreAway:a 0                             var lx = limit(coreX + sin(a) * distance, 5, @mapw - 5);
  163:  op mul *tmp97 *tmp96 :locateOreAway:distance                 ...
  164:  op add *tmp98 .coreX *tmp97                                  ...
  165:  op max *tmp101 *tmp98 5                                      min(max(value, low), high);
  166:  op min *tmp100 *tmp101 *tmp99                                var lx = limit(coreX + sin(a) * distance, 5, @mapw - 5);
  167:  op cos *tmp103 :locateOreAway:a 0                            var ly = limit(coreY + cos(a) * distance, 5, @maph - 5);
  168:  op mul *tmp104 *tmp103 :locateOreAway:distance               ...
  169:  op add *tmp105 .coreY *tmp104                                ...
  170:  op max *tmp108 *tmp105 5                                     min(max(value, low), high);
  171:  op min *tmp107 *tmp108 *tmp106                               var ly = limit(coreY + cos(a) * distance, 5, @maph - 5);
        label *label106                                              while !within(x, y, radius) do
  172:  ucontrol within *tmp100 *tmp107 5 *tmp110 0                  ...
  173:  jump *label108 notEqual *tmp110 false                        ...
  174:  ucontrol approach *tmp100 *tmp107 4.5 0 0                    approach(x, y, radius - 0.5);
  175:  jump *label106 always 0 0                                    while !within(x, y, radius) do
        label *label108                                              ...
  176:  op div *tmp113 3.8197185279121366 :locateOreAway:distance    angle += SPIRAL_WIDTH / distance;
  177:  op add .angle .angle *tmp113                                 ...
  178:  op mul :locateOreAway:distance 3.8197185279121366 .angle     distance = SPIRAL_WIDTH * angle;
  179:  ulocate ore core true :findDrillLocationLocal:item :locateOr if !ulocate(:ore, ore, out x, out y) then
  180:  jump *label109 notEqual *tmp116 false                        ...
  181:  set *tmp91 false                                             return false;
  182:  jump *label99 always 0 0                                     ...
        label *label109                                              if !ulocate(:ore, ore, out x, out y) then
  183:  op sub *tmp120 :locateOreAway:x .coreX                       var coreDist = max(abs(x - coreX), abs(y - coreY));
  184:  op abs *tmp121 *tmp120 0                                     ...
  185:  op sub *tmp122 :locateOreAway:y .coreY                       ...
  186:  op abs *tmp123 *tmp122 0                                     ...
  187:  op max :locateOreAway:coreDist *tmp121 *tmp123               ...
  188:  op sub *tmp125 :locateOreAway:x *tmp100                      var unitDist = len(x - lx, y - ly);
  189:  op sub *tmp126 :locateOreAway:y *tmp107                      ...
  190:  op len :locateOreAway:unitDist *tmp125 *tmp126               ...
  191:  jump *label111 lessThan :locateOreAway:coreDist 7            if coreDist >= 7 then
  192:  jump *label113 greaterThanEq :locateOreAway:unitDist :locate if unitDist < distance then
  193:  set :visited:index 1                                         var lx, ly, index = 1;
  194:  set :visited:i 0                                             for var i in 0 ... locations do
  195:  jump *label118 greaterThanEq 0 .locations                    ...
        label *label395                                              ...
  196:  read :visited:lx bank1 :visited:index                        lx = bank1[index];
  197:  op add *tmp136 :visited:index 1                              ly = bank1[index + 1];
  198:  read :visited:ly bank1 *tmp136                               ...
  199:  op sub *tmp139 :locateOreAway:x :visited:lx                  if len(x - lx, y - ly) < 7 then
  200:  op sub *tmp140 :locateOreAway:y :visited:ly                  ...
  201:  op len *tmp141 *tmp139 *tmp140                               ...
  202:  jump *label119 greaterThanEq *tmp141 7                       ...
  203:  set *tmp132 true                                             return true;
  204:  jump *label115 always 0 0                                    ...
        label *label119                                              if len(x - lx, y - ly) < 7 then
  205:  op add :visited:index :visited:index 3                       index += 3;
  206:  op add :visited:i :visited:i 1                               for var i in 0 ... locations do
  207:  jump *label395 lessThan :visited:i .locations                ...
        label *label118                                              ...
  208:  set *tmp132 false                                            return false;
        label *label115                                              if !visited(x, y) then
  209:  jump *label121 notEqual *tmp132 false                        ...
  210:  op div *tmp146 7.639437055824273 :locateOreAway:distance     angle += 2 * SPIRAL_WIDTH / distance;
  211:  op add .angle .angle *tmp146                                 ...
  212:  set *tmp91 true                                              return true;
  213:  jump *label99 always 0 0                                     ...
        label *label121                                              if !visited(x, y) then
        label *label113                                              if unitDist < distance then
        label *label111                                              if coreDist >= 7 then
  214:  jump *label394 lessThan :locateOreAway:distance :findDrillLo while distance < distanceLimit do
        label *label102                                              ...
  215:  set *tmp91 false                                             return false;
        label *label99                                               if !locateOreAway(item, in out oreX, in out oreY, in distanceLimit) then
  216:  set :findDrillLocationLocal:oreX :locateOreAway:x            ...
  217:  set :findDrillLocationLocal:oreY :locateOreAway:y            ...
  218:  jump *label123 notEqual *tmp91 false                         ...
  219:  op greaterThan :findDrillLocationLocal*retval :findDrillLoca return capacity > 0;
  220:  return :findDrillLocationLocal*retaddr                       ...
        label *label123                                              if !locateOreAway(item, in out oreX, in out oreY, in distanceLimit) then
        label *label127                                              while !within(x, y, radius) do
  221:  ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp153  ...
  222:  jump *label129 notEqual *tmp153 false                        ...
  223:  ucontrol approach :locateOreAway:x :locateOreAway:y 5.5 0 0  approach(x, y, radius - 0.5);
  224:  jump *label127 always 0 0                                    while !within(x, y, radius) do
        label *label129                                              ...
  225:  set :findDrillLocationLocal:last 0                           var last = 0;
        label *label130                                              while true do
  226:  set :findBestPosition:x :findDrillLocationLocal:oreX         var score = findBestPosition(oreX, oreY, ore, large, ref diffX, ref diffY);
  227:  set :findBestPosition:y :findDrillLocationLocal:oreY         ...
  228:  set :findBestPosition:ore :findDrillLocationLocal:ore        ...
  229:  set :findBestPosition:large :findDrillLocationLocal:large    ...
  230:  op sub *tmp157 :findDrillLocationLocal:oreY 2                var y1 = computeRowValues(x, y - 2, ore, large);
  231:  set :computeRowValues:x :findDrillLocationLocal:oreX         ...
  232:  set :computeRowValues:y *tmp157                              ...
  233:  set :computeRowValues:ore :findDrillLocationLocal:ore        ...
  234:  set :computeRowValues:large :findDrillLocationLocal:large    ...
  235:  setaddr :computeRowValues*retaddr *label134                  ...
  236:  call *label5 *invalid :computeRowValues*retval               ...
        label *label134                                              ...
  237:  set :findBestPosition:y1 :computeRowValues*retval            ...
  238:  op sub *tmp159 :findBestPosition:y 1                         var y2 = computeRowValues(x, y - 1, ore, large);
  239:  set :computeRowValues:x :findBestPosition:x                  ...
  240:  set :computeRowValues:y *tmp159                              ...
  241:  set :computeRowValues:ore :findBestPosition:ore              ...
  242:  set :computeRowValues:large :findBestPosition:large          ...
  243:  setaddr :computeRowValues*retaddr *label135                  ...
  244:  call *label5 *invalid :computeRowValues*retval               ...
        label *label135                                              ...
  245:  set :findBestPosition:y2 :computeRowValues*retval            ...
  246:  set :computeRowValues:x :findBestPosition:x                  var y3 = computeRowValues(x, y + 0, ore, large);
  247:  set :computeRowValues:y :findBestPosition:y                  ...
  248:  set :computeRowValues:ore :findBestPosition:ore              ...
  249:  set :computeRowValues:large :findBestPosition:large          ...
  250:  setaddr :computeRowValues*retaddr *label136                  ...
  251:  call *label5 *invalid :computeRowValues*retval               ...
        label *label136                                              ...
  252:  set :findBestPosition:y3 :computeRowValues*retval            ...
  253:  op add *tmp163 :findBestPosition:y 1                         var y4 = computeRowValues(x, y + 1, ore, large);
  254:  set :computeRowValues:x :findBestPosition:x                  ...
  255:  set :computeRowValues:y *tmp163                              ...
  256:  set :computeRowValues:ore :findBestPosition:ore              ...
  257:  set :computeRowValues:large :findBestPosition:large          ...
  258:  setaddr :computeRowValues*retaddr *label137                  ...
  259:  call *label5 *invalid :computeRowValues*retval               ...
        label *label137                                              ...
  260:  set :findBestPosition:y4 :computeRowValues*retval            ...
  261:  op add *tmp165 :findBestPosition:y 2                         var y5 = computeRowValues(x, y + 2, ore, large);
  262:  set :computeRowValues:x :findBestPosition:x                  ...
  263:  set :computeRowValues:y *tmp165                              ...
  264:  set :computeRowValues:ore :findBestPosition:ore              ...
  265:  set :computeRowValues:large :findBestPosition:large          ...
  266:  setaddr :computeRowValues*retaddr *label138                  ...
  267:  call *label5 *invalid :computeRowValues*retval               ...
        label *label138                                              ...
  268:  set :findBestPosition:best 0                                 var best = 0;
  269:  set :findDrillLocationLocal:diffX 0                          bestX = 0;
  270:  set :findDrillLocationLocal:diffY 0                          bestY = 0;
  271:  jump *label139 equal :findBestPosition:large false           if large then
  272:  op add *tmp168 :findBestPosition:y1 :findBestPosition:y2     var row1 = y1 + y2 + y3;    // drill at y - 1
  273:  op add :findBestPosition:row1 *tmp168 :findBestPosition:y3   ...
  274:  op add *tmp170 :findBestPosition:y2 :findBestPosition:y3     var row2 = y2 + y3 + y4;    // drill at y
  275:  op add :findBestPosition:row2 *tmp170 :findBestPosition:y4   ...
  276:  op add *tmp172 :findBestPosition:y3 :findBestPosition:y4     var row3 = y3 + y4 + y5;    // drill at y + 1
  277:  op add :findBestPosition:row3 *tmp172 :computeRowValues*retv ...
  278:  unpackcolor :updateRowPositions3:col1 :updateRowPositions3:c unpackcolor(out col1, out col2, out col3, , row);
  279:  op mul *tmp175 :updateRowPositions3:col1 255                 print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  280:  print *tmp175                                                ...
  281:  print " at -1, -1 (0, 0)"                                    ...
  282:  jump *label143 greaterThanEq :updateRowPositions3:col1 0.039 if value < LIMIT then
  283:  jump *label145 lessThanEq :updateRowPositions3:col1 0        if value > best then
  284:  set :findDrillLocationLocal:diffX -1                         bestX = dx;
  285:  set :findDrillLocationLocal:diffY -1                         bestY = dy;
  286:  set :findBestPosition:best :updateRowPositions3:col1         best = value;
        label *label145                                              if value > best then
        label *label143                                              if value < LIMIT then
  287:  print "\n{0} at 0, -1 ({0}, {0})"                            println();
  288:  op mul *tmp180 :updateRowPositions3:col2 255                 print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  289:  format *tmp180                                               ...
  290:  format :findDrillLocationLocal:diffX                         ...
  291:  format :findDrillLocationLocal:diffY                         ...
  292:  jump *label148 greaterThanEq :updateRowPositions3:col2 0.039 if value < LIMIT then
  293:  jump *label150 lessThanEq :updateRowPositions3:col2 :findBes if value > best then
  294:  set :findDrillLocationLocal:diffX 0                          bestX = dx;
  295:  set :findDrillLocationLocal:diffY -1                         bestY = dy;
  296:  set :findBestPosition:best :updateRowPositions3:col2         best = value;
        label *label150                                              if value > best then
        label *label148                                              if value < LIMIT then
  297:  print "\n{0} at 1, -1 ({0}, {0})"                            println();
  298:  op mul *tmp185 :updateRowPositions3:col3 255                 print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  299:  format *tmp185                                               ...
  300:  format :findDrillLocationLocal:diffX                         ...
  301:  format :findDrillLocationLocal:diffY                         ...
  302:  jump *label153 greaterThanEq :updateRowPositions3:col3 0.039 if value < LIMIT then
  303:  jump *label155 lessThanEq :updateRowPositions3:col3 :findBes if value > best then
  304:  set :findDrillLocationLocal:diffX 1                          bestX = dx;
  305:  set :findDrillLocationLocal:diffY -1                         bestY = dy;
  306:  set :findBestPosition:best :updateRowPositions3:col3         best = value;
        label *label155                                              if value > best then
        label *label153                                              if value < LIMIT then
  307:  print "\nupdateRowPositions3: {0}, {0}: {0}\n{0} at -1, 0 ({ println();
  308:  op mul *tmp190 :findBestPosition:best 255                    println($"updateRowPositions3: $bestX, $bestY: ${best * 255}");
  309:  format :findDrillLocationLocal:diffX                         ...
  310:  format :findDrillLocationLocal:diffY                         ...
  311:  format *tmp190                                               ...
  312:  unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3 unpackcolor(out col1, out col2, out col3, , row);
  313:  op mul *tmp192 :updateRowPositions3.1:col1 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  314:  format *tmp192                                               ...
  315:  format :findDrillLocationLocal:diffX                         ...
  316:  format :findDrillLocationLocal:diffY                         ...
  317:  jump *label159 greaterThanEq :updateRowPositions3.1:col1 0.0 if value < LIMIT then
  318:  jump *label161 lessThanEq :updateRowPositions3.1:col1 :findB if value > best then
  319:  set :findDrillLocationLocal:diffX -1                         bestX = dx;
  320:  set :findDrillLocationLocal:diffY 0                          bestY = dy;
  321:  set :findBestPosition:best :updateRowPositions3.1:col1       best = value;
        label *label161                                              if value > best then
        label *label159                                              if value < LIMIT then
  322:  print "\n{0} at 0, 0 ({0}, {0})"                             println();
  323:  op mul *tmp197 :updateRowPositions3.1:col2 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  324:  format *tmp197                                               ...
  325:  format :findDrillLocationLocal:diffX                         ...
  326:  format :findDrillLocationLocal:diffY                         ...
  327:  jump *label164 greaterThanEq :updateRowPositions3.1:col2 0.0 if value < LIMIT then
  328:  jump *label166 lessThanEq :updateRowPositions3.1:col2 :findB if value > best then
  329:  set :findDrillLocationLocal:diffX 0                          bestX = dx;
  330:  set :findDrillLocationLocal:diffY 0                          bestY = dy;
  331:  set :findBestPosition:best :updateRowPositions3.1:col2       best = value;
        label *label166                                              if value > best then
        label *label164                                              if value < LIMIT then
  332:  print "\n{0} at 1, 0 ({0}, {0})"                             println();
  333:  op mul *tmp202 :updateRowPositions3.1:col3 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  334:  format *tmp202                                               ...
  335:  format :findDrillLocationLocal:diffX                         ...
  336:  format :findDrillLocationLocal:diffY                         ...
  337:  jump *label169 greaterThanEq :updateRowPositions3.1:col3 0.0 if value < LIMIT then
  338:  jump *label171 lessThanEq :updateRowPositions3.1:col3 :findB if value > best then
  339:  set :findDrillLocationLocal:diffX 1                          bestX = dx;
  340:  set :findDrillLocationLocal:diffY 0                          bestY = dy;
  341:  set :findBestPosition:best :updateRowPositions3.1:col3       best = value;
        label *label171                                              if value > best then
        label *label169                                              if value < LIMIT then
  342:  print "\nupdateRowPositions3: {0}, {0}: {0}\n{0} at -1, 1 ({ println();
  343:  op mul *tmp207 :findBestPosition:best 255                    println($"updateRowPositions3: $bestX, $bestY: ${best * 255}");
  344:  format :findDrillLocationLocal:diffX                         ...
  345:  format :findDrillLocationLocal:diffY                         ...
  346:  format *tmp207                                               ...
  347:  unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3 unpackcolor(out col1, out col2, out col3, , row);
  348:  op mul *tmp209 :updateRowPositions3.2:col1 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  349:  format *tmp209                                               ...
  350:  format :findDrillLocationLocal:diffX                         ...
  351:  format :findDrillLocationLocal:diffY                         ...
  352:  jump *label175 greaterThanEq :updateRowPositions3.2:col1 0.0 if value < LIMIT then
  353:  jump *label177 lessThanEq :updateRowPositions3.2:col1 :findB if value > best then
  354:  set :findDrillLocationLocal:diffX -1                         bestX = dx;
  355:  set :findDrillLocationLocal:diffY 1                          bestY = dy;
  356:  set :findBestPosition:best :updateRowPositions3.2:col1       best = value;
        label *label177                                              if value > best then
        label *label175                                              if value < LIMIT then
  357:  print "\n{0} at 0, 1 ({0}, {0})"                             println();
  358:  op mul *tmp214 :updateRowPositions3.2:col2 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  359:  format *tmp214                                               ...
  360:  format :findDrillLocationLocal:diffX                         ...
  361:  format :findDrillLocationLocal:diffY                         ...
  362:  jump *label180 greaterThanEq :updateRowPositions3.2:col2 0.0 if value < LIMIT then
  363:  jump *label182 lessThanEq :updateRowPositions3.2:col2 :findB if value > best then
  364:  set :findDrillLocationLocal:diffX 0                          bestX = dx;
  365:  set :findDrillLocationLocal:diffY 1                          bestY = dy;
  366:  set :findBestPosition:best :updateRowPositions3.2:col2       best = value;
        label *label182                                              if value > best then
        label *label180                                              if value < LIMIT then
  367:  print "\n{0} at 1, 1 ({0}, {0})"                             println();
  368:  op mul *tmp219 :updateRowPositions3.2:col3 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  369:  format *tmp219                                               ...
  370:  format :findDrillLocationLocal:diffX                         ...
  371:  format :findDrillLocationLocal:diffY                         ...
  372:  jump *label185 greaterThanEq :updateRowPositions3.2:col3 0.0 if value < LIMIT then
  373:  jump *label187 lessThanEq :updateRowPositions3.2:col3 :findB if value > best then
  374:  set :findDrillLocationLocal:diffX 1                          bestX = dx;
  375:  set :findDrillLocationLocal:diffY 1                          bestY = dy;
  376:  set :findBestPosition:best :updateRowPositions3.2:col3       best = value;
        label *label187                                              if value > best then
        label *label185                                              if value < LIMIT then
  377:  print "\nupdateRowPositions3: {0}, {0}: {0}\nfindBestPositio println();
  378:  op mul *tmp224 :findBestPosition:best 255                    println($"updateRowPositions3: $bestX, $bestY: ${best * 255}");
  379:  format :findDrillLocationLocal:diffX                         ...
  380:  format :findDrillLocationLocal:diffY                         ...
  381:  format *tmp224                                               ...
  382:  format :findDrillLocationLocal:diffX                         println($"findBestPosition: $bestX, $bestY: ${best * 255}");
  383:  format :findDrillLocationLocal:diffY                         ...
  384:  format *tmp224                                               ...
  385:  jump *label140 always 0 0                                    if large then
        label *label139                                              ...
  386:  op add :findBestPosition:row1.1 :findBestPosition:y1 :findBe var row1 = y1 + y2;         // drill at y - 1.5
  387:  op add :findBestPosition:row2.1 :findBestPosition:y2 :findBe var row2 = y2 + y3;         // drill at y - 0.5
  388:  op add :findBestPosition:row3.1 :findBestPosition:y3 :findBe var row3 = y3 + y4;         // drill at y + 0.5
  389:  op add :findBestPosition:row4 :findBestPosition:y4 :computeR var row4 = y4 + y5;         // drill at y + 1.5
  390:  unpackcolor :updateRowPositions4:col1 :updateRowPositions4:c unpackcolor(out col1, out col2, out col3, out col4, row);
  391:  op mul *tmp230 :updateRowPositions4:col1 255                 print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  392:  print *tmp230                                                ...
  393:  print " at -1.5, -1.5 (0, 0)"                                ...
  394:  jump *label191 greaterThanEq :updateRowPositions4:col1 0.039 if value < LIMIT then
  395:  jump *label193 lessThanEq :updateRowPositions4:col1 0        if value > best then
  396:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  397:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  398:  set :findBestPosition:best :updateRowPositions4:col1         best = value;
        label *label193                                              if value > best then
        label *label191                                              if value < LIMIT then
  399:  print "\n{0} at -0.5, -1.5 ({0}, {0})"                       println();
  400:  op mul *tmp235 :updateRowPositions4:col2 255                 print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  401:  format *tmp235                                               ...
  402:  format :findDrillLocationLocal:diffX                         ...
  403:  format :findDrillLocationLocal:diffY                         ...
  404:  jump *label196 greaterThanEq :updateRowPositions4:col2 0.039 if value < LIMIT then
  405:  jump *label198 lessThanEq :updateRowPositions4:col2 :findBes if value > best then
  406:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  407:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  408:  set :findBestPosition:best :updateRowPositions4:col2         best = value;
        label *label198                                              if value > best then
        label *label196                                              if value < LIMIT then
  409:  print "\n{0} at 0.5, -1.5 ({0}, {0})"                        println();
  410:  op mul *tmp240 :updateRowPositions4:col3 255                 print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  411:  format *tmp240                                               ...
  412:  format :findDrillLocationLocal:diffX                         ...
  413:  format :findDrillLocationLocal:diffY                         ...
  414:  jump *label201 greaterThanEq :updateRowPositions4:col3 0.039 if value < LIMIT then
  415:  jump *label203 lessThanEq :updateRowPositions4:col3 :findBes if value > best then
  416:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  417:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  418:  set :findBestPosition:best :updateRowPositions4:col3         best = value;
        label *label203                                              if value > best then
        label *label201                                              if value < LIMIT then
  419:  print "\n{0} at 1.5, -1.5 ({0}, {0})"                        println();
  420:  op mul *tmp245 :updateRowPositions4:col4 255                 print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  421:  format *tmp245                                               ...
  422:  format :findDrillLocationLocal:diffX                         ...
  423:  format :findDrillLocationLocal:diffY                         ...
  424:  jump *label206 greaterThanEq :updateRowPositions4:col4 0.039 if value < LIMIT then
  425:  jump *label208 lessThanEq :updateRowPositions4:col4 :findBes if value > best then
  426:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  427:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  428:  set :findBestPosition:best :updateRowPositions4:col4         best = value;
        label *label208                                              if value > best then
        label *label206                                              if value < LIMIT then
  429:  print "\n{0} at -1.5, -0.5 ({0}, {0})"                       println();
  430:  unpackcolor :updateRowPositions4.1:col1 :updateRowPositions4 unpackcolor(out col1, out col2, out col3, out col4, row);
  431:  op mul *tmp250 :updateRowPositions4.1:col1 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  432:  format *tmp250                                               ...
  433:  format :findDrillLocationLocal:diffX                         ...
  434:  format :findDrillLocationLocal:diffY                         ...
  435:  jump *label212 greaterThanEq :updateRowPositions4.1:col1 0.0 if value < LIMIT then
  436:  jump *label214 lessThanEq :updateRowPositions4.1:col1 :findB if value > best then
  437:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  438:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  439:  set :findBestPosition:best :updateRowPositions4.1:col1       best = value;
        label *label214                                              if value > best then
        label *label212                                              if value < LIMIT then
  440:  print "\n{0} at -0.5, -0.5 ({0}, {0})"                       println();
  441:  op mul *tmp255 :updateRowPositions4.1:col2 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  442:  format *tmp255                                               ...
  443:  format :findDrillLocationLocal:diffX                         ...
  444:  format :findDrillLocationLocal:diffY                         ...
  445:  jump *label217 greaterThanEq :updateRowPositions4.1:col2 0.0 if value < LIMIT then
  446:  jump *label219 lessThanEq :updateRowPositions4.1:col2 :findB if value > best then
  447:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  448:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  449:  set :findBestPosition:best :updateRowPositions4.1:col2       best = value;
        label *label219                                              if value > best then
        label *label217                                              if value < LIMIT then
  450:  print "\n{0} at 0.5, -0.5 ({0}, {0})"                        println();
  451:  op mul *tmp260 :updateRowPositions4.1:col3 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  452:  format *tmp260                                               ...
  453:  format :findDrillLocationLocal:diffX                         ...
  454:  format :findDrillLocationLocal:diffY                         ...
  455:  jump *label222 greaterThanEq :updateRowPositions4.1:col3 0.0 if value < LIMIT then
  456:  jump *label224 lessThanEq :updateRowPositions4.1:col3 :findB if value > best then
  457:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  458:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  459:  set :findBestPosition:best :updateRowPositions4.1:col3       best = value;
        label *label224                                              if value > best then
        label *label222                                              if value < LIMIT then
  460:  print "\n{0} at 1.5, -0.5 ({0}, {0})"                        println();
  461:  op mul *tmp265 :updateRowPositions4.1:col4 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  462:  format *tmp265                                               ...
  463:  format :findDrillLocationLocal:diffX                         ...
  464:  format :findDrillLocationLocal:diffY                         ...
  465:  jump *label227 greaterThanEq :updateRowPositions4.1:col4 0.0 if value < LIMIT then
  466:  jump *label229 lessThanEq :updateRowPositions4.1:col4 :findB if value > best then
  467:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  468:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  469:  set :findBestPosition:best :updateRowPositions4.1:col4       best = value;
        label *label229                                              if value > best then
        label *label227                                              if value < LIMIT then
  470:  print "\n{0} at -1.5, 0.5 ({0}, {0})"                        println();
  471:  unpackcolor :updateRowPositions4.2:col1 :updateRowPositions4 unpackcolor(out col1, out col2, out col3, out col4, row);
  472:  op mul *tmp270 :updateRowPositions4.2:col1 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  473:  format *tmp270                                               ...
  474:  format :findDrillLocationLocal:diffX                         ...
  475:  format :findDrillLocationLocal:diffY                         ...
  476:  jump *label233 greaterThanEq :updateRowPositions4.2:col1 0.0 if value < LIMIT then
  477:  jump *label235 lessThanEq :updateRowPositions4.2:col1 :findB if value > best then
  478:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  479:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  480:  set :findBestPosition:best :updateRowPositions4.2:col1       best = value;
        label *label235                                              if value > best then
        label *label233                                              if value < LIMIT then
  481:  print "\n{0} at -0.5, 0.5 ({0}, {0})"                        println();
  482:  op mul *tmp275 :updateRowPositions4.2:col2 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  483:  format *tmp275                                               ...
  484:  format :findDrillLocationLocal:diffX                         ...
  485:  format :findDrillLocationLocal:diffY                         ...
  486:  jump *label238 greaterThanEq :updateRowPositions4.2:col2 0.0 if value < LIMIT then
  487:  jump *label240 lessThanEq :updateRowPositions4.2:col2 :findB if value > best then
  488:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  489:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  490:  set :findBestPosition:best :updateRowPositions4.2:col2       best = value;
        label *label240                                              if value > best then
        label *label238                                              if value < LIMIT then
  491:  print "\n{0} at 0.5, 0.5 ({0}, {0})"                         println();
  492:  op mul *tmp280 :updateRowPositions4.2:col3 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  493:  format *tmp280                                               ...
  494:  format :findDrillLocationLocal:diffX                         ...
  495:  format :findDrillLocationLocal:diffY                         ...
  496:  jump *label243 greaterThanEq :updateRowPositions4.2:col3 0.0 if value < LIMIT then
  497:  jump *label245 lessThanEq :updateRowPositions4.2:col3 :findB if value > best then
  498:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  499:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  500:  set :findBestPosition:best :updateRowPositions4.2:col3       best = value;
        label *label245                                              if value > best then
        label *label243                                              if value < LIMIT then
  501:  print "\n{0} at 1.5, 0.5 ({0}, {0})"                         println();
  502:  op mul *tmp285 :updateRowPositions4.2:col4 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  503:  format *tmp285                                               ...
  504:  format :findDrillLocationLocal:diffX                         ...
  505:  format :findDrillLocationLocal:diffY                         ...
  506:  jump *label248 greaterThanEq :updateRowPositions4.2:col4 0.0 if value < LIMIT then
  507:  jump *label250 lessThanEq :updateRowPositions4.2:col4 :findB if value > best then
  508:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  509:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  510:  set :findBestPosition:best :updateRowPositions4.2:col4       best = value;
        label *label250                                              if value > best then
        label *label248                                              if value < LIMIT then
  511:  print "\n{0} at -1.5, 1.5 ({0}, {0})"                        println();
  512:  unpackcolor :updateRowPositions4.3:col1 :updateRowPositions4 unpackcolor(out col1, out col2, out col3, out col4, row);
  513:  op mul *tmp290 :updateRowPositions4.3:col1 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  514:  format *tmp290                                               ...
  515:  format :findDrillLocationLocal:diffX                         ...
  516:  format :findDrillLocationLocal:diffY                         ...
  517:  jump *label254 greaterThanEq :updateRowPositions4.3:col1 0.0 if value < LIMIT then
  518:  jump *label256 lessThanEq :updateRowPositions4.3:col1 :findB if value > best then
  519:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  520:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  521:  set :findBestPosition:best :updateRowPositions4.3:col1       best = value;
        label *label256                                              if value > best then
        label *label254                                              if value < LIMIT then
  522:  print "\n{0} at -0.5, 1.5 ({0}, {0})"                        println();
  523:  op mul *tmp295 :updateRowPositions4.3:col2 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  524:  format *tmp295                                               ...
  525:  format :findDrillLocationLocal:diffX                         ...
  526:  format :findDrillLocationLocal:diffY                         ...
  527:  jump *label259 greaterThanEq :updateRowPositions4.3:col2 0.0 if value < LIMIT then
  528:  jump *label261 lessThanEq :updateRowPositions4.3:col2 :findB if value > best then
  529:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  530:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  531:  set :findBestPosition:best :updateRowPositions4.3:col2       best = value;
        label *label261                                              if value > best then
        label *label259                                              if value < LIMIT then
  532:  print "\n{0} at 0.5, 1.5 ({0}, {0})"                         println();
  533:  op mul *tmp300 :updateRowPositions4.3:col3 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  534:  format *tmp300                                               ...
  535:  format :findDrillLocationLocal:diffX                         ...
  536:  format :findDrillLocationLocal:diffY                         ...
  537:  jump *label264 greaterThanEq :updateRowPositions4.3:col3 0.0 if value < LIMIT then
  538:  jump *label266 lessThanEq :updateRowPositions4.3:col3 :findB if value > best then
  539:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  540:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  541:  set :findBestPosition:best :updateRowPositions4.3:col3       best = value;
        label *label266                                              if value > best then
        label *label264                                              if value < LIMIT then
  542:  print "\n{0} at 1.5, 1.5 ({0}, {0})"                         println();
  543:  op mul *tmp305 :updateRowPositions4.3:col4 255               print($"${value * 255} at $dx, $dy ($bestX, $bestY)");
  544:  format *tmp305                                               ...
  545:  format :findDrillLocationLocal:diffX                         ...
  546:  format :findDrillLocationLocal:diffY                         ...
  547:  jump *label269 greaterThanEq :updateRowPositions4.3:col4 0.0 if value < LIMIT then
  548:  jump *label271 lessThanEq :updateRowPositions4.3:col4 :findB if value > best then
  549:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  550:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  551:  set :findBestPosition:best :updateRowPositions4.3:col4       best = value;
        label *label271                                              if value > best then
        label *label269                                              if value < LIMIT then
  552:  print "\n"                                                   println();
        label *label140                                              if large then
  553:  jump *label274 equal .debug false                            if debug then
  554:  printflush message1                                          printflush(message1);
  555:  control enabled switch1 true 0 0 0                           switch1.enabled = true;
        label *label276                                              do while switch1.enabled;
  556:  sensor *tmp312 switch1 @enabled                              ...
  557:  jump *label276 notEqual *tmp312 false                        ...
        label *label274                                              if debug then
  558:  op mul *tmp156 :findBestPosition:best 255                    return best * 255;
  559:  print "Ore at {0}, {0}: score {0}, best {0}, dx {0}, dy {0}\ println($"Ore at $oreX, $oreY: score $score, best $best, dx $diffX, dy $diffY");
  560:  format :findDrillLocationLocal:oreX                          ...
  561:  format :findDrillLocationLocal:oreY                          ...
  562:  format *tmp156                                               ...
  563:  format :findDrillLocationLocal:best                          ...
  564:  format :findDrillLocationLocal:diffX                         ...
  565:  format :findDrillLocationLocal:diffY                         ...
  566:  jump *label280 equal .debug false                            if debug then
  567:  printflush message1                                          printflush(message1);
  568:  control enabled switch1 true 0 0 0                           switch1.enabled = true;
        label *label282                                              do while switch1.enabled;
  569:  sensor *tmp316 switch1 @enabled                              ...
  570:  jump *label282 notEqual *tmp316 false                        ...
        label *label280                                              if debug then
  571:  jump *label285 lessThanEq *tmp156 :findDrillLocationLocal:ca if score > capacity then
  572:  op add :findDrillLocationLocal:dx :findDrillLocationLocal:or dx = oreX + diffX;
  573:  op add :findDrillLocationLocal:dy :findDrillLocationLocal:or dy = oreY + diffY;
  574:  set :findDrillLocationLocal:capacity *tmp156                 capacity = score;
  575:  set .bestSpot *tmp156                                        bestSpot = score;
  576:  jump *label287 lessThan :findDrillLocationLocal:capacity :fi if capacity >= limit then
  577:  ucontrol unbind 0 0 0 0 0                                    unbind();
  578:  set :findDrillLocationLocal*retval true                      return true;
  579:  return :findDrillLocationLocal*retaddr                       ...
        label *label287                                              if capacity >= limit then
        label *label285                                              if score > capacity then
  580:  jump *label289 lessThanEq *tmp156 :findDrillLocationLocal:be if score > best then
  581:  op add :findDrillLocationLocal:bestX :findDrillLocationLocal bestX = oreX + diffX;
  582:  op add :findDrillLocationLocal:bestY :findDrillLocationLocal bestY = oreY + diffY;
  583:  set :findDrillLocationLocal:best *tmp156                     best = score;
        label *label289                                              if score > best then
  584:  jump *label132 lessThanEq *tmp156 :findDrillLocationLocal:la if score <= last then break; end;
  585:  set :findDrillLocationLocal:last *tmp156                     last = score;
  586:  op mul :round:x :findDrillLocationLocal:diffX 1.1            oreX += round(diffX * 1.1);    // Rounds halves to higher absolute values
  587:  op add *tmp331 :round:x 0.5                                  *math: floor(x + 0.5);
  588:  op floor *tmp330 *tmp331 0                                   oreX += round(diffX * 1.1);    // Rounds halves to higher absolute values
  589:  op add :findDrillLocationLocal:oreX :findDrillLocationLocal: ...
  590:  op mul :round.1:x :findDrillLocationLocal:diffY 1.1          oreY += round(diffY * 1.1);
  591:  op add *tmp335 :round.1:x 0.5                                *math: floor(x + 0.5);
  592:  op floor *tmp334 *tmp335 0                                   oreY += round(diffY * 1.1);
  593:  op add :findDrillLocationLocal:oreY :findDrillLocationLocal: ...
  594:  op sub *tmp337 :findDrillLocationLocal:oreX .coreX           if min(abs(oreX - coreX), abs(oreY - coreY)) < 7 then break; end;
  595:  op abs *tmp338 *tmp337 0                                     ...
  596:  op sub *tmp339 :findDrillLocationLocal:oreY .coreY           ...
  597:  op abs *tmp340 *tmp339 0                                     ...
  598:  op min *tmp341 *tmp338 *tmp340                               ...
  599:  jump *label130 greaterThanEq *tmp341 7                       ...
        label *label132                                              while true do
  600:  op add :findDrillLocationLocal:count :findDrillLocationLocal bank1[++count] = best;
  601:  write :findDrillLocationLocal:best bank1 :findDrillLocationL ...
  602:  op add :findDrillLocationLocal:count :findDrillLocationLocal bank1[++count] = bestX;
  603:  write :findDrillLocationLocal:bestX bank1 :findDrillLocation ...
  604:  op add :findDrillLocationLocal:count :findDrillLocationLocal bank1[++count] = bestY;
  605:  write :findDrillLocationLocal:bestY bank1 :findDrillLocation ...
  606:  op add .locations .locations 1                               while true do
  607:  op sub :round.2:x @second .start                             println("Time: ", round(@second - start), " s");
  608:  op add *tmp353 :round.2:x 0.5                                *math: floor(x + 0.5);
  609:  op floor *tmp352 *tmp353 0                                   println("Time: ", round(@second - start), " s");
  610:  print "Time: {0} s\n"                                        ...
  611:  format *tmp352                                               ...
  612:  set :debugPrintSpot:index -1                                 var index = -1;
  613:  set :debugPrintSpot:i 0                                      for var i in 0 ... locations do
  614:  jump *label301 greaterThanEq 0 .locations                    ...
        label *label396                                              ...
  615:  op add :debugPrintSpot:index :debugPrintSpot:index 1         var size = bank1[++index];
  616:  read :debugPrintSpot:size bank1 :debugPrintSpot:index        ...
  617:  op add :debugPrintSpot:index :debugPrintSpot:index 1         var x = bank1[++index];
  618:  read :debugPrintSpot:x bank1 :debugPrintSpot:index           ...
  619:  op add :debugPrintSpot:index :debugPrintSpot:index 1         var y = bank1[++index];
  620:  read :debugPrintSpot:y bank1 :debugPrintSpot:index           ...
  621:  print :debugPrintSpot:x                                      println($"$x, $y: $size");
  622:  print ", {0}: {0}\n"                                         ...
  623:  format :debugPrintSpot:y                                     ...
  624:  format :debugPrintSpot:size                                  ...
  625:  op add :debugPrintSpot:i :debugPrintSpot:i 1                 for var i in 0 ... locations do
  626:  jump *label396 lessThan :debugPrintSpot:i .locations         ...
        label *label301                                              ...
  627:  print ""                                                     print(text);
  628:  printflush message1                                          printflush(message1);
  629:  jump *label96 always 0 0                                     while true do
        label *label0                                                remote def findDrillLocation(x, y, unit, item, ore, large, limit, out dx, out dy, out capacity)
  630:  set :findDrillLocationLocal:x :findDrillLocation:x           findDrillLocationLocal(x, y, unit, item, ore, large, limit, out dx, out dy, out capacity);
  631:  set :findDrillLocationLocal:y :findDrillLocation:y           ...
  632:  set :findDrillLocationLocal:unit :findDrillLocation:unit     ...
  633:  set :findDrillLocationLocal:item :findDrillLocation:item     ...
  634:  set :findDrillLocationLocal:ore :findDrillLocation:ore       ...
  635:  set :findDrillLocationLocal:large :findDrillLocation:large   ...
  636:  set :findDrillLocationLocal:limit :findDrillLocation:limit   ...
  637:  setaddr :findDrillLocationLocal*retaddr *label303            ...
  638:  call *label6 *invalid :findDrillLocationLocal*retval         ...
        label *label303                                              ...
  639:  set :findDrillLocation:dx :findDrillLocationLocal:dx         ...
  640:  set :findDrillLocation:dy :findDrillLocationLocal:dy         ...
  641:  set :findDrillLocation:capacity :findDrillLocationLocal:capa ...
  642:  set :findDrillLocation*retval :findDrillLocationLocal*retval remote def findDrillLocation(x, y, unit, item, ore, large, limit, out dx, out dy, out capacity)
  643:  set :findDrillLocation*finished true                         ...
  644:  jump *label83 always 0 0                                     ...
        label *label8                                                noinline def createTerrainMask(x, y)
        label *label308                                              while !within(x, y, radius) do
  645:  ucontrol within :createTerrainMask:x :createTerrainMask:y 6  ...
  646:  jump *label310 notEqual *tmp364 false                        ...
  647:  ucontrol approach :createTerrainMask:x :createTerrainMask:y  approach(x, y, radius - 0.5);
  648:  jump *label308 always 0 0                                    while !within(x, y, radius) do
        label *label310                                              ...
  649:  set :createTerrainMask:result 0                              var result = 0;
  650:  set :createTerrainMask:r 3                                   for var r in -3 .. 3 descending do
        label *label397                                              ...
  651:  set :createTerrainMask:c 3                                   for var c in -3 .. 3 descending do
  652:  op add :isBlocked:y :createTerrainMask:y :createTerrainMask: ...
        label *label398                                              ...
  653:  op shl *tmp367 :createTerrainMask:result 1                   result = (result << 1) | isBlocked(x + c, y + r);
  654:  op add :isBlocked:x :createTerrainMask:x :createTerrainMask: ...
  655:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  656:  select type equal type @boulder @air type                    ...
  657:  select :isBlocked:result equal type @air 0 1                 ...
  658:  op or :createTerrainMask:result *tmp367 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  659:  op sub :createTerrainMask:c :createTerrainMask:c 1           for var c in -3 .. 3 descending do
  660:  jump *label398 greaterThanEq :createTerrainMask:c -3         ...
  661:  op sub :createTerrainMask:r :createTerrainMask:r 1           for var r in -3 .. 3 descending do
  662:  jump *label397 greaterThanEq :createTerrainMask:r -3         ...
  663:  set :createTerrainMask*retval :createTerrainMask:result      return result;
  664:  return :createTerrainMask*retaddr                            noinline def createTerrainMask(x, y)
        label *label10                                               noinline def findPossiblePlacement(terrainMask, placementMask, width, height, out x, out y)
  665:  set :findPossiblePlacement:y -3                              for y in -3 .. 3 do
  666:  jump *label330 greaterThan :findPossiblePlacement:y 3        ...
        label *label399                                              ...
  667:  op add *tmp397 :findPossiblePlacement:y 3                    var mask = placementMask << 7 * (y + 3);
  668:  op mul *tmp398 7 *tmp397                                     ...
  669:  op shl :findPossiblePlacement:mask :findPossiblePlacement:pl ...
  670:  set :findPossiblePlacement:x -3                              for x in -3 .. 3 do
  671:  jump *label333 greaterThan :findPossiblePlacement:x 3        ...
        label *label400                                              ...
  672:  op and *tmp400 :findPossiblePlacement:terrainMask :findPossi if (terrainMask & mask) == 0 then return 3 * 8 + y * 7 + x; end;
  673:  jump *label334 notEqual *tmp400 0                            ...
  674:  op mul *tmp403 :findPossiblePlacement:y 7                    ...
  675:  op add *tmp404 24 *tmp403                                    ...
  676:  op add :findPossiblePlacement*retval *tmp404 :findPossiblePl ...
  677:  return :findPossiblePlacement*retaddr                        ...
        label *label334                                              ...
  678:  op sub *tmp406 3 :findPossiblePlacement:width                if x > 3 - width then break; end;
  679:  jump *label333 greaterThan :findPossiblePlacement:x *tmp406  ...
  680:  op shl :findPossiblePlacement:mask :findPossiblePlacement:ma mask <<= 1;
  681:  op add :findPossiblePlacement:x :findPossiblePlacement:x 1   for x in -3 .. 3 do
  682:  jump *label400 lessThanEq :findPossiblePlacement:x 3         ...
        label *label333                                              ...
  683:  op sub *tmp409 3 :findPossiblePlacement:height               if y > 3 - height then break; end;
  684:  jump *label330 greaterThan :findPossiblePlacement:y *tmp409  ...
  685:  op add :findPossiblePlacement:y :findPossiblePlacement:y 1   for y in -3 .. 3 do
  686:  jump *label399 lessThanEq :findPossiblePlacement:y 3         ...
        label *label330                                              ...
  687:  set :findPossiblePlacement*retval -1                         return -1;
  688:  return :findPossiblePlacement*retaddr                        noinline def findPossiblePlacement(terrainMask, placementMask, width, height, out x, out y)
        label *label11                                               def tryPlaceGenerator(centerX, centerY, terrainMask, generatorHorizontal, generatorVertical)
  689:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te var shift = findPossiblePlacement(terrainMask, generatorHorizontal, 4, 2, out c, out r);
  690:  set :findPossiblePlacement:placementMask :tryPlaceGenerator: ...
  691:  set :findPossiblePlacement:width 4                           ...
  692:  set :findPossiblePlacement:height 2                          ...
  693:  setaddr :findPossiblePlacement*retaddr *label341             ...
  694:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label341                                              ...
  695:  jump *label342 lessThan :findPossiblePlacement*retval 0      if shift >= 0 then
  696:  op add *tmp415 :tryPlaceGenerator:centerX 0.5                water2X = centerX + 0.5 + c;
  697:  op add .water2X *tmp415 :findPossiblePlacement:x             ...
  698:  op add *tmp417 :tryPlaceGenerator:centerY 0.5                water2Y = centerY + 0.5 + r;
  699:  op add .water2Y *tmp417 :findPossiblePlacement:y             ...
  700:  op add *tmp419 :tryPlaceGenerator:centerX 2.5                generatorX = centerX + 2.5 + c;
  701:  op add .generatorX *tmp419 :findPossiblePlacement:x          ...
  702:  op add .generatorY *tmp417 :findPossiblePlacement:y          generatorY = centerY + 0.5 + r;
  703:  op shl *tmp423 :tryPlaceGenerator:generatorHorizontal :findP terrainMask |= (generatorHorizontal << shift);
  704:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
  705:  jump *label343 always 0 0                                    if shift >= 0 then
        label *label342                                              ...
  706:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, generatorVertical, 2, 4, out c, out r);
  707:  set :findPossiblePlacement:placementMask :tryPlaceGenerator: ...
  708:  set :findPossiblePlacement:width 2                           ...
  709:  set :findPossiblePlacement:height 4                          ...
  710:  setaddr :findPossiblePlacement*retaddr *label344             ...
  711:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label344                                              ...
  712:  jump *label345 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  713:  set :tryPlaceGenerator*retval false                          ...
  714:  return :tryPlaceGenerator*retaddr                            ...
        label *label345                                              ...
  715:  op add *tmp427 :tryPlaceGenerator:centerX 0.5                water2X = centerX + 0.5 + c;
  716:  op add .water2X *tmp427 :findPossiblePlacement:x             ...
  717:  op add *tmp429 :tryPlaceGenerator:centerY 0.5                water2Y = centerY + 0.5 + r;
  718:  op add .water2Y *tmp429 :findPossiblePlacement:y             ...
  719:  op add .generatorX *tmp427 :findPossiblePlacement:x          generatorX = centerX + 0.5 + c;
  720:  op add *tmp433 :tryPlaceGenerator:centerY 2.5                generatorY = centerY + 2.5 + r;
  721:  op add .generatorY *tmp433 :findPossiblePlacement:y          ...
  722:  op shl *tmp435 :tryPlaceGenerator:generatorVertical :findPos terrainMask |= (generatorVertical << shift);
  723:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
        label *label343                                              if shift >= 0 then
  724:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, 1, 1, 1, out c, out r);
  725:  set :findPossiblePlacement:placementMask 1                   ...
  726:  set :findPossiblePlacement:width 1                           ...
  727:  set :findPossiblePlacement:height 1                          ...
  728:  setaddr :findPossiblePlacement*retaddr *label347             ...
  729:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label347                                              ...
  730:  jump *label348 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  731:  set :tryPlaceGenerator*retval false                          ...
  732:  return :tryPlaceGenerator*retaddr                            ...
        label *label348                                              ...
  733:  op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacem nodeX = centerX + c;
  734:  op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacem nodeY = centerY + r;
  735:  op shl *tmp441 1 :findPossiblePlacement*retval               terrainMask |= (1 << shift);
  736:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
  737:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, 1, 1, 1, out c, out r);
  738:  set :findPossiblePlacement:placementMask 1                   ...
  739:  set :findPossiblePlacement:width 1                           ...
  740:  set :findPossiblePlacement:height 1                          ...
  741:  setaddr :findPossiblePlacement*retaddr *label350             ...
  742:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label350                                              ...
  743:  jump *label351 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  744:  set :tryPlaceGenerator*retval false                          ...
  745:  return :tryPlaceGenerator*retaddr                            ...
        label *label351                                              ...
  746:  op add .panelX :tryPlaceGenerator:centerX :findPossiblePlace panelX = centerX + c;
  747:  op add .panelY :tryPlaceGenerator:centerY :findPossiblePlace panelY = centerY + r;
  748:  set :tryPlaceGenerator*retval true                           return true;
  749:  return :tryPlaceGenerator*retaddr                            ...
        label *label12                                               noinline def layoutThoriumDrillAtLocation()
  750:  set .panelY -1                                               water1X = water1Y = water2X = water2Y = generatorX = generatorY = panelX = panelY = -1;
  751:  set .panelX -1                                               ...
  752:  set .generatorY -1                                           ...
  753:  set .generatorX -1                                           ...
  754:  set .water2Y -1                                              ...
  755:  set .water2X -1                                              ...
  756:  set .water1Y -1                                              ...
  757:  set .water1X -1                                              ...
  758:  set :createTerrainMask:x .drillX                             var plainTerrainMask = createTerrainMask(drillX, drillY);
  759:  set :createTerrainMask:y .drillY                             ...
  760:  setaddr :createTerrainMask*retaddr *label354                 ...
  761:  call *label8 *invalid :createTerrainMask*retval              ...
        label *label354                                              ...
  762:  op or :layoutThoriumDrillAtLocation:terrainMask :createTerra var terrainMask = plainTerrainMask | createFixedMatrix(
  763:  op or :layoutThoriumDrillAtLocation:cornersMask :layoutThori var cornersMask = terrainMask | createFixedMatrix(
  764:  set :layoutThoriumDrillAtLocation:extractorMask 387          var extractorMask = createFixedMatrix(0b11, 0b11);
  765:  set :findPossiblePlacement:terrainMask :layoutThoriumDrillAt var shift = findPossiblePlacement(cornersMask, extractorMask, 2, 2, out c, out r);
  766:  set :findPossiblePlacement:placementMask 387                 ...
  767:  set :findPossiblePlacement:width 2                           ...
  768:  set :findPossiblePlacement:height 2                          ...
  769:  setaddr :findPossiblePlacement*retaddr *label358             ...
  770:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label358                                              ...
  771:  jump *label359 lessThan :findPossiblePlacement*retval 0      if shift >= 0 then
  772:  op add *tmp485 .drillX 0.5                                   water1X = drillX + 0.5 + c;
  773:  op add .water1X *tmp485 :findPossiblePlacement:x             ...
  774:  op add *tmp487 .drillY 0.5                                   water1Y = drillY + 0.5 + r;
  775:  op add .water1Y *tmp487 :findPossiblePlacement:y             ...
  776:  op shl :layoutThoriumDrillAtLocation:extractorMask :layoutTh extractorMask <<= shift;
  777:  op or :layoutThoriumDrillAtLocation:terrainMask :layoutThori terrainMask |= extractorMask;
        label *label359                                              if shift >= 0 then
  778:  set :layoutThoriumDrillAtLocation:generatorHorizontal 1935   var generatorHorizontal = createFixedMatrix(0b1111, 0b1111);
  779:  set :layoutThoriumDrillAtLocation:generatorVertical 6340995  var generatorVertical = createFixedMatrix(0b11, 0b11, 0b11, 0b11);
  780:  set :tryPlaceGenerator:centerX .drillX                       if tryPlaceGenerator(drillX, drillY, terrainMask, generatorHorizontal, generatorVertical) then return true; end;
  781:  set :tryPlaceGenerator:centerY .drillY                       ...
  782:  set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLoca ...
  783:  set :tryPlaceGenerator:generatorHorizontal 1935              ...
  784:  set :tryPlaceGenerator:generatorVertical 6340995             ...
  785:  setaddr :tryPlaceGenerator*retaddr *label363                 ...
  786:  call *label11 *invalid :tryPlaceGenerator*retval             ...
        label *label363                                              ...
  787:  jump *label364 equal :tryPlaceGenerator*retval false         ...
  788:  set :layoutThoriumDrillAtLocation*retval true                ...
  789:  return :layoutThoriumDrillAtLocation*retaddr                 ...
        label *label364                                              ...
  790:  set :layoutThoriumDrillAtLocation:sx 3                       for var sx in 3, 3, -3, -3; var sy in 3, -3, 3, -3 do
  791:  set :layoutThoriumDrillAtLocation:sy 3                       ...
  792:  setaddr *tmp503 *label369                                    ...
  793:  jump *label366 always 0 0                                    ...
        multilabel *label369                                         ...
  794:  set :layoutThoriumDrillAtLocation:sx 3                       ...
  795:  set :layoutThoriumDrillAtLocation:sy -3                      ...
  796:  setaddr *tmp503 *label370                                    ...
  797:  jump *label366 always 0 0                                    ...
        multilabel *label370                                         ...
  798:  set :layoutThoriumDrillAtLocation:sx -3                      ...
  799:  set :layoutThoriumDrillAtLocation:sy 3                       ...
  800:  setaddr *tmp503 *label371                                    ...
  801:  jump *label366 always 0 0                                    ...
        multilabel *label371                                         ...
  802:  set :layoutThoriumDrillAtLocation:sx -3                      ...
  803:  set :layoutThoriumDrillAtLocation:sy -3                      ...
  804:  setaddr *tmp503 *label372                                    ...
        label *label366                                              ...
  805:  op add :layoutThoriumDrillAtLocation:newX .drillX :layoutTho var newX = drillX + sx;
  806:  op add :layoutThoriumDrillAtLocation:newY .drillY :layoutTho var newY = drillY + sy;
  807:  set :createTerrainMask:x :layoutThoriumDrillAtLocation:newX  var newTerrainMask = createTerrainMask(newX, newY);
  808:  set :createTerrainMask:y :layoutThoriumDrillAtLocation:newY  ...
  809:  setaddr :createTerrainMask*retaddr *label373                 ...
  810:  call *label8 *invalid :createTerrainMask*retval              ...
        label *label373                                              ...
  811:  op sub *tmp507 0 :layoutThoriumDrillAtLocation:sx            var shiftedMask = shiftMask(terrainMask, -sx, -sy);
  812:  op sub *tmp508 0 :layoutThoriumDrillAtLocation:sy            ...
  813:  set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMas ...
  814:  op abs *tmp371 *tmp507 0                                     if abs(shiftX) > 6 or abs(shiftY) > 6 then return 0; end;
  815:  op greaterThan *tmp372 *tmp371 6                             ...
  816:  op abs *tmp373 *tmp508 0                                     ...
  817:  op greaterThan *tmp374 *tmp373 6                             ...
  818:  op or *tmp375 *tmp372 *tmp374                                ...
  819:  jump *label404 equal *tmp375 false                           ...
  820:  set :shiftMask*retval 0                                      ...
  821:  jump *label412 always 0 0                                    ...
        label *label404                                              ...
  822:  op mul *tmp377 7 *tmp508                                     var shift = shiftX + 7 * shiftY;
  823:  op add :shiftMask:shift *tmp507 *tmp377                      ...
  824:  jump *label406 lessThanEq :shiftMask:shift 0                 if shift > 0 then
  825:  op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift var clearMask = ((1 << 49) - 1) >> shift;
  826:  op and *tmp382 :layoutThoriumDrillAtLocation:terrainMask :sh mask = (mask & clearMask) << shift;
  827:  op shl :shiftMask:mask *tmp382 :shiftMask:shift              ...
  828:  jump *label407 always 0 0                                    if shift > 0 then
        label *label406                                              ...
  829:  op sub *tmp384 0 :shiftMask:shift                            mask >>= -shift;
  830:  op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrain ...
        label *label407                                              if shift > 0 then
  831:  jump *label410 equal *tmp507 0                               if shiftX != 0 then
  832:  op sub *tmp388 7 *tmp371                                     var keep = 0b1111111 >> (7 - abs(shiftX));          // The bits we need to keep
  833:  op shr :shiftMask:keep 0b1111111 *tmp388                     ...
  834:  jump *label408 lessThanEq *tmp507 0                          if shiftX > 0 then keep <<= 7 - abs(shiftX); end;   // Shift to the proper side
  835:  op shl :shiftMask:keep :shiftMask:keep *tmp388               ...
        label *label408                                              ...
  836:  op shl *tmp394 :shiftMask:keep 7                             keep |= keep << 7;
  837:  op or :shiftMask:keep :shiftMask:keep *tmp394                ...
  838:  op shl *tmp395 :shiftMask:keep 14                            keep |= keep << 14;
  839:  op or :shiftMask:keep :shiftMask:keep *tmp395                ...
  840:  op shl *tmp396 :shiftMask:keep 21                            keep |= keep << 21;
  841:  op or :shiftMask:keep :shiftMask:keep *tmp396                ...
  842:  op and :shiftMask:mask :shiftMask:mask :shiftMask:keep       mask &= keep;
        label *label410                                              if shiftX != 0 then
  843:  set :shiftMask*retval :shiftMask:mask                        return mask;
        label *label412                                              var shiftedMask = shiftMask(terrainMask, -sx, -sy);
  844:  op or :layoutThoriumDrillAtLocation:combinedMask :createTerr var combinedMask = newTerrainMask | shiftedMask;
  845:  op add *tmp510 .drillX :layoutThoriumDrillAtLocation:sx      if tryPlaceGenerator(drillX + sx, drillY + sy, combinedMask, generatorHorizontal, generatorVertical) then return true; end;
  846:  op add *tmp511 .drillY :layoutThoriumDrillAtLocation:sy      ...
  847:  set :tryPlaceGenerator:centerX *tmp510                       ...
  848:  set :tryPlaceGenerator:centerY *tmp511                       ...
  849:  set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLoca ...
  850:  set :tryPlaceGenerator:generatorHorizontal :layoutThoriumDri ...
  851:  set :tryPlaceGenerator:generatorVertical :layoutThoriumDrill ...
  852:  setaddr :tryPlaceGenerator*retaddr *label375                 ...
  853:  call *label11 *invalid :tryPlaceGenerator*retval             ...
        label *label375                                              ...
  854:  jump *label376 equal :tryPlaceGenerator*retval false         ...
  855:  set :layoutThoriumDrillAtLocation*retval true                ...
  856:  return :layoutThoriumDrillAtLocation*retaddr                 ...
        label *label376                                              ...
  857:  multijump *tmp503 0 0                                        for var sx in 3, 3, -3, -3; var sy in 3, -3, 3, -3 do
        multilabel *label372                                         ...
  858:  set :layoutThoriumDrillAtLocation*retval true                return true;
  859:  return :layoutThoriumDrillAtLocation*retaddr                 noinline def layoutThoriumDrillAtLocation()
        label *label1                                                remote def layoutThoriumDrill(x, y, unit, limit)
  860:  set :findDrillLocationLocal:x :layoutThoriumDrill:x          if !findDrillLocationLocal(x, y, unit, @thorium, @ore-thorium, true, limit, out drillX, out drillY) then
  861:  set :findDrillLocationLocal:y :layoutThoriumDrill:y          ...
  862:  set :findDrillLocationLocal:unit :layoutThoriumDrill:unit    ...
  863:  set :findDrillLocationLocal:item @thorium                    ...
  864:  set :findDrillLocationLocal:ore @ore-thorium                 ...
  865:  set :findDrillLocationLocal:large true                       ...
  866:  set :findDrillLocationLocal:limit :layoutThoriumDrill:limit  ...
  867:  setaddr :findDrillLocationLocal*retaddr *label379            ...
  868:  call *label6 *invalid :findDrillLocationLocal*retval         ...
        label *label379                                              ...
  869:  set .drillX :findDrillLocationLocal:dx                       ...
  870:  set .drillY :findDrillLocationLocal:dy                       ...
  871:  jump *label380 notEqual :findDrillLocationLocal*retval false ...
  872:  set :layoutThoriumDrill*retval false                         return false;
  873:  jump *label378 always 0 0                                    ...
        label *label380                                              if !findDrillLocationLocal(x, y, unit, @thorium, @ore-thorium, true, limit, out drillX, out drillY) then
  874:  setaddr :layoutThoriumDrillAtLocation*retaddr *label382      layoutThoriumDrillAtLocation();
  875:  call *label12 *invalid :layoutThoriumDrillAtLocation*retval  ...
        label *label382                                              ...
  876:  set :layoutThoriumDrill*retval :layoutThoriumDrillAtLocation remote def layoutThoriumDrill(x, y, unit, limit)
        label *label378                                              ...
  877:  set :layoutThoriumDrill*finished true                        ...
  878:  jump *label83 always 0 0                                     ...


Performance: parsed in 530 ms, compiled in 479 ms, optimized in 1,549 ms, run in 8 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: success.

Program output (6 steps):
The program didn't generate any output.
Execution exception at instruction 37: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
