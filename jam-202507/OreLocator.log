  1857 instructions before optimizations.
   111 instructions eliminated by Temp Variables Elimination (2 iterations).
   247 instructions eliminated by Dead Code Elimination (7 iterations).
C:\Home\golem\jam-202507\OreLocator.mnd:21:19 Variable 'mapProgress' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:21:32 Variable 'mapTotal' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:21:42 Variable 'mapAction' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:26:5 Variable 'searchFinished' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:28:5 Variable 'water1X' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:28:14 Variable 'water1Y' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:29:5 Variable 'containerX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:29:17 Variable 'containerY' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:30:5 Variable 'water2X' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:30:14 Variable 'water2Y' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:31:5 Variable 'generatorX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:31:17 Variable 'generatorY' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:32:5 Variable 'nodeX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:32:12 Variable 'nodeY' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:33:5 Variable 'panelX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:33:13 Variable 'panelY' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:34:5 Variable 'batteryX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:34:15 Variable 'batteryY' is not used.
     2 instructions eliminated by Jump Normalization (6 iterations).
   121 instructions eliminated by Jump Optimization (6 iterations).
   133 instructions eliminated by Single Step Elimination (3 passes, 10 iterations).
     7 instructions modified by Expression Optimization (3 iterations).
   354 instructions eliminated by Data Flow Optimization (4 passes, 17 iterations).
     2 loops improved by Loop Hoisting.
     2 instructions added by Loop Optimization (3 iterations).
    12 loops improved by Loop Optimization.
    90 instructions added by Function Inlining (10 iterations).
     4 function calls inlined by Function Inlining.
     6 instructions eliminated by Jump Straightening (2 passes, 6 iterations).
    27 instructions updated by JumpThreading.
    60 instructions eliminated by Unreachable Code Elimination (3 iterations).
   915 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 92):
    Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000
  * Replicate loop condition at line 41:5                        size    +1, benefit    31250.0, efficiency  31250.000 (+1 instructions)
    Replicate loop condition at line 41:5                        size    +1, benefit     1250.0, efficiency   1250.000
    Replicate loop condition at line 41:5                        size    +1, benefit      650.0, efficiency    650.000
  ! Inline function 'computeRowValues' defined at line 74:1      size  +473, benefit    34375.0, efficiency     72.674
    Inline function 'tryPlaceGenerator' defined at line 571:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function 'printMask' defined at line 759:1            size   +19, benefit       12.0, efficiency      0.632
    Inline function call at line 160:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 161:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 162:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 163:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 164:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 194:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 195:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 669:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 670:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 671:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 709:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 731:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 91):
    Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000
  * Replicate loop condition at line 41:5                        size    +1, benefit     1250.0, efficiency   1250.000 (+1 instructions)
    Replicate loop condition at line 41:5                        size    +1, benefit      650.0, efficiency    650.000
  ! Inline function 'computeRowValues' defined at line 74:1      size  +473, benefit    34375.0, efficiency     72.674
    Inline function 'tryPlaceGenerator' defined at line 571:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function 'printMask' defined at line 759:1            size   +19, benefit       12.0, efficiency      0.632
    Inline function call at line 160:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 161:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 162:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 163:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 164:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 194:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 195:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 669:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 670:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 671:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 709:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 731:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 90):
    Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000
  * Replicate loop condition at line 41:5                        size    +1, benefit      650.0, efficiency    650.000 (+1 instructions)
  ! Inline function 'computeRowValues' defined at line 74:1      size  +473, benefit    34375.0, efficiency     72.674
    Inline function 'tryPlaceGenerator' defined at line 571:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function 'printMask' defined at line 759:1            size   +19, benefit       12.0, efficiency      0.632
    Inline function call at line 160:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 161:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 162:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 163:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 164:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 194:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 195:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 669:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 670:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 671:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 709:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 731:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 89):
    Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000
  ! Inline function 'computeRowValues' defined at line 74:1      size  +473, benefit    34375.0, efficiency     72.674
    Inline function 'tryPlaceGenerator' defined at line 571:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function 'printMask' defined at line 759:1            size   +19, benefit       12.0, efficiency      0.632
  * Inline function call at line 160:14                          size   +79, benefit     6250.0, efficiency     79.114 (+74 instructions)
    Inline function call at line 161:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 162:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 163:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 164:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 194:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 195:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 669:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 670:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 671:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 709:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 731:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 15):
  * Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000 (+1 instructions)
  ! Inline function 'computeRowValues' defined at line 74:1      size  +394, benefit    28125.0, efficiency     71.383
  ! Inline function 'tryPlaceGenerator' defined at line 571:1    size   +72, benefit      143.0, efficiency      1.986
  ! Inline function 'printMask' defined at line 759:1            size   +19, benefit       12.0, efficiency      0.632
  ! Inline function call at line 161:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 162:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 163:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 164:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 194:18                          size   +79, benefit     1562.5, efficiency     19.778
  ! Inline function call at line 195:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 669:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 670:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 671:5                           size   +10, benefit        4.0, efficiency      0.400
  ! Inline function call at line 709:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 731:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 14):
  ! Inline function 'computeRowValues' defined at line 74:1      size  +394, benefit    28125.0, efficiency     71.383
  ! Inline function 'tryPlaceGenerator' defined at line 571:1    size   +72, benefit      143.0, efficiency      1.986
  ! Inline function 'printMask' defined at line 759:1            size   +19, benefit       12.0, efficiency      0.632
  ! Inline function call at line 161:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 162:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 163:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 164:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 194:18                          size   +79, benefit     1562.5, efficiency     19.778
  ! Inline function call at line 195:18                          size   +79, benefit     1562.5, efficiency     19.778
  * Inline function call at line 669:5                           size   +10, benefit        4.0, efficiency      0.400 (+9 instructions)
    Inline function call at line 670:5                           size   +10, benefit        4.0, efficiency      0.400
    Inline function call at line 671:5                           size   +10, benefit        4.0, efficiency      0.400
  ! Inline function call at line 709:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 731:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 5):
  ! Inline function 'computeRowValues' defined at line 74:1      size  +394, benefit    28125.0, efficiency     71.383
  ! Inline function 'tryPlaceGenerator' defined at line 571:1    size   +72, benefit      143.0, efficiency      1.986
  ! Inline function 'printMask' defined at line 759:1            size    +9, benefit        8.0, efficiency      0.889
  ! Inline function call at line 161:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 162:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 163:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 164:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 194:18                          size   +79, benefit     1562.5, efficiency     19.778
  ! Inline function call at line 195:18                          size   +79, benefit     1562.5, efficiency     19.778
  ! Inline function call at line 670:5                           size   +10, benefit        4.0, efficiency      0.400
  ! Inline function call at line 671:5                           size   +10, benefit        4.0, efficiency      0.400
  ! Inline function call at line 709:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 731:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 2: speed optimization selection (cost limit 20):
  ! Inline function 'computeRowValues' defined at line 74:1      size  +389, benefit    28125.0, efficiency     72.301
  ! Inline function 'tryPlaceGenerator' defined at line 571:1    size   +72, benefit      143.0, efficiency      1.986
  * Inline function 'printMask' defined at line 759:1            size    +7, benefit        8.0, efficiency      1.143 (+3 instructions)
  ! Inline function call at line 161:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 162:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 163:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 164:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 194:18                          size   +78, benefit     1562.5, efficiency     20.032
  ! Inline function call at line 195:18                          size   +78, benefit     1562.5, efficiency     20.032
    Inline function call at line 670:5                           size    +8, benefit        4.0, efficiency      0.500
    Inline function call at line 671:5                           size    +8, benefit        4.0, efficiency      0.500
  ! Inline function call at line 709:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 731:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 2: speed optimization selection (cost limit 17):
  ! Inline function 'computeRowValues' defined at line 74:1      size  +389, benefit    28125.0, efficiency     72.301
  ! Inline function 'tryPlaceGenerator' defined at line 571:1    size   +72, benefit      143.0, efficiency      1.986
  ! Inline function call at line 161:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 162:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 163:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 164:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 194:18                          size   +78, benefit     1562.5, efficiency     20.032
  ! Inline function call at line 195:18                          size   +78, benefit     1562.5, efficiency     20.032
  ! Inline function call at line 709:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 731:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 3: speed optimization selection (cost limit 17):
  ! Inline function 'computeRowValues' defined at line 74:1      size  +389, benefit    28125.0, efficiency     72.301
  ! Inline function 'tryPlaceGenerator' defined at line 571:1    size   +72, benefit      143.0, efficiency      1.986
  ! Inline function call at line 161:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 162:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 163:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 164:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 194:18                          size   +78, benefit     1562.5, efficiency     20.032
  ! Inline function call at line 195:18                          size   +78, benefit     1562.5, efficiency     20.032
  ! Inline function call at line 709:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 731:12                          size   +73, benefit      137.5, efficiency      1.884

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-154 instructions):
 
   261 jump *label64 equal *tmp126 false
   262 set *tmp98 false
   263 jump *label54 always
-    * set *tmp127 null
   264 jump *label65 always
   265 label *label64
-    * set *tmp127 null
   266 label *label65
   267 op sub *tmp128 :locateOreAway:x .coreX
   268 op abs *tmp129 *tmp128
 
   284 label *label68
   285 set *tmp139 null
   286 label *label69
-    * set *tmp137 *tmp139
   287 jump *label67 always
   288 label *label66
-    * set *tmp137 null
   289 label *label67
   290 op greaterThanEq *tmp140 :locateOreAway:coreDist 7
   291 jump *label70 equal *tmp140 false
 
   316 jump *label78 equal *tmp156 false
   317 set *tmp144 true
   318 jump *label74 always
-    * set *tmp157 null
   319 jump *label79 always
   320 label *label78
-    * set *tmp157 null
   321 label *label79
   322 label *label76
   323 op add :visited:i :visited:i 1
 
   346 label *label72
   347 set *tmp143 null
   348 label *label73
-    * set *tmp141 *tmp143
   349 jump *label71 always
   350 label *label70
-    * set *tmp141 null
   351 label *label71
   352 label *label56
   353 jump *label55 always
 
   363 op greaterThan *tmp164 :findDrillLocationLocal:capacity 0
   364 set :findDrillLocationLocal*retval *tmp164
   365 jump *label45 always
-    * set *tmp163 null
   366 jump *label83 always
   367 label *label82
-    * set *tmp163 null
   368 label *label83
   369 op greaterThanEq *tmp165 :findDrillLocationLocal:limit 1000
   370 jump *label84 equal *tmp165 false
   371 set *tmp167 .mapSpots
   372 op add .mapSpots .mapSpots 1
-    * set *tmp166 *tmp167
   373 jump *label85 always
   374 label *label84
-    * set *tmp166 null
   375 label *label85
   376 set :moveTo.5:x :findDrillLocationLocal:oreX
   377 set :moveTo.5:y :findDrillLocationLocal:oreY
 
   479 label *label106
   480 set *tmp193 null
   481 label *label107
-    * set *tmp191 *tmp193
   482 jump *label105 always
   483 label *label104
-    * set *tmp191 null
   484 label *label105
   485 label *label103
   486 set :updatePosition.1:dx -0.5
 
   498 label *label111
   499 set *tmp197 null
   500 label *label112
-    * set *tmp195 *tmp197
   501 jump *label110 always
   502 label *label109
-    * set *tmp195 null
   503 label *label110
   504 label *label108
   505 set :updatePosition.2:dx 0.5
 
   517 label *label116
   518 set *tmp201 null
   519 label *label117
-    * set *tmp199 *tmp201
   520 jump *label115 always
   521 label *label114
-    * set *tmp199 null
   522 label *label115
   523 label *label113
   524 set :updatePosition.3:dx 1.5
 
   536 label *label121
   537 set *tmp205 null
   538 label *label122
-    * set *tmp203 *tmp205
   539 jump *label120 always
   540 label *label119
-    * set *tmp203 null
   541 label *label120
   542 label *label118
   543 label *label102
 
   559 label *label127
   560 set *tmp209 null
   561 label *label128
-    * set *tmp207 *tmp209
   562 jump *label126 always
   563 label *label125
-    * set *tmp207 null
   564 label *label126
   565 label *label124
   566 set :updatePosition.5:dx -0.5
 
   578 label *label132
   579 set *tmp213 null
   580 label *label133
-    * set *tmp211 *tmp213
   581 jump *label131 always
   582 label *label130
-    * set *tmp211 null
   583 label *label131
   584 label *label129
   585 set :updatePosition.6:dx 0.5
 
   597 label *label137
   598 set *tmp217 null
   599 label *label138
-    * set *tmp215 *tmp217
   600 jump *label136 always
   601 label *label135
-    * set *tmp215 null
   602 label *label136
   603 label *label134
   604 set :updatePosition.7:dx 1.5
 
   616 label *label142
   617 set *tmp221 null
   618 label *label143
-    * set *tmp219 *tmp221
   619 jump *label141 always
   620 label *label140
-    * set *tmp219 null
   621 label *label141
   622 label *label139
   623 label *label123
 
   639 label *label148
   640 set *tmp225 null
   641 label *label149
-    * set *tmp223 *tmp225
   642 jump *label147 always
   643 label *label146
-    * set *tmp223 null
   644 label *label147
   645 label *label145
   646 set :updatePosition.9:dx -0.5
 
   658 label *label153
   659 set *tmp229 null
   660 label *label154
-    * set *tmp227 *tmp229
   661 jump *label152 always
   662 label *label151
-    * set *tmp227 null
   663 label *label152
   664 label *label150
   665 set :updatePosition.10:dx 0.5
 
   677 label *label158
   678 set *tmp233 null
   679 label *label159
-    * set *tmp231 *tmp233
   680 jump *label157 always
   681 label *label156
-    * set *tmp231 null
   682 label *label157
   683 label *label155
   684 set :updatePosition.11:dx 1.5
 
   696 label *label163
   697 set *tmp237 null
   698 label *label164
-    * set *tmp235 *tmp237
   699 jump *label162 always
   700 label *label161
-    * set *tmp235 null
   701 label *label162
   702 label *label160
   703 label *label144
 
   719 label *label169
   720 set *tmp241 null
   721 label *label170
-    * set *tmp239 *tmp241
   722 jump *label168 always
   723 label *label167
-    * set *tmp239 null
   724 label *label168
   725 label *label166
   726 set :updatePosition.13:dx -0.5
 
   738 label *label174
   739 set *tmp245 null
   740 label *label175
-    * set *tmp243 *tmp245
   741 jump *label173 always
   742 label *label172
-    * set *tmp243 null
   743 label *label173
   744 label *label171
   745 set :updatePosition.14:dx 0.5
 
   757 label *label179
   758 set *tmp249 null
   759 label *label180
-    * set *tmp247 *tmp249
   760 jump *label178 always
   761 label *label177
-    * set *tmp247 null
   762 label *label178
   763 label *label176
   764 set :updatePosition.15:dx 1.5
 
   776 label *label184
   777 set *tmp253 null
   778 label *label185
-    * set *tmp251 *tmp253
   779 jump *label183 always
   780 label *label182
-    * set *tmp251 null
   781 label *label183
   782 label *label181
   783 label *label165
-    * set *tmp185 null
   784 jump *label101 always
   785 label *label100
   786 op equal *tmp254 :findBestPosition:size 3
 
   812 label *label192
   813 set *tmp266 null
   814 label *label193
-    * set *tmp264 *tmp266
   815 jump *label191 always
   816 label *label190
-    * set *tmp264 null
   817 label *label191
   818 label *label189
   819 set :updatePosition.17:dx 0
 
   831 label *label197
   832 set *tmp270 null
   833 label *label198
-    * set *tmp268 *tmp270
   834 jump *label196 always
   835 label *label195
-    * set *tmp268 null
   836 label *label196
   837 label *label194
   838 set :updatePosition.18:dx 1
 
   850 label *label202
   851 set *tmp274 null
   852 label *label203
-    * set *tmp272 *tmp274
   853 jump *label201 always
   854 label *label200
-    * set *tmp272 null
   855 label *label201
   856 label *label199
   857 label *label188
 
   873 label *label208
   874 set *tmp279 null
   875 label *label209
-    * set *tmp277 *tmp279
   876 jump *label207 always
   877 label *label206
-    * set *tmp277 null
   878 label *label207
   879 label *label205
   880 set :updatePosition.20:dx 0
 
   892 label *label213
   893 set *tmp283 null
   894 label *label214
-    * set *tmp281 *tmp283
   895 jump *label212 always
   896 label *label211
-    * set *tmp281 null
   897 label *label212
   898 label *label210
   899 set :updatePosition.21:dx 1
 
   911 label *label218
   912 set *tmp287 null
   913 label *label219
-    * set *tmp285 *tmp287
   914 jump *label217 always
   915 label *label216
-    * set *tmp285 null
   916 label *label217
   917 label *label215
   918 label *label204
 
   934 label *label224
   935 set *tmp292 null
   936 label *label225
-    * set *tmp290 *tmp292
   937 jump *label223 always
   938 label *label222
-    * set *tmp290 null
   939 label *label223
   940 label *label221
   941 set :updatePosition.23:dx 0
 
   953 label *label229
   954 set *tmp296 null
   955 label *label230
-    * set *tmp294 *tmp296
   956 jump *label228 always
   957 label *label227
-    * set *tmp294 null
   958 label *label228
   959 label *label226
   960 set :updatePosition.24:dx 1
 
   972 label *label234
   973 set *tmp300 null
   974 label *label235
-    * set *tmp298 *tmp300
   975 jump *label233 always
   976 label *label232
-    * set *tmp298 null
   977 label *label233
   978 label *label231
   979 label *label220
 
  1034 label *label242
  1035 set *tmp320 null
  1036 label *label243
-    * set *tmp318 *tmp320
  1037 jump *label241 always
  1038 label *label240
-    * set *tmp318 null
  1039 label *label241
  1040 label *label239
  1041 set :updatePosition.26:dx -0.5
 
  1053 label *label247
  1054 set *tmp324 null
  1055 label *label248
-    * set *tmp322 *tmp324
  1056 jump *label246 always
  1057 label *label245
-    * set *tmp322 null
  1058 label *label246
  1059 label *label244
  1060 set :updatePosition.27:dx 0.5
 
  1072 label *label252
  1073 set *tmp328 null
  1074 label *label253
-    * set *tmp326 *tmp328
  1075 jump *label251 always
  1076 label *label250
-    * set *tmp326 null
  1077 label *label251
  1078 label *label249
  1079 set :updatePosition.28:dx 1.5
 
  1091 label *label257
  1092 set *tmp332 null
  1093 label *label258
-    * set *tmp330 *tmp332
  1094 jump *label256 always
  1095 label *label255
-    * set *tmp330 null
  1096 label *label256
  1097 label *label254
  1098 label *label238
 
  1114 label *label263
  1115 set *tmp336 null
  1116 label *label264
-    * set *tmp334 *tmp336
  1117 jump *label262 always
  1118 label *label261
-    * set *tmp334 null
  1119 label *label262
  1120 label *label260
  1121 set :updatePosition.30:dx -0.5
 
  1133 label *label268
  1134 set *tmp340 null
  1135 label *label269
-    * set *tmp338 *tmp340
  1136 jump *label267 always
  1137 label *label266
-    * set *tmp338 null
  1138 label *label267
  1139 label *label265
  1140 set :updatePosition.31:dx 0.5
 
  1152 label *label273
  1153 set *tmp344 null
  1154 label *label274
-    * set *tmp342 *tmp344
  1155 jump *label272 always
  1156 label *label271
-    * set *tmp342 null
  1157 label *label272
  1158 label *label270
  1159 set :updatePosition.32:dx 1.5
 
  1171 label *label278
  1172 set *tmp348 null
  1173 label *label279
-    * set *tmp346 *tmp348
  1174 jump *label277 always
  1175 label *label276
-    * set *tmp346 null
  1176 label *label277
  1177 label *label275
  1178 label *label259
 
  1194 label *label284
  1195 set *tmp352 null
  1196 label *label285
-    * set *tmp350 *tmp352
  1197 jump *label283 always
  1198 label *label282
-    * set *tmp350 null
  1199 label *label283
  1200 label *label281
  1201 set :updatePosition.34:dx -0.5
 
  1213 label *label289
  1214 set *tmp356 null
  1215 label *label290
-    * set *tmp354 *tmp356
  1216 jump *label288 always
  1217 label *label287
-    * set *tmp354 null
  1218 label *label288
  1219 label *label286
  1220 set :updatePosition.35:dx 0.5
 
  1232 label *label294
  1233 set *tmp360 null
  1234 label *label295
-    * set *tmp358 *tmp360
  1235 jump *label293 always
  1236 label *label292
-    * set *tmp358 null
  1237 label *label293
  1238 label *label291
  1239 set :updatePosition.36:dx 1.5
 
  1251 label *label299
  1252 set *tmp364 null
  1253 label *label300
-    * set *tmp362 *tmp364
  1254 jump *label298 always
  1255 label *label297
-    * set *tmp362 null
  1256 label *label298
  1257 label *label296
  1258 label *label280
 
  1274 label *label305
  1275 set *tmp368 null
  1276 label *label306
-    * set *tmp366 *tmp368
  1277 jump *label304 always
  1278 label *label303
-    * set *tmp366 null
  1279 label *label304
  1280 label *label302
  1281 set :updatePosition.38:dx -0.5
 
  1293 label *label310
  1294 set *tmp372 null
  1295 label *label311
-    * set *tmp370 *tmp372
  1296 jump *label309 always
  1297 label *label308
-    * set *tmp370 null
  1298 label *label309
  1299 label *label307
  1300 set :updatePosition.39:dx 0.5
 
  1312 label *label315
  1313 set *tmp376 null
  1314 label *label316
-    * set *tmp374 *tmp376
  1315 jump *label314 always
  1316 label *label313
-    * set *tmp374 null
  1317 label *label314
  1318 label *label312
  1319 set :updatePosition.40:dx 1.5
 
  1331 label *label320
  1332 set *tmp380 null
  1333 label *label321
-    * set *tmp378 *tmp380
  1334 jump *label319 always
  1335 label *label318
-    * set *tmp378 null
  1336 label *label319
  1337 label *label317
  1338 label *label301
  1339 set *tmp255 null
  1340 label *label187
-    * set *tmp185 *tmp255
  1341 label *label101
  1342 op mul *tmp381 :findBestPosition:best 255
  1343 set *tmp173 *tmp381
 
  1355 op lessThan *tmp386 :findDrillLocationLocal:limit 1000
  1356 jump *label324 equal *tmp386 false
  1357 set .mapSpots :findDrillLocationLocal:score
-    * set *tmp387 :findDrillLocationLocal:score
  1358 jump *label325 always
  1359 label *label324
-    * set *tmp387 null
  1360 label *label325
  1361 op greaterThanEq *tmp388 :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
  1362 jump *label326 equal *tmp388 false
 
  1377 op add .count .count 1
  1378 set *tmp397 .count
  1379 write :saveLocation:y bank1 *tmp397
-    * set *tmp399 .locations
  1380 op add .locations .locations 1
  1381 jump *label330 equal false false
  1382 printflush message1
 
  1386 sensor *tmp402 switch1 @enabled
  1387 jump *label332 notEqual *tmp402 false
  1388 label *label334
-    * set *tmp400 null
  1389 jump *label331 always
  1390 label *label330
-    * set *tmp400 null
  1391 label *label331
  1392 label *label329
  1393 label *label328
 
  1399 label *label326
  1400 set *tmp389 null
  1401 label *label327
-    * set *tmp383 *tmp389
  1402 jump *label323 always
  1403 label *label322
-    * set *tmp383 null
  1404 label *label323
  1405 op greaterThan *tmp403 :findDrillLocationLocal:score :findDrillLocationLocal:best
  1406 jump *label335 equal *tmp403 false
 
  1409 op add *tmp406 :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1410 set :findDrillLocationLocal:bestY *tmp406
  1411 set :findDrillLocationLocal:best :findDrillLocationLocal:score
-    * set *tmp404 :findDrillLocationLocal:best
  1412 jump *label336 always
  1413 label *label335
-    * set *tmp404 null
  1414 label *label336
  1415 op lessThanEq *tmp407 :findDrillLocationLocal:score :findDrillLocationLocal:last
  1416 jump *label337 equal *tmp407 false
  1417 jump *label93 always
-    * set *tmp408 null
  1418 jump *label338 always
  1419 label *label337
-    * set *tmp408 null
  1420 label *label338
  1421 set :findDrillLocationLocal:last :findDrillLocationLocal:score
  1422 op mul *tmp409 :findDrillLocationLocal:diffX 1.1
 
  1441 op lessThan *tmp422 *tmp421 7
  1442 jump *label341 equal *tmp422 false
  1443 jump *label93 always
-    * set *tmp423 null
  1444 jump *label342 always
  1445 label *label341
-    * set *tmp423 null
  1446 label *label342
  1447 label *label92
  1448 jump *label91 always
 
  1466 op add .count .count 1
  1467 set *tmp433 .count
  1468 write :saveLocation.1:y bank1 *tmp433
-    * set *tmp435 .locations
  1469 op add .locations .locations 1
  1470 jump *label347 equal false false
  1471 printflush message1
 
  1475 sensor *tmp438 switch1 @enabled
  1476 jump *label349 notEqual *tmp438 false
  1477 label *label351
-    * set *tmp436 null
  1478 jump *label348 always
  1479 label *label347
-    * set *tmp436 null
  1480 label *label348
  1481 label *label346
  1482 label *label345
-    * set *tmp425 null
  1483 jump *label344 always
  1484 label *label343
-    * set *tmp425 null
  1485 label *label344
  1486 label *label52
  1487 jump *label51 always
 
  1561 op add *tmp467 *tmp466 :findPossiblePlacement:x
  1562 set :findPossiblePlacement*retval *tmp467
  1563 jump *label371 always
-    * set *tmp464 null
  1564 jump *label379 always
  1565 label *label378
-    * set *tmp464 null
  1566 label *label379
  1567 op sub *tmp468 3 :findPossiblePlacement:width
  1568 op greaterThan *tmp469 :findPossiblePlacement:x *tmp468
  1569 jump *label380 equal *tmp469 false
  1570 jump *label377 always
-    * set *tmp470 null
  1571 jump *label381 always
  1572 label *label380
-    * set *tmp470 null
  1573 label *label381
  1574 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
  1575 label *label376
 
  1580 op greaterThan *tmp472 :findPossiblePlacement:y *tmp471
  1581 jump *label382 equal *tmp472 false
  1582 jump *label374 always
-    * set *tmp473 null
  1583 jump *label383 always
  1584 label *label382
-    * set *tmp473 null
  1585 label *label383
  1586 label *label373
  1587 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
 
  1611 jump *label388 equal *tmp477 false
  1612 set :tryPlaceGenerator*retval false
  1613 jump *label384 always
-    * set *tmp478 null
  1614 jump *label389 always
  1615 label *label388
-    * set *tmp478 null
  1616 label *label389
  1617 op add *tmp479 :tryPlaceGenerator:centerX 0.5
  1618 op add *tmp480 *tmp479 :tryPlaceGenerator:c
 
  1628 set .generatorY *tmp486
  1629 op shl *tmp487 :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:shift
  1630 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp487
-    * set *tmp476 :tryPlaceGenerator:terrainMask
  1631 jump *label387 always
  1632 label *label386
  1633 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1655 set .generatorY *tmp496
  1656 op shl *tmp497 :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:shift
  1657 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp497
-    * set *tmp476 :tryPlaceGenerator:terrainMask
  1658 label *label387
  1659 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
  1660 set :findPossiblePlacement:placementMask 1
 
  1671 jump *label392 equal *tmp499 false
  1672 set :tryPlaceGenerator*retval false
  1673 jump *label384 always
-    * set *tmp500 null
  1674 jump *label393 always
  1675 label *label392
-    * set *tmp500 null
  1676 label *label393
  1677 op add *tmp501 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
  1678 set .nodeX *tmp501
 
  1695 jump *label395 equal *tmp505 false
  1696 set :tryPlaceGenerator*retval false
  1697 jump *label384 always
-    * set *tmp506 null
  1698 jump *label396 always
  1699 label *label395
-    * set *tmp506 null
  1700 label *label396
  1701 op add *tmp507 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
  1702 set .panelX *tmp507
 
  1719 jump *label398 equal *tmp511 false
  1720 set :tryPlaceGenerator*retval false
  1721 jump *label384 always
-    * set *tmp512 null
  1722 jump *label399 always
  1723 label *label398
-    * set *tmp512 null
  1724 label *label399
  1725 op add *tmp513 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
  1726 set .batteryX *tmp513
 
  1832 sensor *tmp554 switch1 @enabled
  1833 jump *label414 notEqual *tmp554 false
  1834 label *label416
-    * set *tmp552 null
  1835 jump *label413 always
  1836 label *label412
-    * set *tmp552 null
  1837 label *label413
  1838 label *label411
  1839 end
-    * set *tmp551 null
  1840 jump *label410 always
  1841 label *label409
-    * set *tmp551 null
  1842 label *label410
  1843 label *label408
  1844 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
 
  1864 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp562
  1865 op shl *tmp563 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
  1866 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:cornersMask *tmp563
-    * set *tmp557 :layoutThoriumDrillAtLocation:cornersMask
  1867 jump *label419 always
  1868 label *label418
-    * set *tmp557 null
  1869 label *label419
  1870 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
  1871 set :findPossiblePlacement:placementMask :layoutThoriumDrillAtLocation:mask2x2
 
  1888 set .containerY *tmp570
  1889 op shl *tmp571 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
  1890 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp571
-    * set *tmp566 :layoutThoriumDrillAtLocation:terrainMask
  1891 jump *label422 always
  1892 label *label421
-    * set *tmp566 null
  1893 label *label422
  1894 set :createFixedMatrix.3:row0 0b1111
  1895 set :createFixedMatrix.3:row1 0b1111
 
  1925 jump *label426 equal *tmp584 false
  1926 set :layoutThoriumDrillAtLocation*retval true
  1927 jump *label400 always
-    * set *tmp585 null
  1928 jump *label427 always
  1929 label *label426
-    * set *tmp585 null
  1930 label *label427
  1931 set :layoutThoriumDrillAtLocation:sx 3
  1932 set :layoutThoriumDrillAtLocation:sy 3
 
  1969 jump *label437 equal *tmp595 false
  1970 set *tmp590 0
  1971 jump *label436 always
-    * set *tmp596 null
  1972 jump *label438 always
  1973 label *label437
-    * set *tmp596 null
  1974 label *label438
  1975 op mul *tmp597 7 :shiftMask:shiftY
  1976 op add *tmp598 :shiftMask:shiftX *tmp597
 
  1982 op and *tmp602 :shiftMask:mask :shiftMask:clearMask
  1983 op shl *tmp603 *tmp602 :shiftMask:shift
  1984 set :shiftMask:mask *tmp603
-    * set *tmp600 :shiftMask:mask
  1985 jump *label440 always
  1986 label *label439
  1987 op sub *tmp604 0 :shiftMask:shift
  1988 op shr :shiftMask:mask :shiftMask:mask *tmp604
-    * set *tmp600 :shiftMask:mask
  1989 label *label440
  1990 op notEqual *tmp605 :shiftMask:shiftX 0
  1991 jump *label441 equal *tmp605 false
 
  1998 op abs *tmp612 :shiftMask:shiftX
  1999 op sub *tmp613 7 *tmp612
  2000 op shl :shiftMask:keep :shiftMask:keep *tmp613
-    * set *tmp611 :shiftMask:keep
  2001 jump *label444 always
  2002 label *label443
-    * set *tmp611 null
  2003 label *label444
  2004 op shl *tmp614 :shiftMask:keep 7
  2005 op or :shiftMask:keep :shiftMask:keep *tmp614
 
  2008 op shl *tmp616 :shiftMask:keep 21
  2009 op or :shiftMask:keep :shiftMask:keep *tmp616
  2010 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
-    * set *tmp606 :shiftMask:mask
  2011 jump *label442 always
  2012 label *label441
-    * set *tmp606 null
  2013 label *label442
  2014 set *tmp590 :shiftMask:mask
  2015 jump *label436 always
 
  2032 jump *label446 equal *tmp620 false
  2033 set :layoutThoriumDrillAtLocation*retval true
  2034 jump *label400 always
-    * set *tmp621 null
  2035 jump *label447 always
  2036 label *label446
-    * set *tmp621 null
  2037 label *label447
  2038 label *label429
  2039 multijump *tmp586 0 0 (m:marker0)
 
  2083 jump *label452 equal *tmp622 false
  2084 set :layoutThoriumDrill*retval false
  2085 jump *label450 always
-    * set *tmp623 null
  2086 jump *label453 always
  2087 label *label452
-    * set *tmp623 null
  2088 label *label453
  2089 setaddr :layoutThoriumDrillAtLocation*retaddr *label454 (h:*label454)
  2090 call *label13 *invalid :layoutThoriumDrillAtLocation*retval (m:*label454) (h:*label454)
 
  2134 op sub :printMask:r :printMask:r 1
  2135 jump *label459 always
  2136 label *label461
-    * set *tmp624 null
  2137 jump *label458 always
  2138 label *label457
-    * set *tmp624 null
  2139 label *label458
  2140 label *label456
  2141 return :printMask*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-91 instructions):
 
   279 op equal *tmp138 :locateOreAway:lastY :locateOreAway:y
   280 jump *label68 equal *tmp138 false
   281 jump *label56 always
-    * set *tmp139 null
   282 jump *label69 always
   283 label *label68
-    * set *tmp139 null
   284 label *label69
   285 jump *label67 always
   286 label *label66
 
   339 label *label80
   340 set *tmp159 null
   341 label *label81
-    * set *tmp143 *tmp159
   342 jump *label73 always
   343 label *label72
-    * set *tmp143 null
   344 label *label73
   345 jump *label71 always
   346 label *label70
 
   364 label *label83
   365 op greaterThanEq *tmp165 :findDrillLocationLocal:limit 1000
   366 jump *label84 equal *tmp165 false
-    * set *tmp167 .mapSpots
   367 op add .mapSpots .mapSpots 1
   368 jump *label85 always
   369 label *label84
 
   469 set :findDrillLocationLocal:diffX :updatePosition:dx
   470 set :findDrillLocationLocal:diffY :updatePosition:dy
   471 set :findBestPosition:best :updatePosition:value
-    * set *tmp193 :findBestPosition:best
   472 jump *label107 always
   473 label *label106
-    * set *tmp193 null
   474 label *label107
   475 jump *label105 always
   476 label *label104
 
   486 set :findDrillLocationLocal:diffX :updatePosition.1:dx
   487 set :findDrillLocationLocal:diffY :updatePosition.1:dy
   488 set :findBestPosition:best :updatePosition.1:value
-    * set *tmp197 :findBestPosition:best
   489 jump *label112 always
   490 label *label111
-    * set *tmp197 null
   491 label *label112
   492 jump *label110 always
   493 label *label109
 
   503 set :findDrillLocationLocal:diffX :updatePosition.2:dx
   504 set :findDrillLocationLocal:diffY :updatePosition.2:dy
   505 set :findBestPosition:best :updatePosition.2:value
-    * set *tmp201 :findBestPosition:best
   506 jump *label117 always
   507 label *label116
-    * set *tmp201 null
   508 label *label117
   509 jump *label115 always
   510 label *label114
 
   520 set :findDrillLocationLocal:diffX :updatePosition.3:dx
   521 set :findDrillLocationLocal:diffY :updatePosition.3:dy
   522 set :findBestPosition:best :updatePosition.3:value
-    * set *tmp205 :findBestPosition:best
   523 jump *label122 always
   524 label *label121
-    * set *tmp205 null
   525 label *label122
   526 jump *label120 always
   527 label *label119
 
   541 set :findDrillLocationLocal:diffX :updatePosition.4:dx
   542 set :findDrillLocationLocal:diffY :updatePosition.4:dy
   543 set :findBestPosition:best :updatePosition.4:value
-    * set *tmp209 :findBestPosition:best
   544 jump *label128 always
   545 label *label127
-    * set *tmp209 null
   546 label *label128
   547 jump *label126 always
   548 label *label125
 
   558 set :findDrillLocationLocal:diffX :updatePosition.5:dx
   559 set :findDrillLocationLocal:diffY :updatePosition.5:dy
   560 set :findBestPosition:best :updatePosition.5:value
-    * set *tmp213 :findBestPosition:best
   561 jump *label133 always
   562 label *label132
-    * set *tmp213 null
   563 label *label133
   564 jump *label131 always
   565 label *label130
 
   575 set :findDrillLocationLocal:diffX :updatePosition.6:dx
   576 set :findDrillLocationLocal:diffY :updatePosition.6:dy
   577 set :findBestPosition:best :updatePosition.6:value
-    * set *tmp217 :findBestPosition:best
   578 jump *label138 always
   579 label *label137
-    * set *tmp217 null
   580 label *label138
   581 jump *label136 always
   582 label *label135
 
   592 set :findDrillLocationLocal:diffX :updatePosition.7:dx
   593 set :findDrillLocationLocal:diffY :updatePosition.7:dy
   594 set :findBestPosition:best :updatePosition.7:value
-    * set *tmp221 :findBestPosition:best
   595 jump *label143 always
   596 label *label142
-    * set *tmp221 null
   597 label *label143
   598 jump *label141 always
   599 label *label140
 
   613 set :findDrillLocationLocal:diffX :updatePosition.8:dx
   614 set :findDrillLocationLocal:diffY :updatePosition.8:dy
   615 set :findBestPosition:best :updatePosition.8:value
-    * set *tmp225 :findBestPosition:best
   616 jump *label149 always
   617 label *label148
-    * set *tmp225 null
   618 label *label149
   619 jump *label147 always
   620 label *label146
 
   630 set :findDrillLocationLocal:diffX :updatePosition.9:dx
   631 set :findDrillLocationLocal:diffY :updatePosition.9:dy
   632 set :findBestPosition:best :updatePosition.9:value
-    * set *tmp229 :findBestPosition:best
   633 jump *label154 always
   634 label *label153
-    * set *tmp229 null
   635 label *label154
   636 jump *label152 always
   637 label *label151
 
   647 set :findDrillLocationLocal:diffX :updatePosition.10:dx
   648 set :findDrillLocationLocal:diffY :updatePosition.10:dy
   649 set :findBestPosition:best :updatePosition.10:value
-    * set *tmp233 :findBestPosition:best
   650 jump *label159 always
   651 label *label158
-    * set *tmp233 null
   652 label *label159
   653 jump *label157 always
   654 label *label156
 
   664 set :findDrillLocationLocal:diffX :updatePosition.11:dx
   665 set :findDrillLocationLocal:diffY :updatePosition.11:dy
   666 set :findBestPosition:best :updatePosition.11:value
-    * set *tmp237 :findBestPosition:best
   667 jump *label164 always
   668 label *label163
-    * set *tmp237 null
   669 label *label164
   670 jump *label162 always
   671 label *label161
 
   685 set :findDrillLocationLocal:diffX :updatePosition.12:dx
   686 set :findDrillLocationLocal:diffY :updatePosition.12:dy
   687 set :findBestPosition:best :updatePosition.12:value
-    * set *tmp241 :findBestPosition:best
   688 jump *label170 always
   689 label *label169
-    * set *tmp241 null
   690 label *label170
   691 jump *label168 always
   692 label *label167
 
   702 set :findDrillLocationLocal:diffX :updatePosition.13:dx
   703 set :findDrillLocationLocal:diffY :updatePosition.13:dy
   704 set :findBestPosition:best :updatePosition.13:value
-    * set *tmp245 :findBestPosition:best
   705 jump *label175 always
   706 label *label174
-    * set *tmp245 null
   707 label *label175
   708 jump *label173 always
   709 label *label172
 
   719 set :findDrillLocationLocal:diffX :updatePosition.14:dx
   720 set :findDrillLocationLocal:diffY :updatePosition.14:dy
   721 set :findBestPosition:best :updatePosition.14:value
-    * set *tmp249 :findBestPosition:best
   722 jump *label180 always
   723 label *label179
-    * set *tmp249 null
   724 label *label180
   725 jump *label178 always
   726 label *label177
 
   736 set :findDrillLocationLocal:diffX :updatePosition.15:dx
   737 set :findDrillLocationLocal:diffY :updatePosition.15:dy
   738 set :findBestPosition:best :updatePosition.15:value
-    * set *tmp253 :findBestPosition:best
   739 jump *label185 always
   740 label *label184
-    * set *tmp253 null
   741 label *label185
   742 jump *label183 always
   743 label *label182
 
   770 set :findDrillLocationLocal:diffX :updatePosition.16:dx
   771 set :findDrillLocationLocal:diffY :updatePosition.16:dy
   772 set :findBestPosition:best :updatePosition.16:value
-    * set *tmp266 :findBestPosition:best
   773 jump *label193 always
   774 label *label192
-    * set *tmp266 null
   775 label *label193
   776 jump *label191 always
   777 label *label190
 
   787 set :findDrillLocationLocal:diffX :updatePosition.17:dx
   788 set :findDrillLocationLocal:diffY :updatePosition.17:dy
   789 set :findBestPosition:best :updatePosition.17:value
-    * set *tmp270 :findBestPosition:best
   790 jump *label198 always
   791 label *label197
-    * set *tmp270 null
   792 label *label198
   793 jump *label196 always
   794 label *label195
 
   804 set :findDrillLocationLocal:diffX :updatePosition.18:dx
   805 set :findDrillLocationLocal:diffY :updatePosition.18:dy
   806 set :findBestPosition:best :updatePosition.18:value
-    * set *tmp274 :findBestPosition:best
   807 jump *label203 always
   808 label *label202
-    * set *tmp274 null
   809 label *label203
   810 jump *label201 always
   811 label *label200
 
   825 set :findDrillLocationLocal:diffX :updatePosition.19:dx
   826 set :findDrillLocationLocal:diffY :updatePosition.19:dy
   827 set :findBestPosition:best :updatePosition.19:value
-    * set *tmp279 :findBestPosition:best
   828 jump *label209 always
   829 label *label208
-    * set *tmp279 null
   830 label *label209
   831 jump *label207 always
   832 label *label206
 
   842 set :findDrillLocationLocal:diffX :updatePosition.20:dx
   843 set :findDrillLocationLocal:diffY :updatePosition.20:dy
   844 set :findBestPosition:best :updatePosition.20:value
-    * set *tmp283 :findBestPosition:best
   845 jump *label214 always
   846 label *label213
-    * set *tmp283 null
   847 label *label214
   848 jump *label212 always
   849 label *label211
 
   859 set :findDrillLocationLocal:diffX :updatePosition.21:dx
   860 set :findDrillLocationLocal:diffY :updatePosition.21:dy
   861 set :findBestPosition:best :updatePosition.21:value
-    * set *tmp287 :findBestPosition:best
   862 jump *label219 always
   863 label *label218
-    * set *tmp287 null
   864 label *label219
   865 jump *label217 always
   866 label *label216
 
   880 set :findDrillLocationLocal:diffX :updatePosition.22:dx
   881 set :findDrillLocationLocal:diffY :updatePosition.22:dy
   882 set :findBestPosition:best :updatePosition.22:value
-    * set *tmp292 :findBestPosition:best
   883 jump *label225 always
   884 label *label224
-    * set *tmp292 null
   885 label *label225
   886 jump *label223 always
   887 label *label222
 
   897 set :findDrillLocationLocal:diffX :updatePosition.23:dx
   898 set :findDrillLocationLocal:diffY :updatePosition.23:dy
   899 set :findBestPosition:best :updatePosition.23:value
-    * set *tmp296 :findBestPosition:best
   900 jump *label230 always
   901 label *label229
-    * set *tmp296 null
   902 label *label230
   903 jump *label228 always
   904 label *label227
 
   914 set :findDrillLocationLocal:diffX :updatePosition.24:dx
   915 set :findDrillLocationLocal:diffY :updatePosition.24:dy
   916 set :findBestPosition:best :updatePosition.24:value
-    * set *tmp300 :findBestPosition:best
   917 jump *label235 always
   918 label *label234
-    * set *tmp300 null
   919 label *label235
   920 jump *label233 always
   921 label *label232
   922 label *label233
   923 label *label231
   924 label *label220
-    * set *tmp255 null
   925 jump *label187 always
   926 label *label186
   927 op sub *tmp301 :findBestPosition:y 3
 
   973 set :findDrillLocationLocal:diffX :updatePosition.25:dx
   974 set :findDrillLocationLocal:diffY :updatePosition.25:dy
   975 set :findBestPosition:best :updatePosition.25:value
-    * set *tmp320 :findBestPosition:best
   976 jump *label243 always
   977 label *label242
-    * set *tmp320 null
   978 label *label243
   979 jump *label241 always
   980 label *label240
 
   990 set :findDrillLocationLocal:diffX :updatePosition.26:dx
   991 set :findDrillLocationLocal:diffY :updatePosition.26:dy
   992 set :findBestPosition:best :updatePosition.26:value
-    * set *tmp324 :findBestPosition:best
   993 jump *label248 always
   994 label *label247
-    * set *tmp324 null
   995 label *label248
   996 jump *label246 always
   997 label *label245
 
  1007 set :findDrillLocationLocal:diffX :updatePosition.27:dx
  1008 set :findDrillLocationLocal:diffY :updatePosition.27:dy
  1009 set :findBestPosition:best :updatePosition.27:value
-    * set *tmp328 :findBestPosition:best
  1010 jump *label253 always
  1011 label *label252
-    * set *tmp328 null
  1012 label *label253
  1013 jump *label251 always
  1014 label *label250
 
  1024 set :findDrillLocationLocal:diffX :updatePosition.28:dx
  1025 set :findDrillLocationLocal:diffY :updatePosition.28:dy
  1026 set :findBestPosition:best :updatePosition.28:value
-    * set *tmp332 :findBestPosition:best
  1027 jump *label258 always
  1028 label *label257
-    * set *tmp332 null
  1029 label *label258
  1030 jump *label256 always
  1031 label *label255
 
  1045 set :findDrillLocationLocal:diffX :updatePosition.29:dx
  1046 set :findDrillLocationLocal:diffY :updatePosition.29:dy
  1047 set :findBestPosition:best :updatePosition.29:value
-    * set *tmp336 :findBestPosition:best
  1048 jump *label264 always
  1049 label *label263
-    * set *tmp336 null
  1050 label *label264
  1051 jump *label262 always
  1052 label *label261
 
  1062 set :findDrillLocationLocal:diffX :updatePosition.30:dx
  1063 set :findDrillLocationLocal:diffY :updatePosition.30:dy
  1064 set :findBestPosition:best :updatePosition.30:value
-    * set *tmp340 :findBestPosition:best
  1065 jump *label269 always
  1066 label *label268
-    * set *tmp340 null
  1067 label *label269
  1068 jump *label267 always
  1069 label *label266
 
  1079 set :findDrillLocationLocal:diffX :updatePosition.31:dx
  1080 set :findDrillLocationLocal:diffY :updatePosition.31:dy
  1081 set :findBestPosition:best :updatePosition.31:value
-    * set *tmp344 :findBestPosition:best
  1082 jump *label274 always
  1083 label *label273
-    * set *tmp344 null
  1084 label *label274
  1085 jump *label272 always
  1086 label *label271
 
  1096 set :findDrillLocationLocal:diffX :updatePosition.32:dx
  1097 set :findDrillLocationLocal:diffY :updatePosition.32:dy
  1098 set :findBestPosition:best :updatePosition.32:value
-    * set *tmp348 :findBestPosition:best
  1099 jump *label279 always
  1100 label *label278
-    * set *tmp348 null
  1101 label *label279
  1102 jump *label277 always
  1103 label *label276
 
  1117 set :findDrillLocationLocal:diffX :updatePosition.33:dx
  1118 set :findDrillLocationLocal:diffY :updatePosition.33:dy
  1119 set :findBestPosition:best :updatePosition.33:value
-    * set *tmp352 :findBestPosition:best
  1120 jump *label285 always
  1121 label *label284
-    * set *tmp352 null
  1122 label *label285
  1123 jump *label283 always
  1124 label *label282
 
  1134 set :findDrillLocationLocal:diffX :updatePosition.34:dx
  1135 set :findDrillLocationLocal:diffY :updatePosition.34:dy
  1136 set :findBestPosition:best :updatePosition.34:value
-    * set *tmp356 :findBestPosition:best
  1137 jump *label290 always
  1138 label *label289
-    * set *tmp356 null
  1139 label *label290
  1140 jump *label288 always
  1141 label *label287
 
  1151 set :findDrillLocationLocal:diffX :updatePosition.35:dx
  1152 set :findDrillLocationLocal:diffY :updatePosition.35:dy
  1153 set :findBestPosition:best :updatePosition.35:value
-    * set *tmp360 :findBestPosition:best
  1154 jump *label295 always
  1155 label *label294
-    * set *tmp360 null
  1156 label *label295
  1157 jump *label293 always
  1158 label *label292
 
  1168 set :findDrillLocationLocal:diffX :updatePosition.36:dx
  1169 set :findDrillLocationLocal:diffY :updatePosition.36:dy
  1170 set :findBestPosition:best :updatePosition.36:value
-    * set *tmp364 :findBestPosition:best
  1171 jump *label300 always
  1172 label *label299
-    * set *tmp364 null
  1173 label *label300
  1174 jump *label298 always
  1175 label *label297
 
  1189 set :findDrillLocationLocal:diffX :updatePosition.37:dx
  1190 set :findDrillLocationLocal:diffY :updatePosition.37:dy
  1191 set :findBestPosition:best :updatePosition.37:value
-    * set *tmp368 :findBestPosition:best
  1192 jump *label306 always
  1193 label *label305
-    * set *tmp368 null
  1194 label *label306
  1195 jump *label304 always
  1196 label *label303
 
  1206 set :findDrillLocationLocal:diffX :updatePosition.38:dx
  1207 set :findDrillLocationLocal:diffY :updatePosition.38:dy
  1208 set :findBestPosition:best :updatePosition.38:value
-    * set *tmp372 :findBestPosition:best
  1209 jump *label311 always
  1210 label *label310
-    * set *tmp372 null
  1211 label *label311
  1212 jump *label309 always
  1213 label *label308
 
  1223 set :findDrillLocationLocal:diffX :updatePosition.39:dx
  1224 set :findDrillLocationLocal:diffY :updatePosition.39:dy
  1225 set :findBestPosition:best :updatePosition.39:value
-    * set *tmp376 :findBestPosition:best
  1226 jump *label316 always
  1227 label *label315
-    * set *tmp376 null
  1228 label *label316
  1229 jump *label314 always
  1230 label *label313
 
  1240 set :findDrillLocationLocal:diffX :updatePosition.40:dx
  1241 set :findDrillLocationLocal:diffY :updatePosition.40:dy
  1242 set :findBestPosition:best :updatePosition.40:value
-    * set *tmp380 :findBestPosition:best
  1243 jump *label321 always
  1244 label *label320
-    * set *tmp380 null
  1245 label *label321
  1246 jump *label319 always
  1247 label *label318
  1248 label *label319
  1249 label *label317
  1250 label *label301
-    * set *tmp255 null
  1251 label *label187
  1252 label *label101
  1253 op mul *tmp381 :findBestPosition:best 255
 
  1305 ucontrol unbind
  1306 set :findDrillLocationLocal*retval true
  1307 jump *label45 always
-    * set *tmp389 null
  1308 jump *label327 always
  1309 label *label326
-    * set *tmp389 null
  1310 label *label327
  1311 jump *label323 always
  1312 label *label322

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
   334 printflush message1
   335 set *tmp98 true
   336 jump *label54 always
-    * set *tmp159 null
   337 jump *label81 always
   338 label *label80
-    * set *tmp159 null
   339 label *label81
   340 jump *label73 always
   341 label *label72

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-111 instructions):
 
    11 jump *label16 always
    12 end
    13 label *label6
-    * op sub *tmp0 :computeRowValues:x 2
-    * set :spotValue:x *tmp0
+   14 op sub :spotValue:x :computeRowValues:x 2
    15 set :spotValue:y :computeRowValues:y
    16 set :spotValue:ore :computeRowValues:ore
    17 ucontrol getBlock :spotValue:x :spotValue:y type building floor
 
    21 set *tmp1 :spotValue:result
    22 label *label18
    23 set :computeRowValues:x1 *tmp1
-    * op sub *tmp2 :computeRowValues:x 1
-    * set :spotValue.1:x *tmp2
+   24 op sub :spotValue.1:x :computeRowValues:x 1
    25 set :spotValue.1:y :computeRowValues:y
    26 set :spotValue.1:ore :computeRowValues:ore
    27 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
 
    31 set *tmp3 :spotValue.1:result
    32 label *label19
    33 set :computeRowValues:x2 *tmp3
-    * op add *tmp4 :computeRowValues:x 0
-    * set :spotValue.2:x *tmp4
+   34 op add :spotValue.2:x :computeRowValues:x 0
    35 set :spotValue.2:y :computeRowValues:y
    36 set :spotValue.2:ore :computeRowValues:ore
    37 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
 
    41 set *tmp5 :spotValue.2:result
    42 label *label20
    43 set :computeRowValues:x3 *tmp5
-    * op add *tmp6 :computeRowValues:x 1
-    * set :spotValue.3:x *tmp6
+   44 op add :spotValue.3:x :computeRowValues:x 1
    45 set :spotValue.3:y :computeRowValues:y
    46 set :spotValue.3:ore :computeRowValues:ore
    47 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
 
    51 set *tmp7 :spotValue.3:result
    52 label *label21
    53 set :computeRowValues:x4 *tmp7
-    * op add *tmp8 :computeRowValues:x 2
-    * set :spotValue.4:x *tmp8
+   54 op add :spotValue.4:x :computeRowValues:x 2
    55 set :spotValue.4:y :computeRowValues:y
    56 set :spotValue.4:ore :computeRowValues:ore
    57 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
 
    67 op add *tmp13 :computeRowValues:x2 :computeRowValues:x3
    68 op add *tmp14 :computeRowValues:x3 :computeRowValues:x4
    69 op add *tmp15 :computeRowValues:x4 :computeRowValues:x5
-    * packcolor *tmp16 *tmp12 *tmp13 *tmp14 *tmp15
-    * set :computeRowValues*retval *tmp16
+   70 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
    71 jump *label17 always
    72 set *tmp11 null
    73 jump *label24 always
 
    80 op add *tmp22 *tmp21 :computeRowValues:x4
    81 op add *tmp23 :computeRowValues:x3 :computeRowValues:x4
    82 op add *tmp24 *tmp23 :computeRowValues:x5
-    * packcolor *tmp25 *tmp20 *tmp22 *tmp24 0
-    * set :computeRowValues*retval *tmp25
+   83 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
    84 jump *label17 always
    85 set *tmp18 null
    86 jump *label26 always
    87 label *label25
-    * op sub *tmp26 :computeRowValues:x 3
-    * set :spotValue.5:x *tmp26
+   88 op sub :spotValue.5:x :computeRowValues:x 3
    89 set :spotValue.5:y :computeRowValues:y
    90 set :spotValue.5:ore :computeRowValues:ore
    91 ucontrol getBlock :spotValue.5:x :spotValue.5:y type building floor
 
    95 set *tmp27 :spotValue.5:result
    96 label *label27
    97 set :computeRowValues:x0 *tmp27
-    * op add *tmp28 :computeRowValues:x 3
-    * set :spotValue.6:x *tmp28
+   98 op add :spotValue.6:x :computeRowValues:x 3
    99 set :spotValue.6:y :computeRowValues:y
   100 set :spotValue.6:ore :computeRowValues:ore
   101 ucontrol getBlock :spotValue.6:x :spotValue.6:y type building floor
 
   121 op add *tmp43 *tmp42 :computeRowValues:x5
   122 op add *tmp44 *tmp43 :computeRowValues:x6
   123 op min *tmp45 0.09803921568627451 *tmp44
-    * packcolor *tmp46 *tmp33 *tmp37 *tmp41 *tmp45
-    * set :computeRowValues*retval *tmp46
+  124 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
   125 jump *label17 always
   126 set *tmp18 null
   127 label *label26
 
   133 end
   134 label *label9
   135 ubind :findDrillLocationLocal:unit
-    * set *tmp82 .locations
-    * set .locationsStart *tmp82
+  136 set .locationsStart .locations
   137 set .coreX :findDrillLocationLocal:x
   138 set .coreY :findDrillLocationLocal:y
   139 set :findDrillLocationLocal:capacity 0
 
   168 label *label47
   169 label *label46
   170 op div *tmp91 :findDrillLocationLocal:distanceLimit 3.8197185279121366
-    * op pow *tmp92 *tmp91 2
-    * set .mapTotal *tmp92
+  171 op pow .mapTotal *tmp91 2
   172 set :findDrillLocationLocal:oreX 0
   173 set :findDrillLocationLocal:oreY 0
   174 label *label51
 
   177 set :findDrillLocationLocal:bestX :findDrillLocationLocal:x
   178 set :findDrillLocationLocal:bestY :findDrillLocationLocal:y
   179 op sub *tmp93 :findDrillLocationLocal:limit :findDrillLocationLocal:capacity
-    * op mul *tmp94 *tmp93 .attenuationRate
-    * set :findDrillLocationLocal:maxDistance *tmp94
-    * op min *tmp95 :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
-    * set :findDrillLocationLocal:distanceLimit *tmp95
+  180 op mul :findDrillLocationLocal:maxDistance *tmp93 .attenuationRate
+  181 op min :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
   182 op div *tmp96 :findDrillLocationLocal:distanceLimit 3.8197185279121366
-    * op pow *tmp97 *tmp96 2
-    * set .mapTotal *tmp97
+  183 op pow .mapTotal *tmp96 2
   184 set :locateOreAway:ore :findDrillLocationLocal:item
   185 set :locateOreAway:x :findDrillLocationLocal:oreX
   186 set :locateOreAway:y :findDrillLocationLocal:oreY
   187 set :locateOreAway:distanceLimit :findDrillLocationLocal:distanceLimit
-    * op mul *tmp99 3.8197185279121366 .angle
-    * set :locateOreAway:distance *tmp99
+  188 op mul :locateOreAway:distance 3.8197185279121366 .angle
   189 set :locateOreAway:lastX -1
   190 set :locateOreAway:lastY -1
-    * op max *tmp100 .angle @pi
-    * set .angle *tmp100
-    * op mul *tmp101 .angle .angle
-    * set .mapProgress *tmp101
+  191 op max .angle .angle @pi
+  192 op mul .mapProgress .angle .angle
   193 label *label55
   194 op lessThan *tmp102 :locateOreAway:distance :locateOreAway:distanceLimit
   195 jump *label57 equal *tmp102 false
-    * op div *tmp103 .angle @degToRad
-    * set :locateOreAway:a *tmp103
+  196 op div :locateOreAway:a .angle @degToRad
   197 op sin *tmp104 :locateOreAway:a
   198 op mul *tmp105 *tmp104 :locateOreAway:distance
   199 op add *tmp106 .coreX *tmp105
 
   202 set :limit:low 5
   203 set :limit:high *tmp107
   204 op max *tmp109 :limit:value :limit:low
-    * op min *tmp110 *tmp109 :limit:high
-    * set *tmp108 *tmp110
+  205 op min *tmp108 *tmp109 :limit:high
   206 label *label58
   207 set :locateOreAway:lx *tmp108
   208 op cos *tmp111 :locateOreAway:a
 
   213 set :limit.1:low 5
   214 set :limit.1:high *tmp114
   215 op max *tmp116 :limit.1:value :limit.1:low
-    * op min *tmp117 *tmp116 :limit.1:high
-    * set *tmp115 *tmp117
+  216 op min *tmp115 *tmp116 :limit.1:high
   217 label *label59
   218 set :locateOreAway:ly *tmp115
   219 set :moveTo.4:x :locateOreAway:lx
 
   231 label *label60
   232 op div *tmp121 3.8197185279121366 :locateOreAway:distance
   233 op add .angle .angle *tmp121
-    * op mul *tmp122 .angle .angle
-    * set .mapProgress *tmp122
-    * op mul *tmp123 3.8197185279121366 .angle
-    * set :locateOreAway:distance *tmp123
-    * ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp124 *tmp125
+  234 op mul .mapProgress .angle .angle
+  235 op mul :locateOreAway:distance 3.8197185279121366 .angle
+  236 ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp124 0
   237 op equal *tmp126 *tmp124 false
   238 jump *label64 equal *tmp126 false
   239 set *tmp98 false
 
   245 op abs *tmp129 *tmp128
   246 op sub *tmp130 :locateOreAway:y .coreY
   247 op abs *tmp131 *tmp130
-    * op max *tmp132 *tmp129 *tmp131
-    * set :locateOreAway:coreDist *tmp132
+  248 op max :locateOreAway:coreDist *tmp129 *tmp131
   249 op sub *tmp133 :locateOreAway:x :locateOreAway:lx
   250 op sub *tmp134 :locateOreAway:y :locateOreAway:ly
-    * op len *tmp135 *tmp133 *tmp134
-    * set :locateOreAway:unitDist *tmp135
+  251 op len :locateOreAway:unitDist *tmp133 *tmp134
   252 op equal *tmp136 :locateOreAway:lastX :locateOreAway:x
   253 jump *label66 equal *tmp136 false
   254 op equal *tmp138 :locateOreAway:lastY :locateOreAway:y
 
   272 set :visited:i .locationsStart
   273 label *label75
   274 jump *label77 greaterThanEq :visited:i *tmp145
-    * op mul *tmp146 4 :visited:i
-    * set :visited:index *tmp146
+  275 op mul :visited:index 4 :visited:i
   276 op add *tmp147 :visited:index 2
-    * set *tmp148 *tmp147
-    * read *tmp149 bank1 *tmp148
-    * set :visited:lx *tmp149
+  277 read :visited:lx bank1 *tmp147
   278 op add *tmp150 :visited:index 3
-    * set *tmp151 *tmp150
-    * read *tmp152 bank1 *tmp151
-    * set :visited:ly *tmp152
+  279 read :visited:ly bank1 *tmp150
   280 op sub *tmp153 :visited:x :visited:lx
   281 op sub *tmp154 :visited:y :visited:ly
   282 op len *tmp155 *tmp153 *tmp154
 
   299 jump *label80 equal *tmp158 false
   300 op div *tmp160 7.639437055824273 :locateOreAway:distance
   301 op add .angle .angle *tmp160
-    * op mul *tmp161 .angle .angle
-    * set .mapProgress *tmp161
+  302 op mul .mapProgress .angle .angle
   303 printflush message1
   304 set *tmp98 true
   305 jump *label54 always
 
   323 set :findDrillLocationLocal:oreY :locateOreAway:y
   324 op equal *tmp162 *tmp98 false
   325 jump *label82 equal *tmp162 false
-    * op greaterThan *tmp164 :findDrillLocationLocal:capacity 0
-    * set :findDrillLocationLocal*retval *tmp164
+  326 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   327 jump *label45 always
   328 jump *label83 always
   329 label *label82
 
   367 setaddr :computeRowValues*retaddr *label95 (h:*label95)
   368 call *label6 *invalid :computeRowValues*retval (m:*label95) (h:*label95)
   369 label *label95
-    * set *tmp175 :computeRowValues*retval
-    * set :findBestPosition:y1 *tmp175
+  370 set :findBestPosition:y1 :computeRowValues*retval
   371 op sub *tmp176 :findBestPosition:y 1
   372 set :computeRowValues:x :findBestPosition:x
   373 set :computeRowValues:y *tmp176
 
   376 setaddr :computeRowValues*retaddr *label96 (h:*label96)
   377 call *label6 *invalid :computeRowValues*retval (m:*label96) (h:*label96)
   378 label *label96
-    * set *tmp177 :computeRowValues*retval
-    * set :findBestPosition:y2 *tmp177
+  379 set :findBestPosition:y2 :computeRowValues*retval
   380 op add *tmp178 :findBestPosition:y 0
   381 set :computeRowValues:x :findBestPosition:x
   382 set :computeRowValues:y *tmp178
 
   385 setaddr :computeRowValues*retaddr *label97 (h:*label97)
   386 call *label6 *invalid :computeRowValues*retval (m:*label97) (h:*label97)
   387 label *label97
-    * set *tmp179 :computeRowValues*retval
-    * set :findBestPosition:y3 *tmp179
+  388 set :findBestPosition:y3 :computeRowValues*retval
   389 op add *tmp180 :findBestPosition:y 1
   390 set :computeRowValues:x :findBestPosition:x
   391 set :computeRowValues:y *tmp180
 
   394 setaddr :computeRowValues*retaddr *label98 (h:*label98)
   395 call *label6 *invalid :computeRowValues*retval (m:*label98) (h:*label98)
   396 label *label98
-    * set *tmp181 :computeRowValues*retval
-    * set :findBestPosition:y4 *tmp181
+  397 set :findBestPosition:y4 :computeRowValues*retval
   398 op add *tmp182 :findBestPosition:y 2
   399 set :computeRowValues:x :findBestPosition:x
   400 set :computeRowValues:y *tmp182
 
   403 setaddr :computeRowValues*retaddr *label99 (h:*label99)
   404 call *label6 *invalid :computeRowValues*retval (m:*label99) (h:*label99)
   405 label *label99
-    * set *tmp183 :computeRowValues*retval
-    * set :findBestPosition:y5 *tmp183
+  406 set :findBestPosition:y5 :computeRowValues*retval
   407 set :findBestPosition:best 0
   408 set :findDrillLocationLocal:diffX 0
   409 set :findDrillLocationLocal:diffY 0
   410 op equal *tmp184 :findBestPosition:size 2
   411 jump *label100 equal *tmp184 false
-    * op add *tmp186 :findBestPosition:y1 :findBestPosition:y2
-    * set :findBestPosition:row1 *tmp186
-    * op add *tmp187 :findBestPosition:y2 :findBestPosition:y3
-    * set :findBestPosition:row2 *tmp187
-    * op add *tmp188 :findBestPosition:y3 :findBestPosition:y4
-    * set :findBestPosition:row3 *tmp188
-    * op add *tmp189 :findBestPosition:y4 :findBestPosition:y5
-    * set :findBestPosition:row4 *tmp189
+  412 op add :findBestPosition:row1 :findBestPosition:y1 :findBestPosition:y2
+  413 op add :findBestPosition:row2 :findBestPosition:y2 :findBestPosition:y3
+  414 op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
+  415 op add :findBestPosition:row4 :findBestPosition:y4 :findBestPosition:y5
   416 set :updateRowPositions2x2:dy -1.5
   417 set :updateRowPositions2x2:rowSum :findBestPosition:row1
   418 unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :updateRowPositions2x2:rowSum
 
   706 op equal *tmp254 :findBestPosition:size 3
   707 jump *label186 equal *tmp254 false
   708 op add *tmp256 :findBestPosition:y2 :findBestPosition:y3
-    * op add *tmp257 :findBestPosition:y1 *tmp256
-    * set :findBestPosition:row1.1 *tmp257
+  709 op add :findBestPosition:row1.1 :findBestPosition:y1 *tmp256
   710 op add *tmp258 :findBestPosition:y2 :findBestPosition:y3
-    * op add *tmp259 *tmp258 :findBestPosition:y4
-    * set :findBestPosition:row2.1 *tmp259
+  711 op add :findBestPosition:row2.1 *tmp258 :findBestPosition:y4
   712 op add *tmp260 :findBestPosition:y3 :findBestPosition:y4
-    * op add *tmp261 *tmp260 :findBestPosition:y5
-    * set :findBestPosition:row3.1 *tmp261
+  713 op add :findBestPosition:row3.1 *tmp260 :findBestPosition:y5
   714 set :updateRowPositions3x3:dy -1
   715 set :updateRowPositions3x3:rowSum :findBestPosition:row1.1
-    * unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 *tmp262 :updateRowPositions3x3:rowSum
+  716 unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :updateRowPositions3x3:rowSum
   717 set :updatePosition.16:dx -1
   718 set :updatePosition.16:dy :updateRowPositions3x3:dy
   719 set :updatePosition.16:value :updateRowPositions3x3:col1
 
   768 label *label188
   769 set :updateRowPositions3x3.1:dy 0
   770 set :updateRowPositions3x3.1:rowSum :findBestPosition:row2.1
-    * unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 *tmp275 :updateRowPositions3x3.1:rowSum
+  771 unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :updateRowPositions3x3.1:rowSum
   772 set :updatePosition.19:dx -1
   773 set :updatePosition.19:dy :updateRowPositions3x3.1:dy
   774 set :updatePosition.19:value :updateRowPositions3x3.1:col1
 
   823 label *label204
   824 set :updateRowPositions3x3.2:dy 1
   825 set :updateRowPositions3x3.2:rowSum :findBestPosition:row3.1
-    * unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 *tmp288 :updateRowPositions3x3.2:rowSum
+  826 unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :updateRowPositions3x3.2:rowSum
   827 set :updatePosition.22:dx -1
   828 set :updatePosition.22:dy :updateRowPositions3x3.2:dy
   829 set :updatePosition.22:value :updateRowPositions3x3.2:col1
 
   886 setaddr :computeRowValues*retaddr *label236 (h:*label236)
   887 call *label6 *invalid :computeRowValues*retval (m:*label236) (h:*label236)
   888 label *label236
-    * set *tmp302 :computeRowValues*retval
-    * set :findBestPosition:y0 *tmp302
+  889 set :findBestPosition:y0 :computeRowValues*retval
   890 op add *tmp303 :findBestPosition:y 3
   891 set :computeRowValues:x :findBestPosition:x
   892 set :computeRowValues:y *tmp303
 
   895 setaddr :computeRowValues*retaddr *label237 (h:*label237)
   896 call *label6 *invalid :computeRowValues*retval (m:*label237) (h:*label237)
   897 label *label237
-    * set *tmp304 :computeRowValues*retval
-    * set :findBestPosition:y6 *tmp304
+  898 set :findBestPosition:y6 :computeRowValues*retval
   899 op add *tmp305 :findBestPosition:y1 :findBestPosition:y2
   900 op add *tmp306 *tmp305 :findBestPosition:y3
-    * op add *tmp307 :findBestPosition:y0 *tmp306
-    * set :findBestPosition:row1.2 *tmp307
+  901 op add :findBestPosition:row1.2 :findBestPosition:y0 *tmp306
   902 op add *tmp308 :findBestPosition:y1 :findBestPosition:y2
   903 op add *tmp309 *tmp308 :findBestPosition:y3
-    * op add *tmp310 *tmp309 :findBestPosition:y4
-    * set :findBestPosition:row2.2 *tmp310
+  904 op add :findBestPosition:row2.2 *tmp309 :findBestPosition:y4
   905 op add *tmp311 :findBestPosition:y3 :findBestPosition:y4
   906 op add *tmp312 *tmp311 :findBestPosition:y5
-    * op add *tmp313 :findBestPosition:y2 *tmp312
-    * set :findBestPosition:row3.2 *tmp313
+  907 op add :findBestPosition:row3.2 :findBestPosition:y2 *tmp312
   908 op add *tmp314 :findBestPosition:y3 :findBestPosition:y4
   909 op add *tmp315 *tmp314 :findBestPosition:y5
-    * op add *tmp316 *tmp315 :findBestPosition:y6
-    * set :findBestPosition:row4.1 *tmp316
+  910 op add :findBestPosition:row4.1 *tmp315 :findBestPosition:y6
   911 set :updateRowPositions4x4:dy -1.5
   912 set :updateRowPositions4x4:rowSum :findBestPosition:row1.2
   913 unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 :updateRowPositions4x4:col3 :updateRowPositions4x4:col4 :updateRowPositions4x4:rowSum
 
  1198 label *label301
  1199 label *label187
  1200 label *label101
-    * op mul *tmp381 :findBestPosition:best 255
-    * set *tmp173 *tmp381
+ 1201 op mul *tmp173 :findBestPosition:best 255
  1202 jump *label94 always
  1203 set *tmp173 null
  1204 label *label94
  1205 set :findDrillLocationLocal:score *tmp173
  1206 op greaterThan *tmp382 :findDrillLocationLocal:score :findDrillLocationLocal:capacity
  1207 jump *label322 equal *tmp382 false
-    * op add *tmp384 :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
-    * set :findDrillLocationLocal:dx *tmp384
-    * op add *tmp385 :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:dy *tmp385
+ 1208 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
+ 1209 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1210 set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
  1211 op lessThan *tmp386 :findDrillLocationLocal:limit 1000
  1212 jump *label324 equal *tmp386 false
 
  1225 sensor *tmp392 :saveLocation:item @id
  1226 write *tmp392 bank1 *tmp390
  1227 op add .count .count 1
-    * set *tmp393 .count
-    * write :saveLocation:value bank1 *tmp393
+ 1228 write :saveLocation:value bank1 .count
  1229 op add .count .count 1
-    * set *tmp395 .count
-    * write :saveLocation:x bank1 *tmp395
+ 1230 write :saveLocation:x bank1 .count
  1231 op add .count .count 1
-    * set *tmp397 .count
-    * write :saveLocation:y bank1 *tmp397
+ 1232 write :saveLocation:y bank1 .count
  1233 op add .locations .locations 1
  1234 jump *label330 equal false false
  1235 printflush message1
 
  1255 label *label323
  1256 op greaterThan *tmp403 :findDrillLocationLocal:score :findDrillLocationLocal:best
  1257 jump *label335 equal *tmp403 false
-    * op add *tmp405 :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
-    * set :findDrillLocationLocal:bestX *tmp405
-    * op add *tmp406 :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:bestY *tmp406
+ 1258 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
+ 1259 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1260 set :findDrillLocationLocal:best :findDrillLocationLocal:score
  1261 jump *label336 always
  1262 label *label335
 
  1268 label *label337
  1269 label *label338
  1270 set :findDrillLocationLocal:last :findDrillLocationLocal:score
-    * op mul *tmp409 :findDrillLocationLocal:diffX 1.1
-    * set :round:x *tmp409
+ 1271 op mul :round:x :findDrillLocationLocal:diffX 1.1
  1272 op add *tmp411 :round:x 0.5
-    * op floor *tmp412 *tmp411
-    * set *tmp410 *tmp412
+ 1273 op floor *tmp410 *tmp411
  1274 label *label339
  1275 op add :findDrillLocationLocal:oreX :findDrillLocationLocal:oreX *tmp410
-    * op mul *tmp413 :findDrillLocationLocal:diffY 1.1
-    * set :round.1:x *tmp413
+ 1276 op mul :round.1:x :findDrillLocationLocal:diffY 1.1
  1277 op add *tmp415 :round.1:x 0.5
-    * op floor *tmp416 *tmp415
-    * set *tmp414 *tmp416
+ 1278 op floor *tmp414 *tmp415
  1279 label *label340
  1280 op add :findDrillLocationLocal:oreY :findDrillLocationLocal:oreY *tmp414
  1281 op sub *tmp417 :findDrillLocationLocal:oreX .coreX
 
  1303 sensor *tmp428 :saveLocation.1:item @id
  1304 write *tmp428 bank1 *tmp426
  1305 op add .count .count 1
-    * set *tmp429 .count
-    * write :saveLocation.1:value bank1 *tmp429
+ 1306 write :saveLocation.1:value bank1 .count
  1307 op add .count .count 1
-    * set *tmp431 .count
-    * write :saveLocation.1:x bank1 *tmp431
+ 1308 write :saveLocation.1:x bank1 .count
  1309 op add .count .count 1
-    * set *tmp433 .count
-    * write :saveLocation.1:y bank1 *tmp433
+ 1310 write :saveLocation.1:y bank1 .count
  1311 op add .locations .locations 1
  1312 jump *label347 equal false false
  1313 printflush message1
 
  1368 select :isBlocked:result equal type @air 0 1
  1369 set *tmp457 :isBlocked:result
  1370 label *label370
-    * op or *tmp458 *tmp454 *tmp457
-    * set :createTerrainMask:result *tmp458
+ 1371 op or :createTerrainMask:result *tmp454 *tmp457
  1372 label *label368
  1373 op sub :createTerrainMask:c :createTerrainMask:c 1
  1374 jump *label367 always
 
  1389 jump *label374 greaterThan :findPossiblePlacement:y 3
  1390 op add *tmp459 :findPossiblePlacement:y 3
  1391 op mul *tmp460 7 *tmp459
-    * op shl *tmp461 :findPossiblePlacement:placementMask *tmp460
-    * set :findPossiblePlacement:mask *tmp461
+ 1392 op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp460
  1393 set :findPossiblePlacement:x -3
  1394 label *label375
  1395 jump *label377 greaterThan :findPossiblePlacement:x 3
 
  1398 jump *label378 equal *tmp463 false
  1399 op mul *tmp465 :findPossiblePlacement:y 7
  1400 op add *tmp466 24 *tmp465
-    * op add *tmp467 *tmp466 :findPossiblePlacement:x
-    * set :findPossiblePlacement*retval *tmp467
+ 1401 op add :findPossiblePlacement*retval *tmp466 :findPossiblePlacement:x
  1402 jump *label371 always
  1403 jump *label379 always
  1404 label *label378
 
  1442 label *label385
  1443 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1444 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp474 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp474
+ 1445 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1446 op greaterThanEq *tmp475 :tryPlaceGenerator:shift 0
  1447 jump *label386 equal *tmp475 false
  1448 op lessThan *tmp477 :tryPlaceGenerator:shift 0
 
  1453 label *label388
  1454 label *label389
  1455 op add *tmp479 :tryPlaceGenerator:centerX 0.5
-    * op add *tmp480 *tmp479 :tryPlaceGenerator:c
-    * set .water2X *tmp480
+ 1456 op add .water2X *tmp479 :tryPlaceGenerator:c
  1457 op add *tmp481 :tryPlaceGenerator:centerY 0.5
-    * op add *tmp482 *tmp481 :tryPlaceGenerator:r
-    * set .water2Y *tmp482
+ 1458 op add .water2Y *tmp481 :tryPlaceGenerator:r
  1459 op add *tmp483 :tryPlaceGenerator:centerX 0.5
-    * op add *tmp484 *tmp483 :tryPlaceGenerator:c
-    * set .generatorX *tmp484
+ 1460 op add .generatorX *tmp483 :tryPlaceGenerator:c
  1461 op add *tmp485 :tryPlaceGenerator:centerY 2.5
-    * op add *tmp486 *tmp485 :tryPlaceGenerator:r
-    * set .generatorY *tmp486
+ 1462 op add .generatorY *tmp485 :tryPlaceGenerator:r
  1463 op shl *tmp487 :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:shift
  1464 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp487
  1465 jump *label387 always
 
  1473 label *label390
  1474 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1475 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp488 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp488
+ 1476 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1477 op add *tmp489 :tryPlaceGenerator:centerX 0.5
-    * op add *tmp490 *tmp489 :tryPlaceGenerator:c
-    * set .water2X *tmp490
+ 1478 op add .water2X *tmp489 :tryPlaceGenerator:c
  1479 op add *tmp491 :tryPlaceGenerator:centerY 0.5
-    * op add *tmp492 *tmp491 :tryPlaceGenerator:r
-    * set .water2Y *tmp492
+ 1480 op add .water2Y *tmp491 :tryPlaceGenerator:r
  1481 op add *tmp493 :tryPlaceGenerator:centerX 2.5
-    * op add *tmp494 *tmp493 :tryPlaceGenerator:c
-    * set .generatorX *tmp494
+ 1482 op add .generatorX *tmp493 :tryPlaceGenerator:c
  1483 op add *tmp495 :tryPlaceGenerator:centerY 0.5
-    * op add *tmp496 *tmp495 :tryPlaceGenerator:r
-    * set .generatorY *tmp496
+ 1484 op add .generatorY *tmp495 :tryPlaceGenerator:r
  1485 op shl *tmp497 :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:shift
  1486 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp497
  1487 label *label387
 
  1494 label *label391
  1495 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1496 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp498 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp498
+ 1497 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1498 op lessThan *tmp499 :tryPlaceGenerator:shift 0
  1499 jump *label392 equal *tmp499 false
  1500 set :tryPlaceGenerator*retval false
 
  1502 jump *label393 always
  1503 label *label392
  1504 label *label393
-    * op add *tmp501 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * set .nodeX *tmp501
-    * op add *tmp502 :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * set .nodeY *tmp502
+ 1505 op add .nodeX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
+ 1506 op add .nodeY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
  1507 op shl *tmp503 1 :tryPlaceGenerator:shift
  1508 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp503
  1509 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1515 label *label394
  1516 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1517 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp504 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp504
+ 1518 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1519 op lessThan *tmp505 :tryPlaceGenerator:shift 0
  1520 jump *label395 equal *tmp505 false
  1521 set :tryPlaceGenerator*retval false
 
  1523 jump *label396 always
  1524 label *label395
  1525 label *label396
-    * op add *tmp507 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * set .panelX *tmp507
-    * op add *tmp508 :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * set .panelY *tmp508
+ 1526 op add .panelX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
+ 1527 op add .panelY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
  1528 op shl *tmp509 1 :tryPlaceGenerator:shift
  1529 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp509
  1530 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1536 label *label397
  1537 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1538 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp510 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp510
+ 1539 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1540 op lessThan *tmp511 :tryPlaceGenerator:shift 0
  1541 jump *label398 equal *tmp511 false
  1542 set :tryPlaceGenerator*retval false
 
  1544 jump *label399 always
  1545 label *label398
  1546 label *label399
-    * op add *tmp513 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * set .batteryX *tmp513
-    * op add *tmp514 :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * set .batteryY *tmp514
+ 1547 op add .batteryX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
+ 1548 op add .batteryY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
  1549 op shl *tmp515 1 :tryPlaceGenerator:shift
  1550 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp515
  1551 set :tryPlaceGenerator*retval true
 
  1568 setaddr :createTerrainMask*retaddr *label401 (h:*label401)
  1569 call *label10 *invalid :createTerrainMask*retval (m:*label401) (h:*label401)
  1570 label *label401
-    * set *tmp516 :createTerrainMask*retval
-    * set :layoutThoriumDrillAtLocation:plainTerrainMask *tmp516
+ 1571 set :layoutThoriumDrillAtLocation:plainTerrainMask :createTerrainMask*retval
  1572 set :createFixedMatrix:row0 0b0000000
  1573 set :createFixedMatrix:row1 0b0000000
  1574 set :createFixedMatrix:row2 0b0011100
 
  1588 op shl *tmp527 :createFixedMatrix:row5 35
  1589 op or *tmp528 *tmp526 *tmp527
  1590 op shl *tmp529 :createFixedMatrix:row6 42
-    * op or *tmp530 *tmp528 *tmp529
-    * set *tmp517 *tmp530
+ 1591 op or *tmp517 *tmp528 *tmp529
  1592 label *label402
-    * op or *tmp531 :layoutThoriumDrillAtLocation:plainTerrainMask *tmp517
-    * set :layoutThoriumDrillAtLocation:terrainMask *tmp531
+ 1593 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:plainTerrainMask *tmp517
  1594 set :createFixedMatrix.1:row0 0b1000001
  1595 set :createFixedMatrix.1:row1 0b0000000
  1596 set :createFixedMatrix.1:row2 0b0011100
 
  1610 op shl *tmp542 :createFixedMatrix.1:row5 35
  1611 op or *tmp543 *tmp541 *tmp542
  1612 op shl *tmp544 :createFixedMatrix.1:row6 42
-    * op or *tmp545 *tmp543 *tmp544
-    * set *tmp532 *tmp545
+ 1613 op or *tmp532 *tmp543 *tmp544
  1614 label *label403
-    * op or *tmp546 :layoutThoriumDrillAtLocation:terrainMask *tmp532
-    * set :layoutThoriumDrillAtLocation:cornersMask *tmp546
+ 1615 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp532
  1616 set :createFixedMatrix.2:row0 0b11
  1617 set :createFixedMatrix.2:row1 0b11
  1618 op shl *tmp548 :createFixedMatrix.2:row0 0
  1619 op shl *tmp549 :createFixedMatrix.2:row1 7
-    * op or *tmp550 *tmp548 *tmp549
-    * set *tmp547 *tmp550
+ 1620 op or *tmp547 *tmp548 *tmp549
  1621 label *label404
  1622 set :layoutThoriumDrillAtLocation:mask2x2 *tmp547
  1623 set :printMask:text "terrainMask:"
 
  1664 label *label417
  1665 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1666 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
-    * set *tmp555 :findPossiblePlacement*retval
-    * set :layoutThoriumDrillAtLocation:shift *tmp555
+ 1667 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
  1668 op greaterThanEq *tmp556 :layoutThoriumDrillAtLocation:shift 0
  1669 jump *label418 equal *tmp556 false
  1670 op add *tmp558 .drillX 0.5
-    * op add *tmp559 *tmp558 :layoutThoriumDrillAtLocation:c
-    * set .water1X *tmp559
+ 1671 op add .water1X *tmp558 :layoutThoriumDrillAtLocation:c
  1672 op add *tmp560 .drillY 0.5
-    * op add *tmp561 *tmp560 :layoutThoriumDrillAtLocation:r
-    * set .water1Y *tmp561
+ 1673 op add .water1Y *tmp560 :layoutThoriumDrillAtLocation:r
  1674 op shl *tmp562 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
  1675 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp562
  1676 op shl *tmp563 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
 
  1687 label *label420
  1688 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1689 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
-    * set *tmp564 :findPossiblePlacement*retval
-    * set :layoutThoriumDrillAtLocation:shift *tmp564
+ 1690 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
  1691 op greaterThanEq *tmp565 :layoutThoriumDrillAtLocation:shift 0
  1692 jump *label421 equal *tmp565 false
  1693 op add *tmp567 .drillX 0.5
-    * op add *tmp568 *tmp567 :layoutThoriumDrillAtLocation:c
-    * set .containerX *tmp568
+ 1694 op add .containerX *tmp567 :layoutThoriumDrillAtLocation:c
  1695 op add *tmp569 .drillY 0.5
-    * op add *tmp570 *tmp569 :layoutThoriumDrillAtLocation:r
-    * set .containerY *tmp570
+ 1696 op add .containerY *tmp569 :layoutThoriumDrillAtLocation:r
  1697 op shl *tmp571 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
  1698 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp571
  1699 jump *label422 always
 
  1703 set :createFixedMatrix.3:row1 0b1111
  1704 op shl *tmp573 :createFixedMatrix.3:row0 0
  1705 op shl *tmp574 :createFixedMatrix.3:row1 7
-    * op or *tmp575 *tmp573 *tmp574
-    * set *tmp572 *tmp575
+ 1706 op or *tmp572 *tmp573 *tmp574
  1707 label *label423
  1708 set :layoutThoriumDrillAtLocation:generatorHorizontal *tmp572
  1709 set :createFixedMatrix.4:row0 0b11
 
  1716 op shl *tmp580 :createFixedMatrix.4:row2 14
  1717 op or *tmp581 *tmp579 *tmp580
  1718 op shl *tmp582 :createFixedMatrix.4:row3 21
-    * op or *tmp583 *tmp581 *tmp582
-    * set *tmp576 *tmp583
+ 1719 op or *tmp576 *tmp581 *tmp582
  1720 label *label424
  1721 set :layoutThoriumDrillAtLocation:generatorVertical *tmp576
  1722 set :tryPlaceGenerator:centerX .drillX
 
  1727 setaddr :tryPlaceGenerator*retaddr *label425 (h:*label425)
  1728 call *label12 *invalid :tryPlaceGenerator*retval (m:*label425) (h:*label425)
  1729 label *label425
-    * set *tmp584 :tryPlaceGenerator*retval
-    * jump *label426 equal *tmp584 false
+ 1730 jump *label426 equal :tryPlaceGenerator*retval false
  1731 set :layoutThoriumDrillAtLocation*retval true
  1732 jump *label400 always
  1733 jump *label427 always
 
  1752 set :layoutThoriumDrillAtLocation:sy -3
  1753 setaddr *tmp586 *label434
  1754 label *label428
-    * op sub *tmp587 .drillX :layoutThoriumDrillAtLocation:sx
-    * set :layoutThoriumDrillAtLocation:newX *tmp587
-    * op sub *tmp588 .drillY :layoutThoriumDrillAtLocation:sy
-    * set :layoutThoriumDrillAtLocation:newY *tmp588
+ 1755 op sub :layoutThoriumDrillAtLocation:newX .drillX :layoutThoriumDrillAtLocation:sx
+ 1756 op sub :layoutThoriumDrillAtLocation:newY .drillY :layoutThoriumDrillAtLocation:sy
  1757 set :createTerrainMask:x :layoutThoriumDrillAtLocation:newX
  1758 set :createTerrainMask:y :layoutThoriumDrillAtLocation:newY
  1759 setaddr :createTerrainMask*retaddr *label435 (h:*label435)
  1760 call *label10 *invalid :createTerrainMask*retval (m:*label435) (h:*label435)
  1761 label *label435
-    * set *tmp589 :createTerrainMask*retval
-    * set :layoutThoriumDrillAtLocation:newTerrainMask *tmp589
+ 1762 set :layoutThoriumDrillAtLocation:newTerrainMask :createTerrainMask*retval
  1763 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
  1764 set :shiftMask:shiftX :layoutThoriumDrillAtLocation:sx
  1765 set :shiftMask:shiftY :layoutThoriumDrillAtLocation:sy
 
  1775 label *label437
  1776 label *label438
  1777 op mul *tmp597 7 :shiftMask:shiftY
-    * op add *tmp598 :shiftMask:shiftX *tmp597
-    * set :shiftMask:shift *tmp598
+ 1778 op add :shiftMask:shift :shiftMask:shiftX *tmp597
  1779 op greaterThan *tmp599 :shiftMask:shift 0
  1780 jump *label439 equal *tmp599 false
-    * op shr *tmp601 562949953421311 :shiftMask:shift
-    * set :shiftMask:clearMask *tmp601
+ 1781 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
  1782 op and *tmp602 :shiftMask:mask :shiftMask:clearMask
-    * op shl *tmp603 *tmp602 :shiftMask:shift
-    * set :shiftMask:mask *tmp603
+ 1783 op shl :shiftMask:mask *tmp602 :shiftMask:shift
  1784 jump *label440 always
  1785 label *label439
  1786 op sub *tmp604 0 :shiftMask:shift
 
  1790 jump *label441 equal *tmp605 false
  1791 op abs *tmp607 :shiftMask:shiftX
  1792 op sub *tmp608 7 *tmp607
-    * op shr *tmp609 0b1111111 *tmp608
-    * set :shiftMask:keep *tmp609
+ 1793 op shr :shiftMask:keep 0b1111111 *tmp608
  1794 op greaterThan *tmp610 :shiftMask:shiftX 0
  1795 jump *label443 equal *tmp610 false
  1796 op abs *tmp612 :shiftMask:shiftX
 
  1814 set *tmp590 null
  1815 label *label436
  1816 set :layoutThoriumDrillAtLocation:shiftedMask *tmp590
-    * op or *tmp617 :layoutThoriumDrillAtLocation:newTerrainMask :layoutThoriumDrillAtLocation:shiftedMask
-    * set :layoutThoriumDrillAtLocation:combinedMask *tmp617
+ 1817 op or :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:newTerrainMask :layoutThoriumDrillAtLocation:shiftedMask
  1818 op sub *tmp618 .drillX :layoutThoriumDrillAtLocation:sx
  1819 op sub *tmp619 .drillY :layoutThoriumDrillAtLocation:sy
  1820 set :tryPlaceGenerator:centerX *tmp618
 
  1825 setaddr :tryPlaceGenerator*retaddr *label445 (h:*label445)
  1826 call *label12 *invalid :tryPlaceGenerator*retval (m:*label445) (h:*label445)
  1827 label *label445
-    * set *tmp620 :tryPlaceGenerator*retval
-    * jump *label446 equal *tmp620 false
+ 1828 jump *label446 equal :tryPlaceGenerator*retval false
  1829 set :layoutThoriumDrillAtLocation*retval true
  1830 jump *label400 always
  1831 jump *label447 always

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-2 instructions):
 
   172 set :findDrillLocationLocal:oreX 0
   173 set :findDrillLocationLocal:oreY 0
   174 label *label51
-    * jump *label53 equal true false
   175 set :findDrillLocationLocal:best -1
   176 set :findDrillLocationLocal:bestX :findDrillLocationLocal:x
   177 set :findDrillLocationLocal:bestY :findDrillLocationLocal:y
 
   353 label *label86
   354 set :findDrillLocationLocal:last 0
   355 label *label91
-    * jump *label93 equal true false
   356 set :findBestPosition:x :findDrillLocationLocal:oreX
   357 set :findBestPosition:y :findDrillLocationLocal:oreY
   358 set :findBestPosition:ore :findDrillLocationLocal:ore
 
  1229 op add .count .count 1
  1230 write :saveLocation:y bank1 .count
  1231 op add .locations .locations 1
-    * jump *label330 equal false false
+ 1232 jump *label330 always
  1233 printflush message1
  1234 control enabled switch1 true
  1235 label *label332
 
  1307 op add .count .count 1
  1308 write :saveLocation.1:y bank1 .count
  1309 op add .locations .locations 1
-    * jump *label347 equal false false
+ 1310 jump *label347 always
  1311 printflush message1
  1312 control enabled switch1 true
  1313 label *label349
 
  1634 call *label14 *invalid :printMask*retval (m:*label407) (h:*label407)
  1635 label *label407
  1636 set :debugStop:format ""
-    * jump *label409 equal false false
+ 1637 jump *label409 always
  1638 print :debugStop:format
-    * jump *label412 equal false false
+ 1639 jump *label412 always
  1640 printflush message1
  1641 control enabled switch1 true
  1642 label *label414
 
  1899 jump *label16 always
  1900 end
  1901 label *label14
-    * jump *label457 equal false false
+ 1902 jump *label457 always
  1903 print :printMask:text
  1904 print "\n"
  1905 op sub :printMask:r 7 1

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-121 instructions):
 
    61 set *tmp9 :spotValue.4:result
    62 label *label22
    63 set :computeRowValues:x5 *tmp9
-    * op equal *tmp10 :computeRowValues:size 2
-    * jump *label23 equal *tmp10 false
+   64 jump *label23 notEqual :computeRowValues:size 2
    65 op add *tmp12 :computeRowValues:x1 :computeRowValues:x2
    66 op add *tmp13 :computeRowValues:x2 :computeRowValues:x3
    67 op add *tmp14 :computeRowValues:x3 :computeRowValues:x4
 
    71 set *tmp11 null
    72 jump *label24 always
    73 label *label23
-    * op equal *tmp17 :computeRowValues:size 3
-    * jump *label25 equal *tmp17 false
+   74 jump *label25 notEqual :computeRowValues:size 3
    75 op add *tmp19 :computeRowValues:x2 :computeRowValues:x3
    76 op add *tmp20 :computeRowValues:x1 *tmp19
    77 op add *tmp21 :computeRowValues:x2 :computeRowValues:x3
 
   156 set :moveTo.3:radius 6
   157 label *label48
   158 ucontrol within :moveTo.3:x :moveTo.3:y :moveTo.3:radius *tmp88
-    * op equal *tmp89 *tmp88 false
-    * jump *label50 equal *tmp89 false
+  159 jump *label50 notEqual *tmp88 false
   160 op sub *tmp90 :moveTo.3:radius 0.5
   161 ucontrol approach :moveTo.3:x :moveTo.3:y *tmp90
   162 label *label49
 
   187 op max .angle .angle @pi
   188 op mul .mapProgress .angle .angle
   189 label *label55
-    * op lessThan *tmp102 :locateOreAway:distance :locateOreAway:distanceLimit
-    * jump *label57 equal *tmp102 false
+  190 jump *label57 greaterThanEq :locateOreAway:distance :locateOreAway:distanceLimit
   191 op div :locateOreAway:a .angle @degToRad
   192 op sin *tmp104 :locateOreAway:a
   193 op mul *tmp105 *tmp104 :locateOreAway:distance
 
   216 set :moveTo.4:radius 5
   217 label *label61
   218 ucontrol within :moveTo.4:x :moveTo.4:y :moveTo.4:radius *tmp118
-    * op equal *tmp119 *tmp118 false
-    * jump *label63 equal *tmp119 false
+  219 jump *label63 notEqual *tmp118 false
   220 op sub *tmp120 :moveTo.4:radius 0.5
   221 ucontrol approach :moveTo.4:x :moveTo.4:y *tmp120
   222 label *label62
 
   228 op mul .mapProgress .angle .angle
   229 op mul :locateOreAway:distance 3.8197185279121366 .angle
   230 ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp124 0
-    * op equal *tmp126 *tmp124 false
-    * jump *label64 equal *tmp126 false
+  231 jump *label64 notEqual *tmp124 false
   232 set *tmp98 false
   233 jump *label54 always
   234 jump *label65 always
 
   242 op sub *tmp133 :locateOreAway:x :locateOreAway:lx
   243 op sub *tmp134 :locateOreAway:y :locateOreAway:ly
   244 op len :locateOreAway:unitDist *tmp133 *tmp134
-    * op equal *tmp136 :locateOreAway:lastX :locateOreAway:x
-    * jump *label66 equal *tmp136 false
-    * op equal *tmp138 :locateOreAway:lastY :locateOreAway:y
-    * jump *label68 equal *tmp138 false
+  245 jump *label66 notEqual :locateOreAway:lastX :locateOreAway:x
+  246 jump *label68 notEqual :locateOreAway:lastY :locateOreAway:y
   247 jump *label56 always
   248 jump *label69 always
   249 label *label68
 
   251 jump *label67 always
   252 label *label66
   253 label *label67
-    * op greaterThanEq *tmp140 :locateOreAway:coreDist 7
-    * jump *label70 equal *tmp140 false
-    * op lessThan *tmp142 :locateOreAway:unitDist :locateOreAway:distance
-    * jump *label72 equal *tmp142 false
+  254 jump *label70 lessThan :locateOreAway:coreDist 7
+  255 jump *label72 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
   256 set :locateOreAway:lastX :locateOreAway:x
   257 set :locateOreAway:lastY :locateOreAway:y
   258 set :visited:x :locateOreAway:x
 
   269 op sub *tmp153 :visited:x :visited:lx
   270 op sub *tmp154 :visited:y :visited:ly
   271 op len *tmp155 *tmp153 *tmp154
-    * op lessThan *tmp156 *tmp155 7
-    * jump *label78 equal *tmp156 false
+  272 jump *label78 greaterThanEq *tmp155 7
   273 set *tmp144 true
   274 jump *label74 always
   275 jump *label79 always
 
   283 jump *label74 always
   284 set *tmp144 null
   285 label *label74
-    * op equal *tmp158 *tmp144 false
-    * jump *label80 equal *tmp158 false
+  286 jump *label80 notEqual *tmp144 false
   287 op div *tmp160 7.639437055824273 :locateOreAway:distance
   288 op add .angle .angle *tmp160
   289 op mul .mapProgress .angle .angle
 
   308 label *label54
   309 set :findDrillLocationLocal:oreX :locateOreAway:x
   310 set :findDrillLocationLocal:oreY :locateOreAway:y
-    * op equal *tmp162 *tmp98 false
-    * jump *label82 equal *tmp162 false
+  311 jump *label82 notEqual *tmp98 false
   312 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   313 jump *label45 always
   314 jump *label83 always
   315 label *label82
   316 label *label83
-    * op greaterThanEq *tmp165 :findDrillLocationLocal:limit 1000
-    * jump *label84 equal *tmp165 false
+  317 jump *label84 lessThan :findDrillLocationLocal:limit 1000
   318 op add .mapSpots .mapSpots 1
   319 jump *label85 always
   320 label *label84
 
   328 set :moveTo.6:radius 6
   329 label *label88
   330 ucontrol within :moveTo.6:x :moveTo.6:y :moveTo.6:radius *tmp170
-    * op equal *tmp171 *tmp170 false
-    * jump *label90 equal *tmp171 false
+  331 jump *label90 notEqual *tmp170 false
   332 op sub *tmp172 :moveTo.6:radius 0.5
   333 ucontrol approach :moveTo.6:x :moveTo.6:y *tmp172
   334 label *label89
 
   390 set :findBestPosition:best 0
   391 set :findDrillLocationLocal:diffX 0
   392 set :findDrillLocationLocal:diffY 0
-    * op equal *tmp184 :findBestPosition:size 2
-    * jump *label100 equal *tmp184 false
+  393 jump *label100 notEqual :findBestPosition:size 2
   394 op add :findBestPosition:row1 :findBestPosition:y1 :findBestPosition:y2
   395 op add :findBestPosition:row2 :findBestPosition:y2 :findBestPosition:y3
   396 op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
 
   401 set :updatePosition:dx -1.5
   402 set :updatePosition:dy :updateRowPositions2x2:dy
   403 set :updatePosition:value :updateRowPositions2x2:col1
-    * op lessThan *tmp190 :updatePosition:value 0.0784313725490196
-    * jump *label104 equal *tmp190 false
-    * op greaterThan *tmp192 :updatePosition:value :findBestPosition:best
-    * jump *label106 equal *tmp192 false
+  404 jump *label104 greaterThanEq :updatePosition:value 0.0784313725490196
+  405 jump *label106 lessThanEq :updatePosition:value :findBestPosition:best
   406 set :findDrillLocationLocal:diffX :updatePosition:dx
   407 set :findDrillLocationLocal:diffY :updatePosition:dy
   408 set :findBestPosition:best :updatePosition:value
 
   416 set :updatePosition.1:dx -0.5
   417 set :updatePosition.1:dy :updateRowPositions2x2:dy
   418 set :updatePosition.1:value :updateRowPositions2x2:col2
-    * op lessThan *tmp194 :updatePosition.1:value 0.0784313725490196
-    * jump *label109 equal *tmp194 false
-    * op greaterThan *tmp196 :updatePosition.1:value :findBestPosition:best
-    * jump *label111 equal *tmp196 false
+  419 jump *label109 greaterThanEq :updatePosition.1:value 0.0784313725490196
+  420 jump *label111 lessThanEq :updatePosition.1:value :findBestPosition:best
   421 set :findDrillLocationLocal:diffX :updatePosition.1:dx
   422 set :findDrillLocationLocal:diffY :updatePosition.1:dy
   423 set :findBestPosition:best :updatePosition.1:value
 
   431 set :updatePosition.2:dx 0.5
   432 set :updatePosition.2:dy :updateRowPositions2x2:dy
   433 set :updatePosition.2:value :updateRowPositions2x2:col3
-    * op lessThan *tmp198 :updatePosition.2:value 0.0784313725490196
-    * jump *label114 equal *tmp198 false
-    * op greaterThan *tmp200 :updatePosition.2:value :findBestPosition:best
-    * jump *label116 equal *tmp200 false
+  434 jump *label114 greaterThanEq :updatePosition.2:value 0.0784313725490196
+  435 jump *label116 lessThanEq :updatePosition.2:value :findBestPosition:best
   436 set :findDrillLocationLocal:diffX :updatePosition.2:dx
   437 set :findDrillLocationLocal:diffY :updatePosition.2:dy
   438 set :findBestPosition:best :updatePosition.2:value
 
   446 set :updatePosition.3:dx 1.5
   447 set :updatePosition.3:dy :updateRowPositions2x2:dy
   448 set :updatePosition.3:value :updateRowPositions2x2:col4
-    * op lessThan *tmp202 :updatePosition.3:value 0.0784313725490196
-    * jump *label119 equal *tmp202 false
-    * op greaterThan *tmp204 :updatePosition.3:value :findBestPosition:best
-    * jump *label121 equal *tmp204 false
+  449 jump *label119 greaterThanEq :updatePosition.3:value 0.0784313725490196
+  450 jump *label121 lessThanEq :updatePosition.3:value :findBestPosition:best
   451 set :findDrillLocationLocal:diffX :updatePosition.3:dx
   452 set :findDrillLocationLocal:diffY :updatePosition.3:dy
   453 set :findBestPosition:best :updatePosition.3:value
 
   465 set :updatePosition.4:dx -1.5
   466 set :updatePosition.4:dy :updateRowPositions2x2.1:dy
   467 set :updatePosition.4:value :updateRowPositions2x2.1:col1
-    * op lessThan *tmp206 :updatePosition.4:value 0.0784313725490196
-    * jump *label125 equal *tmp206 false
-    * op greaterThan *tmp208 :updatePosition.4:value :findBestPosition:best
-    * jump *label127 equal *tmp208 false
+  468 jump *label125 greaterThanEq :updatePosition.4:value 0.0784313725490196
+  469 jump *label127 lessThanEq :updatePosition.4:value :findBestPosition:best
   470 set :findDrillLocationLocal:diffX :updatePosition.4:dx
   471 set :findDrillLocationLocal:diffY :updatePosition.4:dy
   472 set :findBestPosition:best :updatePosition.4:value
 
   480 set :updatePosition.5:dx -0.5
   481 set :updatePosition.5:dy :updateRowPositions2x2.1:dy
   482 set :updatePosition.5:value :updateRowPositions2x2.1:col2
-    * op lessThan *tmp210 :updatePosition.5:value 0.0784313725490196
-    * jump *label130 equal *tmp210 false
-    * op greaterThan *tmp212 :updatePosition.5:value :findBestPosition:best
-    * jump *label132 equal *tmp212 false
+  483 jump *label130 greaterThanEq :updatePosition.5:value 0.0784313725490196
+  484 jump *label132 lessThanEq :updatePosition.5:value :findBestPosition:best
   485 set :findDrillLocationLocal:diffX :updatePosition.5:dx
   486 set :findDrillLocationLocal:diffY :updatePosition.5:dy
   487 set :findBestPosition:best :updatePosition.5:value
 
   495 set :updatePosition.6:dx 0.5
   496 set :updatePosition.6:dy :updateRowPositions2x2.1:dy
   497 set :updatePosition.6:value :updateRowPositions2x2.1:col3
-    * op lessThan *tmp214 :updatePosition.6:value 0.0784313725490196
-    * jump *label135 equal *tmp214 false
-    * op greaterThan *tmp216 :updatePosition.6:value :findBestPosition:best
-    * jump *label137 equal *tmp216 false
+  498 jump *label135 greaterThanEq :updatePosition.6:value 0.0784313725490196
+  499 jump *label137 lessThanEq :updatePosition.6:value :findBestPosition:best
   500 set :findDrillLocationLocal:diffX :updatePosition.6:dx
   501 set :findDrillLocationLocal:diffY :updatePosition.6:dy
   502 set :findBestPosition:best :updatePosition.6:value
 
   510 set :updatePosition.7:dx 1.5
   511 set :updatePosition.7:dy :updateRowPositions2x2.1:dy
   512 set :updatePosition.7:value :updateRowPositions2x2.1:col4
-    * op lessThan *tmp218 :updatePosition.7:value 0.0784313725490196
-    * jump *label140 equal *tmp218 false
-    * op greaterThan *tmp220 :updatePosition.7:value :findBestPosition:best
-    * jump *label142 equal *tmp220 false
+  513 jump *label140 greaterThanEq :updatePosition.7:value 0.0784313725490196
+  514 jump *label142 lessThanEq :updatePosition.7:value :findBestPosition:best
   515 set :findDrillLocationLocal:diffX :updatePosition.7:dx
   516 set :findDrillLocationLocal:diffY :updatePosition.7:dy
   517 set :findBestPosition:best :updatePosition.7:value
 
   529 set :updatePosition.8:dx -1.5
   530 set :updatePosition.8:dy :updateRowPositions2x2.2:dy
   531 set :updatePosition.8:value :updateRowPositions2x2.2:col1
-    * op lessThan *tmp222 :updatePosition.8:value 0.0784313725490196
-    * jump *label146 equal *tmp222 false
-    * op greaterThan *tmp224 :updatePosition.8:value :findBestPosition:best
-    * jump *label148 equal *tmp224 false
+  532 jump *label146 greaterThanEq :updatePosition.8:value 0.0784313725490196
+  533 jump *label148 lessThanEq :updatePosition.8:value :findBestPosition:best
   534 set :findDrillLocationLocal:diffX :updatePosition.8:dx
   535 set :findDrillLocationLocal:diffY :updatePosition.8:dy
   536 set :findBestPosition:best :updatePosition.8:value
 
   544 set :updatePosition.9:dx -0.5
   545 set :updatePosition.9:dy :updateRowPositions2x2.2:dy
   546 set :updatePosition.9:value :updateRowPositions2x2.2:col2
-    * op lessThan *tmp226 :updatePosition.9:value 0.0784313725490196
-    * jump *label151 equal *tmp226 false
-    * op greaterThan *tmp228 :updatePosition.9:value :findBestPosition:best
-    * jump *label153 equal *tmp228 false
+  547 jump *label151 greaterThanEq :updatePosition.9:value 0.0784313725490196
+  548 jump *label153 lessThanEq :updatePosition.9:value :findBestPosition:best
   549 set :findDrillLocationLocal:diffX :updatePosition.9:dx
   550 set :findDrillLocationLocal:diffY :updatePosition.9:dy
   551 set :findBestPosition:best :updatePosition.9:value
 
   559 set :updatePosition.10:dx 0.5
   560 set :updatePosition.10:dy :updateRowPositions2x2.2:dy
   561 set :updatePosition.10:value :updateRowPositions2x2.2:col3
-    * op lessThan *tmp230 :updatePosition.10:value 0.0784313725490196
-    * jump *label156 equal *tmp230 false
-    * op greaterThan *tmp232 :updatePosition.10:value :findBestPosition:best
-    * jump *label158 equal *tmp232 false
+  562 jump *label156 greaterThanEq :updatePosition.10:value 0.0784313725490196
+  563 jump *label158 lessThanEq :updatePosition.10:value :findBestPosition:best
   564 set :findDrillLocationLocal:diffX :updatePosition.10:dx
   565 set :findDrillLocationLocal:diffY :updatePosition.10:dy
   566 set :findBestPosition:best :updatePosition.10:value
 
   574 set :updatePosition.11:dx 1.5
   575 set :updatePosition.11:dy :updateRowPositions2x2.2:dy
   576 set :updatePosition.11:value :updateRowPositions2x2.2:col4
-    * op lessThan *tmp234 :updatePosition.11:value 0.0784313725490196
-    * jump *label161 equal *tmp234 false
-    * op greaterThan *tmp236 :updatePosition.11:value :findBestPosition:best
-    * jump *label163 equal *tmp236 false
+  577 jump *label161 greaterThanEq :updatePosition.11:value 0.0784313725490196
+  578 jump *label163 lessThanEq :updatePosition.11:value :findBestPosition:best
   579 set :findDrillLocationLocal:diffX :updatePosition.11:dx
   580 set :findDrillLocationLocal:diffY :updatePosition.11:dy
   581 set :findBestPosition:best :updatePosition.11:value
 
   593 set :updatePosition.12:dx -1.5
   594 set :updatePosition.12:dy :updateRowPositions2x2.3:dy
   595 set :updatePosition.12:value :updateRowPositions2x2.3:col1
-    * op lessThan *tmp238 :updatePosition.12:value 0.0784313725490196
-    * jump *label167 equal *tmp238 false
-    * op greaterThan *tmp240 :updatePosition.12:value :findBestPosition:best
-    * jump *label169 equal *tmp240 false
+  596 jump *label167 greaterThanEq :updatePosition.12:value 0.0784313725490196
+  597 jump *label169 lessThanEq :updatePosition.12:value :findBestPosition:best
   598 set :findDrillLocationLocal:diffX :updatePosition.12:dx
   599 set :findDrillLocationLocal:diffY :updatePosition.12:dy
   600 set :findBestPosition:best :updatePosition.12:value
 
   608 set :updatePosition.13:dx -0.5
   609 set :updatePosition.13:dy :updateRowPositions2x2.3:dy
   610 set :updatePosition.13:value :updateRowPositions2x2.3:col2
-    * op lessThan *tmp242 :updatePosition.13:value 0.0784313725490196
-    * jump *label172 equal *tmp242 false
-    * op greaterThan *tmp244 :updatePosition.13:value :findBestPosition:best
-    * jump *label174 equal *tmp244 false
+  611 jump *label172 greaterThanEq :updatePosition.13:value 0.0784313725490196
+  612 jump *label174 lessThanEq :updatePosition.13:value :findBestPosition:best
   613 set :findDrillLocationLocal:diffX :updatePosition.13:dx
   614 set :findDrillLocationLocal:diffY :updatePosition.13:dy
   615 set :findBestPosition:best :updatePosition.13:value
 
   623 set :updatePosition.14:dx 0.5
   624 set :updatePosition.14:dy :updateRowPositions2x2.3:dy
   625 set :updatePosition.14:value :updateRowPositions2x2.3:col3
-    * op lessThan *tmp246 :updatePosition.14:value 0.0784313725490196
-    * jump *label177 equal *tmp246 false
-    * op greaterThan *tmp248 :updatePosition.14:value :findBestPosition:best
-    * jump *label179 equal *tmp248 false
+  626 jump *label177 greaterThanEq :updatePosition.14:value 0.0784313725490196
+  627 jump *label179 lessThanEq :updatePosition.14:value :findBestPosition:best
   628 set :findDrillLocationLocal:diffX :updatePosition.14:dx
   629 set :findDrillLocationLocal:diffY :updatePosition.14:dy
   630 set :findBestPosition:best :updatePosition.14:value
 
   638 set :updatePosition.15:dx 1.5
   639 set :updatePosition.15:dy :updateRowPositions2x2.3:dy
   640 set :updatePosition.15:value :updateRowPositions2x2.3:col4
-    * op lessThan *tmp250 :updatePosition.15:value 0.0784313725490196
-    * jump *label182 equal *tmp250 false
-    * op greaterThan *tmp252 :updatePosition.15:value :findBestPosition:best
-    * jump *label184 equal *tmp252 false
+  641 jump *label182 greaterThanEq :updatePosition.15:value 0.0784313725490196
+  642 jump *label184 lessThanEq :updatePosition.15:value :findBestPosition:best
   643 set :findDrillLocationLocal:diffX :updatePosition.15:dx
   644 set :findDrillLocationLocal:diffY :updatePosition.15:dy
   645 set :findBestPosition:best :updatePosition.15:value
 
   653 label *label165
   654 jump *label101 always
   655 label *label100
-    * op equal *tmp254 :findBestPosition:size 3
-    * jump *label186 equal *tmp254 false
+  656 jump *label186 notEqual :findBestPosition:size 3
   657 op add *tmp256 :findBestPosition:y2 :findBestPosition:y3
   658 op add :findBestPosition:row1.1 :findBestPosition:y1 *tmp256
   659 op add *tmp258 :findBestPosition:y2 :findBestPosition:y3
 
   666 set :updatePosition.16:dx -1
   667 set :updatePosition.16:dy :updateRowPositions3x3:dy
   668 set :updatePosition.16:value :updateRowPositions3x3:col1
-    * op lessThan *tmp263 :updatePosition.16:value 0.0784313725490196
-    * jump *label190 equal *tmp263 false
-    * op greaterThan *tmp265 :updatePosition.16:value :findBestPosition:best
-    * jump *label192 equal *tmp265 false
+  669 jump *label190 greaterThanEq :updatePosition.16:value 0.0784313725490196
+  670 jump *label192 lessThanEq :updatePosition.16:value :findBestPosition:best
   671 set :findDrillLocationLocal:diffX :updatePosition.16:dx
   672 set :findDrillLocationLocal:diffY :updatePosition.16:dy
   673 set :findBestPosition:best :updatePosition.16:value
 
   681 set :updatePosition.17:dx 0
   682 set :updatePosition.17:dy :updateRowPositions3x3:dy
   683 set :updatePosition.17:value :updateRowPositions3x3:col2
-    * op lessThan *tmp267 :updatePosition.17:value 0.0784313725490196
-    * jump *label195 equal *tmp267 false
-    * op greaterThan *tmp269 :updatePosition.17:value :findBestPosition:best
-    * jump *label197 equal *tmp269 false
+  684 jump *label195 greaterThanEq :updatePosition.17:value 0.0784313725490196
+  685 jump *label197 lessThanEq :updatePosition.17:value :findBestPosition:best
   686 set :findDrillLocationLocal:diffX :updatePosition.17:dx
   687 set :findDrillLocationLocal:diffY :updatePosition.17:dy
   688 set :findBestPosition:best :updatePosition.17:value
 
   696 set :updatePosition.18:dx 1
   697 set :updatePosition.18:dy :updateRowPositions3x3:dy
   698 set :updatePosition.18:value :updateRowPositions3x3:col3
-    * op lessThan *tmp271 :updatePosition.18:value 0.0784313725490196
-    * jump *label200 equal *tmp271 false
-    * op greaterThan *tmp273 :updatePosition.18:value :findBestPosition:best
-    * jump *label202 equal *tmp273 false
+  699 jump *label200 greaterThanEq :updatePosition.18:value 0.0784313725490196
+  700 jump *label202 lessThanEq :updatePosition.18:value :findBestPosition:best
   701 set :findDrillLocationLocal:diffX :updatePosition.18:dx
   702 set :findDrillLocationLocal:diffY :updatePosition.18:dy
   703 set :findBestPosition:best :updatePosition.18:value
 
   715 set :updatePosition.19:dx -1
   716 set :updatePosition.19:dy :updateRowPositions3x3.1:dy
   717 set :updatePosition.19:value :updateRowPositions3x3.1:col1
-    * op lessThan *tmp276 :updatePosition.19:value 0.0784313725490196
-    * jump *label206 equal *tmp276 false
-    * op greaterThan *tmp278 :updatePosition.19:value :findBestPosition:best
-    * jump *label208 equal *tmp278 false
+  718 jump *label206 greaterThanEq :updatePosition.19:value 0.0784313725490196
+  719 jump *label208 lessThanEq :updatePosition.19:value :findBestPosition:best
   720 set :findDrillLocationLocal:diffX :updatePosition.19:dx
   721 set :findDrillLocationLocal:diffY :updatePosition.19:dy
   722 set :findBestPosition:best :updatePosition.19:value
 
   730 set :updatePosition.20:dx 0
   731 set :updatePosition.20:dy :updateRowPositions3x3.1:dy
   732 set :updatePosition.20:value :updateRowPositions3x3.1:col2
-    * op lessThan *tmp280 :updatePosition.20:value 0.0784313725490196
-    * jump *label211 equal *tmp280 false
-    * op greaterThan *tmp282 :updatePosition.20:value :findBestPosition:best
-    * jump *label213 equal *tmp282 false
+  733 jump *label211 greaterThanEq :updatePosition.20:value 0.0784313725490196
+  734 jump *label213 lessThanEq :updatePosition.20:value :findBestPosition:best
   735 set :findDrillLocationLocal:diffX :updatePosition.20:dx
   736 set :findDrillLocationLocal:diffY :updatePosition.20:dy
   737 set :findBestPosition:best :updatePosition.20:value
 
   745 set :updatePosition.21:dx 1
   746 set :updatePosition.21:dy :updateRowPositions3x3.1:dy
   747 set :updatePosition.21:value :updateRowPositions3x3.1:col3
-    * op lessThan *tmp284 :updatePosition.21:value 0.0784313725490196
-    * jump *label216 equal *tmp284 false
-    * op greaterThan *tmp286 :updatePosition.21:value :findBestPosition:best
-    * jump *label218 equal *tmp286 false
+  748 jump *label216 greaterThanEq :updatePosition.21:value 0.0784313725490196
+  749 jump *label218 lessThanEq :updatePosition.21:value :findBestPosition:best
   750 set :findDrillLocationLocal:diffX :updatePosition.21:dx
   751 set :findDrillLocationLocal:diffY :updatePosition.21:dy
   752 set :findBestPosition:best :updatePosition.21:value
 
   764 set :updatePosition.22:dx -1
   765 set :updatePosition.22:dy :updateRowPositions3x3.2:dy
   766 set :updatePosition.22:value :updateRowPositions3x3.2:col1
-    * op lessThan *tmp289 :updatePosition.22:value 0.0784313725490196
-    * jump *label222 equal *tmp289 false
-    * op greaterThan *tmp291 :updatePosition.22:value :findBestPosition:best
-    * jump *label224 equal *tmp291 false
+  767 jump *label222 greaterThanEq :updatePosition.22:value 0.0784313725490196
+  768 jump *label224 lessThanEq :updatePosition.22:value :findBestPosition:best
   769 set :findDrillLocationLocal:diffX :updatePosition.22:dx
   770 set :findDrillLocationLocal:diffY :updatePosition.22:dy
   771 set :findBestPosition:best :updatePosition.22:value
 
   779 set :updatePosition.23:dx 0
   780 set :updatePosition.23:dy :updateRowPositions3x3.2:dy
   781 set :updatePosition.23:value :updateRowPositions3x3.2:col2
-    * op lessThan *tmp293 :updatePosition.23:value 0.0784313725490196
-    * jump *label227 equal *tmp293 false
-    * op greaterThan *tmp295 :updatePosition.23:value :findBestPosition:best
-    * jump *label229 equal *tmp295 false
+  782 jump *label227 greaterThanEq :updatePosition.23:value 0.0784313725490196
+  783 jump *label229 lessThanEq :updatePosition.23:value :findBestPosition:best
   784 set :findDrillLocationLocal:diffX :updatePosition.23:dx
   785 set :findDrillLocationLocal:diffY :updatePosition.23:dy
   786 set :findBestPosition:best :updatePosition.23:value
 
   794 set :updatePosition.24:dx 1
   795 set :updatePosition.24:dy :updateRowPositions3x3.2:dy
   796 set :updatePosition.24:value :updateRowPositions3x3.2:col3
-    * op lessThan *tmp297 :updatePosition.24:value 0.0784313725490196
-    * jump *label232 equal *tmp297 false
-    * op greaterThan *tmp299 :updatePosition.24:value :findBestPosition:best
-    * jump *label234 equal *tmp299 false
+  797 jump *label232 greaterThanEq :updatePosition.24:value 0.0784313725490196
+  798 jump *label234 lessThanEq :updatePosition.24:value :findBestPosition:best
   799 set :findDrillLocationLocal:diffX :updatePosition.24:dx
   800 set :findDrillLocationLocal:diffY :updatePosition.24:dy
   801 set :findBestPosition:best :updatePosition.24:value
 
   845 set :updatePosition.25:dx -1.5
   846 set :updatePosition.25:dy :updateRowPositions4x4:dy
   847 set :updatePosition.25:value :updateRowPositions4x4:col1
-    * op lessThan *tmp317 :updatePosition.25:value 0.0784313725490196
-    * jump *label240 equal *tmp317 false
-    * op greaterThan *tmp319 :updatePosition.25:value :findBestPosition:best
-    * jump *label242 equal *tmp319 false
+  848 jump *label240 greaterThanEq :updatePosition.25:value 0.0784313725490196
+  849 jump *label242 lessThanEq :updatePosition.25:value :findBestPosition:best
   850 set :findDrillLocationLocal:diffX :updatePosition.25:dx
   851 set :findDrillLocationLocal:diffY :updatePosition.25:dy
   852 set :findBestPosition:best :updatePosition.25:value
 
   860 set :updatePosition.26:dx -0.5
   861 set :updatePosition.26:dy :updateRowPositions4x4:dy
   862 set :updatePosition.26:value :updateRowPositions4x4:col2
-    * op lessThan *tmp321 :updatePosition.26:value 0.0784313725490196
-    * jump *label245 equal *tmp321 false
-    * op greaterThan *tmp323 :updatePosition.26:value :findBestPosition:best
-    * jump *label247 equal *tmp323 false
+  863 jump *label245 greaterThanEq :updatePosition.26:value 0.0784313725490196
+  864 jump *label247 lessThanEq :updatePosition.26:value :findBestPosition:best
   865 set :findDrillLocationLocal:diffX :updatePosition.26:dx
   866 set :findDrillLocationLocal:diffY :updatePosition.26:dy
   867 set :findBestPosition:best :updatePosition.26:value
 
   875 set :updatePosition.27:dx 0.5
   876 set :updatePosition.27:dy :updateRowPositions4x4:dy
   877 set :updatePosition.27:value :updateRowPositions4x4:col3
-    * op lessThan *tmp325 :updatePosition.27:value 0.0784313725490196
-    * jump *label250 equal *tmp325 false
-    * op greaterThan *tmp327 :updatePosition.27:value :findBestPosition:best
-    * jump *label252 equal *tmp327 false
+  878 jump *label250 greaterThanEq :updatePosition.27:value 0.0784313725490196
+  879 jump *label252 lessThanEq :updatePosition.27:value :findBestPosition:best
   880 set :findDrillLocationLocal:diffX :updatePosition.27:dx
   881 set :findDrillLocationLocal:diffY :updatePosition.27:dy
   882 set :findBestPosition:best :updatePosition.27:value
 
   890 set :updatePosition.28:dx 1.5
   891 set :updatePosition.28:dy :updateRowPositions4x4:dy
   892 set :updatePosition.28:value :updateRowPositions4x4:col4
-    * op lessThan *tmp329 :updatePosition.28:value 0.0784313725490196
-    * jump *label255 equal *tmp329 false
-    * op greaterThan *tmp331 :updatePosition.28:value :findBestPosition:best
-    * jump *label257 equal *tmp331 false
+  893 jump *label255 greaterThanEq :updatePosition.28:value 0.0784313725490196
+  894 jump *label257 lessThanEq :updatePosition.28:value :findBestPosition:best
   895 set :findDrillLocationLocal:diffX :updatePosition.28:dx
   896 set :findDrillLocationLocal:diffY :updatePosition.28:dy
   897 set :findBestPosition:best :updatePosition.28:value
 
   909 set :updatePosition.29:dx -1.5
   910 set :updatePosition.29:dy :updateRowPositions4x4.1:dy
   911 set :updatePosition.29:value :updateRowPositions4x4.1:col1
-    * op lessThan *tmp333 :updatePosition.29:value 0.0784313725490196
-    * jump *label261 equal *tmp333 false
-    * op greaterThan *tmp335 :updatePosition.29:value :findBestPosition:best
-    * jump *label263 equal *tmp335 false
+  912 jump *label261 greaterThanEq :updatePosition.29:value 0.0784313725490196
+  913 jump *label263 lessThanEq :updatePosition.29:value :findBestPosition:best
   914 set :findDrillLocationLocal:diffX :updatePosition.29:dx
   915 set :findDrillLocationLocal:diffY :updatePosition.29:dy
   916 set :findBestPosition:best :updatePosition.29:value
 
   924 set :updatePosition.30:dx -0.5
   925 set :updatePosition.30:dy :updateRowPositions4x4.1:dy
   926 set :updatePosition.30:value :updateRowPositions4x4.1:col2
-    * op lessThan *tmp337 :updatePosition.30:value 0.0784313725490196
-    * jump *label266 equal *tmp337 false
-    * op greaterThan *tmp339 :updatePosition.30:value :findBestPosition:best
-    * jump *label268 equal *tmp339 false
+  927 jump *label266 greaterThanEq :updatePosition.30:value 0.0784313725490196
+  928 jump *label268 lessThanEq :updatePosition.30:value :findBestPosition:best
   929 set :findDrillLocationLocal:diffX :updatePosition.30:dx
   930 set :findDrillLocationLocal:diffY :updatePosition.30:dy
   931 set :findBestPosition:best :updatePosition.30:value
 
   939 set :updatePosition.31:dx 0.5
   940 set :updatePosition.31:dy :updateRowPositions4x4.1:dy
   941 set :updatePosition.31:value :updateRowPositions4x4.1:col3
-    * op lessThan *tmp341 :updatePosition.31:value 0.0784313725490196
-    * jump *label271 equal *tmp341 false
-    * op greaterThan *tmp343 :updatePosition.31:value :findBestPosition:best
-    * jump *label273 equal *tmp343 false
+  942 jump *label271 greaterThanEq :updatePosition.31:value 0.0784313725490196
+  943 jump *label273 lessThanEq :updatePosition.31:value :findBestPosition:best
   944 set :findDrillLocationLocal:diffX :updatePosition.31:dx
   945 set :findDrillLocationLocal:diffY :updatePosition.31:dy
   946 set :findBestPosition:best :updatePosition.31:value
 
   954 set :updatePosition.32:dx 1.5
   955 set :updatePosition.32:dy :updateRowPositions4x4.1:dy
   956 set :updatePosition.32:value :updateRowPositions4x4.1:col4
-    * op lessThan *tmp345 :updatePosition.32:value 0.0784313725490196
-    * jump *label276 equal *tmp345 false
-    * op greaterThan *tmp347 :updatePosition.32:value :findBestPosition:best
-    * jump *label278 equal *tmp347 false
+  957 jump *label276 greaterThanEq :updatePosition.32:value 0.0784313725490196
+  958 jump *label278 lessThanEq :updatePosition.32:value :findBestPosition:best
   959 set :findDrillLocationLocal:diffX :updatePosition.32:dx
   960 set :findDrillLocationLocal:diffY :updatePosition.32:dy
   961 set :findBestPosition:best :updatePosition.32:value
 
   973 set :updatePosition.33:dx -1.5
   974 set :updatePosition.33:dy :updateRowPositions4x4.2:dy
   975 set :updatePosition.33:value :updateRowPositions4x4.2:col1
-    * op lessThan *tmp349 :updatePosition.33:value 0.0784313725490196
-    * jump *label282 equal *tmp349 false
-    * op greaterThan *tmp351 :updatePosition.33:value :findBestPosition:best
-    * jump *label284 equal *tmp351 false
+  976 jump *label282 greaterThanEq :updatePosition.33:value 0.0784313725490196
+  977 jump *label284 lessThanEq :updatePosition.33:value :findBestPosition:best
   978 set :findDrillLocationLocal:diffX :updatePosition.33:dx
   979 set :findDrillLocationLocal:diffY :updatePosition.33:dy
   980 set :findBestPosition:best :updatePosition.33:value
 
   988 set :updatePosition.34:dx -0.5
   989 set :updatePosition.34:dy :updateRowPositions4x4.2:dy
   990 set :updatePosition.34:value :updateRowPositions4x4.2:col2
-    * op lessThan *tmp353 :updatePosition.34:value 0.0784313725490196
-    * jump *label287 equal *tmp353 false
-    * op greaterThan *tmp355 :updatePosition.34:value :findBestPosition:best
-    * jump *label289 equal *tmp355 false
+  991 jump *label287 greaterThanEq :updatePosition.34:value 0.0784313725490196
+  992 jump *label289 lessThanEq :updatePosition.34:value :findBestPosition:best
   993 set :findDrillLocationLocal:diffX :updatePosition.34:dx
   994 set :findDrillLocationLocal:diffY :updatePosition.34:dy
   995 set :findBestPosition:best :updatePosition.34:value
 
  1003 set :updatePosition.35:dx 0.5
  1004 set :updatePosition.35:dy :updateRowPositions4x4.2:dy
  1005 set :updatePosition.35:value :updateRowPositions4x4.2:col3
-    * op lessThan *tmp357 :updatePosition.35:value 0.0784313725490196
-    * jump *label292 equal *tmp357 false
-    * op greaterThan *tmp359 :updatePosition.35:value :findBestPosition:best
-    * jump *label294 equal *tmp359 false
+ 1006 jump *label292 greaterThanEq :updatePosition.35:value 0.0784313725490196
+ 1007 jump *label294 lessThanEq :updatePosition.35:value :findBestPosition:best
  1008 set :findDrillLocationLocal:diffX :updatePosition.35:dx
  1009 set :findDrillLocationLocal:diffY :updatePosition.35:dy
  1010 set :findBestPosition:best :updatePosition.35:value
 
  1018 set :updatePosition.36:dx 1.5
  1019 set :updatePosition.36:dy :updateRowPositions4x4.2:dy
  1020 set :updatePosition.36:value :updateRowPositions4x4.2:col4
-    * op lessThan *tmp361 :updatePosition.36:value 0.0784313725490196
-    * jump *label297 equal *tmp361 false
-    * op greaterThan *tmp363 :updatePosition.36:value :findBestPosition:best
-    * jump *label299 equal *tmp363 false
+ 1021 jump *label297 greaterThanEq :updatePosition.36:value 0.0784313725490196
+ 1022 jump *label299 lessThanEq :updatePosition.36:value :findBestPosition:best
  1023 set :findDrillLocationLocal:diffX :updatePosition.36:dx
  1024 set :findDrillLocationLocal:diffY :updatePosition.36:dy
  1025 set :findBestPosition:best :updatePosition.36:value
 
  1037 set :updatePosition.37:dx -1.5
  1038 set :updatePosition.37:dy :updateRowPositions4x4.3:dy
  1039 set :updatePosition.37:value :updateRowPositions4x4.3:col1
-    * op lessThan *tmp365 :updatePosition.37:value 0.0784313725490196
-    * jump *label303 equal *tmp365 false
-    * op greaterThan *tmp367 :updatePosition.37:value :findBestPosition:best
-    * jump *label305 equal *tmp367 false
+ 1040 jump *label303 greaterThanEq :updatePosition.37:value 0.0784313725490196
+ 1041 jump *label305 lessThanEq :updatePosition.37:value :findBestPosition:best
  1042 set :findDrillLocationLocal:diffX :updatePosition.37:dx
  1043 set :findDrillLocationLocal:diffY :updatePosition.37:dy
  1044 set :findBestPosition:best :updatePosition.37:value
 
  1052 set :updatePosition.38:dx -0.5
  1053 set :updatePosition.38:dy :updateRowPositions4x4.3:dy
  1054 set :updatePosition.38:value :updateRowPositions4x4.3:col2
-    * op lessThan *tmp369 :updatePosition.38:value 0.0784313725490196
-    * jump *label308 equal *tmp369 false
-    * op greaterThan *tmp371 :updatePosition.38:value :findBestPosition:best
-    * jump *label310 equal *tmp371 false
+ 1055 jump *label308 greaterThanEq :updatePosition.38:value 0.0784313725490196
+ 1056 jump *label310 lessThanEq :updatePosition.38:value :findBestPosition:best
  1057 set :findDrillLocationLocal:diffX :updatePosition.38:dx
  1058 set :findDrillLocationLocal:diffY :updatePosition.38:dy
  1059 set :findBestPosition:best :updatePosition.38:value
 
  1067 set :updatePosition.39:dx 0.5
  1068 set :updatePosition.39:dy :updateRowPositions4x4.3:dy
  1069 set :updatePosition.39:value :updateRowPositions4x4.3:col3
-    * op lessThan *tmp373 :updatePosition.39:value 0.0784313725490196
-    * jump *label313 equal *tmp373 false
-    * op greaterThan *tmp375 :updatePosition.39:value :findBestPosition:best
-    * jump *label315 equal *tmp375 false
+ 1070 jump *label313 greaterThanEq :updatePosition.39:value 0.0784313725490196
+ 1071 jump *label315 lessThanEq :updatePosition.39:value :findBestPosition:best
  1072 set :findDrillLocationLocal:diffX :updatePosition.39:dx
  1073 set :findDrillLocationLocal:diffY :updatePosition.39:dy
  1074 set :findBestPosition:best :updatePosition.39:value
 
  1082 set :updatePosition.40:dx 1.5
  1083 set :updatePosition.40:dy :updateRowPositions4x4.3:dy
  1084 set :updatePosition.40:value :updateRowPositions4x4.3:col4
-    * op lessThan *tmp377 :updatePosition.40:value 0.0784313725490196
-    * jump *label318 equal *tmp377 false
-    * op greaterThan *tmp379 :updatePosition.40:value :findBestPosition:best
-    * jump *label320 equal *tmp379 false
+ 1085 jump *label318 greaterThanEq :updatePosition.40:value 0.0784313725490196
+ 1086 jump *label320 lessThanEq :updatePosition.40:value :findBestPosition:best
  1087 set :findDrillLocationLocal:diffX :updatePosition.40:dx
  1088 set :findDrillLocationLocal:diffY :updatePosition.40:dy
  1089 set :findBestPosition:best :updatePosition.40:value
 
  1102 set *tmp173 null
  1103 label *label94
  1104 set :findDrillLocationLocal:score *tmp173
-    * op greaterThan *tmp382 :findDrillLocationLocal:score :findDrillLocationLocal:capacity
-    * jump *label322 equal *tmp382 false
+ 1105 jump *label322 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:capacity
  1106 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1107 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1108 set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
-    * op lessThan *tmp386 :findDrillLocationLocal:limit 1000
-    * jump *label324 equal *tmp386 false
+ 1109 jump *label324 greaterThanEq :findDrillLocationLocal:limit 1000
  1110 set .mapSpots :findDrillLocationLocal:score
  1111 jump *label325 always
  1112 label *label324
  1113 label *label325
-    * op greaterThanEq *tmp388 :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
-    * jump *label326 equal *tmp388 false
+ 1114 jump *label326 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
  1115 set :saveLocation:item :findDrillLocationLocal:item
  1116 set :saveLocation:value :findDrillLocationLocal:score
  1117 set :saveLocation:x :findDrillLocationLocal:dx
 
  1149 jump *label323 always
  1150 label *label322
  1151 label *label323
-    * op greaterThan *tmp403 :findDrillLocationLocal:score :findDrillLocationLocal:best
-    * jump *label335 equal *tmp403 false
+ 1152 jump *label335 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
  1153 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1154 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1155 set :findDrillLocationLocal:best :findDrillLocationLocal:score
  1156 jump *label336 always
  1157 label *label335
  1158 label *label336
-    * op lessThanEq *tmp407 :findDrillLocationLocal:score :findDrillLocationLocal:last
-    * jump *label337 equal *tmp407 false
+ 1159 jump *label337 greaterThan :findDrillLocationLocal:score :findDrillLocationLocal:last
  1160 jump *label93 always
  1161 jump *label338 always
  1162 label *label337
 
  1177 op sub *tmp419 :findDrillLocationLocal:oreY .coreY
  1178 op abs *tmp420 *tmp419
  1179 op min *tmp421 *tmp418 *tmp420
-    * op lessThan *tmp422 *tmp421 7
-    * jump *label341 equal *tmp422 false
+ 1180 jump *label341 greaterThanEq *tmp421 7
  1181 jump *label93 always
  1182 jump *label342 always
  1183 label *label341
 
  1185 label *label92
  1186 jump *label91 always
  1187 label *label93
-    * op greaterThanEq *tmp424 :findDrillLocationLocal:best 0
-    * jump *label343 equal *tmp424 false
+ 1188 jump *label343 lessThan :findDrillLocationLocal:best 0
  1189 set :saveLocation.1:item :findDrillLocationLocal:item
  1190 set :saveLocation.1:value :findDrillLocationLocal:best
  1191 set :saveLocation.1:x :findDrillLocationLocal:bestX
 
  1234 set :moveTo.8:radius 6
  1235 label *label361
  1236 ucontrol within :moveTo.8:x :moveTo.8:y :moveTo.8:radius *tmp451
-    * op equal *tmp452 *tmp451 false
-    * jump *label363 equal *tmp452 false
+ 1237 jump *label363 notEqual *tmp451 false
  1238 op sub *tmp453 :moveTo.8:radius 0.5
  1239 ucontrol approach :moveTo.8:x :moveTo.8:y *tmp453
  1240 label *label362
 
  1285 label *label375
  1286 jump *label377 greaterThan :findPossiblePlacement:x 3
  1287 op and *tmp462 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
-    * op equal *tmp463 *tmp462 0
-    * jump *label378 equal *tmp463 false
+ 1288 jump *label378 notEqual *tmp462 0
  1289 op mul *tmp465 :findPossiblePlacement:y 7
  1290 op add *tmp466 24 *tmp465
  1291 op add :findPossiblePlacement*retval *tmp466 :findPossiblePlacement:x
 
  1294 label *label378
  1295 label *label379
  1296 op sub *tmp468 3 :findPossiblePlacement:width
-    * op greaterThan *tmp469 :findPossiblePlacement:x *tmp468
-    * jump *label380 equal *tmp469 false
+ 1297 jump *label380 lessThanEq :findPossiblePlacement:x *tmp468
  1298 jump *label377 always
  1299 jump *label381 always
  1300 label *label380
 
  1305 jump *label375 always
  1306 label *label377
  1307 op sub *tmp471 3 :findPossiblePlacement:height
-    * op greaterThan *tmp472 :findPossiblePlacement:y *tmp471
-    * jump *label382 equal *tmp472 false
+ 1308 jump *label382 lessThanEq :findPossiblePlacement:y *tmp471
  1309 jump *label374 always
  1310 jump *label383 always
  1311 label *label382
 
  1331 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1332 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1333 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op greaterThanEq *tmp475 :tryPlaceGenerator:shift 0
-    * jump *label386 equal *tmp475 false
-    * op lessThan *tmp477 :tryPlaceGenerator:shift 0
-    * jump *label388 equal *tmp477 false
+ 1334 jump *label386 lessThan :tryPlaceGenerator:shift 0
+ 1335 jump *label388 greaterThanEq :tryPlaceGenerator:shift 0
  1336 set :tryPlaceGenerator*retval false
  1337 jump *label384 always
  1338 jump *label389 always
 
  1381 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1382 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1383 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp499 :tryPlaceGenerator:shift 0
-    * jump *label392 equal *tmp499 false
+ 1384 jump *label392 greaterThanEq :tryPlaceGenerator:shift 0
  1385 set :tryPlaceGenerator*retval false
  1386 jump *label384 always
  1387 jump *label393 always
 
  1401 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1402 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1403 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp505 :tryPlaceGenerator:shift 0
-    * jump *label395 equal *tmp505 false
+ 1404 jump *label395 greaterThanEq :tryPlaceGenerator:shift 0
  1405 set :tryPlaceGenerator*retval false
  1406 jump *label384 always
  1407 jump *label396 always
 
  1421 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1422 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1423 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp511 :tryPlaceGenerator:shift 0
-    * jump *label398 equal *tmp511 false
+ 1424 jump *label398 greaterThanEq :tryPlaceGenerator:shift 0
  1425 set :tryPlaceGenerator*retval false
  1426 jump *label384 always
  1427 jump *label399 always
 
  1548 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1549 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
  1550 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
-    * op greaterThanEq *tmp556 :layoutThoriumDrillAtLocation:shift 0
-    * jump *label418 equal *tmp556 false
+ 1551 jump *label418 lessThan :layoutThoriumDrillAtLocation:shift 0
  1552 op add *tmp558 .drillX 0.5
  1553 op add .water1X *tmp558 :layoutThoriumDrillAtLocation:c
  1554 op add *tmp560 .drillY 0.5
 
  1570 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1571 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
  1572 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
-    * op greaterThanEq *tmp565 :layoutThoriumDrillAtLocation:shift 0
-    * jump *label421 equal *tmp565 false
+ 1573 jump *label421 lessThan :layoutThoriumDrillAtLocation:shift 0
  1574 op add *tmp567 .drillX 0.5
  1575 op add .containerX *tmp567 :layoutThoriumDrillAtLocation:c
  1576 op add *tmp569 .drillY 0.5
 
  1657 label *label438
  1658 op mul *tmp597 7 :shiftMask:shiftY
  1659 op add :shiftMask:shift :shiftMask:shiftX *tmp597
-    * op greaterThan *tmp599 :shiftMask:shift 0
-    * jump *label439 equal *tmp599 false
+ 1660 jump *label439 lessThanEq :shiftMask:shift 0
  1661 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
  1662 op and *tmp602 :shiftMask:mask :shiftMask:clearMask
  1663 op shl :shiftMask:mask *tmp602 :shiftMask:shift
 
  1666 op sub *tmp604 0 :shiftMask:shift
  1667 op shr :shiftMask:mask :shiftMask:mask *tmp604
  1668 label *label440
-    * op notEqual *tmp605 :shiftMask:shiftX 0
-    * jump *label441 equal *tmp605 false
+ 1669 jump *label441 equal :shiftMask:shiftX 0
  1670 op abs *tmp607 :shiftMask:shiftX
  1671 op sub *tmp608 7 *tmp607
  1672 op shr :shiftMask:keep 0b1111111 *tmp608
-    * op greaterThan *tmp610 :shiftMask:shiftX 0
-    * jump *label443 equal *tmp610 false
+ 1673 jump *label443 lessThanEq :shiftMask:shiftX 0
  1674 op abs *tmp612 :shiftMask:shiftX
  1675 op sub *tmp613 7 *tmp612
  1676 op shl :shiftMask:keep :shiftMask:keep *tmp613
 
  1753 label *label451
  1754 set .drillX :findDrillLocationLocal:dx
  1755 set .drillY :findDrillLocationLocal:dy
-    * op equal *tmp622 :findDrillLocationLocal*retval false
-    * jump *label452 equal *tmp622 false
+ 1756 jump *label452 notEqual :findDrillLocationLocal*retval false
  1757 set :layoutThoriumDrill*retval false
  1758 jump *label450 always
  1759 jump *label453 always

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-118 instructions):
 
   231 jump *label64 notEqual *tmp124 false
   232 set *tmp98 false
   233 jump *label54 always
-    * jump *label65 always
   234 label *label64
   235 label *label65
   236 op sub *tmp128 :locateOreAway:x .coreX
 
   244 jump *label66 notEqual :locateOreAway:lastX :locateOreAway:x
   245 jump *label68 notEqual :locateOreAway:lastY :locateOreAway:y
   246 jump *label56 always
-    * jump *label69 always
   247 label *label68
   248 label *label69
-    * jump *label67 always
   249 label *label66
   250 label *label67
   251 jump *label70 lessThan :locateOreAway:coreDist 7
 
   269 jump *label78 greaterThanEq *tmp155 7
   270 set *tmp144 true
   271 jump *label74 always
-    * jump *label79 always
   272 label *label78
   273 label *label79
   274 label *label76
 
   286 printflush message1
   287 set *tmp98 true
   288 jump *label54 always
-    * jump *label81 always
   289 label *label80
   290 label *label81
-    * jump *label73 always
   291 label *label72
   292 label *label73
-    * jump *label71 always
   293 label *label70
   294 label *label71
   295 label *label56
 
   304 jump *label82 notEqual *tmp98 false
   305 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   306 jump *label45 always
-    * jump *label83 always
   307 label *label82
   308 label *label83
   309 jump *label84 lessThan :findDrillLocationLocal:limit 1000
   310 op add .mapSpots .mapSpots 1
-    * jump *label85 always
   311 label *label84
   312 label *label85
   313 set :moveTo.5:x :findDrillLocationLocal:oreX
 
   397 set :findDrillLocationLocal:diffX :updatePosition:dx
   398 set :findDrillLocationLocal:diffY :updatePosition:dy
   399 set :findBestPosition:best :updatePosition:value
-    * jump *label107 always
   400 label *label106
   401 label *label107
-    * jump *label105 always
   402 label *label104
   403 label *label105
   404 label *label103
 
   410 set :findDrillLocationLocal:diffX :updatePosition.1:dx
   411 set :findDrillLocationLocal:diffY :updatePosition.1:dy
   412 set :findBestPosition:best :updatePosition.1:value
-    * jump *label112 always
   413 label *label111
   414 label *label112
-    * jump *label110 always
   415 label *label109
   416 label *label110
   417 label *label108
 
   423 set :findDrillLocationLocal:diffX :updatePosition.2:dx
   424 set :findDrillLocationLocal:diffY :updatePosition.2:dy
   425 set :findBestPosition:best :updatePosition.2:value
-    * jump *label117 always
   426 label *label116
   427 label *label117
-    * jump *label115 always
   428 label *label114
   429 label *label115
   430 label *label113
 
   436 set :findDrillLocationLocal:diffX :updatePosition.3:dx
   437 set :findDrillLocationLocal:diffY :updatePosition.3:dy
   438 set :findBestPosition:best :updatePosition.3:value
-    * jump *label122 always
   439 label *label121
   440 label *label122
-    * jump *label120 always
   441 label *label119
   442 label *label120
   443 label *label118
 
   453 set :findDrillLocationLocal:diffX :updatePosition.4:dx
   454 set :findDrillLocationLocal:diffY :updatePosition.4:dy
   455 set :findBestPosition:best :updatePosition.4:value
-    * jump *label128 always
   456 label *label127
   457 label *label128
-    * jump *label126 always
   458 label *label125
   459 label *label126
   460 label *label124
 
   466 set :findDrillLocationLocal:diffX :updatePosition.5:dx
   467 set :findDrillLocationLocal:diffY :updatePosition.5:dy
   468 set :findBestPosition:best :updatePosition.5:value
-    * jump *label133 always
   469 label *label132
   470 label *label133
-    * jump *label131 always
   471 label *label130
   472 label *label131
   473 label *label129
 
   479 set :findDrillLocationLocal:diffX :updatePosition.6:dx
   480 set :findDrillLocationLocal:diffY :updatePosition.6:dy
   481 set :findBestPosition:best :updatePosition.6:value
-    * jump *label138 always
   482 label *label137
   483 label *label138
-    * jump *label136 always
   484 label *label135
   485 label *label136
   486 label *label134
 
   492 set :findDrillLocationLocal:diffX :updatePosition.7:dx
   493 set :findDrillLocationLocal:diffY :updatePosition.7:dy
   494 set :findBestPosition:best :updatePosition.7:value
-    * jump *label143 always
   495 label *label142
   496 label *label143
-    * jump *label141 always
   497 label *label140
   498 label *label141
   499 label *label139
 
   509 set :findDrillLocationLocal:diffX :updatePosition.8:dx
   510 set :findDrillLocationLocal:diffY :updatePosition.8:dy
   511 set :findBestPosition:best :updatePosition.8:value
-    * jump *label149 always
   512 label *label148
   513 label *label149
-    * jump *label147 always
   514 label *label146
   515 label *label147
   516 label *label145
 
   522 set :findDrillLocationLocal:diffX :updatePosition.9:dx
   523 set :findDrillLocationLocal:diffY :updatePosition.9:dy
   524 set :findBestPosition:best :updatePosition.9:value
-    * jump *label154 always
   525 label *label153
   526 label *label154
-    * jump *label152 always
   527 label *label151
   528 label *label152
   529 label *label150
 
   535 set :findDrillLocationLocal:diffX :updatePosition.10:dx
   536 set :findDrillLocationLocal:diffY :updatePosition.10:dy
   537 set :findBestPosition:best :updatePosition.10:value
-    * jump *label159 always
   538 label *label158
   539 label *label159
-    * jump *label157 always
   540 label *label156
   541 label *label157
   542 label *label155
 
   548 set :findDrillLocationLocal:diffX :updatePosition.11:dx
   549 set :findDrillLocationLocal:diffY :updatePosition.11:dy
   550 set :findBestPosition:best :updatePosition.11:value
-    * jump *label164 always
   551 label *label163
   552 label *label164
-    * jump *label162 always
   553 label *label161
   554 label *label162
   555 label *label160
 
   565 set :findDrillLocationLocal:diffX :updatePosition.12:dx
   566 set :findDrillLocationLocal:diffY :updatePosition.12:dy
   567 set :findBestPosition:best :updatePosition.12:value
-    * jump *label170 always
   568 label *label169
   569 label *label170
-    * jump *label168 always
   570 label *label167
   571 label *label168
   572 label *label166
 
   578 set :findDrillLocationLocal:diffX :updatePosition.13:dx
   579 set :findDrillLocationLocal:diffY :updatePosition.13:dy
   580 set :findBestPosition:best :updatePosition.13:value
-    * jump *label175 always
   581 label *label174
   582 label *label175
-    * jump *label173 always
   583 label *label172
   584 label *label173
   585 label *label171
 
   591 set :findDrillLocationLocal:diffX :updatePosition.14:dx
   592 set :findDrillLocationLocal:diffY :updatePosition.14:dy
   593 set :findBestPosition:best :updatePosition.14:value
-    * jump *label180 always
   594 label *label179
   595 label *label180
-    * jump *label178 always
   596 label *label177
   597 label *label178
   598 label *label176
 
   604 set :findDrillLocationLocal:diffX :updatePosition.15:dx
   605 set :findDrillLocationLocal:diffY :updatePosition.15:dy
   606 set :findBestPosition:best :updatePosition.15:value
-    * jump *label185 always
   607 label *label184
   608 label *label185
-    * jump *label183 always
   609 label *label182
   610 label *label183
   611 label *label181
 
   630 set :findDrillLocationLocal:diffX :updatePosition.16:dx
   631 set :findDrillLocationLocal:diffY :updatePosition.16:dy
   632 set :findBestPosition:best :updatePosition.16:value
-    * jump *label193 always
   633 label *label192
   634 label *label193
-    * jump *label191 always
   635 label *label190
   636 label *label191
   637 label *label189
 
   643 set :findDrillLocationLocal:diffX :updatePosition.17:dx
   644 set :findDrillLocationLocal:diffY :updatePosition.17:dy
   645 set :findBestPosition:best :updatePosition.17:value
-    * jump *label198 always
   646 label *label197
   647 label *label198
-    * jump *label196 always
   648 label *label195
   649 label *label196
   650 label *label194
 
   656 set :findDrillLocationLocal:diffX :updatePosition.18:dx
   657 set :findDrillLocationLocal:diffY :updatePosition.18:dy
   658 set :findBestPosition:best :updatePosition.18:value
-    * jump *label203 always
   659 label *label202
   660 label *label203
-    * jump *label201 always
   661 label *label200
   662 label *label201
   663 label *label199
 
   673 set :findDrillLocationLocal:diffX :updatePosition.19:dx
   674 set :findDrillLocationLocal:diffY :updatePosition.19:dy
   675 set :findBestPosition:best :updatePosition.19:value
-    * jump *label209 always
   676 label *label208
   677 label *label209
-    * jump *label207 always
   678 label *label206
   679 label *label207
   680 label *label205
 
   686 set :findDrillLocationLocal:diffX :updatePosition.20:dx
   687 set :findDrillLocationLocal:diffY :updatePosition.20:dy
   688 set :findBestPosition:best :updatePosition.20:value
-    * jump *label214 always
   689 label *label213
   690 label *label214
-    * jump *label212 always
   691 label *label211
   692 label *label212
   693 label *label210
 
   699 set :findDrillLocationLocal:diffX :updatePosition.21:dx
   700 set :findDrillLocationLocal:diffY :updatePosition.21:dy
   701 set :findBestPosition:best :updatePosition.21:value
-    * jump *label219 always
   702 label *label218
   703 label *label219
-    * jump *label217 always
   704 label *label216
   705 label *label217
   706 label *label215
 
   716 set :findDrillLocationLocal:diffX :updatePosition.22:dx
   717 set :findDrillLocationLocal:diffY :updatePosition.22:dy
   718 set :findBestPosition:best :updatePosition.22:value
-    * jump *label225 always
   719 label *label224
   720 label *label225
-    * jump *label223 always
   721 label *label222
   722 label *label223
   723 label *label221
 
   729 set :findDrillLocationLocal:diffX :updatePosition.23:dx
   730 set :findDrillLocationLocal:diffY :updatePosition.23:dy
   731 set :findBestPosition:best :updatePosition.23:value
-    * jump *label230 always
   732 label *label229
   733 label *label230
-    * jump *label228 always
   734 label *label227
   735 label *label228
   736 label *label226
 
   742 set :findDrillLocationLocal:diffX :updatePosition.24:dx
   743 set :findDrillLocationLocal:diffY :updatePosition.24:dy
   744 set :findBestPosition:best :updatePosition.24:value
-    * jump *label235 always
   745 label *label234
   746 label *label235
-    * jump *label233 always
   747 label *label232
   748 label *label233
   749 label *label231
 
   791 set :findDrillLocationLocal:diffX :updatePosition.25:dx
   792 set :findDrillLocationLocal:diffY :updatePosition.25:dy
   793 set :findBestPosition:best :updatePosition.25:value
-    * jump *label243 always
   794 label *label242
   795 label *label243
-    * jump *label241 always
   796 label *label240
   797 label *label241
   798 label *label239
 
   804 set :findDrillLocationLocal:diffX :updatePosition.26:dx
   805 set :findDrillLocationLocal:diffY :updatePosition.26:dy
   806 set :findBestPosition:best :updatePosition.26:value
-    * jump *label248 always
   807 label *label247
   808 label *label248
-    * jump *label246 always
   809 label *label245
   810 label *label246
   811 label *label244
 
   817 set :findDrillLocationLocal:diffX :updatePosition.27:dx
   818 set :findDrillLocationLocal:diffY :updatePosition.27:dy
   819 set :findBestPosition:best :updatePosition.27:value
-    * jump *label253 always
   820 label *label252
   821 label *label253
-    * jump *label251 always
   822 label *label250
   823 label *label251
   824 label *label249
 
   830 set :findDrillLocationLocal:diffX :updatePosition.28:dx
   831 set :findDrillLocationLocal:diffY :updatePosition.28:dy
   832 set :findBestPosition:best :updatePosition.28:value
-    * jump *label258 always
   833 label *label257
   834 label *label258
-    * jump *label256 always
   835 label *label255
   836 label *label256
   837 label *label254
 
   847 set :findDrillLocationLocal:diffX :updatePosition.29:dx
   848 set :findDrillLocationLocal:diffY :updatePosition.29:dy
   849 set :findBestPosition:best :updatePosition.29:value
-    * jump *label264 always
   850 label *label263
   851 label *label264
-    * jump *label262 always
   852 label *label261
   853 label *label262
   854 label *label260
 
   860 set :findDrillLocationLocal:diffX :updatePosition.30:dx
   861 set :findDrillLocationLocal:diffY :updatePosition.30:dy
   862 set :findBestPosition:best :updatePosition.30:value
-    * jump *label269 always
   863 label *label268
   864 label *label269
-    * jump *label267 always
   865 label *label266
   866 label *label267
   867 label *label265
 
   873 set :findDrillLocationLocal:diffX :updatePosition.31:dx
   874 set :findDrillLocationLocal:diffY :updatePosition.31:dy
   875 set :findBestPosition:best :updatePosition.31:value
-    * jump *label274 always
   876 label *label273
   877 label *label274
-    * jump *label272 always
   878 label *label271
   879 label *label272
   880 label *label270
 
   886 set :findDrillLocationLocal:diffX :updatePosition.32:dx
   887 set :findDrillLocationLocal:diffY :updatePosition.32:dy
   888 set :findBestPosition:best :updatePosition.32:value
-    * jump *label279 always
   889 label *label278
   890 label *label279
-    * jump *label277 always
   891 label *label276
   892 label *label277
   893 label *label275
 
   903 set :findDrillLocationLocal:diffX :updatePosition.33:dx
   904 set :findDrillLocationLocal:diffY :updatePosition.33:dy
   905 set :findBestPosition:best :updatePosition.33:value
-    * jump *label285 always
   906 label *label284
   907 label *label285
-    * jump *label283 always
   908 label *label282
   909 label *label283
   910 label *label281
 
   916 set :findDrillLocationLocal:diffX :updatePosition.34:dx
   917 set :findDrillLocationLocal:diffY :updatePosition.34:dy
   918 set :findBestPosition:best :updatePosition.34:value
-    * jump *label290 always
   919 label *label289
   920 label *label290
-    * jump *label288 always
   921 label *label287
   922 label *label288
   923 label *label286
 
   929 set :findDrillLocationLocal:diffX :updatePosition.35:dx
   930 set :findDrillLocationLocal:diffY :updatePosition.35:dy
   931 set :findBestPosition:best :updatePosition.35:value
-    * jump *label295 always
   932 label *label294
   933 label *label295
-    * jump *label293 always
   934 label *label292
   935 label *label293
   936 label *label291
 
   942 set :findDrillLocationLocal:diffX :updatePosition.36:dx
   943 set :findDrillLocationLocal:diffY :updatePosition.36:dy
   944 set :findBestPosition:best :updatePosition.36:value
-    * jump *label300 always
   945 label *label299
   946 label *label300
-    * jump *label298 always
   947 label *label297
   948 label *label298
   949 label *label296
 
   959 set :findDrillLocationLocal:diffX :updatePosition.37:dx
   960 set :findDrillLocationLocal:diffY :updatePosition.37:dy
   961 set :findBestPosition:best :updatePosition.37:value
-    * jump *label306 always
   962 label *label305
   963 label *label306
-    * jump *label304 always
   964 label *label303
   965 label *label304
   966 label *label302
 
   972 set :findDrillLocationLocal:diffX :updatePosition.38:dx
   973 set :findDrillLocationLocal:diffY :updatePosition.38:dy
   974 set :findBestPosition:best :updatePosition.38:value
-    * jump *label311 always
   975 label *label310
   976 label *label311
-    * jump *label309 always
   977 label *label308
   978 label *label309
   979 label *label307
 
   985 set :findDrillLocationLocal:diffX :updatePosition.39:dx
   986 set :findDrillLocationLocal:diffY :updatePosition.39:dy
   987 set :findBestPosition:best :updatePosition.39:value
-    * jump *label316 always
   988 label *label315
   989 label *label316
-    * jump *label314 always
   990 label *label313
   991 label *label314
   992 label *label312
 
   998 set :findDrillLocationLocal:diffX :updatePosition.40:dx
   999 set :findDrillLocationLocal:diffY :updatePosition.40:dy
  1000 set :findBestPosition:best :updatePosition.40:value
-    * jump *label321 always
  1001 label *label320
  1002 label *label321
-    * jump *label319 always
  1003 label *label318
  1004 label *label319
  1005 label *label317
 
  1017 set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
  1018 jump *label324 greaterThanEq :findDrillLocationLocal:limit 1000
  1019 set .mapSpots :findDrillLocationLocal:score
-    * jump *label325 always
  1020 label *label324
  1021 label *label325
  1022 jump *label326 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
 
  1043 sensor *tmp402 switch1 @enabled
  1044 jump *label332 notEqual *tmp402 false
  1045 label *label334
-    * jump *label331 always
  1046 label *label330
  1047 label *label331
  1048 label *label329
 
  1050 ucontrol unbind
  1051 set :findDrillLocationLocal*retval true
  1052 jump *label45 always
-    * jump *label327 always
  1053 label *label326
  1054 label *label327
-    * jump *label323 always
  1055 label *label322
  1056 label *label323
  1057 jump *label335 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
  1058 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1059 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1060 set :findDrillLocationLocal:best :findDrillLocationLocal:score
-    * jump *label336 always
  1061 label *label335
  1062 label *label336
  1063 jump *label337 greaterThan :findDrillLocationLocal:score :findDrillLocationLocal:last
  1064 jump *label93 always
-    * jump *label338 always
  1065 label *label337
  1066 label *label338
  1067 set :findDrillLocationLocal:last :findDrillLocationLocal:score
 
  1082 op min *tmp421 *tmp418 *tmp420
  1083 jump *label341 greaterThanEq *tmp421 7
  1084 jump *label93 always
-    * jump *label342 always
  1085 label *label341
  1086 label *label342
  1087 label *label92
 
  1111 sensor *tmp438 switch1 @enabled
  1112 jump *label349 notEqual *tmp438 false
  1113 label *label351
-    * jump *label348 always
  1114 label *label347
  1115 label *label348
  1116 label *label346
  1117 label *label345
-    * jump *label344 always
  1118 label *label343
  1119 label *label344
  1120 label *label52
 
  1190 op add *tmp466 24 *tmp465
  1191 op add :findPossiblePlacement*retval *tmp466 :findPossiblePlacement:x
  1192 jump *label371 always
-    * jump *label379 always
  1193 label *label378
  1194 label *label379
  1195 op sub *tmp468 3 :findPossiblePlacement:width
  1196 jump *label380 lessThanEq :findPossiblePlacement:x *tmp468
  1197 jump *label377 always
-    * jump *label381 always
  1198 label *label380
  1199 label *label381
  1200 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
 
  1205 op sub *tmp471 3 :findPossiblePlacement:height
  1206 jump *label382 lessThanEq :findPossiblePlacement:y *tmp471
  1207 jump *label374 always
-    * jump *label383 always
  1208 label *label382
  1209 label *label383
  1210 label *label373
 
  1232 jump *label388 greaterThanEq :tryPlaceGenerator:shift 0
  1233 set :tryPlaceGenerator*retval false
  1234 jump *label384 always
-    * jump *label389 always
  1235 label *label388
  1236 label *label389
  1237 op add *tmp479 :tryPlaceGenerator:centerX 0.5
 
  1280 jump *label392 greaterThanEq :tryPlaceGenerator:shift 0
  1281 set :tryPlaceGenerator*retval false
  1282 jump *label384 always
-    * jump *label393 always
  1283 label *label392
  1284 label *label393
  1285 op add .nodeX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
 
  1299 jump *label395 greaterThanEq :tryPlaceGenerator:shift 0
  1300 set :tryPlaceGenerator*retval false
  1301 jump *label384 always
-    * jump *label396 always
  1302 label *label395
  1303 label *label396
  1304 op add .panelX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
 
  1318 jump *label398 greaterThanEq :tryPlaceGenerator:shift 0
  1319 set :tryPlaceGenerator*retval false
  1320 jump *label384 always
-    * jump *label399 always
  1321 label *label398
  1322 label *label399
  1323 op add .batteryX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
 
  1422 sensor *tmp554 switch1 @enabled
  1423 jump *label414 notEqual *tmp554 false
  1424 label *label416
-    * jump *label413 always
  1425 label *label412
  1426 label *label413
  1427 label *label411
  1428 end
-    * jump *label410 always
  1429 label *label409
  1430 label *label410
  1431 label *label408
 
  1448 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp562
  1449 op shl *tmp563 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
  1450 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:cornersMask *tmp563
-    * jump *label419 always
  1451 label *label418
  1452 label *label419
  1453 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
 
  1467 op add .containerY *tmp569 :layoutThoriumDrillAtLocation:r
  1468 op shl *tmp571 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
  1469 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp571
-    * jump *label422 always
  1470 label *label421
  1471 label *label422
  1472 set :createFixedMatrix.3:row0 0b1111
 
  1500 jump *label426 equal :tryPlaceGenerator*retval false
  1501 set :layoutThoriumDrillAtLocation*retval true
  1502 jump *label400 always
-    * jump *label427 always
  1503 label *label426
  1504 label *label427
  1505 set :layoutThoriumDrillAtLocation:sx 3
 
  1540 jump *label437 equal *tmp595 false
  1541 set *tmp590 0
  1542 jump *label436 always
-    * jump *label438 always
  1543 label *label437
  1544 label *label438
  1545 op mul *tmp597 7 :shiftMask:shiftY
 
  1561 op abs *tmp612 :shiftMask:shiftX
  1562 op sub *tmp613 7 *tmp612
  1563 op shl :shiftMask:keep :shiftMask:keep *tmp613
-    * jump *label444 always
  1564 label *label443
  1565 label *label444
  1566 op shl *tmp614 :shiftMask:keep 7
 
  1570 op shl *tmp616 :shiftMask:keep 21
  1571 op or :shiftMask:keep :shiftMask:keep *tmp616
  1572 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
-    * jump *label442 always
  1573 label *label441
  1574 label *label442
  1575 set *tmp590 :shiftMask:mask
 
  1591 jump *label446 equal :tryPlaceGenerator*retval false
  1592 set :layoutThoriumDrillAtLocation*retval true
  1593 jump *label400 always
-    * jump *label447 always
  1594 label *label446
  1595 label *label447
  1596 label *label429
 
  1640 jump *label452 notEqual :findDrillLocationLocal*retval false
  1641 set :layoutThoriumDrill*retval false
  1642 jump *label450 always
-    * jump *label453 always
  1643 label *label452
  1644 label *label453
  1645 setaddr :layoutThoriumDrillAtLocation*retaddr *label454 (h:*label454)
 
  1690 op sub :printMask:r :printMask:r 1
  1691 jump *label459 always
  1692 label *label461
-    * jump *label458 always
  1693 label *label457
  1694 label *label458
  1695 label *label456

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1:
 
    31 set *tmp3 :spotValue.1:result
    32 label *label19
    33 set :computeRowValues:x2 *tmp3
-    * op add :spotValue.2:x :computeRowValues:x 0
+   34 set :spotValue.2:x :computeRowValues:x
    35 set :spotValue.2:y :computeRowValues:y
    36 set :spotValue.2:ore :computeRowValues:ore
    37 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
 
   351 call *label6 *invalid :computeRowValues*retval (m:*label96) (h:*label96)
   352 label *label96
   353 set :findBestPosition:y2 :computeRowValues*retval
-    * op add *tmp178 :findBestPosition:y 0
+  354 set *tmp178 :findBestPosition:y
   355 set :computeRowValues:x :findBestPosition:x
   356 set :computeRowValues:y *tmp178
   357 set :computeRowValues:ore :findBestPosition:ore
 
  1352 set :createFixedMatrix:row4 0b0011100
  1353 set :createFixedMatrix:row5 0b0000000
  1354 set :createFixedMatrix:row6 0b0000000
-    * op shl *tmp518 :createFixedMatrix:row0 0
+ 1355 set *tmp518 :createFixedMatrix:row0
  1356 op shl *tmp519 :createFixedMatrix:row1 7
  1357 op or *tmp520 *tmp518 *tmp519
  1358 op shl *tmp521 :createFixedMatrix:row2 14
 
  1374 set :createFixedMatrix.1:row4 0b0011100
  1375 set :createFixedMatrix.1:row5 0b0000000
  1376 set :createFixedMatrix.1:row6 0b1000001
-    * op shl *tmp533 :createFixedMatrix.1:row0 0
+ 1377 set *tmp533 :createFixedMatrix.1:row0
  1378 op shl *tmp534 :createFixedMatrix.1:row1 7
  1379 op or *tmp535 *tmp533 *tmp534
  1380 op shl *tmp536 :createFixedMatrix.1:row2 14
 
  1391 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp532
  1392 set :createFixedMatrix.2:row0 0b11
  1393 set :createFixedMatrix.2:row1 0b11
-    * op shl *tmp548 :createFixedMatrix.2:row0 0
+ 1394 set *tmp548 :createFixedMatrix.2:row0
  1395 op shl *tmp549 :createFixedMatrix.2:row1 7
  1396 op or *tmp547 *tmp548 *tmp549
  1397 label *label404
 
  1471 label *label422
  1472 set :createFixedMatrix.3:row0 0b1111
  1473 set :createFixedMatrix.3:row1 0b1111
-    * op shl *tmp573 :createFixedMatrix.3:row0 0
+ 1474 set *tmp573 :createFixedMatrix.3:row0
  1475 op shl *tmp574 :createFixedMatrix.3:row1 7
  1476 op or *tmp572 *tmp573 *tmp574
  1477 label *label423
 
  1480 set :createFixedMatrix.4:row1 0b11
  1481 set :createFixedMatrix.4:row2 0b11
  1482 set :createFixedMatrix.4:row3 0b11
-    * op shl *tmp577 :createFixedMatrix.4:row0 0
+ 1483 set *tmp577 :createFixedMatrix.4:row0
  1484 op shl *tmp578 :createFixedMatrix.4:row1 7
  1485 op or *tmp579 *tmp577 *tmp578
  1486 op shl *tmp580 :createFixedMatrix.4:row2 14

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-28 instructions):
 
    20 select :spotValue:result notEqual solid false 0.09803921568627451 value
    21 set *tmp1 :spotValue:result
    22 label *label18
-    * set :computeRowValues:x1 *tmp1
+   23 set :computeRowValues:x1 :spotValue:result
    24 op sub :spotValue.1:x :computeRowValues:x 1
    25 set :spotValue.1:y :computeRowValues:y
    26 set :spotValue.1:ore :computeRowValues:ore
 
    30 select :spotValue.1:result notEqual solid false 0.09803921568627451 value
    31 set *tmp3 :spotValue.1:result
    32 label *label19
-    * set :computeRowValues:x2 *tmp3
+   33 set :computeRowValues:x2 :spotValue.1:result
    34 set :spotValue.2:x :computeRowValues:x
    35 set :spotValue.2:y :computeRowValues:y
    36 set :spotValue.2:ore :computeRowValues:ore
 
    40 select :spotValue.2:result notEqual solid false 0.09803921568627451 value
    41 set *tmp5 :spotValue.2:result
    42 label *label20
-    * set :computeRowValues:x3 *tmp5
+   43 set :computeRowValues:x3 :spotValue.2:result
    44 op add :spotValue.3:x :computeRowValues:x 1
    45 set :spotValue.3:y :computeRowValues:y
    46 set :spotValue.3:ore :computeRowValues:ore
 
    50 select :spotValue.3:result notEqual solid false 0.09803921568627451 value
    51 set *tmp7 :spotValue.3:result
    52 label *label21
-    * set :computeRowValues:x4 *tmp7
+   53 set :computeRowValues:x4 :spotValue.3:result
    54 op add :spotValue.4:x :computeRowValues:x 2
    55 set :spotValue.4:y :computeRowValues:y
    56 set :spotValue.4:ore :computeRowValues:ore
 
    60 select :spotValue.4:result notEqual solid false 0.09803921568627451 value
    61 set *tmp9 :spotValue.4:result
    62 label *label22
-    * set :computeRowValues:x5 *tmp9
+   63 set :computeRowValues:x5 :spotValue.4:result
    64 jump *label23 notEqual :computeRowValues:size 2
-    * op add *tmp12 :computeRowValues:x1 :computeRowValues:x2
-    * op add *tmp13 :computeRowValues:x2 :computeRowValues:x3
-    * op add *tmp14 :computeRowValues:x3 :computeRowValues:x4
-    * op add *tmp15 :computeRowValues:x4 :computeRowValues:x5
+   65 op add *tmp12 *tmp1 *tmp3
+   66 op add *tmp13 *tmp3 *tmp5
+   67 op add *tmp14 *tmp5 *tmp7
+   68 op add *tmp15 *tmp7 *tmp9
    69 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
    70 jump *label17 always
-    * set *tmp11 null
    71 jump *label24 always
    72 label *label23
    73 jump *label25 notEqual :computeRowValues:size 3
-    * op add *tmp19 :computeRowValues:x2 :computeRowValues:x3
-    * op add *tmp20 :computeRowValues:x1 *tmp19
-    * op add *tmp21 :computeRowValues:x2 :computeRowValues:x3
-    * op add *tmp22 *tmp21 :computeRowValues:x4
-    * op add *tmp23 :computeRowValues:x3 :computeRowValues:x4
-    * op add *tmp24 *tmp23 :computeRowValues:x5
+   74 op add *tmp19 *tmp3 *tmp5
+   75 op add *tmp20 *tmp1 *tmp19
+   76 op add *tmp21 *tmp3 *tmp5
+   77 op add *tmp22 *tmp19 *tmp7
+   78 op add *tmp23 *tmp5 *tmp7
+   79 op add *tmp24 *tmp23 *tmp9
    80 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
    81 jump *label17 always
-    * set *tmp18 null
    82 jump *label26 always
    83 label *label25
    84 op sub :spotValue.5:x :computeRowValues:x 3
 
    90 select :spotValue.5:result notEqual solid false 0.09803921568627451 value
    91 set *tmp27 :spotValue.5:result
    92 label *label27
-    * set :computeRowValues:x0 *tmp27
+   93 set :computeRowValues:x0 :spotValue.5:result
    94 op add :spotValue.6:x :computeRowValues:x 3
    95 set :spotValue.6:y :computeRowValues:y
    96 set :spotValue.6:ore :computeRowValues:ore
 
   100 select :spotValue.6:result notEqual solid false 0.09803921568627451 value
   101 set *tmp29 :spotValue.6:result
   102 label *label28
-    * set :computeRowValues:x6 *tmp29
-    * op add *tmp30 :computeRowValues:x1 :computeRowValues:x2
-    * op add *tmp31 *tmp30 :computeRowValues:x3
-    * op add *tmp32 :computeRowValues:x0 *tmp31
+  103 set :computeRowValues:x6 :spotValue.6:result
+  104 op add *tmp30 *tmp1 *tmp3
+  105 op add *tmp31 *tmp30 *tmp5
+  106 op add *tmp32 *tmp27 *tmp31
   107 op min *tmp33 0.09803921568627451 *tmp32
-    * op add *tmp34 :computeRowValues:x1 :computeRowValues:x2
-    * op add *tmp35 *tmp34 :computeRowValues:x3
-    * op add *tmp36 *tmp35 :computeRowValues:x4
+  108 op add *tmp34 *tmp1 *tmp3
+  109 op add *tmp35 *tmp30 *tmp5
+  110 op add *tmp36 *tmp31 *tmp7
   111 op min *tmp37 0.09803921568627451 *tmp36
-    * op add *tmp38 :computeRowValues:x3 :computeRowValues:x4
-    * op add *tmp39 *tmp38 :computeRowValues:x5
-    * op add *tmp40 :computeRowValues:x2 *tmp39
+  112 op add *tmp38 *tmp5 *tmp7
+  113 op add *tmp39 *tmp38 *tmp9
+  114 op add *tmp40 *tmp3 *tmp39
   115 op min *tmp41 0.09803921568627451 *tmp40
-    * op add *tmp42 :computeRowValues:x3 :computeRowValues:x4
-    * op add *tmp43 *tmp42 :computeRowValues:x5
-    * op add *tmp44 *tmp43 :computeRowValues:x6
+  116 op add *tmp42 *tmp5 *tmp7
+  117 op add *tmp43 *tmp38 *tmp9
+  118 op add *tmp44 *tmp39 *tmp29
   119 op min *tmp45 0.09803921568627451 *tmp44
   120 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
   121 jump *label17 always
-    * set *tmp18 null
   122 label *label26
-    * set *tmp11 *tmp18
+  123 set *tmp11 null
   124 label *label24
-    * set :computeRowValues*retval *tmp11
+  125 set :computeRowValues*retval null
   126 label *label17
   127 return :computeRowValues*retaddr
   128 end
 
   135 set :findDrillLocationLocal:dy :findDrillLocationLocal:capacity
   136 set :findDrillLocationLocal:dx :findDrillLocationLocal:dy
   137 set .mapSpots :findDrillLocationLocal:dx
-    * op sub *tmp83 @mapw .coreX
-    * op sub *tmp84 @maph .coreY
-    * op max *tmp85 .coreX .coreY
+  138 op sub *tmp83 @mapw :findDrillLocationLocal:x
+  139 op sub *tmp84 @maph :findDrillLocationLocal:y
+  140 op max *tmp85 :findDrillLocationLocal:x :findDrillLocationLocal:y
   141 op max *tmp85 *tmp85 *tmp83
   142 op max *tmp85 *tmp85 *tmp84
   143 set :findDrillLocationLocal:distanceLimit *tmp85
   144 set .mapAction "Locating ore..."
   145 set .angle 0
-    * set .mapProgress .angle
-    * set :moveTo.2:x .coreX
-    * set :moveTo.2:y .coreY
-    * set *tmp86 :moveTo.2:x
-    * set *tmp87 :moveTo.2:y
-    * set :moveTo.3:x *tmp86
-    * set :moveTo.3:y *tmp87
+  146 set .mapProgress 0
+  147 set :moveTo.2:x :findDrillLocationLocal:x
+  148 set :moveTo.2:y :findDrillLocationLocal:y
+  149 set *tmp86 .coreX
+  150 set *tmp87 .coreY
+  151 set :moveTo.3:x :moveTo.2:x
+  152 set :moveTo.3:y :moveTo.2:y
   153 set :moveTo.3:radius 6
   154 label *label48
-    * ucontrol within :moveTo.3:x :moveTo.3:y :moveTo.3:radius *tmp88
+  155 ucontrol within *tmp86 *tmp87 6 *tmp88
   156 jump *label50 notEqual *tmp88 false
-    * op sub *tmp90 :moveTo.3:radius 0.5
-    * ucontrol approach :moveTo.3:x :moveTo.3:y *tmp90
+  157 op sub *tmp90 6 0.5
+  158 ucontrol approach *tmp86 *tmp87 5.5
   159 label *label49
   160 jump *label48 always
   161 label *label50
   162 label *label47
   163 label *label46
-    * op div *tmp91 :findDrillLocationLocal:distanceLimit 3.8197185279121366
+  164 op div *tmp91 *tmp85 3.8197185279121366
   165 op pow .mapTotal *tmp91 2
   166 set :findDrillLocationLocal:oreX 0
   167 set :findDrillLocationLocal:oreY 0
 
   184 op max .angle .angle @pi
   185 op mul .mapProgress .angle .angle
   186 label *label55
-    * jump *label57 greaterThanEq :locateOreAway:distance :locateOreAway:distanceLimit
+  187 jump *label57 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   188 op div :locateOreAway:a .angle @degToRad
   189 op sin *tmp104 :locateOreAway:a
   190 op mul *tmp105 *tmp104 :locateOreAway:distance
 
   193 set :limit:value *tmp106
   194 set :limit:low 5
   195 set :limit:high *tmp107
-    * op max *tmp109 :limit:value :limit:low
-    * op min *tmp108 *tmp109 :limit:high
+  196 op max *tmp109 *tmp106 5
+  197 op min *tmp108 *tmp109 *tmp107
   198 label *label58
   199 set :locateOreAway:lx *tmp108
   200 op cos *tmp111 :locateOreAway:a
 
   204 set :limit.1:value *tmp113
   205 set :limit.1:low 5
   206 set :limit.1:high *tmp114
-    * op max *tmp116 :limit.1:value :limit.1:low
-    * op min *tmp115 *tmp116 :limit.1:high
+  207 op max *tmp116 *tmp113 5
+  208 op min *tmp115 *tmp116 *tmp114
   209 label *label59
   210 set :locateOreAway:ly *tmp115
-    * set :moveTo.4:x :locateOreAway:lx
-    * set :moveTo.4:y :locateOreAway:ly
+  211 set :moveTo.4:x *tmp108
+  212 set :moveTo.4:y *tmp115
   213 set :moveTo.4:radius 5
   214 label *label61
-    * ucontrol within :moveTo.4:x :moveTo.4:y :moveTo.4:radius *tmp118
+  215 ucontrol within :locateOreAway:lx :locateOreAway:ly 5 *tmp118
   216 jump *label63 notEqual *tmp118 false
-    * op sub *tmp120 :moveTo.4:radius 0.5
-    * ucontrol approach :moveTo.4:x :moveTo.4:y *tmp120
+  217 op sub *tmp120 5 0.5
+  218 ucontrol approach :locateOreAway:lx :locateOreAway:ly 4.5
   219 label *label62
   220 jump *label61 always
   221 label *label63
 
   224 op add .angle .angle *tmp121
   225 op mul .mapProgress .angle .angle
   226 op mul :locateOreAway:distance 3.8197185279121366 .angle
-    * ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp124 0
+  227 ulocate ore core true :findDrillLocationLocal:item :locateOreAway:x :locateOreAway:y *tmp124 0
   228 jump *label64 notEqual *tmp124 false
   229 set *tmp98 false
   230 jump *label54 always
 
   235 op sub *tmp130 :locateOreAway:y .coreY
   236 op abs *tmp131 *tmp130
   237 op max :locateOreAway:coreDist *tmp129 *tmp131
-    * op sub *tmp133 :locateOreAway:x :locateOreAway:lx
-    * op sub *tmp134 :locateOreAway:y :locateOreAway:ly
+  238 op sub *tmp133 :locateOreAway:x *tmp108
+  239 op sub *tmp134 :locateOreAway:y *tmp115
   240 op len :locateOreAway:unitDist *tmp133 *tmp134
   241 jump *label66 notEqual :locateOreAway:lastX :locateOreAway:x
   242 jump *label68 notEqual :locateOreAway:lastY :locateOreAway:y
 
   260 read :visited:lx bank1 *tmp147
   261 op add *tmp150 :visited:index 3
   262 read :visited:ly bank1 *tmp150
-    * op sub *tmp153 :visited:x :visited:lx
-    * op sub *tmp154 :visited:y :visited:ly
+  263 op sub *tmp153 :locateOreAway:x :visited:lx
+  264 op sub *tmp154 :locateOreAway:y :visited:ly
   265 op len *tmp155 *tmp153 *tmp154
   266 jump *label78 greaterThanEq *tmp155 7
   267 set *tmp144 true
 
   274 label *label77
   275 set *tmp144 false
   276 jump *label74 always
-    * set *tmp144 null
   277 label *label74
   278 jump *label80 notEqual *tmp144 false
-    * op div *tmp160 7.639437055824273 :locateOreAway:distance
+  279 op div *tmp160 2 .angle
   280 op add .angle .angle *tmp160
   281 op mul .mapProgress .angle .angle
   282 printflush message1
 
   293 label *label57
   294 set *tmp98 false
   295 jump *label54 always
-    * set *tmp98 null
   296 label *label54
   297 set :findDrillLocationLocal:oreX :locateOreAway:x
   298 set :findDrillLocationLocal:oreY :locateOreAway:y
 
   305 op add .mapSpots .mapSpots 1
   306 label *label84
   307 label *label85
-    * set :moveTo.5:x :findDrillLocationLocal:oreX
-    * set :moveTo.5:y :findDrillLocationLocal:oreY
-    * set *tmp168 :moveTo.5:x
-    * set *tmp169 :moveTo.5:y
-    * set :moveTo.6:x *tmp168
-    * set :moveTo.6:y *tmp169
+  308 set :moveTo.5:x :locateOreAway:x
+  309 set :moveTo.5:y :locateOreAway:y
+  310 set *tmp168 :findDrillLocationLocal:oreX
+  311 set *tmp169 :findDrillLocationLocal:oreY
+  312 set :moveTo.6:x :moveTo.5:x
+  313 set :moveTo.6:y :moveTo.5:y
   314 set :moveTo.6:radius 6
   315 label *label88
-    * ucontrol within :moveTo.6:x :moveTo.6:y :moveTo.6:radius *tmp170
+  316 ucontrol within *tmp168 *tmp169 6 *tmp170
   317 jump *label90 notEqual *tmp170 false
-    * op sub *tmp172 :moveTo.6:radius 0.5
-    * ucontrol approach :moveTo.6:x :moveTo.6:y *tmp172
+  318 op sub *tmp172 6 0.5
+  319 ucontrol approach *tmp168 *tmp169 5.5
   320 label *label89
   321 jump *label88 always
   322 label *label90
 
   328 set :findBestPosition:y :findDrillLocationLocal:oreY
   329 set :findBestPosition:ore :findDrillLocationLocal:ore
   330 set :findBestPosition:size :findDrillLocationLocal:size
-    * op sub *tmp174 :findBestPosition:y 2
-    * set :computeRowValues:x :findBestPosition:x
+  331 op sub *tmp174 :findDrillLocationLocal:oreY 2
+  332 set :computeRowValues:x :findDrillLocationLocal:oreX
   333 set :computeRowValues:y *tmp174
-    * set :computeRowValues:ore :findBestPosition:ore
-    * set :computeRowValues:size :findBestPosition:size
+  334 set :computeRowValues:ore :findDrillLocationLocal:ore
+  335 set :computeRowValues:size :findDrillLocationLocal:size
   336 setaddr :computeRowValues*retaddr *label95 (h:*label95)
   337 call *label6 *invalid :computeRowValues*retval (m:*label95) (h:*label95)
   338 label *label95
 
   348 set :findBestPosition:y2 :computeRowValues*retval
   349 set *tmp178 :findBestPosition:y
   350 set :computeRowValues:x :findBestPosition:x
-    * set :computeRowValues:y *tmp178
+  351 set :computeRowValues:y :findBestPosition:y
   352 set :computeRowValues:ore :findBestPosition:ore
   353 set :computeRowValues:size :findBestPosition:size
   354 setaddr :computeRowValues*retaddr *label97 (h:*label97)
 
   380 op add :findBestPosition:row1 :findBestPosition:y1 :findBestPosition:y2
   381 op add :findBestPosition:row2 :findBestPosition:y2 :findBestPosition:y3
   382 op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
-    * op add :findBestPosition:row4 :findBestPosition:y4 :findBestPosition:y5
+  383 op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
   384 set :updateRowPositions2x2:dy -1.5
   385 set :updateRowPositions2x2:rowSum :findBestPosition:row1
-    * unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :updateRowPositions2x2:rowSum
+  386 unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :findBestPosition:row1
   387 set :updatePosition:dx -1.5
-    * set :updatePosition:dy :updateRowPositions2x2:dy
+  388 set :updatePosition:dy -1.5
   389 set :updatePosition:value :updateRowPositions2x2:col1
-    * jump *label104 greaterThanEq :updatePosition:value 0.0784313725490196
-    * jump *label106 lessThanEq :updatePosition:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition:dx
-    * set :findDrillLocationLocal:diffY :updatePosition:dy
-    * set :findBestPosition:best :updatePosition:value
+  390 jump *label104 greaterThanEq :updateRowPositions2x2:col1 0.0784313725490196
+  391 jump *label106 lessThanEq :updateRowPositions2x2:col1 0
+  392 set :findDrillLocationLocal:diffX -1.5
+  393 set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  394 set :findBestPosition:best :updateRowPositions2x2:col1
   395 label *label106
   396 label *label107
   397 label *label104
   398 label *label105
   399 label *label103
   400 set :updatePosition.1:dx -0.5
-    * set :updatePosition.1:dy :updateRowPositions2x2:dy
+  401 set :updatePosition.1:dy -1.5
   402 set :updatePosition.1:value :updateRowPositions2x2:col2
-    * jump *label109 greaterThanEq :updatePosition.1:value 0.0784313725490196
-    * jump *label111 lessThanEq :updatePosition.1:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.1:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.1:dy
-    * set :findBestPosition:best :updatePosition.1:value
+  403 jump *label109 greaterThanEq :updateRowPositions2x2:col2 0.0784313725490196
+  404 jump *label111 lessThanEq :updateRowPositions2x2:col2 :findBestPosition:best
+  405 set :findDrillLocationLocal:diffX -0.5
+  406 set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  407 set :findBestPosition:best :updateRowPositions2x2:col2
   408 label *label111
   409 label *label112
   410 label *label109
   411 label *label110
   412 label *label108
   413 set :updatePosition.2:dx 0.5
-    * set :updatePosition.2:dy :updateRowPositions2x2:dy
+  414 set :updatePosition.2:dy -1.5
   415 set :updatePosition.2:value :updateRowPositions2x2:col3
-    * jump *label114 greaterThanEq :updatePosition.2:value 0.0784313725490196
-    * jump *label116 lessThanEq :updatePosition.2:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.2:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.2:dy
-    * set :findBestPosition:best :updatePosition.2:value
+  416 jump *label114 greaterThanEq :updateRowPositions2x2:col3 0.0784313725490196
+  417 jump *label116 lessThanEq :updateRowPositions2x2:col3 :findBestPosition:best
+  418 set :findDrillLocationLocal:diffX 0.5
+  419 set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  420 set :findBestPosition:best :updateRowPositions2x2:col3
   421 label *label116
   422 label *label117
   423 label *label114
   424 label *label115
   425 label *label113
   426 set :updatePosition.3:dx 1.5
-    * set :updatePosition.3:dy :updateRowPositions2x2:dy
+  427 set :updatePosition.3:dy -1.5
   428 set :updatePosition.3:value :updateRowPositions2x2:col4
-    * jump *label119 greaterThanEq :updatePosition.3:value 0.0784313725490196
-    * jump *label121 lessThanEq :updatePosition.3:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.3:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.3:dy
-    * set :findBestPosition:best :updatePosition.3:value
+  429 jump *label119 greaterThanEq :updateRowPositions2x2:col4 0.0784313725490196
+  430 jump *label121 lessThanEq :updateRowPositions2x2:col4 :findBestPosition:best
+  431 set :findDrillLocationLocal:diffX 1.5
+  432 set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  433 set :findBestPosition:best :updateRowPositions2x2:col4
   434 label *label121
   435 label *label122
   436 label *label119
 
   439 label *label102
   440 set :updateRowPositions2x2.1:dy -0.5
   441 set :updateRowPositions2x2.1:rowSum :findBestPosition:row2
-    * unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :updateRowPositions2x2.1:rowSum
+  442 unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :findBestPosition:row2
   443 set :updatePosition.4:dx -1.5
-    * set :updatePosition.4:dy :updateRowPositions2x2.1:dy
+  444 set :updatePosition.4:dy -0.5
   445 set :updatePosition.4:value :updateRowPositions2x2.1:col1
-    * jump *label125 greaterThanEq :updatePosition.4:value 0.0784313725490196
-    * jump *label127 lessThanEq :updatePosition.4:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.4:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.4:dy
-    * set :findBestPosition:best :updatePosition.4:value
+  446 jump *label125 greaterThanEq :updateRowPositions2x2.1:col1 0.0784313725490196
+  447 jump *label127 lessThanEq :updateRowPositions2x2.1:col1 :findBestPosition:best
+  448 set :findDrillLocationLocal:diffX -1.5
+  449 set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  450 set :findBestPosition:best :updateRowPositions2x2.1:col1
   451 label *label127
   452 label *label128
   453 label *label125
   454 label *label126
   455 label *label124
   456 set :updatePosition.5:dx -0.5
-    * set :updatePosition.5:dy :updateRowPositions2x2.1:dy
+  457 set :updatePosition.5:dy -0.5
   458 set :updatePosition.5:value :updateRowPositions2x2.1:col2
-    * jump *label130 greaterThanEq :updatePosition.5:value 0.0784313725490196
-    * jump *label132 lessThanEq :updatePosition.5:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.5:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.5:dy
-    * set :findBestPosition:best :updatePosition.5:value
+  459 jump *label130 greaterThanEq :updateRowPositions2x2.1:col2 0.0784313725490196
+  460 jump *label132 lessThanEq :updateRowPositions2x2.1:col2 :findBestPosition:best
+  461 set :findDrillLocationLocal:diffX -0.5
+  462 set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  463 set :findBestPosition:best :updateRowPositions2x2.1:col2
   464 label *label132
   465 label *label133
   466 label *label130
   467 label *label131
   468 label *label129
   469 set :updatePosition.6:dx 0.5
-    * set :updatePosition.6:dy :updateRowPositions2x2.1:dy
+  470 set :updatePosition.6:dy -0.5
   471 set :updatePosition.6:value :updateRowPositions2x2.1:col3
-    * jump *label135 greaterThanEq :updatePosition.6:value 0.0784313725490196
-    * jump *label137 lessThanEq :updatePosition.6:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.6:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.6:dy
-    * set :findBestPosition:best :updatePosition.6:value
+  472 jump *label135 greaterThanEq :updateRowPositions2x2.1:col3 0.0784313725490196
+  473 jump *label137 lessThanEq :updateRowPositions2x2.1:col3 :findBestPosition:best
+  474 set :findDrillLocationLocal:diffX 0.5
+  475 set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  476 set :findBestPosition:best :updateRowPositions2x2.1:col3
   477 label *label137
   478 label *label138
   479 label *label135
   480 label *label136
   481 label *label134
   482 set :updatePosition.7:dx 1.5
-    * set :updatePosition.7:dy :updateRowPositions2x2.1:dy
+  483 set :updatePosition.7:dy -0.5
   484 set :updatePosition.7:value :updateRowPositions2x2.1:col4
-    * jump *label140 greaterThanEq :updatePosition.7:value 0.0784313725490196
-    * jump *label142 lessThanEq :updatePosition.7:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.7:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.7:dy
-    * set :findBestPosition:best :updatePosition.7:value
+  485 jump *label140 greaterThanEq :updateRowPositions2x2.1:col4 0.0784313725490196
+  486 jump *label142 lessThanEq :updateRowPositions2x2.1:col4 :findBestPosition:best
+  487 set :findDrillLocationLocal:diffX 1.5
+  488 set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  489 set :findBestPosition:best :updateRowPositions2x2.1:col4
   490 label *label142
   491 label *label143
   492 label *label140
 
   495 label *label123
   496 set :updateRowPositions2x2.2:dy 0.5
   497 set :updateRowPositions2x2.2:rowSum :findBestPosition:row3
-    * unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :updateRowPositions2x2.2:rowSum
+  498 unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :findBestPosition:row3
   499 set :updatePosition.8:dx -1.5
-    * set :updatePosition.8:dy :updateRowPositions2x2.2:dy
+  500 set :updatePosition.8:dy 0.5
   501 set :updatePosition.8:value :updateRowPositions2x2.2:col1
-    * jump *label146 greaterThanEq :updatePosition.8:value 0.0784313725490196
-    * jump *label148 lessThanEq :updatePosition.8:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.8:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.8:dy
-    * set :findBestPosition:best :updatePosition.8:value
+  502 jump *label146 greaterThanEq :updateRowPositions2x2.2:col1 0.0784313725490196
+  503 jump *label148 lessThanEq :updateRowPositions2x2.2:col1 :findBestPosition:best
+  504 set :findDrillLocationLocal:diffX -1.5
+  505 set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  506 set :findBestPosition:best :updateRowPositions2x2.2:col1
   507 label *label148
   508 label *label149
   509 label *label146
   510 label *label147
   511 label *label145
   512 set :updatePosition.9:dx -0.5
-    * set :updatePosition.9:dy :updateRowPositions2x2.2:dy
+  513 set :updatePosition.9:dy 0.5
   514 set :updatePosition.9:value :updateRowPositions2x2.2:col2
-    * jump *label151 greaterThanEq :updatePosition.9:value 0.0784313725490196
-    * jump *label153 lessThanEq :updatePosition.9:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.9:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.9:dy
-    * set :findBestPosition:best :updatePosition.9:value
+  515 jump *label151 greaterThanEq :updateRowPositions2x2.2:col2 0.0784313725490196
+  516 jump *label153 lessThanEq :updateRowPositions2x2.2:col2 :findBestPosition:best
+  517 set :findDrillLocationLocal:diffX -0.5
+  518 set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  519 set :findBestPosition:best :updateRowPositions2x2.2:col2
   520 label *label153
   521 label *label154
   522 label *label151
   523 label *label152
   524 label *label150
   525 set :updatePosition.10:dx 0.5
-    * set :updatePosition.10:dy :updateRowPositions2x2.2:dy
+  526 set :updatePosition.10:dy 0.5
   527 set :updatePosition.10:value :updateRowPositions2x2.2:col3
-    * jump *label156 greaterThanEq :updatePosition.10:value 0.0784313725490196
-    * jump *label158 lessThanEq :updatePosition.10:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.10:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.10:dy
-    * set :findBestPosition:best :updatePosition.10:value
+  528 jump *label156 greaterThanEq :updateRowPositions2x2.2:col3 0.0784313725490196
+  529 jump *label158 lessThanEq :updateRowPositions2x2.2:col3 :findBestPosition:best
+  530 set :findDrillLocationLocal:diffX 0.5
+  531 set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  532 set :findBestPosition:best :updateRowPositions2x2.2:col3
   533 label *label158
   534 label *label159
   535 label *label156
   536 label *label157
   537 label *label155
   538 set :updatePosition.11:dx 1.5
-    * set :updatePosition.11:dy :updateRowPositions2x2.2:dy
+  539 set :updatePosition.11:dy 0.5
   540 set :updatePosition.11:value :updateRowPositions2x2.2:col4
-    * jump *label161 greaterThanEq :updatePosition.11:value 0.0784313725490196
-    * jump *label163 lessThanEq :updatePosition.11:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.11:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.11:dy
-    * set :findBestPosition:best :updatePosition.11:value
+  541 jump *label161 greaterThanEq :updateRowPositions2x2.2:col4 0.0784313725490196
+  542 jump *label163 lessThanEq :updateRowPositions2x2.2:col4 :findBestPosition:best
+  543 set :findDrillLocationLocal:diffX 1.5
+  544 set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  545 set :findBestPosition:best :updateRowPositions2x2.2:col4
   546 label *label163
   547 label *label164
   548 label *label161
 
   551 label *label144
   552 set :updateRowPositions2x2.3:dy 1.5
   553 set :updateRowPositions2x2.3:rowSum :findBestPosition:row4
-    * unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :updateRowPositions2x2.3:rowSum
+  554 unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :findBestPosition:row4
   555 set :updatePosition.12:dx -1.5
-    * set :updatePosition.12:dy :updateRowPositions2x2.3:dy
+  556 set :updatePosition.12:dy 1.5
   557 set :updatePosition.12:value :updateRowPositions2x2.3:col1
-    * jump *label167 greaterThanEq :updatePosition.12:value 0.0784313725490196
-    * jump *label169 lessThanEq :updatePosition.12:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.12:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.12:dy
-    * set :findBestPosition:best :updatePosition.12:value
+  558 jump *label167 greaterThanEq :updateRowPositions2x2.3:col1 0.0784313725490196
+  559 jump *label169 lessThanEq :updateRowPositions2x2.3:col1 :findBestPosition:best
+  560 set :findDrillLocationLocal:diffX -1.5
+  561 set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  562 set :findBestPosition:best :updateRowPositions2x2.3:col1
   563 label *label169
   564 label *label170
   565 label *label167
   566 label *label168
   567 label *label166
   568 set :updatePosition.13:dx -0.5
-    * set :updatePosition.13:dy :updateRowPositions2x2.3:dy
+  569 set :updatePosition.13:dy 1.5
   570 set :updatePosition.13:value :updateRowPositions2x2.3:col2
-    * jump *label172 greaterThanEq :updatePosition.13:value 0.0784313725490196
-    * jump *label174 lessThanEq :updatePosition.13:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.13:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.13:dy
-    * set :findBestPosition:best :updatePosition.13:value
+  571 jump *label172 greaterThanEq :updateRowPositions2x2.3:col2 0.0784313725490196
+  572 jump *label174 lessThanEq :updateRowPositions2x2.3:col2 :findBestPosition:best
+  573 set :findDrillLocationLocal:diffX -0.5
+  574 set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  575 set :findBestPosition:best :updateRowPositions2x2.3:col2
   576 label *label174
   577 label *label175
   578 label *label172
   579 label *label173
   580 label *label171
   581 set :updatePosition.14:dx 0.5
-    * set :updatePosition.14:dy :updateRowPositions2x2.3:dy
+  582 set :updatePosition.14:dy 1.5
   583 set :updatePosition.14:value :updateRowPositions2x2.3:col3
-    * jump *label177 greaterThanEq :updatePosition.14:value 0.0784313725490196
-    * jump *label179 lessThanEq :updatePosition.14:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.14:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.14:dy
-    * set :findBestPosition:best :updatePosition.14:value
+  584 jump *label177 greaterThanEq :updateRowPositions2x2.3:col3 0.0784313725490196
+  585 jump *label179 lessThanEq :updateRowPositions2x2.3:col3 :findBestPosition:best
+  586 set :findDrillLocationLocal:diffX 0.5
+  587 set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  588 set :findBestPosition:best :updateRowPositions2x2.3:col3
   589 label *label179
   590 label *label180
   591 label *label177
   592 label *label178
   593 label *label176
   594 set :updatePosition.15:dx 1.5
-    * set :updatePosition.15:dy :updateRowPositions2x2.3:dy
+  595 set :updatePosition.15:dy 1.5
   596 set :updatePosition.15:value :updateRowPositions2x2.3:col4
-    * jump *label182 greaterThanEq :updatePosition.15:value 0.0784313725490196
-    * jump *label184 lessThanEq :updatePosition.15:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.15:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.15:dy
-    * set :findBestPosition:best :updatePosition.15:value
+  597 jump *label182 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
+  598 jump *label184 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
+  599 set :findDrillLocationLocal:diffX 1.5
+  600 set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  601 set :findBestPosition:best :updateRowPositions2x2.3:col4
   602 label *label184
   603 label *label185
   604 label *label182
 
   611 op add *tmp256 :findBestPosition:y2 :findBestPosition:y3
   612 op add :findBestPosition:row1.1 :findBestPosition:y1 *tmp256
   613 op add *tmp258 :findBestPosition:y2 :findBestPosition:y3
-    * op add :findBestPosition:row2.1 *tmp258 :findBestPosition:y4
+  614 op add :findBestPosition:row2.1 *tmp256 :findBestPosition:y4
   615 op add *tmp260 :findBestPosition:y3 :findBestPosition:y4
-    * op add :findBestPosition:row3.1 *tmp260 :findBestPosition:y5
+  616 op add :findBestPosition:row3.1 *tmp260 :computeRowValues*retval
   617 set :updateRowPositions3x3:dy -1
   618 set :updateRowPositions3x3:rowSum :findBestPosition:row1.1
-    * unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :updateRowPositions3x3:rowSum
+  619 unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :findBestPosition:row1.1
   620 set :updatePosition.16:dx -1
-    * set :updatePosition.16:dy :updateRowPositions3x3:dy
+  621 set :updatePosition.16:dy -1
   622 set :updatePosition.16:value :updateRowPositions3x3:col1
-    * jump *label190 greaterThanEq :updatePosition.16:value 0.0784313725490196
-    * jump *label192 lessThanEq :updatePosition.16:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.16:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.16:dy
-    * set :findBestPosition:best :updatePosition.16:value
+  623 jump *label190 greaterThanEq :updateRowPositions3x3:col1 0.0784313725490196
+  624 jump *label192 lessThanEq :updateRowPositions3x3:col1 0
+  625 set :findDrillLocationLocal:diffX -1
+  626 set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  627 set :findBestPosition:best :updateRowPositions3x3:col1
   628 label *label192
   629 label *label193
   630 label *label190
   631 label *label191
   632 label *label189
   633 set :updatePosition.17:dx 0
-    * set :updatePosition.17:dy :updateRowPositions3x3:dy
+  634 set :updatePosition.17:dy -1
   635 set :updatePosition.17:value :updateRowPositions3x3:col2
-    * jump *label195 greaterThanEq :updatePosition.17:value 0.0784313725490196
-    * jump *label197 lessThanEq :updatePosition.17:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.17:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.17:dy
-    * set :findBestPosition:best :updatePosition.17:value
+  636 jump *label195 greaterThanEq :updateRowPositions3x3:col2 0.0784313725490196
+  637 jump *label197 lessThanEq :updateRowPositions3x3:col2 :findBestPosition:best
+  638 set :findDrillLocationLocal:diffX 0
+  639 set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  640 set :findBestPosition:best :updateRowPositions3x3:col2
   641 label *label197
   642 label *label198
   643 label *label195
   644 label *label196
   645 label *label194
   646 set :updatePosition.18:dx 1
-    * set :updatePosition.18:dy :updateRowPositions3x3:dy
+  647 set :updatePosition.18:dy -1
   648 set :updatePosition.18:value :updateRowPositions3x3:col3
-    * jump *label200 greaterThanEq :updatePosition.18:value 0.0784313725490196
-    * jump *label202 lessThanEq :updatePosition.18:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.18:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.18:dy
-    * set :findBestPosition:best :updatePosition.18:value
+  649 jump *label200 greaterThanEq :updateRowPositions3x3:col3 0.0784313725490196
+  650 jump *label202 lessThanEq :updateRowPositions3x3:col3 :findBestPosition:best
+  651 set :findDrillLocationLocal:diffX 1
+  652 set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  653 set :findBestPosition:best :updateRowPositions3x3:col3
   654 label *label202
   655 label *label203
   656 label *label200
 
   659 label *label188
   660 set :updateRowPositions3x3.1:dy 0
   661 set :updateRowPositions3x3.1:rowSum :findBestPosition:row2.1
-    * unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :updateRowPositions3x3.1:rowSum
+  662 unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :findBestPosition:row2.1
   663 set :updatePosition.19:dx -1
-    * set :updatePosition.19:dy :updateRowPositions3x3.1:dy
+  664 set :updatePosition.19:dy 0
   665 set :updatePosition.19:value :updateRowPositions3x3.1:col1
-    * jump *label206 greaterThanEq :updatePosition.19:value 0.0784313725490196
-    * jump *label208 lessThanEq :updatePosition.19:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.19:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.19:dy
-    * set :findBestPosition:best :updatePosition.19:value
+  666 jump *label206 greaterThanEq :updateRowPositions3x3.1:col1 0.0784313725490196
+  667 jump *label208 lessThanEq :updateRowPositions3x3.1:col1 :findBestPosition:best
+  668 set :findDrillLocationLocal:diffX -1
+  669 set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  670 set :findBestPosition:best :updateRowPositions3x3.1:col1
   671 label *label208
   672 label *label209
   673 label *label206
   674 label *label207
   675 label *label205
   676 set :updatePosition.20:dx 0
-    * set :updatePosition.20:dy :updateRowPositions3x3.1:dy
+  677 set :updatePosition.20:dy 0
   678 set :updatePosition.20:value :updateRowPositions3x3.1:col2
-    * jump *label211 greaterThanEq :updatePosition.20:value 0.0784313725490196
-    * jump *label213 lessThanEq :updatePosition.20:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.20:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.20:dy
-    * set :findBestPosition:best :updatePosition.20:value
+  679 jump *label211 greaterThanEq :updateRowPositions3x3.1:col2 0.0784313725490196
+  680 jump *label213 lessThanEq :updateRowPositions3x3.1:col2 :findBestPosition:best
+  681 set :findDrillLocationLocal:diffX 0
+  682 set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  683 set :findBestPosition:best :updateRowPositions3x3.1:col2
   684 label *label213
   685 label *label214
   686 label *label211
   687 label *label212
   688 label *label210
   689 set :updatePosition.21:dx 1
-    * set :updatePosition.21:dy :updateRowPositions3x3.1:dy
+  690 set :updatePosition.21:dy 0
   691 set :updatePosition.21:value :updateRowPositions3x3.1:col3
-    * jump *label216 greaterThanEq :updatePosition.21:value 0.0784313725490196
-    * jump *label218 lessThanEq :updatePosition.21:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.21:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.21:dy
-    * set :findBestPosition:best :updatePosition.21:value
+  692 jump *label216 greaterThanEq :updateRowPositions3x3.1:col3 0.0784313725490196
+  693 jump *label218 lessThanEq :updateRowPositions3x3.1:col3 :findBestPosition:best
+  694 set :findDrillLocationLocal:diffX 1
+  695 set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  696 set :findBestPosition:best :updateRowPositions3x3.1:col3
   697 label *label218
   698 label *label219
   699 label *label216
 
   702 label *label204
   703 set :updateRowPositions3x3.2:dy 1
   704 set :updateRowPositions3x3.2:rowSum :findBestPosition:row3.1
-    * unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :updateRowPositions3x3.2:rowSum
+  705 unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :findBestPosition:row3.1
   706 set :updatePosition.22:dx -1
-    * set :updatePosition.22:dy :updateRowPositions3x3.2:dy
+  707 set :updatePosition.22:dy 1
   708 set :updatePosition.22:value :updateRowPositions3x3.2:col1
-    * jump *label222 greaterThanEq :updatePosition.22:value 0.0784313725490196
-    * jump *label224 lessThanEq :updatePosition.22:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.22:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.22:dy
-    * set :findBestPosition:best :updatePosition.22:value
+  709 jump *label222 greaterThanEq :updateRowPositions3x3.2:col1 0.0784313725490196
+  710 jump *label224 lessThanEq :updateRowPositions3x3.2:col1 :findBestPosition:best
+  711 set :findDrillLocationLocal:diffX -1
+  712 set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  713 set :findBestPosition:best :updateRowPositions3x3.2:col1
   714 label *label224
   715 label *label225
   716 label *label222
   717 label *label223
   718 label *label221
   719 set :updatePosition.23:dx 0
-    * set :updatePosition.23:dy :updateRowPositions3x3.2:dy
+  720 set :updatePosition.23:dy 1
   721 set :updatePosition.23:value :updateRowPositions3x3.2:col2
-    * jump *label227 greaterThanEq :updatePosition.23:value 0.0784313725490196
-    * jump *label229 lessThanEq :updatePosition.23:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.23:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.23:dy
-    * set :findBestPosition:best :updatePosition.23:value
+  722 jump *label227 greaterThanEq :updateRowPositions3x3.2:col2 0.0784313725490196
+  723 jump *label229 lessThanEq :updateRowPositions3x3.2:col2 :findBestPosition:best
+  724 set :findDrillLocationLocal:diffX 0
+  725 set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  726 set :findBestPosition:best :updateRowPositions3x3.2:col2
   727 label *label229
   728 label *label230
   729 label *label227
   730 label *label228
   731 label *label226
   732 set :updatePosition.24:dx 1
-    * set :updatePosition.24:dy :updateRowPositions3x3.2:dy
+  733 set :updatePosition.24:dy 1
   734 set :updatePosition.24:value :updateRowPositions3x3.2:col3
-    * jump *label232 greaterThanEq :updatePosition.24:value 0.0784313725490196
-    * jump *label234 lessThanEq :updatePosition.24:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.24:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.24:dy
-    * set :findBestPosition:best :updatePosition.24:value
+  735 jump *label232 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
+  736 jump *label234 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
+  737 set :findDrillLocationLocal:diffX 1
+  738 set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  739 set :findBestPosition:best :updateRowPositions3x3.2:col3
   740 label *label234
   741 label *label235
   742 label *label232
 
   767 op add *tmp306 *tmp305 :findBestPosition:y3
   768 op add :findBestPosition:row1.2 :findBestPosition:y0 *tmp306
   769 op add *tmp308 :findBestPosition:y1 :findBestPosition:y2
-    * op add *tmp309 *tmp308 :findBestPosition:y3
-    * op add :findBestPosition:row2.2 *tmp309 :findBestPosition:y4
+  770 op add *tmp309 *tmp305 :findBestPosition:y3
+  771 op add :findBestPosition:row2.2 *tmp306 :findBestPosition:y4
   772 op add *tmp311 :findBestPosition:y3 :findBestPosition:y4
   773 op add *tmp312 *tmp311 :findBestPosition:y5
   774 op add :findBestPosition:row3.2 :findBestPosition:y2 *tmp312
   775 op add *tmp314 :findBestPosition:y3 :findBestPosition:y4
-    * op add *tmp315 *tmp314 :findBestPosition:y5
-    * op add :findBestPosition:row4.1 *tmp315 :findBestPosition:y6
+  776 op add *tmp315 *tmp311 :findBestPosition:y5
+  777 op add :findBestPosition:row4.1 *tmp312 :computeRowValues*retval
   778 set :updateRowPositions4x4:dy -1.5
   779 set :updateRowPositions4x4:rowSum :findBestPosition:row1.2
-    * unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 :updateRowPositions4x4:col3 :updateRowPositions4x4:col4 :updateRowPositions4x4:rowSum
+  780 unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 :updateRowPositions4x4:col3 :updateRowPositions4x4:col4 :findBestPosition:row1.2
   781 set :updatePosition.25:dx -1.5
-    * set :updatePosition.25:dy :updateRowPositions4x4:dy
+  782 set :updatePosition.25:dy -1.5
   783 set :updatePosition.25:value :updateRowPositions4x4:col1
-    * jump *label240 greaterThanEq :updatePosition.25:value 0.0784313725490196
-    * jump *label242 lessThanEq :updatePosition.25:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.25:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.25:dy
-    * set :findBestPosition:best :updatePosition.25:value
+  784 jump *label240 greaterThanEq :updateRowPositions4x4:col1 0.0784313725490196
+  785 jump *label242 lessThanEq :updateRowPositions4x4:col1 :findBestPosition:best
+  786 set :findDrillLocationLocal:diffX -1.5
+  787 set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  788 set :findBestPosition:best :updateRowPositions4x4:col1
   789 label *label242
   790 label *label243
   791 label *label240
   792 label *label241
   793 label *label239
   794 set :updatePosition.26:dx -0.5
-    * set :updatePosition.26:dy :updateRowPositions4x4:dy
+  795 set :updatePosition.26:dy -1.5
   796 set :updatePosition.26:value :updateRowPositions4x4:col2
-    * jump *label245 greaterThanEq :updatePosition.26:value 0.0784313725490196
-    * jump *label247 lessThanEq :updatePosition.26:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.26:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.26:dy
-    * set :findBestPosition:best :updatePosition.26:value
+  797 jump *label245 greaterThanEq :updateRowPositions4x4:col2 0.0784313725490196
+  798 jump *label247 lessThanEq :updateRowPositions4x4:col2 :findBestPosition:best
+  799 set :findDrillLocationLocal:diffX -0.5
+  800 set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  801 set :findBestPosition:best :updateRowPositions4x4:col2
   802 label *label247
   803 label *label248
   804 label *label245
   805 label *label246
   806 label *label244
   807 set :updatePosition.27:dx 0.5
-    * set :updatePosition.27:dy :updateRowPositions4x4:dy
+  808 set :updatePosition.27:dy -1.5
   809 set :updatePosition.27:value :updateRowPositions4x4:col3
-    * jump *label250 greaterThanEq :updatePosition.27:value 0.0784313725490196
-    * jump *label252 lessThanEq :updatePosition.27:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.27:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.27:dy
-    * set :findBestPosition:best :updatePosition.27:value
+  810 jump *label250 greaterThanEq :updateRowPositions4x4:col3 0.0784313725490196
+  811 jump *label252 lessThanEq :updateRowPositions4x4:col3 :findBestPosition:best
+  812 set :findDrillLocationLocal:diffX 0.5
+  813 set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  814 set :findBestPosition:best :updateRowPositions4x4:col3
   815 label *label252
   816 label *label253
   817 label *label250
   818 label *label251
   819 label *label249
   820 set :updatePosition.28:dx 1.5
-    * set :updatePosition.28:dy :updateRowPositions4x4:dy
+  821 set :updatePosition.28:dy -1.5
   822 set :updatePosition.28:value :updateRowPositions4x4:col4
-    * jump *label255 greaterThanEq :updatePosition.28:value 0.0784313725490196
-    * jump *label257 lessThanEq :updatePosition.28:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.28:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.28:dy
-    * set :findBestPosition:best :updatePosition.28:value
+  823 jump *label255 greaterThanEq :updateRowPositions4x4:col4 0.0784313725490196
+  824 jump *label257 lessThanEq :updateRowPositions4x4:col4 :findBestPosition:best
+  825 set :findDrillLocationLocal:diffX 1.5
+  826 set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  827 set :findBestPosition:best :updateRowPositions4x4:col4
   828 label *label257
   829 label *label258
   830 label *label255
 
   833 label *label238
   834 set :updateRowPositions4x4.1:dy -0.5
   835 set :updateRowPositions4x4.1:rowSum :findBestPosition:row2.2
-    * unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 :updateRowPositions4x4.1:col3 :updateRowPositions4x4.1:col4 :updateRowPositions4x4.1:rowSum
+  836 unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 :updateRowPositions4x4.1:col3 :updateRowPositions4x4.1:col4 :findBestPosition:row2.2
   837 set :updatePosition.29:dx -1.5
-    * set :updatePosition.29:dy :updateRowPositions4x4.1:dy
+  838 set :updatePosition.29:dy -0.5
   839 set :updatePosition.29:value :updateRowPositions4x4.1:col1
-    * jump *label261 greaterThanEq :updatePosition.29:value 0.0784313725490196
-    * jump *label263 lessThanEq :updatePosition.29:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.29:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.29:dy
-    * set :findBestPosition:best :updatePosition.29:value
+  840 jump *label261 greaterThanEq :updateRowPositions4x4.1:col1 0.0784313725490196
+  841 jump *label263 lessThanEq :updateRowPositions4x4.1:col1 :findBestPosition:best
+  842 set :findDrillLocationLocal:diffX -1.5
+  843 set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  844 set :findBestPosition:best :updateRowPositions4x4.1:col1
   845 label *label263
   846 label *label264
   847 label *label261
   848 label *label262
   849 label *label260
   850 set :updatePosition.30:dx -0.5
-    * set :updatePosition.30:dy :updateRowPositions4x4.1:dy
+  851 set :updatePosition.30:dy -0.5
   852 set :updatePosition.30:value :updateRowPositions4x4.1:col2
-    * jump *label266 greaterThanEq :updatePosition.30:value 0.0784313725490196
-    * jump *label268 lessThanEq :updatePosition.30:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.30:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.30:dy
-    * set :findBestPosition:best :updatePosition.30:value
+  853 jump *label266 greaterThanEq :updateRowPositions4x4.1:col2 0.0784313725490196
+  854 jump *label268 lessThanEq :updateRowPositions4x4.1:col2 :findBestPosition:best
+  855 set :findDrillLocationLocal:diffX -0.5
+  856 set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  857 set :findBestPosition:best :updateRowPositions4x4.1:col2
   858 label *label268
   859 label *label269
   860 label *label266
   861 label *label267
   862 label *label265
   863 set :updatePosition.31:dx 0.5
-    * set :updatePosition.31:dy :updateRowPositions4x4.1:dy
+  864 set :updatePosition.31:dy -0.5
   865 set :updatePosition.31:value :updateRowPositions4x4.1:col3
-    * jump *label271 greaterThanEq :updatePosition.31:value 0.0784313725490196
-    * jump *label273 lessThanEq :updatePosition.31:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.31:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.31:dy
-    * set :findBestPosition:best :updatePosition.31:value
+  866 jump *label271 greaterThanEq :updateRowPositions4x4.1:col3 0.0784313725490196
+  867 jump *label273 lessThanEq :updateRowPositions4x4.1:col3 :findBestPosition:best
+  868 set :findDrillLocationLocal:diffX 0.5
+  869 set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  870 set :findBestPosition:best :updateRowPositions4x4.1:col3
   871 label *label273
   872 label *label274
   873 label *label271
   874 label *label272
   875 label *label270
   876 set :updatePosition.32:dx 1.5
-    * set :updatePosition.32:dy :updateRowPositions4x4.1:dy
+  877 set :updatePosition.32:dy -0.5
   878 set :updatePosition.32:value :updateRowPositions4x4.1:col4
-    * jump *label276 greaterThanEq :updatePosition.32:value 0.0784313725490196
-    * jump *label278 lessThanEq :updatePosition.32:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.32:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.32:dy
-    * set :findBestPosition:best :updatePosition.32:value
+  879 jump *label276 greaterThanEq :updateRowPositions4x4.1:col4 0.0784313725490196
+  880 jump *label278 lessThanEq :updateRowPositions4x4.1:col4 :findBestPosition:best
+  881 set :findDrillLocationLocal:diffX 1.5
+  882 set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  883 set :findBestPosition:best :updateRowPositions4x4.1:col4
   884 label *label278
   885 label *label279
   886 label *label276
 
   889 label *label259
   890 set :updateRowPositions4x4.2:dy 0.5
   891 set :updateRowPositions4x4.2:rowSum :findBestPosition:row3.2
-    * unpackcolor :updateRowPositions4x4.2:col1 :updateRowPositions4x4.2:col2 :updateRowPositions4x4.2:col3 :updateRowPositions4x4.2:col4 :updateRowPositions4x4.2:rowSum
+  892 unpackcolor :updateRowPositions4x4.2:col1 :updateRowPositions4x4.2:col2 :updateRowPositions4x4.2:col3 :updateRowPositions4x4.2:col4 :findBestPosition:row3.2
   893 set :updatePosition.33:dx -1.5
-    * set :updatePosition.33:dy :updateRowPositions4x4.2:dy
+  894 set :updatePosition.33:dy 0.5
   895 set :updatePosition.33:value :updateRowPositions4x4.2:col1
-    * jump *label282 greaterThanEq :updatePosition.33:value 0.0784313725490196
-    * jump *label284 lessThanEq :updatePosition.33:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.33:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.33:dy
-    * set :findBestPosition:best :updatePosition.33:value
+  896 jump *label282 greaterThanEq :updateRowPositions4x4.2:col1 0.0784313725490196
+  897 jump *label284 lessThanEq :updateRowPositions4x4.2:col1 :findBestPosition:best
+  898 set :findDrillLocationLocal:diffX -1.5
+  899 set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  900 set :findBestPosition:best :updateRowPositions4x4.2:col1
   901 label *label284
   902 label *label285
   903 label *label282
   904 label *label283
   905 label *label281
   906 set :updatePosition.34:dx -0.5
-    * set :updatePosition.34:dy :updateRowPositions4x4.2:dy
+  907 set :updatePosition.34:dy 0.5
   908 set :updatePosition.34:value :updateRowPositions4x4.2:col2
-    * jump *label287 greaterThanEq :updatePosition.34:value 0.0784313725490196
-    * jump *label289 lessThanEq :updatePosition.34:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.34:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.34:dy
-    * set :findBestPosition:best :updatePosition.34:value
+  909 jump *label287 greaterThanEq :updateRowPositions4x4.2:col2 0.0784313725490196
+  910 jump *label289 lessThanEq :updateRowPositions4x4.2:col2 :findBestPosition:best
+  911 set :findDrillLocationLocal:diffX -0.5
+  912 set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  913 set :findBestPosition:best :updateRowPositions4x4.2:col2
   914 label *label289
   915 label *label290
   916 label *label287
   917 label *label288
   918 label *label286
   919 set :updatePosition.35:dx 0.5
-    * set :updatePosition.35:dy :updateRowPositions4x4.2:dy
+  920 set :updatePosition.35:dy 0.5
   921 set :updatePosition.35:value :updateRowPositions4x4.2:col3
-    * jump *label292 greaterThanEq :updatePosition.35:value 0.0784313725490196
-    * jump *label294 lessThanEq :updatePosition.35:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.35:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.35:dy
-    * set :findBestPosition:best :updatePosition.35:value
+  922 jump *label292 greaterThanEq :updateRowPositions4x4.2:col3 0.0784313725490196
+  923 jump *label294 lessThanEq :updateRowPositions4x4.2:col3 :findBestPosition:best
+  924 set :findDrillLocationLocal:diffX 0.5
+  925 set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  926 set :findBestPosition:best :updateRowPositions4x4.2:col3
   927 label *label294
   928 label *label295
   929 label *label292
   930 label *label293
   931 label *label291
   932 set :updatePosition.36:dx 1.5
-    * set :updatePosition.36:dy :updateRowPositions4x4.2:dy
+  933 set :updatePosition.36:dy 0.5
   934 set :updatePosition.36:value :updateRowPositions4x4.2:col4
-    * jump *label297 greaterThanEq :updatePosition.36:value 0.0784313725490196
-    * jump *label299 lessThanEq :updatePosition.36:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.36:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.36:dy
-    * set :findBestPosition:best :updatePosition.36:value
+  935 jump *label297 greaterThanEq :updateRowPositions4x4.2:col4 0.0784313725490196
+  936 jump *label299 lessThanEq :updateRowPositions4x4.2:col4 :findBestPosition:best
+  937 set :findDrillLocationLocal:diffX 1.5
+  938 set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  939 set :findBestPosition:best :updateRowPositions4x4.2:col4
   940 label *label299
   941 label *label300
   942 label *label297
 
   945 label *label280
   946 set :updateRowPositions4x4.3:dy 1.5
   947 set :updateRowPositions4x4.3:rowSum :findBestPosition:row4.1
-    * unpackcolor :updateRowPositions4x4.3:col1 :updateRowPositions4x4.3:col2 :updateRowPositions4x4.3:col3 :updateRowPositions4x4.3:col4 :updateRowPositions4x4.3:rowSum
+  948 unpackcolor :updateRowPositions4x4.3:col1 :updateRowPositions4x4.3:col2 :updateRowPositions4x4.3:col3 :updateRowPositions4x4.3:col4 :findBestPosition:row4.1
   949 set :updatePosition.37:dx -1.5
-    * set :updatePosition.37:dy :updateRowPositions4x4.3:dy
+  950 set :updatePosition.37:dy 1.5
   951 set :updatePosition.37:value :updateRowPositions4x4.3:col1
-    * jump *label303 greaterThanEq :updatePosition.37:value 0.0784313725490196
-    * jump *label305 lessThanEq :updatePosition.37:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.37:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.37:dy
-    * set :findBestPosition:best :updatePosition.37:value
+  952 jump *label303 greaterThanEq :updateRowPositions4x4.3:col1 0.0784313725490196
+  953 jump *label305 lessThanEq :updateRowPositions4x4.3:col1 :findBestPosition:best
+  954 set :findDrillLocationLocal:diffX -1.5
+  955 set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  956 set :findBestPosition:best :updateRowPositions4x4.3:col1
   957 label *label305
   958 label *label306
   959 label *label303
   960 label *label304
   961 label *label302
   962 set :updatePosition.38:dx -0.5
-    * set :updatePosition.38:dy :updateRowPositions4x4.3:dy
+  963 set :updatePosition.38:dy 1.5
   964 set :updatePosition.38:value :updateRowPositions4x4.3:col2
-    * jump *label308 greaterThanEq :updatePosition.38:value 0.0784313725490196
-    * jump *label310 lessThanEq :updatePosition.38:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.38:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.38:dy
-    * set :findBestPosition:best :updatePosition.38:value
+  965 jump *label308 greaterThanEq :updateRowPositions4x4.3:col2 0.0784313725490196
+  966 jump *label310 lessThanEq :updateRowPositions4x4.3:col2 :findBestPosition:best
+  967 set :findDrillLocationLocal:diffX -0.5
+  968 set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  969 set :findBestPosition:best :updateRowPositions4x4.3:col2
   970 label *label310
   971 label *label311
   972 label *label308
   973 label *label309
   974 label *label307
   975 set :updatePosition.39:dx 0.5
-    * set :updatePosition.39:dy :updateRowPositions4x4.3:dy
+  976 set :updatePosition.39:dy 1.5
   977 set :updatePosition.39:value :updateRowPositions4x4.3:col3
-    * jump *label313 greaterThanEq :updatePosition.39:value 0.0784313725490196
-    * jump *label315 lessThanEq :updatePosition.39:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.39:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.39:dy
-    * set :findBestPosition:best :updatePosition.39:value
+  978 jump *label313 greaterThanEq :updateRowPositions4x4.3:col3 0.0784313725490196
+  979 jump *label315 lessThanEq :updateRowPositions4x4.3:col3 :findBestPosition:best
+  980 set :findDrillLocationLocal:diffX 0.5
+  981 set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  982 set :findBestPosition:best :updateRowPositions4x4.3:col3
   983 label *label315
   984 label *label316
   985 label *label313
   986 label *label314
   987 label *label312
   988 set :updatePosition.40:dx 1.5
-    * set :updatePosition.40:dy :updateRowPositions4x4.3:dy
+  989 set :updatePosition.40:dy 1.5
   990 set :updatePosition.40:value :updateRowPositions4x4.3:col4
-    * jump *label318 greaterThanEq :updatePosition.40:value 0.0784313725490196
-    * jump *label320 lessThanEq :updatePosition.40:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.40:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.40:dy
-    * set :findBestPosition:best :updatePosition.40:value
+  991 jump *label318 greaterThanEq :updateRowPositions4x4.3:col4 0.0784313725490196
+  992 jump *label320 lessThanEq :updateRowPositions4x4.3:col4 :findBestPosition:best
+  993 set :findDrillLocationLocal:diffX 1.5
+  994 set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  995 set :findBestPosition:best :updateRowPositions4x4.3:col4
   996 label *label320
   997 label *label321
   998 label *label318
 
  1003 label *label101
  1004 op mul *tmp173 :findBestPosition:best 255
  1005 jump *label94 always
-    * set *tmp173 null
  1006 label *label94
  1007 set :findDrillLocationLocal:score *tmp173
-    * jump *label322 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:capacity
+ 1008 jump *label322 lessThanEq *tmp173 :findDrillLocationLocal:capacity
  1009 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1010 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
+ 1011 set :findDrillLocationLocal:capacity *tmp173
  1012 jump *label324 greaterThanEq :findDrillLocationLocal:limit 1000
-    * set .mapSpots :findDrillLocationLocal:score
+ 1013 set .mapSpots *tmp173
  1014 label *label324
  1015 label *label325
  1016 jump *label326 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
  1017 set :saveLocation:item :findDrillLocationLocal:item
-    * set :saveLocation:value :findDrillLocationLocal:score
+ 1018 set :saveLocation:value *tmp173
  1019 set :saveLocation:x :findDrillLocationLocal:dx
  1020 set :saveLocation:y :findDrillLocationLocal:dy
  1021 op add .count .count 1
  1022 set *tmp390 .count
-    * sensor *tmp392 :saveLocation:item @id
-    * write *tmp392 bank1 *tmp390
+ 1023 sensor *tmp392 :findDrillLocationLocal:item @id
+ 1024 write *tmp392 bank1 .count
  1025 op add .count .count 1
-    * write :saveLocation:value bank1 .count
+ 1026 write :findDrillLocationLocal:score bank1 .count
  1027 op add .count .count 1
-    * write :saveLocation:x bank1 .count
+ 1028 write :findDrillLocationLocal:dx bank1 .count
  1029 op add .count .count 1
-    * write :saveLocation:y bank1 .count
+ 1030 write :findDrillLocationLocal:dy bank1 .count
  1031 op add .locations .locations 1
  1032 jump *label330 always
  1033 printflush message1
 
  1048 label *label327
  1049 label *label322
  1050 label *label323
-    * jump *label335 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
+ 1051 jump *label335 lessThanEq *tmp173 :findDrillLocationLocal:best
  1052 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1053 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:best :findDrillLocationLocal:score
+ 1054 set :findDrillLocationLocal:best *tmp173
  1055 label *label335
  1056 label *label336
-    * jump *label337 greaterThan :findDrillLocationLocal:score :findDrillLocationLocal:last
+ 1057 jump *label337 greaterThan *tmp173 :findDrillLocationLocal:last
  1058 jump *label93 always
  1059 label *label337
  1060 label *label338
-    * set :findDrillLocationLocal:last :findDrillLocationLocal:score
+ 1061 set :findDrillLocationLocal:last *tmp173
  1062 op mul :round:x :findDrillLocationLocal:diffX 1.1
  1063 op add *tmp411 :round:x 0.5
  1064 op floor *tmp410 *tmp411
 
  1088 set :saveLocation.1:y :findDrillLocationLocal:bestY
  1089 op add .count .count 1
  1090 set *tmp426 .count
-    * sensor *tmp428 :saveLocation.1:item @id
-    * write *tmp428 bank1 *tmp426
+ 1091 sensor *tmp428 :findDrillLocationLocal:item @id
+ 1092 write *tmp428 bank1 .count
  1093 op add .count .count 1
-    * write :saveLocation.1:value bank1 .count
+ 1094 write :findDrillLocationLocal:best bank1 .count
  1095 op add .count .count 1
-    * write :saveLocation.1:x bank1 .count
+ 1096 write :findDrillLocationLocal:bestX bank1 .count
  1097 op add .count .count 1
-    * write :saveLocation.1:y bank1 .count
+ 1098 write :findDrillLocationLocal:bestY bank1 .count
  1099 op add .locations .locations 1
  1100 jump *label347 always
  1101 printflush message1
 
  1121 label *label10
  1122 set :moveTo.7:x :createTerrainMask:x
  1123 set :moveTo.7:y :createTerrainMask:y
-    * set *tmp449 :moveTo.7:x
-    * set *tmp450 :moveTo.7:y
-    * set :moveTo.8:x *tmp449
-    * set :moveTo.8:y *tmp450
+ 1124 set *tmp449 :createTerrainMask:x
+ 1125 set *tmp450 :createTerrainMask:y
+ 1126 set :moveTo.8:x :moveTo.7:x
+ 1127 set :moveTo.8:y :moveTo.7:y
  1128 set :moveTo.8:radius 6
  1129 label *label361
-    * ucontrol within :moveTo.8:x :moveTo.8:y :moveTo.8:radius *tmp451
+ 1130 ucontrol within *tmp449 *tmp450 6 *tmp451
  1131 jump *label363 notEqual *tmp451 false
-    * op sub *tmp453 :moveTo.8:radius 0.5
-    * ucontrol approach :moveTo.8:x :moveTo.8:y *tmp453
+ 1132 op sub *tmp453 6 0.5
+ 1133 ucontrol approach *tmp449 *tmp450 5.5
  1134 label *label362
  1135 jump *label361 always
  1136 label *label363
 
  1153 select :isBlocked:result equal type @air 0 1
  1154 set *tmp457 :isBlocked:result
  1155 label *label370
-    * op or :createTerrainMask:result *tmp454 *tmp457
+ 1156 op or :createTerrainMask:result *tmp454 :isBlocked:result
  1157 label *label368
  1158 op sub :createTerrainMask:c :createTerrainMask:c 1
  1159 jump *label367 always
 
  1164 label *label366
  1165 set :createTerrainMask*retval :createTerrainMask:result
  1166 jump *label358 always
-    * set :createTerrainMask*retval null
  1167 label *label358
  1168 return :createTerrainMask*retaddr
  1169 end
 
  1206 label *label374
  1207 set :findPossiblePlacement*retval -1
  1208 jump *label371 always
-    * set :findPossiblePlacement*retval null
  1209 label *label371
  1210 return :findPossiblePlacement*retaddr
  1211 end
 
  1220 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1221 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1222 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label386 lessThan :tryPlaceGenerator:shift 0
-    * jump *label388 greaterThanEq :tryPlaceGenerator:shift 0
+ 1223 jump *label386 lessThan :findPossiblePlacement*retval 0
+ 1224 jump *label388 greaterThanEq :findPossiblePlacement*retval 0
  1225 set :tryPlaceGenerator*retval false
  1226 jump *label384 always
  1227 label *label388
  1228 label *label389
  1229 op add *tmp479 :tryPlaceGenerator:centerX 0.5
-    * op add .water2X *tmp479 :tryPlaceGenerator:c
+ 1230 op add .water2X *tmp479 :findPossiblePlacement:x
  1231 op add *tmp481 :tryPlaceGenerator:centerY 0.5
-    * op add .water2Y *tmp481 :tryPlaceGenerator:r
+ 1232 op add .water2Y *tmp481 :findPossiblePlacement:y
  1233 op add *tmp483 :tryPlaceGenerator:centerX 0.5
-    * op add .generatorX *tmp483 :tryPlaceGenerator:c
+ 1234 op add .generatorX *tmp479 :findPossiblePlacement:x
  1235 op add *tmp485 :tryPlaceGenerator:centerY 2.5
-    * op add .generatorY *tmp485 :tryPlaceGenerator:r
-    * op shl *tmp487 :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:shift
+ 1236 op add .generatorY *tmp485 :findPossiblePlacement:y
+ 1237 op shl *tmp487 :tryPlaceGenerator:generatorVertical :findPossiblePlacement*retval
  1238 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp487
  1239 jump *label387 always
  1240 label *label386
 
  1249 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1250 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1251 op add *tmp489 :tryPlaceGenerator:centerX 0.5
-    * op add .water2X *tmp489 :tryPlaceGenerator:c
+ 1252 op add .water2X *tmp489 :findPossiblePlacement:x
  1253 op add *tmp491 :tryPlaceGenerator:centerY 0.5
-    * op add .water2Y *tmp491 :tryPlaceGenerator:r
+ 1254 op add .water2Y *tmp491 :findPossiblePlacement:y
  1255 op add *tmp493 :tryPlaceGenerator:centerX 2.5
-    * op add .generatorX *tmp493 :tryPlaceGenerator:c
+ 1256 op add .generatorX *tmp493 :findPossiblePlacement:x
  1257 op add *tmp495 :tryPlaceGenerator:centerY 0.5
-    * op add .generatorY *tmp495 :tryPlaceGenerator:r
-    * op shl *tmp497 :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:shift
+ 1258 op add .generatorY *tmp491 :findPossiblePlacement:y
+ 1259 op shl *tmp497 :tryPlaceGenerator:generatorHorizontal :findPossiblePlacement*retval
  1260 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp497
  1261 label *label387
  1262 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1269 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1270 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1271 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label392 greaterThanEq :tryPlaceGenerator:shift 0
+ 1272 jump *label392 greaterThanEq :findPossiblePlacement*retval 0
  1273 set :tryPlaceGenerator*retval false
  1274 jump *label384 always
  1275 label *label392
  1276 label *label393
-    * op add .nodeX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * op add .nodeY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * op shl *tmp503 1 :tryPlaceGenerator:shift
+ 1277 op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
+ 1278 op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
+ 1279 op shl *tmp503 1 :findPossiblePlacement*retval
  1280 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp503
  1281 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
  1282 set :findPossiblePlacement:placementMask 1
 
  1288 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1289 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1290 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label395 greaterThanEq :tryPlaceGenerator:shift 0
+ 1291 jump *label395 greaterThanEq :findPossiblePlacement*retval 0
  1292 set :tryPlaceGenerator*retval false
  1293 jump *label384 always
  1294 label *label395
  1295 label *label396
-    * op add .panelX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * op add .panelY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * op shl *tmp509 1 :tryPlaceGenerator:shift
+ 1296 op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
+ 1297 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
+ 1298 op shl *tmp509 1 :findPossiblePlacement*retval
  1299 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp509
  1300 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
  1301 set :findPossiblePlacement:placementMask 1
 
  1307 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1308 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1309 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label398 greaterThanEq :tryPlaceGenerator:shift 0
+ 1310 jump *label398 greaterThanEq :findPossiblePlacement*retval 0
  1311 set :tryPlaceGenerator*retval false
  1312 jump *label384 always
  1313 label *label398
  1314 label *label399
-    * op add .batteryX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * op add .batteryY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * op shl *tmp515 1 :tryPlaceGenerator:shift
-    * op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp515
+ 1315 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
+ 1316 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
+ 1317 op shl *tmp515 1 :findPossiblePlacement*retval
  1318 set :tryPlaceGenerator*retval true
  1319 jump *label384 always
-    * set :tryPlaceGenerator*retval null
  1320 label *label384
  1321 return :tryPlaceGenerator*retaddr
  1322 end
 
  1342 set :createFixedMatrix:row4 0b0011100
  1343 set :createFixedMatrix:row5 0b0000000
  1344 set :createFixedMatrix:row6 0b0000000
-    * set *tmp518 :createFixedMatrix:row0
-    * op shl *tmp519 :createFixedMatrix:row1 7
-    * op or *tmp520 *tmp518 *tmp519
-    * op shl *tmp521 :createFixedMatrix:row2 14
-    * op or *tmp522 *tmp520 *tmp521
-    * op shl *tmp523 :createFixedMatrix:row3 21
-    * op or *tmp524 *tmp522 *tmp523
-    * op shl *tmp525 :createFixedMatrix:row4 28
-    * op or *tmp526 *tmp524 *tmp525
-    * op shl *tmp527 :createFixedMatrix:row5 35
-    * op or *tmp528 *tmp526 *tmp527
-    * op shl *tmp529 :createFixedMatrix:row6 42
-    * op or *tmp517 *tmp528 *tmp529
+ 1345 set *tmp518 0b0000000
+ 1346 op shl *tmp519 0b0000000 7
+ 1347 op or *tmp520 :createFixedMatrix:row0 0
+ 1348 op shl *tmp521 0b0011100 14
+ 1349 op or *tmp522 *tmp520 458752
+ 1350 op shl *tmp523 0b0011100 21
+ 1351 op or *tmp524 *tmp522 58720256
+ 1352 op shl *tmp525 0b0011100 28
+ 1353 op or *tmp526 *tmp524 7516192768
+ 1354 op shl *tmp527 0b0000000 35
+ 1355 op or *tmp528 *tmp526 0
+ 1356 op shl *tmp529 0b0000000 42
+ 1357 op or *tmp517 *tmp528 0
  1358 label *label402
-    * op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:plainTerrainMask *tmp517
+ 1359 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval *tmp517
  1360 set :createFixedMatrix.1:row0 0b1000001
  1361 set :createFixedMatrix.1:row1 0b0000000
  1362 set :createFixedMatrix.1:row2 0b0011100
 
  1364 set :createFixedMatrix.1:row4 0b0011100
  1365 set :createFixedMatrix.1:row5 0b0000000
  1366 set :createFixedMatrix.1:row6 0b1000001
-    * set *tmp533 :createFixedMatrix.1:row0
-    * op shl *tmp534 :createFixedMatrix.1:row1 7
-    * op or *tmp535 *tmp533 *tmp534
-    * op shl *tmp536 :createFixedMatrix.1:row2 14
-    * op or *tmp537 *tmp535 *tmp536
-    * op shl *tmp538 :createFixedMatrix.1:row3 21
-    * op or *tmp539 *tmp537 *tmp538
-    * op shl *tmp540 :createFixedMatrix.1:row4 28
-    * op or *tmp541 *tmp539 *tmp540
-    * op shl *tmp542 :createFixedMatrix.1:row5 35
-    * op or *tmp543 *tmp541 *tmp542
-    * op shl *tmp544 :createFixedMatrix.1:row6 42
-    * op or *tmp532 *tmp543 *tmp544
+ 1367 set *tmp533 0b1000001
+ 1368 op shl *tmp534 0b0000000 7
+ 1369 op or *tmp535 :createFixedMatrix.1:row0 0
+ 1370 op shl *tmp536 0b0011100 14
+ 1371 op or *tmp537 *tmp535 458752
+ 1372 op shl *tmp538 0b0011100 21
+ 1373 op or *tmp539 *tmp537 58720256
+ 1374 op shl *tmp540 0b0011100 28
+ 1375 op or *tmp541 *tmp539 7516192768
+ 1376 op shl *tmp542 0b0000000 35
+ 1377 op or *tmp543 *tmp541 0
+ 1378 op shl *tmp544 0b1000001 42
+ 1379 op or *tmp532 *tmp543 285873023221760
  1380 label *label403
  1381 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp532
  1382 set :createFixedMatrix.2:row0 0b11
  1383 set :createFixedMatrix.2:row1 0b11
-    * set *tmp548 :createFixedMatrix.2:row0
-    * op shl *tmp549 :createFixedMatrix.2:row1 7
-    * op or *tmp547 *tmp548 *tmp549
+ 1384 set *tmp548 0b11
+ 1385 op shl *tmp549 0b11 7
+ 1386 op or *tmp547 :createFixedMatrix.2:row0 384
  1387 label *label404
  1388 set :layoutThoriumDrillAtLocation:mask2x2 *tmp547
-    * set :printMask:text "terrainMask:"
-    * set :printMask:mask :layoutThoriumDrillAtLocation:terrainMask
  1389 setaddr :printMask*retaddr *label405 (h:*label405)
  1390 call *label14 *invalid :printMask*retval (m:*label405) (h:*label405)
  1391 label *label405
-    * set :printMask:text "cornersMask:"
-    * set :printMask:mask :layoutThoriumDrillAtLocation:cornersMask
  1392 setaddr :printMask*retaddr *label406 (h:*label406)
  1393 call *label14 *invalid :printMask*retval (m:*label406) (h:*label406)
  1394 label *label406
-    * set :printMask:text "mask2x2:"
-    * set :printMask:mask :layoutThoriumDrillAtLocation:mask2x2
+ 1395 set :printMask:mask *tmp547
  1396 setaddr :printMask*retaddr *label407 (h:*label407)
  1397 call *label14 *invalid :printMask*retval (m:*label407) (h:*label407)
  1398 label *label407
-    * set :debugStop:format ""
  1399 jump *label409 always
-    * print :debugStop:format
+ 1400 print ""
  1401 jump *label412 always
  1402 printflush message1
  1403 control enabled switch1 true
 
  1414 label *label410
  1415 label *label408
  1416 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
-    * set :findPossiblePlacement:placementMask :layoutThoriumDrillAtLocation:mask2x2
+ 1417 set :findPossiblePlacement:placementMask *tmp547
  1418 set :findPossiblePlacement:width 2
  1419 set :findPossiblePlacement:height 2
  1420 setaddr :findPossiblePlacement*retaddr *label417 (h:*label417)
 
  1423 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1424 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
  1425 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
-    * jump *label418 lessThan :layoutThoriumDrillAtLocation:shift 0
+ 1426 jump *label418 lessThan :findPossiblePlacement*retval 0
  1427 op add *tmp558 .drillX 0.5
-    * op add .water1X *tmp558 :layoutThoriumDrillAtLocation:c
+ 1428 op add .water1X *tmp558 :findPossiblePlacement:x
  1429 op add *tmp560 .drillY 0.5
-    * op add .water1Y *tmp560 :layoutThoriumDrillAtLocation:r
-    * op shl *tmp562 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
+ 1430 op add .water1Y *tmp560 :findPossiblePlacement:y
+ 1431 op shl *tmp562 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
  1432 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp562
-    * op shl *tmp563 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
-    * op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:cornersMask *tmp563
+ 1433 op shl *tmp563 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
+ 1434 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:cornersMask *tmp562
  1435 label *label418
  1436 label *label419
  1437 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
 
  1444 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1445 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
  1446 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
-    * jump *label421 lessThan :layoutThoriumDrillAtLocation:shift 0
+ 1447 jump *label421 lessThan :findPossiblePlacement*retval 0
  1448 op add *tmp567 .drillX 0.5
-    * op add .containerX *tmp567 :layoutThoriumDrillAtLocation:c
+ 1449 op add .containerX *tmp567 :findPossiblePlacement:x
  1450 op add *tmp569 .drillY 0.5
-    * op add .containerY *tmp569 :layoutThoriumDrillAtLocation:r
-    * op shl *tmp571 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
+ 1451 op add .containerY *tmp569 :findPossiblePlacement:y
+ 1452 op shl *tmp571 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
  1453 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp571
  1454 label *label421
  1455 label *label422
  1456 set :createFixedMatrix.3:row0 0b1111
  1457 set :createFixedMatrix.3:row1 0b1111
-    * set *tmp573 :createFixedMatrix.3:row0
-    * op shl *tmp574 :createFixedMatrix.3:row1 7
-    * op or *tmp572 *tmp573 *tmp574
+ 1458 set *tmp573 0b1111
+ 1459 op shl *tmp574 0b1111 7
+ 1460 op or *tmp572 :createFixedMatrix.3:row0 1920
  1461 label *label423
  1462 set :layoutThoriumDrillAtLocation:generatorHorizontal *tmp572
  1463 set :createFixedMatrix.4:row0 0b11
  1464 set :createFixedMatrix.4:row1 0b11
  1465 set :createFixedMatrix.4:row2 0b11
  1466 set :createFixedMatrix.4:row3 0b11
-    * set *tmp577 :createFixedMatrix.4:row0
-    * op shl *tmp578 :createFixedMatrix.4:row1 7
-    * op or *tmp579 *tmp577 *tmp578
-    * op shl *tmp580 :createFixedMatrix.4:row2 14
-    * op or *tmp581 *tmp579 *tmp580
-    * op shl *tmp582 :createFixedMatrix.4:row3 21
-    * op or *tmp576 *tmp581 *tmp582
+ 1467 set *tmp577 0b11
+ 1468 op shl *tmp578 0b11 7
+ 1469 op or *tmp579 :createFixedMatrix.4:row0 384
+ 1470 op shl *tmp580 0b11 14
+ 1471 op or *tmp581 *tmp579 49152
+ 1472 op shl *tmp582 0b11 21
+ 1473 op or *tmp576 *tmp581 6291456
  1474 label *label424
  1475 set :layoutThoriumDrillAtLocation:generatorVertical *tmp576
  1476 set :tryPlaceGenerator:centerX .drillX
  1477 set :tryPlaceGenerator:centerY .drillY
  1478 set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:terrainMask
-    * set :tryPlaceGenerator:generatorHorizontal :layoutThoriumDrillAtLocation:generatorHorizontal
-    * set :tryPlaceGenerator:generatorVertical :layoutThoriumDrillAtLocation:generatorVertical
+ 1479 set :tryPlaceGenerator:generatorHorizontal *tmp572
+ 1480 set :tryPlaceGenerator:generatorVertical *tmp576
  1481 setaddr :tryPlaceGenerator*retaddr *label425 (h:*label425)
  1482 call *label12 *invalid :tryPlaceGenerator*retval (m:*label425) (h:*label425)
  1483 label *label425
 
  1516 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
  1517 set :shiftMask:shiftX :layoutThoriumDrillAtLocation:sx
  1518 set :shiftMask:shiftY :layoutThoriumDrillAtLocation:sy
-    * op abs *tmp591 :shiftMask:shiftX
+ 1519 op abs *tmp591 :layoutThoriumDrillAtLocation:sx
  1520 op greaterThan *tmp592 *tmp591 6
-    * op abs *tmp593 :shiftMask:shiftY
+ 1521 op abs *tmp593 :layoutThoriumDrillAtLocation:sy
  1522 op greaterThan *tmp594 *tmp593 6
  1523 op or *tmp595 *tmp592 *tmp594
  1524 jump *label437 equal *tmp595 false
 
  1526 jump *label436 always
  1527 label *label437
  1528 label *label438
-    * op mul *tmp597 7 :shiftMask:shiftY
-    * op add :shiftMask:shift :shiftMask:shiftX *tmp597
+ 1529 op mul *tmp597 7 :layoutThoriumDrillAtLocation:sy
+ 1530 op add :shiftMask:shift :layoutThoriumDrillAtLocation:sx *tmp597
  1531 jump *label439 lessThanEq :shiftMask:shift 0
  1532 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
-    * op and *tmp602 :shiftMask:mask :shiftMask:clearMask
+ 1533 op and *tmp602 :layoutThoriumDrillAtLocation:terrainMask :shiftMask:clearMask
  1534 op shl :shiftMask:mask *tmp602 :shiftMask:shift
  1535 jump *label440 always
  1536 label *label439
  1537 op sub *tmp604 0 :shiftMask:shift
-    * op shr :shiftMask:mask :shiftMask:mask *tmp604
+ 1538 op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask *tmp604
  1539 label *label440
-    * jump *label441 equal :shiftMask:shiftX 0
-    * op abs *tmp607 :shiftMask:shiftX
-    * op sub *tmp608 7 *tmp607
+ 1540 jump *label441 equal :layoutThoriumDrillAtLocation:sx 0
+ 1541 op abs *tmp607 :layoutThoriumDrillAtLocation:sx
+ 1542 op sub *tmp608 7 *tmp591
  1543 op shr :shiftMask:keep 0b1111111 *tmp608
-    * jump *label443 lessThanEq :shiftMask:shiftX 0
-    * op abs *tmp612 :shiftMask:shiftX
-    * op sub *tmp613 7 *tmp612
-    * op shl :shiftMask:keep :shiftMask:keep *tmp613
+ 1544 jump *label443 lessThanEq :layoutThoriumDrillAtLocation:sx 0
+ 1545 op abs *tmp612 :layoutThoriumDrillAtLocation:sx
+ 1546 op sub *tmp613 7 *tmp591
+ 1547 op shl :shiftMask:keep :shiftMask:keep *tmp608
  1548 label *label443
  1549 label *label444
  1550 op shl *tmp614 :shiftMask:keep 7
 
  1558 label *label442
  1559 set *tmp590 :shiftMask:mask
  1560 jump *label436 always
-    * set *tmp590 null
  1561 label *label436
  1562 set :layoutThoriumDrillAtLocation:shiftedMask *tmp590
-    * op or :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:newTerrainMask :layoutThoriumDrillAtLocation:shiftedMask
+ 1563 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp590
  1564 op sub *tmp618 .drillX :layoutThoriumDrillAtLocation:sx
  1565 op sub *tmp619 .drillY :layoutThoriumDrillAtLocation:sy
  1566 set :tryPlaceGenerator:centerX *tmp618
 
  1582 label *label430
  1583 set :layoutThoriumDrillAtLocation*retval true
  1584 jump *label400 always
-    * set :layoutThoriumDrillAtLocation*retval null
  1585 label *label400
  1586 return :layoutThoriumDrillAtLocation*retaddr
  1587 end
 
  1646 jump *label457 always
  1647 print :printMask:text
  1648 print "\n"
-    * op sub :printMask:r 7 1
  1649 label *label459
  1650 jump *label461 lessThan :printMask:r 0
-    * set :printMask:c 0
  1651 label *label462
  1652 jump *label464 greaterThanEq :printMask:c 7
-    * op mul *tmp625 7 :printMask:r
-    * op add *tmp626 *tmp625 :printMask:c
-    * op shl *tmp627 1 *tmp626
-    * op and *tmp628 :printMask:mask *tmp627
  1653 jump *label465 equal *tmp628 false
-    * set *tmp629 "x"
  1654 jump *label466 always
  1655 label *label465
-    * set *tmp629 "o"
  1656 label *label466
-    * print *tmp629
+ 1657 print "x"
  1658 label *label463
-    * op add :printMask:c :printMask:c 1
  1659 jump *label462 always
  1660 label *label464
  1661 print "\n"
  1662 label *label460
-    * op sub :printMask:r :printMask:r 1
  1663 jump *label459 always
  1664 label *label461
  1665 label *label457

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-253 instructions):
 
    20 select :spotValue:result notEqual solid false 0.09803921568627451 value
    21 set *tmp1 :spotValue:result
    22 label *label18
-    * set :computeRowValues:x1 :spotValue:result
    23 op sub :spotValue.1:x :computeRowValues:x 1
    24 set :spotValue.1:y :computeRowValues:y
    25 set :spotValue.1:ore :computeRowValues:ore
 
    29 select :spotValue.1:result notEqual solid false 0.09803921568627451 value
    30 set *tmp3 :spotValue.1:result
    31 label *label19
-    * set :computeRowValues:x2 :spotValue.1:result
    32 set :spotValue.2:x :computeRowValues:x
    33 set :spotValue.2:y :computeRowValues:y
    34 set :spotValue.2:ore :computeRowValues:ore
 
    38 select :spotValue.2:result notEqual solid false 0.09803921568627451 value
    39 set *tmp5 :spotValue.2:result
    40 label *label20
-    * set :computeRowValues:x3 :spotValue.2:result
    41 op add :spotValue.3:x :computeRowValues:x 1
    42 set :spotValue.3:y :computeRowValues:y
    43 set :spotValue.3:ore :computeRowValues:ore
 
    47 select :spotValue.3:result notEqual solid false 0.09803921568627451 value
    48 set *tmp7 :spotValue.3:result
    49 label *label21
-    * set :computeRowValues:x4 :spotValue.3:result
    50 op add :spotValue.4:x :computeRowValues:x 2
    51 set :spotValue.4:y :computeRowValues:y
    52 set :spotValue.4:ore :computeRowValues:ore
 
    56 select :spotValue.4:result notEqual solid false 0.09803921568627451 value
    57 set *tmp9 :spotValue.4:result
    58 label *label22
-    * set :computeRowValues:x5 :spotValue.4:result
    59 jump *label23 notEqual :computeRowValues:size 2
-    * op add *tmp12 *tmp1 *tmp3
-    * op add *tmp13 *tmp3 *tmp5
-    * op add *tmp14 *tmp5 *tmp7
-    * op add *tmp15 *tmp7 *tmp9
+   60 op add *tmp12 :spotValue:result :spotValue.1:result
+   61 op add *tmp13 :spotValue.1:result :spotValue.2:result
+   62 op add *tmp14 :spotValue.2:result :spotValue.3:result
+   63 op add *tmp15 :spotValue.3:result :spotValue.4:result
    64 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
    65 jump *label17 always
    66 jump *label24 always
    67 label *label23
    68 jump *label25 notEqual :computeRowValues:size 3
-    * op add *tmp19 *tmp3 *tmp5
-    * op add *tmp20 *tmp1 *tmp19
-    * op add *tmp21 *tmp3 *tmp5
-    * op add *tmp22 *tmp19 *tmp7
-    * op add *tmp23 *tmp5 *tmp7
-    * op add *tmp24 *tmp23 *tmp9
+   69 op add *tmp19 :spotValue.1:result :spotValue.2:result
+   70 op add *tmp20 :spotValue:result *tmp19
+   71 op add *tmp21 :spotValue.1:result :spotValue.2:result
+   72 op add *tmp22 *tmp19 :spotValue.3:result
+   73 op add *tmp23 :spotValue.2:result :spotValue.3:result
+   74 op add *tmp24 *tmp23 :spotValue.4:result
    75 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
    76 jump *label17 always
    77 jump *label26 always
 
    85 select :spotValue.5:result notEqual solid false 0.09803921568627451 value
    86 set *tmp27 :spotValue.5:result
    87 label *label27
-    * set :computeRowValues:x0 :spotValue.5:result
    88 op add :spotValue.6:x :computeRowValues:x 3
    89 set :spotValue.6:y :computeRowValues:y
    90 set :spotValue.6:ore :computeRowValues:ore
 
    94 select :spotValue.6:result notEqual solid false 0.09803921568627451 value
    95 set *tmp29 :spotValue.6:result
    96 label *label28
-    * set :computeRowValues:x6 :spotValue.6:result
-    * op add *tmp30 *tmp1 *tmp3
-    * op add *tmp31 *tmp30 *tmp5
-    * op add *tmp32 *tmp27 *tmp31
+   97 op add *tmp30 :spotValue:result :spotValue.1:result
+   98 op add *tmp31 *tmp30 :spotValue.2:result
+   99 op add *tmp32 :spotValue.5:result *tmp31
   100 op min *tmp33 0.09803921568627451 *tmp32
-    * op add *tmp34 *tmp1 *tmp3
-    * op add *tmp35 *tmp30 *tmp5
-    * op add *tmp36 *tmp31 *tmp7
+  101 op add *tmp34 :spotValue:result :spotValue.1:result
+  102 op add *tmp35 *tmp30 :spotValue.2:result
+  103 op add *tmp36 *tmp31 :spotValue.3:result
   104 op min *tmp37 0.09803921568627451 *tmp36
-    * op add *tmp38 *tmp5 *tmp7
-    * op add *tmp39 *tmp38 *tmp9
-    * op add *tmp40 *tmp3 *tmp39
+  105 op add *tmp38 :spotValue.2:result :spotValue.3:result
+  106 op add *tmp39 *tmp38 :spotValue.4:result
+  107 op add *tmp40 :spotValue.1:result *tmp39
   108 op min *tmp41 0.09803921568627451 *tmp40
-    * op add *tmp42 *tmp5 *tmp7
-    * op add *tmp43 *tmp38 *tmp9
-    * op add *tmp44 *tmp39 *tmp29
+  109 op add *tmp42 :spotValue.2:result :spotValue.3:result
+  110 op add *tmp43 *tmp38 :spotValue.4:result
+  111 op add *tmp44 *tmp39 :spotValue.6:result
   112 op min *tmp45 0.09803921568627451 *tmp44
   113 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
   114 jump *label17 always
   115 label *label26
-    * set *tmp11 null
   116 label *label24
-    * set :computeRowValues*retval null
   117 label *label17
   118 return :computeRowValues*retaddr
   119 end
 
   137 set .mapProgress 0
   138 set :moveTo.2:x :findDrillLocationLocal:x
   139 set :moveTo.2:y :findDrillLocationLocal:y
-    * set *tmp86 .coreX
-    * set *tmp87 .coreY
-    * set :moveTo.3:x :moveTo.2:x
-    * set :moveTo.3:y :moveTo.2:y
-    * set :moveTo.3:radius 6
+  140 set *tmp86 :findDrillLocationLocal:x
+  141 set *tmp87 :findDrillLocationLocal:y
+  142 set :moveTo.3:x :findDrillLocationLocal:x
+  143 set :moveTo.3:y :findDrillLocationLocal:y
   144 label *label48
-    * ucontrol within *tmp86 *tmp87 6 *tmp88
+  145 ucontrol within .coreX .coreY 6 *tmp88
   146 jump *label50 notEqual *tmp88 false
-    * op sub *tmp90 6 0.5
-    * ucontrol approach *tmp86 *tmp87 5.5
+  147 ucontrol approach .coreX .coreY 5.5
   148 label *label49
   149 jump *label48 always
   150 label *label50
 
   163 op min :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
   164 op div *tmp96 :findDrillLocationLocal:distanceLimit 3.8197185279121366
   165 op pow .mapTotal *tmp96 2
-    * set :locateOreAway:ore :findDrillLocationLocal:item
   166 set :locateOreAway:x :findDrillLocationLocal:oreX
   167 set :locateOreAway:y :findDrillLocationLocal:oreY
-    * set :locateOreAway:distanceLimit :findDrillLocationLocal:distanceLimit
   168 op mul :locateOreAway:distance 3.8197185279121366 .angle
   169 set :locateOreAway:lastX -1
   170 set :locateOreAway:lastY -1
 
   177 op mul *tmp105 *tmp104 :locateOreAway:distance
   178 op add *tmp106 .coreX *tmp105
   179 op sub *tmp107 @mapw 5
-    * set :limit:value *tmp106
-    * set :limit:low 5
-    * set :limit:high *tmp107
   180 op max *tmp109 *tmp106 5
   181 op min *tmp108 *tmp109 *tmp107
   182 label *label58
 
   185 op mul *tmp112 *tmp111 :locateOreAway:distance
   186 op add *tmp113 .coreY *tmp112
   187 op sub *tmp114 @maph 5
-    * set :limit.1:value *tmp113
-    * set :limit.1:low 5
-    * set :limit.1:high *tmp114
   188 op max *tmp116 *tmp113 5
   189 op min *tmp115 *tmp116 *tmp114
   190 label *label59
   191 set :locateOreAway:ly *tmp115
-    * set :moveTo.4:x *tmp108
-    * set :moveTo.4:y *tmp115
-    * set :moveTo.4:radius 5
   192 label *label61
-    * ucontrol within :locateOreAway:lx :locateOreAway:ly 5 *tmp118
+  193 ucontrol within *tmp108 *tmp115 5 *tmp118
   194 jump *label63 notEqual *tmp118 false
-    * op sub *tmp120 5 0.5
-    * ucontrol approach :locateOreAway:lx :locateOreAway:ly 4.5
+  195 ucontrol approach *tmp108 *tmp115 4.5
   196 label *label62
   197 jump *label61 always
   198 label *label63
 
   226 jump *label72 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
   227 set :locateOreAway:lastX :locateOreAway:x
   228 set :locateOreAway:lastY :locateOreAway:y
-    * set :visited:x :locateOreAway:x
-    * set :visited:y :locateOreAway:y
   229 set *tmp145 .locations
   230 set :visited:i .locationsStart
   231 label *label75
 
   282 label *label85
   283 set :moveTo.5:x :locateOreAway:x
   284 set :moveTo.5:y :locateOreAway:y
-    * set *tmp168 :findDrillLocationLocal:oreX
-    * set *tmp169 :findDrillLocationLocal:oreY
-    * set :moveTo.6:x :moveTo.5:x
-    * set :moveTo.6:y :moveTo.5:y
-    * set :moveTo.6:radius 6
+  285 set *tmp168 :locateOreAway:x
+  286 set *tmp169 :locateOreAway:y
+  287 set :moveTo.6:x :locateOreAway:x
+  288 set :moveTo.6:y :locateOreAway:y
   289 label *label88
-    * ucontrol within *tmp168 *tmp169 6 *tmp170
+  290 ucontrol within :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 6 *tmp170
   291 jump *label90 notEqual *tmp170 false
-    * op sub *tmp172 6 0.5
-    * ucontrol approach *tmp168 *tmp169 5.5
+  292 ucontrol approach :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 5.5
   293 label *label89
   294 jump *label88 always
   295 label *label90
 
   319 call *label6 *invalid :computeRowValues*retval (m:*label96) (h:*label96)
   320 label *label96
   321 set :findBestPosition:y2 :computeRowValues*retval
-    * set *tmp178 :findBestPosition:y
   322 set :computeRowValues:x :findBestPosition:x
   323 set :computeRowValues:y :findBestPosition:y
   324 set :computeRowValues:ore :findBestPosition:ore
 
   354 op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
   355 op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
   356 set :updateRowPositions2x2:dy -1.5
-    * set :updateRowPositions2x2:rowSum :findBestPosition:row1
   357 unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :findBestPosition:row1
-    * set :updatePosition:dx -1.5
-    * set :updatePosition:dy -1.5
-    * set :updatePosition:value :updateRowPositions2x2:col1
   358 jump *label104 greaterThanEq :updateRowPositions2x2:col1 0.0784313725490196
   359 jump *label106 lessThanEq :updateRowPositions2x2:col1 0
   360 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  361 set :findDrillLocationLocal:diffY -1.5
   362 set :findBestPosition:best :updateRowPositions2x2:col1
   363 label *label106
   364 label *label107
   365 label *label104
   366 label *label105
   367 label *label103
-    * set :updatePosition.1:dx -0.5
-    * set :updatePosition.1:dy -1.5
-    * set :updatePosition.1:value :updateRowPositions2x2:col2
   368 jump *label109 greaterThanEq :updateRowPositions2x2:col2 0.0784313725490196
   369 jump *label111 lessThanEq :updateRowPositions2x2:col2 :findBestPosition:best
   370 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  371 set :findDrillLocationLocal:diffY -1.5
   372 set :findBestPosition:best :updateRowPositions2x2:col2
   373 label *label111
   374 label *label112
   375 label *label109
   376 label *label110
   377 label *label108
-    * set :updatePosition.2:dx 0.5
-    * set :updatePosition.2:dy -1.5
-    * set :updatePosition.2:value :updateRowPositions2x2:col3
   378 jump *label114 greaterThanEq :updateRowPositions2x2:col3 0.0784313725490196
   379 jump *label116 lessThanEq :updateRowPositions2x2:col3 :findBestPosition:best
   380 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  381 set :findDrillLocationLocal:diffY -1.5
   382 set :findBestPosition:best :updateRowPositions2x2:col3
   383 label *label116
   384 label *label117
   385 label *label114
   386 label *label115
   387 label *label113
-    * set :updatePosition.3:dx 1.5
-    * set :updatePosition.3:dy -1.5
-    * set :updatePosition.3:value :updateRowPositions2x2:col4
   388 jump *label119 greaterThanEq :updateRowPositions2x2:col4 0.0784313725490196
   389 jump *label121 lessThanEq :updateRowPositions2x2:col4 :findBestPosition:best
   390 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  391 set :findDrillLocationLocal:diffY -1.5
   392 set :findBestPosition:best :updateRowPositions2x2:col4
   393 label *label121
   394 label *label122
 
   397 label *label118
   398 label *label102
   399 set :updateRowPositions2x2.1:dy -0.5
-    * set :updateRowPositions2x2.1:rowSum :findBestPosition:row2
   400 unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :findBestPosition:row2
-    * set :updatePosition.4:dx -1.5
-    * set :updatePosition.4:dy -0.5
-    * set :updatePosition.4:value :updateRowPositions2x2.1:col1
   401 jump *label125 greaterThanEq :updateRowPositions2x2.1:col1 0.0784313725490196
   402 jump *label127 lessThanEq :updateRowPositions2x2.1:col1 :findBestPosition:best
   403 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  404 set :findDrillLocationLocal:diffY -0.5
   405 set :findBestPosition:best :updateRowPositions2x2.1:col1
   406 label *label127
   407 label *label128
   408 label *label125
   409 label *label126
   410 label *label124
-    * set :updatePosition.5:dx -0.5
-    * set :updatePosition.5:dy -0.5
-    * set :updatePosition.5:value :updateRowPositions2x2.1:col2
   411 jump *label130 greaterThanEq :updateRowPositions2x2.1:col2 0.0784313725490196
   412 jump *label132 lessThanEq :updateRowPositions2x2.1:col2 :findBestPosition:best
   413 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  414 set :findDrillLocationLocal:diffY -0.5
   415 set :findBestPosition:best :updateRowPositions2x2.1:col2
   416 label *label132
   417 label *label133
   418 label *label130
   419 label *label131
   420 label *label129
-    * set :updatePosition.6:dx 0.5
-    * set :updatePosition.6:dy -0.5
-    * set :updatePosition.6:value :updateRowPositions2x2.1:col3
   421 jump *label135 greaterThanEq :updateRowPositions2x2.1:col3 0.0784313725490196
   422 jump *label137 lessThanEq :updateRowPositions2x2.1:col3 :findBestPosition:best
   423 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  424 set :findDrillLocationLocal:diffY -0.5
   425 set :findBestPosition:best :updateRowPositions2x2.1:col3
   426 label *label137
   427 label *label138
   428 label *label135
   429 label *label136
   430 label *label134
-    * set :updatePosition.7:dx 1.5
-    * set :updatePosition.7:dy -0.5
-    * set :updatePosition.7:value :updateRowPositions2x2.1:col4
   431 jump *label140 greaterThanEq :updateRowPositions2x2.1:col4 0.0784313725490196
   432 jump *label142 lessThanEq :updateRowPositions2x2.1:col4 :findBestPosition:best
   433 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  434 set :findDrillLocationLocal:diffY -0.5
   435 set :findBestPosition:best :updateRowPositions2x2.1:col4
   436 label *label142
   437 label *label143
 
   440 label *label139
   441 label *label123
   442 set :updateRowPositions2x2.2:dy 0.5
-    * set :updateRowPositions2x2.2:rowSum :findBestPosition:row3
   443 unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :findBestPosition:row3
-    * set :updatePosition.8:dx -1.5
-    * set :updatePosition.8:dy 0.5
-    * set :updatePosition.8:value :updateRowPositions2x2.2:col1
   444 jump *label146 greaterThanEq :updateRowPositions2x2.2:col1 0.0784313725490196
   445 jump *label148 lessThanEq :updateRowPositions2x2.2:col1 :findBestPosition:best
   446 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  447 set :findDrillLocationLocal:diffY 0.5
   448 set :findBestPosition:best :updateRowPositions2x2.2:col1
   449 label *label148
   450 label *label149
   451 label *label146
   452 label *label147
   453 label *label145
-    * set :updatePosition.9:dx -0.5
-    * set :updatePosition.9:dy 0.5
-    * set :updatePosition.9:value :updateRowPositions2x2.2:col2
   454 jump *label151 greaterThanEq :updateRowPositions2x2.2:col2 0.0784313725490196
   455 jump *label153 lessThanEq :updateRowPositions2x2.2:col2 :findBestPosition:best
   456 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  457 set :findDrillLocationLocal:diffY 0.5
   458 set :findBestPosition:best :updateRowPositions2x2.2:col2
   459 label *label153
   460 label *label154
   461 label *label151
   462 label *label152
   463 label *label150
-    * set :updatePosition.10:dx 0.5
-    * set :updatePosition.10:dy 0.5
-    * set :updatePosition.10:value :updateRowPositions2x2.2:col3
   464 jump *label156 greaterThanEq :updateRowPositions2x2.2:col3 0.0784313725490196
   465 jump *label158 lessThanEq :updateRowPositions2x2.2:col3 :findBestPosition:best
   466 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  467 set :findDrillLocationLocal:diffY 0.5
   468 set :findBestPosition:best :updateRowPositions2x2.2:col3
   469 label *label158
   470 label *label159
   471 label *label156
   472 label *label157
   473 label *label155
-    * set :updatePosition.11:dx 1.5
-    * set :updatePosition.11:dy 0.5
-    * set :updatePosition.11:value :updateRowPositions2x2.2:col4
   474 jump *label161 greaterThanEq :updateRowPositions2x2.2:col4 0.0784313725490196
   475 jump *label163 lessThanEq :updateRowPositions2x2.2:col4 :findBestPosition:best
   476 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  477 set :findDrillLocationLocal:diffY 0.5
   478 set :findBestPosition:best :updateRowPositions2x2.2:col4
   479 label *label163
   480 label *label164
 
   483 label *label160
   484 label *label144
   485 set :updateRowPositions2x2.3:dy 1.5
-    * set :updateRowPositions2x2.3:rowSum :findBestPosition:row4
   486 unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :findBestPosition:row4
-    * set :updatePosition.12:dx -1.5
-    * set :updatePosition.12:dy 1.5
-    * set :updatePosition.12:value :updateRowPositions2x2.3:col1
   487 jump *label167 greaterThanEq :updateRowPositions2x2.3:col1 0.0784313725490196
   488 jump *label169 lessThanEq :updateRowPositions2x2.3:col1 :findBestPosition:best
   489 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  490 set :findDrillLocationLocal:diffY 1.5
   491 set :findBestPosition:best :updateRowPositions2x2.3:col1
   492 label *label169
   493 label *label170
   494 label *label167
   495 label *label168
   496 label *label166
-    * set :updatePosition.13:dx -0.5
-    * set :updatePosition.13:dy 1.5
-    * set :updatePosition.13:value :updateRowPositions2x2.3:col2
   497 jump *label172 greaterThanEq :updateRowPositions2x2.3:col2 0.0784313725490196
   498 jump *label174 lessThanEq :updateRowPositions2x2.3:col2 :findBestPosition:best
   499 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  500 set :findDrillLocationLocal:diffY 1.5
   501 set :findBestPosition:best :updateRowPositions2x2.3:col2
   502 label *label174
   503 label *label175
   504 label *label172
   505 label *label173
   506 label *label171
-    * set :updatePosition.14:dx 0.5
-    * set :updatePosition.14:dy 1.5
-    * set :updatePosition.14:value :updateRowPositions2x2.3:col3
   507 jump *label177 greaterThanEq :updateRowPositions2x2.3:col3 0.0784313725490196
   508 jump *label179 lessThanEq :updateRowPositions2x2.3:col3 :findBestPosition:best
   509 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  510 set :findDrillLocationLocal:diffY 1.5
   511 set :findBestPosition:best :updateRowPositions2x2.3:col3
   512 label *label179
   513 label *label180
   514 label *label177
   515 label *label178
   516 label *label176
-    * set :updatePosition.15:dx 1.5
-    * set :updatePosition.15:dy 1.5
-    * set :updatePosition.15:value :updateRowPositions2x2.3:col4
   517 jump *label182 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
   518 jump *label184 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
   519 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  520 set :findDrillLocationLocal:diffY 1.5
   521 set :findBestPosition:best :updateRowPositions2x2.3:col4
   522 label *label184
   523 label *label185
 
   530 jump *label186 notEqual :findBestPosition:size 3
   531 op add *tmp256 :findBestPosition:y2 :findBestPosition:y3
   532 op add :findBestPosition:row1.1 :findBestPosition:y1 *tmp256
-    * op add *tmp258 :findBestPosition:y2 :findBestPosition:y3
   533 op add :findBestPosition:row2.1 *tmp256 :findBestPosition:y4
   534 op add *tmp260 :findBestPosition:y3 :findBestPosition:y4
   535 op add :findBestPosition:row3.1 *tmp260 :computeRowValues*retval
   536 set :updateRowPositions3x3:dy -1
-    * set :updateRowPositions3x3:rowSum :findBestPosition:row1.1
   537 unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :findBestPosition:row1.1
-    * set :updatePosition.16:dx -1
-    * set :updatePosition.16:dy -1
-    * set :updatePosition.16:value :updateRowPositions3x3:col1
   538 jump *label190 greaterThanEq :updateRowPositions3x3:col1 0.0784313725490196
   539 jump *label192 lessThanEq :updateRowPositions3x3:col1 0
   540 set :findDrillLocationLocal:diffX -1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  541 set :findDrillLocationLocal:diffY -1
   542 set :findBestPosition:best :updateRowPositions3x3:col1
   543 label *label192
   544 label *label193
   545 label *label190
   546 label *label191
   547 label *label189
-    * set :updatePosition.17:dx 0
-    * set :updatePosition.17:dy -1
-    * set :updatePosition.17:value :updateRowPositions3x3:col2
   548 jump *label195 greaterThanEq :updateRowPositions3x3:col2 0.0784313725490196
   549 jump *label197 lessThanEq :updateRowPositions3x3:col2 :findBestPosition:best
   550 set :findDrillLocationLocal:diffX 0
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  551 set :findDrillLocationLocal:diffY -1
   552 set :findBestPosition:best :updateRowPositions3x3:col2
   553 label *label197
   554 label *label198
   555 label *label195
   556 label *label196
   557 label *label194
-    * set :updatePosition.18:dx 1
-    * set :updatePosition.18:dy -1
-    * set :updatePosition.18:value :updateRowPositions3x3:col3
   558 jump *label200 greaterThanEq :updateRowPositions3x3:col3 0.0784313725490196
   559 jump *label202 lessThanEq :updateRowPositions3x3:col3 :findBestPosition:best
   560 set :findDrillLocationLocal:diffX 1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  561 set :findDrillLocationLocal:diffY -1
   562 set :findBestPosition:best :updateRowPositions3x3:col3
   563 label *label202
   564 label *label203
 
   567 label *label199
   568 label *label188
   569 set :updateRowPositions3x3.1:dy 0
-    * set :updateRowPositions3x3.1:rowSum :findBestPosition:row2.1
   570 unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :findBestPosition:row2.1
-    * set :updatePosition.19:dx -1
-    * set :updatePosition.19:dy 0
-    * set :updatePosition.19:value :updateRowPositions3x3.1:col1
   571 jump *label206 greaterThanEq :updateRowPositions3x3.1:col1 0.0784313725490196
   572 jump *label208 lessThanEq :updateRowPositions3x3.1:col1 :findBestPosition:best
   573 set :findDrillLocationLocal:diffX -1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  574 set :findDrillLocationLocal:diffY 0
   575 set :findBestPosition:best :updateRowPositions3x3.1:col1
   576 label *label208
   577 label *label209
   578 label *label206
   579 label *label207
   580 label *label205
-    * set :updatePosition.20:dx 0
-    * set :updatePosition.20:dy 0
-    * set :updatePosition.20:value :updateRowPositions3x3.1:col2
   581 jump *label211 greaterThanEq :updateRowPositions3x3.1:col2 0.0784313725490196
   582 jump *label213 lessThanEq :updateRowPositions3x3.1:col2 :findBestPosition:best
   583 set :findDrillLocationLocal:diffX 0
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  584 set :findDrillLocationLocal:diffY 0
   585 set :findBestPosition:best :updateRowPositions3x3.1:col2
   586 label *label213
   587 label *label214
   588 label *label211
   589 label *label212
   590 label *label210
-    * set :updatePosition.21:dx 1
-    * set :updatePosition.21:dy 0
-    * set :updatePosition.21:value :updateRowPositions3x3.1:col3
   591 jump *label216 greaterThanEq :updateRowPositions3x3.1:col3 0.0784313725490196
   592 jump *label218 lessThanEq :updateRowPositions3x3.1:col3 :findBestPosition:best
   593 set :findDrillLocationLocal:diffX 1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  594 set :findDrillLocationLocal:diffY 0
   595 set :findBestPosition:best :updateRowPositions3x3.1:col3
   596 label *label218
   597 label *label219
 
   600 label *label215
   601 label *label204
   602 set :updateRowPositions3x3.2:dy 1
-    * set :updateRowPositions3x3.2:rowSum :findBestPosition:row3.1
   603 unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :findBestPosition:row3.1
-    * set :updatePosition.22:dx -1
-    * set :updatePosition.22:dy 1
-    * set :updatePosition.22:value :updateRowPositions3x3.2:col1
   604 jump *label222 greaterThanEq :updateRowPositions3x3.2:col1 0.0784313725490196
   605 jump *label224 lessThanEq :updateRowPositions3x3.2:col1 :findBestPosition:best
   606 set :findDrillLocationLocal:diffX -1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  607 set :findDrillLocationLocal:diffY 1
   608 set :findBestPosition:best :updateRowPositions3x3.2:col1
   609 label *label224
   610 label *label225
   611 label *label222
   612 label *label223
   613 label *label221
-    * set :updatePosition.23:dx 0
-    * set :updatePosition.23:dy 1
-    * set :updatePosition.23:value :updateRowPositions3x3.2:col2
   614 jump *label227 greaterThanEq :updateRowPositions3x3.2:col2 0.0784313725490196
   615 jump *label229 lessThanEq :updateRowPositions3x3.2:col2 :findBestPosition:best
   616 set :findDrillLocationLocal:diffX 0
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  617 set :findDrillLocationLocal:diffY 1
   618 set :findBestPosition:best :updateRowPositions3x3.2:col2
   619 label *label229
   620 label *label230
   621 label *label227
   622 label *label228
   623 label *label226
-    * set :updatePosition.24:dx 1
-    * set :updatePosition.24:dy 1
-    * set :updatePosition.24:value :updateRowPositions3x3.2:col3
   624 jump *label232 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
   625 jump *label234 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
   626 set :findDrillLocationLocal:diffX 1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  627 set :findDrillLocationLocal:diffY 1
   628 set :findBestPosition:best :updateRowPositions3x3.2:col3
   629 label *label234
   630 label *label235
 
   651 setaddr :computeRowValues*retaddr *label237 (h:*label237)
   652 call *label6 *invalid :computeRowValues*retval (m:*label237) (h:*label237)
   653 label *label237
-    * set :findBestPosition:y6 :computeRowValues*retval
   654 op add *tmp305 :findBestPosition:y1 :findBestPosition:y2
   655 op add *tmp306 *tmp305 :findBestPosition:y3
   656 op add :findBestPosition:row1.2 :findBestPosition:y0 *tmp306
-    * op add *tmp308 :findBestPosition:y1 :findBestPosition:y2
-    * op add *tmp309 *tmp305 :findBestPosition:y3
   657 op add :findBestPosition:row2.2 *tmp306 :findBestPosition:y4
   658 op add *tmp311 :findBestPosition:y3 :findBestPosition:y4
   659 op add *tmp312 *tmp311 :findBestPosition:y5
   660 op add :findBestPosition:row3.2 :findBestPosition:y2 *tmp312
-    * op add *tmp314 :findBestPosition:y3 :findBestPosition:y4
-    * op add *tmp315 *tmp311 :findBestPosition:y5
   661 op add :findBestPosition:row4.1 *tmp312 :computeRowValues*retval
   662 set :updateRowPositions4x4:dy -1.5
-    * set :updateRowPositions4x4:rowSum :findBestPosition:row1.2
   663 unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 :updateRowPositions4x4:col3 :updateRowPositions4x4:col4 :findBestPosition:row1.2
-    * set :updatePosition.25:dx -1.5
-    * set :updatePosition.25:dy -1.5
-    * set :updatePosition.25:value :updateRowPositions4x4:col1
   664 jump *label240 greaterThanEq :updateRowPositions4x4:col1 0.0784313725490196
   665 jump *label242 lessThanEq :updateRowPositions4x4:col1 :findBestPosition:best
   666 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  667 set :findDrillLocationLocal:diffY -1.5
   668 set :findBestPosition:best :updateRowPositions4x4:col1
   669 label *label242
   670 label *label243
   671 label *label240
   672 label *label241
   673 label *label239
-    * set :updatePosition.26:dx -0.5
-    * set :updatePosition.26:dy -1.5
-    * set :updatePosition.26:value :updateRowPositions4x4:col2
   674 jump *label245 greaterThanEq :updateRowPositions4x4:col2 0.0784313725490196
   675 jump *label247 lessThanEq :updateRowPositions4x4:col2 :findBestPosition:best
   676 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  677 set :findDrillLocationLocal:diffY -1.5
   678 set :findBestPosition:best :updateRowPositions4x4:col2
   679 label *label247
   680 label *label248
   681 label *label245
   682 label *label246
   683 label *label244
-    * set :updatePosition.27:dx 0.5
-    * set :updatePosition.27:dy -1.5
-    * set :updatePosition.27:value :updateRowPositions4x4:col3
   684 jump *label250 greaterThanEq :updateRowPositions4x4:col3 0.0784313725490196
   685 jump *label252 lessThanEq :updateRowPositions4x4:col3 :findBestPosition:best
   686 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  687 set :findDrillLocationLocal:diffY -1.5
   688 set :findBestPosition:best :updateRowPositions4x4:col3
   689 label *label252
   690 label *label253
   691 label *label250
   692 label *label251
   693 label *label249
-    * set :updatePosition.28:dx 1.5
-    * set :updatePosition.28:dy -1.5
-    * set :updatePosition.28:value :updateRowPositions4x4:col4
   694 jump *label255 greaterThanEq :updateRowPositions4x4:col4 0.0784313725490196
   695 jump *label257 lessThanEq :updateRowPositions4x4:col4 :findBestPosition:best
   696 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  697 set :findDrillLocationLocal:diffY -1.5
   698 set :findBestPosition:best :updateRowPositions4x4:col4
   699 label *label257
   700 label *label258
 
   703 label *label254
   704 label *label238
   705 set :updateRowPositions4x4.1:dy -0.5
-    * set :updateRowPositions4x4.1:rowSum :findBestPosition:row2.2
   706 unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 :updateRowPositions4x4.1:col3 :updateRowPositions4x4.1:col4 :findBestPosition:row2.2
-    * set :updatePosition.29:dx -1.5
-    * set :updatePosition.29:dy -0.5
-    * set :updatePosition.29:value :updateRowPositions4x4.1:col1
   707 jump *label261 greaterThanEq :updateRowPositions4x4.1:col1 0.0784313725490196
   708 jump *label263 lessThanEq :updateRowPositions4x4.1:col1 :findBestPosition:best
   709 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  710 set :findDrillLocationLocal:diffY -0.5
   711 set :findBestPosition:best :updateRowPositions4x4.1:col1
   712 label *label263
   713 label *label264
   714 label *label261
   715 label *label262
   716 label *label260
-    * set :updatePosition.30:dx -0.5
-    * set :updatePosition.30:dy -0.5
-    * set :updatePosition.30:value :updateRowPositions4x4.1:col2
   717 jump *label266 greaterThanEq :updateRowPositions4x4.1:col2 0.0784313725490196
   718 jump *label268 lessThanEq :updateRowPositions4x4.1:col2 :findBestPosition:best
   719 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  720 set :findDrillLocationLocal:diffY -0.5
   721 set :findBestPosition:best :updateRowPositions4x4.1:col2
   722 label *label268
   723 label *label269
   724 label *label266
   725 label *label267
   726 label *label265
-    * set :updatePosition.31:dx 0.5
-    * set :updatePosition.31:dy -0.5
-    * set :updatePosition.31:value :updateRowPositions4x4.1:col3
   727 jump *label271 greaterThanEq :updateRowPositions4x4.1:col3 0.0784313725490196
   728 jump *label273 lessThanEq :updateRowPositions4x4.1:col3 :findBestPosition:best
   729 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  730 set :findDrillLocationLocal:diffY -0.5
   731 set :findBestPosition:best :updateRowPositions4x4.1:col3
   732 label *label273
   733 label *label274
   734 label *label271
   735 label *label272
   736 label *label270
-    * set :updatePosition.32:dx 1.5
-    * set :updatePosition.32:dy -0.5
-    * set :updatePosition.32:value :updateRowPositions4x4.1:col4
   737 jump *label276 greaterThanEq :updateRowPositions4x4.1:col4 0.0784313725490196
   738 jump *label278 lessThanEq :updateRowPositions4x4.1:col4 :findBestPosition:best
   739 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  740 set :findDrillLocationLocal:diffY -0.5
   741 set :findBestPosition:best :updateRowPositions4x4.1:col4
   742 label *label278
   743 label *label279
 
   746 label *label275
   747 label *label259
   748 set :updateRowPositions4x4.2:dy 0.5
-    * set :updateRowPositions4x4.2:rowSum :findBestPosition:row3.2
   749 unpackcolor :updateRowPositions4x4.2:col1 :updateRowPositions4x4.2:col2 :updateRowPositions4x4.2:col3 :updateRowPositions4x4.2:col4 :findBestPosition:row3.2
-    * set :updatePosition.33:dx -1.5
-    * set :updatePosition.33:dy 0.5
-    * set :updatePosition.33:value :updateRowPositions4x4.2:col1
   750 jump *label282 greaterThanEq :updateRowPositions4x4.2:col1 0.0784313725490196
   751 jump *label284 lessThanEq :updateRowPositions4x4.2:col1 :findBestPosition:best
   752 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  753 set :findDrillLocationLocal:diffY 0.5
   754 set :findBestPosition:best :updateRowPositions4x4.2:col1
   755 label *label284
   756 label *label285
   757 label *label282
   758 label *label283
   759 label *label281
-    * set :updatePosition.34:dx -0.5
-    * set :updatePosition.34:dy 0.5
-    * set :updatePosition.34:value :updateRowPositions4x4.2:col2
   760 jump *label287 greaterThanEq :updateRowPositions4x4.2:col2 0.0784313725490196
   761 jump *label289 lessThanEq :updateRowPositions4x4.2:col2 :findBestPosition:best
   762 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  763 set :findDrillLocationLocal:diffY 0.5
   764 set :findBestPosition:best :updateRowPositions4x4.2:col2
   765 label *label289
   766 label *label290
   767 label *label287
   768 label *label288
   769 label *label286
-    * set :updatePosition.35:dx 0.5
-    * set :updatePosition.35:dy 0.5
-    * set :updatePosition.35:value :updateRowPositions4x4.2:col3
   770 jump *label292 greaterThanEq :updateRowPositions4x4.2:col3 0.0784313725490196
   771 jump *label294 lessThanEq :updateRowPositions4x4.2:col3 :findBestPosition:best
   772 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  773 set :findDrillLocationLocal:diffY 0.5
   774 set :findBestPosition:best :updateRowPositions4x4.2:col3
   775 label *label294
   776 label *label295
   777 label *label292
   778 label *label293
   779 label *label291
-    * set :updatePosition.36:dx 1.5
-    * set :updatePosition.36:dy 0.5
-    * set :updatePosition.36:value :updateRowPositions4x4.2:col4
   780 jump *label297 greaterThanEq :updateRowPositions4x4.2:col4 0.0784313725490196
   781 jump *label299 lessThanEq :updateRowPositions4x4.2:col4 :findBestPosition:best
   782 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  783 set :findDrillLocationLocal:diffY 0.5
   784 set :findBestPosition:best :updateRowPositions4x4.2:col4
   785 label *label299
   786 label *label300
 
   789 label *label296
   790 label *label280
   791 set :updateRowPositions4x4.3:dy 1.5
-    * set :updateRowPositions4x4.3:rowSum :findBestPosition:row4.1
   792 unpackcolor :updateRowPositions4x4.3:col1 :updateRowPositions4x4.3:col2 :updateRowPositions4x4.3:col3 :updateRowPositions4x4.3:col4 :findBestPosition:row4.1
-    * set :updatePosition.37:dx -1.5
-    * set :updatePosition.37:dy 1.5
-    * set :updatePosition.37:value :updateRowPositions4x4.3:col1
   793 jump *label303 greaterThanEq :updateRowPositions4x4.3:col1 0.0784313725490196
   794 jump *label305 lessThanEq :updateRowPositions4x4.3:col1 :findBestPosition:best
   795 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  796 set :findDrillLocationLocal:diffY 1.5
   797 set :findBestPosition:best :updateRowPositions4x4.3:col1
   798 label *label305
   799 label *label306
   800 label *label303
   801 label *label304
   802 label *label302
-    * set :updatePosition.38:dx -0.5
-    * set :updatePosition.38:dy 1.5
-    * set :updatePosition.38:value :updateRowPositions4x4.3:col2
   803 jump *label308 greaterThanEq :updateRowPositions4x4.3:col2 0.0784313725490196
   804 jump *label310 lessThanEq :updateRowPositions4x4.3:col2 :findBestPosition:best
   805 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  806 set :findDrillLocationLocal:diffY 1.5
   807 set :findBestPosition:best :updateRowPositions4x4.3:col2
   808 label *label310
   809 label *label311
   810 label *label308
   811 label *label309
   812 label *label307
-    * set :updatePosition.39:dx 0.5
-    * set :updatePosition.39:dy 1.5
-    * set :updatePosition.39:value :updateRowPositions4x4.3:col3
   813 jump *label313 greaterThanEq :updateRowPositions4x4.3:col3 0.0784313725490196
   814 jump *label315 lessThanEq :updateRowPositions4x4.3:col3 :findBestPosition:best
   815 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  816 set :findDrillLocationLocal:diffY 1.5
   817 set :findBestPosition:best :updateRowPositions4x4.3:col3
   818 label *label315
   819 label *label316
   820 label *label313
   821 label *label314
   822 label *label312
-    * set :updatePosition.40:dx 1.5
-    * set :updatePosition.40:dy 1.5
-    * set :updatePosition.40:value :updateRowPositions4x4.3:col4
   823 jump *label318 greaterThanEq :updateRowPositions4x4.3:col4 0.0784313725490196
   824 jump *label320 lessThanEq :updateRowPositions4x4.3:col4 :findBestPosition:best
   825 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  826 set :findDrillLocationLocal:diffY 1.5
   827 set :findBestPosition:best :updateRowPositions4x4.3:col4
   828 label *label320
   829 label *label321
 
   846 label *label324
   847 label *label325
   848 jump *label326 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
-    * set :saveLocation:item :findDrillLocationLocal:item
-    * set :saveLocation:value *tmp173
-    * set :saveLocation:x :findDrillLocationLocal:dx
-    * set :saveLocation:y :findDrillLocationLocal:dy
   849 op add .count .count 1
-    * set *tmp390 .count
   850 sensor *tmp392 :findDrillLocationLocal:item @id
   851 write *tmp392 bank1 .count
   852 op add .count .count 1
-    * write :findDrillLocationLocal:score bank1 .count
+  853 write *tmp173 bank1 .count
   854 op add .count .count 1
   855 write :findDrillLocationLocal:dx bank1 .count
   856 op add .count .count 1
 
   909 jump *label91 always
   910 label *label93
   911 jump *label343 lessThan :findDrillLocationLocal:best 0
-    * set :saveLocation.1:item :findDrillLocationLocal:item
-    * set :saveLocation.1:value :findDrillLocationLocal:best
-    * set :saveLocation.1:x :findDrillLocationLocal:bestX
-    * set :saveLocation.1:y :findDrillLocationLocal:bestY
   912 op add .count .count 1
-    * set *tmp426 .count
   913 sensor *tmp428 :findDrillLocationLocal:item @id
   914 write *tmp428 bank1 .count
   915 op add .count .count 1
 
   945 set :moveTo.7:y :createTerrainMask:y
   946 set *tmp449 :createTerrainMask:x
   947 set *tmp450 :createTerrainMask:y
-    * set :moveTo.8:x :moveTo.7:x
-    * set :moveTo.8:y :moveTo.7:y
-    * set :moveTo.8:radius 6
+  948 set :moveTo.8:x :createTerrainMask:x
+  949 set :moveTo.8:y :createTerrainMask:y
   950 label *label361
-    * ucontrol within *tmp449 *tmp450 6 *tmp451
+  951 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp451
   952 jump *label363 notEqual *tmp451 false
-    * op sub *tmp453 6 0.5
-    * ucontrol approach *tmp449 *tmp450 5.5
+  953 ucontrol approach :createTerrainMask:x :createTerrainMask:y 5.5
   954 label *label362
   955 jump *label361 always
   956 label *label363
 
   971 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   972 select type equal type @boulder @air type
   973 select :isBlocked:result equal type @air 0 1
-    * set *tmp457 :isBlocked:result
   974 label *label370
   975 op or :createTerrainMask:result *tmp454 :isBlocked:result
   976 label *label368
 
  1036 setaddr :findPossiblePlacement*retaddr *label385 (h:*label385)
  1037 call *label11 *invalid :findPossiblePlacement*retval (m:*label385) (h:*label385)
  1038 label *label385
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1039 jump *label386 lessThan :findPossiblePlacement*retval 0
  1040 jump *label388 greaterThanEq :findPossiblePlacement*retval 0
  1041 set :tryPlaceGenerator*retval false
 
  1046 op add .water2X *tmp479 :findPossiblePlacement:x
  1047 op add *tmp481 :tryPlaceGenerator:centerY 0.5
  1048 op add .water2Y *tmp481 :findPossiblePlacement:y
-    * op add *tmp483 :tryPlaceGenerator:centerX 0.5
  1049 op add .generatorX *tmp479 :findPossiblePlacement:x
  1050 op add *tmp485 :tryPlaceGenerator:centerY 2.5
  1051 op add .generatorY *tmp485 :findPossiblePlacement:y
 
  1060 setaddr :findPossiblePlacement*retaddr *label390 (h:*label390)
  1061 call *label11 *invalid :findPossiblePlacement*retval (m:*label390) (h:*label390)
  1062 label *label390
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1063 op add *tmp489 :tryPlaceGenerator:centerX 0.5
  1064 op add .water2X *tmp489 :findPossiblePlacement:x
  1065 op add *tmp491 :tryPlaceGenerator:centerY 0.5
  1066 op add .water2Y *tmp491 :findPossiblePlacement:y
  1067 op add *tmp493 :tryPlaceGenerator:centerX 2.5
  1068 op add .generatorX *tmp493 :findPossiblePlacement:x
-    * op add *tmp495 :tryPlaceGenerator:centerY 0.5
  1069 op add .generatorY *tmp491 :findPossiblePlacement:y
  1070 op shl *tmp497 :tryPlaceGenerator:generatorHorizontal :findPossiblePlacement*retval
  1071 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp497
 
  1077 setaddr :findPossiblePlacement*retaddr *label391 (h:*label391)
  1078 call *label11 *invalid :findPossiblePlacement*retval (m:*label391) (h:*label391)
  1079 label *label391
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1080 jump *label392 greaterThanEq :findPossiblePlacement*retval 0
  1081 set :tryPlaceGenerator*retval false
  1082 jump *label384 always
 
  1093 setaddr :findPossiblePlacement*retaddr *label394 (h:*label394)
  1094 call *label11 *invalid :findPossiblePlacement*retval (m:*label394) (h:*label394)
  1095 label *label394
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1096 jump *label395 greaterThanEq :findPossiblePlacement*retval 0
  1097 set :tryPlaceGenerator*retval false
  1098 jump *label384 always
 
  1109 setaddr :findPossiblePlacement*retaddr *label397 (h:*label397)
  1110 call *label11 *invalid :findPossiblePlacement*retval (m:*label397) (h:*label397)
  1111 label *label397
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1112 jump *label398 greaterThanEq :findPossiblePlacement*retval 0
  1113 set :tryPlaceGenerator*retval false
  1114 jump *label384 always
 
  1116 label *label399
  1117 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
  1118 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
-    * op shl *tmp515 1 :findPossiblePlacement*retval
  1119 set :tryPlaceGenerator*retval true
  1120 jump *label384 always
  1121 label *label384
 
  1135 setaddr :createTerrainMask*retaddr *label401 (h:*label401)
  1136 call *label10 *invalid :createTerrainMask*retval (m:*label401) (h:*label401)
  1137 label *label401
-    * set :layoutThoriumDrillAtLocation:plainTerrainMask :createTerrainMask*retval
  1138 set :createFixedMatrix:row0 0b0000000
-    * set :createFixedMatrix:row1 0b0000000
-    * set :createFixedMatrix:row2 0b0011100
-    * set :createFixedMatrix:row3 0b0011100
-    * set :createFixedMatrix:row4 0b0011100
-    * set :createFixedMatrix:row5 0b0000000
-    * set :createFixedMatrix:row6 0b0000000
-    * set *tmp518 0b0000000
-    * op shl *tmp519 0b0000000 7
-    * op or *tmp520 :createFixedMatrix:row0 0
-    * op shl *tmp521 0b0011100 14
-    * op or *tmp522 *tmp520 458752
-    * op shl *tmp523 0b0011100 21
-    * op or *tmp524 *tmp522 58720256
-    * op shl *tmp525 0b0011100 28
-    * op or *tmp526 *tmp524 7516192768
-    * op shl *tmp527 0b0000000 35
-    * op or *tmp528 *tmp526 0
-    * op shl *tmp529 0b0000000 42
-    * op or *tmp517 *tmp528 0
+ 1139 op or *tmp520 0b0000000 0
+ 1140 op or *tmp522 0 458752
+ 1141 op or *tmp524 458752 58720256
+ 1142 op or *tmp526 59179008 7516192768
+ 1143 op or *tmp528 7575371776 0
+ 1144 op or *tmp517 7575371776 0
  1145 label *label402
-    * op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval *tmp517
+ 1146 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
  1147 set :createFixedMatrix.1:row0 0b1000001
-    * set :createFixedMatrix.1:row1 0b0000000
-    * set :createFixedMatrix.1:row2 0b0011100
-    * set :createFixedMatrix.1:row3 0b0011100
-    * set :createFixedMatrix.1:row4 0b0011100
-    * set :createFixedMatrix.1:row5 0b0000000
-    * set :createFixedMatrix.1:row6 0b1000001
-    * set *tmp533 0b1000001
-    * op shl *tmp534 0b0000000 7
-    * op or *tmp535 :createFixedMatrix.1:row0 0
-    * op shl *tmp536 0b0011100 14
-    * op or *tmp537 *tmp535 458752
-    * op shl *tmp538 0b0011100 21
-    * op or *tmp539 *tmp537 58720256
-    * op shl *tmp540 0b0011100 28
-    * op or *tmp541 *tmp539 7516192768
-    * op shl *tmp542 0b0000000 35
-    * op or *tmp543 *tmp541 0
-    * op shl *tmp544 0b1000001 42
-    * op or *tmp532 *tmp543 285873023221760
+ 1148 op or *tmp535 0b1000001 0
+ 1149 op or *tmp537 65 458752
+ 1150 op or *tmp539 458817 58720256
+ 1151 op or *tmp541 59179073 7516192768
+ 1152 op or *tmp543 7575371841 0
+ 1153 op or *tmp532 7575371841 285873023221760
  1154 label *label403
-    * op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp532
+ 1155 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
  1156 set :createFixedMatrix.2:row0 0b11
-    * set :createFixedMatrix.2:row1 0b11
-    * set *tmp548 0b11
-    * op shl *tmp549 0b11 7
-    * op or *tmp547 :createFixedMatrix.2:row0 384
+ 1157 op or *tmp547 0b11 384
  1158 label *label404
-    * set :layoutThoriumDrillAtLocation:mask2x2 *tmp547
+ 1159 set :layoutThoriumDrillAtLocation:mask2x2 387
  1160 setaddr :printMask*retaddr *label405 (h:*label405)
  1161 call *label14 *invalid :printMask*retval (m:*label405) (h:*label405)
  1162 label *label405
  1163 setaddr :printMask*retaddr *label406 (h:*label406)
  1164 call *label14 *invalid :printMask*retval (m:*label406) (h:*label406)
  1165 label *label406
-    * set :printMask:mask *tmp547
+ 1166 set :printMask:mask 387
  1167 setaddr :printMask*retaddr *label407 (h:*label407)
  1168 call *label14 *invalid :printMask*retval (m:*label407) (h:*label407)
  1169 label *label407
 
  1185 label *label410
  1186 label *label408
  1187 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
-    * set :findPossiblePlacement:placementMask *tmp547
+ 1188 set :findPossiblePlacement:placementMask 387
  1189 set :findPossiblePlacement:width 2
  1190 set :findPossiblePlacement:height 2
  1191 setaddr :findPossiblePlacement*retaddr *label417 (h:*label417)
  1192 call *label11 *invalid :findPossiblePlacement*retval (m:*label417) (h:*label417)
  1193 label *label417
-    * set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
-    * set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
-    * set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
  1194 jump *label418 lessThan :findPossiblePlacement*retval 0
  1195 op add *tmp558 .drillX 0.5
  1196 op add .water1X *tmp558 :findPossiblePlacement:x
 
  1198 op add .water1Y *tmp560 :findPossiblePlacement:y
  1199 op shl *tmp562 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
  1200 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp562
-    * op shl *tmp563 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
  1201 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:cornersMask *tmp562
  1202 label *label418
  1203 label *label419
 
  1208 setaddr :findPossiblePlacement*retaddr *label420 (h:*label420)
  1209 call *label11 *invalid :findPossiblePlacement*retval (m:*label420) (h:*label420)
  1210 label *label420
-    * set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
-    * set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
-    * set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
  1211 jump *label421 lessThan :findPossiblePlacement*retval 0
  1212 op add *tmp567 .drillX 0.5
  1213 op add .containerX *tmp567 :findPossiblePlacement:x
 
  1218 label *label421
  1219 label *label422
  1220 set :createFixedMatrix.3:row0 0b1111
-    * set :createFixedMatrix.3:row1 0b1111
-    * set *tmp573 0b1111
-    * op shl *tmp574 0b1111 7
-    * op or *tmp572 :createFixedMatrix.3:row0 1920
+ 1221 op or *tmp572 0b1111 1920
  1222 label *label423
-    * set :layoutThoriumDrillAtLocation:generatorHorizontal *tmp572
+ 1223 set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
  1224 set :createFixedMatrix.4:row0 0b11
-    * set :createFixedMatrix.4:row1 0b11
-    * set :createFixedMatrix.4:row2 0b11
-    * set :createFixedMatrix.4:row3 0b11
-    * set *tmp577 0b11
-    * op shl *tmp578 0b11 7
-    * op or *tmp579 :createFixedMatrix.4:row0 384
-    * op shl *tmp580 0b11 14
-    * op or *tmp581 *tmp579 49152
-    * op shl *tmp582 0b11 21
-    * op or *tmp576 *tmp581 6291456
+ 1225 op or *tmp579 0b11 384
+ 1226 op or *tmp581 387 49152
+ 1227 op or *tmp576 49539 6291456
  1228 label *label424
-    * set :layoutThoriumDrillAtLocation:generatorVertical *tmp576
+ 1229 set :layoutThoriumDrillAtLocation:generatorVertical 6340995
  1230 set :tryPlaceGenerator:centerX .drillX
  1231 set :tryPlaceGenerator:centerY .drillY
  1232 set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:terrainMask
-    * set :tryPlaceGenerator:generatorHorizontal *tmp572
-    * set :tryPlaceGenerator:generatorVertical *tmp576
+ 1233 set :tryPlaceGenerator:generatorHorizontal 1935
+ 1234 set :tryPlaceGenerator:generatorVertical 6340995
  1235 setaddr :tryPlaceGenerator*retaddr *label425 (h:*label425)
  1236 call *label12 *invalid :tryPlaceGenerator*retval (m:*label425) (h:*label425)
  1237 label *label425
 
  1266 setaddr :createTerrainMask*retaddr *label435 (h:*label435)
  1267 call *label10 *invalid :createTerrainMask*retval (m:*label435) (h:*label435)
  1268 label *label435
-    * set :layoutThoriumDrillAtLocation:newTerrainMask :createTerrainMask*retval
  1269 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
-    * set :shiftMask:shiftX :layoutThoriumDrillAtLocation:sx
-    * set :shiftMask:shiftY :layoutThoriumDrillAtLocation:sy
  1270 op abs *tmp591 :layoutThoriumDrillAtLocation:sx
  1271 op greaterThan *tmp592 *tmp591 6
  1272 op abs *tmp593 :layoutThoriumDrillAtLocation:sy
 
  1289 op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask *tmp604
  1290 label *label440
  1291 jump *label441 equal :layoutThoriumDrillAtLocation:sx 0
-    * op abs *tmp607 :layoutThoriumDrillAtLocation:sx
  1292 op sub *tmp608 7 *tmp591
  1293 op shr :shiftMask:keep 0b1111111 *tmp608
  1294 jump *label443 lessThanEq :layoutThoriumDrillAtLocation:sx 0
-    * op abs *tmp612 :layoutThoriumDrillAtLocation:sx
-    * op sub *tmp613 7 *tmp591
  1295 op shl :shiftMask:keep :shiftMask:keep *tmp608
  1296 label *label443
  1297 label *label444
 
  1307 set *tmp590 :shiftMask:mask
  1308 jump *label436 always
  1309 label *label436
-    * set :layoutThoriumDrillAtLocation:shiftedMask *tmp590
  1310 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp590
  1311 op sub *tmp618 .drillX :layoutThoriumDrillAtLocation:sx
  1312 op sub *tmp619 .drillY :layoutThoriumDrillAtLocation:sy

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-67 instructions):
 
    18 select value equal floor :spotValue:ore 0.00392156862745098 0
    19 sensor solid type @solid
    20 select :spotValue:result notEqual solid false 0.09803921568627451 value
-    * set *tmp1 :spotValue:result
    21 label *label18
    22 op sub :spotValue.1:x :computeRowValues:x 1
    23 set :spotValue.1:y :computeRowValues:y
 
    26 select value equal floor :spotValue.1:ore 0.00392156862745098 0
    27 sensor solid type @solid
    28 select :spotValue.1:result notEqual solid false 0.09803921568627451 value
-    * set *tmp3 :spotValue.1:result
    29 label *label19
    30 set :spotValue.2:x :computeRowValues:x
    31 set :spotValue.2:y :computeRowValues:y
 
    34 select value equal floor :spotValue.2:ore 0.00392156862745098 0
    35 sensor solid type @solid
    36 select :spotValue.2:result notEqual solid false 0.09803921568627451 value
-    * set *tmp5 :spotValue.2:result
    37 label *label20
    38 op add :spotValue.3:x :computeRowValues:x 1
    39 set :spotValue.3:y :computeRowValues:y
 
    42 select value equal floor :spotValue.3:ore 0.00392156862745098 0
    43 sensor solid type @solid
    44 select :spotValue.3:result notEqual solid false 0.09803921568627451 value
-    * set *tmp7 :spotValue.3:result
    45 label *label21
    46 op add :spotValue.4:x :computeRowValues:x 2
    47 set :spotValue.4:y :computeRowValues:y
 
    50 select value equal floor :spotValue.4:ore 0.00392156862745098 0
    51 sensor solid type @solid
    52 select :spotValue.4:result notEqual solid false 0.09803921568627451 value
-    * set *tmp9 :spotValue.4:result
    53 label *label22
    54 jump *label23 notEqual :computeRowValues:size 2
    55 op add *tmp12 :spotValue:result :spotValue.1:result
 
    63 jump *label25 notEqual :computeRowValues:size 3
    64 op add *tmp19 :spotValue.1:result :spotValue.2:result
    65 op add *tmp20 :spotValue:result *tmp19
-    * op add *tmp21 :spotValue.1:result :spotValue.2:result
    66 op add *tmp22 *tmp19 :spotValue.3:result
    67 op add *tmp23 :spotValue.2:result :spotValue.3:result
    68 op add *tmp24 *tmp23 :spotValue.4:result
 
    77 select value equal floor :spotValue.5:ore 0.00392156862745098 0
    78 sensor solid type @solid
    79 select :spotValue.5:result notEqual solid false 0.09803921568627451 value
-    * set *tmp27 :spotValue.5:result
    80 label *label27
    81 op add :spotValue.6:x :computeRowValues:x 3
    82 set :spotValue.6:y :computeRowValues:y
 
    85 select value equal floor :spotValue.6:ore 0.00392156862745098 0
    86 sensor solid type @solid
    87 select :spotValue.6:result notEqual solid false 0.09803921568627451 value
-    * set *tmp29 :spotValue.6:result
    88 label *label28
    89 op add *tmp30 :spotValue:result :spotValue.1:result
    90 op add *tmp31 *tmp30 :spotValue.2:result
    91 op add *tmp32 :spotValue.5:result *tmp31
    92 op min *tmp33 0.09803921568627451 *tmp32
-    * op add *tmp34 :spotValue:result :spotValue.1:result
-    * op add *tmp35 *tmp30 :spotValue.2:result
    93 op add *tmp36 *tmp31 :spotValue.3:result
    94 op min *tmp37 0.09803921568627451 *tmp36
    95 op add *tmp38 :spotValue.2:result :spotValue.3:result
    96 op add *tmp39 *tmp38 :spotValue.4:result
    97 op add *tmp40 :spotValue.1:result *tmp39
    98 op min *tmp41 0.09803921568627451 *tmp40
-    * op add *tmp42 :spotValue.2:result :spotValue.3:result
-    * op add *tmp43 *tmp38 :spotValue.4:result
    99 op add *tmp44 *tmp39 :spotValue.6:result
   100 op min *tmp45 0.09803921568627451 *tmp44
   101 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
 
   123 set .mapAction "Locating ore..."
   124 set .angle 0
   125 set .mapProgress 0
-    * set :moveTo.2:x :findDrillLocationLocal:x
-    * set :moveTo.2:y :findDrillLocationLocal:y
-    * set *tmp86 :findDrillLocationLocal:x
-    * set *tmp87 :findDrillLocationLocal:y
-    * set :moveTo.3:x :findDrillLocationLocal:x
-    * set :moveTo.3:y :findDrillLocationLocal:y
   126 label *label48
-    * ucontrol within .coreX .coreY 6 *tmp88
+  127 ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp88
   128 jump *label50 notEqual *tmp88 false
-    * ucontrol approach .coreX .coreY 5.5
+  129 ucontrol approach :findDrillLocationLocal:x :findDrillLocationLocal:y 5.5
   130 label *label49
   131 jump *label48 always
   132 label *label50
 
   162 op max *tmp109 *tmp106 5
   163 op min *tmp108 *tmp109 *tmp107
   164 label *label58
-    * set :locateOreAway:lx *tmp108
   165 op cos *tmp111 :locateOreAway:a
   166 op mul *tmp112 *tmp111 :locateOreAway:distance
   167 op add *tmp113 .coreY *tmp112
 
   169 op max *tmp116 *tmp113 5
   170 op min *tmp115 *tmp116 *tmp114
   171 label *label59
-    * set :locateOreAway:ly *tmp115
   172 label *label61
   173 ucontrol within *tmp108 *tmp115 5 *tmp118
   174 jump *label63 notEqual *tmp118 false
 
   260 op add .mapSpots .mapSpots 1
   261 label *label84
   262 label *label85
-    * set :moveTo.5:x :locateOreAway:x
-    * set :moveTo.5:y :locateOreAway:y
-    * set *tmp168 :locateOreAway:x
-    * set *tmp169 :locateOreAway:y
-    * set :moveTo.6:x :locateOreAway:x
-    * set :moveTo.6:y :locateOreAway:y
   263 label *label88
-    * ucontrol within :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 6 *tmp170
+  264 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp170
   265 jump *label90 notEqual *tmp170 false
-    * ucontrol approach :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 5.5
+  266 ucontrol approach :locateOreAway:x :locateOreAway:y 5.5
   267 label *label89
   268 jump *label88 always
   269 label *label90
 
   327 op add :findBestPosition:row2 :findBestPosition:y2 :findBestPosition:y3
   328 op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
   329 op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
-    * set :updateRowPositions2x2:dy -1.5
   330 unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :findBestPosition:row1
   331 jump *label104 greaterThanEq :updateRowPositions2x2:col1 0.0784313725490196
   332 jump *label106 lessThanEq :updateRowPositions2x2:col1 0
 
   369 label *label120
   370 label *label118
   371 label *label102
-    * set :updateRowPositions2x2.1:dy -0.5
   372 unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :findBestPosition:row2
   373 jump *label125 greaterThanEq :updateRowPositions2x2.1:col1 0.0784313725490196
   374 jump *label127 lessThanEq :updateRowPositions2x2.1:col1 :findBestPosition:best
 
   411 label *label141
   412 label *label139
   413 label *label123
-    * set :updateRowPositions2x2.2:dy 0.5
   414 unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :findBestPosition:row3
   415 jump *label146 greaterThanEq :updateRowPositions2x2.2:col1 0.0784313725490196
   416 jump *label148 lessThanEq :updateRowPositions2x2.2:col1 :findBestPosition:best
 
   453 label *label162
   454 label *label160
   455 label *label144
-    * set :updateRowPositions2x2.3:dy 1.5
   456 unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :findBestPosition:row4
   457 jump *label167 greaterThanEq :updateRowPositions2x2.3:col1 0.0784313725490196
   458 jump *label169 lessThanEq :updateRowPositions2x2.3:col1 :findBestPosition:best
 
   503 op add :findBestPosition:row2.1 *tmp256 :findBestPosition:y4
   504 op add *tmp260 :findBestPosition:y3 :findBestPosition:y4
   505 op add :findBestPosition:row3.1 *tmp260 :computeRowValues*retval
-    * set :updateRowPositions3x3:dy -1
   506 unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :findBestPosition:row1.1
   507 jump *label190 greaterThanEq :updateRowPositions3x3:col1 0.0784313725490196
   508 jump *label192 lessThanEq :updateRowPositions3x3:col1 0
 
   535 label *label201
   536 label *label199
   537 label *label188
-    * set :updateRowPositions3x3.1:dy 0
   538 unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :findBestPosition:row2.1
   539 jump *label206 greaterThanEq :updateRowPositions3x3.1:col1 0.0784313725490196
   540 jump *label208 lessThanEq :updateRowPositions3x3.1:col1 :findBestPosition:best
 
   567 label *label217
   568 label *label215
   569 label *label204
-    * set :updateRowPositions3x3.2:dy 1
   570 unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :findBestPosition:row3.1
   571 jump *label222 greaterThanEq :updateRowPositions3x3.2:col1 0.0784313725490196
   572 jump *label224 lessThanEq :updateRowPositions3x3.2:col1 :findBestPosition:best
 
   626 op add *tmp312 *tmp311 :findBestPosition:y5
   627 op add :findBestPosition:row3.2 :findBestPosition:y2 *tmp312
   628 op add :findBestPosition:row4.1 *tmp312 :computeRowValues*retval
-    * set :updateRowPositions4x4:dy -1.5
   629 unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 :updateRowPositions4x4:col3 :updateRowPositions4x4:col4 :findBestPosition:row1.2
   630 jump *label240 greaterThanEq :updateRowPositions4x4:col1 0.0784313725490196
   631 jump *label242 lessThanEq :updateRowPositions4x4:col1 :findBestPosition:best
 
   668 label *label256
   669 label *label254
   670 label *label238
-    * set :updateRowPositions4x4.1:dy -0.5
   671 unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 :updateRowPositions4x4.1:col3 :updateRowPositions4x4.1:col4 :findBestPosition:row2.2
   672 jump *label261 greaterThanEq :updateRowPositions4x4.1:col1 0.0784313725490196
   673 jump *label263 lessThanEq :updateRowPositions4x4.1:col1 :findBestPosition:best
 
   710 label *label277
   711 label *label275
   712 label *label259
-    * set :updateRowPositions4x4.2:dy 0.5
   713 unpackcolor :updateRowPositions4x4.2:col1 :updateRowPositions4x4.2:col2 :updateRowPositions4x4.2:col3 :updateRowPositions4x4.2:col4 :findBestPosition:row3.2
   714 jump *label282 greaterThanEq :updateRowPositions4x4.2:col1 0.0784313725490196
   715 jump *label284 lessThanEq :updateRowPositions4x4.2:col1 :findBestPosition:best
 
   752 label *label298
   753 label *label296
   754 label *label280
-    * set :updateRowPositions4x4.3:dy 1.5
   755 unpackcolor :updateRowPositions4x4.3:col1 :updateRowPositions4x4.3:col2 :updateRowPositions4x4.3:col3 :updateRowPositions4x4.3:col4 :findBestPosition:row4.1
   756 jump *label303 greaterThanEq :updateRowPositions4x4.3:col1 0.0784313725490196
   757 jump *label305 lessThanEq :updateRowPositions4x4.3:col1 :findBestPosition:best
 
   799 op mul *tmp173 :findBestPosition:best 255
   800 jump *label94 always
   801 label *label94
-    * set :findDrillLocationLocal:score *tmp173
   802 jump *label322 lessThanEq *tmp173 :findDrillLocationLocal:capacity
   803 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   804 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
 
   903 return :findDrillLocationLocal*retaddr
   904 end
   905 label *label10
-    * set :moveTo.7:x :createTerrainMask:x
-    * set :moveTo.7:y :createTerrainMask:y
-    * set *tmp449 :createTerrainMask:x
-    * set *tmp450 :createTerrainMask:y
-    * set :moveTo.8:x :createTerrainMask:x
-    * set :moveTo.8:y :createTerrainMask:y
   906 label *label361
   907 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp451
   908 jump *label363 notEqual *tmp451 false
 
  1091 setaddr :createTerrainMask*retaddr *label401 (h:*label401)
  1092 call *label10 *invalid :createTerrainMask*retval (m:*label401) (h:*label401)
  1093 label *label401
-    * set :createFixedMatrix:row0 0b0000000
-    * op or *tmp520 0b0000000 0
-    * op or *tmp522 0 458752
-    * op or *tmp524 458752 58720256
-    * op or *tmp526 59179008 7516192768
-    * op or *tmp528 7575371776 0
-    * op or *tmp517 7575371776 0
  1094 label *label402
  1095 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
-    * set :createFixedMatrix.1:row0 0b1000001
-    * op or *tmp535 0b1000001 0
-    * op or *tmp537 65 458752
-    * op or *tmp539 458817 58720256
-    * op or *tmp541 59179073 7516192768
-    * op or *tmp543 7575371841 0
-    * op or *tmp532 7575371841 285873023221760
  1096 label *label403
  1097 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
-    * set :createFixedMatrix.2:row0 0b11
-    * op or *tmp547 0b11 384
  1098 label *label404
  1099 set :layoutThoriumDrillAtLocation:mask2x2 387
  1100 setaddr :printMask*retaddr *label405 (h:*label405)
 
  1103 setaddr :printMask*retaddr *label406 (h:*label406)
  1104 call *label14 *invalid :printMask*retval (m:*label406) (h:*label406)
  1105 label *label406
-    * set :printMask:mask 387
  1106 setaddr :printMask*retaddr *label407 (h:*label407)
  1107 call *label14 *invalid :printMask*retval (m:*label407) (h:*label407)
  1108 label *label407
 
  1156 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp571
  1157 label *label421
  1158 label *label422
-    * set :createFixedMatrix.3:row0 0b1111
-    * op or *tmp572 0b1111 1920
  1159 label *label423
  1160 set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
-    * set :createFixedMatrix.4:row0 0b11
-    * op or *tmp579 0b11 384
-    * op or *tmp581 387 49152
-    * op or *tmp576 49539 6291456
  1161 label *label424
  1162 set :layoutThoriumDrillAtLocation:generatorVertical 6340995
  1163 set :tryPlaceGenerator:centerX .drillX

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
   152 set :locateOreAway:lastY -1
   153 op max .angle .angle @pi
   154 op mul .mapProgress .angle .angle
+  155 op sub *tmp107 @mapw 5
+  156 op sub *tmp114 @maph 5
   157 label *label55
   158 jump *label57 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   159 op div :locateOreAway:a .angle @degToRad
   160 op sin *tmp104 :locateOreAway:a
   161 op mul *tmp105 *tmp104 :locateOreAway:distance
   162 op add *tmp106 .coreX *tmp105
-    * op sub *tmp107 @mapw 5
   163 op max *tmp109 *tmp106 5
   164 op min *tmp108 *tmp109 *tmp107
   165 label *label58
   166 op cos *tmp111 :locateOreAway:a
   167 op mul *tmp112 *tmp111 :locateOreAway:distance
   168 op add *tmp113 .coreY *tmp112
-    * op sub *tmp114 @maph 5
   169 op max *tmp116 *tmp113 5
   170 op min *tmp115 *tmp116 *tmp114
   171 label *label59
 
   917 label *label364
   918 jump *label366 lessThan :createTerrainMask:r -3
   919 set :createTerrainMask:c 3
+  920 op add *tmp456 :createTerrainMask:y :createTerrainMask:r
   921 label *label367
   922 jump *label369 lessThan :createTerrainMask:c -3
   923 op shl *tmp454 :createTerrainMask:result 1
   924 op add *tmp455 :createTerrainMask:x :createTerrainMask:c
-    * op add *tmp456 :createTerrainMask:y :createTerrainMask:r
   925 set :isBlocked:x *tmp455
   926 set :isBlocked:y *tmp456
   927 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-2 instructions):
 
   156 op sub *tmp114 @maph 5
   157 label *label55
   158 jump *label57 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
+  159 label *label467
   160 op div :locateOreAway:a .angle @degToRad
   161 op sin *tmp104 :locateOreAway:a
   162 op mul *tmp105 *tmp104 :locateOreAway:distance
 
   211 set :visited:i .locationsStart
   212 label *label75
   213 jump *label77 greaterThanEq :visited:i *tmp145
+  214 label *label468
   215 op mul :visited:index 4 :visited:i
   216 op add *tmp147 :visited:index 2
   217 read :visited:lx bank1 *tmp147
 
   227 label *label79
   228 label *label76
   229 op add :visited:i :visited:i 1
-    * jump *label75 always
+  230 jump *label468 lessThan :visited:i *tmp145
   231 label *label77
   232 set *tmp144 false
   233 jump *label74 always
 
   246 label *label70
   247 label *label71
   248 label *label56
-    * jump *label55 always
+  249 jump *label467 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   250 label *label57
   251 set *tmp98 false
   252 jump *label54 always
 
   917 set :createTerrainMask:result 0
   918 set :createTerrainMask:r 3
   919 label *label364
-    * jump *label366 lessThan :createTerrainMask:r -3
+  920 label *label469
   921 set :createTerrainMask:c 3
   922 op add *tmp456 :createTerrainMask:y :createTerrainMask:r
   923 label *label367
-    * jump *label369 lessThan :createTerrainMask:c -3
+  924 label *label470
   925 op shl *tmp454 :createTerrainMask:result 1
   926 op add *tmp455 :createTerrainMask:x :createTerrainMask:c
   927 set :isBlocked:x *tmp455
 
   933 op or :createTerrainMask:result *tmp454 :isBlocked:result
   934 label *label368
   935 op sub :createTerrainMask:c :createTerrainMask:c 1
-    * jump *label367 always
+  936 jump *label470 greaterThanEq :createTerrainMask:c -3
   937 label *label369
   938 label *label365
   939 op sub :createTerrainMask:r :createTerrainMask:r 1
-    * jump *label364 always
+  940 jump *label469 greaterThanEq :createTerrainMask:r -3
   941 label *label366
   942 set :createTerrainMask*retval :createTerrainMask:result
   943 jump *label358 always
 
   948 set :findPossiblePlacement:y -3
   949 label *label372
   950 jump *label374 greaterThan :findPossiblePlacement:y 3
+  951 label *label471
   952 op add *tmp459 :findPossiblePlacement:y 3
   953 op mul *tmp460 7 *tmp459
   954 op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp460
   955 set :findPossiblePlacement:x -3
   956 label *label375
   957 jump *label377 greaterThan :findPossiblePlacement:x 3
+  958 label *label472
   959 op and *tmp462 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
   960 jump *label378 notEqual *tmp462 0
   961 op mul *tmp465 :findPossiblePlacement:y 7
 
   972 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
   973 label *label376
   974 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
-    * jump *label375 always
+  975 jump *label472 lessThanEq :findPossiblePlacement:x 3
   976 label *label377
   977 op sub *tmp471 3 :findPossiblePlacement:height
   978 jump *label382 lessThanEq :findPossiblePlacement:y *tmp471
 
   981 label *label383
   982 label *label373
   983 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
-    * jump *label372 always
+  984 jump *label471 lessThanEq :findPossiblePlacement:y 3
   985 label *label374
   986 set :findPossiblePlacement*retval -1
   987 jump *label371 always
 
  1332 print "\n"
  1333 label *label459
  1334 jump *label461 lessThan :printMask:r 0
+ 1335 label *label473
  1336 label *label462
  1337 jump *label464 greaterThanEq :printMask:c 7
+ 1338 label *label474
  1339 jump *label465 equal *tmp628 false
  1340 jump *label466 always
  1341 label *label465
  1342 label *label466
  1343 print "x"
  1344 label *label463
-    * jump *label462 always
+ 1345 jump *label474 lessThan :printMask:c 7
  1346 label *label464
  1347 print "\n"
  1348 label *label460
-    * jump *label459 always
+ 1349 jump *label473 greaterThanEq :printMask:r 0
  1350 label *label461
  1351 label *label457
  1352 label *label458

Modifications by Replicate loop condition at line 41:5 (+1 instructions):
 
   173 label *label61
   174 ucontrol within *tmp108 *tmp115 5 *tmp118
   175 jump *label63 notEqual *tmp118 false
+  176 label *label475
   177 ucontrol approach *tmp108 *tmp115 4.5
   178 label *label62
-    * jump *label61 always
+  179 ucontrol within *tmp108 *tmp115 5 *tmp118
+  180 jump *label475 equal *tmp118 false
   181 label *label63
   182 label *label60
   183 op div *tmp121 3.8197185279121366 :locateOreAway:distance

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   212 set *tmp145 .locations
   213 set :visited:i .locationsStart
   214 label *label75
-    * jump *label77 greaterThanEq :visited:i *tmp145
+  215 jump *label77 greaterThanEq .locationsStart *tmp145
   216 label *label468
   217 op mul :visited:index 4 :visited:i
   218 op add *tmp147 :visited:index 2

Modifications by Replicate loop condition at line 41:5 (+1 instructions):
 
   267 label *label88
   268 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp170
   269 jump *label90 notEqual *tmp170 false
+  270 label *label476
   271 ucontrol approach :locateOreAway:x :locateOreAway:y 5.5
   272 label *label89
-    * jump *label88 always
+  273 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp170
+  274 jump *label476 equal *tmp170 false
   275 label *label90
   276 label *label87
   277 label *label86

Modifications by Replicate loop condition at line 41:5 (+1 instructions):
 
   912 label *label361
   913 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp451
   914 jump *label363 notEqual *tmp451 false
+  915 label *label477
   916 ucontrol approach :createTerrainMask:x :createTerrainMask:y 5.5
   917 label *label362
-    * jump *label361 always
+  918 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp451
+  919 jump *label477 equal *tmp451 false
   920 label *label363
   921 label *label360
   922 label *label359

Modifications by Inline function call at line 160:14 (+78 instructions):
 
   286 set :computeRowValues:y *tmp174
   287 set :computeRowValues:ore :findDrillLocationLocal:ore
   288 set :computeRowValues:size :findDrillLocationLocal:size
-    * setaddr :computeRowValues*retaddr *label95 (h:*label95)
-    * call *label6 *invalid :computeRowValues*retval (m:*label95) (h:*label95)
-    * label *label95
+  289 label *label478
+  290 op sub :spotValue:x :computeRowValues:x 2
+  291 set :spotValue:y :computeRowValues:y
+  292 set :spotValue:ore :computeRowValues:ore
+  293 ucontrol getBlock :spotValue:x :spotValue:y type building floor
+  294 select value equal floor :spotValue:ore 0.00392156862745098 0
+  295 sensor solid type @solid
+  296 select :spotValue:result notEqual solid false 0.09803921568627451 value
+  297 label *label479
+  298 op sub :spotValue.1:x :computeRowValues:x 1
+  299 set :spotValue.1:y :computeRowValues:y
+  300 set :spotValue.1:ore :computeRowValues:ore
+  301 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
+  302 select value equal floor :spotValue.1:ore 0.00392156862745098 0
+  303 sensor solid type @solid
+  304 select :spotValue.1:result notEqual solid false 0.09803921568627451 value
+  305 label *label480
+  306 set :spotValue.2:x :computeRowValues:x
+  307 set :spotValue.2:y :computeRowValues:y
+  308 set :spotValue.2:ore :computeRowValues:ore
+  309 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
+  310 select value equal floor :spotValue.2:ore 0.00392156862745098 0
+  311 sensor solid type @solid
+  312 select :spotValue.2:result notEqual solid false 0.09803921568627451 value
+  313 label *label481
+  314 op add :spotValue.3:x :computeRowValues:x 1
+  315 set :spotValue.3:y :computeRowValues:y
+  316 set :spotValue.3:ore :computeRowValues:ore
+  317 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
+  318 select value equal floor :spotValue.3:ore 0.00392156862745098 0
+  319 sensor solid type @solid
+  320 select :spotValue.3:result notEqual solid false 0.09803921568627451 value
+  321 label *label482
+  322 op add :spotValue.4:x :computeRowValues:x 2
+  323 set :spotValue.4:y :computeRowValues:y
+  324 set :spotValue.4:ore :computeRowValues:ore
+  325 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
+  326 select value equal floor :spotValue.4:ore 0.00392156862745098 0
+  327 sensor solid type @solid
+  328 select :spotValue.4:result notEqual solid false 0.09803921568627451 value
+  329 label *label483
+  330 jump *label484 notEqual :computeRowValues:size 2
+  331 op add *tmp12 :spotValue:result :spotValue.1:result
+  332 op add *tmp13 :spotValue.1:result :spotValue.2:result
+  333 op add *tmp14 :spotValue.2:result :spotValue.3:result
+  334 op add *tmp15 :spotValue.3:result :spotValue.4:result
+  335 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
+  336 jump *label490 always
+  337 jump *label489 always
+  338 label *label484
+  339 jump *label485 notEqual :computeRowValues:size 3
+  340 op add *tmp19 :spotValue.1:result :spotValue.2:result
+  341 op add *tmp20 :spotValue:result *tmp19
+  342 op add *tmp22 *tmp19 :spotValue.3:result
+  343 op add *tmp23 :spotValue.2:result :spotValue.3:result
+  344 op add *tmp24 *tmp23 :spotValue.4:result
+  345 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
+  346 jump *label490 always
+  347 jump *label488 always
+  348 label *label485
+  349 op sub :spotValue.5:x :computeRowValues:x 3
+  350 set :spotValue.5:y :computeRowValues:y
+  351 set :spotValue.5:ore :computeRowValues:ore
+  352 ucontrol getBlock :spotValue.5:x :spotValue.5:y type building floor
+  353 select value equal floor :spotValue.5:ore 0.00392156862745098 0
+  354 sensor solid type @solid
+  355 select :spotValue.5:result notEqual solid false 0.09803921568627451 value
+  356 label *label486
+  357 op add :spotValue.6:x :computeRowValues:x 3
+  358 set :spotValue.6:y :computeRowValues:y
+  359 set :spotValue.6:ore :computeRowValues:ore
+  360 ucontrol getBlock :spotValue.6:x :spotValue.6:y type building floor
+  361 select value equal floor :spotValue.6:ore 0.00392156862745098 0
+  362 sensor solid type @solid
+  363 select :spotValue.6:result notEqual solid false 0.09803921568627451 value
+  364 label *label487
+  365 op add *tmp30 :spotValue:result :spotValue.1:result
+  366 op add *tmp31 *tmp30 :spotValue.2:result
+  367 op add *tmp32 :spotValue.5:result *tmp31
+  368 op min *tmp33 0.09803921568627451 *tmp32
+  369 op add *tmp36 *tmp31 :spotValue.3:result
+  370 op min *tmp37 0.09803921568627451 *tmp36
+  371 op add *tmp38 :spotValue.2:result :spotValue.3:result
+  372 op add *tmp39 *tmp38 :spotValue.4:result
+  373 op add *tmp40 :spotValue.1:result *tmp39
+  374 op min *tmp41 0.09803921568627451 *tmp40
+  375 op add *tmp44 *tmp39 :spotValue.6:result
+  376 op min *tmp45 0.09803921568627451 *tmp44
+  377 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
+  378 jump *label490 always
+  379 label *label488
+  380 label *label489
+  381 label *label490
   382 set :findBestPosition:y1 :computeRowValues*retval
   383 op sub *tmp176 :findBestPosition:y 1
   384 set :computeRowValues:x :findBestPosition:x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   287 set :computeRowValues:ore :findDrillLocationLocal:ore
   288 set :computeRowValues:size :findDrillLocationLocal:size
   289 label *label478
-    * op sub :spotValue:x :computeRowValues:x 2
-    * set :spotValue:y :computeRowValues:y
-    * set :spotValue:ore :computeRowValues:ore
+  290 op sub :spotValue:x :findDrillLocationLocal:oreX 2
+  291 set :spotValue:y *tmp174
+  292 set :spotValue:ore :findDrillLocationLocal:ore
   293 ucontrol getBlock :spotValue:x :spotValue:y type building floor
   294 select value equal floor :spotValue:ore 0.00392156862745098 0
   295 sensor solid type @solid
   296 select :spotValue:result notEqual solid false 0.09803921568627451 value
   297 label *label479
-    * op sub :spotValue.1:x :computeRowValues:x 1
-    * set :spotValue.1:y :computeRowValues:y
-    * set :spotValue.1:ore :computeRowValues:ore
+  298 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
+  299 set :spotValue.1:y *tmp174
+  300 set :spotValue.1:ore :findDrillLocationLocal:ore
   301 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
   302 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   303 sensor solid type @solid
   304 select :spotValue.1:result notEqual solid false 0.09803921568627451 value
   305 label *label480
-    * set :spotValue.2:x :computeRowValues:x
-    * set :spotValue.2:y :computeRowValues:y
-    * set :spotValue.2:ore :computeRowValues:ore
+  306 set :spotValue.2:x :findDrillLocationLocal:oreX
+  307 set :spotValue.2:y *tmp174
+  308 set :spotValue.2:ore :findDrillLocationLocal:ore
   309 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
   310 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   311 sensor solid type @solid
   312 select :spotValue.2:result notEqual solid false 0.09803921568627451 value
   313 label *label481
-    * op add :spotValue.3:x :computeRowValues:x 1
-    * set :spotValue.3:y :computeRowValues:y
-    * set :spotValue.3:ore :computeRowValues:ore
+  314 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
+  315 set :spotValue.3:y *tmp174
+  316 set :spotValue.3:ore :findDrillLocationLocal:ore
   317 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
   318 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   319 sensor solid type @solid
   320 select :spotValue.3:result notEqual solid false 0.09803921568627451 value
   321 label *label482
-    * op add :spotValue.4:x :computeRowValues:x 2
-    * set :spotValue.4:y :computeRowValues:y
-    * set :spotValue.4:ore :computeRowValues:ore
+  322 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
+  323 set :spotValue.4:y *tmp174
+  324 set :spotValue.4:ore :findDrillLocationLocal:ore
   325 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
   326 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   327 sensor solid type @solid
   328 select :spotValue.4:result notEqual solid false 0.09803921568627451 value
   329 label *label483
-    * jump *label484 notEqual :computeRowValues:size 2
+  330 jump *label484 notEqual :findDrillLocationLocal:size 2
   331 op add *tmp12 :spotValue:result :spotValue.1:result
   332 op add *tmp13 :spotValue.1:result :spotValue.2:result
   333 op add *tmp14 :spotValue.2:result :spotValue.3:result
 
   336 jump *label490 always
   337 jump *label489 always
   338 label *label484
-    * jump *label485 notEqual :computeRowValues:size 3
+  339 jump *label485 notEqual :findDrillLocationLocal:size 3
   340 op add *tmp19 :spotValue.1:result :spotValue.2:result
   341 op add *tmp20 :spotValue:result *tmp19
   342 op add *tmp22 *tmp19 :spotValue.3:result
 
   346 jump *label490 always
   347 jump *label488 always
   348 label *label485
-    * op sub :spotValue.5:x :computeRowValues:x 3
-    * set :spotValue.5:y :computeRowValues:y
-    * set :spotValue.5:ore :computeRowValues:ore
+  349 op sub :spotValue.5:x :findDrillLocationLocal:oreX 3
+  350 set :spotValue.5:y *tmp174
+  351 set :spotValue.5:ore :findDrillLocationLocal:ore
   352 ucontrol getBlock :spotValue.5:x :spotValue.5:y type building floor
   353 select value equal floor :spotValue.5:ore 0.00392156862745098 0
   354 sensor solid type @solid
   355 select :spotValue.5:result notEqual solid false 0.09803921568627451 value
   356 label *label486
-    * op add :spotValue.6:x :computeRowValues:x 3
-    * set :spotValue.6:y :computeRowValues:y
-    * set :spotValue.6:ore :computeRowValues:ore
+  357 op add :spotValue.6:x :findDrillLocationLocal:oreX 3
+  358 set :spotValue.6:y *tmp174
+  359 set :spotValue.6:ore :findDrillLocationLocal:ore
   360 ucontrol getBlock :spotValue.6:x :spotValue.6:y type building floor
   361 select value equal floor :spotValue.6:ore 0.00392156862745098 0
   362 sensor solid type @solid
 
   380 label *label489
   381 label *label490
   382 set :findBestPosition:y1 :computeRowValues*retval
-    * op sub *tmp176 :findBestPosition:y 1
-    * set :computeRowValues:x :findBestPosition:x
+  383 op sub *tmp176 :findDrillLocationLocal:oreY 1
+  384 set :computeRowValues:x :findDrillLocationLocal:oreX
   385 set :computeRowValues:y *tmp176
-    * set :computeRowValues:ore :findBestPosition:ore
-    * set :computeRowValues:size :findBestPosition:size
+  386 set :computeRowValues:ore :findDrillLocationLocal:ore
+  387 set :computeRowValues:size :findDrillLocationLocal:size
   388 setaddr :computeRowValues*retaddr *label96 (h:*label96)
   389 call *label6 *invalid :computeRowValues*retval (m:*label96) (h:*label96)
   390 label *label96

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   282 set :findBestPosition:ore :findDrillLocationLocal:ore
   283 set :findBestPosition:size :findDrillLocationLocal:size
   284 op sub *tmp174 :findDrillLocationLocal:oreY 2
-    * set :computeRowValues:x :findDrillLocationLocal:oreX
-    * set :computeRowValues:y *tmp174
-    * set :computeRowValues:ore :findDrillLocationLocal:ore
-    * set :computeRowValues:size :findDrillLocationLocal:size
   285 label *label478
   286 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   287 set :spotValue:y *tmp174

Modifications by Replicate loop condition at line 41:5 (+1 instructions):
 
   126 label *label48
   127 ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp88
   128 jump *label50 notEqual *tmp88 false
+  129 label *label491
   130 ucontrol approach :findDrillLocationLocal:x :findDrillLocationLocal:y 5.5
   131 label *label49
-    * jump *label48 always
+  132 ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp88
+  133 jump *label491 equal *tmp88 false
   134 label *label50
   135 label *label47
   136 label *label46

Modifications by Inline function call at line 669:5 (+9 instructions):
 
  1195 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
  1196 label *label404
  1197 set :layoutThoriumDrillAtLocation:mask2x2 387
-    * setaddr :printMask*retaddr *label405 (h:*label405)
-    * call *label14 *invalid :printMask*retval (m:*label405) (h:*label405)
-    * label *label405
+ 1198 label *label492
+ 1199 jump *label503 always
+ 1200 print :printMask:text
+ 1201 print "\n"
+ 1202 label *label493
+ 1203 jump *label502 lessThan :printMask:r 0
+ 1204 label *label494
+ 1205 label *label495
+ 1206 jump *label500 greaterThanEq :printMask:c 7
+ 1207 label *label496
+ 1208 jump *label497 equal *tmp628 false
+ 1209 jump *label498 always
+ 1210 label *label497
+ 1211 label *label498
+ 1212 print "x"
+ 1213 label *label499
+ 1214 jump *label496 lessThan :printMask:c 7
+ 1215 label *label500
+ 1216 print "\n"
+ 1217 label *label501
+ 1218 jump *label494 greaterThanEq :printMask:r 0
+ 1219 label *label502
+ 1220 label *label503
+ 1221 label *label504
+ 1222 label *label505
  1223 setaddr :printMask*retaddr *label406 (h:*label406)
  1224 call *label14 *invalid :printMask*retval (m:*label406) (h:*label406)
  1225 label *label406

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-11 instructions):
 
    99 op add *tmp44 *tmp39 :spotValue.6:result
   100 op min *tmp45 0.09803921568627451 *tmp44
   101 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
-    * jump *label17 always
   102 label *label26
   103 label *label24
   104 label *label17
 
   233 jump *label468 lessThan :visited:i *tmp145
   234 label *label77
   235 set *tmp144 false
-    * jump *label74 always
   236 label *label74
   237 jump *label80 notEqual *tmp144 false
   238 op div *tmp160 2 .angle
 
   251 jump *label467 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   252 label *label57
   253 set *tmp98 false
-    * jump *label54 always
   254 label *label54
   255 set :findDrillLocationLocal:oreX :locateOreAway:x
   256 set :findDrillLocationLocal:oreY :locateOreAway:y
 
   370 op add *tmp44 *tmp39 :spotValue.6:result
   371 op min *tmp45 0.09803921568627451 *tmp44
   372 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
-    * jump *label490 always
   373 label *label488
   374 label *label489
   375 label *label490
 
   887 label *label187
   888 label *label101
   889 op mul *tmp173 :findBestPosition:best 255
-    * jump *label94 always
   890 label *label94
   891 jump *label322 lessThanEq *tmp173 :findDrillLocationLocal:capacity
   892 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
 
  1029 jump *label469 greaterThanEq :createTerrainMask:r -3
  1030 label *label366
  1031 set :createTerrainMask*retval :createTerrainMask:result
-    * jump *label358 always
  1032 label *label358
  1033 return :createTerrainMask*retaddr
  1034 end
 
  1072 jump *label471 lessThanEq :findPossiblePlacement:y 3
  1073 label *label374
  1074 set :findPossiblePlacement*retval -1
-    * jump *label371 always
  1075 label *label371
  1076 return :findPossiblePlacement*retaddr
  1077 end
 
  1199 jump *label500 greaterThanEq :printMask:c 7
  1200 label *label496
  1201 jump *label497 equal *tmp628 false
-    * jump *label498 always
  1202 label *label497
  1203 label *label498
  1204 print "x"
 
  1350 label *label441
  1351 label *label442
  1352 set *tmp590 :shiftMask:mask
-    * jump *label436 always
  1353 label *label436
  1354 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp590
  1355 op sub *tmp618 .drillX :layoutThoriumDrillAtLocation:sx
 
  1372 multilabel *label434 (m:marker0)
  1373 label *label430
  1374 set :layoutThoriumDrillAtLocation*retval true
-    * jump *label400 always
  1375 label *label400
  1376 return :layoutThoriumDrillAtLocation*retaddr
  1377 end
 
  1443 jump *label464 greaterThanEq :printMask:c 7
  1444 label *label474
  1445 jump *label465 equal *tmp628 false
-    * jump *label466 always
  1446 label *label465
  1447 label *label466
  1448 print "x"

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-2 instructions):
 
  1198 label *label495
  1199 jump *label500 greaterThanEq :printMask:c 7
  1200 label *label496
-    * jump *label497 equal *tmp628 false
  1201 label *label497
  1202 label *label498
  1203 print "x"
 
  1441 label *label462
  1442 jump *label464 greaterThanEq :printMask:c 7
  1443 label *label474
-    * jump *label465 equal *tmp628 false
  1444 label *label465
  1445 label *label466
  1446 print "x"

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-2 instructions):
 
   327 op add *tmp13 :spotValue.1:result :spotValue.2:result
   328 op add *tmp14 :spotValue.2:result :spotValue.3:result
   329 op add *tmp15 :spotValue.3:result :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
+  330 packcolor :findBestPosition:y1 *tmp12 *tmp13 *tmp14 *tmp15
   331 jump *label490 always
   332 jump *label489 always
   333 label *label484
 
   337 op add *tmp22 *tmp19 :spotValue.3:result
   338 op add *tmp23 :spotValue.2:result :spotValue.3:result
   339 op add *tmp24 *tmp23 :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
+  340 packcolor :findBestPosition:y1 *tmp20 *tmp22 *tmp24 0
   341 jump *label490 always
   342 jump *label488 always
   343 label *label485
 
   369 op min *tmp41 0.09803921568627451 *tmp40
   370 op add *tmp44 *tmp39 :spotValue.6:result
   371 op min *tmp45 0.09803921568627451 *tmp44
-    * packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
+  372 packcolor :findBestPosition:y1 *tmp33 *tmp37 *tmp41 *tmp45
   373 label *label488
   374 label *label489
   375 label *label490
-    * set :findBestPosition:y1 :computeRowValues*retval
   376 op sub *tmp176 :findDrillLocationLocal:oreY 1
   377 set :computeRowValues:x :findDrillLocationLocal:oreX
   378 set :computeRowValues:y *tmp176
 
  1011 label *label367
  1012 label *label470
  1013 op shl *tmp454 :createTerrainMask:result 1
-    * op add *tmp455 :createTerrainMask:x :createTerrainMask:c
-    * set :isBlocked:x *tmp455
+ 1014 op add :isBlocked:x :createTerrainMask:x :createTerrainMask:c
  1015 set :isBlocked:y *tmp456
  1016 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
  1017 select type equal type @boulder @air type

Modifications by Inline function 'printMask' defined at line 759:1 (+3 instructions):
 
  1209 label *label503
  1210 label *label504
  1211 label *label505
-    * setaddr :printMask*retaddr *label406 (h:*label406)
-    * call *label14 *invalid :printMask*retval (m:*label406) (h:*label406)
-    * label *label406
-    * setaddr :printMask*retaddr *label407 (h:*label407)
-    * call *label14 *invalid :printMask*retval (m:*label407) (h:*label407)
-    * label *label407
+ 1212 label *label506
+ 1213 jump *label517 always
+ 1214 print :printMask:text
+ 1215 print "\n"
+ 1216 label *label507
+ 1217 jump *label516 lessThan :printMask:r 0
+ 1218 label *label508
+ 1219 label *label509
+ 1220 jump *label514 greaterThanEq :printMask:c 7
+ 1221 label *label510
+ 1222 label *label511
+ 1223 label *label512
+ 1224 print "x"
+ 1225 label *label513
+ 1226 jump *label510 lessThan :printMask:c 7
+ 1227 label *label514
+ 1228 print "\n"
+ 1229 label *label515
+ 1230 jump *label508 greaterThanEq :printMask:r 0
+ 1231 label *label516
+ 1232 label *label517
+ 1233 label *label518
+ 1234 label *label519
+ 1235 label *label520
+ 1236 jump *label531 always
+ 1237 print :printMask:text
+ 1238 print "\n"
+ 1239 label *label521
+ 1240 jump *label530 lessThan :printMask:r 0
+ 1241 label *label522
+ 1242 label *label523
+ 1243 jump *label528 greaterThanEq :printMask:c 7
+ 1244 label *label524
+ 1245 label *label525
+ 1246 label *label526
+ 1247 print "x"
+ 1248 label *label527
+ 1249 jump *label524 lessThan :printMask:c 7
+ 1250 label *label528
+ 1251 print "\n"
+ 1252 label *label529
+ 1253 jump *label522 greaterThanEq :printMask:r 0
+ 1254 label *label530
+ 1255 label *label531
+ 1256 label *label532
+ 1257 label *label533
  1258 jump *label409 always
  1259 print ""
  1260 jump *label412 always
 
  1469 set :stopLocation*finished true
  1470 jump *label16 always
  1471 end
-    * label *label14
-    * jump *label457 always
-    * print :printMask:text
-    * print "\n"
-    * label *label459
-    * jump *label461 lessThan :printMask:r 0
-    * label *label473
-    * label *label462
-    * jump *label464 greaterThanEq :printMask:c 7
-    * label *label474
-    * label *label465
-    * label *label466
-    * print "x"
-    * label *label463
-    * jump *label474 lessThan :printMask:c 7
-    * label *label464
-    * print "\n"
-    * label *label460
-    * jump *label473 greaterThanEq :printMask:r 0
-    * label *label461
-    * label *label457
-    * label *label458
-    * label *label456
-    * return :printMask*retaddr
-    * end

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    18 select value equal floor :spotValue:ore 0.00392156862745098 0
    19 sensor solid type @solid
    20 select :spotValue:result notEqual solid false 0.09803921568627451 value
-    * label *label18
    21 op sub :spotValue.1:x :computeRowValues:x 1
    22 set :spotValue.1:y :computeRowValues:y
    23 set :spotValue.1:ore :computeRowValues:ore
 
    25 select value equal floor :spotValue.1:ore 0.00392156862745098 0
    26 sensor solid type @solid
    27 select :spotValue.1:result notEqual solid false 0.09803921568627451 value
-    * label *label19
    28 set :spotValue.2:x :computeRowValues:x
    29 set :spotValue.2:y :computeRowValues:y
    30 set :spotValue.2:ore :computeRowValues:ore
 
    32 select value equal floor :spotValue.2:ore 0.00392156862745098 0
    33 sensor solid type @solid
    34 select :spotValue.2:result notEqual solid false 0.09803921568627451 value
-    * label *label20
    35 op add :spotValue.3:x :computeRowValues:x 1
    36 set :spotValue.3:y :computeRowValues:y
    37 set :spotValue.3:ore :computeRowValues:ore
 
    39 select value equal floor :spotValue.3:ore 0.00392156862745098 0
    40 sensor solid type @solid
    41 select :spotValue.3:result notEqual solid false 0.09803921568627451 value
-    * label *label21
    42 op add :spotValue.4:x :computeRowValues:x 2
    43 set :spotValue.4:y :computeRowValues:y
    44 set :spotValue.4:ore :computeRowValues:ore
 
    46 select value equal floor :spotValue.4:ore 0.00392156862745098 0
    47 sensor solid type @solid
    48 select :spotValue.4:result notEqual solid false 0.09803921568627451 value
-    * label *label22
    49 jump *label23 notEqual :computeRowValues:size 2
    50 op add *tmp12 :spotValue:result :spotValue.1:result
    51 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
    72 select value equal floor :spotValue.5:ore 0.00392156862745098 0
    73 sensor solid type @solid
    74 select :spotValue.5:result notEqual solid false 0.09803921568627451 value
-    * label *label27
    75 op add :spotValue.6:x :computeRowValues:x 3
    76 set :spotValue.6:y :computeRowValues:y
    77 set :spotValue.6:ore :computeRowValues:ore
 
    79 select value equal floor :spotValue.6:ore 0.00392156862745098 0
    80 sensor solid type @solid
    81 select :spotValue.6:result notEqual solid false 0.09803921568627451 value
-    * label *label28
    82 op add *tmp30 :spotValue:result :spotValue.1:result
    83 op add *tmp31 *tmp30 :spotValue.2:result
    84 op add *tmp32 :spotValue.5:result *tmp31
 
   115 set .mapAction "Locating ore..."
   116 set .angle 0
   117 set .mapProgress 0
-    * label *label48
   118 ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp88
   119 jump *label50 notEqual *tmp88 false
   120 label *label491
   121 ucontrol approach :findDrillLocationLocal:x :findDrillLocationLocal:y 5.5
-    * label *label49
   122 ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp88
   123 jump *label491 equal *tmp88 false
   124 label *label50
-    * label *label47
-    * label *label46
   125 op div *tmp91 *tmp85 3.8197185279121366
   126 op pow .mapTotal *tmp91 2
   127 set :findDrillLocationLocal:oreX 0
 
   144 op mul .mapProgress .angle .angle
   145 op sub *tmp107 @mapw 5
   146 op sub *tmp114 @maph 5
-    * label *label55
   147 jump *label57 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   148 label *label467
   149 op div :locateOreAway:a .angle @degToRad
 
   152 op add *tmp106 .coreX *tmp105
   153 op max *tmp109 *tmp106 5
   154 op min *tmp108 *tmp109 *tmp107
-    * label *label58
   155 op cos *tmp111 :locateOreAway:a
   156 op mul *tmp112 *tmp111 :locateOreAway:distance
   157 op add *tmp113 .coreY *tmp112
   158 op max *tmp116 *tmp113 5
   159 op min *tmp115 *tmp116 *tmp114
-    * label *label59
-    * label *label61
   160 ucontrol within *tmp108 *tmp115 5 *tmp118
   161 jump *label63 notEqual *tmp118 false
   162 label *label475
   163 ucontrol approach *tmp108 *tmp115 4.5
-    * label *label62
   164 ucontrol within *tmp108 *tmp115 5 *tmp118
   165 jump *label475 equal *tmp118 false
   166 label *label63
-    * label *label60
   167 op div *tmp121 3.8197185279121366 :locateOreAway:distance
   168 op add .angle .angle *tmp121
   169 op mul .mapProgress .angle .angle
 
   173 set *tmp98 false
   174 jump *label54 always
   175 label *label64
-    * label *label65
   176 op sub *tmp128 :locateOreAway:x .coreX
   177 op abs *tmp129 *tmp128
   178 op sub *tmp130 :locateOreAway:y .coreY
 
   185 jump *label68 notEqual :locateOreAway:lastY :locateOreAway:y
   186 jump *label56 always
   187 label *label68
-    * label *label69
   188 label *label66
-    * label *label67
   189 jump *label70 lessThan :locateOreAway:coreDist 7
   190 jump *label72 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
   191 set :locateOreAway:lastX :locateOreAway:x
   192 set :locateOreAway:lastY :locateOreAway:y
   193 set *tmp145 .locations
   194 set :visited:i .locationsStart
-    * label *label75
   195 jump *label77 greaterThanEq .locationsStart *tmp145
   196 label *label468
   197 op mul :visited:index 4 :visited:i
 
   206 set *tmp144 true
   207 jump *label74 always
   208 label *label78
-    * label *label79
-    * label *label76
   209 op add :visited:i :visited:i 1
   210 jump *label468 lessThan :visited:i *tmp145
   211 label *label77
 
   219 set *tmp98 true
   220 jump *label54 always
   221 label *label80
-    * label *label81
   222 label *label72
-    * label *label73
   223 label *label70
-    * label *label71
   224 label *label56
   225 jump *label467 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   226 label *label57
 
   232 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   233 jump *label45 always
   234 label *label82
-    * label *label83
   235 jump *label84 lessThan :findDrillLocationLocal:limit 1000
   236 op add .mapSpots .mapSpots 1
   237 label *label84
-    * label *label85
-    * label *label88
   238 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp170
   239 jump *label90 notEqual *tmp170 false
   240 label *label476
   241 ucontrol approach :locateOreAway:x :locateOreAway:y 5.5
-    * label *label89
   242 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp170
   243 jump *label476 equal *tmp170 false
   244 label *label90
-    * label *label87
-    * label *label86
   245 set :findDrillLocationLocal:last 0
   246 label *label91
   247 set :findBestPosition:x :findDrillLocationLocal:oreX
 
   249 set :findBestPosition:ore :findDrillLocationLocal:ore
   250 set :findBestPosition:size :findDrillLocationLocal:size
   251 op sub *tmp174 :findDrillLocationLocal:oreY 2
-    * label *label478
   252 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   253 set :spotValue:y *tmp174
   254 set :spotValue:ore :findDrillLocationLocal:ore
 
   256 select value equal floor :spotValue:ore 0.00392156862745098 0
   257 sensor solid type @solid
   258 select :spotValue:result notEqual solid false 0.09803921568627451 value
-    * label *label479
   259 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
   260 set :spotValue.1:y *tmp174
   261 set :spotValue.1:ore :findDrillLocationLocal:ore
 
   263 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   264 sensor solid type @solid
   265 select :spotValue.1:result notEqual solid false 0.09803921568627451 value
-    * label *label480
   266 set :spotValue.2:x :findDrillLocationLocal:oreX
   267 set :spotValue.2:y *tmp174
   268 set :spotValue.2:ore :findDrillLocationLocal:ore
 
   270 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   271 sensor solid type @solid
   272 select :spotValue.2:result notEqual solid false 0.09803921568627451 value
-    * label *label481
   273 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
   274 set :spotValue.3:y *tmp174
   275 set :spotValue.3:ore :findDrillLocationLocal:ore
 
   277 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   278 sensor solid type @solid
   279 select :spotValue.3:result notEqual solid false 0.09803921568627451 value
-    * label *label482
   280 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
   281 set :spotValue.4:y *tmp174
   282 set :spotValue.4:ore :findDrillLocationLocal:ore
 
   284 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   285 sensor solid type @solid
   286 select :spotValue.4:result notEqual solid false 0.09803921568627451 value
-    * label *label483
   287 jump *label484 notEqual :findDrillLocationLocal:size 2
   288 op add *tmp12 :spotValue:result :spotValue.1:result
   289 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
   310 select value equal floor :spotValue.5:ore 0.00392156862745098 0
   311 sensor solid type @solid
   312 select :spotValue.5:result notEqual solid false 0.09803921568627451 value
-    * label *label486
   313 op add :spotValue.6:x :findDrillLocationLocal:oreX 3
   314 set :spotValue.6:y *tmp174
   315 set :spotValue.6:ore :findDrillLocationLocal:ore
 
   317 select value equal floor :spotValue.6:ore 0.00392156862745098 0
   318 sensor solid type @solid
   319 select :spotValue.6:result notEqual solid false 0.09803921568627451 value
-    * label *label487
   320 op add *tmp30 :spotValue:result :spotValue.1:result
   321 op add *tmp31 *tmp30 :spotValue.2:result
   322 op add *tmp32 :spotValue.5:result *tmp31
 
   383 set :findDrillLocationLocal:diffY -1.5
   384 set :findBestPosition:best :updateRowPositions2x2:col1
   385 label *label106
-    * label *label107
   386 label *label104
-    * label *label105
-    * label *label103
   387 jump *label109 greaterThanEq :updateRowPositions2x2:col2 0.0784313725490196
   388 jump *label111 lessThanEq :updateRowPositions2x2:col2 :findBestPosition:best
   389 set :findDrillLocationLocal:diffX -0.5
   390 set :findDrillLocationLocal:diffY -1.5
   391 set :findBestPosition:best :updateRowPositions2x2:col2
   392 label *label111
-    * label *label112
   393 label *label109
-    * label *label110
-    * label *label108
   394 jump *label114 greaterThanEq :updateRowPositions2x2:col3 0.0784313725490196
   395 jump *label116 lessThanEq :updateRowPositions2x2:col3 :findBestPosition:best
   396 set :findDrillLocationLocal:diffX 0.5
   397 set :findDrillLocationLocal:diffY -1.5
   398 set :findBestPosition:best :updateRowPositions2x2:col3
   399 label *label116
-    * label *label117
   400 label *label114
-    * label *label115
-    * label *label113
   401 jump *label119 greaterThanEq :updateRowPositions2x2:col4 0.0784313725490196
   402 jump *label121 lessThanEq :updateRowPositions2x2:col4 :findBestPosition:best
   403 set :findDrillLocationLocal:diffX 1.5
   404 set :findDrillLocationLocal:diffY -1.5
   405 set :findBestPosition:best :updateRowPositions2x2:col4
   406 label *label121
-    * label *label122
   407 label *label119
-    * label *label120
-    * label *label118
-    * label *label102
   408 unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :findBestPosition:row2
   409 jump *label125 greaterThanEq :updateRowPositions2x2.1:col1 0.0784313725490196
   410 jump *label127 lessThanEq :updateRowPositions2x2.1:col1 :findBestPosition:best
 
   412 set :findDrillLocationLocal:diffY -0.5
   413 set :findBestPosition:best :updateRowPositions2x2.1:col1
   414 label *label127
-    * label *label128
   415 label *label125
-    * label *label126
-    * label *label124
   416 jump *label130 greaterThanEq :updateRowPositions2x2.1:col2 0.0784313725490196
   417 jump *label132 lessThanEq :updateRowPositions2x2.1:col2 :findBestPosition:best
   418 set :findDrillLocationLocal:diffX -0.5
   419 set :findDrillLocationLocal:diffY -0.5
   420 set :findBestPosition:best :updateRowPositions2x2.1:col2
   421 label *label132
-    * label *label133
   422 label *label130
-    * label *label131
-    * label *label129
   423 jump *label135 greaterThanEq :updateRowPositions2x2.1:col3 0.0784313725490196
   424 jump *label137 lessThanEq :updateRowPositions2x2.1:col3 :findBestPosition:best
   425 set :findDrillLocationLocal:diffX 0.5
   426 set :findDrillLocationLocal:diffY -0.5
   427 set :findBestPosition:best :updateRowPositions2x2.1:col3
   428 label *label137
-    * label *label138
   429 label *label135
-    * label *label136
-    * label *label134
   430 jump *label140 greaterThanEq :updateRowPositions2x2.1:col4 0.0784313725490196
   431 jump *label142 lessThanEq :updateRowPositions2x2.1:col4 :findBestPosition:best
   432 set :findDrillLocationLocal:diffX 1.5
   433 set :findDrillLocationLocal:diffY -0.5
   434 set :findBestPosition:best :updateRowPositions2x2.1:col4
   435 label *label142
-    * label *label143
   436 label *label140
-    * label *label141
-    * label *label139
-    * label *label123
   437 unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :findBestPosition:row3
   438 jump *label146 greaterThanEq :updateRowPositions2x2.2:col1 0.0784313725490196
   439 jump *label148 lessThanEq :updateRowPositions2x2.2:col1 :findBestPosition:best
 
   441 set :findDrillLocationLocal:diffY 0.5
   442 set :findBestPosition:best :updateRowPositions2x2.2:col1
   443 label *label148
-    * label *label149
   444 label *label146
-    * label *label147
-    * label *label145
   445 jump *label151 greaterThanEq :updateRowPositions2x2.2:col2 0.0784313725490196
   446 jump *label153 lessThanEq :updateRowPositions2x2.2:col2 :findBestPosition:best
   447 set :findDrillLocationLocal:diffX -0.5
   448 set :findDrillLocationLocal:diffY 0.5
   449 set :findBestPosition:best :updateRowPositions2x2.2:col2
   450 label *label153
-    * label *label154
   451 label *label151
-    * label *label152
-    * label *label150
   452 jump *label156 greaterThanEq :updateRowPositions2x2.2:col3 0.0784313725490196
   453 jump *label158 lessThanEq :updateRowPositions2x2.2:col3 :findBestPosition:best
   454 set :findDrillLocationLocal:diffX 0.5
   455 set :findDrillLocationLocal:diffY 0.5
   456 set :findBestPosition:best :updateRowPositions2x2.2:col3
   457 label *label158
-    * label *label159
   458 label *label156
-    * label *label157
-    * label *label155
   459 jump *label161 greaterThanEq :updateRowPositions2x2.2:col4 0.0784313725490196
   460 jump *label163 lessThanEq :updateRowPositions2x2.2:col4 :findBestPosition:best
   461 set :findDrillLocationLocal:diffX 1.5
   462 set :findDrillLocationLocal:diffY 0.5
   463 set :findBestPosition:best :updateRowPositions2x2.2:col4
   464 label *label163
-    * label *label164
   465 label *label161
-    * label *label162
-    * label *label160
-    * label *label144
   466 unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :findBestPosition:row4
   467 jump *label167 greaterThanEq :updateRowPositions2x2.3:col1 0.0784313725490196
   468 jump *label169 lessThanEq :updateRowPositions2x2.3:col1 :findBestPosition:best
 
   470 set :findDrillLocationLocal:diffY 1.5
   471 set :findBestPosition:best :updateRowPositions2x2.3:col1
   472 label *label169
-    * label *label170
   473 label *label167
-    * label *label168
-    * label *label166
   474 jump *label172 greaterThanEq :updateRowPositions2x2.3:col2 0.0784313725490196
   475 jump *label174 lessThanEq :updateRowPositions2x2.3:col2 :findBestPosition:best
   476 set :findDrillLocationLocal:diffX -0.5
   477 set :findDrillLocationLocal:diffY 1.5
   478 set :findBestPosition:best :updateRowPositions2x2.3:col2
   479 label *label174
-    * label *label175
   480 label *label172
-    * label *label173
-    * label *label171
   481 jump *label177 greaterThanEq :updateRowPositions2x2.3:col3 0.0784313725490196
   482 jump *label179 lessThanEq :updateRowPositions2x2.3:col3 :findBestPosition:best
   483 set :findDrillLocationLocal:diffX 0.5
   484 set :findDrillLocationLocal:diffY 1.5
   485 set :findBestPosition:best :updateRowPositions2x2.3:col3
   486 label *label179
-    * label *label180
   487 label *label177
-    * label *label178
-    * label *label176
   488 jump *label182 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
   489 jump *label184 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
   490 set :findDrillLocationLocal:diffX 1.5
   491 set :findDrillLocationLocal:diffY 1.5
   492 set :findBestPosition:best :updateRowPositions2x2.3:col4
   493 label *label184
-    * label *label185
   494 label *label182
-    * label *label183
-    * label *label181
-    * label *label165
   495 jump *label101 always
   496 label *label100
   497 jump *label186 notEqual :findBestPosition:size 3
 
   507 set :findDrillLocationLocal:diffY -1
   508 set :findBestPosition:best :updateRowPositions3x3:col1
   509 label *label192
-    * label *label193
   510 label *label190
-    * label *label191
-    * label *label189
   511 jump *label195 greaterThanEq :updateRowPositions3x3:col2 0.0784313725490196
   512 jump *label197 lessThanEq :updateRowPositions3x3:col2 :findBestPosition:best
   513 set :findDrillLocationLocal:diffX 0
   514 set :findDrillLocationLocal:diffY -1
   515 set :findBestPosition:best :updateRowPositions3x3:col2
   516 label *label197
-    * label *label198
   517 label *label195
-    * label *label196
-    * label *label194
   518 jump *label200 greaterThanEq :updateRowPositions3x3:col3 0.0784313725490196
   519 jump *label202 lessThanEq :updateRowPositions3x3:col3 :findBestPosition:best
   520 set :findDrillLocationLocal:diffX 1
   521 set :findDrillLocationLocal:diffY -1
   522 set :findBestPosition:best :updateRowPositions3x3:col3
   523 label *label202
-    * label *label203
   524 label *label200
-    * label *label201
-    * label *label199
-    * label *label188
   525 unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :findBestPosition:row2.1
   526 jump *label206 greaterThanEq :updateRowPositions3x3.1:col1 0.0784313725490196
   527 jump *label208 lessThanEq :updateRowPositions3x3.1:col1 :findBestPosition:best
 
   529 set :findDrillLocationLocal:diffY 0
   530 set :findBestPosition:best :updateRowPositions3x3.1:col1
   531 label *label208
-    * label *label209
   532 label *label206
-    * label *label207
-    * label *label205
   533 jump *label211 greaterThanEq :updateRowPositions3x3.1:col2 0.0784313725490196
   534 jump *label213 lessThanEq :updateRowPositions3x3.1:col2 :findBestPosition:best
   535 set :findDrillLocationLocal:diffX 0
   536 set :findDrillLocationLocal:diffY 0
   537 set :findBestPosition:best :updateRowPositions3x3.1:col2
   538 label *label213
-    * label *label214
   539 label *label211
-    * label *label212
-    * label *label210
   540 jump *label216 greaterThanEq :updateRowPositions3x3.1:col3 0.0784313725490196
   541 jump *label218 lessThanEq :updateRowPositions3x3.1:col3 :findBestPosition:best
   542 set :findDrillLocationLocal:diffX 1
   543 set :findDrillLocationLocal:diffY 0
   544 set :findBestPosition:best :updateRowPositions3x3.1:col3
   545 label *label218
-    * label *label219
   546 label *label216
-    * label *label217
-    * label *label215
-    * label *label204
   547 unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :findBestPosition:row3.1
   548 jump *label222 greaterThanEq :updateRowPositions3x3.2:col1 0.0784313725490196
   549 jump *label224 lessThanEq :updateRowPositions3x3.2:col1 :findBestPosition:best
 
   551 set :findDrillLocationLocal:diffY 1
   552 set :findBestPosition:best :updateRowPositions3x3.2:col1
   553 label *label224
-    * label *label225
   554 label *label222
-    * label *label223
-    * label *label221
   555 jump *label227 greaterThanEq :updateRowPositions3x3.2:col2 0.0784313725490196
   556 jump *label229 lessThanEq :updateRowPositions3x3.2:col2 :findBestPosition:best
   557 set :findDrillLocationLocal:diffX 0
   558 set :findDrillLocationLocal:diffY 1
   559 set :findBestPosition:best :updateRowPositions3x3.2:col2
   560 label *label229
-    * label *label230
   561 label *label227
-    * label *label228
-    * label *label226
   562 jump *label232 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
   563 jump *label234 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
   564 set :findDrillLocationLocal:diffX 1
   565 set :findDrillLocationLocal:diffY 1
   566 set :findBestPosition:best :updateRowPositions3x3.2:col3
   567 label *label234
-    * label *label235
   568 label *label232
-    * label *label233
-    * label *label231
-    * label *label220
   569 jump *label187 always
   570 label *label186
   571 op sub *tmp301 :findBestPosition:y 3
 
   600 set :findDrillLocationLocal:diffY -1.5
   601 set :findBestPosition:best :updateRowPositions4x4:col1
   602 label *label242
-    * label *label243
   603 label *label240
-    * label *label241
-    * label *label239
   604 jump *label245 greaterThanEq :updateRowPositions4x4:col2 0.0784313725490196
   605 jump *label247 lessThanEq :updateRowPositions4x4:col2 :findBestPosition:best
   606 set :findDrillLocationLocal:diffX -0.5
   607 set :findDrillLocationLocal:diffY -1.5
   608 set :findBestPosition:best :updateRowPositions4x4:col2
   609 label *label247
-    * label *label248
   610 label *label245
-    * label *label246
-    * label *label244
   611 jump *label250 greaterThanEq :updateRowPositions4x4:col3 0.0784313725490196
   612 jump *label252 lessThanEq :updateRowPositions4x4:col3 :findBestPosition:best
   613 set :findDrillLocationLocal:diffX 0.5
   614 set :findDrillLocationLocal:diffY -1.5
   615 set :findBestPosition:best :updateRowPositions4x4:col3
   616 label *label252
-    * label *label253
   617 label *label250
-    * label *label251
-    * label *label249
   618 jump *label255 greaterThanEq :updateRowPositions4x4:col4 0.0784313725490196
   619 jump *label257 lessThanEq :updateRowPositions4x4:col4 :findBestPosition:best
   620 set :findDrillLocationLocal:diffX 1.5
   621 set :findDrillLocationLocal:diffY -1.5
   622 set :findBestPosition:best :updateRowPositions4x4:col4
   623 label *label257
-    * label *label258
   624 label *label255
-    * label *label256
-    * label *label254
-    * label *label238
   625 unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 :updateRowPositions4x4.1:col3 :updateRowPositions4x4.1:col4 :findBestPosition:row2.2
   626 jump *label261 greaterThanEq :updateRowPositions4x4.1:col1 0.0784313725490196
   627 jump *label263 lessThanEq :updateRowPositions4x4.1:col1 :findBestPosition:best
 
   629 set :findDrillLocationLocal:diffY -0.5
   630 set :findBestPosition:best :updateRowPositions4x4.1:col1
   631 label *label263
-    * label *label264
   632 label *label261
-    * label *label262
-    * label *label260
   633 jump *label266 greaterThanEq :updateRowPositions4x4.1:col2 0.0784313725490196
   634 jump *label268 lessThanEq :updateRowPositions4x4.1:col2 :findBestPosition:best
   635 set :findDrillLocationLocal:diffX -0.5
   636 set :findDrillLocationLocal:diffY -0.5
   637 set :findBestPosition:best :updateRowPositions4x4.1:col2
   638 label *label268
-    * label *label269
   639 label *label266
-    * label *label267
-    * label *label265
   640 jump *label271 greaterThanEq :updateRowPositions4x4.1:col3 0.0784313725490196
   641 jump *label273 lessThanEq :updateRowPositions4x4.1:col3 :findBestPosition:best
   642 set :findDrillLocationLocal:diffX 0.5
   643 set :findDrillLocationLocal:diffY -0.5
   644 set :findBestPosition:best :updateRowPositions4x4.1:col3
   645 label *label273
-    * label *label274
   646 label *label271
-    * label *label272
-    * label *label270
   647 jump *label276 greaterThanEq :updateRowPositions4x4.1:col4 0.0784313725490196
   648 jump *label278 lessThanEq :updateRowPositions4x4.1:col4 :findBestPosition:best
   649 set :findDrillLocationLocal:diffX 1.5
   650 set :findDrillLocationLocal:diffY -0.5
   651 set :findBestPosition:best :updateRowPositions4x4.1:col4
   652 label *label278
-    * label *label279
   653 label *label276
-    * label *label277
-    * label *label275
-    * label *label259
   654 unpackcolor :updateRowPositions4x4.2:col1 :updateRowPositions4x4.2:col2 :updateRowPositions4x4.2:col3 :updateRowPositions4x4.2:col4 :findBestPosition:row3.2
   655 jump *label282 greaterThanEq :updateRowPositions4x4.2:col1 0.0784313725490196
   656 jump *label284 lessThanEq :updateRowPositions4x4.2:col1 :findBestPosition:best
 
   658 set :findDrillLocationLocal:diffY 0.5
   659 set :findBestPosition:best :updateRowPositions4x4.2:col1
   660 label *label284
-    * label *label285
   661 label *label282
-    * label *label283
-    * label *label281
   662 jump *label287 greaterThanEq :updateRowPositions4x4.2:col2 0.0784313725490196
   663 jump *label289 lessThanEq :updateRowPositions4x4.2:col2 :findBestPosition:best
   664 set :findDrillLocationLocal:diffX -0.5
   665 set :findDrillLocationLocal:diffY 0.5
   666 set :findBestPosition:best :updateRowPositions4x4.2:col2
   667 label *label289
-    * label *label290
   668 label *label287
-    * label *label288
-    * label *label286
   669 jump *label292 greaterThanEq :updateRowPositions4x4.2:col3 0.0784313725490196
   670 jump *label294 lessThanEq :updateRowPositions4x4.2:col3 :findBestPosition:best
   671 set :findDrillLocationLocal:diffX 0.5
   672 set :findDrillLocationLocal:diffY 0.5
   673 set :findBestPosition:best :updateRowPositions4x4.2:col3
   674 label *label294
-    * label *label295
   675 label *label292
-    * label *label293
-    * label *label291
   676 jump *label297 greaterThanEq :updateRowPositions4x4.2:col4 0.0784313725490196
   677 jump *label299 lessThanEq :updateRowPositions4x4.2:col4 :findBestPosition:best
   678 set :findDrillLocationLocal:diffX 1.5
   679 set :findDrillLocationLocal:diffY 0.5
   680 set :findBestPosition:best :updateRowPositions4x4.2:col4
   681 label *label299
-    * label *label300
   682 label *label297
-    * label *label298
-    * label *label296
-    * label *label280
   683 unpackcolor :updateRowPositions4x4.3:col1 :updateRowPositions4x4.3:col2 :updateRowPositions4x4.3:col3 :updateRowPositions4x4.3:col4 :findBestPosition:row4.1
   684 jump *label303 greaterThanEq :updateRowPositions4x4.3:col1 0.0784313725490196
   685 jump *label305 lessThanEq :updateRowPositions4x4.3:col1 :findBestPosition:best
 
   687 set :findDrillLocationLocal:diffY 1.5
   688 set :findBestPosition:best :updateRowPositions4x4.3:col1
   689 label *label305
-    * label *label306
   690 label *label303
-    * label *label304
-    * label *label302
   691 jump *label308 greaterThanEq :updateRowPositions4x4.3:col2 0.0784313725490196
   692 jump *label310 lessThanEq :updateRowPositions4x4.3:col2 :findBestPosition:best
   693 set :findDrillLocationLocal:diffX -0.5
   694 set :findDrillLocationLocal:diffY 1.5
   695 set :findBestPosition:best :updateRowPositions4x4.3:col2
   696 label *label310
-    * label *label311
   697 label *label308
-    * label *label309
-    * label *label307
   698 jump *label313 greaterThanEq :updateRowPositions4x4.3:col3 0.0784313725490196
   699 jump *label315 lessThanEq :updateRowPositions4x4.3:col3 :findBestPosition:best
   700 set :findDrillLocationLocal:diffX 0.5
   701 set :findDrillLocationLocal:diffY 1.5
   702 set :findBestPosition:best :updateRowPositions4x4.3:col3
   703 label *label315
-    * label *label316
   704 label *label313
-    * label *label314
-    * label *label312
   705 jump *label318 greaterThanEq :updateRowPositions4x4.3:col4 0.0784313725490196
   706 jump *label320 lessThanEq :updateRowPositions4x4.3:col4 :findBestPosition:best
   707 set :findDrillLocationLocal:diffX 1.5
   708 set :findDrillLocationLocal:diffY 1.5
   709 set :findBestPosition:best :updateRowPositions4x4.3:col4
   710 label *label320
-    * label *label321
   711 label *label318
-    * label *label319
-    * label *label317
-    * label *label301
   712 label *label187
   713 label *label101
   714 op mul *tmp173 :findBestPosition:best 255
-    * label *label94
   715 jump *label322 lessThanEq *tmp173 :findDrillLocationLocal:capacity
   716 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   717 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
 
   719 jump *label324 greaterThanEq :findDrillLocationLocal:limit 1000
   720 set .mapSpots *tmp173
   721 label *label324
-    * label *label325
   722 jump *label326 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
   723 op add .count .count 1
   724 sensor *tmp392 :findDrillLocationLocal:item @id
 
   734 printflush message1
   735 control enabled switch1 true
   736 label *label332
-    * label *label333
   737 sensor *tmp402 switch1 @enabled
   738 jump *label332 notEqual *tmp402 false
-    * label *label334
   739 label *label330
-    * label *label331
-    * label *label329
-    * label *label328
   740 ucontrol unbind
   741 set :findDrillLocationLocal*retval true
   742 jump *label45 always
   743 label *label326
-    * label *label327
   744 label *label322
-    * label *label323
   745 jump *label335 lessThanEq *tmp173 :findDrillLocationLocal:best
   746 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   747 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   748 set :findDrillLocationLocal:best *tmp173
   749 label *label335
-    * label *label336
   750 jump *label337 greaterThan *tmp173 :findDrillLocationLocal:last
   751 jump *label93 always
   752 label *label337
-    * label *label338
   753 set :findDrillLocationLocal:last *tmp173
   754 op mul :round:x :findDrillLocationLocal:diffX 1.1
   755 op add *tmp411 :round:x 0.5
   756 op floor *tmp410 *tmp411
-    * label *label339
   757 op add :findDrillLocationLocal:oreX :findDrillLocationLocal:oreX *tmp410
   758 op mul :round.1:x :findDrillLocationLocal:diffY 1.1
   759 op add *tmp415 :round.1:x 0.5
   760 op floor *tmp414 *tmp415
-    * label *label340
   761 op add :findDrillLocationLocal:oreY :findDrillLocationLocal:oreY *tmp414
   762 op sub *tmp417 :findDrillLocationLocal:oreX .coreX
   763 op abs *tmp418 *tmp417
 
   767 jump *label341 greaterThanEq *tmp421 7
   768 jump *label93 always
   769 label *label341
-    * label *label342
-    * label *label92
   770 jump *label91 always
   771 label *label93
   772 jump *label343 lessThan :findDrillLocationLocal:best 0
 
   784 printflush message1
   785 control enabled switch1 true
   786 label *label349
-    * label *label350
   787 sensor *tmp438 switch1 @enabled
   788 jump *label349 notEqual *tmp438 false
-    * label *label351
   789 label *label347
-    * label *label348
-    * label *label346
-    * label *label345
   790 label *label343
-    * label *label344
-    * label *label52
   791 jump *label51 always
-    * label *label53
   792 set :findDrillLocationLocal*retval null
   793 label *label45
   794 return :findDrillLocationLocal*retaddr
   795 end
   796 label *label10
-    * label *label361
   797 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp451
   798 jump *label363 notEqual *tmp451 false
   799 label *label477
   800 ucontrol approach :createTerrainMask:x :createTerrainMask:y 5.5
-    * label *label362
   801 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp451
   802 jump *label477 equal *tmp451 false
   803 label *label363
-    * label *label360
-    * label *label359
   804 set :createTerrainMask:result 0
   805 set :createTerrainMask:r 3
-    * label *label364
   806 label *label469
   807 set :createTerrainMask:c 3
   808 op add *tmp456 :createTerrainMask:y :createTerrainMask:r
-    * label *label367
   809 label *label470
   810 op shl *tmp454 :createTerrainMask:result 1
   811 op add :isBlocked:x :createTerrainMask:x :createTerrainMask:c
 
   813 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   814 select type equal type @boulder @air type
   815 select :isBlocked:result equal type @air 0 1
-    * label *label370
   816 op or :createTerrainMask:result *tmp454 :isBlocked:result
-    * label *label368
   817 op sub :createTerrainMask:c :createTerrainMask:c 1
   818 jump *label470 greaterThanEq :createTerrainMask:c -3
-    * label *label369
-    * label *label365
   819 op sub :createTerrainMask:r :createTerrainMask:r 1
   820 jump *label469 greaterThanEq :createTerrainMask:r -3
-    * label *label366
   821 set :createTerrainMask*retval :createTerrainMask:result
-    * label *label358
   822 return :createTerrainMask*retaddr
   823 end
   824 label *label11
   825 set :findPossiblePlacement:y -3
-    * label *label372
   826 jump *label374 greaterThan :findPossiblePlacement:y 3
   827 label *label471
   828 op add *tmp459 :findPossiblePlacement:y 3
   829 op mul *tmp460 7 *tmp459
   830 op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp460
   831 set :findPossiblePlacement:x -3
-    * label *label375
   832 jump *label377 greaterThan :findPossiblePlacement:x 3
   833 label *label472
   834 op and *tmp462 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
 
   838 op add :findPossiblePlacement*retval *tmp466 :findPossiblePlacement:x
   839 jump *label371 always
   840 label *label378
-    * label *label379
   841 op sub *tmp468 3 :findPossiblePlacement:width
   842 jump *label380 lessThanEq :findPossiblePlacement:x *tmp468
   843 jump *label377 always
   844 label *label380
-    * label *label381
   845 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
-    * label *label376
   846 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
   847 jump *label472 lessThanEq :findPossiblePlacement:x 3
   848 label *label377
 
   850 jump *label382 lessThanEq :findPossiblePlacement:y *tmp471
   851 jump *label374 always
   852 label *label382
-    * label *label383
-    * label *label373
   853 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
   854 jump *label471 lessThanEq :findPossiblePlacement:y 3
   855 label *label374
 
   870 set :tryPlaceGenerator*retval false
   871 jump *label384 always
   872 label *label388
-    * label *label389
   873 op add *tmp479 :tryPlaceGenerator:centerX 0.5
   874 op add .water2X *tmp479 :findPossiblePlacement:x
   875 op add *tmp481 :tryPlaceGenerator:centerY 0.5
 
   909 set :tryPlaceGenerator*retval false
   910 jump *label384 always
   911 label *label392
-    * label *label393
   912 op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   913 op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   914 op shl *tmp503 1 :findPossiblePlacement*retval
 
   924 set :tryPlaceGenerator*retval false
   925 jump *label384 always
   926 label *label395
-    * label *label396
   927 op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   928 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   929 op shl *tmp509 1 :findPossiblePlacement*retval
 
   939 set :tryPlaceGenerator*retval false
   940 jump *label384 always
   941 label *label398
-    * label *label399
   942 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   943 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   944 set :tryPlaceGenerator*retval true
 
   960 setaddr :createTerrainMask*retaddr *label401 (h:*label401)
   961 call *label10 *invalid :createTerrainMask*retval (m:*label401) (h:*label401)
   962 label *label401
-    * label *label402
   963 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
-    * label *label403
   964 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
-    * label *label404
   965 set :layoutThoriumDrillAtLocation:mask2x2 387
-    * label *label492
   966 jump *label503 always
   967 print :printMask:text
   968 print "\n"
-    * label *label493
   969 jump *label502 lessThan :printMask:r 0
   970 label *label494
-    * label *label495
   971 jump *label500 greaterThanEq :printMask:c 7
   972 label *label496
-    * label *label497
-    * label *label498
   973 print "x"
-    * label *label499
   974 jump *label496 lessThan :printMask:c 7
   975 label *label500
   976 print "\n"
-    * label *label501
   977 jump *label494 greaterThanEq :printMask:r 0
   978 label *label502
   979 label *label503
-    * label *label504
-    * label *label505
-    * label *label506
   980 jump *label517 always
   981 print :printMask:text
   982 print "\n"
-    * label *label507
   983 jump *label516 lessThan :printMask:r 0
   984 label *label508
-    * label *label509
   985 jump *label514 greaterThanEq :printMask:c 7
   986 label *label510
-    * label *label511
-    * label *label512
   987 print "x"
-    * label *label513
   988 jump *label510 lessThan :printMask:c 7
   989 label *label514
   990 print "\n"
-    * label *label515
   991 jump *label508 greaterThanEq :printMask:r 0
   992 label *label516
   993 label *label517
-    * label *label518
-    * label *label519
-    * label *label520
   994 jump *label531 always
   995 print :printMask:text
   996 print "\n"
-    * label *label521
   997 jump *label530 lessThan :printMask:r 0
   998 label *label522
-    * label *label523
   999 jump *label528 greaterThanEq :printMask:c 7
  1000 label *label524
-    * label *label525
-    * label *label526
  1001 print "x"
-    * label *label527
  1002 jump *label524 lessThan :printMask:c 7
  1003 label *label528
  1004 print "\n"
-    * label *label529
  1005 jump *label522 greaterThanEq :printMask:r 0
  1006 label *label530
  1007 label *label531
-    * label *label532
-    * label *label533
  1008 jump *label409 always
  1009 print ""
  1010 jump *label412 always
  1011 printflush message1
  1012 control enabled switch1 true
  1013 label *label414
-    * label *label415
  1014 sensor *tmp554 switch1 @enabled
  1015 jump *label414 notEqual *tmp554 false
-    * label *label416
  1016 label *label412
-    * label *label413
-    * label *label411
  1017 end
  1018 label *label409
-    * label *label410
-    * label *label408
  1019 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
  1020 set :findPossiblePlacement:placementMask 387
  1021 set :findPossiblePlacement:width 2
 
  1032 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp562
  1033 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:cornersMask *tmp562
  1034 label *label418
-    * label *label419
  1035 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
  1036 set :findPossiblePlacement:placementMask :layoutThoriumDrillAtLocation:mask2x2
  1037 set :findPossiblePlacement:width 2
 
  1047 op shl *tmp571 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
  1048 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp571
  1049 label *label421
-    * label *label422
-    * label *label423
  1050 set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
-    * label *label424
  1051 set :layoutThoriumDrillAtLocation:generatorVertical 6340995
  1052 set :tryPlaceGenerator:centerX .drillX
  1053 set :tryPlaceGenerator:centerY .drillY
 
  1061 set :layoutThoriumDrillAtLocation*retval true
  1062 jump *label400 always
  1063 label *label426
-    * label *label427
  1064 set :layoutThoriumDrillAtLocation:sx 3
  1065 set :layoutThoriumDrillAtLocation:sy 3
  1066 setaddr *tmp586 *label431
 
  1097 set *tmp590 0
  1098 jump *label436 always
  1099 label *label437
-    * label *label438
  1100 op mul *tmp597 7 :layoutThoriumDrillAtLocation:sy
  1101 op add :shiftMask:shift :layoutThoriumDrillAtLocation:sx *tmp597
  1102 jump *label439 lessThanEq :shiftMask:shift 0
 
  1114 jump *label443 lessThanEq :layoutThoriumDrillAtLocation:sx 0
  1115 op shl :shiftMask:keep :shiftMask:keep *tmp608
  1116 label *label443
-    * label *label444
  1117 op shl *tmp614 :shiftMask:keep 7
  1118 op or :shiftMask:keep :shiftMask:keep *tmp614
  1119 op shl *tmp615 :shiftMask:keep 14
 
  1122 op or :shiftMask:keep :shiftMask:keep *tmp616
  1123 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
  1124 label *label441
-    * label *label442
  1125 set *tmp590 :shiftMask:mask
  1126 label *label436
  1127 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp590
 
  1139 set :layoutThoriumDrillAtLocation*retval true
  1140 jump *label400 always
  1141 label *label446
-    * label *label447
-    * label *label429
  1142 multijump *tmp586 0 0 (m:marker0)
  1143 multilabel *label434 (m:marker0)
-    * label *label430
  1144 set :layoutThoriumDrillAtLocation*retval true
  1145 label *label400
  1146 return :layoutThoriumDrillAtLocation*retaddr
 
  1162 set :findDrillLocation:capacity :findDrillLocationLocal:capacity
  1163 set .searchFinished true
  1164 set :findDrillLocation*retval true
-    * label *label448
  1165 set :findDrillLocation*finished true
  1166 jump *label16 always
  1167 end
 
  1182 set :layoutThoriumDrill*retval false
  1183 jump *label450 always
  1184 label *label452
-    * label *label453
  1185 setaddr :layoutThoriumDrillAtLocation*retaddr *label454 (h:*label454)
  1186 call *label13 *invalid :layoutThoriumDrillAtLocation*retval (m:*label454) (h:*label454)
  1187 label *label454
 
  1196 set .mapTotal 0
  1197 set .mapProgress 0
  1198 ucontrol unbind
-    * label *label455
  1199 set :stopLocation*finished true
  1200 jump *label16 always
  1201 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-5 instructions):
 
   182 op sub *tmp134 :locateOreAway:y *tmp115
   183 op len :locateOreAway:unitDist *tmp133 *tmp134
   184 jump *label66 notEqual :locateOreAway:lastX :locateOreAway:x
-    * jump *label68 notEqual :locateOreAway:lastY :locateOreAway:y
-    * jump *label56 always
+  185 jump *label56 equal :locateOreAway:lastY :locateOreAway:y
   186 label *label68
   187 label *label66
   188 jump *label70 lessThan :locateOreAway:coreDist 7
 
   746 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   747 set :findDrillLocationLocal:best *tmp173
   748 label *label335
-    * jump *label337 greaterThan *tmp173 :findDrillLocationLocal:last
-    * jump *label93 always
+  749 jump *label93 lessThanEq *tmp173 :findDrillLocationLocal:last
   750 label *label337
   751 set :findDrillLocationLocal:last *tmp173
   752 op mul :round:x :findDrillLocationLocal:diffX 1.1
 
   762 op sub *tmp419 :findDrillLocationLocal:oreY .coreY
   763 op abs *tmp420 *tmp419
   764 op min *tmp421 *tmp418 *tmp420
-    * jump *label341 greaterThanEq *tmp421 7
-    * jump *label93 always
+  765 jump *label93 lessThan *tmp421 7
   766 label *label341
   767 jump *label91 always
   768 label *label93
 
   836 jump *label371 always
   837 label *label378
   838 op sub *tmp468 3 :findPossiblePlacement:width
-    * jump *label380 lessThanEq :findPossiblePlacement:x *tmp468
-    * jump *label377 always
+  839 jump *label377 greaterThan :findPossiblePlacement:x *tmp468
   840 label *label380
   841 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
   842 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
   843 jump *label472 lessThanEq :findPossiblePlacement:x 3
   844 label *label377
   845 op sub *tmp471 3 :findPossiblePlacement:height
-    * jump *label382 lessThanEq :findPossiblePlacement:y *tmp471
-    * jump *label374 always
+  846 jump *label374 greaterThan :findPossiblePlacement:y *tmp471
   847 label *label382
   848 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
   849 jump *label471 lessThanEq :findPossiblePlacement:y 3

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   183 op len :locateOreAway:unitDist *tmp133 *tmp134
   184 jump *label66 notEqual :locateOreAway:lastX :locateOreAway:x
   185 jump *label56 equal :locateOreAway:lastY :locateOreAway:y
-    * label *label68
   186 label *label66
   187 jump *label70 lessThan :locateOreAway:coreDist 7
   188 jump *label72 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
 
   746 set :findDrillLocationLocal:best *tmp173
   747 label *label335
   748 jump *label93 lessThanEq *tmp173 :findDrillLocationLocal:last
-    * label *label337
   749 set :findDrillLocationLocal:last *tmp173
   750 op mul :round:x :findDrillLocationLocal:diffX 1.1
   751 op add *tmp411 :round:x 0.5
 
   761 op abs *tmp420 *tmp419
   762 op min *tmp421 *tmp418 *tmp420
   763 jump *label93 lessThan *tmp421 7
-    * label *label341
   764 jump *label91 always
   765 label *label93
   766 jump *label343 lessThan :findDrillLocationLocal:best 0
 
   834 label *label378
   835 op sub *tmp468 3 :findPossiblePlacement:width
   836 jump *label377 greaterThan :findPossiblePlacement:x *tmp468
-    * label *label380
   837 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
   838 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
   839 jump *label472 lessThanEq :findPossiblePlacement:x 3
   840 label *label377
   841 op sub *tmp471 3 :findPossiblePlacement:height
   842 jump *label374 greaterThan :findPossiblePlacement:y *tmp471
-    * label *label382
   843 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
   844 jump *label471 lessThanEq :findPossiblePlacement:y 3
   845 label *label374

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
+    0 label __start__
     1 jump *label15 always
     2 jump *label0 always
     3 jump *label1 always
 
    53 op add *tmp14 :spotValue.2:result :spotValue.3:result
    54 op add *tmp15 :spotValue.3:result :spotValue.4:result
    55 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
-    * jump *label17 always
-    * jump *label24 always
+   56 return :computeRowValues*retaddr
+   57 return :computeRowValues*retaddr
    58 label *label23
    59 jump *label25 notEqual :computeRowValues:size 3
    60 op add *tmp19 :spotValue.1:result :spotValue.2:result
 
    63 op add *tmp23 :spotValue.2:result :spotValue.3:result
    64 op add *tmp24 *tmp23 :spotValue.4:result
    65 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
-    * jump *label17 always
-    * jump *label26 always
+   66 return :computeRowValues*retaddr
+   67 return :computeRowValues*retaddr
    68 label *label25
    69 op sub :spotValue.5:x :computeRowValues:x 3
    70 set :spotValue.5:y :computeRowValues:y
 
   229 set :findDrillLocationLocal:oreY :locateOreAway:y
   230 jump *label82 notEqual *tmp98 false
   231 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
-    * jump *label45 always
+  232 return :findDrillLocationLocal*retaddr
   233 label *label82
   234 jump *label84 lessThan :findDrillLocationLocal:limit 1000
   235 op add .mapSpots .mapSpots 1
 
   484 set :findBestPosition:best :updateRowPositions2x2.3:col3
   485 label *label179
   486 label *label177
-    * jump *label182 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
-    * jump *label184 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
+  487 jump *label101 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
+  488 jump *label101 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
   489 set :findDrillLocationLocal:diffX 1.5
   490 set :findDrillLocationLocal:diffY 1.5
   491 set :findBestPosition:best :updateRowPositions2x2.3:col4
 
   558 set :findBestPosition:best :updateRowPositions3x3.2:col2
   559 label *label229
   560 label *label227
-    * jump *label232 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
-    * jump *label234 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
+  561 jump *label187 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
+  562 jump *label187 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
   563 set :findDrillLocationLocal:diffX 1
   564 set :findDrillLocationLocal:diffY 1
   565 set :findBestPosition:best :updateRowPositions3x3.2:col3
 
   738 label *label330
   739 ucontrol unbind
   740 set :findDrillLocationLocal*retval true
-    * jump *label45 always
+  741 return :findDrillLocationLocal*retaddr
   742 label *label326
   743 label *label322
   744 jump *label335 lessThanEq *tmp173 :findDrillLocationLocal:best
 
   764 jump *label93 lessThan *tmp421 7
   765 jump *label91 always
   766 label *label93
-    * jump *label343 lessThan :findDrillLocationLocal:best 0
+  767 jump *label51 lessThan :findDrillLocationLocal:best 0
   768 op add .count .count 1
   769 sensor *tmp428 :findDrillLocationLocal:item @id
   770 write *tmp428 bank1 .count
 
   775 op add .count .count 1
   776 write :findDrillLocationLocal:bestY bank1 .count
   777 op add .locations .locations 1
-    * jump *label347 always
+  778 jump *label51 always
   779 printflush message1
   780 control enabled switch1 true
   781 label *label349
 
   831 op mul *tmp465 :findPossiblePlacement:y 7
   832 op add *tmp466 24 *tmp465
   833 op add :findPossiblePlacement*retval *tmp466 :findPossiblePlacement:x
-    * jump *label371 always
+  834 return :findPossiblePlacement*retaddr
   835 label *label378
   836 op sub *tmp468 3 :findPossiblePlacement:width
   837 jump *label377 greaterThan :findPossiblePlacement:x *tmp468
 
   859 jump *label386 lessThan :findPossiblePlacement*retval 0
   860 jump *label388 greaterThanEq :findPossiblePlacement*retval 0
   861 set :tryPlaceGenerator*retval false
-    * jump *label384 always
+  862 return :tryPlaceGenerator*retaddr
   863 label *label388
   864 op add *tmp479 :tryPlaceGenerator:centerX 0.5
   865 op add .water2X *tmp479 :findPossiblePlacement:x
 
   898 label *label391
   899 jump *label392 greaterThanEq :findPossiblePlacement*retval 0
   900 set :tryPlaceGenerator*retval false
-    * jump *label384 always
+  901 return :tryPlaceGenerator*retaddr
   902 label *label392
   903 op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   904 op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
 
   913 label *label394
   914 jump *label395 greaterThanEq :findPossiblePlacement*retval 0
   915 set :tryPlaceGenerator*retval false
-    * jump *label384 always
+  916 return :tryPlaceGenerator*retaddr
   917 label *label395
   918 op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   919 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
 
   928 label *label397
   929 jump *label398 greaterThanEq :findPossiblePlacement*retval 0
   930 set :tryPlaceGenerator*retval false
-    * jump *label384 always
+  931 return :tryPlaceGenerator*retaddr
   932 label *label398
   933 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   934 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   935 set :tryPlaceGenerator*retval true
-    * jump *label384 always
+  936 return :tryPlaceGenerator*retaddr
   937 label *label384
   938 return :tryPlaceGenerator*retaddr
   939 end
 
   954 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
   955 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
   956 set :layoutThoriumDrillAtLocation:mask2x2 387
-    * jump *label503 always
+  957 jump *label409 always
   958 print :printMask:text
   959 print "\n"
-    * jump *label502 lessThan :printMask:r 0
+  960 jump *label409 lessThan :printMask:r 0
   961 label *label494
   962 jump *label500 greaterThanEq :printMask:c 7
   963 label *label496
 
   968 jump *label494 greaterThanEq :printMask:r 0
   969 label *label502
   970 label *label503
-    * jump *label517 always
+  971 jump *label409 always
   972 print :printMask:text
   973 print "\n"
-    * jump *label516 lessThan :printMask:r 0
+  974 jump *label409 lessThan :printMask:r 0
   975 label *label508
   976 jump *label514 greaterThanEq :printMask:c 7
   977 label *label510
 
   982 jump *label508 greaterThanEq :printMask:r 0
   983 label *label516
   984 label *label517
-    * jump *label531 always
+  985 jump *label409 always
   986 print :printMask:text
   987 print "\n"
-    * jump *label530 lessThan :printMask:r 0
+  988 jump *label409 lessThan :printMask:r 0
   989 label *label522
   990 jump *label528 greaterThanEq :printMask:c 7
   991 label *label524
 
   998 label *label531
   999 jump *label409 always
  1000 print ""
-    * jump *label412 always
+ 1001 jump *label15 always
  1002 printflush message1
  1003 control enabled switch1 true
  1004 label *label414
 
  1050 label *label425
  1051 jump *label426 equal :tryPlaceGenerator*retval false
  1052 set :layoutThoriumDrillAtLocation*retval true
-    * jump *label400 always
+ 1053 return :layoutThoriumDrillAtLocation*retaddr
  1054 label *label426
  1055 set :layoutThoriumDrillAtLocation:sx 3
  1056 set :layoutThoriumDrillAtLocation:sy 3
 
  1128 label *label445
  1129 jump *label446 equal :tryPlaceGenerator*retval false
  1130 set :layoutThoriumDrillAtLocation*retval true
-    * jump *label400 always
+ 1131 return :layoutThoriumDrillAtLocation*retaddr
  1132 label *label446
  1133 multijump *tmp586 0 0 (m:marker0)
  1134 multilabel *label434 (m:marker0)

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-60 instructions):
-    * label __start__
     0 jump *label15 always
     1 jump *label0 always
     2 jump *label1 always
 
     9 label *label16
    10 wait 1e12
    11 jump *label16 always
-    * end
    12 label *label6
    13 op sub :spotValue:x :computeRowValues:x 2
    14 set :spotValue:y :computeRowValues:y
 
    52 op add *tmp15 :spotValue.3:result :spotValue.4:result
    53 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
    54 return :computeRowValues*retaddr
-    * return :computeRowValues*retaddr
    55 label *label23
    56 jump *label25 notEqual :computeRowValues:size 3
    57 op add *tmp19 :spotValue.1:result :spotValue.2:result
 
    61 op add *tmp24 *tmp23 :spotValue.4:result
    62 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
    63 return :computeRowValues*retaddr
-    * return :computeRowValues*retaddr
    64 label *label25
    65 op sub :spotValue.5:x :computeRowValues:x 3
    66 set :spotValue.5:y :computeRowValues:y
 
    89 op add *tmp44 *tmp39 :spotValue.6:result
    90 op min *tmp45 0.09803921568627451 *tmp44
    91 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
-    * label *label26
-    * label *label24
-    * label *label17
    92 return :computeRowValues*retaddr
-    * end
    93 label *label9
    94 ubind :findDrillLocationLocal:unit
    95 set .locationsStart .locations
 
   282 op add *tmp15 :spotValue.3:result :spotValue.4:result
   283 packcolor :findBestPosition:y1 *tmp12 *tmp13 *tmp14 *tmp15
   284 jump *label490 always
-    * jump *label489 always
   285 label *label484
   286 jump *label485 notEqual :findDrillLocationLocal:size 3
   287 op add *tmp19 :spotValue.1:result :spotValue.2:result
 
   291 op add *tmp24 *tmp23 :spotValue.4:result
   292 packcolor :findBestPosition:y1 *tmp20 *tmp22 *tmp24 0
   293 jump *label490 always
-    * jump *label488 always
   294 label *label485
   295 op sub :spotValue.5:x :findDrillLocationLocal:oreX 3
   296 set :spotValue.5:y *tmp174
 
   479 set :findDrillLocationLocal:diffX 1.5
   480 set :findDrillLocationLocal:diffY 1.5
   481 set :findBestPosition:best :updateRowPositions2x2.3:col4
-    * label *label184
-    * label *label182
   482 jump *label101 always
   483 label *label100
   484 jump *label186 notEqual :findBestPosition:size 3
 
   551 set :findDrillLocationLocal:diffX 1
   552 set :findDrillLocationLocal:diffY 1
   553 set :findBestPosition:best :updateRowPositions3x3.2:col3
-    * label *label234
-    * label *label232
   554 jump *label187 always
   555 label *label186
   556 op sub *tmp301 :findBestPosition:y 3
 
   716 write :findDrillLocationLocal:dy bank1 .count
   717 op add .locations .locations 1
   718 jump *label330 always
-    * printflush message1
-    * control enabled switch1 true
-    * label *label332
-    * sensor *tmp402 switch1 @enabled
-    * jump *label332 notEqual *tmp402 false
   719 label *label330
   720 ucontrol unbind
   721 set :findDrillLocationLocal*retval true
 
   757 write :findDrillLocationLocal:bestY bank1 .count
   758 op add .locations .locations 1
   759 jump *label51 always
-    * printflush message1
-    * control enabled switch1 true
-    * label *label349
-    * sensor *tmp438 switch1 @enabled
-    * jump *label349 notEqual *tmp438 false
-    * label *label347
-    * label *label343
-    * jump *label51 always
-    * set :findDrillLocationLocal*retval null
-    * label *label45
-    * return :findDrillLocationLocal*retaddr
-    * end
   760 label *label10
   761 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp451
   762 jump *label363 notEqual *tmp451 false
 
   784 jump *label469 greaterThanEq :createTerrainMask:r -3
   785 set :createTerrainMask*retval :createTerrainMask:result
   786 return :createTerrainMask*retaddr
-    * end
   787 label *label11
   788 set :findPossiblePlacement:y -3
   789 jump *label374 greaterThan :findPossiblePlacement:y 3
 
   813 jump *label471 lessThanEq :findPossiblePlacement:y 3
   814 label *label374
   815 set :findPossiblePlacement*retval -1
-    * label *label371
   816 return :findPossiblePlacement*retaddr
-    * end
   817 label *label12
   818 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
   819 set :findPossiblePlacement:placementMask :tryPlaceGenerator:generatorVertical
 
   900 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   901 set :tryPlaceGenerator*retval true
   902 return :tryPlaceGenerator*retaddr
-    * label *label384
-    * return :tryPlaceGenerator*retaddr
-    * end
   903 label *label13
   904 set .panelY -1
   905 set .panelX -1
 
   918 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
   919 set :layoutThoriumDrillAtLocation:mask2x2 387
   920 jump *label409 always
-    * print :printMask:text
-    * print "\n"
-    * jump *label409 lessThan :printMask:r 0
-    * label *label494
-    * jump *label500 greaterThanEq :printMask:c 7
-    * label *label496
-    * print "x"
-    * jump *label496 lessThan :printMask:c 7
-    * label *label500
-    * print "\n"
-    * jump *label494 greaterThanEq :printMask:r 0
-    * label *label502
-    * label *label503
-    * jump *label409 always
-    * print :printMask:text
-    * print "\n"
-    * jump *label409 lessThan :printMask:r 0
-    * label *label508
-    * jump *label514 greaterThanEq :printMask:c 7
-    * label *label510
-    * print "x"
-    * jump *label510 lessThan :printMask:c 7
-    * label *label514
-    * print "\n"
-    * jump *label508 greaterThanEq :printMask:r 0
-    * label *label516
-    * label *label517
-    * jump *label409 always
-    * print :printMask:text
-    * print "\n"
-    * jump *label409 lessThan :printMask:r 0
-    * label *label522
-    * jump *label528 greaterThanEq :printMask:c 7
-    * label *label524
-    * print "x"
-    * jump *label524 lessThan :printMask:c 7
-    * label *label528
-    * print "\n"
-    * jump *label522 greaterThanEq :printMask:r 0
-    * label *label530
-    * label *label531
-    * jump *label409 always
-    * print ""
-    * jump *label15 always
-    * printflush message1
-    * control enabled switch1 true
-    * label *label414
-    * sensor *tmp554 switch1 @enabled
-    * jump *label414 notEqual *tmp554 false
-    * label *label412
-    * end
   921 label *label409
   922 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
   923 set :findPossiblePlacement:placementMask 387
 
  1045 multijump *tmp586 0 0 (m:marker0)
  1046 multilabel *label434 (m:marker0)
  1047 set :layoutThoriumDrillAtLocation*retval true
-    * label *label400
  1048 return :layoutThoriumDrillAtLocation*retaddr
-    * end
  1049 label *label0
  1050 set .searchFinished false
  1051 set :findDrillLocationLocal:x :findDrillLocation:x
 
  1065 set :findDrillLocation*retval true
  1066 set :findDrillLocation*finished true
  1067 jump *label16 always
-    * end
  1068 label *label1
  1069 set :findDrillLocationLocal:x :layoutThoriumDrill:x
  1070 set :findDrillLocationLocal:y :layoutThoriumDrill:y
 
  1089 label *label450
  1090 set :layoutThoriumDrill*finished true
  1091 jump *label16 always
-    * end
  1092 label *label2
  1093 set .mapSpots 0
  1094 set .mapAction 0
 
  1097 ucontrol unbind
  1098 set :stopLocation*finished true
  1099 jump *label16 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
   319 op add *tmp44 *tmp39 :spotValue.6:result
   320 op min *tmp45 0.09803921568627451 *tmp44
   321 packcolor :findBestPosition:y1 *tmp33 *tmp37 *tmp41 *tmp45
-    * label *label488
-    * label *label489
   322 label *label490
   323 op sub *tmp176 :findDrillLocationLocal:oreY 1
   324 set :computeRowValues:x :findDrillLocationLocal:oreX

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-2 instructions):
 
   713 op add .count .count 1
   714 write :findDrillLocationLocal:dy bank1 .count
   715 op add .locations .locations 1
-    * jump *label330 always
   716 label *label330
   717 ucontrol unbind
   718 set :findDrillLocationLocal*retval true
 
   914 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
   915 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
   916 set :layoutThoriumDrillAtLocation:mask2x2 387
-    * jump *label409 always
   917 label *label409
   918 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
   919 set :findPossiblePlacement:placementMask 387

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
   713 op add .count .count 1
   714 write :findDrillLocationLocal:dy bank1 .count
   715 op add .locations .locations 1
-    * label *label330
   716 ucontrol unbind
   717 set :findDrillLocationLocal*retval true
   718 return :findDrillLocationLocal*retaddr
 
   913 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
   914 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
   915 set :layoutThoriumDrillAtLocation:mask2x2 387
-    * label *label409
   916 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
   917 set :findPossiblePlacement:placementMask 387
   918 set :findPossiblePlacement:width 2

Modifications by Jumps phase, Jump Straightening, pass 5, iteration 1 (-1 instructions):
 
   738 op sub *tmp419 :findDrillLocationLocal:oreY .coreY
   739 op abs *tmp420 *tmp419
   740 op min *tmp421 *tmp418 *tmp420
-    * jump *label93 lessThan *tmp421 7
-    * jump *label91 always
+  741 jump *label91 greaterThanEq *tmp421 7
   742 label *label93
   743 jump *label51 lessThan :findDrillLocationLocal:best 0
   744 op add .count .count 1

Final code before resolving virtual instructions:

    0:  jump *label15 always 0 0                                     #set target = 8;
    1:  jump *label0 always 0 0                                      ...
    2:  jump *label1 always 0 0                                      ...
    3:  jump *label2 always 0 0                                      ...
    4:  draw triangle bank1 message1 .angle .attenuationRate .batteryX .batteryY
    5:  draw triangle .containerX .containerY .coreX .coreY .count .drillX
    6:  draw triangle .drillY .generatorX .generatorY .locations .locationsStart .mapAction
    7:  draw triangle .mapProgress .mapSpots .mapTotal .nodeX .nodeY .panelX
    8:  draw triangle .panelY .searchFinished .water1X .water1Y .water2X .water2Y
    9:  draw triangle :computeRowValues:ore :computeRowValues:size :computeRowValues:x :computeRowValues:y :createTerrainMask:c :createTerrainMask:r
   10:  draw triangle :createTerrainMask:result :createTerrainMask:x :createTerrainMask:y :findBestPosition:best :findBestPosition:ore :findBestPosition:row1
   11:  draw triangle :findBestPosition:row1.2 :findBestPosition:row1.1 :findBestPosition:row2.1 :findBestPosition:row2.2 :findBestPosition:row2 :findBestPosition:row3
   12:  draw triangle :findBestPosition:row3.1 :findBestPosition:row3.2 :findBestPosition:row4.1 :findBestPosition:row4 :findBestPosition:size :findBestPosition:x
   13:  draw triangle :findBestPosition:y :findBestPosition:y0 :findBestPosition:y1 :findBestPosition:y2 :findBestPosition:y3 :findBestPosition:y4
   14:  draw triangle :findBestPosition:y5 :findDrillLocation:capacity :findDrillLocation:dx :findDrillLocation:dy :findDrillLocation:item :findDrillLocation:limit
   15:  draw triangle :findDrillLocation:ore :findDrillLocation:size :findDrillLocation:unit :findDrillLocation:x :findDrillLocation:y :findDrillLocationLocal:best
   16:  draw triangle :findDrillLocationLocal:bestX :findDrillLocationLocal:bestY :findDrillLocationLocal:capacity :findDrillLocationLocal:diffX :findDrillLocationLocal:diffY :findDrillLocationLocal:distanceLimit
   17:  draw triangle :findDrillLocationLocal:dx :findDrillLocationLocal:dy :findDrillLocationLocal:item :findDrillLocationLocal:last :findDrillLocationLocal:limit :findDrillLocationLocal:maxDistance
   18:  draw triangle :findDrillLocationLocal:ore :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY :findDrillLocationLocal:size :findDrillLocationLocal:unit :findDrillLocationLocal:x
   19:  draw triangle :findDrillLocationLocal:y :findPossiblePlacement:height :findPossiblePlacement:mask :findPossiblePlacement:placementMask :findPossiblePlacement:terrainMask :findPossiblePlacement:width
   20:  draw triangle :findPossiblePlacement:x :findPossiblePlacement:y :isBlocked:result :isBlocked:x :isBlocked:y :layoutThoriumDrill:limit
   21:  draw triangle :layoutThoriumDrill:unit :layoutThoriumDrill:x :layoutThoriumDrill:y :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:generatorHorizontal
   22:  draw triangle :layoutThoriumDrillAtLocation:generatorVertical :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:newX :layoutThoriumDrillAtLocation:newY :layoutThoriumDrillAtLocation:sx :layoutThoriumDrillAtLocation:sy
   23:  draw triangle :layoutThoriumDrillAtLocation:terrainMask :locateOreAway:a :locateOreAway:coreDist :locateOreAway:distance :locateOreAway:lastX :locateOreAway:lastY
   24:  draw triangle :locateOreAway:unitDist :locateOreAway:x :locateOreAway:y :round.1:x :round:x :shiftMask:clearMask
   25:  draw triangle :shiftMask:keep :shiftMask:mask :shiftMask:shift :spotValue.3:ore :spotValue.4:ore :spotValue.1:ore
   26:  draw triangle :spotValue.5:ore :spotValue:ore :spotValue.2:ore :spotValue.6:ore :spotValue.4:result :spotValue:result
   27:  draw triangle :spotValue.2:result :spotValue.5:result :spotValue.1:result :spotValue.3:result :spotValue.6:result :spotValue.6:x
   28:  draw triangle :spotValue.5:x :spotValue.4:x :spotValue:x :spotValue.3:x :spotValue.2:x :spotValue.1:x
   29:  draw triangle :spotValue.6:y :spotValue.5:y :spotValue.4:y :spotValue:y :spotValue.3:y :spotValue.2:y
   30:  draw triangle :spotValue.1:y :tryPlaceGenerator:centerX :tryPlaceGenerator:centerY :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:terrainMask
   31:  draw triangle :updateRowPositions2x2:col1 :updateRowPositions2x2.2:col1 :updateRowPositions2x2.1:col1 :updateRowPositions2x2.3:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2.2:col2
   32:  draw triangle :updateRowPositions2x2.1:col2 :updateRowPositions2x2.3:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.3:col3
   33:  draw triangle :updateRowPositions2x2:col4 :updateRowPositions2x2.2:col4 :updateRowPositions2x2.1:col4 :updateRowPositions2x2.3:col4 :updateRowPositions3x3:col1 :updateRowPositions3x3.2:col1
   34:  draw triangle :updateRowPositions3x3.1:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.1:col2 :updateRowPositions3x3:col3 :updateRowPositions3x3.2:col3
   35:  draw triangle :updateRowPositions3x3.1:col3 :updateRowPositions4x4.2:col1 :updateRowPositions4x4.1:col1 :updateRowPositions4x4.3:col1 :updateRowPositions4x4:col1 :updateRowPositions4x4.2:col2
   36:  draw triangle :updateRowPositions4x4.1:col2 :updateRowPositions4x4.3:col2 :updateRowPositions4x4:col2 :updateRowPositions4x4.2:col3 :updateRowPositions4x4.1:col3 :updateRowPositions4x4.3:col3
   37:  draw triangle :updateRowPositions4x4:col3 :updateRowPositions4x4.2:col4 :updateRowPositions4x4.1:col4 :updateRowPositions4x4.3:col4 :updateRowPositions4x4:col4 :visited:i
   38:  draw triangle :visited:index :visited:lx :visited:ly 0 0 0
        label *label15                                               ...
   39:  set .attenuationRate 50                                      remote var attenuationRate = 50;
   40:  set .locations 0                                             remote var locations = 0;
   41:  set .count -1                                                var count = -1, locationsStart, start;
   42:  set *signature "3290b8c661787058:v1"                         #set target = 8;
        label *label16                                               ...
   43:  wait 1e12                                                    ...
   44:  jump *label16 always 0 0                                     ...
        label *label6                                                def computeRowValues(x, y, ore, size)
   45:  op sub :spotValue:x :computeRowValues:x 2                    var x1 = spotValue(x - 2, y, ore);
   46:  set :spotValue:y :computeRowValues:y                         ...
   47:  set :spotValue:ore :computeRowValues:ore                     ...
   48:  ucontrol getBlock :spotValue:x :spotValue:y type building fl mlog(in x, in y, in ore, in ORE, in WALL, out result) {
   49:  select value equal floor :spotValue:ore 0.00392156862745098  ...
   50:  sensor solid type @solid                                     ...
   51:  select :spotValue:result notEqual solid false 0.098039215686 ...
   52:  op sub :spotValue.1:x :computeRowValues:x 1                  var x2 = spotValue(x - 1, y, ore);
   53:  set :spotValue.1:y :computeRowValues:y                       ...
   54:  set :spotValue.1:ore :computeRowValues:ore                   ...
   55:  ucontrol getBlock :spotValue.1:x :spotValue.1:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
   56:  select value equal floor :spotValue.1:ore 0.0039215686274509 ...
   57:  sensor solid type @solid                                     ...
   58:  select :spotValue.1:result notEqual solid false 0.0980392156 ...
   59:  set :spotValue.2:x :computeRowValues:x                       var x3 = spotValue(x + 0, y, ore);
   60:  set :spotValue.2:y :computeRowValues:y                       ...
   61:  set :spotValue.2:ore :computeRowValues:ore                   ...
   62:  ucontrol getBlock :spotValue.2:x :spotValue.2:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
   63:  select value equal floor :spotValue.2:ore 0.0039215686274509 ...
   64:  sensor solid type @solid                                     ...
   65:  select :spotValue.2:result notEqual solid false 0.0980392156 ...
   66:  op add :spotValue.3:x :computeRowValues:x 1                  var x4 = spotValue(x + 1, y, ore);
   67:  set :spotValue.3:y :computeRowValues:y                       ...
   68:  set :spotValue.3:ore :computeRowValues:ore                   ...
   69:  ucontrol getBlock :spotValue.3:x :spotValue.3:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
   70:  select value equal floor :spotValue.3:ore 0.0039215686274509 ...
   71:  sensor solid type @solid                                     ...
   72:  select :spotValue.3:result notEqual solid false 0.0980392156 ...
   73:  op add :spotValue.4:x :computeRowValues:x 2                  var x5 = spotValue(x + 2, y, ore);
   74:  set :spotValue.4:y :computeRowValues:y                       ...
   75:  set :spotValue.4:ore :computeRowValues:ore                   ...
   76:  ucontrol getBlock :spotValue.4:x :spotValue.4:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
   77:  select value equal floor :spotValue.4:ore 0.0039215686274509 ...
   78:  sensor solid type @solid                                     ...
   79:  select :spotValue.4:result notEqual solid false 0.0980392156 ...
   80:  jump *label23 notEqual :computeRowValues:size 2              if size == 2 then
   81:  op add *tmp12 :spotValue:result :spotValue.1:result          x1 + x2,        // drill at x - 1.5
   82:  op add *tmp13 :spotValue.1:result :spotValue.2:result        x2 + x3,        // drill at x - 0.5
   83:  op add *tmp14 :spotValue.2:result :spotValue.3:result        x3 + x4,        // drill at x + 0.5
   84:  op add *tmp15 :spotValue.3:result :spotValue.4:result        x4 + x5         // drill at x + 1.5
   85:  packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp return packcolor(
   86:  return :computeRowValues*retaddr                             ...
        label *label23                                               if size == 2 then
   87:  jump *label25 notEqual :computeRowValues:size 3              elsif size == 3 then
   88:  op add *tmp19 :spotValue.1:result :spotValue.2:result        x1 + (x2 + x3),   // drill at x - 1
   89:  op add *tmp20 :spotValue:result *tmp19                       ...
   90:  op add *tmp22 *tmp19 :spotValue.3:result                     (x2 + x3) + x4,   // drill at x
   91:  op add *tmp23 :spotValue.2:result :spotValue.3:result        x3 + x4 + x5,   // drill at x + 1
   92:  op add *tmp24 *tmp23 :spotValue.4:result                     ...
   93:  packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0    return packcolor(
   94:  return :computeRowValues*retaddr                             ...
        label *label25                                               elsif size == 3 then
   95:  op sub :spotValue.5:x :computeRowValues:x 3                  var x0 = spotValue(x - 3, y, ore);
   96:  set :spotValue.5:y :computeRowValues:y                       ...
   97:  set :spotValue.5:ore :computeRowValues:ore                   ...
   98:  ucontrol getBlock :spotValue.5:x :spotValue.5:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
   99:  select value equal floor :spotValue.5:ore 0.0039215686274509 ...
  100:  sensor solid type @solid                                     ...
  101:  select :spotValue.5:result notEqual solid false 0.0980392156 ...
  102:  op add :spotValue.6:x :computeRowValues:x 3                  var x6 = spotValue(x + 3, y, ore);
  103:  set :spotValue.6:y :computeRowValues:y                       ...
  104:  set :spotValue.6:ore :computeRowValues:ore                   ...
  105:  ucontrol getBlock :spotValue.6:x :spotValue.6:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  106:  select value equal floor :spotValue.6:ore 0.0039215686274509 ...
  107:  sensor solid type @solid                                     ...
  108:  select :spotValue.6:result notEqual solid false 0.0980392156 ...
  109:  op add *tmp30 :spotValue:result :spotValue.1:result          min(WALL, x0 + (x1 + x2 + x3)),   // drill at x - 1.5
  110:  op add *tmp31 *tmp30 :spotValue.2:result                     ...
  111:  op add *tmp32 :spotValue.5:result *tmp31                     ...
  112:  op min *tmp33 0.09803921568627451 *tmp32                     ...
  113:  op add *tmp36 *tmp31 :spotValue.3:result                     min(WALL, (x1 + x2 + x3) + x4),   // drill at x - 0.5
  114:  op min *tmp37 0.09803921568627451 *tmp36                     ...
  115:  op add *tmp38 :spotValue.2:result :spotValue.3:result        min(WALL, x2 + (x3 + x4 + x5)),   // drill at x + 0.5
  116:  op add *tmp39 *tmp38 :spotValue.4:result                     ...
  117:  op add *tmp40 :spotValue.1:result *tmp39                     ...
  118:  op min *tmp41 0.09803921568627451 *tmp40                     ...
  119:  op add *tmp44 *tmp39 :spotValue.6:result                     min(WALL, (x3 + x4 + x5) + x6)    // drill at x + 1.5
  120:  op min *tmp45 0.09803921568627451 *tmp44                     ...
  121:  packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp return packcolor(
  122:  return :computeRowValues*retaddr                             def computeRowValues(x, y, ore, size)
        label *label9                                                noinline def findDrillLocationLocal(x, y, unit, item, ore, size, limit, out dx, out dy, out capacity)
  123:  ubind :findDrillLocationLocal:unit                           ubind(unit);
  124:  set .locationsStart .locations                               locationsStart = locations;
  125:  set .coreX :findDrillLocationLocal:x                         coreX = x;
  126:  set .coreY :findDrillLocationLocal:y                         coreY = y;
  127:  set :findDrillLocationLocal:capacity 0                       mapSpots = dx = dy = capacity = 0;
  128:  set :findDrillLocationLocal:dy :findDrillLocationLocal:capac ...
  129:  set :findDrillLocationLocal:dx :findDrillLocationLocal:dy    ...
  130:  set .mapSpots :findDrillLocationLocal:dx                     ...
  131:  op sub *tmp83 @mapw :findDrillLocationLocal:x                var distanceLimit = max(coreX, coreY, @mapw - coreX, @maph - coreY);
  132:  op sub *tmp84 @maph :findDrillLocationLocal:y                ...
  133:  op max *tmp85 :findDrillLocationLocal:x :findDrillLocationLo ...
  134:  op max *tmp85 *tmp85 *tmp83                                  ...
  135:  op max *tmp85 *tmp85 *tmp84                                  ...
  136:  set :findDrillLocationLocal:distanceLimit *tmp85             ...
  137:  set .mapAction "Locating ore..."                             mapAction = "Locating ore...";
  138:  set .angle 0                                                 mapProgress = angle = 0;
  139:  set .mapProgress 0                                           ...
  140:  ucontrol within :findDrillLocationLocal:x :findDrillLocation while !within(x, y, radius) do
  141:  jump *label50 notEqual *tmp88 false                          ...
        label *label491                                              ...
  142:  ucontrol approach :findDrillLocationLocal:x :findDrillLocati approach(x, y, radius - 0.5);
  143:  ucontrol within :findDrillLocationLocal:x :findDrillLocation while !within(x, y, radius) do
  144:  jump *label491 equal *tmp88 false                            ...
        label *label50                                               ...
  145:  op div *tmp91 *tmp85 3.8197185279121366                      mapTotal = (distanceLimit / SPIRAL_WIDTH) ** 2;
  146:  op pow .mapTotal *tmp91 2                                    ...
  147:  set :findDrillLocationLocal:oreX 0                           var oreX = 0, oreY = 0;
  148:  set :findDrillLocationLocal:oreY 0                           ...
        label *label51                                               while true do
  149:  set :findDrillLocationLocal:best -1                          var best = -1, bestX = x, bestY = y;
  150:  set :findDrillLocationLocal:bestX :findDrillLocationLocal:x  ...
  151:  set :findDrillLocationLocal:bestY :findDrillLocationLocal:y  ...
  152:  op sub *tmp93 :findDrillLocationLocal:limit :findDrillLocati var maxDistance = (limit - capacity) * attenuationRate;
  153:  op mul :findDrillLocationLocal:maxDistance *tmp93 .attenuati ...
  154:  op min :findDrillLocationLocal:distanceLimit :findDrillLocat distanceLimit = min(distanceLimit, maxDistance);
  155:  op div *tmp96 :findDrillLocationLocal:distanceLimit 3.819718 mapTotal = (distanceLimit / SPIRAL_WIDTH) ** 2;
  156:  op pow .mapTotal *tmp96 2                                    ...
  157:  set :locateOreAway:x :findDrillLocationLocal:oreX            if !locateOreAway(item, in out oreX, in out oreY, in distanceLimit) then
  158:  set :locateOreAway:y :findDrillLocationLocal:oreY            ...
  159:  op mul :locateOreAway:distance 3.8197185279121366 .angle     var distance = SPIRAL_WIDTH * angle;
  160:  set :locateOreAway:lastX -1                                  var lastX = -1, lastY = -1;
  161:  set :locateOreAway:lastY -1                                  ...
  162:  op max .angle .angle @pi                                     angle = max(angle, @pi);
  163:  op mul .mapProgress .angle .angle                            mapProgress = angle * angle;
  164:  op sub *tmp107 @mapw 5                                       while distance < distanceLimit do
  165:  op sub *tmp114 @maph 5                                       ...
  166:  jump *label57 greaterThanEq :locateOreAway:distance :findDri ...
        label *label467                                              ...
  167:  op div :locateOreAway:a .angle @degToRad                     var a = angle / @degToRad;
  168:  op sin *tmp104 :locateOreAway:a 0                            var lx = limit(coreX + sin(a) * distance, 5, @mapw - 5);
  169:  op mul *tmp105 *tmp104 :locateOreAway:distance               ...
  170:  op add *tmp106 .coreX *tmp105                                ...
  171:  op max *tmp109 *tmp106 5                                     min(max(value, low), high);
  172:  op min *tmp108 *tmp109 *tmp107                               var lx = limit(coreX + sin(a) * distance, 5, @mapw - 5);
  173:  op cos *tmp111 :locateOreAway:a 0                            var ly = limit(coreY + cos(a) * distance, 5, @maph - 5);
  174:  op mul *tmp112 *tmp111 :locateOreAway:distance               ...
  175:  op add *tmp113 .coreY *tmp112                                ...
  176:  op max *tmp116 *tmp113 5                                     min(max(value, low), high);
  177:  op min *tmp115 *tmp116 *tmp114                               var ly = limit(coreY + cos(a) * distance, 5, @maph - 5);
  178:  ucontrol within *tmp108 *tmp115 5 *tmp118 0                  while !within(x, y, radius) do
  179:  jump *label63 notEqual *tmp118 false                         ...
        label *label475                                              ...
  180:  ucontrol approach *tmp108 *tmp115 4.5 0 0                    approach(x, y, radius - 0.5);
  181:  ucontrol within *tmp108 *tmp115 5 *tmp118 0                  while !within(x, y, radius) do
  182:  jump *label475 equal *tmp118 false                           ...
        label *label63                                               ...
  183:  op div *tmp121 3.8197185279121366 :locateOreAway:distance    angle += SPIRAL_WIDTH / distance;
  184:  op add .angle .angle *tmp121                                 ...
  185:  op mul .mapProgress .angle .angle                            mapProgress = angle * angle;
  186:  op mul :locateOreAway:distance 3.8197185279121366 .angle     distance = SPIRAL_WIDTH * angle;
  187:  ulocate ore core true :findDrillLocationLocal:item :locateOr if !ulocate(:ore, ore, out x, out y) then
  188:  jump *label64 notEqual *tmp124 false                         ...
  189:  set *tmp98 false                                             return false;
  190:  jump *label54 always 0 0                                     ...
        label *label64                                               if !ulocate(:ore, ore, out x, out y) then
  191:  op sub *tmp128 :locateOreAway:x .coreX                       var coreDist = max(abs(x - coreX), abs(y - coreY));
  192:  op abs *tmp129 *tmp128 0                                     ...
  193:  op sub *tmp130 :locateOreAway:y .coreY                       ...
  194:  op abs *tmp131 *tmp130 0                                     ...
  195:  op max :locateOreAway:coreDist *tmp129 *tmp131               ...
  196:  op sub *tmp133 :locateOreAway:x *tmp108                      var unitDist = len(x - lx, y - ly);
  197:  op sub *tmp134 :locateOreAway:y *tmp115                      ...
  198:  op len :locateOreAway:unitDist *tmp133 *tmp134               ...
  199:  jump *label66 notEqual :locateOreAway:lastX :locateOreAway:x if lastX == x then if lastY == y then continue; end; end;
  200:  jump *label56 equal :locateOreAway:lastY :locateOreAway:y    ...
        label *label66                                               ...
  201:  jump *label70 lessThan :locateOreAway:coreDist 7             if coreDist >= 7 then
  202:  jump *label72 greaterThanEq :locateOreAway:unitDist :locateO if unitDist < distance then
  203:  set :locateOreAway:lastX :locateOreAway:x                    lastX = x;
  204:  set :locateOreAway:lastY :locateOreAway:y                    lastY = y;
  205:  set *tmp145 .locations                                       for var i in locationsStart ... locations do
  206:  set :visited:i .locationsStart                               ...
  207:  jump *label77 greaterThanEq .locationsStart *tmp145          ...
        label *label468                                              ...
  208:  op mul :visited:index 4 :visited:i                           var index = 4 * i;
  209:  op add *tmp147 :visited:index 2                              var lx = bank1[index + 2];
  210:  read :visited:lx bank1 *tmp147                               ...
  211:  op add *tmp150 :visited:index 3                              var ly = bank1[index + 3];
  212:  read :visited:ly bank1 *tmp150                               ...
  213:  op sub *tmp153 :locateOreAway:x :visited:lx                  if len(x - lx, y - ly) < 7 then
  214:  op sub *tmp154 :locateOreAway:y :visited:ly                  ...
  215:  op len *tmp155 *tmp153 *tmp154                               ...
  216:  jump *label78 greaterThanEq *tmp155 7                        ...
  217:  set *tmp144 true                                             return true;
  218:  jump *label74 always 0 0                                     ...
        label *label78                                               if len(x - lx, y - ly) < 7 then
  219:  op add :visited:i :visited:i 1                               for var i in locationsStart ... locations do
  220:  jump *label468 lessThan :visited:i *tmp145                   ...
        label *label77                                               ...
  221:  set *tmp144 false                                            return false;
        label *label74                                               if !visited(x, y) then
  222:  jump *label80 notEqual *tmp144 false                         ...
  223:  op div *tmp160 2 .angle                                      angle += 2 * SPIRAL_WIDTH / distance;
  224:  op add .angle .angle *tmp160                                 ...
  225:  op mul .mapProgress .angle .angle                            mapProgress = angle * angle;
  226:  printflush message1                                          printflush(message1);
  227:  set *tmp98 true                                              return true;
  228:  jump *label54 always 0 0                                     ...
        label *label80                                               if !visited(x, y) then
        label *label72                                               if unitDist < distance then
        label *label70                                               if coreDist >= 7 then
        label *label56                                               while distance < distanceLimit do
  229:  jump *label467 lessThan :locateOreAway:distance :findDrillLo ...
        label *label57                                               ...
  230:  set *tmp98 false                                             return false;
        label *label54                                               if !locateOreAway(item, in out oreX, in out oreY, in distanceLimit) then
  231:  set :findDrillLocationLocal:oreX :locateOreAway:x            ...
  232:  set :findDrillLocationLocal:oreY :locateOreAway:y            ...
  233:  jump *label82 notEqual *tmp98 false                          ...
  234:  op greaterThan :findDrillLocationLocal*retval :findDrillLoca return capacity > 0;
  235:  return :findDrillLocationLocal*retaddr                       ...
        label *label82                                               if !locateOreAway(item, in out oreX, in out oreY, in distanceLimit) then
  236:  jump *label84 lessThan :findDrillLocationLocal:limit 1000    if limit >= 1000 then mapSpots++; end;
  237:  op add .mapSpots .mapSpots 1                                 ...
        label *label84                                               ...
  238:  ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp170  while !within(x, y, radius) do
  239:  jump *label90 notEqual *tmp170 false                         ...
        label *label476                                              ...
  240:  ucontrol approach :locateOreAway:x :locateOreAway:y 5.5 0 0  approach(x, y, radius - 0.5);
  241:  ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp170  while !within(x, y, radius) do
  242:  jump *label476 equal *tmp170 false                           ...
        label *label90                                               ...
  243:  set :findDrillLocationLocal:last 0                           var last = 0;
        label *label91                                               while true do
  244:  set :findBestPosition:x :findDrillLocationLocal:oreX         var score = findBestPosition(oreX, oreY, ore, size, ref diffX, ref diffY);
  245:  set :findBestPosition:y :findDrillLocationLocal:oreY         ...
  246:  set :findBestPosition:ore :findDrillLocationLocal:ore        ...
  247:  set :findBestPosition:size :findDrillLocationLocal:size      ...
  248:  op sub *tmp174 :findDrillLocationLocal:oreY 2                var y1 = computeRowValues(x, y - 2, ore, size);
  249:  op sub :spotValue:x :findDrillLocationLocal:oreX 2           var x1 = spotValue(x - 2, y, ore);
  250:  set :spotValue:y *tmp174                                     ...
  251:  set :spotValue:ore :findDrillLocationLocal:ore               ...
  252:  ucontrol getBlock :spotValue:x :spotValue:y type building fl mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  253:  select value equal floor :spotValue:ore 0.00392156862745098  ...
  254:  sensor solid type @solid                                     ...
  255:  select :spotValue:result notEqual solid false 0.098039215686 ...
  256:  op sub :spotValue.1:x :findDrillLocationLocal:oreX 1         var x2 = spotValue(x - 1, y, ore);
  257:  set :spotValue.1:y *tmp174                                   ...
  258:  set :spotValue.1:ore :findDrillLocationLocal:ore             ...
  259:  ucontrol getBlock :spotValue.1:x :spotValue.1:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  260:  select value equal floor :spotValue.1:ore 0.0039215686274509 ...
  261:  sensor solid type @solid                                     ...
  262:  select :spotValue.1:result notEqual solid false 0.0980392156 ...
  263:  set :spotValue.2:x :findDrillLocationLocal:oreX              var x3 = spotValue(x + 0, y, ore);
  264:  set :spotValue.2:y *tmp174                                   ...
  265:  set :spotValue.2:ore :findDrillLocationLocal:ore             ...
  266:  ucontrol getBlock :spotValue.2:x :spotValue.2:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  267:  select value equal floor :spotValue.2:ore 0.0039215686274509 ...
  268:  sensor solid type @solid                                     ...
  269:  select :spotValue.2:result notEqual solid false 0.0980392156 ...
  270:  op add :spotValue.3:x :findDrillLocationLocal:oreX 1         var x4 = spotValue(x + 1, y, ore);
  271:  set :spotValue.3:y *tmp174                                   ...
  272:  set :spotValue.3:ore :findDrillLocationLocal:ore             ...
  273:  ucontrol getBlock :spotValue.3:x :spotValue.3:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  274:  select value equal floor :spotValue.3:ore 0.0039215686274509 ...
  275:  sensor solid type @solid                                     ...
  276:  select :spotValue.3:result notEqual solid false 0.0980392156 ...
  277:  op add :spotValue.4:x :findDrillLocationLocal:oreX 2         var x5 = spotValue(x + 2, y, ore);
  278:  set :spotValue.4:y *tmp174                                   ...
  279:  set :spotValue.4:ore :findDrillLocationLocal:ore             ...
  280:  ucontrol getBlock :spotValue.4:x :spotValue.4:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  281:  select value equal floor :spotValue.4:ore 0.0039215686274509 ...
  282:  sensor solid type @solid                                     ...
  283:  select :spotValue.4:result notEqual solid false 0.0980392156 ...
  284:  jump *label484 notEqual :findDrillLocationLocal:size 2       if size == 2 then
  285:  op add *tmp12 :spotValue:result :spotValue.1:result          x1 + x2,        // drill at x - 1.5
  286:  op add *tmp13 :spotValue.1:result :spotValue.2:result        x2 + x3,        // drill at x - 0.5
  287:  op add *tmp14 :spotValue.2:result :spotValue.3:result        x3 + x4,        // drill at x + 0.5
  288:  op add *tmp15 :spotValue.3:result :spotValue.4:result        x4 + x5         // drill at x + 1.5
  289:  packcolor :findBestPosition:y1 *tmp12 *tmp13 *tmp14 *tmp15   return packcolor(
  290:  jump *label490 always 0 0                                    ...
        label *label484                                              if size == 2 then
  291:  jump *label485 notEqual :findDrillLocationLocal:size 3       elsif size == 3 then
  292:  op add *tmp19 :spotValue.1:result :spotValue.2:result        x1 + (x2 + x3),   // drill at x - 1
  293:  op add *tmp20 :spotValue:result *tmp19                       ...
  294:  op add *tmp22 *tmp19 :spotValue.3:result                     (x2 + x3) + x4,   // drill at x
  295:  op add *tmp23 :spotValue.2:result :spotValue.3:result        x3 + x4 + x5,   // drill at x + 1
  296:  op add *tmp24 *tmp23 :spotValue.4:result                     ...
  297:  packcolor :findBestPosition:y1 *tmp20 *tmp22 *tmp24 0        return packcolor(
  298:  jump *label490 always 0 0                                    ...
        label *label485                                              elsif size == 3 then
  299:  op sub :spotValue.5:x :findDrillLocationLocal:oreX 3         var x0 = spotValue(x - 3, y, ore);
  300:  set :spotValue.5:y *tmp174                                   ...
  301:  set :spotValue.5:ore :findDrillLocationLocal:ore             ...
  302:  ucontrol getBlock :spotValue.5:x :spotValue.5:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  303:  select value equal floor :spotValue.5:ore 0.0039215686274509 ...
  304:  sensor solid type @solid                                     ...
  305:  select :spotValue.5:result notEqual solid false 0.0980392156 ...
  306:  op add :spotValue.6:x :findDrillLocationLocal:oreX 3         var x6 = spotValue(x + 3, y, ore);
  307:  set :spotValue.6:y *tmp174                                   ...
  308:  set :spotValue.6:ore :findDrillLocationLocal:ore             ...
  309:  ucontrol getBlock :spotValue.6:x :spotValue.6:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  310:  select value equal floor :spotValue.6:ore 0.0039215686274509 ...
  311:  sensor solid type @solid                                     ...
  312:  select :spotValue.6:result notEqual solid false 0.0980392156 ...
  313:  op add *tmp30 :spotValue:result :spotValue.1:result          min(WALL, x0 + (x1 + x2 + x3)),   // drill at x - 1.5
  314:  op add *tmp31 *tmp30 :spotValue.2:result                     ...
  315:  op add *tmp32 :spotValue.5:result *tmp31                     ...
  316:  op min *tmp33 0.09803921568627451 *tmp32                     ...
  317:  op add *tmp36 *tmp31 :spotValue.3:result                     min(WALL, (x1 + x2 + x3) + x4),   // drill at x - 0.5
  318:  op min *tmp37 0.09803921568627451 *tmp36                     ...
  319:  op add *tmp38 :spotValue.2:result :spotValue.3:result        min(WALL, x2 + (x3 + x4 + x5)),   // drill at x + 0.5
  320:  op add *tmp39 *tmp38 :spotValue.4:result                     ...
  321:  op add *tmp40 :spotValue.1:result *tmp39                     ...
  322:  op min *tmp41 0.09803921568627451 *tmp40                     ...
  323:  op add *tmp44 *tmp39 :spotValue.6:result                     min(WALL, (x3 + x4 + x5) + x6)    // drill at x + 1.5
  324:  op min *tmp45 0.09803921568627451 *tmp44                     ...
  325:  packcolor :findBestPosition:y1 *tmp33 *tmp37 *tmp41 *tmp45   return packcolor(
        label *label490                                              var y1 = computeRowValues(x, y - 2, ore, size);
  326:  op sub *tmp176 :findDrillLocationLocal:oreY 1                var y2 = computeRowValues(x, y - 1, ore, size);
  327:  set :computeRowValues:x :findDrillLocationLocal:oreX         ...
  328:  set :computeRowValues:y *tmp176                              ...
  329:  set :computeRowValues:ore :findDrillLocationLocal:ore        ...
  330:  set :computeRowValues:size :findDrillLocationLocal:size      ...
  331:  setaddr :computeRowValues*retaddr *label96                   ...
  332:  call *label6 *invalid :computeRowValues*retval               ...
        label *label96                                               ...
  333:  set :findBestPosition:y2 :computeRowValues*retval            ...
  334:  set :computeRowValues:x :findBestPosition:x                  var y3 = computeRowValues(x, y + 0, ore, size);
  335:  set :computeRowValues:y :findBestPosition:y                  ...
  336:  set :computeRowValues:ore :findBestPosition:ore              ...
  337:  set :computeRowValues:size :findBestPosition:size            ...
  338:  setaddr :computeRowValues*retaddr *label97                   ...
  339:  call *label6 *invalid :computeRowValues*retval               ...
        label *label97                                               ...
  340:  set :findBestPosition:y3 :computeRowValues*retval            ...
  341:  op add *tmp180 :findBestPosition:y 1                         var y4 = computeRowValues(x, y + 1, ore, size);
  342:  set :computeRowValues:x :findBestPosition:x                  ...
  343:  set :computeRowValues:y *tmp180                              ...
  344:  set :computeRowValues:ore :findBestPosition:ore              ...
  345:  set :computeRowValues:size :findBestPosition:size            ...
  346:  setaddr :computeRowValues*retaddr *label98                   ...
  347:  call *label6 *invalid :computeRowValues*retval               ...
        label *label98                                               ...
  348:  set :findBestPosition:y4 :computeRowValues*retval            ...
  349:  op add *tmp182 :findBestPosition:y 2                         var y5 = computeRowValues(x, y + 2, ore, size);
  350:  set :computeRowValues:x :findBestPosition:x                  ...
  351:  set :computeRowValues:y *tmp182                              ...
  352:  set :computeRowValues:ore :findBestPosition:ore              ...
  353:  set :computeRowValues:size :findBestPosition:size            ...
  354:  setaddr :computeRowValues*retaddr *label99                   ...
  355:  call *label6 *invalid :computeRowValues*retval               ...
        label *label99                                               ...
  356:  set :findBestPosition:y5 :computeRowValues*retval            ...
  357:  set :findBestPosition:best 0                                 var best = 0;
  358:  set :findDrillLocationLocal:diffX 0                          bestX = 0;
  359:  set :findDrillLocationLocal:diffY 0                          bestY = 0;
  360:  jump *label100 notEqual :findBestPosition:size 2             if size == 2 then
  361:  op add :findBestPosition:row1 :findBestPosition:y1 :findBest var row1 = y1 + y2;         // drill at y - 1.5
  362:  op add :findBestPosition:row2 :findBestPosition:y2 :findBest var row2 = y2 + y3;         // drill at y - 0.5
  363:  op add :findBestPosition:row3 :findBestPosition:y3 :findBest var row3 = y3 + y4;         // drill at y + 0.5
  364:  op add :findBestPosition:row4 :findBestPosition:y4 :computeR var row4 = y4 + y5;         // drill at y + 1.5
  365:  unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2 unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  366:  jump *label104 greaterThanEq :updateRowPositions2x2:col1 0.0 if value < LIMIT then
  367:  jump *label106 lessThanEq :updateRowPositions2x2:col1 0      if value > best then
  368:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  369:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  370:  set :findBestPosition:best :updateRowPositions2x2:col1       best = value;
        label *label106                                              if value > best then
        label *label104                                              if value < LIMIT then
  371:  jump *label109 greaterThanEq :updateRowPositions2x2:col2 0.0 ...
  372:  jump *label111 lessThanEq :updateRowPositions2x2:col2 :findB if value > best then
  373:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  374:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  375:  set :findBestPosition:best :updateRowPositions2x2:col2       best = value;
        label *label111                                              if value > best then
        label *label109                                              if value < LIMIT then
  376:  jump *label114 greaterThanEq :updateRowPositions2x2:col3 0.0 ...
  377:  jump *label116 lessThanEq :updateRowPositions2x2:col3 :findB if value > best then
  378:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  379:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  380:  set :findBestPosition:best :updateRowPositions2x2:col3       best = value;
        label *label116                                              if value > best then
        label *label114                                              if value < LIMIT then
  381:  jump *label119 greaterThanEq :updateRowPositions2x2:col4 0.0 ...
  382:  jump *label121 lessThanEq :updateRowPositions2x2:col4 :findB if value > best then
  383:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  384:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  385:  set :findBestPosition:best :updateRowPositions2x2:col4       best = value;
        label *label121                                              if value > best then
        label *label119                                              if value < LIMIT then
  386:  unpackcolor :updateRowPositions2x2.1:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  387:  jump *label125 greaterThanEq :updateRowPositions2x2.1:col1 0 if value < LIMIT then
  388:  jump *label127 lessThanEq :updateRowPositions2x2.1:col1 :fin if value > best then
  389:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  390:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  391:  set :findBestPosition:best :updateRowPositions2x2.1:col1     best = value;
        label *label127                                              if value > best then
        label *label125                                              if value < LIMIT then
  392:  jump *label130 greaterThanEq :updateRowPositions2x2.1:col2 0 ...
  393:  jump *label132 lessThanEq :updateRowPositions2x2.1:col2 :fin if value > best then
  394:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  395:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  396:  set :findBestPosition:best :updateRowPositions2x2.1:col2     best = value;
        label *label132                                              if value > best then
        label *label130                                              if value < LIMIT then
  397:  jump *label135 greaterThanEq :updateRowPositions2x2.1:col3 0 ...
  398:  jump *label137 lessThanEq :updateRowPositions2x2.1:col3 :fin if value > best then
  399:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  400:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  401:  set :findBestPosition:best :updateRowPositions2x2.1:col3     best = value;
        label *label137                                              if value > best then
        label *label135                                              if value < LIMIT then
  402:  jump *label140 greaterThanEq :updateRowPositions2x2.1:col4 0 ...
  403:  jump *label142 lessThanEq :updateRowPositions2x2.1:col4 :fin if value > best then
  404:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  405:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  406:  set :findBestPosition:best :updateRowPositions2x2.1:col4     best = value;
        label *label142                                              if value > best then
        label *label140                                              if value < LIMIT then
  407:  unpackcolor :updateRowPositions2x2.2:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  408:  jump *label146 greaterThanEq :updateRowPositions2x2.2:col1 0 if value < LIMIT then
  409:  jump *label148 lessThanEq :updateRowPositions2x2.2:col1 :fin if value > best then
  410:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  411:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  412:  set :findBestPosition:best :updateRowPositions2x2.2:col1     best = value;
        label *label148                                              if value > best then
        label *label146                                              if value < LIMIT then
  413:  jump *label151 greaterThanEq :updateRowPositions2x2.2:col2 0 ...
  414:  jump *label153 lessThanEq :updateRowPositions2x2.2:col2 :fin if value > best then
  415:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  416:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  417:  set :findBestPosition:best :updateRowPositions2x2.2:col2     best = value;
        label *label153                                              if value > best then
        label *label151                                              if value < LIMIT then
  418:  jump *label156 greaterThanEq :updateRowPositions2x2.2:col3 0 ...
  419:  jump *label158 lessThanEq :updateRowPositions2x2.2:col3 :fin if value > best then
  420:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  421:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  422:  set :findBestPosition:best :updateRowPositions2x2.2:col3     best = value;
        label *label158                                              if value > best then
        label *label156                                              if value < LIMIT then
  423:  jump *label161 greaterThanEq :updateRowPositions2x2.2:col4 0 ...
  424:  jump *label163 lessThanEq :updateRowPositions2x2.2:col4 :fin if value > best then
  425:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  426:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  427:  set :findBestPosition:best :updateRowPositions2x2.2:col4     best = value;
        label *label163                                              if value > best then
        label *label161                                              if value < LIMIT then
  428:  unpackcolor :updateRowPositions2x2.3:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  429:  jump *label167 greaterThanEq :updateRowPositions2x2.3:col1 0 if value < LIMIT then
  430:  jump *label169 lessThanEq :updateRowPositions2x2.3:col1 :fin if value > best then
  431:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  432:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  433:  set :findBestPosition:best :updateRowPositions2x2.3:col1     best = value;
        label *label169                                              if value > best then
        label *label167                                              if value < LIMIT then
  434:  jump *label172 greaterThanEq :updateRowPositions2x2.3:col2 0 ...
  435:  jump *label174 lessThanEq :updateRowPositions2x2.3:col2 :fin if value > best then
  436:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  437:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  438:  set :findBestPosition:best :updateRowPositions2x2.3:col2     best = value;
        label *label174                                              if value > best then
        label *label172                                              if value < LIMIT then
  439:  jump *label177 greaterThanEq :updateRowPositions2x2.3:col3 0 ...
  440:  jump *label179 lessThanEq :updateRowPositions2x2.3:col3 :fin if value > best then
  441:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  442:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  443:  set :findBestPosition:best :updateRowPositions2x2.3:col3     best = value;
        label *label179                                              if value > best then
        label *label177                                              if value < LIMIT then
  444:  jump *label101 greaterThanEq :updateRowPositions2x2.3:col4 0 ...
  445:  jump *label101 lessThanEq :updateRowPositions2x2.3:col4 :fin if value > best then
  446:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  447:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  448:  set :findBestPosition:best :updateRowPositions2x2.3:col4     best = value;
  449:  jump *label101 always 0 0                                    if size == 2 then
        label *label100                                              ...
  450:  jump *label186 notEqual :findBestPosition:size 3             elsif size == 3 then
  451:  op add *tmp256 :findBestPosition:y2 :findBestPosition:y3     var row1 = y1 + (y2 + y3);  // drill at y - 1
  452:  op add :findBestPosition:row1.1 :findBestPosition:y1 *tmp256 ...
  453:  op add :findBestPosition:row2.1 *tmp256 :findBestPosition:y4 var row2 = (y2 + y3) + y4;  // drill at y
  454:  op add *tmp260 :findBestPosition:y3 :findBestPosition:y4     var row3 = y3 + y4 + y5;    // drill at y + 1
  455:  op add :findBestPosition:row3.1 *tmp260 :computeRowValues*re ...
  456:  unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3 unpackcolor(out col1, out col2, out col3, , rowSum);
  457:  jump *label190 greaterThanEq :updateRowPositions3x3:col1 0.0 if value < LIMIT then
  458:  jump *label192 lessThanEq :updateRowPositions3x3:col1 0      if value > best then
  459:  set :findDrillLocationLocal:diffX -1                         bestX = dx;
  460:  set :findDrillLocationLocal:diffY -1                         bestY = dy;
  461:  set :findBestPosition:best :updateRowPositions3x3:col1       best = value;
        label *label192                                              if value > best then
        label *label190                                              if value < LIMIT then
  462:  jump *label195 greaterThanEq :updateRowPositions3x3:col2 0.0 ...
  463:  jump *label197 lessThanEq :updateRowPositions3x3:col2 :findB if value > best then
  464:  set :findDrillLocationLocal:diffX 0                          bestX = dx;
  465:  set :findDrillLocationLocal:diffY -1                         bestY = dy;
  466:  set :findBestPosition:best :updateRowPositions3x3:col2       best = value;
        label *label197                                              if value > best then
        label *label195                                              if value < LIMIT then
  467:  jump *label200 greaterThanEq :updateRowPositions3x3:col3 0.0 ...
  468:  jump *label202 lessThanEq :updateRowPositions3x3:col3 :findB if value > best then
  469:  set :findDrillLocationLocal:diffX 1                          bestX = dx;
  470:  set :findDrillLocationLocal:diffY -1                         bestY = dy;
  471:  set :findBestPosition:best :updateRowPositions3x3:col3       best = value;
        label *label202                                              if value > best then
        label *label200                                              if value < LIMIT then
  472:  unpackcolor :updateRowPositions3x3.1:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, , rowSum);
  473:  jump *label206 greaterThanEq :updateRowPositions3x3.1:col1 0 if value < LIMIT then
  474:  jump *label208 lessThanEq :updateRowPositions3x3.1:col1 :fin if value > best then
  475:  set :findDrillLocationLocal:diffX -1                         bestX = dx;
  476:  set :findDrillLocationLocal:diffY 0                          bestY = dy;
  477:  set :findBestPosition:best :updateRowPositions3x3.1:col1     best = value;
        label *label208                                              if value > best then
        label *label206                                              if value < LIMIT then
  478:  jump *label211 greaterThanEq :updateRowPositions3x3.1:col2 0 ...
  479:  jump *label213 lessThanEq :updateRowPositions3x3.1:col2 :fin if value > best then
  480:  set :findDrillLocationLocal:diffX 0                          bestX = dx;
  481:  set :findDrillLocationLocal:diffY 0                          bestY = dy;
  482:  set :findBestPosition:best :updateRowPositions3x3.1:col2     best = value;
        label *label213                                              if value > best then
        label *label211                                              if value < LIMIT then
  483:  jump *label216 greaterThanEq :updateRowPositions3x3.1:col3 0 ...
  484:  jump *label218 lessThanEq :updateRowPositions3x3.1:col3 :fin if value > best then
  485:  set :findDrillLocationLocal:diffX 1                          bestX = dx;
  486:  set :findDrillLocationLocal:diffY 0                          bestY = dy;
  487:  set :findBestPosition:best :updateRowPositions3x3.1:col3     best = value;
        label *label218                                              if value > best then
        label *label216                                              if value < LIMIT then
  488:  unpackcolor :updateRowPositions3x3.2:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, , rowSum);
  489:  jump *label222 greaterThanEq :updateRowPositions3x3.2:col1 0 if value < LIMIT then
  490:  jump *label224 lessThanEq :updateRowPositions3x3.2:col1 :fin if value > best then
  491:  set :findDrillLocationLocal:diffX -1                         bestX = dx;
  492:  set :findDrillLocationLocal:diffY 1                          bestY = dy;
  493:  set :findBestPosition:best :updateRowPositions3x3.2:col1     best = value;
        label *label224                                              if value > best then
        label *label222                                              if value < LIMIT then
  494:  jump *label227 greaterThanEq :updateRowPositions3x3.2:col2 0 ...
  495:  jump *label229 lessThanEq :updateRowPositions3x3.2:col2 :fin if value > best then
  496:  set :findDrillLocationLocal:diffX 0                          bestX = dx;
  497:  set :findDrillLocationLocal:diffY 1                          bestY = dy;
  498:  set :findBestPosition:best :updateRowPositions3x3.2:col2     best = value;
        label *label229                                              if value > best then
        label *label227                                              if value < LIMIT then
  499:  jump *label187 greaterThanEq :updateRowPositions3x3.2:col3 0 ...
  500:  jump *label187 lessThanEq :updateRowPositions3x3.2:col3 :fin if value > best then
  501:  set :findDrillLocationLocal:diffX 1                          bestX = dx;
  502:  set :findDrillLocationLocal:diffY 1                          bestY = dy;
  503:  set :findBestPosition:best :updateRowPositions3x3.2:col3     best = value;
  504:  jump *label187 always 0 0                                    elsif size == 3 then
        label *label186                                              ...
  505:  op sub *tmp301 :findBestPosition:y 3                         var y0 = computeRowValues(x, y - 3, ore, size);
  506:  set :computeRowValues:x :findBestPosition:x                  ...
  507:  set :computeRowValues:y *tmp301                              ...
  508:  set :computeRowValues:ore :findBestPosition:ore              ...
  509:  set :computeRowValues:size :findBestPosition:size            ...
  510:  setaddr :computeRowValues*retaddr *label236                  ...
  511:  call *label6 *invalid :computeRowValues*retval               ...
        label *label236                                              ...
  512:  set :findBestPosition:y0 :computeRowValues*retval            ...
  513:  op add *tmp303 :findBestPosition:y 3                         var y6 = computeRowValues(x, y + 3, ore, size);
  514:  set :computeRowValues:x :findBestPosition:x                  ...
  515:  set :computeRowValues:y *tmp303                              ...
  516:  set :computeRowValues:ore :findBestPosition:ore              ...
  517:  set :computeRowValues:size :findBestPosition:size            ...
  518:  setaddr :computeRowValues*retaddr *label237                  ...
  519:  call *label6 *invalid :computeRowValues*retval               ...
        label *label237                                              ...
  520:  op add *tmp305 :findBestPosition:y1 :findBestPosition:y2     var row1 = y0 + (y1 + y2 + y3);     // drill at y - 1.5
  521:  op add *tmp306 *tmp305 :findBestPosition:y3                  ...
  522:  op add :findBestPosition:row1.2 :findBestPosition:y0 *tmp306 ...
  523:  op add :findBestPosition:row2.2 *tmp306 :findBestPosition:y4 var row2 = (y1 + y2 + y3) + y4;     // drill at y - 0.5
  524:  op add *tmp311 :findBestPosition:y3 :findBestPosition:y4     var row3 = y2 + (y3 + y4 + y5);     // drill at y + 0.5
  525:  op add *tmp312 *tmp311 :findBestPosition:y5                  ...
  526:  op add :findBestPosition:row3.2 :findBestPosition:y2 *tmp312 ...
  527:  op add :findBestPosition:row4.1 *tmp312 :computeRowValues*re var row4 = (y3 + y4 + y5) + y6;     // drill at y + 1.5
  528:  unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4 unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  529:  jump *label240 greaterThanEq :updateRowPositions4x4:col1 0.0 if value < LIMIT then
  530:  jump *label242 lessThanEq :updateRowPositions4x4:col1 :findB if value > best then
  531:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  532:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  533:  set :findBestPosition:best :updateRowPositions4x4:col1       best = value;
        label *label242                                              if value > best then
        label *label240                                              if value < LIMIT then
  534:  jump *label245 greaterThanEq :updateRowPositions4x4:col2 0.0 ...
  535:  jump *label247 lessThanEq :updateRowPositions4x4:col2 :findB if value > best then
  536:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  537:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  538:  set :findBestPosition:best :updateRowPositions4x4:col2       best = value;
        label *label247                                              if value > best then
        label *label245                                              if value < LIMIT then
  539:  jump *label250 greaterThanEq :updateRowPositions4x4:col3 0.0 ...
  540:  jump *label252 lessThanEq :updateRowPositions4x4:col3 :findB if value > best then
  541:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  542:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  543:  set :findBestPosition:best :updateRowPositions4x4:col3       best = value;
        label *label252                                              if value > best then
        label *label250                                              if value < LIMIT then
  544:  jump *label255 greaterThanEq :updateRowPositions4x4:col4 0.0 ...
  545:  jump *label257 lessThanEq :updateRowPositions4x4:col4 :findB if value > best then
  546:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  547:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  548:  set :findBestPosition:best :updateRowPositions4x4:col4       best = value;
        label *label257                                              if value > best then
        label *label255                                              if value < LIMIT then
  549:  unpackcolor :updateRowPositions4x4.1:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  550:  jump *label261 greaterThanEq :updateRowPositions4x4.1:col1 0 if value < LIMIT then
  551:  jump *label263 lessThanEq :updateRowPositions4x4.1:col1 :fin if value > best then
  552:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  553:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  554:  set :findBestPosition:best :updateRowPositions4x4.1:col1     best = value;
        label *label263                                              if value > best then
        label *label261                                              if value < LIMIT then
  555:  jump *label266 greaterThanEq :updateRowPositions4x4.1:col2 0 ...
  556:  jump *label268 lessThanEq :updateRowPositions4x4.1:col2 :fin if value > best then
  557:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  558:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  559:  set :findBestPosition:best :updateRowPositions4x4.1:col2     best = value;
        label *label268                                              if value > best then
        label *label266                                              if value < LIMIT then
  560:  jump *label271 greaterThanEq :updateRowPositions4x4.1:col3 0 ...
  561:  jump *label273 lessThanEq :updateRowPositions4x4.1:col3 :fin if value > best then
  562:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  563:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  564:  set :findBestPosition:best :updateRowPositions4x4.1:col3     best = value;
        label *label273                                              if value > best then
        label *label271                                              if value < LIMIT then
  565:  jump *label276 greaterThanEq :updateRowPositions4x4.1:col4 0 ...
  566:  jump *label278 lessThanEq :updateRowPositions4x4.1:col4 :fin if value > best then
  567:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  568:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  569:  set :findBestPosition:best :updateRowPositions4x4.1:col4     best = value;
        label *label278                                              if value > best then
        label *label276                                              if value < LIMIT then
  570:  unpackcolor :updateRowPositions4x4.2:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  571:  jump *label282 greaterThanEq :updateRowPositions4x4.2:col1 0 if value < LIMIT then
  572:  jump *label284 lessThanEq :updateRowPositions4x4.2:col1 :fin if value > best then
  573:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  574:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  575:  set :findBestPosition:best :updateRowPositions4x4.2:col1     best = value;
        label *label284                                              if value > best then
        label *label282                                              if value < LIMIT then
  576:  jump *label287 greaterThanEq :updateRowPositions4x4.2:col2 0 ...
  577:  jump *label289 lessThanEq :updateRowPositions4x4.2:col2 :fin if value > best then
  578:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  579:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  580:  set :findBestPosition:best :updateRowPositions4x4.2:col2     best = value;
        label *label289                                              if value > best then
        label *label287                                              if value < LIMIT then
  581:  jump *label292 greaterThanEq :updateRowPositions4x4.2:col3 0 ...
  582:  jump *label294 lessThanEq :updateRowPositions4x4.2:col3 :fin if value > best then
  583:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  584:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  585:  set :findBestPosition:best :updateRowPositions4x4.2:col3     best = value;
        label *label294                                              if value > best then
        label *label292                                              if value < LIMIT then
  586:  jump *label297 greaterThanEq :updateRowPositions4x4.2:col4 0 ...
  587:  jump *label299 lessThanEq :updateRowPositions4x4.2:col4 :fin if value > best then
  588:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  589:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  590:  set :findBestPosition:best :updateRowPositions4x4.2:col4     best = value;
        label *label299                                              if value > best then
        label *label297                                              if value < LIMIT then
  591:  unpackcolor :updateRowPositions4x4.3:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  592:  jump *label303 greaterThanEq :updateRowPositions4x4.3:col1 0 if value < LIMIT then
  593:  jump *label305 lessThanEq :updateRowPositions4x4.3:col1 :fin if value > best then
  594:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  595:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  596:  set :findBestPosition:best :updateRowPositions4x4.3:col1     best = value;
        label *label305                                              if value > best then
        label *label303                                              if value < LIMIT then
  597:  jump *label308 greaterThanEq :updateRowPositions4x4.3:col2 0 ...
  598:  jump *label310 lessThanEq :updateRowPositions4x4.3:col2 :fin if value > best then
  599:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  600:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  601:  set :findBestPosition:best :updateRowPositions4x4.3:col2     best = value;
        label *label310                                              if value > best then
        label *label308                                              if value < LIMIT then
  602:  jump *label313 greaterThanEq :updateRowPositions4x4.3:col3 0 ...
  603:  jump *label315 lessThanEq :updateRowPositions4x4.3:col3 :fin if value > best then
  604:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  605:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  606:  set :findBestPosition:best :updateRowPositions4x4.3:col3     best = value;
        label *label315                                              if value > best then
        label *label313                                              if value < LIMIT then
  607:  jump *label318 greaterThanEq :updateRowPositions4x4.3:col4 0 ...
  608:  jump *label320 lessThanEq :updateRowPositions4x4.3:col4 :fin if value > best then
  609:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  610:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  611:  set :findBestPosition:best :updateRowPositions4x4.3:col4     best = value;
        label *label320                                              if value > best then
        label *label318                                              if value < LIMIT then
        label *label187                                              elsif size == 3 then
        label *label101                                              if size == 2 then
  612:  op mul *tmp173 :findBestPosition:best 255                    return best * 255;
  613:  jump *label322 lessThanEq *tmp173 :findDrillLocationLocal:ca if score > capacity then
  614:  op add :findDrillLocationLocal:dx :findDrillLocationLocal:or dx = oreX + diffX;
  615:  op add :findDrillLocationLocal:dy :findDrillLocationLocal:or dy = oreY + diffY;
  616:  set :findDrillLocationLocal:capacity *tmp173                 capacity = score;
  617:  jump *label324 greaterThanEq :findDrillLocationLocal:limit 1 if limit < 1000 then mapSpots = score; end;
  618:  set .mapSpots *tmp173                                        ...
        label *label324                                              ...
  619:  jump *label326 lessThan :findDrillLocationLocal:capacity :fi if capacity >= limit then
  620:  op add .count .count 1                                       bank1[++count] = item.@id;
  621:  sensor *tmp392 :findDrillLocationLocal:item @id              ...
  622:  write *tmp392 bank1 .count                                   ...
  623:  op add .count .count 1                                       bank1[++count] = value;
  624:  write *tmp173 bank1 .count                                   ...
  625:  op add .count .count 1                                       bank1[++count] = x;
  626:  write :findDrillLocationLocal:dx bank1 .count                ...
  627:  op add .count .count 1                                       bank1[++count] = y;
  628:  write :findDrillLocationLocal:dy bank1 .count                ...
  629:  op add .locations .locations 1                               saveLocation(item, score, dx, dy);
  630:  ucontrol unbind 0 0 0 0 0                                    unbind();
  631:  set :findDrillLocationLocal*retval true                      return true;
  632:  return :findDrillLocationLocal*retaddr                       ...
        label *label326                                              if capacity >= limit then
        label *label322                                              if score > capacity then
  633:  jump *label335 lessThanEq *tmp173 :findDrillLocationLocal:be if score > best then
  634:  op add :findDrillLocationLocal:bestX :findDrillLocationLocal bestX = oreX + diffX;
  635:  op add :findDrillLocationLocal:bestY :findDrillLocationLocal bestY = oreY + diffY;
  636:  set :findDrillLocationLocal:best *tmp173                     best = score;
        label *label335                                              if score > best then
  637:  jump *label93 lessThanEq *tmp173 :findDrillLocationLocal:las if score <= last then break; end;
  638:  set :findDrillLocationLocal:last *tmp173                     last = score;
  639:  op mul :round:x :findDrillLocationLocal:diffX 1.1            oreX += round(diffX * 1.1);    // Rounds halves to higher absolute values
  640:  op add *tmp411 :round:x 0.5                                  *math: floor(x + 0.5);
  641:  op floor *tmp410 *tmp411 0                                   oreX += round(diffX * 1.1);    // Rounds halves to higher absolute values
  642:  op add :findDrillLocationLocal:oreX :findDrillLocationLocal: ...
  643:  op mul :round.1:x :findDrillLocationLocal:diffY 1.1          oreY += round(diffY * 1.1);
  644:  op add *tmp415 :round.1:x 0.5                                *math: floor(x + 0.5);
  645:  op floor *tmp414 *tmp415 0                                   oreY += round(diffY * 1.1);
  646:  op add :findDrillLocationLocal:oreY :findDrillLocationLocal: ...
  647:  op sub *tmp417 :findDrillLocationLocal:oreX .coreX           if min(abs(oreX - coreX), abs(oreY - coreY)) < 7 then break; end;
  648:  op abs *tmp418 *tmp417 0                                     ...
  649:  op sub *tmp419 :findDrillLocationLocal:oreY .coreY           ...
  650:  op abs *tmp420 *tmp419 0                                     ...
  651:  op min *tmp421 *tmp418 *tmp420                               ...
  652:  jump *label91 greaterThanEq *tmp421 7                        ...
        label *label93                                               while true do
  653:  jump *label51 lessThan :findDrillLocationLocal:best 0        if best >= 0 then
  654:  op add .count .count 1                                       bank1[++count] = item.@id;
  655:  sensor *tmp428 :findDrillLocationLocal:item @id              ...
  656:  write *tmp428 bank1 .count                                   ...
  657:  op add .count .count 1                                       bank1[++count] = value;
  658:  write :findDrillLocationLocal:best bank1 .count              ...
  659:  op add .count .count 1                                       bank1[++count] = x;
  660:  write :findDrillLocationLocal:bestX bank1 .count             ...
  661:  op add .count .count 1                                       bank1[++count] = y;
  662:  write :findDrillLocationLocal:bestY bank1 .count             ...
  663:  op add .locations .locations 1                               saveLocation(item, best, bestX, bestY);
  664:  jump *label51 always 0 0                                     if debug then
        label *label10                                               noinline def createTerrainMask(x, y)
  665:  ucontrol within :createTerrainMask:x :createTerrainMask:y 6  while !within(x, y, radius) do
  666:  jump *label363 notEqual *tmp451 false                        ...
        label *label477                                              ...
  667:  ucontrol approach :createTerrainMask:x :createTerrainMask:y  approach(x, y, radius - 0.5);
  668:  ucontrol within :createTerrainMask:x :createTerrainMask:y 6  while !within(x, y, radius) do
  669:  jump *label477 equal *tmp451 false                           ...
        label *label363                                              ...
  670:  set :createTerrainMask:result 0                              var result = 0;
  671:  set :createTerrainMask:r 3                                   for var r in -3 .. 3 descending do
        label *label469                                              ...
  672:  set :createTerrainMask:c 3                                   for var c in -3 .. 3 descending do
  673:  op add *tmp456 :createTerrainMask:y :createTerrainMask:r     ...
        label *label470                                              ...
  674:  op shl *tmp454 :createTerrainMask:result 1                   result = (result << 1) | isBlocked(x + c, y + r);
  675:  op add :isBlocked:x :createTerrainMask:x :createTerrainMask: ...
  676:  set :isBlocked:y *tmp456                                     ...
  677:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  678:  select type equal type @boulder @air type                    ...
  679:  select :isBlocked:result equal type @air 0 1                 ...
  680:  op or :createTerrainMask:result *tmp454 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  681:  op sub :createTerrainMask:c :createTerrainMask:c 1           for var c in -3 .. 3 descending do
  682:  jump *label470 greaterThanEq :createTerrainMask:c -3         ...
  683:  op sub :createTerrainMask:r :createTerrainMask:r 1           for var r in -3 .. 3 descending do
  684:  jump *label469 greaterThanEq :createTerrainMask:r -3         ...
  685:  set :createTerrainMask*retval :createTerrainMask:result      return result;
  686:  return :createTerrainMask*retaddr                            noinline def createTerrainMask(x, y)
        label *label11                                               noinline def findPossiblePlacement(terrainMask, placementMask, width, height, out x, out y)
  687:  set :findPossiblePlacement:y -3                              for y in -3 .. 3 do
  688:  jump *label374 greaterThan :findPossiblePlacement:y 3        ...
        label *label471                                              ...
  689:  op add *tmp459 :findPossiblePlacement:y 3                    var mask = placementMask << 7 * (y + 3);
  690:  op mul *tmp460 7 *tmp459                                     ...
  691:  op shl :findPossiblePlacement:mask :findPossiblePlacement:pl ...
  692:  set :findPossiblePlacement:x -3                              for x in -3 .. 3 do
  693:  jump *label377 greaterThan :findPossiblePlacement:x 3        ...
        label *label472                                              ...
  694:  op and *tmp462 :findPossiblePlacement:terrainMask :findPossi if (terrainMask & mask) == 0 then return 3 * 8 + y * 7 + x; end;
  695:  jump *label378 notEqual *tmp462 0                            ...
  696:  op mul *tmp465 :findPossiblePlacement:y 7                    ...
  697:  op add *tmp466 24 *tmp465                                    ...
  698:  op add :findPossiblePlacement*retval *tmp466 :findPossiblePl ...
  699:  return :findPossiblePlacement*retaddr                        ...
        label *label378                                              ...
  700:  op sub *tmp468 3 :findPossiblePlacement:width                if x > 3 - width then break; end;
  701:  jump *label377 greaterThan :findPossiblePlacement:x *tmp468  ...
  702:  op shl :findPossiblePlacement:mask :findPossiblePlacement:ma mask <<= 1;
  703:  op add :findPossiblePlacement:x :findPossiblePlacement:x 1   for x in -3 .. 3 do
  704:  jump *label472 lessThanEq :findPossiblePlacement:x 3         ...
        label *label377                                              ...
  705:  op sub *tmp471 3 :findPossiblePlacement:height               if y > 3 - height then break; end;
  706:  jump *label374 greaterThan :findPossiblePlacement:y *tmp471  ...
  707:  op add :findPossiblePlacement:y :findPossiblePlacement:y 1   for y in -3 .. 3 do
  708:  jump *label471 lessThanEq :findPossiblePlacement:y 3         ...
        label *label374                                              ...
  709:  set :findPossiblePlacement*retval -1                         return -1;
  710:  return :findPossiblePlacement*retaddr                        noinline def findPossiblePlacement(terrainMask, placementMask, width, height, out x, out y)
        label *label12                                               def tryPlaceGenerator(centerX, centerY, terrainMask, generatorHorizontal, generatorVertical)
  711:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te var shift = findPossiblePlacement(terrainMask, generatorVertical, 2, 4, out c, out r);
  712:  set :findPossiblePlacement:placementMask :tryPlaceGenerator: ...
  713:  set :findPossiblePlacement:width 2                           ...
  714:  set :findPossiblePlacement:height 4                          ...
  715:  setaddr :findPossiblePlacement*retaddr *label385             ...
  716:  call *label11 *invalid :findPossiblePlacement*retval         ...
        label *label385                                              ...
  717:  jump *label386 lessThan :findPossiblePlacement*retval 0      if shift >= 0 then
  718:  jump *label388 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  719:  set :tryPlaceGenerator*retval false                          ...
  720:  return :tryPlaceGenerator*retaddr                            ...
        label *label388                                              ...
  721:  op add *tmp479 :tryPlaceGenerator:centerX 0.5                water2X = centerX + 0.5 + c;
  722:  op add .water2X *tmp479 :findPossiblePlacement:x             ...
  723:  op add *tmp481 :tryPlaceGenerator:centerY 0.5                water2Y = centerY + 0.5 + r;
  724:  op add .water2Y *tmp481 :findPossiblePlacement:y             ...
  725:  op add .generatorX *tmp479 :findPossiblePlacement:x          generatorX = centerX + 0.5 + c;
  726:  op add *tmp485 :tryPlaceGenerator:centerY 2.5                generatorY = centerY + 2.5 + r;
  727:  op add .generatorY *tmp485 :findPossiblePlacement:y          ...
  728:  op shl *tmp487 :tryPlaceGenerator:generatorVertical :findPos terrainMask |= (generatorVertical << shift);
  729:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
  730:  jump *label387 always 0 0                                    if shift >= 0 then
        label *label386                                              ...
  731:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, generatorHorizontal, 4, 2, out c, out r);
  732:  set :findPossiblePlacement:placementMask :tryPlaceGenerator: ...
  733:  set :findPossiblePlacement:width 4                           ...
  734:  set :findPossiblePlacement:height 2                          ...
  735:  setaddr :findPossiblePlacement*retaddr *label390             ...
  736:  call *label11 *invalid :findPossiblePlacement*retval         ...
        label *label390                                              ...
  737:  op add *tmp489 :tryPlaceGenerator:centerX 0.5                water2X = centerX + 0.5 + c;
  738:  op add .water2X *tmp489 :findPossiblePlacement:x             ...
  739:  op add *tmp491 :tryPlaceGenerator:centerY 0.5                water2Y = centerY + 0.5 + r;
  740:  op add .water2Y *tmp491 :findPossiblePlacement:y             ...
  741:  op add *tmp493 :tryPlaceGenerator:centerX 2.5                generatorX = centerX + 2.5 + c;
  742:  op add .generatorX *tmp493 :findPossiblePlacement:x          ...
  743:  op add .generatorY *tmp491 :findPossiblePlacement:y          generatorY = centerY + 0.5 + r;
  744:  op shl *tmp497 :tryPlaceGenerator:generatorHorizontal :findP terrainMask |= (generatorHorizontal << shift);
  745:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
        label *label387                                              if shift >= 0 then
  746:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, 1, 1, 1, out c, out r);
  747:  set :findPossiblePlacement:placementMask 1                   ...
  748:  set :findPossiblePlacement:width 1                           ...
  749:  set :findPossiblePlacement:height 1                          ...
  750:  setaddr :findPossiblePlacement*retaddr *label391             ...
  751:  call *label11 *invalid :findPossiblePlacement*retval         ...
        label *label391                                              ...
  752:  jump *label392 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  753:  set :tryPlaceGenerator*retval false                          ...
  754:  return :tryPlaceGenerator*retaddr                            ...
        label *label392                                              ...
  755:  op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacem nodeX = centerX + c;
  756:  op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacem nodeY = centerY + r;
  757:  op shl *tmp503 1 :findPossiblePlacement*retval               terrainMask |= (1 << shift);
  758:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
  759:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, 1, 1, 1, out c, out r);
  760:  set :findPossiblePlacement:placementMask 1                   ...
  761:  set :findPossiblePlacement:width 1                           ...
  762:  set :findPossiblePlacement:height 1                          ...
  763:  setaddr :findPossiblePlacement*retaddr *label394             ...
  764:  call *label11 *invalid :findPossiblePlacement*retval         ...
        label *label394                                              ...
  765:  jump *label395 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  766:  set :tryPlaceGenerator*retval false                          ...
  767:  return :tryPlaceGenerator*retaddr                            ...
        label *label395                                              ...
  768:  op add .panelX :tryPlaceGenerator:centerX :findPossiblePlace panelX = centerX + c;
  769:  op add .panelY :tryPlaceGenerator:centerY :findPossiblePlace panelY = centerY + r;
  770:  op shl *tmp509 1 :findPossiblePlacement*retval               terrainMask |= (1 << shift);
  771:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
  772:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, 1, 1, 1, out c, out r);
  773:  set :findPossiblePlacement:placementMask 1                   ...
  774:  set :findPossiblePlacement:width 1                           ...
  775:  set :findPossiblePlacement:height 1                          ...
  776:  setaddr :findPossiblePlacement*retaddr *label397             ...
  777:  call *label11 *invalid :findPossiblePlacement*retval         ...
        label *label397                                              ...
  778:  jump *label398 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  779:  set :tryPlaceGenerator*retval false                          ...
  780:  return :tryPlaceGenerator*retaddr                            ...
        label *label398                                              ...
  781:  op add .batteryX :tryPlaceGenerator:centerX :findPossiblePla batteryX = centerX + c;
  782:  op add .batteryY :tryPlaceGenerator:centerY :findPossiblePla batteryY = centerY + r;
  783:  set :tryPlaceGenerator*retval true                           return true;
  784:  return :tryPlaceGenerator*retaddr                            ...
        label *label13                                               noinline def layoutThoriumDrillAtLocation()
  785:  set .panelY -1                                               water1X = water1Y = water2X = water2Y = generatorX = generatorY = panelX = panelY = -1;
  786:  set .panelX -1                                               ...
  787:  set .generatorY -1                                           ...
  788:  set .generatorX -1                                           ...
  789:  set .water2Y -1                                              ...
  790:  set .water2X -1                                              ...
  791:  set .water1Y -1                                              ...
  792:  set .water1X -1                                              ...
  793:  set :createTerrainMask:x .drillX                             var plainTerrainMask = createTerrainMask(drillX, drillY);
  794:  set :createTerrainMask:y .drillY                             ...
  795:  setaddr :createTerrainMask*retaddr *label401                 ...
  796:  call *label10 *invalid :createTerrainMask*retval             ...
        label *label401                                              ...
  797:  op or :layoutThoriumDrillAtLocation:terrainMask :createTerra var terrainMask = plainTerrainMask | createFixedMatrix(
  798:  op or :layoutThoriumDrillAtLocation:cornersMask :layoutThori var cornersMask = terrainMask | createFixedMatrix(
  799:  set :layoutThoriumDrillAtLocation:mask2x2 387                var mask2x2 = createFixedMatrix(0b11, 0b11);
  800:  set :findPossiblePlacement:terrainMask :layoutThoriumDrillAt var shift = findPossiblePlacement(cornersMask, mask2x2, 2, 2, out c, out r);
  801:  set :findPossiblePlacement:placementMask 387                 ...
  802:  set :findPossiblePlacement:width 2                           ...
  803:  set :findPossiblePlacement:height 2                          ...
  804:  setaddr :findPossiblePlacement*retaddr *label417             ...
  805:  call *label11 *invalid :findPossiblePlacement*retval         ...
        label *label417                                              ...
  806:  jump *label418 lessThan :findPossiblePlacement*retval 0      if shift >= 0 then
  807:  op add *tmp558 .drillX 0.5                                   water1X = drillX + 0.5 + c;
  808:  op add .water1X *tmp558 :findPossiblePlacement:x             ...
  809:  op add *tmp560 .drillY 0.5                                   water1Y = drillY + 0.5 + r;
  810:  op add .water1Y *tmp560 :findPossiblePlacement:y             ...
  811:  op shl *tmp562 :layoutThoriumDrillAtLocation:mask2x2 :findPo terrainMask |= (mask2x2 << shift);
  812:  op or :layoutThoriumDrillAtLocation:terrainMask :layoutThori ...
  813:  op or :layoutThoriumDrillAtLocation:cornersMask :layoutThori cornersMask |= (mask2x2 << shift);
        label *label418                                              if shift >= 0 then
  814:  set :findPossiblePlacement:terrainMask :layoutThoriumDrillAt shift = findPossiblePlacement(cornersMask, mask2x2, 2, 2, out c, out r);
  815:  set :findPossiblePlacement:placementMask :layoutThoriumDrill ...
  816:  set :findPossiblePlacement:width 2                           ...
  817:  set :findPossiblePlacement:height 2                          ...
  818:  setaddr :findPossiblePlacement*retaddr *label420             ...
  819:  call *label11 *invalid :findPossiblePlacement*retval         ...
        label *label420                                              ...
  820:  jump *label421 lessThan :findPossiblePlacement*retval 0      if shift >= 0 then
  821:  op add *tmp567 .drillX 0.5                                   containerX = drillX + 0.5 + c;
  822:  op add .containerX *tmp567 :findPossiblePlacement:x          ...
  823:  op add *tmp569 .drillY 0.5                                   containerY = drillY + 0.5 + r;
  824:  op add .containerY *tmp569 :findPossiblePlacement:y          ...
  825:  op shl *tmp571 :layoutThoriumDrillAtLocation:mask2x2 :findPo terrainMask |= (mask2x2 << shift);
  826:  op or :layoutThoriumDrillAtLocation:terrainMask :layoutThori ...
        label *label421                                              if shift >= 0 then
  827:  set :layoutThoriumDrillAtLocation:generatorHorizontal 1935   var generatorHorizontal = createFixedMatrix(0b1111, 0b1111);
  828:  set :layoutThoriumDrillAtLocation:generatorVertical 6340995  var generatorVertical = createFixedMatrix(0b11, 0b11, 0b11, 0b11);
  829:  set :tryPlaceGenerator:centerX .drillX                       if tryPlaceGenerator(drillX, drillY, terrainMask, generatorHorizontal, generatorVertical) then return true; end;
  830:  set :tryPlaceGenerator:centerY .drillY                       ...
  831:  set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLoca ...
  832:  set :tryPlaceGenerator:generatorHorizontal 1935              ...
  833:  set :tryPlaceGenerator:generatorVertical 6340995             ...
  834:  setaddr :tryPlaceGenerator*retaddr *label425                 ...
  835:  call *label12 *invalid :tryPlaceGenerator*retval             ...
        label *label425                                              ...
  836:  jump *label426 equal :tryPlaceGenerator*retval false         ...
  837:  set :layoutThoriumDrillAtLocation*retval true                ...
  838:  return :layoutThoriumDrillAtLocation*retaddr                 ...
        label *label426                                              ...
  839:  set :layoutThoriumDrillAtLocation:sx 3                       for var sx in 3, 3, -3, -3; var sy in 3, -3, 3, -3 do
  840:  set :layoutThoriumDrillAtLocation:sy 3                       ...
  841:  setaddr *tmp586 *label431                                    ...
  842:  jump *label428 always 0 0                                    ...
        multilabel *label431                                         ...
  843:  set :layoutThoriumDrillAtLocation:sx 3                       ...
  844:  set :layoutThoriumDrillAtLocation:sy -3                      ...
  845:  setaddr *tmp586 *label432                                    ...
  846:  jump *label428 always 0 0                                    ...
        multilabel *label432                                         ...
  847:  set :layoutThoriumDrillAtLocation:sx -3                      ...
  848:  set :layoutThoriumDrillAtLocation:sy 3                       ...
  849:  setaddr *tmp586 *label433                                    ...
  850:  jump *label428 always 0 0                                    ...
        multilabel *label433                                         ...
  851:  set :layoutThoriumDrillAtLocation:sx -3                      ...
  852:  set :layoutThoriumDrillAtLocation:sy -3                      ...
  853:  setaddr *tmp586 *label434                                    ...
        label *label428                                              ...
  854:  op sub :layoutThoriumDrillAtLocation:newX .drillX :layoutTho var newX = drillX - sx;
  855:  op sub :layoutThoriumDrillAtLocation:newY .drillY :layoutTho var newY = drillY - sy;
  856:  set :createTerrainMask:x :layoutThoriumDrillAtLocation:newX  var newTerrainMask = createTerrainMask(newX, newY);
  857:  set :createTerrainMask:y :layoutThoriumDrillAtLocation:newY  ...
  858:  setaddr :createTerrainMask*retaddr *label435                 ...
  859:  call *label10 *invalid :createTerrainMask*retval             ...
        label *label435                                              ...
  860:  set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMas var shiftedMask = shiftMask(terrainMask, sx, sy);
  861:  op abs *tmp591 :layoutThoriumDrillAtLocation:sx 0            if abs(shiftX) > 6 or abs(shiftY) > 6 then return 0; end;
  862:  op greaterThan *tmp592 *tmp591 6                             ...
  863:  op abs *tmp593 :layoutThoriumDrillAtLocation:sy 0            ...
  864:  op greaterThan *tmp594 *tmp593 6                             ...
  865:  op or *tmp595 *tmp592 *tmp594                                ...
  866:  jump *label437 equal *tmp595 false                           ...
  867:  set *tmp590 0                                                ...
  868:  jump *label436 always 0 0                                    ...
        label *label437                                              ...
  869:  op mul *tmp597 7 :layoutThoriumDrillAtLocation:sy            var shift = shiftX + 7 * shiftY;
  870:  op add :shiftMask:shift :layoutThoriumDrillAtLocation:sx *tm ...
  871:  jump *label439 lessThanEq :shiftMask:shift 0                 if shift > 0 then
  872:  op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift var clearMask = ((1 << 49) - 1) >> shift;
  873:  op and *tmp602 :layoutThoriumDrillAtLocation:terrainMask :sh mask = (mask & clearMask) << shift;
  874:  op shl :shiftMask:mask *tmp602 :shiftMask:shift              ...
  875:  jump *label440 always 0 0                                    if shift > 0 then
        label *label439                                              ...
  876:  op sub *tmp604 0 :shiftMask:shift                            mask >>= -shift;
  877:  op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrain ...
        label *label440                                              if shift > 0 then
  878:  jump *label441 equal :layoutThoriumDrillAtLocation:sx 0      if shiftX != 0 then
  879:  op sub *tmp608 7 *tmp591                                     var keep = 0b1111111 >> (7 - abs(shiftX));          // The bits we need to keep
  880:  op shr :shiftMask:keep 0b1111111 *tmp608                     ...
  881:  jump *label443 lessThanEq :layoutThoriumDrillAtLocation:sx 0 if shiftX > 0 then keep <<= 7 - abs(shiftX); end;   // Shift to the proper side
  882:  op shl :shiftMask:keep :shiftMask:keep *tmp608               ...
        label *label443                                              ...
  883:  op shl *tmp614 :shiftMask:keep 7                             keep |= keep << 7;
  884:  op or :shiftMask:keep :shiftMask:keep *tmp614                ...
  885:  op shl *tmp615 :shiftMask:keep 14                            keep |= keep << 14;
  886:  op or :shiftMask:keep :shiftMask:keep *tmp615                ...
  887:  op shl *tmp616 :shiftMask:keep 21                            keep |= keep << 21;
  888:  op or :shiftMask:keep :shiftMask:keep *tmp616                ...
  889:  op and :shiftMask:mask :shiftMask:mask :shiftMask:keep       mask &= keep;
        label *label441                                              if shiftX != 0 then
  890:  set *tmp590 :shiftMask:mask                                  return mask;
        label *label436                                              var shiftedMask = shiftMask(terrainMask, sx, sy);
  891:  op or :layoutThoriumDrillAtLocation:combinedMask :createTerr var combinedMask = newTerrainMask | shiftedMask;
  892:  op sub *tmp618 .drillX :layoutThoriumDrillAtLocation:sx      if tryPlaceGenerator(drillX - sx, drillY - sy, combinedMask, generatorHorizontal, generatorVertical) then return true; end;
  893:  op sub *tmp619 .drillY :layoutThoriumDrillAtLocation:sy      ...
  894:  set :tryPlaceGenerator:centerX *tmp618                       ...
  895:  set :tryPlaceGenerator:centerY *tmp619                       ...
  896:  set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLoca ...
  897:  set :tryPlaceGenerator:generatorHorizontal :layoutThoriumDri ...
  898:  set :tryPlaceGenerator:generatorVertical :layoutThoriumDrill ...
  899:  setaddr :tryPlaceGenerator*retaddr *label445                 ...
  900:  call *label12 *invalid :tryPlaceGenerator*retval             ...
        label *label445                                              ...
  901:  jump *label446 equal :tryPlaceGenerator*retval false         ...
  902:  set :layoutThoriumDrillAtLocation*retval true                ...
  903:  return :layoutThoriumDrillAtLocation*retaddr                 ...
        label *label446                                              ...
  904:  multijump *tmp586 0 0                                        for var sx in 3, 3, -3, -3; var sy in 3, -3, 3, -3 do
        multilabel *label434                                         ...
  905:  set :layoutThoriumDrillAtLocation*retval true                return true;
  906:  return :layoutThoriumDrillAtLocation*retaddr                 noinline def layoutThoriumDrillAtLocation()
        label *label0                                                remote def findDrillLocation(x, y, unit, item, ore, size, limit, out dx, out dy, out capacity)
  907:  set .searchFinished false                                    searchFinished = false;
  908:  set :findDrillLocationLocal:x :findDrillLocation:x           findDrillLocationLocal(x, y, unit, item, ore, size, limit, out dx, out dy, out capacity);
  909:  set :findDrillLocationLocal:y :findDrillLocation:y           ...
  910:  set :findDrillLocationLocal:unit :findDrillLocation:unit     ...
  911:  set :findDrillLocationLocal:item :findDrillLocation:item     ...
  912:  set :findDrillLocationLocal:ore :findDrillLocation:ore       ...
  913:  set :findDrillLocationLocal:size :findDrillLocation:size     ...
  914:  set :findDrillLocationLocal:limit :findDrillLocation:limit   ...
  915:  setaddr :findDrillLocationLocal*retaddr *label449            ...
  916:  call *label9 *invalid :findDrillLocationLocal*retval         ...
        label *label449                                              ...
  917:  set :findDrillLocation:dx :findDrillLocationLocal:dx         ...
  918:  set :findDrillLocation:dy :findDrillLocationLocal:dy         ...
  919:  set :findDrillLocation:capacity :findDrillLocationLocal:capa ...
  920:  set .searchFinished true                                     searchFinished = true;
  921:  set :findDrillLocation*retval true                           remote def findDrillLocation(x, y, unit, item, ore, size, limit, out dx, out dy, out capacity)
  922:  set :findDrillLocation*finished true                         ...
  923:  jump *label16 always 0 0                                     ...
        label *label1                                                remote def layoutThoriumDrill(x, y, unit, limit)
  924:  set :findDrillLocationLocal:x :layoutThoriumDrill:x          if !findDrillLocationLocal(x, y, unit, @thorium, @ore-thorium, 3, limit, out drillX, out drillY) then
  925:  set :findDrillLocationLocal:y :layoutThoriumDrill:y          ...
  926:  set :findDrillLocationLocal:unit :layoutThoriumDrill:unit    ...
  927:  set :findDrillLocationLocal:item @thorium                    ...
  928:  set :findDrillLocationLocal:ore @ore-thorium                 ...
  929:  set :findDrillLocationLocal:size 3                           ...
  930:  set :findDrillLocationLocal:limit :layoutThoriumDrill:limit  ...
  931:  setaddr :findDrillLocationLocal*retaddr *label451            ...
  932:  call *label9 *invalid :findDrillLocationLocal*retval         ...
        label *label451                                              ...
  933:  set .drillX :findDrillLocationLocal:dx                       ...
  934:  set .drillY :findDrillLocationLocal:dy                       ...
  935:  jump *label452 notEqual :findDrillLocationLocal*retval false ...
  936:  set :layoutThoriumDrill*retval false                         return false;
  937:  jump *label450 always 0 0                                    ...
        label *label452                                              if !findDrillLocationLocal(x, y, unit, @thorium, @ore-thorium, 3, limit, out drillX, out drillY) then
  938:  setaddr :layoutThoriumDrillAtLocation*retaddr *label454      layoutThoriumDrillAtLocation();
  939:  call *label13 *invalid :layoutThoriumDrillAtLocation*retval  ...
        label *label454                                              ...
  940:  set :layoutThoriumDrill*retval :layoutThoriumDrillAtLocation remote def layoutThoriumDrill(x, y, unit, limit)
        label *label450                                              ...
  941:  set :layoutThoriumDrill*finished true                        ...
  942:  jump *label16 always 0 0                                     ...
        label *label2                                                remote void stopLocation()
  943:  set .mapSpots 0                                              mapProgress = mapTotal = mapAction = mapSpots = 0;
  944:  set .mapAction 0                                             ...
  945:  set .mapTotal 0                                              ...
  946:  set .mapProgress 0                                           ...
  947:  ucontrol unbind 0 0 0 0 0                                    unbind();
  948:  set :stopLocation*finished true                              remote void stopLocation()
  949:  jump *label16 always 0 0                                     ...


Performance: parsed in 585 ms, compiled in 427 ms, optimized in 1,856 ms, run in 8 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (6 steps):
The program didn't generate any output.
Execution exception at instruction 43: wait 1e12:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
