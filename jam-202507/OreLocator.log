  1795 instructions before optimizations.
   111 instructions eliminated by Temp Variables Elimination (2 iterations).
   239 instructions eliminated by Dead Code Elimination (7 iterations).
C:\Home\golem\jam-202507\OreLocator.mnd:21:19 Variable 'mapProgress' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:21:32 Variable 'mapTotal' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:21:42 Variable 'mapAction' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:26:5 Variable 'searchFinished' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:28:5 Variable 'water1X' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:28:14 Variable 'water1Y' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:29:5 Variable 'containerX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:29:17 Variable 'containerY' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:30:5 Variable 'water2X' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:30:14 Variable 'water2Y' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:31:5 Variable 'generatorX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:31:17 Variable 'generatorY' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:32:5 Variable 'nodeX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:32:12 Variable 'nodeY' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:33:5 Variable 'panelX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:33:13 Variable 'panelY' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:34:5 Variable 'batteryX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:34:15 Variable 'batteryY' is not used.
     2 instructions eliminated by Jump Normalization (6 iterations).
   122 instructions eliminated by Jump Optimization (6 iterations).
   123 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
     7 instructions modified by Expression Optimization (3 iterations).
   337 instructions eliminated by Data Flow Optimization (4 passes, 15 iterations).
     2 loops improved by Loop Hoisting.
     2 instructions added by Loop Optimization (3 iterations).
    10 loops improved by Loop Optimization.
    78 instructions added by Function Inlining (8 iterations).
     1 function calls inlined by Function Inlining.
     6 instructions eliminated by Jump Straightening (2 passes, 6 iterations).
    20 instructions updated by JumpThreading.
    17 instructions eliminated by Unreachable Code Elimination (3 iterations).
   918 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 126):
    Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000
  * Replicate loop condition at line 41:5                        size    +1, benefit    31250.0, efficiency  31250.000 (+1 instructions)
    Replicate loop condition at line 41:5                        size    +1, benefit     1250.0, efficiency   1250.000
    Replicate loop condition at line 41:5                        size    +1, benefit      650.0, efficiency    650.000
  ! Inline function 'computeRowValues' defined at line 74:1      size  +473, benefit    34375.0, efficiency     72.674
    Inline function 'tryPlaceGenerator' defined at line 533:1    size   +75, benefit      143.0, efficiency      1.907
    Inline function call at line 160:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 161:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 162:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 163:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 164:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 194:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 195:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 674:8                           size   +76, benefit        5.5, efficiency      0.072
    Inline function call at line 698:12                          size   +76, benefit      137.5, efficiency      1.809

Pass 1: speed optimization selection (cost limit 125):
    Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000
  * Replicate loop condition at line 41:5                        size    +1, benefit     1250.0, efficiency   1250.000 (+1 instructions)
    Replicate loop condition at line 41:5                        size    +1, benefit      650.0, efficiency    650.000
  ! Inline function 'computeRowValues' defined at line 74:1      size  +473, benefit    34375.0, efficiency     72.674
    Inline function 'tryPlaceGenerator' defined at line 533:1    size   +75, benefit      143.0, efficiency      1.907
    Inline function call at line 160:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 161:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 162:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 163:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 164:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 194:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 195:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 674:8                           size   +76, benefit        5.5, efficiency      0.072
    Inline function call at line 698:12                          size   +76, benefit      137.5, efficiency      1.809

Pass 1: speed optimization selection (cost limit 124):
    Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000
  * Replicate loop condition at line 41:5                        size    +1, benefit      650.0, efficiency    650.000 (+1 instructions)
  ! Inline function 'computeRowValues' defined at line 74:1      size  +473, benefit    34375.0, efficiency     72.674
    Inline function 'tryPlaceGenerator' defined at line 533:1    size   +75, benefit      143.0, efficiency      1.907
    Inline function call at line 160:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 161:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 162:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 163:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 164:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 194:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 195:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 674:8                           size   +76, benefit        5.5, efficiency      0.072
    Inline function call at line 698:12                          size   +76, benefit      137.5, efficiency      1.809

Pass 1: speed optimization selection (cost limit 123):
    Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000
  ! Inline function 'computeRowValues' defined at line 74:1      size  +473, benefit    34375.0, efficiency     72.674
    Inline function 'tryPlaceGenerator' defined at line 533:1    size   +75, benefit      143.0, efficiency      1.907
  * Inline function call at line 160:14                          size   +79, benefit     6250.0, efficiency     79.114 (+74 instructions)
    Inline function call at line 161:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 162:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 163:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 164:14                          size   +79, benefit     6250.0, efficiency     79.114
    Inline function call at line 194:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 195:18                          size   +79, benefit     1562.5, efficiency     19.778
    Inline function call at line 674:8                           size   +76, benefit        5.5, efficiency      0.072
    Inline function call at line 698:12                          size   +76, benefit      137.5, efficiency      1.809

Pass 1: speed optimization selection (cost limit 49):
  * Replicate loop condition at line 41:5                        size    +1, benefit       50.0, efficiency     50.000 (+1 instructions)
  ! Inline function 'computeRowValues' defined at line 74:1      size  +394, benefit    28125.0, efficiency     71.383
  ! Inline function 'tryPlaceGenerator' defined at line 533:1    size   +75, benefit      143.0, efficiency      1.907
  ! Inline function call at line 161:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 162:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 163:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 164:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 194:18                          size   +79, benefit     1562.5, efficiency     19.778
  ! Inline function call at line 195:18                          size   +79, benefit     1562.5, efficiency     19.778
  ! Inline function call at line 674:8                           size   +76, benefit        5.5, efficiency      0.072
  ! Inline function call at line 698:12                          size   +76, benefit      137.5, efficiency      1.809

Pass 1: speed optimization selection (cost limit 48):
  ! Inline function 'computeRowValues' defined at line 74:1      size  +394, benefit    28125.0, efficiency     71.383
  ! Inline function 'tryPlaceGenerator' defined at line 533:1    size   +75, benefit      143.0, efficiency      1.907
  ! Inline function call at line 161:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 162:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 163:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 164:14                          size   +79, benefit     6250.0, efficiency     79.114
  ! Inline function call at line 194:18                          size   +79, benefit     1562.5, efficiency     19.778
  ! Inline function call at line 195:18                          size   +79, benefit     1562.5, efficiency     19.778
  ! Inline function call at line 674:8                           size   +76, benefit        5.5, efficiency      0.072
  ! Inline function call at line 698:12                          size   +76, benefit      137.5, efficiency      1.809

Pass 2: speed optimization selection (cost limit 59):
  ! Inline function 'computeRowValues' defined at line 74:1      size  +389, benefit    28125.0, efficiency     72.301
  ! Inline function 'tryPlaceGenerator' defined at line 533:1    size   +75, benefit      143.0, efficiency      1.907
  ! Inline function call at line 161:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 162:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 163:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 164:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 194:18                          size   +78, benefit     1562.5, efficiency     20.032
  ! Inline function call at line 195:18                          size   +78, benefit     1562.5, efficiency     20.032
  ! Inline function call at line 674:8                           size   +76, benefit        5.5, efficiency      0.072
  ! Inline function call at line 698:12                          size   +76, benefit      137.5, efficiency      1.809

Pass 3: speed optimization selection (cost limit 59):
  ! Inline function 'computeRowValues' defined at line 74:1      size  +389, benefit    28125.0, efficiency     72.301
  ! Inline function 'tryPlaceGenerator' defined at line 533:1    size   +75, benefit      143.0, efficiency      1.907
  ! Inline function call at line 161:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 162:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 163:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 164:14                          size   +78, benefit     6250.0, efficiency     80.128
  ! Inline function call at line 194:18                          size   +78, benefit     1562.5, efficiency     20.032
  ! Inline function call at line 195:18                          size   +78, benefit     1562.5, efficiency     20.032
  ! Inline function call at line 674:8                           size   +76, benefit        5.5, efficiency      0.072
  ! Inline function call at line 698:12                          size   +76, benefit      137.5, efficiency      1.809

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-146 instructions):
 
   261 jump *label45 equal *tmp91 false
   262 set *tmp63 false
   263 jump *label35 always
-    * set *tmp92 null
   264 jump *label46 always
   265 label *label45
-    * set *tmp92 null
   266 label *label46
   267 op sub *tmp93 :locateOreAway:x .coreX
   268 op abs *tmp94 *tmp93
 
   284 label *label49
   285 set *tmp104 null
   286 label *label50
-    * set *tmp102 *tmp104
   287 jump *label48 always
   288 label *label47
-    * set *tmp102 null
   289 label *label48
   290 op greaterThanEq *tmp105 :locateOreAway:coreDist 7
   291 jump *label51 equal *tmp105 false
 
   316 jump *label59 equal *tmp121 false
   317 set *tmp109 true
   318 jump *label55 always
-    * set *tmp122 null
   319 jump *label60 always
   320 label *label59
-    * set *tmp122 null
   321 label *label60
   322 label *label57
   323 op add :visited:i :visited:i 1
 
   346 label *label53
   347 set *tmp108 null
   348 label *label54
-    * set *tmp106 *tmp108
   349 jump *label52 always
   350 label *label51
-    * set *tmp106 null
   351 label *label52
   352 label *label37
   353 jump *label36 always
 
   363 op greaterThan *tmp129 :findDrillLocationLocal:capacity 0
   364 set :findDrillLocationLocal*retval *tmp129
   365 jump *label26 always
-    * set *tmp128 null
   366 jump *label64 always
   367 label *label63
-    * set *tmp128 null
   368 label *label64
   369 op greaterThanEq *tmp130 :findDrillLocationLocal:limit 1000
   370 jump *label65 equal *tmp130 false
   371 set *tmp132 .mapSpots
   372 op add .mapSpots .mapSpots 1
-    * set *tmp131 *tmp132
   373 jump *label66 always
   374 label *label65
-    * set *tmp131 null
   375 label *label66
   376 set :moveTo.3:x :findDrillLocationLocal:oreX
   377 set :moveTo.3:y :findDrillLocationLocal:oreY
 
   479 label *label87
   480 set *tmp158 null
   481 label *label88
-    * set *tmp156 *tmp158
   482 jump *label86 always
   483 label *label85
-    * set *tmp156 null
   484 label *label86
   485 label *label84
   486 set :updatePosition.1:dx -0.5
 
   498 label *label92
   499 set *tmp162 null
   500 label *label93
-    * set *tmp160 *tmp162
   501 jump *label91 always
   502 label *label90
-    * set *tmp160 null
   503 label *label91
   504 label *label89
   505 set :updatePosition.2:dx 0.5
 
   517 label *label97
   518 set *tmp166 null
   519 label *label98
-    * set *tmp164 *tmp166
   520 jump *label96 always
   521 label *label95
-    * set *tmp164 null
   522 label *label96
   523 label *label94
   524 set :updatePosition.3:dx 1.5
 
   536 label *label102
   537 set *tmp170 null
   538 label *label103
-    * set *tmp168 *tmp170
   539 jump *label101 always
   540 label *label100
-    * set *tmp168 null
   541 label *label101
   542 label *label99
   543 label *label83
 
   559 label *label108
   560 set *tmp174 null
   561 label *label109
-    * set *tmp172 *tmp174
   562 jump *label107 always
   563 label *label106
-    * set *tmp172 null
   564 label *label107
   565 label *label105
   566 set :updatePosition.5:dx -0.5
 
   578 label *label113
   579 set *tmp178 null
   580 label *label114
-    * set *tmp176 *tmp178
   581 jump *label112 always
   582 label *label111
-    * set *tmp176 null
   583 label *label112
   584 label *label110
   585 set :updatePosition.6:dx 0.5
 
   597 label *label118
   598 set *tmp182 null
   599 label *label119
-    * set *tmp180 *tmp182
   600 jump *label117 always
   601 label *label116
-    * set *tmp180 null
   602 label *label117
   603 label *label115
   604 set :updatePosition.7:dx 1.5
 
   616 label *label123
   617 set *tmp186 null
   618 label *label124
-    * set *tmp184 *tmp186
   619 jump *label122 always
   620 label *label121
-    * set *tmp184 null
   621 label *label122
   622 label *label120
   623 label *label104
 
   639 label *label129
   640 set *tmp190 null
   641 label *label130
-    * set *tmp188 *tmp190
   642 jump *label128 always
   643 label *label127
-    * set *tmp188 null
   644 label *label128
   645 label *label126
   646 set :updatePosition.9:dx -0.5
 
   658 label *label134
   659 set *tmp194 null
   660 label *label135
-    * set *tmp192 *tmp194
   661 jump *label133 always
   662 label *label132
-    * set *tmp192 null
   663 label *label133
   664 label *label131
   665 set :updatePosition.10:dx 0.5
 
   677 label *label139
   678 set *tmp198 null
   679 label *label140
-    * set *tmp196 *tmp198
   680 jump *label138 always
   681 label *label137
-    * set *tmp196 null
   682 label *label138
   683 label *label136
   684 set :updatePosition.11:dx 1.5
 
   696 label *label144
   697 set *tmp202 null
   698 label *label145
-    * set *tmp200 *tmp202
   699 jump *label143 always
   700 label *label142
-    * set *tmp200 null
   701 label *label143
   702 label *label141
   703 label *label125
 
   719 label *label150
   720 set *tmp206 null
   721 label *label151
-    * set *tmp204 *tmp206
   722 jump *label149 always
   723 label *label148
-    * set *tmp204 null
   724 label *label149
   725 label *label147
   726 set :updatePosition.13:dx -0.5
 
   738 label *label155
   739 set *tmp210 null
   740 label *label156
-    * set *tmp208 *tmp210
   741 jump *label154 always
   742 label *label153
-    * set *tmp208 null
   743 label *label154
   744 label *label152
   745 set :updatePosition.14:dx 0.5
 
   757 label *label160
   758 set *tmp214 null
   759 label *label161
-    * set *tmp212 *tmp214
   760 jump *label159 always
   761 label *label158
-    * set *tmp212 null
   762 label *label159
   763 label *label157
   764 set :updatePosition.15:dx 1.5
 
   776 label *label165
   777 set *tmp218 null
   778 label *label166
-    * set *tmp216 *tmp218
   779 jump *label164 always
   780 label *label163
-    * set *tmp216 null
   781 label *label164
   782 label *label162
   783 label *label146
-    * set *tmp150 null
   784 jump *label82 always
   785 label *label81
   786 op equal *tmp219 :findBestPosition:size 3
 
   812 label *label173
   813 set *tmp231 null
   814 label *label174
-    * set *tmp229 *tmp231
   815 jump *label172 always
   816 label *label171
-    * set *tmp229 null
   817 label *label172
   818 label *label170
   819 set :updatePosition.17:dx 0
 
   831 label *label178
   832 set *tmp235 null
   833 label *label179
-    * set *tmp233 *tmp235
   834 jump *label177 always
   835 label *label176
-    * set *tmp233 null
   836 label *label177
   837 label *label175
   838 set :updatePosition.18:dx 1
 
   850 label *label183
   851 set *tmp239 null
   852 label *label184
-    * set *tmp237 *tmp239
   853 jump *label182 always
   854 label *label181
-    * set *tmp237 null
   855 label *label182
   856 label *label180
   857 label *label169
 
   873 label *label189
   874 set *tmp244 null
   875 label *label190
-    * set *tmp242 *tmp244
   876 jump *label188 always
   877 label *label187
-    * set *tmp242 null
   878 label *label188
   879 label *label186
   880 set :updatePosition.20:dx 0
 
   892 label *label194
   893 set *tmp248 null
   894 label *label195
-    * set *tmp246 *tmp248
   895 jump *label193 always
   896 label *label192
-    * set *tmp246 null
   897 label *label193
   898 label *label191
   899 set :updatePosition.21:dx 1
 
   911 label *label199
   912 set *tmp252 null
   913 label *label200
-    * set *tmp250 *tmp252
   914 jump *label198 always
   915 label *label197
-    * set *tmp250 null
   916 label *label198
   917 label *label196
   918 label *label185
 
   934 label *label205
   935 set *tmp257 null
   936 label *label206
-    * set *tmp255 *tmp257
   937 jump *label204 always
   938 label *label203
-    * set *tmp255 null
   939 label *label204
   940 label *label202
   941 set :updatePosition.23:dx 0
 
   953 label *label210
   954 set *tmp261 null
   955 label *label211
-    * set *tmp259 *tmp261
   956 jump *label209 always
   957 label *label208
-    * set *tmp259 null
   958 label *label209
   959 label *label207
   960 set :updatePosition.24:dx 1
 
   972 label *label215
   973 set *tmp265 null
   974 label *label216
-    * set *tmp263 *tmp265
   975 jump *label214 always
   976 label *label213
-    * set *tmp263 null
   977 label *label214
   978 label *label212
   979 label *label201
 
  1034 label *label223
  1035 set *tmp285 null
  1036 label *label224
-    * set *tmp283 *tmp285
  1037 jump *label222 always
  1038 label *label221
-    * set *tmp283 null
  1039 label *label222
  1040 label *label220
  1041 set :updatePosition.26:dx -0.5
 
  1053 label *label228
  1054 set *tmp289 null
  1055 label *label229
-    * set *tmp287 *tmp289
  1056 jump *label227 always
  1057 label *label226
-    * set *tmp287 null
  1058 label *label227
  1059 label *label225
  1060 set :updatePosition.27:dx 0.5
 
  1072 label *label233
  1073 set *tmp293 null
  1074 label *label234
-    * set *tmp291 *tmp293
  1075 jump *label232 always
  1076 label *label231
-    * set *tmp291 null
  1077 label *label232
  1078 label *label230
  1079 set :updatePosition.28:dx 1.5
 
  1091 label *label238
  1092 set *tmp297 null
  1093 label *label239
-    * set *tmp295 *tmp297
  1094 jump *label237 always
  1095 label *label236
-    * set *tmp295 null
  1096 label *label237
  1097 label *label235
  1098 label *label219
 
  1114 label *label244
  1115 set *tmp301 null
  1116 label *label245
-    * set *tmp299 *tmp301
  1117 jump *label243 always
  1118 label *label242
-    * set *tmp299 null
  1119 label *label243
  1120 label *label241
  1121 set :updatePosition.30:dx -0.5
 
  1133 label *label249
  1134 set *tmp305 null
  1135 label *label250
-    * set *tmp303 *tmp305
  1136 jump *label248 always
  1137 label *label247
-    * set *tmp303 null
  1138 label *label248
  1139 label *label246
  1140 set :updatePosition.31:dx 0.5
 
  1152 label *label254
  1153 set *tmp309 null
  1154 label *label255
-    * set *tmp307 *tmp309
  1155 jump *label253 always
  1156 label *label252
-    * set *tmp307 null
  1157 label *label253
  1158 label *label251
  1159 set :updatePosition.32:dx 1.5
 
  1171 label *label259
  1172 set *tmp313 null
  1173 label *label260
-    * set *tmp311 *tmp313
  1174 jump *label258 always
  1175 label *label257
-    * set *tmp311 null
  1176 label *label258
  1177 label *label256
  1178 label *label240
 
  1194 label *label265
  1195 set *tmp317 null
  1196 label *label266
-    * set *tmp315 *tmp317
  1197 jump *label264 always
  1198 label *label263
-    * set *tmp315 null
  1199 label *label264
  1200 label *label262
  1201 set :updatePosition.34:dx -0.5
 
  1213 label *label270
  1214 set *tmp321 null
  1215 label *label271
-    * set *tmp319 *tmp321
  1216 jump *label269 always
  1217 label *label268
-    * set *tmp319 null
  1218 label *label269
  1219 label *label267
  1220 set :updatePosition.35:dx 0.5
 
  1232 label *label275
  1233 set *tmp325 null
  1234 label *label276
-    * set *tmp323 *tmp325
  1235 jump *label274 always
  1236 label *label273
-    * set *tmp323 null
  1237 label *label274
  1238 label *label272
  1239 set :updatePosition.36:dx 1.5
 
  1251 label *label280
  1252 set *tmp329 null
  1253 label *label281
-    * set *tmp327 *tmp329
  1254 jump *label279 always
  1255 label *label278
-    * set *tmp327 null
  1256 label *label279
  1257 label *label277
  1258 label *label261
 
  1274 label *label286
  1275 set *tmp333 null
  1276 label *label287
-    * set *tmp331 *tmp333
  1277 jump *label285 always
  1278 label *label284
-    * set *tmp331 null
  1279 label *label285
  1280 label *label283
  1281 set :updatePosition.38:dx -0.5
 
  1293 label *label291
  1294 set *tmp337 null
  1295 label *label292
-    * set *tmp335 *tmp337
  1296 jump *label290 always
  1297 label *label289
-    * set *tmp335 null
  1298 label *label290
  1299 label *label288
  1300 set :updatePosition.39:dx 0.5
 
  1312 label *label296
  1313 set *tmp341 null
  1314 label *label297
-    * set *tmp339 *tmp341
  1315 jump *label295 always
  1316 label *label294
-    * set *tmp339 null
  1317 label *label295
  1318 label *label293
  1319 set :updatePosition.40:dx 1.5
 
  1331 label *label301
  1332 set *tmp345 null
  1333 label *label302
-    * set *tmp343 *tmp345
  1334 jump *label300 always
  1335 label *label299
-    * set *tmp343 null
  1336 label *label300
  1337 label *label298
  1338 label *label282
  1339 set *tmp220 null
  1340 label *label168
-    * set *tmp150 *tmp220
  1341 label *label82
  1342 op mul *tmp346 :findBestPosition:best 255
  1343 set *tmp138 *tmp346
 
  1355 op lessThan *tmp351 :findDrillLocationLocal:limit 1000
  1356 jump *label305 equal *tmp351 false
  1357 set .mapSpots :findDrillLocationLocal:score
-    * set *tmp352 :findDrillLocationLocal:score
  1358 jump *label306 always
  1359 label *label305
-    * set *tmp352 null
  1360 label *label306
  1361 op greaterThanEq *tmp353 :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
  1362 jump *label307 equal *tmp353 false
 
  1377 op add .count .count 1
  1378 set *tmp362 .count
  1379 write :saveLocation:y bank1 *tmp362
-    * set *tmp364 .locations
  1380 op add .locations .locations 1
  1381 label *label309
  1382 ucontrol unbind
 
  1387 label *label307
  1388 set *tmp354 null
  1389 label *label308
-    * set *tmp348 *tmp354
  1390 jump *label304 always
  1391 label *label303
-    * set *tmp348 null
  1392 label *label304
  1393 op greaterThan *tmp365 :findDrillLocationLocal:score :findDrillLocationLocal:best
  1394 jump *label310 equal *tmp365 false
 
  1397 op add *tmp368 :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1398 set :findDrillLocationLocal:bestY *tmp368
  1399 set :findDrillLocationLocal:best :findDrillLocationLocal:score
-    * set *tmp366 :findDrillLocationLocal:best
  1400 jump *label311 always
  1401 label *label310
-    * set *tmp366 null
  1402 label *label311
  1403 op lessThanEq *tmp369 :findDrillLocationLocal:score :findDrillLocationLocal:last
  1404 jump *label312 equal *tmp369 false
  1405 jump *label74 always
-    * set *tmp370 null
  1406 jump *label313 always
  1407 label *label312
-    * set *tmp370 null
  1408 label *label313
  1409 set :findDrillLocationLocal:last :findDrillLocationLocal:score
  1410 op mul *tmp371 :findDrillLocationLocal:diffX 1.1
 
  1429 op lessThan *tmp384 *tmp383 7
  1430 jump *label316 equal *tmp384 false
  1431 jump *label74 always
-    * set *tmp385 null
  1432 jump *label317 always
  1433 label *label316
-    * set *tmp385 null
  1434 label *label317
  1435 label *label73
  1436 jump *label72 always
 
  1454 op add .count .count 1
  1455 set *tmp395 .count
  1456 write :saveLocation.1:y bank1 *tmp395
-    * set *tmp397 .locations
  1457 op add .locations .locations 1
  1458 label *label320
-    * set *tmp387 null
  1459 jump *label319 always
  1460 label *label318
-    * set *tmp387 null
  1461 label *label319
  1462 label *label33
  1463 jump *label32 always
 
  1537 op add *tmp416 *tmp415 :findPossiblePlacement:x
  1538 set :findPossiblePlacement*retval *tmp416
  1539 jump *label334 always
-    * set *tmp413 null
  1540 jump *label342 always
  1541 label *label341
-    * set *tmp413 null
  1542 label *label342
  1543 op sub *tmp417 3 :findPossiblePlacement:width
  1544 op greaterThan *tmp418 :findPossiblePlacement:x *tmp417
  1545 jump *label343 equal *tmp418 false
  1546 jump *label340 always
-    * set *tmp419 null
  1547 jump *label344 always
  1548 label *label343
-    * set *tmp419 null
  1549 label *label344
  1550 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
  1551 label *label339
 
  1556 op greaterThan *tmp421 :findPossiblePlacement:y *tmp420
  1557 jump *label345 equal *tmp421 false
  1558 jump *label337 always
-    * set *tmp422 null
  1559 jump *label346 always
  1560 label *label345
-    * set *tmp422 null
  1561 label *label346
  1562 label *label336
  1563 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
 
  1587 jump *label351 equal *tmp426 false
  1588 set :tryPlaceGenerator*retval false
  1589 jump *label347 always
-    * set *tmp427 null
  1590 jump *label352 always
  1591 label *label351
-    * set *tmp427 null
  1592 label *label352
  1593 op add *tmp428 :tryPlaceGenerator:centerX 0.5
  1594 op add *tmp429 *tmp428 :tryPlaceGenerator:c
 
  1604 set .generatorY *tmp435
  1605 op shl *tmp436 :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:shift
  1606 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp436
-    * set *tmp425 :tryPlaceGenerator:terrainMask
  1607 jump *label350 always
  1608 label *label349
  1609 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1621 jump *label354 equal *tmp438 false
  1622 set :tryPlaceGenerator*retval false
  1623 jump *label347 always
-    * set *tmp439 null
  1624 jump *label355 always
  1625 label *label354
-    * set *tmp439 null
  1626 label *label355
  1627 op add *tmp440 :tryPlaceGenerator:centerX 0.5
  1628 op add *tmp441 *tmp440 :tryPlaceGenerator:c
 
  1638 set .generatorY *tmp447
  1639 op shl *tmp448 :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:shift
  1640 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp448
-    * set *tmp425 :tryPlaceGenerator:terrainMask
  1641 label *label350
  1642 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
  1643 set :findPossiblePlacement:placementMask 1
 
  1654 jump *label357 equal *tmp450 false
  1655 set :tryPlaceGenerator*retval false
  1656 jump *label347 always
-    * set *tmp451 null
  1657 jump *label358 always
  1658 label *label357
-    * set *tmp451 null
  1659 label *label358
  1660 op add *tmp452 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
  1661 set .nodeX *tmp452
 
  1678 jump *label360 equal *tmp456 false
  1679 set :tryPlaceGenerator*retval false
  1680 jump *label347 always
-    * set *tmp457 null
  1681 jump *label361 always
  1682 label *label360
-    * set *tmp457 null
  1683 label *label361
  1684 op add *tmp458 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
  1685 set .panelX *tmp458
 
  1702 jump *label363 equal *tmp462 false
  1703 set :tryPlaceGenerator*retval false
  1704 jump *label347 always
-    * set *tmp463 null
  1705 jump *label364 always
  1706 label *label363
-    * set *tmp463 null
  1707 label *label364
  1708 op add *tmp464 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
  1709 set .batteryX *tmp464
 
  1812 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp509
  1813 op shl *tmp510 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
  1814 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:cornersMask *tmp510
-    * set *tmp504 :layoutThoriumDrillAtLocation:cornersMask
  1815 jump *label372 always
  1816 label *label371
-    * set *tmp504 null
  1817 label *label372
  1818 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
  1819 set :findPossiblePlacement:placementMask :layoutThoriumDrillAtLocation:mask2x2
 
  1836 set .containerY *tmp517
  1837 op shl *tmp518 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
  1838 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp518
-    * set *tmp513 :layoutThoriumDrillAtLocation:terrainMask
  1839 jump *label375 always
  1840 label *label374
-    * set *tmp513 null
  1841 label *label375
  1842 set :createFixedMatrix.3:row0 0b1111
  1843 set :createFixedMatrix.3:row1 0b1111
 
  1873 jump *label379 equal *tmp531 false
  1874 set :layoutThoriumDrillAtLocation*retval true
  1875 jump *label365 always
-    * set *tmp532 null
  1876 jump *label380 always
  1877 label *label379
-    * set *tmp532 null
  1878 label *label380
  1879 set :layoutThoriumDrillAtLocation:sx 3
  1880 set :layoutThoriumDrillAtLocation:sy 3
 
  1917 jump *label390 equal *tmp542 false
  1918 set *tmp537 0
  1919 jump *label389 always
-    * set *tmp543 null
  1920 jump *label391 always
  1921 label *label390
-    * set *tmp543 null
  1922 label *label391
  1923 op mul *tmp544 7 :shiftMask:shiftY
  1924 op add *tmp545 :shiftMask:shiftX *tmp544
 
  1930 op and *tmp549 :shiftMask:mask :shiftMask:clearMask
  1931 op shl *tmp550 *tmp549 :shiftMask:shift
  1932 set :shiftMask:mask *tmp550
-    * set *tmp547 :shiftMask:mask
  1933 jump *label393 always
  1934 label *label392
  1935 op sub *tmp551 0 :shiftMask:shift
  1936 op shr :shiftMask:mask :shiftMask:mask *tmp551
-    * set *tmp547 :shiftMask:mask
  1937 label *label393
  1938 op notEqual *tmp552 :shiftMask:shiftX 0
  1939 jump *label394 equal *tmp552 false
 
  1946 op abs *tmp559 :shiftMask:shiftX
  1947 op sub *tmp560 7 *tmp559
  1948 op shl :shiftMask:keep :shiftMask:keep *tmp560
-    * set *tmp558 :shiftMask:keep
  1949 jump *label397 always
  1950 label *label396
-    * set *tmp558 null
  1951 label *label397
  1952 op shl *tmp561 :shiftMask:keep 7
  1953 op or :shiftMask:keep :shiftMask:keep *tmp561
 
  1956 op shl *tmp563 :shiftMask:keep 21
  1957 op or :shiftMask:keep :shiftMask:keep *tmp563
  1958 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
-    * set *tmp553 :shiftMask:mask
  1959 jump *label395 always
  1960 label *label394
-    * set *tmp553 null
  1961 label *label395
  1962 set *tmp537 :shiftMask:mask
  1963 jump *label389 always
 
  1980 jump *label399 equal *tmp567 false
  1981 set :layoutThoriumDrillAtLocation*retval true
  1982 jump *label365 always
-    * set *tmp568 null
  1983 jump *label400 always
  1984 label *label399
-    * set *tmp568 null
  1985 label *label400
  1986 label *label382
  1987 multijump *tmp533 0 0 (m:marker0)
 
  2031 jump *label405 equal *tmp569 false
  2032 set :layoutThoriumDrill*retval false
  2033 jump *label403 always
-    * set *tmp570 null
  2034 jump *label406 always
  2035 label *label405
-    * set *tmp570 null
  2036 label *label406
  2037 setaddr :layoutThoriumDrillAtLocation*retaddr *label407 (h:*label407)
  2038 call *label11 *invalid :layoutThoriumDrillAtLocation*retval (m:*label407) (h:*label407)

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-91 instructions):
 
   279 op equal *tmp103 :locateOreAway:lastY :locateOreAway:y
   280 jump *label49 equal *tmp103 false
   281 jump *label37 always
-    * set *tmp104 null
   282 jump *label50 always
   283 label *label49
-    * set *tmp104 null
   284 label *label50
   285 jump *label48 always
   286 label *label47
 
   339 label *label61
   340 set *tmp124 null
   341 label *label62
-    * set *tmp108 *tmp124
   342 jump *label54 always
   343 label *label53
-    * set *tmp108 null
   344 label *label54
   345 jump *label52 always
   346 label *label51
 
   364 label *label64
   365 op greaterThanEq *tmp130 :findDrillLocationLocal:limit 1000
   366 jump *label65 equal *tmp130 false
-    * set *tmp132 .mapSpots
   367 op add .mapSpots .mapSpots 1
   368 jump *label66 always
   369 label *label65
 
   469 set :findDrillLocationLocal:diffX :updatePosition:dx
   470 set :findDrillLocationLocal:diffY :updatePosition:dy
   471 set :findBestPosition:best :updatePosition:value
-    * set *tmp158 :findBestPosition:best
   472 jump *label88 always
   473 label *label87
-    * set *tmp158 null
   474 label *label88
   475 jump *label86 always
   476 label *label85
 
   486 set :findDrillLocationLocal:diffX :updatePosition.1:dx
   487 set :findDrillLocationLocal:diffY :updatePosition.1:dy
   488 set :findBestPosition:best :updatePosition.1:value
-    * set *tmp162 :findBestPosition:best
   489 jump *label93 always
   490 label *label92
-    * set *tmp162 null
   491 label *label93
   492 jump *label91 always
   493 label *label90
 
   503 set :findDrillLocationLocal:diffX :updatePosition.2:dx
   504 set :findDrillLocationLocal:diffY :updatePosition.2:dy
   505 set :findBestPosition:best :updatePosition.2:value
-    * set *tmp166 :findBestPosition:best
   506 jump *label98 always
   507 label *label97
-    * set *tmp166 null
   508 label *label98
   509 jump *label96 always
   510 label *label95
 
   520 set :findDrillLocationLocal:diffX :updatePosition.3:dx
   521 set :findDrillLocationLocal:diffY :updatePosition.3:dy
   522 set :findBestPosition:best :updatePosition.3:value
-    * set *tmp170 :findBestPosition:best
   523 jump *label103 always
   524 label *label102
-    * set *tmp170 null
   525 label *label103
   526 jump *label101 always
   527 label *label100
 
   541 set :findDrillLocationLocal:diffX :updatePosition.4:dx
   542 set :findDrillLocationLocal:diffY :updatePosition.4:dy
   543 set :findBestPosition:best :updatePosition.4:value
-    * set *tmp174 :findBestPosition:best
   544 jump *label109 always
   545 label *label108
-    * set *tmp174 null
   546 label *label109
   547 jump *label107 always
   548 label *label106
 
   558 set :findDrillLocationLocal:diffX :updatePosition.5:dx
   559 set :findDrillLocationLocal:diffY :updatePosition.5:dy
   560 set :findBestPosition:best :updatePosition.5:value
-    * set *tmp178 :findBestPosition:best
   561 jump *label114 always
   562 label *label113
-    * set *tmp178 null
   563 label *label114
   564 jump *label112 always
   565 label *label111
 
   575 set :findDrillLocationLocal:diffX :updatePosition.6:dx
   576 set :findDrillLocationLocal:diffY :updatePosition.6:dy
   577 set :findBestPosition:best :updatePosition.6:value
-    * set *tmp182 :findBestPosition:best
   578 jump *label119 always
   579 label *label118
-    * set *tmp182 null
   580 label *label119
   581 jump *label117 always
   582 label *label116
 
   592 set :findDrillLocationLocal:diffX :updatePosition.7:dx
   593 set :findDrillLocationLocal:diffY :updatePosition.7:dy
   594 set :findBestPosition:best :updatePosition.7:value
-    * set *tmp186 :findBestPosition:best
   595 jump *label124 always
   596 label *label123
-    * set *tmp186 null
   597 label *label124
   598 jump *label122 always
   599 label *label121
 
   613 set :findDrillLocationLocal:diffX :updatePosition.8:dx
   614 set :findDrillLocationLocal:diffY :updatePosition.8:dy
   615 set :findBestPosition:best :updatePosition.8:value
-    * set *tmp190 :findBestPosition:best
   616 jump *label130 always
   617 label *label129
-    * set *tmp190 null
   618 label *label130
   619 jump *label128 always
   620 label *label127
 
   630 set :findDrillLocationLocal:diffX :updatePosition.9:dx
   631 set :findDrillLocationLocal:diffY :updatePosition.9:dy
   632 set :findBestPosition:best :updatePosition.9:value
-    * set *tmp194 :findBestPosition:best
   633 jump *label135 always
   634 label *label134
-    * set *tmp194 null
   635 label *label135
   636 jump *label133 always
   637 label *label132
 
   647 set :findDrillLocationLocal:diffX :updatePosition.10:dx
   648 set :findDrillLocationLocal:diffY :updatePosition.10:dy
   649 set :findBestPosition:best :updatePosition.10:value
-    * set *tmp198 :findBestPosition:best
   650 jump *label140 always
   651 label *label139
-    * set *tmp198 null
   652 label *label140
   653 jump *label138 always
   654 label *label137
 
   664 set :findDrillLocationLocal:diffX :updatePosition.11:dx
   665 set :findDrillLocationLocal:diffY :updatePosition.11:dy
   666 set :findBestPosition:best :updatePosition.11:value
-    * set *tmp202 :findBestPosition:best
   667 jump *label145 always
   668 label *label144
-    * set *tmp202 null
   669 label *label145
   670 jump *label143 always
   671 label *label142
 
   685 set :findDrillLocationLocal:diffX :updatePosition.12:dx
   686 set :findDrillLocationLocal:diffY :updatePosition.12:dy
   687 set :findBestPosition:best :updatePosition.12:value
-    * set *tmp206 :findBestPosition:best
   688 jump *label151 always
   689 label *label150
-    * set *tmp206 null
   690 label *label151
   691 jump *label149 always
   692 label *label148
 
   702 set :findDrillLocationLocal:diffX :updatePosition.13:dx
   703 set :findDrillLocationLocal:diffY :updatePosition.13:dy
   704 set :findBestPosition:best :updatePosition.13:value
-    * set *tmp210 :findBestPosition:best
   705 jump *label156 always
   706 label *label155
-    * set *tmp210 null
   707 label *label156
   708 jump *label154 always
   709 label *label153
 
   719 set :findDrillLocationLocal:diffX :updatePosition.14:dx
   720 set :findDrillLocationLocal:diffY :updatePosition.14:dy
   721 set :findBestPosition:best :updatePosition.14:value
-    * set *tmp214 :findBestPosition:best
   722 jump *label161 always
   723 label *label160
-    * set *tmp214 null
   724 label *label161
   725 jump *label159 always
   726 label *label158
 
   736 set :findDrillLocationLocal:diffX :updatePosition.15:dx
   737 set :findDrillLocationLocal:diffY :updatePosition.15:dy
   738 set :findBestPosition:best :updatePosition.15:value
-    * set *tmp218 :findBestPosition:best
   739 jump *label166 always
   740 label *label165
-    * set *tmp218 null
   741 label *label166
   742 jump *label164 always
   743 label *label163
 
   770 set :findDrillLocationLocal:diffX :updatePosition.16:dx
   771 set :findDrillLocationLocal:diffY :updatePosition.16:dy
   772 set :findBestPosition:best :updatePosition.16:value
-    * set *tmp231 :findBestPosition:best
   773 jump *label174 always
   774 label *label173
-    * set *tmp231 null
   775 label *label174
   776 jump *label172 always
   777 label *label171
 
   787 set :findDrillLocationLocal:diffX :updatePosition.17:dx
   788 set :findDrillLocationLocal:diffY :updatePosition.17:dy
   789 set :findBestPosition:best :updatePosition.17:value
-    * set *tmp235 :findBestPosition:best
   790 jump *label179 always
   791 label *label178
-    * set *tmp235 null
   792 label *label179
   793 jump *label177 always
   794 label *label176
 
   804 set :findDrillLocationLocal:diffX :updatePosition.18:dx
   805 set :findDrillLocationLocal:diffY :updatePosition.18:dy
   806 set :findBestPosition:best :updatePosition.18:value
-    * set *tmp239 :findBestPosition:best
   807 jump *label184 always
   808 label *label183
-    * set *tmp239 null
   809 label *label184
   810 jump *label182 always
   811 label *label181
 
   825 set :findDrillLocationLocal:diffX :updatePosition.19:dx
   826 set :findDrillLocationLocal:diffY :updatePosition.19:dy
   827 set :findBestPosition:best :updatePosition.19:value
-    * set *tmp244 :findBestPosition:best
   828 jump *label190 always
   829 label *label189
-    * set *tmp244 null
   830 label *label190
   831 jump *label188 always
   832 label *label187
 
   842 set :findDrillLocationLocal:diffX :updatePosition.20:dx
   843 set :findDrillLocationLocal:diffY :updatePosition.20:dy
   844 set :findBestPosition:best :updatePosition.20:value
-    * set *tmp248 :findBestPosition:best
   845 jump *label195 always
   846 label *label194
-    * set *tmp248 null
   847 label *label195
   848 jump *label193 always
   849 label *label192
 
   859 set :findDrillLocationLocal:diffX :updatePosition.21:dx
   860 set :findDrillLocationLocal:diffY :updatePosition.21:dy
   861 set :findBestPosition:best :updatePosition.21:value
-    * set *tmp252 :findBestPosition:best
   862 jump *label200 always
   863 label *label199
-    * set *tmp252 null
   864 label *label200
   865 jump *label198 always
   866 label *label197
 
   880 set :findDrillLocationLocal:diffX :updatePosition.22:dx
   881 set :findDrillLocationLocal:diffY :updatePosition.22:dy
   882 set :findBestPosition:best :updatePosition.22:value
-    * set *tmp257 :findBestPosition:best
   883 jump *label206 always
   884 label *label205
-    * set *tmp257 null
   885 label *label206
   886 jump *label204 always
   887 label *label203
 
   897 set :findDrillLocationLocal:diffX :updatePosition.23:dx
   898 set :findDrillLocationLocal:diffY :updatePosition.23:dy
   899 set :findBestPosition:best :updatePosition.23:value
-    * set *tmp261 :findBestPosition:best
   900 jump *label211 always
   901 label *label210
-    * set *tmp261 null
   902 label *label211
   903 jump *label209 always
   904 label *label208
 
   914 set :findDrillLocationLocal:diffX :updatePosition.24:dx
   915 set :findDrillLocationLocal:diffY :updatePosition.24:dy
   916 set :findBestPosition:best :updatePosition.24:value
-    * set *tmp265 :findBestPosition:best
   917 jump *label216 always
   918 label *label215
-    * set *tmp265 null
   919 label *label216
   920 jump *label214 always
   921 label *label213
   922 label *label214
   923 label *label212
   924 label *label201
-    * set *tmp220 null
   925 jump *label168 always
   926 label *label167
   927 op sub *tmp266 :findBestPosition:y 3
 
   973 set :findDrillLocationLocal:diffX :updatePosition.25:dx
   974 set :findDrillLocationLocal:diffY :updatePosition.25:dy
   975 set :findBestPosition:best :updatePosition.25:value
-    * set *tmp285 :findBestPosition:best
   976 jump *label224 always
   977 label *label223
-    * set *tmp285 null
   978 label *label224
   979 jump *label222 always
   980 label *label221
 
   990 set :findDrillLocationLocal:diffX :updatePosition.26:dx
   991 set :findDrillLocationLocal:diffY :updatePosition.26:dy
   992 set :findBestPosition:best :updatePosition.26:value
-    * set *tmp289 :findBestPosition:best
   993 jump *label229 always
   994 label *label228
-    * set *tmp289 null
   995 label *label229
   996 jump *label227 always
   997 label *label226
 
  1007 set :findDrillLocationLocal:diffX :updatePosition.27:dx
  1008 set :findDrillLocationLocal:diffY :updatePosition.27:dy
  1009 set :findBestPosition:best :updatePosition.27:value
-    * set *tmp293 :findBestPosition:best
  1010 jump *label234 always
  1011 label *label233
-    * set *tmp293 null
  1012 label *label234
  1013 jump *label232 always
  1014 label *label231
 
  1024 set :findDrillLocationLocal:diffX :updatePosition.28:dx
  1025 set :findDrillLocationLocal:diffY :updatePosition.28:dy
  1026 set :findBestPosition:best :updatePosition.28:value
-    * set *tmp297 :findBestPosition:best
  1027 jump *label239 always
  1028 label *label238
-    * set *tmp297 null
  1029 label *label239
  1030 jump *label237 always
  1031 label *label236
 
  1045 set :findDrillLocationLocal:diffX :updatePosition.29:dx
  1046 set :findDrillLocationLocal:diffY :updatePosition.29:dy
  1047 set :findBestPosition:best :updatePosition.29:value
-    * set *tmp301 :findBestPosition:best
  1048 jump *label245 always
  1049 label *label244
-    * set *tmp301 null
  1050 label *label245
  1051 jump *label243 always
  1052 label *label242
 
  1062 set :findDrillLocationLocal:diffX :updatePosition.30:dx
  1063 set :findDrillLocationLocal:diffY :updatePosition.30:dy
  1064 set :findBestPosition:best :updatePosition.30:value
-    * set *tmp305 :findBestPosition:best
  1065 jump *label250 always
  1066 label *label249
-    * set *tmp305 null
  1067 label *label250
  1068 jump *label248 always
  1069 label *label247
 
  1079 set :findDrillLocationLocal:diffX :updatePosition.31:dx
  1080 set :findDrillLocationLocal:diffY :updatePosition.31:dy
  1081 set :findBestPosition:best :updatePosition.31:value
-    * set *tmp309 :findBestPosition:best
  1082 jump *label255 always
  1083 label *label254
-    * set *tmp309 null
  1084 label *label255
  1085 jump *label253 always
  1086 label *label252
 
  1096 set :findDrillLocationLocal:diffX :updatePosition.32:dx
  1097 set :findDrillLocationLocal:diffY :updatePosition.32:dy
  1098 set :findBestPosition:best :updatePosition.32:value
-    * set *tmp313 :findBestPosition:best
  1099 jump *label260 always
  1100 label *label259
-    * set *tmp313 null
  1101 label *label260
  1102 jump *label258 always
  1103 label *label257
 
  1117 set :findDrillLocationLocal:diffX :updatePosition.33:dx
  1118 set :findDrillLocationLocal:diffY :updatePosition.33:dy
  1119 set :findBestPosition:best :updatePosition.33:value
-    * set *tmp317 :findBestPosition:best
  1120 jump *label266 always
  1121 label *label265
-    * set *tmp317 null
  1122 label *label266
  1123 jump *label264 always
  1124 label *label263
 
  1134 set :findDrillLocationLocal:diffX :updatePosition.34:dx
  1135 set :findDrillLocationLocal:diffY :updatePosition.34:dy
  1136 set :findBestPosition:best :updatePosition.34:value
-    * set *tmp321 :findBestPosition:best
  1137 jump *label271 always
  1138 label *label270
-    * set *tmp321 null
  1139 label *label271
  1140 jump *label269 always
  1141 label *label268
 
  1151 set :findDrillLocationLocal:diffX :updatePosition.35:dx
  1152 set :findDrillLocationLocal:diffY :updatePosition.35:dy
  1153 set :findBestPosition:best :updatePosition.35:value
-    * set *tmp325 :findBestPosition:best
  1154 jump *label276 always
  1155 label *label275
-    * set *tmp325 null
  1156 label *label276
  1157 jump *label274 always
  1158 label *label273
 
  1168 set :findDrillLocationLocal:diffX :updatePosition.36:dx
  1169 set :findDrillLocationLocal:diffY :updatePosition.36:dy
  1170 set :findBestPosition:best :updatePosition.36:value
-    * set *tmp329 :findBestPosition:best
  1171 jump *label281 always
  1172 label *label280
-    * set *tmp329 null
  1173 label *label281
  1174 jump *label279 always
  1175 label *label278
 
  1189 set :findDrillLocationLocal:diffX :updatePosition.37:dx
  1190 set :findDrillLocationLocal:diffY :updatePosition.37:dy
  1191 set :findBestPosition:best :updatePosition.37:value
-    * set *tmp333 :findBestPosition:best
  1192 jump *label287 always
  1193 label *label286
-    * set *tmp333 null
  1194 label *label287
  1195 jump *label285 always
  1196 label *label284
 
  1206 set :findDrillLocationLocal:diffX :updatePosition.38:dx
  1207 set :findDrillLocationLocal:diffY :updatePosition.38:dy
  1208 set :findBestPosition:best :updatePosition.38:value
-    * set *tmp337 :findBestPosition:best
  1209 jump *label292 always
  1210 label *label291
-    * set *tmp337 null
  1211 label *label292
  1212 jump *label290 always
  1213 label *label289
 
  1223 set :findDrillLocationLocal:diffX :updatePosition.39:dx
  1224 set :findDrillLocationLocal:diffY :updatePosition.39:dy
  1225 set :findBestPosition:best :updatePosition.39:value
-    * set *tmp341 :findBestPosition:best
  1226 jump *label297 always
  1227 label *label296
-    * set *tmp341 null
  1228 label *label297
  1229 jump *label295 always
  1230 label *label294
 
  1240 set :findDrillLocationLocal:diffX :updatePosition.40:dx
  1241 set :findDrillLocationLocal:diffY :updatePosition.40:dy
  1242 set :findBestPosition:best :updatePosition.40:value
-    * set *tmp345 :findBestPosition:best
  1243 jump *label302 always
  1244 label *label301
-    * set *tmp345 null
  1245 label *label302
  1246 jump *label300 always
  1247 label *label299
  1248 label *label300
  1249 label *label298
  1250 label *label282
-    * set *tmp220 null
  1251 label *label168
  1252 label *label82
  1253 op mul *tmp346 :findBestPosition:best 255
 
  1293 ucontrol unbind
  1294 set :findDrillLocationLocal*retval true
  1295 jump *label26 always
-    * set *tmp354 null
  1296 jump *label308 always
  1297 label *label307
-    * set *tmp354 null
  1298 label *label308
  1299 jump *label304 always
  1300 label *label303

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
   334 printflush message1
   335 set *tmp63 true
   336 jump *label35 always
-    * set *tmp124 null
   337 jump *label62 always
   338 label *label61
-    * set *tmp124 null
   339 label *label62
   340 jump *label54 always
   341 label *label53

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-111 instructions):
 
    11 jump *label13 always
    12 end
    13 label *label6
-    * op sub *tmp0 :computeRowValues:x 2
-    * set :spotValue:x *tmp0
+   14 op sub :spotValue:x :computeRowValues:x 2
    15 set :spotValue:y :computeRowValues:y
    16 set :spotValue:ore :computeRowValues:ore
    17 ucontrol getBlock :spotValue:x :spotValue:y type building floor
 
    21 set *tmp1 :spotValue:result
    22 label *label15
    23 set :computeRowValues:x1 *tmp1
-    * op sub *tmp2 :computeRowValues:x 1
-    * set :spotValue.1:x *tmp2
+   24 op sub :spotValue.1:x :computeRowValues:x 1
    25 set :spotValue.1:y :computeRowValues:y
    26 set :spotValue.1:ore :computeRowValues:ore
    27 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
 
    31 set *tmp3 :spotValue.1:result
    32 label *label16
    33 set :computeRowValues:x2 *tmp3
-    * op add *tmp4 :computeRowValues:x 0
-    * set :spotValue.2:x *tmp4
+   34 op add :spotValue.2:x :computeRowValues:x 0
    35 set :spotValue.2:y :computeRowValues:y
    36 set :spotValue.2:ore :computeRowValues:ore
    37 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
 
    41 set *tmp5 :spotValue.2:result
    42 label *label17
    43 set :computeRowValues:x3 *tmp5
-    * op add *tmp6 :computeRowValues:x 1
-    * set :spotValue.3:x *tmp6
+   44 op add :spotValue.3:x :computeRowValues:x 1
    45 set :spotValue.3:y :computeRowValues:y
    46 set :spotValue.3:ore :computeRowValues:ore
    47 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
 
    51 set *tmp7 :spotValue.3:result
    52 label *label18
    53 set :computeRowValues:x4 *tmp7
-    * op add *tmp8 :computeRowValues:x 2
-    * set :spotValue.4:x *tmp8
+   54 op add :spotValue.4:x :computeRowValues:x 2
    55 set :spotValue.4:y :computeRowValues:y
    56 set :spotValue.4:ore :computeRowValues:ore
    57 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
 
    67 op add *tmp13 :computeRowValues:x2 :computeRowValues:x3
    68 op add *tmp14 :computeRowValues:x3 :computeRowValues:x4
    69 op add *tmp15 :computeRowValues:x4 :computeRowValues:x5
-    * packcolor *tmp16 *tmp12 *tmp13 *tmp14 *tmp15
-    * set :computeRowValues*retval *tmp16
+   70 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
    71 jump *label14 always
    72 set *tmp11 null
    73 jump *label21 always
 
    80 op add *tmp22 *tmp21 :computeRowValues:x4
    81 op add *tmp23 :computeRowValues:x3 :computeRowValues:x4
    82 op add *tmp24 *tmp23 :computeRowValues:x5
-    * packcolor *tmp25 *tmp20 *tmp22 *tmp24 0
-    * set :computeRowValues*retval *tmp25
+   83 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
    84 jump *label14 always
    85 set *tmp18 null
    86 jump *label23 always
    87 label *label22
-    * op sub *tmp26 :computeRowValues:x 3
-    * set :spotValue.5:x *tmp26
+   88 op sub :spotValue.5:x :computeRowValues:x 3
    89 set :spotValue.5:y :computeRowValues:y
    90 set :spotValue.5:ore :computeRowValues:ore
    91 ucontrol getBlock :spotValue.5:x :spotValue.5:y type building floor
 
    95 set *tmp27 :spotValue.5:result
    96 label *label24
    97 set :computeRowValues:x0 *tmp27
-    * op add *tmp28 :computeRowValues:x 3
-    * set :spotValue.6:x *tmp28
+   98 op add :spotValue.6:x :computeRowValues:x 3
    99 set :spotValue.6:y :computeRowValues:y
   100 set :spotValue.6:ore :computeRowValues:ore
   101 ucontrol getBlock :spotValue.6:x :spotValue.6:y type building floor
 
   121 op add *tmp43 *tmp42 :computeRowValues:x5
   122 op add *tmp44 *tmp43 :computeRowValues:x6
   123 op min *tmp45 0.09803921568627451 *tmp44
-    * packcolor *tmp46 *tmp33 *tmp37 *tmp41 *tmp45
-    * set :computeRowValues*retval *tmp46
+  124 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
   125 jump *label14 always
   126 set *tmp18 null
   127 label *label23
 
   133 end
   134 label *label7
   135 ubind :findDrillLocationLocal:unit
-    * set *tmp47 .locations
-    * set .locationsStart *tmp47
+  136 set .locationsStart .locations
   137 set .coreX :findDrillLocationLocal:x
   138 set .coreY :findDrillLocationLocal:y
   139 set :findDrillLocationLocal:capacity 0
 
   168 label *label28
   169 label *label27
   170 op div *tmp56 :findDrillLocationLocal:distanceLimit 3.8197185279121366
-    * op pow *tmp57 *tmp56 2
-    * set .mapTotal *tmp57
+  171 op pow .mapTotal *tmp56 2
   172 set :findDrillLocationLocal:oreX 0
   173 set :findDrillLocationLocal:oreY 0
   174 label *label32
 
   177 set :findDrillLocationLocal:bestX :findDrillLocationLocal:x
   178 set :findDrillLocationLocal:bestY :findDrillLocationLocal:y
   179 op sub *tmp58 :findDrillLocationLocal:limit :findDrillLocationLocal:capacity
-    * op mul *tmp59 *tmp58 .attenuationRate
-    * set :findDrillLocationLocal:maxDistance *tmp59
-    * op min *tmp60 :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
-    * set :findDrillLocationLocal:distanceLimit *tmp60
+  180 op mul :findDrillLocationLocal:maxDistance *tmp58 .attenuationRate
+  181 op min :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
   182 op div *tmp61 :findDrillLocationLocal:distanceLimit 3.8197185279121366
-    * op pow *tmp62 *tmp61 2
-    * set .mapTotal *tmp62
+  183 op pow .mapTotal *tmp61 2
   184 set :locateOreAway:ore :findDrillLocationLocal:item
   185 set :locateOreAway:x :findDrillLocationLocal:oreX
   186 set :locateOreAway:y :findDrillLocationLocal:oreY
   187 set :locateOreAway:distanceLimit :findDrillLocationLocal:distanceLimit
-    * op mul *tmp64 3.8197185279121366 .angle
-    * set :locateOreAway:distance *tmp64
+  188 op mul :locateOreAway:distance 3.8197185279121366 .angle
   189 set :locateOreAway:lastX -1
   190 set :locateOreAway:lastY -1
-    * op max *tmp65 .angle @pi
-    * set .angle *tmp65
-    * op mul *tmp66 .angle .angle
-    * set .mapProgress *tmp66
+  191 op max .angle .angle @pi
+  192 op mul .mapProgress .angle .angle
   193 label *label36
   194 op lessThan *tmp67 :locateOreAway:distance :locateOreAway:distanceLimit
   195 jump *label38 equal *tmp67 false
-    * op div *tmp68 .angle @degToRad
-    * set :locateOreAway:a *tmp68
+  196 op div :locateOreAway:a .angle @degToRad
   197 op sin *tmp69 :locateOreAway:a
   198 op mul *tmp70 *tmp69 :locateOreAway:distance
   199 op add *tmp71 .coreX *tmp70
 
   202 set :limit:low 5
   203 set :limit:high *tmp72
   204 op max *tmp74 :limit:value :limit:low
-    * op min *tmp75 *tmp74 :limit:high
-    * set *tmp73 *tmp75
+  205 op min *tmp73 *tmp74 :limit:high
   206 label *label39
   207 set :locateOreAway:lx *tmp73
   208 op cos *tmp76 :locateOreAway:a
 
   213 set :limit.1:low 5
   214 set :limit.1:high *tmp79
   215 op max *tmp81 :limit.1:value :limit.1:low
-    * op min *tmp82 *tmp81 :limit.1:high
-    * set *tmp80 *tmp82
+  216 op min *tmp80 *tmp81 :limit.1:high
   217 label *label40
   218 set :locateOreAway:ly *tmp80
   219 set :moveTo.2:x :locateOreAway:lx
 
   231 label *label41
   232 op div *tmp86 3.8197185279121366 :locateOreAway:distance
   233 op add .angle .angle *tmp86
-    * op mul *tmp87 .angle .angle
-    * set .mapProgress *tmp87
-    * op mul *tmp88 3.8197185279121366 .angle
-    * set :locateOreAway:distance *tmp88
-    * ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp89 *tmp90
+  234 op mul .mapProgress .angle .angle
+  235 op mul :locateOreAway:distance 3.8197185279121366 .angle
+  236 ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp89 0
   237 op equal *tmp91 *tmp89 false
   238 jump *label45 equal *tmp91 false
   239 set *tmp63 false
 
   245 op abs *tmp94 *tmp93
   246 op sub *tmp95 :locateOreAway:y .coreY
   247 op abs *tmp96 *tmp95
-    * op max *tmp97 *tmp94 *tmp96
-    * set :locateOreAway:coreDist *tmp97
+  248 op max :locateOreAway:coreDist *tmp94 *tmp96
   249 op sub *tmp98 :locateOreAway:x :locateOreAway:lx
   250 op sub *tmp99 :locateOreAway:y :locateOreAway:ly
-    * op len *tmp100 *tmp98 *tmp99
-    * set :locateOreAway:unitDist *tmp100
+  251 op len :locateOreAway:unitDist *tmp98 *tmp99
   252 op equal *tmp101 :locateOreAway:lastX :locateOreAway:x
   253 jump *label47 equal *tmp101 false
   254 op equal *tmp103 :locateOreAway:lastY :locateOreAway:y
 
   272 set :visited:i .locationsStart
   273 label *label56
   274 jump *label58 greaterThanEq :visited:i *tmp110
-    * op mul *tmp111 4 :visited:i
-    * set :visited:index *tmp111
+  275 op mul :visited:index 4 :visited:i
   276 op add *tmp112 :visited:index 2
-    * set *tmp113 *tmp112
-    * read *tmp114 bank1 *tmp113
-    * set :visited:lx *tmp114
+  277 read :visited:lx bank1 *tmp112
   278 op add *tmp115 :visited:index 3
-    * set *tmp116 *tmp115
-    * read *tmp117 bank1 *tmp116
-    * set :visited:ly *tmp117
+  279 read :visited:ly bank1 *tmp115
   280 op sub *tmp118 :visited:x :visited:lx
   281 op sub *tmp119 :visited:y :visited:ly
   282 op len *tmp120 *tmp118 *tmp119
 
   299 jump *label61 equal *tmp123 false
   300 op div *tmp125 7.639437055824273 :locateOreAway:distance
   301 op add .angle .angle *tmp125
-    * op mul *tmp126 .angle .angle
-    * set .mapProgress *tmp126
+  302 op mul .mapProgress .angle .angle
   303 printflush message1
   304 set *tmp63 true
   305 jump *label35 always
 
   323 set :findDrillLocationLocal:oreY :locateOreAway:y
   324 op equal *tmp127 *tmp63 false
   325 jump *label63 equal *tmp127 false
-    * op greaterThan *tmp129 :findDrillLocationLocal:capacity 0
-    * set :findDrillLocationLocal*retval *tmp129
+  326 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   327 jump *label26 always
   328 jump *label64 always
   329 label *label63
 
   367 setaddr :computeRowValues*retaddr *label76 (h:*label76)
   368 call *label6 *invalid :computeRowValues*retval (m:*label76) (h:*label76)
   369 label *label76
-    * set *tmp140 :computeRowValues*retval
-    * set :findBestPosition:y1 *tmp140
+  370 set :findBestPosition:y1 :computeRowValues*retval
   371 op sub *tmp141 :findBestPosition:y 1
   372 set :computeRowValues:x :findBestPosition:x
   373 set :computeRowValues:y *tmp141
 
   376 setaddr :computeRowValues*retaddr *label77 (h:*label77)
   377 call *label6 *invalid :computeRowValues*retval (m:*label77) (h:*label77)
   378 label *label77
-    * set *tmp142 :computeRowValues*retval
-    * set :findBestPosition:y2 *tmp142
+  379 set :findBestPosition:y2 :computeRowValues*retval
   380 op add *tmp143 :findBestPosition:y 0
   381 set :computeRowValues:x :findBestPosition:x
   382 set :computeRowValues:y *tmp143
 
   385 setaddr :computeRowValues*retaddr *label78 (h:*label78)
   386 call *label6 *invalid :computeRowValues*retval (m:*label78) (h:*label78)
   387 label *label78
-    * set *tmp144 :computeRowValues*retval
-    * set :findBestPosition:y3 *tmp144
+  388 set :findBestPosition:y3 :computeRowValues*retval
   389 op add *tmp145 :findBestPosition:y 1
   390 set :computeRowValues:x :findBestPosition:x
   391 set :computeRowValues:y *tmp145
 
   394 setaddr :computeRowValues*retaddr *label79 (h:*label79)
   395 call *label6 *invalid :computeRowValues*retval (m:*label79) (h:*label79)
   396 label *label79
-    * set *tmp146 :computeRowValues*retval
-    * set :findBestPosition:y4 *tmp146
+  397 set :findBestPosition:y4 :computeRowValues*retval
   398 op add *tmp147 :findBestPosition:y 2
   399 set :computeRowValues:x :findBestPosition:x
   400 set :computeRowValues:y *tmp147
 
   403 setaddr :computeRowValues*retaddr *label80 (h:*label80)
   404 call *label6 *invalid :computeRowValues*retval (m:*label80) (h:*label80)
   405 label *label80
-    * set *tmp148 :computeRowValues*retval
-    * set :findBestPosition:y5 *tmp148
+  406 set :findBestPosition:y5 :computeRowValues*retval
   407 set :findBestPosition:best 0
   408 set :findDrillLocationLocal:diffX 0
   409 set :findDrillLocationLocal:diffY 0
   410 op equal *tmp149 :findBestPosition:size 2
   411 jump *label81 equal *tmp149 false
-    * op add *tmp151 :findBestPosition:y1 :findBestPosition:y2
-    * set :findBestPosition:row1 *tmp151
-    * op add *tmp152 :findBestPosition:y2 :findBestPosition:y3
-    * set :findBestPosition:row2 *tmp152
-    * op add *tmp153 :findBestPosition:y3 :findBestPosition:y4
-    * set :findBestPosition:row3 *tmp153
-    * op add *tmp154 :findBestPosition:y4 :findBestPosition:y5
-    * set :findBestPosition:row4 *tmp154
+  412 op add :findBestPosition:row1 :findBestPosition:y1 :findBestPosition:y2
+  413 op add :findBestPosition:row2 :findBestPosition:y2 :findBestPosition:y3
+  414 op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
+  415 op add :findBestPosition:row4 :findBestPosition:y4 :findBestPosition:y5
   416 set :updateRowPositions2x2:dy -1.5
   417 set :updateRowPositions2x2:rowSum :findBestPosition:row1
   418 unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :updateRowPositions2x2:rowSum
 
   706 op equal *tmp219 :findBestPosition:size 3
   707 jump *label167 equal *tmp219 false
   708 op add *tmp221 :findBestPosition:y2 :findBestPosition:y3
-    * op add *tmp222 :findBestPosition:y1 *tmp221
-    * set :findBestPosition:row1.1 *tmp222
+  709 op add :findBestPosition:row1.1 :findBestPosition:y1 *tmp221
   710 op add *tmp223 :findBestPosition:y2 :findBestPosition:y3
-    * op add *tmp224 *tmp223 :findBestPosition:y4
-    * set :findBestPosition:row2.1 *tmp224
+  711 op add :findBestPosition:row2.1 *tmp223 :findBestPosition:y4
   712 op add *tmp225 :findBestPosition:y3 :findBestPosition:y4
-    * op add *tmp226 *tmp225 :findBestPosition:y5
-    * set :findBestPosition:row3.1 *tmp226
+  713 op add :findBestPosition:row3.1 *tmp225 :findBestPosition:y5
   714 set :updateRowPositions3x3:dy -1
   715 set :updateRowPositions3x3:rowSum :findBestPosition:row1.1
-    * unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 *tmp227 :updateRowPositions3x3:rowSum
+  716 unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :updateRowPositions3x3:rowSum
   717 set :updatePosition.16:dx -1
   718 set :updatePosition.16:dy :updateRowPositions3x3:dy
   719 set :updatePosition.16:value :updateRowPositions3x3:col1
 
   768 label *label169
   769 set :updateRowPositions3x3.1:dy 0
   770 set :updateRowPositions3x3.1:rowSum :findBestPosition:row2.1
-    * unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 *tmp240 :updateRowPositions3x3.1:rowSum
+  771 unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :updateRowPositions3x3.1:rowSum
   772 set :updatePosition.19:dx -1
   773 set :updatePosition.19:dy :updateRowPositions3x3.1:dy
   774 set :updatePosition.19:value :updateRowPositions3x3.1:col1
 
   823 label *label185
   824 set :updateRowPositions3x3.2:dy 1
   825 set :updateRowPositions3x3.2:rowSum :findBestPosition:row3.1
-    * unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 *tmp253 :updateRowPositions3x3.2:rowSum
+  826 unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :updateRowPositions3x3.2:rowSum
   827 set :updatePosition.22:dx -1
   828 set :updatePosition.22:dy :updateRowPositions3x3.2:dy
   829 set :updatePosition.22:value :updateRowPositions3x3.2:col1
 
   886 setaddr :computeRowValues*retaddr *label217 (h:*label217)
   887 call *label6 *invalid :computeRowValues*retval (m:*label217) (h:*label217)
   888 label *label217
-    * set *tmp267 :computeRowValues*retval
-    * set :findBestPosition:y0 *tmp267
+  889 set :findBestPosition:y0 :computeRowValues*retval
   890 op add *tmp268 :findBestPosition:y 3
   891 set :computeRowValues:x :findBestPosition:x
   892 set :computeRowValues:y *tmp268
 
   895 setaddr :computeRowValues*retaddr *label218 (h:*label218)
   896 call *label6 *invalid :computeRowValues*retval (m:*label218) (h:*label218)
   897 label *label218
-    * set *tmp269 :computeRowValues*retval
-    * set :findBestPosition:y6 *tmp269
+  898 set :findBestPosition:y6 :computeRowValues*retval
   899 op add *tmp270 :findBestPosition:y1 :findBestPosition:y2
   900 op add *tmp271 *tmp270 :findBestPosition:y3
-    * op add *tmp272 :findBestPosition:y0 *tmp271
-    * set :findBestPosition:row1.2 *tmp272
+  901 op add :findBestPosition:row1.2 :findBestPosition:y0 *tmp271
   902 op add *tmp273 :findBestPosition:y1 :findBestPosition:y2
   903 op add *tmp274 *tmp273 :findBestPosition:y3
-    * op add *tmp275 *tmp274 :findBestPosition:y4
-    * set :findBestPosition:row2.2 *tmp275
+  904 op add :findBestPosition:row2.2 *tmp274 :findBestPosition:y4
   905 op add *tmp276 :findBestPosition:y3 :findBestPosition:y4
   906 op add *tmp277 *tmp276 :findBestPosition:y5
-    * op add *tmp278 :findBestPosition:y2 *tmp277
-    * set :findBestPosition:row3.2 *tmp278
+  907 op add :findBestPosition:row3.2 :findBestPosition:y2 *tmp277
   908 op add *tmp279 :findBestPosition:y3 :findBestPosition:y4
   909 op add *tmp280 *tmp279 :findBestPosition:y5
-    * op add *tmp281 *tmp280 :findBestPosition:y6
-    * set :findBestPosition:row4.1 *tmp281
+  910 op add :findBestPosition:row4.1 *tmp280 :findBestPosition:y6
   911 set :updateRowPositions4x4:dy -1.5
   912 set :updateRowPositions4x4:rowSum :findBestPosition:row1.2
   913 unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 :updateRowPositions4x4:col3 :updateRowPositions4x4:col4 :updateRowPositions4x4:rowSum
 
  1198 label *label282
  1199 label *label168
  1200 label *label82
-    * op mul *tmp346 :findBestPosition:best 255
-    * set *tmp138 *tmp346
+ 1201 op mul *tmp138 :findBestPosition:best 255
  1202 jump *label75 always
  1203 set *tmp138 null
  1204 label *label75
  1205 set :findDrillLocationLocal:score *tmp138
  1206 op greaterThan *tmp347 :findDrillLocationLocal:score :findDrillLocationLocal:capacity
  1207 jump *label303 equal *tmp347 false
-    * op add *tmp349 :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
-    * set :findDrillLocationLocal:dx *tmp349
-    * op add *tmp350 :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:dy *tmp350
+ 1208 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
+ 1209 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1210 set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
  1211 op lessThan *tmp351 :findDrillLocationLocal:limit 1000
  1212 jump *label305 equal *tmp351 false
 
  1225 sensor *tmp357 :saveLocation:item @id
  1226 write *tmp357 bank1 *tmp355
  1227 op add .count .count 1
-    * set *tmp358 .count
-    * write :saveLocation:value bank1 *tmp358
+ 1228 write :saveLocation:value bank1 .count
  1229 op add .count .count 1
-    * set *tmp360 .count
-    * write :saveLocation:x bank1 *tmp360
+ 1230 write :saveLocation:x bank1 .count
  1231 op add .count .count 1
-    * set *tmp362 .count
-    * write :saveLocation:y bank1 *tmp362
+ 1232 write :saveLocation:y bank1 .count
  1233 op add .locations .locations 1
  1234 label *label309
  1235 ucontrol unbind
 
  1243 label *label304
  1244 op greaterThan *tmp365 :findDrillLocationLocal:score :findDrillLocationLocal:best
  1245 jump *label310 equal *tmp365 false
-    * op add *tmp367 :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
-    * set :findDrillLocationLocal:bestX *tmp367
-    * op add *tmp368 :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:bestY *tmp368
+ 1246 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
+ 1247 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1248 set :findDrillLocationLocal:best :findDrillLocationLocal:score
  1249 jump *label311 always
  1250 label *label310
 
  1256 label *label312
  1257 label *label313
  1258 set :findDrillLocationLocal:last :findDrillLocationLocal:score
-    * op mul *tmp371 :findDrillLocationLocal:diffX 1.1
-    * set :round:x *tmp371
+ 1259 op mul :round:x :findDrillLocationLocal:diffX 1.1
  1260 op add *tmp373 :round:x 0.5
-    * op floor *tmp374 *tmp373
-    * set *tmp372 *tmp374
+ 1261 op floor *tmp372 *tmp373
  1262 label *label314
  1263 op add :findDrillLocationLocal:oreX :findDrillLocationLocal:oreX *tmp372
-    * op mul *tmp375 :findDrillLocationLocal:diffY 1.1
-    * set :round.1:x *tmp375
+ 1264 op mul :round.1:x :findDrillLocationLocal:diffY 1.1
  1265 op add *tmp377 :round.1:x 0.5
-    * op floor *tmp378 *tmp377
-    * set *tmp376 *tmp378
+ 1266 op floor *tmp376 *tmp377
  1267 label *label315
  1268 op add :findDrillLocationLocal:oreY :findDrillLocationLocal:oreY *tmp376
  1269 op sub *tmp379 :findDrillLocationLocal:oreX .coreX
 
  1291 sensor *tmp390 :saveLocation.1:item @id
  1292 write *tmp390 bank1 *tmp388
  1293 op add .count .count 1
-    * set *tmp391 .count
-    * write :saveLocation.1:value bank1 *tmp391
+ 1294 write :saveLocation.1:value bank1 .count
  1295 op add .count .count 1
-    * set *tmp393 .count
-    * write :saveLocation.1:x bank1 *tmp393
+ 1296 write :saveLocation.1:x bank1 .count
  1297 op add .count .count 1
-    * set *tmp395 .count
-    * write :saveLocation.1:y bank1 *tmp395
+ 1298 write :saveLocation.1:y bank1 .count
  1299 op add .locations .locations 1
  1300 label *label320
  1301 jump *label319 always
 
  1344 select :isBlocked:result notEqual solid false 1 0
  1345 set *tmp406 :isBlocked:result
  1346 label *label333
-    * op or *tmp407 *tmp403 *tmp406
-    * set :createTerrainMask:result *tmp407
+ 1347 op or :createTerrainMask:result *tmp403 *tmp406
  1348 label *label331
  1349 op sub :createTerrainMask:c :createTerrainMask:c 1
  1350 jump *label330 always
 
  1365 jump *label337 greaterThan :findPossiblePlacement:y 3
  1366 op add *tmp408 :findPossiblePlacement:y 3
  1367 op mul *tmp409 7 *tmp408
-    * op shl *tmp410 :findPossiblePlacement:placementMask *tmp409
-    * set :findPossiblePlacement:mask *tmp410
+ 1368 op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp409
  1369 set :findPossiblePlacement:x -3
  1370 label *label338
  1371 jump *label340 greaterThan :findPossiblePlacement:x 3
 
  1374 jump *label341 equal *tmp412 false
  1375 op mul *tmp414 :findPossiblePlacement:y 7
  1376 op add *tmp415 24 *tmp414
-    * op add *tmp416 *tmp415 :findPossiblePlacement:x
-    * set :findPossiblePlacement*retval *tmp416
+ 1377 op add :findPossiblePlacement*retval *tmp415 :findPossiblePlacement:x
  1378 jump *label334 always
  1379 jump *label342 always
  1380 label *label341
 
  1418 label *label348
  1419 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1420 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp423 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp423
+ 1421 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1422 op greaterThanEq *tmp424 :tryPlaceGenerator:shift 0
  1423 jump *label349 equal *tmp424 false
  1424 op lessThan *tmp426 :tryPlaceGenerator:shift 0
 
  1429 label *label351
  1430 label *label352
  1431 op add *tmp428 :tryPlaceGenerator:centerX 0.5
-    * op add *tmp429 *tmp428 :tryPlaceGenerator:c
-    * set .water2X *tmp429
+ 1432 op add .water2X *tmp428 :tryPlaceGenerator:c
  1433 op add *tmp430 :tryPlaceGenerator:centerY 0.5
-    * op add *tmp431 *tmp430 :tryPlaceGenerator:r
-    * set .water2Y *tmp431
+ 1434 op add .water2Y *tmp430 :tryPlaceGenerator:r
  1435 op add *tmp432 :tryPlaceGenerator:centerX 0.5
-    * op add *tmp433 *tmp432 :tryPlaceGenerator:c
-    * set .generatorX *tmp433
+ 1436 op add .generatorX *tmp432 :tryPlaceGenerator:c
  1437 op add *tmp434 :tryPlaceGenerator:centerY 2.5
-    * op add *tmp435 *tmp434 :tryPlaceGenerator:r
-    * set .generatorY *tmp435
+ 1438 op add .generatorY *tmp434 :tryPlaceGenerator:r
  1439 op shl *tmp436 :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:shift
  1440 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp436
  1441 jump *label350 always
 
  1449 label *label353
  1450 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1451 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp437 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp437
+ 1452 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1453 op lessThan *tmp438 :tryPlaceGenerator:shift 0
  1454 jump *label354 equal *tmp438 false
  1455 set :tryPlaceGenerator*retval false
 
  1458 label *label354
  1459 label *label355
  1460 op add *tmp440 :tryPlaceGenerator:centerX 0.5
-    * op add *tmp441 *tmp440 :tryPlaceGenerator:c
-    * set .water2X *tmp441
+ 1461 op add .water2X *tmp440 :tryPlaceGenerator:c
  1462 op add *tmp442 :tryPlaceGenerator:centerY 0.5
-    * op add *tmp443 *tmp442 :tryPlaceGenerator:r
-    * set .water2Y *tmp443
+ 1463 op add .water2Y *tmp442 :tryPlaceGenerator:r
  1464 op add *tmp444 :tryPlaceGenerator:centerX 2.5
-    * op add *tmp445 *tmp444 :tryPlaceGenerator:c
-    * set .generatorX *tmp445
+ 1465 op add .generatorX *tmp444 :tryPlaceGenerator:c
  1466 op add *tmp446 :tryPlaceGenerator:centerY 0.5
-    * op add *tmp447 *tmp446 :tryPlaceGenerator:r
-    * set .generatorY *tmp447
+ 1467 op add .generatorY *tmp446 :tryPlaceGenerator:r
  1468 op shl *tmp448 :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:shift
  1469 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp448
  1470 label *label350
 
  1477 label *label356
  1478 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1479 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp449 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp449
+ 1480 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1481 op lessThan *tmp450 :tryPlaceGenerator:shift 0
  1482 jump *label357 equal *tmp450 false
  1483 set :tryPlaceGenerator*retval false
 
  1485 jump *label358 always
  1486 label *label357
  1487 label *label358
-    * op add *tmp452 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * set .nodeX *tmp452
-    * op add *tmp453 :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * set .nodeY *tmp453
+ 1488 op add .nodeX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
+ 1489 op add .nodeY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
  1490 op shl *tmp454 1 :tryPlaceGenerator:shift
  1491 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp454
  1492 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1498 label *label359
  1499 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1500 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp455 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp455
+ 1501 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1502 op lessThan *tmp456 :tryPlaceGenerator:shift 0
  1503 jump *label360 equal *tmp456 false
  1504 set :tryPlaceGenerator*retval false
 
  1506 jump *label361 always
  1507 label *label360
  1508 label *label361
-    * op add *tmp458 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * set .panelX *tmp458
-    * op add *tmp459 :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * set .panelY *tmp459
+ 1509 op add .panelX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
+ 1510 op add .panelY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
  1511 op shl *tmp460 1 :tryPlaceGenerator:shift
  1512 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp460
  1513 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1519 label *label362
  1520 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1521 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp461 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp461
+ 1522 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1523 op lessThan *tmp462 :tryPlaceGenerator:shift 0
  1524 jump *label363 equal *tmp462 false
  1525 set :tryPlaceGenerator*retval false
 
  1527 jump *label364 always
  1528 label *label363
  1529 label *label364
-    * op add *tmp464 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * set .batteryX *tmp464
-    * op add *tmp465 :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * set .batteryY *tmp465
+ 1530 op add .batteryX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
+ 1531 op add .batteryY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
  1532 op shl *tmp466 1 :tryPlaceGenerator:shift
  1533 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp466
  1534 set :tryPlaceGenerator*retval true
 
  1551 setaddr :createTerrainMask*retaddr *label366 (h:*label366)
  1552 call *label8 *invalid :createTerrainMask*retval (m:*label366) (h:*label366)
  1553 label *label366
-    * set *tmp467 :createTerrainMask*retval
-    * set :layoutThoriumDrillAtLocation:plainTerrainMask *tmp467
+ 1554 set :layoutThoriumDrillAtLocation:plainTerrainMask :createTerrainMask*retval
  1555 set :createFixedMatrix:row0 0b0000000
  1556 set :createFixedMatrix:row1 0b0000000
  1557 set :createFixedMatrix:row2 0b0011100
 
  1571 op shl *tmp478 :createFixedMatrix:row5 35
  1572 op or *tmp479 *tmp477 *tmp478
  1573 op shl *tmp480 :createFixedMatrix:row6 42
-    * op or *tmp481 *tmp479 *tmp480
-    * set *tmp468 *tmp481
+ 1574 op or *tmp468 *tmp479 *tmp480
  1575 label *label367
-    * op or *tmp482 :layoutThoriumDrillAtLocation:plainTerrainMask *tmp468
-    * set :layoutThoriumDrillAtLocation:terrainMask *tmp482
+ 1576 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:plainTerrainMask *tmp468
  1577 set :createFixedMatrix.1:row0 0b1000001
  1578 set :createFixedMatrix.1:row1 0b0000000
  1579 set :createFixedMatrix.1:row2 0b0011100
 
  1593 op shl *tmp493 :createFixedMatrix.1:row5 35
  1594 op or *tmp494 *tmp492 *tmp493
  1595 op shl *tmp495 :createFixedMatrix.1:row6 42
-    * op or *tmp496 *tmp494 *tmp495
-    * set *tmp483 *tmp496
+ 1596 op or *tmp483 *tmp494 *tmp495
  1597 label *label368
-    * op or *tmp497 :layoutThoriumDrillAtLocation:terrainMask *tmp483
-    * set :layoutThoriumDrillAtLocation:cornersMask *tmp497
+ 1598 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp483
  1599 set :createFixedMatrix.2:row0 0b11
  1600 set :createFixedMatrix.2:row1 0b11
  1601 op shl *tmp499 :createFixedMatrix.2:row0 0
  1602 op shl *tmp500 :createFixedMatrix.2:row1 7
-    * op or *tmp501 *tmp499 *tmp500
-    * set *tmp498 *tmp501
+ 1603 op or *tmp498 *tmp499 *tmp500
  1604 label *label369
  1605 set :layoutThoriumDrillAtLocation:mask2x2 *tmp498
  1606 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
 
  1612 label *label370
  1613 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1614 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
-    * set *tmp502 :findPossiblePlacement*retval
-    * set :layoutThoriumDrillAtLocation:shift *tmp502
+ 1615 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
  1616 op greaterThanEq *tmp503 :layoutThoriumDrillAtLocation:shift 0
  1617 jump *label371 equal *tmp503 false
  1618 op add *tmp505 .drillX 0.5
-    * op add *tmp506 *tmp505 :layoutThoriumDrillAtLocation:c
-    * set .water1X *tmp506
+ 1619 op add .water1X *tmp505 :layoutThoriumDrillAtLocation:c
  1620 op add *tmp507 .drillY 0.5
-    * op add *tmp508 *tmp507 :layoutThoriumDrillAtLocation:r
-    * set .water1Y *tmp508
+ 1621 op add .water1Y *tmp507 :layoutThoriumDrillAtLocation:r
  1622 op shl *tmp509 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
  1623 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp509
  1624 op shl *tmp510 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
 
  1635 label *label373
  1636 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1637 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
-    * set *tmp511 :findPossiblePlacement*retval
-    * set :layoutThoriumDrillAtLocation:shift *tmp511
+ 1638 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
  1639 op greaterThanEq *tmp512 :layoutThoriumDrillAtLocation:shift 0
  1640 jump *label374 equal *tmp512 false
  1641 op add *tmp514 .drillX 0.5
-    * op add *tmp515 *tmp514 :layoutThoriumDrillAtLocation:c
-    * set .containerX *tmp515
+ 1642 op add .containerX *tmp514 :layoutThoriumDrillAtLocation:c
  1643 op add *tmp516 .drillY 0.5
-    * op add *tmp517 *tmp516 :layoutThoriumDrillAtLocation:r
-    * set .containerY *tmp517
+ 1644 op add .containerY *tmp516 :layoutThoriumDrillAtLocation:r
  1645 op shl *tmp518 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
  1646 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp518
  1647 jump *label375 always
 
  1651 set :createFixedMatrix.3:row1 0b1111
  1652 op shl *tmp520 :createFixedMatrix.3:row0 0
  1653 op shl *tmp521 :createFixedMatrix.3:row1 7
-    * op or *tmp522 *tmp520 *tmp521
-    * set *tmp519 *tmp522
+ 1654 op or *tmp519 *tmp520 *tmp521
  1655 label *label376
  1656 set :layoutThoriumDrillAtLocation:generatorHorizontal *tmp519
  1657 set :createFixedMatrix.4:row0 0b11
 
  1664 op shl *tmp527 :createFixedMatrix.4:row2 14
  1665 op or *tmp528 *tmp526 *tmp527
  1666 op shl *tmp529 :createFixedMatrix.4:row3 21
-    * op or *tmp530 *tmp528 *tmp529
-    * set *tmp523 *tmp530
+ 1667 op or *tmp523 *tmp528 *tmp529
  1668 label *label377
  1669 set :layoutThoriumDrillAtLocation:generatorVertical *tmp523
  1670 set :tryPlaceGenerator:centerX .drillX
 
  1675 setaddr :tryPlaceGenerator*retaddr *label378 (h:*label378)
  1676 call *label10 *invalid :tryPlaceGenerator*retval (m:*label378) (h:*label378)
  1677 label *label378
-    * set *tmp531 :tryPlaceGenerator*retval
-    * jump *label379 equal *tmp531 false
+ 1678 jump *label379 equal :tryPlaceGenerator*retval false
  1679 set :layoutThoriumDrillAtLocation*retval true
  1680 jump *label365 always
  1681 jump *label380 always
 
  1700 set :layoutThoriumDrillAtLocation:sy -3
  1701 setaddr *tmp533 *label387
  1702 label *label381
-    * op sub *tmp534 .drillX :layoutThoriumDrillAtLocation:sx
-    * set :layoutThoriumDrillAtLocation:newX *tmp534
-    * op sub *tmp535 .drillY :layoutThoriumDrillAtLocation:sy
-    * set :layoutThoriumDrillAtLocation:newY *tmp535
+ 1703 op sub :layoutThoriumDrillAtLocation:newX .drillX :layoutThoriumDrillAtLocation:sx
+ 1704 op sub :layoutThoriumDrillAtLocation:newY .drillY :layoutThoriumDrillAtLocation:sy
  1705 set :createTerrainMask:x :layoutThoriumDrillAtLocation:newX
  1706 set :createTerrainMask:y :layoutThoriumDrillAtLocation:newY
  1707 setaddr :createTerrainMask*retaddr *label388 (h:*label388)
  1708 call *label8 *invalid :createTerrainMask*retval (m:*label388) (h:*label388)
  1709 label *label388
-    * set *tmp536 :createTerrainMask*retval
-    * set :layoutThoriumDrillAtLocation:newTerrainMask *tmp536
+ 1710 set :layoutThoriumDrillAtLocation:newTerrainMask :createTerrainMask*retval
  1711 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
  1712 set :shiftMask:shiftX :layoutThoriumDrillAtLocation:sx
  1713 set :shiftMask:shiftY :layoutThoriumDrillAtLocation:sy
 
  1723 label *label390
  1724 label *label391
  1725 op mul *tmp544 7 :shiftMask:shiftY
-    * op add *tmp545 :shiftMask:shiftX *tmp544
-    * set :shiftMask:shift *tmp545
+ 1726 op add :shiftMask:shift :shiftMask:shiftX *tmp544
  1727 op greaterThan *tmp546 :shiftMask:shift 0
  1728 jump *label392 equal *tmp546 false
-    * op shr *tmp548 562949953421311 :shiftMask:shift
-    * set :shiftMask:clearMask *tmp548
+ 1729 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
  1730 op and *tmp549 :shiftMask:mask :shiftMask:clearMask
-    * op shl *tmp550 *tmp549 :shiftMask:shift
-    * set :shiftMask:mask *tmp550
+ 1731 op shl :shiftMask:mask *tmp549 :shiftMask:shift
  1732 jump *label393 always
  1733 label *label392
  1734 op sub *tmp551 0 :shiftMask:shift
 
  1738 jump *label394 equal *tmp552 false
  1739 op abs *tmp554 :shiftMask:shiftX
  1740 op sub *tmp555 7 *tmp554
-    * op shr *tmp556 0b1111111 *tmp555
-    * set :shiftMask:keep *tmp556
+ 1741 op shr :shiftMask:keep 0b1111111 *tmp555
  1742 op greaterThan *tmp557 :shiftMask:shiftX 0
  1743 jump *label396 equal *tmp557 false
  1744 op abs *tmp559 :shiftMask:shiftX
 
  1762 set *tmp537 null
  1763 label *label389
  1764 set :layoutThoriumDrillAtLocation:shiftedMask *tmp537
-    * op or *tmp564 :layoutThoriumDrillAtLocation:newTerrainMask :layoutThoriumDrillAtLocation:shiftedMask
-    * set :layoutThoriumDrillAtLocation:combinedMask *tmp564
+ 1765 op or :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:newTerrainMask :layoutThoriumDrillAtLocation:shiftedMask
  1766 op sub *tmp565 .drillX :layoutThoriumDrillAtLocation:sx
  1767 op sub *tmp566 .drillY :layoutThoriumDrillAtLocation:sy
  1768 set :tryPlaceGenerator:centerX *tmp565
 
  1773 setaddr :tryPlaceGenerator*retaddr *label398 (h:*label398)
  1774 call *label10 *invalid :tryPlaceGenerator*retval (m:*label398) (h:*label398)
  1775 label *label398
-    * set *tmp567 :tryPlaceGenerator*retval
-    * jump *label399 equal *tmp567 false
+ 1776 jump *label399 equal :tryPlaceGenerator*retval false
  1777 set :layoutThoriumDrillAtLocation*retval true
  1778 jump *label365 always
  1779 jump *label400 always

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-2 instructions):
 
   172 set :findDrillLocationLocal:oreX 0
   173 set :findDrillLocationLocal:oreY 0
   174 label *label32
-    * jump *label34 equal true false
   175 set :findDrillLocationLocal:best -1
   176 set :findDrillLocationLocal:bestX :findDrillLocationLocal:x
   177 set :findDrillLocationLocal:bestY :findDrillLocationLocal:y
 
   353 label *label67
   354 set :findDrillLocationLocal:last 0
   355 label *label72
-    * jump *label74 equal true false
   356 set :findBestPosition:x :findDrillLocationLocal:oreX
   357 set :findBestPosition:y :findDrillLocationLocal:oreY
   358 set :findBestPosition:ore :findDrillLocationLocal:ore

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-122 instructions):
 
    61 set *tmp9 :spotValue.4:result
    62 label *label19
    63 set :computeRowValues:x5 *tmp9
-    * op equal *tmp10 :computeRowValues:size 2
-    * jump *label20 equal *tmp10 false
+   64 jump *label20 notEqual :computeRowValues:size 2
    65 op add *tmp12 :computeRowValues:x1 :computeRowValues:x2
    66 op add *tmp13 :computeRowValues:x2 :computeRowValues:x3
    67 op add *tmp14 :computeRowValues:x3 :computeRowValues:x4
 
    71 set *tmp11 null
    72 jump *label21 always
    73 label *label20
-    * op equal *tmp17 :computeRowValues:size 3
-    * jump *label22 equal *tmp17 false
+   74 jump *label22 notEqual :computeRowValues:size 3
    75 op add *tmp19 :computeRowValues:x2 :computeRowValues:x3
    76 op add *tmp20 :computeRowValues:x1 *tmp19
    77 op add *tmp21 :computeRowValues:x2 :computeRowValues:x3
 
   156 set :moveTo.1:radius 6
   157 label *label29
   158 ucontrol within :moveTo.1:x :moveTo.1:y :moveTo.1:radius *tmp53
-    * op equal *tmp54 *tmp53 false
-    * jump *label31 equal *tmp54 false
+  159 jump *label31 notEqual *tmp53 false
   160 op sub *tmp55 :moveTo.1:radius 0.5
   161 ucontrol approach :moveTo.1:x :moveTo.1:y *tmp55
   162 label *label30
 
   187 op max .angle .angle @pi
   188 op mul .mapProgress .angle .angle
   189 label *label36
-    * op lessThan *tmp67 :locateOreAway:distance :locateOreAway:distanceLimit
-    * jump *label38 equal *tmp67 false
+  190 jump *label38 greaterThanEq :locateOreAway:distance :locateOreAway:distanceLimit
   191 op div :locateOreAway:a .angle @degToRad
   192 op sin *tmp69 :locateOreAway:a
   193 op mul *tmp70 *tmp69 :locateOreAway:distance
 
   216 set :moveTo.2:radius 5
   217 label *label42
   218 ucontrol within :moveTo.2:x :moveTo.2:y :moveTo.2:radius *tmp83
-    * op equal *tmp84 *tmp83 false
-    * jump *label44 equal *tmp84 false
+  219 jump *label44 notEqual *tmp83 false
   220 op sub *tmp85 :moveTo.2:radius 0.5
   221 ucontrol approach :moveTo.2:x :moveTo.2:y *tmp85
   222 label *label43
 
   228 op mul .mapProgress .angle .angle
   229 op mul :locateOreAway:distance 3.8197185279121366 .angle
   230 ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp89 0
-    * op equal *tmp91 *tmp89 false
-    * jump *label45 equal *tmp91 false
+  231 jump *label45 notEqual *tmp89 false
   232 set *tmp63 false
   233 jump *label35 always
   234 jump *label46 always
 
   242 op sub *tmp98 :locateOreAway:x :locateOreAway:lx
   243 op sub *tmp99 :locateOreAway:y :locateOreAway:ly
   244 op len :locateOreAway:unitDist *tmp98 *tmp99
-    * op equal *tmp101 :locateOreAway:lastX :locateOreAway:x
-    * jump *label47 equal *tmp101 false
-    * op equal *tmp103 :locateOreAway:lastY :locateOreAway:y
-    * jump *label49 equal *tmp103 false
+  245 jump *label47 notEqual :locateOreAway:lastX :locateOreAway:x
+  246 jump *label49 notEqual :locateOreAway:lastY :locateOreAway:y
   247 jump *label37 always
   248 jump *label50 always
   249 label *label49
 
   251 jump *label48 always
   252 label *label47
   253 label *label48
-    * op greaterThanEq *tmp105 :locateOreAway:coreDist 7
-    * jump *label51 equal *tmp105 false
-    * op lessThan *tmp107 :locateOreAway:unitDist :locateOreAway:distance
-    * jump *label53 equal *tmp107 false
+  254 jump *label51 lessThan :locateOreAway:coreDist 7
+  255 jump *label53 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
   256 set :locateOreAway:lastX :locateOreAway:x
   257 set :locateOreAway:lastY :locateOreAway:y
   258 set :visited:x :locateOreAway:x
 
   269 op sub *tmp118 :visited:x :visited:lx
   270 op sub *tmp119 :visited:y :visited:ly
   271 op len *tmp120 *tmp118 *tmp119
-    * op lessThan *tmp121 *tmp120 7
-    * jump *label59 equal *tmp121 false
+  272 jump *label59 greaterThanEq *tmp120 7
   273 set *tmp109 true
   274 jump *label55 always
   275 jump *label60 always
 
   283 jump *label55 always
   284 set *tmp109 null
   285 label *label55
-    * op equal *tmp123 *tmp109 false
-    * jump *label61 equal *tmp123 false
+  286 jump *label61 notEqual *tmp109 false
   287 op div *tmp125 7.639437055824273 :locateOreAway:distance
   288 op add .angle .angle *tmp125
   289 op mul .mapProgress .angle .angle
 
   308 label *label35
   309 set :findDrillLocationLocal:oreX :locateOreAway:x
   310 set :findDrillLocationLocal:oreY :locateOreAway:y
-    * op equal *tmp127 *tmp63 false
-    * jump *label63 equal *tmp127 false
+  311 jump *label63 notEqual *tmp63 false
   312 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   313 jump *label26 always
   314 jump *label64 always
   315 label *label63
   316 label *label64
-    * op greaterThanEq *tmp130 :findDrillLocationLocal:limit 1000
-    * jump *label65 equal *tmp130 false
+  317 jump *label65 lessThan :findDrillLocationLocal:limit 1000
   318 op add .mapSpots .mapSpots 1
   319 jump *label66 always
   320 label *label65
 
   328 set :moveTo.4:radius 6
   329 label *label69
   330 ucontrol within :moveTo.4:x :moveTo.4:y :moveTo.4:radius *tmp135
-    * op equal *tmp136 *tmp135 false
-    * jump *label71 equal *tmp136 false
+  331 jump *label71 notEqual *tmp135 false
   332 op sub *tmp137 :moveTo.4:radius 0.5
   333 ucontrol approach :moveTo.4:x :moveTo.4:y *tmp137
   334 label *label70
 
   390 set :findBestPosition:best 0
   391 set :findDrillLocationLocal:diffX 0
   392 set :findDrillLocationLocal:diffY 0
-    * op equal *tmp149 :findBestPosition:size 2
-    * jump *label81 equal *tmp149 false
+  393 jump *label81 notEqual :findBestPosition:size 2
   394 op add :findBestPosition:row1 :findBestPosition:y1 :findBestPosition:y2
   395 op add :findBestPosition:row2 :findBestPosition:y2 :findBestPosition:y3
   396 op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
 
   401 set :updatePosition:dx -1.5
   402 set :updatePosition:dy :updateRowPositions2x2:dy
   403 set :updatePosition:value :updateRowPositions2x2:col1
-    * op lessThan *tmp155 :updatePosition:value 0.0784313725490196
-    * jump *label85 equal *tmp155 false
-    * op greaterThan *tmp157 :updatePosition:value :findBestPosition:best
-    * jump *label87 equal *tmp157 false
+  404 jump *label85 greaterThanEq :updatePosition:value 0.0784313725490196
+  405 jump *label87 lessThanEq :updatePosition:value :findBestPosition:best
   406 set :findDrillLocationLocal:diffX :updatePosition:dx
   407 set :findDrillLocationLocal:diffY :updatePosition:dy
   408 set :findBestPosition:best :updatePosition:value
 
   416 set :updatePosition.1:dx -0.5
   417 set :updatePosition.1:dy :updateRowPositions2x2:dy
   418 set :updatePosition.1:value :updateRowPositions2x2:col2
-    * op lessThan *tmp159 :updatePosition.1:value 0.0784313725490196
-    * jump *label90 equal *tmp159 false
-    * op greaterThan *tmp161 :updatePosition.1:value :findBestPosition:best
-    * jump *label92 equal *tmp161 false
+  419 jump *label90 greaterThanEq :updatePosition.1:value 0.0784313725490196
+  420 jump *label92 lessThanEq :updatePosition.1:value :findBestPosition:best
   421 set :findDrillLocationLocal:diffX :updatePosition.1:dx
   422 set :findDrillLocationLocal:diffY :updatePosition.1:dy
   423 set :findBestPosition:best :updatePosition.1:value
 
   431 set :updatePosition.2:dx 0.5
   432 set :updatePosition.2:dy :updateRowPositions2x2:dy
   433 set :updatePosition.2:value :updateRowPositions2x2:col3
-    * op lessThan *tmp163 :updatePosition.2:value 0.0784313725490196
-    * jump *label95 equal *tmp163 false
-    * op greaterThan *tmp165 :updatePosition.2:value :findBestPosition:best
-    * jump *label97 equal *tmp165 false
+  434 jump *label95 greaterThanEq :updatePosition.2:value 0.0784313725490196
+  435 jump *label97 lessThanEq :updatePosition.2:value :findBestPosition:best
   436 set :findDrillLocationLocal:diffX :updatePosition.2:dx
   437 set :findDrillLocationLocal:diffY :updatePosition.2:dy
   438 set :findBestPosition:best :updatePosition.2:value
 
   446 set :updatePosition.3:dx 1.5
   447 set :updatePosition.3:dy :updateRowPositions2x2:dy
   448 set :updatePosition.3:value :updateRowPositions2x2:col4
-    * op lessThan *tmp167 :updatePosition.3:value 0.0784313725490196
-    * jump *label100 equal *tmp167 false
-    * op greaterThan *tmp169 :updatePosition.3:value :findBestPosition:best
-    * jump *label102 equal *tmp169 false
+  449 jump *label100 greaterThanEq :updatePosition.3:value 0.0784313725490196
+  450 jump *label102 lessThanEq :updatePosition.3:value :findBestPosition:best
   451 set :findDrillLocationLocal:diffX :updatePosition.3:dx
   452 set :findDrillLocationLocal:diffY :updatePosition.3:dy
   453 set :findBestPosition:best :updatePosition.3:value
 
   465 set :updatePosition.4:dx -1.5
   466 set :updatePosition.4:dy :updateRowPositions2x2.1:dy
   467 set :updatePosition.4:value :updateRowPositions2x2.1:col1
-    * op lessThan *tmp171 :updatePosition.4:value 0.0784313725490196
-    * jump *label106 equal *tmp171 false
-    * op greaterThan *tmp173 :updatePosition.4:value :findBestPosition:best
-    * jump *label108 equal *tmp173 false
+  468 jump *label106 greaterThanEq :updatePosition.4:value 0.0784313725490196
+  469 jump *label108 lessThanEq :updatePosition.4:value :findBestPosition:best
   470 set :findDrillLocationLocal:diffX :updatePosition.4:dx
   471 set :findDrillLocationLocal:diffY :updatePosition.4:dy
   472 set :findBestPosition:best :updatePosition.4:value
 
   480 set :updatePosition.5:dx -0.5
   481 set :updatePosition.5:dy :updateRowPositions2x2.1:dy
   482 set :updatePosition.5:value :updateRowPositions2x2.1:col2
-    * op lessThan *tmp175 :updatePosition.5:value 0.0784313725490196
-    * jump *label111 equal *tmp175 false
-    * op greaterThan *tmp177 :updatePosition.5:value :findBestPosition:best
-    * jump *label113 equal *tmp177 false
+  483 jump *label111 greaterThanEq :updatePosition.5:value 0.0784313725490196
+  484 jump *label113 lessThanEq :updatePosition.5:value :findBestPosition:best
   485 set :findDrillLocationLocal:diffX :updatePosition.5:dx
   486 set :findDrillLocationLocal:diffY :updatePosition.5:dy
   487 set :findBestPosition:best :updatePosition.5:value
 
   495 set :updatePosition.6:dx 0.5
   496 set :updatePosition.6:dy :updateRowPositions2x2.1:dy
   497 set :updatePosition.6:value :updateRowPositions2x2.1:col3
-    * op lessThan *tmp179 :updatePosition.6:value 0.0784313725490196
-    * jump *label116 equal *tmp179 false
-    * op greaterThan *tmp181 :updatePosition.6:value :findBestPosition:best
-    * jump *label118 equal *tmp181 false
+  498 jump *label116 greaterThanEq :updatePosition.6:value 0.0784313725490196
+  499 jump *label118 lessThanEq :updatePosition.6:value :findBestPosition:best
   500 set :findDrillLocationLocal:diffX :updatePosition.6:dx
   501 set :findDrillLocationLocal:diffY :updatePosition.6:dy
   502 set :findBestPosition:best :updatePosition.6:value
 
   510 set :updatePosition.7:dx 1.5
   511 set :updatePosition.7:dy :updateRowPositions2x2.1:dy
   512 set :updatePosition.7:value :updateRowPositions2x2.1:col4
-    * op lessThan *tmp183 :updatePosition.7:value 0.0784313725490196
-    * jump *label121 equal *tmp183 false
-    * op greaterThan *tmp185 :updatePosition.7:value :findBestPosition:best
-    * jump *label123 equal *tmp185 false
+  513 jump *label121 greaterThanEq :updatePosition.7:value 0.0784313725490196
+  514 jump *label123 lessThanEq :updatePosition.7:value :findBestPosition:best
   515 set :findDrillLocationLocal:diffX :updatePosition.7:dx
   516 set :findDrillLocationLocal:diffY :updatePosition.7:dy
   517 set :findBestPosition:best :updatePosition.7:value
 
   529 set :updatePosition.8:dx -1.5
   530 set :updatePosition.8:dy :updateRowPositions2x2.2:dy
   531 set :updatePosition.8:value :updateRowPositions2x2.2:col1
-    * op lessThan *tmp187 :updatePosition.8:value 0.0784313725490196
-    * jump *label127 equal *tmp187 false
-    * op greaterThan *tmp189 :updatePosition.8:value :findBestPosition:best
-    * jump *label129 equal *tmp189 false
+  532 jump *label127 greaterThanEq :updatePosition.8:value 0.0784313725490196
+  533 jump *label129 lessThanEq :updatePosition.8:value :findBestPosition:best
   534 set :findDrillLocationLocal:diffX :updatePosition.8:dx
   535 set :findDrillLocationLocal:diffY :updatePosition.8:dy
   536 set :findBestPosition:best :updatePosition.8:value
 
   544 set :updatePosition.9:dx -0.5
   545 set :updatePosition.9:dy :updateRowPositions2x2.2:dy
   546 set :updatePosition.9:value :updateRowPositions2x2.2:col2
-    * op lessThan *tmp191 :updatePosition.9:value 0.0784313725490196
-    * jump *label132 equal *tmp191 false
-    * op greaterThan *tmp193 :updatePosition.9:value :findBestPosition:best
-    * jump *label134 equal *tmp193 false
+  547 jump *label132 greaterThanEq :updatePosition.9:value 0.0784313725490196
+  548 jump *label134 lessThanEq :updatePosition.9:value :findBestPosition:best
   549 set :findDrillLocationLocal:diffX :updatePosition.9:dx
   550 set :findDrillLocationLocal:diffY :updatePosition.9:dy
   551 set :findBestPosition:best :updatePosition.9:value
 
   559 set :updatePosition.10:dx 0.5
   560 set :updatePosition.10:dy :updateRowPositions2x2.2:dy
   561 set :updatePosition.10:value :updateRowPositions2x2.2:col3
-    * op lessThan *tmp195 :updatePosition.10:value 0.0784313725490196
-    * jump *label137 equal *tmp195 false
-    * op greaterThan *tmp197 :updatePosition.10:value :findBestPosition:best
-    * jump *label139 equal *tmp197 false
+  562 jump *label137 greaterThanEq :updatePosition.10:value 0.0784313725490196
+  563 jump *label139 lessThanEq :updatePosition.10:value :findBestPosition:best
   564 set :findDrillLocationLocal:diffX :updatePosition.10:dx
   565 set :findDrillLocationLocal:diffY :updatePosition.10:dy
   566 set :findBestPosition:best :updatePosition.10:value
 
   574 set :updatePosition.11:dx 1.5
   575 set :updatePosition.11:dy :updateRowPositions2x2.2:dy
   576 set :updatePosition.11:value :updateRowPositions2x2.2:col4
-    * op lessThan *tmp199 :updatePosition.11:value 0.0784313725490196
-    * jump *label142 equal *tmp199 false
-    * op greaterThan *tmp201 :updatePosition.11:value :findBestPosition:best
-    * jump *label144 equal *tmp201 false
+  577 jump *label142 greaterThanEq :updatePosition.11:value 0.0784313725490196
+  578 jump *label144 lessThanEq :updatePosition.11:value :findBestPosition:best
   579 set :findDrillLocationLocal:diffX :updatePosition.11:dx
   580 set :findDrillLocationLocal:diffY :updatePosition.11:dy
   581 set :findBestPosition:best :updatePosition.11:value
 
   593 set :updatePosition.12:dx -1.5
   594 set :updatePosition.12:dy :updateRowPositions2x2.3:dy
   595 set :updatePosition.12:value :updateRowPositions2x2.3:col1
-    * op lessThan *tmp203 :updatePosition.12:value 0.0784313725490196
-    * jump *label148 equal *tmp203 false
-    * op greaterThan *tmp205 :updatePosition.12:value :findBestPosition:best
-    * jump *label150 equal *tmp205 false
+  596 jump *label148 greaterThanEq :updatePosition.12:value 0.0784313725490196
+  597 jump *label150 lessThanEq :updatePosition.12:value :findBestPosition:best
   598 set :findDrillLocationLocal:diffX :updatePosition.12:dx
   599 set :findDrillLocationLocal:diffY :updatePosition.12:dy
   600 set :findBestPosition:best :updatePosition.12:value
 
   608 set :updatePosition.13:dx -0.5
   609 set :updatePosition.13:dy :updateRowPositions2x2.3:dy
   610 set :updatePosition.13:value :updateRowPositions2x2.3:col2
-    * op lessThan *tmp207 :updatePosition.13:value 0.0784313725490196
-    * jump *label153 equal *tmp207 false
-    * op greaterThan *tmp209 :updatePosition.13:value :findBestPosition:best
-    * jump *label155 equal *tmp209 false
+  611 jump *label153 greaterThanEq :updatePosition.13:value 0.0784313725490196
+  612 jump *label155 lessThanEq :updatePosition.13:value :findBestPosition:best
   613 set :findDrillLocationLocal:diffX :updatePosition.13:dx
   614 set :findDrillLocationLocal:diffY :updatePosition.13:dy
   615 set :findBestPosition:best :updatePosition.13:value
 
   623 set :updatePosition.14:dx 0.5
   624 set :updatePosition.14:dy :updateRowPositions2x2.3:dy
   625 set :updatePosition.14:value :updateRowPositions2x2.3:col3
-    * op lessThan *tmp211 :updatePosition.14:value 0.0784313725490196
-    * jump *label158 equal *tmp211 false
-    * op greaterThan *tmp213 :updatePosition.14:value :findBestPosition:best
-    * jump *label160 equal *tmp213 false
+  626 jump *label158 greaterThanEq :updatePosition.14:value 0.0784313725490196
+  627 jump *label160 lessThanEq :updatePosition.14:value :findBestPosition:best
   628 set :findDrillLocationLocal:diffX :updatePosition.14:dx
   629 set :findDrillLocationLocal:diffY :updatePosition.14:dy
   630 set :findBestPosition:best :updatePosition.14:value
 
   638 set :updatePosition.15:dx 1.5
   639 set :updatePosition.15:dy :updateRowPositions2x2.3:dy
   640 set :updatePosition.15:value :updateRowPositions2x2.3:col4
-    * op lessThan *tmp215 :updatePosition.15:value 0.0784313725490196
-    * jump *label163 equal *tmp215 false
-    * op greaterThan *tmp217 :updatePosition.15:value :findBestPosition:best
-    * jump *label165 equal *tmp217 false
+  641 jump *label163 greaterThanEq :updatePosition.15:value 0.0784313725490196
+  642 jump *label165 lessThanEq :updatePosition.15:value :findBestPosition:best
   643 set :findDrillLocationLocal:diffX :updatePosition.15:dx
   644 set :findDrillLocationLocal:diffY :updatePosition.15:dy
   645 set :findBestPosition:best :updatePosition.15:value
 
   653 label *label146
   654 jump *label82 always
   655 label *label81
-    * op equal *tmp219 :findBestPosition:size 3
-    * jump *label167 equal *tmp219 false
+  656 jump *label167 notEqual :findBestPosition:size 3
   657 op add *tmp221 :findBestPosition:y2 :findBestPosition:y3
   658 op add :findBestPosition:row1.1 :findBestPosition:y1 *tmp221
   659 op add *tmp223 :findBestPosition:y2 :findBestPosition:y3
 
   666 set :updatePosition.16:dx -1
   667 set :updatePosition.16:dy :updateRowPositions3x3:dy
   668 set :updatePosition.16:value :updateRowPositions3x3:col1
-    * op lessThan *tmp228 :updatePosition.16:value 0.0784313725490196
-    * jump *label171 equal *tmp228 false
-    * op greaterThan *tmp230 :updatePosition.16:value :findBestPosition:best
-    * jump *label173 equal *tmp230 false
+  669 jump *label171 greaterThanEq :updatePosition.16:value 0.0784313725490196
+  670 jump *label173 lessThanEq :updatePosition.16:value :findBestPosition:best
   671 set :findDrillLocationLocal:diffX :updatePosition.16:dx
   672 set :findDrillLocationLocal:diffY :updatePosition.16:dy
   673 set :findBestPosition:best :updatePosition.16:value
 
   681 set :updatePosition.17:dx 0
   682 set :updatePosition.17:dy :updateRowPositions3x3:dy
   683 set :updatePosition.17:value :updateRowPositions3x3:col2
-    * op lessThan *tmp232 :updatePosition.17:value 0.0784313725490196
-    * jump *label176 equal *tmp232 false
-    * op greaterThan *tmp234 :updatePosition.17:value :findBestPosition:best
-    * jump *label178 equal *tmp234 false
+  684 jump *label176 greaterThanEq :updatePosition.17:value 0.0784313725490196
+  685 jump *label178 lessThanEq :updatePosition.17:value :findBestPosition:best
   686 set :findDrillLocationLocal:diffX :updatePosition.17:dx
   687 set :findDrillLocationLocal:diffY :updatePosition.17:dy
   688 set :findBestPosition:best :updatePosition.17:value
 
   696 set :updatePosition.18:dx 1
   697 set :updatePosition.18:dy :updateRowPositions3x3:dy
   698 set :updatePosition.18:value :updateRowPositions3x3:col3
-    * op lessThan *tmp236 :updatePosition.18:value 0.0784313725490196
-    * jump *label181 equal *tmp236 false
-    * op greaterThan *tmp238 :updatePosition.18:value :findBestPosition:best
-    * jump *label183 equal *tmp238 false
+  699 jump *label181 greaterThanEq :updatePosition.18:value 0.0784313725490196
+  700 jump *label183 lessThanEq :updatePosition.18:value :findBestPosition:best
   701 set :findDrillLocationLocal:diffX :updatePosition.18:dx
   702 set :findDrillLocationLocal:diffY :updatePosition.18:dy
   703 set :findBestPosition:best :updatePosition.18:value
 
   715 set :updatePosition.19:dx -1
   716 set :updatePosition.19:dy :updateRowPositions3x3.1:dy
   717 set :updatePosition.19:value :updateRowPositions3x3.1:col1
-    * op lessThan *tmp241 :updatePosition.19:value 0.0784313725490196
-    * jump *label187 equal *tmp241 false
-    * op greaterThan *tmp243 :updatePosition.19:value :findBestPosition:best
-    * jump *label189 equal *tmp243 false
+  718 jump *label187 greaterThanEq :updatePosition.19:value 0.0784313725490196
+  719 jump *label189 lessThanEq :updatePosition.19:value :findBestPosition:best
   720 set :findDrillLocationLocal:diffX :updatePosition.19:dx
   721 set :findDrillLocationLocal:diffY :updatePosition.19:dy
   722 set :findBestPosition:best :updatePosition.19:value
 
   730 set :updatePosition.20:dx 0
   731 set :updatePosition.20:dy :updateRowPositions3x3.1:dy
   732 set :updatePosition.20:value :updateRowPositions3x3.1:col2
-    * op lessThan *tmp245 :updatePosition.20:value 0.0784313725490196
-    * jump *label192 equal *tmp245 false
-    * op greaterThan *tmp247 :updatePosition.20:value :findBestPosition:best
-    * jump *label194 equal *tmp247 false
+  733 jump *label192 greaterThanEq :updatePosition.20:value 0.0784313725490196
+  734 jump *label194 lessThanEq :updatePosition.20:value :findBestPosition:best
   735 set :findDrillLocationLocal:diffX :updatePosition.20:dx
   736 set :findDrillLocationLocal:diffY :updatePosition.20:dy
   737 set :findBestPosition:best :updatePosition.20:value
 
   745 set :updatePosition.21:dx 1
   746 set :updatePosition.21:dy :updateRowPositions3x3.1:dy
   747 set :updatePosition.21:value :updateRowPositions3x3.1:col3
-    * op lessThan *tmp249 :updatePosition.21:value 0.0784313725490196
-    * jump *label197 equal *tmp249 false
-    * op greaterThan *tmp251 :updatePosition.21:value :findBestPosition:best
-    * jump *label199 equal *tmp251 false
+  748 jump *label197 greaterThanEq :updatePosition.21:value 0.0784313725490196
+  749 jump *label199 lessThanEq :updatePosition.21:value :findBestPosition:best
   750 set :findDrillLocationLocal:diffX :updatePosition.21:dx
   751 set :findDrillLocationLocal:diffY :updatePosition.21:dy
   752 set :findBestPosition:best :updatePosition.21:value
 
   764 set :updatePosition.22:dx -1
   765 set :updatePosition.22:dy :updateRowPositions3x3.2:dy
   766 set :updatePosition.22:value :updateRowPositions3x3.2:col1
-    * op lessThan *tmp254 :updatePosition.22:value 0.0784313725490196
-    * jump *label203 equal *tmp254 false
-    * op greaterThan *tmp256 :updatePosition.22:value :findBestPosition:best
-    * jump *label205 equal *tmp256 false
+  767 jump *label203 greaterThanEq :updatePosition.22:value 0.0784313725490196
+  768 jump *label205 lessThanEq :updatePosition.22:value :findBestPosition:best
   769 set :findDrillLocationLocal:diffX :updatePosition.22:dx
   770 set :findDrillLocationLocal:diffY :updatePosition.22:dy
   771 set :findBestPosition:best :updatePosition.22:value
 
   779 set :updatePosition.23:dx 0
   780 set :updatePosition.23:dy :updateRowPositions3x3.2:dy
   781 set :updatePosition.23:value :updateRowPositions3x3.2:col2
-    * op lessThan *tmp258 :updatePosition.23:value 0.0784313725490196
-    * jump *label208 equal *tmp258 false
-    * op greaterThan *tmp260 :updatePosition.23:value :findBestPosition:best
-    * jump *label210 equal *tmp260 false
+  782 jump *label208 greaterThanEq :updatePosition.23:value 0.0784313725490196
+  783 jump *label210 lessThanEq :updatePosition.23:value :findBestPosition:best
   784 set :findDrillLocationLocal:diffX :updatePosition.23:dx
   785 set :findDrillLocationLocal:diffY :updatePosition.23:dy
   786 set :findBestPosition:best :updatePosition.23:value
 
   794 set :updatePosition.24:dx 1
   795 set :updatePosition.24:dy :updateRowPositions3x3.2:dy
   796 set :updatePosition.24:value :updateRowPositions3x3.2:col3
-    * op lessThan *tmp262 :updatePosition.24:value 0.0784313725490196
-    * jump *label213 equal *tmp262 false
-    * op greaterThan *tmp264 :updatePosition.24:value :findBestPosition:best
-    * jump *label215 equal *tmp264 false
+  797 jump *label213 greaterThanEq :updatePosition.24:value 0.0784313725490196
+  798 jump *label215 lessThanEq :updatePosition.24:value :findBestPosition:best
   799 set :findDrillLocationLocal:diffX :updatePosition.24:dx
   800 set :findDrillLocationLocal:diffY :updatePosition.24:dy
   801 set :findBestPosition:best :updatePosition.24:value
 
   845 set :updatePosition.25:dx -1.5
   846 set :updatePosition.25:dy :updateRowPositions4x4:dy
   847 set :updatePosition.25:value :updateRowPositions4x4:col1
-    * op lessThan *tmp282 :updatePosition.25:value 0.0784313725490196
-    * jump *label221 equal *tmp282 false
-    * op greaterThan *tmp284 :updatePosition.25:value :findBestPosition:best
-    * jump *label223 equal *tmp284 false
+  848 jump *label221 greaterThanEq :updatePosition.25:value 0.0784313725490196
+  849 jump *label223 lessThanEq :updatePosition.25:value :findBestPosition:best
   850 set :findDrillLocationLocal:diffX :updatePosition.25:dx
   851 set :findDrillLocationLocal:diffY :updatePosition.25:dy
   852 set :findBestPosition:best :updatePosition.25:value
 
   860 set :updatePosition.26:dx -0.5
   861 set :updatePosition.26:dy :updateRowPositions4x4:dy
   862 set :updatePosition.26:value :updateRowPositions4x4:col2
-    * op lessThan *tmp286 :updatePosition.26:value 0.0784313725490196
-    * jump *label226 equal *tmp286 false
-    * op greaterThan *tmp288 :updatePosition.26:value :findBestPosition:best
-    * jump *label228 equal *tmp288 false
+  863 jump *label226 greaterThanEq :updatePosition.26:value 0.0784313725490196
+  864 jump *label228 lessThanEq :updatePosition.26:value :findBestPosition:best
   865 set :findDrillLocationLocal:diffX :updatePosition.26:dx
   866 set :findDrillLocationLocal:diffY :updatePosition.26:dy
   867 set :findBestPosition:best :updatePosition.26:value
 
   875 set :updatePosition.27:dx 0.5
   876 set :updatePosition.27:dy :updateRowPositions4x4:dy
   877 set :updatePosition.27:value :updateRowPositions4x4:col3
-    * op lessThan *tmp290 :updatePosition.27:value 0.0784313725490196
-    * jump *label231 equal *tmp290 false
-    * op greaterThan *tmp292 :updatePosition.27:value :findBestPosition:best
-    * jump *label233 equal *tmp292 false
+  878 jump *label231 greaterThanEq :updatePosition.27:value 0.0784313725490196
+  879 jump *label233 lessThanEq :updatePosition.27:value :findBestPosition:best
   880 set :findDrillLocationLocal:diffX :updatePosition.27:dx
   881 set :findDrillLocationLocal:diffY :updatePosition.27:dy
   882 set :findBestPosition:best :updatePosition.27:value
 
   890 set :updatePosition.28:dx 1.5
   891 set :updatePosition.28:dy :updateRowPositions4x4:dy
   892 set :updatePosition.28:value :updateRowPositions4x4:col4
-    * op lessThan *tmp294 :updatePosition.28:value 0.0784313725490196
-    * jump *label236 equal *tmp294 false
-    * op greaterThan *tmp296 :updatePosition.28:value :findBestPosition:best
-    * jump *label238 equal *tmp296 false
+  893 jump *label236 greaterThanEq :updatePosition.28:value 0.0784313725490196
+  894 jump *label238 lessThanEq :updatePosition.28:value :findBestPosition:best
   895 set :findDrillLocationLocal:diffX :updatePosition.28:dx
   896 set :findDrillLocationLocal:diffY :updatePosition.28:dy
   897 set :findBestPosition:best :updatePosition.28:value
 
   909 set :updatePosition.29:dx -1.5
   910 set :updatePosition.29:dy :updateRowPositions4x4.1:dy
   911 set :updatePosition.29:value :updateRowPositions4x4.1:col1
-    * op lessThan *tmp298 :updatePosition.29:value 0.0784313725490196
-    * jump *label242 equal *tmp298 false
-    * op greaterThan *tmp300 :updatePosition.29:value :findBestPosition:best
-    * jump *label244 equal *tmp300 false
+  912 jump *label242 greaterThanEq :updatePosition.29:value 0.0784313725490196
+  913 jump *label244 lessThanEq :updatePosition.29:value :findBestPosition:best
   914 set :findDrillLocationLocal:diffX :updatePosition.29:dx
   915 set :findDrillLocationLocal:diffY :updatePosition.29:dy
   916 set :findBestPosition:best :updatePosition.29:value
 
   924 set :updatePosition.30:dx -0.5
   925 set :updatePosition.30:dy :updateRowPositions4x4.1:dy
   926 set :updatePosition.30:value :updateRowPositions4x4.1:col2
-    * op lessThan *tmp302 :updatePosition.30:value 0.0784313725490196
-    * jump *label247 equal *tmp302 false
-    * op greaterThan *tmp304 :updatePosition.30:value :findBestPosition:best
-    * jump *label249 equal *tmp304 false
+  927 jump *label247 greaterThanEq :updatePosition.30:value 0.0784313725490196
+  928 jump *label249 lessThanEq :updatePosition.30:value :findBestPosition:best
   929 set :findDrillLocationLocal:diffX :updatePosition.30:dx
   930 set :findDrillLocationLocal:diffY :updatePosition.30:dy
   931 set :findBestPosition:best :updatePosition.30:value
 
   939 set :updatePosition.31:dx 0.5
   940 set :updatePosition.31:dy :updateRowPositions4x4.1:dy
   941 set :updatePosition.31:value :updateRowPositions4x4.1:col3
-    * op lessThan *tmp306 :updatePosition.31:value 0.0784313725490196
-    * jump *label252 equal *tmp306 false
-    * op greaterThan *tmp308 :updatePosition.31:value :findBestPosition:best
-    * jump *label254 equal *tmp308 false
+  942 jump *label252 greaterThanEq :updatePosition.31:value 0.0784313725490196
+  943 jump *label254 lessThanEq :updatePosition.31:value :findBestPosition:best
   944 set :findDrillLocationLocal:diffX :updatePosition.31:dx
   945 set :findDrillLocationLocal:diffY :updatePosition.31:dy
   946 set :findBestPosition:best :updatePosition.31:value
 
   954 set :updatePosition.32:dx 1.5
   955 set :updatePosition.32:dy :updateRowPositions4x4.1:dy
   956 set :updatePosition.32:value :updateRowPositions4x4.1:col4
-    * op lessThan *tmp310 :updatePosition.32:value 0.0784313725490196
-    * jump *label257 equal *tmp310 false
-    * op greaterThan *tmp312 :updatePosition.32:value :findBestPosition:best
-    * jump *label259 equal *tmp312 false
+  957 jump *label257 greaterThanEq :updatePosition.32:value 0.0784313725490196
+  958 jump *label259 lessThanEq :updatePosition.32:value :findBestPosition:best
   959 set :findDrillLocationLocal:diffX :updatePosition.32:dx
   960 set :findDrillLocationLocal:diffY :updatePosition.32:dy
   961 set :findBestPosition:best :updatePosition.32:value
 
   973 set :updatePosition.33:dx -1.5
   974 set :updatePosition.33:dy :updateRowPositions4x4.2:dy
   975 set :updatePosition.33:value :updateRowPositions4x4.2:col1
-    * op lessThan *tmp314 :updatePosition.33:value 0.0784313725490196
-    * jump *label263 equal *tmp314 false
-    * op greaterThan *tmp316 :updatePosition.33:value :findBestPosition:best
-    * jump *label265 equal *tmp316 false
+  976 jump *label263 greaterThanEq :updatePosition.33:value 0.0784313725490196
+  977 jump *label265 lessThanEq :updatePosition.33:value :findBestPosition:best
   978 set :findDrillLocationLocal:diffX :updatePosition.33:dx
   979 set :findDrillLocationLocal:diffY :updatePosition.33:dy
   980 set :findBestPosition:best :updatePosition.33:value
 
   988 set :updatePosition.34:dx -0.5
   989 set :updatePosition.34:dy :updateRowPositions4x4.2:dy
   990 set :updatePosition.34:value :updateRowPositions4x4.2:col2
-    * op lessThan *tmp318 :updatePosition.34:value 0.0784313725490196
-    * jump *label268 equal *tmp318 false
-    * op greaterThan *tmp320 :updatePosition.34:value :findBestPosition:best
-    * jump *label270 equal *tmp320 false
+  991 jump *label268 greaterThanEq :updatePosition.34:value 0.0784313725490196
+  992 jump *label270 lessThanEq :updatePosition.34:value :findBestPosition:best
   993 set :findDrillLocationLocal:diffX :updatePosition.34:dx
   994 set :findDrillLocationLocal:diffY :updatePosition.34:dy
   995 set :findBestPosition:best :updatePosition.34:value
 
  1003 set :updatePosition.35:dx 0.5
  1004 set :updatePosition.35:dy :updateRowPositions4x4.2:dy
  1005 set :updatePosition.35:value :updateRowPositions4x4.2:col3
-    * op lessThan *tmp322 :updatePosition.35:value 0.0784313725490196
-    * jump *label273 equal *tmp322 false
-    * op greaterThan *tmp324 :updatePosition.35:value :findBestPosition:best
-    * jump *label275 equal *tmp324 false
+ 1006 jump *label273 greaterThanEq :updatePosition.35:value 0.0784313725490196
+ 1007 jump *label275 lessThanEq :updatePosition.35:value :findBestPosition:best
  1008 set :findDrillLocationLocal:diffX :updatePosition.35:dx
  1009 set :findDrillLocationLocal:diffY :updatePosition.35:dy
  1010 set :findBestPosition:best :updatePosition.35:value
 
  1018 set :updatePosition.36:dx 1.5
  1019 set :updatePosition.36:dy :updateRowPositions4x4.2:dy
  1020 set :updatePosition.36:value :updateRowPositions4x4.2:col4
-    * op lessThan *tmp326 :updatePosition.36:value 0.0784313725490196
-    * jump *label278 equal *tmp326 false
-    * op greaterThan *tmp328 :updatePosition.36:value :findBestPosition:best
-    * jump *label280 equal *tmp328 false
+ 1021 jump *label278 greaterThanEq :updatePosition.36:value 0.0784313725490196
+ 1022 jump *label280 lessThanEq :updatePosition.36:value :findBestPosition:best
  1023 set :findDrillLocationLocal:diffX :updatePosition.36:dx
  1024 set :findDrillLocationLocal:diffY :updatePosition.36:dy
  1025 set :findBestPosition:best :updatePosition.36:value
 
  1037 set :updatePosition.37:dx -1.5
  1038 set :updatePosition.37:dy :updateRowPositions4x4.3:dy
  1039 set :updatePosition.37:value :updateRowPositions4x4.3:col1
-    * op lessThan *tmp330 :updatePosition.37:value 0.0784313725490196
-    * jump *label284 equal *tmp330 false
-    * op greaterThan *tmp332 :updatePosition.37:value :findBestPosition:best
-    * jump *label286 equal *tmp332 false
+ 1040 jump *label284 greaterThanEq :updatePosition.37:value 0.0784313725490196
+ 1041 jump *label286 lessThanEq :updatePosition.37:value :findBestPosition:best
  1042 set :findDrillLocationLocal:diffX :updatePosition.37:dx
  1043 set :findDrillLocationLocal:diffY :updatePosition.37:dy
  1044 set :findBestPosition:best :updatePosition.37:value
 
  1052 set :updatePosition.38:dx -0.5
  1053 set :updatePosition.38:dy :updateRowPositions4x4.3:dy
  1054 set :updatePosition.38:value :updateRowPositions4x4.3:col2
-    * op lessThan *tmp334 :updatePosition.38:value 0.0784313725490196
-    * jump *label289 equal *tmp334 false
-    * op greaterThan *tmp336 :updatePosition.38:value :findBestPosition:best
-    * jump *label291 equal *tmp336 false
+ 1055 jump *label289 greaterThanEq :updatePosition.38:value 0.0784313725490196
+ 1056 jump *label291 lessThanEq :updatePosition.38:value :findBestPosition:best
  1057 set :findDrillLocationLocal:diffX :updatePosition.38:dx
  1058 set :findDrillLocationLocal:diffY :updatePosition.38:dy
  1059 set :findBestPosition:best :updatePosition.38:value
 
  1067 set :updatePosition.39:dx 0.5
  1068 set :updatePosition.39:dy :updateRowPositions4x4.3:dy
  1069 set :updatePosition.39:value :updateRowPositions4x4.3:col3
-    * op lessThan *tmp338 :updatePosition.39:value 0.0784313725490196
-    * jump *label294 equal *tmp338 false
-    * op greaterThan *tmp340 :updatePosition.39:value :findBestPosition:best
-    * jump *label296 equal *tmp340 false
+ 1070 jump *label294 greaterThanEq :updatePosition.39:value 0.0784313725490196
+ 1071 jump *label296 lessThanEq :updatePosition.39:value :findBestPosition:best
  1072 set :findDrillLocationLocal:diffX :updatePosition.39:dx
  1073 set :findDrillLocationLocal:diffY :updatePosition.39:dy
  1074 set :findBestPosition:best :updatePosition.39:value
 
  1082 set :updatePosition.40:dx 1.5
  1083 set :updatePosition.40:dy :updateRowPositions4x4.3:dy
  1084 set :updatePosition.40:value :updateRowPositions4x4.3:col4
-    * op lessThan *tmp342 :updatePosition.40:value 0.0784313725490196
-    * jump *label299 equal *tmp342 false
-    * op greaterThan *tmp344 :updatePosition.40:value :findBestPosition:best
-    * jump *label301 equal *tmp344 false
+ 1085 jump *label299 greaterThanEq :updatePosition.40:value 0.0784313725490196
+ 1086 jump *label301 lessThanEq :updatePosition.40:value :findBestPosition:best
  1087 set :findDrillLocationLocal:diffX :updatePosition.40:dx
  1088 set :findDrillLocationLocal:diffY :updatePosition.40:dy
  1089 set :findBestPosition:best :updatePosition.40:value
 
  1102 set *tmp138 null
  1103 label *label75
  1104 set :findDrillLocationLocal:score *tmp138
-    * op greaterThan *tmp347 :findDrillLocationLocal:score :findDrillLocationLocal:capacity
-    * jump *label303 equal *tmp347 false
+ 1105 jump *label303 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:capacity
  1106 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1107 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1108 set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
-    * op lessThan *tmp351 :findDrillLocationLocal:limit 1000
-    * jump *label305 equal *tmp351 false
+ 1109 jump *label305 greaterThanEq :findDrillLocationLocal:limit 1000
  1110 set .mapSpots :findDrillLocationLocal:score
  1111 jump *label306 always
  1112 label *label305
  1113 label *label306
-    * op greaterThanEq *tmp353 :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
-    * jump *label307 equal *tmp353 false
+ 1114 jump *label307 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
  1115 set :saveLocation:item :findDrillLocationLocal:item
  1116 set :saveLocation:value :findDrillLocationLocal:score
  1117 set :saveLocation:x :findDrillLocationLocal:dx
 
  1137 jump *label304 always
  1138 label *label303
  1139 label *label304
-    * op greaterThan *tmp365 :findDrillLocationLocal:score :findDrillLocationLocal:best
-    * jump *label310 equal *tmp365 false
+ 1140 jump *label310 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
  1141 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1142 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1143 set :findDrillLocationLocal:best :findDrillLocationLocal:score
  1144 jump *label311 always
  1145 label *label310
  1146 label *label311
-    * op lessThanEq *tmp369 :findDrillLocationLocal:score :findDrillLocationLocal:last
-    * jump *label312 equal *tmp369 false
+ 1147 jump *label312 greaterThan :findDrillLocationLocal:score :findDrillLocationLocal:last
  1148 jump *label74 always
  1149 jump *label313 always
  1150 label *label312
 
  1165 op sub *tmp381 :findDrillLocationLocal:oreY .coreY
  1166 op abs *tmp382 *tmp381
  1167 op min *tmp383 *tmp380 *tmp382
-    * op lessThan *tmp384 *tmp383 7
-    * jump *label316 equal *tmp384 false
+ 1168 jump *label316 greaterThanEq *tmp383 7
  1169 jump *label74 always
  1170 jump *label317 always
  1171 label *label316
 
  1173 label *label73
  1174 jump *label72 always
  1175 label *label74
-    * op greaterThanEq *tmp386 :findDrillLocationLocal:best 0
-    * jump *label318 equal *tmp386 false
+ 1176 jump *label318 lessThan :findDrillLocationLocal:best 0
  1177 set :saveLocation.1:item :findDrillLocationLocal:item
  1178 set :saveLocation.1:value :findDrillLocationLocal:best
  1179 set :saveLocation.1:x :findDrillLocationLocal:bestX
 
  1210 set :moveTo.6:radius 6
  1211 label *label324
  1212 ucontrol within :moveTo.6:x :moveTo.6:y :moveTo.6:radius *tmp400
-    * op equal *tmp401 *tmp400 false
-    * jump *label326 equal *tmp401 false
+ 1213 jump *label326 notEqual *tmp400 false
  1214 op sub *tmp402 :moveTo.6:radius 0.5
  1215 ucontrol approach :moveTo.6:x :moveTo.6:y *tmp402
  1216 label *label325
 
  1261 label *label338
  1262 jump *label340 greaterThan :findPossiblePlacement:x 3
  1263 op and *tmp411 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
-    * op equal *tmp412 *tmp411 0
-    * jump *label341 equal *tmp412 false
+ 1264 jump *label341 notEqual *tmp411 0
  1265 op mul *tmp414 :findPossiblePlacement:y 7
  1266 op add *tmp415 24 *tmp414
  1267 op add :findPossiblePlacement*retval *tmp415 :findPossiblePlacement:x
 
  1270 label *label341
  1271 label *label342
  1272 op sub *tmp417 3 :findPossiblePlacement:width
-    * op greaterThan *tmp418 :findPossiblePlacement:x *tmp417
-    * jump *label343 equal *tmp418 false
+ 1273 jump *label343 lessThanEq :findPossiblePlacement:x *tmp417
  1274 jump *label340 always
  1275 jump *label344 always
  1276 label *label343
 
  1281 jump *label338 always
  1282 label *label340
  1283 op sub *tmp420 3 :findPossiblePlacement:height
-    * op greaterThan *tmp421 :findPossiblePlacement:y *tmp420
-    * jump *label345 equal *tmp421 false
+ 1284 jump *label345 lessThanEq :findPossiblePlacement:y *tmp420
  1285 jump *label337 always
  1286 jump *label346 always
  1287 label *label345
 
  1307 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1308 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1309 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op greaterThanEq *tmp424 :tryPlaceGenerator:shift 0
-    * jump *label349 equal *tmp424 false
-    * op lessThan *tmp426 :tryPlaceGenerator:shift 0
-    * jump *label351 equal *tmp426 false
+ 1310 jump *label349 lessThan :tryPlaceGenerator:shift 0
+ 1311 jump *label351 greaterThanEq :tryPlaceGenerator:shift 0
  1312 set :tryPlaceGenerator*retval false
  1313 jump *label347 always
  1314 jump *label352 always
 
  1336 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1337 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1338 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp438 :tryPlaceGenerator:shift 0
-    * jump *label354 equal *tmp438 false
+ 1339 jump *label354 greaterThanEq :tryPlaceGenerator:shift 0
  1340 set :tryPlaceGenerator*retval false
  1341 jump *label347 always
  1342 jump *label355 always
 
  1363 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1364 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1365 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp450 :tryPlaceGenerator:shift 0
-    * jump *label357 equal *tmp450 false
+ 1366 jump *label357 greaterThanEq :tryPlaceGenerator:shift 0
  1367 set :tryPlaceGenerator*retval false
  1368 jump *label347 always
  1369 jump *label358 always
 
  1383 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1384 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1385 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp456 :tryPlaceGenerator:shift 0
-    * jump *label360 equal *tmp456 false
+ 1386 jump *label360 greaterThanEq :tryPlaceGenerator:shift 0
  1387 set :tryPlaceGenerator*retval false
  1388 jump *label347 always
  1389 jump *label361 always
 
  1403 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1404 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1405 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp462 :tryPlaceGenerator:shift 0
-    * jump *label363 equal *tmp462 false
+ 1406 jump *label363 greaterThanEq :tryPlaceGenerator:shift 0
  1407 set :tryPlaceGenerator*retval false
  1408 jump *label347 always
  1409 jump *label364 always
 
  1495 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1496 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
  1497 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
-    * op greaterThanEq *tmp503 :layoutThoriumDrillAtLocation:shift 0
-    * jump *label371 equal *tmp503 false
+ 1498 jump *label371 lessThan :layoutThoriumDrillAtLocation:shift 0
  1499 op add *tmp505 .drillX 0.5
  1500 op add .water1X *tmp505 :layoutThoriumDrillAtLocation:c
  1501 op add *tmp507 .drillY 0.5
 
  1517 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1518 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
  1519 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
-    * op greaterThanEq *tmp512 :layoutThoriumDrillAtLocation:shift 0
-    * jump *label374 equal *tmp512 false
+ 1520 jump *label374 lessThan :layoutThoriumDrillAtLocation:shift 0
  1521 op add *tmp514 .drillX 0.5
  1522 op add .containerX *tmp514 :layoutThoriumDrillAtLocation:c
  1523 op add *tmp516 .drillY 0.5
 
  1604 label *label391
  1605 op mul *tmp544 7 :shiftMask:shiftY
  1606 op add :shiftMask:shift :shiftMask:shiftX *tmp544
-    * op greaterThan *tmp546 :shiftMask:shift 0
-    * jump *label392 equal *tmp546 false
+ 1607 jump *label392 lessThanEq :shiftMask:shift 0
  1608 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
  1609 op and *tmp549 :shiftMask:mask :shiftMask:clearMask
  1610 op shl :shiftMask:mask *tmp549 :shiftMask:shift
 
  1613 op sub *tmp551 0 :shiftMask:shift
  1614 op shr :shiftMask:mask :shiftMask:mask *tmp551
  1615 label *label393
-    * op notEqual *tmp552 :shiftMask:shiftX 0
-    * jump *label394 equal *tmp552 false
+ 1616 jump *label394 equal :shiftMask:shiftX 0
  1617 op abs *tmp554 :shiftMask:shiftX
  1618 op sub *tmp555 7 *tmp554
  1619 op shr :shiftMask:keep 0b1111111 *tmp555
-    * op greaterThan *tmp557 :shiftMask:shiftX 0
-    * jump *label396 equal *tmp557 false
+ 1620 jump *label396 lessThanEq :shiftMask:shiftX 0
  1621 op abs *tmp559 :shiftMask:shiftX
  1622 op sub *tmp560 7 *tmp559
  1623 op shl :shiftMask:keep :shiftMask:keep *tmp560
 
  1700 label *label404
  1701 set .drillX :findDrillLocationLocal:dx
  1702 set .drillY :findDrillLocationLocal:dy
-    * op equal *tmp569 :findDrillLocationLocal*retval false
-    * jump *label405 equal *tmp569 false
+ 1703 jump *label405 notEqual :findDrillLocationLocal*retval false
  1704 set :layoutThoriumDrill*retval false
  1705 jump *label403 always
  1706 jump *label406 always

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-114 instructions):
 
   231 jump *label45 notEqual *tmp89 false
   232 set *tmp63 false
   233 jump *label35 always
-    * jump *label46 always
   234 label *label45
   235 label *label46
   236 op sub *tmp93 :locateOreAway:x .coreX
 
   244 jump *label47 notEqual :locateOreAway:lastX :locateOreAway:x
   245 jump *label49 notEqual :locateOreAway:lastY :locateOreAway:y
   246 jump *label37 always
-    * jump *label50 always
   247 label *label49
   248 label *label50
-    * jump *label48 always
   249 label *label47
   250 label *label48
   251 jump *label51 lessThan :locateOreAway:coreDist 7
 
   269 jump *label59 greaterThanEq *tmp120 7
   270 set *tmp109 true
   271 jump *label55 always
-    * jump *label60 always
   272 label *label59
   273 label *label60
   274 label *label57
 
   286 printflush message1
   287 set *tmp63 true
   288 jump *label35 always
-    * jump *label62 always
   289 label *label61
   290 label *label62
-    * jump *label54 always
   291 label *label53
   292 label *label54
-    * jump *label52 always
   293 label *label51
   294 label *label52
   295 label *label37
 
   304 jump *label63 notEqual *tmp63 false
   305 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   306 jump *label26 always
-    * jump *label64 always
   307 label *label63
   308 label *label64
   309 jump *label65 lessThan :findDrillLocationLocal:limit 1000
   310 op add .mapSpots .mapSpots 1
-    * jump *label66 always
   311 label *label65
   312 label *label66
   313 set :moveTo.3:x :findDrillLocationLocal:oreX
 
   397 set :findDrillLocationLocal:diffX :updatePosition:dx
   398 set :findDrillLocationLocal:diffY :updatePosition:dy
   399 set :findBestPosition:best :updatePosition:value
-    * jump *label88 always
   400 label *label87
   401 label *label88
-    * jump *label86 always
   402 label *label85
   403 label *label86
   404 label *label84
 
   410 set :findDrillLocationLocal:diffX :updatePosition.1:dx
   411 set :findDrillLocationLocal:diffY :updatePosition.1:dy
   412 set :findBestPosition:best :updatePosition.1:value
-    * jump *label93 always
   413 label *label92
   414 label *label93
-    * jump *label91 always
   415 label *label90
   416 label *label91
   417 label *label89
 
   423 set :findDrillLocationLocal:diffX :updatePosition.2:dx
   424 set :findDrillLocationLocal:diffY :updatePosition.2:dy
   425 set :findBestPosition:best :updatePosition.2:value
-    * jump *label98 always
   426 label *label97
   427 label *label98
-    * jump *label96 always
   428 label *label95
   429 label *label96
   430 label *label94
 
   436 set :findDrillLocationLocal:diffX :updatePosition.3:dx
   437 set :findDrillLocationLocal:diffY :updatePosition.3:dy
   438 set :findBestPosition:best :updatePosition.3:value
-    * jump *label103 always
   439 label *label102
   440 label *label103
-    * jump *label101 always
   441 label *label100
   442 label *label101
   443 label *label99
 
   453 set :findDrillLocationLocal:diffX :updatePosition.4:dx
   454 set :findDrillLocationLocal:diffY :updatePosition.4:dy
   455 set :findBestPosition:best :updatePosition.4:value
-    * jump *label109 always
   456 label *label108
   457 label *label109
-    * jump *label107 always
   458 label *label106
   459 label *label107
   460 label *label105
 
   466 set :findDrillLocationLocal:diffX :updatePosition.5:dx
   467 set :findDrillLocationLocal:diffY :updatePosition.5:dy
   468 set :findBestPosition:best :updatePosition.5:value
-    * jump *label114 always
   469 label *label113
   470 label *label114
-    * jump *label112 always
   471 label *label111
   472 label *label112
   473 label *label110
 
   479 set :findDrillLocationLocal:diffX :updatePosition.6:dx
   480 set :findDrillLocationLocal:diffY :updatePosition.6:dy
   481 set :findBestPosition:best :updatePosition.6:value
-    * jump *label119 always
   482 label *label118
   483 label *label119
-    * jump *label117 always
   484 label *label116
   485 label *label117
   486 label *label115
 
   492 set :findDrillLocationLocal:diffX :updatePosition.7:dx
   493 set :findDrillLocationLocal:diffY :updatePosition.7:dy
   494 set :findBestPosition:best :updatePosition.7:value
-    * jump *label124 always
   495 label *label123
   496 label *label124
-    * jump *label122 always
   497 label *label121
   498 label *label122
   499 label *label120
 
   509 set :findDrillLocationLocal:diffX :updatePosition.8:dx
   510 set :findDrillLocationLocal:diffY :updatePosition.8:dy
   511 set :findBestPosition:best :updatePosition.8:value
-    * jump *label130 always
   512 label *label129
   513 label *label130
-    * jump *label128 always
   514 label *label127
   515 label *label128
   516 label *label126
 
   522 set :findDrillLocationLocal:diffX :updatePosition.9:dx
   523 set :findDrillLocationLocal:diffY :updatePosition.9:dy
   524 set :findBestPosition:best :updatePosition.9:value
-    * jump *label135 always
   525 label *label134
   526 label *label135
-    * jump *label133 always
   527 label *label132
   528 label *label133
   529 label *label131
 
   535 set :findDrillLocationLocal:diffX :updatePosition.10:dx
   536 set :findDrillLocationLocal:diffY :updatePosition.10:dy
   537 set :findBestPosition:best :updatePosition.10:value
-    * jump *label140 always
   538 label *label139
   539 label *label140
-    * jump *label138 always
   540 label *label137
   541 label *label138
   542 label *label136
 
   548 set :findDrillLocationLocal:diffX :updatePosition.11:dx
   549 set :findDrillLocationLocal:diffY :updatePosition.11:dy
   550 set :findBestPosition:best :updatePosition.11:value
-    * jump *label145 always
   551 label *label144
   552 label *label145
-    * jump *label143 always
   553 label *label142
   554 label *label143
   555 label *label141
 
   565 set :findDrillLocationLocal:diffX :updatePosition.12:dx
   566 set :findDrillLocationLocal:diffY :updatePosition.12:dy
   567 set :findBestPosition:best :updatePosition.12:value
-    * jump *label151 always
   568 label *label150
   569 label *label151
-    * jump *label149 always
   570 label *label148
   571 label *label149
   572 label *label147
 
   578 set :findDrillLocationLocal:diffX :updatePosition.13:dx
   579 set :findDrillLocationLocal:diffY :updatePosition.13:dy
   580 set :findBestPosition:best :updatePosition.13:value
-    * jump *label156 always
   581 label *label155
   582 label *label156
-    * jump *label154 always
   583 label *label153
   584 label *label154
   585 label *label152
 
   591 set :findDrillLocationLocal:diffX :updatePosition.14:dx
   592 set :findDrillLocationLocal:diffY :updatePosition.14:dy
   593 set :findBestPosition:best :updatePosition.14:value
-    * jump *label161 always
   594 label *label160
   595 label *label161
-    * jump *label159 always
   596 label *label158
   597 label *label159
   598 label *label157
 
   604 set :findDrillLocationLocal:diffX :updatePosition.15:dx
   605 set :findDrillLocationLocal:diffY :updatePosition.15:dy
   606 set :findBestPosition:best :updatePosition.15:value
-    * jump *label166 always
   607 label *label165
   608 label *label166
-    * jump *label164 always
   609 label *label163
   610 label *label164
   611 label *label162
 
   630 set :findDrillLocationLocal:diffX :updatePosition.16:dx
   631 set :findDrillLocationLocal:diffY :updatePosition.16:dy
   632 set :findBestPosition:best :updatePosition.16:value
-    * jump *label174 always
   633 label *label173
   634 label *label174
-    * jump *label172 always
   635 label *label171
   636 label *label172
   637 label *label170
 
   643 set :findDrillLocationLocal:diffX :updatePosition.17:dx
   644 set :findDrillLocationLocal:diffY :updatePosition.17:dy
   645 set :findBestPosition:best :updatePosition.17:value
-    * jump *label179 always
   646 label *label178
   647 label *label179
-    * jump *label177 always
   648 label *label176
   649 label *label177
   650 label *label175
 
   656 set :findDrillLocationLocal:diffX :updatePosition.18:dx
   657 set :findDrillLocationLocal:diffY :updatePosition.18:dy
   658 set :findBestPosition:best :updatePosition.18:value
-    * jump *label184 always
   659 label *label183
   660 label *label184
-    * jump *label182 always
   661 label *label181
   662 label *label182
   663 label *label180
 
   673 set :findDrillLocationLocal:diffX :updatePosition.19:dx
   674 set :findDrillLocationLocal:diffY :updatePosition.19:dy
   675 set :findBestPosition:best :updatePosition.19:value
-    * jump *label190 always
   676 label *label189
   677 label *label190
-    * jump *label188 always
   678 label *label187
   679 label *label188
   680 label *label186
 
   686 set :findDrillLocationLocal:diffX :updatePosition.20:dx
   687 set :findDrillLocationLocal:diffY :updatePosition.20:dy
   688 set :findBestPosition:best :updatePosition.20:value
-    * jump *label195 always
   689 label *label194
   690 label *label195
-    * jump *label193 always
   691 label *label192
   692 label *label193
   693 label *label191
 
   699 set :findDrillLocationLocal:diffX :updatePosition.21:dx
   700 set :findDrillLocationLocal:diffY :updatePosition.21:dy
   701 set :findBestPosition:best :updatePosition.21:value
-    * jump *label200 always
   702 label *label199
   703 label *label200
-    * jump *label198 always
   704 label *label197
   705 label *label198
   706 label *label196
 
   716 set :findDrillLocationLocal:diffX :updatePosition.22:dx
   717 set :findDrillLocationLocal:diffY :updatePosition.22:dy
   718 set :findBestPosition:best :updatePosition.22:value
-    * jump *label206 always
   719 label *label205
   720 label *label206
-    * jump *label204 always
   721 label *label203
   722 label *label204
   723 label *label202
 
   729 set :findDrillLocationLocal:diffX :updatePosition.23:dx
   730 set :findDrillLocationLocal:diffY :updatePosition.23:dy
   731 set :findBestPosition:best :updatePosition.23:value
-    * jump *label211 always
   732 label *label210
   733 label *label211
-    * jump *label209 always
   734 label *label208
   735 label *label209
   736 label *label207
 
   742 set :findDrillLocationLocal:diffX :updatePosition.24:dx
   743 set :findDrillLocationLocal:diffY :updatePosition.24:dy
   744 set :findBestPosition:best :updatePosition.24:value
-    * jump *label216 always
   745 label *label215
   746 label *label216
-    * jump *label214 always
   747 label *label213
   748 label *label214
   749 label *label212
 
   791 set :findDrillLocationLocal:diffX :updatePosition.25:dx
   792 set :findDrillLocationLocal:diffY :updatePosition.25:dy
   793 set :findBestPosition:best :updatePosition.25:value
-    * jump *label224 always
   794 label *label223
   795 label *label224
-    * jump *label222 always
   796 label *label221
   797 label *label222
   798 label *label220
 
   804 set :findDrillLocationLocal:diffX :updatePosition.26:dx
   805 set :findDrillLocationLocal:diffY :updatePosition.26:dy
   806 set :findBestPosition:best :updatePosition.26:value
-    * jump *label229 always
   807 label *label228
   808 label *label229
-    * jump *label227 always
   809 label *label226
   810 label *label227
   811 label *label225
 
   817 set :findDrillLocationLocal:diffX :updatePosition.27:dx
   818 set :findDrillLocationLocal:diffY :updatePosition.27:dy
   819 set :findBestPosition:best :updatePosition.27:value
-    * jump *label234 always
   820 label *label233
   821 label *label234
-    * jump *label232 always
   822 label *label231
   823 label *label232
   824 label *label230
 
   830 set :findDrillLocationLocal:diffX :updatePosition.28:dx
   831 set :findDrillLocationLocal:diffY :updatePosition.28:dy
   832 set :findBestPosition:best :updatePosition.28:value
-    * jump *label239 always
   833 label *label238
   834 label *label239
-    * jump *label237 always
   835 label *label236
   836 label *label237
   837 label *label235
 
   847 set :findDrillLocationLocal:diffX :updatePosition.29:dx
   848 set :findDrillLocationLocal:diffY :updatePosition.29:dy
   849 set :findBestPosition:best :updatePosition.29:value
-    * jump *label245 always
   850 label *label244
   851 label *label245
-    * jump *label243 always
   852 label *label242
   853 label *label243
   854 label *label241
 
   860 set :findDrillLocationLocal:diffX :updatePosition.30:dx
   861 set :findDrillLocationLocal:diffY :updatePosition.30:dy
   862 set :findBestPosition:best :updatePosition.30:value
-    * jump *label250 always
   863 label *label249
   864 label *label250
-    * jump *label248 always
   865 label *label247
   866 label *label248
   867 label *label246
 
   873 set :findDrillLocationLocal:diffX :updatePosition.31:dx
   874 set :findDrillLocationLocal:diffY :updatePosition.31:dy
   875 set :findBestPosition:best :updatePosition.31:value
-    * jump *label255 always
   876 label *label254
   877 label *label255
-    * jump *label253 always
   878 label *label252
   879 label *label253
   880 label *label251
 
   886 set :findDrillLocationLocal:diffX :updatePosition.32:dx
   887 set :findDrillLocationLocal:diffY :updatePosition.32:dy
   888 set :findBestPosition:best :updatePosition.32:value
-    * jump *label260 always
   889 label *label259
   890 label *label260
-    * jump *label258 always
   891 label *label257
   892 label *label258
   893 label *label256
 
   903 set :findDrillLocationLocal:diffX :updatePosition.33:dx
   904 set :findDrillLocationLocal:diffY :updatePosition.33:dy
   905 set :findBestPosition:best :updatePosition.33:value
-    * jump *label266 always
   906 label *label265
   907 label *label266
-    * jump *label264 always
   908 label *label263
   909 label *label264
   910 label *label262
 
   916 set :findDrillLocationLocal:diffX :updatePosition.34:dx
   917 set :findDrillLocationLocal:diffY :updatePosition.34:dy
   918 set :findBestPosition:best :updatePosition.34:value
-    * jump *label271 always
   919 label *label270
   920 label *label271
-    * jump *label269 always
   921 label *label268
   922 label *label269
   923 label *label267
 
   929 set :findDrillLocationLocal:diffX :updatePosition.35:dx
   930 set :findDrillLocationLocal:diffY :updatePosition.35:dy
   931 set :findBestPosition:best :updatePosition.35:value
-    * jump *label276 always
   932 label *label275
   933 label *label276
-    * jump *label274 always
   934 label *label273
   935 label *label274
   936 label *label272
 
   942 set :findDrillLocationLocal:diffX :updatePosition.36:dx
   943 set :findDrillLocationLocal:diffY :updatePosition.36:dy
   944 set :findBestPosition:best :updatePosition.36:value
-    * jump *label281 always
   945 label *label280
   946 label *label281
-    * jump *label279 always
   947 label *label278
   948 label *label279
   949 label *label277
 
   959 set :findDrillLocationLocal:diffX :updatePosition.37:dx
   960 set :findDrillLocationLocal:diffY :updatePosition.37:dy
   961 set :findBestPosition:best :updatePosition.37:value
-    * jump *label287 always
   962 label *label286
   963 label *label287
-    * jump *label285 always
   964 label *label284
   965 label *label285
   966 label *label283
 
   972 set :findDrillLocationLocal:diffX :updatePosition.38:dx
   973 set :findDrillLocationLocal:diffY :updatePosition.38:dy
   974 set :findBestPosition:best :updatePosition.38:value
-    * jump *label292 always
   975 label *label291
   976 label *label292
-    * jump *label290 always
   977 label *label289
   978 label *label290
   979 label *label288
 
   985 set :findDrillLocationLocal:diffX :updatePosition.39:dx
   986 set :findDrillLocationLocal:diffY :updatePosition.39:dy
   987 set :findBestPosition:best :updatePosition.39:value
-    * jump *label297 always
   988 label *label296
   989 label *label297
-    * jump *label295 always
   990 label *label294
   991 label *label295
   992 label *label293
 
   998 set :findDrillLocationLocal:diffX :updatePosition.40:dx
   999 set :findDrillLocationLocal:diffY :updatePosition.40:dy
  1000 set :findBestPosition:best :updatePosition.40:value
-    * jump *label302 always
  1001 label *label301
  1002 label *label302
-    * jump *label300 always
  1003 label *label299
  1004 label *label300
  1005 label *label298
 
  1017 set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
  1018 jump *label305 greaterThanEq :findDrillLocationLocal:limit 1000
  1019 set .mapSpots :findDrillLocationLocal:score
-    * jump *label306 always
  1020 label *label305
  1021 label *label306
  1022 jump *label307 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
 
  1039 ucontrol unbind
  1040 set :findDrillLocationLocal*retval true
  1041 jump *label26 always
-    * jump *label308 always
  1042 label *label307
  1043 label *label308
-    * jump *label304 always
  1044 label *label303
  1045 label *label304
  1046 jump *label310 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
  1047 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1048 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1049 set :findDrillLocationLocal:best :findDrillLocationLocal:score
-    * jump *label311 always
  1050 label *label310
  1051 label *label311
  1052 jump *label312 greaterThan :findDrillLocationLocal:score :findDrillLocationLocal:last
  1053 jump *label74 always
-    * jump *label313 always
  1054 label *label312
  1055 label *label313
  1056 set :findDrillLocationLocal:last :findDrillLocationLocal:score
 
  1071 op min *tmp383 *tmp380 *tmp382
  1072 jump *label316 greaterThanEq *tmp383 7
  1073 jump *label74 always
-    * jump *label317 always
  1074 label *label316
  1075 label *label317
  1076 label *label73
 
  1093 write :saveLocation.1:y bank1 .count
  1094 op add .locations .locations 1
  1095 label *label320
-    * jump *label319 always
  1096 label *label318
  1097 label *label319
  1098 label *label33
 
  1168 op add *tmp415 24 *tmp414
  1169 op add :findPossiblePlacement*retval *tmp415 :findPossiblePlacement:x
  1170 jump *label334 always
-    * jump *label342 always
  1171 label *label341
  1172 label *label342
  1173 op sub *tmp417 3 :findPossiblePlacement:width
  1174 jump *label343 lessThanEq :findPossiblePlacement:x *tmp417
  1175 jump *label340 always
-    * jump *label344 always
  1176 label *label343
  1177 label *label344
  1178 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
 
  1183 op sub *tmp420 3 :findPossiblePlacement:height
  1184 jump *label345 lessThanEq :findPossiblePlacement:y *tmp420
  1185 jump *label337 always
-    * jump *label346 always
  1186 label *label345
  1187 label *label346
  1188 label *label336
 
  1210 jump *label351 greaterThanEq :tryPlaceGenerator:shift 0
  1211 set :tryPlaceGenerator*retval false
  1212 jump *label347 always
-    * jump *label352 always
  1213 label *label351
  1214 label *label352
  1215 op add *tmp428 :tryPlaceGenerator:centerX 0.5
 
  1237 jump *label354 greaterThanEq :tryPlaceGenerator:shift 0
  1238 set :tryPlaceGenerator*retval false
  1239 jump *label347 always
-    * jump *label355 always
  1240 label *label354
  1241 label *label355
  1242 op add *tmp440 :tryPlaceGenerator:centerX 0.5
 
  1263 jump *label357 greaterThanEq :tryPlaceGenerator:shift 0
  1264 set :tryPlaceGenerator*retval false
  1265 jump *label347 always
-    * jump *label358 always
  1266 label *label357
  1267 label *label358
  1268 op add .nodeX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
 
  1282 jump *label360 greaterThanEq :tryPlaceGenerator:shift 0
  1283 set :tryPlaceGenerator*retval false
  1284 jump *label347 always
-    * jump *label361 always
  1285 label *label360
  1286 label *label361
  1287 op add .panelX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
 
  1301 jump *label363 greaterThanEq :tryPlaceGenerator:shift 0
  1302 set :tryPlaceGenerator*retval false
  1303 jump *label347 always
-    * jump *label364 always
  1304 label *label363
  1305 label *label364
  1306 op add .batteryX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
 
  1398 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp509
  1399 op shl *tmp510 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
  1400 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:cornersMask *tmp510
-    * jump *label372 always
  1401 label *label371
  1402 label *label372
  1403 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
 
  1417 op add .containerY *tmp516 :layoutThoriumDrillAtLocation:r
  1418 op shl *tmp518 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
  1419 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp518
-    * jump *label375 always
  1420 label *label374
  1421 label *label375
  1422 set :createFixedMatrix.3:row0 0b1111
 
  1450 jump *label379 equal :tryPlaceGenerator*retval false
  1451 set :layoutThoriumDrillAtLocation*retval true
  1452 jump *label365 always
-    * jump *label380 always
  1453 label *label379
  1454 label *label380
  1455 set :layoutThoriumDrillAtLocation:sx 3
 
  1490 jump *label390 equal *tmp542 false
  1491 set *tmp537 0
  1492 jump *label389 always
-    * jump *label391 always
  1493 label *label390
  1494 label *label391
  1495 op mul *tmp544 7 :shiftMask:shiftY
 
  1511 op abs *tmp559 :shiftMask:shiftX
  1512 op sub *tmp560 7 *tmp559
  1513 op shl :shiftMask:keep :shiftMask:keep *tmp560
-    * jump *label397 always
  1514 label *label396
  1515 label *label397
  1516 op shl *tmp561 :shiftMask:keep 7
 
  1520 op shl *tmp563 :shiftMask:keep 21
  1521 op or :shiftMask:keep :shiftMask:keep *tmp563
  1522 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
-    * jump *label395 always
  1523 label *label394
  1524 label *label395
  1525 set *tmp537 :shiftMask:mask
 
  1541 jump *label399 equal :tryPlaceGenerator*retval false
  1542 set :layoutThoriumDrillAtLocation*retval true
  1543 jump *label365 always
-    * jump *label400 always
  1544 label *label399
  1545 label *label400
  1546 label *label382
 
  1590 jump *label405 notEqual :findDrillLocationLocal*retval false
  1591 set :layoutThoriumDrill*retval false
  1592 jump *label403 always
-    * jump *label406 always
  1593 label *label405
  1594 label *label406
  1595 setaddr :layoutThoriumDrillAtLocation*retaddr *label407 (h:*label407)

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1:
 
    31 set *tmp3 :spotValue.1:result
    32 label *label16
    33 set :computeRowValues:x2 *tmp3
-    * op add :spotValue.2:x :computeRowValues:x 0
+   34 set :spotValue.2:x :computeRowValues:x
    35 set :spotValue.2:y :computeRowValues:y
    36 set :spotValue.2:ore :computeRowValues:ore
    37 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
 
   351 call *label6 *invalid :computeRowValues*retval (m:*label77) (h:*label77)
   352 label *label77
   353 set :findBestPosition:y2 :computeRowValues*retval
-    * op add *tmp143 :findBestPosition:y 0
+  354 set *tmp143 :findBestPosition:y
   355 set :computeRowValues:x :findBestPosition:x
   356 set :computeRowValues:y *tmp143
   357 set :computeRowValues:ore :findBestPosition:ore
 
  1335 set :createFixedMatrix:row4 0b0011100
  1336 set :createFixedMatrix:row5 0b0000000
  1337 set :createFixedMatrix:row6 0b0000000
-    * op shl *tmp469 :createFixedMatrix:row0 0
+ 1338 set *tmp469 :createFixedMatrix:row0
  1339 op shl *tmp470 :createFixedMatrix:row1 7
  1340 op or *tmp471 *tmp469 *tmp470
  1341 op shl *tmp472 :createFixedMatrix:row2 14
 
  1357 set :createFixedMatrix.1:row4 0b0011100
  1358 set :createFixedMatrix.1:row5 0b0000000
  1359 set :createFixedMatrix.1:row6 0b1000001
-    * op shl *tmp484 :createFixedMatrix.1:row0 0
+ 1360 set *tmp484 :createFixedMatrix.1:row0
  1361 op shl *tmp485 :createFixedMatrix.1:row1 7
  1362 op or *tmp486 *tmp484 *tmp485
  1363 op shl *tmp487 :createFixedMatrix.1:row2 14
 
  1374 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp483
  1375 set :createFixedMatrix.2:row0 0b11
  1376 set :createFixedMatrix.2:row1 0b11
-    * op shl *tmp499 :createFixedMatrix.2:row0 0
+ 1377 set *tmp499 :createFixedMatrix.2:row0
  1378 op shl *tmp500 :createFixedMatrix.2:row1 7
  1379 op or *tmp498 *tmp499 *tmp500
  1380 label *label369
 
  1421 label *label375
  1422 set :createFixedMatrix.3:row0 0b1111
  1423 set :createFixedMatrix.3:row1 0b1111
-    * op shl *tmp520 :createFixedMatrix.3:row0 0
+ 1424 set *tmp520 :createFixedMatrix.3:row0
  1425 op shl *tmp521 :createFixedMatrix.3:row1 7
  1426 op or *tmp519 *tmp520 *tmp521
  1427 label *label376
 
  1430 set :createFixedMatrix.4:row1 0b11
  1431 set :createFixedMatrix.4:row2 0b11
  1432 set :createFixedMatrix.4:row3 0b11
-    * op shl *tmp524 :createFixedMatrix.4:row0 0
+ 1433 set *tmp524 :createFixedMatrix.4:row0
  1434 op shl *tmp525 :createFixedMatrix.4:row1 7
  1435 op or *tmp526 *tmp524 *tmp525
  1436 op shl *tmp527 :createFixedMatrix.4:row2 14

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-12 instructions):
 
    20 select :spotValue:result notEqual solid false 0.09803921568627451 value
    21 set *tmp1 :spotValue:result
    22 label *label15
-    * set :computeRowValues:x1 *tmp1
+   23 set :computeRowValues:x1 :spotValue:result
    24 op sub :spotValue.1:x :computeRowValues:x 1
    25 set :spotValue.1:y :computeRowValues:y
    26 set :spotValue.1:ore :computeRowValues:ore
 
    30 select :spotValue.1:result notEqual solid false 0.09803921568627451 value
    31 set *tmp3 :spotValue.1:result
    32 label *label16
-    * set :computeRowValues:x2 *tmp3
+   33 set :computeRowValues:x2 :spotValue.1:result
    34 set :spotValue.2:x :computeRowValues:x
    35 set :spotValue.2:y :computeRowValues:y
    36 set :spotValue.2:ore :computeRowValues:ore
 
    40 select :spotValue.2:result notEqual solid false 0.09803921568627451 value
    41 set *tmp5 :spotValue.2:result
    42 label *label17
-    * set :computeRowValues:x3 *tmp5
+   43 set :computeRowValues:x3 :spotValue.2:result
    44 op add :spotValue.3:x :computeRowValues:x 1
    45 set :spotValue.3:y :computeRowValues:y
    46 set :spotValue.3:ore :computeRowValues:ore
 
    50 select :spotValue.3:result notEqual solid false 0.09803921568627451 value
    51 set *tmp7 :spotValue.3:result
    52 label *label18
-    * set :computeRowValues:x4 *tmp7
+   53 set :computeRowValues:x4 :spotValue.3:result
    54 op add :spotValue.4:x :computeRowValues:x 2
    55 set :spotValue.4:y :computeRowValues:y
    56 set :spotValue.4:ore :computeRowValues:ore
 
    60 select :spotValue.4:result notEqual solid false 0.09803921568627451 value
    61 set *tmp9 :spotValue.4:result
    62 label *label19
-    * set :computeRowValues:x5 *tmp9
+   63 set :computeRowValues:x5 :spotValue.4:result
    64 jump *label20 notEqual :computeRowValues:size 2
-    * op add *tmp12 :computeRowValues:x1 :computeRowValues:x2
-    * op add *tmp13 :computeRowValues:x2 :computeRowValues:x3
-    * op add *tmp14 :computeRowValues:x3 :computeRowValues:x4
-    * op add *tmp15 :computeRowValues:x4 :computeRowValues:x5
+   65 op add *tmp12 *tmp1 *tmp3
+   66 op add *tmp13 *tmp3 *tmp5
+   67 op add *tmp14 *tmp5 *tmp7
+   68 op add *tmp15 *tmp7 *tmp9
    69 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
    70 jump *label14 always
-    * set *tmp11 null
    71 jump *label21 always
    72 label *label20
    73 jump *label22 notEqual :computeRowValues:size 3
-    * op add *tmp19 :computeRowValues:x2 :computeRowValues:x3
-    * op add *tmp20 :computeRowValues:x1 *tmp19
-    * op add *tmp21 :computeRowValues:x2 :computeRowValues:x3
-    * op add *tmp22 *tmp21 :computeRowValues:x4
-    * op add *tmp23 :computeRowValues:x3 :computeRowValues:x4
-    * op add *tmp24 *tmp23 :computeRowValues:x5
+   74 op add *tmp19 *tmp3 *tmp5
+   75 op add *tmp20 *tmp1 *tmp19
+   76 op add *tmp21 *tmp3 *tmp5
+   77 op add *tmp22 *tmp19 *tmp7
+   78 op add *tmp23 *tmp5 *tmp7
+   79 op add *tmp24 *tmp23 *tmp9
    80 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
    81 jump *label14 always
-    * set *tmp18 null
    82 jump *label23 always
    83 label *label22
    84 op sub :spotValue.5:x :computeRowValues:x 3
 
    90 select :spotValue.5:result notEqual solid false 0.09803921568627451 value
    91 set *tmp27 :spotValue.5:result
    92 label *label24
-    * set :computeRowValues:x0 *tmp27
+   93 set :computeRowValues:x0 :spotValue.5:result
    94 op add :spotValue.6:x :computeRowValues:x 3
    95 set :spotValue.6:y :computeRowValues:y
    96 set :spotValue.6:ore :computeRowValues:ore
 
   100 select :spotValue.6:result notEqual solid false 0.09803921568627451 value
   101 set *tmp29 :spotValue.6:result
   102 label *label25
-    * set :computeRowValues:x6 *tmp29
-    * op add *tmp30 :computeRowValues:x1 :computeRowValues:x2
-    * op add *tmp31 *tmp30 :computeRowValues:x3
-    * op add *tmp32 :computeRowValues:x0 *tmp31
+  103 set :computeRowValues:x6 :spotValue.6:result
+  104 op add *tmp30 *tmp1 *tmp3
+  105 op add *tmp31 *tmp30 *tmp5
+  106 op add *tmp32 *tmp27 *tmp31
   107 op min *tmp33 0.09803921568627451 *tmp32
-    * op add *tmp34 :computeRowValues:x1 :computeRowValues:x2
-    * op add *tmp35 *tmp34 :computeRowValues:x3
-    * op add *tmp36 *tmp35 :computeRowValues:x4
+  108 op add *tmp34 *tmp1 *tmp3
+  109 op add *tmp35 *tmp30 *tmp5
+  110 op add *tmp36 *tmp31 *tmp7
   111 op min *tmp37 0.09803921568627451 *tmp36
-    * op add *tmp38 :computeRowValues:x3 :computeRowValues:x4
-    * op add *tmp39 *tmp38 :computeRowValues:x5
-    * op add *tmp40 :computeRowValues:x2 *tmp39
+  112 op add *tmp38 *tmp5 *tmp7
+  113 op add *tmp39 *tmp38 *tmp9
+  114 op add *tmp40 *tmp3 *tmp39
   115 op min *tmp41 0.09803921568627451 *tmp40
-    * op add *tmp42 :computeRowValues:x3 :computeRowValues:x4
-    * op add *tmp43 *tmp42 :computeRowValues:x5
-    * op add *tmp44 *tmp43 :computeRowValues:x6
+  116 op add *tmp42 *tmp5 *tmp7
+  117 op add *tmp43 *tmp38 *tmp9
+  118 op add *tmp44 *tmp39 *tmp29
   119 op min *tmp45 0.09803921568627451 *tmp44
   120 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
   121 jump *label14 always
-    * set *tmp18 null
   122 label *label23
-    * set *tmp11 *tmp18
+  123 set *tmp11 null
   124 label *label21
-    * set :computeRowValues*retval *tmp11
+  125 set :computeRowValues*retval null
   126 label *label14
   127 return :computeRowValues*retaddr
   128 end
 
   135 set :findDrillLocationLocal:dy :findDrillLocationLocal:capacity
   136 set :findDrillLocationLocal:dx :findDrillLocationLocal:dy
   137 set .mapSpots :findDrillLocationLocal:dx
-    * op sub *tmp48 @mapw .coreX
-    * op sub *tmp49 @maph .coreY
-    * op max *tmp50 .coreX .coreY
+  138 op sub *tmp48 @mapw :findDrillLocationLocal:x
+  139 op sub *tmp49 @maph :findDrillLocationLocal:y
+  140 op max *tmp50 :findDrillLocationLocal:x :findDrillLocationLocal:y
   141 op max *tmp50 *tmp50 *tmp48
   142 op max *tmp50 *tmp50 *tmp49
   143 set :findDrillLocationLocal:distanceLimit *tmp50
   144 set .mapAction "Locating ore..."
   145 set .angle 0
-    * set .mapProgress .angle
-    * set :moveTo:x .coreX
-    * set :moveTo:y .coreY
-    * set *tmp51 :moveTo:x
-    * set *tmp52 :moveTo:y
-    * set :moveTo.1:x *tmp51
-    * set :moveTo.1:y *tmp52
+  146 set .mapProgress 0
+  147 set :moveTo:x :findDrillLocationLocal:x
+  148 set :moveTo:y :findDrillLocationLocal:y
+  149 set *tmp51 .coreX
+  150 set *tmp52 .coreY
+  151 set :moveTo.1:x :moveTo:x
+  152 set :moveTo.1:y :moveTo:y
   153 set :moveTo.1:radius 6
   154 label *label29
-    * ucontrol within :moveTo.1:x :moveTo.1:y :moveTo.1:radius *tmp53
+  155 ucontrol within *tmp51 *tmp52 6 *tmp53
   156 jump *label31 notEqual *tmp53 false
-    * op sub *tmp55 :moveTo.1:radius 0.5
-    * ucontrol approach :moveTo.1:x :moveTo.1:y *tmp55
+  157 op sub *tmp55 6 0.5
+  158 ucontrol approach *tmp51 *tmp52 5.5
   159 label *label30
   160 jump *label29 always
   161 label *label31
   162 label *label28
   163 label *label27
-    * op div *tmp56 :findDrillLocationLocal:distanceLimit 3.8197185279121366
+  164 op div *tmp56 *tmp50 3.8197185279121366
   165 op pow .mapTotal *tmp56 2
   166 set :findDrillLocationLocal:oreX 0
   167 set :findDrillLocationLocal:oreY 0
 
   184 op max .angle .angle @pi
   185 op mul .mapProgress .angle .angle
   186 label *label36
-    * jump *label38 greaterThanEq :locateOreAway:distance :locateOreAway:distanceLimit
+  187 jump *label38 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   188 op div :locateOreAway:a .angle @degToRad
   189 op sin *tmp69 :locateOreAway:a
   190 op mul *tmp70 *tmp69 :locateOreAway:distance
 
   193 set :limit:value *tmp71
   194 set :limit:low 5
   195 set :limit:high *tmp72
-    * op max *tmp74 :limit:value :limit:low
-    * op min *tmp73 *tmp74 :limit:high
+  196 op max *tmp74 *tmp71 5
+  197 op min *tmp73 *tmp74 *tmp72
   198 label *label39
   199 set :locateOreAway:lx *tmp73
   200 op cos *tmp76 :locateOreAway:a
 
   204 set :limit.1:value *tmp78
   205 set :limit.1:low 5
   206 set :limit.1:high *tmp79
-    * op max *tmp81 :limit.1:value :limit.1:low
-    * op min *tmp80 *tmp81 :limit.1:high
+  207 op max *tmp81 *tmp78 5
+  208 op min *tmp80 *tmp81 *tmp79
   209 label *label40
   210 set :locateOreAway:ly *tmp80
-    * set :moveTo.2:x :locateOreAway:lx
-    * set :moveTo.2:y :locateOreAway:ly
+  211 set :moveTo.2:x *tmp73
+  212 set :moveTo.2:y *tmp80
   213 set :moveTo.2:radius 5
   214 label *label42
-    * ucontrol within :moveTo.2:x :moveTo.2:y :moveTo.2:radius *tmp83
+  215 ucontrol within :locateOreAway:lx :locateOreAway:ly 5 *tmp83
   216 jump *label44 notEqual *tmp83 false
-    * op sub *tmp85 :moveTo.2:radius 0.5
-    * ucontrol approach :moveTo.2:x :moveTo.2:y *tmp85
+  217 op sub *tmp85 5 0.5
+  218 ucontrol approach :locateOreAway:lx :locateOreAway:ly 4.5
   219 label *label43
   220 jump *label42 always
   221 label *label44
 
   224 op add .angle .angle *tmp86
   225 op mul .mapProgress .angle .angle
   226 op mul :locateOreAway:distance 3.8197185279121366 .angle
-    * ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp89 0
+  227 ulocate ore core true :findDrillLocationLocal:item :locateOreAway:x :locateOreAway:y *tmp89 0
   228 jump *label45 notEqual *tmp89 false
   229 set *tmp63 false
   230 jump *label35 always
 
   235 op sub *tmp95 :locateOreAway:y .coreY
   236 op abs *tmp96 *tmp95
   237 op max :locateOreAway:coreDist *tmp94 *tmp96
-    * op sub *tmp98 :locateOreAway:x :locateOreAway:lx
-    * op sub *tmp99 :locateOreAway:y :locateOreAway:ly
+  238 op sub *tmp98 :locateOreAway:x *tmp73
+  239 op sub *tmp99 :locateOreAway:y *tmp80
   240 op len :locateOreAway:unitDist *tmp98 *tmp99
   241 jump *label47 notEqual :locateOreAway:lastX :locateOreAway:x
   242 jump *label49 notEqual :locateOreAway:lastY :locateOreAway:y
 
   260 read :visited:lx bank1 *tmp112
   261 op add *tmp115 :visited:index 3
   262 read :visited:ly bank1 *tmp115
-    * op sub *tmp118 :visited:x :visited:lx
-    * op sub *tmp119 :visited:y :visited:ly
+  263 op sub *tmp118 :locateOreAway:x :visited:lx
+  264 op sub *tmp119 :locateOreAway:y :visited:ly
   265 op len *tmp120 *tmp118 *tmp119
   266 jump *label59 greaterThanEq *tmp120 7
   267 set *tmp109 true
 
   274 label *label58
   275 set *tmp109 false
   276 jump *label55 always
-    * set *tmp109 null
   277 label *label55
   278 jump *label61 notEqual *tmp109 false
-    * op div *tmp125 7.639437055824273 :locateOreAway:distance
+  279 op div *tmp125 2 .angle
   280 op add .angle .angle *tmp125
   281 op mul .mapProgress .angle .angle
   282 printflush message1
 
   293 label *label38
   294 set *tmp63 false
   295 jump *label35 always
-    * set *tmp63 null
   296 label *label35
   297 set :findDrillLocationLocal:oreX :locateOreAway:x
   298 set :findDrillLocationLocal:oreY :locateOreAway:y
 
   305 op add .mapSpots .mapSpots 1
   306 label *label65
   307 label *label66
-    * set :moveTo.3:x :findDrillLocationLocal:oreX
-    * set :moveTo.3:y :findDrillLocationLocal:oreY
-    * set *tmp133 :moveTo.3:x
-    * set *tmp134 :moveTo.3:y
-    * set :moveTo.4:x *tmp133
-    * set :moveTo.4:y *tmp134
+  308 set :moveTo.3:x :locateOreAway:x
+  309 set :moveTo.3:y :locateOreAway:y
+  310 set *tmp133 :findDrillLocationLocal:oreX
+  311 set *tmp134 :findDrillLocationLocal:oreY
+  312 set :moveTo.4:x :moveTo.3:x
+  313 set :moveTo.4:y :moveTo.3:y
   314 set :moveTo.4:radius 6
   315 label *label69
-    * ucontrol within :moveTo.4:x :moveTo.4:y :moveTo.4:radius *tmp135
+  316 ucontrol within *tmp133 *tmp134 6 *tmp135
   317 jump *label71 notEqual *tmp135 false
-    * op sub *tmp137 :moveTo.4:radius 0.5
-    * ucontrol approach :moveTo.4:x :moveTo.4:y *tmp137
+  318 op sub *tmp137 6 0.5
+  319 ucontrol approach *tmp133 *tmp134 5.5
   320 label *label70
   321 jump *label69 always
   322 label *label71
 
   328 set :findBestPosition:y :findDrillLocationLocal:oreY
   329 set :findBestPosition:ore :findDrillLocationLocal:ore
   330 set :findBestPosition:size :findDrillLocationLocal:size
-    * op sub *tmp139 :findBestPosition:y 2
-    * set :computeRowValues:x :findBestPosition:x
+  331 op sub *tmp139 :findDrillLocationLocal:oreY 2
+  332 set :computeRowValues:x :findDrillLocationLocal:oreX
   333 set :computeRowValues:y *tmp139
-    * set :computeRowValues:ore :findBestPosition:ore
-    * set :computeRowValues:size :findBestPosition:size
+  334 set :computeRowValues:ore :findDrillLocationLocal:ore
+  335 set :computeRowValues:size :findDrillLocationLocal:size
   336 setaddr :computeRowValues*retaddr *label76 (h:*label76)
   337 call *label6 *invalid :computeRowValues*retval (m:*label76) (h:*label76)
   338 label *label76
 
   348 set :findBestPosition:y2 :computeRowValues*retval
   349 set *tmp143 :findBestPosition:y
   350 set :computeRowValues:x :findBestPosition:x
-    * set :computeRowValues:y *tmp143
+  351 set :computeRowValues:y :findBestPosition:y
   352 set :computeRowValues:ore :findBestPosition:ore
   353 set :computeRowValues:size :findBestPosition:size
   354 setaddr :computeRowValues*retaddr *label78 (h:*label78)
 
   380 op add :findBestPosition:row1 :findBestPosition:y1 :findBestPosition:y2
   381 op add :findBestPosition:row2 :findBestPosition:y2 :findBestPosition:y3
   382 op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
-    * op add :findBestPosition:row4 :findBestPosition:y4 :findBestPosition:y5
+  383 op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
   384 set :updateRowPositions2x2:dy -1.5
   385 set :updateRowPositions2x2:rowSum :findBestPosition:row1
-    * unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :updateRowPositions2x2:rowSum
+  386 unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :findBestPosition:row1
   387 set :updatePosition:dx -1.5
-    * set :updatePosition:dy :updateRowPositions2x2:dy
+  388 set :updatePosition:dy -1.5
   389 set :updatePosition:value :updateRowPositions2x2:col1
-    * jump *label85 greaterThanEq :updatePosition:value 0.0784313725490196
-    * jump *label87 lessThanEq :updatePosition:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition:dx
-    * set :findDrillLocationLocal:diffY :updatePosition:dy
-    * set :findBestPosition:best :updatePosition:value
+  390 jump *label85 greaterThanEq :updateRowPositions2x2:col1 0.0784313725490196
+  391 jump *label87 lessThanEq :updateRowPositions2x2:col1 0
+  392 set :findDrillLocationLocal:diffX -1.5
+  393 set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  394 set :findBestPosition:best :updateRowPositions2x2:col1
   395 label *label87
   396 label *label88
   397 label *label85
   398 label *label86
   399 label *label84
   400 set :updatePosition.1:dx -0.5
-    * set :updatePosition.1:dy :updateRowPositions2x2:dy
+  401 set :updatePosition.1:dy -1.5
   402 set :updatePosition.1:value :updateRowPositions2x2:col2
-    * jump *label90 greaterThanEq :updatePosition.1:value 0.0784313725490196
-    * jump *label92 lessThanEq :updatePosition.1:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.1:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.1:dy
-    * set :findBestPosition:best :updatePosition.1:value
+  403 jump *label90 greaterThanEq :updateRowPositions2x2:col2 0.0784313725490196
+  404 jump *label92 lessThanEq :updateRowPositions2x2:col2 :findBestPosition:best
+  405 set :findDrillLocationLocal:diffX -0.5
+  406 set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  407 set :findBestPosition:best :updateRowPositions2x2:col2
   408 label *label92
   409 label *label93
   410 label *label90
   411 label *label91
   412 label *label89
   413 set :updatePosition.2:dx 0.5
-    * set :updatePosition.2:dy :updateRowPositions2x2:dy
+  414 set :updatePosition.2:dy -1.5
   415 set :updatePosition.2:value :updateRowPositions2x2:col3
-    * jump *label95 greaterThanEq :updatePosition.2:value 0.0784313725490196
-    * jump *label97 lessThanEq :updatePosition.2:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.2:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.2:dy
-    * set :findBestPosition:best :updatePosition.2:value
+  416 jump *label95 greaterThanEq :updateRowPositions2x2:col3 0.0784313725490196
+  417 jump *label97 lessThanEq :updateRowPositions2x2:col3 :findBestPosition:best
+  418 set :findDrillLocationLocal:diffX 0.5
+  419 set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  420 set :findBestPosition:best :updateRowPositions2x2:col3
   421 label *label97
   422 label *label98
   423 label *label95
   424 label *label96
   425 label *label94
   426 set :updatePosition.3:dx 1.5
-    * set :updatePosition.3:dy :updateRowPositions2x2:dy
+  427 set :updatePosition.3:dy -1.5
   428 set :updatePosition.3:value :updateRowPositions2x2:col4
-    * jump *label100 greaterThanEq :updatePosition.3:value 0.0784313725490196
-    * jump *label102 lessThanEq :updatePosition.3:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.3:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.3:dy
-    * set :findBestPosition:best :updatePosition.3:value
+  429 jump *label100 greaterThanEq :updateRowPositions2x2:col4 0.0784313725490196
+  430 jump *label102 lessThanEq :updateRowPositions2x2:col4 :findBestPosition:best
+  431 set :findDrillLocationLocal:diffX 1.5
+  432 set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  433 set :findBestPosition:best :updateRowPositions2x2:col4
   434 label *label102
   435 label *label103
   436 label *label100
 
   439 label *label83
   440 set :updateRowPositions2x2.1:dy -0.5
   441 set :updateRowPositions2x2.1:rowSum :findBestPosition:row2
-    * unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :updateRowPositions2x2.1:rowSum
+  442 unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :findBestPosition:row2
   443 set :updatePosition.4:dx -1.5
-    * set :updatePosition.4:dy :updateRowPositions2x2.1:dy
+  444 set :updatePosition.4:dy -0.5
   445 set :updatePosition.4:value :updateRowPositions2x2.1:col1
-    * jump *label106 greaterThanEq :updatePosition.4:value 0.0784313725490196
-    * jump *label108 lessThanEq :updatePosition.4:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.4:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.4:dy
-    * set :findBestPosition:best :updatePosition.4:value
+  446 jump *label106 greaterThanEq :updateRowPositions2x2.1:col1 0.0784313725490196
+  447 jump *label108 lessThanEq :updateRowPositions2x2.1:col1 :findBestPosition:best
+  448 set :findDrillLocationLocal:diffX -1.5
+  449 set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  450 set :findBestPosition:best :updateRowPositions2x2.1:col1
   451 label *label108
   452 label *label109
   453 label *label106
   454 label *label107
   455 label *label105
   456 set :updatePosition.5:dx -0.5
-    * set :updatePosition.5:dy :updateRowPositions2x2.1:dy
+  457 set :updatePosition.5:dy -0.5
   458 set :updatePosition.5:value :updateRowPositions2x2.1:col2
-    * jump *label111 greaterThanEq :updatePosition.5:value 0.0784313725490196
-    * jump *label113 lessThanEq :updatePosition.5:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.5:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.5:dy
-    * set :findBestPosition:best :updatePosition.5:value
+  459 jump *label111 greaterThanEq :updateRowPositions2x2.1:col2 0.0784313725490196
+  460 jump *label113 lessThanEq :updateRowPositions2x2.1:col2 :findBestPosition:best
+  461 set :findDrillLocationLocal:diffX -0.5
+  462 set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  463 set :findBestPosition:best :updateRowPositions2x2.1:col2
   464 label *label113
   465 label *label114
   466 label *label111
   467 label *label112
   468 label *label110
   469 set :updatePosition.6:dx 0.5
-    * set :updatePosition.6:dy :updateRowPositions2x2.1:dy
+  470 set :updatePosition.6:dy -0.5
   471 set :updatePosition.6:value :updateRowPositions2x2.1:col3
-    * jump *label116 greaterThanEq :updatePosition.6:value 0.0784313725490196
-    * jump *label118 lessThanEq :updatePosition.6:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.6:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.6:dy
-    * set :findBestPosition:best :updatePosition.6:value
+  472 jump *label116 greaterThanEq :updateRowPositions2x2.1:col3 0.0784313725490196
+  473 jump *label118 lessThanEq :updateRowPositions2x2.1:col3 :findBestPosition:best
+  474 set :findDrillLocationLocal:diffX 0.5
+  475 set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  476 set :findBestPosition:best :updateRowPositions2x2.1:col3
   477 label *label118
   478 label *label119
   479 label *label116
   480 label *label117
   481 label *label115
   482 set :updatePosition.7:dx 1.5
-    * set :updatePosition.7:dy :updateRowPositions2x2.1:dy
+  483 set :updatePosition.7:dy -0.5
   484 set :updatePosition.7:value :updateRowPositions2x2.1:col4
-    * jump *label121 greaterThanEq :updatePosition.7:value 0.0784313725490196
-    * jump *label123 lessThanEq :updatePosition.7:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.7:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.7:dy
-    * set :findBestPosition:best :updatePosition.7:value
+  485 jump *label121 greaterThanEq :updateRowPositions2x2.1:col4 0.0784313725490196
+  486 jump *label123 lessThanEq :updateRowPositions2x2.1:col4 :findBestPosition:best
+  487 set :findDrillLocationLocal:diffX 1.5
+  488 set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  489 set :findBestPosition:best :updateRowPositions2x2.1:col4
   490 label *label123
   491 label *label124
   492 label *label121
 
   495 label *label104
   496 set :updateRowPositions2x2.2:dy 0.5
   497 set :updateRowPositions2x2.2:rowSum :findBestPosition:row3
-    * unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :updateRowPositions2x2.2:rowSum
+  498 unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :findBestPosition:row3
   499 set :updatePosition.8:dx -1.5
-    * set :updatePosition.8:dy :updateRowPositions2x2.2:dy
+  500 set :updatePosition.8:dy 0.5
   501 set :updatePosition.8:value :updateRowPositions2x2.2:col1
-    * jump *label127 greaterThanEq :updatePosition.8:value 0.0784313725490196
-    * jump *label129 lessThanEq :updatePosition.8:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.8:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.8:dy
-    * set :findBestPosition:best :updatePosition.8:value
+  502 jump *label127 greaterThanEq :updateRowPositions2x2.2:col1 0.0784313725490196
+  503 jump *label129 lessThanEq :updateRowPositions2x2.2:col1 :findBestPosition:best
+  504 set :findDrillLocationLocal:diffX -1.5
+  505 set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  506 set :findBestPosition:best :updateRowPositions2x2.2:col1
   507 label *label129
   508 label *label130
   509 label *label127
   510 label *label128
   511 label *label126
   512 set :updatePosition.9:dx -0.5
-    * set :updatePosition.9:dy :updateRowPositions2x2.2:dy
+  513 set :updatePosition.9:dy 0.5
   514 set :updatePosition.9:value :updateRowPositions2x2.2:col2
-    * jump *label132 greaterThanEq :updatePosition.9:value 0.0784313725490196
-    * jump *label134 lessThanEq :updatePosition.9:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.9:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.9:dy
-    * set :findBestPosition:best :updatePosition.9:value
+  515 jump *label132 greaterThanEq :updateRowPositions2x2.2:col2 0.0784313725490196
+  516 jump *label134 lessThanEq :updateRowPositions2x2.2:col2 :findBestPosition:best
+  517 set :findDrillLocationLocal:diffX -0.5
+  518 set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  519 set :findBestPosition:best :updateRowPositions2x2.2:col2
   520 label *label134
   521 label *label135
   522 label *label132
   523 label *label133
   524 label *label131
   525 set :updatePosition.10:dx 0.5
-    * set :updatePosition.10:dy :updateRowPositions2x2.2:dy
+  526 set :updatePosition.10:dy 0.5
   527 set :updatePosition.10:value :updateRowPositions2x2.2:col3
-    * jump *label137 greaterThanEq :updatePosition.10:value 0.0784313725490196
-    * jump *label139 lessThanEq :updatePosition.10:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.10:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.10:dy
-    * set :findBestPosition:best :updatePosition.10:value
+  528 jump *label137 greaterThanEq :updateRowPositions2x2.2:col3 0.0784313725490196
+  529 jump *label139 lessThanEq :updateRowPositions2x2.2:col3 :findBestPosition:best
+  530 set :findDrillLocationLocal:diffX 0.5
+  531 set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  532 set :findBestPosition:best :updateRowPositions2x2.2:col3
   533 label *label139
   534 label *label140
   535 label *label137
   536 label *label138
   537 label *label136
   538 set :updatePosition.11:dx 1.5
-    * set :updatePosition.11:dy :updateRowPositions2x2.2:dy
+  539 set :updatePosition.11:dy 0.5
   540 set :updatePosition.11:value :updateRowPositions2x2.2:col4
-    * jump *label142 greaterThanEq :updatePosition.11:value 0.0784313725490196
-    * jump *label144 lessThanEq :updatePosition.11:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.11:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.11:dy
-    * set :findBestPosition:best :updatePosition.11:value
+  541 jump *label142 greaterThanEq :updateRowPositions2x2.2:col4 0.0784313725490196
+  542 jump *label144 lessThanEq :updateRowPositions2x2.2:col4 :findBestPosition:best
+  543 set :findDrillLocationLocal:diffX 1.5
+  544 set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  545 set :findBestPosition:best :updateRowPositions2x2.2:col4
   546 label *label144
   547 label *label145
   548 label *label142
 
   551 label *label125
   552 set :updateRowPositions2x2.3:dy 1.5
   553 set :updateRowPositions2x2.3:rowSum :findBestPosition:row4
-    * unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :updateRowPositions2x2.3:rowSum
+  554 unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :findBestPosition:row4
   555 set :updatePosition.12:dx -1.5
-    * set :updatePosition.12:dy :updateRowPositions2x2.3:dy
+  556 set :updatePosition.12:dy 1.5
   557 set :updatePosition.12:value :updateRowPositions2x2.3:col1
-    * jump *label148 greaterThanEq :updatePosition.12:value 0.0784313725490196
-    * jump *label150 lessThanEq :updatePosition.12:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.12:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.12:dy
-    * set :findBestPosition:best :updatePosition.12:value
+  558 jump *label148 greaterThanEq :updateRowPositions2x2.3:col1 0.0784313725490196
+  559 jump *label150 lessThanEq :updateRowPositions2x2.3:col1 :findBestPosition:best
+  560 set :findDrillLocationLocal:diffX -1.5
+  561 set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  562 set :findBestPosition:best :updateRowPositions2x2.3:col1
   563 label *label150
   564 label *label151
   565 label *label148
   566 label *label149
   567 label *label147
   568 set :updatePosition.13:dx -0.5
-    * set :updatePosition.13:dy :updateRowPositions2x2.3:dy
+  569 set :updatePosition.13:dy 1.5
   570 set :updatePosition.13:value :updateRowPositions2x2.3:col2
-    * jump *label153 greaterThanEq :updatePosition.13:value 0.0784313725490196
-    * jump *label155 lessThanEq :updatePosition.13:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.13:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.13:dy
-    * set :findBestPosition:best :updatePosition.13:value
+  571 jump *label153 greaterThanEq :updateRowPositions2x2.3:col2 0.0784313725490196
+  572 jump *label155 lessThanEq :updateRowPositions2x2.3:col2 :findBestPosition:best
+  573 set :findDrillLocationLocal:diffX -0.5
+  574 set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  575 set :findBestPosition:best :updateRowPositions2x2.3:col2
   576 label *label155
   577 label *label156
   578 label *label153
   579 label *label154
   580 label *label152
   581 set :updatePosition.14:dx 0.5
-    * set :updatePosition.14:dy :updateRowPositions2x2.3:dy
+  582 set :updatePosition.14:dy 1.5
   583 set :updatePosition.14:value :updateRowPositions2x2.3:col3
-    * jump *label158 greaterThanEq :updatePosition.14:value 0.0784313725490196
-    * jump *label160 lessThanEq :updatePosition.14:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.14:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.14:dy
-    * set :findBestPosition:best :updatePosition.14:value
+  584 jump *label158 greaterThanEq :updateRowPositions2x2.3:col3 0.0784313725490196
+  585 jump *label160 lessThanEq :updateRowPositions2x2.3:col3 :findBestPosition:best
+  586 set :findDrillLocationLocal:diffX 0.5
+  587 set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  588 set :findBestPosition:best :updateRowPositions2x2.3:col3
   589 label *label160
   590 label *label161
   591 label *label158
   592 label *label159
   593 label *label157
   594 set :updatePosition.15:dx 1.5
-    * set :updatePosition.15:dy :updateRowPositions2x2.3:dy
+  595 set :updatePosition.15:dy 1.5
   596 set :updatePosition.15:value :updateRowPositions2x2.3:col4
-    * jump *label163 greaterThanEq :updatePosition.15:value 0.0784313725490196
-    * jump *label165 lessThanEq :updatePosition.15:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.15:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.15:dy
-    * set :findBestPosition:best :updatePosition.15:value
+  597 jump *label163 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
+  598 jump *label165 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
+  599 set :findDrillLocationLocal:diffX 1.5
+  600 set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  601 set :findBestPosition:best :updateRowPositions2x2.3:col4
   602 label *label165
   603 label *label166
   604 label *label163
 
   611 op add *tmp221 :findBestPosition:y2 :findBestPosition:y3
   612 op add :findBestPosition:row1.1 :findBestPosition:y1 *tmp221
   613 op add *tmp223 :findBestPosition:y2 :findBestPosition:y3
-    * op add :findBestPosition:row2.1 *tmp223 :findBestPosition:y4
+  614 op add :findBestPosition:row2.1 *tmp221 :findBestPosition:y4
   615 op add *tmp225 :findBestPosition:y3 :findBestPosition:y4
-    * op add :findBestPosition:row3.1 *tmp225 :findBestPosition:y5
+  616 op add :findBestPosition:row3.1 *tmp225 :computeRowValues*retval
   617 set :updateRowPositions3x3:dy -1
   618 set :updateRowPositions3x3:rowSum :findBestPosition:row1.1
-    * unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :updateRowPositions3x3:rowSum
+  619 unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :findBestPosition:row1.1
   620 set :updatePosition.16:dx -1
-    * set :updatePosition.16:dy :updateRowPositions3x3:dy
+  621 set :updatePosition.16:dy -1
   622 set :updatePosition.16:value :updateRowPositions3x3:col1
-    * jump *label171 greaterThanEq :updatePosition.16:value 0.0784313725490196
-    * jump *label173 lessThanEq :updatePosition.16:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.16:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.16:dy
-    * set :findBestPosition:best :updatePosition.16:value
+  623 jump *label171 greaterThanEq :updateRowPositions3x3:col1 0.0784313725490196
+  624 jump *label173 lessThanEq :updateRowPositions3x3:col1 0
+  625 set :findDrillLocationLocal:diffX -1
+  626 set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  627 set :findBestPosition:best :updateRowPositions3x3:col1
   628 label *label173
   629 label *label174
   630 label *label171
   631 label *label172
   632 label *label170
   633 set :updatePosition.17:dx 0
-    * set :updatePosition.17:dy :updateRowPositions3x3:dy
+  634 set :updatePosition.17:dy -1
   635 set :updatePosition.17:value :updateRowPositions3x3:col2
-    * jump *label176 greaterThanEq :updatePosition.17:value 0.0784313725490196
-    * jump *label178 lessThanEq :updatePosition.17:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.17:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.17:dy
-    * set :findBestPosition:best :updatePosition.17:value
+  636 jump *label176 greaterThanEq :updateRowPositions3x3:col2 0.0784313725490196
+  637 jump *label178 lessThanEq :updateRowPositions3x3:col2 :findBestPosition:best
+  638 set :findDrillLocationLocal:diffX 0
+  639 set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  640 set :findBestPosition:best :updateRowPositions3x3:col2
   641 label *label178
   642 label *label179
   643 label *label176
   644 label *label177
   645 label *label175
   646 set :updatePosition.18:dx 1
-    * set :updatePosition.18:dy :updateRowPositions3x3:dy
+  647 set :updatePosition.18:dy -1
   648 set :updatePosition.18:value :updateRowPositions3x3:col3
-    * jump *label181 greaterThanEq :updatePosition.18:value 0.0784313725490196
-    * jump *label183 lessThanEq :updatePosition.18:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.18:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.18:dy
-    * set :findBestPosition:best :updatePosition.18:value
+  649 jump *label181 greaterThanEq :updateRowPositions3x3:col3 0.0784313725490196
+  650 jump *label183 lessThanEq :updateRowPositions3x3:col3 :findBestPosition:best
+  651 set :findDrillLocationLocal:diffX 1
+  652 set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  653 set :findBestPosition:best :updateRowPositions3x3:col3
   654 label *label183
   655 label *label184
   656 label *label181
 
   659 label *label169
   660 set :updateRowPositions3x3.1:dy 0
   661 set :updateRowPositions3x3.1:rowSum :findBestPosition:row2.1
-    * unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :updateRowPositions3x3.1:rowSum
+  662 unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :findBestPosition:row2.1
   663 set :updatePosition.19:dx -1
-    * set :updatePosition.19:dy :updateRowPositions3x3.1:dy
+  664 set :updatePosition.19:dy 0
   665 set :updatePosition.19:value :updateRowPositions3x3.1:col1
-    * jump *label187 greaterThanEq :updatePosition.19:value 0.0784313725490196
-    * jump *label189 lessThanEq :updatePosition.19:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.19:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.19:dy
-    * set :findBestPosition:best :updatePosition.19:value
+  666 jump *label187 greaterThanEq :updateRowPositions3x3.1:col1 0.0784313725490196
+  667 jump *label189 lessThanEq :updateRowPositions3x3.1:col1 :findBestPosition:best
+  668 set :findDrillLocationLocal:diffX -1
+  669 set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  670 set :findBestPosition:best :updateRowPositions3x3.1:col1
   671 label *label189
   672 label *label190
   673 label *label187
   674 label *label188
   675 label *label186
   676 set :updatePosition.20:dx 0
-    * set :updatePosition.20:dy :updateRowPositions3x3.1:dy
+  677 set :updatePosition.20:dy 0
   678 set :updatePosition.20:value :updateRowPositions3x3.1:col2
-    * jump *label192 greaterThanEq :updatePosition.20:value 0.0784313725490196
-    * jump *label194 lessThanEq :updatePosition.20:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.20:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.20:dy
-    * set :findBestPosition:best :updatePosition.20:value
+  679 jump *label192 greaterThanEq :updateRowPositions3x3.1:col2 0.0784313725490196
+  680 jump *label194 lessThanEq :updateRowPositions3x3.1:col2 :findBestPosition:best
+  681 set :findDrillLocationLocal:diffX 0
+  682 set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  683 set :findBestPosition:best :updateRowPositions3x3.1:col2
   684 label *label194
   685 label *label195
   686 label *label192
   687 label *label193
   688 label *label191
   689 set :updatePosition.21:dx 1
-    * set :updatePosition.21:dy :updateRowPositions3x3.1:dy
+  690 set :updatePosition.21:dy 0
   691 set :updatePosition.21:value :updateRowPositions3x3.1:col3
-    * jump *label197 greaterThanEq :updatePosition.21:value 0.0784313725490196
-    * jump *label199 lessThanEq :updatePosition.21:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.21:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.21:dy
-    * set :findBestPosition:best :updatePosition.21:value
+  692 jump *label197 greaterThanEq :updateRowPositions3x3.1:col3 0.0784313725490196
+  693 jump *label199 lessThanEq :updateRowPositions3x3.1:col3 :findBestPosition:best
+  694 set :findDrillLocationLocal:diffX 1
+  695 set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  696 set :findBestPosition:best :updateRowPositions3x3.1:col3
   697 label *label199
   698 label *label200
   699 label *label197
 
   702 label *label185
   703 set :updateRowPositions3x3.2:dy 1
   704 set :updateRowPositions3x3.2:rowSum :findBestPosition:row3.1
-    * unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :updateRowPositions3x3.2:rowSum
+  705 unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :findBestPosition:row3.1
   706 set :updatePosition.22:dx -1
-    * set :updatePosition.22:dy :updateRowPositions3x3.2:dy
+  707 set :updatePosition.22:dy 1
   708 set :updatePosition.22:value :updateRowPositions3x3.2:col1
-    * jump *label203 greaterThanEq :updatePosition.22:value 0.0784313725490196
-    * jump *label205 lessThanEq :updatePosition.22:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.22:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.22:dy
-    * set :findBestPosition:best :updatePosition.22:value
+  709 jump *label203 greaterThanEq :updateRowPositions3x3.2:col1 0.0784313725490196
+  710 jump *label205 lessThanEq :updateRowPositions3x3.2:col1 :findBestPosition:best
+  711 set :findDrillLocationLocal:diffX -1
+  712 set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  713 set :findBestPosition:best :updateRowPositions3x3.2:col1
   714 label *label205
   715 label *label206
   716 label *label203
   717 label *label204
   718 label *label202
   719 set :updatePosition.23:dx 0
-    * set :updatePosition.23:dy :updateRowPositions3x3.2:dy
+  720 set :updatePosition.23:dy 1
   721 set :updatePosition.23:value :updateRowPositions3x3.2:col2
-    * jump *label208 greaterThanEq :updatePosition.23:value 0.0784313725490196
-    * jump *label210 lessThanEq :updatePosition.23:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.23:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.23:dy
-    * set :findBestPosition:best :updatePosition.23:value
+  722 jump *label208 greaterThanEq :updateRowPositions3x3.2:col2 0.0784313725490196
+  723 jump *label210 lessThanEq :updateRowPositions3x3.2:col2 :findBestPosition:best
+  724 set :findDrillLocationLocal:diffX 0
+  725 set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  726 set :findBestPosition:best :updateRowPositions3x3.2:col2
   727 label *label210
   728 label *label211
   729 label *label208
   730 label *label209
   731 label *label207
   732 set :updatePosition.24:dx 1
-    * set :updatePosition.24:dy :updateRowPositions3x3.2:dy
+  733 set :updatePosition.24:dy 1
   734 set :updatePosition.24:value :updateRowPositions3x3.2:col3
-    * jump *label213 greaterThanEq :updatePosition.24:value 0.0784313725490196
-    * jump *label215 lessThanEq :updatePosition.24:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.24:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.24:dy
-    * set :findBestPosition:best :updatePosition.24:value
+  735 jump *label213 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
+  736 jump *label215 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
+  737 set :findDrillLocationLocal:diffX 1
+  738 set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  739 set :findBestPosition:best :updateRowPositions3x3.2:col3
   740 label *label215
   741 label *label216
   742 label *label213
 
   767 op add *tmp271 *tmp270 :findBestPosition:y3
   768 op add :findBestPosition:row1.2 :findBestPosition:y0 *tmp271
   769 op add *tmp273 :findBestPosition:y1 :findBestPosition:y2
-    * op add *tmp274 *tmp273 :findBestPosition:y3
-    * op add :findBestPosition:row2.2 *tmp274 :findBestPosition:y4
+  770 op add *tmp274 *tmp270 :findBestPosition:y3
+  771 op add :findBestPosition:row2.2 *tmp271 :findBestPosition:y4
   772 op add *tmp276 :findBestPosition:y3 :findBestPosition:y4
   773 op add *tmp277 *tmp276 :findBestPosition:y5
   774 op add :findBestPosition:row3.2 :findBestPosition:y2 *tmp277
   775 op add *tmp279 :findBestPosition:y3 :findBestPosition:y4
-    * op add *tmp280 *tmp279 :findBestPosition:y5
-    * op add :findBestPosition:row4.1 *tmp280 :findBestPosition:y6
+  776 op add *tmp280 *tmp276 :findBestPosition:y5
+  777 op add :findBestPosition:row4.1 *tmp277 :computeRowValues*retval
   778 set :updateRowPositions4x4:dy -1.5
   779 set :updateRowPositions4x4:rowSum :findBestPosition:row1.2
-    * unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 :updateRowPositions4x4:col3 :updateRowPositions4x4:col4 :updateRowPositions4x4:rowSum
+  780 unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 :updateRowPositions4x4:col3 :updateRowPositions4x4:col4 :findBestPosition:row1.2
   781 set :updatePosition.25:dx -1.5
-    * set :updatePosition.25:dy :updateRowPositions4x4:dy
+  782 set :updatePosition.25:dy -1.5
   783 set :updatePosition.25:value :updateRowPositions4x4:col1
-    * jump *label221 greaterThanEq :updatePosition.25:value 0.0784313725490196
-    * jump *label223 lessThanEq :updatePosition.25:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.25:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.25:dy
-    * set :findBestPosition:best :updatePosition.25:value
+  784 jump *label221 greaterThanEq :updateRowPositions4x4:col1 0.0784313725490196
+  785 jump *label223 lessThanEq :updateRowPositions4x4:col1 :findBestPosition:best
+  786 set :findDrillLocationLocal:diffX -1.5
+  787 set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  788 set :findBestPosition:best :updateRowPositions4x4:col1
   789 label *label223
   790 label *label224
   791 label *label221
   792 label *label222
   793 label *label220
   794 set :updatePosition.26:dx -0.5
-    * set :updatePosition.26:dy :updateRowPositions4x4:dy
+  795 set :updatePosition.26:dy -1.5
   796 set :updatePosition.26:value :updateRowPositions4x4:col2
-    * jump *label226 greaterThanEq :updatePosition.26:value 0.0784313725490196
-    * jump *label228 lessThanEq :updatePosition.26:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.26:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.26:dy
-    * set :findBestPosition:best :updatePosition.26:value
+  797 jump *label226 greaterThanEq :updateRowPositions4x4:col2 0.0784313725490196
+  798 jump *label228 lessThanEq :updateRowPositions4x4:col2 :findBestPosition:best
+  799 set :findDrillLocationLocal:diffX -0.5
+  800 set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  801 set :findBestPosition:best :updateRowPositions4x4:col2
   802 label *label228
   803 label *label229
   804 label *label226
   805 label *label227
   806 label *label225
   807 set :updatePosition.27:dx 0.5
-    * set :updatePosition.27:dy :updateRowPositions4x4:dy
+  808 set :updatePosition.27:dy -1.5
   809 set :updatePosition.27:value :updateRowPositions4x4:col3
-    * jump *label231 greaterThanEq :updatePosition.27:value 0.0784313725490196
-    * jump *label233 lessThanEq :updatePosition.27:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.27:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.27:dy
-    * set :findBestPosition:best :updatePosition.27:value
+  810 jump *label231 greaterThanEq :updateRowPositions4x4:col3 0.0784313725490196
+  811 jump *label233 lessThanEq :updateRowPositions4x4:col3 :findBestPosition:best
+  812 set :findDrillLocationLocal:diffX 0.5
+  813 set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  814 set :findBestPosition:best :updateRowPositions4x4:col3
   815 label *label233
   816 label *label234
   817 label *label231
   818 label *label232
   819 label *label230
   820 set :updatePosition.28:dx 1.5
-    * set :updatePosition.28:dy :updateRowPositions4x4:dy
+  821 set :updatePosition.28:dy -1.5
   822 set :updatePosition.28:value :updateRowPositions4x4:col4
-    * jump *label236 greaterThanEq :updatePosition.28:value 0.0784313725490196
-    * jump *label238 lessThanEq :updatePosition.28:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.28:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.28:dy
-    * set :findBestPosition:best :updatePosition.28:value
+  823 jump *label236 greaterThanEq :updateRowPositions4x4:col4 0.0784313725490196
+  824 jump *label238 lessThanEq :updateRowPositions4x4:col4 :findBestPosition:best
+  825 set :findDrillLocationLocal:diffX 1.5
+  826 set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  827 set :findBestPosition:best :updateRowPositions4x4:col4
   828 label *label238
   829 label *label239
   830 label *label236
 
   833 label *label219
   834 set :updateRowPositions4x4.1:dy -0.5
   835 set :updateRowPositions4x4.1:rowSum :findBestPosition:row2.2
-    * unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 :updateRowPositions4x4.1:col3 :updateRowPositions4x4.1:col4 :updateRowPositions4x4.1:rowSum
+  836 unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 :updateRowPositions4x4.1:col3 :updateRowPositions4x4.1:col4 :findBestPosition:row2.2
   837 set :updatePosition.29:dx -1.5
-    * set :updatePosition.29:dy :updateRowPositions4x4.1:dy
+  838 set :updatePosition.29:dy -0.5
   839 set :updatePosition.29:value :updateRowPositions4x4.1:col1
-    * jump *label242 greaterThanEq :updatePosition.29:value 0.0784313725490196
-    * jump *label244 lessThanEq :updatePosition.29:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.29:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.29:dy
-    * set :findBestPosition:best :updatePosition.29:value
+  840 jump *label242 greaterThanEq :updateRowPositions4x4.1:col1 0.0784313725490196
+  841 jump *label244 lessThanEq :updateRowPositions4x4.1:col1 :findBestPosition:best
+  842 set :findDrillLocationLocal:diffX -1.5
+  843 set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  844 set :findBestPosition:best :updateRowPositions4x4.1:col1
   845 label *label244
   846 label *label245
   847 label *label242
   848 label *label243
   849 label *label241
   850 set :updatePosition.30:dx -0.5
-    * set :updatePosition.30:dy :updateRowPositions4x4.1:dy
+  851 set :updatePosition.30:dy -0.5
   852 set :updatePosition.30:value :updateRowPositions4x4.1:col2
-    * jump *label247 greaterThanEq :updatePosition.30:value 0.0784313725490196
-    * jump *label249 lessThanEq :updatePosition.30:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.30:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.30:dy
-    * set :findBestPosition:best :updatePosition.30:value
+  853 jump *label247 greaterThanEq :updateRowPositions4x4.1:col2 0.0784313725490196
+  854 jump *label249 lessThanEq :updateRowPositions4x4.1:col2 :findBestPosition:best
+  855 set :findDrillLocationLocal:diffX -0.5
+  856 set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  857 set :findBestPosition:best :updateRowPositions4x4.1:col2
   858 label *label249
   859 label *label250
   860 label *label247
   861 label *label248
   862 label *label246
   863 set :updatePosition.31:dx 0.5
-    * set :updatePosition.31:dy :updateRowPositions4x4.1:dy
+  864 set :updatePosition.31:dy -0.5
   865 set :updatePosition.31:value :updateRowPositions4x4.1:col3
-    * jump *label252 greaterThanEq :updatePosition.31:value 0.0784313725490196
-    * jump *label254 lessThanEq :updatePosition.31:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.31:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.31:dy
-    * set :findBestPosition:best :updatePosition.31:value
+  866 jump *label252 greaterThanEq :updateRowPositions4x4.1:col3 0.0784313725490196
+  867 jump *label254 lessThanEq :updateRowPositions4x4.1:col3 :findBestPosition:best
+  868 set :findDrillLocationLocal:diffX 0.5
+  869 set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  870 set :findBestPosition:best :updateRowPositions4x4.1:col3
   871 label *label254
   872 label *label255
   873 label *label252
   874 label *label253
   875 label *label251
   876 set :updatePosition.32:dx 1.5
-    * set :updatePosition.32:dy :updateRowPositions4x4.1:dy
+  877 set :updatePosition.32:dy -0.5
   878 set :updatePosition.32:value :updateRowPositions4x4.1:col4
-    * jump *label257 greaterThanEq :updatePosition.32:value 0.0784313725490196
-    * jump *label259 lessThanEq :updatePosition.32:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.32:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.32:dy
-    * set :findBestPosition:best :updatePosition.32:value
+  879 jump *label257 greaterThanEq :updateRowPositions4x4.1:col4 0.0784313725490196
+  880 jump *label259 lessThanEq :updateRowPositions4x4.1:col4 :findBestPosition:best
+  881 set :findDrillLocationLocal:diffX 1.5
+  882 set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  883 set :findBestPosition:best :updateRowPositions4x4.1:col4
   884 label *label259
   885 label *label260
   886 label *label257
 
   889 label *label240
   890 set :updateRowPositions4x4.2:dy 0.5
   891 set :updateRowPositions4x4.2:rowSum :findBestPosition:row3.2
-    * unpackcolor :updateRowPositions4x4.2:col1 :updateRowPositions4x4.2:col2 :updateRowPositions4x4.2:col3 :updateRowPositions4x4.2:col4 :updateRowPositions4x4.2:rowSum
+  892 unpackcolor :updateRowPositions4x4.2:col1 :updateRowPositions4x4.2:col2 :updateRowPositions4x4.2:col3 :updateRowPositions4x4.2:col4 :findBestPosition:row3.2
   893 set :updatePosition.33:dx -1.5
-    * set :updatePosition.33:dy :updateRowPositions4x4.2:dy
+  894 set :updatePosition.33:dy 0.5
   895 set :updatePosition.33:value :updateRowPositions4x4.2:col1
-    * jump *label263 greaterThanEq :updatePosition.33:value 0.0784313725490196
-    * jump *label265 lessThanEq :updatePosition.33:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.33:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.33:dy
-    * set :findBestPosition:best :updatePosition.33:value
+  896 jump *label263 greaterThanEq :updateRowPositions4x4.2:col1 0.0784313725490196
+  897 jump *label265 lessThanEq :updateRowPositions4x4.2:col1 :findBestPosition:best
+  898 set :findDrillLocationLocal:diffX -1.5
+  899 set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  900 set :findBestPosition:best :updateRowPositions4x4.2:col1
   901 label *label265
   902 label *label266
   903 label *label263
   904 label *label264
   905 label *label262
   906 set :updatePosition.34:dx -0.5
-    * set :updatePosition.34:dy :updateRowPositions4x4.2:dy
+  907 set :updatePosition.34:dy 0.5
   908 set :updatePosition.34:value :updateRowPositions4x4.2:col2
-    * jump *label268 greaterThanEq :updatePosition.34:value 0.0784313725490196
-    * jump *label270 lessThanEq :updatePosition.34:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.34:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.34:dy
-    * set :findBestPosition:best :updatePosition.34:value
+  909 jump *label268 greaterThanEq :updateRowPositions4x4.2:col2 0.0784313725490196
+  910 jump *label270 lessThanEq :updateRowPositions4x4.2:col2 :findBestPosition:best
+  911 set :findDrillLocationLocal:diffX -0.5
+  912 set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  913 set :findBestPosition:best :updateRowPositions4x4.2:col2
   914 label *label270
   915 label *label271
   916 label *label268
   917 label *label269
   918 label *label267
   919 set :updatePosition.35:dx 0.5
-    * set :updatePosition.35:dy :updateRowPositions4x4.2:dy
+  920 set :updatePosition.35:dy 0.5
   921 set :updatePosition.35:value :updateRowPositions4x4.2:col3
-    * jump *label273 greaterThanEq :updatePosition.35:value 0.0784313725490196
-    * jump *label275 lessThanEq :updatePosition.35:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.35:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.35:dy
-    * set :findBestPosition:best :updatePosition.35:value
+  922 jump *label273 greaterThanEq :updateRowPositions4x4.2:col3 0.0784313725490196
+  923 jump *label275 lessThanEq :updateRowPositions4x4.2:col3 :findBestPosition:best
+  924 set :findDrillLocationLocal:diffX 0.5
+  925 set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  926 set :findBestPosition:best :updateRowPositions4x4.2:col3
   927 label *label275
   928 label *label276
   929 label *label273
   930 label *label274
   931 label *label272
   932 set :updatePosition.36:dx 1.5
-    * set :updatePosition.36:dy :updateRowPositions4x4.2:dy
+  933 set :updatePosition.36:dy 0.5
   934 set :updatePosition.36:value :updateRowPositions4x4.2:col4
-    * jump *label278 greaterThanEq :updatePosition.36:value 0.0784313725490196
-    * jump *label280 lessThanEq :updatePosition.36:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.36:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.36:dy
-    * set :findBestPosition:best :updatePosition.36:value
+  935 jump *label278 greaterThanEq :updateRowPositions4x4.2:col4 0.0784313725490196
+  936 jump *label280 lessThanEq :updateRowPositions4x4.2:col4 :findBestPosition:best
+  937 set :findDrillLocationLocal:diffX 1.5
+  938 set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  939 set :findBestPosition:best :updateRowPositions4x4.2:col4
   940 label *label280
   941 label *label281
   942 label *label278
 
   945 label *label261
   946 set :updateRowPositions4x4.3:dy 1.5
   947 set :updateRowPositions4x4.3:rowSum :findBestPosition:row4.1
-    * unpackcolor :updateRowPositions4x4.3:col1 :updateRowPositions4x4.3:col2 :updateRowPositions4x4.3:col3 :updateRowPositions4x4.3:col4 :updateRowPositions4x4.3:rowSum
+  948 unpackcolor :updateRowPositions4x4.3:col1 :updateRowPositions4x4.3:col2 :updateRowPositions4x4.3:col3 :updateRowPositions4x4.3:col4 :findBestPosition:row4.1
   949 set :updatePosition.37:dx -1.5
-    * set :updatePosition.37:dy :updateRowPositions4x4.3:dy
+  950 set :updatePosition.37:dy 1.5
   951 set :updatePosition.37:value :updateRowPositions4x4.3:col1
-    * jump *label284 greaterThanEq :updatePosition.37:value 0.0784313725490196
-    * jump *label286 lessThanEq :updatePosition.37:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.37:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.37:dy
-    * set :findBestPosition:best :updatePosition.37:value
+  952 jump *label284 greaterThanEq :updateRowPositions4x4.3:col1 0.0784313725490196
+  953 jump *label286 lessThanEq :updateRowPositions4x4.3:col1 :findBestPosition:best
+  954 set :findDrillLocationLocal:diffX -1.5
+  955 set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  956 set :findBestPosition:best :updateRowPositions4x4.3:col1
   957 label *label286
   958 label *label287
   959 label *label284
   960 label *label285
   961 label *label283
   962 set :updatePosition.38:dx -0.5
-    * set :updatePosition.38:dy :updateRowPositions4x4.3:dy
+  963 set :updatePosition.38:dy 1.5
   964 set :updatePosition.38:value :updateRowPositions4x4.3:col2
-    * jump *label289 greaterThanEq :updatePosition.38:value 0.0784313725490196
-    * jump *label291 lessThanEq :updatePosition.38:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.38:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.38:dy
-    * set :findBestPosition:best :updatePosition.38:value
+  965 jump *label289 greaterThanEq :updateRowPositions4x4.3:col2 0.0784313725490196
+  966 jump *label291 lessThanEq :updateRowPositions4x4.3:col2 :findBestPosition:best
+  967 set :findDrillLocationLocal:diffX -0.5
+  968 set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  969 set :findBestPosition:best :updateRowPositions4x4.3:col2
   970 label *label291
   971 label *label292
   972 label *label289
   973 label *label290
   974 label *label288
   975 set :updatePosition.39:dx 0.5
-    * set :updatePosition.39:dy :updateRowPositions4x4.3:dy
+  976 set :updatePosition.39:dy 1.5
   977 set :updatePosition.39:value :updateRowPositions4x4.3:col3
-    * jump *label294 greaterThanEq :updatePosition.39:value 0.0784313725490196
-    * jump *label296 lessThanEq :updatePosition.39:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.39:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.39:dy
-    * set :findBestPosition:best :updatePosition.39:value
+  978 jump *label294 greaterThanEq :updateRowPositions4x4.3:col3 0.0784313725490196
+  979 jump *label296 lessThanEq :updateRowPositions4x4.3:col3 :findBestPosition:best
+  980 set :findDrillLocationLocal:diffX 0.5
+  981 set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  982 set :findBestPosition:best :updateRowPositions4x4.3:col3
   983 label *label296
   984 label *label297
   985 label *label294
   986 label *label295
   987 label *label293
   988 set :updatePosition.40:dx 1.5
-    * set :updatePosition.40:dy :updateRowPositions4x4.3:dy
+  989 set :updatePosition.40:dy 1.5
   990 set :updatePosition.40:value :updateRowPositions4x4.3:col4
-    * jump *label299 greaterThanEq :updatePosition.40:value 0.0784313725490196
-    * jump *label301 lessThanEq :updatePosition.40:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.40:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.40:dy
-    * set :findBestPosition:best :updatePosition.40:value
+  991 jump *label299 greaterThanEq :updateRowPositions4x4.3:col4 0.0784313725490196
+  992 jump *label301 lessThanEq :updateRowPositions4x4.3:col4 :findBestPosition:best
+  993 set :findDrillLocationLocal:diffX 1.5
+  994 set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  995 set :findBestPosition:best :updateRowPositions4x4.3:col4
   996 label *label301
   997 label *label302
   998 label *label299
 
  1003 label *label82
  1004 op mul *tmp138 :findBestPosition:best 255
  1005 jump *label75 always
-    * set *tmp138 null
  1006 label *label75
  1007 set :findDrillLocationLocal:score *tmp138
-    * jump *label303 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:capacity
+ 1008 jump *label303 lessThanEq *tmp138 :findDrillLocationLocal:capacity
  1009 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1010 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
+ 1011 set :findDrillLocationLocal:capacity *tmp138
  1012 jump *label305 greaterThanEq :findDrillLocationLocal:limit 1000
-    * set .mapSpots :findDrillLocationLocal:score
+ 1013 set .mapSpots *tmp138
  1014 label *label305
  1015 label *label306
  1016 jump *label307 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
  1017 set :saveLocation:item :findDrillLocationLocal:item
-    * set :saveLocation:value :findDrillLocationLocal:score
+ 1018 set :saveLocation:value *tmp138
  1019 set :saveLocation:x :findDrillLocationLocal:dx
  1020 set :saveLocation:y :findDrillLocationLocal:dy
  1021 op add .count .count 1
  1022 set *tmp355 .count
-    * sensor *tmp357 :saveLocation:item @id
-    * write *tmp357 bank1 *tmp355
+ 1023 sensor *tmp357 :findDrillLocationLocal:item @id
+ 1024 write *tmp357 bank1 .count
  1025 op add .count .count 1
-    * write :saveLocation:value bank1 .count
+ 1026 write :findDrillLocationLocal:score bank1 .count
  1027 op add .count .count 1
-    * write :saveLocation:x bank1 .count
+ 1028 write :findDrillLocationLocal:dx bank1 .count
  1029 op add .count .count 1
-    * write :saveLocation:y bank1 .count
+ 1030 write :findDrillLocationLocal:dy bank1 .count
  1031 op add .locations .locations 1
  1032 label *label309
  1033 ucontrol unbind
 
  1037 label *label308
  1038 label *label303
  1039 label *label304
-    * jump *label310 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
+ 1040 jump *label310 lessThanEq *tmp138 :findDrillLocationLocal:best
  1041 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
  1042 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:best :findDrillLocationLocal:score
+ 1043 set :findDrillLocationLocal:best *tmp138
  1044 label *label310
  1045 label *label311
-    * jump *label312 greaterThan :findDrillLocationLocal:score :findDrillLocationLocal:last
+ 1046 jump *label312 greaterThan *tmp138 :findDrillLocationLocal:last
  1047 jump *label74 always
  1048 label *label312
  1049 label *label313
-    * set :findDrillLocationLocal:last :findDrillLocationLocal:score
+ 1050 set :findDrillLocationLocal:last *tmp138
  1051 op mul :round:x :findDrillLocationLocal:diffX 1.1
  1052 op add *tmp373 :round:x 0.5
  1053 op floor *tmp372 *tmp373
 
  1077 set :saveLocation.1:y :findDrillLocationLocal:bestY
  1078 op add .count .count 1
  1079 set *tmp388 .count
-    * sensor *tmp390 :saveLocation.1:item @id
-    * write *tmp390 bank1 *tmp388
+ 1080 sensor *tmp390 :findDrillLocationLocal:item @id
+ 1081 write *tmp390 bank1 .count
  1082 op add .count .count 1
-    * write :saveLocation.1:value bank1 .count
+ 1083 write :findDrillLocationLocal:best bank1 .count
  1084 op add .count .count 1
-    * write :saveLocation.1:x bank1 .count
+ 1085 write :findDrillLocationLocal:bestX bank1 .count
  1086 op add .count .count 1
-    * write :saveLocation.1:y bank1 .count
+ 1087 write :findDrillLocationLocal:bestY bank1 .count
  1088 op add .locations .locations 1
  1089 label *label320
  1090 label *label318
 
  1099 label *label8
  1100 set :moveTo.5:x :createTerrainMask:x
  1101 set :moveTo.5:y :createTerrainMask:y
-    * set *tmp398 :moveTo.5:x
-    * set *tmp399 :moveTo.5:y
-    * set :moveTo.6:x *tmp398
-    * set :moveTo.6:y *tmp399
+ 1102 set *tmp398 :createTerrainMask:x
+ 1103 set *tmp399 :createTerrainMask:y
+ 1104 set :moveTo.6:x :moveTo.5:x
+ 1105 set :moveTo.6:y :moveTo.5:y
  1106 set :moveTo.6:radius 6
  1107 label *label324
-    * ucontrol within :moveTo.6:x :moveTo.6:y :moveTo.6:radius *tmp400
+ 1108 ucontrol within *tmp398 *tmp399 6 *tmp400
  1109 jump *label326 notEqual *tmp400 false
-    * op sub *tmp402 :moveTo.6:radius 0.5
-    * ucontrol approach :moveTo.6:x :moveTo.6:y *tmp402
+ 1110 op sub *tmp402 6 0.5
+ 1111 ucontrol approach *tmp398 *tmp399 5.5
  1112 label *label325
  1113 jump *label324 always
  1114 label *label326
 
  1131 select :isBlocked:result notEqual solid false 1 0
  1132 set *tmp406 :isBlocked:result
  1133 label *label333
-    * op or :createTerrainMask:result *tmp403 *tmp406
+ 1134 op or :createTerrainMask:result *tmp403 :isBlocked:result
  1135 label *label331
  1136 op sub :createTerrainMask:c :createTerrainMask:c 1
  1137 jump *label330 always
 
  1142 label *label329
  1143 set :createTerrainMask*retval :createTerrainMask:result
  1144 jump *label321 always
-    * set :createTerrainMask*retval null
  1145 label *label321
  1146 return :createTerrainMask*retaddr
  1147 end
 
  1184 label *label337
  1185 set :findPossiblePlacement*retval -1
  1186 jump *label334 always
-    * set :findPossiblePlacement*retval null
  1187 label *label334
  1188 return :findPossiblePlacement*retaddr
  1189 end
 
  1198 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1199 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1200 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label349 lessThan :tryPlaceGenerator:shift 0
-    * jump *label351 greaterThanEq :tryPlaceGenerator:shift 0
+ 1201 jump *label349 lessThan :findPossiblePlacement*retval 0
+ 1202 jump *label351 greaterThanEq :findPossiblePlacement*retval 0
  1203 set :tryPlaceGenerator*retval false
  1204 jump *label347 always
  1205 label *label351
  1206 label *label352
  1207 op add *tmp428 :tryPlaceGenerator:centerX 0.5
-    * op add .water2X *tmp428 :tryPlaceGenerator:c
+ 1208 op add .water2X *tmp428 :findPossiblePlacement:x
  1209 op add *tmp430 :tryPlaceGenerator:centerY 0.5
-    * op add .water2Y *tmp430 :tryPlaceGenerator:r
+ 1210 op add .water2Y *tmp430 :findPossiblePlacement:y
  1211 op add *tmp432 :tryPlaceGenerator:centerX 0.5
-    * op add .generatorX *tmp432 :tryPlaceGenerator:c
+ 1212 op add .generatorX *tmp428 :findPossiblePlacement:x
  1213 op add *tmp434 :tryPlaceGenerator:centerY 2.5
-    * op add .generatorY *tmp434 :tryPlaceGenerator:r
-    * op shl *tmp436 :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:shift
+ 1214 op add .generatorY *tmp434 :findPossiblePlacement:y
+ 1215 op shl *tmp436 :tryPlaceGenerator:generatorVertical :findPossiblePlacement*retval
  1216 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp436
  1217 jump *label350 always
  1218 label *label349
 
  1226 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1227 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1228 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label354 greaterThanEq :tryPlaceGenerator:shift 0
+ 1229 jump *label354 greaterThanEq :findPossiblePlacement*retval 0
  1230 set :tryPlaceGenerator*retval false
  1231 jump *label347 always
  1232 label *label354
  1233 label *label355
  1234 op add *tmp440 :tryPlaceGenerator:centerX 0.5
-    * op add .water2X *tmp440 :tryPlaceGenerator:c
+ 1235 op add .water2X *tmp440 :findPossiblePlacement:x
  1236 op add *tmp442 :tryPlaceGenerator:centerY 0.5
-    * op add .water2Y *tmp442 :tryPlaceGenerator:r
+ 1237 op add .water2Y *tmp442 :findPossiblePlacement:y
  1238 op add *tmp444 :tryPlaceGenerator:centerX 2.5
-    * op add .generatorX *tmp444 :tryPlaceGenerator:c
+ 1239 op add .generatorX *tmp444 :findPossiblePlacement:x
  1240 op add *tmp446 :tryPlaceGenerator:centerY 0.5
-    * op add .generatorY *tmp446 :tryPlaceGenerator:r
-    * op shl *tmp448 :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:shift
+ 1241 op add .generatorY *tmp442 :findPossiblePlacement:y
+ 1242 op shl *tmp448 :tryPlaceGenerator:generatorHorizontal :findPossiblePlacement*retval
  1243 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp448
  1244 label *label350
  1245 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1252 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1253 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1254 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label357 greaterThanEq :tryPlaceGenerator:shift 0
+ 1255 jump *label357 greaterThanEq :findPossiblePlacement*retval 0
  1256 set :tryPlaceGenerator*retval false
  1257 jump *label347 always
  1258 label *label357
  1259 label *label358
-    * op add .nodeX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * op add .nodeY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * op shl *tmp454 1 :tryPlaceGenerator:shift
+ 1260 op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
+ 1261 op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
+ 1262 op shl *tmp454 1 :findPossiblePlacement*retval
  1263 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp454
  1264 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
  1265 set :findPossiblePlacement:placementMask 1
 
  1271 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1272 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1273 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label360 greaterThanEq :tryPlaceGenerator:shift 0
+ 1274 jump *label360 greaterThanEq :findPossiblePlacement*retval 0
  1275 set :tryPlaceGenerator*retval false
  1276 jump *label347 always
  1277 label *label360
  1278 label *label361
-    * op add .panelX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * op add .panelY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * op shl *tmp460 1 :tryPlaceGenerator:shift
+ 1279 op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
+ 1280 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
+ 1281 op shl *tmp460 1 :findPossiblePlacement*retval
  1282 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp460
  1283 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
  1284 set :findPossiblePlacement:placementMask 1
 
  1290 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1291 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1292 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label363 greaterThanEq :tryPlaceGenerator:shift 0
+ 1293 jump *label363 greaterThanEq :findPossiblePlacement*retval 0
  1294 set :tryPlaceGenerator*retval false
  1295 jump *label347 always
  1296 label *label363
  1297 label *label364
-    * op add .batteryX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * op add .batteryY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * op shl *tmp466 1 :tryPlaceGenerator:shift
-    * op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp466
+ 1298 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
+ 1299 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
+ 1300 op shl *tmp466 1 :findPossiblePlacement*retval
  1301 set :tryPlaceGenerator*retval true
  1302 jump *label347 always
-    * set :tryPlaceGenerator*retval null
  1303 label *label347
  1304 return :tryPlaceGenerator*retaddr
  1305 end
 
  1325 set :createFixedMatrix:row4 0b0011100
  1326 set :createFixedMatrix:row5 0b0000000
  1327 set :createFixedMatrix:row6 0b0000000
-    * set *tmp469 :createFixedMatrix:row0
-    * op shl *tmp470 :createFixedMatrix:row1 7
-    * op or *tmp471 *tmp469 *tmp470
-    * op shl *tmp472 :createFixedMatrix:row2 14
-    * op or *tmp473 *tmp471 *tmp472
-    * op shl *tmp474 :createFixedMatrix:row3 21
-    * op or *tmp475 *tmp473 *tmp474
-    * op shl *tmp476 :createFixedMatrix:row4 28
-    * op or *tmp477 *tmp475 *tmp476
-    * op shl *tmp478 :createFixedMatrix:row5 35
-    * op or *tmp479 *tmp477 *tmp478
-    * op shl *tmp480 :createFixedMatrix:row6 42
-    * op or *tmp468 *tmp479 *tmp480
+ 1328 set *tmp469 0b0000000
+ 1329 op shl *tmp470 0b0000000 7
+ 1330 op or *tmp471 :createFixedMatrix:row0 0
+ 1331 op shl *tmp472 0b0011100 14
+ 1332 op or *tmp473 *tmp471 458752
+ 1333 op shl *tmp474 0b0011100 21
+ 1334 op or *tmp475 *tmp473 58720256
+ 1335 op shl *tmp476 0b0011100 28
+ 1336 op or *tmp477 *tmp475 7516192768
+ 1337 op shl *tmp478 0b0000000 35
+ 1338 op or *tmp479 *tmp477 0
+ 1339 op shl *tmp480 0b0000000 42
+ 1340 op or *tmp468 *tmp479 0
  1341 label *label367
-    * op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:plainTerrainMask *tmp468
+ 1342 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval *tmp468
  1343 set :createFixedMatrix.1:row0 0b1000001
  1344 set :createFixedMatrix.1:row1 0b0000000
  1345 set :createFixedMatrix.1:row2 0b0011100
 
  1347 set :createFixedMatrix.1:row4 0b0011100
  1348 set :createFixedMatrix.1:row5 0b0000000
  1349 set :createFixedMatrix.1:row6 0b1000001
-    * set *tmp484 :createFixedMatrix.1:row0
-    * op shl *tmp485 :createFixedMatrix.1:row1 7
-    * op or *tmp486 *tmp484 *tmp485
-    * op shl *tmp487 :createFixedMatrix.1:row2 14
-    * op or *tmp488 *tmp486 *tmp487
-    * op shl *tmp489 :createFixedMatrix.1:row3 21
-    * op or *tmp490 *tmp488 *tmp489
-    * op shl *tmp491 :createFixedMatrix.1:row4 28
-    * op or *tmp492 *tmp490 *tmp491
-    * op shl *tmp493 :createFixedMatrix.1:row5 35
-    * op or *tmp494 *tmp492 *tmp493
-    * op shl *tmp495 :createFixedMatrix.1:row6 42
-    * op or *tmp483 *tmp494 *tmp495
+ 1350 set *tmp484 0b1000001
+ 1351 op shl *tmp485 0b0000000 7
+ 1352 op or *tmp486 :createFixedMatrix.1:row0 0
+ 1353 op shl *tmp487 0b0011100 14
+ 1354 op or *tmp488 *tmp486 458752
+ 1355 op shl *tmp489 0b0011100 21
+ 1356 op or *tmp490 *tmp488 58720256
+ 1357 op shl *tmp491 0b0011100 28
+ 1358 op or *tmp492 *tmp490 7516192768
+ 1359 op shl *tmp493 0b0000000 35
+ 1360 op or *tmp494 *tmp492 0
+ 1361 op shl *tmp495 0b1000001 42
+ 1362 op or *tmp483 *tmp494 285873023221760
  1363 label *label368
  1364 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp483
  1365 set :createFixedMatrix.2:row0 0b11
  1366 set :createFixedMatrix.2:row1 0b11
-    * set *tmp499 :createFixedMatrix.2:row0
-    * op shl *tmp500 :createFixedMatrix.2:row1 7
-    * op or *tmp498 *tmp499 *tmp500
+ 1367 set *tmp499 0b11
+ 1368 op shl *tmp500 0b11 7
+ 1369 op or *tmp498 :createFixedMatrix.2:row0 384
  1370 label *label369
  1371 set :layoutThoriumDrillAtLocation:mask2x2 *tmp498
  1372 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
-    * set :findPossiblePlacement:placementMask :layoutThoriumDrillAtLocation:mask2x2
+ 1373 set :findPossiblePlacement:placementMask *tmp498
  1374 set :findPossiblePlacement:width 2
  1375 set :findPossiblePlacement:height 2
  1376 setaddr :findPossiblePlacement*retaddr *label370 (h:*label370)
 
  1379 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1380 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
  1381 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
-    * jump *label371 lessThan :layoutThoriumDrillAtLocation:shift 0
+ 1382 jump *label371 lessThan :findPossiblePlacement*retval 0
  1383 op add *tmp505 .drillX 0.5
-    * op add .water1X *tmp505 :layoutThoriumDrillAtLocation:c
+ 1384 op add .water1X *tmp505 :findPossiblePlacement:x
  1385 op add *tmp507 .drillY 0.5
-    * op add .water1Y *tmp507 :layoutThoriumDrillAtLocation:r
-    * op shl *tmp509 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
+ 1386 op add .water1Y *tmp507 :findPossiblePlacement:y
+ 1387 op shl *tmp509 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
  1388 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp509
-    * op shl *tmp510 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
-    * op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:cornersMask *tmp510
+ 1389 op shl *tmp510 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
+ 1390 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:cornersMask *tmp509
  1391 label *label371
  1392 label *label372
  1393 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
 
  1400 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1401 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
  1402 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
-    * jump *label374 lessThan :layoutThoriumDrillAtLocation:shift 0
+ 1403 jump *label374 lessThan :findPossiblePlacement*retval 0
  1404 op add *tmp514 .drillX 0.5
-    * op add .containerX *tmp514 :layoutThoriumDrillAtLocation:c
+ 1405 op add .containerX *tmp514 :findPossiblePlacement:x
  1406 op add *tmp516 .drillY 0.5
-    * op add .containerY *tmp516 :layoutThoriumDrillAtLocation:r
-    * op shl *tmp518 :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:shift
+ 1407 op add .containerY *tmp516 :findPossiblePlacement:y
+ 1408 op shl *tmp518 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
  1409 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp518
  1410 label *label374
  1411 label *label375
  1412 set :createFixedMatrix.3:row0 0b1111
  1413 set :createFixedMatrix.3:row1 0b1111
-    * set *tmp520 :createFixedMatrix.3:row0
-    * op shl *tmp521 :createFixedMatrix.3:row1 7
-    * op or *tmp519 *tmp520 *tmp521
+ 1414 set *tmp520 0b1111
+ 1415 op shl *tmp521 0b1111 7
+ 1416 op or *tmp519 :createFixedMatrix.3:row0 1920
  1417 label *label376
  1418 set :layoutThoriumDrillAtLocation:generatorHorizontal *tmp519
  1419 set :createFixedMatrix.4:row0 0b11
  1420 set :createFixedMatrix.4:row1 0b11
  1421 set :createFixedMatrix.4:row2 0b11
  1422 set :createFixedMatrix.4:row3 0b11
-    * set *tmp524 :createFixedMatrix.4:row0
-    * op shl *tmp525 :createFixedMatrix.4:row1 7
-    * op or *tmp526 *tmp524 *tmp525
-    * op shl *tmp527 :createFixedMatrix.4:row2 14
-    * op or *tmp528 *tmp526 *tmp527
-    * op shl *tmp529 :createFixedMatrix.4:row3 21
-    * op or *tmp523 *tmp528 *tmp529
+ 1423 set *tmp524 0b11
+ 1424 op shl *tmp525 0b11 7
+ 1425 op or *tmp526 :createFixedMatrix.4:row0 384
+ 1426 op shl *tmp527 0b11 14
+ 1427 op or *tmp528 *tmp526 49152
+ 1428 op shl *tmp529 0b11 21
+ 1429 op or *tmp523 *tmp528 6291456
  1430 label *label377
  1431 set :layoutThoriumDrillAtLocation:generatorVertical *tmp523
  1432 set :tryPlaceGenerator:centerX .drillX
  1433 set :tryPlaceGenerator:centerY .drillY
  1434 set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:terrainMask
-    * set :tryPlaceGenerator:generatorHorizontal :layoutThoriumDrillAtLocation:generatorHorizontal
-    * set :tryPlaceGenerator:generatorVertical :layoutThoriumDrillAtLocation:generatorVertical
+ 1435 set :tryPlaceGenerator:generatorHorizontal *tmp519
+ 1436 set :tryPlaceGenerator:generatorVertical *tmp523
  1437 setaddr :tryPlaceGenerator*retaddr *label378 (h:*label378)
  1438 call *label10 *invalid :tryPlaceGenerator*retval (m:*label378) (h:*label378)
  1439 label *label378
 
  1472 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
  1473 set :shiftMask:shiftX :layoutThoriumDrillAtLocation:sx
  1474 set :shiftMask:shiftY :layoutThoriumDrillAtLocation:sy
-    * op abs *tmp538 :shiftMask:shiftX
+ 1475 op abs *tmp538 :layoutThoriumDrillAtLocation:sx
  1476 op greaterThan *tmp539 *tmp538 6
-    * op abs *tmp540 :shiftMask:shiftY
+ 1477 op abs *tmp540 :layoutThoriumDrillAtLocation:sy
  1478 op greaterThan *tmp541 *tmp540 6
  1479 op or *tmp542 *tmp539 *tmp541
  1480 jump *label390 equal *tmp542 false
 
  1482 jump *label389 always
  1483 label *label390
  1484 label *label391
-    * op mul *tmp544 7 :shiftMask:shiftY
-    * op add :shiftMask:shift :shiftMask:shiftX *tmp544
+ 1485 op mul *tmp544 7 :layoutThoriumDrillAtLocation:sy
+ 1486 op add :shiftMask:shift :layoutThoriumDrillAtLocation:sx *tmp544
  1487 jump *label392 lessThanEq :shiftMask:shift 0
  1488 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
-    * op and *tmp549 :shiftMask:mask :shiftMask:clearMask
+ 1489 op and *tmp549 :layoutThoriumDrillAtLocation:terrainMask :shiftMask:clearMask
  1490 op shl :shiftMask:mask *tmp549 :shiftMask:shift
  1491 jump *label393 always
  1492 label *label392
  1493 op sub *tmp551 0 :shiftMask:shift
-    * op shr :shiftMask:mask :shiftMask:mask *tmp551
+ 1494 op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask *tmp551
  1495 label *label393
-    * jump *label394 equal :shiftMask:shiftX 0
-    * op abs *tmp554 :shiftMask:shiftX
-    * op sub *tmp555 7 *tmp554
+ 1496 jump *label394 equal :layoutThoriumDrillAtLocation:sx 0
+ 1497 op abs *tmp554 :layoutThoriumDrillAtLocation:sx
+ 1498 op sub *tmp555 7 *tmp538
  1499 op shr :shiftMask:keep 0b1111111 *tmp555
-    * jump *label396 lessThanEq :shiftMask:shiftX 0
-    * op abs *tmp559 :shiftMask:shiftX
-    * op sub *tmp560 7 *tmp559
-    * op shl :shiftMask:keep :shiftMask:keep *tmp560
+ 1500 jump *label396 lessThanEq :layoutThoriumDrillAtLocation:sx 0
+ 1501 op abs *tmp559 :layoutThoriumDrillAtLocation:sx
+ 1502 op sub *tmp560 7 *tmp538
+ 1503 op shl :shiftMask:keep :shiftMask:keep *tmp555
  1504 label *label396
  1505 label *label397
  1506 op shl *tmp561 :shiftMask:keep 7
 
  1514 label *label395
  1515 set *tmp537 :shiftMask:mask
  1516 jump *label389 always
-    * set *tmp537 null
  1517 label *label389
  1518 set :layoutThoriumDrillAtLocation:shiftedMask *tmp537
-    * op or :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:newTerrainMask :layoutThoriumDrillAtLocation:shiftedMask
+ 1519 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp537
  1520 op sub *tmp565 .drillX :layoutThoriumDrillAtLocation:sx
  1521 op sub *tmp566 .drillY :layoutThoriumDrillAtLocation:sy
  1522 set :tryPlaceGenerator:centerX *tmp565
 
  1538 label *label383
  1539 set :layoutThoriumDrillAtLocation*retval true
  1540 jump *label365 always
-    * set :layoutThoriumDrillAtLocation*retval null
  1541 label *label365
  1542 return :layoutThoriumDrillAtLocation*retaddr
  1543 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-253 instructions):
 
    20 select :spotValue:result notEqual solid false 0.09803921568627451 value
    21 set *tmp1 :spotValue:result
    22 label *label15
-    * set :computeRowValues:x1 :spotValue:result
    23 op sub :spotValue.1:x :computeRowValues:x 1
    24 set :spotValue.1:y :computeRowValues:y
    25 set :spotValue.1:ore :computeRowValues:ore
 
    29 select :spotValue.1:result notEqual solid false 0.09803921568627451 value
    30 set *tmp3 :spotValue.1:result
    31 label *label16
-    * set :computeRowValues:x2 :spotValue.1:result
    32 set :spotValue.2:x :computeRowValues:x
    33 set :spotValue.2:y :computeRowValues:y
    34 set :spotValue.2:ore :computeRowValues:ore
 
    38 select :spotValue.2:result notEqual solid false 0.09803921568627451 value
    39 set *tmp5 :spotValue.2:result
    40 label *label17
-    * set :computeRowValues:x3 :spotValue.2:result
    41 op add :spotValue.3:x :computeRowValues:x 1
    42 set :spotValue.3:y :computeRowValues:y
    43 set :spotValue.3:ore :computeRowValues:ore
 
    47 select :spotValue.3:result notEqual solid false 0.09803921568627451 value
    48 set *tmp7 :spotValue.3:result
    49 label *label18
-    * set :computeRowValues:x4 :spotValue.3:result
    50 op add :spotValue.4:x :computeRowValues:x 2
    51 set :spotValue.4:y :computeRowValues:y
    52 set :spotValue.4:ore :computeRowValues:ore
 
    56 select :spotValue.4:result notEqual solid false 0.09803921568627451 value
    57 set *tmp9 :spotValue.4:result
    58 label *label19
-    * set :computeRowValues:x5 :spotValue.4:result
    59 jump *label20 notEqual :computeRowValues:size 2
-    * op add *tmp12 *tmp1 *tmp3
-    * op add *tmp13 *tmp3 *tmp5
-    * op add *tmp14 *tmp5 *tmp7
-    * op add *tmp15 *tmp7 *tmp9
+   60 op add *tmp12 :spotValue:result :spotValue.1:result
+   61 op add *tmp13 :spotValue.1:result :spotValue.2:result
+   62 op add *tmp14 :spotValue.2:result :spotValue.3:result
+   63 op add *tmp15 :spotValue.3:result :spotValue.4:result
    64 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
    65 jump *label14 always
    66 jump *label21 always
    67 label *label20
    68 jump *label22 notEqual :computeRowValues:size 3
-    * op add *tmp19 *tmp3 *tmp5
-    * op add *tmp20 *tmp1 *tmp19
-    * op add *tmp21 *tmp3 *tmp5
-    * op add *tmp22 *tmp19 *tmp7
-    * op add *tmp23 *tmp5 *tmp7
-    * op add *tmp24 *tmp23 *tmp9
+   69 op add *tmp19 :spotValue.1:result :spotValue.2:result
+   70 op add *tmp20 :spotValue:result *tmp19
+   71 op add *tmp21 :spotValue.1:result :spotValue.2:result
+   72 op add *tmp22 *tmp19 :spotValue.3:result
+   73 op add *tmp23 :spotValue.2:result :spotValue.3:result
+   74 op add *tmp24 *tmp23 :spotValue.4:result
    75 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
    76 jump *label14 always
    77 jump *label23 always
 
    85 select :spotValue.5:result notEqual solid false 0.09803921568627451 value
    86 set *tmp27 :spotValue.5:result
    87 label *label24
-    * set :computeRowValues:x0 :spotValue.5:result
    88 op add :spotValue.6:x :computeRowValues:x 3
    89 set :spotValue.6:y :computeRowValues:y
    90 set :spotValue.6:ore :computeRowValues:ore
 
    94 select :spotValue.6:result notEqual solid false 0.09803921568627451 value
    95 set *tmp29 :spotValue.6:result
    96 label *label25
-    * set :computeRowValues:x6 :spotValue.6:result
-    * op add *tmp30 *tmp1 *tmp3
-    * op add *tmp31 *tmp30 *tmp5
-    * op add *tmp32 *tmp27 *tmp31
+   97 op add *tmp30 :spotValue:result :spotValue.1:result
+   98 op add *tmp31 *tmp30 :spotValue.2:result
+   99 op add *tmp32 :spotValue.5:result *tmp31
   100 op min *tmp33 0.09803921568627451 *tmp32
-    * op add *tmp34 *tmp1 *tmp3
-    * op add *tmp35 *tmp30 *tmp5
-    * op add *tmp36 *tmp31 *tmp7
+  101 op add *tmp34 :spotValue:result :spotValue.1:result
+  102 op add *tmp35 *tmp30 :spotValue.2:result
+  103 op add *tmp36 *tmp31 :spotValue.3:result
   104 op min *tmp37 0.09803921568627451 *tmp36
-    * op add *tmp38 *tmp5 *tmp7
-    * op add *tmp39 *tmp38 *tmp9
-    * op add *tmp40 *tmp3 *tmp39
+  105 op add *tmp38 :spotValue.2:result :spotValue.3:result
+  106 op add *tmp39 *tmp38 :spotValue.4:result
+  107 op add *tmp40 :spotValue.1:result *tmp39
   108 op min *tmp41 0.09803921568627451 *tmp40
-    * op add *tmp42 *tmp5 *tmp7
-    * op add *tmp43 *tmp38 *tmp9
-    * op add *tmp44 *tmp39 *tmp29
+  109 op add *tmp42 :spotValue.2:result :spotValue.3:result
+  110 op add *tmp43 *tmp38 :spotValue.4:result
+  111 op add *tmp44 *tmp39 :spotValue.6:result
   112 op min *tmp45 0.09803921568627451 *tmp44
   113 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
   114 jump *label14 always
   115 label *label23
-    * set *tmp11 null
   116 label *label21
-    * set :computeRowValues*retval null
   117 label *label14
   118 return :computeRowValues*retaddr
   119 end
 
   137 set .mapProgress 0
   138 set :moveTo:x :findDrillLocationLocal:x
   139 set :moveTo:y :findDrillLocationLocal:y
-    * set *tmp51 .coreX
-    * set *tmp52 .coreY
-    * set :moveTo.1:x :moveTo:x
-    * set :moveTo.1:y :moveTo:y
-    * set :moveTo.1:radius 6
+  140 set *tmp51 :findDrillLocationLocal:x
+  141 set *tmp52 :findDrillLocationLocal:y
+  142 set :moveTo.1:x :findDrillLocationLocal:x
+  143 set :moveTo.1:y :findDrillLocationLocal:y
   144 label *label29
-    * ucontrol within *tmp51 *tmp52 6 *tmp53
+  145 ucontrol within .coreX .coreY 6 *tmp53
   146 jump *label31 notEqual *tmp53 false
-    * op sub *tmp55 6 0.5
-    * ucontrol approach *tmp51 *tmp52 5.5
+  147 ucontrol approach .coreX .coreY 5.5
   148 label *label30
   149 jump *label29 always
   150 label *label31
 
   163 op min :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
   164 op div *tmp61 :findDrillLocationLocal:distanceLimit 3.8197185279121366
   165 op pow .mapTotal *tmp61 2
-    * set :locateOreAway:ore :findDrillLocationLocal:item
   166 set :locateOreAway:x :findDrillLocationLocal:oreX
   167 set :locateOreAway:y :findDrillLocationLocal:oreY
-    * set :locateOreAway:distanceLimit :findDrillLocationLocal:distanceLimit
   168 op mul :locateOreAway:distance 3.8197185279121366 .angle
   169 set :locateOreAway:lastX -1
   170 set :locateOreAway:lastY -1
 
   177 op mul *tmp70 *tmp69 :locateOreAway:distance
   178 op add *tmp71 .coreX *tmp70
   179 op sub *tmp72 @mapw 5
-    * set :limit:value *tmp71
-    * set :limit:low 5
-    * set :limit:high *tmp72
   180 op max *tmp74 *tmp71 5
   181 op min *tmp73 *tmp74 *tmp72
   182 label *label39
 
   185 op mul *tmp77 *tmp76 :locateOreAway:distance
   186 op add *tmp78 .coreY *tmp77
   187 op sub *tmp79 @maph 5
-    * set :limit.1:value *tmp78
-    * set :limit.1:low 5
-    * set :limit.1:high *tmp79
   188 op max *tmp81 *tmp78 5
   189 op min *tmp80 *tmp81 *tmp79
   190 label *label40
   191 set :locateOreAway:ly *tmp80
-    * set :moveTo.2:x *tmp73
-    * set :moveTo.2:y *tmp80
-    * set :moveTo.2:radius 5
   192 label *label42
-    * ucontrol within :locateOreAway:lx :locateOreAway:ly 5 *tmp83
+  193 ucontrol within *tmp73 *tmp80 5 *tmp83
   194 jump *label44 notEqual *tmp83 false
-    * op sub *tmp85 5 0.5
-    * ucontrol approach :locateOreAway:lx :locateOreAway:ly 4.5
+  195 ucontrol approach *tmp73 *tmp80 4.5
   196 label *label43
   197 jump *label42 always
   198 label *label44
 
   226 jump *label53 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
   227 set :locateOreAway:lastX :locateOreAway:x
   228 set :locateOreAway:lastY :locateOreAway:y
-    * set :visited:x :locateOreAway:x
-    * set :visited:y :locateOreAway:y
   229 set *tmp110 .locations
   230 set :visited:i .locationsStart
   231 label *label56
 
   282 label *label66
   283 set :moveTo.3:x :locateOreAway:x
   284 set :moveTo.3:y :locateOreAway:y
-    * set *tmp133 :findDrillLocationLocal:oreX
-    * set *tmp134 :findDrillLocationLocal:oreY
-    * set :moveTo.4:x :moveTo.3:x
-    * set :moveTo.4:y :moveTo.3:y
-    * set :moveTo.4:radius 6
+  285 set *tmp133 :locateOreAway:x
+  286 set *tmp134 :locateOreAway:y
+  287 set :moveTo.4:x :locateOreAway:x
+  288 set :moveTo.4:y :locateOreAway:y
   289 label *label69
-    * ucontrol within *tmp133 *tmp134 6 *tmp135
+  290 ucontrol within :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 6 *tmp135
   291 jump *label71 notEqual *tmp135 false
-    * op sub *tmp137 6 0.5
-    * ucontrol approach *tmp133 *tmp134 5.5
+  292 ucontrol approach :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 5.5
   293 label *label70
   294 jump *label69 always
   295 label *label71
 
   319 call *label6 *invalid :computeRowValues*retval (m:*label77) (h:*label77)
   320 label *label77
   321 set :findBestPosition:y2 :computeRowValues*retval
-    * set *tmp143 :findBestPosition:y
   322 set :computeRowValues:x :findBestPosition:x
   323 set :computeRowValues:y :findBestPosition:y
   324 set :computeRowValues:ore :findBestPosition:ore
 
   354 op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
   355 op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
   356 set :updateRowPositions2x2:dy -1.5
-    * set :updateRowPositions2x2:rowSum :findBestPosition:row1
   357 unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :findBestPosition:row1
-    * set :updatePosition:dx -1.5
-    * set :updatePosition:dy -1.5
-    * set :updatePosition:value :updateRowPositions2x2:col1
   358 jump *label85 greaterThanEq :updateRowPositions2x2:col1 0.0784313725490196
   359 jump *label87 lessThanEq :updateRowPositions2x2:col1 0
   360 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  361 set :findDrillLocationLocal:diffY -1.5
   362 set :findBestPosition:best :updateRowPositions2x2:col1
   363 label *label87
   364 label *label88
   365 label *label85
   366 label *label86
   367 label *label84
-    * set :updatePosition.1:dx -0.5
-    * set :updatePosition.1:dy -1.5
-    * set :updatePosition.1:value :updateRowPositions2x2:col2
   368 jump *label90 greaterThanEq :updateRowPositions2x2:col2 0.0784313725490196
   369 jump *label92 lessThanEq :updateRowPositions2x2:col2 :findBestPosition:best
   370 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  371 set :findDrillLocationLocal:diffY -1.5
   372 set :findBestPosition:best :updateRowPositions2x2:col2
   373 label *label92
   374 label *label93
   375 label *label90
   376 label *label91
   377 label *label89
-    * set :updatePosition.2:dx 0.5
-    * set :updatePosition.2:dy -1.5
-    * set :updatePosition.2:value :updateRowPositions2x2:col3
   378 jump *label95 greaterThanEq :updateRowPositions2x2:col3 0.0784313725490196
   379 jump *label97 lessThanEq :updateRowPositions2x2:col3 :findBestPosition:best
   380 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  381 set :findDrillLocationLocal:diffY -1.5
   382 set :findBestPosition:best :updateRowPositions2x2:col3
   383 label *label97
   384 label *label98
   385 label *label95
   386 label *label96
   387 label *label94
-    * set :updatePosition.3:dx 1.5
-    * set :updatePosition.3:dy -1.5
-    * set :updatePosition.3:value :updateRowPositions2x2:col4
   388 jump *label100 greaterThanEq :updateRowPositions2x2:col4 0.0784313725490196
   389 jump *label102 lessThanEq :updateRowPositions2x2:col4 :findBestPosition:best
   390 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2:dy
+  391 set :findDrillLocationLocal:diffY -1.5
   392 set :findBestPosition:best :updateRowPositions2x2:col4
   393 label *label102
   394 label *label103
 
   397 label *label99
   398 label *label83
   399 set :updateRowPositions2x2.1:dy -0.5
-    * set :updateRowPositions2x2.1:rowSum :findBestPosition:row2
   400 unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :findBestPosition:row2
-    * set :updatePosition.4:dx -1.5
-    * set :updatePosition.4:dy -0.5
-    * set :updatePosition.4:value :updateRowPositions2x2.1:col1
   401 jump *label106 greaterThanEq :updateRowPositions2x2.1:col1 0.0784313725490196
   402 jump *label108 lessThanEq :updateRowPositions2x2.1:col1 :findBestPosition:best
   403 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  404 set :findDrillLocationLocal:diffY -0.5
   405 set :findBestPosition:best :updateRowPositions2x2.1:col1
   406 label *label108
   407 label *label109
   408 label *label106
   409 label *label107
   410 label *label105
-    * set :updatePosition.5:dx -0.5
-    * set :updatePosition.5:dy -0.5
-    * set :updatePosition.5:value :updateRowPositions2x2.1:col2
   411 jump *label111 greaterThanEq :updateRowPositions2x2.1:col2 0.0784313725490196
   412 jump *label113 lessThanEq :updateRowPositions2x2.1:col2 :findBestPosition:best
   413 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  414 set :findDrillLocationLocal:diffY -0.5
   415 set :findBestPosition:best :updateRowPositions2x2.1:col2
   416 label *label113
   417 label *label114
   418 label *label111
   419 label *label112
   420 label *label110
-    * set :updatePosition.6:dx 0.5
-    * set :updatePosition.6:dy -0.5
-    * set :updatePosition.6:value :updateRowPositions2x2.1:col3
   421 jump *label116 greaterThanEq :updateRowPositions2x2.1:col3 0.0784313725490196
   422 jump *label118 lessThanEq :updateRowPositions2x2.1:col3 :findBestPosition:best
   423 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  424 set :findDrillLocationLocal:diffY -0.5
   425 set :findBestPosition:best :updateRowPositions2x2.1:col3
   426 label *label118
   427 label *label119
   428 label *label116
   429 label *label117
   430 label *label115
-    * set :updatePosition.7:dx 1.5
-    * set :updatePosition.7:dy -0.5
-    * set :updatePosition.7:value :updateRowPositions2x2.1:col4
   431 jump *label121 greaterThanEq :updateRowPositions2x2.1:col4 0.0784313725490196
   432 jump *label123 lessThanEq :updateRowPositions2x2.1:col4 :findBestPosition:best
   433 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.1:dy
+  434 set :findDrillLocationLocal:diffY -0.5
   435 set :findBestPosition:best :updateRowPositions2x2.1:col4
   436 label *label123
   437 label *label124
 
   440 label *label120
   441 label *label104
   442 set :updateRowPositions2x2.2:dy 0.5
-    * set :updateRowPositions2x2.2:rowSum :findBestPosition:row3
   443 unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :findBestPosition:row3
-    * set :updatePosition.8:dx -1.5
-    * set :updatePosition.8:dy 0.5
-    * set :updatePosition.8:value :updateRowPositions2x2.2:col1
   444 jump *label127 greaterThanEq :updateRowPositions2x2.2:col1 0.0784313725490196
   445 jump *label129 lessThanEq :updateRowPositions2x2.2:col1 :findBestPosition:best
   446 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  447 set :findDrillLocationLocal:diffY 0.5
   448 set :findBestPosition:best :updateRowPositions2x2.2:col1
   449 label *label129
   450 label *label130
   451 label *label127
   452 label *label128
   453 label *label126
-    * set :updatePosition.9:dx -0.5
-    * set :updatePosition.9:dy 0.5
-    * set :updatePosition.9:value :updateRowPositions2x2.2:col2
   454 jump *label132 greaterThanEq :updateRowPositions2x2.2:col2 0.0784313725490196
   455 jump *label134 lessThanEq :updateRowPositions2x2.2:col2 :findBestPosition:best
   456 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  457 set :findDrillLocationLocal:diffY 0.5
   458 set :findBestPosition:best :updateRowPositions2x2.2:col2
   459 label *label134
   460 label *label135
   461 label *label132
   462 label *label133
   463 label *label131
-    * set :updatePosition.10:dx 0.5
-    * set :updatePosition.10:dy 0.5
-    * set :updatePosition.10:value :updateRowPositions2x2.2:col3
   464 jump *label137 greaterThanEq :updateRowPositions2x2.2:col3 0.0784313725490196
   465 jump *label139 lessThanEq :updateRowPositions2x2.2:col3 :findBestPosition:best
   466 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  467 set :findDrillLocationLocal:diffY 0.5
   468 set :findBestPosition:best :updateRowPositions2x2.2:col3
   469 label *label139
   470 label *label140
   471 label *label137
   472 label *label138
   473 label *label136
-    * set :updatePosition.11:dx 1.5
-    * set :updatePosition.11:dy 0.5
-    * set :updatePosition.11:value :updateRowPositions2x2.2:col4
   474 jump *label142 greaterThanEq :updateRowPositions2x2.2:col4 0.0784313725490196
   475 jump *label144 lessThanEq :updateRowPositions2x2.2:col4 :findBestPosition:best
   476 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.2:dy
+  477 set :findDrillLocationLocal:diffY 0.5
   478 set :findBestPosition:best :updateRowPositions2x2.2:col4
   479 label *label144
   480 label *label145
 
   483 label *label141
   484 label *label125
   485 set :updateRowPositions2x2.3:dy 1.5
-    * set :updateRowPositions2x2.3:rowSum :findBestPosition:row4
   486 unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :findBestPosition:row4
-    * set :updatePosition.12:dx -1.5
-    * set :updatePosition.12:dy 1.5
-    * set :updatePosition.12:value :updateRowPositions2x2.3:col1
   487 jump *label148 greaterThanEq :updateRowPositions2x2.3:col1 0.0784313725490196
   488 jump *label150 lessThanEq :updateRowPositions2x2.3:col1 :findBestPosition:best
   489 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  490 set :findDrillLocationLocal:diffY 1.5
   491 set :findBestPosition:best :updateRowPositions2x2.3:col1
   492 label *label150
   493 label *label151
   494 label *label148
   495 label *label149
   496 label *label147
-    * set :updatePosition.13:dx -0.5
-    * set :updatePosition.13:dy 1.5
-    * set :updatePosition.13:value :updateRowPositions2x2.3:col2
   497 jump *label153 greaterThanEq :updateRowPositions2x2.3:col2 0.0784313725490196
   498 jump *label155 lessThanEq :updateRowPositions2x2.3:col2 :findBestPosition:best
   499 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  500 set :findDrillLocationLocal:diffY 1.5
   501 set :findBestPosition:best :updateRowPositions2x2.3:col2
   502 label *label155
   503 label *label156
   504 label *label153
   505 label *label154
   506 label *label152
-    * set :updatePosition.14:dx 0.5
-    * set :updatePosition.14:dy 1.5
-    * set :updatePosition.14:value :updateRowPositions2x2.3:col3
   507 jump *label158 greaterThanEq :updateRowPositions2x2.3:col3 0.0784313725490196
   508 jump *label160 lessThanEq :updateRowPositions2x2.3:col3 :findBestPosition:best
   509 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  510 set :findDrillLocationLocal:diffY 1.5
   511 set :findBestPosition:best :updateRowPositions2x2.3:col3
   512 label *label160
   513 label *label161
   514 label *label158
   515 label *label159
   516 label *label157
-    * set :updatePosition.15:dx 1.5
-    * set :updatePosition.15:dy 1.5
-    * set :updatePosition.15:value :updateRowPositions2x2.3:col4
   517 jump *label163 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
   518 jump *label165 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
   519 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions2x2.3:dy
+  520 set :findDrillLocationLocal:diffY 1.5
   521 set :findBestPosition:best :updateRowPositions2x2.3:col4
   522 label *label165
   523 label *label166
 
   530 jump *label167 notEqual :findBestPosition:size 3
   531 op add *tmp221 :findBestPosition:y2 :findBestPosition:y3
   532 op add :findBestPosition:row1.1 :findBestPosition:y1 *tmp221
-    * op add *tmp223 :findBestPosition:y2 :findBestPosition:y3
   533 op add :findBestPosition:row2.1 *tmp221 :findBestPosition:y4
   534 op add *tmp225 :findBestPosition:y3 :findBestPosition:y4
   535 op add :findBestPosition:row3.1 *tmp225 :computeRowValues*retval
   536 set :updateRowPositions3x3:dy -1
-    * set :updateRowPositions3x3:rowSum :findBestPosition:row1.1
   537 unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :findBestPosition:row1.1
-    * set :updatePosition.16:dx -1
-    * set :updatePosition.16:dy -1
-    * set :updatePosition.16:value :updateRowPositions3x3:col1
   538 jump *label171 greaterThanEq :updateRowPositions3x3:col1 0.0784313725490196
   539 jump *label173 lessThanEq :updateRowPositions3x3:col1 0
   540 set :findDrillLocationLocal:diffX -1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  541 set :findDrillLocationLocal:diffY -1
   542 set :findBestPosition:best :updateRowPositions3x3:col1
   543 label *label173
   544 label *label174
   545 label *label171
   546 label *label172
   547 label *label170
-    * set :updatePosition.17:dx 0
-    * set :updatePosition.17:dy -1
-    * set :updatePosition.17:value :updateRowPositions3x3:col2
   548 jump *label176 greaterThanEq :updateRowPositions3x3:col2 0.0784313725490196
   549 jump *label178 lessThanEq :updateRowPositions3x3:col2 :findBestPosition:best
   550 set :findDrillLocationLocal:diffX 0
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  551 set :findDrillLocationLocal:diffY -1
   552 set :findBestPosition:best :updateRowPositions3x3:col2
   553 label *label178
   554 label *label179
   555 label *label176
   556 label *label177
   557 label *label175
-    * set :updatePosition.18:dx 1
-    * set :updatePosition.18:dy -1
-    * set :updatePosition.18:value :updateRowPositions3x3:col3
   558 jump *label181 greaterThanEq :updateRowPositions3x3:col3 0.0784313725490196
   559 jump *label183 lessThanEq :updateRowPositions3x3:col3 :findBestPosition:best
   560 set :findDrillLocationLocal:diffX 1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3:dy
+  561 set :findDrillLocationLocal:diffY -1
   562 set :findBestPosition:best :updateRowPositions3x3:col3
   563 label *label183
   564 label *label184
 
   567 label *label180
   568 label *label169
   569 set :updateRowPositions3x3.1:dy 0
-    * set :updateRowPositions3x3.1:rowSum :findBestPosition:row2.1
   570 unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :findBestPosition:row2.1
-    * set :updatePosition.19:dx -1
-    * set :updatePosition.19:dy 0
-    * set :updatePosition.19:value :updateRowPositions3x3.1:col1
   571 jump *label187 greaterThanEq :updateRowPositions3x3.1:col1 0.0784313725490196
   572 jump *label189 lessThanEq :updateRowPositions3x3.1:col1 :findBestPosition:best
   573 set :findDrillLocationLocal:diffX -1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  574 set :findDrillLocationLocal:diffY 0
   575 set :findBestPosition:best :updateRowPositions3x3.1:col1
   576 label *label189
   577 label *label190
   578 label *label187
   579 label *label188
   580 label *label186
-    * set :updatePosition.20:dx 0
-    * set :updatePosition.20:dy 0
-    * set :updatePosition.20:value :updateRowPositions3x3.1:col2
   581 jump *label192 greaterThanEq :updateRowPositions3x3.1:col2 0.0784313725490196
   582 jump *label194 lessThanEq :updateRowPositions3x3.1:col2 :findBestPosition:best
   583 set :findDrillLocationLocal:diffX 0
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  584 set :findDrillLocationLocal:diffY 0
   585 set :findBestPosition:best :updateRowPositions3x3.1:col2
   586 label *label194
   587 label *label195
   588 label *label192
   589 label *label193
   590 label *label191
-    * set :updatePosition.21:dx 1
-    * set :updatePosition.21:dy 0
-    * set :updatePosition.21:value :updateRowPositions3x3.1:col3
   591 jump *label197 greaterThanEq :updateRowPositions3x3.1:col3 0.0784313725490196
   592 jump *label199 lessThanEq :updateRowPositions3x3.1:col3 :findBestPosition:best
   593 set :findDrillLocationLocal:diffX 1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.1:dy
+  594 set :findDrillLocationLocal:diffY 0
   595 set :findBestPosition:best :updateRowPositions3x3.1:col3
   596 label *label199
   597 label *label200
 
   600 label *label196
   601 label *label185
   602 set :updateRowPositions3x3.2:dy 1
-    * set :updateRowPositions3x3.2:rowSum :findBestPosition:row3.1
   603 unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :findBestPosition:row3.1
-    * set :updatePosition.22:dx -1
-    * set :updatePosition.22:dy 1
-    * set :updatePosition.22:value :updateRowPositions3x3.2:col1
   604 jump *label203 greaterThanEq :updateRowPositions3x3.2:col1 0.0784313725490196
   605 jump *label205 lessThanEq :updateRowPositions3x3.2:col1 :findBestPosition:best
   606 set :findDrillLocationLocal:diffX -1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  607 set :findDrillLocationLocal:diffY 1
   608 set :findBestPosition:best :updateRowPositions3x3.2:col1
   609 label *label205
   610 label *label206
   611 label *label203
   612 label *label204
   613 label *label202
-    * set :updatePosition.23:dx 0
-    * set :updatePosition.23:dy 1
-    * set :updatePosition.23:value :updateRowPositions3x3.2:col2
   614 jump *label208 greaterThanEq :updateRowPositions3x3.2:col2 0.0784313725490196
   615 jump *label210 lessThanEq :updateRowPositions3x3.2:col2 :findBestPosition:best
   616 set :findDrillLocationLocal:diffX 0
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  617 set :findDrillLocationLocal:diffY 1
   618 set :findBestPosition:best :updateRowPositions3x3.2:col2
   619 label *label210
   620 label *label211
   621 label *label208
   622 label *label209
   623 label *label207
-    * set :updatePosition.24:dx 1
-    * set :updatePosition.24:dy 1
-    * set :updatePosition.24:value :updateRowPositions3x3.2:col3
   624 jump *label213 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
   625 jump *label215 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
   626 set :findDrillLocationLocal:diffX 1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3x3.2:dy
+  627 set :findDrillLocationLocal:diffY 1
   628 set :findBestPosition:best :updateRowPositions3x3.2:col3
   629 label *label215
   630 label *label216
 
   651 setaddr :computeRowValues*retaddr *label218 (h:*label218)
   652 call *label6 *invalid :computeRowValues*retval (m:*label218) (h:*label218)
   653 label *label218
-    * set :findBestPosition:y6 :computeRowValues*retval
   654 op add *tmp270 :findBestPosition:y1 :findBestPosition:y2
   655 op add *tmp271 *tmp270 :findBestPosition:y3
   656 op add :findBestPosition:row1.2 :findBestPosition:y0 *tmp271
-    * op add *tmp273 :findBestPosition:y1 :findBestPosition:y2
-    * op add *tmp274 *tmp270 :findBestPosition:y3
   657 op add :findBestPosition:row2.2 *tmp271 :findBestPosition:y4
   658 op add *tmp276 :findBestPosition:y3 :findBestPosition:y4
   659 op add *tmp277 *tmp276 :findBestPosition:y5
   660 op add :findBestPosition:row3.2 :findBestPosition:y2 *tmp277
-    * op add *tmp279 :findBestPosition:y3 :findBestPosition:y4
-    * op add *tmp280 *tmp276 :findBestPosition:y5
   661 op add :findBestPosition:row4.1 *tmp277 :computeRowValues*retval
   662 set :updateRowPositions4x4:dy -1.5
-    * set :updateRowPositions4x4:rowSum :findBestPosition:row1.2
   663 unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 :updateRowPositions4x4:col3 :updateRowPositions4x4:col4 :findBestPosition:row1.2
-    * set :updatePosition.25:dx -1.5
-    * set :updatePosition.25:dy -1.5
-    * set :updatePosition.25:value :updateRowPositions4x4:col1
   664 jump *label221 greaterThanEq :updateRowPositions4x4:col1 0.0784313725490196
   665 jump *label223 lessThanEq :updateRowPositions4x4:col1 :findBestPosition:best
   666 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  667 set :findDrillLocationLocal:diffY -1.5
   668 set :findBestPosition:best :updateRowPositions4x4:col1
   669 label *label223
   670 label *label224
   671 label *label221
   672 label *label222
   673 label *label220
-    * set :updatePosition.26:dx -0.5
-    * set :updatePosition.26:dy -1.5
-    * set :updatePosition.26:value :updateRowPositions4x4:col2
   674 jump *label226 greaterThanEq :updateRowPositions4x4:col2 0.0784313725490196
   675 jump *label228 lessThanEq :updateRowPositions4x4:col2 :findBestPosition:best
   676 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  677 set :findDrillLocationLocal:diffY -1.5
   678 set :findBestPosition:best :updateRowPositions4x4:col2
   679 label *label228
   680 label *label229
   681 label *label226
   682 label *label227
   683 label *label225
-    * set :updatePosition.27:dx 0.5
-    * set :updatePosition.27:dy -1.5
-    * set :updatePosition.27:value :updateRowPositions4x4:col3
   684 jump *label231 greaterThanEq :updateRowPositions4x4:col3 0.0784313725490196
   685 jump *label233 lessThanEq :updateRowPositions4x4:col3 :findBestPosition:best
   686 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  687 set :findDrillLocationLocal:diffY -1.5
   688 set :findBestPosition:best :updateRowPositions4x4:col3
   689 label *label233
   690 label *label234
   691 label *label231
   692 label *label232
   693 label *label230
-    * set :updatePosition.28:dx 1.5
-    * set :updatePosition.28:dy -1.5
-    * set :updatePosition.28:value :updateRowPositions4x4:col4
   694 jump *label236 greaterThanEq :updateRowPositions4x4:col4 0.0784313725490196
   695 jump *label238 lessThanEq :updateRowPositions4x4:col4 :findBestPosition:best
   696 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4:dy
+  697 set :findDrillLocationLocal:diffY -1.5
   698 set :findBestPosition:best :updateRowPositions4x4:col4
   699 label *label238
   700 label *label239
 
   703 label *label235
   704 label *label219
   705 set :updateRowPositions4x4.1:dy -0.5
-    * set :updateRowPositions4x4.1:rowSum :findBestPosition:row2.2
   706 unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 :updateRowPositions4x4.1:col3 :updateRowPositions4x4.1:col4 :findBestPosition:row2.2
-    * set :updatePosition.29:dx -1.5
-    * set :updatePosition.29:dy -0.5
-    * set :updatePosition.29:value :updateRowPositions4x4.1:col1
   707 jump *label242 greaterThanEq :updateRowPositions4x4.1:col1 0.0784313725490196
   708 jump *label244 lessThanEq :updateRowPositions4x4.1:col1 :findBestPosition:best
   709 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  710 set :findDrillLocationLocal:diffY -0.5
   711 set :findBestPosition:best :updateRowPositions4x4.1:col1
   712 label *label244
   713 label *label245
   714 label *label242
   715 label *label243
   716 label *label241
-    * set :updatePosition.30:dx -0.5
-    * set :updatePosition.30:dy -0.5
-    * set :updatePosition.30:value :updateRowPositions4x4.1:col2
   717 jump *label247 greaterThanEq :updateRowPositions4x4.1:col2 0.0784313725490196
   718 jump *label249 lessThanEq :updateRowPositions4x4.1:col2 :findBestPosition:best
   719 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  720 set :findDrillLocationLocal:diffY -0.5
   721 set :findBestPosition:best :updateRowPositions4x4.1:col2
   722 label *label249
   723 label *label250
   724 label *label247
   725 label *label248
   726 label *label246
-    * set :updatePosition.31:dx 0.5
-    * set :updatePosition.31:dy -0.5
-    * set :updatePosition.31:value :updateRowPositions4x4.1:col3
   727 jump *label252 greaterThanEq :updateRowPositions4x4.1:col3 0.0784313725490196
   728 jump *label254 lessThanEq :updateRowPositions4x4.1:col3 :findBestPosition:best
   729 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  730 set :findDrillLocationLocal:diffY -0.5
   731 set :findBestPosition:best :updateRowPositions4x4.1:col3
   732 label *label254
   733 label *label255
   734 label *label252
   735 label *label253
   736 label *label251
-    * set :updatePosition.32:dx 1.5
-    * set :updatePosition.32:dy -0.5
-    * set :updatePosition.32:value :updateRowPositions4x4.1:col4
   737 jump *label257 greaterThanEq :updateRowPositions4x4.1:col4 0.0784313725490196
   738 jump *label259 lessThanEq :updateRowPositions4x4.1:col4 :findBestPosition:best
   739 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.1:dy
+  740 set :findDrillLocationLocal:diffY -0.5
   741 set :findBestPosition:best :updateRowPositions4x4.1:col4
   742 label *label259
   743 label *label260
 
   746 label *label256
   747 label *label240
   748 set :updateRowPositions4x4.2:dy 0.5
-    * set :updateRowPositions4x4.2:rowSum :findBestPosition:row3.2
   749 unpackcolor :updateRowPositions4x4.2:col1 :updateRowPositions4x4.2:col2 :updateRowPositions4x4.2:col3 :updateRowPositions4x4.2:col4 :findBestPosition:row3.2
-    * set :updatePosition.33:dx -1.5
-    * set :updatePosition.33:dy 0.5
-    * set :updatePosition.33:value :updateRowPositions4x4.2:col1
   750 jump *label263 greaterThanEq :updateRowPositions4x4.2:col1 0.0784313725490196
   751 jump *label265 lessThanEq :updateRowPositions4x4.2:col1 :findBestPosition:best
   752 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  753 set :findDrillLocationLocal:diffY 0.5
   754 set :findBestPosition:best :updateRowPositions4x4.2:col1
   755 label *label265
   756 label *label266
   757 label *label263
   758 label *label264
   759 label *label262
-    * set :updatePosition.34:dx -0.5
-    * set :updatePosition.34:dy 0.5
-    * set :updatePosition.34:value :updateRowPositions4x4.2:col2
   760 jump *label268 greaterThanEq :updateRowPositions4x4.2:col2 0.0784313725490196
   761 jump *label270 lessThanEq :updateRowPositions4x4.2:col2 :findBestPosition:best
   762 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  763 set :findDrillLocationLocal:diffY 0.5
   764 set :findBestPosition:best :updateRowPositions4x4.2:col2
   765 label *label270
   766 label *label271
   767 label *label268
   768 label *label269
   769 label *label267
-    * set :updatePosition.35:dx 0.5
-    * set :updatePosition.35:dy 0.5
-    * set :updatePosition.35:value :updateRowPositions4x4.2:col3
   770 jump *label273 greaterThanEq :updateRowPositions4x4.2:col3 0.0784313725490196
   771 jump *label275 lessThanEq :updateRowPositions4x4.2:col3 :findBestPosition:best
   772 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  773 set :findDrillLocationLocal:diffY 0.5
   774 set :findBestPosition:best :updateRowPositions4x4.2:col3
   775 label *label275
   776 label *label276
   777 label *label273
   778 label *label274
   779 label *label272
-    * set :updatePosition.36:dx 1.5
-    * set :updatePosition.36:dy 0.5
-    * set :updatePosition.36:value :updateRowPositions4x4.2:col4
   780 jump *label278 greaterThanEq :updateRowPositions4x4.2:col4 0.0784313725490196
   781 jump *label280 lessThanEq :updateRowPositions4x4.2:col4 :findBestPosition:best
   782 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.2:dy
+  783 set :findDrillLocationLocal:diffY 0.5
   784 set :findBestPosition:best :updateRowPositions4x4.2:col4
   785 label *label280
   786 label *label281
 
   789 label *label277
   790 label *label261
   791 set :updateRowPositions4x4.3:dy 1.5
-    * set :updateRowPositions4x4.3:rowSum :findBestPosition:row4.1
   792 unpackcolor :updateRowPositions4x4.3:col1 :updateRowPositions4x4.3:col2 :updateRowPositions4x4.3:col3 :updateRowPositions4x4.3:col4 :findBestPosition:row4.1
-    * set :updatePosition.37:dx -1.5
-    * set :updatePosition.37:dy 1.5
-    * set :updatePosition.37:value :updateRowPositions4x4.3:col1
   793 jump *label284 greaterThanEq :updateRowPositions4x4.3:col1 0.0784313725490196
   794 jump *label286 lessThanEq :updateRowPositions4x4.3:col1 :findBestPosition:best
   795 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  796 set :findDrillLocationLocal:diffY 1.5
   797 set :findBestPosition:best :updateRowPositions4x4.3:col1
   798 label *label286
   799 label *label287
   800 label *label284
   801 label *label285
   802 label *label283
-    * set :updatePosition.38:dx -0.5
-    * set :updatePosition.38:dy 1.5
-    * set :updatePosition.38:value :updateRowPositions4x4.3:col2
   803 jump *label289 greaterThanEq :updateRowPositions4x4.3:col2 0.0784313725490196
   804 jump *label291 lessThanEq :updateRowPositions4x4.3:col2 :findBestPosition:best
   805 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  806 set :findDrillLocationLocal:diffY 1.5
   807 set :findBestPosition:best :updateRowPositions4x4.3:col2
   808 label *label291
   809 label *label292
   810 label *label289
   811 label *label290
   812 label *label288
-    * set :updatePosition.39:dx 0.5
-    * set :updatePosition.39:dy 1.5
-    * set :updatePosition.39:value :updateRowPositions4x4.3:col3
   813 jump *label294 greaterThanEq :updateRowPositions4x4.3:col3 0.0784313725490196
   814 jump *label296 lessThanEq :updateRowPositions4x4.3:col3 :findBestPosition:best
   815 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  816 set :findDrillLocationLocal:diffY 1.5
   817 set :findBestPosition:best :updateRowPositions4x4.3:col3
   818 label *label296
   819 label *label297
   820 label *label294
   821 label *label295
   822 label *label293
-    * set :updatePosition.40:dx 1.5
-    * set :updatePosition.40:dy 1.5
-    * set :updatePosition.40:value :updateRowPositions4x4.3:col4
   823 jump *label299 greaterThanEq :updateRowPositions4x4.3:col4 0.0784313725490196
   824 jump *label301 lessThanEq :updateRowPositions4x4.3:col4 :findBestPosition:best
   825 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4x4.3:dy
+  826 set :findDrillLocationLocal:diffY 1.5
   827 set :findBestPosition:best :updateRowPositions4x4.3:col4
   828 label *label301
   829 label *label302
 
   846 label *label305
   847 label *label306
   848 jump *label307 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
-    * set :saveLocation:item :findDrillLocationLocal:item
-    * set :saveLocation:value *tmp138
-    * set :saveLocation:x :findDrillLocationLocal:dx
-    * set :saveLocation:y :findDrillLocationLocal:dy
   849 op add .count .count 1
-    * set *tmp355 .count
   850 sensor *tmp357 :findDrillLocationLocal:item @id
   851 write *tmp357 bank1 .count
   852 op add .count .count 1
-    * write :findDrillLocationLocal:score bank1 .count
+  853 write *tmp138 bank1 .count
   854 op add .count .count 1
   855 write :findDrillLocationLocal:dx bank1 .count
   856 op add .count .count 1
 
   898 jump *label72 always
   899 label *label74
   900 jump *label318 lessThan :findDrillLocationLocal:best 0
-    * set :saveLocation.1:item :findDrillLocationLocal:item
-    * set :saveLocation.1:value :findDrillLocationLocal:best
-    * set :saveLocation.1:x :findDrillLocationLocal:bestX
-    * set :saveLocation.1:y :findDrillLocationLocal:bestY
   901 op add .count .count 1
-    * set *tmp388 .count
   902 sensor *tmp390 :findDrillLocationLocal:item @id
   903 write *tmp390 bank1 .count
   904 op add .count .count 1
 
   923 set :moveTo.5:y :createTerrainMask:y
   924 set *tmp398 :createTerrainMask:x
   925 set *tmp399 :createTerrainMask:y
-    * set :moveTo.6:x :moveTo.5:x
-    * set :moveTo.6:y :moveTo.5:y
-    * set :moveTo.6:radius 6
+  926 set :moveTo.6:x :createTerrainMask:x
+  927 set :moveTo.6:y :createTerrainMask:y
   928 label *label324
-    * ucontrol within *tmp398 *tmp399 6 *tmp400
+  929 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp400
   930 jump *label326 notEqual *tmp400 false
-    * op sub *tmp402 6 0.5
-    * ucontrol approach *tmp398 *tmp399 5.5
+  931 ucontrol approach :createTerrainMask:x :createTerrainMask:y 5.5
   932 label *label325
   933 jump *label324 always
   934 label *label326
 
   949 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   950 sensor solid type @solid
   951 select :isBlocked:result notEqual solid false 1 0
-    * set *tmp406 :isBlocked:result
   952 label *label333
   953 op or :createTerrainMask:result *tmp403 :isBlocked:result
   954 label *label331
 
  1014 setaddr :findPossiblePlacement*retaddr *label348 (h:*label348)
  1015 call *label9 *invalid :findPossiblePlacement*retval (m:*label348) (h:*label348)
  1016 label *label348
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1017 jump *label349 lessThan :findPossiblePlacement*retval 0
  1018 jump *label351 greaterThanEq :findPossiblePlacement*retval 0
  1019 set :tryPlaceGenerator*retval false
 
  1024 op add .water2X *tmp428 :findPossiblePlacement:x
  1025 op add *tmp430 :tryPlaceGenerator:centerY 0.5
  1026 op add .water2Y *tmp430 :findPossiblePlacement:y
-    * op add *tmp432 :tryPlaceGenerator:centerX 0.5
  1027 op add .generatorX *tmp428 :findPossiblePlacement:x
  1028 op add *tmp434 :tryPlaceGenerator:centerY 2.5
  1029 op add .generatorY *tmp434 :findPossiblePlacement:y
 
  1038 setaddr :findPossiblePlacement*retaddr *label353 (h:*label353)
  1039 call *label9 *invalid :findPossiblePlacement*retval (m:*label353) (h:*label353)
  1040 label *label353
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1041 jump *label354 greaterThanEq :findPossiblePlacement*retval 0
  1042 set :tryPlaceGenerator*retval false
  1043 jump *label347 always
 
  1049 op add .water2Y *tmp442 :findPossiblePlacement:y
  1050 op add *tmp444 :tryPlaceGenerator:centerX 2.5
  1051 op add .generatorX *tmp444 :findPossiblePlacement:x
-    * op add *tmp446 :tryPlaceGenerator:centerY 0.5
  1052 op add .generatorY *tmp442 :findPossiblePlacement:y
  1053 op shl *tmp448 :tryPlaceGenerator:generatorHorizontal :findPossiblePlacement*retval
  1054 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp448
 
  1060 setaddr :findPossiblePlacement*retaddr *label356 (h:*label356)
  1061 call *label9 *invalid :findPossiblePlacement*retval (m:*label356) (h:*label356)
  1062 label *label356
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1063 jump *label357 greaterThanEq :findPossiblePlacement*retval 0
  1064 set :tryPlaceGenerator*retval false
  1065 jump *label347 always
 
  1076 setaddr :findPossiblePlacement*retaddr *label359 (h:*label359)
  1077 call *label9 *invalid :findPossiblePlacement*retval (m:*label359) (h:*label359)
  1078 label *label359
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1079 jump *label360 greaterThanEq :findPossiblePlacement*retval 0
  1080 set :tryPlaceGenerator*retval false
  1081 jump *label347 always
 
  1092 setaddr :findPossiblePlacement*retaddr *label362 (h:*label362)
  1093 call *label9 *invalid :findPossiblePlacement*retval (m:*label362) (h:*label362)
  1094 label *label362
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1095 jump *label363 greaterThanEq :findPossiblePlacement*retval 0
  1096 set :tryPlaceGenerator*retval false
  1097 jump *label347 always
 
  1099 label *label364
  1100 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
  1101 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
-    * op shl *tmp466 1 :findPossiblePlacement*retval
  1102 set :tryPlaceGenerator*retval true
  1103 jump *label347 always
  1104 label *label347
 
  1118 setaddr :createTerrainMask*retaddr *label366 (h:*label366)
  1119 call *label8 *invalid :createTerrainMask*retval (m:*label366) (h:*label366)
  1120 label *label366
-    * set :layoutThoriumDrillAtLocation:plainTerrainMask :createTerrainMask*retval
  1121 set :createFixedMatrix:row0 0b0000000
-    * set :createFixedMatrix:row1 0b0000000
-    * set :createFixedMatrix:row2 0b0011100
-    * set :createFixedMatrix:row3 0b0011100
-    * set :createFixedMatrix:row4 0b0011100
-    * set :createFixedMatrix:row5 0b0000000
-    * set :createFixedMatrix:row6 0b0000000
-    * set *tmp469 0b0000000
-    * op shl *tmp470 0b0000000 7
-    * op or *tmp471 :createFixedMatrix:row0 0
-    * op shl *tmp472 0b0011100 14
-    * op or *tmp473 *tmp471 458752
-    * op shl *tmp474 0b0011100 21
-    * op or *tmp475 *tmp473 58720256
-    * op shl *tmp476 0b0011100 28
-    * op or *tmp477 *tmp475 7516192768
-    * op shl *tmp478 0b0000000 35
-    * op or *tmp479 *tmp477 0
-    * op shl *tmp480 0b0000000 42
-    * op or *tmp468 *tmp479 0
+ 1122 op or *tmp471 0b0000000 0
+ 1123 op or *tmp473 0 458752
+ 1124 op or *tmp475 458752 58720256
+ 1125 op or *tmp477 59179008 7516192768
+ 1126 op or *tmp479 7575371776 0
+ 1127 op or *tmp468 7575371776 0
  1128 label *label367
-    * op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval *tmp468
+ 1129 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
  1130 set :createFixedMatrix.1:row0 0b1000001
-    * set :createFixedMatrix.1:row1 0b0000000
-    * set :createFixedMatrix.1:row2 0b0011100
-    * set :createFixedMatrix.1:row3 0b0011100
-    * set :createFixedMatrix.1:row4 0b0011100
-    * set :createFixedMatrix.1:row5 0b0000000
-    * set :createFixedMatrix.1:row6 0b1000001
-    * set *tmp484 0b1000001
-    * op shl *tmp485 0b0000000 7
-    * op or *tmp486 :createFixedMatrix.1:row0 0
-    * op shl *tmp487 0b0011100 14
-    * op or *tmp488 *tmp486 458752
-    * op shl *tmp489 0b0011100 21
-    * op or *tmp490 *tmp488 58720256
-    * op shl *tmp491 0b0011100 28
-    * op or *tmp492 *tmp490 7516192768
-    * op shl *tmp493 0b0000000 35
-    * op or *tmp494 *tmp492 0
-    * op shl *tmp495 0b1000001 42
-    * op or *tmp483 *tmp494 285873023221760
+ 1131 op or *tmp486 0b1000001 0
+ 1132 op or *tmp488 65 458752
+ 1133 op or *tmp490 458817 58720256
+ 1134 op or *tmp492 59179073 7516192768
+ 1135 op or *tmp494 7575371841 0
+ 1136 op or *tmp483 7575371841 285873023221760
  1137 label *label368
-    * op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp483
+ 1138 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
  1139 set :createFixedMatrix.2:row0 0b11
-    * set :createFixedMatrix.2:row1 0b11
-    * set *tmp499 0b11
-    * op shl *tmp500 0b11 7
-    * op or *tmp498 :createFixedMatrix.2:row0 384
+ 1140 op or *tmp498 0b11 384
  1141 label *label369
-    * set :layoutThoriumDrillAtLocation:mask2x2 *tmp498
+ 1142 set :layoutThoriumDrillAtLocation:mask2x2 387
  1143 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
-    * set :findPossiblePlacement:placementMask *tmp498
+ 1144 set :findPossiblePlacement:placementMask 387
  1145 set :findPossiblePlacement:width 2
  1146 set :findPossiblePlacement:height 2
  1147 setaddr :findPossiblePlacement*retaddr *label370 (h:*label370)
  1148 call *label9 *invalid :findPossiblePlacement*retval (m:*label370) (h:*label370)
  1149 label *label370
-    * set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
-    * set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
-    * set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
  1150 jump *label371 lessThan :findPossiblePlacement*retval 0
  1151 op add *tmp505 .drillX 0.5
  1152 op add .water1X *tmp505 :findPossiblePlacement:x
 
  1154 op add .water1Y *tmp507 :findPossiblePlacement:y
  1155 op shl *tmp509 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
  1156 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp509
-    * op shl *tmp510 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
  1157 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:cornersMask *tmp509
  1158 label *label371
  1159 label *label372
 
  1164 setaddr :findPossiblePlacement*retaddr *label373 (h:*label373)
  1165 call *label9 *invalid :findPossiblePlacement*retval (m:*label373) (h:*label373)
  1166 label *label373
-    * set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
-    * set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
-    * set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
  1167 jump *label374 lessThan :findPossiblePlacement*retval 0
  1168 op add *tmp514 .drillX 0.5
  1169 op add .containerX *tmp514 :findPossiblePlacement:x
 
  1174 label *label374
  1175 label *label375
  1176 set :createFixedMatrix.3:row0 0b1111
-    * set :createFixedMatrix.3:row1 0b1111
-    * set *tmp520 0b1111
-    * op shl *tmp521 0b1111 7
-    * op or *tmp519 :createFixedMatrix.3:row0 1920
+ 1177 op or *tmp519 0b1111 1920
  1178 label *label376
-    * set :layoutThoriumDrillAtLocation:generatorHorizontal *tmp519
+ 1179 set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
  1180 set :createFixedMatrix.4:row0 0b11
-    * set :createFixedMatrix.4:row1 0b11
-    * set :createFixedMatrix.4:row2 0b11
-    * set :createFixedMatrix.4:row3 0b11
-    * set *tmp524 0b11
-    * op shl *tmp525 0b11 7
-    * op or *tmp526 :createFixedMatrix.4:row0 384
-    * op shl *tmp527 0b11 14
-    * op or *tmp528 *tmp526 49152
-    * op shl *tmp529 0b11 21
-    * op or *tmp523 *tmp528 6291456
+ 1181 op or *tmp526 0b11 384
+ 1182 op or *tmp528 387 49152
+ 1183 op or *tmp523 49539 6291456
  1184 label *label377
-    * set :layoutThoriumDrillAtLocation:generatorVertical *tmp523
+ 1185 set :layoutThoriumDrillAtLocation:generatorVertical 6340995
  1186 set :tryPlaceGenerator:centerX .drillX
  1187 set :tryPlaceGenerator:centerY .drillY
  1188 set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:terrainMask
-    * set :tryPlaceGenerator:generatorHorizontal *tmp519
-    * set :tryPlaceGenerator:generatorVertical *tmp523
+ 1189 set :tryPlaceGenerator:generatorHorizontal 1935
+ 1190 set :tryPlaceGenerator:generatorVertical 6340995
  1191 setaddr :tryPlaceGenerator*retaddr *label378 (h:*label378)
  1192 call *label10 *invalid :tryPlaceGenerator*retval (m:*label378) (h:*label378)
  1193 label *label378
 
  1222 setaddr :createTerrainMask*retaddr *label388 (h:*label388)
  1223 call *label8 *invalid :createTerrainMask*retval (m:*label388) (h:*label388)
  1224 label *label388
-    * set :layoutThoriumDrillAtLocation:newTerrainMask :createTerrainMask*retval
  1225 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
-    * set :shiftMask:shiftX :layoutThoriumDrillAtLocation:sx
-    * set :shiftMask:shiftY :layoutThoriumDrillAtLocation:sy
  1226 op abs *tmp538 :layoutThoriumDrillAtLocation:sx
  1227 op greaterThan *tmp539 *tmp538 6
  1228 op abs *tmp540 :layoutThoriumDrillAtLocation:sy
 
  1245 op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask *tmp551
  1246 label *label393
  1247 jump *label394 equal :layoutThoriumDrillAtLocation:sx 0
-    * op abs *tmp554 :layoutThoriumDrillAtLocation:sx
  1248 op sub *tmp555 7 *tmp538
  1249 op shr :shiftMask:keep 0b1111111 *tmp555
  1250 jump *label396 lessThanEq :layoutThoriumDrillAtLocation:sx 0
-    * op abs *tmp559 :layoutThoriumDrillAtLocation:sx
-    * op sub *tmp560 7 *tmp538
  1251 op shl :shiftMask:keep :shiftMask:keep *tmp555
  1252 label *label396
  1253 label *label397
 
  1263 set *tmp537 :shiftMask:mask
  1264 jump *label389 always
  1265 label *label389
-    * set :layoutThoriumDrillAtLocation:shiftedMask *tmp537
  1266 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp537
  1267 op sub *tmp565 .drillX :layoutThoriumDrillAtLocation:sx
  1268 op sub *tmp566 .drillY :layoutThoriumDrillAtLocation:sy

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-66 instructions):
 
    18 select value equal floor :spotValue:ore 0.00392156862745098 0
    19 sensor solid type @solid
    20 select :spotValue:result notEqual solid false 0.09803921568627451 value
-    * set *tmp1 :spotValue:result
    21 label *label15
    22 op sub :spotValue.1:x :computeRowValues:x 1
    23 set :spotValue.1:y :computeRowValues:y
 
    26 select value equal floor :spotValue.1:ore 0.00392156862745098 0
    27 sensor solid type @solid
    28 select :spotValue.1:result notEqual solid false 0.09803921568627451 value
-    * set *tmp3 :spotValue.1:result
    29 label *label16
    30 set :spotValue.2:x :computeRowValues:x
    31 set :spotValue.2:y :computeRowValues:y
 
    34 select value equal floor :spotValue.2:ore 0.00392156862745098 0
    35 sensor solid type @solid
    36 select :spotValue.2:result notEqual solid false 0.09803921568627451 value
-    * set *tmp5 :spotValue.2:result
    37 label *label17
    38 op add :spotValue.3:x :computeRowValues:x 1
    39 set :spotValue.3:y :computeRowValues:y
 
    42 select value equal floor :spotValue.3:ore 0.00392156862745098 0
    43 sensor solid type @solid
    44 select :spotValue.3:result notEqual solid false 0.09803921568627451 value
-    * set *tmp7 :spotValue.3:result
    45 label *label18
    46 op add :spotValue.4:x :computeRowValues:x 2
    47 set :spotValue.4:y :computeRowValues:y
 
    50 select value equal floor :spotValue.4:ore 0.00392156862745098 0
    51 sensor solid type @solid
    52 select :spotValue.4:result notEqual solid false 0.09803921568627451 value
-    * set *tmp9 :spotValue.4:result
    53 label *label19
    54 jump *label20 notEqual :computeRowValues:size 2
    55 op add *tmp12 :spotValue:result :spotValue.1:result
 
    63 jump *label22 notEqual :computeRowValues:size 3
    64 op add *tmp19 :spotValue.1:result :spotValue.2:result
    65 op add *tmp20 :spotValue:result *tmp19
-    * op add *tmp21 :spotValue.1:result :spotValue.2:result
    66 op add *tmp22 *tmp19 :spotValue.3:result
    67 op add *tmp23 :spotValue.2:result :spotValue.3:result
    68 op add *tmp24 *tmp23 :spotValue.4:result
 
    77 select value equal floor :spotValue.5:ore 0.00392156862745098 0
    78 sensor solid type @solid
    79 select :spotValue.5:result notEqual solid false 0.09803921568627451 value
-    * set *tmp27 :spotValue.5:result
    80 label *label24
    81 op add :spotValue.6:x :computeRowValues:x 3
    82 set :spotValue.6:y :computeRowValues:y
 
    85 select value equal floor :spotValue.6:ore 0.00392156862745098 0
    86 sensor solid type @solid
    87 select :spotValue.6:result notEqual solid false 0.09803921568627451 value
-    * set *tmp29 :spotValue.6:result
    88 label *label25
    89 op add *tmp30 :spotValue:result :spotValue.1:result
    90 op add *tmp31 *tmp30 :spotValue.2:result
    91 op add *tmp32 :spotValue.5:result *tmp31
    92 op min *tmp33 0.09803921568627451 *tmp32
-    * op add *tmp34 :spotValue:result :spotValue.1:result
-    * op add *tmp35 *tmp30 :spotValue.2:result
    93 op add *tmp36 *tmp31 :spotValue.3:result
    94 op min *tmp37 0.09803921568627451 *tmp36
    95 op add *tmp38 :spotValue.2:result :spotValue.3:result
    96 op add *tmp39 *tmp38 :spotValue.4:result
    97 op add *tmp40 :spotValue.1:result *tmp39
    98 op min *tmp41 0.09803921568627451 *tmp40
-    * op add *tmp42 :spotValue.2:result :spotValue.3:result
-    * op add *tmp43 *tmp38 :spotValue.4:result
    99 op add *tmp44 *tmp39 :spotValue.6:result
   100 op min *tmp45 0.09803921568627451 *tmp44
   101 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
 
   123 set .mapAction "Locating ore..."
   124 set .angle 0
   125 set .mapProgress 0
-    * set :moveTo:x :findDrillLocationLocal:x
-    * set :moveTo:y :findDrillLocationLocal:y
-    * set *tmp51 :findDrillLocationLocal:x
-    * set *tmp52 :findDrillLocationLocal:y
-    * set :moveTo.1:x :findDrillLocationLocal:x
-    * set :moveTo.1:y :findDrillLocationLocal:y
   126 label *label29
-    * ucontrol within .coreX .coreY 6 *tmp53
+  127 ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp53
   128 jump *label31 notEqual *tmp53 false
-    * ucontrol approach .coreX .coreY 5.5
+  129 ucontrol approach :findDrillLocationLocal:x :findDrillLocationLocal:y 5.5
   130 label *label30
   131 jump *label29 always
   132 label *label31
 
   162 op max *tmp74 *tmp71 5
   163 op min *tmp73 *tmp74 *tmp72
   164 label *label39
-    * set :locateOreAway:lx *tmp73
   165 op cos *tmp76 :locateOreAway:a
   166 op mul *tmp77 *tmp76 :locateOreAway:distance
   167 op add *tmp78 .coreY *tmp77
 
   169 op max *tmp81 *tmp78 5
   170 op min *tmp80 *tmp81 *tmp79
   171 label *label40
-    * set :locateOreAway:ly *tmp80
   172 label *label42
   173 ucontrol within *tmp73 *tmp80 5 *tmp83
   174 jump *label44 notEqual *tmp83 false
 
   260 op add .mapSpots .mapSpots 1
   261 label *label65
   262 label *label66
-    * set :moveTo.3:x :locateOreAway:x
-    * set :moveTo.3:y :locateOreAway:y
-    * set *tmp133 :locateOreAway:x
-    * set *tmp134 :locateOreAway:y
-    * set :moveTo.4:x :locateOreAway:x
-    * set :moveTo.4:y :locateOreAway:y
   263 label *label69
-    * ucontrol within :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 6 *tmp135
+  264 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp135
   265 jump *label71 notEqual *tmp135 false
-    * ucontrol approach :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 5.5
+  266 ucontrol approach :locateOreAway:x :locateOreAway:y 5.5
   267 label *label70
   268 jump *label69 always
   269 label *label71
 
   327 op add :findBestPosition:row2 :findBestPosition:y2 :findBestPosition:y3
   328 op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
   329 op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
-    * set :updateRowPositions2x2:dy -1.5
   330 unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :findBestPosition:row1
   331 jump *label85 greaterThanEq :updateRowPositions2x2:col1 0.0784313725490196
   332 jump *label87 lessThanEq :updateRowPositions2x2:col1 0
 
   369 label *label101
   370 label *label99
   371 label *label83
-    * set :updateRowPositions2x2.1:dy -0.5
   372 unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :findBestPosition:row2
   373 jump *label106 greaterThanEq :updateRowPositions2x2.1:col1 0.0784313725490196
   374 jump *label108 lessThanEq :updateRowPositions2x2.1:col1 :findBestPosition:best
 
   411 label *label122
   412 label *label120
   413 label *label104
-    * set :updateRowPositions2x2.2:dy 0.5
   414 unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :findBestPosition:row3
   415 jump *label127 greaterThanEq :updateRowPositions2x2.2:col1 0.0784313725490196
   416 jump *label129 lessThanEq :updateRowPositions2x2.2:col1 :findBestPosition:best
 
   453 label *label143
   454 label *label141
   455 label *label125
-    * set :updateRowPositions2x2.3:dy 1.5
   456 unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :findBestPosition:row4
   457 jump *label148 greaterThanEq :updateRowPositions2x2.3:col1 0.0784313725490196
   458 jump *label150 lessThanEq :updateRowPositions2x2.3:col1 :findBestPosition:best
 
   503 op add :findBestPosition:row2.1 *tmp221 :findBestPosition:y4
   504 op add *tmp225 :findBestPosition:y3 :findBestPosition:y4
   505 op add :findBestPosition:row3.1 *tmp225 :computeRowValues*retval
-    * set :updateRowPositions3x3:dy -1
   506 unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :findBestPosition:row1.1
   507 jump *label171 greaterThanEq :updateRowPositions3x3:col1 0.0784313725490196
   508 jump *label173 lessThanEq :updateRowPositions3x3:col1 0
 
   535 label *label182
   536 label *label180
   537 label *label169
-    * set :updateRowPositions3x3.1:dy 0
   538 unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :findBestPosition:row2.1
   539 jump *label187 greaterThanEq :updateRowPositions3x3.1:col1 0.0784313725490196
   540 jump *label189 lessThanEq :updateRowPositions3x3.1:col1 :findBestPosition:best
 
   567 label *label198
   568 label *label196
   569 label *label185
-    * set :updateRowPositions3x3.2:dy 1
   570 unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :findBestPosition:row3.1
   571 jump *label203 greaterThanEq :updateRowPositions3x3.2:col1 0.0784313725490196
   572 jump *label205 lessThanEq :updateRowPositions3x3.2:col1 :findBestPosition:best
 
   626 op add *tmp277 *tmp276 :findBestPosition:y5
   627 op add :findBestPosition:row3.2 :findBestPosition:y2 *tmp277
   628 op add :findBestPosition:row4.1 *tmp277 :computeRowValues*retval
-    * set :updateRowPositions4x4:dy -1.5
   629 unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 :updateRowPositions4x4:col3 :updateRowPositions4x4:col4 :findBestPosition:row1.2
   630 jump *label221 greaterThanEq :updateRowPositions4x4:col1 0.0784313725490196
   631 jump *label223 lessThanEq :updateRowPositions4x4:col1 :findBestPosition:best
 
   668 label *label237
   669 label *label235
   670 label *label219
-    * set :updateRowPositions4x4.1:dy -0.5
   671 unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 :updateRowPositions4x4.1:col3 :updateRowPositions4x4.1:col4 :findBestPosition:row2.2
   672 jump *label242 greaterThanEq :updateRowPositions4x4.1:col1 0.0784313725490196
   673 jump *label244 lessThanEq :updateRowPositions4x4.1:col1 :findBestPosition:best
 
   710 label *label258
   711 label *label256
   712 label *label240
-    * set :updateRowPositions4x4.2:dy 0.5
   713 unpackcolor :updateRowPositions4x4.2:col1 :updateRowPositions4x4.2:col2 :updateRowPositions4x4.2:col3 :updateRowPositions4x4.2:col4 :findBestPosition:row3.2
   714 jump *label263 greaterThanEq :updateRowPositions4x4.2:col1 0.0784313725490196
   715 jump *label265 lessThanEq :updateRowPositions4x4.2:col1 :findBestPosition:best
 
   752 label *label279
   753 label *label277
   754 label *label261
-    * set :updateRowPositions4x4.3:dy 1.5
   755 unpackcolor :updateRowPositions4x4.3:col1 :updateRowPositions4x4.3:col2 :updateRowPositions4x4.3:col3 :updateRowPositions4x4.3:col4 :findBestPosition:row4.1
   756 jump *label284 greaterThanEq :updateRowPositions4x4.3:col1 0.0784313725490196
   757 jump *label286 lessThanEq :updateRowPositions4x4.3:col1 :findBestPosition:best
 
   799 op mul *tmp138 :findBestPosition:best 255
   800 jump *label75 always
   801 label *label75
-    * set :findDrillLocationLocal:score *tmp138
   802 jump *label303 lessThanEq *tmp138 :findDrillLocationLocal:capacity
   803 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   804 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
 
   881 return :findDrillLocationLocal*retaddr
   882 end
   883 label *label8
-    * set :moveTo.5:x :createTerrainMask:x
-    * set :moveTo.5:y :createTerrainMask:y
-    * set *tmp398 :createTerrainMask:x
-    * set *tmp399 :createTerrainMask:y
-    * set :moveTo.6:x :createTerrainMask:x
-    * set :moveTo.6:y :createTerrainMask:y
   884 label *label324
   885 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp400
   886 jump *label326 notEqual *tmp400 false
 
  1074 setaddr :createTerrainMask*retaddr *label366 (h:*label366)
  1075 call *label8 *invalid :createTerrainMask*retval (m:*label366) (h:*label366)
  1076 label *label366
-    * set :createFixedMatrix:row0 0b0000000
-    * op or *tmp471 0b0000000 0
-    * op or *tmp473 0 458752
-    * op or *tmp475 458752 58720256
-    * op or *tmp477 59179008 7516192768
-    * op or *tmp479 7575371776 0
-    * op or *tmp468 7575371776 0
  1077 label *label367
  1078 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
-    * set :createFixedMatrix.1:row0 0b1000001
-    * op or *tmp486 0b1000001 0
-    * op or *tmp488 65 458752
-    * op or *tmp490 458817 58720256
-    * op or *tmp492 59179073 7516192768
-    * op or *tmp494 7575371841 0
-    * op or *tmp483 7575371841 285873023221760
  1079 label *label368
  1080 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
-    * set :createFixedMatrix.2:row0 0b11
-    * op or *tmp498 0b11 384
  1081 label *label369
  1082 set :layoutThoriumDrillAtLocation:mask2x2 387
  1083 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
 
  1113 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp518
  1114 label *label374
  1115 label *label375
-    * set :createFixedMatrix.3:row0 0b1111
-    * op or *tmp519 0b1111 1920
  1116 label *label376
  1117 set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
-    * set :createFixedMatrix.4:row0 0b11
-    * op or *tmp526 0b11 384
-    * op or *tmp528 387 49152
-    * op or *tmp523 49539 6291456
  1118 label *label377
  1119 set :layoutThoriumDrillAtLocation:generatorVertical 6340995
  1120 set :tryPlaceGenerator:centerX .drillX

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
   152 set :locateOreAway:lastY -1
   153 op max .angle .angle @pi
   154 op mul .mapProgress .angle .angle
+  155 op sub *tmp72 @mapw 5
+  156 op sub *tmp79 @maph 5
   157 label *label36
   158 jump *label38 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   159 op div :locateOreAway:a .angle @degToRad
   160 op sin *tmp69 :locateOreAway:a
   161 op mul *tmp70 *tmp69 :locateOreAway:distance
   162 op add *tmp71 .coreX *tmp70
-    * op sub *tmp72 @mapw 5
   163 op max *tmp74 *tmp71 5
   164 op min *tmp73 *tmp74 *tmp72
   165 label *label39
   166 op cos *tmp76 :locateOreAway:a
   167 op mul *tmp77 *tmp76 :locateOreAway:distance
   168 op add *tmp78 .coreY *tmp77
-    * op sub *tmp79 @maph 5
   169 op max *tmp81 *tmp78 5
   170 op min *tmp80 *tmp81 *tmp79
   171 label *label40
 
   895 label *label327
   896 jump *label329 lessThan :createTerrainMask:r -3
   897 set :createTerrainMask:c 3
+  898 op add *tmp405 :createTerrainMask:y :createTerrainMask:r
   899 label *label330
   900 jump *label332 lessThan :createTerrainMask:c -3
   901 op shl *tmp403 :createTerrainMask:result 1
   902 op add *tmp404 :createTerrainMask:x :createTerrainMask:c
-    * op add *tmp405 :createTerrainMask:y :createTerrainMask:r
   903 set :isBlocked:x *tmp404
   904 set :isBlocked:y *tmp405
   905 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-2 instructions):
 
   156 op sub *tmp79 @maph 5
   157 label *label36
   158 jump *label38 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
+  159 label *label409
   160 op div :locateOreAway:a .angle @degToRad
   161 op sin *tmp69 :locateOreAway:a
   162 op mul *tmp70 *tmp69 :locateOreAway:distance
 
   211 set :visited:i .locationsStart
   212 label *label56
   213 jump *label58 greaterThanEq :visited:i *tmp110
+  214 label *label410
   215 op mul :visited:index 4 :visited:i
   216 op add *tmp112 :visited:index 2
   217 read :visited:lx bank1 *tmp112
 
   227 label *label60
   228 label *label57
   229 op add :visited:i :visited:i 1
-    * jump *label56 always
+  230 jump *label410 lessThan :visited:i *tmp110
   231 label *label58
   232 set *tmp109 false
   233 jump *label55 always
 
   246 label *label51
   247 label *label52
   248 label *label37
-    * jump *label36 always
+  249 jump *label409 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   250 label *label38
   251 set *tmp63 false
   252 jump *label35 always
 
   895 set :createTerrainMask:result 0
   896 set :createTerrainMask:r 3
   897 label *label327
-    * jump *label329 lessThan :createTerrainMask:r -3
+  898 label *label411
   899 set :createTerrainMask:c 3
   900 op add *tmp405 :createTerrainMask:y :createTerrainMask:r
   901 label *label330
-    * jump *label332 lessThan :createTerrainMask:c -3
+  902 label *label412
   903 op shl *tmp403 :createTerrainMask:result 1
   904 op add *tmp404 :createTerrainMask:x :createTerrainMask:c
   905 set :isBlocked:x *tmp404
 
   911 op or :createTerrainMask:result *tmp403 :isBlocked:result
   912 label *label331
   913 op sub :createTerrainMask:c :createTerrainMask:c 1
-    * jump *label330 always
+  914 jump *label412 greaterThanEq :createTerrainMask:c -3
   915 label *label332
   916 label *label328
   917 op sub :createTerrainMask:r :createTerrainMask:r 1
-    * jump *label327 always
+  918 jump *label411 greaterThanEq :createTerrainMask:r -3
   919 label *label329
   920 set :createTerrainMask*retval :createTerrainMask:result
   921 jump *label321 always
 
   926 set :findPossiblePlacement:y -3
   927 label *label335
   928 jump *label337 greaterThan :findPossiblePlacement:y 3
+  929 label *label413
   930 op add *tmp408 :findPossiblePlacement:y 3
   931 op mul *tmp409 7 *tmp408
   932 op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp409
   933 set :findPossiblePlacement:x -3
   934 label *label338
   935 jump *label340 greaterThan :findPossiblePlacement:x 3
+  936 label *label414
   937 op and *tmp411 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
   938 jump *label341 notEqual *tmp411 0
   939 op mul *tmp414 :findPossiblePlacement:y 7
 
   950 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
   951 label *label339
   952 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
-    * jump *label338 always
+  953 jump *label414 lessThanEq :findPossiblePlacement:x 3
   954 label *label340
   955 op sub *tmp420 3 :findPossiblePlacement:height
   956 jump *label345 lessThanEq :findPossiblePlacement:y *tmp420
 
   959 label *label346
   960 label *label336
   961 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
-    * jump *label335 always
+  962 jump *label413 lessThanEq :findPossiblePlacement:y 3
   963 label *label337
   964 set :findPossiblePlacement*retval -1
   965 jump *label334 always

Modifications by Replicate loop condition at line 41:5 (+1 instructions):
 
   173 label *label42
   174 ucontrol within *tmp73 *tmp80 5 *tmp83
   175 jump *label44 notEqual *tmp83 false
+  176 label *label415
   177 ucontrol approach *tmp73 *tmp80 4.5
   178 label *label43
-    * jump *label42 always
+  179 ucontrol within *tmp73 *tmp80 5 *tmp83
+  180 jump *label415 equal *tmp83 false
   181 label *label44
   182 label *label41
   183 op div *tmp86 3.8197185279121366 :locateOreAway:distance

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   212 set *tmp110 .locations
   213 set :visited:i .locationsStart
   214 label *label56
-    * jump *label58 greaterThanEq :visited:i *tmp110
+  215 jump *label58 greaterThanEq .locationsStart *tmp110
   216 label *label410
   217 op mul :visited:index 4 :visited:i
   218 op add *tmp112 :visited:index 2

Modifications by Replicate loop condition at line 41:5 (+1 instructions):
 
   267 label *label69
   268 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp135
   269 jump *label71 notEqual *tmp135 false
+  270 label *label416
   271 ucontrol approach :locateOreAway:x :locateOreAway:y 5.5
   272 label *label70
-    * jump *label69 always
+  273 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp135
+  274 jump *label416 equal *tmp135 false
   275 label *label71
   276 label *label68
   277 label *label67

Modifications by Replicate loop condition at line 41:5 (+1 instructions):
 
   890 label *label324
   891 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp400
   892 jump *label326 notEqual *tmp400 false
+  893 label *label417
   894 ucontrol approach :createTerrainMask:x :createTerrainMask:y 5.5
   895 label *label325
-    * jump *label324 always
+  896 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp400
+  897 jump *label417 equal *tmp400 false
   898 label *label326
   899 label *label323
   900 label *label322

Modifications by Inline function call at line 160:14 (+78 instructions):
 
   286 set :computeRowValues:y *tmp139
   287 set :computeRowValues:ore :findDrillLocationLocal:ore
   288 set :computeRowValues:size :findDrillLocationLocal:size
-    * setaddr :computeRowValues*retaddr *label76 (h:*label76)
-    * call *label6 *invalid :computeRowValues*retval (m:*label76) (h:*label76)
-    * label *label76
+  289 label *label418
+  290 op sub :spotValue:x :computeRowValues:x 2
+  291 set :spotValue:y :computeRowValues:y
+  292 set :spotValue:ore :computeRowValues:ore
+  293 ucontrol getBlock :spotValue:x :spotValue:y type building floor
+  294 select value equal floor :spotValue:ore 0.00392156862745098 0
+  295 sensor solid type @solid
+  296 select :spotValue:result notEqual solid false 0.09803921568627451 value
+  297 label *label419
+  298 op sub :spotValue.1:x :computeRowValues:x 1
+  299 set :spotValue.1:y :computeRowValues:y
+  300 set :spotValue.1:ore :computeRowValues:ore
+  301 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
+  302 select value equal floor :spotValue.1:ore 0.00392156862745098 0
+  303 sensor solid type @solid
+  304 select :spotValue.1:result notEqual solid false 0.09803921568627451 value
+  305 label *label420
+  306 set :spotValue.2:x :computeRowValues:x
+  307 set :spotValue.2:y :computeRowValues:y
+  308 set :spotValue.2:ore :computeRowValues:ore
+  309 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
+  310 select value equal floor :spotValue.2:ore 0.00392156862745098 0
+  311 sensor solid type @solid
+  312 select :spotValue.2:result notEqual solid false 0.09803921568627451 value
+  313 label *label421
+  314 op add :spotValue.3:x :computeRowValues:x 1
+  315 set :spotValue.3:y :computeRowValues:y
+  316 set :spotValue.3:ore :computeRowValues:ore
+  317 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
+  318 select value equal floor :spotValue.3:ore 0.00392156862745098 0
+  319 sensor solid type @solid
+  320 select :spotValue.3:result notEqual solid false 0.09803921568627451 value
+  321 label *label422
+  322 op add :spotValue.4:x :computeRowValues:x 2
+  323 set :spotValue.4:y :computeRowValues:y
+  324 set :spotValue.4:ore :computeRowValues:ore
+  325 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
+  326 select value equal floor :spotValue.4:ore 0.00392156862745098 0
+  327 sensor solid type @solid
+  328 select :spotValue.4:result notEqual solid false 0.09803921568627451 value
+  329 label *label423
+  330 jump *label424 notEqual :computeRowValues:size 2
+  331 op add *tmp12 :spotValue:result :spotValue.1:result
+  332 op add *tmp13 :spotValue.1:result :spotValue.2:result
+  333 op add *tmp14 :spotValue.2:result :spotValue.3:result
+  334 op add *tmp15 :spotValue.3:result :spotValue.4:result
+  335 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
+  336 jump *label430 always
+  337 jump *label429 always
+  338 label *label424
+  339 jump *label425 notEqual :computeRowValues:size 3
+  340 op add *tmp19 :spotValue.1:result :spotValue.2:result
+  341 op add *tmp20 :spotValue:result *tmp19
+  342 op add *tmp22 *tmp19 :spotValue.3:result
+  343 op add *tmp23 :spotValue.2:result :spotValue.3:result
+  344 op add *tmp24 *tmp23 :spotValue.4:result
+  345 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
+  346 jump *label430 always
+  347 jump *label428 always
+  348 label *label425
+  349 op sub :spotValue.5:x :computeRowValues:x 3
+  350 set :spotValue.5:y :computeRowValues:y
+  351 set :spotValue.5:ore :computeRowValues:ore
+  352 ucontrol getBlock :spotValue.5:x :spotValue.5:y type building floor
+  353 select value equal floor :spotValue.5:ore 0.00392156862745098 0
+  354 sensor solid type @solid
+  355 select :spotValue.5:result notEqual solid false 0.09803921568627451 value
+  356 label *label426
+  357 op add :spotValue.6:x :computeRowValues:x 3
+  358 set :spotValue.6:y :computeRowValues:y
+  359 set :spotValue.6:ore :computeRowValues:ore
+  360 ucontrol getBlock :spotValue.6:x :spotValue.6:y type building floor
+  361 select value equal floor :spotValue.6:ore 0.00392156862745098 0
+  362 sensor solid type @solid
+  363 select :spotValue.6:result notEqual solid false 0.09803921568627451 value
+  364 label *label427
+  365 op add *tmp30 :spotValue:result :spotValue.1:result
+  366 op add *tmp31 *tmp30 :spotValue.2:result
+  367 op add *tmp32 :spotValue.5:result *tmp31
+  368 op min *tmp33 0.09803921568627451 *tmp32
+  369 op add *tmp36 *tmp31 :spotValue.3:result
+  370 op min *tmp37 0.09803921568627451 *tmp36
+  371 op add *tmp38 :spotValue.2:result :spotValue.3:result
+  372 op add *tmp39 *tmp38 :spotValue.4:result
+  373 op add *tmp40 :spotValue.1:result *tmp39
+  374 op min *tmp41 0.09803921568627451 *tmp40
+  375 op add *tmp44 *tmp39 :spotValue.6:result
+  376 op min *tmp45 0.09803921568627451 *tmp44
+  377 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
+  378 jump *label430 always
+  379 label *label428
+  380 label *label429
+  381 label *label430
   382 set :findBestPosition:y1 :computeRowValues*retval
   383 op sub *tmp141 :findBestPosition:y 1
   384 set :computeRowValues:x :findBestPosition:x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   287 set :computeRowValues:ore :findDrillLocationLocal:ore
   288 set :computeRowValues:size :findDrillLocationLocal:size
   289 label *label418
-    * op sub :spotValue:x :computeRowValues:x 2
-    * set :spotValue:y :computeRowValues:y
-    * set :spotValue:ore :computeRowValues:ore
+  290 op sub :spotValue:x :findDrillLocationLocal:oreX 2
+  291 set :spotValue:y *tmp139
+  292 set :spotValue:ore :findDrillLocationLocal:ore
   293 ucontrol getBlock :spotValue:x :spotValue:y type building floor
   294 select value equal floor :spotValue:ore 0.00392156862745098 0
   295 sensor solid type @solid
   296 select :spotValue:result notEqual solid false 0.09803921568627451 value
   297 label *label419
-    * op sub :spotValue.1:x :computeRowValues:x 1
-    * set :spotValue.1:y :computeRowValues:y
-    * set :spotValue.1:ore :computeRowValues:ore
+  298 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
+  299 set :spotValue.1:y *tmp139
+  300 set :spotValue.1:ore :findDrillLocationLocal:ore
   301 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
   302 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   303 sensor solid type @solid
   304 select :spotValue.1:result notEqual solid false 0.09803921568627451 value
   305 label *label420
-    * set :spotValue.2:x :computeRowValues:x
-    * set :spotValue.2:y :computeRowValues:y
-    * set :spotValue.2:ore :computeRowValues:ore
+  306 set :spotValue.2:x :findDrillLocationLocal:oreX
+  307 set :spotValue.2:y *tmp139
+  308 set :spotValue.2:ore :findDrillLocationLocal:ore
   309 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
   310 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   311 sensor solid type @solid
   312 select :spotValue.2:result notEqual solid false 0.09803921568627451 value
   313 label *label421
-    * op add :spotValue.3:x :computeRowValues:x 1
-    * set :spotValue.3:y :computeRowValues:y
-    * set :spotValue.3:ore :computeRowValues:ore
+  314 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
+  315 set :spotValue.3:y *tmp139
+  316 set :spotValue.3:ore :findDrillLocationLocal:ore
   317 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
   318 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   319 sensor solid type @solid
   320 select :spotValue.3:result notEqual solid false 0.09803921568627451 value
   321 label *label422
-    * op add :spotValue.4:x :computeRowValues:x 2
-    * set :spotValue.4:y :computeRowValues:y
-    * set :spotValue.4:ore :computeRowValues:ore
+  322 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
+  323 set :spotValue.4:y *tmp139
+  324 set :spotValue.4:ore :findDrillLocationLocal:ore
   325 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
   326 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   327 sensor solid type @solid
   328 select :spotValue.4:result notEqual solid false 0.09803921568627451 value
   329 label *label423
-    * jump *label424 notEqual :computeRowValues:size 2
+  330 jump *label424 notEqual :findDrillLocationLocal:size 2
   331 op add *tmp12 :spotValue:result :spotValue.1:result
   332 op add *tmp13 :spotValue.1:result :spotValue.2:result
   333 op add *tmp14 :spotValue.2:result :spotValue.3:result
 
   336 jump *label430 always
   337 jump *label429 always
   338 label *label424
-    * jump *label425 notEqual :computeRowValues:size 3
+  339 jump *label425 notEqual :findDrillLocationLocal:size 3
   340 op add *tmp19 :spotValue.1:result :spotValue.2:result
   341 op add *tmp20 :spotValue:result *tmp19
   342 op add *tmp22 *tmp19 :spotValue.3:result
 
   346 jump *label430 always
   347 jump *label428 always
   348 label *label425
-    * op sub :spotValue.5:x :computeRowValues:x 3
-    * set :spotValue.5:y :computeRowValues:y
-    * set :spotValue.5:ore :computeRowValues:ore
+  349 op sub :spotValue.5:x :findDrillLocationLocal:oreX 3
+  350 set :spotValue.5:y *tmp139
+  351 set :spotValue.5:ore :findDrillLocationLocal:ore
   352 ucontrol getBlock :spotValue.5:x :spotValue.5:y type building floor
   353 select value equal floor :spotValue.5:ore 0.00392156862745098 0
   354 sensor solid type @solid
   355 select :spotValue.5:result notEqual solid false 0.09803921568627451 value
   356 label *label426
-    * op add :spotValue.6:x :computeRowValues:x 3
-    * set :spotValue.6:y :computeRowValues:y
-    * set :spotValue.6:ore :computeRowValues:ore
+  357 op add :spotValue.6:x :findDrillLocationLocal:oreX 3
+  358 set :spotValue.6:y *tmp139
+  359 set :spotValue.6:ore :findDrillLocationLocal:ore
   360 ucontrol getBlock :spotValue.6:x :spotValue.6:y type building floor
   361 select value equal floor :spotValue.6:ore 0.00392156862745098 0
   362 sensor solid type @solid
 
   380 label *label429
   381 label *label430
   382 set :findBestPosition:y1 :computeRowValues*retval
-    * op sub *tmp141 :findBestPosition:y 1
-    * set :computeRowValues:x :findBestPosition:x
+  383 op sub *tmp141 :findDrillLocationLocal:oreY 1
+  384 set :computeRowValues:x :findDrillLocationLocal:oreX
   385 set :computeRowValues:y *tmp141
-    * set :computeRowValues:ore :findBestPosition:ore
-    * set :computeRowValues:size :findBestPosition:size
+  386 set :computeRowValues:ore :findDrillLocationLocal:ore
+  387 set :computeRowValues:size :findDrillLocationLocal:size
   388 setaddr :computeRowValues*retaddr *label77 (h:*label77)
   389 call *label6 *invalid :computeRowValues*retval (m:*label77) (h:*label77)
   390 label *label77

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   282 set :findBestPosition:ore :findDrillLocationLocal:ore
   283 set :findBestPosition:size :findDrillLocationLocal:size
   284 op sub *tmp139 :findDrillLocationLocal:oreY 2
-    * set :computeRowValues:x :findDrillLocationLocal:oreX
-    * set :computeRowValues:y *tmp139
-    * set :computeRowValues:ore :findDrillLocationLocal:ore
-    * set :computeRowValues:size :findDrillLocationLocal:size
   285 label *label418
   286 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   287 set :spotValue:y *tmp139

Modifications by Replicate loop condition at line 41:5 (+1 instructions):
 
   126 label *label29
   127 ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp53
   128 jump *label31 notEqual *tmp53 false
+  129 label *label431
   130 ucontrol approach :findDrillLocationLocal:x :findDrillLocationLocal:y 5.5
   131 label *label30
-    * jump *label29 always
+  132 ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp53
+  133 jump *label431 equal *tmp53 false
   134 label *label31
   135 label *label28
   136 label *label27

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-9 instructions):
 
    99 op add *tmp44 *tmp39 :spotValue.6:result
   100 op min *tmp45 0.09803921568627451 *tmp44
   101 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
-    * jump *label14 always
   102 label *label23
   103 label *label21
   104 label *label14
 
   233 jump *label410 lessThan :visited:i *tmp110
   234 label *label58
   235 set *tmp109 false
-    * jump *label55 always
   236 label *label55
   237 jump *label61 notEqual *tmp109 false
   238 op div *tmp125 2 .angle
 
   251 jump *label409 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   252 label *label38
   253 set *tmp63 false
-    * jump *label35 always
   254 label *label35
   255 set :findDrillLocationLocal:oreX :locateOreAway:x
   256 set :findDrillLocationLocal:oreY :locateOreAway:y
 
   370 op add *tmp44 *tmp39 :spotValue.6:result
   371 op min *tmp45 0.09803921568627451 *tmp44
   372 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
-    * jump *label430 always
   373 label *label428
   374 label *label429
   375 label *label430
 
   887 label *label168
   888 label *label82
   889 op mul *tmp138 :findBestPosition:best 255
-    * jump *label75 always
   890 label *label75
   891 jump *label303 lessThanEq *tmp138 :findDrillLocationLocal:capacity
   892 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
 
  1007 jump *label411 greaterThanEq :createTerrainMask:r -3
  1008 label *label329
  1009 set :createTerrainMask*retval :createTerrainMask:result
-    * jump *label321 always
  1010 label *label321
  1011 return :createTerrainMask*retaddr
  1012 end
 
  1050 jump *label413 lessThanEq :findPossiblePlacement:y 3
  1051 label *label337
  1052 set :findPossiblePlacement*retval -1
-    * jump *label334 always
  1053 label *label334
  1054 return :findPossiblePlacement*retaddr
  1055 end
 
  1286 label *label394
  1287 label *label395
  1288 set *tmp537 :shiftMask:mask
-    * jump *label389 always
  1289 label *label389
  1290 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp537
  1291 op sub *tmp565 .drillX :layoutThoriumDrillAtLocation:sx
 
  1308 multilabel *label387 (m:marker0)
  1309 label *label383
  1310 set :layoutThoriumDrillAtLocation*retval true
-    * jump *label365 always
  1311 label *label365
  1312 return :layoutThoriumDrillAtLocation*retaddr
  1313 end

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-2 instructions):
 
   327 op add *tmp13 :spotValue.1:result :spotValue.2:result
   328 op add *tmp14 :spotValue.2:result :spotValue.3:result
   329 op add *tmp15 :spotValue.3:result :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
+  330 packcolor :findBestPosition:y1 *tmp12 *tmp13 *tmp14 *tmp15
   331 jump *label430 always
   332 jump *label429 always
   333 label *label424
 
   337 op add *tmp22 *tmp19 :spotValue.3:result
   338 op add *tmp23 :spotValue.2:result :spotValue.3:result
   339 op add *tmp24 *tmp23 :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
+  340 packcolor :findBestPosition:y1 *tmp20 *tmp22 *tmp24 0
   341 jump *label430 always
   342 jump *label428 always
   343 label *label425
 
   369 op min *tmp41 0.09803921568627451 *tmp40
   370 op add *tmp44 *tmp39 :spotValue.6:result
   371 op min *tmp45 0.09803921568627451 *tmp44
-    * packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
+  372 packcolor :findBestPosition:y1 *tmp33 *tmp37 *tmp41 *tmp45
   373 label *label428
   374 label *label429
   375 label *label430
-    * set :findBestPosition:y1 :computeRowValues*retval
   376 op sub *tmp141 :findDrillLocationLocal:oreY 1
   377 set :computeRowValues:x :findDrillLocationLocal:oreX
   378 set :computeRowValues:y *tmp141
 
   989 label *label330
   990 label *label412
   991 op shl *tmp403 :createTerrainMask:result 1
-    * op add *tmp404 :createTerrainMask:x :createTerrainMask:c
-    * set :isBlocked:x *tmp404
+  992 op add :isBlocked:x :createTerrainMask:x :createTerrainMask:c
   993 set :isBlocked:y *tmp405
   994 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   995 sensor solid type @solid

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    18 select value equal floor :spotValue:ore 0.00392156862745098 0
    19 sensor solid type @solid
    20 select :spotValue:result notEqual solid false 0.09803921568627451 value
-    * label *label15
    21 op sub :spotValue.1:x :computeRowValues:x 1
    22 set :spotValue.1:y :computeRowValues:y
    23 set :spotValue.1:ore :computeRowValues:ore
 
    25 select value equal floor :spotValue.1:ore 0.00392156862745098 0
    26 sensor solid type @solid
    27 select :spotValue.1:result notEqual solid false 0.09803921568627451 value
-    * label *label16
    28 set :spotValue.2:x :computeRowValues:x
    29 set :spotValue.2:y :computeRowValues:y
    30 set :spotValue.2:ore :computeRowValues:ore
 
    32 select value equal floor :spotValue.2:ore 0.00392156862745098 0
    33 sensor solid type @solid
    34 select :spotValue.2:result notEqual solid false 0.09803921568627451 value
-    * label *label17
    35 op add :spotValue.3:x :computeRowValues:x 1
    36 set :spotValue.3:y :computeRowValues:y
    37 set :spotValue.3:ore :computeRowValues:ore
 
    39 select value equal floor :spotValue.3:ore 0.00392156862745098 0
    40 sensor solid type @solid
    41 select :spotValue.3:result notEqual solid false 0.09803921568627451 value
-    * label *label18
    42 op add :spotValue.4:x :computeRowValues:x 2
    43 set :spotValue.4:y :computeRowValues:y
    44 set :spotValue.4:ore :computeRowValues:ore
 
    46 select value equal floor :spotValue.4:ore 0.00392156862745098 0
    47 sensor solid type @solid
    48 select :spotValue.4:result notEqual solid false 0.09803921568627451 value
-    * label *label19
    49 jump *label20 notEqual :computeRowValues:size 2
    50 op add *tmp12 :spotValue:result :spotValue.1:result
    51 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
    72 select value equal floor :spotValue.5:ore 0.00392156862745098 0
    73 sensor solid type @solid
    74 select :spotValue.5:result notEqual solid false 0.09803921568627451 value
-    * label *label24
    75 op add :spotValue.6:x :computeRowValues:x 3
    76 set :spotValue.6:y :computeRowValues:y
    77 set :spotValue.6:ore :computeRowValues:ore
 
    79 select value equal floor :spotValue.6:ore 0.00392156862745098 0
    80 sensor solid type @solid
    81 select :spotValue.6:result notEqual solid false 0.09803921568627451 value
-    * label *label25
    82 op add *tmp30 :spotValue:result :spotValue.1:result
    83 op add *tmp31 *tmp30 :spotValue.2:result
    84 op add *tmp32 :spotValue.5:result *tmp31
 
   115 set .mapAction "Locating ore..."
   116 set .angle 0
   117 set .mapProgress 0
-    * label *label29
   118 ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp53
   119 jump *label31 notEqual *tmp53 false
   120 label *label431
   121 ucontrol approach :findDrillLocationLocal:x :findDrillLocationLocal:y 5.5
-    * label *label30
   122 ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp53
   123 jump *label431 equal *tmp53 false
   124 label *label31
-    * label *label28
-    * label *label27
   125 op div *tmp56 *tmp50 3.8197185279121366
   126 op pow .mapTotal *tmp56 2
   127 set :findDrillLocationLocal:oreX 0
 
   144 op mul .mapProgress .angle .angle
   145 op sub *tmp72 @mapw 5
   146 op sub *tmp79 @maph 5
-    * label *label36
   147 jump *label38 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   148 label *label409
   149 op div :locateOreAway:a .angle @degToRad
 
   152 op add *tmp71 .coreX *tmp70
   153 op max *tmp74 *tmp71 5
   154 op min *tmp73 *tmp74 *tmp72
-    * label *label39
   155 op cos *tmp76 :locateOreAway:a
   156 op mul *tmp77 *tmp76 :locateOreAway:distance
   157 op add *tmp78 .coreY *tmp77
   158 op max *tmp81 *tmp78 5
   159 op min *tmp80 *tmp81 *tmp79
-    * label *label40
-    * label *label42
   160 ucontrol within *tmp73 *tmp80 5 *tmp83
   161 jump *label44 notEqual *tmp83 false
   162 label *label415
   163 ucontrol approach *tmp73 *tmp80 4.5
-    * label *label43
   164 ucontrol within *tmp73 *tmp80 5 *tmp83
   165 jump *label415 equal *tmp83 false
   166 label *label44
-    * label *label41
   167 op div *tmp86 3.8197185279121366 :locateOreAway:distance
   168 op add .angle .angle *tmp86
   169 op mul .mapProgress .angle .angle
 
   173 set *tmp63 false
   174 jump *label35 always
   175 label *label45
-    * label *label46
   176 op sub *tmp93 :locateOreAway:x .coreX
   177 op abs *tmp94 *tmp93
   178 op sub *tmp95 :locateOreAway:y .coreY
 
   185 jump *label49 notEqual :locateOreAway:lastY :locateOreAway:y
   186 jump *label37 always
   187 label *label49
-    * label *label50
   188 label *label47
-    * label *label48
   189 jump *label51 lessThan :locateOreAway:coreDist 7
   190 jump *label53 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
   191 set :locateOreAway:lastX :locateOreAway:x
   192 set :locateOreAway:lastY :locateOreAway:y
   193 set *tmp110 .locations
   194 set :visited:i .locationsStart
-    * label *label56
   195 jump *label58 greaterThanEq .locationsStart *tmp110
   196 label *label410
   197 op mul :visited:index 4 :visited:i
 
   206 set *tmp109 true
   207 jump *label55 always
   208 label *label59
-    * label *label60
-    * label *label57
   209 op add :visited:i :visited:i 1
   210 jump *label410 lessThan :visited:i *tmp110
   211 label *label58
 
   219 set *tmp63 true
   220 jump *label35 always
   221 label *label61
-    * label *label62
   222 label *label53
-    * label *label54
   223 label *label51
-    * label *label52
   224 label *label37
   225 jump *label409 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   226 label *label38
 
   232 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   233 jump *label26 always
   234 label *label63
-    * label *label64
   235 jump *label65 lessThan :findDrillLocationLocal:limit 1000
   236 op add .mapSpots .mapSpots 1
   237 label *label65
-    * label *label66
-    * label *label69
   238 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp135
   239 jump *label71 notEqual *tmp135 false
   240 label *label416
   241 ucontrol approach :locateOreAway:x :locateOreAway:y 5.5
-    * label *label70
   242 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp135
   243 jump *label416 equal *tmp135 false
   244 label *label71
-    * label *label68
-    * label *label67
   245 set :findDrillLocationLocal:last 0
   246 label *label72
   247 set :findBestPosition:x :findDrillLocationLocal:oreX
 
   249 set :findBestPosition:ore :findDrillLocationLocal:ore
   250 set :findBestPosition:size :findDrillLocationLocal:size
   251 op sub *tmp139 :findDrillLocationLocal:oreY 2
-    * label *label418
   252 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   253 set :spotValue:y *tmp139
   254 set :spotValue:ore :findDrillLocationLocal:ore
 
   256 select value equal floor :spotValue:ore 0.00392156862745098 0
   257 sensor solid type @solid
   258 select :spotValue:result notEqual solid false 0.09803921568627451 value
-    * label *label419
   259 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
   260 set :spotValue.1:y *tmp139
   261 set :spotValue.1:ore :findDrillLocationLocal:ore
 
   263 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   264 sensor solid type @solid
   265 select :spotValue.1:result notEqual solid false 0.09803921568627451 value
-    * label *label420
   266 set :spotValue.2:x :findDrillLocationLocal:oreX
   267 set :spotValue.2:y *tmp139
   268 set :spotValue.2:ore :findDrillLocationLocal:ore
 
   270 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   271 sensor solid type @solid
   272 select :spotValue.2:result notEqual solid false 0.09803921568627451 value
-    * label *label421
   273 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
   274 set :spotValue.3:y *tmp139
   275 set :spotValue.3:ore :findDrillLocationLocal:ore
 
   277 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   278 sensor solid type @solid
   279 select :spotValue.3:result notEqual solid false 0.09803921568627451 value
-    * label *label422
   280 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
   281 set :spotValue.4:y *tmp139
   282 set :spotValue.4:ore :findDrillLocationLocal:ore
 
   284 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   285 sensor solid type @solid
   286 select :spotValue.4:result notEqual solid false 0.09803921568627451 value
-    * label *label423
   287 jump *label424 notEqual :findDrillLocationLocal:size 2
   288 op add *tmp12 :spotValue:result :spotValue.1:result
   289 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
   310 select value equal floor :spotValue.5:ore 0.00392156862745098 0
   311 sensor solid type @solid
   312 select :spotValue.5:result notEqual solid false 0.09803921568627451 value
-    * label *label426
   313 op add :spotValue.6:x :findDrillLocationLocal:oreX 3
   314 set :spotValue.6:y *tmp139
   315 set :spotValue.6:ore :findDrillLocationLocal:ore
 
   317 select value equal floor :spotValue.6:ore 0.00392156862745098 0
   318 sensor solid type @solid
   319 select :spotValue.6:result notEqual solid false 0.09803921568627451 value
-    * label *label427
   320 op add *tmp30 :spotValue:result :spotValue.1:result
   321 op add *tmp31 *tmp30 :spotValue.2:result
   322 op add *tmp32 :spotValue.5:result *tmp31
 
   383 set :findDrillLocationLocal:diffY -1.5
   384 set :findBestPosition:best :updateRowPositions2x2:col1
   385 label *label87
-    * label *label88
   386 label *label85
-    * label *label86
-    * label *label84
   387 jump *label90 greaterThanEq :updateRowPositions2x2:col2 0.0784313725490196
   388 jump *label92 lessThanEq :updateRowPositions2x2:col2 :findBestPosition:best
   389 set :findDrillLocationLocal:diffX -0.5
   390 set :findDrillLocationLocal:diffY -1.5
   391 set :findBestPosition:best :updateRowPositions2x2:col2
   392 label *label92
-    * label *label93
   393 label *label90
-    * label *label91
-    * label *label89
   394 jump *label95 greaterThanEq :updateRowPositions2x2:col3 0.0784313725490196
   395 jump *label97 lessThanEq :updateRowPositions2x2:col3 :findBestPosition:best
   396 set :findDrillLocationLocal:diffX 0.5
   397 set :findDrillLocationLocal:diffY -1.5
   398 set :findBestPosition:best :updateRowPositions2x2:col3
   399 label *label97
-    * label *label98
   400 label *label95
-    * label *label96
-    * label *label94
   401 jump *label100 greaterThanEq :updateRowPositions2x2:col4 0.0784313725490196
   402 jump *label102 lessThanEq :updateRowPositions2x2:col4 :findBestPosition:best
   403 set :findDrillLocationLocal:diffX 1.5
   404 set :findDrillLocationLocal:diffY -1.5
   405 set :findBestPosition:best :updateRowPositions2x2:col4
   406 label *label102
-    * label *label103
   407 label *label100
-    * label *label101
-    * label *label99
-    * label *label83
   408 unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :findBestPosition:row2
   409 jump *label106 greaterThanEq :updateRowPositions2x2.1:col1 0.0784313725490196
   410 jump *label108 lessThanEq :updateRowPositions2x2.1:col1 :findBestPosition:best
 
   412 set :findDrillLocationLocal:diffY -0.5
   413 set :findBestPosition:best :updateRowPositions2x2.1:col1
   414 label *label108
-    * label *label109
   415 label *label106
-    * label *label107
-    * label *label105
   416 jump *label111 greaterThanEq :updateRowPositions2x2.1:col2 0.0784313725490196
   417 jump *label113 lessThanEq :updateRowPositions2x2.1:col2 :findBestPosition:best
   418 set :findDrillLocationLocal:diffX -0.5
   419 set :findDrillLocationLocal:diffY -0.5
   420 set :findBestPosition:best :updateRowPositions2x2.1:col2
   421 label *label113
-    * label *label114
   422 label *label111
-    * label *label112
-    * label *label110
   423 jump *label116 greaterThanEq :updateRowPositions2x2.1:col3 0.0784313725490196
   424 jump *label118 lessThanEq :updateRowPositions2x2.1:col3 :findBestPosition:best
   425 set :findDrillLocationLocal:diffX 0.5
   426 set :findDrillLocationLocal:diffY -0.5
   427 set :findBestPosition:best :updateRowPositions2x2.1:col3
   428 label *label118
-    * label *label119
   429 label *label116
-    * label *label117
-    * label *label115
   430 jump *label121 greaterThanEq :updateRowPositions2x2.1:col4 0.0784313725490196
   431 jump *label123 lessThanEq :updateRowPositions2x2.1:col4 :findBestPosition:best
   432 set :findDrillLocationLocal:diffX 1.5
   433 set :findDrillLocationLocal:diffY -0.5
   434 set :findBestPosition:best :updateRowPositions2x2.1:col4
   435 label *label123
-    * label *label124
   436 label *label121
-    * label *label122
-    * label *label120
-    * label *label104
   437 unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :findBestPosition:row3
   438 jump *label127 greaterThanEq :updateRowPositions2x2.2:col1 0.0784313725490196
   439 jump *label129 lessThanEq :updateRowPositions2x2.2:col1 :findBestPosition:best
 
   441 set :findDrillLocationLocal:diffY 0.5
   442 set :findBestPosition:best :updateRowPositions2x2.2:col1
   443 label *label129
-    * label *label130
   444 label *label127
-    * label *label128
-    * label *label126
   445 jump *label132 greaterThanEq :updateRowPositions2x2.2:col2 0.0784313725490196
   446 jump *label134 lessThanEq :updateRowPositions2x2.2:col2 :findBestPosition:best
   447 set :findDrillLocationLocal:diffX -0.5
   448 set :findDrillLocationLocal:diffY 0.5
   449 set :findBestPosition:best :updateRowPositions2x2.2:col2
   450 label *label134
-    * label *label135
   451 label *label132
-    * label *label133
-    * label *label131
   452 jump *label137 greaterThanEq :updateRowPositions2x2.2:col3 0.0784313725490196
   453 jump *label139 lessThanEq :updateRowPositions2x2.2:col3 :findBestPosition:best
   454 set :findDrillLocationLocal:diffX 0.5
   455 set :findDrillLocationLocal:diffY 0.5
   456 set :findBestPosition:best :updateRowPositions2x2.2:col3
   457 label *label139
-    * label *label140
   458 label *label137
-    * label *label138
-    * label *label136
   459 jump *label142 greaterThanEq :updateRowPositions2x2.2:col4 0.0784313725490196
   460 jump *label144 lessThanEq :updateRowPositions2x2.2:col4 :findBestPosition:best
   461 set :findDrillLocationLocal:diffX 1.5
   462 set :findDrillLocationLocal:diffY 0.5
   463 set :findBestPosition:best :updateRowPositions2x2.2:col4
   464 label *label144
-    * label *label145
   465 label *label142
-    * label *label143
-    * label *label141
-    * label *label125
   466 unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :findBestPosition:row4
   467 jump *label148 greaterThanEq :updateRowPositions2x2.3:col1 0.0784313725490196
   468 jump *label150 lessThanEq :updateRowPositions2x2.3:col1 :findBestPosition:best
 
   470 set :findDrillLocationLocal:diffY 1.5
   471 set :findBestPosition:best :updateRowPositions2x2.3:col1
   472 label *label150
-    * label *label151
   473 label *label148
-    * label *label149
-    * label *label147
   474 jump *label153 greaterThanEq :updateRowPositions2x2.3:col2 0.0784313725490196
   475 jump *label155 lessThanEq :updateRowPositions2x2.3:col2 :findBestPosition:best
   476 set :findDrillLocationLocal:diffX -0.5
   477 set :findDrillLocationLocal:diffY 1.5
   478 set :findBestPosition:best :updateRowPositions2x2.3:col2
   479 label *label155
-    * label *label156
   480 label *label153
-    * label *label154
-    * label *label152
   481 jump *label158 greaterThanEq :updateRowPositions2x2.3:col3 0.0784313725490196
   482 jump *label160 lessThanEq :updateRowPositions2x2.3:col3 :findBestPosition:best
   483 set :findDrillLocationLocal:diffX 0.5
   484 set :findDrillLocationLocal:diffY 1.5
   485 set :findBestPosition:best :updateRowPositions2x2.3:col3
   486 label *label160
-    * label *label161
   487 label *label158
-    * label *label159
-    * label *label157
   488 jump *label163 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
   489 jump *label165 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
   490 set :findDrillLocationLocal:diffX 1.5
   491 set :findDrillLocationLocal:diffY 1.5
   492 set :findBestPosition:best :updateRowPositions2x2.3:col4
   493 label *label165
-    * label *label166
   494 label *label163
-    * label *label164
-    * label *label162
-    * label *label146
   495 jump *label82 always
   496 label *label81
   497 jump *label167 notEqual :findBestPosition:size 3
 
   507 set :findDrillLocationLocal:diffY -1
   508 set :findBestPosition:best :updateRowPositions3x3:col1
   509 label *label173
-    * label *label174
   510 label *label171
-    * label *label172
-    * label *label170
   511 jump *label176 greaterThanEq :updateRowPositions3x3:col2 0.0784313725490196
   512 jump *label178 lessThanEq :updateRowPositions3x3:col2 :findBestPosition:best
   513 set :findDrillLocationLocal:diffX 0
   514 set :findDrillLocationLocal:diffY -1
   515 set :findBestPosition:best :updateRowPositions3x3:col2
   516 label *label178
-    * label *label179
   517 label *label176
-    * label *label177
-    * label *label175
   518 jump *label181 greaterThanEq :updateRowPositions3x3:col3 0.0784313725490196
   519 jump *label183 lessThanEq :updateRowPositions3x3:col3 :findBestPosition:best
   520 set :findDrillLocationLocal:diffX 1
   521 set :findDrillLocationLocal:diffY -1
   522 set :findBestPosition:best :updateRowPositions3x3:col3
   523 label *label183
-    * label *label184
   524 label *label181
-    * label *label182
-    * label *label180
-    * label *label169
   525 unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :findBestPosition:row2.1
   526 jump *label187 greaterThanEq :updateRowPositions3x3.1:col1 0.0784313725490196
   527 jump *label189 lessThanEq :updateRowPositions3x3.1:col1 :findBestPosition:best
 
   529 set :findDrillLocationLocal:diffY 0
   530 set :findBestPosition:best :updateRowPositions3x3.1:col1
   531 label *label189
-    * label *label190
   532 label *label187
-    * label *label188
-    * label *label186
   533 jump *label192 greaterThanEq :updateRowPositions3x3.1:col2 0.0784313725490196
   534 jump *label194 lessThanEq :updateRowPositions3x3.1:col2 :findBestPosition:best
   535 set :findDrillLocationLocal:diffX 0
   536 set :findDrillLocationLocal:diffY 0
   537 set :findBestPosition:best :updateRowPositions3x3.1:col2
   538 label *label194
-    * label *label195
   539 label *label192
-    * label *label193
-    * label *label191
   540 jump *label197 greaterThanEq :updateRowPositions3x3.1:col3 0.0784313725490196
   541 jump *label199 lessThanEq :updateRowPositions3x3.1:col3 :findBestPosition:best
   542 set :findDrillLocationLocal:diffX 1
   543 set :findDrillLocationLocal:diffY 0
   544 set :findBestPosition:best :updateRowPositions3x3.1:col3
   545 label *label199
-    * label *label200
   546 label *label197
-    * label *label198
-    * label *label196
-    * label *label185
   547 unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :findBestPosition:row3.1
   548 jump *label203 greaterThanEq :updateRowPositions3x3.2:col1 0.0784313725490196
   549 jump *label205 lessThanEq :updateRowPositions3x3.2:col1 :findBestPosition:best
 
   551 set :findDrillLocationLocal:diffY 1
   552 set :findBestPosition:best :updateRowPositions3x3.2:col1
   553 label *label205
-    * label *label206
   554 label *label203
-    * label *label204
-    * label *label202
   555 jump *label208 greaterThanEq :updateRowPositions3x3.2:col2 0.0784313725490196
   556 jump *label210 lessThanEq :updateRowPositions3x3.2:col2 :findBestPosition:best
   557 set :findDrillLocationLocal:diffX 0
   558 set :findDrillLocationLocal:diffY 1
   559 set :findBestPosition:best :updateRowPositions3x3.2:col2
   560 label *label210
-    * label *label211
   561 label *label208
-    * label *label209
-    * label *label207
   562 jump *label213 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
   563 jump *label215 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
   564 set :findDrillLocationLocal:diffX 1
   565 set :findDrillLocationLocal:diffY 1
   566 set :findBestPosition:best :updateRowPositions3x3.2:col3
   567 label *label215
-    * label *label216
   568 label *label213
-    * label *label214
-    * label *label212
-    * label *label201
   569 jump *label168 always
   570 label *label167
   571 op sub *tmp266 :findBestPosition:y 3
 
   600 set :findDrillLocationLocal:diffY -1.5
   601 set :findBestPosition:best :updateRowPositions4x4:col1
   602 label *label223
-    * label *label224
   603 label *label221
-    * label *label222
-    * label *label220
   604 jump *label226 greaterThanEq :updateRowPositions4x4:col2 0.0784313725490196
   605 jump *label228 lessThanEq :updateRowPositions4x4:col2 :findBestPosition:best
   606 set :findDrillLocationLocal:diffX -0.5
   607 set :findDrillLocationLocal:diffY -1.5
   608 set :findBestPosition:best :updateRowPositions4x4:col2
   609 label *label228
-    * label *label229
   610 label *label226
-    * label *label227
-    * label *label225
   611 jump *label231 greaterThanEq :updateRowPositions4x4:col3 0.0784313725490196
   612 jump *label233 lessThanEq :updateRowPositions4x4:col3 :findBestPosition:best
   613 set :findDrillLocationLocal:diffX 0.5
   614 set :findDrillLocationLocal:diffY -1.5
   615 set :findBestPosition:best :updateRowPositions4x4:col3
   616 label *label233
-    * label *label234
   617 label *label231
-    * label *label232
-    * label *label230
   618 jump *label236 greaterThanEq :updateRowPositions4x4:col4 0.0784313725490196
   619 jump *label238 lessThanEq :updateRowPositions4x4:col4 :findBestPosition:best
   620 set :findDrillLocationLocal:diffX 1.5
   621 set :findDrillLocationLocal:diffY -1.5
   622 set :findBestPosition:best :updateRowPositions4x4:col4
   623 label *label238
-    * label *label239
   624 label *label236
-    * label *label237
-    * label *label235
-    * label *label219
   625 unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 :updateRowPositions4x4.1:col3 :updateRowPositions4x4.1:col4 :findBestPosition:row2.2
   626 jump *label242 greaterThanEq :updateRowPositions4x4.1:col1 0.0784313725490196
   627 jump *label244 lessThanEq :updateRowPositions4x4.1:col1 :findBestPosition:best
 
   629 set :findDrillLocationLocal:diffY -0.5
   630 set :findBestPosition:best :updateRowPositions4x4.1:col1
   631 label *label244
-    * label *label245
   632 label *label242
-    * label *label243
-    * label *label241
   633 jump *label247 greaterThanEq :updateRowPositions4x4.1:col2 0.0784313725490196
   634 jump *label249 lessThanEq :updateRowPositions4x4.1:col2 :findBestPosition:best
   635 set :findDrillLocationLocal:diffX -0.5
   636 set :findDrillLocationLocal:diffY -0.5
   637 set :findBestPosition:best :updateRowPositions4x4.1:col2
   638 label *label249
-    * label *label250
   639 label *label247
-    * label *label248
-    * label *label246
   640 jump *label252 greaterThanEq :updateRowPositions4x4.1:col3 0.0784313725490196
   641 jump *label254 lessThanEq :updateRowPositions4x4.1:col3 :findBestPosition:best
   642 set :findDrillLocationLocal:diffX 0.5
   643 set :findDrillLocationLocal:diffY -0.5
   644 set :findBestPosition:best :updateRowPositions4x4.1:col3
   645 label *label254
-    * label *label255
   646 label *label252
-    * label *label253
-    * label *label251
   647 jump *label257 greaterThanEq :updateRowPositions4x4.1:col4 0.0784313725490196
   648 jump *label259 lessThanEq :updateRowPositions4x4.1:col4 :findBestPosition:best
   649 set :findDrillLocationLocal:diffX 1.5
   650 set :findDrillLocationLocal:diffY -0.5
   651 set :findBestPosition:best :updateRowPositions4x4.1:col4
   652 label *label259
-    * label *label260
   653 label *label257
-    * label *label258
-    * label *label256
-    * label *label240
   654 unpackcolor :updateRowPositions4x4.2:col1 :updateRowPositions4x4.2:col2 :updateRowPositions4x4.2:col3 :updateRowPositions4x4.2:col4 :findBestPosition:row3.2
   655 jump *label263 greaterThanEq :updateRowPositions4x4.2:col1 0.0784313725490196
   656 jump *label265 lessThanEq :updateRowPositions4x4.2:col1 :findBestPosition:best
 
   658 set :findDrillLocationLocal:diffY 0.5
   659 set :findBestPosition:best :updateRowPositions4x4.2:col1
   660 label *label265
-    * label *label266
   661 label *label263
-    * label *label264
-    * label *label262
   662 jump *label268 greaterThanEq :updateRowPositions4x4.2:col2 0.0784313725490196
   663 jump *label270 lessThanEq :updateRowPositions4x4.2:col2 :findBestPosition:best
   664 set :findDrillLocationLocal:diffX -0.5
   665 set :findDrillLocationLocal:diffY 0.5
   666 set :findBestPosition:best :updateRowPositions4x4.2:col2
   667 label *label270
-    * label *label271
   668 label *label268
-    * label *label269
-    * label *label267
   669 jump *label273 greaterThanEq :updateRowPositions4x4.2:col3 0.0784313725490196
   670 jump *label275 lessThanEq :updateRowPositions4x4.2:col3 :findBestPosition:best
   671 set :findDrillLocationLocal:diffX 0.5
   672 set :findDrillLocationLocal:diffY 0.5
   673 set :findBestPosition:best :updateRowPositions4x4.2:col3
   674 label *label275
-    * label *label276
   675 label *label273
-    * label *label274
-    * label *label272
   676 jump *label278 greaterThanEq :updateRowPositions4x4.2:col4 0.0784313725490196
   677 jump *label280 lessThanEq :updateRowPositions4x4.2:col4 :findBestPosition:best
   678 set :findDrillLocationLocal:diffX 1.5
   679 set :findDrillLocationLocal:diffY 0.5
   680 set :findBestPosition:best :updateRowPositions4x4.2:col4
   681 label *label280
-    * label *label281
   682 label *label278
-    * label *label279
-    * label *label277
-    * label *label261
   683 unpackcolor :updateRowPositions4x4.3:col1 :updateRowPositions4x4.3:col2 :updateRowPositions4x4.3:col3 :updateRowPositions4x4.3:col4 :findBestPosition:row4.1
   684 jump *label284 greaterThanEq :updateRowPositions4x4.3:col1 0.0784313725490196
   685 jump *label286 lessThanEq :updateRowPositions4x4.3:col1 :findBestPosition:best
 
   687 set :findDrillLocationLocal:diffY 1.5
   688 set :findBestPosition:best :updateRowPositions4x4.3:col1
   689 label *label286
-    * label *label287
   690 label *label284
-    * label *label285
-    * label *label283
   691 jump *label289 greaterThanEq :updateRowPositions4x4.3:col2 0.0784313725490196
   692 jump *label291 lessThanEq :updateRowPositions4x4.3:col2 :findBestPosition:best
   693 set :findDrillLocationLocal:diffX -0.5
   694 set :findDrillLocationLocal:diffY 1.5
   695 set :findBestPosition:best :updateRowPositions4x4.3:col2
   696 label *label291
-    * label *label292
   697 label *label289
-    * label *label290
-    * label *label288
   698 jump *label294 greaterThanEq :updateRowPositions4x4.3:col3 0.0784313725490196
   699 jump *label296 lessThanEq :updateRowPositions4x4.3:col3 :findBestPosition:best
   700 set :findDrillLocationLocal:diffX 0.5
   701 set :findDrillLocationLocal:diffY 1.5
   702 set :findBestPosition:best :updateRowPositions4x4.3:col3
   703 label *label296
-    * label *label297
   704 label *label294
-    * label *label295
-    * label *label293
   705 jump *label299 greaterThanEq :updateRowPositions4x4.3:col4 0.0784313725490196
   706 jump *label301 lessThanEq :updateRowPositions4x4.3:col4 :findBestPosition:best
   707 set :findDrillLocationLocal:diffX 1.5
   708 set :findDrillLocationLocal:diffY 1.5
   709 set :findBestPosition:best :updateRowPositions4x4.3:col4
   710 label *label301
-    * label *label302
   711 label *label299
-    * label *label300
-    * label *label298
-    * label *label282
   712 label *label168
   713 label *label82
   714 op mul *tmp138 :findBestPosition:best 255
-    * label *label75
   715 jump *label303 lessThanEq *tmp138 :findDrillLocationLocal:capacity
   716 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   717 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
 
   719 jump *label305 greaterThanEq :findDrillLocationLocal:limit 1000
   720 set .mapSpots *tmp138
   721 label *label305
-    * label *label306
   722 jump *label307 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
   723 op add .count .count 1
   724 sensor *tmp357 :findDrillLocationLocal:item @id
 
   730 op add .count .count 1
   731 write :findDrillLocationLocal:dy bank1 .count
   732 op add .locations .locations 1
-    * label *label309
   733 ucontrol unbind
   734 set :findDrillLocationLocal*retval true
   735 jump *label26 always
   736 label *label307
-    * label *label308
   737 label *label303
-    * label *label304
   738 jump *label310 lessThanEq *tmp138 :findDrillLocationLocal:best
   739 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   740 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   741 set :findDrillLocationLocal:best *tmp138
   742 label *label310
-    * label *label311
   743 jump *label312 greaterThan *tmp138 :findDrillLocationLocal:last
   744 jump *label74 always
   745 label *label312
-    * label *label313
   746 set :findDrillLocationLocal:last *tmp138
   747 op mul :round:x :findDrillLocationLocal:diffX 1.1
   748 op add *tmp373 :round:x 0.5
   749 op floor *tmp372 *tmp373
-    * label *label314
   750 op add :findDrillLocationLocal:oreX :findDrillLocationLocal:oreX *tmp372
   751 op mul :round.1:x :findDrillLocationLocal:diffY 1.1
   752 op add *tmp377 :round.1:x 0.5
   753 op floor *tmp376 *tmp377
-    * label *label315
   754 op add :findDrillLocationLocal:oreY :findDrillLocationLocal:oreY *tmp376
   755 op sub *tmp379 :findDrillLocationLocal:oreX .coreX
   756 op abs *tmp380 *tmp379
 
   760 jump *label316 greaterThanEq *tmp383 7
   761 jump *label74 always
   762 label *label316
-    * label *label317
-    * label *label73
   763 jump *label72 always
   764 label *label74
   765 jump *label318 lessThan :findDrillLocationLocal:best 0
 
   773 op add .count .count 1
   774 write :findDrillLocationLocal:bestY bank1 .count
   775 op add .locations .locations 1
-    * label *label320
   776 label *label318
-    * label *label319
-    * label *label33
   777 jump *label32 always
-    * label *label34
   778 set :findDrillLocationLocal*retval null
   779 label *label26
   780 return :findDrillLocationLocal*retaddr
   781 end
   782 label *label8
-    * label *label324
   783 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp400
   784 jump *label326 notEqual *tmp400 false
   785 label *label417
   786 ucontrol approach :createTerrainMask:x :createTerrainMask:y 5.5
-    * label *label325
   787 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp400
   788 jump *label417 equal *tmp400 false
   789 label *label326
-    * label *label323
-    * label *label322
   790 set :createTerrainMask:result 0
   791 set :createTerrainMask:r 3
-    * label *label327
   792 label *label411
   793 set :createTerrainMask:c 3
   794 op add *tmp405 :createTerrainMask:y :createTerrainMask:r
-    * label *label330
   795 label *label412
   796 op shl *tmp403 :createTerrainMask:result 1
   797 op add :isBlocked:x :createTerrainMask:x :createTerrainMask:c
 
   799 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   800 sensor solid type @solid
   801 select :isBlocked:result notEqual solid false 1 0
-    * label *label333
   802 op or :createTerrainMask:result *tmp403 :isBlocked:result
-    * label *label331
   803 op sub :createTerrainMask:c :createTerrainMask:c 1
   804 jump *label412 greaterThanEq :createTerrainMask:c -3
-    * label *label332
-    * label *label328
   805 op sub :createTerrainMask:r :createTerrainMask:r 1
   806 jump *label411 greaterThanEq :createTerrainMask:r -3
-    * label *label329
   807 set :createTerrainMask*retval :createTerrainMask:result
-    * label *label321
   808 return :createTerrainMask*retaddr
   809 end
   810 label *label9
   811 set :findPossiblePlacement:y -3
-    * label *label335
   812 jump *label337 greaterThan :findPossiblePlacement:y 3
   813 label *label413
   814 op add *tmp408 :findPossiblePlacement:y 3
   815 op mul *tmp409 7 *tmp408
   816 op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp409
   817 set :findPossiblePlacement:x -3
-    * label *label338
   818 jump *label340 greaterThan :findPossiblePlacement:x 3
   819 label *label414
   820 op and *tmp411 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
 
   824 op add :findPossiblePlacement*retval *tmp415 :findPossiblePlacement:x
   825 jump *label334 always
   826 label *label341
-    * label *label342
   827 op sub *tmp417 3 :findPossiblePlacement:width
   828 jump *label343 lessThanEq :findPossiblePlacement:x *tmp417
   829 jump *label340 always
   830 label *label343
-    * label *label344
   831 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
-    * label *label339
   832 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
   833 jump *label414 lessThanEq :findPossiblePlacement:x 3
   834 label *label340
 
   836 jump *label345 lessThanEq :findPossiblePlacement:y *tmp420
   837 jump *label337 always
   838 label *label345
-    * label *label346
-    * label *label336
   839 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
   840 jump *label413 lessThanEq :findPossiblePlacement:y 3
   841 label *label337
 
   856 set :tryPlaceGenerator*retval false
   857 jump *label347 always
   858 label *label351
-    * label *label352
   859 op add *tmp428 :tryPlaceGenerator:centerX 0.5
   860 op add .water2X *tmp428 :findPossiblePlacement:x
   861 op add *tmp430 :tryPlaceGenerator:centerY 0.5
 
   878 set :tryPlaceGenerator*retval false
   879 jump *label347 always
   880 label *label354
-    * label *label355
   881 op add *tmp440 :tryPlaceGenerator:centerX 0.5
   882 op add .water2X *tmp440 :findPossiblePlacement:x
   883 op add *tmp442 :tryPlaceGenerator:centerY 0.5
 
   899 set :tryPlaceGenerator*retval false
   900 jump *label347 always
   901 label *label357
-    * label *label358
   902 op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   903 op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   904 op shl *tmp454 1 :findPossiblePlacement*retval
 
   914 set :tryPlaceGenerator*retval false
   915 jump *label347 always
   916 label *label360
-    * label *label361
   917 op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   918 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   919 op shl *tmp460 1 :findPossiblePlacement*retval
 
   929 set :tryPlaceGenerator*retval false
   930 jump *label347 always
   931 label *label363
-    * label *label364
   932 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   933 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   934 set :tryPlaceGenerator*retval true
 
   950 setaddr :createTerrainMask*retaddr *label366 (h:*label366)
   951 call *label8 *invalid :createTerrainMask*retval (m:*label366) (h:*label366)
   952 label *label366
-    * label *label367
   953 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
-    * label *label368
   954 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
-    * label *label369
   955 set :layoutThoriumDrillAtLocation:mask2x2 387
   956 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
   957 set :findPossiblePlacement:placementMask 387
 
   969 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp509
   970 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:cornersMask *tmp509
   971 label *label371
-    * label *label372
   972 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
   973 set :findPossiblePlacement:placementMask :layoutThoriumDrillAtLocation:mask2x2
   974 set :findPossiblePlacement:width 2
 
   984 op shl *tmp518 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
   985 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp518
   986 label *label374
-    * label *label375
-    * label *label376
   987 set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
-    * label *label377
   988 set :layoutThoriumDrillAtLocation:generatorVertical 6340995
   989 set :tryPlaceGenerator:centerX .drillX
   990 set :tryPlaceGenerator:centerY .drillY
 
   998 set :layoutThoriumDrillAtLocation*retval true
   999 jump *label365 always
  1000 label *label379
-    * label *label380
  1001 set :layoutThoriumDrillAtLocation:sx 3
  1002 set :layoutThoriumDrillAtLocation:sy 3
  1003 setaddr *tmp533 *label384
 
  1034 set *tmp537 0
  1035 jump *label389 always
  1036 label *label390
-    * label *label391
  1037 op mul *tmp544 7 :layoutThoriumDrillAtLocation:sy
  1038 op add :shiftMask:shift :layoutThoriumDrillAtLocation:sx *tmp544
  1039 jump *label392 lessThanEq :shiftMask:shift 0
 
  1051 jump *label396 lessThanEq :layoutThoriumDrillAtLocation:sx 0
  1052 op shl :shiftMask:keep :shiftMask:keep *tmp555
  1053 label *label396
-    * label *label397
  1054 op shl *tmp561 :shiftMask:keep 7
  1055 op or :shiftMask:keep :shiftMask:keep *tmp561
  1056 op shl *tmp562 :shiftMask:keep 14
 
  1059 op or :shiftMask:keep :shiftMask:keep *tmp563
  1060 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
  1061 label *label394
-    * label *label395
  1062 set *tmp537 :shiftMask:mask
  1063 label *label389
  1064 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp537
 
  1076 set :layoutThoriumDrillAtLocation*retval true
  1077 jump *label365 always
  1078 label *label399
-    * label *label400
-    * label *label382
  1079 multijump *tmp533 0 0 (m:marker0)
  1080 multilabel *label387 (m:marker0)
-    * label *label383
  1081 set :layoutThoriumDrillAtLocation*retval true
  1082 label *label365
  1083 return :layoutThoriumDrillAtLocation*retaddr
 
  1099 set :findDrillLocation:capacity :findDrillLocationLocal:capacity
  1100 set .searchFinished true
  1101 set :findDrillLocation*retval true
-    * label *label401
  1102 set :findDrillLocation*finished true
  1103 jump *label13 always
  1104 end
 
  1119 set :layoutThoriumDrill*retval false
  1120 jump *label403 always
  1121 label *label405
-    * label *label406
  1122 setaddr :layoutThoriumDrillAtLocation*retaddr *label407 (h:*label407)
  1123 call *label11 *invalid :layoutThoriumDrillAtLocation*retval (m:*label407) (h:*label407)
  1124 label *label407
 
  1133 set .mapTotal 0
  1134 set .mapProgress 0
  1135 ucontrol unbind
-    * label *label408
  1136 set :stopLocation*finished true
  1137 jump *label13 always
  1138 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-5 instructions):
 
   182 op sub *tmp99 :locateOreAway:y *tmp80
   183 op len :locateOreAway:unitDist *tmp98 *tmp99
   184 jump *label47 notEqual :locateOreAway:lastX :locateOreAway:x
-    * jump *label49 notEqual :locateOreAway:lastY :locateOreAway:y
-    * jump *label37 always
+  185 jump *label37 equal :locateOreAway:lastY :locateOreAway:y
   186 label *label49
   187 label *label47
   188 jump *label51 lessThan :locateOreAway:coreDist 7
 
   739 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   740 set :findDrillLocationLocal:best *tmp138
   741 label *label310
-    * jump *label312 greaterThan *tmp138 :findDrillLocationLocal:last
-    * jump *label74 always
+  742 jump *label74 lessThanEq *tmp138 :findDrillLocationLocal:last
   743 label *label312
   744 set :findDrillLocationLocal:last *tmp138
   745 op mul :round:x :findDrillLocationLocal:diffX 1.1
 
   755 op sub *tmp381 :findDrillLocationLocal:oreY .coreY
   756 op abs *tmp382 *tmp381
   757 op min *tmp383 *tmp380 *tmp382
-    * jump *label316 greaterThanEq *tmp383 7
-    * jump *label74 always
+  758 jump *label74 lessThan *tmp383 7
   759 label *label316
   760 jump *label72 always
   761 label *label74
 
   822 jump *label334 always
   823 label *label341
   824 op sub *tmp417 3 :findPossiblePlacement:width
-    * jump *label343 lessThanEq :findPossiblePlacement:x *tmp417
-    * jump *label340 always
+  825 jump *label340 greaterThan :findPossiblePlacement:x *tmp417
   826 label *label343
   827 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
   828 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
   829 jump *label414 lessThanEq :findPossiblePlacement:x 3
   830 label *label340
   831 op sub *tmp420 3 :findPossiblePlacement:height
-    * jump *label345 lessThanEq :findPossiblePlacement:y *tmp420
-    * jump *label337 always
+  832 jump *label337 greaterThan :findPossiblePlacement:y *tmp420
   833 label *label345
   834 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
   835 jump *label413 lessThanEq :findPossiblePlacement:y 3

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   183 op len :locateOreAway:unitDist *tmp98 *tmp99
   184 jump *label47 notEqual :locateOreAway:lastX :locateOreAway:x
   185 jump *label37 equal :locateOreAway:lastY :locateOreAway:y
-    * label *label49
   186 label *label47
   187 jump *label51 lessThan :locateOreAway:coreDist 7
   188 jump *label53 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
 
   739 set :findDrillLocationLocal:best *tmp138
   740 label *label310
   741 jump *label74 lessThanEq *tmp138 :findDrillLocationLocal:last
-    * label *label312
   742 set :findDrillLocationLocal:last *tmp138
   743 op mul :round:x :findDrillLocationLocal:diffX 1.1
   744 op add *tmp373 :round:x 0.5
 
   754 op abs *tmp382 *tmp381
   755 op min *tmp383 *tmp380 *tmp382
   756 jump *label74 lessThan *tmp383 7
-    * label *label316
   757 jump *label72 always
   758 label *label74
   759 jump *label318 lessThan :findDrillLocationLocal:best 0
 
   820 label *label341
   821 op sub *tmp417 3 :findPossiblePlacement:width
   822 jump *label340 greaterThan :findPossiblePlacement:x *tmp417
-    * label *label343
   823 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
   824 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
   825 jump *label414 lessThanEq :findPossiblePlacement:x 3
   826 label *label340
   827 op sub *tmp420 3 :findPossiblePlacement:height
   828 jump *label337 greaterThan :findPossiblePlacement:y *tmp420
-    * label *label345
   829 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
   830 jump *label413 lessThanEq :findPossiblePlacement:y 3
   831 label *label337

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
    52 op add *tmp14 :spotValue.2:result :spotValue.3:result
    53 op add *tmp15 :spotValue.3:result :spotValue.4:result
    54 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
-    * jump *label14 always
-    * jump *label21 always
+   55 return :computeRowValues*retaddr
+   56 return :computeRowValues*retaddr
    57 label *label20
    58 jump *label22 notEqual :computeRowValues:size 3
    59 op add *tmp19 :spotValue.1:result :spotValue.2:result
 
    62 op add *tmp23 :spotValue.2:result :spotValue.3:result
    63 op add *tmp24 *tmp23 :spotValue.4:result
    64 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
-    * jump *label14 always
-    * jump *label23 always
+   65 return :computeRowValues*retaddr
+   66 return :computeRowValues*retaddr
    67 label *label22
    68 op sub :spotValue.5:x :computeRowValues:x 3
    69 set :spotValue.5:y :computeRowValues:y
 
   228 set :findDrillLocationLocal:oreY :locateOreAway:y
   229 jump *label63 notEqual *tmp63 false
   230 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
-    * jump *label26 always
+  231 return :findDrillLocationLocal*retaddr
   232 label *label63
   233 jump *label65 lessThan :findDrillLocationLocal:limit 1000
   234 op add .mapSpots .mapSpots 1
 
   483 set :findBestPosition:best :updateRowPositions2x2.3:col3
   484 label *label160
   485 label *label158
-    * jump *label163 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
-    * jump *label165 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
+  486 jump *label82 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
+  487 jump *label82 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
   488 set :findDrillLocationLocal:diffX 1.5
   489 set :findDrillLocationLocal:diffY 1.5
   490 set :findBestPosition:best :updateRowPositions2x2.3:col4
 
   557 set :findBestPosition:best :updateRowPositions3x3.2:col2
   558 label *label210
   559 label *label208
-    * jump *label213 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
-    * jump *label215 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
+  560 jump *label168 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
+  561 jump *label168 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
   562 set :findDrillLocationLocal:diffX 1
   563 set :findDrillLocationLocal:diffY 1
   564 set :findBestPosition:best :updateRowPositions3x3.2:col3
 
   730 op add .locations .locations 1
   731 ucontrol unbind
   732 set :findDrillLocationLocal*retval true
-    * jump *label26 always
+  733 return :findDrillLocationLocal*retaddr
   734 label *label307
   735 label *label303
   736 jump *label310 lessThanEq *tmp138 :findDrillLocationLocal:best
 
   756 jump *label74 lessThan *tmp383 7
   757 jump *label72 always
   758 label *label74
-    * jump *label318 lessThan :findDrillLocationLocal:best 0
+  759 jump *label32 lessThan :findDrillLocationLocal:best 0
   760 op add .count .count 1
   761 sensor *tmp390 :findDrillLocationLocal:item @id
   762 write *tmp390 bank1 .count
 
   816 op mul *tmp414 :findPossiblePlacement:y 7
   817 op add *tmp415 24 *tmp414
   818 op add :findPossiblePlacement*retval *tmp415 :findPossiblePlacement:x
-    * jump *label334 always
+  819 return :findPossiblePlacement*retaddr
   820 label *label341
   821 op sub *tmp417 3 :findPossiblePlacement:width
   822 jump *label340 greaterThan :findPossiblePlacement:x *tmp417
 
   844 jump *label349 lessThan :findPossiblePlacement*retval 0
   845 jump *label351 greaterThanEq :findPossiblePlacement*retval 0
   846 set :tryPlaceGenerator*retval false
-    * jump *label347 always
+  847 return :tryPlaceGenerator*retaddr
   848 label *label351
   849 op add *tmp428 :tryPlaceGenerator:centerX 0.5
   850 op add .water2X *tmp428 :findPossiblePlacement:x
 
   866 label *label353
   867 jump *label354 greaterThanEq :findPossiblePlacement*retval 0
   868 set :tryPlaceGenerator*retval false
-    * jump *label347 always
+  869 return :tryPlaceGenerator*retaddr
   870 label *label354
   871 op add *tmp440 :tryPlaceGenerator:centerX 0.5
   872 op add .water2X *tmp440 :findPossiblePlacement:x
 
   887 label *label356
   888 jump *label357 greaterThanEq :findPossiblePlacement*retval 0
   889 set :tryPlaceGenerator*retval false
-    * jump *label347 always
+  890 return :tryPlaceGenerator*retaddr
   891 label *label357
   892 op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   893 op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
 
   902 label *label359
   903 jump *label360 greaterThanEq :findPossiblePlacement*retval 0
   904 set :tryPlaceGenerator*retval false
-    * jump *label347 always
+  905 return :tryPlaceGenerator*retaddr
   906 label *label360
   907 op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   908 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
 
   917 label *label362
   918 jump *label363 greaterThanEq :findPossiblePlacement*retval 0
   919 set :tryPlaceGenerator*retval false
-    * jump *label347 always
+  920 return :tryPlaceGenerator*retaddr
   921 label *label363
   922 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   923 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   924 set :tryPlaceGenerator*retval true
-    * jump *label347 always
+  925 return :tryPlaceGenerator*retaddr
   926 label *label347
   927 return :tryPlaceGenerator*retaddr
   928 end
 
   986 label *label378
   987 jump *label379 equal :tryPlaceGenerator*retval false
   988 set :layoutThoriumDrillAtLocation*retval true
-    * jump *label365 always
+  989 return :layoutThoriumDrillAtLocation*retaddr
   990 label *label379
   991 set :layoutThoriumDrillAtLocation:sx 3
   992 set :layoutThoriumDrillAtLocation:sy 3
 
  1064 label *label398
  1065 jump *label399 equal :tryPlaceGenerator*retval false
  1066 set :layoutThoriumDrillAtLocation*retval true
-    * jump *label365 always
+ 1067 return :layoutThoriumDrillAtLocation*retaddr
  1068 label *label399
  1069 multijump *tmp533 0 0 (m:marker0)
  1070 multilabel *label387 (m:marker0)

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-17 instructions):
 
     9 label *label13
    10 wait 1e12
    11 jump *label13 always
-    * end
    12 label *label6
    13 op sub :spotValue:x :computeRowValues:x 2
    14 set :spotValue:y :computeRowValues:y
 
    52 op add *tmp15 :spotValue.3:result :spotValue.4:result
    53 packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp15
    54 return :computeRowValues*retaddr
-    * return :computeRowValues*retaddr
    55 label *label20
    56 jump *label22 notEqual :computeRowValues:size 3
    57 op add *tmp19 :spotValue.1:result :spotValue.2:result
 
    61 op add *tmp24 *tmp23 :spotValue.4:result
    62 packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0
    63 return :computeRowValues*retaddr
-    * return :computeRowValues*retaddr
    64 label *label22
    65 op sub :spotValue.5:x :computeRowValues:x 3
    66 set :spotValue.5:y :computeRowValues:y
 
    89 op add *tmp44 *tmp39 :spotValue.6:result
    90 op min *tmp45 0.09803921568627451 *tmp44
    91 packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp45
-    * label *label23
-    * label *label21
-    * label *label14
    92 return :computeRowValues*retaddr
-    * end
    93 label *label7
    94 ubind :findDrillLocationLocal:unit
    95 set .locationsStart .locations
 
   282 op add *tmp15 :spotValue.3:result :spotValue.4:result
   283 packcolor :findBestPosition:y1 *tmp12 *tmp13 *tmp14 *tmp15
   284 jump *label430 always
-    * jump *label429 always
   285 label *label424
   286 jump *label425 notEqual :findDrillLocationLocal:size 3
   287 op add *tmp19 :spotValue.1:result :spotValue.2:result
 
   291 op add *tmp24 *tmp23 :spotValue.4:result
   292 packcolor :findBestPosition:y1 *tmp20 *tmp22 *tmp24 0
   293 jump *label430 always
-    * jump *label428 always
   294 label *label425
   295 op sub :spotValue.5:x :findDrillLocationLocal:oreX 3
   296 set :spotValue.5:y *tmp139
 
   479 set :findDrillLocationLocal:diffX 1.5
   480 set :findDrillLocationLocal:diffY 1.5
   481 set :findBestPosition:best :updateRowPositions2x2.3:col4
-    * label *label165
-    * label *label163
   482 jump *label82 always
   483 label *label81
   484 jump *label167 notEqual :findBestPosition:size 3
 
   551 set :findDrillLocationLocal:diffX 1
   552 set :findDrillLocationLocal:diffY 1
   553 set :findBestPosition:best :updateRowPositions3x3.2:col3
-    * label *label215
-    * label *label213
   554 jump *label168 always
   555 label *label167
   556 op sub *tmp266 :findBestPosition:y 3
 
   754 op add .count .count 1
   755 write :findDrillLocationLocal:bestY bank1 .count
   756 op add .locations .locations 1
-    * label *label318
   757 jump *label32 always
-    * set :findDrillLocationLocal*retval null
-    * label *label26
-    * return :findDrillLocationLocal*retaddr
-    * end
   758 label *label8
   759 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp400
   760 jump *label326 notEqual *tmp400 false
 
   782 jump *label411 greaterThanEq :createTerrainMask:r -3
   783 set :createTerrainMask*retval :createTerrainMask:result
   784 return :createTerrainMask*retaddr
-    * end
   785 label *label9
   786 set :findPossiblePlacement:y -3
   787 jump *label337 greaterThan :findPossiblePlacement:y 3
 
   811 jump *label413 lessThanEq :findPossiblePlacement:y 3
   812 label *label337
   813 set :findPossiblePlacement*retval -1
-    * label *label334
   814 return :findPossiblePlacement*retaddr
-    * end
   815 label *label10
   816 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
   817 set :findPossiblePlacement:placementMask :tryPlaceGenerator:generatorVertical
 
   902 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   903 set :tryPlaceGenerator*retval true
   904 return :tryPlaceGenerator*retaddr
-    * label *label347
-    * return :tryPlaceGenerator*retaddr
-    * end
   905 label *label11
   906 set .panelY -1
   907 set .panelX -1
 
  1045 multijump *tmp533 0 0 (m:marker0)
  1046 multilabel *label387 (m:marker0)
  1047 set :layoutThoriumDrillAtLocation*retval true
-    * label *label365
  1048 return :layoutThoriumDrillAtLocation*retaddr
-    * end
  1049 label *label0
  1050 set .searchFinished false
  1051 set :findDrillLocationLocal:x :findDrillLocation:x
 
  1065 set :findDrillLocation*retval true
  1066 set :findDrillLocation*finished true
  1067 jump *label13 always
-    * end
  1068 label *label1
  1069 set :findDrillLocationLocal:x :layoutThoriumDrill:x
  1070 set :findDrillLocationLocal:y :layoutThoriumDrill:y
 
  1089 label *label403
  1090 set :layoutThoriumDrill*finished true
  1091 jump *label13 always
-    * end
  1092 label *label2
  1093 set .mapSpots 0
  1094 set .mapAction 0
 
  1097 ucontrol unbind
  1098 set :stopLocation*finished true
  1099 jump *label13 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
   319 op add *tmp44 *tmp39 :spotValue.6:result
   320 op min *tmp45 0.09803921568627451 *tmp44
   321 packcolor :findBestPosition:y1 *tmp33 *tmp37 *tmp41 *tmp45
-    * label *label428
-    * label *label429
   322 label *label430
   323 op sub *tmp141 :findDrillLocationLocal:oreY 1
   324 set :computeRowValues:x :findDrillLocationLocal:oreX

Modifications by Jumps phase, Jump Straightening, pass 5, iteration 1 (-1 instructions):
 
   738 op sub *tmp381 :findDrillLocationLocal:oreY .coreY
   739 op abs *tmp382 *tmp381
   740 op min *tmp383 *tmp380 *tmp382
-    * jump *label74 lessThan *tmp383 7
-    * jump *label72 always
+  741 jump *label72 greaterThanEq *tmp383 7
   742 label *label74
   743 jump *label32 lessThan :findDrillLocationLocal:best 0
   744 op add .count .count 1

Final code before resolving virtual instructions:

    0:  jump *label12 always 0 0                                     #set target = 8;
    1:  jump *label0 always 0 0                                      ...
    2:  jump *label1 always 0 0                                      ...
    3:  jump *label2 always 0 0                                      ...
    4:  draw triangle bank1 message1 .angle .attenuationRate .batteryX .batteryY
    5:  draw triangle .containerX .containerY .coreX .coreY .count .drillX
    6:  draw triangle .drillY .generatorX .generatorY .locations .locationsStart .mapAction
    7:  draw triangle .mapProgress .mapSpots .mapTotal .nodeX .nodeY .panelX
    8:  draw triangle .panelY .searchFinished .water1X .water1Y .water2X .water2Y
    9:  draw triangle :computeRowValues:ore :computeRowValues:size :computeRowValues:x :computeRowValues:y :createTerrainMask:c :createTerrainMask:r
   10:  draw triangle :createTerrainMask:result :createTerrainMask:x :createTerrainMask:y :findBestPosition:best :findBestPosition:ore :findBestPosition:row1
   11:  draw triangle :findBestPosition:row1.2 :findBestPosition:row1.1 :findBestPosition:row2.1 :findBestPosition:row2.2 :findBestPosition:row2 :findBestPosition:row3
   12:  draw triangle :findBestPosition:row3.1 :findBestPosition:row3.2 :findBestPosition:row4.1 :findBestPosition:row4 :findBestPosition:size :findBestPosition:x
   13:  draw triangle :findBestPosition:y :findBestPosition:y0 :findBestPosition:y1 :findBestPosition:y2 :findBestPosition:y3 :findBestPosition:y4
   14:  draw triangle :findBestPosition:y5 :findDrillLocation:capacity :findDrillLocation:dx :findDrillLocation:dy :findDrillLocation:item :findDrillLocation:limit
   15:  draw triangle :findDrillLocation:ore :findDrillLocation:size :findDrillLocation:unit :findDrillLocation:x :findDrillLocation:y :findDrillLocationLocal:best
   16:  draw triangle :findDrillLocationLocal:bestX :findDrillLocationLocal:bestY :findDrillLocationLocal:capacity :findDrillLocationLocal:diffX :findDrillLocationLocal:diffY :findDrillLocationLocal:distanceLimit
   17:  draw triangle :findDrillLocationLocal:dx :findDrillLocationLocal:dy :findDrillLocationLocal:item :findDrillLocationLocal:last :findDrillLocationLocal:limit :findDrillLocationLocal:maxDistance
   18:  draw triangle :findDrillLocationLocal:ore :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY :findDrillLocationLocal:size :findDrillLocationLocal:unit :findDrillLocationLocal:x
   19:  draw triangle :findDrillLocationLocal:y :findPossiblePlacement:height :findPossiblePlacement:mask :findPossiblePlacement:placementMask :findPossiblePlacement:terrainMask :findPossiblePlacement:width
   20:  draw triangle :findPossiblePlacement:x :findPossiblePlacement:y :isBlocked:result :isBlocked:x :isBlocked:y :layoutThoriumDrill:limit
   21:  draw triangle :layoutThoriumDrill:unit :layoutThoriumDrill:x :layoutThoriumDrill:y :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:generatorHorizontal
   22:  draw triangle :layoutThoriumDrillAtLocation:generatorVertical :layoutThoriumDrillAtLocation:mask2x2 :layoutThoriumDrillAtLocation:newX :layoutThoriumDrillAtLocation:newY :layoutThoriumDrillAtLocation:sx :layoutThoriumDrillAtLocation:sy
   23:  draw triangle :layoutThoriumDrillAtLocation:terrainMask :locateOreAway:a :locateOreAway:coreDist :locateOreAway:distance :locateOreAway:lastX :locateOreAway:lastY
   24:  draw triangle :locateOreAway:unitDist :locateOreAway:x :locateOreAway:y :round.1:x :round:x :shiftMask:clearMask
   25:  draw triangle :shiftMask:keep :shiftMask:mask :shiftMask:shift :spotValue.3:ore :spotValue.4:ore :spotValue.1:ore
   26:  draw triangle :spotValue.5:ore :spotValue:ore :spotValue.2:ore :spotValue.6:ore :spotValue.4:result :spotValue:result
   27:  draw triangle :spotValue.2:result :spotValue.5:result :spotValue.1:result :spotValue.3:result :spotValue.6:result :spotValue.6:x
   28:  draw triangle :spotValue.5:x :spotValue.4:x :spotValue:x :spotValue.3:x :spotValue.2:x :spotValue.1:x
   29:  draw triangle :spotValue.6:y :spotValue.5:y :spotValue.4:y :spotValue:y :spotValue.3:y :spotValue.2:y
   30:  draw triangle :spotValue.1:y :tryPlaceGenerator:centerX :tryPlaceGenerator:centerY :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:terrainMask
   31:  draw triangle :updateRowPositions2x2:col1 :updateRowPositions2x2.2:col1 :updateRowPositions2x2.1:col1 :updateRowPositions2x2.3:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2.2:col2
   32:  draw triangle :updateRowPositions2x2.1:col2 :updateRowPositions2x2.3:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.3:col3
   33:  draw triangle :updateRowPositions2x2:col4 :updateRowPositions2x2.2:col4 :updateRowPositions2x2.1:col4 :updateRowPositions2x2.3:col4 :updateRowPositions3x3:col1 :updateRowPositions3x3.2:col1
   34:  draw triangle :updateRowPositions3x3.1:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.1:col2 :updateRowPositions3x3:col3 :updateRowPositions3x3.2:col3
   35:  draw triangle :updateRowPositions3x3.1:col3 :updateRowPositions4x4.2:col1 :updateRowPositions4x4.1:col1 :updateRowPositions4x4.3:col1 :updateRowPositions4x4:col1 :updateRowPositions4x4.2:col2
   36:  draw triangle :updateRowPositions4x4.1:col2 :updateRowPositions4x4.3:col2 :updateRowPositions4x4:col2 :updateRowPositions4x4.2:col3 :updateRowPositions4x4.1:col3 :updateRowPositions4x4.3:col3
   37:  draw triangle :updateRowPositions4x4:col3 :updateRowPositions4x4.2:col4 :updateRowPositions4x4.1:col4 :updateRowPositions4x4.3:col4 :updateRowPositions4x4:col4 :visited:i
   38:  draw triangle :visited:index :visited:lx :visited:ly 0 0 0
        label *label12                                               ...
   39:  set .attenuationRate 50                                      remote var attenuationRate = 50;
   40:  set .locations 0                                             remote var locations = 0;
   41:  set .count -1                                                var count = -1, locationsStart, start;
   42:  set *signature "3290b8c661787058:v1"                         #set target = 8;
        label *label13                                               ...
   43:  wait 1e12                                                    ...
   44:  jump *label13 always 0 0                                     ...
        label *label6                                                def computeRowValues(x, y, ore, size)
   45:  op sub :spotValue:x :computeRowValues:x 2                    var x1 = spotValue(x - 2, y, ore);
   46:  set :spotValue:y :computeRowValues:y                         ...
   47:  set :spotValue:ore :computeRowValues:ore                     ...
   48:  ucontrol getBlock :spotValue:x :spotValue:y type building fl mlog(in x, in y, in ore, in ORE, in WALL, out result) {
   49:  select value equal floor :spotValue:ore 0.00392156862745098  ...
   50:  sensor solid type @solid                                     ...
   51:  select :spotValue:result notEqual solid false 0.098039215686 ...
   52:  op sub :spotValue.1:x :computeRowValues:x 1                  var x2 = spotValue(x - 1, y, ore);
   53:  set :spotValue.1:y :computeRowValues:y                       ...
   54:  set :spotValue.1:ore :computeRowValues:ore                   ...
   55:  ucontrol getBlock :spotValue.1:x :spotValue.1:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
   56:  select value equal floor :spotValue.1:ore 0.0039215686274509 ...
   57:  sensor solid type @solid                                     ...
   58:  select :spotValue.1:result notEqual solid false 0.0980392156 ...
   59:  set :spotValue.2:x :computeRowValues:x                       var x3 = spotValue(x + 0, y, ore);
   60:  set :spotValue.2:y :computeRowValues:y                       ...
   61:  set :spotValue.2:ore :computeRowValues:ore                   ...
   62:  ucontrol getBlock :spotValue.2:x :spotValue.2:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
   63:  select value equal floor :spotValue.2:ore 0.0039215686274509 ...
   64:  sensor solid type @solid                                     ...
   65:  select :spotValue.2:result notEqual solid false 0.0980392156 ...
   66:  op add :spotValue.3:x :computeRowValues:x 1                  var x4 = spotValue(x + 1, y, ore);
   67:  set :spotValue.3:y :computeRowValues:y                       ...
   68:  set :spotValue.3:ore :computeRowValues:ore                   ...
   69:  ucontrol getBlock :spotValue.3:x :spotValue.3:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
   70:  select value equal floor :spotValue.3:ore 0.0039215686274509 ...
   71:  sensor solid type @solid                                     ...
   72:  select :spotValue.3:result notEqual solid false 0.0980392156 ...
   73:  op add :spotValue.4:x :computeRowValues:x 2                  var x5 = spotValue(x + 2, y, ore);
   74:  set :spotValue.4:y :computeRowValues:y                       ...
   75:  set :spotValue.4:ore :computeRowValues:ore                   ...
   76:  ucontrol getBlock :spotValue.4:x :spotValue.4:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
   77:  select value equal floor :spotValue.4:ore 0.0039215686274509 ...
   78:  sensor solid type @solid                                     ...
   79:  select :spotValue.4:result notEqual solid false 0.0980392156 ...
   80:  jump *label20 notEqual :computeRowValues:size 2              if size == 2 then
   81:  op add *tmp12 :spotValue:result :spotValue.1:result          x1 + x2,        // drill at x - 1.5
   82:  op add *tmp13 :spotValue.1:result :spotValue.2:result        x2 + x3,        // drill at x - 0.5
   83:  op add *tmp14 :spotValue.2:result :spotValue.3:result        x3 + x4,        // drill at x + 0.5
   84:  op add *tmp15 :spotValue.3:result :spotValue.4:result        x4 + x5         // drill at x + 1.5
   85:  packcolor :computeRowValues*retval *tmp12 *tmp13 *tmp14 *tmp return packcolor(
   86:  return :computeRowValues*retaddr                             ...
        label *label20                                               if size == 2 then
   87:  jump *label22 notEqual :computeRowValues:size 3              elsif size == 3 then
   88:  op add *tmp19 :spotValue.1:result :spotValue.2:result        x1 + (x2 + x3),   // drill at x - 1
   89:  op add *tmp20 :spotValue:result *tmp19                       ...
   90:  op add *tmp22 *tmp19 :spotValue.3:result                     (x2 + x3) + x4,   // drill at x
   91:  op add *tmp23 :spotValue.2:result :spotValue.3:result        x3 + x4 + x5,   // drill at x + 1
   92:  op add *tmp24 *tmp23 :spotValue.4:result                     ...
   93:  packcolor :computeRowValues*retval *tmp20 *tmp22 *tmp24 0    return packcolor(
   94:  return :computeRowValues*retaddr                             ...
        label *label22                                               elsif size == 3 then
   95:  op sub :spotValue.5:x :computeRowValues:x 3                  var x0 = spotValue(x - 3, y, ore);
   96:  set :spotValue.5:y :computeRowValues:y                       ...
   97:  set :spotValue.5:ore :computeRowValues:ore                   ...
   98:  ucontrol getBlock :spotValue.5:x :spotValue.5:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
   99:  select value equal floor :spotValue.5:ore 0.0039215686274509 ...
  100:  sensor solid type @solid                                     ...
  101:  select :spotValue.5:result notEqual solid false 0.0980392156 ...
  102:  op add :spotValue.6:x :computeRowValues:x 3                  var x6 = spotValue(x + 3, y, ore);
  103:  set :spotValue.6:y :computeRowValues:y                       ...
  104:  set :spotValue.6:ore :computeRowValues:ore                   ...
  105:  ucontrol getBlock :spotValue.6:x :spotValue.6:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  106:  select value equal floor :spotValue.6:ore 0.0039215686274509 ...
  107:  sensor solid type @solid                                     ...
  108:  select :spotValue.6:result notEqual solid false 0.0980392156 ...
  109:  op add *tmp30 :spotValue:result :spotValue.1:result          min(WALL, x0 + (x1 + x2 + x3)),   // drill at x - 1.5
  110:  op add *tmp31 *tmp30 :spotValue.2:result                     ...
  111:  op add *tmp32 :spotValue.5:result *tmp31                     ...
  112:  op min *tmp33 0.09803921568627451 *tmp32                     ...
  113:  op add *tmp36 *tmp31 :spotValue.3:result                     min(WALL, (x1 + x2 + x3) + x4),   // drill at x - 0.5
  114:  op min *tmp37 0.09803921568627451 *tmp36                     ...
  115:  op add *tmp38 :spotValue.2:result :spotValue.3:result        min(WALL, x2 + (x3 + x4 + x5)),   // drill at x + 0.5
  116:  op add *tmp39 *tmp38 :spotValue.4:result                     ...
  117:  op add *tmp40 :spotValue.1:result *tmp39                     ...
  118:  op min *tmp41 0.09803921568627451 *tmp40                     ...
  119:  op add *tmp44 *tmp39 :spotValue.6:result                     min(WALL, (x3 + x4 + x5) + x6)    // drill at x + 1.5
  120:  op min *tmp45 0.09803921568627451 *tmp44                     ...
  121:  packcolor :computeRowValues*retval *tmp33 *tmp37 *tmp41 *tmp return packcolor(
  122:  return :computeRowValues*retaddr                             def computeRowValues(x, y, ore, size)
        label *label7                                                noinline def findDrillLocationLocal(x, y, unit, item, ore, size, limit, out dx, out dy, out capacity)
  123:  ubind :findDrillLocationLocal:unit                           ubind(unit);
  124:  set .locationsStart .locations                               locationsStart = locations;
  125:  set .coreX :findDrillLocationLocal:x                         coreX = x;
  126:  set .coreY :findDrillLocationLocal:y                         coreY = y;
  127:  set :findDrillLocationLocal:capacity 0                       mapSpots = dx = dy = capacity = 0;
  128:  set :findDrillLocationLocal:dy :findDrillLocationLocal:capac ...
  129:  set :findDrillLocationLocal:dx :findDrillLocationLocal:dy    ...
  130:  set .mapSpots :findDrillLocationLocal:dx                     ...
  131:  op sub *tmp48 @mapw :findDrillLocationLocal:x                var distanceLimit = max(coreX, coreY, @mapw - coreX, @maph - coreY);
  132:  op sub *tmp49 @maph :findDrillLocationLocal:y                ...
  133:  op max *tmp50 :findDrillLocationLocal:x :findDrillLocationLo ...
  134:  op max *tmp50 *tmp50 *tmp48                                  ...
  135:  op max *tmp50 *tmp50 *tmp49                                  ...
  136:  set :findDrillLocationLocal:distanceLimit *tmp50             ...
  137:  set .mapAction "Locating ore..."                             mapAction = "Locating ore...";
  138:  set .angle 0                                                 mapProgress = angle = 0;
  139:  set .mapProgress 0                                           ...
  140:  ucontrol within :findDrillLocationLocal:x :findDrillLocation while !within(x, y, radius) do
  141:  jump *label31 notEqual *tmp53 false                          ...
        label *label431                                              ...
  142:  ucontrol approach :findDrillLocationLocal:x :findDrillLocati approach(x, y, radius - 0.5);
  143:  ucontrol within :findDrillLocationLocal:x :findDrillLocation while !within(x, y, radius) do
  144:  jump *label431 equal *tmp53 false                            ...
        label *label31                                               ...
  145:  op div *tmp56 *tmp50 3.8197185279121366                      mapTotal = (distanceLimit / SPIRAL_WIDTH) ** 2;
  146:  op pow .mapTotal *tmp56 2                                    ...
  147:  set :findDrillLocationLocal:oreX 0                           var oreX = 0, oreY = 0;
  148:  set :findDrillLocationLocal:oreY 0                           ...
        label *label32                                               while true do
  149:  set :findDrillLocationLocal:best -1                          var best = -1, bestX = x, bestY = y;
  150:  set :findDrillLocationLocal:bestX :findDrillLocationLocal:x  ...
  151:  set :findDrillLocationLocal:bestY :findDrillLocationLocal:y  ...
  152:  op sub *tmp58 :findDrillLocationLocal:limit :findDrillLocati var maxDistance = (limit - capacity) * attenuationRate;
  153:  op mul :findDrillLocationLocal:maxDistance *tmp58 .attenuati ...
  154:  op min :findDrillLocationLocal:distanceLimit :findDrillLocat distanceLimit = min(distanceLimit, maxDistance);
  155:  op div *tmp61 :findDrillLocationLocal:distanceLimit 3.819718 mapTotal = (distanceLimit / SPIRAL_WIDTH) ** 2;
  156:  op pow .mapTotal *tmp61 2                                    ...
  157:  set :locateOreAway:x :findDrillLocationLocal:oreX            if !locateOreAway(item, in out oreX, in out oreY, in distanceLimit) then
  158:  set :locateOreAway:y :findDrillLocationLocal:oreY            ...
  159:  op mul :locateOreAway:distance 3.8197185279121366 .angle     var distance = SPIRAL_WIDTH * angle;
  160:  set :locateOreAway:lastX -1                                  var lastX = -1, lastY = -1;
  161:  set :locateOreAway:lastY -1                                  ...
  162:  op max .angle .angle @pi                                     angle = max(angle, @pi);
  163:  op mul .mapProgress .angle .angle                            mapProgress = angle * angle;
  164:  op sub *tmp72 @mapw 5                                        while distance < distanceLimit do
  165:  op sub *tmp79 @maph 5                                        ...
  166:  jump *label38 greaterThanEq :locateOreAway:distance :findDri ...
        label *label409                                              ...
  167:  op div :locateOreAway:a .angle @degToRad                     var a = angle / @degToRad;
  168:  op sin *tmp69 :locateOreAway:a 0                             var lx = limit(coreX + sin(a) * distance, 5, @mapw - 5);
  169:  op mul *tmp70 *tmp69 :locateOreAway:distance                 ...
  170:  op add *tmp71 .coreX *tmp70                                  ...
  171:  op max *tmp74 *tmp71 5                                       min(max(value, low), high);
  172:  op min *tmp73 *tmp74 *tmp72                                  var lx = limit(coreX + sin(a) * distance, 5, @mapw - 5);
  173:  op cos *tmp76 :locateOreAway:a 0                             var ly = limit(coreY + cos(a) * distance, 5, @maph - 5);
  174:  op mul *tmp77 *tmp76 :locateOreAway:distance                 ...
  175:  op add *tmp78 .coreY *tmp77                                  ...
  176:  op max *tmp81 *tmp78 5                                       min(max(value, low), high);
  177:  op min *tmp80 *tmp81 *tmp79                                  var ly = limit(coreY + cos(a) * distance, 5, @maph - 5);
  178:  ucontrol within *tmp73 *tmp80 5 *tmp83 0                     while !within(x, y, radius) do
  179:  jump *label44 notEqual *tmp83 false                          ...
        label *label415                                              ...
  180:  ucontrol approach *tmp73 *tmp80 4.5 0 0                      approach(x, y, radius - 0.5);
  181:  ucontrol within *tmp73 *tmp80 5 *tmp83 0                     while !within(x, y, radius) do
  182:  jump *label415 equal *tmp83 false                            ...
        label *label44                                               ...
  183:  op div *tmp86 3.8197185279121366 :locateOreAway:distance     angle += SPIRAL_WIDTH / distance;
  184:  op add .angle .angle *tmp86                                  ...
  185:  op mul .mapProgress .angle .angle                            mapProgress = angle * angle;
  186:  op mul :locateOreAway:distance 3.8197185279121366 .angle     distance = SPIRAL_WIDTH * angle;
  187:  ulocate ore core true :findDrillLocationLocal:item :locateOr if !ulocate(:ore, ore, out x, out y) then
  188:  jump *label45 notEqual *tmp89 false                          ...
  189:  set *tmp63 false                                             return false;
  190:  jump *label35 always 0 0                                     ...
        label *label45                                               if !ulocate(:ore, ore, out x, out y) then
  191:  op sub *tmp93 :locateOreAway:x .coreX                        var coreDist = max(abs(x - coreX), abs(y - coreY));
  192:  op abs *tmp94 *tmp93 0                                       ...
  193:  op sub *tmp95 :locateOreAway:y .coreY                        ...
  194:  op abs *tmp96 *tmp95 0                                       ...
  195:  op max :locateOreAway:coreDist *tmp94 *tmp96                 ...
  196:  op sub *tmp98 :locateOreAway:x *tmp73                        var unitDist = len(x - lx, y - ly);
  197:  op sub *tmp99 :locateOreAway:y *tmp80                        ...
  198:  op len :locateOreAway:unitDist *tmp98 *tmp99                 ...
  199:  jump *label47 notEqual :locateOreAway:lastX :locateOreAway:x if lastX == x then if lastY == y then continue; end; end;
  200:  jump *label37 equal :locateOreAway:lastY :locateOreAway:y    ...
        label *label47                                               ...
  201:  jump *label51 lessThan :locateOreAway:coreDist 7             if coreDist >= 7 then
  202:  jump *label53 greaterThanEq :locateOreAway:unitDist :locateO if unitDist < distance then
  203:  set :locateOreAway:lastX :locateOreAway:x                    lastX = x;
  204:  set :locateOreAway:lastY :locateOreAway:y                    lastY = y;
  205:  set *tmp110 .locations                                       for var i in locationsStart ... locations do
  206:  set :visited:i .locationsStart                               ...
  207:  jump *label58 greaterThanEq .locationsStart *tmp110          ...
        label *label410                                              ...
  208:  op mul :visited:index 4 :visited:i                           var index = 4 * i;
  209:  op add *tmp112 :visited:index 2                              var lx = bank1[index + 2];
  210:  read :visited:lx bank1 *tmp112                               ...
  211:  op add *tmp115 :visited:index 3                              var ly = bank1[index + 3];
  212:  read :visited:ly bank1 *tmp115                               ...
  213:  op sub *tmp118 :locateOreAway:x :visited:lx                  if len(x - lx, y - ly) < 7 then
  214:  op sub *tmp119 :locateOreAway:y :visited:ly                  ...
  215:  op len *tmp120 *tmp118 *tmp119                               ...
  216:  jump *label59 greaterThanEq *tmp120 7                        ...
  217:  set *tmp109 true                                             return true;
  218:  jump *label55 always 0 0                                     ...
        label *label59                                               if len(x - lx, y - ly) < 7 then
  219:  op add :visited:i :visited:i 1                               for var i in locationsStart ... locations do
  220:  jump *label410 lessThan :visited:i *tmp110                   ...
        label *label58                                               ...
  221:  set *tmp109 false                                            return false;
        label *label55                                               if !visited(x, y) then
  222:  jump *label61 notEqual *tmp109 false                         ...
  223:  op div *tmp125 2 .angle                                      angle += 2 * SPIRAL_WIDTH / distance;
  224:  op add .angle .angle *tmp125                                 ...
  225:  op mul .mapProgress .angle .angle                            mapProgress = angle * angle;
  226:  printflush message1                                          printflush(message1);
  227:  set *tmp63 true                                              return true;
  228:  jump *label35 always 0 0                                     ...
        label *label61                                               if !visited(x, y) then
        label *label53                                               if unitDist < distance then
        label *label51                                               if coreDist >= 7 then
        label *label37                                               while distance < distanceLimit do
  229:  jump *label409 lessThan :locateOreAway:distance :findDrillLo ...
        label *label38                                               ...
  230:  set *tmp63 false                                             return false;
        label *label35                                               if !locateOreAway(item, in out oreX, in out oreY, in distanceLimit) then
  231:  set :findDrillLocationLocal:oreX :locateOreAway:x            ...
  232:  set :findDrillLocationLocal:oreY :locateOreAway:y            ...
  233:  jump *label63 notEqual *tmp63 false                          ...
  234:  op greaterThan :findDrillLocationLocal*retval :findDrillLoca return capacity > 0;
  235:  return :findDrillLocationLocal*retaddr                       ...
        label *label63                                               if !locateOreAway(item, in out oreX, in out oreY, in distanceLimit) then
  236:  jump *label65 lessThan :findDrillLocationLocal:limit 1000    if limit >= 1000 then mapSpots++; end;
  237:  op add .mapSpots .mapSpots 1                                 ...
        label *label65                                               ...
  238:  ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp135  while !within(x, y, radius) do
  239:  jump *label71 notEqual *tmp135 false                         ...
        label *label416                                              ...
  240:  ucontrol approach :locateOreAway:x :locateOreAway:y 5.5 0 0  approach(x, y, radius - 0.5);
  241:  ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp135  while !within(x, y, radius) do
  242:  jump *label416 equal *tmp135 false                           ...
        label *label71                                               ...
  243:  set :findDrillLocationLocal:last 0                           var last = 0;
        label *label72                                               while true do
  244:  set :findBestPosition:x :findDrillLocationLocal:oreX         var score = findBestPosition(oreX, oreY, ore, size, ref diffX, ref diffY);
  245:  set :findBestPosition:y :findDrillLocationLocal:oreY         ...
  246:  set :findBestPosition:ore :findDrillLocationLocal:ore        ...
  247:  set :findBestPosition:size :findDrillLocationLocal:size      ...
  248:  op sub *tmp139 :findDrillLocationLocal:oreY 2                var y1 = computeRowValues(x, y - 2, ore, size);
  249:  op sub :spotValue:x :findDrillLocationLocal:oreX 2           var x1 = spotValue(x - 2, y, ore);
  250:  set :spotValue:y *tmp139                                     ...
  251:  set :spotValue:ore :findDrillLocationLocal:ore               ...
  252:  ucontrol getBlock :spotValue:x :spotValue:y type building fl mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  253:  select value equal floor :spotValue:ore 0.00392156862745098  ...
  254:  sensor solid type @solid                                     ...
  255:  select :spotValue:result notEqual solid false 0.098039215686 ...
  256:  op sub :spotValue.1:x :findDrillLocationLocal:oreX 1         var x2 = spotValue(x - 1, y, ore);
  257:  set :spotValue.1:y *tmp139                                   ...
  258:  set :spotValue.1:ore :findDrillLocationLocal:ore             ...
  259:  ucontrol getBlock :spotValue.1:x :spotValue.1:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  260:  select value equal floor :spotValue.1:ore 0.0039215686274509 ...
  261:  sensor solid type @solid                                     ...
  262:  select :spotValue.1:result notEqual solid false 0.0980392156 ...
  263:  set :spotValue.2:x :findDrillLocationLocal:oreX              var x3 = spotValue(x + 0, y, ore);
  264:  set :spotValue.2:y *tmp139                                   ...
  265:  set :spotValue.2:ore :findDrillLocationLocal:ore             ...
  266:  ucontrol getBlock :spotValue.2:x :spotValue.2:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  267:  select value equal floor :spotValue.2:ore 0.0039215686274509 ...
  268:  sensor solid type @solid                                     ...
  269:  select :spotValue.2:result notEqual solid false 0.0980392156 ...
  270:  op add :spotValue.3:x :findDrillLocationLocal:oreX 1         var x4 = spotValue(x + 1, y, ore);
  271:  set :spotValue.3:y *tmp139                                   ...
  272:  set :spotValue.3:ore :findDrillLocationLocal:ore             ...
  273:  ucontrol getBlock :spotValue.3:x :spotValue.3:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  274:  select value equal floor :spotValue.3:ore 0.0039215686274509 ...
  275:  sensor solid type @solid                                     ...
  276:  select :spotValue.3:result notEqual solid false 0.0980392156 ...
  277:  op add :spotValue.4:x :findDrillLocationLocal:oreX 2         var x5 = spotValue(x + 2, y, ore);
  278:  set :spotValue.4:y *tmp139                                   ...
  279:  set :spotValue.4:ore :findDrillLocationLocal:ore             ...
  280:  ucontrol getBlock :spotValue.4:x :spotValue.4:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  281:  select value equal floor :spotValue.4:ore 0.0039215686274509 ...
  282:  sensor solid type @solid                                     ...
  283:  select :spotValue.4:result notEqual solid false 0.0980392156 ...
  284:  jump *label424 notEqual :findDrillLocationLocal:size 2       if size == 2 then
  285:  op add *tmp12 :spotValue:result :spotValue.1:result          x1 + x2,        // drill at x - 1.5
  286:  op add *tmp13 :spotValue.1:result :spotValue.2:result        x2 + x3,        // drill at x - 0.5
  287:  op add *tmp14 :spotValue.2:result :spotValue.3:result        x3 + x4,        // drill at x + 0.5
  288:  op add *tmp15 :spotValue.3:result :spotValue.4:result        x4 + x5         // drill at x + 1.5
  289:  packcolor :findBestPosition:y1 *tmp12 *tmp13 *tmp14 *tmp15   return packcolor(
  290:  jump *label430 always 0 0                                    ...
        label *label424                                              if size == 2 then
  291:  jump *label425 notEqual :findDrillLocationLocal:size 3       elsif size == 3 then
  292:  op add *tmp19 :spotValue.1:result :spotValue.2:result        x1 + (x2 + x3),   // drill at x - 1
  293:  op add *tmp20 :spotValue:result *tmp19                       ...
  294:  op add *tmp22 *tmp19 :spotValue.3:result                     (x2 + x3) + x4,   // drill at x
  295:  op add *tmp23 :spotValue.2:result :spotValue.3:result        x3 + x4 + x5,   // drill at x + 1
  296:  op add *tmp24 *tmp23 :spotValue.4:result                     ...
  297:  packcolor :findBestPosition:y1 *tmp20 *tmp22 *tmp24 0        return packcolor(
  298:  jump *label430 always 0 0                                    ...
        label *label425                                              elsif size == 3 then
  299:  op sub :spotValue.5:x :findDrillLocationLocal:oreX 3         var x0 = spotValue(x - 3, y, ore);
  300:  set :spotValue.5:y *tmp139                                   ...
  301:  set :spotValue.5:ore :findDrillLocationLocal:ore             ...
  302:  ucontrol getBlock :spotValue.5:x :spotValue.5:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  303:  select value equal floor :spotValue.5:ore 0.0039215686274509 ...
  304:  sensor solid type @solid                                     ...
  305:  select :spotValue.5:result notEqual solid false 0.0980392156 ...
  306:  op add :spotValue.6:x :findDrillLocationLocal:oreX 3         var x6 = spotValue(x + 3, y, ore);
  307:  set :spotValue.6:y *tmp139                                   ...
  308:  set :spotValue.6:ore :findDrillLocationLocal:ore             ...
  309:  ucontrol getBlock :spotValue.6:x :spotValue.6:y type buildin mlog(in x, in y, in ore, in ORE, in WALL, out result) {
  310:  select value equal floor :spotValue.6:ore 0.0039215686274509 ...
  311:  sensor solid type @solid                                     ...
  312:  select :spotValue.6:result notEqual solid false 0.0980392156 ...
  313:  op add *tmp30 :spotValue:result :spotValue.1:result          min(WALL, x0 + (x1 + x2 + x3)),   // drill at x - 1.5
  314:  op add *tmp31 *tmp30 :spotValue.2:result                     ...
  315:  op add *tmp32 :spotValue.5:result *tmp31                     ...
  316:  op min *tmp33 0.09803921568627451 *tmp32                     ...
  317:  op add *tmp36 *tmp31 :spotValue.3:result                     min(WALL, (x1 + x2 + x3) + x4),   // drill at x - 0.5
  318:  op min *tmp37 0.09803921568627451 *tmp36                     ...
  319:  op add *tmp38 :spotValue.2:result :spotValue.3:result        min(WALL, x2 + (x3 + x4 + x5)),   // drill at x + 0.5
  320:  op add *tmp39 *tmp38 :spotValue.4:result                     ...
  321:  op add *tmp40 :spotValue.1:result *tmp39                     ...
  322:  op min *tmp41 0.09803921568627451 *tmp40                     ...
  323:  op add *tmp44 *tmp39 :spotValue.6:result                     min(WALL, (x3 + x4 + x5) + x6)    // drill at x + 1.5
  324:  op min *tmp45 0.09803921568627451 *tmp44                     ...
  325:  packcolor :findBestPosition:y1 *tmp33 *tmp37 *tmp41 *tmp45   return packcolor(
        label *label430                                              var y1 = computeRowValues(x, y - 2, ore, size);
  326:  op sub *tmp141 :findDrillLocationLocal:oreY 1                var y2 = computeRowValues(x, y - 1, ore, size);
  327:  set :computeRowValues:x :findDrillLocationLocal:oreX         ...
  328:  set :computeRowValues:y *tmp141                              ...
  329:  set :computeRowValues:ore :findDrillLocationLocal:ore        ...
  330:  set :computeRowValues:size :findDrillLocationLocal:size      ...
  331:  setaddr :computeRowValues*retaddr *label77                   ...
  332:  call *label6 *invalid :computeRowValues*retval               ...
        label *label77                                               ...
  333:  set :findBestPosition:y2 :computeRowValues*retval            ...
  334:  set :computeRowValues:x :findBestPosition:x                  var y3 = computeRowValues(x, y + 0, ore, size);
  335:  set :computeRowValues:y :findBestPosition:y                  ...
  336:  set :computeRowValues:ore :findBestPosition:ore              ...
  337:  set :computeRowValues:size :findBestPosition:size            ...
  338:  setaddr :computeRowValues*retaddr *label78                   ...
  339:  call *label6 *invalid :computeRowValues*retval               ...
        label *label78                                               ...
  340:  set :findBestPosition:y3 :computeRowValues*retval            ...
  341:  op add *tmp145 :findBestPosition:y 1                         var y4 = computeRowValues(x, y + 1, ore, size);
  342:  set :computeRowValues:x :findBestPosition:x                  ...
  343:  set :computeRowValues:y *tmp145                              ...
  344:  set :computeRowValues:ore :findBestPosition:ore              ...
  345:  set :computeRowValues:size :findBestPosition:size            ...
  346:  setaddr :computeRowValues*retaddr *label79                   ...
  347:  call *label6 *invalid :computeRowValues*retval               ...
        label *label79                                               ...
  348:  set :findBestPosition:y4 :computeRowValues*retval            ...
  349:  op add *tmp147 :findBestPosition:y 2                         var y5 = computeRowValues(x, y + 2, ore, size);
  350:  set :computeRowValues:x :findBestPosition:x                  ...
  351:  set :computeRowValues:y *tmp147                              ...
  352:  set :computeRowValues:ore :findBestPosition:ore              ...
  353:  set :computeRowValues:size :findBestPosition:size            ...
  354:  setaddr :computeRowValues*retaddr *label80                   ...
  355:  call *label6 *invalid :computeRowValues*retval               ...
        label *label80                                               ...
  356:  set :findBestPosition:y5 :computeRowValues*retval            ...
  357:  set :findBestPosition:best 0                                 var best = 0;
  358:  set :findDrillLocationLocal:diffX 0                          bestX = 0;
  359:  set :findDrillLocationLocal:diffY 0                          bestY = 0;
  360:  jump *label81 notEqual :findBestPosition:size 2              if size == 2 then
  361:  op add :findBestPosition:row1 :findBestPosition:y1 :findBest var row1 = y1 + y2;         // drill at y - 1.5
  362:  op add :findBestPosition:row2 :findBestPosition:y2 :findBest var row2 = y2 + y3;         // drill at y - 0.5
  363:  op add :findBestPosition:row3 :findBestPosition:y3 :findBest var row3 = y3 + y4;         // drill at y + 0.5
  364:  op add :findBestPosition:row4 :findBestPosition:y4 :computeR var row4 = y4 + y5;         // drill at y + 1.5
  365:  unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2 unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  366:  jump *label85 greaterThanEq :updateRowPositions2x2:col1 0.07 if value < LIMIT then
  367:  jump *label87 lessThanEq :updateRowPositions2x2:col1 0       if value > best then
  368:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  369:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  370:  set :findBestPosition:best :updateRowPositions2x2:col1       best = value;
        label *label87                                               if value > best then
        label *label85                                               if value < LIMIT then
  371:  jump *label90 greaterThanEq :updateRowPositions2x2:col2 0.07 ...
  372:  jump *label92 lessThanEq :updateRowPositions2x2:col2 :findBe if value > best then
  373:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  374:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  375:  set :findBestPosition:best :updateRowPositions2x2:col2       best = value;
        label *label92                                               if value > best then
        label *label90                                               if value < LIMIT then
  376:  jump *label95 greaterThanEq :updateRowPositions2x2:col3 0.07 ...
  377:  jump *label97 lessThanEq :updateRowPositions2x2:col3 :findBe if value > best then
  378:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  379:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  380:  set :findBestPosition:best :updateRowPositions2x2:col3       best = value;
        label *label97                                               if value > best then
        label *label95                                               if value < LIMIT then
  381:  jump *label100 greaterThanEq :updateRowPositions2x2:col4 0.0 ...
  382:  jump *label102 lessThanEq :updateRowPositions2x2:col4 :findB if value > best then
  383:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  384:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  385:  set :findBestPosition:best :updateRowPositions2x2:col4       best = value;
        label *label102                                              if value > best then
        label *label100                                              if value < LIMIT then
  386:  unpackcolor :updateRowPositions2x2.1:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  387:  jump *label106 greaterThanEq :updateRowPositions2x2.1:col1 0 if value < LIMIT then
  388:  jump *label108 lessThanEq :updateRowPositions2x2.1:col1 :fin if value > best then
  389:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  390:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  391:  set :findBestPosition:best :updateRowPositions2x2.1:col1     best = value;
        label *label108                                              if value > best then
        label *label106                                              if value < LIMIT then
  392:  jump *label111 greaterThanEq :updateRowPositions2x2.1:col2 0 ...
  393:  jump *label113 lessThanEq :updateRowPositions2x2.1:col2 :fin if value > best then
  394:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  395:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  396:  set :findBestPosition:best :updateRowPositions2x2.1:col2     best = value;
        label *label113                                              if value > best then
        label *label111                                              if value < LIMIT then
  397:  jump *label116 greaterThanEq :updateRowPositions2x2.1:col3 0 ...
  398:  jump *label118 lessThanEq :updateRowPositions2x2.1:col3 :fin if value > best then
  399:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  400:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  401:  set :findBestPosition:best :updateRowPositions2x2.1:col3     best = value;
        label *label118                                              if value > best then
        label *label116                                              if value < LIMIT then
  402:  jump *label121 greaterThanEq :updateRowPositions2x2.1:col4 0 ...
  403:  jump *label123 lessThanEq :updateRowPositions2x2.1:col4 :fin if value > best then
  404:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  405:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  406:  set :findBestPosition:best :updateRowPositions2x2.1:col4     best = value;
        label *label123                                              if value > best then
        label *label121                                              if value < LIMIT then
  407:  unpackcolor :updateRowPositions2x2.2:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  408:  jump *label127 greaterThanEq :updateRowPositions2x2.2:col1 0 if value < LIMIT then
  409:  jump *label129 lessThanEq :updateRowPositions2x2.2:col1 :fin if value > best then
  410:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  411:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  412:  set :findBestPosition:best :updateRowPositions2x2.2:col1     best = value;
        label *label129                                              if value > best then
        label *label127                                              if value < LIMIT then
  413:  jump *label132 greaterThanEq :updateRowPositions2x2.2:col2 0 ...
  414:  jump *label134 lessThanEq :updateRowPositions2x2.2:col2 :fin if value > best then
  415:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  416:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  417:  set :findBestPosition:best :updateRowPositions2x2.2:col2     best = value;
        label *label134                                              if value > best then
        label *label132                                              if value < LIMIT then
  418:  jump *label137 greaterThanEq :updateRowPositions2x2.2:col3 0 ...
  419:  jump *label139 lessThanEq :updateRowPositions2x2.2:col3 :fin if value > best then
  420:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  421:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  422:  set :findBestPosition:best :updateRowPositions2x2.2:col3     best = value;
        label *label139                                              if value > best then
        label *label137                                              if value < LIMIT then
  423:  jump *label142 greaterThanEq :updateRowPositions2x2.2:col4 0 ...
  424:  jump *label144 lessThanEq :updateRowPositions2x2.2:col4 :fin if value > best then
  425:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  426:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  427:  set :findBestPosition:best :updateRowPositions2x2.2:col4     best = value;
        label *label144                                              if value > best then
        label *label142                                              if value < LIMIT then
  428:  unpackcolor :updateRowPositions2x2.3:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  429:  jump *label148 greaterThanEq :updateRowPositions2x2.3:col1 0 if value < LIMIT then
  430:  jump *label150 lessThanEq :updateRowPositions2x2.3:col1 :fin if value > best then
  431:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  432:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  433:  set :findBestPosition:best :updateRowPositions2x2.3:col1     best = value;
        label *label150                                              if value > best then
        label *label148                                              if value < LIMIT then
  434:  jump *label153 greaterThanEq :updateRowPositions2x2.3:col2 0 ...
  435:  jump *label155 lessThanEq :updateRowPositions2x2.3:col2 :fin if value > best then
  436:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  437:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  438:  set :findBestPosition:best :updateRowPositions2x2.3:col2     best = value;
        label *label155                                              if value > best then
        label *label153                                              if value < LIMIT then
  439:  jump *label158 greaterThanEq :updateRowPositions2x2.3:col3 0 ...
  440:  jump *label160 lessThanEq :updateRowPositions2x2.3:col3 :fin if value > best then
  441:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  442:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  443:  set :findBestPosition:best :updateRowPositions2x2.3:col3     best = value;
        label *label160                                              if value > best then
        label *label158                                              if value < LIMIT then
  444:  jump *label82 greaterThanEq :updateRowPositions2x2.3:col4 0. ...
  445:  jump *label82 lessThanEq :updateRowPositions2x2.3:col4 :find if value > best then
  446:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  447:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  448:  set :findBestPosition:best :updateRowPositions2x2.3:col4     best = value;
  449:  jump *label82 always 0 0                                     if size == 2 then
        label *label81                                               ...
  450:  jump *label167 notEqual :findBestPosition:size 3             elsif size == 3 then
  451:  op add *tmp221 :findBestPosition:y2 :findBestPosition:y3     var row1 = y1 + (y2 + y3);  // drill at y - 1
  452:  op add :findBestPosition:row1.1 :findBestPosition:y1 *tmp221 ...
  453:  op add :findBestPosition:row2.1 *tmp221 :findBestPosition:y4 var row2 = (y2 + y3) + y4;  // drill at y
  454:  op add *tmp225 :findBestPosition:y3 :findBestPosition:y4     var row3 = y3 + y4 + y5;    // drill at y + 1
  455:  op add :findBestPosition:row3.1 *tmp225 :computeRowValues*re ...
  456:  unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3 unpackcolor(out col1, out col2, out col3, , rowSum);
  457:  jump *label171 greaterThanEq :updateRowPositions3x3:col1 0.0 if value < LIMIT then
  458:  jump *label173 lessThanEq :updateRowPositions3x3:col1 0      if value > best then
  459:  set :findDrillLocationLocal:diffX -1                         bestX = dx;
  460:  set :findDrillLocationLocal:diffY -1                         bestY = dy;
  461:  set :findBestPosition:best :updateRowPositions3x3:col1       best = value;
        label *label173                                              if value > best then
        label *label171                                              if value < LIMIT then
  462:  jump *label176 greaterThanEq :updateRowPositions3x3:col2 0.0 ...
  463:  jump *label178 lessThanEq :updateRowPositions3x3:col2 :findB if value > best then
  464:  set :findDrillLocationLocal:diffX 0                          bestX = dx;
  465:  set :findDrillLocationLocal:diffY -1                         bestY = dy;
  466:  set :findBestPosition:best :updateRowPositions3x3:col2       best = value;
        label *label178                                              if value > best then
        label *label176                                              if value < LIMIT then
  467:  jump *label181 greaterThanEq :updateRowPositions3x3:col3 0.0 ...
  468:  jump *label183 lessThanEq :updateRowPositions3x3:col3 :findB if value > best then
  469:  set :findDrillLocationLocal:diffX 1                          bestX = dx;
  470:  set :findDrillLocationLocal:diffY -1                         bestY = dy;
  471:  set :findBestPosition:best :updateRowPositions3x3:col3       best = value;
        label *label183                                              if value > best then
        label *label181                                              if value < LIMIT then
  472:  unpackcolor :updateRowPositions3x3.1:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, , rowSum);
  473:  jump *label187 greaterThanEq :updateRowPositions3x3.1:col1 0 if value < LIMIT then
  474:  jump *label189 lessThanEq :updateRowPositions3x3.1:col1 :fin if value > best then
  475:  set :findDrillLocationLocal:diffX -1                         bestX = dx;
  476:  set :findDrillLocationLocal:diffY 0                          bestY = dy;
  477:  set :findBestPosition:best :updateRowPositions3x3.1:col1     best = value;
        label *label189                                              if value > best then
        label *label187                                              if value < LIMIT then
  478:  jump *label192 greaterThanEq :updateRowPositions3x3.1:col2 0 ...
  479:  jump *label194 lessThanEq :updateRowPositions3x3.1:col2 :fin if value > best then
  480:  set :findDrillLocationLocal:diffX 0                          bestX = dx;
  481:  set :findDrillLocationLocal:diffY 0                          bestY = dy;
  482:  set :findBestPosition:best :updateRowPositions3x3.1:col2     best = value;
        label *label194                                              if value > best then
        label *label192                                              if value < LIMIT then
  483:  jump *label197 greaterThanEq :updateRowPositions3x3.1:col3 0 ...
  484:  jump *label199 lessThanEq :updateRowPositions3x3.1:col3 :fin if value > best then
  485:  set :findDrillLocationLocal:diffX 1                          bestX = dx;
  486:  set :findDrillLocationLocal:diffY 0                          bestY = dy;
  487:  set :findBestPosition:best :updateRowPositions3x3.1:col3     best = value;
        label *label199                                              if value > best then
        label *label197                                              if value < LIMIT then
  488:  unpackcolor :updateRowPositions3x3.2:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, , rowSum);
  489:  jump *label203 greaterThanEq :updateRowPositions3x3.2:col1 0 if value < LIMIT then
  490:  jump *label205 lessThanEq :updateRowPositions3x3.2:col1 :fin if value > best then
  491:  set :findDrillLocationLocal:diffX -1                         bestX = dx;
  492:  set :findDrillLocationLocal:diffY 1                          bestY = dy;
  493:  set :findBestPosition:best :updateRowPositions3x3.2:col1     best = value;
        label *label205                                              if value > best then
        label *label203                                              if value < LIMIT then
  494:  jump *label208 greaterThanEq :updateRowPositions3x3.2:col2 0 ...
  495:  jump *label210 lessThanEq :updateRowPositions3x3.2:col2 :fin if value > best then
  496:  set :findDrillLocationLocal:diffX 0                          bestX = dx;
  497:  set :findDrillLocationLocal:diffY 1                          bestY = dy;
  498:  set :findBestPosition:best :updateRowPositions3x3.2:col2     best = value;
        label *label210                                              if value > best then
        label *label208                                              if value < LIMIT then
  499:  jump *label168 greaterThanEq :updateRowPositions3x3.2:col3 0 ...
  500:  jump *label168 lessThanEq :updateRowPositions3x3.2:col3 :fin if value > best then
  501:  set :findDrillLocationLocal:diffX 1                          bestX = dx;
  502:  set :findDrillLocationLocal:diffY 1                          bestY = dy;
  503:  set :findBestPosition:best :updateRowPositions3x3.2:col3     best = value;
  504:  jump *label168 always 0 0                                    elsif size == 3 then
        label *label167                                              ...
  505:  op sub *tmp266 :findBestPosition:y 3                         var y0 = computeRowValues(x, y - 3, ore, size);
  506:  set :computeRowValues:x :findBestPosition:x                  ...
  507:  set :computeRowValues:y *tmp266                              ...
  508:  set :computeRowValues:ore :findBestPosition:ore              ...
  509:  set :computeRowValues:size :findBestPosition:size            ...
  510:  setaddr :computeRowValues*retaddr *label217                  ...
  511:  call *label6 *invalid :computeRowValues*retval               ...
        label *label217                                              ...
  512:  set :findBestPosition:y0 :computeRowValues*retval            ...
  513:  op add *tmp268 :findBestPosition:y 3                         var y6 = computeRowValues(x, y + 3, ore, size);
  514:  set :computeRowValues:x :findBestPosition:x                  ...
  515:  set :computeRowValues:y *tmp268                              ...
  516:  set :computeRowValues:ore :findBestPosition:ore              ...
  517:  set :computeRowValues:size :findBestPosition:size            ...
  518:  setaddr :computeRowValues*retaddr *label218                  ...
  519:  call *label6 *invalid :computeRowValues*retval               ...
        label *label218                                              ...
  520:  op add *tmp270 :findBestPosition:y1 :findBestPosition:y2     var row1 = y0 + (y1 + y2 + y3);     // drill at y - 1.5
  521:  op add *tmp271 *tmp270 :findBestPosition:y3                  ...
  522:  op add :findBestPosition:row1.2 :findBestPosition:y0 *tmp271 ...
  523:  op add :findBestPosition:row2.2 *tmp271 :findBestPosition:y4 var row2 = (y1 + y2 + y3) + y4;     // drill at y - 0.5
  524:  op add *tmp276 :findBestPosition:y3 :findBestPosition:y4     var row3 = y2 + (y3 + y4 + y5);     // drill at y + 0.5
  525:  op add *tmp277 *tmp276 :findBestPosition:y5                  ...
  526:  op add :findBestPosition:row3.2 :findBestPosition:y2 *tmp277 ...
  527:  op add :findBestPosition:row4.1 *tmp277 :computeRowValues*re var row4 = (y3 + y4 + y5) + y6;     // drill at y + 1.5
  528:  unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4 unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  529:  jump *label221 greaterThanEq :updateRowPositions4x4:col1 0.0 if value < LIMIT then
  530:  jump *label223 lessThanEq :updateRowPositions4x4:col1 :findB if value > best then
  531:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  532:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  533:  set :findBestPosition:best :updateRowPositions4x4:col1       best = value;
        label *label223                                              if value > best then
        label *label221                                              if value < LIMIT then
  534:  jump *label226 greaterThanEq :updateRowPositions4x4:col2 0.0 ...
  535:  jump *label228 lessThanEq :updateRowPositions4x4:col2 :findB if value > best then
  536:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  537:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  538:  set :findBestPosition:best :updateRowPositions4x4:col2       best = value;
        label *label228                                              if value > best then
        label *label226                                              if value < LIMIT then
  539:  jump *label231 greaterThanEq :updateRowPositions4x4:col3 0.0 ...
  540:  jump *label233 lessThanEq :updateRowPositions4x4:col3 :findB if value > best then
  541:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  542:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  543:  set :findBestPosition:best :updateRowPositions4x4:col3       best = value;
        label *label233                                              if value > best then
        label *label231                                              if value < LIMIT then
  544:  jump *label236 greaterThanEq :updateRowPositions4x4:col4 0.0 ...
  545:  jump *label238 lessThanEq :updateRowPositions4x4:col4 :findB if value > best then
  546:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  547:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  548:  set :findBestPosition:best :updateRowPositions4x4:col4       best = value;
        label *label238                                              if value > best then
        label *label236                                              if value < LIMIT then
  549:  unpackcolor :updateRowPositions4x4.1:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  550:  jump *label242 greaterThanEq :updateRowPositions4x4.1:col1 0 if value < LIMIT then
  551:  jump *label244 lessThanEq :updateRowPositions4x4.1:col1 :fin if value > best then
  552:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  553:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  554:  set :findBestPosition:best :updateRowPositions4x4.1:col1     best = value;
        label *label244                                              if value > best then
        label *label242                                              if value < LIMIT then
  555:  jump *label247 greaterThanEq :updateRowPositions4x4.1:col2 0 ...
  556:  jump *label249 lessThanEq :updateRowPositions4x4.1:col2 :fin if value > best then
  557:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  558:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  559:  set :findBestPosition:best :updateRowPositions4x4.1:col2     best = value;
        label *label249                                              if value > best then
        label *label247                                              if value < LIMIT then
  560:  jump *label252 greaterThanEq :updateRowPositions4x4.1:col3 0 ...
  561:  jump *label254 lessThanEq :updateRowPositions4x4.1:col3 :fin if value > best then
  562:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  563:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  564:  set :findBestPosition:best :updateRowPositions4x4.1:col3     best = value;
        label *label254                                              if value > best then
        label *label252                                              if value < LIMIT then
  565:  jump *label257 greaterThanEq :updateRowPositions4x4.1:col4 0 ...
  566:  jump *label259 lessThanEq :updateRowPositions4x4.1:col4 :fin if value > best then
  567:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  568:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  569:  set :findBestPosition:best :updateRowPositions4x4.1:col4     best = value;
        label *label259                                              if value > best then
        label *label257                                              if value < LIMIT then
  570:  unpackcolor :updateRowPositions4x4.2:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  571:  jump *label263 greaterThanEq :updateRowPositions4x4.2:col1 0 if value < LIMIT then
  572:  jump *label265 lessThanEq :updateRowPositions4x4.2:col1 :fin if value > best then
  573:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  574:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  575:  set :findBestPosition:best :updateRowPositions4x4.2:col1     best = value;
        label *label265                                              if value > best then
        label *label263                                              if value < LIMIT then
  576:  jump *label268 greaterThanEq :updateRowPositions4x4.2:col2 0 ...
  577:  jump *label270 lessThanEq :updateRowPositions4x4.2:col2 :fin if value > best then
  578:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  579:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  580:  set :findBestPosition:best :updateRowPositions4x4.2:col2     best = value;
        label *label270                                              if value > best then
        label *label268                                              if value < LIMIT then
  581:  jump *label273 greaterThanEq :updateRowPositions4x4.2:col3 0 ...
  582:  jump *label275 lessThanEq :updateRowPositions4x4.2:col3 :fin if value > best then
  583:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  584:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  585:  set :findBestPosition:best :updateRowPositions4x4.2:col3     best = value;
        label *label275                                              if value > best then
        label *label273                                              if value < LIMIT then
  586:  jump *label278 greaterThanEq :updateRowPositions4x4.2:col4 0 ...
  587:  jump *label280 lessThanEq :updateRowPositions4x4.2:col4 :fin if value > best then
  588:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  589:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  590:  set :findBestPosition:best :updateRowPositions4x4.2:col4     best = value;
        label *label280                                              if value > best then
        label *label278                                              if value < LIMIT then
  591:  unpackcolor :updateRowPositions4x4.3:col1 :updateRowPosition unpackcolor(out col1, out col2, out col3, out col4, rowSum);
  592:  jump *label284 greaterThanEq :updateRowPositions4x4.3:col1 0 if value < LIMIT then
  593:  jump *label286 lessThanEq :updateRowPositions4x4.3:col1 :fin if value > best then
  594:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  595:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  596:  set :findBestPosition:best :updateRowPositions4x4.3:col1     best = value;
        label *label286                                              if value > best then
        label *label284                                              if value < LIMIT then
  597:  jump *label289 greaterThanEq :updateRowPositions4x4.3:col2 0 ...
  598:  jump *label291 lessThanEq :updateRowPositions4x4.3:col2 :fin if value > best then
  599:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  600:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  601:  set :findBestPosition:best :updateRowPositions4x4.3:col2     best = value;
        label *label291                                              if value > best then
        label *label289                                              if value < LIMIT then
  602:  jump *label294 greaterThanEq :updateRowPositions4x4.3:col3 0 ...
  603:  jump *label296 lessThanEq :updateRowPositions4x4.3:col3 :fin if value > best then
  604:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  605:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  606:  set :findBestPosition:best :updateRowPositions4x4.3:col3     best = value;
        label *label296                                              if value > best then
        label *label294                                              if value < LIMIT then
  607:  jump *label299 greaterThanEq :updateRowPositions4x4.3:col4 0 ...
  608:  jump *label301 lessThanEq :updateRowPositions4x4.3:col4 :fin if value > best then
  609:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  610:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  611:  set :findBestPosition:best :updateRowPositions4x4.3:col4     best = value;
        label *label301                                              if value > best then
        label *label299                                              if value < LIMIT then
        label *label168                                              elsif size == 3 then
        label *label82                                               if size == 2 then
  612:  op mul *tmp138 :findBestPosition:best 255                    return best * 255;
  613:  jump *label303 lessThanEq *tmp138 :findDrillLocationLocal:ca if score > capacity then
  614:  op add :findDrillLocationLocal:dx :findDrillLocationLocal:or dx = oreX + diffX;
  615:  op add :findDrillLocationLocal:dy :findDrillLocationLocal:or dy = oreY + diffY;
  616:  set :findDrillLocationLocal:capacity *tmp138                 capacity = score;
  617:  jump *label305 greaterThanEq :findDrillLocationLocal:limit 1 if limit < 1000 then mapSpots = score; end;
  618:  set .mapSpots *tmp138                                        ...
        label *label305                                              ...
  619:  jump *label307 lessThan :findDrillLocationLocal:capacity :fi if capacity >= limit then
  620:  op add .count .count 1                                       bank1[++count] = item.@id;
  621:  sensor *tmp357 :findDrillLocationLocal:item @id              ...
  622:  write *tmp357 bank1 .count                                   ...
  623:  op add .count .count 1                                       bank1[++count] = value;
  624:  write *tmp138 bank1 .count                                   ...
  625:  op add .count .count 1                                       bank1[++count] = x;
  626:  write :findDrillLocationLocal:dx bank1 .count                ...
  627:  op add .count .count 1                                       bank1[++count] = y;
  628:  write :findDrillLocationLocal:dy bank1 .count                ...
  629:  op add .locations .locations 1                               saveLocation(item, score, dx, dy);
  630:  ucontrol unbind 0 0 0 0 0                                    unbind();
  631:  set :findDrillLocationLocal*retval true                      return true;
  632:  return :findDrillLocationLocal*retaddr                       ...
        label *label307                                              if capacity >= limit then
        label *label303                                              if score > capacity then
  633:  jump *label310 lessThanEq *tmp138 :findDrillLocationLocal:be if score > best then
  634:  op add :findDrillLocationLocal:bestX :findDrillLocationLocal bestX = oreX + diffX;
  635:  op add :findDrillLocationLocal:bestY :findDrillLocationLocal bestY = oreY + diffY;
  636:  set :findDrillLocationLocal:best *tmp138                     best = score;
        label *label310                                              if score > best then
  637:  jump *label74 lessThanEq *tmp138 :findDrillLocationLocal:las if score <= last then break; end;
  638:  set :findDrillLocationLocal:last *tmp138                     last = score;
  639:  op mul :round:x :findDrillLocationLocal:diffX 1.1            oreX += round(diffX * 1.1);    // Rounds halves to higher absolute values
  640:  op add *tmp373 :round:x 0.5                                  *math: floor(x + 0.5);
  641:  op floor *tmp372 *tmp373 0                                   oreX += round(diffX * 1.1);    // Rounds halves to higher absolute values
  642:  op add :findDrillLocationLocal:oreX :findDrillLocationLocal: ...
  643:  op mul :round.1:x :findDrillLocationLocal:diffY 1.1          oreY += round(diffY * 1.1);
  644:  op add *tmp377 :round.1:x 0.5                                *math: floor(x + 0.5);
  645:  op floor *tmp376 *tmp377 0                                   oreY += round(diffY * 1.1);
  646:  op add :findDrillLocationLocal:oreY :findDrillLocationLocal: ...
  647:  op sub *tmp379 :findDrillLocationLocal:oreX .coreX           if min(abs(oreX - coreX), abs(oreY - coreY)) < 7 then break; end;
  648:  op abs *tmp380 *tmp379 0                                     ...
  649:  op sub *tmp381 :findDrillLocationLocal:oreY .coreY           ...
  650:  op abs *tmp382 *tmp381 0                                     ...
  651:  op min *tmp383 *tmp380 *tmp382                               ...
  652:  jump *label72 greaterThanEq *tmp383 7                        ...
        label *label74                                               while true do
  653:  jump *label32 lessThan :findDrillLocationLocal:best 0        if best >= 0 then
  654:  op add .count .count 1                                       bank1[++count] = item.@id;
  655:  sensor *tmp390 :findDrillLocationLocal:item @id              ...
  656:  write *tmp390 bank1 .count                                   ...
  657:  op add .count .count 1                                       bank1[++count] = value;
  658:  write :findDrillLocationLocal:best bank1 .count              ...
  659:  op add .count .count 1                                       bank1[++count] = x;
  660:  write :findDrillLocationLocal:bestX bank1 .count             ...
  661:  op add .count .count 1                                       bank1[++count] = y;
  662:  write :findDrillLocationLocal:bestY bank1 .count             ...
  663:  op add .locations .locations 1                               saveLocation(item, best, bestX, bestY);
  664:  jump *label32 always 0 0                                     while true do
        label *label8                                                noinline def createTerrainMask(x, y)
  665:  ucontrol within :createTerrainMask:x :createTerrainMask:y 6  while !within(x, y, radius) do
  666:  jump *label326 notEqual *tmp400 false                        ...
        label *label417                                              ...
  667:  ucontrol approach :createTerrainMask:x :createTerrainMask:y  approach(x, y, radius - 0.5);
  668:  ucontrol within :createTerrainMask:x :createTerrainMask:y 6  while !within(x, y, radius) do
  669:  jump *label417 equal *tmp400 false                           ...
        label *label326                                              ...
  670:  set :createTerrainMask:result 0                              var result = 0;
  671:  set :createTerrainMask:r 3                                   for var r in -3 .. 3 descending do
        label *label411                                              ...
  672:  set :createTerrainMask:c 3                                   for var c in -3 .. 3 descending do
  673:  op add *tmp405 :createTerrainMask:y :createTerrainMask:r     ...
        label *label412                                              ...
  674:  op shl *tmp403 :createTerrainMask:result 1                   result = (result << 1) | isBlocked(x + c, y + r);
  675:  op add :isBlocked:x :createTerrainMask:x :createTerrainMask: ...
  676:  set :isBlocked:y *tmp405                                     ...
  677:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  678:  sensor solid type @solid                                     ...
  679:  select :isBlocked:result notEqual solid false 1 0            ...
  680:  op or :createTerrainMask:result *tmp403 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  681:  op sub :createTerrainMask:c :createTerrainMask:c 1           for var c in -3 .. 3 descending do
  682:  jump *label412 greaterThanEq :createTerrainMask:c -3         ...
  683:  op sub :createTerrainMask:r :createTerrainMask:r 1           for var r in -3 .. 3 descending do
  684:  jump *label411 greaterThanEq :createTerrainMask:r -3         ...
  685:  set :createTerrainMask*retval :createTerrainMask:result      return result;
  686:  return :createTerrainMask*retaddr                            noinline def createTerrainMask(x, y)
        label *label9                                                noinline def findPossiblePlacement(terrainMask, placementMask, width, height, out x, out y)
  687:  set :findPossiblePlacement:y -3                              for y in -3 .. 3 do
  688:  jump *label337 greaterThan :findPossiblePlacement:y 3        ...
        label *label413                                              ...
  689:  op add *tmp408 :findPossiblePlacement:y 3                    var mask = placementMask << 7 * (y + 3);
  690:  op mul *tmp409 7 *tmp408                                     ...
  691:  op shl :findPossiblePlacement:mask :findPossiblePlacement:pl ...
  692:  set :findPossiblePlacement:x -3                              for x in -3 .. 3 do
  693:  jump *label340 greaterThan :findPossiblePlacement:x 3        ...
        label *label414                                              ...
  694:  op and *tmp411 :findPossiblePlacement:terrainMask :findPossi if (terrainMask & mask) == 0 then return 3 * 8 + y * 7 + x; end;
  695:  jump *label341 notEqual *tmp411 0                            ...
  696:  op mul *tmp414 :findPossiblePlacement:y 7                    ...
  697:  op add *tmp415 24 *tmp414                                    ...
  698:  op add :findPossiblePlacement*retval *tmp415 :findPossiblePl ...
  699:  return :findPossiblePlacement*retaddr                        ...
        label *label341                                              ...
  700:  op sub *tmp417 3 :findPossiblePlacement:width                if x > 3 - width then break; end;
  701:  jump *label340 greaterThan :findPossiblePlacement:x *tmp417  ...
  702:  op shl :findPossiblePlacement:mask :findPossiblePlacement:ma mask <<= 1;
  703:  op add :findPossiblePlacement:x :findPossiblePlacement:x 1   for x in -3 .. 3 do
  704:  jump *label414 lessThanEq :findPossiblePlacement:x 3         ...
        label *label340                                              ...
  705:  op sub *tmp420 3 :findPossiblePlacement:height               if y > 3 - height then break; end;
  706:  jump *label337 greaterThan :findPossiblePlacement:y *tmp420  ...
  707:  op add :findPossiblePlacement:y :findPossiblePlacement:y 1   for y in -3 .. 3 do
  708:  jump *label413 lessThanEq :findPossiblePlacement:y 3         ...
        label *label337                                              ...
  709:  set :findPossiblePlacement*retval -1                         return -1;
  710:  return :findPossiblePlacement*retaddr                        noinline def findPossiblePlacement(terrainMask, placementMask, width, height, out x, out y)
        label *label10                                               def tryPlaceGenerator(centerX, centerY, terrainMask, generatorHorizontal, generatorVertical)
  711:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te var shift = findPossiblePlacement(terrainMask, generatorVertical, 2, 4, out c, out r);
  712:  set :findPossiblePlacement:placementMask :tryPlaceGenerator: ...
  713:  set :findPossiblePlacement:width 2                           ...
  714:  set :findPossiblePlacement:height 4                          ...
  715:  setaddr :findPossiblePlacement*retaddr *label348             ...
  716:  call *label9 *invalid :findPossiblePlacement*retval          ...
        label *label348                                              ...
  717:  jump *label349 lessThan :findPossiblePlacement*retval 0      if shift >= 0 then
  718:  jump *label351 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  719:  set :tryPlaceGenerator*retval false                          ...
  720:  return :tryPlaceGenerator*retaddr                            ...
        label *label351                                              ...
  721:  op add *tmp428 :tryPlaceGenerator:centerX 0.5                water2X = centerX + 0.5 + c;
  722:  op add .water2X *tmp428 :findPossiblePlacement:x             ...
  723:  op add *tmp430 :tryPlaceGenerator:centerY 0.5                water2Y = centerY + 0.5 + r;
  724:  op add .water2Y *tmp430 :findPossiblePlacement:y             ...
  725:  op add .generatorX *tmp428 :findPossiblePlacement:x          generatorX = centerX + 0.5 + c;
  726:  op add *tmp434 :tryPlaceGenerator:centerY 2.5                generatorY = centerY + 2.5 + r;
  727:  op add .generatorY *tmp434 :findPossiblePlacement:y          ...
  728:  op shl *tmp436 :tryPlaceGenerator:generatorVertical :findPos terrainMask |= (generatorVertical << shift);
  729:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
  730:  jump *label350 always 0 0                                    if shift >= 0 then
        label *label349                                              ...
  731:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, generatorHorizontal, 4, 2, out c, out r);
  732:  set :findPossiblePlacement:placementMask :tryPlaceGenerator: ...
  733:  set :findPossiblePlacement:width 4                           ...
  734:  set :findPossiblePlacement:height 2                          ...
  735:  setaddr :findPossiblePlacement*retaddr *label353             ...
  736:  call *label9 *invalid :findPossiblePlacement*retval          ...
        label *label353                                              ...
  737:  jump *label354 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  738:  set :tryPlaceGenerator*retval false                          ...
  739:  return :tryPlaceGenerator*retaddr                            ...
        label *label354                                              ...
  740:  op add *tmp440 :tryPlaceGenerator:centerX 0.5                water2X = centerX + 0.5 + c;
  741:  op add .water2X *tmp440 :findPossiblePlacement:x             ...
  742:  op add *tmp442 :tryPlaceGenerator:centerY 0.5                water2Y = centerY + 0.5 + r;
  743:  op add .water2Y *tmp442 :findPossiblePlacement:y             ...
  744:  op add *tmp444 :tryPlaceGenerator:centerX 2.5                generatorX = centerX + 2.5 + c;
  745:  op add .generatorX *tmp444 :findPossiblePlacement:x          ...
  746:  op add .generatorY *tmp442 :findPossiblePlacement:y          generatorY = centerY + 0.5 + r;
  747:  op shl *tmp448 :tryPlaceGenerator:generatorHorizontal :findP terrainMask |= (generatorHorizontal << shift);
  748:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
        label *label350                                              if shift >= 0 then
  749:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, 1, 1, 1, out c, out r);
  750:  set :findPossiblePlacement:placementMask 1                   ...
  751:  set :findPossiblePlacement:width 1                           ...
  752:  set :findPossiblePlacement:height 1                          ...
  753:  setaddr :findPossiblePlacement*retaddr *label356             ...
  754:  call *label9 *invalid :findPossiblePlacement*retval          ...
        label *label356                                              ...
  755:  jump *label357 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  756:  set :tryPlaceGenerator*retval false                          ...
  757:  return :tryPlaceGenerator*retaddr                            ...
        label *label357                                              ...
  758:  op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacem nodeX = centerX + c;
  759:  op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacem nodeY = centerY + r;
  760:  op shl *tmp454 1 :findPossiblePlacement*retval               terrainMask |= (1 << shift);
  761:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
  762:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, 1, 1, 1, out c, out r);
  763:  set :findPossiblePlacement:placementMask 1                   ...
  764:  set :findPossiblePlacement:width 1                           ...
  765:  set :findPossiblePlacement:height 1                          ...
  766:  setaddr :findPossiblePlacement*retaddr *label359             ...
  767:  call *label9 *invalid :findPossiblePlacement*retval          ...
        label *label359                                              ...
  768:  jump *label360 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  769:  set :tryPlaceGenerator*retval false                          ...
  770:  return :tryPlaceGenerator*retaddr                            ...
        label *label360                                              ...
  771:  op add .panelX :tryPlaceGenerator:centerX :findPossiblePlace panelX = centerX + c;
  772:  op add .panelY :tryPlaceGenerator:centerY :findPossiblePlace panelY = centerY + r;
  773:  op shl *tmp460 1 :findPossiblePlacement*retval               terrainMask |= (1 << shift);
  774:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
  775:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, 1, 1, 1, out c, out r);
  776:  set :findPossiblePlacement:placementMask 1                   ...
  777:  set :findPossiblePlacement:width 1                           ...
  778:  set :findPossiblePlacement:height 1                          ...
  779:  setaddr :findPossiblePlacement*retaddr *label362             ...
  780:  call *label9 *invalid :findPossiblePlacement*retval          ...
        label *label362                                              ...
  781:  jump *label363 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  782:  set :tryPlaceGenerator*retval false                          ...
  783:  return :tryPlaceGenerator*retaddr                            ...
        label *label363                                              ...
  784:  op add .batteryX :tryPlaceGenerator:centerX :findPossiblePla batteryX = centerX + c;
  785:  op add .batteryY :tryPlaceGenerator:centerY :findPossiblePla batteryY = centerY + r;
  786:  set :tryPlaceGenerator*retval true                           return true;
  787:  return :tryPlaceGenerator*retaddr                            ...
        label *label11                                               noinline def layoutThoriumDrillAtLocation()
  788:  set .panelY -1                                               water1X = water1Y = water2X = water2Y = generatorX = generatorY = panelX = panelY = -1;
  789:  set .panelX -1                                               ...
  790:  set .generatorY -1                                           ...
  791:  set .generatorX -1                                           ...
  792:  set .water2Y -1                                              ...
  793:  set .water2X -1                                              ...
  794:  set .water1Y -1                                              ...
  795:  set .water1X -1                                              ...
  796:  set :createTerrainMask:x .drillX                             var plainTerrainMask = createTerrainMask(drillX, drillY);
  797:  set :createTerrainMask:y .drillY                             ...
  798:  setaddr :createTerrainMask*retaddr *label366                 ...
  799:  call *label8 *invalid :createTerrainMask*retval              ...
        label *label366                                              ...
  800:  op or :layoutThoriumDrillAtLocation:terrainMask :createTerra var terrainMask = plainTerrainMask | createFixedMatrix(
  801:  op or :layoutThoriumDrillAtLocation:cornersMask :layoutThori var cornersMask = terrainMask | createFixedMatrix(
  802:  set :layoutThoriumDrillAtLocation:mask2x2 387                var mask2x2 = createFixedMatrix(0b11, 0b11);
  803:  set :findPossiblePlacement:terrainMask :layoutThoriumDrillAt var shift = findPossiblePlacement(cornersMask, mask2x2, 2, 2, out c, out r);
  804:  set :findPossiblePlacement:placementMask 387                 ...
  805:  set :findPossiblePlacement:width 2                           ...
  806:  set :findPossiblePlacement:height 2                          ...
  807:  setaddr :findPossiblePlacement*retaddr *label370             ...
  808:  call *label9 *invalid :findPossiblePlacement*retval          ...
        label *label370                                              ...
  809:  jump *label371 lessThan :findPossiblePlacement*retval 0      if shift >= 0 then
  810:  op add *tmp505 .drillX 0.5                                   water1X = drillX + 0.5 + c;
  811:  op add .water1X *tmp505 :findPossiblePlacement:x             ...
  812:  op add *tmp507 .drillY 0.5                                   water1Y = drillY + 0.5 + r;
  813:  op add .water1Y *tmp507 :findPossiblePlacement:y             ...
  814:  op shl *tmp509 :layoutThoriumDrillAtLocation:mask2x2 :findPo terrainMask |= (mask2x2 << shift);
  815:  op or :layoutThoriumDrillAtLocation:terrainMask :layoutThori ...
  816:  op or :layoutThoriumDrillAtLocation:cornersMask :layoutThori cornersMask |= (mask2x2 << shift);
        label *label371                                              if shift >= 0 then
  817:  set :findPossiblePlacement:terrainMask :layoutThoriumDrillAt shift = findPossiblePlacement(cornersMask, mask2x2, 2, 2, out c, out r);
  818:  set :findPossiblePlacement:placementMask :layoutThoriumDrill ...
  819:  set :findPossiblePlacement:width 2                           ...
  820:  set :findPossiblePlacement:height 2                          ...
  821:  setaddr :findPossiblePlacement*retaddr *label373             ...
  822:  call *label9 *invalid :findPossiblePlacement*retval          ...
        label *label373                                              ...
  823:  jump *label374 lessThan :findPossiblePlacement*retval 0      if shift >= 0 then
  824:  op add *tmp514 .drillX 0.5                                   containerX = drillX + 0.5 + c;
  825:  op add .containerX *tmp514 :findPossiblePlacement:x          ...
  826:  op add *tmp516 .drillY 0.5                                   containerY = drillY + 0.5 + r;
  827:  op add .containerY *tmp516 :findPossiblePlacement:y          ...
  828:  op shl *tmp518 :layoutThoriumDrillAtLocation:mask2x2 :findPo terrainMask |= (mask2x2 << shift);
  829:  op or :layoutThoriumDrillAtLocation:terrainMask :layoutThori ...
        label *label374                                              if shift >= 0 then
  830:  set :layoutThoriumDrillAtLocation:generatorHorizontal 1935   var generatorHorizontal = createFixedMatrix(0b1111, 0b1111);
  831:  set :layoutThoriumDrillAtLocation:generatorVertical 6340995  var generatorVertical = createFixedMatrix(0b11, 0b11, 0b11, 0b11);
  832:  set :tryPlaceGenerator:centerX .drillX                       if tryPlaceGenerator(drillX, drillY, terrainMask, generatorHorizontal, generatorVertical) then
  833:  set :tryPlaceGenerator:centerY .drillY                       ...
  834:  set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLoca ...
  835:  set :tryPlaceGenerator:generatorHorizontal 1935              ...
  836:  set :tryPlaceGenerator:generatorVertical 6340995             ...
  837:  setaddr :tryPlaceGenerator*retaddr *label378                 ...
  838:  call *label10 *invalid :tryPlaceGenerator*retval             ...
        label *label378                                              ...
  839:  jump *label379 equal :tryPlaceGenerator*retval false         ...
  840:  set :layoutThoriumDrillAtLocation*retval true                return true;
  841:  return :layoutThoriumDrillAtLocation*retaddr                 ...
        label *label379                                              if tryPlaceGenerator(drillX, drillY, terrainMask, generatorHorizontal, generatorVertical) then
  842:  set :layoutThoriumDrillAtLocation:sx 3                       for var sx in 3, 3, -3, -3; var sy in 3, -3, 3, -3 do
  843:  set :layoutThoriumDrillAtLocation:sy 3                       ...
  844:  setaddr *tmp533 *label384                                    ...
  845:  jump *label381 always 0 0                                    ...
        multilabel *label384                                         ...
  846:  set :layoutThoriumDrillAtLocation:sx 3                       ...
  847:  set :layoutThoriumDrillAtLocation:sy -3                      ...
  848:  setaddr *tmp533 *label385                                    ...
  849:  jump *label381 always 0 0                                    ...
        multilabel *label385                                         ...
  850:  set :layoutThoriumDrillAtLocation:sx -3                      ...
  851:  set :layoutThoriumDrillAtLocation:sy 3                       ...
  852:  setaddr *tmp533 *label386                                    ...
  853:  jump *label381 always 0 0                                    ...
        multilabel *label386                                         ...
  854:  set :layoutThoriumDrillAtLocation:sx -3                      ...
  855:  set :layoutThoriumDrillAtLocation:sy -3                      ...
  856:  setaddr *tmp533 *label387                                    ...
        label *label381                                              ...
  857:  op sub :layoutThoriumDrillAtLocation:newX .drillX :layoutTho var newX = drillX - sx;
  858:  op sub :layoutThoriumDrillAtLocation:newY .drillY :layoutTho var newY = drillY - sy;
  859:  set :createTerrainMask:x :layoutThoriumDrillAtLocation:newX  var newTerrainMask = createTerrainMask(newX, newY);
  860:  set :createTerrainMask:y :layoutThoriumDrillAtLocation:newY  ...
  861:  setaddr :createTerrainMask*retaddr *label388                 ...
  862:  call *label8 *invalid :createTerrainMask*retval              ...
        label *label388                                              ...
  863:  set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMas var shiftedMask = shiftMask(terrainMask, sx, sy);
  864:  op abs *tmp538 :layoutThoriumDrillAtLocation:sx 0            if abs(shiftX) > 6 or abs(shiftY) > 6 then return 0; end;
  865:  op greaterThan *tmp539 *tmp538 6                             ...
  866:  op abs *tmp540 :layoutThoriumDrillAtLocation:sy 0            ...
  867:  op greaterThan *tmp541 *tmp540 6                             ...
  868:  op or *tmp542 *tmp539 *tmp541                                ...
  869:  jump *label390 equal *tmp542 false                           ...
  870:  set *tmp537 0                                                ...
  871:  jump *label389 always 0 0                                    ...
        label *label390                                              ...
  872:  op mul *tmp544 7 :layoutThoriumDrillAtLocation:sy            var shift = shiftX + 7 * shiftY;
  873:  op add :shiftMask:shift :layoutThoriumDrillAtLocation:sx *tm ...
  874:  jump *label392 lessThanEq :shiftMask:shift 0                 if shift > 0 then
  875:  op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift var clearMask = ((1 << 49) - 1) >> shift;
  876:  op and *tmp549 :layoutThoriumDrillAtLocation:terrainMask :sh mask = (mask & clearMask) << shift;
  877:  op shl :shiftMask:mask *tmp549 :shiftMask:shift              ...
  878:  jump *label393 always 0 0                                    if shift > 0 then
        label *label392                                              ...
  879:  op sub *tmp551 0 :shiftMask:shift                            mask >>= -shift;
  880:  op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrain ...
        label *label393                                              if shift > 0 then
  881:  jump *label394 equal :layoutThoriumDrillAtLocation:sx 0      if shiftX != 0 then
  882:  op sub *tmp555 7 *tmp538                                     var keep = 0b1111111 >> (7 - abs(shiftX));          // The bits we need to keep
  883:  op shr :shiftMask:keep 0b1111111 *tmp555                     ...
  884:  jump *label396 lessThanEq :layoutThoriumDrillAtLocation:sx 0 if shiftX > 0 then keep <<= 7 - abs(shiftX); end;   // Shift to the proper side
  885:  op shl :shiftMask:keep :shiftMask:keep *tmp555               ...
        label *label396                                              ...
  886:  op shl *tmp561 :shiftMask:keep 7                             keep |= keep << 7;
  887:  op or :shiftMask:keep :shiftMask:keep *tmp561                ...
  888:  op shl *tmp562 :shiftMask:keep 14                            keep |= keep << 14;
  889:  op or :shiftMask:keep :shiftMask:keep *tmp562                ...
  890:  op shl *tmp563 :shiftMask:keep 21                            keep |= keep << 21;
  891:  op or :shiftMask:keep :shiftMask:keep *tmp563                ...
  892:  op and :shiftMask:mask :shiftMask:mask :shiftMask:keep       mask &= keep;
        label *label394                                              if shiftX != 0 then
  893:  set *tmp537 :shiftMask:mask                                  return mask;
        label *label389                                              var shiftedMask = shiftMask(terrainMask, sx, sy);
  894:  op or :layoutThoriumDrillAtLocation:combinedMask :createTerr var combinedMask = newTerrainMask | shiftedMask;
  895:  op sub *tmp565 .drillX :layoutThoriumDrillAtLocation:sx      if tryPlaceGenerator(drillX - sx, drillY - sy, combinedMask, generatorHorizontal, generatorVertical) then return true; end;
  896:  op sub *tmp566 .drillY :layoutThoriumDrillAtLocation:sy      ...
  897:  set :tryPlaceGenerator:centerX *tmp565                       ...
  898:  set :tryPlaceGenerator:centerY *tmp566                       ...
  899:  set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLoca ...
  900:  set :tryPlaceGenerator:generatorHorizontal :layoutThoriumDri ...
  901:  set :tryPlaceGenerator:generatorVertical :layoutThoriumDrill ...
  902:  setaddr :tryPlaceGenerator*retaddr *label398                 ...
  903:  call *label10 *invalid :tryPlaceGenerator*retval             ...
        label *label398                                              ...
  904:  jump *label399 equal :tryPlaceGenerator*retval false         ...
  905:  set :layoutThoriumDrillAtLocation*retval true                ...
  906:  return :layoutThoriumDrillAtLocation*retaddr                 ...
        label *label399                                              ...
  907:  multijump *tmp533 0 0                                        for var sx in 3, 3, -3, -3; var sy in 3, -3, 3, -3 do
        multilabel *label387                                         ...
  908:  set :layoutThoriumDrillAtLocation*retval true                return true;
  909:  return :layoutThoriumDrillAtLocation*retaddr                 noinline def layoutThoriumDrillAtLocation()
        label *label0                                                remote def findDrillLocation(x, y, unit, item, ore, size, limit, out dx, out dy, out capacity)
  910:  set .searchFinished false                                    searchFinished = false;
  911:  set :findDrillLocationLocal:x :findDrillLocation:x           findDrillLocationLocal(x, y, unit, item, ore, size, limit, out dx, out dy, out capacity);
  912:  set :findDrillLocationLocal:y :findDrillLocation:y           ...
  913:  set :findDrillLocationLocal:unit :findDrillLocation:unit     ...
  914:  set :findDrillLocationLocal:item :findDrillLocation:item     ...
  915:  set :findDrillLocationLocal:ore :findDrillLocation:ore       ...
  916:  set :findDrillLocationLocal:size :findDrillLocation:size     ...
  917:  set :findDrillLocationLocal:limit :findDrillLocation:limit   ...
  918:  setaddr :findDrillLocationLocal*retaddr *label402            ...
  919:  call *label7 *invalid :findDrillLocationLocal*retval         ...
        label *label402                                              ...
  920:  set :findDrillLocation:dx :findDrillLocationLocal:dx         ...
  921:  set :findDrillLocation:dy :findDrillLocationLocal:dy         ...
  922:  set :findDrillLocation:capacity :findDrillLocationLocal:capa ...
  923:  set .searchFinished true                                     searchFinished = true;
  924:  set :findDrillLocation*retval true                           remote def findDrillLocation(x, y, unit, item, ore, size, limit, out dx, out dy, out capacity)
  925:  set :findDrillLocation*finished true                         ...
  926:  jump *label13 always 0 0                                     ...
        label *label1                                                remote def layoutThoriumDrill(x, y, unit, limit)
  927:  set :findDrillLocationLocal:x :layoutThoriumDrill:x          if !findDrillLocationLocal(x, y, unit, @thorium, @ore-thorium, 3, limit, out drillX, out drillY) then
  928:  set :findDrillLocationLocal:y :layoutThoriumDrill:y          ...
  929:  set :findDrillLocationLocal:unit :layoutThoriumDrill:unit    ...
  930:  set :findDrillLocationLocal:item @thorium                    ...
  931:  set :findDrillLocationLocal:ore @ore-thorium                 ...
  932:  set :findDrillLocationLocal:size 3                           ...
  933:  set :findDrillLocationLocal:limit :layoutThoriumDrill:limit  ...
  934:  setaddr :findDrillLocationLocal*retaddr *label404            ...
  935:  call *label7 *invalid :findDrillLocationLocal*retval         ...
        label *label404                                              ...
  936:  set .drillX :findDrillLocationLocal:dx                       ...
  937:  set .drillY :findDrillLocationLocal:dy                       ...
  938:  jump *label405 notEqual :findDrillLocationLocal*retval false ...
  939:  set :layoutThoriumDrill*retval false                         return false;
  940:  jump *label403 always 0 0                                    ...
        label *label405                                              if !findDrillLocationLocal(x, y, unit, @thorium, @ore-thorium, 3, limit, out drillX, out drillY) then
  941:  setaddr :layoutThoriumDrillAtLocation*retaddr *label407      layoutThoriumDrillAtLocation();
  942:  call *label11 *invalid :layoutThoriumDrillAtLocation*retval  ...
        label *label407                                              ...
  943:  set :layoutThoriumDrill*retval :layoutThoriumDrillAtLocation remote def layoutThoriumDrill(x, y, unit, limit)
        label *label403                                              ...
  944:  set :layoutThoriumDrill*finished true                        ...
  945:  jump *label13 always 0 0                                     ...
        label *label2                                                remote void stopLocation()
  946:  set .mapSpots 0                                              mapProgress = mapTotal = mapAction = mapSpots = 0;
  947:  set .mapAction 0                                             ...
  948:  set .mapTotal 0                                              ...
  949:  set .mapProgress 0                                           ...
  950:  ucontrol unbind 0 0 0 0 0                                    unbind();
  951:  set :stopLocation*finished true                              remote void stopLocation()
  952:  jump *label13 always 0 0                                     ...


Performance: parsed in 531 ms, compiled in 443 ms, optimized in 1,656 ms, run in 9 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (6 steps):
The program didn't generate any output.
Execution exception at instruction 43: wait 1e12:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
