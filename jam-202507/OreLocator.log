  1438 instructions before optimizations.
   104 instructions eliminated by Temp Variables Elimination (2 iterations).
   166 instructions eliminated by Dead Code Elimination (2 passes, 8 iterations).
C:\Home\golem\jam-202507\OreLocator.mnd:22:19 Variable 'mapProgress' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:22:32 Variable 'mapTotal' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:27:5 Variable 'water1X' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:27:14 Variable 'water1Y' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:28:5 Variable 'water2X' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:28:14 Variable 'water2Y' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:29:5 Variable 'generatorX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:29:17 Variable 'generatorY' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:30:5 Variable 'nodeX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:30:12 Variable 'nodeY' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:31:5 Variable 'panelX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:31:13 Variable 'panelY' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:32:5 Variable 'batteryX' is not used.
C:\Home\golem\jam-202507\OreLocator.mnd:32:15 Variable 'batteryY' is not used.
     2 instructions eliminated by Jump Normalization (6 iterations).
    83 instructions eliminated by Jump Optimization (6 iterations).
    91 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
     9 instructions modified by Expression Optimization (2 passes, 3 iterations).
   311 instructions eliminated by Data Flow Optimization (8 passes, 34 iterations).
     2 loops improved by Loop Hoisting.
     2 instructions added by Loop Optimization (3 iterations).
    10 loops improved by Loop Optimization.
    53 instructions added by Loop Unrolling (13 iterations).
     1 loops unrolled by Loop Unrolling.
   223 instructions added by Function Inlining (13 iterations).
    10 function calls inlined by Function Inlining.
     5 instructions eliminated by Jump Straightening (2 passes, 6 iterations).
    12 instructions updated by JumpThreading.
    16 instructions eliminated by Unreachable Code Elimination (3 iterations).
   938 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 247):
    Replicate loop condition at line 40:5                        size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at line 40:5                        size    +1, benefit    31250.0, efficiency  31250.000
    Replicate loop condition at line 40:5                        size    +1, benefit     1250.0, efficiency   1250.000
    Replicate loop condition at line 40:5                        size    +1, benefit      650.0, efficiency    650.000
    Unroll loop at line 413:5                                    size   +69, benefit     9100.0, efficiency    131.884
    Unroll loop at line 414:9                                    size   +44, benefit   227500.0, efficiency   5170.455
    Unroll iteration loop at line 630:5                          size  +193, benefit       19.0, efficiency      0.098
    Inline function 'computeRowValues' defined at line 67:1      size  +199, benefit    31250.0, efficiency    157.035
    Inline function 'trace' defined at line 244:1                size   +41, benefit       18.0, efficiency      0.439
  * Inline function 'findMaxOreDistance' defined at line 260:1   size    -1, benefit        3.5, efficiency   Infinity (-5 instructions)
    Inline function 'tryPlaceGenerator' defined at line 497:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function call at line 271:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 272:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 273:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 274:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 302:11                          size   +47, benefit        3.5, efficiency      0.074
    Inline function call at line 127:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 128:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 129:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 130:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 131:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 627:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 649:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 252):
    Replicate loop condition at line 40:5                        size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at line 40:5                        size    +1, benefit    31250.0, efficiency  31250.000 (+1 instructions)
    Replicate loop condition at line 40:5                        size    +1, benefit     1250.0, efficiency   1250.000
    Replicate loop condition at line 40:5                        size    +1, benefit      650.0, efficiency    650.000
    Unroll loop at line 413:5                                    size   +69, benefit     9100.0, efficiency    131.884
    Unroll loop at line 414:9                                    size   +44, benefit   227500.0, efficiency   5170.455
    Unroll iteration loop at line 630:5                          size  +193, benefit       19.0, efficiency      0.098
    Inline function 'computeRowValues' defined at line 67:1      size  +199, benefit    31250.0, efficiency    157.035
    Inline function 'trace' defined at line 244:1                size   +41, benefit       18.0, efficiency      0.439
    Inline function 'tryPlaceGenerator' defined at line 497:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function call at line 271:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 272:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 273:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 274:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 127:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 128:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 129:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 130:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 131:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 627:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 649:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 251):
    Replicate loop condition at line 40:5                        size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at line 40:5                        size    +1, benefit     1250.0, efficiency   1250.000
    Replicate loop condition at line 40:5                        size    +1, benefit      650.0, efficiency    650.000
    Unroll loop at line 413:5                                    size   +69, benefit     9100.0, efficiency    131.884
  * Unroll loop at line 414:9                                    size   +44, benefit   227500.0, efficiency   5170.455 (+45 instructions)
    Unroll iteration loop at line 630:5                          size  +193, benefit       19.0, efficiency      0.098
    Inline function 'computeRowValues' defined at line 67:1      size  +199, benefit    31250.0, efficiency    157.035
    Inline function 'trace' defined at line 244:1                size   +41, benefit       18.0, efficiency      0.439
    Inline function 'tryPlaceGenerator' defined at line 497:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function call at line 271:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 272:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 273:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 274:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 127:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 128:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 129:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 130:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 131:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 627:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 649:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 206):
    Replicate loop condition at line 40:5                        size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at line 40:5                        size    +1, benefit     1250.0, efficiency   1250.000 (+1 instructions)
    Replicate loop condition at line 40:5                        size    +1, benefit      650.0, efficiency    650.000
  ! Unroll loop at line 413:5                                    size  +339, benefit     9100.0, efficiency     26.844
    Unroll iteration loop at line 630:5                          size  +193, benefit       19.0, efficiency      0.098
    Inline function 'computeRowValues' defined at line 67:1      size  +199, benefit    31250.0, efficiency    157.035
    Inline function 'trace' defined at line 244:1                size   +41, benefit       18.0, efficiency      0.439
    Inline function 'tryPlaceGenerator' defined at line 497:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function call at line 271:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 272:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 273:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 274:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 127:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 128:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 129:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 130:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 131:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 627:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 649:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 205):
    Replicate loop condition at line 40:5                        size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at line 40:5                        size    +1, benefit      650.0, efficiency    650.000 (+1 instructions)
  ! Unroll loop at line 413:5                                    size  +339, benefit     9100.0, efficiency     26.844
    Unroll iteration loop at line 630:5                          size  +193, benefit       19.0, efficiency      0.098
    Inline function 'computeRowValues' defined at line 67:1      size  +199, benefit    31250.0, efficiency    157.035
    Inline function 'trace' defined at line 244:1                size   +41, benefit       18.0, efficiency      0.439
    Inline function 'tryPlaceGenerator' defined at line 497:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function call at line 271:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 272:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 273:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 274:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 127:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 128:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 129:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 130:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 131:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 627:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 649:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 204):
    Replicate loop condition at line 40:5                        size    +1, benefit       25.0, efficiency     25.000
  ! Unroll loop at line 413:5                                    size  +339, benefit     9100.0, efficiency     26.844
    Unroll iteration loop at line 630:5                          size  +193, benefit       19.0, efficiency      0.098
  * Inline function 'computeRowValues' defined at line 67:1      size  +199, benefit    31250.0, efficiency    157.035 (+168 instructions)
    Inline function 'trace' defined at line 244:1                size   +41, benefit       18.0, efficiency      0.439
    Inline function 'tryPlaceGenerator' defined at line 497:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function call at line 271:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 272:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 273:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 274:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 127:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 128:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 129:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 130:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 131:14                          size   +50, benefit     6250.0, efficiency    125.000
    Inline function call at line 627:8                           size   +73, benefit        5.5, efficiency      0.075
    Inline function call at line 649:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 36):
  * Replicate loop condition at line 40:5                        size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
  ! Unroll loop at line 413:5                                    size  +339, benefit     9100.0, efficiency     26.844
  ! Unroll iteration loop at line 630:5                          size  +193, benefit       19.0, efficiency      0.098
  ! Inline function 'trace' defined at line 244:1                size   +41, benefit       18.0, efficiency      0.439
  ! Inline function 'tryPlaceGenerator' defined at line 497:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function call at line 271:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 272:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 273:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 274:30                          size   +14, benefit        4.5, efficiency      0.321
  ! Inline function call at line 627:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 649:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 35):
  ! Unroll loop at line 413:5                                    size  +339, benefit     9100.0, efficiency     26.844
  ! Unroll iteration loop at line 630:5                          size  +193, benefit       19.0, efficiency      0.098
  ! Inline function 'trace' defined at line 244:1                size   +41, benefit       18.0, efficiency      0.439
  ! Inline function 'tryPlaceGenerator' defined at line 497:1    size   +72, benefit      143.0, efficiency      1.986
  * Inline function call at line 271:30                          size   +14, benefit        4.5, efficiency      0.321 (+10 instructions)
    Inline function call at line 272:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 273:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 274:30                          size   +14, benefit        4.5, efficiency      0.321
  ! Inline function call at line 627:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 649:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 25):
  ! Unroll loop at line 413:5                                    size  +339, benefit     9100.0, efficiency     26.844
  ! Unroll iteration loop at line 630:5                          size  +193, benefit       19.0, efficiency      0.098
  ! Inline function 'trace' defined at line 244:1                size   +27, benefit       13.5, efficiency      0.500
  ! Inline function 'tryPlaceGenerator' defined at line 497:1    size   +72, benefit      143.0, efficiency      1.986
  * Inline function call at line 272:30                          size   +14, benefit        4.5, efficiency      0.321 (+10 instructions)
    Inline function call at line 273:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 274:30                          size   +14, benefit        4.5, efficiency      0.321
  ! Inline function call at line 627:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 649:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 15):
  ! Unroll loop at line 413:5                                    size  +339, benefit     9100.0, efficiency     26.844
  ! Unroll iteration loop at line 630:5                          size  +193, benefit       19.0, efficiency      0.098
  * Inline function 'trace' defined at line 244:1                size   +13, benefit        9.0, efficiency      0.692 (+2 instructions)
  ! Inline function 'tryPlaceGenerator' defined at line 497:1    size   +72, benefit      143.0, efficiency      1.986
    Inline function call at line 273:30                          size   +14, benefit        4.5, efficiency      0.321
    Inline function call at line 274:30                          size   +14, benefit        4.5, efficiency      0.321
  ! Inline function call at line 627:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 649:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 1: speed optimization selection (cost limit 13):
  ! Unroll loop at line 413:5                                    size  +339, benefit     9100.0, efficiency     26.844
  ! Unroll iteration loop at line 630:5                          size  +193, benefit       19.0, efficiency      0.098
  ! Inline function 'tryPlaceGenerator' defined at line 497:1    size   +72, benefit      143.0, efficiency      1.986
  ! Inline function call at line 627:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 649:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 2: speed optimization selection (cost limit 39):
  ! Unroll loop at line 413:5                                    size  +297, benefit     9100.0, efficiency     30.640
  ! Unroll iteration loop at line 630:5                          size  +189, benefit       19.0, efficiency      0.101
  ! Inline function 'tryPlaceGenerator' defined at line 497:1    size   +72, benefit      143.0, efficiency      1.986
  ! Inline function call at line 627:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 649:12                          size   +73, benefit      137.5, efficiency      1.884

Pass 3: speed optimization selection (cost limit 39):
  ! Unroll loop at line 413:5                                    size  +297, benefit     9100.0, efficiency     30.640
  ! Unroll iteration loop at line 630:5                          size  +189, benefit       19.0, efficiency      0.101
  ! Inline function 'tryPlaceGenerator' defined at line 497:1    size   +72, benefit      143.0, efficiency      1.986
  ! Inline function call at line 627:8                           size   +73, benefit        5.5, efficiency      0.075
  ! Inline function call at line 649:12                          size   +73, benefit      137.5, efficiency      1.884

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-107 instructions):
 
   109 set .x1 *tmp34
   110 op max *tmp35 .y1 :trace:oreY
   111 set .y1 *tmp35
-    * set *tmp31 .y1
   112 jump *label28 always
   113 label *label27
-    * set *tmp31 null
   114 label *label28
   115 label *label25
   116 ucontrol within :trace:x :trace:y 5 *tmp36
 
   309 jump *label56 equal *tmp96 false
   310 set *tmp68 false
   311 jump *label46 always
-    * set *tmp97 null
   312 jump *label57 always
   313 label *label56
-    * set *tmp97 null
   314 label *label57
   315 op sub *tmp98 :locateOreAway:x .coreX
   316 op abs *tmp99 *tmp98
 
   347 jump *label66 equal *tmp120 false
   348 set *tmp110 true
   349 jump *label62 always
-    * set *tmp121 null
   350 jump *label67 always
   351 label *label66
-    * set *tmp121 null
   352 label *label67
   353 op add :visited:index :visited:index 3
   354 label *label64
 
   377 label *label60
   378 set *tmp109 null
   379 label *label61
-    * set *tmp107 *tmp109
   380 jump *label59 always
   381 label *label58
-    * set *tmp107 null
   382 label *label59
   383 label *label48
   384 jump *label47 always
 
   394 op greaterThan *tmp128 :findDrillLocationLocal:capacity 0
   395 set :findDrillLocationLocal*retval *tmp128
   396 jump *label39 always
-    * set *tmp127 null
   397 jump *label71 always
   398 label *label70
-    * set *tmp127 null
   399 label *label71
   400 op greaterThanEq *tmp129 :findDrillLocationLocal:limit 1000
   401 jump *label72 equal *tmp129 false
   402 set *tmp131 .mapSpots
   403 op add .mapSpots .mapSpots 1
-    * set *tmp130 *tmp131
   404 jump *label73 always
   405 label *label72
-    * set *tmp130 null
   406 label *label73
   407 set :moveTo.3:x :findDrillLocationLocal:oreX
   408 set :moveTo.3:y :findDrillLocationLocal:oreY
 
   510 label *label94
   511 set *tmp159 null
   512 label *label95
-    * set *tmp157 *tmp159
   513 jump *label93 always
   514 label *label92
-    * set *tmp157 null
   515 label *label93
   516 label *label91
   517 set :updatePosition.1:dx 0
 
   529 label *label99
   530 set *tmp163 null
   531 label *label100
-    * set *tmp161 *tmp163
   532 jump *label98 always
   533 label *label97
-    * set *tmp161 null
   534 label *label98
   535 label *label96
   536 set :updatePosition.2:dx 1
 
   548 label *label104
   549 set *tmp167 null
   550 label *label105
-    * set *tmp165 *tmp167
   551 jump *label103 always
   552 label *label102
-    * set *tmp165 null
   553 label *label103
   554 label *label101
   555 label *label90
 
   571 label *label110
   572 set *tmp172 null
   573 label *label111
-    * set *tmp170 *tmp172
   574 jump *label109 always
   575 label *label108
-    * set *tmp170 null
   576 label *label109
   577 label *label107
   578 set :updatePosition.4:dx 0
 
   590 label *label115
   591 set *tmp176 null
   592 label *label116
-    * set *tmp174 *tmp176
   593 jump *label114 always
   594 label *label113
-    * set *tmp174 null
   595 label *label114
   596 label *label112
   597 set :updatePosition.5:dx 1
 
   609 label *label120
   610 set *tmp180 null
   611 label *label121
-    * set *tmp178 *tmp180
   612 jump *label119 always
   613 label *label118
-    * set *tmp178 null
   614 label *label119
   615 label *label117
   616 label *label106
 
   632 label *label126
   633 set *tmp185 null
   634 label *label127
-    * set *tmp183 *tmp185
   635 jump *label125 always
   636 label *label124
-    * set *tmp183 null
   637 label *label125
   638 label *label123
   639 set :updatePosition.7:dx 0
 
   651 label *label131
   652 set *tmp189 null
   653 label *label132
-    * set *tmp187 *tmp189
   654 jump *label130 always
   655 label *label129
-    * set *tmp187 null
   656 label *label130
   657 label *label128
   658 set :updatePosition.8:dx 1
 
   670 label *label136
   671 set *tmp193 null
   672 label *label137
-    * set *tmp191 *tmp193
   673 jump *label135 always
   674 label *label134
-    * set *tmp191 null
   675 label *label135
   676 label *label133
   677 label *label122
-    * set *tmp148 null
   678 jump *label89 always
   679 label *label88
   680 op add *tmp194 :findBestPosition:y1 :findBestPosition:y2
 
   703 label *label142
   704 set *tmp201 null
   705 label *label143
-    * set *tmp199 *tmp201
   706 jump *label141 always
   707 label *label140
-    * set *tmp199 null
   708 label *label141
   709 label *label139
   710 set :updatePosition.10:dx -0.5
 
   722 label *label147
   723 set *tmp205 null
   724 label *label148
-    * set *tmp203 *tmp205
   725 jump *label146 always
   726 label *label145
-    * set *tmp203 null
   727 label *label146
   728 label *label144
   729 set :updatePosition.11:dx 0.5
 
   741 label *label152
   742 set *tmp209 null
   743 label *label153
-    * set *tmp207 *tmp209
   744 jump *label151 always
   745 label *label150
-    * set *tmp207 null
   746 label *label151
   747 label *label149
   748 set :updatePosition.12:dx 1.5
 
   760 label *label157
   761 set *tmp213 null
   762 label *label158
-    * set *tmp211 *tmp213
   763 jump *label156 always
   764 label *label155
-    * set *tmp211 null
   765 label *label156
   766 label *label154
   767 label *label138
 
   783 label *label163
   784 set *tmp217 null
   785 label *label164
-    * set *tmp215 *tmp217
   786 jump *label162 always
   787 label *label161
-    * set *tmp215 null
   788 label *label162
   789 label *label160
   790 set :updatePosition.14:dx -0.5
 
   802 label *label168
   803 set *tmp221 null
   804 label *label169
-    * set *tmp219 *tmp221
   805 jump *label167 always
   806 label *label166
-    * set *tmp219 null
   807 label *label167
   808 label *label165
   809 set :updatePosition.15:dx 0.5
 
   821 label *label173
   822 set *tmp225 null
   823 label *label174
-    * set *tmp223 *tmp225
   824 jump *label172 always
   825 label *label171
-    * set *tmp223 null
   826 label *label172
   827 label *label170
   828 set :updatePosition.16:dx 1.5
 
   840 label *label178
   841 set *tmp229 null
   842 label *label179
-    * set *tmp227 *tmp229
   843 jump *label177 always
   844 label *label176
-    * set *tmp227 null
   845 label *label177
   846 label *label175
   847 label *label159
 
   863 label *label184
   864 set *tmp233 null
   865 label *label185
-    * set *tmp231 *tmp233
   866 jump *label183 always
   867 label *label182
-    * set *tmp231 null
   868 label *label183
   869 label *label181
   870 set :updatePosition.18:dx -0.5
 
   882 label *label189
   883 set *tmp237 null
   884 label *label190
-    * set *tmp235 *tmp237
   885 jump *label188 always
   886 label *label187
-    * set *tmp235 null
   887 label *label188
   888 label *label186
   889 set :updatePosition.19:dx 0.5
 
   901 label *label194
   902 set *tmp241 null
   903 label *label195
-    * set *tmp239 *tmp241
   904 jump *label193 always
   905 label *label192
-    * set *tmp239 null
   906 label *label193
   907 label *label191
   908 set :updatePosition.20:dx 1.5
 
   920 label *label199
   921 set *tmp245 null
   922 label *label200
-    * set *tmp243 *tmp245
   923 jump *label198 always
   924 label *label197
-    * set *tmp243 null
   925 label *label198
   926 label *label196
   927 label *label180
 
   943 label *label205
   944 set *tmp249 null
   945 label *label206
-    * set *tmp247 *tmp249
   946 jump *label204 always
   947 label *label203
-    * set *tmp247 null
   948 label *label204
   949 label *label202
   950 set :updatePosition.22:dx -0.5
 
   962 label *label210
   963 set *tmp253 null
   964 label *label211
-    * set *tmp251 *tmp253
   965 jump *label209 always
   966 label *label208
-    * set *tmp251 null
   967 label *label209
   968 label *label207
   969 set :updatePosition.23:dx 0.5
 
   981 label *label215
   982 set *tmp257 null
   983 label *label216
-    * set *tmp255 *tmp257
   984 jump *label214 always
   985 label *label213
-    * set *tmp255 null
   986 label *label214
   987 label *label212
   988 set :updatePosition.24:dx 1.5
 
  1000 label *label220
  1001 set *tmp261 null
  1002 label *label221
-    * set *tmp259 *tmp261
  1003 jump *label219 always
  1004 label *label218
-    * set *tmp259 null
  1005 label *label219
  1006 label *label217
  1007 label *label201
-    * set *tmp148 null
  1008 label *label89
  1009 op mul *tmp262 :findBestPosition:best 255
  1010 set *tmp137 *tmp262
 
  1022 op lessThan *tmp267 :findDrillLocationLocal:limit 1000
  1023 jump *label224 equal *tmp267 false
  1024 set .mapSpots :findDrillLocationLocal:score
-    * set *tmp268 :findDrillLocationLocal:score
  1025 jump *label225 always
  1026 label *label224
-    * set *tmp268 null
  1027 label *label225
  1028 op greaterThanEq *tmp269 :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
  1029 jump *label226 equal *tmp269 false
 
  1035 label *label226
  1036 set *tmp270 null
  1037 label *label227
-    * set *tmp264 *tmp270
  1038 jump *label223 always
  1039 label *label222
-    * set *tmp264 null
  1040 label *label223
  1041 op greaterThan *tmp271 :findDrillLocationLocal:score :findDrillLocationLocal:best
  1042 jump *label228 equal *tmp271 false
 
  1045 op add *tmp274 :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
  1046 set :findDrillLocationLocal:bestY *tmp274
  1047 set :findDrillLocationLocal:best :findDrillLocationLocal:score
-    * set *tmp272 :findDrillLocationLocal:best
  1048 jump *label229 always
  1049 label *label228
-    * set *tmp272 null
  1050 label *label229
  1051 op lessThanEq *tmp275 :findDrillLocationLocal:score :findDrillLocationLocal:last
  1052 jump *label230 equal *tmp275 false
  1053 jump *label81 always
-    * set *tmp276 null
  1054 jump *label231 always
  1055 label *label230
-    * set *tmp276 null
  1056 label *label231
  1057 set :findDrillLocationLocal:last :findDrillLocationLocal:score
  1058 op mul *tmp277 :findDrillLocationLocal:diffX 1.1
 
  1077 op lessThan *tmp290 *tmp289 7
  1078 jump *label234 equal *tmp290 false
  1079 jump *label81 always
-    * set *tmp291 null
  1080 jump *label235 always
  1081 label *label234
-    * set *tmp291 null
  1082 label *label235
  1083 label *label80
  1084 jump *label79 always
 
  1092 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
  1093 set *tmp296 :findDrillLocationLocal:count
  1094 write :findDrillLocationLocal:bestY bank1 *tmp296
-    * set *tmp298 .locations
  1095 op add .locations .locations 1
  1096 label *label44
  1097 jump *label43 always
 
  1190 op add *tmp328 *tmp327 :findPossiblePlacement:x
  1191 set :findPossiblePlacement*retval *tmp328
  1192 jump *label256 always
-    * set *tmp325 null
  1193 jump *label264 always
  1194 label *label263
-    * set *tmp325 null
  1195 label *label264
  1196 op sub *tmp329 3 :findPossiblePlacement:width
  1197 op greaterThan *tmp330 :findPossiblePlacement:x *tmp329
  1198 jump *label265 equal *tmp330 false
  1199 jump *label262 always
-    * set *tmp331 null
  1200 jump *label266 always
  1201 label *label265
-    * set *tmp331 null
  1202 label *label266
  1203 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
  1204 label *label261
 
  1209 op greaterThan *tmp333 :findPossiblePlacement:y *tmp332
  1210 jump *label267 equal *tmp333 false
  1211 jump *label259 always
-    * set *tmp334 null
  1212 jump *label268 always
  1213 label *label267
-    * set *tmp334 null
  1214 label *label268
  1215 label *label258
  1216 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
 
  1250 set .generatorY *tmp345
  1251 op shl *tmp346 :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:shift
  1252 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp346
-    * set *tmp337 :tryPlaceGenerator:terrainMask
  1253 jump *label272 always
  1254 label *label271
  1255 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1267 jump *label274 equal *tmp348 false
  1268 set :tryPlaceGenerator*retval false
  1269 jump *label269 always
-    * set *tmp349 null
  1270 jump *label275 always
  1271 label *label274
-    * set *tmp349 null
  1272 label *label275
  1273 op add *tmp350 :tryPlaceGenerator:centerX 0.5
  1274 op add *tmp351 *tmp350 :tryPlaceGenerator:c
 
  1284 set .generatorY *tmp357
  1285 op shl *tmp358 :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:shift
  1286 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp358
-    * set *tmp337 :tryPlaceGenerator:terrainMask
  1287 label *label272
  1288 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
  1289 set :findPossiblePlacement:placementMask 1
 
  1300 jump *label277 equal *tmp360 false
  1301 set :tryPlaceGenerator*retval false
  1302 jump *label269 always
-    * set *tmp361 null
  1303 jump *label278 always
  1304 label *label277
-    * set *tmp361 null
  1305 label *label278
  1306 op add *tmp362 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
  1307 set .nodeX *tmp362
 
  1324 jump *label280 equal *tmp366 false
  1325 set :tryPlaceGenerator*retval false
  1326 jump *label269 always
-    * set *tmp367 null
  1327 jump *label281 always
  1328 label *label280
-    * set *tmp367 null
  1329 label *label281
  1330 op add *tmp368 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
  1331 set .panelX *tmp368
 
  1348 jump *label283 equal *tmp372 false
  1349 set :tryPlaceGenerator*retval false
  1350 jump *label269 always
-    * set *tmp373 null
  1351 jump *label284 always
  1352 label *label283
-    * set *tmp373 null
  1353 label *label284
  1354 op add *tmp374 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
  1355 set .batteryX *tmp374
 
  1456 set .water1Y *tmp418
  1457 op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:shift
  1458 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
-    * set *tmp414 :layoutThoriumDrillAtLocation:terrainMask
  1459 jump *label292 always
  1460 label *label291
-    * set *tmp414 null
  1461 label *label292
  1462 set :createFixedMatrix.3:row0 0b1111
  1463 set :createFixedMatrix.3:row1 0b1111
 
  1493 jump *label296 equal *tmp431 false
  1494 set :layoutThoriumDrillAtLocation*retval true
  1495 jump *label285 always
-    * set *tmp432 null
  1496 jump *label297 always
  1497 label *label296
-    * set *tmp432 null
  1498 label *label297
  1499 set :layoutThoriumDrillAtLocation:sx 3
  1500 set :layoutThoriumDrillAtLocation:sy 3
 
  1539 jump *label307 equal *tmp444 false
  1540 set *tmp439 0
  1541 jump *label306 always
-    * set *tmp445 null
  1542 jump *label308 always
  1543 label *label307
-    * set *tmp445 null
  1544 label *label308
  1545 op mul *tmp446 7 :shiftMask:shiftY
  1546 op add *tmp447 :shiftMask:shiftX *tmp446
 
  1552 op and *tmp451 :shiftMask:mask :shiftMask:clearMask
  1553 op shl *tmp452 *tmp451 :shiftMask:shift
  1554 set :shiftMask:mask *tmp452
-    * set *tmp449 :shiftMask:mask
  1555 jump *label310 always
  1556 label *label309
  1557 op sub *tmp453 0 :shiftMask:shift
  1558 op shr :shiftMask:mask :shiftMask:mask *tmp453
-    * set *tmp449 :shiftMask:mask
  1559 label *label310
  1560 op notEqual *tmp454 :shiftMask:shiftX 0
  1561 jump *label311 equal *tmp454 false
 
  1568 op abs *tmp461 :shiftMask:shiftX
  1569 op sub *tmp462 7 *tmp461
  1570 op shl :shiftMask:keep :shiftMask:keep *tmp462
-    * set *tmp460 :shiftMask:keep
  1571 jump *label314 always
  1572 label *label313
-    * set *tmp460 null
  1573 label *label314
  1574 op shl *tmp463 :shiftMask:keep 7
  1575 op or :shiftMask:keep :shiftMask:keep *tmp463
 
  1578 op shl *tmp465 :shiftMask:keep 21
  1579 op or :shiftMask:keep :shiftMask:keep *tmp465
  1580 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
-    * set *tmp455 :shiftMask:mask
  1581 jump *label312 always
  1582 label *label311
-    * set *tmp455 null
  1583 label *label312
  1584 set *tmp439 :shiftMask:mask
  1585 jump *label306 always
 
  1602 jump *label316 equal *tmp469 false
  1603 set :layoutThoriumDrillAtLocation*retval true
  1604 jump *label285 always
-    * set *tmp470 null
  1605 jump *label317 always
  1606 label *label316
-    * set *tmp470 null
  1607 label *label317
  1608 label *label299
  1609 multijump *tmp433 0 0 (m:marker0)
 
  1632 jump *label320 equal *tmp471 false
  1633 set :layoutThoriumDrill*retval false
  1634 jump *label318 always
-    * set *tmp472 null
  1635 jump *label321 always
  1636 label *label320
-    * set *tmp472 null
  1637 label *label321
  1638 setaddr :layoutThoriumDrillAtLocation*retaddr *label322 (h:*label322)
  1639 call *label12 *invalid :layoutThoriumDrillAtLocation*retval (m:*label322) (h:*label322)

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-55 instructions):
 
   372 label *label68
   373 set *tmp123 null
   374 label *label69
-    * set *tmp109 *tmp123
   375 jump *label61 always
   376 label *label60
-    * set *tmp109 null
   377 label *label61
   378 jump *label59 always
   379 label *label58
 
   397 label *label71
   398 op greaterThanEq *tmp129 :findDrillLocationLocal:limit 1000
   399 jump *label72 equal *tmp129 false
-    * set *tmp131 .mapSpots
   400 op add .mapSpots .mapSpots 1
   401 jump *label73 always
   402 label *label72
 
   502 set :findDrillLocationLocal:diffX :updatePosition:dx
   503 set :findDrillLocationLocal:diffY :updatePosition:dy
   504 set :findBestPosition:best :updatePosition:value
-    * set *tmp159 :findBestPosition:best
   505 jump *label95 always
   506 label *label94
-    * set *tmp159 null
   507 label *label95
   508 jump *label93 always
   509 label *label92
 
   519 set :findDrillLocationLocal:diffX :updatePosition.1:dx
   520 set :findDrillLocationLocal:diffY :updatePosition.1:dy
   521 set :findBestPosition:best :updatePosition.1:value
-    * set *tmp163 :findBestPosition:best
   522 jump *label100 always
   523 label *label99
-    * set *tmp163 null
   524 label *label100
   525 jump *label98 always
   526 label *label97
 
   536 set :findDrillLocationLocal:diffX :updatePosition.2:dx
   537 set :findDrillLocationLocal:diffY :updatePosition.2:dy
   538 set :findBestPosition:best :updatePosition.2:value
-    * set *tmp167 :findBestPosition:best
   539 jump *label105 always
   540 label *label104
-    * set *tmp167 null
   541 label *label105
   542 jump *label103 always
   543 label *label102
 
   557 set :findDrillLocationLocal:diffX :updatePosition.3:dx
   558 set :findDrillLocationLocal:diffY :updatePosition.3:dy
   559 set :findBestPosition:best :updatePosition.3:value
-    * set *tmp172 :findBestPosition:best
   560 jump *label111 always
   561 label *label110
-    * set *tmp172 null
   562 label *label111
   563 jump *label109 always
   564 label *label108
 
   574 set :findDrillLocationLocal:diffX :updatePosition.4:dx
   575 set :findDrillLocationLocal:diffY :updatePosition.4:dy
   576 set :findBestPosition:best :updatePosition.4:value
-    * set *tmp176 :findBestPosition:best
   577 jump *label116 always
   578 label *label115
-    * set *tmp176 null
   579 label *label116
   580 jump *label114 always
   581 label *label113
 
   591 set :findDrillLocationLocal:diffX :updatePosition.5:dx
   592 set :findDrillLocationLocal:diffY :updatePosition.5:dy
   593 set :findBestPosition:best :updatePosition.5:value
-    * set *tmp180 :findBestPosition:best
   594 jump *label121 always
   595 label *label120
-    * set *tmp180 null
   596 label *label121
   597 jump *label119 always
   598 label *label118
 
   612 set :findDrillLocationLocal:diffX :updatePosition.6:dx
   613 set :findDrillLocationLocal:diffY :updatePosition.6:dy
   614 set :findBestPosition:best :updatePosition.6:value
-    * set *tmp185 :findBestPosition:best
   615 jump *label127 always
   616 label *label126
-    * set *tmp185 null
   617 label *label127
   618 jump *label125 always
   619 label *label124
 
   629 set :findDrillLocationLocal:diffX :updatePosition.7:dx
   630 set :findDrillLocationLocal:diffY :updatePosition.7:dy
   631 set :findBestPosition:best :updatePosition.7:value
-    * set *tmp189 :findBestPosition:best
   632 jump *label132 always
   633 label *label131
-    * set *tmp189 null
   634 label *label132
   635 jump *label130 always
   636 label *label129
 
   646 set :findDrillLocationLocal:diffX :updatePosition.8:dx
   647 set :findDrillLocationLocal:diffY :updatePosition.8:dy
   648 set :findBestPosition:best :updatePosition.8:value
-    * set *tmp193 :findBestPosition:best
   649 jump *label137 always
   650 label *label136
-    * set *tmp193 null
   651 label *label137
   652 jump *label135 always
   653 label *label134
 
   677 set :findDrillLocationLocal:diffX :updatePosition.9:dx
   678 set :findDrillLocationLocal:diffY :updatePosition.9:dy
   679 set :findBestPosition:best :updatePosition.9:value
-    * set *tmp201 :findBestPosition:best
   680 jump *label143 always
   681 label *label142
-    * set *tmp201 null
   682 label *label143
   683 jump *label141 always
   684 label *label140
 
   694 set :findDrillLocationLocal:diffX :updatePosition.10:dx
   695 set :findDrillLocationLocal:diffY :updatePosition.10:dy
   696 set :findBestPosition:best :updatePosition.10:value
-    * set *tmp205 :findBestPosition:best
   697 jump *label148 always
   698 label *label147
-    * set *tmp205 null
   699 label *label148
   700 jump *label146 always
   701 label *label145
 
   711 set :findDrillLocationLocal:diffX :updatePosition.11:dx
   712 set :findDrillLocationLocal:diffY :updatePosition.11:dy
   713 set :findBestPosition:best :updatePosition.11:value
-    * set *tmp209 :findBestPosition:best
   714 jump *label153 always
   715 label *label152
-    * set *tmp209 null
   716 label *label153
   717 jump *label151 always
   718 label *label150
 
   728 set :findDrillLocationLocal:diffX :updatePosition.12:dx
   729 set :findDrillLocationLocal:diffY :updatePosition.12:dy
   730 set :findBestPosition:best :updatePosition.12:value
-    * set *tmp213 :findBestPosition:best
   731 jump *label158 always
   732 label *label157
-    * set *tmp213 null
   733 label *label158
   734 jump *label156 always
   735 label *label155
 
   749 set :findDrillLocationLocal:diffX :updatePosition.13:dx
   750 set :findDrillLocationLocal:diffY :updatePosition.13:dy
   751 set :findBestPosition:best :updatePosition.13:value
-    * set *tmp217 :findBestPosition:best
   752 jump *label164 always
   753 label *label163
-    * set *tmp217 null
   754 label *label164
   755 jump *label162 always
   756 label *label161
 
   766 set :findDrillLocationLocal:diffX :updatePosition.14:dx
   767 set :findDrillLocationLocal:diffY :updatePosition.14:dy
   768 set :findBestPosition:best :updatePosition.14:value
-    * set *tmp221 :findBestPosition:best
   769 jump *label169 always
   770 label *label168
-    * set *tmp221 null
   771 label *label169
   772 jump *label167 always
   773 label *label166
 
   783 set :findDrillLocationLocal:diffX :updatePosition.15:dx
   784 set :findDrillLocationLocal:diffY :updatePosition.15:dy
   785 set :findBestPosition:best :updatePosition.15:value
-    * set *tmp225 :findBestPosition:best
   786 jump *label174 always
   787 label *label173
-    * set *tmp225 null
   788 label *label174
   789 jump *label172 always
   790 label *label171
 
   800 set :findDrillLocationLocal:diffX :updatePosition.16:dx
   801 set :findDrillLocationLocal:diffY :updatePosition.16:dy
   802 set :findBestPosition:best :updatePosition.16:value
-    * set *tmp229 :findBestPosition:best
   803 jump *label179 always
   804 label *label178
-    * set *tmp229 null
   805 label *label179
   806 jump *label177 always
   807 label *label176
 
   821 set :findDrillLocationLocal:diffX :updatePosition.17:dx
   822 set :findDrillLocationLocal:diffY :updatePosition.17:dy
   823 set :findBestPosition:best :updatePosition.17:value
-    * set *tmp233 :findBestPosition:best
   824 jump *label185 always
   825 label *label184
-    * set *tmp233 null
   826 label *label185
   827 jump *label183 always
   828 label *label182
 
   838 set :findDrillLocationLocal:diffX :updatePosition.18:dx
   839 set :findDrillLocationLocal:diffY :updatePosition.18:dy
   840 set :findBestPosition:best :updatePosition.18:value
-    * set *tmp237 :findBestPosition:best
   841 jump *label190 always
   842 label *label189
-    * set *tmp237 null
   843 label *label190
   844 jump *label188 always
   845 label *label187
 
   855 set :findDrillLocationLocal:diffX :updatePosition.19:dx
   856 set :findDrillLocationLocal:diffY :updatePosition.19:dy
   857 set :findBestPosition:best :updatePosition.19:value
-    * set *tmp241 :findBestPosition:best
   858 jump *label195 always
   859 label *label194
-    * set *tmp241 null
   860 label *label195
   861 jump *label193 always
   862 label *label192
 
   872 set :findDrillLocationLocal:diffX :updatePosition.20:dx
   873 set :findDrillLocationLocal:diffY :updatePosition.20:dy
   874 set :findBestPosition:best :updatePosition.20:value
-    * set *tmp245 :findBestPosition:best
   875 jump *label200 always
   876 label *label199
-    * set *tmp245 null
   877 label *label200
   878 jump *label198 always
   879 label *label197
 
   893 set :findDrillLocationLocal:diffX :updatePosition.21:dx
   894 set :findDrillLocationLocal:diffY :updatePosition.21:dy
   895 set :findBestPosition:best :updatePosition.21:value
-    * set *tmp249 :findBestPosition:best
   896 jump *label206 always
   897 label *label205
-    * set *tmp249 null
   898 label *label206
   899 jump *label204 always
   900 label *label203
 
   910 set :findDrillLocationLocal:diffX :updatePosition.22:dx
   911 set :findDrillLocationLocal:diffY :updatePosition.22:dy
   912 set :findBestPosition:best :updatePosition.22:value
-    * set *tmp253 :findBestPosition:best
   913 jump *label211 always
   914 label *label210
-    * set *tmp253 null
   915 label *label211
   916 jump *label209 always
   917 label *label208
 
   927 set :findDrillLocationLocal:diffX :updatePosition.23:dx
   928 set :findDrillLocationLocal:diffY :updatePosition.23:dy
   929 set :findBestPosition:best :updatePosition.23:value
-    * set *tmp257 :findBestPosition:best
   930 jump *label216 always
   931 label *label215
-    * set *tmp257 null
   932 label *label216
   933 jump *label214 always
   934 label *label213
 
   944 set :findDrillLocationLocal:diffX :updatePosition.24:dx
   945 set :findDrillLocationLocal:diffY :updatePosition.24:dy
   946 set :findBestPosition:best :updatePosition.24:value
-    * set *tmp261 :findBestPosition:best
   947 jump *label221 always
   948 label *label220
-    * set *tmp261 null
   949 label *label221
   950 jump *label219 always
   951 label *label218
 
   977 ucontrol unbind
   978 set :findDrillLocationLocal*retval true
   979 jump *label39 always
-    * set *tmp270 null
   980 jump *label227 always
   981 label *label226
-    * set *tmp270 null
   982 label *label227
   983 jump *label223 always
   984 label *label222

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
   367 set .mapProgress *tmp125
   368 set *tmp68 true
   369 jump *label46 always
-    * set *tmp123 null
   370 jump *label69 always
   371 label *label68
-    * set *tmp123 null
   372 label *label69
   373 jump *label61 always
   374 label *label60

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-104 instructions):
 
     8 jump *label14 always
     9 end
    10 label *label5
-    * op sub *tmp0 :computeRowValues:x 2
-    * set :spotValue:x *tmp0
+   11 op sub :spotValue:x :computeRowValues:x 2
    12 set :spotValue:y :computeRowValues:y
    13 set :spotValue:ore :computeRowValues:ore
    14 ucontrol getBlock :spotValue:x :spotValue:y type building floor
 
    18 set *tmp1 :spotValue:result
    19 label *label16
    20 set :computeRowValues:x1 *tmp1
-    * op sub *tmp2 :computeRowValues:x 1
-    * set :spotValue.1:x *tmp2
+   21 op sub :spotValue.1:x :computeRowValues:x 1
    22 set :spotValue.1:y :computeRowValues:y
    23 set :spotValue.1:ore :computeRowValues:ore
    24 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
 
    28 set *tmp3 :spotValue.1:result
    29 label *label17
    30 set :computeRowValues:x2 *tmp3
-    * op add *tmp4 :computeRowValues:x 0
-    * set :spotValue.2:x *tmp4
+   31 op add :spotValue.2:x :computeRowValues:x 0
    32 set :spotValue.2:y :computeRowValues:y
    33 set :spotValue.2:ore :computeRowValues:ore
    34 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
 
    38 set *tmp5 :spotValue.2:result
    39 label *label18
    40 set :computeRowValues:x3 *tmp5
-    * op add *tmp6 :computeRowValues:x 1
-    * set :spotValue.3:x *tmp6
+   41 op add :spotValue.3:x :computeRowValues:x 1
    42 set :spotValue.3:y :computeRowValues:y
    43 set :spotValue.3:ore :computeRowValues:ore
    44 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
 
    48 set *tmp7 :spotValue.3:result
    49 label *label19
    50 set :computeRowValues:x4 *tmp7
-    * op add *tmp8 :computeRowValues:x 2
-    * set :spotValue.4:x *tmp8
+   51 op add :spotValue.4:x :computeRowValues:x 2
    52 set :spotValue.4:y :computeRowValues:y
    53 set :spotValue.4:ore :computeRowValues:ore
    54 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
 
    65 op add *tmp14 *tmp13 :computeRowValues:x4
    66 op add *tmp15 :computeRowValues:x3 :computeRowValues:x4
    67 op add *tmp16 *tmp15 :computeRowValues:x5
-    * packcolor *tmp17 *tmp12 *tmp14 *tmp16 0
-    * set :computeRowValues*retval *tmp17
+   68 packcolor :computeRowValues*retval *tmp12 *tmp14 *tmp16 0
    69 jump *label15 always
    70 set *tmp10 null
    71 jump *label22 always
 
    74 op add *tmp19 :computeRowValues:x2 :computeRowValues:x3
    75 op add *tmp20 :computeRowValues:x3 :computeRowValues:x4
    76 op add *tmp21 :computeRowValues:x4 :computeRowValues:x5
-    * packcolor *tmp22 *tmp18 *tmp19 *tmp20 *tmp21
-    * set :computeRowValues*retval *tmp22
+   77 packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
    78 jump *label15 always
    79 set *tmp10 null
    80 label *label22
 
    90 sensor *tmp25 @unit @y
    91 op sub *tmp26 :trace:y *tmp25
    92 op len *tmp27 *tmp24 *tmp26
-    * op sub *tmp28 .cornerDistance *tmp27
-    * set .mapProgress *tmp28
-    * ulocate ore core true :trace:ore :trace:oreX :trace:oreY *tmp29 *tmp30
+   93 op sub .mapProgress .cornerDistance *tmp27
+   94 ulocate ore core true :trace:ore :trace:oreX :trace:oreY *tmp29 0
    95 jump *label27 equal *tmp29 false
-    * op min *tmp32 .x0 :trace:oreX
-    * set .x0 *tmp32
-    * op min *tmp33 .y0 :trace:oreY
-    * set .y0 *tmp33
-    * op max *tmp34 .x1 :trace:oreX
-    * set .x1 *tmp34
-    * op max *tmp35 .y1 :trace:oreY
-    * set .y1 *tmp35
+   96 op min .x0 .x0 :trace:oreX
+   97 op min .y0 .y0 :trace:oreY
+   98 op max .x1 .x1 :trace:oreX
+   99 op max .y1 .y1 :trace:oreY
   100 jump *label28 always
   101 label *label27
   102 label *label28
 
   111 label *label7
   112 set .mapProgress 0
   113 op add *tmp38 @mapw @maph
-    * op mul *tmp39 2 *tmp38
-    * set .mapTotal *tmp39
+  114 op mul .mapTotal 2 *tmp38
   115 set .cornerDistance 0
   116 set .x0 @mapw
   117 set .y0 @maph
 
   165 label *label38
   166 op sub *tmp45 .coreX .x0
   167 op sub *tmp46 .coreY .y0
-    * op len *tmp47 *tmp45 *tmp46
-    * set :findMaxOreDistance:d0 *tmp47
+  168 op len :findMaxOreDistance:d0 *tmp45 *tmp46
   169 op sub *tmp48 .coreX .x0
   170 op sub *tmp49 .coreY .y1
-    * op len *tmp50 *tmp48 *tmp49
-    * set :findMaxOreDistance:d1 *tmp50
+  171 op len :findMaxOreDistance:d1 *tmp48 *tmp49
   172 op sub *tmp51 .coreX .x1
   173 op sub *tmp52 .coreY .y0
-    * op len *tmp53 *tmp51 *tmp52
-    * set :findMaxOreDistance:d2 *tmp53
+  174 op len :findMaxOreDistance:d2 *tmp51 *tmp52
   175 op sub *tmp54 .coreX .x1
   176 op sub *tmp55 .coreY .y1
-    * op len *tmp56 *tmp54 *tmp55
-    * set :findMaxOreDistance:d3 *tmp56
+  177 op len :findMaxOreDistance:d3 *tmp54 *tmp55
   178 op max *tmp57 :findMaxOreDistance:d0 :findMaxOreDistance:d1
   179 op max *tmp57 *tmp57 :findMaxOreDistance:d2
   180 op max *tmp57 *tmp57 :findMaxOreDistance:d3
 
   212 set :findDrillLocationLocal:distanceLimit *tmp59
   213 set .angle 0
   214 set .mapProgress .angle
-    * op div *tmp63 :findDrillLocationLocal:distanceLimit 3.8197185279121366
-    * set .mapTotal *tmp63
+  215 op div .mapTotal :findDrillLocationLocal:distanceLimit 3.8197185279121366
   216 set :findDrillLocationLocal:count -1
   217 set :findDrillLocationLocal:oreX 0
   218 set :findDrillLocationLocal:oreY 0
 
   222 set :findDrillLocationLocal:bestX :findDrillLocationLocal:x
   223 set :findDrillLocationLocal:bestY :findDrillLocationLocal:y
   224 op sub *tmp64 :findDrillLocationLocal:limit :findDrillLocationLocal:capacity
-    * op mul *tmp65 *tmp64 .attenuationRate
-    * set :findDrillLocationLocal:maxDistance *tmp65
-    * op min *tmp66 :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
-    * set :findDrillLocationLocal:distanceLimit *tmp66
-    * op div *tmp67 :findDrillLocationLocal:distanceLimit 3.8197185279121366
-    * set .mapTotal *tmp67
+  225 op mul :findDrillLocationLocal:maxDistance *tmp64 .attenuationRate
+  226 op min :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
+  227 op div .mapTotal :findDrillLocationLocal:distanceLimit 3.8197185279121366
   228 set :locateOreAway:ore :findDrillLocationLocal:item
   229 set :locateOreAway:x :findDrillLocationLocal:oreX
   230 set :locateOreAway:y :findDrillLocationLocal:oreY
   231 set :locateOreAway:distanceLimit :findDrillLocationLocal:distanceLimit
-    * op mul *tmp69 3.8197185279121366 .angle
-    * set :locateOreAway:distance *tmp69
-    * op max *tmp70 .angle @pi
-    * set .angle *tmp70
-    * op mul *tmp71 .angle .angle
-    * set .mapProgress *tmp71
+  232 op mul :locateOreAway:distance 3.8197185279121366 .angle
+  233 op max .angle .angle @pi
+  234 op mul .mapProgress .angle .angle
   235 label *label47
   236 op lessThan *tmp72 :locateOreAway:distance :locateOreAway:distanceLimit
   237 jump *label49 equal *tmp72 false
-    * op div *tmp73 .angle @degToRad
-    * set :locateOreAway:a *tmp73
+  238 op div :locateOreAway:a .angle @degToRad
   239 op sin *tmp74 :locateOreAway:a
   240 op mul *tmp75 *tmp74 :locateOreAway:distance
   241 op add *tmp76 .coreX *tmp75
 
   244 set :limit:low 5
   245 set :limit:high *tmp77
   246 op max *tmp79 :limit:value :limit:low
-    * op min *tmp80 *tmp79 :limit:high
-    * set *tmp78 *tmp80
+  247 op min *tmp78 *tmp79 :limit:high
   248 label *label50
   249 set :locateOreAway:lx *tmp78
   250 op cos *tmp81 :locateOreAway:a
 
   255 set :limit.1:low 5
   256 set :limit.1:high *tmp84
   257 op max *tmp86 :limit.1:value :limit.1:low
-    * op min *tmp87 *tmp86 :limit.1:high
-    * set *tmp85 *tmp87
+  258 op min *tmp85 *tmp86 :limit.1:high
   259 label *label51
   260 set :locateOreAway:ly *tmp85
   261 set :moveTo.2:x :locateOreAway:lx
 
   273 label *label52
   274 op div *tmp91 3.8197185279121366 :locateOreAway:distance
   275 op add .angle .angle *tmp91
-    * op mul *tmp92 .angle .angle
-    * set .mapProgress *tmp92
-    * op mul *tmp93 3.8197185279121366 .angle
-    * set :locateOreAway:distance *tmp93
-    * ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp94 *tmp95
+  276 op mul .mapProgress .angle .angle
+  277 op mul :locateOreAway:distance 3.8197185279121366 .angle
+  278 ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp94 0
   279 op equal *tmp96 *tmp94 false
   280 jump *label56 equal *tmp96 false
   281 set *tmp68 false
 
   287 op abs *tmp99 *tmp98
   288 op sub *tmp100 :locateOreAway:y .coreY
   289 op abs *tmp101 *tmp100
-    * op max *tmp102 *tmp99 *tmp101
-    * set :locateOreAway:coreDist *tmp102
+  290 op max :locateOreAway:coreDist *tmp99 *tmp101
   291 op sub *tmp103 :locateOreAway:x :locateOreAway:lx
   292 op sub *tmp104 :locateOreAway:y :locateOreAway:ly
-    * op len *tmp105 *tmp103 *tmp104
-    * set :locateOreAway:unitDist *tmp105
+  293 op len :locateOreAway:unitDist *tmp103 *tmp104
   294 op greaterThanEq *tmp106 :locateOreAway:coreDist 7
   295 jump *label58 equal *tmp106 false
   296 op lessThan *tmp108 :locateOreAway:unitDist :locateOreAway:distance
 
   302 set :visited:i 0
   303 label *label63
   304 jump *label65 greaterThanEq :visited:i *tmp111
-    * set *tmp112 :visited:index
-    * read *tmp113 bank1 *tmp112
-    * set :visited:lx *tmp113
+  305 read :visited:lx bank1 :visited:index
   306 op add *tmp114 :visited:index 1
-    * set *tmp115 *tmp114
-    * read *tmp116 bank1 *tmp115
-    * set :visited:ly *tmp116
+  307 read :visited:ly bank1 *tmp114
   308 op sub *tmp117 :visited:x :visited:lx
   309 op sub *tmp118 :visited:y :visited:ly
   310 op len *tmp119 *tmp117 *tmp118
 
   328 jump *label68 equal *tmp122 false
   329 op div *tmp124 7.639437055824273 :locateOreAway:distance
   330 op add .angle .angle *tmp124
-    * op mul *tmp125 .angle .angle
-    * set .mapProgress *tmp125
+  331 op mul .mapProgress .angle .angle
   332 set *tmp68 true
   333 jump *label46 always
   334 jump *label69 always
 
   351 set :findDrillLocationLocal:oreY :locateOreAway:y
   352 op equal *tmp126 *tmp68 false
   353 jump *label70 equal *tmp126 false
-    * op greaterThan *tmp128 :findDrillLocationLocal:capacity 0
-    * set :findDrillLocationLocal*retval *tmp128
+  354 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   355 jump *label39 always
   356 jump *label71 always
   357 label *label70
 
   395 setaddr :computeRowValues*retaddr *label83 (h:*label83)
   396 call *label5 *invalid :computeRowValues*retval (m:*label83) (h:*label83)
   397 label *label83
-    * set *tmp139 :computeRowValues*retval
-    * set :findBestPosition:y1 *tmp139
+  398 set :findBestPosition:y1 :computeRowValues*retval
   399 op sub *tmp140 :findBestPosition:y 1
   400 set :computeRowValues:x :findBestPosition:x
   401 set :computeRowValues:y *tmp140
 
   404 setaddr :computeRowValues*retaddr *label84 (h:*label84)
   405 call *label5 *invalid :computeRowValues*retval (m:*label84) (h:*label84)
   406 label *label84
-    * set *tmp141 :computeRowValues*retval
-    * set :findBestPosition:y2 *tmp141
+  407 set :findBestPosition:y2 :computeRowValues*retval
   408 op add *tmp142 :findBestPosition:y 0
   409 set :computeRowValues:x :findBestPosition:x
   410 set :computeRowValues:y *tmp142
 
   413 setaddr :computeRowValues*retaddr *label85 (h:*label85)
   414 call *label5 *invalid :computeRowValues*retval (m:*label85) (h:*label85)
   415 label *label85
-    * set *tmp143 :computeRowValues*retval
-    * set :findBestPosition:y3 *tmp143
+  416 set :findBestPosition:y3 :computeRowValues*retval
   417 op add *tmp144 :findBestPosition:y 1
   418 set :computeRowValues:x :findBestPosition:x
   419 set :computeRowValues:y *tmp144
 
   422 setaddr :computeRowValues*retaddr *label86 (h:*label86)
   423 call *label5 *invalid :computeRowValues*retval (m:*label86) (h:*label86)
   424 label *label86
-    * set *tmp145 :computeRowValues*retval
-    * set :findBestPosition:y4 *tmp145
+  425 set :findBestPosition:y4 :computeRowValues*retval
   426 op add *tmp146 :findBestPosition:y 2
   427 set :computeRowValues:x :findBestPosition:x
   428 set :computeRowValues:y *tmp146
 
   431 setaddr :computeRowValues*retaddr *label87 (h:*label87)
   432 call *label5 *invalid :computeRowValues*retval (m:*label87) (h:*label87)
   433 label *label87
-    * set *tmp147 :computeRowValues*retval
-    * set :findBestPosition:y5 *tmp147
+  434 set :findBestPosition:y5 :computeRowValues*retval
   435 set :findBestPosition:best 0
   436 set :findDrillLocationLocal:diffX 0
   437 set :findDrillLocationLocal:diffY 0
   438 jump *label88 equal :findBestPosition:large false
   439 op add *tmp149 :findBestPosition:y1 :findBestPosition:y2
-    * op add *tmp150 *tmp149 :findBestPosition:y3
-    * set :findBestPosition:row1 *tmp150
+  440 op add :findBestPosition:row1 *tmp149 :findBestPosition:y3
   441 op add *tmp151 :findBestPosition:y2 :findBestPosition:y3
-    * op add *tmp152 *tmp151 :findBestPosition:y4
-    * set :findBestPosition:row2 *tmp152
+  442 op add :findBestPosition:row2 *tmp151 :findBestPosition:y4
   443 op add *tmp153 :findBestPosition:y3 :findBestPosition:y4
-    * op add *tmp154 *tmp153 :findBestPosition:y5
-    * set :findBestPosition:row3 *tmp154
+  444 op add :findBestPosition:row3 *tmp153 :findBestPosition:y5
   445 set :updateRowPositions3:dy -1
   446 set :updateRowPositions3:row :findBestPosition:row1
-    * unpackcolor :updateRowPositions3:col1 :updateRowPositions3:col2 :updateRowPositions3:col3 *tmp155 :updateRowPositions3:row
+  447 unpackcolor :updateRowPositions3:col1 :updateRowPositions3:col2 :updateRowPositions3:col3 0 :updateRowPositions3:row
   448 set :updatePosition:dx -1
   449 set :updatePosition:dy :updateRowPositions3:dy
   450 set :updatePosition:value :updateRowPositions3:col1
 
   499 label *label90
   500 set :updateRowPositions3.1:dy 0
   501 set :updateRowPositions3.1:row :findBestPosition:row2
-    * unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 *tmp168 :updateRowPositions3.1:row
+  502 unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 0 :updateRowPositions3.1:row
   503 set :updatePosition.3:dx -1
   504 set :updatePosition.3:dy :updateRowPositions3.1:dy
   505 set :updatePosition.3:value :updateRowPositions3.1:col1
 
   554 label *label106
   555 set :updateRowPositions3.2:dy 1
   556 set :updateRowPositions3.2:row :findBestPosition:row3
-    * unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 *tmp181 :updateRowPositions3.2:row
+  557 unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 0 :updateRowPositions3.2:row
   558 set :updatePosition.6:dx -1
   559 set :updatePosition.6:dy :updateRowPositions3.2:dy
   560 set :updatePosition.6:value :updateRowPositions3.2:col1
 
   609 label *label122
   610 jump *label89 always
   611 label *label88
-    * op add *tmp194 :findBestPosition:y1 :findBestPosition:y2
-    * set :findBestPosition:row1.1 *tmp194
-    * op add *tmp195 :findBestPosition:y2 :findBestPosition:y3
-    * set :findBestPosition:row2.1 *tmp195
-    * op add *tmp196 :findBestPosition:y3 :findBestPosition:y4
-    * set :findBestPosition:row3.1 *tmp196
-    * op add *tmp197 :findBestPosition:y4 :findBestPosition:y5
-    * set :findBestPosition:row4 *tmp197
+  612 op add :findBestPosition:row1.1 :findBestPosition:y1 :findBestPosition:y2
+  613 op add :findBestPosition:row2.1 :findBestPosition:y2 :findBestPosition:y3
+  614 op add :findBestPosition:row3.1 :findBestPosition:y3 :findBestPosition:y4
+  615 op add :findBestPosition:row4 :findBestPosition:y4 :findBestPosition:y5
   616 set :updateRowPositions4:dy -1.5
   617 set :updateRowPositions4:row :findBestPosition:row1.1
   618 unpackcolor :updateRowPositions4:col1 :updateRowPositions4:col2 :updateRowPositions4:col3 :updateRowPositions4:col4 :updateRowPositions4:row
 
   902 label *label217
   903 label *label201
   904 label *label89
-    * op mul *tmp262 :findBestPosition:best 255
-    * set *tmp137 *tmp262
+  905 op mul *tmp137 :findBestPosition:best 255
   906 jump *label82 always
   907 set *tmp137 null
   908 label *label82
   909 set :findDrillLocationLocal:score *tmp137
   910 op greaterThan *tmp263 :findDrillLocationLocal:score :findDrillLocationLocal:capacity
   911 jump *label222 equal *tmp263 false
-    * op add *tmp265 :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
-    * set :findDrillLocationLocal:dx *tmp265
-    * op add *tmp266 :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:dy *tmp266
+  912 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
+  913 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   914 set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
   915 op lessThan *tmp267 :findDrillLocationLocal:limit 1000
   916 jump *label224 equal *tmp267 false
 
   931 label *label223
   932 op greaterThan *tmp271 :findDrillLocationLocal:score :findDrillLocationLocal:best
   933 jump *label228 equal *tmp271 false
-    * op add *tmp273 :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
-    * set :findDrillLocationLocal:bestX *tmp273
-    * op add *tmp274 :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:bestY *tmp274
+  934 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
+  935 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   936 set :findDrillLocationLocal:best :findDrillLocationLocal:score
   937 jump *label229 always
   938 label *label228
 
   944 label *label230
   945 label *label231
   946 set :findDrillLocationLocal:last :findDrillLocationLocal:score
-    * op mul *tmp277 :findDrillLocationLocal:diffX 1.1
-    * set :round:x *tmp277
+  947 op mul :round:x :findDrillLocationLocal:diffX 1.1
   948 op add *tmp279 :round:x 0.5
-    * op floor *tmp280 *tmp279
-    * set *tmp278 *tmp280
+  949 op floor *tmp278 *tmp279
   950 label *label232
   951 op add :findDrillLocationLocal:oreX :findDrillLocationLocal:oreX *tmp278
-    * op mul *tmp281 :findDrillLocationLocal:diffY 1.1
-    * set :round.1:x *tmp281
+  952 op mul :round.1:x :findDrillLocationLocal:diffY 1.1
   953 op add *tmp283 :round.1:x 0.5
-    * op floor *tmp284 *tmp283
-    * set *tmp282 *tmp284
+  954 op floor *tmp282 *tmp283
   955 label *label233
   956 op add :findDrillLocationLocal:oreY :findDrillLocationLocal:oreY *tmp282
   957 op sub *tmp285 :findDrillLocationLocal:oreX .coreX
 
   969 jump *label79 always
   970 label *label81
   971 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
-    * set *tmp292 :findDrillLocationLocal:count
-    * write :findDrillLocationLocal:best bank1 *tmp292
+  972 write :findDrillLocationLocal:best bank1 :findDrillLocationLocal:count
   973 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
-    * set *tmp294 :findDrillLocationLocal:count
-    * write :findDrillLocationLocal:bestX bank1 *tmp294
+  974 write :findDrillLocationLocal:bestX bank1 :findDrillLocationLocal:count
   975 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
-    * set *tmp296 :findDrillLocationLocal:count
-    * write :findDrillLocationLocal:bestY bank1 *tmp296
+  976 write :findDrillLocationLocal:bestY bank1 :findDrillLocationLocal:count
   977 op add .locations .locations 1
   978 label *label44
   979 jump *label43 always
 
  1037 select :isBlocked:result equal type @air 0 1
  1038 set *tmp318 :isBlocked:result
  1039 label *label255
-    * op or *tmp319 *tmp315 *tmp318
-    * set :createTerrainMask:result *tmp319
+ 1040 op or :createTerrainMask:result *tmp315 *tmp318
  1041 label *label253
  1042 op sub :createTerrainMask:c :createTerrainMask:c 1
  1043 jump *label252 always
 
  1058 jump *label259 greaterThan :findPossiblePlacement:y 3
  1059 op add *tmp320 :findPossiblePlacement:y 3
  1060 op mul *tmp321 7 *tmp320
-    * op shl *tmp322 :findPossiblePlacement:placementMask *tmp321
-    * set :findPossiblePlacement:mask *tmp322
+ 1061 op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp321
  1062 set :findPossiblePlacement:x -3
  1063 label *label260
  1064 jump *label262 greaterThan :findPossiblePlacement:x 3
 
  1067 jump *label263 equal *tmp324 false
  1068 op mul *tmp326 :findPossiblePlacement:y 7
  1069 op add *tmp327 24 *tmp326
-    * op add *tmp328 *tmp327 :findPossiblePlacement:x
-    * set :findPossiblePlacement*retval *tmp328
+ 1070 op add :findPossiblePlacement*retval *tmp327 :findPossiblePlacement:x
  1071 jump *label256 always
  1072 jump *label264 always
  1073 label *label263
 
  1111 label *label270
  1112 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1113 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp335 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp335
+ 1114 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1115 op greaterThanEq *tmp336 :tryPlaceGenerator:shift 0
  1116 jump *label271 equal *tmp336 false
  1117 op add *tmp338 :tryPlaceGenerator:centerX 0.5
-    * op add *tmp339 *tmp338 :tryPlaceGenerator:c
-    * set .water2X *tmp339
+ 1118 op add .water2X *tmp338 :tryPlaceGenerator:c
  1119 op add *tmp340 :tryPlaceGenerator:centerY 0.5
-    * op add *tmp341 *tmp340 :tryPlaceGenerator:r
-    * set .water2Y *tmp341
+ 1120 op add .water2Y *tmp340 :tryPlaceGenerator:r
  1121 op add *tmp342 :tryPlaceGenerator:centerX 2.5
-    * op add *tmp343 *tmp342 :tryPlaceGenerator:c
-    * set .generatorX *tmp343
+ 1122 op add .generatorX *tmp342 :tryPlaceGenerator:c
  1123 op add *tmp344 :tryPlaceGenerator:centerY 0.5
-    * op add *tmp345 *tmp344 :tryPlaceGenerator:r
-    * set .generatorY *tmp345
+ 1124 op add .generatorY *tmp344 :tryPlaceGenerator:r
  1125 op shl *tmp346 :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:shift
  1126 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp346
  1127 jump *label272 always
 
  1135 label *label273
  1136 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1137 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp347 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp347
+ 1138 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1139 op lessThan *tmp348 :tryPlaceGenerator:shift 0
  1140 jump *label274 equal *tmp348 false
  1141 set :tryPlaceGenerator*retval false
 
  1144 label *label274
  1145 label *label275
  1146 op add *tmp350 :tryPlaceGenerator:centerX 0.5
-    * op add *tmp351 *tmp350 :tryPlaceGenerator:c
-    * set .water2X *tmp351
+ 1147 op add .water2X *tmp350 :tryPlaceGenerator:c
  1148 op add *tmp352 :tryPlaceGenerator:centerY 0.5
-    * op add *tmp353 *tmp352 :tryPlaceGenerator:r
-    * set .water2Y *tmp353
+ 1149 op add .water2Y *tmp352 :tryPlaceGenerator:r
  1150 op add *tmp354 :tryPlaceGenerator:centerX 0.5
-    * op add *tmp355 *tmp354 :tryPlaceGenerator:c
-    * set .generatorX *tmp355
+ 1151 op add .generatorX *tmp354 :tryPlaceGenerator:c
  1152 op add *tmp356 :tryPlaceGenerator:centerY 2.5
-    * op add *tmp357 *tmp356 :tryPlaceGenerator:r
-    * set .generatorY *tmp357
+ 1153 op add .generatorY *tmp356 :tryPlaceGenerator:r
  1154 op shl *tmp358 :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:shift
  1155 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp358
  1156 label *label272
 
  1163 label *label276
  1164 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1165 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp359 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp359
+ 1166 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1167 op lessThan *tmp360 :tryPlaceGenerator:shift 0
  1168 jump *label277 equal *tmp360 false
  1169 set :tryPlaceGenerator*retval false
 
  1171 jump *label278 always
  1172 label *label277
  1173 label *label278
-    * op add *tmp362 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * set .nodeX *tmp362
-    * op add *tmp363 :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * set .nodeY *tmp363
+ 1174 op add .nodeX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
+ 1175 op add .nodeY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
  1176 op shl *tmp364 1 :tryPlaceGenerator:shift
  1177 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp364
  1178 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1184 label *label279
  1185 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1186 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp365 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp365
+ 1187 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1188 op lessThan *tmp366 :tryPlaceGenerator:shift 0
  1189 jump *label280 equal *tmp366 false
  1190 set :tryPlaceGenerator*retval false
 
  1192 jump *label281 always
  1193 label *label280
  1194 label *label281
-    * op add *tmp368 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * set .panelX *tmp368
-    * op add *tmp369 :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * set .panelY *tmp369
+ 1195 op add .panelX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
+ 1196 op add .panelY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
  1197 op shl *tmp370 1 :tryPlaceGenerator:shift
  1198 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp370
  1199 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1205 label *label282
  1206 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1207 set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set *tmp371 :findPossiblePlacement*retval
-    * set :tryPlaceGenerator:shift *tmp371
+ 1208 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
  1209 op lessThan *tmp372 :tryPlaceGenerator:shift 0
  1210 jump *label283 equal *tmp372 false
  1211 set :tryPlaceGenerator*retval false
 
  1213 jump *label284 always
  1214 label *label283
  1215 label *label284
-    * op add *tmp374 :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * set .batteryX *tmp374
-    * op add *tmp375 :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * set .batteryY *tmp375
+ 1216 op add .batteryX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
+ 1217 op add .batteryY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
  1218 op shl *tmp376 1 :tryPlaceGenerator:shift
  1219 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp376
  1220 set :tryPlaceGenerator*retval true
 
  1237 setaddr :createTerrainMask*retaddr *label286 (h:*label286)
  1238 call *label9 *invalid :createTerrainMask*retval (m:*label286) (h:*label286)
  1239 label *label286
-    * set *tmp377 :createTerrainMask*retval
-    * set :layoutThoriumDrillAtLocation:plainTerrainMask *tmp377
+ 1240 set :layoutThoriumDrillAtLocation:plainTerrainMask :createTerrainMask*retval
  1241 set :createFixedMatrix:row0 0b0000000
  1242 set :createFixedMatrix:row1 0b0000000
  1243 set :createFixedMatrix:row2 0b0011100
 
  1257 op shl *tmp388 :createFixedMatrix:row5 35
  1258 op or *tmp389 *tmp387 *tmp388
  1259 op shl *tmp390 :createFixedMatrix:row6 42
-    * op or *tmp391 *tmp389 *tmp390
-    * set *tmp378 *tmp391
+ 1260 op or *tmp378 *tmp389 *tmp390
  1261 label *label287
-    * op or *tmp392 :layoutThoriumDrillAtLocation:plainTerrainMask *tmp378
-    * set :layoutThoriumDrillAtLocation:terrainMask *tmp392
+ 1262 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:plainTerrainMask *tmp378
  1263 set :createFixedMatrix.1:row0 0b1000001
  1264 set :createFixedMatrix.1:row1 0b0000000
  1265 set :createFixedMatrix.1:row2 0b0011100
 
  1279 op shl *tmp403 :createFixedMatrix.1:row5 35
  1280 op or *tmp404 *tmp402 *tmp403
  1281 op shl *tmp405 :createFixedMatrix.1:row6 42
-    * op or *tmp406 *tmp404 *tmp405
-    * set *tmp393 *tmp406
+ 1282 op or *tmp393 *tmp404 *tmp405
  1283 label *label288
-    * op or *tmp407 :layoutThoriumDrillAtLocation:terrainMask *tmp393
-    * set :layoutThoriumDrillAtLocation:cornersMask *tmp407
+ 1284 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp393
  1285 set :createFixedMatrix.2:row0 0b11
  1286 set :createFixedMatrix.2:row1 0b11
  1287 op shl *tmp409 :createFixedMatrix.2:row0 0
  1288 op shl *tmp410 :createFixedMatrix.2:row1 7
-    * op or *tmp411 *tmp409 *tmp410
-    * set *tmp408 *tmp411
+ 1289 op or *tmp408 *tmp409 *tmp410
  1290 label *label289
  1291 set :layoutThoriumDrillAtLocation:extractorMask *tmp408
  1292 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
 
  1298 label *label290
  1299 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1300 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
-    * set *tmp412 :findPossiblePlacement*retval
-    * set :layoutThoriumDrillAtLocation:shift *tmp412
+ 1301 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
  1302 op greaterThanEq *tmp413 :layoutThoriumDrillAtLocation:shift 0
  1303 jump *label291 equal *tmp413 false
  1304 op add *tmp415 .drillX 0.5
-    * op add *tmp416 *tmp415 :layoutThoriumDrillAtLocation:c
-    * set .water1X *tmp416
+ 1305 op add .water1X *tmp415 :layoutThoriumDrillAtLocation:c
  1306 op add *tmp417 .drillY 0.5
-    * op add *tmp418 *tmp417 :layoutThoriumDrillAtLocation:r
-    * set .water1Y *tmp418
+ 1307 op add .water1Y *tmp417 :layoutThoriumDrillAtLocation:r
  1308 op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:shift
  1309 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
  1310 jump *label292 always
 
  1314 set :createFixedMatrix.3:row1 0b1111
  1315 op shl *tmp420 :createFixedMatrix.3:row0 0
  1316 op shl *tmp421 :createFixedMatrix.3:row1 7
-    * op or *tmp422 *tmp420 *tmp421
-    * set *tmp419 *tmp422
+ 1317 op or *tmp419 *tmp420 *tmp421
  1318 label *label293
  1319 set :layoutThoriumDrillAtLocation:generatorHorizontal *tmp419
  1320 set :createFixedMatrix.4:row0 0b11
 
  1327 op shl *tmp427 :createFixedMatrix.4:row2 14
  1328 op or *tmp428 *tmp426 *tmp427
  1329 op shl *tmp429 :createFixedMatrix.4:row3 21
-    * op or *tmp430 *tmp428 *tmp429
-    * set *tmp423 *tmp430
+ 1330 op or *tmp423 *tmp428 *tmp429
  1331 label *label294
  1332 set :layoutThoriumDrillAtLocation:generatorVertical *tmp423
  1333 set :tryPlaceGenerator:centerX .drillX
 
  1338 setaddr :tryPlaceGenerator*retaddr *label295 (h:*label295)
  1339 call *label11 *invalid :tryPlaceGenerator*retval (m:*label295) (h:*label295)
  1340 label *label295
-    * set *tmp431 :tryPlaceGenerator*retval
-    * jump *label296 equal *tmp431 false
+ 1341 jump *label296 equal :tryPlaceGenerator*retval false
  1342 set :layoutThoriumDrillAtLocation*retval true
  1343 jump *label285 always
  1344 jump *label297 always
 
  1363 set :layoutThoriumDrillAtLocation:sy -3
  1364 setaddr *tmp433 *label304
  1365 label *label298
-    * op add *tmp434 .drillX :layoutThoriumDrillAtLocation:sx
-    * set :layoutThoriumDrillAtLocation:newX *tmp434
-    * op add *tmp435 .drillY :layoutThoriumDrillAtLocation:sy
-    * set :layoutThoriumDrillAtLocation:newY *tmp435
+ 1366 op add :layoutThoriumDrillAtLocation:newX .drillX :layoutThoriumDrillAtLocation:sx
+ 1367 op add :layoutThoriumDrillAtLocation:newY .drillY :layoutThoriumDrillAtLocation:sy
  1368 set :createTerrainMask:x :layoutThoriumDrillAtLocation:newX
  1369 set :createTerrainMask:y :layoutThoriumDrillAtLocation:newY
  1370 setaddr :createTerrainMask*retaddr *label305 (h:*label305)
  1371 call *label9 *invalid :createTerrainMask*retval (m:*label305) (h:*label305)
  1372 label *label305
-    * set *tmp436 :createTerrainMask*retval
-    * set :layoutThoriumDrillAtLocation:newTerrainMask *tmp436
+ 1373 set :layoutThoriumDrillAtLocation:newTerrainMask :createTerrainMask*retval
  1374 op sub *tmp437 0 :layoutThoriumDrillAtLocation:sx
  1375 op sub *tmp438 0 :layoutThoriumDrillAtLocation:sy
  1376 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
 
  1388 label *label307
  1389 label *label308
  1390 op mul *tmp446 7 :shiftMask:shiftY
-    * op add *tmp447 :shiftMask:shiftX *tmp446
-    * set :shiftMask:shift *tmp447
+ 1391 op add :shiftMask:shift :shiftMask:shiftX *tmp446
  1392 op greaterThan *tmp448 :shiftMask:shift 0
  1393 jump *label309 equal *tmp448 false
-    * op shr *tmp450 562949953421311 :shiftMask:shift
-    * set :shiftMask:clearMask *tmp450
+ 1394 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
  1395 op and *tmp451 :shiftMask:mask :shiftMask:clearMask
-    * op shl *tmp452 *tmp451 :shiftMask:shift
-    * set :shiftMask:mask *tmp452
+ 1396 op shl :shiftMask:mask *tmp451 :shiftMask:shift
  1397 jump *label310 always
  1398 label *label309
  1399 op sub *tmp453 0 :shiftMask:shift
 
  1403 jump *label311 equal *tmp454 false
  1404 op abs *tmp456 :shiftMask:shiftX
  1405 op sub *tmp457 7 *tmp456
-    * op shr *tmp458 0b1111111 *tmp457
-    * set :shiftMask:keep *tmp458
+ 1406 op shr :shiftMask:keep 0b1111111 *tmp457
  1407 op greaterThan *tmp459 :shiftMask:shiftX 0
  1408 jump *label313 equal *tmp459 false
  1409 op abs *tmp461 :shiftMask:shiftX
 
  1427 set *tmp439 null
  1428 label *label306
  1429 set :layoutThoriumDrillAtLocation:shiftedMask *tmp439
-    * op or *tmp466 :layoutThoriumDrillAtLocation:newTerrainMask :layoutThoriumDrillAtLocation:shiftedMask
-    * set :layoutThoriumDrillAtLocation:combinedMask *tmp466
+ 1430 op or :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:newTerrainMask :layoutThoriumDrillAtLocation:shiftedMask
  1431 op add *tmp467 .drillX :layoutThoriumDrillAtLocation:sx
  1432 op add *tmp468 .drillY :layoutThoriumDrillAtLocation:sy
  1433 set :tryPlaceGenerator:centerX *tmp467
 
  1438 setaddr :tryPlaceGenerator*retaddr *label315 (h:*label315)
  1439 call *label11 *invalid :tryPlaceGenerator*retval (m:*label315) (h:*label315)
  1440 label *label315
-    * set *tmp469 :tryPlaceGenerator*retval
-    * jump *label316 equal *tmp469 false
+ 1441 jump *label316 equal :tryPlaceGenerator*retval false
  1442 set :layoutThoriumDrillAtLocation*retval true
  1443 jump *label285 always
  1444 jump *label317 always

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-2 instructions):
 
   217 set :findDrillLocationLocal:oreX 0
   218 set :findDrillLocationLocal:oreY 0
   219 label *label43
-    * jump *label45 equal true false
   220 set :findDrillLocationLocal:best 0
   221 set :findDrillLocationLocal:bestX :findDrillLocationLocal:x
   222 set :findDrillLocationLocal:bestY :findDrillLocationLocal:y
 
   381 label *label74
   382 set :findDrillLocationLocal:last 0
   383 label *label79
-    * jump *label81 equal true false
   384 set :findBestPosition:x :findDrillLocationLocal:oreX
   385 set :findBestPosition:y :findDrillLocationLocal:oreY
   386 set :findBestPosition:ore :findDrillLocationLocal:ore

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-83 instructions):
 
   102 label *label28
   103 label *label25
   104 ucontrol within :trace:x :trace:y 5 *tmp36
-    * op equal *tmp37 *tmp36 false
-    * jump *label24 notEqual *tmp37 false
+  105 jump *label24 equal *tmp36 false
   106 label *label26
   107 label *label23
   108 return :trace*retaddr
 
   125 set :moveTo.1:radius 6
   126 label *label32
   127 ucontrol within :moveTo.1:x :moveTo.1:y :moveTo.1:radius *tmp42
-    * op equal *tmp43 *tmp42 false
-    * jump *label34 equal *tmp43 false
+  128 jump *label34 notEqual *tmp42 false
   129 op sub *tmp44 :moveTo.1:radius 0.5
   130 ucontrol approach :moveTo.1:x :moveTo.1:y *tmp44
   131 label *label33
 
   191 set :findDrillLocationLocal:dy :findDrillLocationLocal:capacity
   192 set :findDrillLocationLocal:dx :findDrillLocationLocal:dy
   193 set .mapSpots :findDrillLocationLocal:dx
-    * op greaterThanEq *tmp58 :findDrillLocationLocal:limit 1000
-    * jump *label40 equal *tmp58 false
+  194 jump *label40 lessThan :findDrillLocationLocal:limit 1000
   195 set :findMaxOreDistance:ore :findDrillLocationLocal:ore
   196 setaddr :findMaxOreDistance*retaddr *label42 (h:*label42)
   197 call *label7 *invalid :findMaxOreDistance*retval (m:*label42) (h:*label42)
 
   229 op max .angle .angle @pi
   230 op mul .mapProgress .angle .angle
   231 label *label47
-    * op lessThan *tmp72 :locateOreAway:distance :locateOreAway:distanceLimit
-    * jump *label49 equal *tmp72 false
+  232 jump *label49 greaterThanEq :locateOreAway:distance :locateOreAway:distanceLimit
   233 op div :locateOreAway:a .angle @degToRad
   234 op sin *tmp74 :locateOreAway:a
   235 op mul *tmp75 *tmp74 :locateOreAway:distance
 
   258 set :moveTo.2:radius 5
   259 label *label53
   260 ucontrol within :moveTo.2:x :moveTo.2:y :moveTo.2:radius *tmp88
-    * op equal *tmp89 *tmp88 false
-    * jump *label55 equal *tmp89 false
+  261 jump *label55 notEqual *tmp88 false
   262 op sub *tmp90 :moveTo.2:radius 0.5
   263 ucontrol approach :moveTo.2:x :moveTo.2:y *tmp90
   264 label *label54
 
   270 op mul .mapProgress .angle .angle
   271 op mul :locateOreAway:distance 3.8197185279121366 .angle
   272 ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp94 0
-    * op equal *tmp96 *tmp94 false
-    * jump *label56 equal *tmp96 false
+  273 jump *label56 notEqual *tmp94 false
   274 set *tmp68 false
   275 jump *label46 always
   276 jump *label57 always
 
   284 op sub *tmp103 :locateOreAway:x :locateOreAway:lx
   285 op sub *tmp104 :locateOreAway:y :locateOreAway:ly
   286 op len :locateOreAway:unitDist *tmp103 *tmp104
-    * op greaterThanEq *tmp106 :locateOreAway:coreDist 7
-    * jump *label58 equal *tmp106 false
-    * op lessThan *tmp108 :locateOreAway:unitDist :locateOreAway:distance
-    * jump *label60 equal *tmp108 false
+  287 jump *label58 lessThan :locateOreAway:coreDist 7
+  288 jump *label60 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
   289 set :visited:x :locateOreAway:x
   290 set :visited:y :locateOreAway:y
   291 set :visited:index 1
 
   299 op sub *tmp117 :visited:x :visited:lx
   300 op sub *tmp118 :visited:y :visited:ly
   301 op len *tmp119 *tmp117 *tmp118
-    * op lessThan *tmp120 *tmp119 7
-    * jump *label66 equal *tmp120 false
+  302 jump *label66 greaterThanEq *tmp119 7
   303 set *tmp110 true
   304 jump *label62 always
   305 jump *label67 always
 
   314 jump *label62 always
   315 set *tmp110 null
   316 label *label62
-    * op equal *tmp122 *tmp110 false
-    * jump *label68 equal *tmp122 false
+  317 jump *label68 notEqual *tmp110 false
   318 op div *tmp124 7.639437055824273 :locateOreAway:distance
   319 op add .angle .angle *tmp124
   320 op mul .mapProgress .angle .angle
 
   338 label *label46
   339 set :findDrillLocationLocal:oreX :locateOreAway:x
   340 set :findDrillLocationLocal:oreY :locateOreAway:y
-    * op equal *tmp126 *tmp68 false
-    * jump *label70 equal *tmp126 false
+  341 jump *label70 notEqual *tmp68 false
   342 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   343 jump *label39 always
   344 jump *label71 always
   345 label *label70
   346 label *label71
-    * op greaterThanEq *tmp129 :findDrillLocationLocal:limit 1000
-    * jump *label72 equal *tmp129 false
+  347 jump *label72 lessThan :findDrillLocationLocal:limit 1000
   348 op add .mapSpots .mapSpots 1
   349 jump *label73 always
   350 label *label72
 
   358 set :moveTo.4:radius 6
   359 label *label76
   360 ucontrol within :moveTo.4:x :moveTo.4:y :moveTo.4:radius *tmp134
-    * op equal *tmp135 *tmp134 false
-    * jump *label78 equal *tmp135 false
+  361 jump *label78 notEqual *tmp134 false
   362 op sub *tmp136 :moveTo.4:radius 0.5
   363 ucontrol approach :moveTo.4:x :moveTo.4:y *tmp136
   364 label *label77
 
   433 set :updatePosition:dx -1
   434 set :updatePosition:dy :updateRowPositions3:dy
   435 set :updatePosition:value :updateRowPositions3:col1
-    * op lessThan *tmp156 :updatePosition:value 0.0392156862745098
-    * jump *label92 equal *tmp156 false
-    * op greaterThan *tmp158 :updatePosition:value :findBestPosition:best
-    * jump *label94 equal *tmp158 false
+  436 jump *label92 greaterThanEq :updatePosition:value 0.0392156862745098
+  437 jump *label94 lessThanEq :updatePosition:value :findBestPosition:best
   438 set :findDrillLocationLocal:diffX :updatePosition:dx
   439 set :findDrillLocationLocal:diffY :updatePosition:dy
   440 set :findBestPosition:best :updatePosition:value
 
   448 set :updatePosition.1:dx 0
   449 set :updatePosition.1:dy :updateRowPositions3:dy
   450 set :updatePosition.1:value :updateRowPositions3:col2
-    * op lessThan *tmp160 :updatePosition.1:value 0.0392156862745098
-    * jump *label97 equal *tmp160 false
-    * op greaterThan *tmp162 :updatePosition.1:value :findBestPosition:best
-    * jump *label99 equal *tmp162 false
+  451 jump *label97 greaterThanEq :updatePosition.1:value 0.0392156862745098
+  452 jump *label99 lessThanEq :updatePosition.1:value :findBestPosition:best
   453 set :findDrillLocationLocal:diffX :updatePosition.1:dx
   454 set :findDrillLocationLocal:diffY :updatePosition.1:dy
   455 set :findBestPosition:best :updatePosition.1:value
 
   463 set :updatePosition.2:dx 1
   464 set :updatePosition.2:dy :updateRowPositions3:dy
   465 set :updatePosition.2:value :updateRowPositions3:col3
-    * op lessThan *tmp164 :updatePosition.2:value 0.0392156862745098
-    * jump *label102 equal *tmp164 false
-    * op greaterThan *tmp166 :updatePosition.2:value :findBestPosition:best
-    * jump *label104 equal *tmp166 false
+  466 jump *label102 greaterThanEq :updatePosition.2:value 0.0392156862745098
+  467 jump *label104 lessThanEq :updatePosition.2:value :findBestPosition:best
   468 set :findDrillLocationLocal:diffX :updatePosition.2:dx
   469 set :findDrillLocationLocal:diffY :updatePosition.2:dy
   470 set :findBestPosition:best :updatePosition.2:value
 
   482 set :updatePosition.3:dx -1
   483 set :updatePosition.3:dy :updateRowPositions3.1:dy
   484 set :updatePosition.3:value :updateRowPositions3.1:col1
-    * op lessThan *tmp169 :updatePosition.3:value 0.0392156862745098
-    * jump *label108 equal *tmp169 false
-    * op greaterThan *tmp171 :updatePosition.3:value :findBestPosition:best
-    * jump *label110 equal *tmp171 false
+  485 jump *label108 greaterThanEq :updatePosition.3:value 0.0392156862745098
+  486 jump *label110 lessThanEq :updatePosition.3:value :findBestPosition:best
   487 set :findDrillLocationLocal:diffX :updatePosition.3:dx
   488 set :findDrillLocationLocal:diffY :updatePosition.3:dy
   489 set :findBestPosition:best :updatePosition.3:value
 
   497 set :updatePosition.4:dx 0
   498 set :updatePosition.4:dy :updateRowPositions3.1:dy
   499 set :updatePosition.4:value :updateRowPositions3.1:col2
-    * op lessThan *tmp173 :updatePosition.4:value 0.0392156862745098
-    * jump *label113 equal *tmp173 false
-    * op greaterThan *tmp175 :updatePosition.4:value :findBestPosition:best
-    * jump *label115 equal *tmp175 false
+  500 jump *label113 greaterThanEq :updatePosition.4:value 0.0392156862745098
+  501 jump *label115 lessThanEq :updatePosition.4:value :findBestPosition:best
   502 set :findDrillLocationLocal:diffX :updatePosition.4:dx
   503 set :findDrillLocationLocal:diffY :updatePosition.4:dy
   504 set :findBestPosition:best :updatePosition.4:value
 
   512 set :updatePosition.5:dx 1
   513 set :updatePosition.5:dy :updateRowPositions3.1:dy
   514 set :updatePosition.5:value :updateRowPositions3.1:col3
-    * op lessThan *tmp177 :updatePosition.5:value 0.0392156862745098
-    * jump *label118 equal *tmp177 false
-    * op greaterThan *tmp179 :updatePosition.5:value :findBestPosition:best
-    * jump *label120 equal *tmp179 false
+  515 jump *label118 greaterThanEq :updatePosition.5:value 0.0392156862745098
+  516 jump *label120 lessThanEq :updatePosition.5:value :findBestPosition:best
   517 set :findDrillLocationLocal:diffX :updatePosition.5:dx
   518 set :findDrillLocationLocal:diffY :updatePosition.5:dy
   519 set :findBestPosition:best :updatePosition.5:value
 
   531 set :updatePosition.6:dx -1
   532 set :updatePosition.6:dy :updateRowPositions3.2:dy
   533 set :updatePosition.6:value :updateRowPositions3.2:col1
-    * op lessThan *tmp182 :updatePosition.6:value 0.0392156862745098
-    * jump *label124 equal *tmp182 false
-    * op greaterThan *tmp184 :updatePosition.6:value :findBestPosition:best
-    * jump *label126 equal *tmp184 false
+  534 jump *label124 greaterThanEq :updatePosition.6:value 0.0392156862745098
+  535 jump *label126 lessThanEq :updatePosition.6:value :findBestPosition:best
   536 set :findDrillLocationLocal:diffX :updatePosition.6:dx
   537 set :findDrillLocationLocal:diffY :updatePosition.6:dy
   538 set :findBestPosition:best :updatePosition.6:value
 
   546 set :updatePosition.7:dx 0
   547 set :updatePosition.7:dy :updateRowPositions3.2:dy
   548 set :updatePosition.7:value :updateRowPositions3.2:col2
-    * op lessThan *tmp186 :updatePosition.7:value 0.0392156862745098
-    * jump *label129 equal *tmp186 false
-    * op greaterThan *tmp188 :updatePosition.7:value :findBestPosition:best
-    * jump *label131 equal *tmp188 false
+  549 jump *label129 greaterThanEq :updatePosition.7:value 0.0392156862745098
+  550 jump *label131 lessThanEq :updatePosition.7:value :findBestPosition:best
   551 set :findDrillLocationLocal:diffX :updatePosition.7:dx
   552 set :findDrillLocationLocal:diffY :updatePosition.7:dy
   553 set :findBestPosition:best :updatePosition.7:value
 
   561 set :updatePosition.8:dx 1
   562 set :updatePosition.8:dy :updateRowPositions3.2:dy
   563 set :updatePosition.8:value :updateRowPositions3.2:col3
-    * op lessThan *tmp190 :updatePosition.8:value 0.0392156862745098
-    * jump *label134 equal *tmp190 false
-    * op greaterThan *tmp192 :updatePosition.8:value :findBestPosition:best
-    * jump *label136 equal *tmp192 false
+  564 jump *label134 greaterThanEq :updatePosition.8:value 0.0392156862745098
+  565 jump *label136 lessThanEq :updatePosition.8:value :findBestPosition:best
   566 set :findDrillLocationLocal:diffX :updatePosition.8:dx
   567 set :findDrillLocationLocal:diffY :updatePosition.8:dy
   568 set :findBestPosition:best :updatePosition.8:value
 
   586 set :updatePosition.9:dx -1.5
   587 set :updatePosition.9:dy :updateRowPositions4:dy
   588 set :updatePosition.9:value :updateRowPositions4:col1
-    * op lessThan *tmp198 :updatePosition.9:value 0.0392156862745098
-    * jump *label140 equal *tmp198 false
-    * op greaterThan *tmp200 :updatePosition.9:value :findBestPosition:best
-    * jump *label142 equal *tmp200 false
+  589 jump *label140 greaterThanEq :updatePosition.9:value 0.0392156862745098
+  590 jump *label142 lessThanEq :updatePosition.9:value :findBestPosition:best
   591 set :findDrillLocationLocal:diffX :updatePosition.9:dx
   592 set :findDrillLocationLocal:diffY :updatePosition.9:dy
   593 set :findBestPosition:best :updatePosition.9:value
 
   601 set :updatePosition.10:dx -0.5
   602 set :updatePosition.10:dy :updateRowPositions4:dy
   603 set :updatePosition.10:value :updateRowPositions4:col2
-    * op lessThan *tmp202 :updatePosition.10:value 0.0392156862745098
-    * jump *label145 equal *tmp202 false
-    * op greaterThan *tmp204 :updatePosition.10:value :findBestPosition:best
-    * jump *label147 equal *tmp204 false
+  604 jump *label145 greaterThanEq :updatePosition.10:value 0.0392156862745098
+  605 jump *label147 lessThanEq :updatePosition.10:value :findBestPosition:best
   606 set :findDrillLocationLocal:diffX :updatePosition.10:dx
   607 set :findDrillLocationLocal:diffY :updatePosition.10:dy
   608 set :findBestPosition:best :updatePosition.10:value
 
   616 set :updatePosition.11:dx 0.5
   617 set :updatePosition.11:dy :updateRowPositions4:dy
   618 set :updatePosition.11:value :updateRowPositions4:col3
-    * op lessThan *tmp206 :updatePosition.11:value 0.0392156862745098
-    * jump *label150 equal *tmp206 false
-    * op greaterThan *tmp208 :updatePosition.11:value :findBestPosition:best
-    * jump *label152 equal *tmp208 false
+  619 jump *label150 greaterThanEq :updatePosition.11:value 0.0392156862745098
+  620 jump *label152 lessThanEq :updatePosition.11:value :findBestPosition:best
   621 set :findDrillLocationLocal:diffX :updatePosition.11:dx
   622 set :findDrillLocationLocal:diffY :updatePosition.11:dy
   623 set :findBestPosition:best :updatePosition.11:value
 
   631 set :updatePosition.12:dx 1.5
   632 set :updatePosition.12:dy :updateRowPositions4:dy
   633 set :updatePosition.12:value :updateRowPositions4:col4
-    * op lessThan *tmp210 :updatePosition.12:value 0.0392156862745098
-    * jump *label155 equal *tmp210 false
-    * op greaterThan *tmp212 :updatePosition.12:value :findBestPosition:best
-    * jump *label157 equal *tmp212 false
+  634 jump *label155 greaterThanEq :updatePosition.12:value 0.0392156862745098
+  635 jump *label157 lessThanEq :updatePosition.12:value :findBestPosition:best
   636 set :findDrillLocationLocal:diffX :updatePosition.12:dx
   637 set :findDrillLocationLocal:diffY :updatePosition.12:dy
   638 set :findBestPosition:best :updatePosition.12:value
 
   650 set :updatePosition.13:dx -1.5
   651 set :updatePosition.13:dy :updateRowPositions4.1:dy
   652 set :updatePosition.13:value :updateRowPositions4.1:col1
-    * op lessThan *tmp214 :updatePosition.13:value 0.0392156862745098
-    * jump *label161 equal *tmp214 false
-    * op greaterThan *tmp216 :updatePosition.13:value :findBestPosition:best
-    * jump *label163 equal *tmp216 false
+  653 jump *label161 greaterThanEq :updatePosition.13:value 0.0392156862745098
+  654 jump *label163 lessThanEq :updatePosition.13:value :findBestPosition:best
   655 set :findDrillLocationLocal:diffX :updatePosition.13:dx
   656 set :findDrillLocationLocal:diffY :updatePosition.13:dy
   657 set :findBestPosition:best :updatePosition.13:value
 
   665 set :updatePosition.14:dx -0.5
   666 set :updatePosition.14:dy :updateRowPositions4.1:dy
   667 set :updatePosition.14:value :updateRowPositions4.1:col2
-    * op lessThan *tmp218 :updatePosition.14:value 0.0392156862745098
-    * jump *label166 equal *tmp218 false
-    * op greaterThan *tmp220 :updatePosition.14:value :findBestPosition:best
-    * jump *label168 equal *tmp220 false
+  668 jump *label166 greaterThanEq :updatePosition.14:value 0.0392156862745098
+  669 jump *label168 lessThanEq :updatePosition.14:value :findBestPosition:best
   670 set :findDrillLocationLocal:diffX :updatePosition.14:dx
   671 set :findDrillLocationLocal:diffY :updatePosition.14:dy
   672 set :findBestPosition:best :updatePosition.14:value
 
   680 set :updatePosition.15:dx 0.5
   681 set :updatePosition.15:dy :updateRowPositions4.1:dy
   682 set :updatePosition.15:value :updateRowPositions4.1:col3
-    * op lessThan *tmp222 :updatePosition.15:value 0.0392156862745098
-    * jump *label171 equal *tmp222 false
-    * op greaterThan *tmp224 :updatePosition.15:value :findBestPosition:best
-    * jump *label173 equal *tmp224 false
+  683 jump *label171 greaterThanEq :updatePosition.15:value 0.0392156862745098
+  684 jump *label173 lessThanEq :updatePosition.15:value :findBestPosition:best
   685 set :findDrillLocationLocal:diffX :updatePosition.15:dx
   686 set :findDrillLocationLocal:diffY :updatePosition.15:dy
   687 set :findBestPosition:best :updatePosition.15:value
 
   695 set :updatePosition.16:dx 1.5
   696 set :updatePosition.16:dy :updateRowPositions4.1:dy
   697 set :updatePosition.16:value :updateRowPositions4.1:col4
-    * op lessThan *tmp226 :updatePosition.16:value 0.0392156862745098
-    * jump *label176 equal *tmp226 false
-    * op greaterThan *tmp228 :updatePosition.16:value :findBestPosition:best
-    * jump *label178 equal *tmp228 false
+  698 jump *label176 greaterThanEq :updatePosition.16:value 0.0392156862745098
+  699 jump *label178 lessThanEq :updatePosition.16:value :findBestPosition:best
   700 set :findDrillLocationLocal:diffX :updatePosition.16:dx
   701 set :findDrillLocationLocal:diffY :updatePosition.16:dy
   702 set :findBestPosition:best :updatePosition.16:value
 
   714 set :updatePosition.17:dx -1.5
   715 set :updatePosition.17:dy :updateRowPositions4.2:dy
   716 set :updatePosition.17:value :updateRowPositions4.2:col1
-    * op lessThan *tmp230 :updatePosition.17:value 0.0392156862745098
-    * jump *label182 equal *tmp230 false
-    * op greaterThan *tmp232 :updatePosition.17:value :findBestPosition:best
-    * jump *label184 equal *tmp232 false
+  717 jump *label182 greaterThanEq :updatePosition.17:value 0.0392156862745098
+  718 jump *label184 lessThanEq :updatePosition.17:value :findBestPosition:best
   719 set :findDrillLocationLocal:diffX :updatePosition.17:dx
   720 set :findDrillLocationLocal:diffY :updatePosition.17:dy
   721 set :findBestPosition:best :updatePosition.17:value
 
   729 set :updatePosition.18:dx -0.5
   730 set :updatePosition.18:dy :updateRowPositions4.2:dy
   731 set :updatePosition.18:value :updateRowPositions4.2:col2
-    * op lessThan *tmp234 :updatePosition.18:value 0.0392156862745098
-    * jump *label187 equal *tmp234 false
-    * op greaterThan *tmp236 :updatePosition.18:value :findBestPosition:best
-    * jump *label189 equal *tmp236 false
+  732 jump *label187 greaterThanEq :updatePosition.18:value 0.0392156862745098
+  733 jump *label189 lessThanEq :updatePosition.18:value :findBestPosition:best
   734 set :findDrillLocationLocal:diffX :updatePosition.18:dx
   735 set :findDrillLocationLocal:diffY :updatePosition.18:dy
   736 set :findBestPosition:best :updatePosition.18:value
 
   744 set :updatePosition.19:dx 0.5
   745 set :updatePosition.19:dy :updateRowPositions4.2:dy
   746 set :updatePosition.19:value :updateRowPositions4.2:col3
-    * op lessThan *tmp238 :updatePosition.19:value 0.0392156862745098
-    * jump *label192 equal *tmp238 false
-    * op greaterThan *tmp240 :updatePosition.19:value :findBestPosition:best
-    * jump *label194 equal *tmp240 false
+  747 jump *label192 greaterThanEq :updatePosition.19:value 0.0392156862745098
+  748 jump *label194 lessThanEq :updatePosition.19:value :findBestPosition:best
   749 set :findDrillLocationLocal:diffX :updatePosition.19:dx
   750 set :findDrillLocationLocal:diffY :updatePosition.19:dy
   751 set :findBestPosition:best :updatePosition.19:value
 
   759 set :updatePosition.20:dx 1.5
   760 set :updatePosition.20:dy :updateRowPositions4.2:dy
   761 set :updatePosition.20:value :updateRowPositions4.2:col4
-    * op lessThan *tmp242 :updatePosition.20:value 0.0392156862745098
-    * jump *label197 equal *tmp242 false
-    * op greaterThan *tmp244 :updatePosition.20:value :findBestPosition:best
-    * jump *label199 equal *tmp244 false
+  762 jump *label197 greaterThanEq :updatePosition.20:value 0.0392156862745098
+  763 jump *label199 lessThanEq :updatePosition.20:value :findBestPosition:best
   764 set :findDrillLocationLocal:diffX :updatePosition.20:dx
   765 set :findDrillLocationLocal:diffY :updatePosition.20:dy
   766 set :findBestPosition:best :updatePosition.20:value
 
   778 set :updatePosition.21:dx -1.5
   779 set :updatePosition.21:dy :updateRowPositions4.3:dy
   780 set :updatePosition.21:value :updateRowPositions4.3:col1
-    * op lessThan *tmp246 :updatePosition.21:value 0.0392156862745098
-    * jump *label203 equal *tmp246 false
-    * op greaterThan *tmp248 :updatePosition.21:value :findBestPosition:best
-    * jump *label205 equal *tmp248 false
+  781 jump *label203 greaterThanEq :updatePosition.21:value 0.0392156862745098
+  782 jump *label205 lessThanEq :updatePosition.21:value :findBestPosition:best
   783 set :findDrillLocationLocal:diffX :updatePosition.21:dx
   784 set :findDrillLocationLocal:diffY :updatePosition.21:dy
   785 set :findBestPosition:best :updatePosition.21:value
 
   793 set :updatePosition.22:dx -0.5
   794 set :updatePosition.22:dy :updateRowPositions4.3:dy
   795 set :updatePosition.22:value :updateRowPositions4.3:col2
-    * op lessThan *tmp250 :updatePosition.22:value 0.0392156862745098
-    * jump *label208 equal *tmp250 false
-    * op greaterThan *tmp252 :updatePosition.22:value :findBestPosition:best
-    * jump *label210 equal *tmp252 false
+  796 jump *label208 greaterThanEq :updatePosition.22:value 0.0392156862745098
+  797 jump *label210 lessThanEq :updatePosition.22:value :findBestPosition:best
   798 set :findDrillLocationLocal:diffX :updatePosition.22:dx
   799 set :findDrillLocationLocal:diffY :updatePosition.22:dy
   800 set :findBestPosition:best :updatePosition.22:value
 
   808 set :updatePosition.23:dx 0.5
   809 set :updatePosition.23:dy :updateRowPositions4.3:dy
   810 set :updatePosition.23:value :updateRowPositions4.3:col3
-    * op lessThan *tmp254 :updatePosition.23:value 0.0392156862745098
-    * jump *label213 equal *tmp254 false
-    * op greaterThan *tmp256 :updatePosition.23:value :findBestPosition:best
-    * jump *label215 equal *tmp256 false
+  811 jump *label213 greaterThanEq :updatePosition.23:value 0.0392156862745098
+  812 jump *label215 lessThanEq :updatePosition.23:value :findBestPosition:best
   813 set :findDrillLocationLocal:diffX :updatePosition.23:dx
   814 set :findDrillLocationLocal:diffY :updatePosition.23:dy
   815 set :findBestPosition:best :updatePosition.23:value
 
   823 set :updatePosition.24:dx 1.5
   824 set :updatePosition.24:dy :updateRowPositions4.3:dy
   825 set :updatePosition.24:value :updateRowPositions4.3:col4
-    * op lessThan *tmp258 :updatePosition.24:value 0.0392156862745098
-    * jump *label218 equal *tmp258 false
-    * op greaterThan *tmp260 :updatePosition.24:value :findBestPosition:best
-    * jump *label220 equal *tmp260 false
+  826 jump *label218 greaterThanEq :updatePosition.24:value 0.0392156862745098
+  827 jump *label220 lessThanEq :updatePosition.24:value :findBestPosition:best
   828 set :findDrillLocationLocal:diffX :updatePosition.24:dx
   829 set :findDrillLocationLocal:diffY :updatePosition.24:dy
   830 set :findBestPosition:best :updatePosition.24:value
 
   842 set *tmp137 null
   843 label *label82
   844 set :findDrillLocationLocal:score *tmp137
-    * op greaterThan *tmp263 :findDrillLocationLocal:score :findDrillLocationLocal:capacity
-    * jump *label222 equal *tmp263 false
+  845 jump *label222 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:capacity
   846 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   847 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   848 set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
-    * op lessThan *tmp267 :findDrillLocationLocal:limit 1000
-    * jump *label224 equal *tmp267 false
+  849 jump *label224 greaterThanEq :findDrillLocationLocal:limit 1000
   850 set .mapSpots :findDrillLocationLocal:score
   851 jump *label225 always
   852 label *label224
   853 label *label225
-    * op greaterThanEq *tmp269 :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
-    * jump *label226 equal *tmp269 false
+  854 jump *label226 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
   855 ucontrol unbind
   856 set :findDrillLocationLocal*retval true
   857 jump *label39 always
 
   861 jump *label223 always
   862 label *label222
   863 label *label223
-    * op greaterThan *tmp271 :findDrillLocationLocal:score :findDrillLocationLocal:best
-    * jump *label228 equal *tmp271 false
+  864 jump *label228 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
   865 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   866 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   867 set :findDrillLocationLocal:best :findDrillLocationLocal:score
   868 jump *label229 always
   869 label *label228
   870 label *label229
-    * op lessThanEq *tmp275 :findDrillLocationLocal:score :findDrillLocationLocal:last
-    * jump *label230 equal *tmp275 false
+  871 jump *label230 greaterThan :findDrillLocationLocal:score :findDrillLocationLocal:last
   872 jump *label81 always
   873 jump *label231 always
   874 label *label230
 
   889 op sub *tmp287 :findDrillLocationLocal:oreY .coreY
   890 op abs *tmp288 *tmp287
   891 op min *tmp289 *tmp286 *tmp288
-    * op lessThan *tmp290 *tmp289 7
-    * jump *label234 equal *tmp290 false
+  892 jump *label234 greaterThanEq *tmp289 7
   893 jump *label81 always
   894 jump *label235 always
   895 label *label234
 
   940 set :moveTo.6:radius 6
   941 label *label246
   942 ucontrol within :moveTo.6:x :moveTo.6:y :moveTo.6:radius *tmp312
-    * op equal *tmp313 *tmp312 false
-    * jump *label248 equal *tmp313 false
+  943 jump *label248 notEqual *tmp312 false
   944 op sub *tmp314 :moveTo.6:radius 0.5
   945 ucontrol approach :moveTo.6:x :moveTo.6:y *tmp314
   946 label *label247
 
   991 label *label260
   992 jump *label262 greaterThan :findPossiblePlacement:x 3
   993 op and *tmp323 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
-    * op equal *tmp324 *tmp323 0
-    * jump *label263 equal *tmp324 false
+  994 jump *label263 notEqual *tmp323 0
   995 op mul *tmp326 :findPossiblePlacement:y 7
   996 op add *tmp327 24 *tmp326
   997 op add :findPossiblePlacement*retval *tmp327 :findPossiblePlacement:x
 
  1000 label *label263
  1001 label *label264
  1002 op sub *tmp329 3 :findPossiblePlacement:width
-    * op greaterThan *tmp330 :findPossiblePlacement:x *tmp329
-    * jump *label265 equal *tmp330 false
+ 1003 jump *label265 lessThanEq :findPossiblePlacement:x *tmp329
  1004 jump *label262 always
  1005 jump *label266 always
  1006 label *label265
 
  1011 jump *label260 always
  1012 label *label262
  1013 op sub *tmp332 3 :findPossiblePlacement:height
-    * op greaterThan *tmp333 :findPossiblePlacement:y *tmp332
-    * jump *label267 equal *tmp333 false
+ 1014 jump *label267 lessThanEq :findPossiblePlacement:y *tmp332
  1015 jump *label259 always
  1016 jump *label268 always
  1017 label *label267
 
  1037 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1038 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1039 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op greaterThanEq *tmp336 :tryPlaceGenerator:shift 0
-    * jump *label271 equal *tmp336 false
+ 1040 jump *label271 lessThan :tryPlaceGenerator:shift 0
  1041 op add *tmp338 :tryPlaceGenerator:centerX 0.5
  1042 op add .water2X *tmp338 :tryPlaceGenerator:c
  1043 op add *tmp340 :tryPlaceGenerator:centerY 0.5
 
  1060 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1061 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1062 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp348 :tryPlaceGenerator:shift 0
-    * jump *label274 equal *tmp348 false
+ 1063 jump *label274 greaterThanEq :tryPlaceGenerator:shift 0
  1064 set :tryPlaceGenerator*retval false
  1065 jump *label269 always
  1066 jump *label275 always
 
  1087 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1088 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1089 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp360 :tryPlaceGenerator:shift 0
-    * jump *label277 equal *tmp360 false
+ 1090 jump *label277 greaterThanEq :tryPlaceGenerator:shift 0
  1091 set :tryPlaceGenerator*retval false
  1092 jump *label269 always
  1093 jump *label278 always
 
  1107 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1108 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1109 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp366 :tryPlaceGenerator:shift 0
-    * jump *label280 equal *tmp366 false
+ 1110 jump *label280 greaterThanEq :tryPlaceGenerator:shift 0
  1111 set :tryPlaceGenerator*retval false
  1112 jump *label269 always
  1113 jump *label281 always
 
  1127 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1128 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1129 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * op lessThan *tmp372 :tryPlaceGenerator:shift 0
-    * jump *label283 equal *tmp372 false
+ 1130 jump *label283 greaterThanEq :tryPlaceGenerator:shift 0
  1131 set :tryPlaceGenerator*retval false
  1132 jump *label269 always
  1133 jump *label284 always
 
  1219 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1220 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
  1221 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
-    * op greaterThanEq *tmp413 :layoutThoriumDrillAtLocation:shift 0
-    * jump *label291 equal *tmp413 false
+ 1222 jump *label291 lessThan :layoutThoriumDrillAtLocation:shift 0
  1223 op add *tmp415 .drillX 0.5
  1224 op add .water1X *tmp415 :layoutThoriumDrillAtLocation:c
  1225 op add *tmp417 .drillY 0.5
 
  1308 label *label308
  1309 op mul *tmp446 7 :shiftMask:shiftY
  1310 op add :shiftMask:shift :shiftMask:shiftX *tmp446
-    * op greaterThan *tmp448 :shiftMask:shift 0
-    * jump *label309 equal *tmp448 false
+ 1311 jump *label309 lessThanEq :shiftMask:shift 0
  1312 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
  1313 op and *tmp451 :shiftMask:mask :shiftMask:clearMask
  1314 op shl :shiftMask:mask *tmp451 :shiftMask:shift
 
  1317 op sub *tmp453 0 :shiftMask:shift
  1318 op shr :shiftMask:mask :shiftMask:mask *tmp453
  1319 label *label310
-    * op notEqual *tmp454 :shiftMask:shiftX 0
-    * jump *label311 equal *tmp454 false
+ 1320 jump *label311 equal :shiftMask:shiftX 0
  1321 op abs *tmp456 :shiftMask:shiftX
  1322 op sub *tmp457 7 *tmp456
  1323 op shr :shiftMask:keep 0b1111111 *tmp457
-    * op greaterThan *tmp459 :shiftMask:shiftX 0
-    * jump *label313 equal *tmp459 false
+ 1324 jump *label313 lessThanEq :shiftMask:shiftX 0
  1325 op abs *tmp461 :shiftMask:shiftX
  1326 op sub *tmp462 7 *tmp461
  1327 op shl :shiftMask:keep :shiftMask:keep *tmp462
 
  1383 label *label319
  1384 set .drillX :findDrillLocationLocal:dx
  1385 set .drillY :findDrillLocationLocal:dy
-    * op equal *tmp471 :findDrillLocationLocal*retval false
-    * jump *label320 equal *tmp471 false
+ 1386 jump *label320 notEqual :findDrillLocationLocal*retval false
  1387 set :layoutThoriumDrill*retval false
  1388 jump *label318 always
  1389 jump *label321 always

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-78 instructions):
 
    97 op min .y0 .y0 :trace:oreY
    98 op max .x1 .x1 :trace:oreX
    99 op max .y1 .y1 :trace:oreY
-    * jump *label28 always
   100 label *label27
   101 label *label28
   102 label *label25
 
   272 jump *label56 notEqual *tmp94 false
   273 set *tmp68 false
   274 jump *label46 always
-    * jump *label57 always
   275 label *label56
   276 label *label57
   277 op sub *tmp98 :locateOreAway:x .coreX
 
   300 jump *label66 greaterThanEq *tmp119 7
   301 set *tmp110 true
   302 jump *label62 always
-    * jump *label67 always
   303 label *label66
   304 label *label67
   305 op add :visited:index :visited:index 3
 
   317 op mul .mapProgress .angle .angle
   318 set *tmp68 true
   319 jump *label46 always
-    * jump *label69 always
   320 label *label68
   321 label *label69
-    * jump *label61 always
   322 label *label60
   323 label *label61
-    * jump *label59 always
   324 label *label58
   325 label *label59
   326 label *label48
 
   335 jump *label70 notEqual *tmp68 false
   336 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   337 jump *label39 always
-    * jump *label71 always
   338 label *label70
   339 label *label71
   340 jump *label72 lessThan :findDrillLocationLocal:limit 1000
   341 op add .mapSpots .mapSpots 1
-    * jump *label73 always
   342 label *label72
   343 label *label73
   344 set :moveTo.3:x :findDrillLocationLocal:oreX
 
   430 set :findDrillLocationLocal:diffX :updatePosition:dx
   431 set :findDrillLocationLocal:diffY :updatePosition:dy
   432 set :findBestPosition:best :updatePosition:value
-    * jump *label95 always
   433 label *label94
   434 label *label95
-    * jump *label93 always
   435 label *label92
   436 label *label93
   437 label *label91
 
   443 set :findDrillLocationLocal:diffX :updatePosition.1:dx
   444 set :findDrillLocationLocal:diffY :updatePosition.1:dy
   445 set :findBestPosition:best :updatePosition.1:value
-    * jump *label100 always
   446 label *label99
   447 label *label100
-    * jump *label98 always
   448 label *label97
   449 label *label98
   450 label *label96
 
   456 set :findDrillLocationLocal:diffX :updatePosition.2:dx
   457 set :findDrillLocationLocal:diffY :updatePosition.2:dy
   458 set :findBestPosition:best :updatePosition.2:value
-    * jump *label105 always
   459 label *label104
   460 label *label105
-    * jump *label103 always
   461 label *label102
   462 label *label103
   463 label *label101
 
   473 set :findDrillLocationLocal:diffX :updatePosition.3:dx
   474 set :findDrillLocationLocal:diffY :updatePosition.3:dy
   475 set :findBestPosition:best :updatePosition.3:value
-    * jump *label111 always
   476 label *label110
   477 label *label111
-    * jump *label109 always
   478 label *label108
   479 label *label109
   480 label *label107
 
   486 set :findDrillLocationLocal:diffX :updatePosition.4:dx
   487 set :findDrillLocationLocal:diffY :updatePosition.4:dy
   488 set :findBestPosition:best :updatePosition.4:value
-    * jump *label116 always
   489 label *label115
   490 label *label116
-    * jump *label114 always
   491 label *label113
   492 label *label114
   493 label *label112
 
   499 set :findDrillLocationLocal:diffX :updatePosition.5:dx
   500 set :findDrillLocationLocal:diffY :updatePosition.5:dy
   501 set :findBestPosition:best :updatePosition.5:value
-    * jump *label121 always
   502 label *label120
   503 label *label121
-    * jump *label119 always
   504 label *label118
   505 label *label119
   506 label *label117
 
   516 set :findDrillLocationLocal:diffX :updatePosition.6:dx
   517 set :findDrillLocationLocal:diffY :updatePosition.6:dy
   518 set :findBestPosition:best :updatePosition.6:value
-    * jump *label127 always
   519 label *label126
   520 label *label127
-    * jump *label125 always
   521 label *label124
   522 label *label125
   523 label *label123
 
   529 set :findDrillLocationLocal:diffX :updatePosition.7:dx
   530 set :findDrillLocationLocal:diffY :updatePosition.7:dy
   531 set :findBestPosition:best :updatePosition.7:value
-    * jump *label132 always
   532 label *label131
   533 label *label132
-    * jump *label130 always
   534 label *label129
   535 label *label130
   536 label *label128
 
   542 set :findDrillLocationLocal:diffX :updatePosition.8:dx
   543 set :findDrillLocationLocal:diffY :updatePosition.8:dy
   544 set :findBestPosition:best :updatePosition.8:value
-    * jump *label137 always
   545 label *label136
   546 label *label137
-    * jump *label135 always
   547 label *label134
   548 label *label135
   549 label *label133
 
   565 set :findDrillLocationLocal:diffX :updatePosition.9:dx
   566 set :findDrillLocationLocal:diffY :updatePosition.9:dy
   567 set :findBestPosition:best :updatePosition.9:value
-    * jump *label143 always
   568 label *label142
   569 label *label143
-    * jump *label141 always
   570 label *label140
   571 label *label141
   572 label *label139
 
   578 set :findDrillLocationLocal:diffX :updatePosition.10:dx
   579 set :findDrillLocationLocal:diffY :updatePosition.10:dy
   580 set :findBestPosition:best :updatePosition.10:value
-    * jump *label148 always
   581 label *label147
   582 label *label148
-    * jump *label146 always
   583 label *label145
   584 label *label146
   585 label *label144
 
   591 set :findDrillLocationLocal:diffX :updatePosition.11:dx
   592 set :findDrillLocationLocal:diffY :updatePosition.11:dy
   593 set :findBestPosition:best :updatePosition.11:value
-    * jump *label153 always
   594 label *label152
   595 label *label153
-    * jump *label151 always
   596 label *label150
   597 label *label151
   598 label *label149
 
   604 set :findDrillLocationLocal:diffX :updatePosition.12:dx
   605 set :findDrillLocationLocal:diffY :updatePosition.12:dy
   606 set :findBestPosition:best :updatePosition.12:value
-    * jump *label158 always
   607 label *label157
   608 label *label158
-    * jump *label156 always
   609 label *label155
   610 label *label156
   611 label *label154
 
   621 set :findDrillLocationLocal:diffX :updatePosition.13:dx
   622 set :findDrillLocationLocal:diffY :updatePosition.13:dy
   623 set :findBestPosition:best :updatePosition.13:value
-    * jump *label164 always
   624 label *label163
   625 label *label164
-    * jump *label162 always
   626 label *label161
   627 label *label162
   628 label *label160
 
   634 set :findDrillLocationLocal:diffX :updatePosition.14:dx
   635 set :findDrillLocationLocal:diffY :updatePosition.14:dy
   636 set :findBestPosition:best :updatePosition.14:value
-    * jump *label169 always
   637 label *label168
   638 label *label169
-    * jump *label167 always
   639 label *label166
   640 label *label167
   641 label *label165
 
   647 set :findDrillLocationLocal:diffX :updatePosition.15:dx
   648 set :findDrillLocationLocal:diffY :updatePosition.15:dy
   649 set :findBestPosition:best :updatePosition.15:value
-    * jump *label174 always
   650 label *label173
   651 label *label174
-    * jump *label172 always
   652 label *label171
   653 label *label172
   654 label *label170
 
   660 set :findDrillLocationLocal:diffX :updatePosition.16:dx
   661 set :findDrillLocationLocal:diffY :updatePosition.16:dy
   662 set :findBestPosition:best :updatePosition.16:value
-    * jump *label179 always
   663 label *label178
   664 label *label179
-    * jump *label177 always
   665 label *label176
   666 label *label177
   667 label *label175
 
   677 set :findDrillLocationLocal:diffX :updatePosition.17:dx
   678 set :findDrillLocationLocal:diffY :updatePosition.17:dy
   679 set :findBestPosition:best :updatePosition.17:value
-    * jump *label185 always
   680 label *label184
   681 label *label185
-    * jump *label183 always
   682 label *label182
   683 label *label183
   684 label *label181
 
   690 set :findDrillLocationLocal:diffX :updatePosition.18:dx
   691 set :findDrillLocationLocal:diffY :updatePosition.18:dy
   692 set :findBestPosition:best :updatePosition.18:value
-    * jump *label190 always
   693 label *label189
   694 label *label190
-    * jump *label188 always
   695 label *label187
   696 label *label188
   697 label *label186
 
   703 set :findDrillLocationLocal:diffX :updatePosition.19:dx
   704 set :findDrillLocationLocal:diffY :updatePosition.19:dy
   705 set :findBestPosition:best :updatePosition.19:value
-    * jump *label195 always
   706 label *label194
   707 label *label195
-    * jump *label193 always
   708 label *label192
   709 label *label193
   710 label *label191
 
   716 set :findDrillLocationLocal:diffX :updatePosition.20:dx
   717 set :findDrillLocationLocal:diffY :updatePosition.20:dy
   718 set :findBestPosition:best :updatePosition.20:value
-    * jump *label200 always
   719 label *label199
   720 label *label200
-    * jump *label198 always
   721 label *label197
   722 label *label198
   723 label *label196
 
   733 set :findDrillLocationLocal:diffX :updatePosition.21:dx
   734 set :findDrillLocationLocal:diffY :updatePosition.21:dy
   735 set :findBestPosition:best :updatePosition.21:value
-    * jump *label206 always
   736 label *label205
   737 label *label206
-    * jump *label204 always
   738 label *label203
   739 label *label204
   740 label *label202
 
   746 set :findDrillLocationLocal:diffX :updatePosition.22:dx
   747 set :findDrillLocationLocal:diffY :updatePosition.22:dy
   748 set :findBestPosition:best :updatePosition.22:value
-    * jump *label211 always
   749 label *label210
   750 label *label211
-    * jump *label209 always
   751 label *label208
   752 label *label209
   753 label *label207
 
   759 set :findDrillLocationLocal:diffX :updatePosition.23:dx
   760 set :findDrillLocationLocal:diffY :updatePosition.23:dy
   761 set :findBestPosition:best :updatePosition.23:value
-    * jump *label216 always
   762 label *label215
   763 label *label216
-    * jump *label214 always
   764 label *label213
   765 label *label214
   766 label *label212
 
   772 set :findDrillLocationLocal:diffX :updatePosition.24:dx
   773 set :findDrillLocationLocal:diffY :updatePosition.24:dy
   774 set :findBestPosition:best :updatePosition.24:value
-    * jump *label221 always
   775 label *label220
   776 label *label221
-    * jump *label219 always
   777 label *label218
   778 label *label219
   779 label *label217
 
   790 set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
   791 jump *label224 greaterThanEq :findDrillLocationLocal:limit 1000
   792 set .mapSpots :findDrillLocationLocal:score
-    * jump *label225 always
   793 label *label224
   794 label *label225
   795 jump *label226 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
   796 ucontrol unbind
   797 set :findDrillLocationLocal*retval true
   798 jump *label39 always
-    * jump *label227 always
   799 label *label226
   800 label *label227
-    * jump *label223 always
   801 label *label222
   802 label *label223
   803 jump *label228 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
   804 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   805 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   806 set :findDrillLocationLocal:best :findDrillLocationLocal:score
-    * jump *label229 always
   807 label *label228
   808 label *label229
   809 jump *label230 greaterThan :findDrillLocationLocal:score :findDrillLocationLocal:last
   810 jump *label81 always
-    * jump *label231 always
   811 label *label230
   812 label *label231
   813 set :findDrillLocationLocal:last :findDrillLocationLocal:score
 
   828 op min *tmp289 *tmp286 *tmp288
   829 jump *label234 greaterThanEq *tmp289 7
   830 jump *label81 always
-    * jump *label235 always
   831 label *label234
   832 label *label235
   833 label *label80
 
   932 op add *tmp327 24 *tmp326
   933 op add :findPossiblePlacement*retval *tmp327 :findPossiblePlacement:x
   934 jump *label256 always
-    * jump *label264 always
   935 label *label263
   936 label *label264
   937 op sub *tmp329 3 :findPossiblePlacement:width
   938 jump *label265 lessThanEq :findPossiblePlacement:x *tmp329
   939 jump *label262 always
-    * jump *label266 always
   940 label *label265
   941 label *label266
   942 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
 
   947 op sub *tmp332 3 :findPossiblePlacement:height
   948 jump *label267 lessThanEq :findPossiblePlacement:y *tmp332
   949 jump *label259 always
-    * jump *label268 always
   950 label *label267
   951 label *label268
   952 label *label258
 
   996 jump *label274 greaterThanEq :tryPlaceGenerator:shift 0
   997 set :tryPlaceGenerator*retval false
   998 jump *label269 always
-    * jump *label275 always
   999 label *label274
  1000 label *label275
  1001 op add *tmp350 :tryPlaceGenerator:centerX 0.5
 
  1022 jump *label277 greaterThanEq :tryPlaceGenerator:shift 0
  1023 set :tryPlaceGenerator*retval false
  1024 jump *label269 always
-    * jump *label278 always
  1025 label *label277
  1026 label *label278
  1027 op add .nodeX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
 
  1041 jump *label280 greaterThanEq :tryPlaceGenerator:shift 0
  1042 set :tryPlaceGenerator*retval false
  1043 jump *label269 always
-    * jump *label281 always
  1044 label *label280
  1045 label *label281
  1046 op add .panelX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
 
  1060 jump *label283 greaterThanEq :tryPlaceGenerator:shift 0
  1061 set :tryPlaceGenerator*retval false
  1062 jump *label269 always
-    * jump *label284 always
  1063 label *label283
  1064 label *label284
  1065 op add .batteryX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
 
  1155 op add .water1Y *tmp417 :layoutThoriumDrillAtLocation:r
  1156 op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:shift
  1157 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
-    * jump *label292 always
  1158 label *label291
  1159 label *label292
  1160 set :createFixedMatrix.3:row0 0b1111
 
  1188 jump *label296 equal :tryPlaceGenerator*retval false
  1189 set :layoutThoriumDrillAtLocation*retval true
  1190 jump *label285 always
-    * jump *label297 always
  1191 label *label296
  1192 label *label297
  1193 set :layoutThoriumDrillAtLocation:sx 3
 
  1230 jump *label307 equal *tmp444 false
  1231 set *tmp439 0
  1232 jump *label306 always
-    * jump *label308 always
  1233 label *label307
  1234 label *label308
  1235 op mul *tmp446 7 :shiftMask:shiftY
 
  1251 op abs *tmp461 :shiftMask:shiftX
  1252 op sub *tmp462 7 *tmp461
  1253 op shl :shiftMask:keep :shiftMask:keep *tmp462
-    * jump *label314 always
  1254 label *label313
  1255 label *label314
  1256 op shl *tmp463 :shiftMask:keep 7
 
  1260 op shl *tmp465 :shiftMask:keep 21
  1261 op or :shiftMask:keep :shiftMask:keep *tmp465
  1262 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
-    * jump *label312 always
  1263 label *label311
  1264 label *label312
  1265 set *tmp439 :shiftMask:mask
 
  1281 jump *label316 equal :tryPlaceGenerator*retval false
  1282 set :layoutThoriumDrillAtLocation*retval true
  1283 jump *label285 always
-    * jump *label317 always
  1284 label *label316
  1285 label *label317
  1286 label *label299
 
  1309 jump *label320 notEqual :findDrillLocationLocal*retval false
  1310 set :layoutThoriumDrill*retval false
  1311 jump *label318 always
-    * jump *label321 always
  1312 label *label320
  1313 label *label321
  1314 setaddr :layoutThoriumDrillAtLocation*retaddr *label322 (h:*label322)

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1:
 
    28 set *tmp3 :spotValue.1:result
    29 label *label17
    30 set :computeRowValues:x2 *tmp3
-    * op add :spotValue.2:x :computeRowValues:x 0
+   31 set :spotValue.2:x :computeRowValues:x
    32 set :spotValue.2:y :computeRowValues:y
    33 set :spotValue.2:ore :computeRowValues:ore
    34 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
 
   382 call *label5 *invalid :computeRowValues*retval (m:*label84) (h:*label84)
   383 label *label84
   384 set :findBestPosition:y2 :computeRowValues*retval
-    * op add *tmp142 :findBestPosition:y 0
+  385 set *tmp142 :findBestPosition:y
   386 set :computeRowValues:x :findBestPosition:x
   387 set :computeRowValues:y *tmp142
   388 set :computeRowValues:ore :findBestPosition:ore
 
  1094 set :createFixedMatrix:row4 0b0011100
  1095 set :createFixedMatrix:row5 0b0000000
  1096 set :createFixedMatrix:row6 0b0000000
-    * op shl *tmp379 :createFixedMatrix:row0 0
+ 1097 set *tmp379 :createFixedMatrix:row0
  1098 op shl *tmp380 :createFixedMatrix:row1 7
  1099 op or *tmp381 *tmp379 *tmp380
  1100 op shl *tmp382 :createFixedMatrix:row2 14
 
  1116 set :createFixedMatrix.1:row4 0b0011100
  1117 set :createFixedMatrix.1:row5 0b0000000
  1118 set :createFixedMatrix.1:row6 0b1000001
-    * op shl *tmp394 :createFixedMatrix.1:row0 0
+ 1119 set *tmp394 :createFixedMatrix.1:row0
  1120 op shl *tmp395 :createFixedMatrix.1:row1 7
  1121 op or *tmp396 *tmp394 *tmp395
  1122 op shl *tmp397 :createFixedMatrix.1:row2 14
 
  1133 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp393
  1134 set :createFixedMatrix.2:row0 0b11
  1135 set :createFixedMatrix.2:row1 0b11
-    * op shl *tmp409 :createFixedMatrix.2:row0 0
+ 1136 set *tmp409 :createFixedMatrix.2:row0
  1137 op shl *tmp410 :createFixedMatrix.2:row1 7
  1138 op or *tmp408 *tmp409 *tmp410
  1139 label *label289
 
  1159 label *label292
  1160 set :createFixedMatrix.3:row0 0b1111
  1161 set :createFixedMatrix.3:row1 0b1111
-    * op shl *tmp420 :createFixedMatrix.3:row0 0
+ 1162 set *tmp420 :createFixedMatrix.3:row0
  1163 op shl *tmp421 :createFixedMatrix.3:row1 7
  1164 op or *tmp419 *tmp420 *tmp421
  1165 label *label293
 
  1168 set :createFixedMatrix.4:row1 0b11
  1169 set :createFixedMatrix.4:row2 0b11
  1170 set :createFixedMatrix.4:row3 0b11
-    * op shl *tmp424 :createFixedMatrix.4:row0 0
+ 1171 set *tmp424 :createFixedMatrix.4:row0
  1172 op shl *tmp425 :createFixedMatrix.4:row1 7
  1173 op or *tmp426 *tmp424 *tmp425
  1174 op shl *tmp427 :createFixedMatrix.4:row2 14

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-12 instructions):
 
    17 select :spotValue:result equal type @air value 0.06274509803921569
    18 set *tmp1 :spotValue:result
    19 label *label16
-    * set :computeRowValues:x1 *tmp1
+   20 set :computeRowValues:x1 :spotValue:result
    21 op sub :spotValue.1:x :computeRowValues:x 1
    22 set :spotValue.1:y :computeRowValues:y
    23 set :spotValue.1:ore :computeRowValues:ore
 
    27 select :spotValue.1:result equal type @air value 0.06274509803921569
    28 set *tmp3 :spotValue.1:result
    29 label *label17
-    * set :computeRowValues:x2 *tmp3
+   30 set :computeRowValues:x2 :spotValue.1:result
    31 set :spotValue.2:x :computeRowValues:x
    32 set :spotValue.2:y :computeRowValues:y
    33 set :spotValue.2:ore :computeRowValues:ore
 
    37 select :spotValue.2:result equal type @air value 0.06274509803921569
    38 set *tmp5 :spotValue.2:result
    39 label *label18
-    * set :computeRowValues:x3 *tmp5
+   40 set :computeRowValues:x3 :spotValue.2:result
    41 op add :spotValue.3:x :computeRowValues:x 1
    42 set :spotValue.3:y :computeRowValues:y
    43 set :spotValue.3:ore :computeRowValues:ore
 
    47 select :spotValue.3:result equal type @air value 0.06274509803921569
    48 set *tmp7 :spotValue.3:result
    49 label *label19
-    * set :computeRowValues:x4 *tmp7
+   50 set :computeRowValues:x4 :spotValue.3:result
    51 op add :spotValue.4:x :computeRowValues:x 2
    52 set :spotValue.4:y :computeRowValues:y
    53 set :spotValue.4:ore :computeRowValues:ore
 
    57 select :spotValue.4:result equal type @air value 0.06274509803921569
    58 set *tmp9 :spotValue.4:result
    59 label *label20
-    * set :computeRowValues:x5 *tmp9
+   60 set :computeRowValues:x5 :spotValue.4:result
    61 jump *label21 equal :computeRowValues:large false
-    * op add *tmp11 :computeRowValues:x1 :computeRowValues:x2
-    * op add *tmp12 *tmp11 :computeRowValues:x3
-    * op add *tmp13 :computeRowValues:x2 :computeRowValues:x3
-    * op add *tmp14 *tmp13 :computeRowValues:x4
-    * op add *tmp15 :computeRowValues:x3 :computeRowValues:x4
-    * op add *tmp16 *tmp15 :computeRowValues:x5
+   62 op add *tmp11 *tmp1 *tmp3
+   63 op add *tmp12 *tmp11 *tmp5
+   64 op add *tmp13 *tmp3 *tmp5
+   65 op add *tmp14 *tmp13 *tmp7
+   66 op add *tmp15 *tmp5 *tmp7
+   67 op add *tmp16 *tmp15 *tmp9
    68 packcolor :computeRowValues*retval *tmp12 *tmp14 *tmp16 0
    69 jump *label15 always
-    * set *tmp10 null
    70 jump *label22 always
    71 label *label21
-    * op add *tmp18 :computeRowValues:x1 :computeRowValues:x2
-    * op add *tmp19 :computeRowValues:x2 :computeRowValues:x3
-    * op add *tmp20 :computeRowValues:x3 :computeRowValues:x4
-    * op add *tmp21 :computeRowValues:x4 :computeRowValues:x5
+   72 op add *tmp18 *tmp1 *tmp3
+   73 op add *tmp19 *tmp3 *tmp5
+   74 op add *tmp20 *tmp5 *tmp7
+   75 op add *tmp21 *tmp7 *tmp9
    76 packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
    77 jump *label15 always
-    * set *tmp10 null
    78 label *label22
-    * set :computeRowValues*retval *tmp10
+   79 set :computeRowValues*retval null
    80 label *label15
    81 return :computeRowValues*retaddr
    82 end
 
   115 set .y1 0
   116 set :moveTo:x 0
   117 set :moveTo:y 0
-    * set *tmp40 :moveTo:x
-    * set *tmp41 :moveTo:y
-    * set :moveTo.1:x *tmp40
-    * set :moveTo.1:y *tmp41
+  118 set *tmp40 0
+  119 set *tmp41 0
+  120 set :moveTo.1:x :moveTo:x
+  121 set :moveTo.1:y :moveTo:y
   122 set :moveTo.1:radius 6
   123 label *label32
-    * ucontrol within :moveTo.1:x :moveTo.1:y :moveTo.1:radius *tmp42
+  124 ucontrol within *tmp40 *tmp41 6 *tmp42
   125 jump *label34 notEqual *tmp42 false
-    * op sub *tmp44 :moveTo.1:radius 0.5
-    * ucontrol approach :moveTo.1:x :moveTo.1:y *tmp44
+  126 op sub *tmp44 6 0.5
+  127 ucontrol approach *tmp40 *tmp41 5.5
   128 label *label33
   129 jump *label32 always
   130 label *label34
   131 label *label31
   132 label *label30
-    * op add .cornerDistance .cornerDistance @mapw
+  133 op add .cornerDistance 0 @mapw
   134 set :trace:ore :findMaxOreDistance:ore
   135 set :trace:x @mapw
   136 set :trace:y 0
 
   163 op len :findMaxOreDistance:d0 *tmp45 *tmp46
   164 op sub *tmp48 .coreX .x0
   165 op sub *tmp49 .coreY .y1
-    * op len :findMaxOreDistance:d1 *tmp48 *tmp49
+  166 op len :findMaxOreDistance:d1 *tmp45 *tmp49
   167 op sub *tmp51 .coreX .x1
   168 op sub *tmp52 .coreY .y0
-    * op len :findMaxOreDistance:d2 *tmp51 *tmp52
+  169 op len :findMaxOreDistance:d2 *tmp51 *tmp46
   170 op sub *tmp54 .coreX .x1
   171 op sub *tmp55 .coreY .y1
-    * op len :findMaxOreDistance:d3 *tmp54 *tmp55
+  172 op len :findMaxOreDistance:d3 *tmp51 *tmp49
   173 op max *tmp57 :findMaxOreDistance:d0 :findMaxOreDistance:d1
   174 op max *tmp57 *tmp57 :findMaxOreDistance:d2
   175 op max *tmp57 *tmp57 :findMaxOreDistance:d3
   176 set :findMaxOreDistance*retval *tmp57
   177 jump *label29 always
-    * set :findMaxOreDistance*retval null
   178 label *label29
   179 return :findMaxOreDistance*retaddr
   180 end
 
   195 set *tmp59 :findMaxOreDistance*retval
   196 jump *label41 always
   197 label *label40
-    * op sub *tmp60 @mapw .coreX
-    * op sub *tmp61 @maph .coreY
-    * op max *tmp62 .coreX .coreY
+  198 op sub *tmp60 @mapw :findDrillLocationLocal:x
+  199 op sub *tmp61 @maph :findDrillLocationLocal:y
+  200 op max *tmp62 :findDrillLocationLocal:x :findDrillLocationLocal:y
   201 op max *tmp62 *tmp62 *tmp60
   202 op max *tmp62 *tmp62 *tmp61
   203 set *tmp59 *tmp62
   204 label *label41
   205 set :findDrillLocationLocal:distanceLimit *tmp59
   206 set .angle 0
-    * set .mapProgress .angle
-    * op div .mapTotal :findDrillLocationLocal:distanceLimit 3.8197185279121366
+  207 set .mapProgress 0
+  208 op div .mapTotal *tmp59 3.8197185279121366
   209 set :findDrillLocationLocal:count -1
   210 set :findDrillLocationLocal:oreX 0
   211 set :findDrillLocationLocal:oreY 0
 
   225 op max .angle .angle @pi
   226 op mul .mapProgress .angle .angle
   227 label *label47
-    * jump *label49 greaterThanEq :locateOreAway:distance :locateOreAway:distanceLimit
+  228 jump *label49 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   229 op div :locateOreAway:a .angle @degToRad
   230 op sin *tmp74 :locateOreAway:a
   231 op mul *tmp75 *tmp74 :locateOreAway:distance
 
   234 set :limit:value *tmp76
   235 set :limit:low 5
   236 set :limit:high *tmp77
-    * op max *tmp79 :limit:value :limit:low
-    * op min *tmp78 *tmp79 :limit:high
+  237 op max *tmp79 *tmp76 5
+  238 op min *tmp78 *tmp79 *tmp77
   239 label *label50
   240 set :locateOreAway:lx *tmp78
   241 op cos *tmp81 :locateOreAway:a
 
   245 set :limit.1:value *tmp83
   246 set :limit.1:low 5
   247 set :limit.1:high *tmp84
-    * op max *tmp86 :limit.1:value :limit.1:low
-    * op min *tmp85 *tmp86 :limit.1:high
+  248 op max *tmp86 *tmp83 5
+  249 op min *tmp85 *tmp86 *tmp84
   250 label *label51
   251 set :locateOreAway:ly *tmp85
-    * set :moveTo.2:x :locateOreAway:lx
-    * set :moveTo.2:y :locateOreAway:ly
+  252 set :moveTo.2:x *tmp78
+  253 set :moveTo.2:y *tmp85
   254 set :moveTo.2:radius 5
   255 label *label53
-    * ucontrol within :moveTo.2:x :moveTo.2:y :moveTo.2:radius *tmp88
+  256 ucontrol within :locateOreAway:lx :locateOreAway:ly 5 *tmp88
   257 jump *label55 notEqual *tmp88 false
-    * op sub *tmp90 :moveTo.2:radius 0.5
-    * ucontrol approach :moveTo.2:x :moveTo.2:y *tmp90
+  258 op sub *tmp90 5 0.5
+  259 ucontrol approach :locateOreAway:lx :locateOreAway:ly 4.5
   260 label *label54
   261 jump *label53 always
   262 label *label55
 
   265 op add .angle .angle *tmp91
   266 op mul .mapProgress .angle .angle
   267 op mul :locateOreAway:distance 3.8197185279121366 .angle
-    * ulocate ore core true :locateOreAway:ore :locateOreAway:x :locateOreAway:y *tmp94 0
+  268 ulocate ore core true :findDrillLocationLocal:item :locateOreAway:x :locateOreAway:y *tmp94 0
   269 jump *label56 notEqual *tmp94 false
   270 set *tmp68 false
   271 jump *label46 always
 
   276 op sub *tmp100 :locateOreAway:y .coreY
   277 op abs *tmp101 *tmp100
   278 op max :locateOreAway:coreDist *tmp99 *tmp101
-    * op sub *tmp103 :locateOreAway:x :locateOreAway:lx
-    * op sub *tmp104 :locateOreAway:y :locateOreAway:ly
+  279 op sub *tmp103 :locateOreAway:x *tmp78
+  280 op sub *tmp104 :locateOreAway:y *tmp85
   281 op len :locateOreAway:unitDist *tmp103 *tmp104
   282 jump *label58 lessThan :locateOreAway:coreDist 7
   283 jump *label60 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
 
   287 set *tmp111 .locations
   288 set :visited:i 0
   289 label *label63
-    * jump *label65 greaterThanEq :visited:i *tmp111
+  290 jump *label65 greaterThanEq :visited:i .locations
   291 read :visited:lx bank1 :visited:index
   292 op add *tmp114 :visited:index 1
   293 read :visited:ly bank1 *tmp114
-    * op sub *tmp117 :visited:x :visited:lx
-    * op sub *tmp118 :visited:y :visited:ly
+  294 op sub *tmp117 :locateOreAway:x :visited:lx
+  295 op sub *tmp118 :locateOreAway:y :visited:ly
   296 op len *tmp119 *tmp117 *tmp118
   297 jump *label66 greaterThanEq *tmp119 7
   298 set *tmp110 true
 
   306 label *label65
   307 set *tmp110 false
   308 jump *label62 always
-    * set *tmp110 null
   309 label *label62
   310 jump *label68 notEqual *tmp110 false
-    * op div *tmp124 7.639437055824273 :locateOreAway:distance
+  311 op div *tmp124 2 .angle
   312 op add .angle .angle *tmp124
   313 op mul .mapProgress .angle .angle
   314 set *tmp68 true
 
   324 label *label49
   325 set *tmp68 false
   326 jump *label46 always
-    * set *tmp68 null
   327 label *label46
   328 set :findDrillLocationLocal:oreX :locateOreAway:x
   329 set :findDrillLocationLocal:oreY :locateOreAway:y
 
   336 op add .mapSpots .mapSpots 1
   337 label *label72
   338 label *label73
-    * set :moveTo.3:x :findDrillLocationLocal:oreX
-    * set :moveTo.3:y :findDrillLocationLocal:oreY
-    * set *tmp132 :moveTo.3:x
-    * set *tmp133 :moveTo.3:y
-    * set :moveTo.4:x *tmp132
-    * set :moveTo.4:y *tmp133
+  339 set :moveTo.3:x :locateOreAway:x
+  340 set :moveTo.3:y :locateOreAway:y
+  341 set *tmp132 :findDrillLocationLocal:oreX
+  342 set *tmp133 :findDrillLocationLocal:oreY
+  343 set :moveTo.4:x :moveTo.3:x
+  344 set :moveTo.4:y :moveTo.3:y
   345 set :moveTo.4:radius 6
   346 label *label76
-    * ucontrol within :moveTo.4:x :moveTo.4:y :moveTo.4:radius *tmp134
+  347 ucontrol within *tmp132 *tmp133 6 *tmp134
   348 jump *label78 notEqual *tmp134 false
-    * op sub *tmp136 :moveTo.4:radius 0.5
-    * ucontrol approach :moveTo.4:x :moveTo.4:y *tmp136
+  349 op sub *tmp136 6 0.5
+  350 ucontrol approach *tmp132 *tmp133 5.5
   351 label *label77
   352 jump *label76 always
   353 label *label78
 
   359 set :findBestPosition:y :findDrillLocationLocal:oreY
   360 set :findBestPosition:ore :findDrillLocationLocal:ore
   361 set :findBestPosition:large :findDrillLocationLocal:large
-    * op sub *tmp138 :findBestPosition:y 2
-    * set :computeRowValues:x :findBestPosition:x
+  362 op sub *tmp138 :findDrillLocationLocal:oreY 2
+  363 set :computeRowValues:x :findDrillLocationLocal:oreX
   364 set :computeRowValues:y *tmp138
-    * set :computeRowValues:ore :findBestPosition:ore
-    * set :computeRowValues:large :findBestPosition:large
+  365 set :computeRowValues:ore :findDrillLocationLocal:ore
+  366 set :computeRowValues:large :findDrillLocationLocal:large
   367 setaddr :computeRowValues*retaddr *label83 (h:*label83)
   368 call *label5 *invalid :computeRowValues*retval (m:*label83) (h:*label83)
   369 label *label83
 
   379 set :findBestPosition:y2 :computeRowValues*retval
   380 set *tmp142 :findBestPosition:y
   381 set :computeRowValues:x :findBestPosition:x
-    * set :computeRowValues:y *tmp142
+  382 set :computeRowValues:y :findBestPosition:y
   383 set :computeRowValues:ore :findBestPosition:ore
   384 set :computeRowValues:large :findBestPosition:large
   385 setaddr :computeRowValues*retaddr *label85 (h:*label85)
 
   413 op add *tmp151 :findBestPosition:y2 :findBestPosition:y3
   414 op add :findBestPosition:row2 *tmp151 :findBestPosition:y4
   415 op add *tmp153 :findBestPosition:y3 :findBestPosition:y4
-    * op add :findBestPosition:row3 *tmp153 :findBestPosition:y5
+  416 op add :findBestPosition:row3 *tmp153 :computeRowValues*retval
   417 set :updateRowPositions3:dy -1
   418 set :updateRowPositions3:row :findBestPosition:row1
-    * unpackcolor :updateRowPositions3:col1 :updateRowPositions3:col2 :updateRowPositions3:col3 0 :updateRowPositions3:row
+  419 unpackcolor :updateRowPositions3:col1 :updateRowPositions3:col2 :updateRowPositions3:col3 0 :findBestPosition:row1
   420 set :updatePosition:dx -1
-    * set :updatePosition:dy :updateRowPositions3:dy
+  421 set :updatePosition:dy -1
   422 set :updatePosition:value :updateRowPositions3:col1
-    * jump *label92 greaterThanEq :updatePosition:value 0.0392156862745098
-    * jump *label94 lessThanEq :updatePosition:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition:dx
-    * set :findDrillLocationLocal:diffY :updatePosition:dy
-    * set :findBestPosition:best :updatePosition:value
+  423 jump *label92 greaterThanEq :updateRowPositions3:col1 0.0392156862745098
+  424 jump *label94 lessThanEq :updateRowPositions3:col1 0
+  425 set :findDrillLocationLocal:diffX -1
+  426 set :findDrillLocationLocal:diffY :updateRowPositions3:dy
+  427 set :findBestPosition:best :updateRowPositions3:col1
   428 label *label94
   429 label *label95
   430 label *label92
   431 label *label93
   432 label *label91
   433 set :updatePosition.1:dx 0
-    * set :updatePosition.1:dy :updateRowPositions3:dy
+  434 set :updatePosition.1:dy -1
   435 set :updatePosition.1:value :updateRowPositions3:col2
-    * jump *label97 greaterThanEq :updatePosition.1:value 0.0392156862745098
-    * jump *label99 lessThanEq :updatePosition.1:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.1:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.1:dy
-    * set :findBestPosition:best :updatePosition.1:value
+  436 jump *label97 greaterThanEq :updateRowPositions3:col2 0.0392156862745098
+  437 jump *label99 lessThanEq :updateRowPositions3:col2 :findBestPosition:best
+  438 set :findDrillLocationLocal:diffX 0
+  439 set :findDrillLocationLocal:diffY :updateRowPositions3:dy
+  440 set :findBestPosition:best :updateRowPositions3:col2
   441 label *label99
   442 label *label100
   443 label *label97
   444 label *label98
   445 label *label96
   446 set :updatePosition.2:dx 1
-    * set :updatePosition.2:dy :updateRowPositions3:dy
+  447 set :updatePosition.2:dy -1
   448 set :updatePosition.2:value :updateRowPositions3:col3
-    * jump *label102 greaterThanEq :updatePosition.2:value 0.0392156862745098
-    * jump *label104 lessThanEq :updatePosition.2:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.2:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.2:dy
-    * set :findBestPosition:best :updatePosition.2:value
+  449 jump *label102 greaterThanEq :updateRowPositions3:col3 0.0392156862745098
+  450 jump *label104 lessThanEq :updateRowPositions3:col3 :findBestPosition:best
+  451 set :findDrillLocationLocal:diffX 1
+  452 set :findDrillLocationLocal:diffY :updateRowPositions3:dy
+  453 set :findBestPosition:best :updateRowPositions3:col3
   454 label *label104
   455 label *label105
   456 label *label102
 
   459 label *label90
   460 set :updateRowPositions3.1:dy 0
   461 set :updateRowPositions3.1:row :findBestPosition:row2
-    * unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 0 :updateRowPositions3.1:row
+  462 unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 0 :findBestPosition:row2
   463 set :updatePosition.3:dx -1
-    * set :updatePosition.3:dy :updateRowPositions3.1:dy
+  464 set :updatePosition.3:dy 0
   465 set :updatePosition.3:value :updateRowPositions3.1:col1
-    * jump *label108 greaterThanEq :updatePosition.3:value 0.0392156862745098
-    * jump *label110 lessThanEq :updatePosition.3:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.3:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.3:dy
-    * set :findBestPosition:best :updatePosition.3:value
+  466 jump *label108 greaterThanEq :updateRowPositions3.1:col1 0.0392156862745098
+  467 jump *label110 lessThanEq :updateRowPositions3.1:col1 :findBestPosition:best
+  468 set :findDrillLocationLocal:diffX -1
+  469 set :findDrillLocationLocal:diffY :updateRowPositions3.1:dy
+  470 set :findBestPosition:best :updateRowPositions3.1:col1
   471 label *label110
   472 label *label111
   473 label *label108
   474 label *label109
   475 label *label107
   476 set :updatePosition.4:dx 0
-    * set :updatePosition.4:dy :updateRowPositions3.1:dy
+  477 set :updatePosition.4:dy 0
   478 set :updatePosition.4:value :updateRowPositions3.1:col2
-    * jump *label113 greaterThanEq :updatePosition.4:value 0.0392156862745098
-    * jump *label115 lessThanEq :updatePosition.4:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.4:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.4:dy
-    * set :findBestPosition:best :updatePosition.4:value
+  479 jump *label113 greaterThanEq :updateRowPositions3.1:col2 0.0392156862745098
+  480 jump *label115 lessThanEq :updateRowPositions3.1:col2 :findBestPosition:best
+  481 set :findDrillLocationLocal:diffX 0
+  482 set :findDrillLocationLocal:diffY :updateRowPositions3.1:dy
+  483 set :findBestPosition:best :updateRowPositions3.1:col2
   484 label *label115
   485 label *label116
   486 label *label113
   487 label *label114
   488 label *label112
   489 set :updatePosition.5:dx 1
-    * set :updatePosition.5:dy :updateRowPositions3.1:dy
+  490 set :updatePosition.5:dy 0
   491 set :updatePosition.5:value :updateRowPositions3.1:col3
-    * jump *label118 greaterThanEq :updatePosition.5:value 0.0392156862745098
-    * jump *label120 lessThanEq :updatePosition.5:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.5:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.5:dy
-    * set :findBestPosition:best :updatePosition.5:value
+  492 jump *label118 greaterThanEq :updateRowPositions3.1:col3 0.0392156862745098
+  493 jump *label120 lessThanEq :updateRowPositions3.1:col3 :findBestPosition:best
+  494 set :findDrillLocationLocal:diffX 1
+  495 set :findDrillLocationLocal:diffY :updateRowPositions3.1:dy
+  496 set :findBestPosition:best :updateRowPositions3.1:col3
   497 label *label120
   498 label *label121
   499 label *label118
 
   502 label *label106
   503 set :updateRowPositions3.2:dy 1
   504 set :updateRowPositions3.2:row :findBestPosition:row3
-    * unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 0 :updateRowPositions3.2:row
+  505 unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 0 :findBestPosition:row3
   506 set :updatePosition.6:dx -1
-    * set :updatePosition.6:dy :updateRowPositions3.2:dy
+  507 set :updatePosition.6:dy 1
   508 set :updatePosition.6:value :updateRowPositions3.2:col1
-    * jump *label124 greaterThanEq :updatePosition.6:value 0.0392156862745098
-    * jump *label126 lessThanEq :updatePosition.6:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.6:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.6:dy
-    * set :findBestPosition:best :updatePosition.6:value
+  509 jump *label124 greaterThanEq :updateRowPositions3.2:col1 0.0392156862745098
+  510 jump *label126 lessThanEq :updateRowPositions3.2:col1 :findBestPosition:best
+  511 set :findDrillLocationLocal:diffX -1
+  512 set :findDrillLocationLocal:diffY :updateRowPositions3.2:dy
+  513 set :findBestPosition:best :updateRowPositions3.2:col1
   514 label *label126
   515 label *label127
   516 label *label124
   517 label *label125
   518 label *label123
   519 set :updatePosition.7:dx 0
-    * set :updatePosition.7:dy :updateRowPositions3.2:dy
+  520 set :updatePosition.7:dy 1
   521 set :updatePosition.7:value :updateRowPositions3.2:col2
-    * jump *label129 greaterThanEq :updatePosition.7:value 0.0392156862745098
-    * jump *label131 lessThanEq :updatePosition.7:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.7:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.7:dy
-    * set :findBestPosition:best :updatePosition.7:value
+  522 jump *label129 greaterThanEq :updateRowPositions3.2:col2 0.0392156862745098
+  523 jump *label131 lessThanEq :updateRowPositions3.2:col2 :findBestPosition:best
+  524 set :findDrillLocationLocal:diffX 0
+  525 set :findDrillLocationLocal:diffY :updateRowPositions3.2:dy
+  526 set :findBestPosition:best :updateRowPositions3.2:col2
   527 label *label131
   528 label *label132
   529 label *label129
   530 label *label130
   531 label *label128
   532 set :updatePosition.8:dx 1
-    * set :updatePosition.8:dy :updateRowPositions3.2:dy
+  533 set :updatePosition.8:dy 1
   534 set :updatePosition.8:value :updateRowPositions3.2:col3
-    * jump *label134 greaterThanEq :updatePosition.8:value 0.0392156862745098
-    * jump *label136 lessThanEq :updatePosition.8:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.8:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.8:dy
-    * set :findBestPosition:best :updatePosition.8:value
+  535 jump *label134 greaterThanEq :updateRowPositions3.2:col3 0.0392156862745098
+  536 jump *label136 lessThanEq :updateRowPositions3.2:col3 :findBestPosition:best
+  537 set :findDrillLocationLocal:diffX 1
+  538 set :findDrillLocationLocal:diffY :updateRowPositions3.2:dy
+  539 set :findBestPosition:best :updateRowPositions3.2:col3
   540 label *label136
   541 label *label137
   542 label *label134
 
   548 op add :findBestPosition:row1.1 :findBestPosition:y1 :findBestPosition:y2
   549 op add :findBestPosition:row2.1 :findBestPosition:y2 :findBestPosition:y3
   550 op add :findBestPosition:row3.1 :findBestPosition:y3 :findBestPosition:y4
-    * op add :findBestPosition:row4 :findBestPosition:y4 :findBestPosition:y5
+  551 op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
   552 set :updateRowPositions4:dy -1.5
   553 set :updateRowPositions4:row :findBestPosition:row1.1
-    * unpackcolor :updateRowPositions4:col1 :updateRowPositions4:col2 :updateRowPositions4:col3 :updateRowPositions4:col4 :updateRowPositions4:row
+  554 unpackcolor :updateRowPositions4:col1 :updateRowPositions4:col2 :updateRowPositions4:col3 :updateRowPositions4:col4 :findBestPosition:row1.1
   555 set :updatePosition.9:dx -1.5
-    * set :updatePosition.9:dy :updateRowPositions4:dy
+  556 set :updatePosition.9:dy -1.5
   557 set :updatePosition.9:value :updateRowPositions4:col1
-    * jump *label140 greaterThanEq :updatePosition.9:value 0.0392156862745098
-    * jump *label142 lessThanEq :updatePosition.9:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.9:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.9:dy
-    * set :findBestPosition:best :updatePosition.9:value
+  558 jump *label140 greaterThanEq :updateRowPositions4:col1 0.0392156862745098
+  559 jump *label142 lessThanEq :updateRowPositions4:col1 0
+  560 set :findDrillLocationLocal:diffX -1.5
+  561 set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  562 set :findBestPosition:best :updateRowPositions4:col1
   563 label *label142
   564 label *label143
   565 label *label140
   566 label *label141
   567 label *label139
   568 set :updatePosition.10:dx -0.5
-    * set :updatePosition.10:dy :updateRowPositions4:dy
+  569 set :updatePosition.10:dy -1.5
   570 set :updatePosition.10:value :updateRowPositions4:col2
-    * jump *label145 greaterThanEq :updatePosition.10:value 0.0392156862745098
-    * jump *label147 lessThanEq :updatePosition.10:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.10:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.10:dy
-    * set :findBestPosition:best :updatePosition.10:value
+  571 jump *label145 greaterThanEq :updateRowPositions4:col2 0.0392156862745098
+  572 jump *label147 lessThanEq :updateRowPositions4:col2 :findBestPosition:best
+  573 set :findDrillLocationLocal:diffX -0.5
+  574 set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  575 set :findBestPosition:best :updateRowPositions4:col2
   576 label *label147
   577 label *label148
   578 label *label145
   579 label *label146
   580 label *label144
   581 set :updatePosition.11:dx 0.5
-    * set :updatePosition.11:dy :updateRowPositions4:dy
+  582 set :updatePosition.11:dy -1.5
   583 set :updatePosition.11:value :updateRowPositions4:col3
-    * jump *label150 greaterThanEq :updatePosition.11:value 0.0392156862745098
-    * jump *label152 lessThanEq :updatePosition.11:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.11:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.11:dy
-    * set :findBestPosition:best :updatePosition.11:value
+  584 jump *label150 greaterThanEq :updateRowPositions4:col3 0.0392156862745098
+  585 jump *label152 lessThanEq :updateRowPositions4:col3 :findBestPosition:best
+  586 set :findDrillLocationLocal:diffX 0.5
+  587 set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  588 set :findBestPosition:best :updateRowPositions4:col3
   589 label *label152
   590 label *label153
   591 label *label150
   592 label *label151
   593 label *label149
   594 set :updatePosition.12:dx 1.5
-    * set :updatePosition.12:dy :updateRowPositions4:dy
+  595 set :updatePosition.12:dy -1.5
   596 set :updatePosition.12:value :updateRowPositions4:col4
-    * jump *label155 greaterThanEq :updatePosition.12:value 0.0392156862745098
-    * jump *label157 lessThanEq :updatePosition.12:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.12:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.12:dy
-    * set :findBestPosition:best :updatePosition.12:value
+  597 jump *label155 greaterThanEq :updateRowPositions4:col4 0.0392156862745098
+  598 jump *label157 lessThanEq :updateRowPositions4:col4 :findBestPosition:best
+  599 set :findDrillLocationLocal:diffX 1.5
+  600 set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  601 set :findBestPosition:best :updateRowPositions4:col4
   602 label *label157
   603 label *label158
   604 label *label155
 
   607 label *label138
   608 set :updateRowPositions4.1:dy -0.5
   609 set :updateRowPositions4.1:row :findBestPosition:row2.1
-    * unpackcolor :updateRowPositions4.1:col1 :updateRowPositions4.1:col2 :updateRowPositions4.1:col3 :updateRowPositions4.1:col4 :updateRowPositions4.1:row
+  610 unpackcolor :updateRowPositions4.1:col1 :updateRowPositions4.1:col2 :updateRowPositions4.1:col3 :updateRowPositions4.1:col4 :findBestPosition:row2.1
   611 set :updatePosition.13:dx -1.5
-    * set :updatePosition.13:dy :updateRowPositions4.1:dy
+  612 set :updatePosition.13:dy -0.5
   613 set :updatePosition.13:value :updateRowPositions4.1:col1
-    * jump *label161 greaterThanEq :updatePosition.13:value 0.0392156862745098
-    * jump *label163 lessThanEq :updatePosition.13:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.13:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.13:dy
-    * set :findBestPosition:best :updatePosition.13:value
+  614 jump *label161 greaterThanEq :updateRowPositions4.1:col1 0.0392156862745098
+  615 jump *label163 lessThanEq :updateRowPositions4.1:col1 :findBestPosition:best
+  616 set :findDrillLocationLocal:diffX -1.5
+  617 set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+  618 set :findBestPosition:best :updateRowPositions4.1:col1
   619 label *label163
   620 label *label164
   621 label *label161
   622 label *label162
   623 label *label160
   624 set :updatePosition.14:dx -0.5
-    * set :updatePosition.14:dy :updateRowPositions4.1:dy
+  625 set :updatePosition.14:dy -0.5
   626 set :updatePosition.14:value :updateRowPositions4.1:col2
-    * jump *label166 greaterThanEq :updatePosition.14:value 0.0392156862745098
-    * jump *label168 lessThanEq :updatePosition.14:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.14:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.14:dy
-    * set :findBestPosition:best :updatePosition.14:value
+  627 jump *label166 greaterThanEq :updateRowPositions4.1:col2 0.0392156862745098
+  628 jump *label168 lessThanEq :updateRowPositions4.1:col2 :findBestPosition:best
+  629 set :findDrillLocationLocal:diffX -0.5
+  630 set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+  631 set :findBestPosition:best :updateRowPositions4.1:col2
   632 label *label168
   633 label *label169
   634 label *label166
   635 label *label167
   636 label *label165
   637 set :updatePosition.15:dx 0.5
-    * set :updatePosition.15:dy :updateRowPositions4.1:dy
+  638 set :updatePosition.15:dy -0.5
   639 set :updatePosition.15:value :updateRowPositions4.1:col3
-    * jump *label171 greaterThanEq :updatePosition.15:value 0.0392156862745098
-    * jump *label173 lessThanEq :updatePosition.15:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.15:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.15:dy
-    * set :findBestPosition:best :updatePosition.15:value
+  640 jump *label171 greaterThanEq :updateRowPositions4.1:col3 0.0392156862745098
+  641 jump *label173 lessThanEq :updateRowPositions4.1:col3 :findBestPosition:best
+  642 set :findDrillLocationLocal:diffX 0.5
+  643 set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+  644 set :findBestPosition:best :updateRowPositions4.1:col3
   645 label *label173
   646 label *label174
   647 label *label171
   648 label *label172
   649 label *label170
   650 set :updatePosition.16:dx 1.5
-    * set :updatePosition.16:dy :updateRowPositions4.1:dy
+  651 set :updatePosition.16:dy -0.5
   652 set :updatePosition.16:value :updateRowPositions4.1:col4
-    * jump *label176 greaterThanEq :updatePosition.16:value 0.0392156862745098
-    * jump *label178 lessThanEq :updatePosition.16:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.16:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.16:dy
-    * set :findBestPosition:best :updatePosition.16:value
+  653 jump *label176 greaterThanEq :updateRowPositions4.1:col4 0.0392156862745098
+  654 jump *label178 lessThanEq :updateRowPositions4.1:col4 :findBestPosition:best
+  655 set :findDrillLocationLocal:diffX 1.5
+  656 set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+  657 set :findBestPosition:best :updateRowPositions4.1:col4
   658 label *label178
   659 label *label179
   660 label *label176
 
   663 label *label159
   664 set :updateRowPositions4.2:dy 0.5
   665 set :updateRowPositions4.2:row :findBestPosition:row3.1
-    * unpackcolor :updateRowPositions4.2:col1 :updateRowPositions4.2:col2 :updateRowPositions4.2:col3 :updateRowPositions4.2:col4 :updateRowPositions4.2:row
+  666 unpackcolor :updateRowPositions4.2:col1 :updateRowPositions4.2:col2 :updateRowPositions4.2:col3 :updateRowPositions4.2:col4 :findBestPosition:row3.1
   667 set :updatePosition.17:dx -1.5
-    * set :updatePosition.17:dy :updateRowPositions4.2:dy
+  668 set :updatePosition.17:dy 0.5
   669 set :updatePosition.17:value :updateRowPositions4.2:col1
-    * jump *label182 greaterThanEq :updatePosition.17:value 0.0392156862745098
-    * jump *label184 lessThanEq :updatePosition.17:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.17:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.17:dy
-    * set :findBestPosition:best :updatePosition.17:value
+  670 jump *label182 greaterThanEq :updateRowPositions4.2:col1 0.0392156862745098
+  671 jump *label184 lessThanEq :updateRowPositions4.2:col1 :findBestPosition:best
+  672 set :findDrillLocationLocal:diffX -1.5
+  673 set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+  674 set :findBestPosition:best :updateRowPositions4.2:col1
   675 label *label184
   676 label *label185
   677 label *label182
   678 label *label183
   679 label *label181
   680 set :updatePosition.18:dx -0.5
-    * set :updatePosition.18:dy :updateRowPositions4.2:dy
+  681 set :updatePosition.18:dy 0.5
   682 set :updatePosition.18:value :updateRowPositions4.2:col2
-    * jump *label187 greaterThanEq :updatePosition.18:value 0.0392156862745098
-    * jump *label189 lessThanEq :updatePosition.18:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.18:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.18:dy
-    * set :findBestPosition:best :updatePosition.18:value
+  683 jump *label187 greaterThanEq :updateRowPositions4.2:col2 0.0392156862745098
+  684 jump *label189 lessThanEq :updateRowPositions4.2:col2 :findBestPosition:best
+  685 set :findDrillLocationLocal:diffX -0.5
+  686 set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+  687 set :findBestPosition:best :updateRowPositions4.2:col2
   688 label *label189
   689 label *label190
   690 label *label187
   691 label *label188
   692 label *label186
   693 set :updatePosition.19:dx 0.5
-    * set :updatePosition.19:dy :updateRowPositions4.2:dy
+  694 set :updatePosition.19:dy 0.5
   695 set :updatePosition.19:value :updateRowPositions4.2:col3
-    * jump *label192 greaterThanEq :updatePosition.19:value 0.0392156862745098
-    * jump *label194 lessThanEq :updatePosition.19:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.19:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.19:dy
-    * set :findBestPosition:best :updatePosition.19:value
+  696 jump *label192 greaterThanEq :updateRowPositions4.2:col3 0.0392156862745098
+  697 jump *label194 lessThanEq :updateRowPositions4.2:col3 :findBestPosition:best
+  698 set :findDrillLocationLocal:diffX 0.5
+  699 set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+  700 set :findBestPosition:best :updateRowPositions4.2:col3
   701 label *label194
   702 label *label195
   703 label *label192
   704 label *label193
   705 label *label191
   706 set :updatePosition.20:dx 1.5
-    * set :updatePosition.20:dy :updateRowPositions4.2:dy
+  707 set :updatePosition.20:dy 0.5
   708 set :updatePosition.20:value :updateRowPositions4.2:col4
-    * jump *label197 greaterThanEq :updatePosition.20:value 0.0392156862745098
-    * jump *label199 lessThanEq :updatePosition.20:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.20:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.20:dy
-    * set :findBestPosition:best :updatePosition.20:value
+  709 jump *label197 greaterThanEq :updateRowPositions4.2:col4 0.0392156862745098
+  710 jump *label199 lessThanEq :updateRowPositions4.2:col4 :findBestPosition:best
+  711 set :findDrillLocationLocal:diffX 1.5
+  712 set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+  713 set :findBestPosition:best :updateRowPositions4.2:col4
   714 label *label199
   715 label *label200
   716 label *label197
 
   719 label *label180
   720 set :updateRowPositions4.3:dy 1.5
   721 set :updateRowPositions4.3:row :findBestPosition:row4
-    * unpackcolor :updateRowPositions4.3:col1 :updateRowPositions4.3:col2 :updateRowPositions4.3:col3 :updateRowPositions4.3:col4 :updateRowPositions4.3:row
+  722 unpackcolor :updateRowPositions4.3:col1 :updateRowPositions4.3:col2 :updateRowPositions4.3:col3 :updateRowPositions4.3:col4 :findBestPosition:row4
   723 set :updatePosition.21:dx -1.5
-    * set :updatePosition.21:dy :updateRowPositions4.3:dy
+  724 set :updatePosition.21:dy 1.5
   725 set :updatePosition.21:value :updateRowPositions4.3:col1
-    * jump *label203 greaterThanEq :updatePosition.21:value 0.0392156862745098
-    * jump *label205 lessThanEq :updatePosition.21:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.21:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.21:dy
-    * set :findBestPosition:best :updatePosition.21:value
+  726 jump *label203 greaterThanEq :updateRowPositions4.3:col1 0.0392156862745098
+  727 jump *label205 lessThanEq :updateRowPositions4.3:col1 :findBestPosition:best
+  728 set :findDrillLocationLocal:diffX -1.5
+  729 set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+  730 set :findBestPosition:best :updateRowPositions4.3:col1
   731 label *label205
   732 label *label206
   733 label *label203
   734 label *label204
   735 label *label202
   736 set :updatePosition.22:dx -0.5
-    * set :updatePosition.22:dy :updateRowPositions4.3:dy
+  737 set :updatePosition.22:dy 1.5
   738 set :updatePosition.22:value :updateRowPositions4.3:col2
-    * jump *label208 greaterThanEq :updatePosition.22:value 0.0392156862745098
-    * jump *label210 lessThanEq :updatePosition.22:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.22:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.22:dy
-    * set :findBestPosition:best :updatePosition.22:value
+  739 jump *label208 greaterThanEq :updateRowPositions4.3:col2 0.0392156862745098
+  740 jump *label210 lessThanEq :updateRowPositions4.3:col2 :findBestPosition:best
+  741 set :findDrillLocationLocal:diffX -0.5
+  742 set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+  743 set :findBestPosition:best :updateRowPositions4.3:col2
   744 label *label210
   745 label *label211
   746 label *label208
   747 label *label209
   748 label *label207
   749 set :updatePosition.23:dx 0.5
-    * set :updatePosition.23:dy :updateRowPositions4.3:dy
+  750 set :updatePosition.23:dy 1.5
   751 set :updatePosition.23:value :updateRowPositions4.3:col3
-    * jump *label213 greaterThanEq :updatePosition.23:value 0.0392156862745098
-    * jump *label215 lessThanEq :updatePosition.23:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.23:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.23:dy
-    * set :findBestPosition:best :updatePosition.23:value
+  752 jump *label213 greaterThanEq :updateRowPositions4.3:col3 0.0392156862745098
+  753 jump *label215 lessThanEq :updateRowPositions4.3:col3 :findBestPosition:best
+  754 set :findDrillLocationLocal:diffX 0.5
+  755 set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+  756 set :findBestPosition:best :updateRowPositions4.3:col3
   757 label *label215
   758 label *label216
   759 label *label213
   760 label *label214
   761 label *label212
   762 set :updatePosition.24:dx 1.5
-    * set :updatePosition.24:dy :updateRowPositions4.3:dy
+  763 set :updatePosition.24:dy 1.5
   764 set :updatePosition.24:value :updateRowPositions4.3:col4
-    * jump *label218 greaterThanEq :updatePosition.24:value 0.0392156862745098
-    * jump *label220 lessThanEq :updatePosition.24:value :findBestPosition:best
-    * set :findDrillLocationLocal:diffX :updatePosition.24:dx
-    * set :findDrillLocationLocal:diffY :updatePosition.24:dy
-    * set :findBestPosition:best :updatePosition.24:value
+  765 jump *label218 greaterThanEq :updateRowPositions4.3:col4 0.0392156862745098
+  766 jump *label220 lessThanEq :updateRowPositions4.3:col4 :findBestPosition:best
+  767 set :findDrillLocationLocal:diffX 1.5
+  768 set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+  769 set :findBestPosition:best :updateRowPositions4.3:col4
   770 label *label220
   771 label *label221
   772 label *label218
 
   776 label *label89
   777 op mul *tmp137 :findBestPosition:best 255
   778 jump *label82 always
-    * set *tmp137 null
   779 label *label82
   780 set :findDrillLocationLocal:score *tmp137
-    * jump *label222 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:capacity
+  781 jump *label222 lessThanEq *tmp137 :findDrillLocationLocal:capacity
   782 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   783 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
+  784 set :findDrillLocationLocal:capacity *tmp137
   785 jump *label224 greaterThanEq :findDrillLocationLocal:limit 1000
-    * set .mapSpots :findDrillLocationLocal:score
+  786 set .mapSpots *tmp137
   787 label *label224
   788 label *label225
   789 jump *label226 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
 
   794 label *label227
   795 label *label222
   796 label *label223
-    * jump *label228 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
+  797 jump *label228 lessThanEq *tmp137 :findDrillLocationLocal:best
   798 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   799 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
-    * set :findDrillLocationLocal:best :findDrillLocationLocal:score
+  800 set :findDrillLocationLocal:best *tmp137
   801 label *label228
   802 label *label229
-    * jump *label230 greaterThan :findDrillLocationLocal:score :findDrillLocationLocal:last
+  803 jump *label230 greaterThan *tmp137 :findDrillLocationLocal:last
   804 jump *label81 always
   805 label *label230
   806 label *label231
-    * set :findDrillLocationLocal:last :findDrillLocationLocal:score
+  807 set :findDrillLocationLocal:last *tmp137
   808 op mul :round:x :findDrillLocationLocal:diffX 1.1
   809 op add *tmp279 :round:x 0.5
   810 op floor *tmp278 *tmp279
 
   863 label *label9
   864 set :moveTo.5:x :createTerrainMask:x
   865 set :moveTo.5:y :createTerrainMask:y
-    * set *tmp310 :moveTo.5:x
-    * set *tmp311 :moveTo.5:y
-    * set :moveTo.6:x *tmp310
-    * set :moveTo.6:y *tmp311
+  866 set *tmp310 :createTerrainMask:x
+  867 set *tmp311 :createTerrainMask:y
+  868 set :moveTo.6:x :moveTo.5:x
+  869 set :moveTo.6:y :moveTo.5:y
   870 set :moveTo.6:radius 6
   871 label *label246
-    * ucontrol within :moveTo.6:x :moveTo.6:y :moveTo.6:radius *tmp312
+  872 ucontrol within *tmp310 *tmp311 6 *tmp312
   873 jump *label248 notEqual *tmp312 false
-    * op sub *tmp314 :moveTo.6:radius 0.5
-    * ucontrol approach :moveTo.6:x :moveTo.6:y *tmp314
+  874 op sub *tmp314 6 0.5
+  875 ucontrol approach *tmp310 *tmp311 5.5
   876 label *label247
   877 jump *label246 always
   878 label *label248
 
   895 select :isBlocked:result equal type @air 0 1
   896 set *tmp318 :isBlocked:result
   897 label *label255
-    * op or :createTerrainMask:result *tmp315 *tmp318
+  898 op or :createTerrainMask:result *tmp315 :isBlocked:result
   899 label *label253
   900 op sub :createTerrainMask:c :createTerrainMask:c 1
   901 jump *label252 always
 
   906 label *label251
   907 set :createTerrainMask*retval :createTerrainMask:result
   908 jump *label243 always
-    * set :createTerrainMask*retval null
   909 label *label243
   910 return :createTerrainMask*retaddr
   911 end
 
   948 label *label259
   949 set :findPossiblePlacement*retval -1
   950 jump *label256 always
-    * set :findPossiblePlacement*retval null
   951 label *label256
   952 return :findPossiblePlacement*retaddr
   953 end
 
   962 set :tryPlaceGenerator:c :findPossiblePlacement:x
   963 set :tryPlaceGenerator:r :findPossiblePlacement:y
   964 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label271 lessThan :tryPlaceGenerator:shift 0
+  965 jump *label271 lessThan :findPossiblePlacement*retval 0
   966 op add *tmp338 :tryPlaceGenerator:centerX 0.5
-    * op add .water2X *tmp338 :tryPlaceGenerator:c
+  967 op add .water2X *tmp338 :findPossiblePlacement:x
   968 op add *tmp340 :tryPlaceGenerator:centerY 0.5
-    * op add .water2Y *tmp340 :tryPlaceGenerator:r
+  969 op add .water2Y *tmp340 :findPossiblePlacement:y
   970 op add *tmp342 :tryPlaceGenerator:centerX 2.5
-    * op add .generatorX *tmp342 :tryPlaceGenerator:c
+  971 op add .generatorX *tmp342 :findPossiblePlacement:x
   972 op add *tmp344 :tryPlaceGenerator:centerY 0.5
-    * op add .generatorY *tmp344 :tryPlaceGenerator:r
-    * op shl *tmp346 :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:shift
+  973 op add .generatorY *tmp340 :findPossiblePlacement:y
+  974 op shl *tmp346 :tryPlaceGenerator:generatorHorizontal :findPossiblePlacement*retval
   975 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp346
   976 jump *label272 always
   977 label *label271
 
   985 set :tryPlaceGenerator:c :findPossiblePlacement:x
   986 set :tryPlaceGenerator:r :findPossiblePlacement:y
   987 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label274 greaterThanEq :tryPlaceGenerator:shift 0
+  988 jump *label274 greaterThanEq :findPossiblePlacement*retval 0
   989 set :tryPlaceGenerator*retval false
   990 jump *label269 always
   991 label *label274
   992 label *label275
   993 op add *tmp350 :tryPlaceGenerator:centerX 0.5
-    * op add .water2X *tmp350 :tryPlaceGenerator:c
+  994 op add .water2X *tmp350 :findPossiblePlacement:x
   995 op add *tmp352 :tryPlaceGenerator:centerY 0.5
-    * op add .water2Y *tmp352 :tryPlaceGenerator:r
+  996 op add .water2Y *tmp352 :findPossiblePlacement:y
   997 op add *tmp354 :tryPlaceGenerator:centerX 0.5
-    * op add .generatorX *tmp354 :tryPlaceGenerator:c
+  998 op add .generatorX *tmp350 :findPossiblePlacement:x
   999 op add *tmp356 :tryPlaceGenerator:centerY 2.5
-    * op add .generatorY *tmp356 :tryPlaceGenerator:r
-    * op shl *tmp358 :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:shift
+ 1000 op add .generatorY *tmp356 :findPossiblePlacement:y
+ 1001 op shl *tmp358 :tryPlaceGenerator:generatorVertical :findPossiblePlacement*retval
  1002 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp358
  1003 label *label272
  1004 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
 
  1011 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1012 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1013 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label277 greaterThanEq :tryPlaceGenerator:shift 0
+ 1014 jump *label277 greaterThanEq :findPossiblePlacement*retval 0
  1015 set :tryPlaceGenerator*retval false
  1016 jump *label269 always
  1017 label *label277
  1018 label *label278
-    * op add .nodeX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * op add .nodeY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * op shl *tmp364 1 :tryPlaceGenerator:shift
+ 1019 op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
+ 1020 op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
+ 1021 op shl *tmp364 1 :findPossiblePlacement*retval
  1022 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp364
  1023 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
  1024 set :findPossiblePlacement:placementMask 1
 
  1030 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1031 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1032 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label280 greaterThanEq :tryPlaceGenerator:shift 0
+ 1033 jump *label280 greaterThanEq :findPossiblePlacement*retval 0
  1034 set :tryPlaceGenerator*retval false
  1035 jump *label269 always
  1036 label *label280
  1037 label *label281
-    * op add .panelX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * op add .panelY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * op shl *tmp370 1 :tryPlaceGenerator:shift
+ 1038 op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
+ 1039 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
+ 1040 op shl *tmp370 1 :findPossiblePlacement*retval
  1041 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp370
  1042 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
  1043 set :findPossiblePlacement:placementMask 1
 
  1049 set :tryPlaceGenerator:c :findPossiblePlacement:x
  1050 set :tryPlaceGenerator:r :findPossiblePlacement:y
  1051 set :tryPlaceGenerator:shift :findPossiblePlacement*retval
-    * jump *label283 greaterThanEq :tryPlaceGenerator:shift 0
+ 1052 jump *label283 greaterThanEq :findPossiblePlacement*retval 0
  1053 set :tryPlaceGenerator*retval false
  1054 jump *label269 always
  1055 label *label283
  1056 label *label284
-    * op add .batteryX :tryPlaceGenerator:centerX :tryPlaceGenerator:c
-    * op add .batteryY :tryPlaceGenerator:centerY :tryPlaceGenerator:r
-    * op shl *tmp376 1 :tryPlaceGenerator:shift
-    * op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp376
+ 1057 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
+ 1058 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
+ 1059 op shl *tmp376 1 :findPossiblePlacement*retval
  1060 set :tryPlaceGenerator*retval true
  1061 jump *label269 always
-    * set :tryPlaceGenerator*retval null
  1062 label *label269
  1063 return :tryPlaceGenerator*retaddr
  1064 end
 
  1084 set :createFixedMatrix:row4 0b0011100
  1085 set :createFixedMatrix:row5 0b0000000
  1086 set :createFixedMatrix:row6 0b0000000
-    * set *tmp379 :createFixedMatrix:row0
-    * op shl *tmp380 :createFixedMatrix:row1 7
-    * op or *tmp381 *tmp379 *tmp380
-    * op shl *tmp382 :createFixedMatrix:row2 14
-    * op or *tmp383 *tmp381 *tmp382
-    * op shl *tmp384 :createFixedMatrix:row3 21
-    * op or *tmp385 *tmp383 *tmp384
-    * op shl *tmp386 :createFixedMatrix:row4 28
-    * op or *tmp387 *tmp385 *tmp386
-    * op shl *tmp388 :createFixedMatrix:row5 35
-    * op or *tmp389 *tmp387 *tmp388
-    * op shl *tmp390 :createFixedMatrix:row6 42
-    * op or *tmp378 *tmp389 *tmp390
+ 1087 set *tmp379 0b0000000
+ 1088 op shl *tmp380 0b0000000 7
+ 1089 op or *tmp381 :createFixedMatrix:row0 0
+ 1090 op shl *tmp382 0b0011100 14
+ 1091 op or *tmp383 *tmp381 458752
+ 1092 op shl *tmp384 0b0011100 21
+ 1093 op or *tmp385 *tmp383 58720256
+ 1094 op shl *tmp386 0b0011100 28
+ 1095 op or *tmp387 *tmp385 7516192768
+ 1096 op shl *tmp388 0b0000000 35
+ 1097 op or *tmp389 *tmp387 0
+ 1098 op shl *tmp390 0b0000000 42
+ 1099 op or *tmp378 *tmp389 0
  1100 label *label287
-    * op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:plainTerrainMask *tmp378
+ 1101 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval *tmp378
  1102 set :createFixedMatrix.1:row0 0b1000001
  1103 set :createFixedMatrix.1:row1 0b0000000
  1104 set :createFixedMatrix.1:row2 0b0011100
 
  1106 set :createFixedMatrix.1:row4 0b0011100
  1107 set :createFixedMatrix.1:row5 0b0000000
  1108 set :createFixedMatrix.1:row6 0b1000001
-    * set *tmp394 :createFixedMatrix.1:row0
-    * op shl *tmp395 :createFixedMatrix.1:row1 7
-    * op or *tmp396 *tmp394 *tmp395
-    * op shl *tmp397 :createFixedMatrix.1:row2 14
-    * op or *tmp398 *tmp396 *tmp397
-    * op shl *tmp399 :createFixedMatrix.1:row3 21
-    * op or *tmp400 *tmp398 *tmp399
-    * op shl *tmp401 :createFixedMatrix.1:row4 28
-    * op or *tmp402 *tmp400 *tmp401
-    * op shl *tmp403 :createFixedMatrix.1:row5 35
-    * op or *tmp404 *tmp402 *tmp403
-    * op shl *tmp405 :createFixedMatrix.1:row6 42
-    * op or *tmp393 *tmp404 *tmp405
+ 1109 set *tmp394 0b1000001
+ 1110 op shl *tmp395 0b0000000 7
+ 1111 op or *tmp396 :createFixedMatrix.1:row0 0
+ 1112 op shl *tmp397 0b0011100 14
+ 1113 op or *tmp398 *tmp396 458752
+ 1114 op shl *tmp399 0b0011100 21
+ 1115 op or *tmp400 *tmp398 58720256
+ 1116 op shl *tmp401 0b0011100 28
+ 1117 op or *tmp402 *tmp400 7516192768
+ 1118 op shl *tmp403 0b0000000 35
+ 1119 op or *tmp404 *tmp402 0
+ 1120 op shl *tmp405 0b1000001 42
+ 1121 op or *tmp393 *tmp404 285873023221760
  1122 label *label288
  1123 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp393
  1124 set :createFixedMatrix.2:row0 0b11
  1125 set :createFixedMatrix.2:row1 0b11
-    * set *tmp409 :createFixedMatrix.2:row0
-    * op shl *tmp410 :createFixedMatrix.2:row1 7
-    * op or *tmp408 *tmp409 *tmp410
+ 1126 set *tmp409 0b11
+ 1127 op shl *tmp410 0b11 7
+ 1128 op or *tmp408 :createFixedMatrix.2:row0 384
  1129 label *label289
  1130 set :layoutThoriumDrillAtLocation:extractorMask *tmp408
  1131 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
-    * set :findPossiblePlacement:placementMask :layoutThoriumDrillAtLocation:extractorMask
+ 1132 set :findPossiblePlacement:placementMask *tmp408
  1133 set :findPossiblePlacement:width 2
  1134 set :findPossiblePlacement:height 2
  1135 setaddr :findPossiblePlacement*retaddr *label290 (h:*label290)
 
  1138 set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
  1139 set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
  1140 set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
-    * jump *label291 lessThan :layoutThoriumDrillAtLocation:shift 0
+ 1141 jump *label291 lessThan :findPossiblePlacement*retval 0
  1142 op add *tmp415 .drillX 0.5
-    * op add .water1X *tmp415 :layoutThoriumDrillAtLocation:c
+ 1143 op add .water1X *tmp415 :findPossiblePlacement:x
  1144 op add *tmp417 .drillY 0.5
-    * op add .water1Y *tmp417 :layoutThoriumDrillAtLocation:r
-    * op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:shift
+ 1145 op add .water1Y *tmp417 :findPossiblePlacement:y
+ 1146 op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :findPossiblePlacement*retval
  1147 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
  1148 label *label291
  1149 label *label292
  1150 set :createFixedMatrix.3:row0 0b1111
  1151 set :createFixedMatrix.3:row1 0b1111
-    * set *tmp420 :createFixedMatrix.3:row0
-    * op shl *tmp421 :createFixedMatrix.3:row1 7
-    * op or *tmp419 *tmp420 *tmp421
+ 1152 set *tmp420 0b1111
+ 1153 op shl *tmp421 0b1111 7
+ 1154 op or *tmp419 :createFixedMatrix.3:row0 1920
  1155 label *label293
  1156 set :layoutThoriumDrillAtLocation:generatorHorizontal *tmp419
  1157 set :createFixedMatrix.4:row0 0b11
  1158 set :createFixedMatrix.4:row1 0b11
  1159 set :createFixedMatrix.4:row2 0b11
  1160 set :createFixedMatrix.4:row3 0b11
-    * set *tmp424 :createFixedMatrix.4:row0
-    * op shl *tmp425 :createFixedMatrix.4:row1 7
-    * op or *tmp426 *tmp424 *tmp425
-    * op shl *tmp427 :createFixedMatrix.4:row2 14
-    * op or *tmp428 *tmp426 *tmp427
-    * op shl *tmp429 :createFixedMatrix.4:row3 21
-    * op or *tmp423 *tmp428 *tmp429
+ 1161 set *tmp424 0b11
+ 1162 op shl *tmp425 0b11 7
+ 1163 op or *tmp426 :createFixedMatrix.4:row0 384
+ 1164 op shl *tmp427 0b11 14
+ 1165 op or *tmp428 *tmp426 49152
+ 1166 op shl *tmp429 0b11 21
+ 1167 op or *tmp423 *tmp428 6291456
  1168 label *label294
  1169 set :layoutThoriumDrillAtLocation:generatorVertical *tmp423
  1170 set :tryPlaceGenerator:centerX .drillX
  1171 set :tryPlaceGenerator:centerY .drillY
  1172 set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:terrainMask
-    * set :tryPlaceGenerator:generatorHorizontal :layoutThoriumDrillAtLocation:generatorHorizontal
-    * set :tryPlaceGenerator:generatorVertical :layoutThoriumDrillAtLocation:generatorVertical
+ 1173 set :tryPlaceGenerator:generatorHorizontal *tmp419
+ 1174 set :tryPlaceGenerator:generatorVertical *tmp423
  1175 setaddr :tryPlaceGenerator*retaddr *label295 (h:*label295)
  1176 call *label11 *invalid :tryPlaceGenerator*retval (m:*label295) (h:*label295)
  1177 label *label295
 
  1212 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
  1213 set :shiftMask:shiftX *tmp437
  1214 set :shiftMask:shiftY *tmp438
-    * op abs *tmp440 :shiftMask:shiftX
+ 1215 op abs *tmp440 *tmp437
  1216 op greaterThan *tmp441 *tmp440 6
-    * op abs *tmp442 :shiftMask:shiftY
+ 1217 op abs *tmp442 *tmp438
  1218 op greaterThan *tmp443 *tmp442 6
  1219 op or *tmp444 *tmp441 *tmp443
  1220 jump *label307 equal *tmp444 false
 
  1222 jump *label306 always
  1223 label *label307
  1224 label *label308
-    * op mul *tmp446 7 :shiftMask:shiftY
-    * op add :shiftMask:shift :shiftMask:shiftX *tmp446
+ 1225 op mul *tmp446 7 *tmp438
+ 1226 op add :shiftMask:shift *tmp437 *tmp446
  1227 jump *label309 lessThanEq :shiftMask:shift 0
  1228 op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
-    * op and *tmp451 :shiftMask:mask :shiftMask:clearMask
+ 1229 op and *tmp451 :layoutThoriumDrillAtLocation:terrainMask :shiftMask:clearMask
  1230 op shl :shiftMask:mask *tmp451 :shiftMask:shift
  1231 jump *label310 always
  1232 label *label309
  1233 op sub *tmp453 0 :shiftMask:shift
-    * op shr :shiftMask:mask :shiftMask:mask *tmp453
+ 1234 op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask *tmp453
  1235 label *label310
-    * jump *label311 equal :shiftMask:shiftX 0
-    * op abs *tmp456 :shiftMask:shiftX
-    * op sub *tmp457 7 *tmp456
+ 1236 jump *label311 equal *tmp437 0
+ 1237 op abs *tmp456 *tmp437
+ 1238 op sub *tmp457 7 *tmp440
  1239 op shr :shiftMask:keep 0b1111111 *tmp457
-    * jump *label313 lessThanEq :shiftMask:shiftX 0
-    * op abs *tmp461 :shiftMask:shiftX
-    * op sub *tmp462 7 *tmp461
-    * op shl :shiftMask:keep :shiftMask:keep *tmp462
+ 1240 jump *label313 lessThanEq *tmp437 0
+ 1241 op abs *tmp461 *tmp437
+ 1242 op sub *tmp462 7 *tmp440
+ 1243 op shl :shiftMask:keep :shiftMask:keep *tmp457
  1244 label *label313
  1245 label *label314
  1246 op shl *tmp463 :shiftMask:keep 7
 
  1254 label *label312
  1255 set *tmp439 :shiftMask:mask
  1256 jump *label306 always
-    * set *tmp439 null
  1257 label *label306
  1258 set :layoutThoriumDrillAtLocation:shiftedMask *tmp439
-    * op or :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:newTerrainMask :layoutThoriumDrillAtLocation:shiftedMask
+ 1259 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp439
  1260 op add *tmp467 .drillX :layoutThoriumDrillAtLocation:sx
  1261 op add *tmp468 .drillY :layoutThoriumDrillAtLocation:sy
  1262 set :tryPlaceGenerator:centerX *tmp467
 
  1278 label *label300
  1279 set :layoutThoriumDrillAtLocation*retval true
  1280 jump *label285 always
-    * set :layoutThoriumDrillAtLocation*retval null
  1281 label *label285
  1282 return :layoutThoriumDrillAtLocation*retaddr
  1283 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-186 instructions):
 
    17 select :spotValue:result equal type @air value 0.06274509803921569
    18 set *tmp1 :spotValue:result
    19 label *label16
-    * set :computeRowValues:x1 :spotValue:result
    20 op sub :spotValue.1:x :computeRowValues:x 1
    21 set :spotValue.1:y :computeRowValues:y
    22 set :spotValue.1:ore :computeRowValues:ore
 
    26 select :spotValue.1:result equal type @air value 0.06274509803921569
    27 set *tmp3 :spotValue.1:result
    28 label *label17
-    * set :computeRowValues:x2 :spotValue.1:result
    29 set :spotValue.2:x :computeRowValues:x
    30 set :spotValue.2:y :computeRowValues:y
    31 set :spotValue.2:ore :computeRowValues:ore
 
    35 select :spotValue.2:result equal type @air value 0.06274509803921569
    36 set *tmp5 :spotValue.2:result
    37 label *label18
-    * set :computeRowValues:x3 :spotValue.2:result
    38 op add :spotValue.3:x :computeRowValues:x 1
    39 set :spotValue.3:y :computeRowValues:y
    40 set :spotValue.3:ore :computeRowValues:ore
 
    44 select :spotValue.3:result equal type @air value 0.06274509803921569
    45 set *tmp7 :spotValue.3:result
    46 label *label19
-    * set :computeRowValues:x4 :spotValue.3:result
    47 op add :spotValue.4:x :computeRowValues:x 2
    48 set :spotValue.4:y :computeRowValues:y
    49 set :spotValue.4:ore :computeRowValues:ore
 
    53 select :spotValue.4:result equal type @air value 0.06274509803921569
    54 set *tmp9 :spotValue.4:result
    55 label *label20
-    * set :computeRowValues:x5 :spotValue.4:result
    56 jump *label21 equal :computeRowValues:large false
-    * op add *tmp11 *tmp1 *tmp3
-    * op add *tmp12 *tmp11 *tmp5
-    * op add *tmp13 *tmp3 *tmp5
-    * op add *tmp14 *tmp13 *tmp7
-    * op add *tmp15 *tmp5 *tmp7
-    * op add *tmp16 *tmp15 *tmp9
+   57 op add *tmp11 :spotValue:result :spotValue.1:result
+   58 op add *tmp12 *tmp11 :spotValue.2:result
+   59 op add *tmp13 :spotValue.1:result :spotValue.2:result
+   60 op add *tmp14 *tmp13 :spotValue.3:result
+   61 op add *tmp15 :spotValue.2:result :spotValue.3:result
+   62 op add *tmp16 *tmp15 :spotValue.4:result
    63 packcolor :computeRowValues*retval *tmp12 *tmp14 *tmp16 0
    64 jump *label15 always
    65 jump *label22 always
    66 label *label21
-    * op add *tmp18 *tmp1 *tmp3
-    * op add *tmp19 *tmp3 *tmp5
-    * op add *tmp20 *tmp5 *tmp7
-    * op add *tmp21 *tmp7 *tmp9
+   67 op add *tmp18 :spotValue:result :spotValue.1:result
+   68 op add *tmp19 :spotValue.1:result :spotValue.2:result
+   69 op add *tmp20 :spotValue.2:result :spotValue.3:result
+   70 op add *tmp21 :spotValue.3:result :spotValue.4:result
    71 packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
    72 jump *label15 always
    73 label *label22
-    * set :computeRowValues*retval null
    74 label *label15
    75 return :computeRowValues*retaddr
    76 end
 
   102 set .mapProgress 0
   103 op add *tmp38 @mapw @maph
   104 op mul .mapTotal 2 *tmp38
-    * set .cornerDistance 0
   105 set .x0 @mapw
   106 set .y0 @maph
   107 set .x1 0
 
   110 set :moveTo:y 0
   111 set *tmp40 0
   112 set *tmp41 0
-    * set :moveTo.1:x :moveTo:x
-    * set :moveTo.1:y :moveTo:y
-    * set :moveTo.1:radius 6
+  113 set :moveTo.1:x 0
+  114 set :moveTo.1:y 0
   115 label *label32
-    * ucontrol within *tmp40 *tmp41 6 *tmp42
+  116 ucontrol within 0 0 6 *tmp42
   117 jump *label34 notEqual *tmp42 false
-    * op sub *tmp44 6 0.5
-    * ucontrol approach *tmp40 *tmp41 5.5
+  118 ucontrol approach 0 0 5.5
   119 label *label33
   120 jump *label32 always
   121 label *label34
 
   152 op sub *tmp45 .coreX .x0
   153 op sub *tmp46 .coreY .y0
   154 op len :findMaxOreDistance:d0 *tmp45 *tmp46
-    * op sub *tmp48 .coreX .x0
   155 op sub *tmp49 .coreY .y1
   156 op len :findMaxOreDistance:d1 *tmp45 *tmp49
   157 op sub *tmp51 .coreX .x1
-    * op sub *tmp52 .coreY .y0
   158 op len :findMaxOreDistance:d2 *tmp51 *tmp46
-    * op sub *tmp54 .coreX .x1
-    * op sub *tmp55 .coreY .y1
   159 op len :findMaxOreDistance:d3 *tmp51 *tmp49
   160 op max *tmp57 :findMaxOreDistance:d0 :findMaxOreDistance:d1
   161 op max *tmp57 *tmp57 :findMaxOreDistance:d2
 
   204 op mul :findDrillLocationLocal:maxDistance *tmp64 .attenuationRate
   205 op min :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
   206 op div .mapTotal :findDrillLocationLocal:distanceLimit 3.8197185279121366
-    * set :locateOreAway:ore :findDrillLocationLocal:item
   207 set :locateOreAway:x :findDrillLocationLocal:oreX
   208 set :locateOreAway:y :findDrillLocationLocal:oreY
-    * set :locateOreAway:distanceLimit :findDrillLocationLocal:distanceLimit
   209 op mul :locateOreAway:distance 3.8197185279121366 .angle
   210 op max .angle .angle @pi
   211 op mul .mapProgress .angle .angle
 
   216 op mul *tmp75 *tmp74 :locateOreAway:distance
   217 op add *tmp76 .coreX *tmp75
   218 op sub *tmp77 @mapw 5
-    * set :limit:value *tmp76
-    * set :limit:low 5
-    * set :limit:high *tmp77
   219 op max *tmp79 *tmp76 5
   220 op min *tmp78 *tmp79 *tmp77
   221 label *label50
 
   224 op mul *tmp82 *tmp81 :locateOreAway:distance
   225 op add *tmp83 .coreY *tmp82
   226 op sub *tmp84 @maph 5
-    * set :limit.1:value *tmp83
-    * set :limit.1:low 5
-    * set :limit.1:high *tmp84
   227 op max *tmp86 *tmp83 5
   228 op min *tmp85 *tmp86 *tmp84
   229 label *label51
   230 set :locateOreAway:ly *tmp85
-    * set :moveTo.2:x *tmp78
-    * set :moveTo.2:y *tmp85
-    * set :moveTo.2:radius 5
   231 label *label53
-    * ucontrol within :locateOreAway:lx :locateOreAway:ly 5 *tmp88
+  232 ucontrol within *tmp78 *tmp85 5 *tmp88
   233 jump *label55 notEqual *tmp88 false
-    * op sub *tmp90 5 0.5
-    * ucontrol approach :locateOreAway:lx :locateOreAway:ly 4.5
+  234 ucontrol approach *tmp78 *tmp85 4.5
   235 label *label54
   236 jump *label53 always
   237 label *label55
 
   256 op len :locateOreAway:unitDist *tmp103 *tmp104
   257 jump *label58 lessThan :locateOreAway:coreDist 7
   258 jump *label60 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
-    * set :visited:x :locateOreAway:x
-    * set :visited:y :locateOreAway:y
   259 set :visited:index 1
-    * set *tmp111 .locations
   260 set :visited:i 0
   261 label *label63
   262 jump *label65 greaterThanEq :visited:i .locations
 
   310 label *label73
   311 set :moveTo.3:x :locateOreAway:x
   312 set :moveTo.3:y :locateOreAway:y
-    * set *tmp132 :findDrillLocationLocal:oreX
-    * set *tmp133 :findDrillLocationLocal:oreY
-    * set :moveTo.4:x :moveTo.3:x
-    * set :moveTo.4:y :moveTo.3:y
-    * set :moveTo.4:radius 6
+  313 set *tmp132 :locateOreAway:x
+  314 set *tmp133 :locateOreAway:y
+  315 set :moveTo.4:x :locateOreAway:x
+  316 set :moveTo.4:y :locateOreAway:y
   317 label *label76
-    * ucontrol within *tmp132 *tmp133 6 *tmp134
+  318 ucontrol within :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 6 *tmp134
   319 jump *label78 notEqual *tmp134 false
-    * op sub *tmp136 6 0.5
-    * ucontrol approach *tmp132 *tmp133 5.5
+  320 ucontrol approach :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 5.5
   321 label *label77
   322 jump *label76 always
   323 label *label78
 
   347 call *label5 *invalid :computeRowValues*retval (m:*label84) (h:*label84)
   348 label *label84
   349 set :findBestPosition:y2 :computeRowValues*retval
-    * set *tmp142 :findBestPosition:y
   350 set :computeRowValues:x :findBestPosition:x
   351 set :computeRowValues:y :findBestPosition:y
   352 set :computeRowValues:ore :findBestPosition:ore
 
   372 setaddr :computeRowValues*retaddr *label87 (h:*label87)
   373 call *label5 *invalid :computeRowValues*retval (m:*label87) (h:*label87)
   374 label *label87
-    * set :findBestPosition:y5 :computeRowValues*retval
   375 set :findBestPosition:best 0
   376 set :findDrillLocationLocal:diffX 0
   377 set :findDrillLocationLocal:diffY 0
 
   383 op add *tmp153 :findBestPosition:y3 :findBestPosition:y4
   384 op add :findBestPosition:row3 *tmp153 :computeRowValues*retval
   385 set :updateRowPositions3:dy -1
-    * set :updateRowPositions3:row :findBestPosition:row1
   386 unpackcolor :updateRowPositions3:col1 :updateRowPositions3:col2 :updateRowPositions3:col3 0 :findBestPosition:row1
-    * set :updatePosition:dx -1
-    * set :updatePosition:dy -1
-    * set :updatePosition:value :updateRowPositions3:col1
   387 jump *label92 greaterThanEq :updateRowPositions3:col1 0.0392156862745098
   388 jump *label94 lessThanEq :updateRowPositions3:col1 0
   389 set :findDrillLocationLocal:diffX -1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3:dy
+  390 set :findDrillLocationLocal:diffY -1
   391 set :findBestPosition:best :updateRowPositions3:col1
   392 label *label94
   393 label *label95
   394 label *label92
   395 label *label93
   396 label *label91
-    * set :updatePosition.1:dx 0
-    * set :updatePosition.1:dy -1
-    * set :updatePosition.1:value :updateRowPositions3:col2
   397 jump *label97 greaterThanEq :updateRowPositions3:col2 0.0392156862745098
   398 jump *label99 lessThanEq :updateRowPositions3:col2 :findBestPosition:best
   399 set :findDrillLocationLocal:diffX 0
-    * set :findDrillLocationLocal:diffY :updateRowPositions3:dy
+  400 set :findDrillLocationLocal:diffY -1
   401 set :findBestPosition:best :updateRowPositions3:col2
   402 label *label99
   403 label *label100
   404 label *label97
   405 label *label98
   406 label *label96
-    * set :updatePosition.2:dx 1
-    * set :updatePosition.2:dy -1
-    * set :updatePosition.2:value :updateRowPositions3:col3
   407 jump *label102 greaterThanEq :updateRowPositions3:col3 0.0392156862745098
   408 jump *label104 lessThanEq :updateRowPositions3:col3 :findBestPosition:best
   409 set :findDrillLocationLocal:diffX 1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3:dy
+  410 set :findDrillLocationLocal:diffY -1
   411 set :findBestPosition:best :updateRowPositions3:col3
   412 label *label104
   413 label *label105
 
   416 label *label101
   417 label *label90
   418 set :updateRowPositions3.1:dy 0
-    * set :updateRowPositions3.1:row :findBestPosition:row2
   419 unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 0 :findBestPosition:row2
-    * set :updatePosition.3:dx -1
-    * set :updatePosition.3:dy 0
-    * set :updatePosition.3:value :updateRowPositions3.1:col1
   420 jump *label108 greaterThanEq :updateRowPositions3.1:col1 0.0392156862745098
   421 jump *label110 lessThanEq :updateRowPositions3.1:col1 :findBestPosition:best
   422 set :findDrillLocationLocal:diffX -1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3.1:dy
+  423 set :findDrillLocationLocal:diffY 0
   424 set :findBestPosition:best :updateRowPositions3.1:col1
   425 label *label110
   426 label *label111
   427 label *label108
   428 label *label109
   429 label *label107
-    * set :updatePosition.4:dx 0
-    * set :updatePosition.4:dy 0
-    * set :updatePosition.4:value :updateRowPositions3.1:col2
   430 jump *label113 greaterThanEq :updateRowPositions3.1:col2 0.0392156862745098
   431 jump *label115 lessThanEq :updateRowPositions3.1:col2 :findBestPosition:best
   432 set :findDrillLocationLocal:diffX 0
-    * set :findDrillLocationLocal:diffY :updateRowPositions3.1:dy
+  433 set :findDrillLocationLocal:diffY 0
   434 set :findBestPosition:best :updateRowPositions3.1:col2
   435 label *label115
   436 label *label116
   437 label *label113
   438 label *label114
   439 label *label112
-    * set :updatePosition.5:dx 1
-    * set :updatePosition.5:dy 0
-    * set :updatePosition.5:value :updateRowPositions3.1:col3
   440 jump *label118 greaterThanEq :updateRowPositions3.1:col3 0.0392156862745098
   441 jump *label120 lessThanEq :updateRowPositions3.1:col3 :findBestPosition:best
   442 set :findDrillLocationLocal:diffX 1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3.1:dy
+  443 set :findDrillLocationLocal:diffY 0
   444 set :findBestPosition:best :updateRowPositions3.1:col3
   445 label *label120
   446 label *label121
 
   449 label *label117
   450 label *label106
   451 set :updateRowPositions3.2:dy 1
-    * set :updateRowPositions3.2:row :findBestPosition:row3
   452 unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 0 :findBestPosition:row3
-    * set :updatePosition.6:dx -1
-    * set :updatePosition.6:dy 1
-    * set :updatePosition.6:value :updateRowPositions3.2:col1
   453 jump *label124 greaterThanEq :updateRowPositions3.2:col1 0.0392156862745098
   454 jump *label126 lessThanEq :updateRowPositions3.2:col1 :findBestPosition:best
   455 set :findDrillLocationLocal:diffX -1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3.2:dy
+  456 set :findDrillLocationLocal:diffY 1
   457 set :findBestPosition:best :updateRowPositions3.2:col1
   458 label *label126
   459 label *label127
   460 label *label124
   461 label *label125
   462 label *label123
-    * set :updatePosition.7:dx 0
-    * set :updatePosition.7:dy 1
-    * set :updatePosition.7:value :updateRowPositions3.2:col2
   463 jump *label129 greaterThanEq :updateRowPositions3.2:col2 0.0392156862745098
   464 jump *label131 lessThanEq :updateRowPositions3.2:col2 :findBestPosition:best
   465 set :findDrillLocationLocal:diffX 0
-    * set :findDrillLocationLocal:diffY :updateRowPositions3.2:dy
+  466 set :findDrillLocationLocal:diffY 1
   467 set :findBestPosition:best :updateRowPositions3.2:col2
   468 label *label131
   469 label *label132
   470 label *label129
   471 label *label130
   472 label *label128
-    * set :updatePosition.8:dx 1
-    * set :updatePosition.8:dy 1
-    * set :updatePosition.8:value :updateRowPositions3.2:col3
   473 jump *label134 greaterThanEq :updateRowPositions3.2:col3 0.0392156862745098
   474 jump *label136 lessThanEq :updateRowPositions3.2:col3 :findBestPosition:best
   475 set :findDrillLocationLocal:diffX 1
-    * set :findDrillLocationLocal:diffY :updateRowPositions3.2:dy
+  476 set :findDrillLocationLocal:diffY 1
   477 set :findBestPosition:best :updateRowPositions3.2:col3
   478 label *label136
   479 label *label137
 
   488 op add :findBestPosition:row3.1 :findBestPosition:y3 :findBestPosition:y4
   489 op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
   490 set :updateRowPositions4:dy -1.5
-    * set :updateRowPositions4:row :findBestPosition:row1.1
   491 unpackcolor :updateRowPositions4:col1 :updateRowPositions4:col2 :updateRowPositions4:col3 :updateRowPositions4:col4 :findBestPosition:row1.1
-    * set :updatePosition.9:dx -1.5
-    * set :updatePosition.9:dy -1.5
-    * set :updatePosition.9:value :updateRowPositions4:col1
   492 jump *label140 greaterThanEq :updateRowPositions4:col1 0.0392156862745098
   493 jump *label142 lessThanEq :updateRowPositions4:col1 0
   494 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  495 set :findDrillLocationLocal:diffY -1.5
   496 set :findBestPosition:best :updateRowPositions4:col1
   497 label *label142
   498 label *label143
   499 label *label140
   500 label *label141
   501 label *label139
-    * set :updatePosition.10:dx -0.5
-    * set :updatePosition.10:dy -1.5
-    * set :updatePosition.10:value :updateRowPositions4:col2
   502 jump *label145 greaterThanEq :updateRowPositions4:col2 0.0392156862745098
   503 jump *label147 lessThanEq :updateRowPositions4:col2 :findBestPosition:best
   504 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  505 set :findDrillLocationLocal:diffY -1.5
   506 set :findBestPosition:best :updateRowPositions4:col2
   507 label *label147
   508 label *label148
   509 label *label145
   510 label *label146
   511 label *label144
-    * set :updatePosition.11:dx 0.5
-    * set :updatePosition.11:dy -1.5
-    * set :updatePosition.11:value :updateRowPositions4:col3
   512 jump *label150 greaterThanEq :updateRowPositions4:col3 0.0392156862745098
   513 jump *label152 lessThanEq :updateRowPositions4:col3 :findBestPosition:best
   514 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  515 set :findDrillLocationLocal:diffY -1.5
   516 set :findBestPosition:best :updateRowPositions4:col3
   517 label *label152
   518 label *label153
   519 label *label150
   520 label *label151
   521 label *label149
-    * set :updatePosition.12:dx 1.5
-    * set :updatePosition.12:dy -1.5
-    * set :updatePosition.12:value :updateRowPositions4:col4
   522 jump *label155 greaterThanEq :updateRowPositions4:col4 0.0392156862745098
   523 jump *label157 lessThanEq :updateRowPositions4:col4 :findBestPosition:best
   524 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4:dy
+  525 set :findDrillLocationLocal:diffY -1.5
   526 set :findBestPosition:best :updateRowPositions4:col4
   527 label *label157
   528 label *label158
 
   531 label *label154
   532 label *label138
   533 set :updateRowPositions4.1:dy -0.5
-    * set :updateRowPositions4.1:row :findBestPosition:row2.1
   534 unpackcolor :updateRowPositions4.1:col1 :updateRowPositions4.1:col2 :updateRowPositions4.1:col3 :updateRowPositions4.1:col4 :findBestPosition:row2.1
-    * set :updatePosition.13:dx -1.5
-    * set :updatePosition.13:dy -0.5
-    * set :updatePosition.13:value :updateRowPositions4.1:col1
   535 jump *label161 greaterThanEq :updateRowPositions4.1:col1 0.0392156862745098
   536 jump *label163 lessThanEq :updateRowPositions4.1:col1 :findBestPosition:best
   537 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+  538 set :findDrillLocationLocal:diffY -0.5
   539 set :findBestPosition:best :updateRowPositions4.1:col1
   540 label *label163
   541 label *label164
   542 label *label161
   543 label *label162
   544 label *label160
-    * set :updatePosition.14:dx -0.5
-    * set :updatePosition.14:dy -0.5
-    * set :updatePosition.14:value :updateRowPositions4.1:col2
   545 jump *label166 greaterThanEq :updateRowPositions4.1:col2 0.0392156862745098
   546 jump *label168 lessThanEq :updateRowPositions4.1:col2 :findBestPosition:best
   547 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+  548 set :findDrillLocationLocal:diffY -0.5
   549 set :findBestPosition:best :updateRowPositions4.1:col2
   550 label *label168
   551 label *label169
   552 label *label166
   553 label *label167
   554 label *label165
-    * set :updatePosition.15:dx 0.5
-    * set :updatePosition.15:dy -0.5
-    * set :updatePosition.15:value :updateRowPositions4.1:col3
   555 jump *label171 greaterThanEq :updateRowPositions4.1:col3 0.0392156862745098
   556 jump *label173 lessThanEq :updateRowPositions4.1:col3 :findBestPosition:best
   557 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+  558 set :findDrillLocationLocal:diffY -0.5
   559 set :findBestPosition:best :updateRowPositions4.1:col3
   560 label *label173
   561 label *label174
   562 label *label171
   563 label *label172
   564 label *label170
-    * set :updatePosition.16:dx 1.5
-    * set :updatePosition.16:dy -0.5
-    * set :updatePosition.16:value :updateRowPositions4.1:col4
   565 jump *label176 greaterThanEq :updateRowPositions4.1:col4 0.0392156862745098
   566 jump *label178 lessThanEq :updateRowPositions4.1:col4 :findBestPosition:best
   567 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.1:dy
+  568 set :findDrillLocationLocal:diffY -0.5
   569 set :findBestPosition:best :updateRowPositions4.1:col4
   570 label *label178
   571 label *label179
 
   574 label *label175
   575 label *label159
   576 set :updateRowPositions4.2:dy 0.5
-    * set :updateRowPositions4.2:row :findBestPosition:row3.1
   577 unpackcolor :updateRowPositions4.2:col1 :updateRowPositions4.2:col2 :updateRowPositions4.2:col3 :updateRowPositions4.2:col4 :findBestPosition:row3.1
-    * set :updatePosition.17:dx -1.5
-    * set :updatePosition.17:dy 0.5
-    * set :updatePosition.17:value :updateRowPositions4.2:col1
   578 jump *label182 greaterThanEq :updateRowPositions4.2:col1 0.0392156862745098
   579 jump *label184 lessThanEq :updateRowPositions4.2:col1 :findBestPosition:best
   580 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+  581 set :findDrillLocationLocal:diffY 0.5
   582 set :findBestPosition:best :updateRowPositions4.2:col1
   583 label *label184
   584 label *label185
   585 label *label182
   586 label *label183
   587 label *label181
-    * set :updatePosition.18:dx -0.5
-    * set :updatePosition.18:dy 0.5
-    * set :updatePosition.18:value :updateRowPositions4.2:col2
   588 jump *label187 greaterThanEq :updateRowPositions4.2:col2 0.0392156862745098
   589 jump *label189 lessThanEq :updateRowPositions4.2:col2 :findBestPosition:best
   590 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+  591 set :findDrillLocationLocal:diffY 0.5
   592 set :findBestPosition:best :updateRowPositions4.2:col2
   593 label *label189
   594 label *label190
   595 label *label187
   596 label *label188
   597 label *label186
-    * set :updatePosition.19:dx 0.5
-    * set :updatePosition.19:dy 0.5
-    * set :updatePosition.19:value :updateRowPositions4.2:col3
   598 jump *label192 greaterThanEq :updateRowPositions4.2:col3 0.0392156862745098
   599 jump *label194 lessThanEq :updateRowPositions4.2:col3 :findBestPosition:best
   600 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+  601 set :findDrillLocationLocal:diffY 0.5
   602 set :findBestPosition:best :updateRowPositions4.2:col3
   603 label *label194
   604 label *label195
   605 label *label192
   606 label *label193
   607 label *label191
-    * set :updatePosition.20:dx 1.5
-    * set :updatePosition.20:dy 0.5
-    * set :updatePosition.20:value :updateRowPositions4.2:col4
   608 jump *label197 greaterThanEq :updateRowPositions4.2:col4 0.0392156862745098
   609 jump *label199 lessThanEq :updateRowPositions4.2:col4 :findBestPosition:best
   610 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.2:dy
+  611 set :findDrillLocationLocal:diffY 0.5
   612 set :findBestPosition:best :updateRowPositions4.2:col4
   613 label *label199
   614 label *label200
 
   617 label *label196
   618 label *label180
   619 set :updateRowPositions4.3:dy 1.5
-    * set :updateRowPositions4.3:row :findBestPosition:row4
   620 unpackcolor :updateRowPositions4.3:col1 :updateRowPositions4.3:col2 :updateRowPositions4.3:col3 :updateRowPositions4.3:col4 :findBestPosition:row4
-    * set :updatePosition.21:dx -1.5
-    * set :updatePosition.21:dy 1.5
-    * set :updatePosition.21:value :updateRowPositions4.3:col1
   621 jump *label203 greaterThanEq :updateRowPositions4.3:col1 0.0392156862745098
   622 jump *label205 lessThanEq :updateRowPositions4.3:col1 :findBestPosition:best
   623 set :findDrillLocationLocal:diffX -1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+  624 set :findDrillLocationLocal:diffY 1.5
   625 set :findBestPosition:best :updateRowPositions4.3:col1
   626 label *label205
   627 label *label206
   628 label *label203
   629 label *label204
   630 label *label202
-    * set :updatePosition.22:dx -0.5
-    * set :updatePosition.22:dy 1.5
-    * set :updatePosition.22:value :updateRowPositions4.3:col2
   631 jump *label208 greaterThanEq :updateRowPositions4.3:col2 0.0392156862745098
   632 jump *label210 lessThanEq :updateRowPositions4.3:col2 :findBestPosition:best
   633 set :findDrillLocationLocal:diffX -0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+  634 set :findDrillLocationLocal:diffY 1.5
   635 set :findBestPosition:best :updateRowPositions4.3:col2
   636 label *label210
   637 label *label211
   638 label *label208
   639 label *label209
   640 label *label207
-    * set :updatePosition.23:dx 0.5
-    * set :updatePosition.23:dy 1.5
-    * set :updatePosition.23:value :updateRowPositions4.3:col3
   641 jump *label213 greaterThanEq :updateRowPositions4.3:col3 0.0392156862745098
   642 jump *label215 lessThanEq :updateRowPositions4.3:col3 :findBestPosition:best
   643 set :findDrillLocationLocal:diffX 0.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+  644 set :findDrillLocationLocal:diffY 1.5
   645 set :findBestPosition:best :updateRowPositions4.3:col3
   646 label *label215
   647 label *label216
   648 label *label213
   649 label *label214
   650 label *label212
-    * set :updatePosition.24:dx 1.5
-    * set :updatePosition.24:dy 1.5
-    * set :updatePosition.24:value :updateRowPositions4.3:col4
   651 jump *label218 greaterThanEq :updateRowPositions4.3:col4 0.0392156862745098
   652 jump *label220 lessThanEq :updateRowPositions4.3:col4 :findBestPosition:best
   653 set :findDrillLocationLocal:diffX 1.5
-    * set :findDrillLocationLocal:diffY :updateRowPositions4.3:dy
+  654 set :findDrillLocationLocal:diffY 1.5
   655 set :findBestPosition:best :updateRowPositions4.3:col4
   656 label *label220
   657 label *label221
 
   663 op mul *tmp137 :findBestPosition:best 255
   664 jump *label82 always
   665 label *label82
-    * set :findDrillLocationLocal:score *tmp137
   666 jump *label222 lessThanEq *tmp137 :findDrillLocationLocal:capacity
   667 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   668 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
 
   750 set :moveTo.5:y :createTerrainMask:y
   751 set *tmp310 :createTerrainMask:x
   752 set *tmp311 :createTerrainMask:y
-    * set :moveTo.6:x :moveTo.5:x
-    * set :moveTo.6:y :moveTo.5:y
-    * set :moveTo.6:radius 6
+  753 set :moveTo.6:x :createTerrainMask:x
+  754 set :moveTo.6:y :createTerrainMask:y
   755 label *label246
-    * ucontrol within *tmp310 *tmp311 6 *tmp312
+  756 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp312
   757 jump *label248 notEqual *tmp312 false
-    * op sub *tmp314 6 0.5
-    * ucontrol approach *tmp310 *tmp311 5.5
+  758 ucontrol approach :createTerrainMask:x :createTerrainMask:y 5.5
   759 label *label247
   760 jump *label246 always
   761 label *label248
 
   776 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   777 select type equal type @boulder @air type
   778 select :isBlocked:result equal type @air 0 1
-    * set *tmp318 :isBlocked:result
   779 label *label255
   780 op or :createTerrainMask:result *tmp315 :isBlocked:result
   781 label *label253
 
   841 setaddr :findPossiblePlacement*retaddr *label270 (h:*label270)
   842 call *label10 *invalid :findPossiblePlacement*retval (m:*label270) (h:*label270)
   843 label *label270
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
   844 jump *label271 lessThan :findPossiblePlacement*retval 0
   845 op add *tmp338 :tryPlaceGenerator:centerX 0.5
   846 op add .water2X *tmp338 :findPossiblePlacement:x
 
   848 op add .water2Y *tmp340 :findPossiblePlacement:y
   849 op add *tmp342 :tryPlaceGenerator:centerX 2.5
   850 op add .generatorX *tmp342 :findPossiblePlacement:x
-    * op add *tmp344 :tryPlaceGenerator:centerY 0.5
   851 op add .generatorY *tmp340 :findPossiblePlacement:y
   852 op shl *tmp346 :tryPlaceGenerator:generatorHorizontal :findPossiblePlacement*retval
   853 op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp346
 
   860 setaddr :findPossiblePlacement*retaddr *label273 (h:*label273)
   861 call *label10 *invalid :findPossiblePlacement*retval (m:*label273) (h:*label273)
   862 label *label273
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
   863 jump *label274 greaterThanEq :findPossiblePlacement*retval 0
   864 set :tryPlaceGenerator*retval false
   865 jump *label269 always
 
   869 op add .water2X *tmp350 :findPossiblePlacement:x
   870 op add *tmp352 :tryPlaceGenerator:centerY 0.5
   871 op add .water2Y *tmp352 :findPossiblePlacement:y
-    * op add *tmp354 :tryPlaceGenerator:centerX 0.5
   872 op add .generatorX *tmp350 :findPossiblePlacement:x
   873 op add *tmp356 :tryPlaceGenerator:centerY 2.5
   874 op add .generatorY *tmp356 :findPossiblePlacement:y
 
   882 setaddr :findPossiblePlacement*retaddr *label276 (h:*label276)
   883 call *label10 *invalid :findPossiblePlacement*retval (m:*label276) (h:*label276)
   884 label *label276
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
   885 jump *label277 greaterThanEq :findPossiblePlacement*retval 0
   886 set :tryPlaceGenerator*retval false
   887 jump *label269 always
 
   898 setaddr :findPossiblePlacement*retaddr *label279 (h:*label279)
   899 call *label10 *invalid :findPossiblePlacement*retval (m:*label279) (h:*label279)
   900 label *label279
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
   901 jump *label280 greaterThanEq :findPossiblePlacement*retval 0
   902 set :tryPlaceGenerator*retval false
   903 jump *label269 always
 
   914 setaddr :findPossiblePlacement*retaddr *label282 (h:*label282)
   915 call *label10 *invalid :findPossiblePlacement*retval (m:*label282) (h:*label282)
   916 label *label282
-    * set :tryPlaceGenerator:c :findPossiblePlacement:x
-    * set :tryPlaceGenerator:r :findPossiblePlacement:y
-    * set :tryPlaceGenerator:shift :findPossiblePlacement*retval
   917 jump *label283 greaterThanEq :findPossiblePlacement*retval 0
   918 set :tryPlaceGenerator*retval false
   919 jump *label269 always
 
   921 label *label284
   922 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   923 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
-    * op shl *tmp376 1 :findPossiblePlacement*retval
   924 set :tryPlaceGenerator*retval true
   925 jump *label269 always
   926 label *label269
 
   940 setaddr :createTerrainMask*retaddr *label286 (h:*label286)
   941 call *label9 *invalid :createTerrainMask*retval (m:*label286) (h:*label286)
   942 label *label286
-    * set :layoutThoriumDrillAtLocation:plainTerrainMask :createTerrainMask*retval
   943 set :createFixedMatrix:row0 0b0000000
-    * set :createFixedMatrix:row1 0b0000000
-    * set :createFixedMatrix:row2 0b0011100
-    * set :createFixedMatrix:row3 0b0011100
-    * set :createFixedMatrix:row4 0b0011100
-    * set :createFixedMatrix:row5 0b0000000
-    * set :createFixedMatrix:row6 0b0000000
-    * set *tmp379 0b0000000
-    * op shl *tmp380 0b0000000 7
-    * op or *tmp381 :createFixedMatrix:row0 0
-    * op shl *tmp382 0b0011100 14
-    * op or *tmp383 *tmp381 458752
-    * op shl *tmp384 0b0011100 21
-    * op or *tmp385 *tmp383 58720256
-    * op shl *tmp386 0b0011100 28
-    * op or *tmp387 *tmp385 7516192768
-    * op shl *tmp388 0b0000000 35
-    * op or *tmp389 *tmp387 0
-    * op shl *tmp390 0b0000000 42
-    * op or *tmp378 *tmp389 0
+  944 op or *tmp381 0b0000000 0
+  945 op or *tmp383 0 458752
+  946 op or *tmp385 458752 58720256
+  947 op or *tmp387 59179008 7516192768
+  948 op or *tmp389 7575371776 0
+  949 op or *tmp378 7575371776 0
   950 label *label287
-    * op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval *tmp378
+  951 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
   952 set :createFixedMatrix.1:row0 0b1000001
-    * set :createFixedMatrix.1:row1 0b0000000
-    * set :createFixedMatrix.1:row2 0b0011100
-    * set :createFixedMatrix.1:row3 0b0011100
-    * set :createFixedMatrix.1:row4 0b0011100
-    * set :createFixedMatrix.1:row5 0b0000000
-    * set :createFixedMatrix.1:row6 0b1000001
-    * set *tmp394 0b1000001
-    * op shl *tmp395 0b0000000 7
-    * op or *tmp396 :createFixedMatrix.1:row0 0
-    * op shl *tmp397 0b0011100 14
-    * op or *tmp398 *tmp396 458752
-    * op shl *tmp399 0b0011100 21
-    * op or *tmp400 *tmp398 58720256
-    * op shl *tmp401 0b0011100 28
-    * op or *tmp402 *tmp400 7516192768
-    * op shl *tmp403 0b0000000 35
-    * op or *tmp404 *tmp402 0
-    * op shl *tmp405 0b1000001 42
-    * op or *tmp393 *tmp404 285873023221760
+  953 op or *tmp396 0b1000001 0
+  954 op or *tmp398 65 458752
+  955 op or *tmp400 458817 58720256
+  956 op or *tmp402 59179073 7516192768
+  957 op or *tmp404 7575371841 0
+  958 op or *tmp393 7575371841 285873023221760
   959 label *label288
-    * op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask *tmp393
+  960 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
   961 set :createFixedMatrix.2:row0 0b11
-    * set :createFixedMatrix.2:row1 0b11
-    * set *tmp409 0b11
-    * op shl *tmp410 0b11 7
-    * op or *tmp408 :createFixedMatrix.2:row0 384
+  962 op or *tmp408 0b11 384
   963 label *label289
-    * set :layoutThoriumDrillAtLocation:extractorMask *tmp408
+  964 set :layoutThoriumDrillAtLocation:extractorMask 387
   965 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
-    * set :findPossiblePlacement:placementMask *tmp408
+  966 set :findPossiblePlacement:placementMask 387
   967 set :findPossiblePlacement:width 2
   968 set :findPossiblePlacement:height 2
   969 setaddr :findPossiblePlacement*retaddr *label290 (h:*label290)
   970 call *label10 *invalid :findPossiblePlacement*retval (m:*label290) (h:*label290)
   971 label *label290
-    * set :layoutThoriumDrillAtLocation:c :findPossiblePlacement:x
-    * set :layoutThoriumDrillAtLocation:r :findPossiblePlacement:y
-    * set :layoutThoriumDrillAtLocation:shift :findPossiblePlacement*retval
   972 jump *label291 lessThan :findPossiblePlacement*retval 0
   973 op add *tmp415 .drillX 0.5
   974 op add .water1X *tmp415 :findPossiblePlacement:x
 
   979 label *label291
   980 label *label292
   981 set :createFixedMatrix.3:row0 0b1111
-    * set :createFixedMatrix.3:row1 0b1111
-    * set *tmp420 0b1111
-    * op shl *tmp421 0b1111 7
-    * op or *tmp419 :createFixedMatrix.3:row0 1920
+  982 op or *tmp419 0b1111 1920
   983 label *label293
-    * set :layoutThoriumDrillAtLocation:generatorHorizontal *tmp419
+  984 set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
   985 set :createFixedMatrix.4:row0 0b11
-    * set :createFixedMatrix.4:row1 0b11
-    * set :createFixedMatrix.4:row2 0b11
-    * set :createFixedMatrix.4:row3 0b11
-    * set *tmp424 0b11
-    * op shl *tmp425 0b11 7
-    * op or *tmp426 :createFixedMatrix.4:row0 384
-    * op shl *tmp427 0b11 14
-    * op or *tmp428 *tmp426 49152
-    * op shl *tmp429 0b11 21
-    * op or *tmp423 *tmp428 6291456
+  986 op or *tmp426 0b11 384
+  987 op or *tmp428 387 49152
+  988 op or *tmp423 49539 6291456
   989 label *label294
-    * set :layoutThoriumDrillAtLocation:generatorVertical *tmp423
+  990 set :layoutThoriumDrillAtLocation:generatorVertical 6340995
   991 set :tryPlaceGenerator:centerX .drillX
   992 set :tryPlaceGenerator:centerY .drillY
   993 set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:terrainMask
-    * set :tryPlaceGenerator:generatorHorizontal *tmp419
-    * set :tryPlaceGenerator:generatorVertical *tmp423
+  994 set :tryPlaceGenerator:generatorHorizontal 1935
+  995 set :tryPlaceGenerator:generatorVertical 6340995
   996 setaddr :tryPlaceGenerator*retaddr *label295 (h:*label295)
   997 call *label11 *invalid :tryPlaceGenerator*retval (m:*label295) (h:*label295)
   998 label *label295
 
  1027 setaddr :createTerrainMask*retaddr *label305 (h:*label305)
  1028 call *label9 *invalid :createTerrainMask*retval (m:*label305) (h:*label305)
  1029 label *label305
-    * set :layoutThoriumDrillAtLocation:newTerrainMask :createTerrainMask*retval
  1030 op sub *tmp437 0 :layoutThoriumDrillAtLocation:sx
  1031 op sub *tmp438 0 :layoutThoriumDrillAtLocation:sy
  1032 set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
-    * set :shiftMask:shiftX *tmp437
-    * set :shiftMask:shiftY *tmp438
  1033 op abs *tmp440 *tmp437
  1034 op greaterThan *tmp441 *tmp440 6
  1035 op abs *tmp442 *tmp438
 
  1052 op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask *tmp453
  1053 label *label310
  1054 jump *label311 equal *tmp437 0
-    * op abs *tmp456 *tmp437
  1055 op sub *tmp457 7 *tmp440
  1056 op shr :shiftMask:keep 0b1111111 *tmp457
  1057 jump *label313 lessThanEq *tmp437 0
-    * op abs *tmp461 *tmp437
-    * op sub *tmp462 7 *tmp440
  1058 op shl :shiftMask:keep :shiftMask:keep *tmp457
  1059 label *label313
  1060 label *label314
 
  1070 set *tmp439 :shiftMask:mask
  1071 jump *label306 always
  1072 label *label306
-    * set :layoutThoriumDrillAtLocation:shiftedMask *tmp439
  1073 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp439
  1074 op add *tmp467 .drillX :layoutThoriumDrillAtLocation:sx
  1075 op add *tmp468 .drillY :layoutThoriumDrillAtLocation:sy

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-54 instructions):
 
    15 select value equal floor :spotValue:ore 0.00392156862745098 0
    16 select type equal type @boulder @air type
    17 select :spotValue:result equal type @air value 0.06274509803921569
-    * set *tmp1 :spotValue:result
    18 label *label16
    19 op sub :spotValue.1:x :computeRowValues:x 1
    20 set :spotValue.1:y :computeRowValues:y
 
    23 select value equal floor :spotValue.1:ore 0.00392156862745098 0
    24 select type equal type @boulder @air type
    25 select :spotValue.1:result equal type @air value 0.06274509803921569
-    * set *tmp3 :spotValue.1:result
    26 label *label17
    27 set :spotValue.2:x :computeRowValues:x
    28 set :spotValue.2:y :computeRowValues:y
 
    31 select value equal floor :spotValue.2:ore 0.00392156862745098 0
    32 select type equal type @boulder @air type
    33 select :spotValue.2:result equal type @air value 0.06274509803921569
-    * set *tmp5 :spotValue.2:result
    34 label *label18
    35 op add :spotValue.3:x :computeRowValues:x 1
    36 set :spotValue.3:y :computeRowValues:y
 
    39 select value equal floor :spotValue.3:ore 0.00392156862745098 0
    40 select type equal type @boulder @air type
    41 select :spotValue.3:result equal type @air value 0.06274509803921569
-    * set *tmp7 :spotValue.3:result
    42 label *label19
    43 op add :spotValue.4:x :computeRowValues:x 2
    44 set :spotValue.4:y :computeRowValues:y
 
    47 select value equal floor :spotValue.4:ore 0.00392156862745098 0
    48 select type equal type @boulder @air type
    49 select :spotValue.4:result equal type @air value 0.06274509803921569
-    * set *tmp9 :spotValue.4:result
    50 label *label20
    51 jump *label21 equal :computeRowValues:large false
    52 op add *tmp11 :spotValue:result :spotValue.1:result
 
   101 set .y0 @maph
   102 set .x1 0
   103 set .y1 0
-    * set :moveTo:x 0
-    * set :moveTo:y 0
-    * set *tmp40 0
-    * set *tmp41 0
-    * set :moveTo.1:x 0
-    * set :moveTo.1:y 0
   104 label *label32
   105 ucontrol within 0 0 6 *tmp42
   106 jump *label34 notEqual *tmp42 false
 
   208 op max *tmp79 *tmp76 5
   209 op min *tmp78 *tmp79 *tmp77
   210 label *label50
-    * set :locateOreAway:lx *tmp78
   211 op cos *tmp81 :locateOreAway:a
   212 op mul *tmp82 *tmp81 :locateOreAway:distance
   213 op add *tmp83 .coreY *tmp82
 
   215 op max *tmp86 *tmp83 5
   216 op min *tmp85 *tmp86 *tmp84
   217 label *label51
-    * set :locateOreAway:ly *tmp85
   218 label *label53
   219 ucontrol within *tmp78 *tmp85 5 *tmp88
   220 jump *label55 notEqual *tmp88 false
 
   295 op add .mapSpots .mapSpots 1
   296 label *label72
   297 label *label73
-    * set :moveTo.3:x :locateOreAway:x
-    * set :moveTo.3:y :locateOreAway:y
-    * set *tmp132 :locateOreAway:x
-    * set *tmp133 :locateOreAway:y
-    * set :moveTo.4:x :locateOreAway:x
-    * set :moveTo.4:y :locateOreAway:y
   298 label *label76
-    * ucontrol within :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 6 *tmp134
+  299 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp134
   300 jump *label78 notEqual *tmp134 false
-    * ucontrol approach :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY 5.5
+  301 ucontrol approach :locateOreAway:x :locateOreAway:y 5.5
   302 label *label77
   303 jump *label76 always
   304 label *label78
 
   363 op add :findBestPosition:row2 *tmp151 :findBestPosition:y4
   364 op add *tmp153 :findBestPosition:y3 :findBestPosition:y4
   365 op add :findBestPosition:row3 *tmp153 :computeRowValues*retval
-    * set :updateRowPositions3:dy -1
   366 unpackcolor :updateRowPositions3:col1 :updateRowPositions3:col2 :updateRowPositions3:col3 0 :findBestPosition:row1
   367 jump *label92 greaterThanEq :updateRowPositions3:col1 0.0392156862745098
   368 jump *label94 lessThanEq :updateRowPositions3:col1 0
 
   395 label *label103
   396 label *label101
   397 label *label90
-    * set :updateRowPositions3.1:dy 0
   398 unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 0 :findBestPosition:row2
   399 jump *label108 greaterThanEq :updateRowPositions3.1:col1 0.0392156862745098
   400 jump *label110 lessThanEq :updateRowPositions3.1:col1 :findBestPosition:best
 
   427 label *label119
   428 label *label117
   429 label *label106
-    * set :updateRowPositions3.2:dy 1
   430 unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 0 :findBestPosition:row3
   431 jump *label124 greaterThanEq :updateRowPositions3.2:col1 0.0392156862745098
   432 jump *label126 lessThanEq :updateRowPositions3.2:col1 :findBestPosition:best
 
   465 op add :findBestPosition:row2.1 :findBestPosition:y2 :findBestPosition:y3
   466 op add :findBestPosition:row3.1 :findBestPosition:y3 :findBestPosition:y4
   467 op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
-    * set :updateRowPositions4:dy -1.5
   468 unpackcolor :updateRowPositions4:col1 :updateRowPositions4:col2 :updateRowPositions4:col3 :updateRowPositions4:col4 :findBestPosition:row1.1
   469 jump *label140 greaterThanEq :updateRowPositions4:col1 0.0392156862745098
   470 jump *label142 lessThanEq :updateRowPositions4:col1 0
 
   507 label *label156
   508 label *label154
   509 label *label138
-    * set :updateRowPositions4.1:dy -0.5
   510 unpackcolor :updateRowPositions4.1:col1 :updateRowPositions4.1:col2 :updateRowPositions4.1:col3 :updateRowPositions4.1:col4 :findBestPosition:row2.1
   511 jump *label161 greaterThanEq :updateRowPositions4.1:col1 0.0392156862745098
   512 jump *label163 lessThanEq :updateRowPositions4.1:col1 :findBestPosition:best
 
   549 label *label177
   550 label *label175
   551 label *label159
-    * set :updateRowPositions4.2:dy 0.5
   552 unpackcolor :updateRowPositions4.2:col1 :updateRowPositions4.2:col2 :updateRowPositions4.2:col3 :updateRowPositions4.2:col4 :findBestPosition:row3.1
   553 jump *label182 greaterThanEq :updateRowPositions4.2:col1 0.0392156862745098
   554 jump *label184 lessThanEq :updateRowPositions4.2:col1 :findBestPosition:best
 
   591 label *label198
   592 label *label196
   593 label *label180
-    * set :updateRowPositions4.3:dy 1.5
   594 unpackcolor :updateRowPositions4.3:col1 :updateRowPositions4.3:col2 :updateRowPositions4.3:col3 :updateRowPositions4.3:col4 :findBestPosition:row4
   595 jump *label203 greaterThanEq :updateRowPositions4.3:col1 0.0392156862745098
   596 jump *label205 lessThanEq :updateRowPositions4.3:col1 :findBestPosition:best
 
   720 jump *label14 always
   721 end
   722 label *label9
-    * set :moveTo.5:x :createTerrainMask:x
-    * set :moveTo.5:y :createTerrainMask:y
-    * set *tmp310 :createTerrainMask:x
-    * set *tmp311 :createTerrainMask:y
-    * set :moveTo.6:x :createTerrainMask:x
-    * set :moveTo.6:y :createTerrainMask:y
   723 label *label246
   724 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp312
   725 jump *label248 notEqual *tmp312 false
 
   908 setaddr :createTerrainMask*retaddr *label286 (h:*label286)
   909 call *label9 *invalid :createTerrainMask*retval (m:*label286) (h:*label286)
   910 label *label286
-    * set :createFixedMatrix:row0 0b0000000
-    * op or *tmp381 0b0000000 0
-    * op or *tmp383 0 458752
-    * op or *tmp385 458752 58720256
-    * op or *tmp387 59179008 7516192768
-    * op or *tmp389 7575371776 0
-    * op or *tmp378 7575371776 0
   911 label *label287
   912 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
-    * set :createFixedMatrix.1:row0 0b1000001
-    * op or *tmp396 0b1000001 0
-    * op or *tmp398 65 458752
-    * op or *tmp400 458817 58720256
-    * op or *tmp402 59179073 7516192768
-    * op or *tmp404 7575371841 0
-    * op or *tmp393 7575371841 285873023221760
   913 label *label288
   914 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
-    * set :createFixedMatrix.2:row0 0b11
-    * op or *tmp408 0b11 384
   915 label *label289
   916 set :layoutThoriumDrillAtLocation:extractorMask 387
   917 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
 
   930 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
   931 label *label291
   932 label *label292
-    * set :createFixedMatrix.3:row0 0b1111
-    * op or *tmp419 0b1111 1920
   933 label *label293
   934 set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
-    * set :createFixedMatrix.4:row0 0b11
-    * op or *tmp426 0b11 384
-    * op or *tmp428 387 49152
-    * op or *tmp423 49539 6291456
   935 label *label294
   936 set :layoutThoriumDrillAtLocation:generatorVertical 6340995
   937 set :tryPlaceGenerator:centerX .drillX

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
   198 op mul :locateOreAway:distance 3.8197185279121366 .angle
   199 op max .angle .angle @pi
   200 op mul .mapProgress .angle .angle
+  201 op sub *tmp77 @mapw 5
+  202 op sub *tmp84 @maph 5
   203 label *label47
   204 jump *label49 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   205 op div :locateOreAway:a .angle @degToRad
   206 op sin *tmp74 :locateOreAway:a
   207 op mul *tmp75 *tmp74 :locateOreAway:distance
   208 op add *tmp76 .coreX *tmp75
-    * op sub *tmp77 @mapw 5
   209 op max *tmp79 *tmp76 5
   210 op min *tmp78 *tmp79 *tmp77
   211 label *label50
   212 op cos *tmp81 :locateOreAway:a
   213 op mul *tmp82 *tmp81 :locateOreAway:distance
   214 op add *tmp83 .coreY *tmp82
-    * op sub *tmp84 @maph 5
   215 op max *tmp86 *tmp83 5
   216 op min *tmp85 *tmp86 *tmp84
   217 label *label51
 
   734 label *label249
   735 jump *label251 lessThan :createTerrainMask:r -3
   736 set :createTerrainMask:c 3
+  737 op add *tmp317 :createTerrainMask:y :createTerrainMask:r
   738 label *label252
   739 jump *label254 lessThan :createTerrainMask:c -3
   740 op shl *tmp315 :createTerrainMask:result 1
   741 op add *tmp316 :createTerrainMask:x :createTerrainMask:c
-    * op add *tmp317 :createTerrainMask:y :createTerrainMask:r
   742 set :isBlocked:x *tmp316
   743 set :isBlocked:y *tmp317
   744 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-2 instructions):
 
   202 op sub *tmp84 @maph 5
   203 label *label47
   204 jump *label49 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
+  205 label *label323
   206 op div :locateOreAway:a .angle @degToRad
   207 op sin *tmp74 :locateOreAway:a
   208 op mul *tmp75 *tmp74 :locateOreAway:distance
 
   248 set :visited:i 0
   249 label *label63
   250 jump *label65 greaterThanEq :visited:i .locations
+  251 label *label324
   252 read :visited:lx bank1 :visited:index
   253 op add *tmp114 :visited:index 1
   254 read :visited:ly bank1 *tmp114
 
   263 op add :visited:index :visited:index 3
   264 label *label64
   265 op add :visited:i :visited:i 1
-    * jump *label63 always
+  266 jump *label324 lessThan :visited:i .locations
   267 label *label65
   268 set *tmp110 false
   269 jump *label62 always
 
   281 label *label58
   282 label *label59
   283 label *label48
-    * jump *label47 always
+  284 jump *label323 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   285 label *label49
   286 set *tmp68 false
   287 jump *label46 always
 
   734 set :createTerrainMask:result 0
   735 set :createTerrainMask:r 3
   736 label *label249
-    * jump *label251 lessThan :createTerrainMask:r -3
+  737 label *label325
   738 set :createTerrainMask:c 3
   739 op add *tmp317 :createTerrainMask:y :createTerrainMask:r
   740 label *label252
-    * jump *label254 lessThan :createTerrainMask:c -3
+  741 label *label326
   742 op shl *tmp315 :createTerrainMask:result 1
   743 op add *tmp316 :createTerrainMask:x :createTerrainMask:c
   744 set :isBlocked:x *tmp316
 
   750 op or :createTerrainMask:result *tmp315 :isBlocked:result
   751 label *label253
   752 op sub :createTerrainMask:c :createTerrainMask:c 1
-    * jump *label252 always
+  753 jump *label326 greaterThanEq :createTerrainMask:c -3
   754 label *label254
   755 label *label250
   756 op sub :createTerrainMask:r :createTerrainMask:r 1
-    * jump *label249 always
+  757 jump *label325 greaterThanEq :createTerrainMask:r -3
   758 label *label251
   759 set :createTerrainMask*retval :createTerrainMask:result
   760 jump *label243 always
 
   765 set :findPossiblePlacement:y -3
   766 label *label257
   767 jump *label259 greaterThan :findPossiblePlacement:y 3
+  768 label *label327
   769 op add *tmp320 :findPossiblePlacement:y 3
   770 op mul *tmp321 7 *tmp320
   771 op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp321
   772 set :findPossiblePlacement:x -3
   773 label *label260
   774 jump *label262 greaterThan :findPossiblePlacement:x 3
+  775 label *label328
   776 op and *tmp323 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
   777 jump *label263 notEqual *tmp323 0
   778 op mul *tmp326 :findPossiblePlacement:y 7
 
   789 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
   790 label *label261
   791 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
-    * jump *label260 always
+  792 jump *label328 lessThanEq :findPossiblePlacement:x 3
   793 label *label262
   794 op sub *tmp332 3 :findPossiblePlacement:height
   795 jump *label267 lessThanEq :findPossiblePlacement:y *tmp332
 
   798 label *label268
   799 label *label258
   800 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
-    * jump *label257 always
+  801 jump *label327 lessThanEq :findPossiblePlacement:y 3
   802 label *label259
   803 set :findPossiblePlacement*retval -1
   804 jump *label256 always

Modifications by Inline function 'findMaxOreDistance' defined at line 260:1 (-4 instructions):
 
    93 label *label23
    94 return :trace*retaddr
    95 end
-    * label *label7
-    * set .mapProgress 0
-    * op add *tmp38 @mapw @maph
-    * op mul .mapTotal 2 *tmp38
-    * set .x0 @mapw
-    * set .y0 @maph
-    * set .x1 0
-    * set .y1 0
-    * label *label32
-    * ucontrol within 0 0 6 *tmp42
-    * jump *label34 notEqual *tmp42 false
-    * ucontrol approach 0 0 5.5
-    * label *label33
-    * jump *label32 always
-    * label *label34
-    * label *label31
-    * label *label30
-    * op add .cornerDistance 0 @mapw
-    * set :trace:ore :findMaxOreDistance:ore
-    * set :trace:x @mapw
-    * set :trace:y 0
-    * setaddr :trace*retaddr *label35 (h:*label35)
-    * call *label6 *invalid :trace*retval (m:*label35) (h:*label35)
-    * label *label35
-    * op add .cornerDistance .cornerDistance @maph
-    * set :trace:ore :findMaxOreDistance:ore
-    * set :trace:x @mapw
-    * set :trace:y @maph
-    * setaddr :trace*retaddr *label36 (h:*label36)
-    * call *label6 *invalid :trace*retval (m:*label36) (h:*label36)
-    * label *label36
-    * op add .cornerDistance .cornerDistance @mapw
-    * set :trace:ore :findMaxOreDistance:ore
-    * set :trace:x 0
-    * set :trace:y @maph
-    * setaddr :trace*retaddr *label37 (h:*label37)
-    * call *label6 *invalid :trace*retval (m:*label37) (h:*label37)
-    * label *label37
-    * op add .cornerDistance .cornerDistance @maph
-    * set :trace:ore :findMaxOreDistance:ore
-    * set :trace:x 0
-    * set :trace:y 0
-    * setaddr :trace*retaddr *label38 (h:*label38)
-    * call *label6 *invalid :trace*retval (m:*label38) (h:*label38)
-    * label *label38
-    * op sub *tmp45 .coreX .x0
-    * op sub *tmp46 .coreY .y0
-    * op len :findMaxOreDistance:d0 *tmp45 *tmp46
-    * op sub *tmp49 .coreY .y1
-    * op len :findMaxOreDistance:d1 *tmp45 *tmp49
-    * op sub *tmp51 .coreX .x1
-    * op len :findMaxOreDistance:d2 *tmp51 *tmp46
-    * op len :findMaxOreDistance:d3 *tmp51 *tmp49
-    * op max *tmp57 :findMaxOreDistance:d0 :findMaxOreDistance:d1
-    * op max *tmp57 *tmp57 :findMaxOreDistance:d2
-    * op max *tmp57 *tmp57 :findMaxOreDistance:d3
-    * set :findMaxOreDistance*retval *tmp57
-    * jump *label29 always
-    * label *label29
-    * return :findMaxOreDistance*retaddr
-    * end
    96 label *label8
    97 set .locations 0
    98 set .coreX :findDrillLocationLocal:x
 
   104 set .mapSpots :findDrillLocationLocal:dx
   105 jump *label40 lessThan :findDrillLocationLocal:limit 1000
   106 set :findMaxOreDistance:ore :findDrillLocationLocal:ore
-    * setaddr :findMaxOreDistance*retaddr *label42 (h:*label42)
-    * call *label7 *invalid :findMaxOreDistance*retval (m:*label42) (h:*label42)
-    * label *label42
+  107 label *label329
+  108 set .mapProgress 0
+  109 op add *tmp38 @mapw @maph
+  110 op mul .mapTotal 2 *tmp38
+  111 set .x0 @mapw
+  112 set .y0 @maph
+  113 set .x1 0
+  114 set .y1 0
+  115 label *label330
+  116 ucontrol within 0 0 6 *tmp42
+  117 jump *label332 notEqual *tmp42 false
+  118 ucontrol approach 0 0 5.5
+  119 label *label331
+  120 jump *label330 always
+  121 label *label332
+  122 label *label333
+  123 label *label334
+  124 op add .cornerDistance 0 @mapw
+  125 set :trace:ore :findMaxOreDistance:ore
+  126 set :trace:x @mapw
+  127 set :trace:y 0
+  128 setaddr :trace*retaddr *label335 (h:*label335)
+  129 call *label6 *invalid :trace*retval (m:*label335) (h:*label335)
+  130 label *label335
+  131 op add .cornerDistance .cornerDistance @maph
+  132 set :trace:ore :findMaxOreDistance:ore
+  133 set :trace:x @mapw
+  134 set :trace:y @maph
+  135 setaddr :trace*retaddr *label336 (h:*label336)
+  136 call *label6 *invalid :trace*retval (m:*label336) (h:*label336)
+  137 label *label336
+  138 op add .cornerDistance .cornerDistance @mapw
+  139 set :trace:ore :findMaxOreDistance:ore
+  140 set :trace:x 0
+  141 set :trace:y @maph
+  142 setaddr :trace*retaddr *label337 (h:*label337)
+  143 call *label6 *invalid :trace*retval (m:*label337) (h:*label337)
+  144 label *label337
+  145 op add .cornerDistance .cornerDistance @maph
+  146 set :trace:ore :findMaxOreDistance:ore
+  147 set :trace:x 0
+  148 set :trace:y 0
+  149 setaddr :trace*retaddr *label338 (h:*label338)
+  150 call *label6 *invalid :trace*retval (m:*label338) (h:*label338)
+  151 label *label338
+  152 op sub *tmp45 .coreX .x0
+  153 op sub *tmp46 .coreY .y0
+  154 op len :findMaxOreDistance:d0 *tmp45 *tmp46
+  155 op sub *tmp49 .coreY .y1
+  156 op len :findMaxOreDistance:d1 *tmp45 *tmp49
+  157 op sub *tmp51 .coreX .x1
+  158 op len :findMaxOreDistance:d2 *tmp51 *tmp46
+  159 op len :findMaxOreDistance:d3 *tmp51 *tmp49
+  160 op max *tmp57 :findMaxOreDistance:d0 :findMaxOreDistance:d1
+  161 op max *tmp57 *tmp57 :findMaxOreDistance:d2
+  162 op max *tmp57 *tmp57 :findMaxOreDistance:d3
+  163 set :findMaxOreDistance*retval *tmp57
+  164 jump *label339 always
+  165 label *label339
   166 set *tmp59 :findMaxOreDistance*retval
   167 jump *label41 always
   168 label *label40

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   122 label *label333
   123 label *label334
   124 op add .cornerDistance 0 @mapw
-    * set :trace:ore :findMaxOreDistance:ore
+  125 set :trace:ore :findDrillLocationLocal:ore
   126 set :trace:x @mapw
   127 set :trace:y 0
   128 setaddr :trace*retaddr *label335 (h:*label335)
 
   163 set :findMaxOreDistance*retval *tmp57
   164 jump *label339 always
   165 label *label339
-    * set *tmp59 :findMaxOreDistance*retval
+  166 set *tmp59 *tmp57
   167 jump *label41 always
   168 label *label40
   169 op sub *tmp60 @mapw :findDrillLocationLocal:x
 
   242 set :visited:index 1
   243 set :visited:i 0
   244 label *label63
-    * jump *label65 greaterThanEq :visited:i .locations
+  245 jump *label65 greaterThanEq 0 .locations
   246 label *label324
   247 read :visited:lx bank1 :visited:index
   248 op add *tmp114 :visited:index 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   160 op max *tmp57 :findMaxOreDistance:d0 :findMaxOreDistance:d1
   161 op max *tmp57 *tmp57 :findMaxOreDistance:d2
   162 op max *tmp57 *tmp57 :findMaxOreDistance:d3
-    * set :findMaxOreDistance*retval *tmp57
   163 jump *label339 always
   164 label *label339
   165 set *tmp59 *tmp57

Modifications by Replicate loop condition at line 40:5 (+1 instructions):
 
   213 label *label53
   214 ucontrol within *tmp78 *tmp85 5 *tmp88
   215 jump *label55 notEqual *tmp88 false
+  216 label *label340
   217 ucontrol approach *tmp78 *tmp85 4.5
   218 label *label54
-    * jump *label53 always
+  219 ucontrol within *tmp78 *tmp85 5 *tmp88
+  220 jump *label340 equal *tmp88 false
   221 label *label55
   222 label *label52
   223 op div *tmp91 3.8197185279121366 :locateOreAway:distance

Modifications by Unroll loop at line 414:9 (+53 instructions):
 
   731 set :createTerrainMask:r 3
   732 label *label249
   733 label *label325
-    * set :createTerrainMask:c 3
-    * op add *tmp317 :createTerrainMask:y :createTerrainMask:r
-    * label *label252
-    * label *label326
-    * op shl *tmp315 :createTerrainMask:result 1
-    * op add *tmp316 :createTerrainMask:x :createTerrainMask:c
-    * set :isBlocked:x *tmp316
-    * set :isBlocked:y *tmp317
-    * ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
-    * select type equal type @boulder @air type
-    * select :isBlocked:result equal type @air 0 1
-    * label *label255
-    * op or :createTerrainMask:result *tmp315 :isBlocked:result
-    * label *label253
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
-    * jump *label326 greaterThanEq :createTerrainMask:c -3
-    * label *label254
+  734 set :createTerrainMask:c 3
+  735 op add *tmp317 :createTerrainMask:y :createTerrainMask:r
+  736 label *label341
+  737 label *label342
+  738 op shl *tmp315 :createTerrainMask:result 1
+  739 op add *tmp316 :createTerrainMask:x :createTerrainMask:c
+  740 set :isBlocked:x *tmp316
+  741 set :isBlocked:y *tmp317
+  742 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
+  743 select type equal type @boulder @air type
+  744 select :isBlocked:result equal type @air 0 1
+  745 label *label343
+  746 op or :createTerrainMask:result *tmp315 :isBlocked:result
+  747 label *label344
+  748 op sub :createTerrainMask:c :createTerrainMask:c 1
+  749 label *label345
+  750 op shl *tmp315 :createTerrainMask:result 1
+  751 op add *tmp316 :createTerrainMask:x :createTerrainMask:c
+  752 set :isBlocked:x *tmp316
+  753 set :isBlocked:y *tmp317
+  754 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
+  755 select type equal type @boulder @air type
+  756 select :isBlocked:result equal type @air 0 1
+  757 label *label346
+  758 op or :createTerrainMask:result *tmp315 :isBlocked:result
+  759 label *label347
+  760 op sub :createTerrainMask:c :createTerrainMask:c 1
+  761 label *label348
+  762 op shl *tmp315 :createTerrainMask:result 1
+  763 op add *tmp316 :createTerrainMask:x :createTerrainMask:c
+  764 set :isBlocked:x *tmp316
+  765 set :isBlocked:y *tmp317
+  766 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
+  767 select type equal type @boulder @air type
+  768 select :isBlocked:result equal type @air 0 1
+  769 label *label349
+  770 op or :createTerrainMask:result *tmp315 :isBlocked:result
+  771 label *label350
+  772 op sub :createTerrainMask:c :createTerrainMask:c 1
+  773 label *label351
+  774 op shl *tmp315 :createTerrainMask:result 1
+  775 op add *tmp316 :createTerrainMask:x :createTerrainMask:c
+  776 set :isBlocked:x *tmp316
+  777 set :isBlocked:y *tmp317
+  778 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
+  779 select type equal type @boulder @air type
+  780 select :isBlocked:result equal type @air 0 1
+  781 label *label352
+  782 op or :createTerrainMask:result *tmp315 :isBlocked:result
+  783 label *label353
+  784 op sub :createTerrainMask:c :createTerrainMask:c 1
+  785 label *label354
+  786 op shl *tmp315 :createTerrainMask:result 1
+  787 op add *tmp316 :createTerrainMask:x :createTerrainMask:c
+  788 set :isBlocked:x *tmp316
+  789 set :isBlocked:y *tmp317
+  790 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
+  791 select type equal type @boulder @air type
+  792 select :isBlocked:result equal type @air 0 1
+  793 label *label355
+  794 op or :createTerrainMask:result *tmp315 :isBlocked:result
+  795 label *label356
+  796 op sub :createTerrainMask:c :createTerrainMask:c 1
+  797 label *label357
+  798 op shl *tmp315 :createTerrainMask:result 1
+  799 op add *tmp316 :createTerrainMask:x :createTerrainMask:c
+  800 set :isBlocked:x *tmp316
+  801 set :isBlocked:y *tmp317
+  802 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
+  803 select type equal type @boulder @air type
+  804 select :isBlocked:result equal type @air 0 1
+  805 label *label358
+  806 op or :createTerrainMask:result *tmp315 :isBlocked:result
+  807 label *label359
+  808 op sub :createTerrainMask:c :createTerrainMask:c 1
+  809 label *label360
+  810 op shl *tmp315 :createTerrainMask:result 1
+  811 op add *tmp316 :createTerrainMask:x :createTerrainMask:c
+  812 set :isBlocked:x *tmp316
+  813 set :isBlocked:y *tmp317
+  814 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
+  815 select type equal type @boulder @air type
+  816 select :isBlocked:result equal type @air 0 1
+  817 label *label361
+  818 op or :createTerrainMask:result *tmp315 :isBlocked:result
+  819 label *label362
+  820 op sub :createTerrainMask:c :createTerrainMask:c 1
+  821 label *label254
   822 label *label250
   823 op sub :createTerrainMask:r :createTerrainMask:r 1
   824 jump *label325 greaterThanEq :createTerrainMask:r -3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   736 label *label341
   737 label *label342
   738 op shl *tmp315 :createTerrainMask:result 1
-    * op add *tmp316 :createTerrainMask:x :createTerrainMask:c
+  739 op add *tmp316 :createTerrainMask:x 3
   740 set :isBlocked:x *tmp316
   741 set :isBlocked:y *tmp317
   742 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
 
   745 label *label343
   746 op or :createTerrainMask:result *tmp315 :isBlocked:result
   747 label *label344
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
+  748 op sub :createTerrainMask:c 3 1
   749 label *label345
   750 op shl *tmp315 :createTerrainMask:result 1
-    * op add *tmp316 :createTerrainMask:x :createTerrainMask:c
+  751 op add *tmp316 :createTerrainMask:x 2
   752 set :isBlocked:x *tmp316
   753 set :isBlocked:y *tmp317
   754 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
 
   757 label *label346
   758 op or :createTerrainMask:result *tmp315 :isBlocked:result
   759 label *label347
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
+  760 op sub :createTerrainMask:c 2 1
   761 label *label348
   762 op shl *tmp315 :createTerrainMask:result 1
-    * op add *tmp316 :createTerrainMask:x :createTerrainMask:c
+  763 op add *tmp316 :createTerrainMask:x 1
   764 set :isBlocked:x *tmp316
   765 set :isBlocked:y *tmp317
   766 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
 
   769 label *label349
   770 op or :createTerrainMask:result *tmp315 :isBlocked:result
   771 label *label350
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
+  772 op sub :createTerrainMask:c 1 1
   773 label *label351
   774 op shl *tmp315 :createTerrainMask:result 1
-    * op add *tmp316 :createTerrainMask:x :createTerrainMask:c
+  775 op add *tmp316 :createTerrainMask:x 0
   776 set :isBlocked:x *tmp316
   777 set :isBlocked:y *tmp317
   778 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
 
   781 label *label352
   782 op or :createTerrainMask:result *tmp315 :isBlocked:result
   783 label *label353
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
+  784 op sub :createTerrainMask:c 0 1
   785 label *label354
   786 op shl *tmp315 :createTerrainMask:result 1
-    * op add *tmp316 :createTerrainMask:x :createTerrainMask:c
+  787 op add *tmp316 :createTerrainMask:x -1
   788 set :isBlocked:x *tmp316
   789 set :isBlocked:y *tmp317
   790 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
 
   793 label *label355
   794 op or :createTerrainMask:result *tmp315 :isBlocked:result
   795 label *label356
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
+  796 op sub :createTerrainMask:c -1 1
   797 label *label357
   798 op shl *tmp315 :createTerrainMask:result 1
-    * op add *tmp316 :createTerrainMask:x :createTerrainMask:c
+  799 op add *tmp316 :createTerrainMask:x -2
   800 set :isBlocked:x *tmp316
   801 set :isBlocked:y *tmp317
   802 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
 
   805 label *label358
   806 op or :createTerrainMask:result *tmp315 :isBlocked:result
   807 label *label359
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
+  808 op sub :createTerrainMask:c -2 1
   809 label *label360
   810 op shl *tmp315 :createTerrainMask:result 1
-    * op add *tmp316 :createTerrainMask:x :createTerrainMask:c
+  811 op add *tmp316 :createTerrainMask:x -3
   812 set :isBlocked:x *tmp316
   813 set :isBlocked:y *tmp317
   814 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
 
   817 label *label361
   818 op or :createTerrainMask:result *tmp315 :isBlocked:result
   819 label *label362
-    * op sub :createTerrainMask:c :createTerrainMask:c 1
+  820 op sub :createTerrainMask:c -3 1
   821 label *label254
   822 label *label250
   823 op sub :createTerrainMask:r :createTerrainMask:r 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   731 set :createTerrainMask:r 3
   732 label *label249
   733 label *label325
-    * set :createTerrainMask:c 3
   734 op add *tmp317 :createTerrainMask:y :createTerrainMask:r
   735 label *label341
   736 label *label342
 
   744 label *label343
   745 op or :createTerrainMask:result *tmp315 :isBlocked:result
   746 label *label344
-    * op sub :createTerrainMask:c 3 1
   747 label *label345
   748 op shl *tmp315 :createTerrainMask:result 1
   749 op add *tmp316 :createTerrainMask:x 2
 
   755 label *label346
   756 op or :createTerrainMask:result *tmp315 :isBlocked:result
   757 label *label347
-    * op sub :createTerrainMask:c 2 1
   758 label *label348
   759 op shl *tmp315 :createTerrainMask:result 1
   760 op add *tmp316 :createTerrainMask:x 1
 
   766 label *label349
   767 op or :createTerrainMask:result *tmp315 :isBlocked:result
   768 label *label350
-    * op sub :createTerrainMask:c 1 1
   769 label *label351
   770 op shl *tmp315 :createTerrainMask:result 1
   771 op add *tmp316 :createTerrainMask:x 0
 
   777 label *label352
   778 op or :createTerrainMask:result *tmp315 :isBlocked:result
   779 label *label353
-    * op sub :createTerrainMask:c 0 1
   780 label *label354
   781 op shl *tmp315 :createTerrainMask:result 1
   782 op add *tmp316 :createTerrainMask:x -1
 
   788 label *label355
   789 op or :createTerrainMask:result *tmp315 :isBlocked:result
   790 label *label356
-    * op sub :createTerrainMask:c -1 1
   791 label *label357
   792 op shl *tmp315 :createTerrainMask:result 1
   793 op add *tmp316 :createTerrainMask:x -2
 
   799 label *label358
   800 op or :createTerrainMask:result *tmp315 :isBlocked:result
   801 label *label359
-    * op sub :createTerrainMask:c -2 1
   802 label *label360
   803 op shl *tmp315 :createTerrainMask:result 1
   804 op add *tmp316 :createTerrainMask:x -3
 
   810 label *label361
   811 op or :createTerrainMask:result *tmp315 :isBlocked:result
   812 label *label362
-    * op sub :createTerrainMask:c -3 1
   813 label *label254
   814 label *label250
   815 op sub :createTerrainMask:r :createTerrainMask:r 1

Modifications by Replicate loop condition at line 40:5 (+1 instructions):
 
   296 label *label76
   297 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp134
   298 jump *label78 notEqual *tmp134 false
+  299 label *label363
   300 ucontrol approach :locateOreAway:x :locateOreAway:y 5.5
   301 label *label77
-    * jump *label76 always
+  302 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp134
+  303 jump *label363 equal *tmp134 false
   304 label *label78
   305 label *label75
   306 label *label74

Modifications by Replicate loop condition at line 40:5 (+1 instructions):
 
   723 label *label246
   724 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp312
   725 jump *label248 notEqual *tmp312 false
+  726 label *label364
   727 ucontrol approach :createTerrainMask:x :createTerrainMask:y 5.5
   728 label *label247
-    * jump *label246 always
+  729 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp312
+  730 jump *label364 equal *tmp312 false
   731 label *label248
   732 label *label245
   733 label *label244

Modifications by Inline function 'computeRowValues' defined at line 67:1 (+192 instructions):
 
     7 wait 1e12
     8 jump *label14 always
     9 end
-    * label *label5
-    * op sub :spotValue:x :computeRowValues:x 2
-    * set :spotValue:y :computeRowValues:y
-    * set :spotValue:ore :computeRowValues:ore
-    * ucontrol getBlock :spotValue:x :spotValue:y type building floor
-    * select value equal floor :spotValue:ore 0.00392156862745098 0
-    * select type equal type @boulder @air type
-    * select :spotValue:result equal type @air value 0.06274509803921569
-    * label *label16
-    * op sub :spotValue.1:x :computeRowValues:x 1
-    * set :spotValue.1:y :computeRowValues:y
-    * set :spotValue.1:ore :computeRowValues:ore
-    * ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
-    * select value equal floor :spotValue.1:ore 0.00392156862745098 0
-    * select type equal type @boulder @air type
-    * select :spotValue.1:result equal type @air value 0.06274509803921569
-    * label *label17
-    * set :spotValue.2:x :computeRowValues:x
-    * set :spotValue.2:y :computeRowValues:y
-    * set :spotValue.2:ore :computeRowValues:ore
-    * ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
-    * select value equal floor :spotValue.2:ore 0.00392156862745098 0
-    * select type equal type @boulder @air type
-    * select :spotValue.2:result equal type @air value 0.06274509803921569
-    * label *label18
-    * op add :spotValue.3:x :computeRowValues:x 1
-    * set :spotValue.3:y :computeRowValues:y
-    * set :spotValue.3:ore :computeRowValues:ore
-    * ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
-    * select value equal floor :spotValue.3:ore 0.00392156862745098 0
-    * select type equal type @boulder @air type
-    * select :spotValue.3:result equal type @air value 0.06274509803921569
-    * label *label19
-    * op add :spotValue.4:x :computeRowValues:x 2
-    * set :spotValue.4:y :computeRowValues:y
-    * set :spotValue.4:ore :computeRowValues:ore
-    * ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
-    * select value equal floor :spotValue.4:ore 0.00392156862745098 0
-    * select type equal type @boulder @air type
-    * select :spotValue.4:result equal type @air value 0.06274509803921569
-    * label *label20
-    * jump *label21 equal :computeRowValues:large false
-    * op add *tmp11 :spotValue:result :spotValue.1:result
-    * op add *tmp12 *tmp11 :spotValue.2:result
-    * op add *tmp13 :spotValue.1:result :spotValue.2:result
-    * op add *tmp14 *tmp13 :spotValue.3:result
-    * op add *tmp15 :spotValue.2:result :spotValue.3:result
-    * op add *tmp16 *tmp15 :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp12 *tmp14 *tmp16 0
-    * jump *label15 always
-    * jump *label22 always
-    * label *label21
-    * op add *tmp18 :spotValue:result :spotValue.1:result
-    * op add *tmp19 :spotValue.1:result :spotValue.2:result
-    * op add *tmp20 :spotValue.2:result :spotValue.3:result
-    * op add *tmp21 :spotValue.3:result :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
-    * jump *label15 always
-    * label *label22
-    * label *label15
-    * return :computeRowValues*retaddr
-    * end
    10 label *label6
    11 label *label24
    12 ucontrol move :trace:x :trace:y
 
   253 set :computeRowValues:y *tmp138
   254 set :computeRowValues:ore :findDrillLocationLocal:ore
   255 set :computeRowValues:large :findDrillLocationLocal:large
-    * setaddr :computeRowValues*retaddr *label83 (h:*label83)
-    * call *label5 *invalid :computeRowValues*retval (m:*label83) (h:*label83)
-    * label *label83
+  256 label *label365
+  257 op sub :spotValue:x :computeRowValues:x 2
+  258 set :spotValue:y :computeRowValues:y
+  259 set :spotValue:ore :computeRowValues:ore
+  260 ucontrol getBlock :spotValue:x :spotValue:y type building floor
+  261 select value equal floor :spotValue:ore 0.00392156862745098 0
+  262 select type equal type @boulder @air type
+  263 select :spotValue:result equal type @air value 0.06274509803921569
+  264 label *label366
+  265 op sub :spotValue.1:x :computeRowValues:x 1
+  266 set :spotValue.1:y :computeRowValues:y
+  267 set :spotValue.1:ore :computeRowValues:ore
+  268 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
+  269 select value equal floor :spotValue.1:ore 0.00392156862745098 0
+  270 select type equal type @boulder @air type
+  271 select :spotValue.1:result equal type @air value 0.06274509803921569
+  272 label *label367
+  273 set :spotValue.2:x :computeRowValues:x
+  274 set :spotValue.2:y :computeRowValues:y
+  275 set :spotValue.2:ore :computeRowValues:ore
+  276 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
+  277 select value equal floor :spotValue.2:ore 0.00392156862745098 0
+  278 select type equal type @boulder @air type
+  279 select :spotValue.2:result equal type @air value 0.06274509803921569
+  280 label *label368
+  281 op add :spotValue.3:x :computeRowValues:x 1
+  282 set :spotValue.3:y :computeRowValues:y
+  283 set :spotValue.3:ore :computeRowValues:ore
+  284 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
+  285 select value equal floor :spotValue.3:ore 0.00392156862745098 0
+  286 select type equal type @boulder @air type
+  287 select :spotValue.3:result equal type @air value 0.06274509803921569
+  288 label *label369
+  289 op add :spotValue.4:x :computeRowValues:x 2
+  290 set :spotValue.4:y :computeRowValues:y
+  291 set :spotValue.4:ore :computeRowValues:ore
+  292 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
+  293 select value equal floor :spotValue.4:ore 0.00392156862745098 0
+  294 select type equal type @boulder @air type
+  295 select :spotValue.4:result equal type @air value 0.06274509803921569
+  296 label *label370
+  297 jump *label371 equal :computeRowValues:large false
+  298 op add *tmp11 :spotValue:result :spotValue.1:result
+  299 op add *tmp12 *tmp11 :spotValue.2:result
+  300 op add *tmp13 :spotValue.1:result :spotValue.2:result
+  301 op add *tmp14 *tmp13 :spotValue.3:result
+  302 op add *tmp15 :spotValue.2:result :spotValue.3:result
+  303 op add *tmp16 *tmp15 :spotValue.4:result
+  304 packcolor :computeRowValues*retval *tmp12 *tmp14 *tmp16 0
+  305 jump *label373 always
+  306 jump *label372 always
+  307 label *label371
+  308 op add *tmp18 :spotValue:result :spotValue.1:result
+  309 op add *tmp19 :spotValue.1:result :spotValue.2:result
+  310 op add *tmp20 :spotValue.2:result :spotValue.3:result
+  311 op add *tmp21 :spotValue.3:result :spotValue.4:result
+  312 packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
+  313 jump *label373 always
+  314 label *label372
+  315 label *label373
   316 set :findBestPosition:y1 :computeRowValues*retval
   317 op sub *tmp140 :findBestPosition:y 1
   318 set :computeRowValues:x :findBestPosition:x
   319 set :computeRowValues:y *tmp140
   320 set :computeRowValues:ore :findBestPosition:ore
   321 set :computeRowValues:large :findBestPosition:large
-    * setaddr :computeRowValues*retaddr *label84 (h:*label84)
-    * call *label5 *invalid :computeRowValues*retval (m:*label84) (h:*label84)
-    * label *label84
+  322 label *label374
+  323 op sub :spotValue:x :computeRowValues:x 2
+  324 set :spotValue:y :computeRowValues:y
+  325 set :spotValue:ore :computeRowValues:ore
+  326 ucontrol getBlock :spotValue:x :spotValue:y type building floor
+  327 select value equal floor :spotValue:ore 0.00392156862745098 0
+  328 select type equal type @boulder @air type
+  329 select :spotValue:result equal type @air value 0.06274509803921569
+  330 label *label375
+  331 op sub :spotValue.1:x :computeRowValues:x 1
+  332 set :spotValue.1:y :computeRowValues:y
+  333 set :spotValue.1:ore :computeRowValues:ore
+  334 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
+  335 select value equal floor :spotValue.1:ore 0.00392156862745098 0
+  336 select type equal type @boulder @air type
+  337 select :spotValue.1:result equal type @air value 0.06274509803921569
+  338 label *label376
+  339 set :spotValue.2:x :computeRowValues:x
+  340 set :spotValue.2:y :computeRowValues:y
+  341 set :spotValue.2:ore :computeRowValues:ore
+  342 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
+  343 select value equal floor :spotValue.2:ore 0.00392156862745098 0
+  344 select type equal type @boulder @air type
+  345 select :spotValue.2:result equal type @air value 0.06274509803921569
+  346 label *label377
+  347 op add :spotValue.3:x :computeRowValues:x 1
+  348 set :spotValue.3:y :computeRowValues:y
+  349 set :spotValue.3:ore :computeRowValues:ore
+  350 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
+  351 select value equal floor :spotValue.3:ore 0.00392156862745098 0
+  352 select type equal type @boulder @air type
+  353 select :spotValue.3:result equal type @air value 0.06274509803921569
+  354 label *label378
+  355 op add :spotValue.4:x :computeRowValues:x 2
+  356 set :spotValue.4:y :computeRowValues:y
+  357 set :spotValue.4:ore :computeRowValues:ore
+  358 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
+  359 select value equal floor :spotValue.4:ore 0.00392156862745098 0
+  360 select type equal type @boulder @air type
+  361 select :spotValue.4:result equal type @air value 0.06274509803921569
+  362 label *label379
+  363 jump *label380 equal :computeRowValues:large false
+  364 op add *tmp11 :spotValue:result :spotValue.1:result
+  365 op add *tmp12 *tmp11 :spotValue.2:result
+  366 op add *tmp13 :spotValue.1:result :spotValue.2:result
+  367 op add *tmp14 *tmp13 :spotValue.3:result
+  368 op add *tmp15 :spotValue.2:result :spotValue.3:result
+  369 op add *tmp16 *tmp15 :spotValue.4:result
+  370 packcolor :computeRowValues*retval *tmp12 *tmp14 *tmp16 0
+  371 jump *label382 always
+  372 jump *label381 always
+  373 label *label380
+  374 op add *tmp18 :spotValue:result :spotValue.1:result
+  375 op add *tmp19 :spotValue.1:result :spotValue.2:result
+  376 op add *tmp20 :spotValue.2:result :spotValue.3:result
+  377 op add *tmp21 :spotValue.3:result :spotValue.4:result
+  378 packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
+  379 jump *label382 always
+  380 label *label381
+  381 label *label382
   382 set :findBestPosition:y2 :computeRowValues*retval
   383 set :computeRowValues:x :findBestPosition:x
   384 set :computeRowValues:y :findBestPosition:y
   385 set :computeRowValues:ore :findBestPosition:ore
   386 set :computeRowValues:large :findBestPosition:large
-    * setaddr :computeRowValues*retaddr *label85 (h:*label85)
-    * call *label5 *invalid :computeRowValues*retval (m:*label85) (h:*label85)
-    * label *label85
+  387 label *label383
+  388 op sub :spotValue:x :computeRowValues:x 2
+  389 set :spotValue:y :computeRowValues:y
+  390 set :spotValue:ore :computeRowValues:ore
+  391 ucontrol getBlock :spotValue:x :spotValue:y type building floor
+  392 select value equal floor :spotValue:ore 0.00392156862745098 0
+  393 select type equal type @boulder @air type
+  394 select :spotValue:result equal type @air value 0.06274509803921569
+  395 label *label384
+  396 op sub :spotValue.1:x :computeRowValues:x 1
+  397 set :spotValue.1:y :computeRowValues:y
+  398 set :spotValue.1:ore :computeRowValues:ore
+  399 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
+  400 select value equal floor :spotValue.1:ore 0.00392156862745098 0
+  401 select type equal type @boulder @air type
+  402 select :spotValue.1:result equal type @air value 0.06274509803921569
+  403 label *label385
+  404 set :spotValue.2:x :computeRowValues:x
+  405 set :spotValue.2:y :computeRowValues:y
+  406 set :spotValue.2:ore :computeRowValues:ore
+  407 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
+  408 select value equal floor :spotValue.2:ore 0.00392156862745098 0
+  409 select type equal type @boulder @air type
+  410 select :spotValue.2:result equal type @air value 0.06274509803921569
+  411 label *label386
+  412 op add :spotValue.3:x :computeRowValues:x 1
+  413 set :spotValue.3:y :computeRowValues:y
+  414 set :spotValue.3:ore :computeRowValues:ore
+  415 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
+  416 select value equal floor :spotValue.3:ore 0.00392156862745098 0
+  417 select type equal type @boulder @air type
+  418 select :spotValue.3:result equal type @air value 0.06274509803921569
+  419 label *label387
+  420 op add :spotValue.4:x :computeRowValues:x 2
+  421 set :spotValue.4:y :computeRowValues:y
+  422 set :spotValue.4:ore :computeRowValues:ore
+  423 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
+  424 select value equal floor :spotValue.4:ore 0.00392156862745098 0
+  425 select type equal type @boulder @air type
+  426 select :spotValue.4:result equal type @air value 0.06274509803921569
+  427 label *label388
+  428 jump *label389 equal :computeRowValues:large false
+  429 op add *tmp11 :spotValue:result :spotValue.1:result
+  430 op add *tmp12 *tmp11 :spotValue.2:result
+  431 op add *tmp13 :spotValue.1:result :spotValue.2:result
+  432 op add *tmp14 *tmp13 :spotValue.3:result
+  433 op add *tmp15 :spotValue.2:result :spotValue.3:result
+  434 op add *tmp16 *tmp15 :spotValue.4:result
+  435 packcolor :computeRowValues*retval *tmp12 *tmp14 *tmp16 0
+  436 jump *label391 always
+  437 jump *label390 always
+  438 label *label389
+  439 op add *tmp18 :spotValue:result :spotValue.1:result
+  440 op add *tmp19 :spotValue.1:result :spotValue.2:result
+  441 op add *tmp20 :spotValue.2:result :spotValue.3:result
+  442 op add *tmp21 :spotValue.3:result :spotValue.4:result
+  443 packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
+  444 jump *label391 always
+  445 label *label390
+  446 label *label391
   447 set :findBestPosition:y3 :computeRowValues*retval
   448 op add *tmp144 :findBestPosition:y 1
   449 set :computeRowValues:x :findBestPosition:x
   450 set :computeRowValues:y *tmp144
   451 set :computeRowValues:ore :findBestPosition:ore
   452 set :computeRowValues:large :findBestPosition:large
-    * setaddr :computeRowValues*retaddr *label86 (h:*label86)
-    * call *label5 *invalid :computeRowValues*retval (m:*label86) (h:*label86)
-    * label *label86
+  453 label *label392
+  454 op sub :spotValue:x :computeRowValues:x 2
+  455 set :spotValue:y :computeRowValues:y
+  456 set :spotValue:ore :computeRowValues:ore
+  457 ucontrol getBlock :spotValue:x :spotValue:y type building floor
+  458 select value equal floor :spotValue:ore 0.00392156862745098 0
+  459 select type equal type @boulder @air type
+  460 select :spotValue:result equal type @air value 0.06274509803921569
+  461 label *label393
+  462 op sub :spotValue.1:x :computeRowValues:x 1
+  463 set :spotValue.1:y :computeRowValues:y
+  464 set :spotValue.1:ore :computeRowValues:ore
+  465 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
+  466 select value equal floor :spotValue.1:ore 0.00392156862745098 0
+  467 select type equal type @boulder @air type
+  468 select :spotValue.1:result equal type @air value 0.06274509803921569
+  469 label *label394
+  470 set :spotValue.2:x :computeRowValues:x
+  471 set :spotValue.2:y :computeRowValues:y
+  472 set :spotValue.2:ore :computeRowValues:ore
+  473 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
+  474 select value equal floor :spotValue.2:ore 0.00392156862745098 0
+  475 select type equal type @boulder @air type
+  476 select :spotValue.2:result equal type @air value 0.06274509803921569
+  477 label *label395
+  478 op add :spotValue.3:x :computeRowValues:x 1
+  479 set :spotValue.3:y :computeRowValues:y
+  480 set :spotValue.3:ore :computeRowValues:ore
+  481 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
+  482 select value equal floor :spotValue.3:ore 0.00392156862745098 0
+  483 select type equal type @boulder @air type
+  484 select :spotValue.3:result equal type @air value 0.06274509803921569
+  485 label *label396
+  486 op add :spotValue.4:x :computeRowValues:x 2
+  487 set :spotValue.4:y :computeRowValues:y
+  488 set :spotValue.4:ore :computeRowValues:ore
+  489 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
+  490 select value equal floor :spotValue.4:ore 0.00392156862745098 0
+  491 select type equal type @boulder @air type
+  492 select :spotValue.4:result equal type @air value 0.06274509803921569
+  493 label *label397
+  494 jump *label398 equal :computeRowValues:large false
+  495 op add *tmp11 :spotValue:result :spotValue.1:result
+  496 op add *tmp12 *tmp11 :spotValue.2:result
+  497 op add *tmp13 :spotValue.1:result :spotValue.2:result
+  498 op add *tmp14 *tmp13 :spotValue.3:result
+  499 op add *tmp15 :spotValue.2:result :spotValue.3:result
+  500 op add *tmp16 *tmp15 :spotValue.4:result
+  501 packcolor :computeRowValues*retval *tmp12 *tmp14 *tmp16 0
+  502 jump *label400 always
+  503 jump *label399 always
+  504 label *label398
+  505 op add *tmp18 :spotValue:result :spotValue.1:result
+  506 op add *tmp19 :spotValue.1:result :spotValue.2:result
+  507 op add *tmp20 :spotValue.2:result :spotValue.3:result
+  508 op add *tmp21 :spotValue.3:result :spotValue.4:result
+  509 packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
+  510 jump *label400 always
+  511 label *label399
+  512 label *label400
   513 set :findBestPosition:y4 :computeRowValues*retval
   514 op add *tmp146 :findBestPosition:y 2
   515 set :computeRowValues:x :findBestPosition:x
   516 set :computeRowValues:y *tmp146
   517 set :computeRowValues:ore :findBestPosition:ore
   518 set :computeRowValues:large :findBestPosition:large
-    * setaddr :computeRowValues*retaddr *label87 (h:*label87)
-    * call *label5 *invalid :computeRowValues*retval (m:*label87) (h:*label87)
-    * label *label87
+  519 label *label401
+  520 op sub :spotValue:x :computeRowValues:x 2
+  521 set :spotValue:y :computeRowValues:y
+  522 set :spotValue:ore :computeRowValues:ore
+  523 ucontrol getBlock :spotValue:x :spotValue:y type building floor
+  524 select value equal floor :spotValue:ore 0.00392156862745098 0
+  525 select type equal type @boulder @air type
+  526 select :spotValue:result equal type @air value 0.06274509803921569
+  527 label *label402
+  528 op sub :spotValue.1:x :computeRowValues:x 1
+  529 set :spotValue.1:y :computeRowValues:y
+  530 set :spotValue.1:ore :computeRowValues:ore
+  531 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
+  532 select value equal floor :spotValue.1:ore 0.00392156862745098 0
+  533 select type equal type @boulder @air type
+  534 select :spotValue.1:result equal type @air value 0.06274509803921569
+  535 label *label403
+  536 set :spotValue.2:x :computeRowValues:x
+  537 set :spotValue.2:y :computeRowValues:y
+  538 set :spotValue.2:ore :computeRowValues:ore
+  539 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
+  540 select value equal floor :spotValue.2:ore 0.00392156862745098 0
+  541 select type equal type @boulder @air type
+  542 select :spotValue.2:result equal type @air value 0.06274509803921569
+  543 label *label404
+  544 op add :spotValue.3:x :computeRowValues:x 1
+  545 set :spotValue.3:y :computeRowValues:y
+  546 set :spotValue.3:ore :computeRowValues:ore
+  547 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
+  548 select value equal floor :spotValue.3:ore 0.00392156862745098 0
+  549 select type equal type @boulder @air type
+  550 select :spotValue.3:result equal type @air value 0.06274509803921569
+  551 label *label405
+  552 op add :spotValue.4:x :computeRowValues:x 2
+  553 set :spotValue.4:y :computeRowValues:y
+  554 set :spotValue.4:ore :computeRowValues:ore
+  555 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
+  556 select value equal floor :spotValue.4:ore 0.00392156862745098 0
+  557 select type equal type @boulder @air type
+  558 select :spotValue.4:result equal type @air value 0.06274509803921569
+  559 label *label406
+  560 jump *label407 equal :computeRowValues:large false
+  561 op add *tmp11 :spotValue:result :spotValue.1:result
+  562 op add *tmp12 *tmp11 :spotValue.2:result
+  563 op add *tmp13 :spotValue.1:result :spotValue.2:result
+  564 op add *tmp14 *tmp13 :spotValue.3:result
+  565 op add *tmp15 :spotValue.2:result :spotValue.3:result
+  566 op add *tmp16 *tmp15 :spotValue.4:result
+  567 packcolor :computeRowValues*retval *tmp12 *tmp14 *tmp16 0
+  568 jump *label409 always
+  569 jump *label408 always
+  570 label *label407
+  571 op add *tmp18 :spotValue:result :spotValue.1:result
+  572 op add *tmp19 :spotValue.1:result :spotValue.2:result
+  573 op add *tmp20 :spotValue.2:result :spotValue.3:result
+  574 op add *tmp21 :spotValue.3:result :spotValue.4:result
+  575 packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
+  576 jump *label409 always
+  577 label *label408
+  578 label *label409
   579 set :findBestPosition:best 0
   580 set :findDrillLocationLocal:diffX 0
   581 set :findDrillLocationLocal:diffY 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   254 set :computeRowValues:ore :findDrillLocationLocal:ore
   255 set :computeRowValues:large :findDrillLocationLocal:large
   256 label *label365
-    * op sub :spotValue:x :computeRowValues:x 2
-    * set :spotValue:y :computeRowValues:y
-    * set :spotValue:ore :computeRowValues:ore
+  257 op sub :spotValue:x :findDrillLocationLocal:oreX 2
+  258 set :spotValue:y *tmp138
+  259 set :spotValue:ore :findDrillLocationLocal:ore
   260 ucontrol getBlock :spotValue:x :spotValue:y type building floor
   261 select value equal floor :spotValue:ore 0.00392156862745098 0
   262 select type equal type @boulder @air type
   263 select :spotValue:result equal type @air value 0.06274509803921569
   264 label *label366
-    * op sub :spotValue.1:x :computeRowValues:x 1
-    * set :spotValue.1:y :computeRowValues:y
-    * set :spotValue.1:ore :computeRowValues:ore
+  265 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
+  266 set :spotValue.1:y *tmp138
+  267 set :spotValue.1:ore :findDrillLocationLocal:ore
   268 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
   269 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   270 select type equal type @boulder @air type
   271 select :spotValue.1:result equal type @air value 0.06274509803921569
   272 label *label367
-    * set :spotValue.2:x :computeRowValues:x
-    * set :spotValue.2:y :computeRowValues:y
-    * set :spotValue.2:ore :computeRowValues:ore
+  273 set :spotValue.2:x :findDrillLocationLocal:oreX
+  274 set :spotValue.2:y *tmp138
+  275 set :spotValue.2:ore :findDrillLocationLocal:ore
   276 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
   277 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   278 select type equal type @boulder @air type
   279 select :spotValue.2:result equal type @air value 0.06274509803921569
   280 label *label368
-    * op add :spotValue.3:x :computeRowValues:x 1
-    * set :spotValue.3:y :computeRowValues:y
-    * set :spotValue.3:ore :computeRowValues:ore
+  281 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
+  282 set :spotValue.3:y *tmp138
+  283 set :spotValue.3:ore :findDrillLocationLocal:ore
   284 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
   285 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   286 select type equal type @boulder @air type
   287 select :spotValue.3:result equal type @air value 0.06274509803921569
   288 label *label369
-    * op add :spotValue.4:x :computeRowValues:x 2
-    * set :spotValue.4:y :computeRowValues:y
-    * set :spotValue.4:ore :computeRowValues:ore
+  289 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
+  290 set :spotValue.4:y *tmp138
+  291 set :spotValue.4:ore :findDrillLocationLocal:ore
   292 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
   293 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   294 select type equal type @boulder @air type
   295 select :spotValue.4:result equal type @air value 0.06274509803921569
   296 label *label370
-    * jump *label371 equal :computeRowValues:large false
+  297 jump *label371 equal :findDrillLocationLocal:large false
   298 op add *tmp11 :spotValue:result :spotValue.1:result
   299 op add *tmp12 *tmp11 :spotValue.2:result
   300 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
   314 label *label372
   315 label *label373
   316 set :findBestPosition:y1 :computeRowValues*retval
-    * op sub *tmp140 :findBestPosition:y 1
-    * set :computeRowValues:x :findBestPosition:x
+  317 op sub *tmp140 :findDrillLocationLocal:oreY 1
+  318 set :computeRowValues:x :findDrillLocationLocal:oreX
   319 set :computeRowValues:y *tmp140
-    * set :computeRowValues:ore :findBestPosition:ore
-    * set :computeRowValues:large :findBestPosition:large
+  320 set :computeRowValues:ore :findDrillLocationLocal:ore
+  321 set :computeRowValues:large :findDrillLocationLocal:large
   322 label *label374
-    * op sub :spotValue:x :computeRowValues:x 2
-    * set :spotValue:y :computeRowValues:y
-    * set :spotValue:ore :computeRowValues:ore
+  323 op sub :spotValue:x :findBestPosition:x 2
+  324 set :spotValue:y *tmp140
+  325 set :spotValue:ore :findBestPosition:ore
   326 ucontrol getBlock :spotValue:x :spotValue:y type building floor
   327 select value equal floor :spotValue:ore 0.00392156862745098 0
   328 select type equal type @boulder @air type
   329 select :spotValue:result equal type @air value 0.06274509803921569
   330 label *label375
-    * op sub :spotValue.1:x :computeRowValues:x 1
-    * set :spotValue.1:y :computeRowValues:y
-    * set :spotValue.1:ore :computeRowValues:ore
+  331 op sub :spotValue.1:x :findBestPosition:x 1
+  332 set :spotValue.1:y *tmp140
+  333 set :spotValue.1:ore :findBestPosition:ore
   334 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
   335 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   336 select type equal type @boulder @air type
   337 select :spotValue.1:result equal type @air value 0.06274509803921569
   338 label *label376
-    * set :spotValue.2:x :computeRowValues:x
-    * set :spotValue.2:y :computeRowValues:y
-    * set :spotValue.2:ore :computeRowValues:ore
+  339 set :spotValue.2:x :findBestPosition:x
+  340 set :spotValue.2:y *tmp140
+  341 set :spotValue.2:ore :findBestPosition:ore
   342 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
   343 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   344 select type equal type @boulder @air type
   345 select :spotValue.2:result equal type @air value 0.06274509803921569
   346 label *label377
-    * op add :spotValue.3:x :computeRowValues:x 1
-    * set :spotValue.3:y :computeRowValues:y
-    * set :spotValue.3:ore :computeRowValues:ore
+  347 op add :spotValue.3:x :findBestPosition:x 1
+  348 set :spotValue.3:y *tmp140
+  349 set :spotValue.3:ore :findBestPosition:ore
   350 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
   351 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   352 select type equal type @boulder @air type
   353 select :spotValue.3:result equal type @air value 0.06274509803921569
   354 label *label378
-    * op add :spotValue.4:x :computeRowValues:x 2
-    * set :spotValue.4:y :computeRowValues:y
-    * set :spotValue.4:ore :computeRowValues:ore
+  355 op add :spotValue.4:x :findBestPosition:x 2
+  356 set :spotValue.4:y *tmp140
+  357 set :spotValue.4:ore :findBestPosition:ore
   358 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
   359 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   360 select type equal type @boulder @air type
   361 select :spotValue.4:result equal type @air value 0.06274509803921569
   362 label *label379
-    * jump *label380 equal :computeRowValues:large false
+  363 jump *label380 equal :findBestPosition:large false
   364 op add *tmp11 :spotValue:result :spotValue.1:result
   365 op add *tmp12 *tmp11 :spotValue.2:result
   366 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
   380 label *label381
   381 label *label382
   382 set :findBestPosition:y2 :computeRowValues*retval
-    * set :computeRowValues:x :findBestPosition:x
-    * set :computeRowValues:y :findBestPosition:y
-    * set :computeRowValues:ore :findBestPosition:ore
-    * set :computeRowValues:large :findBestPosition:large
+  383 set :computeRowValues:x :findDrillLocationLocal:oreX
+  384 set :computeRowValues:y :findDrillLocationLocal:oreY
+  385 set :computeRowValues:ore :findDrillLocationLocal:ore
+  386 set :computeRowValues:large :findDrillLocationLocal:large
   387 label *label383
-    * op sub :spotValue:x :computeRowValues:x 2
-    * set :spotValue:y :computeRowValues:y
-    * set :spotValue:ore :computeRowValues:ore
+  388 op sub :spotValue:x :findBestPosition:x 2
+  389 set :spotValue:y :findBestPosition:y
+  390 set :spotValue:ore :findBestPosition:ore
   391 ucontrol getBlock :spotValue:x :spotValue:y type building floor
   392 select value equal floor :spotValue:ore 0.00392156862745098 0
   393 select type equal type @boulder @air type
   394 select :spotValue:result equal type @air value 0.06274509803921569
   395 label *label384
-    * op sub :spotValue.1:x :computeRowValues:x 1
-    * set :spotValue.1:y :computeRowValues:y
-    * set :spotValue.1:ore :computeRowValues:ore
+  396 op sub :spotValue.1:x :findBestPosition:x 1
+  397 set :spotValue.1:y :findBestPosition:y
+  398 set :spotValue.1:ore :findBestPosition:ore
   399 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
   400 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   401 select type equal type @boulder @air type
   402 select :spotValue.1:result equal type @air value 0.06274509803921569
   403 label *label385
-    * set :spotValue.2:x :computeRowValues:x
-    * set :spotValue.2:y :computeRowValues:y
-    * set :spotValue.2:ore :computeRowValues:ore
+  404 set :spotValue.2:x :findBestPosition:x
+  405 set :spotValue.2:y :findBestPosition:y
+  406 set :spotValue.2:ore :findBestPosition:ore
   407 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
   408 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   409 select type equal type @boulder @air type
   410 select :spotValue.2:result equal type @air value 0.06274509803921569
   411 label *label386
-    * op add :spotValue.3:x :computeRowValues:x 1
-    * set :spotValue.3:y :computeRowValues:y
-    * set :spotValue.3:ore :computeRowValues:ore
+  412 op add :spotValue.3:x :findBestPosition:x 1
+  413 set :spotValue.3:y :findBestPosition:y
+  414 set :spotValue.3:ore :findBestPosition:ore
   415 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
   416 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   417 select type equal type @boulder @air type
   418 select :spotValue.3:result equal type @air value 0.06274509803921569
   419 label *label387
-    * op add :spotValue.4:x :computeRowValues:x 2
-    * set :spotValue.4:y :computeRowValues:y
-    * set :spotValue.4:ore :computeRowValues:ore
+  420 op add :spotValue.4:x :findBestPosition:x 2
+  421 set :spotValue.4:y :findBestPosition:y
+  422 set :spotValue.4:ore :findBestPosition:ore
   423 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
   424 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   425 select type equal type @boulder @air type
   426 select :spotValue.4:result equal type @air value 0.06274509803921569
   427 label *label388
-    * jump *label389 equal :computeRowValues:large false
+  428 jump *label389 equal :findBestPosition:large false
   429 op add *tmp11 :spotValue:result :spotValue.1:result
   430 op add *tmp12 *tmp11 :spotValue.2:result
   431 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
   445 label *label390
   446 label *label391
   447 set :findBestPosition:y3 :computeRowValues*retval
-    * op add *tmp144 :findBestPosition:y 1
-    * set :computeRowValues:x :findBestPosition:x
+  448 op add *tmp144 :findDrillLocationLocal:oreY 1
+  449 set :computeRowValues:x :findDrillLocationLocal:oreX
   450 set :computeRowValues:y *tmp144
-    * set :computeRowValues:ore :findBestPosition:ore
-    * set :computeRowValues:large :findBestPosition:large
+  451 set :computeRowValues:ore :findDrillLocationLocal:ore
+  452 set :computeRowValues:large :findDrillLocationLocal:large
   453 label *label392
-    * op sub :spotValue:x :computeRowValues:x 2
-    * set :spotValue:y :computeRowValues:y
-    * set :spotValue:ore :computeRowValues:ore
+  454 op sub :spotValue:x :findBestPosition:x 2
+  455 set :spotValue:y *tmp144
+  456 set :spotValue:ore :findBestPosition:ore
   457 ucontrol getBlock :spotValue:x :spotValue:y type building floor
   458 select value equal floor :spotValue:ore 0.00392156862745098 0
   459 select type equal type @boulder @air type
   460 select :spotValue:result equal type @air value 0.06274509803921569
   461 label *label393
-    * op sub :spotValue.1:x :computeRowValues:x 1
-    * set :spotValue.1:y :computeRowValues:y
-    * set :spotValue.1:ore :computeRowValues:ore
+  462 op sub :spotValue.1:x :findBestPosition:x 1
+  463 set :spotValue.1:y *tmp144
+  464 set :spotValue.1:ore :findBestPosition:ore
   465 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
   466 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   467 select type equal type @boulder @air type
   468 select :spotValue.1:result equal type @air value 0.06274509803921569
   469 label *label394
-    * set :spotValue.2:x :computeRowValues:x
-    * set :spotValue.2:y :computeRowValues:y
-    * set :spotValue.2:ore :computeRowValues:ore
+  470 set :spotValue.2:x :findBestPosition:x
+  471 set :spotValue.2:y *tmp144
+  472 set :spotValue.2:ore :findBestPosition:ore
   473 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
   474 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   475 select type equal type @boulder @air type
   476 select :spotValue.2:result equal type @air value 0.06274509803921569
   477 label *label395
-    * op add :spotValue.3:x :computeRowValues:x 1
-    * set :spotValue.3:y :computeRowValues:y
-    * set :spotValue.3:ore :computeRowValues:ore
+  478 op add :spotValue.3:x :findBestPosition:x 1
+  479 set :spotValue.3:y *tmp144
+  480 set :spotValue.3:ore :findBestPosition:ore
   481 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
   482 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   483 select type equal type @boulder @air type
   484 select :spotValue.3:result equal type @air value 0.06274509803921569
   485 label *label396
-    * op add :spotValue.4:x :computeRowValues:x 2
-    * set :spotValue.4:y :computeRowValues:y
-    * set :spotValue.4:ore :computeRowValues:ore
+  486 op add :spotValue.4:x :findBestPosition:x 2
+  487 set :spotValue.4:y *tmp144
+  488 set :spotValue.4:ore :findBestPosition:ore
   489 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
   490 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   491 select type equal type @boulder @air type
   492 select :spotValue.4:result equal type @air value 0.06274509803921569
   493 label *label397
-    * jump *label398 equal :computeRowValues:large false
+  494 jump *label398 equal :findBestPosition:large false
   495 op add *tmp11 :spotValue:result :spotValue.1:result
   496 op add *tmp12 *tmp11 :spotValue.2:result
   497 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
   511 label *label399
   512 label *label400
   513 set :findBestPosition:y4 :computeRowValues*retval
-    * op add *tmp146 :findBestPosition:y 2
-    * set :computeRowValues:x :findBestPosition:x
+  514 op add *tmp146 :findDrillLocationLocal:oreY 2
+  515 set :computeRowValues:x :findDrillLocationLocal:oreX
   516 set :computeRowValues:y *tmp146
-    * set :computeRowValues:ore :findBestPosition:ore
-    * set :computeRowValues:large :findBestPosition:large
+  517 set :computeRowValues:ore :findDrillLocationLocal:ore
+  518 set :computeRowValues:large :findDrillLocationLocal:large
   519 label *label401
-    * op sub :spotValue:x :computeRowValues:x 2
-    * set :spotValue:y :computeRowValues:y
-    * set :spotValue:ore :computeRowValues:ore
+  520 op sub :spotValue:x :findBestPosition:x 2
+  521 set :spotValue:y *tmp146
+  522 set :spotValue:ore :findBestPosition:ore
   523 ucontrol getBlock :spotValue:x :spotValue:y type building floor
   524 select value equal floor :spotValue:ore 0.00392156862745098 0
   525 select type equal type @boulder @air type
   526 select :spotValue:result equal type @air value 0.06274509803921569
   527 label *label402
-    * op sub :spotValue.1:x :computeRowValues:x 1
-    * set :spotValue.1:y :computeRowValues:y
-    * set :spotValue.1:ore :computeRowValues:ore
+  528 op sub :spotValue.1:x :findBestPosition:x 1
+  529 set :spotValue.1:y *tmp146
+  530 set :spotValue.1:ore :findBestPosition:ore
   531 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
   532 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   533 select type equal type @boulder @air type
   534 select :spotValue.1:result equal type @air value 0.06274509803921569
   535 label *label403
-    * set :spotValue.2:x :computeRowValues:x
-    * set :spotValue.2:y :computeRowValues:y
-    * set :spotValue.2:ore :computeRowValues:ore
+  536 set :spotValue.2:x :findBestPosition:x
+  537 set :spotValue.2:y *tmp146
+  538 set :spotValue.2:ore :findBestPosition:ore
   539 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
   540 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   541 select type equal type @boulder @air type
   542 select :spotValue.2:result equal type @air value 0.06274509803921569
   543 label *label404
-    * op add :spotValue.3:x :computeRowValues:x 1
-    * set :spotValue.3:y :computeRowValues:y
-    * set :spotValue.3:ore :computeRowValues:ore
+  544 op add :spotValue.3:x :findBestPosition:x 1
+  545 set :spotValue.3:y *tmp146
+  546 set :spotValue.3:ore :findBestPosition:ore
   547 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
   548 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   549 select type equal type @boulder @air type
   550 select :spotValue.3:result equal type @air value 0.06274509803921569
   551 label *label405
-    * op add :spotValue.4:x :computeRowValues:x 2
-    * set :spotValue.4:y :computeRowValues:y
-    * set :spotValue.4:ore :computeRowValues:ore
+  552 op add :spotValue.4:x :findBestPosition:x 2
+  553 set :spotValue.4:y *tmp146
+  554 set :spotValue.4:ore :findBestPosition:ore
   555 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
   556 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   557 select type equal type @boulder @air type
   558 select :spotValue.4:result equal type @air value 0.06274509803921569
   559 label *label406
-    * jump *label407 equal :computeRowValues:large false
+  560 jump *label407 equal :findBestPosition:large false
   561 op add *tmp11 :spotValue:result :spotValue.1:result
   562 op add *tmp12 *tmp11 :spotValue.2:result
   563 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
   579 set :findBestPosition:best 0
   580 set :findDrillLocationLocal:diffX 0
   581 set :findDrillLocationLocal:diffY 0
-    * jump *label88 equal :findBestPosition:large false
+  582 jump *label88 equal :findDrillLocationLocal:large false
   583 op add *tmp149 :findBestPosition:y1 :findBestPosition:y2
   584 op add :findBestPosition:row1 *tmp149 :findBestPosition:y3
   585 op add *tmp151 :findBestPosition:y2 :findBestPosition:y3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-20 instructions):
 
   249 set :findBestPosition:ore :findDrillLocationLocal:ore
   250 set :findBestPosition:large :findDrillLocationLocal:large
   251 op sub *tmp138 :findDrillLocationLocal:oreY 2
-    * set :computeRowValues:x :findDrillLocationLocal:oreX
-    * set :computeRowValues:y *tmp138
-    * set :computeRowValues:ore :findDrillLocationLocal:ore
-    * set :computeRowValues:large :findDrillLocationLocal:large
   252 label *label365
   253 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   254 set :spotValue:y *tmp138
 
   311 label *label373
   312 set :findBestPosition:y1 :computeRowValues*retval
   313 op sub *tmp140 :findDrillLocationLocal:oreY 1
-    * set :computeRowValues:x :findDrillLocationLocal:oreX
-    * set :computeRowValues:y *tmp140
-    * set :computeRowValues:ore :findDrillLocationLocal:ore
-    * set :computeRowValues:large :findDrillLocationLocal:large
   314 label *label374
-    * op sub :spotValue:x :findBestPosition:x 2
+  315 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   316 set :spotValue:y *tmp140
-    * set :spotValue:ore :findBestPosition:ore
+  317 set :spotValue:ore :findDrillLocationLocal:ore
   318 ucontrol getBlock :spotValue:x :spotValue:y type building floor
   319 select value equal floor :spotValue:ore 0.00392156862745098 0
   320 select type equal type @boulder @air type
   321 select :spotValue:result equal type @air value 0.06274509803921569
   322 label *label375
-    * op sub :spotValue.1:x :findBestPosition:x 1
+  323 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
   324 set :spotValue.1:y *tmp140
-    * set :spotValue.1:ore :findBestPosition:ore
+  325 set :spotValue.1:ore :findDrillLocationLocal:ore
   326 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
   327 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   328 select type equal type @boulder @air type
   329 select :spotValue.1:result equal type @air value 0.06274509803921569
   330 label *label376
-    * set :spotValue.2:x :findBestPosition:x
+  331 set :spotValue.2:x :findDrillLocationLocal:oreX
   332 set :spotValue.2:y *tmp140
-    * set :spotValue.2:ore :findBestPosition:ore
+  333 set :spotValue.2:ore :findDrillLocationLocal:ore
   334 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
   335 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   336 select type equal type @boulder @air type
   337 select :spotValue.2:result equal type @air value 0.06274509803921569
   338 label *label377
-    * op add :spotValue.3:x :findBestPosition:x 1
+  339 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
   340 set :spotValue.3:y *tmp140
-    * set :spotValue.3:ore :findBestPosition:ore
+  341 set :spotValue.3:ore :findDrillLocationLocal:ore
   342 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
   343 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   344 select type equal type @boulder @air type
   345 select :spotValue.3:result equal type @air value 0.06274509803921569
   346 label *label378
-    * op add :spotValue.4:x :findBestPosition:x 2
+  347 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
   348 set :spotValue.4:y *tmp140
-    * set :spotValue.4:ore :findBestPosition:ore
+  349 set :spotValue.4:ore :findDrillLocationLocal:ore
   350 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
   351 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   352 select type equal type @boulder @air type
   353 select :spotValue.4:result equal type @air value 0.06274509803921569
   354 label *label379
-    * jump *label380 equal :findBestPosition:large false
+  355 jump *label380 equal :findDrillLocationLocal:large false
   356 op add *tmp11 :spotValue:result :spotValue.1:result
   357 op add *tmp12 *tmp11 :spotValue.2:result
   358 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
   372 label *label381
   373 label *label382
   374 set :findBestPosition:y2 :computeRowValues*retval
-    * set :computeRowValues:x :findDrillLocationLocal:oreX
-    * set :computeRowValues:y :findDrillLocationLocal:oreY
-    * set :computeRowValues:ore :findDrillLocationLocal:ore
-    * set :computeRowValues:large :findDrillLocationLocal:large
   375 label *label383
-    * op sub :spotValue:x :findBestPosition:x 2
-    * set :spotValue:y :findBestPosition:y
-    * set :spotValue:ore :findBestPosition:ore
+  376 op sub :spotValue:x :findDrillLocationLocal:oreX 2
+  377 set :spotValue:y :findDrillLocationLocal:oreY
+  378 set :spotValue:ore :findDrillLocationLocal:ore
   379 ucontrol getBlock :spotValue:x :spotValue:y type building floor
   380 select value equal floor :spotValue:ore 0.00392156862745098 0
   381 select type equal type @boulder @air type
   382 select :spotValue:result equal type @air value 0.06274509803921569
   383 label *label384
-    * op sub :spotValue.1:x :findBestPosition:x 1
-    * set :spotValue.1:y :findBestPosition:y
-    * set :spotValue.1:ore :findBestPosition:ore
+  384 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
+  385 set :spotValue.1:y :findDrillLocationLocal:oreY
+  386 set :spotValue.1:ore :findDrillLocationLocal:ore
   387 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
   388 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   389 select type equal type @boulder @air type
   390 select :spotValue.1:result equal type @air value 0.06274509803921569
   391 label *label385
-    * set :spotValue.2:x :findBestPosition:x
-    * set :spotValue.2:y :findBestPosition:y
-    * set :spotValue.2:ore :findBestPosition:ore
+  392 set :spotValue.2:x :findDrillLocationLocal:oreX
+  393 set :spotValue.2:y :findDrillLocationLocal:oreY
+  394 set :spotValue.2:ore :findDrillLocationLocal:ore
   395 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
   396 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   397 select type equal type @boulder @air type
   398 select :spotValue.2:result equal type @air value 0.06274509803921569
   399 label *label386
-    * op add :spotValue.3:x :findBestPosition:x 1
-    * set :spotValue.3:y :findBestPosition:y
-    * set :spotValue.3:ore :findBestPosition:ore
+  400 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
+  401 set :spotValue.3:y :findDrillLocationLocal:oreY
+  402 set :spotValue.3:ore :findDrillLocationLocal:ore
   403 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
   404 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   405 select type equal type @boulder @air type
   406 select :spotValue.3:result equal type @air value 0.06274509803921569
   407 label *label387
-    * op add :spotValue.4:x :findBestPosition:x 2
-    * set :spotValue.4:y :findBestPosition:y
-    * set :spotValue.4:ore :findBestPosition:ore
+  408 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
+  409 set :spotValue.4:y :findDrillLocationLocal:oreY
+  410 set :spotValue.4:ore :findDrillLocationLocal:ore
   411 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
   412 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   413 select type equal type @boulder @air type
   414 select :spotValue.4:result equal type @air value 0.06274509803921569
   415 label *label388
-    * jump *label389 equal :findBestPosition:large false
+  416 jump *label389 equal :findDrillLocationLocal:large false
   417 op add *tmp11 :spotValue:result :spotValue.1:result
   418 op add *tmp12 *tmp11 :spotValue.2:result
   419 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
   434 label *label391
   435 set :findBestPosition:y3 :computeRowValues*retval
   436 op add *tmp144 :findDrillLocationLocal:oreY 1
-    * set :computeRowValues:x :findDrillLocationLocal:oreX
-    * set :computeRowValues:y *tmp144
-    * set :computeRowValues:ore :findDrillLocationLocal:ore
-    * set :computeRowValues:large :findDrillLocationLocal:large
   437 label *label392
-    * op sub :spotValue:x :findBestPosition:x 2
+  438 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   439 set :spotValue:y *tmp144
-    * set :spotValue:ore :findBestPosition:ore
+  440 set :spotValue:ore :findDrillLocationLocal:ore
   441 ucontrol getBlock :spotValue:x :spotValue:y type building floor
   442 select value equal floor :spotValue:ore 0.00392156862745098 0
   443 select type equal type @boulder @air type
   444 select :spotValue:result equal type @air value 0.06274509803921569
   445 label *label393
-    * op sub :spotValue.1:x :findBestPosition:x 1
+  446 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
   447 set :spotValue.1:y *tmp144
-    * set :spotValue.1:ore :findBestPosition:ore
+  448 set :spotValue.1:ore :findDrillLocationLocal:ore
   449 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
   450 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   451 select type equal type @boulder @air type
   452 select :spotValue.1:result equal type @air value 0.06274509803921569
   453 label *label394
-    * set :spotValue.2:x :findBestPosition:x
+  454 set :spotValue.2:x :findDrillLocationLocal:oreX
   455 set :spotValue.2:y *tmp144
-    * set :spotValue.2:ore :findBestPosition:ore
+  456 set :spotValue.2:ore :findDrillLocationLocal:ore
   457 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
   458 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   459 select type equal type @boulder @air type
   460 select :spotValue.2:result equal type @air value 0.06274509803921569
   461 label *label395
-    * op add :spotValue.3:x :findBestPosition:x 1
+  462 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
   463 set :spotValue.3:y *tmp144
-    * set :spotValue.3:ore :findBestPosition:ore
+  464 set :spotValue.3:ore :findDrillLocationLocal:ore
   465 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
   466 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   467 select type equal type @boulder @air type
   468 select :spotValue.3:result equal type @air value 0.06274509803921569
   469 label *label396
-    * op add :spotValue.4:x :findBestPosition:x 2
+  470 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
   471 set :spotValue.4:y *tmp144
-    * set :spotValue.4:ore :findBestPosition:ore
+  472 set :spotValue.4:ore :findDrillLocationLocal:ore
   473 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
   474 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   475 select type equal type @boulder @air type
   476 select :spotValue.4:result equal type @air value 0.06274509803921569
   477 label *label397
-    * jump *label398 equal :findBestPosition:large false
+  478 jump *label398 equal :findDrillLocationLocal:large false
   479 op add *tmp11 :spotValue:result :spotValue.1:result
   480 op add *tmp12 *tmp11 :spotValue.2:result
   481 op add *tmp13 :spotValue.1:result :spotValue.2:result
 
   496 label *label400
   497 set :findBestPosition:y4 :computeRowValues*retval
   498 op add *tmp146 :findDrillLocationLocal:oreY 2
-    * set :computeRowValues:x :findDrillLocationLocal:oreX
-    * set :computeRowValues:y *tmp146
-    * set :computeRowValues:ore :findDrillLocationLocal:ore
-    * set :computeRowValues:large :findDrillLocationLocal:large
   499 label *label401
-    * op sub :spotValue:x :findBestPosition:x 2
+  500 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   501 set :spotValue:y *tmp146
-    * set :spotValue:ore :findBestPosition:ore
+  502 set :spotValue:ore :findDrillLocationLocal:ore
   503 ucontrol getBlock :spotValue:x :spotValue:y type building floor
   504 select value equal floor :spotValue:ore 0.00392156862745098 0
   505 select type equal type @boulder @air type
   506 select :spotValue:result equal type @air value 0.06274509803921569
   507 label *label402
-    * op sub :spotValue.1:x :findBestPosition:x 1
+  508 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
   509 set :spotValue.1:y *tmp146
-    * set :spotValue.1:ore :findBestPosition:ore
+  510 set :spotValue.1:ore :findDrillLocationLocal:ore
   511 ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
   512 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   513 select type equal type @boulder @air type
   514 select :spotValue.1:result equal type @air value 0.06274509803921569
   515 label *label403
-    * set :spotValue.2:x :findBestPosition:x
+  516 set :spotValue.2:x :findDrillLocationLocal:oreX
   517 set :spotValue.2:y *tmp146
-    * set :spotValue.2:ore :findBestPosition:ore
+  518 set :spotValue.2:ore :findDrillLocationLocal:ore
   519 ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
   520 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   521 select type equal type @boulder @air type
   522 select :spotValue.2:result equal type @air value 0.06274509803921569
   523 label *label404
-    * op add :spotValue.3:x :findBestPosition:x 1
+  524 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
   525 set :spotValue.3:y *tmp146
-    * set :spotValue.3:ore :findBestPosition:ore
+  526 set :spotValue.3:ore :findDrillLocationLocal:ore
   527 ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
   528 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   529 select type equal type @boulder @air type
   530 select :spotValue.3:result equal type @air value 0.06274509803921569
   531 label *label405
-    * op add :spotValue.4:x :findBestPosition:x 2
+  532 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
   533 set :spotValue.4:y *tmp146
-    * set :spotValue.4:ore :findBestPosition:ore
+  534 set :spotValue.4:ore :findDrillLocationLocal:ore
   535 ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
   536 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   537 select type equal type @boulder @air type
   538 select :spotValue.4:result equal type @air value 0.06274509803921569
   539 label *label406
-    * jump *label407 equal :findBestPosition:large false
+  540 jump *label407 equal :findDrillLocationLocal:large false
   541 op add *tmp11 :spotValue:result :spotValue.1:result
   542 op add *tmp12 *tmp11 :spotValue.2:result
   543 op add *tmp13 :spotValue.1:result :spotValue.2:result

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-4 instructions):
 
   244 label *label74
   245 set :findDrillLocationLocal:last 0
   246 label *label79
-    * set :findBestPosition:x :findDrillLocationLocal:oreX
-    * set :findBestPosition:y :findDrillLocationLocal:oreY
-    * set :findBestPosition:ore :findDrillLocationLocal:ore
-    * set :findBestPosition:large :findDrillLocationLocal:large
   247 op sub *tmp138 :findDrillLocationLocal:oreY 2
   248 label *label365
   249 op sub :spotValue:x :findDrillLocationLocal:oreX 2

Modifications by Replicate loop condition at line 40:5 (+1 instructions):
 
    53 label *label330
    54 ucontrol within 0 0 6 *tmp42
    55 jump *label332 notEqual *tmp42 false
+   56 label *label410
    57 ucontrol approach 0 0 5.5
    58 label *label331
-    * jump *label330 always
+   59 ucontrol within 0 0 6 *tmp42
+   60 jump *label410 equal *tmp42 false
    61 label *label332
    62 label *label333
    63 label *label334

Modifications by Inline function call at line 271:30 (+13 instructions):
 
    65 set :trace:ore :findDrillLocationLocal:ore
    66 set :trace:x @mapw
    67 set :trace:y 0
-    * setaddr :trace*retaddr *label335 (h:*label335)
-    * call *label6 *invalid :trace*retval (m:*label335) (h:*label335)
-    * label *label335
+   68 label *label411
+   69 label *label412
+   70 ucontrol move :trace:x :trace:y
+   71 sensor *tmp23 @unit @x
+   72 op sub *tmp24 :trace:x *tmp23
+   73 sensor *tmp25 @unit @y
+   74 op sub *tmp26 :trace:y *tmp25
+   75 op len *tmp27 *tmp24 *tmp26
+   76 op sub .mapProgress .cornerDistance *tmp27
+   77 ulocate ore core true :trace:ore :trace:oreX :trace:oreY *tmp29 0
+   78 jump *label413 equal *tmp29 false
+   79 op min .x0 .x0 :trace:oreX
+   80 op min .y0 .y0 :trace:oreY
+   81 op max .x1 .x1 :trace:oreX
+   82 op max .y1 .y1 :trace:oreY
+   83 label *label413
+   84 label *label414
+   85 label *label415
+   86 ucontrol within :trace:x :trace:y 5 *tmp36
+   87 jump *label412 equal *tmp36 false
+   88 label *label416
+   89 label *label417
    90 op add .cornerDistance .cornerDistance @maph
    91 set :trace:ore :findMaxOreDistance:ore
    92 set :trace:x @mapw

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    67 set :trace:y 0
    68 label *label411
    69 label *label412
-    * ucontrol move :trace:x :trace:y
+   70 ucontrol move @mapw 0
    71 sensor *tmp23 @unit @x
-    * op sub *tmp24 :trace:x *tmp23
+   72 op sub *tmp24 @mapw *tmp23
    73 sensor *tmp25 @unit @y
-    * op sub *tmp26 :trace:y *tmp25
+   74 op sub *tmp26 0 *tmp25
    75 op len *tmp27 *tmp24 *tmp26
    76 op sub .mapProgress .cornerDistance *tmp27
-    * ulocate ore core true :trace:ore :trace:oreX :trace:oreY *tmp29 0
+   77 ulocate ore core true :findDrillLocationLocal:ore :trace:oreX :trace:oreY *tmp29 0
    78 jump *label413 equal *tmp29 false
    79 op min .x0 .x0 :trace:oreX
    80 op min .y0 .y0 :trace:oreY
 
    83 label *label413
    84 label *label414
    85 label *label415
-    * ucontrol within :trace:x :trace:y 5 *tmp36
+   86 ucontrol within @mapw 0 5 *tmp36
    87 jump *label412 equal *tmp36 false
    88 label *label416
    89 label *label417
    90 op add .cornerDistance .cornerDistance @maph
-    * set :trace:ore :findMaxOreDistance:ore
+   91 set :trace:ore :findDrillLocationLocal:ore
    92 set :trace:x @mapw
    93 set :trace:y @maph
    94 setaddr :trace*retaddr *label336 (h:*label336)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
    62 label *label333
    63 label *label334
    64 op add .cornerDistance 0 @mapw
-    * set :trace:ore :findDrillLocationLocal:ore
-    * set :trace:x @mapw
-    * set :trace:y 0
    65 label *label411
    66 label *label412
    67 ucontrol move @mapw 0

Modifications by Inline function call at line 272:30 (+13 instructions):
 
    88 set :trace:ore :findDrillLocationLocal:ore
    89 set :trace:x @mapw
    90 set :trace:y @maph
-    * setaddr :trace*retaddr *label336 (h:*label336)
-    * call *label6 *invalid :trace*retval (m:*label336) (h:*label336)
-    * label *label336
+   91 label *label418
+   92 label *label419
+   93 ucontrol move :trace:x :trace:y
+   94 sensor *tmp23 @unit @x
+   95 op sub *tmp24 :trace:x *tmp23
+   96 sensor *tmp25 @unit @y
+   97 op sub *tmp26 :trace:y *tmp25
+   98 op len *tmp27 *tmp24 *tmp26
+   99 op sub .mapProgress .cornerDistance *tmp27
+  100 ulocate ore core true :trace:ore :trace:oreX :trace:oreY *tmp29 0
+  101 jump *label420 equal *tmp29 false
+  102 op min .x0 .x0 :trace:oreX
+  103 op min .y0 .y0 :trace:oreY
+  104 op max .x1 .x1 :trace:oreX
+  105 op max .y1 .y1 :trace:oreY
+  106 label *label420
+  107 label *label421
+  108 label *label422
+  109 ucontrol within :trace:x :trace:y 5 *tmp36
+  110 jump *label419 equal *tmp36 false
+  111 label *label423
+  112 label *label424
   113 op add .cornerDistance .cornerDistance @mapw
   114 set :trace:ore :findMaxOreDistance:ore
   115 set :trace:x 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    90 set :trace:y @maph
    91 label *label418
    92 label *label419
-    * ucontrol move :trace:x :trace:y
+   93 ucontrol move @mapw @maph
    94 sensor *tmp23 @unit @x
-    * op sub *tmp24 :trace:x *tmp23
+   95 op sub *tmp24 @mapw *tmp23
    96 sensor *tmp25 @unit @y
-    * op sub *tmp26 :trace:y *tmp25
+   97 op sub *tmp26 @maph *tmp25
    98 op len *tmp27 *tmp24 *tmp26
    99 op sub .mapProgress .cornerDistance *tmp27
-    * ulocate ore core true :trace:ore :trace:oreX :trace:oreY *tmp29 0
+  100 ulocate ore core true :findDrillLocationLocal:ore :trace:oreX :trace:oreY *tmp29 0
   101 jump *label420 equal *tmp29 false
   102 op min .x0 .x0 :trace:oreX
   103 op min .y0 .y0 :trace:oreY
 
   106 label *label420
   107 label *label421
   108 label *label422
-    * ucontrol within :trace:x :trace:y 5 *tmp36
+  109 ucontrol within @mapw @maph 5 *tmp36
   110 jump *label419 equal *tmp36 false
   111 label *label423
   112 label *label424
   113 op add .cornerDistance .cornerDistance @mapw
-    * set :trace:ore :findMaxOreDistance:ore
+  114 set :trace:ore :findDrillLocationLocal:ore
   115 set :trace:x 0
   116 set :trace:y @maph
   117 setaddr :trace*retaddr *label337 (h:*label337)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
    85 label *label416
    86 label *label417
    87 op add .cornerDistance .cornerDistance @maph
-    * set :trace:ore :findDrillLocationLocal:ore
-    * set :trace:x @mapw
-    * set :trace:y @maph
    88 label *label418
    89 label *label419
    90 ucontrol move @mapw @maph

Modifications by Inline function 'trace' defined at line 244:1 (+9 instructions):
 
     7 wait 1e12
     8 jump *label14 always
     9 end
-    * label *label6
-    * label *label24
-    * ucontrol move :trace:x :trace:y
-    * sensor *tmp23 @unit @x
-    * op sub *tmp24 :trace:x *tmp23
-    * sensor *tmp25 @unit @y
-    * op sub *tmp26 :trace:y *tmp25
-    * op len *tmp27 *tmp24 *tmp26
-    * op sub .mapProgress .cornerDistance *tmp27
-    * ulocate ore core true :trace:ore :trace:oreX :trace:oreY *tmp29 0
-    * jump *label27 equal *tmp29 false
-    * op min .x0 .x0 :trace:oreX
-    * op min .y0 .y0 :trace:oreY
-    * op max .x1 .x1 :trace:oreX
-    * op max .y1 .y1 :trace:oreY
-    * label *label27
-    * label *label28
-    * label *label25
-    * ucontrol within :trace:x :trace:y 5 *tmp36
-    * jump *label24 equal *tmp36 false
-    * label *label26
-    * label *label23
-    * return :trace*retaddr
-    * end
    10 label *label8
    11 set .locations 0
    12 set .coreX :findDrillLocationLocal:x
 
    87 set :trace:ore :findDrillLocationLocal:ore
    88 set :trace:x 0
    89 set :trace:y @maph
-    * setaddr :trace*retaddr *label337 (h:*label337)
-    * call *label6 *invalid :trace*retval (m:*label337) (h:*label337)
-    * label *label337
+   90 label *label425
+   91 label *label426
+   92 ucontrol move :trace:x :trace:y
+   93 sensor *tmp23 @unit @x
+   94 op sub *tmp24 :trace:x *tmp23
+   95 sensor *tmp25 @unit @y
+   96 op sub *tmp26 :trace:y *tmp25
+   97 op len *tmp27 *tmp24 *tmp26
+   98 op sub .mapProgress .cornerDistance *tmp27
+   99 ulocate ore core true :trace:ore :trace:oreX :trace:oreY *tmp29 0
+  100 jump *label427 equal *tmp29 false
+  101 op min .x0 .x0 :trace:oreX
+  102 op min .y0 .y0 :trace:oreY
+  103 op max .x1 .x1 :trace:oreX
+  104 op max .y1 .y1 :trace:oreY
+  105 label *label427
+  106 label *label428
+  107 label *label429
+  108 ucontrol within :trace:x :trace:y 5 *tmp36
+  109 jump *label426 equal *tmp36 false
+  110 label *label430
+  111 label *label431
   112 op add .cornerDistance .cornerDistance @maph
   113 set :trace:ore :findMaxOreDistance:ore
   114 set :trace:x 0
   115 set :trace:y 0
-    * setaddr :trace*retaddr *label338 (h:*label338)
-    * call *label6 *invalid :trace*retval (m:*label338) (h:*label338)
-    * label *label338
+  116 label *label432
+  117 label *label433
+  118 ucontrol move :trace:x :trace:y
+  119 sensor *tmp23 @unit @x
+  120 op sub *tmp24 :trace:x *tmp23
+  121 sensor *tmp25 @unit @y
+  122 op sub *tmp26 :trace:y *tmp25
+  123 op len *tmp27 *tmp24 *tmp26
+  124 op sub .mapProgress .cornerDistance *tmp27
+  125 ulocate ore core true :trace:ore :trace:oreX :trace:oreY *tmp29 0
+  126 jump *label434 equal *tmp29 false
+  127 op min .x0 .x0 :trace:oreX
+  128 op min .y0 .y0 :trace:oreY
+  129 op max .x1 .x1 :trace:oreX
+  130 op max .y1 .y1 :trace:oreY
+  131 label *label434
+  132 label *label435
+  133 label *label436
+  134 ucontrol within :trace:x :trace:y 5 *tmp36
+  135 jump *label433 equal *tmp36 false
+  136 label *label437
+  137 label *label438
   138 op sub *tmp45 .coreX .x0
   139 op sub *tmp46 .coreY .y0
   140 op len :findMaxOreDistance:d0 *tmp45 *tmp46

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    89 set :trace:y @maph
    90 label *label425
    91 label *label426
-    * ucontrol move :trace:x :trace:y
+   92 ucontrol move 0 @maph
    93 sensor *tmp23 @unit @x
-    * op sub *tmp24 :trace:x *tmp23
+   94 op sub *tmp24 0 *tmp23
    95 sensor *tmp25 @unit @y
-    * op sub *tmp26 :trace:y *tmp25
+   96 op sub *tmp26 @maph *tmp25
    97 op len *tmp27 *tmp24 *tmp26
    98 op sub .mapProgress .cornerDistance *tmp27
-    * ulocate ore core true :trace:ore :trace:oreX :trace:oreY *tmp29 0
+   99 ulocate ore core true :findDrillLocationLocal:ore :trace:oreX :trace:oreY *tmp29 0
   100 jump *label427 equal *tmp29 false
   101 op min .x0 .x0 :trace:oreX
   102 op min .y0 .y0 :trace:oreY
 
   105 label *label427
   106 label *label428
   107 label *label429
-    * ucontrol within :trace:x :trace:y 5 *tmp36
+  108 ucontrol within 0 @maph 5 *tmp36
   109 jump *label426 equal *tmp36 false
   110 label *label430
   111 label *label431
   112 op add .cornerDistance .cornerDistance @maph
-    * set :trace:ore :findMaxOreDistance:ore
+  113 set :trace:ore :findDrillLocationLocal:ore
   114 set :trace:x 0
   115 set :trace:y 0
   116 label *label432
   117 label *label433
-    * ucontrol move :trace:x :trace:y
+  118 ucontrol move 0 0
   119 sensor *tmp23 @unit @x
-    * op sub *tmp24 :trace:x *tmp23
+  120 op sub *tmp24 0 *tmp23
   121 sensor *tmp25 @unit @y
-    * op sub *tmp26 :trace:y *tmp25
+  122 op sub *tmp26 0 *tmp25
   123 op len *tmp27 *tmp24 *tmp26
   124 op sub .mapProgress .cornerDistance *tmp27
-    * ulocate ore core true :trace:ore :trace:oreX :trace:oreY *tmp29 0
+  125 ulocate ore core true :findMaxOreDistance:ore :trace:oreX :trace:oreY *tmp29 0
   126 jump *label434 equal *tmp29 false
   127 op min .x0 .x0 :trace:oreX
   128 op min .y0 .y0 :trace:oreY
 
   131 label *label434
   132 label *label435
   133 label *label436
-    * ucontrol within :trace:x :trace:y 5 *tmp36
+  134 ucontrol within 0 0 5 *tmp36
   135 jump *label433 equal *tmp36 false
   136 label *label437
   137 label *label438
-    * op sub *tmp45 .coreX .x0
-    * op sub *tmp46 .coreY .y0
+  138 op sub *tmp45 :findDrillLocationLocal:x .x0
+  139 op sub *tmp46 :findDrillLocationLocal:y .y0
   140 op len :findMaxOreDistance:d0 *tmp45 *tmp46
-    * op sub *tmp49 .coreY .y1
+  141 op sub *tmp49 :findDrillLocationLocal:y .y1
   142 op len :findMaxOreDistance:d1 *tmp45 *tmp49
-    * op sub *tmp51 .coreX .x1
+  143 op sub *tmp51 :findDrillLocationLocal:x .x1
   144 op len :findMaxOreDistance:d2 *tmp51 *tmp46
   145 op len :findMaxOreDistance:d3 *tmp51 *tmp49
   146 op max *tmp57 :findMaxOreDistance:d0 :findMaxOreDistance:d1
 
   186 op div :locateOreAway:a .angle @degToRad
   187 op sin *tmp74 :locateOreAway:a
   188 op mul *tmp75 *tmp74 :locateOreAway:distance
-    * op add *tmp76 .coreX *tmp75
+  189 op add *tmp76 :findDrillLocationLocal:x *tmp75
   190 op max *tmp79 *tmp76 5
   191 op min *tmp78 *tmp79 *tmp77
   192 label *label50
   193 op cos *tmp81 :locateOreAway:a
   194 op mul *tmp82 *tmp81 :locateOreAway:distance
-    * op add *tmp83 .coreY *tmp82
+  195 op add *tmp83 :findDrillLocationLocal:y *tmp82
   196 op max *tmp86 *tmp83 5
   197 op min *tmp85 *tmp86 *tmp84
   198 label *label51
 
   216 jump *label46 always
   217 label *label56
   218 label *label57
-    * op sub *tmp98 :locateOreAway:x .coreX
+  219 op sub *tmp98 :locateOreAway:x :findDrillLocationLocal:x
   220 op abs *tmp99 *tmp98
-    * op sub *tmp100 :locateOreAway:y .coreY
+  221 op sub *tmp100 :locateOreAway:y :findDrillLocationLocal:y
   222 op abs *tmp101 *tmp100
   223 op max :locateOreAway:coreDist *tmp99 *tmp101
   224 op sub *tmp103 :locateOreAway:x *tmp78
 
   921 op floor *tmp282 *tmp283
   922 label *label233
   923 op add :findDrillLocationLocal:oreY :findDrillLocationLocal:oreY *tmp282
-    * op sub *tmp285 :findDrillLocationLocal:oreX .coreX
+  924 op sub *tmp285 :findDrillLocationLocal:oreX :findDrillLocationLocal:x
   925 op abs *tmp286 *tmp285
-    * op sub *tmp287 :findDrillLocationLocal:oreY .coreY
+  926 op sub *tmp287 :findDrillLocationLocal:oreY :findDrillLocationLocal:y
   927 op abs *tmp288 *tmp287
   928 op min *tmp289 *tmp286 *tmp288
   929 jump *label234 greaterThanEq *tmp289 7

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
    84 label *label423
    85 label *label424
    86 op add .cornerDistance .cornerDistance @mapw
-    * set :trace:ore :findDrillLocationLocal:ore
-    * set :trace:x 0
-    * set :trace:y @maph
    87 label *label425
    88 label *label426
    89 ucontrol move 0 @maph
 
   107 label *label430
   108 label *label431
   109 op add .cornerDistance .cornerDistance @maph
-    * set :trace:ore :findDrillLocationLocal:ore
-    * set :trace:x 0
-    * set :trace:y 0
   110 label *label432
   111 label *label433
   112 ucontrol move 0 0
 
   116 op sub *tmp26 0 *tmp25
   117 op len *tmp27 *tmp24 *tmp26
   118 op sub .mapProgress .cornerDistance *tmp27
-    * ulocate ore core true :findMaxOreDistance:ore :trace:oreX :trace:oreY *tmp29 0
+  119 ulocate ore core true :findDrillLocationLocal:ore :trace:oreX :trace:oreY *tmp29 0
   120 jump *label434 equal *tmp29 false
   121 op min .x0 .x0 :trace:oreX
   122 op min .y0 .y0 :trace:oreY

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
    17 set :findDrillLocationLocal:dx :findDrillLocationLocal:dy
    18 set .mapSpots :findDrillLocationLocal:dx
    19 jump *label40 lessThan :findDrillLocationLocal:limit 1000
-    * set :findMaxOreDistance:ore :findDrillLocationLocal:ore
    20 label *label329
    21 set .mapProgress 0
    22 op add *tmp38 @mapw @maph

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-13 instructions):
 
   139 op max *tmp57 :findMaxOreDistance:d0 :findMaxOreDistance:d1
   140 op max *tmp57 *tmp57 :findMaxOreDistance:d2
   141 op max *tmp57 *tmp57 :findMaxOreDistance:d3
-    * jump *label339 always
   142 label *label339
   143 set *tmp59 *tmp57
   144 jump *label41 always
 
   240 jump *label324 lessThan :visited:i .locations
   241 label *label65
   242 set *tmp110 false
-    * jump *label62 always
   243 label *label62
   244 jump *label68 notEqual *tmp110 false
   245 op div *tmp124 2 .angle
 
   257 jump *label323 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   258 label *label49
   259 set *tmp68 false
-    * jump *label46 always
   260 label *label46
   261 set :findDrillLocationLocal:oreX :locateOreAway:x
   262 set :findDrillLocationLocal:oreY :locateOreAway:y
 
   340 op add *tmp20 :spotValue.2:result :spotValue.3:result
   341 op add *tmp21 :spotValue.3:result :spotValue.4:result
   342 packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
-    * jump *label373 always
   343 label *label372
   344 label *label373
   345 set :findBestPosition:y1 :computeRowValues*retval
 
   401 op add *tmp20 :spotValue.2:result :spotValue.3:result
   402 op add *tmp21 :spotValue.3:result :spotValue.4:result
   403 packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
-    * jump *label382 always
   404 label *label381
   405 label *label382
   406 set :findBestPosition:y2 :computeRowValues*retval
 
   461 op add *tmp20 :spotValue.2:result :spotValue.3:result
   462 op add *tmp21 :spotValue.3:result :spotValue.4:result
   463 packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
-    * jump *label391 always
   464 label *label390
   465 label *label391
   466 set :findBestPosition:y3 :computeRowValues*retval
 
   522 op add *tmp20 :spotValue.2:result :spotValue.3:result
   523 op add *tmp21 :spotValue.3:result :spotValue.4:result
   524 packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
-    * jump *label400 always
   525 label *label399
   526 label *label400
   527 set :findBestPosition:y4 :computeRowValues*retval
 
   583 op add *tmp20 :spotValue.2:result :spotValue.3:result
   584 op add *tmp21 :spotValue.3:result :spotValue.4:result
   585 packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
-    * jump *label409 always
   586 label *label408
   587 label *label409
   588 set :findBestPosition:best 0
 
   867 label *label201
   868 label *label89
   869 op mul *tmp137 :findBestPosition:best 255
-    * jump *label82 always
   870 label *label82
   871 jump *label222 lessThanEq *tmp137 :findDrillLocationLocal:capacity
   872 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
 
  1051 jump *label325 greaterThanEq :createTerrainMask:r -3
  1052 label *label251
  1053 set :createTerrainMask*retval :createTerrainMask:result
-    * jump *label243 always
  1054 label *label243
  1055 return :createTerrainMask*retaddr
  1056 end
 
  1094 jump *label327 lessThanEq :findPossiblePlacement:y 3
  1095 label *label259
  1096 set :findPossiblePlacement*retval -1
-    * jump *label256 always
  1097 label *label256
  1098 return :findPossiblePlacement*retaddr
  1099 end
 
  1310 label *label311
  1311 label *label312
  1312 set *tmp439 :shiftMask:mask
-    * jump *label306 always
  1313 label *label306
  1314 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp439
  1315 op add *tmp467 .drillX :layoutThoriumDrillAtLocation:sx
 
  1332 multilabel *label304 (m:marker0)
  1333 label *label300
  1334 set :layoutThoriumDrillAtLocation*retval true
-    * jump *label285 always
  1335 label *label285
  1336 return :layoutThoriumDrillAtLocation*retaddr
  1337 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    36 label *label332
    37 label *label333
    38 label *label334
-    * op add .cornerDistance 0 @mapw
+   39 set .cornerDistance @mapw
    40 label *label411
    41 label *label412
    42 ucontrol move @mapw 0
 
  1003 label *label350
  1004 label *label351
  1005 op shl *tmp315 :createTerrainMask:result 1
-    * op add *tmp316 :createTerrainMask:x 0
+ 1006 set *tmp316 :createTerrainMask:x
  1007 set :isBlocked:x *tmp316
  1008 set :isBlocked:y *tmp317
  1009 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-11 instructions):
 
   331 op add *tmp14 *tmp13 :spotValue.3:result
   332 op add *tmp15 :spotValue.2:result :spotValue.3:result
   333 op add *tmp16 *tmp15 :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp12 *tmp14 *tmp16 0
+  334 packcolor :findBestPosition:y1 *tmp12 *tmp14 *tmp16 0
   335 jump *label373 always
   336 jump *label372 always
   337 label *label371
 
   339 op add *tmp19 :spotValue.1:result :spotValue.2:result
   340 op add *tmp20 :spotValue.2:result :spotValue.3:result
   341 op add *tmp21 :spotValue.3:result :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
+  342 packcolor :findBestPosition:y1 *tmp18 *tmp19 *tmp20 *tmp21
   343 label *label372
   344 label *label373
-    * set :findBestPosition:y1 :computeRowValues*retval
   345 op sub *tmp140 :findDrillLocationLocal:oreY 1
   346 label *label374
   347 op sub :spotValue:x :findDrillLocationLocal:oreX 2
 
   391 op add *tmp14 *tmp13 :spotValue.3:result
   392 op add *tmp15 :spotValue.2:result :spotValue.3:result
   393 op add *tmp16 *tmp15 :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp12 *tmp14 *tmp16 0
+  394 packcolor :findBestPosition:y2 *tmp12 *tmp14 *tmp16 0
   395 jump *label382 always
   396 jump *label381 always
   397 label *label380
 
   399 op add *tmp19 :spotValue.1:result :spotValue.2:result
   400 op add *tmp20 :spotValue.2:result :spotValue.3:result
   401 op add *tmp21 :spotValue.3:result :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
+  402 packcolor :findBestPosition:y2 *tmp18 *tmp19 *tmp20 *tmp21
   403 label *label381
   404 label *label382
-    * set :findBestPosition:y2 :computeRowValues*retval
   405 label *label383
   406 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   407 set :spotValue:y :findDrillLocationLocal:oreY
 
   450 op add *tmp14 *tmp13 :spotValue.3:result
   451 op add *tmp15 :spotValue.2:result :spotValue.3:result
   452 op add *tmp16 *tmp15 :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp12 *tmp14 *tmp16 0
+  453 packcolor :findBestPosition:y3 *tmp12 *tmp14 *tmp16 0
   454 jump *label391 always
   455 jump *label390 always
   456 label *label389
 
   458 op add *tmp19 :spotValue.1:result :spotValue.2:result
   459 op add *tmp20 :spotValue.2:result :spotValue.3:result
   460 op add *tmp21 :spotValue.3:result :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
+  461 packcolor :findBestPosition:y3 *tmp18 *tmp19 *tmp20 *tmp21
   462 label *label390
   463 label *label391
-    * set :findBestPosition:y3 :computeRowValues*retval
   464 op add *tmp144 :findDrillLocationLocal:oreY 1
   465 label *label392
   466 op sub :spotValue:x :findDrillLocationLocal:oreX 2
 
   510 op add *tmp14 *tmp13 :spotValue.3:result
   511 op add *tmp15 :spotValue.2:result :spotValue.3:result
   512 op add *tmp16 *tmp15 :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp12 *tmp14 *tmp16 0
+  513 packcolor :findBestPosition:y4 *tmp12 *tmp14 *tmp16 0
   514 jump *label400 always
   515 jump *label399 always
   516 label *label398
 
   518 op add *tmp19 :spotValue.1:result :spotValue.2:result
   519 op add *tmp20 :spotValue.2:result :spotValue.3:result
   520 op add *tmp21 :spotValue.3:result :spotValue.4:result
-    * packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
+  521 packcolor :findBestPosition:y4 *tmp18 *tmp19 *tmp20 *tmp21
   522 label *label399
   523 label *label400
-    * set :findBestPosition:y4 :computeRowValues*retval
   524 op add *tmp146 :findDrillLocationLocal:oreY 2
   525 label *label401
   526 op sub :spotValue:x :findDrillLocationLocal:oreX 2
 
   966 label *label341
   967 label *label342
   968 op shl *tmp315 :createTerrainMask:result 1
-    * op add *tmp316 :createTerrainMask:x 3
-    * set :isBlocked:x *tmp316
+  969 op add :isBlocked:x :createTerrainMask:x 3
   970 set :isBlocked:y *tmp317
   971 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   972 select type equal type @boulder @air type
 
   976 label *label344
   977 label *label345
   978 op shl *tmp315 :createTerrainMask:result 1
-    * op add *tmp316 :createTerrainMask:x 2
-    * set :isBlocked:x *tmp316
+  979 op add :isBlocked:x :createTerrainMask:x 2
   980 set :isBlocked:y *tmp317
   981 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   982 select type equal type @boulder @air type
 
   986 label *label347
   987 label *label348
   988 op shl *tmp315 :createTerrainMask:result 1
-    * op add *tmp316 :createTerrainMask:x 1
-    * set :isBlocked:x *tmp316
+  989 op add :isBlocked:x :createTerrainMask:x 1
   990 set :isBlocked:y *tmp317
   991 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   992 select type equal type @boulder @air type
 
   996 label *label350
   997 label *label351
   998 op shl *tmp315 :createTerrainMask:result 1
-    * set *tmp316 :createTerrainMask:x
-    * set :isBlocked:x *tmp316
+  999 set :isBlocked:x :createTerrainMask:x
  1000 set :isBlocked:y *tmp317
  1001 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
  1002 select type equal type @boulder @air type
 
  1006 label *label353
  1007 label *label354
  1008 op shl *tmp315 :createTerrainMask:result 1
-    * op add *tmp316 :createTerrainMask:x -1
-    * set :isBlocked:x *tmp316
+ 1009 op add :isBlocked:x :createTerrainMask:x -1
  1010 set :isBlocked:y *tmp317
  1011 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
  1012 select type equal type @boulder @air type
 
  1016 label *label356
  1017 label *label357
  1018 op shl *tmp315 :createTerrainMask:result 1
-    * op add *tmp316 :createTerrainMask:x -2
-    * set :isBlocked:x *tmp316
+ 1019 op add :isBlocked:x :createTerrainMask:x -2
  1020 set :isBlocked:y *tmp317
  1021 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
  1022 select type equal type @boulder @air type
 
  1026 label *label359
  1027 label *label360
  1028 op shl *tmp315 :createTerrainMask:result 1
-    * op add *tmp316 :createTerrainMask:x -3
-    * set :isBlocked:x *tmp316
+ 1029 op add :isBlocked:x :createTerrainMask:x -3
  1030 set :isBlocked:y *tmp317
  1031 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
  1032 select type equal type @boulder @air type

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2:
 
    45 sensor *tmp25 @unit @y
    46 op sub *tmp26 0 *tmp25
    47 op len *tmp27 *tmp24 *tmp26
-    * op sub .mapProgress .cornerDistance *tmp27
+   48 op sub .mapProgress @mapw *tmp27
    49 ulocate ore core true :findDrillLocationLocal:ore :trace:oreX :trace:oreY *tmp29 0
    50 jump *label413 equal *tmp29 false
    51 op min .x0 .x0 :trace:oreX
 
    59 jump *label412 equal *tmp36 false
    60 label *label416
    61 label *label417
-    * op add .cornerDistance .cornerDistance @maph
+   62 op add .cornerDistance @mapw @maph
    63 label *label418
    64 label *label419
    65 ucontrol move @mapw @maph

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-1 instructions):
 
    36 label *label332
    37 label *label333
    38 label *label334
-    * set .cornerDistance @mapw
    39 label *label411
    40 label *label412
    41 ucontrol move @mapw 0
 
    67 sensor *tmp25 @unit @y
    68 op sub *tmp26 @maph *tmp25
    69 op len *tmp27 *tmp24 *tmp26
-    * op sub .mapProgress .cornerDistance *tmp27
+   70 op sub .mapProgress *tmp38 *tmp27
    71 ulocate ore core true :findDrillLocationLocal:ore :trace:oreX :trace:oreY *tmp29 0
    72 jump *label420 equal *tmp29 false
    73 op min .x0 .x0 :trace:oreX
 
    81 jump *label419 equal *tmp36 false
    82 label *label423
    83 label *label424
-    * op add .cornerDistance .cornerDistance @mapw
+   84 op add .cornerDistance *tmp38 @mapw
    85 label *label425
    86 label *label426
    87 ucontrol move 0 @maph

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 4 (-1 instructions):
 
    58 jump *label412 equal *tmp36 false
    59 label *label416
    60 label *label417
-    * op add .cornerDistance @mapw @maph
    61 label *label418
    62 label *label419
    63 ucontrol move @mapw @maph

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    17 set :findDrillLocationLocal:dx :findDrillLocationLocal:dy
    18 set .mapSpots :findDrillLocationLocal:dx
    19 jump *label40 lessThan :findDrillLocationLocal:limit 1000
-    * label *label329
    20 set .mapProgress 0
    21 op add *tmp38 @mapw @maph
    22 op mul .mapTotal 2 *tmp38
 
    24 set .y0 @maph
    25 set .x1 0
    26 set .y1 0
-    * label *label330
    27 ucontrol within 0 0 6 *tmp42
    28 jump *label332 notEqual *tmp42 false
    29 label *label410
    30 ucontrol approach 0 0 5.5
-    * label *label331
    31 ucontrol within 0 0 6 *tmp42
    32 jump *label410 equal *tmp42 false
    33 label *label332
-    * label *label333
-    * label *label334
-    * label *label411
    34 label *label412
    35 ucontrol move @mapw 0
    36 sensor *tmp23 @unit @x
 
    46 op max .x1 .x1 :trace:oreX
    47 op max .y1 .y1 :trace:oreY
    48 label *label413
-    * label *label414
-    * label *label415
    49 ucontrol within @mapw 0 5 *tmp36
    50 jump *label412 equal *tmp36 false
-    * label *label416
-    * label *label417
-    * label *label418
    51 label *label419
    52 ucontrol move @mapw @maph
    53 sensor *tmp23 @unit @x
 
    63 op max .x1 .x1 :trace:oreX
    64 op max .y1 .y1 :trace:oreY
    65 label *label420
-    * label *label421
-    * label *label422
    66 ucontrol within @mapw @maph 5 *tmp36
    67 jump *label419 equal *tmp36 false
-    * label *label423
-    * label *label424
    68 op add .cornerDistance *tmp38 @mapw
-    * label *label425
    69 label *label426
    70 ucontrol move 0 @maph
    71 sensor *tmp23 @unit @x
 
    81 op max .x1 .x1 :trace:oreX
    82 op max .y1 .y1 :trace:oreY
    83 label *label427
-    * label *label428
-    * label *label429
    84 ucontrol within 0 @maph 5 *tmp36
    85 jump *label426 equal *tmp36 false
-    * label *label430
-    * label *label431
    86 op add .cornerDistance .cornerDistance @maph
-    * label *label432
    87 label *label433
    88 ucontrol move 0 0
    89 sensor *tmp23 @unit @x
 
    99 op max .x1 .x1 :trace:oreX
   100 op max .y1 .y1 :trace:oreY
   101 label *label434
-    * label *label435
-    * label *label436
   102 ucontrol within 0 0 5 *tmp36
   103 jump *label433 equal *tmp36 false
-    * label *label437
-    * label *label438
   104 op sub *tmp45 :findDrillLocationLocal:x .x0
   105 op sub *tmp46 :findDrillLocationLocal:y .y0
   106 op len :findMaxOreDistance:d0 *tmp45 *tmp46
 
   112 op max *tmp57 :findMaxOreDistance:d0 :findMaxOreDistance:d1
   113 op max *tmp57 *tmp57 :findMaxOreDistance:d2
   114 op max *tmp57 *tmp57 :findMaxOreDistance:d3
-    * label *label339
   115 set *tmp59 *tmp57
   116 jump *label41 always
   117 label *label40
 
   144 op mul .mapProgress .angle .angle
   145 op sub *tmp77 @mapw 5
   146 op sub *tmp84 @maph 5
-    * label *label47
   147 jump *label49 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   148 label *label323
   149 op div :locateOreAway:a .angle @degToRad
 
   152 op add *tmp76 :findDrillLocationLocal:x *tmp75
   153 op max *tmp79 *tmp76 5
   154 op min *tmp78 *tmp79 *tmp77
-    * label *label50
   155 op cos *tmp81 :locateOreAway:a
   156 op mul *tmp82 *tmp81 :locateOreAway:distance
   157 op add *tmp83 :findDrillLocationLocal:y *tmp82
   158 op max *tmp86 *tmp83 5
   159 op min *tmp85 *tmp86 *tmp84
-    * label *label51
-    * label *label53
   160 ucontrol within *tmp78 *tmp85 5 *tmp88
   161 jump *label55 notEqual *tmp88 false
   162 label *label340
   163 ucontrol approach *tmp78 *tmp85 4.5
-    * label *label54
   164 ucontrol within *tmp78 *tmp85 5 *tmp88
   165 jump *label340 equal *tmp88 false
   166 label *label55
-    * label *label52
   167 op div *tmp91 3.8197185279121366 :locateOreAway:distance
   168 op add .angle .angle *tmp91
   169 op mul .mapProgress .angle .angle
 
   173 set *tmp68 false
   174 jump *label46 always
   175 label *label56
-    * label *label57
   176 op sub *tmp98 :locateOreAway:x :findDrillLocationLocal:x
   177 op abs *tmp99 *tmp98
   178 op sub *tmp100 :locateOreAway:y :findDrillLocationLocal:y
 
   185 jump *label60 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
   186 set :visited:index 1
   187 set :visited:i 0
-    * label *label63
   188 jump *label65 greaterThanEq 0 .locations
   189 label *label324
   190 read :visited:lx bank1 :visited:index
 
   197 set *tmp110 true
   198 jump *label62 always
   199 label *label66
-    * label *label67
   200 op add :visited:index :visited:index 3
-    * label *label64
   201 op add :visited:i :visited:i 1
   202 jump *label324 lessThan :visited:i .locations
   203 label *label65
 
   210 set *tmp68 true
   211 jump *label46 always
   212 label *label68
-    * label *label69
   213 label *label60
-    * label *label61
   214 label *label58
-    * label *label59
-    * label *label48
   215 jump *label323 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
   216 label *label49
   217 set *tmp68 false
 
   222 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
   223 jump *label39 always
   224 label *label70
-    * label *label71
   225 jump *label72 lessThan :findDrillLocationLocal:limit 1000
   226 op add .mapSpots .mapSpots 1
   227 label *label72
-    * label *label73
-    * label *label76
   228 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp134
   229 jump *label78 notEqual *tmp134 false
   230 label *label363
   231 ucontrol approach :locateOreAway:x :locateOreAway:y 5.5
-    * label *label77
   232 ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp134
   233 jump *label363 equal *tmp134 false
   234 label *label78
-    * label *label75
-    * label *label74
   235 set :findDrillLocationLocal:last 0
   236 label *label79
   237 op sub *tmp138 :findDrillLocationLocal:oreY 2
-    * label *label365
   238 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   239 set :spotValue:y *tmp138
   240 set :spotValue:ore :findDrillLocationLocal:ore
 
   242 select value equal floor :spotValue:ore 0.00392156862745098 0
   243 select type equal type @boulder @air type
   244 select :spotValue:result equal type @air value 0.06274509803921569
-    * label *label366
   245 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
   246 set :spotValue.1:y *tmp138
   247 set :spotValue.1:ore :findDrillLocationLocal:ore
 
   249 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   250 select type equal type @boulder @air type
   251 select :spotValue.1:result equal type @air value 0.06274509803921569
-    * label *label367
   252 set :spotValue.2:x :findDrillLocationLocal:oreX
   253 set :spotValue.2:y *tmp138
   254 set :spotValue.2:ore :findDrillLocationLocal:ore
 
   256 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   257 select type equal type @boulder @air type
   258 select :spotValue.2:result equal type @air value 0.06274509803921569
-    * label *label368
   259 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
   260 set :spotValue.3:y *tmp138
   261 set :spotValue.3:ore :findDrillLocationLocal:ore
 
   263 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   264 select type equal type @boulder @air type
   265 select :spotValue.3:result equal type @air value 0.06274509803921569
-    * label *label369
   266 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
   267 set :spotValue.4:y *tmp138
   268 set :spotValue.4:ore :findDrillLocationLocal:ore
 
   270 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   271 select type equal type @boulder @air type
   272 select :spotValue.4:result equal type @air value 0.06274509803921569
-    * label *label370
   273 jump *label371 equal :findDrillLocationLocal:large false
   274 op add *tmp11 :spotValue:result :spotValue.1:result
   275 op add *tmp12 *tmp11 :spotValue.2:result
 
   289 label *label372
   290 label *label373
   291 op sub *tmp140 :findDrillLocationLocal:oreY 1
-    * label *label374
   292 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   293 set :spotValue:y *tmp140
   294 set :spotValue:ore :findDrillLocationLocal:ore
 
   296 select value equal floor :spotValue:ore 0.00392156862745098 0
   297 select type equal type @boulder @air type
   298 select :spotValue:result equal type @air value 0.06274509803921569
-    * label *label375
   299 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
   300 set :spotValue.1:y *tmp140
   301 set :spotValue.1:ore :findDrillLocationLocal:ore
 
   303 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   304 select type equal type @boulder @air type
   305 select :spotValue.1:result equal type @air value 0.06274509803921569
-    * label *label376
   306 set :spotValue.2:x :findDrillLocationLocal:oreX
   307 set :spotValue.2:y *tmp140
   308 set :spotValue.2:ore :findDrillLocationLocal:ore
 
   310 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   311 select type equal type @boulder @air type
   312 select :spotValue.2:result equal type @air value 0.06274509803921569
-    * label *label377
   313 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
   314 set :spotValue.3:y *tmp140
   315 set :spotValue.3:ore :findDrillLocationLocal:ore
 
   317 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   318 select type equal type @boulder @air type
   319 select :spotValue.3:result equal type @air value 0.06274509803921569
-    * label *label378
   320 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
   321 set :spotValue.4:y *tmp140
   322 set :spotValue.4:ore :findDrillLocationLocal:ore
 
   324 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   325 select type equal type @boulder @air type
   326 select :spotValue.4:result equal type @air value 0.06274509803921569
-    * label *label379
   327 jump *label380 equal :findDrillLocationLocal:large false
   328 op add *tmp11 :spotValue:result :spotValue.1:result
   329 op add *tmp12 *tmp11 :spotValue.2:result
 
   342 packcolor :findBestPosition:y2 *tmp18 *tmp19 *tmp20 *tmp21
   343 label *label381
   344 label *label382
-    * label *label383
   345 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   346 set :spotValue:y :findDrillLocationLocal:oreY
   347 set :spotValue:ore :findDrillLocationLocal:ore
 
   349 select value equal floor :spotValue:ore 0.00392156862745098 0
   350 select type equal type @boulder @air type
   351 select :spotValue:result equal type @air value 0.06274509803921569
-    * label *label384
   352 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
   353 set :spotValue.1:y :findDrillLocationLocal:oreY
   354 set :spotValue.1:ore :findDrillLocationLocal:ore
 
   356 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   357 select type equal type @boulder @air type
   358 select :spotValue.1:result equal type @air value 0.06274509803921569
-    * label *label385
   359 set :spotValue.2:x :findDrillLocationLocal:oreX
   360 set :spotValue.2:y :findDrillLocationLocal:oreY
   361 set :spotValue.2:ore :findDrillLocationLocal:ore
 
   363 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   364 select type equal type @boulder @air type
   365 select :spotValue.2:result equal type @air value 0.06274509803921569
-    * label *label386
   366 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
   367 set :spotValue.3:y :findDrillLocationLocal:oreY
   368 set :spotValue.3:ore :findDrillLocationLocal:ore
 
   370 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   371 select type equal type @boulder @air type
   372 select :spotValue.3:result equal type @air value 0.06274509803921569
-    * label *label387
   373 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
   374 set :spotValue.4:y :findDrillLocationLocal:oreY
   375 set :spotValue.4:ore :findDrillLocationLocal:ore
 
   377 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   378 select type equal type @boulder @air type
   379 select :spotValue.4:result equal type @air value 0.06274509803921569
-    * label *label388
   380 jump *label389 equal :findDrillLocationLocal:large false
   381 op add *tmp11 :spotValue:result :spotValue.1:result
   382 op add *tmp12 *tmp11 :spotValue.2:result
 
   396 label *label390
   397 label *label391
   398 op add *tmp144 :findDrillLocationLocal:oreY 1
-    * label *label392
   399 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   400 set :spotValue:y *tmp144
   401 set :spotValue:ore :findDrillLocationLocal:ore
 
   403 select value equal floor :spotValue:ore 0.00392156862745098 0
   404 select type equal type @boulder @air type
   405 select :spotValue:result equal type @air value 0.06274509803921569
-    * label *label393
   406 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
   407 set :spotValue.1:y *tmp144
   408 set :spotValue.1:ore :findDrillLocationLocal:ore
 
   410 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   411 select type equal type @boulder @air type
   412 select :spotValue.1:result equal type @air value 0.06274509803921569
-    * label *label394
   413 set :spotValue.2:x :findDrillLocationLocal:oreX
   414 set :spotValue.2:y *tmp144
   415 set :spotValue.2:ore :findDrillLocationLocal:ore
 
   417 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   418 select type equal type @boulder @air type
   419 select :spotValue.2:result equal type @air value 0.06274509803921569
-    * label *label395
   420 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
   421 set :spotValue.3:y *tmp144
   422 set :spotValue.3:ore :findDrillLocationLocal:ore
 
   424 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   425 select type equal type @boulder @air type
   426 select :spotValue.3:result equal type @air value 0.06274509803921569
-    * label *label396
   427 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
   428 set :spotValue.4:y *tmp144
   429 set :spotValue.4:ore :findDrillLocationLocal:ore
 
   431 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   432 select type equal type @boulder @air type
   433 select :spotValue.4:result equal type @air value 0.06274509803921569
-    * label *label397
   434 jump *label398 equal :findDrillLocationLocal:large false
   435 op add *tmp11 :spotValue:result :spotValue.1:result
   436 op add *tmp12 *tmp11 :spotValue.2:result
 
   450 label *label399
   451 label *label400
   452 op add *tmp146 :findDrillLocationLocal:oreY 2
-    * label *label401
   453 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   454 set :spotValue:y *tmp146
   455 set :spotValue:ore :findDrillLocationLocal:ore
 
   457 select value equal floor :spotValue:ore 0.00392156862745098 0
   458 select type equal type @boulder @air type
   459 select :spotValue:result equal type @air value 0.06274509803921569
-    * label *label402
   460 op sub :spotValue.1:x :findDrillLocationLocal:oreX 1
   461 set :spotValue.1:y *tmp146
   462 set :spotValue.1:ore :findDrillLocationLocal:ore
 
   464 select value equal floor :spotValue.1:ore 0.00392156862745098 0
   465 select type equal type @boulder @air type
   466 select :spotValue.1:result equal type @air value 0.06274509803921569
-    * label *label403
   467 set :spotValue.2:x :findDrillLocationLocal:oreX
   468 set :spotValue.2:y *tmp146
   469 set :spotValue.2:ore :findDrillLocationLocal:ore
 
   471 select value equal floor :spotValue.2:ore 0.00392156862745098 0
   472 select type equal type @boulder @air type
   473 select :spotValue.2:result equal type @air value 0.06274509803921569
-    * label *label404
   474 op add :spotValue.3:x :findDrillLocationLocal:oreX 1
   475 set :spotValue.3:y *tmp146
   476 set :spotValue.3:ore :findDrillLocationLocal:ore
 
   478 select value equal floor :spotValue.3:ore 0.00392156862745098 0
   479 select type equal type @boulder @air type
   480 select :spotValue.3:result equal type @air value 0.06274509803921569
-    * label *label405
   481 op add :spotValue.4:x :findDrillLocationLocal:oreX 2
   482 set :spotValue.4:y *tmp146
   483 set :spotValue.4:ore :findDrillLocationLocal:ore
 
   485 select value equal floor :spotValue.4:ore 0.00392156862745098 0
   486 select type equal type @boulder @air type
   487 select :spotValue.4:result equal type @air value 0.06274509803921569
-    * label *label406
   488 jump *label407 equal :findDrillLocationLocal:large false
   489 op add *tmp11 :spotValue:result :spotValue.1:result
   490 op add *tmp12 *tmp11 :spotValue.2:result
 
   520 set :findDrillLocationLocal:diffY -1
   521 set :findBestPosition:best :updateRowPositions3:col1
   522 label *label94
-    * label *label95
   523 label *label92
-    * label *label93
-    * label *label91
   524 jump *label97 greaterThanEq :updateRowPositions3:col2 0.0392156862745098
   525 jump *label99 lessThanEq :updateRowPositions3:col2 :findBestPosition:best
   526 set :findDrillLocationLocal:diffX 0
   527 set :findDrillLocationLocal:diffY -1
   528 set :findBestPosition:best :updateRowPositions3:col2
   529 label *label99
-    * label *label100
   530 label *label97
-    * label *label98
-    * label *label96
   531 jump *label102 greaterThanEq :updateRowPositions3:col3 0.0392156862745098
   532 jump *label104 lessThanEq :updateRowPositions3:col3 :findBestPosition:best
   533 set :findDrillLocationLocal:diffX 1
   534 set :findDrillLocationLocal:diffY -1
   535 set :findBestPosition:best :updateRowPositions3:col3
   536 label *label104
-    * label *label105
   537 label *label102
-    * label *label103
-    * label *label101
-    * label *label90
   538 unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 0 :findBestPosition:row2
   539 jump *label108 greaterThanEq :updateRowPositions3.1:col1 0.0392156862745098
   540 jump *label110 lessThanEq :updateRowPositions3.1:col1 :findBestPosition:best
 
   542 set :findDrillLocationLocal:diffY 0
   543 set :findBestPosition:best :updateRowPositions3.1:col1
   544 label *label110
-    * label *label111
   545 label *label108
-    * label *label109
-    * label *label107
   546 jump *label113 greaterThanEq :updateRowPositions3.1:col2 0.0392156862745098
   547 jump *label115 lessThanEq :updateRowPositions3.1:col2 :findBestPosition:best
   548 set :findDrillLocationLocal:diffX 0
   549 set :findDrillLocationLocal:diffY 0
   550 set :findBestPosition:best :updateRowPositions3.1:col2
   551 label *label115
-    * label *label116
   552 label *label113
-    * label *label114
-    * label *label112
   553 jump *label118 greaterThanEq :updateRowPositions3.1:col3 0.0392156862745098
   554 jump *label120 lessThanEq :updateRowPositions3.1:col3 :findBestPosition:best
   555 set :findDrillLocationLocal:diffX 1
   556 set :findDrillLocationLocal:diffY 0
   557 set :findBestPosition:best :updateRowPositions3.1:col3
   558 label *label120
-    * label *label121
   559 label *label118
-    * label *label119
-    * label *label117
-    * label *label106
   560 unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 0 :findBestPosition:row3
   561 jump *label124 greaterThanEq :updateRowPositions3.2:col1 0.0392156862745098
   562 jump *label126 lessThanEq :updateRowPositions3.2:col1 :findBestPosition:best
 
   564 set :findDrillLocationLocal:diffY 1
   565 set :findBestPosition:best :updateRowPositions3.2:col1
   566 label *label126
-    * label *label127
   567 label *label124
-    * label *label125
-    * label *label123
   568 jump *label129 greaterThanEq :updateRowPositions3.2:col2 0.0392156862745098
   569 jump *label131 lessThanEq :updateRowPositions3.2:col2 :findBestPosition:best
   570 set :findDrillLocationLocal:diffX 0
   571 set :findDrillLocationLocal:diffY 1
   572 set :findBestPosition:best :updateRowPositions3.2:col2
   573 label *label131
-    * label *label132
   574 label *label129
-    * label *label130
-    * label *label128
   575 jump *label134 greaterThanEq :updateRowPositions3.2:col3 0.0392156862745098
   576 jump *label136 lessThanEq :updateRowPositions3.2:col3 :findBestPosition:best
   577 set :findDrillLocationLocal:diffX 1
   578 set :findDrillLocationLocal:diffY 1
   579 set :findBestPosition:best :updateRowPositions3.2:col3
   580 label *label136
-    * label *label137
   581 label *label134
-    * label *label135
-    * label *label133
-    * label *label122
   582 jump *label89 always
   583 label *label88
   584 op add :findBestPosition:row1.1 :findBestPosition:y1 :findBestPosition:y2
 
   592 set :findDrillLocationLocal:diffY -1.5
   593 set :findBestPosition:best :updateRowPositions4:col1
   594 label *label142
-    * label *label143
   595 label *label140
-    * label *label141
-    * label *label139
   596 jump *label145 greaterThanEq :updateRowPositions4:col2 0.0392156862745098
   597 jump *label147 lessThanEq :updateRowPositions4:col2 :findBestPosition:best
   598 set :findDrillLocationLocal:diffX -0.5
   599 set :findDrillLocationLocal:diffY -1.5
   600 set :findBestPosition:best :updateRowPositions4:col2
   601 label *label147
-    * label *label148
   602 label *label145
-    * label *label146
-    * label *label144
   603 jump *label150 greaterThanEq :updateRowPositions4:col3 0.0392156862745098
   604 jump *label152 lessThanEq :updateRowPositions4:col3 :findBestPosition:best
   605 set :findDrillLocationLocal:diffX 0.5
   606 set :findDrillLocationLocal:diffY -1.5
   607 set :findBestPosition:best :updateRowPositions4:col3
   608 label *label152
-    * label *label153
   609 label *label150
-    * label *label151
-    * label *label149
   610 jump *label155 greaterThanEq :updateRowPositions4:col4 0.0392156862745098
   611 jump *label157 lessThanEq :updateRowPositions4:col4 :findBestPosition:best
   612 set :findDrillLocationLocal:diffX 1.5
   613 set :findDrillLocationLocal:diffY -1.5
   614 set :findBestPosition:best :updateRowPositions4:col4
   615 label *label157
-    * label *label158
   616 label *label155
-    * label *label156
-    * label *label154
-    * label *label138
   617 unpackcolor :updateRowPositions4.1:col1 :updateRowPositions4.1:col2 :updateRowPositions4.1:col3 :updateRowPositions4.1:col4 :findBestPosition:row2.1
   618 jump *label161 greaterThanEq :updateRowPositions4.1:col1 0.0392156862745098
   619 jump *label163 lessThanEq :updateRowPositions4.1:col1 :findBestPosition:best
 
   621 set :findDrillLocationLocal:diffY -0.5
   622 set :findBestPosition:best :updateRowPositions4.1:col1
   623 label *label163
-    * label *label164
   624 label *label161
-    * label *label162
-    * label *label160
   625 jump *label166 greaterThanEq :updateRowPositions4.1:col2 0.0392156862745098
   626 jump *label168 lessThanEq :updateRowPositions4.1:col2 :findBestPosition:best
   627 set :findDrillLocationLocal:diffX -0.5
   628 set :findDrillLocationLocal:diffY -0.5
   629 set :findBestPosition:best :updateRowPositions4.1:col2
   630 label *label168
-    * label *label169
   631 label *label166
-    * label *label167
-    * label *label165
   632 jump *label171 greaterThanEq :updateRowPositions4.1:col3 0.0392156862745098
   633 jump *label173 lessThanEq :updateRowPositions4.1:col3 :findBestPosition:best
   634 set :findDrillLocationLocal:diffX 0.5
   635 set :findDrillLocationLocal:diffY -0.5
   636 set :findBestPosition:best :updateRowPositions4.1:col3
   637 label *label173
-    * label *label174
   638 label *label171
-    * label *label172
-    * label *label170
   639 jump *label176 greaterThanEq :updateRowPositions4.1:col4 0.0392156862745098
   640 jump *label178 lessThanEq :updateRowPositions4.1:col4 :findBestPosition:best
   641 set :findDrillLocationLocal:diffX 1.5
   642 set :findDrillLocationLocal:diffY -0.5
   643 set :findBestPosition:best :updateRowPositions4.1:col4
   644 label *label178
-    * label *label179
   645 label *label176
-    * label *label177
-    * label *label175
-    * label *label159
   646 unpackcolor :updateRowPositions4.2:col1 :updateRowPositions4.2:col2 :updateRowPositions4.2:col3 :updateRowPositions4.2:col4 :findBestPosition:row3.1
   647 jump *label182 greaterThanEq :updateRowPositions4.2:col1 0.0392156862745098
   648 jump *label184 lessThanEq :updateRowPositions4.2:col1 :findBestPosition:best
 
   650 set :findDrillLocationLocal:diffY 0.5
   651 set :findBestPosition:best :updateRowPositions4.2:col1
   652 label *label184
-    * label *label185
   653 label *label182
-    * label *label183
-    * label *label181
   654 jump *label187 greaterThanEq :updateRowPositions4.2:col2 0.0392156862745098
   655 jump *label189 lessThanEq :updateRowPositions4.2:col2 :findBestPosition:best
   656 set :findDrillLocationLocal:diffX -0.5
   657 set :findDrillLocationLocal:diffY 0.5
   658 set :findBestPosition:best :updateRowPositions4.2:col2
   659 label *label189
-    * label *label190
   660 label *label187
-    * label *label188
-    * label *label186
   661 jump *label192 greaterThanEq :updateRowPositions4.2:col3 0.0392156862745098
   662 jump *label194 lessThanEq :updateRowPositions4.2:col3 :findBestPosition:best
   663 set :findDrillLocationLocal:diffX 0.5
   664 set :findDrillLocationLocal:diffY 0.5
   665 set :findBestPosition:best :updateRowPositions4.2:col3
   666 label *label194
-    * label *label195
   667 label *label192
-    * label *label193
-    * label *label191
   668 jump *label197 greaterThanEq :updateRowPositions4.2:col4 0.0392156862745098
   669 jump *label199 lessThanEq :updateRowPositions4.2:col4 :findBestPosition:best
   670 set :findDrillLocationLocal:diffX 1.5
   671 set :findDrillLocationLocal:diffY 0.5
   672 set :findBestPosition:best :updateRowPositions4.2:col4
   673 label *label199
-    * label *label200
   674 label *label197
-    * label *label198
-    * label *label196
-    * label *label180
   675 unpackcolor :updateRowPositions4.3:col1 :updateRowPositions4.3:col2 :updateRowPositions4.3:col3 :updateRowPositions4.3:col4 :findBestPosition:row4
   676 jump *label203 greaterThanEq :updateRowPositions4.3:col1 0.0392156862745098
   677 jump *label205 lessThanEq :updateRowPositions4.3:col1 :findBestPosition:best
 
   679 set :findDrillLocationLocal:diffY 1.5
   680 set :findBestPosition:best :updateRowPositions4.3:col1
   681 label *label205
-    * label *label206
   682 label *label203
-    * label *label204
-    * label *label202
   683 jump *label208 greaterThanEq :updateRowPositions4.3:col2 0.0392156862745098
   684 jump *label210 lessThanEq :updateRowPositions4.3:col2 :findBestPosition:best
   685 set :findDrillLocationLocal:diffX -0.5
   686 set :findDrillLocationLocal:diffY 1.5
   687 set :findBestPosition:best :updateRowPositions4.3:col2
   688 label *label210
-    * label *label211
   689 label *label208
-    * label *label209
-    * label *label207
   690 jump *label213 greaterThanEq :updateRowPositions4.3:col3 0.0392156862745098
   691 jump *label215 lessThanEq :updateRowPositions4.3:col3 :findBestPosition:best
   692 set :findDrillLocationLocal:diffX 0.5
   693 set :findDrillLocationLocal:diffY 1.5
   694 set :findBestPosition:best :updateRowPositions4.3:col3
   695 label *label215
-    * label *label216
   696 label *label213
-    * label *label214
-    * label *label212
   697 jump *label218 greaterThanEq :updateRowPositions4.3:col4 0.0392156862745098
   698 jump *label220 lessThanEq :updateRowPositions4.3:col4 :findBestPosition:best
   699 set :findDrillLocationLocal:diffX 1.5
   700 set :findDrillLocationLocal:diffY 1.5
   701 set :findBestPosition:best :updateRowPositions4.3:col4
   702 label *label220
-    * label *label221
   703 label *label218
-    * label *label219
-    * label *label217
-    * label *label201
   704 label *label89
   705 op mul *tmp137 :findBestPosition:best 255
-    * label *label82
   706 jump *label222 lessThanEq *tmp137 :findDrillLocationLocal:capacity
   707 op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   708 op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
 
   710 jump *label224 greaterThanEq :findDrillLocationLocal:limit 1000
   711 set .mapSpots *tmp137
   712 label *label224
-    * label *label225
   713 jump *label226 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
   714 ucontrol unbind
   715 set :findDrillLocationLocal*retval true
   716 jump *label39 always
   717 label *label226
-    * label *label227
   718 label *label222
-    * label *label223
   719 jump *label228 lessThanEq *tmp137 :findDrillLocationLocal:best
   720 op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
   721 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   722 set :findDrillLocationLocal:best *tmp137
   723 label *label228
-    * label *label229
   724 jump *label230 greaterThan *tmp137 :findDrillLocationLocal:last
   725 jump *label81 always
   726 label *label230
-    * label *label231
   727 set :findDrillLocationLocal:last *tmp137
   728 op mul :round:x :findDrillLocationLocal:diffX 1.1
   729 op add *tmp279 :round:x 0.5
   730 op floor *tmp278 *tmp279
-    * label *label232
   731 op add :findDrillLocationLocal:oreX :findDrillLocationLocal:oreX *tmp278
   732 op mul :round.1:x :findDrillLocationLocal:diffY 1.1
   733 op add *tmp283 :round.1:x 0.5
   734 op floor *tmp282 *tmp283
-    * label *label233
   735 op add :findDrillLocationLocal:oreY :findDrillLocationLocal:oreY *tmp282
   736 op sub *tmp285 :findDrillLocationLocal:oreX :findDrillLocationLocal:x
   737 op abs *tmp286 *tmp285
 
   741 jump *label234 greaterThanEq *tmp289 7
   742 jump *label81 always
   743 label *label234
-    * label *label235
-    * label *label80
   744 jump *label79 always
   745 label *label81
   746 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
 
   750 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
   751 write :findDrillLocationLocal:bestY bank1 :findDrillLocationLocal:count
   752 op add .locations .locations 1
-    * label *label44
   753 jump *label43 always
-    * label *label45
   754 set :findDrillLocationLocal*retval null
   755 label *label39
   756 return :findDrillLocationLocal*retaddr
 
   770 set :findDrillLocation:dy :findDrillLocationLocal:dy
   771 set :findDrillLocation:capacity :findDrillLocationLocal:capacity
   772 set :findDrillLocation*retval :findDrillLocationLocal*retval
-    * label *label241
   773 set :findDrillLocation*finished true
   774 jump *label14 always
   775 end
   776 label *label9
-    * label *label246
   777 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp312
   778 jump *label248 notEqual *tmp312 false
   779 label *label364
   780 ucontrol approach :createTerrainMask:x :createTerrainMask:y 5.5
-    * label *label247
   781 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp312
   782 jump *label364 equal *tmp312 false
   783 label *label248
-    * label *label245
-    * label *label244
   784 set :createTerrainMask:result 0
   785 set :createTerrainMask:r 3
-    * label *label249
   786 label *label325
   787 op add *tmp317 :createTerrainMask:y :createTerrainMask:r
-    * label *label341
-    * label *label342
   788 op shl *tmp315 :createTerrainMask:result 1
   789 op add :isBlocked:x :createTerrainMask:x 3
   790 set :isBlocked:y *tmp317
   791 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   792 select type equal type @boulder @air type
   793 select :isBlocked:result equal type @air 0 1
-    * label *label343
   794 op or :createTerrainMask:result *tmp315 :isBlocked:result
-    * label *label344
-    * label *label345
   795 op shl *tmp315 :createTerrainMask:result 1
   796 op add :isBlocked:x :createTerrainMask:x 2
   797 set :isBlocked:y *tmp317
   798 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   799 select type equal type @boulder @air type
   800 select :isBlocked:result equal type @air 0 1
-    * label *label346
   801 op or :createTerrainMask:result *tmp315 :isBlocked:result
-    * label *label347
-    * label *label348
   802 op shl *tmp315 :createTerrainMask:result 1
   803 op add :isBlocked:x :createTerrainMask:x 1
   804 set :isBlocked:y *tmp317
   805 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   806 select type equal type @boulder @air type
   807 select :isBlocked:result equal type @air 0 1
-    * label *label349
   808 op or :createTerrainMask:result *tmp315 :isBlocked:result
-    * label *label350
-    * label *label351
   809 op shl *tmp315 :createTerrainMask:result 1
   810 set :isBlocked:x :createTerrainMask:x
   811 set :isBlocked:y *tmp317
   812 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   813 select type equal type @boulder @air type
   814 select :isBlocked:result equal type @air 0 1
-    * label *label352
   815 op or :createTerrainMask:result *tmp315 :isBlocked:result
-    * label *label353
-    * label *label354
   816 op shl *tmp315 :createTerrainMask:result 1
   817 op add :isBlocked:x :createTerrainMask:x -1
   818 set :isBlocked:y *tmp317
   819 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   820 select type equal type @boulder @air type
   821 select :isBlocked:result equal type @air 0 1
-    * label *label355
   822 op or :createTerrainMask:result *tmp315 :isBlocked:result
-    * label *label356
-    * label *label357
   823 op shl *tmp315 :createTerrainMask:result 1
   824 op add :isBlocked:x :createTerrainMask:x -2
   825 set :isBlocked:y *tmp317
   826 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   827 select type equal type @boulder @air type
   828 select :isBlocked:result equal type @air 0 1
-    * label *label358
   829 op or :createTerrainMask:result *tmp315 :isBlocked:result
-    * label *label359
-    * label *label360
   830 op shl *tmp315 :createTerrainMask:result 1
   831 op add :isBlocked:x :createTerrainMask:x -3
   832 set :isBlocked:y *tmp317
   833 ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
   834 select type equal type @boulder @air type
   835 select :isBlocked:result equal type @air 0 1
-    * label *label361
   836 op or :createTerrainMask:result *tmp315 :isBlocked:result
-    * label *label362
-    * label *label254
-    * label *label250
   837 op sub :createTerrainMask:r :createTerrainMask:r 1
   838 jump *label325 greaterThanEq :createTerrainMask:r -3
-    * label *label251
   839 set :createTerrainMask*retval :createTerrainMask:result
-    * label *label243
   840 return :createTerrainMask*retaddr
   841 end
   842 label *label10
   843 set :findPossiblePlacement:y -3
-    * label *label257
   844 jump *label259 greaterThan :findPossiblePlacement:y 3
   845 label *label327
   846 op add *tmp320 :findPossiblePlacement:y 3
   847 op mul *tmp321 7 *tmp320
   848 op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp321
   849 set :findPossiblePlacement:x -3
-    * label *label260
   850 jump *label262 greaterThan :findPossiblePlacement:x 3
   851 label *label328
   852 op and *tmp323 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
 
   856 op add :findPossiblePlacement*retval *tmp327 :findPossiblePlacement:x
   857 jump *label256 always
   858 label *label263
-    * label *label264
   859 op sub *tmp329 3 :findPossiblePlacement:width
   860 jump *label265 lessThanEq :findPossiblePlacement:x *tmp329
   861 jump *label262 always
   862 label *label265
-    * label *label266
   863 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
-    * label *label261
   864 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
   865 jump *label328 lessThanEq :findPossiblePlacement:x 3
   866 label *label262
 
   868 jump *label267 lessThanEq :findPossiblePlacement:y *tmp332
   869 jump *label259 always
   870 label *label267
-    * label *label268
-    * label *label258
   871 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
   872 jump *label327 lessThanEq :findPossiblePlacement:y 3
   873 label *label259
 
   906 set :tryPlaceGenerator*retval false
   907 jump *label269 always
   908 label *label274
-    * label *label275
   909 op add *tmp350 :tryPlaceGenerator:centerX 0.5
   910 op add .water2X *tmp350 :findPossiblePlacement:x
   911 op add *tmp352 :tryPlaceGenerator:centerY 0.5
 
   927 set :tryPlaceGenerator*retval false
   928 jump *label269 always
   929 label *label277
-    * label *label278
   930 op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   931 op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   932 op shl *tmp364 1 :findPossiblePlacement*retval
 
   942 set :tryPlaceGenerator*retval false
   943 jump *label269 always
   944 label *label280
-    * label *label281
   945 op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   946 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   947 op shl *tmp370 1 :findPossiblePlacement*retval
 
   957 set :tryPlaceGenerator*retval false
   958 jump *label269 always
   959 label *label283
-    * label *label284
   960 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   961 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   962 set :tryPlaceGenerator*retval true
 
   978 setaddr :createTerrainMask*retaddr *label286 (h:*label286)
   979 call *label9 *invalid :createTerrainMask*retval (m:*label286) (h:*label286)
   980 label *label286
-    * label *label287
   981 op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
-    * label *label288
   982 op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
-    * label *label289
   983 set :layoutThoriumDrillAtLocation:extractorMask 387
   984 set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
   985 set :findPossiblePlacement:placementMask 387
 
   996 op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :findPossiblePlacement*retval
   997 op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
   998 label *label291
-    * label *label292
-    * label *label293
   999 set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
-    * label *label294
  1000 set :layoutThoriumDrillAtLocation:generatorVertical 6340995
  1001 set :tryPlaceGenerator:centerX .drillX
  1002 set :tryPlaceGenerator:centerY .drillY
 
  1010 set :layoutThoriumDrillAtLocation*retval true
  1011 jump *label285 always
  1012 label *label296
-    * label *label297
  1013 set :layoutThoriumDrillAtLocation:sx 3
  1014 set :layoutThoriumDrillAtLocation:sy 3
  1015 setaddr *tmp433 *label301
 
  1048 set *tmp439 0
  1049 jump *label306 always
  1050 label *label307
-    * label *label308
  1051 op mul *tmp446 7 *tmp438
  1052 op add :shiftMask:shift *tmp437 *tmp446
  1053 jump *label309 lessThanEq :shiftMask:shift 0
 
  1065 jump *label313 lessThanEq *tmp437 0
  1066 op shl :shiftMask:keep :shiftMask:keep *tmp457
  1067 label *label313
-    * label *label314
  1068 op shl *tmp463 :shiftMask:keep 7
  1069 op or :shiftMask:keep :shiftMask:keep *tmp463
  1070 op shl *tmp464 :shiftMask:keep 14
 
  1073 op or :shiftMask:keep :shiftMask:keep *tmp465
  1074 op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
  1075 label *label311
-    * label *label312
  1076 set *tmp439 :shiftMask:mask
  1077 label *label306
  1078 op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval *tmp439
 
  1090 set :layoutThoriumDrillAtLocation*retval true
  1091 jump *label285 always
  1092 label *label316
-    * label *label317
-    * label *label299
  1093 multijump *tmp433 0 0 (m:marker0)
  1094 multilabel *label304 (m:marker0)
-    * label *label300
  1095 set :layoutThoriumDrillAtLocation*retval true
  1096 label *label285
  1097 return :layoutThoriumDrillAtLocation*retaddr
 
  1113 set :layoutThoriumDrill*retval false
  1114 jump *label318 always
  1115 label *label320
-    * label *label321
  1116 setaddr :layoutThoriumDrillAtLocation*retaddr *label322 (h:*label322)
  1117 call *label12 *invalid :layoutThoriumDrillAtLocation*retval (m:*label322) (h:*label322)
  1118 label *label322

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-4 instructions):
 
   721 op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
   722 set :findDrillLocationLocal:best *tmp137
   723 label *label228
-    * jump *label230 greaterThan *tmp137 :findDrillLocationLocal:last
-    * jump *label81 always
+  724 jump *label81 lessThanEq *tmp137 :findDrillLocationLocal:last
   725 label *label230
   726 set :findDrillLocationLocal:last *tmp137
   727 op mul :round:x :findDrillLocationLocal:diffX 1.1
 
   737 op sub *tmp287 :findDrillLocationLocal:oreY :findDrillLocationLocal:y
   738 op abs *tmp288 *tmp287
   739 op min *tmp289 *tmp286 *tmp288
-    * jump *label234 greaterThanEq *tmp289 7
-    * jump *label81 always
+  740 jump *label81 lessThan *tmp289 7
   741 label *label234
   742 jump *label79 always
   743 label *label81
 
   855 jump *label256 always
   856 label *label263
   857 op sub *tmp329 3 :findPossiblePlacement:width
-    * jump *label265 lessThanEq :findPossiblePlacement:x *tmp329
-    * jump *label262 always
+  858 jump *label262 greaterThan :findPossiblePlacement:x *tmp329
   859 label *label265
   860 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
   861 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
   862 jump *label328 lessThanEq :findPossiblePlacement:x 3
   863 label *label262
   864 op sub *tmp332 3 :findPossiblePlacement:height
-    * jump *label267 lessThanEq :findPossiblePlacement:y *tmp332
-    * jump *label259 always
+  865 jump *label259 greaterThan :findPossiblePlacement:y *tmp332
   866 label *label267
   867 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
   868 jump *label327 lessThanEq :findPossiblePlacement:y 3

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   722 set :findDrillLocationLocal:best *tmp137
   723 label *label228
   724 jump *label81 lessThanEq *tmp137 :findDrillLocationLocal:last
-    * label *label230
   725 set :findDrillLocationLocal:last *tmp137
   726 op mul :round:x :findDrillLocationLocal:diffX 1.1
   727 op add *tmp279 :round:x 0.5
 
   737 op abs *tmp288 *tmp287
   738 op min *tmp289 *tmp286 *tmp288
   739 jump *label81 lessThan *tmp289 7
-    * label *label234
   740 jump *label79 always
   741 label *label81
   742 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
 
   854 label *label263
   855 op sub *tmp329 3 :findPossiblePlacement:width
   856 jump *label262 greaterThan :findPossiblePlacement:x *tmp329
-    * label *label265
   857 op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
   858 op add :findPossiblePlacement:x :findPossiblePlacement:x 1
   859 jump *label328 lessThanEq :findPossiblePlacement:x 3
   860 label *label262
   861 op sub *tmp332 3 :findPossiblePlacement:height
   862 jump *label259 greaterThan :findPossiblePlacement:y *tmp332
-    * label *label267
   863 op add :findPossiblePlacement:y :findPossiblePlacement:y 1
   864 jump *label327 lessThanEq :findPossiblePlacement:y 3
   865 label *label259

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   220 set :findDrillLocationLocal:oreY :locateOreAway:y
   221 jump *label70 notEqual *tmp68 false
   222 op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
-    * jump *label39 always
+  223 return :findDrillLocationLocal*retaddr
   224 label *label70
   225 jump *label72 lessThan :findDrillLocationLocal:limit 1000
   226 op add .mapSpots .mapSpots 1
 
   572 set :findBestPosition:best :updateRowPositions3.2:col2
   573 label *label131
   574 label *label129
-    * jump *label134 greaterThanEq :updateRowPositions3.2:col3 0.0392156862745098
-    * jump *label136 lessThanEq :updateRowPositions3.2:col3 :findBestPosition:best
+  575 jump *label89 greaterThanEq :updateRowPositions3.2:col3 0.0392156862745098
+  576 jump *label89 lessThanEq :updateRowPositions3.2:col3 :findBestPosition:best
   577 set :findDrillLocationLocal:diffX 1
   578 set :findDrillLocationLocal:diffY 1
   579 set :findBestPosition:best :updateRowPositions3.2:col3
 
   713 jump *label226 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
   714 ucontrol unbind
   715 set :findDrillLocationLocal*retval true
-    * jump *label39 always
+  716 return :findDrillLocationLocal*retaddr
   717 label *label226
   718 label *label222
   719 jump *label228 lessThanEq *tmp137 :findDrillLocationLocal:best
 
   850 op mul *tmp326 :findPossiblePlacement:y 7
   851 op add *tmp327 24 *tmp326
   852 op add :findPossiblePlacement*retval *tmp327 :findPossiblePlacement:x
-    * jump *label256 always
+  853 return :findPossiblePlacement*retaddr
   854 label *label263
   855 op sub *tmp329 3 :findPossiblePlacement:width
   856 jump *label262 greaterThan :findPossiblePlacement:x *tmp329
 
   896 label *label273
   897 jump *label274 greaterThanEq :findPossiblePlacement*retval 0
   898 set :tryPlaceGenerator*retval false
-    * jump *label269 always
+  899 return :tryPlaceGenerator*retaddr
   900 label *label274
   901 op add *tmp350 :tryPlaceGenerator:centerX 0.5
   902 op add .water2X *tmp350 :findPossiblePlacement:x
 
   917 label *label276
   918 jump *label277 greaterThanEq :findPossiblePlacement*retval 0
   919 set :tryPlaceGenerator*retval false
-    * jump *label269 always
+  920 return :tryPlaceGenerator*retaddr
   921 label *label277
   922 op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   923 op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
 
   932 label *label279
   933 jump *label280 greaterThanEq :findPossiblePlacement*retval 0
   934 set :tryPlaceGenerator*retval false
-    * jump *label269 always
+  935 return :tryPlaceGenerator*retaddr
   936 label *label280
   937 op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   938 op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
 
   947 label *label282
   948 jump *label283 greaterThanEq :findPossiblePlacement*retval 0
   949 set :tryPlaceGenerator*retval false
-    * jump *label269 always
+  950 return :tryPlaceGenerator*retaddr
   951 label *label283
   952 op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
   953 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   954 set :tryPlaceGenerator*retval true
-    * jump *label269 always
+  955 return :tryPlaceGenerator*retaddr
   956 label *label269
   957 return :tryPlaceGenerator*retaddr
   958 end
 
  1000 label *label295
  1001 jump *label296 equal :tryPlaceGenerator*retval false
  1002 set :layoutThoriumDrillAtLocation*retval true
-    * jump *label285 always
+ 1003 return :layoutThoriumDrillAtLocation*retaddr
  1004 label *label296
  1005 set :layoutThoriumDrillAtLocation:sx 3
  1006 set :layoutThoriumDrillAtLocation:sy 3
 
  1080 label *label315
  1081 jump *label316 equal :tryPlaceGenerator*retval false
  1082 set :layoutThoriumDrillAtLocation*retval true
-    * jump *label285 always
+ 1083 return :layoutThoriumDrillAtLocation*retaddr
  1084 label *label316
  1085 multijump *tmp433 0 0 (m:marker0)
  1086 multilabel *label304 (m:marker0)

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-16 instructions):
 
     6 label *label14
     7 wait 1e12
     8 jump *label14 always
-    * end
     9 label *label8
    10 set .locations 0
    11 set .coreX :findDrillLocationLocal:x
 
   278 op add *tmp16 *tmp15 :spotValue.4:result
   279 packcolor :findBestPosition:y1 *tmp12 *tmp14 *tmp16 0
   280 jump *label373 always
-    * jump *label372 always
   281 label *label371
   282 op add *tmp18 :spotValue:result :spotValue.1:result
   283 op add *tmp19 :spotValue.1:result :spotValue.2:result
 
   331 op add *tmp16 *tmp15 :spotValue.4:result
   332 packcolor :findBestPosition:y2 *tmp12 *tmp14 *tmp16 0
   333 jump *label382 always
-    * jump *label381 always
   334 label *label380
   335 op add *tmp18 :spotValue:result :spotValue.1:result
   336 op add *tmp19 :spotValue.1:result :spotValue.2:result
 
   383 op add *tmp16 *tmp15 :spotValue.4:result
   384 packcolor :findBestPosition:y3 *tmp12 *tmp14 *tmp16 0
   385 jump *label391 always
-    * jump *label390 always
   386 label *label389
   387 op add *tmp18 :spotValue:result :spotValue.1:result
   388 op add *tmp19 :spotValue.1:result :spotValue.2:result
 
   436 op add *tmp16 *tmp15 :spotValue.4:result
   437 packcolor :findBestPosition:y4 *tmp12 *tmp14 *tmp16 0
   438 jump *label400 always
-    * jump *label399 always
   439 label *label398
   440 op add *tmp18 :spotValue:result :spotValue.1:result
   441 op add *tmp19 :spotValue.1:result :spotValue.2:result
 
   489 op add *tmp16 *tmp15 :spotValue.4:result
   490 packcolor :computeRowValues*retval *tmp12 *tmp14 *tmp16 0
   491 jump *label409 always
-    * jump *label408 always
   492 label *label407
   493 op add *tmp18 :spotValue:result :spotValue.1:result
   494 op add *tmp19 :spotValue.1:result :spotValue.2:result
 
   571 set :findDrillLocationLocal:diffX 1
   572 set :findDrillLocationLocal:diffY 1
   573 set :findBestPosition:best :updateRowPositions3.2:col3
-    * label *label136
-    * label *label134
   574 jump *label89 always
   575 label *label88
   576 op add :findBestPosition:row1.1 :findBestPosition:y1 :findBestPosition:y2
 
   739 write :findDrillLocationLocal:bestY bank1 :findDrillLocationLocal:count
   740 op add .locations .locations 1
   741 jump *label43 always
-    * set :findDrillLocationLocal*retval null
-    * label *label39
-    * return :findDrillLocationLocal*retaddr
-    * end
   742 label *label0
   743 set :findDrillLocationLocal:x :findDrillLocation:x
   744 set :findDrillLocationLocal:y :findDrillLocation:y
 
   756 set :findDrillLocation*retval :findDrillLocationLocal*retval
   757 set :findDrillLocation*finished true
   758 jump *label14 always
-    * end
   759 label *label9
   760 ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp312
   761 jump *label248 notEqual *tmp312 false
 
   821 jump *label325 greaterThanEq :createTerrainMask:r -3
   822 set :createTerrainMask*retval :createTerrainMask:result
   823 return :createTerrainMask*retaddr
-    * end
   824 label *label10
   825 set :findPossiblePlacement:y -3
   826 jump *label259 greaterThan :findPossiblePlacement:y 3
 
   850 jump *label327 lessThanEq :findPossiblePlacement:y 3
   851 label *label259
   852 set :findPossiblePlacement*retval -1
-    * label *label256
   853 return :findPossiblePlacement*retaddr
-    * end
   854 label *label11
   855 set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
   856 set :findPossiblePlacement:placementMask :tryPlaceGenerator:generatorHorizontal
 
   937 op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
   938 set :tryPlaceGenerator*retval true
   939 return :tryPlaceGenerator*retaddr
-    * label *label269
-    * return :tryPlaceGenerator*retaddr
-    * end
   940 label *label12
   941 set .panelY -1
   942 set .panelX -1
 
  1066 multijump *tmp433 0 0 (m:marker0)
  1067 multilabel *label304 (m:marker0)
  1068 set :layoutThoriumDrillAtLocation*retval true
-    * label *label285
  1069 return :layoutThoriumDrillAtLocation*retaddr
-    * end
  1070 label *label1
  1071 set :findDrillLocationLocal:x :layoutThoriumDrill:x
  1072 set :findDrillLocationLocal:y :layoutThoriumDrill:y
 
  1091 label *label318
  1092 set :layoutThoriumDrill*finished true
  1093 jump *label14 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1 (-2 instructions):
 
     8 jump *label14 always
     9 label *label8
    10 set .locations 0
-    * set .coreX :findDrillLocationLocal:x
-    * set .coreY :findDrillLocationLocal:y
    11 ubind :findDrillLocationLocal:unit
    12 set :findDrillLocationLocal:capacity 0
    13 set :findDrillLocationLocal:dy :findDrillLocationLocal:capacity
 
   282 op add *tmp20 :spotValue.2:result :spotValue.3:result
   283 op add *tmp21 :spotValue.3:result :spotValue.4:result
   284 packcolor :findBestPosition:y1 *tmp18 *tmp19 *tmp20 *tmp21
-    * label *label372
   285 label *label373
   286 op sub *tmp140 :findDrillLocationLocal:oreY 1
   287 op sub :spotValue:x :findDrillLocationLocal:oreX 2
 
   334 op add *tmp20 :spotValue.2:result :spotValue.3:result
   335 op add *tmp21 :spotValue.3:result :spotValue.4:result
   336 packcolor :findBestPosition:y2 *tmp18 *tmp19 *tmp20 *tmp21
-    * label *label381
   337 label *label382
   338 op sub :spotValue:x :findDrillLocationLocal:oreX 2
   339 set :spotValue:y :findDrillLocationLocal:oreY
 
   385 op add *tmp20 :spotValue.2:result :spotValue.3:result
   386 op add *tmp21 :spotValue.3:result :spotValue.4:result
   387 packcolor :findBestPosition:y3 *tmp18 *tmp19 *tmp20 *tmp21
-    * label *label390
   388 label *label391
   389 op add *tmp144 :findDrillLocationLocal:oreY 1
   390 op sub :spotValue:x :findDrillLocationLocal:oreX 2
 
   437 op add *tmp20 :spotValue.2:result :spotValue.3:result
   438 op add *tmp21 :spotValue.3:result :spotValue.4:result
   439 packcolor :findBestPosition:y4 *tmp18 *tmp19 *tmp20 *tmp21
-    * label *label399
   440 label *label400
   441 op add *tmp146 :findDrillLocationLocal:oreY 2
   442 op sub :spotValue:x :findDrillLocationLocal:oreX 2
 
   489 op add *tmp20 :spotValue.2:result :spotValue.3:result
   490 op add *tmp21 :spotValue.3:result :spotValue.4:result
   491 packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp21
-    * label *label408
   492 label *label409
   493 set :findBestPosition:best 0
   494 set :findDrillLocationLocal:diffX 0

Modifications by Jumps phase, Jump Straightening, pass 5, iteration 1 (-1 instructions):
 
   721 op sub *tmp287 :findDrillLocationLocal:oreY :findDrillLocationLocal:y
   722 op abs *tmp288 *tmp287
   723 op min *tmp289 *tmp286 *tmp288
-    * jump *label81 lessThan *tmp289 7
-    * jump *label79 always
+  724 jump *label79 greaterThanEq *tmp289 7
   725 label *label81
   726 op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
   727 write :findDrillLocationLocal:best bank1 :findDrillLocationLocal:count

Final code before resolving virtual instructions:

    0:  jump *label13 always 0 0                                     #set target = 8;
    1:  jump *label0 always 0 0                                      ...
    2:  jump *label1 always 0 0                                      ...
    3:  draw triangle bank1 .angle .attenuationRate .batteryX .batteryY .cornerDistance
    4:  draw triangle .drillX .drillY .generatorX .generatorY .locations .mapProgress
    5:  draw triangle .mapSpots .mapTotal .nodeX .nodeY .panelX .panelY
    6:  draw triangle .water1X .water1Y .water2X .water2Y .x0 .x1
    7:  draw triangle .y0 .y1 :createTerrainMask:r :createTerrainMask:result :createTerrainMask:x :createTerrainMask:y
    8:  draw triangle :findBestPosition:best :findBestPosition:row1 :findBestPosition:row1.1 :findBestPosition:row2.1 :findBestPosition:row2 :findBestPosition:row3
    9:  draw triangle :findBestPosition:row3.1 :findBestPosition:row4 :findBestPosition:y1 :findBestPosition:y2 :findBestPosition:y3 :findBestPosition:y4
   10:  draw triangle :findDrillLocation:capacity :findDrillLocation:dx :findDrillLocation:dy :findDrillLocation:item :findDrillLocation:large :findDrillLocation:limit
   11:  draw triangle :findDrillLocation:ore :findDrillLocation:unit :findDrillLocation:x :findDrillLocation:y :findDrillLocationLocal:best :findDrillLocationLocal:bestX
   12:  draw triangle :findDrillLocationLocal:bestY :findDrillLocationLocal:capacity :findDrillLocationLocal:count :findDrillLocationLocal:diffX :findDrillLocationLocal:diffY :findDrillLocationLocal:distanceLimit
   13:  draw triangle :findDrillLocationLocal:dx :findDrillLocationLocal:dy :findDrillLocationLocal:item :findDrillLocationLocal:large :findDrillLocationLocal:last :findDrillLocationLocal:limit
   14:  draw triangle :findDrillLocationLocal:maxDistance :findDrillLocationLocal:ore :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY :findDrillLocationLocal:unit :findDrillLocationLocal:x
   15:  draw triangle :findDrillLocationLocal:y :findMaxOreDistance:d0 :findMaxOreDistance:d1 :findMaxOreDistance:d2 :findMaxOreDistance:d3 :findPossiblePlacement:height
   16:  draw triangle :findPossiblePlacement:mask :findPossiblePlacement:placementMask :findPossiblePlacement:terrainMask :findPossiblePlacement:width :findPossiblePlacement:x :findPossiblePlacement:y
   17:  draw triangle :isBlocked:result :isBlocked:x :isBlocked:y :layoutThoriumDrill:limit :layoutThoriumDrill:unit :layoutThoriumDrill:x
   18:  draw triangle :layoutThoriumDrill:y :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:generatorHorizontal :layoutThoriumDrillAtLocation:generatorVertical
   19:  draw triangle :layoutThoriumDrillAtLocation:newX :layoutThoriumDrillAtLocation:newY :layoutThoriumDrillAtLocation:sx :layoutThoriumDrillAtLocation:sy :layoutThoriumDrillAtLocation:terrainMask :locateOreAway:a
   20:  draw triangle :locateOreAway:coreDist :locateOreAway:distance :locateOreAway:unitDist :locateOreAway:x :locateOreAway:y :round.1:x
   21:  draw triangle :round:x :shiftMask:clearMask :shiftMask:keep :shiftMask:mask :shiftMask:shift :spotValue.1:ore
   22:  draw triangle :spotValue.3:ore :spotValue:ore :spotValue.2:ore :spotValue.4:ore :spotValue.1:result :spotValue.3:result
   23:  draw triangle :spotValue.4:result :spotValue:result :spotValue.2:result :spotValue:x :spotValue.3:x :spotValue.2:x
   24:  draw triangle :spotValue.1:x :spotValue.4:x :spotValue:y :spotValue.3:y :spotValue.2:y :spotValue.1:y
   25:  draw triangle :spotValue.4:y :trace:oreX :trace:oreY :tryPlaceGenerator:centerX :tryPlaceGenerator:centerY :tryPlaceGenerator:generatorHorizontal
   26:  draw triangle :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:terrainMask :updateRowPositions3.1:col1 :updateRowPositions3.2:col1 :updateRowPositions3:col1 :updateRowPositions3.1:col2
   27:  draw triangle :updateRowPositions3.2:col2 :updateRowPositions3:col2 :updateRowPositions3.1:col3 :updateRowPositions3.2:col3 :updateRowPositions3:col3 :updateRowPositions4.1:col1
   28:  draw triangle :updateRowPositions4.3:col1 :updateRowPositions4:col1 :updateRowPositions4.2:col1 :updateRowPositions4.1:col2 :updateRowPositions4.3:col2 :updateRowPositions4:col2
   29:  draw triangle :updateRowPositions4.2:col2 :updateRowPositions4.1:col3 :updateRowPositions4.3:col3 :updateRowPositions4:col3 :updateRowPositions4.2:col3 :updateRowPositions4.1:col4
   30:  draw triangle :updateRowPositions4.3:col4 :updateRowPositions4:col4 :updateRowPositions4.2:col4 :visited:i :visited:index :visited:lx
   31:  draw triangle :visited:ly 0 0 0 0 0
        label *label13                                               ...
   32:  set .attenuationRate 50                                      remote var attenuationRate = 50;
   33:  set *signature "ed92997f66c3d80:v1"                          #set target = 8;
        label *label14                                               ...
   34:  wait 1e12                                                    ...
   35:  jump *label14 always 0 0                                     ...
        label *label8                                                noinline def findDrillLocationLocal(x, y, unit, item, ore, large, limit, out dx, out dy, out capacity)
   36:  set .locations 0                                             locations = 0;
   37:  ubind :findDrillLocationLocal:unit                           ubind(unit);
   38:  set :findDrillLocationLocal:capacity 0                       mapSpots = dx = dy = capacity = 0;
   39:  set :findDrillLocationLocal:dy :findDrillLocationLocal:capac ...
   40:  set :findDrillLocationLocal:dx :findDrillLocationLocal:dy    ...
   41:  set .mapSpots :findDrillLocationLocal:dx                     ...
   42:  jump *label40 lessThan :findDrillLocationLocal:limit 1000    var distanceLimit = limit >= 1000
   43:  set .mapProgress 0                                           mapProgress = 0;
   44:  op add *tmp38 @mapw @maph                                    mapTotal = 2 * (@mapw + @maph);
   45:  op mul .mapTotal 2 *tmp38                                    ...
   46:  set .x0 @mapw                                                x0 = @mapw;
   47:  set .y0 @maph                                                y0 = @maph;
   48:  set .x1 0                                                    x1 = 0;
   49:  set .y1 0                                                    y1 = 0;
   50:  ucontrol within 0 0 6 *tmp42 0                               while !within(x, y, radius) do
   51:  jump *label332 notEqual *tmp42 false                         ...
        label *label410                                              ...
   52:  ucontrol approach 0 0 5.5 0 0                                approach(x, y, radius - 0.5);
   53:  ucontrol within 0 0 6 *tmp42 0                               while !within(x, y, radius) do
   54:  jump *label410 equal *tmp42 false                            ...
        label *label332                                              ...
        label *label412                                              do
   55:  ucontrol move @mapw 0 0 0 0                                  move(x, y);
   56:  sensor *tmp23 @unit @x                                       mapProgress = cornerDistance - len(x - @unit.@x, y - @unit.@y);
   57:  op sub *tmp24 @mapw *tmp23                                   ...
   58:  sensor *tmp25 @unit @y                                       ...
   59:  op sub *tmp26 0 *tmp25                                       ...
   60:  op len *tmp27 *tmp24 *tmp26                                  ...
   61:  op sub .mapProgress @mapw *tmp27                             ...
   62:  ulocate ore core true :findDrillLocationLocal:ore :trace:ore if ulocate(:ore, ore, out oreX, out oreY) then
   63:  jump *label413 equal *tmp29 false                            ...
   64:  op min .x0 .x0 :trace:oreX                                   x0 = min(x0, oreX);
   65:  op min .y0 .y0 :trace:oreY                                   y0 = min(y0, oreY);
   66:  op max .x1 .x1 :trace:oreX                                   x1 = max(x1, oreX);
   67:  op max .y1 .y1 :trace:oreY                                   y1 = max(y1, oreY);
        label *label413                                              if ulocate(:ore, ore, out oreX, out oreY) then
   68:  ucontrol within @mapw 0 5 *tmp36 0                           while !within(x, y, 5);
   69:  jump *label412 equal *tmp36 false                            do
        label *label419                                              ...
   70:  ucontrol move @mapw @maph 0 0 0                              move(x, y);
   71:  sensor *tmp23 @unit @x                                       mapProgress = cornerDistance - len(x - @unit.@x, y - @unit.@y);
   72:  op sub *tmp24 @mapw *tmp23                                   ...
   73:  sensor *tmp25 @unit @y                                       ...
   74:  op sub *tmp26 @maph *tmp25                                   ...
   75:  op len *tmp27 *tmp24 *tmp26                                  ...
   76:  op sub .mapProgress *tmp38 *tmp27                            ...
   77:  ulocate ore core true :findDrillLocationLocal:ore :trace:ore if ulocate(:ore, ore, out oreX, out oreY) then
   78:  jump *label420 equal *tmp29 false                            ...
   79:  op min .x0 .x0 :trace:oreX                                   x0 = min(x0, oreX);
   80:  op min .y0 .y0 :trace:oreY                                   y0 = min(y0, oreY);
   81:  op max .x1 .x1 :trace:oreX                                   x1 = max(x1, oreX);
   82:  op max .y1 .y1 :trace:oreY                                   y1 = max(y1, oreY);
        label *label420                                              if ulocate(:ore, ore, out oreX, out oreY) then
   83:  ucontrol within @mapw @maph 5 *tmp36 0                       while !within(x, y, 5);
   84:  jump *label419 equal *tmp36 false                            do
   85:  op add .cornerDistance *tmp38 @mapw                          cornerDistance += @mapw; trace(ore, 0, @maph);
        label *label426                                              do
   86:  ucontrol move 0 @maph 0 0 0                                  move(x, y);
   87:  sensor *tmp23 @unit @x                                       mapProgress = cornerDistance - len(x - @unit.@x, y - @unit.@y);
   88:  op sub *tmp24 0 *tmp23                                       ...
   89:  sensor *tmp25 @unit @y                                       ...
   90:  op sub *tmp26 @maph *tmp25                                   ...
   91:  op len *tmp27 *tmp24 *tmp26                                  ...
   92:  op sub .mapProgress .cornerDistance *tmp27                   ...
   93:  ulocate ore core true :findDrillLocationLocal:ore :trace:ore if ulocate(:ore, ore, out oreX, out oreY) then
   94:  jump *label427 equal *tmp29 false                            ...
   95:  op min .x0 .x0 :trace:oreX                                   x0 = min(x0, oreX);
   96:  op min .y0 .y0 :trace:oreY                                   y0 = min(y0, oreY);
   97:  op max .x1 .x1 :trace:oreX                                   x1 = max(x1, oreX);
   98:  op max .y1 .y1 :trace:oreY                                   y1 = max(y1, oreY);
        label *label427                                              if ulocate(:ore, ore, out oreX, out oreY) then
   99:  ucontrol within 0 @maph 5 *tmp36 0                           while !within(x, y, 5);
  100:  jump *label426 equal *tmp36 false                            do
  101:  op add .cornerDistance .cornerDistance @maph                 cornerDistance += @maph; trace(ore, 0, 0);
        label *label433                                              do
  102:  ucontrol move 0 0 0 0 0                                      move(x, y);
  103:  sensor *tmp23 @unit @x                                       mapProgress = cornerDistance - len(x - @unit.@x, y - @unit.@y);
  104:  op sub *tmp24 0 *tmp23                                       ...
  105:  sensor *tmp25 @unit @y                                       ...
  106:  op sub *tmp26 0 *tmp25                                       ...
  107:  op len *tmp27 *tmp24 *tmp26                                  ...
  108:  op sub .mapProgress .cornerDistance *tmp27                   ...
  109:  ulocate ore core true :findDrillLocationLocal:ore :trace:ore if ulocate(:ore, ore, out oreX, out oreY) then
  110:  jump *label434 equal *tmp29 false                            ...
  111:  op min .x0 .x0 :trace:oreX                                   x0 = min(x0, oreX);
  112:  op min .y0 .y0 :trace:oreY                                   y0 = min(y0, oreY);
  113:  op max .x1 .x1 :trace:oreX                                   x1 = max(x1, oreX);
  114:  op max .y1 .y1 :trace:oreY                                   y1 = max(y1, oreY);
        label *label434                                              if ulocate(:ore, ore, out oreX, out oreY) then
  115:  ucontrol within 0 0 5 *tmp36 0                               while !within(x, y, 5);
  116:  jump *label433 equal *tmp36 false                            do
  117:  op sub *tmp45 :findDrillLocationLocal:x .x0                  var d0 = len(coreX - x0, coreY - y0);
  118:  op sub *tmp46 :findDrillLocationLocal:y .y0                  ...
  119:  op len :findMaxOreDistance:d0 *tmp45 *tmp46                  ...
  120:  op sub *tmp49 :findDrillLocationLocal:y .y1                  var d1 = len(coreX - x0, coreY - y1);
  121:  op len :findMaxOreDistance:d1 *tmp45 *tmp49                  ...
  122:  op sub *tmp51 :findDrillLocationLocal:x .x1                  var d2 = len(coreX - x1, coreY - y0);
  123:  op len :findMaxOreDistance:d2 *tmp51 *tmp46                  ...
  124:  op len :findMaxOreDistance:d3 *tmp51 *tmp49                  var d3 = len(coreX - x1, coreY - y1);
  125:  op max *tmp57 :findMaxOreDistance:d0 :findMaxOreDistance:d1  return max(d0, d1, d2, d3);
  126:  op max *tmp57 *tmp57 :findMaxOreDistance:d2                  ...
  127:  op max *tmp57 *tmp57 :findMaxOreDistance:d3                  ...
  128:  set *tmp59 *tmp57                                            var distanceLimit = limit >= 1000
  129:  jump *label41 always 0 0                                     ...
        label *label40                                               ...
  130:  op sub *tmp60 @mapw :findDrillLocationLocal:x                : max(coreX, coreY, @mapw - coreX, @maph - coreY);
  131:  op sub *tmp61 @maph :findDrillLocationLocal:y                ...
  132:  op max *tmp62 :findDrillLocationLocal:x :findDrillLocationLo ...
  133:  op max *tmp62 *tmp62 *tmp60                                  ...
  134:  op max *tmp62 *tmp62 *tmp61                                  ...
  135:  set *tmp59 *tmp62                                            var distanceLimit = limit >= 1000
        label *label41                                               ...
  136:  set :findDrillLocationLocal:distanceLimit *tmp59             ...
  137:  set .angle 0                                                 mapProgress = angle = 0;
  138:  set .mapProgress 0                                           ...
  139:  op div .mapTotal *tmp59 3.8197185279121366                   mapTotal = distanceLimit / SPIRAL_WIDTH;
  140:  set :findDrillLocationLocal:count -1                         var count = -1;
  141:  set :findDrillLocationLocal:oreX 0                           var oreX = 0, oreY = 0;
  142:  set :findDrillLocationLocal:oreY 0                           ...
        label *label43                                               while true do
  143:  set :findDrillLocationLocal:best 0                           var best = 0, bestX = x, bestY = y;
  144:  set :findDrillLocationLocal:bestX :findDrillLocationLocal:x  ...
  145:  set :findDrillLocationLocal:bestY :findDrillLocationLocal:y  ...
  146:  op sub *tmp64 :findDrillLocationLocal:limit :findDrillLocati var maxDistance = (limit - capacity) * attenuationRate;
  147:  op mul :findDrillLocationLocal:maxDistance *tmp64 .attenuati ...
  148:  op min :findDrillLocationLocal:distanceLimit :findDrillLocat distanceLimit = min(distanceLimit, maxDistance);
  149:  op div .mapTotal :findDrillLocationLocal:distanceLimit 3.819 mapTotal = distanceLimit / SPIRAL_WIDTH;
  150:  set :locateOreAway:x :findDrillLocationLocal:oreX            if !locateOreAway(item, in out oreX, in out oreY, in distanceLimit) then
  151:  set :locateOreAway:y :findDrillLocationLocal:oreY            ...
  152:  op mul :locateOreAway:distance 3.8197185279121366 .angle     var distance = SPIRAL_WIDTH * angle;
  153:  op max .angle .angle @pi                                     angle = max(angle, @pi);
  154:  op mul .mapProgress .angle .angle                            mapProgress = angle * angle;
  155:  op sub *tmp77 @mapw 5                                        while distance < distanceLimit do
  156:  op sub *tmp84 @maph 5                                        ...
  157:  jump *label49 greaterThanEq :locateOreAway:distance :findDri ...
        label *label323                                              ...
  158:  op div :locateOreAway:a .angle @degToRad                     var a = angle / @degToRad;
  159:  op sin *tmp74 :locateOreAway:a 0                             var lx = limit(coreX + sin(a) * distance, 5, @mapw - 5);
  160:  op mul *tmp75 *tmp74 :locateOreAway:distance                 ...
  161:  op add *tmp76 :findDrillLocationLocal:x *tmp75               ...
  162:  op max *tmp79 *tmp76 5                                       min(max(value, low), high);
  163:  op min *tmp78 *tmp79 *tmp77                                  var lx = limit(coreX + sin(a) * distance, 5, @mapw - 5);
  164:  op cos *tmp81 :locateOreAway:a 0                             var ly = limit(coreY + cos(a) * distance, 5, @maph - 5);
  165:  op mul *tmp82 *tmp81 :locateOreAway:distance                 ...
  166:  op add *tmp83 :findDrillLocationLocal:y *tmp82               ...
  167:  op max *tmp86 *tmp83 5                                       min(max(value, low), high);
  168:  op min *tmp85 *tmp86 *tmp84                                  var ly = limit(coreY + cos(a) * distance, 5, @maph - 5);
  169:  ucontrol within *tmp78 *tmp85 5 *tmp88 0                     while !within(x, y, radius) do
  170:  jump *label55 notEqual *tmp88 false                          ...
        label *label340                                              ...
  171:  ucontrol approach *tmp78 *tmp85 4.5 0 0                      approach(x, y, radius - 0.5);
  172:  ucontrol within *tmp78 *tmp85 5 *tmp88 0                     while !within(x, y, radius) do
  173:  jump *label340 equal *tmp88 false                            ...
        label *label55                                               ...
  174:  op div *tmp91 3.8197185279121366 :locateOreAway:distance     angle += SPIRAL_WIDTH / distance;
  175:  op add .angle .angle *tmp91                                  ...
  176:  op mul .mapProgress .angle .angle                            mapProgress = angle * angle;
  177:  op mul :locateOreAway:distance 3.8197185279121366 .angle     distance = SPIRAL_WIDTH * angle;
  178:  ulocate ore core true :findDrillLocationLocal:item :locateOr if !ulocate(:ore, ore, out x, out y) then
  179:  jump *label56 notEqual *tmp94 false                          ...
  180:  set *tmp68 false                                             return false;
  181:  jump *label46 always 0 0                                     ...
        label *label56                                               if !ulocate(:ore, ore, out x, out y) then
  182:  op sub *tmp98 :locateOreAway:x :findDrillLocationLocal:x     var coreDist = max(abs(x - coreX), abs(y - coreY));
  183:  op abs *tmp99 *tmp98 0                                       ...
  184:  op sub *tmp100 :locateOreAway:y :findDrillLocationLocal:y    ...
  185:  op abs *tmp101 *tmp100 0                                     ...
  186:  op max :locateOreAway:coreDist *tmp99 *tmp101                ...
  187:  op sub *tmp103 :locateOreAway:x *tmp78                       var unitDist = len(x - lx, y - ly);
  188:  op sub *tmp104 :locateOreAway:y *tmp85                       ...
  189:  op len :locateOreAway:unitDist *tmp103 *tmp104               ...
  190:  jump *label58 lessThan :locateOreAway:coreDist 7             if coreDist >= 7 then
  191:  jump *label60 greaterThanEq :locateOreAway:unitDist :locateO if unitDist < distance then
  192:  set :visited:index 1                                         var lx, ly, index = 1;
  193:  set :visited:i 0                                             for var i in 0 ... locations do
  194:  jump *label65 greaterThanEq 0 .locations                     ...
        label *label324                                              ...
  195:  read :visited:lx bank1 :visited:index                        lx = bank1[index];
  196:  op add *tmp114 :visited:index 1                              ly = bank1[index + 1];
  197:  read :visited:ly bank1 *tmp114                               ...
  198:  op sub *tmp117 :locateOreAway:x :visited:lx                  if len(x - lx, y - ly) < 7 then
  199:  op sub *tmp118 :locateOreAway:y :visited:ly                  ...
  200:  op len *tmp119 *tmp117 *tmp118                               ...
  201:  jump *label66 greaterThanEq *tmp119 7                        ...
  202:  set *tmp110 true                                             return true;
  203:  jump *label62 always 0 0                                     ...
        label *label66                                               if len(x - lx, y - ly) < 7 then
  204:  op add :visited:index :visited:index 3                       index += 3;
  205:  op add :visited:i :visited:i 1                               for var i in 0 ... locations do
  206:  jump *label324 lessThan :visited:i .locations                ...
        label *label65                                               ...
  207:  set *tmp110 false                                            return false;
        label *label62                                               if !visited(x, y) then
  208:  jump *label68 notEqual *tmp110 false                         ...
  209:  op div *tmp124 2 .angle                                      angle += 2 * SPIRAL_WIDTH / distance;
  210:  op add .angle .angle *tmp124                                 ...
  211:  op mul .mapProgress .angle .angle                            mapProgress = angle * angle;
  212:  set *tmp68 true                                              return true;
  213:  jump *label46 always 0 0                                     ...
        label *label68                                               if !visited(x, y) then
        label *label60                                               if unitDist < distance then
        label *label58                                               if coreDist >= 7 then
  214:  jump *label323 lessThan :locateOreAway:distance :findDrillLo while distance < distanceLimit do
        label *label49                                               ...
  215:  set *tmp68 false                                             return false;
        label *label46                                               if !locateOreAway(item, in out oreX, in out oreY, in distanceLimit) then
  216:  set :findDrillLocationLocal:oreX :locateOreAway:x            ...
  217:  set :findDrillLocationLocal:oreY :locateOreAway:y            ...
  218:  jump *label70 notEqual *tmp68 false                          ...
  219:  op greaterThan :findDrillLocationLocal*retval :findDrillLoca return capacity > 0;
  220:  return :findDrillLocationLocal*retaddr                       ...
        label *label70                                               if !locateOreAway(item, in out oreX, in out oreY, in distanceLimit) then
  221:  jump *label72 lessThan :findDrillLocationLocal:limit 1000    if limit >= 1000 then mapSpots++; end;
  222:  op add .mapSpots .mapSpots 1                                 ...
        label *label72                                               ...
  223:  ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp134  while !within(x, y, radius) do
  224:  jump *label78 notEqual *tmp134 false                         ...
        label *label363                                              ...
  225:  ucontrol approach :locateOreAway:x :locateOreAway:y 5.5 0 0  approach(x, y, radius - 0.5);
  226:  ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp134  while !within(x, y, radius) do
  227:  jump *label363 equal *tmp134 false                           ...
        label *label78                                               ...
  228:  set :findDrillLocationLocal:last 0                           var last = 0;
        label *label79                                               while true do
  229:  op sub *tmp138 :findDrillLocationLocal:oreY 2                var y1 = computeRowValues(x, y - 2, ore, large);
  230:  op sub :spotValue:x :findDrillLocationLocal:oreX 2           var x1 = spotValue(x - 2, y, ore);
  231:  set :spotValue:y *tmp138                                     ...
  232:  set :spotValue:ore :findDrillLocationLocal:ore               ...
  233:  ucontrol getBlock :spotValue:x :spotValue:y type building fl mlog(in x, in y, in ore, out result) {
  234:  select value equal floor :spotValue:ore 0.00392156862745098  ...
  235:  select type equal type @boulder @air type                    ...
  236:  select :spotValue:result equal type @air value 0.06274509803 ...
  237:  op sub :spotValue.1:x :findDrillLocationLocal:oreX 1         var x2 = spotValue(x - 1, y, ore);
  238:  set :spotValue.1:y *tmp138                                   ...
  239:  set :spotValue.1:ore :findDrillLocationLocal:ore             ...
  240:  ucontrol getBlock :spotValue.1:x :spotValue.1:y type buildin mlog(in x, in y, in ore, out result) {
  241:  select value equal floor :spotValue.1:ore 0.0039215686274509 ...
  242:  select type equal type @boulder @air type                    ...
  243:  select :spotValue.1:result equal type @air value 0.062745098 ...
  244:  set :spotValue.2:x :findDrillLocationLocal:oreX              var x3 = spotValue(x + 0, y, ore);
  245:  set :spotValue.2:y *tmp138                                   ...
  246:  set :spotValue.2:ore :findDrillLocationLocal:ore             ...
  247:  ucontrol getBlock :spotValue.2:x :spotValue.2:y type buildin mlog(in x, in y, in ore, out result) {
  248:  select value equal floor :spotValue.2:ore 0.0039215686274509 ...
  249:  select type equal type @boulder @air type                    ...
  250:  select :spotValue.2:result equal type @air value 0.062745098 ...
  251:  op add :spotValue.3:x :findDrillLocationLocal:oreX 1         var x4 = spotValue(x + 1, y, ore);
  252:  set :spotValue.3:y *tmp138                                   ...
  253:  set :spotValue.3:ore :findDrillLocationLocal:ore             ...
  254:  ucontrol getBlock :spotValue.3:x :spotValue.3:y type buildin mlog(in x, in y, in ore, out result) {
  255:  select value equal floor :spotValue.3:ore 0.0039215686274509 ...
  256:  select type equal type @boulder @air type                    ...
  257:  select :spotValue.3:result equal type @air value 0.062745098 ...
  258:  op add :spotValue.4:x :findDrillLocationLocal:oreX 2         var x5 = spotValue(x + 2, y, ore);
  259:  set :spotValue.4:y *tmp138                                   ...
  260:  set :spotValue.4:ore :findDrillLocationLocal:ore             ...
  261:  ucontrol getBlock :spotValue.4:x :spotValue.4:y type buildin mlog(in x, in y, in ore, out result) {
  262:  select value equal floor :spotValue.4:ore 0.0039215686274509 ...
  263:  select type equal type @boulder @air type                    ...
  264:  select :spotValue.4:result equal type @air value 0.062745098 ...
  265:  jump *label371 equal :findDrillLocationLocal:large false     if large then
  266:  op add *tmp11 :spotValue:result :spotValue.1:result          x1 + x2 + x3,   // drill at x - 1
  267:  op add *tmp12 *tmp11 :spotValue.2:result                     ...
  268:  op add *tmp13 :spotValue.1:result :spotValue.2:result        x2 + x3 + x4,   // drill at x
  269:  op add *tmp14 *tmp13 :spotValue.3:result                     ...
  270:  op add *tmp15 :spotValue.2:result :spotValue.3:result        x3 + x4 + x5,   // drill at x + 1
  271:  op add *tmp16 *tmp15 :spotValue.4:result                     ...
  272:  packcolor :findBestPosition:y1 *tmp12 *tmp14 *tmp16 0        return packcolor(
  273:  jump *label373 always 0 0                                    ...
        label *label371                                              if large then
  274:  op add *tmp18 :spotValue:result :spotValue.1:result          x1 + x2,        // drill at x - 1.5
  275:  op add *tmp19 :spotValue.1:result :spotValue.2:result        x2 + x3,        // drill at x - 0.5
  276:  op add *tmp20 :spotValue.2:result :spotValue.3:result        x3 + x4,        // drill at x + 0.5
  277:  op add *tmp21 :spotValue.3:result :spotValue.4:result        x4 + x5         // drill at x + 1.5
  278:  packcolor :findBestPosition:y1 *tmp18 *tmp19 *tmp20 *tmp21   return packcolor(
        label *label373                                              var y1 = computeRowValues(x, y - 2, ore, large);
  279:  op sub *tmp140 :findDrillLocationLocal:oreY 1                var y2 = computeRowValues(x, y - 1, ore, large);
  280:  op sub :spotValue:x :findDrillLocationLocal:oreX 2           var x1 = spotValue(x - 2, y, ore);
  281:  set :spotValue:y *tmp140                                     ...
  282:  set :spotValue:ore :findDrillLocationLocal:ore               ...
  283:  ucontrol getBlock :spotValue:x :spotValue:y type building fl mlog(in x, in y, in ore, out result) {
  284:  select value equal floor :spotValue:ore 0.00392156862745098  ...
  285:  select type equal type @boulder @air type                    ...
  286:  select :spotValue:result equal type @air value 0.06274509803 ...
  287:  op sub :spotValue.1:x :findDrillLocationLocal:oreX 1         var x2 = spotValue(x - 1, y, ore);
  288:  set :spotValue.1:y *tmp140                                   ...
  289:  set :spotValue.1:ore :findDrillLocationLocal:ore             ...
  290:  ucontrol getBlock :spotValue.1:x :spotValue.1:y type buildin mlog(in x, in y, in ore, out result) {
  291:  select value equal floor :spotValue.1:ore 0.0039215686274509 ...
  292:  select type equal type @boulder @air type                    ...
  293:  select :spotValue.1:result equal type @air value 0.062745098 ...
  294:  set :spotValue.2:x :findDrillLocationLocal:oreX              var x3 = spotValue(x + 0, y, ore);
  295:  set :spotValue.2:y *tmp140                                   ...
  296:  set :spotValue.2:ore :findDrillLocationLocal:ore             ...
  297:  ucontrol getBlock :spotValue.2:x :spotValue.2:y type buildin mlog(in x, in y, in ore, out result) {
  298:  select value equal floor :spotValue.2:ore 0.0039215686274509 ...
  299:  select type equal type @boulder @air type                    ...
  300:  select :spotValue.2:result equal type @air value 0.062745098 ...
  301:  op add :spotValue.3:x :findDrillLocationLocal:oreX 1         var x4 = spotValue(x + 1, y, ore);
  302:  set :spotValue.3:y *tmp140                                   ...
  303:  set :spotValue.3:ore :findDrillLocationLocal:ore             ...
  304:  ucontrol getBlock :spotValue.3:x :spotValue.3:y type buildin mlog(in x, in y, in ore, out result) {
  305:  select value equal floor :spotValue.3:ore 0.0039215686274509 ...
  306:  select type equal type @boulder @air type                    ...
  307:  select :spotValue.3:result equal type @air value 0.062745098 ...
  308:  op add :spotValue.4:x :findDrillLocationLocal:oreX 2         var x5 = spotValue(x + 2, y, ore);
  309:  set :spotValue.4:y *tmp140                                   ...
  310:  set :spotValue.4:ore :findDrillLocationLocal:ore             ...
  311:  ucontrol getBlock :spotValue.4:x :spotValue.4:y type buildin mlog(in x, in y, in ore, out result) {
  312:  select value equal floor :spotValue.4:ore 0.0039215686274509 ...
  313:  select type equal type @boulder @air type                    ...
  314:  select :spotValue.4:result equal type @air value 0.062745098 ...
  315:  jump *label380 equal :findDrillLocationLocal:large false     if large then
  316:  op add *tmp11 :spotValue:result :spotValue.1:result          x1 + x2 + x3,   // drill at x - 1
  317:  op add *tmp12 *tmp11 :spotValue.2:result                     ...
  318:  op add *tmp13 :spotValue.1:result :spotValue.2:result        x2 + x3 + x4,   // drill at x
  319:  op add *tmp14 *tmp13 :spotValue.3:result                     ...
  320:  op add *tmp15 :spotValue.2:result :spotValue.3:result        x3 + x4 + x5,   // drill at x + 1
  321:  op add *tmp16 *tmp15 :spotValue.4:result                     ...
  322:  packcolor :findBestPosition:y2 *tmp12 *tmp14 *tmp16 0        return packcolor(
  323:  jump *label382 always 0 0                                    ...
        label *label380                                              if large then
  324:  op add *tmp18 :spotValue:result :spotValue.1:result          x1 + x2,        // drill at x - 1.5
  325:  op add *tmp19 :spotValue.1:result :spotValue.2:result        x2 + x3,        // drill at x - 0.5
  326:  op add *tmp20 :spotValue.2:result :spotValue.3:result        x3 + x4,        // drill at x + 0.5
  327:  op add *tmp21 :spotValue.3:result :spotValue.4:result        x4 + x5         // drill at x + 1.5
  328:  packcolor :findBestPosition:y2 *tmp18 *tmp19 *tmp20 *tmp21   return packcolor(
        label *label382                                              var y2 = computeRowValues(x, y - 1, ore, large);
  329:  op sub :spotValue:x :findDrillLocationLocal:oreX 2           var x1 = spotValue(x - 2, y, ore);
  330:  set :spotValue:y :findDrillLocationLocal:oreY                ...
  331:  set :spotValue:ore :findDrillLocationLocal:ore               ...
  332:  ucontrol getBlock :spotValue:x :spotValue:y type building fl mlog(in x, in y, in ore, out result) {
  333:  select value equal floor :spotValue:ore 0.00392156862745098  ...
  334:  select type equal type @boulder @air type                    ...
  335:  select :spotValue:result equal type @air value 0.06274509803 ...
  336:  op sub :spotValue.1:x :findDrillLocationLocal:oreX 1         var x2 = spotValue(x - 1, y, ore);
  337:  set :spotValue.1:y :findDrillLocationLocal:oreY              ...
  338:  set :spotValue.1:ore :findDrillLocationLocal:ore             ...
  339:  ucontrol getBlock :spotValue.1:x :spotValue.1:y type buildin mlog(in x, in y, in ore, out result) {
  340:  select value equal floor :spotValue.1:ore 0.0039215686274509 ...
  341:  select type equal type @boulder @air type                    ...
  342:  select :spotValue.1:result equal type @air value 0.062745098 ...
  343:  set :spotValue.2:x :findDrillLocationLocal:oreX              var x3 = spotValue(x + 0, y, ore);
  344:  set :spotValue.2:y :findDrillLocationLocal:oreY              ...
  345:  set :spotValue.2:ore :findDrillLocationLocal:ore             ...
  346:  ucontrol getBlock :spotValue.2:x :spotValue.2:y type buildin mlog(in x, in y, in ore, out result) {
  347:  select value equal floor :spotValue.2:ore 0.0039215686274509 ...
  348:  select type equal type @boulder @air type                    ...
  349:  select :spotValue.2:result equal type @air value 0.062745098 ...
  350:  op add :spotValue.3:x :findDrillLocationLocal:oreX 1         var x4 = spotValue(x + 1, y, ore);
  351:  set :spotValue.3:y :findDrillLocationLocal:oreY              ...
  352:  set :spotValue.3:ore :findDrillLocationLocal:ore             ...
  353:  ucontrol getBlock :spotValue.3:x :spotValue.3:y type buildin mlog(in x, in y, in ore, out result) {
  354:  select value equal floor :spotValue.3:ore 0.0039215686274509 ...
  355:  select type equal type @boulder @air type                    ...
  356:  select :spotValue.3:result equal type @air value 0.062745098 ...
  357:  op add :spotValue.4:x :findDrillLocationLocal:oreX 2         var x5 = spotValue(x + 2, y, ore);
  358:  set :spotValue.4:y :findDrillLocationLocal:oreY              ...
  359:  set :spotValue.4:ore :findDrillLocationLocal:ore             ...
  360:  ucontrol getBlock :spotValue.4:x :spotValue.4:y type buildin mlog(in x, in y, in ore, out result) {
  361:  select value equal floor :spotValue.4:ore 0.0039215686274509 ...
  362:  select type equal type @boulder @air type                    ...
  363:  select :spotValue.4:result equal type @air value 0.062745098 ...
  364:  jump *label389 equal :findDrillLocationLocal:large false     if large then
  365:  op add *tmp11 :spotValue:result :spotValue.1:result          x1 + x2 + x3,   // drill at x - 1
  366:  op add *tmp12 *tmp11 :spotValue.2:result                     ...
  367:  op add *tmp13 :spotValue.1:result :spotValue.2:result        x2 + x3 + x4,   // drill at x
  368:  op add *tmp14 *tmp13 :spotValue.3:result                     ...
  369:  op add *tmp15 :spotValue.2:result :spotValue.3:result        x3 + x4 + x5,   // drill at x + 1
  370:  op add *tmp16 *tmp15 :spotValue.4:result                     ...
  371:  packcolor :findBestPosition:y3 *tmp12 *tmp14 *tmp16 0        return packcolor(
  372:  jump *label391 always 0 0                                    ...
        label *label389                                              if large then
  373:  op add *tmp18 :spotValue:result :spotValue.1:result          x1 + x2,        // drill at x - 1.5
  374:  op add *tmp19 :spotValue.1:result :spotValue.2:result        x2 + x3,        // drill at x - 0.5
  375:  op add *tmp20 :spotValue.2:result :spotValue.3:result        x3 + x4,        // drill at x + 0.5
  376:  op add *tmp21 :spotValue.3:result :spotValue.4:result        x4 + x5         // drill at x + 1.5
  377:  packcolor :findBestPosition:y3 *tmp18 *tmp19 *tmp20 *tmp21   return packcolor(
        label *label391                                              var y3 = computeRowValues(x, y + 0, ore, large);
  378:  op add *tmp144 :findDrillLocationLocal:oreY 1                var y4 = computeRowValues(x, y + 1, ore, large);
  379:  op sub :spotValue:x :findDrillLocationLocal:oreX 2           var x1 = spotValue(x - 2, y, ore);
  380:  set :spotValue:y *tmp144                                     ...
  381:  set :spotValue:ore :findDrillLocationLocal:ore               ...
  382:  ucontrol getBlock :spotValue:x :spotValue:y type building fl mlog(in x, in y, in ore, out result) {
  383:  select value equal floor :spotValue:ore 0.00392156862745098  ...
  384:  select type equal type @boulder @air type                    ...
  385:  select :spotValue:result equal type @air value 0.06274509803 ...
  386:  op sub :spotValue.1:x :findDrillLocationLocal:oreX 1         var x2 = spotValue(x - 1, y, ore);
  387:  set :spotValue.1:y *tmp144                                   ...
  388:  set :spotValue.1:ore :findDrillLocationLocal:ore             ...
  389:  ucontrol getBlock :spotValue.1:x :spotValue.1:y type buildin mlog(in x, in y, in ore, out result) {
  390:  select value equal floor :spotValue.1:ore 0.0039215686274509 ...
  391:  select type equal type @boulder @air type                    ...
  392:  select :spotValue.1:result equal type @air value 0.062745098 ...
  393:  set :spotValue.2:x :findDrillLocationLocal:oreX              var x3 = spotValue(x + 0, y, ore);
  394:  set :spotValue.2:y *tmp144                                   ...
  395:  set :spotValue.2:ore :findDrillLocationLocal:ore             ...
  396:  ucontrol getBlock :spotValue.2:x :spotValue.2:y type buildin mlog(in x, in y, in ore, out result) {
  397:  select value equal floor :spotValue.2:ore 0.0039215686274509 ...
  398:  select type equal type @boulder @air type                    ...
  399:  select :spotValue.2:result equal type @air value 0.062745098 ...
  400:  op add :spotValue.3:x :findDrillLocationLocal:oreX 1         var x4 = spotValue(x + 1, y, ore);
  401:  set :spotValue.3:y *tmp144                                   ...
  402:  set :spotValue.3:ore :findDrillLocationLocal:ore             ...
  403:  ucontrol getBlock :spotValue.3:x :spotValue.3:y type buildin mlog(in x, in y, in ore, out result) {
  404:  select value equal floor :spotValue.3:ore 0.0039215686274509 ...
  405:  select type equal type @boulder @air type                    ...
  406:  select :spotValue.3:result equal type @air value 0.062745098 ...
  407:  op add :spotValue.4:x :findDrillLocationLocal:oreX 2         var x5 = spotValue(x + 2, y, ore);
  408:  set :spotValue.4:y *tmp144                                   ...
  409:  set :spotValue.4:ore :findDrillLocationLocal:ore             ...
  410:  ucontrol getBlock :spotValue.4:x :spotValue.4:y type buildin mlog(in x, in y, in ore, out result) {
  411:  select value equal floor :spotValue.4:ore 0.0039215686274509 ...
  412:  select type equal type @boulder @air type                    ...
  413:  select :spotValue.4:result equal type @air value 0.062745098 ...
  414:  jump *label398 equal :findDrillLocationLocal:large false     if large then
  415:  op add *tmp11 :spotValue:result :spotValue.1:result          x1 + x2 + x3,   // drill at x - 1
  416:  op add *tmp12 *tmp11 :spotValue.2:result                     ...
  417:  op add *tmp13 :spotValue.1:result :spotValue.2:result        x2 + x3 + x4,   // drill at x
  418:  op add *tmp14 *tmp13 :spotValue.3:result                     ...
  419:  op add *tmp15 :spotValue.2:result :spotValue.3:result        x3 + x4 + x5,   // drill at x + 1
  420:  op add *tmp16 *tmp15 :spotValue.4:result                     ...
  421:  packcolor :findBestPosition:y4 *tmp12 *tmp14 *tmp16 0        return packcolor(
  422:  jump *label400 always 0 0                                    ...
        label *label398                                              if large then
  423:  op add *tmp18 :spotValue:result :spotValue.1:result          x1 + x2,        // drill at x - 1.5
  424:  op add *tmp19 :spotValue.1:result :spotValue.2:result        x2 + x3,        // drill at x - 0.5
  425:  op add *tmp20 :spotValue.2:result :spotValue.3:result        x3 + x4,        // drill at x + 0.5
  426:  op add *tmp21 :spotValue.3:result :spotValue.4:result        x4 + x5         // drill at x + 1.5
  427:  packcolor :findBestPosition:y4 *tmp18 *tmp19 *tmp20 *tmp21   return packcolor(
        label *label400                                              var y4 = computeRowValues(x, y + 1, ore, large);
  428:  op add *tmp146 :findDrillLocationLocal:oreY 2                var y5 = computeRowValues(x, y + 2, ore, large);
  429:  op sub :spotValue:x :findDrillLocationLocal:oreX 2           var x1 = spotValue(x - 2, y, ore);
  430:  set :spotValue:y *tmp146                                     ...
  431:  set :spotValue:ore :findDrillLocationLocal:ore               ...
  432:  ucontrol getBlock :spotValue:x :spotValue:y type building fl mlog(in x, in y, in ore, out result) {
  433:  select value equal floor :spotValue:ore 0.00392156862745098  ...
  434:  select type equal type @boulder @air type                    ...
  435:  select :spotValue:result equal type @air value 0.06274509803 ...
  436:  op sub :spotValue.1:x :findDrillLocationLocal:oreX 1         var x2 = spotValue(x - 1, y, ore);
  437:  set :spotValue.1:y *tmp146                                   ...
  438:  set :spotValue.1:ore :findDrillLocationLocal:ore             ...
  439:  ucontrol getBlock :spotValue.1:x :spotValue.1:y type buildin mlog(in x, in y, in ore, out result) {
  440:  select value equal floor :spotValue.1:ore 0.0039215686274509 ...
  441:  select type equal type @boulder @air type                    ...
  442:  select :spotValue.1:result equal type @air value 0.062745098 ...
  443:  set :spotValue.2:x :findDrillLocationLocal:oreX              var x3 = spotValue(x + 0, y, ore);
  444:  set :spotValue.2:y *tmp146                                   ...
  445:  set :spotValue.2:ore :findDrillLocationLocal:ore             ...
  446:  ucontrol getBlock :spotValue.2:x :spotValue.2:y type buildin mlog(in x, in y, in ore, out result) {
  447:  select value equal floor :spotValue.2:ore 0.0039215686274509 ...
  448:  select type equal type @boulder @air type                    ...
  449:  select :spotValue.2:result equal type @air value 0.062745098 ...
  450:  op add :spotValue.3:x :findDrillLocationLocal:oreX 1         var x4 = spotValue(x + 1, y, ore);
  451:  set :spotValue.3:y *tmp146                                   ...
  452:  set :spotValue.3:ore :findDrillLocationLocal:ore             ...
  453:  ucontrol getBlock :spotValue.3:x :spotValue.3:y type buildin mlog(in x, in y, in ore, out result) {
  454:  select value equal floor :spotValue.3:ore 0.0039215686274509 ...
  455:  select type equal type @boulder @air type                    ...
  456:  select :spotValue.3:result equal type @air value 0.062745098 ...
  457:  op add :spotValue.4:x :findDrillLocationLocal:oreX 2         var x5 = spotValue(x + 2, y, ore);
  458:  set :spotValue.4:y *tmp146                                   ...
  459:  set :spotValue.4:ore :findDrillLocationLocal:ore             ...
  460:  ucontrol getBlock :spotValue.4:x :spotValue.4:y type buildin mlog(in x, in y, in ore, out result) {
  461:  select value equal floor :spotValue.4:ore 0.0039215686274509 ...
  462:  select type equal type @boulder @air type                    ...
  463:  select :spotValue.4:result equal type @air value 0.062745098 ...
  464:  jump *label407 equal :findDrillLocationLocal:large false     if large then
  465:  op add *tmp11 :spotValue:result :spotValue.1:result          x1 + x2 + x3,   // drill at x - 1
  466:  op add *tmp12 *tmp11 :spotValue.2:result                     ...
  467:  op add *tmp13 :spotValue.1:result :spotValue.2:result        x2 + x3 + x4,   // drill at x
  468:  op add *tmp14 *tmp13 :spotValue.3:result                     ...
  469:  op add *tmp15 :spotValue.2:result :spotValue.3:result        x3 + x4 + x5,   // drill at x + 1
  470:  op add *tmp16 *tmp15 :spotValue.4:result                     ...
  471:  packcolor :computeRowValues*retval *tmp12 *tmp14 *tmp16 0    return packcolor(
  472:  jump *label409 always 0 0                                    ...
        label *label407                                              if large then
  473:  op add *tmp18 :spotValue:result :spotValue.1:result          x1 + x2,        // drill at x - 1.5
  474:  op add *tmp19 :spotValue.1:result :spotValue.2:result        x2 + x3,        // drill at x - 0.5
  475:  op add *tmp20 :spotValue.2:result :spotValue.3:result        x3 + x4,        // drill at x + 0.5
  476:  op add *tmp21 :spotValue.3:result :spotValue.4:result        x4 + x5         // drill at x + 1.5
  477:  packcolor :computeRowValues*retval *tmp18 *tmp19 *tmp20 *tmp return packcolor(
        label *label409                                              var y5 = computeRowValues(x, y + 2, ore, large);
  478:  set :findBestPosition:best 0                                 var best = 0;
  479:  set :findDrillLocationLocal:diffX 0                          bestX = 0;
  480:  set :findDrillLocationLocal:diffY 0                          bestY = 0;
  481:  jump *label88 equal :findDrillLocationLocal:large false      if large then
  482:  op add *tmp149 :findBestPosition:y1 :findBestPosition:y2     var row1 = y1 + y2 + y3;    // drill at y - 1
  483:  op add :findBestPosition:row1 *tmp149 :findBestPosition:y3   ...
  484:  op add *tmp151 :findBestPosition:y2 :findBestPosition:y3     var row2 = y2 + y3 + y4;    // drill at y
  485:  op add :findBestPosition:row2 *tmp151 :findBestPosition:y4   ...
  486:  op add *tmp153 :findBestPosition:y3 :findBestPosition:y4     var row3 = y3 + y4 + y5;    // drill at y + 1
  487:  op add :findBestPosition:row3 *tmp153 :computeRowValues*retv ...
  488:  unpackcolor :updateRowPositions3:col1 :updateRowPositions3:c unpackcolor(out col1, out col2, out col3, , row);
  489:  jump *label92 greaterThanEq :updateRowPositions3:col1 0.0392 if value < LIMIT then
  490:  jump *label94 lessThanEq :updateRowPositions3:col1 0         if value > best then
  491:  set :findDrillLocationLocal:diffX -1                         bestX = dx;
  492:  set :findDrillLocationLocal:diffY -1                         bestY = dy;
  493:  set :findBestPosition:best :updateRowPositions3:col1         best = value;
        label *label94                                               if value > best then
        label *label92                                               if value < LIMIT then
  494:  jump *label97 greaterThanEq :updateRowPositions3:col2 0.0392 ...
  495:  jump *label99 lessThanEq :updateRowPositions3:col2 :findBest if value > best then
  496:  set :findDrillLocationLocal:diffX 0                          bestX = dx;
  497:  set :findDrillLocationLocal:diffY -1                         bestY = dy;
  498:  set :findBestPosition:best :updateRowPositions3:col2         best = value;
        label *label99                                               if value > best then
        label *label97                                               if value < LIMIT then
  499:  jump *label102 greaterThanEq :updateRowPositions3:col3 0.039 ...
  500:  jump *label104 lessThanEq :updateRowPositions3:col3 :findBes if value > best then
  501:  set :findDrillLocationLocal:diffX 1                          bestX = dx;
  502:  set :findDrillLocationLocal:diffY -1                         bestY = dy;
  503:  set :findBestPosition:best :updateRowPositions3:col3         best = value;
        label *label104                                              if value > best then
        label *label102                                              if value < LIMIT then
  504:  unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3 unpackcolor(out col1, out col2, out col3, , row);
  505:  jump *label108 greaterThanEq :updateRowPositions3.1:col1 0.0 if value < LIMIT then
  506:  jump *label110 lessThanEq :updateRowPositions3.1:col1 :findB if value > best then
  507:  set :findDrillLocationLocal:diffX -1                         bestX = dx;
  508:  set :findDrillLocationLocal:diffY 0                          bestY = dy;
  509:  set :findBestPosition:best :updateRowPositions3.1:col1       best = value;
        label *label110                                              if value > best then
        label *label108                                              if value < LIMIT then
  510:  jump *label113 greaterThanEq :updateRowPositions3.1:col2 0.0 ...
  511:  jump *label115 lessThanEq :updateRowPositions3.1:col2 :findB if value > best then
  512:  set :findDrillLocationLocal:diffX 0                          bestX = dx;
  513:  set :findDrillLocationLocal:diffY 0                          bestY = dy;
  514:  set :findBestPosition:best :updateRowPositions3.1:col2       best = value;
        label *label115                                              if value > best then
        label *label113                                              if value < LIMIT then
  515:  jump *label118 greaterThanEq :updateRowPositions3.1:col3 0.0 ...
  516:  jump *label120 lessThanEq :updateRowPositions3.1:col3 :findB if value > best then
  517:  set :findDrillLocationLocal:diffX 1                          bestX = dx;
  518:  set :findDrillLocationLocal:diffY 0                          bestY = dy;
  519:  set :findBestPosition:best :updateRowPositions3.1:col3       best = value;
        label *label120                                              if value > best then
        label *label118                                              if value < LIMIT then
  520:  unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3 unpackcolor(out col1, out col2, out col3, , row);
  521:  jump *label124 greaterThanEq :updateRowPositions3.2:col1 0.0 if value < LIMIT then
  522:  jump *label126 lessThanEq :updateRowPositions3.2:col1 :findB if value > best then
  523:  set :findDrillLocationLocal:diffX -1                         bestX = dx;
  524:  set :findDrillLocationLocal:diffY 1                          bestY = dy;
  525:  set :findBestPosition:best :updateRowPositions3.2:col1       best = value;
        label *label126                                              if value > best then
        label *label124                                              if value < LIMIT then
  526:  jump *label129 greaterThanEq :updateRowPositions3.2:col2 0.0 ...
  527:  jump *label131 lessThanEq :updateRowPositions3.2:col2 :findB if value > best then
  528:  set :findDrillLocationLocal:diffX 0                          bestX = dx;
  529:  set :findDrillLocationLocal:diffY 1                          bestY = dy;
  530:  set :findBestPosition:best :updateRowPositions3.2:col2       best = value;
        label *label131                                              if value > best then
        label *label129                                              if value < LIMIT then
  531:  jump *label89 greaterThanEq :updateRowPositions3.2:col3 0.03 ...
  532:  jump *label89 lessThanEq :updateRowPositions3.2:col3 :findBe if value > best then
  533:  set :findDrillLocationLocal:diffX 1                          bestX = dx;
  534:  set :findDrillLocationLocal:diffY 1                          bestY = dy;
  535:  set :findBestPosition:best :updateRowPositions3.2:col3       best = value;
  536:  jump *label89 always 0 0                                     if large then
        label *label88                                               ...
  537:  op add :findBestPosition:row1.1 :findBestPosition:y1 :findBe var row1 = y1 + y2;         // drill at y - 1.5
  538:  op add :findBestPosition:row2.1 :findBestPosition:y2 :findBe var row2 = y2 + y3;         // drill at y - 0.5
  539:  op add :findBestPosition:row3.1 :findBestPosition:y3 :findBe var row3 = y3 + y4;         // drill at y + 0.5
  540:  op add :findBestPosition:row4 :findBestPosition:y4 :computeR var row4 = y4 + y5;         // drill at y + 1.5
  541:  unpackcolor :updateRowPositions4:col1 :updateRowPositions4:c unpackcolor(out col1, out col2, out col3, out col4, row);
  542:  jump *label140 greaterThanEq :updateRowPositions4:col1 0.039 if value < LIMIT then
  543:  jump *label142 lessThanEq :updateRowPositions4:col1 0        if value > best then
  544:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  545:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  546:  set :findBestPosition:best :updateRowPositions4:col1         best = value;
        label *label142                                              if value > best then
        label *label140                                              if value < LIMIT then
  547:  jump *label145 greaterThanEq :updateRowPositions4:col2 0.039 ...
  548:  jump *label147 lessThanEq :updateRowPositions4:col2 :findBes if value > best then
  549:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  550:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  551:  set :findBestPosition:best :updateRowPositions4:col2         best = value;
        label *label147                                              if value > best then
        label *label145                                              if value < LIMIT then
  552:  jump *label150 greaterThanEq :updateRowPositions4:col3 0.039 ...
  553:  jump *label152 lessThanEq :updateRowPositions4:col3 :findBes if value > best then
  554:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  555:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  556:  set :findBestPosition:best :updateRowPositions4:col3         best = value;
        label *label152                                              if value > best then
        label *label150                                              if value < LIMIT then
  557:  jump *label155 greaterThanEq :updateRowPositions4:col4 0.039 ...
  558:  jump *label157 lessThanEq :updateRowPositions4:col4 :findBes if value > best then
  559:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  560:  set :findDrillLocationLocal:diffY -1.5                       bestY = dy;
  561:  set :findBestPosition:best :updateRowPositions4:col4         best = value;
        label *label157                                              if value > best then
        label *label155                                              if value < LIMIT then
  562:  unpackcolor :updateRowPositions4.1:col1 :updateRowPositions4 unpackcolor(out col1, out col2, out col3, out col4, row);
  563:  jump *label161 greaterThanEq :updateRowPositions4.1:col1 0.0 if value < LIMIT then
  564:  jump *label163 lessThanEq :updateRowPositions4.1:col1 :findB if value > best then
  565:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  566:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  567:  set :findBestPosition:best :updateRowPositions4.1:col1       best = value;
        label *label163                                              if value > best then
        label *label161                                              if value < LIMIT then
  568:  jump *label166 greaterThanEq :updateRowPositions4.1:col2 0.0 ...
  569:  jump *label168 lessThanEq :updateRowPositions4.1:col2 :findB if value > best then
  570:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  571:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  572:  set :findBestPosition:best :updateRowPositions4.1:col2       best = value;
        label *label168                                              if value > best then
        label *label166                                              if value < LIMIT then
  573:  jump *label171 greaterThanEq :updateRowPositions4.1:col3 0.0 ...
  574:  jump *label173 lessThanEq :updateRowPositions4.1:col3 :findB if value > best then
  575:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  576:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  577:  set :findBestPosition:best :updateRowPositions4.1:col3       best = value;
        label *label173                                              if value > best then
        label *label171                                              if value < LIMIT then
  578:  jump *label176 greaterThanEq :updateRowPositions4.1:col4 0.0 ...
  579:  jump *label178 lessThanEq :updateRowPositions4.1:col4 :findB if value > best then
  580:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  581:  set :findDrillLocationLocal:diffY -0.5                       bestY = dy;
  582:  set :findBestPosition:best :updateRowPositions4.1:col4       best = value;
        label *label178                                              if value > best then
        label *label176                                              if value < LIMIT then
  583:  unpackcolor :updateRowPositions4.2:col1 :updateRowPositions4 unpackcolor(out col1, out col2, out col3, out col4, row);
  584:  jump *label182 greaterThanEq :updateRowPositions4.2:col1 0.0 if value < LIMIT then
  585:  jump *label184 lessThanEq :updateRowPositions4.2:col1 :findB if value > best then
  586:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  587:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  588:  set :findBestPosition:best :updateRowPositions4.2:col1       best = value;
        label *label184                                              if value > best then
        label *label182                                              if value < LIMIT then
  589:  jump *label187 greaterThanEq :updateRowPositions4.2:col2 0.0 ...
  590:  jump *label189 lessThanEq :updateRowPositions4.2:col2 :findB if value > best then
  591:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  592:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  593:  set :findBestPosition:best :updateRowPositions4.2:col2       best = value;
        label *label189                                              if value > best then
        label *label187                                              if value < LIMIT then
  594:  jump *label192 greaterThanEq :updateRowPositions4.2:col3 0.0 ...
  595:  jump *label194 lessThanEq :updateRowPositions4.2:col3 :findB if value > best then
  596:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  597:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  598:  set :findBestPosition:best :updateRowPositions4.2:col3       best = value;
        label *label194                                              if value > best then
        label *label192                                              if value < LIMIT then
  599:  jump *label197 greaterThanEq :updateRowPositions4.2:col4 0.0 ...
  600:  jump *label199 lessThanEq :updateRowPositions4.2:col4 :findB if value > best then
  601:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  602:  set :findDrillLocationLocal:diffY 0.5                        bestY = dy;
  603:  set :findBestPosition:best :updateRowPositions4.2:col4       best = value;
        label *label199                                              if value > best then
        label *label197                                              if value < LIMIT then
  604:  unpackcolor :updateRowPositions4.3:col1 :updateRowPositions4 unpackcolor(out col1, out col2, out col3, out col4, row);
  605:  jump *label203 greaterThanEq :updateRowPositions4.3:col1 0.0 if value < LIMIT then
  606:  jump *label205 lessThanEq :updateRowPositions4.3:col1 :findB if value > best then
  607:  set :findDrillLocationLocal:diffX -1.5                       bestX = dx;
  608:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  609:  set :findBestPosition:best :updateRowPositions4.3:col1       best = value;
        label *label205                                              if value > best then
        label *label203                                              if value < LIMIT then
  610:  jump *label208 greaterThanEq :updateRowPositions4.3:col2 0.0 ...
  611:  jump *label210 lessThanEq :updateRowPositions4.3:col2 :findB if value > best then
  612:  set :findDrillLocationLocal:diffX -0.5                       bestX = dx;
  613:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  614:  set :findBestPosition:best :updateRowPositions4.3:col2       best = value;
        label *label210                                              if value > best then
        label *label208                                              if value < LIMIT then
  615:  jump *label213 greaterThanEq :updateRowPositions4.3:col3 0.0 ...
  616:  jump *label215 lessThanEq :updateRowPositions4.3:col3 :findB if value > best then
  617:  set :findDrillLocationLocal:diffX 0.5                        bestX = dx;
  618:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  619:  set :findBestPosition:best :updateRowPositions4.3:col3       best = value;
        label *label215                                              if value > best then
        label *label213                                              if value < LIMIT then
  620:  jump *label218 greaterThanEq :updateRowPositions4.3:col4 0.0 ...
  621:  jump *label220 lessThanEq :updateRowPositions4.3:col4 :findB if value > best then
  622:  set :findDrillLocationLocal:diffX 1.5                        bestX = dx;
  623:  set :findDrillLocationLocal:diffY 1.5                        bestY = dy;
  624:  set :findBestPosition:best :updateRowPositions4.3:col4       best = value;
        label *label220                                              if value > best then
        label *label218                                              if value < LIMIT then
        label *label89                                               if large then
  625:  op mul *tmp137 :findBestPosition:best 255                    return best * 255;
  626:  jump *label222 lessThanEq *tmp137 :findDrillLocationLocal:ca if score > capacity then
  627:  op add :findDrillLocationLocal:dx :findDrillLocationLocal:or dx = oreX + diffX;
  628:  op add :findDrillLocationLocal:dy :findDrillLocationLocal:or dy = oreY + diffY;
  629:  set :findDrillLocationLocal:capacity *tmp137                 capacity = score;
  630:  jump *label224 greaterThanEq :findDrillLocationLocal:limit 1 if limit < 1000 then mapSpots = score; end;
  631:  set .mapSpots *tmp137                                        ...
        label *label224                                              ...
  632:  jump *label226 lessThan :findDrillLocationLocal:capacity :fi if capacity >= limit then
  633:  ucontrol unbind 0 0 0 0 0                                    unbind();
  634:  set :findDrillLocationLocal*retval true                      return true;
  635:  return :findDrillLocationLocal*retaddr                       ...
        label *label226                                              if capacity >= limit then
        label *label222                                              if score > capacity then
  636:  jump *label228 lessThanEq *tmp137 :findDrillLocationLocal:be if score > best then
  637:  op add :findDrillLocationLocal:bestX :findDrillLocationLocal bestX = oreX + diffX;
  638:  op add :findDrillLocationLocal:bestY :findDrillLocationLocal bestY = oreY + diffY;
  639:  set :findDrillLocationLocal:best *tmp137                     best = score;
        label *label228                                              if score > best then
  640:  jump *label81 lessThanEq *tmp137 :findDrillLocationLocal:las if score <= last then break; end;
  641:  set :findDrillLocationLocal:last *tmp137                     last = score;
  642:  op mul :round:x :findDrillLocationLocal:diffX 1.1            oreX += round(diffX * 1.1);    // Rounds halves to higher absolute values
  643:  op add *tmp279 :round:x 0.5                                  *math: floor(x + 0.5);
  644:  op floor *tmp278 *tmp279 0                                   oreX += round(diffX * 1.1);    // Rounds halves to higher absolute values
  645:  op add :findDrillLocationLocal:oreX :findDrillLocationLocal: ...
  646:  op mul :round.1:x :findDrillLocationLocal:diffY 1.1          oreY += round(diffY * 1.1);
  647:  op add *tmp283 :round.1:x 0.5                                *math: floor(x + 0.5);
  648:  op floor *tmp282 *tmp283 0                                   oreY += round(diffY * 1.1);
  649:  op add :findDrillLocationLocal:oreY :findDrillLocationLocal: ...
  650:  op sub *tmp285 :findDrillLocationLocal:oreX :findDrillLocati if min(abs(oreX - coreX), abs(oreY - coreY)) < 7 then break; end;
  651:  op abs *tmp286 *tmp285 0                                     ...
  652:  op sub *tmp287 :findDrillLocationLocal:oreY :findDrillLocati ...
  653:  op abs *tmp288 *tmp287 0                                     ...
  654:  op min *tmp289 *tmp286 *tmp288                               ...
  655:  jump *label79 greaterThanEq *tmp289 7                        ...
        label *label81                                               while true do
  656:  op add :findDrillLocationLocal:count :findDrillLocationLocal bank1[++count] = best;
  657:  write :findDrillLocationLocal:best bank1 :findDrillLocationL ...
  658:  op add :findDrillLocationLocal:count :findDrillLocationLocal bank1[++count] = bestX;
  659:  write :findDrillLocationLocal:bestX bank1 :findDrillLocation ...
  660:  op add :findDrillLocationLocal:count :findDrillLocationLocal bank1[++count] = bestY;
  661:  write :findDrillLocationLocal:bestY bank1 :findDrillLocation ...
  662:  op add .locations .locations 1                               while true do
  663:  jump *label43 always 0 0                                     ...
        label *label0                                                remote def findDrillLocation(x, y, unit, item, ore, large, limit, out dx, out dy, out capacity)
  664:  set :findDrillLocationLocal:x :findDrillLocation:x           findDrillLocationLocal(x, y, unit, item, ore, large, limit, out dx, out dy, out capacity);
  665:  set :findDrillLocationLocal:y :findDrillLocation:y           ...
  666:  set :findDrillLocationLocal:unit :findDrillLocation:unit     ...
  667:  set :findDrillLocationLocal:item :findDrillLocation:item     ...
  668:  set :findDrillLocationLocal:ore :findDrillLocation:ore       ...
  669:  set :findDrillLocationLocal:large :findDrillLocation:large   ...
  670:  set :findDrillLocationLocal:limit :findDrillLocation:limit   ...
  671:  setaddr :findDrillLocationLocal*retaddr *label242            ...
  672:  call *label8 *invalid :findDrillLocationLocal*retval         ...
        label *label242                                              ...
  673:  set :findDrillLocation:dx :findDrillLocationLocal:dx         ...
  674:  set :findDrillLocation:dy :findDrillLocationLocal:dy         ...
  675:  set :findDrillLocation:capacity :findDrillLocationLocal:capa ...
  676:  set :findDrillLocation*retval :findDrillLocationLocal*retval remote def findDrillLocation(x, y, unit, item, ore, large, limit, out dx, out dy, out capacity)
  677:  set :findDrillLocation*finished true                         ...
  678:  jump *label14 always 0 0                                     ...
        label *label9                                                noinline def createTerrainMask(x, y)
  679:  ucontrol within :createTerrainMask:x :createTerrainMask:y 6  while !within(x, y, radius) do
  680:  jump *label248 notEqual *tmp312 false                        ...
        label *label364                                              ...
  681:  ucontrol approach :createTerrainMask:x :createTerrainMask:y  approach(x, y, radius - 0.5);
  682:  ucontrol within :createTerrainMask:x :createTerrainMask:y 6  while !within(x, y, radius) do
  683:  jump *label364 equal *tmp312 false                           ...
        label *label248                                              ...
  684:  set :createTerrainMask:result 0                              var result = 0;
  685:  set :createTerrainMask:r 3                                   for var r in -3 .. 3 descending do
        label *label325                                              ...
  686:  op add *tmp317 :createTerrainMask:y :createTerrainMask:r     for var c in -3 .. 3 descending do
  687:  op shl *tmp315 :createTerrainMask:result 1                   result = (result << 1) | isBlocked(x + c, y + r);
  688:  op add :isBlocked:x :createTerrainMask:x 3                   ...
  689:  set :isBlocked:y *tmp317                                     ...
  690:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  691:  select type equal type @boulder @air type                    ...
  692:  select :isBlocked:result equal type @air 0 1                 ...
  693:  op or :createTerrainMask:result *tmp315 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  694:  op shl *tmp315 :createTerrainMask:result 1                   ...
  695:  op add :isBlocked:x :createTerrainMask:x 2                   ...
  696:  set :isBlocked:y *tmp317                                     ...
  697:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  698:  select type equal type @boulder @air type                    ...
  699:  select :isBlocked:result equal type @air 0 1                 ...
  700:  op or :createTerrainMask:result *tmp315 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  701:  op shl *tmp315 :createTerrainMask:result 1                   ...
  702:  op add :isBlocked:x :createTerrainMask:x 1                   ...
  703:  set :isBlocked:y *tmp317                                     ...
  704:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  705:  select type equal type @boulder @air type                    ...
  706:  select :isBlocked:result equal type @air 0 1                 ...
  707:  op or :createTerrainMask:result *tmp315 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  708:  op shl *tmp315 :createTerrainMask:result 1                   ...
  709:  set :isBlocked:x :createTerrainMask:x                        ...
  710:  set :isBlocked:y *tmp317                                     ...
  711:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  712:  select type equal type @boulder @air type                    ...
  713:  select :isBlocked:result equal type @air 0 1                 ...
  714:  op or :createTerrainMask:result *tmp315 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  715:  op shl *tmp315 :createTerrainMask:result 1                   ...
  716:  op add :isBlocked:x :createTerrainMask:x -1                  ...
  717:  set :isBlocked:y *tmp317                                     ...
  718:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  719:  select type equal type @boulder @air type                    ...
  720:  select :isBlocked:result equal type @air 0 1                 ...
  721:  op or :createTerrainMask:result *tmp315 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  722:  op shl *tmp315 :createTerrainMask:result 1                   ...
  723:  op add :isBlocked:x :createTerrainMask:x -2                  ...
  724:  set :isBlocked:y *tmp317                                     ...
  725:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  726:  select type equal type @boulder @air type                    ...
  727:  select :isBlocked:result equal type @air 0 1                 ...
  728:  op or :createTerrainMask:result *tmp315 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  729:  op shl *tmp315 :createTerrainMask:result 1                   ...
  730:  op add :isBlocked:x :createTerrainMask:x -3                  ...
  731:  set :isBlocked:y *tmp317                                     ...
  732:  ucontrol getBlock :isBlocked:x :isBlocked:y type building fl mlog(in x, in y, out result) {
  733:  select type equal type @boulder @air type                    ...
  734:  select :isBlocked:result equal type @air 0 1                 ...
  735:  op or :createTerrainMask:result *tmp315 :isBlocked:result    result = (result << 1) | isBlocked(x + c, y + r);
  736:  op sub :createTerrainMask:r :createTerrainMask:r 1           for var r in -3 .. 3 descending do
  737:  jump *label325 greaterThanEq :createTerrainMask:r -3         ...
  738:  set :createTerrainMask*retval :createTerrainMask:result      return result;
  739:  return :createTerrainMask*retaddr                            noinline def createTerrainMask(x, y)
        label *label10                                               noinline def findPossiblePlacement(terrainMask, placementMask, width, height, out x, out y)
  740:  set :findPossiblePlacement:y -3                              for y in -3 .. 3 do
  741:  jump *label259 greaterThan :findPossiblePlacement:y 3        ...
        label *label327                                              ...
  742:  op add *tmp320 :findPossiblePlacement:y 3                    var mask = placementMask << 7 * (y + 3);
  743:  op mul *tmp321 7 *tmp320                                     ...
  744:  op shl :findPossiblePlacement:mask :findPossiblePlacement:pl ...
  745:  set :findPossiblePlacement:x -3                              for x in -3 .. 3 do
  746:  jump *label262 greaterThan :findPossiblePlacement:x 3        ...
        label *label328                                              ...
  747:  op and *tmp323 :findPossiblePlacement:terrainMask :findPossi if (terrainMask & mask) == 0 then return 3 * 8 + y * 7 + x; end;
  748:  jump *label263 notEqual *tmp323 0                            ...
  749:  op mul *tmp326 :findPossiblePlacement:y 7                    ...
  750:  op add *tmp327 24 *tmp326                                    ...
  751:  op add :findPossiblePlacement*retval *tmp327 :findPossiblePl ...
  752:  return :findPossiblePlacement*retaddr                        ...
        label *label263                                              ...
  753:  op sub *tmp329 3 :findPossiblePlacement:width                if x > 3 - width then break; end;
  754:  jump *label262 greaterThan :findPossiblePlacement:x *tmp329  ...
  755:  op shl :findPossiblePlacement:mask :findPossiblePlacement:ma mask <<= 1;
  756:  op add :findPossiblePlacement:x :findPossiblePlacement:x 1   for x in -3 .. 3 do
  757:  jump *label328 lessThanEq :findPossiblePlacement:x 3         ...
        label *label262                                              ...
  758:  op sub *tmp332 3 :findPossiblePlacement:height               if y > 3 - height then break; end;
  759:  jump *label259 greaterThan :findPossiblePlacement:y *tmp332  ...
  760:  op add :findPossiblePlacement:y :findPossiblePlacement:y 1   for y in -3 .. 3 do
  761:  jump *label327 lessThanEq :findPossiblePlacement:y 3         ...
        label *label259                                              ...
  762:  set :findPossiblePlacement*retval -1                         return -1;
  763:  return :findPossiblePlacement*retaddr                        noinline def findPossiblePlacement(terrainMask, placementMask, width, height, out x, out y)
        label *label11                                               def tryPlaceGenerator(centerX, centerY, terrainMask, generatorHorizontal, generatorVertical)
  764:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te var shift = findPossiblePlacement(terrainMask, generatorHorizontal, 4, 2, out c, out r);
  765:  set :findPossiblePlacement:placementMask :tryPlaceGenerator: ...
  766:  set :findPossiblePlacement:width 4                           ...
  767:  set :findPossiblePlacement:height 2                          ...
  768:  setaddr :findPossiblePlacement*retaddr *label270             ...
  769:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label270                                              ...
  770:  jump *label271 lessThan :findPossiblePlacement*retval 0      if shift >= 0 then
  771:  op add *tmp338 :tryPlaceGenerator:centerX 0.5                water2X = centerX + 0.5 + c;
  772:  op add .water2X *tmp338 :findPossiblePlacement:x             ...
  773:  op add *tmp340 :tryPlaceGenerator:centerY 0.5                water2Y = centerY + 0.5 + r;
  774:  op add .water2Y *tmp340 :findPossiblePlacement:y             ...
  775:  op add *tmp342 :tryPlaceGenerator:centerX 2.5                generatorX = centerX + 2.5 + c;
  776:  op add .generatorX *tmp342 :findPossiblePlacement:x          ...
  777:  op add .generatorY *tmp340 :findPossiblePlacement:y          generatorY = centerY + 0.5 + r;
  778:  op shl *tmp346 :tryPlaceGenerator:generatorHorizontal :findP terrainMask |= (generatorHorizontal << shift);
  779:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
  780:  jump *label272 always 0 0                                    if shift >= 0 then
        label *label271                                              ...
  781:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, generatorVertical, 2, 4, out c, out r);
  782:  set :findPossiblePlacement:placementMask :tryPlaceGenerator: ...
  783:  set :findPossiblePlacement:width 2                           ...
  784:  set :findPossiblePlacement:height 4                          ...
  785:  setaddr :findPossiblePlacement*retaddr *label273             ...
  786:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label273                                              ...
  787:  jump *label274 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  788:  set :tryPlaceGenerator*retval false                          ...
  789:  return :tryPlaceGenerator*retaddr                            ...
        label *label274                                              ...
  790:  op add *tmp350 :tryPlaceGenerator:centerX 0.5                water2X = centerX + 0.5 + c;
  791:  op add .water2X *tmp350 :findPossiblePlacement:x             ...
  792:  op add *tmp352 :tryPlaceGenerator:centerY 0.5                water2Y = centerY + 0.5 + r;
  793:  op add .water2Y *tmp352 :findPossiblePlacement:y             ...
  794:  op add .generatorX *tmp350 :findPossiblePlacement:x          generatorX = centerX + 0.5 + c;
  795:  op add *tmp356 :tryPlaceGenerator:centerY 2.5                generatorY = centerY + 2.5 + r;
  796:  op add .generatorY *tmp356 :findPossiblePlacement:y          ...
  797:  op shl *tmp358 :tryPlaceGenerator:generatorVertical :findPos terrainMask |= (generatorVertical << shift);
  798:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
        label *label272                                              if shift >= 0 then
  799:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, 1, 1, 1, out c, out r);
  800:  set :findPossiblePlacement:placementMask 1                   ...
  801:  set :findPossiblePlacement:width 1                           ...
  802:  set :findPossiblePlacement:height 1                          ...
  803:  setaddr :findPossiblePlacement*retaddr *label276             ...
  804:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label276                                              ...
  805:  jump *label277 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  806:  set :tryPlaceGenerator*retval false                          ...
  807:  return :tryPlaceGenerator*retaddr                            ...
        label *label277                                              ...
  808:  op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacem nodeX = centerX + c;
  809:  op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacem nodeY = centerY + r;
  810:  op shl *tmp364 1 :findPossiblePlacement*retval               terrainMask |= (1 << shift);
  811:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
  812:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, 1, 1, 1, out c, out r);
  813:  set :findPossiblePlacement:placementMask 1                   ...
  814:  set :findPossiblePlacement:width 1                           ...
  815:  set :findPossiblePlacement:height 1                          ...
  816:  setaddr :findPossiblePlacement*retaddr *label279             ...
  817:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label279                                              ...
  818:  jump *label280 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  819:  set :tryPlaceGenerator*retval false                          ...
  820:  return :tryPlaceGenerator*retaddr                            ...
        label *label280                                              ...
  821:  op add .panelX :tryPlaceGenerator:centerX :findPossiblePlace panelX = centerX + c;
  822:  op add .panelY :tryPlaceGenerator:centerY :findPossiblePlace panelY = centerY + r;
  823:  op shl *tmp370 1 :findPossiblePlacement*retval               terrainMask |= (1 << shift);
  824:  op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terr ...
  825:  set :findPossiblePlacement:terrainMask :tryPlaceGenerator:te shift = findPossiblePlacement(terrainMask, 1, 1, 1, out c, out r);
  826:  set :findPossiblePlacement:placementMask 1                   ...
  827:  set :findPossiblePlacement:width 1                           ...
  828:  set :findPossiblePlacement:height 1                          ...
  829:  setaddr :findPossiblePlacement*retaddr *label282             ...
  830:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label282                                              ...
  831:  jump *label283 greaterThanEq :findPossiblePlacement*retval 0 if shift < 0 then return false; end;
  832:  set :tryPlaceGenerator*retval false                          ...
  833:  return :tryPlaceGenerator*retaddr                            ...
        label *label283                                              ...
  834:  op add .batteryX :tryPlaceGenerator:centerX :findPossiblePla batteryX = centerX + c;
  835:  op add .batteryY :tryPlaceGenerator:centerY :findPossiblePla batteryY = centerY + r;
  836:  set :tryPlaceGenerator*retval true                           return true;
  837:  return :tryPlaceGenerator*retaddr                            ...
        label *label12                                               noinline def layoutThoriumDrillAtLocation()
  838:  set .panelY -1                                               water1X = water1Y = water2X = water2Y = generatorX = generatorY = panelX = panelY = -1;
  839:  set .panelX -1                                               ...
  840:  set .generatorY -1                                           ...
  841:  set .generatorX -1                                           ...
  842:  set .water2Y -1                                              ...
  843:  set .water2X -1                                              ...
  844:  set .water1Y -1                                              ...
  845:  set .water1X -1                                              ...
  846:  set :createTerrainMask:x .drillX                             var plainTerrainMask = createTerrainMask(drillX, drillY);
  847:  set :createTerrainMask:y .drillY                             ...
  848:  setaddr :createTerrainMask*retaddr *label286                 ...
  849:  call *label9 *invalid :createTerrainMask*retval              ...
        label *label286                                              ...
  850:  op or :layoutThoriumDrillAtLocation:terrainMask :createTerra var terrainMask = plainTerrainMask | createFixedMatrix(
  851:  op or :layoutThoriumDrillAtLocation:cornersMask :layoutThori var cornersMask = terrainMask | createFixedMatrix(
  852:  set :layoutThoriumDrillAtLocation:extractorMask 387          var extractorMask = createFixedMatrix(0b11, 0b11);
  853:  set :findPossiblePlacement:terrainMask :layoutThoriumDrillAt var shift = findPossiblePlacement(cornersMask, extractorMask, 2, 2, out c, out r);
  854:  set :findPossiblePlacement:placementMask 387                 ...
  855:  set :findPossiblePlacement:width 2                           ...
  856:  set :findPossiblePlacement:height 2                          ...
  857:  setaddr :findPossiblePlacement*retaddr *label290             ...
  858:  call *label10 *invalid :findPossiblePlacement*retval         ...
        label *label290                                              ...
  859:  jump *label291 lessThan :findPossiblePlacement*retval 0      if shift >= 0 then
  860:  op add *tmp415 .drillX 0.5                                   water1X = drillX + 0.5 + c;
  861:  op add .water1X *tmp415 :findPossiblePlacement:x             ...
  862:  op add *tmp417 .drillY 0.5                                   water1Y = drillY + 0.5 + r;
  863:  op add .water1Y *tmp417 :findPossiblePlacement:y             ...
  864:  op shl :layoutThoriumDrillAtLocation:extractorMask :layoutTh extractorMask <<= shift;
  865:  op or :layoutThoriumDrillAtLocation:terrainMask :layoutThori terrainMask |= extractorMask;
        label *label291                                              if shift >= 0 then
  866:  set :layoutThoriumDrillAtLocation:generatorHorizontal 1935   var generatorHorizontal = createFixedMatrix(0b1111, 0b1111);
  867:  set :layoutThoriumDrillAtLocation:generatorVertical 6340995  var generatorVertical = createFixedMatrix(0b11, 0b11, 0b11, 0b11);
  868:  set :tryPlaceGenerator:centerX .drillX                       if tryPlaceGenerator(drillX, drillY, terrainMask, generatorHorizontal, generatorVertical) then return true; end;
  869:  set :tryPlaceGenerator:centerY .drillY                       ...
  870:  set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLoca ...
  871:  set :tryPlaceGenerator:generatorHorizontal 1935              ...
  872:  set :tryPlaceGenerator:generatorVertical 6340995             ...
  873:  setaddr :tryPlaceGenerator*retaddr *label295                 ...
  874:  call *label11 *invalid :tryPlaceGenerator*retval             ...
        label *label295                                              ...
  875:  jump *label296 equal :tryPlaceGenerator*retval false         ...
  876:  set :layoutThoriumDrillAtLocation*retval true                ...
  877:  return :layoutThoriumDrillAtLocation*retaddr                 ...
        label *label296                                              ...
  878:  set :layoutThoriumDrillAtLocation:sx 3                       for var sx in 3, 3, -3, -3; var sy in 3, -3, 3, -3 do
  879:  set :layoutThoriumDrillAtLocation:sy 3                       ...
  880:  setaddr *tmp433 *label301                                    ...
  881:  jump *label298 always 0 0                                    ...
        multilabel *label301                                         ...
  882:  set :layoutThoriumDrillAtLocation:sx 3                       ...
  883:  set :layoutThoriumDrillAtLocation:sy -3                      ...
  884:  setaddr *tmp433 *label302                                    ...
  885:  jump *label298 always 0 0                                    ...
        multilabel *label302                                         ...
  886:  set :layoutThoriumDrillAtLocation:sx -3                      ...
  887:  set :layoutThoriumDrillAtLocation:sy 3                       ...
  888:  setaddr *tmp433 *label303                                    ...
  889:  jump *label298 always 0 0                                    ...
        multilabel *label303                                         ...
  890:  set :layoutThoriumDrillAtLocation:sx -3                      ...
  891:  set :layoutThoriumDrillAtLocation:sy -3                      ...
  892:  setaddr *tmp433 *label304                                    ...
        label *label298                                              ...
  893:  op add :layoutThoriumDrillAtLocation:newX .drillX :layoutTho var newX = drillX + sx;
  894:  op add :layoutThoriumDrillAtLocation:newY .drillY :layoutTho var newY = drillY + sy;
  895:  set :createTerrainMask:x :layoutThoriumDrillAtLocation:newX  var newTerrainMask = createTerrainMask(newX, newY);
  896:  set :createTerrainMask:y :layoutThoriumDrillAtLocation:newY  ...
  897:  setaddr :createTerrainMask*retaddr *label305                 ...
  898:  call *label9 *invalid :createTerrainMask*retval              ...
        label *label305                                              ...
  899:  op sub *tmp437 0 :layoutThoriumDrillAtLocation:sx            var shiftedMask = shiftMask(terrainMask, -sx, -sy);
  900:  op sub *tmp438 0 :layoutThoriumDrillAtLocation:sy            ...
  901:  set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMas ...
  902:  op abs *tmp440 *tmp437 0                                     if abs(shiftX) > 6 or abs(shiftY) > 6 then return 0; end;
  903:  op greaterThan *tmp441 *tmp440 6                             ...
  904:  op abs *tmp442 *tmp438 0                                     ...
  905:  op greaterThan *tmp443 *tmp442 6                             ...
  906:  op or *tmp444 *tmp441 *tmp443                                ...
  907:  jump *label307 equal *tmp444 false                           ...
  908:  set *tmp439 0                                                ...
  909:  jump *label306 always 0 0                                    ...
        label *label307                                              ...
  910:  op mul *tmp446 7 *tmp438                                     var shift = shiftX + 7 * shiftY;
  911:  op add :shiftMask:shift *tmp437 *tmp446                      ...
  912:  jump *label309 lessThanEq :shiftMask:shift 0                 if shift > 0 then
  913:  op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift var clearMask = ((1 << 49) - 1) >> shift;
  914:  op and *tmp451 :layoutThoriumDrillAtLocation:terrainMask :sh mask = (mask & clearMask) << shift;
  915:  op shl :shiftMask:mask *tmp451 :shiftMask:shift              ...
  916:  jump *label310 always 0 0                                    if shift > 0 then
        label *label309                                              ...
  917:  op sub *tmp453 0 :shiftMask:shift                            mask >>= -shift;
  918:  op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrain ...
        label *label310                                              if shift > 0 then
  919:  jump *label311 equal *tmp437 0                               if shiftX != 0 then
  920:  op sub *tmp457 7 *tmp440                                     var keep = 0b1111111 >> (7 - abs(shiftX));          // The bits we need to keep
  921:  op shr :shiftMask:keep 0b1111111 *tmp457                     ...
  922:  jump *label313 lessThanEq *tmp437 0                          if shiftX > 0 then keep <<= 7 - abs(shiftX); end;   // Shift to the proper side
  923:  op shl :shiftMask:keep :shiftMask:keep *tmp457               ...
        label *label313                                              ...
  924:  op shl *tmp463 :shiftMask:keep 7                             keep |= keep << 7;
  925:  op or :shiftMask:keep :shiftMask:keep *tmp463                ...
  926:  op shl *tmp464 :shiftMask:keep 14                            keep |= keep << 14;
  927:  op or :shiftMask:keep :shiftMask:keep *tmp464                ...
  928:  op shl *tmp465 :shiftMask:keep 21                            keep |= keep << 21;
  929:  op or :shiftMask:keep :shiftMask:keep *tmp465                ...
  930:  op and :shiftMask:mask :shiftMask:mask :shiftMask:keep       mask &= keep;
        label *label311                                              if shiftX != 0 then
  931:  set *tmp439 :shiftMask:mask                                  return mask;
        label *label306                                              var shiftedMask = shiftMask(terrainMask, -sx, -sy);
  932:  op or :layoutThoriumDrillAtLocation:combinedMask :createTerr var combinedMask = newTerrainMask | shiftedMask;
  933:  op add *tmp467 .drillX :layoutThoriumDrillAtLocation:sx      if tryPlaceGenerator(drillX + sx, drillY + sy, combinedMask, generatorHorizontal, generatorVertical) then return true; end;
  934:  op add *tmp468 .drillY :layoutThoriumDrillAtLocation:sy      ...
  935:  set :tryPlaceGenerator:centerX *tmp467                       ...
  936:  set :tryPlaceGenerator:centerY *tmp468                       ...
  937:  set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLoca ...
  938:  set :tryPlaceGenerator:generatorHorizontal :layoutThoriumDri ...
  939:  set :tryPlaceGenerator:generatorVertical :layoutThoriumDrill ...
  940:  setaddr :tryPlaceGenerator*retaddr *label315                 ...
  941:  call *label11 *invalid :tryPlaceGenerator*retval             ...
        label *label315                                              ...
  942:  jump *label316 equal :tryPlaceGenerator*retval false         ...
  943:  set :layoutThoriumDrillAtLocation*retval true                ...
  944:  return :layoutThoriumDrillAtLocation*retaddr                 ...
        label *label316                                              ...
  945:  multijump *tmp433 0 0                                        for var sx in 3, 3, -3, -3; var sy in 3, -3, 3, -3 do
        multilabel *label304                                         ...
  946:  set :layoutThoriumDrillAtLocation*retval true                return true;
  947:  return :layoutThoriumDrillAtLocation*retaddr                 noinline def layoutThoriumDrillAtLocation()
        label *label1                                                remote def layoutThoriumDrill(x, y, unit, limit)
  948:  set :findDrillLocationLocal:x :layoutThoriumDrill:x          if !findDrillLocationLocal(x, y, unit, @thorium, @ore-thorium, true, limit, out drillX, out drillY) then
  949:  set :findDrillLocationLocal:y :layoutThoriumDrill:y          ...
  950:  set :findDrillLocationLocal:unit :layoutThoriumDrill:unit    ...
  951:  set :findDrillLocationLocal:item @thorium                    ...
  952:  set :findDrillLocationLocal:ore @ore-thorium                 ...
  953:  set :findDrillLocationLocal:large true                       ...
  954:  set :findDrillLocationLocal:limit :layoutThoriumDrill:limit  ...
  955:  setaddr :findDrillLocationLocal*retaddr *label319            ...
  956:  call *label8 *invalid :findDrillLocationLocal*retval         ...
        label *label319                                              ...
  957:  set .drillX :findDrillLocationLocal:dx                       ...
  958:  set .drillY :findDrillLocationLocal:dy                       ...
  959:  jump *label320 notEqual :findDrillLocationLocal*retval false ...
  960:  set :layoutThoriumDrill*retval false                         return false;
  961:  jump *label318 always 0 0                                    ...
        label *label320                                              if !findDrillLocationLocal(x, y, unit, @thorium, @ore-thorium, true, limit, out drillX, out drillY) then
  962:  setaddr :layoutThoriumDrillAtLocation*retaddr *label322      layoutThoriumDrillAtLocation();
  963:  call *label12 *invalid :layoutThoriumDrillAtLocation*retval  ...
        label *label322                                              ...
  964:  set :layoutThoriumDrill*retval :layoutThoriumDrillAtLocation remote def layoutThoriumDrill(x, y, unit, limit)
        label *label318                                              ...
  965:  set :layoutThoriumDrill*finished true                        ...
  966:  jump *label14 always 0 0                                     ...


Performance: parsed in 485 ms, compiled in 461 ms, optimized in 2,307 ms, run in 6 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (4 steps):
The program didn't generate any output.
Execution exception at instruction 34: wait 1e12:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
