   963 instructions before optimizations.
    34 instructions eliminated by Temp Variables Elimination (2 iterations).
    79 instructions eliminated by Dead Code Elimination (7 iterations).
C:\Home\golem\jam-202507\phase1.mnd:28:5 Variable 'unloader2' is not used.
C:\Home\golem\jam-202507\phase1.mnd:30:5 Variable 'kiln' is not used.
C:\Home\golem\jam-202507\phase1.mnd:34:5 Variable 'nextBlock' is not used.
C:\Home\golem\jam-202507\phase1.mnd:41:5 Variable 'status1' is not used.
C:\Home\golem\jam-202507\phase1.mnd:42:5 Variable 'status2' is not used.
C:\Home\golem\jam-202507\phase1.mnd:42:19 Variable 'item2' is not used.
C:\Home\golem\jam-202507\phase1.mnd:42:31 Variable 'block2' is not used.
C:\Home\golem\jam-202507\phase1.mnd:43:5 Variable 'status3' is not used.
C:\Home\golem\jam-202507\phase1.mnd:292:13 Variable 'buildBlockAt.floor' is not used.
C:\Home\golem\jam-202507\phase1.mnd:314:16 Variable 'checkOre.type' is not used.
C:\Home\golem\jam-202507\phase1.mnd:314:16 Variable 'checkOre.type' is not used.
C:\Home\golem\jam-202507\phase1.mnd:314:16 Variable 'checkOre.type' is not used.
C:\Home\golem\jam-202507\phase1.mnd:321:20 Variable 'buildTitaniumDrill.offsetX' is not used.
C:\Home\golem\jam-202507\phase1.mnd:321:29 Variable 'buildTitaniumDrill.offsetY' is not used.
C:\Home\golem\jam-202507\phase1.mnd:321:81 Variable 'buildTitaniumDrill.config' is not used.
C:\Home\golem\jam-202507\phase1.mnd:321:89 Variable 'buildTitaniumDrill.rotation' is not used.
     1 instructions eliminated by Jump Normalization (5 iterations).
    35 instructions eliminated by Jump Optimization (5 iterations).
    40 instructions eliminated by Single Step Elimination (3 passes, 9 iterations).
     6 instructions modified by Expression Optimization (3 iterations).
     2 instructions modified by If Expression Optimization (3 iterations).
   246 instructions eliminated by Data Flow Optimization (3 passes, 24 iterations).
    11 loops improved by Loop Hoisting.
    20 instructions added by Loop Optimization (3 iterations).
     4 loops improved by Loop Optimization.
    50 instructions added by Loop Unrolling (9 iterations).
     2 loops unrolled by Loop Unrolling.
     5 instructions eliminated by Jump Straightening (5 iterations).
     7 instructions updated by JumpThreading.
    31 instructions eliminated by Unreachable Code Elimination (2 iterations).
     4 instructions eliminated by Print Merging.
   558 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 438):
    Replicate loop condition at line 94:5                        size    +1, benefit   322794.1, efficiency 322794.141
    Replicate loop condition at line 112:5                       size    +1, benefit   210996.1, efficiency 210996.094
    Replicate loop condition at line 136:9                       size    +1, benefit   105498.0, efficiency 105498.047
    Replicate loop condition at line 266:5                       size   +17, benefit     6900.0, efficiency    405.882
  * Unroll iteration loop at line 321:5                          size    -4, benefit       12.0, efficiency   Infinity (-2 instructions)
    Unroll iteration loop at line 333:5                          size   +61, benefit       19.0, efficiency      0.311

Pass 1: speed optimization selection (cost limit 440):
  * Replicate loop condition at line 94:5                        size    +1, benefit   322794.1, efficiency 322794.141 (+1 instructions)
    Replicate loop condition at line 112:5                       size    +1, benefit   210996.1, efficiency 210996.094
    Replicate loop condition at line 136:9                       size    +1, benefit   105498.0, efficiency 105498.047
    Replicate loop condition at line 266:5                       size   +17, benefit     6900.0, efficiency    405.882
    Unroll iteration loop at line 333:5                          size   +61, benefit       19.0, efficiency      0.311

Pass 1: speed optimization selection (cost limit 439):
  * Replicate loop condition at line 112:5                       size    +1, benefit   210996.1, efficiency 210996.094 (+1 instructions)
    Replicate loop condition at line 136:9                       size    +1, benefit   105498.0, efficiency 105498.047
    Replicate loop condition at line 266:5                       size   +17, benefit     6900.0, efficiency    405.882
    Unroll iteration loop at line 333:5                          size   +61, benefit       19.0, efficiency      0.311

Pass 1: speed optimization selection (cost limit 438):
  * Replicate loop condition at line 136:9                       size    +1, benefit   105498.0, efficiency 105498.047 (+1 instructions)
    Replicate loop condition at line 266:5                       size   +17, benefit     6900.0, efficiency    405.882
    Unroll iteration loop at line 333:5                          size   +61, benefit       19.0, efficiency      0.311

Pass 1: speed optimization selection (cost limit 437):
  * Replicate loop condition at line 266:5                       size   +17, benefit     6900.0, efficiency    405.882 (+17 instructions)
    Unroll iteration loop at line 333:5                          size   +61, benefit       19.0, efficiency      0.311

Pass 1: speed optimization selection (cost limit 420):
  * Unroll iteration loop at line 333:5                          size   +61, benefit       19.0, efficiency      0.311 (+43 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-52 instructions):
 
     3 set .smelter null
     4 set .titanium_drill null
     5 set .unloader1 null
-    * set .unloader2 null
     6 set .processor null
-    * set .kiln null
     7 set .nextBlock ""
     8 set .copperTarget 0
     9 set .leadTarget 0
 
   168 setaddr :buildBlockFromConfig*retaddr *label39 (h:*label39)
   169 call *label12 *invalid :buildBlockFromConfig*retval (m:*label39) (h:*label39)
   170 label *label39
-    * set *tmp17 :buildBlockFromConfig*retval
   171 jump *label34 always
   172 label *label36
   173 multijump *tmp18 0 0 (m:marker3)
   174 multilabel *label38 (m:marker3)
   175 label *label37
-    * set *tmp17 null
   176 label *label34
   177 set :buildBlock.4:block @silicon-smelter
   178 set :buildBlock.4:offsetX 1.5
 
   213 label *label40
   214 set .smelter *tmp21
   215 set :buildTitaniumDrill:block @pneumatic-drill
-    * set :buildTitaniumDrill:offsetX 0
-    * set :buildTitaniumDrill:offsetY 0
   216 set :buildTitaniumDrill:copper 18
   217 set :buildTitaniumDrill:lead 0
   218 set :buildTitaniumDrill:graphite 10
   219 set :buildTitaniumDrill:silicon 0
   220 set :buildTitaniumDrill:titanium 0
-    * set :buildTitaniumDrill:config 0
-    * set :buildTitaniumDrill:rotation null
   221 setaddr *tmp26 *label50
   222 label *label47
   223 set :meetTarget:block :buildTitaniumDrill:block
 
   281 label *label62
   282 set *tmp32 null
   283 label *label63
-    * set *tmp29 *tmp32
   284 label *label61
   285 set :buildTitaniumDrill:count :checkOre:count
   286 op add *tmp34 :buildTitaniumDrill:y :buildTitaniumDrill:yy
 
   297 label *label65
   298 set *tmp38 null
   299 label *label66
-    * set *tmp35 *tmp38
   300 label *label64
   301 set :buildTitaniumDrill:count :checkOre.1:count
   302 op add *tmp40 :buildTitaniumDrill:x :buildTitaniumDrill:xx
 
   314 label *label68
   315 set *tmp45 null
   316 label *label69
-    * set *tmp42 *tmp45
   317 label *label67
   318 set :buildTitaniumDrill:count :checkOre.2:count
   319 op greaterThan *tmp47 :buildTitaniumDrill:count :buildTitaniumDrill:best
 
   329 label *label72
   330 set *tmp50 null
   331 label *label73
-    * set *tmp48 *tmp50
   332 jump *label71 always
   333 label *label70
-    * set *tmp48 null
   334 label *label71
   335 label *label55
   336 multijump *tmp27 0 0 (m:marker6)
 
   428 label *label84
   429 set *tmp57 null
   430 label *label81
-    * set .unloader2 *tmp57
   431 set :buildBlock.7:block @power-node
   432 set :buildBlock.7:offsetX -2
   433 set :buildBlock.7:offsetY 1
 
   457 setaddr :buildBlockFromConfig*retaddr *label92 (h:*label92)
   458 call *label12 *invalid :buildBlockFromConfig*retval (m:*label92) (h:*label92)
   459 label *label92
-    * set *tmp61 :buildBlockFromConfig*retval
   460 jump *label87 always
   461 label *label89
   462 multijump *tmp62 0 0 (m:marker9)
   463 multilabel *label91 (m:marker9)
   464 label *label90
-    * set *tmp61 null
   465 label *label87
   466 set :buildBlock.8:block @micro-processor
   467 set :buildBlock.8:offsetX 1
 
   492 setaddr :buildBlockFromConfig*retaddr *label98 (h:*label98)
   493 call *label12 *invalid :buildBlockFromConfig*retval (m:*label98) (h:*label98)
   494 label *label98
-    * set *tmp65 :buildBlockFromConfig*retval
   495 jump *label93 always
   496 label *label95
   497 multijump *tmp66 0 0 (m:marker10)
   498 multilabel *label97 (m:marker10)
   499 label *label96
-    * set *tmp65 null
   500 label *label93
   501 write false .processor ".pressEnabled"
   502 set :buildBlock.9:block @air-factory
 
   528 setaddr :buildBlockFromConfig*retaddr *label104 (h:*label104)
   529 call *label12 *invalid :buildBlockFromConfig*retval (m:*label104) (h:*label104)
   530 label *label104
-    * set *tmp69 :buildBlockFromConfig*retval
   531 jump *label99 always
   532 label *label101
   533 multijump *tmp70 0 0 (m:marker11)
   534 multilabel *label103 (m:marker11)
   535 label *label102
-    * set *tmp69 null
   536 label *label99
   537 set :meetTarget:block "nothing"
   538 set :meetTarget:copper 0
 
   594 op notEqual *tmp79 *tmp78 null
   595 jump *label120 equal *tmp79 false
   596 ucontrol itemDrop @air 1000
-    * set *tmp80 null
   597 jump *label121 always
   598 label *label120
-    * set *tmp80 null
   599 label *label121
   600 set :moveTo.1:x :moveToEmpty:x
   601 set :moveTo.1:y :moveToEmpty:y
 
   653 op greaterThanEq *tmp93 *tmp92 :depositItems:cap
   654 jump *label138 equal *tmp93 false
   655 jump *label137 always
-    * set *tmp94 null
   656 jump *label139 always
   657 label *label138
-    * set *tmp94 null
   658 label *label139
   659 label *label136
   660 sensor *tmp95 @unit @firstItem
   661 op notEqual *tmp96 *tmp95 null
   662 jump *label135 notEqual *tmp96 false
   663 label *label137
-    * set *tmp87 null
   664 jump *label131 always
   665 label *label130
   666 label *label140
 
   671 label *label141
   672 jump *label140 always
   673 label *label142
-    * set *tmp87 null
   674 label *label131
   675 label *label128
   676 return :depositItems*retaddr
 
   685 printflush message1
   686 stop
   687 label *label146
-    * set *tmp102 null
   688 jump *label145 always
   689 label *label144
-    * set *tmp102 null
   690 label *label145
   691 label *label143
   692 return :locateOre*retaddr
 
   714 op land *tmp106 *tmp104 *tmp105
   715 jump *label154 equal *tmp106 false
   716 jump *label153 always
-    * set *tmp107 null
   717 jump *label155 always
   718 label *label154
-    * set *tmp107 null
   719 label *label155
   720 ucontrol mine :mineOre:x :mineOre:y
   721 label *label152
 
   768 op land *tmp116 *tmp114 *tmp115
   769 jump *label165 equal *tmp116 false
   770 ucontrol itemDrop @air 1000
-    * set *tmp117 null
   771 jump *label166 always
   772 label *label165
-    * set *tmp117 null
   773 label *label166
   774 label *label163
   775 sensor *tmp118 @unit :fetchBlock:item
 
   821 setaddr :mineOre*retaddr *label180 (h:*label180)
   822 call *label6 *invalid :mineOre*retval (m:*label180) (h:*label180)
   823 label *label180
-    * set *tmp134 null
   824 jump *label179 always
   825 label *label178
-    * set *tmp134 null
   826 label *label179
   827 label *label176
   828 set :supplyBlocks:supplied true
 
   831 label *label173
   832 set *tmp129 null
   833 label *label174
-    * set *tmp126 *tmp129
   834 jump *label172 always
   835 label *label171
-    * set *tmp126 null
   836 label *label172
   837 sensor *tmp135 .core @silicon
   838 op lessThan *tmp136 *tmp135 .siliconTarget
 
   864 setaddr :mineOre*retaddr *label190 (h:*label190)
   865 call *label6 *invalid :mineOre*retval (m:*label190) (h:*label190)
   866 label *label190
-    * set *tmp145 null
   867 jump *label189 always
   868 label *label188
-    * set *tmp145 null
   869 label *label189
   870 label *label186
   871 set :supplyBlocks:supplied true
 
   899 setaddr :mineOre*retaddr *label198 (h:*label198)
   900 call *label6 *invalid :mineOre*retval (m:*label198) (h:*label198)
   901 label *label198
-    * set *tmp153 null
   902 jump *label197 always
   903 label *label196
-    * set *tmp153 null
   904 label *label197
   905 label *label194
   906 set :supplyBlocks:supplied true
 
   911 label *label192
   912 set *tmp140 *tmp148
   913 label *label184
-    * set *tmp137 *tmp140
   914 jump *label182 always
   915 label *label181
-    * set *tmp137 null
   916 label *label182
   917 sensor *tmp154 .battery @totalPower
   918 op lessThan *tmp155 *tmp154 .powerTarget
 
   941 setaddr :mineOre*retaddr *label206 (h:*label206)
   942 call *label6 *invalid :mineOre*retval (m:*label206) (h:*label206)
   943 label *label206
-    * set *tmp161 null
   944 jump *label205 always
   945 label *label204
-    * set *tmp161 null
   946 label *label205
   947 label *label202
   948 set :supplyBlocks:supplied true
 
   951 label *label199
   952 set *tmp156 null
   953 label *label200
-    * set *tmp123 *tmp156
   954 jump *label170 always
   955 label *label169
-    * set *tmp123 null
   956 label *label170
   957 sensor *tmp162 .titanium_drill @titanium
   958 op lessThan *tmp163 *tmp162 7
 
  1034 label *label215
  1035 set *tmp167 *tmp170
  1036 label *label210
-    * set *tmp164 *tmp167
  1037 jump *label208 always
  1038 label *label207
  1039 set :status1.7:text "Fetching titanium"
 
  1044 setaddr :fetchBlock*retaddr *label227 (h:*label227)
  1045 call *label8 *invalid :fetchBlock*retval (m:*label227) (h:*label227)
  1046 label *label227
-    * set *tmp164 null
  1047 label *label208
  1048 label *label168
  1049 return :supplyBlocks*retaddr
 
  1101 jump *label238 equal *tmp199 false
  1102 set :buildBlockAt*retval :buildBlockAt:building
  1103 jump *label233 always
-    * set *tmp200 null
  1104 jump *label239 always
  1105 label *label238
-    * set *tmp200 null
  1106 label *label239
  1107 print "[salmon]"
  1108 print "Cannot build at ("
 
  1114 printflush message1
  1115 stop
  1116 label *label240
-    * set *tmp198 null
  1117 jump *label237 always
  1118 label *label236
-    * set *tmp198 null
  1119 label *label237
  1120 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1121 label *label241

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-18 instructions):
 
   276 jump *label62 equal *tmp31 false
   277 set *tmp33 :checkOre:count
   278 op add :checkOre:count :checkOre:count 1
-    * set *tmp32 *tmp33
   279 jump *label63 always
   280 label *label62
-    * set *tmp32 null
   281 label *label63
   282 label *label61
   283 set :buildTitaniumDrill:count :checkOre:count
 
   290 jump *label65 equal *tmp37 false
   291 set *tmp39 :checkOre.1:count
   292 op add :checkOre.1:count :checkOre.1:count 1
-    * set *tmp38 *tmp39
   293 jump *label66 always
   294 label *label65
-    * set *tmp38 null
   295 label *label66
   296 label *label64
   297 set :buildTitaniumDrill:count :checkOre.1:count
 
   305 jump *label68 equal *tmp44 false
   306 set *tmp46 :checkOre.2:count
   307 op add :checkOre.2:count :checkOre.2:count 1
-    * set *tmp45 *tmp46
   308 jump *label69 always
   309 label *label68
-    * set *tmp45 null
   310 label *label69
   311 label *label67
   312 set :buildTitaniumDrill:count :checkOre.2:count
 
   318 op equal *tmp49 :buildTitaniumDrill:count 3
   319 jump *label72 equal *tmp49 false
   320 jump *label56 always
-    * set *tmp50 null
   321 jump *label73 always
   322 label *label72
-    * set *tmp50 null
   323 label *label73
   324 jump *label71 always
   325 label *label70
 
   412 setaddr :buildBlockFromConfig*retaddr *label86 (h:*label86)
   413 call *label12 *invalid :buildBlockFromConfig*retval (m:*label86) (h:*label86)
   414 label *label86
-    * set *tmp57 :buildBlockFromConfig*retval
   415 jump *label81 always
   416 label *label83
   417 multijump *tmp58 0 0 (m:marker8)
   418 multilabel *label85 (m:marker8)
   419 label *label84
-    * set *tmp57 null
   420 label *label81
   421 set :buildBlock.7:block @power-node
   422 set :buildBlock.7:offsetX -2
 
   816 label *label179
   817 label *label176
   818 set :supplyBlocks:supplied true
-    * set *tmp129 :supplyBlocks:supplied
   819 jump *label174 always
   820 label *label173
-    * set *tmp129 null
   821 label *label174
   822 jump *label172 always
   823 label *label171
 
   857 label *label189
   858 label *label186
   859 set :supplyBlocks:supplied true
-    * set *tmp140 :supplyBlocks:supplied
   860 jump *label184 always
   861 label *label183
   862 sensor *tmp146 .smelter @sand
 
   896 label *label191
   897 set *tmp148 null
   898 label *label192
-    * set *tmp140 *tmp148
   899 label *label184
   900 jump *label182 always
   901 label *label181
 
   932 label *label205
   933 label *label202
   934 set :supplyBlocks:supplied true
-    * set *tmp156 :supplyBlocks:supplied
   935 jump *label200 always
   936 label *label199
-    * set *tmp156 null
   937 label *label200
   938 jump *label170 always
   939 label *label169
 
   958 setaddr :mineOre.1*retaddr *label213 (h:*label213)
   959 call *label7 *invalid :mineOre.1*retval (m:*label213) (h:*label213)
   960 label *label213
-    * set *tmp167 null
   961 jump *label210 always
   962 label *label209
   963 sensor *tmp168 .core @lead
 
  1015 label *label220
  1016 set *tmp170 *tmp172
  1017 label *label215
-    * set *tmp167 *tmp170
  1018 label *label210
  1019 jump *label208 always
  1020 label *label207

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-7 instructions):
 
   274 ucontrol getBlock :checkOre:x :checkOre:y :checkOre:type *tmp30 :checkOre:floor
   275 op equal *tmp31 :checkOre:floor @ore-titanium
   276 jump *label62 equal *tmp31 false
-    * set *tmp33 :checkOre:count
   277 op add :checkOre:count :checkOre:count 1
   278 jump *label63 always
   279 label *label62
 
   287 ucontrol getBlock :checkOre.1:x :checkOre.1:y :checkOre.1:type *tmp36 :checkOre.1:floor
   288 op equal *tmp37 :checkOre.1:floor @ore-titanium
   289 jump *label65 equal *tmp37 false
-    * set *tmp39 :checkOre.1:count
   290 op add :checkOre.1:count :checkOre.1:count 1
   291 jump *label66 always
   292 label *label65
 
   301 ucontrol getBlock :checkOre.2:x :checkOre.2:y :checkOre.2:type *tmp43 :checkOre.2:floor
   302 op equal *tmp44 :checkOre.2:floor @ore-titanium
   303 jump *label68 equal *tmp44 false
-    * set *tmp46 :checkOre.2:count
   304 op add :checkOre.2:count :checkOre.2:count 1
   305 jump *label69 always
   306 label *label68
 
   888 label *label197
   889 label *label194
   890 set :supplyBlocks:supplied true
-    * set *tmp148 :supplyBlocks:supplied
   891 jump *label192 always
   892 label *label191
-    * set *tmp148 null
   893 label *label192
   894 label *label184
   895 jump *label182 always
 
   972 setaddr :mineOre.1*retaddr *label218 (h:*label218)
   973 call *label7 *invalid :mineOre.1*retval (m:*label218) (h:*label218)
   974 label *label218
-    * set *tmp170 null
   975 jump *label215 always
   976 label *label214
   977 op equal *tmp171 :supplyBlocks:supplied false
 
  1007 label *label219
  1008 set *tmp172 null
  1009 label *label220
-    * set *tmp170 *tmp172
  1010 label *label215
  1011 label *label210
  1012 jump *label208 always

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
  1002 setaddr :mineOre.1*retaddr *label225 (h:*label225)
  1003 call *label7 *invalid :mineOre.1*retval (m:*label225) (h:*label225)
  1004 label *label225
-    * set *tmp172 null
  1005 jump *label220 always
  1006 label *label219
-    * set *tmp172 null
  1007 label *label220
  1008 label *label215
  1009 label *label210

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-34 instructions):
 
    18 set .status3 ""
    19 label *label13
    20 ubind @poly
-    * ulocate building core false @copper .coreX .coreY *tmp3 *tmp2
-    * set .core *tmp2
+   21 ulocate building core false @copper .coreX .coreY 0 .core
    22 label *label14
    23 op equal *tmp4 .core null
    24 jump *label13 notEqual *tmp4 false
 
    35 set :buildBlock:config null
    36 setaddr *tmp6 *label20
    37 label *label17
-    * op add *tmp7 .coreX :buildBlock:offsetX
-    * set :buildBlock:x *tmp7
-    * op add *tmp8 .coreY :buildBlock:offsetY
-    * set :buildBlock:y *tmp8
+   38 op add :buildBlock:x .coreX :buildBlock:offsetX
+   39 op add :buildBlock:y .coreY :buildBlock:offsetY
    40 set :buildBlockFromConfig:block :buildBlock:block
    41 set :buildBlockFromConfig:x :buildBlock:x
    42 set :buildBlockFromConfig:y :buildBlock:y
 
    71 set :buildBlock.1:config null
    72 setaddr *tmp10 *label26
    73 label *label23
-    * op add *tmp11 .coreX :buildBlock.1:offsetX
-    * set :buildBlock.1:x *tmp11
-    * op add *tmp12 .coreY :buildBlock.1:offsetY
-    * set :buildBlock.1:y *tmp12
+   74 op add :buildBlock.1:x .coreX :buildBlock.1:offsetX
+   75 op add :buildBlock.1:y .coreY :buildBlock.1:offsetY
    76 set :buildBlockFromConfig:block :buildBlock.1:block
    77 set :buildBlockFromConfig:x :buildBlock.1:x
    78 set :buildBlockFromConfig:y :buildBlock.1:y
 
   107 set :buildBlock.2:config null
   108 setaddr *tmp14 *label32
   109 label *label29
-    * op add *tmp15 .coreX :buildBlock.2:offsetX
-    * set :buildBlock.2:x *tmp15
-    * op add *tmp16 .coreY :buildBlock.2:offsetY
-    * set :buildBlock.2:y *tmp16
+  110 op add :buildBlock.2:x .coreX :buildBlock.2:offsetX
+  111 op add :buildBlock.2:y .coreY :buildBlock.2:offsetY
   112 set :buildBlockFromConfig:block :buildBlock.2:block
   113 set :buildBlockFromConfig:x :buildBlock.2:x
   114 set :buildBlockFromConfig:y :buildBlock.2:y
 
   144 set :buildBlock.3:config null
   145 setaddr *tmp18 *label38
   146 label *label35
-    * op add *tmp19 .coreX :buildBlock.3:offsetX
-    * set :buildBlock.3:x *tmp19
-    * op add *tmp20 .coreY :buildBlock.3:offsetY
-    * set :buildBlock.3:y *tmp20
+  147 op add :buildBlock.3:x .coreX :buildBlock.3:offsetX
+  148 op add :buildBlock.3:y .coreY :buildBlock.3:offsetY
   149 set :buildBlockFromConfig:block :buildBlock.3:block
   150 set :buildBlockFromConfig:x :buildBlock.3:x
   151 set :buildBlockFromConfig:y :buildBlock.3:y
 
   177 set :buildBlock.4:config null
   178 setaddr *tmp22 *label44
   179 label *label41
-    * op add *tmp23 .coreX :buildBlock.4:offsetX
-    * set :buildBlock.4:x *tmp23
-    * op add *tmp24 .coreY :buildBlock.4:offsetY
-    * set :buildBlock.4:y *tmp24
+  180 op add :buildBlock.4:x .coreX :buildBlock.4:offsetX
+  181 op add :buildBlock.4:y .coreY :buildBlock.4:offsetY
   182 set :buildBlockFromConfig:block :buildBlock.4:block
   183 set :buildBlockFromConfig:x :buildBlock.4:x
   184 set :buildBlockFromConfig:y :buildBlock.4:y
 
   256 setaddr *tmp27 *label60
   257 label *label54
   258 set :buildTitaniumDrill:count 0
-    * op add *tmp28 :buildTitaniumDrill:x :buildTitaniumDrill:xx
-    * set :checkOre:x *tmp28
+  259 op add :checkOre:x :buildTitaniumDrill:x :buildTitaniumDrill:xx
   260 set :checkOre:y :buildTitaniumDrill:y
   261 set :checkOre:count :buildTitaniumDrill:count
-    * ucontrol getBlock :checkOre:x :checkOre:y :checkOre:type *tmp30 :checkOre:floor
+  262 ucontrol getBlock :checkOre:x :checkOre:y :checkOre:type 0 :checkOre:floor
   263 op equal *tmp31 :checkOre:floor @ore-titanium
   264 jump *label62 equal *tmp31 false
   265 op add :checkOre:count :checkOre:count 1
 
   272 set :checkOre.1:x :buildTitaniumDrill:x
   273 set :checkOre.1:y *tmp34
   274 set :checkOre.1:count :buildTitaniumDrill:count
-    * ucontrol getBlock :checkOre.1:x :checkOre.1:y :checkOre.1:type *tmp36 :checkOre.1:floor
+  275 ucontrol getBlock :checkOre.1:x :checkOre.1:y :checkOre.1:type 0 :checkOre.1:floor
   276 op equal *tmp37 :checkOre.1:floor @ore-titanium
   277 jump *label65 equal *tmp37 false
   278 op add :checkOre.1:count :checkOre.1:count 1
 
   286 set :checkOre.2:x *tmp40
   287 set :checkOre.2:y *tmp41
   288 set :checkOre.2:count :buildTitaniumDrill:count
-    * ucontrol getBlock :checkOre.2:x :checkOre.2:y :checkOre.2:type *tmp43 :checkOre.2:floor
+  289 ucontrol getBlock :checkOre.2:x :checkOre.2:y :checkOre.2:type 0 :checkOre.2:floor
   290 op equal *tmp44 :checkOre.2:floor @ore-titanium
   291 jump *label68 equal *tmp44 false
   292 op add :checkOre.2:count :checkOre.2:count 1
 
   342 set :buildBlock.5:config null
   343 setaddr *tmp54 *label79
   344 label *label76
-    * op add *tmp55 .coreX :buildBlock.5:offsetX
-    * set :buildBlock.5:x *tmp55
-    * op add *tmp56 .coreY :buildBlock.5:offsetY
-    * set :buildBlock.5:y *tmp56
+  345 op add :buildBlock.5:x .coreX :buildBlock.5:offsetX
+  346 op add :buildBlock.5:y .coreY :buildBlock.5:offsetY
   347 set :buildBlockFromConfig:block :buildBlock.5:block
   348 set :buildBlockFromConfig:x :buildBlock.5:x
   349 set :buildBlockFromConfig:y :buildBlock.5:y
 
   378 set :buildBlock.6:config null
   379 setaddr *tmp58 *label85
   380 label *label82
-    * op add *tmp59 .coreX :buildBlock.6:offsetX
-    * set :buildBlock.6:x *tmp59
-    * op add *tmp60 .coreY :buildBlock.6:offsetY
-    * set :buildBlock.6:y *tmp60
+  381 op add :buildBlock.6:x .coreX :buildBlock.6:offsetX
+  382 op add :buildBlock.6:y .coreY :buildBlock.6:offsetY
   383 set :buildBlockFromConfig:block :buildBlock.6:block
   384 set :buildBlockFromConfig:x :buildBlock.6:x
   385 set :buildBlockFromConfig:y :buildBlock.6:y
 
   411 set :buildBlock.7:config null
   412 setaddr *tmp62 *label91
   413 label *label88
-    * op add *tmp63 .coreX :buildBlock.7:offsetX
-    * set :buildBlock.7:x *tmp63
-    * op add *tmp64 .coreY :buildBlock.7:offsetY
-    * set :buildBlock.7:y *tmp64
+  414 op add :buildBlock.7:x .coreX :buildBlock.7:offsetX
+  415 op add :buildBlock.7:y .coreY :buildBlock.7:offsetY
   416 set :buildBlockFromConfig:block :buildBlock.7:block
   417 set :buildBlockFromConfig:x :buildBlock.7:x
   418 set :buildBlockFromConfig:y :buildBlock.7:y
 
   444 set :buildBlock.8:config processor1
   445 setaddr *tmp66 *label97
   446 label *label94
-    * op add *tmp67 .coreX :buildBlock.8:offsetX
-    * set :buildBlock.8:x *tmp67
-    * op add *tmp68 .coreY :buildBlock.8:offsetY
-    * set :buildBlock.8:y *tmp68
+  447 op add :buildBlock.8:x .coreX :buildBlock.8:offsetX
+  448 op add :buildBlock.8:y .coreY :buildBlock.8:offsetY
   449 set :buildBlockFromConfig:block :buildBlock.8:block
   450 set :buildBlockFromConfig:x :buildBlock.8:x
   451 set :buildBlockFromConfig:y :buildBlock.8:y
 
   478 set :buildBlock.9:config @mono
   479 setaddr *tmp70 *label103
   480 label *label100
-    * op add *tmp71 .coreX :buildBlock.9:offsetX
-    * set :buildBlock.9:x *tmp71
-    * op add *tmp72 .coreY :buildBlock.9:offsetY
-    * set :buildBlock.9:y *tmp72
+  481 op add :buildBlock.9:x .coreX :buildBlock.9:offsetX
+  482 op add :buildBlock.9:y .coreY :buildBlock.9:offsetY
   483 set :buildBlockFromConfig:block :buildBlock.9:block
   484 set :buildBlockFromConfig:x :buildBlock.9:x
   485 set :buildBlockFromConfig:y :buildBlock.9:y
 
   610 setaddr :moveToBlock*retaddr *label134 (h:*label134)
   611 call *label3 *invalid :moveToBlock*retval (m:*label134) (h:*label134)
   612 label *label134
-    * sensor *tmp91 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp91
+  613 sensor :depositItems:cap :depositItems:block @itemCapacity
   614 label *label135
   615 ucontrol itemDrop :depositItems:block 30
   616 sensor *tmp92 :depositItems:block :depositItems:item
 
   640 return :depositItems*retaddr
   641 end
   642 label *label5
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp99 *tmp100
+  643 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp99 0
   644 op equal *tmp101 *tmp99 false
   645 jump *label144 equal *tmp101 false
   646 print "[salmon]"
 
   671 set .status3 :status3.2:text
   672 label *label150
   673 label *label151
-    * sensor *tmp103 @unit @firstItem
-    * set :mineOre:item *tmp103
+  674 sensor :mineOre:item @unit @firstItem
   675 op notEqual *tmp104 :mineOre:item null
   676 op notEqual *tmp105 :mineOre:item :mineOre:ore
   677 op land *tmp106 *tmp104 *tmp105
 
   697 return :mineOre*retaddr
   698 end
   699 label *label7
-    * set *tmp110 :mineOre.1:ore
-    * set :mineOre:ore *tmp110
+  700 set :mineOre:ore :mineOre.1:ore
   701 set :mineOre:amount 30
   702 set :mineOre:block .core
   703 setaddr :mineOre*retaddr *label158 (h:*label158)
 
   723 label *label161
   724 label *label162
   725 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp113 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp113
+  726 sensor :fetchBlock:unitItem @unit @firstItem
   727 op notEqual *tmp114 :fetchBlock:unitItem null
   728 op notEqual *tmp115 :fetchBlock:unitItem :fetchBlock:item
   729 op land *tmp116 *tmp114 *tmp115
 
   772 label *label177
   773 sensor *tmp130 :supplyBlock:block @itemCapacity
   774 sensor *tmp131 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp132 *tmp130 *tmp131
-    * set :supplyBlock:missing *tmp132
+  775 op sub :supplyBlock:missing *tmp130 *tmp131
   776 op greaterThan *tmp133 :supplyBlock:missing 0
   777 jump *label178 equal *tmp133 false
   778 set :mineOre:ore :supplyBlock:ore
 
   812 label *label187
   813 sensor *tmp141 :supplyBlock.1:block @itemCapacity
   814 sensor *tmp142 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp143 *tmp141 *tmp142
-    * set :supplyBlock.1:missing *tmp143
+  815 op sub :supplyBlock.1:missing *tmp141 *tmp142
   816 op greaterThan *tmp144 :supplyBlock.1:missing 0
   817 jump *label188 equal *tmp144 false
   818 set :mineOre:ore :supplyBlock.1:ore
 
   845 label *label195
   846 sensor *tmp149 :supplyBlock.2:block @itemCapacity
   847 sensor *tmp150 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp151 *tmp149 *tmp150
-    * set :supplyBlock.2:missing *tmp151
+  848 op sub :supplyBlock.2:missing *tmp149 *tmp150
   849 op greaterThan *tmp152 :supplyBlock.2:missing 0
   850 jump *label196 equal *tmp152 false
   851 set :mineOre:ore :supplyBlock.2:ore
 
   883 label *label203
   884 sensor *tmp157 :supplyBlock.3:block @itemCapacity
   885 sensor *tmp158 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp159 *tmp157 *tmp158
-    * set :supplyBlock.3:missing *tmp159
+  886 op sub :supplyBlock.3:missing *tmp157 *tmp158
   887 op greaterThan *tmp160 :supplyBlock.3:missing 0
   888 jump *label204 equal *tmp160 false
   889 set :mineOre:ore :supplyBlock.3:ore
 
   949 set :status1.6:text "Supplying base"
   950 set .status1 :status1.6:text
   951 label *label221
-    * sensor *tmp173 .core @coal
-    * set :supplyBlocks:coal *tmp173
-    * sensor *tmp174 .core @sand
-    * set :supplyBlocks:sand *tmp174
+  952 sensor :supplyBlocks:coal .core @coal
+  953 sensor :supplyBlocks:sand .core @sand
   954 op lessThanEq *tmp175 :supplyBlocks:coal :supplyBlocks:sand
   955 jump *label222 equal *tmp175 false
   956 set *tmp176 @coal
 
  1034 set :status3.3:text "Building..."
  1035 set .status3 :status3.3:text
  1036 label *label235
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp195 *tmp196
-    * set :buildBlockAt:building *tmp195
+ 1037 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1038 op notEqual *tmp197 :buildBlockAt:building null
  1039 jump *label236 equal *tmp197 false
  1040 op equal *tmp199 :buildBlockAt:type :buildBlockAt:block
 
  1059 label *label237
  1060 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1061 label *label241
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp201 :buildBlockAt:floor
-    * set :buildBlockAt:building *tmp201
+ 1062 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building :buildBlockAt:floor
  1063 label *label242
  1064 op notEqual *tmp202 :buildBlockAt:type :buildBlockAt:block
  1065 jump *label241 notEqual *tmp202 false

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   509 call *label10 *invalid :meetTarget*retval (m:*label105) (h:*label105)
   510 label *label105
   511 label *label106
-    * jump *label108 equal true false
   512 setaddr :supplyBlocks*retaddr *label109 (h:*label109)
   513 call *label9 *invalid :supplyBlocks*retval (m:*label109) (h:*label109)
   514 label *label109

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-35 instructions):
 
    20 ubind @poly
    21 ulocate building core false @copper .coreX .coreY 0 .core
    22 label *label14
-    * op equal *tmp4 .core null
-    * jump *label13 notEqual *tmp4 false
+   23 jump *label13 equal .core null
    24 label *label15
    25 set :buildBlock:block @graphite-press
    26 set :buildBlock:offsetX -1.5
 
   259 set :checkOre:y :buildTitaniumDrill:y
   260 set :checkOre:count :buildTitaniumDrill:count
   261 ucontrol getBlock :checkOre:x :checkOre:y :checkOre:type 0 :checkOre:floor
-    * op equal *tmp31 :checkOre:floor @ore-titanium
-    * jump *label62 equal *tmp31 false
+  262 jump *label62 notEqual :checkOre:floor @ore-titanium
   263 op add :checkOre:count :checkOre:count 1
   264 jump *label63 always
   265 label *label62
 
   271 set :checkOre.1:y *tmp34
   272 set :checkOre.1:count :buildTitaniumDrill:count
   273 ucontrol getBlock :checkOre.1:x :checkOre.1:y :checkOre.1:type 0 :checkOre.1:floor
-    * op equal *tmp37 :checkOre.1:floor @ore-titanium
-    * jump *label65 equal *tmp37 false
+  274 jump *label65 notEqual :checkOre.1:floor @ore-titanium
   275 op add :checkOre.1:count :checkOre.1:count 1
   276 jump *label66 always
   277 label *label65
 
   284 set :checkOre.2:y *tmp41
   285 set :checkOre.2:count :buildTitaniumDrill:count
   286 ucontrol getBlock :checkOre.2:x :checkOre.2:y :checkOre.2:type 0 :checkOre.2:floor
-    * op equal *tmp44 :checkOre.2:floor @ore-titanium
-    * jump *label68 equal *tmp44 false
+  287 jump *label68 notEqual :checkOre.2:floor @ore-titanium
   288 op add :checkOre.2:count :checkOre.2:count 1
   289 jump *label69 always
   290 label *label68
   291 label *label69
   292 label *label67
   293 set :buildTitaniumDrill:count :checkOre.2:count
-    * op greaterThan *tmp47 :buildTitaniumDrill:count :buildTitaniumDrill:best
-    * jump *label70 equal *tmp47 false
+  294 jump *label70 lessThanEq :buildTitaniumDrill:count :buildTitaniumDrill:best
   295 set :buildTitaniumDrill:bx :buildTitaniumDrill:xx
   296 set :buildTitaniumDrill:by :buildTitaniumDrill:yy
   297 set :buildTitaniumDrill:best :buildTitaniumDrill:count
-    * op equal *tmp49 :buildTitaniumDrill:count 3
-    * jump *label72 equal *tmp49 false
+  298 jump *label72 notEqual :buildTitaniumDrill:count 3
   299 jump *label56 always
   300 jump *label73 always
   301 label *label72
 
   525 label *label113
   526 label *label114
   527 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp73
-    * op equal *tmp74 *tmp73 false
-    * jump *label116 equal *tmp74 false
+  528 jump *label116 notEqual *tmp73 false
   529 op sub *tmp75 :moveTo:radius 0.5
   530 ucontrol approach :moveTo:x :moveTo:y *tmp75
   531 label *label115
 
   548 end
   549 label *label2
   550 sensor *tmp78 @unit @firstItem
-    * op notEqual *tmp79 *tmp78 null
-    * jump *label120 equal *tmp79 false
+  551 jump *label120 equal *tmp78 null
   552 ucontrol itemDrop @air 1000
   553 jump *label121 always
   554 label *label120
 
   560 label *label122
   561 label *label123
   562 sensor *tmp81 @unit @firstItem
-    * op notEqual *tmp82 *tmp81 null
-    * jump *label125 equal *tmp82 false
+  563 jump *label125 equal *tmp81 null
   564 ucontrol itemDrop @air 1000
   565 label *label124
   566 jump *label123 always
 
   585 set .status3 :status3.1:text
   586 label *label129
   587 sensor *tmp85 @unit @firstItem
-    * op equal *tmp86 *tmp85 :depositItems:item
-    * jump *label130 equal *tmp86 false
+  588 jump *label130 notEqual *tmp85 :depositItems:item
   589 op equal *tmp88 :depositItems:block .core
   590 op land *tmp89 :depositItems:fromMining *tmp88
   591 jump *label132 equal *tmp89 false
 
   603 label *label135
   604 ucontrol itemDrop :depositItems:block 30
   605 sensor *tmp92 :depositItems:block :depositItems:item
-    * op greaterThanEq *tmp93 *tmp92 :depositItems:cap
-    * jump *label138 equal *tmp93 false
+  606 jump *label138 lessThan *tmp92 :depositItems:cap
   607 jump *label137 always
   608 jump *label139 always
   609 label *label138
   610 label *label139
   611 label *label136
   612 sensor *tmp95 @unit @firstItem
-    * op notEqual *tmp96 *tmp95 null
-    * jump *label135 notEqual *tmp96 false
+  613 jump *label135 notEqual *tmp95 null
   614 label *label137
   615 jump *label131 always
   616 label *label130
   617 label *label140
   618 sensor *tmp97 @unit @firstItem
-    * op notEqual *tmp98 *tmp97 null
-    * jump *label142 equal *tmp98 false
+  619 jump *label142 equal *tmp97 null
   620 ucontrol itemDrop @air 1000
   621 label *label141
   622 jump *label140 always
 
   627 end
   628 label *label5
   629 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp99 0
-    * op equal *tmp101 *tmp99 false
-    * jump *label144 equal *tmp101 false
+  630 jump *label144 notEqual *tmp99 false
   631 print "[salmon]"
   632 print "Cannot locate "
   633 print :locateOre:ore
 
   668 ucontrol mine :mineOre:x :mineOre:y
   669 label *label152
   670 sensor *tmp108 @unit @totalItems
-    * op lessThan *tmp109 *tmp108 :mineOre:amount
-    * jump *label151 notEqual *tmp109 false
+  671 jump *label151 lessThan *tmp108 :mineOre:amount
   672 label *label153
   673 ucontrol unbind
   674 set :depositItems:block :mineOre:block
 
   734 end
   735 label *label9
   736 set :supplyBlocks:supplied false
-    * op equal *tmp122 .unloader1 null
-    * jump *label169 equal *tmp122 false
+  737 jump *label169 notEqual .unloader1 null
   738 sensor *tmp124 .core @graphite
-    * op lessThan *tmp125 *tmp124 .graphiteTarget
-    * jump *label171 equal *tmp125 false
+  739 jump *label171 greaterThanEq *tmp124 .graphiteTarget
   740 sensor *tmp127 .press @coal
-    * op lessThan *tmp128 *tmp127 5
-    * jump *label173 equal *tmp128 false
+  741 jump *label173 greaterThanEq *tmp127 5
   742 set :status1:text "Meeting the graphite target"
   743 set .status1 :status1:text
   744 label *label175
 
   754 sensor *tmp130 :supplyBlock:block @itemCapacity
   755 sensor *tmp131 :supplyBlock:block :supplyBlock:ore
   756 op sub :supplyBlock:missing *tmp130 *tmp131
-    * op greaterThan *tmp133 :supplyBlock:missing 0
-    * jump *label178 equal *tmp133 false
+  757 jump *label178 lessThanEq :supplyBlock:missing 0
   758 set :mineOre:ore :supplyBlock:ore
   759 set :mineOre:amount :supplyBlock:missing
   760 set :mineOre:block :supplyBlock:block
 
   773 label *label171
   774 label *label172
   775 sensor *tmp135 .core @silicon
-    * op lessThan *tmp136 *tmp135 .siliconTarget
-    * jump *label181 equal *tmp136 false
+  776 jump *label181 greaterThanEq *tmp135 .siliconTarget
   777 sensor *tmp138 .smelter @coal
-    * op lessThan *tmp139 *tmp138 5
-    * jump *label183 equal *tmp139 false
+  778 jump *label183 greaterThanEq *tmp138 5
   779 set :status1.1:text "Meeting the silicon target (coal)"
   780 set .status1 :status1.1:text
   781 label *label185
 
   791 sensor *tmp141 :supplyBlock.1:block @itemCapacity
   792 sensor *tmp142 :supplyBlock.1:block :supplyBlock.1:ore
   793 op sub :supplyBlock.1:missing *tmp141 *tmp142
-    * op greaterThan *tmp144 :supplyBlock.1:missing 0
-    * jump *label188 equal *tmp144 false
+  794 jump *label188 lessThanEq :supplyBlock.1:missing 0
   795 set :mineOre:ore :supplyBlock.1:ore
   796 set :mineOre:amount :supplyBlock.1:missing
   797 set :mineOre:block :supplyBlock.1:block
 
   806 jump *label184 always
   807 label *label183
   808 sensor *tmp146 .smelter @sand
-    * op lessThan *tmp147 *tmp146 5
-    * jump *label191 equal *tmp147 false
+  809 jump *label191 greaterThanEq *tmp146 5
   810 set :status1.2:text "Meeting the silicon target (sand)"
   811 set .status1 :status1.2:text
   812 label *label193
 
   822 sensor *tmp149 :supplyBlock.2:block @itemCapacity
   823 sensor *tmp150 :supplyBlock.2:block :supplyBlock.2:ore
   824 op sub :supplyBlock.2:missing *tmp149 *tmp150
-    * op greaterThan *tmp152 :supplyBlock.2:missing 0
-    * jump *label196 equal *tmp152 false
+  825 jump *label196 lessThanEq :supplyBlock.2:missing 0
   826 set :mineOre:ore :supplyBlock.2:ore
   827 set :mineOre:amount :supplyBlock.2:missing
   828 set :mineOre:block :supplyBlock.2:block
 
   842 label *label181
   843 label *label182
   844 sensor *tmp154 .battery @totalPower
-    * op lessThan *tmp155 *tmp154 .powerTarget
-    * jump *label199 equal *tmp155 false
+  845 jump *label199 greaterThanEq *tmp154 .powerTarget
   846 set :status1.3:text "Supplying generator"
   847 set .status1 :status1.3:text
   848 label *label201
 
   858 sensor *tmp157 :supplyBlock.3:block @itemCapacity
   859 sensor *tmp158 :supplyBlock.3:block :supplyBlock.3:ore
   860 op sub :supplyBlock.3:missing *tmp157 *tmp158
-    * op greaterThan *tmp160 :supplyBlock.3:missing 0
-    * jump *label204 equal *tmp160 false
+  861 jump *label204 lessThanEq :supplyBlock.3:missing 0
   862 set :mineOre:ore :supplyBlock.3:ore
   863 set :mineOre:amount :supplyBlock.3:missing
   864 set :mineOre:block :supplyBlock.3:block
 
   877 label *label169
   878 label *label170
   879 sensor *tmp162 .titanium_drill @titanium
-    * op lessThan *tmp163 *tmp162 7
-    * jump *label207 equal *tmp163 false
+  880 jump *label207 greaterThanEq *tmp162 7
   881 sensor *tmp165 .core @copper
-    * op lessThan *tmp166 *tmp165 .copperTarget
-    * jump *label209 equal *tmp166 false
+  882 jump *label209 greaterThanEq *tmp165 .copperTarget
   883 set :status1.4:text "Meeting the copper target"
   884 set .status1 :status1.4:text
   885 label *label211
 
   897 jump *label210 always
   898 label *label209
   899 sensor *tmp168 .core @lead
-    * op lessThan *tmp169 *tmp168 .leadTarget
-    * jump *label214 equal *tmp169 false
+  900 jump *label214 greaterThanEq *tmp168 .leadTarget
   901 set :status1.5:text "Meeting the lead target"
   902 set .status1 :status1.5:text
   903 label *label216
 
   914 label *label218
   915 jump *label215 always
   916 label *label214
-    * op equal *tmp171 :supplyBlocks:supplied false
-    * jump *label219 equal *tmp171 false
+  917 jump *label219 notEqual :supplyBlocks:supplied false
   918 set :status1.6:text "Supplying base"
   919 set .status1 :status1.6:text
   920 label *label221
   921 sensor :supplyBlocks:coal .core @coal
   922 sensor :supplyBlocks:sand .core @sand
-    * op lessThanEq *tmp175 :supplyBlocks:coal :supplyBlocks:sand
-    * jump *label222 equal *tmp175 false
+  923 jump *label222 greaterThan :supplyBlocks:coal :supplyBlocks:sand
   924 set *tmp176 @coal
   925 jump *label223 always
   926 label *label222
 
   982 sensor *tmp191 .core @titanium
   983 op lessThan *tmp192 *tmp191 .titaniumTarget
   984 op or *tmp194 *tmp189 *tmp192
-    * op notEqual *tmp193 *tmp194 false
-    * jump *label231 equal *tmp193 false
+  985 jump *label231 equal *tmp194 false
   986 setaddr :supplyBlocks*retaddr *label232 (h:*label232)
   987 call *label9 *invalid :supplyBlocks*retval (m:*label232) (h:*label232)
   988 label *label232
 
  1002 set .status3 :status3.3:text
  1003 label *label235
  1004 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp197 :buildBlockAt:building null
-    * jump *label236 equal *tmp197 false
-    * op equal *tmp199 :buildBlockAt:type :buildBlockAt:block
-    * jump *label238 equal *tmp199 false
+ 1005 jump *label236 equal :buildBlockAt:building null
+ 1006 jump *label238 notEqual :buildBlockAt:type :buildBlockAt:block
  1007 set :buildBlockAt*retval :buildBlockAt:building
  1008 jump *label233 always
  1009 jump *label239 always
 
  1026 label *label241
  1027 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building :buildBlockAt:floor
  1028 label *label242
-    * op notEqual *tmp202 :buildBlockAt:type :buildBlockAt:block
-    * jump *label241 notEqual *tmp202 false
+ 1029 jump *label241 notEqual :buildBlockAt:type :buildBlockAt:block
  1030 label *label243
  1031 set :buildBlockAt*retval :buildBlockAt:building
  1032 jump *label233 always

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-23 instructions):
 
   261 ucontrol getBlock :checkOre:x :checkOre:y :checkOre:type 0 :checkOre:floor
   262 jump *label62 notEqual :checkOre:floor @ore-titanium
   263 op add :checkOre:count :checkOre:count 1
-    * jump *label63 always
   264 label *label62
   265 label *label63
   266 label *label61
 
   272 ucontrol getBlock :checkOre.1:x :checkOre.1:y :checkOre.1:type 0 :checkOre.1:floor
   273 jump *label65 notEqual :checkOre.1:floor @ore-titanium
   274 op add :checkOre.1:count :checkOre.1:count 1
-    * jump *label66 always
   275 label *label65
   276 label *label66
   277 label *label64
 
   284 ucontrol getBlock :checkOre.2:x :checkOre.2:y :checkOre.2:type 0 :checkOre.2:floor
   285 jump *label68 notEqual :checkOre.2:floor @ore-titanium
   286 op add :checkOre.2:count :checkOre.2:count 1
-    * jump *label69 always
   287 label *label68
   288 label *label69
   289 label *label67
 
   294 set :buildTitaniumDrill:best :buildTitaniumDrill:count
   295 jump *label72 notEqual :buildTitaniumDrill:count 3
   296 jump *label56 always
-    * jump *label73 always
   297 label *label72
   298 label *label73
-    * jump *label71 always
   299 label *label70
   300 label *label71
   301 label *label55
 
   545 sensor *tmp78 @unit @firstItem
   546 jump *label120 equal *tmp78 null
   547 ucontrol itemDrop @air 1000
-    * jump *label121 always
   548 label *label120
   549 label *label121
   550 set :moveTo.1:x :moveToEmpty:x
 
   599 sensor *tmp92 :depositItems:block :depositItems:item
   600 jump *label138 lessThan *tmp92 :depositItems:cap
   601 jump *label137 always
-    * jump *label139 always
   602 label *label138
   603 label *label139
   604 label *label136
 
   627 printflush message1
   628 stop
   629 label *label146
-    * jump *label145 always
   630 label *label144
   631 label *label145
   632 label *label143
 
   654 op land *tmp106 *tmp104 *tmp105
   655 jump *label154 equal *tmp106 false
   656 jump *label153 always
-    * jump *label155 always
   657 label *label154
   658 label *label155
   659 ucontrol mine :mineOre:x :mineOre:y
 
   704 op land *tmp116 *tmp114 *tmp115
   705 jump *label165 equal *tmp116 false
   706 ucontrol itemDrop @air 1000
-    * jump *label166 always
   707 label *label165
   708 label *label166
   709 label *label163
 
   751 setaddr :mineOre*retaddr *label180 (h:*label180)
   752 call *label6 *invalid :mineOre*retval (m:*label180) (h:*label180)
   753 label *label180
-    * jump *label179 always
   754 label *label178
   755 label *label179
   756 label *label176
   757 set :supplyBlocks:supplied true
-    * jump *label174 always
   758 label *label173
   759 label *label174
-    * jump *label172 always
   760 label *label171
   761 label *label172
   762 sensor *tmp135 .core @silicon
 
   785 setaddr :mineOre*retaddr *label190 (h:*label190)
   786 call *label6 *invalid :mineOre*retval (m:*label190) (h:*label190)
   787 label *label190
-    * jump *label189 always
   788 label *label188
   789 label *label189
   790 label *label186
 
   815 setaddr :mineOre*retaddr *label198 (h:*label198)
   816 call *label6 *invalid :mineOre*retval (m:*label198) (h:*label198)
   817 label *label198
-    * jump *label197 always
   818 label *label196
   819 label *label197
   820 label *label194
   821 set :supplyBlocks:supplied true
-    * jump *label192 always
   822 label *label191
   823 label *label192
   824 label *label184
-    * jump *label182 always
   825 label *label181
   826 label *label182
   827 sensor *tmp154 .battery @totalPower
 
   848 setaddr :mineOre*retaddr *label206 (h:*label206)
   849 call *label6 *invalid :mineOre*retval (m:*label206) (h:*label206)
   850 label *label206
-    * jump *label205 always
   851 label *label204
   852 label *label205
   853 label *label202
   854 set :supplyBlocks:supplied true
-    * jump *label200 always
   855 label *label199
   856 label *label200
-    * jump *label170 always
   857 label *label169
   858 label *label170
   859 sensor *tmp162 .titanium_drill @titanium
 
   918 setaddr :mineOre.1*retaddr *label225 (h:*label225)
   919 call *label7 *invalid :mineOre.1*retval (m:*label225) (h:*label225)
   920 label *label225
-    * jump *label220 always
   921 label *label219
   922 label *label220
   923 label *label215
 
   985 jump *label238 notEqual :buildBlockAt:type :buildBlockAt:block
   986 set :buildBlockAt*retval :buildBlockAt:building
   987 jump *label233 always
-    * jump *label239 always
   988 label *label238
   989 label *label239
   990 print "[salmon]"
 
   997 printflush message1
   998 stop
   999 label *label240
-    * jump *label237 always
  1000 label *label236
  1001 label *label237
  1002 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-18 instructions):
 
    32 set :buildBlock:titanium 0
    33 set :buildBlock:rotation 0
    34 set :buildBlock:config null
-    * setaddr *tmp6 *label20
    35 label *label17
-    * op add :buildBlock:x .coreX :buildBlock:offsetX
-    * op add :buildBlock:y .coreY :buildBlock:offsetY
-    * set :buildBlockFromConfig:block :buildBlock:block
+   36 op add :buildBlock:x .coreX -1.5
+   37 op add :buildBlock:y .coreY 2.5
+   38 set :buildBlockFromConfig:block @graphite-press
    39 set :buildBlockFromConfig:x :buildBlock:x
    40 set :buildBlockFromConfig:y :buildBlock:y
-    * set :buildBlockFromConfig:copper :buildBlock:copper
-    * set :buildBlockFromConfig:lead :buildBlock:lead
-    * set :buildBlockFromConfig:graphite :buildBlock:graphite
-    * set :buildBlockFromConfig:silicon :buildBlock:silicon
-    * set :buildBlockFromConfig:titanium :buildBlock:titanium
-    * set :buildBlockFromConfig:rotation :buildBlock:rotation
-    * set :buildBlockFromConfig:config :buildBlock:config
+   41 set :buildBlockFromConfig:copper 75
+   42 set :buildBlockFromConfig:lead 30
+   43 set :buildBlockFromConfig:graphite 0
+   44 set :buildBlockFromConfig:silicon 0
+   45 set :buildBlockFromConfig:titanium 0
+   46 set :buildBlockFromConfig:rotation 0
+   47 set :buildBlockFromConfig:config null
    48 setaddr :buildBlockFromConfig*retaddr *label21 (h:*label21)
    49 call *label12 *invalid :buildBlockFromConfig*retval (m:*label21) (h:*label21)
    50 label *label21
 
    54 multijump *tmp6 0 0 (m:marker0)
    55 multilabel *label20 (m:marker0)
    56 label *label19
-    * set *tmp5 null
    57 label *label16
    58 set .press *tmp5
    59 set :buildBlock.1:block @battery
 
    66 set :buildBlock.1:titanium 0
    67 set :buildBlock.1:rotation 0
    68 set :buildBlock.1:config null
-    * setaddr *tmp10 *label26
    69 label *label23
-    * op add :buildBlock.1:x .coreX :buildBlock.1:offsetX
-    * op add :buildBlock.1:y .coreY :buildBlock.1:offsetY
-    * set :buildBlockFromConfig:block :buildBlock.1:block
+   70 op add :buildBlock.1:x .coreX 0
+   71 op add :buildBlock.1:y .coreY 4
+   72 set :buildBlockFromConfig:block @battery
    73 set :buildBlockFromConfig:x :buildBlock.1:x
    74 set :buildBlockFromConfig:y :buildBlock.1:y
-    * set :buildBlockFromConfig:copper :buildBlock.1:copper
-    * set :buildBlockFromConfig:lead :buildBlock.1:lead
-    * set :buildBlockFromConfig:graphite :buildBlock.1:graphite
-    * set :buildBlockFromConfig:silicon :buildBlock.1:silicon
-    * set :buildBlockFromConfig:titanium :buildBlock.1:titanium
-    * set :buildBlockFromConfig:rotation :buildBlock.1:rotation
-    * set :buildBlockFromConfig:config :buildBlock.1:config
+   75 set :buildBlockFromConfig:copper 5
+   76 set :buildBlockFromConfig:lead 20
+   77 set :buildBlockFromConfig:graphite 0
+   78 set :buildBlockFromConfig:silicon 0
+   79 set :buildBlockFromConfig:titanium 0
+   80 set :buildBlockFromConfig:rotation 0
+   81 set :buildBlockFromConfig:config null
    82 setaddr :buildBlockFromConfig*retaddr *label27 (h:*label27)
    83 call *label12 *invalid :buildBlockFromConfig*retval (m:*label27) (h:*label27)
    84 label *label27
 
    88 multijump *tmp10 0 0 (m:marker1)
    89 multilabel *label26 (m:marker1)
    90 label *label25
-    * set *tmp9 null
    91 label *label22
    92 set .battery *tmp9
    93 set :buildBlock.2:block @combustion-generator
 
   100 set :buildBlock.2:titanium 0
   101 set :buildBlock.2:rotation 0
   102 set :buildBlock.2:config null
-    * setaddr *tmp14 *label32
   103 label *label29
-    * op add :buildBlock.2:x .coreX :buildBlock.2:offsetX
-    * op add :buildBlock.2:y .coreY :buildBlock.2:offsetY
-    * set :buildBlockFromConfig:block :buildBlock.2:block
+  104 op add :buildBlock.2:x .coreX 0
+  105 op add :buildBlock.2:y .coreY 3
+  106 set :buildBlockFromConfig:block @combustion-generator
   107 set :buildBlockFromConfig:x :buildBlock.2:x
   108 set :buildBlockFromConfig:y :buildBlock.2:y
-    * set :buildBlockFromConfig:copper :buildBlock.2:copper
-    * set :buildBlockFromConfig:lead :buildBlock.2:lead
-    * set :buildBlockFromConfig:graphite :buildBlock.2:graphite
-    * set :buildBlockFromConfig:silicon :buildBlock.2:silicon
-    * set :buildBlockFromConfig:titanium :buildBlock.2:titanium
-    * set :buildBlockFromConfig:rotation :buildBlock.2:rotation
-    * set :buildBlockFromConfig:config :buildBlock.2:config
+  109 set :buildBlockFromConfig:copper 25
+  110 set :buildBlockFromConfig:lead 15
+  111 set :buildBlockFromConfig:graphite 0
+  112 set :buildBlockFromConfig:silicon 0
+  113 set :buildBlockFromConfig:titanium 0
+  114 set :buildBlockFromConfig:rotation 0
+  115 set :buildBlockFromConfig:config null
   116 setaddr :buildBlockFromConfig*retaddr *label33 (h:*label33)
   117 call *label12 *invalid :buildBlockFromConfig*retval (m:*label33) (h:*label33)
   118 label *label33
 
   122 multijump *tmp14 0 0 (m:marker2)
   123 multilabel *label32 (m:marker2)
   124 label *label31
-    * set *tmp13 null
   125 label *label28
   126 set .generator *tmp13
   127 set .powerTarget 1000
 
   135 set :buildBlock.3:titanium 0
   136 set :buildBlock.3:rotation 0
   137 set :buildBlock.3:config null
-    * setaddr *tmp18 *label38
   138 label *label35
-    * op add :buildBlock.3:x .coreX :buildBlock.3:offsetX
-    * op add :buildBlock.3:y .coreY :buildBlock.3:offsetY
-    * set :buildBlockFromConfig:block :buildBlock.3:block
+  139 op add :buildBlock.3:x .coreX -1
+  140 op add :buildBlock.3:y .coreY 4
+  141 set :buildBlockFromConfig:block @battery
   142 set :buildBlockFromConfig:x :buildBlock.3:x
   143 set :buildBlockFromConfig:y :buildBlock.3:y
-    * set :buildBlockFromConfig:copper :buildBlock.3:copper
-    * set :buildBlockFromConfig:lead :buildBlock.3:lead
-    * set :buildBlockFromConfig:graphite :buildBlock.3:graphite
-    * set :buildBlockFromConfig:silicon :buildBlock.3:silicon
-    * set :buildBlockFromConfig:titanium :buildBlock.3:titanium
-    * set :buildBlockFromConfig:rotation :buildBlock.3:rotation
-    * set :buildBlockFromConfig:config :buildBlock.3:config
+  144 set :buildBlockFromConfig:copper 5
+  145 set :buildBlockFromConfig:lead 20
+  146 set :buildBlockFromConfig:graphite 0
+  147 set :buildBlockFromConfig:silicon 0
+  148 set :buildBlockFromConfig:titanium 0
+  149 set :buildBlockFromConfig:rotation 0
+  150 set :buildBlockFromConfig:config null
   151 setaddr :buildBlockFromConfig*retaddr *label39 (h:*label39)
   152 call *label12 *invalid :buildBlockFromConfig*retval (m:*label39) (h:*label39)
   153 label *label39
 
   167 set :buildBlock.4:titanium 0
   168 set :buildBlock.4:rotation 0
   169 set :buildBlock.4:config null
-    * setaddr *tmp22 *label44
   170 label *label41
-    * op add :buildBlock.4:x .coreX :buildBlock.4:offsetX
-    * op add :buildBlock.4:y .coreY :buildBlock.4:offsetY
-    * set :buildBlockFromConfig:block :buildBlock.4:block
+  171 op add :buildBlock.4:x .coreX 1.5
+  172 op add :buildBlock.4:y .coreY 2.5
+  173 set :buildBlockFromConfig:block @silicon-smelter
   174 set :buildBlockFromConfig:x :buildBlock.4:x
   175 set :buildBlockFromConfig:y :buildBlock.4:y
-    * set :buildBlockFromConfig:copper :buildBlock.4:copper
-    * set :buildBlockFromConfig:lead :buildBlock.4:lead
-    * set :buildBlockFromConfig:graphite :buildBlock.4:graphite
-    * set :buildBlockFromConfig:silicon :buildBlock.4:silicon
-    * set :buildBlockFromConfig:titanium :buildBlock.4:titanium
-    * set :buildBlockFromConfig:rotation :buildBlock.4:rotation
-    * set :buildBlockFromConfig:config :buildBlock.4:config
+  176 set :buildBlockFromConfig:copper 30
+  177 set :buildBlockFromConfig:lead 25
+  178 set :buildBlockFromConfig:graphite 0
+  179 set :buildBlockFromConfig:silicon 0
+  180 set :buildBlockFromConfig:titanium 0
+  181 set :buildBlockFromConfig:rotation 0
+  182 set :buildBlockFromConfig:config null
   183 setaddr :buildBlockFromConfig*retaddr *label45 (h:*label45)
   184 call *label12 *invalid :buildBlockFromConfig*retval (m:*label45) (h:*label45)
   185 label *label45
 
   189 multijump *tmp22 0 0 (m:marker4)
   190 multilabel *label44 (m:marker4)
   191 label *label43
-    * set *tmp21 null
   192 label *label40
   193 set .smelter *tmp21
   194 set :buildTitaniumDrill:block @pneumatic-drill
 
   199 set :buildTitaniumDrill:titanium 0
   200 setaddr *tmp26 *label50
   201 label *label47
-    * set :meetTarget:block :buildTitaniumDrill:block
-    * set :meetTarget:copper :buildTitaniumDrill:copper
-    * set :meetTarget:lead :buildTitaniumDrill:lead
-    * set :meetTarget:graphite :buildTitaniumDrill:graphite
-    * set :meetTarget:silicon :buildTitaniumDrill:silicon
-    * set :meetTarget:titanium :buildTitaniumDrill:titanium
+  202 set :meetTarget:block @pneumatic-drill
+  203 set :meetTarget:copper 18
+  204 set :meetTarget:lead 0
+  205 set :meetTarget:graphite 10
+  206 set :meetTarget:silicon 0
+  207 set :meetTarget:titanium 0
   208 setaddr :meetTarget*retaddr *label51 (h:*label51)
   209 call *label10 *invalid :meetTarget*retval (m:*label51) (h:*label51)
   210 label *label51
 
   218 label *label52
   219 set :buildTitaniumDrill:x :locateOre:x
   220 set :buildTitaniumDrill:y :locateOre:y
-    * set :moveTo.1:x :buildTitaniumDrill:x
-    * set :moveTo.1:y :buildTitaniumDrill:y
+  221 set :moveTo.1:x :locateOre:x
+  222 set :moveTo.1:y :locateOre:y
   223 setaddr :moveTo.1*retaddr *label53 (h:*label53)
   224 call *label1 *invalid :moveTo.1*retval (m:*label53) (h:*label53)
   225 label *label53
 
   248 set :buildTitaniumDrill:count 0
   249 op add :checkOre:x :buildTitaniumDrill:x :buildTitaniumDrill:xx
   250 set :checkOre:y :buildTitaniumDrill:y
-    * set :checkOre:count :buildTitaniumDrill:count
-    * ucontrol getBlock :checkOre:x :checkOre:y :checkOre:type 0 :checkOre:floor
+  251 set :checkOre:count 0
+  252 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
   253 jump *label62 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count :checkOre:count 1
+  254 op add :checkOre:count :buildTitaniumDrill:count 1
   255 label *label62
   256 label *label63
   257 label *label61
 
   259 op add *tmp34 :buildTitaniumDrill:y :buildTitaniumDrill:yy
   260 set :checkOre.1:x :buildTitaniumDrill:x
   261 set :checkOre.1:y *tmp34
-    * set :checkOre.1:count :buildTitaniumDrill:count
-    * ucontrol getBlock :checkOre.1:x :checkOre.1:y :checkOre.1:type 0 :checkOre.1:floor
+  262 set :checkOre.1:count :checkOre:count
+  263 ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
   264 jump *label65 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :checkOre.1:count 1
+  265 op add :checkOre.1:count :buildTitaniumDrill:count 1
   266 label *label65
   267 label *label66
   268 label *label64
   269 set :buildTitaniumDrill:count :checkOre.1:count
   270 op add *tmp40 :buildTitaniumDrill:x :buildTitaniumDrill:xx
   271 op add *tmp41 :buildTitaniumDrill:y :buildTitaniumDrill:yy
-    * set :checkOre.2:x *tmp40
-    * set :checkOre.2:y *tmp41
-    * set :checkOre.2:count :buildTitaniumDrill:count
-    * ucontrol getBlock :checkOre.2:x :checkOre.2:y :checkOre.2:type 0 :checkOre.2:floor
+  272 set :checkOre.2:x :checkOre:x
+  273 set :checkOre.2:y *tmp34
+  274 set :checkOre.2:count :checkOre.1:count
+  275 ucontrol getBlock *tmp40 *tmp41 :checkOre.2:type 0 :checkOre.2:floor
   276 jump *label68 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :checkOre.2:count 1
+  277 op add :checkOre.2:count :buildTitaniumDrill:count 1
   278 label *label68
   279 label *label69
   280 label *label67
   281 set :buildTitaniumDrill:count :checkOre.2:count
-    * jump *label70 lessThanEq :buildTitaniumDrill:count :buildTitaniumDrill:best
+  282 jump *label70 lessThanEq :checkOre.2:count :buildTitaniumDrill:best
   283 set :buildTitaniumDrill:bx :buildTitaniumDrill:xx
   284 set :buildTitaniumDrill:by :buildTitaniumDrill:yy
-    * set :buildTitaniumDrill:best :buildTitaniumDrill:count
-    * jump *label72 notEqual :buildTitaniumDrill:count 3
+  285 set :buildTitaniumDrill:best :checkOre.2:count
+  286 jump *label72 notEqual :checkOre.2:count 3
   287 jump *label56 always
   288 label *label72
   289 label *label73
 
   307 label *label74
   308 set *tmp25 :buildBlockAt*retval
   309 jump *label46 always
-    * set *tmp25 null
   310 label *label46
-    * set .titanium_drill *tmp25
+  311 set .titanium_drill :buildBlockAt*retval
   312 set :buildBlock.5:block @unloader
   313 set :buildBlock.5:offsetX 0
   314 set :buildBlock.5:offsetY 2
 
   319 set :buildBlock.5:titanium 25
   320 set :buildBlock.5:rotation 0
   321 set :buildBlock.5:config null
-    * setaddr *tmp54 *label79
   322 label *label76
-    * op add :buildBlock.5:x .coreX :buildBlock.5:offsetX
-    * op add :buildBlock.5:y .coreY :buildBlock.5:offsetY
-    * set :buildBlockFromConfig:block :buildBlock.5:block
+  323 op add :buildBlock.5:x .coreX 0
+  324 op add :buildBlock.5:y .coreY 2
+  325 set :buildBlockFromConfig:block @unloader
   326 set :buildBlockFromConfig:x :buildBlock.5:x
   327 set :buildBlockFromConfig:y :buildBlock.5:y
-    * set :buildBlockFromConfig:copper :buildBlock.5:copper
-    * set :buildBlockFromConfig:lead :buildBlock.5:lead
-    * set :buildBlockFromConfig:graphite :buildBlock.5:graphite
-    * set :buildBlockFromConfig:silicon :buildBlock.5:silicon
-    * set :buildBlockFromConfig:titanium :buildBlock.5:titanium
-    * set :buildBlockFromConfig:rotation :buildBlock.5:rotation
-    * set :buildBlockFromConfig:config :buildBlock.5:config
+  328 set :buildBlockFromConfig:copper 0
+  329 set :buildBlockFromConfig:lead 0
+  330 set :buildBlockFromConfig:graphite 0
+  331 set :buildBlockFromConfig:silicon 30
+  332 set :buildBlockFromConfig:titanium 25
+  333 set :buildBlockFromConfig:rotation 0
+  334 set :buildBlockFromConfig:config null
   335 setaddr :buildBlockFromConfig*retaddr *label80 (h:*label80)
   336 call *label12 *invalid :buildBlockFromConfig*retval (m:*label80) (h:*label80)
   337 label *label80
 
   341 multijump *tmp54 0 0 (m:marker7)
   342 multilabel *label79 (m:marker7)
   343 label *label78
-    * set *tmp53 null
   344 label *label75
   345 set .unloader1 *tmp53
   346 set :buildBlock.6:block @unloader
 
   353 set :buildBlock.6:titanium 25
   354 set :buildBlock.6:rotation 0
   355 set :buildBlock.6:config null
-    * setaddr *tmp58 *label85
   356 label *label82
-    * op add :buildBlock.6:x .coreX :buildBlock.6:offsetX
-    * op add :buildBlock.6:y .coreY :buildBlock.6:offsetY
-    * set :buildBlockFromConfig:block :buildBlock.6:block
+  357 op add :buildBlock.6:x .coreX -2
+  358 op add :buildBlock.6:y .coreY 0
+  359 set :buildBlockFromConfig:block @unloader
   360 set :buildBlockFromConfig:x :buildBlock.6:x
   361 set :buildBlockFromConfig:y :buildBlock.6:y
-    * set :buildBlockFromConfig:copper :buildBlock.6:copper
-    * set :buildBlockFromConfig:lead :buildBlock.6:lead
-    * set :buildBlockFromConfig:graphite :buildBlock.6:graphite
-    * set :buildBlockFromConfig:silicon :buildBlock.6:silicon
-    * set :buildBlockFromConfig:titanium :buildBlock.6:titanium
-    * set :buildBlockFromConfig:rotation :buildBlock.6:rotation
-    * set :buildBlockFromConfig:config :buildBlock.6:config
+  362 set :buildBlockFromConfig:copper 0
+  363 set :buildBlockFromConfig:lead 0
+  364 set :buildBlockFromConfig:graphite 0
+  365 set :buildBlockFromConfig:silicon 30
+  366 set :buildBlockFromConfig:titanium 25
+  367 set :buildBlockFromConfig:rotation 0
+  368 set :buildBlockFromConfig:config null
   369 setaddr :buildBlockFromConfig*retaddr *label86 (h:*label86)
   370 call *label12 *invalid :buildBlockFromConfig*retval (m:*label86) (h:*label86)
   371 label *label86
 
   385 set :buildBlock.7:titanium 0
   386 set :buildBlock.7:rotation 0
   387 set :buildBlock.7:config null
-    * setaddr *tmp62 *label91
   388 label *label88
-    * op add :buildBlock.7:x .coreX :buildBlock.7:offsetX
-    * op add :buildBlock.7:y .coreY :buildBlock.7:offsetY
-    * set :buildBlockFromConfig:block :buildBlock.7:block
+  389 op add :buildBlock.7:x .coreX -2
+  390 op add :buildBlock.7:y .coreY 1
+  391 set :buildBlockFromConfig:block @power-node
   392 set :buildBlockFromConfig:x :buildBlock.7:x
   393 set :buildBlockFromConfig:y :buildBlock.7:y
-    * set :buildBlockFromConfig:copper :buildBlock.7:copper
-    * set :buildBlockFromConfig:lead :buildBlock.7:lead
-    * set :buildBlockFromConfig:graphite :buildBlock.7:graphite
-    * set :buildBlockFromConfig:silicon :buildBlock.7:silicon
-    * set :buildBlockFromConfig:titanium :buildBlock.7:titanium
-    * set :buildBlockFromConfig:rotation :buildBlock.7:rotation
-    * set :buildBlockFromConfig:config :buildBlock.7:config
+  394 set :buildBlockFromConfig:copper 2
+  395 set :buildBlockFromConfig:lead 6
+  396 set :buildBlockFromConfig:graphite 0
+  397 set :buildBlockFromConfig:silicon 0
+  398 set :buildBlockFromConfig:titanium 0
+  399 set :buildBlockFromConfig:rotation 0
+  400 set :buildBlockFromConfig:config null
   401 setaddr :buildBlockFromConfig*retaddr *label92 (h:*label92)
   402 call *label12 *invalid :buildBlockFromConfig*retval (m:*label92) (h:*label92)
   403 label *label92
 
   417 set :buildBlock.8:titanium 0
   418 set :buildBlock.8:rotation 0
   419 set :buildBlock.8:config processor1
-    * setaddr *tmp66 *label97
   420 label *label94
-    * op add :buildBlock.8:x .coreX :buildBlock.8:offsetX
-    * op add :buildBlock.8:y .coreY :buildBlock.8:offsetY
-    * set :buildBlockFromConfig:block :buildBlock.8:block
+  421 op add :buildBlock.8:x .coreX 1
+  422 op add :buildBlock.8:y .coreY 4
+  423 set :buildBlockFromConfig:block @micro-processor
   424 set :buildBlockFromConfig:x :buildBlock.8:x
   425 set :buildBlockFromConfig:y :buildBlock.8:y
-    * set :buildBlockFromConfig:copper :buildBlock.8:copper
-    * set :buildBlockFromConfig:lead :buildBlock.8:lead
-    * set :buildBlockFromConfig:graphite :buildBlock.8:graphite
-    * set :buildBlockFromConfig:silicon :buildBlock.8:silicon
-    * set :buildBlockFromConfig:titanium :buildBlock.8:titanium
-    * set :buildBlockFromConfig:rotation :buildBlock.8:rotation
-    * set :buildBlockFromConfig:config :buildBlock.8:config
+  426 set :buildBlockFromConfig:copper 90
+  427 set :buildBlockFromConfig:lead 50
+  428 set :buildBlockFromConfig:graphite 0
+  429 set :buildBlockFromConfig:silicon 50
+  430 set :buildBlockFromConfig:titanium 0
+  431 set :buildBlockFromConfig:rotation 0
+  432 set :buildBlockFromConfig:config processor1
   433 setaddr :buildBlockFromConfig*retaddr *label98 (h:*label98)
   434 call *label12 *invalid :buildBlockFromConfig*retval (m:*label98) (h:*label98)
   435 label *label98
 
   439 multilabel *label97 (m:marker10)
   440 label *label96
   441 label *label93
-    * write false .processor ".pressEnabled"
+  442 write false null ".pressEnabled"
   443 set :buildBlock.9:block @air-factory
   444 set :buildBlock.9:offsetX -4
   445 set :buildBlock.9:offsetY -1
 
   450 set :buildBlock.9:titanium 0
   451 set :buildBlock.9:rotation 3
   452 set :buildBlock.9:config @mono
-    * setaddr *tmp70 *label103
   453 label *label100
-    * op add :buildBlock.9:x .coreX :buildBlock.9:offsetX
-    * op add :buildBlock.9:y .coreY :buildBlock.9:offsetY
-    * set :buildBlockFromConfig:block :buildBlock.9:block
+  454 op add :buildBlock.9:x .coreX -4
+  455 op add :buildBlock.9:y .coreY -1
+  456 set :buildBlockFromConfig:block @air-factory
   457 set :buildBlockFromConfig:x :buildBlock.9:x
   458 set :buildBlockFromConfig:y :buildBlock.9:y
-    * set :buildBlockFromConfig:copper :buildBlock.9:copper
-    * set :buildBlockFromConfig:lead :buildBlock.9:lead
-    * set :buildBlockFromConfig:graphite :buildBlock.9:graphite
-    * set :buildBlockFromConfig:silicon :buildBlock.9:silicon
-    * set :buildBlockFromConfig:titanium :buildBlock.9:titanium
-    * set :buildBlockFromConfig:rotation :buildBlock.9:rotation
-    * set :buildBlockFromConfig:config :buildBlock.9:config
+  459 set :buildBlockFromConfig:copper 60
+  460 set :buildBlockFromConfig:lead 70
+  461 set :buildBlockFromConfig:graphite 0
+  462 set :buildBlockFromConfig:silicon 0
+  463 set :buildBlockFromConfig:titanium 0
+  464 set :buildBlockFromConfig:rotation 3
+  465 set :buildBlockFromConfig:config @mono
   466 setaddr :buildBlockFromConfig*retaddr *label104 (h:*label104)
   467 call *label12 *invalid :buildBlockFromConfig*retval (m:*label104) (h:*label104)
   468 label *label104
 
   500 end
   501 label *label0
   502 set :status3:text "Moving..."
-    * set .status3 :status3:text
+  503 set .status3 "Moving..."
   504 label *label113
   505 label *label114
   506 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp73
 
   516 label *label1
   517 set *tmp76 :moveTo.1:x
   518 set *tmp77 :moveTo.1:y
-    * set :moveTo:x *tmp76
-    * set :moveTo:y *tmp77
+  519 set :moveTo:x :moveTo.1:x
+  520 set :moveTo:y :moveTo.1:y
   521 set :moveTo:radius 5
   522 setaddr :moveTo*retaddr *label118 (h:*label118)
   523 call *label0 *invalid :moveTo*retval (m:*label118) (h:*label118)
 
   560 end
   561 label *label4
   562 set :status3.1:text "Depositing..."
-    * set .status3 :status3.1:text
+  563 set .status3 "Depositing..."
   564 label *label129
   565 sensor *tmp85 @unit @firstItem
   566 jump *label130 notEqual *tmp85 :depositItems:item
 
   623 label *label148
   624 set :mineOre:x :locateOre:x
   625 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+  626 set :moveToEmpty:x :locateOre:x
+  627 set :moveToEmpty:y :locateOre:y
   628 setaddr :moveToEmpty*retaddr *label149 (h:*label149)
   629 call *label2 *invalid :moveToEmpty*retval (m:*label149) (h:*label149)
   630 label *label149
   631 set :status3.2:text "Mining..."
-    * set .status3 :status3.2:text
+  632 set .status3 "Mining..."
   633 label *label150
   634 label *label151
   635 sensor :mineOre:item @unit @firstItem
 
   669 set :status2:text "Fetching "
   670 set :status2:item :fetchBlock:item
   671 set :status2:block :fetchBlock:block
-    * set .status2 :status2:text
-    * set .item2 :status2:item
-    * set .block2 :status2:block
+  672 set .status2 "Fetching "
+  673 set .item2 :fetchBlock:item
+  674 set .block2 :fetchBlock:block
   675 label *label160
   676 sensor *tmp111 :fetchBlock:block @x
   677 sensor *tmp112 :fetchBlock:block @y
 
   714 sensor *tmp127 .press @coal
   715 jump *label173 greaterThanEq *tmp127 5
   716 set :status1:text "Meeting the graphite target"
-    * set .status1 :status1:text
+  717 set .status1 "Meeting the graphite target"
   718 label *label175
   719 set :supplyBlock:block .press
   720 set :supplyBlock:ore @coal
   721 set :status2.1:text "Supplying "
-    * set :status2.1:item :supplyBlock:ore
-    * set :status2.1:block :supplyBlock:block
-    * set .status2 :status2.1:text
-    * set .item2 :status2.1:item
-    * set .block2 :status2.1:block
+  722 set :status2.1:item @coal
+  723 set :status2.1:block .press
+  724 set .status2 "Supplying "
+  725 set .item2 :supplyBlock:ore
+  726 set .block2 :supplyBlock:block
   727 label *label177
-    * sensor *tmp130 :supplyBlock:block @itemCapacity
-    * sensor *tmp131 :supplyBlock:block :supplyBlock:ore
+  728 sensor *tmp130 .press @itemCapacity
+  729 sensor *tmp131 .press @coal
   730 op sub :supplyBlock:missing *tmp130 *tmp131
   731 jump *label178 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  732 set :mineOre:ore @coal
   733 set :mineOre:amount :supplyBlock:missing
-    * set :mineOre:block :supplyBlock:block
+  734 set :mineOre:block .press
   735 setaddr :mineOre*retaddr *label180 (h:*label180)
   736 call *label6 *invalid :mineOre*retval (m:*label180) (h:*label180)
   737 label *label180
 
   748 sensor *tmp138 .smelter @coal
   749 jump *label183 greaterThanEq *tmp138 5
   750 set :status1.1:text "Meeting the silicon target (coal)"
-    * set .status1 :status1.1:text
+  751 set .status1 "Meeting the silicon target (coal)"
   752 label *label185
   753 set :supplyBlock.1:block .smelter
   754 set :supplyBlock.1:ore @coal
   755 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock.1:ore
-    * set :status2.2:block :supplyBlock.1:block
-    * set .status2 :status2.2:text
-    * set .item2 :status2.2:item
-    * set .block2 :status2.2:block
+  756 set :status2.2:item @coal
+  757 set :status2.2:block .smelter
+  758 set .status2 "Supplying "
+  759 set .item2 :supplyBlock.1:ore
+  760 set .block2 :supplyBlock.1:block
   761 label *label187
-    * sensor *tmp141 :supplyBlock.1:block @itemCapacity
-    * sensor *tmp142 :supplyBlock.1:block :supplyBlock.1:ore
+  762 sensor *tmp141 .smelter @itemCapacity
+  763 sensor *tmp142 .smelter @coal
   764 op sub :supplyBlock.1:missing *tmp141 *tmp142
   765 jump *label188 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+  766 set :mineOre:ore @coal
   767 set :mineOre:amount :supplyBlock.1:missing
-    * set :mineOre:block :supplyBlock.1:block
+  768 set :mineOre:block .smelter
   769 setaddr :mineOre*retaddr *label190 (h:*label190)
   770 call *label6 *invalid :mineOre*retval (m:*label190) (h:*label190)
   771 label *label190
 
   778 sensor *tmp146 .smelter @sand
   779 jump *label191 greaterThanEq *tmp146 5
   780 set :status1.2:text "Meeting the silicon target (sand)"
-    * set .status1 :status1.2:text
+  781 set .status1 "Meeting the silicon target (sand)"
   782 label *label193
   783 set :supplyBlock.2:block .smelter
   784 set :supplyBlock.2:ore @sand
   785 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.2:ore
-    * set :status2.3:block :supplyBlock.2:block
-    * set .status2 :status2.3:text
-    * set .item2 :status2.3:item
-    * set .block2 :status2.3:block
+  786 set :status2.3:item @sand
+  787 set :status2.3:block .smelter
+  788 set .status2 "Supplying "
+  789 set .item2 :supplyBlock.2:ore
+  790 set .block2 :supplyBlock.2:block
   791 label *label195
-    * sensor *tmp149 :supplyBlock.2:block @itemCapacity
-    * sensor *tmp150 :supplyBlock.2:block :supplyBlock.2:ore
+  792 sensor *tmp149 .smelter @itemCapacity
+  793 sensor *tmp150 .smelter @sand
   794 op sub :supplyBlock.2:missing *tmp149 *tmp150
   795 jump *label196 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+  796 set :mineOre:ore @sand
   797 set :mineOre:amount :supplyBlock.2:missing
-    * set :mineOre:block :supplyBlock.2:block
+  798 set :mineOre:block .smelter
   799 setaddr :mineOre*retaddr *label198 (h:*label198)
   800 call *label6 *invalid :mineOre*retval (m:*label198) (h:*label198)
   801 label *label198
 
   811 sensor *tmp154 .battery @totalPower
   812 jump *label199 greaterThanEq *tmp154 .powerTarget
   813 set :status1.3:text "Supplying generator"
-    * set .status1 :status1.3:text
+  814 set .status1 "Supplying generator"
   815 label *label201
   816 set :supplyBlock.3:block .generator
   817 set :supplyBlock.3:ore @coal
   818 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.3:ore
-    * set :status2.4:block :supplyBlock.3:block
-    * set .status2 :status2.4:text
-    * set .item2 :status2.4:item
-    * set .block2 :status2.4:block
+  819 set :status2.4:item @coal
+  820 set :status2.4:block .generator
+  821 set .status2 "Supplying "
+  822 set .item2 :supplyBlock.3:ore
+  823 set .block2 :supplyBlock.3:block
   824 label *label203
-    * sensor *tmp157 :supplyBlock.3:block @itemCapacity
-    * sensor *tmp158 :supplyBlock.3:block :supplyBlock.3:ore
+  825 sensor *tmp157 .generator @itemCapacity
+  826 sensor *tmp158 .generator @coal
   827 op sub :supplyBlock.3:missing *tmp157 *tmp158
   828 jump *label204 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+  829 set :mineOre:ore @coal
   830 set :mineOre:amount :supplyBlock.3:missing
-    * set :mineOre:block :supplyBlock.3:block
+  831 set :mineOre:block .generator
   832 setaddr :mineOre*retaddr *label206 (h:*label206)
   833 call *label6 *invalid :mineOre*retval (m:*label206) (h:*label206)
   834 label *label206
 
   845 sensor *tmp165 .core @copper
   846 jump *label209 greaterThanEq *tmp165 .copperTarget
   847 set :status1.4:text "Meeting the copper target"
-    * set .status1 :status1.4:text
+  848 set .status1 "Meeting the copper target"
   849 label *label211
   850 set :status2.5:text "Mining "
   851 set :status2.5:item @copper
   852 set :status2.5:block "core"
-    * set .status2 :status2.5:text
-    * set .item2 :status2.5:item
-    * set .block2 :status2.5:block
+  853 set .status2 "Mining "
+  854 set .item2 @copper
+  855 set .block2 "core"
   856 label *label212
   857 set :mineOre.1:ore @copper
   858 setaddr :mineOre.1*retaddr *label213 (h:*label213)
 
   863 sensor *tmp168 .core @lead
   864 jump *label214 greaterThanEq *tmp168 .leadTarget
   865 set :status1.5:text "Meeting the lead target"
-    * set .status1 :status1.5:text
+  866 set .status1 "Meeting the lead target"
   867 label *label216
   868 set :status2.6:text "Mining "
   869 set :status2.6:item @lead
   870 set :status2.6:block "core"
-    * set .status2 :status2.6:text
-    * set .item2 :status2.6:item
-    * set .block2 :status2.6:block
+  871 set .status2 "Mining "
+  872 set .item2 @lead
+  873 set .block2 "core"
   874 label *label217
   875 set :mineOre.1:ore @lead
   876 setaddr :mineOre.1*retaddr *label218 (h:*label218)
 
   880 label *label214
   881 jump *label219 notEqual :supplyBlocks:supplied false
   882 set :status1.6:text "Supplying base"
-    * set .status1 :status1.6:text
+  883 set .status1 "Supplying base"
   884 label *label221
   885 sensor :supplyBlocks:coal .core @coal
   886 sensor :supplyBlocks:sand .core @sand
 
   892 label *label223
   893 set :supplyBlocks:ore *tmp176
   894 set :status2.7:text "Mining "
-    * set :status2.7:item :supplyBlocks:ore
+  895 set :status2.7:item *tmp176
   896 set :status2.7:block "core"
-    * set .status2 :status2.7:text
-    * set .item2 :status2.7:item
-    * set .block2 :status2.7:block
+  897 set .status2 "Mining "
+  898 set .item2 :supplyBlocks:ore
+  899 set .block2 "core"
   900 label *label224
-    * set :mineOre.1:ore :supplyBlocks:ore
+  901 set :mineOre.1:ore *tmp176
   902 setaddr :mineOre.1*retaddr *label225 (h:*label225)
   903 call *label7 *invalid :mineOre.1*retval (m:*label225) (h:*label225)
   904 label *label225
 
   909 jump *label208 always
   910 label *label207
   911 set :status1.7:text "Fetching titanium"
-    * set .status1 :status1.7:text
+  912 set .status1 "Fetching titanium"
   913 label *label226
   914 set :fetchBlock:block .titanium_drill
   915 set :fetchBlock:item @titanium
 
   962 call *label1 *invalid :moveTo.1*retval (m:*label234) (h:*label234)
   963 label *label234
   964 set :status3.3:text "Building..."
-    * set .status3 :status3.3:text
+  965 set .status3 "Building..."
   966 label *label235
   967 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
   968 jump *label236 equal :buildBlockAt:building null
 
   991 label *label243
   992 set :buildBlockAt*retval :buildBlockAt:building
   993 jump *label233 always
-    * set :buildBlockAt*retval null
   994 label *label233
   995 return :buildBlockAt*retaddr
   996 end
 
  1014 label *label246
  1015 set :buildBlockFromConfig*retval :buildBlockAt*retval
  1016 jump *label244 always
-    * set :buildBlockFromConfig*retval null
  1017 label *label244
  1018 return :buildBlockFromConfig*retaddr
  1019 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-160 instructions):
 
     3 set .smelter null
     4 set .titanium_drill null
     5 set .unloader1 null
-    * set .processor null
     6 set .nextBlock ""
     7 set .copperTarget 0
     8 set .leadTarget 0
 
    21 label *label14
    22 jump *label13 equal .core null
    23 label *label15
-    * set :buildBlock:block @graphite-press
-    * set :buildBlock:offsetX -1.5
-    * set :buildBlock:offsetY 2.5
-    * set :buildBlock:copper 75
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
    24 label *label17
    25 op add :buildBlock:x .coreX -1.5
    26 op add :buildBlock:y .coreY 2.5
 
    45 label *label19
    46 label *label16
    47 set .press *tmp5
-    * set :buildBlock.1:block @battery
-    * set :buildBlock.1:offsetX 0
-    * set :buildBlock.1:offsetY 4
-    * set :buildBlock.1:copper 5
-    * set :buildBlock.1:lead 20
-    * set :buildBlock.1:graphite 0
-    * set :buildBlock.1:silicon 0
-    * set :buildBlock.1:titanium 0
-    * set :buildBlock.1:rotation 0
-    * set :buildBlock.1:config null
    48 label *label23
    49 op add :buildBlock.1:x .coreX 0
    50 op add :buildBlock.1:y .coreY 4
 
    69 label *label25
    70 label *label22
    71 set .battery *tmp9
-    * set :buildBlock.2:block @combustion-generator
-    * set :buildBlock.2:offsetX 0
-    * set :buildBlock.2:offsetY 3
-    * set :buildBlock.2:copper 25
-    * set :buildBlock.2:lead 15
-    * set :buildBlock.2:graphite 0
-    * set :buildBlock.2:silicon 0
-    * set :buildBlock.2:titanium 0
-    * set :buildBlock.2:rotation 0
-    * set :buildBlock.2:config null
    72 label *label29
    73 op add :buildBlock.2:x .coreX 0
    74 op add :buildBlock.2:y .coreY 3
    75 set :buildBlockFromConfig:block @combustion-generator
-    * set :buildBlockFromConfig:x :buildBlock.2:x
+   76 set :buildBlockFromConfig:x :buildBlock.1:x
    77 set :buildBlockFromConfig:y :buildBlock.2:y
    78 set :buildBlockFromConfig:copper 25
    79 set :buildBlockFromConfig:lead 15
 
    94 label *label28
    95 set .generator *tmp13
    96 set .powerTarget 1000
-    * set :buildBlock.3:block @battery
-    * set :buildBlock.3:offsetX -1
-    * set :buildBlock.3:offsetY 4
-    * set :buildBlock.3:copper 5
-    * set :buildBlock.3:lead 20
-    * set :buildBlock.3:graphite 0
-    * set :buildBlock.3:silicon 0
-    * set :buildBlock.3:titanium 0
-    * set :buildBlock.3:rotation 0
-    * set :buildBlock.3:config null
    97 label *label35
    98 op add :buildBlock.3:x .coreX -1
    99 op add :buildBlock.3:y .coreY 4
   100 set :buildBlockFromConfig:block @battery
   101 set :buildBlockFromConfig:x :buildBlock.3:x
-    * set :buildBlockFromConfig:y :buildBlock.3:y
+  102 set :buildBlockFromConfig:y :buildBlock.1:y
   103 set :buildBlockFromConfig:copper 5
   104 set :buildBlockFromConfig:lead 20
   105 set :buildBlockFromConfig:graphite 0
 
   116 multilabel *label38 (m:marker3)
   117 label *label37
   118 label *label34
-    * set :buildBlock.4:block @silicon-smelter
-    * set :buildBlock.4:offsetX 1.5
-    * set :buildBlock.4:offsetY 2.5
-    * set :buildBlock.4:copper 30
-    * set :buildBlock.4:lead 25
-    * set :buildBlock.4:graphite 0
-    * set :buildBlock.4:silicon 0
-    * set :buildBlock.4:titanium 0
-    * set :buildBlock.4:rotation 0
-    * set :buildBlock.4:config null
   119 label *label41
   120 op add :buildBlock.4:x .coreX 1.5
   121 op add :buildBlock.4:y .coreY 2.5
   122 set :buildBlockFromConfig:block @silicon-smelter
   123 set :buildBlockFromConfig:x :buildBlock.4:x
-    * set :buildBlockFromConfig:y :buildBlock.4:y
+  124 set :buildBlockFromConfig:y :buildBlock:y
   125 set :buildBlockFromConfig:copper 30
   126 set :buildBlockFromConfig:lead 25
   127 set :buildBlockFromConfig:graphite 0
 
   140 label *label43
   141 label *label40
   142 set .smelter *tmp21
-    * set :buildTitaniumDrill:block @pneumatic-drill
-    * set :buildTitaniumDrill:copper 18
-    * set :buildTitaniumDrill:lead 0
-    * set :buildTitaniumDrill:graphite 10
-    * set :buildTitaniumDrill:silicon 0
-    * set :buildTitaniumDrill:titanium 0
   143 setaddr *tmp26 *label50
   144 label *label47
   145 set :meetTarget:block @pneumatic-drill
 
   190 label *label54
   191 set :buildTitaniumDrill:count 0
   192 op add :checkOre:x :buildTitaniumDrill:x :buildTitaniumDrill:xx
-    * set :checkOre:y :buildTitaniumDrill:y
   193 set :checkOre:count 0
   194 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
   195 jump *label62 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count :buildTitaniumDrill:count 1
+  196 op add :checkOre:count 0 1
   197 label *label62
   198 label *label63
   199 label *label61
   200 set :buildTitaniumDrill:count :checkOre:count
   201 op add *tmp34 :buildTitaniumDrill:y :buildTitaniumDrill:yy
-    * set :checkOre.1:x :buildTitaniumDrill:x
-    * set :checkOre.1:y *tmp34
   202 set :checkOre.1:count :checkOre:count
   203 ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
   204 jump *label65 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :buildTitaniumDrill:count 1
+  205 op add :checkOre.1:count :checkOre:count 1
   206 label *label65
   207 label *label66
   208 label *label64
   209 set :buildTitaniumDrill:count :checkOre.1:count
   210 op add *tmp40 :buildTitaniumDrill:x :buildTitaniumDrill:xx
   211 op add *tmp41 :buildTitaniumDrill:y :buildTitaniumDrill:yy
-    * set :checkOre.2:x :checkOre:x
-    * set :checkOre.2:y *tmp34
   212 set :checkOre.2:count :checkOre.1:count
-    * ucontrol getBlock *tmp40 *tmp41 :checkOre.2:type 0 :checkOre.2:floor
+  213 ucontrol getBlock :checkOre:x *tmp34 :checkOre.2:type 0 :checkOre.2:floor
   214 jump *label68 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :buildTitaniumDrill:count 1
+  215 op add :checkOre.2:count :checkOre.1:count 1
   216 label *label68
   217 label *label69
   218 label *label67
-    * set :buildTitaniumDrill:count :checkOre.2:count
   219 jump *label70 lessThanEq :checkOre.2:count :buildTitaniumDrill:best
   220 set :buildTitaniumDrill:bx :buildTitaniumDrill:xx
   221 set :buildTitaniumDrill:by :buildTitaniumDrill:yy
 
   242 setaddr :buildBlockAt*retaddr *label74 (h:*label74)
   243 call *label11 *invalid :buildBlockAt*retval (m:*label74) (h:*label74)
   244 label *label74
-    * set *tmp25 :buildBlockAt*retval
   245 jump *label46 always
   246 label *label46
   247 set .titanium_drill :buildBlockAt*retval
-    * set :buildBlock.5:block @unloader
-    * set :buildBlock.5:offsetX 0
-    * set :buildBlock.5:offsetY 2
-    * set :buildBlock.5:copper 0
-    * set :buildBlock.5:lead 0
-    * set :buildBlock.5:graphite 0
-    * set :buildBlock.5:silicon 30
-    * set :buildBlock.5:titanium 25
-    * set :buildBlock.5:rotation 0
-    * set :buildBlock.5:config null
   248 label *label76
   249 op add :buildBlock.5:x .coreX 0
   250 op add :buildBlock.5:y .coreY 2
   251 set :buildBlockFromConfig:block @unloader
-    * set :buildBlockFromConfig:x :buildBlock.5:x
+  252 set :buildBlockFromConfig:x :buildBlock.1:x
   253 set :buildBlockFromConfig:y :buildBlock.5:y
   254 set :buildBlockFromConfig:copper 0
   255 set :buildBlockFromConfig:lead 0
 
   269 label *label78
   270 label *label75
   271 set .unloader1 *tmp53
-    * set :buildBlock.6:block @unloader
-    * set :buildBlock.6:offsetX -2
-    * set :buildBlock.6:offsetY 0
-    * set :buildBlock.6:copper 0
-    * set :buildBlock.6:lead 0
-    * set :buildBlock.6:graphite 0
-    * set :buildBlock.6:silicon 30
-    * set :buildBlock.6:titanium 25
-    * set :buildBlock.6:rotation 0
-    * set :buildBlock.6:config null
   272 label *label82
   273 op add :buildBlock.6:x .coreX -2
   274 op add :buildBlock.6:y .coreY 0
-    * set :buildBlockFromConfig:block @unloader
   275 set :buildBlockFromConfig:x :buildBlock.6:x
   276 set :buildBlockFromConfig:y :buildBlock.6:y
-    * set :buildBlockFromConfig:copper 0
-    * set :buildBlockFromConfig:lead 0
   277 set :buildBlockFromConfig:graphite 0
-    * set :buildBlockFromConfig:silicon 30
   278 set :buildBlockFromConfig:titanium 25
   279 set :buildBlockFromConfig:rotation 0
   280 set :buildBlockFromConfig:config null
 
   287 multilabel *label85 (m:marker8)
   288 label *label84
   289 label *label81
-    * set :buildBlock.7:block @power-node
-    * set :buildBlock.7:offsetX -2
-    * set :buildBlock.7:offsetY 1
-    * set :buildBlock.7:copper 2
-    * set :buildBlock.7:lead 6
-    * set :buildBlock.7:graphite 0
-    * set :buildBlock.7:silicon 0
-    * set :buildBlock.7:titanium 0
-    * set :buildBlock.7:rotation 0
-    * set :buildBlock.7:config null
   290 label *label88
   291 op add :buildBlock.7:x .coreX -2
   292 op add :buildBlock.7:y .coreY 1
   293 set :buildBlockFromConfig:block @power-node
-    * set :buildBlockFromConfig:x :buildBlock.7:x
+  294 set :buildBlockFromConfig:x :buildBlock.6:x
   295 set :buildBlockFromConfig:y :buildBlock.7:y
   296 set :buildBlockFromConfig:copper 2
   297 set :buildBlockFromConfig:lead 6
 
   299 set :buildBlockFromConfig:silicon 0
   300 set :buildBlockFromConfig:titanium 0
   301 set :buildBlockFromConfig:rotation 0
-    * set :buildBlockFromConfig:config null
   302 setaddr :buildBlockFromConfig*retaddr *label92 (h:*label92)
   303 call *label12 *invalid :buildBlockFromConfig*retval (m:*label92) (h:*label92)
   304 label *label92
 
   308 multilabel *label91 (m:marker9)
   309 label *label90
   310 label *label87
-    * set :buildBlock.8:block @micro-processor
-    * set :buildBlock.8:offsetX 1
-    * set :buildBlock.8:offsetY 4
-    * set :buildBlock.8:copper 90
-    * set :buildBlock.8:lead 50
-    * set :buildBlock.8:graphite 0
-    * set :buildBlock.8:silicon 50
-    * set :buildBlock.8:titanium 0
-    * set :buildBlock.8:rotation 0
-    * set :buildBlock.8:config processor1
   311 label *label94
   312 op add :buildBlock.8:x .coreX 1
   313 op add :buildBlock.8:y .coreY 4
   314 set :buildBlockFromConfig:block @micro-processor
   315 set :buildBlockFromConfig:x :buildBlock.8:x
-    * set :buildBlockFromConfig:y :buildBlock.8:y
+  316 set :buildBlockFromConfig:y :buildBlock.1:y
   317 set :buildBlockFromConfig:copper 90
   318 set :buildBlockFromConfig:lead 50
   319 set :buildBlockFromConfig:graphite 0
   320 set :buildBlockFromConfig:silicon 50
   321 set :buildBlockFromConfig:titanium 0
-    * set :buildBlockFromConfig:rotation 0
   322 set :buildBlockFromConfig:config processor1
   323 setaddr :buildBlockFromConfig*retaddr *label98 (h:*label98)
   324 call *label12 *invalid :buildBlockFromConfig*retval (m:*label98) (h:*label98)
 
   330 label *label96
   331 label *label93
   332 write false null ".pressEnabled"
-    * set :buildBlock.9:block @air-factory
-    * set :buildBlock.9:offsetX -4
-    * set :buildBlock.9:offsetY -1
-    * set :buildBlock.9:copper 60
-    * set :buildBlock.9:lead 70
-    * set :buildBlock.9:graphite 0
-    * set :buildBlock.9:silicon 0
-    * set :buildBlock.9:titanium 0
-    * set :buildBlock.9:rotation 3
-    * set :buildBlock.9:config @mono
   333 label *label100
   334 op add :buildBlock.9:x .coreX -4
   335 op add :buildBlock.9:y .coreY -1
 
   338 set :buildBlockFromConfig:y :buildBlock.9:y
   339 set :buildBlockFromConfig:copper 60
   340 set :buildBlockFromConfig:lead 70
-    * set :buildBlockFromConfig:graphite 0
   341 set :buildBlockFromConfig:silicon 0
-    * set :buildBlockFromConfig:titanium 0
   342 set :buildBlockFromConfig:rotation 3
   343 set :buildBlockFromConfig:config @mono
   344 setaddr :buildBlockFromConfig*retaddr *label104 (h:*label104)
 
   377 jump *label111 always
   378 end
   379 label *label0
-    * set :status3:text "Moving..."
   380 set .status3 "Moving..."
   381 label *label113
   382 label *label114
 
   391 return :moveTo*retaddr
   392 end
   393 label *label1
-    * set *tmp76 :moveTo.1:x
-    * set *tmp77 :moveTo.1:y
   394 set :moveTo:x :moveTo.1:x
   395 set :moveTo:y :moveTo.1:y
   396 set :moveTo:radius 5
 
   434 return :moveToBlock*retaddr
   435 end
   436 label *label4
-    * set :status3.1:text "Depositing..."
   437 set .status3 "Depositing..."
   438 label *label129
   439 sensor *tmp85 @unit @firstItem
 
   502 setaddr :moveToEmpty*retaddr *label149 (h:*label149)
   503 call *label2 *invalid :moveToEmpty*retval (m:*label149) (h:*label149)
   504 label *label149
-    * set :status3.2:text "Mining..."
   505 set .status3 "Mining..."
   506 label *label150
   507 label *label151
 
   539 return :mineOre.1*retaddr
   540 end
   541 label *label8
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
   542 set .status2 "Fetching "
   543 set .item2 :fetchBlock:item
   544 set .block2 :fetchBlock:block
 
   583 jump *label171 greaterThanEq *tmp124 .graphiteTarget
   584 sensor *tmp127 .press @coal
   585 jump *label173 greaterThanEq *tmp127 5
-    * set :status1:text "Meeting the graphite target"
   586 set .status1 "Meeting the graphite target"
   587 label *label175
   588 set :supplyBlock:block .press
   589 set :supplyBlock:ore @coal
-    * set :status2.1:text "Supplying "
-    * set :status2.1:item @coal
-    * set :status2.1:block .press
   590 set .status2 "Supplying "
-    * set .item2 :supplyBlock:ore
-    * set .block2 :supplyBlock:block
+  591 set .item2 @coal
+  592 set .block2 .press
   593 label *label177
   594 sensor *tmp130 .press @itemCapacity
   595 sensor *tmp131 .press @coal
 
   613 jump *label181 greaterThanEq *tmp135 .siliconTarget
   614 sensor *tmp138 .smelter @coal
   615 jump *label183 greaterThanEq *tmp138 5
-    * set :status1.1:text "Meeting the silicon target (coal)"
   616 set .status1 "Meeting the silicon target (coal)"
   617 label *label185
   618 set :supplyBlock.1:block .smelter
   619 set :supplyBlock.1:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .smelter
   620 set .status2 "Supplying "
-    * set .item2 :supplyBlock.1:ore
-    * set .block2 :supplyBlock.1:block
+  621 set .item2 @coal
+  622 set .block2 .smelter
   623 label *label187
   624 sensor *tmp141 .smelter @itemCapacity
   625 sensor *tmp142 .smelter @coal
 
   639 label *label183
   640 sensor *tmp146 .smelter @sand
   641 jump *label191 greaterThanEq *tmp146 5
-    * set :status1.2:text "Meeting the silicon target (sand)"
   642 set .status1 "Meeting the silicon target (sand)"
   643 label *label193
   644 set :supplyBlock.2:block .smelter
   645 set :supplyBlock.2:ore @sand
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @sand
-    * set :status2.3:block .smelter
   646 set .status2 "Supplying "
-    * set .item2 :supplyBlock.2:ore
-    * set .block2 :supplyBlock.2:block
+  647 set .item2 @sand
+  648 set .block2 .smelter
   649 label *label195
   650 sensor *tmp149 .smelter @itemCapacity
   651 sensor *tmp150 .smelter @sand
 
   668 label *label182
   669 sensor *tmp154 .battery @totalPower
   670 jump *label199 greaterThanEq *tmp154 .powerTarget
-    * set :status1.3:text "Supplying generator"
   671 set .status1 "Supplying generator"
   672 label *label201
   673 set :supplyBlock.3:block .generator
   674 set :supplyBlock.3:ore @coal
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @coal
-    * set :status2.4:block .generator
   675 set .status2 "Supplying "
-    * set .item2 :supplyBlock.3:ore
-    * set .block2 :supplyBlock.3:block
+  676 set .item2 @coal
+  677 set .block2 .generator
   678 label *label203
   679 sensor *tmp157 .generator @itemCapacity
   680 sensor *tmp158 .generator @coal
 
   698 jump *label207 greaterThanEq *tmp162 7
   699 sensor *tmp165 .core @copper
   700 jump *label209 greaterThanEq *tmp165 .copperTarget
-    * set :status1.4:text "Meeting the copper target"
   701 set .status1 "Meeting the copper target"
   702 label *label211
-    * set :status2.5:text "Mining "
-    * set :status2.5:item @copper
-    * set :status2.5:block "core"
   703 set .status2 "Mining "
   704 set .item2 @copper
   705 set .block2 "core"
 
   712 label *label209
   713 sensor *tmp168 .core @lead
   714 jump *label214 greaterThanEq *tmp168 .leadTarget
-    * set :status1.5:text "Meeting the lead target"
   715 set .status1 "Meeting the lead target"
   716 label *label216
-    * set :status2.6:text "Mining "
-    * set :status2.6:item @lead
-    * set :status2.6:block "core"
   717 set .status2 "Mining "
   718 set .item2 @lead
   719 set .block2 "core"
 
   725 jump *label215 always
   726 label *label214
   727 jump *label219 notEqual :supplyBlocks:supplied false
-    * set :status1.6:text "Supplying base"
   728 set .status1 "Supplying base"
   729 label *label221
   730 sensor :supplyBlocks:coal .core @coal
 
   736 set *tmp176 @sand
   737 label *label223
   738 set :supplyBlocks:ore *tmp176
-    * set :status2.7:text "Mining "
-    * set :status2.7:item *tmp176
-    * set :status2.7:block "core"
   739 set .status2 "Mining "
-    * set .item2 :supplyBlocks:ore
+  740 set .item2 *tmp176
   741 set .block2 "core"
   742 label *label224
   743 set :mineOre.1:ore *tmp176
 
   750 label *label210
   751 jump *label208 always
   752 label *label207
-    * set :status1.7:text "Fetching titanium"
   753 set .status1 "Fetching titanium"
   754 label *label226
   755 set :fetchBlock:block .titanium_drill
 
   802 setaddr :moveTo.1*retaddr *label234 (h:*label234)
   803 call *label1 *invalid :moveTo.1*retval (m:*label234) (h:*label234)
   804 label *label234
-    * set :status3.3:text "Building..."
   805 set .status3 "Building..."
   806 label *label235
   807 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-25 instructions):
 
    70 label *label22
    71 set .battery *tmp9
    72 label *label29
-    * op add :buildBlock.2:x .coreX 0
    73 op add :buildBlock.2:y .coreY 3
    74 set :buildBlockFromConfig:block @combustion-generator
    75 set :buildBlockFromConfig:x :buildBlock.1:x
 
    95 set .powerTarget 1000
    96 label *label35
    97 op add :buildBlock.3:x .coreX -1
-    * op add :buildBlock.3:y .coreY 4
    98 set :buildBlockFromConfig:block @battery
    99 set :buildBlockFromConfig:x :buildBlock.3:x
   100 set :buildBlockFromConfig:y :buildBlock.1:y
 
   116 label *label34
   117 label *label41
   118 op add :buildBlock.4:x .coreX 1.5
-    * op add :buildBlock.4:y .coreY 2.5
   119 set :buildBlockFromConfig:block @silicon-smelter
   120 set :buildBlockFromConfig:x :buildBlock.4:x
   121 set :buildBlockFromConfig:y :buildBlock:y
   122 set :buildBlockFromConfig:copper 30
   123 set :buildBlockFromConfig:lead 25
   124 set :buildBlockFromConfig:graphite 0
-    * set :buildBlockFromConfig:silicon 0
   125 set :buildBlockFromConfig:titanium 0
   126 set :buildBlockFromConfig:rotation 0
   127 set :buildBlockFromConfig:config null
 
   184 set :buildTitaniumDrill:yy -1
   185 setaddr *tmp27 *label60
   186 label *label54
-    * set :buildTitaniumDrill:count 0
   187 op add :checkOre:x :buildTitaniumDrill:x :buildTitaniumDrill:xx
   188 set :checkOre:count 0
   189 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
 
   192 label *label62
   193 label *label63
   194 label *label61
-    * set :buildTitaniumDrill:count :checkOre:count
   195 op add *tmp34 :buildTitaniumDrill:y :buildTitaniumDrill:yy
   196 set :checkOre.1:count :checkOre:count
   197 ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
 
   200 label *label65
   201 label *label66
   202 label *label64
-    * set :buildTitaniumDrill:count :checkOre.1:count
-    * op add *tmp40 :buildTitaniumDrill:x :buildTitaniumDrill:xx
-    * op add *tmp41 :buildTitaniumDrill:y :buildTitaniumDrill:yy
   203 set :checkOre.2:count :checkOre.1:count
   204 ucontrol getBlock :checkOre:x *tmp34 :checkOre.2:type 0 :checkOre.2:floor
   205 jump *label68 notEqual :checkOre.2:floor @ore-titanium
 
   237 label *label46
   238 set .titanium_drill :buildBlockAt*retval
   239 label *label76
-    * op add :buildBlock.5:x .coreX 0
   240 op add :buildBlock.5:y .coreY 2
   241 set :buildBlockFromConfig:block @unloader
   242 set :buildBlockFromConfig:x :buildBlock.1:x
 
   267 set :buildBlockFromConfig:graphite 0
   268 set :buildBlockFromConfig:titanium 25
   269 set :buildBlockFromConfig:rotation 0
-    * set :buildBlockFromConfig:config null
   270 setaddr :buildBlockFromConfig*retaddr *label86 (h:*label86)
   271 call *label12 *invalid :buildBlockFromConfig*retval (m:*label86) (h:*label86)
   272 label *label86
 
   277 label *label84
   278 label *label81
   279 label *label88
-    * op add :buildBlock.7:x .coreX -2
   280 op add :buildBlock.7:y .coreY 1
   281 set :buildBlockFromConfig:block @power-node
   282 set :buildBlockFromConfig:x :buildBlock.6:x
 
   286 set :buildBlockFromConfig:graphite 0
   287 set :buildBlockFromConfig:silicon 0
   288 set :buildBlockFromConfig:titanium 0
-    * set :buildBlockFromConfig:rotation 0
   289 setaddr :buildBlockFromConfig*retaddr *label92 (h:*label92)
   290 call *label12 *invalid :buildBlockFromConfig*retval (m:*label92) (h:*label92)
   291 label *label92
 
   297 label *label87
   298 label *label94
   299 op add :buildBlock.8:x .coreX 1
-    * op add :buildBlock.8:y .coreY 4
   300 set :buildBlockFromConfig:block @micro-processor
   301 set :buildBlockFromConfig:x :buildBlock.8:x
   302 set :buildBlockFromConfig:y :buildBlock.1:y
   303 set :buildBlockFromConfig:copper 90
   304 set :buildBlockFromConfig:lead 50
-    * set :buildBlockFromConfig:graphite 0
   305 set :buildBlockFromConfig:silicon 50
-    * set :buildBlockFromConfig:titanium 0
   306 set :buildBlockFromConfig:config processor1
   307 setaddr :buildBlockFromConfig*retaddr *label98 (h:*label98)
   308 call *label12 *invalid :buildBlockFromConfig*retval (m:*label98) (h:*label98)
 
   569 jump *label173 greaterThanEq *tmp127 5
   570 set .status1 "Meeting the graphite target"
   571 label *label175
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
   572 set .status2 "Supplying "
   573 set .item2 @coal
   574 set .block2 .press
 
   597 jump *label183 greaterThanEq *tmp138 5
   598 set .status1 "Meeting the silicon target (coal)"
   599 label *label185
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
   600 set .status2 "Supplying "
   601 set .item2 @coal
   602 set .block2 .smelter
 
   621 jump *label191 greaterThanEq *tmp146 5
   622 set .status1 "Meeting the silicon target (sand)"
   623 label *label193
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
   624 set .status2 "Supplying "
   625 set .item2 @sand
   626 set .block2 .smelter
 
   648 jump *label199 greaterThanEq *tmp154 .powerTarget
   649 set .status1 "Supplying generator"
   650 label *label201
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
   651 set .status2 "Supplying "
   652 set .item2 @coal
   653 set .block2 .generator
 
   711 label *label222
   712 set *tmp176 @sand
   713 label *label223
-    * set :supplyBlocks:ore *tmp176
   714 set .status2 "Mining "
   715 set .item2 *tmp176
   716 set .block2 "core"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-5 instructions):
 
   101 set :buildBlockFromConfig:copper 5
   102 set :buildBlockFromConfig:lead 20
   103 set :buildBlockFromConfig:graphite 0
-    * set :buildBlockFromConfig:silicon 0
   104 set :buildBlockFromConfig:titanium 0
   105 set :buildBlockFromConfig:rotation 0
   106 set :buildBlockFromConfig:config null
 
   246 set :buildBlockFromConfig:silicon 30
   247 set :buildBlockFromConfig:titanium 25
   248 set :buildBlockFromConfig:rotation 0
-    * set :buildBlockFromConfig:config null
   249 setaddr :buildBlockFromConfig*retaddr *label80 (h:*label80)
   250 call *label12 *invalid :buildBlockFromConfig*retval (m:*label80) (h:*label80)
   251 label *label80
 
   263 set :buildBlockFromConfig:x :buildBlock.6:x
   264 set :buildBlockFromConfig:y :buildBlock.6:y
   265 set :buildBlockFromConfig:graphite 0
-    * set :buildBlockFromConfig:titanium 25
-    * set :buildBlockFromConfig:rotation 0
   266 setaddr :buildBlockFromConfig*retaddr *label86 (h:*label86)
   267 call *label12 *invalid :buildBlockFromConfig*retval (m:*label86) (h:*label86)
   268 label *label86
 
   279 set :buildBlockFromConfig:y :buildBlock.7:y
   280 set :buildBlockFromConfig:copper 2
   281 set :buildBlockFromConfig:lead 6
-    * set :buildBlockFromConfig:graphite 0
   282 set :buildBlockFromConfig:silicon 0
   283 set :buildBlockFromConfig:titanium 0
   284 setaddr :buildBlockFromConfig*retaddr *label92 (h:*label92)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-5 instructions):
 
    77 set :buildBlockFromConfig:copper 25
    78 set :buildBlockFromConfig:lead 15
    79 set :buildBlockFromConfig:graphite 0
-    * set :buildBlockFromConfig:silicon 0
    80 set :buildBlockFromConfig:titanium 0
    81 set :buildBlockFromConfig:rotation 0
    82 set :buildBlockFromConfig:config null
 
   120 set :buildBlockFromConfig:copper 30
   121 set :buildBlockFromConfig:lead 25
   122 set :buildBlockFromConfig:graphite 0
-    * set :buildBlockFromConfig:titanium 0
   123 set :buildBlockFromConfig:rotation 0
-    * set :buildBlockFromConfig:config null
   124 setaddr :buildBlockFromConfig*retaddr *label45 (h:*label45)
   125 call *label12 *invalid :buildBlockFromConfig*retval (m:*label45) (h:*label45)
   126 label *label45
 
   242 set :buildBlockFromConfig:graphite 0
   243 set :buildBlockFromConfig:silicon 30
   244 set :buildBlockFromConfig:titanium 25
-    * set :buildBlockFromConfig:rotation 0
   245 setaddr :buildBlockFromConfig*retaddr *label80 (h:*label80)
   246 call *label12 *invalid :buildBlockFromConfig*retval (m:*label80) (h:*label80)
   247 label *label80
 
   258 op add :buildBlock.6:y .coreY 0
   259 set :buildBlockFromConfig:x :buildBlock.6:x
   260 set :buildBlockFromConfig:y :buildBlock.6:y
-    * set :buildBlockFromConfig:graphite 0
   261 setaddr :buildBlockFromConfig*retaddr *label86 (h:*label86)
   262 call *label12 *invalid :buildBlockFromConfig*retval (m:*label86) (h:*label86)
   263 label *label86

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-5 instructions):
 
    54 set :buildBlockFromConfig:copper 5
    55 set :buildBlockFromConfig:lead 20
    56 set :buildBlockFromConfig:graphite 0
-    * set :buildBlockFromConfig:silicon 0
    57 set :buildBlockFromConfig:titanium 0
    58 set :buildBlockFromConfig:rotation 0
    59 set :buildBlockFromConfig:config null
 
    99 set :buildBlockFromConfig:copper 5
   100 set :buildBlockFromConfig:lead 20
   101 set :buildBlockFromConfig:graphite 0
-    * set :buildBlockFromConfig:titanium 0
   102 set :buildBlockFromConfig:rotation 0
-    * set :buildBlockFromConfig:config null
   103 setaddr :buildBlockFromConfig*retaddr *label39 (h:*label39)
   104 call *label12 *invalid :buildBlockFromConfig*retval (m:*label39) (h:*label39)
   105 label *label39
 
   117 set :buildBlockFromConfig:copper 30
   118 set :buildBlockFromConfig:lead 25
   119 set :buildBlockFromConfig:graphite 0
-    * set :buildBlockFromConfig:rotation 0
   120 setaddr :buildBlockFromConfig*retaddr *label45 (h:*label45)
   121 call *label12 *invalid :buildBlockFromConfig*retval (m:*label45) (h:*label45)
   122 label *label45
 
   235 set :buildBlockFromConfig:y :buildBlock.5:y
   236 set :buildBlockFromConfig:copper 0
   237 set :buildBlockFromConfig:lead 0
-    * set :buildBlockFromConfig:graphite 0
   238 set :buildBlockFromConfig:silicon 30
   239 set :buildBlockFromConfig:titanium 25
   240 setaddr :buildBlockFromConfig*retaddr *label80 (h:*label80)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-4 instructions):
 
    76 set :buildBlockFromConfig:copper 25
    77 set :buildBlockFromConfig:lead 15
    78 set :buildBlockFromConfig:graphite 0
-    * set :buildBlockFromConfig:titanium 0
    79 set :buildBlockFromConfig:rotation 0
-    * set :buildBlockFromConfig:config null
    80 setaddr :buildBlockFromConfig*retaddr *label33 (h:*label33)
    81 call *label12 *invalid :buildBlockFromConfig*retval (m:*label33) (h:*label33)
    82 label *label33
 
    97 set :buildBlockFromConfig:copper 5
    98 set :buildBlockFromConfig:lead 20
    99 set :buildBlockFromConfig:graphite 0
-    * set :buildBlockFromConfig:rotation 0
   100 setaddr :buildBlockFromConfig*retaddr *label39 (h:*label39)
   101 call *label12 *invalid :buildBlockFromConfig*retval (m:*label39) (h:*label39)
   102 label *label39
 
   113 set :buildBlockFromConfig:y :buildBlock:y
   114 set :buildBlockFromConfig:copper 30
   115 set :buildBlockFromConfig:lead 25
-    * set :buildBlockFromConfig:graphite 0
   116 setaddr :buildBlockFromConfig*retaddr *label45 (h:*label45)
   117 call *label12 *invalid :buildBlockFromConfig*retval (m:*label45) (h:*label45)
   118 label *label45

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-4 instructions):
 
    54 set :buildBlockFromConfig:copper 5
    55 set :buildBlockFromConfig:lead 20
    56 set :buildBlockFromConfig:graphite 0
-    * set :buildBlockFromConfig:titanium 0
    57 set :buildBlockFromConfig:rotation 0
-    * set :buildBlockFromConfig:config null
    58 setaddr :buildBlockFromConfig*retaddr *label27 (h:*label27)
    59 call *label12 *invalid :buildBlockFromConfig*retval (m:*label27) (h:*label27)
    60 label *label27
 
    74 set :buildBlockFromConfig:copper 25
    75 set :buildBlockFromConfig:lead 15
    76 set :buildBlockFromConfig:graphite 0
-    * set :buildBlockFromConfig:rotation 0
    77 setaddr :buildBlockFromConfig*retaddr *label33 (h:*label33)
    78 call *label12 *invalid :buildBlockFromConfig*retval (m:*label33) (h:*label33)
    79 label *label33
 
    93 set :buildBlockFromConfig:y :buildBlock.1:y
    94 set :buildBlockFromConfig:copper 5
    95 set :buildBlockFromConfig:lead 20
-    * set :buildBlockFromConfig:graphite 0
    96 setaddr :buildBlockFromConfig*retaddr *label39 (h:*label39)
    97 call *label12 *invalid :buildBlockFromConfig*retval (m:*label39) (h:*label39)
    98 label *label39

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 9 (-2 instructions):
 
    54 set :buildBlockFromConfig:copper 5
    55 set :buildBlockFromConfig:lead 20
    56 set :buildBlockFromConfig:graphite 0
-    * set :buildBlockFromConfig:rotation 0
    57 setaddr :buildBlockFromConfig*retaddr *label27 (h:*label27)
    58 call *label12 *invalid :buildBlockFromConfig*retval (m:*label27) (h:*label27)
    59 label *label27
 
    72 set :buildBlockFromConfig:y :buildBlock.2:y
    73 set :buildBlockFromConfig:copper 25
    74 set :buildBlockFromConfig:lead 15
-    * set :buildBlockFromConfig:graphite 0
    75 setaddr :buildBlockFromConfig*retaddr *label33 (h:*label33)
    76 call *label12 *invalid :buildBlockFromConfig*retval (m:*label33) (h:*label33)
    77 label *label33

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 10 (-1 instructions):
 
    53 set :buildBlockFromConfig:y :buildBlock.1:y
    54 set :buildBlockFromConfig:copper 5
    55 set :buildBlockFromConfig:lead 20
-    * set :buildBlockFromConfig:graphite 0
    56 setaddr :buildBlockFromConfig*retaddr *label27 (h:*label27)
    57 call *label12 *invalid :buildBlockFromConfig*retval (m:*label27) (h:*label27)
    58 label *label27

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    21 label *label14
    22 jump *label13 equal .core null
    23 label *label15
+   24 op add :buildBlock:x .coreX -1.5
+   25 op add :buildBlock:y .coreY 2.5
+   26 set :buildBlockFromConfig:block @graphite-press
+   27 set :buildBlockFromConfig:x :buildBlock:x
+   28 set :buildBlockFromConfig:y :buildBlock:y
+   29 set :buildBlockFromConfig:copper 75
+   30 set :buildBlockFromConfig:lead 30
+   31 set :buildBlockFromConfig:graphite 0
+   32 set :buildBlockFromConfig:silicon 0
+   33 set :buildBlockFromConfig:titanium 0
+   34 set :buildBlockFromConfig:rotation 0
+   35 set :buildBlockFromConfig:config null
+   36 setaddr :buildBlockFromConfig*retaddr *label21 (h:*label21)
    37 label *label17
-    * op add :buildBlock:x .coreX -1.5
-    * op add :buildBlock:y .coreY 2.5
-    * set :buildBlockFromConfig:block @graphite-press
-    * set :buildBlockFromConfig:x :buildBlock:x
-    * set :buildBlockFromConfig:y :buildBlock:y
-    * set :buildBlockFromConfig:copper 75
-    * set :buildBlockFromConfig:lead 30
-    * set :buildBlockFromConfig:graphite 0
-    * set :buildBlockFromConfig:silicon 0
-    * set :buildBlockFromConfig:titanium 0
-    * set :buildBlockFromConfig:rotation 0
-    * set :buildBlockFromConfig:config null
-    * setaddr :buildBlockFromConfig*retaddr *label21 (h:*label21)
    38 call *label12 *invalid :buildBlockFromConfig*retval (m:*label21) (h:*label21)
    39 label *label21
    40 set *tmp5 :buildBlockFromConfig*retval
 
    45 label *label19
    46 label *label16
    47 set .press *tmp5
+   48 op add :buildBlock.1:x .coreX 0
+   49 op add :buildBlock.1:y .coreY 4
+   50 set :buildBlockFromConfig:block @battery
+   51 set :buildBlockFromConfig:x :buildBlock.1:x
+   52 set :buildBlockFromConfig:y :buildBlock.1:y
+   53 set :buildBlockFromConfig:copper 5
+   54 set :buildBlockFromConfig:lead 20
+   55 setaddr :buildBlockFromConfig*retaddr *label27 (h:*label27)
    56 label *label23
-    * op add :buildBlock.1:x .coreX 0
-    * op add :buildBlock.1:y .coreY 4
-    * set :buildBlockFromConfig:block @battery
-    * set :buildBlockFromConfig:x :buildBlock.1:x
-    * set :buildBlockFromConfig:y :buildBlock.1:y
-    * set :buildBlockFromConfig:copper 5
-    * set :buildBlockFromConfig:lead 20
-    * setaddr :buildBlockFromConfig*retaddr *label27 (h:*label27)
    57 call *label12 *invalid :buildBlockFromConfig*retval (m:*label27) (h:*label27)
    58 label *label27
    59 set *tmp9 :buildBlockFromConfig*retval
 
    64 label *label25
    65 label *label22
    66 set .battery *tmp9
+   67 op add :buildBlock.2:y .coreY 3
+   68 set :buildBlockFromConfig:block @combustion-generator
+   69 set :buildBlockFromConfig:x :buildBlock.1:x
+   70 set :buildBlockFromConfig:y :buildBlock.2:y
+   71 set :buildBlockFromConfig:copper 25
+   72 set :buildBlockFromConfig:lead 15
+   73 setaddr :buildBlockFromConfig*retaddr *label33 (h:*label33)
    74 label *label29
-    * op add :buildBlock.2:y .coreY 3
-    * set :buildBlockFromConfig:block @combustion-generator
-    * set :buildBlockFromConfig:x :buildBlock.1:x
-    * set :buildBlockFromConfig:y :buildBlock.2:y
-    * set :buildBlockFromConfig:copper 25
-    * set :buildBlockFromConfig:lead 15
-    * setaddr :buildBlockFromConfig*retaddr *label33 (h:*label33)
    75 call *label12 *invalid :buildBlockFromConfig*retval (m:*label33) (h:*label33)
    76 label *label33
    77 set *tmp13 :buildBlockFromConfig*retval
 
    83 label *label28
    84 set .generator *tmp13
    85 set .powerTarget 1000
+   86 op add :buildBlock.3:x .coreX -1
+   87 set :buildBlockFromConfig:block @battery
+   88 set :buildBlockFromConfig:x :buildBlock.3:x
+   89 set :buildBlockFromConfig:y :buildBlock.1:y
+   90 set :buildBlockFromConfig:copper 5
+   91 set :buildBlockFromConfig:lead 20
+   92 setaddr :buildBlockFromConfig*retaddr *label39 (h:*label39)
    93 label *label35
-    * op add :buildBlock.3:x .coreX -1
-    * set :buildBlockFromConfig:block @battery
-    * set :buildBlockFromConfig:x :buildBlock.3:x
-    * set :buildBlockFromConfig:y :buildBlock.1:y
-    * set :buildBlockFromConfig:copper 5
-    * set :buildBlockFromConfig:lead 20
-    * setaddr :buildBlockFromConfig*retaddr *label39 (h:*label39)
    94 call *label12 *invalid :buildBlockFromConfig*retval (m:*label39) (h:*label39)
    95 label *label39
    96 jump *label34 always
 
    99 multilabel *label38 (m:marker3)
   100 label *label37
   101 label *label34
+  102 op add :buildBlock.4:x .coreX 1.5
+  103 set :buildBlockFromConfig:block @silicon-smelter
+  104 set :buildBlockFromConfig:x :buildBlock.4:x
+  105 set :buildBlockFromConfig:y :buildBlock:y
+  106 set :buildBlockFromConfig:copper 30
+  107 set :buildBlockFromConfig:lead 25
+  108 setaddr :buildBlockFromConfig*retaddr *label45 (h:*label45)
   109 label *label41
-    * op add :buildBlock.4:x .coreX 1.5
-    * set :buildBlockFromConfig:block @silicon-smelter
-    * set :buildBlockFromConfig:x :buildBlock.4:x
-    * set :buildBlockFromConfig:y :buildBlock:y
-    * set :buildBlockFromConfig:copper 30
-    * set :buildBlockFromConfig:lead 25
-    * setaddr :buildBlockFromConfig*retaddr *label45 (h:*label45)
   110 call *label12 *invalid :buildBlockFromConfig*retval (m:*label45) (h:*label45)
   111 label *label45
   112 set *tmp21 :buildBlockFromConfig*retval
 
   217 jump *label46 always
   218 label *label46
   219 set .titanium_drill :buildBlockAt*retval
+  220 op add :buildBlock.5:y .coreY 2
+  221 set :buildBlockFromConfig:block @unloader
+  222 set :buildBlockFromConfig:x :buildBlock.1:x
+  223 set :buildBlockFromConfig:y :buildBlock.5:y
+  224 set :buildBlockFromConfig:copper 0
+  225 set :buildBlockFromConfig:lead 0
+  226 set :buildBlockFromConfig:silicon 30
+  227 set :buildBlockFromConfig:titanium 25
+  228 setaddr :buildBlockFromConfig*retaddr *label80 (h:*label80)
   229 label *label76
-    * op add :buildBlock.5:y .coreY 2
-    * set :buildBlockFromConfig:block @unloader
-    * set :buildBlockFromConfig:x :buildBlock.1:x
-    * set :buildBlockFromConfig:y :buildBlock.5:y
-    * set :buildBlockFromConfig:copper 0
-    * set :buildBlockFromConfig:lead 0
-    * set :buildBlockFromConfig:silicon 30
-    * set :buildBlockFromConfig:titanium 25
-    * setaddr :buildBlockFromConfig*retaddr *label80 (h:*label80)
   230 call *label12 *invalid :buildBlockFromConfig*retval (m:*label80) (h:*label80)
   231 label *label80
   232 set *tmp53 :buildBlockFromConfig*retval
 
   237 label *label78
   238 label *label75
   239 set .unloader1 *tmp53
+  240 op add :buildBlock.6:x .coreX -2
+  241 op add :buildBlock.6:y .coreY 0
+  242 set :buildBlockFromConfig:x :buildBlock.6:x
+  243 set :buildBlockFromConfig:y :buildBlock.6:y
+  244 setaddr :buildBlockFromConfig*retaddr *label86 (h:*label86)
   245 label *label82
-    * op add :buildBlock.6:x .coreX -2
-    * op add :buildBlock.6:y .coreY 0
-    * set :buildBlockFromConfig:x :buildBlock.6:x
-    * set :buildBlockFromConfig:y :buildBlock.6:y
-    * setaddr :buildBlockFromConfig*retaddr *label86 (h:*label86)
   246 call *label12 *invalid :buildBlockFromConfig*retval (m:*label86) (h:*label86)
   247 label *label86
   248 jump *label81 always
 
   251 multilabel *label85 (m:marker8)
   252 label *label84
   253 label *label81
+  254 op add :buildBlock.7:y .coreY 1
+  255 set :buildBlockFromConfig:block @power-node
+  256 set :buildBlockFromConfig:x :buildBlock.6:x
+  257 set :buildBlockFromConfig:y :buildBlock.7:y
+  258 set :buildBlockFromConfig:copper 2
+  259 set :buildBlockFromConfig:lead 6
+  260 set :buildBlockFromConfig:silicon 0
+  261 set :buildBlockFromConfig:titanium 0
+  262 setaddr :buildBlockFromConfig*retaddr *label92 (h:*label92)
   263 label *label88
-    * op add :buildBlock.7:y .coreY 1
-    * set :buildBlockFromConfig:block @power-node
-    * set :buildBlockFromConfig:x :buildBlock.6:x
-    * set :buildBlockFromConfig:y :buildBlock.7:y
-    * set :buildBlockFromConfig:copper 2
-    * set :buildBlockFromConfig:lead 6
-    * set :buildBlockFromConfig:silicon 0
-    * set :buildBlockFromConfig:titanium 0
-    * setaddr :buildBlockFromConfig*retaddr *label92 (h:*label92)
   264 call *label12 *invalid :buildBlockFromConfig*retval (m:*label92) (h:*label92)
   265 label *label92
   266 jump *label87 always
 
   269 multilabel *label91 (m:marker9)
   270 label *label90
   271 label *label87
+  272 op add :buildBlock.8:x .coreX 1
+  273 set :buildBlockFromConfig:block @micro-processor
+  274 set :buildBlockFromConfig:x :buildBlock.8:x
+  275 set :buildBlockFromConfig:y :buildBlock.1:y
+  276 set :buildBlockFromConfig:copper 90
+  277 set :buildBlockFromConfig:lead 50
+  278 set :buildBlockFromConfig:silicon 50
+  279 setaddr :buildBlockFromConfig*retaddr *label98 (h:*label98)
   280 label *label94
-    * op add :buildBlock.8:x .coreX 1
-    * set :buildBlockFromConfig:block @micro-processor
-    * set :buildBlockFromConfig:x :buildBlock.8:x
-    * set :buildBlockFromConfig:y :buildBlock.1:y
-    * set :buildBlockFromConfig:copper 90
-    * set :buildBlockFromConfig:lead 50
-    * set :buildBlockFromConfig:silicon 50
   281 set :buildBlockFromConfig:config processor1
-    * setaddr :buildBlockFromConfig*retaddr *label98 (h:*label98)
   282 call *label12 *invalid :buildBlockFromConfig*retval (m:*label98) (h:*label98)
   283 label *label98
   284 jump *label93 always
 
   288 label *label96
   289 label *label93
   290 write false null ".pressEnabled"
+  291 op add :buildBlock.9:x .coreX -4
+  292 op add :buildBlock.9:y .coreY -1
+  293 set :buildBlockFromConfig:block @air-factory
+  294 set :buildBlockFromConfig:x :buildBlock.9:x
+  295 set :buildBlockFromConfig:y :buildBlock.9:y
+  296 set :buildBlockFromConfig:copper 60
+  297 set :buildBlockFromConfig:lead 70
+  298 set :buildBlockFromConfig:silicon 0
+  299 set :buildBlockFromConfig:rotation 3
+  300 set :buildBlockFromConfig:config @mono
+  301 setaddr :buildBlockFromConfig*retaddr *label104 (h:*label104)
   302 label *label100
-    * op add :buildBlock.9:x .coreX -4
-    * op add :buildBlock.9:y .coreY -1
-    * set :buildBlockFromConfig:block @air-factory
-    * set :buildBlockFromConfig:x :buildBlock.9:x
-    * set :buildBlockFromConfig:y :buildBlock.9:y
-    * set :buildBlockFromConfig:copper 60
-    * set :buildBlockFromConfig:lead 70
-    * set :buildBlockFromConfig:silicon 0
-    * set :buildBlockFromConfig:rotation 3
-    * set :buildBlockFromConfig:config @mono
-    * setaddr :buildBlockFromConfig*retaddr *label104 (h:*label104)
   303 call *label12 *invalid :buildBlockFromConfig*retval (m:*label104) (h:*label104)
   304 label *label104
   305 jump *label99 always
 
   337 label *label0
   338 set .status3 "Moving..."
   339 label *label113
+  340 op sub *tmp75 :moveTo:radius 0.5
   341 label *label114
   342 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp73
   343 jump *label116 notEqual *tmp73 false
-    * op sub *tmp75 :moveTo:radius 0.5
   344 ucontrol approach :moveTo:x :moveTo:y *tmp75
   345 label *label115
   346 jump *label114 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1:
 
   396 label *label129
   397 sensor *tmp85 @unit @firstItem
   398 jump *label130 notEqual *tmp85 :depositItems:item
+  399 set *tmp90 5
   400 op equal *tmp88 :depositItems:block .core
   401 op land *tmp89 :depositItems:fromMining *tmp88
-    * jump *label132 equal *tmp89 false
+  402 jump *label133 equal *tmp89 false
   403 set *tmp90 7
   404 jump *label133 always
-    * label *label132
-    * set *tmp90 5
   405 label *label133
   406 set :moveToBlock:block :depositItems:block
   407 set :moveToBlock:radius *tmp90
 
   678 label *label221
   679 sensor :supplyBlocks:coal .core @coal
   680 sensor :supplyBlocks:sand .core @sand
-    * jump *label222 greaterThan :supplyBlocks:coal :supplyBlocks:sand
+  681 set *tmp176 @sand
+  682 jump *label223 greaterThan :supplyBlocks:coal :supplyBlocks:sand
   683 set *tmp176 @coal
   684 jump *label223 always
-    * label *label222
-    * set *tmp176 @sand
   685 label *label223
   686 set .status2 "Mining "
   687 set .item2 *tmp176

Modifications by Unroll iteration loop at line 321:5 (-2 instructions):
 
   117 label *label43
   118 label *label40
   119 set .smelter *tmp21
-    * setaddr *tmp26 *label50
-    * label *label47
-    * set :meetTarget:block @pneumatic-drill
-    * set :meetTarget:copper 18
-    * set :meetTarget:lead 0
-    * set :meetTarget:graphite 10
-    * set :meetTarget:silicon 0
-    * set :meetTarget:titanium 0
-    * setaddr :meetTarget*retaddr *label51 (h:*label51)
-    * call *label10 *invalid :meetTarget*retval (m:*label51) (h:*label51)
-    * label *label51
-    * label *label48
-    * multijump *tmp26 0 0 (m:marker5)
-    * multilabel *label50 (m:marker5)
-    * label *label49
+  120 label *label247
+  121 set :meetTarget:block @pneumatic-drill
+  122 set :meetTarget:copper 18
+  123 set :meetTarget:lead 0
+  124 set :meetTarget:graphite 10
+  125 set :meetTarget:silicon 0
+  126 set :meetTarget:titanium 0
+  127 setaddr :meetTarget*retaddr *label248 (h:*label248)
+  128 call *label10 *invalid :meetTarget*retval (m:*label248) (h:*label248)
+  129 label *label248
+  130 label *label249
+  131 label *label49
   132 set :locateOre:ore @titanium
   133 setaddr :locateOre*retaddr *label52 (h:*label52)
   134 call *label5 *invalid :locateOre*retval (m:*label52) (h:*label52)

Modifications by Replicate loop condition at line 94:5 (+1 instructions):
 
   338 label *label114
   339 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp73
   340 jump *label116 notEqual *tmp73 false
+  341 label *label253
   342 ucontrol approach :moveTo:x :moveTo:y *tmp75
   343 label *label115
-    * jump *label114 always
+  344 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp73
+  345 jump *label253 equal *tmp73 false
   346 label *label116
   347 label *label112
   348 return :moveTo*retaddr

Modifications by Replicate loop condition at line 112:5 (+1 instructions):
 
   371 label *label123
   372 sensor *tmp81 @unit @firstItem
   373 jump *label125 equal *tmp81 null
+  374 label *label254
   375 ucontrol itemDrop @air 1000
   376 label *label124
-    * jump *label123 always
+  377 sensor *tmp81 @unit @firstItem
+  378 jump *label254 notEqual *tmp81 null
   379 label *label125
   380 label *label119
   381 return :moveToEmpty*retaddr

Modifications by Replicate loop condition at line 136:9 (+1 instructions):
 
   426 label *label140
   427 sensor *tmp97 @unit @firstItem
   428 jump *label142 equal *tmp97 null
+  429 label *label255
   430 ucontrol itemDrop @air 1000
   431 label *label141
-    * jump *label140 always
+  432 sensor *tmp97 @unit @firstItem
+  433 jump *label255 notEqual *tmp97 null
   434 label *label142
   435 label *label131
   436 label *label128

Modifications by Replicate loop condition at line 266:5 (+17 instructions):
 
   737 op lessThan *tmp192 *tmp191 .titaniumTarget
   738 op or *tmp194 *tmp189 *tmp192
   739 jump *label231 equal *tmp194 false
+  740 label *label256
   741 setaddr :supplyBlocks*retaddr *label232 (h:*label232)
   742 call *label9 *invalid :supplyBlocks*retval (m:*label232) (h:*label232)
   743 label *label232
   744 label *label230
-    * jump *label229 always
+  745 sensor *tmp177 .core @copper
+  746 op lessThan *tmp178 *tmp177 .copperTarget
+  747 sensor *tmp179 .core @lead
+  748 op lessThan *tmp180 *tmp179 .leadTarget
+  749 op or *tmp182 *tmp178 *tmp180
+  750 op notEqual *tmp181 *tmp182 false
+  751 sensor *tmp183 .core @graphite
+  752 op lessThan *tmp184 *tmp183 .graphiteTarget
+  753 op or *tmp186 *tmp181 *tmp184
+  754 op notEqual *tmp185 *tmp186 false
+  755 sensor *tmp187 .core @silicon
+  756 op lessThan *tmp188 *tmp187 .siliconTarget
+  757 op or *tmp190 *tmp185 *tmp188
+  758 op notEqual *tmp189 *tmp190 false
+  759 sensor *tmp191 .core @titanium
+  760 op lessThan *tmp192 *tmp191 .titaniumTarget
+  761 op or *tmp194 *tmp189 *tmp192
+  762 jump *label256 notEqual *tmp194 false
   763 label *label231
   764 label *label228
   765 return :meetTarget*retaddr

Modifications by Unroll iteration loop at line 333:5 (+52 instructions):
 
   143 set :buildTitaniumDrill:best 0
   144 set :buildTitaniumDrill:bx 0
   145 set :buildTitaniumDrill:by 0
-    * set :buildTitaniumDrill:xx 1
-    * set :buildTitaniumDrill:yy 1
-    * setaddr *tmp27 *label57
-    * jump *label54 always
-    * multilabel *label57 (m:marker6)
-    * set :buildTitaniumDrill:xx 1
-    * set :buildTitaniumDrill:yy -1
-    * setaddr *tmp27 *label58
-    * jump *label54 always
-    * multilabel *label58 (m:marker6)
-    * set :buildTitaniumDrill:xx -1
-    * set :buildTitaniumDrill:yy 1
-    * setaddr *tmp27 *label59
-    * jump *label54 always
-    * multilabel *label59 (m:marker6)
-    * set :buildTitaniumDrill:xx -1
-    * set :buildTitaniumDrill:yy -1
-    * setaddr *tmp27 *label60
-    * label *label54
-    * op add :checkOre:x :buildTitaniumDrill:x :buildTitaniumDrill:xx
-    * set :checkOre:count 0
-    * ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
-    * jump *label62 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
-    * label *label62
-    * label *label63
-    * label *label61
-    * op add *tmp34 :buildTitaniumDrill:y :buildTitaniumDrill:yy
-    * set :checkOre.1:count :checkOre:count
-    * ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
-    * jump *label65 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :checkOre:count 1
-    * label *label65
-    * label *label66
-    * label *label64
-    * set :checkOre.2:count :checkOre.1:count
-    * ucontrol getBlock :checkOre:x *tmp34 :checkOre.2:type 0 :checkOre.2:floor
-    * jump *label68 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :checkOre.1:count 1
-    * label *label68
-    * label *label69
-    * label *label67
-    * jump *label70 lessThanEq :checkOre.2:count :buildTitaniumDrill:best
-    * set :buildTitaniumDrill:bx :buildTitaniumDrill:xx
-    * set :buildTitaniumDrill:by :buildTitaniumDrill:yy
-    * set :buildTitaniumDrill:best :checkOre.2:count
-    * jump *label72 notEqual :checkOre.2:count 3
-    * jump *label56 always
-    * label *label72
-    * label *label73
-    * label *label70
-    * label *label71
-    * label *label55
-    * multijump *tmp27 0 0 (m:marker6)
-    * multilabel *label60 (m:marker6)
-    * label *label56
+  146 set :buildTitaniumDrill:xx 1
+  147 set :buildTitaniumDrill:yy 1
+  148 label *label257
+  149 op add :checkOre:x :buildTitaniumDrill:x :buildTitaniumDrill:xx
+  150 set :checkOre:count 0
+  151 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
+  152 jump *label258 notEqual :checkOre:floor @ore-titanium
+  153 op add :checkOre:count 0 1
+  154 label *label258
+  155 label *label259
+  156 label *label260
+  157 op add *tmp34 :buildTitaniumDrill:y :buildTitaniumDrill:yy
+  158 set :checkOre.1:count :checkOre:count
+  159 ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
+  160 jump *label261 notEqual :checkOre.1:floor @ore-titanium
+  161 op add :checkOre.1:count :checkOre:count 1
+  162 label *label261
+  163 label *label262
+  164 label *label263
+  165 set :checkOre.2:count :checkOre.1:count
+  166 ucontrol getBlock :checkOre:x *tmp34 :checkOre.2:type 0 :checkOre.2:floor
+  167 jump *label264 notEqual :checkOre.2:floor @ore-titanium
+  168 op add :checkOre.2:count :checkOre.1:count 1
+  169 label *label264
+  170 label *label265
+  171 label *label266
+  172 jump *label269 lessThanEq :checkOre.2:count :buildTitaniumDrill:best
+  173 set :buildTitaniumDrill:bx :buildTitaniumDrill:xx
+  174 set :buildTitaniumDrill:by :buildTitaniumDrill:yy
+  175 set :buildTitaniumDrill:best :checkOre.2:count
+  176 jump *label267 notEqual :checkOre.2:count 3
+  177 jump *label56 always
+  178 label *label267
+  179 label *label268
+  180 label *label269
+  181 label *label270
+  182 label *label271
+  183 set :buildTitaniumDrill:xx 1
+  184 set :buildTitaniumDrill:yy -1
+  185 label *label274
+  186 op add :checkOre:x :buildTitaniumDrill:x :buildTitaniumDrill:xx
+  187 set :checkOre:count 0
+  188 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
+  189 jump *label275 notEqual :checkOre:floor @ore-titanium
+  190 op add :checkOre:count 0 1
+  191 label *label275
+  192 label *label276
+  193 label *label277
+  194 op add *tmp34 :buildTitaniumDrill:y :buildTitaniumDrill:yy
+  195 set :checkOre.1:count :checkOre:count
+  196 ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
+  197 jump *label278 notEqual :checkOre.1:floor @ore-titanium
+  198 op add :checkOre.1:count :checkOre:count 1
+  199 label *label278
+  200 label *label279
+  201 label *label280
+  202 set :checkOre.2:count :checkOre.1:count
+  203 ucontrol getBlock :checkOre:x *tmp34 :checkOre.2:type 0 :checkOre.2:floor
+  204 jump *label281 notEqual :checkOre.2:floor @ore-titanium
+  205 op add :checkOre.2:count :checkOre.1:count 1
+  206 label *label281
+  207 label *label282
+  208 label *label283
+  209 jump *label286 lessThanEq :checkOre.2:count :buildTitaniumDrill:best
+  210 set :buildTitaniumDrill:bx :buildTitaniumDrill:xx
+  211 set :buildTitaniumDrill:by :buildTitaniumDrill:yy
+  212 set :buildTitaniumDrill:best :checkOre.2:count
+  213 jump *label284 notEqual :checkOre.2:count 3
+  214 jump *label56 always
+  215 label *label284
+  216 label *label285
+  217 label *label286
+  218 label *label287
+  219 label *label288
+  220 set :buildTitaniumDrill:xx -1
+  221 set :buildTitaniumDrill:yy 1
+  222 label *label291
+  223 op add :checkOre:x :buildTitaniumDrill:x :buildTitaniumDrill:xx
+  224 set :checkOre:count 0
+  225 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
+  226 jump *label292 notEqual :checkOre:floor @ore-titanium
+  227 op add :checkOre:count 0 1
+  228 label *label292
+  229 label *label293
+  230 label *label294
+  231 op add *tmp34 :buildTitaniumDrill:y :buildTitaniumDrill:yy
+  232 set :checkOre.1:count :checkOre:count
+  233 ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
+  234 jump *label295 notEqual :checkOre.1:floor @ore-titanium
+  235 op add :checkOre.1:count :checkOre:count 1
+  236 label *label295
+  237 label *label296
+  238 label *label297
+  239 set :checkOre.2:count :checkOre.1:count
+  240 ucontrol getBlock :checkOre:x *tmp34 :checkOre.2:type 0 :checkOre.2:floor
+  241 jump *label298 notEqual :checkOre.2:floor @ore-titanium
+  242 op add :checkOre.2:count :checkOre.1:count 1
+  243 label *label298
+  244 label *label299
+  245 label *label300
+  246 jump *label303 lessThanEq :checkOre.2:count :buildTitaniumDrill:best
+  247 set :buildTitaniumDrill:bx :buildTitaniumDrill:xx
+  248 set :buildTitaniumDrill:by :buildTitaniumDrill:yy
+  249 set :buildTitaniumDrill:best :checkOre.2:count
+  250 jump *label301 notEqual :checkOre.2:count 3
+  251 jump *label56 always
+  252 label *label301
+  253 label *label302
+  254 label *label303
+  255 label *label304
+  256 label *label305
+  257 set :buildTitaniumDrill:xx -1
+  258 set :buildTitaniumDrill:yy -1
+  259 label *label308
+  260 op add :checkOre:x :buildTitaniumDrill:x :buildTitaniumDrill:xx
+  261 set :checkOre:count 0
+  262 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
+  263 jump *label309 notEqual :checkOre:floor @ore-titanium
+  264 op add :checkOre:count 0 1
+  265 label *label309
+  266 label *label310
+  267 label *label311
+  268 op add *tmp34 :buildTitaniumDrill:y :buildTitaniumDrill:yy
+  269 set :checkOre.1:count :checkOre:count
+  270 ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
+  271 jump *label312 notEqual :checkOre.1:floor @ore-titanium
+  272 op add :checkOre.1:count :checkOre:count 1
+  273 label *label312
+  274 label *label313
+  275 label *label314
+  276 set :checkOre.2:count :checkOre.1:count
+  277 ucontrol getBlock :checkOre:x *tmp34 :checkOre.2:type 0 :checkOre.2:floor
+  278 jump *label315 notEqual :checkOre.2:floor @ore-titanium
+  279 op add :checkOre.2:count :checkOre.1:count 1
+  280 label *label315
+  281 label *label316
+  282 label *label317
+  283 jump *label320 lessThanEq :checkOre.2:count :buildTitaniumDrill:best
+  284 set :buildTitaniumDrill:bx :buildTitaniumDrill:xx
+  285 set :buildTitaniumDrill:by :buildTitaniumDrill:yy
+  286 set :buildTitaniumDrill:best :checkOre.2:count
+  287 jump *label318 notEqual :checkOre.2:count 3
+  288 jump *label56 always
+  289 label *label318
+  290 label *label319
+  291 label *label320
+  292 label *label321
+  293 label *label322
+  294 label *label56
   295 op div *tmp51 :buildTitaniumDrill:bx 2
   296 op add :buildTitaniumDrill:x :buildTitaniumDrill:x *tmp51
   297 op div *tmp52 :buildTitaniumDrill:by 2

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   146 set :buildTitaniumDrill:xx 1
   147 set :buildTitaniumDrill:yy 1
   148 label *label257
-    * op add :checkOre:x :buildTitaniumDrill:x :buildTitaniumDrill:xx
+  149 op add :checkOre:x :buildTitaniumDrill:x 1
   150 set :checkOre:count 0
   151 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
   152 jump *label258 notEqual :checkOre:floor @ore-titanium
 
   154 label *label258
   155 label *label259
   156 label *label260
-    * op add *tmp34 :buildTitaniumDrill:y :buildTitaniumDrill:yy
+  157 op add *tmp34 :buildTitaniumDrill:y 1
   158 set :checkOre.1:count :checkOre:count
   159 ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
   160 jump *label261 notEqual :checkOre.1:floor @ore-titanium
 
   169 label *label264
   170 label *label265
   171 label *label266
-    * jump *label269 lessThanEq :checkOre.2:count :buildTitaniumDrill:best
-    * set :buildTitaniumDrill:bx :buildTitaniumDrill:xx
-    * set :buildTitaniumDrill:by :buildTitaniumDrill:yy
+  172 jump *label269 lessThanEq :checkOre.2:count 0
+  173 set :buildTitaniumDrill:bx 1
+  174 set :buildTitaniumDrill:by 1
   175 set :buildTitaniumDrill:best :checkOre.2:count
   176 jump *label267 notEqual :checkOre.2:count 3
   177 jump *label56 always
 
   183 set :buildTitaniumDrill:xx 1
   184 set :buildTitaniumDrill:yy -1
   185 label *label274
-    * op add :checkOre:x :buildTitaniumDrill:x :buildTitaniumDrill:xx
+  186 op add :checkOre:x :buildTitaniumDrill:x 1
   187 set :checkOre:count 0
   188 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
   189 jump *label275 notEqual :checkOre:floor @ore-titanium
 
   191 label *label275
   192 label *label276
   193 label *label277
-    * op add *tmp34 :buildTitaniumDrill:y :buildTitaniumDrill:yy
+  194 op add *tmp34 :buildTitaniumDrill:y -1
   195 set :checkOre.1:count :checkOre:count
   196 ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
   197 jump *label278 notEqual :checkOre.1:floor @ore-titanium
 
   207 label *label282
   208 label *label283
   209 jump *label286 lessThanEq :checkOre.2:count :buildTitaniumDrill:best
-    * set :buildTitaniumDrill:bx :buildTitaniumDrill:xx
-    * set :buildTitaniumDrill:by :buildTitaniumDrill:yy
+  210 set :buildTitaniumDrill:bx 1
+  211 set :buildTitaniumDrill:by -1
   212 set :buildTitaniumDrill:best :checkOre.2:count
   213 jump *label284 notEqual :checkOre.2:count 3
   214 jump *label56 always
 
   220 set :buildTitaniumDrill:xx -1
   221 set :buildTitaniumDrill:yy 1
   222 label *label291
-    * op add :checkOre:x :buildTitaniumDrill:x :buildTitaniumDrill:xx
+  223 op add :checkOre:x :buildTitaniumDrill:x -1
   224 set :checkOre:count 0
   225 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
   226 jump *label292 notEqual :checkOre:floor @ore-titanium
 
   228 label *label292
   229 label *label293
   230 label *label294
-    * op add *tmp34 :buildTitaniumDrill:y :buildTitaniumDrill:yy
+  231 op add *tmp34 :buildTitaniumDrill:y 1
   232 set :checkOre.1:count :checkOre:count
   233 ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
   234 jump *label295 notEqual :checkOre.1:floor @ore-titanium
 
   244 label *label299
   245 label *label300
   246 jump *label303 lessThanEq :checkOre.2:count :buildTitaniumDrill:best
-    * set :buildTitaniumDrill:bx :buildTitaniumDrill:xx
-    * set :buildTitaniumDrill:by :buildTitaniumDrill:yy
+  247 set :buildTitaniumDrill:bx -1
+  248 set :buildTitaniumDrill:by 1
   249 set :buildTitaniumDrill:best :checkOre.2:count
   250 jump *label301 notEqual :checkOre.2:count 3
   251 jump *label56 always
 
   257 set :buildTitaniumDrill:xx -1
   258 set :buildTitaniumDrill:yy -1
   259 label *label308
-    * op add :checkOre:x :buildTitaniumDrill:x :buildTitaniumDrill:xx
+  260 op add :checkOre:x :buildTitaniumDrill:x -1
   261 set :checkOre:count 0
   262 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
   263 jump *label309 notEqual :checkOre:floor @ore-titanium
 
   265 label *label309
   266 label *label310
   267 label *label311
-    * op add *tmp34 :buildTitaniumDrill:y :buildTitaniumDrill:yy
+  268 op add *tmp34 :buildTitaniumDrill:y -1
   269 set :checkOre.1:count :checkOre:count
   270 ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
   271 jump *label312 notEqual :checkOre.1:floor @ore-titanium
 
   281 label *label316
   282 label *label317
   283 jump *label320 lessThanEq :checkOre.2:count :buildTitaniumDrill:best
-    * set :buildTitaniumDrill:bx :buildTitaniumDrill:xx
-    * set :buildTitaniumDrill:by :buildTitaniumDrill:yy
-    * set :buildTitaniumDrill:best :checkOre.2:count
+  284 set :buildTitaniumDrill:bx -1
+  285 set :buildTitaniumDrill:by -1
   286 jump *label318 notEqual :checkOre.2:count 3
   287 jump *label56 always
   288 label *label318

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   143 set :buildTitaniumDrill:best 0
   144 set :buildTitaniumDrill:bx 0
   145 set :buildTitaniumDrill:by 0
-    * set :buildTitaniumDrill:xx 1
-    * set :buildTitaniumDrill:yy 1
   146 label *label257
   147 op add :checkOre:x :buildTitaniumDrill:x 1
   148 set :checkOre:count 0
 
   178 label *label269
   179 label *label270
   180 label *label271
-    * set :buildTitaniumDrill:xx 1
-    * set :buildTitaniumDrill:yy -1
   181 label *label274
   182 op add :checkOre:x :buildTitaniumDrill:x 1
   183 set :checkOre:count 0
 
   213 label *label286
   214 label *label287
   215 label *label288
-    * set :buildTitaniumDrill:xx -1
-    * set :buildTitaniumDrill:yy 1
   216 label *label291
   217 op add :checkOre:x :buildTitaniumDrill:x -1
   218 set :checkOre:count 0
 
   248 label *label303
   249 label *label304
   250 label *label305
-    * set :buildTitaniumDrill:xx -1
-    * set :buildTitaniumDrill:yy -1
   251 label *label308
   252 op add :checkOre:x :buildTitaniumDrill:x -1
   253 set :checkOre:count 0

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   276 set :buildTitaniumDrill:bx -1
   277 set :buildTitaniumDrill:by -1
   278 jump *label318 notEqual :checkOre.2:count 3
-    * jump *label56 always
   279 label *label318
   280 label *label319
   281 label *label320
 
   294 setaddr :buildBlockAt*retaddr *label74 (h:*label74)
   295 call *label11 *invalid :buildBlockAt*retval (m:*label74) (h:*label74)
   296 label *label74
-    * jump *label46 always
   297 label *label46
   298 set .titanium_drill :buildBlockAt*retval
   299 op add :buildBlock.5:y .coreY 2
 
   484 op land *tmp89 :depositItems:fromMining *tmp88
   485 jump *label133 equal *tmp89 false
   486 set *tmp90 7
-    * jump *label133 always
   487 label *label133
   488 set :moveToBlock:block :depositItems:block
   489 set :moveToBlock:radius *tmp90
 
   765 set *tmp176 @sand
   766 jump *label223 greaterThan :supplyBlocks:coal :supplyBlocks:sand
   767 set *tmp176 @coal
-    * jump *label223 always
   768 label *label223
   769 set .status2 "Mining "
   770 set .item2 *tmp176
 
   878 jump *label241 notEqual :buildBlockAt:type :buildBlockAt:block
   879 label *label243
   880 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label233 always
   881 label *label233
   882 return :buildBlockAt*retaddr
   883 end
 
   900 call *label11 *invalid :buildBlockAt*retval (m:*label246) (h:*label246)
   901 label *label246
   902 set :buildBlockFromConfig*retval :buildBlockAt*retval
-    * jump *label244 always
   903 label *label244
   904 return :buildBlockFromConfig*retaddr
   905 end

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-1 instructions):
 
   275 jump *label320 lessThanEq :checkOre.2:count :buildTitaniumDrill:best
   276 set :buildTitaniumDrill:bx -1
   277 set :buildTitaniumDrill:by -1
-    * jump *label318 notEqual :checkOre.2:count 3
   278 label *label318
   279 label *label319
   280 label *label320

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    45 label *label19
    46 label *label16
    47 set .press *tmp5
-    * op add :buildBlock.1:x .coreX 0
+   48 set :buildBlock.1:x .coreX
    49 op add :buildBlock.1:y .coreY 4
    50 set :buildBlockFromConfig:block @battery
    51 set :buildBlockFromConfig:x :buildBlock.1:x
 
   148 set :checkOre:count 0
   149 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
   150 jump *label258 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  151 set :checkOre:count 1
   152 label *label258
   153 label *label259
   154 label *label260
 
   183 set :checkOre:count 0
   184 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
   185 jump *label275 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  186 set :checkOre:count 1
   187 label *label275
   188 label *label276
   189 label *label277
 
   218 set :checkOre:count 0
   219 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
   220 jump *label292 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  221 set :checkOre:count 1
   222 label *label292
   223 label *label293
   224 label *label294
 
   253 set :checkOre:count 0
   254 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
   255 jump *label309 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  256 set :checkOre:count 1
   257 label *label309
   258 label *label310
   259 label *label311
 
   316 label *label75
   317 set .unloader1 *tmp53
   318 op add :buildBlock.6:x .coreX -2
-    * op add :buildBlock.6:y .coreY 0
+  319 set :buildBlock.6:y .coreY
   320 set :buildBlockFromConfig:x :buildBlock.6:x
   321 set :buildBlockFromConfig:y :buildBlock.6:y
   322 setaddr :buildBlockFromConfig*retaddr *label86 (h:*label86)

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-7 instructions):
 
   295 label *label74
   296 label *label46
   297 set .titanium_drill :buildBlockAt*retval
-    * op add :buildBlock.5:y .coreY 2
+  298 op add :buildBlockFromConfig:y .coreY 2
   299 set :buildBlockFromConfig:block @unloader
   300 set :buildBlockFromConfig:x :buildBlock.1:x
-    * set :buildBlockFromConfig:y :buildBlock.5:y
   301 set :buildBlockFromConfig:copper 0
   302 set :buildBlockFromConfig:lead 0
   303 set :buildBlockFromConfig:silicon 30
 
   306 label *label76
   307 call *label12 *invalid :buildBlockFromConfig*retval (m:*label80) (h:*label80)
   308 label *label80
-    * set *tmp53 :buildBlockFromConfig*retval
+  309 set .unloader1 :buildBlockFromConfig*retval
   310 jump *label75 always
   311 label *label77
   312 multijump *tmp54 0 0 (m:marker7)
   313 multilabel *label79 (m:marker7)
   314 label *label78
   315 label *label75
-    * set .unloader1 *tmp53
   316 op add :buildBlock.6:x .coreX -2
-    * set :buildBlock.6:y .coreY
+  317 set :buildBlockFromConfig:y .coreY
   318 set :buildBlockFromConfig:x :buildBlock.6:x
-    * set :buildBlockFromConfig:y :buildBlock.6:y
   319 setaddr :buildBlockFromConfig*retaddr *label86 (h:*label86)
   320 label *label82
   321 call *label12 *invalid :buildBlockFromConfig*retval (m:*label86) (h:*label86)
 
   326 multilabel *label85 (m:marker8)
   327 label *label84
   328 label *label81
-    * op add :buildBlock.7:y .coreY 1
+  329 op add :buildBlockFromConfig:y .coreY 1
   330 set :buildBlockFromConfig:block @power-node
   331 set :buildBlockFromConfig:x :buildBlock.6:x
-    * set :buildBlockFromConfig:y :buildBlock.7:y
   332 set :buildBlockFromConfig:copper 2
   333 set :buildBlockFromConfig:lead 6
   334 set :buildBlockFromConfig:silicon 0
 
   343 multilabel *label91 (m:marker9)
   344 label *label90
   345 label *label87
-    * op add :buildBlock.8:x .coreX 1
+  346 op add :buildBlockFromConfig:x .coreX 1
   347 set :buildBlockFromConfig:block @micro-processor
-    * set :buildBlockFromConfig:x :buildBlock.8:x
   348 set :buildBlockFromConfig:y :buildBlock.1:y
   349 set :buildBlockFromConfig:copper 90
   350 set :buildBlockFromConfig:lead 50
 
   361 label *label96
   362 label *label93
   363 write false null ".pressEnabled"
-    * op add :buildBlock.9:x .coreX -4
-    * op add :buildBlock.9:y .coreY -1
+  364 op add :buildBlockFromConfig:x .coreX -4
+  365 op add :buildBlockFromConfig:y .coreY -1
   366 set :buildBlockFromConfig:block @air-factory
-    * set :buildBlockFromConfig:x :buildBlock.9:x
-    * set :buildBlockFromConfig:y :buildBlock.9:y
   367 set :buildBlockFromConfig:copper 60
   368 set :buildBlockFromConfig:lead 70
   369 set :buildBlockFromConfig:silicon 0

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2:
 
    48 set :buildBlock.1:x .coreX
    49 op add :buildBlock.1:y .coreY 4
    50 set :buildBlockFromConfig:block @battery
-    * set :buildBlockFromConfig:x :buildBlock.1:x
+   51 set :buildBlockFromConfig:x .coreX
    52 set :buildBlockFromConfig:y :buildBlock.1:y
    53 set :buildBlockFromConfig:copper 5
    54 set :buildBlockFromConfig:lead 20
 
    66 set .battery *tmp9
    67 op add :buildBlock.2:y .coreY 3
    68 set :buildBlockFromConfig:block @combustion-generator
-    * set :buildBlockFromConfig:x :buildBlock.1:x
+   69 set :buildBlockFromConfig:x .coreX
    70 set :buildBlockFromConfig:y :buildBlock.2:y
    71 set :buildBlockFromConfig:copper 25
    72 set :buildBlockFromConfig:lead 15
 
   297 set .titanium_drill :buildBlockAt*retval
   298 op add :buildBlockFromConfig:y .coreY 2
   299 set :buildBlockFromConfig:block @unloader
-    * set :buildBlockFromConfig:x :buildBlock.1:x
+  300 set :buildBlockFromConfig:x .coreX
   301 set :buildBlockFromConfig:copper 0
   302 set :buildBlockFromConfig:lead 0
   303 set :buildBlockFromConfig:silicon 30

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-1 instructions):
 
    45 label *label19
    46 label *label16
    47 set .press *tmp5
-    * set :buildBlock.1:x .coreX
    48 op add :buildBlock.1:y .coreY 4
    49 set :buildBlockFromConfig:block @battery
    50 set :buildBlockFromConfig:x .coreX

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    18 label *label13
    19 ubind @poly
    20 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label14
    21 jump *label13 equal .core null
-    * label *label15
    22 op add :buildBlock:x .coreX -1.5
    23 op add :buildBlock:y .coreY 2.5
    24 set :buildBlockFromConfig:block @graphite-press
 
    32 set :buildBlockFromConfig:rotation 0
    33 set :buildBlockFromConfig:config null
    34 setaddr :buildBlockFromConfig*retaddr *label21 (h:*label21)
-    * label *label17
    35 call *label12 *invalid :buildBlockFromConfig*retval (m:*label21) (h:*label21)
    36 label *label21
    37 set *tmp5 :buildBlockFromConfig*retval
    38 jump *label16 always
-    * label *label18
    39 multijump *tmp6 0 0 (m:marker0)
    40 multilabel *label20 (m:marker0)
-    * label *label19
    41 label *label16
    42 set .press *tmp5
    43 op add :buildBlock.1:y .coreY 4
 
    47 set :buildBlockFromConfig:copper 5
    48 set :buildBlockFromConfig:lead 20
    49 setaddr :buildBlockFromConfig*retaddr *label27 (h:*label27)
-    * label *label23
    50 call *label12 *invalid :buildBlockFromConfig*retval (m:*label27) (h:*label27)
    51 label *label27
    52 set *tmp9 :buildBlockFromConfig*retval
    53 jump *label22 always
-    * label *label24
    54 multijump *tmp10 0 0 (m:marker1)
    55 multilabel *label26 (m:marker1)
-    * label *label25
    56 label *label22
    57 set .battery *tmp9
    58 op add :buildBlock.2:y .coreY 3
 
    62 set :buildBlockFromConfig:copper 25
    63 set :buildBlockFromConfig:lead 15
    64 setaddr :buildBlockFromConfig*retaddr *label33 (h:*label33)
-    * label *label29
    65 call *label12 *invalid :buildBlockFromConfig*retval (m:*label33) (h:*label33)
    66 label *label33
    67 set *tmp13 :buildBlockFromConfig*retval
    68 jump *label28 always
-    * label *label30
    69 multijump *tmp14 0 0 (m:marker2)
    70 multilabel *label32 (m:marker2)
-    * label *label31
    71 label *label28
    72 set .generator *tmp13
    73 set .powerTarget 1000
 
    78 set :buildBlockFromConfig:copper 5
    79 set :buildBlockFromConfig:lead 20
    80 setaddr :buildBlockFromConfig*retaddr *label39 (h:*label39)
-    * label *label35
    81 call *label12 *invalid :buildBlockFromConfig*retval (m:*label39) (h:*label39)
    82 label *label39
    83 jump *label34 always
-    * label *label36
    84 multijump *tmp18 0 0 (m:marker3)
    85 multilabel *label38 (m:marker3)
-    * label *label37
    86 label *label34
    87 op add :buildBlock.4:x .coreX 1.5
    88 set :buildBlockFromConfig:block @silicon-smelter
 
    91 set :buildBlockFromConfig:copper 30
    92 set :buildBlockFromConfig:lead 25
    93 setaddr :buildBlockFromConfig*retaddr *label45 (h:*label45)
-    * label *label41
    94 call *label12 *invalid :buildBlockFromConfig*retval (m:*label45) (h:*label45)
    95 label *label45
    96 set *tmp21 :buildBlockFromConfig*retval
    97 jump *label40 always
-    * label *label42
    98 multijump *tmp22 0 0 (m:marker4)
    99 multilabel *label44 (m:marker4)
-    * label *label43
   100 label *label40
   101 set .smelter *tmp21
-    * label *label247
   102 set :meetTarget:block @pneumatic-drill
   103 set :meetTarget:copper 18
   104 set :meetTarget:lead 0
 
   108 setaddr :meetTarget*retaddr *label248 (h:*label248)
   109 call *label10 *invalid :meetTarget*retval (m:*label248) (h:*label248)
   110 label *label248
-    * label *label249
-    * label *label49
   111 set :locateOre:ore @titanium
   112 setaddr :locateOre*retaddr *label52 (h:*label52)
   113 call *label5 *invalid :locateOre*retval (m:*label52) (h:*label52)
 
   122 set :buildTitaniumDrill:best 0
   123 set :buildTitaniumDrill:bx 0
   124 set :buildTitaniumDrill:by 0
-    * label *label257
   125 op add :checkOre:x :buildTitaniumDrill:x 1
   126 set :checkOre:count 0
   127 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
   128 jump *label258 notEqual :checkOre:floor @ore-titanium
   129 set :checkOre:count 1
   130 label *label258
-    * label *label259
-    * label *label260
   131 op add *tmp34 :buildTitaniumDrill:y 1
   132 set :checkOre.1:count :checkOre:count
   133 ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
   134 jump *label261 notEqual :checkOre.1:floor @ore-titanium
   135 op add :checkOre.1:count :checkOre:count 1
   136 label *label261
-    * label *label262
-    * label *label263
   137 set :checkOre.2:count :checkOre.1:count
   138 ucontrol getBlock :checkOre:x *tmp34 :checkOre.2:type 0 :checkOre.2:floor
   139 jump *label264 notEqual :checkOre.2:floor @ore-titanium
   140 op add :checkOre.2:count :checkOre.1:count 1
   141 label *label264
-    * label *label265
-    * label *label266
   142 jump *label269 lessThanEq :checkOre.2:count 0
   143 set :buildTitaniumDrill:bx 1
   144 set :buildTitaniumDrill:by 1
 
   146 jump *label267 notEqual :checkOre.2:count 3
   147 jump *label56 always
   148 label *label267
-    * label *label268
   149 label *label269
-    * label *label270
-    * label *label271
-    * label *label274
   150 op add :checkOre:x :buildTitaniumDrill:x 1
   151 set :checkOre:count 0
   152 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
   153 jump *label275 notEqual :checkOre:floor @ore-titanium
   154 set :checkOre:count 1
   155 label *label275
-    * label *label276
-    * label *label277
   156 op add *tmp34 :buildTitaniumDrill:y -1
   157 set :checkOre.1:count :checkOre:count
   158 ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
   159 jump *label278 notEqual :checkOre.1:floor @ore-titanium
   160 op add :checkOre.1:count :checkOre:count 1
   161 label *label278
-    * label *label279
-    * label *label280
   162 set :checkOre.2:count :checkOre.1:count
   163 ucontrol getBlock :checkOre:x *tmp34 :checkOre.2:type 0 :checkOre.2:floor
   164 jump *label281 notEqual :checkOre.2:floor @ore-titanium
   165 op add :checkOre.2:count :checkOre.1:count 1
   166 label *label281
-    * label *label282
-    * label *label283
   167 jump *label286 lessThanEq :checkOre.2:count :buildTitaniumDrill:best
   168 set :buildTitaniumDrill:bx 1
   169 set :buildTitaniumDrill:by -1
 
   171 jump *label284 notEqual :checkOre.2:count 3
   172 jump *label56 always
   173 label *label284
-    * label *label285
   174 label *label286
-    * label *label287
-    * label *label288
-    * label *label291
   175 op add :checkOre:x :buildTitaniumDrill:x -1
   176 set :checkOre:count 0
   177 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
   178 jump *label292 notEqual :checkOre:floor @ore-titanium
   179 set :checkOre:count 1
   180 label *label292
-    * label *label293
-    * label *label294
   181 op add *tmp34 :buildTitaniumDrill:y 1
   182 set :checkOre.1:count :checkOre:count
   183 ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
   184 jump *label295 notEqual :checkOre.1:floor @ore-titanium
   185 op add :checkOre.1:count :checkOre:count 1
   186 label *label295
-    * label *label296
-    * label *label297
   187 set :checkOre.2:count :checkOre.1:count
   188 ucontrol getBlock :checkOre:x *tmp34 :checkOre.2:type 0 :checkOre.2:floor
   189 jump *label298 notEqual :checkOre.2:floor @ore-titanium
   190 op add :checkOre.2:count :checkOre.1:count 1
   191 label *label298
-    * label *label299
-    * label *label300
   192 jump *label303 lessThanEq :checkOre.2:count :buildTitaniumDrill:best
   193 set :buildTitaniumDrill:bx -1
   194 set :buildTitaniumDrill:by 1
 
   196 jump *label301 notEqual :checkOre.2:count 3
   197 jump *label56 always
   198 label *label301
-    * label *label302
   199 label *label303
-    * label *label304
-    * label *label305
-    * label *label308
   200 op add :checkOre:x :buildTitaniumDrill:x -1
   201 set :checkOre:count 0
   202 ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOre:type 0 :checkOre:floor
   203 jump *label309 notEqual :checkOre:floor @ore-titanium
   204 set :checkOre:count 1
   205 label *label309
-    * label *label310
-    * label *label311
   206 op add *tmp34 :buildTitaniumDrill:y -1
   207 set :checkOre.1:count :checkOre:count
   208 ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:type 0 :checkOre.1:floor
   209 jump *label312 notEqual :checkOre.1:floor @ore-titanium
   210 op add :checkOre.1:count :checkOre:count 1
   211 label *label312
-    * label *label313
-    * label *label314
   212 set :checkOre.2:count :checkOre.1:count
   213 ucontrol getBlock :checkOre:x *tmp34 :checkOre.2:type 0 :checkOre.2:floor
   214 jump *label315 notEqual :checkOre.2:floor @ore-titanium
   215 op add :checkOre.2:count :checkOre.1:count 1
   216 label *label315
-    * label *label316
-    * label *label317
   217 jump *label320 lessThanEq :checkOre.2:count :buildTitaniumDrill:best
   218 set :buildTitaniumDrill:bx -1
   219 set :buildTitaniumDrill:by -1
-    * label *label318
-    * label *label319
   220 label *label320
-    * label *label321
-    * label *label322
   221 label *label56
   222 op div *tmp51 :buildTitaniumDrill:bx 2
   223 op add :buildTitaniumDrill:x :buildTitaniumDrill:x *tmp51
 
   231 setaddr :buildBlockAt*retaddr *label74 (h:*label74)
   232 call *label11 *invalid :buildBlockAt*retval (m:*label74) (h:*label74)
   233 label *label74
-    * label *label46
   234 set .titanium_drill :buildBlockAt*retval
   235 op add :buildBlockFromConfig:y .coreY 2
   236 set :buildBlockFromConfig:block @unloader
 
   240 set :buildBlockFromConfig:silicon 30
   241 set :buildBlockFromConfig:titanium 25
   242 setaddr :buildBlockFromConfig*retaddr *label80 (h:*label80)
-    * label *label76
   243 call *label12 *invalid :buildBlockFromConfig*retval (m:*label80) (h:*label80)
   244 label *label80
   245 set .unloader1 :buildBlockFromConfig*retval
   246 jump *label75 always
-    * label *label77
   247 multijump *tmp54 0 0 (m:marker7)
   248 multilabel *label79 (m:marker7)
-    * label *label78
   249 label *label75
   250 op add :buildBlock.6:x .coreX -2
   251 set :buildBlockFromConfig:y .coreY
   252 set :buildBlockFromConfig:x :buildBlock.6:x
   253 setaddr :buildBlockFromConfig*retaddr *label86 (h:*label86)
-    * label *label82
   254 call *label12 *invalid :buildBlockFromConfig*retval (m:*label86) (h:*label86)
   255 label *label86
   256 jump *label81 always
-    * label *label83
   257 multijump *tmp58 0 0 (m:marker8)
   258 multilabel *label85 (m:marker8)
-    * label *label84
   259 label *label81
   260 op add :buildBlockFromConfig:y .coreY 1
   261 set :buildBlockFromConfig:block @power-node
 
   265 set :buildBlockFromConfig:silicon 0
   266 set :buildBlockFromConfig:titanium 0
   267 setaddr :buildBlockFromConfig*retaddr *label92 (h:*label92)
-    * label *label88
   268 call *label12 *invalid :buildBlockFromConfig*retval (m:*label92) (h:*label92)
   269 label *label92
   270 jump *label87 always
-    * label *label89
   271 multijump *tmp62 0 0 (m:marker9)
   272 multilabel *label91 (m:marker9)
-    * label *label90
   273 label *label87
   274 op add :buildBlockFromConfig:x .coreX 1
   275 set :buildBlockFromConfig:block @micro-processor
 
   278 set :buildBlockFromConfig:lead 50
   279 set :buildBlockFromConfig:silicon 50
   280 setaddr :buildBlockFromConfig*retaddr *label98 (h:*label98)
-    * label *label94
   281 set :buildBlockFromConfig:config processor1
   282 call *label12 *invalid :buildBlockFromConfig*retval (m:*label98) (h:*label98)
   283 label *label98
   284 jump *label93 always
-    * label *label95
   285 multijump *tmp66 0 0 (m:marker10)
   286 multilabel *label97 (m:marker10)
-    * label *label96
   287 label *label93
   288 write false null ".pressEnabled"
   289 op add :buildBlockFromConfig:x .coreX -4
 
   295 set :buildBlockFromConfig:rotation 3
   296 set :buildBlockFromConfig:config @mono
   297 setaddr :buildBlockFromConfig*retaddr *label104 (h:*label104)
-    * label *label100
   298 call *label12 *invalid :buildBlockFromConfig*retval (m:*label104) (h:*label104)
   299 label *label104
   300 jump *label99 always
-    * label *label101
   301 multijump *tmp70 0 0 (m:marker11)
   302 multilabel *label103 (m:marker11)
-    * label *label102
   303 label *label99
   304 set :meetTarget:block "nothing"
   305 set :meetTarget:copper 0
 
   314 setaddr :supplyBlocks*retaddr *label109 (h:*label109)
   315 call *label9 *invalid :supplyBlocks*retval (m:*label109) (h:*label109)
   316 label *label109
-    * label *label107
   317 jump *label106 always
-    * label *label108
   318 ucontrol stop
   319 print "[salmon]"
   320 print "Done"
   321 printflush message1
   322 stop
-    * label *label110
   323 label *label111
   324 wait 1e12
   325 jump *label111 always
   326 end
   327 label *label0
   328 set .status3 "Moving..."
-    * label *label113
   329 op sub *tmp75 :moveTo:radius 0.5
-    * label *label114
   330 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp73
   331 jump *label116 notEqual *tmp73 false
   332 label *label253
   333 ucontrol approach :moveTo:x :moveTo:y *tmp75
-    * label *label115
   334 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp73
   335 jump *label253 equal *tmp73 false
   336 label *label116
-    * label *label112
   337 return :moveTo*retaddr
   338 end
   339 label *label1
 
   343 setaddr :moveTo*retaddr *label118 (h:*label118)
   344 call *label0 *invalid :moveTo*retval (m:*label118) (h:*label118)
   345 label *label118
-    * label *label117
   346 return :moveTo.1*retaddr
   347 end
   348 label *label2
 
   350 jump *label120 equal *tmp78 null
   351 ucontrol itemDrop @air 1000
   352 label *label120
-    * label *label121
   353 set :moveTo.1:x :moveToEmpty:x
   354 set :moveTo.1:y :moveToEmpty:y
   355 setaddr :moveTo.1*retaddr *label122 (h:*label122)
   356 call *label1 *invalid :moveTo.1*retval (m:*label122) (h:*label122)
   357 label *label122
-    * label *label123
   358 sensor *tmp81 @unit @firstItem
   359 jump *label125 equal *tmp81 null
   360 label *label254
   361 ucontrol itemDrop @air 1000
-    * label *label124
   362 sensor *tmp81 @unit @firstItem
   363 jump *label254 notEqual *tmp81 null
   364 label *label125
-    * label *label119
   365 return :moveToEmpty*retaddr
   366 end
   367 label *label3
 
   373 setaddr :moveTo*retaddr *label127 (h:*label127)
   374 call *label0 *invalid :moveTo*retval (m:*label127) (h:*label127)
   375 label *label127
-    * label *label126
   376 return :moveToBlock*retaddr
   377 end
   378 label *label4
   379 set .status3 "Depositing..."
-    * label *label129
   380 sensor *tmp85 @unit @firstItem
   381 jump *label130 notEqual *tmp85 :depositItems:item
   382 set *tmp90 5
 
   397 jump *label138 lessThan *tmp92 :depositItems:cap
   398 jump *label137 always
   399 label *label138
-    * label *label139
-    * label *label136
   400 sensor *tmp95 @unit @firstItem
   401 jump *label135 notEqual *tmp95 null
   402 label *label137
   403 jump *label131 always
   404 label *label130
-    * label *label140
   405 sensor *tmp97 @unit @firstItem
   406 jump *label142 equal *tmp97 null
   407 label *label255
   408 ucontrol itemDrop @air 1000
-    * label *label141
   409 sensor *tmp97 @unit @firstItem
   410 jump *label255 notEqual *tmp97 null
   411 label *label142
   412 label *label131
-    * label *label128
   413 return :depositItems*retaddr
   414 end
   415 label *label5
 
   420 print :locateOre:ore
   421 printflush message1
   422 stop
-    * label *label146
   423 label *label144
-    * label *label145
-    * label *label143
   424 return :locateOre*retaddr
   425 end
   426 label *label6
 
   436 call *label2 *invalid :moveToEmpty*retval (m:*label149) (h:*label149)
   437 label *label149
   438 set .status3 "Mining..."
-    * label *label150
   439 label *label151
   440 sensor :mineOre:item @unit @firstItem
   441 op notEqual *tmp104 :mineOre:item null
 
   444 jump *label154 equal *tmp106 false
   445 jump *label153 always
   446 label *label154
-    * label *label155
   447 ucontrol mine :mineOre:x :mineOre:y
-    * label *label152
   448 sensor *tmp108 @unit @totalItems
   449 jump *label151 lessThan *tmp108 :mineOre:amount
   450 label *label153
 
   455 setaddr :depositItems*retaddr *label156 (h:*label156)
   456 call *label4 *invalid :depositItems*retval (m:*label156) (h:*label156)
   457 label *label156
-    * label *label147
   458 return :mineOre*retaddr
   459 end
   460 label *label7
 
   464 setaddr :mineOre*retaddr *label158 (h:*label158)
   465 call *label6 *invalid :mineOre*retval (m:*label158) (h:*label158)
   466 label *label158
-    * label *label157
   467 return :mineOre.1*retaddr
   468 end
   469 label *label8
   470 set .status2 "Fetching "
   471 set .item2 :fetchBlock:item
   472 set .block2 :fetchBlock:block
-    * label *label160
   473 sensor *tmp111 :fetchBlock:block @x
   474 sensor *tmp112 :fetchBlock:block @y
   475 set :moveToEmpty:x *tmp111
 
   486 jump *label165 equal *tmp116 false
   487 ucontrol itemDrop @air 1000
   488 label *label165
-    * label *label166
-    * label *label163
   489 sensor *tmp118 @unit :fetchBlock:item
   490 op lessThan *tmp119 *tmp118 30
   491 sensor *tmp120 :fetchBlock:block :fetchBlock:item
   492 op land *tmp121 *tmp119 *tmp120
   493 jump *label162 notEqual *tmp121 false
-    * label *label164
   494 set :depositItems:block .core
   495 set :depositItems:item :fetchBlock:item
   496 set :depositItems:fromMining false
   497 setaddr :depositItems*retaddr *label167 (h:*label167)
   498 call *label4 *invalid :depositItems*retval (m:*label167) (h:*label167)
   499 label *label167
-    * label *label159
   500 return :fetchBlock*retaddr
   501 end
   502 label *label9
 
   507 sensor *tmp127 .press @coal
   508 jump *label173 greaterThanEq *tmp127 5
   509 set .status1 "Meeting the graphite target"
-    * label *label175
   510 set .status2 "Supplying "
   511 set .item2 @coal
   512 set .block2 .press
-    * label *label177
   513 sensor *tmp130 .press @itemCapacity
   514 sensor *tmp131 .press @coal
   515 op sub :supplyBlock:missing *tmp130 *tmp131
 
   521 call *label6 *invalid :mineOre*retval (m:*label180) (h:*label180)
   522 label *label180
   523 label *label178
-    * label *label179
-    * label *label176
   524 set :supplyBlocks:supplied true
   525 label *label173
-    * label *label174
   526 label *label171
-    * label *label172
   527 sensor *tmp135 .core @silicon
   528 jump *label181 greaterThanEq *tmp135 .siliconTarget
   529 sensor *tmp138 .smelter @coal
   530 jump *label183 greaterThanEq *tmp138 5
   531 set .status1 "Meeting the silicon target (coal)"
-    * label *label185
   532 set .status2 "Supplying "
   533 set .item2 @coal
   534 set .block2 .smelter
-    * label *label187
   535 sensor *tmp141 .smelter @itemCapacity
   536 sensor *tmp142 .smelter @coal
   537 op sub :supplyBlock.1:missing *tmp141 *tmp142
 
   543 call *label6 *invalid :mineOre*retval (m:*label190) (h:*label190)
   544 label *label190
   545 label *label188
-    * label *label189
-    * label *label186
   546 set :supplyBlocks:supplied true
   547 jump *label184 always
   548 label *label183
   549 sensor *tmp146 .smelter @sand
   550 jump *label191 greaterThanEq *tmp146 5
   551 set .status1 "Meeting the silicon target (sand)"
-    * label *label193
   552 set .status2 "Supplying "
   553 set .item2 @sand
   554 set .block2 .smelter
-    * label *label195
   555 sensor *tmp149 .smelter @itemCapacity
   556 sensor *tmp150 .smelter @sand
   557 op sub :supplyBlock.2:missing *tmp149 *tmp150
 
   563 call *label6 *invalid :mineOre*retval (m:*label198) (h:*label198)
   564 label *label198
   565 label *label196
-    * label *label197
-    * label *label194
   566 set :supplyBlocks:supplied true
   567 label *label191
-    * label *label192
   568 label *label184
   569 label *label181
-    * label *label182
   570 sensor *tmp154 .battery @totalPower
   571 jump *label199 greaterThanEq *tmp154 .powerTarget
   572 set .status1 "Supplying generator"
-    * label *label201
   573 set .status2 "Supplying "
   574 set .item2 @coal
   575 set .block2 .generator
-    * label *label203
   576 sensor *tmp157 .generator @itemCapacity
   577 sensor *tmp158 .generator @coal
   578 op sub :supplyBlock.3:missing *tmp157 *tmp158
 
   584 call *label6 *invalid :mineOre*retval (m:*label206) (h:*label206)
   585 label *label206
   586 label *label204
-    * label *label205
-    * label *label202
   587 set :supplyBlocks:supplied true
   588 label *label199
-    * label *label200
   589 label *label169
-    * label *label170
   590 sensor *tmp162 .titanium_drill @titanium
   591 jump *label207 greaterThanEq *tmp162 7
   592 sensor *tmp165 .core @copper
   593 jump *label209 greaterThanEq *tmp165 .copperTarget
   594 set .status1 "Meeting the copper target"
-    * label *label211
   595 set .status2 "Mining "
   596 set .item2 @copper
   597 set .block2 "core"
-    * label *label212
   598 set :mineOre.1:ore @copper
   599 setaddr :mineOre.1*retaddr *label213 (h:*label213)
   600 call *label7 *invalid :mineOre.1*retval (m:*label213) (h:*label213)
 
   604 sensor *tmp168 .core @lead
   605 jump *label214 greaterThanEq *tmp168 .leadTarget
   606 set .status1 "Meeting the lead target"
-    * label *label216
   607 set .status2 "Mining "
   608 set .item2 @lead
   609 set .block2 "core"
-    * label *label217
   610 set :mineOre.1:ore @lead
   611 setaddr :mineOre.1*retaddr *label218 (h:*label218)
   612 call *label7 *invalid :mineOre.1*retval (m:*label218) (h:*label218)
 
   615 label *label214
   616 jump *label219 notEqual :supplyBlocks:supplied false
   617 set .status1 "Supplying base"
-    * label *label221
   618 sensor :supplyBlocks:coal .core @coal
   619 sensor :supplyBlocks:sand .core @sand
   620 set *tmp176 @sand
 
   624 set .status2 "Mining "
   625 set .item2 *tmp176
   626 set .block2 "core"
-    * label *label224
   627 set :mineOre.1:ore *tmp176
   628 setaddr :mineOre.1*retaddr *label225 (h:*label225)
   629 call *label7 *invalid :mineOre.1*retval (m:*label225) (h:*label225)
   630 label *label225
   631 label *label219
-    * label *label220
   632 label *label215
   633 label *label210
   634 jump *label208 always
   635 label *label207
   636 set .status1 "Fetching titanium"
-    * label *label226
   637 set :fetchBlock:block .titanium_drill
   638 set :fetchBlock:item @titanium
   639 setaddr :fetchBlock*retaddr *label227 (h:*label227)
   640 call *label8 *invalid :fetchBlock*retval (m:*label227) (h:*label227)
   641 label *label227
   642 label *label208
-    * label *label168
   643 return :supplyBlocks*retaddr
   644 end
   645 label *label10
 
   649 set .graphiteTarget :meetTarget:graphite
   650 set .siliconTarget :meetTarget:silicon
   651 set .titaniumTarget :meetTarget:titanium
-    * label *label229
   652 sensor *tmp177 .core @copper
   653 op lessThan *tmp178 *tmp177 .copperTarget
   654 sensor *tmp179 .core @lead
 
   671 setaddr :supplyBlocks*retaddr *label232 (h:*label232)
   672 call *label9 *invalid :supplyBlocks*retval (m:*label232) (h:*label232)
   673 label *label232
-    * label *label230
   674 sensor *tmp177 .core @copper
   675 op lessThan *tmp178 *tmp177 .copperTarget
   676 sensor *tmp179 .core @lead
 
   690 op or *tmp194 *tmp189 *tmp192
   691 jump *label256 notEqual *tmp194 false
   692 label *label231
-    * label *label228
   693 return :meetTarget*retaddr
   694 end
   695 label *label11
 
   699 call *label1 *invalid :moveTo.1*retval (m:*label234) (h:*label234)
   700 label *label234
   701 set .status3 "Building..."
-    * label *label235
   702 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
   703 jump *label236 equal :buildBlockAt:building null
   704 jump *label238 notEqual :buildBlockAt:type :buildBlockAt:block
   705 set :buildBlockAt*retval :buildBlockAt:building
   706 jump *label233 always
   707 label *label238
-    * label *label239
   708 print "[salmon]"
   709 print "Cannot build at ("
   710 print :buildBlockAt:x
 
   714 print :buildBlockAt:building
   715 printflush message1
   716 stop
-    * label *label240
   717 label *label236
-    * label *label237
   718 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
   719 label *label241
   720 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building :buildBlockAt:floor
-    * label *label242
   721 jump *label241 notEqual :buildBlockAt:type :buildBlockAt:block
-    * label *label243
   722 set :buildBlockAt*retval :buildBlockAt:building
   723 label *label233
   724 return :buildBlockAt*retaddr
 
   742 call *label11 *invalid :buildBlockAt*retval (m:*label246) (h:*label246)
   743 label *label246
   744 set :buildBlockFromConfig*retval :buildBlockAt*retval
-    * label *label244
   745 return :buildBlockFromConfig*retaddr
   746 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-5 instructions):
 
   143 set :buildTitaniumDrill:bx 1
   144 set :buildTitaniumDrill:by 1
   145 set :buildTitaniumDrill:best :checkOre.2:count
-    * jump *label267 notEqual :checkOre.2:count 3
-    * jump *label56 always
+  146 jump *label56 equal :checkOre.2:count 3
   147 label *label267
   148 label *label269
   149 op add :checkOre:x :buildTitaniumDrill:x 1
 
   167 set :buildTitaniumDrill:bx 1
   168 set :buildTitaniumDrill:by -1
   169 set :buildTitaniumDrill:best :checkOre.2:count
-    * jump *label284 notEqual :checkOre.2:count 3
-    * jump *label56 always
+  170 jump *label56 equal :checkOre.2:count 3
   171 label *label284
   172 label *label286
   173 op add :checkOre:x :buildTitaniumDrill:x -1
 
   191 set :buildTitaniumDrill:bx -1
   192 set :buildTitaniumDrill:by 1
   193 set :buildTitaniumDrill:best :checkOre.2:count
-    * jump *label301 notEqual :checkOre.2:count 3
-    * jump *label56 always
+  194 jump *label56 equal :checkOre.2:count 3
   195 label *label301
   196 label *label303
   197 op add :checkOre:x :buildTitaniumDrill:x -1
 
   391 label *label135
   392 ucontrol itemDrop :depositItems:block 30
   393 sensor *tmp92 :depositItems:block :depositItems:item
-    * jump *label138 lessThan *tmp92 :depositItems:cap
-    * jump *label137 always
+  394 jump *label137 greaterThanEq *tmp92 :depositItems:cap
   395 label *label138
   396 sensor *tmp95 @unit @firstItem
   397 jump *label135 notEqual *tmp95 null
 
   437 op notEqual *tmp104 :mineOre:item null
   438 op notEqual *tmp105 :mineOre:item :mineOre:ore
   439 op land *tmp106 *tmp104 *tmp105
-    * jump *label154 equal *tmp106 false
-    * jump *label153 always
+  440 jump *label153 notEqual *tmp106 false
   441 label *label154
   442 ucontrol mine :mineOre:x :mineOre:y
   443 sensor *tmp108 @unit @totalItems

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   144 set :buildTitaniumDrill:by 1
   145 set :buildTitaniumDrill:best :checkOre.2:count
   146 jump *label56 equal :checkOre.2:count 3
-    * label *label267
   147 label *label269
   148 op add :checkOre:x :buildTitaniumDrill:x 1
   149 set :checkOre:count 0
 
   167 set :buildTitaniumDrill:by -1
   168 set :buildTitaniumDrill:best :checkOre.2:count
   169 jump *label56 equal :checkOre.2:count 3
-    * label *label284
   170 label *label286
   171 op add :checkOre:x :buildTitaniumDrill:x -1
   172 set :checkOre:count 0
 
   190 set :buildTitaniumDrill:by 1
   191 set :buildTitaniumDrill:best :checkOre.2:count
   192 jump *label56 equal :checkOre.2:count 3
-    * label *label301
   193 label *label303
   194 op add :checkOre:x :buildTitaniumDrill:x -1
   195 set :checkOre:count 0
 
   389 ucontrol itemDrop :depositItems:block 30
   390 sensor *tmp92 :depositItems:block :depositItems:item
   391 jump *label137 greaterThanEq *tmp92 :depositItems:cap
-    * label *label138
   392 sensor *tmp95 @unit @firstItem
   393 jump *label135 notEqual *tmp95 null
   394 label *label137
 
   434 op notEqual *tmp105 :mineOre:item :mineOre:ore
   435 op land *tmp106 *tmp104 *tmp105
   436 jump *label153 notEqual *tmp106 false
-    * label *label154
   437 ucontrol mine :mineOre:x :mineOre:y
   438 sensor *tmp108 @unit @totalItems
   439 jump *label151 lessThan *tmp108 :mineOre:amount

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   388 label *label135
   389 ucontrol itemDrop :depositItems:block 30
   390 sensor *tmp92 :depositItems:block :depositItems:item
-    * jump *label137 greaterThanEq *tmp92 :depositItems:cap
+  391 jump *label131 greaterThanEq *tmp92 :depositItems:cap
   392 sensor *tmp95 @unit @firstItem
   393 jump *label135 notEqual *tmp95 null
   394 label *label137
-    * jump *label131 always
+  395 return :depositItems*retaddr
   396 label *label130
   397 sensor *tmp97 @unit @firstItem
   398 jump *label142 equal *tmp97 null
 
   589 setaddr :mineOre.1*retaddr *label213 (h:*label213)
   590 call *label7 *invalid :mineOre.1*retval (m:*label213) (h:*label213)
   591 label *label213
-    * jump *label210 always
+  592 return :supplyBlocks*retaddr
   593 label *label209
   594 sensor *tmp168 .core @lead
   595 jump *label214 greaterThanEq *tmp168 .leadTarget
 
   601 setaddr :mineOre.1*retaddr *label218 (h:*label218)
   602 call *label7 *invalid :mineOre.1*retval (m:*label218) (h:*label218)
   603 label *label218
-    * jump *label215 always
+  604 return :supplyBlocks*retaddr
   605 label *label214
-    * jump *label219 notEqual :supplyBlocks:supplied false
+  606 jump *label208 notEqual :supplyBlocks:supplied false
   607 set .status1 "Supplying base"
   608 sensor :supplyBlocks:coal .core @coal
   609 sensor :supplyBlocks:sand .core @sand
 
   621 label *label219
   622 label *label215
   623 label *label210
-    * jump *label208 always
+  624 return :supplyBlocks*retaddr
   625 label *label207
   626 set .status1 "Fetching titanium"
   627 set :fetchBlock:block .titanium_drill
 
   693 jump *label236 equal :buildBlockAt:building null
   694 jump *label238 notEqual :buildBlockAt:type :buildBlockAt:block
   695 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label233 always
+  696 return :buildBlockAt*retaddr
   697 label *label238
   698 print "[salmon]"
   699 print "Cannot build at ("

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-31 instructions):
 
    36 label *label21
    37 set *tmp5 :buildBlockFromConfig*retval
    38 jump *label16 always
-    * multijump *tmp6 0 0 (m:marker0)
-    * multilabel *label20 (m:marker0)
    39 label *label16
    40 set .press *tmp5
    41 op add :buildBlock.1:y .coreY 4
 
    49 label *label27
    50 set *tmp9 :buildBlockFromConfig*retval
    51 jump *label22 always
-    * multijump *tmp10 0 0 (m:marker1)
-    * multilabel *label26 (m:marker1)
    52 label *label22
    53 set .battery *tmp9
    54 op add :buildBlock.2:y .coreY 3
 
    62 label *label33
    63 set *tmp13 :buildBlockFromConfig*retval
    64 jump *label28 always
-    * multijump *tmp14 0 0 (m:marker2)
-    * multilabel *label32 (m:marker2)
    65 label *label28
    66 set .generator *tmp13
    67 set .powerTarget 1000
 
    75 call *label12 *invalid :buildBlockFromConfig*retval (m:*label39) (h:*label39)
    76 label *label39
    77 jump *label34 always
-    * multijump *tmp18 0 0 (m:marker3)
-    * multilabel *label38 (m:marker3)
    78 label *label34
    79 op add :buildBlock.4:x .coreX 1.5
    80 set :buildBlockFromConfig:block @silicon-smelter
 
    87 label *label45
    88 set *tmp21 :buildBlockFromConfig*retval
    89 jump *label40 always
-    * multijump *tmp22 0 0 (m:marker4)
-    * multilabel *label44 (m:marker4)
    90 label *label40
    91 set .smelter *tmp21
    92 set :meetTarget:block @pneumatic-drill
 
   228 label *label80
   229 set .unloader1 :buildBlockFromConfig*retval
   230 jump *label75 always
-    * multijump *tmp54 0 0 (m:marker7)
-    * multilabel *label79 (m:marker7)
   231 label *label75
   232 op add :buildBlock.6:x .coreX -2
   233 set :buildBlockFromConfig:y .coreY
 
   236 call *label12 *invalid :buildBlockFromConfig*retval (m:*label86) (h:*label86)
   237 label *label86
   238 jump *label81 always
-    * multijump *tmp58 0 0 (m:marker8)
-    * multilabel *label85 (m:marker8)
   239 label *label81
   240 op add :buildBlockFromConfig:y .coreY 1
   241 set :buildBlockFromConfig:block @power-node
 
   248 call *label12 *invalid :buildBlockFromConfig*retval (m:*label92) (h:*label92)
   249 label *label92
   250 jump *label87 always
-    * multijump *tmp62 0 0 (m:marker9)
-    * multilabel *label91 (m:marker9)
   251 label *label87
   252 op add :buildBlockFromConfig:x .coreX 1
   253 set :buildBlockFromConfig:block @micro-processor
 
   260 call *label12 *invalid :buildBlockFromConfig*retval (m:*label98) (h:*label98)
   261 label *label98
   262 jump *label93 always
-    * multijump *tmp66 0 0 (m:marker10)
-    * multilabel *label97 (m:marker10)
   263 label *label93
   264 write false null ".pressEnabled"
   265 op add :buildBlockFromConfig:x .coreX -4
 
   274 call *label12 *invalid :buildBlockFromConfig*retval (m:*label104) (h:*label104)
   275 label *label104
   276 jump *label99 always
-    * multijump *tmp70 0 0 (m:marker11)
-    * multilabel *label103 (m:marker11)
   277 label *label99
   278 set :meetTarget:block "nothing"
   279 set :meetTarget:copper 0
 
   289 call *label9 *invalid :supplyBlocks*retval (m:*label109) (h:*label109)
   290 label *label109
   291 jump *label106 always
-    * ucontrol stop
-    * print "[salmon]"
-    * print "Done"
-    * printflush message1
-    * stop
-    * label *label111
-    * wait 1e12
-    * jump *label111 always
-    * end
   292 label *label0
   293 set .status3 "Moving..."
   294 op sub *tmp75 :moveTo:radius 0.5
 
   300 jump *label253 equal *tmp73 false
   301 label *label116
   302 return :moveTo*retaddr
-    * end
   303 label *label1
   304 set :moveTo:x :moveTo.1:x
   305 set :moveTo:y :moveTo.1:y
 
   308 call *label0 *invalid :moveTo*retval (m:*label118) (h:*label118)
   309 label *label118
   310 return :moveTo.1*retaddr
-    * end
   311 label *label2
   312 sensor *tmp78 @unit @firstItem
   313 jump *label120 equal *tmp78 null
 
   326 jump *label254 notEqual *tmp81 null
   327 label *label125
   328 return :moveToEmpty*retaddr
-    * end
   329 label *label3
   330 sensor *tmp83 :moveToBlock:block @x
   331 sensor *tmp84 :moveToBlock:block @y
 
   336 call *label0 *invalid :moveTo*retval (m:*label127) (h:*label127)
   337 label *label127
   338 return :moveToBlock*retaddr
-    * end
   339 label *label4
   340 set .status3 "Depositing..."
   341 sensor *tmp85 @unit @firstItem
 
   358 jump *label131 greaterThanEq *tmp92 :depositItems:cap
   359 sensor *tmp95 @unit @firstItem
   360 jump *label135 notEqual *tmp95 null
-    * label *label137
   361 return :depositItems*retaddr
   362 label *label130
   363 sensor *tmp97 @unit @firstItem
 
   369 label *label142
   370 label *label131
   371 return :depositItems*retaddr
-    * end
   372 label *label5
   373 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp99 0
   374 jump *label144 notEqual *tmp99 false
 
   379 stop
   380 label *label144
   381 return :locateOre*retaddr
-    * end
   382 label *label6
   383 set :locateOre:ore :mineOre:ore
   384 setaddr :locateOre*retaddr *label148 (h:*label148)
 
   410 call *label4 *invalid :depositItems*retval (m:*label156) (h:*label156)
   411 label *label156
   412 return :mineOre*retaddr
-    * end
   413 label *label7
   414 set :mineOre:ore :mineOre.1:ore
   415 set :mineOre:amount 30
 
   418 call *label6 *invalid :mineOre*retval (m:*label158) (h:*label158)
   419 label *label158
   420 return :mineOre.1*retaddr
-    * end
   421 label *label8
   422 set .status2 "Fetching "
   423 set .item2 :fetchBlock:item
 
   450 call *label4 *invalid :depositItems*retval (m:*label167) (h:*label167)
   451 label *label167
   452 return :fetchBlock*retaddr
-    * end
   453 label *label9
   454 set :supplyBlocks:supplied false
   455 jump *label169 notEqual .unloader1 null
 
   579 setaddr :mineOre.1*retaddr *label225 (h:*label225)
   580 call *label7 *invalid :mineOre.1*retval (m:*label225) (h:*label225)
   581 label *label225
-    * label *label219
-    * label *label215
-    * label *label210
   582 return :supplyBlocks*retaddr
   583 label *label207
   584 set .status1 "Fetching titanium"
 
   589 label *label227
   590 label *label208
   591 return :supplyBlocks*retaddr
-    * end
   592 label *label10
   593 set .nextBlock :meetTarget:block
   594 set .copperTarget :meetTarget:copper
 
   638 jump *label256 notEqual *tmp194 false
   639 label *label231
   640 return :meetTarget*retaddr
-    * end
   641 label *label11
   642 set :moveTo.1:x :buildBlockAt:x
   643 set :moveTo.1:y :buildBlockAt:y
 
   666 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building :buildBlockAt:floor
   667 jump *label241 notEqual :buildBlockAt:type :buildBlockAt:block
   668 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label233
   669 return :buildBlockAt*retaddr
-    * end
   670 label *label12
   671 set :meetTarget:block :buildBlockFromConfig:block
   672 set :meetTarget:copper :buildBlockFromConfig:copper
 
   687 label *label246
   688 set :buildBlockFromConfig*retval :buildBlockAt*retval
   689 return :buildBlockFromConfig*retaddr
-    * end

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-10 instructions):
 
    35 call *label12 *invalid :buildBlockFromConfig*retval (m:*label21) (h:*label21)
    36 label *label21
    37 set *tmp5 :buildBlockFromConfig*retval
-    * jump *label16 always
    38 label *label16
    39 set .press *tmp5
    40 op add :buildBlock.1:y .coreY 4
 
    47 call *label12 *invalid :buildBlockFromConfig*retval (m:*label27) (h:*label27)
    48 label *label27
    49 set *tmp9 :buildBlockFromConfig*retval
-    * jump *label22 always
    50 label *label22
    51 set .battery *tmp9
    52 op add :buildBlock.2:y .coreY 3
 
    59 call *label12 *invalid :buildBlockFromConfig*retval (m:*label33) (h:*label33)
    60 label *label33
    61 set *tmp13 :buildBlockFromConfig*retval
-    * jump *label28 always
    62 label *label28
    63 set .generator *tmp13
    64 set .powerTarget 1000
 
    71 setaddr :buildBlockFromConfig*retaddr *label39 (h:*label39)
    72 call *label12 *invalid :buildBlockFromConfig*retval (m:*label39) (h:*label39)
    73 label *label39
-    * jump *label34 always
    74 label *label34
    75 op add :buildBlock.4:x .coreX 1.5
    76 set :buildBlockFromConfig:block @silicon-smelter
 
    82 call *label12 *invalid :buildBlockFromConfig*retval (m:*label45) (h:*label45)
    83 label *label45
    84 set *tmp21 :buildBlockFromConfig*retval
-    * jump *label40 always
    85 label *label40
    86 set .smelter *tmp21
    87 set :meetTarget:block @pneumatic-drill
 
   222 call *label12 *invalid :buildBlockFromConfig*retval (m:*label80) (h:*label80)
   223 label *label80
   224 set .unloader1 :buildBlockFromConfig*retval
-    * jump *label75 always
   225 label *label75
   226 op add :buildBlock.6:x .coreX -2
   227 set :buildBlockFromConfig:y .coreY
 
   229 setaddr :buildBlockFromConfig*retaddr *label86 (h:*label86)
   230 call *label12 *invalid :buildBlockFromConfig*retval (m:*label86) (h:*label86)
   231 label *label86
-    * jump *label81 always
   232 label *label81
   233 op add :buildBlockFromConfig:y .coreY 1
   234 set :buildBlockFromConfig:block @power-node
 
   240 setaddr :buildBlockFromConfig*retaddr *label92 (h:*label92)
   241 call *label12 *invalid :buildBlockFromConfig*retval (m:*label92) (h:*label92)
   242 label *label92
-    * jump *label87 always
   243 label *label87
   244 op add :buildBlockFromConfig:x .coreX 1
   245 set :buildBlockFromConfig:block @micro-processor
 
   251 set :buildBlockFromConfig:config processor1
   252 call *label12 *invalid :buildBlockFromConfig*retval (m:*label98) (h:*label98)
   253 label *label98
-    * jump *label93 always
   254 label *label93
   255 write false null ".pressEnabled"
   256 op add :buildBlockFromConfig:x .coreX -4
 
   264 setaddr :buildBlockFromConfig*retaddr *label104 (h:*label104)
   265 call *label12 *invalid :buildBlockFromConfig*retval (m:*label104) (h:*label104)
   266 label *label104
-    * jump *label99 always
   267 label *label99
   268 set :meetTarget:block "nothing"
   269 set :meetTarget:copper 0

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    35 call *label12 *invalid :buildBlockFromConfig*retval (m:*label21) (h:*label21)
    36 label *label21
    37 set *tmp5 :buildBlockFromConfig*retval
-    * label *label16
    38 set .press *tmp5
    39 op add :buildBlock.1:y .coreY 4
    40 set :buildBlockFromConfig:block @battery
 
    46 call *label12 *invalid :buildBlockFromConfig*retval (m:*label27) (h:*label27)
    47 label *label27
    48 set *tmp9 :buildBlockFromConfig*retval
-    * label *label22
    49 set .battery *tmp9
    50 op add :buildBlock.2:y .coreY 3
    51 set :buildBlockFromConfig:block @combustion-generator
 
    57 call *label12 *invalid :buildBlockFromConfig*retval (m:*label33) (h:*label33)
    58 label *label33
    59 set *tmp13 :buildBlockFromConfig*retval
-    * label *label28
    60 set .generator *tmp13
    61 set .powerTarget 1000
    62 op add :buildBlock.3:x .coreX -1
 
    68 setaddr :buildBlockFromConfig*retaddr *label39 (h:*label39)
    69 call *label12 *invalid :buildBlockFromConfig*retval (m:*label39) (h:*label39)
    70 label *label39
-    * label *label34
    71 op add :buildBlock.4:x .coreX 1.5
    72 set :buildBlockFromConfig:block @silicon-smelter
    73 set :buildBlockFromConfig:x :buildBlock.4:x
 
    78 call *label12 *invalid :buildBlockFromConfig*retval (m:*label45) (h:*label45)
    79 label *label45
    80 set *tmp21 :buildBlockFromConfig*retval
-    * label *label40
    81 set .smelter *tmp21
    82 set :meetTarget:block @pneumatic-drill
    83 set :meetTarget:copper 18
 
   217 call *label12 *invalid :buildBlockFromConfig*retval (m:*label80) (h:*label80)
   218 label *label80
   219 set .unloader1 :buildBlockFromConfig*retval
-    * label *label75
   220 op add :buildBlock.6:x .coreX -2
   221 set :buildBlockFromConfig:y .coreY
   222 set :buildBlockFromConfig:x :buildBlock.6:x
   223 setaddr :buildBlockFromConfig*retaddr *label86 (h:*label86)
   224 call *label12 *invalid :buildBlockFromConfig*retval (m:*label86) (h:*label86)
   225 label *label86
-    * label *label81
   226 op add :buildBlockFromConfig:y .coreY 1
   227 set :buildBlockFromConfig:block @power-node
   228 set :buildBlockFromConfig:x :buildBlock.6:x
 
   233 setaddr :buildBlockFromConfig*retaddr *label92 (h:*label92)
   234 call *label12 *invalid :buildBlockFromConfig*retval (m:*label92) (h:*label92)
   235 label *label92
-    * label *label87
   236 op add :buildBlockFromConfig:x .coreX 1
   237 set :buildBlockFromConfig:block @micro-processor
   238 set :buildBlockFromConfig:y :buildBlock.1:y
 
   243 set :buildBlockFromConfig:config processor1
   244 call *label12 *invalid :buildBlockFromConfig*retval (m:*label98) (h:*label98)
   245 label *label98
-    * label *label93
   246 write false null ".pressEnabled"
   247 op add :buildBlockFromConfig:x .coreX -4
   248 op add :buildBlockFromConfig:y .coreY -1
 
   255 setaddr :buildBlockFromConfig*retaddr *label104 (h:*label104)
   256 call *label12 *invalid :buildBlockFromConfig*retval (m:*label104) (h:*label104)
   257 label *label104
-    * label *label99
   258 set :meetTarget:block "nothing"
   259 set :meetTarget:copper 0
   260 set :meetTarget:lead 15

Modifications by Final phase, Print Merging, iteration 1 (-4 instructions):
 
   352 label *label5
   353 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp99 0
   354 jump *label144 notEqual *tmp99 false
-    * print "[salmon]"
-    * print "Cannot locate "
+  355 print "[salmon]Cannot locate "
   356 print :locateOre:ore
   357 printflush message1
   358 stop
 
   630 set :buildBlockAt*retval :buildBlockAt:building
   631 return :buildBlockAt*retaddr
   632 label *label238
-    * print "[salmon]"
-    * print "Cannot build at ("
-    * print :buildBlockAt:x
-    * print ", "
-    * print :buildBlockAt:y
-    * print "), tile already contains "
+  633 print "[salmon]Cannot build at ({0}, {0}), tile already contains "
+  634 format :buildBlockAt:x
+  635 format :buildBlockAt:y
   636 print :buildBlockAt:building
   637 printflush message1
   638 stop

Final code before resolving virtual instructions:

    0:  jump *label326 always 0 0                                    var
    1:  draw triangle message1 processor1 .battery .block2 .copperTa ...
    2:  draw triangle .coreX .coreY .generator .graphiteTarget .item ...
    3:  draw triangle .nextBlock .powerTarget .press .siliconTarget  ...
    4:  draw triangle .status2 .status3 .titaniumTarget .titanium_dr ...
    5:  draw triangle :buildBlock.4:x :buildBlock:x :buildBlock.6:x  ...
    6:  draw triangle :buildBlockAt:block :buildBlockAt:building :bu ...
    7:  draw triangle :buildBlockAt:x :buildBlockAt:y :buildBlockFro ...
    8:  draw triangle :buildBlockFromConfig:lead :buildBlockFromConf ...
    9:  draw triangle :buildTitaniumDrill:best :buildTitaniumDrill:b ...
   10:  draw triangle :checkOre.1:count :checkOre:count :checkOre.2: ...
   11:  draw triangle :checkOre.1:type :checkOre.2:type :checkOre:x  ...
   12:  draw triangle :depositItems:item :fetchBlock:block :fetchBlo ...
   13:  draw triangle :locateOre:y :meetTarget:block :meetTarget:cop ...
   14:  draw triangle :meetTarget:titanium :mineOre:amount :mineOre: ...
   15:  draw triangle :mineOre:x :mineOre:y :moveTo:radius :moveTo.1 ...
   16:  draw triangle :moveTo:y :moveToBlock:block :moveToBlock:radi ...
   17:  draw triangle :supplyBlock:missing :supplyBlock.2:missing :s ...
        label *label326                                              ...
   18:  set .press null                                              ...
   19:  set .generator null                                          ...
   20:  set .battery null                                            ...
   21:  set .smelter null                                            ...
   22:  set .titanium_drill null                                     ...
   23:  set .unloader1 null                                          ...
   24:  set .nextBlock ""                                            volatile var
   25:  set .copperTarget 0                                          ...
   26:  set .leadTarget 0                                            ...
   27:  set .graphiteTarget 0                                        ...
   28:  set .siliconTarget 0                                         ...
   29:  set .titaniumTarget 0                                        ...
   30:  set .powerTarget 0                                           ...
   31:  set .status1 ""                                              ...
   32:  set .status2 ""                                              ...
   33:  set .item2 ""                                                ...
   34:  set .block2 ""                                               ...
   35:  set .status3 ""                                              ...
        label *label13                                               do
   36:  ubind @poly                                                  ubind(@poly);
   37:  ulocate building core false @copper .coreX .coreY 0 .core    core = ulocate(:building, :core, false, out coreX, out coreY);
   38:  jump *label13 equal .core null                               do
   39:  op add :buildBlock:x .coreX -1.5                             for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, rotation, config in cfg do
   40:  op add :buildBlock:y .coreY 2.5                              ...
   41:  set :buildBlockFromConfig:block @graphite-press              ...
   42:  set :buildBlockFromConfig:x :buildBlock:x                    ...
   43:  set :buildBlockFromConfig:y :buildBlock:y                    ...
   44:  set :buildBlockFromConfig:copper 75                          ...
   45:  set :buildBlockFromConfig:lead 30                            ...
   46:  set :buildBlockFromConfig:graphite 0                         ...
   47:  set :buildBlockFromConfig:silicon 0                          ...
   48:  set :buildBlockFromConfig:titanium 0                         ...
   49:  set :buildBlockFromConfig:rotation 0                         ...
   50:  set :buildBlockFromConfig:config null                        ...
   51:  setaddr :buildBlockFromConfig*retaddr *label21               ...
   52:  call *label12 *invalid :buildBlockFromConfig*retval          return buildBlockFromConfig(block, x, y, copper, lead, graphite, silicon, titanium, rotation, config);
        label *label21                                               ...
   53:  set *tmp5 :buildBlockFromConfig*retval                       ...
   54:  set .press *tmp5                                             press = buildBlock(ref PRESS);
   55:  op add :buildBlock.1:y .coreY 4                              for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, rotation, config in cfg do
   56:  set :buildBlockFromConfig:block @battery                     ...
   57:  set :buildBlockFromConfig:x .coreX                           ...
   58:  set :buildBlockFromConfig:y :buildBlock.1:y                  ...
   59:  set :buildBlockFromConfig:copper 5                           ...
   60:  set :buildBlockFromConfig:lead 20                            ...
   61:  setaddr :buildBlockFromConfig*retaddr *label27               ...
   62:  call *label12 *invalid :buildBlockFromConfig*retval          return buildBlockFromConfig(block, x, y, copper, lead, graphite, silicon, titanium, rotation, config);
        label *label27                                               ...
   63:  set *tmp9 :buildBlockFromConfig*retval                       ...
   64:  set .battery *tmp9                                           battery = buildBlock(ref BATTERY1);
   65:  op add :buildBlock.2:y .coreY 3                              for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, rotation, config in cfg do
   66:  set :buildBlockFromConfig:block @combustion-generator        ...
   67:  set :buildBlockFromConfig:x .coreX                           ...
   68:  set :buildBlockFromConfig:y :buildBlock.2:y                  ...
   69:  set :buildBlockFromConfig:copper 25                          ...
   70:  set :buildBlockFromConfig:lead 15                            ...
   71:  setaddr :buildBlockFromConfig*retaddr *label33               ...
   72:  call *label12 *invalid :buildBlockFromConfig*retval          return buildBlockFromConfig(block, x, y, copper, lead, graphite, silicon, titanium, rotation, config);
        label *label33                                               ...
   73:  set *tmp13 :buildBlockFromConfig*retval                      ...
   74:  set .generator *tmp13                                        generator = buildBlock(ref GENERATOR);
   75:  set .powerTarget 1000                                        powerTarget = 1000;
   76:  op add :buildBlock.3:x .coreX -1                             for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, rotation, config in cfg do
   77:  set :buildBlockFromConfig:block @battery                     ...
   78:  set :buildBlockFromConfig:x :buildBlock.3:x                  ...
   79:  set :buildBlockFromConfig:y :buildBlock.1:y                  ...
   80:  set :buildBlockFromConfig:copper 5                           ...
   81:  set :buildBlockFromConfig:lead 20                            ...
   82:  setaddr :buildBlockFromConfig*retaddr *label39               ...
   83:  call *label12 *invalid :buildBlockFromConfig*retval          return buildBlockFromConfig(block, x, y, copper, lead, graphite, silicon, titanium, rotation, config);
        label *label39                                               ...
   84:  op add :buildBlock.4:x .coreX 1.5                            for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, rotation, config in cfg do
   85:  set :buildBlockFromConfig:block @silicon-smelter             ...
   86:  set :buildBlockFromConfig:x :buildBlock.4:x                  ...
   87:  set :buildBlockFromConfig:y :buildBlock:y                    ...
   88:  set :buildBlockFromConfig:copper 30                          ...
   89:  set :buildBlockFromConfig:lead 25                            ...
   90:  setaddr :buildBlockFromConfig*retaddr *label45               ...
   91:  call *label12 *invalid :buildBlockFromConfig*retval          return buildBlockFromConfig(block, x, y, copper, lead, graphite, silicon, titanium, rotation, config);
        label *label45                                               ...
   92:  set *tmp21 :buildBlockFromConfig*retval                      ...
   93:  set .smelter *tmp21                                          smelter = buildBlock(ref SMELTER);
   94:  set :meetTarget:block @pneumatic-drill                       meetTarget(block, copper, lead, graphite, silicon, titanium);
   95:  set :meetTarget:copper 18                                    ...
   96:  set :meetTarget:lead 0                                       ...
   97:  set :meetTarget:graphite 10                                  ...
   98:  set :meetTarget:silicon 0                                    ...
   99:  set :meetTarget:titanium 0                                   ...
  100:  setaddr :meetTarget*retaddr *label248                        ...
  101:  call *label10 *invalid :meetTarget*retval                    ...
        label *label248                                              ...
  102:  set :locateOre:ore @titanium                                 locateOre(@titanium, out x, out y);
  103:  setaddr :locateOre*retaddr *label52                          ...
  104:  call *label5 *invalid :locateOre*retval                      ...
        label *label52                                               ...
  105:  set :buildTitaniumDrill:x :locateOre:x                       ...
  106:  set :buildTitaniumDrill:y :locateOre:y                       ...
  107:  set :moveTo.1:x :locateOre:x                                 moveTo(x, y);
  108:  set :moveTo.1:y :locateOre:y                                 ...
  109:  setaddr :moveTo.1*retaddr *label53                           ...
  110:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label53                                               ...
  111:  set :buildTitaniumDrill:best 0                               var best = 0, bx = 0, by = 0;
  112:  set :buildTitaniumDrill:bx 0                                 ...
  113:  set :buildTitaniumDrill:by 0                                 ...
  114:  op add :checkOre:x :buildTitaniumDrill:x 1                   checkOre(x + xx, y, in out count);
  115:  set :checkOre:count 0                                        ...
  116:  ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOr getBlock(x, y, out type, out floor);
  117:  jump *label258 notEqual :checkOre:floor @ore-titanium        if floor == @ore-titanium then count++; end;
  118:  set :checkOre:count 1                                        ...
        label *label258                                              ...
  119:  op add *tmp34 :buildTitaniumDrill:y 1                        checkOre(x, y + yy, in out count);
  120:  set :checkOre.1:count :checkOre:count                        ...
  121:  ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:t getBlock(x, y, out type, out floor);
  122:  jump *label261 notEqual :checkOre.1:floor @ore-titanium      if floor == @ore-titanium then count++; end;
  123:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label261                                              ...
  124:  set :checkOre.2:count :checkOre.1:count                      checkOre(x + xx, y + yy, in out count);
  125:  ucontrol getBlock :checkOre:x *tmp34 :checkOre.2:type 0 :che getBlock(x, y, out type, out floor);
  126:  jump *label264 notEqual :checkOre.2:floor @ore-titanium      if floor == @ore-titanium then count++; end;
  127:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label264                                              ...
  128:  jump *label269 lessThanEq :checkOre.2:count 0                if count > best then
  129:  set :buildTitaniumDrill:bx 1                                 bx = xx;
  130:  set :buildTitaniumDrill:by 1                                 by = yy;
  131:  set :buildTitaniumDrill:best :checkOre.2:count               best = count;
  132:  jump *label56 equal :checkOre.2:count 3                      if count == 3 then break; end;
        label *label269                                              if count > best then
  133:  op add :checkOre:x :buildTitaniumDrill:x 1                   checkOre(x + xx, y, in out count);
  134:  set :checkOre:count 0                                        ...
  135:  ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOr getBlock(x, y, out type, out floor);
  136:  jump *label275 notEqual :checkOre:floor @ore-titanium        if floor == @ore-titanium then count++; end;
  137:  set :checkOre:count 1                                        ...
        label *label275                                              ...
  138:  op add *tmp34 :buildTitaniumDrill:y -1                       checkOre(x, y + yy, in out count);
  139:  set :checkOre.1:count :checkOre:count                        ...
  140:  ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:t getBlock(x, y, out type, out floor);
  141:  jump *label278 notEqual :checkOre.1:floor @ore-titanium      if floor == @ore-titanium then count++; end;
  142:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label278                                              ...
  143:  set :checkOre.2:count :checkOre.1:count                      checkOre(x + xx, y + yy, in out count);
  144:  ucontrol getBlock :checkOre:x *tmp34 :checkOre.2:type 0 :che getBlock(x, y, out type, out floor);
  145:  jump *label281 notEqual :checkOre.2:floor @ore-titanium      if floor == @ore-titanium then count++; end;
  146:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label281                                              ...
  147:  jump *label286 lessThanEq :checkOre.2:count :buildTitaniumDr if count > best then
  148:  set :buildTitaniumDrill:bx 1                                 bx = xx;
  149:  set :buildTitaniumDrill:by -1                                by = yy;
  150:  set :buildTitaniumDrill:best :checkOre.2:count               best = count;
  151:  jump *label56 equal :checkOre.2:count 3                      if count == 3 then break; end;
        label *label286                                              if count > best then
  152:  op add :checkOre:x :buildTitaniumDrill:x -1                  checkOre(x + xx, y, in out count);
  153:  set :checkOre:count 0                                        ...
  154:  ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOr getBlock(x, y, out type, out floor);
  155:  jump *label292 notEqual :checkOre:floor @ore-titanium        if floor == @ore-titanium then count++; end;
  156:  set :checkOre:count 1                                        ...
        label *label292                                              ...
  157:  op add *tmp34 :buildTitaniumDrill:y 1                        checkOre(x, y + yy, in out count);
  158:  set :checkOre.1:count :checkOre:count                        ...
  159:  ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:t getBlock(x, y, out type, out floor);
  160:  jump *label295 notEqual :checkOre.1:floor @ore-titanium      if floor == @ore-titanium then count++; end;
  161:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label295                                              ...
  162:  set :checkOre.2:count :checkOre.1:count                      checkOre(x + xx, y + yy, in out count);
  163:  ucontrol getBlock :checkOre:x *tmp34 :checkOre.2:type 0 :che getBlock(x, y, out type, out floor);
  164:  jump *label298 notEqual :checkOre.2:floor @ore-titanium      if floor == @ore-titanium then count++; end;
  165:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label298                                              ...
  166:  jump *label303 lessThanEq :checkOre.2:count :buildTitaniumDr if count > best then
  167:  set :buildTitaniumDrill:bx -1                                bx = xx;
  168:  set :buildTitaniumDrill:by 1                                 by = yy;
  169:  set :buildTitaniumDrill:best :checkOre.2:count               best = count;
  170:  jump *label56 equal :checkOre.2:count 3                      if count == 3 then break; end;
        label *label303                                              if count > best then
  171:  op add :checkOre:x :buildTitaniumDrill:x -1                  checkOre(x + xx, y, in out count);
  172:  set :checkOre:count 0                                        ...
  173:  ucontrol getBlock :checkOre:x :buildTitaniumDrill:y :checkOr getBlock(x, y, out type, out floor);
  174:  jump *label309 notEqual :checkOre:floor @ore-titanium        if floor == @ore-titanium then count++; end;
  175:  set :checkOre:count 1                                        ...
        label *label309                                              ...
  176:  op add *tmp34 :buildTitaniumDrill:y -1                       checkOre(x, y + yy, in out count);
  177:  set :checkOre.1:count :checkOre:count                        ...
  178:  ucontrol getBlock :buildTitaniumDrill:x *tmp34 :checkOre.1:t getBlock(x, y, out type, out floor);
  179:  jump *label312 notEqual :checkOre.1:floor @ore-titanium      if floor == @ore-titanium then count++; end;
  180:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label312                                              ...
  181:  set :checkOre.2:count :checkOre.1:count                      checkOre(x + xx, y + yy, in out count);
  182:  ucontrol getBlock :checkOre:x *tmp34 :checkOre.2:type 0 :che getBlock(x, y, out type, out floor);
  183:  jump *label315 notEqual :checkOre.2:floor @ore-titanium      if floor == @ore-titanium then count++; end;
  184:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label315                                              ...
  185:  jump *label320 lessThanEq :checkOre.2:count :buildTitaniumDr if count > best then
  186:  set :buildTitaniumDrill:bx -1                                bx = xx;
  187:  set :buildTitaniumDrill:by -1                                by = yy;
        label *label320                                              if count > best then
        label *label56                                               for var xx in 1, 1, -1, -1; var yy in 1, -1, 1, -1 do
  188:  op div *tmp51 :buildTitaniumDrill:bx 2                       x += bx / 2;
  189:  op add :buildTitaniumDrill:x :buildTitaniumDrill:x *tmp51    ...
  190:  op div *tmp52 :buildTitaniumDrill:by 2                       y += by / 2;
  191:  op add :buildTitaniumDrill:y :buildTitaniumDrill:y *tmp52    ...
  192:  set :buildBlockAt:block @pneumatic-drill                     return buildBlockAt(@pneumatic-drill, x, y, null, 0);
  193:  set :buildBlockAt:x :buildTitaniumDrill:x                    ...
  194:  set :buildBlockAt:y :buildTitaniumDrill:y                    ...
  195:  set :buildBlockAt:rotation null                              ...
  196:  set :buildBlockAt:config 0                                   ...
  197:  setaddr :buildBlockAt*retaddr *label74                       ...
  198:  call *label11 *invalid :buildBlockAt*retval                  ...
        label *label74                                               ...
  199:  set .titanium_drill :buildBlockAt*retval                     titanium_drill = buildTitaniumDrill();
  200:  op add :buildBlockFromConfig:y .coreY 2                      for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, rotation, config in cfg do
  201:  set :buildBlockFromConfig:block @unloader                    ...
  202:  set :buildBlockFromConfig:x .coreX                           ...
  203:  set :buildBlockFromConfig:copper 0                           ...
  204:  set :buildBlockFromConfig:lead 0                             ...
  205:  set :buildBlockFromConfig:silicon 30                         ...
  206:  set :buildBlockFromConfig:titanium 25                        ...
  207:  setaddr :buildBlockFromConfig*retaddr *label80               ...
  208:  call *label12 *invalid :buildBlockFromConfig*retval          return buildBlockFromConfig(block, x, y, copper, lead, graphite, silicon, titanium, rotation, config);
        label *label80                                               ...
  209:  set .unloader1 :buildBlockFromConfig*retval                  ...
  210:  op add :buildBlock.6:x .coreX -2                             for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, rotation, config in cfg do
  211:  set :buildBlockFromConfig:y .coreY                           ...
  212:  set :buildBlockFromConfig:x :buildBlock.6:x                  ...
  213:  setaddr :buildBlockFromConfig*retaddr *label86               ...
  214:  call *label12 *invalid :buildBlockFromConfig*retval          return buildBlockFromConfig(block, x, y, copper, lead, graphite, silicon, titanium, rotation, config);
        label *label86                                               ...
  215:  op add :buildBlockFromConfig:y .coreY 1                      for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, rotation, config in cfg do
  216:  set :buildBlockFromConfig:block @power-node                  ...
  217:  set :buildBlockFromConfig:x :buildBlock.6:x                  ...
  218:  set :buildBlockFromConfig:copper 2                           ...
  219:  set :buildBlockFromConfig:lead 6                             ...
  220:  set :buildBlockFromConfig:silicon 0                          ...
  221:  set :buildBlockFromConfig:titanium 0                         ...
  222:  setaddr :buildBlockFromConfig*retaddr *label92               ...
  223:  call *label12 *invalid :buildBlockFromConfig*retval          return buildBlockFromConfig(block, x, y, copper, lead, graphite, silicon, titanium, rotation, config);
        label *label92                                               ...
  224:  op add :buildBlockFromConfig:x .coreX 1                      for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, rotation, config in cfg do
  225:  set :buildBlockFromConfig:block @micro-processor             ...
  226:  set :buildBlockFromConfig:y :buildBlock.1:y                  ...
  227:  set :buildBlockFromConfig:copper 90                          ...
  228:  set :buildBlockFromConfig:lead 50                            ...
  229:  set :buildBlockFromConfig:silicon 50                         ...
  230:  setaddr :buildBlockFromConfig*retaddr *label98               ...
  231:  set :buildBlockFromConfig:config processor1                  return buildBlockFromConfig(block, x, y, copper, lead, graphite, silicon, titanium, rotation, config);
  232:  call *label12 *invalid :buildBlockFromConfig*retval          ...
        label *label98                                               ...
  233:  write false null ".pressEnabled"                             pressEnabled = false;
  234:  op add :buildBlockFromConfig:x .coreX -4                     for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, rotation, config in cfg do
  235:  op add :buildBlockFromConfig:y .coreY -1                     ...
  236:  set :buildBlockFromConfig:block @air-factory                 ...
  237:  set :buildBlockFromConfig:copper 60                          ...
  238:  set :buildBlockFromConfig:lead 70                            ...
  239:  set :buildBlockFromConfig:silicon 0                          ...
  240:  set :buildBlockFromConfig:rotation 3                         ...
  241:  set :buildBlockFromConfig:config @mono                       ...
  242:  setaddr :buildBlockFromConfig*retaddr *label104              ...
  243:  call *label12 *invalid :buildBlockFromConfig*retval          return buildBlockFromConfig(block, x, y, copper, lead, graphite, silicon, titanium, rotation, config);
        label *label104                                              ...
  244:  set :meetTarget:block "nothing"                              meetTarget("nothing", 0, 15, 0, 30, 0);
  245:  set :meetTarget:copper 0                                     ...
  246:  set :meetTarget:lead 15                                      ...
  247:  set :meetTarget:graphite 0                                   ...
  248:  set :meetTarget:silicon 30                                   ...
  249:  set :meetTarget:titanium 0                                   ...
  250:  setaddr :meetTarget*retaddr *label105                        ...
  251:  call *label10 *invalid :meetTarget*retval                    ...
        label *label105                                              ...
        label *label106                                              while true do
  252:  setaddr :supplyBlocks*retaddr *label109                      supplyBlocks();
  253:  call *label9 *invalid :supplyBlocks*retval                   ...
        label *label109                                              ...
  254:  jump *label106 always 0 0                                    while true do
        label *label0                                                void moveTo(x, y, radius)
  255:  set .status3 "Moving..."                                     status3 = text;
  256:  op sub *tmp75 :moveTo:radius 0.5                             while !within(x, y, radius) do
  257:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp73 0  ...
  258:  jump *label116 notEqual *tmp73 false                         ...
        label *label253                                              ...
  259:  ucontrol approach :moveTo:x :moveTo:y *tmp75 0 0             approach(x, y, radius - 0.5);
  260:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp73 0  while !within(x, y, radius) do
  261:  jump *label253 equal *tmp73 false                            ...
        label *label116                                              ...
  262:  return :moveTo*retaddr                                       void moveTo(x, y, radius)
        label *label1                                                void moveTo(x, y)
  263:  set :moveTo:x :moveTo.1:x                                    moveTo(x, y, REGULAR_RADIUS);
  264:  set :moveTo:y :moveTo.1:y                                    ...
  265:  set :moveTo:radius 5                                         ...
  266:  setaddr :moveTo*retaddr *label118                            ...
  267:  call *label0 *invalid :moveTo*retval                         ...
        label *label118                                              ...
  268:  return :moveTo.1*retaddr                                     void moveTo(x, y)
        label *label2                                                void moveToEmpty(x, y)
  269:  sensor *tmp78 @unit @firstItem                               if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  270:  jump *label120 equal *tmp78 null                             ...
  271:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label120                                              ...
  272:  set :moveTo.1:x :moveToEmpty:x                               moveTo(x, y);
  273:  set :moveTo.1:y :moveToEmpty:y                               ...
  274:  setaddr :moveTo.1*retaddr *label122                          ...
  275:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label122                                              ...
  276:  sensor *tmp81 @unit @firstItem                               while @unit.@firstItem != null do
  277:  jump *label125 equal *tmp81 null                             ...
        label *label254                                              ...
  278:  ucontrol itemDrop @air 1000 0 0 0                            itemDrop(@air, 1000);
  279:  sensor *tmp81 @unit @firstItem                               while @unit.@firstItem != null do
  280:  jump *label254 notEqual *tmp81 null                          ...
        label *label125                                              ...
  281:  return :moveToEmpty*retaddr                                  void moveToEmpty(x, y)
        label *label3                                                void moveToBlock(block, radius)
  282:  sensor *tmp83 :moveToBlock:block @x                          moveTo(block.@x, block.@y, radius);
  283:  sensor *tmp84 :moveToBlock:block @y                          ...
  284:  set :moveTo:x *tmp83                                         ...
  285:  set :moveTo:y *tmp84                                         ...
  286:  set :moveTo:radius :moveToBlock:radius                       ...
  287:  setaddr :moveTo*retaddr *label127                            ...
  288:  call *label0 *invalid :moveTo*retval                         ...
        label *label127                                              ...
  289:  return :moveToBlock*retaddr                                  void moveToBlock(block, radius)
        label *label4                                                void depositItems(block, item, fromMining)
  290:  set .status3 "Depositing..."                                 status3 = text;
  291:  sensor *tmp85 @unit @firstItem                               if @unit.@firstItem == item then
  292:  jump *label130 notEqual *tmp85 :depositItems:item            ...
  293:  set *tmp90 5                                                 moveToBlock(block, fromMining && block == core ? DROP_MINING_RADIUS : REGULAR_RADIUS);
  294:  op equal *tmp88 :depositItems:block .core                    ...
  295:  op land *tmp89 :depositItems:fromMining *tmp88               ...
  296:  jump *label133 equal *tmp89 false                            ...
  297:  set *tmp90 7                                                 ...
        label *label133                                              ...
  298:  set :moveToBlock:block :depositItems:block                   ...
  299:  set :moveToBlock:radius *tmp90                               ...
  300:  setaddr :moveToBlock*retaddr *label134                       ...
  301:  call *label3 *invalid :moveToBlock*retval                    ...
        label *label134                                              ...
  302:  sensor :depositItems:cap :depositItems:block @itemCapacity   var cap = block.@itemCapacity;
        label *label135                                              do
  303:  ucontrol itemDrop :depositItems:block 30 0 0 0               itemDrop(block, capacity);
  304:  sensor *tmp92 :depositItems:block :depositItems:item         if block.sensor(item) >= cap then break; end;
  305:  jump *label131 greaterThanEq *tmp92 :depositItems:cap        ...
  306:  sensor *tmp95 @unit @firstItem                               while @unit.@firstItem != null;
  307:  jump *label135 notEqual *tmp95 null                          do
  308:  return :depositItems*retaddr                                 if @unit.@firstItem == item then
        label *label130                                              ...
  309:  sensor *tmp97 @unit @firstItem                               while @unit.@firstItem != null do
  310:  jump *label142 equal *tmp97 null                             ...
        label *label255                                              ...
  311:  ucontrol itemDrop @air 1000 0 0 0                            itemDrop(@air, 1000);
  312:  sensor *tmp97 @unit @firstItem                               while @unit.@firstItem != null do
  313:  jump *label255 notEqual *tmp97 null                          ...
        label *label142                                              ...
        label *label131                                              if @unit.@firstItem == item then
  314:  return :depositItems*retaddr                                 void depositItems(block, item, fromMining)
        label *label5                                                void locateOre(ore, out x, out y)
  315:  ulocate ore core true :locateOre:ore :locateOre:x :locateOre if !ulocate(:ore, ore, out x, out y) then
  316:  jump *label144 notEqual *tmp99 false                         ...
  317:  print "[salmon]Cannot locate "                               print("[salmon]", text);
  318:  print :locateOre:ore                                         ...
  319:  printflush message1                                          printflush(message1);
  320:  stop                                                         stopProcessor();
        label *label144                                              if !ulocate(:ore, ore, out x, out y) then
  321:  return :locateOre*retaddr                                    void locateOre(ore, out x, out y)
        label *label6                                                void mineOre(ore, amount, block)
  322:  set :locateOre:ore :mineOre:ore                              locateOre(ore, out x, out y);
  323:  setaddr :locateOre*retaddr *label148                         ...
  324:  call *label5 *invalid :locateOre*retval                      ...
        label *label148                                              ...
  325:  set :mineOre:x :locateOre:x                                  ...
  326:  set :mineOre:y :locateOre:y                                  ...
  327:  set :moveToEmpty:x :locateOre:x                              moveToEmpty(x, y);
  328:  set :moveToEmpty:y :locateOre:y                              ...
  329:  setaddr :moveToEmpty*retaddr *label149                       ...
  330:  call *label2 *invalid :moveToEmpty*retval                    ...
        label *label149                                              ...
  331:  set .status3 "Mining..."                                     status3 = text;
        label *label151                                              do
  332:  sensor :mineOre:item @unit @firstItem                        var item = @unit.@firstItem;
  333:  op notEqual *tmp104 :mineOre:item null                       if item != null && item != ore then break; end;
  334:  op notEqual *tmp105 :mineOre:item :mineOre:ore               ...
  335:  op land *tmp106 *tmp104 *tmp105                              ...
  336:  jump *label153 notEqual *tmp106 false                        ...
  337:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    mine(x, y);
  338:  sensor *tmp108 @unit @totalItems                             while @unit.@totalItems < amount;
  339:  jump *label151 lessThan *tmp108 :mineOre:amount              do
        label *label153                                              ...
  340:  ucontrol unbind 0 0 0 0 0                                    unbind();
  341:  set :depositItems:block :mineOre:block                       depositItems(block, ore, true);
  342:  set :depositItems:item :mineOre:ore                          ...
  343:  set :depositItems:fromMining true                            ...
  344:  setaddr :depositItems*retaddr *label156                      ...
  345:  call *label4 *invalid :depositItems*retval                   ...
        label *label156                                              ...
  346:  return :mineOre*retaddr                                      void mineOre(ore, amount, block)
        label *label7                                                void mineOre(ore)
  347:  set :mineOre:ore :mineOre.1:ore                              mineOre(ore, capacity, core);
  348:  set :mineOre:amount 30                                       ...
  349:  set :mineOre:block .core                                     ...
  350:  setaddr :mineOre*retaddr *label158                           ...
  351:  call *label6 *invalid :mineOre*retval                        ...
        label *label158                                              ...
  352:  return :mineOre.1*retaddr                                    void mineOre(ore)
        label *label8                                                void fetchBlock(block, item)
  353:  set .status2 "Fetching "                                     status2 = text;
  354:  set .item2 :fetchBlock:item                                  item2 = item;
  355:  set .block2 :fetchBlock:block                                block2 = block;
  356:  sensor *tmp111 :fetchBlock:block @x                          moveToEmpty(block.@x, block.@y);
  357:  sensor *tmp112 :fetchBlock:block @y                          ...
  358:  set :moveToEmpty:x *tmp111                                   ...
  359:  set :moveToEmpty:y *tmp112                                   ...
  360:  setaddr :moveToEmpty*retaddr *label161                       ...
  361:  call *label2 *invalid :moveToEmpty*retval                    ...
        label *label161                                              ...
        label *label162                                              do
  362:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  itemTake(block, item, capacity);
  363:  sensor :fetchBlock:unitItem @unit @firstItem                 var unitItem = @unit.@firstItem;
  364:  op notEqual *tmp114 :fetchBlock:unitItem null                if unitItem != null and unitItem != item then
  365:  op notEqual *tmp115 :fetchBlock:unitItem :fetchBlock:item    ...
  366:  op land *tmp116 *tmp114 *tmp115                              ...
  367:  jump *label165 equal *tmp116 false                           ...
  368:  ucontrol itemDrop @air 1000 0 0 0                            itemDrop(@air, 1000);
        label *label165                                              if unitItem != null and unitItem != item then
  369:  sensor *tmp118 @unit :fetchBlock:item                        while @unit.sensor(item) < capacity and block.sensor(item);
  370:  op lessThan *tmp119 *tmp118 30                               ...
  371:  sensor *tmp120 :fetchBlock:block :fetchBlock:item            ...
  372:  op land *tmp121 *tmp119 *tmp120                              ...
  373:  jump *label162 notEqual *tmp121 false                        do
  374:  set :depositItems:block .core                                depositItems(core, item, false);
  375:  set :depositItems:item :fetchBlock:item                      ...
  376:  set :depositItems:fromMining false                           ...
  377:  setaddr :depositItems*retaddr *label167                      ...
  378:  call *label4 *invalid :depositItems*retval                   ...
        label *label167                                              ...
  379:  return :fetchBlock*retaddr                                   void fetchBlock(block, item)
        label *label9                                                void supplyBlocks()
  380:  set :supplyBlocks:supplied false                             var supplied = false;
  381:  jump *label169 notEqual .unloader1 null                      if unloader1 == null then
  382:  sensor *tmp124 .core @graphite                               if core.@graphite < graphiteTarget then
  383:  jump *label171 greaterThanEq *tmp124 .graphiteTarget         ...
  384:  sensor *tmp127 .press @coal                                  if press.@coal < 5 then
  385:  jump *label173 greaterThanEq *tmp127 5                       ...
  386:  set .status1 "Meeting the graphite target"                   status1 = text;
  387:  set .status2 "Supplying "                                    status2 = text;
  388:  set .item2 @coal                                             item2 = item;
  389:  set .block2 .press                                           block2 = block;
  390:  sensor *tmp130 .press @itemCapacity                          var missing = block.@itemCapacity - block.sensor(ore);
  391:  sensor *tmp131 .press @coal                                  ...
  392:  op sub :supplyBlock:missing *tmp130 *tmp131                  ...
  393:  jump *label178 lessThanEq :supplyBlock:missing 0             if missing > 0 then
  394:  set :mineOre:ore @coal                                       mineOre(ore, missing, block);
  395:  set :mineOre:amount :supplyBlock:missing                     ...
  396:  set :mineOre:block .press                                    ...
  397:  setaddr :mineOre*retaddr *label180                           ...
  398:  call *label6 *invalid :mineOre*retval                        ...
        label *label180                                              ...
        label *label178                                              if missing > 0 then
  399:  set :supplyBlocks:supplied true                              supplied = true;
        label *label173                                              if press.@coal < 5 then
        label *label171                                              if core.@graphite < graphiteTarget then
  400:  sensor *tmp135 .core @silicon                                if core.@silicon < siliconTarget then
  401:  jump *label181 greaterThanEq *tmp135 .siliconTarget          ...
  402:  sensor *tmp138 .smelter @coal                                if smelter.@coal < 5 then
  403:  jump *label183 greaterThanEq *tmp138 5                       ...
  404:  set .status1 "Meeting the silicon target (coal)"             status1 = text;
  405:  set .status2 "Supplying "                                    status2 = text;
  406:  set .item2 @coal                                             item2 = item;
  407:  set .block2 .smelter                                         block2 = block;
  408:  sensor *tmp141 .smelter @itemCapacity                        var missing = block.@itemCapacity - block.sensor(ore);
  409:  sensor *tmp142 .smelter @coal                                ...
  410:  op sub :supplyBlock.1:missing *tmp141 *tmp142                ...
  411:  jump *label188 lessThanEq :supplyBlock.1:missing 0           if missing > 0 then
  412:  set :mineOre:ore @coal                                       mineOre(ore, missing, block);
  413:  set :mineOre:amount :supplyBlock.1:missing                   ...
  414:  set :mineOre:block .smelter                                  ...
  415:  setaddr :mineOre*retaddr *label190                           ...
  416:  call *label6 *invalid :mineOre*retval                        ...
        label *label190                                              ...
        label *label188                                              if missing > 0 then
  417:  set :supplyBlocks:supplied true                              supplied = true;
  418:  jump *label184 always 0 0                                    if smelter.@coal < 5 then
        label *label183                                              ...
  419:  sensor *tmp146 .smelter @sand                                elsif smelter.@sand < 5 then
  420:  jump *label191 greaterThanEq *tmp146 5                       ...
  421:  set .status1 "Meeting the silicon target (sand)"             status1 = text;
  422:  set .status2 "Supplying "                                    status2 = text;
  423:  set .item2 @sand                                             item2 = item;
  424:  set .block2 .smelter                                         block2 = block;
  425:  sensor *tmp149 .smelter @itemCapacity                        var missing = block.@itemCapacity - block.sensor(ore);
  426:  sensor *tmp150 .smelter @sand                                ...
  427:  op sub :supplyBlock.2:missing *tmp149 *tmp150                ...
  428:  jump *label196 lessThanEq :supplyBlock.2:missing 0           if missing > 0 then
  429:  set :mineOre:ore @sand                                       mineOre(ore, missing, block);
  430:  set :mineOre:amount :supplyBlock.2:missing                   ...
  431:  set :mineOre:block .smelter                                  ...
  432:  setaddr :mineOre*retaddr *label198                           ...
  433:  call *label6 *invalid :mineOre*retval                        ...
        label *label198                                              ...
        label *label196                                              if missing > 0 then
  434:  set :supplyBlocks:supplied true                              supplied = true;
        label *label191                                              elsif smelter.@sand < 5 then
        label *label184                                              if smelter.@coal < 5 then
        label *label181                                              if core.@silicon < siliconTarget then
  435:  sensor *tmp154 .battery @totalPower                          if battery.@totalPower < powerTarget then
  436:  jump *label199 greaterThanEq *tmp154 .powerTarget            ...
  437:  set .status1 "Supplying generator"                           status1 = text;
  438:  set .status2 "Supplying "                                    status2 = text;
  439:  set .item2 @coal                                             item2 = item;
  440:  set .block2 .generator                                       block2 = block;
  441:  sensor *tmp157 .generator @itemCapacity                      var missing = block.@itemCapacity - block.sensor(ore);
  442:  sensor *tmp158 .generator @coal                              ...
  443:  op sub :supplyBlock.3:missing *tmp157 *tmp158                ...
  444:  jump *label204 lessThanEq :supplyBlock.3:missing 0           if missing > 0 then
  445:  set :mineOre:ore @coal                                       mineOre(ore, missing, block);
  446:  set :mineOre:amount :supplyBlock.3:missing                   ...
  447:  set :mineOre:block .generator                                ...
  448:  setaddr :mineOre*retaddr *label206                           ...
  449:  call *label6 *invalid :mineOre*retval                        ...
        label *label206                                              ...
        label *label204                                              if missing > 0 then
  450:  set :supplyBlocks:supplied true                              supplied = true;
        label *label199                                              if battery.@totalPower < powerTarget then
        label *label169                                              if unloader1 == null then
  451:  sensor *tmp162 .titanium_drill @titanium                     if titanium_drill.@titanium < 7 then
  452:  jump *label207 greaterThanEq *tmp162 7                       ...
  453:  sensor *tmp165 .core @copper                                 if core.@copper < copperTarget then
  454:  jump *label209 greaterThanEq *tmp165 .copperTarget           ...
  455:  set .status1 "Meeting the copper target"                     status1 = text;
  456:  set .status2 "Mining "                                       status2 = text;
  457:  set .item2 @copper                                           item2 = item;
  458:  set .block2 "core"                                           block2 = block;
  459:  set :mineOre.1:ore @copper                                   mineOre(@copper);
  460:  setaddr :mineOre.1*retaddr *label213                         ...
  461:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label213                                              ...
  462:  return :supplyBlocks*retaddr                                 if core.@copper < copperTarget then
        label *label209                                              ...
  463:  sensor *tmp168 .core @lead                                   elsif core.@lead < leadTarget then
  464:  jump *label214 greaterThanEq *tmp168 .leadTarget             ...
  465:  set .status1 "Meeting the lead target"                       status1 = text;
  466:  set .status2 "Mining "                                       status2 = text;
  467:  set .item2 @lead                                             item2 = item;
  468:  set .block2 "core"                                           block2 = block;
  469:  set :mineOre.1:ore @lead                                     mineOre(@lead);
  470:  setaddr :mineOre.1*retaddr *label218                         ...
  471:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label218                                              ...
  472:  return :supplyBlocks*retaddr                                 elsif core.@lead < leadTarget then
        label *label214                                              ...
  473:  jump *label208 notEqual :supplyBlocks:supplied false         elsif !supplied then
  474:  set .status1 "Supplying base"                                status1 = text;
  475:  sensor :supplyBlocks:coal .core @coal                        var coal = core.@coal;
  476:  sensor :supplyBlocks:sand .core @sand                        var sand = core.@sand;
  477:  set *tmp176 @sand                                            var ore = coal <= sand ? @coal : @sand;
  478:  jump *label223 greaterThan :supplyBlocks:coal :supplyBlocks: ...
  479:  set *tmp176 @coal                                            ...
        label *label223                                              ...
  480:  set .status2 "Mining "                                       status2 = text;
  481:  set .item2 *tmp176                                           item2 = item;
  482:  set .block2 "core"                                           block2 = block;
  483:  set :mineOre.1:ore *tmp176                                   mineOre(ore);
  484:  setaddr :mineOre.1*retaddr *label225                         ...
  485:  call *label7 *invalid :mineOre.1*retval                      ...
        label *label225                                              ...
  486:  return :supplyBlocks*retaddr                                 if titanium_drill.@titanium < 7 then
        label *label207                                              ...
  487:  set .status1 "Fetching titanium"                             status1 = text;
  488:  set :fetchBlock:block .titanium_drill                        fetchBlock(titanium_drill, @titanium);
  489:  set :fetchBlock:item @titanium                               ...
  490:  setaddr :fetchBlock*retaddr *label227                        ...
  491:  call *label8 *invalid :fetchBlock*retval                     ...
        label *label227                                              ...
        label *label208                                              if titanium_drill.@titanium < 7 then
  492:  return :supplyBlocks*retaddr                                 void supplyBlocks()
        label *label10                                               void meetTarget(block, copper, lead, graphite, silicon, titanium)
  493:  set .nextBlock :meetTarget:block                             nextBlock = block;
  494:  set .copperTarget :meetTarget:copper                         copperTarget = copper;
  495:  set .leadTarget :meetTarget:lead                             leadTarget = lead;
  496:  set .graphiteTarget :meetTarget:graphite                     graphiteTarget = graphite;
  497:  set .siliconTarget :meetTarget:silicon                       siliconTarget = silicon;
  498:  set .titaniumTarget :meetTarget:titanium                     titaniumTarget = titanium;
  499:  sensor *tmp177 .core @copper                                 while core.@copper < copperTarget
  500:  op lessThan *tmp178 *tmp177 .copperTarget                    ...
  501:  sensor *tmp179 .core @lead                                   || core.@lead < leadTarget
  502:  op lessThan *tmp180 *tmp179 .leadTarget                      ...
  503:  op or *tmp182 *tmp178 *tmp180                                ...
  504:  op notEqual *tmp181 *tmp182 false                            ...
  505:  sensor *tmp183 .core @graphite                               || core.@graphite < graphiteTarget
  506:  op lessThan *tmp184 *tmp183 .graphiteTarget                  ...
  507:  op or *tmp186 *tmp181 *tmp184                                ...
  508:  op notEqual *tmp185 *tmp186 false                            ...
  509:  sensor *tmp187 .core @silicon                                || core.@silicon < siliconTarget
  510:  op lessThan *tmp188 *tmp187 .siliconTarget                   ...
  511:  op or *tmp190 *tmp185 *tmp188                                ...
  512:  op notEqual *tmp189 *tmp190 false                            ...
  513:  sensor *tmp191 .core @titanium                               || core.@titanium < titaniumTarget
  514:  op lessThan *tmp192 *tmp191 .titaniumTarget                  ...
  515:  op or *tmp194 *tmp189 *tmp192                                ...
  516:  jump *label231 equal *tmp194 false                           while core.@copper < copperTarget
        label *label256                                              ...
  517:  setaddr :supplyBlocks*retaddr *label232                      supplyBlocks();
  518:  call *label9 *invalid :supplyBlocks*retval                   ...
        label *label232                                              ...
  519:  sensor *tmp177 .core @copper                                 while core.@copper < copperTarget
  520:  op lessThan *tmp178 *tmp177 .copperTarget                    ...
  521:  sensor *tmp179 .core @lead                                   || core.@lead < leadTarget
  522:  op lessThan *tmp180 *tmp179 .leadTarget                      ...
  523:  op or *tmp182 *tmp178 *tmp180                                ...
  524:  op notEqual *tmp181 *tmp182 false                            ...
  525:  sensor *tmp183 .core @graphite                               || core.@graphite < graphiteTarget
  526:  op lessThan *tmp184 *tmp183 .graphiteTarget                  ...
  527:  op or *tmp186 *tmp181 *tmp184                                ...
  528:  op notEqual *tmp185 *tmp186 false                            ...
  529:  sensor *tmp187 .core @silicon                                || core.@silicon < siliconTarget
  530:  op lessThan *tmp188 *tmp187 .siliconTarget                   ...
  531:  op or *tmp190 *tmp185 *tmp188                                ...
  532:  op notEqual *tmp189 *tmp190 false                            ...
  533:  sensor *tmp191 .core @titanium                               || core.@titanium < titaniumTarget
  534:  op lessThan *tmp192 *tmp191 .titaniumTarget                  ...
  535:  op or *tmp194 *tmp189 *tmp192                                ...
  536:  jump *label256 notEqual *tmp194 false                        while core.@copper < copperTarget
        label *label231                                              ...
  537:  return :meetTarget*retaddr                                   void meetTarget(block, copper, lead, graphite, silicon, titanium)
        label *label11                                               def buildBlockAt(block, x, y, rotation, config)
  538:  set :moveTo.1:x :buildBlockAt:x                              moveTo(x, y);
  539:  set :moveTo.1:y :buildBlockAt:y                              ...
  540:  setaddr :moveTo.1*retaddr *label234                          ...
  541:  call *label1 *invalid :moveTo.1*retval                       ...
        label *label234                                              ...
  542:  set .status3 "Building..."                                   status3 = text;
  543:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc var building = getBlock(x, y, out type);
  544:  jump *label236 equal :buildBlockAt:building null             if building != null then
  545:  jump *label238 notEqual :buildBlockAt:type :buildBlockAt:blo if type == block then return building; end;
  546:  set :buildBlockAt*retval :buildBlockAt:building              ...
  547:  return :buildBlockAt*retaddr                                 ...
        label *label238                                              ...
  548:  print "[salmon]Cannot build at ({0}, {0}), tile already cont print("[salmon]", text);
  549:  format :buildBlockAt:x                                       ...
  550:  format :buildBlockAt:y                                       ...
  551:  print :buildBlockAt:building                                 ...
  552:  printflush message1                                          printflush(message1);
  553:  stop                                                         stopProcessor();
        label *label236                                              if building != null then
  554:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt build(x, y, block, rotation, config);
        label *label241                                              do
  555:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc building = getBlock(x, y, out type, out floor);
  556:  jump *label241 notEqual :buildBlockAt:type :buildBlockAt:blo do
  557:  set :buildBlockAt*retval :buildBlockAt:building              return building;
  558:  return :buildBlockAt*retaddr                                 def buildBlockAt(block, x, y, rotation, config)
        label *label12                                               def buildBlockFromConfig(block, x, y, copper, lead, graphite, silicon, titanium, rotation, config)
  559:  set :meetTarget:block :buildBlockFromConfig:block            meetTarget(block, copper, lead, graphite, silicon, titanium);
  560:  set :meetTarget:copper :buildBlockFromConfig:copper          ...
  561:  set :meetTarget:lead :buildBlockFromConfig:lead              ...
  562:  set :meetTarget:graphite :buildBlockFromConfig:graphite      ...
  563:  set :meetTarget:silicon :buildBlockFromConfig:silicon        ...
  564:  set :meetTarget:titanium :buildBlockFromConfig:titanium      ...
  565:  setaddr :meetTarget*retaddr *label245                        ...
  566:  call *label10 *invalid :meetTarget*retval                    ...
        label *label245                                              ...
  567:  set :buildBlockAt:block :buildBlockFromConfig:block          return buildBlockAt(block, x, y, rotation, config);
  568:  set :buildBlockAt:x :buildBlockFromConfig:x                  ...
  569:  set :buildBlockAt:y :buildBlockFromConfig:y                  ...
  570:  set :buildBlockAt:rotation :buildBlockFromConfig:rotation    ...
  571:  set :buildBlockAt:config :buildBlockFromConfig:config        ...
  572:  setaddr :buildBlockAt*retaddr *label246                      ...
  573:  call *label11 *invalid :buildBlockAt*retval                  ...
        label *label246                                              ...
  574:  set :buildBlockFromConfig*retval :buildBlockAt*retval        ...
  575:  return :buildBlockFromConfig*retaddr                         def buildBlockFromConfig(block, x, y, copper, lead, graphite, silicon, titanium, rotation, config)


Performance: parsed in 311 ms, compiled in 234 ms, optimized in 1,139 ms, run in 7 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: success.

Program output (20 steps):
The program didn't generate any output.
Execution exception at instruction 36: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
