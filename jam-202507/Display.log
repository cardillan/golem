   414 instructions before optimizations.
    35 instructions eliminated by Temp Variables Elimination (2 iterations).
    12 instructions eliminated by Dead Code Elimination (5 iterations).
     3 instructions eliminated by Jump Normalization (2 passes, 5 iterations).
     9 instructions eliminated by Jump Optimization (5 iterations).
    10 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
     2 instructions modified by Expression Optimization (3 iterations).
     2 instructions modified by If Expression Optimization (3 iterations).
   202 instructions eliminated by Data Flow Optimization (3 passes, 15 iterations).
     1 instructions modified by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
   153 instructions added by Loop Unrolling (4 iterations).
     1 loops unrolled by Loop Unrolling.
     5 instructions eliminated by Jump Straightening (5 iterations).
     1 instructions eliminated by Unreachable Code Elimination (2 iterations).
    10 instructions eliminated by Print Merging.
   280 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 829):
  * Unroll iteration loop at Display.mnd:73:5                    size  +169, benefit      725.0, efficiency      4.290 (+139 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-10 instructions):
 
   222 jump *label43 equal *tmp73 false
   223 set :drawMaterials:col 0
   224 op sub :drawMaterials:y :drawMaterials:y 15
-    * set *tmp74 :drawMaterials:y
   225 jump *label44 always
   226 label *label43
-    * set *tmp74 null
   227 label *label44
   228 label *label37
   229 op sub :drawMaterials:count :drawMaterials:count 1
 
   235 label *label45
   236 set *tmp76 null
   237 label *label46
-    * set *tmp51 *tmp76
   238 jump *label36 always
   239 label *label35
-    * set *tmp51 null
   240 label *label36
   241 label *label27
   242 multijump *tmp49 0 0 (m:marker0)
 
   350 jump *label62 equal *tmp100 false
   351 set :drawUnit.1:col 0
   352 op sub :drawUnit:y :drawUnit:y 15
-    * set *tmp101 :drawUnit:y
   353 jump *label63 always
   354 label *label62
-    * set *tmp101 null
   355 label *label63
   356 label *label56
   357 label *label55
-    * set *tmp79 null
   358 jump *label54 always
   359 label *label53
   360 sensor *tmp102 @unit @firstItem
 
   438 jump *label71 equal *tmp126 false
   439 set :drawUnit.2:col 0
   440 op sub :drawUnit:y :drawUnit:y 15
-    * set *tmp127 :drawUnit:y
   441 jump *label72 always
   442 label *label71
-    * set *tmp127 null
   443 label *label72
   444 label *label65
   445 label *label64
-    * set *tmp79 null
   446 label *label54
   447 label *label47
   448 drawflush display1

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-2 instructions):
 
   230 op lessThanEq *tmp75 :drawMaterials:count 0
   231 jump *label45 equal *tmp75 false
   232 jump *label28 always
-    * set *tmp76 null
   233 jump *label46 always
   234 label *label45
-    * set *tmp76 null
   235 label *label46
   236 jump *label36 always
   237 label *label35

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-35 instructions):
 
    29 draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
    30 label *label11
    31 label *label10
-    * op add *tmp40 :drawBold:x 1
-    * set :drawText.1:x *tmp40
+   32 op add :drawText.1:x :drawBold:x 1
    33 set :drawText.1:y :drawBold:y
    34 set :drawText.1:alignment :drawBold:alignment
    35 set :drawText.1:text :drawBold:text
 
    44 draw col %[white]
    45 read *tmp3 processor1 ".nextBlock"
    46 draw image 40 137 *tmp3 32 0
-    * op floor *tmp41 @second
-    * set :drawHeader:t *tmp41
-    * op idiv *tmp42 :drawHeader:t 60
-    * set :drawHeader:m *tmp42
-    * op mod *tmp43 :drawHeader:t 60
-    * set :drawHeader:s *tmp43
+   47 op floor :drawHeader:t @second
+   48 op idiv :drawHeader:m :drawHeader:t 60
+   49 op mod :drawHeader:s :drawHeader:t 60
    50 op lessThan *tmp44 :drawHeader:s 10
    51 jump *label14 equal *tmp44 false
    52 set *tmp45 "0"
 
    85 draw print :drawPrint.3:x :drawPrint.3:y :drawPrint.3:alignment
    86 label *label21
    87 label *label20
-    * op add *tmp46 :drawBold.1:x 1
-    * set :drawText.4:x *tmp46
+   88 op add :drawText.4:x :drawBold.1:x 1
    89 set :drawText.4:y :drawBold.1:y
    90 set :drawText.4:alignment :drawBold.1:alignment
    91 set :drawText.4:text :drawBold.1:text
 
    99 label *label19
   100 set :drawMaterials:col 0
   101 set :drawMaterials:y 85
-    * read *tmp10 processor1 ".totalTargets"
-    * set :drawMaterials:count *tmp10
+  102 read :drawMaterials:count processor1 ".totalTargets"
   103 op greaterThan *tmp47 :drawMaterials:count 2
   104 jump *label24 equal *tmp47 false
   105 set *tmp48 2
 
   109 label *label25
   110 set :drawMaterials:columns *tmp48
   111 set :drawMaterials:item @copper
-    * read *tmp4 processor1 ".copperTarget"
-    * set :drawMaterials:target *tmp4
+  112 read :drawMaterials:target processor1 ".copperTarget"
   113 setaddr *tmp49 *label29
   114 jump *label26 always
   115 multilabel *label29 (m:marker0)
   116 set :drawMaterials:item @lead
-    * read *tmp5 processor1 ".leadTarget"
-    * set :drawMaterials:target *tmp5
+  117 read :drawMaterials:target processor1 ".leadTarget"
   118 setaddr *tmp49 *label30
   119 jump *label26 always
   120 multilabel *label30 (m:marker0)
   121 set :drawMaterials:item @graphite
-    * read *tmp6 processor1 ".graphiteTarget"
-    * set :drawMaterials:target *tmp6
+  122 read :drawMaterials:target processor1 ".graphiteTarget"
   123 setaddr *tmp49 *label31
   124 jump *label26 always
   125 multilabel *label31 (m:marker0)
   126 set :drawMaterials:item @silicon
-    * read *tmp7 processor1 ".siliconTarget"
-    * set :drawMaterials:target *tmp7
+  127 read :drawMaterials:target processor1 ".siliconTarget"
   128 setaddr *tmp49 *label32
   129 jump *label26 always
   130 multilabel *label32 (m:marker0)
   131 set :drawMaterials:item @titanium
-    * read *tmp8 processor1 ".titaniumTarget"
-    * set :drawMaterials:target *tmp8
+  132 read :drawMaterials:target processor1 ".titaniumTarget"
   133 setaddr *tmp49 *label33
   134 jump *label26 always
   135 multilabel *label33 (m:marker0)
   136 set :drawMaterials:item @metaglass
-    * read *tmp9 processor1 ".metaglassTarget"
-    * set :drawMaterials:target *tmp9
+  137 read :drawMaterials:target processor1 ".metaglassTarget"
   138 setaddr *tmp49 *label34
   139 label *label26
   140 op greaterThan *tmp50 :drawMaterials:target 0
 
   148 set :drawItem:count :drawMaterials:target
   149 op mul *tmp53 :drawItem:columns 176
   150 op div *tmp54 *tmp53 2
-    * op sub *tmp55 210 *tmp54
-    * set :drawItem:barLength *tmp55
-    * op add *tmp56 48 :drawItem:barLength
-    * set :drawItem:textEnd *tmp56
+  151 op sub :drawItem:barLength 210 *tmp54
+  152 op add :drawItem:textEnd 48 :drawItem:barLength
   153 op mul *tmp57 :drawItem:barLength :drawItem:current
   154 op div *tmp58 *tmp57 :drawItem:target
-    * op min *tmp59 :drawItem:barLength *tmp58
-    * set :drawItem:length *tmp59
+  155 op min :drawItem:length :drawItem:barLength *tmp58
   156 op mul *tmp60 :drawMaterials:col 176
   157 op div *tmp61 *tmp60 2
-    * op add *tmp62 11 *tmp61
-    * set :drawItem:iconX *tmp62
+  158 op add :drawItem:iconX 11 *tmp61
   159 op mul *tmp63 :drawMaterials:col 176
   160 op div *tmp64 *tmp63 2
-    * op add *tmp65 22 *tmp64
-    * set :drawItem:barX *tmp65
+  161 op add :drawItem:barX 22 *tmp64
   162 op mul *tmp66 :drawMaterials:col 176
   163 op div *tmp67 *tmp66 2
-    * op add *tmp68 :drawItem:textEnd *tmp67
-    * set :drawItem:textX *tmp68
+  164 op add :drawItem:textX :drawItem:textEnd *tmp67
   165 draw col %[white]
   166 op add *tmp69 :drawMaterials:y 5
   167 draw image :drawItem:iconX *tmp69 :drawItem:item 16 0
 
   186 draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
   187 label *label40
   188 label *label39
-    * op add *tmp72 :drawBold.2:x 1
-    * set :drawText.6:x *tmp72
+  189 op add :drawText.6:x :drawBold.2:x 1
   190 set :drawText.6:y :drawBold.2:y
   191 set :drawText.6:alignment :drawBold.2:alignment
   192 set :drawText.6:text :drawBold.2:text
 
   238 draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
   239 label *label50
   240 label *label49
-    * op add *tmp77 :drawBold.3:x 1
-    * set :drawText.8:x *tmp77
+  241 op add :drawText.8:x :drawBold.3:x 1
   242 set :drawText.8:y :drawBold.3:y
   243 set :drawText.8:alignment :drawBold.3:alignment
   244 set :drawText.8:text :drawBold.3:text
 
   266 set :drawItem.1:count *tmp12
   267 op mul *tmp80 :drawItem.1:columns 176
   268 op div *tmp81 *tmp80 2
-    * op sub *tmp82 210 *tmp81
-    * set :drawItem.1:barLength *tmp82
-    * op add *tmp83 48 :drawItem.1:barLength
-    * set :drawItem.1:textEnd *tmp83
+  269 op sub :drawItem.1:barLength 210 *tmp81
+  270 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
   271 op mul *tmp84 :drawItem.1:barLength :drawItem.1:current
   272 op div *tmp85 *tmp84 :drawItem.1:target
-    * op min *tmp86 :drawItem.1:barLength *tmp85
-    * set :drawItem.1:length *tmp86
+  273 op min :drawItem.1:length :drawItem.1:barLength *tmp85
   274 op mul *tmp87 :drawUnit.1:col 176
   275 op div *tmp88 *tmp87 2
-    * op add *tmp89 11 *tmp88
-    * set :drawItem.1:iconX *tmp89
+  276 op add :drawItem.1:iconX 11 *tmp88
   277 op mul *tmp90 :drawUnit.1:col 176
   278 op div *tmp91 *tmp90 2
-    * op add *tmp92 22 *tmp91
-    * set :drawItem.1:barX *tmp92
+  279 op add :drawItem.1:barX 22 *tmp91
   280 op mul *tmp93 :drawUnit.1:col 176
   281 op div *tmp94 *tmp93 2
-    * op add *tmp95 :drawItem.1:textEnd *tmp94
-    * set :drawItem.1:textX *tmp95
+  282 op add :drawItem.1:textX :drawItem.1:textEnd *tmp94
   283 draw col %[white]
   284 op add *tmp96 :drawUnit:y 5
   285 draw image :drawItem.1:iconX *tmp96 :drawItem.1:item 16 0
 
   304 draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
   305 label *label59
   306 label *label58
-    * op add *tmp99 :drawBold.4:x 1
-    * set :drawText.10:x *tmp99
+  307 op add :drawText.10:x :drawBold.4:x 1
   308 set :drawText.10:y :drawBold.4:y
   309 set :drawText.10:alignment :drawBold.4:alignment
   310 set :drawText.10:text :drawBold.4:text
 
   328 label *label55
   329 jump *label54 always
   330 label *label53
-    * sensor *tmp102 @unit @firstItem
-    * set :drawUnit:unitItem *tmp102
+  331 sensor :drawUnit:unitItem @unit @firstItem
   332 sensor *tmp103 @unit @totalItems
   333 read *tmp13 processor1 ".transportItem"
   334 op equal *tmp104 :drawUnit:unitItem *tmp13
 
   346 set :drawItem.2:count *tmp12
   347 op mul *tmp106 :drawItem.2:columns 176
   348 op div *tmp107 *tmp106 2
-    * op sub *tmp108 210 *tmp107
-    * set :drawItem.2:barLength *tmp108
-    * op add *tmp109 48 :drawItem.2:barLength
-    * set :drawItem.2:textEnd *tmp109
+  349 op sub :drawItem.2:barLength 210 *tmp107
+  350 op add :drawItem.2:textEnd 48 :drawItem.2:barLength
   351 op mul *tmp110 :drawItem.2:barLength :drawItem.2:current
   352 op div *tmp111 *tmp110 :drawItem.2:target
-    * op min *tmp112 :drawItem.2:barLength *tmp111
-    * set :drawItem.2:length *tmp112
+  353 op min :drawItem.2:length :drawItem.2:barLength *tmp111
   354 op mul *tmp113 :drawUnit.2:col 176
   355 op div *tmp114 *tmp113 2
-    * op add *tmp115 11 *tmp114
-    * set :drawItem.2:iconX *tmp115
+  356 op add :drawItem.2:iconX 11 *tmp114
   357 op mul *tmp116 :drawUnit.2:col 176
   358 op div *tmp117 *tmp116 2
-    * op add *tmp118 22 *tmp117
-    * set :drawItem.2:barX *tmp118
+  359 op add :drawItem.2:barX 22 *tmp117
   360 op mul *tmp119 :drawUnit.2:col 176
   361 op div *tmp120 *tmp119 2
-    * op add *tmp121 :drawItem.2:textEnd *tmp120
-    * set :drawItem.2:textX *tmp121
+  362 op add :drawItem.2:textX :drawItem.2:textEnd *tmp120
   363 draw col %[white]
   364 op add *tmp122 :drawUnit:y 5
   365 draw image :drawItem.2:iconX *tmp122 :drawItem.2:item 16 0
 
   384 draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
   385 label *label68
   386 label *label67
-    * op add *tmp125 :drawBold.5:x 1
-    * set :drawText.12:x *tmp125
+  387 op add :drawText.12:x :drawBold.5:x 1
   388 set :drawText.12:y :drawBold.5:y
   389 set :drawText.12:alignment :drawBold.5:alignment
   390 set :drawText.12:text :drawBold.5:text

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    10 printflush null
    11 drawflush null
    12 label *label4
-    * jump *label6 equal true false
    13 draw reset
    14 draw clear 0 0 32
    15 draw col %[gold]

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-9 instructions):
 
     1 read *tmp38 processor1 "*signature"
     2 jump *label0 notEqual *tmp38 "0:v1"
     3 label *label1
-    * op equal *tmp39 @unit null
-    * jump *label3 equal *tmp39 false
+    4 jump *label3 notEqual @unit null
     5 ubind @poly
     6 label *label2
     7 jump *label1 always
 
    45 op floor :drawHeader:t @second
    46 op idiv :drawHeader:m :drawHeader:t 60
    47 op mod :drawHeader:s :drawHeader:t 60
-    * op lessThan *tmp44 :drawHeader:s 10
-    * jump *label14 equal *tmp44 false
+   48 jump *label14 greaterThanEq :drawHeader:s 10
    49 set *tmp45 "0"
    50 jump *label15 always
    51 label *label14
 
    97 set :drawMaterials:col 0
    98 set :drawMaterials:y 85
    99 read :drawMaterials:count processor1 ".totalTargets"
-    * op greaterThan *tmp47 :drawMaterials:count 2
-    * jump *label24 equal *tmp47 false
+  100 jump *label24 lessThanEq :drawMaterials:count 2
   101 set *tmp48 2
   102 jump *label25 always
   103 label *label24
 
   133 read :drawMaterials:target processor1 ".metaglassTarget"
   134 setaddr *tmp49 *label34
   135 label *label26
-    * op greaterThan *tmp50 :drawMaterials:target 0
-    * jump *label35 equal *tmp50 false
+  136 jump *label35 lessThanEq :drawMaterials:target 0
   137 read *tmp0 processor1 ".core"
   138 sensor *tmp52 *tmp0 :drawMaterials:item
   139 set :drawItem:columns :drawMaterials:columns
 
   194 label *label41
   195 label *label38
   196 op add :drawMaterials:col :drawMaterials:col 1
-    * op greaterThanEq *tmp73 :drawMaterials:col :drawItem:columns
-    * jump *label43 equal *tmp73 false
+  197 jump *label43 lessThan :drawMaterials:col :drawItem:columns
   198 set :drawMaterials:col 0
   199 op sub :drawMaterials:y :drawMaterials:y 15
   200 jump *label44 always
 
   202 label *label44
   203 label *label37
   204 op sub :drawMaterials:count :drawMaterials:count 1
-    * op lessThanEq *tmp75 :drawMaterials:count 0
-    * jump *label45 equal *tmp75 false
+  205 jump *label45 greaterThan :drawMaterials:count 0
   206 jump *label28 always
   207 jump *label46 always
   208 label *label45
 
   245 label *label48
   246 set :drawUnit:y 29
   247 read *tmp13 processor1 ".transportItem"
-    * op equal *tmp78 *tmp13 null
-    * jump *label53 equal *tmp78 false
+  248 jump *label53 notEqual *tmp13 null
   249 set :drawUnit.1:item @poly
   250 set :drawUnit.1:items 0
   251 set :drawUnit.1:col 0
 
   309 label *label60
   310 label *label57
   311 op add :drawUnit.1:col :drawUnit.1:col 1
-    * op greaterThanEq *tmp100 :drawUnit.1:col :drawItem.1:columns
-    * jump *label62 equal *tmp100 false
+  312 jump *label62 lessThan :drawUnit.1:col :drawItem.1:columns
   313 set :drawUnit.1:col 0
   314 op sub :drawUnit:y :drawUnit:y 15
   315 jump *label63 always
 
   388 label *label69
   389 label *label66
   390 op add :drawUnit.2:col :drawUnit.2:col 1
-    * op greaterThanEq *tmp126 :drawUnit.2:col :drawItem.2:columns
-    * jump *label71 equal *tmp126 false
+  391 jump *label71 lessThan :drawUnit.2:col :drawItem.2:columns
   392 set :drawUnit.2:col 0
   393 op sub :drawUnit:y :drawUnit:y 15
   394 jump *label72 always

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-5 instructions):
 
   197 jump *label43 lessThan :drawMaterials:col :drawItem:columns
   198 set :drawMaterials:col 0
   199 op sub :drawMaterials:y :drawMaterials:y 15
-    * jump *label44 always
   200 label *label43
   201 label *label44
   202 label *label37
   203 op sub :drawMaterials:count :drawMaterials:count 1
   204 jump *label45 greaterThan :drawMaterials:count 0
   205 jump *label28 always
-    * jump *label46 always
   206 label *label45
   207 label *label46
-    * jump *label36 always
   208 label *label35
   209 label *label36
   210 label *label27
 
   309 jump *label62 lessThan :drawUnit.1:col :drawItem.1:columns
   310 set :drawUnit.1:col 0
   311 op sub :drawUnit:y :drawUnit:y 15
-    * jump *label63 always
   312 label *label62
   313 label *label63
   314 label *label56
 
   387 jump *label71 lessThan :drawUnit.2:col :drawItem.2:columns
   388 set :drawUnit.2:col 0
   389 op sub :drawUnit:y :drawUnit:y 15
-    * jump *label72 always
   390 label *label71
   391 label *label72
   392 label *label65

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
    16 set :drawBold:y 161
    17 set :drawBold:alignment @bottom
    18 set :drawBold:text "Building"
-    * set :drawText:x :drawBold:x
-    * set :drawText:y :drawBold:y
-    * set :drawText:alignment :drawBold:alignment
-    * set :drawText:text :drawBold:text
-    * print :drawText:text
-    * set :drawPrint:x :drawText:x
-    * set :drawPrint:y :drawText:y
-    * set :drawPrint:alignment :drawText:alignment
-    * draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
+   19 set :drawText:x 40
+   20 set :drawText:y 161
+   21 set :drawText:alignment @bottom
+   22 set :drawText:text "Building"
+   23 print :drawBold:text
+   24 set :drawPrint:x :drawBold:x
+   25 set :drawPrint:y :drawBold:y
+   26 set :drawPrint:alignment :drawBold:alignment
+   27 draw print :drawText:x :drawText:y :drawText:alignment
    28 label *label11
    29 label *label10
-    * op add :drawText.1:x :drawBold:x 1
-    * set :drawText.1:y :drawBold:y
-    * set :drawText.1:alignment :drawBold:alignment
-    * set :drawText.1:text :drawBold:text
-    * print :drawText.1:text
-    * set :drawPrint.1:x :drawText.1:x
-    * set :drawPrint.1:y :drawText.1:y
-    * set :drawPrint.1:alignment :drawText.1:alignment
-    * draw print :drawPrint.1:x :drawPrint.1:y :drawPrint.1:alignment
+   30 op add :drawText.1:x 40 1
+   31 set :drawText.1:y 161
+   32 set :drawText.1:alignment @bottom
+   33 set :drawText.1:text "Building"
+   34 print :drawBold:text
+   35 set :drawPrint.1:x 41
+   36 set :drawPrint.1:y :drawBold:y
+   37 set :drawPrint.1:alignment :drawBold:alignment
+   38 draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
    39 label *label13
    40 label *label12
    41 label *label9
 
    59 set :drawText.2:y 172
    60 set :drawText.2:alignment @topRight
    61 set :drawText.2:text ""
-    * print :drawText.2:text
-    * set :drawPrint.2:x :drawText.2:x
-    * set :drawPrint.2:y :drawText.2:y
-    * set :drawPrint.2:alignment :drawText.2:alignment
-    * draw print :drawPrint.2:x :drawPrint.2:y :drawPrint.2:alignment
+   62 print ""
+   63 set :drawPrint.2:x 168
+   64 set :drawPrint.2:y 172
+   65 set :drawPrint.2:alignment @topRight
+   66 draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
    67 label *label17
    68 label *label16
    69 label *label8
 
    71 set :drawBold.1:y 101
    72 set :drawBold.1:alignment @bottomLeft
    73 set :drawBold.1:text "Materials"
-    * set :drawText.3:x :drawBold.1:x
-    * set :drawText.3:y :drawBold.1:y
-    * set :drawText.3:alignment :drawBold.1:alignment
-    * set :drawText.3:text :drawBold.1:text
-    * print :drawText.3:text
-    * set :drawPrint.3:x :drawText.3:x
-    * set :drawPrint.3:y :drawText.3:y
-    * set :drawPrint.3:alignment :drawText.3:alignment
-    * draw print :drawPrint.3:x :drawPrint.3:y :drawPrint.3:alignment
+   74 set :drawText.3:x 22
+   75 set :drawText.3:y 101
+   76 set :drawText.3:alignment @bottomLeft
+   77 set :drawText.3:text "Materials"
+   78 print :drawBold.1:text
+   79 set :drawPrint.3:x :drawBold.1:x
+   80 set :drawPrint.3:y :drawBold.1:y
+   81 set :drawPrint.3:alignment :drawBold.1:alignment
+   82 draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
    83 label *label21
    84 label *label20
-    * op add :drawText.4:x :drawBold.1:x 1
-    * set :drawText.4:y :drawBold.1:y
-    * set :drawText.4:alignment :drawBold.1:alignment
-    * set :drawText.4:text :drawBold.1:text
-    * print :drawText.4:text
-    * set :drawPrint.4:x :drawText.4:x
-    * set :drawPrint.4:y :drawText.4:y
-    * set :drawPrint.4:alignment :drawText.4:alignment
-    * draw print :drawPrint.4:x :drawPrint.4:y :drawPrint.4:alignment
+   85 op add :drawText.4:x 22 1
+   86 set :drawText.4:y 101
+   87 set :drawText.4:alignment @bottomLeft
+   88 set :drawText.4:text "Materials"
+   89 print :drawBold.1:text
+   90 set :drawPrint.4:x 23
+   91 set :drawPrint.4:y :drawBold.1:y
+   92 set :drawPrint.4:alignment :drawBold.1:alignment
+   93 draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
    94 label *label23
    95 label *label22
    96 label *label19
 
   136 jump *label35 lessThanEq :drawMaterials:target 0
   137 read *tmp0 processor1 ".core"
   138 sensor *tmp52 *tmp0 :drawMaterials:item
-    * set :drawItem:columns :drawMaterials:columns
+  139 set :drawItem:columns *tmp48
   140 set :drawItem:item :drawMaterials:item
   141 set :drawItem:current *tmp52
   142 set :drawItem:target :drawMaterials:target
   143 set :drawItem:count :drawMaterials:target
-    * op mul *tmp53 :drawItem:columns 176
-    * op div *tmp54 *tmp53 2
+  144 op mul *tmp53 :drawMaterials:columns 176
+  145 op mul *tmp54 :drawItem:columns 88
   146 op sub :drawItem:barLength 210 *tmp54
   147 op add :drawItem:textEnd 48 :drawItem:barLength
-    * op mul *tmp57 :drawItem:barLength :drawItem:current
-    * op div *tmp58 *tmp57 :drawItem:target
+  148 op mul *tmp57 :drawItem:barLength *tmp52
+  149 op div *tmp58 *tmp57 :drawMaterials:target
   150 op min :drawItem:length :drawItem:barLength *tmp58
   151 op mul *tmp60 :drawMaterials:col 176
-    * op div *tmp61 *tmp60 2
+  152 op mul *tmp61 :drawMaterials:col 88
   153 op add :drawItem:iconX 11 *tmp61
   154 op mul *tmp63 :drawMaterials:col 176
-    * op div *tmp64 *tmp63 2
-    * op add :drawItem:barX 22 *tmp64
+  155 op div *tmp64 *tmp60 2
+  156 op add :drawItem:barX 22 *tmp61
   157 op mul *tmp66 :drawMaterials:col 176
-    * op div *tmp67 *tmp66 2
-    * op add :drawItem:textX :drawItem:textEnd *tmp67
+  158 op div *tmp67 *tmp60 2
+  159 op add :drawItem:textX :drawItem:textEnd *tmp61
   160 draw col %[white]
   161 op add *tmp69 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp69 :drawItem:item 16 0
+  162 draw image :drawItem:iconX *tmp69 :drawMaterials:item 16 0
   163 draw color 0 128 0 255
   164 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   165 draw color 0 255 0 255
   166 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
   167 op add *tmp70 :drawMaterials:y 5
-    * op add *tmp71 *tmp70 2
+  168 op add *tmp71 *tmp69 2
   169 set :drawBold.2:x :drawItem:textX
   170 set :drawBold.2:y *tmp71
   171 set :drawBold.2:alignment @right
-    * set :drawBold.2:text :drawItem:count
-    * set :drawText.5:x :drawBold.2:x
-    * set :drawText.5:y :drawBold.2:y
-    * set :drawText.5:alignment :drawBold.2:alignment
-    * set :drawText.5:text :drawBold.2:text
-    * print :drawText.5:text
-    * set :drawPrint.5:x :drawText.5:x
-    * set :drawPrint.5:y :drawText.5:y
-    * set :drawPrint.5:alignment :drawText.5:alignment
-    * draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
+  172 set :drawBold.2:text :drawMaterials:target
+  173 set :drawText.5:x :drawItem:textX
+  174 set :drawText.5:y *tmp71
+  175 set :drawText.5:alignment @right
+  176 set :drawText.5:text :drawItem:count
+  177 print :drawBold.2:text
+  178 set :drawPrint.5:x :drawBold.2:x
+  179 set :drawPrint.5:y :drawBold.2:y
+  180 set :drawPrint.5:alignment :drawBold.2:alignment
+  181 draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
   182 label *label40
   183 label *label39
-    * op add :drawText.6:x :drawBold.2:x 1
-    * set :drawText.6:y :drawBold.2:y
-    * set :drawText.6:alignment :drawBold.2:alignment
-    * set :drawText.6:text :drawBold.2:text
-    * print :drawText.6:text
+  184 op add :drawText.6:x :drawItem:textX 1
+  185 set :drawText.6:y *tmp71
+  186 set :drawText.6:alignment @right
+  187 set :drawText.6:text :drawItem:count
+  188 print :drawBold.2:text
   189 set :drawPrint.6:x :drawText.6:x
-    * set :drawPrint.6:y :drawText.6:y
-    * set :drawPrint.6:alignment :drawText.6:alignment
-    * draw print :drawPrint.6:x :drawPrint.6:y :drawPrint.6:alignment
+  190 set :drawPrint.6:y :drawBold.2:y
+  191 set :drawPrint.6:alignment :drawBold.2:alignment
+  192 draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
   193 label *label42
   194 label *label41
   195 label *label38
   196 op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label43 lessThan :drawMaterials:col :drawItem:columns
+  197 jump *label43 lessThan :drawMaterials:col :drawMaterials:columns
   198 set :drawMaterials:col 0
   199 op sub :drawMaterials:y :drawMaterials:y 15
   200 label *label43
 
   217 set :drawBold.3:y 45
   218 set :drawBold.3:alignment @bottomLeft
   219 set :drawBold.3:text "Unit status"
-    * set :drawText.7:x :drawBold.3:x
-    * set :drawText.7:y :drawBold.3:y
-    * set :drawText.7:alignment :drawBold.3:alignment
-    * set :drawText.7:text :drawBold.3:text
-    * print :drawText.7:text
-    * set :drawPrint.7:x :drawText.7:x
-    * set :drawPrint.7:y :drawText.7:y
-    * set :drawPrint.7:alignment :drawText.7:alignment
-    * draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
+  220 set :drawText.7:x 22
+  221 set :drawText.7:y 45
+  222 set :drawText.7:alignment @bottomLeft
+  223 set :drawText.7:text "Unit status"
+  224 print :drawBold.3:text
+  225 set :drawPrint.7:x :drawBold.3:x
+  226 set :drawPrint.7:y :drawBold.3:y
+  227 set :drawPrint.7:alignment :drawBold.3:alignment
+  228 draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
   229 label *label50
   230 label *label49
-    * op add :drawText.8:x :drawBold.3:x 1
-    * set :drawText.8:y :drawBold.3:y
-    * set :drawText.8:alignment :drawBold.3:alignment
-    * set :drawText.8:text :drawBold.3:text
-    * print :drawText.8:text
-    * set :drawPrint.8:x :drawText.8:x
-    * set :drawPrint.8:y :drawText.8:y
-    * set :drawPrint.8:alignment :drawText.8:alignment
-    * draw print :drawPrint.8:x :drawPrint.8:y :drawPrint.8:alignment
+  231 op add :drawText.8:x 22 1
+  232 set :drawText.8:y 45
+  233 set :drawText.8:alignment @bottomLeft
+  234 set :drawText.8:text "Unit status"
+  235 print :drawBold.3:text
+  236 set :drawPrint.8:x 23
+  237 set :drawPrint.8:y :drawBold.3:y
+  238 set :drawPrint.8:alignment :drawBold.3:alignment
+  239 draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
   240 label *label52
   241 label *label51
   242 label *label48
 
   247 set :drawUnit.1:items 0
   248 set :drawUnit.1:col 0
   249 set :drawItem.1:columns 1
-    * set :drawItem.1:item :drawUnit.1:item
-    * set :drawItem.1:current :drawUnit.1:items
+  250 set :drawItem.1:item @poly
+  251 set :drawItem.1:current 0
   252 read *tmp12 processor1 ".transportTarget"
   253 set :drawItem.1:target *tmp12
   254 read *tmp12 processor1 ".transportTarget"
   255 set :drawItem.1:count *tmp12
-    * op mul *tmp80 :drawItem.1:columns 176
-    * op div *tmp81 *tmp80 2
-    * op sub :drawItem.1:barLength 210 *tmp81
-    * op add :drawItem.1:textEnd 48 :drawItem.1:barLength
-    * op mul *tmp84 :drawItem.1:barLength :drawItem.1:current
+  256 op mul *tmp80 1 176
+  257 op div *tmp81 176 2
+  258 op sub :drawItem.1:barLength 210 88
+  259 op add :drawItem.1:textEnd 48 122
+  260 op mul *tmp84 122 :drawUnit.1:items
   261 op div *tmp85 *tmp84 :drawItem.1:target
-    * op min :drawItem.1:length :drawItem.1:barLength *tmp85
-    * op mul *tmp87 :drawUnit.1:col 176
-    * op div *tmp88 *tmp87 2
-    * op add :drawItem.1:iconX 11 *tmp88
-    * op mul *tmp90 :drawUnit.1:col 176
-    * op div *tmp91 *tmp90 2
-    * op add :drawItem.1:barX 22 *tmp91
-    * op mul *tmp93 :drawUnit.1:col 176
-    * op div *tmp94 *tmp93 2
-    * op add :drawItem.1:textX :drawItem.1:textEnd *tmp94
+  262 op min :drawItem.1:length 122 *tmp85
+  263 op mul *tmp87 0 176
+  264 op div *tmp88 0 2
+  265 op add :drawItem.1:iconX 11 0
+  266 op mul *tmp90 0 176
+  267 op div *tmp91 0 2
+  268 op add :drawItem.1:barX 22 0
+  269 op mul *tmp93 0 176
+  270 op div *tmp94 0 2
+  271 op add :drawItem.1:textX 170 0
   272 draw col %[white]
-    * op add *tmp96 :drawUnit:y 5
-    * draw image :drawItem.1:iconX *tmp96 :drawItem.1:item 16 0
+  273 op add *tmp96 29 5
+  274 draw image 11 34 :drawUnit.1:item 16 0
   275 draw color 0 128 0 255
-    * draw rect :drawItem.1:barX :drawUnit:y :drawItem.1:length 10
+  276 draw rect 22 29 :drawItem.1:length 10
   277 draw color 0 255 0 255
-    * draw lineRect :drawItem.1:barX :drawUnit:y :drawItem.1:barLength 10
-    * op add *tmp97 :drawUnit:y 5
-    * op add *tmp98 *tmp97 2
-    * set :drawBold.4:x :drawItem.1:textX
-    * set :drawBold.4:y *tmp98
+  278 draw lineRect 22 29 122 10
+  279 op add *tmp97 29 5
+  280 op add *tmp98 34 2
+  281 set :drawBold.4:x 170
+  282 set :drawBold.4:y 36
   283 set :drawBold.4:alignment @right
-    * set :drawBold.4:text :drawItem.1:count
-    * set :drawText.9:x :drawBold.4:x
-    * set :drawText.9:y :drawBold.4:y
-    * set :drawText.9:alignment :drawBold.4:alignment
-    * set :drawText.9:text :drawBold.4:text
-    * print :drawText.9:text
-    * set :drawPrint.9:x :drawText.9:x
-    * set :drawPrint.9:y :drawText.9:y
-    * set :drawPrint.9:alignment :drawText.9:alignment
-    * draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
+  284 set :drawBold.4:text *tmp12
+  285 set :drawText.9:x :drawItem.1:textX
+  286 set :drawText.9:y *tmp98
+  287 set :drawText.9:alignment @right
+  288 set :drawText.9:text :drawItem.1:count
+  289 print :drawBold.4:text
+  290 set :drawPrint.9:x :drawBold.4:x
+  291 set :drawPrint.9:y :drawBold.4:y
+  292 set :drawPrint.9:alignment :drawBold.4:alignment
+  293 draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
   294 label *label59
   295 label *label58
-    * op add :drawText.10:x :drawBold.4:x 1
-    * set :drawText.10:y :drawBold.4:y
-    * set :drawText.10:alignment :drawBold.4:alignment
-    * set :drawText.10:text :drawBold.4:text
-    * print :drawText.10:text
+  296 op add :drawText.10:x :drawItem.1:textX 1
+  297 set :drawText.10:y *tmp98
+  298 set :drawText.10:alignment @right
+  299 set :drawText.10:text :drawItem.1:count
+  300 print :drawBold.4:text
   301 set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawText.10:y
-    * set :drawPrint.10:alignment :drawText.10:alignment
-    * draw print :drawPrint.10:x :drawPrint.10:y :drawPrint.10:alignment
+  302 set :drawPrint.10:y :drawBold.4:y
+  303 set :drawPrint.10:alignment :drawBold.4:alignment
+  304 draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
   305 label *label61
   306 label *label60
   307 label *label57
-    * op add :drawUnit.1:col :drawUnit.1:col 1
-    * jump *label62 lessThan :drawUnit.1:col :drawItem.1:columns
-    * set :drawUnit.1:col 0
-    * op sub :drawUnit:y :drawUnit:y 15
+  308 op add :drawUnit.1:col 0 1
+  309 jump *label62 lessThan 1 1
+  310 op sub :drawUnit:y 29 15
   311 label *label62
   312 label *label63
   313 label *label56
 
   324 set :drawUnit.2:items *tmp105
   325 set :drawUnit.2:col 0
   326 set :drawItem.2:columns 1
-    * set :drawItem.2:item :drawUnit.2:item
-    * set :drawItem.2:current :drawUnit.2:items
+  327 set :drawItem.2:item *tmp13
+  328 set :drawItem.2:current *tmp105
   329 read *tmp12 processor1 ".transportTarget"
   330 set :drawItem.2:target *tmp12
   331 read *tmp12 processor1 ".transportTarget"
   332 set :drawItem.2:count *tmp12
-    * op mul *tmp106 :drawItem.2:columns 176
-    * op div *tmp107 *tmp106 2
-    * op sub :drawItem.2:barLength 210 *tmp107
-    * op add :drawItem.2:textEnd 48 :drawItem.2:barLength
-    * op mul *tmp110 :drawItem.2:barLength :drawItem.2:current
+  333 op mul *tmp106 1 176
+  334 op div *tmp107 176 2
+  335 op sub :drawItem.2:barLength 210 88
+  336 op add :drawItem.2:textEnd 48 122
+  337 op mul *tmp110 122 :drawUnit.2:items
   338 op div *tmp111 *tmp110 :drawItem.2:target
-    * op min :drawItem.2:length :drawItem.2:barLength *tmp111
-    * op mul *tmp113 :drawUnit.2:col 176
-    * op div *tmp114 *tmp113 2
-    * op add :drawItem.2:iconX 11 *tmp114
-    * op mul *tmp116 :drawUnit.2:col 176
-    * op div *tmp117 *tmp116 2
-    * op add :drawItem.2:barX 22 *tmp117
-    * op mul *tmp119 :drawUnit.2:col 176
-    * op div *tmp120 *tmp119 2
-    * op add :drawItem.2:textX :drawItem.2:textEnd *tmp120
+  339 op min :drawItem.2:length 122 *tmp111
+  340 op mul *tmp113 0 176
+  341 op div *tmp114 0 2
+  342 op add :drawItem.2:iconX 11 0
+  343 op mul *tmp116 0 176
+  344 op div *tmp117 0 2
+  345 op add :drawItem.2:barX 22 0
+  346 op mul *tmp119 0 176
+  347 op div *tmp120 0 2
+  348 op add :drawItem.2:textX 170 0
   349 draw col %[white]
-    * op add *tmp122 :drawUnit:y 5
-    * draw image :drawItem.2:iconX *tmp122 :drawItem.2:item 16 0
+  350 op add *tmp122 29 5
+  351 draw image 11 34 :drawUnit.2:item 16 0
   352 draw color 0 128 0 255
-    * draw rect :drawItem.2:barX :drawUnit:y :drawItem.2:length 10
+  353 draw rect 22 29 :drawItem.2:length 10
   354 draw color 0 255 0 255
-    * draw lineRect :drawItem.2:barX :drawUnit:y :drawItem.2:barLength 10
-    * op add *tmp123 :drawUnit:y 5
-    * op add *tmp124 *tmp123 2
-    * set :drawBold.5:x :drawItem.2:textX
-    * set :drawBold.5:y *tmp124
+  355 draw lineRect 22 29 122 10
+  356 op add *tmp123 29 5
+  357 op add *tmp124 34 2
+  358 set :drawBold.5:x 170
+  359 set :drawBold.5:y 36
   360 set :drawBold.5:alignment @right
-    * set :drawBold.5:text :drawItem.2:count
-    * set :drawText.11:x :drawBold.5:x
-    * set :drawText.11:y :drawBold.5:y
-    * set :drawText.11:alignment :drawBold.5:alignment
-    * set :drawText.11:text :drawBold.5:text
-    * print :drawText.11:text
-    * set :drawPrint.11:x :drawText.11:x
-    * set :drawPrint.11:y :drawText.11:y
-    * set :drawPrint.11:alignment :drawText.11:alignment
-    * draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
+  361 set :drawBold.5:text *tmp12
+  362 set :drawText.11:x :drawItem.2:textX
+  363 set :drawText.11:y *tmp124
+  364 set :drawText.11:alignment @right
+  365 set :drawText.11:text :drawItem.2:count
+  366 print :drawBold.5:text
+  367 set :drawPrint.11:x :drawBold.5:x
+  368 set :drawPrint.11:y :drawBold.5:y
+  369 set :drawPrint.11:alignment :drawBold.5:alignment
+  370 draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
   371 label *label68
   372 label *label67
-    * op add :drawText.12:x :drawBold.5:x 1
-    * set :drawText.12:y :drawBold.5:y
-    * set :drawText.12:alignment :drawBold.5:alignment
-    * set :drawText.12:text :drawBold.5:text
-    * print :drawText.12:text
+  373 op add :drawText.12:x :drawItem.2:textX 1
+  374 set :drawText.12:y *tmp124
+  375 set :drawText.12:alignment @right
+  376 set :drawText.12:text :drawItem.2:count
+  377 print :drawBold.5:text
   378 set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawText.12:y
-    * set :drawPrint.12:alignment :drawText.12:alignment
-    * draw print :drawPrint.12:x :drawPrint.12:y :drawPrint.12:alignment
+  379 set :drawPrint.12:y :drawBold.5:y
+  380 set :drawPrint.12:alignment :drawBold.5:alignment
+  381 draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
   382 label *label70
   383 label *label69
   384 label *label66
-    * op add :drawUnit.2:col :drawUnit.2:col 1
-    * jump *label71 lessThan :drawUnit.2:col :drawItem.2:columns
-    * set :drawUnit.2:col 0
-    * op sub :drawUnit:y :drawUnit:y 15
+  385 op add :drawUnit.2:col 0 1
+  386 jump *label71 lessThan 1 1
+  387 op sub :drawUnit:y 29 15
   388 label *label71
   389 label *label72
   390 label *label65

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-61 instructions):
 
    19 set :drawText:x 40
    20 set :drawText:y 161
    21 set :drawText:alignment @bottom
-    * set :drawText:text "Building"
-    * print :drawBold:text
-    * set :drawPrint:x :drawBold:x
-    * set :drawPrint:y :drawBold:y
-    * set :drawPrint:alignment :drawBold:alignment
-    * draw print :drawText:x :drawText:y :drawText:alignment
+   22 print "Building"
+   23 set :drawPrint:x 40
+   24 set :drawPrint:y 161
+   25 set :drawPrint:alignment @bottom
+   26 draw print 40 161 @bottom
    27 label *label11
    28 label *label10
    29 op add :drawText.1:x 40 1
    30 set :drawText.1:y 161
    31 set :drawText.1:alignment @bottom
-    * set :drawText.1:text "Building"
-    * print :drawBold:text
-    * set :drawPrint.1:x 41
-    * set :drawPrint.1:y :drawBold:y
-    * set :drawPrint.1:alignment :drawBold:alignment
-    * draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
+   32 print "Building"
+   33 set :drawPrint.1:y 161
+   34 set :drawPrint.1:alignment @bottom
+   35 draw print 41 161 @bottom
    36 label *label13
    37 label *label12
    38 label *label9
 
    55 set :drawText.2:x 168
    56 set :drawText.2:y 172
    57 set :drawText.2:alignment @topRight
-    * set :drawText.2:text ""
    58 print ""
-    * set :drawPrint.2:x 168
-    * set :drawPrint.2:y 172
-    * set :drawPrint.2:alignment @topRight
-    * draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
+   59 draw print 168 172 @topRight
    60 label *label17
    61 label *label16
    62 label *label8
 
    67 set :drawText.3:x 22
    68 set :drawText.3:y 101
    69 set :drawText.3:alignment @bottomLeft
-    * set :drawText.3:text "Materials"
-    * print :drawBold.1:text
-    * set :drawPrint.3:x :drawBold.1:x
-    * set :drawPrint.3:y :drawBold.1:y
-    * set :drawPrint.3:alignment :drawBold.1:alignment
-    * draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
+   70 print "Materials"
+   71 set :drawPrint.3:x 22
+   72 set :drawPrint.3:y 101
+   73 set :drawPrint.3:alignment @bottomLeft
+   74 draw print 22 101 @bottomLeft
    75 label *label21
    76 label *label20
    77 op add :drawText.4:x 22 1
    78 set :drawText.4:y 101
    79 set :drawText.4:alignment @bottomLeft
-    * set :drawText.4:text "Materials"
-    * print :drawBold.1:text
-    * set :drawPrint.4:x 23
-    * set :drawPrint.4:y :drawBold.1:y
-    * set :drawPrint.4:alignment :drawBold.1:alignment
-    * draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
+   80 print "Materials"
+   81 set :drawPrint.4:y 101
+   82 set :drawPrint.4:alignment @bottomLeft
+   83 draw print 23 101 @bottomLeft
    84 label *label23
    85 label *label22
    86 label *label19
 
   127 read *tmp0 processor1 ".core"
   128 sensor *tmp52 *tmp0 :drawMaterials:item
   129 set :drawItem:columns *tmp48
-    * set :drawItem:item :drawMaterials:item
-    * set :drawItem:current *tmp52
-    * set :drawItem:target :drawMaterials:target
   130 set :drawItem:count :drawMaterials:target
-    * op mul *tmp53 :drawMaterials:columns 176
-    * op mul *tmp54 :drawItem:columns 88
+  131 op mul *tmp53 *tmp48 176
+  132 op mul *tmp54 *tmp48 88
   133 op sub :drawItem:barLength 210 *tmp54
   134 op add :drawItem:textEnd 48 :drawItem:barLength
   135 op mul *tmp57 :drawItem:barLength *tmp52
 
   138 op mul *tmp60 :drawMaterials:col 176
   139 op mul *tmp61 :drawMaterials:col 88
   140 op add :drawItem:iconX 11 *tmp61
-    * op mul *tmp63 :drawMaterials:col 176
-    * op div *tmp64 *tmp60 2
+  141 op mul *tmp64 :drawMaterials:col 88
   142 op add :drawItem:barX 22 *tmp61
-    * op mul *tmp66 :drawMaterials:col 176
-    * op div *tmp67 *tmp60 2
+  143 op mul *tmp67 :drawMaterials:col 88
   144 op add :drawItem:textX :drawItem:textEnd *tmp61
   145 draw col %[white]
   146 op add *tmp69 :drawMaterials:y 5
 
   149 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   150 draw color 0 255 0 255
   151 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
-    * op add *tmp70 :drawMaterials:y 5
-    * op add *tmp71 *tmp69 2
+  152 op add *tmp71 :drawMaterials:y 7
   153 set :drawBold.2:x :drawItem:textX
   154 set :drawBold.2:y *tmp71
   155 set :drawBold.2:alignment @right
 
   157 set :drawText.5:x :drawItem:textX
   158 set :drawText.5:y *tmp71
   159 set :drawText.5:alignment @right
-    * set :drawText.5:text :drawItem:count
-    * print :drawBold.2:text
-    * set :drawPrint.5:x :drawBold.2:x
-    * set :drawPrint.5:y :drawBold.2:y
-    * set :drawPrint.5:alignment :drawBold.2:alignment
-    * draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
+  160 set :drawText.5:text :drawMaterials:target
+  161 print :drawMaterials:target
+  162 set :drawPrint.5:x :drawItem:textX
+  163 set :drawPrint.5:y *tmp71
+  164 set :drawPrint.5:alignment @right
+  165 draw print :drawItem:textX *tmp71 @right
   166 label *label40
   167 label *label39
   168 op add :drawText.6:x :drawItem:textX 1
   169 set :drawText.6:y *tmp71
   170 set :drawText.6:alignment @right
-    * set :drawText.6:text :drawItem:count
-    * print :drawBold.2:text
-    * set :drawPrint.6:x :drawText.6:x
-    * set :drawPrint.6:y :drawBold.2:y
-    * set :drawPrint.6:alignment :drawBold.2:alignment
-    * draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
+  171 set :drawText.6:text :drawMaterials:target
+  172 print :drawMaterials:target
+  173 set :drawPrint.6:y *tmp71
+  174 set :drawPrint.6:alignment @right
+  175 draw print :drawText.6:x *tmp71 @right
   176 label *label42
   177 label *label41
   178 label *label38
   179 op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label43 lessThan :drawMaterials:col :drawMaterials:columns
+  180 jump *label43 lessThan :drawMaterials:col *tmp48
   181 set :drawMaterials:col 0
   182 op sub :drawMaterials:y :drawMaterials:y 15
   183 label *label43
 
   203 set :drawText.7:x 22
   204 set :drawText.7:y 45
   205 set :drawText.7:alignment @bottomLeft
-    * set :drawText.7:text "Unit status"
-    * print :drawBold.3:text
-    * set :drawPrint.7:x :drawBold.3:x
-    * set :drawPrint.7:y :drawBold.3:y
-    * set :drawPrint.7:alignment :drawBold.3:alignment
-    * draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
+  206 print "Unit status"
+  207 set :drawPrint.7:x 22
+  208 set :drawPrint.7:y 45
+  209 set :drawPrint.7:alignment @bottomLeft
+  210 draw print 22 45 @bottomLeft
   211 label *label50
   212 label *label49
   213 op add :drawText.8:x 22 1
   214 set :drawText.8:y 45
   215 set :drawText.8:alignment @bottomLeft
-    * set :drawText.8:text "Unit status"
-    * print :drawBold.3:text
-    * set :drawPrint.8:x 23
-    * set :drawPrint.8:y :drawBold.3:y
-    * set :drawPrint.8:alignment :drawBold.3:alignment
-    * draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
+  216 print "Unit status"
+  217 set :drawPrint.8:y 45
+  218 set :drawPrint.8:alignment @bottomLeft
+  219 draw print 23 45 @bottomLeft
   220 label *label52
   221 label *label51
   222 label *label48
-    * set :drawUnit:y 29
   223 read *tmp13 processor1 ".transportItem"
   224 jump *label53 notEqual *tmp13 null
   225 set :drawUnit.1:item @poly
   226 set :drawUnit.1:items 0
-    * set :drawUnit.1:col 0
-    * set :drawItem.1:columns 1
-    * set :drawItem.1:item @poly
-    * set :drawItem.1:current 0
   227 read *tmp12 processor1 ".transportTarget"
   228 set :drawItem.1:target *tmp12
   229 read *tmp12 processor1 ".transportTarget"
   230 set :drawItem.1:count *tmp12
-    * op mul *tmp80 1 176
-    * op div *tmp81 176 2
-    * op sub :drawItem.1:barLength 210 88
-    * op add :drawItem.1:textEnd 48 122
-    * op mul *tmp84 122 :drawUnit.1:items
-    * op div *tmp85 *tmp84 :drawItem.1:target
+  231 op mul *tmp84 122 0
+  232 op div *tmp85 0 :drawItem.1:target
   233 op min :drawItem.1:length 122 *tmp85
-    * op mul *tmp87 0 176
-    * op div *tmp88 0 2
-    * op add :drawItem.1:iconX 11 0
-    * op mul *tmp90 0 176
-    * op div *tmp91 0 2
-    * op add :drawItem.1:barX 22 0
-    * op mul *tmp93 0 176
-    * op div *tmp94 0 2
   234 op add :drawItem.1:textX 170 0
   235 draw col %[white]
-    * op add *tmp96 29 5
-    * draw image 11 34 :drawUnit.1:item 16 0
+  236 draw image 11 34 @poly 16 0
   237 draw color 0 128 0 255
   238 draw rect 22 29 :drawItem.1:length 10
   239 draw color 0 255 0 255
   240 draw lineRect 22 29 122 10
-    * op add *tmp97 29 5
   241 op add *tmp98 34 2
   242 set :drawBold.4:x 170
   243 set :drawBold.4:y 36
   244 set :drawBold.4:alignment @right
   245 set :drawBold.4:text *tmp12
-    * set :drawText.9:x :drawItem.1:textX
-    * set :drawText.9:y *tmp98
+  246 set :drawText.9:x 170
+  247 set :drawText.9:y 36
   248 set :drawText.9:alignment @right
-    * set :drawText.9:text :drawItem.1:count
-    * print :drawBold.4:text
-    * set :drawPrint.9:x :drawBold.4:x
-    * set :drawPrint.9:y :drawBold.4:y
-    * set :drawPrint.9:alignment :drawBold.4:alignment
-    * draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
+  249 set :drawText.9:text *tmp12
+  250 print *tmp12
+  251 set :drawPrint.9:x 170
+  252 set :drawPrint.9:y 36
+  253 set :drawPrint.9:alignment @right
+  254 draw print :drawItem.1:textX *tmp98 @right
   255 label *label59
   256 label *label58
-    * op add :drawText.10:x :drawItem.1:textX 1
-    * set :drawText.10:y *tmp98
+  257 op add :drawText.10:x 170 1
+  258 set :drawText.10:y 36
   259 set :drawText.10:alignment @right
-    * set :drawText.10:text :drawItem.1:count
-    * print :drawBold.4:text
-    * set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawBold.4:y
-    * set :drawPrint.10:alignment :drawBold.4:alignment
-    * draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
+  260 set :drawText.10:text *tmp12
+  261 print *tmp12
+  262 set :drawPrint.10:x 171
+  263 set :drawPrint.10:y 36
+  264 set :drawPrint.10:alignment @right
+  265 draw print 171 *tmp98 @right
   266 label *label61
   267 label *label60
   268 label *label57
-    * op add :drawUnit.1:col 0 1
   269 jump *label62 lessThan 1 1
-    * op sub :drawUnit:y 29 15
   270 label *label62
   271 label *label63
   272 label *label56
 
   281 read *tmp13 processor1 ".transportItem"
   282 set :drawUnit.2:item *tmp13
   283 set :drawUnit.2:items *tmp105
-    * set :drawUnit.2:col 0
-    * set :drawItem.2:columns 1
-    * set :drawItem.2:item *tmp13
-    * set :drawItem.2:current *tmp105
   284 read *tmp12 processor1 ".transportTarget"
   285 set :drawItem.2:target *tmp12
   286 read *tmp12 processor1 ".transportTarget"
   287 set :drawItem.2:count *tmp12
-    * op mul *tmp106 1 176
-    * op div *tmp107 176 2
-    * op sub :drawItem.2:barLength 210 88
-    * op add :drawItem.2:textEnd 48 122
-    * op mul *tmp110 122 :drawUnit.2:items
+  288 op mul *tmp110 122 *tmp105
   289 op div *tmp111 *tmp110 :drawItem.2:target
   290 op min :drawItem.2:length 122 *tmp111
-    * op mul *tmp113 0 176
-    * op div *tmp114 0 2
-    * op add :drawItem.2:iconX 11 0
-    * op mul *tmp116 0 176
-    * op div *tmp117 0 2
-    * op add :drawItem.2:barX 22 0
-    * op mul *tmp119 0 176
-    * op div *tmp120 0 2
   291 op add :drawItem.2:textX 170 0
   292 draw col %[white]
-    * op add *tmp122 29 5
-    * draw image 11 34 :drawUnit.2:item 16 0
+  293 draw image 11 34 *tmp13 16 0
   294 draw color 0 128 0 255
   295 draw rect 22 29 :drawItem.2:length 10
   296 draw color 0 255 0 255
   297 draw lineRect 22 29 122 10
-    * op add *tmp123 29 5
   298 op add *tmp124 34 2
   299 set :drawBold.5:x 170
   300 set :drawBold.5:y 36
   301 set :drawBold.5:alignment @right
   302 set :drawBold.5:text *tmp12
-    * set :drawText.11:x :drawItem.2:textX
-    * set :drawText.11:y *tmp124
+  303 set :drawText.11:x 170
+  304 set :drawText.11:y 36
   305 set :drawText.11:alignment @right
-    * set :drawText.11:text :drawItem.2:count
-    * print :drawBold.5:text
-    * set :drawPrint.11:x :drawBold.5:x
-    * set :drawPrint.11:y :drawBold.5:y
-    * set :drawPrint.11:alignment :drawBold.5:alignment
-    * draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
+  306 set :drawText.11:text *tmp12
+  307 print *tmp12
+  308 set :drawPrint.11:x 170
+  309 set :drawPrint.11:y 36
+  310 set :drawPrint.11:alignment @right
+  311 draw print :drawItem.2:textX *tmp124 @right
   312 label *label68
   313 label *label67
-    * op add :drawText.12:x :drawItem.2:textX 1
-    * set :drawText.12:y *tmp124
+  314 op add :drawText.12:x 170 1
+  315 set :drawText.12:y 36
   316 set :drawText.12:alignment @right
-    * set :drawText.12:text :drawItem.2:count
-    * print :drawBold.5:text
-    * set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawBold.5:y
-    * set :drawPrint.12:alignment :drawBold.5:alignment
-    * draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
+  317 set :drawText.12:text *tmp12
+  318 print *tmp12
+  319 set :drawPrint.12:x 171
+  320 set :drawPrint.12:y 36
+  321 set :drawPrint.12:alignment @right
+  322 draw print 171 *tmp124 @right
   323 label *label70
   324 label *label69
   325 label *label66
-    * op add :drawUnit.2:col 0 1
   326 jump *label71 lessThan 1 1
-    * op sub :drawUnit:y 29 15
   327 label *label71
   328 label *label72
   329 label *label65

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-114 instructions):
 
    12 draw reset
    13 draw clear 0 0 32
    14 draw col %[gold]
-    * set :drawBold:x 40
-    * set :drawBold:y 161
-    * set :drawBold:alignment @bottom
-    * set :drawBold:text "Building"
-    * set :drawText:x 40
-    * set :drawText:y 161
-    * set :drawText:alignment @bottom
    15 print "Building"
-    * set :drawPrint:x 40
-    * set :drawPrint:y 161
-    * set :drawPrint:alignment @bottom
    16 draw print 40 161 @bottom
    17 label *label11
    18 label *label10
-    * op add :drawText.1:x 40 1
-    * set :drawText.1:y 161
-    * set :drawText.1:alignment @bottom
    19 print "Building"
-    * set :drawPrint.1:y 161
-    * set :drawPrint.1:alignment @bottom
    20 draw print 41 161 @bottom
    21 label *label13
    22 label *label12
 
    37 print ":"
    38 print *tmp45
    39 print :drawHeader:s
-    * set :drawText.2:x 168
-    * set :drawText.2:y 172
-    * set :drawText.2:alignment @topRight
    40 print ""
    41 draw print 168 172 @topRight
    42 label *label17
    43 label *label16
    44 label *label8
-    * set :drawBold.1:x 22
-    * set :drawBold.1:y 101
-    * set :drawBold.1:alignment @bottomLeft
-    * set :drawBold.1:text "Materials"
-    * set :drawText.3:x 22
-    * set :drawText.3:y 101
-    * set :drawText.3:alignment @bottomLeft
    45 print "Materials"
-    * set :drawPrint.3:x 22
-    * set :drawPrint.3:y 101
-    * set :drawPrint.3:alignment @bottomLeft
    46 draw print 22 101 @bottomLeft
    47 label *label21
    48 label *label20
-    * op add :drawText.4:x 22 1
-    * set :drawText.4:y 101
-    * set :drawText.4:alignment @bottomLeft
    49 print "Materials"
-    * set :drawPrint.4:y 101
-    * set :drawPrint.4:alignment @bottomLeft
    50 draw print 23 101 @bottomLeft
    51 label *label23
    52 label *label22
 
    60 label *label24
    61 set *tmp48 1
    62 label *label25
-    * set :drawMaterials:columns *tmp48
    63 set :drawMaterials:item @copper
    64 read :drawMaterials:target processor1 ".copperTarget"
    65 setaddr *tmp49 *label29
 
    92 jump *label35 lessThanEq :drawMaterials:target 0
    93 read *tmp0 processor1 ".core"
    94 sensor *tmp52 *tmp0 :drawMaterials:item
-    * set :drawItem:columns *tmp48
-    * set :drawItem:count :drawMaterials:target
-    * op mul *tmp53 *tmp48 176
    95 op mul *tmp54 *tmp48 88
    96 op sub :drawItem:barLength 210 *tmp54
    97 op add :drawItem:textEnd 48 :drawItem:barLength
    98 op mul *tmp57 :drawItem:barLength *tmp52
    99 op div *tmp58 *tmp57 :drawMaterials:target
   100 op min :drawItem:length :drawItem:barLength *tmp58
-    * op mul *tmp60 :drawMaterials:col 176
   101 op mul *tmp61 :drawMaterials:col 88
   102 op add :drawItem:iconX 11 *tmp61
-    * op mul *tmp64 :drawMaterials:col 88
   103 op add :drawItem:barX 22 *tmp61
-    * op mul *tmp67 :drawMaterials:col 88
   104 op add :drawItem:textX :drawItem:textEnd *tmp61
   105 draw col %[white]
   106 op add *tmp69 :drawMaterials:y 5
 
   110 draw color 0 255 0 255
   111 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
   112 op add *tmp71 :drawMaterials:y 7
-    * set :drawBold.2:x :drawItem:textX
-    * set :drawBold.2:y *tmp71
-    * set :drawBold.2:alignment @right
-    * set :drawBold.2:text :drawMaterials:target
-    * set :drawText.5:x :drawItem:textX
-    * set :drawText.5:y *tmp71
-    * set :drawText.5:alignment @right
-    * set :drawText.5:text :drawMaterials:target
   113 print :drawMaterials:target
-    * set :drawPrint.5:x :drawItem:textX
-    * set :drawPrint.5:y *tmp71
-    * set :drawPrint.5:alignment @right
   114 draw print :drawItem:textX *tmp71 @right
   115 label *label40
   116 label *label39
   117 op add :drawText.6:x :drawItem:textX 1
-    * set :drawText.6:y *tmp71
-    * set :drawText.6:alignment @right
-    * set :drawText.6:text :drawMaterials:target
   118 print :drawMaterials:target
-    * set :drawPrint.6:y *tmp71
-    * set :drawPrint.6:alignment @right
   119 draw print :drawText.6:x *tmp71 @right
   120 label *label42
   121 label *label41
 
   140 label *label28
   141 label *label18
   142 draw col %[white]
-    * set :drawBold.3:x 22
-    * set :drawBold.3:y 45
-    * set :drawBold.3:alignment @bottomLeft
-    * set :drawBold.3:text "Unit status"
-    * set :drawText.7:x 22
-    * set :drawText.7:y 45
-    * set :drawText.7:alignment @bottomLeft
   143 print "Unit status"
-    * set :drawPrint.7:x 22
-    * set :drawPrint.7:y 45
-    * set :drawPrint.7:alignment @bottomLeft
   144 draw print 22 45 @bottomLeft
   145 label *label50
   146 label *label49
-    * op add :drawText.8:x 22 1
-    * set :drawText.8:y 45
-    * set :drawText.8:alignment @bottomLeft
   147 print "Unit status"
-    * set :drawPrint.8:y 45
-    * set :drawPrint.8:alignment @bottomLeft
   148 draw print 23 45 @bottomLeft
   149 label *label52
   150 label *label51
   151 label *label48
   152 read *tmp13 processor1 ".transportItem"
   153 jump *label53 notEqual *tmp13 null
-    * set :drawUnit.1:item @poly
-    * set :drawUnit.1:items 0
   154 read *tmp12 processor1 ".transportTarget"
   155 set :drawItem.1:target *tmp12
   156 read *tmp12 processor1 ".transportTarget"
-    * set :drawItem.1:count *tmp12
-    * op mul *tmp84 122 0
   157 op div *tmp85 0 :drawItem.1:target
   158 op min :drawItem.1:length 122 *tmp85
   159 op add :drawItem.1:textX 170 0
 
   164 draw color 0 255 0 255
   165 draw lineRect 22 29 122 10
   166 op add *tmp98 34 2
-    * set :drawBold.4:x 170
-    * set :drawBold.4:y 36
-    * set :drawBold.4:alignment @right
-    * set :drawBold.4:text *tmp12
-    * set :drawText.9:x 170
-    * set :drawText.9:y 36
-    * set :drawText.9:alignment @right
-    * set :drawText.9:text *tmp12
   167 print *tmp12
-    * set :drawPrint.9:x 170
-    * set :drawPrint.9:y 36
-    * set :drawPrint.9:alignment @right
-    * draw print :drawItem.1:textX *tmp98 @right
+  168 draw print 170 36 @right
   169 label *label59
   170 label *label58
-    * op add :drawText.10:x 170 1
-    * set :drawText.10:y 36
-    * set :drawText.10:alignment @right
-    * set :drawText.10:text *tmp12
   171 print *tmp12
-    * set :drawPrint.10:x 171
-    * set :drawPrint.10:y 36
-    * set :drawPrint.10:alignment @right
-    * draw print 171 *tmp98 @right
+  172 draw print 171 36 @right
   173 label *label61
   174 label *label60
   175 label *label57
 
   186 op equal *tmp104 :drawUnit:unitItem *tmp13
   187 op mul *tmp105 *tmp103 *tmp104
   188 read *tmp13 processor1 ".transportItem"
-    * set :drawUnit.2:item *tmp13
-    * set :drawUnit.2:items *tmp105
   189 read *tmp12 processor1 ".transportTarget"
   190 set :drawItem.2:target *tmp12
   191 read *tmp12 processor1 ".transportTarget"
-    * set :drawItem.2:count *tmp12
   192 op mul *tmp110 122 *tmp105
   193 op div *tmp111 *tmp110 :drawItem.2:target
   194 op min :drawItem.2:length 122 *tmp111
 
   200 draw color 0 255 0 255
   201 draw lineRect 22 29 122 10
   202 op add *tmp124 34 2
-    * set :drawBold.5:x 170
-    * set :drawBold.5:y 36
-    * set :drawBold.5:alignment @right
-    * set :drawBold.5:text *tmp12
-    * set :drawText.11:x 170
-    * set :drawText.11:y 36
-    * set :drawText.11:alignment @right
-    * set :drawText.11:text *tmp12
   203 print *tmp12
-    * set :drawPrint.11:x 170
-    * set :drawPrint.11:y 36
-    * set :drawPrint.11:alignment @right
-    * draw print :drawItem.2:textX *tmp124 @right
+  204 draw print 170 36 @right
   205 label *label68
   206 label *label67
-    * op add :drawText.12:x 170 1
-    * set :drawText.12:y 36
-    * set :drawText.12:alignment @right
-    * set :drawText.12:text *tmp12
   207 print *tmp12
-    * set :drawPrint.12:x 171
-    * set :drawPrint.12:y 36
-    * set :drawPrint.12:alignment @right
-    * draw print 171 *tmp124 @right
+  208 draw print 171 36 @right
   209 label *label70
   210 label *label69
   211 label *label66

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-4 instructions):
 
   156 read *tmp12 processor1 ".transportTarget"
   157 op div *tmp85 0 :drawItem.1:target
   158 op min :drawItem.1:length 122 *tmp85
-    * op add :drawItem.1:textX 170 0
   159 draw col %[white]
   160 draw image 11 34 @poly 16 0
   161 draw color 0 128 0 255
   162 draw rect 22 29 :drawItem.1:length 10
   163 draw color 0 255 0 255
   164 draw lineRect 22 29 122 10
-    * op add *tmp98 34 2
   165 print *tmp12
   166 draw print 170 36 @right
   167 label *label59
 
   190 op mul *tmp110 122 *tmp105
   191 op div *tmp111 *tmp110 :drawItem.2:target
   192 op min :drawItem.2:length 122 *tmp111
-    * op add :drawItem.2:textX 170 0
   193 draw col %[white]
   194 draw image 11 34 *tmp13 16 0
   195 draw color 0 128 0 255
   196 draw rect 22 29 :drawItem.2:length 10
   197 draw color 0 255 0 255
   198 draw lineRect 22 29 122 10
-    * op add *tmp124 34 2
   199 print *tmp12
   200 draw print 170 36 @right
   201 label *label68

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
     2 jump *label0 notEqual *tmp38 "0:v1"
     3 label *label1
     4 jump *label3 notEqual @unit null
+    5 label *label74
     6 ubind @poly
     7 label *label2
-    * jump *label1 always
+    8 jump *label74 equal @unit null
     9 label *label3
    10 printflush null
    11 drawflush null

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1:
 
    28 op floor :drawHeader:t @second
    29 op idiv :drawHeader:m :drawHeader:t 60
    30 op mod :drawHeader:s :drawHeader:t 60
-    * jump *label14 greaterThanEq :drawHeader:s 10
+   31 set *tmp45 ""
+   32 jump *label15 greaterThanEq :drawHeader:s 10
    33 set *tmp45 "0"
    34 jump *label15 always
-    * label *label14
-    * set *tmp45 ""
    35 label *label15
    36 print :drawHeader:m
    37 print ":"
 
    54 set :drawMaterials:col 0
    55 set :drawMaterials:y 85
    56 read :drawMaterials:count processor1 ".totalTargets"
-    * jump *label24 lessThanEq :drawMaterials:count 2
+   57 set *tmp48 1
+   58 jump *label25 lessThanEq :drawMaterials:count 2
    59 set *tmp48 2
    60 jump *label25 always
-    * label *label24
-    * set *tmp48 1
    61 label *label25
    62 set :drawMaterials:item @copper
    63 read :drawMaterials:target processor1 ".copperTarget"

Modifications by Unroll iteration loop at Display.mnd:73:5 (+153 instructions):
 
    59 set *tmp48 2
    60 jump *label25 always
    61 label *label25
-    * set :drawMaterials:item @copper
-    * read :drawMaterials:target processor1 ".copperTarget"
-    * setaddr *tmp49 *label29
-    * jump *label26 always
-    * multilabel *label29 (m:marker0)
-    * set :drawMaterials:item @lead
-    * read :drawMaterials:target processor1 ".leadTarget"
-    * setaddr *tmp49 *label30
-    * jump *label26 always
-    * multilabel *label30 (m:marker0)
-    * set :drawMaterials:item @graphite
-    * read :drawMaterials:target processor1 ".graphiteTarget"
-    * setaddr *tmp49 *label31
-    * jump *label26 always
-    * multilabel *label31 (m:marker0)
-    * set :drawMaterials:item @silicon
-    * read :drawMaterials:target processor1 ".siliconTarget"
-    * setaddr *tmp49 *label32
-    * jump *label26 always
-    * multilabel *label32 (m:marker0)
-    * set :drawMaterials:item @titanium
-    * read :drawMaterials:target processor1 ".titaniumTarget"
-    * setaddr *tmp49 *label33
-    * jump *label26 always
-    * multilabel *label33 (m:marker0)
-    * set :drawMaterials:item @metaglass
-    * read :drawMaterials:target processor1 ".metaglassTarget"
-    * setaddr *tmp49 *label34
-    * label *label26
-    * jump *label35 lessThanEq :drawMaterials:target 0
-    * read *tmp0 processor1 ".core"
-    * sensor *tmp52 *tmp0 :drawMaterials:item
-    * op mul *tmp54 *tmp48 88
-    * op sub :drawItem:barLength 210 *tmp54
-    * op add :drawItem:textEnd 48 :drawItem:barLength
-    * op mul *tmp57 :drawItem:barLength *tmp52
-    * op div *tmp58 *tmp57 :drawMaterials:target
-    * op min :drawItem:length :drawItem:barLength *tmp58
-    * op mul *tmp61 :drawMaterials:col 88
-    * op add :drawItem:iconX 11 *tmp61
-    * op add :drawItem:barX 22 *tmp61
-    * op add :drawItem:textX :drawItem:textEnd *tmp61
-    * draw col %[white]
-    * op add *tmp69 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp69 :drawMaterials:item 16 0
-    * draw color 0 128 0 255
-    * draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
-    * draw color 0 255 0 255
-    * draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
-    * op add *tmp71 :drawMaterials:y 7
-    * print :drawMaterials:target
-    * draw print :drawItem:textX *tmp71 @right
-    * label *label40
-    * label *label39
-    * op add :drawText.6:x :drawItem:textX 1
-    * print :drawMaterials:target
-    * draw print :drawText.6:x *tmp71 @right
-    * label *label42
-    * label *label41
-    * label *label38
-    * op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label43 lessThan :drawMaterials:col *tmp48
-    * set :drawMaterials:col 0
-    * op sub :drawMaterials:y :drawMaterials:y 15
-    * label *label43
-    * label *label44
-    * label *label37
-    * op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label45 greaterThan :drawMaterials:count 0
-    * jump *label28 always
-    * label *label45
-    * label *label46
-    * label *label35
-    * label *label36
-    * label *label27
-    * multijump *tmp49 0 0 (m:marker0)
-    * multilabel *label34 (m:marker0)
-    * label *label28
+   62 set :drawMaterials:item @copper
+   63 read :drawMaterials:target processor1 ".copperTarget"
+   64 label *label75
+   65 jump *label86 lessThanEq :drawMaterials:target 0
+   66 read *tmp0 processor1 ".core"
+   67 sensor *tmp52 *tmp0 :drawMaterials:item
+   68 op mul *tmp54 *tmp48 88
+   69 op sub :drawItem:barLength 210 *tmp54
+   70 op add :drawItem:textEnd 48 :drawItem:barLength
+   71 op mul *tmp57 :drawItem:barLength *tmp52
+   72 op div *tmp58 *tmp57 :drawMaterials:target
+   73 op min :drawItem:length :drawItem:barLength *tmp58
+   74 op mul *tmp61 :drawMaterials:col 88
+   75 op add :drawItem:iconX 11 *tmp61
+   76 op add :drawItem:barX 22 *tmp61
+   77 op add :drawItem:textX :drawItem:textEnd *tmp61
+   78 draw col %[white]
+   79 op add *tmp69 :drawMaterials:y 5
+   80 draw image :drawItem:iconX *tmp69 :drawMaterials:item 16 0
+   81 draw color 0 128 0 255
+   82 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+   83 draw color 0 255 0 255
+   84 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+   85 op add *tmp71 :drawMaterials:y 7
+   86 print :drawMaterials:target
+   87 draw print :drawItem:textX *tmp71 @right
+   88 label *label76
+   89 label *label77
+   90 op add :drawText.6:x :drawItem:textX 1
+   91 print :drawMaterials:target
+   92 draw print :drawText.6:x *tmp71 @right
+   93 label *label78
+   94 label *label79
+   95 label *label80
+   96 op add :drawMaterials:col :drawMaterials:col 1
+   97 jump *label81 lessThan :drawMaterials:col *tmp48
+   98 set :drawMaterials:col 0
+   99 op sub :drawMaterials:y :drawMaterials:y 15
+  100 label *label81
+  101 label *label82
+  102 label *label83
+  103 op sub :drawMaterials:count :drawMaterials:count 1
+  104 jump *label84 greaterThan :drawMaterials:count 0
+  105 jump *label28 always
+  106 label *label84
+  107 label *label85
+  108 label *label86
+  109 label *label87
+  110 label *label88
+  111 set :drawMaterials:item @lead
+  112 read :drawMaterials:target processor1 ".leadTarget"
+  113 label *label91
+  114 jump *label102 lessThanEq :drawMaterials:target 0
+  115 read *tmp0 processor1 ".core"
+  116 sensor *tmp52 *tmp0 :drawMaterials:item
+  117 op mul *tmp54 *tmp48 88
+  118 op sub :drawItem:barLength 210 *tmp54
+  119 op add :drawItem:textEnd 48 :drawItem:barLength
+  120 op mul *tmp57 :drawItem:barLength *tmp52
+  121 op div *tmp58 *tmp57 :drawMaterials:target
+  122 op min :drawItem:length :drawItem:barLength *tmp58
+  123 op mul *tmp61 :drawMaterials:col 88
+  124 op add :drawItem:iconX 11 *tmp61
+  125 op add :drawItem:barX 22 *tmp61
+  126 op add :drawItem:textX :drawItem:textEnd *tmp61
+  127 draw col %[white]
+  128 op add *tmp69 :drawMaterials:y 5
+  129 draw image :drawItem:iconX *tmp69 :drawMaterials:item 16 0
+  130 draw color 0 128 0 255
+  131 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+  132 draw color 0 255 0 255
+  133 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+  134 op add *tmp71 :drawMaterials:y 7
+  135 print :drawMaterials:target
+  136 draw print :drawItem:textX *tmp71 @right
+  137 label *label92
+  138 label *label93
+  139 op add :drawText.6:x :drawItem:textX 1
+  140 print :drawMaterials:target
+  141 draw print :drawText.6:x *tmp71 @right
+  142 label *label94
+  143 label *label95
+  144 label *label96
+  145 op add :drawMaterials:col :drawMaterials:col 1
+  146 jump *label97 lessThan :drawMaterials:col *tmp48
+  147 set :drawMaterials:col 0
+  148 op sub :drawMaterials:y :drawMaterials:y 15
+  149 label *label97
+  150 label *label98
+  151 label *label99
+  152 op sub :drawMaterials:count :drawMaterials:count 1
+  153 jump *label100 greaterThan :drawMaterials:count 0
+  154 jump *label28 always
+  155 label *label100
+  156 label *label101
+  157 label *label102
+  158 label *label103
+  159 label *label104
+  160 set :drawMaterials:item @graphite
+  161 read :drawMaterials:target processor1 ".graphiteTarget"
+  162 label *label107
+  163 jump *label118 lessThanEq :drawMaterials:target 0
+  164 read *tmp0 processor1 ".core"
+  165 sensor *tmp52 *tmp0 :drawMaterials:item
+  166 op mul *tmp54 *tmp48 88
+  167 op sub :drawItem:barLength 210 *tmp54
+  168 op add :drawItem:textEnd 48 :drawItem:barLength
+  169 op mul *tmp57 :drawItem:barLength *tmp52
+  170 op div *tmp58 *tmp57 :drawMaterials:target
+  171 op min :drawItem:length :drawItem:barLength *tmp58
+  172 op mul *tmp61 :drawMaterials:col 88
+  173 op add :drawItem:iconX 11 *tmp61
+  174 op add :drawItem:barX 22 *tmp61
+  175 op add :drawItem:textX :drawItem:textEnd *tmp61
+  176 draw col %[white]
+  177 op add *tmp69 :drawMaterials:y 5
+  178 draw image :drawItem:iconX *tmp69 :drawMaterials:item 16 0
+  179 draw color 0 128 0 255
+  180 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+  181 draw color 0 255 0 255
+  182 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+  183 op add *tmp71 :drawMaterials:y 7
+  184 print :drawMaterials:target
+  185 draw print :drawItem:textX *tmp71 @right
+  186 label *label108
+  187 label *label109
+  188 op add :drawText.6:x :drawItem:textX 1
+  189 print :drawMaterials:target
+  190 draw print :drawText.6:x *tmp71 @right
+  191 label *label110
+  192 label *label111
+  193 label *label112
+  194 op add :drawMaterials:col :drawMaterials:col 1
+  195 jump *label113 lessThan :drawMaterials:col *tmp48
+  196 set :drawMaterials:col 0
+  197 op sub :drawMaterials:y :drawMaterials:y 15
+  198 label *label113
+  199 label *label114
+  200 label *label115
+  201 op sub :drawMaterials:count :drawMaterials:count 1
+  202 jump *label116 greaterThan :drawMaterials:count 0
+  203 jump *label28 always
+  204 label *label116
+  205 label *label117
+  206 label *label118
+  207 label *label119
+  208 label *label120
+  209 set :drawMaterials:item @silicon
+  210 read :drawMaterials:target processor1 ".siliconTarget"
+  211 label *label123
+  212 jump *label134 lessThanEq :drawMaterials:target 0
+  213 read *tmp0 processor1 ".core"
+  214 sensor *tmp52 *tmp0 :drawMaterials:item
+  215 op mul *tmp54 *tmp48 88
+  216 op sub :drawItem:barLength 210 *tmp54
+  217 op add :drawItem:textEnd 48 :drawItem:barLength
+  218 op mul *tmp57 :drawItem:barLength *tmp52
+  219 op div *tmp58 *tmp57 :drawMaterials:target
+  220 op min :drawItem:length :drawItem:barLength *tmp58
+  221 op mul *tmp61 :drawMaterials:col 88
+  222 op add :drawItem:iconX 11 *tmp61
+  223 op add :drawItem:barX 22 *tmp61
+  224 op add :drawItem:textX :drawItem:textEnd *tmp61
+  225 draw col %[white]
+  226 op add *tmp69 :drawMaterials:y 5
+  227 draw image :drawItem:iconX *tmp69 :drawMaterials:item 16 0
+  228 draw color 0 128 0 255
+  229 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+  230 draw color 0 255 0 255
+  231 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+  232 op add *tmp71 :drawMaterials:y 7
+  233 print :drawMaterials:target
+  234 draw print :drawItem:textX *tmp71 @right
+  235 label *label124
+  236 label *label125
+  237 op add :drawText.6:x :drawItem:textX 1
+  238 print :drawMaterials:target
+  239 draw print :drawText.6:x *tmp71 @right
+  240 label *label126
+  241 label *label127
+  242 label *label128
+  243 op add :drawMaterials:col :drawMaterials:col 1
+  244 jump *label129 lessThan :drawMaterials:col *tmp48
+  245 set :drawMaterials:col 0
+  246 op sub :drawMaterials:y :drawMaterials:y 15
+  247 label *label129
+  248 label *label130
+  249 label *label131
+  250 op sub :drawMaterials:count :drawMaterials:count 1
+  251 jump *label132 greaterThan :drawMaterials:count 0
+  252 jump *label28 always
+  253 label *label132
+  254 label *label133
+  255 label *label134
+  256 label *label135
+  257 label *label136
+  258 set :drawMaterials:item @titanium
+  259 read :drawMaterials:target processor1 ".titaniumTarget"
+  260 label *label139
+  261 jump *label150 lessThanEq :drawMaterials:target 0
+  262 read *tmp0 processor1 ".core"
+  263 sensor *tmp52 *tmp0 :drawMaterials:item
+  264 op mul *tmp54 *tmp48 88
+  265 op sub :drawItem:barLength 210 *tmp54
+  266 op add :drawItem:textEnd 48 :drawItem:barLength
+  267 op mul *tmp57 :drawItem:barLength *tmp52
+  268 op div *tmp58 *tmp57 :drawMaterials:target
+  269 op min :drawItem:length :drawItem:barLength *tmp58
+  270 op mul *tmp61 :drawMaterials:col 88
+  271 op add :drawItem:iconX 11 *tmp61
+  272 op add :drawItem:barX 22 *tmp61
+  273 op add :drawItem:textX :drawItem:textEnd *tmp61
+  274 draw col %[white]
+  275 op add *tmp69 :drawMaterials:y 5
+  276 draw image :drawItem:iconX *tmp69 :drawMaterials:item 16 0
+  277 draw color 0 128 0 255
+  278 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+  279 draw color 0 255 0 255
+  280 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+  281 op add *tmp71 :drawMaterials:y 7
+  282 print :drawMaterials:target
+  283 draw print :drawItem:textX *tmp71 @right
+  284 label *label140
+  285 label *label141
+  286 op add :drawText.6:x :drawItem:textX 1
+  287 print :drawMaterials:target
+  288 draw print :drawText.6:x *tmp71 @right
+  289 label *label142
+  290 label *label143
+  291 label *label144
+  292 op add :drawMaterials:col :drawMaterials:col 1
+  293 jump *label145 lessThan :drawMaterials:col *tmp48
+  294 set :drawMaterials:col 0
+  295 op sub :drawMaterials:y :drawMaterials:y 15
+  296 label *label145
+  297 label *label146
+  298 label *label147
+  299 op sub :drawMaterials:count :drawMaterials:count 1
+  300 jump *label148 greaterThan :drawMaterials:count 0
+  301 jump *label28 always
+  302 label *label148
+  303 label *label149
+  304 label *label150
+  305 label *label151
+  306 label *label152
+  307 set :drawMaterials:item @metaglass
+  308 read :drawMaterials:target processor1 ".metaglassTarget"
+  309 label *label155
+  310 jump *label166 lessThanEq :drawMaterials:target 0
+  311 read *tmp0 processor1 ".core"
+  312 sensor *tmp52 *tmp0 :drawMaterials:item
+  313 op mul *tmp54 *tmp48 88
+  314 op sub :drawItem:barLength 210 *tmp54
+  315 op add :drawItem:textEnd 48 :drawItem:barLength
+  316 op mul *tmp57 :drawItem:barLength *tmp52
+  317 op div *tmp58 *tmp57 :drawMaterials:target
+  318 op min :drawItem:length :drawItem:barLength *tmp58
+  319 op mul *tmp61 :drawMaterials:col 88
+  320 op add :drawItem:iconX 11 *tmp61
+  321 op add :drawItem:barX 22 *tmp61
+  322 op add :drawItem:textX :drawItem:textEnd *tmp61
+  323 draw col %[white]
+  324 op add *tmp69 :drawMaterials:y 5
+  325 draw image :drawItem:iconX *tmp69 :drawMaterials:item 16 0
+  326 draw color 0 128 0 255
+  327 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+  328 draw color 0 255 0 255
+  329 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+  330 op add *tmp71 :drawMaterials:y 7
+  331 print :drawMaterials:target
+  332 draw print :drawItem:textX *tmp71 @right
+  333 label *label156
+  334 label *label157
+  335 op add :drawText.6:x :drawItem:textX 1
+  336 print :drawMaterials:target
+  337 draw print :drawText.6:x *tmp71 @right
+  338 label *label158
+  339 label *label159
+  340 label *label160
+  341 op add :drawMaterials:col :drawMaterials:col 1
+  342 jump *label161 lessThan :drawMaterials:col *tmp48
+  343 set :drawMaterials:col 0
+  344 op sub :drawMaterials:y :drawMaterials:y 15
+  345 label *label161
+  346 label *label162
+  347 label *label163
+  348 op sub :drawMaterials:count :drawMaterials:count 1
+  349 jump *label164 greaterThan :drawMaterials:count 0
+  350 jump *label28 always
+  351 label *label164
+  352 label *label165
+  353 label *label166
+  354 label *label167
+  355 label *label168
+  356 label *label28
   357 label *label18
   358 draw col %[white]
   359 print "Unit status"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
    64 label *label75
    65 jump *label86 lessThanEq :drawMaterials:target 0
    66 read *tmp0 processor1 ".core"
-    * sensor *tmp52 *tmp0 :drawMaterials:item
+   67 sensor *tmp52 *tmp0 @copper
    68 op mul *tmp54 *tmp48 88
    69 op sub :drawItem:barLength 210 *tmp54
    70 op add :drawItem:textEnd 48 :drawItem:barLength
    71 op mul *tmp57 :drawItem:barLength *tmp52
    72 op div *tmp58 *tmp57 :drawMaterials:target
    73 op min :drawItem:length :drawItem:barLength *tmp58
-    * op mul *tmp61 :drawMaterials:col 88
-    * op add :drawItem:iconX 11 *tmp61
-    * op add :drawItem:barX 22 *tmp61
-    * op add :drawItem:textX :drawItem:textEnd *tmp61
+   74 op mul *tmp61 0 88
+   75 op add :drawItem:iconX 11 0
+   76 op add :drawItem:barX 22 0
+   77 op add :drawItem:textX :drawItem:textEnd 0
    78 draw col %[white]
-    * op add *tmp69 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp69 :drawMaterials:item 16 0
+   79 op add *tmp69 85 5
+   80 draw image 11 90 @copper 16 0
    81 draw color 0 128 0 255
-    * draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+   82 draw rect 22 85 :drawItem:length 10
    83 draw color 0 255 0 255
-    * draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
-    * op add *tmp71 :drawMaterials:y 7
+   84 draw lineRect 22 85 :drawItem:barLength 10
+   85 op add *tmp71 85 7
    86 print :drawMaterials:target
-    * draw print :drawItem:textX *tmp71 @right
+   87 draw print :drawItem:textX 92 @right
    88 label *label76
    89 label *label77
    90 op add :drawText.6:x :drawItem:textX 1
    91 print :drawMaterials:target
-    * draw print :drawText.6:x *tmp71 @right
+   92 draw print :drawText.6:x 92 @right
    93 label *label78
    94 label *label79
    95 label *label80
-    * op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label81 lessThan :drawMaterials:col *tmp48
+   96 op add :drawMaterials:col 0 1
+   97 jump *label81 lessThan 1 *tmp48
    98 set :drawMaterials:col 0
-    * op sub :drawMaterials:y :drawMaterials:y 15
+   99 op sub :drawMaterials:y 85 15
   100 label *label81
   101 label *label82
   102 label *label83
 
   113 label *label91
   114 jump *label102 lessThanEq :drawMaterials:target 0
   115 read *tmp0 processor1 ".core"
-    * sensor *tmp52 *tmp0 :drawMaterials:item
+  116 sensor *tmp52 *tmp0 @lead
   117 op mul *tmp54 *tmp48 88
   118 op sub :drawItem:barLength 210 *tmp54
   119 op add :drawItem:textEnd 48 :drawItem:barLength
 
   126 op add :drawItem:textX :drawItem:textEnd *tmp61
   127 draw col %[white]
   128 op add *tmp69 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp69 :drawMaterials:item 16 0
+  129 draw image :drawItem:iconX *tmp69 @lead 16 0
   130 draw color 0 128 0 255
   131 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   132 draw color 0 255 0 255
 
   162 label *label107
   163 jump *label118 lessThanEq :drawMaterials:target 0
   164 read *tmp0 processor1 ".core"
-    * sensor *tmp52 *tmp0 :drawMaterials:item
+  165 sensor *tmp52 *tmp0 @graphite
   166 op mul *tmp54 *tmp48 88
   167 op sub :drawItem:barLength 210 *tmp54
   168 op add :drawItem:textEnd 48 :drawItem:barLength
 
   175 op add :drawItem:textX :drawItem:textEnd *tmp61
   176 draw col %[white]
   177 op add *tmp69 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp69 :drawMaterials:item 16 0
+  178 draw image :drawItem:iconX *tmp69 @graphite 16 0
   179 draw color 0 128 0 255
   180 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   181 draw color 0 255 0 255
 
   211 label *label123
   212 jump *label134 lessThanEq :drawMaterials:target 0
   213 read *tmp0 processor1 ".core"
-    * sensor *tmp52 *tmp0 :drawMaterials:item
+  214 sensor *tmp52 *tmp0 @silicon
   215 op mul *tmp54 *tmp48 88
   216 op sub :drawItem:barLength 210 *tmp54
   217 op add :drawItem:textEnd 48 :drawItem:barLength
 
   224 op add :drawItem:textX :drawItem:textEnd *tmp61
   225 draw col %[white]
   226 op add *tmp69 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp69 :drawMaterials:item 16 0
+  227 draw image :drawItem:iconX *tmp69 @silicon 16 0
   228 draw color 0 128 0 255
   229 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   230 draw color 0 255 0 255
 
   260 label *label139
   261 jump *label150 lessThanEq :drawMaterials:target 0
   262 read *tmp0 processor1 ".core"
-    * sensor *tmp52 *tmp0 :drawMaterials:item
+  263 sensor *tmp52 *tmp0 @titanium
   264 op mul *tmp54 *tmp48 88
   265 op sub :drawItem:barLength 210 *tmp54
   266 op add :drawItem:textEnd 48 :drawItem:barLength
 
   273 op add :drawItem:textX :drawItem:textEnd *tmp61
   274 draw col %[white]
   275 op add *tmp69 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp69 :drawMaterials:item 16 0
+  276 draw image :drawItem:iconX *tmp69 @titanium 16 0
   277 draw color 0 128 0 255
   278 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   279 draw color 0 255 0 255
 
   309 label *label155
   310 jump *label166 lessThanEq :drawMaterials:target 0
   311 read *tmp0 processor1 ".core"
-    * sensor *tmp52 *tmp0 :drawMaterials:item
+  312 sensor *tmp52 *tmp0 @metaglass
   313 op mul *tmp54 *tmp48 88
   314 op sub :drawItem:barLength 210 *tmp54
   315 op add :drawItem:textEnd 48 :drawItem:barLength
 
   322 op add :drawItem:textX :drawItem:textEnd *tmp61
   323 draw col %[white]
   324 op add *tmp69 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp69 :drawMaterials:item 16 0
+  325 draw image :drawItem:iconX *tmp69 @metaglass 16 0
   326 draw color 0 128 0 255
   327 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   328 draw color 0 255 0 255
 
   340 label *label160
   341 op add :drawMaterials:col :drawMaterials:col 1
   342 jump *label161 lessThan :drawMaterials:col *tmp48
-    * set :drawMaterials:col 0
-    * op sub :drawMaterials:y :drawMaterials:y 15
   343 label *label161
   344 label *label162
   345 label *label163

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
    59 set *tmp48 2
    60 jump *label25 always
    61 label *label25
-    * set :drawMaterials:item @copper
    62 read :drawMaterials:target processor1 ".copperTarget"
    63 label *label75
    64 jump *label86 lessThanEq :drawMaterials:target 0
 
    70 op mul *tmp57 :drawItem:barLength *tmp52
    71 op div *tmp58 *tmp57 :drawMaterials:target
    72 op min :drawItem:length :drawItem:barLength *tmp58
-    * op mul *tmp61 0 88
-    * op add :drawItem:iconX 11 0
-    * op add :drawItem:barX 22 0
-    * op add :drawItem:textX :drawItem:textEnd 0
+   73 op add :drawItem:textX :drawItem:barLength 48
    74 draw col %[white]
-    * op add *tmp69 85 5
    75 draw image 11 90 @copper 16 0
    76 draw color 0 128 0 255
    77 draw rect 22 85 :drawItem:length 10
    78 draw color 0 255 0 255
    79 draw lineRect 22 85 :drawItem:barLength 10
-    * op add *tmp71 85 7
    80 print :drawMaterials:target
    81 draw print :drawItem:textX 92 @right
    82 label *label76
 
   102 label *label86
   103 label *label87
   104 label *label88
-    * set :drawMaterials:item @lead
   105 read :drawMaterials:target processor1 ".leadTarget"
   106 label *label91
   107 jump *label102 lessThanEq :drawMaterials:target 0
 
   150 label *label102
   151 label *label103
   152 label *label104
-    * set :drawMaterials:item @graphite
   153 read :drawMaterials:target processor1 ".graphiteTarget"
   154 label *label107
   155 jump *label118 lessThanEq :drawMaterials:target 0
 
   198 label *label118
   199 label *label119
   200 label *label120
-    * set :drawMaterials:item @silicon
   201 read :drawMaterials:target processor1 ".siliconTarget"
   202 label *label123
   203 jump *label134 lessThanEq :drawMaterials:target 0
 
   246 label *label134
   247 label *label135
   248 label *label136
-    * set :drawMaterials:item @titanium
   249 read :drawMaterials:target processor1 ".titaniumTarget"
   250 label *label139
   251 jump *label150 lessThanEq :drawMaterials:target 0
 
   294 label *label150
   295 label *label151
   296 label *label152
-    * set :drawMaterials:item @metaglass
   297 read :drawMaterials:target processor1 ".metaglassTarget"
   298 label *label155
   299 jump *label166 lessThanEq :drawMaterials:target 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3:
 
    78 draw color 0 255 0 255
    79 draw lineRect 22 85 :drawItem:barLength 10
    80 print :drawMaterials:target
-    * draw print :drawItem:textX 92 @right
+   81 draw print :drawItem:textEnd 92 @right
    82 label *label76
    83 label *label77
-    * op add :drawText.6:x :drawItem:textX 1
+   84 op add :drawText.6:x :drawItem:textEnd 1
    85 print :drawMaterials:target
    86 draw print :drawText.6:x 92 @right
    87 label *label78

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-1 instructions):
 
    70 op mul *tmp57 :drawItem:barLength *tmp52
    71 op div *tmp58 *tmp57 :drawMaterials:target
    72 op min :drawItem:length :drawItem:barLength *tmp58
-    * op add :drawItem:textX :drawItem:barLength 48
    73 draw col %[white]
    74 draw image 11 90 @copper 16 0
    75 draw color 0 128 0 255
 
    80 draw print :drawItem:textEnd 92 @right
    81 label *label76
    82 label *label77
-    * op add :drawText.6:x :drawItem:textEnd 1
+   83 op add :drawText.6:x :drawItem:barLength 49
    84 print :drawMaterials:target
    85 draw print :drawText.6:x 92 @right
    86 label *label78

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-2 instructions):
 
   373 label *label61
   374 label *label60
   375 label *label57
-    * jump *label62 lessThan 1 1
   376 label *label62
   377 label *label63
   378 label *label56
 
   406 label *label70
   407 label *label69
   408 label *label66
-    * jump *label71 lessThan 1 1
   409 label *label71
   410 label *label72
   411 label *label65

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-4 instructions):
 
    31 set *tmp45 ""
    32 jump *label15 greaterThanEq :drawHeader:s 10
    33 set *tmp45 "0"
-    * jump *label15 always
    34 label *label15
    35 print :drawHeader:m
    36 print ":"
 
    56 set *tmp48 1
    57 jump *label25 lessThanEq :drawMaterials:count 2
    58 set *tmp48 2
-    * jump *label25 always
    59 label *label25
    60 read :drawMaterials:target processor1 ".copperTarget"
    61 label *label75
 
   325 label *label159
   326 label *label160
   327 op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label161 lessThan :drawMaterials:col *tmp48
   328 label *label161
   329 label *label162
   330 label *label163
   331 op sub :drawMaterials:count :drawMaterials:count 1
   332 jump *label164 greaterThan :drawMaterials:count 0
-    * jump *label28 always
   333 label *label164
   334 label *label165
   335 label *label166

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-1 instructions):
 
   329 label *label162
   330 label *label163
   331 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label164 greaterThan :drawMaterials:count 0
   332 label *label164
   333 label *label165
   334 label *label166

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    84 label *label78
    85 label *label79
    86 label *label80
-    * op add :drawMaterials:col 0 1
+   87 set :drawMaterials:col 1
    88 jump *label81 lessThan 1 *tmp48
    89 set :drawMaterials:col 0
    90 op sub :drawMaterials:y 85 15
 
   351 read *tmp12 processor1 ".transportTarget"
   352 set :drawItem.1:target *tmp12
   353 read *tmp12 processor1 ".transportTarget"
-    * op div *tmp85 0 :drawItem.1:target
+  354 set *tmp85 0
   355 op min :drawItem.1:length 122 *tmp85
   356 draw col %[white]
   357 draw image 11 34 @poly 16 0

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-2 instructions):
 
   348 label *label48
   349 read *tmp13 processor1 ".transportItem"
   350 jump *label53 notEqual *tmp13 null
-    * read *tmp12 processor1 ".transportTarget"
-    * set :drawItem.1:target *tmp12
+  351 read :drawItem.1:target processor1 ".transportTarget"
   352 read *tmp12 processor1 ".transportTarget"
   353 set *tmp85 0
   354 op min :drawItem.1:length 122 *tmp85
 
   379 op equal *tmp104 :drawUnit:unitItem *tmp13
   380 op mul *tmp105 *tmp103 *tmp104
   381 read *tmp13 processor1 ".transportItem"
-    * read *tmp12 processor1 ".transportTarget"
-    * set :drawItem.2:target *tmp12
+  382 read :drawItem.2:target processor1 ".transportTarget"
   383 read *tmp12 processor1 ".transportTarget"
   384 op mul *tmp110 122 *tmp105
   385 op div *tmp111 *tmp110 :drawItem.2:target

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-3 instructions):
 
   324 label *label158
   325 label *label159
   326 label *label160
-    * op add :drawMaterials:col :drawMaterials:col 1
   327 label *label161
   328 label *label162
   329 label *label163
-    * op sub :drawMaterials:count :drawMaterials:count 1
   330 label *label164
   331 label *label165
   332 label *label166
 
   346 label *label48
   347 read *tmp13 processor1 ".transportItem"
   348 jump *label53 notEqual *tmp13 null
-    * read :drawItem.1:target processor1 ".transportTarget"
   349 read *tmp12 processor1 ".transportTarget"
   350 set *tmp85 0
-    * op min :drawItem.1:length 122 *tmp85
+  351 op min :drawItem.1:length 122 0
   352 draw col %[white]
   353 draw image 11 34 @poly 16 0
   354 draw color 0 128 0 255
-    * draw rect 22 29 :drawItem.1:length 10
+  355 draw rect 22 29 0 10
   356 draw color 0 255 0 255
   357 draw lineRect 22 29 122 10
   358 print *tmp12

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-2 instructions):
 
   347 read *tmp13 processor1 ".transportItem"
   348 jump *label53 notEqual *tmp13 null
   349 read *tmp12 processor1 ".transportTarget"
-    * set *tmp85 0
-    * op min :drawItem.1:length 122 0
   350 draw col %[white]
   351 draw image 11 34 @poly 16 0
   352 draw color 0 128 0 255

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
     0 label *label0
     1 read *tmp38 processor1 "*signature"
     2 jump *label0 notEqual *tmp38 "0:v1"
-    * label *label1
     3 jump *label3 notEqual @unit null
     4 label *label74
     5 ubind @poly
-    * label *label2
     6 jump *label74 equal @unit null
     7 label *label3
     8 printflush null
 
    13 draw col %[gold]
    14 print "Building"
    15 draw print 40 161 @bottom
-    * label *label11
-    * label *label10
    16 print "Building"
    17 draw print 41 161 @bottom
-    * label *label13
-    * label *label12
-    * label *label9
    18 draw col %[white]
    19 read *tmp3 processor1 ".nextBlock"
    20 draw image 40 137 *tmp3 32 0
 
    31 print :drawHeader:s
    32 print ""
    33 draw print 168 172 @topRight
-    * label *label17
-    * label *label16
-    * label *label8
    34 print "Materials"
    35 draw print 22 101 @bottomLeft
-    * label *label21
-    * label *label20
    36 print "Materials"
    37 draw print 23 101 @bottomLeft
-    * label *label23
-    * label *label22
-    * label *label19
    38 set :drawMaterials:col 0
    39 set :drawMaterials:y 85
    40 read :drawMaterials:count processor1 ".totalTargets"
 
    43 set *tmp48 2
    44 label *label25
    45 read :drawMaterials:target processor1 ".copperTarget"
-    * label *label75
    46 jump *label86 lessThanEq :drawMaterials:target 0
    47 read *tmp0 processor1 ".core"
    48 sensor *tmp52 *tmp0 @copper
 
    60 draw lineRect 22 85 :drawItem:barLength 10
    61 print :drawMaterials:target
    62 draw print :drawItem:textEnd 92 @right
-    * label *label76
-    * label *label77
    63 op add :drawText.6:x :drawItem:barLength 49
    64 print :drawMaterials:target
    65 draw print :drawText.6:x 92 @right
-    * label *label78
-    * label *label79
-    * label *label80
    66 set :drawMaterials:col 1
    67 jump *label81 lessThan 1 *tmp48
    68 set :drawMaterials:col 0
    69 op sub :drawMaterials:y 85 15
    70 label *label81
-    * label *label82
-    * label *label83
    71 op sub :drawMaterials:count :drawMaterials:count 1
    72 jump *label84 greaterThan :drawMaterials:count 0
    73 jump *label28 always
    74 label *label84
-    * label *label85
    75 label *label86
-    * label *label87
-    * label *label88
    76 read :drawMaterials:target processor1 ".leadTarget"
-    * label *label91
    77 jump *label102 lessThanEq :drawMaterials:target 0
    78 read *tmp0 processor1 ".core"
    79 sensor *tmp52 *tmp0 @lead
 
    97 op add *tmp71 :drawMaterials:y 7
    98 print :drawMaterials:target
    99 draw print :drawItem:textX *tmp71 @right
-    * label *label92
-    * label *label93
   100 op add :drawText.6:x :drawItem:textX 1
   101 print :drawMaterials:target
   102 draw print :drawText.6:x *tmp71 @right
-    * label *label94
-    * label *label95
-    * label *label96
   103 op add :drawMaterials:col :drawMaterials:col 1
   104 jump *label97 lessThan :drawMaterials:col *tmp48
   105 set :drawMaterials:col 0
   106 op sub :drawMaterials:y :drawMaterials:y 15
   107 label *label97
-    * label *label98
-    * label *label99
   108 op sub :drawMaterials:count :drawMaterials:count 1
   109 jump *label100 greaterThan :drawMaterials:count 0
   110 jump *label28 always
   111 label *label100
-    * label *label101
   112 label *label102
-    * label *label103
-    * label *label104
   113 read :drawMaterials:target processor1 ".graphiteTarget"
-    * label *label107
   114 jump *label118 lessThanEq :drawMaterials:target 0
   115 read *tmp0 processor1 ".core"
   116 sensor *tmp52 *tmp0 @graphite
 
   134 op add *tmp71 :drawMaterials:y 7
   135 print :drawMaterials:target
   136 draw print :drawItem:textX *tmp71 @right
-    * label *label108
-    * label *label109
   137 op add :drawText.6:x :drawItem:textX 1
   138 print :drawMaterials:target
   139 draw print :drawText.6:x *tmp71 @right
-    * label *label110
-    * label *label111
-    * label *label112
   140 op add :drawMaterials:col :drawMaterials:col 1
   141 jump *label113 lessThan :drawMaterials:col *tmp48
   142 set :drawMaterials:col 0
   143 op sub :drawMaterials:y :drawMaterials:y 15
   144 label *label113
-    * label *label114
-    * label *label115
   145 op sub :drawMaterials:count :drawMaterials:count 1
   146 jump *label116 greaterThan :drawMaterials:count 0
   147 jump *label28 always
   148 label *label116
-    * label *label117
   149 label *label118
-    * label *label119
-    * label *label120
   150 read :drawMaterials:target processor1 ".siliconTarget"
-    * label *label123
   151 jump *label134 lessThanEq :drawMaterials:target 0
   152 read *tmp0 processor1 ".core"
   153 sensor *tmp52 *tmp0 @silicon
 
   171 op add *tmp71 :drawMaterials:y 7
   172 print :drawMaterials:target
   173 draw print :drawItem:textX *tmp71 @right
-    * label *label124
-    * label *label125
   174 op add :drawText.6:x :drawItem:textX 1
   175 print :drawMaterials:target
   176 draw print :drawText.6:x *tmp71 @right
-    * label *label126
-    * label *label127
-    * label *label128
   177 op add :drawMaterials:col :drawMaterials:col 1
   178 jump *label129 lessThan :drawMaterials:col *tmp48
   179 set :drawMaterials:col 0
   180 op sub :drawMaterials:y :drawMaterials:y 15
   181 label *label129
-    * label *label130
-    * label *label131
   182 op sub :drawMaterials:count :drawMaterials:count 1
   183 jump *label132 greaterThan :drawMaterials:count 0
   184 jump *label28 always
   185 label *label132
-    * label *label133
   186 label *label134
-    * label *label135
-    * label *label136
   187 read :drawMaterials:target processor1 ".titaniumTarget"
-    * label *label139
   188 jump *label150 lessThanEq :drawMaterials:target 0
   189 read *tmp0 processor1 ".core"
   190 sensor *tmp52 *tmp0 @titanium
 
   208 op add *tmp71 :drawMaterials:y 7
   209 print :drawMaterials:target
   210 draw print :drawItem:textX *tmp71 @right
-    * label *label140
-    * label *label141
   211 op add :drawText.6:x :drawItem:textX 1
   212 print :drawMaterials:target
   213 draw print :drawText.6:x *tmp71 @right
-    * label *label142
-    * label *label143
-    * label *label144
   214 op add :drawMaterials:col :drawMaterials:col 1
   215 jump *label145 lessThan :drawMaterials:col *tmp48
   216 set :drawMaterials:col 0
   217 op sub :drawMaterials:y :drawMaterials:y 15
   218 label *label145
-    * label *label146
-    * label *label147
   219 op sub :drawMaterials:count :drawMaterials:count 1
   220 jump *label148 greaterThan :drawMaterials:count 0
   221 jump *label28 always
   222 label *label148
-    * label *label149
   223 label *label150
-    * label *label151
-    * label *label152
   224 read :drawMaterials:target processor1 ".metaglassTarget"
-    * label *label155
   225 jump *label166 lessThanEq :drawMaterials:target 0
   226 read *tmp0 processor1 ".core"
   227 sensor *tmp52 *tmp0 @metaglass
 
   245 op add *tmp71 :drawMaterials:y 7
   246 print :drawMaterials:target
   247 draw print :drawItem:textX *tmp71 @right
-    * label *label156
-    * label *label157
   248 op add :drawText.6:x :drawItem:textX 1
   249 print :drawMaterials:target
   250 draw print :drawText.6:x *tmp71 @right
-    * label *label158
-    * label *label159
-    * label *label160
-    * label *label161
-    * label *label162
-    * label *label163
-    * label *label164
-    * label *label165
   251 label *label166
-    * label *label167
-    * label *label168
   252 label *label28
-    * label *label18
   253 draw col %[white]
   254 print "Unit status"
   255 draw print 22 45 @bottomLeft
-    * label *label50
-    * label *label49
   256 print "Unit status"
   257 draw print 23 45 @bottomLeft
-    * label *label52
-    * label *label51
-    * label *label48
   258 read *tmp13 processor1 ".transportItem"
   259 jump *label53 notEqual *tmp13 null
   260 read *tmp12 processor1 ".transportTarget"
 
   266 draw lineRect 22 29 122 10
   267 print *tmp12
   268 draw print 170 36 @right
-    * label *label59
-    * label *label58
   269 print *tmp12
   270 draw print 171 36 @right
-    * label *label61
-    * label *label60
-    * label *label57
-    * label *label62
-    * label *label63
-    * label *label56
-    * label *label55
   271 jump *label54 always
   272 label *label53
   273 sensor :drawUnit:unitItem @unit @firstItem
 
   289 draw lineRect 22 29 122 10
   290 print *tmp12
   291 draw print 170 36 @right
-    * label *label68
-    * label *label67
   292 print *tmp12
   293 draw print 171 36 @right
-    * label *label70
-    * label *label69
-    * label *label66
-    * label *label71
-    * label *label72
-    * label *label65
-    * label *label64
   294 label *label54
-    * label *label47
   295 drawflush display1
-    * label *label7
   296 print "[gold]Building "
   297 read *tmp3 processor1 ".nextBlock"
   298 print *tmp3
 
   316 print *tmp129
   317 print "\n"
   318 printflush message1
-    * label *label73
-    * label *label5
   319 jump *label4 always
-    * label *label6
   320 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-5 instructions):
 
    69 op sub :drawMaterials:y 85 15
    70 label *label81
    71 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label84 greaterThan :drawMaterials:count 0
-    * jump *label28 always
+   72 jump *label28 lessThanEq :drawMaterials:count 0
    73 label *label84
    74 label *label86
    75 read :drawMaterials:target processor1 ".leadTarget"
 
   105 op sub :drawMaterials:y :drawMaterials:y 15
   106 label *label97
   107 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label100 greaterThan :drawMaterials:count 0
-    * jump *label28 always
+  108 jump *label28 lessThanEq :drawMaterials:count 0
   109 label *label100
   110 label *label102
   111 read :drawMaterials:target processor1 ".graphiteTarget"
 
   141 op sub :drawMaterials:y :drawMaterials:y 15
   142 label *label113
   143 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label116 greaterThan :drawMaterials:count 0
-    * jump *label28 always
+  144 jump *label28 lessThanEq :drawMaterials:count 0
   145 label *label116
   146 label *label118
   147 read :drawMaterials:target processor1 ".siliconTarget"
 
   177 op sub :drawMaterials:y :drawMaterials:y 15
   178 label *label129
   179 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label132 greaterThan :drawMaterials:count 0
-    * jump *label28 always
+  180 jump *label28 lessThanEq :drawMaterials:count 0
   181 label *label132
   182 label *label134
   183 read :drawMaterials:target processor1 ".titaniumTarget"
 
   213 op sub :drawMaterials:y :drawMaterials:y 15
   214 label *label145
   215 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label148 greaterThan :drawMaterials:count 0
-    * jump *label28 always
+  216 jump *label28 lessThanEq :drawMaterials:count 0
   217 label *label148
   218 label *label150
   219 read :drawMaterials:target processor1 ".metaglassTarget"

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
    70 label *label81
    71 op sub :drawMaterials:count :drawMaterials:count 1
    72 jump *label28 lessThanEq :drawMaterials:count 0
-    * label *label84
    73 label *label86
    74 read :drawMaterials:target processor1 ".leadTarget"
    75 jump *label102 lessThanEq :drawMaterials:target 0
 
   105 label *label97
   106 op sub :drawMaterials:count :drawMaterials:count 1
   107 jump *label28 lessThanEq :drawMaterials:count 0
-    * label *label100
   108 label *label102
   109 read :drawMaterials:target processor1 ".graphiteTarget"
   110 jump *label118 lessThanEq :drawMaterials:target 0
 
   140 label *label113
   141 op sub :drawMaterials:count :drawMaterials:count 1
   142 jump *label28 lessThanEq :drawMaterials:count 0
-    * label *label116
   143 label *label118
   144 read :drawMaterials:target processor1 ".siliconTarget"
   145 jump *label134 lessThanEq :drawMaterials:target 0
 
   175 label *label129
   176 op sub :drawMaterials:count :drawMaterials:count 1
   177 jump *label28 lessThanEq :drawMaterials:count 0
-    * label *label132
   178 label *label134
   179 read :drawMaterials:target processor1 ".titaniumTarget"
   180 jump *label150 lessThanEq :drawMaterials:target 0
 
   210 label *label145
   211 op sub :drawMaterials:count :drawMaterials:count 1
   212 jump *label28 lessThanEq :drawMaterials:count 0
-    * label *label148
   213 label *label150
   214 read :drawMaterials:target processor1 ".metaglassTarget"
   215 jump *label166 lessThanEq :drawMaterials:target 0

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-1 instructions):
 
   307 print "\n"
   308 printflush message1
   309 jump *label4 always
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-10 instructions):
 
    26 set *tmp45 "0"
    27 label *label15
    28 print :drawHeader:m
-    * print ":"
-    * print *tmp45
-    * print :drawHeader:s
-    * print ""
+   29 print ":{0}{0}"
+   30 format *tmp45
+   31 format :drawHeader:s
    32 draw print 168 172 @topRight
    33 print "Materials"
    34 draw print 22 101 @bottomLeft
 
   282 draw print 171 36 @right
   283 label *label54
   284 drawflush display1
-    * print "[gold]Building "
+  285 print "[gold]Building {0}\n==================================[]\n{0}\n{0}{0} ({0})\n{0}\n"
   286 read *tmp3 processor1 ".nextBlock"
-    * print *tmp3
-    * print "\n"
-    * print "==================================[]"
-    * print "\n"
+  287 format *tmp3
   288 read *tmp128 processor1 ".status1"
-    * print *tmp128
-    * print "\n"
+  289 format *tmp128
   290 read *tmp15 processor1 ".status2"
-    * print *tmp15
+  291 format *tmp15
   292 read *tmp16 processor1 ".item2"
-    * print *tmp16
-    * print " "
-    * print "("
+  293 format *tmp16
   294 read *tmp17 processor1 ".block2"
-    * print *tmp17
-    * print ")"
-    * print "\n"
+  295 format *tmp17
   296 read *tmp129 processor1 ".status3"
-    * print *tmp129
-    * print "\n"
+  297 format *tmp129
   298 printflush message1
   299 jump *label4 always

Final code before resolving virtual instructions:

    0:  jump *label172 always 0 0                                    Display.mnd: require "CoreBuilder.mnd" remote processor1;
    1:  draw triangle display1 message1 processor1 :drawHeader:m :dr ...
    2:  draw triangle :drawItem:barLength :drawItem:barX :drawItem:i ...
    3:  draw triangle :drawItem:textEnd :drawItem:textX :drawMateria ...
    4:  draw triangle :drawText.6:x :drawUnit:unitItem 0 0 0 0       ...
        label *label172                                              ...
        label *label0                                                ...
    5:  read *tmp38 processor1 "*signature"                          ...
    6:  jump *label0 notEqual *tmp38 "0:v1"                          ...
    7:  jump *label3 notEqual @unit null                             Display.mnd: while @unit == null do
        label *label74                                               ...
    8:  ubind @poly                                                  Display.mnd: ubind(@poly);
    9:  jump *label74 equal @unit null                               Display.mnd: while @unit == null do
        label *label3                                                ...
   10:  printflush null                                              Display.mnd: printflush(null);
   11:  drawflush null                                               Display.mnd: drawflush(null);
        label *label4                                                Display.mnd: while true do
   12:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
   13:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
   14:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
   15:  print "Building"                                             Display.mnd: print(text);
   16:  draw print 40 161 @bottom                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   17:  print "Building"                                             Display.mnd: print(text);
   18:  draw print 41 161 @bottom                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   19:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   20:  read *tmp3 processor1 ".nextBlock"                           Display.mnd: image(HEADER_X, HEADER_Y - 24, nextBlock, 32, 0);
   21:  draw image 40 137 *tmp3 32 0 0                               ...
   22:  op floor :drawHeader:t @second 0                             Display.mnd: var t = floor(@second);
   23:  op idiv :drawHeader:m :drawHeader:t 60                       Display.mnd: var m = t \ 60;
   24:  op mod :drawHeader:s :drawHeader:t 60                        Display.mnd: var s = t % 60;
   25:  set *tmp45 ""                                                Display.mnd: print(m, ":", s < 10 ? "0" : "", s);
   26:  jump *label15 greaterThanEq :drawHeader:s 10                 ...
   27:  set *tmp45 "0"                                               ...
        label *label15                                               ...
   28:  print :drawHeader:m                                          ...
   29:  print ":{0}{0}"                                              ...
   30:  format *tmp45                                                ...
   31:  format :drawHeader:s                                         ...
   32:  draw print 168 172 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   33:  print "Materials"                                            Display.mnd: print(text);
   34:  draw print 22 101 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   35:  print "Materials"                                            Display.mnd: print(text);
   36:  draw print 23 101 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   37:  set :drawMaterials:col 0                                     Display.mnd: var col = 0, y = 85;
   38:  set :drawMaterials:y 85                                      ...
   39:  read :drawMaterials:count processor1 ".totalTargets"         Display.mnd: var count = totalTargets;
   40:  set *tmp48 1                                                 Display.mnd: var columns = count > 2 ? 2 : 1;
   41:  jump *label25 lessThanEq :drawMaterials:count 2              ...
   42:  set *tmp48 2                                                 ...
        label *label25                                               ...
   43:  read :drawMaterials:target processor1 ".copperTarget"        Display.mnd: for var item, target in
   44:  jump *label86 lessThanEq :drawMaterials:target 0             Display.mnd: if target > 0 then
   45:  read *tmp0 processor1 ".core"                                Display.mnd: drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
   46:  sensor *tmp52 *tmp0 @copper                                  ...
   47:  op mul *tmp54 *tmp48 88                                      Display.mnd: var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
   48:  op sub :drawItem:barLength 210 *tmp54                        ...
   49:  op add :drawItem:textEnd 48 :drawItem:barLength              Display.mnd: var textEnd = 170 - BAR_LENGTH + barLength;
   50:  op mul *tmp57 :drawItem:barLength *tmp52                     Display.mnd: var length = min(barLength, barLength * current / target);
   51:  op div *tmp58 *tmp57 :drawMaterials:target                   ...
   52:  op min :drawItem:length :drawItem:barLength *tmp58           ...
   53:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   54:  draw image 11 90 @copper 16 0 0                              Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
   55:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
   56:  draw rect 22 85 :drawItem:length 10 0 0                      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
   57:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
   58:  draw lineRect 22 85 :drawItem:barLength 10 0 0               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
   59:  print :drawMaterials:target                                  Display.mnd: print(text);
   60:  draw print :drawItem:textEnd 92 @right                       Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   61:  op add :drawText.6:x :drawItem:barLength 49                  Display.mnd: drawText(x + 1, y, alignment, text);
   62:  print :drawMaterials:target                                  Display.mnd: print(text);
   63:  draw print :drawText.6:x 92 @right                           Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   64:  set :drawMaterials:col 1                                     Display.mnd: if ++col >= columns then
   65:  jump *label81 lessThan 1 *tmp48                              ...
   66:  set :drawMaterials:col 0                                     Display.mnd: col = 0;
   67:  op sub :drawMaterials:y 85 15                                Display.mnd: y -= ROW_HEIGHT;
        label *label81                                               Display.mnd: if ++col >= columns then
   68:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
   69:  jump *label28 lessThanEq :drawMaterials:count 0              ...
        label *label86                                               Display.mnd: if target > 0 then
   70:  read :drawMaterials:target processor1 ".leadTarget"          Display.mnd: for var item, target in
   71:  jump *label102 lessThanEq :drawMaterials:target 0            Display.mnd: if target > 0 then
   72:  read *tmp0 processor1 ".core"                                Display.mnd: drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
   73:  sensor *tmp52 *tmp0 @lead                                    ...
   74:  op mul *tmp54 *tmp48 88                                      Display.mnd: var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
   75:  op sub :drawItem:barLength 210 *tmp54                        ...
   76:  op add :drawItem:textEnd 48 :drawItem:barLength              Display.mnd: var textEnd = 170 - BAR_LENGTH + barLength;
   77:  op mul *tmp57 :drawItem:barLength *tmp52                     Display.mnd: var length = min(barLength, barLength * current / target);
   78:  op div *tmp58 *tmp57 :drawMaterials:target                   ...
   79:  op min :drawItem:length :drawItem:barLength *tmp58           ...
   80:  op mul *tmp61 :drawMaterials:col 88                          Display.mnd: var iconX = ICON_X + col * 176 / 2;
   81:  op add :drawItem:iconX 11 *tmp61                             ...
   82:  op add :drawItem:barX 22 *tmp61                              Display.mnd: var barX = BAR_X + col * 176 / 2;
   83:  op add :drawItem:textX :drawItem:textEnd *tmp61              Display.mnd: var textX = textEnd + col * 176 / 2;
   84:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   85:  op add *tmp69 :drawMaterials:y 5                             Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
   86:  draw image :drawItem:iconX *tmp69 @lead 16 0 0               ...
   87:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
   88:  draw rect :drawItem:barX :drawMaterials:y :drawItem:length 1 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
   89:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
   90:  draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barL Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
   91:  op add *tmp71 :drawMaterials:y 7                             Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, count);
   92:  print :drawMaterials:target                                  Display.mnd: print(text);
   93:  draw print :drawItem:textX *tmp71 @right                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   94:  op add :drawText.6:x :drawItem:textX 1                       Display.mnd: drawText(x + 1, y, alignment, text);
   95:  print :drawMaterials:target                                  Display.mnd: print(text);
   96:  draw print :drawText.6:x *tmp71 @right                       Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   97:  op add :drawMaterials:col :drawMaterials:col 1               Display.mnd: if ++col >= columns then
   98:  jump *label97 lessThan :drawMaterials:col *tmp48             ...
   99:  set :drawMaterials:col 0                                     Display.mnd: col = 0;
  100:  op sub :drawMaterials:y :drawMaterials:y 15                  Display.mnd: y -= ROW_HEIGHT;
        label *label97                                               Display.mnd: if ++col >= columns then
  101:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  102:  jump *label28 lessThanEq :drawMaterials:count 0              ...
        label *label102                                              Display.mnd: if target > 0 then
  103:  read :drawMaterials:target processor1 ".graphiteTarget"      Display.mnd: for var item, target in
  104:  jump *label118 lessThanEq :drawMaterials:target 0            Display.mnd: if target > 0 then
  105:  read *tmp0 processor1 ".core"                                Display.mnd: drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
  106:  sensor *tmp52 *tmp0 @graphite                                ...
  107:  op mul *tmp54 *tmp48 88                                      Display.mnd: var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  108:  op sub :drawItem:barLength 210 *tmp54                        ...
  109:  op add :drawItem:textEnd 48 :drawItem:barLength              Display.mnd: var textEnd = 170 - BAR_LENGTH + barLength;
  110:  op mul *tmp57 :drawItem:barLength *tmp52                     Display.mnd: var length = min(barLength, barLength * current / target);
  111:  op div *tmp58 *tmp57 :drawMaterials:target                   ...
  112:  op min :drawItem:length :drawItem:barLength *tmp58           ...
  113:  op mul *tmp61 :drawMaterials:col 88                          Display.mnd: var iconX = ICON_X + col * 176 / 2;
  114:  op add :drawItem:iconX 11 *tmp61                             ...
  115:  op add :drawItem:barX 22 *tmp61                              Display.mnd: var barX = BAR_X + col * 176 / 2;
  116:  op add :drawItem:textX :drawItem:textEnd *tmp61              Display.mnd: var textX = textEnd + col * 176 / 2;
  117:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  118:  op add *tmp69 :drawMaterials:y 5                             Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  119:  draw image :drawItem:iconX *tmp69 @graphite 16 0 0           ...
  120:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  121:  draw rect :drawItem:barX :drawMaterials:y :drawItem:length 1 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  122:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  123:  draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barL Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  124:  op add *tmp71 :drawMaterials:y 7                             Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, count);
  125:  print :drawMaterials:target                                  Display.mnd: print(text);
  126:  draw print :drawItem:textX *tmp71 @right                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  127:  op add :drawText.6:x :drawItem:textX 1                       Display.mnd: drawText(x + 1, y, alignment, text);
  128:  print :drawMaterials:target                                  Display.mnd: print(text);
  129:  draw print :drawText.6:x *tmp71 @right                       Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  130:  op add :drawMaterials:col :drawMaterials:col 1               Display.mnd: if ++col >= columns then
  131:  jump *label113 lessThan :drawMaterials:col *tmp48            ...
  132:  set :drawMaterials:col 0                                     Display.mnd: col = 0;
  133:  op sub :drawMaterials:y :drawMaterials:y 15                  Display.mnd: y -= ROW_HEIGHT;
        label *label113                                              Display.mnd: if ++col >= columns then
  134:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  135:  jump *label28 lessThanEq :drawMaterials:count 0              ...
        label *label118                                              Display.mnd: if target > 0 then
  136:  read :drawMaterials:target processor1 ".siliconTarget"       Display.mnd: for var item, target in
  137:  jump *label134 lessThanEq :drawMaterials:target 0            Display.mnd: if target > 0 then
  138:  read *tmp0 processor1 ".core"                                Display.mnd: drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
  139:  sensor *tmp52 *tmp0 @silicon                                 ...
  140:  op mul *tmp54 *tmp48 88                                      Display.mnd: var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  141:  op sub :drawItem:barLength 210 *tmp54                        ...
  142:  op add :drawItem:textEnd 48 :drawItem:barLength              Display.mnd: var textEnd = 170 - BAR_LENGTH + barLength;
  143:  op mul *tmp57 :drawItem:barLength *tmp52                     Display.mnd: var length = min(barLength, barLength * current / target);
  144:  op div *tmp58 *tmp57 :drawMaterials:target                   ...
  145:  op min :drawItem:length :drawItem:barLength *tmp58           ...
  146:  op mul *tmp61 :drawMaterials:col 88                          Display.mnd: var iconX = ICON_X + col * 176 / 2;
  147:  op add :drawItem:iconX 11 *tmp61                             ...
  148:  op add :drawItem:barX 22 *tmp61                              Display.mnd: var barX = BAR_X + col * 176 / 2;
  149:  op add :drawItem:textX :drawItem:textEnd *tmp61              Display.mnd: var textX = textEnd + col * 176 / 2;
  150:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  151:  op add *tmp69 :drawMaterials:y 5                             Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  152:  draw image :drawItem:iconX *tmp69 @silicon 16 0 0            ...
  153:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  154:  draw rect :drawItem:barX :drawMaterials:y :drawItem:length 1 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  155:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  156:  draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barL Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  157:  op add *tmp71 :drawMaterials:y 7                             Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, count);
  158:  print :drawMaterials:target                                  Display.mnd: print(text);
  159:  draw print :drawItem:textX *tmp71 @right                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  160:  op add :drawText.6:x :drawItem:textX 1                       Display.mnd: drawText(x + 1, y, alignment, text);
  161:  print :drawMaterials:target                                  Display.mnd: print(text);
  162:  draw print :drawText.6:x *tmp71 @right                       Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  163:  op add :drawMaterials:col :drawMaterials:col 1               Display.mnd: if ++col >= columns then
  164:  jump *label129 lessThan :drawMaterials:col *tmp48            ...
  165:  set :drawMaterials:col 0                                     Display.mnd: col = 0;
  166:  op sub :drawMaterials:y :drawMaterials:y 15                  Display.mnd: y -= ROW_HEIGHT;
        label *label129                                              Display.mnd: if ++col >= columns then
  167:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  168:  jump *label28 lessThanEq :drawMaterials:count 0              ...
        label *label134                                              Display.mnd: if target > 0 then
  169:  read :drawMaterials:target processor1 ".titaniumTarget"      Display.mnd: for var item, target in
  170:  jump *label150 lessThanEq :drawMaterials:target 0            Display.mnd: if target > 0 then
  171:  read *tmp0 processor1 ".core"                                Display.mnd: drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
  172:  sensor *tmp52 *tmp0 @titanium                                ...
  173:  op mul *tmp54 *tmp48 88                                      Display.mnd: var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  174:  op sub :drawItem:barLength 210 *tmp54                        ...
  175:  op add :drawItem:textEnd 48 :drawItem:barLength              Display.mnd: var textEnd = 170 - BAR_LENGTH + barLength;
  176:  op mul *tmp57 :drawItem:barLength *tmp52                     Display.mnd: var length = min(barLength, barLength * current / target);
  177:  op div *tmp58 *tmp57 :drawMaterials:target                   ...
  178:  op min :drawItem:length :drawItem:barLength *tmp58           ...
  179:  op mul *tmp61 :drawMaterials:col 88                          Display.mnd: var iconX = ICON_X + col * 176 / 2;
  180:  op add :drawItem:iconX 11 *tmp61                             ...
  181:  op add :drawItem:barX 22 *tmp61                              Display.mnd: var barX = BAR_X + col * 176 / 2;
  182:  op add :drawItem:textX :drawItem:textEnd *tmp61              Display.mnd: var textX = textEnd + col * 176 / 2;
  183:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  184:  op add *tmp69 :drawMaterials:y 5                             Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  185:  draw image :drawItem:iconX *tmp69 @titanium 16 0 0           ...
  186:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  187:  draw rect :drawItem:barX :drawMaterials:y :drawItem:length 1 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  188:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  189:  draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barL Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  190:  op add *tmp71 :drawMaterials:y 7                             Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, count);
  191:  print :drawMaterials:target                                  Display.mnd: print(text);
  192:  draw print :drawItem:textX *tmp71 @right                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  193:  op add :drawText.6:x :drawItem:textX 1                       Display.mnd: drawText(x + 1, y, alignment, text);
  194:  print :drawMaterials:target                                  Display.mnd: print(text);
  195:  draw print :drawText.6:x *tmp71 @right                       Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  196:  op add :drawMaterials:col :drawMaterials:col 1               Display.mnd: if ++col >= columns then
  197:  jump *label145 lessThan :drawMaterials:col *tmp48            ...
  198:  set :drawMaterials:col 0                                     Display.mnd: col = 0;
  199:  op sub :drawMaterials:y :drawMaterials:y 15                  Display.mnd: y -= ROW_HEIGHT;
        label *label145                                              Display.mnd: if ++col >= columns then
  200:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  201:  jump *label28 lessThanEq :drawMaterials:count 0              ...
        label *label150                                              Display.mnd: if target > 0 then
  202:  read :drawMaterials:target processor1 ".metaglassTarget"     Display.mnd: for var item, target in
  203:  jump *label166 lessThanEq :drawMaterials:target 0            Display.mnd: if target > 0 then
  204:  read *tmp0 processor1 ".core"                                Display.mnd: drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
  205:  sensor *tmp52 *tmp0 @metaglass                               ...
  206:  op mul *tmp54 *tmp48 88                                      Display.mnd: var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  207:  op sub :drawItem:barLength 210 *tmp54                        ...
  208:  op add :drawItem:textEnd 48 :drawItem:barLength              Display.mnd: var textEnd = 170 - BAR_LENGTH + barLength;
  209:  op mul *tmp57 :drawItem:barLength *tmp52                     Display.mnd: var length = min(barLength, barLength * current / target);
  210:  op div *tmp58 *tmp57 :drawMaterials:target                   ...
  211:  op min :drawItem:length :drawItem:barLength *tmp58           ...
  212:  op mul *tmp61 :drawMaterials:col 88                          Display.mnd: var iconX = ICON_X + col * 176 / 2;
  213:  op add :drawItem:iconX 11 *tmp61                             ...
  214:  op add :drawItem:barX 22 *tmp61                              Display.mnd: var barX = BAR_X + col * 176 / 2;
  215:  op add :drawItem:textX :drawItem:textEnd *tmp61              Display.mnd: var textX = textEnd + col * 176 / 2;
  216:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  217:  op add *tmp69 :drawMaterials:y 5                             Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  218:  draw image :drawItem:iconX *tmp69 @metaglass 16 0 0          ...
  219:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  220:  draw rect :drawItem:barX :drawMaterials:y :drawItem:length 1 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  221:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  222:  draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barL Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  223:  op add *tmp71 :drawMaterials:y 7                             Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, count);
  224:  print :drawMaterials:target                                  Display.mnd: print(text);
  225:  draw print :drawItem:textX *tmp71 @right                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  226:  op add :drawText.6:x :drawItem:textX 1                       Display.mnd: drawText(x + 1, y, alignment, text);
  227:  print :drawMaterials:target                                  Display.mnd: print(text);
  228:  draw print :drawText.6:x *tmp71 @right                       Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
        label *label166                                              Display.mnd: if target > 0 then
        label *label28                                               Display.mnd: for var item, target in
  229:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  230:  print "Unit status"                                          Display.mnd: print(text);
  231:  draw print 22 45 @bottomLeft                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  232:  print "Unit status"                                          Display.mnd: print(text);
  233:  draw print 23 45 @bottomLeft                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  234:  read *tmp13 processor1 ".transportItem"                      Display.mnd: if transportItem == null then
  235:  jump *label53 notEqual *tmp13 null                           ...
  236:  read *tmp12 processor1 ".transportTarget"                    Display.mnd: drawItem(ref col, ref y, 1, item, items, transportTarget, transportTarget);
  237:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  238:  draw image 11 34 @poly 16 0 0                                Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  239:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  240:  draw rect 22 29 0 10 0 0                                     Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  241:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  242:  draw lineRect 22 29 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  243:  print *tmp12                                                 Display.mnd: print(text);
  244:  draw print 170 36 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  245:  print *tmp12                                                 Display.mnd: print(text);
  246:  draw print 171 36 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  247:  jump *label54 always 0 0                                     Display.mnd: if transportItem == null then
        label *label53                                               ...
  248:  sensor :drawUnit:unitItem @unit @firstItem                   Display.mnd: var unitItem = @unit.@firstItem;
  249:  sensor *tmp103 @unit @totalItems                             Display.mnd: drawUnit(transportItem, @unit.@totalItems * (unitItem == transportItem), ref y);
  250:  read *tmp13 processor1 ".transportItem"                      ...
  251:  op equal *tmp104 :drawUnit:unitItem *tmp13                   ...
  252:  op mul *tmp105 *tmp103 *tmp104                               ...
  253:  read *tmp13 processor1 ".transportItem"                      ...
  254:  read :drawItem.2:target processor1 ".transportTarget"        Display.mnd: drawItem(ref col, ref y, 1, item, items, transportTarget, transportTarget);
  255:  read *tmp12 processor1 ".transportTarget"                    ...
  256:  op mul *tmp110 122 *tmp105                                   Display.mnd: var length = min(barLength, barLength * current / target);
  257:  op div *tmp111 *tmp110 :drawItem.2:target                    ...
  258:  op min :drawItem.2:length 122 *tmp111                        ...
  259:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  260:  draw image 11 34 *tmp13 16 0 0                               Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  261:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  262:  draw rect 22 29 :drawItem.2:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  263:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  264:  draw lineRect 22 29 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  265:  print *tmp12                                                 Display.mnd: print(text);
  266:  draw print 170 36 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  267:  print *tmp12                                                 Display.mnd: print(text);
  268:  draw print 171 36 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
        label *label54                                               Display.mnd: if transportItem == null then
  269:  drawflush display1                                           Display.mnd: drawflush(display1);
  270:  print "[gold]Building {0}\n================================= Display.mnd: println($"[gold]Building $nextBlock");
  271:  read *tmp3 processor1 ".nextBlock"                           ...
  272:  format *tmp3                                                 ...
  273:  read *tmp128 processor1 ".status1"                           Display.mnd: println(status1);
  274:  format *tmp128                                               ...
  275:  read *tmp15 processor1 ".status2"                            Display.mnd: println($"$status2$item2 ($block2)");
  276:  format *tmp15                                                ...
  277:  read *tmp16 processor1 ".item2"                              ...
  278:  format *tmp16                                                ...
  279:  read *tmp17 processor1 ".block2"                             ...
  280:  format *tmp17                                                ...
  281:  read *tmp129 processor1 ".status3"                           Display.mnd: println(status3);
  282:  format *tmp129                                               ...
  283:  printflush message1                                          Display.mnd: printflush(message1);
  284:  jump *label4 always 0 0                                      Display.mnd: while true do


Performance: parsed in 475 ms, compiled in 362 ms, optimized in 438 ms, run in 17 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: success.

Program output (2 steps):
The program didn't generate any output.
Execution exception at instruction 5: read *tmp38 processor1 "*signature":
Variable 'processor1' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
