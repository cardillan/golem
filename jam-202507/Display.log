   420 instructions before optimizations.
    34 instructions eliminated by Temp Variables Elimination (2 iterations).
    14 instructions eliminated by Dead Code Elimination (5 iterations).
     2 instructions eliminated by Jump Normalization (5 iterations).
    11 instructions eliminated by Jump Optimization (5 iterations).
    12 instructions eliminated by Single Step Elimination (3 passes, 9 iterations).
     2 instructions modified by Expression Optimization (3 iterations).
     2 instructions modified by If Expression Optimization (3 iterations).
   202 instructions eliminated by Data Flow Optimization (3 passes, 15 iterations).
     1 instructions modified by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
   153 instructions added by Loop Unrolling (4 iterations).
     1 loops unrolled by Loop Unrolling.
     5 instructions eliminated by Jump Straightening (5 iterations).
    10 instructions eliminated by Print Merging.
   283 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 826):
  * Unroll iteration loop at Display.mnd:75:5                    size  +169, benefit      725.0, efficiency      4.290 (+139 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-12 instructions):
 
    14 write false processor1 ":buildCore*finished"
    15 write 1 processor1 "@counter"
    16 set .started true
-    * set *tmp41 true
    17 jump *label6 always
    18 label *label5
-    * set *tmp41 null
    19 label *label6
    20 control enabled switch1 false
    21 label *label7
 
   230 jump *label46 equal *tmp76 false
   231 set :drawMaterials:col 0
   232 op sub :drawMaterials:y :drawMaterials:y 15
-    * set *tmp77 :drawMaterials:y
   233 jump *label47 always
   234 label *label46
-    * set *tmp77 null
   235 label *label47
   236 label *label40
   237 op sub :drawMaterials:count :drawMaterials:count 1
 
   243 label *label48
   244 set *tmp79 null
   245 label *label49
-    * set *tmp54 *tmp79
   246 jump *label39 always
   247 label *label38
-    * set *tmp54 null
   248 label *label39
   249 label *label30
   250 multijump *tmp52 0 0 (m:marker0)
 
   358 jump *label65 equal *tmp103 false
   359 set :drawUnit.1:col 0
   360 op sub :drawUnit:y :drawUnit:y 15
-    * set *tmp104 :drawUnit:y
   361 jump *label66 always
   362 label *label65
-    * set *tmp104 null
   363 label *label66
   364 label *label59
   365 label *label58
-    * set *tmp82 null
   366 jump *label57 always
   367 label *label56
   368 sensor *tmp105 @unit @totalItems
 
   441 jump *label74 equal *tmp126 false
   442 set :drawUnit.2:col 0
   443 op sub :drawUnit:y :drawUnit:y 15
-    * set *tmp127 :drawUnit:y
   444 jump *label75 always
   445 label *label74
-    * set *tmp127 null
   446 label *label75
   447 label *label68
   448 label *label67
-    * set *tmp82 null
   449 label *label57
   450 label *label50
   451 drawflush display1

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-2 instructions):
 
   238 op lessThanEq *tmp78 :drawMaterials:count 0
   239 jump *label48 equal *tmp78 false
   240 jump *label31 always
-    * set *tmp79 null
   241 jump *label49 always
   242 label *label48
-    * set *tmp79 null
   243 label *label49
   244 jump *label39 always
   245 label *label38

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-34 instructions):
 
    37 draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
    38 label *label14
    39 label *label13
-    * op add *tmp43 :drawBold:x 1
-    * set :drawText.1:x *tmp43
+   40 op add :drawText.1:x :drawBold:x 1
    41 set :drawText.1:y :drawBold:y
    42 set :drawText.1:alignment :drawBold:alignment
    43 set :drawText.1:text :drawBold:text
 
    52 draw col %[white]
    53 read *tmp3 processor1 ".nextBlock"
    54 draw image 40 137 *tmp3 32 0
-    * op floor *tmp44 @second
-    * set :drawHeader:t *tmp44
-    * op idiv *tmp45 :drawHeader:t 60
-    * set :drawHeader:m *tmp45
-    * op mod *tmp46 :drawHeader:t 60
-    * set :drawHeader:s *tmp46
+   55 op floor :drawHeader:t @second
+   56 op idiv :drawHeader:m :drawHeader:t 60
+   57 op mod :drawHeader:s :drawHeader:t 60
    58 op lessThan *tmp47 :drawHeader:s 10
    59 jump *label17 equal *tmp47 false
    60 set *tmp48 "0"
 
    93 draw print :drawPrint.3:x :drawPrint.3:y :drawPrint.3:alignment
    94 label *label24
    95 label *label23
-    * op add *tmp49 :drawBold.1:x 1
-    * set :drawText.4:x *tmp49
+   96 op add :drawText.4:x :drawBold.1:x 1
    97 set :drawText.4:y :drawBold.1:y
    98 set :drawText.4:alignment :drawBold.1:alignment
    99 set :drawText.4:text :drawBold.1:text
 
   107 label *label22
   108 set :drawMaterials:col 0
   109 set :drawMaterials:y 85
-    * read *tmp10 processor1 ".totalTargets"
-    * set :drawMaterials:count *tmp10
+  110 read :drawMaterials:count processor1 ".totalTargets"
   111 op greaterThan *tmp50 :drawMaterials:count 2
   112 jump *label27 equal *tmp50 false
   113 set *tmp51 2
 
   117 label *label28
   118 set :drawMaterials:columns *tmp51
   119 set :drawMaterials:item @copper
-    * read *tmp4 processor1 ".copperTarget"
-    * set :drawMaterials:target *tmp4
+  120 read :drawMaterials:target processor1 ".copperTarget"
   121 setaddr *tmp52 *label32
   122 jump *label29 always
   123 multilabel *label32 (m:marker0)
   124 set :drawMaterials:item @lead
-    * read *tmp5 processor1 ".leadTarget"
-    * set :drawMaterials:target *tmp5
+  125 read :drawMaterials:target processor1 ".leadTarget"
   126 setaddr *tmp52 *label33
   127 jump *label29 always
   128 multilabel *label33 (m:marker0)
   129 set :drawMaterials:item @graphite
-    * read *tmp6 processor1 ".graphiteTarget"
-    * set :drawMaterials:target *tmp6
+  130 read :drawMaterials:target processor1 ".graphiteTarget"
   131 setaddr *tmp52 *label34
   132 jump *label29 always
   133 multilabel *label34 (m:marker0)
   134 set :drawMaterials:item @silicon
-    * read *tmp7 processor1 ".siliconTarget"
-    * set :drawMaterials:target *tmp7
+  135 read :drawMaterials:target processor1 ".siliconTarget"
   136 setaddr *tmp52 *label35
   137 jump *label29 always
   138 multilabel *label35 (m:marker0)
   139 set :drawMaterials:item @titanium
-    * read *tmp8 processor1 ".titaniumTarget"
-    * set :drawMaterials:target *tmp8
+  140 read :drawMaterials:target processor1 ".titaniumTarget"
   141 setaddr *tmp52 *label36
   142 jump *label29 always
   143 multilabel *label36 (m:marker0)
   144 set :drawMaterials:item @metaglass
-    * read *tmp9 processor1 ".metaglassTarget"
-    * set :drawMaterials:target *tmp9
+  145 read :drawMaterials:target processor1 ".metaglassTarget"
   146 setaddr *tmp52 *label37
   147 label *label29
   148 op greaterThan *tmp53 :drawMaterials:target 0
 
   156 set :drawItem:count :drawMaterials:target
   157 op mul *tmp56 :drawItem:columns 176
   158 op div *tmp57 *tmp56 2
-    * op sub *tmp58 210 *tmp57
-    * set :drawItem:barLength *tmp58
-    * op add *tmp59 48 :drawItem:barLength
-    * set :drawItem:textEnd *tmp59
+  159 op sub :drawItem:barLength 210 *tmp57
+  160 op add :drawItem:textEnd 48 :drawItem:barLength
   161 op mul *tmp60 :drawItem:barLength :drawItem:current
   162 op div *tmp61 *tmp60 :drawItem:target
-    * op min *tmp62 :drawItem:barLength *tmp61
-    * set :drawItem:length *tmp62
+  163 op min :drawItem:length :drawItem:barLength *tmp61
   164 op mul *tmp63 :drawMaterials:col 176
   165 op div *tmp64 *tmp63 2
-    * op add *tmp65 11 *tmp64
-    * set :drawItem:iconX *tmp65
+  166 op add :drawItem:iconX 11 *tmp64
   167 op mul *tmp66 :drawMaterials:col 176
   168 op div *tmp67 *tmp66 2
-    * op add *tmp68 22 *tmp67
-    * set :drawItem:barX *tmp68
+  169 op add :drawItem:barX 22 *tmp67
   170 op mul *tmp69 :drawMaterials:col 176
   171 op div *tmp70 *tmp69 2
-    * op add *tmp71 :drawItem:textEnd *tmp70
-    * set :drawItem:textX *tmp71
+  172 op add :drawItem:textX :drawItem:textEnd *tmp70
   173 draw col %[white]
   174 op add *tmp72 :drawMaterials:y 5
   175 draw image :drawItem:iconX *tmp72 :drawItem:item 16 0
 
   194 draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
   195 label *label43
   196 label *label42
-    * op add *tmp75 :drawBold.2:x 1
-    * set :drawText.6:x *tmp75
+  197 op add :drawText.6:x :drawBold.2:x 1
   198 set :drawText.6:y :drawBold.2:y
   199 set :drawText.6:alignment :drawBold.2:alignment
   200 set :drawText.6:text :drawBold.2:text
 
   246 draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
   247 label *label53
   248 label *label52
-    * op add *tmp80 :drawBold.3:x 1
-    * set :drawText.8:x *tmp80
+  249 op add :drawText.8:x :drawBold.3:x 1
   250 set :drawText.8:y :drawBold.3:y
   251 set :drawText.8:alignment :drawBold.3:alignment
   252 set :drawText.8:text :drawBold.3:text
 
   274 set :drawItem.1:count *tmp12
   275 op mul *tmp83 :drawItem.1:columns 176
   276 op div *tmp84 *tmp83 2
-    * op sub *tmp85 210 *tmp84
-    * set :drawItem.1:barLength *tmp85
-    * op add *tmp86 48 :drawItem.1:barLength
-    * set :drawItem.1:textEnd *tmp86
+  277 op sub :drawItem.1:barLength 210 *tmp84
+  278 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
   279 op mul *tmp87 :drawItem.1:barLength :drawItem.1:current
   280 op div *tmp88 *tmp87 :drawItem.1:target
-    * op min *tmp89 :drawItem.1:barLength *tmp88
-    * set :drawItem.1:length *tmp89
+  281 op min :drawItem.1:length :drawItem.1:barLength *tmp88
   282 op mul *tmp90 :drawUnit.1:col 176
   283 op div *tmp91 *tmp90 2
-    * op add *tmp92 11 *tmp91
-    * set :drawItem.1:iconX *tmp92
+  284 op add :drawItem.1:iconX 11 *tmp91
   285 op mul *tmp93 :drawUnit.1:col 176
   286 op div *tmp94 *tmp93 2
-    * op add *tmp95 22 *tmp94
-    * set :drawItem.1:barX *tmp95
+  287 op add :drawItem.1:barX 22 *tmp94
   288 op mul *tmp96 :drawUnit.1:col 176
   289 op div *tmp97 *tmp96 2
-    * op add *tmp98 :drawItem.1:textEnd *tmp97
-    * set :drawItem.1:textX *tmp98
+  290 op add :drawItem.1:textX :drawItem.1:textEnd *tmp97
   291 draw col %[white]
   292 op add *tmp99 :drawUnit:y 5
   293 draw image :drawItem.1:iconX *tmp99 :drawItem.1:item 16 0
 
   312 draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
   313 label *label62
   314 label *label61
-    * op add *tmp102 :drawBold.4:x 1
-    * set :drawText.10:x *tmp102
+  315 op add :drawText.10:x :drawBold.4:x 1
   316 set :drawText.10:y :drawBold.4:y
   317 set :drawText.10:alignment :drawBold.4:alignment
   318 set :drawText.10:text :drawBold.4:text
 
   350 set :drawItem.2:count *tmp12
   351 op mul *tmp106 :drawItem.2:columns 176
   352 op div *tmp107 *tmp106 2
-    * op sub *tmp108 210 *tmp107
-    * set :drawItem.2:barLength *tmp108
-    * op add *tmp109 48 :drawItem.2:barLength
-    * set :drawItem.2:textEnd *tmp109
+  353 op sub :drawItem.2:barLength 210 *tmp107
+  354 op add :drawItem.2:textEnd 48 :drawItem.2:barLength
   355 op mul *tmp110 :drawItem.2:barLength :drawItem.2:current
   356 op div *tmp111 *tmp110 :drawItem.2:target
-    * op min *tmp112 :drawItem.2:barLength *tmp111
-    * set :drawItem.2:length *tmp112
+  357 op min :drawItem.2:length :drawItem.2:barLength *tmp111
   358 op mul *tmp113 :drawUnit.2:col 176
   359 op div *tmp114 *tmp113 2
-    * op add *tmp115 11 *tmp114
-    * set :drawItem.2:iconX *tmp115
+  360 op add :drawItem.2:iconX 11 *tmp114
   361 op mul *tmp116 :drawUnit.2:col 176
   362 op div *tmp117 *tmp116 2
-    * op add *tmp118 22 *tmp117
-    * set :drawItem.2:barX *tmp118
+  363 op add :drawItem.2:barX 22 *tmp117
   364 op mul *tmp119 :drawUnit.2:col 176
   365 op div *tmp120 *tmp119 2
-    * op add *tmp121 :drawItem.2:textEnd *tmp120
-    * set :drawItem.2:textX *tmp121
+  366 op add :drawItem.2:textX :drawItem.2:textEnd *tmp120
   367 draw col %[white]
   368 op add *tmp122 :drawUnit:y 5
   369 draw image :drawItem.2:iconX *tmp122 :drawItem.2:item 16 0
 
   388 draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
   389 label *label71
   390 label *label70
-    * op add *tmp125 :drawBold.5:x 1
-    * set :drawText.12:x *tmp125
+  391 op add :drawText.12:x :drawBold.5:x 1
   392 set :drawText.12:y :drawBold.5:y
   393 set :drawText.12:alignment :drawBold.5:alignment
   394 set :drawText.12:text :drawBold.5:text

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-11 instructions):
 
     1 read *tmp38 processor1 "*signature"
     2 jump *label1 notEqual *tmp38 "a3ea14ee033c13eb:v1"
     3 label *label2
-    * op equal *tmp39 @unit null
-    * jump *label4 equal *tmp39 false
+    4 jump *label4 notEqual @unit null
     5 ubind @poly
     6 label *label3
     7 jump *label2 always
     8 label *label4
     9 printflush null
    10 drawflush null
-    * op equal *tmp40 .started null
-    * jump *label5 equal *tmp40 false
+   11 jump *label5 notEqual .started null
    12 write false processor1 ":buildCore*finished"
    13 write 1 processor1 "@counter"
    14 set .started true
 
    53 op floor :drawHeader:t @second
    54 op idiv :drawHeader:m :drawHeader:t 60
    55 op mod :drawHeader:s :drawHeader:t 60
-    * op lessThan *tmp47 :drawHeader:s 10
-    * jump *label17 equal *tmp47 false
+   56 jump *label17 greaterThanEq :drawHeader:s 10
    57 set *tmp48 "0"
    58 jump *label18 always
    59 label *label17
 
   105 set :drawMaterials:col 0
   106 set :drawMaterials:y 85
   107 read :drawMaterials:count processor1 ".totalTargets"
-    * op greaterThan *tmp50 :drawMaterials:count 2
-    * jump *label27 equal *tmp50 false
+  108 jump *label27 lessThanEq :drawMaterials:count 2
   109 set *tmp51 2
   110 jump *label28 always
   111 label *label27
 
   141 read :drawMaterials:target processor1 ".metaglassTarget"
   142 setaddr *tmp52 *label37
   143 label *label29
-    * op greaterThan *tmp53 :drawMaterials:target 0
-    * jump *label38 equal *tmp53 false
+  144 jump *label38 lessThanEq :drawMaterials:target 0
   145 read *tmp0 processor1 ".core"
   146 sensor *tmp55 *tmp0 :drawMaterials:item
   147 set :drawItem:columns :drawMaterials:columns
 
   202 label *label44
   203 label *label41
   204 op add :drawMaterials:col :drawMaterials:col 1
-    * op greaterThanEq *tmp76 :drawMaterials:col :drawItem:columns
-    * jump *label46 equal *tmp76 false
+  205 jump *label46 lessThan :drawMaterials:col :drawItem:columns
   206 set :drawMaterials:col 0
   207 op sub :drawMaterials:y :drawMaterials:y 15
   208 jump *label47 always
 
   210 label *label47
   211 label *label40
   212 op sub :drawMaterials:count :drawMaterials:count 1
-    * op lessThanEq *tmp78 :drawMaterials:count 0
-    * jump *label48 equal *tmp78 false
+  213 jump *label48 greaterThan :drawMaterials:count 0
   214 jump *label31 always
   215 jump *label49 always
   216 label *label48
 
   253 label *label51
   254 set :drawUnit:y 29
   255 read *tmp13 processor1 ".transportItem"
-    * op equal *tmp81 *tmp13 null
-    * jump *label56 equal *tmp81 false
+  256 jump *label56 notEqual *tmp13 null
   257 set :drawUnit.1:item @poly
   258 set :drawUnit.1:items 0
   259 set :drawUnit.1:col 0
 
   317 label *label63
   318 label *label60
   319 op add :drawUnit.1:col :drawUnit.1:col 1
-    * op greaterThanEq *tmp103 :drawUnit.1:col :drawItem.1:columns
-    * jump *label65 equal *tmp103 false
+  320 jump *label65 lessThan :drawUnit.1:col :drawItem.1:columns
   321 set :drawUnit.1:col 0
   322 op sub :drawUnit:y :drawUnit:y 15
   323 jump *label66 always
 
   392 label *label72
   393 label *label69
   394 op add :drawUnit.2:col :drawUnit.2:col 1
-    * op greaterThanEq *tmp126 :drawUnit.2:col :drawItem.2:columns
-    * jump *label74 equal *tmp126 false
+  395 jump *label74 lessThan :drawUnit.2:col :drawItem.2:columns
   396 set :drawUnit.2:col 0
   397 op sub :drawUnit:y :drawUnit:y 15
   398 jump *label75 always
 
   430 label *label76
   431 label *label8
   432 sensor *tmp130 switch1 @enabled
-    * op equal *tmp131 *tmp130 false
-    * jump *label7 notEqual *tmp131 false
+  433 jump *label7 equal *tmp130 false
   434 label *label9
   435 set .started null
   436 end

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-6 instructions):
 
    12 write false processor1 ":buildCore*finished"
    13 write 1 processor1 "@counter"
    14 set .started true
-    * jump *label6 always
    15 label *label5
    16 label *label6
    17 control enabled switch1 false
 
   204 jump *label46 lessThan :drawMaterials:col :drawItem:columns
   205 set :drawMaterials:col 0
   206 op sub :drawMaterials:y :drawMaterials:y 15
-    * jump *label47 always
   207 label *label46
   208 label *label47
   209 label *label40
   210 op sub :drawMaterials:count :drawMaterials:count 1
   211 jump *label48 greaterThan :drawMaterials:count 0
   212 jump *label31 always
-    * jump *label49 always
   213 label *label48
   214 label *label49
-    * jump *label39 always
   215 label *label38
   216 label *label39
   217 label *label30
 
   316 jump *label65 lessThan :drawUnit.1:col :drawItem.1:columns
   317 set :drawUnit.1:col 0
   318 op sub :drawUnit:y :drawUnit:y 15
-    * jump *label66 always
   319 label *label65
   320 label *label66
   321 label *label59
 
   390 jump *label74 lessThan :drawUnit.2:col :drawItem.2:columns
   391 set :drawUnit.2:col 0
   392 op sub :drawUnit:y :drawUnit:y 15
-    * jump *label75 always
   393 label *label74
   394 label *label75
   395 label *label68

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
    23 set :drawBold:y 161
    24 set :drawBold:alignment @bottom
    25 set :drawBold:text "Building"
-    * set :drawText:x :drawBold:x
-    * set :drawText:y :drawBold:y
-    * set :drawText:alignment :drawBold:alignment
-    * set :drawText:text :drawBold:text
-    * print :drawText:text
-    * set :drawPrint:x :drawText:x
-    * set :drawPrint:y :drawText:y
-    * set :drawPrint:alignment :drawText:alignment
-    * draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
+   26 set :drawText:x 40
+   27 set :drawText:y 161
+   28 set :drawText:alignment @bottom
+   29 set :drawText:text "Building"
+   30 print :drawBold:text
+   31 set :drawPrint:x :drawBold:x
+   32 set :drawPrint:y :drawBold:y
+   33 set :drawPrint:alignment :drawBold:alignment
+   34 draw print :drawText:x :drawText:y :drawText:alignment
    35 label *label14
    36 label *label13
-    * op add :drawText.1:x :drawBold:x 1
-    * set :drawText.1:y :drawBold:y
-    * set :drawText.1:alignment :drawBold:alignment
-    * set :drawText.1:text :drawBold:text
-    * print :drawText.1:text
-    * set :drawPrint.1:x :drawText.1:x
-    * set :drawPrint.1:y :drawText.1:y
-    * set :drawPrint.1:alignment :drawText.1:alignment
-    * draw print :drawPrint.1:x :drawPrint.1:y :drawPrint.1:alignment
+   37 op add :drawText.1:x 40 1
+   38 set :drawText.1:y 161
+   39 set :drawText.1:alignment @bottom
+   40 set :drawText.1:text "Building"
+   41 print :drawBold:text
+   42 set :drawPrint.1:x 41
+   43 set :drawPrint.1:y :drawBold:y
+   44 set :drawPrint.1:alignment :drawBold:alignment
+   45 draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
    46 label *label16
    47 label *label15
    48 label *label12
 
    66 set :drawText.2:y 172
    67 set :drawText.2:alignment @topRight
    68 set :drawText.2:text ""
-    * print :drawText.2:text
-    * set :drawPrint.2:x :drawText.2:x
-    * set :drawPrint.2:y :drawText.2:y
-    * set :drawPrint.2:alignment :drawText.2:alignment
-    * draw print :drawPrint.2:x :drawPrint.2:y :drawPrint.2:alignment
+   69 print ""
+   70 set :drawPrint.2:x 168
+   71 set :drawPrint.2:y 172
+   72 set :drawPrint.2:alignment @topRight
+   73 draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
    74 label *label20
    75 label *label19
    76 label *label11
 
    78 set :drawBold.1:y 101
    79 set :drawBold.1:alignment @bottomLeft
    80 set :drawBold.1:text "Materials"
-    * set :drawText.3:x :drawBold.1:x
-    * set :drawText.3:y :drawBold.1:y
-    * set :drawText.3:alignment :drawBold.1:alignment
-    * set :drawText.3:text :drawBold.1:text
-    * print :drawText.3:text
-    * set :drawPrint.3:x :drawText.3:x
-    * set :drawPrint.3:y :drawText.3:y
-    * set :drawPrint.3:alignment :drawText.3:alignment
-    * draw print :drawPrint.3:x :drawPrint.3:y :drawPrint.3:alignment
+   81 set :drawText.3:x 22
+   82 set :drawText.3:y 101
+   83 set :drawText.3:alignment @bottomLeft
+   84 set :drawText.3:text "Materials"
+   85 print :drawBold.1:text
+   86 set :drawPrint.3:x :drawBold.1:x
+   87 set :drawPrint.3:y :drawBold.1:y
+   88 set :drawPrint.3:alignment :drawBold.1:alignment
+   89 draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
    90 label *label24
    91 label *label23
-    * op add :drawText.4:x :drawBold.1:x 1
-    * set :drawText.4:y :drawBold.1:y
-    * set :drawText.4:alignment :drawBold.1:alignment
-    * set :drawText.4:text :drawBold.1:text
-    * print :drawText.4:text
-    * set :drawPrint.4:x :drawText.4:x
-    * set :drawPrint.4:y :drawText.4:y
-    * set :drawPrint.4:alignment :drawText.4:alignment
-    * draw print :drawPrint.4:x :drawPrint.4:y :drawPrint.4:alignment
+   92 op add :drawText.4:x 22 1
+   93 set :drawText.4:y 101
+   94 set :drawText.4:alignment @bottomLeft
+   95 set :drawText.4:text "Materials"
+   96 print :drawBold.1:text
+   97 set :drawPrint.4:x 23
+   98 set :drawPrint.4:y :drawBold.1:y
+   99 set :drawPrint.4:alignment :drawBold.1:alignment
+  100 draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
   101 label *label26
   102 label *label25
   103 label *label22
 
   143 jump *label38 lessThanEq :drawMaterials:target 0
   144 read *tmp0 processor1 ".core"
   145 sensor *tmp55 *tmp0 :drawMaterials:item
-    * set :drawItem:columns :drawMaterials:columns
+  146 set :drawItem:columns *tmp51
   147 set :drawItem:item :drawMaterials:item
   148 set :drawItem:current *tmp55
   149 set :drawItem:target :drawMaterials:target
   150 set :drawItem:count :drawMaterials:target
-    * op mul *tmp56 :drawItem:columns 176
-    * op div *tmp57 *tmp56 2
+  151 op mul *tmp56 :drawMaterials:columns 176
+  152 op mul *tmp57 :drawItem:columns 88
   153 op sub :drawItem:barLength 210 *tmp57
   154 op add :drawItem:textEnd 48 :drawItem:barLength
-    * op mul *tmp60 :drawItem:barLength :drawItem:current
-    * op div *tmp61 *tmp60 :drawItem:target
+  155 op mul *tmp60 :drawItem:barLength *tmp55
+  156 op div *tmp61 *tmp60 :drawMaterials:target
   157 op min :drawItem:length :drawItem:barLength *tmp61
   158 op mul *tmp63 :drawMaterials:col 176
-    * op div *tmp64 *tmp63 2
+  159 op mul *tmp64 :drawMaterials:col 88
   160 op add :drawItem:iconX 11 *tmp64
   161 op mul *tmp66 :drawMaterials:col 176
-    * op div *tmp67 *tmp66 2
-    * op add :drawItem:barX 22 *tmp67
+  162 op div *tmp67 *tmp63 2
+  163 op add :drawItem:barX 22 *tmp64
   164 op mul *tmp69 :drawMaterials:col 176
-    * op div *tmp70 *tmp69 2
-    * op add :drawItem:textX :drawItem:textEnd *tmp70
+  165 op div *tmp70 *tmp63 2
+  166 op add :drawItem:textX :drawItem:textEnd *tmp64
   167 draw col %[white]
   168 op add *tmp72 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp72 :drawItem:item 16 0
+  169 draw image :drawItem:iconX *tmp72 :drawMaterials:item 16 0
   170 draw color 0 128 0 255
   171 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   172 draw color 0 255 0 255
   173 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
   174 op add *tmp73 :drawMaterials:y 5
-    * op add *tmp74 *tmp73 2
+  175 op add *tmp74 *tmp72 2
   176 set :drawBold.2:x :drawItem:textX
   177 set :drawBold.2:y *tmp74
   178 set :drawBold.2:alignment @right
-    * set :drawBold.2:text :drawItem:count
-    * set :drawText.5:x :drawBold.2:x
-    * set :drawText.5:y :drawBold.2:y
-    * set :drawText.5:alignment :drawBold.2:alignment
-    * set :drawText.5:text :drawBold.2:text
-    * print :drawText.5:text
-    * set :drawPrint.5:x :drawText.5:x
-    * set :drawPrint.5:y :drawText.5:y
-    * set :drawPrint.5:alignment :drawText.5:alignment
-    * draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
+  179 set :drawBold.2:text :drawMaterials:target
+  180 set :drawText.5:x :drawItem:textX
+  181 set :drawText.5:y *tmp74
+  182 set :drawText.5:alignment @right
+  183 set :drawText.5:text :drawItem:count
+  184 print :drawBold.2:text
+  185 set :drawPrint.5:x :drawBold.2:x
+  186 set :drawPrint.5:y :drawBold.2:y
+  187 set :drawPrint.5:alignment :drawBold.2:alignment
+  188 draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
   189 label *label43
   190 label *label42
-    * op add :drawText.6:x :drawBold.2:x 1
-    * set :drawText.6:y :drawBold.2:y
-    * set :drawText.6:alignment :drawBold.2:alignment
-    * set :drawText.6:text :drawBold.2:text
-    * print :drawText.6:text
+  191 op add :drawText.6:x :drawItem:textX 1
+  192 set :drawText.6:y *tmp74
+  193 set :drawText.6:alignment @right
+  194 set :drawText.6:text :drawItem:count
+  195 print :drawBold.2:text
   196 set :drawPrint.6:x :drawText.6:x
-    * set :drawPrint.6:y :drawText.6:y
-    * set :drawPrint.6:alignment :drawText.6:alignment
-    * draw print :drawPrint.6:x :drawPrint.6:y :drawPrint.6:alignment
+  197 set :drawPrint.6:y :drawBold.2:y
+  198 set :drawPrint.6:alignment :drawBold.2:alignment
+  199 draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
   200 label *label45
   201 label *label44
   202 label *label41
   203 op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label46 lessThan :drawMaterials:col :drawItem:columns
+  204 jump *label46 lessThan :drawMaterials:col :drawMaterials:columns
   205 set :drawMaterials:col 0
   206 op sub :drawMaterials:y :drawMaterials:y 15
   207 label *label46
 
   224 set :drawBold.3:y 45
   225 set :drawBold.3:alignment @bottomLeft
   226 set :drawBold.3:text "Unit status"
-    * set :drawText.7:x :drawBold.3:x
-    * set :drawText.7:y :drawBold.3:y
-    * set :drawText.7:alignment :drawBold.3:alignment
-    * set :drawText.7:text :drawBold.3:text
-    * print :drawText.7:text
-    * set :drawPrint.7:x :drawText.7:x
-    * set :drawPrint.7:y :drawText.7:y
-    * set :drawPrint.7:alignment :drawText.7:alignment
-    * draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
+  227 set :drawText.7:x 22
+  228 set :drawText.7:y 45
+  229 set :drawText.7:alignment @bottomLeft
+  230 set :drawText.7:text "Unit status"
+  231 print :drawBold.3:text
+  232 set :drawPrint.7:x :drawBold.3:x
+  233 set :drawPrint.7:y :drawBold.3:y
+  234 set :drawPrint.7:alignment :drawBold.3:alignment
+  235 draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
   236 label *label53
   237 label *label52
-    * op add :drawText.8:x :drawBold.3:x 1
-    * set :drawText.8:y :drawBold.3:y
-    * set :drawText.8:alignment :drawBold.3:alignment
-    * set :drawText.8:text :drawBold.3:text
-    * print :drawText.8:text
-    * set :drawPrint.8:x :drawText.8:x
-    * set :drawPrint.8:y :drawText.8:y
-    * set :drawPrint.8:alignment :drawText.8:alignment
-    * draw print :drawPrint.8:x :drawPrint.8:y :drawPrint.8:alignment
+  238 op add :drawText.8:x 22 1
+  239 set :drawText.8:y 45
+  240 set :drawText.8:alignment @bottomLeft
+  241 set :drawText.8:text "Unit status"
+  242 print :drawBold.3:text
+  243 set :drawPrint.8:x 23
+  244 set :drawPrint.8:y :drawBold.3:y
+  245 set :drawPrint.8:alignment :drawBold.3:alignment
+  246 draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
   247 label *label55
   248 label *label54
   249 label *label51
 
   254 set :drawUnit.1:items 0
   255 set :drawUnit.1:col 0
   256 set :drawItem.1:columns 1
-    * set :drawItem.1:item :drawUnit.1:item
-    * set :drawItem.1:current :drawUnit.1:items
+  257 set :drawItem.1:item @poly
+  258 set :drawItem.1:current 0
   259 read *tmp12 processor1 ".transportTarget"
   260 set :drawItem.1:target *tmp12
   261 read *tmp12 processor1 ".transportTarget"
   262 set :drawItem.1:count *tmp12
-    * op mul *tmp83 :drawItem.1:columns 176
-    * op div *tmp84 *tmp83 2
-    * op sub :drawItem.1:barLength 210 *tmp84
-    * op add :drawItem.1:textEnd 48 :drawItem.1:barLength
-    * op mul *tmp87 :drawItem.1:barLength :drawItem.1:current
+  263 op mul *tmp83 1 176
+  264 op div *tmp84 176 2
+  265 op sub :drawItem.1:barLength 210 88
+  266 op add :drawItem.1:textEnd 48 122
+  267 op mul *tmp87 122 :drawUnit.1:items
   268 op div *tmp88 *tmp87 :drawItem.1:target
-    * op min :drawItem.1:length :drawItem.1:barLength *tmp88
-    * op mul *tmp90 :drawUnit.1:col 176
-    * op div *tmp91 *tmp90 2
-    * op add :drawItem.1:iconX 11 *tmp91
-    * op mul *tmp93 :drawUnit.1:col 176
-    * op div *tmp94 *tmp93 2
-    * op add :drawItem.1:barX 22 *tmp94
-    * op mul *tmp96 :drawUnit.1:col 176
-    * op div *tmp97 *tmp96 2
-    * op add :drawItem.1:textX :drawItem.1:textEnd *tmp97
+  269 op min :drawItem.1:length 122 *tmp88
+  270 op mul *tmp90 0 176
+  271 op div *tmp91 0 2
+  272 op add :drawItem.1:iconX 11 0
+  273 op mul *tmp93 0 176
+  274 op div *tmp94 0 2
+  275 op add :drawItem.1:barX 22 0
+  276 op mul *tmp96 0 176
+  277 op div *tmp97 0 2
+  278 op add :drawItem.1:textX 170 0
   279 draw col %[white]
-    * op add *tmp99 :drawUnit:y 5
-    * draw image :drawItem.1:iconX *tmp99 :drawItem.1:item 16 0
+  280 op add *tmp99 29 5
+  281 draw image 11 34 :drawUnit.1:item 16 0
   282 draw color 0 128 0 255
-    * draw rect :drawItem.1:barX :drawUnit:y :drawItem.1:length 10
+  283 draw rect 22 29 :drawItem.1:length 10
   284 draw color 0 255 0 255
-    * draw lineRect :drawItem.1:barX :drawUnit:y :drawItem.1:barLength 10
-    * op add *tmp100 :drawUnit:y 5
-    * op add *tmp101 *tmp100 2
-    * set :drawBold.4:x :drawItem.1:textX
-    * set :drawBold.4:y *tmp101
+  285 draw lineRect 22 29 122 10
+  286 op add *tmp100 29 5
+  287 op add *tmp101 34 2
+  288 set :drawBold.4:x 170
+  289 set :drawBold.4:y 36
   290 set :drawBold.4:alignment @right
-    * set :drawBold.4:text :drawItem.1:count
-    * set :drawText.9:x :drawBold.4:x
-    * set :drawText.9:y :drawBold.4:y
-    * set :drawText.9:alignment :drawBold.4:alignment
-    * set :drawText.9:text :drawBold.4:text
-    * print :drawText.9:text
-    * set :drawPrint.9:x :drawText.9:x
-    * set :drawPrint.9:y :drawText.9:y
-    * set :drawPrint.9:alignment :drawText.9:alignment
-    * draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
+  291 set :drawBold.4:text *tmp12
+  292 set :drawText.9:x :drawItem.1:textX
+  293 set :drawText.9:y *tmp101
+  294 set :drawText.9:alignment @right
+  295 set :drawText.9:text :drawItem.1:count
+  296 print :drawBold.4:text
+  297 set :drawPrint.9:x :drawBold.4:x
+  298 set :drawPrint.9:y :drawBold.4:y
+  299 set :drawPrint.9:alignment :drawBold.4:alignment
+  300 draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
   301 label *label62
   302 label *label61
-    * op add :drawText.10:x :drawBold.4:x 1
-    * set :drawText.10:y :drawBold.4:y
-    * set :drawText.10:alignment :drawBold.4:alignment
-    * set :drawText.10:text :drawBold.4:text
-    * print :drawText.10:text
+  303 op add :drawText.10:x :drawItem.1:textX 1
+  304 set :drawText.10:y *tmp101
+  305 set :drawText.10:alignment @right
+  306 set :drawText.10:text :drawItem.1:count
+  307 print :drawBold.4:text
   308 set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawText.10:y
-    * set :drawPrint.10:alignment :drawText.10:alignment
-    * draw print :drawPrint.10:x :drawPrint.10:y :drawPrint.10:alignment
+  309 set :drawPrint.10:y :drawBold.4:y
+  310 set :drawPrint.10:alignment :drawBold.4:alignment
+  311 draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
   312 label *label64
   313 label *label63
   314 label *label60
-    * op add :drawUnit.1:col :drawUnit.1:col 1
-    * jump *label65 lessThan :drawUnit.1:col :drawItem.1:columns
-    * set :drawUnit.1:col 0
-    * op sub :drawUnit:y :drawUnit:y 15
+  315 op add :drawUnit.1:col 0 1
+  316 jump *label65 lessThan 1 1
+  317 op sub :drawUnit:y 29 15
   318 label *label65
   319 label *label66
   320 label *label59
 
   327 set :drawUnit.2:items *tmp105
   328 set :drawUnit.2:col 0
   329 set :drawItem.2:columns 1
-    * set :drawItem.2:item :drawUnit.2:item
-    * set :drawItem.2:current :drawUnit.2:items
+  330 set :drawItem.2:item *tmp13
+  331 set :drawItem.2:current *tmp105
   332 read *tmp12 processor1 ".transportTarget"
   333 set :drawItem.2:target *tmp12
   334 read *tmp12 processor1 ".transportTarget"
   335 set :drawItem.2:count *tmp12
-    * op mul *tmp106 :drawItem.2:columns 176
-    * op div *tmp107 *tmp106 2
-    * op sub :drawItem.2:barLength 210 *tmp107
-    * op add :drawItem.2:textEnd 48 :drawItem.2:barLength
-    * op mul *tmp110 :drawItem.2:barLength :drawItem.2:current
+  336 op mul *tmp106 1 176
+  337 op div *tmp107 176 2
+  338 op sub :drawItem.2:barLength 210 88
+  339 op add :drawItem.2:textEnd 48 122
+  340 op mul *tmp110 122 :drawUnit.2:items
   341 op div *tmp111 *tmp110 :drawItem.2:target
-    * op min :drawItem.2:length :drawItem.2:barLength *tmp111
-    * op mul *tmp113 :drawUnit.2:col 176
-    * op div *tmp114 *tmp113 2
-    * op add :drawItem.2:iconX 11 *tmp114
-    * op mul *tmp116 :drawUnit.2:col 176
-    * op div *tmp117 *tmp116 2
-    * op add :drawItem.2:barX 22 *tmp117
-    * op mul *tmp119 :drawUnit.2:col 176
-    * op div *tmp120 *tmp119 2
-    * op add :drawItem.2:textX :drawItem.2:textEnd *tmp120
+  342 op min :drawItem.2:length 122 *tmp111
+  343 op mul *tmp113 0 176
+  344 op div *tmp114 0 2
+  345 op add :drawItem.2:iconX 11 0
+  346 op mul *tmp116 0 176
+  347 op div *tmp117 0 2
+  348 op add :drawItem.2:barX 22 0
+  349 op mul *tmp119 0 176
+  350 op div *tmp120 0 2
+  351 op add :drawItem.2:textX 170 0
   352 draw col %[white]
-    * op add *tmp122 :drawUnit:y 5
-    * draw image :drawItem.2:iconX *tmp122 :drawItem.2:item 16 0
+  353 op add *tmp122 29 5
+  354 draw image 11 34 :drawUnit.2:item 16 0
   355 draw color 0 128 0 255
-    * draw rect :drawItem.2:barX :drawUnit:y :drawItem.2:length 10
+  356 draw rect 22 29 :drawItem.2:length 10
   357 draw color 0 255 0 255
-    * draw lineRect :drawItem.2:barX :drawUnit:y :drawItem.2:barLength 10
-    * op add *tmp123 :drawUnit:y 5
-    * op add *tmp124 *tmp123 2
-    * set :drawBold.5:x :drawItem.2:textX
-    * set :drawBold.5:y *tmp124
+  358 draw lineRect 22 29 122 10
+  359 op add *tmp123 29 5
+  360 op add *tmp124 34 2
+  361 set :drawBold.5:x 170
+  362 set :drawBold.5:y 36
   363 set :drawBold.5:alignment @right
-    * set :drawBold.5:text :drawItem.2:count
-    * set :drawText.11:x :drawBold.5:x
-    * set :drawText.11:y :drawBold.5:y
-    * set :drawText.11:alignment :drawBold.5:alignment
-    * set :drawText.11:text :drawBold.5:text
-    * print :drawText.11:text
-    * set :drawPrint.11:x :drawText.11:x
-    * set :drawPrint.11:y :drawText.11:y
-    * set :drawPrint.11:alignment :drawText.11:alignment
-    * draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
+  364 set :drawBold.5:text *tmp12
+  365 set :drawText.11:x :drawItem.2:textX
+  366 set :drawText.11:y *tmp124
+  367 set :drawText.11:alignment @right
+  368 set :drawText.11:text :drawItem.2:count
+  369 print :drawBold.5:text
+  370 set :drawPrint.11:x :drawBold.5:x
+  371 set :drawPrint.11:y :drawBold.5:y
+  372 set :drawPrint.11:alignment :drawBold.5:alignment
+  373 draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
   374 label *label71
   375 label *label70
-    * op add :drawText.12:x :drawBold.5:x 1
-    * set :drawText.12:y :drawBold.5:y
-    * set :drawText.12:alignment :drawBold.5:alignment
-    * set :drawText.12:text :drawBold.5:text
-    * print :drawText.12:text
+  376 op add :drawText.12:x :drawItem.2:textX 1
+  377 set :drawText.12:y *tmp124
+  378 set :drawText.12:alignment @right
+  379 set :drawText.12:text :drawItem.2:count
+  380 print :drawBold.5:text
   381 set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawText.12:y
-    * set :drawPrint.12:alignment :drawText.12:alignment
-    * draw print :drawPrint.12:x :drawPrint.12:y :drawPrint.12:alignment
+  382 set :drawPrint.12:y :drawBold.5:y
+  383 set :drawPrint.12:alignment :drawBold.5:alignment
+  384 draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
   385 label *label73
   386 label *label72
   387 label *label69
-    * op add :drawUnit.2:col :drawUnit.2:col 1
-    * jump *label74 lessThan :drawUnit.2:col :drawItem.2:columns
-    * set :drawUnit.2:col 0
-    * op sub :drawUnit:y :drawUnit:y 15
+  388 op add :drawUnit.2:col 0 1
+  389 jump *label74 lessThan 1 1
+  390 op sub :drawUnit:y 29 15
   391 label *label74
   392 label *label75
   393 label *label68

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-61 instructions):
 
    26 set :drawText:x 40
    27 set :drawText:y 161
    28 set :drawText:alignment @bottom
-    * set :drawText:text "Building"
-    * print :drawBold:text
-    * set :drawPrint:x :drawBold:x
-    * set :drawPrint:y :drawBold:y
-    * set :drawPrint:alignment :drawBold:alignment
-    * draw print :drawText:x :drawText:y :drawText:alignment
+   29 print "Building"
+   30 set :drawPrint:x 40
+   31 set :drawPrint:y 161
+   32 set :drawPrint:alignment @bottom
+   33 draw print 40 161 @bottom
    34 label *label14
    35 label *label13
    36 op add :drawText.1:x 40 1
    37 set :drawText.1:y 161
    38 set :drawText.1:alignment @bottom
-    * set :drawText.1:text "Building"
-    * print :drawBold:text
-    * set :drawPrint.1:x 41
-    * set :drawPrint.1:y :drawBold:y
-    * set :drawPrint.1:alignment :drawBold:alignment
-    * draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
+   39 print "Building"
+   40 set :drawPrint.1:y 161
+   41 set :drawPrint.1:alignment @bottom
+   42 draw print 41 161 @bottom
    43 label *label16
    44 label *label15
    45 label *label12
 
    62 set :drawText.2:x 168
    63 set :drawText.2:y 172
    64 set :drawText.2:alignment @topRight
-    * set :drawText.2:text ""
    65 print ""
-    * set :drawPrint.2:x 168
-    * set :drawPrint.2:y 172
-    * set :drawPrint.2:alignment @topRight
-    * draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
+   66 draw print 168 172 @topRight
    67 label *label20
    68 label *label19
    69 label *label11
 
    74 set :drawText.3:x 22
    75 set :drawText.3:y 101
    76 set :drawText.3:alignment @bottomLeft
-    * set :drawText.3:text "Materials"
-    * print :drawBold.1:text
-    * set :drawPrint.3:x :drawBold.1:x
-    * set :drawPrint.3:y :drawBold.1:y
-    * set :drawPrint.3:alignment :drawBold.1:alignment
-    * draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
+   77 print "Materials"
+   78 set :drawPrint.3:x 22
+   79 set :drawPrint.3:y 101
+   80 set :drawPrint.3:alignment @bottomLeft
+   81 draw print 22 101 @bottomLeft
    82 label *label24
    83 label *label23
    84 op add :drawText.4:x 22 1
    85 set :drawText.4:y 101
    86 set :drawText.4:alignment @bottomLeft
-    * set :drawText.4:text "Materials"
-    * print :drawBold.1:text
-    * set :drawPrint.4:x 23
-    * set :drawPrint.4:y :drawBold.1:y
-    * set :drawPrint.4:alignment :drawBold.1:alignment
-    * draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
+   87 print "Materials"
+   88 set :drawPrint.4:y 101
+   89 set :drawPrint.4:alignment @bottomLeft
+   90 draw print 23 101 @bottomLeft
    91 label *label26
    92 label *label25
    93 label *label22
 
   134 read *tmp0 processor1 ".core"
   135 sensor *tmp55 *tmp0 :drawMaterials:item
   136 set :drawItem:columns *tmp51
-    * set :drawItem:item :drawMaterials:item
-    * set :drawItem:current *tmp55
-    * set :drawItem:target :drawMaterials:target
   137 set :drawItem:count :drawMaterials:target
-    * op mul *tmp56 :drawMaterials:columns 176
-    * op mul *tmp57 :drawItem:columns 88
+  138 op mul *tmp56 *tmp51 176
+  139 op mul *tmp57 *tmp51 88
   140 op sub :drawItem:barLength 210 *tmp57
   141 op add :drawItem:textEnd 48 :drawItem:barLength
   142 op mul *tmp60 :drawItem:barLength *tmp55
 
   145 op mul *tmp63 :drawMaterials:col 176
   146 op mul *tmp64 :drawMaterials:col 88
   147 op add :drawItem:iconX 11 *tmp64
-    * op mul *tmp66 :drawMaterials:col 176
-    * op div *tmp67 *tmp63 2
+  148 op mul *tmp67 :drawMaterials:col 88
   149 op add :drawItem:barX 22 *tmp64
-    * op mul *tmp69 :drawMaterials:col 176
-    * op div *tmp70 *tmp63 2
+  150 op mul *tmp70 :drawMaterials:col 88
   151 op add :drawItem:textX :drawItem:textEnd *tmp64
   152 draw col %[white]
   153 op add *tmp72 :drawMaterials:y 5
 
   156 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   157 draw color 0 255 0 255
   158 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
-    * op add *tmp73 :drawMaterials:y 5
-    * op add *tmp74 *tmp72 2
+  159 op add *tmp74 :drawMaterials:y 7
   160 set :drawBold.2:x :drawItem:textX
   161 set :drawBold.2:y *tmp74
   162 set :drawBold.2:alignment @right
 
   164 set :drawText.5:x :drawItem:textX
   165 set :drawText.5:y *tmp74
   166 set :drawText.5:alignment @right
-    * set :drawText.5:text :drawItem:count
-    * print :drawBold.2:text
-    * set :drawPrint.5:x :drawBold.2:x
-    * set :drawPrint.5:y :drawBold.2:y
-    * set :drawPrint.5:alignment :drawBold.2:alignment
-    * draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
+  167 set :drawText.5:text :drawMaterials:target
+  168 print :drawMaterials:target
+  169 set :drawPrint.5:x :drawItem:textX
+  170 set :drawPrint.5:y *tmp74
+  171 set :drawPrint.5:alignment @right
+  172 draw print :drawItem:textX *tmp74 @right
   173 label *label43
   174 label *label42
   175 op add :drawText.6:x :drawItem:textX 1
   176 set :drawText.6:y *tmp74
   177 set :drawText.6:alignment @right
-    * set :drawText.6:text :drawItem:count
-    * print :drawBold.2:text
-    * set :drawPrint.6:x :drawText.6:x
-    * set :drawPrint.6:y :drawBold.2:y
-    * set :drawPrint.6:alignment :drawBold.2:alignment
-    * draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
+  178 set :drawText.6:text :drawMaterials:target
+  179 print :drawMaterials:target
+  180 set :drawPrint.6:y *tmp74
+  181 set :drawPrint.6:alignment @right
+  182 draw print :drawText.6:x *tmp74 @right
   183 label *label45
   184 label *label44
   185 label *label41
   186 op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label46 lessThan :drawMaterials:col :drawMaterials:columns
+  187 jump *label46 lessThan :drawMaterials:col *tmp51
   188 set :drawMaterials:col 0
   189 op sub :drawMaterials:y :drawMaterials:y 15
   190 label *label46
 
   210 set :drawText.7:x 22
   211 set :drawText.7:y 45
   212 set :drawText.7:alignment @bottomLeft
-    * set :drawText.7:text "Unit status"
-    * print :drawBold.3:text
-    * set :drawPrint.7:x :drawBold.3:x
-    * set :drawPrint.7:y :drawBold.3:y
-    * set :drawPrint.7:alignment :drawBold.3:alignment
-    * draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
+  213 print "Unit status"
+  214 set :drawPrint.7:x 22
+  215 set :drawPrint.7:y 45
+  216 set :drawPrint.7:alignment @bottomLeft
+  217 draw print 22 45 @bottomLeft
   218 label *label53
   219 label *label52
   220 op add :drawText.8:x 22 1
   221 set :drawText.8:y 45
   222 set :drawText.8:alignment @bottomLeft
-    * set :drawText.8:text "Unit status"
-    * print :drawBold.3:text
-    * set :drawPrint.8:x 23
-    * set :drawPrint.8:y :drawBold.3:y
-    * set :drawPrint.8:alignment :drawBold.3:alignment
-    * draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
+  223 print "Unit status"
+  224 set :drawPrint.8:y 45
+  225 set :drawPrint.8:alignment @bottomLeft
+  226 draw print 23 45 @bottomLeft
   227 label *label55
   228 label *label54
   229 label *label51
-    * set :drawUnit:y 29
   230 read *tmp13 processor1 ".transportItem"
   231 jump *label56 notEqual *tmp13 null
   232 set :drawUnit.1:item @poly
   233 set :drawUnit.1:items 0
-    * set :drawUnit.1:col 0
-    * set :drawItem.1:columns 1
-    * set :drawItem.1:item @poly
-    * set :drawItem.1:current 0
   234 read *tmp12 processor1 ".transportTarget"
   235 set :drawItem.1:target *tmp12
   236 read *tmp12 processor1 ".transportTarget"
   237 set :drawItem.1:count *tmp12
-    * op mul *tmp83 1 176
-    * op div *tmp84 176 2
-    * op sub :drawItem.1:barLength 210 88
-    * op add :drawItem.1:textEnd 48 122
-    * op mul *tmp87 122 :drawUnit.1:items
-    * op div *tmp88 *tmp87 :drawItem.1:target
+  238 op mul *tmp87 122 0
+  239 op div *tmp88 0 :drawItem.1:target
   240 op min :drawItem.1:length 122 *tmp88
-    * op mul *tmp90 0 176
-    * op div *tmp91 0 2
-    * op add :drawItem.1:iconX 11 0
-    * op mul *tmp93 0 176
-    * op div *tmp94 0 2
-    * op add :drawItem.1:barX 22 0
-    * op mul *tmp96 0 176
-    * op div *tmp97 0 2
   241 op add :drawItem.1:textX 170 0
   242 draw col %[white]
-    * op add *tmp99 29 5
-    * draw image 11 34 :drawUnit.1:item 16 0
+  243 draw image 11 34 @poly 16 0
   244 draw color 0 128 0 255
   245 draw rect 22 29 :drawItem.1:length 10
   246 draw color 0 255 0 255
   247 draw lineRect 22 29 122 10
-    * op add *tmp100 29 5
   248 op add *tmp101 34 2
   249 set :drawBold.4:x 170
   250 set :drawBold.4:y 36
   251 set :drawBold.4:alignment @right
   252 set :drawBold.4:text *tmp12
-    * set :drawText.9:x :drawItem.1:textX
-    * set :drawText.9:y *tmp101
+  253 set :drawText.9:x 170
+  254 set :drawText.9:y 36
   255 set :drawText.9:alignment @right
-    * set :drawText.9:text :drawItem.1:count
-    * print :drawBold.4:text
-    * set :drawPrint.9:x :drawBold.4:x
-    * set :drawPrint.9:y :drawBold.4:y
-    * set :drawPrint.9:alignment :drawBold.4:alignment
-    * draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
+  256 set :drawText.9:text *tmp12
+  257 print *tmp12
+  258 set :drawPrint.9:x 170
+  259 set :drawPrint.9:y 36
+  260 set :drawPrint.9:alignment @right
+  261 draw print :drawItem.1:textX *tmp101 @right
   262 label *label62
   263 label *label61
-    * op add :drawText.10:x :drawItem.1:textX 1
-    * set :drawText.10:y *tmp101
+  264 op add :drawText.10:x 170 1
+  265 set :drawText.10:y 36
   266 set :drawText.10:alignment @right
-    * set :drawText.10:text :drawItem.1:count
-    * print :drawBold.4:text
-    * set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawBold.4:y
-    * set :drawPrint.10:alignment :drawBold.4:alignment
-    * draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
+  267 set :drawText.10:text *tmp12
+  268 print *tmp12
+  269 set :drawPrint.10:x 171
+  270 set :drawPrint.10:y 36
+  271 set :drawPrint.10:alignment @right
+  272 draw print 171 *tmp101 @right
   273 label *label64
   274 label *label63
   275 label *label60
-    * op add :drawUnit.1:col 0 1
   276 jump *label65 lessThan 1 1
-    * op sub :drawUnit:y 29 15
   277 label *label65
   278 label *label66
   279 label *label59
 
   284 read *tmp13 processor1 ".transportItem"
   285 set :drawUnit.2:item *tmp13
   286 set :drawUnit.2:items *tmp105
-    * set :drawUnit.2:col 0
-    * set :drawItem.2:columns 1
-    * set :drawItem.2:item *tmp13
-    * set :drawItem.2:current *tmp105
   287 read *tmp12 processor1 ".transportTarget"
   288 set :drawItem.2:target *tmp12
   289 read *tmp12 processor1 ".transportTarget"
   290 set :drawItem.2:count *tmp12
-    * op mul *tmp106 1 176
-    * op div *tmp107 176 2
-    * op sub :drawItem.2:barLength 210 88
-    * op add :drawItem.2:textEnd 48 122
-    * op mul *tmp110 122 :drawUnit.2:items
+  291 op mul *tmp110 122 *tmp105
   292 op div *tmp111 *tmp110 :drawItem.2:target
   293 op min :drawItem.2:length 122 *tmp111
-    * op mul *tmp113 0 176
-    * op div *tmp114 0 2
-    * op add :drawItem.2:iconX 11 0
-    * op mul *tmp116 0 176
-    * op div *tmp117 0 2
-    * op add :drawItem.2:barX 22 0
-    * op mul *tmp119 0 176
-    * op div *tmp120 0 2
   294 op add :drawItem.2:textX 170 0
   295 draw col %[white]
-    * op add *tmp122 29 5
-    * draw image 11 34 :drawUnit.2:item 16 0
+  296 draw image 11 34 *tmp13 16 0
   297 draw color 0 128 0 255
   298 draw rect 22 29 :drawItem.2:length 10
   299 draw color 0 255 0 255
   300 draw lineRect 22 29 122 10
-    * op add *tmp123 29 5
   301 op add *tmp124 34 2
   302 set :drawBold.5:x 170
   303 set :drawBold.5:y 36
   304 set :drawBold.5:alignment @right
   305 set :drawBold.5:text *tmp12
-    * set :drawText.11:x :drawItem.2:textX
-    * set :drawText.11:y *tmp124
+  306 set :drawText.11:x 170
+  307 set :drawText.11:y 36
   308 set :drawText.11:alignment @right
-    * set :drawText.11:text :drawItem.2:count
-    * print :drawBold.5:text
-    * set :drawPrint.11:x :drawBold.5:x
-    * set :drawPrint.11:y :drawBold.5:y
-    * set :drawPrint.11:alignment :drawBold.5:alignment
-    * draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
+  309 set :drawText.11:text *tmp12
+  310 print *tmp12
+  311 set :drawPrint.11:x 170
+  312 set :drawPrint.11:y 36
+  313 set :drawPrint.11:alignment @right
+  314 draw print :drawItem.2:textX *tmp124 @right
   315 label *label71
   316 label *label70
-    * op add :drawText.12:x :drawItem.2:textX 1
-    * set :drawText.12:y *tmp124
+  317 op add :drawText.12:x 170 1
+  318 set :drawText.12:y 36
   319 set :drawText.12:alignment @right
-    * set :drawText.12:text :drawItem.2:count
-    * print :drawBold.5:text
-    * set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawBold.5:y
-    * set :drawPrint.12:alignment :drawBold.5:alignment
-    * draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
+  320 set :drawText.12:text *tmp12
+  321 print *tmp12
+  322 set :drawPrint.12:x 171
+  323 set :drawPrint.12:y 36
+  324 set :drawPrint.12:alignment @right
+  325 draw print 171 *tmp124 @right
   326 label *label73
   327 label *label72
   328 label *label69
-    * op add :drawUnit.2:col 0 1
   329 jump *label74 lessThan 1 1
-    * op sub :drawUnit:y 29 15
   330 label *label74
   331 label *label75
   332 label *label68

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-114 instructions):
 
    19 draw reset
    20 draw clear 0 0 32
    21 draw col %[gold]
-    * set :drawBold:x 40
-    * set :drawBold:y 161
-    * set :drawBold:alignment @bottom
-    * set :drawBold:text "Building"
-    * set :drawText:x 40
-    * set :drawText:y 161
-    * set :drawText:alignment @bottom
    22 print "Building"
-    * set :drawPrint:x 40
-    * set :drawPrint:y 161
-    * set :drawPrint:alignment @bottom
    23 draw print 40 161 @bottom
    24 label *label14
    25 label *label13
-    * op add :drawText.1:x 40 1
-    * set :drawText.1:y 161
-    * set :drawText.1:alignment @bottom
    26 print "Building"
-    * set :drawPrint.1:y 161
-    * set :drawPrint.1:alignment @bottom
    27 draw print 41 161 @bottom
    28 label *label16
    29 label *label15
 
    44 print ":"
    45 print *tmp48
    46 print :drawHeader:s
-    * set :drawText.2:x 168
-    * set :drawText.2:y 172
-    * set :drawText.2:alignment @topRight
    47 print ""
    48 draw print 168 172 @topRight
    49 label *label20
    50 label *label19
    51 label *label11
-    * set :drawBold.1:x 22
-    * set :drawBold.1:y 101
-    * set :drawBold.1:alignment @bottomLeft
-    * set :drawBold.1:text "Materials"
-    * set :drawText.3:x 22
-    * set :drawText.3:y 101
-    * set :drawText.3:alignment @bottomLeft
    52 print "Materials"
-    * set :drawPrint.3:x 22
-    * set :drawPrint.3:y 101
-    * set :drawPrint.3:alignment @bottomLeft
    53 draw print 22 101 @bottomLeft
    54 label *label24
    55 label *label23
-    * op add :drawText.4:x 22 1
-    * set :drawText.4:y 101
-    * set :drawText.4:alignment @bottomLeft
    56 print "Materials"
-    * set :drawPrint.4:y 101
-    * set :drawPrint.4:alignment @bottomLeft
    57 draw print 23 101 @bottomLeft
    58 label *label26
    59 label *label25
 
    67 label *label27
    68 set *tmp51 1
    69 label *label28
-    * set :drawMaterials:columns *tmp51
    70 set :drawMaterials:item @copper
    71 read :drawMaterials:target processor1 ".copperTarget"
    72 setaddr *tmp52 *label32
 
    99 jump *label38 lessThanEq :drawMaterials:target 0
   100 read *tmp0 processor1 ".core"
   101 sensor *tmp55 *tmp0 :drawMaterials:item
-    * set :drawItem:columns *tmp51
-    * set :drawItem:count :drawMaterials:target
-    * op mul *tmp56 *tmp51 176
   102 op mul *tmp57 *tmp51 88
   103 op sub :drawItem:barLength 210 *tmp57
   104 op add :drawItem:textEnd 48 :drawItem:barLength
   105 op mul *tmp60 :drawItem:barLength *tmp55
   106 op div *tmp61 *tmp60 :drawMaterials:target
   107 op min :drawItem:length :drawItem:barLength *tmp61
-    * op mul *tmp63 :drawMaterials:col 176
   108 op mul *tmp64 :drawMaterials:col 88
   109 op add :drawItem:iconX 11 *tmp64
-    * op mul *tmp67 :drawMaterials:col 88
   110 op add :drawItem:barX 22 *tmp64
-    * op mul *tmp70 :drawMaterials:col 88
   111 op add :drawItem:textX :drawItem:textEnd *tmp64
   112 draw col %[white]
   113 op add *tmp72 :drawMaterials:y 5
 
   117 draw color 0 255 0 255
   118 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
   119 op add *tmp74 :drawMaterials:y 7
-    * set :drawBold.2:x :drawItem:textX
-    * set :drawBold.2:y *tmp74
-    * set :drawBold.2:alignment @right
-    * set :drawBold.2:text :drawMaterials:target
-    * set :drawText.5:x :drawItem:textX
-    * set :drawText.5:y *tmp74
-    * set :drawText.5:alignment @right
-    * set :drawText.5:text :drawMaterials:target
   120 print :drawMaterials:target
-    * set :drawPrint.5:x :drawItem:textX
-    * set :drawPrint.5:y *tmp74
-    * set :drawPrint.5:alignment @right
   121 draw print :drawItem:textX *tmp74 @right
   122 label *label43
   123 label *label42
   124 op add :drawText.6:x :drawItem:textX 1
-    * set :drawText.6:y *tmp74
-    * set :drawText.6:alignment @right
-    * set :drawText.6:text :drawMaterials:target
   125 print :drawMaterials:target
-    * set :drawPrint.6:y *tmp74
-    * set :drawPrint.6:alignment @right
   126 draw print :drawText.6:x *tmp74 @right
   127 label *label45
   128 label *label44
 
   147 label *label31
   148 label *label21
   149 draw col %[white]
-    * set :drawBold.3:x 22
-    * set :drawBold.3:y 45
-    * set :drawBold.3:alignment @bottomLeft
-    * set :drawBold.3:text "Unit status"
-    * set :drawText.7:x 22
-    * set :drawText.7:y 45
-    * set :drawText.7:alignment @bottomLeft
   150 print "Unit status"
-    * set :drawPrint.7:x 22
-    * set :drawPrint.7:y 45
-    * set :drawPrint.7:alignment @bottomLeft
   151 draw print 22 45 @bottomLeft
   152 label *label53
   153 label *label52
-    * op add :drawText.8:x 22 1
-    * set :drawText.8:y 45
-    * set :drawText.8:alignment @bottomLeft
   154 print "Unit status"
-    * set :drawPrint.8:y 45
-    * set :drawPrint.8:alignment @bottomLeft
   155 draw print 23 45 @bottomLeft
   156 label *label55
   157 label *label54
   158 label *label51
   159 read *tmp13 processor1 ".transportItem"
   160 jump *label56 notEqual *tmp13 null
-    * set :drawUnit.1:item @poly
-    * set :drawUnit.1:items 0
   161 read *tmp12 processor1 ".transportTarget"
   162 set :drawItem.1:target *tmp12
   163 read *tmp12 processor1 ".transportTarget"
-    * set :drawItem.1:count *tmp12
-    * op mul *tmp87 122 0
   164 op div *tmp88 0 :drawItem.1:target
   165 op min :drawItem.1:length 122 *tmp88
   166 op add :drawItem.1:textX 170 0
 
   171 draw color 0 255 0 255
   172 draw lineRect 22 29 122 10
   173 op add *tmp101 34 2
-    * set :drawBold.4:x 170
-    * set :drawBold.4:y 36
-    * set :drawBold.4:alignment @right
-    * set :drawBold.4:text *tmp12
-    * set :drawText.9:x 170
-    * set :drawText.9:y 36
-    * set :drawText.9:alignment @right
-    * set :drawText.9:text *tmp12
   174 print *tmp12
-    * set :drawPrint.9:x 170
-    * set :drawPrint.9:y 36
-    * set :drawPrint.9:alignment @right
-    * draw print :drawItem.1:textX *tmp101 @right
+  175 draw print 170 36 @right
   176 label *label62
   177 label *label61
-    * op add :drawText.10:x 170 1
-    * set :drawText.10:y 36
-    * set :drawText.10:alignment @right
-    * set :drawText.10:text *tmp12
   178 print *tmp12
-    * set :drawPrint.10:x 171
-    * set :drawPrint.10:y 36
-    * set :drawPrint.10:alignment @right
-    * draw print 171 *tmp101 @right
+  179 draw print 171 36 @right
   180 label *label64
   181 label *label63
   182 label *label60
 
   189 label *label56
   190 sensor *tmp105 @unit @totalItems
   191 read *tmp13 processor1 ".transportItem"
-    * set :drawUnit.2:item *tmp13
-    * set :drawUnit.2:items *tmp105
   192 read *tmp12 processor1 ".transportTarget"
   193 set :drawItem.2:target *tmp12
   194 read *tmp12 processor1 ".transportTarget"
-    * set :drawItem.2:count *tmp12
   195 op mul *tmp110 122 *tmp105
   196 op div *tmp111 *tmp110 :drawItem.2:target
   197 op min :drawItem.2:length 122 *tmp111
 
   203 draw color 0 255 0 255
   204 draw lineRect 22 29 122 10
   205 op add *tmp124 34 2
-    * set :drawBold.5:x 170
-    * set :drawBold.5:y 36
-    * set :drawBold.5:alignment @right
-    * set :drawBold.5:text *tmp12
-    * set :drawText.11:x 170
-    * set :drawText.11:y 36
-    * set :drawText.11:alignment @right
-    * set :drawText.11:text *tmp12
   206 print *tmp12
-    * set :drawPrint.11:x 170
-    * set :drawPrint.11:y 36
-    * set :drawPrint.11:alignment @right
-    * draw print :drawItem.2:textX *tmp124 @right
+  207 draw print 170 36 @right
   208 label *label71
   209 label *label70
-    * op add :drawText.12:x 170 1
-    * set :drawText.12:y 36
-    * set :drawText.12:alignment @right
-    * set :drawText.12:text *tmp12
   210 print *tmp12
-    * set :drawPrint.12:x 171
-    * set :drawPrint.12:y 36
-    * set :drawPrint.12:alignment @right
-    * draw print 171 *tmp124 @right
+  211 draw print 171 36 @right
   212 label *label73
   213 label *label72
   214 label *label69

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-4 instructions):
 
   163 read *tmp12 processor1 ".transportTarget"
   164 op div *tmp88 0 :drawItem.1:target
   165 op min :drawItem.1:length 122 *tmp88
-    * op add :drawItem.1:textX 170 0
   166 draw col %[white]
   167 draw image 11 34 @poly 16 0
   168 draw color 0 128 0 255
   169 draw rect 22 29 :drawItem.1:length 10
   170 draw color 0 255 0 255
   171 draw lineRect 22 29 122 10
-    * op add *tmp101 34 2
   172 print *tmp12
   173 draw print 170 36 @right
   174 label *label62
 
   193 op mul *tmp110 122 *tmp105
   194 op div *tmp111 *tmp110 :drawItem.2:target
   195 op min :drawItem.2:length 122 *tmp111
-    * op add :drawItem.2:textX 170 0
   196 draw col %[white]
   197 draw image 11 34 *tmp13 16 0
   198 draw color 0 128 0 255
   199 draw rect 22 29 :drawItem.2:length 10
   200 draw color 0 255 0 255
   201 draw lineRect 22 29 122 10
-    * op add *tmp124 34 2
   202 print *tmp12
   203 draw print 170 36 @right
   204 label *label71

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
     2 jump *label1 notEqual *tmp38 "a3ea14ee033c13eb:v1"
     3 label *label2
     4 jump *label4 notEqual @unit null
+    5 label *label77
     6 ubind @poly
     7 label *label3
-    * jump *label2 always
+    8 jump *label77 equal @unit null
     9 label *label4
    10 printflush null
    11 drawflush null

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1:
 
    35 op floor :drawHeader:t @second
    36 op idiv :drawHeader:m :drawHeader:t 60
    37 op mod :drawHeader:s :drawHeader:t 60
-    * jump *label17 greaterThanEq :drawHeader:s 10
+   38 set *tmp48 ""
+   39 jump *label18 greaterThanEq :drawHeader:s 10
    40 set *tmp48 "0"
    41 jump *label18 always
-    * label *label17
-    * set *tmp48 ""
    42 label *label18
    43 print :drawHeader:m
    44 print ":"
 
    61 set :drawMaterials:col 0
    62 set :drawMaterials:y 85
    63 read :drawMaterials:count processor1 ".totalTargets"
-    * jump *label27 lessThanEq :drawMaterials:count 2
+   64 set *tmp51 1
+   65 jump *label28 lessThanEq :drawMaterials:count 2
    66 set *tmp51 2
    67 jump *label28 always
-    * label *label27
-    * set *tmp51 1
    68 label *label28
    69 set :drawMaterials:item @copper
    70 read :drawMaterials:target processor1 ".copperTarget"

Modifications by Unroll iteration loop at Display.mnd:75:5 (+153 instructions):
 
    66 set *tmp51 2
    67 jump *label28 always
    68 label *label28
-    * set :drawMaterials:item @copper
-    * read :drawMaterials:target processor1 ".copperTarget"
-    * setaddr *tmp52 *label32
-    * jump *label29 always
-    * multilabel *label32 (m:marker0)
-    * set :drawMaterials:item @lead
-    * read :drawMaterials:target processor1 ".leadTarget"
-    * setaddr *tmp52 *label33
-    * jump *label29 always
-    * multilabel *label33 (m:marker0)
-    * set :drawMaterials:item @graphite
-    * read :drawMaterials:target processor1 ".graphiteTarget"
-    * setaddr *tmp52 *label34
-    * jump *label29 always
-    * multilabel *label34 (m:marker0)
-    * set :drawMaterials:item @silicon
-    * read :drawMaterials:target processor1 ".siliconTarget"
-    * setaddr *tmp52 *label35
-    * jump *label29 always
-    * multilabel *label35 (m:marker0)
-    * set :drawMaterials:item @titanium
-    * read :drawMaterials:target processor1 ".titaniumTarget"
-    * setaddr *tmp52 *label36
-    * jump *label29 always
-    * multilabel *label36 (m:marker0)
-    * set :drawMaterials:item @metaglass
-    * read :drawMaterials:target processor1 ".metaglassTarget"
-    * setaddr *tmp52 *label37
-    * label *label29
-    * jump *label38 lessThanEq :drawMaterials:target 0
-    * read *tmp0 processor1 ".core"
-    * sensor *tmp55 *tmp0 :drawMaterials:item
-    * op mul *tmp57 *tmp51 88
-    * op sub :drawItem:barLength 210 *tmp57
-    * op add :drawItem:textEnd 48 :drawItem:barLength
-    * op mul *tmp60 :drawItem:barLength *tmp55
-    * op div *tmp61 *tmp60 :drawMaterials:target
-    * op min :drawItem:length :drawItem:barLength *tmp61
-    * op mul *tmp64 :drawMaterials:col 88
-    * op add :drawItem:iconX 11 *tmp64
-    * op add :drawItem:barX 22 *tmp64
-    * op add :drawItem:textX :drawItem:textEnd *tmp64
-    * draw col %[white]
-    * op add *tmp72 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp72 :drawMaterials:item 16 0
-    * draw color 0 128 0 255
-    * draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
-    * draw color 0 255 0 255
-    * draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
-    * op add *tmp74 :drawMaterials:y 7
-    * print :drawMaterials:target
-    * draw print :drawItem:textX *tmp74 @right
-    * label *label43
-    * label *label42
-    * op add :drawText.6:x :drawItem:textX 1
-    * print :drawMaterials:target
-    * draw print :drawText.6:x *tmp74 @right
-    * label *label45
-    * label *label44
-    * label *label41
-    * op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label46 lessThan :drawMaterials:col *tmp51
-    * set :drawMaterials:col 0
-    * op sub :drawMaterials:y :drawMaterials:y 15
-    * label *label46
-    * label *label47
-    * label *label40
-    * op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label48 greaterThan :drawMaterials:count 0
-    * jump *label31 always
-    * label *label48
-    * label *label49
-    * label *label38
-    * label *label39
-    * label *label30
-    * multijump *tmp52 0 0 (m:marker0)
-    * multilabel *label37 (m:marker0)
-    * label *label31
+   69 set :drawMaterials:item @copper
+   70 read :drawMaterials:target processor1 ".copperTarget"
+   71 label *label78
+   72 jump *label89 lessThanEq :drawMaterials:target 0
+   73 read *tmp0 processor1 ".core"
+   74 sensor *tmp55 *tmp0 :drawMaterials:item
+   75 op mul *tmp57 *tmp51 88
+   76 op sub :drawItem:barLength 210 *tmp57
+   77 op add :drawItem:textEnd 48 :drawItem:barLength
+   78 op mul *tmp60 :drawItem:barLength *tmp55
+   79 op div *tmp61 *tmp60 :drawMaterials:target
+   80 op min :drawItem:length :drawItem:barLength *tmp61
+   81 op mul *tmp64 :drawMaterials:col 88
+   82 op add :drawItem:iconX 11 *tmp64
+   83 op add :drawItem:barX 22 *tmp64
+   84 op add :drawItem:textX :drawItem:textEnd *tmp64
+   85 draw col %[white]
+   86 op add *tmp72 :drawMaterials:y 5
+   87 draw image :drawItem:iconX *tmp72 :drawMaterials:item 16 0
+   88 draw color 0 128 0 255
+   89 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+   90 draw color 0 255 0 255
+   91 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+   92 op add *tmp74 :drawMaterials:y 7
+   93 print :drawMaterials:target
+   94 draw print :drawItem:textX *tmp74 @right
+   95 label *label79
+   96 label *label80
+   97 op add :drawText.6:x :drawItem:textX 1
+   98 print :drawMaterials:target
+   99 draw print :drawText.6:x *tmp74 @right
+  100 label *label81
+  101 label *label82
+  102 label *label83
+  103 op add :drawMaterials:col :drawMaterials:col 1
+  104 jump *label84 lessThan :drawMaterials:col *tmp51
+  105 set :drawMaterials:col 0
+  106 op sub :drawMaterials:y :drawMaterials:y 15
+  107 label *label84
+  108 label *label85
+  109 label *label86
+  110 op sub :drawMaterials:count :drawMaterials:count 1
+  111 jump *label87 greaterThan :drawMaterials:count 0
+  112 jump *label31 always
+  113 label *label87
+  114 label *label88
+  115 label *label89
+  116 label *label90
+  117 label *label91
+  118 set :drawMaterials:item @lead
+  119 read :drawMaterials:target processor1 ".leadTarget"
+  120 label *label94
+  121 jump *label105 lessThanEq :drawMaterials:target 0
+  122 read *tmp0 processor1 ".core"
+  123 sensor *tmp55 *tmp0 :drawMaterials:item
+  124 op mul *tmp57 *tmp51 88
+  125 op sub :drawItem:barLength 210 *tmp57
+  126 op add :drawItem:textEnd 48 :drawItem:barLength
+  127 op mul *tmp60 :drawItem:barLength *tmp55
+  128 op div *tmp61 *tmp60 :drawMaterials:target
+  129 op min :drawItem:length :drawItem:barLength *tmp61
+  130 op mul *tmp64 :drawMaterials:col 88
+  131 op add :drawItem:iconX 11 *tmp64
+  132 op add :drawItem:barX 22 *tmp64
+  133 op add :drawItem:textX :drawItem:textEnd *tmp64
+  134 draw col %[white]
+  135 op add *tmp72 :drawMaterials:y 5
+  136 draw image :drawItem:iconX *tmp72 :drawMaterials:item 16 0
+  137 draw color 0 128 0 255
+  138 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+  139 draw color 0 255 0 255
+  140 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+  141 op add *tmp74 :drawMaterials:y 7
+  142 print :drawMaterials:target
+  143 draw print :drawItem:textX *tmp74 @right
+  144 label *label95
+  145 label *label96
+  146 op add :drawText.6:x :drawItem:textX 1
+  147 print :drawMaterials:target
+  148 draw print :drawText.6:x *tmp74 @right
+  149 label *label97
+  150 label *label98
+  151 label *label99
+  152 op add :drawMaterials:col :drawMaterials:col 1
+  153 jump *label100 lessThan :drawMaterials:col *tmp51
+  154 set :drawMaterials:col 0
+  155 op sub :drawMaterials:y :drawMaterials:y 15
+  156 label *label100
+  157 label *label101
+  158 label *label102
+  159 op sub :drawMaterials:count :drawMaterials:count 1
+  160 jump *label103 greaterThan :drawMaterials:count 0
+  161 jump *label31 always
+  162 label *label103
+  163 label *label104
+  164 label *label105
+  165 label *label106
+  166 label *label107
+  167 set :drawMaterials:item @graphite
+  168 read :drawMaterials:target processor1 ".graphiteTarget"
+  169 label *label110
+  170 jump *label121 lessThanEq :drawMaterials:target 0
+  171 read *tmp0 processor1 ".core"
+  172 sensor *tmp55 *tmp0 :drawMaterials:item
+  173 op mul *tmp57 *tmp51 88
+  174 op sub :drawItem:barLength 210 *tmp57
+  175 op add :drawItem:textEnd 48 :drawItem:barLength
+  176 op mul *tmp60 :drawItem:barLength *tmp55
+  177 op div *tmp61 *tmp60 :drawMaterials:target
+  178 op min :drawItem:length :drawItem:barLength *tmp61
+  179 op mul *tmp64 :drawMaterials:col 88
+  180 op add :drawItem:iconX 11 *tmp64
+  181 op add :drawItem:barX 22 *tmp64
+  182 op add :drawItem:textX :drawItem:textEnd *tmp64
+  183 draw col %[white]
+  184 op add *tmp72 :drawMaterials:y 5
+  185 draw image :drawItem:iconX *tmp72 :drawMaterials:item 16 0
+  186 draw color 0 128 0 255
+  187 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+  188 draw color 0 255 0 255
+  189 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+  190 op add *tmp74 :drawMaterials:y 7
+  191 print :drawMaterials:target
+  192 draw print :drawItem:textX *tmp74 @right
+  193 label *label111
+  194 label *label112
+  195 op add :drawText.6:x :drawItem:textX 1
+  196 print :drawMaterials:target
+  197 draw print :drawText.6:x *tmp74 @right
+  198 label *label113
+  199 label *label114
+  200 label *label115
+  201 op add :drawMaterials:col :drawMaterials:col 1
+  202 jump *label116 lessThan :drawMaterials:col *tmp51
+  203 set :drawMaterials:col 0
+  204 op sub :drawMaterials:y :drawMaterials:y 15
+  205 label *label116
+  206 label *label117
+  207 label *label118
+  208 op sub :drawMaterials:count :drawMaterials:count 1
+  209 jump *label119 greaterThan :drawMaterials:count 0
+  210 jump *label31 always
+  211 label *label119
+  212 label *label120
+  213 label *label121
+  214 label *label122
+  215 label *label123
+  216 set :drawMaterials:item @silicon
+  217 read :drawMaterials:target processor1 ".siliconTarget"
+  218 label *label126
+  219 jump *label137 lessThanEq :drawMaterials:target 0
+  220 read *tmp0 processor1 ".core"
+  221 sensor *tmp55 *tmp0 :drawMaterials:item
+  222 op mul *tmp57 *tmp51 88
+  223 op sub :drawItem:barLength 210 *tmp57
+  224 op add :drawItem:textEnd 48 :drawItem:barLength
+  225 op mul *tmp60 :drawItem:barLength *tmp55
+  226 op div *tmp61 *tmp60 :drawMaterials:target
+  227 op min :drawItem:length :drawItem:barLength *tmp61
+  228 op mul *tmp64 :drawMaterials:col 88
+  229 op add :drawItem:iconX 11 *tmp64
+  230 op add :drawItem:barX 22 *tmp64
+  231 op add :drawItem:textX :drawItem:textEnd *tmp64
+  232 draw col %[white]
+  233 op add *tmp72 :drawMaterials:y 5
+  234 draw image :drawItem:iconX *tmp72 :drawMaterials:item 16 0
+  235 draw color 0 128 0 255
+  236 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+  237 draw color 0 255 0 255
+  238 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+  239 op add *tmp74 :drawMaterials:y 7
+  240 print :drawMaterials:target
+  241 draw print :drawItem:textX *tmp74 @right
+  242 label *label127
+  243 label *label128
+  244 op add :drawText.6:x :drawItem:textX 1
+  245 print :drawMaterials:target
+  246 draw print :drawText.6:x *tmp74 @right
+  247 label *label129
+  248 label *label130
+  249 label *label131
+  250 op add :drawMaterials:col :drawMaterials:col 1
+  251 jump *label132 lessThan :drawMaterials:col *tmp51
+  252 set :drawMaterials:col 0
+  253 op sub :drawMaterials:y :drawMaterials:y 15
+  254 label *label132
+  255 label *label133
+  256 label *label134
+  257 op sub :drawMaterials:count :drawMaterials:count 1
+  258 jump *label135 greaterThan :drawMaterials:count 0
+  259 jump *label31 always
+  260 label *label135
+  261 label *label136
+  262 label *label137
+  263 label *label138
+  264 label *label139
+  265 set :drawMaterials:item @titanium
+  266 read :drawMaterials:target processor1 ".titaniumTarget"
+  267 label *label142
+  268 jump *label153 lessThanEq :drawMaterials:target 0
+  269 read *tmp0 processor1 ".core"
+  270 sensor *tmp55 *tmp0 :drawMaterials:item
+  271 op mul *tmp57 *tmp51 88
+  272 op sub :drawItem:barLength 210 *tmp57
+  273 op add :drawItem:textEnd 48 :drawItem:barLength
+  274 op mul *tmp60 :drawItem:barLength *tmp55
+  275 op div *tmp61 *tmp60 :drawMaterials:target
+  276 op min :drawItem:length :drawItem:barLength *tmp61
+  277 op mul *tmp64 :drawMaterials:col 88
+  278 op add :drawItem:iconX 11 *tmp64
+  279 op add :drawItem:barX 22 *tmp64
+  280 op add :drawItem:textX :drawItem:textEnd *tmp64
+  281 draw col %[white]
+  282 op add *tmp72 :drawMaterials:y 5
+  283 draw image :drawItem:iconX *tmp72 :drawMaterials:item 16 0
+  284 draw color 0 128 0 255
+  285 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+  286 draw color 0 255 0 255
+  287 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+  288 op add *tmp74 :drawMaterials:y 7
+  289 print :drawMaterials:target
+  290 draw print :drawItem:textX *tmp74 @right
+  291 label *label143
+  292 label *label144
+  293 op add :drawText.6:x :drawItem:textX 1
+  294 print :drawMaterials:target
+  295 draw print :drawText.6:x *tmp74 @right
+  296 label *label145
+  297 label *label146
+  298 label *label147
+  299 op add :drawMaterials:col :drawMaterials:col 1
+  300 jump *label148 lessThan :drawMaterials:col *tmp51
+  301 set :drawMaterials:col 0
+  302 op sub :drawMaterials:y :drawMaterials:y 15
+  303 label *label148
+  304 label *label149
+  305 label *label150
+  306 op sub :drawMaterials:count :drawMaterials:count 1
+  307 jump *label151 greaterThan :drawMaterials:count 0
+  308 jump *label31 always
+  309 label *label151
+  310 label *label152
+  311 label *label153
+  312 label *label154
+  313 label *label155
+  314 set :drawMaterials:item @metaglass
+  315 read :drawMaterials:target processor1 ".metaglassTarget"
+  316 label *label158
+  317 jump *label169 lessThanEq :drawMaterials:target 0
+  318 read *tmp0 processor1 ".core"
+  319 sensor *tmp55 *tmp0 :drawMaterials:item
+  320 op mul *tmp57 *tmp51 88
+  321 op sub :drawItem:barLength 210 *tmp57
+  322 op add :drawItem:textEnd 48 :drawItem:barLength
+  323 op mul *tmp60 :drawItem:barLength *tmp55
+  324 op div *tmp61 *tmp60 :drawMaterials:target
+  325 op min :drawItem:length :drawItem:barLength *tmp61
+  326 op mul *tmp64 :drawMaterials:col 88
+  327 op add :drawItem:iconX 11 *tmp64
+  328 op add :drawItem:barX 22 *tmp64
+  329 op add :drawItem:textX :drawItem:textEnd *tmp64
+  330 draw col %[white]
+  331 op add *tmp72 :drawMaterials:y 5
+  332 draw image :drawItem:iconX *tmp72 :drawMaterials:item 16 0
+  333 draw color 0 128 0 255
+  334 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+  335 draw color 0 255 0 255
+  336 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+  337 op add *tmp74 :drawMaterials:y 7
+  338 print :drawMaterials:target
+  339 draw print :drawItem:textX *tmp74 @right
+  340 label *label159
+  341 label *label160
+  342 op add :drawText.6:x :drawItem:textX 1
+  343 print :drawMaterials:target
+  344 draw print :drawText.6:x *tmp74 @right
+  345 label *label161
+  346 label *label162
+  347 label *label163
+  348 op add :drawMaterials:col :drawMaterials:col 1
+  349 jump *label164 lessThan :drawMaterials:col *tmp51
+  350 set :drawMaterials:col 0
+  351 op sub :drawMaterials:y :drawMaterials:y 15
+  352 label *label164
+  353 label *label165
+  354 label *label166
+  355 op sub :drawMaterials:count :drawMaterials:count 1
+  356 jump *label167 greaterThan :drawMaterials:count 0
+  357 jump *label31 always
+  358 label *label167
+  359 label *label168
+  360 label *label169
+  361 label *label170
+  362 label *label171
+  363 label *label31
   364 label *label21
   365 draw col %[white]
   366 print "Unit status"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
    71 label *label78
    72 jump *label89 lessThanEq :drawMaterials:target 0
    73 read *tmp0 processor1 ".core"
-    * sensor *tmp55 *tmp0 :drawMaterials:item
+   74 sensor *tmp55 *tmp0 @copper
    75 op mul *tmp57 *tmp51 88
    76 op sub :drawItem:barLength 210 *tmp57
    77 op add :drawItem:textEnd 48 :drawItem:barLength
    78 op mul *tmp60 :drawItem:barLength *tmp55
    79 op div *tmp61 *tmp60 :drawMaterials:target
    80 op min :drawItem:length :drawItem:barLength *tmp61
-    * op mul *tmp64 :drawMaterials:col 88
-    * op add :drawItem:iconX 11 *tmp64
-    * op add :drawItem:barX 22 *tmp64
-    * op add :drawItem:textX :drawItem:textEnd *tmp64
+   81 op mul *tmp64 0 88
+   82 op add :drawItem:iconX 11 0
+   83 op add :drawItem:barX 22 0
+   84 op add :drawItem:textX :drawItem:textEnd 0
    85 draw col %[white]
-    * op add *tmp72 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp72 :drawMaterials:item 16 0
+   86 op add *tmp72 85 5
+   87 draw image 11 90 @copper 16 0
    88 draw color 0 128 0 255
-    * draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+   89 draw rect 22 85 :drawItem:length 10
    90 draw color 0 255 0 255
-    * draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
-    * op add *tmp74 :drawMaterials:y 7
+   91 draw lineRect 22 85 :drawItem:barLength 10
+   92 op add *tmp74 85 7
    93 print :drawMaterials:target
-    * draw print :drawItem:textX *tmp74 @right
+   94 draw print :drawItem:textX 92 @right
    95 label *label79
    96 label *label80
    97 op add :drawText.6:x :drawItem:textX 1
    98 print :drawMaterials:target
-    * draw print :drawText.6:x *tmp74 @right
+   99 draw print :drawText.6:x 92 @right
   100 label *label81
   101 label *label82
   102 label *label83
-    * op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label84 lessThan :drawMaterials:col *tmp51
+  103 op add :drawMaterials:col 0 1
+  104 jump *label84 lessThan 1 *tmp51
   105 set :drawMaterials:col 0
-    * op sub :drawMaterials:y :drawMaterials:y 15
+  106 op sub :drawMaterials:y 85 15
   107 label *label84
   108 label *label85
   109 label *label86
 
   120 label *label94
   121 jump *label105 lessThanEq :drawMaterials:target 0
   122 read *tmp0 processor1 ".core"
-    * sensor *tmp55 *tmp0 :drawMaterials:item
+  123 sensor *tmp55 *tmp0 @lead
   124 op mul *tmp57 *tmp51 88
   125 op sub :drawItem:barLength 210 *tmp57
   126 op add :drawItem:textEnd 48 :drawItem:barLength
 
   133 op add :drawItem:textX :drawItem:textEnd *tmp64
   134 draw col %[white]
   135 op add *tmp72 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp72 :drawMaterials:item 16 0
+  136 draw image :drawItem:iconX *tmp72 @lead 16 0
   137 draw color 0 128 0 255
   138 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   139 draw color 0 255 0 255
 
   169 label *label110
   170 jump *label121 lessThanEq :drawMaterials:target 0
   171 read *tmp0 processor1 ".core"
-    * sensor *tmp55 *tmp0 :drawMaterials:item
+  172 sensor *tmp55 *tmp0 @graphite
   173 op mul *tmp57 *tmp51 88
   174 op sub :drawItem:barLength 210 *tmp57
   175 op add :drawItem:textEnd 48 :drawItem:barLength
 
   182 op add :drawItem:textX :drawItem:textEnd *tmp64
   183 draw col %[white]
   184 op add *tmp72 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp72 :drawMaterials:item 16 0
+  185 draw image :drawItem:iconX *tmp72 @graphite 16 0
   186 draw color 0 128 0 255
   187 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   188 draw color 0 255 0 255
 
   218 label *label126
   219 jump *label137 lessThanEq :drawMaterials:target 0
   220 read *tmp0 processor1 ".core"
-    * sensor *tmp55 *tmp0 :drawMaterials:item
+  221 sensor *tmp55 *tmp0 @silicon
   222 op mul *tmp57 *tmp51 88
   223 op sub :drawItem:barLength 210 *tmp57
   224 op add :drawItem:textEnd 48 :drawItem:barLength
 
   231 op add :drawItem:textX :drawItem:textEnd *tmp64
   232 draw col %[white]
   233 op add *tmp72 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp72 :drawMaterials:item 16 0
+  234 draw image :drawItem:iconX *tmp72 @silicon 16 0
   235 draw color 0 128 0 255
   236 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   237 draw color 0 255 0 255
 
   267 label *label142
   268 jump *label153 lessThanEq :drawMaterials:target 0
   269 read *tmp0 processor1 ".core"
-    * sensor *tmp55 *tmp0 :drawMaterials:item
+  270 sensor *tmp55 *tmp0 @titanium
   271 op mul *tmp57 *tmp51 88
   272 op sub :drawItem:barLength 210 *tmp57
   273 op add :drawItem:textEnd 48 :drawItem:barLength
 
   280 op add :drawItem:textX :drawItem:textEnd *tmp64
   281 draw col %[white]
   282 op add *tmp72 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp72 :drawMaterials:item 16 0
+  283 draw image :drawItem:iconX *tmp72 @titanium 16 0
   284 draw color 0 128 0 255
   285 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   286 draw color 0 255 0 255
 
   316 label *label158
   317 jump *label169 lessThanEq :drawMaterials:target 0
   318 read *tmp0 processor1 ".core"
-    * sensor *tmp55 *tmp0 :drawMaterials:item
+  319 sensor *tmp55 *tmp0 @metaglass
   320 op mul *tmp57 *tmp51 88
   321 op sub :drawItem:barLength 210 *tmp57
   322 op add :drawItem:textEnd 48 :drawItem:barLength
 
   329 op add :drawItem:textX :drawItem:textEnd *tmp64
   330 draw col %[white]
   331 op add *tmp72 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp72 :drawMaterials:item 16 0
+  332 draw image :drawItem:iconX *tmp72 @metaglass 16 0
   333 draw color 0 128 0 255
   334 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   335 draw color 0 255 0 255
 
   347 label *label163
   348 op add :drawMaterials:col :drawMaterials:col 1
   349 jump *label164 lessThan :drawMaterials:col *tmp51
-    * set :drawMaterials:col 0
-    * op sub :drawMaterials:y :drawMaterials:y 15
   350 label *label164
   351 label *label165
   352 label *label166

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
    66 set *tmp51 2
    67 jump *label28 always
    68 label *label28
-    * set :drawMaterials:item @copper
    69 read :drawMaterials:target processor1 ".copperTarget"
    70 label *label78
    71 jump *label89 lessThanEq :drawMaterials:target 0
 
    77 op mul *tmp60 :drawItem:barLength *tmp55
    78 op div *tmp61 *tmp60 :drawMaterials:target
    79 op min :drawItem:length :drawItem:barLength *tmp61
-    * op mul *tmp64 0 88
-    * op add :drawItem:iconX 11 0
-    * op add :drawItem:barX 22 0
-    * op add :drawItem:textX :drawItem:textEnd 0
+   80 op add :drawItem:textX :drawItem:barLength 48
    81 draw col %[white]
-    * op add *tmp72 85 5
    82 draw image 11 90 @copper 16 0
    83 draw color 0 128 0 255
    84 draw rect 22 85 :drawItem:length 10
    85 draw color 0 255 0 255
    86 draw lineRect 22 85 :drawItem:barLength 10
-    * op add *tmp74 85 7
    87 print :drawMaterials:target
    88 draw print :drawItem:textX 92 @right
    89 label *label79
 
   109 label *label89
   110 label *label90
   111 label *label91
-    * set :drawMaterials:item @lead
   112 read :drawMaterials:target processor1 ".leadTarget"
   113 label *label94
   114 jump *label105 lessThanEq :drawMaterials:target 0
 
   157 label *label105
   158 label *label106
   159 label *label107
-    * set :drawMaterials:item @graphite
   160 read :drawMaterials:target processor1 ".graphiteTarget"
   161 label *label110
   162 jump *label121 lessThanEq :drawMaterials:target 0
 
   205 label *label121
   206 label *label122
   207 label *label123
-    * set :drawMaterials:item @silicon
   208 read :drawMaterials:target processor1 ".siliconTarget"
   209 label *label126
   210 jump *label137 lessThanEq :drawMaterials:target 0
 
   253 label *label137
   254 label *label138
   255 label *label139
-    * set :drawMaterials:item @titanium
   256 read :drawMaterials:target processor1 ".titaniumTarget"
   257 label *label142
   258 jump *label153 lessThanEq :drawMaterials:target 0
 
   301 label *label153
   302 label *label154
   303 label *label155
-    * set :drawMaterials:item @metaglass
   304 read :drawMaterials:target processor1 ".metaglassTarget"
   305 label *label158
   306 jump *label169 lessThanEq :drawMaterials:target 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3:
 
    85 draw color 0 255 0 255
    86 draw lineRect 22 85 :drawItem:barLength 10
    87 print :drawMaterials:target
-    * draw print :drawItem:textX 92 @right
+   88 draw print :drawItem:textEnd 92 @right
    89 label *label79
    90 label *label80
-    * op add :drawText.6:x :drawItem:textX 1
+   91 op add :drawText.6:x :drawItem:textEnd 1
    92 print :drawMaterials:target
    93 draw print :drawText.6:x 92 @right
    94 label *label81

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-1 instructions):
 
    77 op mul *tmp60 :drawItem:barLength *tmp55
    78 op div *tmp61 *tmp60 :drawMaterials:target
    79 op min :drawItem:length :drawItem:barLength *tmp61
-    * op add :drawItem:textX :drawItem:barLength 48
    80 draw col %[white]
    81 draw image 11 90 @copper 16 0
    82 draw color 0 128 0 255
 
    87 draw print :drawItem:textEnd 92 @right
    88 label *label79
    89 label *label80
-    * op add :drawText.6:x :drawItem:textEnd 1
+   90 op add :drawText.6:x :drawItem:barLength 49
    91 print :drawMaterials:target
    92 draw print :drawText.6:x 92 @right
    93 label *label81

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-2 instructions):
 
   380 label *label64
   381 label *label63
   382 label *label60
-    * jump *label65 lessThan 1 1
   383 label *label65
   384 label *label66
   385 label *label59
 
   409 label *label73
   410 label *label72
   411 label *label69
-    * jump *label74 lessThan 1 1
   412 label *label74
   413 label *label75
   414 label *label68

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-4 instructions):
 
    38 set *tmp48 ""
    39 jump *label18 greaterThanEq :drawHeader:s 10
    40 set *tmp48 "0"
-    * jump *label18 always
    41 label *label18
    42 print :drawHeader:m
    43 print ":"
 
    63 set *tmp51 1
    64 jump *label28 lessThanEq :drawMaterials:count 2
    65 set *tmp51 2
-    * jump *label28 always
    66 label *label28
    67 read :drawMaterials:target processor1 ".copperTarget"
    68 label *label78
 
   332 label *label162
   333 label *label163
   334 op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label164 lessThan :drawMaterials:col *tmp51
   335 label *label164
   336 label *label165
   337 label *label166
   338 op sub :drawMaterials:count :drawMaterials:count 1
   339 jump *label167 greaterThan :drawMaterials:count 0
-    * jump *label31 always
   340 label *label167
   341 label *label168
   342 label *label169

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-1 instructions):
 
   336 label *label165
   337 label *label166
   338 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label167 greaterThan :drawMaterials:count 0
   339 label *label167
   340 label *label168
   341 label *label169

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    91 label *label81
    92 label *label82
    93 label *label83
-    * op add :drawMaterials:col 0 1
+   94 set :drawMaterials:col 1
    95 jump *label84 lessThan 1 *tmp51
    96 set :drawMaterials:col 0
    97 op sub :drawMaterials:y 85 15
 
   358 read *tmp12 processor1 ".transportTarget"
   359 set :drawItem.1:target *tmp12
   360 read *tmp12 processor1 ".transportTarget"
-    * op div *tmp88 0 :drawItem.1:target
+  361 set *tmp88 0
   362 op min :drawItem.1:length 122 *tmp88
   363 draw col %[white]
   364 draw image 11 34 @poly 16 0

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-2 instructions):
 
   355 label *label51
   356 read *tmp13 processor1 ".transportItem"
   357 jump *label56 notEqual *tmp13 null
-    * read *tmp12 processor1 ".transportTarget"
-    * set :drawItem.1:target *tmp12
+  358 read :drawItem.1:target processor1 ".transportTarget"
   359 read *tmp12 processor1 ".transportTarget"
   360 set *tmp88 0
   361 op min :drawItem.1:length 122 *tmp88
 
   382 label *label56
   383 sensor *tmp105 @unit @totalItems
   384 read *tmp13 processor1 ".transportItem"
-    * read *tmp12 processor1 ".transportTarget"
-    * set :drawItem.2:target *tmp12
+  385 read :drawItem.2:target processor1 ".transportTarget"
   386 read *tmp12 processor1 ".transportTarget"
   387 op mul *tmp110 122 *tmp105
   388 op div *tmp111 *tmp110 :drawItem.2:target

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-3 instructions):
 
   331 label *label161
   332 label *label162
   333 label *label163
-    * op add :drawMaterials:col :drawMaterials:col 1
   334 label *label164
   335 label *label165
   336 label *label166
-    * op sub :drawMaterials:count :drawMaterials:count 1
   337 label *label167
   338 label *label168
   339 label *label169
 
   353 label *label51
   354 read *tmp13 processor1 ".transportItem"
   355 jump *label56 notEqual *tmp13 null
-    * read :drawItem.1:target processor1 ".transportTarget"
   356 read *tmp12 processor1 ".transportTarget"
   357 set *tmp88 0
-    * op min :drawItem.1:length 122 *tmp88
+  358 op min :drawItem.1:length 122 0
   359 draw col %[white]
   360 draw image 11 34 @poly 16 0
   361 draw color 0 128 0 255
-    * draw rect 22 29 :drawItem.1:length 10
+  362 draw rect 22 29 0 10
   363 draw color 0 255 0 255
   364 draw lineRect 22 29 122 10
   365 print *tmp12

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-2 instructions):
 
   354 read *tmp13 processor1 ".transportItem"
   355 jump *label56 notEqual *tmp13 null
   356 read *tmp12 processor1 ".transportTarget"
-    * set *tmp88 0
-    * op min :drawItem.1:length 122 0
   357 draw col %[white]
   358 draw image 11 34 @poly 16 0
   359 draw color 0 128 0 255

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
     0 label *label1
     1 read *tmp38 processor1 "*signature"
     2 jump *label1 notEqual *tmp38 "a3ea14ee033c13eb:v1"
-    * label *label2
     3 jump *label4 notEqual @unit null
     4 label *label77
     5 ubind @poly
-    * label *label3
     6 jump *label77 equal @unit null
     7 label *label4
     8 printflush null
 
    12 write 1 processor1 "@counter"
    13 set .started true
    14 label *label5
-    * label *label6
    15 control enabled switch1 false
    16 label *label7
    17 draw reset
 
    19 draw col %[gold]
    20 print "Building"
    21 draw print 40 161 @bottom
-    * label *label14
-    * label *label13
    22 print "Building"
    23 draw print 41 161 @bottom
-    * label *label16
-    * label *label15
-    * label *label12
    24 draw col %[white]
    25 read *tmp3 processor1 ".nextBlock"
    26 draw image 40 137 *tmp3 32 0
 
    37 print :drawHeader:s
    38 print ""
    39 draw print 168 172 @topRight
-    * label *label20
-    * label *label19
-    * label *label11
    40 print "Materials"
    41 draw print 22 101 @bottomLeft
-    * label *label24
-    * label *label23
    42 print "Materials"
    43 draw print 23 101 @bottomLeft
-    * label *label26
-    * label *label25
-    * label *label22
    44 set :drawMaterials:col 0
    45 set :drawMaterials:y 85
    46 read :drawMaterials:count processor1 ".totalTargets"
 
    49 set *tmp51 2
    50 label *label28
    51 read :drawMaterials:target processor1 ".copperTarget"
-    * label *label78
    52 jump *label89 lessThanEq :drawMaterials:target 0
    53 read *tmp0 processor1 ".core"
    54 sensor *tmp55 *tmp0 @copper
 
    66 draw lineRect 22 85 :drawItem:barLength 10
    67 print :drawMaterials:target
    68 draw print :drawItem:textEnd 92 @right
-    * label *label79
-    * label *label80
    69 op add :drawText.6:x :drawItem:barLength 49
    70 print :drawMaterials:target
    71 draw print :drawText.6:x 92 @right
-    * label *label81
-    * label *label82
-    * label *label83
    72 set :drawMaterials:col 1
    73 jump *label84 lessThan 1 *tmp51
    74 set :drawMaterials:col 0
    75 op sub :drawMaterials:y 85 15
    76 label *label84
-    * label *label85
-    * label *label86
    77 op sub :drawMaterials:count :drawMaterials:count 1
    78 jump *label87 greaterThan :drawMaterials:count 0
    79 jump *label31 always
    80 label *label87
-    * label *label88
    81 label *label89
-    * label *label90
-    * label *label91
    82 read :drawMaterials:target processor1 ".leadTarget"
-    * label *label94
    83 jump *label105 lessThanEq :drawMaterials:target 0
    84 read *tmp0 processor1 ".core"
    85 sensor *tmp55 *tmp0 @lead
 
   103 op add *tmp74 :drawMaterials:y 7
   104 print :drawMaterials:target
   105 draw print :drawItem:textX *tmp74 @right
-    * label *label95
-    * label *label96
   106 op add :drawText.6:x :drawItem:textX 1
   107 print :drawMaterials:target
   108 draw print :drawText.6:x *tmp74 @right
-    * label *label97
-    * label *label98
-    * label *label99
   109 op add :drawMaterials:col :drawMaterials:col 1
   110 jump *label100 lessThan :drawMaterials:col *tmp51
   111 set :drawMaterials:col 0
   112 op sub :drawMaterials:y :drawMaterials:y 15
   113 label *label100
-    * label *label101
-    * label *label102
   114 op sub :drawMaterials:count :drawMaterials:count 1
   115 jump *label103 greaterThan :drawMaterials:count 0
   116 jump *label31 always
   117 label *label103
-    * label *label104
   118 label *label105
-    * label *label106
-    * label *label107
   119 read :drawMaterials:target processor1 ".graphiteTarget"
-    * label *label110
   120 jump *label121 lessThanEq :drawMaterials:target 0
   121 read *tmp0 processor1 ".core"
   122 sensor *tmp55 *tmp0 @graphite
 
   140 op add *tmp74 :drawMaterials:y 7
   141 print :drawMaterials:target
   142 draw print :drawItem:textX *tmp74 @right
-    * label *label111
-    * label *label112
   143 op add :drawText.6:x :drawItem:textX 1
   144 print :drawMaterials:target
   145 draw print :drawText.6:x *tmp74 @right
-    * label *label113
-    * label *label114
-    * label *label115
   146 op add :drawMaterials:col :drawMaterials:col 1
   147 jump *label116 lessThan :drawMaterials:col *tmp51
   148 set :drawMaterials:col 0
   149 op sub :drawMaterials:y :drawMaterials:y 15
   150 label *label116
-    * label *label117
-    * label *label118
   151 op sub :drawMaterials:count :drawMaterials:count 1
   152 jump *label119 greaterThan :drawMaterials:count 0
   153 jump *label31 always
   154 label *label119
-    * label *label120
   155 label *label121
-    * label *label122
-    * label *label123
   156 read :drawMaterials:target processor1 ".siliconTarget"
-    * label *label126
   157 jump *label137 lessThanEq :drawMaterials:target 0
   158 read *tmp0 processor1 ".core"
   159 sensor *tmp55 *tmp0 @silicon
 
   177 op add *tmp74 :drawMaterials:y 7
   178 print :drawMaterials:target
   179 draw print :drawItem:textX *tmp74 @right
-    * label *label127
-    * label *label128
   180 op add :drawText.6:x :drawItem:textX 1
   181 print :drawMaterials:target
   182 draw print :drawText.6:x *tmp74 @right
-    * label *label129
-    * label *label130
-    * label *label131
   183 op add :drawMaterials:col :drawMaterials:col 1
   184 jump *label132 lessThan :drawMaterials:col *tmp51
   185 set :drawMaterials:col 0
   186 op sub :drawMaterials:y :drawMaterials:y 15
   187 label *label132
-    * label *label133
-    * label *label134
   188 op sub :drawMaterials:count :drawMaterials:count 1
   189 jump *label135 greaterThan :drawMaterials:count 0
   190 jump *label31 always
   191 label *label135
-    * label *label136
   192 label *label137
-    * label *label138
-    * label *label139
   193 read :drawMaterials:target processor1 ".titaniumTarget"
-    * label *label142
   194 jump *label153 lessThanEq :drawMaterials:target 0
   195 read *tmp0 processor1 ".core"
   196 sensor *tmp55 *tmp0 @titanium
 
   214 op add *tmp74 :drawMaterials:y 7
   215 print :drawMaterials:target
   216 draw print :drawItem:textX *tmp74 @right
-    * label *label143
-    * label *label144
   217 op add :drawText.6:x :drawItem:textX 1
   218 print :drawMaterials:target
   219 draw print :drawText.6:x *tmp74 @right
-    * label *label145
-    * label *label146
-    * label *label147
   220 op add :drawMaterials:col :drawMaterials:col 1
   221 jump *label148 lessThan :drawMaterials:col *tmp51
   222 set :drawMaterials:col 0
   223 op sub :drawMaterials:y :drawMaterials:y 15
   224 label *label148
-    * label *label149
-    * label *label150
   225 op sub :drawMaterials:count :drawMaterials:count 1
   226 jump *label151 greaterThan :drawMaterials:count 0
   227 jump *label31 always
   228 label *label151
-    * label *label152
   229 label *label153
-    * label *label154
-    * label *label155
   230 read :drawMaterials:target processor1 ".metaglassTarget"
-    * label *label158
   231 jump *label169 lessThanEq :drawMaterials:target 0
   232 read *tmp0 processor1 ".core"
   233 sensor *tmp55 *tmp0 @metaglass
 
   251 op add *tmp74 :drawMaterials:y 7
   252 print :drawMaterials:target
   253 draw print :drawItem:textX *tmp74 @right
-    * label *label159
-    * label *label160
   254 op add :drawText.6:x :drawItem:textX 1
   255 print :drawMaterials:target
   256 draw print :drawText.6:x *tmp74 @right
-    * label *label161
-    * label *label162
-    * label *label163
-    * label *label164
-    * label *label165
-    * label *label166
-    * label *label167
-    * label *label168
   257 label *label169
-    * label *label170
-    * label *label171
   258 label *label31
-    * label *label21
   259 draw col %[white]
   260 print "Unit status"
   261 draw print 22 45 @bottomLeft
-    * label *label53
-    * label *label52
   262 print "Unit status"
   263 draw print 23 45 @bottomLeft
-    * label *label55
-    * label *label54
-    * label *label51
   264 read *tmp13 processor1 ".transportItem"
   265 jump *label56 notEqual *tmp13 null
   266 read *tmp12 processor1 ".transportTarget"
 
   272 draw lineRect 22 29 122 10
   273 print *tmp12
   274 draw print 170 36 @right
-    * label *label62
-    * label *label61
   275 print *tmp12
   276 draw print 171 36 @right
-    * label *label64
-    * label *label63
-    * label *label60
-    * label *label65
-    * label *label66
-    * label *label59
-    * label *label58
   277 jump *label57 always
   278 label *label56
   279 sensor *tmp105 @unit @totalItems
 
   291 draw lineRect 22 29 122 10
   292 print *tmp12
   293 draw print 170 36 @right
-    * label *label71
-    * label *label70
   294 print *tmp12
   295 draw print 171 36 @right
-    * label *label73
-    * label *label72
-    * label *label69
-    * label *label74
-    * label *label75
-    * label *label68
-    * label *label67
   296 label *label57
-    * label *label50
   297 drawflush display1
-    * label *label10
   298 print "[gold]Building "
   299 read *tmp3 processor1 ".nextBlock"
   300 print *tmp3
 
   318 print *tmp129
   319 print "\n"
   320 printflush message1
-    * label *label76
-    * label *label8
   321 sensor *tmp130 switch1 @enabled
   322 jump *label7 equal *tmp130 false
-    * label *label9
   323 set .started null
   324 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-5 instructions):
 
    75 op sub :drawMaterials:y 85 15
    76 label *label84
    77 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label87 greaterThan :drawMaterials:count 0
-    * jump *label31 always
+   78 jump *label31 lessThanEq :drawMaterials:count 0
    79 label *label87
    80 label *label89
    81 read :drawMaterials:target processor1 ".leadTarget"
 
   111 op sub :drawMaterials:y :drawMaterials:y 15
   112 label *label100
   113 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label103 greaterThan :drawMaterials:count 0
-    * jump *label31 always
+  114 jump *label31 lessThanEq :drawMaterials:count 0
   115 label *label103
   116 label *label105
   117 read :drawMaterials:target processor1 ".graphiteTarget"
 
   147 op sub :drawMaterials:y :drawMaterials:y 15
   148 label *label116
   149 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label119 greaterThan :drawMaterials:count 0
-    * jump *label31 always
+  150 jump *label31 lessThanEq :drawMaterials:count 0
   151 label *label119
   152 label *label121
   153 read :drawMaterials:target processor1 ".siliconTarget"
 
   183 op sub :drawMaterials:y :drawMaterials:y 15
   184 label *label132
   185 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label135 greaterThan :drawMaterials:count 0
-    * jump *label31 always
+  186 jump *label31 lessThanEq :drawMaterials:count 0
   187 label *label135
   188 label *label137
   189 read :drawMaterials:target processor1 ".titaniumTarget"
 
   219 op sub :drawMaterials:y :drawMaterials:y 15
   220 label *label148
   221 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label151 greaterThan :drawMaterials:count 0
-    * jump *label31 always
+  222 jump *label31 lessThanEq :drawMaterials:count 0
   223 label *label151
   224 label *label153
   225 read :drawMaterials:target processor1 ".metaglassTarget"

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
    76 label *label84
    77 op sub :drawMaterials:count :drawMaterials:count 1
    78 jump *label31 lessThanEq :drawMaterials:count 0
-    * label *label87
    79 label *label89
    80 read :drawMaterials:target processor1 ".leadTarget"
    81 jump *label105 lessThanEq :drawMaterials:target 0
 
   111 label *label100
   112 op sub :drawMaterials:count :drawMaterials:count 1
   113 jump *label31 lessThanEq :drawMaterials:count 0
-    * label *label103
   114 label *label105
   115 read :drawMaterials:target processor1 ".graphiteTarget"
   116 jump *label121 lessThanEq :drawMaterials:target 0
 
   146 label *label116
   147 op sub :drawMaterials:count :drawMaterials:count 1
   148 jump *label31 lessThanEq :drawMaterials:count 0
-    * label *label119
   149 label *label121
   150 read :drawMaterials:target processor1 ".siliconTarget"
   151 jump *label137 lessThanEq :drawMaterials:target 0
 
   181 label *label132
   182 op sub :drawMaterials:count :drawMaterials:count 1
   183 jump *label31 lessThanEq :drawMaterials:count 0
-    * label *label135
   184 label *label137
   185 read :drawMaterials:target processor1 ".titaniumTarget"
   186 jump *label153 lessThanEq :drawMaterials:target 0
 
   216 label *label148
   217 op sub :drawMaterials:count :drawMaterials:count 1
   218 jump *label31 lessThanEq :drawMaterials:count 0
-    * label *label151
   219 label *label153
   220 read :drawMaterials:target processor1 ".metaglassTarget"
   221 jump *label169 lessThanEq :drawMaterials:target 0

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-1 instructions):
 
   311 sensor *tmp130 switch1 @enabled
   312 jump *label7 equal *tmp130 false
   313 set .started null
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-10 instructions):
 
    32 set *tmp48 "0"
    33 label *label18
    34 print :drawHeader:m
-    * print ":"
-    * print *tmp48
-    * print :drawHeader:s
-    * print ""
+   35 print ":{0}{0}"
+   36 format *tmp48
+   37 format :drawHeader:s
    38 draw print 168 172 @topRight
    39 print "Materials"
    40 draw print 22 101 @bottomLeft
 
   284 draw print 171 36 @right
   285 label *label57
   286 drawflush display1
-    * print "[gold]Building "
+  287 print "[gold]Building {0}\n==================================[]\n{0}\n{0}{0} ({0})\n{0}\n"
   288 read *tmp3 processor1 ".nextBlock"
-    * print *tmp3
-    * print "\n"
-    * print "==================================[]"
-    * print "\n"
+  289 format *tmp3
   290 read *tmp128 processor1 ".status1"
-    * print *tmp128
-    * print "\n"
+  291 format *tmp128
   292 read *tmp15 processor1 ".status2"
-    * print *tmp15
+  293 format *tmp15
   294 read *tmp16 processor1 ".item2"
-    * print *tmp16
-    * print " "
-    * print "("
+  295 format *tmp16
   296 read *tmp17 processor1 ".block2"
-    * print *tmp17
-    * print ")"
-    * print "\n"
+  297 format *tmp17
   298 read *tmp129 processor1 ".status3"
-    * print *tmp129
-    * print "\n"
+  299 format *tmp129
   300 printflush message1
   301 sensor *tmp130 switch1 @enabled
   302 jump *label7 equal *tmp130 false

Final code before resolving virtual instructions:

        label *label1                                                Display.mnd: require "CoreBuilder.mnd" remote processor1;
    0:  read *tmp38 processor1 "*signature"                          ...
    1:  jump *label1 notEqual *tmp38 "a3ea14ee033c13eb:v1"           ...
    2:  jump *label4 notEqual @unit null                             Display.mnd: while @unit == null do
        label *label77                                               ...
    3:  ubind @poly                                                  Display.mnd: ubind(@poly);
    4:  jump *label77 equal @unit null                               Display.mnd: while @unit == null do
        label *label4                                                ...
    5:  printflush null                                              Display.mnd: printflush(null);
    6:  drawflush null                                               Display.mnd: drawflush(null);
    7:  jump *label5 notEqual .started null                          Display.mnd: if started == null then
    8:  write false processor1 ":buildCore*finished"                 Display.mnd: async(buildCore());
    9:  write 1 processor1 "@counter"                                ...
   10:  set .started true                                            Display.mnd: started = true;
        label *label5                                                Display.mnd: if started == null then
   11:  control enabled switch1 false 0 0 0                          Display.mnd: switch1.enabled = false;
        label *label7                                                Display.mnd: do
   12:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
   13:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
   14:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
   15:  print "Building"                                             Display.mnd: print(text);
   16:  draw print 40 161 @bottom                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   17:  print "Building"                                             Display.mnd: print(text);
   18:  draw print 41 161 @bottom                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   19:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   20:  read *tmp3 processor1 ".nextBlock"                           Display.mnd: image(HEADER_X, HEADER_Y - 24, nextBlock, 32, 0);
   21:  draw image 40 137 *tmp3 32 0 0                               ...
   22:  op floor :drawHeader:t @second 0                             Display.mnd: var t = floor(@second);
   23:  op idiv :drawHeader:m :drawHeader:t 60                       Display.mnd: var m = t \ 60;
   24:  op mod :drawHeader:s :drawHeader:t 60                        Display.mnd: var s = t % 60;
   25:  set *tmp48 ""                                                Display.mnd: print(m, ":", s < 10 ? "0" : "", s);
   26:  jump *label18 greaterThanEq :drawHeader:s 10                 ...
   27:  set *tmp48 "0"                                               ...
        label *label18                                               ...
   28:  print :drawHeader:m                                          ...
   29:  print ":{0}{0}"                                              ...
   30:  format *tmp48                                                ...
   31:  format :drawHeader:s                                         ...
   32:  draw print 168 172 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   33:  print "Materials"                                            Display.mnd: print(text);
   34:  draw print 22 101 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   35:  print "Materials"                                            Display.mnd: print(text);
   36:  draw print 23 101 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   37:  set :drawMaterials:col 0                                     Display.mnd: var col = 0, y = 85;
   38:  set :drawMaterials:y 85                                      ...
   39:  read :drawMaterials:count processor1 ".totalTargets"         Display.mnd: var count = totalTargets;
   40:  set *tmp51 1                                                 Display.mnd: var columns = count > 2 ? 2 : 1;
   41:  jump *label28 lessThanEq :drawMaterials:count 2              ...
   42:  set *tmp51 2                                                 ...
        label *label28                                               ...
   43:  read :drawMaterials:target processor1 ".copperTarget"        Display.mnd: for var item, target in
   44:  jump *label89 lessThanEq :drawMaterials:target 0             Display.mnd: if target > 0 then
   45:  read *tmp0 processor1 ".core"                                Display.mnd: drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
   46:  sensor *tmp55 *tmp0 @copper                                  ...
   47:  op mul *tmp57 *tmp51 88                                      Display.mnd: var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
   48:  op sub :drawItem:barLength 210 *tmp57                        ...
   49:  op add :drawItem:textEnd 48 :drawItem:barLength              Display.mnd: var textEnd = 170 - BAR_LENGTH + barLength;
   50:  op mul *tmp60 :drawItem:barLength *tmp55                     Display.mnd: var length = min(barLength, barLength * current / target);
   51:  op div *tmp61 *tmp60 :drawMaterials:target                   ...
   52:  op min :drawItem:length :drawItem:barLength *tmp61           ...
   53:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   54:  draw image 11 90 @copper 16 0 0                              Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
   55:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
   56:  draw rect 22 85 :drawItem:length 10 0 0                      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
   57:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
   58:  draw lineRect 22 85 :drawItem:barLength 10 0 0               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
   59:  print :drawMaterials:target                                  Display.mnd: print(text);
   60:  draw print :drawItem:textEnd 92 @right                       Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   61:  op add :drawText.6:x :drawItem:barLength 49                  Display.mnd: drawText(x + 1, y, alignment, text);
   62:  print :drawMaterials:target                                  Display.mnd: print(text);
   63:  draw print :drawText.6:x 92 @right                           Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   64:  set :drawMaterials:col 1                                     Display.mnd: if ++col >= columns then
   65:  jump *label84 lessThan 1 *tmp51                              ...
   66:  set :drawMaterials:col 0                                     Display.mnd: col = 0;
   67:  op sub :drawMaterials:y 85 15                                Display.mnd: y -= ROW_HEIGHT;
        label *label84                                               Display.mnd: if ++col >= columns then
   68:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
   69:  jump *label31 lessThanEq :drawMaterials:count 0              ...
        label *label89                                               Display.mnd: if target > 0 then
   70:  read :drawMaterials:target processor1 ".leadTarget"          Display.mnd: for var item, target in
   71:  jump *label105 lessThanEq :drawMaterials:target 0            Display.mnd: if target > 0 then
   72:  read *tmp0 processor1 ".core"                                Display.mnd: drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
   73:  sensor *tmp55 *tmp0 @lead                                    ...
   74:  op mul *tmp57 *tmp51 88                                      Display.mnd: var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
   75:  op sub :drawItem:barLength 210 *tmp57                        ...
   76:  op add :drawItem:textEnd 48 :drawItem:barLength              Display.mnd: var textEnd = 170 - BAR_LENGTH + barLength;
   77:  op mul *tmp60 :drawItem:barLength *tmp55                     Display.mnd: var length = min(barLength, barLength * current / target);
   78:  op div *tmp61 *tmp60 :drawMaterials:target                   ...
   79:  op min :drawItem:length :drawItem:barLength *tmp61           ...
   80:  op mul *tmp64 :drawMaterials:col 88                          Display.mnd: var iconX = ICON_X + col * 176 / 2;
   81:  op add :drawItem:iconX 11 *tmp64                             ...
   82:  op add :drawItem:barX 22 *tmp64                              Display.mnd: var barX = BAR_X + col * 176 / 2;
   83:  op add :drawItem:textX :drawItem:textEnd *tmp64              Display.mnd: var textX = textEnd + col * 176 / 2;
   84:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   85:  op add *tmp72 :drawMaterials:y 5                             Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
   86:  draw image :drawItem:iconX *tmp72 @lead 16 0 0               ...
   87:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
   88:  draw rect :drawItem:barX :drawMaterials:y :drawItem:length 1 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
   89:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
   90:  draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barL Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
   91:  op add *tmp74 :drawMaterials:y 7                             Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, count);
   92:  print :drawMaterials:target                                  Display.mnd: print(text);
   93:  draw print :drawItem:textX *tmp74 @right                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   94:  op add :drawText.6:x :drawItem:textX 1                       Display.mnd: drawText(x + 1, y, alignment, text);
   95:  print :drawMaterials:target                                  Display.mnd: print(text);
   96:  draw print :drawText.6:x *tmp74 @right                       Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   97:  op add :drawMaterials:col :drawMaterials:col 1               Display.mnd: if ++col >= columns then
   98:  jump *label100 lessThan :drawMaterials:col *tmp51            ...
   99:  set :drawMaterials:col 0                                     Display.mnd: col = 0;
  100:  op sub :drawMaterials:y :drawMaterials:y 15                  Display.mnd: y -= ROW_HEIGHT;
        label *label100                                              Display.mnd: if ++col >= columns then
  101:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  102:  jump *label31 lessThanEq :drawMaterials:count 0              ...
        label *label105                                              Display.mnd: if target > 0 then
  103:  read :drawMaterials:target processor1 ".graphiteTarget"      Display.mnd: for var item, target in
  104:  jump *label121 lessThanEq :drawMaterials:target 0            Display.mnd: if target > 0 then
  105:  read *tmp0 processor1 ".core"                                Display.mnd: drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
  106:  sensor *tmp55 *tmp0 @graphite                                ...
  107:  op mul *tmp57 *tmp51 88                                      Display.mnd: var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  108:  op sub :drawItem:barLength 210 *tmp57                        ...
  109:  op add :drawItem:textEnd 48 :drawItem:barLength              Display.mnd: var textEnd = 170 - BAR_LENGTH + barLength;
  110:  op mul *tmp60 :drawItem:barLength *tmp55                     Display.mnd: var length = min(barLength, barLength * current / target);
  111:  op div *tmp61 *tmp60 :drawMaterials:target                   ...
  112:  op min :drawItem:length :drawItem:barLength *tmp61           ...
  113:  op mul *tmp64 :drawMaterials:col 88                          Display.mnd: var iconX = ICON_X + col * 176 / 2;
  114:  op add :drawItem:iconX 11 *tmp64                             ...
  115:  op add :drawItem:barX 22 *tmp64                              Display.mnd: var barX = BAR_X + col * 176 / 2;
  116:  op add :drawItem:textX :drawItem:textEnd *tmp64              Display.mnd: var textX = textEnd + col * 176 / 2;
  117:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  118:  op add *tmp72 :drawMaterials:y 5                             Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  119:  draw image :drawItem:iconX *tmp72 @graphite 16 0 0           ...
  120:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  121:  draw rect :drawItem:barX :drawMaterials:y :drawItem:length 1 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  122:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  123:  draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barL Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  124:  op add *tmp74 :drawMaterials:y 7                             Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, count);
  125:  print :drawMaterials:target                                  Display.mnd: print(text);
  126:  draw print :drawItem:textX *tmp74 @right                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  127:  op add :drawText.6:x :drawItem:textX 1                       Display.mnd: drawText(x + 1, y, alignment, text);
  128:  print :drawMaterials:target                                  Display.mnd: print(text);
  129:  draw print :drawText.6:x *tmp74 @right                       Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  130:  op add :drawMaterials:col :drawMaterials:col 1               Display.mnd: if ++col >= columns then
  131:  jump *label116 lessThan :drawMaterials:col *tmp51            ...
  132:  set :drawMaterials:col 0                                     Display.mnd: col = 0;
  133:  op sub :drawMaterials:y :drawMaterials:y 15                  Display.mnd: y -= ROW_HEIGHT;
        label *label116                                              Display.mnd: if ++col >= columns then
  134:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  135:  jump *label31 lessThanEq :drawMaterials:count 0              ...
        label *label121                                              Display.mnd: if target > 0 then
  136:  read :drawMaterials:target processor1 ".siliconTarget"       Display.mnd: for var item, target in
  137:  jump *label137 lessThanEq :drawMaterials:target 0            Display.mnd: if target > 0 then
  138:  read *tmp0 processor1 ".core"                                Display.mnd: drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
  139:  sensor *tmp55 *tmp0 @silicon                                 ...
  140:  op mul *tmp57 *tmp51 88                                      Display.mnd: var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  141:  op sub :drawItem:barLength 210 *tmp57                        ...
  142:  op add :drawItem:textEnd 48 :drawItem:barLength              Display.mnd: var textEnd = 170 - BAR_LENGTH + barLength;
  143:  op mul *tmp60 :drawItem:barLength *tmp55                     Display.mnd: var length = min(barLength, barLength * current / target);
  144:  op div *tmp61 *tmp60 :drawMaterials:target                   ...
  145:  op min :drawItem:length :drawItem:barLength *tmp61           ...
  146:  op mul *tmp64 :drawMaterials:col 88                          Display.mnd: var iconX = ICON_X + col * 176 / 2;
  147:  op add :drawItem:iconX 11 *tmp64                             ...
  148:  op add :drawItem:barX 22 *tmp64                              Display.mnd: var barX = BAR_X + col * 176 / 2;
  149:  op add :drawItem:textX :drawItem:textEnd *tmp64              Display.mnd: var textX = textEnd + col * 176 / 2;
  150:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  151:  op add *tmp72 :drawMaterials:y 5                             Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  152:  draw image :drawItem:iconX *tmp72 @silicon 16 0 0            ...
  153:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  154:  draw rect :drawItem:barX :drawMaterials:y :drawItem:length 1 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  155:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  156:  draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barL Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  157:  op add *tmp74 :drawMaterials:y 7                             Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, count);
  158:  print :drawMaterials:target                                  Display.mnd: print(text);
  159:  draw print :drawItem:textX *tmp74 @right                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  160:  op add :drawText.6:x :drawItem:textX 1                       Display.mnd: drawText(x + 1, y, alignment, text);
  161:  print :drawMaterials:target                                  Display.mnd: print(text);
  162:  draw print :drawText.6:x *tmp74 @right                       Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  163:  op add :drawMaterials:col :drawMaterials:col 1               Display.mnd: if ++col >= columns then
  164:  jump *label132 lessThan :drawMaterials:col *tmp51            ...
  165:  set :drawMaterials:col 0                                     Display.mnd: col = 0;
  166:  op sub :drawMaterials:y :drawMaterials:y 15                  Display.mnd: y -= ROW_HEIGHT;
        label *label132                                              Display.mnd: if ++col >= columns then
  167:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  168:  jump *label31 lessThanEq :drawMaterials:count 0              ...
        label *label137                                              Display.mnd: if target > 0 then
  169:  read :drawMaterials:target processor1 ".titaniumTarget"      Display.mnd: for var item, target in
  170:  jump *label153 lessThanEq :drawMaterials:target 0            Display.mnd: if target > 0 then
  171:  read *tmp0 processor1 ".core"                                Display.mnd: drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
  172:  sensor *tmp55 *tmp0 @titanium                                ...
  173:  op mul *tmp57 *tmp51 88                                      Display.mnd: var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  174:  op sub :drawItem:barLength 210 *tmp57                        ...
  175:  op add :drawItem:textEnd 48 :drawItem:barLength              Display.mnd: var textEnd = 170 - BAR_LENGTH + barLength;
  176:  op mul *tmp60 :drawItem:barLength *tmp55                     Display.mnd: var length = min(barLength, barLength * current / target);
  177:  op div *tmp61 *tmp60 :drawMaterials:target                   ...
  178:  op min :drawItem:length :drawItem:barLength *tmp61           ...
  179:  op mul *tmp64 :drawMaterials:col 88                          Display.mnd: var iconX = ICON_X + col * 176 / 2;
  180:  op add :drawItem:iconX 11 *tmp64                             ...
  181:  op add :drawItem:barX 22 *tmp64                              Display.mnd: var barX = BAR_X + col * 176 / 2;
  182:  op add :drawItem:textX :drawItem:textEnd *tmp64              Display.mnd: var textX = textEnd + col * 176 / 2;
  183:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  184:  op add *tmp72 :drawMaterials:y 5                             Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  185:  draw image :drawItem:iconX *tmp72 @titanium 16 0 0           ...
  186:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  187:  draw rect :drawItem:barX :drawMaterials:y :drawItem:length 1 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  188:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  189:  draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barL Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  190:  op add *tmp74 :drawMaterials:y 7                             Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, count);
  191:  print :drawMaterials:target                                  Display.mnd: print(text);
  192:  draw print :drawItem:textX *tmp74 @right                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  193:  op add :drawText.6:x :drawItem:textX 1                       Display.mnd: drawText(x + 1, y, alignment, text);
  194:  print :drawMaterials:target                                  Display.mnd: print(text);
  195:  draw print :drawText.6:x *tmp74 @right                       Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  196:  op add :drawMaterials:col :drawMaterials:col 1               Display.mnd: if ++col >= columns then
  197:  jump *label148 lessThan :drawMaterials:col *tmp51            ...
  198:  set :drawMaterials:col 0                                     Display.mnd: col = 0;
  199:  op sub :drawMaterials:y :drawMaterials:y 15                  Display.mnd: y -= ROW_HEIGHT;
        label *label148                                              Display.mnd: if ++col >= columns then
  200:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  201:  jump *label31 lessThanEq :drawMaterials:count 0              ...
        label *label153                                              Display.mnd: if target > 0 then
  202:  read :drawMaterials:target processor1 ".metaglassTarget"     Display.mnd: for var item, target in
  203:  jump *label169 lessThanEq :drawMaterials:target 0            Display.mnd: if target > 0 then
  204:  read *tmp0 processor1 ".core"                                Display.mnd: drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
  205:  sensor *tmp55 *tmp0 @metaglass                               ...
  206:  op mul *tmp57 *tmp51 88                                      Display.mnd: var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  207:  op sub :drawItem:barLength 210 *tmp57                        ...
  208:  op add :drawItem:textEnd 48 :drawItem:barLength              Display.mnd: var textEnd = 170 - BAR_LENGTH + barLength;
  209:  op mul *tmp60 :drawItem:barLength *tmp55                     Display.mnd: var length = min(barLength, barLength * current / target);
  210:  op div *tmp61 *tmp60 :drawMaterials:target                   ...
  211:  op min :drawItem:length :drawItem:barLength *tmp61           ...
  212:  op mul *tmp64 :drawMaterials:col 88                          Display.mnd: var iconX = ICON_X + col * 176 / 2;
  213:  op add :drawItem:iconX 11 *tmp64                             ...
  214:  op add :drawItem:barX 22 *tmp64                              Display.mnd: var barX = BAR_X + col * 176 / 2;
  215:  op add :drawItem:textX :drawItem:textEnd *tmp64              Display.mnd: var textX = textEnd + col * 176 / 2;
  216:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  217:  op add *tmp72 :drawMaterials:y 5                             Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  218:  draw image :drawItem:iconX *tmp72 @metaglass 16 0 0          ...
  219:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  220:  draw rect :drawItem:barX :drawMaterials:y :drawItem:length 1 Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  221:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  222:  draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barL Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  223:  op add *tmp74 :drawMaterials:y 7                             Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, count);
  224:  print :drawMaterials:target                                  Display.mnd: print(text);
  225:  draw print :drawItem:textX *tmp74 @right                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  226:  op add :drawText.6:x :drawItem:textX 1                       Display.mnd: drawText(x + 1, y, alignment, text);
  227:  print :drawMaterials:target                                  Display.mnd: print(text);
  228:  draw print :drawText.6:x *tmp74 @right                       Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
        label *label169                                              Display.mnd: if target > 0 then
        label *label31                                               Display.mnd: for var item, target in
  229:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  230:  print "Unit status"                                          Display.mnd: print(text);
  231:  draw print 22 45 @bottomLeft                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  232:  print "Unit status"                                          Display.mnd: print(text);
  233:  draw print 23 45 @bottomLeft                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  234:  read *tmp13 processor1 ".transportItem"                      Display.mnd: if transportItem == null then
  235:  jump *label56 notEqual *tmp13 null                           ...
  236:  read *tmp12 processor1 ".transportTarget"                    Display.mnd: drawItem(ref col, ref y, 1, item, items, transportTarget, transportTarget);
  237:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  238:  draw image 11 34 @poly 16 0 0                                Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  239:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  240:  draw rect 22 29 0 10 0 0                                     Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  241:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  242:  draw lineRect 22 29 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  243:  print *tmp12                                                 Display.mnd: print(text);
  244:  draw print 170 36 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  245:  print *tmp12                                                 Display.mnd: print(text);
  246:  draw print 171 36 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  247:  jump *label57 always 0 0                                     Display.mnd: if transportItem == null then
        label *label56                                               ...
  248:  sensor *tmp105 @unit @totalItems                             Display.mnd: drawUnit(transportItem, @unit.@totalItems, ref y);
  249:  read *tmp13 processor1 ".transportItem"                      ...
  250:  read :drawItem.2:target processor1 ".transportTarget"        Display.mnd: drawItem(ref col, ref y, 1, item, items, transportTarget, transportTarget);
  251:  read *tmp12 processor1 ".transportTarget"                    ...
  252:  op mul *tmp110 122 *tmp105                                   Display.mnd: var length = min(barLength, barLength * current / target);
  253:  op div *tmp111 *tmp110 :drawItem.2:target                    ...
  254:  op min :drawItem.2:length 122 *tmp111                        ...
  255:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  256:  draw image 11 34 *tmp13 16 0 0                               Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  257:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  258:  draw rect 22 29 :drawItem.2:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  259:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  260:  draw lineRect 22 29 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  261:  print *tmp12                                                 Display.mnd: print(text);
  262:  draw print 170 36 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  263:  print *tmp12                                                 Display.mnd: print(text);
  264:  draw print 171 36 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
        label *label57                                               Display.mnd: if transportItem == null then
  265:  drawflush display1                                           Display.mnd: drawflush(display1);
  266:  print "[gold]Building {0}\n================================= Display.mnd: println($"[gold]Building $nextBlock");
  267:  read *tmp3 processor1 ".nextBlock"                           ...
  268:  format *tmp3                                                 ...
  269:  read *tmp128 processor1 ".status1"                           Display.mnd: println(status1);
  270:  format *tmp128                                               ...
  271:  read *tmp15 processor1 ".status2"                            Display.mnd: println($"$status2$item2 ($block2)");
  272:  format *tmp15                                                ...
  273:  read *tmp16 processor1 ".item2"                              ...
  274:  format *tmp16                                                ...
  275:  read *tmp17 processor1 ".block2"                             ...
  276:  format *tmp17                                                ...
  277:  read *tmp129 processor1 ".status3"                           Display.mnd: println(status3);
  278:  format *tmp129                                               ...
  279:  printflush message1                                          Display.mnd: printflush(message1);
  280:  sensor *tmp130 switch1 @enabled                              Display.mnd: while !switch1.enabled;
  281:  jump *label7 equal *tmp130 false                             Display.mnd: do
  282:  set .started null                                            Display.mnd: started = null;


Performance: parsed in 455 ms, compiled in 366 ms, optimized in 451 ms, run in 16 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (1 steps):
The program didn't generate any output.
Execution exception at instruction 0: read *tmp38 processor1 "*signature":
Variable 'processor1' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
