  1689 instructions before optimizations.
   144 instructions eliminated by Temp Variables Elimination (2 passes, 8 iterations).
   127 instructions eliminated by Dead Code Elimination (7 iterations).
C:\Home\golem\jam-202507\Display.mnd:13:5 Variable 'coreX' is not used.
C:\Home\golem\jam-202507\Display.mnd:13:16 Variable 'coreY' is not used.
C:\Home\golem\jam-202507\Display.mnd:393:5 Variable 'mapw' is not used.
C:\Home\golem\jam-202507\Display.mnd:393:19 Variable 'maph' is not used.
C:\Home\golem\jam-202507\Display.mnd:486:9 Variable 'displayStorage.head' is not used.
C:\Home\golem\jam-202507\Display.mnd:506:13 Variable 'displayStorage.item' is not used.
     3 instructions eliminated by Jump Normalization (2 passes, 7 iterations).
    40 instructions eliminated by Jump Optimization (7 iterations).
    32 instructions eliminated by Single Step Elimination (3 passes, 10 iterations).
     2 instructions eliminated by Expression Optimization (2 passes, 5 iterations).
    21 instructions eliminated by If Expression Optimization (6 iterations).
   577 instructions eliminated by Data Flow Optimization (7 passes, 29 iterations).
     1 loops improved by Loop Hoisting.
     1 instructions modified by Loop Optimization (5 iterations).
     1 loops improved by Loop Optimization.
    69 instructions added by Loop Unrolling (12 iterations).
     3 loops unrolled by Loop Unrolling.
   115 instructions added by Function Inlining (12 iterations).
     6 function calls inlined by Function Inlining.
     1 jump tables inlined by Array Optimization.
     3 instructions eliminated by Jump Straightening (7 iterations).
     8 instructions updated by Jump Threading.
     4 instructions eliminated by Unreachable Code Elimination (2 iterations).
    16 instructions eliminated by Print Merging.
   902 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 187):
    Unroll iteration loop at Display.mnd:253:13                  size   +49, benefit       14.1, efficiency      0.287
  ! Unroll iteration loop at Display.mnd:271:13                  size  +190, benefit       26.6, efficiency      0.140
  * Unroll iteration loop at Display.mnd:493:9                   size   -17, benefit      109.4, efficiency   Infinity (-21 instructions)
    Unroll iteration loop at Display.mnd:506:5                   size   +37, benefit      218.8, efficiency      5.912
  ! Inline function 'drawHeader' defined at Display.mnd:130:1    size  +260, benefit      271.9, efficiency      1.046
    Inline function 'setupScale' defined at Display.mnd:429:1    size    +3, benefit      268.4, efficiency     89.453
    Inline function 'drawBlock' defined at Display.mnd:436:1     size   +38, benefit      410.2, efficiency     10.794
    Inline function call at Display.mnd:79:5                     size   +87, benefit       18.8, efficiency      0.216
    Inline function call at Display.mnd:452:5                    size   +87, benefit        9.4, efficiency      0.108
    Inline function call at Display.mnd:459:9                    size    +2, benefit        4.7, efficiency      2.344
    Inline function call at Display.mnd:466:9                    size   +87, benefit      234.4, efficiency      2.694
    Inline function call at Display.mnd:467:9                    size   +39, benefit      273.4, efficiency      7.011
    Inline function call at Display.mnd:472:13                   size   +39, benefit      136.7, efficiency      3.506
    Inline function call at Display.mnd:378:5                    size   +87, benefit        9.4, efficiency      0.108
    Inline function call at Display.mnd:441:9                    size    +2, benefit      175.8, efficiency     87.891
    Inline function call at Display.mnd:445:9                    size    +2, benefit       87.9, efficiency     43.945
    Inline read jump table of array 'BLOCKS'                     size    -3, benefit       78.1, efficiency   Infinity
    Inline 'BLOCKS' read access at Display.mnd:472:23            size   +49, benefit       78.1, efficiency      1.594

Pass 1: speed optimization selection (cost limit 208):
    Unroll iteration loop at Display.mnd:253:13                  size   +49, benefit       14.1, efficiency      0.287
    Unroll iteration loop at Display.mnd:271:13                  size  +190, benefit       26.6, efficiency      0.140
    Unroll iteration loop at Display.mnd:506:5                   size   +37, benefit      218.8, efficiency      5.912
  ! Inline function 'drawHeader' defined at Display.mnd:130:1    size  +260, benefit      271.9, efficiency      1.046
    Inline function 'setupScale' defined at Display.mnd:429:1    size    +3, benefit      268.4, efficiency     89.453
    Inline function 'drawBlock' defined at Display.mnd:436:1     size   +38, benefit      410.2, efficiency     10.794
    Inline function call at Display.mnd:79:5                     size   +87, benefit       18.8, efficiency      0.216
    Inline function call at Display.mnd:452:5                    size   +87, benefit        9.4, efficiency      0.108
    Inline function call at Display.mnd:459:9                    size    +2, benefit        4.7, efficiency      2.344
    Inline function call at Display.mnd:466:9                    size   +87, benefit      234.4, efficiency      2.694
    Inline function call at Display.mnd:467:9                    size   +39, benefit      273.4, efficiency      7.011
    Inline function call at Display.mnd:472:13                   size   +39, benefit      136.7, efficiency      3.506
    Inline function call at Display.mnd:378:5                    size   +87, benefit        9.4, efficiency      0.108
    Inline function call at Display.mnd:441:9                    size    +2, benefit      175.8, efficiency     87.891
    Inline function call at Display.mnd:445:9                    size    +2, benefit       87.9, efficiency     43.945
  * Inline read jump table of array 'BLOCKS'                     size    -3, benefit       78.1, efficiency   Infinity (-3 instructions)
    Inline 'BLOCKS' read access at Display.mnd:472:23            size   +49, benefit       78.1, efficiency      1.594

Pass 1: speed optimization selection (cost limit 211):
    Unroll iteration loop at Display.mnd:253:13                  size   +49, benefit       14.1, efficiency      0.287
    Unroll iteration loop at Display.mnd:271:13                  size  +190, benefit       26.6, efficiency      0.140
    Unroll iteration loop at Display.mnd:506:5                   size   +37, benefit      218.8, efficiency      5.912
  ! Inline function 'drawHeader' defined at Display.mnd:130:1    size  +260, benefit      271.9, efficiency      1.046
  * Inline function 'setupScale' defined at Display.mnd:429:1    size    +3, benefit      268.4, efficiency     89.453 (-7 instructions)
    Inline function 'drawBlock' defined at Display.mnd:436:1     size   +38, benefit      410.2, efficiency     10.794
    Inline function call at Display.mnd:79:5                     size   +87, benefit       18.8, efficiency      0.216
    Inline function call at Display.mnd:452:5                    size   +87, benefit        9.4, efficiency      0.108
    Inline function call at Display.mnd:459:9                    size    +2, benefit        4.7, efficiency      2.344
    Inline function call at Display.mnd:466:9                    size   +87, benefit      234.4, efficiency      2.694
    Inline function call at Display.mnd:467:9                    size   +39, benefit      273.4, efficiency      7.011
    Inline function call at Display.mnd:472:13                   size   +39, benefit      136.7, efficiency      3.506
    Inline function call at Display.mnd:378:5                    size   +87, benefit        9.4, efficiency      0.108
    Inline function call at Display.mnd:441:9                    size    +2, benefit      175.8, efficiency     87.891
    Inline function call at Display.mnd:445:9                    size    +2, benefit       87.9, efficiency     43.945

Pass 1: speed optimization selection (cost limit 218):
    Unroll iteration loop at Display.mnd:253:13                  size   +49, benefit       14.1, efficiency      0.287
    Unroll iteration loop at Display.mnd:271:13                  size  +190, benefit       26.6, efficiency      0.140
    Unroll iteration loop at Display.mnd:506:5                   size   +37, benefit      218.8, efficiency      5.912
  ! Inline function 'drawHeader' defined at Display.mnd:130:1    size  +260, benefit      271.9, efficiency      1.046
  * Inline function 'drawBlock' defined at Display.mnd:436:1     size   +35, benefit      410.2, efficiency     11.719 (+30 instructions)
    Inline function call at Display.mnd:79:5                     size   +87, benefit       18.8, efficiency      0.216
    Inline function call at Display.mnd:452:5                    size   +87, benefit        9.4, efficiency      0.108
    Inline function call at Display.mnd:466:9                    size   +87, benefit      234.4, efficiency      2.694
    Inline function call at Display.mnd:467:9                    size   +36, benefit      273.4, efficiency      7.595
    Inline function call at Display.mnd:472:13                   size   +36, benefit      136.7, efficiency      3.798
    Inline function call at Display.mnd:378:5                    size   +87, benefit        9.4, efficiency      0.108

Pass 1: speed optimization selection (cost limit 188):
    Unroll iteration loop at Display.mnd:253:13                  size   +49, benefit       14.1, efficiency      0.287
  ! Unroll iteration loop at Display.mnd:271:13                  size  +190, benefit       26.6, efficiency      0.140
  * Unroll iteration loop at Display.mnd:506:5                   size   +37, benefit      218.8, efficiency      5.912 (+35 instructions)
  ! Inline function 'drawHeader' defined at Display.mnd:130:1    size  +260, benefit      271.9, efficiency      1.046
    Inline function call at Display.mnd:79:5                     size   +87, benefit       18.8, efficiency      0.216
    Inline function call at Display.mnd:452:5                    size   +87, benefit        9.4, efficiency      0.108
    Inline function call at Display.mnd:466:9                    size   +87, benefit      234.4, efficiency      2.694
    Inline function call at Display.mnd:378:5                    size   +87, benefit        9.4, efficiency      0.108

Pass 1: speed optimization selection (cost limit 153):
    Unroll iteration loop at Display.mnd:253:13                  size   +49, benefit       14.1, efficiency      0.287
  ! Unroll iteration loop at Display.mnd:271:13                  size  +190, benefit       26.6, efficiency      0.140
  ! Inline function 'drawHeader' defined at Display.mnd:130:1    size  +260, benefit      271.9, efficiency      1.046
    Inline function call at Display.mnd:79:5                     size   +87, benefit       18.8, efficiency      0.216
    Inline function call at Display.mnd:452:5                    size   +87, benefit        9.4, efficiency      0.108
  * Inline function call at Display.mnd:466:9                    size   +87, benefit      234.4, efficiency      2.694 (+86 instructions)
    Inline function call at Display.mnd:378:5                    size   +87, benefit        9.4, efficiency      0.108

Pass 1: speed optimization selection (cost limit 67):
  * Unroll iteration loop at Display.mnd:253:13                  size   +49, benefit       14.1, efficiency      0.287 (-2 instructions)
  ! Unroll iteration loop at Display.mnd:271:13                  size  +190, benefit       26.6, efficiency      0.140
  ! Inline function 'drawHeader' defined at Display.mnd:130:1    size  +173, benefit       37.5, efficiency      0.217
  ! Inline function call at Display.mnd:79:5                     size   +87, benefit       18.8, efficiency      0.216
  ! Inline function call at Display.mnd:452:5                    size   +87, benefit        9.4, efficiency      0.108
  ! Inline function call at Display.mnd:378:5                    size   +87, benefit        9.4, efficiency      0.108

Pass 1: speed optimization selection (cost limit 69):
  ! Unroll iteration loop at Display.mnd:271:13                  size  +190, benefit       26.6, efficiency      0.140
  ! Inline function 'drawHeader' defined at Display.mnd:130:1    size  +173, benefit       37.5, efficiency      0.217
  ! Inline function call at Display.mnd:79:5                     size   +87, benefit       18.8, efficiency      0.216
  ! Inline function call at Display.mnd:452:5                    size   +87, benefit        9.4, efficiency      0.108
  ! Inline function call at Display.mnd:378:5                    size   +87, benefit        9.4, efficiency      0.108

Pass 2: speed optimization selection (cost limit 75):
  ! Unroll iteration loop at Display.mnd:271:13                  size  +190, benefit       26.6, efficiency      0.140
  ! Inline function 'drawHeader' defined at Display.mnd:130:1    size  +173, benefit       37.5, efficiency      0.217
  ! Inline function call at Display.mnd:79:5                     size   +87, benefit       18.8, efficiency      0.216
  ! Inline function call at Display.mnd:452:5                    size   +87, benefit        9.4, efficiency      0.108
  ! Inline function call at Display.mnd:378:5                    size   +87, benefit        9.4, efficiency      0.108

Pass 3: speed optimization selection (cost limit 75):
  ! Unroll iteration loop at Display.mnd:271:13                  size  +190, benefit       26.6, efficiency      0.140
  ! Inline function 'drawHeader' defined at Display.mnd:130:1    size  +173, benefit       37.5, efficiency      0.217
  ! Inline function call at Display.mnd:79:5                     size   +87, benefit       18.8, efficiency      0.216
  ! Inline function call at Display.mnd:452:5                    size   +87, benefit        9.4, efficiency      0.108
  ! Inline function call at Display.mnd:378:5                    size   +87, benefit        9.4, efficiency      0.108

Pass 4: speed optimization selection (cost limit 75):
  ! Unroll iteration loop at Display.mnd:271:13                  size  +190, benefit       26.6, efficiency      0.140
  ! Inline function 'drawHeader' defined at Display.mnd:130:1    size  +173, benefit       37.5, efficiency      0.217
  ! Inline function call at Display.mnd:79:5                     size   +87, benefit       18.8, efficiency      0.216
  ! Inline function call at Display.mnd:452:5                    size   +87, benefit        9.4, efficiency      0.108
  ! Inline function call at Display.mnd:378:5                    size   +87, benefit        9.4, efficiency      0.108

Pass 5: speed optimization selection (cost limit 75):
  ! Unroll iteration loop at Display.mnd:271:13                  size  +190, benefit       26.6, efficiency      0.140
  ! Inline function 'drawHeader' defined at Display.mnd:130:1    size  +173, benefit       37.5, efficiency      0.217
  ! Inline function call at Display.mnd:79:5                     size   +87, benefit       18.8, efficiency      0.216
  ! Inline function call at Display.mnd:452:5                    size   +87, benefit        9.4, efficiency      0.108
  ! Inline function call at Display.mnd:378:5                    size   +87, benefit        9.4, efficiency      0.108

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-89 instructions):
 
     1 read *tmp40 processor3 "*signature"
     2 jump *label9 notEqual *tmp40 "3290b8c661787058:v1"
     3 set .core null
-    * set .coreX 0
-    * set .coreY 0
     4 set .page 0
     5 set .numPages 4
     6 set .recentBuildIndex -1
 
    13 set .polyTarget 0
    14 set .megaTarget 0
    15 set .animation -15
-    * set .mapw @mapw
-    * set .maph @maph
    16 set .pageSwitched false
    17 set *signature "0:v1"
    18 label *label10
 
    25 jump *label13 notEqual *tmp45 false
    26 label *label15
    27 sensor *tmp46 .core @x
-    * set .coreX *tmp46
    28 sensor *tmp47 .core @y
-    * set .coreY *tmp47
    29 printflush null
    30 drawflush null
    31 label *label16
 
    34 set .reconstructorProgress 0
    35 set .factoryProgress .reconstructorProgress
    36 set .unitReset false
-    * set *tmp48 false
    37 jump *label20 always
    38 label *label19
-    * set *tmp48 null
    39 label *label20
    40 op equal *tmp49 .page 0
    41 jump *label21 equal *tmp49 false
 
    45 jump *label26 equal *tmp53 false
    46 draw color 0 0 32 80
    47 draw rect 0 0 176 176
-    * set *tmp54 null
    48 jump *label27 always
    49 label *label26
    50 draw reset
    51 draw clear 0 0 32
-    * set *tmp54 null
    52 label *label27
    53 draw col %[white]
    54 op div *tmp55 .animation 30
 
    87 set :animate:size *tmp68
    88 draw image :animate:x :animate:y @mega :animate:size 0
    89 drawflush display1
-    * set *tmp73 .animation
    90 op add .animation .animation 1
    91 label *label25
    92 set *tmp52 null
 
   121 set :drawMaterials:unit1 *tmp85
   122 set :drawMaterials:unit3 null
   123 set :drawMaterials:unit2 :drawMaterials:unit3
-    * set *tmp82 :drawMaterials:unit2
   124 jump *label37 always
   125 label *label36
   126 op equal *tmp86 .nextUnit @flare
 
   185 label *label41
   186 set *tmp87 *tmp92
   187 label *label39
-    * set *tmp82 *tmp87
   188 label *label37
   189 set :drawBold:x 22
   190 set :drawBold:y 205
 
   284 jump *label57 equal *tmp131 false
   285 set :drawItem:col 0
   286 op sub :drawItem:y :drawItem:y 15
-    * set *tmp132 :drawItem:y
   287 jump *label58 always
   288 label *label57
-    * set *tmp132 null
   289 label *label58
   290 label *label51
   291 op notEqual *tmp133 :drawMaterials:unit2 null
 
   361 jump *label67 equal *tmp155 false
   362 set :drawItem.1:col 0
   363 op sub :drawItem.1:y :drawItem.1:y 15
-    * set *tmp156 :drawItem.1:y
   364 jump *label68 always
   365 label *label67
-    * set *tmp156 null
   366 label *label68
   367 label *label61
   368 op notEqual *tmp157 :drawMaterials:unit3 null
 
   440 jump *label77 equal *tmp181 false
   441 set :drawItem.2:col 0
   442 op sub :drawItem.2:y :drawItem.2:y 15
-    * set *tmp182 :drawItem.2:y
   443 jump *label78 always
   444 label *label77
-    * set *tmp182 null
   445 label *label78
   446 label *label71
   447 set *tmp158 null
 
   536 jump *label92 equal *tmp207 false
   537 set :drawItem.3:col 0
   538 op sub :drawItem.3:y :drawItem.3:y 15
-    * set *tmp208 :drawItem.3:y
   539 jump *label93 always
   540 label *label92
-    * set *tmp208 null
   541 label *label93
   542 label *label86
   543 set :drawMaterials:col :drawItem.3:col
   544 set :drawMaterials:y :drawItem.3:y
-    * set *tmp185 null
   545 jump *label85 always
   546 label *label84
-    * set *tmp185 null
   547 label *label85
   548 label *label80
   549 multijump *tmp183 0 0 (m:marker0)
 
   551 label *label81
   552 set *tmp110 null
   553 label *label50
-    * set *tmp75 *tmp110
   554 jump *label35 always
   555 label *label34
   556 op equal *tmp209 .nextBlock @titanium
 
   657 jump *label107 equal *tmp238 false
   658 set :drawItem.4:col 0
   659 op sub :drawItem.4:y :drawItem.4:y 15
-    * set *tmp239 :drawItem.4:y
   660 jump *label108 always
   661 label *label107
-    * set *tmp239 null
   662 label *label108
   663 label *label101
   664 set *tmp212 null
 
   798 jump *label134 equal *tmp267 false
   799 set :drawItem.5:col 0
   800 op sub :drawItem.5:y :drawItem.5:y 15
-    * set *tmp268 :drawItem.5:y
   801 jump *label135 always
   802 label *label134
-    * set *tmp268 null
   803 label *label135
   804 label *label128
   805 set :drawMaterials:col :drawItem.5:col
 
   813 label *label136
   814 set *tmp270 null
   815 label *label137
-    * set *tmp245 *tmp270
   816 jump *label127 always
   817 label *label126
-    * set *tmp245 null
   818 label *label127
   819 label *label117
   820 multijump *tmp243 0 0 (m:marker1)
 
   827 label *label115
   828 set *tmp212 *tmp242
   829 label *label95
-    * set *tmp75 *tmp212
   830 label *label35
   831 label *label33
   832 draw col %[white]
 
   938 jump *label155 equal *tmp299 false
   939 set :drawItem.6:col 0
   940 op sub :drawItem.6:y :drawItem.6:y 15
-    * set *tmp300 :drawItem.6:y
   941 jump *label156 always
   942 label *label155
-    * set *tmp300 null
   943 label *label156
   944 label *label149
   945 set :drawUnit.1:y :drawItem.6:y
   946 label *label148
-    * set *tmp275 null
   947 jump *label147 always
   948 label *label146
   949 sensor *tmp301 @unit @firstItem
 
  1024 jump *label164 equal *tmp328 false
  1025 set :drawItem.7:col 0
  1026 op sub :drawItem.7:y :drawItem.7:y 15
-    * set *tmp329 :drawItem.7:y
  1027 jump *label165 always
  1028 label *label164
-    * set *tmp329 null
  1029 label *label165
  1030 label *label158
  1031 set :drawUnit.2:y :drawItem.7:y
  1032 label *label157
-    * set *tmp275 null
  1033 label *label147
  1034 label *label138
  1035 drawflush display1
  1036 label *label31
  1037 set *tmp52 null
  1038 label *label24
-    * set *tmp50 *tmp52
  1039 jump *label22 always
  1040 label *label21
  1041 op equal *tmp330 .page 1
  1042 jump *label166 equal *tmp330 false
  1043 read *tmp332 bank2 511
-    * set :displayStorage:head *tmp332
  1044 read *tmp333 bank2 510
  1045 set :displayStorage:tail *tmp333
  1046 jump *label169 equal .pageSwitched false
 
  1090 multilabel *label182 (m:marker2)
  1091 label *label173
  1092 drawflush display1
-    * set *tmp334 null
  1093 jump *label170 always
  1094 label *label169
-    * set *tmp334 null
  1095 label *label170
  1096 op greaterThan *tmp337 .lastTail :displayStorage:tail
  1097 jump *label183 equal *tmp337 false
  1098 jump *label168 always
-    * set *tmp338 null
  1099 jump *label184 always
  1100 label *label183
-    * set *tmp338 null
  1101 label *label184
  1102 set *tmp339 .lastTail
  1103 read *tmp340 bank2 *tmp339
 
  1105 op add *tmp341 25 .lastTail
  1106 set :displayStorage:x *tmp341
  1107 set :displayStorage:y.1 165
-    * set :displayStorage:item.1 @copper
  1108 setaddr *tmp342 *label188
  1109 jump *label185 always
  1110 multilabel *label188 (m:marker3)
-    * set :displayStorage:item.1 @lead
  1111 setaddr *tmp342 *label189
  1112 jump *label185 always
  1113 multilabel *label189 (m:marker3)
-    * set :displayStorage:item.1 @sand
  1114 setaddr *tmp342 *label190
  1115 jump *label185 always
  1116 multilabel *label190 (m:marker3)
-    * set :displayStorage:item.1 @coal
  1117 setaddr *tmp342 *label191
  1118 jump *label185 always
  1119 multilabel *label191 (m:marker3)
-    * set :displayStorage:item.1 @graphite
  1120 setaddr *tmp342 *label192
  1121 jump *label185 always
  1122 multilabel *label192 (m:marker3)
-    * set :displayStorage:item.1 @silicon
  1123 setaddr *tmp342 *label193
  1124 jump *label185 always
  1125 multilabel *label193 (m:marker3)
-    * set :displayStorage:item.1 @titanium
  1126 setaddr *tmp342 *label194
  1127 jump *label185 always
  1128 multilabel *label194 (m:marker3)
-    * set :displayStorage:item.1 @metaglass
  1129 setaddr *tmp342 *label195
  1130 jump *label185 always
  1131 multilabel *label195 (m:marker3)
-    * set :displayStorage:item.1 @thorium
  1132 setaddr *tmp342 *label196
  1133 label *label185
  1134 op and *tmp343 :displayStorage:accumulator 0b11111
 
  1151 multilabel *label196 (m:marker3)
  1152 label *label187
  1153 drawflush display1
-    * set *tmp348 .lastTail
  1154 op add .lastTail .lastTail 1
  1155 label *label168
  1156 set *tmp331 null
 
  1194 label *label210
  1195 draw image 0 0 @core-shard 6 0
  1196 drawflush display1
-    * set *tmp351 null
  1197 jump *label204 always
  1198 label *label203
-    * set *tmp351 null
  1199 label *label204
  1200 set :displayBaseMap:cfg "AJEMJJ-graphite-press0"
  1201 setaddr *tmp353 *label214
 
  1317 setaddr :drawBlock*retaddr *label244 (h:*label244)
  1318 call *label7 *invalid :drawBlock*retval (m:*label244) (h:*label244)
  1319 label *label244
-    * set *tmp355 null
  1320 jump *label243 always
  1321 label *label242
-    * set *tmp355 null
  1322 label *label243
  1323 sensor *tmp358 switch1 @enabled
  1324 jump *label245 equal *tmp358 false
  1325 draw clear 0 0 32
  1326 jump *label213 always
-    * set *tmp359 null
  1327 jump *label246 always
  1328 label *label245
-    * set *tmp359 null
  1329 label *label246
  1330 drawflush display1
  1331 label *label212
 
  1397 label *label256
  1398 label *label255
  1399 set .lastRecord :displayLog:start
-    * set *tmp372 .lastRecord
  1400 jump *label249 always
  1401 label *label248
-    * set *tmp372 null
  1402 label *label249
  1403 setaddr :drawHeader*retaddr *label257 (h:*label257)
  1404 call *label4 *invalid :drawHeader*retval (m:*label257) (h:*label257)
 
  1474 sensor *tmp402 switch1 @enabled
  1475 jump *label268 equal *tmp402 false
  1476 jump *label260 always
-    * set *tmp403 null
  1477 jump *label269 always
  1478 label *label268
-    * set *tmp403 null
  1479 label *label269
  1480 label *label259
  1481 op sub :displayLog:position :displayLog:position 1
 
  1489 label *label200
  1490 set *tmp331 *tmp350
  1491 label *label167
-    * set *tmp50 *tmp331
  1492 label *label22
  1493 op greaterThan *tmp405 .megas 0
  1494 jump *label270 equal *tmp405 false
  1495 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  1496 print "\n"
  1497 printflush message1
-    * set *tmp406 null
  1498 jump *label271 always
  1499 label *label270
  1500 print "[gold]Building "
 
  1517 print "\n"
  1518 printflush message1
  1519 label *label272
-    * set *tmp406 null
  1520 label *label271
  1521 sensor *tmp409 switch1 @enabled
  1522 set .pageSwitched *tmp409
 
  1528 drawflush null
  1529 draw reset
  1530 draw clear 0 0 32
-    * set *tmp410 null
  1531 jump *label274 always
  1532 label *label273
-    * set *tmp410 null
  1533 label *label274
  1534 label *label17
  1535 jump *label16 always
 
  1576 jump *label281 equal *tmp416 false
  1577 draw image 27 239 .nextBlock 25 0
  1578 draw image 57 239 .nextUnit 25 0
-    * set *tmp417 null
  1579 jump *label282 always
  1580 label *label281
  1581 op equal *tmp418 :drawHeader:count 1
 
  1597 draw image 42 237 @hydrogen 32 *tmp424
  1598 set *tmp419 null
  1599 label *label284
-    * set *tmp417 *tmp419
  1600 label *label282
  1601 set :drawHeader:tt @second
  1602 read *tmp0 processor1 "time"
 
  1661 op mul *tmp442 7 :drawHeader:len
  1662 op sub *tmp443 *tmp441 *tmp442
  1663 draw image *tmp443 246 @titanium 12 0
-    * set *tmp436 null
  1664 jump *label292 always
  1665 label *label291
-    * set *tmp436 null
  1666 label *label292
  1667 jump *label295 equal .thoriumContainer false
  1668 sensor *tmp445 .thoriumContainer @thorium
 
  1686 op mul *tmp449 7 :drawHeader:len.1
  1687 op sub *tmp450 *tmp448 *tmp449
  1688 draw image *tmp450 246 @thorium 12 0
-    * set *tmp444 null
  1689 jump *label296 always
  1690 label *label295
-    * set *tmp444 null
  1691 label *label296
  1692 set :drawHeader:x.2 174
  1693 draw col %[white]
 
  1709 label *label303
  1710 label *label302
  1711 op sub :drawHeader:x.2 :drawHeader:x.2 30
-    * set *tmp452 :drawHeader:x.2
  1712 jump *label301 always
  1713 label *label300
-    * set *tmp452 null
  1714 label *label301
  1715 label *label299
  1716 set :drawUnitCount.1:type @mono
 
  1731 label *label308
  1732 label *label307
  1733 op sub :drawHeader:x.2 :drawHeader:x.2 30
-    * set *tmp455 :drawHeader:x.2
  1734 jump *label306 always
  1735 label *label305
-    * set *tmp455 null
  1736 label *label306
  1737 label *label304
  1738 set :drawUnitCount.2:type @flare
 
  1753 label *label313
  1754 label *label312
  1755 op sub :drawHeader:x.2 :drawHeader:x.2 30
-    * set *tmp458 :drawHeader:x.2
  1756 jump *label311 always
  1757 label *label310
-    * set *tmp458 null
  1758 label *label311
  1759 label *label309
  1760 label *label275
 
  1805 op sub *tmp481 *tmp480 74
  1806 set :unpackCfg:ind *tmp481
  1807 sensor *tmp482 :unpackCfg:type @copper
-    * set :unpackCfg:cu *tmp482
  1808 sensor *tmp483 :unpackCfg:type @lead
-    * set :unpackCfg:pb *tmp483
  1809 sensor *tmp484 :unpackCfg:type @graphite
-    * set :unpackCfg:gr *tmp484
  1810 sensor *tmp485 :unpackCfg:type @silicon
-    * set :unpackCfg:si *tmp485
  1811 sensor *tmp486 :unpackCfg:type @titanium
-    * set :unpackCfg:ti *tmp486
  1812 sensor *tmp487 :unpackCfg:type @metaglass
-    * set :unpackCfg:mg *tmp487
  1813 sensor *tmp488 :unpackCfg:type @thorium
-    * set :unpackCfg:th *tmp488
  1814 sensor *tmp489 :unpackCfg:type @size
  1815 set :unpackCfg:size *tmp489
  1816 label *label317
 
  1839 op mul *tmp495 2 :drawBlock:size
  1840 op mul *tmp496 90 :drawBlock:rotation
  1841 draw image *tmp493 *tmp494 :drawBlock:type *tmp495 *tmp496
-    * set *tmp492 null
  1842 jump *label319 always
  1843 label *label318
  1844 jump *label321 equal .pageSwitched false
 
  1856 label *label321
  1857 set *tmp497 null
  1858 label *label322
-    * set *tmp492 *tmp497
  1859 label *label319
  1860 label *label315
  1861 return :drawBlock*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-26 instructions):
 
    24 op equal *tmp45 .core null
    25 jump *label13 notEqual *tmp45 false
    26 label *label15
-    * sensor *tmp46 .core @x
-    * sensor *tmp47 .core @y
    27 printflush null
    28 drawflush null
    29 label *label16
 
    87 drawflush display1
    88 op add .animation .animation 1
    89 label *label25
-    * set *tmp52 null
    90 jump *label24 always
    91 label *label23
    92 draw clear 0 0 32
 
   133 set :drawMaterials:unit1 *tmp90
   134 set :drawMaterials:unit3 null
   135 set :drawMaterials:unit2 :drawMaterials:unit3
-    * set *tmp87 :drawMaterials:unit2
   136 jump *label39 always
   137 label *label38
   138 op equal *tmp91 .nextUnit @poly
 
   179 label *label43
   180 set *tmp92 *tmp100
   181 label *label41
-    * set *tmp87 *tmp92
   182 label *label39
   183 label *label37
   184 set :drawBold:x 22
 
   449 label *label59
   450 set *tmp134 null
   451 label *label60
-    * set *tmp110 *tmp134
   452 jump *label50 always
   453 label *label49
   454 set :drawMaterials:item @lead
 
   543 multijump *tmp183 0 0 (m:marker0)
   544 multilabel *label83 (m:marker0)
   545 label *label81
-    * set *tmp110 null
   546 label *label50
   547 jump *label35 always
   548 label *label34
 
   654 label *label107
   655 label *label108
   656 label *label101
-    * set *tmp212 null
   657 jump *label95 always
   658 label *label94
   659 set *tmp240 .totalTargets
 
   800 op lessThanEq *tmp269 :drawMaterials:count 0
   801 jump *label136 equal *tmp269 false
   802 jump *label118 always
-    * set *tmp270 null
   803 jump *label137 always
   804 label *label136
-    * set *tmp270 null
   805 label *label137
   806 jump *label127 always
   807 label *label126
 
   815 label *label114
   816 set *tmp242 null
   817 label *label115
-    * set *tmp212 *tmp242
   818 label *label95
   819 label *label35
   820 label *label33
 
  1023 label *label138
  1024 drawflush display1
  1025 label *label31
-    * set *tmp52 null
  1026 label *label24
  1027 jump *label22 always
  1028 label *label21
  1029 op equal *tmp330 .page 1
  1030 jump *label166 equal *tmp330 false
-    * read *tmp332 bank2 511
  1031 read *tmp333 bank2 510
  1032 set :displayStorage:tail *tmp333
  1033 jump *label169 equal .pageSwitched false
 
  1140 drawflush display1
  1141 op add .lastTail .lastTail 1
  1142 label *label168
-    * set *tmp331 null
  1143 jump *label167 always
  1144 label *label166
  1145 op equal *tmp349 .page 2
 
  1473 label *label247
  1474 set *tmp350 null
  1475 label *label200
-    * set *tmp331 *tmp350
  1476 label *label167
  1477 label *label22
  1478 op greaterThan *tmp405 .megas 0
 
  1573 set *tmp421 .nextUnit
  1574 label *label286
  1575 draw image 42 237 *tmp421 32 0
-    * set *tmp419 null
  1576 jump *label284 always
  1577 label *label283
  1578 op div *tmp422 @tick 2
  1579 op mod *tmp423 *tmp422 360
  1580 op sub *tmp424 360 *tmp423
  1581 draw image 42 237 @hydrogen 32 *tmp424
-    * set *tmp419 null
  1582 label *label284
  1583 label *label282
  1584 set :drawHeader:tt @second
 
  1787 read *tmp480 :unpackCfg:cfg *tmp479
  1788 op sub *tmp481 *tmp480 74
  1789 set :unpackCfg:ind *tmp481
-    * sensor *tmp482 :unpackCfg:type @copper
-    * sensor *tmp483 :unpackCfg:type @lead
-    * sensor *tmp484 :unpackCfg:type @graphite
-    * sensor *tmp485 :unpackCfg:type @silicon
-    * sensor *tmp486 :unpackCfg:type @titanium
-    * sensor *tmp487 :unpackCfg:type @metaglass
-    * sensor *tmp488 :unpackCfg:type @thorium
  1790 sensor *tmp489 :unpackCfg:type @size
  1791 set :unpackCfg:size *tmp489
  1792 label *label317
 
  1827 op mul *tmp500 2 :drawBlock:size
  1828 op mul *tmp501 90 :drawBlock:rotation
  1829 draw image *tmp498 *tmp499 :drawBlock:type *tmp500 *tmp501
-    * set *tmp497 null
  1830 jump *label322 always
  1831 label *label321
-    * set *tmp497 null
  1832 label *label322
  1833 label *label319
  1834 label *label315

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-8 instructions):
 
   151 op greaterThan *tmp97 .reconstructorProgress 0
   152 op max *tmp98 .factoryProgress *tmp97
   153 set .factoryProgress *tmp98
-    * set *tmp92 .factoryProgress
   154 jump *label41 always
   155 label *label40
   156 op equal *tmp99 .nextUnit @mega
 
   176 label *label42
   177 set *tmp100 null
   178 label *label43
-    * set *tmp92 *tmp100
   179 label *label41
   180 label *label39
   181 label *label37
 
   442 label *label69
   443 set *tmp158 null
   444 label *label70
-    * set *tmp134 *tmp158
   445 jump *label60 always
   446 label *label59
-    * set *tmp134 null
   447 label *label60
   448 jump *label50 always
   449 label *label49
 
   806 multijump *tmp243 0 0 (m:marker1)
   807 multilabel *label125 (m:marker1)
   808 label *label118
-    * set *tmp242 null
   809 jump *label115 always
   810 label *label114
-    * set *tmp242 null
   811 label *label115
   812 label *label95
   813 label *label35
 
  1313 multilabel *label239 (m:marker4)
  1314 label *label213
  1315 label *label201
-    * set *tmp350 null
  1316 jump *label200 always
  1317 label *label199
  1318 op sub *tmp360 .page 3
 
  1464 set .lastRecord *tmp404
  1465 drawflush display1
  1466 label *label247
-    * set *tmp350 null
  1467 label *label200
  1468 label *label167
  1469 label *label22

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
   171 op greaterThan *tmp106 :drawMaterials:multiReconstructorProgress 0
   172 op max *tmp107 .reconstructorProgress *tmp106
   173 set .reconstructorProgress *tmp107
-    * set *tmp100 .reconstructorProgress
   174 jump *label43 always
   175 label *label42
-    * set *tmp100 null
   176 label *label43
   177 label *label41
   178 label *label39
 
   435 label *label77
   436 label *label78
   437 label *label71
-    * set *tmp158 null
   438 jump *label70 always
   439 label *label69
-    * set *tmp158 null
   440 label *label70
   441 jump *label60 always
   442 label *label59

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-144 instructions):
 
    18 label *label10
    19 label *label13
    20 ubind @poly
-    * ulocate building core false @copper *tmp42 *tmp43 *tmp44 *tmp41
-    * set .core *tmp41
+   21 ulocate building core false @copper *tmp42 *tmp43 *tmp44 .core
    22 label *label14
    23 op equal *tmp45 .core null
    24 jump *label13 notEqual *tmp45 false
 
    50 draw col %[white]
    51 op div *tmp55 .animation 30
    52 op min *tmp56 *tmp55 1
-    * op max *tmp57 0 *tmp56
-    * set :animate:ratio *tmp57
+   53 op max :animate:ratio 0 *tmp56
    54 set :lerp:from 42
    55 set :lerp:to 88
    56 set :lerp:ratio :animate:ratio
    57 op sub *tmp59 1 :lerp:ratio
    58 op mul *tmp60 *tmp59 :lerp:from
    59 op mul *tmp61 :lerp:ratio :lerp:to
-    * op add *tmp62 *tmp60 *tmp61
-    * set *tmp58 *tmp62
+   60 op add *tmp58 *tmp60 *tmp61
    61 label *label28
    62 set :animate:x *tmp58
    63 set :lerp.1:from 237
 
    66 op sub *tmp64 1 :lerp.1:ratio
    67 op mul *tmp65 *tmp64 :lerp.1:from
    68 op mul *tmp66 :lerp.1:ratio :lerp.1:to
-    * op add *tmp67 *tmp65 *tmp66
-    * set *tmp63 *tmp67
+   69 op add *tmp63 *tmp65 *tmp66
    70 label *label29
    71 set :animate:y *tmp63
    72 set :lerp.2:from 32
 
    75 op sub *tmp69 1 :lerp.2:ratio
    76 op mul *tmp70 *tmp69 :lerp.2:from
    77 op mul *tmp71 :lerp.2:ratio :lerp.2:to
-    * op add *tmp72 *tmp70 *tmp71
-    * set *tmp68 *tmp72
+   78 op add *tmp68 *tmp70 *tmp71
    79 label *label30
    80 set :animate:size *tmp68
    81 draw image :animate:x :animate:y @mega :animate:size 0
 
    93 op equal *tmp74 .nextBlock null
    94 jump *label34 equal *tmp74 false
    95 sensor *tmp76 A¾BFLX-air-factory14 @progress
-    * op max *tmp77 .factoryProgress *tmp76
-    * set .factoryProgress *tmp77
+   96 op max .factoryProgress .factoryProgress *tmp76
    97 sensor *tmp78 AÀF@Ld-additive-reconstructor26 @progress
-    * op max *tmp79 .reconstructorProgress *tmp78
-    * set .reconstructorProgress *tmp79
-    * sensor *tmp80 AÁNBJe-multiplicative-reconstructor27 @progress
-    * set :drawMaterials:multiReconstructorProgress *tmp80
+   98 op max .reconstructorProgress .reconstructorProgress *tmp78
+   99 sensor :drawMaterials:multiReconstructorProgress AÁNBJe-multiplicative-reconstructor27 @progress
   100 op equal *tmp81 .nextUnit @mono
   101 jump *label36 equal *tmp81 false
   102 set :drawMaterials:targetFactoryLead 15
   103 set :drawMaterials:targetFactorySilicon 30
   104 set .materialCount 2
-    * set *tmp83 .monos
-    * set :drawMaterials:unitCount1 *tmp83
-    * set *tmp84 .monoTarget
-    * set :drawMaterials:unitTotal1 *tmp84
-    * set *tmp85 .nextUnit
-    * set :drawMaterials:unit1 *tmp85
+  105 set :drawMaterials:unitCount1 .monos
+  106 set :drawMaterials:unitTotal1 .monoTarget
+  107 set :drawMaterials:unit1 .nextUnit
   108 set :drawMaterials:unit3 null
   109 set :drawMaterials:unit2 :drawMaterials:unit3
   110 jump *label37 always
 
   114 set :drawMaterials:targetFactoryLead 0
   115 set :drawMaterials:targetFactorySilicon 15
   116 set .materialCount 1
-    * set *tmp88 .flares
-    * set :drawMaterials:unitCount1 *tmp88
-    * set *tmp89 .flareTarget
-    * set :drawMaterials:unitTotal1 *tmp89
-    * set *tmp90 .nextUnit
-    * set :drawMaterials:unit1 *tmp90
+  117 set :drawMaterials:unitCount1 .flares
+  118 set :drawMaterials:unitTotal1 .flareTarget
+  119 set :drawMaterials:unit1 .nextUnit
   120 set :drawMaterials:unit3 null
   121 set :drawMaterials:unit2 :drawMaterials:unit3
   122 jump *label39 always
   123 label *label38
   124 op equal *tmp91 .nextUnit @poly
   125 jump *label40 equal *tmp91 false
-    * op floor *tmp93 .factoryProgress
-    * set :drawMaterials:unitCount1 *tmp93
-    * set *tmp94 .polys
-    * set :drawMaterials:unitCount2 *tmp94
+  126 op floor :drawMaterials:unitCount1 .factoryProgress
+  127 set :drawMaterials:unitCount2 .polys
   128 set :drawMaterials:unitTotal1 1
-    * set *tmp95 .polyTarget
-    * set :drawMaterials:unitTotal2 *tmp95
+  129 set :drawMaterials:unitTotal2 .polyTarget
   130 set :drawMaterials:unit1 @mono
-    * set *tmp96 .nextUnit
-    * set :drawMaterials:unit2 *tmp96
+  131 set :drawMaterials:unit2 .nextUnit
   132 set :drawMaterials:unit3 null
   133 op greaterThan *tmp97 .reconstructorProgress 0
-    * op max *tmp98 .factoryProgress *tmp97
-    * set .factoryProgress *tmp98
+  134 op max .factoryProgress .factoryProgress *tmp97
   135 jump *label41 always
   136 label *label40
   137 op equal *tmp99 .nextUnit @mega
   138 jump *label42 equal *tmp99 false
-    * op floor *tmp101 .factoryProgress
-    * set :drawMaterials:unitCount1 *tmp101
-    * op floor *tmp102 .reconstructorProgress
-    * set :drawMaterials:unitCount2 *tmp102
+  139 op floor :drawMaterials:unitCount1 .factoryProgress
+  140 op floor :drawMaterials:unitCount2 .reconstructorProgress
   141 set :drawMaterials:unitTotal1 1
   142 set :drawMaterials:unitTotal2 1
   143 set :drawMaterials:unit1 @mono
   144 set :drawMaterials:unit2 @poly
-    * set *tmp103 .nextUnit
-    * set :drawMaterials:unit3 *tmp103
+  145 set :drawMaterials:unit3 .nextUnit
   146 op greaterThan *tmp104 .reconstructorProgress 0
-    * op max *tmp105 .factoryProgress *tmp104
-    * set .factoryProgress *tmp105
+  147 op max .factoryProgress .factoryProgress *tmp104
   148 op greaterThan *tmp106 :drawMaterials:multiReconstructorProgress 0
-    * op max *tmp107 .reconstructorProgress *tmp106
-    * set .reconstructorProgress *tmp107
+  149 op max .reconstructorProgress .reconstructorProgress *tmp106
   150 jump *label43 always
   151 label *label42
   152 label *label43
 
   166 draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
   167 label *label46
   168 label *label45
-    * op add *tmp108 :drawBold:x 1
-    * set :drawText.1:x *tmp108
+  169 op add :drawText.1:x :drawBold:x 1
   170 set :drawText.1:y :drawBold:y
   171 set :drawText.1:alignment :drawBold:alignment
   172 print "Unit factories"
 
   187 set :drawItem:target 1
   188 op mul *tmp111 :drawItem:columns 176
   189 op div *tmp112 *tmp111 2
-    * op sub *tmp113 210 *tmp112
-    * set :drawItem:barLength *tmp113
-    * op add *tmp114 48 :drawItem:barLength
-    * set :drawItem:textEnd *tmp114
+  190 op sub :drawItem:barLength 210 *tmp112
+  191 op add :drawItem:textEnd 48 :drawItem:barLength
   192 op mul *tmp115 :drawItem:barLength :drawItem:current
   193 op div *tmp116 *tmp115 :drawItem:target
-    * op min *tmp117 :drawItem:barLength *tmp116
-    * set :drawItem:length *tmp117
+  194 op min :drawItem:length :drawItem:barLength *tmp116
   195 op mul *tmp118 :drawItem:col 176
   196 op div *tmp119 *tmp118 2
-    * op add *tmp120 11 *tmp119
-    * set :drawItem:iconX *tmp120
+  197 op add :drawItem:iconX 11 *tmp119
   198 op mul *tmp121 :drawItem:col 176
   199 op div *tmp122 *tmp121 2
-    * op add *tmp123 22 *tmp122
-    * set :drawItem:barX *tmp123
+  200 op add :drawItem:barX 22 *tmp122
   201 op mul *tmp124 :drawItem:col 176
   202 op div *tmp125 *tmp124 2
-    * op add *tmp126 :drawItem:textEnd *tmp125
-    * set :drawItem:textX *tmp126
+  203 op add :drawItem:textX :drawItem:textEnd *tmp125
   204 draw col %[white]
   205 op add *tmp127 :drawItem:y 5
   206 draw image :drawItem:iconX *tmp127 :drawItem:item 16 0
 
   225 draw print :drawPrint.2:x :drawPrint.2:y :drawPrint.2:alignment
   226 label *label54
   227 label *label53
-    * op add *tmp130 :drawBold.1:x 1
-    * set :drawText.3:x *tmp130
+  228 op add :drawText.3:x :drawBold.1:x 1
   229 set :drawText.3:y :drawBold.1:y
   230 set :drawText.3:alignment :drawBold.1:alignment
   231 print :drawMaterials:unitCount1
 
   257 set :drawItem.1:target 1
   258 op mul *tmp135 :drawItem.1:columns 176
   259 op div *tmp136 *tmp135 2
-    * op sub *tmp137 210 *tmp136
-    * set :drawItem.1:barLength *tmp137
-    * op add *tmp138 48 :drawItem.1:barLength
-    * set :drawItem.1:textEnd *tmp138
+  260 op sub :drawItem.1:barLength 210 *tmp136
+  261 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
   262 op mul *tmp139 :drawItem.1:barLength :drawItem.1:current
   263 op div *tmp140 *tmp139 :drawItem.1:target
-    * op min *tmp141 :drawItem.1:barLength *tmp140
-    * set :drawItem.1:length *tmp141
+  264 op min :drawItem.1:length :drawItem.1:barLength *tmp140
   265 op mul *tmp142 :drawItem.1:col 176
   266 op div *tmp143 *tmp142 2
-    * op add *tmp144 11 *tmp143
-    * set :drawItem.1:iconX *tmp144
+  267 op add :drawItem.1:iconX 11 *tmp143
   268 op mul *tmp145 :drawItem.1:col 176
   269 op div *tmp146 *tmp145 2
-    * op add *tmp147 22 *tmp146
-    * set :drawItem.1:barX *tmp147
+  270 op add :drawItem.1:barX 22 *tmp146
   271 op mul *tmp148 :drawItem.1:col 176
   272 op div *tmp149 *tmp148 2
-    * op add *tmp150 :drawItem.1:textEnd *tmp149
-    * set :drawItem.1:textX *tmp150
+  273 op add :drawItem.1:textX :drawItem.1:textEnd *tmp149
   274 draw col %[white]
   275 op add *tmp151 :drawItem.1:y 5
   276 draw image :drawItem.1:iconX *tmp151 :drawItem.1:item 16 0
 
   295 draw print :drawPrint.4:x :drawPrint.4:y :drawPrint.4:alignment
   296 label *label64
   297 label *label63
-    * op add *tmp154 :drawBold.2:x 1
-    * set :drawText.5:x *tmp154
+  298 op add :drawText.5:x :drawBold.2:x 1
   299 set :drawText.5:y :drawBold.2:y
   300 set :drawText.5:alignment :drawBold.2:alignment
   301 print :drawMaterials:unitCount2
 
   327 set :drawItem.2:target 1
   328 op mul *tmp159 :drawItem.2:columns 176
   329 op div *tmp160 *tmp159 2
-    * op sub *tmp161 210 *tmp160
-    * set :drawItem.2:barLength *tmp161
-    * op add *tmp162 48 :drawItem.2:barLength
-    * set :drawItem.2:textEnd *tmp162
+  330 op sub :drawItem.2:barLength 210 *tmp160
+  331 op add :drawItem.2:textEnd 48 :drawItem.2:barLength
   332 op mul *tmp163 :drawItem.2:barLength :drawItem.2:current
   333 op div *tmp164 *tmp163 :drawItem.2:target
-    * op min *tmp165 :drawItem.2:barLength *tmp164
-    * set :drawItem.2:length *tmp165
+  334 op min :drawItem.2:length :drawItem.2:barLength *tmp164
   335 op mul *tmp166 :drawItem.2:col 176
   336 op div *tmp167 *tmp166 2
-    * op add *tmp168 11 *tmp167
-    * set :drawItem.2:iconX *tmp168
+  337 op add :drawItem.2:iconX 11 *tmp167
   338 op mul *tmp169 :drawItem.2:col 176
   339 op div *tmp170 *tmp169 2
-    * op add *tmp171 22 *tmp170
-    * set :drawItem.2:barX *tmp171
+  340 op add :drawItem.2:barX 22 *tmp170
   341 op mul *tmp172 :drawItem.2:col 176
   342 op div *tmp173 *tmp172 2
-    * op add *tmp174 :drawItem.2:textEnd *tmp173
-    * set :drawItem.2:textX *tmp174
+  343 op add :drawItem.2:textX :drawItem.2:textEnd *tmp173
   344 draw col %[white]
   345 op add *tmp175 :drawItem.2:y 5
   346 draw image :drawItem.2:iconX *tmp175 :drawItem.2:item 16 0
 
   358 set :drawText.6:alignment :drawBold.3:alignment
   359 print .megas
   360 print "/"
-    * set *tmp178 .megaTarget
-    * print *tmp178
+  361 print .megaTarget
   362 set :drawPrint.6:x :drawText.6:x
   363 set :drawPrint.6:y :drawText.6:y
   364 set :drawPrint.6:alignment :drawText.6:alignment
   365 draw print :drawPrint.6:x :drawPrint.6:y :drawPrint.6:alignment
   366 label *label74
   367 label *label73
-    * op add *tmp179 :drawBold.3:x 1
-    * set :drawText.7:x *tmp179
+  368 op add :drawText.7:x :drawBold.3:x 1
   369 set :drawText.7:y :drawBold.3:y
   370 set :drawText.7:alignment :drawBold.3:alignment
   371 print .megas
   372 print "/"
-    * set *tmp180 .megaTarget
-    * print *tmp180
+  373 print .megaTarget
   374 set :drawPrint.7:x :drawText.7:x
   375 set :drawPrint.7:y :drawText.7:y
   376 set :drawPrint.7:alignment :drawText.7:alignment
 
   415 set :drawItem.3:target :drawMaterials:target
   416 op mul *tmp187 :drawItem.3:columns 176
   417 op div *tmp188 *tmp187 2
-    * op sub *tmp189 210 *tmp188
-    * set :drawItem.3:barLength *tmp189
-    * op add *tmp190 48 :drawItem.3:barLength
-    * set :drawItem.3:textEnd *tmp190
+  418 op sub :drawItem.3:barLength 210 *tmp188
+  419 op add :drawItem.3:textEnd 48 :drawItem.3:barLength
   420 op mul *tmp191 :drawItem.3:barLength :drawItem.3:current
   421 op div *tmp192 *tmp191 :drawItem.3:target
-    * op min *tmp193 :drawItem.3:barLength *tmp192
-    * set :drawItem.3:length *tmp193
+  422 op min :drawItem.3:length :drawItem.3:barLength *tmp192
   423 op mul *tmp194 :drawItem.3:col 176
   424 op div *tmp195 *tmp194 2
-    * op add *tmp196 11 *tmp195
-    * set :drawItem.3:iconX *tmp196
+  425 op add :drawItem.3:iconX 11 *tmp195
   426 op mul *tmp197 :drawItem.3:col 176
   427 op div *tmp198 *tmp197 2
-    * op add *tmp199 22 *tmp198
-    * set :drawItem.3:barX *tmp199
+  428 op add :drawItem.3:barX 22 *tmp198
   429 op mul *tmp200 :drawItem.3:col 176
   430 op div *tmp201 *tmp200 2
-    * op add *tmp202 :drawItem.3:textEnd *tmp201
-    * set :drawItem.3:textX *tmp202
+  431 op add :drawItem.3:textX :drawItem.3:textEnd *tmp201
   432 draw col %[white]
   433 op add *tmp203 :drawItem.3:y 5
   434 draw image :drawItem.3:iconX *tmp203 :drawItem.3:item 16 0
 
   451 draw print :drawPrint.8:x :drawPrint.8:y :drawPrint.8:alignment
   452 label *label89
   453 label *label88
-    * op add *tmp206 :drawBold.4:x 1
-    * set :drawText.9:x *tmp206
+  454 op add :drawText.9:x :drawBold.4:x 1
   455 set :drawText.9:y :drawBold.4:y
   456 set :drawText.9:alignment :drawBold.4:alignment
   457 print :drawMaterials:target
 
   501 draw print :drawPrint.10:x :drawPrint.10:y :drawPrint.10:alignment
   502 label *label98
   503 label *label97
-    * op add *tmp214 :drawBold.5:x 1
-    * set :drawText.11:x *tmp214
+  504 op add :drawText.11:x :drawBold.5:x 1
   505 set :drawText.11:y :drawBold.5:y
   506 set :drawText.11:alignment :drawBold.5:alignment
   507 read *tmp215 processor3 ".mapAction"
 
   517 set :drawItem.4:y 190
   518 set :drawItem.4:columns 1
   519 set :drawItem.4:item @titanium
-    * read *tmp16 processor3 ".mapProgress"
-    * set :drawItem.4:current *tmp16
-    * read *tmp17 processor3 ".mapTotal"
-    * set :drawItem.4:target *tmp17
+  520 read :drawItem.4:current processor3 ".mapProgress"
+  521 read :drawItem.4:target processor3 ".mapTotal"
   522 op mul *tmp216 :drawItem.4:columns 176
   523 op div *tmp217 *tmp216 2
-    * op sub *tmp218 210 *tmp217
-    * set :drawItem.4:barLength *tmp218
-    * op add *tmp219 48 :drawItem.4:barLength
-    * set :drawItem.4:textEnd *tmp219
+  524 op sub :drawItem.4:barLength 210 *tmp217
+  525 op add :drawItem.4:textEnd 48 :drawItem.4:barLength
   526 op mul *tmp220 :drawItem.4:barLength :drawItem.4:current
   527 op div *tmp221 *tmp220 :drawItem.4:target
-    * op min *tmp222 :drawItem.4:barLength *tmp221
-    * set :drawItem.4:length *tmp222
+  528 op min :drawItem.4:length :drawItem.4:barLength *tmp221
   529 op mul *tmp223 :drawItem.4:col 176
   530 op div *tmp224 *tmp223 2
-    * op add *tmp225 11 *tmp224
-    * set :drawItem.4:iconX *tmp225
+  531 op add :drawItem.4:iconX 11 *tmp224
   532 op mul *tmp226 :drawItem.4:col 176
   533 op div *tmp227 *tmp226 2
-    * op add *tmp228 22 *tmp227
-    * set :drawItem.4:barX *tmp228
+  534 op add :drawItem.4:barX 22 *tmp227
   535 op mul *tmp229 :drawItem.4:col 176
   536 op div *tmp230 *tmp229 2
-    * op add *tmp231 :drawItem.4:textEnd *tmp230
-    * set :drawItem.4:textX *tmp231
+  537 op add :drawItem.4:textX :drawItem.4:textEnd *tmp230
   538 draw col %[white]
   539 op add *tmp232 :drawItem.4:y 5
   540 draw image :drawItem.4:iconX *tmp232 :drawItem.4:item 16 0
 
   559 draw print :drawPrint.12:x :drawPrint.12:y :drawPrint.12:alignment
   560 label *label104
   561 label *label103
-    * op add *tmp236 :drawBold.6:x 1
-    * set :drawText.13:x *tmp236
+  562 op add :drawText.13:x :drawBold.6:x 1
   563 set :drawText.13:y :drawBold.6:y
   564 set :drawText.13:alignment :drawBold.6:alignment
   565 print "x"
 
   583 label *label101
   584 jump *label95 always
   585 label *label94
-    * set *tmp240 .totalTargets
-    * set .materialCount *tmp240
+  586 set .materialCount .totalTargets
   587 set :drawMaterials:count .materialCount
   588 set :drawBold.7:x 22
   589 set :drawBold.7:y 205
 
   598 draw print :drawPrint.14:x :drawPrint.14:y :drawPrint.14:alignment
   599 label *label111
   600 label *label110
-    * op add *tmp241 :drawBold.7:x 1
-    * set :drawText.15:x *tmp241
+  601 op add :drawText.15:x :drawBold.7:x 1
   602 set :drawText.15:y :drawBold.7:y
   603 set :drawText.15:alignment :drawBold.7:alignment
   604 print "Materials"
 
   656 set :drawItem.5:target :drawMaterials:target.1
   657 op mul *tmp247 :drawItem.5:columns 176
   658 op div *tmp248 *tmp247 2
-    * op sub *tmp249 210 *tmp248
-    * set :drawItem.5:barLength *tmp249
-    * op add *tmp250 48 :drawItem.5:barLength
-    * set :drawItem.5:textEnd *tmp250
+  659 op sub :drawItem.5:barLength 210 *tmp248
+  660 op add :drawItem.5:textEnd 48 :drawItem.5:barLength
   661 op mul *tmp251 :drawItem.5:barLength :drawItem.5:current
   662 op div *tmp252 *tmp251 :drawItem.5:target
-    * op min *tmp253 :drawItem.5:barLength *tmp252
-    * set :drawItem.5:length *tmp253
+  663 op min :drawItem.5:length :drawItem.5:barLength *tmp252
   664 op mul *tmp254 :drawItem.5:col 176
   665 op div *tmp255 *tmp254 2
-    * op add *tmp256 11 *tmp255
-    * set :drawItem.5:iconX *tmp256
+  666 op add :drawItem.5:iconX 11 *tmp255
   667 op mul *tmp257 :drawItem.5:col 176
   668 op div *tmp258 *tmp257 2
-    * op add *tmp259 22 *tmp258
-    * set :drawItem.5:barX *tmp259
+  669 op add :drawItem.5:barX 22 *tmp258
   670 op mul *tmp260 :drawItem.5:col 176
   671 op div *tmp261 *tmp260 2
-    * op add *tmp262 :drawItem.5:textEnd *tmp261
-    * set :drawItem.5:textX *tmp262
+  672 op add :drawItem.5:textX :drawItem.5:textEnd *tmp261
   673 draw col %[white]
   674 op add *tmp263 :drawItem.5:y 5
   675 draw image :drawItem.5:iconX *tmp263 :drawItem.5:item 16 0
 
   692 draw print :drawPrint.16:x :drawPrint.16:y :drawPrint.16:alignment
   693 label *label131
   694 label *label130
-    * op add *tmp266 :drawBold.8:x 1
-    * set :drawText.17:x *tmp266
+  695 op add :drawText.17:x :drawBold.8:x 1
   696 set :drawText.17:y :drawBold.8:y
   697 set :drawText.17:alignment :drawBold.8:alignment
   698 print :drawMaterials:target.1
 
   756 draw print :drawPrint.18:x :drawPrint.18:y :drawPrint.18:alignment
   757 label *label143
   758 label *label142
-    * op add *tmp273 :drawBold.9:x 1
-    * set :drawText.19:x *tmp273
+  759 op add :drawText.19:x :drawBold.9:x 1
   760 set :drawText.19:y :drawBold.9:y
   761 set :drawText.19:alignment :drawBold.9:alignment
   762 print "Builder"
 
   781 set :drawItem.6:target .transportTarget
   782 op mul *tmp277 :drawItem.6:columns 176
   783 op div *tmp278 *tmp277 2
-    * op sub *tmp279 210 *tmp278
-    * set :drawItem.6:barLength *tmp279
-    * op add *tmp280 48 :drawItem.6:barLength
-    * set :drawItem.6:textEnd *tmp280
+  784 op sub :drawItem.6:barLength 210 *tmp278
+  785 op add :drawItem.6:textEnd 48 :drawItem.6:barLength
   786 op mul *tmp281 :drawItem.6:barLength :drawItem.6:current
   787 op div *tmp282 *tmp281 :drawItem.6:target
-    * op min *tmp283 :drawItem.6:barLength *tmp282
-    * set :drawItem.6:length *tmp283
+  788 op min :drawItem.6:length :drawItem.6:barLength *tmp282
   789 op mul *tmp284 :drawItem.6:col 176
   790 op div *tmp285 *tmp284 2
-    * op add *tmp286 11 *tmp285
-    * set :drawItem.6:iconX *tmp286
+  791 op add :drawItem.6:iconX 11 *tmp285
   792 op mul *tmp287 :drawItem.6:col 176
   793 op div *tmp288 *tmp287 2
-    * op add *tmp289 22 *tmp288
-    * set :drawItem.6:barX *tmp289
+  794 op add :drawItem.6:barX 22 *tmp288
   795 op mul *tmp290 :drawItem.6:col 176
   796 op div *tmp291 *tmp290 2
-    * op add *tmp292 :drawItem.6:textEnd *tmp291
-    * set :drawItem.6:textX *tmp292
+  797 op add :drawItem.6:textX :drawItem.6:textEnd *tmp291
   798 draw col %[white]
   799 op add *tmp293 :drawItem.6:y 5
   800 draw image :drawItem.6:iconX *tmp293 :drawItem.6:item 16 0
 
   810 set :drawText.20:x :drawBold.10:x
   811 set :drawText.20:y :drawBold.10:y
   812 set :drawText.20:alignment :drawBold.10:alignment
-    * set *tmp296 .transportTarget
-    * print *tmp296
+  813 print .transportTarget
   814 set :drawPrint.20:x :drawText.20:x
   815 set :drawPrint.20:y :drawText.20:y
   816 set :drawPrint.20:alignment :drawText.20:alignment
   817 draw print :drawPrint.20:x :drawPrint.20:y :drawPrint.20:alignment
   818 label *label152
   819 label *label151
-    * op add *tmp297 :drawBold.10:x 1
-    * set :drawText.21:x *tmp297
+  820 op add :drawText.21:x :drawBold.10:x 1
   821 set :drawText.21:y :drawBold.10:y
   822 set :drawText.21:alignment :drawBold.10:alignment
-    * set *tmp298 .transportTarget
-    * print *tmp298
+  823 print .transportTarget
   824 set :drawPrint.21:x :drawText.21:x
   825 set :drawPrint.21:y :drawText.21:y
   826 set :drawPrint.21:alignment :drawText.21:alignment
 
   841 label *label148
   842 jump *label147 always
   843 label *label146
-    * sensor *tmp301 @unit @firstItem
-    * set :drawUnit:unitItem *tmp301
+  844 sensor :drawUnit:unitItem @unit @firstItem
   845 sensor *tmp302 @unit @totalItems
   846 op equal *tmp303 :drawUnit:unitItem .transportItem
   847 op mul *tmp304 *tmp302 *tmp303
 
   857 set :drawItem.7:target .transportTarget
   858 op mul *tmp306 :drawItem.7:columns 176
   859 op div *tmp307 *tmp306 2
-    * op sub *tmp308 210 *tmp307
-    * set :drawItem.7:barLength *tmp308
-    * op add *tmp309 48 :drawItem.7:barLength
-    * set :drawItem.7:textEnd *tmp309
+  860 op sub :drawItem.7:barLength 210 *tmp307
+  861 op add :drawItem.7:textEnd 48 :drawItem.7:barLength
   862 op mul *tmp310 :drawItem.7:barLength :drawItem.7:current
   863 op div *tmp311 *tmp310 :drawItem.7:target
-    * op min *tmp312 :drawItem.7:barLength *tmp311
-    * set :drawItem.7:length *tmp312
+  864 op min :drawItem.7:length :drawItem.7:barLength *tmp311
   865 op mul *tmp313 :drawItem.7:col 176
   866 op div *tmp314 *tmp313 2
-    * op add *tmp315 11 *tmp314
-    * set :drawItem.7:iconX *tmp315
+  867 op add :drawItem.7:iconX 11 *tmp314
   868 op mul *tmp316 :drawItem.7:col 176
   869 op div *tmp317 *tmp316 2
-    * op add *tmp318 22 *tmp317
-    * set :drawItem.7:barX *tmp318
+  870 op add :drawItem.7:barX 22 *tmp317
   871 op mul *tmp319 :drawItem.7:col 176
   872 op div *tmp320 *tmp319 2
-    * op add *tmp321 :drawItem.7:textEnd *tmp320
-    * set :drawItem.7:textX *tmp321
+  873 op add :drawItem.7:textX :drawItem.7:textEnd *tmp320
   874 draw col %[white]
   875 op add *tmp322 :drawItem.7:y 5
   876 draw image :drawItem.7:iconX *tmp322 :drawItem.7:item 16 0
 
   886 set :drawText.22:x :drawBold.11:x
   887 set :drawText.22:y :drawBold.11:y
   888 set :drawText.22:alignment :drawBold.11:alignment
-    * set *tmp325 .transportTarget
-    * print *tmp325
+  889 print .transportTarget
   890 set :drawPrint.22:x :drawText.22:x
   891 set :drawPrint.22:y :drawText.22:y
   892 set :drawPrint.22:alignment :drawText.22:alignment
   893 draw print :drawPrint.22:x :drawPrint.22:y :drawPrint.22:alignment
   894 label *label161
   895 label *label160
-    * op add *tmp326 :drawBold.11:x 1
-    * set :drawText.23:x *tmp326
+  896 op add :drawText.23:x :drawBold.11:x 1
   897 set :drawText.23:y :drawBold.11:y
   898 set :drawText.23:alignment :drawBold.11:alignment
-    * set *tmp327 .transportTarget
-    * print *tmp327
+  899 print .transportTarget
   900 set :drawPrint.23:x :drawText.23:x
   901 set :drawPrint.23:y :drawText.23:y
   902 set :drawPrint.23:alignment :drawText.23:alignment
 
   924 label *label21
   925 op equal *tmp330 .page 1
   926 jump *label166 equal *tmp330 false
-    * read *tmp333 bank2 510
-    * set :displayStorage:tail *tmp333
+  927 read :displayStorage:tail bank2 510
   928 jump *label169 equal .pageSwitched false
-    * read *tmp335 bank2 511
-    * set .lastTail *tmp335
+  929 read .lastTail bank2 511
   930 draw col %[white]
   931 set :displayStorage:y 165
   932 set :displayStorage:item @copper
 
   980 jump *label184 always
   981 label *label183
   982 label *label184
-    * set *tmp339 .lastTail
-    * read *tmp340 bank2 *tmp339
-    * set :displayStorage:accumulator *tmp340
-    * op add *tmp341 25 .lastTail
-    * set :displayStorage:x *tmp341
+  983 read :displayStorage:accumulator bank2 .lastTail
+  984 op add :displayStorage:x 25 .lastTail
   985 set :displayStorage:y.1 165
   986 setaddr *tmp342 *label188
   987 jump *label185 always
 
  1010 setaddr *tmp342 *label196
  1011 label *label185
  1012 op and *tmp343 :displayStorage:accumulator 0b11111
-    * op sub *tmp344 *tmp343 8
-    * set :displayStorage:value *tmp344
+ 1013 op sub :displayStorage:value *tmp343 8
  1014 op greaterThanEq *tmp345 :displayStorage:value 0
  1015 jump *label197 equal *tmp345 false
  1016 set *tmp346 %[green]
 
  1052 draw print :drawPrint.24:x :drawPrint.24:y :drawPrint.24:alignment
  1053 label *label207
  1054 label *label206
-    * op add *tmp352 :drawBold.12:x 1
-    * set :drawText.25:x *tmp352
+ 1055 op add :drawText.25:x :drawBold.12:x 1
  1056 set :drawText.25:y :drawBold.12:y
  1057 set :drawText.25:alignment :drawBold.12:alignment
  1058 print "Base map"
 
  1186 op greaterThanEq *tmp354 :displayBaseMap:i 0
  1187 jump *label242 equal *tmp354 false
  1188 set .recentBuildIndex -1
-    * set *tmp356 :displayBaseMap:i
-    * readarr<regular> *tmp357 .BLOCKS[] *tmp356
-    * set :drawBlock:cfg *tmp357
+ 1189 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
  1190 setaddr :drawBlock*retaddr *label244 (h:*label244)
  1191 call *label7 *invalid :drawBlock*retval (m:*label244) (h:*label244)
  1192 label *label244
 
  1208 label *label201
  1209 jump *label200 always
  1210 label *label199
-    * op sub *tmp360 .page 3
-    * set :displayLog:page *tmp360
-    * read *tmp361 bank1 511
-    * set :displayLog:logPosition *tmp361
-    * op sub *tmp362 511 :displayLog:logPosition
-    * set :displayLog:records *tmp362
+ 1211 op sub :displayLog:page .page 3
+ 1212 read :displayLog:logPosition bank1 511
+ 1213 op sub :displayLog:records 511 :displayLog:logPosition
  1214 op sub *tmp363 :displayLog:records 1
  1215 op idiv *tmp364 *tmp363 39
  1216 op add *tmp365 *tmp364 1
-    * op max *tmp366 1 *tmp365
-    * set :displayLog:pages *tmp366
-    * op add *tmp367 :displayLog:pages 3
-    * set .numPages *tmp367
+ 1217 op max :displayLog:pages 1 *tmp365
+ 1218 op add .numPages :displayLog:pages 3
  1219 op mul *tmp368 39 :displayLog:page
-    * op sub *tmp369 511 *tmp368
-    * set :displayLog:start *tmp369
+ 1220 op sub :displayLog:start 511 *tmp368
  1221 op sub *tmp370 :displayLog:start 39
-    * op max *tmp371 :displayLog:logPosition *tmp370
-    * set :displayLog:stop *tmp371
+ 1222 op max :displayLog:stop :displayLog:logPosition *tmp370
  1223 jump *label248 equal .pageSwitched false
  1224 draw clear 0 0 32
  1225 draw col %[gold]
 
  1236 draw print :drawPrint.26:x :drawPrint.26:y :drawPrint.26:alignment
  1237 label *label252
  1238 label *label251
-    * op add *tmp373 :drawBold.13:x 1
-    * set :drawText.27:x *tmp373
+ 1239 op add :drawText.27:x :drawBold.13:x 1
  1240 set :drawText.27:y :drawBold.13:y
  1241 set :drawText.27:alignment :drawBold.13:alignment
  1242 print "Build records"
 
  1271 op sub :displayLog:position .lastRecord 1
  1272 label *label258
  1273 jump *label260 lessThan :displayLog:position *tmp375
-    * set *tmp376 :displayLog:position
-    * read *tmp377 bank1 *tmp376
-    * set :displayLog:record *tmp377
+ 1274 read :displayLog:record bank1 :displayLog:position
  1275 op sub *tmp378 :displayLog:start :displayLog:position
  1276 op sub *tmp379 *tmp378 1
  1277 set :displayRecord:record :displayLog:record
  1278 set :displayRecord:index *tmp379
-    * op idiv *tmp380 :displayRecord:index 13
-    * set :displayRecord:col *tmp380
-    * op mod *tmp381 :displayRecord:index 13
-    * set :displayRecord:row *tmp381
+ 1279 op idiv :displayRecord:col :displayRecord:index 13
+ 1280 op mod :displayRecord:row :displayRecord:index 13
  1281 op mul *tmp382 58 :displayRecord:col
-    * op add *tmp383 11 *tmp382
-    * set :displayRecord:x *tmp383
+ 1282 op add :displayRecord:x 11 *tmp382
  1283 op mul *tmp384 15 :displayRecord:row
-    * op sub *tmp385 189 *tmp384
-    * set :displayRecord:y *tmp385
-    * op mod *tmp386 :displayRecord:record 1000
-    * set :displayRecord:id *tmp386
+ 1284 op sub :displayRecord:y 189 *tmp384
+ 1285 op mod :displayRecord:id :displayRecord:record 1000
  1286 op greaterThan *tmp387 :displayRecord:id @blockCount
  1287 jump *label262 equal *tmp387 false
  1288 op sub *tmp389 :displayRecord:id @blockCount
-    * lookup unit *tmp390 *tmp389
-    * set *tmp388 *tmp390
+ 1289 lookup unit *tmp388 *tmp389
  1290 jump *label263 always
  1291 label *label262
-    * lookup block *tmp391 :displayRecord:id
-    * set *tmp388 *tmp391
+ 1292 lookup block *tmp388 :displayRecord:id
  1293 label *label263
  1294 set :displayRecord:icon *tmp388
  1295 op div *tmp392 :displayRecord:record 1000
  1296 op div *tmp393 *tmp392 120
-    * op floor *tmp394 *tmp393
-    * set :displayRecord:t *tmp394
-    * op idiv *tmp395 :displayRecord:t 60
-    * set :displayRecord:m *tmp395
-    * op mod *tmp396 :displayRecord:t 60
-    * set :displayRecord:s *tmp396
+ 1297 op floor :displayRecord:t *tmp393
+ 1298 op idiv :displayRecord:m :displayRecord:t 60
+ 1299 op mod :displayRecord:s :displayRecord:t 60
  1300 op lessThan *tmp397 :displayRecord:s 10
  1301 jump *label264 equal *tmp397 false
  1302 set *tmp398 "0"
 
  1333 op sub :displayLog:position :displayLog:position 1
  1334 jump *label258 always
  1335 label *label260
-    * op add *tmp404 :displayLog:stop 1
-    * set .lastRecord *tmp404
+ 1336 op add .lastRecord :displayLog:stop 1
  1337 drawflush display1
  1338 label *label247
  1339 label *label200
 
  1351 print "\n"
  1352 print "==================================[]"
  1353 print "\n"
-    * set *tmp407 .status1
-    * print *tmp407
+ 1354 print .status1
  1355 print "\n"
  1356 print .status2
  1357 print .item2
 
  1360 print .block2
  1361 print ")"
  1362 print "\n"
-    * set *tmp408 .status3
-    * print *tmp408
+ 1363 print .status3
  1364 print "\n"
  1365 printflush message1
  1366 label *label272
  1367 label *label271
-    * sensor *tmp409 switch1 @enabled
-    * set .pageSwitched *tmp409
+ 1368 sensor .pageSwitched switch1 @enabled
  1369 jump *label273 equal .pageSwitched false
  1370 control enabled switch1 false
  1371 op add *tmp412 .page 1
-    * op mod *tmp413 *tmp412 .numPages
-    * set .page *tmp413
+ 1372 op mod .page *tmp412 .numPages
  1373 drawflush null
  1374 draw reset
  1375 draw clear 0 0 32
 
  1402 draw print :drawPrint.30:x :drawPrint.30:y :drawPrint.30:alignment
  1403 label *label278
  1404 label *label277
-    * op add *tmp414 :drawBold.14:x 1
-    * set :drawText.31:x *tmp414
+ 1405 op add :drawText.31:x :drawBold.14:x 1
  1406 set :drawText.31:y :drawBold.14:y
  1407 set :drawText.31:alignment :drawBold.14:alignment
  1408 print "Goal"
 
  1414 label *label279
  1415 label *label276
  1416 draw col %[white]
-    * op add *tmp415 .nextBlock .nextUnit
-    * set :drawHeader:count *tmp415
+ 1417 op add :drawHeader:count .nextBlock .nextUnit
  1418 op equal *tmp416 :drawHeader:count 2
  1419 jump *label281 equal *tmp416 false
  1420 draw image 27 239 .nextBlock 25 0
 
  1442 set :drawHeader:tt @second
  1443 read *tmp0 processor1 "time"
  1444 op div *tmp425 *tmp0 120
-    * op floor *tmp426 *tmp425
-    * set :drawHeader:t *tmp426
-    * op idiv *tmp427 :drawHeader:t 60
-    * set :drawHeader:m *tmp427
-    * op mod *tmp428 :drawHeader:t 60
-    * set :drawHeader:s *tmp428
+ 1445 op floor :drawHeader:t *tmp425
+ 1446 op idiv :drawHeader:m :drawHeader:t 60
+ 1447 op mod :drawHeader:s :drawHeader:t 60
  1448 op lessThan *tmp429 :drawHeader:s 10
  1449 jump *label287 equal *tmp429 false
  1450 set *tmp430 "0"
 
  1458 print :drawHeader:s
  1459 op mul *tmp431 10 :drawHeader:t
  1460 op div *tmp432 *tmp431 :drawHeader:tt
-    * op round *tmp433 *tmp432
-    * set :drawHeader:ratio *tmp433
+ 1461 op round :drawHeader:ratio *tmp432
  1462 op idiv *tmp434 :drawHeader:ratio 10
  1463 op mod *tmp435 :drawHeader:ratio 10
  1464 print " (x"
 
  1477 label *label289
  1478 jump *label291 equal .titaniumDrill false
  1479 sensor *tmp437 .titaniumDrill @titanium
-    * op max *tmp438 .titaniumDrillCount *tmp437
-    * set :drawHeader:count *tmp438
+ 1480 op max :drawHeader:count .titaniumDrillCount *tmp437
  1481 set :drawHeader:x 174
  1482 op log10 *tmp439 :drawHeader:count
-    * op floor *tmp440 *tmp439
-    * set :drawHeader:len *tmp440
+ 1483 op floor :drawHeader:len *tmp439
  1484 set :drawText.33:x :drawHeader:x
  1485 set :drawText.33:y 255
  1486 set :drawText.33:alignment @topRight
 
  1500 label *label291
  1501 label *label292
  1502 jump *label295 equal .thoriumContainer false
-    * sensor *tmp445 .thoriumContainer @thorium
-    * set :drawHeader:count *tmp445
+ 1503 sensor :drawHeader:count .thoriumContainer @thorium
  1504 set :drawHeader:x.1 124
  1505 op log10 *tmp446 :drawHeader:count
-    * op floor *tmp447 *tmp446
-    * set :drawHeader:len.1 *tmp447
+ 1506 op floor :drawHeader:len.1 *tmp446
  1507 set :drawText.34:x :drawHeader:x.1
  1508 set :drawText.34:y 255
  1509 set :drawText.34:alignment @topRight
 
  1613 op add :unpackCfg:index :unpackCfg:index 1
  1614 read *tmp465 :unpackCfg:cfg *tmp464
  1615 op sub *tmp466 *tmp465 74
-    * lookup block *tmp467 *tmp466
-    * set :unpackCfg:type *tmp467
+ 1616 lookup block :unpackCfg:type *tmp466
  1617 set *tmp468 :unpackCfg:index
  1618 op add :unpackCfg:index :unpackCfg:index 1
  1619 read *tmp469 :unpackCfg:cfg *tmp468
  1620 op sub *tmp470 *tmp469 74
-    * op div *tmp471 *tmp470 2
-    * set :unpackCfg:x *tmp471
+ 1621 op div :unpackCfg:x *tmp470 2
  1622 set *tmp472 :unpackCfg:index
  1623 op add :unpackCfg:index :unpackCfg:index 1
  1624 read *tmp473 :unpackCfg:cfg *tmp472
  1625 op sub *tmp474 *tmp473 74
-    * op div *tmp475 *tmp474 2
-    * set :unpackCfg:y *tmp475
+ 1626 op div :unpackCfg:y *tmp474 2
  1627 set *tmp476 :unpackCfg:index
  1628 op add :unpackCfg:index :unpackCfg:index 1
  1629 read *tmp477 :unpackCfg:cfg *tmp476
-    * op sub *tmp478 *tmp477 74
-    * set :unpackCfg:rotation *tmp478
+ 1630 op sub :unpackCfg:rotation *tmp477 74
  1631 set *tmp479 :unpackCfg:index
  1632 op add :unpackCfg:index :unpackCfg:index 1
  1633 read *tmp480 :unpackCfg:cfg *tmp479
-    * op sub *tmp481 *tmp480 74
-    * set :unpackCfg:ind *tmp481
-    * sensor *tmp489 :unpackCfg:type @size
-    * set :unpackCfg:size *tmp489
+ 1634 op sub :unpackCfg:ind *tmp480 74
+ 1635 sensor :unpackCfg:size :unpackCfg:type @size
  1636 label *label317
  1637 set :unpackCfg2:type :unpackCfg:type
  1638 set :unpackCfg2:x :unpackCfg:x

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    26 printflush null
    27 drawflush null
    28 label *label16
-    * jump *label18 equal true false
    29 jump *label19 equal .unitReset false
    30 set .reconstructorProgress 0
    31 set .factoryProgress .reconstructorProgress

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-40 instructions):
 
    20 ubind @poly
    21 ulocate building core false @copper *tmp42 *tmp43 *tmp44 .core
    22 label *label14
-    * op equal *tmp45 .core null
-    * jump *label13 notEqual *tmp45 false
+   23 jump *label13 equal .core null
    24 label *label15
    25 printflush null
    26 drawflush null
 
    32 jump *label20 always
    33 label *label19
    34 label *label20
-    * op equal *tmp49 .page 0
-    * jump *label21 equal *tmp49 false
-    * op greaterThan *tmp51 .megas 0
-    * jump *label23 equal *tmp51 false
-    * op lessThan *tmp53 .animation 0
-    * jump *label26 equal *tmp53 false
+   35 jump *label21 notEqual .page 0
+   36 jump *label23 lessThanEq .megas 0
+   37 jump *label26 greaterThanEq .animation 0
    38 draw color 0 0 32 80
    39 draw rect 0 0 176 176
    40 jump *label27 always
 
    85 label *label32
    86 set :drawMaterials:col 0
    87 set :drawMaterials:y 190
-    * op equal *tmp74 .nextBlock null
-    * jump *label34 equal *tmp74 false
+   88 jump *label34 notEqual .nextBlock null
    89 sensor *tmp76 A¾BFLX-air-factory14 @progress
    90 op max .factoryProgress .factoryProgress *tmp76
    91 sensor *tmp78 AÀF@Ld-additive-reconstructor26 @progress
    92 op max .reconstructorProgress .reconstructorProgress *tmp78
    93 sensor :drawMaterials:multiReconstructorProgress AÁNBJe-multiplicative-reconstructor27 @progress
-    * op equal *tmp81 .nextUnit @mono
-    * jump *label36 equal *tmp81 false
+   94 jump *label36 notEqual .nextUnit @mono
    95 set :drawMaterials:targetFactoryLead 15
    96 set :drawMaterials:targetFactorySilicon 30
    97 set .materialCount 2
 
   102 set :drawMaterials:unit2 :drawMaterials:unit3
   103 jump *label37 always
   104 label *label36
-    * op equal *tmp86 .nextUnit @flare
-    * jump *label38 equal *tmp86 false
+  105 jump *label38 notEqual .nextUnit @flare
   106 set :drawMaterials:targetFactoryLead 0
   107 set :drawMaterials:targetFactorySilicon 15
   108 set .materialCount 1
 
   113 set :drawMaterials:unit2 :drawMaterials:unit3
   114 jump *label39 always
   115 label *label38
-    * op equal *tmp91 .nextUnit @poly
-    * jump *label40 equal *tmp91 false
+  116 jump *label40 notEqual .nextUnit @poly
   117 op floor :drawMaterials:unitCount1 .factoryProgress
   118 set :drawMaterials:unitCount2 .polys
   119 set :drawMaterials:unitTotal1 1
 
   125 op max .factoryProgress .factoryProgress *tmp97
   126 jump *label41 always
   127 label *label40
-    * op equal *tmp99 .nextUnit @mega
-    * jump *label42 equal *tmp99 false
+  128 jump *label42 notEqual .nextUnit @mega
   129 op floor :drawMaterials:unitCount1 .factoryProgress
   130 op floor :drawMaterials:unitCount2 .reconstructorProgress
   131 set :drawMaterials:unitTotal1 1
 
   167 label *label48
   168 label *label47
   169 label *label44
-    * op greaterThan *tmp109 .factoryProgress 0
-    * jump *label49 equal *tmp109 false
+  170 jump *label49 lessThanEq .factoryProgress 0
   171 set :drawItem:col 0
   172 set :drawItem:y 190
   173 set :drawItem:columns 1
 
   228 label *label55
   229 label *label52
   230 op add :drawItem:col :drawItem:col 1
-    * op greaterThanEq *tmp131 :drawItem:col :drawItem:columns
-    * jump *label57 equal *tmp131 false
+  231 jump *label57 lessThan :drawItem:col :drawItem:columns
   232 set :drawItem:col 0
   233 op sub :drawItem:y :drawItem:y 15
   234 jump *label58 always
   235 label *label57
   236 label *label58
   237 label *label51
-    * op notEqual *tmp133 :drawMaterials:unit2 null
-    * jump *label59 equal *tmp133 false
+  238 jump *label59 equal :drawMaterials:unit2 null
   239 set :drawItem.1:col 0
   240 set :drawItem.1:y 175
   241 set :drawItem.1:columns 1
 
   296 label *label65
   297 label *label62
   298 op add :drawItem.1:col :drawItem.1:col 1
-    * op greaterThanEq *tmp155 :drawItem.1:col :drawItem.1:columns
-    * jump *label67 equal *tmp155 false
+  299 jump *label67 lessThan :drawItem.1:col :drawItem.1:columns
   300 set :drawItem.1:col 0
   301 op sub :drawItem.1:y :drawItem.1:y 15
   302 jump *label68 always
   303 label *label67
   304 label *label68
   305 label *label61
-    * op notEqual *tmp157 :drawMaterials:unit3 null
-    * jump *label69 equal *tmp157 false
+  306 jump *label69 equal :drawMaterials:unit3 null
   307 set :drawItem.2:col 0
   308 set :drawItem.2:y 160
   309 set :drawItem.2:columns 1
 
   364 label *label75
   365 label *label72
   366 op add :drawItem.2:col :drawItem.2:col 1
-    * op greaterThanEq *tmp181 :drawItem.2:col :drawItem.2:columns
-    * jump *label77 equal *tmp181 false
+  367 jump *label77 lessThan :drawItem.2:col :drawItem.2:columns
   368 set :drawItem.2:col 0
   369 op sub :drawItem.2:y :drawItem.2:y 15
   370 jump *label78 always
 
   388 set :drawMaterials:target :drawMaterials:targetFactorySilicon
   389 setaddr *tmp183 *label83
   390 label *label79
-    * op greaterThan *tmp184 :drawMaterials:target 0
-    * jump *label84 equal *tmp184 false
+  391 jump *label84 lessThanEq :drawMaterials:target 0
   392 sensor *tmp186 A¾BFLX-air-factory14 :drawMaterials:item
   393 set :drawItem.3:col :drawMaterials:col
   394 set :drawItem.3:y :drawMaterials:y
 
   446 label *label90
   447 label *label87
   448 op add :drawItem.3:col :drawItem.3:col 1
-    * op greaterThanEq *tmp207 :drawItem.3:col :drawItem.3:columns
-    * jump *label92 equal *tmp207 false
+  449 jump *label92 lessThan :drawItem.3:col :drawItem.3:columns
   450 set :drawItem.3:col 0
   451 op sub :drawItem.3:y :drawItem.3:y 15
   452 jump *label93 always
 
   555 label *label105
   556 label *label102
   557 op add :drawItem.4:col :drawItem.4:col 1
-    * op greaterThanEq *tmp238 :drawItem.4:col :drawItem.4:columns
-    * jump *label107 equal *tmp238 false
+  558 jump *label107 lessThan :drawItem.4:col :drawItem.4:columns
   559 set :drawItem.4:col 0
   560 op sub :drawItem.4:y :drawItem.4:y 15
   561 jump *label108 always
 
   626 set :drawMaterials:target.1 .targetThorium
   627 setaddr *tmp243 *label125
   628 label *label116
-    * op greaterThan *tmp244 :drawMaterials:target.1 0
-    * jump *label126 equal *tmp244 false
+  629 jump *label126 lessThanEq :drawMaterials:target.1 0
   630 sensor *tmp246 .core :drawMaterials:item.1
   631 set :drawItem.5:col :drawMaterials:col
   632 set :drawItem.5:y :drawMaterials:y
 
   684 label *label132
   685 label *label129
   686 op add :drawItem.5:col :drawItem.5:col 1
-    * op greaterThanEq *tmp267 :drawItem.5:col :drawItem.5:columns
-    * jump *label134 equal *tmp267 false
+  687 jump *label134 lessThan :drawItem.5:col :drawItem.5:columns
   688 set :drawItem.5:col 0
   689 op sub :drawItem.5:y :drawItem.5:y 15
   690 jump *label135 always
 
   694 set :drawMaterials:col :drawItem.5:col
   695 set :drawMaterials:y :drawItem.5:y
   696 op sub :drawMaterials:count :drawMaterials:count 1
-    * op lessThanEq *tmp269 :drawMaterials:count 0
-    * jump *label136 equal *tmp269 false
+  697 jump *label136 greaterThan :drawMaterials:count 0
   698 jump *label118 always
   699 jump *label137 always
   700 label *label136
 
   713 label *label35
   714 label *label33
   715 draw col %[white]
-    * op lessThan *tmp271 .materialCount 4
-    * jump *label139 equal *tmp271 false
+  716 jump *label139 greaterThanEq .materialCount 4
   717 set *tmp272 140
   718 jump *label140 always
   719 label *label139
 
   744 label *label145
   745 label *label144
   746 label *label141
-    * op equal *tmp274 .transportItem null
-    * jump *label146 equal *tmp274 false
+  747 jump *label146 notEqual .transportItem null
   748 op sub *tmp276 :drawUnit:y 15
   749 set :drawUnit.1:item @poly
   750 set :drawUnit.1:items 0
 
   805 label *label153
   806 label *label150
   807 op add :drawItem.6:col :drawItem.6:col 1
-    * op greaterThanEq *tmp299 :drawItem.6:col :drawItem.6:columns
-    * jump *label155 equal *tmp299 false
+  808 jump *label155 lessThan :drawItem.6:col :drawItem.6:columns
   809 set :drawItem.6:col 0
   810 op sub :drawItem.6:y :drawItem.6:y 15
   811 jump *label156 always
 
   880 label *label162
   881 label *label159
   882 op add :drawItem.7:col :drawItem.7:col 1
-    * op greaterThanEq *tmp328 :drawItem.7:col :drawItem.7:columns
-    * jump *label164 equal *tmp328 false
+  883 jump *label164 lessThan :drawItem.7:col :drawItem.7:columns
   884 set :drawItem.7:col 0
   885 op sub :drawItem.7:y :drawItem.7:y 15
   886 jump *label165 always
 
   896 label *label24
   897 jump *label22 always
   898 label *label21
-    * op equal *tmp330 .page 1
-    * jump *label166 equal *tmp330 false
+  899 jump *label166 notEqual .page 1
   900 read :displayStorage:tail bank2 510
   901 jump *label169 equal .pageSwitched false
   902 read .lastTail bank2 511
 
   947 jump *label170 always
   948 label *label169
   949 label *label170
-    * op greaterThan *tmp337 .lastTail :displayStorage:tail
-    * jump *label183 equal *tmp337 false
+  950 jump *label183 lessThanEq .lastTail :displayStorage:tail
   951 jump *label168 always
   952 jump *label184 always
   953 label *label183
 
   983 label *label185
   984 op and *tmp343 :displayStorage:accumulator 0b11111
   985 op sub :displayStorage:value *tmp343 8
-    * op greaterThanEq *tmp345 :displayStorage:value 0
-    * jump *label197 equal *tmp345 false
+  986 jump *label197 lessThan :displayStorage:value 0
   987 set *tmp346 %[green]
   988 jump *label198 always
   989 label *label197
 
  1003 label *label168
  1004 jump *label167 always
  1005 label *label166
-    * op equal *tmp349 .page 2
-    * jump *label199 equal *tmp349 false
+ 1006 jump *label199 notEqual .page 2
  1007 setaddr :drawHeader*retaddr *label202 (h:*label202)
  1008 call *label4 *invalid :drawHeader*retval (m:*label202) (h:*label202)
  1009 label *label202
 
  1153 call *label7 *invalid :drawBlock*retval (m:*label241) (h:*label241)
  1154 label *label241
  1155 set :displayBaseMap:i .recentBuildIndex
-    * op greaterThanEq *tmp354 :displayBaseMap:i 0
-    * jump *label242 equal *tmp354 false
+ 1156 jump *label242 lessThan :displayBaseMap:i 0
  1157 set .recentBuildIndex -1
  1158 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
  1159 setaddr :drawBlock*retaddr *label244 (h:*label244)
 
  1252 op mul *tmp384 15 :displayRecord:row
  1253 op sub :displayRecord:y 189 *tmp384
  1254 op mod :displayRecord:id :displayRecord:record 1000
-    * op greaterThan *tmp387 :displayRecord:id @blockCount
-    * jump *label262 equal *tmp387 false
+ 1255 jump *label262 lessThanEq :displayRecord:id @blockCount
  1256 op sub *tmp389 :displayRecord:id @blockCount
  1257 lookup unit *tmp388 *tmp389
  1258 jump *label263 always
 
  1265 op floor :displayRecord:t *tmp393
  1266 op idiv :displayRecord:m :displayRecord:t 60
  1267 op mod :displayRecord:s :displayRecord:t 60
-    * op lessThan *tmp397 :displayRecord:s 10
-    * jump *label264 equal *tmp397 false
+ 1268 jump *label264 greaterThanEq :displayRecord:s 10
  1269 set *tmp398 "0"
  1270 jump *label265 always
  1271 label *label264
 
  1306 label *label200
  1307 label *label167
  1308 label *label22
-    * op greaterThan *tmp405 .megas 0
-    * jump *label270 equal *tmp405 false
+ 1309 jump *label270 lessThanEq .megas 0
  1310 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  1311 print "\n"
  1312 printflush message1
 
  1381 label *label276
  1382 draw col %[white]
  1383 op add :drawHeader:count .nextBlock .nextUnit
-    * op equal *tmp416 :drawHeader:count 2
-    * jump *label281 equal *tmp416 false
+ 1384 jump *label281 notEqual :drawHeader:count 2
  1385 draw image 27 239 .nextBlock 25 0
  1386 draw image 57 239 .nextUnit 25 0
  1387 jump *label282 always
  1388 label *label281
-    * op equal *tmp418 :drawHeader:count 1
-    * jump *label283 equal *tmp418 false
-    * op notEqual *tmp420 .nextBlock null
-    * jump *label285 equal *tmp420 false
+ 1389 jump *label283 notEqual :drawHeader:count 1
+ 1390 jump *label285 equal .nextBlock null
  1391 set *tmp421 .nextBlock
  1392 jump *label286 always
  1393 label *label285
 
  1408 op floor :drawHeader:t *tmp425
  1409 op idiv :drawHeader:m :drawHeader:t 60
  1410 op mod :drawHeader:s :drawHeader:t 60
-    * op lessThan *tmp429 :drawHeader:s 10
-    * jump *label287 equal *tmp429 false
+ 1411 jump *label287 greaterThanEq :drawHeader:s 10
  1412 set *tmp430 "0"
  1413 jump *label288 always
  1414 label *label287
 
  1488 draw col %[white]
  1489 set :drawUnitCount:type @poly
  1490 set :drawUnitCount:count .polys
-    * op greaterThan *tmp451 :drawUnitCount:count 0
-    * jump *label300 equal *tmp451 false
+ 1491 jump *label300 lessThanEq :drawUnitCount:count 0
  1492 op sub *tmp453 :drawHeader:x.2 20
  1493 draw image *tmp453 227 :drawUnitCount:type 12 0
  1494 set :drawText.35:x :drawHeader:x.2
 
  1509 label *label299
  1510 set :drawUnitCount.1:type @mono
  1511 set :drawUnitCount.1:count .monos
-    * op greaterThan *tmp454 :drawUnitCount.1:count 0
-    * jump *label305 equal *tmp454 false
+ 1512 jump *label305 lessThanEq :drawUnitCount.1:count 0
  1513 op sub *tmp456 :drawHeader:x.2 20
  1514 draw image *tmp456 227 :drawUnitCount.1:type 12 0
  1515 set :drawText.36:x :drawHeader:x.2
 
  1530 label *label304
  1531 set :drawUnitCount.2:type @flare
  1532 set :drawUnitCount.2:count .flares
-    * op greaterThan *tmp457 :drawUnitCount.2:count 0
-    * jump *label310 equal *tmp457 false
+ 1533 jump *label310 lessThanEq :drawUnitCount.2:count 0
  1534 op sub *tmp459 :drawHeader:x.2 20
  1535 draw image *tmp459 227 :drawUnitCount.2:type 12 0
  1536 set :drawText.37:x :drawHeader:x.2

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-30 instructions):
 
    29 set .reconstructorProgress 0
    30 set .factoryProgress .reconstructorProgress
    31 set .unitReset false
-    * jump *label20 always
    32 label *label19
    33 label *label20
    34 jump *label21 notEqual .page 0
 
   136 op max .factoryProgress .factoryProgress *tmp104
   137 op greaterThan *tmp106 :drawMaterials:multiReconstructorProgress 0
   138 op max .reconstructorProgress .reconstructorProgress *tmp106
-    * jump *label43 always
   139 label *label42
   140 label *label43
   141 label *label41
 
   229 jump *label57 lessThan :drawItem:col :drawItem:columns
   230 set :drawItem:col 0
   231 op sub :drawItem:y :drawItem:y 15
-    * jump *label58 always
   232 label *label57
   233 label *label58
   234 label *label51
 
   296 jump *label67 lessThan :drawItem.1:col :drawItem.1:columns
   297 set :drawItem.1:col 0
   298 op sub :drawItem.1:y :drawItem.1:y 15
-    * jump *label68 always
   299 label *label67
   300 label *label68
   301 label *label61
 
   363 jump *label77 lessThan :drawItem.2:col :drawItem.2:columns
   364 set :drawItem.2:col 0
   365 op sub :drawItem.2:y :drawItem.2:y 15
-    * jump *label78 always
   366 label *label77
   367 label *label78
   368 label *label71
-    * jump *label70 always
   369 label *label69
   370 label *label70
-    * jump *label60 always
   371 label *label59
   372 label *label60
   373 jump *label50 always
 
   442 jump *label92 lessThan :drawItem.3:col :drawItem.3:columns
   443 set :drawItem.3:col 0
   444 op sub :drawItem.3:y :drawItem.3:y 15
-    * jump *label93 always
   445 label *label92
   446 label *label93
   447 label *label86
   448 set :drawMaterials:col :drawItem.3:col
   449 set :drawMaterials:y :drawItem.3:y
-    * jump *label85 always
   450 label *label84
   451 label *label85
   452 label *label80
 
   549 jump *label107 lessThan :drawItem.4:col :drawItem.4:columns
   550 set :drawItem.4:col 0
   551 op sub :drawItem.4:y :drawItem.4:y 15
-    * jump *label108 always
   552 label *label107
   553 label *label108
   554 label *label101
 
   677 jump *label134 lessThan :drawItem.5:col :drawItem.5:columns
   678 set :drawItem.5:col 0
   679 op sub :drawItem.5:y :drawItem.5:y 15
-    * jump *label135 always
   680 label *label134
   681 label *label135
   682 label *label128
 
   685 op sub :drawMaterials:count :drawMaterials:count 1
   686 jump *label136 greaterThan :drawMaterials:count 0
   687 jump *label118 always
-    * jump *label137 always
   688 label *label136
   689 label *label137
-    * jump *label127 always
   690 label *label126
   691 label *label127
   692 label *label117
   693 multijump *tmp243 0 0 (m:marker1)
   694 multilabel *label125 (m:marker1)
   695 label *label118
-    * jump *label115 always
   696 label *label114
   697 label *label115
   698 label *label95
 
   794 jump *label155 lessThan :drawItem.6:col :drawItem.6:columns
   795 set :drawItem.6:col 0
   796 op sub :drawItem.6:y :drawItem.6:y 15
-    * jump *label156 always
   797 label *label155
   798 label *label156
   799 label *label149
 
   868 jump *label164 lessThan :drawItem.7:col :drawItem.7:columns
   869 set :drawItem.7:col 0
   870 op sub :drawItem.7:y :drawItem.7:y 15
-    * jump *label165 always
   871 label *label164
   872 label *label165
   873 label *label158
 
   928 multilabel *label182 (m:marker2)
   929 label *label173
   930 drawflush display1
-    * jump *label170 always
   931 label *label169
   932 label *label170
   933 jump *label183 lessThanEq .lastTail :displayStorage:tail
   934 jump *label168 always
-    * jump *label184 always
   935 label *label183
   936 label *label184
   937 read :displayStorage:accumulator bank2 .lastTail
 
  1021 label *label210
  1022 draw image 0 0 @core-shard 6 0
  1023 drawflush display1
-    * jump *label204 always
  1024 label *label203
  1025 label *label204
  1026 set :displayBaseMap:cfg "AJEMJJ-graphite-press0"
 
  1140 setaddr :drawBlock*retaddr *label244 (h:*label244)
  1141 call *label7 *invalid :drawBlock*retval (m:*label244) (h:*label244)
  1142 label *label244
-    * jump *label243 always
  1143 label *label242
  1144 label *label243
  1145 sensor *tmp358 switch1 @enabled
  1146 jump *label245 equal *tmp358 false
  1147 draw clear 0 0 32
  1148 jump *label213 always
-    * jump *label246 always
  1149 label *label245
  1150 label *label246
  1151 drawflush display1
 
  1209 label *label256
  1210 label *label255
  1211 set .lastRecord :displayLog:start
-    * jump *label249 always
  1212 label *label248
  1213 label *label249
  1214 setaddr :drawHeader*retaddr *label257 (h:*label257)
 
  1271 sensor *tmp402 switch1 @enabled
  1272 jump *label268 equal *tmp402 false
  1273 jump *label260 always
-    * jump *label269 always
  1274 label *label268
  1275 label *label269
  1276 label *label259
 
  1316 drawflush null
  1317 draw reset
  1318 draw clear 0 0 32
-    * jump *label274 always
  1319 label *label273
  1320 label *label274
  1321 label *label17
 
  1434 op mul *tmp442 7 :drawHeader:len
  1435 op sub *tmp443 *tmp441 *tmp442
  1436 draw image *tmp443 246 @titanium 12 0
-    * jump *label292 always
  1437 label *label291
  1438 label *label292
  1439 jump *label295 equal .thoriumContainer false
 
  1456 op mul *tmp449 7 :drawHeader:len.1
  1457 op sub *tmp450 *tmp448 *tmp449
  1458 draw image *tmp450 246 @thorium 12 0
-    * jump *label296 always
  1459 label *label295
  1460 label *label296
  1461 set :drawHeader:x.2 174
 
  1477 label *label303
  1478 label *label302
  1479 op sub :drawHeader:x.2 :drawHeader:x.2 30
-    * jump *label301 always
  1480 label *label300
  1481 label *label301
  1482 label *label299
 
  1497 label *label308
  1498 label *label307
  1499 op sub :drawHeader:x.2 :drawHeader:x.2 30
-    * jump *label306 always
  1500 label *label305
  1501 label *label306
  1502 label *label304
 
  1517 label *label313
  1518 label *label312
  1519 op sub :drawHeader:x.2 :drawHeader:x.2 30
-    * jump *label311 always
  1520 label *label310
  1521 label *label311
  1522 label *label309
 
  1601 op mul *tmp500 2 :drawBlock:size
  1602 op mul *tmp501 90 :drawBlock:rotation
  1603 draw image *tmp498 *tmp499 :drawBlock:type *tmp500 *tmp501
-    * jump *label322 always
  1604 label *label321
  1605 label *label322
  1606 label *label319

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
  1239 label *label263
  1240 set :displayRecord:icon *tmp388
  1241 op div *tmp392 :displayRecord:record 1000
-    * op div *tmp393 *tmp392 120
-    * op floor :displayRecord:t *tmp393
+ 1242 op idiv :displayRecord:t *tmp392 120
  1243 op idiv :displayRecord:m :displayRecord:t 60
  1244 op mod :displayRecord:s :displayRecord:t 60
  1245 jump *label264 greaterThanEq :displayRecord:s 10
 
  1379 label *label282
  1380 set :drawHeader:tt @second
  1381 read *tmp0 processor1 "time"
-    * op div *tmp425 *tmp0 120
-    * op floor :drawHeader:t *tmp425
+ 1382 op idiv :drawHeader:t *tmp0 120
  1383 op idiv :drawHeader:m :drawHeader:t 60
  1384 op mod :drawHeader:s :drawHeader:t 60
  1385 jump *label287 greaterThanEq :drawHeader:s 10

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-9 instructions):
 
    27 label *label16
    28 jump *label19 equal .unitReset false
    29 set .reconstructorProgress 0
-    * set .factoryProgress .reconstructorProgress
+   30 set .factoryProgress 0
    31 set .unitReset false
    32 label *label19
    33 label *label20
 
    48 set :lerp:from 42
    49 set :lerp:to 88
    50 set :lerp:ratio :animate:ratio
-    * op sub *tmp59 1 :lerp:ratio
-    * op mul *tmp60 *tmp59 :lerp:from
-    * op mul *tmp61 :lerp:ratio :lerp:to
+   51 op sub *tmp59 1 :animate:ratio
+   52 op mul *tmp60 *tmp59 42
+   53 op mul *tmp61 :animate:ratio 88
    54 op add *tmp58 *tmp60 *tmp61
    55 label *label28
    56 set :animate:x *tmp58
    57 set :lerp.1:from 237
    58 set :lerp.1:to 88
    59 set :lerp.1:ratio :animate:ratio
-    * op sub *tmp64 1 :lerp.1:ratio
-    * op mul *tmp65 *tmp64 :lerp.1:from
-    * op mul *tmp66 :lerp.1:ratio :lerp.1:to
+   60 op sub *tmp64 1 :animate:ratio
+   61 op mul *tmp65 *tmp59 237
+   62 op mul *tmp66 :animate:ratio 88
    63 op add *tmp63 *tmp65 *tmp66
    64 label *label29
    65 set :animate:y *tmp63
    66 set :lerp.2:from 32
    67 set :lerp.2:to 168
    68 set :lerp.2:ratio :animate:ratio
-    * op sub *tmp69 1 :lerp.2:ratio
-    * op mul *tmp70 *tmp69 :lerp.2:from
-    * op mul *tmp71 :lerp.2:ratio :lerp.2:to
+   69 op sub *tmp69 1 :animate:ratio
+   70 op mul *tmp70 *tmp59 32
+   71 op mul *tmp71 :animate:ratio 168
    72 op add *tmp68 *tmp70 *tmp71
    73 label *label30
    74 set :animate:size *tmp68
-    * draw image :animate:x :animate:y @mega :animate:size 0
+   75 draw image *tmp58 *tmp63 @mega *tmp68 0
    76 drawflush display1
    77 op add .animation .animation 1
    78 label *label25
 
    98 set :drawMaterials:unitTotal1 .monoTarget
    99 set :drawMaterials:unit1 .nextUnit
   100 set :drawMaterials:unit3 null
-    * set :drawMaterials:unit2 :drawMaterials:unit3
+  101 set :drawMaterials:unit2 null
   102 jump *label37 always
   103 label *label36
   104 jump *label38 notEqual .nextUnit @flare
 
   109 set :drawMaterials:unitTotal1 .flareTarget
   110 set :drawMaterials:unit1 .nextUnit
   111 set :drawMaterials:unit3 null
-    * set :drawMaterials:unit2 :drawMaterials:unit3
+  112 set :drawMaterials:unit2 null
   113 jump *label39 always
   114 label *label38
   115 jump *label40 notEqual .nextUnit @poly
 
   144 set :drawBold:x 22
   145 set :drawBold:y 205
   146 set :drawBold:alignment @bottomLeft
-    * set :drawText:x :drawBold:x
-    * set :drawText:y :drawBold:y
-    * set :drawText:alignment :drawBold:alignment
+  147 set :drawText:x 22
+  148 set :drawText:y 205
+  149 set :drawText:alignment @bottomLeft
   150 print "Unit factories"
-    * set :drawPrint:x :drawText:x
-    * set :drawPrint:y :drawText:y
-    * set :drawPrint:alignment :drawText:alignment
-    * draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
+  151 set :drawPrint:x :drawBold:x
+  152 set :drawPrint:y :drawBold:y
+  153 set :drawPrint:alignment :drawBold:alignment
+  154 draw print :drawText:x :drawText:y :drawText:alignment
   155 label *label46
   156 label *label45
-    * op add :drawText.1:x :drawBold:x 1
-    * set :drawText.1:y :drawBold:y
-    * set :drawText.1:alignment :drawBold:alignment
+  157 op add :drawText.1:x 22 1
+  158 set :drawText.1:y 205
+  159 set :drawText.1:alignment @bottomLeft
   160 print "Unit factories"
-    * set :drawPrint.1:x :drawText.1:x
-    * set :drawPrint.1:y :drawText.1:y
-    * set :drawPrint.1:alignment :drawText.1:alignment
-    * draw print :drawPrint.1:x :drawPrint.1:y :drawPrint.1:alignment
+  161 set :drawPrint.1:x 23
+  162 set :drawPrint.1:y :drawBold:y
+  163 set :drawPrint.1:alignment :drawBold:alignment
+  164 draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
   165 label *label48
   166 label *label47
   167 label *label44
 
   172 set :drawItem:item :drawMaterials:unit1
   173 set :drawItem:current .factoryProgress
   174 set :drawItem:target 1
-    * op mul *tmp111 :drawItem:columns 176
-    * op div *tmp112 *tmp111 2
-    * op sub :drawItem:barLength 210 *tmp112
-    * op add :drawItem:textEnd 48 :drawItem:barLength
-    * op mul *tmp115 :drawItem:barLength :drawItem:current
-    * op div *tmp116 *tmp115 :drawItem:target
-    * op min :drawItem:length :drawItem:barLength *tmp116
-    * op mul *tmp118 :drawItem:col 176
-    * op div *tmp119 *tmp118 2
-    * op add :drawItem:iconX 11 *tmp119
-    * op mul *tmp121 :drawItem:col 176
-    * op div *tmp122 *tmp121 2
-    * op add :drawItem:barX 22 *tmp122
-    * op mul *tmp124 :drawItem:col 176
-    * op div *tmp125 *tmp124 2
-    * op add :drawItem:textX :drawItem:textEnd *tmp125
+  175 op mul *tmp111 1 176
+  176 op div *tmp112 176 2
+  177 op sub :drawItem:barLength 210 88
+  178 op add :drawItem:textEnd 48 122
+  179 op mul *tmp115 122 .factoryProgress
+  180 op div *tmp116 *tmp115 1
+  181 op min :drawItem:length 122 *tmp116
+  182 op mul *tmp118 0 176
+  183 op div *tmp119 0 2
+  184 op add :drawItem:iconX 11 0
+  185 op mul *tmp121 0 176
+  186 op div *tmp122 0 2
+  187 op add :drawItem:barX 22 0
+  188 op mul *tmp124 0 176
+  189 op div *tmp125 0 2
+  190 op add :drawItem:textX 170 0
   191 draw col %[white]
-    * op add *tmp127 :drawItem:y 5
-    * draw image :drawItem:iconX *tmp127 :drawItem:item 16 0
+  192 op add *tmp127 190 5
+  193 draw image 11 195 :drawMaterials:unit1 16 0
   194 draw color 0 128 0 255
-    * draw rect :drawItem:barX :drawItem:y :drawItem:length 10
+  195 draw rect 22 190 :drawItem:length 10
   196 draw color 0 255 0 255
-    * draw lineRect :drawItem:barX :drawItem:y :drawItem:barLength 10
-    * op add *tmp128 :drawItem:y 5
-    * op add *tmp129 *tmp128 2
-    * set :drawBold.1:x :drawItem:textX
-    * set :drawBold.1:y *tmp129
+  197 draw lineRect 22 190 122 10
+  198 op add *tmp128 190 5
+  199 op add *tmp129 195 2
+  200 set :drawBold.1:x 170
+  201 set :drawBold.1:y 197
   202 set :drawBold.1:alignment @right
-    * set :drawText.2:x :drawBold.1:x
-    * set :drawText.2:y :drawBold.1:y
-    * set :drawText.2:alignment :drawBold.1:alignment
+  203 set :drawText.2:x :drawItem:textX
+  204 set :drawText.2:y *tmp129
+  205 set :drawText.2:alignment @right
   206 print :drawMaterials:unitCount1
   207 print "/"
   208 print :drawMaterials:unitTotal1
-    * set :drawPrint.2:x :drawText.2:x
-    * set :drawPrint.2:y :drawText.2:y
-    * set :drawPrint.2:alignment :drawText.2:alignment
-    * draw print :drawPrint.2:x :drawPrint.2:y :drawPrint.2:alignment
+  209 set :drawPrint.2:x :drawBold.1:x
+  210 set :drawPrint.2:y :drawBold.1:y
+  211 set :drawPrint.2:alignment :drawBold.1:alignment
+  212 draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
   213 label *label54
   214 label *label53
-    * op add :drawText.3:x :drawBold.1:x 1
-    * set :drawText.3:y :drawBold.1:y
-    * set :drawText.3:alignment :drawBold.1:alignment
+  215 op add :drawText.3:x :drawItem:textX 1
+  216 set :drawText.3:y *tmp129
+  217 set :drawText.3:alignment @right
   218 print :drawMaterials:unitCount1
   219 print "/"
   220 print :drawMaterials:unitTotal1
   221 set :drawPrint.3:x :drawText.3:x
-    * set :drawPrint.3:y :drawText.3:y
-    * set :drawPrint.3:alignment :drawText.3:alignment
-    * draw print :drawPrint.3:x :drawPrint.3:y :drawPrint.3:alignment
+  222 set :drawPrint.3:y :drawBold.1:y
+  223 set :drawPrint.3:alignment :drawBold.1:alignment
+  224 draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
   225 label *label56
   226 label *label55
   227 label *label52
-    * op add :drawItem:col :drawItem:col 1
-    * jump *label57 lessThan :drawItem:col :drawItem:columns
-    * set :drawItem:col 0
-    * op sub :drawItem:y :drawItem:y 15
+  228 op add :drawItem:col 0 1
+  229 jump *label57 lessThan 1 1
+  230 op sub :drawItem:y 190 15
   231 label *label57
   232 label *label58
   233 label *label51
 
   238 set :drawItem.1:item :drawMaterials:unit2
   239 set :drawItem.1:current .reconstructorProgress
   240 set :drawItem.1:target 1
-    * op mul *tmp135 :drawItem.1:columns 176
-    * op div *tmp136 *tmp135 2
-    * op sub :drawItem.1:barLength 210 *tmp136
-    * op add :drawItem.1:textEnd 48 :drawItem.1:barLength
-    * op mul *tmp139 :drawItem.1:barLength :drawItem.1:current
-    * op div *tmp140 *tmp139 :drawItem.1:target
-    * op min :drawItem.1:length :drawItem.1:barLength *tmp140
-    * op mul *tmp142 :drawItem.1:col 176
-    * op div *tmp143 *tmp142 2
-    * op add :drawItem.1:iconX 11 *tmp143
-    * op mul *tmp145 :drawItem.1:col 176
-    * op div *tmp146 *tmp145 2
-    * op add :drawItem.1:barX 22 *tmp146
-    * op mul *tmp148 :drawItem.1:col 176
-    * op div *tmp149 *tmp148 2
-    * op add :drawItem.1:textX :drawItem.1:textEnd *tmp149
+  241 op mul *tmp135 1 176
+  242 op div *tmp136 176 2
+  243 op sub :drawItem.1:barLength 210 88
+  244 op add :drawItem.1:textEnd 48 122
+  245 op mul *tmp139 122 .reconstructorProgress
+  246 op div *tmp140 *tmp139 1
+  247 op min :drawItem.1:length 122 *tmp140
+  248 op mul *tmp142 0 176
+  249 op div *tmp143 0 2
+  250 op add :drawItem.1:iconX 11 0
+  251 op mul *tmp145 0 176
+  252 op div *tmp146 0 2
+  253 op add :drawItem.1:barX 22 0
+  254 op mul *tmp148 0 176
+  255 op div *tmp149 0 2
+  256 op add :drawItem.1:textX 170 0
   257 draw col %[white]
-    * op add *tmp151 :drawItem.1:y 5
-    * draw image :drawItem.1:iconX *tmp151 :drawItem.1:item 16 0
+  258 op add *tmp151 175 5
+  259 draw image 11 180 :drawMaterials:unit2 16 0
   260 draw color 0 128 0 255
-    * draw rect :drawItem.1:barX :drawItem.1:y :drawItem.1:length 10
+  261 draw rect 22 175 :drawItem.1:length 10
   262 draw color 0 255 0 255
-    * draw lineRect :drawItem.1:barX :drawItem.1:y :drawItem.1:barLength 10
-    * op add *tmp152 :drawItem.1:y 5
-    * op add *tmp153 *tmp152 2
-    * set :drawBold.2:x :drawItem.1:textX
-    * set :drawBold.2:y *tmp153
+  263 draw lineRect 22 175 122 10
+  264 op add *tmp152 175 5
+  265 op add *tmp153 180 2
+  266 set :drawBold.2:x 170
+  267 set :drawBold.2:y 182
   268 set :drawBold.2:alignment @right
-    * set :drawText.4:x :drawBold.2:x
-    * set :drawText.4:y :drawBold.2:y
-    * set :drawText.4:alignment :drawBold.2:alignment
+  269 set :drawText.4:x :drawItem.1:textX
+  270 set :drawText.4:y *tmp153
+  271 set :drawText.4:alignment @right
   272 print :drawMaterials:unitCount2
   273 print "/"
   274 print :drawMaterials:unitTotal2
-    * set :drawPrint.4:x :drawText.4:x
-    * set :drawPrint.4:y :drawText.4:y
-    * set :drawPrint.4:alignment :drawText.4:alignment
-    * draw print :drawPrint.4:x :drawPrint.4:y :drawPrint.4:alignment
+  275 set :drawPrint.4:x :drawBold.2:x
+  276 set :drawPrint.4:y :drawBold.2:y
+  277 set :drawPrint.4:alignment :drawBold.2:alignment
+  278 draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
   279 label *label64
   280 label *label63
-    * op add :drawText.5:x :drawBold.2:x 1
-    * set :drawText.5:y :drawBold.2:y
-    * set :drawText.5:alignment :drawBold.2:alignment
+  281 op add :drawText.5:x :drawItem.1:textX 1
+  282 set :drawText.5:y *tmp153
+  283 set :drawText.5:alignment @right
   284 print :drawMaterials:unitCount2
   285 print "/"
   286 print :drawMaterials:unitTotal2
   287 set :drawPrint.5:x :drawText.5:x
-    * set :drawPrint.5:y :drawText.5:y
-    * set :drawPrint.5:alignment :drawText.5:alignment
-    * draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
+  288 set :drawPrint.5:y :drawBold.2:y
+  289 set :drawPrint.5:alignment :drawBold.2:alignment
+  290 draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
   291 label *label66
   292 label *label65
   293 label *label62
-    * op add :drawItem.1:col :drawItem.1:col 1
-    * jump *label67 lessThan :drawItem.1:col :drawItem.1:columns
-    * set :drawItem.1:col 0
-    * op sub :drawItem.1:y :drawItem.1:y 15
+  294 op add :drawItem.1:col 0 1
+  295 jump *label67 lessThan 1 1
+  296 op sub :drawItem.1:y 175 15
   297 label *label67
   298 label *label68
   299 label *label61
 
   304 set :drawItem.2:item :drawMaterials:unit3
   305 set :drawItem.2:current :drawMaterials:multiReconstructorProgress
   306 set :drawItem.2:target 1
-    * op mul *tmp159 :drawItem.2:columns 176
-    * op div *tmp160 *tmp159 2
-    * op sub :drawItem.2:barLength 210 *tmp160
-    * op add :drawItem.2:textEnd 48 :drawItem.2:barLength
-    * op mul *tmp163 :drawItem.2:barLength :drawItem.2:current
-    * op div *tmp164 *tmp163 :drawItem.2:target
-    * op min :drawItem.2:length :drawItem.2:barLength *tmp164
-    * op mul *tmp166 :drawItem.2:col 176
-    * op div *tmp167 *tmp166 2
-    * op add :drawItem.2:iconX 11 *tmp167
-    * op mul *tmp169 :drawItem.2:col 176
-    * op div *tmp170 *tmp169 2
-    * op add :drawItem.2:barX 22 *tmp170
-    * op mul *tmp172 :drawItem.2:col 176
-    * op div *tmp173 *tmp172 2
-    * op add :drawItem.2:textX :drawItem.2:textEnd *tmp173
+  307 op mul *tmp159 1 176
+  308 op div *tmp160 176 2
+  309 op sub :drawItem.2:barLength 210 88
+  310 op add :drawItem.2:textEnd 48 122
+  311 op mul *tmp163 122 :drawMaterials:multiReconstructorProgress
+  312 op div *tmp164 *tmp163 1
+  313 op min :drawItem.2:length 122 *tmp164
+  314 op mul *tmp166 0 176
+  315 op div *tmp167 0 2
+  316 op add :drawItem.2:iconX 11 0
+  317 op mul *tmp169 0 176
+  318 op div *tmp170 0 2
+  319 op add :drawItem.2:barX 22 0
+  320 op mul *tmp172 0 176
+  321 op div *tmp173 0 2
+  322 op add :drawItem.2:textX 170 0
   323 draw col %[white]
-    * op add *tmp175 :drawItem.2:y 5
-    * draw image :drawItem.2:iconX *tmp175 :drawItem.2:item 16 0
+  324 op add *tmp175 160 5
+  325 draw image 11 165 :drawMaterials:unit3 16 0
   326 draw color 0 128 0 255
-    * draw rect :drawItem.2:barX :drawItem.2:y :drawItem.2:length 10
+  327 draw rect 22 160 :drawItem.2:length 10
   328 draw color 0 255 0 255
-    * draw lineRect :drawItem.2:barX :drawItem.2:y :drawItem.2:barLength 10
-    * op add *tmp176 :drawItem.2:y 5
-    * op add *tmp177 *tmp176 2
-    * set :drawBold.3:x :drawItem.2:textX
-    * set :drawBold.3:y *tmp177
+  329 draw lineRect 22 160 122 10
+  330 op add *tmp176 160 5
+  331 op add *tmp177 165 2
+  332 set :drawBold.3:x 170
+  333 set :drawBold.3:y 167
   334 set :drawBold.3:alignment @right
-    * set :drawText.6:x :drawBold.3:x
-    * set :drawText.6:y :drawBold.3:y
-    * set :drawText.6:alignment :drawBold.3:alignment
+  335 set :drawText.6:x :drawItem.2:textX
+  336 set :drawText.6:y *tmp177
+  337 set :drawText.6:alignment @right
   338 print .megas
   339 print "/"
   340 print .megaTarget
-    * set :drawPrint.6:x :drawText.6:x
-    * set :drawPrint.6:y :drawText.6:y
-    * set :drawPrint.6:alignment :drawText.6:alignment
-    * draw print :drawPrint.6:x :drawPrint.6:y :drawPrint.6:alignment
+  341 set :drawPrint.6:x :drawBold.3:x
+  342 set :drawPrint.6:y :drawBold.3:y
+  343 set :drawPrint.6:alignment :drawBold.3:alignment
+  344 draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
   345 label *label74
   346 label *label73
-    * op add :drawText.7:x :drawBold.3:x 1
-    * set :drawText.7:y :drawBold.3:y
-    * set :drawText.7:alignment :drawBold.3:alignment
+  347 op add :drawText.7:x :drawItem.2:textX 1
+  348 set :drawText.7:y *tmp177
+  349 set :drawText.7:alignment @right
   350 print .megas
   351 print "/"
   352 print .megaTarget
   353 set :drawPrint.7:x :drawText.7:x
-    * set :drawPrint.7:y :drawText.7:y
-    * set :drawPrint.7:alignment :drawText.7:alignment
-    * draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
+  354 set :drawPrint.7:y :drawBold.3:y
+  355 set :drawPrint.7:alignment :drawBold.3:alignment
+  356 draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
   357 label *label76
   358 label *label75
   359 label *label72
-    * op add :drawItem.2:col :drawItem.2:col 1
-    * jump *label77 lessThan :drawItem.2:col :drawItem.2:columns
-    * set :drawItem.2:col 0
-    * op sub :drawItem.2:y :drawItem.2:y 15
+  360 op add :drawItem.2:col 0 1
+  361 jump *label77 lessThan 1 1
+  362 op sub :drawItem.2:y 160 15
   363 label *label77
   364 label *label78
   365 label *label71
 
   386 set :drawItem.3:item :drawMaterials:item
   387 set :drawItem.3:current *tmp186
   388 set :drawItem.3:target :drawMaterials:target
-    * op mul *tmp187 :drawItem.3:columns 176
-    * op div *tmp188 *tmp187 2
-    * op sub :drawItem.3:barLength 210 *tmp188
-    * op add :drawItem.3:textEnd 48 :drawItem.3:barLength
-    * op mul *tmp191 :drawItem.3:barLength :drawItem.3:current
-    * op div *tmp192 *tmp191 :drawItem.3:target
-    * op min :drawItem.3:length :drawItem.3:barLength *tmp192
-    * op mul *tmp194 :drawItem.3:col 176
-    * op div *tmp195 *tmp194 2
+  389 op mul *tmp187 1 176
+  390 op div *tmp188 176 2
+  391 op sub :drawItem.3:barLength 210 88
+  392 op add :drawItem.3:textEnd 48 122
+  393 op mul *tmp191 122 *tmp186
+  394 op div *tmp192 *tmp191 :drawMaterials:target
+  395 op min :drawItem.3:length 122 *tmp192
+  396 op mul *tmp194 :drawMaterials:col 176
+  397 op mul *tmp195 :drawItem.3:col 88
   398 op add :drawItem.3:iconX 11 *tmp195
-    * op mul *tmp197 :drawItem.3:col 176
-    * op div *tmp198 *tmp197 2
-    * op add :drawItem.3:barX 22 *tmp198
-    * op mul *tmp200 :drawItem.3:col 176
-    * op div *tmp201 *tmp200 2
-    * op add :drawItem.3:textX :drawItem.3:textEnd *tmp201
+  399 op mul *tmp197 :drawMaterials:col 176
+  400 op div *tmp198 *tmp194 2
+  401 op add :drawItem.3:barX 22 *tmp195
+  402 op mul *tmp200 :drawMaterials:col 176
+  403 op div *tmp201 *tmp194 2
+  404 op add :drawItem.3:textX 170 *tmp195
   405 draw col %[white]
-    * op add *tmp203 :drawItem.3:y 5
-    * draw image :drawItem.3:iconX *tmp203 :drawItem.3:item 16 0
+  406 op add *tmp203 :drawMaterials:y 5
+  407 draw image :drawItem.3:iconX *tmp203 :drawMaterials:item 16 0
   408 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawItem.3:y :drawItem.3:length 10
+  409 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
   410 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawItem.3:y :drawItem.3:barLength 10
-    * op add *tmp204 :drawItem.3:y 5
-    * op add *tmp205 *tmp204 2
+  411 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  412 op add *tmp204 :drawMaterials:y 5
+  413 op add *tmp205 *tmp203 2
   414 set :drawBold.4:x :drawItem.3:textX
   415 set :drawBold.4:y *tmp205
   416 set :drawBold.4:alignment @right
-    * set :drawText.8:x :drawBold.4:x
-    * set :drawText.8:y :drawBold.4:y
-    * set :drawText.8:alignment :drawBold.4:alignment
+  417 set :drawText.8:x :drawItem.3:textX
+  418 set :drawText.8:y *tmp205
+  419 set :drawText.8:alignment @right
   420 print :drawMaterials:target
-    * set :drawPrint.8:x :drawText.8:x
-    * set :drawPrint.8:y :drawText.8:y
-    * set :drawPrint.8:alignment :drawText.8:alignment
-    * draw print :drawPrint.8:x :drawPrint.8:y :drawPrint.8:alignment
+  421 set :drawPrint.8:x :drawBold.4:x
+  422 set :drawPrint.8:y :drawBold.4:y
+  423 set :drawPrint.8:alignment :drawBold.4:alignment
+  424 draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
   425 label *label89
   426 label *label88
-    * op add :drawText.9:x :drawBold.4:x 1
-    * set :drawText.9:y :drawBold.4:y
-    * set :drawText.9:alignment :drawBold.4:alignment
+  427 op add :drawText.9:x :drawItem.3:textX 1
+  428 set :drawText.9:y *tmp205
+  429 set :drawText.9:alignment @right
   430 print :drawMaterials:target
   431 set :drawPrint.9:x :drawText.9:x
-    * set :drawPrint.9:y :drawText.9:y
-    * set :drawPrint.9:alignment :drawText.9:alignment
-    * draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
+  432 set :drawPrint.9:y :drawBold.4:y
+  433 set :drawPrint.9:alignment :drawBold.4:alignment
+  434 draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
   435 label *label91
   436 label *label90
   437 label *label87
-    * op add :drawItem.3:col :drawItem.3:col 1
-    * jump *label92 lessThan :drawItem.3:col :drawItem.3:columns
+  438 op add :drawItem.3:col :drawMaterials:col 1
+  439 jump *label92 lessThan :drawItem.3:col 1
   440 set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawItem.3:y 15
+  441 op sub :drawItem.3:y :drawMaterials:y 15
   442 label *label92
   443 label *label93
   444 label *label86
 
   460 set :drawBold.5:x 22
   461 set :drawBold.5:y 205
   462 set :drawBold.5:alignment @bottomLeft
-    * set :drawText.10:x :drawBold.5:x
-    * set :drawText.10:y :drawBold.5:y
-    * set :drawText.10:alignment :drawBold.5:alignment
+  463 set :drawText.10:x 22
+  464 set :drawText.10:y 205
+  465 set :drawText.10:alignment @bottomLeft
   466 read *tmp213 processor3 ".mapAction"
   467 print *tmp213
-    * set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawText.10:y
-    * set :drawPrint.10:alignment :drawText.10:alignment
-    * draw print :drawPrint.10:x :drawPrint.10:y :drawPrint.10:alignment
+  468 set :drawPrint.10:x :drawBold.5:x
+  469 set :drawPrint.10:y :drawBold.5:y
+  470 set :drawPrint.10:alignment :drawBold.5:alignment
+  471 draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
   472 label *label98
   473 label *label97
-    * op add :drawText.11:x :drawBold.5:x 1
-    * set :drawText.11:y :drawBold.5:y
-    * set :drawText.11:alignment :drawBold.5:alignment
+  474 op add :drawText.11:x 22 1
+  475 set :drawText.11:y 205
+  476 set :drawText.11:alignment @bottomLeft
   477 read *tmp215 processor3 ".mapAction"
   478 print *tmp215
-    * set :drawPrint.11:x :drawText.11:x
-    * set :drawPrint.11:y :drawText.11:y
-    * set :drawPrint.11:alignment :drawText.11:alignment
-    * draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
+  479 set :drawPrint.11:x 23
+  480 set :drawPrint.11:y :drawBold.5:y
+  481 set :drawPrint.11:alignment :drawBold.5:alignment
+  482 draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
   483 label *label100
   484 label *label99
   485 label *label96
 
   489 set :drawItem.4:item @titanium
   490 read :drawItem.4:current processor3 ".mapProgress"
   491 read :drawItem.4:target processor3 ".mapTotal"
-    * op mul *tmp216 :drawItem.4:columns 176
-    * op div *tmp217 *tmp216 2
-    * op sub :drawItem.4:barLength 210 *tmp217
-    * op add :drawItem.4:textEnd 48 :drawItem.4:barLength
-    * op mul *tmp220 :drawItem.4:barLength :drawItem.4:current
+  492 op mul *tmp216 1 176
+  493 op div *tmp217 176 2
+  494 op sub :drawItem.4:barLength 210 88
+  495 op add :drawItem.4:textEnd 48 122
+  496 op mul *tmp220 122 :drawItem.4:current
   497 op div *tmp221 *tmp220 :drawItem.4:target
-    * op min :drawItem.4:length :drawItem.4:barLength *tmp221
-    * op mul *tmp223 :drawItem.4:col 176
-    * op div *tmp224 *tmp223 2
-    * op add :drawItem.4:iconX 11 *tmp224
-    * op mul *tmp226 :drawItem.4:col 176
-    * op div *tmp227 *tmp226 2
-    * op add :drawItem.4:barX 22 *tmp227
-    * op mul *tmp229 :drawItem.4:col 176
-    * op div *tmp230 *tmp229 2
-    * op add :drawItem.4:textX :drawItem.4:textEnd *tmp230
+  498 op min :drawItem.4:length 122 *tmp221
+  499 op mul *tmp223 0 176
+  500 op div *tmp224 0 2
+  501 op add :drawItem.4:iconX 11 0
+  502 op mul *tmp226 0 176
+  503 op div *tmp227 0 2
+  504 op add :drawItem.4:barX 22 0
+  505 op mul *tmp229 0 176
+  506 op div *tmp230 0 2
+  507 op add :drawItem.4:textX 170 0
   508 draw col %[white]
-    * op add *tmp232 :drawItem.4:y 5
-    * draw image :drawItem.4:iconX *tmp232 :drawItem.4:item 16 0
+  509 op add *tmp232 190 5
+  510 draw image 11 195 @titanium 16 0
   511 draw color 0 128 0 255
-    * draw rect :drawItem.4:barX :drawItem.4:y :drawItem.4:length 10
+  512 draw rect 22 190 :drawItem.4:length 10
   513 draw color 0 255 0 255
-    * draw lineRect :drawItem.4:barX :drawItem.4:y :drawItem.4:barLength 10
-    * op add *tmp233 :drawItem.4:y 5
-    * op add *tmp234 *tmp233 2
-    * set :drawBold.6:x :drawItem.4:textX
-    * set :drawBold.6:y *tmp234
+  514 draw lineRect 22 190 122 10
+  515 op add *tmp233 190 5
+  516 op add *tmp234 195 2
+  517 set :drawBold.6:x 170
+  518 set :drawBold.6:y 197
   519 set :drawBold.6:alignment @right
-    * set :drawText.12:x :drawBold.6:x
-    * set :drawText.12:y :drawBold.6:y
-    * set :drawText.12:alignment :drawBold.6:alignment
+  520 set :drawText.12:x :drawItem.4:textX
+  521 set :drawText.12:y *tmp234
+  522 set :drawText.12:alignment @right
   523 print "x"
   524 read *tmp235 processor3 ".mapSpots"
   525 print *tmp235
-    * set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawText.12:y
-    * set :drawPrint.12:alignment :drawText.12:alignment
-    * draw print :drawPrint.12:x :drawPrint.12:y :drawPrint.12:alignment
+  526 set :drawPrint.12:x :drawBold.6:x
+  527 set :drawPrint.12:y :drawBold.6:y
+  528 set :drawPrint.12:alignment :drawBold.6:alignment
+  529 draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
   530 label *label104
   531 label *label103
-    * op add :drawText.13:x :drawBold.6:x 1
-    * set :drawText.13:y :drawBold.6:y
-    * set :drawText.13:alignment :drawBold.6:alignment
+  532 op add :drawText.13:x :drawItem.4:textX 1
+  533 set :drawText.13:y *tmp234
+  534 set :drawText.13:alignment @right
   535 print "x"
   536 read *tmp237 processor3 ".mapSpots"
   537 print *tmp237
   538 set :drawPrint.13:x :drawText.13:x
-    * set :drawPrint.13:y :drawText.13:y
-    * set :drawPrint.13:alignment :drawText.13:alignment
-    * draw print :drawPrint.13:x :drawPrint.13:y :drawPrint.13:alignment
+  539 set :drawPrint.13:y :drawBold.6:y
+  540 set :drawPrint.13:alignment :drawBold.6:alignment
+  541 draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
   542 label *label106
   543 label *label105
   544 label *label102
-    * op add :drawItem.4:col :drawItem.4:col 1
-    * jump *label107 lessThan :drawItem.4:col :drawItem.4:columns
-    * set :drawItem.4:col 0
-    * op sub :drawItem.4:y :drawItem.4:y 15
+  545 op add :drawItem.4:col 0 1
+  546 jump *label107 lessThan 1 1
+  547 op sub :drawItem.4:y 190 15
   548 label *label107
   549 label *label108
   550 label *label101
 
   555 set :drawBold.7:x 22
   556 set :drawBold.7:y 205
   557 set :drawBold.7:alignment @bottomLeft
-    * set :drawText.14:x :drawBold.7:x
-    * set :drawText.14:y :drawBold.7:y
-    * set :drawText.14:alignment :drawBold.7:alignment
+  558 set :drawText.14:x 22
+  559 set :drawText.14:y 205
+  560 set :drawText.14:alignment @bottomLeft
   561 print "Materials"
-    * set :drawPrint.14:x :drawText.14:x
-    * set :drawPrint.14:y :drawText.14:y
-    * set :drawPrint.14:alignment :drawText.14:alignment
-    * draw print :drawPrint.14:x :drawPrint.14:y :drawPrint.14:alignment
+  562 set :drawPrint.14:x :drawBold.7:x
+  563 set :drawPrint.14:y :drawBold.7:y
+  564 set :drawPrint.14:alignment :drawBold.7:alignment
+  565 draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
   566 label *label111
   567 label *label110
-    * op add :drawText.15:x :drawBold.7:x 1
-    * set :drawText.15:y :drawBold.7:y
-    * set :drawText.15:alignment :drawBold.7:alignment
+  568 op add :drawText.15:x 22 1
+  569 set :drawText.15:y 205
+  570 set :drawText.15:alignment @bottomLeft
   571 print "Materials"
-    * set :drawPrint.15:x :drawText.15:x
-    * set :drawPrint.15:y :drawText.15:y
-    * set :drawPrint.15:alignment :drawText.15:alignment
-    * draw print :drawPrint.15:x :drawPrint.15:y :drawPrint.15:alignment
+  572 set :drawPrint.15:x 23
+  573 set :drawPrint.15:y :drawBold.7:y
+  574 set :drawPrint.15:alignment :drawBold.7:alignment
+  575 draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
   576 label *label113
   577 label *label112
   578 label *label109
   579 set :drawMaterials:columns 1
-    * jump *label114 equal :drawMaterials:count false
+  580 jump *label114 equal .materialCount false
   581 set :drawMaterials:item.1 @copper
   582 set :drawMaterials:target.1 .targetCopper
   583 setaddr *tmp243 *label119
 
   616 sensor *tmp246 .core :drawMaterials:item.1
   617 set :drawItem.5:col :drawMaterials:col
   618 set :drawItem.5:y :drawMaterials:y
-    * set :drawItem.5:columns :drawMaterials:columns
+  619 set :drawItem.5:columns 1
   620 set :drawItem.5:item :drawMaterials:item.1
   621 set :drawItem.5:current *tmp246
   622 set :drawItem.5:target :drawMaterials:target.1
-    * op mul *tmp247 :drawItem.5:columns 176
-    * op div *tmp248 *tmp247 2
+  623 op mul *tmp247 :drawMaterials:columns 176
+  624 op mul *tmp248 :drawItem.5:columns 88
   625 op sub :drawItem.5:barLength 210 *tmp248
   626 op add :drawItem.5:textEnd 48 :drawItem.5:barLength
-    * op mul *tmp251 :drawItem.5:barLength :drawItem.5:current
-    * op div *tmp252 *tmp251 :drawItem.5:target
+  627 op mul *tmp251 :drawItem.5:barLength *tmp246
+  628 op div *tmp252 *tmp251 :drawMaterials:target.1
   629 op min :drawItem.5:length :drawItem.5:barLength *tmp252
-    * op mul *tmp254 :drawItem.5:col 176
-    * op div *tmp255 *tmp254 2
+  630 op mul *tmp254 :drawMaterials:col 176
+  631 op mul *tmp255 :drawItem.5:col 88
   632 op add :drawItem.5:iconX 11 *tmp255
-    * op mul *tmp257 :drawItem.5:col 176
-    * op div *tmp258 *tmp257 2
-    * op add :drawItem.5:barX 22 *tmp258
-    * op mul *tmp260 :drawItem.5:col 176
-    * op div *tmp261 *tmp260 2
-    * op add :drawItem.5:textX :drawItem.5:textEnd *tmp261
+  633 op mul *tmp257 :drawMaterials:col 176
+  634 op div *tmp258 *tmp254 2
+  635 op add :drawItem.5:barX 22 *tmp255
+  636 op mul *tmp260 :drawMaterials:col 176
+  637 op div *tmp261 *tmp254 2
+  638 op add :drawItem.5:textX :drawItem.5:textEnd *tmp255
   639 draw col %[white]
-    * op add *tmp263 :drawItem.5:y 5
-    * draw image :drawItem.5:iconX *tmp263 :drawItem.5:item 16 0
+  640 op add *tmp263 :drawMaterials:y 5
+  641 draw image :drawItem.5:iconX *tmp263 :drawMaterials:item.1 16 0
   642 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawItem.5:y :drawItem.5:length 10
+  643 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   644 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawItem.5:y :drawItem.5:barLength 10
-    * op add *tmp264 :drawItem.5:y 5
-    * op add *tmp265 *tmp264 2
+  645 draw lineRect :drawItem.5:barX :drawMaterials:y :drawItem.5:barLength 10
+  646 op add *tmp264 :drawMaterials:y 5
+  647 op add *tmp265 *tmp263 2
   648 set :drawBold.8:x :drawItem.5:textX
   649 set :drawBold.8:y *tmp265
   650 set :drawBold.8:alignment @right
-    * set :drawText.16:x :drawBold.8:x
-    * set :drawText.16:y :drawBold.8:y
-    * set :drawText.16:alignment :drawBold.8:alignment
+  651 set :drawText.16:x :drawItem.5:textX
+  652 set :drawText.16:y *tmp265
+  653 set :drawText.16:alignment @right
   654 print :drawMaterials:target.1
-    * set :drawPrint.16:x :drawText.16:x
-    * set :drawPrint.16:y :drawText.16:y
-    * set :drawPrint.16:alignment :drawText.16:alignment
-    * draw print :drawPrint.16:x :drawPrint.16:y :drawPrint.16:alignment
+  655 set :drawPrint.16:x :drawBold.8:x
+  656 set :drawPrint.16:y :drawBold.8:y
+  657 set :drawPrint.16:alignment :drawBold.8:alignment
+  658 draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
   659 label *label131
   660 label *label130
-    * op add :drawText.17:x :drawBold.8:x 1
-    * set :drawText.17:y :drawBold.8:y
-    * set :drawText.17:alignment :drawBold.8:alignment
+  661 op add :drawText.17:x :drawItem.5:textX 1
+  662 set :drawText.17:y *tmp265
+  663 set :drawText.17:alignment @right
   664 print :drawMaterials:target.1
   665 set :drawPrint.17:x :drawText.17:x
-    * set :drawPrint.17:y :drawText.17:y
-    * set :drawPrint.17:alignment :drawText.17:alignment
-    * draw print :drawPrint.17:x :drawPrint.17:y :drawPrint.17:alignment
+  666 set :drawPrint.17:y :drawBold.8:y
+  667 set :drawPrint.17:alignment :drawBold.8:alignment
+  668 draw print :drawText.17:x :drawText.17:y :drawText.17:alignment
   669 label *label133
   670 label *label132
   671 label *label129
-    * op add :drawItem.5:col :drawItem.5:col 1
-    * jump *label134 lessThan :drawItem.5:col :drawItem.5:columns
+  672 op add :drawItem.5:col :drawMaterials:col 1
+  673 jump *label134 lessThan :drawItem.5:col :drawMaterials:columns
   674 set :drawItem.5:col 0
-    * op sub :drawItem.5:y :drawItem.5:y 15
+  675 op sub :drawItem.5:y :drawMaterials:y 15
   676 label *label134
   677 label *label135
   678 label *label128
 
   703 label *label140
   704 set :drawUnit:y *tmp272
   705 set :drawBold.9:x 22
-    * set :drawBold.9:y :drawUnit:y
+  706 set :drawBold.9:y *tmp272
   707 set :drawBold.9:alignment @bottomLeft
-    * set :drawText.18:x :drawBold.9:x
-    * set :drawText.18:y :drawBold.9:y
-    * set :drawText.18:alignment :drawBold.9:alignment
+  708 set :drawText.18:x 22
+  709 set :drawText.18:y :drawUnit:y
+  710 set :drawText.18:alignment @bottomLeft
   711 print "Builder"
-    * set :drawPrint.18:x :drawText.18:x
-    * set :drawPrint.18:y :drawText.18:y
-    * set :drawPrint.18:alignment :drawText.18:alignment
-    * draw print :drawPrint.18:x :drawPrint.18:y :drawPrint.18:alignment
+  712 set :drawPrint.18:x :drawBold.9:x
+  713 set :drawPrint.18:y :drawBold.9:y
+  714 set :drawPrint.18:alignment :drawBold.9:alignment
+  715 draw print :drawText.18:x :drawText.18:y :drawText.18:alignment
   716 label *label143
   717 label *label142
-    * op add :drawText.19:x :drawBold.9:x 1
-    * set :drawText.19:y :drawBold.9:y
-    * set :drawText.19:alignment :drawBold.9:alignment
+  718 op add :drawText.19:x 22 1
+  719 set :drawText.19:y :drawUnit:y
+  720 set :drawText.19:alignment @bottomLeft
   721 print "Builder"
-    * set :drawPrint.19:x :drawText.19:x
-    * set :drawPrint.19:y :drawText.19:y
-    * set :drawPrint.19:alignment :drawText.19:alignment
-    * draw print :drawPrint.19:x :drawPrint.19:y :drawPrint.19:alignment
+  722 set :drawPrint.19:x 23
+  723 set :drawPrint.19:y :drawBold.9:y
+  724 set :drawPrint.19:alignment :drawBold.9:alignment
+  725 draw print :drawText.19:x :drawText.19:y :drawText.19:alignment
   726 label *label145
   727 label *label144
   728 label *label141
   729 jump *label146 notEqual .transportItem null
-    * op sub *tmp276 :drawUnit:y 15
+  730 op sub *tmp276 *tmp272 15
   731 set :drawUnit.1:item @poly
   732 set :drawUnit.1:items 0
   733 set :drawUnit.1:y *tmp276
   734 set :drawItem.6:col 0
-    * set :drawItem.6:y :drawUnit.1:y
+  735 set :drawItem.6:y *tmp276
   736 set :drawItem.6:columns 1
-    * set :drawItem.6:item :drawUnit.1:item
-    * set :drawItem.6:current :drawUnit.1:items
+  737 set :drawItem.6:item @poly
+  738 set :drawItem.6:current 0
   739 set :drawItem.6:target .transportTarget
-    * op mul *tmp277 :drawItem.6:columns 176
-    * op div *tmp278 *tmp277 2
-    * op sub :drawItem.6:barLength 210 *tmp278
-    * op add :drawItem.6:textEnd 48 :drawItem.6:barLength
-    * op mul *tmp281 :drawItem.6:barLength :drawItem.6:current
+  740 op mul *tmp277 1 176
+  741 op div *tmp278 176 2
+  742 op sub :drawItem.6:barLength 210 88
+  743 op add :drawItem.6:textEnd 48 122
+  744 op mul *tmp281 122 :drawUnit.1:items
   745 op div *tmp282 *tmp281 :drawItem.6:target
-    * op min :drawItem.6:length :drawItem.6:barLength *tmp282
-    * op mul *tmp284 :drawItem.6:col 176
-    * op div *tmp285 *tmp284 2
-    * op add :drawItem.6:iconX 11 *tmp285
-    * op mul *tmp287 :drawItem.6:col 176
-    * op div *tmp288 *tmp287 2
-    * op add :drawItem.6:barX 22 *tmp288
-    * op mul *tmp290 :drawItem.6:col 176
-    * op div *tmp291 *tmp290 2
-    * op add :drawItem.6:textX :drawItem.6:textEnd *tmp291
+  746 op min :drawItem.6:length 122 *tmp282
+  747 op mul *tmp284 0 176
+  748 op div *tmp285 0 2
+  749 op add :drawItem.6:iconX 11 0
+  750 op mul *tmp287 0 176
+  751 op div *tmp288 0 2
+  752 op add :drawItem.6:barX 22 0
+  753 op mul *tmp290 0 176
+  754 op div *tmp291 0 2
+  755 op add :drawItem.6:textX 170 0
   756 draw col %[white]
-    * op add *tmp293 :drawItem.6:y 5
-    * draw image :drawItem.6:iconX *tmp293 :drawItem.6:item 16 0
+  757 op add *tmp293 :drawUnit.1:y 5
+  758 draw image 11 *tmp293 :drawUnit.1:item 16 0
   759 draw color 0 128 0 255
-    * draw rect :drawItem.6:barX :drawItem.6:y :drawItem.6:length 10
+  760 draw rect 22 :drawUnit.1:y :drawItem.6:length 10
   761 draw color 0 255 0 255
-    * draw lineRect :drawItem.6:barX :drawItem.6:y :drawItem.6:barLength 10
-    * op add *tmp294 :drawItem.6:y 5
-    * op add *tmp295 *tmp294 2
-    * set :drawBold.10:x :drawItem.6:textX
+  762 draw lineRect 22 :drawUnit.1:y 122 10
+  763 op add *tmp294 :drawUnit.1:y 5
+  764 op add *tmp295 *tmp293 2
+  765 set :drawBold.10:x 170
   766 set :drawBold.10:y *tmp295
   767 set :drawBold.10:alignment @right
-    * set :drawText.20:x :drawBold.10:x
-    * set :drawText.20:y :drawBold.10:y
-    * set :drawText.20:alignment :drawBold.10:alignment
+  768 set :drawText.20:x :drawItem.6:textX
+  769 set :drawText.20:y *tmp295
+  770 set :drawText.20:alignment @right
   771 print .transportTarget
-    * set :drawPrint.20:x :drawText.20:x
-    * set :drawPrint.20:y :drawText.20:y
-    * set :drawPrint.20:alignment :drawText.20:alignment
-    * draw print :drawPrint.20:x :drawPrint.20:y :drawPrint.20:alignment
+  772 set :drawPrint.20:x :drawBold.10:x
+  773 set :drawPrint.20:y :drawBold.10:y
+  774 set :drawPrint.20:alignment :drawBold.10:alignment
+  775 draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
   776 label *label152
   777 label *label151
-    * op add :drawText.21:x :drawBold.10:x 1
-    * set :drawText.21:y :drawBold.10:y
-    * set :drawText.21:alignment :drawBold.10:alignment
+  778 op add :drawText.21:x :drawItem.6:textX 1
+  779 set :drawText.21:y *tmp295
+  780 set :drawText.21:alignment @right
   781 print .transportTarget
   782 set :drawPrint.21:x :drawText.21:x
-    * set :drawPrint.21:y :drawText.21:y
-    * set :drawPrint.21:alignment :drawText.21:alignment
-    * draw print :drawPrint.21:x :drawPrint.21:y :drawPrint.21:alignment
+  783 set :drawPrint.21:y :drawBold.10:y
+  784 set :drawPrint.21:alignment :drawBold.10:alignment
+  785 draw print :drawText.21:x :drawText.21:y :drawText.21:alignment
   786 label *label154
   787 label *label153
   788 label *label150
-    * op add :drawItem.6:col :drawItem.6:col 1
-    * jump *label155 lessThan :drawItem.6:col :drawItem.6:columns
-    * set :drawItem.6:col 0
-    * op sub :drawItem.6:y :drawItem.6:y 15
+  789 op add :drawItem.6:col 0 1
+  790 jump *label155 lessThan 1 1
+  791 op sub :drawItem.6:y :drawUnit.1:y 15
   792 label *label155
   793 label *label156
   794 label *label149
-    * set :drawUnit.1:y :drawItem.6:y
   795 label *label148
   796 jump *label147 always
   797 label *label146
 
   799 sensor *tmp302 @unit @totalItems
   800 op equal *tmp303 :drawUnit:unitItem .transportItem
   801 op mul *tmp304 *tmp302 *tmp303
-    * op sub *tmp305 :drawUnit:y 15
+  802 op sub *tmp305 *tmp272 15
   803 set :drawUnit.2:item .transportItem
   804 set :drawUnit.2:items *tmp304
   805 set :drawUnit.2:y *tmp305
   806 set :drawItem.7:col 0
-    * set :drawItem.7:y :drawUnit.2:y
+  807 set :drawItem.7:y *tmp305
   808 set :drawItem.7:columns 1
   809 set :drawItem.7:item :drawUnit.2:item
-    * set :drawItem.7:current :drawUnit.2:items
+  810 set :drawItem.7:current *tmp304
   811 set :drawItem.7:target .transportTarget
-    * op mul *tmp306 :drawItem.7:columns 176
-    * op div *tmp307 *tmp306 2
-    * op sub :drawItem.7:barLength 210 *tmp307
-    * op add :drawItem.7:textEnd 48 :drawItem.7:barLength
-    * op mul *tmp310 :drawItem.7:barLength :drawItem.7:current
+  812 op mul *tmp306 1 176
+  813 op div *tmp307 176 2
+  814 op sub :drawItem.7:barLength 210 88
+  815 op add :drawItem.7:textEnd 48 122
+  816 op mul *tmp310 122 :drawUnit.2:items
   817 op div *tmp311 *tmp310 :drawItem.7:target
-    * op min :drawItem.7:length :drawItem.7:barLength *tmp311
-    * op mul *tmp313 :drawItem.7:col 176
-    * op div *tmp314 *tmp313 2
-    * op add :drawItem.7:iconX 11 *tmp314
-    * op mul *tmp316 :drawItem.7:col 176
-    * op div *tmp317 *tmp316 2
-    * op add :drawItem.7:barX 22 *tmp317
-    * op mul *tmp319 :drawItem.7:col 176
-    * op div *tmp320 *tmp319 2
-    * op add :drawItem.7:textX :drawItem.7:textEnd *tmp320
+  818 op min :drawItem.7:length 122 *tmp311
+  819 op mul *tmp313 0 176
+  820 op div *tmp314 0 2
+  821 op add :drawItem.7:iconX 11 0
+  822 op mul *tmp316 0 176
+  823 op div *tmp317 0 2
+  824 op add :drawItem.7:barX 22 0
+  825 op mul *tmp319 0 176
+  826 op div *tmp320 0 2
+  827 op add :drawItem.7:textX 170 0
   828 draw col %[white]
-    * op add *tmp322 :drawItem.7:y 5
-    * draw image :drawItem.7:iconX *tmp322 :drawItem.7:item 16 0
+  829 op add *tmp322 :drawUnit.2:y 5
+  830 draw image 11 *tmp322 :drawUnit.2:item 16 0
   831 draw color 0 128 0 255
-    * draw rect :drawItem.7:barX :drawItem.7:y :drawItem.7:length 10
+  832 draw rect 22 :drawUnit.2:y :drawItem.7:length 10
   833 draw color 0 255 0 255
-    * draw lineRect :drawItem.7:barX :drawItem.7:y :drawItem.7:barLength 10
-    * op add *tmp323 :drawItem.7:y 5
-    * op add *tmp324 *tmp323 2
-    * set :drawBold.11:x :drawItem.7:textX
+  834 draw lineRect 22 :drawUnit.2:y 122 10
+  835 op add *tmp323 :drawUnit.2:y 5
+  836 op add *tmp324 *tmp322 2
+  837 set :drawBold.11:x 170
   838 set :drawBold.11:y *tmp324
   839 set :drawBold.11:alignment @right
-    * set :drawText.22:x :drawBold.11:x
-    * set :drawText.22:y :drawBold.11:y
-    * set :drawText.22:alignment :drawBold.11:alignment
+  840 set :drawText.22:x :drawItem.7:textX
+  841 set :drawText.22:y *tmp324
+  842 set :drawText.22:alignment @right
   843 print .transportTarget
-    * set :drawPrint.22:x :drawText.22:x
-    * set :drawPrint.22:y :drawText.22:y
-    * set :drawPrint.22:alignment :drawText.22:alignment
-    * draw print :drawPrint.22:x :drawPrint.22:y :drawPrint.22:alignment
+  844 set :drawPrint.22:x :drawBold.11:x
+  845 set :drawPrint.22:y :drawBold.11:y
+  846 set :drawPrint.22:alignment :drawBold.11:alignment
+  847 draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
   848 label *label161
   849 label *label160
-    * op add :drawText.23:x :drawBold.11:x 1
-    * set :drawText.23:y :drawBold.11:y
-    * set :drawText.23:alignment :drawBold.11:alignment
+  850 op add :drawText.23:x :drawItem.7:textX 1
+  851 set :drawText.23:y *tmp324
+  852 set :drawText.23:alignment @right
   853 print .transportTarget
   854 set :drawPrint.23:x :drawText.23:x
-    * set :drawPrint.23:y :drawText.23:y
-    * set :drawPrint.23:alignment :drawText.23:alignment
-    * draw print :drawPrint.23:x :drawPrint.23:y :drawPrint.23:alignment
+  855 set :drawPrint.23:y :drawBold.11:y
+  856 set :drawPrint.23:alignment :drawBold.11:alignment
+  857 draw print :drawText.23:x :drawText.23:y :drawText.23:alignment
   858 label *label163
   859 label *label162
   860 label *label159
-    * op add :drawItem.7:col :drawItem.7:col 1
-    * jump *label164 lessThan :drawItem.7:col :drawItem.7:columns
-    * set :drawItem.7:col 0
-    * op sub :drawItem.7:y :drawItem.7:y 15
+  861 op add :drawItem.7:col 0 1
+  862 jump *label164 lessThan 1 1
+  863 op sub :drawItem.7:y :drawUnit.2:y 15
   864 label *label164
   865 label *label165
   866 label *label158
-    * set :drawUnit.2:y :drawItem.7:y
   867 label *label157
   868 label *label147
   869 label *label138
 
   986 set :drawBold.12:x 90
   987 set :drawBold.12:y 206
   988 set :drawBold.12:alignment @center
-    * set :drawText.24:x :drawBold.12:x
-    * set :drawText.24:y :drawBold.12:y
-    * set :drawText.24:alignment :drawBold.12:alignment
+  989 set :drawText.24:x 90
+  990 set :drawText.24:y 206
+  991 set :drawText.24:alignment @center
   992 print "Base map"
-    * set :drawPrint.24:x :drawText.24:x
-    * set :drawPrint.24:y :drawText.24:y
-    * set :drawPrint.24:alignment :drawText.24:alignment
-    * draw print :drawPrint.24:x :drawPrint.24:y :drawPrint.24:alignment
+  993 set :drawPrint.24:x :drawBold.12:x
+  994 set :drawPrint.24:y :drawBold.12:y
+  995 set :drawPrint.24:alignment :drawBold.12:alignment
+  996 draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
   997 label *label207
   998 label *label206
-    * op add :drawText.25:x :drawBold.12:x 1
-    * set :drawText.25:y :drawBold.12:y
-    * set :drawText.25:alignment :drawBold.12:alignment
+  999 op add :drawText.25:x 90 1
+ 1000 set :drawText.25:y 206
+ 1001 set :drawText.25:alignment @center
  1002 print "Base map"
-    * set :drawPrint.25:x :drawText.25:x
-    * set :drawPrint.25:y :drawText.25:y
-    * set :drawPrint.25:alignment :drawText.25:alignment
-    * draw print :drawPrint.25:x :drawPrint.25:y :drawPrint.25:alignment
+ 1003 set :drawPrint.25:x 91
+ 1004 set :drawPrint.25:y :drawBold.12:y
+ 1005 set :drawPrint.25:alignment :drawBold.12:alignment
+ 1006 draw print :drawText.25:x :drawText.25:y :drawText.25:alignment
  1007 label *label209
  1008 label *label208
  1009 label *label205
 
  1151 op sub :displayLog:page .page 3
  1152 read :displayLog:logPosition bank1 511
  1153 op sub :displayLog:records 511 :displayLog:logPosition
-    * op sub *tmp363 :displayLog:records 1
+ 1154 op sub *tmp363 510 :displayLog:logPosition
  1155 op idiv *tmp364 *tmp363 39
  1156 op add *tmp365 *tmp364 1
  1157 op max :displayLog:pages 1 *tmp365
 
  1166 set :drawBold.13:x 4
  1167 set :drawBold.13:y 206
  1168 set :drawBold.13:alignment @left
-    * set :drawText.26:x :drawBold.13:x
-    * set :drawText.26:y :drawBold.13:y
-    * set :drawText.26:alignment :drawBold.13:alignment
+ 1169 set :drawText.26:x 4
+ 1170 set :drawText.26:y 206
+ 1171 set :drawText.26:alignment @left
  1172 print "Build records"
-    * set :drawPrint.26:x :drawText.26:x
-    * set :drawPrint.26:y :drawText.26:y
-    * set :drawPrint.26:alignment :drawText.26:alignment
-    * draw print :drawPrint.26:x :drawPrint.26:y :drawPrint.26:alignment
+ 1173 set :drawPrint.26:x :drawBold.13:x
+ 1174 set :drawPrint.26:y :drawBold.13:y
+ 1175 set :drawPrint.26:alignment :drawBold.13:alignment
+ 1176 draw print :drawText.26:x :drawText.26:y :drawText.26:alignment
  1177 label *label252
  1178 label *label251
-    * op add :drawText.27:x :drawBold.13:x 1
-    * set :drawText.27:y :drawBold.13:y
-    * set :drawText.27:alignment :drawBold.13:alignment
+ 1179 op add :drawText.27:x 4 1
+ 1180 set :drawText.27:y 206
+ 1181 set :drawText.27:alignment @left
  1182 print "Build records"
-    * set :drawPrint.27:x :drawText.27:x
-    * set :drawPrint.27:y :drawText.27:y
-    * set :drawPrint.27:alignment :drawText.27:alignment
-    * draw print :drawPrint.27:x :drawPrint.27:y :drawPrint.27:alignment
+ 1183 set :drawPrint.27:x 5
+ 1184 set :drawPrint.27:y :drawBold.13:y
+ 1185 set :drawPrint.27:alignment :drawBold.13:alignment
+ 1186 draw print :drawText.27:x :drawText.27:y :drawText.27:alignment
  1187 label *label254
  1188 label *label253
  1189 label *label250
-    * op add *tmp374 :displayLog:page 1
+ 1190 op sub *tmp374 .page 2
  1191 print *tmp374
  1192 print "/"
  1193 set :drawText.28:x 172
  1194 set :drawText.28:y 206
  1195 set :drawText.28:alignment @right
  1196 print :displayLog:pages
-    * set :drawPrint.28:x :drawText.28:x
-    * set :drawPrint.28:y :drawText.28:y
-    * set :drawPrint.28:alignment :drawText.28:alignment
-    * draw print :drawPrint.28:x :drawPrint.28:y :drawPrint.28:alignment
+ 1197 set :drawPrint.28:x 172
+ 1198 set :drawPrint.28:y 206
+ 1199 set :drawPrint.28:alignment @right
+ 1200 draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
  1201 label *label256
  1202 label *label255
  1203 set .lastRecord :displayLog:start
 
  1209 set *tmp375 :displayLog:stop
  1210 op sub :displayLog:position .lastRecord 1
  1211 label *label258
-    * jump *label260 lessThan :displayLog:position *tmp375
+ 1212 jump *label260 lessThan :displayLog:position :displayLog:stop
  1213 read :displayLog:record bank1 :displayLog:position
  1214 op sub *tmp378 :displayLog:start :displayLog:position
  1215 op sub *tmp379 *tmp378 1
  1216 set :displayRecord:record :displayLog:record
  1217 set :displayRecord:index *tmp379
-    * op idiv :displayRecord:col :displayRecord:index 13
-    * op mod :displayRecord:row :displayRecord:index 13
+ 1218 op idiv :displayRecord:col *tmp379 13
+ 1219 op mod :displayRecord:row *tmp379 13
  1220 op mul *tmp382 58 :displayRecord:col
  1221 op add :displayRecord:x 11 *tmp382
  1222 op mul *tmp384 15 :displayRecord:row
  1223 op sub :displayRecord:y 189 *tmp384
-    * op mod :displayRecord:id :displayRecord:record 1000
+ 1224 op mod :displayRecord:id :displayLog:record 1000
  1225 jump *label262 lessThanEq :displayRecord:id @blockCount
  1226 op sub *tmp389 :displayRecord:id @blockCount
  1227 lookup unit *tmp388 *tmp389
 
  1230 lookup block *tmp388 :displayRecord:id
  1231 label *label263
  1232 set :displayRecord:icon *tmp388
-    * op div *tmp392 :displayRecord:record 1000
+ 1233 op div *tmp392 :displayLog:record 1000
  1234 op idiv :displayRecord:t *tmp392 120
  1235 op idiv :displayRecord:m :displayRecord:t 60
  1236 op mod :displayRecord:s :displayRecord:t 60
 
  1243 print :displayRecord:m
  1244 print ":"
  1245 print *tmp398
-    * draw image :displayRecord:x :displayRecord:y :displayRecord:icon 14 0
+ 1246 draw image :displayRecord:x :displayRecord:y *tmp388 14 0
  1247 op add *tmp399 :displayRecord:x 56
-    * op sub *tmp400 *tmp399 12
+ 1248 op add *tmp400 :displayRecord:x 44
  1249 op add *tmp401 :displayRecord:y 2
  1250 set :drawText.29:x *tmp400
  1251 set :drawText.29:y *tmp401
  1252 set :drawText.29:alignment @right
  1253 print :displayRecord:s
-    * set :drawPrint.29:x :drawText.29:x
-    * set :drawPrint.29:y :drawText.29:y
-    * set :drawPrint.29:alignment :drawText.29:alignment
-    * draw print :drawPrint.29:x :drawPrint.29:y :drawPrint.29:alignment
+ 1254 set :drawPrint.29:x *tmp400
+ 1255 set :drawPrint.29:y *tmp401
+ 1256 set :drawPrint.29:alignment @right
+ 1257 draw print :drawText.29:x :drawText.29:y :drawText.29:alignment
  1258 label *label267
  1259 label *label266
  1260 label *label261
 
  1325 set :drawBold.14:x 42
  1326 set :drawBold.14:y 261
  1327 set :drawBold.14:alignment @bottom
-    * set :drawText.30:x :drawBold.14:x
-    * set :drawText.30:y :drawBold.14:y
-    * set :drawText.30:alignment :drawBold.14:alignment
+ 1328 set :drawText.30:x 42
+ 1329 set :drawText.30:y 261
+ 1330 set :drawText.30:alignment @bottom
  1331 print "Goal"
-    * set :drawPrint.30:x :drawText.30:x
-    * set :drawPrint.30:y :drawText.30:y
-    * set :drawPrint.30:alignment :drawText.30:alignment
-    * draw print :drawPrint.30:x :drawPrint.30:y :drawPrint.30:alignment
+ 1332 set :drawPrint.30:x :drawBold.14:x
+ 1333 set :drawPrint.30:y :drawBold.14:y
+ 1334 set :drawPrint.30:alignment :drawBold.14:alignment
+ 1335 draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
  1336 label *label278
  1337 label *label277
-    * op add :drawText.31:x :drawBold.14:x 1
-    * set :drawText.31:y :drawBold.14:y
-    * set :drawText.31:alignment :drawBold.14:alignment
+ 1338 op add :drawText.31:x 42 1
+ 1339 set :drawText.31:y 261
+ 1340 set :drawText.31:alignment @bottom
  1341 print "Goal"
-    * set :drawPrint.31:x :drawText.31:x
-    * set :drawPrint.31:y :drawText.31:y
-    * set :drawPrint.31:alignment :drawText.31:alignment
-    * draw print :drawPrint.31:x :drawPrint.31:y :drawPrint.31:alignment
+ 1342 set :drawPrint.31:x 43
+ 1343 set :drawPrint.31:y :drawBold.14:y
+ 1344 set :drawPrint.31:alignment :drawBold.14:alignment
+ 1345 draw print :drawText.31:x :drawText.31:y :drawText.31:alignment
  1346 label *label280
  1347 label *label279
  1348 label *label276
 
  1397 set :drawText.32:y 272
  1398 set :drawText.32:alignment @topRight
  1399 print ")"
-    * set :drawPrint.32:x :drawText.32:x
-    * set :drawPrint.32:y :drawText.32:y
-    * set :drawPrint.32:alignment :drawText.32:alignment
-    * draw print :drawPrint.32:x :drawPrint.32:y :drawPrint.32:alignment
+ 1400 set :drawPrint.32:x 174
+ 1401 set :drawPrint.32:y 272
+ 1402 set :drawPrint.32:alignment @topRight
+ 1403 draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
  1404 label *label290
  1405 label *label289
  1406 jump *label291 equal .titaniumDrill false
 
  1409 set :drawHeader:x 174
  1410 op log10 *tmp439 :drawHeader:count
  1411 op floor :drawHeader:len *tmp439
-    * set :drawText.33:x :drawHeader:x
+ 1412 set :drawText.33:x 174
  1413 set :drawText.33:y 255
  1414 set :drawText.33:alignment @topRight
  1415 print "x"
  1416 print :drawHeader:count
-    * set :drawPrint.33:x :drawText.33:x
-    * set :drawPrint.33:y :drawText.33:y
-    * set :drawPrint.33:alignment :drawText.33:alignment
-    * draw print :drawPrint.33:x :drawPrint.33:y :drawPrint.33:alignment
+ 1417 set :drawPrint.33:x :drawHeader:x
+ 1418 set :drawPrint.33:y 255
+ 1419 set :drawPrint.33:alignment @topRight
+ 1420 draw print :drawText.33:x :drawText.33:y :drawText.33:alignment
  1421 label *label294
  1422 label *label293
-    * op sub *tmp441 :drawHeader:x 20
+ 1423 op sub *tmp441 174 20
  1424 op mul *tmp442 7 :drawHeader:len
-    * op sub *tmp443 *tmp441 *tmp442
+ 1425 op sub *tmp443 154 *tmp442
  1426 draw image *tmp443 246 @titanium 12 0
  1427 label *label291
  1428 label *label292
 
  1431 set :drawHeader:x.1 124
  1432 op log10 *tmp446 :drawHeader:count
  1433 op floor :drawHeader:len.1 *tmp446
-    * set :drawText.34:x :drawHeader:x.1
+ 1434 set :drawText.34:x 124
  1435 set :drawText.34:y 255
  1436 set :drawText.34:alignment @topRight
  1437 print "x"
  1438 print :drawHeader:count
-    * set :drawPrint.34:x :drawText.34:x
-    * set :drawPrint.34:y :drawText.34:y
-    * set :drawPrint.34:alignment :drawText.34:alignment
-    * draw print :drawPrint.34:x :drawPrint.34:y :drawPrint.34:alignment
+ 1439 set :drawPrint.34:x :drawHeader:x.1
+ 1440 set :drawPrint.34:y 255
+ 1441 set :drawPrint.34:alignment @topRight
+ 1442 draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
  1443 label *label298
  1444 label *label297
-    * op sub *tmp448 :drawHeader:x.1 20
+ 1445 op sub *tmp448 124 20
  1446 op mul *tmp449 7 :drawHeader:len.1
-    * op sub *tmp450 *tmp448 *tmp449
+ 1447 op sub *tmp450 104 *tmp449
  1448 draw image *tmp450 246 @thorium 12 0
  1449 label *label295
  1450 label *label296
 
  1453 set :drawUnitCount:type @poly
  1454 set :drawUnitCount:count .polys
  1455 jump *label300 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp453 :drawHeader:x.2 20
-    * draw image *tmp453 227 :drawUnitCount:type 12 0
-    * set :drawText.35:x :drawHeader:x.2
+ 1456 op sub *tmp453 174 20
+ 1457 draw image 154 227 @poly 12 0
+ 1458 set :drawText.35:x 174
  1459 set :drawText.35:y 229
  1460 set :drawText.35:alignment @right
  1461 print "x"
  1462 print :drawUnitCount:count
-    * set :drawPrint.35:x :drawText.35:x
-    * set :drawPrint.35:y :drawText.35:y
-    * set :drawPrint.35:alignment :drawText.35:alignment
-    * draw print :drawPrint.35:x :drawPrint.35:y :drawPrint.35:alignment
+ 1463 set :drawPrint.35:x :drawHeader:x.2
+ 1464 set :drawPrint.35:y 229
+ 1465 set :drawPrint.35:alignment @right
+ 1466 draw print :drawText.35:x :drawText.35:y :drawText.35:alignment
  1467 label *label303
  1468 label *label302
-    * op sub :drawHeader:x.2 :drawHeader:x.2 30
+ 1469 op sub :drawHeader:x.2 174 30
  1470 label *label300
  1471 label *label301
  1472 label *label299
 
  1474 set :drawUnitCount.1:count .monos
  1475 jump *label305 lessThanEq :drawUnitCount.1:count 0
  1476 op sub *tmp456 :drawHeader:x.2 20
-    * draw image *tmp456 227 :drawUnitCount.1:type 12 0
+ 1477 draw image *tmp456 227 @mono 12 0
  1478 set :drawText.36:x :drawHeader:x.2
  1479 set :drawText.36:y 229
  1480 set :drawText.36:alignment @right
  1481 print "x"
  1482 print :drawUnitCount.1:count
-    * set :drawPrint.36:x :drawText.36:x
-    * set :drawPrint.36:y :drawText.36:y
-    * set :drawPrint.36:alignment :drawText.36:alignment
-    * draw print :drawPrint.36:x :drawPrint.36:y :drawPrint.36:alignment
+ 1483 set :drawPrint.36:x :drawHeader:x.2
+ 1484 set :drawPrint.36:y 229
+ 1485 set :drawPrint.36:alignment @right
+ 1486 draw print :drawText.36:x :drawText.36:y :drawText.36:alignment
  1487 label *label308
  1488 label *label307
  1489 op sub :drawHeader:x.2 :drawHeader:x.2 30
 
  1494 set :drawUnitCount.2:count .flares
  1495 jump *label310 lessThanEq :drawUnitCount.2:count 0
  1496 op sub *tmp459 :drawHeader:x.2 20
-    * draw image *tmp459 227 :drawUnitCount.2:type 12 0
+ 1497 draw image *tmp459 227 @flare 12 0
  1498 set :drawText.37:x :drawHeader:x.2
  1499 set :drawText.37:y 229
  1500 set :drawText.37:alignment @right
  1501 print "x"
  1502 print :drawUnitCount.2:count
-    * set :drawPrint.37:x :drawText.37:x
-    * set :drawPrint.37:y :drawText.37:y
-    * set :drawPrint.37:alignment :drawText.37:alignment
-    * draw print :drawPrint.37:x :drawPrint.37:y :drawPrint.37:alignment
+ 1503 set :drawPrint.37:x :drawHeader:x.2
+ 1504 set :drawPrint.37:y 229
+ 1505 set :drawPrint.37:alignment @right
+ 1506 draw print :drawText.37:x :drawText.37:y :drawText.37:alignment
  1507 label *label313
  1508 label *label312
-    * op sub :drawHeader:x.2 :drawHeader:x.2 30
  1509 label *label310
  1510 label *label311
  1511 label *label309
 
  1516 set :setupScale:size 220
  1517 draw reset
  1518 draw translate 90 105
-    * op div *tmp460 :setupScale:size 15
-    * op div *tmp461 *tmp460 2
-    * op div *tmp462 :setupScale:size 15
-    * op div *tmp463 *tmp462 2
-    * draw scale *tmp461 *tmp463
+ 1519 op div *tmp460 220 15
+ 1520 op div *tmp461 14.666666666666666 2
+ 1521 op div *tmp462 220 15
+ 1522 op div *tmp463 14.666666666666666 2
+ 1523 draw scale 7.333333333333333 7.333333333333333
  1524 label *label314
  1525 return :setupScale*retaddr
  1526 end
  1527 label *label7
  1528 set :unpackCfg2:cfg :drawBlock:cfg
-    * set :unpackCfg:cfg :unpackCfg2:cfg
+ 1529 set :unpackCfg:cfg :drawBlock:cfg
  1530 set :unpackCfg:index 1
-    * set *tmp464 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp465 :unpackCfg:cfg *tmp464
+ 1531 set *tmp464 1
+ 1532 op add :unpackCfg:index 1 1
+ 1533 read *tmp465 :unpackCfg2:cfg *tmp464
  1534 op sub *tmp466 *tmp465 74
  1535 lookup block :unpackCfg:type *tmp466
-    * set *tmp468 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp469 :unpackCfg:cfg *tmp468
+ 1536 set *tmp468 2
+ 1537 op add :unpackCfg:index 2 1
+ 1538 read *tmp469 :unpackCfg2:cfg *tmp468
  1539 op sub *tmp470 *tmp469 74
  1540 op div :unpackCfg:x *tmp470 2
-    * set *tmp472 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp473 :unpackCfg:cfg *tmp472
+ 1541 set *tmp472 3
+ 1542 op add :unpackCfg:index 3 1
+ 1543 read *tmp473 :unpackCfg2:cfg *tmp472
  1544 op sub *tmp474 *tmp473 74
  1545 op div :unpackCfg:y *tmp474 2
-    * set *tmp476 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp477 :unpackCfg:cfg *tmp476
+ 1546 set *tmp476 4
+ 1547 op add :unpackCfg:index 4 1
+ 1548 read *tmp477 :unpackCfg2:cfg *tmp476
  1549 op sub :unpackCfg:rotation *tmp477 74
-    * set *tmp479 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp480 :unpackCfg:cfg *tmp479
+ 1550 set *tmp479 5
+ 1551 op add :unpackCfg:index 5 1
+ 1552 read *tmp480 :unpackCfg2:cfg *tmp479
  1553 op sub :unpackCfg:ind *tmp480 74
  1554 sensor :unpackCfg:size :unpackCfg:type @size
  1555 label *label317
 
  1560 set :unpackCfg2:size :unpackCfg:size
  1561 set :unpackCfg2:index :unpackCfg:ind
  1562 label *label316
-    * set :drawBlock:type :unpackCfg2:type
-    * set :drawBlock:x :unpackCfg2:x
-    * set :drawBlock:y :unpackCfg2:y
-    * set :drawBlock:rotation :unpackCfg2:rotation
-    * set :drawBlock:size :unpackCfg2:size
-    * set :drawBlock:index :unpackCfg2:index
-    * op shl *tmp490 1 :drawBlock:index
+ 1563 set :drawBlock:type :unpackCfg:type
+ 1564 set :drawBlock:x :unpackCfg:x
+ 1565 set :drawBlock:y :unpackCfg:y
+ 1566 set :drawBlock:rotation :unpackCfg:rotation
+ 1567 set :drawBlock:size :unpackCfg:size
+ 1568 set :drawBlock:index :unpackCfg:ind
+ 1569 op shl *tmp490 1 :unpackCfg2:index
  1570 op and *tmp491 .blocksBuilt *tmp490
  1571 jump *label318 equal *tmp491 false
  1572 draw col %[white]

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-213 instructions):
 
    45 op div *tmp55 .animation 30
    46 op min *tmp56 *tmp55 1
    47 op max :animate:ratio 0 *tmp56
-    * set :lerp:from 42
-    * set :lerp:to 88
-    * set :lerp:ratio :animate:ratio
    48 op sub *tmp59 1 :animate:ratio
    49 op mul *tmp60 *tmp59 42
    50 op mul *tmp61 :animate:ratio 88
    51 op add *tmp58 *tmp60 *tmp61
    52 label *label28
-    * set :animate:x *tmp58
-    * set :lerp.1:from 237
-    * set :lerp.1:to 88
-    * set :lerp.1:ratio :animate:ratio
-    * op sub *tmp64 1 :animate:ratio
    53 op mul *tmp65 *tmp59 237
    54 op mul *tmp66 :animate:ratio 88
-    * op add *tmp63 *tmp65 *tmp66
+   55 op add *tmp63 *tmp65 *tmp61
    56 label *label29
-    * set :animate:y *tmp63
-    * set :lerp.2:from 32
-    * set :lerp.2:to 168
-    * set :lerp.2:ratio :animate:ratio
-    * op sub *tmp69 1 :animate:ratio
    57 op mul *tmp70 *tmp59 32
    58 op mul *tmp71 :animate:ratio 168
    59 op add *tmp68 *tmp70 *tmp71
    60 label *label30
-    * set :animate:size *tmp68
    61 draw image *tmp58 *tmp63 @mega *tmp68 0
    62 drawflush display1
    63 op add .animation .animation 1
 
   134 set :drawText:y 205
   135 set :drawText:alignment @bottomLeft
   136 print "Unit factories"
-    * set :drawPrint:x :drawBold:x
-    * set :drawPrint:y :drawBold:y
-    * set :drawPrint:alignment :drawBold:alignment
-    * draw print :drawText:x :drawText:y :drawText:alignment
+  137 set :drawPrint:x 22
+  138 set :drawPrint:y 205
+  139 set :drawPrint:alignment @bottomLeft
+  140 draw print 22 205 @bottomLeft
   141 label *label46
   142 label *label45
   143 op add :drawText.1:x 22 1
   144 set :drawText.1:y 205
   145 set :drawText.1:alignment @bottomLeft
   146 print "Unit factories"
-    * set :drawPrint.1:x 23
-    * set :drawPrint.1:y :drawBold:y
-    * set :drawPrint.1:alignment :drawBold:alignment
-    * draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
+  147 set :drawPrint.1:y 205
+  148 set :drawPrint.1:alignment @bottomLeft
+  149 draw print 23 205 @bottomLeft
   150 label *label48
   151 label *label47
   152 label *label44
   153 jump *label49 lessThanEq .factoryProgress 0
-    * set :drawItem:col 0
-    * set :drawItem:y 190
-    * set :drawItem:columns 1
-    * set :drawItem:item :drawMaterials:unit1
-    * set :drawItem:current .factoryProgress
-    * set :drawItem:target 1
-    * op mul *tmp111 1 176
-    * op div *tmp112 176 2
-    * op sub :drawItem:barLength 210 88
-    * op add :drawItem:textEnd 48 122
   154 op mul *tmp115 122 .factoryProgress
-    * op div *tmp116 *tmp115 1
+  155 op mul *tmp116 .factoryProgress 122
   156 op min :drawItem:length 122 *tmp116
-    * op mul *tmp118 0 176
-    * op div *tmp119 0 2
-    * op add :drawItem:iconX 11 0
-    * op mul *tmp121 0 176
-    * op div *tmp122 0 2
-    * op add :drawItem:barX 22 0
-    * op mul *tmp124 0 176
-    * op div *tmp125 0 2
   157 op add :drawItem:textX 170 0
   158 draw col %[white]
-    * op add *tmp127 190 5
   159 draw image 11 195 :drawMaterials:unit1 16 0
   160 draw color 0 128 0 255
   161 draw rect 22 190 :drawItem:length 10
   162 draw color 0 255 0 255
   163 draw lineRect 22 190 122 10
-    * op add *tmp128 190 5
   164 op add *tmp129 195 2
   165 set :drawBold.1:x 170
   166 set :drawBold.1:y 197
   167 set :drawBold.1:alignment @right
-    * set :drawText.2:x :drawItem:textX
-    * set :drawText.2:y *tmp129
+  168 set :drawText.2:x 170
+  169 set :drawText.2:y 197
   170 set :drawText.2:alignment @right
   171 print :drawMaterials:unitCount1
   172 print "/"
   173 print :drawMaterials:unitTotal1
-    * set :drawPrint.2:x :drawBold.1:x
-    * set :drawPrint.2:y :drawBold.1:y
-    * set :drawPrint.2:alignment :drawBold.1:alignment
-    * draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
+  174 set :drawPrint.2:x 170
+  175 set :drawPrint.2:y 197
+  176 set :drawPrint.2:alignment @right
+  177 draw print :drawItem:textX *tmp129 @right
   178 label *label54
   179 label *label53
-    * op add :drawText.3:x :drawItem:textX 1
-    * set :drawText.3:y *tmp129
+  180 op add :drawText.3:x 170 1
+  181 set :drawText.3:y 197
   182 set :drawText.3:alignment @right
   183 print :drawMaterials:unitCount1
   184 print "/"
   185 print :drawMaterials:unitTotal1
-    * set :drawPrint.3:x :drawText.3:x
-    * set :drawPrint.3:y :drawBold.1:y
-    * set :drawPrint.3:alignment :drawBold.1:alignment
-    * draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
+  186 set :drawPrint.3:x 171
+  187 set :drawPrint.3:y 197
+  188 set :drawPrint.3:alignment @right
+  189 draw print 171 *tmp129 @right
   190 label *label56
   191 label *label55
   192 label *label52
-    * op add :drawItem:col 0 1
   193 jump *label57 lessThan 1 1
-    * op sub :drawItem:y 190 15
   194 label *label57
   195 label *label58
   196 label *label51
   197 jump *label59 equal :drawMaterials:unit2 null
-    * set :drawItem.1:col 0
-    * set :drawItem.1:y 175
-    * set :drawItem.1:columns 1
-    * set :drawItem.1:item :drawMaterials:unit2
-    * set :drawItem.1:current .reconstructorProgress
-    * set :drawItem.1:target 1
-    * op mul *tmp135 1 176
-    * op div *tmp136 176 2
-    * op sub :drawItem.1:barLength 210 88
-    * op add :drawItem.1:textEnd 48 122
   198 op mul *tmp139 122 .reconstructorProgress
-    * op div *tmp140 *tmp139 1
+  199 op mul *tmp140 .reconstructorProgress 122
   200 op min :drawItem.1:length 122 *tmp140
-    * op mul *tmp142 0 176
-    * op div *tmp143 0 2
-    * op add :drawItem.1:iconX 11 0
-    * op mul *tmp145 0 176
-    * op div *tmp146 0 2
-    * op add :drawItem.1:barX 22 0
-    * op mul *tmp148 0 176
-    * op div *tmp149 0 2
   201 op add :drawItem.1:textX 170 0
   202 draw col %[white]
-    * op add *tmp151 175 5
   203 draw image 11 180 :drawMaterials:unit2 16 0
   204 draw color 0 128 0 255
   205 draw rect 22 175 :drawItem.1:length 10
   206 draw color 0 255 0 255
   207 draw lineRect 22 175 122 10
-    * op add *tmp152 175 5
   208 op add *tmp153 180 2
   209 set :drawBold.2:x 170
   210 set :drawBold.2:y 182
   211 set :drawBold.2:alignment @right
-    * set :drawText.4:x :drawItem.1:textX
-    * set :drawText.4:y *tmp153
+  212 set :drawText.4:x 170
+  213 set :drawText.4:y 182
   214 set :drawText.4:alignment @right
   215 print :drawMaterials:unitCount2
   216 print "/"
   217 print :drawMaterials:unitTotal2
-    * set :drawPrint.4:x :drawBold.2:x
-    * set :drawPrint.4:y :drawBold.2:y
-    * set :drawPrint.4:alignment :drawBold.2:alignment
-    * draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
+  218 set :drawPrint.4:x 170
+  219 set :drawPrint.4:y 182
+  220 set :drawPrint.4:alignment @right
+  221 draw print :drawItem.1:textX *tmp153 @right
   222 label *label64
   223 label *label63
-    * op add :drawText.5:x :drawItem.1:textX 1
-    * set :drawText.5:y *tmp153
+  224 op add :drawText.5:x 170 1
+  225 set :drawText.5:y 182
   226 set :drawText.5:alignment @right
   227 print :drawMaterials:unitCount2
   228 print "/"
   229 print :drawMaterials:unitTotal2
-    * set :drawPrint.5:x :drawText.5:x
-    * set :drawPrint.5:y :drawBold.2:y
-    * set :drawPrint.5:alignment :drawBold.2:alignment
-    * draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
+  230 set :drawPrint.5:x 171
+  231 set :drawPrint.5:y 182
+  232 set :drawPrint.5:alignment @right
+  233 draw print 171 *tmp153 @right
   234 label *label66
   235 label *label65
   236 label *label62
-    * op add :drawItem.1:col 0 1
   237 jump *label67 lessThan 1 1
-    * op sub :drawItem.1:y 175 15
   238 label *label67
   239 label *label68
   240 label *label61
   241 jump *label69 equal :drawMaterials:unit3 null
-    * set :drawItem.2:col 0
-    * set :drawItem.2:y 160
-    * set :drawItem.2:columns 1
-    * set :drawItem.2:item :drawMaterials:unit3
-    * set :drawItem.2:current :drawMaterials:multiReconstructorProgress
-    * set :drawItem.2:target 1
-    * op mul *tmp159 1 176
-    * op div *tmp160 176 2
-    * op sub :drawItem.2:barLength 210 88
-    * op add :drawItem.2:textEnd 48 122
   242 op mul *tmp163 122 :drawMaterials:multiReconstructorProgress
-    * op div *tmp164 *tmp163 1
+  243 op mul *tmp164 :drawMaterials:multiReconstructorProgress 122
   244 op min :drawItem.2:length 122 *tmp164
-    * op mul *tmp166 0 176
-    * op div *tmp167 0 2
-    * op add :drawItem.2:iconX 11 0
-    * op mul *tmp169 0 176
-    * op div *tmp170 0 2
-    * op add :drawItem.2:barX 22 0
-    * op mul *tmp172 0 176
-    * op div *tmp173 0 2
   245 op add :drawItem.2:textX 170 0
   246 draw col %[white]
-    * op add *tmp175 160 5
   247 draw image 11 165 :drawMaterials:unit3 16 0
   248 draw color 0 128 0 255
   249 draw rect 22 160 :drawItem.2:length 10
   250 draw color 0 255 0 255
   251 draw lineRect 22 160 122 10
-    * op add *tmp176 160 5
   252 op add *tmp177 165 2
   253 set :drawBold.3:x 170
   254 set :drawBold.3:y 167
   255 set :drawBold.3:alignment @right
-    * set :drawText.6:x :drawItem.2:textX
-    * set :drawText.6:y *tmp177
+  256 set :drawText.6:x 170
+  257 set :drawText.6:y 167
   258 set :drawText.6:alignment @right
   259 print .megas
   260 print "/"
   261 print .megaTarget
-    * set :drawPrint.6:x :drawBold.3:x
-    * set :drawPrint.6:y :drawBold.3:y
-    * set :drawPrint.6:alignment :drawBold.3:alignment
-    * draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
+  262 set :drawPrint.6:x 170
+  263 set :drawPrint.6:y 167
+  264 set :drawPrint.6:alignment @right
+  265 draw print :drawItem.2:textX *tmp177 @right
   266 label *label74
   267 label *label73
-    * op add :drawText.7:x :drawItem.2:textX 1
-    * set :drawText.7:y *tmp177
+  268 op add :drawText.7:x 170 1
+  269 set :drawText.7:y 167
   270 set :drawText.7:alignment @right
   271 print .megas
   272 print "/"
   273 print .megaTarget
-    * set :drawPrint.7:x :drawText.7:x
-    * set :drawPrint.7:y :drawBold.3:y
-    * set :drawPrint.7:alignment :drawBold.3:alignment
-    * draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
+  274 set :drawPrint.7:x 171
+  275 set :drawPrint.7:y 167
+  276 set :drawPrint.7:alignment @right
+  277 draw print 171 *tmp177 @right
   278 label *label76
   279 label *label75
   280 label *label72
-    * op add :drawItem.2:col 0 1
   281 jump *label77 lessThan 1 1
-    * op sub :drawItem.2:y 160 15
   282 label *label77
   283 label *label78
   284 label *label71
 
   301 sensor *tmp186 A¾BFLX-air-factory14 :drawMaterials:item
   302 set :drawItem.3:col :drawMaterials:col
   303 set :drawItem.3:y :drawMaterials:y
-    * set :drawItem.3:columns 1
-    * set :drawItem.3:item :drawMaterials:item
-    * set :drawItem.3:current *tmp186
-    * set :drawItem.3:target :drawMaterials:target
-    * op mul *tmp187 1 176
-    * op div *tmp188 176 2
-    * op sub :drawItem.3:barLength 210 88
-    * op add :drawItem.3:textEnd 48 122
   304 op mul *tmp191 122 *tmp186
   305 op div *tmp192 *tmp191 :drawMaterials:target
   306 op min :drawItem.3:length 122 *tmp192
   307 op mul *tmp194 :drawMaterials:col 176
-    * op mul *tmp195 :drawItem.3:col 88
+  308 op mul *tmp195 :drawMaterials:col 88
   309 op add :drawItem.3:iconX 11 *tmp195
-    * op mul *tmp197 :drawMaterials:col 176
-    * op div *tmp198 *tmp194 2
+  310 op mul *tmp198 :drawMaterials:col 88
   311 op add :drawItem.3:barX 22 *tmp195
-    * op mul *tmp200 :drawMaterials:col 176
-    * op div *tmp201 *tmp194 2
+  312 op mul *tmp201 :drawMaterials:col 88
   313 op add :drawItem.3:textX 170 *tmp195
   314 draw col %[white]
   315 op add *tmp203 :drawMaterials:y 5
 
   318 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
   319 draw color 0 255 0 255
   320 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
-    * op add *tmp204 :drawMaterials:y 5
-    * op add *tmp205 *tmp203 2
+  321 op add *tmp205 :drawMaterials:y 7
   322 set :drawBold.4:x :drawItem.3:textX
   323 set :drawBold.4:y *tmp205
   324 set :drawBold.4:alignment @right
 
   326 set :drawText.8:y *tmp205
   327 set :drawText.8:alignment @right
   328 print :drawMaterials:target
-    * set :drawPrint.8:x :drawBold.4:x
-    * set :drawPrint.8:y :drawBold.4:y
-    * set :drawPrint.8:alignment :drawBold.4:alignment
-    * draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
+  329 set :drawPrint.8:x :drawItem.3:textX
+  330 set :drawPrint.8:y *tmp205
+  331 set :drawPrint.8:alignment @right
+  332 draw print :drawItem.3:textX *tmp205 @right
   333 label *label89
   334 label *label88
-    * op add :drawText.9:x :drawItem.3:textX 1
+  335 op add :drawText.9:x *tmp195 171
   336 set :drawText.9:y *tmp205
   337 set :drawText.9:alignment @right
   338 print :drawMaterials:target
-    * set :drawPrint.9:x :drawText.9:x
-    * set :drawPrint.9:y :drawBold.4:y
-    * set :drawPrint.9:alignment :drawBold.4:alignment
-    * draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
+  339 set :drawPrint.9:y *tmp205
+  340 set :drawPrint.9:alignment @right
+  341 draw print :drawText.9:x *tmp205 @right
   342 label *label91
   343 label *label90
   344 label *label87
 
   372 set :drawText.10:alignment @bottomLeft
   373 read *tmp213 processor3 ".mapAction"
   374 print *tmp213
-    * set :drawPrint.10:x :drawBold.5:x
-    * set :drawPrint.10:y :drawBold.5:y
-    * set :drawPrint.10:alignment :drawBold.5:alignment
-    * draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
+  375 set :drawPrint.10:x 22
+  376 set :drawPrint.10:y 205
+  377 set :drawPrint.10:alignment @bottomLeft
+  378 draw print 22 205 @bottomLeft
   379 label *label98
   380 label *label97
   381 op add :drawText.11:x 22 1
 
   383 set :drawText.11:alignment @bottomLeft
   384 read *tmp215 processor3 ".mapAction"
   385 print *tmp215
-    * set :drawPrint.11:x 23
-    * set :drawPrint.11:y :drawBold.5:y
-    * set :drawPrint.11:alignment :drawBold.5:alignment
-    * draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
+  386 set :drawPrint.11:y 205
+  387 set :drawPrint.11:alignment @bottomLeft
+  388 draw print 23 205 @bottomLeft
   389 label *label100
   390 label *label99
   391 label *label96
-    * set :drawItem.4:col 0
-    * set :drawItem.4:y 190
-    * set :drawItem.4:columns 1
-    * set :drawItem.4:item @titanium
   392 read :drawItem.4:current processor3 ".mapProgress"
   393 read :drawItem.4:target processor3 ".mapTotal"
-    * op mul *tmp216 1 176
-    * op div *tmp217 176 2
-    * op sub :drawItem.4:barLength 210 88
-    * op add :drawItem.4:textEnd 48 122
   394 op mul *tmp220 122 :drawItem.4:current
   395 op div *tmp221 *tmp220 :drawItem.4:target
   396 op min :drawItem.4:length 122 *tmp221
-    * op mul *tmp223 0 176
-    * op div *tmp224 0 2
-    * op add :drawItem.4:iconX 11 0
-    * op mul *tmp226 0 176
-    * op div *tmp227 0 2
-    * op add :drawItem.4:barX 22 0
-    * op mul *tmp229 0 176
-    * op div *tmp230 0 2
   397 op add :drawItem.4:textX 170 0
   398 draw col %[white]
-    * op add *tmp232 190 5
   399 draw image 11 195 @titanium 16 0
   400 draw color 0 128 0 255
   401 draw rect 22 190 :drawItem.4:length 10
   402 draw color 0 255 0 255
   403 draw lineRect 22 190 122 10
-    * op add *tmp233 190 5
   404 op add *tmp234 195 2
   405 set :drawBold.6:x 170
   406 set :drawBold.6:y 197
   407 set :drawBold.6:alignment @right
-    * set :drawText.12:x :drawItem.4:textX
-    * set :drawText.12:y *tmp234
+  408 set :drawText.12:x 170
+  409 set :drawText.12:y 197
   410 set :drawText.12:alignment @right
   411 print "x"
   412 read *tmp235 processor3 ".mapSpots"
   413 print *tmp235
-    * set :drawPrint.12:x :drawBold.6:x
-    * set :drawPrint.12:y :drawBold.6:y
-    * set :drawPrint.12:alignment :drawBold.6:alignment
-    * draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
+  414 set :drawPrint.12:x 170
+  415 set :drawPrint.12:y 197
+  416 set :drawPrint.12:alignment @right
+  417 draw print :drawItem.4:textX *tmp234 @right
   418 label *label104
   419 label *label103
-    * op add :drawText.13:x :drawItem.4:textX 1
-    * set :drawText.13:y *tmp234
+  420 op add :drawText.13:x 170 1
+  421 set :drawText.13:y 197
   422 set :drawText.13:alignment @right
   423 print "x"
   424 read *tmp237 processor3 ".mapSpots"
   425 print *tmp237
-    * set :drawPrint.13:x :drawText.13:x
-    * set :drawPrint.13:y :drawBold.6:y
-    * set :drawPrint.13:alignment :drawBold.6:alignment
-    * draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
+  426 set :drawPrint.13:x 171
+  427 set :drawPrint.13:y 197
+  428 set :drawPrint.13:alignment @right
+  429 draw print 171 *tmp234 @right
   430 label *label106
   431 label *label105
   432 label *label102
-    * op add :drawItem.4:col 0 1
   433 jump *label107 lessThan 1 1
-    * op sub :drawItem.4:y 190 15
   434 label *label107
   435 label *label108
   436 label *label101
 
   445 set :drawText.14:y 205
   446 set :drawText.14:alignment @bottomLeft
   447 print "Materials"
-    * set :drawPrint.14:x :drawBold.7:x
-    * set :drawPrint.14:y :drawBold.7:y
-    * set :drawPrint.14:alignment :drawBold.7:alignment
-    * draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
+  448 set :drawPrint.14:x 22
+  449 set :drawPrint.14:y 205
+  450 set :drawPrint.14:alignment @bottomLeft
+  451 draw print 22 205 @bottomLeft
   452 label *label111
   453 label *label110
   454 op add :drawText.15:x 22 1
   455 set :drawText.15:y 205
   456 set :drawText.15:alignment @bottomLeft
   457 print "Materials"
-    * set :drawPrint.15:x 23
-    * set :drawPrint.15:y :drawBold.7:y
-    * set :drawPrint.15:alignment :drawBold.7:alignment
-    * draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
+  458 set :drawPrint.15:y 205
+  459 set :drawPrint.15:alignment @bottomLeft
+  460 draw print 23 205 @bottomLeft
   461 label *label113
   462 label *label112
   463 label *label109
 
   502 set :drawItem.5:col :drawMaterials:col
   503 set :drawItem.5:y :drawMaterials:y
   504 set :drawItem.5:columns 1
-    * set :drawItem.5:item :drawMaterials:item.1
-    * set :drawItem.5:current *tmp246
-    * set :drawItem.5:target :drawMaterials:target.1
-    * op mul *tmp247 :drawMaterials:columns 176
-    * op mul *tmp248 :drawItem.5:columns 88
-    * op sub :drawItem.5:barLength 210 *tmp248
-    * op add :drawItem.5:textEnd 48 :drawItem.5:barLength
-    * op mul *tmp251 :drawItem.5:barLength *tmp246
+  505 op mul *tmp247 1 176
+  506 op mul *tmp248 1 88
+  507 op sub :drawItem.5:barLength 210 88
+  508 op add :drawItem.5:textEnd 48 122
+  509 op mul *tmp251 122 *tmp246
   510 op div *tmp252 *tmp251 :drawMaterials:target.1
-    * op min :drawItem.5:length :drawItem.5:barLength *tmp252
+  511 op min :drawItem.5:length 122 *tmp252
   512 op mul *tmp254 :drawMaterials:col 176
-    * op mul *tmp255 :drawItem.5:col 88
+  513 op mul *tmp255 :drawMaterials:col 88
   514 op add :drawItem.5:iconX 11 *tmp255
-    * op mul *tmp257 :drawMaterials:col 176
-    * op div *tmp258 *tmp254 2
+  515 op mul *tmp258 :drawMaterials:col 88
   516 op add :drawItem.5:barX 22 *tmp255
-    * op mul *tmp260 :drawMaterials:col 176
-    * op div *tmp261 *tmp254 2
-    * op add :drawItem.5:textX :drawItem.5:textEnd *tmp255
+  517 op mul *tmp261 :drawMaterials:col 88
+  518 op add :drawItem.5:textX 170 *tmp255
   519 draw col %[white]
   520 op add *tmp263 :drawMaterials:y 5
   521 draw image :drawItem.5:iconX *tmp263 :drawMaterials:item.1 16 0
   522 draw color 0 128 0 255
   523 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   524 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y :drawItem.5:barLength 10
-    * op add *tmp264 :drawMaterials:y 5
-    * op add *tmp265 *tmp263 2
+  525 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  526 op add *tmp265 :drawMaterials:y 7
   527 set :drawBold.8:x :drawItem.5:textX
   528 set :drawBold.8:y *tmp265
   529 set :drawBold.8:alignment @right
 
   531 set :drawText.16:y *tmp265
   532 set :drawText.16:alignment @right
   533 print :drawMaterials:target.1
-    * set :drawPrint.16:x :drawBold.8:x
-    * set :drawPrint.16:y :drawBold.8:y
-    * set :drawPrint.16:alignment :drawBold.8:alignment
-    * draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
+  534 set :drawPrint.16:x :drawItem.5:textX
+  535 set :drawPrint.16:y *tmp265
+  536 set :drawPrint.16:alignment @right
+  537 draw print :drawItem.5:textX *tmp265 @right
   538 label *label131
   539 label *label130
   540 op add :drawText.17:x :drawItem.5:textX 1
   541 set :drawText.17:y *tmp265
   542 set :drawText.17:alignment @right
   543 print :drawMaterials:target.1
-    * set :drawPrint.17:x :drawText.17:x
-    * set :drawPrint.17:y :drawBold.8:y
-    * set :drawPrint.17:alignment :drawBold.8:alignment
-    * draw print :drawText.17:x :drawText.17:y :drawText.17:alignment
+  544 set :drawPrint.17:y *tmp265
+  545 set :drawPrint.17:alignment @right
+  546 draw print :drawText.17:x *tmp265 @right
   547 label *label133
   548 label *label132
   549 label *label129
   550 op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label134 lessThan :drawItem.5:col :drawMaterials:columns
+  551 jump *label134 lessThan :drawItem.5:col 1
   552 set :drawItem.5:col 0
   553 op sub :drawItem.5:y :drawMaterials:y 15
   554 label *label134
 
   584 set :drawBold.9:y *tmp272
   585 set :drawBold.9:alignment @bottomLeft
   586 set :drawText.18:x 22
-    * set :drawText.18:y :drawUnit:y
+  587 set :drawText.18:y *tmp272
   588 set :drawText.18:alignment @bottomLeft
   589 print "Builder"
-    * set :drawPrint.18:x :drawBold.9:x
-    * set :drawPrint.18:y :drawBold.9:y
-    * set :drawPrint.18:alignment :drawBold.9:alignment
-    * draw print :drawText.18:x :drawText.18:y :drawText.18:alignment
+  590 set :drawPrint.18:x 22
+  591 set :drawPrint.18:y *tmp272
+  592 set :drawPrint.18:alignment @bottomLeft
+  593 draw print 22 :drawUnit:y @bottomLeft
   594 label *label143
   595 label *label142
   596 op add :drawText.19:x 22 1
-    * set :drawText.19:y :drawUnit:y
+  597 set :drawText.19:y *tmp272
   598 set :drawText.19:alignment @bottomLeft
   599 print "Builder"
-    * set :drawPrint.19:x 23
-    * set :drawPrint.19:y :drawBold.9:y
-    * set :drawPrint.19:alignment :drawBold.9:alignment
-    * draw print :drawText.19:x :drawText.19:y :drawText.19:alignment
+  600 set :drawPrint.19:y *tmp272
+  601 set :drawPrint.19:alignment @bottomLeft
+  602 draw print 23 :drawUnit:y @bottomLeft
   603 label *label145
   604 label *label144
   605 label *label141
 
   608 set :drawUnit.1:item @poly
   609 set :drawUnit.1:items 0
   610 set :drawUnit.1:y *tmp276
-    * set :drawItem.6:col 0
-    * set :drawItem.6:y *tmp276
-    * set :drawItem.6:columns 1
-    * set :drawItem.6:item @poly
-    * set :drawItem.6:current 0
   611 set :drawItem.6:target .transportTarget
-    * op mul *tmp277 1 176
-    * op div *tmp278 176 2
-    * op sub :drawItem.6:barLength 210 88
-    * op add :drawItem.6:textEnd 48 122
-    * op mul *tmp281 122 :drawUnit.1:items
-    * op div *tmp282 *tmp281 :drawItem.6:target
+  612 op mul *tmp281 122 0
+  613 op div *tmp282 0 :drawItem.6:target
   614 op min :drawItem.6:length 122 *tmp282
-    * op mul *tmp284 0 176
-    * op div *tmp285 0 2
-    * op add :drawItem.6:iconX 11 0
-    * op mul *tmp287 0 176
-    * op div *tmp288 0 2
-    * op add :drawItem.6:barX 22 0
-    * op mul *tmp290 0 176
-    * op div *tmp291 0 2
   615 op add :drawItem.6:textX 170 0
   616 draw col %[white]
-    * op add *tmp293 :drawUnit.1:y 5
-    * draw image 11 *tmp293 :drawUnit.1:item 16 0
+  617 op add *tmp293 *tmp276 5
+  618 draw image 11 *tmp293 @poly 16 0
   619 draw color 0 128 0 255
-    * draw rect 22 :drawUnit.1:y :drawItem.6:length 10
+  620 draw rect 22 *tmp276 :drawItem.6:length 10
   621 draw color 0 255 0 255
-    * draw lineRect 22 :drawUnit.1:y 122 10
-    * op add *tmp294 :drawUnit.1:y 5
-    * op add *tmp295 *tmp293 2
+  622 draw lineRect 22 *tmp276 122 10
+  623 op add *tmp294 *tmp276 5
+  624 op add *tmp295 :drawUnit.1:y 7
   625 set :drawBold.10:x 170
   626 set :drawBold.10:y *tmp295
   627 set :drawBold.10:alignment @right
-    * set :drawText.20:x :drawItem.6:textX
+  628 set :drawText.20:x 170
   629 set :drawText.20:y *tmp295
   630 set :drawText.20:alignment @right
   631 print .transportTarget
-    * set :drawPrint.20:x :drawBold.10:x
-    * set :drawPrint.20:y :drawBold.10:y
-    * set :drawPrint.20:alignment :drawBold.10:alignment
-    * draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
+  632 set :drawPrint.20:x 170
+  633 set :drawPrint.20:y *tmp295
+  634 set :drawPrint.20:alignment @right
+  635 draw print :drawItem.6:textX *tmp295 @right
   636 label *label152
   637 label *label151
-    * op add :drawText.21:x :drawItem.6:textX 1
+  638 op add :drawText.21:x 170 1
   639 set :drawText.21:y *tmp295
   640 set :drawText.21:alignment @right
   641 print .transportTarget
-    * set :drawPrint.21:x :drawText.21:x
-    * set :drawPrint.21:y :drawBold.10:y
-    * set :drawPrint.21:alignment :drawBold.10:alignment
-    * draw print :drawText.21:x :drawText.21:y :drawText.21:alignment
+  642 set :drawPrint.21:x 171
+  643 set :drawPrint.21:y *tmp295
+  644 set :drawPrint.21:alignment @right
+  645 draw print 171 *tmp295 @right
   646 label *label154
   647 label *label153
   648 label *label150
-    * op add :drawItem.6:col 0 1
   649 jump *label155 lessThan 1 1
-    * op sub :drawItem.6:y :drawUnit.1:y 15
+  650 op sub :drawItem.6:y *tmp276 15
   651 label *label155
   652 label *label156
   653 label *label149
 
   662 set :drawUnit.2:item .transportItem
   663 set :drawUnit.2:items *tmp304
   664 set :drawUnit.2:y *tmp305
-    * set :drawItem.7:col 0
-    * set :drawItem.7:y *tmp305
-    * set :drawItem.7:columns 1
-    * set :drawItem.7:item :drawUnit.2:item
-    * set :drawItem.7:current *tmp304
   665 set :drawItem.7:target .transportTarget
-    * op mul *tmp306 1 176
-    * op div *tmp307 176 2
-    * op sub :drawItem.7:barLength 210 88
-    * op add :drawItem.7:textEnd 48 122
-    * op mul *tmp310 122 :drawUnit.2:items
+  666 op mul *tmp310 122 *tmp304
   667 op div *tmp311 *tmp310 :drawItem.7:target
   668 op min :drawItem.7:length 122 *tmp311
-    * op mul *tmp313 0 176
-    * op div *tmp314 0 2
-    * op add :drawItem.7:iconX 11 0
-    * op mul *tmp316 0 176
-    * op div *tmp317 0 2
-    * op add :drawItem.7:barX 22 0
-    * op mul *tmp319 0 176
-    * op div *tmp320 0 2
   669 op add :drawItem.7:textX 170 0
   670 draw col %[white]
-    * op add *tmp322 :drawUnit.2:y 5
+  671 op add *tmp322 *tmp305 5
   672 draw image 11 *tmp322 :drawUnit.2:item 16 0
   673 draw color 0 128 0 255
-    * draw rect 22 :drawUnit.2:y :drawItem.7:length 10
+  674 draw rect 22 *tmp305 :drawItem.7:length 10
   675 draw color 0 255 0 255
-    * draw lineRect 22 :drawUnit.2:y 122 10
-    * op add *tmp323 :drawUnit.2:y 5
-    * op add *tmp324 *tmp322 2
+  676 draw lineRect 22 *tmp305 122 10
+  677 op add *tmp323 *tmp305 5
+  678 op add *tmp324 :drawUnit.2:y 7
   679 set :drawBold.11:x 170
   680 set :drawBold.11:y *tmp324
   681 set :drawBold.11:alignment @right
-    * set :drawText.22:x :drawItem.7:textX
+  682 set :drawText.22:x 170
   683 set :drawText.22:y *tmp324
   684 set :drawText.22:alignment @right
   685 print .transportTarget
-    * set :drawPrint.22:x :drawBold.11:x
-    * set :drawPrint.22:y :drawBold.11:y
-    * set :drawPrint.22:alignment :drawBold.11:alignment
-    * draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
+  686 set :drawPrint.22:x 170
+  687 set :drawPrint.22:y *tmp324
+  688 set :drawPrint.22:alignment @right
+  689 draw print :drawItem.7:textX *tmp324 @right
   690 label *label161
   691 label *label160
-    * op add :drawText.23:x :drawItem.7:textX 1
+  692 op add :drawText.23:x 170 1
   693 set :drawText.23:y *tmp324
   694 set :drawText.23:alignment @right
   695 print .transportTarget
-    * set :drawPrint.23:x :drawText.23:x
-    * set :drawPrint.23:y :drawBold.11:y
-    * set :drawPrint.23:alignment :drawBold.11:alignment
-    * draw print :drawText.23:x :drawText.23:y :drawText.23:alignment
+  696 set :drawPrint.23:x 171
+  697 set :drawPrint.23:y *tmp324
+  698 set :drawPrint.23:alignment @right
+  699 draw print 171 *tmp324 @right
   700 label *label163
   701 label *label162
   702 label *label159
-    * op add :drawItem.7:col 0 1
   703 jump *label164 lessThan 1 1
-    * op sub :drawItem.7:y :drawUnit.2:y 15
+  704 op sub :drawItem.7:y *tmp305 15
   705 label *label164
   706 label *label165
   707 label *label158
 
   831 set :drawText.24:y 206
   832 set :drawText.24:alignment @center
   833 print "Base map"
-    * set :drawPrint.24:x :drawBold.12:x
-    * set :drawPrint.24:y :drawBold.12:y
-    * set :drawPrint.24:alignment :drawBold.12:alignment
-    * draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
+  834 set :drawPrint.24:x 90
+  835 set :drawPrint.24:y 206
+  836 set :drawPrint.24:alignment @center
+  837 draw print 90 206 @center
   838 label *label207
   839 label *label206
   840 op add :drawText.25:x 90 1
   841 set :drawText.25:y 206
   842 set :drawText.25:alignment @center
   843 print "Base map"
-    * set :drawPrint.25:x 91
-    * set :drawPrint.25:y :drawBold.12:y
-    * set :drawPrint.25:alignment :drawBold.12:alignment
-    * draw print :drawText.25:x :drawText.25:y :drawText.25:alignment
+  844 set :drawPrint.25:y 206
+  845 set :drawPrint.25:alignment @center
+  846 draw print 91 206 @center
   847 label *label209
   848 label *label208
   849 label *label205
 
   990 label *label199
   991 op sub :displayLog:page .page 3
   992 read :displayLog:logPosition bank1 511
-    * op sub :displayLog:records 511 :displayLog:logPosition
   993 op sub *tmp363 510 :displayLog:logPosition
   994 op idiv *tmp364 *tmp363 39
   995 op add *tmp365 *tmp364 1
 
  1009 set :drawText.26:y 206
  1010 set :drawText.26:alignment @left
  1011 print "Build records"
-    * set :drawPrint.26:x :drawBold.13:x
-    * set :drawPrint.26:y :drawBold.13:y
-    * set :drawPrint.26:alignment :drawBold.13:alignment
-    * draw print :drawText.26:x :drawText.26:y :drawText.26:alignment
+ 1012 set :drawPrint.26:x 4
+ 1013 set :drawPrint.26:y 206
+ 1014 set :drawPrint.26:alignment @left
+ 1015 draw print 4 206 @left
  1016 label *label252
  1017 label *label251
  1018 op add :drawText.27:x 4 1
  1019 set :drawText.27:y 206
  1020 set :drawText.27:alignment @left
  1021 print "Build records"
-    * set :drawPrint.27:x 5
-    * set :drawPrint.27:y :drawBold.13:y
-    * set :drawPrint.27:alignment :drawBold.13:alignment
-    * draw print :drawText.27:x :drawText.27:y :drawText.27:alignment
+ 1022 set :drawPrint.27:y 206
+ 1023 set :drawPrint.27:alignment @left
+ 1024 draw print 5 206 @left
  1025 label *label254
  1026 label *label253
  1027 label *label250
 
  1032 set :drawText.28:y 206
  1033 set :drawText.28:alignment @right
  1034 print :displayLog:pages
-    * set :drawPrint.28:x 172
-    * set :drawPrint.28:y 206
-    * set :drawPrint.28:alignment @right
-    * draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
+ 1035 draw print 172 206 @right
  1036 label *label256
  1037 label *label255
  1038 set .lastRecord :displayLog:start
 
  1041 setaddr :drawHeader*retaddr *label257 (h:*label257)
  1042 call *label4 *invalid :drawHeader*retval (m:*label257) (h:*label257)
  1043 label *label257
-    * set *tmp375 :displayLog:stop
  1044 op sub :displayLog:position .lastRecord 1
  1045 label *label258
  1046 jump *label260 lessThan :displayLog:position :displayLog:stop
  1047 read :displayLog:record bank1 :displayLog:position
  1048 op sub *tmp378 :displayLog:start :displayLog:position
  1049 op sub *tmp379 *tmp378 1
-    * set :displayRecord:record :displayLog:record
-    * set :displayRecord:index *tmp379
  1050 op idiv :displayRecord:col *tmp379 13
  1051 op mod :displayRecord:row *tmp379 13
  1052 op mul *tmp382 58 :displayRecord:col
 
  1061 label *label262
  1062 lookup block *tmp388 :displayRecord:id
  1063 label *label263
-    * set :displayRecord:icon *tmp388
  1064 op div *tmp392 :displayLog:record 1000
  1065 op idiv :displayRecord:t *tmp392 120
  1066 op idiv :displayRecord:m :displayRecord:t 60
 
  1075 print ":"
  1076 print *tmp398
  1077 draw image :displayRecord:x :displayRecord:y *tmp388 14 0
-    * op add *tmp399 :displayRecord:x 56
  1078 op add *tmp400 :displayRecord:x 44
  1079 op add *tmp401 :displayRecord:y 2
  1080 set :drawText.29:x *tmp400
  1081 set :drawText.29:y *tmp401
  1082 set :drawText.29:alignment @right
  1083 print :displayRecord:s
-    * set :drawPrint.29:x *tmp400
-    * set :drawPrint.29:y *tmp401
-    * set :drawPrint.29:alignment @right
-    * draw print :drawText.29:x :drawText.29:y :drawText.29:alignment
+ 1084 draw print *tmp400 *tmp401 @right
  1085 label *label267
  1086 label *label266
  1087 label *label261
 
  1156 set :drawText.30:y 261
  1157 set :drawText.30:alignment @bottom
  1158 print "Goal"
-    * set :drawPrint.30:x :drawBold.14:x
-    * set :drawPrint.30:y :drawBold.14:y
-    * set :drawPrint.30:alignment :drawBold.14:alignment
-    * draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
+ 1159 set :drawPrint.30:x 42
+ 1160 set :drawPrint.30:y 261
+ 1161 set :drawPrint.30:alignment @bottom
+ 1162 draw print 42 261 @bottom
  1163 label *label278
  1164 label *label277
  1165 op add :drawText.31:x 42 1
  1166 set :drawText.31:y 261
  1167 set :drawText.31:alignment @bottom
  1168 print "Goal"
-    * set :drawPrint.31:x 43
-    * set :drawPrint.31:y :drawBold.14:y
-    * set :drawPrint.31:alignment :drawBold.14:alignment
-    * draw print :drawText.31:x :drawText.31:y :drawText.31:alignment
+ 1169 set :drawPrint.31:y 261
+ 1170 set :drawPrint.31:alignment @bottom
+ 1171 draw print 43 261 @bottom
  1172 label *label280
  1173 label *label279
  1174 label *label276
 
  1223 set :drawText.32:y 272
  1224 set :drawText.32:alignment @topRight
  1225 print ")"
-    * set :drawPrint.32:x 174
-    * set :drawPrint.32:y 272
-    * set :drawPrint.32:alignment @topRight
-    * draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
+ 1226 draw print 174 272 @topRight
  1227 label *label290
  1228 label *label289
  1229 jump *label291 equal .titaniumDrill false
 
  1237 set :drawText.33:alignment @topRight
  1238 print "x"
  1239 print :drawHeader:count
-    * set :drawPrint.33:x :drawHeader:x
-    * set :drawPrint.33:y 255
-    * set :drawPrint.33:alignment @topRight
-    * draw print :drawText.33:x :drawText.33:y :drawText.33:alignment
+ 1240 set :drawPrint.33:x 174
+ 1241 draw print 174 255 @topRight
  1242 label *label294
  1243 label *label293
-    * op sub *tmp441 174 20
  1244 op mul *tmp442 7 :drawHeader:len
  1245 op sub *tmp443 154 *tmp442
  1246 draw image *tmp443 246 @titanium 12 0
 
  1256 set :drawText.34:alignment @topRight
  1257 print "x"
  1258 print :drawHeader:count
-    * set :drawPrint.34:x :drawHeader:x.1
-    * set :drawPrint.34:y 255
-    * set :drawPrint.34:alignment @topRight
-    * draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
+ 1259 set :drawPrint.34:x 124
+ 1260 draw print 124 255 @topRight
  1261 label *label298
  1262 label *label297
-    * op sub *tmp448 124 20
  1263 op mul *tmp449 7 :drawHeader:len.1
  1264 op sub *tmp450 104 *tmp449
  1265 draw image *tmp450 246 @thorium 12 0
 
  1267 label *label296
  1268 set :drawHeader:x.2 174
  1269 draw col %[white]
-    * set :drawUnitCount:type @poly
  1270 set :drawUnitCount:count .polys
  1271 jump *label300 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp453 174 20
  1272 draw image 154 227 @poly 12 0
  1273 set :drawText.35:x 174
  1274 set :drawText.35:y 229
  1275 set :drawText.35:alignment @right
  1276 print "x"
  1277 print :drawUnitCount:count
-    * set :drawPrint.35:x :drawHeader:x.2
-    * set :drawPrint.35:y 229
-    * set :drawPrint.35:alignment @right
-    * draw print :drawText.35:x :drawText.35:y :drawText.35:alignment
+ 1278 set :drawPrint.35:x 174
+ 1279 draw print 174 229 @right
  1280 label *label303
  1281 label *label302
  1282 op sub :drawHeader:x.2 174 30
  1283 label *label300
  1284 label *label301
  1285 label *label299
-    * set :drawUnitCount.1:type @mono
  1286 set :drawUnitCount.1:count .monos
  1287 jump *label305 lessThanEq :drawUnitCount.1:count 0
  1288 op sub *tmp456 :drawHeader:x.2 20
 
  1292 set :drawText.36:alignment @right
  1293 print "x"
  1294 print :drawUnitCount.1:count
-    * set :drawPrint.36:x :drawHeader:x.2
-    * set :drawPrint.36:y 229
-    * set :drawPrint.36:alignment @right
-    * draw print :drawText.36:x :drawText.36:y :drawText.36:alignment
+ 1295 draw print :drawHeader:x.2 229 @right
  1296 label *label308
  1297 label *label307
  1298 op sub :drawHeader:x.2 :drawHeader:x.2 30
  1299 label *label305
  1300 label *label306
  1301 label *label304
-    * set :drawUnitCount.2:type @flare
  1302 set :drawUnitCount.2:count .flares
  1303 jump *label310 lessThanEq :drawUnitCount.2:count 0
  1304 op sub *tmp459 :drawHeader:x.2 20
 
  1308 set :drawText.37:alignment @right
  1309 print "x"
  1310 print :drawUnitCount.2:count
-    * set :drawPrint.37:x :drawHeader:x.2
-    * set :drawPrint.37:y 229
-    * set :drawPrint.37:alignment @right
-    * draw print :drawText.37:x :drawText.37:y :drawText.37:alignment
+ 1311 draw print :drawHeader:x.2 229 @right
  1312 label *label313
  1313 label *label312
  1314 label *label310
 
  1318 return :drawHeader*retaddr
  1319 end
  1320 label *label6
-    * set :setupScale:size 220
  1321 draw reset
  1322 draw translate 90 105
-    * op div *tmp460 220 15
-    * op div *tmp461 14.666666666666666 2
-    * op div *tmp462 220 15
-    * op div *tmp463 14.666666666666666 2
  1323 draw scale 7.333333333333333 7.333333333333333
  1324 label *label314
  1325 return :setupScale*retaddr
  1326 end
  1327 label *label7
  1328 set :unpackCfg2:cfg :drawBlock:cfg
-    * set :unpackCfg:cfg :drawBlock:cfg
-    * set :unpackCfg:index 1
  1329 set *tmp464 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp465 :unpackCfg2:cfg *tmp464
+ 1330 read *tmp465 :drawBlock:cfg 1
  1331 op sub *tmp466 *tmp465 74
  1332 lookup block :unpackCfg:type *tmp466
  1333 set *tmp468 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp469 :unpackCfg2:cfg *tmp468
+ 1334 read *tmp469 :drawBlock:cfg 2
  1335 op sub *tmp470 *tmp469 74
  1336 op div :unpackCfg:x *tmp470 2
  1337 set *tmp472 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp473 :unpackCfg2:cfg *tmp472
+ 1338 read *tmp473 :drawBlock:cfg 3
  1339 op sub *tmp474 *tmp473 74
  1340 op div :unpackCfg:y *tmp474 2
  1341 set *tmp476 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp477 :unpackCfg2:cfg *tmp476
+ 1342 read *tmp477 :drawBlock:cfg 4
  1343 op sub :unpackCfg:rotation *tmp477 74
  1344 set *tmp479 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp480 :unpackCfg2:cfg *tmp479
+ 1345 read *tmp480 :drawBlock:cfg 5
  1346 op sub :unpackCfg:ind *tmp480 74
  1347 sensor :unpackCfg:size :unpackCfg:type @size
  1348 label *label317
-    * set :unpackCfg2:type :unpackCfg:type
-    * set :unpackCfg2:x :unpackCfg:x
-    * set :unpackCfg2:y :unpackCfg:y
-    * set :unpackCfg2:rotation :unpackCfg:rotation
-    * set :unpackCfg2:size :unpackCfg:size
  1349 set :unpackCfg2:index :unpackCfg:ind
  1350 label *label316
  1351 set :drawBlock:type :unpackCfg:type
 
  1353 set :drawBlock:y :unpackCfg:y
  1354 set :drawBlock:rotation :unpackCfg:rotation
  1355 set :drawBlock:size :unpackCfg:size
-    * set :drawBlock:index :unpackCfg:ind
-    * op shl *tmp490 1 :unpackCfg2:index
+ 1356 op shl *tmp490 1 :unpackCfg:ind
  1357 op and *tmp491 .blocksBuilt *tmp490
  1358 jump *label318 equal *tmp491 false
  1359 draw col %[white]

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-269 instructions):
 
    51 op add *tmp58 *tmp60 *tmp61
    52 label *label28
    53 op mul *tmp65 *tmp59 237
-    * op mul *tmp66 :animate:ratio 88
    54 op add *tmp63 *tmp65 *tmp61
    55 label *label29
    56 op mul *tmp70 *tmp59 32
 
   126 label *label41
   127 label *label39
   128 label *label37
-    * set :drawBold:x 22
-    * set :drawBold:y 205
-    * set :drawBold:alignment @bottomLeft
-    * set :drawText:x 22
-    * set :drawText:y 205
-    * set :drawText:alignment @bottomLeft
   129 print "Unit factories"
-    * set :drawPrint:x 22
-    * set :drawPrint:y 205
-    * set :drawPrint:alignment @bottomLeft
   130 draw print 22 205 @bottomLeft
   131 label *label46
   132 label *label45
-    * op add :drawText.1:x 22 1
-    * set :drawText.1:y 205
-    * set :drawText.1:alignment @bottomLeft
   133 print "Unit factories"
-    * set :drawPrint.1:y 205
-    * set :drawPrint.1:alignment @bottomLeft
   134 draw print 23 205 @bottomLeft
   135 label *label48
   136 label *label47
 
   138 jump *label49 lessThanEq .factoryProgress 0
   139 op mul *tmp115 122 .factoryProgress
   140 op mul *tmp116 .factoryProgress 122
-    * op min :drawItem:length 122 *tmp116
+  141 op min :drawItem:length 122 *tmp115
   142 op add :drawItem:textX 170 0
   143 draw col %[white]
   144 draw image 11 195 :drawMaterials:unit1 16 0
 
   147 draw color 0 255 0 255
   148 draw lineRect 22 190 122 10
   149 op add *tmp129 195 2
-    * set :drawBold.1:x 170
-    * set :drawBold.1:y 197
-    * set :drawBold.1:alignment @right
-    * set :drawText.2:x 170
-    * set :drawText.2:y 197
-    * set :drawText.2:alignment @right
   150 print :drawMaterials:unitCount1
   151 print "/"
   152 print :drawMaterials:unitTotal1
-    * set :drawPrint.2:x 170
-    * set :drawPrint.2:y 197
-    * set :drawPrint.2:alignment @right
-    * draw print :drawItem:textX *tmp129 @right
+  153 draw print 170 197 @right
   154 label *label54
   155 label *label53
-    * op add :drawText.3:x 170 1
-    * set :drawText.3:y 197
-    * set :drawText.3:alignment @right
   156 print :drawMaterials:unitCount1
   157 print "/"
   158 print :drawMaterials:unitTotal1
-    * set :drawPrint.3:x 171
-    * set :drawPrint.3:y 197
-    * set :drawPrint.3:alignment @right
-    * draw print 171 *tmp129 @right
+  159 draw print 171 197 @right
   160 label *label56
   161 label *label55
   162 label *label52
 
   167 jump *label59 equal :drawMaterials:unit2 null
   168 op mul *tmp139 122 .reconstructorProgress
   169 op mul *tmp140 .reconstructorProgress 122
-    * op min :drawItem.1:length 122 *tmp140
+  170 op min :drawItem.1:length 122 *tmp139
   171 op add :drawItem.1:textX 170 0
   172 draw col %[white]
   173 draw image 11 180 :drawMaterials:unit2 16 0
 
   176 draw color 0 255 0 255
   177 draw lineRect 22 175 122 10
   178 op add *tmp153 180 2
-    * set :drawBold.2:x 170
-    * set :drawBold.2:y 182
-    * set :drawBold.2:alignment @right
-    * set :drawText.4:x 170
-    * set :drawText.4:y 182
-    * set :drawText.4:alignment @right
   179 print :drawMaterials:unitCount2
   180 print "/"
   181 print :drawMaterials:unitTotal2
-    * set :drawPrint.4:x 170
-    * set :drawPrint.4:y 182
-    * set :drawPrint.4:alignment @right
-    * draw print :drawItem.1:textX *tmp153 @right
+  182 draw print 170 182 @right
   183 label *label64
   184 label *label63
-    * op add :drawText.5:x 170 1
-    * set :drawText.5:y 182
-    * set :drawText.5:alignment @right
   185 print :drawMaterials:unitCount2
   186 print "/"
   187 print :drawMaterials:unitTotal2
-    * set :drawPrint.5:x 171
-    * set :drawPrint.5:y 182
-    * set :drawPrint.5:alignment @right
-    * draw print 171 *tmp153 @right
+  188 draw print 171 182 @right
   189 label *label66
   190 label *label65
   191 label *label62
 
   196 jump *label69 equal :drawMaterials:unit3 null
   197 op mul *tmp163 122 :drawMaterials:multiReconstructorProgress
   198 op mul *tmp164 :drawMaterials:multiReconstructorProgress 122
-    * op min :drawItem.2:length 122 *tmp164
+  199 op min :drawItem.2:length 122 *tmp163
   200 op add :drawItem.2:textX 170 0
   201 draw col %[white]
   202 draw image 11 165 :drawMaterials:unit3 16 0
 
   205 draw color 0 255 0 255
   206 draw lineRect 22 160 122 10
   207 op add *tmp177 165 2
-    * set :drawBold.3:x 170
-    * set :drawBold.3:y 167
-    * set :drawBold.3:alignment @right
-    * set :drawText.6:x 170
-    * set :drawText.6:y 167
-    * set :drawText.6:alignment @right
   208 print .megas
   209 print "/"
   210 print .megaTarget
-    * set :drawPrint.6:x 170
-    * set :drawPrint.6:y 167
-    * set :drawPrint.6:alignment @right
-    * draw print :drawItem.2:textX *tmp177 @right
+  211 draw print 170 167 @right
   212 label *label74
   213 label *label73
-    * op add :drawText.7:x 170 1
-    * set :drawText.7:y 167
-    * set :drawText.7:alignment @right
   214 print .megas
   215 print "/"
   216 print .megaTarget
-    * set :drawPrint.7:x 171
-    * set :drawPrint.7:y 167
-    * set :drawPrint.7:alignment @right
-    * draw print 171 *tmp177 @right
+  217 draw print 171 167 @right
   218 label *label76
   219 label *label75
   220 label *label72
 
   239 label *label79
   240 jump *label84 lessThanEq :drawMaterials:target 0
   241 sensor *tmp186 A¾BFLX-air-factory14 :drawMaterials:item
-    * set :drawItem.3:col :drawMaterials:col
   242 set :drawItem.3:y :drawMaterials:y
   243 op mul *tmp191 122 *tmp186
   244 op div *tmp192 *tmp191 :drawMaterials:target
   245 op min :drawItem.3:length 122 *tmp192
-    * op mul *tmp194 :drawMaterials:col 176
   246 op mul *tmp195 :drawMaterials:col 88
   247 op add :drawItem.3:iconX 11 *tmp195
-    * op mul *tmp198 :drawMaterials:col 88
   248 op add :drawItem.3:barX 22 *tmp195
-    * op mul *tmp201 :drawMaterials:col 88
   249 op add :drawItem.3:textX 170 *tmp195
   250 draw col %[white]
   251 op add *tmp203 :drawMaterials:y 5
 
   255 draw color 0 255 0 255
   256 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
   257 op add *tmp205 :drawMaterials:y 7
-    * set :drawBold.4:x :drawItem.3:textX
-    * set :drawBold.4:y *tmp205
-    * set :drawBold.4:alignment @right
-    * set :drawText.8:x :drawItem.3:textX
-    * set :drawText.8:y *tmp205
-    * set :drawText.8:alignment @right
   258 print :drawMaterials:target
-    * set :drawPrint.8:x :drawItem.3:textX
-    * set :drawPrint.8:y *tmp205
-    * set :drawPrint.8:alignment @right
   259 draw print :drawItem.3:textX *tmp205 @right
   260 label *label89
   261 label *label88
   262 op add :drawText.9:x *tmp195 171
-    * set :drawText.9:y *tmp205
-    * set :drawText.9:alignment @right
   263 print :drawMaterials:target
-    * set :drawPrint.9:y *tmp205
-    * set :drawPrint.9:alignment @right
   264 draw print :drawText.9:x *tmp205 @right
   265 label *label91
   266 label *label90
 
   287 op equal *tmp210 .nextBlock @ore-titanium
   288 op or *tmp211 *tmp209 *tmp210
   289 jump *label94 equal *tmp211 false
-    * set :drawBold.5:x 22
-    * set :drawBold.5:y 205
-    * set :drawBold.5:alignment @bottomLeft
-    * set :drawText.10:x 22
-    * set :drawText.10:y 205
-    * set :drawText.10:alignment @bottomLeft
   290 read *tmp213 processor3 ".mapAction"
   291 print *tmp213
-    * set :drawPrint.10:x 22
-    * set :drawPrint.10:y 205
-    * set :drawPrint.10:alignment @bottomLeft
   292 draw print 22 205 @bottomLeft
   293 label *label98
   294 label *label97
-    * op add :drawText.11:x 22 1
-    * set :drawText.11:y 205
-    * set :drawText.11:alignment @bottomLeft
   295 read *tmp215 processor3 ".mapAction"
   296 print *tmp215
-    * set :drawPrint.11:y 205
-    * set :drawPrint.11:alignment @bottomLeft
   297 draw print 23 205 @bottomLeft
   298 label *label100
   299 label *label99
 
   311 draw color 0 255 0 255
   312 draw lineRect 22 190 122 10
   313 op add *tmp234 195 2
-    * set :drawBold.6:x 170
-    * set :drawBold.6:y 197
-    * set :drawBold.6:alignment @right
-    * set :drawText.12:x 170
-    * set :drawText.12:y 197
-    * set :drawText.12:alignment @right
   314 print "x"
   315 read *tmp235 processor3 ".mapSpots"
   316 print *tmp235
-    * set :drawPrint.12:x 170
-    * set :drawPrint.12:y 197
-    * set :drawPrint.12:alignment @right
-    * draw print :drawItem.4:textX *tmp234 @right
+  317 draw print 170 197 @right
   318 label *label104
   319 label *label103
-    * op add :drawText.13:x 170 1
-    * set :drawText.13:y 197
-    * set :drawText.13:alignment @right
   320 print "x"
   321 read *tmp237 processor3 ".mapSpots"
   322 print *tmp237
-    * set :drawPrint.13:x 171
-    * set :drawPrint.13:y 197
-    * set :drawPrint.13:alignment @right
-    * draw print 171 *tmp234 @right
+  323 draw print 171 197 @right
   324 label *label106
   325 label *label105
   326 label *label102
 
   332 label *label94
   333 set .materialCount .totalTargets
   334 set :drawMaterials:count .materialCount
-    * set :drawBold.7:x 22
-    * set :drawBold.7:y 205
-    * set :drawBold.7:alignment @bottomLeft
-    * set :drawText.14:x 22
-    * set :drawText.14:y 205
-    * set :drawText.14:alignment @bottomLeft
   335 print "Materials"
-    * set :drawPrint.14:x 22
-    * set :drawPrint.14:y 205
-    * set :drawPrint.14:alignment @bottomLeft
   336 draw print 22 205 @bottomLeft
   337 label *label111
   338 label *label110
-    * op add :drawText.15:x 22 1
-    * set :drawText.15:y 205
-    * set :drawText.15:alignment @bottomLeft
   339 print "Materials"
-    * set :drawPrint.15:y 205
-    * set :drawPrint.15:alignment @bottomLeft
   340 draw print 23 205 @bottomLeft
   341 label *label113
   342 label *label112
   343 label *label109
-    * set :drawMaterials:columns 1
   344 jump *label114 equal .materialCount false
   345 set :drawMaterials:item.1 @copper
   346 set :drawMaterials:target.1 .targetCopper
 
   378 label *label116
   379 jump *label126 lessThanEq :drawMaterials:target.1 0
   380 sensor *tmp246 .core :drawMaterials:item.1
-    * set :drawItem.5:col :drawMaterials:col
   381 set :drawItem.5:y :drawMaterials:y
-    * set :drawItem.5:columns 1
-    * op mul *tmp247 1 176
-    * op mul *tmp248 1 88
-    * op sub :drawItem.5:barLength 210 88
-    * op add :drawItem.5:textEnd 48 122
   382 op mul *tmp251 122 *tmp246
   383 op div *tmp252 *tmp251 :drawMaterials:target.1
   384 op min :drawItem.5:length 122 *tmp252
-    * op mul *tmp254 :drawMaterials:col 176
   385 op mul *tmp255 :drawMaterials:col 88
   386 op add :drawItem.5:iconX 11 *tmp255
-    * op mul *tmp258 :drawMaterials:col 88
   387 op add :drawItem.5:barX 22 *tmp255
-    * op mul *tmp261 :drawMaterials:col 88
   388 op add :drawItem.5:textX 170 *tmp255
   389 draw col %[white]
   390 op add *tmp263 :drawMaterials:y 5
 
   394 draw color 0 255 0 255
   395 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
   396 op add *tmp265 :drawMaterials:y 7
-    * set :drawBold.8:x :drawItem.5:textX
-    * set :drawBold.8:y *tmp265
-    * set :drawBold.8:alignment @right
-    * set :drawText.16:x :drawItem.5:textX
-    * set :drawText.16:y *tmp265
-    * set :drawText.16:alignment @right
   397 print :drawMaterials:target.1
-    * set :drawPrint.16:x :drawItem.5:textX
-    * set :drawPrint.16:y *tmp265
-    * set :drawPrint.16:alignment @right
   398 draw print :drawItem.5:textX *tmp265 @right
   399 label *label131
   400 label *label130
   401 op add :drawText.17:x :drawItem.5:textX 1
-    * set :drawText.17:y *tmp265
-    * set :drawText.17:alignment @right
   402 print :drawMaterials:target.1
-    * set :drawPrint.17:y *tmp265
-    * set :drawPrint.17:alignment @right
   403 draw print :drawText.17:x *tmp265 @right
   404 label *label133
   405 label *label132
 
   437 set *tmp272 125
   438 label *label140
   439 set :drawUnit:y *tmp272
-    * set :drawBold.9:x 22
-    * set :drawBold.9:y *tmp272
-    * set :drawBold.9:alignment @bottomLeft
-    * set :drawText.18:x 22
-    * set :drawText.18:y *tmp272
-    * set :drawText.18:alignment @bottomLeft
   440 print "Builder"
-    * set :drawPrint.18:x 22
-    * set :drawPrint.18:y *tmp272
-    * set :drawPrint.18:alignment @bottomLeft
-    * draw print 22 :drawUnit:y @bottomLeft
+  441 draw print 22 *tmp272 @bottomLeft
   442 label *label143
   443 label *label142
-    * op add :drawText.19:x 22 1
-    * set :drawText.19:y *tmp272
-    * set :drawText.19:alignment @bottomLeft
   444 print "Builder"
-    * set :drawPrint.19:y *tmp272
-    * set :drawPrint.19:alignment @bottomLeft
-    * draw print 23 :drawUnit:y @bottomLeft
+  445 draw print 23 *tmp272 @bottomLeft
   446 label *label145
   447 label *label144
   448 label *label141
   449 jump *label146 notEqual .transportItem null
   450 op sub *tmp276 *tmp272 15
-    * set :drawUnit.1:item @poly
-    * set :drawUnit.1:items 0
   451 set :drawUnit.1:y *tmp276
   452 set :drawItem.6:target .transportTarget
-    * op mul *tmp281 122 0
   453 op div *tmp282 0 :drawItem.6:target
   454 op min :drawItem.6:length 122 *tmp282
   455 op add :drawItem.6:textX 170 0
   456 draw col %[white]
-    * op add *tmp293 *tmp276 5
+  457 op sub *tmp293 *tmp272 10
   458 draw image 11 *tmp293 @poly 16 0
   459 draw color 0 128 0 255
   460 draw rect 22 *tmp276 :drawItem.6:length 10
   461 draw color 0 255 0 255
   462 draw lineRect 22 *tmp276 122 10
-    * op add *tmp294 *tmp276 5
-    * op add *tmp295 :drawUnit.1:y 7
-    * set :drawBold.10:x 170
-    * set :drawBold.10:y *tmp295
-    * set :drawBold.10:alignment @right
-    * set :drawText.20:x 170
-    * set :drawText.20:y *tmp295
-    * set :drawText.20:alignment @right
+  463 op sub *tmp294 *tmp272 10
+  464 op add *tmp295 *tmp276 7
   465 print .transportTarget
-    * set :drawPrint.20:x 170
-    * set :drawPrint.20:y *tmp295
-    * set :drawPrint.20:alignment @right
-    * draw print :drawItem.6:textX *tmp295 @right
+  466 draw print 170 *tmp295 @right
   467 label *label152
   468 label *label151
-    * op add :drawText.21:x 170 1
-    * set :drawText.21:y *tmp295
-    * set :drawText.21:alignment @right
   469 print .transportTarget
-    * set :drawPrint.21:x 171
-    * set :drawPrint.21:y *tmp295
-    * set :drawPrint.21:alignment @right
   470 draw print 171 *tmp295 @right
   471 label *label154
   472 label *label153
   473 label *label150
   474 jump *label155 lessThan 1 1
-    * op sub :drawItem.6:y *tmp276 15
+  475 op sub :drawItem.6:y *tmp272 30
   476 label *label155
   477 label *label156
   478 label *label149
 
   485 op mul *tmp304 *tmp302 *tmp303
   486 op sub *tmp305 *tmp272 15
   487 set :drawUnit.2:item .transportItem
-    * set :drawUnit.2:items *tmp304
   488 set :drawUnit.2:y *tmp305
   489 set :drawItem.7:target .transportTarget
   490 op mul *tmp310 122 *tmp304
 
   492 op min :drawItem.7:length 122 *tmp311
   493 op add :drawItem.7:textX 170 0
   494 draw col %[white]
-    * op add *tmp322 *tmp305 5
+  495 op sub *tmp322 *tmp272 10
   496 draw image 11 *tmp322 :drawUnit.2:item 16 0
   497 draw color 0 128 0 255
   498 draw rect 22 *tmp305 :drawItem.7:length 10
   499 draw color 0 255 0 255
   500 draw lineRect 22 *tmp305 122 10
-    * op add *tmp323 *tmp305 5
-    * op add *tmp324 :drawUnit.2:y 7
-    * set :drawBold.11:x 170
-    * set :drawBold.11:y *tmp324
-    * set :drawBold.11:alignment @right
-    * set :drawText.22:x 170
-    * set :drawText.22:y *tmp324
-    * set :drawText.22:alignment @right
+  501 op sub *tmp323 *tmp272 10
+  502 op add *tmp324 *tmp305 7
   503 print .transportTarget
-    * set :drawPrint.22:x 170
-    * set :drawPrint.22:y *tmp324
-    * set :drawPrint.22:alignment @right
-    * draw print :drawItem.7:textX *tmp324 @right
+  504 draw print 170 *tmp324 @right
   505 label *label161
   506 label *label160
-    * op add :drawText.23:x 170 1
-    * set :drawText.23:y *tmp324
-    * set :drawText.23:alignment @right
   507 print .transportTarget
-    * set :drawPrint.23:x 171
-    * set :drawPrint.23:y *tmp324
-    * set :drawPrint.23:alignment @right
   508 draw print 171 *tmp324 @right
   509 label *label163
   510 label *label162
   511 label *label159
   512 jump *label164 lessThan 1 1
-    * op sub :drawItem.7:y *tmp305 15
+  513 op sub :drawItem.7:y *tmp272 30
   514 label *label164
   515 label *label165
   516 label *label158
 
   633 label *label202
   634 jump *label203 equal .pageSwitched false
   635 draw col %[gold]
-    * set :drawBold.12:x 90
-    * set :drawBold.12:y 206
-    * set :drawBold.12:alignment @center
-    * set :drawText.24:x 90
-    * set :drawText.24:y 206
-    * set :drawText.24:alignment @center
   636 print "Base map"
-    * set :drawPrint.24:x 90
-    * set :drawPrint.24:y 206
-    * set :drawPrint.24:alignment @center
   637 draw print 90 206 @center
   638 label *label207
   639 label *label206
-    * op add :drawText.25:x 90 1
-    * set :drawText.25:y 206
-    * set :drawText.25:alignment @center
   640 print "Base map"
-    * set :drawPrint.25:y 206
-    * set :drawPrint.25:alignment @center
   641 draw print 91 206 @center
   642 label *label209
   643 label *label208
 
   797 jump *label248 equal .pageSwitched false
   798 draw clear 0 0 32
   799 draw col %[gold]
-    * set :drawBold.13:x 4
-    * set :drawBold.13:y 206
-    * set :drawBold.13:alignment @left
-    * set :drawText.26:x 4
-    * set :drawText.26:y 206
-    * set :drawText.26:alignment @left
   800 print "Build records"
-    * set :drawPrint.26:x 4
-    * set :drawPrint.26:y 206
-    * set :drawPrint.26:alignment @left
   801 draw print 4 206 @left
   802 label *label252
   803 label *label251
-    * op add :drawText.27:x 4 1
-    * set :drawText.27:y 206
-    * set :drawText.27:alignment @left
   804 print "Build records"
-    * set :drawPrint.27:y 206
-    * set :drawPrint.27:alignment @left
   805 draw print 5 206 @left
   806 label *label254
   807 label *label253
 
   809 op sub *tmp374 .page 2
   810 print *tmp374
   811 print "/"
-    * set :drawText.28:x 172
-    * set :drawText.28:y 206
-    * set :drawText.28:alignment @right
   812 print :displayLog:pages
   813 draw print 172 206 @right
   814 label *label256
 
   855 draw image :displayRecord:x :displayRecord:y *tmp388 14 0
   856 op add *tmp400 :displayRecord:x 44
   857 op add *tmp401 :displayRecord:y 2
-    * set :drawText.29:x *tmp400
-    * set :drawText.29:y *tmp401
-    * set :drawText.29:alignment @right
   858 print :displayRecord:s
   859 draw print *tmp400 *tmp401 @right
   860 label *label267
 
   924 draw color 0 0 32 255
   925 draw rect 0 217 200 300
   926 draw col %[gold]
-    * set :drawBold.14:x 42
-    * set :drawBold.14:y 261
-    * set :drawBold.14:alignment @bottom
-    * set :drawText.30:x 42
-    * set :drawText.30:y 261
-    * set :drawText.30:alignment @bottom
   927 print "Goal"
-    * set :drawPrint.30:x 42
-    * set :drawPrint.30:y 261
-    * set :drawPrint.30:alignment @bottom
   928 draw print 42 261 @bottom
   929 label *label278
   930 label *label277
-    * op add :drawText.31:x 42 1
-    * set :drawText.31:y 261
-    * set :drawText.31:alignment @bottom
   931 print "Goal"
-    * set :drawPrint.31:y 261
-    * set :drawPrint.31:alignment @bottom
   932 draw print 43 261 @bottom
   933 label *label280
   934 label *label279
 
   980 print *tmp434
   981 print "."
   982 print *tmp435
-    * set :drawText.32:x 174
-    * set :drawText.32:y 272
-    * set :drawText.32:alignment @topRight
   983 print ")"
   984 draw print 174 272 @topRight
   985 label *label290
 
   987 jump *label291 equal .titaniumDrill false
   988 sensor *tmp437 .titaniumDrill @titanium
   989 op max :drawHeader:count .titaniumDrillCount *tmp437
-    * set :drawHeader:x 174
   990 op log10 *tmp439 :drawHeader:count
   991 op floor :drawHeader:len *tmp439
-    * set :drawText.33:x 174
-    * set :drawText.33:y 255
-    * set :drawText.33:alignment @topRight
   992 print "x"
   993 print :drawHeader:count
-    * set :drawPrint.33:x 174
   994 draw print 174 255 @topRight
   995 label *label294
   996 label *label293
 
  1001 label *label292
  1002 jump *label295 equal .thoriumContainer false
  1003 sensor :drawHeader:count .thoriumContainer @thorium
-    * set :drawHeader:x.1 124
  1004 op log10 *tmp446 :drawHeader:count
  1005 op floor :drawHeader:len.1 *tmp446
-    * set :drawText.34:x 124
-    * set :drawText.34:y 255
-    * set :drawText.34:alignment @topRight
  1006 print "x"
  1007 print :drawHeader:count
-    * set :drawPrint.34:x 124
  1008 draw print 124 255 @topRight
  1009 label *label298
  1010 label *label297
 
  1018 set :drawUnitCount:count .polys
  1019 jump *label300 lessThanEq :drawUnitCount:count 0
  1020 draw image 154 227 @poly 12 0
-    * set :drawText.35:x 174
-    * set :drawText.35:y 229
-    * set :drawText.35:alignment @right
  1021 print "x"
  1022 print :drawUnitCount:count
-    * set :drawPrint.35:x 174
  1023 draw print 174 229 @right
  1024 label *label303
  1025 label *label302
 
  1031 jump *label305 lessThanEq :drawUnitCount.1:count 0
  1032 op sub *tmp456 :drawHeader:x.2 20
  1033 draw image *tmp456 227 @mono 12 0
-    * set :drawText.36:x :drawHeader:x.2
-    * set :drawText.36:y 229
-    * set :drawText.36:alignment @right
  1034 print "x"
  1035 print :drawUnitCount.1:count
  1036 draw print :drawHeader:x.2 229 @right
 
  1044 jump *label310 lessThanEq :drawUnitCount.2:count 0
  1045 op sub *tmp459 :drawHeader:x.2 20
  1046 draw image *tmp459 227 @flare 12 0
-    * set :drawText.37:x :drawHeader:x.2
-    * set :drawText.37:y 229
-    * set :drawText.37:alignment @right
  1047 print "x"
  1048 print :drawUnitCount.2:count
  1049 draw print :drawHeader:x.2 229 @right
 
  1063 return :setupScale*retaddr
  1064 end
  1065 label *label7
-    * set :unpackCfg2:cfg :drawBlock:cfg
-    * set *tmp464 1
  1066 read *tmp465 :drawBlock:cfg 1
  1067 op sub *tmp466 *tmp465 74
  1068 lookup block :unpackCfg:type *tmp466
-    * set *tmp468 2
  1069 read *tmp469 :drawBlock:cfg 2
  1070 op sub *tmp470 *tmp469 74
  1071 op div :unpackCfg:x *tmp470 2
-    * set *tmp472 3
  1072 read *tmp473 :drawBlock:cfg 3
  1073 op sub *tmp474 *tmp473 74
  1074 op div :unpackCfg:y *tmp474 2
-    * set *tmp476 4
  1075 read *tmp477 :drawBlock:cfg 4
  1076 op sub :unpackCfg:rotation *tmp477 74
-    * set *tmp479 5
  1077 read *tmp480 :drawBlock:cfg 5
  1078 op sub :unpackCfg:ind *tmp480 74
  1079 sensor :unpackCfg:size :unpackCfg:type @size
  1080 label *label317
-    * set :unpackCfg2:index :unpackCfg:ind
  1081 label *label316
  1082 set :drawBlock:type :unpackCfg:type
  1083 set :drawBlock:x :unpackCfg:x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-20 instructions):
 
   137 label *label44
   138 jump *label49 lessThanEq .factoryProgress 0
   139 op mul *tmp115 122 .factoryProgress
-    * op mul *tmp116 .factoryProgress 122
   140 op min :drawItem:length 122 *tmp115
-    * op add :drawItem:textX 170 0
   141 draw col %[white]
   142 draw image 11 195 :drawMaterials:unit1 16 0
   143 draw color 0 128 0 255
   144 draw rect 22 190 :drawItem:length 10
   145 draw color 0 255 0 255
   146 draw lineRect 22 190 122 10
-    * op add *tmp129 195 2
   147 print :drawMaterials:unitCount1
   148 print "/"
   149 print :drawMaterials:unitTotal1
 
   163 label *label51
   164 jump *label59 equal :drawMaterials:unit2 null
   165 op mul *tmp139 122 .reconstructorProgress
-    * op mul *tmp140 .reconstructorProgress 122
   166 op min :drawItem.1:length 122 *tmp139
-    * op add :drawItem.1:textX 170 0
   167 draw col %[white]
   168 draw image 11 180 :drawMaterials:unit2 16 0
   169 draw color 0 128 0 255
   170 draw rect 22 175 :drawItem.1:length 10
   171 draw color 0 255 0 255
   172 draw lineRect 22 175 122 10
-    * op add *tmp153 180 2
   173 print :drawMaterials:unitCount2
   174 print "/"
   175 print :drawMaterials:unitTotal2
 
   189 label *label61
   190 jump *label69 equal :drawMaterials:unit3 null
   191 op mul *tmp163 122 :drawMaterials:multiReconstructorProgress
-    * op mul *tmp164 :drawMaterials:multiReconstructorProgress 122
   192 op min :drawItem.2:length 122 *tmp163
-    * op add :drawItem.2:textX 170 0
   193 draw col %[white]
   194 draw image 11 165 :drawMaterials:unit3 16 0
   195 draw color 0 128 0 255
   196 draw rect 22 160 :drawItem.2:length 10
   197 draw color 0 255 0 255
   198 draw lineRect 22 160 122 10
-    * op add *tmp177 165 2
   199 print .megas
   200 print "/"
   201 print .megaTarget
 
   294 op mul *tmp220 122 :drawItem.4:current
   295 op div *tmp221 *tmp220 :drawItem.4:target
   296 op min :drawItem.4:length 122 *tmp221
-    * op add :drawItem.4:textX 170 0
   297 draw col %[white]
   298 draw image 11 195 @titanium 16 0
   299 draw color 0 128 0 255
   300 draw rect 22 190 :drawItem.4:length 10
   301 draw color 0 255 0 255
   302 draw lineRect 22 190 122 10
-    * op add *tmp234 195 2
   303 print "x"
   304 read *tmp235 processor3 ".mapSpots"
   305 print *tmp235
 
   387 draw print :drawItem.5:textX *tmp265 @right
   388 label *label131
   389 label *label130
-    * op add :drawText.17:x :drawItem.5:textX 1
+  390 op add :drawText.17:x *tmp255 171
   391 print :drawMaterials:target.1
   392 draw print :drawText.17:x *tmp265 @right
   393 label *label133
 
   425 label *label139
   426 set *tmp272 125
   427 label *label140
-    * set :drawUnit:y *tmp272
   428 print "Builder"
   429 draw print 22 *tmp272 @bottomLeft
   430 label *label143
 
   436 label *label141
   437 jump *label146 notEqual .transportItem null
   438 op sub *tmp276 *tmp272 15
-    * set :drawUnit.1:y *tmp276
   439 set :drawItem.6:target .transportTarget
   440 op div *tmp282 0 :drawItem.6:target
   441 op min :drawItem.6:length 122 *tmp282
-    * op add :drawItem.6:textX 170 0
   442 draw col %[white]
   443 op sub *tmp293 *tmp272 10
   444 draw image 11 *tmp293 @poly 16 0
 
   446 draw rect 22 *tmp276 :drawItem.6:length 10
   447 draw color 0 255 0 255
   448 draw lineRect 22 *tmp276 122 10
-    * op sub *tmp294 *tmp272 10
-    * op add *tmp295 *tmp276 7
+  449 op sub *tmp295 *tmp272 8
   450 print .transportTarget
   451 draw print 170 *tmp295 @right
   452 label *label152
 
   457 label *label153
   458 label *label150
   459 jump *label155 lessThan 1 1
-    * op sub :drawItem.6:y *tmp272 30
   460 label *label155
   461 label *label156
   462 label *label149
 
   469 op mul *tmp304 *tmp302 *tmp303
   470 op sub *tmp305 *tmp272 15
   471 set :drawUnit.2:item .transportItem
-    * set :drawUnit.2:y *tmp305
   472 set :drawItem.7:target .transportTarget
   473 op mul *tmp310 122 *tmp304
   474 op div *tmp311 *tmp310 :drawItem.7:target
   475 op min :drawItem.7:length 122 *tmp311
-    * op add :drawItem.7:textX 170 0
   476 draw col %[white]
   477 op sub *tmp322 *tmp272 10
   478 draw image 11 *tmp322 :drawUnit.2:item 16 0
 
   480 draw rect 22 *tmp305 :drawItem.7:length 10
   481 draw color 0 255 0 255
   482 draw lineRect 22 *tmp305 122 10
-    * op sub *tmp323 *tmp272 10
-    * op add *tmp324 *tmp305 7
+  483 op sub *tmp324 *tmp272 8
   484 print .transportTarget
   485 draw print 170 *tmp324 @right
   486 label *label161
 
   491 label *label162
   492 label *label159
   493 jump *label164 lessThan 1 1
-    * op sub :drawItem.7:y *tmp272 30
   494 label *label164
   495 label *label165
   496 label *label158

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
   630 drawflush display1
   631 label *label203
   632 label *label204
+  633 setaddr :drawHeader*retaddr *label240 (h:*label240)
   634 set :displayBaseMap:cfg "AJEMJJ-graphite-press0"
   635 setaddr *tmp353 *label214
   636 jump *label211 always
 
   734 set :displayBaseMap:cfg "AÁNBJe-multiplicative-reconstructor27"
   735 setaddr *tmp353 *label239
   736 label *label211
-    * setaddr :drawHeader*retaddr *label240 (h:*label240)
   737 call *label4 *invalid :drawHeader*retval (m:*label240) (h:*label240)
   738 label *label240
   739 set :drawBlock:cfg :displayBaseMap:cfg

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
   802 op sub :displayLog:position .lastRecord 1
   803 label *label258
   804 jump *label260 lessThan :displayLog:position :displayLog:stop
+  805 label *label334
   806 read :displayLog:record bank1 :displayLog:position
   807 op sub *tmp378 :displayLog:start :displayLog:position
   808 op sub *tmp379 *tmp378 1
 
   849 label *label269
   850 label *label259
   851 op sub :displayLog:position :displayLog:position 1
-    * jump *label258 always
+  852 jump *label334 greaterThanEq :displayLog:position :displayLog:stop
   853 label *label260
   854 op add .lastRecord :displayLog:stop 1
   855 drawflush display1

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-21 instructions):
 
   157 label *label56
   158 label *label55
   159 label *label52
-    * jump *label57 lessThan 1 1
-    * label *label57
-    * label *label58
   160 label *label51
   161 jump *label59 equal :drawMaterials:unit2 null
   162 op mul *tmp139 122 .reconstructorProgress
 
   180 label *label66
   181 label *label65
   182 label *label62
-    * jump *label67 lessThan 1 1
-    * label *label67
-    * label *label68
   183 label *label61
   184 jump *label69 equal :drawMaterials:unit3 null
   185 op mul *tmp163 122 :drawMaterials:multiReconstructorProgress
 
   203 label *label76
   204 label *label75
   205 label *label72
-    * jump *label77 lessThan 1 1
-    * label *label77
-    * label *label78
   206 label *label71
   207 label *label69
   208 label *label70
 
   304 label *label106
   305 label *label105
   306 label *label102
-    * jump *label107 lessThan 1 1
-    * label *label107
-    * label *label108
   307 label *label101
   308 jump *label95 always
   309 label *label94
 
   407 label *label35
   408 label *label33
   409 draw col %[white]
-    * jump *label139 greaterThanEq .materialCount 4
-    * set *tmp272 140
-    * jump *label140 always
-    * label *label139
-    * set *tmp272 125
-    * label *label140
+  410 select *tmp272 lessThan .materialCount 4 140 125
   411 print "Builder"
   412 draw print 22 *tmp272 @bottomLeft
   413 label *label143
 
   439 label *label154
   440 label *label153
   441 label *label150
-    * jump *label155 lessThan 1 1
-    * label *label155
-    * label *label156
   442 label *label149
   443 label *label148
   444 jump *label147 always
 
   470 label *label163
   471 label *label162
   472 label *label159
-    * jump *label164 lessThan 1 1
-    * label *label164
-    * label *label165
   473 label *label158
   474 label *label157
   475 label *label147
 
   564 label *label185
   565 op and *tmp343 :displayStorage:accumulator 0b11111
   566 op sub :displayStorage:value *tmp343 8
-    * jump *label197 lessThan :displayStorage:value 0
-    * set *tmp346 %[green]
-    * jump *label198 always
-    * label *label197
-    * set *tmp346 %[red]
-    * label *label198
+  567 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
   568 draw col *tmp346
   569 op add *tmp347 :displayStorage:y.1 :displayStorage:value
   570 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
 
   796 op idiv :displayRecord:t *tmp392 120
   797 op idiv :displayRecord:m :displayRecord:t 60
   798 op mod :displayRecord:s :displayRecord:t 60
-    * jump *label264 greaterThanEq :displayRecord:s 10
-    * set *tmp398 "0"
-    * jump *label265 always
-    * label *label264
-    * set *tmp398 ""
-    * label *label265
+  799 select *tmp398 lessThan :displayRecord:s 10 "0" ""
   800 print :displayRecord:m
   801 print ":"
   802 print *tmp398
 
   889 jump *label282 always
   890 label *label281
   891 jump *label283 notEqual :drawHeader:count 1
-    * jump *label285 equal .nextBlock null
-    * set *tmp421 .nextBlock
-    * jump *label286 always
-    * label *label285
-    * set *tmp421 .nextUnit
-    * label *label286
+  892 select *tmp421 notEqual .nextBlock null .nextBlock .nextUnit
   893 draw image 42 237 *tmp421 32 0
   894 jump *label284 always
   895 label *label283
 
   904 op idiv :drawHeader:t *tmp0 120
   905 op idiv :drawHeader:m :drawHeader:t 60
   906 op mod :drawHeader:s :drawHeader:t 60
-    * jump *label287 greaterThanEq :drawHeader:s 10
-    * set *tmp430 "0"
-    * jump *label288 always
-    * label *label287
-    * set *tmp430 ""
-    * label *label288
+  907 select *tmp430 lessThan :drawHeader:s 10 "0" ""
   908 print :drawHeader:m
   909 print ":"
   910 print *tmp430

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
   785 op mul *tmp384 15 :displayRecord:row
   786 op sub :displayRecord:y 189 *tmp384
   787 op mod :displayRecord:id :displayLog:record 1000
-    * jump *label262 lessThanEq :displayRecord:id @blockCount
+  788 lookup block *tmp388 :displayRecord:id
+  789 jump *label263 lessThanEq :displayRecord:id @blockCount
   790 op sub *tmp389 :displayRecord:id @blockCount
   791 lookup unit *tmp388 *tmp389
   792 jump *label263 always
-    * label *label262
-    * lookup block *tmp388 :displayRecord:id
   793 label *label263
   794 op div *tmp392 :displayLog:record 1000
   795 op idiv :displayRecord:t *tmp392 120

Modifications by Unroll iteration loop at Display.mnd:493:9 (-2 instructions):
 
   485 read .lastTail bank2 511
   486 draw col %[white]
   487 set :displayStorage:y 165
-    * set :displayStorage:item @copper
-    * setaddr *tmp336 *label174
-    * jump *label171 always
-    * multilabel *label174 (m:marker2)
-    * set :displayStorage:item @lead
-    * setaddr *tmp336 *label175
-    * jump *label171 always
-    * multilabel *label175 (m:marker2)
-    * set :displayStorage:item @sand
-    * setaddr *tmp336 *label176
-    * jump *label171 always
-    * multilabel *label176 (m:marker2)
-    * set :displayStorage:item @coal
-    * setaddr *tmp336 *label177
-    * jump *label171 always
-    * multilabel *label177 (m:marker2)
-    * set :displayStorage:item @graphite
-    * setaddr *tmp336 *label178
-    * jump *label171 always
-    * multilabel *label178 (m:marker2)
-    * set :displayStorage:item @silicon
-    * setaddr *tmp336 *label179
-    * jump *label171 always
-    * multilabel *label179 (m:marker2)
-    * set :displayStorage:item @titanium
-    * setaddr *tmp336 *label180
-    * jump *label171 always
-    * multilabel *label180 (m:marker2)
-    * set :displayStorage:item @metaglass
-    * setaddr *tmp336 *label181
-    * jump *label171 always
-    * multilabel *label181 (m:marker2)
-    * set :displayStorage:item @thorium
-    * setaddr *tmp336 *label182
-    * label *label171
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
-    * label *label172
-    * multijump *tmp336 0 0 (m:marker2)
-    * multilabel *label182 (m:marker2)
-    * label *label173
+  488 set :displayStorage:item @copper
+  489 label *label335
+  490 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  491 op sub :displayStorage:y :displayStorage:y 20
+  492 label *label336
+  493 set :displayStorage:item @lead
+  494 label *label339
+  495 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  496 op sub :displayStorage:y :displayStorage:y 20
+  497 label *label340
+  498 set :displayStorage:item @sand
+  499 label *label343
+  500 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  501 op sub :displayStorage:y :displayStorage:y 20
+  502 label *label344
+  503 set :displayStorage:item @coal
+  504 label *label347
+  505 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  506 op sub :displayStorage:y :displayStorage:y 20
+  507 label *label348
+  508 set :displayStorage:item @graphite
+  509 label *label351
+  510 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  511 op sub :displayStorage:y :displayStorage:y 20
+  512 label *label352
+  513 set :displayStorage:item @silicon
+  514 label *label355
+  515 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  516 op sub :displayStorage:y :displayStorage:y 20
+  517 label *label356
+  518 set :displayStorage:item @titanium
+  519 label *label359
+  520 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  521 op sub :displayStorage:y :displayStorage:y 20
+  522 label *label360
+  523 set :displayStorage:item @metaglass
+  524 label *label363
+  525 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  526 op sub :displayStorage:y :displayStorage:y 20
+  527 label *label364
+  528 set :displayStorage:item @thorium
+  529 label *label367
+  530 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  531 op sub :displayStorage:y :displayStorage:y 20
+  532 label *label368
+  533 label *label173
   534 drawflush display1
   535 label *label169
   536 label *label170

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   487 set :displayStorage:y 165
   488 set :displayStorage:item @copper
   489 label *label335
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  490 draw image 10 165 @copper 17 0
+  491 op sub :displayStorage:y 165 20
   492 label *label336
   493 set :displayStorage:item @lead
   494 label *label339
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  495 draw image 10 145 @lead 17 0
+  496 op sub :displayStorage:y 145 20
   497 label *label340
   498 set :displayStorage:item @sand
   499 label *label343
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  500 draw image 10 125 @sand 17 0
+  501 op sub :displayStorage:y 125 20
   502 label *label344
   503 set :displayStorage:item @coal
   504 label *label347
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  505 draw image 10 105 @coal 17 0
+  506 op sub :displayStorage:y 105 20
   507 label *label348
   508 set :displayStorage:item @graphite
   509 label *label351
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  510 draw image 10 85 @graphite 17 0
+  511 op sub :displayStorage:y 85 20
   512 label *label352
   513 set :displayStorage:item @silicon
   514 label *label355
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  515 draw image 10 65 @silicon 17 0
+  516 op sub :displayStorage:y 65 20
   517 label *label356
   518 set :displayStorage:item @titanium
   519 label *label359
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  520 draw image 10 45 @titanium 17 0
+  521 op sub :displayStorage:y 45 20
   522 label *label360
   523 set :displayStorage:item @metaglass
   524 label *label363
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  525 draw image 10 25 @metaglass 17 0
+  526 op sub :displayStorage:y 25 20
   527 label *label364
   528 set :displayStorage:item @thorium
   529 label *label367
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  530 draw image 10 5 @thorium 17 0
+  531 op sub :displayStorage:y 5 20
   532 label *label368
   533 label *label173
   534 drawflush display1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-19 instructions):
 
   484 jump *label169 equal .pageSwitched false
   485 read .lastTail bank2 511
   486 draw col %[white]
-    * set :displayStorage:y 165
-    * set :displayStorage:item @copper
   487 label *label335
   488 draw image 10 165 @copper 17 0
-    * op sub :displayStorage:y 165 20
   489 label *label336
-    * set :displayStorage:item @lead
   490 label *label339
   491 draw image 10 145 @lead 17 0
-    * op sub :displayStorage:y 145 20
   492 label *label340
-    * set :displayStorage:item @sand
   493 label *label343
   494 draw image 10 125 @sand 17 0
-    * op sub :displayStorage:y 125 20
   495 label *label344
-    * set :displayStorage:item @coal
   496 label *label347
   497 draw image 10 105 @coal 17 0
-    * op sub :displayStorage:y 105 20
   498 label *label348
-    * set :displayStorage:item @graphite
   499 label *label351
   500 draw image 10 85 @graphite 17 0
-    * op sub :displayStorage:y 85 20
   501 label *label352
-    * set :displayStorage:item @silicon
   502 label *label355
   503 draw image 10 65 @silicon 17 0
-    * op sub :displayStorage:y 65 20
   504 label *label356
-    * set :displayStorage:item @titanium
   505 label *label359
   506 draw image 10 45 @titanium 17 0
-    * op sub :displayStorage:y 45 20
   507 label *label360
-    * set :displayStorage:item @metaglass
   508 label *label363
   509 draw image 10 25 @metaglass 17 0
-    * op sub :displayStorage:y 25 20
   510 label *label364
-    * set :displayStorage:item @thorium
   511 label *label367
   512 draw image 10 5 @thorium 17 0
-    * op sub :displayStorage:y 5 20
   513 label *label368
   514 label *label173
   515 drawflush display1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-3 instructions):
 
   701 set :displayBaseMap:i .recentBuildIndex
   702 jump *label242 lessThan :displayBaseMap:i 0
   703 set .recentBuildIndex -1
-    * readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
+  704 readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
   705 setaddr :drawBlock*retaddr *label244 (h:*label244)
   706 call *label7 *invalid :drawBlock*retval (m:*label244) (h:*label244)
   707 label *label244

Modifications by Inline function 'setupScale' defined at Display.mnd:429:1 (-2 instructions):
 
   581 label *label208
   582 label *label205
   583 draw col %[white]
-    * setaddr :setupScale*retaddr *label210 (h:*label210)
-    * call *label6 *invalid :setupScale*retval (m:*label210) (h:*label210)
-    * label *label210
+  584 label *label372
+  585 draw reset
+  586 draw translate 90 105
+  587 draw scale 7.333333333333333 7.333333333333333
+  588 label *label373
   589 draw image 0 0 @core-shard 6 0
   590 drawflush display1
   591 label *label203
 
   980 label *label275
   981 return :drawHeader*retaddr
   982 end
-    * label *label6
-    * draw reset
-    * draw translate 90 105
-    * draw scale 7.333333333333333 7.333333333333333
-    * label *label314
-    * return :setupScale*retaddr
-    * end
   983 label *label7
   984 read *tmp465 :drawBlock:cfg 1
   985 op sub *tmp466 *tmp465 74
 
  1006 op and *tmp491 .blocksBuilt *tmp490
  1007 jump *label318 equal *tmp491 false
  1008 draw col %[white]
-    * setaddr :setupScale*retaddr *label320 (h:*label320)
-    * call *label6 *invalid :setupScale*retval (m:*label320) (h:*label320)
-    * label *label320
+ 1009 label *label374
+ 1010 draw reset
+ 1011 draw translate 90 105
+ 1012 draw scale 7.333333333333333 7.333333333333333
+ 1013 label *label375
  1014 op mul *tmp493 2 :drawBlock:x
  1015 op mul *tmp494 2 :drawBlock:y
  1016 op mul *tmp495 2 :drawBlock:size
 
  1020 label *label318
  1021 jump *label321 equal .pageSwitched false
  1022 draw color 128 255 128 128
-    * setaddr :setupScale*retaddr *label323 (h:*label323)
-    * call *label6 *invalid :setupScale*retval (m:*label323) (h:*label323)
-    * label *label323
+ 1023 label *label376
+ 1024 draw reset
+ 1025 draw translate 90 105
+ 1026 draw scale 7.333333333333333 7.333333333333333
+ 1027 label *label377
  1028 op mul *tmp498 2 :drawBlock:x
  1029 op mul *tmp499 2 :drawBlock:y
  1030 op mul *tmp500 2 :drawBlock:size

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1011 draw translate 90 105
  1012 draw scale 7.333333333333333 7.333333333333333
  1013 label *label375
-    * op mul *tmp493 2 :drawBlock:x
-    * op mul *tmp494 2 :drawBlock:y
-    * op mul *tmp495 2 :drawBlock:size
-    * op mul *tmp496 90 :drawBlock:rotation
-    * draw image *tmp493 *tmp494 :drawBlock:type *tmp495 *tmp496
+ 1014 op mul *tmp493 2 :unpackCfg:x
+ 1015 op mul *tmp494 2 :unpackCfg:y
+ 1016 op mul *tmp495 2 :unpackCfg:size
+ 1017 op mul *tmp496 90 :unpackCfg:rotation
+ 1018 draw image *tmp493 *tmp494 :unpackCfg:type *tmp495 *tmp496
  1019 jump *label319 always
  1020 label *label318
  1021 jump *label321 equal .pageSwitched false
 
  1025 draw translate 90 105
  1026 draw scale 7.333333333333333 7.333333333333333
  1027 label *label377
-    * op mul *tmp498 2 :drawBlock:x
-    * op mul *tmp499 2 :drawBlock:y
-    * op mul *tmp500 2 :drawBlock:size
-    * op mul *tmp501 90 :drawBlock:rotation
-    * draw image *tmp498 *tmp499 :drawBlock:type *tmp500 *tmp501
+ 1028 op mul *tmp498 2 :unpackCfg:x
+ 1029 op mul *tmp499 2 :unpackCfg:y
+ 1030 op mul *tmp500 2 :unpackCfg:size
+ 1031 op mul *tmp501 90 :unpackCfg:rotation
+ 1032 draw image *tmp498 *tmp499 :unpackCfg:type *tmp500 *tmp501
  1033 label *label321
  1034 label *label322
  1035 label *label319

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-5 instructions):
 
   997 sensor :unpackCfg:size :unpackCfg:type @size
   998 label *label317
   999 label *label316
-    * set :drawBlock:type :unpackCfg:type
-    * set :drawBlock:x :unpackCfg:x
-    * set :drawBlock:y :unpackCfg:y
-    * set :drawBlock:rotation :unpackCfg:rotation
-    * set :drawBlock:size :unpackCfg:size
  1000 op shl *tmp490 1 :unpackCfg:ind
  1001 op and *tmp491 .blocksBuilt *tmp490
  1002 jump *label318 equal *tmp491 false

Modifications by Inline function 'drawBlock' defined at Display.mnd:436:1 (+31 instructions):
 
   697 call *label4 *invalid :drawHeader*retval (m:*label240) (h:*label240)
   698 label *label240
   699 set :drawBlock:cfg :displayBaseMap:cfg
-    * setaddr :drawBlock*retaddr *label241 (h:*label241)
-    * call *label7 *invalid :drawBlock*retval (m:*label241) (h:*label241)
-    * label *label241
+  700 label *label378
+  701 read *tmp465 :drawBlock:cfg 1
+  702 op sub *tmp466 *tmp465 74
+  703 lookup block :unpackCfg:type *tmp466
+  704 read *tmp469 :drawBlock:cfg 2
+  705 op sub *tmp470 *tmp469 74
+  706 op div :unpackCfg:x *tmp470 2
+  707 read *tmp473 :drawBlock:cfg 3
+  708 op sub *tmp474 *tmp473 74
+  709 op div :unpackCfg:y *tmp474 2
+  710 read *tmp477 :drawBlock:cfg 4
+  711 op sub :unpackCfg:rotation *tmp477 74
+  712 read *tmp480 :drawBlock:cfg 5
+  713 op sub :unpackCfg:ind *tmp480 74
+  714 sensor :unpackCfg:size :unpackCfg:type @size
+  715 label *label379
+  716 label *label380
+  717 op shl *tmp490 1 :unpackCfg:ind
+  718 op and *tmp491 .blocksBuilt *tmp490
+  719 jump *label383 equal *tmp491 false
+  720 draw col %[white]
+  721 label *label381
+  722 draw reset
+  723 draw translate 90 105
+  724 draw scale 7.333333333333333 7.333333333333333
+  725 label *label382
+  726 op mul *tmp493 2 :unpackCfg:x
+  727 op mul *tmp494 2 :unpackCfg:y
+  728 op mul *tmp495 2 :unpackCfg:size
+  729 op mul *tmp496 90 :unpackCfg:rotation
+  730 draw image *tmp493 *tmp494 :unpackCfg:type *tmp495 *tmp496
+  731 jump *label388 always
+  732 label *label383
+  733 jump *label386 equal .pageSwitched false
+  734 draw color 128 255 128 128
+  735 label *label384
+  736 draw reset
+  737 draw translate 90 105
+  738 draw scale 7.333333333333333 7.333333333333333
+  739 label *label385
+  740 op mul *tmp498 2 :unpackCfg:x
+  741 op mul *tmp499 2 :unpackCfg:y
+  742 op mul *tmp500 2 :unpackCfg:size
+  743 op mul *tmp501 90 :unpackCfg:rotation
+  744 draw image *tmp498 *tmp499 :unpackCfg:type *tmp500 *tmp501
+  745 label *label386
+  746 label *label387
+  747 label *label388
+  748 label *label389
   749 set :displayBaseMap:i .recentBuildIndex
   750 jump *label242 lessThan :displayBaseMap:i 0
   751 set .recentBuildIndex -1
   752 readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
-    * setaddr :drawBlock*retaddr *label244 (h:*label244)
-    * call *label7 *invalid :drawBlock*retval (m:*label244) (h:*label244)
-    * label *label244
+  753 label *label390
+  754 read *tmp465 :drawBlock:cfg 1
+  755 op sub *tmp466 *tmp465 74
+  756 lookup block :unpackCfg:type *tmp466
+  757 read *tmp469 :drawBlock:cfg 2
+  758 op sub *tmp470 *tmp469 74
+  759 op div :unpackCfg:x *tmp470 2
+  760 read *tmp473 :drawBlock:cfg 3
+  761 op sub *tmp474 *tmp473 74
+  762 op div :unpackCfg:y *tmp474 2
+  763 read *tmp477 :drawBlock:cfg 4
+  764 op sub :unpackCfg:rotation *tmp477 74
+  765 read *tmp480 :drawBlock:cfg 5
+  766 op sub :unpackCfg:ind *tmp480 74
+  767 sensor :unpackCfg:size :unpackCfg:type @size
+  768 label *label391
+  769 label *label392
+  770 op shl *tmp490 1 :unpackCfg:ind
+  771 op and *tmp491 .blocksBuilt *tmp490
+  772 jump *label395 equal *tmp491 false
+  773 draw col %[white]
+  774 label *label393
+  775 draw reset
+  776 draw translate 90 105
+  777 draw scale 7.333333333333333 7.333333333333333
+  778 label *label394
+  779 op mul *tmp493 2 :unpackCfg:x
+  780 op mul *tmp494 2 :unpackCfg:y
+  781 op mul *tmp495 2 :unpackCfg:size
+  782 op mul *tmp496 90 :unpackCfg:rotation
+  783 draw image *tmp493 *tmp494 :unpackCfg:type *tmp495 *tmp496
+  784 jump *label400 always
+  785 label *label395
+  786 jump *label398 equal .pageSwitched false
+  787 draw color 128 255 128 128
+  788 label *label396
+  789 draw reset
+  790 draw translate 90 105
+  791 draw scale 7.333333333333333 7.333333333333333
+  792 label *label397
+  793 op mul *tmp498 2 :unpackCfg:x
+  794 op mul *tmp499 2 :unpackCfg:y
+  795 op mul *tmp500 2 :unpackCfg:size
+  796 op mul *tmp501 90 :unpackCfg:rotation
+  797 draw image *tmp498 *tmp499 :unpackCfg:type *tmp500 *tmp501
+  798 label *label398
+  799 label *label399
+  800 label *label400
+  801 label *label401
   802 label *label242
   803 label *label243
   804 sensor *tmp358 switch1 @enabled
 
  1072 label *label275
  1073 return :drawHeader*retaddr
  1074 end
-    * label *label7
-    * read *tmp465 :drawBlock:cfg 1
-    * op sub *tmp466 *tmp465 74
-    * lookup block :unpackCfg:type *tmp466
-    * read *tmp469 :drawBlock:cfg 2
-    * op sub *tmp470 *tmp469 74
-    * op div :unpackCfg:x *tmp470 2
-    * read *tmp473 :drawBlock:cfg 3
-    * op sub *tmp474 *tmp473 74
-    * op div :unpackCfg:y *tmp474 2
-    * read *tmp477 :drawBlock:cfg 4
-    * op sub :unpackCfg:rotation *tmp477 74
-    * read *tmp480 :drawBlock:cfg 5
-    * op sub :unpackCfg:ind *tmp480 74
-    * sensor :unpackCfg:size :unpackCfg:type @size
-    * label *label317
-    * label *label316
-    * op shl *tmp490 1 :unpackCfg:ind
-    * op and *tmp491 .blocksBuilt *tmp490
-    * jump *label318 equal *tmp491 false
-    * draw col %[white]
-    * label *label374
-    * draw reset
-    * draw translate 90 105
-    * draw scale 7.333333333333333 7.333333333333333
-    * label *label375
-    * op mul *tmp493 2 :unpackCfg:x
-    * op mul *tmp494 2 :unpackCfg:y
-    * op mul *tmp495 2 :unpackCfg:size
-    * op mul *tmp496 90 :unpackCfg:rotation
-    * draw image *tmp493 *tmp494 :unpackCfg:type *tmp495 *tmp496
-    * jump *label319 always
-    * label *label318
-    * jump *label321 equal .pageSwitched false
-    * draw color 128 255 128 128
-    * label *label376
-    * draw reset
-    * draw translate 90 105
-    * draw scale 7.333333333333333 7.333333333333333
-    * label *label377
-    * op mul *tmp498 2 :unpackCfg:x
-    * op mul *tmp499 2 :unpackCfg:y
-    * op mul *tmp500 2 :unpackCfg:size
-    * op mul *tmp501 90 :unpackCfg:rotation
-    * draw image *tmp498 *tmp499 :unpackCfg:type *tmp500 *tmp501
-    * label *label321
-    * label *label322
-    * label *label319
-    * label *label315
-    * return :drawBlock*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   698 label *label240
   699 set :drawBlock:cfg :displayBaseMap:cfg
   700 label *label378
-    * read *tmp465 :drawBlock:cfg 1
+  701 read *tmp465 :displayBaseMap:cfg 1
   702 op sub *tmp466 *tmp465 74
   703 lookup block :unpackCfg:type *tmp466
-    * read *tmp469 :drawBlock:cfg 2
+  704 read *tmp469 :displayBaseMap:cfg 2
   705 op sub *tmp470 *tmp469 74
   706 op div :unpackCfg:x *tmp470 2
-    * read *tmp473 :drawBlock:cfg 3
+  707 read *tmp473 :displayBaseMap:cfg 3
   708 op sub *tmp474 *tmp473 74
   709 op div :unpackCfg:y *tmp474 2
-    * read *tmp477 :drawBlock:cfg 4
+  710 read *tmp477 :displayBaseMap:cfg 4
   711 op sub :unpackCfg:rotation *tmp477 74
-    * read *tmp480 :drawBlock:cfg 5
+  712 read *tmp480 :displayBaseMap:cfg 5
   713 op sub :unpackCfg:ind *tmp480 74
   714 sensor :unpackCfg:size :unpackCfg:type @size
   715 label *label379

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   696 label *label211
   697 call *label4 *invalid :drawHeader*retval (m:*label240) (h:*label240)
   698 label *label240
-    * set :drawBlock:cfg :displayBaseMap:cfg
   699 label *label378
   700 read *tmp465 :displayBaseMap:cfg 1
   701 op sub *tmp466 *tmp465 74

Modifications by Unroll iteration loop at Display.mnd:506:5 (+46 instructions):
 
   522 read :displayStorage:accumulator bank2 .lastTail
   523 op add :displayStorage:x 25 .lastTail
   524 set :displayStorage:y.1 165
-    * setaddr *tmp342 *label188
-    * jump *label185 always
-    * multilabel *label188 (m:marker3)
-    * setaddr *tmp342 *label189
-    * jump *label185 always
-    * multilabel *label189 (m:marker3)
-    * setaddr *tmp342 *label190
-    * jump *label185 always
-    * multilabel *label190 (m:marker3)
-    * setaddr *tmp342 *label191
-    * jump *label185 always
-    * multilabel *label191 (m:marker3)
-    * setaddr *tmp342 *label192
-    * jump *label185 always
-    * multilabel *label192 (m:marker3)
-    * setaddr *tmp342 *label193
-    * jump *label185 always
-    * multilabel *label193 (m:marker3)
-    * setaddr *tmp342 *label194
-    * jump *label185 always
-    * multilabel *label194 (m:marker3)
-    * setaddr *tmp342 *label195
-    * jump *label185 always
-    * multilabel *label195 (m:marker3)
-    * setaddr *tmp342 *label196
-    * label *label185
-    * op and *tmp343 :displayStorage:accumulator 0b11111
-    * op sub :displayStorage:value *tmp343 8
-    * select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
-    * draw col *tmp346
-    * op add *tmp347 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
-    * op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label186
-    * multijump *tmp342 0 0 (m:marker3)
-    * multilabel *label196 (m:marker3)
-    * label *label187
+  525 label *label402
+  526 op and *tmp343 :displayStorage:accumulator 0b11111
+  527 op sub :displayStorage:value *tmp343 8
+  528 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  529 draw col *tmp346
+  530 op add *tmp347 :displayStorage:y.1 :displayStorage:value
+  531 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
+  532 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  533 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  534 label *label403
+  535 label *label406
+  536 op and *tmp343 :displayStorage:accumulator 0b11111
+  537 op sub :displayStorage:value *tmp343 8
+  538 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  539 draw col *tmp346
+  540 op add *tmp347 :displayStorage:y.1 :displayStorage:value
+  541 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
+  542 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  543 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  544 label *label407
+  545 label *label410
+  546 op and *tmp343 :displayStorage:accumulator 0b11111
+  547 op sub :displayStorage:value *tmp343 8
+  548 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  549 draw col *tmp346
+  550 op add *tmp347 :displayStorage:y.1 :displayStorage:value
+  551 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
+  552 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  553 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  554 label *label411
+  555 label *label414
+  556 op and *tmp343 :displayStorage:accumulator 0b11111
+  557 op sub :displayStorage:value *tmp343 8
+  558 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  559 draw col *tmp346
+  560 op add *tmp347 :displayStorage:y.1 :displayStorage:value
+  561 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
+  562 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  563 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  564 label *label415
+  565 label *label418
+  566 op and *tmp343 :displayStorage:accumulator 0b11111
+  567 op sub :displayStorage:value *tmp343 8
+  568 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  569 draw col *tmp346
+  570 op add *tmp347 :displayStorage:y.1 :displayStorage:value
+  571 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
+  572 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  573 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  574 label *label419
+  575 label *label422
+  576 op and *tmp343 :displayStorage:accumulator 0b11111
+  577 op sub :displayStorage:value *tmp343 8
+  578 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  579 draw col *tmp346
+  580 op add *tmp347 :displayStorage:y.1 :displayStorage:value
+  581 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
+  582 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  583 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  584 label *label423
+  585 label *label426
+  586 op and *tmp343 :displayStorage:accumulator 0b11111
+  587 op sub :displayStorage:value *tmp343 8
+  588 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  589 draw col *tmp346
+  590 op add *tmp347 :displayStorage:y.1 :displayStorage:value
+  591 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
+  592 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  593 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  594 label *label427
+  595 label *label430
+  596 op and *tmp343 :displayStorage:accumulator 0b11111
+  597 op sub :displayStorage:value *tmp343 8
+  598 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  599 draw col *tmp346
+  600 op add *tmp347 :displayStorage:y.1 :displayStorage:value
+  601 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
+  602 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  603 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  604 label *label431
+  605 label *label434
+  606 op and *tmp343 :displayStorage:accumulator 0b11111
+  607 op sub :displayStorage:value *tmp343 8
+  608 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  609 draw col *tmp346
+  610 op add *tmp347 :displayStorage:y.1 :displayStorage:value
+  611 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
+  612 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  613 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  614 label *label435
+  615 label *label187
   616 drawflush display1
   617 op add .lastTail .lastTail 1
   618 label *label168

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   527 op sub :displayStorage:value *tmp343 8
   528 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
   529 draw col *tmp346
-    * op add *tmp347 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  530 op add *tmp347 165 :displayStorage:value
+  531 draw line :displayStorage:x 165 :displayStorage:x *tmp347
+  532 op sub :displayStorage:y.1 165 20
   533 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   534 label *label403
   535 label *label406
 
   537 op sub :displayStorage:value *tmp343 8
   538 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
   539 draw col *tmp346
-    * op add *tmp347 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  540 op add *tmp347 145 :displayStorage:value
+  541 draw line :displayStorage:x 145 :displayStorage:x *tmp347
+  542 op sub :displayStorage:y.1 145 20
   543 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   544 label *label407
   545 label *label410
 
   547 op sub :displayStorage:value *tmp343 8
   548 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
   549 draw col *tmp346
-    * op add *tmp347 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  550 op add *tmp347 125 :displayStorage:value
+  551 draw line :displayStorage:x 125 :displayStorage:x *tmp347
+  552 op sub :displayStorage:y.1 125 20
   553 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   554 label *label411
   555 label *label414
 
   557 op sub :displayStorage:value *tmp343 8
   558 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
   559 draw col *tmp346
-    * op add *tmp347 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  560 op add *tmp347 105 :displayStorage:value
+  561 draw line :displayStorage:x 105 :displayStorage:x *tmp347
+  562 op sub :displayStorage:y.1 105 20
   563 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   564 label *label415
   565 label *label418
 
   567 op sub :displayStorage:value *tmp343 8
   568 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
   569 draw col *tmp346
-    * op add *tmp347 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  570 op add *tmp347 85 :displayStorage:value
+  571 draw line :displayStorage:x 85 :displayStorage:x *tmp347
+  572 op sub :displayStorage:y.1 85 20
   573 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   574 label *label419
   575 label *label422
 
   577 op sub :displayStorage:value *tmp343 8
   578 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
   579 draw col *tmp346
-    * op add *tmp347 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  580 op add *tmp347 65 :displayStorage:value
+  581 draw line :displayStorage:x 65 :displayStorage:x *tmp347
+  582 op sub :displayStorage:y.1 65 20
   583 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   584 label *label423
   585 label *label426
 
   587 op sub :displayStorage:value *tmp343 8
   588 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
   589 draw col *tmp346
-    * op add *tmp347 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  590 op add *tmp347 45 :displayStorage:value
+  591 draw line :displayStorage:x 45 :displayStorage:x *tmp347
+  592 op sub :displayStorage:y.1 45 20
   593 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   594 label *label427
   595 label *label430
 
   597 op sub :displayStorage:value *tmp343 8
   598 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
   599 draw col *tmp346
-    * op add *tmp347 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  600 op add *tmp347 25 :displayStorage:value
+  601 draw line :displayStorage:x 25 :displayStorage:x *tmp347
+  602 op sub :displayStorage:y.1 25 20
   603 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   604 label *label431
   605 label *label434
 
   607 op sub :displayStorage:value *tmp343 8
   608 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
   609 draw col *tmp346
-    * op add *tmp347 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
-    * op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  610 op add *tmp347 5 :displayStorage:value
+  611 draw line :displayStorage:x 5 :displayStorage:x *tmp347
+  612 op sub :displayStorage:y.1 5 20
   613 label *label435
   614 label *label187
   615 drawflush display1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-10 instructions):
 
   521 label *label184
   522 read :displayStorage:accumulator bank2 .lastTail
   523 op add :displayStorage:x 25 .lastTail
-    * set :displayStorage:y.1 165
   524 label *label402
   525 op and *tmp343 :displayStorage:accumulator 0b11111
   526 op sub :displayStorage:value *tmp343 8
 
   528 draw col *tmp346
   529 op add *tmp347 165 :displayStorage:value
   530 draw line :displayStorage:x 165 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 165 20
   531 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   532 label *label403
   533 label *label406
 
   537 draw col *tmp346
   538 op add *tmp347 145 :displayStorage:value
   539 draw line :displayStorage:x 145 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 145 20
   540 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   541 label *label407
   542 label *label410
 
   546 draw col *tmp346
   547 op add *tmp347 125 :displayStorage:value
   548 draw line :displayStorage:x 125 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 125 20
   549 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   550 label *label411
   551 label *label414
 
   555 draw col *tmp346
   556 op add *tmp347 105 :displayStorage:value
   557 draw line :displayStorage:x 105 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 105 20
   558 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   559 label *label415
   560 label *label418
 
   564 draw col *tmp346
   565 op add *tmp347 85 :displayStorage:value
   566 draw line :displayStorage:x 85 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 85 20
   567 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   568 label *label419
   569 label *label422
 
   573 draw col *tmp346
   574 op add *tmp347 65 :displayStorage:value
   575 draw line :displayStorage:x 65 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 65 20
   576 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   577 label *label423
   578 label *label426
 
   582 draw col *tmp346
   583 op add *tmp347 45 :displayStorage:value
   584 draw line :displayStorage:x 45 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 45 20
   585 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   586 label *label427
   587 label *label430
 
   591 draw col *tmp346
   592 op add *tmp347 25 :displayStorage:value
   593 draw line :displayStorage:x 25 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 25 20
   594 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   595 label *label431
   596 label *label434
 
   600 draw col *tmp346
   601 op add *tmp347 5 :displayStorage:value
   602 draw line :displayStorage:x 5 :displayStorage:x *tmp347
-    * op sub :displayStorage:y.1 5 20
   603 label *label435
   604 label *label187
   605 drawflush display1

Modifications by Inline function call at Display.mnd:466:9 (+86 instructions):
 
   632 drawflush display1
   633 label *label203
   634 label *label204
-    * setaddr :drawHeader*retaddr *label240 (h:*label240)
   635 set :displayBaseMap:cfg "AJEMJJ-graphite-press0"
   636 setaddr *tmp353 *label214
   637 jump *label211 always
 
   735 set :displayBaseMap:cfg "AÁNBJe-multiplicative-reconstructor27"
   736 setaddr *tmp353 *label239
   737 label *label211
-    * call *label4 *invalid :drawHeader*retval (m:*label240) (h:*label240)
-    * label *label240
+  738 label *label439
+  739 draw reset
+  740 draw color 0 0 32 255
+  741 draw rect 0 217 200 300
+  742 draw col %[gold]
+  743 print "Goal"
+  744 draw print 42 261 @bottom
+  745 label *label440
+  746 label *label441
+  747 print "Goal"
+  748 draw print 43 261 @bottom
+  749 label *label442
+  750 label *label443
+  751 label *label444
+  752 draw col %[white]
+  753 op add :drawHeader:count .nextBlock .nextUnit
+  754 jump *label445 notEqual :drawHeader:count 2
+  755 draw image 27 239 .nextBlock 25 0
+  756 draw image 57 239 .nextUnit 25 0
+  757 jump *label448 always
+  758 label *label445
+  759 jump *label446 notEqual :drawHeader:count 1
+  760 select *tmp421 notEqual .nextBlock null .nextBlock .nextUnit
+  761 draw image 42 237 *tmp421 32 0
+  762 jump *label447 always
+  763 label *label446
+  764 op div *tmp422 @tick 2
+  765 op mod *tmp423 *tmp422 360
+  766 op sub *tmp424 360 *tmp423
+  767 draw image 42 237 @hydrogen 32 *tmp424
+  768 label *label447
+  769 label *label448
+  770 set :drawHeader:tt @second
+  771 read *tmp0 processor1 "time"
+  772 op idiv :drawHeader:t *tmp0 120
+  773 op idiv :drawHeader:m :drawHeader:t 60
+  774 op mod :drawHeader:s :drawHeader:t 60
+  775 select *tmp430 lessThan :drawHeader:s 10 "0" ""
+  776 print :drawHeader:m
+  777 print ":"
+  778 print *tmp430
+  779 print :drawHeader:s
+  780 op mul *tmp431 10 :drawHeader:t
+  781 op div *tmp432 *tmp431 :drawHeader:tt
+  782 op round :drawHeader:ratio *tmp432
+  783 op idiv *tmp434 :drawHeader:ratio 10
+  784 op mod *tmp435 :drawHeader:ratio 10
+  785 print " (x"
+  786 print *tmp434
+  787 print "."
+  788 print *tmp435
+  789 print ")"
+  790 draw print 174 272 @topRight
+  791 label *label449
+  792 label *label450
+  793 jump *label453 equal .titaniumDrill false
+  794 sensor *tmp437 .titaniumDrill @titanium
+  795 op max :drawHeader:count .titaniumDrillCount *tmp437
+  796 op log10 *tmp439 :drawHeader:count
+  797 op floor :drawHeader:len *tmp439
+  798 print "x"
+  799 print :drawHeader:count
+  800 draw print 174 255 @topRight
+  801 label *label451
+  802 label *label452
+  803 op mul *tmp442 7 :drawHeader:len
+  804 op sub *tmp443 154 *tmp442
+  805 draw image *tmp443 246 @titanium 12 0
+  806 label *label453
+  807 label *label454
+  808 jump *label457 equal .thoriumContainer false
+  809 sensor :drawHeader:count .thoriumContainer @thorium
+  810 op log10 *tmp446 :drawHeader:count
+  811 op floor :drawHeader:len.1 *tmp446
+  812 print "x"
+  813 print :drawHeader:count
+  814 draw print 124 255 @topRight
+  815 label *label455
+  816 label *label456
+  817 op mul *tmp449 7 :drawHeader:len.1
+  818 op sub *tmp450 104 *tmp449
+  819 draw image *tmp450 246 @thorium 12 0
+  820 label *label457
+  821 label *label458
+  822 set :drawHeader:x.2 174
+  823 draw col %[white]
+  824 set :drawUnitCount:count .polys
+  825 jump *label461 lessThanEq :drawUnitCount:count 0
+  826 draw image 154 227 @poly 12 0
+  827 print "x"
+  828 print :drawUnitCount:count
+  829 draw print 174 229 @right
+  830 label *label459
+  831 label *label460
+  832 op sub :drawHeader:x.2 174 30
+  833 label *label461
+  834 label *label462
+  835 label *label463
+  836 set :drawUnitCount.1:count .monos
+  837 jump *label466 lessThanEq :drawUnitCount.1:count 0
+  838 op sub *tmp456 :drawHeader:x.2 20
+  839 draw image *tmp456 227 @mono 12 0
+  840 print "x"
+  841 print :drawUnitCount.1:count
+  842 draw print :drawHeader:x.2 229 @right
+  843 label *label464
+  844 label *label465
+  845 op sub :drawHeader:x.2 :drawHeader:x.2 30
+  846 label *label466
+  847 label *label467
+  848 label *label468
+  849 set :drawUnitCount.2:count .flares
+  850 jump *label471 lessThanEq :drawUnitCount.2:count 0
+  851 op sub *tmp459 :drawHeader:x.2 20
+  852 draw image *tmp459 227 @flare 12 0
+  853 print "x"
+  854 print :drawUnitCount.2:count
+  855 draw print :drawHeader:x.2 229 @right
+  856 label *label469
+  857 label *label470
+  858 label *label471
+  859 label *label472
+  860 label *label473
+  861 label *label474
   862 label *label378
   863 read *tmp465 :displayBaseMap:cfg 1
   864 op sub *tmp466 *tmp465 74

Modifications by Unroll iteration loop at Display.mnd:253:13 (+25 instructions):
 
   210 label *label60
   211 jump *label50 always
   212 label *label49
-    * set :drawMaterials:item @lead
-    * set :drawMaterials:target :drawMaterials:targetFactoryLead
-    * setaddr *tmp183 *label82
-    * jump *label79 always
-    * multilabel *label82 (m:marker0)
-    * set :drawMaterials:item @silicon
-    * set :drawMaterials:target :drawMaterials:targetFactorySilicon
-    * setaddr *tmp183 *label83
-    * label *label79
-    * jump *label84 lessThanEq :drawMaterials:target 0
-    * sensor *tmp186 A¾BFLX-air-factory14 :drawMaterials:item
-    * set :drawItem.3:y :drawMaterials:y
-    * op mul *tmp191 122 *tmp186
-    * op div *tmp192 *tmp191 :drawMaterials:target
-    * op min :drawItem.3:length 122 *tmp192
-    * op mul *tmp195 :drawMaterials:col 88
-    * op add :drawItem.3:iconX 11 *tmp195
-    * op add :drawItem.3:barX 22 *tmp195
-    * op add :drawItem.3:textX 170 *tmp195
-    * draw col %[white]
-    * op add *tmp203 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp203 :drawMaterials:item 16 0
-    * draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
-    * draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
-    * op add *tmp205 :drawMaterials:y 7
-    * print :drawMaterials:target
-    * draw print :drawItem.3:textX *tmp205 @right
-    * label *label89
-    * label *label88
-    * op add :drawText.9:x *tmp195 171
-    * print :drawMaterials:target
-    * draw print :drawText.9:x *tmp205 @right
-    * label *label91
-    * label *label90
-    * label *label87
-    * op add :drawItem.3:col :drawMaterials:col 1
-    * jump *label92 lessThan :drawItem.3:col 1
-    * set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawMaterials:y 15
-    * label *label92
-    * label *label93
-    * label *label86
-    * set :drawMaterials:col :drawItem.3:col
-    * set :drawMaterials:y :drawItem.3:y
-    * label *label84
-    * label *label85
-    * label *label80
-    * multijump *tmp183 0 0 (m:marker0)
-    * multilabel *label83 (m:marker0)
-    * label *label81
+  213 set :drawMaterials:item @lead
+  214 set :drawMaterials:target :drawMaterials:targetFactoryLead
+  215 label *label475
+  216 jump *label484 lessThanEq :drawMaterials:target 0
+  217 sensor *tmp186 A¾BFLX-air-factory14 :drawMaterials:item
+  218 set :drawItem.3:y :drawMaterials:y
+  219 op mul *tmp191 122 *tmp186
+  220 op div *tmp192 *tmp191 :drawMaterials:target
+  221 op min :drawItem.3:length 122 *tmp192
+  222 op mul *tmp195 :drawMaterials:col 88
+  223 op add :drawItem.3:iconX 11 *tmp195
+  224 op add :drawItem.3:barX 22 *tmp195
+  225 op add :drawItem.3:textX 170 *tmp195
+  226 draw col %[white]
+  227 op add *tmp203 :drawMaterials:y 5
+  228 draw image :drawItem.3:iconX *tmp203 :drawMaterials:item 16 0
+  229 draw color 0 128 0 255
+  230 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  231 draw color 0 255 0 255
+  232 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  233 op add *tmp205 :drawMaterials:y 7
+  234 print :drawMaterials:target
+  235 draw print :drawItem.3:textX *tmp205 @right
+  236 label *label476
+  237 label *label477
+  238 op add :drawText.9:x *tmp195 171
+  239 print :drawMaterials:target
+  240 draw print :drawText.9:x *tmp205 @right
+  241 label *label478
+  242 label *label479
+  243 label *label480
+  244 op add :drawItem.3:col :drawMaterials:col 1
+  245 jump *label481 lessThan :drawItem.3:col 1
+  246 set :drawItem.3:col 0
+  247 op sub :drawItem.3:y :drawMaterials:y 15
+  248 label *label481
+  249 label *label482
+  250 label *label483
+  251 set :drawMaterials:col :drawItem.3:col
+  252 set :drawMaterials:y :drawItem.3:y
+  253 label *label484
+  254 label *label485
+  255 label *label486
+  256 set :drawMaterials:item @silicon
+  257 set :drawMaterials:target :drawMaterials:targetFactorySilicon
+  258 label *label489
+  259 jump *label498 lessThanEq :drawMaterials:target 0
+  260 sensor *tmp186 A¾BFLX-air-factory14 :drawMaterials:item
+  261 set :drawItem.3:y :drawMaterials:y
+  262 op mul *tmp191 122 *tmp186
+  263 op div *tmp192 *tmp191 :drawMaterials:target
+  264 op min :drawItem.3:length 122 *tmp192
+  265 op mul *tmp195 :drawMaterials:col 88
+  266 op add :drawItem.3:iconX 11 *tmp195
+  267 op add :drawItem.3:barX 22 *tmp195
+  268 op add :drawItem.3:textX 170 *tmp195
+  269 draw col %[white]
+  270 op add *tmp203 :drawMaterials:y 5
+  271 draw image :drawItem.3:iconX *tmp203 :drawMaterials:item 16 0
+  272 draw color 0 128 0 255
+  273 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  274 draw color 0 255 0 255
+  275 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  276 op add *tmp205 :drawMaterials:y 7
+  277 print :drawMaterials:target
+  278 draw print :drawItem.3:textX *tmp205 @right
+  279 label *label490
+  280 label *label491
+  281 op add :drawText.9:x *tmp195 171
+  282 print :drawMaterials:target
+  283 draw print :drawText.9:x *tmp205 @right
+  284 label *label492
+  285 label *label493
+  286 label *label494
+  287 op add :drawItem.3:col :drawMaterials:col 1
+  288 jump *label495 lessThan :drawItem.3:col 1
+  289 set :drawItem.3:col 0
+  290 op sub :drawItem.3:y :drawMaterials:y 15
+  291 label *label495
+  292 label *label496
+  293 label *label497
+  294 set :drawMaterials:col :drawItem.3:col
+  295 set :drawMaterials:y :drawItem.3:y
+  296 label *label498
+  297 label *label499
+  298 label *label500
+  299 label *label81
   300 label *label50
   301 jump *label35 always
   302 label *label34

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
   213 set :drawMaterials:item @lead
   214 set :drawMaterials:target :drawMaterials:targetFactoryLead
   215 label *label475
-    * jump *label484 lessThanEq :drawMaterials:target 0
-    * sensor *tmp186 A¾BFLX-air-factory14 :drawMaterials:item
-    * set :drawItem.3:y :drawMaterials:y
+  216 jump *label484 lessThanEq :drawMaterials:targetFactoryLead 0
+  217 sensor *tmp186 A¾BFLX-air-factory14 @lead
+  218 set :drawItem.3:y 190
   219 op mul *tmp191 122 *tmp186
-    * op div *tmp192 *tmp191 :drawMaterials:target
+  220 op div *tmp192 *tmp191 :drawMaterials:targetFactoryLead
   221 op min :drawItem.3:length 122 *tmp192
-    * op mul *tmp195 :drawMaterials:col 88
-    * op add :drawItem.3:iconX 11 *tmp195
-    * op add :drawItem.3:barX 22 *tmp195
-    * op add :drawItem.3:textX 170 *tmp195
+  222 op mul *tmp195 0 88
+  223 op add :drawItem.3:iconX 11 0
+  224 op add :drawItem.3:barX 22 0
+  225 op add :drawItem.3:textX 170 0
   226 draw col %[white]
-    * op add *tmp203 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp203 :drawMaterials:item 16 0
+  227 op add *tmp203 190 5
+  228 draw image 11 195 @lead 16 0
   229 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  230 draw rect 22 190 :drawItem.3:length 10
   231 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
-    * op add *tmp205 :drawMaterials:y 7
-    * print :drawMaterials:target
-    * draw print :drawItem.3:textX *tmp205 @right
+  232 draw lineRect 22 190 122 10
+  233 op add *tmp205 190 7
+  234 print :drawMaterials:targetFactoryLead
+  235 draw print 170 197 @right
   236 label *label476
   237 label *label477
-    * op add :drawText.9:x *tmp195 171
-    * print :drawMaterials:target
-    * draw print :drawText.9:x *tmp205 @right
+  238 op add :drawText.9:x 0 171
+  239 print :drawMaterials:targetFactoryLead
+  240 draw print 171 197 @right
   241 label *label478
   242 label *label479
   243 label *label480
-    * op add :drawItem.3:col :drawMaterials:col 1
-    * jump *label481 lessThan :drawItem.3:col 1
+  244 op add :drawItem.3:col 0 1
+  245 jump *label481 lessThan 1 1
   246 set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawMaterials:y 15
+  247 op sub :drawItem.3:y 190 15
   248 label *label481
   249 label *label482
   250 label *label483
-    * set :drawMaterials:col :drawItem.3:col
-    * set :drawMaterials:y :drawItem.3:y
+  251 set :drawMaterials:col 0
+  252 set :drawMaterials:y 175
   253 label *label484
   254 label *label485
   255 label *label486
   256 set :drawMaterials:item @silicon
   257 set :drawMaterials:target :drawMaterials:targetFactorySilicon
   258 label *label489
-    * jump *label498 lessThanEq :drawMaterials:target 0
-    * sensor *tmp186 A¾BFLX-air-factory14 :drawMaterials:item
+  259 jump *label498 lessThanEq :drawMaterials:targetFactorySilicon 0
+  260 sensor *tmp186 A¾BFLX-air-factory14 @silicon
   261 set :drawItem.3:y :drawMaterials:y
   262 op mul *tmp191 122 *tmp186
-    * op div *tmp192 *tmp191 :drawMaterials:target
+  263 op div *tmp192 *tmp191 :drawMaterials:targetFactorySilicon
   264 op min :drawItem.3:length 122 *tmp192
   265 op mul *tmp195 :drawMaterials:col 88
   266 op add :drawItem.3:iconX 11 *tmp195
 
   268 op add :drawItem.3:textX 170 *tmp195
   269 draw col %[white]
   270 op add *tmp203 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp203 :drawMaterials:item 16 0
+  271 draw image :drawItem.3:iconX *tmp203 @silicon 16 0
   272 draw color 0 128 0 255
   273 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
   274 draw color 0 255 0 255
   275 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
   276 op add *tmp205 :drawMaterials:y 7
-    * print :drawMaterials:target
+  277 print :drawMaterials:targetFactorySilicon
   278 draw print :drawItem.3:textX *tmp205 @right
   279 label *label490
   280 label *label491
   281 op add :drawText.9:x *tmp195 171
-    * print :drawMaterials:target
+  282 print :drawMaterials:targetFactorySilicon
   283 draw print :drawText.9:x *tmp205 @right
   284 label *label492
   285 label *label493
 
   291 label *label495
   292 label *label496
   293 label *label497
-    * set :drawMaterials:col :drawItem.3:col
-    * set :drawMaterials:y :drawItem.3:y
   294 label *label498
   295 label *label499
   296 label *label500

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-18 instructions):
 
   210 label *label60
   211 jump *label50 always
   212 label *label49
-    * set :drawMaterials:item @lead
-    * set :drawMaterials:target :drawMaterials:targetFactoryLead
   213 label *label475
   214 jump *label484 lessThanEq :drawMaterials:targetFactoryLead 0
   215 sensor *tmp186 A¾BFLX-air-factory14 @lead
-    * set :drawItem.3:y 190
   216 op mul *tmp191 122 *tmp186
   217 op div *tmp192 *tmp191 :drawMaterials:targetFactoryLead
   218 op min :drawItem.3:length 122 *tmp192
-    * op mul *tmp195 0 88
-    * op add :drawItem.3:iconX 11 0
-    * op add :drawItem.3:barX 22 0
-    * op add :drawItem.3:textX 170 0
   219 draw col %[white]
-    * op add *tmp203 190 5
   220 draw image 11 195 @lead 16 0
   221 draw color 0 128 0 255
   222 draw rect 22 190 :drawItem.3:length 10
   223 draw color 0 255 0 255
   224 draw lineRect 22 190 122 10
-    * op add *tmp205 190 7
   225 print :drawMaterials:targetFactoryLead
   226 draw print 170 197 @right
   227 label *label476
   228 label *label477
-    * op add :drawText.9:x 0 171
   229 print :drawMaterials:targetFactoryLead
   230 draw print 171 197 @right
   231 label *label478
   232 label *label479
   233 label *label480
-    * op add :drawItem.3:col 0 1
   234 jump *label481 lessThan 1 1
-    * set :drawItem.3:col 0
-    * op sub :drawItem.3:y 190 15
   235 label *label481
   236 label *label482
   237 label *label483
 
   240 label *label484
   241 label *label485
   242 label *label486
-    * set :drawMaterials:item @silicon
-    * set :drawMaterials:target :drawMaterials:targetFactorySilicon
   243 label *label489
   244 jump *label498 lessThanEq :drawMaterials:targetFactorySilicon 0
   245 sensor *tmp186 A¾BFLX-air-factory14 @silicon
-    * set :drawItem.3:y :drawMaterials:y
   246 op mul *tmp191 122 *tmp186
   247 op div *tmp192 *tmp191 :drawMaterials:targetFactorySilicon
   248 op min :drawItem.3:length 122 *tmp192
-    * op mul *tmp195 :drawMaterials:col 88
-    * op add :drawItem.3:iconX 11 *tmp195
-    * op add :drawItem.3:barX 22 *tmp195
-    * op add :drawItem.3:textX 170 *tmp195
+  249 op mul *tmp195 0 88
+  250 op add :drawItem.3:iconX 11 0
+  251 op add :drawItem.3:barX 22 0
+  252 op add :drawItem.3:textX 170 0
   253 draw col %[white]
   254 op add *tmp203 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp203 @silicon 16 0
+  255 draw image 11 *tmp203 @silicon 16 0
   256 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  257 draw rect 22 :drawMaterials:y :drawItem.3:length 10
   258 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  259 draw lineRect 22 :drawMaterials:y 122 10
   260 op add *tmp205 :drawMaterials:y 7
   261 print :drawMaterials:targetFactorySilicon
-    * draw print :drawItem.3:textX *tmp205 @right
+  262 draw print 170 *tmp205 @right
   263 label *label490
   264 label *label491
-    * op add :drawText.9:x *tmp195 171
+  265 op add :drawText.9:x 0 171
   266 print :drawMaterials:targetFactorySilicon
-    * draw print :drawText.9:x *tmp205 @right
+  267 draw print 171 *tmp205 @right
   268 label *label492
   269 label *label493
   270 label *label494
-    * op add :drawItem.3:col :drawMaterials:col 1
-    * jump *label495 lessThan :drawItem.3:col 1
-    * set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawMaterials:y 15
+  271 op add :drawItem.3:col 0 1
+  272 jump *label495 lessThan 1 1
   273 label *label495
   274 label *label496
   275 label *label497

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-7 instructions):
 
   235 label *label481
   236 label *label482
   237 label *label483
-    * set :drawMaterials:col 0
   238 set :drawMaterials:y 175
   239 label *label484
   240 label *label485
 
   245 op mul *tmp191 122 *tmp186
   246 op div *tmp192 *tmp191 :drawMaterials:targetFactorySilicon
   247 op min :drawItem.3:length 122 *tmp192
-    * op mul *tmp195 0 88
-    * op add :drawItem.3:iconX 11 0
-    * op add :drawItem.3:barX 22 0
-    * op add :drawItem.3:textX 170 0
   248 draw col %[white]
   249 op add *tmp203 :drawMaterials:y 5
   250 draw image 11 *tmp203 @silicon 16 0
 
   257 draw print 170 *tmp205 @right
   258 label *label490
   259 label *label491
-    * op add :drawText.9:x 0 171
   260 print :drawMaterials:targetFactorySilicon
   261 draw print 171 *tmp205 @right
   262 label *label492
   263 label *label493
   264 label *label494
-    * op add :drawItem.3:col 0 1
   265 jump *label495 lessThan 1 1
   266 label *label495
   267 label *label496

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-2 instructions):
 
   231 label *label478
   232 label *label479
   233 label *label480
-    * jump *label481 lessThan 1 1
   234 label *label481
   235 label *label482
   236 label *label483
 
   261 label *label492
   262 label *label493
   263 label *label494
-    * jump *label495 lessThan 1 1
   264 label *label495
   265 label *label496
   266 label *label497

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-1 instructions):
 
  1037 jump *label263 lessThanEq :displayRecord:id @blockCount
  1038 op sub *tmp389 :displayRecord:id @blockCount
  1039 lookup unit *tmp388 *tmp389
-    * jump *label263 always
  1040 label *label263
  1041 op div *tmp392 :displayLog:record 1000
  1042 op idiv :displayRecord:t *tmp392 120

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   426 jump *label146 notEqual .transportItem null
   427 op sub *tmp276 *tmp272 15
   428 set :drawItem.6:target .transportTarget
-    * op div *tmp282 0 :drawItem.6:target
+  429 set *tmp282 0
   430 op min :drawItem.6:length 122 *tmp282
   431 draw col %[white]
   432 op sub *tmp293 *tmp272 10

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
   425 label *label141
   426 jump *label146 notEqual .transportItem null
   427 op sub *tmp276 *tmp272 15
-    * set :drawItem.6:target .transportTarget
   428 set *tmp282 0
-    * op min :drawItem.6:length 122 *tmp282
+  429 op min :drawItem.6:length 122 0
   430 draw col %[white]
   431 op sub *tmp293 *tmp272 10
   432 draw image 11 *tmp293 @poly 16 0
   433 draw color 0 128 0 255
-    * draw rect 22 *tmp276 :drawItem.6:length 10
+  434 draw rect 22 *tmp276 0 10
   435 draw color 0 255 0 255
   436 draw lineRect 22 *tmp276 122 10
   437 op sub *tmp295 *tmp272 8

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-2 instructions):
 
   425 label *label141
   426 jump *label146 notEqual .transportItem null
   427 op sub *tmp276 *tmp272 15
-    * set *tmp282 0
-    * op min :drawItem.6:length 122 0
   428 draw col %[white]
   429 op sub *tmp293 *tmp272 10
   430 draw image 11 *tmp293 @poly 16 0

Modifications by Virtual Instruction Expansion (+1 instructions):
 
   914 set :displayBaseMap:i .recentBuildIndex
   915 jump *label242 lessThan :displayBaseMap:i 0
   916 set .recentBuildIndex -1
-    * readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
+  917 op mul *tmp914 :displayBaseMap:i 2
+  918 multijump *label505 *tmp914 0 (m:marker5)
+  919 multilabel *label505 (m:marker5)
+  920 set :drawBlock:cfg "AJEMJJ-graphite-press0"
+  921 jump *label504 always
+  922 multilabel *label506 (m:marker5)
+  923 set :drawBlock:cfg "AJTJK-battery1"
+  924 jump *label504 always
+  925 multilabel *label507 (m:marker5)
+  926 set :drawBlock:cfg "ALTJL-battery2"
+  927 jump *label504 always
+  928 multilabel *label508 (m:marker5)
+  929 set :drawBlock:cfg "AJRJM-combustion-generator3"
+  930 jump *label504 always
+  931 multilabel *label509 (m:marker5)
+  932 set :drawBlock:cfg "ALMQJN-silicon-smelter4"
+  933 jump *label504 always
+  934 multilabel *label510 (m:marker5)
+  935 set :drawBlock:cfg "A{LNJO-inverted-sorter5"
+  936 jump *label504 always
+  937 multilabel *label511 (m:marker5)
+  938 set :drawBlock:cfg "A©JNJP-unloader6"
+  939 jump *label504 always
+  940 multilabel *label512 (m:marker5)
+  941 set :drawBlock:cfg "A{HNJQ-inverted-sorter7"
+  942 jump *label504 always
+  943 multilabel *label513 (m:marker5)
+  944 set :drawBlock:cfg "AJPJR-underflow-gate8"
+  945 jump *label504 always
+  946 multilabel *label514 (m:marker5)
+  947 set :drawBlock:cfg "AÕFDJS-micro-processor9"
+  948 jump *label504 always
+  949 multilabel *label515 (m:marker5)
+  950 set :drawBlock:cfg "AFFJT-power-node10"
+  951 jump *label504 always
+  952 multilabel *label516 (m:marker5)
+  953 set :drawBlock:cfg "A©FHJU-unloader11"
+  954 jump *label504 always
+  955 multilabel *label517 (m:marker5)
+  956 set :drawBlock:cfg "A~FJJV-overflow-gate12"
+  957 jump *label504 always
+  958 multilabel *label518 (m:marker5)
+  959 set :drawBlock:cfg "A~DJJW-overflow-gate13"
+  960 jump *label504 always
+  961 multilabel *label519 (m:marker5)
+  962 set :drawBlock:cfg "A¾BFLX-air-factory14"
+  963 jump *label504 always
+  964 multilabel *label520 (m:marker5)
+  965 set :drawBlock:cfg "A©NHJY-unloader15"
+  966 jump *label504 always
+  967 multilabel *label521 (m:marker5)
+  968 set :drawBlock:cfg "A{NJJZ-inverted-sorter16"
+  969 jump *label504 always
+  970 multilabel *label522 (m:marker5)
+  971 set :drawBlock:cfg "ANOMJ[-kiln17"
+  972 jump *label504 always
+  973 multilabel *label523 (m:marker5)
+  974 set :drawBlock:cfg "A¡AOJ\-water-extractor18"
+  975 jump *label504 always
+  976 multilabel *label524 (m:marker5)
+  977 set :drawBlock:cfg "AAKJ^-steam-generator20"
+  978 jump *label504 always
+  979 multilabel *label525 (m:marker5)
+  980 set :drawBlock:cfg "ALQIJ_-silicon-smelter21"
+  981 jump *label504 always
+  982 multilabel *label526 (m:marker5)
+  983 set :drawBlock:cfg "AKFRJa-multi-press23"
+  984 jump *label504 always
+  985 multilabel *label527 (m:marker5)
+  986 set :drawBlock:cfg "A©HFJb-unloader24"
+  987 jump *label504 always
+  988 multilabel *label528 (m:marker5)
+  989 set :drawBlock:cfg "A{HDJc-inverted-sorter25"
+  990 jump *label504 always
+  991 multilabel *label529 (m:marker5)
+  992 set :drawBlock:cfg "AÀF@Ld-additive-reconstructor26"
+  993 jump *label504 always
+  994 multilabel *label530 (m:marker5)
+  995 set :drawBlock:cfg "AÁNBJe-multiplicative-reconstructor27"
+  996 jump *label504 always
+  997 label *label504
   998 label *label390
   999 read *tmp465 :drawBlock:cfg 1
  1000 op sub *tmp466 *tmp465 74

Modifications by Iterated phase, Single Step Elimination, pass 4, iteration 1 (-1 instructions):
 
   993 jump *label504 always
   994 multilabel *label530 (m:marker5)
   995 set :drawBlock:cfg "AÁNBJe-multiplicative-reconstructor27"
-    * jump *label504 always
   996 label *label504
   997 label *label390
   998 read *tmp465 :drawBlock:cfg 1

Modifications by Jumps phase, Jump Normalization, pass 6, iteration 1:
 
    19 label *label13
    20 ubind @poly
    21 ulocate building core false @copper *tmp42 *tmp43 *tmp44 .core
-    * label *label14
    22 jump *label13 equal .core null
-    * label *label15
    23 printflush null
    24 drawflush null
    25 label *label16
 
    28 set .factoryProgress 0
    29 set .unitReset false
    30 label *label19
-    * label *label20
    31 jump *label21 notEqual .page 0
    32 jump *label23 lessThanEq .megas 0
    33 jump *label26 greaterThanEq .animation 0
 
    46 op mul *tmp60 *tmp59 42
    47 op mul *tmp61 :animate:ratio 88
    48 op add *tmp58 *tmp60 *tmp61
-    * label *label28
    49 op mul *tmp65 *tmp59 237
    50 op add *tmp63 *tmp65 *tmp61
-    * label *label29
    51 op mul *tmp70 *tmp59 32
    52 op mul *tmp71 :animate:ratio 168
    53 op add *tmp68 *tmp70 *tmp71
-    * label *label30
    54 draw image *tmp58 *tmp63 @mega *tmp68 0
    55 drawflush display1
    56 op add .animation .animation 1
-    * label *label25
    57 jump *label24 always
    58 label *label23
    59 draw clear 0 0 32
 
   115 op greaterThan *tmp106 :drawMaterials:multiReconstructorProgress 0
   116 op max .reconstructorProgress .reconstructorProgress *tmp106
   117 label *label42
-    * label *label43
   118 label *label41
   119 label *label39
   120 label *label37
   121 print "Unit factories"
   122 draw print 22 205 @bottomLeft
-    * label *label46
-    * label *label45
   123 print "Unit factories"
   124 draw print 23 205 @bottomLeft
-    * label *label48
-    * label *label47
-    * label *label44
   125 jump *label49 lessThanEq .factoryProgress 0
   126 op mul *tmp115 122 .factoryProgress
   127 op min :drawItem:length 122 *tmp115
 
   135 print "/"
   136 print :drawMaterials:unitTotal1
   137 draw print 170 197 @right
-    * label *label54
-    * label *label53
   138 print :drawMaterials:unitCount1
   139 print "/"
   140 print :drawMaterials:unitTotal1
   141 draw print 171 197 @right
-    * label *label56
-    * label *label55
-    * label *label52
-    * label *label51
   142 jump *label59 equal :drawMaterials:unit2 null
   143 op mul *tmp139 122 .reconstructorProgress
   144 op min :drawItem.1:length 122 *tmp139
 
   152 print "/"
   153 print :drawMaterials:unitTotal2
   154 draw print 170 182 @right
-    * label *label64
-    * label *label63
   155 print :drawMaterials:unitCount2
   156 print "/"
   157 print :drawMaterials:unitTotal2
   158 draw print 171 182 @right
-    * label *label66
-    * label *label65
-    * label *label62
-    * label *label61
   159 jump *label69 equal :drawMaterials:unit3 null
   160 op mul *tmp163 122 :drawMaterials:multiReconstructorProgress
   161 op min :drawItem.2:length 122 *tmp163
 
   169 print "/"
   170 print .megaTarget
   171 draw print 170 167 @right
-    * label *label74
-    * label *label73
   172 print .megas
   173 print "/"
   174 print .megaTarget
   175 draw print 171 167 @right
-    * label *label76
-    * label *label75
-    * label *label72
-    * label *label71
   176 label *label69
-    * label *label70
   177 label *label59
-    * label *label60
   178 jump *label50 always
   179 label *label49
-    * label *label475
   180 jump *label484 lessThanEq :drawMaterials:targetFactoryLead 0
   181 sensor *tmp186 A¾BFLX-air-factory14 @lead
   182 op mul *tmp191 122 *tmp186
 
   190 draw lineRect 22 190 122 10
   191 print :drawMaterials:targetFactoryLead
   192 draw print 170 197 @right
-    * label *label476
-    * label *label477
   193 print :drawMaterials:targetFactoryLead
   194 draw print 171 197 @right
-    * label *label478
-    * label *label479
-    * label *label480
-    * label *label481
-    * label *label482
-    * label *label483
   195 set :drawMaterials:y 175
   196 label *label484
-    * label *label485
-    * label *label486
-    * label *label489
   197 jump *label498 lessThanEq :drawMaterials:targetFactorySilicon 0
   198 sensor *tmp186 A¾BFLX-air-factory14 @silicon
   199 op mul *tmp191 122 *tmp186
 
   209 op add *tmp205 :drawMaterials:y 7
   210 print :drawMaterials:targetFactorySilicon
   211 draw print 170 *tmp205 @right
-    * label *label490
-    * label *label491
   212 print :drawMaterials:targetFactorySilicon
   213 draw print 171 *tmp205 @right
-    * label *label492
-    * label *label493
-    * label *label494
-    * label *label495
-    * label *label496
-    * label *label497
   214 label *label498
-    * label *label499
-    * label *label500
-    * label *label81
   215 label *label50
   216 jump *label35 always
   217 label *label34
 
   222 read *tmp213 processor3 ".mapAction"
   223 print *tmp213
   224 draw print 22 205 @bottomLeft
-    * label *label98
-    * label *label97
   225 read *tmp215 processor3 ".mapAction"
   226 print *tmp215
   227 draw print 23 205 @bottomLeft
-    * label *label100
-    * label *label99
-    * label *label96
   228 read :drawItem.4:current processor3 ".mapProgress"
   229 read :drawItem.4:target processor3 ".mapTotal"
   230 op mul *tmp220 122 :drawItem.4:current
 
   240 read *tmp235 processor3 ".mapSpots"
   241 print *tmp235
   242 draw print 170 197 @right
-    * label *label104
-    * label *label103
   243 print "x"
   244 read *tmp237 processor3 ".mapSpots"
   245 print *tmp237
   246 draw print 171 197 @right
-    * label *label106
-    * label *label105
-    * label *label102
-    * label *label101
   247 jump *label95 always
   248 label *label94
   249 set .materialCount .totalTargets
   250 set :drawMaterials:count .materialCount
   251 print "Materials"
   252 draw print 22 205 @bottomLeft
-    * label *label111
-    * label *label110
   253 print "Materials"
   254 draw print 23 205 @bottomLeft
-    * label *label113
-    * label *label112
-    * label *label109
   255 jump *label114 equal .materialCount false
   256 set :drawMaterials:item.1 @copper
   257 set :drawMaterials:target.1 .targetCopper
 
   307 op add *tmp265 :drawMaterials:y 7
   308 print :drawMaterials:target.1
   309 draw print :drawItem.5:textX *tmp265 @right
-    * label *label131
-    * label *label130
   310 op add :drawText.17:x *tmp255 171
   311 print :drawMaterials:target.1
   312 draw print :drawText.17:x *tmp265 @right
-    * label *label133
-    * label *label132
-    * label *label129
   313 op add :drawItem.5:col :drawMaterials:col 1
   314 jump *label134 lessThan :drawItem.5:col 1
   315 set :drawItem.5:col 0
   316 op sub :drawItem.5:y :drawMaterials:y 15
   317 label *label134
-    * label *label135
-    * label *label128
   318 set :drawMaterials:col :drawItem.5:col
   319 set :drawMaterials:y :drawItem.5:y
   320 op sub :drawMaterials:count :drawMaterials:count 1
   321 jump *label136 greaterThan :drawMaterials:count 0
   322 jump *label118 always
   323 label *label136
-    * label *label137
   324 label *label126
-    * label *label127
-    * label *label117
   325 multijump *tmp243 0 0 (m:marker1)
   326 multilabel *label125 (m:marker1)
   327 label *label118
   328 label *label114
-    * label *label115
   329 label *label95
   330 label *label35
-    * label *label33
   331 draw col %[white]
   332 select *tmp272 lessThan .materialCount 4 140 125
   333 print "Builder"
   334 draw print 22 *tmp272 @bottomLeft
-    * label *label143
-    * label *label142
   335 print "Builder"
   336 draw print 23 *tmp272 @bottomLeft
-    * label *label145
-    * label *label144
-    * label *label141
   337 jump *label146 notEqual .transportItem null
   338 op sub *tmp276 *tmp272 15
   339 draw col %[white]
 
   346 op sub *tmp295 *tmp272 8
   347 print .transportTarget
   348 draw print 170 *tmp295 @right
-    * label *label152
-    * label *label151
   349 print .transportTarget
   350 draw print 171 *tmp295 @right
-    * label *label154
-    * label *label153
-    * label *label150
-    * label *label149
-    * label *label148
   351 jump *label147 always
   352 label *label146
   353 sensor :drawUnit:unitItem @unit @firstItem
 
   370 op sub *tmp324 *tmp272 8
   371 print .transportTarget
   372 draw print 170 *tmp324 @right
-    * label *label161
-    * label *label160
   373 print .transportTarget
   374 draw print 171 *tmp324 @right
-    * label *label163
-    * label *label162
-    * label *label159
-    * label *label158
-    * label *label157
   375 label *label147
-    * label *label138
   376 drawflush display1
-    * label *label31
   377 label *label24
   378 jump *label22 always
   379 label *label21
 
   382 jump *label169 equal .pageSwitched false
   383 read .lastTail bank2 511
   384 draw col %[white]
-    * label *label335
   385 draw image 10 165 @copper 17 0
-    * label *label336
-    * label *label339
   386 draw image 10 145 @lead 17 0
-    * label *label340
-    * label *label343
   387 draw image 10 125 @sand 17 0
-    * label *label344
-    * label *label347
   388 draw image 10 105 @coal 17 0
-    * label *label348
-    * label *label351
   389 draw image 10 85 @graphite 17 0
-    * label *label352
-    * label *label355
   390 draw image 10 65 @silicon 17 0
-    * label *label356
-    * label *label359
   391 draw image 10 45 @titanium 17 0
-    * label *label360
-    * label *label363
   392 draw image 10 25 @metaglass 17 0
-    * label *label364
-    * label *label367
   393 draw image 10 5 @thorium 17 0
-    * label *label368
-    * label *label173
   394 drawflush display1
   395 label *label169
-    * label *label170
   396 jump *label183 lessThanEq .lastTail :displayStorage:tail
   397 jump *label168 always
   398 label *label183
-    * label *label184
   399 read :displayStorage:accumulator bank2 .lastTail
   400 op add :displayStorage:x 25 .lastTail
-    * label *label402
   401 op and *tmp343 :displayStorage:accumulator 0b11111
   402 op sub :displayStorage:value *tmp343 8
   403 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   405 op add *tmp347 165 :displayStorage:value
   406 draw line :displayStorage:x 165 :displayStorage:x *tmp347
   407 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label403
-    * label *label406
   408 op and *tmp343 :displayStorage:accumulator 0b11111
   409 op sub :displayStorage:value *tmp343 8
   410 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   412 op add *tmp347 145 :displayStorage:value
   413 draw line :displayStorage:x 145 :displayStorage:x *tmp347
   414 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label407
-    * label *label410
   415 op and *tmp343 :displayStorage:accumulator 0b11111
   416 op sub :displayStorage:value *tmp343 8
   417 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   419 op add *tmp347 125 :displayStorage:value
   420 draw line :displayStorage:x 125 :displayStorage:x *tmp347
   421 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label411
-    * label *label414
   422 op and *tmp343 :displayStorage:accumulator 0b11111
   423 op sub :displayStorage:value *tmp343 8
   424 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   426 op add *tmp347 105 :displayStorage:value
   427 draw line :displayStorage:x 105 :displayStorage:x *tmp347
   428 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label415
-    * label *label418
   429 op and *tmp343 :displayStorage:accumulator 0b11111
   430 op sub :displayStorage:value *tmp343 8
   431 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   433 op add *tmp347 85 :displayStorage:value
   434 draw line :displayStorage:x 85 :displayStorage:x *tmp347
   435 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label419
-    * label *label422
   436 op and *tmp343 :displayStorage:accumulator 0b11111
   437 op sub :displayStorage:value *tmp343 8
   438 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   440 op add *tmp347 65 :displayStorage:value
   441 draw line :displayStorage:x 65 :displayStorage:x *tmp347
   442 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label423
-    * label *label426
   443 op and *tmp343 :displayStorage:accumulator 0b11111
   444 op sub :displayStorage:value *tmp343 8
   445 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   447 op add *tmp347 45 :displayStorage:value
   448 draw line :displayStorage:x 45 :displayStorage:x *tmp347
   449 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label427
-    * label *label430
   450 op and *tmp343 :displayStorage:accumulator 0b11111
   451 op sub :displayStorage:value *tmp343 8
   452 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   454 op add *tmp347 25 :displayStorage:value
   455 draw line :displayStorage:x 25 :displayStorage:x *tmp347
   456 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label431
-    * label *label434
   457 op and *tmp343 :displayStorage:accumulator 0b11111
   458 op sub :displayStorage:value *tmp343 8
   459 select *tmp346 greaterThanEq :displayStorage:value 0 %[green] %[red]
   460 draw col *tmp346
   461 op add *tmp347 5 :displayStorage:value
   462 draw line :displayStorage:x 5 :displayStorage:x *tmp347
-    * label *label435
-    * label *label187
   463 drawflush display1
   464 op add .lastTail .lastTail 1
   465 label *label168
 
   473 draw col %[gold]
   474 print "Base map"
   475 draw print 90 206 @center
-    * label *label207
-    * label *label206
   476 print "Base map"
   477 draw print 91 206 @center
-    * label *label209
-    * label *label208
-    * label *label205
   478 draw col %[white]
-    * label *label372
   479 draw reset
   480 draw translate 90 105
   481 draw scale 7.333333333333333 7.333333333333333
-    * label *label373
   482 draw image 0 0 @core-shard 6 0
   483 drawflush display1
   484 label *label203
-    * label *label204
   485 set :displayBaseMap:cfg "AJEMJJ-graphite-press0"
   486 setaddr *tmp353 *label214
   487 jump *label211 always
 
   585 set :displayBaseMap:cfg "AÁNBJe-multiplicative-reconstructor27"
   586 setaddr *tmp353 *label239
   587 label *label211
-    * label *label439
   588 draw reset
   589 draw color 0 0 32 255
   590 draw rect 0 217 200 300
   591 draw col %[gold]
   592 print "Goal"
   593 draw print 42 261 @bottom
-    * label *label440
-    * label *label441
   594 print "Goal"
   595 draw print 43 261 @bottom
-    * label *label442
-    * label *label443
-    * label *label444
   596 draw col %[white]
   597 op add :drawHeader:count .nextBlock .nextUnit
   598 jump *label445 notEqual :drawHeader:count 2
 
   632 print *tmp435
   633 print ")"
   634 draw print 174 272 @topRight
-    * label *label449
-    * label *label450
   635 jump *label453 equal .titaniumDrill false
   636 sensor *tmp437 .titaniumDrill @titanium
   637 op max :drawHeader:count .titaniumDrillCount *tmp437
 
   640 print "x"
   641 print :drawHeader:count
   642 draw print 174 255 @topRight
-    * label *label451
-    * label *label452
   643 op mul *tmp442 7 :drawHeader:len
   644 op sub *tmp443 154 *tmp442
   645 draw image *tmp443 246 @titanium 12 0
   646 label *label453
-    * label *label454
   647 jump *label457 equal .thoriumContainer false
   648 sensor :drawHeader:count .thoriumContainer @thorium
   649 op log10 *tmp446 :drawHeader:count
 
   651 print "x"
   652 print :drawHeader:count
   653 draw print 124 255 @topRight
-    * label *label455
-    * label *label456
   654 op mul *tmp449 7 :drawHeader:len.1
   655 op sub *tmp450 104 *tmp449
   656 draw image *tmp450 246 @thorium 12 0
   657 label *label457
-    * label *label458
   658 set :drawHeader:x.2 174
   659 draw col %[white]
   660 set :drawUnitCount:count .polys
 
   663 print "x"
   664 print :drawUnitCount:count
   665 draw print 174 229 @right
-    * label *label459
-    * label *label460
   666 op sub :drawHeader:x.2 174 30
   667 label *label461
-    * label *label462
-    * label *label463
   668 set :drawUnitCount.1:count .monos
   669 jump *label466 lessThanEq :drawUnitCount.1:count 0
   670 op sub *tmp456 :drawHeader:x.2 20
 
   672 print "x"
   673 print :drawUnitCount.1:count
   674 draw print :drawHeader:x.2 229 @right
-    * label *label464
-    * label *label465
   675 op sub :drawHeader:x.2 :drawHeader:x.2 30
   676 label *label466
-    * label *label467
-    * label *label468
   677 set :drawUnitCount.2:count .flares
   678 jump *label471 lessThanEq :drawUnitCount.2:count 0
   679 op sub *tmp459 :drawHeader:x.2 20
 
   681 print "x"
   682 print :drawUnitCount.2:count
   683 draw print :drawHeader:x.2 229 @right
-    * label *label469
-    * label *label470
   684 label *label471
-    * label *label472
-    * label *label473
-    * label *label474
-    * label *label378
   685 read *tmp465 :displayBaseMap:cfg 1
   686 op sub *tmp466 *tmp465 74
   687 lookup block :unpackCfg:type *tmp466
 
   696 read *tmp480 :displayBaseMap:cfg 5
   697 op sub :unpackCfg:ind *tmp480 74
   698 sensor :unpackCfg:size :unpackCfg:type @size
-    * label *label379
-    * label *label380
   699 op shl *tmp490 1 :unpackCfg:ind
   700 op and *tmp491 .blocksBuilt *tmp490
   701 jump *label383 equal *tmp491 false
   702 draw col %[white]
-    * label *label381
   703 draw reset
   704 draw translate 90 105
   705 draw scale 7.333333333333333 7.333333333333333
-    * label *label382
   706 op mul *tmp493 2 :unpackCfg:x
   707 op mul *tmp494 2 :unpackCfg:y
   708 op mul *tmp495 2 :unpackCfg:size
 
   712 label *label383
   713 jump *label386 equal .pageSwitched false
   714 draw color 128 255 128 128
-    * label *label384
   715 draw reset
   716 draw translate 90 105
   717 draw scale 7.333333333333333 7.333333333333333
-    * label *label385
   718 op mul *tmp498 2 :unpackCfg:x
   719 op mul *tmp499 2 :unpackCfg:y
   720 op mul *tmp500 2 :unpackCfg:size
   721 op mul *tmp501 90 :unpackCfg:rotation
   722 draw image *tmp498 *tmp499 :unpackCfg:type *tmp500 *tmp501
   723 label *label386
-    * label *label387
   724 label *label388
-    * label *label389
   725 set :displayBaseMap:i .recentBuildIndex
   726 jump *label242 lessThan :displayBaseMap:i 0
   727 set .recentBuildIndex -1
 
   805 multilabel *label530 (m:marker5)
   806 set :drawBlock:cfg "AÁNBJe-multiplicative-reconstructor27"
   807 label *label504
-    * label *label390
   808 read *tmp465 :drawBlock:cfg 1
   809 op sub *tmp466 *tmp465 74
   810 lookup block :unpackCfg:type *tmp466
 
   819 read *tmp480 :drawBlock:cfg 5
   820 op sub :unpackCfg:ind *tmp480 74
   821 sensor :unpackCfg:size :unpackCfg:type @size
-    * label *label391
-    * label *label392
   822 op shl *tmp490 1 :unpackCfg:ind
   823 op and *tmp491 .blocksBuilt *tmp490
   824 jump *label395 equal *tmp491 false
   825 draw col %[white]
-    * label *label393
   826 draw reset
   827 draw translate 90 105
   828 draw scale 7.333333333333333 7.333333333333333
-    * label *label394
   829 op mul *tmp493 2 :unpackCfg:x
   830 op mul *tmp494 2 :unpackCfg:y
   831 op mul *tmp495 2 :unpackCfg:size
 
   835 label *label395
   836 jump *label398 equal .pageSwitched false
   837 draw color 128 255 128 128
-    * label *label396
   838 draw reset
   839 draw translate 90 105
   840 draw scale 7.333333333333333 7.333333333333333
-    * label *label397
   841 op mul *tmp498 2 :unpackCfg:x
   842 op mul *tmp499 2 :unpackCfg:y
   843 op mul *tmp500 2 :unpackCfg:size
   844 op mul *tmp501 90 :unpackCfg:rotation
   845 draw image *tmp498 *tmp499 :unpackCfg:type *tmp500 *tmp501
   846 label *label398
-    * label *label399
   847 label *label400
-    * label *label401
   848 label *label242
-    * label *label243
   849 sensor *tmp358 switch1 @enabled
   850 jump *label245 equal *tmp358 false
   851 draw clear 0 0 32
   852 jump *label213 always
   853 label *label245
-    * label *label246
   854 drawflush display1
-    * label *label212
   855 multijump *tmp353 0 0 (m:marker4)
   856 multilabel *label239 (m:marker4)
   857 label *label213
-    * label *label201
   858 jump *label200 always
   859 label *label199
   860 op sub :displayLog:page .page 3
 
   873 draw col %[gold]
   874 print "Build records"
   875 draw print 4 206 @left
-    * label *label252
-    * label *label251
   876 print "Build records"
   877 draw print 5 206 @left
-    * label *label254
-    * label *label253
-    * label *label250
   878 op sub *tmp374 .page 2
   879 print *tmp374
   880 print "/"
   881 print :displayLog:pages
   882 draw print 172 206 @right
-    * label *label256
-    * label *label255
   883 set .lastRecord :displayLog:start
   884 label *label248
-    * label *label249
   885 setaddr :drawHeader*retaddr *label257 (h:*label257)
   886 call *label4 *invalid :drawHeader*retval (m:*label257) (h:*label257)
   887 label *label257
   888 op sub :displayLog:position .lastRecord 1
-    * label *label258
   889 jump *label260 lessThan :displayLog:position :displayLog:stop
   890 label *label334
   891 read :displayLog:record bank1 :displayLog:position
 
   916 op add *tmp401 :displayRecord:y 2
   917 print :displayRecord:s
   918 draw print *tmp400 *tmp401 @right
-    * label *label267
-    * label *label266
-    * label *label261
   919 drawflush display1
   920 sensor *tmp402 switch1 @enabled
   921 jump *label268 equal *tmp402 false
   922 jump *label260 always
   923 label *label268
-    * label *label269
-    * label *label259
   924 op sub :displayLog:position :displayLog:position 1
   925 jump *label334 greaterThanEq :displayLog:position :displayLog:stop
   926 label *label260
   927 op add .lastRecord :displayLog:stop 1
   928 drawflush display1
-    * label *label247
   929 label *label200
   930 label *label167
   931 label *label22
 
   952 print .status3
   953 print "\n"
   954 printflush message1
-    * label *label272
   955 label *label271
   956 sensor .pageSwitched switch1 @enabled
   957 jump *label273 equal .pageSwitched false
 
   962 draw reset
   963 draw clear 0 0 32
   964 label *label273
-    * label *label274
-    * label *label17
   965 jump *label16 always
-    * label *label18
-    * label *label12
-    * label *label11
   966 wait 1e12
   967 jump *label10 always
   968 end
 
   973 draw col %[gold]
   974 print "Goal"
   975 draw print 42 261 @bottom
-    * label *label278
-    * label *label277
   976 print "Goal"
   977 draw print 43 261 @bottom
-    * label *label280
-    * label *label279
-    * label *label276
   978 draw col %[white]
   979 op add :drawHeader:count .nextBlock .nextUnit
   980 jump *label281 notEqual :drawHeader:count 2
 
  1014 print *tmp435
  1015 print ")"
  1016 draw print 174 272 @topRight
-    * label *label290
-    * label *label289
  1017 jump *label291 equal .titaniumDrill false
  1018 sensor *tmp437 .titaniumDrill @titanium
  1019 op max :drawHeader:count .titaniumDrillCount *tmp437
 
  1022 print "x"
  1023 print :drawHeader:count
  1024 draw print 174 255 @topRight
-    * label *label294
-    * label *label293
  1025 op mul *tmp442 7 :drawHeader:len
  1026 op sub *tmp443 154 *tmp442
  1027 draw image *tmp443 246 @titanium 12 0
  1028 label *label291
-    * label *label292
  1029 jump *label295 equal .thoriumContainer false
  1030 sensor :drawHeader:count .thoriumContainer @thorium
  1031 op log10 *tmp446 :drawHeader:count
 
  1033 print "x"
  1034 print :drawHeader:count
  1035 draw print 124 255 @topRight
-    * label *label298
-    * label *label297
  1036 op mul *tmp449 7 :drawHeader:len.1
  1037 op sub *tmp450 104 *tmp449
  1038 draw image *tmp450 246 @thorium 12 0
  1039 label *label295
-    * label *label296
  1040 set :drawHeader:x.2 174
  1041 draw col %[white]
  1042 set :drawUnitCount:count .polys
 
  1045 print "x"
  1046 print :drawUnitCount:count
  1047 draw print 174 229 @right
-    * label *label303
-    * label *label302
  1048 op sub :drawHeader:x.2 174 30
  1049 label *label300
-    * label *label301
-    * label *label299
  1050 set :drawUnitCount.1:count .monos
  1051 jump *label305 lessThanEq :drawUnitCount.1:count 0
  1052 op sub *tmp456 :drawHeader:x.2 20
 
  1054 print "x"
  1055 print :drawUnitCount.1:count
  1056 draw print :drawHeader:x.2 229 @right
-    * label *label308
-    * label *label307
  1057 op sub :drawHeader:x.2 :drawHeader:x.2 30
  1058 label *label305
-    * label *label306
-    * label *label304
  1059 set :drawUnitCount.2:count .flares
  1060 jump *label310 lessThanEq :drawUnitCount.2:count 0
  1061 op sub *tmp459 :drawHeader:x.2 20
 
  1063 print "x"
  1064 print :drawUnitCount.2:count
  1065 draw print :drawHeader:x.2 229 @right
-    * label *label313
-    * label *label312
  1066 label *label310
-    * label *label311
-    * label *label309
-    * label *label275
  1067 return :drawHeader*retaddr
  1068 end

Modifications by Jumps phase, Jump Straightening, pass 6, iteration 1 (-3 instructions):
 
   318 set :drawMaterials:col :drawItem.5:col
   319 set :drawMaterials:y :drawItem.5:y
   320 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label136 greaterThan :drawMaterials:count 0
-    * jump *label118 always
+  321 jump *label118 lessThanEq :drawMaterials:count 0
   322 label *label136
   323 label *label126
   324 multijump *tmp243 0 0 (m:marker1)
 
   392 draw image 10 5 @thorium 17 0
   393 drawflush display1
   394 label *label169
-    * jump *label183 lessThanEq .lastTail :displayStorage:tail
-    * jump *label168 always
+  395 jump *label168 greaterThan .lastTail :displayStorage:tail
   396 label *label183
   397 read :displayStorage:accumulator bank2 .lastTail
   398 op add :displayStorage:x 25 .lastTail
 
   916 draw print *tmp400 *tmp401 @right
   917 drawflush display1
   918 sensor *tmp402 switch1 @enabled
-    * jump *label268 equal *tmp402 false
-    * jump *label260 always
+  919 jump *label260 notEqual *tmp402 false
   920 label *label268
   921 op sub :displayLog:position :displayLog:position 1
   922 jump *label334 greaterThanEq :displayLog:position :displayLog:stop

Modifications by Jumps phase, Jump Optimization, pass 6, iteration 1:
 
   319 set :drawMaterials:y :drawItem.5:y
   320 op sub :drawMaterials:count :drawMaterials:count 1
   321 jump *label118 lessThanEq :drawMaterials:count 0
-    * label *label136
   322 label *label126
   323 multijump *tmp243 0 0 (m:marker1)
   324 multilabel *label125 (m:marker1)
 
   392 drawflush display1
   393 label *label169
   394 jump *label168 greaterThan .lastTail :displayStorage:tail
-    * label *label183
   395 read :displayStorage:accumulator bank2 .lastTail
   396 op add :displayStorage:x 25 .lastTail
   397 op and *tmp343 :displayStorage:accumulator 0b11111
 
   915 drawflush display1
   916 sensor *tmp402 switch1 @enabled
   917 jump *label260 notEqual *tmp402 false
-    * label *label268
   918 op sub :displayLog:position :displayLog:position 1
   919 jump *label334 greaterThanEq :displayLog:position :displayLog:stop
   920 label *label260

Modifications by Jumps phase, Jump Threading, pass 6, iteration 1:
 
    54 draw image *tmp58 *tmp63 @mega *tmp68 0
    55 drawflush display1
    56 op add .animation .animation 1
-    * jump *label24 always
+   57 jump *label22 always
    58 label *label23
    59 draw clear 0 0 32
    60 setaddr :drawHeader*retaddr *label32 (h:*label32)
 
   139 print "/"
   140 print :drawMaterials:unitTotal1
   141 draw print 171 197 @right
-    * jump *label59 equal :drawMaterials:unit2 null
+  142 jump *label35 equal :drawMaterials:unit2 null
   143 op mul *tmp139 122 .reconstructorProgress
   144 op min :drawItem.1:length 122 *tmp139
   145 draw col %[white]
 
   156 print "/"
   157 print :drawMaterials:unitTotal2
   158 draw print 171 182 @right
-    * jump *label69 equal :drawMaterials:unit3 null
+  159 jump *label35 equal :drawMaterials:unit3 null
   160 op mul *tmp163 122 :drawMaterials:multiReconstructorProgress
   161 op min :drawItem.2:length 122 *tmp163
   162 draw col %[white]
 
   175 draw print 171 167 @right
   176 label *label69
   177 label *label59
-    * jump *label50 always
+  178 jump *label35 always
   179 label *label49
   180 jump *label484 lessThanEq :drawMaterials:targetFactoryLead 0
   181 sensor *tmp186 A¾BFLX-air-factory14 @lead
 
   194 draw print 171 197 @right
   195 set :drawMaterials:y 175
   196 label *label484
-    * jump *label498 lessThanEq :drawMaterials:targetFactorySilicon 0
+  197 jump *label35 lessThanEq :drawMaterials:targetFactorySilicon 0
   198 sensor *tmp186 A¾BFLX-air-factory14 @silicon
   199 op mul *tmp191 122 *tmp186
   200 op div *tmp192 *tmp191 :drawMaterials:targetFactorySilicon
 
   391 draw image 10 5 @thorium 17 0
   392 drawflush display1
   393 label *label169
-    * jump *label168 greaterThan .lastTail :displayStorage:tail
+  394 jump *label167 greaterThan .lastTail :displayStorage:tail
   395 read :displayStorage:accumulator bank2 .lastTail
   396 op add :displayStorage:x 25 .lastTail
   397 op and *tmp343 :displayStorage:accumulator 0b11111
 
   845 sensor *tmp358 switch1 @enabled
   846 jump *label245 equal *tmp358 false
   847 draw clear 0 0 32
-    * jump *label213 always
+  848 jump *label200 always
   849 label *label245
   850 drawflush display1
   851 multijump *tmp353 0 0 (m:marker4)
 
   948 printflush message1
   949 label *label271
   950 sensor .pageSwitched switch1 @enabled
-    * jump *label273 equal .pageSwitched false
+  951 jump *label16 equal .pageSwitched false
   952 control enabled switch1 false
   953 op add *tmp412 .page 1
   954 op mod .page *tmp412 .numPages

Modifications by Jumps phase, Unreachable Code Elimination, pass 6, iteration 1 (-4 instructions):
 
   173 print "/"
   174 print .megaTarget
   175 draw print 171 167 @right
-    * label *label69
-    * label *label59
   176 jump *label35 always
   177 label *label49
   178 jump *label484 lessThanEq :drawMaterials:targetFactoryLead 0
 
   209 draw print 170 *tmp205 @right
   210 print :drawMaterials:targetFactorySilicon
   211 draw print 171 *tmp205 @right
-    * label *label498
-    * label *label50
   212 jump *label35 always
   213 label *label34
   214 op equal *tmp209 .nextBlock @titanium
 
   368 draw print 171 *tmp324 @right
   369 label *label147
   370 drawflush display1
-    * label *label24
   371 jump *label22 always
   372 label *label21
   373 jump *label166 notEqual .page 1
 
   453 draw line :displayStorage:x 5 :displayStorage:x *tmp347
   454 drawflush display1
   455 op add .lastTail .lastTail 1
-    * label *label168
   456 jump *label167 always
   457 label *label166
   458 jump *label199 notEqual .page 2
 
   844 drawflush display1
   845 multijump *tmp353 0 0 (m:marker4)
   846 multilabel *label239 (m:marker4)
-    * label *label213
   847 jump *label200 always
   848 label *label199
   849 op sub :displayLog:page .page 3
 
   948 drawflush null
   949 draw reset
   950 draw clear 0 0 32
-    * label *label273
   951 jump *label16 always
-    * wait 1e12
-    * jump *label10 always
-    * end
   952 label *label4
   953 draw reset
   954 draw color 0 0 32 255
 
  1048 draw print :drawHeader:x.2 229 @right
  1049 label *label310
  1050 return :drawHeader*retaddr
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 6, iteration 1:
 
    15 set .animation -15
    16 set .pageSwitched false
    17 set *signature "0:v1"
-    * label *label10
    18 label *label13
    19 ubind @poly
    20 ulocate building core false @copper *tmp42 *tmp43 *tmp44 .core

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    17 set *signature "0:v1"
    18 label *label13
    19 ubind @poly
-    * ulocate building core false @copper *tmp42 *tmp43 *tmp44 .core
+   20 ulocate building core false @copper 0 0 0 .core
    21 jump *label13 equal .core null
    22 printflush null
    23 drawflush null

Modifications by Final phase, Print Merging, iteration 1 (-16 instructions):
 
   607 op mod :drawHeader:s :drawHeader:t 60
   608 select *tmp430 lessThan :drawHeader:s 10 "0" ""
   609 print :drawHeader:m
-    * print ":"
-    * print *tmp430
-    * print :drawHeader:s
+  610 print ":{0}{0} (x{0}.{0})"
+  611 format *tmp430
+  612 format :drawHeader:s
   613 op mul *tmp431 10 :drawHeader:t
   614 op div *tmp432 *tmp431 :drawHeader:tt
   615 op round :drawHeader:ratio *tmp432
   616 op idiv *tmp434 :drawHeader:ratio 10
   617 op mod *tmp435 :drawHeader:ratio 10
-    * print " (x"
-    * print *tmp434
-    * print "."
-    * print *tmp435
-    * print ")"
+  618 format *tmp434
+  619 format *tmp435
   620 draw print 174 272 @topRight
   621 jump *label453 equal .titaniumDrill false
   622 sensor *tmp437 .titaniumDrill @titanium
 
   913 label *label167
   914 label *label22
   915 jump *label270 lessThanEq .megas 0
-    * print "[gold]All done.[]\nNothing more to see here.\nGo home."
-    * print "\n"
+  916 print "[gold]All done.[]\nNothing more to see here.\nGo home.\n"
   917 printflush message1
   918 jump *label271 always
   919 label *label270
-    * print "[gold]Building "
-    * print .nextBlock
-    * print "\n"
-    * print "==================================[]"
-    * print "\n"
-    * print .status1
-    * print "\n"
-    * print .status2
-    * print .item2
-    * print " "
-    * print "("
-    * print .block2
-    * print ")"
-    * print "\n"
-    * print .status3
-    * print "\n"
+  920 print "[gold]Building {0}\n==================================[]\n{0}\n{0}{0} ({0})\n{0}\n"
+  921 format .nextBlock
+  922 format .status1
+  923 format .status2
+  924 format .item2
+  925 format .block2
+  926 format .status3
   927 printflush message1
   928 label *label271
   929 sensor .pageSwitched switch1 @enabled
 
   969 op mod :drawHeader:s :drawHeader:t 60
   970 select *tmp430 lessThan :drawHeader:s 10 "0" ""
   971 print :drawHeader:m
-    * print ":"
-    * print *tmp430
-    * print :drawHeader:s
+  972 print ":{0}{0} (x{0}.{0})"
+  973 format *tmp430
+  974 format :drawHeader:s
   975 op mul *tmp431 10 :drawHeader:t
   976 op div *tmp432 *tmp431 :drawHeader:tt
   977 op round :drawHeader:ratio *tmp432
   978 op idiv *tmp434 :drawHeader:ratio 10
   979 op mod *tmp435 :drawHeader:ratio 10
-    * print " (x"
-    * print *tmp434
-    * print "."
-    * print *tmp435
-    * print ")"
+  980 format *tmp434
+  981 format *tmp435
   982 draw print 174 272 @topRight
   983 jump *label291 equal .titaniumDrill false
   984 sensor *tmp437 .titaniumDrill @titanium

Final code before resolving virtual instructions:

        label *label9                                                Display.mnd: require "OreLocator.mnd" remote oreLocator;
    0:  read *tmp40 processor3 "*signature"                          ...
    1:  jump *label9 notEqual *tmp40 "3290b8c661787058:v1"           ...
    2:  set .core null                                               Display.mnd: var
    3:  set .page 0                                                  ...
    4:  set .numPages 4                                              ...
    5:  set .recentBuildIndex -1                                     Display.mnd: remote var
    6:  set .monos 0                                                 ...
    7:  set .flares 0                                                ...
    8:  set .polys 1                                                 ...
    9:  set .megas 0                                                 ...
   10:  set .flareTarget 0                                           ...
   11:  set .monoTarget 0                                            ...
   12:  set .polyTarget 0                                            ...
   13:  set .megaTarget 0                                            ...
   14:  set .animation -15                                           Display.mnd: var animation = -15;
   15:  set .pageSwitched false                                      Display.mnd: var pageSwitched = false;
   16:  set *signature "0:v1"                                        Display.mnd: #set target = 8;
        label *label13                                               Display.mnd: do
   17:  ubind @poly                                                  Display.mnd: ubind(@poly);
   18:  ulocate building core false @copper 0 0 0 .core              Display.mnd: core = ulocate(:building, :core, false);
   19:  jump *label13 equal .core null                               Display.mnd: do
   20:  printflush null                                              Display.mnd: printflush(null);
   21:  drawflush null                                               Display.mnd: drawflush(null);
        label *label16                                               Display.mnd: while true do
   22:  jump *label19 equal .unitReset false                         Display.mnd: if unitReset then
   23:  set .reconstructorProgress 0                                 Display.mnd: factoryProgress = reconstructorProgress = 0;
   24:  set .factoryProgress 0                                       ...
   25:  set .unitReset false                                         Display.mnd: unitReset = false;
        label *label19                                               Display.mnd: if unitReset then
   26:  jump *label21 notEqual .page 0                               Display.mnd: if page == 0 then
   27:  jump *label23 lessThanEq .megas 0                            Display.mnd: if megas > 0 then
   28:  jump *label26 greaterThanEq .animation 0                     Display.mnd: if animation < 0 then
   29:  draw color 0 0 32 80 0 0                                     Display.mnd: color(0, 0, 32, 80);
   30:  draw rect 0 0 176 176 0 0                                    Display.mnd: rect(0, 0, 176, 176);
   31:  jump *label27 always 0 0                                     Display.mnd: if animation < 0 then
        label *label26                                               ...
   32:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
   33:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
        label *label27                                               Display.mnd: if animation < 0 then
   34:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   35:  op div *tmp55 .animation 30                                  Display.mnd: var ratio = max(0, min(animation / 30, 1));
   36:  op min *tmp56 *tmp55 1                                       ...
   37:  op max :animate:ratio 0 *tmp56                               ...
   38:  op sub *tmp59 1 :animate:ratio                               Display.mnd: (1 - ratio) * from + ratio * to;
   39:  op mul *tmp60 *tmp59 42                                      ...
   40:  op mul *tmp61 :animate:ratio 88                              ...
   41:  op add *tmp58 *tmp60 *tmp61                                  ...
   42:  op mul *tmp65 *tmp59 237                                     ...
   43:  op add *tmp63 *tmp65 *tmp61                                  ...
   44:  op mul *tmp70 *tmp59 32                                      ...
   45:  op mul *tmp71 :animate:ratio 168                             ...
   46:  op add *tmp68 *tmp70 *tmp71                                  ...
   47:  draw image *tmp58 *tmp63 @mega *tmp68 0 0                    Display.mnd: image(x, y, @mega, size, 0);
   48:  drawflush display1                                           Display.mnd: drawflush(display1);
   49:  op add .animation .animation 1                               Display.mnd: animate();
   50:  jump *label22 always 0 0                                     Display.mnd: if megas > 0 then
        label *label23                                               ...
   51:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
   52:  setaddr :drawHeader*retaddr *label32                         Display.mnd: drawHeader();
   53:  call *label4 *invalid :drawHeader*retval                     ...
        label *label32                                               ...
   54:  set :drawMaterials:col 0                                     Display.mnd: var count, col = 0, y = HEADER2_Y - ROW_HEIGHT;
   55:  set :drawMaterials:y 190                                     ...
   56:  jump *label34 notEqual .nextBlock null                       Display.mnd: if nextBlock == null then
   57:  sensor *tmp76 A¾BFLX-air-factory14 @progress                 Display.mnd: factoryProgress = max(factoryProgress, air_factory.@progress);
   58:  op max .factoryProgress .factoryProgress *tmp76              ...
   59:  sensor *tmp78 AÀF@Ld-additive-reconstructor26 @progress      Display.mnd: reconstructorProgress = max(reconstructorProgress, additive_rec.@progress);
   60:  op max .reconstructorProgress .reconstructorProgress *tmp78  ...
   61:  sensor :drawMaterials:multiReconstructorProgress AÁNBJe-mult Display.mnd: var multiReconstructorProgress = multiplicative_rec.@progress;
   62:  jump *label36 notEqual .nextUnit @mono                       Display.mnd: if nextUnit == @mono then
   63:  set :drawMaterials:targetFactoryLead 15                      Display.mnd: targetFactoryLead = 15;
   64:  set :drawMaterials:targetFactorySilicon 30                   Display.mnd: targetFactorySilicon = 30;
   65:  set .materialCount 2                                         Display.mnd: materialCount = 2;
   66:  set :drawMaterials:unitCount1 .monos                         Display.mnd: unitCount1 = monos;
   67:  set :drawMaterials:unitTotal1 .monoTarget                    Display.mnd: unitTotal1 = monoTarget;
   68:  set :drawMaterials:unit1 .nextUnit                           Display.mnd: unit1 = nextUnit;
   69:  set :drawMaterials:unit3 null                                Display.mnd: unit2 = unit3 = null;
   70:  set :drawMaterials:unit2 null                                ...
   71:  jump *label37 always 0 0                                     Display.mnd: if nextUnit == @mono then
        label *label36                                               ...
   72:  jump *label38 notEqual .nextUnit @flare                      Display.mnd: elsif nextUnit == @flare then
   73:  set :drawMaterials:targetFactoryLead 0                       Display.mnd: targetFactoryLead = 0;
   74:  set :drawMaterials:targetFactorySilicon 15                   Display.mnd: targetFactorySilicon = 15;
   75:  set .materialCount 1                                         Display.mnd: materialCount = 1;
   76:  set :drawMaterials:unitCount1 .flares                        Display.mnd: unitCount1 = flares;
   77:  set :drawMaterials:unitTotal1 .flareTarget                   Display.mnd: unitTotal1 = flareTarget;
   78:  set :drawMaterials:unit1 .nextUnit                           Display.mnd: unit1 = nextUnit;
   79:  set :drawMaterials:unit3 null                                Display.mnd: unit2 = unit3 = null;
   80:  set :drawMaterials:unit2 null                                ...
   81:  jump *label39 always 0 0                                     Display.mnd: elsif nextUnit == @flare then
        label *label38                                               ...
   82:  jump *label40 notEqual .nextUnit @poly                       Display.mnd: elsif nextUnit == @poly then
   83:  op floor :drawMaterials:unitCount1 .factoryProgress 0        Display.mnd: unitCount1 = floor(factoryProgress);
   84:  set :drawMaterials:unitCount2 .polys                         Display.mnd: unitCount2 = polys;
   85:  set :drawMaterials:unitTotal1 1                              Display.mnd: unitTotal1 = 1;
   86:  set :drawMaterials:unitTotal2 .polyTarget                    Display.mnd: unitTotal2 = polyTarget;
   87:  set :drawMaterials:unit1 @mono                               Display.mnd: unit1 = @mono;
   88:  set :drawMaterials:unit2 .nextUnit                           Display.mnd: unit2 = nextUnit;
   89:  set :drawMaterials:unit3 null                                Display.mnd: unit3 = null;
   90:  op greaterThan *tmp97 .reconstructorProgress 0               Display.mnd: factoryProgress = max(factoryProgress, reconstructorProgress > 0);
   91:  op max .factoryProgress .factoryProgress *tmp97              ...
   92:  jump *label41 always 0 0                                     Display.mnd: elsif nextUnit == @poly then
        label *label40                                               ...
   93:  jump *label42 notEqual .nextUnit @mega                       Display.mnd: elsif nextUnit == @mega then
   94:  op floor :drawMaterials:unitCount1 .factoryProgress 0        Display.mnd: unitCount1 = floor(factoryProgress);
   95:  op floor :drawMaterials:unitCount2 .reconstructorProgress 0  Display.mnd: unitCount2 = floor(reconstructorProgress);
   96:  set :drawMaterials:unitTotal1 1                              Display.mnd: unitTotal1 = 1;
   97:  set :drawMaterials:unitTotal2 1                              Display.mnd: unitTotal2 = 1;
   98:  set :drawMaterials:unit1 @mono                               Display.mnd: unit1 = @mono;
   99:  set :drawMaterials:unit2 @poly                               Display.mnd: unit2 = @poly;
  100:  set :drawMaterials:unit3 .nextUnit                           Display.mnd: unit3 = nextUnit;
  101:  op greaterThan *tmp104 .reconstructorProgress 0              Display.mnd: factoryProgress = max(factoryProgress, reconstructorProgress > 0);
  102:  op max .factoryProgress .factoryProgress *tmp104             ...
  103:  op greaterThan *tmp106 :drawMaterials:multiReconstructorProg Display.mnd: reconstructorProgress = max(reconstructorProgress, multiReconstructorProgress > 0);
  104:  op max .reconstructorProgress .reconstructorProgress *tmp106 ...
        label *label42                                               Display.mnd: elsif nextUnit == @mega then
        label *label41                                               Display.mnd: elsif nextUnit == @poly then
        label *label39                                               Display.mnd: elsif nextUnit == @flare then
        label *label37                                               Display.mnd: if nextUnit == @mono then
  105:  print "Unit factories"                                       Display.mnd: print(text);
  106:  draw print 22 205 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  107:  print "Unit factories"                                       Display.mnd: print(text);
  108:  draw print 23 205 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  109:  jump *label49 lessThanEq .factoryProgress 0                  Display.mnd: if factoryProgress > 0 then
  110:  op mul *tmp115 122 .factoryProgress                          Display.mnd: var length = min(barLength, barLength * current / target);
  111:  op min :drawItem:length 122 *tmp115                          ...
  112:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  113:  draw image 11 195 :drawMaterials:unit1 16 0 0                Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  114:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  115:  draw rect 22 190 :drawItem:length 10 0 0                     Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  116:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  117:  draw lineRect 22 190 122 10 0 0                              Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  118:  print :drawMaterials:unitCount1                              Display.mnd: print(text);
  119:  print "/"                                                    ...
  120:  print :drawMaterials:unitTotal1                              ...
  121:  draw print 170 197 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  122:  print :drawMaterials:unitCount1                              Display.mnd: print(text);
  123:  print "/"                                                    ...
  124:  print :drawMaterials:unitTotal1                              ...
  125:  draw print 171 197 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  126:  jump *label35 equal :drawMaterials:unit2 null                Display.mnd: if unit2 != null then
  127:  op mul *tmp139 122 .reconstructorProgress                    Display.mnd: var length = min(barLength, barLength * current / target);
  128:  op min :drawItem.1:length 122 *tmp139                        ...
  129:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  130:  draw image 11 180 :drawMaterials:unit2 16 0 0                Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  131:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  132:  draw rect 22 175 :drawItem.1:length 10 0 0                   Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  133:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  134:  draw lineRect 22 175 122 10 0 0                              Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  135:  print :drawMaterials:unitCount2                              Display.mnd: print(text);
  136:  print "/"                                                    ...
  137:  print :drawMaterials:unitTotal2                              ...
  138:  draw print 170 182 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  139:  print :drawMaterials:unitCount2                              Display.mnd: print(text);
  140:  print "/"                                                    ...
  141:  print :drawMaterials:unitTotal2                              ...
  142:  draw print 171 182 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  143:  jump *label35 equal :drawMaterials:unit3 null                Display.mnd: if unit3 != null then
  144:  op mul *tmp163 122 :drawMaterials:multiReconstructorProgress Display.mnd: var length = min(barLength, barLength * current / target);
  145:  op min :drawItem.2:length 122 *tmp163                        ...
  146:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  147:  draw image 11 165 :drawMaterials:unit3 16 0 0                Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  148:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  149:  draw rect 22 160 :drawItem.2:length 10 0 0                   Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  150:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  151:  draw lineRect 22 160 122 10 0 0                              Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  152:  print .megas                                                 Display.mnd: print(text);
  153:  print "/"                                                    ...
  154:  print .megaTarget                                            ...
  155:  draw print 170 167 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  156:  print .megas                                                 Display.mnd: print(text);
  157:  print "/"                                                    ...
  158:  print .megaTarget                                            ...
  159:  draw print 171 167 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  160:  jump *label35 always 0 0                                     Display.mnd: if factoryProgress > 0 then
        label *label49                                               ...
  161:  jump *label484 lessThanEq :drawMaterials:targetFactoryLead 0 Display.mnd: if target > 0 then
  162:  sensor *tmp186 A¾BFLX-air-factory14 @lead                    Display.mnd: drawItem(in out col, in out y, 1, item, air_factory.sensor(item), target, target);
  163:  op mul *tmp191 122 *tmp186                                   Display.mnd: var length = min(barLength, barLength * current / target);
  164:  op div *tmp192 *tmp191 :drawMaterials:targetFactoryLead      ...
  165:  op min :drawItem.3:length 122 *tmp192                        ...
  166:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  167:  draw image 11 195 @lead 16 0 0                               Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  168:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  169:  draw rect 22 190 :drawItem.3:length 10 0 0                   Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  170:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  171:  draw lineRect 22 190 122 10 0 0                              Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  172:  print :drawMaterials:targetFactoryLead                       Display.mnd: print(text);
  173:  draw print 170 197 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  174:  print :drawMaterials:targetFactoryLead                       Display.mnd: print(text);
  175:  draw print 171 197 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  176:  set :drawMaterials:y 175                                     Display.mnd: drawItem(in out col, in out y, 1, item, air_factory.sensor(item), target, target);
        label *label484                                              Display.mnd: if target > 0 then
  177:  jump *label35 lessThanEq :drawMaterials:targetFactorySilicon ...
  178:  sensor *tmp186 A¾BFLX-air-factory14 @silicon                 Display.mnd: drawItem(in out col, in out y, 1, item, air_factory.sensor(item), target, target);
  179:  op mul *tmp191 122 *tmp186                                   Display.mnd: var length = min(barLength, barLength * current / target);
  180:  op div *tmp192 *tmp191 :drawMaterials:targetFactorySilicon   ...
  181:  op min :drawItem.3:length 122 *tmp192                        ...
  182:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  183:  op add *tmp203 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  184:  draw image 11 *tmp203 @silicon 16 0 0                        ...
  185:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  186:  draw rect 22 :drawMaterials:y :drawItem.3:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  187:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  188:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  189:  op add *tmp205 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  190:  print :drawMaterials:targetFactorySilicon                    Display.mnd: print(text);
  191:  draw print 170 *tmp205 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  192:  print :drawMaterials:targetFactorySilicon                    Display.mnd: print(text);
  193:  draw print 171 *tmp205 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  194:  jump *label35 always 0 0                                     Display.mnd: if nextBlock == null then
        label *label34                                               ...
  195:  op equal *tmp209 .nextBlock @titanium                        Display.mnd: elsif nextBlock == @titanium or nextBlock == @ore-titanium then
  196:  op equal *tmp210 .nextBlock @ore-titanium                    ...
  197:  op or *tmp211 *tmp209 *tmp210                                ...
  198:  jump *label94 equal *tmp211 false                            ...
  199:  read *tmp213 processor3 ".mapAction"                         Display.mnd: print(text);
  200:  print *tmp213                                                ...
  201:  draw print 22 205 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  202:  read *tmp215 processor3 ".mapAction"                         Display.mnd: print(text);
  203:  print *tmp215                                                ...
  204:  draw print 23 205 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  205:  read :drawItem.4:current processor3 ".mapProgress"           Display.mnd: drawItem(in 0, in HEADER2_Y - ROW_HEIGHT, 1, @titanium, oreLocator.mapProgress, oreLocator.mapTotal, "x", oreLocator.mapSpots);
  206:  read :drawItem.4:target processor3 ".mapTotal"               ...
  207:  op mul *tmp220 122 :drawItem.4:current                       Display.mnd: var length = min(barLength, barLength * current / target);
  208:  op div *tmp221 *tmp220 :drawItem.4:target                    ...
  209:  op min :drawItem.4:length 122 *tmp221                        ...
  210:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  211:  draw image 11 195 @titanium 16 0 0                           Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  212:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  213:  draw rect 22 190 :drawItem.4:length 10 0 0                   Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  214:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  215:  draw lineRect 22 190 122 10 0 0                              Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  216:  print "x"                                                    Display.mnd: print(text);
  217:  read *tmp235 processor3 ".mapSpots"                          ...
  218:  print *tmp235                                                ...
  219:  draw print 170 197 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  220:  print "x"                                                    Display.mnd: print(text);
  221:  read *tmp237 processor3 ".mapSpots"                          ...
  222:  print *tmp237                                                ...
  223:  draw print 171 197 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  224:  jump *label95 always 0 0                                     Display.mnd: elsif nextBlock == @titanium or nextBlock == @ore-titanium then
        label *label94                                               ...
  225:  set .materialCount .totalTargets                             Display.mnd: count = materialCount = totalTargets;
  226:  set :drawMaterials:count .materialCount                      ...
  227:  print "Materials"                                            Display.mnd: print(text);
  228:  draw print 22 205 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  229:  print "Materials"                                            Display.mnd: print(text);
  230:  draw print 23 205 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  231:  jump *label114 equal .materialCount false                    Display.mnd: if count then
  232:  set :drawMaterials:item.1 @copper                            Display.mnd: for var item, target in
  233:  set :drawMaterials:target.1 .targetCopper                    ...
  234:  setaddr *tmp243 *label119                                    ...
  235:  jump *label116 always 0 0                                    ...
        multilabel *label119                                         ...
  236:  set :drawMaterials:item.1 @lead                              ...
  237:  set :drawMaterials:target.1 .targetLead                      ...
  238:  setaddr *tmp243 *label120                                    ...
  239:  jump *label116 always 0 0                                    ...
        multilabel *label120                                         ...
  240:  set :drawMaterials:item.1 @graphite                          ...
  241:  set :drawMaterials:target.1 .targetGraphite                  ...
  242:  setaddr *tmp243 *label121                                    ...
  243:  jump *label116 always 0 0                                    ...
        multilabel *label121                                         ...
  244:  set :drawMaterials:item.1 @silicon                           ...
  245:  set :drawMaterials:target.1 .targetSilicon                   ...
  246:  setaddr *tmp243 *label122                                    ...
  247:  jump *label116 always 0 0                                    ...
        multilabel *label122                                         ...
  248:  set :drawMaterials:item.1 @titanium                          ...
  249:  set :drawMaterials:target.1 .targetTitanium                  ...
  250:  setaddr *tmp243 *label123                                    ...
  251:  jump *label116 always 0 0                                    ...
        multilabel *label123                                         ...
  252:  set :drawMaterials:item.1 @metaglass                         ...
  253:  set :drawMaterials:target.1 .targetMetaglass                 ...
  254:  setaddr *tmp243 *label124                                    ...
  255:  jump *label116 always 0 0                                    ...
        multilabel *label124                                         ...
  256:  set :drawMaterials:item.1 @thorium                           ...
  257:  set :drawMaterials:target.1 .targetThorium                   ...
  258:  setaddr *tmp243 *label125                                    ...
        label *label116                                              ...
  259:  jump *label126 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  260:  sensor *tmp246 .core :drawMaterials:item.1                   Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  261:  set :drawItem.5:y :drawMaterials:y                           ...
  262:  op mul *tmp251 122 *tmp246                                   Display.mnd: var length = min(barLength, barLength * current / target);
  263:  op div *tmp252 *tmp251 :drawMaterials:target.1               ...
  264:  op min :drawItem.5:length 122 *tmp252                        ...
  265:  op mul *tmp255 :drawMaterials:col 88                         Display.mnd: var iconX = ICON_X + col * 176 / 2;
  266:  op add :drawItem.5:iconX 11 *tmp255                          ...
  267:  op add :drawItem.5:barX 22 *tmp255                           Display.mnd: var barX = BAR_X + col * 176 / 2;
  268:  op add :drawItem.5:textX 170 *tmp255                         Display.mnd: var textX = textEnd + col * 176 / 2;
  269:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  270:  op add *tmp263 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  271:  draw image :drawItem.5:iconX *tmp263 :drawMaterials:item.1 1 ...
  272:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  273:  draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:leng Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  274:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  275:  draw lineRect :drawItem.5:barX :drawMaterials:y 122 10 0 0   Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  276:  op add *tmp265 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  277:  print :drawMaterials:target.1                                Display.mnd: print(text);
  278:  draw print :drawItem.5:textX *tmp265 @right                  Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  279:  op add :drawText.17:x *tmp255 171                            Display.mnd: drawText(x + 1, y, alignment, text);
  280:  print :drawMaterials:target.1                                Display.mnd: print(text);
  281:  draw print :drawText.17:x *tmp265 @right                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  282:  op add :drawItem.5:col :drawMaterials:col 1                  Display.mnd: if ++col >= columns then
  283:  jump *label134 lessThan :drawItem.5:col 1                    ...
  284:  set :drawItem.5:col 0                                        Display.mnd: col = 0;
  285:  op sub :drawItem.5:y :drawMaterials:y 15                     Display.mnd: y -= ROW_HEIGHT;
        label *label134                                              Display.mnd: if ++col >= columns then
  286:  set :drawMaterials:col :drawItem.5:col                       Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  287:  set :drawMaterials:y :drawItem.5:y                           ...
  288:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  289:  jump *label118 lessThanEq :drawMaterials:count 0             ...
        label *label126                                              Display.mnd: if target > 0 then
  290:  multijump *tmp243 0 0                                        Display.mnd: for var item, target in
        multilabel *label125                                         ...
        label *label118                                              ...
        label *label114                                              Display.mnd: if count then
        label *label95                                               Display.mnd: elsif nextBlock == @titanium or nextBlock == @ore-titanium then
        label *label35                                               Display.mnd: if nextBlock == null then
  291:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  292:  select *tmp272 lessThan .materialCount 4 140 125             Display.mnd: var y = materialCount < 4 ? HEADER3_Y : HEADER4_Y;
  293:  print "Builder"                                              Display.mnd: print(text);
  294:  draw print 22 *tmp272 @bottomLeft                            Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  295:  print "Builder"                                              Display.mnd: print(text);
  296:  draw print 23 *tmp272 @bottomLeft                            Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  297:  jump *label146 notEqual .transportItem null                  Display.mnd: if transportItem == null then
  298:  op sub *tmp276 *tmp272 15                                    Display.mnd: drawUnit(@poly, 0, in y - ROW_HEIGHT);
  299:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  300:  op sub *tmp293 *tmp272 10                                    Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  301:  draw image 11 *tmp293 @poly 16 0 0                           ...
  302:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  303:  draw rect 22 *tmp276 0 10 0 0                                Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  304:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  305:  draw lineRect 22 *tmp276 122 10 0 0                          Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  306:  op sub *tmp295 *tmp272 8                                     Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  307:  print .transportTarget                                       Display.mnd: print(text);
  308:  draw print 170 *tmp295 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  309:  print .transportTarget                                       Display.mnd: print(text);
  310:  draw print 171 *tmp295 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  311:  jump *label147 always 0 0                                    Display.mnd: if transportItem == null then
        label *label146                                              ...
  312:  sensor :drawUnit:unitItem @unit @firstItem                   Display.mnd: var unitItem = @unit.@firstItem;
  313:  sensor *tmp302 @unit @totalItems                             Display.mnd: drawUnit(transportItem, @unit.@totalItems * (unitItem == transportItem), in y - ROW_HEIGHT);
  314:  op equal *tmp303 :drawUnit:unitItem .transportItem           ...
  315:  op mul *tmp304 *tmp302 *tmp303                               ...
  316:  op sub *tmp305 *tmp272 15                                    ...
  317:  set :drawUnit.2:item .transportItem                          ...
  318:  set :drawItem.7:target .transportTarget                      Display.mnd: drawItem(in 0, in out y, 1, item, items, transportTarget, transportTarget);
  319:  op mul *tmp310 122 *tmp304                                   Display.mnd: var length = min(barLength, barLength * current / target);
  320:  op div *tmp311 *tmp310 :drawItem.7:target                    ...
  321:  op min :drawItem.7:length 122 *tmp311                        ...
  322:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  323:  op sub *tmp322 *tmp272 10                                    Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  324:  draw image 11 *tmp322 :drawUnit.2:item 16 0 0                ...
  325:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  326:  draw rect 22 *tmp305 :drawItem.7:length 10 0 0               Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  327:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  328:  draw lineRect 22 *tmp305 122 10 0 0                          Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  329:  op sub *tmp324 *tmp272 8                                     Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  330:  print .transportTarget                                       Display.mnd: print(text);
  331:  draw print 170 *tmp324 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  332:  print .transportTarget                                       Display.mnd: print(text);
  333:  draw print 171 *tmp324 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
        label *label147                                              Display.mnd: if transportItem == null then
  334:  drawflush display1                                           Display.mnd: drawflush(display1);
  335:  jump *label22 always 0 0                                     Display.mnd: if page == 0 then
        label *label21                                               ...
  336:  jump *label166 notEqual .page 1                              Display.mnd: elsif page == 1 then
  337:  read :displayStorage:tail bank2 510                          Display.mnd: var tail = bank2[510];
  338:  jump *label169 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  339:  read .lastTail bank2 511                                     Display.mnd: lastTail = bank2[511];
  340:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  341:  draw image 10 165 @copper 17 0 0                             Display.mnd: image(10, y, item, 17, 0);
  342:  draw image 10 145 @lead 17 0 0                               ...
  343:  draw image 10 125 @sand 17 0 0                               ...
  344:  draw image 10 105 @coal 17 0 0                               ...
  345:  draw image 10 85 @graphite 17 0 0                            ...
  346:  draw image 10 65 @silicon 17 0 0                             ...
  347:  draw image 10 45 @titanium 17 0 0                            ...
  348:  draw image 10 25 @metaglass 17 0 0                           ...
  349:  draw image 10 5 @thorium 17 0 0                              ...
  350:  drawflush display1                                           Display.mnd: drawflush(display1);
        label *label169                                              Display.mnd: if pageSwitched then
  351:  jump *label167 greaterThan .lastTail :displayStorage:tail    Display.mnd: if lastTail > tail then return; end;
  352:  read :displayStorage:accumulator bank2 .lastTail             Display.mnd: var accumulator = bank2[lastTail];
  353:  op add :displayStorage:x 25 .lastTail                        Display.mnd: var x = 25 + lastTail;
  354:  op and *tmp343 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  355:  op sub :displayStorage:value *tmp343 8                       ...
  356:  select *tmp346 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  357:  draw col *tmp346 0 0 0 0 0                                   ...
  358:  op add *tmp347 165 :displayStorage:value                     Display.mnd: line(x, y, x, y + value);
  359:  draw line :displayStorage:x 165 :displayStorage:x *tmp347 0  ...
  360:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  361:  op and *tmp343 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  362:  op sub :displayStorage:value *tmp343 8                       ...
  363:  select *tmp346 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  364:  draw col *tmp346 0 0 0 0 0                                   ...
  365:  op add *tmp347 145 :displayStorage:value                     Display.mnd: line(x, y, x, y + value);
  366:  draw line :displayStorage:x 145 :displayStorage:x *tmp347 0  ...
  367:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  368:  op and *tmp343 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  369:  op sub :displayStorage:value *tmp343 8                       ...
  370:  select *tmp346 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  371:  draw col *tmp346 0 0 0 0 0                                   ...
  372:  op add *tmp347 125 :displayStorage:value                     Display.mnd: line(x, y, x, y + value);
  373:  draw line :displayStorage:x 125 :displayStorage:x *tmp347 0  ...
  374:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  375:  op and *tmp343 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  376:  op sub :displayStorage:value *tmp343 8                       ...
  377:  select *tmp346 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  378:  draw col *tmp346 0 0 0 0 0                                   ...
  379:  op add *tmp347 105 :displayStorage:value                     Display.mnd: line(x, y, x, y + value);
  380:  draw line :displayStorage:x 105 :displayStorage:x *tmp347 0  ...
  381:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  382:  op and *tmp343 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  383:  op sub :displayStorage:value *tmp343 8                       ...
  384:  select *tmp346 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  385:  draw col *tmp346 0 0 0 0 0                                   ...
  386:  op add *tmp347 85 :displayStorage:value                      Display.mnd: line(x, y, x, y + value);
  387:  draw line :displayStorage:x 85 :displayStorage:x *tmp347 0 0 ...
  388:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  389:  op and *tmp343 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  390:  op sub :displayStorage:value *tmp343 8                       ...
  391:  select *tmp346 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  392:  draw col *tmp346 0 0 0 0 0                                   ...
  393:  op add *tmp347 65 :displayStorage:value                      Display.mnd: line(x, y, x, y + value);
  394:  draw line :displayStorage:x 65 :displayStorage:x *tmp347 0 0 ...
  395:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  396:  op and *tmp343 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  397:  op sub :displayStorage:value *tmp343 8                       ...
  398:  select *tmp346 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  399:  draw col *tmp346 0 0 0 0 0                                   ...
  400:  op add *tmp347 45 :displayStorage:value                      Display.mnd: line(x, y, x, y + value);
  401:  draw line :displayStorage:x 45 :displayStorage:x *tmp347 0 0 ...
  402:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  403:  op and *tmp343 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  404:  op sub :displayStorage:value *tmp343 8                       ...
  405:  select *tmp346 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  406:  draw col *tmp346 0 0 0 0 0                                   ...
  407:  op add *tmp347 25 :displayStorage:value                      Display.mnd: line(x, y, x, y + value);
  408:  draw line :displayStorage:x 25 :displayStorage:x *tmp347 0 0 ...
  409:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  410:  op and *tmp343 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  411:  op sub :displayStorage:value *tmp343 8                       ...
  412:  select *tmp346 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  413:  draw col *tmp346 0 0 0 0 0                                   ...
  414:  op add *tmp347 5 :displayStorage:value                       Display.mnd: line(x, y, x, y + value);
  415:  draw line :displayStorage:x 5 :displayStorage:x *tmp347 0 0  ...
  416:  drawflush display1                                           Display.mnd: drawflush(display1);
  417:  op add .lastTail .lastTail 1                                 Display.mnd: displayStorage();
  418:  jump *label167 always 0 0                                    Display.mnd: elsif page == 1 then
        label *label166                                              ...
  419:  jump *label199 notEqual .page 2                              Display.mnd: elsif page == 2 then
  420:  setaddr :drawHeader*retaddr *label202                        Display.mnd: drawHeader();
  421:  call *label4 *invalid :drawHeader*retval                     ...
        label *label202                                              ...
  422:  jump *label203 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  423:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  424:  print "Base map"                                             Display.mnd: print(text);
  425:  draw print 90 206 @center                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  426:  print "Base map"                                             Display.mnd: print(text);
  427:  draw print 91 206 @center                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  428:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  429:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  430:  draw translate 90 105 0 0 0 0                                Display.mnd: translate(90, 105);
  431:  draw scale 7.333333333333333 7.333333333333333 0 0 0 0       Display.mnd: scale(size / 15 / 2, size / 15 / 2);
  432:  draw image 0 0 @core-shard 6 0 0                             Display.mnd: image(0, 0, @core-shard, 6, 0);
  433:  drawflush display1                                           Display.mnd: drawflush(display1);
        label *label203                                              Display.mnd: if pageSwitched then
  434:  set :displayBaseMap:cfg "AJEMJJ-graphite-press0"             Display.mnd: for var cfg in BLOCKS do
  435:  setaddr *tmp353 *label214                                    ...
  436:  jump *label211 always 0 0                                    ...
        multilabel *label214                                         ...
  437:  set :displayBaseMap:cfg "AJTJK-battery1"                    ...
  438:  setaddr *tmp353 *label215                                    ...
  439:  jump *label211 always 0 0                                    ...
        multilabel *label215                                         ...
  440:  set :displayBaseMap:cfg "ALTJL-battery2"                    ...
  441:  setaddr *tmp353 *label216                                    ...
  442:  jump *label211 always 0 0                                    ...
        multilabel *label216                                         ...
  443:  set :displayBaseMap:cfg "AJRJM-combustion-generator3"       ...
  444:  setaddr *tmp353 *label217                                    ...
  445:  jump *label211 always 0 0                                    ...
        multilabel *label217                                         ...
  446:  set :displayBaseMap:cfg "ALMQJN-silicon-smelter4"            ...
  447:  setaddr *tmp353 *label218                                    ...
  448:  jump *label211 always 0 0                                    ...
        multilabel *label218                                         ...
  449:  set :displayBaseMap:cfg "A{LNJO-inverted-sorter5"            ...
  450:  setaddr *tmp353 *label219                                    ...
  451:  jump *label211 always 0 0                                    ...
        multilabel *label219                                         ...
  452:  set :displayBaseMap:cfg "A©JNJP-unloader6"                   ...
  453:  setaddr *tmp353 *label220                                    ...
  454:  jump *label211 always 0 0                                    ...
        multilabel *label220                                         ...
  455:  set :displayBaseMap:cfg "A{HNJQ-inverted-sorter7"            ...
  456:  setaddr *tmp353 *label221                                    ...
  457:  jump *label211 always 0 0                                    ...
        multilabel *label221                                         ...
  458:  set :displayBaseMap:cfg "AJPJR-underflow-gate8"             ...
  459:  setaddr *tmp353 *label222                                    ...
  460:  jump *label211 always 0 0                                    ...
        multilabel *label222                                         ...
  461:  set :displayBaseMap:cfg "AÕFDJS-micro-processor9"            ...
  462:  setaddr *tmp353 *label223                                    ...
  463:  jump *label211 always 0 0                                    ...
        multilabel *label223                                         ...
  464:  set :displayBaseMap:cfg "AFFJT-power-node10"                ...
  465:  setaddr *tmp353 *label224                                    ...
  466:  jump *label211 always 0 0                                    ...
        multilabel *label224                                         ...
  467:  set :displayBaseMap:cfg "A©FHJU-unloader11"                  ...
  468:  setaddr *tmp353 *label225                                    ...
  469:  jump *label211 always 0 0                                    ...
        multilabel *label225                                         ...
  470:  set :displayBaseMap:cfg "A~FJJV-overflow-gate12"             ...
  471:  setaddr *tmp353 *label226                                    ...
  472:  jump *label211 always 0 0                                    ...
        multilabel *label226                                         ...
  473:  set :displayBaseMap:cfg "A~DJJW-overflow-gate13"             ...
  474:  setaddr *tmp353 *label227                                    ...
  475:  jump *label211 always 0 0                                    ...
        multilabel *label227                                         ...
  476:  set :displayBaseMap:cfg "A¾BFLX-air-factory14"               ...
  477:  setaddr *tmp353 *label228                                    ...
  478:  jump *label211 always 0 0                                    ...
        multilabel *label228                                         ...
  479:  set :displayBaseMap:cfg "A©NHJY-unloader15"                  ...
  480:  setaddr *tmp353 *label229                                    ...
  481:  jump *label211 always 0 0                                    ...
        multilabel *label229                                         ...
  482:  set :displayBaseMap:cfg "A{NJJZ-inverted-sorter16"           ...
  483:  setaddr *tmp353 *label230                                    ...
  484:  jump *label211 always 0 0                                    ...
        multilabel *label230                                         ...
  485:  set :displayBaseMap:cfg "ANOMJ[-kiln17"                      ...
  486:  setaddr *tmp353 *label231                                    ...
  487:  jump *label211 always 0 0                                    ...
        multilabel *label231                                         ...
  488:  set :displayBaseMap:cfg "A¡AOJ\-water-extractor18"           ...
  489:  setaddr *tmp353 *label232                                    ...
  490:  jump *label211 always 0 0                                    ...
        multilabel *label232                                         ...
  491:  set :displayBaseMap:cfg "AAKJ^-steam-generator20"           ...
  492:  setaddr *tmp353 *label233                                    ...
  493:  jump *label211 always 0 0                                    ...
        multilabel *label233                                         ...
  494:  set :displayBaseMap:cfg "ALQIJ_-silicon-smelter21"           ...
  495:  setaddr *tmp353 *label234                                    ...
  496:  jump *label211 always 0 0                                    ...
        multilabel *label234                                         ...
  497:  set :displayBaseMap:cfg "AKFRJa-multi-press23"               ...
  498:  setaddr *tmp353 *label235                                    ...
  499:  jump *label211 always 0 0                                    ...
        multilabel *label235                                         ...
  500:  set :displayBaseMap:cfg "A©HFJb-unloader24"                  ...
  501:  setaddr *tmp353 *label236                                    ...
  502:  jump *label211 always 0 0                                    ...
        multilabel *label236                                         ...
  503:  set :displayBaseMap:cfg "A{HDJc-inverted-sorter25"           ...
  504:  setaddr *tmp353 *label237                                    ...
  505:  jump *label211 always 0 0                                    ...
        multilabel *label237                                         ...
  506:  set :displayBaseMap:cfg "AÀF@Ld-additive-reconstructor26"    ...
  507:  setaddr *tmp353 *label238                                    ...
  508:  jump *label211 always 0 0                                    ...
        multilabel *label238                                         ...
  509:  set :displayBaseMap:cfg "AÁNBJe-multiplicative-reconstructor ...
  510:  setaddr *tmp353 *label239                                    ...
        label *label211                                              ...
  511:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  512:  draw color 0 0 32 255 0 0                                    Display.mnd: color(0, 0, 32, 255);
  513:  draw rect 0 217 200 300 0 0                                  Display.mnd: rect(0, HEADER1_Y1, 200, 300);
  514:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  515:  print "Goal"                                                 Display.mnd: print(text);
  516:  draw print 42 261 @bottom                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  517:  print "Goal"                                                 Display.mnd: print(text);
  518:  draw print 43 261 @bottom                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  519:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  520:  op add :drawHeader:count .nextBlock .nextUnit                Display.mnd: var count = nextBlock + nextUnit;
  521:  jump *label445 notEqual :drawHeader:count 2                  Display.mnd: if count == 2 then
  522:  draw image 27 239 .nextBlock 25 0 0                          Display.mnd: image(HEADER_X - 15, HEADER1_Y - 22, nextBlock, 25, 0);
  523:  draw image 57 239 .nextUnit 25 0 0                           Display.mnd: image(HEADER_X + 15, HEADER1_Y - 22, nextUnit, 25, 0);
  524:  jump *label448 always 0 0                                    Display.mnd: if count == 2 then
        label *label445                                              ...
  525:  jump *label446 notEqual :drawHeader:count 1                  Display.mnd: elsif count == 1 then
  526:  select *tmp421 notEqual .nextBlock null .nextBlock .nextUnit Display.mnd: image(HEADER_X, HEADER1_Y - 24, nextBlock != null ? nextBlock : nextUnit, 32, 0);
  527:  draw image 42 237 *tmp421 32 0 0                             ...
  528:  jump *label447 always 0 0                                    Display.mnd: elsif count == 1 then
        label *label446                                              ...
  529:  op div *tmp422 @tick 2                                       Display.mnd: image(HEADER_X, HEADER1_Y - 24, @hydrogen, 32, 360 - (@tick / 2) % 360);
  530:  op mod *tmp423 *tmp422 360                                   ...
  531:  op sub *tmp424 360 *tmp423                                   ...
  532:  draw image 42 237 @hydrogen 32 *tmp424 0                     ...
        label *label447                                              Display.mnd: elsif count == 1 then
        label *label448                                              Display.mnd: if count == 2 then
  533:  set :drawHeader:tt @second                                   Display.mnd: var tt = @second;
  534:  read *tmp0 processor1 "time"                                 Display.mnd: var t = floor(TIME / 120);
  535:  op idiv :drawHeader:t *tmp0 120                              ...
  536:  op idiv :drawHeader:m :drawHeader:t 60                       Display.mnd: var m = t \ 60;
  537:  op mod :drawHeader:s :drawHeader:t 60                        Display.mnd: var s = t % 60;
  538:  select *tmp430 lessThan :drawHeader:s 10 "0" ""              Display.mnd: print(m, ":", s < 10 ? "0" : "", s);
  539:  print :drawHeader:m                                          ...
  540:  print ":{0}{0} (x{0}.{0})"                                   ...
  541:  format *tmp430                                               ...
  542:  format :drawHeader:s                                         ...
  543:  op mul *tmp431 10 :drawHeader:t                              Display.mnd: var ratio = round(10 * t / tt);
  544:  op div *tmp432 *tmp431 :drawHeader:tt                        ...
  545:  op round :drawHeader:ratio *tmp432 0                         ...
  546:  op idiv *tmp434 :drawHeader:ratio 10                         Display.mnd: print(" (x", ratio \ 10, ".", ratio % 10);
  547:  op mod *tmp435 :drawHeader:ratio 10                          ...
  548:  format *tmp434                                               ...
  549:  format *tmp435                                               ...
  550:  draw print 174 272 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  551:  jump *label453 equal .titaniumDrill false                    Display.mnd: if titaniumDrill then
  552:  sensor *tmp437 .titaniumDrill @titanium                      Display.mnd: count = max(titaniumDrillCount, titaniumDrill.@titanium);
  553:  op max :drawHeader:count .titaniumDrillCount *tmp437         ...
  554:  op log10 *tmp439 :drawHeader:count 0                         Display.mnd: var len = floor(log10(count));
  555:  op floor :drawHeader:len *tmp439 0                           ...
  556:  print "x"                                                    Display.mnd: print(text);
  557:  print :drawHeader:count                                      ...
  558:  draw print 174 255 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  559:  op mul *tmp442 7 :drawHeader:len                             Display.mnd: image(x - 20 - 7 * len, 246, @titanium, 12, 0);
  560:  op sub *tmp443 154 *tmp442                                   ...
  561:  draw image *tmp443 246 @titanium 12 0 0                      ...
        label *label453                                              Display.mnd: if titaniumDrill then
  562:  jump *label457 equal .thoriumContainer false                 Display.mnd: if thoriumContainer then
  563:  sensor :drawHeader:count .thoriumContainer @thorium          Display.mnd: count = thoriumContainer.@thorium;
  564:  op log10 *tmp446 :drawHeader:count 0                         Display.mnd: var len = floor(log10(count));
  565:  op floor :drawHeader:len.1 *tmp446 0                         ...
  566:  print "x"                                                    Display.mnd: print(text);
  567:  print :drawHeader:count                                      ...
  568:  draw print 124 255 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  569:  op mul *tmp449 7 :drawHeader:len.1                           Display.mnd: image(x - 20 - 7 * len, 246, @thorium, 12, 0);
  570:  op sub *tmp450 104 *tmp449                                   ...
  571:  draw image *tmp450 246 @thorium 12 0 0                       ...
        label *label457                                              Display.mnd: if thoriumContainer then
  572:  set :drawHeader:x.2 174                                      Display.mnd: var x = 174;
  573:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  574:  set :drawUnitCount:count .polys                              Display.mnd: drawUnitCount(@poly, polys, ref x);
  575:  jump *label461 lessThanEq :drawUnitCount:count 0             Display.mnd: if count > 0 then
  576:  draw image 154 227 @poly 12 0 0                              Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  577:  print "x"                                                    Display.mnd: print(text);
  578:  print :drawUnitCount:count                                   ...
  579:  draw print 174 229 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  580:  op sub :drawHeader:x.2 174 30                                Display.mnd: x -= 30;
        label *label461                                              Display.mnd: if count > 0 then
  581:  set :drawUnitCount.1:count .monos                            Display.mnd: drawUnitCount(@mono, monos, ref x);
  582:  jump *label466 lessThanEq :drawUnitCount.1:count 0           Display.mnd: if count > 0 then
  583:  op sub *tmp456 :drawHeader:x.2 20                            Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  584:  draw image *tmp456 227 @mono 12 0 0                          ...
  585:  print "x"                                                    Display.mnd: print(text);
  586:  print :drawUnitCount.1:count                                 ...
  587:  draw print :drawHeader:x.2 229 @right                        Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  588:  op sub :drawHeader:x.2 :drawHeader:x.2 30                    Display.mnd: x -= 30;
        label *label466                                              Display.mnd: if count > 0 then
  589:  set :drawUnitCount.2:count .flares                           Display.mnd: drawUnitCount(@flare, flares, ref x);
  590:  jump *label471 lessThanEq :drawUnitCount.2:count 0           Display.mnd: if count > 0 then
  591:  op sub *tmp459 :drawHeader:x.2 20                            Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  592:  draw image *tmp459 227 @flare 12 0 0                         ...
  593:  print "x"                                                    Display.mnd: print(text);
  594:  print :drawUnitCount.2:count                                 ...
  595:  draw print :drawHeader:x.2 229 @right                        Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
        label *label471                                              Display.mnd: if count > 0 then
  596:  read *tmp465 :displayBaseMap:cfg 1                           Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  597:  op sub *tmp466 *tmp465 74                                    ...
  598:  lookup block :unpackCfg:type *tmp466                         ...
  599:  read *tmp469 :displayBaseMap:cfg 2                           Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  600:  op sub *tmp470 *tmp469 74                                    ...
  601:  op div :unpackCfg:x *tmp470 2                                ...
  602:  read *tmp473 :displayBaseMap:cfg 3                           Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  603:  op sub *tmp474 *tmp473 74                                    ...
  604:  op div :unpackCfg:y *tmp474 2                                ...
  605:  read *tmp477 :displayBaseMap:cfg 4                           Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  606:  op sub :unpackCfg:rotation *tmp477 74                        ...
  607:  read *tmp480 :displayBaseMap:cfg 5                           Common.mnd: ind = char(cfg, index++) - _Common_offset;
  608:  op sub :unpackCfg:ind *tmp480 74                             ...
  609:  sensor :unpackCfg:size :unpackCfg:type @size                 Common.mnd: size = type.@size;
  610:  op shl *tmp490 1 :unpackCfg:ind                              Display.mnd: if blocksBuilt & (1 << index) then
  611:  op and *tmp491 .blocksBuilt *tmp490                          ...
  612:  jump *label383 equal *tmp491 false                           ...
  613:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  614:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  615:  draw translate 90 105 0 0 0 0                                Display.mnd: translate(90, 105);
  616:  draw scale 7.333333333333333 7.333333333333333 0 0 0 0       Display.mnd: scale(size / 15 / 2, size / 15 / 2);
  617:  op mul *tmp493 2 :unpackCfg:x                                Display.mnd: image(2 * x, 2 * y, type, 2 * size, 90 * rotation);
  618:  op mul *tmp494 2 :unpackCfg:y                                ...
  619:  op mul *tmp495 2 :unpackCfg:size                             ...
  620:  op mul *tmp496 90 :unpackCfg:rotation                        ...
  621:  draw image *tmp493 *tmp494 :unpackCfg:type *tmp495 *tmp496 0 ...
  622:  jump *label388 always 0 0                                    Display.mnd: if blocksBuilt & (1 << index) then
        label *label383                                              ...
  623:  jump *label386 equal .pageSwitched false                     Display.mnd: elsif pageSwitched then
  624:  draw color 128 255 128 128 0 0                               Display.mnd: color(128, 255, 128, 128);
  625:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  626:  draw translate 90 105 0 0 0 0                                Display.mnd: translate(90, 105);
  627:  draw scale 7.333333333333333 7.333333333333333 0 0 0 0       Display.mnd: scale(size / 15 / 2, size / 15 / 2);
  628:  op mul *tmp498 2 :unpackCfg:x                                Display.mnd: image(2 * x, 2 * y, type, 2 * size, 90 * rotation);
  629:  op mul *tmp499 2 :unpackCfg:y                                ...
  630:  op mul *tmp500 2 :unpackCfg:size                             ...
  631:  op mul *tmp501 90 :unpackCfg:rotation                        ...
  632:  draw image *tmp498 *tmp499 :unpackCfg:type *tmp500 *tmp501 0 ...
        label *label386                                              Display.mnd: elsif pageSwitched then
        label *label388                                              Display.mnd: if blocksBuilt & (1 << index) then
  633:  set :displayBaseMap:i .recentBuildIndex                      Display.mnd: var i = recentBuildIndex;
  634:  jump *label242 lessThan :displayBaseMap:i 0                  Display.mnd: if i >= 0 then
  635:  set .recentBuildIndex -1                                     Display.mnd: recentBuildIndex = -1;
  636:  op mul *tmp914 :displayBaseMap:i 2                           Display.mnd: drawBlock(BLOCKS[i]);
  637:  multijump *label505 *tmp914 0                                ...
        multilabel *label505                                         ...
  638:  set :drawBlock:cfg "AJEMJJ-graphite-press0"                  ...
  639:  jump *label504 always 0 0                                    ...
        multilabel *label506                                         ...
  640:  set :drawBlock:cfg "AJTJK-battery1"                         ...
  641:  jump *label504 always 0 0                                    ...
        multilabel *label507                                         ...
  642:  set :drawBlock:cfg "ALTJL-battery2"                         ...
  643:  jump *label504 always 0 0                                    ...
        multilabel *label508                                         ...
  644:  set :drawBlock:cfg "AJRJM-combustion-generator3"            ...
  645:  jump *label504 always 0 0                                    ...
        multilabel *label509                                         ...
  646:  set :drawBlock:cfg "ALMQJN-silicon-smelter4"                 ...
  647:  jump *label504 always 0 0                                    ...
        multilabel *label510                                         ...
  648:  set :drawBlock:cfg "A{LNJO-inverted-sorter5"                 ...
  649:  jump *label504 always 0 0                                    ...
        multilabel *label511                                         ...
  650:  set :drawBlock:cfg "A©JNJP-unloader6"                        ...
  651:  jump *label504 always 0 0                                    ...
        multilabel *label512                                         ...
  652:  set :drawBlock:cfg "A{HNJQ-inverted-sorter7"                 ...
  653:  jump *label504 always 0 0                                    ...
        multilabel *label513                                         ...
  654:  set :drawBlock:cfg "AJPJR-underflow-gate8"                  ...
  655:  jump *label504 always 0 0                                    ...
        multilabel *label514                                         ...
  656:  set :drawBlock:cfg "AÕFDJS-micro-processor9"                 ...
  657:  jump *label504 always 0 0                                    ...
        multilabel *label515                                         ...
  658:  set :drawBlock:cfg "AFFJT-power-node10"                     ...
  659:  jump *label504 always 0 0                                    ...
        multilabel *label516                                         ...
  660:  set :drawBlock:cfg "A©FHJU-unloader11"                       ...
  661:  jump *label504 always 0 0                                    ...
        multilabel *label517                                         ...
  662:  set :drawBlock:cfg "A~FJJV-overflow-gate12"                  ...
  663:  jump *label504 always 0 0                                    ...
        multilabel *label518                                         ...
  664:  set :drawBlock:cfg "A~DJJW-overflow-gate13"                  ...
  665:  jump *label504 always 0 0                                    ...
        multilabel *label519                                         ...
  666:  set :drawBlock:cfg "A¾BFLX-air-factory14"                    ...
  667:  jump *label504 always 0 0                                    ...
        multilabel *label520                                         ...
  668:  set :drawBlock:cfg "A©NHJY-unloader15"                       ...
  669:  jump *label504 always 0 0                                    ...
        multilabel *label521                                         ...
  670:  set :drawBlock:cfg "A{NJJZ-inverted-sorter16"                ...
  671:  jump *label504 always 0 0                                    ...
        multilabel *label522                                         ...
  672:  set :drawBlock:cfg "ANOMJ[-kiln17"                           ...
  673:  jump *label504 always 0 0                                    ...
        multilabel *label523                                         ...
  674:  set :drawBlock:cfg "A¡AOJ\-water-extractor18"                ...
  675:  jump *label504 always 0 0                                    ...
        multilabel *label524                                         ...
  676:  set :drawBlock:cfg "AAKJ^-steam-generator20"                ...
  677:  jump *label504 always 0 0                                    ...
        multilabel *label525                                         ...
  678:  set :drawBlock:cfg "ALQIJ_-silicon-smelter21"                ...
  679:  jump *label504 always 0 0                                    ...
        multilabel *label526                                         ...
  680:  set :drawBlock:cfg "AKFRJa-multi-press23"                    ...
  681:  jump *label504 always 0 0                                    ...
        multilabel *label527                                         ...
  682:  set :drawBlock:cfg "A©HFJb-unloader24"                       ...
  683:  jump *label504 always 0 0                                    ...
        multilabel *label528                                         ...
  684:  set :drawBlock:cfg "A{HDJc-inverted-sorter25"                ...
  685:  jump *label504 always 0 0                                    ...
        multilabel *label529                                         ...
  686:  set :drawBlock:cfg "AÀF@Ld-additive-reconstructor26"         ...
  687:  jump *label504 always 0 0                                    ...
        multilabel *label530                                         ...
  688:  set :drawBlock:cfg "AÁNBJe-multiplicative-reconstructor27"   ...
        label *label504                                              ...
  689:  read *tmp465 :drawBlock:cfg 1                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  690:  op sub *tmp466 *tmp465 74                                    ...
  691:  lookup block :unpackCfg:type *tmp466                         ...
  692:  read *tmp469 :drawBlock:cfg 2                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  693:  op sub *tmp470 *tmp469 74                                    ...
  694:  op div :unpackCfg:x *tmp470 2                                ...
  695:  read *tmp473 :drawBlock:cfg 3                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  696:  op sub *tmp474 *tmp473 74                                    ...
  697:  op div :unpackCfg:y *tmp474 2                                ...
  698:  read *tmp477 :drawBlock:cfg 4                                Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  699:  op sub :unpackCfg:rotation *tmp477 74                        ...
  700:  read *tmp480 :drawBlock:cfg 5                                Common.mnd: ind = char(cfg, index++) - _Common_offset;
  701:  op sub :unpackCfg:ind *tmp480 74                             ...
  702:  sensor :unpackCfg:size :unpackCfg:type @size                 Common.mnd: size = type.@size;
  703:  op shl *tmp490 1 :unpackCfg:ind                              Display.mnd: if blocksBuilt & (1 << index) then
  704:  op and *tmp491 .blocksBuilt *tmp490                          ...
  705:  jump *label395 equal *tmp491 false                           ...
  706:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  707:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  708:  draw translate 90 105 0 0 0 0                                Display.mnd: translate(90, 105);
  709:  draw scale 7.333333333333333 7.333333333333333 0 0 0 0       Display.mnd: scale(size / 15 / 2, size / 15 / 2);
  710:  op mul *tmp493 2 :unpackCfg:x                                Display.mnd: image(2 * x, 2 * y, type, 2 * size, 90 * rotation);
  711:  op mul *tmp494 2 :unpackCfg:y                                ...
  712:  op mul *tmp495 2 :unpackCfg:size                             ...
  713:  op mul *tmp496 90 :unpackCfg:rotation                        ...
  714:  draw image *tmp493 *tmp494 :unpackCfg:type *tmp495 *tmp496 0 ...
  715:  jump *label400 always 0 0                                    Display.mnd: if blocksBuilt & (1 << index) then
        label *label395                                              ...
  716:  jump *label398 equal .pageSwitched false                     Display.mnd: elsif pageSwitched then
  717:  draw color 128 255 128 128 0 0                               Display.mnd: color(128, 255, 128, 128);
  718:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  719:  draw translate 90 105 0 0 0 0                                Display.mnd: translate(90, 105);
  720:  draw scale 7.333333333333333 7.333333333333333 0 0 0 0       Display.mnd: scale(size / 15 / 2, size / 15 / 2);
  721:  op mul *tmp498 2 :unpackCfg:x                                Display.mnd: image(2 * x, 2 * y, type, 2 * size, 90 * rotation);
  722:  op mul *tmp499 2 :unpackCfg:y                                ...
  723:  op mul *tmp500 2 :unpackCfg:size                             ...
  724:  op mul *tmp501 90 :unpackCfg:rotation                        ...
  725:  draw image *tmp498 *tmp499 :unpackCfg:type *tmp500 *tmp501 0 ...
        label *label398                                              Display.mnd: elsif pageSwitched then
        label *label400                                              Display.mnd: if blocksBuilt & (1 << index) then
        label *label242                                              Display.mnd: if i >= 0 then
  726:  sensor *tmp358 switch1 @enabled                              Display.mnd: if switch1.enabled then
  727:  jump *label245 equal *tmp358 false                           ...
  728:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  729:  jump *label200 always 0 0                                    Display.mnd: break;
        label *label245                                              Display.mnd: if switch1.enabled then
  730:  drawflush display1                                           Display.mnd: drawflush(display1);
  731:  multijump *tmp353 0 0                                        Display.mnd: for var cfg in BLOCKS do
        multilabel *label239                                         ...
  732:  jump *label200 always 0 0                                    Display.mnd: elsif page == 2 then
        label *label199                                              ...
  733:  op sub :displayLog:page .page 3                              Display.mnd: displayLog(page - 3);
  734:  read :displayLog:logPosition bank1 511                       Display.mnd: var logPosition = bank1[511];
  735:  op sub *tmp363 510 :displayLog:logPosition                   Display.mnd: var pages = max(1, (records - 1) \ RECORDS_PER_PAGE + 1);
  736:  op idiv *tmp364 *tmp363 39                                   ...
  737:  op add *tmp365 *tmp364 1                                     ...
  738:  op max :displayLog:pages 1 *tmp365                           ...
  739:  op add .numPages :displayLog:pages 3                         Display.mnd: numPages = pages + 3;
  740:  op mul *tmp368 39 :displayLog:page                           Display.mnd: var start = 511 - RECORDS_PER_PAGE * page;
  741:  op sub :displayLog:start 511 *tmp368                         ...
  742:  op sub *tmp370 :displayLog:start 39                          Display.mnd: var stop = max(logPosition, start - RECORDS_PER_PAGE);
  743:  op max :displayLog:stop :displayLog:logPosition *tmp370      ...
  744:  jump *label248 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  745:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  746:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  747:  print "Build records"                                        Display.mnd: print(text);
  748:  draw print 4 206 @left                                       Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  749:  print "Build records"                                        Display.mnd: print(text);
  750:  draw print 5 206 @left                                       Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  751:  op sub *tmp374 .page 2                                       Display.mnd: print(page + 1, "/");
  752:  print *tmp374                                                ...
  753:  print "/"                                                    ...
  754:  print :displayLog:pages                                      Display.mnd: print(text);
  755:  draw print 172 206 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  756:  set .lastRecord :displayLog:start                            Display.mnd: lastRecord = start;
        label *label248                                              Display.mnd: if pageSwitched then
  757:  setaddr :drawHeader*retaddr *label257                        Display.mnd: drawHeader();
  758:  call *label4 *invalid :drawHeader*retval                     ...
        label *label257                                              ...
  759:  op sub :displayLog:position .lastRecord 1                    Display.mnd: for var position in stop ... lastRecord descending do
  760:  jump *label260 lessThan :displayLog:position :displayLog:sto ...
        label *label334                                              ...
  761:  read :displayLog:record bank1 :displayLog:position           Display.mnd: var record = bank1[position];
  762:  op sub *tmp378 :displayLog:start :displayLog:position        Display.mnd: displayRecord(record, start - position - 1);
  763:  op sub *tmp379 *tmp378 1                                     ...
  764:  op idiv :displayRecord:col *tmp379 13                        Display.mnd: var col = index \ RECORDS_PER_COLUMN;
  765:  op mod :displayRecord:row *tmp379 13                         Display.mnd: var row = index % RECORDS_PER_COLUMN;
  766:  op mul *tmp382 58 :displayRecord:col                         Display.mnd: var x = 11 + 58 * col;
  767:  op add :displayRecord:x 11 *tmp382                           ...
  768:  op mul *tmp384 15 :displayRecord:row                         Display.mnd: var y = HEADER1_Y1 - 13 - 15 - 15 * row;
  769:  op sub :displayRecord:y 189 *tmp384                          ...
  770:  op mod :displayRecord:id :displayLog:record 1000             Display.mnd: var id = record % 1000;
  771:  lookup block *tmp388 :displayRecord:id                       Display.mnd: var icon = id > @blockCount ? lookup(:unit, id - @blockCount) : lookup(:block, id);
  772:  jump *label263 lessThanEq :displayRecord:id @blockCount      ...
  773:  op sub *tmp389 :displayRecord:id @blockCount                 ...
  774:  lookup unit *tmp388 *tmp389                                  ...
        label *label263                                              ...
  775:  op div *tmp392 :displayLog:record 1000                       Display.mnd: var t = floor(record / 1000 / 120);
  776:  op idiv :displayRecord:t *tmp392 120                         ...
  777:  op idiv :displayRecord:m :displayRecord:t 60                 Display.mnd: var m = t \ 60;
  778:  op mod :displayRecord:s :displayRecord:t 60                  Display.mnd: var s = t % 60;
  779:  select *tmp398 lessThan :displayRecord:s 10 "0" ""           Display.mnd: print(m, ":", s < 10 ? "0" : "");
  780:  print :displayRecord:m                                       ...
  781:  print ":"                                                    ...
  782:  print *tmp398                                                ...
  783:  draw image :displayRecord:x :displayRecord:y *tmp388 14 0 0  Display.mnd: image(x, y, icon, 14, 0);
  784:  op add *tmp400 :displayRecord:x 44                           Display.mnd: drawText(x + 56 - 12, y + 2, @right, s);
  785:  op add *tmp401 :displayRecord:y 2                            ...
  786:  print :displayRecord:s                                       Display.mnd: print(text);
  787:  draw print *tmp400 *tmp401 @right                            Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  788:  drawflush display1                                           Display.mnd: drawflush(display1);
  789:  sensor *tmp402 switch1 @enabled                              Display.mnd: if switch1.enabled then break; end;
  790:  jump *label260 notEqual *tmp402 false                        ...
  791:  op sub :displayLog:position :displayLog:position 1           Display.mnd: for var position in stop ... lastRecord descending do
  792:  jump *label334 greaterThanEq :displayLog:position :displayLo ...
        label *label260                                              ...
  793:  op add .lastRecord :displayLog:stop 1                        Display.mnd: lastRecord = stop + 1;
  794:  drawflush display1                                           Display.mnd: drawflush(display1);
        label *label200                                              Display.mnd: elsif page == 2 then
        label *label167                                              Display.mnd: elsif page == 1 then
        label *label22                                               Display.mnd: if page == 0 then
  795:  jump *label270 lessThanEq .megas 0                           Display.mnd: if megas > 0 then
  796:  print "[gold]All done.[]\nNothing more to see here.\nGo home Display.mnd: println("[gold]All done.[]\nNothing more to see here.\nGo home.");
  797:  printflush message1                                          Display.mnd: printflush(message1);
  798:  jump *label271 always 0 0                                    Display.mnd: if megas > 0 then
        label *label270                                              ...
  799:  print "[gold]Building {0}\n================================= Display.mnd: println($"[gold]Building $nextBlock");
  800:  format .nextBlock                                            ...
  801:  format .status1                                              Display.mnd: println(status1);
  802:  format .status2                                              Display.mnd: println($"$status2$item2 ($block2)");
  803:  format .item2                                                ...
  804:  format .block2                                               ...
  805:  format .status3                                              Display.mnd: println(status3);
  806:  printflush message1                                          Display.mnd: printflush(message1);
        label *label271                                              Display.mnd: if megas > 0 then
  807:  sensor .pageSwitched switch1 @enabled                        Display.mnd: pageSwitched = switch1.enabled;
  808:  jump *label16 equal .pageSwitched false                      Display.mnd: if pageSwitched then
  809:  control enabled switch1 false 0 0 0                          Display.mnd: switch1.enabled = false;
  810:  op add *tmp412 .page 1                                       Display.mnd: page = (page + 1) % numPages;
  811:  op mod .page *tmp412 .numPages                               ...
  812:  drawflush null                                               Display.mnd: drawflush(null);
  813:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  814:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  815:  jump *label16 always 0 0                                     Display.mnd: while true do
        label *label4                                                Display.mnd: void drawHeader()
  816:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  817:  draw color 0 0 32 255 0 0                                    Display.mnd: color(0, 0, 32, 255);
  818:  draw rect 0 217 200 300 0 0                                  Display.mnd: rect(0, HEADER1_Y1, 200, 300);
  819:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  820:  print "Goal"                                                 Display.mnd: print(text);
  821:  draw print 42 261 @bottom                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  822:  print "Goal"                                                 Display.mnd: print(text);
  823:  draw print 43 261 @bottom                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  824:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  825:  op add :drawHeader:count .nextBlock .nextUnit                Display.mnd: var count = nextBlock + nextUnit;
  826:  jump *label281 notEqual :drawHeader:count 2                  Display.mnd: if count == 2 then
  827:  draw image 27 239 .nextBlock 25 0 0                          Display.mnd: image(HEADER_X - 15, HEADER1_Y - 22, nextBlock, 25, 0);
  828:  draw image 57 239 .nextUnit 25 0 0                           Display.mnd: image(HEADER_X + 15, HEADER1_Y - 22, nextUnit, 25, 0);
  829:  jump *label282 always 0 0                                    Display.mnd: if count == 2 then
        label *label281                                              ...
  830:  jump *label283 notEqual :drawHeader:count 1                  Display.mnd: elsif count == 1 then
  831:  select *tmp421 notEqual .nextBlock null .nextBlock .nextUnit Display.mnd: image(HEADER_X, HEADER1_Y - 24, nextBlock != null ? nextBlock : nextUnit, 32, 0);
  832:  draw image 42 237 *tmp421 32 0 0                             ...
  833:  jump *label284 always 0 0                                    Display.mnd: elsif count == 1 then
        label *label283                                              ...
  834:  op div *tmp422 @tick 2                                       Display.mnd: image(HEADER_X, HEADER1_Y - 24, @hydrogen, 32, 360 - (@tick / 2) % 360);
  835:  op mod *tmp423 *tmp422 360                                   ...
  836:  op sub *tmp424 360 *tmp423                                   ...
  837:  draw image 42 237 @hydrogen 32 *tmp424 0                     ...
        label *label284                                              Display.mnd: elsif count == 1 then
        label *label282                                              Display.mnd: if count == 2 then
  838:  set :drawHeader:tt @second                                   Display.mnd: var tt = @second;
  839:  read *tmp0 processor1 "time"                                 Display.mnd: var t = floor(TIME / 120);
  840:  op idiv :drawHeader:t *tmp0 120                              ...
  841:  op idiv :drawHeader:m :drawHeader:t 60                       Display.mnd: var m = t \ 60;
  842:  op mod :drawHeader:s :drawHeader:t 60                        Display.mnd: var s = t % 60;
  843:  select *tmp430 lessThan :drawHeader:s 10 "0" ""              Display.mnd: print(m, ":", s < 10 ? "0" : "", s);
  844:  print :drawHeader:m                                          ...
  845:  print ":{0}{0} (x{0}.{0})"                                   ...
  846:  format *tmp430                                               ...
  847:  format :drawHeader:s                                         ...
  848:  op mul *tmp431 10 :drawHeader:t                              Display.mnd: var ratio = round(10 * t / tt);
  849:  op div *tmp432 *tmp431 :drawHeader:tt                        ...
  850:  op round :drawHeader:ratio *tmp432 0                         ...
  851:  op idiv *tmp434 :drawHeader:ratio 10                         Display.mnd: print(" (x", ratio \ 10, ".", ratio % 10);
  852:  op mod *tmp435 :drawHeader:ratio 10                          ...
  853:  format *tmp434                                               ...
  854:  format *tmp435                                               ...
  855:  draw print 174 272 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  856:  jump *label291 equal .titaniumDrill false                    Display.mnd: if titaniumDrill then
  857:  sensor *tmp437 .titaniumDrill @titanium                      Display.mnd: count = max(titaniumDrillCount, titaniumDrill.@titanium);
  858:  op max :drawHeader:count .titaniumDrillCount *tmp437         ...
  859:  op log10 *tmp439 :drawHeader:count 0                         Display.mnd: var len = floor(log10(count));
  860:  op floor :drawHeader:len *tmp439 0                           ...
  861:  print "x"                                                    Display.mnd: print(text);
  862:  print :drawHeader:count                                      ...
  863:  draw print 174 255 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  864:  op mul *tmp442 7 :drawHeader:len                             Display.mnd: image(x - 20 - 7 * len, 246, @titanium, 12, 0);
  865:  op sub *tmp443 154 *tmp442                                   ...
  866:  draw image *tmp443 246 @titanium 12 0 0                      ...
        label *label291                                              Display.mnd: if titaniumDrill then
  867:  jump *label295 equal .thoriumContainer false                 Display.mnd: if thoriumContainer then
  868:  sensor :drawHeader:count .thoriumContainer @thorium          Display.mnd: count = thoriumContainer.@thorium;
  869:  op log10 *tmp446 :drawHeader:count 0                         Display.mnd: var len = floor(log10(count));
  870:  op floor :drawHeader:len.1 *tmp446 0                         ...
  871:  print "x"                                                    Display.mnd: print(text);
  872:  print :drawHeader:count                                      ...
  873:  draw print 124 255 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  874:  op mul *tmp449 7 :drawHeader:len.1                           Display.mnd: image(x - 20 - 7 * len, 246, @thorium, 12, 0);
  875:  op sub *tmp450 104 *tmp449                                   ...
  876:  draw image *tmp450 246 @thorium 12 0 0                       ...
        label *label295                                              Display.mnd: if thoriumContainer then
  877:  set :drawHeader:x.2 174                                      Display.mnd: var x = 174;
  878:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  879:  set :drawUnitCount:count .polys                              Display.mnd: drawUnitCount(@poly, polys, ref x);
  880:  jump *label300 lessThanEq :drawUnitCount:count 0             Display.mnd: if count > 0 then
  881:  draw image 154 227 @poly 12 0 0                              Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  882:  print "x"                                                    Display.mnd: print(text);
  883:  print :drawUnitCount:count                                   ...
  884:  draw print 174 229 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  885:  op sub :drawHeader:x.2 174 30                                Display.mnd: x -= 30;
        label *label300                                              Display.mnd: if count > 0 then
  886:  set :drawUnitCount.1:count .monos                            Display.mnd: drawUnitCount(@mono, monos, ref x);
  887:  jump *label305 lessThanEq :drawUnitCount.1:count 0           Display.mnd: if count > 0 then
  888:  op sub *tmp456 :drawHeader:x.2 20                            Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  889:  draw image *tmp456 227 @mono 12 0 0                          ...
  890:  print "x"                                                    Display.mnd: print(text);
  891:  print :drawUnitCount.1:count                                 ...
  892:  draw print :drawHeader:x.2 229 @right                        Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  893:  op sub :drawHeader:x.2 :drawHeader:x.2 30                    Display.mnd: x -= 30;
        label *label305                                              Display.mnd: if count > 0 then
  894:  set :drawUnitCount.2:count .flares                           Display.mnd: drawUnitCount(@flare, flares, ref x);
  895:  jump *label310 lessThanEq :drawUnitCount.2:count 0           Display.mnd: if count > 0 then
  896:  op sub *tmp459 :drawHeader:x.2 20                            Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  897:  draw image *tmp459 227 @flare 12 0 0                         ...
  898:  print "x"                                                    Display.mnd: print(text);
  899:  print :drawUnitCount.2:count                                 ...
  900:  draw print :drawHeader:x.2 229 @right                        Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
        label *label310                                              Display.mnd: if count > 0 then
  901:  return :drawHeader*retaddr                                   Display.mnd: void drawHeader()


Performance: parsed in 545 ms, compiled in 312 ms, optimized in 2,501 ms, run in 7 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: success.

Program output (1 steps):
The program didn't generate any output.
Execution exception at instruction 0: read *tmp40 processor3 "*signature":
Variable 'processor3' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
