  1596 instructions before optimizations.
   132 instructions eliminated by Temp Variables Elimination (2 passes, 8 iterations).
   123 instructions eliminated by Dead Code Elimination (7 iterations).
C:\Home\golem\jam-202507\Display.mnd:17:5 Variable 'coreX' is not used.
C:\Home\golem\jam-202507\Display.mnd:17:16 Variable 'coreY' is not used.
C:\Home\golem\jam-202507\Display.mnd:63:9 Variable 'unpackCfg.cu' is not used.
C:\Home\golem\jam-202507\Display.mnd:64:9 Variable 'unpackCfg.pb' is not used.
C:\Home\golem\jam-202507\Display.mnd:65:9 Variable 'unpackCfg.gr' is not used.
C:\Home\golem\jam-202507\Display.mnd:66:9 Variable 'unpackCfg.si' is not used.
C:\Home\golem\jam-202507\Display.mnd:67:9 Variable 'unpackCfg.ti' is not used.
C:\Home\golem\jam-202507\Display.mnd:68:9 Variable 'unpackCfg.mg' is not used.
C:\Home\golem\jam-202507\Display.mnd:69:9 Variable 'unpackCfg.th' is not used.
C:\Home\golem\jam-202507\Display.mnd:451:5 Variable 'mapw' is not used.
C:\Home\golem\jam-202507\Display.mnd:451:19 Variable 'maph' is not used.
    10 instructions eliminated by Jump Normalization (2 passes, 7 iterations).
    38 instructions eliminated by Jump Optimization (7 iterations).
    32 instructions eliminated by Single Step Elimination (3 passes, 11 iterations).
     2 instructions eliminated by Expression Optimization (2 passes, 5 iterations).
    18 instructions eliminated by If Expression Optimization (6 iterations).
   600 instructions eliminated by Data Flow Optimization (5 passes, 28 iterations).
     1 instructions modified by Loop Optimization (5 iterations).
     1 loops improved by Loop Optimization.
   203 instructions added by Loop Unrolling (9 iterations).
     2 loops unrolled by Loop Unrolling.
    24 instructions added by Function Inlining (9 iterations).
     2 function calls inlined by Function Inlining.
     1 jump tables inlined by Array Optimization.
     7 instructions eliminated by Jump Straightening (7 iterations).
     6 instructions updated by Jump Threading.
     3 instructions eliminated by Unreachable Code Elimination (2 iterations).
    13 instructions eliminated by Print Merging.
   843 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 238):
    Unroll iteration loop at Display.mnd:296:13                  size   +49, benefit       14.1, efficiency      0.287
    Unroll iteration loop at Display.mnd:314:13                  size  +190, benefit       26.6, efficiency      0.140
  ! Unroll iteration loop at Display.mnd:516:5                   size  +519, benefit      918.8, efficiency      1.770
    Inline function 'drawBlock' defined at Display.mnd:487:1     size   +28, benefit      820.3, efficiency     29.297
    Inline function call at Display.mnd:517:9                    size   +29, benefit      546.9, efficiency     18.858
    Inline function call at Display.mnd:521:13                   size   +29, benefit      273.4, efficiency      9.429
  * Inline read jump table of array 'BLOCKS'                     size    -3, benefit      156.3, efficiency   Infinity (-3 instructions)
    Inline 'BLOCKS' read access at Display.mnd:521:23            size   +71, benefit      156.3, efficiency      2.201

Pass 1: speed optimization selection (cost limit 241):
    Unroll iteration loop at Display.mnd:296:13                  size   +49, benefit       14.1, efficiency      0.287
    Unroll iteration loop at Display.mnd:314:13                  size  +190, benefit       26.6, efficiency      0.140
  * Inline function 'drawBlock' defined at Display.mnd:487:1     size   +28, benefit      820.3, efficiency     29.297 (+23 instructions)
    Inline function call at Display.mnd:517:9                    size   +29, benefit      546.9, efficiency     18.858
    Inline function call at Display.mnd:521:13                   size   +29, benefit      273.4, efficiency      9.429

Pass 1: speed optimization selection (cost limit 218):
  * Unroll iteration loop at Display.mnd:296:13                  size   +49, benefit       14.1, efficiency      0.287 (-2 instructions)
    Unroll iteration loop at Display.mnd:314:13                  size  +190, benefit       26.6, efficiency      0.140

Pass 1: speed optimization selection (cost limit 220):
  * Unroll iteration loop at Display.mnd:314:13                  size  +190, benefit       26.6, efficiency      0.140 (+102 instructions)
C:\Home\golem\jam-202507\Display.mnd:237:16 Variable 'drawMaterials.targetFactoryLead' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:237:35 Variable 'drawMaterials.targetFactorySilicon' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:244:13 Variable 'drawMaterials.unit1' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:244:20 Variable 'drawMaterials.unit2' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:244:27 Variable 'drawMaterials.unit3' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:245:13 Variable 'drawMaterials.unitCount1' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:245:25 Variable 'drawMaterials.unitCount2' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:246:13 Variable 'drawMaterials.unitTotal1' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:246:25 Variable 'drawMaterials.unitTotal2' is not initialized.

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-76 instructions):
 
     1 read *tmp39 processor1 "*signature"
     2 jump *label6 notEqual *tmp39 "3290b8c661787058:v1"
     3 set .core null
-    * set .coreX 0
-    * set .coreY 0
     4 set .page 0
     5 set .numPages 3
     6 set .recentBuildIndex -1
 
    13 set .polyTarget 0
    14 set .megaTarget 0
    15 set .animation -15
-    * set .mapw @mapw
-    * set .maph @maph
    16 set .pageSwitched false
    17 set *signature "0:v1"
    18 label *label7
 
    25 jump *label10 notEqual *tmp44 false
    26 label *label12
    27 sensor *tmp45 .core @x
-    * set .coreX *tmp45
    28 sensor *tmp46 .core @y
-    * set .coreY *tmp46
    29 printflush null
    30 drawflush null
    31 label *label13
 
    34 set .reconstructorProgress 0
    35 set .factoryProgress .reconstructorProgress
    36 set .unitReset false
-    * set *tmp47 false
    37 jump *label17 always
    38 label *label16
-    * set *tmp47 null
    39 label *label17
    40 op equal *tmp48 .page 0
    41 jump *label18 equal *tmp48 false
 
    45 jump *label23 equal *tmp52 false
    46 draw color 0 0 32 80
    47 draw rect 0 0 176 176
-    * set *tmp53 null
    48 jump *label24 always
    49 label *label23
    50 draw reset
    51 draw clear 0 0 32
-    * set *tmp53 null
    52 label *label24
    53 draw col %[white]
    54 op div *tmp54 .animation 30
 
    87 set :animate:size *tmp67
    88 draw image :animate:x :animate:y @mega :animate:size 0
    89 drawflush display1
-    * set *tmp72 .animation
    90 op add .animation .animation 1
    91 label *label22
    92 set *tmp51 null
 
   127 jump *label35 equal *tmp75 false
   128 draw image 25 139 .nextBlock 25 0
   129 draw image 55 139 .nextUnit 25 0
-    * set *tmp76 null
   130 jump *label36 always
   131 label *label35
   132 op equal *tmp77 :drawHeader:count 1
 
   148 draw image 40 137 @hydrogen 32 *tmp83
   149 set *tmp78 null
   150 label *label38
-    * set *tmp76 *tmp78
   151 label *label36
   152 set :drawHeader:tt @second
   153 read *tmp84 processor2 "time"
 
   212 op mul *tmp102 7 :drawHeader:len
   213 op sub *tmp103 *tmp101 *tmp102
   214 draw image *tmp103 146 @titanium 12 0
-    * set *tmp96 null
   215 jump *label46 always
   216 label *label45
-    * set *tmp96 null
   217 label *label46
   218 jump *label49 equal .thoriumContainer false
   219 sensor *tmp105 .thoriumContainer @thorium
 
   237 op mul *tmp109 7 :drawHeader:len.1
   238 op sub *tmp110 *tmp108 *tmp109
   239 draw image *tmp110 146 @thorium 12 0
-    * set *tmp104 null
   240 jump *label50 always
   241 label *label49
-    * set *tmp104 null
   242 label *label50
   243 label *label29
   244 set :drawMaterials:col 0
 
   266 set :drawMaterials:unit1 *tmp122
   267 set :drawMaterials:unit3 null
   268 set :drawMaterials:unit2 :drawMaterials:unit3
-    * set *tmp119 :drawMaterials:unit2
   269 jump *label57 always
   270 label *label56
   271 op equal *tmp123 .nextUnit @flare
 
   330 label *label61
   331 set *tmp124 *tmp129
   332 label *label59
-    * set *tmp119 *tmp124
   333 label *label57
   334 set :drawBold.1:x 22
   335 set :drawBold.1:y 105
 
   429 jump *label77 equal *tmp168 false
   430 set :drawItem:col 0
   431 op sub :drawItem:y :drawItem:y 15
-    * set *tmp169 :drawItem:y
   432 jump *label78 always
   433 label *label77
-    * set *tmp169 null
   434 label *label78
   435 label *label71
   436 op notEqual *tmp170 :drawMaterials:unit2 null
 
   506 jump *label87 equal *tmp192 false
   507 set :drawItem.1:col 0
   508 op sub :drawItem.1:y :drawItem.1:y 15
-    * set *tmp193 :drawItem.1:y
   509 jump *label88 always
   510 label *label87
-    * set *tmp193 null
   511 label *label88
   512 label *label81
   513 op notEqual *tmp194 :drawMaterials:unit3 null
 
   585 jump *label97 equal *tmp218 false
   586 set :drawItem.2:col 0
   587 op sub :drawItem.2:y :drawItem.2:y 15
-    * set *tmp219 :drawItem.2:y
   588 jump *label98 always
   589 label *label97
-    * set *tmp219 null
   590 label *label98
   591 label *label91
   592 set *tmp195 null
 
   681 jump *label112 equal *tmp244 false
   682 set :drawItem.3:col 0
   683 op sub :drawItem.3:y :drawItem.3:y 15
-    * set *tmp245 :drawItem.3:y
   684 jump *label113 always
   685 label *label112
-    * set *tmp245 null
   686 label *label113
   687 label *label106
   688 set :drawMaterials:col :drawItem.3:col
   689 set :drawMaterials:y :drawItem.3:y
-    * set *tmp222 null
   690 jump *label105 always
   691 label *label104
-    * set *tmp222 null
   692 label *label105
   693 label *label100
   694 multijump *tmp220 0 0 (m:marker0)
 
   696 label *label101
   697 set *tmp147 null
   698 label *label70
-    * set *tmp112 *tmp147
   699 jump *label55 always
   700 label *label54
   701 op equal *tmp246 .nextBlock @titanium
 
   802 jump *label127 equal *tmp275 false
   803 set :drawItem.4:col 0
   804 op sub :drawItem.4:y :drawItem.4:y 15
-    * set *tmp276 :drawItem.4:y
   805 jump *label128 always
   806 label *label127
-    * set *tmp276 null
   807 label *label128
   808 label *label121
   809 set *tmp249 null
 
   943 jump *label154 equal *tmp304 false
   944 set :drawItem.5:col 0
   945 op sub :drawItem.5:y :drawItem.5:y 15
-    * set *tmp305 :drawItem.5:y
   946 jump *label155 always
   947 label *label154
-    * set *tmp305 null
   948 label *label155
   949 label *label148
   950 set :drawMaterials:col :drawItem.5:col
 
   958 label *label156
   959 set *tmp307 null
   960 label *label157
-    * set *tmp282 *tmp307
   961 jump *label147 always
   962 label *label146
-    * set *tmp282 null
   963 label *label147
   964 label *label137
   965 multijump *tmp280 0 0 (m:marker1)
 
   972 label *label135
   973 set *tmp249 *tmp279
   974 label *label115
-    * set *tmp112 *tmp249
   975 label *label55
   976 label *label53
   977 draw col %[white]
 
  1083 jump *label175 equal *tmp336 false
  1084 set :drawItem.6:col 0
  1085 op sub :drawItem.6:y :drawItem.6:y 15
-    * set *tmp337 :drawItem.6:y
  1086 jump *label176 always
  1087 label *label175
-    * set *tmp337 null
  1088 label *label176
  1089 label *label169
  1090 set :drawUnit.1:y :drawItem.6:y
  1091 label *label168
-    * set *tmp312 null
  1092 jump *label167 always
  1093 label *label166
  1094 sensor *tmp338 @unit @firstItem
 
  1169 jump *label184 equal *tmp365 false
  1170 set :drawItem.7:col 0
  1171 op sub :drawItem.7:y :drawItem.7:y 15
-    * set *tmp366 :drawItem.7:y
  1172 jump *label185 always
  1173 label *label184
-    * set *tmp366 null
  1174 label *label185
  1175 label *label178
  1176 set :drawUnit.2:y :drawItem.7:y
  1177 label *label177
-    * set *tmp312 null
  1178 label *label167
  1179 label *label158
  1180 set :drawUnits:x 170
 
  1197 label *label191
  1198 label *label190
  1199 op sub :drawUnits:x :drawUnits:x 30
-    * set *tmp368 :drawUnits:x
  1200 jump *label189 always
  1201 label *label188
-    * set *tmp368 null
  1202 label *label189
  1203 label *label187
  1204 set :drawUnitCount.1:type @mono
 
  1219 label *label196
  1220 label *label195
  1221 op sub :drawUnits:x :drawUnits:x 30
-    * set *tmp371 :drawUnits:x
  1222 jump *label194 always
  1223 label *label193
-    * set *tmp371 null
  1224 label *label194
  1225 label *label192
  1226 set :drawUnitCount.2:type @flare
 
  1241 label *label201
  1242 label *label200
  1243 op sub :drawUnits:x :drawUnits:x 30
-    * set *tmp374 :drawUnits:x
  1244 jump *label199 always
  1245 label *label198
-    * set *tmp374 null
  1246 label *label199
  1247 label *label197
  1248 label *label186
 
  1250 label *label28
  1251 set *tmp51 null
  1252 label *label21
-    * set *tmp49 *tmp51
  1253 jump *label19 always
  1254 label *label18
  1255 op equal *tmp376 .page 1
 
  1433 setaddr :drawBlock*retaddr *label250 (h:*label250)
  1434 call *label4 *invalid :drawBlock*retval (m:*label250) (h:*label250)
  1435 label *label250
-    * set *tmp380 null
  1436 jump *label249 always
  1437 label *label248
-    * set *tmp380 null
  1438 label *label249
  1439 sensor *tmp383 switch1 @enabled
  1440 jump *label251 equal *tmp383 false
  1441 drawflush display1
  1442 jump *label209 always
-    * set *tmp384 null
  1443 jump *label252 always
  1444 label *label251
-    * set *tmp384 null
  1445 label *label252
  1446 jump *label253 equal .pageSwitched false
  1447 drawflush display1
-    * set *tmp385 null
  1448 jump *label254 always
  1449 label *label253
-    * set *tmp385 null
  1450 label *label254
  1451 label *label208
  1452 multijump *tmp378 0 0 (m:marker2)
 
  1553 jump *label269 equal *tmp418 false
  1554 op add :displayLog:x :displayLog:x 58
  1555 set :displayLog:y 164
-    * set *tmp419 :displayLog:y
  1556 jump *label270 always
  1557 label *label269
-    * set *tmp419 null
  1558 label *label270
  1559 label *label266
  1560 label *label261
 
  1562 sensor *tmp420 switch1 @enabled
  1563 jump *label271 equal *tmp420 false
  1564 jump *label260 always
-    * set *tmp421 null
  1565 jump *label272 always
  1566 label *label271
-    * set *tmp421 null
  1567 label *label272
  1568 label *label259
  1569 op sub :displayLog:position :displayLog:position 1
 
  1572 label *label255
  1573 set *tmp377 null
  1574 label *label203
-    * set *tmp49 *tmp377
  1575 label *label19
  1576 op greaterThan *tmp422 .megas 0
  1577 jump *label273 equal *tmp422 false
  1578 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  1579 print "\n"
  1580 printflush message1
-    * set *tmp423 null
  1581 jump *label274 always
  1582 label *label273
  1583 print "[gold]Building "
 
  1600 print "\n"
  1601 printflush message1
  1602 label *label275
-    * set *tmp423 null
  1603 label *label274
  1604 sensor *tmp426 switch1 @enabled
  1605 set .pageSwitched *tmp426
 
  1611 drawflush null
  1612 draw reset
  1613 draw clear 0 0 32
-    * set *tmp427 null
  1614 jump *label277 always
  1615 label *label276
-    * set *tmp427 null
  1616 label *label277
  1617 label *label14
  1618 jump *label13 always
 
  1647 op add :unpackCfg:index :unpackCfg:index 1
  1648 read *tmp477 :unpackCfg:cfg *tmp476
  1649 op sub *tmp478 *tmp477 35
-    * set :unpackCfg:cu *tmp478
  1650 set *tmp479 :unpackCfg:index
  1651 op add :unpackCfg:index :unpackCfg:index 1
  1652 read *tmp480 :unpackCfg:cfg *tmp479
  1653 op sub *tmp481 *tmp480 35
-    * set :unpackCfg:pb *tmp481
  1654 set *tmp482 :unpackCfg:index
  1655 op add :unpackCfg:index :unpackCfg:index 1
  1656 read *tmp483 :unpackCfg:cfg *tmp482
  1657 op sub *tmp484 *tmp483 35
-    * set :unpackCfg:gr *tmp484
  1658 set *tmp485 :unpackCfg:index
  1659 op add :unpackCfg:index :unpackCfg:index 1
  1660 read *tmp486 :unpackCfg:cfg *tmp485
  1661 op sub *tmp487 *tmp486 35
-    * set :unpackCfg:si *tmp487
  1662 set *tmp488 :unpackCfg:index
  1663 op add :unpackCfg:index :unpackCfg:index 1
  1664 read *tmp489 :unpackCfg:cfg *tmp488
  1665 op sub *tmp490 *tmp489 35
-    * set :unpackCfg:ti *tmp490
  1666 set *tmp491 :unpackCfg:index
  1667 op add :unpackCfg:index :unpackCfg:index 1
  1668 read *tmp492 :unpackCfg:cfg *tmp491
  1669 op sub *tmp493 *tmp492 35
-    * set :unpackCfg:mg *tmp493
  1670 set *tmp494 :unpackCfg:index
  1671 op add :unpackCfg:index :unpackCfg:index 1
  1672 read *tmp495 :unpackCfg:cfg *tmp494
  1673 op sub *tmp496 *tmp495 35
-    * set :unpackCfg:th *tmp496
  1674 set *tmp497 :unpackCfg:index
  1675 op add :unpackCfg:index :unpackCfg:index 1
  1676 read *tmp498 :unpackCfg:cfg *tmp497
 
  1699 op and *tmp509 .blocksBuilt *tmp508
  1700 jump *label298 equal *tmp509 false
  1701 draw col %[white]
-    * set *tmp510 null
  1702 jump *label299 always
  1703 label *label298
  1704 draw color 128 255 128 128
-    * set *tmp510 null
  1705 label *label299
  1706 op and *tmp511 :drawBlock:size 1
  1707 op sub *tmp512 1 *tmp511
 
  1713 op mul *tmp517 2 :drawBlock:size
  1714 op mul *tmp518 90 :drawBlock:rotation
  1715 draw image *tmp514 *tmp516 :drawBlock:type *tmp517 *tmp518
-    * set *tmp507 null
  1716 jump *label297 always
  1717 label *label296
-    * set *tmp507 null
  1718 label *label297
  1719 label *label294
  1720 return :drawBlock*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-23 instructions):
 
    24 op equal *tmp44 .core null
    25 jump *label10 notEqual *tmp44 false
    26 label *label12
-    * sensor *tmp45 .core @x
-    * sensor *tmp46 .core @y
    27 printflush null
    28 drawflush null
    29 label *label13
 
    87 drawflush display1
    88 op add .animation .animation 1
    89 label *label22
-    * set *tmp51 null
    90 jump *label21 always
    91 label *label20
    92 draw reset
 
   136 set *tmp80 .nextUnit
   137 label *label40
   138 draw image 40 137 *tmp80 32 0
-    * set *tmp78 null
   139 jump *label38 always
   140 label *label37
   141 op div *tmp81 @tick 2
   142 op mod *tmp82 *tmp81 360
   143 op sub *tmp83 360 *tmp82
   144 draw image 40 137 @hydrogen 32 *tmp83
-    * set *tmp78 null
   145 label *label38
   146 label *label36
   147 set :drawHeader:tt @second
 
   276 set :drawMaterials:unit1 *tmp127
   277 set :drawMaterials:unit3 null
   278 set :drawMaterials:unit2 :drawMaterials:unit3
-    * set *tmp124 :drawMaterials:unit2
   279 jump *label59 always
   280 label *label58
   281 op equal *tmp128 .nextUnit @poly
 
   322 label *label63
   323 set *tmp129 *tmp137
   324 label *label61
-    * set *tmp124 *tmp129
   325 label *label59
   326 label *label57
   327 set :drawBold.1:x 22
 
   592 label *label79
   593 set *tmp171 null
   594 label *label80
-    * set *tmp147 *tmp171
   595 jump *label70 always
   596 label *label69
   597 set :drawMaterials:item @lead
 
   686 multijump *tmp220 0 0 (m:marker0)
   687 multilabel *label103 (m:marker0)
   688 label *label101
-    * set *tmp147 null
   689 label *label70
   690 jump *label55 always
   691 label *label54
 
   797 label *label127
   798 label *label128
   799 label *label121
-    * set *tmp249 null
   800 jump *label115 always
   801 label *label114
   802 set *tmp277 .totalTargets
 
   943 op lessThanEq *tmp306 :drawMaterials:count 0
   944 jump *label156 equal *tmp306 false
   945 jump *label138 always
-    * set *tmp307 null
   946 jump *label157 always
   947 label *label156
-    * set *tmp307 null
   948 label *label157
   949 jump *label147 always
   950 label *label146
 
   958 label *label134
   959 set *tmp279 null
   960 label *label135
-    * set *tmp249 *tmp279
   961 label *label115
   962 label *label55
   963 label *label53
 
  1235 label *label186
  1236 drawflush display1
  1237 label *label28
-    * set *tmp51 null
  1238 label *label21
  1239 jump *label19 always
  1240 label *label18
 
  1440 label *label209
  1441 drawflush display1
  1442 label *label204
-    * set *tmp377 null
  1443 jump *label203 always
  1444 label *label202
  1445 op sub *tmp386 .page 2
 
  1555 jump *label258 always
  1556 label *label260
  1557 label *label255
-    * set *tmp377 null
  1558 label *label203
  1559 label *label19
  1560 op greaterThan *tmp422 .megas 0
 
  1630 set *tmp476 :unpackCfg:index
  1631 op add :unpackCfg:index :unpackCfg:index 1
  1632 read *tmp477 :unpackCfg:cfg *tmp476
-    * op sub *tmp478 *tmp477 35
  1633 set *tmp479 :unpackCfg:index
  1634 op add :unpackCfg:index :unpackCfg:index 1
  1635 read *tmp480 :unpackCfg:cfg *tmp479
-    * op sub *tmp481 *tmp480 35
  1636 set *tmp482 :unpackCfg:index
  1637 op add :unpackCfg:index :unpackCfg:index 1
  1638 read *tmp483 :unpackCfg:cfg *tmp482
-    * op sub *tmp484 *tmp483 35
  1639 set *tmp485 :unpackCfg:index
  1640 op add :unpackCfg:index :unpackCfg:index 1
  1641 read *tmp486 :unpackCfg:cfg *tmp485
-    * op sub *tmp487 *tmp486 35
  1642 set *tmp488 :unpackCfg:index
  1643 op add :unpackCfg:index :unpackCfg:index 1
  1644 read *tmp489 :unpackCfg:cfg *tmp488
-    * op sub *tmp490 *tmp489 35
  1645 set *tmp491 :unpackCfg:index
  1646 op add :unpackCfg:index :unpackCfg:index 1
  1647 read *tmp492 :unpackCfg:cfg *tmp491
-    * op sub *tmp493 *tmp492 35
  1648 set *tmp494 :unpackCfg:index
  1649 op add :unpackCfg:index :unpackCfg:index 1
  1650 read *tmp495 :unpackCfg:cfg *tmp494
-    * op sub *tmp496 *tmp495 35
  1651 set *tmp497 :unpackCfg:index
  1652 op add :unpackCfg:index :unpackCfg:index 1
  1653 read *tmp498 :unpackCfg:cfg *tmp497

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-13 instructions):
 
   294 op greaterThan *tmp134 .reconstructorProgress 0
   295 op max *tmp135 .factoryProgress *tmp134
   296 set .factoryProgress *tmp135
-    * set *tmp129 .factoryProgress
   297 jump *label61 always
   298 label *label60
   299 op equal *tmp136 .nextUnit @mega
 
   319 label *label62
   320 set *tmp137 null
   321 label *label63
-    * set *tmp129 *tmp137
   322 label *label61
   323 label *label59
   324 label *label57
 
   585 label *label89
   586 set *tmp195 null
   587 label *label90
-    * set *tmp171 *tmp195
   588 jump *label80 always
   589 label *label79
-    * set *tmp171 null
   590 label *label80
   591 jump *label70 always
   592 label *label69
 
   949 multijump *tmp280 0 0 (m:marker1)
   950 multilabel *label145 (m:marker1)
   951 label *label138
-    * set *tmp279 null
   952 jump *label135 always
   953 label *label134
-    * set *tmp279 null
   954 label *label135
   955 label *label115
   956 label *label55
 
  1623 set :unpackCfg:y *tmp475
  1624 set *tmp476 :unpackCfg:index
  1625 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp477 :unpackCfg:cfg *tmp476
  1626 set *tmp479 :unpackCfg:index
  1627 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp480 :unpackCfg:cfg *tmp479
  1628 set *tmp482 :unpackCfg:index
  1629 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp483 :unpackCfg:cfg *tmp482
  1630 set *tmp485 :unpackCfg:index
  1631 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp486 :unpackCfg:cfg *tmp485
  1632 set *tmp488 :unpackCfg:index
  1633 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp489 :unpackCfg:cfg *tmp488
  1634 set *tmp491 :unpackCfg:index
  1635 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp492 :unpackCfg:cfg *tmp491
  1636 set *tmp494 :unpackCfg:index
  1637 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp495 :unpackCfg:cfg *tmp494
  1638 set *tmp497 :unpackCfg:index
  1639 op add :unpackCfg:index :unpackCfg:index 1
  1640 read *tmp498 :unpackCfg:cfg *tmp497

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-11 instructions):
 
   314 op greaterThan *tmp143 :drawMaterials:multiReconstructorProgress 0
   315 op max *tmp144 .reconstructorProgress *tmp143
   316 set .reconstructorProgress *tmp144
-    * set *tmp137 .reconstructorProgress
   317 jump *label63 always
   318 label *label62
-    * set *tmp137 null
   319 label *label63
   320 label *label61
   321 label *label59
 
   578 label *label97
   579 label *label98
   580 label *label91
-    * set *tmp195 null
   581 jump *label90 always
   582 label *label89
-    * set *tmp195 null
   583 label *label90
   584 jump *label80 always
   585 label *label79
 
  1617 op sub *tmp474 *tmp473 35
  1618 op sub *tmp475 *tmp474 7
  1619 set :unpackCfg:y *tmp475
-    * set *tmp476 :unpackCfg:index
  1620 op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp479 :unpackCfg:index
  1621 op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp482 :unpackCfg:index
  1622 op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp485 :unpackCfg:index
  1623 op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp488 :unpackCfg:index
  1624 op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp491 :unpackCfg:index
  1625 op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp494 :unpackCfg:index
  1626 op add :unpackCfg:index :unpackCfg:index 1
  1627 set *tmp497 :unpackCfg:index
  1628 op add :unpackCfg:index :unpackCfg:index 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-132 instructions):
 
    18 label *label7
    19 label *label10
    20 ubind @poly
-    * ulocate building core false @copper *tmp41 *tmp42 *tmp43 *tmp40
-    * set .core *tmp40
+   21 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
    22 label *label11
    23 op equal *tmp44 .core null
    24 jump *label10 notEqual *tmp44 false
 
    50 draw col %[white]
    51 op div *tmp54 .animation 30
    52 op min *tmp55 *tmp54 1
-    * op max *tmp56 0 *tmp55
-    * set :animate:ratio *tmp56
+   53 op max :animate:ratio 0 *tmp55
    54 set :lerp:from 40
    55 set :lerp:to 88
    56 set :lerp:ratio :animate:ratio
    57 op sub *tmp58 1 :lerp:ratio
    58 op mul *tmp59 *tmp58 :lerp:from
    59 op mul *tmp60 :lerp:ratio :lerp:to
-    * op add *tmp61 *tmp59 *tmp60
-    * set *tmp57 *tmp61
+   60 op add *tmp57 *tmp59 *tmp60
    61 label *label25
    62 set :animate:x *tmp57
    63 set :lerp.1:from 137
 
    66 op sub *tmp63 1 :lerp.1:ratio
    67 op mul *tmp64 *tmp63 :lerp.1:from
    68 op mul *tmp65 :lerp.1:ratio :lerp.1:to
-    * op add *tmp66 *tmp64 *tmp65
-    * set *tmp62 *tmp66
+   69 op add *tmp62 *tmp64 *tmp65
    70 label *label26
    71 set :animate:y *tmp62
    72 set :lerp.2:from 32
 
    75 op sub *tmp68 1 :lerp.2:ratio
    76 op mul *tmp69 *tmp68 :lerp.2:from
    77 op mul *tmp70 :lerp.2:ratio :lerp.2:to
-    * op add *tmp71 *tmp69 *tmp70
-    * set *tmp67 *tmp71
+   78 op add *tmp67 *tmp69 *tmp70
    79 label *label27
    80 set :animate:size *tmp67
    81 draw image :animate:x :animate:y @mega :animate:size 0
 
   100 draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
   101 label *label32
   102 label *label31
-    * op add *tmp73 :drawBold:x 1
-    * set :drawText.1:x *tmp73
+  103 op add :drawText.1:x :drawBold:x 1
   104 set :drawText.1:y :drawBold:y
   105 set :drawText.1:alignment :drawBold:alignment
   106 print "Goal"
 
   112 label *label33
   113 label *label30
   114 draw col %[white]
-    * op add *tmp74 .nextBlock .nextUnit
-    * set :drawHeader:count *tmp74
+  115 op add :drawHeader:count .nextBlock .nextUnit
   116 op equal *tmp75 :drawHeader:count 2
   117 jump *label35 equal *tmp75 false
   118 draw image 25 139 .nextBlock 25 0
 
   140 set :drawHeader:tt @second
   141 read *tmp84 processor2 "time"
   142 op div *tmp85 *tmp84 120
-    * op floor *tmp86 *tmp85
-    * set :drawHeader:t *tmp86
-    * op idiv *tmp87 :drawHeader:t 60
-    * set :drawHeader:m *tmp87
-    * op mod *tmp88 :drawHeader:t 60
-    * set :drawHeader:s *tmp88
+  143 op floor :drawHeader:t *tmp85
+  144 op idiv :drawHeader:m :drawHeader:t 60
+  145 op mod :drawHeader:s :drawHeader:t 60
   146 op lessThan *tmp89 :drawHeader:s 10
   147 jump *label41 equal *tmp89 false
   148 set *tmp90 "0"
 
   156 print :drawHeader:s
   157 op mul *tmp91 10 :drawHeader:t
   158 op div *tmp92 *tmp91 :drawHeader:tt
-    * op round *tmp93 *tmp92
-    * set :drawHeader:ratio *tmp93
+  159 op round :drawHeader:ratio *tmp92
   160 op idiv *tmp94 :drawHeader:ratio 10
   161 op mod *tmp95 :drawHeader:ratio 10
   162 print " (x"
 
   175 label *label43
   176 jump *label45 equal .titaniumDrill false
   177 sensor *tmp97 .titaniumDrill @titanium
-    * op max *tmp98 .titaniumDrillCount *tmp97
-    * set :drawHeader:count *tmp98
+  178 op max :drawHeader:count .titaniumDrillCount *tmp97
   179 set :drawHeader:x 170
   180 op log10 *tmp99 :drawHeader:count
-    * op floor *tmp100 *tmp99
-    * set :drawHeader:len *tmp100
+  181 op floor :drawHeader:len *tmp99
   182 set :drawText.3:x :drawHeader:x
   183 set :drawText.3:y 155
   184 set :drawText.3:alignment @topRight
 
   198 label *label45
   199 label *label46
   200 jump *label49 equal .thoriumContainer false
-    * sensor *tmp105 .thoriumContainer @thorium
-    * set :drawHeader:count *tmp105
+  201 sensor :drawHeader:count .thoriumContainer @thorium
   202 set :drawHeader:x.1 120
   203 op log10 *tmp106 :drawHeader:count
-    * op floor *tmp107 *tmp106
-    * set :drawHeader:len.1 *tmp107
+  204 op floor :drawHeader:len.1 *tmp106
   205 set :drawText.4:x :drawHeader:x.1
   206 set :drawText.4:y 155
   207 set :drawText.4:alignment @topRight
 
   226 op equal *tmp111 .nextBlock null
   227 jump *label54 equal *tmp111 false
   228 sensor *tmp113 .airFactory @progress
-    * op max *tmp114 .factoryProgress *tmp113
-    * set .factoryProgress *tmp114
+  229 op max .factoryProgress .factoryProgress *tmp113
   230 sensor *tmp115 .reconstructor @progress
-    * op max *tmp116 .reconstructorProgress *tmp115
-    * set .reconstructorProgress *tmp116
-    * sensor *tmp117 .multiReconstructor @progress
-    * set :drawMaterials:multiReconstructorProgress *tmp117
+  231 op max .reconstructorProgress .reconstructorProgress *tmp115
+  232 sensor :drawMaterials:multiReconstructorProgress .multiReconstructor @progress
   233 op equal *tmp118 .nextUnit @mono
   234 jump *label56 equal *tmp118 false
   235 set :drawMaterials:targetFactoryLead 15
   236 set :drawMaterials:targetFactorySilicon 30
   237 set .materialCount 2
-    * set *tmp120 .monos
-    * set :drawMaterials:unitCount1 *tmp120
-    * set *tmp121 .monoTarget
-    * set :drawMaterials:unitTotal1 *tmp121
-    * set *tmp122 .nextUnit
-    * set :drawMaterials:unit1 *tmp122
+  238 set :drawMaterials:unitCount1 .monos
+  239 set :drawMaterials:unitTotal1 .monoTarget
+  240 set :drawMaterials:unit1 .nextUnit
   241 set :drawMaterials:unit3 null
   242 set :drawMaterials:unit2 :drawMaterials:unit3
   243 jump *label57 always
 
   247 set :drawMaterials:targetFactoryLead 0
   248 set :drawMaterials:targetFactorySilicon 15
   249 set .materialCount 1
-    * set *tmp125 .flares
-    * set :drawMaterials:unitCount1 *tmp125
-    * set *tmp126 .flareTarget
-    * set :drawMaterials:unitTotal1 *tmp126
-    * set *tmp127 .nextUnit
-    * set :drawMaterials:unit1 *tmp127
+  250 set :drawMaterials:unitCount1 .flares
+  251 set :drawMaterials:unitTotal1 .flareTarget
+  252 set :drawMaterials:unit1 .nextUnit
   253 set :drawMaterials:unit3 null
   254 set :drawMaterials:unit2 :drawMaterials:unit3
   255 jump *label59 always
   256 label *label58
   257 op equal *tmp128 .nextUnit @poly
   258 jump *label60 equal *tmp128 false
-    * op floor *tmp130 .factoryProgress
-    * set :drawMaterials:unitCount1 *tmp130
-    * set *tmp131 .polys
-    * set :drawMaterials:unitCount2 *tmp131
+  259 op floor :drawMaterials:unitCount1 .factoryProgress
+  260 set :drawMaterials:unitCount2 .polys
   261 set :drawMaterials:unitTotal1 1
-    * set *tmp132 .polyTarget
-    * set :drawMaterials:unitTotal2 *tmp132
+  262 set :drawMaterials:unitTotal2 .polyTarget
   263 set :drawMaterials:unit1 @mono
-    * set *tmp133 .nextUnit
-    * set :drawMaterials:unit2 *tmp133
+  264 set :drawMaterials:unit2 .nextUnit
   265 set :drawMaterials:unit3 null
   266 op greaterThan *tmp134 .reconstructorProgress 0
-    * op max *tmp135 .factoryProgress *tmp134
-    * set .factoryProgress *tmp135
+  267 op max .factoryProgress .factoryProgress *tmp134
   268 jump *label61 always
   269 label *label60
   270 op equal *tmp136 .nextUnit @mega
   271 jump *label62 equal *tmp136 false
-    * op floor *tmp138 .factoryProgress
-    * set :drawMaterials:unitCount1 *tmp138
-    * op floor *tmp139 .reconstructorProgress
-    * set :drawMaterials:unitCount2 *tmp139
+  272 op floor :drawMaterials:unitCount1 .factoryProgress
+  273 op floor :drawMaterials:unitCount2 .reconstructorProgress
   274 set :drawMaterials:unitTotal1 1
   275 set :drawMaterials:unitTotal2 1
   276 set :drawMaterials:unit1 @mono
   277 set :drawMaterials:unit2 @poly
-    * set *tmp140 .nextUnit
-    * set :drawMaterials:unit3 *tmp140
+  278 set :drawMaterials:unit3 .nextUnit
   279 op greaterThan *tmp141 .reconstructorProgress 0
-    * op max *tmp142 .factoryProgress *tmp141
-    * set .factoryProgress *tmp142
+  280 op max .factoryProgress .factoryProgress *tmp141
   281 op greaterThan *tmp143 :drawMaterials:multiReconstructorProgress 0
-    * op max *tmp144 .reconstructorProgress *tmp143
-    * set .reconstructorProgress *tmp144
+  282 op max .reconstructorProgress .reconstructorProgress *tmp143
   283 jump *label63 always
   284 label *label62
   285 label *label63
 
   299 draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
   300 label *label66
   301 label *label65
-    * op add *tmp145 :drawBold.1:x 1
-    * set :drawText.6:x *tmp145
+  302 op add :drawText.6:x :drawBold.1:x 1
   303 set :drawText.6:y :drawBold.1:y
   304 set :drawText.6:alignment :drawBold.1:alignment
   305 print "Unit factories"
 
   320 set :drawItem:target 1
   321 op mul *tmp148 :drawItem:columns 176
   322 op div *tmp149 *tmp148 2
-    * op sub *tmp150 210 *tmp149
-    * set :drawItem:barLength *tmp150
-    * op add *tmp151 48 :drawItem:barLength
-    * set :drawItem:textEnd *tmp151
+  323 op sub :drawItem:barLength 210 *tmp149
+  324 op add :drawItem:textEnd 48 :drawItem:barLength
   325 op mul *tmp152 :drawItem:barLength :drawItem:current
   326 op div *tmp153 *tmp152 :drawItem:target
-    * op min *tmp154 :drawItem:barLength *tmp153
-    * set :drawItem:length *tmp154
+  327 op min :drawItem:length :drawItem:barLength *tmp153
   328 op mul *tmp155 :drawItem:col 176
   329 op div *tmp156 *tmp155 2
-    * op add *tmp157 11 *tmp156
-    * set :drawItem:iconX *tmp157
+  330 op add :drawItem:iconX 11 *tmp156
   331 op mul *tmp158 :drawItem:col 176
   332 op div *tmp159 *tmp158 2
-    * op add *tmp160 22 *tmp159
-    * set :drawItem:barX *tmp160
+  333 op add :drawItem:barX 22 *tmp159
   334 op mul *tmp161 :drawItem:col 176
   335 op div *tmp162 *tmp161 2
-    * op add *tmp163 :drawItem:textEnd *tmp162
-    * set :drawItem:textX *tmp163
+  336 op add :drawItem:textX :drawItem:textEnd *tmp162
   337 draw col %[white]
   338 op add *tmp164 :drawItem:y 5
   339 draw image :drawItem:iconX *tmp164 :drawItem:item 16 0
 
   358 draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
   359 label *label74
   360 label *label73
-    * op add *tmp167 :drawBold.2:x 1
-    * set :drawText.8:x *tmp167
+  361 op add :drawText.8:x :drawBold.2:x 1
   362 set :drawText.8:y :drawBold.2:y
   363 set :drawText.8:alignment :drawBold.2:alignment
   364 print :drawMaterials:unitCount1
 
   390 set :drawItem.1:target 1
   391 op mul *tmp172 :drawItem.1:columns 176
   392 op div *tmp173 *tmp172 2
-    * op sub *tmp174 210 *tmp173
-    * set :drawItem.1:barLength *tmp174
-    * op add *tmp175 48 :drawItem.1:barLength
-    * set :drawItem.1:textEnd *tmp175
+  393 op sub :drawItem.1:barLength 210 *tmp173
+  394 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
   395 op mul *tmp176 :drawItem.1:barLength :drawItem.1:current
   396 op div *tmp177 *tmp176 :drawItem.1:target
-    * op min *tmp178 :drawItem.1:barLength *tmp177
-    * set :drawItem.1:length *tmp178
+  397 op min :drawItem.1:length :drawItem.1:barLength *tmp177
   398 op mul *tmp179 :drawItem.1:col 176
   399 op div *tmp180 *tmp179 2
-    * op add *tmp181 11 *tmp180
-    * set :drawItem.1:iconX *tmp181
+  400 op add :drawItem.1:iconX 11 *tmp180
   401 op mul *tmp182 :drawItem.1:col 176
   402 op div *tmp183 *tmp182 2
-    * op add *tmp184 22 *tmp183
-    * set :drawItem.1:barX *tmp184
+  403 op add :drawItem.1:barX 22 *tmp183
   404 op mul *tmp185 :drawItem.1:col 176
   405 op div *tmp186 *tmp185 2
-    * op add *tmp187 :drawItem.1:textEnd *tmp186
-    * set :drawItem.1:textX *tmp187
+  406 op add :drawItem.1:textX :drawItem.1:textEnd *tmp186
   407 draw col %[white]
   408 op add *tmp188 :drawItem.1:y 5
   409 draw image :drawItem.1:iconX *tmp188 :drawItem.1:item 16 0
 
   428 draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
   429 label *label84
   430 label *label83
-    * op add *tmp191 :drawBold.3:x 1
-    * set :drawText.10:x *tmp191
+  431 op add :drawText.10:x :drawBold.3:x 1
   432 set :drawText.10:y :drawBold.3:y
   433 set :drawText.10:alignment :drawBold.3:alignment
   434 print :drawMaterials:unitCount2
 
   460 set :drawItem.2:target 1
   461 op mul *tmp196 :drawItem.2:columns 176
   462 op div *tmp197 *tmp196 2
-    * op sub *tmp198 210 *tmp197
-    * set :drawItem.2:barLength *tmp198
-    * op add *tmp199 48 :drawItem.2:barLength
-    * set :drawItem.2:textEnd *tmp199
+  463 op sub :drawItem.2:barLength 210 *tmp197
+  464 op add :drawItem.2:textEnd 48 :drawItem.2:barLength
   465 op mul *tmp200 :drawItem.2:barLength :drawItem.2:current
   466 op div *tmp201 *tmp200 :drawItem.2:target
-    * op min *tmp202 :drawItem.2:barLength *tmp201
-    * set :drawItem.2:length *tmp202
+  467 op min :drawItem.2:length :drawItem.2:barLength *tmp201
   468 op mul *tmp203 :drawItem.2:col 176
   469 op div *tmp204 *tmp203 2
-    * op add *tmp205 11 *tmp204
-    * set :drawItem.2:iconX *tmp205
+  470 op add :drawItem.2:iconX 11 *tmp204
   471 op mul *tmp206 :drawItem.2:col 176
   472 op div *tmp207 *tmp206 2
-    * op add *tmp208 22 *tmp207
-    * set :drawItem.2:barX *tmp208
+  473 op add :drawItem.2:barX 22 *tmp207
   474 op mul *tmp209 :drawItem.2:col 176
   475 op div *tmp210 *tmp209 2
-    * op add *tmp211 :drawItem.2:textEnd *tmp210
-    * set :drawItem.2:textX *tmp211
+  476 op add :drawItem.2:textX :drawItem.2:textEnd *tmp210
   477 draw col %[white]
   478 op add *tmp212 :drawItem.2:y 5
   479 draw image :drawItem.2:iconX *tmp212 :drawItem.2:item 16 0
 
   491 set :drawText.11:alignment :drawBold.4:alignment
   492 print .megas
   493 print "/"
-    * set *tmp215 .megaTarget
-    * print *tmp215
+  494 print .megaTarget
   495 set :drawPrint.11:x :drawText.11:x
   496 set :drawPrint.11:y :drawText.11:y
   497 set :drawPrint.11:alignment :drawText.11:alignment
   498 draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
   499 label *label94
   500 label *label93
-    * op add *tmp216 :drawBold.4:x 1
-    * set :drawText.12:x *tmp216
+  501 op add :drawText.12:x :drawBold.4:x 1
   502 set :drawText.12:y :drawBold.4:y
   503 set :drawText.12:alignment :drawBold.4:alignment
   504 print .megas
   505 print "/"
-    * set *tmp217 .megaTarget
-    * print *tmp217
+  506 print .megaTarget
   507 set :drawPrint.12:x :drawText.12:x
   508 set :drawPrint.12:y :drawText.12:y
   509 set :drawPrint.12:alignment :drawText.12:alignment
 
   548 set :drawItem.3:target :drawMaterials:target
   549 op mul *tmp224 :drawItem.3:columns 176
   550 op div *tmp225 *tmp224 2
-    * op sub *tmp226 210 *tmp225
-    * set :drawItem.3:barLength *tmp226
-    * op add *tmp227 48 :drawItem.3:barLength
-    * set :drawItem.3:textEnd *tmp227
+  551 op sub :drawItem.3:barLength 210 *tmp225
+  552 op add :drawItem.3:textEnd 48 :drawItem.3:barLength
   553 op mul *tmp228 :drawItem.3:barLength :drawItem.3:current
   554 op div *tmp229 *tmp228 :drawItem.3:target
-    * op min *tmp230 :drawItem.3:barLength *tmp229
-    * set :drawItem.3:length *tmp230
+  555 op min :drawItem.3:length :drawItem.3:barLength *tmp229
   556 op mul *tmp231 :drawItem.3:col 176
   557 op div *tmp232 *tmp231 2
-    * op add *tmp233 11 *tmp232
-    * set :drawItem.3:iconX *tmp233
+  558 op add :drawItem.3:iconX 11 *tmp232
   559 op mul *tmp234 :drawItem.3:col 176
   560 op div *tmp235 *tmp234 2
-    * op add *tmp236 22 *tmp235
-    * set :drawItem.3:barX *tmp236
+  561 op add :drawItem.3:barX 22 *tmp235
   562 op mul *tmp237 :drawItem.3:col 176
   563 op div *tmp238 *tmp237 2
-    * op add *tmp239 :drawItem.3:textEnd *tmp238
-    * set :drawItem.3:textX *tmp239
+  564 op add :drawItem.3:textX :drawItem.3:textEnd *tmp238
   565 draw col %[white]
   566 op add *tmp240 :drawItem.3:y 5
   567 draw image :drawItem.3:iconX *tmp240 :drawItem.3:item 16 0
 
   584 draw print :drawPrint.13:x :drawPrint.13:y :drawPrint.13:alignment
   585 label *label109
   586 label *label108
-    * op add *tmp243 :drawBold.5:x 1
-    * set :drawText.14:x *tmp243
+  587 op add :drawText.14:x :drawBold.5:x 1
   588 set :drawText.14:y :drawBold.5:y
   589 set :drawText.14:alignment :drawBold.5:alignment
   590 print :drawMaterials:target
 
   634 draw print :drawPrint.15:x :drawPrint.15:y :drawPrint.15:alignment
   635 label *label118
   636 label *label117
-    * op add *tmp251 :drawBold.6:x 1
-    * set :drawText.16:x *tmp251
+  637 op add :drawText.16:x :drawBold.6:x 1
   638 set :drawText.16:y :drawBold.6:y
   639 set :drawText.16:alignment :drawBold.6:alignment
   640 read *tmp252 processor1 ".mapAction"
 
   650 set :drawItem.4:y 90
   651 set :drawItem.4:columns 1
   652 set :drawItem.4:item @titanium
-    * read *tmp15 processor1 ".mapProgress"
-    * set :drawItem.4:current *tmp15
-    * read *tmp16 processor1 ".mapTotal"
-    * set :drawItem.4:target *tmp16
+  653 read :drawItem.4:current processor1 ".mapProgress"
+  654 read :drawItem.4:target processor1 ".mapTotal"
   655 op mul *tmp253 :drawItem.4:columns 176
   656 op div *tmp254 *tmp253 2
-    * op sub *tmp255 210 *tmp254
-    * set :drawItem.4:barLength *tmp255
-    * op add *tmp256 48 :drawItem.4:barLength
-    * set :drawItem.4:textEnd *tmp256
+  657 op sub :drawItem.4:barLength 210 *tmp254
+  658 op add :drawItem.4:textEnd 48 :drawItem.4:barLength
   659 op mul *tmp257 :drawItem.4:barLength :drawItem.4:current
   660 op div *tmp258 *tmp257 :drawItem.4:target
-    * op min *tmp259 :drawItem.4:barLength *tmp258
-    * set :drawItem.4:length *tmp259
+  661 op min :drawItem.4:length :drawItem.4:barLength *tmp258
   662 op mul *tmp260 :drawItem.4:col 176
   663 op div *tmp261 *tmp260 2
-    * op add *tmp262 11 *tmp261
-    * set :drawItem.4:iconX *tmp262
+  664 op add :drawItem.4:iconX 11 *tmp261
   665 op mul *tmp263 :drawItem.4:col 176
   666 op div *tmp264 *tmp263 2
-    * op add *tmp265 22 *tmp264
-    * set :drawItem.4:barX *tmp265
+  667 op add :drawItem.4:barX 22 *tmp264
   668 op mul *tmp266 :drawItem.4:col 176
   669 op div *tmp267 *tmp266 2
-    * op add *tmp268 :drawItem.4:textEnd *tmp267
-    * set :drawItem.4:textX *tmp268
+  670 op add :drawItem.4:textX :drawItem.4:textEnd *tmp267
   671 draw col %[white]
   672 op add *tmp269 :drawItem.4:y 5
   673 draw image :drawItem.4:iconX *tmp269 :drawItem.4:item 16 0
 
   692 draw print :drawPrint.17:x :drawPrint.17:y :drawPrint.17:alignment
   693 label *label124
   694 label *label123
-    * op add *tmp273 :drawBold.7:x 1
-    * set :drawText.18:x *tmp273
+  695 op add :drawText.18:x :drawBold.7:x 1
   696 set :drawText.18:y :drawBold.7:y
   697 set :drawText.18:alignment :drawBold.7:alignment
   698 print "x"
 
   716 label *label121
   717 jump *label115 always
   718 label *label114
-    * set *tmp277 .totalTargets
-    * set .materialCount *tmp277
+  719 set .materialCount .totalTargets
   720 set :drawMaterials:count .materialCount
   721 set :drawBold.8:x 22
   722 set :drawBold.8:y 105
 
   731 draw print :drawPrint.19:x :drawPrint.19:y :drawPrint.19:alignment
   732 label *label131
   733 label *label130
-    * op add *tmp278 :drawBold.8:x 1
-    * set :drawText.20:x *tmp278
+  734 op add :drawText.20:x :drawBold.8:x 1
   735 set :drawText.20:y :drawBold.8:y
   736 set :drawText.20:alignment :drawBold.8:alignment
   737 print "Materials"
 
   789 set :drawItem.5:target :drawMaterials:target.1
   790 op mul *tmp284 :drawItem.5:columns 176
   791 op div *tmp285 *tmp284 2
-    * op sub *tmp286 210 *tmp285
-    * set :drawItem.5:barLength *tmp286
-    * op add *tmp287 48 :drawItem.5:barLength
-    * set :drawItem.5:textEnd *tmp287
+  792 op sub :drawItem.5:barLength 210 *tmp285
+  793 op add :drawItem.5:textEnd 48 :drawItem.5:barLength
   794 op mul *tmp288 :drawItem.5:barLength :drawItem.5:current
   795 op div *tmp289 *tmp288 :drawItem.5:target
-    * op min *tmp290 :drawItem.5:barLength *tmp289
-    * set :drawItem.5:length *tmp290
+  796 op min :drawItem.5:length :drawItem.5:barLength *tmp289
   797 op mul *tmp291 :drawItem.5:col 176
   798 op div *tmp292 *tmp291 2
-    * op add *tmp293 11 *tmp292
-    * set :drawItem.5:iconX *tmp293
+  799 op add :drawItem.5:iconX 11 *tmp292
   800 op mul *tmp294 :drawItem.5:col 176
   801 op div *tmp295 *tmp294 2
-    * op add *tmp296 22 *tmp295
-    * set :drawItem.5:barX *tmp296
+  802 op add :drawItem.5:barX 22 *tmp295
   803 op mul *tmp297 :drawItem.5:col 176
   804 op div *tmp298 *tmp297 2
-    * op add *tmp299 :drawItem.5:textEnd *tmp298
-    * set :drawItem.5:textX *tmp299
+  805 op add :drawItem.5:textX :drawItem.5:textEnd *tmp298
   806 draw col %[white]
   807 op add *tmp300 :drawItem.5:y 5
   808 draw image :drawItem.5:iconX *tmp300 :drawItem.5:item 16 0
 
   825 draw print :drawPrint.21:x :drawPrint.21:y :drawPrint.21:alignment
   826 label *label151
   827 label *label150
-    * op add *tmp303 :drawBold.9:x 1
-    * set :drawText.22:x *tmp303
+  828 op add :drawText.22:x :drawBold.9:x 1
   829 set :drawText.22:y :drawBold.9:y
   830 set :drawText.22:alignment :drawBold.9:alignment
   831 print :drawMaterials:target.1
 
   889 draw print :drawPrint.23:x :drawPrint.23:y :drawPrint.23:alignment
   890 label *label163
   891 label *label162
-    * op add *tmp310 :drawBold.10:x 1
-    * set :drawText.24:x *tmp310
+  892 op add :drawText.24:x :drawBold.10:x 1
   893 set :drawText.24:y :drawBold.10:y
   894 set :drawText.24:alignment :drawBold.10:alignment
   895 print "Builder"
 
   914 set :drawItem.6:target .transportTarget
   915 op mul *tmp314 :drawItem.6:columns 176
   916 op div *tmp315 *tmp314 2
-    * op sub *tmp316 210 *tmp315
-    * set :drawItem.6:barLength *tmp316
-    * op add *tmp317 48 :drawItem.6:barLength
-    * set :drawItem.6:textEnd *tmp317
+  917 op sub :drawItem.6:barLength 210 *tmp315
+  918 op add :drawItem.6:textEnd 48 :drawItem.6:barLength
   919 op mul *tmp318 :drawItem.6:barLength :drawItem.6:current
   920 op div *tmp319 *tmp318 :drawItem.6:target
-    * op min *tmp320 :drawItem.6:barLength *tmp319
-    * set :drawItem.6:length *tmp320
+  921 op min :drawItem.6:length :drawItem.6:barLength *tmp319
   922 op mul *tmp321 :drawItem.6:col 176
   923 op div *tmp322 *tmp321 2
-    * op add *tmp323 11 *tmp322
-    * set :drawItem.6:iconX *tmp323
+  924 op add :drawItem.6:iconX 11 *tmp322
   925 op mul *tmp324 :drawItem.6:col 176
   926 op div *tmp325 *tmp324 2
-    * op add *tmp326 22 *tmp325
-    * set :drawItem.6:barX *tmp326
+  927 op add :drawItem.6:barX 22 *tmp325
   928 op mul *tmp327 :drawItem.6:col 176
   929 op div *tmp328 *tmp327 2
-    * op add *tmp329 :drawItem.6:textEnd *tmp328
-    * set :drawItem.6:textX *tmp329
+  930 op add :drawItem.6:textX :drawItem.6:textEnd *tmp328
   931 draw col %[white]
   932 op add *tmp330 :drawItem.6:y 5
   933 draw image :drawItem.6:iconX *tmp330 :drawItem.6:item 16 0
 
   943 set :drawText.25:x :drawBold.11:x
   944 set :drawText.25:y :drawBold.11:y
   945 set :drawText.25:alignment :drawBold.11:alignment
-    * set *tmp333 .transportTarget
-    * print *tmp333
+  946 print .transportTarget
   947 set :drawPrint.25:x :drawText.25:x
   948 set :drawPrint.25:y :drawText.25:y
   949 set :drawPrint.25:alignment :drawText.25:alignment
   950 draw print :drawPrint.25:x :drawPrint.25:y :drawPrint.25:alignment
   951 label *label172
   952 label *label171
-    * op add *tmp334 :drawBold.11:x 1
-    * set :drawText.26:x *tmp334
+  953 op add :drawText.26:x :drawBold.11:x 1
   954 set :drawText.26:y :drawBold.11:y
   955 set :drawText.26:alignment :drawBold.11:alignment
-    * set *tmp335 .transportTarget
-    * print *tmp335
+  956 print .transportTarget
   957 set :drawPrint.26:x :drawText.26:x
   958 set :drawPrint.26:y :drawText.26:y
   959 set :drawPrint.26:alignment :drawText.26:alignment
 
   974 label *label168
   975 jump *label167 always
   976 label *label166
-    * sensor *tmp338 @unit @firstItem
-    * set :drawUnit:unitItem *tmp338
+  977 sensor :drawUnit:unitItem @unit @firstItem
   978 sensor *tmp339 @unit @totalItems
   979 op equal *tmp340 :drawUnit:unitItem .transportItem
   980 op mul *tmp341 *tmp339 *tmp340
 
   990 set :drawItem.7:target .transportTarget
   991 op mul *tmp343 :drawItem.7:columns 176
   992 op div *tmp344 *tmp343 2
-    * op sub *tmp345 210 *tmp344
-    * set :drawItem.7:barLength *tmp345
-    * op add *tmp346 48 :drawItem.7:barLength
-    * set :drawItem.7:textEnd *tmp346
+  993 op sub :drawItem.7:barLength 210 *tmp344
+  994 op add :drawItem.7:textEnd 48 :drawItem.7:barLength
   995 op mul *tmp347 :drawItem.7:barLength :drawItem.7:current
   996 op div *tmp348 *tmp347 :drawItem.7:target
-    * op min *tmp349 :drawItem.7:barLength *tmp348
-    * set :drawItem.7:length *tmp349
+  997 op min :drawItem.7:length :drawItem.7:barLength *tmp348
   998 op mul *tmp350 :drawItem.7:col 176
   999 op div *tmp351 *tmp350 2
-    * op add *tmp352 11 *tmp351
-    * set :drawItem.7:iconX *tmp352
+ 1000 op add :drawItem.7:iconX 11 *tmp351
  1001 op mul *tmp353 :drawItem.7:col 176
  1002 op div *tmp354 *tmp353 2
-    * op add *tmp355 22 *tmp354
-    * set :drawItem.7:barX *tmp355
+ 1003 op add :drawItem.7:barX 22 *tmp354
  1004 op mul *tmp356 :drawItem.7:col 176
  1005 op div *tmp357 *tmp356 2
-    * op add *tmp358 :drawItem.7:textEnd *tmp357
-    * set :drawItem.7:textX *tmp358
+ 1006 op add :drawItem.7:textX :drawItem.7:textEnd *tmp357
  1007 draw col %[white]
  1008 op add *tmp359 :drawItem.7:y 5
  1009 draw image :drawItem.7:iconX *tmp359 :drawItem.7:item 16 0
 
  1019 set :drawText.27:x :drawBold.12:x
  1020 set :drawText.27:y :drawBold.12:y
  1021 set :drawText.27:alignment :drawBold.12:alignment
-    * set *tmp362 .transportTarget
-    * print *tmp362
+ 1022 print .transportTarget
  1023 set :drawPrint.27:x :drawText.27:x
  1024 set :drawPrint.27:y :drawText.27:y
  1025 set :drawPrint.27:alignment :drawText.27:alignment
  1026 draw print :drawPrint.27:x :drawPrint.27:y :drawPrint.27:alignment
  1027 label *label181
  1028 label *label180
-    * op add *tmp363 :drawBold.12:x 1
-    * set :drawText.28:x *tmp363
+ 1029 op add :drawText.28:x :drawBold.12:x 1
  1030 set :drawText.28:y :drawBold.12:y
  1031 set :drawText.28:alignment :drawBold.12:alignment
-    * set *tmp364 .transportTarget
-    * print *tmp364
+ 1032 print .transportTarget
  1033 set :drawPrint.28:x :drawText.28:x
  1034 set :drawPrint.28:y :drawText.28:y
  1035 set :drawPrint.28:alignment :drawText.28:alignment
 
  1299 op greaterThanEq *tmp379 :displayBaseMap:i 0
  1300 jump *label248 equal *tmp379 false
  1301 set .recentBuildIndex -1
-    * set *tmp381 :displayBaseMap:i
-    * readarr<regular> *tmp382 .BLOCKS[] *tmp381
-    * set :drawBlock:cfg *tmp382
+ 1302 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
  1303 setaddr :drawBlock*retaddr *label250 (h:*label250)
  1304 call *label4 *invalid :drawBlock*retval (m:*label250) (h:*label250)
  1305 label *label250
 
  1326 label *label204
  1327 jump *label203 always
  1328 label *label202
-    * op sub *tmp386 .page 2
-    * set :displayLog:page *tmp386
+ 1329 op sub :displayLog:page .page 2
  1330 set :displayLog:x 11
  1331 set :displayLog:y 163
-    * read *tmp387 bank1 511
-    * set :displayLog:logPosition *tmp387
-    * op sub *tmp388 511 :displayLog:logPosition
-    * set :displayLog:records *tmp388
+ 1332 read :displayLog:logPosition bank1 511
+ 1333 op sub :displayLog:records 511 :displayLog:logPosition
  1334 op sub *tmp389 :displayLog:records 1
  1335 op idiv *tmp390 *tmp389 32
  1336 op add *tmp391 *tmp390 1
-    * op max *tmp392 1 *tmp391
-    * set :displayLog:pages *tmp392
-    * op add *tmp393 :displayLog:pages 2
-    * set .numPages *tmp393
+ 1337 op max :displayLog:pages 1 *tmp391
+ 1338 op add .numPages :displayLog:pages 2
  1339 op mul *tmp394 32 :displayLog:page
-    * op sub *tmp395 511 *tmp394
-    * set :displayLog:start *tmp395
+ 1340 op sub :displayLog:start 511 *tmp394
  1341 op sub *tmp396 :displayLog:start 32
-    * op max *tmp397 :displayLog:logPosition *tmp396
-    * set :displayLog:stop *tmp397
+ 1342 op max :displayLog:stop :displayLog:logPosition *tmp396
  1343 draw col %[lightgray]
  1344 op add *tmp398 :displayLog:page 1
  1345 print *tmp398
 
  1359 op sub :displayLog:position :displayLog:start 1
  1360 label *label258
  1361 jump *label260 lessThan :displayLog:position *tmp399
-    * set *tmp400 :displayLog:position
-    * read *tmp401 bank1 *tmp400
-    * set :displayLog:record *tmp401
+ 1362 read :displayLog:record bank1 :displayLog:position
  1363 set :displayRecord:record :displayLog:record
-    * op mod *tmp402 :displayRecord:record 1000
-    * set :displayRecord:id *tmp402
+ 1364 op mod :displayRecord:id :displayRecord:record 1000
  1365 op greaterThan *tmp403 :displayRecord:id @blockCount
  1366 jump *label262 equal *tmp403 false
  1367 op sub *tmp405 :displayRecord:id @blockCount
-    * lookup unit *tmp406 *tmp405
-    * set *tmp404 *tmp406
+ 1368 lookup unit *tmp404 *tmp405
  1369 jump *label263 always
  1370 label *label262
-    * lookup block *tmp407 :displayRecord:id
-    * set *tmp404 *tmp407
+ 1371 lookup block *tmp404 :displayRecord:id
  1372 label *label263
  1373 set :displayRecord:icon *tmp404
  1374 op div *tmp408 :displayRecord:record 1000
  1375 op div *tmp409 *tmp408 120
-    * op floor *tmp410 *tmp409
-    * set :displayRecord:t *tmp410
-    * op idiv *tmp411 :displayRecord:t 60
-    * set :displayRecord:m *tmp411
-    * op mod *tmp412 :displayRecord:t 60
-    * set :displayRecord:s *tmp412
+ 1376 op floor :displayRecord:t *tmp409
+ 1377 op idiv :displayRecord:m :displayRecord:t 60
+ 1378 op mod :displayRecord:s :displayRecord:t 60
  1379 op lessThan *tmp413 :displayRecord:s 10
  1380 jump *label264 equal *tmp413 false
  1381 set *tmp414 "0"
 
  1438 print "\n"
  1439 print "==================================[]"
  1440 print "\n"
-    * set *tmp424 .status1
-    * print *tmp424
+ 1441 print .status1
  1442 print "\n"
  1443 print .status2
  1444 print .item2
 
  1447 print .block2
  1448 print ")"
  1449 print "\n"
-    * set *tmp425 .status3
-    * print *tmp425
+ 1450 print .status3
  1451 print "\n"
  1452 printflush message1
  1453 label *label275
  1454 label *label274
-    * sensor *tmp426 switch1 @enabled
-    * set .pageSwitched *tmp426
+ 1455 sensor .pageSwitched switch1 @enabled
  1456 jump *label276 equal .pageSwitched false
  1457 control enabled switch1 false
  1458 op add *tmp429 .page 1
-    * op mod *tmp430 *tmp429 .numPages
-    * set .page *tmp430
+ 1459 op mod .page *tmp429 .numPages
  1460 drawflush null
  1461 draw reset
  1462 draw clear 0 0 32
 
  1478 op add :unpackCfg:index :unpackCfg:index 1
  1479 read *tmp465 :unpackCfg:cfg *tmp464
  1480 op sub *tmp466 *tmp465 35
-    * lookup block *tmp467 *tmp466
-    * set :unpackCfg:type *tmp467
+ 1481 lookup block :unpackCfg:type *tmp466
  1482 set *tmp468 :unpackCfg:index
  1483 op add :unpackCfg:index :unpackCfg:index 1
  1484 read *tmp469 :unpackCfg:cfg *tmp468
  1485 op sub *tmp470 *tmp469 35
-    * op sub *tmp471 *tmp470 7
-    * set :unpackCfg:x *tmp471
+ 1486 op sub :unpackCfg:x *tmp470 7
  1487 set *tmp472 :unpackCfg:index
  1488 op add :unpackCfg:index :unpackCfg:index 1
  1489 read *tmp473 :unpackCfg:cfg *tmp472
  1490 op sub *tmp474 *tmp473 35
-    * op sub *tmp475 *tmp474 7
-    * set :unpackCfg:y *tmp475
+ 1491 op sub :unpackCfg:y *tmp474 7
  1492 op add :unpackCfg:index :unpackCfg:index 1
  1493 op add :unpackCfg:index :unpackCfg:index 1
  1494 op add :unpackCfg:index :unpackCfg:index 1
 
  1499 set *tmp497 :unpackCfg:index
  1500 op add :unpackCfg:index :unpackCfg:index 1
  1501 read *tmp498 :unpackCfg:cfg *tmp497
-    * op sub *tmp499 *tmp498 35
-    * set :unpackCfg:rotation *tmp499
+ 1502 op sub :unpackCfg:rotation *tmp498 35
  1503 set *tmp500 :unpackCfg:index
  1504 op add :unpackCfg:index :unpackCfg:index 1
  1505 read *tmp501 :unpackCfg:cfg *tmp500
-    * op sub *tmp502 *tmp501 35
-    * set :unpackCfg:size *tmp502
+ 1506 op sub :unpackCfg:size *tmp501 35
  1507 set *tmp503 :unpackCfg:index
  1508 op add :unpackCfg:index :unpackCfg:index 1
  1509 read *tmp504 :unpackCfg:cfg *tmp503
-    * op sub *tmp505 *tmp504 35
-    * set :unpackCfg:ind *tmp505
+ 1510 op sub :unpackCfg:ind *tmp504 35
  1511 label *label295
  1512 set :drawBlock:type :unpackCfg:type
  1513 set :drawBlock:x :unpackCfg:x
 
  1526 draw color 128 255 128 128
  1527 label *label299
  1528 op and *tmp511 :drawBlock:size 1
-    * op sub *tmp512 1 *tmp511
-    * set :drawBlock:offset *tmp512
+ 1529 op sub :drawBlock:offset 1 *tmp511
  1530 op mul *tmp513 2 :drawBlock:x
  1531 op add *tmp514 *tmp513 :drawBlock:offset
  1532 op mul *tmp515 2 :drawBlock:y

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    26 printflush null
    27 drawflush null
    28 label *label13
-    * jump *label15 equal true false
    29 jump *label16 equal .unitReset false
    30 set .reconstructorProgress 0
    31 set .factoryProgress .reconstructorProgress

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-38 instructions):
 
    20 ubind @poly
    21 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
    22 label *label11
-    * op equal *tmp44 .core null
-    * jump *label10 notEqual *tmp44 false
+   23 jump *label10 equal .core null
    24 label *label12
    25 printflush null
    26 drawflush null
 
    32 jump *label17 always
    33 label *label16
    34 label *label17
-    * op equal *tmp48 .page 0
-    * jump *label18 equal *tmp48 false
-    * op greaterThan *tmp50 .megas 0
-    * jump *label20 equal *tmp50 false
-    * op lessThan *tmp52 .animation 0
-    * jump *label23 equal *tmp52 false
+   35 jump *label18 notEqual .page 0
+   36 jump *label20 lessThanEq .megas 0
+   37 jump *label23 greaterThanEq .animation 0
    38 draw color 0 0 32 80
    39 draw rect 0 0 176 176
    40 jump *label24 always
 
   108 label *label30
   109 draw col %[white]
   110 op add :drawHeader:count .nextBlock .nextUnit
-    * op equal *tmp75 :drawHeader:count 2
-    * jump *label35 equal *tmp75 false
+  111 jump *label35 notEqual :drawHeader:count 2
   112 draw image 25 139 .nextBlock 25 0
   113 draw image 55 139 .nextUnit 25 0
   114 jump *label36 always
   115 label *label35
-    * op equal *tmp77 :drawHeader:count 1
-    * jump *label37 equal *tmp77 false
-    * op notEqual *tmp79 .nextBlock null
-    * jump *label39 equal *tmp79 false
+  116 jump *label37 notEqual :drawHeader:count 1
+  117 jump *label39 equal .nextBlock null
   118 set *tmp80 .nextBlock
   119 jump *label40 always
   120 label *label39
 
   135 op floor :drawHeader:t *tmp85
   136 op idiv :drawHeader:m :drawHeader:t 60
   137 op mod :drawHeader:s :drawHeader:t 60
-    * op lessThan *tmp89 :drawHeader:s 10
-    * jump *label41 equal *tmp89 false
+  138 jump *label41 greaterThanEq :drawHeader:s 10
   139 set *tmp90 "0"
   140 jump *label42 always
   141 label *label41
 
   214 label *label29
   215 set :drawMaterials:col 0
   216 set :drawMaterials:y 90
-    * op equal *tmp111 .nextBlock null
-    * jump *label54 equal *tmp111 false
+  217 jump *label54 notEqual .nextBlock null
   218 sensor *tmp113 .airFactory @progress
   219 op max .factoryProgress .factoryProgress *tmp113
   220 sensor *tmp115 .reconstructor @progress
   221 op max .reconstructorProgress .reconstructorProgress *tmp115
   222 sensor :drawMaterials:multiReconstructorProgress .multiReconstructor @progress
-    * op equal *tmp118 .nextUnit @mono
-    * jump *label56 equal *tmp118 false
+  223 jump *label56 notEqual .nextUnit @mono
   224 set :drawMaterials:targetFactoryLead 15
   225 set :drawMaterials:targetFactorySilicon 30
   226 set .materialCount 2
 
   231 set :drawMaterials:unit2 :drawMaterials:unit3
   232 jump *label57 always
   233 label *label56
-    * op equal *tmp123 .nextUnit @flare
-    * jump *label58 equal *tmp123 false
+  234 jump *label58 notEqual .nextUnit @flare
   235 set :drawMaterials:targetFactoryLead 0
   236 set :drawMaterials:targetFactorySilicon 15
   237 set .materialCount 1
 
   242 set :drawMaterials:unit2 :drawMaterials:unit3
   243 jump *label59 always
   244 label *label58
-    * op equal *tmp128 .nextUnit @poly
-    * jump *label60 equal *tmp128 false
+  245 jump *label60 notEqual .nextUnit @poly
   246 op floor :drawMaterials:unitCount1 .factoryProgress
   247 set :drawMaterials:unitCount2 .polys
   248 set :drawMaterials:unitTotal1 1
 
   254 op max .factoryProgress .factoryProgress *tmp134
   255 jump *label61 always
   256 label *label60
-    * op equal *tmp136 .nextUnit @mega
-    * jump *label62 equal *tmp136 false
+  257 jump *label62 notEqual .nextUnit @mega
   258 op floor :drawMaterials:unitCount1 .factoryProgress
   259 op floor :drawMaterials:unitCount2 .reconstructorProgress
   260 set :drawMaterials:unitTotal1 1
 
   296 label *label68
   297 label *label67
   298 label *label64
-    * op greaterThan *tmp146 .factoryProgress 0
-    * jump *label69 equal *tmp146 false
+  299 jump *label69 lessThanEq .factoryProgress 0
   300 set :drawItem:col 0
   301 set :drawItem:y 90
   302 set :drawItem:columns 1
 
   357 label *label75
   358 label *label72
   359 op add :drawItem:col :drawItem:col 1
-    * op greaterThanEq *tmp168 :drawItem:col :drawItem:columns
-    * jump *label77 equal *tmp168 false
+  360 jump *label77 lessThan :drawItem:col :drawItem:columns
   361 set :drawItem:col 0
   362 op sub :drawItem:y :drawItem:y 15
   363 jump *label78 always
   364 label *label77
   365 label *label78
   366 label *label71
-    * op notEqual *tmp170 :drawMaterials:unit2 null
-    * jump *label79 equal *tmp170 false
+  367 jump *label79 equal :drawMaterials:unit2 null
   368 set :drawItem.1:col 0
   369 set :drawItem.1:y 75
   370 set :drawItem.1:columns 1
 
   425 label *label85
   426 label *label82
   427 op add :drawItem.1:col :drawItem.1:col 1
-    * op greaterThanEq *tmp192 :drawItem.1:col :drawItem.1:columns
-    * jump *label87 equal *tmp192 false
+  428 jump *label87 lessThan :drawItem.1:col :drawItem.1:columns
   429 set :drawItem.1:col 0
   430 op sub :drawItem.1:y :drawItem.1:y 15
   431 jump *label88 always
   432 label *label87
   433 label *label88
   434 label *label81
-    * op notEqual *tmp194 :drawMaterials:unit3 null
-    * jump *label89 equal *tmp194 false
+  435 jump *label89 equal :drawMaterials:unit3 null
   436 set :drawItem.2:col 0
   437 set :drawItem.2:y 60
   438 set :drawItem.2:columns 1
 
   493 label *label95
   494 label *label92
   495 op add :drawItem.2:col :drawItem.2:col 1
-    * op greaterThanEq *tmp218 :drawItem.2:col :drawItem.2:columns
-    * jump *label97 equal *tmp218 false
+  496 jump *label97 lessThan :drawItem.2:col :drawItem.2:columns
   497 set :drawItem.2:col 0
   498 op sub :drawItem.2:y :drawItem.2:y 15
   499 jump *label98 always
 
   517 set :drawMaterials:target :drawMaterials:targetFactorySilicon
   518 setaddr *tmp220 *label103
   519 label *label99
-    * op greaterThan *tmp221 :drawMaterials:target 0
-    * jump *label104 equal *tmp221 false
+  520 jump *label104 lessThanEq :drawMaterials:target 0
   521 sensor *tmp223 .airFactory :drawMaterials:item
   522 set :drawItem.3:col :drawMaterials:col
   523 set :drawItem.3:y :drawMaterials:y
 
   575 label *label110
   576 label *label107
   577 op add :drawItem.3:col :drawItem.3:col 1
-    * op greaterThanEq *tmp244 :drawItem.3:col :drawItem.3:columns
-    * jump *label112 equal *tmp244 false
+  578 jump *label112 lessThan :drawItem.3:col :drawItem.3:columns
   579 set :drawItem.3:col 0
   580 op sub :drawItem.3:y :drawItem.3:y 15
   581 jump *label113 always
 
   684 label *label125
   685 label *label122
   686 op add :drawItem.4:col :drawItem.4:col 1
-    * op greaterThanEq *tmp275 :drawItem.4:col :drawItem.4:columns
-    * jump *label127 equal *tmp275 false
+  687 jump *label127 lessThan :drawItem.4:col :drawItem.4:columns
   688 set :drawItem.4:col 0
   689 op sub :drawItem.4:y :drawItem.4:y 15
   690 jump *label128 always
 
   755 set :drawMaterials:target.1 .targetThorium
   756 setaddr *tmp280 *label145
   757 label *label136
-    * op greaterThan *tmp281 :drawMaterials:target.1 0
-    * jump *label146 equal *tmp281 false
+  758 jump *label146 lessThanEq :drawMaterials:target.1 0
   759 sensor *tmp283 .core :drawMaterials:item.1
   760 set :drawItem.5:col :drawMaterials:col
   761 set :drawItem.5:y :drawMaterials:y
 
   813 label *label152
   814 label *label149
   815 op add :drawItem.5:col :drawItem.5:col 1
-    * op greaterThanEq *tmp304 :drawItem.5:col :drawItem.5:columns
-    * jump *label154 equal *tmp304 false
+  816 jump *label154 lessThan :drawItem.5:col :drawItem.5:columns
   817 set :drawItem.5:col 0
   818 op sub :drawItem.5:y :drawItem.5:y 15
   819 jump *label155 always
 
   823 set :drawMaterials:col :drawItem.5:col
   824 set :drawMaterials:y :drawItem.5:y
   825 op sub :drawMaterials:count :drawMaterials:count 1
-    * op lessThanEq *tmp306 :drawMaterials:count 0
-    * jump *label156 equal *tmp306 false
+  826 jump *label156 greaterThan :drawMaterials:count 0
   827 jump *label138 always
   828 jump *label157 always
   829 label *label156
 
   842 label *label55
   843 label *label53
   844 draw col %[white]
-    * op lessThan *tmp308 .materialCount 4
-    * jump *label159 equal *tmp308 false
+  845 jump *label159 greaterThanEq .materialCount 4
   846 set *tmp309 40
   847 jump *label160 always
   848 label *label159
 
   873 label *label165
   874 label *label164
   875 label *label161
-    * op equal *tmp311 .transportItem null
-    * jump *label166 equal *tmp311 false
+  876 jump *label166 notEqual .transportItem null
   877 op sub *tmp313 :drawUnit:y 15
   878 set :drawUnit.1:item @poly
   879 set :drawUnit.1:items 0
 
   934 label *label173
   935 label *label170
   936 op add :drawItem.6:col :drawItem.6:col 1
-    * op greaterThanEq *tmp336 :drawItem.6:col :drawItem.6:columns
-    * jump *label175 equal *tmp336 false
+  937 jump *label175 lessThan :drawItem.6:col :drawItem.6:columns
   938 set :drawItem.6:col 0
   939 op sub :drawItem.6:y :drawItem.6:y 15
   940 jump *label176 always
 
  1009 label *label182
  1010 label *label179
  1011 op add :drawItem.7:col :drawItem.7:col 1
-    * op greaterThanEq *tmp365 :drawItem.7:col :drawItem.7:columns
-    * jump *label184 equal *tmp365 false
+ 1012 jump *label184 lessThan :drawItem.7:col :drawItem.7:columns
  1013 set :drawItem.7:col 0
  1014 op sub :drawItem.7:y :drawItem.7:y 15
  1015 jump *label185 always
 
  1024 draw col %[white]
  1025 set :drawUnitCount:type @poly
  1026 set :drawUnitCount:count .polys
-    * op greaterThan *tmp367 :drawUnitCount:count 0
-    * jump *label188 equal *tmp367 false
+ 1027 jump *label188 lessThanEq :drawUnitCount:count 0
  1028 op sub *tmp369 :drawUnits:x 20
  1029 draw image *tmp369 127 :drawUnitCount:type 12 0
  1030 set :drawText.29:x :drawUnits:x
 
  1045 label *label187
  1046 set :drawUnitCount.1:type @mono
  1047 set :drawUnitCount.1:count .monos
-    * op greaterThan *tmp370 :drawUnitCount.1:count 0
-    * jump *label193 equal *tmp370 false
+ 1048 jump *label193 lessThanEq :drawUnitCount.1:count 0
  1049 op sub *tmp372 :drawUnits:x 20
  1050 draw image *tmp372 127 :drawUnitCount.1:type 12 0
  1051 set :drawText.30:x :drawUnits:x
 
  1066 label *label192
  1067 set :drawUnitCount.2:type @flare
  1068 set :drawUnitCount.2:count .flares
-    * op greaterThan *tmp373 :drawUnitCount.2:count 0
-    * jump *label198 equal *tmp373 false
+ 1069 jump *label198 lessThanEq :drawUnitCount.2:count 0
  1070 op sub *tmp375 :drawUnits:x 20
  1071 draw image *tmp375 127 :drawUnitCount.2:type 12 0
  1072 set :drawText.31:x :drawUnits:x
 
  1091 label *label21
  1092 jump *label19 always
  1093 label *label18
-    * op equal *tmp376 .page 1
-    * jump *label202 equal *tmp376 false
+ 1094 jump *label202 notEqual .page 1
  1095 draw reset
  1096 draw clear 0 0 32
  1097 draw col %[gold]
 
  1262 call *label4 *invalid :drawBlock*retval (m:*label247) (h:*label247)
  1263 label *label247
  1264 set :displayBaseMap:i .recentBuildIndex
-    * op greaterThanEq *tmp379 :displayBaseMap:i 0
-    * jump *label248 equal *tmp379 false
+ 1265 jump *label248 lessThan :displayBaseMap:i 0
  1266 set .recentBuildIndex -1
  1267 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
  1268 setaddr :drawBlock*retaddr *label250 (h:*label250)
 
  1327 read :displayLog:record bank1 :displayLog:position
  1328 set :displayRecord:record :displayLog:record
  1329 op mod :displayRecord:id :displayRecord:record 1000
-    * op greaterThan *tmp403 :displayRecord:id @blockCount
-    * jump *label262 equal *tmp403 false
+ 1330 jump *label262 lessThanEq :displayRecord:id @blockCount
  1331 op sub *tmp405 :displayRecord:id @blockCount
  1332 lookup unit *tmp404 *tmp405
  1333 jump *label263 always
 
  1340 op floor :displayRecord:t *tmp409
  1341 op idiv :displayRecord:m :displayRecord:t 60
  1342 op mod :displayRecord:s :displayRecord:t 60
-    * op lessThan *tmp413 :displayRecord:s 10
-    * jump *label264 equal *tmp413 false
+ 1343 jump *label264 greaterThanEq :displayRecord:s 10
  1344 set *tmp414 "0"
  1345 jump *label265 always
  1346 label *label264
 
  1366 label *label268
  1367 label *label267
  1368 op sub :displayLog:y :displayLog:y 15
-    * op lessThan *tmp418 :displayLog:y 10
-    * jump *label269 equal *tmp418 false
+ 1369 jump *label269 greaterThanEq :displayLog:y 10
  1370 op add :displayLog:x :displayLog:x 58
  1371 set :displayLog:y 164
  1372 jump *label270 always
 
  1388 label *label255
  1389 label *label203
  1390 label *label19
-    * op greaterThan *tmp422 .megas 0
-    * jump *label273 equal *tmp422 false
+ 1391 jump *label273 lessThanEq .megas 0
  1392 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  1393 print "\n"
  1394 printflush message1

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-28 instructions):
 
    29 set .reconstructorProgress 0
    30 set .factoryProgress .reconstructorProgress
    31 set .unitReset false
-    * jump *label17 always
    32 label *label16
    33 label *label17
    34 jump *label18 notEqual .page 0
 
   184 op mul *tmp102 7 :drawHeader:len
   185 op sub *tmp103 *tmp101 *tmp102
   186 draw image *tmp103 146 @titanium 12 0
-    * jump *label46 always
   187 label *label45
   188 label *label46
   189 jump *label49 equal .thoriumContainer false
 
   206 op mul *tmp109 7 :drawHeader:len.1
   207 op sub *tmp110 *tmp108 *tmp109
   208 draw image *tmp110 146 @thorium 12 0
-    * jump *label50 always
   209 label *label49
   210 label *label50
   211 label *label29
 
   263 op max .factoryProgress .factoryProgress *tmp141
   264 op greaterThan *tmp143 :drawMaterials:multiReconstructorProgress 0
   265 op max .reconstructorProgress .reconstructorProgress *tmp143
-    * jump *label63 always
   266 label *label62
   267 label *label63
   268 label *label61
 
   356 jump *label77 lessThan :drawItem:col :drawItem:columns
   357 set :drawItem:col 0
   358 op sub :drawItem:y :drawItem:y 15
-    * jump *label78 always
   359 label *label77
   360 label *label78
   361 label *label71
 
   423 jump *label87 lessThan :drawItem.1:col :drawItem.1:columns
   424 set :drawItem.1:col 0
   425 op sub :drawItem.1:y :drawItem.1:y 15
-    * jump *label88 always
   426 label *label87
   427 label *label88
   428 label *label81
 
   490 jump *label97 lessThan :drawItem.2:col :drawItem.2:columns
   491 set :drawItem.2:col 0
   492 op sub :drawItem.2:y :drawItem.2:y 15
-    * jump *label98 always
   493 label *label97
   494 label *label98
   495 label *label91
-    * jump *label90 always
   496 label *label89
   497 label *label90
-    * jump *label80 always
   498 label *label79
   499 label *label80
   500 jump *label70 always
 
   569 jump *label112 lessThan :drawItem.3:col :drawItem.3:columns
   570 set :drawItem.3:col 0
   571 op sub :drawItem.3:y :drawItem.3:y 15
-    * jump *label113 always
   572 label *label112
   573 label *label113
   574 label *label106
   575 set :drawMaterials:col :drawItem.3:col
   576 set :drawMaterials:y :drawItem.3:y
-    * jump *label105 always
   577 label *label104
   578 label *label105
   579 label *label100
 
   676 jump *label127 lessThan :drawItem.4:col :drawItem.4:columns
   677 set :drawItem.4:col 0
   678 op sub :drawItem.4:y :drawItem.4:y 15
-    * jump *label128 always
   679 label *label127
   680 label *label128
   681 label *label121
 
   804 jump *label154 lessThan :drawItem.5:col :drawItem.5:columns
   805 set :drawItem.5:col 0
   806 op sub :drawItem.5:y :drawItem.5:y 15
-    * jump *label155 always
   807 label *label154
   808 label *label155
   809 label *label148
 
   812 op sub :drawMaterials:count :drawMaterials:count 1
   813 jump *label156 greaterThan :drawMaterials:count 0
   814 jump *label138 always
-    * jump *label157 always
   815 label *label156
   816 label *label157
-    * jump *label147 always
   817 label *label146
   818 label *label147
   819 label *label137
   820 multijump *tmp280 0 0 (m:marker1)
   821 multilabel *label145 (m:marker1)
   822 label *label138
-    * jump *label135 always
   823 label *label134
   824 label *label135
   825 label *label115
 
   921 jump *label175 lessThan :drawItem.6:col :drawItem.6:columns
   922 set :drawItem.6:col 0
   923 op sub :drawItem.6:y :drawItem.6:y 15
-    * jump *label176 always
   924 label *label175
   925 label *label176
   926 label *label169
 
   995 jump *label184 lessThan :drawItem.7:col :drawItem.7:columns
   996 set :drawItem.7:col 0
   997 op sub :drawItem.7:y :drawItem.7:y 15
-    * jump *label185 always
   998 label *label184
   999 label *label185
  1000 label *label178
 
  1021 label *label191
  1022 label *label190
  1023 op sub :drawUnits:x :drawUnits:x 30
-    * jump *label189 always
  1024 label *label188
  1025 label *label189
  1026 label *label187
 
  1041 label *label196
  1042 label *label195
  1043 op sub :drawUnits:x :drawUnits:x 30
-    * jump *label194 always
  1044 label *label193
  1045 label *label194
  1046 label *label192
 
  1061 label *label201
  1062 label *label200
  1063 op sub :drawUnits:x :drawUnits:x 30
-    * jump *label199 always
  1064 label *label198
  1065 label *label199
  1066 label *label197
 
  1247 setaddr :drawBlock*retaddr *label250 (h:*label250)
  1248 call *label4 *invalid :drawBlock*retval (m:*label250) (h:*label250)
  1249 label *label250
-    * jump *label249 always
  1250 label *label248
  1251 label *label249
  1252 sensor *tmp383 switch1 @enabled
  1253 jump *label251 equal *tmp383 false
  1254 drawflush display1
  1255 jump *label209 always
-    * jump *label252 always
  1256 label *label251
  1257 label *label252
  1258 jump *label253 equal .pageSwitched false
  1259 drawflush display1
-    * jump *label254 always
  1260 label *label253
  1261 label *label254
  1262 label *label208
 
  1345 jump *label269 greaterThanEq :displayLog:y 10
  1346 op add :displayLog:x :displayLog:x 58
  1347 set :displayLog:y 164
-    * jump *label270 always
  1348 label *label269
  1349 label *label270
  1350 label *label266
 
  1353 sensor *tmp420 switch1 @enabled
  1354 jump *label271 equal *tmp420 false
  1355 jump *label260 always
-    * jump *label272 always
  1356 label *label271
  1357 label *label272
  1358 label *label259
 
  1395 drawflush null
  1396 draw reset
  1397 draw clear 0 0 32
-    * jump *label277 always
  1398 label *label276
  1399 label *label277
  1400 label *label14
 
  1468 op mul *tmp517 2 :drawBlock:size
  1469 op mul *tmp518 90 :drawBlock:rotation
  1470 draw image *tmp514 *tmp516 :drawBlock:type *tmp517 *tmp518
-    * jump *label297 always
  1471 label *label296
  1472 label *label297
  1473 label *label294

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
   130 label *label36
   131 set :drawHeader:tt @second
   132 read *tmp84 processor2 "time"
-    * op div *tmp85 *tmp84 120
-    * op floor :drawHeader:t *tmp85
+  133 op idiv :drawHeader:t *tmp84 120
   134 op idiv :drawHeader:m :drawHeader:t 60
   135 op mod :drawHeader:s :drawHeader:t 60
   136 jump *label41 greaterThanEq :drawHeader:s 10
 
  1311 label *label263
  1312 set :displayRecord:icon *tmp404
  1313 op div *tmp408 :displayRecord:record 1000
-    * op div *tmp409 *tmp408 120
-    * op floor :displayRecord:t *tmp409
+ 1314 op idiv :displayRecord:t *tmp408 120
  1315 op idiv :displayRecord:m :displayRecord:t 60
  1316 op mod :displayRecord:s :displayRecord:t 60
  1317 jump *label264 greaterThanEq :displayRecord:s 10

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-9 instructions):
 
    27 label *label13
    28 jump *label16 equal .unitReset false
    29 set .reconstructorProgress 0
-    * set .factoryProgress .reconstructorProgress
+   30 set .factoryProgress 0
    31 set .unitReset false
    32 label *label16
    33 label *label17
 
    48 set :lerp:from 40
    49 set :lerp:to 88
    50 set :lerp:ratio :animate:ratio
-    * op sub *tmp58 1 :lerp:ratio
-    * op mul *tmp59 *tmp58 :lerp:from
-    * op mul *tmp60 :lerp:ratio :lerp:to
+   51 op sub *tmp58 1 :animate:ratio
+   52 op mul *tmp59 *tmp58 40
+   53 op mul *tmp60 :animate:ratio 88
    54 op add *tmp57 *tmp59 *tmp60
    55 label *label25
    56 set :animate:x *tmp57
    57 set :lerp.1:from 137
    58 set :lerp.1:to 88
    59 set :lerp.1:ratio :animate:ratio
-    * op sub *tmp63 1 :lerp.1:ratio
-    * op mul *tmp64 *tmp63 :lerp.1:from
-    * op mul *tmp65 :lerp.1:ratio :lerp.1:to
+   60 op sub *tmp63 1 :animate:ratio
+   61 op mul *tmp64 *tmp58 137
+   62 op mul *tmp65 :animate:ratio 88
    63 op add *tmp62 *tmp64 *tmp65
    64 label *label26
    65 set :animate:y *tmp62
    66 set :lerp.2:from 32
    67 set :lerp.2:to 168
    68 set :lerp.2:ratio :animate:ratio
-    * op sub *tmp68 1 :lerp.2:ratio
-    * op mul *tmp69 *tmp68 :lerp.2:from
-    * op mul *tmp70 :lerp.2:ratio :lerp.2:to
+   69 op sub *tmp68 1 :animate:ratio
+   70 op mul *tmp69 *tmp58 32
+   71 op mul *tmp70 :animate:ratio 168
    72 op add *tmp67 *tmp69 *tmp70
    73 label *label27
    74 set :animate:size *tmp67
-    * draw image :animate:x :animate:y @mega :animate:size 0
+   75 draw image *tmp57 *tmp62 @mega *tmp67 0
    76 drawflush display1
    77 op add .animation .animation 1
    78 label *label22
 
    84 set :drawBold:x 40
    85 set :drawBold:y 161
    86 set :drawBold:alignment @bottom
-    * set :drawText:x :drawBold:x
-    * set :drawText:y :drawBold:y
-    * set :drawText:alignment :drawBold:alignment
+   87 set :drawText:x 40
+   88 set :drawText:y 161
+   89 set :drawText:alignment @bottom
    90 print "Goal"
-    * set :drawPrint:x :drawText:x
-    * set :drawPrint:y :drawText:y
-    * set :drawPrint:alignment :drawText:alignment
-    * draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
+   91 set :drawPrint:x :drawBold:x
+   92 set :drawPrint:y :drawBold:y
+   93 set :drawPrint:alignment :drawBold:alignment
+   94 draw print :drawText:x :drawText:y :drawText:alignment
    95 label *label32
    96 label *label31
-    * op add :drawText.1:x :drawBold:x 1
-    * set :drawText.1:y :drawBold:y
-    * set :drawText.1:alignment :drawBold:alignment
+   97 op add :drawText.1:x 40 1
+   98 set :drawText.1:y 161
+   99 set :drawText.1:alignment @bottom
   100 print "Goal"
-    * set :drawPrint.1:x :drawText.1:x
-    * set :drawPrint.1:y :drawText.1:y
-    * set :drawPrint.1:alignment :drawText.1:alignment
-    * draw print :drawPrint.1:x :drawPrint.1:y :drawPrint.1:alignment
+  101 set :drawPrint.1:x 41
+  102 set :drawPrint.1:y :drawBold:y
+  103 set :drawPrint.1:alignment :drawBold:alignment
+  104 draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
   105 label *label34
   106 label *label33
   107 label *label30
 
   156 set :drawText.2:y 172
   157 set :drawText.2:alignment @topRight
   158 print ")"
-    * set :drawPrint.2:x :drawText.2:x
-    * set :drawPrint.2:y :drawText.2:y
-    * set :drawPrint.2:alignment :drawText.2:alignment
-    * draw print :drawPrint.2:x :drawPrint.2:y :drawPrint.2:alignment
+  159 set :drawPrint.2:x 170
+  160 set :drawPrint.2:y 172
+  161 set :drawPrint.2:alignment @topRight
+  162 draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
   163 label *label44
   164 label *label43
   165 jump *label45 equal .titaniumDrill false
 
   168 set :drawHeader:x 170
   169 op log10 *tmp99 :drawHeader:count
   170 op floor :drawHeader:len *tmp99
-    * set :drawText.3:x :drawHeader:x
+  171 set :drawText.3:x 170
   172 set :drawText.3:y 155
   173 set :drawText.3:alignment @topRight
   174 print "x"
   175 print :drawHeader:count
-    * set :drawPrint.3:x :drawText.3:x
-    * set :drawPrint.3:y :drawText.3:y
-    * set :drawPrint.3:alignment :drawText.3:alignment
-    * draw print :drawPrint.3:x :drawPrint.3:y :drawPrint.3:alignment
+  176 set :drawPrint.3:x :drawHeader:x
+  177 set :drawPrint.3:y 155
+  178 set :drawPrint.3:alignment @topRight
+  179 draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
   180 label *label48
   181 label *label47
-    * op sub *tmp101 :drawHeader:x 20
+  182 op sub *tmp101 170 20
   183 op mul *tmp102 7 :drawHeader:len
-    * op sub *tmp103 *tmp101 *tmp102
+  184 op sub *tmp103 150 *tmp102
   185 draw image *tmp103 146 @titanium 12 0
   186 label *label45
   187 label *label46
 
   190 set :drawHeader:x.1 120
   191 op log10 *tmp106 :drawHeader:count
   192 op floor :drawHeader:len.1 *tmp106
-    * set :drawText.4:x :drawHeader:x.1
+  193 set :drawText.4:x 120
   194 set :drawText.4:y 155
   195 set :drawText.4:alignment @topRight
   196 print "x"
   197 print :drawHeader:count
-    * set :drawPrint.4:x :drawText.4:x
-    * set :drawPrint.4:y :drawText.4:y
-    * set :drawPrint.4:alignment :drawText.4:alignment
-    * draw print :drawPrint.4:x :drawPrint.4:y :drawPrint.4:alignment
+  198 set :drawPrint.4:x :drawHeader:x.1
+  199 set :drawPrint.4:y 155
+  200 set :drawPrint.4:alignment @topRight
+  201 draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
   202 label *label52
   203 label *label51
-    * op sub *tmp108 :drawHeader:x.1 20
+  204 op sub *tmp108 120 20
   205 op mul *tmp109 7 :drawHeader:len.1
-    * op sub *tmp110 *tmp108 *tmp109
+  206 op sub *tmp110 100 *tmp109
   207 draw image *tmp110 146 @thorium 12 0
   208 label *label49
   209 label *label50
 
   224 set :drawMaterials:unitTotal1 .monoTarget
   225 set :drawMaterials:unit1 .nextUnit
   226 set :drawMaterials:unit3 null
-    * set :drawMaterials:unit2 :drawMaterials:unit3
+  227 set :drawMaterials:unit2 null
   228 jump *label57 always
   229 label *label56
   230 jump *label58 notEqual .nextUnit @flare
 
   235 set :drawMaterials:unitTotal1 .flareTarget
   236 set :drawMaterials:unit1 .nextUnit
   237 set :drawMaterials:unit3 null
-    * set :drawMaterials:unit2 :drawMaterials:unit3
+  238 set :drawMaterials:unit2 null
   239 jump *label59 always
   240 label *label58
   241 jump *label60 notEqual .nextUnit @poly
 
   270 set :drawBold.1:x 22
   271 set :drawBold.1:y 105
   272 set :drawBold.1:alignment @bottomLeft
-    * set :drawText.5:x :drawBold.1:x
-    * set :drawText.5:y :drawBold.1:y
-    * set :drawText.5:alignment :drawBold.1:alignment
+  273 set :drawText.5:x 22
+  274 set :drawText.5:y 105
+  275 set :drawText.5:alignment @bottomLeft
   276 print "Unit factories"
-    * set :drawPrint.5:x :drawText.5:x
-    * set :drawPrint.5:y :drawText.5:y
-    * set :drawPrint.5:alignment :drawText.5:alignment
-    * draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
+  277 set :drawPrint.5:x :drawBold.1:x
+  278 set :drawPrint.5:y :drawBold.1:y
+  279 set :drawPrint.5:alignment :drawBold.1:alignment
+  280 draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
   281 label *label66
   282 label *label65
-    * op add :drawText.6:x :drawBold.1:x 1
-    * set :drawText.6:y :drawBold.1:y
-    * set :drawText.6:alignment :drawBold.1:alignment
+  283 op add :drawText.6:x 22 1
+  284 set :drawText.6:y 105
+  285 set :drawText.6:alignment @bottomLeft
   286 print "Unit factories"
-    * set :drawPrint.6:x :drawText.6:x
-    * set :drawPrint.6:y :drawText.6:y
-    * set :drawPrint.6:alignment :drawText.6:alignment
-    * draw print :drawPrint.6:x :drawPrint.6:y :drawPrint.6:alignment
+  287 set :drawPrint.6:x 23
+  288 set :drawPrint.6:y :drawBold.1:y
+  289 set :drawPrint.6:alignment :drawBold.1:alignment
+  290 draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
   291 label *label68
   292 label *label67
   293 label *label64
 
   298 set :drawItem:item :drawMaterials:unit1
   299 set :drawItem:current .factoryProgress
   300 set :drawItem:target 1
-    * op mul *tmp148 :drawItem:columns 176
-    * op div *tmp149 *tmp148 2
-    * op sub :drawItem:barLength 210 *tmp149
-    * op add :drawItem:textEnd 48 :drawItem:barLength
-    * op mul *tmp152 :drawItem:barLength :drawItem:current
-    * op div *tmp153 *tmp152 :drawItem:target
-    * op min :drawItem:length :drawItem:barLength *tmp153
-    * op mul *tmp155 :drawItem:col 176
-    * op div *tmp156 *tmp155 2
-    * op add :drawItem:iconX 11 *tmp156
-    * op mul *tmp158 :drawItem:col 176
-    * op div *tmp159 *tmp158 2
-    * op add :drawItem:barX 22 *tmp159
-    * op mul *tmp161 :drawItem:col 176
-    * op div *tmp162 *tmp161 2
-    * op add :drawItem:textX :drawItem:textEnd *tmp162
+  301 op mul *tmp148 1 176
+  302 op div *tmp149 176 2
+  303 op sub :drawItem:barLength 210 88
+  304 op add :drawItem:textEnd 48 122
+  305 op mul *tmp152 122 .factoryProgress
+  306 op div *tmp153 *tmp152 1
+  307 op min :drawItem:length 122 *tmp153
+  308 op mul *tmp155 0 176
+  309 op div *tmp156 0 2
+  310 op add :drawItem:iconX 11 0
+  311 op mul *tmp158 0 176
+  312 op div *tmp159 0 2
+  313 op add :drawItem:barX 22 0
+  314 op mul *tmp161 0 176
+  315 op div *tmp162 0 2
+  316 op add :drawItem:textX 170 0
   317 draw col %[white]
-    * op add *tmp164 :drawItem:y 5
-    * draw image :drawItem:iconX *tmp164 :drawItem:item 16 0
+  318 op add *tmp164 90 5
+  319 draw image 11 95 :drawMaterials:unit1 16 0
   320 draw color 0 128 0 255
-    * draw rect :drawItem:barX :drawItem:y :drawItem:length 10
+  321 draw rect 22 90 :drawItem:length 10
   322 draw color 0 255 0 255
-    * draw lineRect :drawItem:barX :drawItem:y :drawItem:barLength 10
-    * op add *tmp165 :drawItem:y 5
-    * op add *tmp166 *tmp165 2
-    * set :drawBold.2:x :drawItem:textX
-    * set :drawBold.2:y *tmp166
+  323 draw lineRect 22 90 122 10
+  324 op add *tmp165 90 5
+  325 op add *tmp166 95 2
+  326 set :drawBold.2:x 170
+  327 set :drawBold.2:y 97
   328 set :drawBold.2:alignment @right
-    * set :drawText.7:x :drawBold.2:x
-    * set :drawText.7:y :drawBold.2:y
-    * set :drawText.7:alignment :drawBold.2:alignment
+  329 set :drawText.7:x :drawItem:textX
+  330 set :drawText.7:y *tmp166
+  331 set :drawText.7:alignment @right
   332 print :drawMaterials:unitCount1
   333 print "/"
   334 print :drawMaterials:unitTotal1
-    * set :drawPrint.7:x :drawText.7:x
-    * set :drawPrint.7:y :drawText.7:y
-    * set :drawPrint.7:alignment :drawText.7:alignment
-    * draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
+  335 set :drawPrint.7:x :drawBold.2:x
+  336 set :drawPrint.7:y :drawBold.2:y
+  337 set :drawPrint.7:alignment :drawBold.2:alignment
+  338 draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
   339 label *label74
   340 label *label73
-    * op add :drawText.8:x :drawBold.2:x 1
-    * set :drawText.8:y :drawBold.2:y
-    * set :drawText.8:alignment :drawBold.2:alignment
+  341 op add :drawText.8:x :drawItem:textX 1
+  342 set :drawText.8:y *tmp166
+  343 set :drawText.8:alignment @right
   344 print :drawMaterials:unitCount1
   345 print "/"
   346 print :drawMaterials:unitTotal1
   347 set :drawPrint.8:x :drawText.8:x
-    * set :drawPrint.8:y :drawText.8:y
-    * set :drawPrint.8:alignment :drawText.8:alignment
-    * draw print :drawPrint.8:x :drawPrint.8:y :drawPrint.8:alignment
+  348 set :drawPrint.8:y :drawBold.2:y
+  349 set :drawPrint.8:alignment :drawBold.2:alignment
+  350 draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
   351 label *label76
   352 label *label75
   353 label *label72
-    * op add :drawItem:col :drawItem:col 1
-    * jump *label77 lessThan :drawItem:col :drawItem:columns
-    * set :drawItem:col 0
-    * op sub :drawItem:y :drawItem:y 15
+  354 op add :drawItem:col 0 1
+  355 jump *label77 lessThan 1 1
+  356 op sub :drawItem:y 90 15
   357 label *label77
   358 label *label78
   359 label *label71
 
   364 set :drawItem.1:item :drawMaterials:unit2
   365 set :drawItem.1:current .reconstructorProgress
   366 set :drawItem.1:target 1
-    * op mul *tmp172 :drawItem.1:columns 176
-    * op div *tmp173 *tmp172 2
-    * op sub :drawItem.1:barLength 210 *tmp173
-    * op add :drawItem.1:textEnd 48 :drawItem.1:barLength
-    * op mul *tmp176 :drawItem.1:barLength :drawItem.1:current
-    * op div *tmp177 *tmp176 :drawItem.1:target
-    * op min :drawItem.1:length :drawItem.1:barLength *tmp177
-    * op mul *tmp179 :drawItem.1:col 176
-    * op div *tmp180 *tmp179 2
-    * op add :drawItem.1:iconX 11 *tmp180
-    * op mul *tmp182 :drawItem.1:col 176
-    * op div *tmp183 *tmp182 2
-    * op add :drawItem.1:barX 22 *tmp183
-    * op mul *tmp185 :drawItem.1:col 176
-    * op div *tmp186 *tmp185 2
-    * op add :drawItem.1:textX :drawItem.1:textEnd *tmp186
+  367 op mul *tmp172 1 176
+  368 op div *tmp173 176 2
+  369 op sub :drawItem.1:barLength 210 88
+  370 op add :drawItem.1:textEnd 48 122
+  371 op mul *tmp176 122 .reconstructorProgress
+  372 op div *tmp177 *tmp176 1
+  373 op min :drawItem.1:length 122 *tmp177
+  374 op mul *tmp179 0 176
+  375 op div *tmp180 0 2
+  376 op add :drawItem.1:iconX 11 0
+  377 op mul *tmp182 0 176
+  378 op div *tmp183 0 2
+  379 op add :drawItem.1:barX 22 0
+  380 op mul *tmp185 0 176
+  381 op div *tmp186 0 2
+  382 op add :drawItem.1:textX 170 0
   383 draw col %[white]
-    * op add *tmp188 :drawItem.1:y 5
-    * draw image :drawItem.1:iconX *tmp188 :drawItem.1:item 16 0
+  384 op add *tmp188 75 5
+  385 draw image 11 80 :drawMaterials:unit2 16 0
   386 draw color 0 128 0 255
-    * draw rect :drawItem.1:barX :drawItem.1:y :drawItem.1:length 10
+  387 draw rect 22 75 :drawItem.1:length 10
   388 draw color 0 255 0 255
-    * draw lineRect :drawItem.1:barX :drawItem.1:y :drawItem.1:barLength 10
-    * op add *tmp189 :drawItem.1:y 5
-    * op add *tmp190 *tmp189 2
-    * set :drawBold.3:x :drawItem.1:textX
-    * set :drawBold.3:y *tmp190
+  389 draw lineRect 22 75 122 10
+  390 op add *tmp189 75 5
+  391 op add *tmp190 80 2
+  392 set :drawBold.3:x 170
+  393 set :drawBold.3:y 82
   394 set :drawBold.3:alignment @right
-    * set :drawText.9:x :drawBold.3:x
-    * set :drawText.9:y :drawBold.3:y
-    * set :drawText.9:alignment :drawBold.3:alignment
+  395 set :drawText.9:x :drawItem.1:textX
+  396 set :drawText.9:y *tmp190
+  397 set :drawText.9:alignment @right
   398 print :drawMaterials:unitCount2
   399 print "/"
   400 print :drawMaterials:unitTotal2
-    * set :drawPrint.9:x :drawText.9:x
-    * set :drawPrint.9:y :drawText.9:y
-    * set :drawPrint.9:alignment :drawText.9:alignment
-    * draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
+  401 set :drawPrint.9:x :drawBold.3:x
+  402 set :drawPrint.9:y :drawBold.3:y
+  403 set :drawPrint.9:alignment :drawBold.3:alignment
+  404 draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
   405 label *label84
   406 label *label83
-    * op add :drawText.10:x :drawBold.3:x 1
-    * set :drawText.10:y :drawBold.3:y
-    * set :drawText.10:alignment :drawBold.3:alignment
+  407 op add :drawText.10:x :drawItem.1:textX 1
+  408 set :drawText.10:y *tmp190
+  409 set :drawText.10:alignment @right
   410 print :drawMaterials:unitCount2
   411 print "/"
   412 print :drawMaterials:unitTotal2
   413 set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawText.10:y
-    * set :drawPrint.10:alignment :drawText.10:alignment
-    * draw print :drawPrint.10:x :drawPrint.10:y :drawPrint.10:alignment
+  414 set :drawPrint.10:y :drawBold.3:y
+  415 set :drawPrint.10:alignment :drawBold.3:alignment
+  416 draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
   417 label *label86
   418 label *label85
   419 label *label82
-    * op add :drawItem.1:col :drawItem.1:col 1
-    * jump *label87 lessThan :drawItem.1:col :drawItem.1:columns
-    * set :drawItem.1:col 0
-    * op sub :drawItem.1:y :drawItem.1:y 15
+  420 op add :drawItem.1:col 0 1
+  421 jump *label87 lessThan 1 1
+  422 op sub :drawItem.1:y 75 15
   423 label *label87
   424 label *label88
   425 label *label81
 
   430 set :drawItem.2:item :drawMaterials:unit3
   431 set :drawItem.2:current :drawMaterials:multiReconstructorProgress
   432 set :drawItem.2:target 1
-    * op mul *tmp196 :drawItem.2:columns 176
-    * op div *tmp197 *tmp196 2
-    * op sub :drawItem.2:barLength 210 *tmp197
-    * op add :drawItem.2:textEnd 48 :drawItem.2:barLength
-    * op mul *tmp200 :drawItem.2:barLength :drawItem.2:current
-    * op div *tmp201 *tmp200 :drawItem.2:target
-    * op min :drawItem.2:length :drawItem.2:barLength *tmp201
-    * op mul *tmp203 :drawItem.2:col 176
-    * op div *tmp204 *tmp203 2
-    * op add :drawItem.2:iconX 11 *tmp204
-    * op mul *tmp206 :drawItem.2:col 176
-    * op div *tmp207 *tmp206 2
-    * op add :drawItem.2:barX 22 *tmp207
-    * op mul *tmp209 :drawItem.2:col 176
-    * op div *tmp210 *tmp209 2
-    * op add :drawItem.2:textX :drawItem.2:textEnd *tmp210
+  433 op mul *tmp196 1 176
+  434 op div *tmp197 176 2
+  435 op sub :drawItem.2:barLength 210 88
+  436 op add :drawItem.2:textEnd 48 122
+  437 op mul *tmp200 122 :drawMaterials:multiReconstructorProgress
+  438 op div *tmp201 *tmp200 1
+  439 op min :drawItem.2:length 122 *tmp201
+  440 op mul *tmp203 0 176
+  441 op div *tmp204 0 2
+  442 op add :drawItem.2:iconX 11 0
+  443 op mul *tmp206 0 176
+  444 op div *tmp207 0 2
+  445 op add :drawItem.2:barX 22 0
+  446 op mul *tmp209 0 176
+  447 op div *tmp210 0 2
+  448 op add :drawItem.2:textX 170 0
   449 draw col %[white]
-    * op add *tmp212 :drawItem.2:y 5
-    * draw image :drawItem.2:iconX *tmp212 :drawItem.2:item 16 0
+  450 op add *tmp212 60 5
+  451 draw image 11 65 :drawMaterials:unit3 16 0
   452 draw color 0 128 0 255
-    * draw rect :drawItem.2:barX :drawItem.2:y :drawItem.2:length 10
+  453 draw rect 22 60 :drawItem.2:length 10
   454 draw color 0 255 0 255
-    * draw lineRect :drawItem.2:barX :drawItem.2:y :drawItem.2:barLength 10
-    * op add *tmp213 :drawItem.2:y 5
-    * op add *tmp214 *tmp213 2
-    * set :drawBold.4:x :drawItem.2:textX
-    * set :drawBold.4:y *tmp214
+  455 draw lineRect 22 60 122 10
+  456 op add *tmp213 60 5
+  457 op add *tmp214 65 2
+  458 set :drawBold.4:x 170
+  459 set :drawBold.4:y 67
   460 set :drawBold.4:alignment @right
-    * set :drawText.11:x :drawBold.4:x
-    * set :drawText.11:y :drawBold.4:y
-    * set :drawText.11:alignment :drawBold.4:alignment
+  461 set :drawText.11:x :drawItem.2:textX
+  462 set :drawText.11:y *tmp214
+  463 set :drawText.11:alignment @right
   464 print .megas
   465 print "/"
   466 print .megaTarget
-    * set :drawPrint.11:x :drawText.11:x
-    * set :drawPrint.11:y :drawText.11:y
-    * set :drawPrint.11:alignment :drawText.11:alignment
-    * draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
+  467 set :drawPrint.11:x :drawBold.4:x
+  468 set :drawPrint.11:y :drawBold.4:y
+  469 set :drawPrint.11:alignment :drawBold.4:alignment
+  470 draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
   471 label *label94
   472 label *label93
-    * op add :drawText.12:x :drawBold.4:x 1
-    * set :drawText.12:y :drawBold.4:y
-    * set :drawText.12:alignment :drawBold.4:alignment
+  473 op add :drawText.12:x :drawItem.2:textX 1
+  474 set :drawText.12:y *tmp214
+  475 set :drawText.12:alignment @right
   476 print .megas
   477 print "/"
   478 print .megaTarget
   479 set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawText.12:y
-    * set :drawPrint.12:alignment :drawText.12:alignment
-    * draw print :drawPrint.12:x :drawPrint.12:y :drawPrint.12:alignment
+  480 set :drawPrint.12:y :drawBold.4:y
+  481 set :drawPrint.12:alignment :drawBold.4:alignment
+  482 draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
   483 label *label96
   484 label *label95
   485 label *label92
-    * op add :drawItem.2:col :drawItem.2:col 1
-    * jump *label97 lessThan :drawItem.2:col :drawItem.2:columns
-    * set :drawItem.2:col 0
-    * op sub :drawItem.2:y :drawItem.2:y 15
+  486 op add :drawItem.2:col 0 1
+  487 jump *label97 lessThan 1 1
+  488 op sub :drawItem.2:y 60 15
   489 label *label97
   490 label *label98
   491 label *label91
 
   512 set :drawItem.3:item :drawMaterials:item
   513 set :drawItem.3:current *tmp223
   514 set :drawItem.3:target :drawMaterials:target
-    * op mul *tmp224 :drawItem.3:columns 176
-    * op div *tmp225 *tmp224 2
-    * op sub :drawItem.3:barLength 210 *tmp225
-    * op add :drawItem.3:textEnd 48 :drawItem.3:barLength
-    * op mul *tmp228 :drawItem.3:barLength :drawItem.3:current
-    * op div *tmp229 *tmp228 :drawItem.3:target
-    * op min :drawItem.3:length :drawItem.3:barLength *tmp229
-    * op mul *tmp231 :drawItem.3:col 176
-    * op div *tmp232 *tmp231 2
+  515 op mul *tmp224 1 176
+  516 op div *tmp225 176 2
+  517 op sub :drawItem.3:barLength 210 88
+  518 op add :drawItem.3:textEnd 48 122
+  519 op mul *tmp228 122 *tmp223
+  520 op div *tmp229 *tmp228 :drawMaterials:target
+  521 op min :drawItem.3:length 122 *tmp229
+  522 op mul *tmp231 :drawMaterials:col 176
+  523 op mul *tmp232 :drawItem.3:col 88
   524 op add :drawItem.3:iconX 11 *tmp232
-    * op mul *tmp234 :drawItem.3:col 176
-    * op div *tmp235 *tmp234 2
-    * op add :drawItem.3:barX 22 *tmp235
-    * op mul *tmp237 :drawItem.3:col 176
-    * op div *tmp238 *tmp237 2
-    * op add :drawItem.3:textX :drawItem.3:textEnd *tmp238
+  525 op mul *tmp234 :drawMaterials:col 176
+  526 op div *tmp235 *tmp231 2
+  527 op add :drawItem.3:barX 22 *tmp232
+  528 op mul *tmp237 :drawMaterials:col 176
+  529 op div *tmp238 *tmp231 2
+  530 op add :drawItem.3:textX 170 *tmp232
   531 draw col %[white]
-    * op add *tmp240 :drawItem.3:y 5
-    * draw image :drawItem.3:iconX *tmp240 :drawItem.3:item 16 0
+  532 op add *tmp240 :drawMaterials:y 5
+  533 draw image :drawItem.3:iconX *tmp240 :drawMaterials:item 16 0
   534 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawItem.3:y :drawItem.3:length 10
+  535 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
   536 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawItem.3:y :drawItem.3:barLength 10
-    * op add *tmp241 :drawItem.3:y 5
-    * op add *tmp242 *tmp241 2
+  537 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  538 op add *tmp241 :drawMaterials:y 5
+  539 op add *tmp242 *tmp240 2
   540 set :drawBold.5:x :drawItem.3:textX
   541 set :drawBold.5:y *tmp242
   542 set :drawBold.5:alignment @right
-    * set :drawText.13:x :drawBold.5:x
-    * set :drawText.13:y :drawBold.5:y
-    * set :drawText.13:alignment :drawBold.5:alignment
+  543 set :drawText.13:x :drawItem.3:textX
+  544 set :drawText.13:y *tmp242
+  545 set :drawText.13:alignment @right
   546 print :drawMaterials:target
-    * set :drawPrint.13:x :drawText.13:x
-    * set :drawPrint.13:y :drawText.13:y
-    * set :drawPrint.13:alignment :drawText.13:alignment
-    * draw print :drawPrint.13:x :drawPrint.13:y :drawPrint.13:alignment
+  547 set :drawPrint.13:x :drawBold.5:x
+  548 set :drawPrint.13:y :drawBold.5:y
+  549 set :drawPrint.13:alignment :drawBold.5:alignment
+  550 draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
   551 label *label109
   552 label *label108
-    * op add :drawText.14:x :drawBold.5:x 1
-    * set :drawText.14:y :drawBold.5:y
-    * set :drawText.14:alignment :drawBold.5:alignment
+  553 op add :drawText.14:x :drawItem.3:textX 1
+  554 set :drawText.14:y *tmp242
+  555 set :drawText.14:alignment @right
   556 print :drawMaterials:target
   557 set :drawPrint.14:x :drawText.14:x
-    * set :drawPrint.14:y :drawText.14:y
-    * set :drawPrint.14:alignment :drawText.14:alignment
-    * draw print :drawPrint.14:x :drawPrint.14:y :drawPrint.14:alignment
+  558 set :drawPrint.14:y :drawBold.5:y
+  559 set :drawPrint.14:alignment :drawBold.5:alignment
+  560 draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
   561 label *label111
   562 label *label110
   563 label *label107
-    * op add :drawItem.3:col :drawItem.3:col 1
-    * jump *label112 lessThan :drawItem.3:col :drawItem.3:columns
+  564 op add :drawItem.3:col :drawMaterials:col 1
+  565 jump *label112 lessThan :drawItem.3:col 1
   566 set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawItem.3:y 15
+  567 op sub :drawItem.3:y :drawMaterials:y 15
   568 label *label112
   569 label *label113
   570 label *label106
 
   586 set :drawBold.6:x 22
   587 set :drawBold.6:y 105
   588 set :drawBold.6:alignment @bottomLeft
-    * set :drawText.15:x :drawBold.6:x
-    * set :drawText.15:y :drawBold.6:y
-    * set :drawText.15:alignment :drawBold.6:alignment
+  589 set :drawText.15:x 22
+  590 set :drawText.15:y 105
+  591 set :drawText.15:alignment @bottomLeft
   592 read *tmp250 processor1 ".mapAction"
   593 print *tmp250
-    * set :drawPrint.15:x :drawText.15:x
-    * set :drawPrint.15:y :drawText.15:y
-    * set :drawPrint.15:alignment :drawText.15:alignment
-    * draw print :drawPrint.15:x :drawPrint.15:y :drawPrint.15:alignment
+  594 set :drawPrint.15:x :drawBold.6:x
+  595 set :drawPrint.15:y :drawBold.6:y
+  596 set :drawPrint.15:alignment :drawBold.6:alignment
+  597 draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
   598 label *label118
   599 label *label117
-    * op add :drawText.16:x :drawBold.6:x 1
-    * set :drawText.16:y :drawBold.6:y
-    * set :drawText.16:alignment :drawBold.6:alignment
+  600 op add :drawText.16:x 22 1
+  601 set :drawText.16:y 105
+  602 set :drawText.16:alignment @bottomLeft
   603 read *tmp252 processor1 ".mapAction"
   604 print *tmp252
-    * set :drawPrint.16:x :drawText.16:x
-    * set :drawPrint.16:y :drawText.16:y
-    * set :drawPrint.16:alignment :drawText.16:alignment
-    * draw print :drawPrint.16:x :drawPrint.16:y :drawPrint.16:alignment
+  605 set :drawPrint.16:x 23
+  606 set :drawPrint.16:y :drawBold.6:y
+  607 set :drawPrint.16:alignment :drawBold.6:alignment
+  608 draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
   609 label *label120
   610 label *label119
   611 label *label116
 
   615 set :drawItem.4:item @titanium
   616 read :drawItem.4:current processor1 ".mapProgress"
   617 read :drawItem.4:target processor1 ".mapTotal"
-    * op mul *tmp253 :drawItem.4:columns 176
-    * op div *tmp254 *tmp253 2
-    * op sub :drawItem.4:barLength 210 *tmp254
-    * op add :drawItem.4:textEnd 48 :drawItem.4:barLength
-    * op mul *tmp257 :drawItem.4:barLength :drawItem.4:current
+  618 op mul *tmp253 1 176
+  619 op div *tmp254 176 2
+  620 op sub :drawItem.4:barLength 210 88
+  621 op add :drawItem.4:textEnd 48 122
+  622 op mul *tmp257 122 :drawItem.4:current
   623 op div *tmp258 *tmp257 :drawItem.4:target
-    * op min :drawItem.4:length :drawItem.4:barLength *tmp258
-    * op mul *tmp260 :drawItem.4:col 176
-    * op div *tmp261 *tmp260 2
-    * op add :drawItem.4:iconX 11 *tmp261
-    * op mul *tmp263 :drawItem.4:col 176
-    * op div *tmp264 *tmp263 2
-    * op add :drawItem.4:barX 22 *tmp264
-    * op mul *tmp266 :drawItem.4:col 176
-    * op div *tmp267 *tmp266 2
-    * op add :drawItem.4:textX :drawItem.4:textEnd *tmp267
+  624 op min :drawItem.4:length 122 *tmp258
+  625 op mul *tmp260 0 176
+  626 op div *tmp261 0 2
+  627 op add :drawItem.4:iconX 11 0
+  628 op mul *tmp263 0 176
+  629 op div *tmp264 0 2
+  630 op add :drawItem.4:barX 22 0
+  631 op mul *tmp266 0 176
+  632 op div *tmp267 0 2
+  633 op add :drawItem.4:textX 170 0
   634 draw col %[white]
-    * op add *tmp269 :drawItem.4:y 5
-    * draw image :drawItem.4:iconX *tmp269 :drawItem.4:item 16 0
+  635 op add *tmp269 90 5
+  636 draw image 11 95 @titanium 16 0
   637 draw color 0 128 0 255
-    * draw rect :drawItem.4:barX :drawItem.4:y :drawItem.4:length 10
+  638 draw rect 22 90 :drawItem.4:length 10
   639 draw color 0 255 0 255
-    * draw lineRect :drawItem.4:barX :drawItem.4:y :drawItem.4:barLength 10
-    * op add *tmp270 :drawItem.4:y 5
-    * op add *tmp271 *tmp270 2
-    * set :drawBold.7:x :drawItem.4:textX
-    * set :drawBold.7:y *tmp271
+  640 draw lineRect 22 90 122 10
+  641 op add *tmp270 90 5
+  642 op add *tmp271 95 2
+  643 set :drawBold.7:x 170
+  644 set :drawBold.7:y 97
   645 set :drawBold.7:alignment @right
-    * set :drawText.17:x :drawBold.7:x
-    * set :drawText.17:y :drawBold.7:y
-    * set :drawText.17:alignment :drawBold.7:alignment
+  646 set :drawText.17:x :drawItem.4:textX
+  647 set :drawText.17:y *tmp271
+  648 set :drawText.17:alignment @right
   649 print "x"
   650 read *tmp272 processor1 ".mapSpots"
   651 print *tmp272
-    * set :drawPrint.17:x :drawText.17:x
-    * set :drawPrint.17:y :drawText.17:y
-    * set :drawPrint.17:alignment :drawText.17:alignment
-    * draw print :drawPrint.17:x :drawPrint.17:y :drawPrint.17:alignment
+  652 set :drawPrint.17:x :drawBold.7:x
+  653 set :drawPrint.17:y :drawBold.7:y
+  654 set :drawPrint.17:alignment :drawBold.7:alignment
+  655 draw print :drawText.17:x :drawText.17:y :drawText.17:alignment
   656 label *label124
   657 label *label123
-    * op add :drawText.18:x :drawBold.7:x 1
-    * set :drawText.18:y :drawBold.7:y
-    * set :drawText.18:alignment :drawBold.7:alignment
+  658 op add :drawText.18:x :drawItem.4:textX 1
+  659 set :drawText.18:y *tmp271
+  660 set :drawText.18:alignment @right
   661 print "x"
   662 read *tmp274 processor1 ".mapSpots"
   663 print *tmp274
   664 set :drawPrint.18:x :drawText.18:x
-    * set :drawPrint.18:y :drawText.18:y
-    * set :drawPrint.18:alignment :drawText.18:alignment
-    * draw print :drawPrint.18:x :drawPrint.18:y :drawPrint.18:alignment
+  665 set :drawPrint.18:y :drawBold.7:y
+  666 set :drawPrint.18:alignment :drawBold.7:alignment
+  667 draw print :drawText.18:x :drawText.18:y :drawText.18:alignment
   668 label *label126
   669 label *label125
   670 label *label122
-    * op add :drawItem.4:col :drawItem.4:col 1
-    * jump *label127 lessThan :drawItem.4:col :drawItem.4:columns
-    * set :drawItem.4:col 0
-    * op sub :drawItem.4:y :drawItem.4:y 15
+  671 op add :drawItem.4:col 0 1
+  672 jump *label127 lessThan 1 1
+  673 op sub :drawItem.4:y 90 15
   674 label *label127
   675 label *label128
   676 label *label121
 
   681 set :drawBold.8:x 22
   682 set :drawBold.8:y 105
   683 set :drawBold.8:alignment @bottomLeft
-    * set :drawText.19:x :drawBold.8:x
-    * set :drawText.19:y :drawBold.8:y
-    * set :drawText.19:alignment :drawBold.8:alignment
+  684 set :drawText.19:x 22
+  685 set :drawText.19:y 105
+  686 set :drawText.19:alignment @bottomLeft
   687 print "Materials"
-    * set :drawPrint.19:x :drawText.19:x
-    * set :drawPrint.19:y :drawText.19:y
-    * set :drawPrint.19:alignment :drawText.19:alignment
-    * draw print :drawPrint.19:x :drawPrint.19:y :drawPrint.19:alignment
+  688 set :drawPrint.19:x :drawBold.8:x
+  689 set :drawPrint.19:y :drawBold.8:y
+  690 set :drawPrint.19:alignment :drawBold.8:alignment
+  691 draw print :drawText.19:x :drawText.19:y :drawText.19:alignment
   692 label *label131
   693 label *label130
-    * op add :drawText.20:x :drawBold.8:x 1
-    * set :drawText.20:y :drawBold.8:y
-    * set :drawText.20:alignment :drawBold.8:alignment
+  694 op add :drawText.20:x 22 1
+  695 set :drawText.20:y 105
+  696 set :drawText.20:alignment @bottomLeft
   697 print "Materials"
-    * set :drawPrint.20:x :drawText.20:x
-    * set :drawPrint.20:y :drawText.20:y
-    * set :drawPrint.20:alignment :drawText.20:alignment
-    * draw print :drawPrint.20:x :drawPrint.20:y :drawPrint.20:alignment
+  698 set :drawPrint.20:x 23
+  699 set :drawPrint.20:y :drawBold.8:y
+  700 set :drawPrint.20:alignment :drawBold.8:alignment
+  701 draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
   702 label *label133
   703 label *label132
   704 label *label129
   705 set :drawMaterials:columns 1
-    * jump *label134 equal :drawMaterials:count false
+  706 jump *label134 equal .materialCount false
   707 set :drawMaterials:item.1 @copper
   708 set :drawMaterials:target.1 .targetCopper
   709 setaddr *tmp280 *label139
 
   742 sensor *tmp283 .core :drawMaterials:item.1
   743 set :drawItem.5:col :drawMaterials:col
   744 set :drawItem.5:y :drawMaterials:y
-    * set :drawItem.5:columns :drawMaterials:columns
+  745 set :drawItem.5:columns 1
   746 set :drawItem.5:item :drawMaterials:item.1
   747 set :drawItem.5:current *tmp283
   748 set :drawItem.5:target :drawMaterials:target.1
-    * op mul *tmp284 :drawItem.5:columns 176
-    * op div *tmp285 *tmp284 2
+  749 op mul *tmp284 :drawMaterials:columns 176
+  750 op mul *tmp285 :drawItem.5:columns 88
   751 op sub :drawItem.5:barLength 210 *tmp285
   752 op add :drawItem.5:textEnd 48 :drawItem.5:barLength
-    * op mul *tmp288 :drawItem.5:barLength :drawItem.5:current
-    * op div *tmp289 *tmp288 :drawItem.5:target
+  753 op mul *tmp288 :drawItem.5:barLength *tmp283
+  754 op div *tmp289 *tmp288 :drawMaterials:target.1
   755 op min :drawItem.5:length :drawItem.5:barLength *tmp289
-    * op mul *tmp291 :drawItem.5:col 176
-    * op div *tmp292 *tmp291 2
+  756 op mul *tmp291 :drawMaterials:col 176
+  757 op mul *tmp292 :drawItem.5:col 88
   758 op add :drawItem.5:iconX 11 *tmp292
-    * op mul *tmp294 :drawItem.5:col 176
-    * op div *tmp295 *tmp294 2
-    * op add :drawItem.5:barX 22 *tmp295
-    * op mul *tmp297 :drawItem.5:col 176
-    * op div *tmp298 *tmp297 2
-    * op add :drawItem.5:textX :drawItem.5:textEnd *tmp298
+  759 op mul *tmp294 :drawMaterials:col 176
+  760 op div *tmp295 *tmp291 2
+  761 op add :drawItem.5:barX 22 *tmp292
+  762 op mul *tmp297 :drawMaterials:col 176
+  763 op div *tmp298 *tmp291 2
+  764 op add :drawItem.5:textX :drawItem.5:textEnd *tmp292
   765 draw col %[white]
-    * op add *tmp300 :drawItem.5:y 5
-    * draw image :drawItem.5:iconX *tmp300 :drawItem.5:item 16 0
+  766 op add *tmp300 :drawMaterials:y 5
+  767 draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
   768 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawItem.5:y :drawItem.5:length 10
+  769 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   770 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawItem.5:y :drawItem.5:barLength 10
-    * op add *tmp301 :drawItem.5:y 5
-    * op add *tmp302 *tmp301 2
+  771 draw lineRect :drawItem.5:barX :drawMaterials:y :drawItem.5:barLength 10
+  772 op add *tmp301 :drawMaterials:y 5
+  773 op add *tmp302 *tmp300 2
   774 set :drawBold.9:x :drawItem.5:textX
   775 set :drawBold.9:y *tmp302
   776 set :drawBold.9:alignment @right
-    * set :drawText.21:x :drawBold.9:x
-    * set :drawText.21:y :drawBold.9:y
-    * set :drawText.21:alignment :drawBold.9:alignment
+  777 set :drawText.21:x :drawItem.5:textX
+  778 set :drawText.21:y *tmp302
+  779 set :drawText.21:alignment @right
   780 print :drawMaterials:target.1
-    * set :drawPrint.21:x :drawText.21:x
-    * set :drawPrint.21:y :drawText.21:y
-    * set :drawPrint.21:alignment :drawText.21:alignment
-    * draw print :drawPrint.21:x :drawPrint.21:y :drawPrint.21:alignment
+  781 set :drawPrint.21:x :drawBold.9:x
+  782 set :drawPrint.21:y :drawBold.9:y
+  783 set :drawPrint.21:alignment :drawBold.9:alignment
+  784 draw print :drawText.21:x :drawText.21:y :drawText.21:alignment
   785 label *label151
   786 label *label150
-    * op add :drawText.22:x :drawBold.9:x 1
-    * set :drawText.22:y :drawBold.9:y
-    * set :drawText.22:alignment :drawBold.9:alignment
+  787 op add :drawText.22:x :drawItem.5:textX 1
+  788 set :drawText.22:y *tmp302
+  789 set :drawText.22:alignment @right
   790 print :drawMaterials:target.1
   791 set :drawPrint.22:x :drawText.22:x
-    * set :drawPrint.22:y :drawText.22:y
-    * set :drawPrint.22:alignment :drawText.22:alignment
-    * draw print :drawPrint.22:x :drawPrint.22:y :drawPrint.22:alignment
+  792 set :drawPrint.22:y :drawBold.9:y
+  793 set :drawPrint.22:alignment :drawBold.9:alignment
+  794 draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
   795 label *label153
   796 label *label152
   797 label *label149
-    * op add :drawItem.5:col :drawItem.5:col 1
-    * jump *label154 lessThan :drawItem.5:col :drawItem.5:columns
+  798 op add :drawItem.5:col :drawMaterials:col 1
+  799 jump *label154 lessThan :drawItem.5:col :drawMaterials:columns
   800 set :drawItem.5:col 0
-    * op sub :drawItem.5:y :drawItem.5:y 15
+  801 op sub :drawItem.5:y :drawMaterials:y 15
   802 label *label154
   803 label *label155
   804 label *label148
 
   829 label *label160
   830 set :drawUnit:y *tmp309
   831 set :drawBold.10:x 22
-    * set :drawBold.10:y :drawUnit:y
+  832 set :drawBold.10:y *tmp309
   833 set :drawBold.10:alignment @bottomLeft
-    * set :drawText.23:x :drawBold.10:x
-    * set :drawText.23:y :drawBold.10:y
-    * set :drawText.23:alignment :drawBold.10:alignment
+  834 set :drawText.23:x 22
+  835 set :drawText.23:y :drawUnit:y
+  836 set :drawText.23:alignment @bottomLeft
   837 print "Builder"
-    * set :drawPrint.23:x :drawText.23:x
-    * set :drawPrint.23:y :drawText.23:y
-    * set :drawPrint.23:alignment :drawText.23:alignment
-    * draw print :drawPrint.23:x :drawPrint.23:y :drawPrint.23:alignment
+  838 set :drawPrint.23:x :drawBold.10:x
+  839 set :drawPrint.23:y :drawBold.10:y
+  840 set :drawPrint.23:alignment :drawBold.10:alignment
+  841 draw print :drawText.23:x :drawText.23:y :drawText.23:alignment
   842 label *label163
   843 label *label162
-    * op add :drawText.24:x :drawBold.10:x 1
-    * set :drawText.24:y :drawBold.10:y
-    * set :drawText.24:alignment :drawBold.10:alignment
+  844 op add :drawText.24:x 22 1
+  845 set :drawText.24:y :drawUnit:y
+  846 set :drawText.24:alignment @bottomLeft
   847 print "Builder"
-    * set :drawPrint.24:x :drawText.24:x
-    * set :drawPrint.24:y :drawText.24:y
-    * set :drawPrint.24:alignment :drawText.24:alignment
-    * draw print :drawPrint.24:x :drawPrint.24:y :drawPrint.24:alignment
+  848 set :drawPrint.24:x 23
+  849 set :drawPrint.24:y :drawBold.10:y
+  850 set :drawPrint.24:alignment :drawBold.10:alignment
+  851 draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
   852 label *label165
   853 label *label164
   854 label *label161
   855 jump *label166 notEqual .transportItem null
-    * op sub *tmp313 :drawUnit:y 15
+  856 op sub *tmp313 *tmp309 15
   857 set :drawUnit.1:item @poly
   858 set :drawUnit.1:items 0
   859 set :drawUnit.1:y *tmp313
   860 set :drawItem.6:col 0
-    * set :drawItem.6:y :drawUnit.1:y
+  861 set :drawItem.6:y *tmp313
   862 set :drawItem.6:columns 1
-    * set :drawItem.6:item :drawUnit.1:item
-    * set :drawItem.6:current :drawUnit.1:items
+  863 set :drawItem.6:item @poly
+  864 set :drawItem.6:current 0
   865 set :drawItem.6:target .transportTarget
-    * op mul *tmp314 :drawItem.6:columns 176
-    * op div *tmp315 *tmp314 2
-    * op sub :drawItem.6:barLength 210 *tmp315
-    * op add :drawItem.6:textEnd 48 :drawItem.6:barLength
-    * op mul *tmp318 :drawItem.6:barLength :drawItem.6:current
+  866 op mul *tmp314 1 176
+  867 op div *tmp315 176 2
+  868 op sub :drawItem.6:barLength 210 88
+  869 op add :drawItem.6:textEnd 48 122
+  870 op mul *tmp318 122 :drawUnit.1:items
   871 op div *tmp319 *tmp318 :drawItem.6:target
-    * op min :drawItem.6:length :drawItem.6:barLength *tmp319
-    * op mul *tmp321 :drawItem.6:col 176
-    * op div *tmp322 *tmp321 2
-    * op add :drawItem.6:iconX 11 *tmp322
-    * op mul *tmp324 :drawItem.6:col 176
-    * op div *tmp325 *tmp324 2
-    * op add :drawItem.6:barX 22 *tmp325
-    * op mul *tmp327 :drawItem.6:col 176
-    * op div *tmp328 *tmp327 2
-    * op add :drawItem.6:textX :drawItem.6:textEnd *tmp328
+  872 op min :drawItem.6:length 122 *tmp319
+  873 op mul *tmp321 0 176
+  874 op div *tmp322 0 2
+  875 op add :drawItem.6:iconX 11 0
+  876 op mul *tmp324 0 176
+  877 op div *tmp325 0 2
+  878 op add :drawItem.6:barX 22 0
+  879 op mul *tmp327 0 176
+  880 op div *tmp328 0 2
+  881 op add :drawItem.6:textX 170 0
   882 draw col %[white]
-    * op add *tmp330 :drawItem.6:y 5
-    * draw image :drawItem.6:iconX *tmp330 :drawItem.6:item 16 0
+  883 op add *tmp330 :drawUnit.1:y 5
+  884 draw image 11 *tmp330 :drawUnit.1:item 16 0
   885 draw color 0 128 0 255
-    * draw rect :drawItem.6:barX :drawItem.6:y :drawItem.6:length 10
+  886 draw rect 22 :drawUnit.1:y :drawItem.6:length 10
   887 draw color 0 255 0 255
-    * draw lineRect :drawItem.6:barX :drawItem.6:y :drawItem.6:barLength 10
-    * op add *tmp331 :drawItem.6:y 5
-    * op add *tmp332 *tmp331 2
-    * set :drawBold.11:x :drawItem.6:textX
+  888 draw lineRect 22 :drawUnit.1:y 122 10
+  889 op add *tmp331 :drawUnit.1:y 5
+  890 op add *tmp332 *tmp330 2
+  891 set :drawBold.11:x 170
   892 set :drawBold.11:y *tmp332
   893 set :drawBold.11:alignment @right
-    * set :drawText.25:x :drawBold.11:x
-    * set :drawText.25:y :drawBold.11:y
-    * set :drawText.25:alignment :drawBold.11:alignment
+  894 set :drawText.25:x :drawItem.6:textX
+  895 set :drawText.25:y *tmp332
+  896 set :drawText.25:alignment @right
   897 print .transportTarget
-    * set :drawPrint.25:x :drawText.25:x
-    * set :drawPrint.25:y :drawText.25:y
-    * set :drawPrint.25:alignment :drawText.25:alignment
-    * draw print :drawPrint.25:x :drawPrint.25:y :drawPrint.25:alignment
+  898 set :drawPrint.25:x :drawBold.11:x
+  899 set :drawPrint.25:y :drawBold.11:y
+  900 set :drawPrint.25:alignment :drawBold.11:alignment
+  901 draw print :drawText.25:x :drawText.25:y :drawText.25:alignment
   902 label *label172
   903 label *label171
-    * op add :drawText.26:x :drawBold.11:x 1
-    * set :drawText.26:y :drawBold.11:y
-    * set :drawText.26:alignment :drawBold.11:alignment
+  904 op add :drawText.26:x :drawItem.6:textX 1
+  905 set :drawText.26:y *tmp332
+  906 set :drawText.26:alignment @right
   907 print .transportTarget
   908 set :drawPrint.26:x :drawText.26:x
-    * set :drawPrint.26:y :drawText.26:y
-    * set :drawPrint.26:alignment :drawText.26:alignment
-    * draw print :drawPrint.26:x :drawPrint.26:y :drawPrint.26:alignment
+  909 set :drawPrint.26:y :drawBold.11:y
+  910 set :drawPrint.26:alignment :drawBold.11:alignment
+  911 draw print :drawText.26:x :drawText.26:y :drawText.26:alignment
   912 label *label174
   913 label *label173
   914 label *label170
-    * op add :drawItem.6:col :drawItem.6:col 1
-    * jump *label175 lessThan :drawItem.6:col :drawItem.6:columns
-    * set :drawItem.6:col 0
-    * op sub :drawItem.6:y :drawItem.6:y 15
+  915 op add :drawItem.6:col 0 1
+  916 jump *label175 lessThan 1 1
+  917 op sub :drawItem.6:y :drawUnit.1:y 15
   918 label *label175
   919 label *label176
   920 label *label169
-    * set :drawUnit.1:y :drawItem.6:y
   921 label *label168
   922 jump *label167 always
   923 label *label166
 
   925 sensor *tmp339 @unit @totalItems
   926 op equal *tmp340 :drawUnit:unitItem .transportItem
   927 op mul *tmp341 *tmp339 *tmp340
-    * op sub *tmp342 :drawUnit:y 15
+  928 op sub *tmp342 *tmp309 15
   929 set :drawUnit.2:item .transportItem
   930 set :drawUnit.2:items *tmp341
   931 set :drawUnit.2:y *tmp342
   932 set :drawItem.7:col 0
-    * set :drawItem.7:y :drawUnit.2:y
+  933 set :drawItem.7:y *tmp342
   934 set :drawItem.7:columns 1
   935 set :drawItem.7:item :drawUnit.2:item
-    * set :drawItem.7:current :drawUnit.2:items
+  936 set :drawItem.7:current *tmp341
   937 set :drawItem.7:target .transportTarget
-    * op mul *tmp343 :drawItem.7:columns 176
-    * op div *tmp344 *tmp343 2
-    * op sub :drawItem.7:barLength 210 *tmp344
-    * op add :drawItem.7:textEnd 48 :drawItem.7:barLength
-    * op mul *tmp347 :drawItem.7:barLength :drawItem.7:current
+  938 op mul *tmp343 1 176
+  939 op div *tmp344 176 2
+  940 op sub :drawItem.7:barLength 210 88
+  941 op add :drawItem.7:textEnd 48 122
+  942 op mul *tmp347 122 :drawUnit.2:items
   943 op div *tmp348 *tmp347 :drawItem.7:target
-    * op min :drawItem.7:length :drawItem.7:barLength *tmp348
-    * op mul *tmp350 :drawItem.7:col 176
-    * op div *tmp351 *tmp350 2
-    * op add :drawItem.7:iconX 11 *tmp351
-    * op mul *tmp353 :drawItem.7:col 176
-    * op div *tmp354 *tmp353 2
-    * op add :drawItem.7:barX 22 *tmp354
-    * op mul *tmp356 :drawItem.7:col 176
-    * op div *tmp357 *tmp356 2
-    * op add :drawItem.7:textX :drawItem.7:textEnd *tmp357
+  944 op min :drawItem.7:length 122 *tmp348
+  945 op mul *tmp350 0 176
+  946 op div *tmp351 0 2
+  947 op add :drawItem.7:iconX 11 0
+  948 op mul *tmp353 0 176
+  949 op div *tmp354 0 2
+  950 op add :drawItem.7:barX 22 0
+  951 op mul *tmp356 0 176
+  952 op div *tmp357 0 2
+  953 op add :drawItem.7:textX 170 0
   954 draw col %[white]
-    * op add *tmp359 :drawItem.7:y 5
-    * draw image :drawItem.7:iconX *tmp359 :drawItem.7:item 16 0
+  955 op add *tmp359 :drawUnit.2:y 5
+  956 draw image 11 *tmp359 :drawUnit.2:item 16 0
   957 draw color 0 128 0 255
-    * draw rect :drawItem.7:barX :drawItem.7:y :drawItem.7:length 10
+  958 draw rect 22 :drawUnit.2:y :drawItem.7:length 10
   959 draw color 0 255 0 255
-    * draw lineRect :drawItem.7:barX :drawItem.7:y :drawItem.7:barLength 10
-    * op add *tmp360 :drawItem.7:y 5
-    * op add *tmp361 *tmp360 2
-    * set :drawBold.12:x :drawItem.7:textX
+  960 draw lineRect 22 :drawUnit.2:y 122 10
+  961 op add *tmp360 :drawUnit.2:y 5
+  962 op add *tmp361 *tmp359 2
+  963 set :drawBold.12:x 170
   964 set :drawBold.12:y *tmp361
   965 set :drawBold.12:alignment @right
-    * set :drawText.27:x :drawBold.12:x
-    * set :drawText.27:y :drawBold.12:y
-    * set :drawText.27:alignment :drawBold.12:alignment
+  966 set :drawText.27:x :drawItem.7:textX
+  967 set :drawText.27:y *tmp361
+  968 set :drawText.27:alignment @right
   969 print .transportTarget
-    * set :drawPrint.27:x :drawText.27:x
-    * set :drawPrint.27:y :drawText.27:y
-    * set :drawPrint.27:alignment :drawText.27:alignment
-    * draw print :drawPrint.27:x :drawPrint.27:y :drawPrint.27:alignment
+  970 set :drawPrint.27:x :drawBold.12:x
+  971 set :drawPrint.27:y :drawBold.12:y
+  972 set :drawPrint.27:alignment :drawBold.12:alignment
+  973 draw print :drawText.27:x :drawText.27:y :drawText.27:alignment
   974 label *label181
   975 label *label180
-    * op add :drawText.28:x :drawBold.12:x 1
-    * set :drawText.28:y :drawBold.12:y
-    * set :drawText.28:alignment :drawBold.12:alignment
+  976 op add :drawText.28:x :drawItem.7:textX 1
+  977 set :drawText.28:y *tmp361
+  978 set :drawText.28:alignment @right
   979 print .transportTarget
   980 set :drawPrint.28:x :drawText.28:x
-    * set :drawPrint.28:y :drawText.28:y
-    * set :drawPrint.28:alignment :drawText.28:alignment
-    * draw print :drawPrint.28:x :drawPrint.28:y :drawPrint.28:alignment
+  981 set :drawPrint.28:y :drawBold.12:y
+  982 set :drawPrint.28:alignment :drawBold.12:alignment
+  983 draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
   984 label *label183
   985 label *label182
   986 label *label179
-    * op add :drawItem.7:col :drawItem.7:col 1
-    * jump *label184 lessThan :drawItem.7:col :drawItem.7:columns
-    * set :drawItem.7:col 0
-    * op sub :drawItem.7:y :drawItem.7:y 15
+  987 op add :drawItem.7:col 0 1
+  988 jump *label184 lessThan 1 1
+  989 op sub :drawItem.7:y :drawUnit.2:y 15
   990 label *label184
   991 label *label185
   992 label *label178
-    * set :drawUnit.2:y :drawItem.7:y
   993 label *label177
   994 label *label167
   995 label *label158
 
   998 set :drawUnitCount:type @poly
   999 set :drawUnitCount:count .polys
  1000 jump *label188 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp369 :drawUnits:x 20
-    * draw image *tmp369 127 :drawUnitCount:type 12 0
-    * set :drawText.29:x :drawUnits:x
+ 1001 op sub *tmp369 170 20
+ 1002 draw image 150 127 @poly 12 0
+ 1003 set :drawText.29:x 170
  1004 set :drawText.29:y 129
  1005 set :drawText.29:alignment @right
  1006 print "x"
  1007 print :drawUnitCount:count
-    * set :drawPrint.29:x :drawText.29:x
-    * set :drawPrint.29:y :drawText.29:y
-    * set :drawPrint.29:alignment :drawText.29:alignment
-    * draw print :drawPrint.29:x :drawPrint.29:y :drawPrint.29:alignment
+ 1008 set :drawPrint.29:x :drawUnits:x
+ 1009 set :drawPrint.29:y 129
+ 1010 set :drawPrint.29:alignment @right
+ 1011 draw print :drawText.29:x :drawText.29:y :drawText.29:alignment
  1012 label *label191
  1013 label *label190
-    * op sub :drawUnits:x :drawUnits:x 30
+ 1014 op sub :drawUnits:x 170 30
  1015 label *label188
  1016 label *label189
  1017 label *label187
 
  1019 set :drawUnitCount.1:count .monos
  1020 jump *label193 lessThanEq :drawUnitCount.1:count 0
  1021 op sub *tmp372 :drawUnits:x 20
-    * draw image *tmp372 127 :drawUnitCount.1:type 12 0
+ 1022 draw image *tmp372 127 @mono 12 0
  1023 set :drawText.30:x :drawUnits:x
  1024 set :drawText.30:y 129
  1025 set :drawText.30:alignment @right
  1026 print "x"
  1027 print :drawUnitCount.1:count
-    * set :drawPrint.30:x :drawText.30:x
-    * set :drawPrint.30:y :drawText.30:y
-    * set :drawPrint.30:alignment :drawText.30:alignment
-    * draw print :drawPrint.30:x :drawPrint.30:y :drawPrint.30:alignment
+ 1028 set :drawPrint.30:x :drawUnits:x
+ 1029 set :drawPrint.30:y 129
+ 1030 set :drawPrint.30:alignment @right
+ 1031 draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
  1032 label *label196
  1033 label *label195
  1034 op sub :drawUnits:x :drawUnits:x 30
 
  1039 set :drawUnitCount.2:count .flares
  1040 jump *label198 lessThanEq :drawUnitCount.2:count 0
  1041 op sub *tmp375 :drawUnits:x 20
-    * draw image *tmp375 127 :drawUnitCount.2:type 12 0
+ 1042 draw image *tmp375 127 @flare 12 0
  1043 set :drawText.31:x :drawUnits:x
  1044 set :drawText.31:y 129
  1045 set :drawText.31:alignment @right
  1046 print "x"
  1047 print :drawUnitCount.2:count
-    * set :drawPrint.31:x :drawText.31:x
-    * set :drawPrint.31:y :drawText.31:y
-    * set :drawPrint.31:alignment :drawText.31:alignment
-    * draw print :drawPrint.31:x :drawPrint.31:y :drawPrint.31:alignment
+ 1048 set :drawPrint.31:x :drawUnits:x
+ 1049 set :drawPrint.31:y 129
+ 1050 set :drawPrint.31:alignment @right
+ 1051 draw print :drawText.31:x :drawText.31:y :drawText.31:alignment
  1052 label *label201
  1053 label *label200
-    * op sub :drawUnits:x :drawUnits:x 30
  1054 label *label198
  1055 label *label199
  1056 label *label197
 
  1068 set :drawText.32:y 172
  1069 set :drawText.32:alignment @topRight
  1070 print "Base map"
-    * set :drawPrint.32:x :drawText.32:x
-    * set :drawPrint.32:y :drawText.32:y
-    * set :drawPrint.32:alignment :drawText.32:alignment
-    * draw print :drawPrint.32:x :drawPrint.32:y :drawPrint.32:alignment
+ 1071 set :drawPrint.32:x 172
+ 1072 set :drawPrint.32:y 172
+ 1073 set :drawPrint.32:alignment @topRight
+ 1074 draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
  1075 label *label206
  1076 label *label205
  1077 draw col %[white]
 
  1262 set :displayLog:y 163
  1263 read :displayLog:logPosition bank1 511
  1264 op sub :displayLog:records 511 :displayLog:logPosition
-    * op sub *tmp389 :displayLog:records 1
+ 1265 op sub *tmp389 510 :displayLog:logPosition
  1266 op idiv *tmp390 *tmp389 32
  1267 op add *tmp391 *tmp390 1
  1268 op max :displayLog:pages 1 *tmp391
 
  1272 op sub *tmp396 :displayLog:start 32
  1273 op max :displayLog:stop :displayLog:logPosition *tmp396
  1274 draw col %[lightgray]
-    * op add *tmp398 :displayLog:page 1
+ 1275 op sub *tmp398 .page 1
  1276 print *tmp398
  1277 print "/"
  1278 set :drawText.33:x 172
  1279 set :drawText.33:y 4
  1280 set :drawText.33:alignment @bottomRight
  1281 print :displayLog:pages
-    * set :drawPrint.33:x :drawText.33:x
-    * set :drawPrint.33:y :drawText.33:y
-    * set :drawPrint.33:alignment :drawText.33:alignment
-    * draw print :drawPrint.33:x :drawPrint.33:y :drawPrint.33:alignment
+ 1282 set :drawPrint.33:x 172
+ 1283 set :drawPrint.33:y 4
+ 1284 set :drawPrint.33:alignment @bottomRight
+ 1285 draw print :drawText.33:x :drawText.33:y :drawText.33:alignment
  1286 label *label257
  1287 label *label256
  1288 draw col %[white]
  1289 set *tmp399 :displayLog:stop
  1290 op sub :displayLog:position :displayLog:start 1
  1291 label *label258
-    * jump *label260 lessThan :displayLog:position *tmp399
+ 1292 jump *label260 lessThan :displayLog:position :displayLog:stop
  1293 read :displayLog:record bank1 :displayLog:position
  1294 set :displayRecord:record :displayLog:record
-    * op mod :displayRecord:id :displayRecord:record 1000
+ 1295 op mod :displayRecord:id :displayLog:record 1000
  1296 jump *label262 lessThanEq :displayRecord:id @blockCount
  1297 op sub *tmp405 :displayRecord:id @blockCount
  1298 lookup unit *tmp404 *tmp405
 
  1301 lookup block *tmp404 :displayRecord:id
  1302 label *label263
  1303 set :displayRecord:icon *tmp404
-    * op div *tmp408 :displayRecord:record 1000
+ 1304 op div *tmp408 :displayLog:record 1000
  1305 op idiv :displayRecord:t *tmp408 120
  1306 op idiv :displayRecord:m :displayRecord:t 60
  1307 op mod :displayRecord:s :displayRecord:t 60
 
  1314 print :displayRecord:m
  1315 print ":"
  1316 print *tmp414
-    * set :displayRecordAt:image :displayRecord:icon
+ 1317 set :displayRecordAt:image *tmp404
  1318 set :displayRecordAt:text :displayRecord:s
-    * draw image :displayLog:x :displayLog:y :displayRecordAt:image 14 0
+ 1319 draw image :displayLog:x :displayLog:y :displayRecord:icon 14 0
  1320 op add *tmp415 :displayLog:x 56
-    * op sub *tmp416 *tmp415 12
+ 1321 op add *tmp416 :displayLog:x 44
  1322 op add *tmp417 :displayLog:y 2
  1323 set :drawText.34:x *tmp416
  1324 set :drawText.34:y *tmp417
  1325 set :drawText.34:alignment @right
-    * print :displayRecordAt:text
-    * set :drawPrint.34:x :drawText.34:x
-    * set :drawPrint.34:y :drawText.34:y
-    * set :drawPrint.34:alignment :drawText.34:alignment
-    * draw print :drawPrint.34:x :drawPrint.34:y :drawPrint.34:alignment
+ 1326 print :displayRecord:s
+ 1327 set :drawPrint.34:x *tmp416
+ 1328 set :drawPrint.34:y *tmp417
+ 1329 set :drawPrint.34:alignment @right
+ 1330 draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
  1331 label *label268
  1332 label *label267
  1333 op sub :displayLog:y :displayLog:y 15
 
  1397 label *label4
  1398 set :unpackCfg:cfg :drawBlock:cfg
  1399 set :unpackCfg:index 0
-    * set *tmp464 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp465 :unpackCfg:cfg *tmp464
+ 1400 set *tmp464 0
+ 1401 op add :unpackCfg:index 0 1
+ 1402 read *tmp465 :drawBlock:cfg *tmp464
  1403 op sub *tmp466 *tmp465 35
  1404 lookup block :unpackCfg:type *tmp466
-    * set *tmp468 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp469 :unpackCfg:cfg *tmp468
+ 1405 set *tmp468 1
+ 1406 op add :unpackCfg:index 1 1
+ 1407 read *tmp469 :drawBlock:cfg *tmp468
  1408 op sub *tmp470 *tmp469 35
-    * op sub :unpackCfg:x *tmp470 7
-    * set *tmp472 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp473 :unpackCfg:cfg *tmp472
+ 1409 op sub :unpackCfg:x *tmp469 42
+ 1410 set *tmp472 2
+ 1411 op add :unpackCfg:index 2 1
+ 1412 read *tmp473 :drawBlock:cfg *tmp472
  1413 op sub *tmp474 *tmp473 35
-    * op sub :unpackCfg:y *tmp474 7
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp497 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp498 :unpackCfg:cfg *tmp497
+ 1414 op sub :unpackCfg:y *tmp473 42
+ 1415 op add :unpackCfg:index 3 1
+ 1416 op add :unpackCfg:index 4 1
+ 1417 op add :unpackCfg:index 5 1
+ 1418 op add :unpackCfg:index 6 1
+ 1419 op add :unpackCfg:index 7 1
+ 1420 op add :unpackCfg:index 8 1
+ 1421 op add :unpackCfg:index 9 1
+ 1422 set *tmp497 10
+ 1423 op add :unpackCfg:index 10 1
+ 1424 read *tmp498 :drawBlock:cfg *tmp497
  1425 op sub :unpackCfg:rotation *tmp498 35
-    * set *tmp500 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp501 :unpackCfg:cfg *tmp500
+ 1426 set *tmp500 11
+ 1427 op add :unpackCfg:index 11 1
+ 1428 read *tmp501 :drawBlock:cfg *tmp500
  1429 op sub :unpackCfg:size *tmp501 35
-    * set *tmp503 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp504 :unpackCfg:cfg *tmp503
+ 1430 set *tmp503 12
+ 1431 op add :unpackCfg:index 12 1
+ 1432 read *tmp504 :drawBlock:cfg *tmp503
  1433 op sub :unpackCfg:ind *tmp504 35
  1434 label *label295
  1435 set :drawBlock:type :unpackCfg:type
 
  1438 set :drawBlock:rotation :unpackCfg:rotation
  1439 set :drawBlock:size :unpackCfg:size
  1440 set :drawBlock:index :unpackCfg:ind
-    * op or *tmp506 :drawBlock:x :drawBlock:y
+ 1441 op or *tmp506 :unpackCfg:x :unpackCfg:y
  1442 jump *label296 equal *tmp506 false
-    * op shl *tmp508 1 :drawBlock:index
+ 1443 op shl *tmp508 1 :unpackCfg:ind
  1444 op and *tmp509 .blocksBuilt *tmp508
  1445 jump *label298 equal *tmp509 false
  1446 draw col %[white]
 
  1448 label *label298
  1449 draw color 128 255 128 128
  1450 label *label299
-    * op and *tmp511 :drawBlock:size 1
+ 1451 op and *tmp511 :unpackCfg:size 1
  1452 op sub :drawBlock:offset 1 *tmp511
-    * op mul *tmp513 2 :drawBlock:x
+ 1453 op mul *tmp513 2 :unpackCfg:x
  1454 op add *tmp514 *tmp513 :drawBlock:offset
-    * op mul *tmp515 2 :drawBlock:y
+ 1455 op mul *tmp515 2 :unpackCfg:y
  1456 op add *tmp516 *tmp515 :drawBlock:offset
-    * op mul *tmp517 2 :drawBlock:size
-    * op mul *tmp518 90 :drawBlock:rotation
-    * draw image *tmp514 *tmp516 :drawBlock:type *tmp517 *tmp518
+ 1457 op mul *tmp517 2 :unpackCfg:size
+ 1458 op mul *tmp518 90 :unpackCfg:rotation
+ 1459 draw image *tmp514 *tmp516 :unpackCfg:type *tmp517 *tmp518
  1460 label *label296
  1461 label *label297
  1462 label *label294

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-219 instructions):
 
    45 op div *tmp54 .animation 30
    46 op min *tmp55 *tmp54 1
    47 op max :animate:ratio 0 *tmp55
-    * set :lerp:from 40
-    * set :lerp:to 88
-    * set :lerp:ratio :animate:ratio
    48 op sub *tmp58 1 :animate:ratio
    49 op mul *tmp59 *tmp58 40
    50 op mul *tmp60 :animate:ratio 88
    51 op add *tmp57 *tmp59 *tmp60
    52 label *label25
-    * set :animate:x *tmp57
-    * set :lerp.1:from 137
-    * set :lerp.1:to 88
-    * set :lerp.1:ratio :animate:ratio
-    * op sub *tmp63 1 :animate:ratio
    53 op mul *tmp64 *tmp58 137
    54 op mul *tmp65 :animate:ratio 88
-    * op add *tmp62 *tmp64 *tmp65
+   55 op add *tmp62 *tmp64 *tmp60
    56 label *label26
-    * set :animate:y *tmp62
-    * set :lerp.2:from 32
-    * set :lerp.2:to 168
-    * set :lerp.2:ratio :animate:ratio
-    * op sub *tmp68 1 :animate:ratio
    57 op mul *tmp69 *tmp58 32
    58 op mul *tmp70 :animate:ratio 168
    59 op add *tmp67 *tmp69 *tmp70
    60 label *label27
-    * set :animate:size *tmp67
    61 draw image *tmp57 *tmp62 @mega *tmp67 0
    62 drawflush display1
    63 op add .animation .animation 1
 
    74 set :drawText:y 161
    75 set :drawText:alignment @bottom
    76 print "Goal"
-    * set :drawPrint:x :drawBold:x
-    * set :drawPrint:y :drawBold:y
-    * set :drawPrint:alignment :drawBold:alignment
-    * draw print :drawText:x :drawText:y :drawText:alignment
+   77 set :drawPrint:x 40
+   78 set :drawPrint:y 161
+   79 set :drawPrint:alignment @bottom
+   80 draw print 40 161 @bottom
    81 label *label32
    82 label *label31
    83 op add :drawText.1:x 40 1
    84 set :drawText.1:y 161
    85 set :drawText.1:alignment @bottom
    86 print "Goal"
-    * set :drawPrint.1:x 41
-    * set :drawPrint.1:y :drawBold:y
-    * set :drawPrint.1:alignment :drawBold:alignment
-    * draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
+   87 set :drawPrint.1:y 161
+   88 set :drawPrint.1:alignment @bottom
+   89 draw print 41 161 @bottom
    90 label *label34
    91 label *label33
    92 label *label30
 
   141 set :drawText.2:y 172
   142 set :drawText.2:alignment @topRight
   143 print ")"
-    * set :drawPrint.2:x 170
-    * set :drawPrint.2:y 172
-    * set :drawPrint.2:alignment @topRight
-    * draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
+  144 draw print 170 172 @topRight
   145 label *label44
   146 label *label43
   147 jump *label45 equal .titaniumDrill false
 
   155 set :drawText.3:alignment @topRight
   156 print "x"
   157 print :drawHeader:count
-    * set :drawPrint.3:x :drawHeader:x
-    * set :drawPrint.3:y 155
-    * set :drawPrint.3:alignment @topRight
-    * draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
+  158 set :drawPrint.3:x 170
+  159 draw print 170 155 @topRight
   160 label *label48
   161 label *label47
-    * op sub *tmp101 170 20
   162 op mul *tmp102 7 :drawHeader:len
   163 op sub *tmp103 150 *tmp102
   164 draw image *tmp103 146 @titanium 12 0
 
   174 set :drawText.4:alignment @topRight
   175 print "x"
   176 print :drawHeader:count
-    * set :drawPrint.4:x :drawHeader:x.1
-    * set :drawPrint.4:y 155
-    * set :drawPrint.4:alignment @topRight
-    * draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
+  177 set :drawPrint.4:x 120
+  178 draw print 120 155 @topRight
   179 label *label52
   180 label *label51
-    * op sub *tmp108 120 20
   181 op mul *tmp109 7 :drawHeader:len.1
   182 op sub *tmp110 100 *tmp109
   183 draw image *tmp110 146 @thorium 12 0
 
   250 set :drawText.5:y 105
   251 set :drawText.5:alignment @bottomLeft
   252 print "Unit factories"
-    * set :drawPrint.5:x :drawBold.1:x
-    * set :drawPrint.5:y :drawBold.1:y
-    * set :drawPrint.5:alignment :drawBold.1:alignment
-    * draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
+  253 set :drawPrint.5:x 22
+  254 set :drawPrint.5:y 105
+  255 set :drawPrint.5:alignment @bottomLeft
+  256 draw print 22 105 @bottomLeft
   257 label *label66
   258 label *label65
   259 op add :drawText.6:x 22 1
   260 set :drawText.6:y 105
   261 set :drawText.6:alignment @bottomLeft
   262 print "Unit factories"
-    * set :drawPrint.6:x 23
-    * set :drawPrint.6:y :drawBold.1:y
-    * set :drawPrint.6:alignment :drawBold.1:alignment
-    * draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
+  263 set :drawPrint.6:y 105
+  264 set :drawPrint.6:alignment @bottomLeft
+  265 draw print 23 105 @bottomLeft
   266 label *label68
   267 label *label67
   268 label *label64
   269 jump *label69 lessThanEq .factoryProgress 0
-    * set :drawItem:col 0
-    * set :drawItem:y 90
-    * set :drawItem:columns 1
-    * set :drawItem:item :drawMaterials:unit1
-    * set :drawItem:current .factoryProgress
-    * set :drawItem:target 1
-    * op mul *tmp148 1 176
-    * op div *tmp149 176 2
-    * op sub :drawItem:barLength 210 88
-    * op add :drawItem:textEnd 48 122
   270 op mul *tmp152 122 .factoryProgress
-    * op div *tmp153 *tmp152 1
+  271 op mul *tmp153 .factoryProgress 122
   272 op min :drawItem:length 122 *tmp153
-    * op mul *tmp155 0 176
-    * op div *tmp156 0 2
-    * op add :drawItem:iconX 11 0
-    * op mul *tmp158 0 176
-    * op div *tmp159 0 2
-    * op add :drawItem:barX 22 0
-    * op mul *tmp161 0 176
-    * op div *tmp162 0 2
   273 op add :drawItem:textX 170 0
   274 draw col %[white]
-    * op add *tmp164 90 5
   275 draw image 11 95 :drawMaterials:unit1 16 0
   276 draw color 0 128 0 255
   277 draw rect 22 90 :drawItem:length 10
   278 draw color 0 255 0 255
   279 draw lineRect 22 90 122 10
-    * op add *tmp165 90 5
   280 op add *tmp166 95 2
   281 set :drawBold.2:x 170
   282 set :drawBold.2:y 97
   283 set :drawBold.2:alignment @right
-    * set :drawText.7:x :drawItem:textX
-    * set :drawText.7:y *tmp166
+  284 set :drawText.7:x 170
+  285 set :drawText.7:y 97
   286 set :drawText.7:alignment @right
   287 print :drawMaterials:unitCount1
   288 print "/"
   289 print :drawMaterials:unitTotal1
-    * set :drawPrint.7:x :drawBold.2:x
-    * set :drawPrint.7:y :drawBold.2:y
-    * set :drawPrint.7:alignment :drawBold.2:alignment
-    * draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
+  290 set :drawPrint.7:x 170
+  291 set :drawPrint.7:y 97
+  292 set :drawPrint.7:alignment @right
+  293 draw print :drawItem:textX *tmp166 @right
   294 label *label74
   295 label *label73
-    * op add :drawText.8:x :drawItem:textX 1
-    * set :drawText.8:y *tmp166
+  296 op add :drawText.8:x 170 1
+  297 set :drawText.8:y 97
   298 set :drawText.8:alignment @right
   299 print :drawMaterials:unitCount1
   300 print "/"
   301 print :drawMaterials:unitTotal1
-    * set :drawPrint.8:x :drawText.8:x
-    * set :drawPrint.8:y :drawBold.2:y
-    * set :drawPrint.8:alignment :drawBold.2:alignment
-    * draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
+  302 set :drawPrint.8:x 171
+  303 set :drawPrint.8:y 97
+  304 set :drawPrint.8:alignment @right
+  305 draw print 171 *tmp166 @right
   306 label *label76
   307 label *label75
   308 label *label72
-    * op add :drawItem:col 0 1
   309 jump *label77 lessThan 1 1
-    * op sub :drawItem:y 90 15
   310 label *label77
   311 label *label78
   312 label *label71
   313 jump *label79 equal :drawMaterials:unit2 null
-    * set :drawItem.1:col 0
-    * set :drawItem.1:y 75
-    * set :drawItem.1:columns 1
-    * set :drawItem.1:item :drawMaterials:unit2
-    * set :drawItem.1:current .reconstructorProgress
-    * set :drawItem.1:target 1
-    * op mul *tmp172 1 176
-    * op div *tmp173 176 2
-    * op sub :drawItem.1:barLength 210 88
-    * op add :drawItem.1:textEnd 48 122
   314 op mul *tmp176 122 .reconstructorProgress
-    * op div *tmp177 *tmp176 1
+  315 op mul *tmp177 .reconstructorProgress 122
   316 op min :drawItem.1:length 122 *tmp177
-    * op mul *tmp179 0 176
-    * op div *tmp180 0 2
-    * op add :drawItem.1:iconX 11 0
-    * op mul *tmp182 0 176
-    * op div *tmp183 0 2
-    * op add :drawItem.1:barX 22 0
-    * op mul *tmp185 0 176
-    * op div *tmp186 0 2
   317 op add :drawItem.1:textX 170 0
   318 draw col %[white]
-    * op add *tmp188 75 5
   319 draw image 11 80 :drawMaterials:unit2 16 0
   320 draw color 0 128 0 255
   321 draw rect 22 75 :drawItem.1:length 10
   322 draw color 0 255 0 255
   323 draw lineRect 22 75 122 10
-    * op add *tmp189 75 5
   324 op add *tmp190 80 2
   325 set :drawBold.3:x 170
   326 set :drawBold.3:y 82
   327 set :drawBold.3:alignment @right
-    * set :drawText.9:x :drawItem.1:textX
-    * set :drawText.9:y *tmp190
+  328 set :drawText.9:x 170
+  329 set :drawText.9:y 82
   330 set :drawText.9:alignment @right
   331 print :drawMaterials:unitCount2
   332 print "/"
   333 print :drawMaterials:unitTotal2
-    * set :drawPrint.9:x :drawBold.3:x
-    * set :drawPrint.9:y :drawBold.3:y
-    * set :drawPrint.9:alignment :drawBold.3:alignment
-    * draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
+  334 set :drawPrint.9:x 170
+  335 set :drawPrint.9:y 82
+  336 set :drawPrint.9:alignment @right
+  337 draw print :drawItem.1:textX *tmp190 @right
   338 label *label84
   339 label *label83
-    * op add :drawText.10:x :drawItem.1:textX 1
-    * set :drawText.10:y *tmp190
+  340 op add :drawText.10:x 170 1
+  341 set :drawText.10:y 82
   342 set :drawText.10:alignment @right
   343 print :drawMaterials:unitCount2
   344 print "/"
   345 print :drawMaterials:unitTotal2
-    * set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawBold.3:y
-    * set :drawPrint.10:alignment :drawBold.3:alignment
-    * draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
+  346 set :drawPrint.10:x 171
+  347 set :drawPrint.10:y 82
+  348 set :drawPrint.10:alignment @right
+  349 draw print 171 *tmp190 @right
   350 label *label86
   351 label *label85
   352 label *label82
-    * op add :drawItem.1:col 0 1
   353 jump *label87 lessThan 1 1
-    * op sub :drawItem.1:y 75 15
   354 label *label87
   355 label *label88
   356 label *label81
   357 jump *label89 equal :drawMaterials:unit3 null
-    * set :drawItem.2:col 0
-    * set :drawItem.2:y 60
-    * set :drawItem.2:columns 1
-    * set :drawItem.2:item :drawMaterials:unit3
-    * set :drawItem.2:current :drawMaterials:multiReconstructorProgress
-    * set :drawItem.2:target 1
-    * op mul *tmp196 1 176
-    * op div *tmp197 176 2
-    * op sub :drawItem.2:barLength 210 88
-    * op add :drawItem.2:textEnd 48 122
   358 op mul *tmp200 122 :drawMaterials:multiReconstructorProgress
-    * op div *tmp201 *tmp200 1
+  359 op mul *tmp201 :drawMaterials:multiReconstructorProgress 122
   360 op min :drawItem.2:length 122 *tmp201
-    * op mul *tmp203 0 176
-    * op div *tmp204 0 2
-    * op add :drawItem.2:iconX 11 0
-    * op mul *tmp206 0 176
-    * op div *tmp207 0 2
-    * op add :drawItem.2:barX 22 0
-    * op mul *tmp209 0 176
-    * op div *tmp210 0 2
   361 op add :drawItem.2:textX 170 0
   362 draw col %[white]
-    * op add *tmp212 60 5
   363 draw image 11 65 :drawMaterials:unit3 16 0
   364 draw color 0 128 0 255
   365 draw rect 22 60 :drawItem.2:length 10
   366 draw color 0 255 0 255
   367 draw lineRect 22 60 122 10
-    * op add *tmp213 60 5
   368 op add *tmp214 65 2
   369 set :drawBold.4:x 170
   370 set :drawBold.4:y 67
   371 set :drawBold.4:alignment @right
-    * set :drawText.11:x :drawItem.2:textX
-    * set :drawText.11:y *tmp214
+  372 set :drawText.11:x 170
+  373 set :drawText.11:y 67
   374 set :drawText.11:alignment @right
   375 print .megas
   376 print "/"
   377 print .megaTarget
-    * set :drawPrint.11:x :drawBold.4:x
-    * set :drawPrint.11:y :drawBold.4:y
-    * set :drawPrint.11:alignment :drawBold.4:alignment
-    * draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
+  378 set :drawPrint.11:x 170
+  379 set :drawPrint.11:y 67
+  380 set :drawPrint.11:alignment @right
+  381 draw print :drawItem.2:textX *tmp214 @right
   382 label *label94
   383 label *label93
-    * op add :drawText.12:x :drawItem.2:textX 1
-    * set :drawText.12:y *tmp214
+  384 op add :drawText.12:x 170 1
+  385 set :drawText.12:y 67
   386 set :drawText.12:alignment @right
   387 print .megas
   388 print "/"
   389 print .megaTarget
-    * set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawBold.4:y
-    * set :drawPrint.12:alignment :drawBold.4:alignment
-    * draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
+  390 set :drawPrint.12:x 171
+  391 set :drawPrint.12:y 67
+  392 set :drawPrint.12:alignment @right
+  393 draw print 171 *tmp214 @right
   394 label *label96
   395 label *label95
   396 label *label92
-    * op add :drawItem.2:col 0 1
   397 jump *label97 lessThan 1 1
-    * op sub :drawItem.2:y 60 15
   398 label *label97
   399 label *label98
   400 label *label91
 
   417 sensor *tmp223 .airFactory :drawMaterials:item
   418 set :drawItem.3:col :drawMaterials:col
   419 set :drawItem.3:y :drawMaterials:y
-    * set :drawItem.3:columns 1
-    * set :drawItem.3:item :drawMaterials:item
-    * set :drawItem.3:current *tmp223
-    * set :drawItem.3:target :drawMaterials:target
-    * op mul *tmp224 1 176
-    * op div *tmp225 176 2
-    * op sub :drawItem.3:barLength 210 88
-    * op add :drawItem.3:textEnd 48 122
   420 op mul *tmp228 122 *tmp223
   421 op div *tmp229 *tmp228 :drawMaterials:target
   422 op min :drawItem.3:length 122 *tmp229
   423 op mul *tmp231 :drawMaterials:col 176
-    * op mul *tmp232 :drawItem.3:col 88
+  424 op mul *tmp232 :drawMaterials:col 88
   425 op add :drawItem.3:iconX 11 *tmp232
-    * op mul *tmp234 :drawMaterials:col 176
-    * op div *tmp235 *tmp231 2
+  426 op mul *tmp235 :drawMaterials:col 88
   427 op add :drawItem.3:barX 22 *tmp232
-    * op mul *tmp237 :drawMaterials:col 176
-    * op div *tmp238 *tmp231 2
+  428 op mul *tmp238 :drawMaterials:col 88
   429 op add :drawItem.3:textX 170 *tmp232
   430 draw col %[white]
   431 op add *tmp240 :drawMaterials:y 5
 
   434 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
   435 draw color 0 255 0 255
   436 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
-    * op add *tmp241 :drawMaterials:y 5
-    * op add *tmp242 *tmp240 2
+  437 op add *tmp242 :drawMaterials:y 7
   438 set :drawBold.5:x :drawItem.3:textX
   439 set :drawBold.5:y *tmp242
   440 set :drawBold.5:alignment @right
 
   442 set :drawText.13:y *tmp242
   443 set :drawText.13:alignment @right
   444 print :drawMaterials:target
-    * set :drawPrint.13:x :drawBold.5:x
-    * set :drawPrint.13:y :drawBold.5:y
-    * set :drawPrint.13:alignment :drawBold.5:alignment
-    * draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
+  445 set :drawPrint.13:x :drawItem.3:textX
+  446 set :drawPrint.13:y *tmp242
+  447 set :drawPrint.13:alignment @right
+  448 draw print :drawItem.3:textX *tmp242 @right
   449 label *label109
   450 label *label108
-    * op add :drawText.14:x :drawItem.3:textX 1
+  451 op add :drawText.14:x *tmp232 171
   452 set :drawText.14:y *tmp242
   453 set :drawText.14:alignment @right
   454 print :drawMaterials:target
-    * set :drawPrint.14:x :drawText.14:x
-    * set :drawPrint.14:y :drawBold.5:y
-    * set :drawPrint.14:alignment :drawBold.5:alignment
-    * draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
+  455 set :drawPrint.14:y *tmp242
+  456 set :drawPrint.14:alignment @right
+  457 draw print :drawText.14:x *tmp242 @right
   458 label *label111
   459 label *label110
   460 label *label107
 
   488 set :drawText.15:alignment @bottomLeft
   489 read *tmp250 processor1 ".mapAction"
   490 print *tmp250
-    * set :drawPrint.15:x :drawBold.6:x
-    * set :drawPrint.15:y :drawBold.6:y
-    * set :drawPrint.15:alignment :drawBold.6:alignment
-    * draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
+  491 set :drawPrint.15:x 22
+  492 set :drawPrint.15:y 105
+  493 set :drawPrint.15:alignment @bottomLeft
+  494 draw print 22 105 @bottomLeft
   495 label *label118
   496 label *label117
   497 op add :drawText.16:x 22 1
 
   499 set :drawText.16:alignment @bottomLeft
   500 read *tmp252 processor1 ".mapAction"
   501 print *tmp252
-    * set :drawPrint.16:x 23
-    * set :drawPrint.16:y :drawBold.6:y
-    * set :drawPrint.16:alignment :drawBold.6:alignment
-    * draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
+  502 set :drawPrint.16:y 105
+  503 set :drawPrint.16:alignment @bottomLeft
+  504 draw print 23 105 @bottomLeft
   505 label *label120
   506 label *label119
   507 label *label116
-    * set :drawItem.4:col 0
-    * set :drawItem.4:y 90
-    * set :drawItem.4:columns 1
-    * set :drawItem.4:item @titanium
   508 read :drawItem.4:current processor1 ".mapProgress"
   509 read :drawItem.4:target processor1 ".mapTotal"
-    * op mul *tmp253 1 176
-    * op div *tmp254 176 2
-    * op sub :drawItem.4:barLength 210 88
-    * op add :drawItem.4:textEnd 48 122
   510 op mul *tmp257 122 :drawItem.4:current
   511 op div *tmp258 *tmp257 :drawItem.4:target
   512 op min :drawItem.4:length 122 *tmp258
-    * op mul *tmp260 0 176
-    * op div *tmp261 0 2
-    * op add :drawItem.4:iconX 11 0
-    * op mul *tmp263 0 176
-    * op div *tmp264 0 2
-    * op add :drawItem.4:barX 22 0
-    * op mul *tmp266 0 176
-    * op div *tmp267 0 2
   513 op add :drawItem.4:textX 170 0
   514 draw col %[white]
-    * op add *tmp269 90 5
   515 draw image 11 95 @titanium 16 0
   516 draw color 0 128 0 255
   517 draw rect 22 90 :drawItem.4:length 10
   518 draw color 0 255 0 255
   519 draw lineRect 22 90 122 10
-    * op add *tmp270 90 5
   520 op add *tmp271 95 2
   521 set :drawBold.7:x 170
   522 set :drawBold.7:y 97
   523 set :drawBold.7:alignment @right
-    * set :drawText.17:x :drawItem.4:textX
-    * set :drawText.17:y *tmp271
+  524 set :drawText.17:x 170
+  525 set :drawText.17:y 97
   526 set :drawText.17:alignment @right
   527 print "x"
   528 read *tmp272 processor1 ".mapSpots"
   529 print *tmp272
-    * set :drawPrint.17:x :drawBold.7:x
-    * set :drawPrint.17:y :drawBold.7:y
-    * set :drawPrint.17:alignment :drawBold.7:alignment
-    * draw print :drawText.17:x :drawText.17:y :drawText.17:alignment
+  530 set :drawPrint.17:x 170
+  531 set :drawPrint.17:y 97
+  532 set :drawPrint.17:alignment @right
+  533 draw print :drawItem.4:textX *tmp271 @right
   534 label *label124
   535 label *label123
-    * op add :drawText.18:x :drawItem.4:textX 1
-    * set :drawText.18:y *tmp271
+  536 op add :drawText.18:x 170 1
+  537 set :drawText.18:y 97
   538 set :drawText.18:alignment @right
   539 print "x"
   540 read *tmp274 processor1 ".mapSpots"
   541 print *tmp274
-    * set :drawPrint.18:x :drawText.18:x
-    * set :drawPrint.18:y :drawBold.7:y
-    * set :drawPrint.18:alignment :drawBold.7:alignment
-    * draw print :drawText.18:x :drawText.18:y :drawText.18:alignment
+  542 set :drawPrint.18:x 171
+  543 set :drawPrint.18:y 97
+  544 set :drawPrint.18:alignment @right
+  545 draw print 171 *tmp271 @right
   546 label *label126
   547 label *label125
   548 label *label122
-    * op add :drawItem.4:col 0 1
   549 jump *label127 lessThan 1 1
-    * op sub :drawItem.4:y 90 15
   550 label *label127
   551 label *label128
   552 label *label121
 
   561 set :drawText.19:y 105
   562 set :drawText.19:alignment @bottomLeft
   563 print "Materials"
-    * set :drawPrint.19:x :drawBold.8:x
-    * set :drawPrint.19:y :drawBold.8:y
-    * set :drawPrint.19:alignment :drawBold.8:alignment
-    * draw print :drawText.19:x :drawText.19:y :drawText.19:alignment
+  564 set :drawPrint.19:x 22
+  565 set :drawPrint.19:y 105
+  566 set :drawPrint.19:alignment @bottomLeft
+  567 draw print 22 105 @bottomLeft
   568 label *label131
   569 label *label130
   570 op add :drawText.20:x 22 1
   571 set :drawText.20:y 105
   572 set :drawText.20:alignment @bottomLeft
   573 print "Materials"
-    * set :drawPrint.20:x 23
-    * set :drawPrint.20:y :drawBold.8:y
-    * set :drawPrint.20:alignment :drawBold.8:alignment
-    * draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
+  574 set :drawPrint.20:y 105
+  575 set :drawPrint.20:alignment @bottomLeft
+  576 draw print 23 105 @bottomLeft
   577 label *label133
   578 label *label132
   579 label *label129
 
   618 set :drawItem.5:col :drawMaterials:col
   619 set :drawItem.5:y :drawMaterials:y
   620 set :drawItem.5:columns 1
-    * set :drawItem.5:item :drawMaterials:item.1
-    * set :drawItem.5:current *tmp283
-    * set :drawItem.5:target :drawMaterials:target.1
-    * op mul *tmp284 :drawMaterials:columns 176
-    * op mul *tmp285 :drawItem.5:columns 88
-    * op sub :drawItem.5:barLength 210 *tmp285
-    * op add :drawItem.5:textEnd 48 :drawItem.5:barLength
-    * op mul *tmp288 :drawItem.5:barLength *tmp283
+  621 op mul *tmp284 1 176
+  622 op mul *tmp285 1 88
+  623 op sub :drawItem.5:barLength 210 88
+  624 op add :drawItem.5:textEnd 48 122
+  625 op mul *tmp288 122 *tmp283
   626 op div *tmp289 *tmp288 :drawMaterials:target.1
-    * op min :drawItem.5:length :drawItem.5:barLength *tmp289
+  627 op min :drawItem.5:length 122 *tmp289
   628 op mul *tmp291 :drawMaterials:col 176
-    * op mul *tmp292 :drawItem.5:col 88
+  629 op mul *tmp292 :drawMaterials:col 88
   630 op add :drawItem.5:iconX 11 *tmp292
-    * op mul *tmp294 :drawMaterials:col 176
-    * op div *tmp295 *tmp291 2
+  631 op mul *tmp295 :drawMaterials:col 88
   632 op add :drawItem.5:barX 22 *tmp292
-    * op mul *tmp297 :drawMaterials:col 176
-    * op div *tmp298 *tmp291 2
-    * op add :drawItem.5:textX :drawItem.5:textEnd *tmp292
+  633 op mul *tmp298 :drawMaterials:col 88
+  634 op add :drawItem.5:textX 170 *tmp292
   635 draw col %[white]
   636 op add *tmp300 :drawMaterials:y 5
   637 draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
   638 draw color 0 128 0 255
   639 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   640 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y :drawItem.5:barLength 10
-    * op add *tmp301 :drawMaterials:y 5
-    * op add *tmp302 *tmp300 2
+  641 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  642 op add *tmp302 :drawMaterials:y 7
   643 set :drawBold.9:x :drawItem.5:textX
   644 set :drawBold.9:y *tmp302
   645 set :drawBold.9:alignment @right
 
   647 set :drawText.21:y *tmp302
   648 set :drawText.21:alignment @right
   649 print :drawMaterials:target.1
-    * set :drawPrint.21:x :drawBold.9:x
-    * set :drawPrint.21:y :drawBold.9:y
-    * set :drawPrint.21:alignment :drawBold.9:alignment
-    * draw print :drawText.21:x :drawText.21:y :drawText.21:alignment
+  650 set :drawPrint.21:x :drawItem.5:textX
+  651 set :drawPrint.21:y *tmp302
+  652 set :drawPrint.21:alignment @right
+  653 draw print :drawItem.5:textX *tmp302 @right
   654 label *label151
   655 label *label150
   656 op add :drawText.22:x :drawItem.5:textX 1
   657 set :drawText.22:y *tmp302
   658 set :drawText.22:alignment @right
   659 print :drawMaterials:target.1
-    * set :drawPrint.22:x :drawText.22:x
-    * set :drawPrint.22:y :drawBold.9:y
-    * set :drawPrint.22:alignment :drawBold.9:alignment
-    * draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
+  660 set :drawPrint.22:y *tmp302
+  661 set :drawPrint.22:alignment @right
+  662 draw print :drawText.22:x *tmp302 @right
   663 label *label153
   664 label *label152
   665 label *label149
   666 op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label154 lessThan :drawItem.5:col :drawMaterials:columns
+  667 jump *label154 lessThan :drawItem.5:col 1
   668 set :drawItem.5:col 0
   669 op sub :drawItem.5:y :drawMaterials:y 15
   670 label *label154
 
   700 set :drawBold.10:y *tmp309
   701 set :drawBold.10:alignment @bottomLeft
   702 set :drawText.23:x 22
-    * set :drawText.23:y :drawUnit:y
+  703 set :drawText.23:y *tmp309
   704 set :drawText.23:alignment @bottomLeft
   705 print "Builder"
-    * set :drawPrint.23:x :drawBold.10:x
-    * set :drawPrint.23:y :drawBold.10:y
-    * set :drawPrint.23:alignment :drawBold.10:alignment
-    * draw print :drawText.23:x :drawText.23:y :drawText.23:alignment
+  706 set :drawPrint.23:x 22
+  707 set :drawPrint.23:y *tmp309
+  708 set :drawPrint.23:alignment @bottomLeft
+  709 draw print 22 :drawUnit:y @bottomLeft
   710 label *label163
   711 label *label162
   712 op add :drawText.24:x 22 1
-    * set :drawText.24:y :drawUnit:y
+  713 set :drawText.24:y *tmp309
   714 set :drawText.24:alignment @bottomLeft
   715 print "Builder"
-    * set :drawPrint.24:x 23
-    * set :drawPrint.24:y :drawBold.10:y
-    * set :drawPrint.24:alignment :drawBold.10:alignment
-    * draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
+  716 set :drawPrint.24:y *tmp309
+  717 set :drawPrint.24:alignment @bottomLeft
+  718 draw print 23 :drawUnit:y @bottomLeft
   719 label *label165
   720 label *label164
   721 label *label161
 
   724 set :drawUnit.1:item @poly
   725 set :drawUnit.1:items 0
   726 set :drawUnit.1:y *tmp313
-    * set :drawItem.6:col 0
-    * set :drawItem.6:y *tmp313
-    * set :drawItem.6:columns 1
-    * set :drawItem.6:item @poly
-    * set :drawItem.6:current 0
   727 set :drawItem.6:target .transportTarget
-    * op mul *tmp314 1 176
-    * op div *tmp315 176 2
-    * op sub :drawItem.6:barLength 210 88
-    * op add :drawItem.6:textEnd 48 122
-    * op mul *tmp318 122 :drawUnit.1:items
-    * op div *tmp319 *tmp318 :drawItem.6:target
+  728 op mul *tmp318 122 0
+  729 op div *tmp319 0 :drawItem.6:target
   730 op min :drawItem.6:length 122 *tmp319
-    * op mul *tmp321 0 176
-    * op div *tmp322 0 2
-    * op add :drawItem.6:iconX 11 0
-    * op mul *tmp324 0 176
-    * op div *tmp325 0 2
-    * op add :drawItem.6:barX 22 0
-    * op mul *tmp327 0 176
-    * op div *tmp328 0 2
   731 op add :drawItem.6:textX 170 0
   732 draw col %[white]
-    * op add *tmp330 :drawUnit.1:y 5
-    * draw image 11 *tmp330 :drawUnit.1:item 16 0
+  733 op add *tmp330 *tmp313 5
+  734 draw image 11 *tmp330 @poly 16 0
   735 draw color 0 128 0 255
-    * draw rect 22 :drawUnit.1:y :drawItem.6:length 10
+  736 draw rect 22 *tmp313 :drawItem.6:length 10
   737 draw color 0 255 0 255
-    * draw lineRect 22 :drawUnit.1:y 122 10
-    * op add *tmp331 :drawUnit.1:y 5
-    * op add *tmp332 *tmp330 2
+  738 draw lineRect 22 *tmp313 122 10
+  739 op add *tmp331 *tmp313 5
+  740 op add *tmp332 :drawUnit.1:y 7
   741 set :drawBold.11:x 170
   742 set :drawBold.11:y *tmp332
   743 set :drawBold.11:alignment @right
-    * set :drawText.25:x :drawItem.6:textX
+  744 set :drawText.25:x 170
   745 set :drawText.25:y *tmp332
   746 set :drawText.25:alignment @right
   747 print .transportTarget
-    * set :drawPrint.25:x :drawBold.11:x
-    * set :drawPrint.25:y :drawBold.11:y
-    * set :drawPrint.25:alignment :drawBold.11:alignment
-    * draw print :drawText.25:x :drawText.25:y :drawText.25:alignment
+  748 set :drawPrint.25:x 170
+  749 set :drawPrint.25:y *tmp332
+  750 set :drawPrint.25:alignment @right
+  751 draw print :drawItem.6:textX *tmp332 @right
   752 label *label172
   753 label *label171
-    * op add :drawText.26:x :drawItem.6:textX 1
+  754 op add :drawText.26:x 170 1
   755 set :drawText.26:y *tmp332
   756 set :drawText.26:alignment @right
   757 print .transportTarget
-    * set :drawPrint.26:x :drawText.26:x
-    * set :drawPrint.26:y :drawBold.11:y
-    * set :drawPrint.26:alignment :drawBold.11:alignment
-    * draw print :drawText.26:x :drawText.26:y :drawText.26:alignment
+  758 set :drawPrint.26:x 171
+  759 set :drawPrint.26:y *tmp332
+  760 set :drawPrint.26:alignment @right
+  761 draw print 171 *tmp332 @right
   762 label *label174
   763 label *label173
   764 label *label170
-    * op add :drawItem.6:col 0 1
   765 jump *label175 lessThan 1 1
-    * op sub :drawItem.6:y :drawUnit.1:y 15
+  766 op sub :drawItem.6:y *tmp313 15
   767 label *label175
   768 label *label176
   769 label *label169
 
   778 set :drawUnit.2:item .transportItem
   779 set :drawUnit.2:items *tmp341
   780 set :drawUnit.2:y *tmp342
-    * set :drawItem.7:col 0
-    * set :drawItem.7:y *tmp342
-    * set :drawItem.7:columns 1
-    * set :drawItem.7:item :drawUnit.2:item
-    * set :drawItem.7:current *tmp341
   781 set :drawItem.7:target .transportTarget
-    * op mul *tmp343 1 176
-    * op div *tmp344 176 2
-    * op sub :drawItem.7:barLength 210 88
-    * op add :drawItem.7:textEnd 48 122
-    * op mul *tmp347 122 :drawUnit.2:items
+  782 op mul *tmp347 122 *tmp341
   783 op div *tmp348 *tmp347 :drawItem.7:target
   784 op min :drawItem.7:length 122 *tmp348
-    * op mul *tmp350 0 176
-    * op div *tmp351 0 2
-    * op add :drawItem.7:iconX 11 0
-    * op mul *tmp353 0 176
-    * op div *tmp354 0 2
-    * op add :drawItem.7:barX 22 0
-    * op mul *tmp356 0 176
-    * op div *tmp357 0 2
   785 op add :drawItem.7:textX 170 0
   786 draw col %[white]
-    * op add *tmp359 :drawUnit.2:y 5
+  787 op add *tmp359 *tmp342 5
   788 draw image 11 *tmp359 :drawUnit.2:item 16 0
   789 draw color 0 128 0 255
-    * draw rect 22 :drawUnit.2:y :drawItem.7:length 10
+  790 draw rect 22 *tmp342 :drawItem.7:length 10
   791 draw color 0 255 0 255
-    * draw lineRect 22 :drawUnit.2:y 122 10
-    * op add *tmp360 :drawUnit.2:y 5
-    * op add *tmp361 *tmp359 2
+  792 draw lineRect 22 *tmp342 122 10
+  793 op add *tmp360 *tmp342 5
+  794 op add *tmp361 :drawUnit.2:y 7
   795 set :drawBold.12:x 170
   796 set :drawBold.12:y *tmp361
   797 set :drawBold.12:alignment @right
-    * set :drawText.27:x :drawItem.7:textX
+  798 set :drawText.27:x 170
   799 set :drawText.27:y *tmp361
   800 set :drawText.27:alignment @right
   801 print .transportTarget
-    * set :drawPrint.27:x :drawBold.12:x
-    * set :drawPrint.27:y :drawBold.12:y
-    * set :drawPrint.27:alignment :drawBold.12:alignment
-    * draw print :drawText.27:x :drawText.27:y :drawText.27:alignment
+  802 set :drawPrint.27:x 170
+  803 set :drawPrint.27:y *tmp361
+  804 set :drawPrint.27:alignment @right
+  805 draw print :drawItem.7:textX *tmp361 @right
   806 label *label181
   807 label *label180
-    * op add :drawText.28:x :drawItem.7:textX 1
+  808 op add :drawText.28:x 170 1
   809 set :drawText.28:y *tmp361
   810 set :drawText.28:alignment @right
   811 print .transportTarget
-    * set :drawPrint.28:x :drawText.28:x
-    * set :drawPrint.28:y :drawBold.12:y
-    * set :drawPrint.28:alignment :drawBold.12:alignment
-    * draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
+  812 set :drawPrint.28:x 171
+  813 set :drawPrint.28:y *tmp361
+  814 set :drawPrint.28:alignment @right
+  815 draw print 171 *tmp361 @right
   816 label *label183
   817 label *label182
   818 label *label179
-    * op add :drawItem.7:col 0 1
   819 jump *label184 lessThan 1 1
-    * op sub :drawItem.7:y :drawUnit.2:y 15
+  820 op sub :drawItem.7:y *tmp342 15
   821 label *label184
   822 label *label185
   823 label *label178
 
   826 label *label158
   827 set :drawUnits:x 170
   828 draw col %[white]
-    * set :drawUnitCount:type @poly
   829 set :drawUnitCount:count .polys
   830 jump *label188 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp369 170 20
   831 draw image 150 127 @poly 12 0
   832 set :drawText.29:x 170
   833 set :drawText.29:y 129
   834 set :drawText.29:alignment @right
   835 print "x"
   836 print :drawUnitCount:count
-    * set :drawPrint.29:x :drawUnits:x
-    * set :drawPrint.29:y 129
-    * set :drawPrint.29:alignment @right
-    * draw print :drawText.29:x :drawText.29:y :drawText.29:alignment
+  837 set :drawPrint.29:x 170
+  838 draw print 170 129 @right
   839 label *label191
   840 label *label190
   841 op sub :drawUnits:x 170 30
   842 label *label188
   843 label *label189
   844 label *label187
-    * set :drawUnitCount.1:type @mono
   845 set :drawUnitCount.1:count .monos
   846 jump *label193 lessThanEq :drawUnitCount.1:count 0
   847 op sub *tmp372 :drawUnits:x 20
 
   851 set :drawText.30:alignment @right
   852 print "x"
   853 print :drawUnitCount.1:count
-    * set :drawPrint.30:x :drawUnits:x
-    * set :drawPrint.30:y 129
-    * set :drawPrint.30:alignment @right
-    * draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
+  854 draw print :drawUnits:x 129 @right
   855 label *label196
   856 label *label195
   857 op sub :drawUnits:x :drawUnits:x 30
   858 label *label193
   859 label *label194
   860 label *label192
-    * set :drawUnitCount.2:type @flare
   861 set :drawUnitCount.2:count .flares
   862 jump *label198 lessThanEq :drawUnitCount.2:count 0
   863 op sub *tmp375 :drawUnits:x 20
 
   867 set :drawText.31:alignment @right
   868 print "x"
   869 print :drawUnitCount.2:count
-    * set :drawPrint.31:x :drawUnits:x
-    * set :drawPrint.31:y 129
-    * set :drawPrint.31:alignment @right
-    * draw print :drawText.31:x :drawText.31:y :drawText.31:alignment
+  870 draw print :drawUnits:x 129 @right
   871 label *label201
   872 label *label200
   873 label *label198
 
   887 set :drawText.32:y 172
   888 set :drawText.32:alignment @topRight
   889 print "Base map"
-    * set :drawPrint.32:x 172
-    * set :drawPrint.32:y 172
-    * set :drawPrint.32:alignment @topRight
-    * draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
+  890 draw print 172 172 @topRight
   891 label *label206
   892 label *label205
   893 draw col %[white]
 
  1077 set :displayLog:x 11
  1078 set :displayLog:y 163
  1079 read :displayLog:logPosition bank1 511
-    * op sub :displayLog:records 511 :displayLog:logPosition
  1080 op sub *tmp389 510 :displayLog:logPosition
  1081 op idiv *tmp390 *tmp389 32
  1082 op add *tmp391 *tmp390 1
 
  1094 set :drawText.33:y 4
  1095 set :drawText.33:alignment @bottomRight
  1096 print :displayLog:pages
-    * set :drawPrint.33:x 172
-    * set :drawPrint.33:y 4
-    * set :drawPrint.33:alignment @bottomRight
-    * draw print :drawText.33:x :drawText.33:y :drawText.33:alignment
+ 1097 draw print 172 4 @bottomRight
  1098 label *label257
  1099 label *label256
  1100 draw col %[white]
-    * set *tmp399 :displayLog:stop
  1101 op sub :displayLog:position :displayLog:start 1
  1102 label *label258
  1103 jump *label260 lessThan :displayLog:position :displayLog:stop
  1104 read :displayLog:record bank1 :displayLog:position
-    * set :displayRecord:record :displayLog:record
  1105 op mod :displayRecord:id :displayLog:record 1000
  1106 jump *label262 lessThanEq :displayRecord:id @blockCount
  1107 op sub *tmp405 :displayRecord:id @blockCount
 
  1124 print :displayRecord:m
  1125 print ":"
  1126 print *tmp414
-    * set :displayRecordAt:image *tmp404
-    * set :displayRecordAt:text :displayRecord:s
-    * draw image :displayLog:x :displayLog:y :displayRecord:icon 14 0
-    * op add *tmp415 :displayLog:x 56
+ 1127 draw image :displayLog:x :displayLog:y *tmp404 14 0
  1128 op add *tmp416 :displayLog:x 44
  1129 op add *tmp417 :displayLog:y 2
  1130 set :drawText.34:x *tmp416
  1131 set :drawText.34:y *tmp417
  1132 set :drawText.34:alignment @right
  1133 print :displayRecord:s
-    * set :drawPrint.34:x *tmp416
-    * set :drawPrint.34:y *tmp417
-    * set :drawPrint.34:alignment @right
-    * draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
+ 1134 draw print *tmp416 *tmp417 @right
  1135 label *label268
  1136 label *label267
  1137 op sub :displayLog:y :displayLog:y 15
 
  1199 jump *label7 always
  1200 end
  1201 label *label4
-    * set :unpackCfg:cfg :drawBlock:cfg
-    * set :unpackCfg:index 0
  1202 set *tmp464 0
-    * op add :unpackCfg:index 0 1
-    * read *tmp465 :drawBlock:cfg *tmp464
+ 1203 read *tmp465 :drawBlock:cfg 0
  1204 op sub *tmp466 *tmp465 35
  1205 lookup block :unpackCfg:type *tmp466
  1206 set *tmp468 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp469 :drawBlock:cfg *tmp468
-    * op sub *tmp470 *tmp469 35
+ 1207 read *tmp469 :drawBlock:cfg 1
  1208 op sub :unpackCfg:x *tmp469 42
  1209 set *tmp472 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp473 :drawBlock:cfg *tmp472
-    * op sub *tmp474 *tmp473 35
+ 1210 read *tmp473 :drawBlock:cfg 2
  1211 op sub :unpackCfg:y *tmp473 42
-    * op add :unpackCfg:index 3 1
-    * op add :unpackCfg:index 4 1
-    * op add :unpackCfg:index 5 1
-    * op add :unpackCfg:index 6 1
-    * op add :unpackCfg:index 7 1
-    * op add :unpackCfg:index 8 1
-    * op add :unpackCfg:index 9 1
  1212 set *tmp497 10
-    * op add :unpackCfg:index 10 1
-    * read *tmp498 :drawBlock:cfg *tmp497
+ 1213 read *tmp498 :drawBlock:cfg 10
  1214 op sub :unpackCfg:rotation *tmp498 35
  1215 set *tmp500 11
-    * op add :unpackCfg:index 11 1
-    * read *tmp501 :drawBlock:cfg *tmp500
+ 1216 read *tmp501 :drawBlock:cfg 11
  1217 op sub :unpackCfg:size *tmp501 35
  1218 set *tmp503 12
-    * op add :unpackCfg:index 12 1
-    * read *tmp504 :drawBlock:cfg *tmp503
+ 1219 read *tmp504 :drawBlock:cfg 12
  1220 op sub :unpackCfg:ind *tmp504 35
  1221 label *label295
-    * set :drawBlock:type :unpackCfg:type
-    * set :drawBlock:x :unpackCfg:x
-    * set :drawBlock:y :unpackCfg:y
-    * set :drawBlock:rotation :unpackCfg:rotation
-    * set :drawBlock:size :unpackCfg:size
-    * set :drawBlock:index :unpackCfg:ind
  1222 op or *tmp506 :unpackCfg:x :unpackCfg:y
  1223 jump *label296 equal *tmp506 false
  1224 op shl *tmp508 1 :unpackCfg:ind

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-244 instructions):
 
    51 op add *tmp57 *tmp59 *tmp60
    52 label *label25
    53 op mul *tmp64 *tmp58 137
-    * op mul *tmp65 :animate:ratio 88
    54 op add *tmp62 *tmp64 *tmp60
    55 label *label26
    56 op mul *tmp69 *tmp58 32
 
    66 draw reset
    67 draw clear 0 0 32
    68 draw col %[gold]
-    * set :drawBold:x 40
-    * set :drawBold:y 161
-    * set :drawBold:alignment @bottom
-    * set :drawText:x 40
-    * set :drawText:y 161
-    * set :drawText:alignment @bottom
    69 print "Goal"
-    * set :drawPrint:x 40
-    * set :drawPrint:y 161
-    * set :drawPrint:alignment @bottom
    70 draw print 40 161 @bottom
    71 label *label32
    72 label *label31
-    * op add :drawText.1:x 40 1
-    * set :drawText.1:y 161
-    * set :drawText.1:alignment @bottom
    73 print "Goal"
-    * set :drawPrint.1:y 161
-    * set :drawPrint.1:alignment @bottom
    74 draw print 41 161 @bottom
    75 label *label34
    76 label *label33
 
   122 print *tmp94
   123 print "."
   124 print *tmp95
-    * set :drawText.2:x 170
-    * set :drawText.2:y 172
-    * set :drawText.2:alignment @topRight
   125 print ")"
   126 draw print 170 172 @topRight
   127 label *label44
 
   129 jump *label45 equal .titaniumDrill false
   130 sensor *tmp97 .titaniumDrill @titanium
   131 op max :drawHeader:count .titaniumDrillCount *tmp97
-    * set :drawHeader:x 170
   132 op log10 *tmp99 :drawHeader:count
   133 op floor :drawHeader:len *tmp99
-    * set :drawText.3:x 170
-    * set :drawText.3:y 155
-    * set :drawText.3:alignment @topRight
   134 print "x"
   135 print :drawHeader:count
-    * set :drawPrint.3:x 170
   136 draw print 170 155 @topRight
   137 label *label48
   138 label *label47
 
   143 label *label46
   144 jump *label49 equal .thoriumContainer false
   145 sensor :drawHeader:count .thoriumContainer @thorium
-    * set :drawHeader:x.1 120
   146 op log10 *tmp106 :drawHeader:count
   147 op floor :drawHeader:len.1 *tmp106
-    * set :drawText.4:x 120
-    * set :drawText.4:y 155
-    * set :drawText.4:alignment @topRight
   148 print "x"
   149 print :drawHeader:count
-    * set :drawPrint.4:x 120
   150 draw print 120 155 @topRight
   151 label *label52
   152 label *label51
 
   215 label *label61
   216 label *label59
   217 label *label57
-    * set :drawBold.1:x 22
-    * set :drawBold.1:y 105
-    * set :drawBold.1:alignment @bottomLeft
-    * set :drawText.5:x 22
-    * set :drawText.5:y 105
-    * set :drawText.5:alignment @bottomLeft
   218 print "Unit factories"
-    * set :drawPrint.5:x 22
-    * set :drawPrint.5:y 105
-    * set :drawPrint.5:alignment @bottomLeft
   219 draw print 22 105 @bottomLeft
   220 label *label66
   221 label *label65
-    * op add :drawText.6:x 22 1
-    * set :drawText.6:y 105
-    * set :drawText.6:alignment @bottomLeft
   222 print "Unit factories"
-    * set :drawPrint.6:y 105
-    * set :drawPrint.6:alignment @bottomLeft
   223 draw print 23 105 @bottomLeft
   224 label *label68
   225 label *label67
 
   227 jump *label69 lessThanEq .factoryProgress 0
   228 op mul *tmp152 122 .factoryProgress
   229 op mul *tmp153 .factoryProgress 122
-    * op min :drawItem:length 122 *tmp153
+  230 op min :drawItem:length 122 *tmp152
   231 op add :drawItem:textX 170 0
   232 draw col %[white]
   233 draw image 11 95 :drawMaterials:unit1 16 0
 
   236 draw color 0 255 0 255
   237 draw lineRect 22 90 122 10
   238 op add *tmp166 95 2
-    * set :drawBold.2:x 170
-    * set :drawBold.2:y 97
-    * set :drawBold.2:alignment @right
-    * set :drawText.7:x 170
-    * set :drawText.7:y 97
-    * set :drawText.7:alignment @right
   239 print :drawMaterials:unitCount1
   240 print "/"
   241 print :drawMaterials:unitTotal1
-    * set :drawPrint.7:x 170
-    * set :drawPrint.7:y 97
-    * set :drawPrint.7:alignment @right
-    * draw print :drawItem:textX *tmp166 @right
+  242 draw print 170 97 @right
   243 label *label74
   244 label *label73
-    * op add :drawText.8:x 170 1
-    * set :drawText.8:y 97
-    * set :drawText.8:alignment @right
   245 print :drawMaterials:unitCount1
   246 print "/"
   247 print :drawMaterials:unitTotal1
-    * set :drawPrint.8:x 171
-    * set :drawPrint.8:y 97
-    * set :drawPrint.8:alignment @right
-    * draw print 171 *tmp166 @right
+  248 draw print 171 97 @right
   249 label *label76
   250 label *label75
   251 label *label72
 
   256 jump *label79 equal :drawMaterials:unit2 null
   257 op mul *tmp176 122 .reconstructorProgress
   258 op mul *tmp177 .reconstructorProgress 122
-    * op min :drawItem.1:length 122 *tmp177
+  259 op min :drawItem.1:length 122 *tmp176
   260 op add :drawItem.1:textX 170 0
   261 draw col %[white]
   262 draw image 11 80 :drawMaterials:unit2 16 0
 
   265 draw color 0 255 0 255
   266 draw lineRect 22 75 122 10
   267 op add *tmp190 80 2
-    * set :drawBold.3:x 170
-    * set :drawBold.3:y 82
-    * set :drawBold.3:alignment @right
-    * set :drawText.9:x 170
-    * set :drawText.9:y 82
-    * set :drawText.9:alignment @right
   268 print :drawMaterials:unitCount2
   269 print "/"
   270 print :drawMaterials:unitTotal2
-    * set :drawPrint.9:x 170
-    * set :drawPrint.9:y 82
-    * set :drawPrint.9:alignment @right
-    * draw print :drawItem.1:textX *tmp190 @right
+  271 draw print 170 82 @right
   272 label *label84
   273 label *label83
-    * op add :drawText.10:x 170 1
-    * set :drawText.10:y 82
-    * set :drawText.10:alignment @right
   274 print :drawMaterials:unitCount2
   275 print "/"
   276 print :drawMaterials:unitTotal2
-    * set :drawPrint.10:x 171
-    * set :drawPrint.10:y 82
-    * set :drawPrint.10:alignment @right
-    * draw print 171 *tmp190 @right
+  277 draw print 171 82 @right
   278 label *label86
   279 label *label85
   280 label *label82
 
   285 jump *label89 equal :drawMaterials:unit3 null
   286 op mul *tmp200 122 :drawMaterials:multiReconstructorProgress
   287 op mul *tmp201 :drawMaterials:multiReconstructorProgress 122
-    * op min :drawItem.2:length 122 *tmp201
+  288 op min :drawItem.2:length 122 *tmp200
   289 op add :drawItem.2:textX 170 0
   290 draw col %[white]
   291 draw image 11 65 :drawMaterials:unit3 16 0
 
   294 draw color 0 255 0 255
   295 draw lineRect 22 60 122 10
   296 op add *tmp214 65 2
-    * set :drawBold.4:x 170
-    * set :drawBold.4:y 67
-    * set :drawBold.4:alignment @right
-    * set :drawText.11:x 170
-    * set :drawText.11:y 67
-    * set :drawText.11:alignment @right
   297 print .megas
   298 print "/"
   299 print .megaTarget
-    * set :drawPrint.11:x 170
-    * set :drawPrint.11:y 67
-    * set :drawPrint.11:alignment @right
-    * draw print :drawItem.2:textX *tmp214 @right
+  300 draw print 170 67 @right
   301 label *label94
   302 label *label93
-    * op add :drawText.12:x 170 1
-    * set :drawText.12:y 67
-    * set :drawText.12:alignment @right
   303 print .megas
   304 print "/"
   305 print .megaTarget
-    * set :drawPrint.12:x 171
-    * set :drawPrint.12:y 67
-    * set :drawPrint.12:alignment @right
-    * draw print 171 *tmp214 @right
+  306 draw print 171 67 @right
   307 label *label96
   308 label *label95
   309 label *label92
 
   328 label *label99
   329 jump *label104 lessThanEq :drawMaterials:target 0
   330 sensor *tmp223 .airFactory :drawMaterials:item
-    * set :drawItem.3:col :drawMaterials:col
   331 set :drawItem.3:y :drawMaterials:y
   332 op mul *tmp228 122 *tmp223
   333 op div *tmp229 *tmp228 :drawMaterials:target
   334 op min :drawItem.3:length 122 *tmp229
-    * op mul *tmp231 :drawMaterials:col 176
   335 op mul *tmp232 :drawMaterials:col 88
   336 op add :drawItem.3:iconX 11 *tmp232
-    * op mul *tmp235 :drawMaterials:col 88
   337 op add :drawItem.3:barX 22 *tmp232
-    * op mul *tmp238 :drawMaterials:col 88
   338 op add :drawItem.3:textX 170 *tmp232
   339 draw col %[white]
   340 op add *tmp240 :drawMaterials:y 5
 
   344 draw color 0 255 0 255
   345 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
   346 op add *tmp242 :drawMaterials:y 7
-    * set :drawBold.5:x :drawItem.3:textX
-    * set :drawBold.5:y *tmp242
-    * set :drawBold.5:alignment @right
-    * set :drawText.13:x :drawItem.3:textX
-    * set :drawText.13:y *tmp242
-    * set :drawText.13:alignment @right
   347 print :drawMaterials:target
-    * set :drawPrint.13:x :drawItem.3:textX
-    * set :drawPrint.13:y *tmp242
-    * set :drawPrint.13:alignment @right
   348 draw print :drawItem.3:textX *tmp242 @right
   349 label *label109
   350 label *label108
   351 op add :drawText.14:x *tmp232 171
-    * set :drawText.14:y *tmp242
-    * set :drawText.14:alignment @right
   352 print :drawMaterials:target
-    * set :drawPrint.14:y *tmp242
-    * set :drawPrint.14:alignment @right
   353 draw print :drawText.14:x *tmp242 @right
   354 label *label111
   355 label *label110
 
   376 op equal *tmp247 .nextBlock @ore-titanium
   377 op or *tmp248 *tmp246 *tmp247
   378 jump *label114 equal *tmp248 false
-    * set :drawBold.6:x 22
-    * set :drawBold.6:y 105
-    * set :drawBold.6:alignment @bottomLeft
-    * set :drawText.15:x 22
-    * set :drawText.15:y 105
-    * set :drawText.15:alignment @bottomLeft
   379 read *tmp250 processor1 ".mapAction"
   380 print *tmp250
-    * set :drawPrint.15:x 22
-    * set :drawPrint.15:y 105
-    * set :drawPrint.15:alignment @bottomLeft
   381 draw print 22 105 @bottomLeft
   382 label *label118
   383 label *label117
-    * op add :drawText.16:x 22 1
-    * set :drawText.16:y 105
-    * set :drawText.16:alignment @bottomLeft
   384 read *tmp252 processor1 ".mapAction"
   385 print *tmp252
-    * set :drawPrint.16:y 105
-    * set :drawPrint.16:alignment @bottomLeft
   386 draw print 23 105 @bottomLeft
   387 label *label120
   388 label *label119
 
   400 draw color 0 255 0 255
   401 draw lineRect 22 90 122 10
   402 op add *tmp271 95 2
-    * set :drawBold.7:x 170
-    * set :drawBold.7:y 97
-    * set :drawBold.7:alignment @right
-    * set :drawText.17:x 170
-    * set :drawText.17:y 97
-    * set :drawText.17:alignment @right
   403 print "x"
   404 read *tmp272 processor1 ".mapSpots"
   405 print *tmp272
-    * set :drawPrint.17:x 170
-    * set :drawPrint.17:y 97
-    * set :drawPrint.17:alignment @right
-    * draw print :drawItem.4:textX *tmp271 @right
+  406 draw print 170 97 @right
   407 label *label124
   408 label *label123
-    * op add :drawText.18:x 170 1
-    * set :drawText.18:y 97
-    * set :drawText.18:alignment @right
   409 print "x"
   410 read *tmp274 processor1 ".mapSpots"
   411 print *tmp274
-    * set :drawPrint.18:x 171
-    * set :drawPrint.18:y 97
-    * set :drawPrint.18:alignment @right
-    * draw print 171 *tmp271 @right
+  412 draw print 171 97 @right
   413 label *label126
   414 label *label125
   415 label *label122
 
   421 label *label114
   422 set .materialCount .totalTargets
   423 set :drawMaterials:count .materialCount
-    * set :drawBold.8:x 22
-    * set :drawBold.8:y 105
-    * set :drawBold.8:alignment @bottomLeft
-    * set :drawText.19:x 22
-    * set :drawText.19:y 105
-    * set :drawText.19:alignment @bottomLeft
   424 print "Materials"
-    * set :drawPrint.19:x 22
-    * set :drawPrint.19:y 105
-    * set :drawPrint.19:alignment @bottomLeft
   425 draw print 22 105 @bottomLeft
   426 label *label131
   427 label *label130
-    * op add :drawText.20:x 22 1
-    * set :drawText.20:y 105
-    * set :drawText.20:alignment @bottomLeft
   428 print "Materials"
-    * set :drawPrint.20:y 105
-    * set :drawPrint.20:alignment @bottomLeft
   429 draw print 23 105 @bottomLeft
   430 label *label133
   431 label *label132
   432 label *label129
-    * set :drawMaterials:columns 1
   433 jump *label134 equal .materialCount false
   434 set :drawMaterials:item.1 @copper
   435 set :drawMaterials:target.1 .targetCopper
 
   467 label *label136
   468 jump *label146 lessThanEq :drawMaterials:target.1 0
   469 sensor *tmp283 .core :drawMaterials:item.1
-    * set :drawItem.5:col :drawMaterials:col
   470 set :drawItem.5:y :drawMaterials:y
-    * set :drawItem.5:columns 1
-    * op mul *tmp284 1 176
-    * op mul *tmp285 1 88
-    * op sub :drawItem.5:barLength 210 88
-    * op add :drawItem.5:textEnd 48 122
   471 op mul *tmp288 122 *tmp283
   472 op div *tmp289 *tmp288 :drawMaterials:target.1
   473 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp291 :drawMaterials:col 176
   474 op mul *tmp292 :drawMaterials:col 88
   475 op add :drawItem.5:iconX 11 *tmp292
-    * op mul *tmp295 :drawMaterials:col 88
   476 op add :drawItem.5:barX 22 *tmp292
-    * op mul *tmp298 :drawMaterials:col 88
   477 op add :drawItem.5:textX 170 *tmp292
   478 draw col %[white]
   479 op add *tmp300 :drawMaterials:y 5
 
   483 draw color 0 255 0 255
   484 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
   485 op add *tmp302 :drawMaterials:y 7
-    * set :drawBold.9:x :drawItem.5:textX
-    * set :drawBold.9:y *tmp302
-    * set :drawBold.9:alignment @right
-    * set :drawText.21:x :drawItem.5:textX
-    * set :drawText.21:y *tmp302
-    * set :drawText.21:alignment @right
   486 print :drawMaterials:target.1
-    * set :drawPrint.21:x :drawItem.5:textX
-    * set :drawPrint.21:y *tmp302
-    * set :drawPrint.21:alignment @right
   487 draw print :drawItem.5:textX *tmp302 @right
   488 label *label151
   489 label *label150
   490 op add :drawText.22:x :drawItem.5:textX 1
-    * set :drawText.22:y *tmp302
-    * set :drawText.22:alignment @right
   491 print :drawMaterials:target.1
-    * set :drawPrint.22:y *tmp302
-    * set :drawPrint.22:alignment @right
   492 draw print :drawText.22:x *tmp302 @right
   493 label *label153
   494 label *label152
 
   526 set *tmp309 25
   527 label *label160
   528 set :drawUnit:y *tmp309
-    * set :drawBold.10:x 22
-    * set :drawBold.10:y *tmp309
-    * set :drawBold.10:alignment @bottomLeft
-    * set :drawText.23:x 22
-    * set :drawText.23:y *tmp309
-    * set :drawText.23:alignment @bottomLeft
   529 print "Builder"
-    * set :drawPrint.23:x 22
-    * set :drawPrint.23:y *tmp309
-    * set :drawPrint.23:alignment @bottomLeft
-    * draw print 22 :drawUnit:y @bottomLeft
+  530 draw print 22 *tmp309 @bottomLeft
   531 label *label163
   532 label *label162
-    * op add :drawText.24:x 22 1
-    * set :drawText.24:y *tmp309
-    * set :drawText.24:alignment @bottomLeft
   533 print "Builder"
-    * set :drawPrint.24:y *tmp309
-    * set :drawPrint.24:alignment @bottomLeft
-    * draw print 23 :drawUnit:y @bottomLeft
+  534 draw print 23 *tmp309 @bottomLeft
   535 label *label165
   536 label *label164
   537 label *label161
   538 jump *label166 notEqual .transportItem null
   539 op sub *tmp313 *tmp309 15
-    * set :drawUnit.1:item @poly
-    * set :drawUnit.1:items 0
   540 set :drawUnit.1:y *tmp313
   541 set :drawItem.6:target .transportTarget
-    * op mul *tmp318 122 0
   542 op div *tmp319 0 :drawItem.6:target
   543 op min :drawItem.6:length 122 *tmp319
   544 op add :drawItem.6:textX 170 0
   545 draw col %[white]
-    * op add *tmp330 *tmp313 5
+  546 op sub *tmp330 *tmp309 10
   547 draw image 11 *tmp330 @poly 16 0
   548 draw color 0 128 0 255
   549 draw rect 22 *tmp313 :drawItem.6:length 10
   550 draw color 0 255 0 255
   551 draw lineRect 22 *tmp313 122 10
-    * op add *tmp331 *tmp313 5
-    * op add *tmp332 :drawUnit.1:y 7
-    * set :drawBold.11:x 170
-    * set :drawBold.11:y *tmp332
-    * set :drawBold.11:alignment @right
-    * set :drawText.25:x 170
-    * set :drawText.25:y *tmp332
-    * set :drawText.25:alignment @right
+  552 op sub *tmp331 *tmp309 10
+  553 op add *tmp332 *tmp313 7
   554 print .transportTarget
-    * set :drawPrint.25:x 170
-    * set :drawPrint.25:y *tmp332
-    * set :drawPrint.25:alignment @right
-    * draw print :drawItem.6:textX *tmp332 @right
+  555 draw print 170 *tmp332 @right
   556 label *label172
   557 label *label171
-    * op add :drawText.26:x 170 1
-    * set :drawText.26:y *tmp332
-    * set :drawText.26:alignment @right
   558 print .transportTarget
-    * set :drawPrint.26:x 171
-    * set :drawPrint.26:y *tmp332
-    * set :drawPrint.26:alignment @right
   559 draw print 171 *tmp332 @right
   560 label *label174
   561 label *label173
   562 label *label170
   563 jump *label175 lessThan 1 1
-    * op sub :drawItem.6:y *tmp313 15
+  564 op sub :drawItem.6:y *tmp309 30
   565 label *label175
   566 label *label176
   567 label *label169
 
   574 op mul *tmp341 *tmp339 *tmp340
   575 op sub *tmp342 *tmp309 15
   576 set :drawUnit.2:item .transportItem
-    * set :drawUnit.2:items *tmp341
   577 set :drawUnit.2:y *tmp342
   578 set :drawItem.7:target .transportTarget
   579 op mul *tmp347 122 *tmp341
 
   581 op min :drawItem.7:length 122 *tmp348
   582 op add :drawItem.7:textX 170 0
   583 draw col %[white]
-    * op add *tmp359 *tmp342 5
+  584 op sub *tmp359 *tmp309 10
   585 draw image 11 *tmp359 :drawUnit.2:item 16 0
   586 draw color 0 128 0 255
   587 draw rect 22 *tmp342 :drawItem.7:length 10
   588 draw color 0 255 0 255
   589 draw lineRect 22 *tmp342 122 10
-    * op add *tmp360 *tmp342 5
-    * op add *tmp361 :drawUnit.2:y 7
-    * set :drawBold.12:x 170
-    * set :drawBold.12:y *tmp361
-    * set :drawBold.12:alignment @right
-    * set :drawText.27:x 170
-    * set :drawText.27:y *tmp361
-    * set :drawText.27:alignment @right
+  590 op sub *tmp360 *tmp309 10
+  591 op add *tmp361 *tmp342 7
   592 print .transportTarget
-    * set :drawPrint.27:x 170
-    * set :drawPrint.27:y *tmp361
-    * set :drawPrint.27:alignment @right
-    * draw print :drawItem.7:textX *tmp361 @right
+  593 draw print 170 *tmp361 @right
   594 label *label181
   595 label *label180
-    * op add :drawText.28:x 170 1
-    * set :drawText.28:y *tmp361
-    * set :drawText.28:alignment @right
   596 print .transportTarget
-    * set :drawPrint.28:x 171
-    * set :drawPrint.28:y *tmp361
-    * set :drawPrint.28:alignment @right
   597 draw print 171 *tmp361 @right
   598 label *label183
   599 label *label182
   600 label *label179
   601 jump *label184 lessThan 1 1
-    * op sub :drawItem.7:y *tmp342 15
+  602 op sub :drawItem.7:y *tmp309 30
   603 label *label184
   604 label *label185
   605 label *label178
 
   611 set :drawUnitCount:count .polys
   612 jump *label188 lessThanEq :drawUnitCount:count 0
   613 draw image 150 127 @poly 12 0
-    * set :drawText.29:x 170
-    * set :drawText.29:y 129
-    * set :drawText.29:alignment @right
   614 print "x"
   615 print :drawUnitCount:count
-    * set :drawPrint.29:x 170
   616 draw print 170 129 @right
   617 label *label191
   618 label *label190
 
   624 jump *label193 lessThanEq :drawUnitCount.1:count 0
   625 op sub *tmp372 :drawUnits:x 20
   626 draw image *tmp372 127 @mono 12 0
-    * set :drawText.30:x :drawUnits:x
-    * set :drawText.30:y 129
-    * set :drawText.30:alignment @right
   627 print "x"
   628 print :drawUnitCount.1:count
   629 draw print :drawUnits:x 129 @right
 
   637 jump *label198 lessThanEq :drawUnitCount.2:count 0
   638 op sub *tmp375 :drawUnits:x 20
   639 draw image *tmp375 127 @flare 12 0
-    * set :drawText.31:x :drawUnits:x
-    * set :drawText.31:y 129
-    * set :drawText.31:alignment @right
   640 print "x"
   641 print :drawUnitCount.2:count
   642 draw print :drawUnits:x 129 @right
 
   655 draw reset
   656 draw clear 0 0 32
   657 draw col %[gold]
-    * set :drawText.32:x 172
-    * set :drawText.32:y 172
-    * set :drawText.32:alignment @topRight
   658 print "Base map"
   659 draw print 172 172 @topRight
   660 label *label206
 
   859 op sub *tmp398 .page 1
   860 print *tmp398
   861 print "/"
-    * set :drawText.33:x 172
-    * set :drawText.33:y 4
-    * set :drawText.33:alignment @bottomRight
   862 print :displayLog:pages
   863 draw print 172 4 @bottomRight
   864 label *label257
 
   876 label *label262
   877 lookup block *tmp404 :displayRecord:id
   878 label *label263
-    * set :displayRecord:icon *tmp404
   879 op div *tmp408 :displayLog:record 1000
   880 op idiv :displayRecord:t *tmp408 120
   881 op idiv :displayRecord:m :displayRecord:t 60
 
   892 draw image :displayLog:x :displayLog:y *tmp404 14 0
   893 op add *tmp416 :displayLog:x 44
   894 op add *tmp417 :displayLog:y 2
-    * set :drawText.34:x *tmp416
-    * set :drawText.34:y *tmp417
-    * set :drawText.34:alignment @right
   895 print :displayRecord:s
   896 draw print *tmp416 *tmp417 @right
   897 label *label268
 
   961 jump *label7 always
   962 end
   963 label *label4
-    * set *tmp464 0
   964 read *tmp465 :drawBlock:cfg 0
   965 op sub *tmp466 *tmp465 35
   966 lookup block :unpackCfg:type *tmp466
-    * set *tmp468 1
   967 read *tmp469 :drawBlock:cfg 1
   968 op sub :unpackCfg:x *tmp469 42
-    * set *tmp472 2
   969 read *tmp473 :drawBlock:cfg 2
   970 op sub :unpackCfg:y *tmp473 42
-    * set *tmp497 10
   971 read *tmp498 :drawBlock:cfg 10
   972 op sub :unpackCfg:rotation *tmp498 35
-    * set *tmp500 11
   973 read *tmp501 :drawBlock:cfg 11
   974 op sub :unpackCfg:size *tmp501 35
-    * set *tmp503 12
   975 read *tmp504 :drawBlock:cfg 12
   976 op sub :unpackCfg:ind *tmp504 35
   977 label *label295

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-20 instructions):
 
   226 label *label64
   227 jump *label69 lessThanEq .factoryProgress 0
   228 op mul *tmp152 122 .factoryProgress
-    * op mul *tmp153 .factoryProgress 122
   229 op min :drawItem:length 122 *tmp152
-    * op add :drawItem:textX 170 0
   230 draw col %[white]
   231 draw image 11 95 :drawMaterials:unit1 16 0
   232 draw color 0 128 0 255
   233 draw rect 22 90 :drawItem:length 10
   234 draw color 0 255 0 255
   235 draw lineRect 22 90 122 10
-    * op add *tmp166 95 2
   236 print :drawMaterials:unitCount1
   237 print "/"
   238 print :drawMaterials:unitTotal1
 
   252 label *label71
   253 jump *label79 equal :drawMaterials:unit2 null
   254 op mul *tmp176 122 .reconstructorProgress
-    * op mul *tmp177 .reconstructorProgress 122
   255 op min :drawItem.1:length 122 *tmp176
-    * op add :drawItem.1:textX 170 0
   256 draw col %[white]
   257 draw image 11 80 :drawMaterials:unit2 16 0
   258 draw color 0 128 0 255
   259 draw rect 22 75 :drawItem.1:length 10
   260 draw color 0 255 0 255
   261 draw lineRect 22 75 122 10
-    * op add *tmp190 80 2
   262 print :drawMaterials:unitCount2
   263 print "/"
   264 print :drawMaterials:unitTotal2
 
   278 label *label81
   279 jump *label89 equal :drawMaterials:unit3 null
   280 op mul *tmp200 122 :drawMaterials:multiReconstructorProgress
-    * op mul *tmp201 :drawMaterials:multiReconstructorProgress 122
   281 op min :drawItem.2:length 122 *tmp200
-    * op add :drawItem.2:textX 170 0
   282 draw col %[white]
   283 draw image 11 65 :drawMaterials:unit3 16 0
   284 draw color 0 128 0 255
   285 draw rect 22 60 :drawItem.2:length 10
   286 draw color 0 255 0 255
   287 draw lineRect 22 60 122 10
-    * op add *tmp214 65 2
   288 print .megas
   289 print "/"
   290 print .megaTarget
 
   383 op mul *tmp257 122 :drawItem.4:current
   384 op div *tmp258 *tmp257 :drawItem.4:target
   385 op min :drawItem.4:length 122 *tmp258
-    * op add :drawItem.4:textX 170 0
   386 draw col %[white]
   387 draw image 11 95 @titanium 16 0
   388 draw color 0 128 0 255
   389 draw rect 22 90 :drawItem.4:length 10
   390 draw color 0 255 0 255
   391 draw lineRect 22 90 122 10
-    * op add *tmp271 95 2
   392 print "x"
   393 read *tmp272 processor1 ".mapSpots"
   394 print *tmp272
 
   476 draw print :drawItem.5:textX *tmp302 @right
   477 label *label151
   478 label *label150
-    * op add :drawText.22:x :drawItem.5:textX 1
+  479 op add :drawText.22:x *tmp292 171
   480 print :drawMaterials:target.1
   481 draw print :drawText.22:x *tmp302 @right
   482 label *label153
 
   514 label *label159
   515 set *tmp309 25
   516 label *label160
-    * set :drawUnit:y *tmp309
   517 print "Builder"
   518 draw print 22 *tmp309 @bottomLeft
   519 label *label163
 
   525 label *label161
   526 jump *label166 notEqual .transportItem null
   527 op sub *tmp313 *tmp309 15
-    * set :drawUnit.1:y *tmp313
   528 set :drawItem.6:target .transportTarget
   529 op div *tmp319 0 :drawItem.6:target
   530 op min :drawItem.6:length 122 *tmp319
-    * op add :drawItem.6:textX 170 0
   531 draw col %[white]
   532 op sub *tmp330 *tmp309 10
   533 draw image 11 *tmp330 @poly 16 0
 
   535 draw rect 22 *tmp313 :drawItem.6:length 10
   536 draw color 0 255 0 255
   537 draw lineRect 22 *tmp313 122 10
-    * op sub *tmp331 *tmp309 10
-    * op add *tmp332 *tmp313 7
+  538 op sub *tmp332 *tmp309 8
   539 print .transportTarget
   540 draw print 170 *tmp332 @right
   541 label *label172
 
   546 label *label173
   547 label *label170
   548 jump *label175 lessThan 1 1
-    * op sub :drawItem.6:y *tmp309 30
   549 label *label175
   550 label *label176
   551 label *label169
 
   558 op mul *tmp341 *tmp339 *tmp340
   559 op sub *tmp342 *tmp309 15
   560 set :drawUnit.2:item .transportItem
-    * set :drawUnit.2:y *tmp342
   561 set :drawItem.7:target .transportTarget
   562 op mul *tmp347 122 *tmp341
   563 op div *tmp348 *tmp347 :drawItem.7:target
   564 op min :drawItem.7:length 122 *tmp348
-    * op add :drawItem.7:textX 170 0
   565 draw col %[white]
   566 op sub *tmp359 *tmp309 10
   567 draw image 11 *tmp359 :drawUnit.2:item 16 0
 
   569 draw rect 22 *tmp342 :drawItem.7:length 10
   570 draw color 0 255 0 255
   571 draw lineRect 22 *tmp342 122 10
-    * op sub *tmp360 *tmp309 10
-    * op add *tmp361 *tmp342 7
+  572 op sub *tmp361 *tmp309 8
   573 print .transportTarget
   574 draw print 170 *tmp361 @right
   575 label *label181
 
   580 label *label182
   581 label *label179
   582 jump *label184 lessThan 1 1
-    * op sub :drawItem.7:y *tmp309 30
   583 label *label184
   584 label *label185
   585 label *label178

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
   847 op sub :displayLog:position :displayLog:start 1
   848 label *label258
   849 jump *label260 lessThan :displayLog:position :displayLog:stop
+  850 label *label300
   851 read :displayLog:record bank1 :displayLog:position
   852 op mod :displayRecord:id :displayLog:record 1000
   853 jump *label262 lessThanEq :displayRecord:id @blockCount
 
   893 label *label272
   894 label *label259
   895 op sub :displayLog:position :displayLog:position 1
-    * jump *label258 always
+  896 jump *label300 greaterThanEq :displayLog:position :displayLog:stop
   897 label *label260
   898 label *label255
   899 label *label203

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-18 instructions):
 
    83 jump *label36 always
    84 label *label35
    85 jump *label37 notEqual :drawHeader:count 1
-    * jump *label39 equal .nextBlock null
-    * set *tmp80 .nextBlock
-    * jump *label40 always
-    * label *label39
-    * set *tmp80 .nextUnit
-    * label *label40
+   86 select *tmp80 notEqual .nextBlock null .nextBlock .nextUnit
    87 draw image 40 137 *tmp80 32 0
    88 jump *label38 always
    89 label *label37
 
    98 op idiv :drawHeader:t *tmp84 120
    99 op idiv :drawHeader:m :drawHeader:t 60
   100 op mod :drawHeader:s :drawHeader:t 60
-    * jump *label41 greaterThanEq :drawHeader:s 10
-    * set *tmp90 "0"
-    * jump *label42 always
-    * label *label41
-    * set *tmp90 ""
-    * label *label42
+  101 select *tmp90 lessThan :drawHeader:s 10 "0" ""
   102 print :drawHeader:m
   103 print ":"
   104 print *tmp90
 
   236 label *label76
   237 label *label75
   238 label *label72
-    * jump *label77 lessThan 1 1
-    * label *label77
-    * label *label78
   239 label *label71
   240 jump *label79 equal :drawMaterials:unit2 null
   241 op mul *tmp176 122 .reconstructorProgress
 
   259 label *label86
   260 label *label85
   261 label *label82
-    * jump *label87 lessThan 1 1
-    * label *label87
-    * label *label88
   262 label *label81
   263 jump *label89 equal :drawMaterials:unit3 null
   264 op mul *tmp200 122 :drawMaterials:multiReconstructorProgress
 
   282 label *label96
   283 label *label95
   284 label *label92
-    * jump *label97 lessThan 1 1
-    * label *label97
-    * label *label98
   285 label *label91
   286 label *label89
   287 label *label90
 
   383 label *label126
   384 label *label125
   385 label *label122
-    * jump *label127 lessThan 1 1
-    * label *label127
-    * label *label128
   386 label *label121
   387 jump *label115 always
   388 label *label114
 
   486 label *label55
   487 label *label53
   488 draw col %[white]
-    * jump *label159 greaterThanEq .materialCount 4
-    * set *tmp309 40
-    * jump *label160 always
-    * label *label159
-    * set *tmp309 25
-    * label *label160
+  489 select *tmp309 lessThan .materialCount 4 40 25
   490 print "Builder"
   491 draw print 22 *tmp309 @bottomLeft
   492 label *label163
 
   518 label *label174
   519 label *label173
   520 label *label170
-    * jump *label175 lessThan 1 1
-    * label *label175
-    * label *label176
   521 label *label169
   522 label *label168
   523 jump *label167 always
 
   549 label *label183
   550 label *label182
   551 label *label179
-    * jump *label184 lessThan 1 1
-    * label *label184
-    * label *label185
   552 label *label178
   553 label *label177
   554 label *label167
 
   828 op idiv :displayRecord:t *tmp408 120
   829 op idiv :displayRecord:m :displayRecord:t 60
   830 op mod :displayRecord:s :displayRecord:t 60
-    * jump *label264 greaterThanEq :displayRecord:s 10
-    * set *tmp414 "0"
-    * jump *label265 always
-    * label *label264
-    * set *tmp414 ""
-    * label *label265
+  831 select *tmp414 lessThan :displayRecord:s 10 "0" ""
   832 print :displayRecord:m
   833 print ":"
   834 print *tmp414

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
   817 label *label300
   818 read :displayLog:record bank1 :displayLog:position
   819 op mod :displayRecord:id :displayLog:record 1000
-    * jump *label262 lessThanEq :displayRecord:id @blockCount
+  820 lookup block *tmp404 :displayRecord:id
+  821 jump *label263 lessThanEq :displayRecord:id @blockCount
   822 op sub *tmp405 :displayRecord:id @blockCount
   823 lookup unit *tmp404 *tmp405
   824 jump *label263 always
-    * label *label262
-    * lookup block *tmp404 :displayRecord:id
   825 label *label263
   826 op div *tmp408 :displayLog:record 1000
   827 op idiv :displayRecord:t *tmp408 120

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-3 instructions):
 
   765 set :displayBaseMap:i .recentBuildIndex
   766 jump *label248 lessThan :displayBaseMap:i 0
   767 set .recentBuildIndex -1
-    * readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
+  768 readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
   769 setaddr :drawBlock*retaddr *label250 (h:*label250)
   770 call *label4 *invalid :drawBlock*retval (m:*label250) (h:*label250)
   771 label *label250

Modifications by Inline function 'drawBlock' defined at Display.mnd:487:1 (+24 instructions):
 
   759 setaddr *tmp378 *label246
   760 label *label207
   761 set :drawBlock:cfg :displayBaseMap:cfg
-    * setaddr :drawBlock*retaddr *label247 (h:*label247)
-    * call *label4 *invalid :drawBlock*retval (m:*label247) (h:*label247)
-    * label *label247
+  762 label *label301
+  763 read *tmp465 :drawBlock:cfg 0
+  764 op sub *tmp466 *tmp465 35
+  765 lookup block :unpackCfg:type *tmp466
+  766 read *tmp469 :drawBlock:cfg 1
+  767 op sub :unpackCfg:x *tmp469 42
+  768 read *tmp473 :drawBlock:cfg 2
+  769 op sub :unpackCfg:y *tmp473 42
+  770 read *tmp498 :drawBlock:cfg 10
+  771 op sub :unpackCfg:rotation *tmp498 35
+  772 read *tmp501 :drawBlock:cfg 11
+  773 op sub :unpackCfg:size *tmp501 35
+  774 read *tmp504 :drawBlock:cfg 12
+  775 op sub :unpackCfg:ind *tmp504 35
+  776 label *label302
+  777 op or *tmp506 :unpackCfg:x :unpackCfg:y
+  778 jump *label305 equal *tmp506 false
+  779 op shl *tmp508 1 :unpackCfg:ind
+  780 op and *tmp509 .blocksBuilt *tmp508
+  781 jump *label303 equal *tmp509 false
+  782 draw col %[white]
+  783 jump *label304 always
+  784 label *label303
+  785 draw color 128 255 128 128
+  786 label *label304
+  787 op and *tmp511 :unpackCfg:size 1
+  788 op sub :drawBlock:offset 1 *tmp511
+  789 op mul *tmp513 2 :unpackCfg:x
+  790 op add *tmp514 *tmp513 :drawBlock:offset
+  791 op mul *tmp515 2 :unpackCfg:y
+  792 op add *tmp516 *tmp515 :drawBlock:offset
+  793 op mul *tmp517 2 :unpackCfg:size
+  794 op mul *tmp518 90 :unpackCfg:rotation
+  795 draw image *tmp514 *tmp516 :unpackCfg:type *tmp517 *tmp518
+  796 label *label305
+  797 label *label306
+  798 label *label307
   799 set :displayBaseMap:i .recentBuildIndex
   800 jump *label248 lessThan :displayBaseMap:i 0
   801 set .recentBuildIndex -1
   802 readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
-    * setaddr :drawBlock*retaddr *label250 (h:*label250)
-    * call *label4 *invalid :drawBlock*retval (m:*label250) (h:*label250)
-    * label *label250
+  803 label *label308
+  804 read *tmp465 :drawBlock:cfg 0
+  805 op sub *tmp466 *tmp465 35
+  806 lookup block :unpackCfg:type *tmp466
+  807 read *tmp469 :drawBlock:cfg 1
+  808 op sub :unpackCfg:x *tmp469 42
+  809 read *tmp473 :drawBlock:cfg 2
+  810 op sub :unpackCfg:y *tmp473 42
+  811 read *tmp498 :drawBlock:cfg 10
+  812 op sub :unpackCfg:rotation *tmp498 35
+  813 read *tmp501 :drawBlock:cfg 11
+  814 op sub :unpackCfg:size *tmp501 35
+  815 read *tmp504 :drawBlock:cfg 12
+  816 op sub :unpackCfg:ind *tmp504 35
+  817 label *label309
+  818 op or *tmp506 :unpackCfg:x :unpackCfg:y
+  819 jump *label312 equal *tmp506 false
+  820 op shl *tmp508 1 :unpackCfg:ind
+  821 op and *tmp509 .blocksBuilt *tmp508
+  822 jump *label310 equal *tmp509 false
+  823 draw col %[white]
+  824 jump *label311 always
+  825 label *label310
+  826 draw color 128 255 128 128
+  827 label *label311
+  828 op and *tmp511 :unpackCfg:size 1
+  829 op sub :drawBlock:offset 1 *tmp511
+  830 op mul *tmp513 2 :unpackCfg:x
+  831 op add *tmp514 *tmp513 :drawBlock:offset
+  832 op mul *tmp515 2 :unpackCfg:y
+  833 op add *tmp516 *tmp515 :drawBlock:offset
+  834 op mul *tmp517 2 :unpackCfg:size
+  835 op mul *tmp518 90 :unpackCfg:rotation
+  836 draw image *tmp514 *tmp516 :unpackCfg:type *tmp517 *tmp518
+  837 label *label312
+  838 label *label313
+  839 label *label314
   840 label *label248
   841 label *label249
   842 sensor *tmp383 switch1 @enabled
 
   970 wait 1e12
   971 jump *label7 always
   972 end
-    * label *label4
-    * read *tmp465 :drawBlock:cfg 0
-    * op sub *tmp466 *tmp465 35
-    * lookup block :unpackCfg:type *tmp466
-    * read *tmp469 :drawBlock:cfg 1
-    * op sub :unpackCfg:x *tmp469 42
-    * read *tmp473 :drawBlock:cfg 2
-    * op sub :unpackCfg:y *tmp473 42
-    * read *tmp498 :drawBlock:cfg 10
-    * op sub :unpackCfg:rotation *tmp498 35
-    * read *tmp501 :drawBlock:cfg 11
-    * op sub :unpackCfg:size *tmp501 35
-    * read *tmp504 :drawBlock:cfg 12
-    * op sub :unpackCfg:ind *tmp504 35
-    * label *label295
-    * op or *tmp506 :unpackCfg:x :unpackCfg:y
-    * jump *label296 equal *tmp506 false
-    * op shl *tmp508 1 :unpackCfg:ind
-    * op and *tmp509 .blocksBuilt *tmp508
-    * jump *label298 equal *tmp509 false
-    * draw col %[white]
-    * jump *label299 always
-    * label *label298
-    * draw color 128 255 128 128
-    * label *label299
-    * op and *tmp511 :unpackCfg:size 1
-    * op sub :drawBlock:offset 1 *tmp511
-    * op mul *tmp513 2 :unpackCfg:x
-    * op add *tmp514 *tmp513 :drawBlock:offset
-    * op mul *tmp515 2 :unpackCfg:y
-    * op add *tmp516 *tmp515 :drawBlock:offset
-    * op mul *tmp517 2 :unpackCfg:size
-    * op mul *tmp518 90 :unpackCfg:rotation
-    * draw image *tmp514 *tmp516 :unpackCfg:type *tmp517 *tmp518
-    * label *label296
-    * label *label297
-    * label *label294
-    * return :drawBlock*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   760 label *label207
   761 set :drawBlock:cfg :displayBaseMap:cfg
   762 label *label301
-    * read *tmp465 :drawBlock:cfg 0
+  763 read *tmp465 :displayBaseMap:cfg 0
   764 op sub *tmp466 *tmp465 35
   765 lookup block :unpackCfg:type *tmp466
-    * read *tmp469 :drawBlock:cfg 1
+  766 read *tmp469 :displayBaseMap:cfg 1
   767 op sub :unpackCfg:x *tmp469 42
-    * read *tmp473 :drawBlock:cfg 2
+  768 read *tmp473 :displayBaseMap:cfg 2
   769 op sub :unpackCfg:y *tmp473 42
-    * read *tmp498 :drawBlock:cfg 10
+  770 read *tmp498 :displayBaseMap:cfg 10
   771 op sub :unpackCfg:rotation *tmp498 35
-    * read *tmp501 :drawBlock:cfg 11
+  772 read *tmp501 :displayBaseMap:cfg 11
   773 op sub :unpackCfg:size *tmp501 35
-    * read *tmp504 :drawBlock:cfg 12
+  774 read *tmp504 :displayBaseMap:cfg 12
   775 op sub :unpackCfg:ind *tmp504 35
   776 label *label302
   777 op or *tmp506 :unpackCfg:x :unpackCfg:y

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   758 set :displayBaseMap:cfg ".&#ʭ#ǥƁ#ʭ#(G"
   759 setaddr *tmp378 *label246
   760 label *label207
-    * set :drawBlock:cfg :displayBaseMap:cfg
   761 label *label301
   762 read *tmp465 :displayBaseMap:cfg 0
   763 op sub *tmp466 *tmp465 35

Modifications by Unroll iteration loop at Display.mnd:296:13 (+25 instructions):
 
   289 label *label80
   290 jump *label70 always
   291 label *label69
-    * set :drawMaterials:item @lead
-    * set :drawMaterials:target :drawMaterials:targetFactoryLead
-    * setaddr *tmp220 *label102
-    * jump *label99 always
-    * multilabel *label102 (m:marker0)
-    * set :drawMaterials:item @silicon
-    * set :drawMaterials:target :drawMaterials:targetFactorySilicon
-    * setaddr *tmp220 *label103
-    * label *label99
-    * jump *label104 lessThanEq :drawMaterials:target 0
-    * sensor *tmp223 .airFactory :drawMaterials:item
-    * set :drawItem.3:y :drawMaterials:y
-    * op mul *tmp228 122 *tmp223
-    * op div *tmp229 *tmp228 :drawMaterials:target
-    * op min :drawItem.3:length 122 *tmp229
-    * op mul *tmp232 :drawMaterials:col 88
-    * op add :drawItem.3:iconX 11 *tmp232
-    * op add :drawItem.3:barX 22 *tmp232
-    * op add :drawItem.3:textX 170 *tmp232
-    * draw col %[white]
-    * op add *tmp240 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp240 :drawMaterials:item 16 0
-    * draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
-    * draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
-    * op add *tmp242 :drawMaterials:y 7
-    * print :drawMaterials:target
-    * draw print :drawItem.3:textX *tmp242 @right
-    * label *label109
-    * label *label108
-    * op add :drawText.14:x *tmp232 171
-    * print :drawMaterials:target
-    * draw print :drawText.14:x *tmp242 @right
-    * label *label111
-    * label *label110
-    * label *label107
-    * op add :drawItem.3:col :drawMaterials:col 1
-    * jump *label112 lessThan :drawItem.3:col 1
-    * set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawMaterials:y 15
-    * label *label112
-    * label *label113
-    * label *label106
-    * set :drawMaterials:col :drawItem.3:col
-    * set :drawMaterials:y :drawItem.3:y
-    * label *label104
-    * label *label105
-    * label *label100
-    * multijump *tmp220 0 0 (m:marker0)
-    * multilabel *label103 (m:marker0)
-    * label *label101
+  292 set :drawMaterials:item @lead
+  293 set :drawMaterials:target :drawMaterials:targetFactoryLead
+  294 label *label315
+  295 jump *label324 lessThanEq :drawMaterials:target 0
+  296 sensor *tmp223 .airFactory :drawMaterials:item
+  297 set :drawItem.3:y :drawMaterials:y
+  298 op mul *tmp228 122 *tmp223
+  299 op div *tmp229 *tmp228 :drawMaterials:target
+  300 op min :drawItem.3:length 122 *tmp229
+  301 op mul *tmp232 :drawMaterials:col 88
+  302 op add :drawItem.3:iconX 11 *tmp232
+  303 op add :drawItem.3:barX 22 *tmp232
+  304 op add :drawItem.3:textX 170 *tmp232
+  305 draw col %[white]
+  306 op add *tmp240 :drawMaterials:y 5
+  307 draw image :drawItem.3:iconX *tmp240 :drawMaterials:item 16 0
+  308 draw color 0 128 0 255
+  309 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  310 draw color 0 255 0 255
+  311 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  312 op add *tmp242 :drawMaterials:y 7
+  313 print :drawMaterials:target
+  314 draw print :drawItem.3:textX *tmp242 @right
+  315 label *label316
+  316 label *label317
+  317 op add :drawText.14:x *tmp232 171
+  318 print :drawMaterials:target
+  319 draw print :drawText.14:x *tmp242 @right
+  320 label *label318
+  321 label *label319
+  322 label *label320
+  323 op add :drawItem.3:col :drawMaterials:col 1
+  324 jump *label321 lessThan :drawItem.3:col 1
+  325 set :drawItem.3:col 0
+  326 op sub :drawItem.3:y :drawMaterials:y 15
+  327 label *label321
+  328 label *label322
+  329 label *label323
+  330 set :drawMaterials:col :drawItem.3:col
+  331 set :drawMaterials:y :drawItem.3:y
+  332 label *label324
+  333 label *label325
+  334 label *label326
+  335 set :drawMaterials:item @silicon
+  336 set :drawMaterials:target :drawMaterials:targetFactorySilicon
+  337 label *label329
+  338 jump *label338 lessThanEq :drawMaterials:target 0
+  339 sensor *tmp223 .airFactory :drawMaterials:item
+  340 set :drawItem.3:y :drawMaterials:y
+  341 op mul *tmp228 122 *tmp223
+  342 op div *tmp229 *tmp228 :drawMaterials:target
+  343 op min :drawItem.3:length 122 *tmp229
+  344 op mul *tmp232 :drawMaterials:col 88
+  345 op add :drawItem.3:iconX 11 *tmp232
+  346 op add :drawItem.3:barX 22 *tmp232
+  347 op add :drawItem.3:textX 170 *tmp232
+  348 draw col %[white]
+  349 op add *tmp240 :drawMaterials:y 5
+  350 draw image :drawItem.3:iconX *tmp240 :drawMaterials:item 16 0
+  351 draw color 0 128 0 255
+  352 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  353 draw color 0 255 0 255
+  354 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  355 op add *tmp242 :drawMaterials:y 7
+  356 print :drawMaterials:target
+  357 draw print :drawItem.3:textX *tmp242 @right
+  358 label *label330
+  359 label *label331
+  360 op add :drawText.14:x *tmp232 171
+  361 print :drawMaterials:target
+  362 draw print :drawText.14:x *tmp242 @right
+  363 label *label332
+  364 label *label333
+  365 label *label334
+  366 op add :drawItem.3:col :drawMaterials:col 1
+  367 jump *label335 lessThan :drawItem.3:col 1
+  368 set :drawItem.3:col 0
+  369 op sub :drawItem.3:y :drawMaterials:y 15
+  370 label *label335
+  371 label *label336
+  372 label *label337
+  373 set :drawMaterials:col :drawItem.3:col
+  374 set :drawMaterials:y :drawItem.3:y
+  375 label *label338
+  376 label *label339
+  377 label *label340
+  378 label *label101
   379 label *label70
   380 jump *label55 always
   381 label *label54

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
   292 set :drawMaterials:item @lead
   293 set :drawMaterials:target :drawMaterials:targetFactoryLead
   294 label *label315
-    * jump *label324 lessThanEq :drawMaterials:target 0
-    * sensor *tmp223 .airFactory :drawMaterials:item
-    * set :drawItem.3:y :drawMaterials:y
+  295 jump *label324 lessThanEq :drawMaterials:targetFactoryLead 0
+  296 sensor *tmp223 .airFactory @lead
+  297 set :drawItem.3:y 90
   298 op mul *tmp228 122 *tmp223
-    * op div *tmp229 *tmp228 :drawMaterials:target
+  299 op div *tmp229 *tmp228 :drawMaterials:targetFactoryLead
   300 op min :drawItem.3:length 122 *tmp229
-    * op mul *tmp232 :drawMaterials:col 88
-    * op add :drawItem.3:iconX 11 *tmp232
-    * op add :drawItem.3:barX 22 *tmp232
-    * op add :drawItem.3:textX 170 *tmp232
+  301 op mul *tmp232 0 88
+  302 op add :drawItem.3:iconX 11 0
+  303 op add :drawItem.3:barX 22 0
+  304 op add :drawItem.3:textX 170 0
   305 draw col %[white]
-    * op add *tmp240 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp240 :drawMaterials:item 16 0
+  306 op add *tmp240 90 5
+  307 draw image 11 95 @lead 16 0
   308 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  309 draw rect 22 90 :drawItem.3:length 10
   310 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
-    * op add *tmp242 :drawMaterials:y 7
-    * print :drawMaterials:target
-    * draw print :drawItem.3:textX *tmp242 @right
+  311 draw lineRect 22 90 122 10
+  312 op add *tmp242 90 7
+  313 print :drawMaterials:targetFactoryLead
+  314 draw print 170 97 @right
   315 label *label316
   316 label *label317
-    * op add :drawText.14:x *tmp232 171
-    * print :drawMaterials:target
-    * draw print :drawText.14:x *tmp242 @right
+  317 op add :drawText.14:x 0 171
+  318 print :drawMaterials:targetFactoryLead
+  319 draw print 171 97 @right
   320 label *label318
   321 label *label319
   322 label *label320
-    * op add :drawItem.3:col :drawMaterials:col 1
-    * jump *label321 lessThan :drawItem.3:col 1
+  323 op add :drawItem.3:col 0 1
+  324 jump *label321 lessThan 1 1
   325 set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawMaterials:y 15
+  326 op sub :drawItem.3:y 90 15
   327 label *label321
   328 label *label322
   329 label *label323
-    * set :drawMaterials:col :drawItem.3:col
-    * set :drawMaterials:y :drawItem.3:y
+  330 set :drawMaterials:col 0
+  331 set :drawMaterials:y 75
   332 label *label324
   333 label *label325
   334 label *label326
   335 set :drawMaterials:item @silicon
   336 set :drawMaterials:target :drawMaterials:targetFactorySilicon
   337 label *label329
-    * jump *label338 lessThanEq :drawMaterials:target 0
-    * sensor *tmp223 .airFactory :drawMaterials:item
+  338 jump *label338 lessThanEq :drawMaterials:targetFactorySilicon 0
+  339 sensor *tmp223 .airFactory @silicon
   340 set :drawItem.3:y :drawMaterials:y
   341 op mul *tmp228 122 *tmp223
-    * op div *tmp229 *tmp228 :drawMaterials:target
+  342 op div *tmp229 *tmp228 :drawMaterials:targetFactorySilicon
   343 op min :drawItem.3:length 122 *tmp229
   344 op mul *tmp232 :drawMaterials:col 88
   345 op add :drawItem.3:iconX 11 *tmp232
 
   347 op add :drawItem.3:textX 170 *tmp232
   348 draw col %[white]
   349 op add *tmp240 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp240 :drawMaterials:item 16 0
+  350 draw image :drawItem.3:iconX *tmp240 @silicon 16 0
   351 draw color 0 128 0 255
   352 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
   353 draw color 0 255 0 255
   354 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
   355 op add *tmp242 :drawMaterials:y 7
-    * print :drawMaterials:target
+  356 print :drawMaterials:targetFactorySilicon
   357 draw print :drawItem.3:textX *tmp242 @right
   358 label *label330
   359 label *label331
   360 op add :drawText.14:x *tmp232 171
-    * print :drawMaterials:target
+  361 print :drawMaterials:targetFactorySilicon
   362 draw print :drawText.14:x *tmp242 @right
   363 label *label332
   364 label *label333
 
   370 label *label335
   371 label *label336
   372 label *label337
-    * set :drawMaterials:col :drawItem.3:col
-    * set :drawMaterials:y :drawItem.3:y
   373 label *label338
   374 label *label339
   375 label *label340

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-18 instructions):
 
   289 label *label80
   290 jump *label70 always
   291 label *label69
-    * set :drawMaterials:item @lead
-    * set :drawMaterials:target :drawMaterials:targetFactoryLead
   292 label *label315
   293 jump *label324 lessThanEq :drawMaterials:targetFactoryLead 0
   294 sensor *tmp223 .airFactory @lead
-    * set :drawItem.3:y 90
   295 op mul *tmp228 122 *tmp223
   296 op div *tmp229 *tmp228 :drawMaterials:targetFactoryLead
   297 op min :drawItem.3:length 122 *tmp229
-    * op mul *tmp232 0 88
-    * op add :drawItem.3:iconX 11 0
-    * op add :drawItem.3:barX 22 0
-    * op add :drawItem.3:textX 170 0
   298 draw col %[white]
-    * op add *tmp240 90 5
   299 draw image 11 95 @lead 16 0
   300 draw color 0 128 0 255
   301 draw rect 22 90 :drawItem.3:length 10
   302 draw color 0 255 0 255
   303 draw lineRect 22 90 122 10
-    * op add *tmp242 90 7
   304 print :drawMaterials:targetFactoryLead
   305 draw print 170 97 @right
   306 label *label316
   307 label *label317
-    * op add :drawText.14:x 0 171
   308 print :drawMaterials:targetFactoryLead
   309 draw print 171 97 @right
   310 label *label318
   311 label *label319
   312 label *label320
-    * op add :drawItem.3:col 0 1
   313 jump *label321 lessThan 1 1
-    * set :drawItem.3:col 0
-    * op sub :drawItem.3:y 90 15
   314 label *label321
   315 label *label322
   316 label *label323
 
   319 label *label324
   320 label *label325
   321 label *label326
-    * set :drawMaterials:item @silicon
-    * set :drawMaterials:target :drawMaterials:targetFactorySilicon
   322 label *label329
   323 jump *label338 lessThanEq :drawMaterials:targetFactorySilicon 0
   324 sensor *tmp223 .airFactory @silicon
-    * set :drawItem.3:y :drawMaterials:y
   325 op mul *tmp228 122 *tmp223
   326 op div *tmp229 *tmp228 :drawMaterials:targetFactorySilicon
   327 op min :drawItem.3:length 122 *tmp229
-    * op mul *tmp232 :drawMaterials:col 88
-    * op add :drawItem.3:iconX 11 *tmp232
-    * op add :drawItem.3:barX 22 *tmp232
-    * op add :drawItem.3:textX 170 *tmp232
+  328 op mul *tmp232 0 88
+  329 op add :drawItem.3:iconX 11 0
+  330 op add :drawItem.3:barX 22 0
+  331 op add :drawItem.3:textX 170 0
   332 draw col %[white]
   333 op add *tmp240 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp240 @silicon 16 0
+  334 draw image 11 *tmp240 @silicon 16 0
   335 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  336 draw rect 22 :drawMaterials:y :drawItem.3:length 10
   337 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  338 draw lineRect 22 :drawMaterials:y 122 10
   339 op add *tmp242 :drawMaterials:y 7
   340 print :drawMaterials:targetFactorySilicon
-    * draw print :drawItem.3:textX *tmp242 @right
+  341 draw print 170 *tmp242 @right
   342 label *label330
   343 label *label331
-    * op add :drawText.14:x *tmp232 171
+  344 op add :drawText.14:x 0 171
   345 print :drawMaterials:targetFactorySilicon
-    * draw print :drawText.14:x *tmp242 @right
+  346 draw print 171 *tmp242 @right
   347 label *label332
   348 label *label333
   349 label *label334
-    * op add :drawItem.3:col :drawMaterials:col 1
-    * jump *label335 lessThan :drawItem.3:col 1
-    * set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawMaterials:y 15
+  350 op add :drawItem.3:col 0 1
+  351 jump *label335 lessThan 1 1
   352 label *label335
   353 label *label336
   354 label *label337

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-7 instructions):
 
   314 label *label321
   315 label *label322
   316 label *label323
-    * set :drawMaterials:col 0
   317 set :drawMaterials:y 75
   318 label *label324
   319 label *label325
 
   324 op mul *tmp228 122 *tmp223
   325 op div *tmp229 *tmp228 :drawMaterials:targetFactorySilicon
   326 op min :drawItem.3:length 122 *tmp229
-    * op mul *tmp232 0 88
-    * op add :drawItem.3:iconX 11 0
-    * op add :drawItem.3:barX 22 0
-    * op add :drawItem.3:textX 170 0
   327 draw col %[white]
   328 op add *tmp240 :drawMaterials:y 5
   329 draw image 11 *tmp240 @silicon 16 0
 
   336 draw print 170 *tmp242 @right
   337 label *label330
   338 label *label331
-    * op add :drawText.14:x 0 171
   339 print :drawMaterials:targetFactorySilicon
   340 draw print 171 *tmp242 @right
   341 label *label332
   342 label *label333
   343 label *label334
-    * op add :drawItem.3:col 0 1
   344 jump *label335 lessThan 1 1
   345 label *label335
   346 label *label336

Modifications by Unroll iteration loop at Display.mnd:314:13 (+178 instructions):
 
   406 label *label132
   407 label *label129
   408 jump *label134 equal .materialCount false
-    * set :drawMaterials:item.1 @copper
-    * set :drawMaterials:target.1 .targetCopper
-    * setaddr *tmp280 *label139
-    * jump *label136 always
-    * multilabel *label139 (m:marker1)
-    * set :drawMaterials:item.1 @lead
-    * set :drawMaterials:target.1 .targetLead
-    * setaddr *tmp280 *label140
-    * jump *label136 always
-    * multilabel *label140 (m:marker1)
-    * set :drawMaterials:item.1 @graphite
-    * set :drawMaterials:target.1 .targetGraphite
-    * setaddr *tmp280 *label141
-    * jump *label136 always
-    * multilabel *label141 (m:marker1)
-    * set :drawMaterials:item.1 @silicon
-    * set :drawMaterials:target.1 .targetSilicon
-    * setaddr *tmp280 *label142
-    * jump *label136 always
-    * multilabel *label142 (m:marker1)
-    * set :drawMaterials:item.1 @titanium
-    * set :drawMaterials:target.1 .targetTitanium
-    * setaddr *tmp280 *label143
-    * jump *label136 always
-    * multilabel *label143 (m:marker1)
-    * set :drawMaterials:item.1 @metaglass
-    * set :drawMaterials:target.1 .targetMetaglass
-    * setaddr *tmp280 *label144
-    * jump *label136 always
-    * multilabel *label144 (m:marker1)
-    * set :drawMaterials:item.1 @thorium
-    * set :drawMaterials:target.1 .targetThorium
-    * setaddr *tmp280 *label145
-    * label *label136
-    * jump *label146 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp283 .core :drawMaterials:item.1
-    * set :drawItem.5:y :drawMaterials:y
-    * op mul *tmp288 122 *tmp283
-    * op div *tmp289 *tmp288 :drawMaterials:target.1
-    * op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp292 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp292
-    * op add :drawItem.5:barX 22 *tmp292
-    * op add :drawItem.5:textX 170 *tmp292
-    * draw col %[white]
-    * op add *tmp300 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
-    * draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
-    * draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
-    * op add *tmp302 :drawMaterials:y 7
-    * print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp302 @right
-    * label *label151
-    * label *label150
-    * op add :drawText.22:x *tmp292 171
-    * print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp302 @right
-    * label *label153
-    * label *label152
-    * label *label149
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label154 lessThan :drawItem.5:col 1
-    * set :drawItem.5:col 0
-    * op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label154
-    * label *label155
-    * label *label148
-    * set :drawMaterials:col :drawItem.5:col
-    * set :drawMaterials:y :drawItem.5:y
-    * op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label156 greaterThan :drawMaterials:count 0
-    * jump *label138 always
-    * label *label156
-    * label *label157
-    * label *label146
-    * label *label147
-    * label *label137
-    * multijump *tmp280 0 0 (m:marker1)
-    * multilabel *label145 (m:marker1)
-    * label *label138
+  409 set :drawMaterials:item.1 @copper
+  410 set :drawMaterials:target.1 .targetCopper
+  411 label *label344
+  412 jump *label355 lessThanEq :drawMaterials:target.1 0
+  413 sensor *tmp283 .core :drawMaterials:item.1
+  414 set :drawItem.5:y :drawMaterials:y
+  415 op mul *tmp288 122 *tmp283
+  416 op div *tmp289 *tmp288 :drawMaterials:target.1
+  417 op min :drawItem.5:length 122 *tmp289
+  418 op mul *tmp292 :drawMaterials:col 88
+  419 op add :drawItem.5:iconX 11 *tmp292
+  420 op add :drawItem.5:barX 22 *tmp292
+  421 op add :drawItem.5:textX 170 *tmp292
+  422 draw col %[white]
+  423 op add *tmp300 :drawMaterials:y 5
+  424 draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
+  425 draw color 0 128 0 255
+  426 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  427 draw color 0 255 0 255
+  428 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  429 op add *tmp302 :drawMaterials:y 7
+  430 print :drawMaterials:target.1
+  431 draw print :drawItem.5:textX *tmp302 @right
+  432 label *label345
+  433 label *label346
+  434 op add :drawText.22:x *tmp292 171
+  435 print :drawMaterials:target.1
+  436 draw print :drawText.22:x *tmp302 @right
+  437 label *label347
+  438 label *label348
+  439 label *label349
+  440 op add :drawItem.5:col :drawMaterials:col 1
+  441 jump *label350 lessThan :drawItem.5:col 1
+  442 set :drawItem.5:col 0
+  443 op sub :drawItem.5:y :drawMaterials:y 15
+  444 label *label350
+  445 label *label351
+  446 label *label352
+  447 set :drawMaterials:col :drawItem.5:col
+  448 set :drawMaterials:y :drawItem.5:y
+  449 op sub :drawMaterials:count :drawMaterials:count 1
+  450 jump *label353 greaterThan :drawMaterials:count 0
+  451 jump *label138 always
+  452 label *label353
+  453 label *label354
+  454 label *label355
+  455 label *label356
+  456 label *label357
+  457 set :drawMaterials:item.1 @lead
+  458 set :drawMaterials:target.1 .targetLead
+  459 label *label360
+  460 jump *label371 lessThanEq :drawMaterials:target.1 0
+  461 sensor *tmp283 .core :drawMaterials:item.1
+  462 set :drawItem.5:y :drawMaterials:y
+  463 op mul *tmp288 122 *tmp283
+  464 op div *tmp289 *tmp288 :drawMaterials:target.1
+  465 op min :drawItem.5:length 122 *tmp289
+  466 op mul *tmp292 :drawMaterials:col 88
+  467 op add :drawItem.5:iconX 11 *tmp292
+  468 op add :drawItem.5:barX 22 *tmp292
+  469 op add :drawItem.5:textX 170 *tmp292
+  470 draw col %[white]
+  471 op add *tmp300 :drawMaterials:y 5
+  472 draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
+  473 draw color 0 128 0 255
+  474 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  475 draw color 0 255 0 255
+  476 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  477 op add *tmp302 :drawMaterials:y 7
+  478 print :drawMaterials:target.1
+  479 draw print :drawItem.5:textX *tmp302 @right
+  480 label *label361
+  481 label *label362
+  482 op add :drawText.22:x *tmp292 171
+  483 print :drawMaterials:target.1
+  484 draw print :drawText.22:x *tmp302 @right
+  485 label *label363
+  486 label *label364
+  487 label *label365
+  488 op add :drawItem.5:col :drawMaterials:col 1
+  489 jump *label366 lessThan :drawItem.5:col 1
+  490 set :drawItem.5:col 0
+  491 op sub :drawItem.5:y :drawMaterials:y 15
+  492 label *label366
+  493 label *label367
+  494 label *label368
+  495 set :drawMaterials:col :drawItem.5:col
+  496 set :drawMaterials:y :drawItem.5:y
+  497 op sub :drawMaterials:count :drawMaterials:count 1
+  498 jump *label369 greaterThan :drawMaterials:count 0
+  499 jump *label138 always
+  500 label *label369
+  501 label *label370
+  502 label *label371
+  503 label *label372
+  504 label *label373
+  505 set :drawMaterials:item.1 @graphite
+  506 set :drawMaterials:target.1 .targetGraphite
+  507 label *label376
+  508 jump *label387 lessThanEq :drawMaterials:target.1 0
+  509 sensor *tmp283 .core :drawMaterials:item.1
+  510 set :drawItem.5:y :drawMaterials:y
+  511 op mul *tmp288 122 *tmp283
+  512 op div *tmp289 *tmp288 :drawMaterials:target.1
+  513 op min :drawItem.5:length 122 *tmp289
+  514 op mul *tmp292 :drawMaterials:col 88
+  515 op add :drawItem.5:iconX 11 *tmp292
+  516 op add :drawItem.5:barX 22 *tmp292
+  517 op add :drawItem.5:textX 170 *tmp292
+  518 draw col %[white]
+  519 op add *tmp300 :drawMaterials:y 5
+  520 draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
+  521 draw color 0 128 0 255
+  522 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  523 draw color 0 255 0 255
+  524 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  525 op add *tmp302 :drawMaterials:y 7
+  526 print :drawMaterials:target.1
+  527 draw print :drawItem.5:textX *tmp302 @right
+  528 label *label377
+  529 label *label378
+  530 op add :drawText.22:x *tmp292 171
+  531 print :drawMaterials:target.1
+  532 draw print :drawText.22:x *tmp302 @right
+  533 label *label379
+  534 label *label380
+  535 label *label381
+  536 op add :drawItem.5:col :drawMaterials:col 1
+  537 jump *label382 lessThan :drawItem.5:col 1
+  538 set :drawItem.5:col 0
+  539 op sub :drawItem.5:y :drawMaterials:y 15
+  540 label *label382
+  541 label *label383
+  542 label *label384
+  543 set :drawMaterials:col :drawItem.5:col
+  544 set :drawMaterials:y :drawItem.5:y
+  545 op sub :drawMaterials:count :drawMaterials:count 1
+  546 jump *label385 greaterThan :drawMaterials:count 0
+  547 jump *label138 always
+  548 label *label385
+  549 label *label386
+  550 label *label387
+  551 label *label388
+  552 label *label389
+  553 set :drawMaterials:item.1 @silicon
+  554 set :drawMaterials:target.1 .targetSilicon
+  555 label *label392
+  556 jump *label403 lessThanEq :drawMaterials:target.1 0
+  557 sensor *tmp283 .core :drawMaterials:item.1
+  558 set :drawItem.5:y :drawMaterials:y
+  559 op mul *tmp288 122 *tmp283
+  560 op div *tmp289 *tmp288 :drawMaterials:target.1
+  561 op min :drawItem.5:length 122 *tmp289
+  562 op mul *tmp292 :drawMaterials:col 88
+  563 op add :drawItem.5:iconX 11 *tmp292
+  564 op add :drawItem.5:barX 22 *tmp292
+  565 op add :drawItem.5:textX 170 *tmp292
+  566 draw col %[white]
+  567 op add *tmp300 :drawMaterials:y 5
+  568 draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
+  569 draw color 0 128 0 255
+  570 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  571 draw color 0 255 0 255
+  572 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  573 op add *tmp302 :drawMaterials:y 7
+  574 print :drawMaterials:target.1
+  575 draw print :drawItem.5:textX *tmp302 @right
+  576 label *label393
+  577 label *label394
+  578 op add :drawText.22:x *tmp292 171
+  579 print :drawMaterials:target.1
+  580 draw print :drawText.22:x *tmp302 @right
+  581 label *label395
+  582 label *label396
+  583 label *label397
+  584 op add :drawItem.5:col :drawMaterials:col 1
+  585 jump *label398 lessThan :drawItem.5:col 1
+  586 set :drawItem.5:col 0
+  587 op sub :drawItem.5:y :drawMaterials:y 15
+  588 label *label398
+  589 label *label399
+  590 label *label400
+  591 set :drawMaterials:col :drawItem.5:col
+  592 set :drawMaterials:y :drawItem.5:y
+  593 op sub :drawMaterials:count :drawMaterials:count 1
+  594 jump *label401 greaterThan :drawMaterials:count 0
+  595 jump *label138 always
+  596 label *label401
+  597 label *label402
+  598 label *label403
+  599 label *label404
+  600 label *label405
+  601 set :drawMaterials:item.1 @titanium
+  602 set :drawMaterials:target.1 .targetTitanium
+  603 label *label408
+  604 jump *label419 lessThanEq :drawMaterials:target.1 0
+  605 sensor *tmp283 .core :drawMaterials:item.1
+  606 set :drawItem.5:y :drawMaterials:y
+  607 op mul *tmp288 122 *tmp283
+  608 op div *tmp289 *tmp288 :drawMaterials:target.1
+  609 op min :drawItem.5:length 122 *tmp289
+  610 op mul *tmp292 :drawMaterials:col 88
+  611 op add :drawItem.5:iconX 11 *tmp292
+  612 op add :drawItem.5:barX 22 *tmp292
+  613 op add :drawItem.5:textX 170 *tmp292
+  614 draw col %[white]
+  615 op add *tmp300 :drawMaterials:y 5
+  616 draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
+  617 draw color 0 128 0 255
+  618 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  619 draw color 0 255 0 255
+  620 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  621 op add *tmp302 :drawMaterials:y 7
+  622 print :drawMaterials:target.1
+  623 draw print :drawItem.5:textX *tmp302 @right
+  624 label *label409
+  625 label *label410
+  626 op add :drawText.22:x *tmp292 171
+  627 print :drawMaterials:target.1
+  628 draw print :drawText.22:x *tmp302 @right
+  629 label *label411
+  630 label *label412
+  631 label *label413
+  632 op add :drawItem.5:col :drawMaterials:col 1
+  633 jump *label414 lessThan :drawItem.5:col 1
+  634 set :drawItem.5:col 0
+  635 op sub :drawItem.5:y :drawMaterials:y 15
+  636 label *label414
+  637 label *label415
+  638 label *label416
+  639 set :drawMaterials:col :drawItem.5:col
+  640 set :drawMaterials:y :drawItem.5:y
+  641 op sub :drawMaterials:count :drawMaterials:count 1
+  642 jump *label417 greaterThan :drawMaterials:count 0
+  643 jump *label138 always
+  644 label *label417
+  645 label *label418
+  646 label *label419
+  647 label *label420
+  648 label *label421
+  649 set :drawMaterials:item.1 @metaglass
+  650 set :drawMaterials:target.1 .targetMetaglass
+  651 label *label424
+  652 jump *label435 lessThanEq :drawMaterials:target.1 0
+  653 sensor *tmp283 .core :drawMaterials:item.1
+  654 set :drawItem.5:y :drawMaterials:y
+  655 op mul *tmp288 122 *tmp283
+  656 op div *tmp289 *tmp288 :drawMaterials:target.1
+  657 op min :drawItem.5:length 122 *tmp289
+  658 op mul *tmp292 :drawMaterials:col 88
+  659 op add :drawItem.5:iconX 11 *tmp292
+  660 op add :drawItem.5:barX 22 *tmp292
+  661 op add :drawItem.5:textX 170 *tmp292
+  662 draw col %[white]
+  663 op add *tmp300 :drawMaterials:y 5
+  664 draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
+  665 draw color 0 128 0 255
+  666 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  667 draw color 0 255 0 255
+  668 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  669 op add *tmp302 :drawMaterials:y 7
+  670 print :drawMaterials:target.1
+  671 draw print :drawItem.5:textX *tmp302 @right
+  672 label *label425
+  673 label *label426
+  674 op add :drawText.22:x *tmp292 171
+  675 print :drawMaterials:target.1
+  676 draw print :drawText.22:x *tmp302 @right
+  677 label *label427
+  678 label *label428
+  679 label *label429
+  680 op add :drawItem.5:col :drawMaterials:col 1
+  681 jump *label430 lessThan :drawItem.5:col 1
+  682 set :drawItem.5:col 0
+  683 op sub :drawItem.5:y :drawMaterials:y 15
+  684 label *label430
+  685 label *label431
+  686 label *label432
+  687 set :drawMaterials:col :drawItem.5:col
+  688 set :drawMaterials:y :drawItem.5:y
+  689 op sub :drawMaterials:count :drawMaterials:count 1
+  690 jump *label433 greaterThan :drawMaterials:count 0
+  691 jump *label138 always
+  692 label *label433
+  693 label *label434
+  694 label *label435
+  695 label *label436
+  696 label *label437
+  697 set :drawMaterials:item.1 @thorium
+  698 set :drawMaterials:target.1 .targetThorium
+  699 label *label440
+  700 jump *label451 lessThanEq :drawMaterials:target.1 0
+  701 sensor *tmp283 .core :drawMaterials:item.1
+  702 set :drawItem.5:y :drawMaterials:y
+  703 op mul *tmp288 122 *tmp283
+  704 op div *tmp289 *tmp288 :drawMaterials:target.1
+  705 op min :drawItem.5:length 122 *tmp289
+  706 op mul *tmp292 :drawMaterials:col 88
+  707 op add :drawItem.5:iconX 11 *tmp292
+  708 op add :drawItem.5:barX 22 *tmp292
+  709 op add :drawItem.5:textX 170 *tmp292
+  710 draw col %[white]
+  711 op add *tmp300 :drawMaterials:y 5
+  712 draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
+  713 draw color 0 128 0 255
+  714 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  715 draw color 0 255 0 255
+  716 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  717 op add *tmp302 :drawMaterials:y 7
+  718 print :drawMaterials:target.1
+  719 draw print :drawItem.5:textX *tmp302 @right
+  720 label *label441
+  721 label *label442
+  722 op add :drawText.22:x *tmp292 171
+  723 print :drawMaterials:target.1
+  724 draw print :drawText.22:x *tmp302 @right
+  725 label *label443
+  726 label *label444
+  727 label *label445
+  728 op add :drawItem.5:col :drawMaterials:col 1
+  729 jump *label446 lessThan :drawItem.5:col 1
+  730 set :drawItem.5:col 0
+  731 op sub :drawItem.5:y :drawMaterials:y 15
+  732 label *label446
+  733 label *label447
+  734 label *label448
+  735 set :drawMaterials:col :drawItem.5:col
+  736 set :drawMaterials:y :drawItem.5:y
+  737 op sub :drawMaterials:count :drawMaterials:count 1
+  738 jump *label449 greaterThan :drawMaterials:count 0
+  739 jump *label138 always
+  740 label *label449
+  741 label *label450
+  742 label *label451
+  743 label *label452
+  744 label *label453
+  745 label *label138
   746 label *label134
   747 label *label135
   748 label *label115

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
   410 set :drawMaterials:target.1 .targetCopper
   411 label *label344
   412 jump *label355 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp283 .core :drawMaterials:item.1
-    * set :drawItem.5:y :drawMaterials:y
+  413 sensor *tmp283 .core @copper
+  414 set :drawItem.5:y 90
   415 op mul *tmp288 122 *tmp283
   416 op div *tmp289 *tmp288 :drawMaterials:target.1
   417 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp292 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp292
-    * op add :drawItem.5:barX 22 *tmp292
-    * op add :drawItem.5:textX 170 *tmp292
+  418 op mul *tmp292 0 88
+  419 op add :drawItem.5:iconX 11 0
+  420 op add :drawItem.5:barX 22 0
+  421 op add :drawItem.5:textX 170 0
   422 draw col %[white]
-    * op add *tmp300 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
+  423 op add *tmp300 90 5
+  424 draw image 11 95 @copper 16 0
   425 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  426 draw rect 22 90 :drawItem.5:length 10
   427 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
-    * op add *tmp302 :drawMaterials:y 7
+  428 draw lineRect 22 90 122 10
+  429 op add *tmp302 90 7
   430 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp302 @right
+  431 draw print 170 97 @right
   432 label *label345
   433 label *label346
-    * op add :drawText.22:x *tmp292 171
+  434 op add :drawText.22:x 0 171
   435 print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp302 @right
+  436 draw print 171 97 @right
   437 label *label347
   438 label *label348
   439 label *label349
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label350 lessThan :drawItem.5:col 1
+  440 op add :drawItem.5:col 0 1
+  441 jump *label350 lessThan 1 1
   442 set :drawItem.5:col 0
-    * op sub :drawItem.5:y :drawMaterials:y 15
+  443 op sub :drawItem.5:y 90 15
   444 label *label350
   445 label *label351
   446 label *label352
-    * set :drawMaterials:col :drawItem.5:col
-    * set :drawMaterials:y :drawItem.5:y
-    * op sub :drawMaterials:count :drawMaterials:count 1
+  447 set :drawMaterials:col 0
+  448 set :drawMaterials:y 75
+  449 op sub :drawMaterials:count .materialCount 1
   450 jump *label353 greaterThan :drawMaterials:count 0
   451 jump *label138 always
   452 label *label353
 
   458 set :drawMaterials:target.1 .targetLead
   459 label *label360
   460 jump *label371 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp283 .core :drawMaterials:item.1
+  461 sensor *tmp283 .core @lead
   462 set :drawItem.5:y :drawMaterials:y
   463 op mul *tmp288 122 *tmp283
   464 op div *tmp289 *tmp288 :drawMaterials:target.1
 
   469 op add :drawItem.5:textX 170 *tmp292
   470 draw col %[white]
   471 op add *tmp300 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
+  472 draw image :drawItem.5:iconX *tmp300 @lead 16 0
   473 draw color 0 128 0 255
   474 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   475 draw color 0 255 0 255
 
   506 set :drawMaterials:target.1 .targetGraphite
   507 label *label376
   508 jump *label387 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp283 .core :drawMaterials:item.1
+  509 sensor *tmp283 .core @graphite
   510 set :drawItem.5:y :drawMaterials:y
   511 op mul *tmp288 122 *tmp283
   512 op div *tmp289 *tmp288 :drawMaterials:target.1
 
   517 op add :drawItem.5:textX 170 *tmp292
   518 draw col %[white]
   519 op add *tmp300 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
+  520 draw image :drawItem.5:iconX *tmp300 @graphite 16 0
   521 draw color 0 128 0 255
   522 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   523 draw color 0 255 0 255
 
   554 set :drawMaterials:target.1 .targetSilicon
   555 label *label392
   556 jump *label403 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp283 .core :drawMaterials:item.1
+  557 sensor *tmp283 .core @silicon
   558 set :drawItem.5:y :drawMaterials:y
   559 op mul *tmp288 122 *tmp283
   560 op div *tmp289 *tmp288 :drawMaterials:target.1
 
   565 op add :drawItem.5:textX 170 *tmp292
   566 draw col %[white]
   567 op add *tmp300 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
+  568 draw image :drawItem.5:iconX *tmp300 @silicon 16 0
   569 draw color 0 128 0 255
   570 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   571 draw color 0 255 0 255
 
   602 set :drawMaterials:target.1 .targetTitanium
   603 label *label408
   604 jump *label419 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp283 .core :drawMaterials:item.1
+  605 sensor *tmp283 .core @titanium
   606 set :drawItem.5:y :drawMaterials:y
   607 op mul *tmp288 122 *tmp283
   608 op div *tmp289 *tmp288 :drawMaterials:target.1
 
   613 op add :drawItem.5:textX 170 *tmp292
   614 draw col %[white]
   615 op add *tmp300 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
+  616 draw image :drawItem.5:iconX *tmp300 @titanium 16 0
   617 draw color 0 128 0 255
   618 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   619 draw color 0 255 0 255
 
   650 set :drawMaterials:target.1 .targetMetaglass
   651 label *label424
   652 jump *label435 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp283 .core :drawMaterials:item.1
+  653 sensor *tmp283 .core @metaglass
   654 set :drawItem.5:y :drawMaterials:y
   655 op mul *tmp288 122 *tmp283
   656 op div *tmp289 *tmp288 :drawMaterials:target.1
 
   661 op add :drawItem.5:textX 170 *tmp292
   662 draw col %[white]
   663 op add *tmp300 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
+  664 draw image :drawItem.5:iconX *tmp300 @metaglass 16 0
   665 draw color 0 128 0 255
   666 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   667 draw color 0 255 0 255
 
   698 set :drawMaterials:target.1 .targetThorium
   699 label *label440
   700 jump *label451 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp283 .core :drawMaterials:item.1
+  701 sensor *tmp283 .core @thorium
   702 set :drawItem.5:y :drawMaterials:y
   703 op mul *tmp288 122 *tmp283
   704 op div *tmp289 *tmp288 :drawMaterials:target.1
 
   709 op add :drawItem.5:textX 170 *tmp292
   710 draw col %[white]
   711 op add *tmp300 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
+  712 draw image :drawItem.5:iconX *tmp300 @thorium 16 0
   713 draw color 0 128 0 255
   714 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   715 draw color 0 255 0 255
 
   732 label *label446
   733 label *label447
   734 label *label448
-    * set :drawMaterials:col :drawItem.5:col
-    * set :drawMaterials:y :drawItem.5:y
   735 op sub :drawMaterials:count :drawMaterials:count 1
   736 jump *label449 greaterThan :drawMaterials:count 0
   737 jump *label138 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-21 instructions):
 
   406 label *label132
   407 label *label129
   408 jump *label134 equal .materialCount false
-    * set :drawMaterials:item.1 @copper
   409 set :drawMaterials:target.1 .targetCopper
   410 label *label344
   411 jump *label355 lessThanEq :drawMaterials:target.1 0
   412 sensor *tmp283 .core @copper
-    * set :drawItem.5:y 90
   413 op mul *tmp288 122 *tmp283
   414 op div *tmp289 *tmp288 :drawMaterials:target.1
   415 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp292 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   416 draw col %[white]
-    * op add *tmp300 90 5
   417 draw image 11 95 @copper 16 0
   418 draw color 0 128 0 255
   419 draw rect 22 90 :drawItem.5:length 10
   420 draw color 0 255 0 255
   421 draw lineRect 22 90 122 10
-    * op add *tmp302 90 7
   422 print :drawMaterials:target.1
   423 draw print 170 97 @right
   424 label *label345
   425 label *label346
-    * op add :drawText.22:x 0 171
   426 print :drawMaterials:target.1
   427 draw print 171 97 @right
   428 label *label347
   429 label *label348
   430 label *label349
-    * op add :drawItem.5:col 0 1
   431 jump *label350 lessThan 1 1
-    * set :drawItem.5:col 0
-    * op sub :drawItem.5:y 90 15
   432 label *label350
   433 label *label351
   434 label *label352
 
   442 label *label355
   443 label *label356
   444 label *label357
-    * set :drawMaterials:item.1 @lead
   445 set :drawMaterials:target.1 .targetLead
   446 label *label360
   447 jump *label371 lessThanEq :drawMaterials:target.1 0
 
   450 op mul *tmp288 122 *tmp283
   451 op div *tmp289 *tmp288 :drawMaterials:target.1
   452 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp292 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp292
-    * op add :drawItem.5:barX 22 *tmp292
-    * op add :drawItem.5:textX 170 *tmp292
+  453 op mul *tmp292 0 88
+  454 op add :drawItem.5:iconX 11 0
+  455 op add :drawItem.5:barX 22 0
+  456 op add :drawItem.5:textX 170 0
   457 draw col %[white]
   458 op add *tmp300 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp300 @lead 16 0
+  459 draw image 11 *tmp300 @lead 16 0
   460 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  461 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   462 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  463 draw lineRect 22 :drawMaterials:y 122 10
   464 op add *tmp302 :drawMaterials:y 7
   465 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp302 @right
+  466 draw print 170 *tmp302 @right
   467 label *label361
   468 label *label362
-    * op add :drawText.22:x *tmp292 171
+  469 op add :drawText.22:x 0 171
   470 print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp302 @right
+  471 draw print 171 *tmp302 @right
   472 label *label363
   473 label *label364
   474 label *label365
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label366 lessThan :drawItem.5:col 1
+  475 op add :drawItem.5:col 0 1
+  476 jump *label366 lessThan 1 1
   477 set :drawItem.5:col 0
   478 op sub :drawItem.5:y :drawMaterials:y 15
   479 label *label366
   480 label *label367
   481 label *label368
-    * set :drawMaterials:col :drawItem.5:col
+  482 set :drawMaterials:col 0
   483 set :drawMaterials:y :drawItem.5:y
   484 op sub :drawMaterials:count :drawMaterials:count 1
   485 jump *label369 greaterThan :drawMaterials:count 0
 
   489 label *label371
   490 label *label372
   491 label *label373
-    * set :drawMaterials:item.1 @graphite
   492 set :drawMaterials:target.1 .targetGraphite
   493 label *label376
   494 jump *label387 lessThanEq :drawMaterials:target.1 0
 
   536 label *label387
   537 label *label388
   538 label *label389
-    * set :drawMaterials:item.1 @silicon
   539 set :drawMaterials:target.1 .targetSilicon
   540 label *label392
   541 jump *label403 lessThanEq :drawMaterials:target.1 0
 
   583 label *label403
   584 label *label404
   585 label *label405
-    * set :drawMaterials:item.1 @titanium
   586 set :drawMaterials:target.1 .targetTitanium
   587 label *label408
   588 jump *label419 lessThanEq :drawMaterials:target.1 0
 
   630 label *label419
   631 label *label420
   632 label *label421
-    * set :drawMaterials:item.1 @metaglass
   633 set :drawMaterials:target.1 .targetMetaglass
   634 label *label424
   635 jump *label435 lessThanEq :drawMaterials:target.1 0
 
   677 label *label435
   678 label *label436
   679 label *label437
-    * set :drawMaterials:item.1 @thorium
   680 set :drawMaterials:target.1 .targetThorium
   681 label *label440
   682 jump *label451 lessThanEq :drawMaterials:target.1 0
   683 sensor *tmp283 .core @thorium
-    * set :drawItem.5:y :drawMaterials:y
   684 op mul *tmp288 122 *tmp283
   685 op div *tmp289 *tmp288 :drawMaterials:target.1
   686 op min :drawItem.5:length 122 *tmp289
 
   708 label *label445
   709 op add :drawItem.5:col :drawMaterials:col 1
   710 jump *label446 lessThan :drawItem.5:col 1
-    * set :drawItem.5:col 0
-    * op sub :drawItem.5:y :drawMaterials:y 15
   711 label *label446
   712 label *label447
   713 label *label448

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-8 instructions):
 
   446 label *label360
   447 jump *label371 lessThanEq :drawMaterials:target.1 0
   448 sensor *tmp283 .core @lead
-    * set :drawItem.5:y :drawMaterials:y
   449 op mul *tmp288 122 *tmp283
   450 op div *tmp289 *tmp288 :drawMaterials:target.1
   451 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp292 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   452 draw col %[white]
   453 op add *tmp300 :drawMaterials:y 5
   454 draw image 11 *tmp300 @lead 16 0
 
   461 draw print 170 *tmp302 @right
   462 label *label361
   463 label *label362
-    * op add :drawText.22:x 0 171
   464 print :drawMaterials:target.1
   465 draw print 171 *tmp302 @right
   466 label *label363
   467 label *label364
   468 label *label365
-    * op add :drawItem.5:col 0 1
   469 jump *label366 lessThan 1 1
-    * set :drawItem.5:col 0
   470 op sub :drawItem.5:y :drawMaterials:y 15
   471 label *label366
   472 label *label367
 
   489 op mul *tmp288 122 *tmp283
   490 op div *tmp289 *tmp288 :drawMaterials:target.1
   491 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp292 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp292
-    * op add :drawItem.5:barX 22 *tmp292
-    * op add :drawItem.5:textX 170 *tmp292
+  492 op mul *tmp292 0 88
+  493 op add :drawItem.5:iconX 11 0
+  494 op add :drawItem.5:barX 22 0
+  495 op add :drawItem.5:textX 170 0
   496 draw col %[white]
   497 op add *tmp300 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp300 @graphite 16 0
+  498 draw image 11 *tmp300 @graphite 16 0
   499 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  500 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   501 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  502 draw lineRect 22 :drawMaterials:y 122 10
   503 op add *tmp302 :drawMaterials:y 7
   504 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp302 @right
+  505 draw print 170 *tmp302 @right
   506 label *label377
   507 label *label378
-    * op add :drawText.22:x *tmp292 171
+  508 op add :drawText.22:x 0 171
   509 print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp302 @right
+  510 draw print 171 *tmp302 @right
   511 label *label379
   512 label *label380
   513 label *label381
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label382 lessThan :drawItem.5:col 1
+  514 op add :drawItem.5:col 0 1
+  515 jump *label382 lessThan 1 1
   516 set :drawItem.5:col 0
   517 op sub :drawItem.5:y :drawMaterials:y 15
   518 label *label382
   519 label *label383
   520 label *label384
-    * set :drawMaterials:col :drawItem.5:col
+  521 set :drawMaterials:col 0
   522 set :drawMaterials:y :drawItem.5:y
   523 op sub :drawMaterials:count :drawMaterials:count 1
   524 jump *label385 greaterThan :drawMaterials:count 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-8 instructions):
 
   485 label *label376
   486 jump *label387 lessThanEq :drawMaterials:target.1 0
   487 sensor *tmp283 .core @graphite
-    * set :drawItem.5:y :drawMaterials:y
   488 op mul *tmp288 122 *tmp283
   489 op div *tmp289 *tmp288 :drawMaterials:target.1
   490 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp292 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   491 draw col %[white]
   492 op add *tmp300 :drawMaterials:y 5
   493 draw image 11 *tmp300 @graphite 16 0
 
   500 draw print 170 *tmp302 @right
   501 label *label377
   502 label *label378
-    * op add :drawText.22:x 0 171
   503 print :drawMaterials:target.1
   504 draw print 171 *tmp302 @right
   505 label *label379
   506 label *label380
   507 label *label381
-    * op add :drawItem.5:col 0 1
   508 jump *label382 lessThan 1 1
-    * set :drawItem.5:col 0
   509 op sub :drawItem.5:y :drawMaterials:y 15
   510 label *label382
   511 label *label383
 
   528 op mul *tmp288 122 *tmp283
   529 op div *tmp289 *tmp288 :drawMaterials:target.1
   530 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp292 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp292
-    * op add :drawItem.5:barX 22 *tmp292
-    * op add :drawItem.5:textX 170 *tmp292
+  531 op mul *tmp292 0 88
+  532 op add :drawItem.5:iconX 11 0
+  533 op add :drawItem.5:barX 22 0
+  534 op add :drawItem.5:textX 170 0
   535 draw col %[white]
   536 op add *tmp300 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp300 @silicon 16 0
+  537 draw image 11 *tmp300 @silicon 16 0
   538 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  539 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   540 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  541 draw lineRect 22 :drawMaterials:y 122 10
   542 op add *tmp302 :drawMaterials:y 7
   543 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp302 @right
+  544 draw print 170 *tmp302 @right
   545 label *label393
   546 label *label394
-    * op add :drawText.22:x *tmp292 171
+  547 op add :drawText.22:x 0 171
   548 print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp302 @right
+  549 draw print 171 *tmp302 @right
   550 label *label395
   551 label *label396
   552 label *label397
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label398 lessThan :drawItem.5:col 1
+  553 op add :drawItem.5:col 0 1
+  554 jump *label398 lessThan 1 1
   555 set :drawItem.5:col 0
   556 op sub :drawItem.5:y :drawMaterials:y 15
   557 label *label398
   558 label *label399
   559 label *label400
-    * set :drawMaterials:col :drawItem.5:col
+  560 set :drawMaterials:col 0
   561 set :drawMaterials:y :drawItem.5:y
   562 op sub :drawMaterials:count :drawMaterials:count 1
   563 jump *label401 greaterThan :drawMaterials:count 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-8 instructions):
 
   524 label *label392
   525 jump *label403 lessThanEq :drawMaterials:target.1 0
   526 sensor *tmp283 .core @silicon
-    * set :drawItem.5:y :drawMaterials:y
   527 op mul *tmp288 122 *tmp283
   528 op div *tmp289 *tmp288 :drawMaterials:target.1
   529 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp292 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   530 draw col %[white]
   531 op add *tmp300 :drawMaterials:y 5
   532 draw image 11 *tmp300 @silicon 16 0
 
   539 draw print 170 *tmp302 @right
   540 label *label393
   541 label *label394
-    * op add :drawText.22:x 0 171
   542 print :drawMaterials:target.1
   543 draw print 171 *tmp302 @right
   544 label *label395
   545 label *label396
   546 label *label397
-    * op add :drawItem.5:col 0 1
   547 jump *label398 lessThan 1 1
-    * set :drawItem.5:col 0
   548 op sub :drawItem.5:y :drawMaterials:y 15
   549 label *label398
   550 label *label399
 
   567 op mul *tmp288 122 *tmp283
   568 op div *tmp289 *tmp288 :drawMaterials:target.1
   569 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp292 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp292
-    * op add :drawItem.5:barX 22 *tmp292
-    * op add :drawItem.5:textX 170 *tmp292
+  570 op mul *tmp292 0 88
+  571 op add :drawItem.5:iconX 11 0
+  572 op add :drawItem.5:barX 22 0
+  573 op add :drawItem.5:textX 170 0
   574 draw col %[white]
   575 op add *tmp300 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp300 @titanium 16 0
+  576 draw image 11 *tmp300 @titanium 16 0
   577 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  578 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   579 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  580 draw lineRect 22 :drawMaterials:y 122 10
   581 op add *tmp302 :drawMaterials:y 7
   582 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp302 @right
+  583 draw print 170 *tmp302 @right
   584 label *label409
   585 label *label410
-    * op add :drawText.22:x *tmp292 171
+  586 op add :drawText.22:x 0 171
   587 print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp302 @right
+  588 draw print 171 *tmp302 @right
   589 label *label411
   590 label *label412
   591 label *label413
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label414 lessThan :drawItem.5:col 1
+  592 op add :drawItem.5:col 0 1
+  593 jump *label414 lessThan 1 1
   594 set :drawItem.5:col 0
   595 op sub :drawItem.5:y :drawMaterials:y 15
   596 label *label414
   597 label *label415
   598 label *label416
-    * set :drawMaterials:col :drawItem.5:col
+  599 set :drawMaterials:col 0
   600 set :drawMaterials:y :drawItem.5:y
   601 op sub :drawMaterials:count :drawMaterials:count 1
   602 jump *label417 greaterThan :drawMaterials:count 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-8 instructions):
 
   563 label *label408
   564 jump *label419 lessThanEq :drawMaterials:target.1 0
   565 sensor *tmp283 .core @titanium
-    * set :drawItem.5:y :drawMaterials:y
   566 op mul *tmp288 122 *tmp283
   567 op div *tmp289 *tmp288 :drawMaterials:target.1
   568 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp292 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   569 draw col %[white]
   570 op add *tmp300 :drawMaterials:y 5
   571 draw image 11 *tmp300 @titanium 16 0
 
   578 draw print 170 *tmp302 @right
   579 label *label409
   580 label *label410
-    * op add :drawText.22:x 0 171
   581 print :drawMaterials:target.1
   582 draw print 171 *tmp302 @right
   583 label *label411
   584 label *label412
   585 label *label413
-    * op add :drawItem.5:col 0 1
   586 jump *label414 lessThan 1 1
-    * set :drawItem.5:col 0
   587 op sub :drawItem.5:y :drawMaterials:y 15
   588 label *label414
   589 label *label415
 
   606 op mul *tmp288 122 *tmp283
   607 op div *tmp289 *tmp288 :drawMaterials:target.1
   608 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp292 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp292
-    * op add :drawItem.5:barX 22 *tmp292
-    * op add :drawItem.5:textX 170 *tmp292
+  609 op mul *tmp292 0 88
+  610 op add :drawItem.5:iconX 11 0
+  611 op add :drawItem.5:barX 22 0
+  612 op add :drawItem.5:textX 170 0
   613 draw col %[white]
   614 op add *tmp300 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp300 @metaglass 16 0
+  615 draw image 11 *tmp300 @metaglass 16 0
   616 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  617 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   618 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  619 draw lineRect 22 :drawMaterials:y 122 10
   620 op add *tmp302 :drawMaterials:y 7
   621 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp302 @right
+  622 draw print 170 *tmp302 @right
   623 label *label425
   624 label *label426
-    * op add :drawText.22:x *tmp292 171
+  625 op add :drawText.22:x 0 171
   626 print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp302 @right
+  627 draw print 171 *tmp302 @right
   628 label *label427
   629 label *label428
   630 label *label429
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label430 lessThan :drawItem.5:col 1
+  631 op add :drawItem.5:col 0 1
+  632 jump *label430 lessThan 1 1
   633 set :drawItem.5:col 0
   634 op sub :drawItem.5:y :drawMaterials:y 15
   635 label *label430
   636 label *label431
   637 label *label432
-    * set :drawMaterials:col :drawItem.5:col
+  638 set :drawMaterials:col 0
   639 set :drawMaterials:y :drawItem.5:y
   640 op sub :drawMaterials:count :drawMaterials:count 1
   641 jump *label433 greaterThan :drawMaterials:count 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-8 instructions):
 
   602 label *label424
   603 jump *label435 lessThanEq :drawMaterials:target.1 0
   604 sensor *tmp283 .core @metaglass
-    * set :drawItem.5:y :drawMaterials:y
   605 op mul *tmp288 122 *tmp283
   606 op div *tmp289 *tmp288 :drawMaterials:target.1
   607 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp292 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   608 draw col %[white]
   609 op add *tmp300 :drawMaterials:y 5
   610 draw image 11 *tmp300 @metaglass 16 0
 
   617 draw print 170 *tmp302 @right
   618 label *label425
   619 label *label426
-    * op add :drawText.22:x 0 171
   620 print :drawMaterials:target.1
   621 draw print 171 *tmp302 @right
   622 label *label427
   623 label *label428
   624 label *label429
-    * op add :drawItem.5:col 0 1
   625 jump *label430 lessThan 1 1
-    * set :drawItem.5:col 0
   626 op sub :drawItem.5:y :drawMaterials:y 15
   627 label *label430
   628 label *label431
 
   644 op mul *tmp288 122 *tmp283
   645 op div *tmp289 *tmp288 :drawMaterials:target.1
   646 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp292 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp292
-    * op add :drawItem.5:barX 22 *tmp292
-    * op add :drawItem.5:textX 170 *tmp292
+  647 op mul *tmp292 0 88
+  648 op add :drawItem.5:iconX 11 0
+  649 op add :drawItem.5:barX 22 0
+  650 op add :drawItem.5:textX 170 0
   651 draw col %[white]
   652 op add *tmp300 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp300 @thorium 16 0
+  653 draw image 11 *tmp300 @thorium 16 0
   654 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  655 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   656 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  657 draw lineRect 22 :drawMaterials:y 122 10
   658 op add *tmp302 :drawMaterials:y 7
   659 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp302 @right
+  660 draw print 170 *tmp302 @right
   661 label *label441
   662 label *label442
-    * op add :drawText.22:x *tmp292 171
+  663 op add :drawText.22:x 0 171
   664 print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp302 @right
+  665 draw print 171 *tmp302 @right
   666 label *label443
   667 label *label444
   668 label *label445
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label446 lessThan :drawItem.5:col 1
+  669 op add :drawItem.5:col 0 1
+  670 jump *label446 lessThan 1 1
   671 label *label446
   672 label *label447
   673 label *label448

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-13 instructions):
 
   146 label *label49
   147 label *label50
   148 label *label29
-    * set :drawMaterials:col 0
   149 set :drawMaterials:y 90
   150 jump *label54 notEqual .nextBlock null
   151 sensor *tmp113 .airFactory @progress
 
   431 label *label350
   432 label *label351
   433 label *label352
-    * set :drawMaterials:col 0
   434 set :drawMaterials:y 75
   435 op sub :drawMaterials:count .materialCount 1
   436 jump *label353 greaterThan :drawMaterials:count 0
 
   469 label *label366
   470 label *label367
   471 label *label368
-    * set :drawMaterials:col 0
   472 set :drawMaterials:y :drawItem.5:y
   473 op sub :drawMaterials:count :drawMaterials:count 1
   474 jump *label369 greaterThan :drawMaterials:count 0
 
   507 label *label382
   508 label *label383
   509 label *label384
-    * set :drawMaterials:col 0
   510 set :drawMaterials:y :drawItem.5:y
   511 op sub :drawMaterials:count :drawMaterials:count 1
   512 jump *label385 greaterThan :drawMaterials:count 0
 
   545 label *label398
   546 label *label399
   547 label *label400
-    * set :drawMaterials:col 0
   548 set :drawMaterials:y :drawItem.5:y
   549 op sub :drawMaterials:count :drawMaterials:count 1
   550 jump *label401 greaterThan :drawMaterials:count 0
 
   583 label *label414
   584 label *label415
   585 label *label416
-    * set :drawMaterials:col 0
   586 set :drawMaterials:y :drawItem.5:y
   587 op sub :drawMaterials:count :drawMaterials:count 1
   588 jump *label417 greaterThan :drawMaterials:count 0
 
   621 label *label430
   622 label *label431
   623 label *label432
-    * set :drawMaterials:col 0
   624 set :drawMaterials:y :drawItem.5:y
   625 op sub :drawMaterials:count :drawMaterials:count 1
   626 jump *label433 greaterThan :drawMaterials:count 0
 
   637 op mul *tmp288 122 *tmp283
   638 op div *tmp289 *tmp288 :drawMaterials:target.1
   639 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp292 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   640 draw col %[white]
   641 op add *tmp300 :drawMaterials:y 5
   642 draw image 11 *tmp300 @thorium 16 0
 
   649 draw print 170 *tmp302 @right
   650 label *label441
   651 label *label442
-    * op add :drawText.22:x 0 171
   652 print :drawMaterials:target.1
   653 draw print 171 *tmp302 @right
   654 label *label443
   655 label *label444
   656 label *label445
-    * op add :drawItem.5:col 0 1
   657 jump *label446 lessThan 1 1
   658 label *label446
   659 label *label447

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-9 instructions):
 
   309 label *label318
   310 label *label319
   311 label *label320
-    * jump *label321 lessThan 1 1
   312 label *label321
   313 label *label322
   314 label *label323
 
   339 label *label332
   340 label *label333
   341 label *label334
-    * jump *label335 lessThan 1 1
   342 label *label335
   343 label *label336
   344 label *label337
 
   425 label *label347
   426 label *label348
   427 label *label349
-    * jump *label350 lessThan 1 1
   428 label *label350
   429 label *label351
   430 label *label352
 
   461 label *label363
   462 label *label364
   463 label *label365
-    * jump *label366 lessThan 1 1
   464 op sub :drawItem.5:y :drawMaterials:y 15
   465 label *label366
   466 label *label367
 
   498 label *label379
   499 label *label380
   500 label *label381
-    * jump *label382 lessThan 1 1
   501 op sub :drawItem.5:y :drawMaterials:y 15
   502 label *label382
   503 label *label383
 
   535 label *label395
   536 label *label396
   537 label *label397
-    * jump *label398 lessThan 1 1
   538 op sub :drawItem.5:y :drawMaterials:y 15
   539 label *label398
   540 label *label399
 
   572 label *label411
   573 label *label412
   574 label *label413
-    * jump *label414 lessThan 1 1
   575 op sub :drawItem.5:y :drawMaterials:y 15
   576 label *label414
   577 label *label415
 
   609 label *label427
   610 label *label428
   611 label *label429
-    * jump *label430 lessThan 1 1
   612 op sub :drawItem.5:y :drawMaterials:y 15
   613 label *label430
   614 label *label431
 
   646 label *label443
   647 label *label444
   648 label *label445
-    * jump *label446 lessThan 1 1
   649 label *label446
   650 label *label447
   651 label *label448

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-2 instructions):
 
   651 label *label448
   652 op sub :drawMaterials:count :drawMaterials:count 1
   653 jump *label449 greaterThan :drawMaterials:count 0
-    * jump *label138 always
   654 label *label449
   655 label *label450
   656 label *label451
 
  1065 jump *label263 lessThanEq :displayRecord:id @blockCount
  1066 op sub *tmp405 :displayRecord:id @blockCount
  1067 lookup unit *tmp404 *tmp405
-    * jump *label263 always
  1068 label *label263
  1069 op div *tmp408 :displayLog:record 1000
  1070 op idiv :displayRecord:t *tmp408 120

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-1 instructions):
 
   650 label *label447
   651 label *label448
   652 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label449 greaterThan :drawMaterials:count 0
   653 label *label449
   654 label *label450
   655 label *label451

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   675 jump *label166 notEqual .transportItem null
   676 op sub *tmp313 *tmp309 15
   677 set :drawItem.6:target .transportTarget
-    * op div *tmp319 0 :drawItem.6:target
+  678 set *tmp319 0
   679 op min :drawItem.6:length 122 *tmp319
   680 draw col %[white]
   681 op sub *tmp330 *tmp309 10

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-2 instructions):
 
   649 label *label446
   650 label *label447
   651 label *label448
-    * op sub :drawMaterials:count :drawMaterials:count 1
   652 label *label449
   653 label *label450
   654 label *label451
 
   673 label *label161
   674 jump *label166 notEqual .transportItem null
   675 op sub *tmp313 *tmp309 15
-    * set :drawItem.6:target .transportTarget
   676 set *tmp319 0
-    * op min :drawItem.6:length 122 *tmp319
+  677 op min :drawItem.6:length 122 0
   678 draw col %[white]
   679 op sub *tmp330 *tmp309 10
   680 draw image 11 *tmp330 @poly 16 0
   681 draw color 0 128 0 255
-    * draw rect 22 *tmp313 :drawItem.6:length 10
+  682 draw rect 22 *tmp313 0 10
   683 draw color 0 255 0 255
   684 draw lineRect 22 *tmp313 122 10
   685 op sub *tmp332 *tmp309 8

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-2 instructions):
 
   673 label *label161
   674 jump *label166 notEqual .transportItem null
   675 op sub *tmp313 *tmp309 15
-    * set *tmp319 0
-    * op min :drawItem.6:length 122 0
   676 draw col %[white]
   677 op sub *tmp330 *tmp309 10
   678 draw image 11 *tmp330 @poly 16 0

Modifications by Virtual Instruction Expansion (+1 instructions):
 
   970 set :displayBaseMap:i .recentBuildIndex
   971 jump *label248 lessThan :displayBaseMap:i 0
   972 set .recentBuildIndex -1
-    * readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
+  973 op mul *tmp915 :displayBaseMap:i 2
+  974 multijump *label458 *tmp915 0 (m:marker3)
+  975 multilabel *label458 (m:marker3)
+  976 set :drawBlock:cfg "#'+nA######%#"
+  977 jump *label457 always
+  978 multilabel *label459 (m:marker3)
+  979 set :drawBlock:cfg "k*/(7######$$"
+  980 jump *label457 always
+  981 multilabel *label460 (m:marker3)
+  982 set :drawBlock:cfg "k+/(7######$%"
+  983 jump *label457 always
+  984 multilabel *label461 (m:marker3)
+  985 set :drawBlock:cfg "m*.<2######$&"
+  986 jump *label457 always
+  987 multilabel *label462 (m:marker3)
+  988 set :drawBlock:cfg "%+-A<######%'"
+  989 jump *label457 always
+  990 multilabel *label463 (m:marker3)
+  991 set :drawBlock:cfg "T+,%%######$("
+  992 jump *label457 always
+  993 multilabel *label464 (m:marker3)
+  994 set :drawBlock:cfg "w**5#-#####%)"
+  995 jump *label457 always
+  996 multilabel *label465 (m:marker3)
+  997 set :drawBlock:cfg "*,###A<###$*"
+  998 jump *label457 always
+  999 multilabel *label466 (m:marker3)
+ 1000 set :drawBlock:cfg "T),%%######$+"
+ 1001 jump *label457 always
+ 1002 multilabel *label467 (m:marker3)
+ 1003 set :drawBlock:cfg "W*-'%######$,"
+ 1004 jump *label457 always
+ 1005 multilabel *label468 (m:marker3)
+ 1006 set :drawBlock:cfg "®-.}U#U####$-"
+ 1007 jump *label457 always
+ 1008 multilabel *label469 (m:marker3)
+ 1009 set :drawBlock:cfg "g)'%)######$."
+ 1010 jump *label457 always
+ 1011 multilabel *label470 (m:marker3)
+ 1012 set :drawBlock:cfg "(*###A<###$/"
+ 1013 jump *label457 always
+ 1014 multilabel *label471 (m:marker3)
+ 1015 set :drawBlock:cfg "'(_i#####&&0"
+ 1016 jump *label457 always
+ 1017 multilabel *label472 (m:marker3)
+ 1018 set :drawBlock:cfg ",)###A<###$1"
+ 1019 jump *label457 always
+ 1020 multilabel *label473 (m:marker3)
+ 1021 set :drawBlock:cfg "T,*%%######$2"
+ 1022 jump *label457 always
+ 1023 multilabel *label474 (m:marker3)
+ 1024 set :drawBlock:cfg "',+_AA#####%3"
+ 1025 jump *label457 always
+ 1026 multilabel *label475 (m:marker3)
+ 1027 set :drawBlock:cfg "z%-AAA##A##%4"
+ 1028 jump *label457 always
+ 1029 multilabel *label476 (m:marker3)
+ 1030 set :drawBlock:cfg "W'*'%######$5"
+ 1031 jump *label457 always
+ 1032 multilabel *label477 (m:marker3)
+ 1033 set :drawBlock:cfg "W&*'%######$6"
+ 1034 jump *label457 always
+ 1035 multilabel *label478 (m:marker3)
+ 1036 set :drawBlock:cfg "o%+FK<A####%7"
+ 1037 jump *label457 always
+ 1038 multilabel *label479 (m:marker3)
+ 1039 set :drawBlock:cfg "$(.#U<###&8"
+ 1040 jump *label457 always
+ 1041 multilabel *label480 (m:marker3)
+ 1042 set :drawBlock:cfg " '%-#2#####&9"
+ 1043 jump *label457 always
+ 1044 multilabel *label481 (m:marker3)
+ 1045 set :drawBlock:cfg "*(###A<###$:"
+ 1046 jump *label457 always
+ 1047 multilabel *label482 (m:marker3)
+ 1048 set :drawBlock:cfg "X*''%######$;"
+ 1049 jump *label457 always
+ 1050 multilabel *label483 (m:marker3)
+ 1051 set :drawBlock:cfg "*%ë#}####&<"
+ 1052 jump *label457 always
+ 1053 multilabel *label484 (m:marker3)
+ 1054 set :drawBlock:cfg "l/,#U#A7###&="
+ 1055 jump *label457 always
+ 1056 multilabel *label485 (m:marker3)
+ 1057 set :drawBlock:cfg "x**F#AA7###&>"
+ 1058 jump *label457 always
+ 1059 multilabel *label486 (m:marker3)
+ 1060 set :drawBlock:cfg "r**#-#+####$?"
+ 1061 jump *label457 always
+ 1062 multilabel *label487 (m:marker3)
+ 1063 set :drawBlock:cfg "**#######%@"
+ 1064 jump *label457 always
+ 1065 multilabel *label488 (m:marker3)
+ 1066 set :drawBlock:cfg "%.)A<######%A"
+ 1067 jump *label457 always
+ 1068 multilabel *label489 (m:marker3)
+ 1069 set :drawBlock:cfg "T-*%%######$B"
+ 1070 jump *label457 always
+ 1071 multilabel *label490 (m:marker3)
+ 1072 set :drawBlock:cfg "T-)%%######$C"
+ 1073 jump *label457 always
+ 1074 multilabel *label491 (m:marker3)
+ 1075 set :drawBlock:cfg "--###A<###$D"
+ 1076 jump *label457 always
+ 1077 multilabel *label492 (m:marker3)
+ 1078 set :drawBlock:cfg "+(###A<###$E"
+ 1079 jump *label457 always
+ 1080 multilabel *label493 (m:marker3)
+ 1081 set :drawBlock:cfg "X+''%######$F"
+ 1082 jump *label457 always
+ 1083 multilabel *label494 (m:marker3)
+ 1084 set :drawBlock:cfg ".&#ʭ#ǥƁ#ʭ#(G"
+ 1085 jump *label457 always
+ 1086 label *label457
  1087 label *label308
  1088 read *tmp465 :drawBlock:cfg 0
  1089 op sub *tmp466 *tmp465 35

Modifications by Iterated phase, Single Step Elimination, pass 4, iteration 1 (-1 instructions):
 
  1082 jump *label457 always
  1083 multilabel *label494 (m:marker3)
  1084 set :drawBlock:cfg ".&#ʭ#ǥƁ#ʭ#(G"
-    * jump *label457 always
  1085 label *label457
  1086 label *label308
  1087 read *tmp465 :drawBlock:cfg 0

Modifications by Jumps phase, Jump Normalization, pass 6, iteration 1:
 
    19 label *label10
    20 ubind @poly
    21 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
-    * label *label11
    22 jump *label10 equal .core null
-    * label *label12
    23 printflush null
    24 drawflush null
    25 label *label13
 
    28 set .factoryProgress 0
    29 set .unitReset false
    30 label *label16
-    * label *label17
    31 jump *label18 notEqual .page 0
    32 jump *label20 lessThanEq .megas 0
    33 jump *label23 greaterThanEq .animation 0
 
    46 op mul *tmp59 *tmp58 40
    47 op mul *tmp60 :animate:ratio 88
    48 op add *tmp57 *tmp59 *tmp60
-    * label *label25
    49 op mul *tmp64 *tmp58 137
    50 op add *tmp62 *tmp64 *tmp60
-    * label *label26
    51 op mul *tmp69 *tmp58 32
    52 op mul *tmp70 :animate:ratio 168
    53 op add *tmp67 *tmp69 *tmp70
-    * label *label27
    54 draw image *tmp57 *tmp62 @mega *tmp67 0
    55 drawflush display1
    56 op add .animation .animation 1
-    * label *label22
    57 jump *label21 always
    58 label *label20
    59 draw reset
 
    61 draw col %[gold]
    62 print "Goal"
    63 draw print 40 161 @bottom
-    * label *label32
-    * label *label31
    64 print "Goal"
    65 draw print 41 161 @bottom
-    * label *label34
-    * label *label33
-    * label *label30
    66 draw col %[white]
    67 op add :drawHeader:count .nextBlock .nextUnit
    68 jump *label35 notEqual :drawHeader:count 2
 
   102 print *tmp95
   103 print ")"
   104 draw print 170 172 @topRight
-    * label *label44
-    * label *label43
   105 jump *label45 equal .titaniumDrill false
   106 sensor *tmp97 .titaniumDrill @titanium
   107 op max :drawHeader:count .titaniumDrillCount *tmp97
 
   110 print "x"
   111 print :drawHeader:count
   112 draw print 170 155 @topRight
-    * label *label48
-    * label *label47
   113 op mul *tmp102 7 :drawHeader:len
   114 op sub *tmp103 150 *tmp102
   115 draw image *tmp103 146 @titanium 12 0
   116 label *label45
-    * label *label46
   117 jump *label49 equal .thoriumContainer false
   118 sensor :drawHeader:count .thoriumContainer @thorium
   119 op log10 *tmp106 :drawHeader:count
 
   121 print "x"
   122 print :drawHeader:count
   123 draw print 120 155 @topRight
-    * label *label52
-    * label *label51
   124 op mul *tmp109 7 :drawHeader:len.1
   125 op sub *tmp110 100 *tmp109
   126 draw image *tmp110 146 @thorium 12 0
   127 label *label49
-    * label *label50
-    * label *label29
   128 set :drawMaterials:y 90
   129 jump *label54 notEqual .nextBlock null
   130 sensor *tmp113 .airFactory @progress
 
   179 op greaterThan *tmp143 :drawMaterials:multiReconstructorProgress 0
   180 op max .reconstructorProgress .reconstructorProgress *tmp143
   181 label *label62
-    * label *label63
   182 label *label61
   183 label *label59
   184 label *label57
   185 print "Unit factories"
   186 draw print 22 105 @bottomLeft
-    * label *label66
-    * label *label65
   187 print "Unit factories"
   188 draw print 23 105 @bottomLeft
-    * label *label68
-    * label *label67
-    * label *label64
   189 jump *label69 lessThanEq .factoryProgress 0
   190 op mul *tmp152 122 .factoryProgress
   191 op min :drawItem:length 122 *tmp152
 
   199 print "/"
   200 print :drawMaterials:unitTotal1
   201 draw print 170 97 @right
-    * label *label74
-    * label *label73
   202 print :drawMaterials:unitCount1
   203 print "/"
   204 print :drawMaterials:unitTotal1
   205 draw print 171 97 @right
-    * label *label76
-    * label *label75
-    * label *label72
-    * label *label71
   206 jump *label79 equal :drawMaterials:unit2 null
   207 op mul *tmp176 122 .reconstructorProgress
   208 op min :drawItem.1:length 122 *tmp176
 
   216 print "/"
   217 print :drawMaterials:unitTotal2
   218 draw print 170 82 @right
-    * label *label84
-    * label *label83
   219 print :drawMaterials:unitCount2
   220 print "/"
   221 print :drawMaterials:unitTotal2
   222 draw print 171 82 @right
-    * label *label86
-    * label *label85
-    * label *label82
-    * label *label81
   223 jump *label89 equal :drawMaterials:unit3 null
   224 op mul *tmp200 122 :drawMaterials:multiReconstructorProgress
   225 op min :drawItem.2:length 122 *tmp200
 
   233 print "/"
   234 print .megaTarget
   235 draw print 170 67 @right
-    * label *label94
-    * label *label93
   236 print .megas
   237 print "/"
   238 print .megaTarget
   239 draw print 171 67 @right
-    * label *label96
-    * label *label95
-    * label *label92
-    * label *label91
   240 label *label89
-    * label *label90
   241 label *label79
-    * label *label80
   242 jump *label70 always
   243 label *label69
-    * label *label315
   244 jump *label324 lessThanEq :drawMaterials:targetFactoryLead 0
   245 sensor *tmp223 .airFactory @lead
   246 op mul *tmp228 122 *tmp223
 
   254 draw lineRect 22 90 122 10
   255 print :drawMaterials:targetFactoryLead
   256 draw print 170 97 @right
-    * label *label316
-    * label *label317
   257 print :drawMaterials:targetFactoryLead
   258 draw print 171 97 @right
-    * label *label318
-    * label *label319
-    * label *label320
-    * label *label321
-    * label *label322
-    * label *label323
   259 set :drawMaterials:y 75
   260 label *label324
-    * label *label325
-    * label *label326
-    * label *label329
   261 jump *label338 lessThanEq :drawMaterials:targetFactorySilicon 0
   262 sensor *tmp223 .airFactory @silicon
   263 op mul *tmp228 122 *tmp223
 
   273 op add *tmp242 :drawMaterials:y 7
   274 print :drawMaterials:targetFactorySilicon
   275 draw print 170 *tmp242 @right
-    * label *label330
-    * label *label331
   276 print :drawMaterials:targetFactorySilicon
   277 draw print 171 *tmp242 @right
-    * label *label332
-    * label *label333
-    * label *label334
-    * label *label335
-    * label *label336
-    * label *label337
   278 label *label338
-    * label *label339
-    * label *label340
-    * label *label101
   279 label *label70
   280 jump *label55 always
   281 label *label54
 
   286 read *tmp250 processor1 ".mapAction"
   287 print *tmp250
   288 draw print 22 105 @bottomLeft
-    * label *label118
-    * label *label117
   289 read *tmp252 processor1 ".mapAction"
   290 print *tmp252
   291 draw print 23 105 @bottomLeft
-    * label *label120
-    * label *label119
-    * label *label116
   292 read :drawItem.4:current processor1 ".mapProgress"
   293 read :drawItem.4:target processor1 ".mapTotal"
   294 op mul *tmp257 122 :drawItem.4:current
 
   304 read *tmp272 processor1 ".mapSpots"
   305 print *tmp272
   306 draw print 170 97 @right
-    * label *label124
-    * label *label123
   307 print "x"
   308 read *tmp274 processor1 ".mapSpots"
   309 print *tmp274
   310 draw print 171 97 @right
-    * label *label126
-    * label *label125
-    * label *label122
-    * label *label121
   311 jump *label115 always
   312 label *label114
   313 set .materialCount .totalTargets
   314 set :drawMaterials:count .materialCount
   315 print "Materials"
   316 draw print 22 105 @bottomLeft
-    * label *label131
-    * label *label130
   317 print "Materials"
   318 draw print 23 105 @bottomLeft
-    * label *label133
-    * label *label132
-    * label *label129
   319 jump *label134 equal .materialCount false
   320 set :drawMaterials:target.1 .targetCopper
-    * label *label344
   321 jump *label355 lessThanEq :drawMaterials:target.1 0
   322 sensor *tmp283 .core @copper
   323 op mul *tmp288 122 *tmp283
 
   331 draw lineRect 22 90 122 10
   332 print :drawMaterials:target.1
   333 draw print 170 97 @right
-    * label *label345
-    * label *label346
   334 print :drawMaterials:target.1
   335 draw print 171 97 @right
-    * label *label347
-    * label *label348
-    * label *label349
-    * label *label350
-    * label *label351
-    * label *label352
   336 set :drawMaterials:y 75
   337 op sub :drawMaterials:count .materialCount 1
   338 jump *label353 greaterThan :drawMaterials:count 0
   339 jump *label138 always
   340 label *label353
-    * label *label354
   341 label *label355
-    * label *label356
-    * label *label357
   342 set :drawMaterials:target.1 .targetLead
-    * label *label360
   343 jump *label371 lessThanEq :drawMaterials:target.1 0
   344 sensor *tmp283 .core @lead
   345 op mul *tmp288 122 *tmp283
 
   355 op add *tmp302 :drawMaterials:y 7
   356 print :drawMaterials:target.1
   357 draw print 170 *tmp302 @right
-    * label *label361
-    * label *label362
   358 print :drawMaterials:target.1
   359 draw print 171 *tmp302 @right
-    * label *label363
-    * label *label364
-    * label *label365
   360 op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label366
-    * label *label367
-    * label *label368
   361 set :drawMaterials:y :drawItem.5:y
   362 op sub :drawMaterials:count :drawMaterials:count 1
   363 jump *label369 greaterThan :drawMaterials:count 0
   364 jump *label138 always
   365 label *label369
-    * label *label370
   366 label *label371
-    * label *label372
-    * label *label373
   367 set :drawMaterials:target.1 .targetGraphite
-    * label *label376
   368 jump *label387 lessThanEq :drawMaterials:target.1 0
   369 sensor *tmp283 .core @graphite
   370 op mul *tmp288 122 *tmp283
 
   380 op add *tmp302 :drawMaterials:y 7
   381 print :drawMaterials:target.1
   382 draw print 170 *tmp302 @right
-    * label *label377
-    * label *label378
   383 print :drawMaterials:target.1
   384 draw print 171 *tmp302 @right
-    * label *label379
-    * label *label380
-    * label *label381
   385 op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label382
-    * label *label383
-    * label *label384
   386 set :drawMaterials:y :drawItem.5:y
   387 op sub :drawMaterials:count :drawMaterials:count 1
   388 jump *label385 greaterThan :drawMaterials:count 0
   389 jump *label138 always
   390 label *label385
-    * label *label386
   391 label *label387
-    * label *label388
-    * label *label389
   392 set :drawMaterials:target.1 .targetSilicon
-    * label *label392
   393 jump *label403 lessThanEq :drawMaterials:target.1 0
   394 sensor *tmp283 .core @silicon
   395 op mul *tmp288 122 *tmp283
 
   405 op add *tmp302 :drawMaterials:y 7
   406 print :drawMaterials:target.1
   407 draw print 170 *tmp302 @right
-    * label *label393
-    * label *label394
   408 print :drawMaterials:target.1
   409 draw print 171 *tmp302 @right
-    * label *label395
-    * label *label396
-    * label *label397
   410 op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label398
-    * label *label399
-    * label *label400
   411 set :drawMaterials:y :drawItem.5:y
   412 op sub :drawMaterials:count :drawMaterials:count 1
   413 jump *label401 greaterThan :drawMaterials:count 0
   414 jump *label138 always
   415 label *label401
-    * label *label402
   416 label *label403
-    * label *label404
-    * label *label405
   417 set :drawMaterials:target.1 .targetTitanium
-    * label *label408
   418 jump *label419 lessThanEq :drawMaterials:target.1 0
   419 sensor *tmp283 .core @titanium
   420 op mul *tmp288 122 *tmp283
 
   430 op add *tmp302 :drawMaterials:y 7
   431 print :drawMaterials:target.1
   432 draw print 170 *tmp302 @right
-    * label *label409
-    * label *label410
   433 print :drawMaterials:target.1
   434 draw print 171 *tmp302 @right
-    * label *label411
-    * label *label412
-    * label *label413
   435 op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label414
-    * label *label415
-    * label *label416
   436 set :drawMaterials:y :drawItem.5:y
   437 op sub :drawMaterials:count :drawMaterials:count 1
   438 jump *label417 greaterThan :drawMaterials:count 0
   439 jump *label138 always
   440 label *label417
-    * label *label418
   441 label *label419
-    * label *label420
-    * label *label421
   442 set :drawMaterials:target.1 .targetMetaglass
-    * label *label424
   443 jump *label435 lessThanEq :drawMaterials:target.1 0
   444 sensor *tmp283 .core @metaglass
   445 op mul *tmp288 122 *tmp283
 
   455 op add *tmp302 :drawMaterials:y 7
   456 print :drawMaterials:target.1
   457 draw print 170 *tmp302 @right
-    * label *label425
-    * label *label426
   458 print :drawMaterials:target.1
   459 draw print 171 *tmp302 @right
-    * label *label427
-    * label *label428
-    * label *label429
   460 op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label430
-    * label *label431
-    * label *label432
   461 set :drawMaterials:y :drawItem.5:y
   462 op sub :drawMaterials:count :drawMaterials:count 1
   463 jump *label433 greaterThan :drawMaterials:count 0
   464 jump *label138 always
   465 label *label433
-    * label *label434
   466 label *label435
-    * label *label436
-    * label *label437
   467 set :drawMaterials:target.1 .targetThorium
-    * label *label440
   468 jump *label451 lessThanEq :drawMaterials:target.1 0
   469 sensor *tmp283 .core @thorium
   470 op mul *tmp288 122 *tmp283
 
   480 op add *tmp302 :drawMaterials:y 7
   481 print :drawMaterials:target.1
   482 draw print 170 *tmp302 @right
-    * label *label441
-    * label *label442
   483 print :drawMaterials:target.1
   484 draw print 171 *tmp302 @right
-    * label *label443
-    * label *label444
-    * label *label445
-    * label *label446
-    * label *label447
-    * label *label448
-    * label *label449
-    * label *label450
   485 label *label451
-    * label *label452
-    * label *label453
   486 label *label138
   487 label *label134
-    * label *label135
   488 label *label115
   489 label *label55
-    * label *label53
   490 draw col %[white]
   491 select *tmp309 lessThan .materialCount 4 40 25
   492 print "Builder"
   493 draw print 22 *tmp309 @bottomLeft
-    * label *label163
-    * label *label162
   494 print "Builder"
   495 draw print 23 *tmp309 @bottomLeft
-    * label *label165
-    * label *label164
-    * label *label161
   496 jump *label166 notEqual .transportItem null
   497 op sub *tmp313 *tmp309 15
   498 draw col %[white]
 
   505 op sub *tmp332 *tmp309 8
   506 print .transportTarget
   507 draw print 170 *tmp332 @right
-    * label *label172
-    * label *label171
   508 print .transportTarget
   509 draw print 171 *tmp332 @right
-    * label *label174
-    * label *label173
-    * label *label170
-    * label *label169
-    * label *label168
   510 jump *label167 always
   511 label *label166
   512 sensor :drawUnit:unitItem @unit @firstItem
 
   529 op sub *tmp361 *tmp309 8
   530 print .transportTarget
   531 draw print 170 *tmp361 @right
-    * label *label181
-    * label *label180
   532 print .transportTarget
   533 draw print 171 *tmp361 @right
-    * label *label183
-    * label *label182
-    * label *label179
-    * label *label178
-    * label *label177
   534 label *label167
-    * label *label158
   535 set :drawUnits:x 170
   536 draw col %[white]
   537 set :drawUnitCount:count .polys
 
   540 print "x"
   541 print :drawUnitCount:count
   542 draw print 170 129 @right
-    * label *label191
-    * label *label190
   543 op sub :drawUnits:x 170 30
   544 label *label188
-    * label *label189
-    * label *label187
   545 set :drawUnitCount.1:count .monos
   546 jump *label193 lessThanEq :drawUnitCount.1:count 0
   547 op sub *tmp372 :drawUnits:x 20
 
   549 print "x"
   550 print :drawUnitCount.1:count
   551 draw print :drawUnits:x 129 @right
-    * label *label196
-    * label *label195
   552 op sub :drawUnits:x :drawUnits:x 30
   553 label *label193
-    * label *label194
-    * label *label192
   554 set :drawUnitCount.2:count .flares
   555 jump *label198 lessThanEq :drawUnitCount.2:count 0
   556 op sub *tmp375 :drawUnits:x 20
 
   558 print "x"
   559 print :drawUnitCount.2:count
   560 draw print :drawUnits:x 129 @right
-    * label *label201
-    * label *label200
   561 label *label198
-    * label *label199
-    * label *label197
-    * label *label186
   562 drawflush display1
-    * label *label28
   563 label *label21
   564 jump *label19 always
   565 label *label18
 
   569 draw col %[gold]
   570 print "Base map"
   571 draw print 172 172 @topRight
-    * label *label206
-    * label *label205
   572 draw col %[white]
   573 draw translate 88 88
   574 draw scale 5.866666666666666 5.866666666666666
 
   721 set :displayBaseMap:cfg ".&#ʭ#ǥƁ#ʭ#(G"
   722 setaddr *tmp378 *label246
   723 label *label207
-    * label *label301
   724 read *tmp465 :displayBaseMap:cfg 0
   725 op sub *tmp466 *tmp465 35
   726 lookup block :unpackCfg:type *tmp466
 
   734 op sub :unpackCfg:size *tmp501 35
   735 read *tmp504 :displayBaseMap:cfg 12
   736 op sub :unpackCfg:ind *tmp504 35
-    * label *label302
   737 op or *tmp506 :unpackCfg:x :unpackCfg:y
   738 jump *label305 equal *tmp506 false
   739 op shl *tmp508 1 :unpackCfg:ind
 
   754 op mul *tmp518 90 :unpackCfg:rotation
   755 draw image *tmp514 *tmp516 :unpackCfg:type *tmp517 *tmp518
   756 label *label305
-    * label *label306
-    * label *label307
   757 set :displayBaseMap:i .recentBuildIndex
   758 jump *label248 lessThan :displayBaseMap:i 0
   759 set .recentBuildIndex -1
 
   870 multilabel *label494 (m:marker3)
   871 set :drawBlock:cfg ".&#ʭ#ǥƁ#ʭ#(G"
   872 label *label457
-    * label *label308
   873 read *tmp465 :drawBlock:cfg 0
   874 op sub *tmp466 *tmp465 35
   875 lookup block :unpackCfg:type *tmp466
 
   883 op sub :unpackCfg:size *tmp501 35
   884 read *tmp504 :drawBlock:cfg 12
   885 op sub :unpackCfg:ind *tmp504 35
-    * label *label309
   886 op or *tmp506 :unpackCfg:x :unpackCfg:y
   887 jump *label312 equal *tmp506 false
   888 op shl *tmp508 1 :unpackCfg:ind
 
   903 op mul *tmp518 90 :unpackCfg:rotation
   904 draw image *tmp514 *tmp516 :unpackCfg:type *tmp517 *tmp518
   905 label *label312
-    * label *label313
-    * label *label314
   906 label *label248
-    * label *label249
   907 sensor *tmp383 switch1 @enabled
   908 jump *label251 equal *tmp383 false
   909 drawflush display1
   910 jump *label209 always
   911 label *label251
-    * label *label252
   912 jump *label253 equal .pageSwitched false
   913 drawflush display1
   914 label *label253
-    * label *label254
-    * label *label208
   915 multijump *tmp378 0 0 (m:marker2)
   916 multilabel *label246 (m:marker2)
   917 label *label209
   918 drawflush display1
-    * label *label204
   919 jump *label203 always
   920 label *label202
   921 op sub :displayLog:page .page 2
 
   937 print "/"
   938 print :displayLog:pages
   939 draw print 172 4 @bottomRight
-    * label *label257
-    * label *label256
   940 draw col %[white]
   941 op sub :displayLog:position :displayLog:start 1
-    * label *label258
   942 jump *label260 lessThan :displayLog:position :displayLog:stop
   943 label *label300
   944 read :displayLog:record bank1 :displayLog:position
 
   961 op add *tmp417 :displayLog:y 2
   962 print :displayRecord:s
   963 draw print *tmp416 *tmp417 @right
-    * label *label268
-    * label *label267
   964 op sub :displayLog:y :displayLog:y 15
   965 jump *label269 greaterThanEq :displayLog:y 10
   966 op add :displayLog:x :displayLog:x 58
   967 set :displayLog:y 164
   968 label *label269
-    * label *label270
-    * label *label266
-    * label *label261
   969 drawflush display1
   970 sensor *tmp420 switch1 @enabled
   971 jump *label271 equal *tmp420 false
   972 jump *label260 always
   973 label *label271
-    * label *label272
-    * label *label259
   974 op sub :displayLog:position :displayLog:position 1
   975 jump *label300 greaterThanEq :displayLog:position :displayLog:stop
   976 label *label260
-    * label *label255
   977 label *label203
   978 label *label19
   979 jump *label273 lessThanEq .megas 0
 
   999 print .status3
  1000 print "\n"
  1001 printflush message1
-    * label *label275
  1002 label *label274
  1003 sensor .pageSwitched switch1 @enabled
  1004 jump *label276 equal .pageSwitched false
 
  1009 draw reset
  1010 draw clear 0 0 32
  1011 label *label276
-    * label *label277
-    * label *label14
  1012 jump *label13 always
-    * label *label15
-    * label *label9
-    * label *label8
  1013 wait 1e12
  1014 jump *label7 always
  1015 end

Modifications by Jumps phase, Jump Straightening, pass 6, iteration 1 (-7 instructions):
 
   335 draw print 171 97 @right
   336 set :drawMaterials:y 75
   337 op sub :drawMaterials:count .materialCount 1
-    * jump *label353 greaterThan :drawMaterials:count 0
-    * jump *label138 always
+  338 jump *label138 lessThanEq :drawMaterials:count 0
   339 label *label353
   340 label *label355
   341 set :drawMaterials:target.1 .targetLead
 
   359 op sub :drawItem.5:y :drawMaterials:y 15
   360 set :drawMaterials:y :drawItem.5:y
   361 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label369 greaterThan :drawMaterials:count 0
-    * jump *label138 always
+  362 jump *label138 lessThanEq :drawMaterials:count 0
   363 label *label369
   364 label *label371
   365 set :drawMaterials:target.1 .targetGraphite
 
   383 op sub :drawItem.5:y :drawMaterials:y 15
   384 set :drawMaterials:y :drawItem.5:y
   385 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label385 greaterThan :drawMaterials:count 0
-    * jump *label138 always
+  386 jump *label138 lessThanEq :drawMaterials:count 0
   387 label *label385
   388 label *label387
   389 set :drawMaterials:target.1 .targetSilicon
 
   407 op sub :drawItem.5:y :drawMaterials:y 15
   408 set :drawMaterials:y :drawItem.5:y
   409 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label401 greaterThan :drawMaterials:count 0
-    * jump *label138 always
+  410 jump *label138 lessThanEq :drawMaterials:count 0
   411 label *label401
   412 label *label403
   413 set :drawMaterials:target.1 .targetTitanium
 
   431 op sub :drawItem.5:y :drawMaterials:y 15
   432 set :drawMaterials:y :drawItem.5:y
   433 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label417 greaterThan :drawMaterials:count 0
-    * jump *label138 always
+  434 jump *label138 lessThanEq :drawMaterials:count 0
   435 label *label417
   436 label *label419
   437 set :drawMaterials:target.1 .targetMetaglass
 
   455 op sub :drawItem.5:y :drawMaterials:y 15
   456 set :drawMaterials:y :drawItem.5:y
   457 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label433 greaterThan :drawMaterials:count 0
-    * jump *label138 always
+  458 jump *label138 lessThanEq :drawMaterials:count 0
   459 label *label433
   460 label *label435
   461 set :drawMaterials:target.1 .targetThorium
 
   962 label *label269
   963 drawflush display1
   964 sensor *tmp420 switch1 @enabled
-    * jump *label271 equal *tmp420 false
-    * jump *label260 always
+  965 jump *label260 notEqual *tmp420 false
   966 label *label271
   967 op sub :displayLog:position :displayLog:position 1
   968 jump *label300 greaterThanEq :displayLog:position :displayLog:stop

Modifications by Jumps phase, Jump Optimization, pass 6, iteration 1:
 
   336 set :drawMaterials:y 75
   337 op sub :drawMaterials:count .materialCount 1
   338 jump *label138 lessThanEq :drawMaterials:count 0
-    * label *label353
   339 label *label355
   340 set :drawMaterials:target.1 .targetLead
   341 jump *label371 lessThanEq :drawMaterials:target.1 0
 
   359 set :drawMaterials:y :drawItem.5:y
   360 op sub :drawMaterials:count :drawMaterials:count 1
   361 jump *label138 lessThanEq :drawMaterials:count 0
-    * label *label369
   362 label *label371
   363 set :drawMaterials:target.1 .targetGraphite
   364 jump *label387 lessThanEq :drawMaterials:target.1 0
 
   382 set :drawMaterials:y :drawItem.5:y
   383 op sub :drawMaterials:count :drawMaterials:count 1
   384 jump *label138 lessThanEq :drawMaterials:count 0
-    * label *label385
   385 label *label387
   386 set :drawMaterials:target.1 .targetSilicon
   387 jump *label403 lessThanEq :drawMaterials:target.1 0
 
   405 set :drawMaterials:y :drawItem.5:y
   406 op sub :drawMaterials:count :drawMaterials:count 1
   407 jump *label138 lessThanEq :drawMaterials:count 0
-    * label *label401
   408 label *label403
   409 set :drawMaterials:target.1 .targetTitanium
   410 jump *label419 lessThanEq :drawMaterials:target.1 0
 
   428 set :drawMaterials:y :drawItem.5:y
   429 op sub :drawMaterials:count :drawMaterials:count 1
   430 jump *label138 lessThanEq :drawMaterials:count 0
-    * label *label417
   431 label *label419
   432 set :drawMaterials:target.1 .targetMetaglass
   433 jump *label435 lessThanEq :drawMaterials:target.1 0
 
   451 set :drawMaterials:y :drawItem.5:y
   452 op sub :drawMaterials:count :drawMaterials:count 1
   453 jump *label138 lessThanEq :drawMaterials:count 0
-    * label *label433
   454 label *label435
   455 set :drawMaterials:target.1 .targetThorium
   456 jump *label451 lessThanEq :drawMaterials:target.1 0
 
   957 drawflush display1
   958 sensor *tmp420 switch1 @enabled
   959 jump *label260 notEqual *tmp420 false
-    * label *label271
   960 op sub :displayLog:position :displayLog:position 1
   961 jump *label300 greaterThanEq :displayLog:position :displayLog:stop
   962 label *label260

Modifications by Jumps phase, Jump Threading, pass 6, iteration 1:
 
    54 draw image *tmp57 *tmp62 @mega *tmp67 0
    55 drawflush display1
    56 op add .animation .animation 1
-    * jump *label21 always
+   57 jump *label19 always
    58 label *label20
    59 draw reset
    60 draw clear 0 0 32
 
   203 print "/"
   204 print :drawMaterials:unitTotal1
   205 draw print 171 97 @right
-    * jump *label79 equal :drawMaterials:unit2 null
+  206 jump *label55 equal :drawMaterials:unit2 null
   207 op mul *tmp176 122 .reconstructorProgress
   208 op min :drawItem.1:length 122 *tmp176
   209 draw col %[white]
 
   220 print "/"
   221 print :drawMaterials:unitTotal2
   222 draw print 171 82 @right
-    * jump *label89 equal :drawMaterials:unit3 null
+  223 jump *label55 equal :drawMaterials:unit3 null
   224 op mul *tmp200 122 :drawMaterials:multiReconstructorProgress
   225 op min :drawItem.2:length 122 *tmp200
   226 draw col %[white]
 
   239 draw print 171 67 @right
   240 label *label89
   241 label *label79
-    * jump *label70 always
+  242 jump *label55 always
   243 label *label69
   244 jump *label324 lessThanEq :drawMaterials:targetFactoryLead 0
   245 sensor *tmp223 .airFactory @lead
 
   258 draw print 171 97 @right
   259 set :drawMaterials:y 75
   260 label *label324
-    * jump *label338 lessThanEq :drawMaterials:targetFactorySilicon 0
+  261 jump *label55 lessThanEq :drawMaterials:targetFactorySilicon 0
   262 sensor *tmp223 .airFactory @silicon
   263 op mul *tmp228 122 *tmp223
   264 op div *tmp229 *tmp228 :drawMaterials:targetFactorySilicon
 
   987 printflush message1
   988 label *label274
   989 sensor .pageSwitched switch1 @enabled
-    * jump *label276 equal .pageSwitched false
+  990 jump *label13 equal .pageSwitched false
   991 control enabled switch1 false
   992 op add *tmp429 .page 1
   993 op mod .page *tmp429 .numPages

Modifications by Jumps phase, Unreachable Code Elimination, pass 6, iteration 1 (-3 instructions):
 
   237 print "/"
   238 print .megaTarget
   239 draw print 171 67 @right
-    * label *label89
-    * label *label79
   240 jump *label55 always
   241 label *label69
   242 jump *label324 lessThanEq :drawMaterials:targetFactoryLead 0
 
   273 draw print 170 *tmp242 @right
   274 print :drawMaterials:targetFactorySilicon
   275 draw print 171 *tmp242 @right
-    * label *label338
-    * label *label70
   276 jump *label55 always
   277 label *label54
   278 op equal *tmp246 .nextBlock @titanium
 
   544 draw print :drawUnits:x 129 @right
   545 label *label198
   546 drawflush display1
-    * label *label21
   547 jump *label19 always
   548 label *label18
   549 jump *label202 notEqual .page 1
 
   989 drawflush null
   990 draw reset
   991 draw clear 0 0 32
-    * label *label276
   992 jump *label13 always
-    * wait 1e12
-    * jump *label7 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 6, iteration 1:
 
    15 set .animation -15
    16 set .pageSwitched false
    17 set *signature "0:v1"
-    * label *label7
    18 label *label10
    19 ubind @poly
    20 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    17 set *signature "0:v1"
    18 label *label10
    19 ubind @poly
-    * ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
+   20 ulocate building core false @copper 0 0 0 .core
    21 jump *label10 equal .core null
    22 printflush null
    23 drawflush null

Modifications by Final phase, Print Merging, iteration 1 (-13 instructions):
 
    87 op mod :drawHeader:s :drawHeader:t 60
    88 select *tmp90 lessThan :drawHeader:s 10 "0" ""
    89 print :drawHeader:m
-    * print ":"
-    * print *tmp90
-    * print :drawHeader:s
+   90 print ":{0}{0} (x{0}.{0})"
+   91 format *tmp90
+   92 format :drawHeader:s
    93 op mul *tmp91 10 :drawHeader:t
    94 op div *tmp92 *tmp91 :drawHeader:tt
    95 op round :drawHeader:ratio *tmp92
    96 op idiv *tmp94 :drawHeader:ratio 10
    97 op mod *tmp95 :drawHeader:ratio 10
-    * print " (x"
-    * print *tmp94
-    * print "."
-    * print *tmp95
-    * print ")"
+   98 format *tmp94
+   99 format *tmp95
   100 draw print 170 172 @topRight
   101 jump *label45 equal .titaniumDrill false
   102 sensor *tmp97 .titaniumDrill @titanium
 
   954 label *label203
   955 label *label19
   956 jump *label273 lessThanEq .megas 0
-    * print "[gold]All done.[]\nNothing more to see here.\nGo home."
-    * print "\n"
+  957 print "[gold]All done.[]\nNothing more to see here.\nGo home.\n"
   958 printflush message1
   959 jump *label274 always
   960 label *label273
-    * print "[gold]Building "
-    * print .nextBlock
-    * print "\n"
-    * print "==================================[]"
-    * print "\n"
-    * print .status1
-    * print "\n"
-    * print .status2
-    * print .item2
-    * print " "
-    * print "("
-    * print .block2
-    * print ")"
-    * print "\n"
-    * print .status3
-    * print "\n"
+  961 print "[gold]Building {0}\n==================================[]\n{0}\n{0}{0} ({0})\n{0}\n"
+  962 format .nextBlock
+  963 format .status1
+  964 format .status2
+  965 format .item2
+  966 format .block2
+  967 format .status3
   968 printflush message1
   969 label *label274
   970 sensor .pageSwitched switch1 @enabled

Final code before resolving virtual instructions:

        label *label6                                                Display.mnd: require "OreLocator.mnd" remote oreLocator;
    0:  read *tmp39 processor1 "*signature"                          ...
    1:  jump *label6 notEqual *tmp39 "3290b8c661787058:v1"           ...
    2:  set .core null                                               Display.mnd: var
    3:  set .page 0                                                  ...
    4:  set .numPages 3                                              ...
    5:  set .recentBuildIndex -1                                     Display.mnd: remote var
    6:  set .monos 0                                                 ...
    7:  set .flares 0                                                ...
    8:  set .polys 1                                                 ...
    9:  set .megas 0                                                 ...
   10:  set .flareTarget 0                                           ...
   11:  set .monoTarget 0                                            ...
   12:  set .polyTarget 0                                            ...
   13:  set .megaTarget 0                                            ...
   14:  set .animation -15                                           Display.mnd: var animation = -15;
   15:  set .pageSwitched false                                      Display.mnd: var pageSwitched = false;
   16:  set *signature "0:v1"                                        Display.mnd: #set target = 8;
        label *label10                                               Display.mnd: do
   17:  ubind @poly                                                  Display.mnd: ubind(@poly);
   18:  ulocate building core false @copper 0 0 0 .core              Display.mnd: core = ulocate(:building, :core, false);
   19:  jump *label10 equal .core null                               Display.mnd: do
   20:  printflush null                                              Display.mnd: printflush(null);
   21:  drawflush null                                               Display.mnd: drawflush(null);
        label *label13                                               Display.mnd: while true do
   22:  jump *label16 equal .unitReset false                         Display.mnd: if unitReset then
   23:  set .reconstructorProgress 0                                 Display.mnd: factoryProgress = reconstructorProgress = 0;
   24:  set .factoryProgress 0                                       ...
   25:  set .unitReset false                                         Display.mnd: unitReset = false;
        label *label16                                               Display.mnd: if unitReset then
   26:  jump *label18 notEqual .page 0                               Display.mnd: if page == 0 then
   27:  jump *label20 lessThanEq .megas 0                            Display.mnd: if megas > 0 then
   28:  jump *label23 greaterThanEq .animation 0                     Display.mnd: if animation < 0 then
   29:  draw color 0 0 32 80 0 0                                     Display.mnd: color(0, 0, 32, 80);
   30:  draw rect 0 0 176 176 0 0                                    Display.mnd: rect(0, 0, 176, 176);
   31:  jump *label24 always 0 0                                     Display.mnd: if animation < 0 then
        label *label23                                               ...
   32:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
   33:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
        label *label24                                               Display.mnd: if animation < 0 then
   34:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   35:  op div *tmp54 .animation 30                                  Display.mnd: var ratio = max(0, min(animation / 30, 1));
   36:  op min *tmp55 *tmp54 1                                       ...
   37:  op max :animate:ratio 0 *tmp55                               ...
   38:  op sub *tmp58 1 :animate:ratio                               Display.mnd: (1 - ratio) * from + ratio * to;
   39:  op mul *tmp59 *tmp58 40                                      ...
   40:  op mul *tmp60 :animate:ratio 88                              ...
   41:  op add *tmp57 *tmp59 *tmp60                                  ...
   42:  op mul *tmp64 *tmp58 137                                     ...
   43:  op add *tmp62 *tmp64 *tmp60                                  ...
   44:  op mul *tmp69 *tmp58 32                                      ...
   45:  op mul *tmp70 :animate:ratio 168                             ...
   46:  op add *tmp67 *tmp69 *tmp70                                  ...
   47:  draw image *tmp57 *tmp62 @mega *tmp67 0 0                    Display.mnd: image(x, y, @mega, size, 0);
   48:  drawflush display1                                           Display.mnd: drawflush(display1);
   49:  op add .animation .animation 1                               Display.mnd: animate();
   50:  jump *label19 always 0 0                                     Display.mnd: if megas > 0 then
        label *label20                                               ...
   51:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
   52:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
   53:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
   54:  print "Goal"                                                 Display.mnd: print(text);
   55:  draw print 40 161 @bottom                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   56:  print "Goal"                                                 Display.mnd: print(text);
   57:  draw print 41 161 @bottom                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   58:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   59:  op add :drawHeader:count .nextBlock .nextUnit                Display.mnd: var count = nextBlock + nextUnit;
   60:  jump *label35 notEqual :drawHeader:count 2                   Display.mnd: if count == 2 then
   61:  draw image 25 139 .nextBlock 25 0 0                          Display.mnd: image(HEADER_X - 15, HEADER1_Y - 22, nextBlock, 25, 0);
   62:  draw image 55 139 .nextUnit 25 0 0                           Display.mnd: image(HEADER_X + 15, HEADER1_Y - 22, nextUnit, 25, 0);
   63:  jump *label36 always 0 0                                     Display.mnd: if count == 2 then
        label *label35                                               ...
   64:  jump *label37 notEqual :drawHeader:count 1                   Display.mnd: elsif count == 1 then
   65:  select *tmp80 notEqual .nextBlock null .nextBlock .nextUnit  Display.mnd: image(HEADER_X, HEADER1_Y - 24, nextBlock != null ? nextBlock : nextUnit, 32, 0);
   66:  draw image 40 137 *tmp80 32 0 0                              ...
   67:  jump *label38 always 0 0                                     Display.mnd: elsif count == 1 then
        label *label37                                               ...
   68:  op div *tmp81 @tick 2                                        Display.mnd: image(HEADER_X, HEADER1_Y - 24, @hydrogen, 32, 360 - (@tick / 2) % 360);
   69:  op mod *tmp82 *tmp81 360                                     ...
   70:  op sub *tmp83 360 *tmp82                                     ...
   71:  draw image 40 137 @hydrogen 32 *tmp83 0                      ...
        label *label38                                               Display.mnd: elsif count == 1 then
        label *label36                                               Display.mnd: if count == 2 then
   72:  set :drawHeader:tt @second                                   Display.mnd: var tt = @second;
   73:  read *tmp84 processor2 "time"                                Display.mnd: var t = floor(timer.read("time") / 120);
   74:  op idiv :drawHeader:t *tmp84 120                             ...
   75:  op idiv :drawHeader:m :drawHeader:t 60                       Display.mnd: var m = t \ 60;
   76:  op mod :drawHeader:s :drawHeader:t 60                        Display.mnd: var s = t % 60;
   77:  select *tmp90 lessThan :drawHeader:s 10 "0" ""               Display.mnd: print(m, ":", s < 10 ? "0" : "", s);
   78:  print :drawHeader:m                                          ...
   79:  print ":{0}{0} (x{0}.{0})"                                   ...
   80:  format *tmp90                                                ...
   81:  format :drawHeader:s                                         ...
   82:  op mul *tmp91 10 :drawHeader:t                               Display.mnd: var ratio = round(10 * t / tt);
   83:  op div *tmp92 *tmp91 :drawHeader:tt                          ...
   84:  op round :drawHeader:ratio *tmp92 0                          ...
   85:  op idiv *tmp94 :drawHeader:ratio 10                          Display.mnd: print(" (x", ratio \ 10, ".", ratio % 10);
   86:  op mod *tmp95 :drawHeader:ratio 10                           ...
   87:  format *tmp94                                                ...
   88:  format *tmp95                                                ...
   89:  draw print 170 172 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   90:  jump *label45 equal .titaniumDrill false                     Display.mnd: if titaniumDrill then
   91:  sensor *tmp97 .titaniumDrill @titanium                       Display.mnd: count = max(titaniumDrillCount, titaniumDrill.@titanium);
   92:  op max :drawHeader:count .titaniumDrillCount *tmp97          ...
   93:  op log10 *tmp99 :drawHeader:count 0                          Display.mnd: var len = floor(log10(count));
   94:  op floor :drawHeader:len *tmp99 0                            ...
   95:  print "x"                                                    Display.mnd: print(text);
   96:  print :drawHeader:count                                      ...
   97:  draw print 170 155 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   98:  op mul *tmp102 7 :drawHeader:len                             Display.mnd: image(x - 20 - 7 * len, 146, @titanium, 12, 0);
   99:  op sub *tmp103 150 *tmp102                                   ...
  100:  draw image *tmp103 146 @titanium 12 0 0                      ...
        label *label45                                               Display.mnd: if titaniumDrill then
  101:  jump *label49 equal .thoriumContainer false                  Display.mnd: if thoriumContainer then
  102:  sensor :drawHeader:count .thoriumContainer @thorium          Display.mnd: count = thoriumContainer.@thorium;
  103:  op log10 *tmp106 :drawHeader:count 0                         Display.mnd: var len = floor(log10(count));
  104:  op floor :drawHeader:len.1 *tmp106 0                         ...
  105:  print "x"                                                    Display.mnd: print(text);
  106:  print :drawHeader:count                                      ...
  107:  draw print 120 155 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  108:  op mul *tmp109 7 :drawHeader:len.1                           Display.mnd: image(x - 20 - 7 * len, 146, @thorium, 12, 0);
  109:  op sub *tmp110 100 *tmp109                                   ...
  110:  draw image *tmp110 146 @thorium 12 0 0                       ...
        label *label49                                               Display.mnd: if thoriumContainer then
  111:  set :drawMaterials:y 90                                      Display.mnd: var col = 0, y = HEADER2_Y - ROW_HEIGHT;
  112:  jump *label54 notEqual .nextBlock null                       Display.mnd: if nextBlock == null then
  113:  sensor *tmp113 .airFactory @progress                         Display.mnd: factoryProgress = max(factoryProgress, airFactory.@progress);
  114:  op max .factoryProgress .factoryProgress *tmp113             ...
  115:  sensor *tmp115 .reconstructor @progress                      Display.mnd: reconstructorProgress = max(reconstructorProgress, reconstructor.@progress);
  116:  op max .reconstructorProgress .reconstructorProgress *tmp115 ...
  117:  sensor :drawMaterials:multiReconstructorProgress .multiRecon Display.mnd: var multiReconstructorProgress = multiReconstructor.@progress;
  118:  jump *label56 notEqual .nextUnit @mono                       Display.mnd: if nextUnit == @mono then
  119:  set :drawMaterials:targetFactoryLead 15                      Display.mnd: targetFactoryLead = 15;
  120:  set :drawMaterials:targetFactorySilicon 30                   Display.mnd: targetFactorySilicon = 30;
  121:  set .materialCount 2                                         Display.mnd: materialCount = 2;
  122:  set :drawMaterials:unitCount1 .monos                         Display.mnd: unitCount1 = monos;
  123:  set :drawMaterials:unitTotal1 .monoTarget                    Display.mnd: unitTotal1 = monoTarget;
  124:  set :drawMaterials:unit1 .nextUnit                           Display.mnd: unit1 = nextUnit;
  125:  set :drawMaterials:unit3 null                                Display.mnd: unit2 = unit3 = null;
  126:  set :drawMaterials:unit2 null                                ...
  127:  jump *label57 always 0 0                                     Display.mnd: if nextUnit == @mono then
        label *label56                                               ...
  128:  jump *label58 notEqual .nextUnit @flare                      Display.mnd: elsif nextUnit == @flare then
  129:  set :drawMaterials:targetFactoryLead 0                       Display.mnd: targetFactoryLead = 0;
  130:  set :drawMaterials:targetFactorySilicon 15                   Display.mnd: targetFactorySilicon = 15;
  131:  set .materialCount 1                                         Display.mnd: materialCount = 1;
  132:  set :drawMaterials:unitCount1 .flares                        Display.mnd: unitCount1 = flares;
  133:  set :drawMaterials:unitTotal1 .flareTarget                   Display.mnd: unitTotal1 = flareTarget;
  134:  set :drawMaterials:unit1 .nextUnit                           Display.mnd: unit1 = nextUnit;
  135:  set :drawMaterials:unit3 null                                Display.mnd: unit2 = unit3 = null;
  136:  set :drawMaterials:unit2 null                                ...
  137:  jump *label59 always 0 0                                     Display.mnd: elsif nextUnit == @flare then
        label *label58                                               ...
  138:  jump *label60 notEqual .nextUnit @poly                       Display.mnd: elsif nextUnit == @poly then
  139:  op floor :drawMaterials:unitCount1 .factoryProgress 0        Display.mnd: unitCount1 = floor(factoryProgress);
  140:  set :drawMaterials:unitCount2 .polys                         Display.mnd: unitCount2 = polys;
  141:  set :drawMaterials:unitTotal1 1                              Display.mnd: unitTotal1 = 1;
  142:  set :drawMaterials:unitTotal2 .polyTarget                    Display.mnd: unitTotal2 = polyTarget;
  143:  set :drawMaterials:unit1 @mono                               Display.mnd: unit1 = @mono;
  144:  set :drawMaterials:unit2 .nextUnit                           Display.mnd: unit2 = nextUnit;
  145:  set :drawMaterials:unit3 null                                Display.mnd: unit3 = null;
  146:  op greaterThan *tmp134 .reconstructorProgress 0              Display.mnd: factoryProgress = max(factoryProgress, reconstructorProgress > 0);
  147:  op max .factoryProgress .factoryProgress *tmp134             ...
  148:  jump *label61 always 0 0                                     Display.mnd: elsif nextUnit == @poly then
        label *label60                                               ...
  149:  jump *label62 notEqual .nextUnit @mega                       Display.mnd: elsif nextUnit == @mega then
  150:  op floor :drawMaterials:unitCount1 .factoryProgress 0        Display.mnd: unitCount1 = floor(factoryProgress);
  151:  op floor :drawMaterials:unitCount2 .reconstructorProgress 0  Display.mnd: unitCount2 = floor(reconstructorProgress);
  152:  set :drawMaterials:unitTotal1 1                              Display.mnd: unitTotal1 = 1;
  153:  set :drawMaterials:unitTotal2 1                              Display.mnd: unitTotal2 = 1;
  154:  set :drawMaterials:unit1 @mono                               Display.mnd: unit1 = @mono;
  155:  set :drawMaterials:unit2 @poly                               Display.mnd: unit2 = @poly;
  156:  set :drawMaterials:unit3 .nextUnit                           Display.mnd: unit3 = nextUnit;
  157:  op greaterThan *tmp141 .reconstructorProgress 0              Display.mnd: factoryProgress = max(factoryProgress, reconstructorProgress > 0);
  158:  op max .factoryProgress .factoryProgress *tmp141             ...
  159:  op greaterThan *tmp143 :drawMaterials:multiReconstructorProg Display.mnd: reconstructorProgress = max(reconstructorProgress, multiReconstructorProgress > 0);
  160:  op max .reconstructorProgress .reconstructorProgress *tmp143 ...
        label *label62                                               Display.mnd: elsif nextUnit == @mega then
        label *label61                                               Display.mnd: elsif nextUnit == @poly then
        label *label59                                               Display.mnd: elsif nextUnit == @flare then
        label *label57                                               Display.mnd: if nextUnit == @mono then
  161:  print "Unit factories"                                       Display.mnd: print(text);
  162:  draw print 22 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  163:  print "Unit factories"                                       Display.mnd: print(text);
  164:  draw print 23 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  165:  jump *label69 lessThanEq .factoryProgress 0                  Display.mnd: if factoryProgress > 0 then
  166:  op mul *tmp152 122 .factoryProgress                          Display.mnd: var length = min(barLength, barLength * current / target);
  167:  op min :drawItem:length 122 *tmp152                          ...
  168:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  169:  draw image 11 95 :drawMaterials:unit1 16 0 0                 Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  170:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  171:  draw rect 22 90 :drawItem:length 10 0 0                      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  172:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  173:  draw lineRect 22 90 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  174:  print :drawMaterials:unitCount1                              Display.mnd: print(text);
  175:  print "/"                                                    ...
  176:  print :drawMaterials:unitTotal1                              ...
  177:  draw print 170 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  178:  print :drawMaterials:unitCount1                              Display.mnd: print(text);
  179:  print "/"                                                    ...
  180:  print :drawMaterials:unitTotal1                              ...
  181:  draw print 171 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  182:  jump *label55 equal :drawMaterials:unit2 null                Display.mnd: if unit2 != null then
  183:  op mul *tmp176 122 .reconstructorProgress                    Display.mnd: var length = min(barLength, barLength * current / target);
  184:  op min :drawItem.1:length 122 *tmp176                        ...
  185:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  186:  draw image 11 80 :drawMaterials:unit2 16 0 0                 Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  187:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  188:  draw rect 22 75 :drawItem.1:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  189:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  190:  draw lineRect 22 75 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  191:  print :drawMaterials:unitCount2                              Display.mnd: print(text);
  192:  print "/"                                                    ...
  193:  print :drawMaterials:unitTotal2                              ...
  194:  draw print 170 82 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  195:  print :drawMaterials:unitCount2                              Display.mnd: print(text);
  196:  print "/"                                                    ...
  197:  print :drawMaterials:unitTotal2                              ...
  198:  draw print 171 82 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  199:  jump *label55 equal :drawMaterials:unit3 null                Display.mnd: if unit3 != null then
  200:  op mul *tmp200 122 :drawMaterials:multiReconstructorProgress Display.mnd: var length = min(barLength, barLength * current / target);
  201:  op min :drawItem.2:length 122 *tmp200                        ...
  202:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  203:  draw image 11 65 :drawMaterials:unit3 16 0 0                 Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  204:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  205:  draw rect 22 60 :drawItem.2:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  206:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  207:  draw lineRect 22 60 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  208:  print .megas                                                 Display.mnd: print(text);
  209:  print "/"                                                    ...
  210:  print .megaTarget                                            ...
  211:  draw print 170 67 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  212:  print .megas                                                 Display.mnd: print(text);
  213:  print "/"                                                    ...
  214:  print .megaTarget                                            ...
  215:  draw print 171 67 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  216:  jump *label55 always 0 0                                     Display.mnd: if factoryProgress > 0 then
        label *label69                                               ...
  217:  jump *label324 lessThanEq :drawMaterials:targetFactoryLead 0 Display.mnd: if target > 0 then
  218:  sensor *tmp223 .airFactory @lead                             Display.mnd: drawItem(in out col, in out y, 1, item, airFactory.sensor(item), target, target);
  219:  op mul *tmp228 122 *tmp223                                   Display.mnd: var length = min(barLength, barLength * current / target);
  220:  op div *tmp229 *tmp228 :drawMaterials:targetFactoryLead      ...
  221:  op min :drawItem.3:length 122 *tmp229                        ...
  222:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  223:  draw image 11 95 @lead 16 0 0                                Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  224:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  225:  draw rect 22 90 :drawItem.3:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  226:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  227:  draw lineRect 22 90 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  228:  print :drawMaterials:targetFactoryLead                       Display.mnd: print(text);
  229:  draw print 170 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  230:  print :drawMaterials:targetFactoryLead                       Display.mnd: print(text);
  231:  draw print 171 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  232:  set :drawMaterials:y 75                                      Display.mnd: drawItem(in out col, in out y, 1, item, airFactory.sensor(item), target, target);
        label *label324                                              Display.mnd: if target > 0 then
  233:  jump *label55 lessThanEq :drawMaterials:targetFactorySilicon ...
  234:  sensor *tmp223 .airFactory @silicon                          Display.mnd: drawItem(in out col, in out y, 1, item, airFactory.sensor(item), target, target);
  235:  op mul *tmp228 122 *tmp223                                   Display.mnd: var length = min(barLength, barLength * current / target);
  236:  op div *tmp229 *tmp228 :drawMaterials:targetFactorySilicon   ...
  237:  op min :drawItem.3:length 122 *tmp229                        ...
  238:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  239:  op add *tmp240 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  240:  draw image 11 *tmp240 @silicon 16 0 0                        ...
  241:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  242:  draw rect 22 :drawMaterials:y :drawItem.3:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  243:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  244:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  245:  op add *tmp242 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  246:  print :drawMaterials:targetFactorySilicon                    Display.mnd: print(text);
  247:  draw print 170 *tmp242 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  248:  print :drawMaterials:targetFactorySilicon                    Display.mnd: print(text);
  249:  draw print 171 *tmp242 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  250:  jump *label55 always 0 0                                     Display.mnd: if nextBlock == null then
        label *label54                                               ...
  251:  op equal *tmp246 .nextBlock @titanium                        Display.mnd: elsif nextBlock == @titanium or nextBlock == @ore-titanium then
  252:  op equal *tmp247 .nextBlock @ore-titanium                    ...
  253:  op or *tmp248 *tmp246 *tmp247                                ...
  254:  jump *label114 equal *tmp248 false                           ...
  255:  read *tmp250 processor1 ".mapAction"                         Display.mnd: print(text);
  256:  print *tmp250                                                ...
  257:  draw print 22 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  258:  read *tmp252 processor1 ".mapAction"                         Display.mnd: print(text);
  259:  print *tmp252                                                ...
  260:  draw print 23 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  261:  read :drawItem.4:current processor1 ".mapProgress"           Display.mnd: drawItem(in 0, in HEADER2_Y - ROW_HEIGHT, 1, @titanium, oreLocator.mapProgress, oreLocator.mapTotal, "x", oreLocator.mapSpots);
  262:  read :drawItem.4:target processor1 ".mapTotal"               ...
  263:  op mul *tmp257 122 :drawItem.4:current                       Display.mnd: var length = min(barLength, barLength * current / target);
  264:  op div *tmp258 *tmp257 :drawItem.4:target                    ...
  265:  op min :drawItem.4:length 122 *tmp258                        ...
  266:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  267:  draw image 11 95 @titanium 16 0 0                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  268:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  269:  draw rect 22 90 :drawItem.4:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  270:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  271:  draw lineRect 22 90 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  272:  print "x"                                                    Display.mnd: print(text);
  273:  read *tmp272 processor1 ".mapSpots"                          ...
  274:  print *tmp272                                                ...
  275:  draw print 170 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  276:  print "x"                                                    Display.mnd: print(text);
  277:  read *tmp274 processor1 ".mapSpots"                          ...
  278:  print *tmp274                                                ...
  279:  draw print 171 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  280:  jump *label115 always 0 0                                    Display.mnd: elsif nextBlock == @titanium or nextBlock == @ore-titanium then
        label *label114                                              ...
  281:  set .materialCount .totalTargets                             Display.mnd: count = materialCount = totalTargets;
  282:  set :drawMaterials:count .materialCount                      ...
  283:  print "Materials"                                            Display.mnd: print(text);
  284:  draw print 22 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  285:  print "Materials"                                            Display.mnd: print(text);
  286:  draw print 23 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  287:  jump *label134 equal .materialCount false                    Display.mnd: if count then
  288:  set :drawMaterials:target.1 .targetCopper                    Display.mnd: for var item, target in
  289:  jump *label355 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  290:  sensor *tmp283 .core @copper                                 Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  291:  op mul *tmp288 122 *tmp283                                   Display.mnd: var length = min(barLength, barLength * current / target);
  292:  op div *tmp289 *tmp288 :drawMaterials:target.1               ...
  293:  op min :drawItem.5:length 122 *tmp289                        ...
  294:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  295:  draw image 11 95 @copper 16 0 0                              Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  296:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  297:  draw rect 22 90 :drawItem.5:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  298:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  299:  draw lineRect 22 90 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  300:  print :drawMaterials:target.1                                Display.mnd: print(text);
  301:  draw print 170 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  302:  print :drawMaterials:target.1                                Display.mnd: print(text);
  303:  draw print 171 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  304:  set :drawMaterials:y 75                                      Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  305:  op sub :drawMaterials:count .materialCount 1                 Display.mnd: if --count <= 0 then break; end;
  306:  jump *label138 lessThanEq :drawMaterials:count 0             ...
        label *label355                                              Display.mnd: if target > 0 then
  307:  set :drawMaterials:target.1 .targetLead                      Display.mnd: for var item, target in
  308:  jump *label371 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  309:  sensor *tmp283 .core @lead                                   Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  310:  op mul *tmp288 122 *tmp283                                   Display.mnd: var length = min(barLength, barLength * current / target);
  311:  op div *tmp289 *tmp288 :drawMaterials:target.1               ...
  312:  op min :drawItem.5:length 122 *tmp289                        ...
  313:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  314:  op add *tmp300 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  315:  draw image 11 *tmp300 @lead 16 0 0                           ...
  316:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  317:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  318:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  319:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  320:  op add *tmp302 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  321:  print :drawMaterials:target.1                                Display.mnd: print(text);
  322:  draw print 170 *tmp302 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  323:  print :drawMaterials:target.1                                Display.mnd: print(text);
  324:  draw print 171 *tmp302 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  325:  op sub :drawItem.5:y :drawMaterials:y 15                     Display.mnd: y -= ROW_HEIGHT;
  326:  set :drawMaterials:y :drawItem.5:y                           Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  327:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  328:  jump *label138 lessThanEq :drawMaterials:count 0             ...
        label *label371                                              Display.mnd: if target > 0 then
  329:  set :drawMaterials:target.1 .targetGraphite                  Display.mnd: for var item, target in
  330:  jump *label387 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  331:  sensor *tmp283 .core @graphite                               Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  332:  op mul *tmp288 122 *tmp283                                   Display.mnd: var length = min(barLength, barLength * current / target);
  333:  op div *tmp289 *tmp288 :drawMaterials:target.1               ...
  334:  op min :drawItem.5:length 122 *tmp289                        ...
  335:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  336:  op add *tmp300 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  337:  draw image 11 *tmp300 @graphite 16 0 0                       ...
  338:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  339:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  340:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  341:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  342:  op add *tmp302 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  343:  print :drawMaterials:target.1                                Display.mnd: print(text);
  344:  draw print 170 *tmp302 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  345:  print :drawMaterials:target.1                                Display.mnd: print(text);
  346:  draw print 171 *tmp302 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  347:  op sub :drawItem.5:y :drawMaterials:y 15                     Display.mnd: y -= ROW_HEIGHT;
  348:  set :drawMaterials:y :drawItem.5:y                           Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  349:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  350:  jump *label138 lessThanEq :drawMaterials:count 0             ...
        label *label387                                              Display.mnd: if target > 0 then
  351:  set :drawMaterials:target.1 .targetSilicon                   Display.mnd: for var item, target in
  352:  jump *label403 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  353:  sensor *tmp283 .core @silicon                                Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  354:  op mul *tmp288 122 *tmp283                                   Display.mnd: var length = min(barLength, barLength * current / target);
  355:  op div *tmp289 *tmp288 :drawMaterials:target.1               ...
  356:  op min :drawItem.5:length 122 *tmp289                        ...
  357:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  358:  op add *tmp300 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  359:  draw image 11 *tmp300 @silicon 16 0 0                        ...
  360:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  361:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  362:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  363:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  364:  op add *tmp302 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  365:  print :drawMaterials:target.1                                Display.mnd: print(text);
  366:  draw print 170 *tmp302 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  367:  print :drawMaterials:target.1                                Display.mnd: print(text);
  368:  draw print 171 *tmp302 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  369:  op sub :drawItem.5:y :drawMaterials:y 15                     Display.mnd: y -= ROW_HEIGHT;
  370:  set :drawMaterials:y :drawItem.5:y                           Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  371:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  372:  jump *label138 lessThanEq :drawMaterials:count 0             ...
        label *label403                                              Display.mnd: if target > 0 then
  373:  set :drawMaterials:target.1 .targetTitanium                  Display.mnd: for var item, target in
  374:  jump *label419 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  375:  sensor *tmp283 .core @titanium                               Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  376:  op mul *tmp288 122 *tmp283                                   Display.mnd: var length = min(barLength, barLength * current / target);
  377:  op div *tmp289 *tmp288 :drawMaterials:target.1               ...
  378:  op min :drawItem.5:length 122 *tmp289                        ...
  379:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  380:  op add *tmp300 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  381:  draw image 11 *tmp300 @titanium 16 0 0                       ...
  382:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  383:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  384:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  385:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  386:  op add *tmp302 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  387:  print :drawMaterials:target.1                                Display.mnd: print(text);
  388:  draw print 170 *tmp302 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  389:  print :drawMaterials:target.1                                Display.mnd: print(text);
  390:  draw print 171 *tmp302 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  391:  op sub :drawItem.5:y :drawMaterials:y 15                     Display.mnd: y -= ROW_HEIGHT;
  392:  set :drawMaterials:y :drawItem.5:y                           Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  393:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  394:  jump *label138 lessThanEq :drawMaterials:count 0             ...
        label *label419                                              Display.mnd: if target > 0 then
  395:  set :drawMaterials:target.1 .targetMetaglass                 Display.mnd: for var item, target in
  396:  jump *label435 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  397:  sensor *tmp283 .core @metaglass                              Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  398:  op mul *tmp288 122 *tmp283                                   Display.mnd: var length = min(barLength, barLength * current / target);
  399:  op div *tmp289 *tmp288 :drawMaterials:target.1               ...
  400:  op min :drawItem.5:length 122 *tmp289                        ...
  401:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  402:  op add *tmp300 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  403:  draw image 11 *tmp300 @metaglass 16 0 0                      ...
  404:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  405:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  406:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  407:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  408:  op add *tmp302 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  409:  print :drawMaterials:target.1                                Display.mnd: print(text);
  410:  draw print 170 *tmp302 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  411:  print :drawMaterials:target.1                                Display.mnd: print(text);
  412:  draw print 171 *tmp302 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  413:  op sub :drawItem.5:y :drawMaterials:y 15                     Display.mnd: y -= ROW_HEIGHT;
  414:  set :drawMaterials:y :drawItem.5:y                           Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  415:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  416:  jump *label138 lessThanEq :drawMaterials:count 0             ...
        label *label435                                              Display.mnd: if target > 0 then
  417:  set :drawMaterials:target.1 .targetThorium                   Display.mnd: for var item, target in
  418:  jump *label451 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  419:  sensor *tmp283 .core @thorium                                Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  420:  op mul *tmp288 122 *tmp283                                   Display.mnd: var length = min(barLength, barLength * current / target);
  421:  op div *tmp289 *tmp288 :drawMaterials:target.1               ...
  422:  op min :drawItem.5:length 122 *tmp289                        ...
  423:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  424:  op add *tmp300 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  425:  draw image 11 *tmp300 @thorium 16 0 0                        ...
  426:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  427:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  428:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  429:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  430:  op add *tmp302 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  431:  print :drawMaterials:target.1                                Display.mnd: print(text);
  432:  draw print 170 *tmp302 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  433:  print :drawMaterials:target.1                                Display.mnd: print(text);
  434:  draw print 171 *tmp302 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
        label *label451                                              Display.mnd: if target > 0 then
        label *label138                                              Display.mnd: for var item, target in
        label *label134                                              Display.mnd: if count then
        label *label115                                              Display.mnd: elsif nextBlock == @titanium or nextBlock == @ore-titanium then
        label *label55                                               Display.mnd: if nextBlock == null then
  435:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  436:  select *tmp309 lessThan .materialCount 4 40 25               Display.mnd: var y = materialCount < 4 ? HEADER3_Y : HEADER4_Y;
  437:  print "Builder"                                              Display.mnd: print(text);
  438:  draw print 22 *tmp309 @bottomLeft                            Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  439:  print "Builder"                                              Display.mnd: print(text);
  440:  draw print 23 *tmp309 @bottomLeft                            Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  441:  jump *label166 notEqual .transportItem null                  Display.mnd: if transportItem == null then
  442:  op sub *tmp313 *tmp309 15                                    Display.mnd: drawUnit(@poly, 0, in y - ROW_HEIGHT);
  443:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  444:  op sub *tmp330 *tmp309 10                                    Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  445:  draw image 11 *tmp330 @poly 16 0 0                           ...
  446:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  447:  draw rect 22 *tmp313 0 10 0 0                                Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  448:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  449:  draw lineRect 22 *tmp313 122 10 0 0                          Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  450:  op sub *tmp332 *tmp309 8                                     Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  451:  print .transportTarget                                       Display.mnd: print(text);
  452:  draw print 170 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  453:  print .transportTarget                                       Display.mnd: print(text);
  454:  draw print 171 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  455:  jump *label167 always 0 0                                    Display.mnd: if transportItem == null then
        label *label166                                              ...
  456:  sensor :drawUnit:unitItem @unit @firstItem                   Display.mnd: var unitItem = @unit.@firstItem;
  457:  sensor *tmp339 @unit @totalItems                             Display.mnd: drawUnit(transportItem, @unit.@totalItems * (unitItem == transportItem), in y - ROW_HEIGHT);
  458:  op equal *tmp340 :drawUnit:unitItem .transportItem           ...
  459:  op mul *tmp341 *tmp339 *tmp340                               ...
  460:  op sub *tmp342 *tmp309 15                                    ...
  461:  set :drawUnit.2:item .transportItem                          ...
  462:  set :drawItem.7:target .transportTarget                      Display.mnd: drawItem(in 0, in out y, 1, item, items, transportTarget, transportTarget);
  463:  op mul *tmp347 122 *tmp341                                   Display.mnd: var length = min(barLength, barLength * current / target);
  464:  op div *tmp348 *tmp347 :drawItem.7:target                    ...
  465:  op min :drawItem.7:length 122 *tmp348                        ...
  466:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  467:  op sub *tmp359 *tmp309 10                                    Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  468:  draw image 11 *tmp359 :drawUnit.2:item 16 0 0                ...
  469:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  470:  draw rect 22 *tmp342 :drawItem.7:length 10 0 0               Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  471:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  472:  draw lineRect 22 *tmp342 122 10 0 0                          Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  473:  op sub *tmp361 *tmp309 8                                     Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  474:  print .transportTarget                                       Display.mnd: print(text);
  475:  draw print 170 *tmp361 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  476:  print .transportTarget                                       Display.mnd: print(text);
  477:  draw print 171 *tmp361 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
        label *label167                                              Display.mnd: if transportItem == null then
  478:  set :drawUnits:x 170                                         Display.mnd: var x = 170;
  479:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  480:  set :drawUnitCount:count .polys                              Display.mnd: drawUnitCount(@poly, polys, ref x);
  481:  jump *label188 lessThanEq :drawUnitCount:count 0             Display.mnd: if count > 0 then
  482:  draw image 150 127 @poly 12 0 0                              Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  483:  print "x"                                                    Display.mnd: print(text);
  484:  print :drawUnitCount:count                                   ...
  485:  draw print 170 129 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  486:  op sub :drawUnits:x 170 30                                   Display.mnd: x -= 30;
        label *label188                                              Display.mnd: if count > 0 then
  487:  set :drawUnitCount.1:count .monos                            Display.mnd: drawUnitCount(@mono, monos, ref x);
  488:  jump *label193 lessThanEq :drawUnitCount.1:count 0           Display.mnd: if count > 0 then
  489:  op sub *tmp372 :drawUnits:x 20                               Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  490:  draw image *tmp372 127 @mono 12 0 0                          ...
  491:  print "x"                                                    Display.mnd: print(text);
  492:  print :drawUnitCount.1:count                                 ...
  493:  draw print :drawUnits:x 129 @right                           Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  494:  op sub :drawUnits:x :drawUnits:x 30                          Display.mnd: x -= 30;
        label *label193                                              Display.mnd: if count > 0 then
  495:  set :drawUnitCount.2:count .flares                           Display.mnd: drawUnitCount(@flare, flares, ref x);
  496:  jump *label198 lessThanEq :drawUnitCount.2:count 0           Display.mnd: if count > 0 then
  497:  op sub *tmp375 :drawUnits:x 20                               Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  498:  draw image *tmp375 127 @flare 12 0 0                         ...
  499:  print "x"                                                    Display.mnd: print(text);
  500:  print :drawUnitCount.2:count                                 ...
  501:  draw print :drawUnits:x 129 @right                           Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
        label *label198                                              Display.mnd: if count > 0 then
  502:  drawflush display1                                           Display.mnd: drawflush(display1);
  503:  jump *label19 always 0 0                                     Display.mnd: if page == 0 then
        label *label18                                               ...
  504:  jump *label202 notEqual .page 1                              Display.mnd: elsif page == 1 then
  505:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  506:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  507:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  508:  print "Base map"                                             Display.mnd: print(text);
  509:  draw print 172 172 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  510:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  511:  draw translate 88 88 0 0 0 0                                 Display.mnd: translate(176 / 2, 176 / 2);
  512:  draw scale 5.866666666666666 5.866666666666666 0 0 0 0       Display.mnd: scale(176 / 15 / 2, 176 / 15 / 2);
  513:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  514:  draw image 0 0 @core-shard 6 0 0                             Display.mnd: image(0, 0, @core-shard, 6, 0);
  515:  set :displayBaseMap:cfg "#'+nA######%#"                      Display.mnd: for var cfg in BLOCKS do
  516:  setaddr *tmp378 *label210                                    ...
  517:  jump *label207 always 0 0                                    ...
        multilabel *label210                                         ...
  518:  set :displayBaseMap:cfg "k*/(7######$$"                      ...
  519:  setaddr *tmp378 *label211                                    ...
  520:  jump *label207 always 0 0                                    ...
        multilabel *label211                                         ...
  521:  set :displayBaseMap:cfg "k+/(7######$%"                      ...
  522:  setaddr *tmp378 *label212                                    ...
  523:  jump *label207 always 0 0                                    ...
        multilabel *label212                                         ...
  524:  set :displayBaseMap:cfg "m*.<2######$&"                      ...
  525:  setaddr *tmp378 *label213                                    ...
  526:  jump *label207 always 0 0                                    ...
        multilabel *label213                                         ...
  527:  set :displayBaseMap:cfg "%+-A<######%'"                      ...
  528:  setaddr *tmp378 *label214                                    ...
  529:  jump *label207 always 0 0                                    ...
        multilabel *label214                                         ...
  530:  set :displayBaseMap:cfg "T+,%%######$("                      ...
  531:  setaddr *tmp378 *label215                                    ...
  532:  jump *label207 always 0 0                                    ...
        multilabel *label215                                         ...
  533:  set :displayBaseMap:cfg "w**5#-#####%)"                      ...
  534:  setaddr *tmp378 *label216                                    ...
  535:  jump *label207 always 0 0                                    ...
        multilabel *label216                                         ...
  536:  set :displayBaseMap:cfg "*,###A<###$*"                      ...
  537:  setaddr *tmp378 *label217                                    ...
  538:  jump *label207 always 0 0                                    ...
        multilabel *label217                                         ...
  539:  set :displayBaseMap:cfg "T),%%######$+"                      ...
  540:  setaddr *tmp378 *label218                                    ...
  541:  jump *label207 always 0 0                                    ...
        multilabel *label218                                         ...
  542:  set :displayBaseMap:cfg "W*-'%######$,"                      ...
  543:  setaddr *tmp378 *label219                                    ...
  544:  jump *label207 always 0 0                                    ...
        multilabel *label219                                         ...
  545:  set :displayBaseMap:cfg "®-.}U#U####$-"                      ...
  546:  setaddr *tmp378 *label220                                    ...
  547:  jump *label207 always 0 0                                    ...
        multilabel *label220                                         ...
  548:  set :displayBaseMap:cfg "g)'%)######$."                      ...
  549:  setaddr *tmp378 *label221                                    ...
  550:  jump *label207 always 0 0                                    ...
        multilabel *label221                                         ...
  551:  set :displayBaseMap:cfg "(*###A<###$/"                      ...
  552:  setaddr *tmp378 *label222                                    ...
  553:  jump *label207 always 0 0                                    ...
        multilabel *label222                                         ...
  554:  set :displayBaseMap:cfg "'(_i#####&&0"                      ...
  555:  setaddr *tmp378 *label223                                    ...
  556:  jump *label207 always 0 0                                    ...
        multilabel *label223                                         ...
  557:  set :displayBaseMap:cfg ",)###A<###$1"                      ...
  558:  setaddr *tmp378 *label224                                    ...
  559:  jump *label207 always 0 0                                    ...
        multilabel *label224                                         ...
  560:  set :displayBaseMap:cfg "T,*%%######$2"                      ...
  561:  setaddr *tmp378 *label225                                    ...
  562:  jump *label207 always 0 0                                    ...
        multilabel *label225                                         ...
  563:  set :displayBaseMap:cfg "',+_AA#####%3"                      ...
  564:  setaddr *tmp378 *label226                                    ...
  565:  jump *label207 always 0 0                                    ...
        multilabel *label226                                         ...
  566:  set :displayBaseMap:cfg "z%-AAA##A##%4"                      ...
  567:  setaddr *tmp378 *label227                                    ...
  568:  jump *label207 always 0 0                                    ...
        multilabel *label227                                         ...
  569:  set :displayBaseMap:cfg "W'*'%######$5"                      ...
  570:  setaddr *tmp378 *label228                                    ...
  571:  jump *label207 always 0 0                                    ...
        multilabel *label228                                         ...
  572:  set :displayBaseMap:cfg "W&*'%######$6"                      ...
  573:  setaddr *tmp378 *label229                                    ...
  574:  jump *label207 always 0 0                                    ...
        multilabel *label229                                         ...
  575:  set :displayBaseMap:cfg "o%+FK<A####%7"                      ...
  576:  setaddr *tmp378 *label230                                    ...
  577:  jump *label207 always 0 0                                    ...
        multilabel *label230                                         ...
  578:  set :displayBaseMap:cfg "$(.#U<###&8"                      ...
  579:  setaddr *tmp378 *label231                                    ...
  580:  jump *label207 always 0 0                                    ...
        multilabel *label231                                         ...
  581:  set :displayBaseMap:cfg " '%-#2#####&9"                      ...
  582:  setaddr *tmp378 *label232                                    ...
  583:  jump *label207 always 0 0                                    ...
        multilabel *label232                                         ...
  584:  set :displayBaseMap:cfg "*(###A<###$:"                      ...
  585:  setaddr *tmp378 *label233                                    ...
  586:  jump *label207 always 0 0                                    ...
        multilabel *label233                                         ...
  587:  set :displayBaseMap:cfg "X*''%######$;"                      ...
  588:  setaddr *tmp378 *label234                                    ...
  589:  jump *label207 always 0 0                                    ...
        multilabel *label234                                         ...
  590:  set :displayBaseMap:cfg "*%ë#}####&<"                      ...
  591:  setaddr *tmp378 *label235                                    ...
  592:  jump *label207 always 0 0                                    ...
        multilabel *label235                                         ...
  593:  set :displayBaseMap:cfg "l/,#U#A7###&="                      ...
  594:  setaddr *tmp378 *label236                                    ...
  595:  jump *label207 always 0 0                                    ...
        multilabel *label236                                         ...
  596:  set :displayBaseMap:cfg "x**F#AA7###&>"                      ...
  597:  setaddr *tmp378 *label237                                    ...
  598:  jump *label207 always 0 0                                    ...
        multilabel *label237                                         ...
  599:  set :displayBaseMap:cfg "r**#-#+####$?"                      ...
  600:  setaddr *tmp378 *label238                                    ...
  601:  jump *label207 always 0 0                                    ...
        multilabel *label238                                         ...
  602:  set :displayBaseMap:cfg "**#######%@"                      ...
  603:  setaddr *tmp378 *label239                                    ...
  604:  jump *label207 always 0 0                                    ...
        multilabel *label239                                         ...
  605:  set :displayBaseMap:cfg "%.)A<######%A"                      ...
  606:  setaddr *tmp378 *label240                                    ...
  607:  jump *label207 always 0 0                                    ...
        multilabel *label240                                         ...
  608:  set :displayBaseMap:cfg "T-*%%######$B"                      ...
  609:  setaddr *tmp378 *label241                                    ...
  610:  jump *label207 always 0 0                                    ...
        multilabel *label241                                         ...
  611:  set :displayBaseMap:cfg "T-)%%######$C"                      ...
  612:  setaddr *tmp378 *label242                                    ...
  613:  jump *label207 always 0 0                                    ...
        multilabel *label242                                         ...
  614:  set :displayBaseMap:cfg "--###A<###$D"                      ...
  615:  setaddr *tmp378 *label243                                    ...
  616:  jump *label207 always 0 0                                    ...
        multilabel *label243                                         ...
  617:  set :displayBaseMap:cfg "+(###A<###$E"                      ...
  618:  setaddr *tmp378 *label244                                    ...
  619:  jump *label207 always 0 0                                    ...
        multilabel *label244                                         ...
  620:  set :displayBaseMap:cfg "X+''%######$F"                      ...
  621:  setaddr *tmp378 *label245                                    ...
  622:  jump *label207 always 0 0                                    ...
        multilabel *label245                                         ...
  623:  set :displayBaseMap:cfg ".&#ʭ#ǥƁ#ʭ#(G"                      ...
  624:  setaddr *tmp378 *label246                                    ...
        label *label207                                              ...
  625:  read *tmp465 :displayBaseMap:cfg 0                           Display.mnd: type = lookup(:block, char(cfg, index++) - 35);
  626:  op sub *tmp466 *tmp465 35                                    ...
  627:  lookup block :unpackCfg:type *tmp466                         ...
  628:  read *tmp469 :displayBaseMap:cfg 1                           Display.mnd: x = char(cfg, index++) - 35 - 7;
  629:  op sub :unpackCfg:x *tmp469 42                               ...
  630:  read *tmp473 :displayBaseMap:cfg 2                           Display.mnd: y = char(cfg, index++) - 35 - 7;
  631:  op sub :unpackCfg:y *tmp473 42                               ...
  632:  read *tmp498 :displayBaseMap:cfg 10                          Display.mnd: rotation = char(cfg, index++) - 35;
  633:  op sub :unpackCfg:rotation *tmp498 35                        ...
  634:  read *tmp501 :displayBaseMap:cfg 11                          Display.mnd: size = char(cfg, index++) - 35;
  635:  op sub :unpackCfg:size *tmp501 35                            ...
  636:  read *tmp504 :displayBaseMap:cfg 12                          Display.mnd: ind = char(cfg, index++) - 35;
  637:  op sub :unpackCfg:ind *tmp504 35                             ...
  638:  op or *tmp506 :unpackCfg:x :unpackCfg:y                      Display.mnd: if x | y then
  639:  jump *label305 equal *tmp506 false                           ...
  640:  op shl *tmp508 1 :unpackCfg:ind                              Display.mnd: if blocksBuilt & (1 << index) then
  641:  op and *tmp509 .blocksBuilt *tmp508                          ...
  642:  jump *label303 equal *tmp509 false                           ...
  643:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  644:  jump *label304 always 0 0                                    Display.mnd: if blocksBuilt & (1 << index) then
        label *label303                                              ...
  645:  draw color 128 255 128 128 0 0                               Display.mnd: color(128, 255, 128, 128);
        label *label304                                              Display.mnd: if blocksBuilt & (1 << index) then
  646:  op and *tmp511 :unpackCfg:size 1                             Display.mnd: var offset = 1 - (size & 1);
  647:  op sub :drawBlock:offset 1 *tmp511                           ...
  648:  op mul *tmp513 2 :unpackCfg:x                                Display.mnd: image(2 * x + offset, 2 * y + offset, type, 2 * size, 90 * rotation);
  649:  op add *tmp514 *tmp513 :drawBlock:offset                     ...
  650:  op mul *tmp515 2 :unpackCfg:y                                ...
  651:  op add *tmp516 *tmp515 :drawBlock:offset                     ...
  652:  op mul *tmp517 2 :unpackCfg:size                             ...
  653:  op mul *tmp518 90 :unpackCfg:rotation                        ...
  654:  draw image *tmp514 *tmp516 :unpackCfg:type *tmp517 *tmp518 0 ...
        label *label305                                              Display.mnd: if x | y then
  655:  set :displayBaseMap:i .recentBuildIndex                      Display.mnd: var i = recentBuildIndex;
  656:  jump *label248 lessThan :displayBaseMap:i 0                  Display.mnd: if i >= 0 then
  657:  set .recentBuildIndex -1                                     Display.mnd: recentBuildIndex = -1;
  658:  op mul *tmp915 :displayBaseMap:i 2                           Display.mnd: drawBlock(BLOCKS[i]);
  659:  multijump *label458 *tmp915 0                                ...
        multilabel *label458                                         ...
  660:  set :drawBlock:cfg "#'+nA######%#"                           ...
  661:  jump *label457 always 0 0                                    ...
        multilabel *label459                                         ...
  662:  set :drawBlock:cfg "k*/(7######$$"                           ...
  663:  jump *label457 always 0 0                                    ...
        multilabel *label460                                         ...
  664:  set :drawBlock:cfg "k+/(7######$%"                           ...
  665:  jump *label457 always 0 0                                    ...
        multilabel *label461                                         ...
  666:  set :drawBlock:cfg "m*.<2######$&"                           ...
  667:  jump *label457 always 0 0                                    ...
        multilabel *label462                                         ...
  668:  set :drawBlock:cfg "%+-A<######%'"                           ...
  669:  jump *label457 always 0 0                                    ...
        multilabel *label463                                         ...
  670:  set :drawBlock:cfg "T+,%%######$("                           ...
  671:  jump *label457 always 0 0                                    ...
        multilabel *label464                                         ...
  672:  set :drawBlock:cfg "w**5#-#####%)"                           ...
  673:  jump *label457 always 0 0                                    ...
        multilabel *label465                                         ...
  674:  set :drawBlock:cfg "*,###A<###$*"                           ...
  675:  jump *label457 always 0 0                                    ...
        multilabel *label466                                         ...
  676:  set :drawBlock:cfg "T),%%######$+"                           ...
  677:  jump *label457 always 0 0                                    ...
        multilabel *label467                                         ...
  678:  set :drawBlock:cfg "W*-'%######$,"                           ...
  679:  jump *label457 always 0 0                                    ...
        multilabel *label468                                         ...
  680:  set :drawBlock:cfg "®-.}U#U####$-"                           ...
  681:  jump *label457 always 0 0                                    ...
        multilabel *label469                                         ...
  682:  set :drawBlock:cfg "g)'%)######$."                           ...
  683:  jump *label457 always 0 0                                    ...
        multilabel *label470                                         ...
  684:  set :drawBlock:cfg "(*###A<###$/"                           ...
  685:  jump *label457 always 0 0                                    ...
        multilabel *label471                                         ...
  686:  set :drawBlock:cfg "'(_i#####&&0"                           ...
  687:  jump *label457 always 0 0                                    ...
        multilabel *label472                                         ...
  688:  set :drawBlock:cfg ",)###A<###$1"                           ...
  689:  jump *label457 always 0 0                                    ...
        multilabel *label473                                         ...
  690:  set :drawBlock:cfg "T,*%%######$2"                           ...
  691:  jump *label457 always 0 0                                    ...
        multilabel *label474                                         ...
  692:  set :drawBlock:cfg "',+_AA#####%3"                           ...
  693:  jump *label457 always 0 0                                    ...
        multilabel *label475                                         ...
  694:  set :drawBlock:cfg "z%-AAA##A##%4"                           ...
  695:  jump *label457 always 0 0                                    ...
        multilabel *label476                                         ...
  696:  set :drawBlock:cfg "W'*'%######$5"                           ...
  697:  jump *label457 always 0 0                                    ...
        multilabel *label477                                         ...
  698:  set :drawBlock:cfg "W&*'%######$6"                           ...
  699:  jump *label457 always 0 0                                    ...
        multilabel *label478                                         ...
  700:  set :drawBlock:cfg "o%+FK<A####%7"                           ...
  701:  jump *label457 always 0 0                                    ...
        multilabel *label479                                         ...
  702:  set :drawBlock:cfg "$(.#U<###&8"                           ...
  703:  jump *label457 always 0 0                                    ...
        multilabel *label480                                         ...
  704:  set :drawBlock:cfg " '%-#2#####&9"                           ...
  705:  jump *label457 always 0 0                                    ...
        multilabel *label481                                         ...
  706:  set :drawBlock:cfg "*(###A<###$:"                           ...
  707:  jump *label457 always 0 0                                    ...
        multilabel *label482                                         ...
  708:  set :drawBlock:cfg "X*''%######$;"                           ...
  709:  jump *label457 always 0 0                                    ...
        multilabel *label483                                         ...
  710:  set :drawBlock:cfg "*%ë#}####&<"                           ...
  711:  jump *label457 always 0 0                                    ...
        multilabel *label484                                         ...
  712:  set :drawBlock:cfg "l/,#U#A7###&="                           ...
  713:  jump *label457 always 0 0                                    ...
        multilabel *label485                                         ...
  714:  set :drawBlock:cfg "x**F#AA7###&>"                           ...
  715:  jump *label457 always 0 0                                    ...
        multilabel *label486                                         ...
  716:  set :drawBlock:cfg "r**#-#+####$?"                           ...
  717:  jump *label457 always 0 0                                    ...
        multilabel *label487                                         ...
  718:  set :drawBlock:cfg "**#######%@"                           ...
  719:  jump *label457 always 0 0                                    ...
        multilabel *label488                                         ...
  720:  set :drawBlock:cfg "%.)A<######%A"                           ...
  721:  jump *label457 always 0 0                                    ...
        multilabel *label489                                         ...
  722:  set :drawBlock:cfg "T-*%%######$B"                           ...
  723:  jump *label457 always 0 0                                    ...
        multilabel *label490                                         ...
  724:  set :drawBlock:cfg "T-)%%######$C"                           ...
  725:  jump *label457 always 0 0                                    ...
        multilabel *label491                                         ...
  726:  set :drawBlock:cfg "--###A<###$D"                           ...
  727:  jump *label457 always 0 0                                    ...
        multilabel *label492                                         ...
  728:  set :drawBlock:cfg "+(###A<###$E"                           ...
  729:  jump *label457 always 0 0                                    ...
        multilabel *label493                                         ...
  730:  set :drawBlock:cfg "X+''%######$F"                           ...
  731:  jump *label457 always 0 0                                    ...
        multilabel *label494                                         ...
  732:  set :drawBlock:cfg ".&#ʭ#ǥƁ#ʭ#(G"                           ...
        label *label457                                              ...
  733:  read *tmp465 :drawBlock:cfg 0                                Display.mnd: type = lookup(:block, char(cfg, index++) - 35);
  734:  op sub *tmp466 *tmp465 35                                    ...
  735:  lookup block :unpackCfg:type *tmp466                         ...
  736:  read *tmp469 :drawBlock:cfg 1                                Display.mnd: x = char(cfg, index++) - 35 - 7;
  737:  op sub :unpackCfg:x *tmp469 42                               ...
  738:  read *tmp473 :drawBlock:cfg 2                                Display.mnd: y = char(cfg, index++) - 35 - 7;
  739:  op sub :unpackCfg:y *tmp473 42                               ...
  740:  read *tmp498 :drawBlock:cfg 10                               Display.mnd: rotation = char(cfg, index++) - 35;
  741:  op sub :unpackCfg:rotation *tmp498 35                        ...
  742:  read *tmp501 :drawBlock:cfg 11                               Display.mnd: size = char(cfg, index++) - 35;
  743:  op sub :unpackCfg:size *tmp501 35                            ...
  744:  read *tmp504 :drawBlock:cfg 12                               Display.mnd: ind = char(cfg, index++) - 35;
  745:  op sub :unpackCfg:ind *tmp504 35                             ...
  746:  op or *tmp506 :unpackCfg:x :unpackCfg:y                      Display.mnd: if x | y then
  747:  jump *label312 equal *tmp506 false                           ...
  748:  op shl *tmp508 1 :unpackCfg:ind                              Display.mnd: if blocksBuilt & (1 << index) then
  749:  op and *tmp509 .blocksBuilt *tmp508                          ...
  750:  jump *label310 equal *tmp509 false                           ...
  751:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  752:  jump *label311 always 0 0                                    Display.mnd: if blocksBuilt & (1 << index) then
        label *label310                                              ...
  753:  draw color 128 255 128 128 0 0                               Display.mnd: color(128, 255, 128, 128);
        label *label311                                              Display.mnd: if blocksBuilt & (1 << index) then
  754:  op and *tmp511 :unpackCfg:size 1                             Display.mnd: var offset = 1 - (size & 1);
  755:  op sub :drawBlock:offset 1 *tmp511                           ...
  756:  op mul *tmp513 2 :unpackCfg:x                                Display.mnd: image(2 * x + offset, 2 * y + offset, type, 2 * size, 90 * rotation);
  757:  op add *tmp514 *tmp513 :drawBlock:offset                     ...
  758:  op mul *tmp515 2 :unpackCfg:y                                ...
  759:  op add *tmp516 *tmp515 :drawBlock:offset                     ...
  760:  op mul *tmp517 2 :unpackCfg:size                             ...
  761:  op mul *tmp518 90 :unpackCfg:rotation                        ...
  762:  draw image *tmp514 *tmp516 :unpackCfg:type *tmp517 *tmp518 0 ...
        label *label312                                              Display.mnd: if x | y then
        label *label248                                              Display.mnd: if i >= 0 then
  763:  sensor *tmp383 switch1 @enabled                              Display.mnd: if switch1.enabled then
  764:  jump *label251 equal *tmp383 false                           ...
  765:  drawflush display1                                           Display.mnd: drawflush(display1);
  766:  jump *label209 always 0 0                                    Display.mnd: break;
        label *label251                                              Display.mnd: if switch1.enabled then
  767:  jump *label253 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  768:  drawflush display1                                           Display.mnd: drawflush(display1);
        label *label253                                              Display.mnd: if pageSwitched then
  769:  multijump *tmp378 0 0                                        Display.mnd: for var cfg in BLOCKS do
        multilabel *label246                                         ...
        label *label209                                              ...
  770:  drawflush display1                                           Display.mnd: drawflush(display1);
  771:  jump *label203 always 0 0                                    Display.mnd: elsif page == 1 then
        label *label202                                              ...
  772:  op sub :displayLog:page .page 2                              Display.mnd: displayLog(page - 2);
  773:  set :displayLog:x 11                                         Display.mnd: var x = 3 + 8;
  774:  set :displayLog:y 163                                        Display.mnd: var y = 176 - 5 - 8;
  775:  read :displayLog:logPosition bank1 511                       Display.mnd: var logPosition = bank1[511];
  776:  op sub *tmp389 510 :displayLog:logPosition                   Display.mnd: var pages = max(1, (records - 1) \ 32 + 1);
  777:  op idiv *tmp390 *tmp389 32                                   ...
  778:  op add *tmp391 *tmp390 1                                     ...
  779:  op max :displayLog:pages 1 *tmp391                           ...
  780:  op add .numPages :displayLog:pages 2                         Display.mnd: numPages = pages + 2;
  781:  op mul *tmp394 32 :displayLog:page                           Display.mnd: var start = 511 - 32 * page;
  782:  op sub :displayLog:start 511 *tmp394                         ...
  783:  op sub *tmp396 :displayLog:start 32                          Display.mnd: var stop = max(logPosition, start - 32);
  784:  op max :displayLog:stop :displayLog:logPosition *tmp396      ...
  785:  draw col %[lightgray] 0 0 0 0 0                              Display.mnd: col(%[lightgray]);
  786:  op sub *tmp398 .page 1                                       Display.mnd: print(page + 1, "/");
  787:  print *tmp398                                                ...
  788:  print "/"                                                    ...
  789:  print :displayLog:pages                                      Display.mnd: print(text);
  790:  draw print 172 4 @bottomRight                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  791:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  792:  op sub :displayLog:position :displayLog:start 1              Display.mnd: for var position in stop ... start descending do
  793:  jump *label260 lessThan :displayLog:position :displayLog:sto ...
        label *label300                                              ...
  794:  read :displayLog:record bank1 :displayLog:position           Display.mnd: var record = bank1[position];
  795:  op mod :displayRecord:id :displayLog:record 1000             Display.mnd: var id = record % 1000;
  796:  lookup block *tmp404 :displayRecord:id                       Display.mnd: var icon = id > @blockCount ? lookup(:unit, id - @blockCount) : lookup(:block, id);
  797:  jump *label263 lessThanEq :displayRecord:id @blockCount      ...
  798:  op sub *tmp405 :displayRecord:id @blockCount                 ...
  799:  lookup unit *tmp404 *tmp405                                  ...
        label *label263                                              ...
  800:  op div *tmp408 :displayLog:record 1000                       Display.mnd: var t = floor(record / 1000 / 120);
  801:  op idiv :displayRecord:t *tmp408 120                         ...
  802:  op idiv :displayRecord:m :displayRecord:t 60                 Display.mnd: var m = t \ 60;
  803:  op mod :displayRecord:s :displayRecord:t 60                  Display.mnd: var s = t % 60;
  804:  select *tmp414 lessThan :displayRecord:s 10 "0" ""           Display.mnd: print(m, ":", s < 10 ? "0" : "");
  805:  print :displayRecord:m                                       ...
  806:  print ":"                                                    ...
  807:  print *tmp414                                                ...
  808:  draw image :displayLog:x :displayLog:y *tmp404 14 0 0        Display.mnd: image(x, y, image, 14, 0);
  809:  op add *tmp416 :displayLog:x 44                              Display.mnd: drawText(x + 56 - 12, y + 2, @right, text);
  810:  op add *tmp417 :displayLog:y 2                               ...
  811:  print :displayRecord:s                                       Display.mnd: print(text);
  812:  draw print *tmp416 *tmp417 @right                            Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  813:  op sub :displayLog:y :displayLog:y 15                        Display.mnd: y -= 15;
  814:  jump *label269 greaterThanEq :displayLog:y 10                Display.mnd: if y < 10 then
  815:  op add :displayLog:x :displayLog:x 58                        Display.mnd: x += 58;
  816:  set :displayLog:y 164                                        Display.mnd: y = 176 - 4 - 8;
        label *label269                                              Display.mnd: if y < 10 then
  817:  drawflush display1                                           Display.mnd: drawflush(display1);
  818:  sensor *tmp420 switch1 @enabled                              Display.mnd: if switch1.enabled then break; end;
  819:  jump *label260 notEqual *tmp420 false                        ...
  820:  op sub :displayLog:position :displayLog:position 1           Display.mnd: for var position in stop ... start descending do
  821:  jump *label300 greaterThanEq :displayLog:position :displayLo ...
        label *label260                                              ...
        label *label203                                              Display.mnd: elsif page == 1 then
        label *label19                                               Display.mnd: if page == 0 then
  822:  jump *label273 lessThanEq .megas 0                           Display.mnd: if megas > 0 then
  823:  print "[gold]All done.[]\nNothing more to see here.\nGo home Display.mnd: println("[gold]All done.[]\nNothing more to see here.\nGo home.");
  824:  printflush message1                                          Display.mnd: printflush(message1);
  825:  jump *label274 always 0 0                                    Display.mnd: if megas > 0 then
        label *label273                                              ...
  826:  print "[gold]Building {0}\n================================= Display.mnd: println($"[gold]Building $nextBlock");
  827:  format .nextBlock                                            ...
  828:  format .status1                                              Display.mnd: println(status1);
  829:  format .status2                                              Display.mnd: println($"$status2$item2 ($block2)");
  830:  format .item2                                                ...
  831:  format .block2                                               ...
  832:  format .status3                                              Display.mnd: println(status3);
  833:  printflush message1                                          Display.mnd: printflush(message1);
        label *label274                                              Display.mnd: if megas > 0 then
  834:  sensor .pageSwitched switch1 @enabled                        Display.mnd: pageSwitched = switch1.enabled;
  835:  jump *label13 equal .pageSwitched false                      Display.mnd: if pageSwitched then
  836:  control enabled switch1 false 0 0 0                          Display.mnd: switch1.enabled = false;
  837:  op add *tmp429 .page 1                                       Display.mnd: page = (page + 1) % numPages;
  838:  op mod .page *tmp429 .numPages                               ...
  839:  drawflush null                                               Display.mnd: drawflush(null);
  840:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  841:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  842:  jump *label13 always 0 0                                     Display.mnd: while true do


Performance: parsed in 603 ms, compiled in 477 ms, optimized in 2,662 ms, run in 6 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (1 steps):
The program didn't generate any output.
Execution exception at instruction 0: read *tmp39 processor1 "*signature":
Variable 'processor1' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
