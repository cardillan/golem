  1630 instructions before optimizations.
   145 instructions eliminated by Temp Variables Elimination (2 passes, 8 iterations).
   103 instructions eliminated by Dead Code Elimination (7 iterations).
    10 instructions eliminated by Jump Normalization (2 passes, 7 iterations).
    40 instructions eliminated by Jump Optimization (7 iterations).
    32 instructions eliminated by Single Step Elimination (3 passes, 11 iterations).
     2 instructions eliminated by Expression Optimization (2 passes, 5 iterations).
    19 instructions eliminated by If Expression Optimization (6 iterations).
   614 instructions eliminated by Data Flow Optimization (6 passes, 29 iterations).
     2 instructions modified by Loop Optimization (5 iterations).
     2 loops improved by Loop Optimization.
   203 instructions added by Loop Unrolling (9 iterations).
     2 loops unrolled by Loop Unrolling.
    21 instructions added by Function Inlining (9 iterations).
     2 function calls inlined by Function Inlining.
     1 jump tables inlined by Array Optimization.
     7 instructions eliminated by Jump Straightening (7 iterations).
     6 instructions updated by Jump Threading.
     3 instructions eliminated by Unreachable Code Elimination (2 iterations).
    13 instructions eliminated by Print Merging.
   864 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 214):
    Unroll iteration loop at Display.mnd:235:13                  size   +49, benefit        7.0, efficiency      0.143
    Unroll iteration loop at Display.mnd:253:13                  size  +190, benefit       13.3, efficiency      0.070
  ! Unroll iteration loop at Display.mnd:454:5                   size  +449, benefit      396.9, efficiency      0.884
    Inline function 'drawBlock' defined at Display.mnd:426:1     size   +25, benefit      410.2, efficiency     16.406
    Inline function call at Display.mnd:455:9                    size   +26, benefit      273.4, efficiency     10.517
    Inline function call at Display.mnd:459:13                   size   +26, benefit      136.7, efficiency      5.258
  * Inline read jump table of array 'BLOCKS'                     size    -3, benefit       78.1, efficiency   Infinity (-3 instructions)
    Inline 'BLOCKS' read access at Display.mnd:459:23            size   +61, benefit       78.1, efficiency      1.281

Pass 1: speed optimization selection (cost limit 217):
    Unroll iteration loop at Display.mnd:235:13                  size   +49, benefit        7.0, efficiency      0.143
    Unroll iteration loop at Display.mnd:253:13                  size  +190, benefit       13.3, efficiency      0.070
  * Inline function 'drawBlock' defined at Display.mnd:426:1     size   +25, benefit      410.2, efficiency     16.406 (+20 instructions)
    Inline function call at Display.mnd:455:9                    size   +26, benefit      273.4, efficiency     10.517
    Inline function call at Display.mnd:459:13                   size   +26, benefit      136.7, efficiency      5.258

Pass 1: speed optimization selection (cost limit 197):
  * Unroll iteration loop at Display.mnd:235:13                  size   +49, benefit        7.0, efficiency      0.143 (-2 instructions)
    Unroll iteration loop at Display.mnd:253:13                  size  +190, benefit       13.3, efficiency      0.070

Pass 1: speed optimization selection (cost limit 199):
  * Unroll iteration loop at Display.mnd:253:13                  size  +190, benefit       13.3, efficiency      0.070 (+102 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-70 instructions):
 
    40 set .reconstructorProgress 0
    41 set .factoryProgress .reconstructorProgress
    42 set .unitReset false
-    * set *tmp47 false
    43 jump *label17 always
    44 label *label16
-    * set *tmp47 null
    45 label *label17
    46 op equal *tmp48 .page -1
    47 jump *label18 equal *tmp48 false
 
   131 label *label28
   132 drawflush display1
   133 label *label20
-    * set *tmp49 null
   134 jump *label19 always
   135 label *label18
   136 op equal *tmp78 .page 0
 
   141 jump *label35 equal *tmp82 false
   142 draw color 0 0 32 80
   143 draw rect 0 0 176 176
-    * set *tmp83 null
   144 jump *label36 always
   145 label *label35
   146 draw reset
   147 draw clear 0 0 32
-    * set *tmp83 null
   148 label *label36
   149 draw col %[white]
   150 op div *tmp84 .animation 30
 
   183 set :animate:size *tmp97
   184 draw image :animate:x :animate:y @mega :animate:size 0
   185 drawflush display1
-    * set *tmp102 .animation
   186 op add .animation .animation 1
   187 label *label34
   188 set *tmp81 null
 
   223 jump *label47 equal *tmp105 false
   224 draw image 25 139 .nextBlock 25 0
   225 draw image 55 139 .nextUnit 25 0
-    * set *tmp106 null
   226 jump *label48 always
   227 label *label47
   228 op equal *tmp107 :drawHeader:count 1
 
   244 draw image 40 137 @hydrogen 32 *tmp113
   245 set *tmp108 null
   246 label *label50
-    * set *tmp106 *tmp108
   247 label *label48
   248 set :drawHeader:tt @second
   249 read *tmp114 processor1 "time"
 
   308 op mul *tmp132 7 :drawHeader:len
   309 op sub *tmp133 *tmp131 *tmp132
   310 draw image *tmp133 146 @titanium 12 0
-    * set *tmp126 null
   311 jump *label58 always
   312 label *label57
-    * set *tmp126 null
   313 label *label58
   314 jump *label61 equal .thoriumContainer false
   315 sensor *tmp135 .thoriumContainer @thorium
 
   333 op mul *tmp139 7 :drawHeader:len.1
   334 op sub *tmp140 *tmp138 *tmp139
   335 draw image *tmp140 146 @thorium 12 0
-    * set *tmp134 null
   336 jump *label62 always
   337 label *label61
-    * set *tmp134 null
   338 label *label62
   339 label *label41
   340 set :drawMaterials:col 0
 
   362 set :drawMaterials:unit1 *tmp152
   363 set :drawMaterials:unit3 null
   364 set :drawMaterials:unit2 :drawMaterials:unit3
-    * set *tmp149 :drawMaterials:unit2
   365 jump *label69 always
   366 label *label68
   367 op equal *tmp153 .nextUnit @flare
 
   426 label *label73
   427 set *tmp154 *tmp159
   428 label *label71
-    * set *tmp149 *tmp154
   429 label *label69
   430 set :drawBold.1:x 22
   431 set :drawBold.1:y 105
 
   525 jump *label89 equal *tmp198 false
   526 set :drawItem:col 0
   527 op sub :drawItem:y :drawItem:y 15
-    * set *tmp199 :drawItem:y
   528 jump *label90 always
   529 label *label89
-    * set *tmp199 null
   530 label *label90
   531 label *label83
   532 op notEqual *tmp200 :drawMaterials:unit2 null
 
   602 jump *label99 equal *tmp222 false
   603 set :drawItem.1:col 0
   604 op sub :drawItem.1:y :drawItem.1:y 15
-    * set *tmp223 :drawItem.1:y
   605 jump *label100 always
   606 label *label99
-    * set *tmp223 null
   607 label *label100
   608 label *label93
   609 op notEqual *tmp224 :drawMaterials:unit3 null
 
   681 jump *label109 equal *tmp248 false
   682 set :drawItem.2:col 0
   683 op sub :drawItem.2:y :drawItem.2:y 15
-    * set *tmp249 :drawItem.2:y
   684 jump *label110 always
   685 label *label109
-    * set *tmp249 null
   686 label *label110
   687 label *label103
   688 set *tmp225 null
 
   777 jump *label124 equal *tmp274 false
   778 set :drawItem.3:col 0
   779 op sub :drawItem.3:y :drawItem.3:y 15
-    * set *tmp275 :drawItem.3:y
   780 jump *label125 always
   781 label *label124
-    * set *tmp275 null
   782 label *label125
   783 label *label118
   784 set :drawMaterials:col :drawItem.3:col
   785 set :drawMaterials:y :drawItem.3:y
-    * set *tmp252 null
   786 jump *label117 always
   787 label *label116
-    * set *tmp252 null
   788 label *label117
   789 label *label112
   790 multijump *tmp250 0 0 (m:marker0)
 
   792 label *label113
   793 set *tmp177 null
   794 label *label82
-    * set *tmp142 *tmp177
   795 jump *label67 always
   796 label *label66
   797 op equal *tmp276 .nextBlock @titanium
 
   898 jump *label139 equal *tmp305 false
   899 set :drawItem.4:col 0
   900 op sub :drawItem.4:y :drawItem.4:y 15
-    * set *tmp306 :drawItem.4:y
   901 jump *label140 always
   902 label *label139
-    * set *tmp306 null
   903 label *label140
   904 label *label133
   905 set *tmp279 null
 
  1039 jump *label166 equal *tmp334 false
  1040 set :drawItem.5:col 0
  1041 op sub :drawItem.5:y :drawItem.5:y 15
-    * set *tmp335 :drawItem.5:y
  1042 jump *label167 always
  1043 label *label166
-    * set *tmp335 null
  1044 label *label167
  1045 label *label160
  1046 set :drawMaterials:col :drawItem.5:col
 
  1054 label *label168
  1055 set *tmp337 null
  1056 label *label169
-    * set *tmp312 *tmp337
  1057 jump *label159 always
  1058 label *label158
-    * set *tmp312 null
  1059 label *label159
  1060 label *label149
  1061 multijump *tmp310 0 0 (m:marker1)
 
  1068 label *label147
  1069 set *tmp279 *tmp309
  1070 label *label127
-    * set *tmp142 *tmp279
  1071 label *label67
  1072 label *label65
  1073 draw col %[white]
 
  1179 jump *label187 equal *tmp366 false
  1180 set :drawItem.6:col 0
  1181 op sub :drawItem.6:y :drawItem.6:y 15
-    * set *tmp367 :drawItem.6:y
  1182 jump *label188 always
  1183 label *label187
-    * set *tmp367 null
  1184 label *label188
  1185 label *label181
  1186 set :drawUnit.1:y :drawItem.6:y
  1187 label *label180
-    * set *tmp342 null
  1188 jump *label179 always
  1189 label *label178
  1190 sensor *tmp368 @unit @firstItem
 
  1265 jump *label196 equal *tmp395 false
  1266 set :drawItem.7:col 0
  1267 op sub :drawItem.7:y :drawItem.7:y 15
-    * set *tmp396 :drawItem.7:y
  1268 jump *label197 always
  1269 label *label196
-    * set *tmp396 null
  1270 label *label197
  1271 label *label190
  1272 set :drawUnit.2:y :drawItem.7:y
  1273 label *label189
-    * set *tmp342 null
  1274 label *label179
  1275 label *label170
  1276 set :drawUnits:x 170
 
  1293 label *label203
  1294 label *label202
  1295 op sub :drawUnits:x :drawUnits:x 30
-    * set *tmp398 :drawUnits:x
  1296 jump *label201 always
  1297 label *label200
-    * set *tmp398 null
  1298 label *label201
  1299 label *label199
  1300 set :drawUnitCount.1:type @mono
 
  1315 label *label208
  1316 label *label207
  1317 op sub :drawUnits:x :drawUnits:x 30
-    * set *tmp401 :drawUnits:x
  1318 jump *label206 always
  1319 label *label205
-    * set *tmp401 null
  1320 label *label206
  1321 label *label204
  1322 set :drawUnitCount.2:type @flare
 
  1337 label *label213
  1338 label *label212
  1339 op sub :drawUnits:x :drawUnits:x 30
-    * set *tmp404 :drawUnits:x
  1340 jump *label211 always
  1341 label *label210
-    * set *tmp404 null
  1342 label *label211
  1343 label *label209
  1344 label *label198
 
  1510 setaddr :drawBlock*retaddr *label257 (h:*label257)
  1511 call *label4 *invalid :drawBlock*retval (m:*label257) (h:*label257)
  1512 label *label257
-    * set *tmp410 null
  1513 jump *label256 always
  1514 label *label255
-    * set *tmp410 null
  1515 label *label256
  1516 sensor *tmp413 switch1 @enabled
  1517 jump *label258 equal *tmp413 false
  1518 drawflush display1
  1519 jump *label221 always
-    * set *tmp414 null
  1520 jump *label259 always
  1521 label *label258
-    * set *tmp414 null
  1522 label *label259
  1523 jump *label260 equal .pageSwitched false
  1524 drawflush display1
-    * set *tmp415 null
  1525 jump *label261 always
  1526 label *label260
-    * set *tmp415 null
  1527 label *label261
  1528 label *label220
  1529 multijump *tmp408 0 0 (m:marker2)
 
  1630 jump *label276 equal *tmp448 false
  1631 op add :displayLog:x :displayLog:x 58
  1632 set :displayLog:y 164
-    * set *tmp449 :displayLog:y
  1633 jump *label277 always
  1634 label *label276
-    * set *tmp449 null
  1635 label *label277
  1636 label *label273
  1637 label *label268
 
  1639 sensor *tmp450 switch1 @enabled
  1640 jump *label278 equal *tmp450 false
  1641 jump *label267 always
-    * set *tmp451 null
  1642 jump *label279 always
  1643 label *label278
-    * set *tmp451 null
  1644 label *label279
  1645 label *label266
  1646 op sub :displayLog:position :displayLog:position 1
 
  1651 label *label215
  1652 set *tmp79 *tmp407
  1653 label *label31
-    * set *tmp49 *tmp79
  1654 label *label19
  1655 op greaterThan *tmp452 .megas 0
  1656 jump *label280 equal *tmp452 false
  1657 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  1658 print "\n"
  1659 printflush message1
-    * set *tmp453 null
  1660 jump *label281 always
  1661 label *label280
  1662 print "[gold]Building "
 
  1679 print "\n"
  1680 printflush message1
  1681 label *label282
-    * set *tmp453 null
  1682 label *label281
  1683 sensor *tmp456 switch1 @enabled
  1684 set .pageSwitched *tmp456
 
  1690 drawflush null
  1691 draw reset
  1692 draw clear 0 0 32
-    * set *tmp457 null
  1693 jump *label284 always
  1694 label *label283
-    * set *tmp457 null
  1695 label *label284
  1696 label *label14
  1697 jump *label13 always
 
  1734 op sub *tmp478 *tmp477 74
  1735 set :unpackCfg:ind *tmp478
  1736 sensor *tmp479 :unpackCfg:type @copper
-    * set :unpackCfg:cu *tmp479
  1737 sensor *tmp480 :unpackCfg:type @lead
-    * set :unpackCfg:pb *tmp480
  1738 sensor *tmp481 :unpackCfg:type @graphite
-    * set :unpackCfg:gr *tmp481
  1739 sensor *tmp482 :unpackCfg:type @silicon
-    * set :unpackCfg:si *tmp482
  1740 sensor *tmp483 :unpackCfg:type @titanium
-    * set :unpackCfg:ti *tmp483
  1741 sensor *tmp484 :unpackCfg:type @metaglass
-    * set :unpackCfg:mg *tmp484
  1742 sensor *tmp485 :unpackCfg:type @thorium
-    * set :unpackCfg:th *tmp485
  1743 sensor *tmp486 :unpackCfg:type @size
  1744 set :unpackCfg:size *tmp486
  1745 label *label287
 
  1762 op and *tmp490 .blocksBuilt *tmp489
  1763 jump *label290 equal *tmp490 false
  1764 draw col %[white]
-    * set *tmp491 null
  1765 jump *label291 always
  1766 label *label290
  1767 draw color 128 255 128 128
-    * set *tmp491 null
  1768 label *label291
  1769 op mul *tmp492 2 :drawBlock:x
  1770 op mul *tmp493 2 :drawBlock:y
  1771 op mul *tmp494 2 :drawBlock:size
  1772 op mul *tmp495 90 :drawBlock:rotation
  1773 draw image *tmp492 *tmp493 :drawBlock:type *tmp494 *tmp495
-    * set *tmp488 null
  1774 jump *label289 always
  1775 label *label288
-    * set *tmp488 null
  1776 label *label289
  1777 label *label285
  1778 return :drawBlock*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-19 instructions):
 
   235 set *tmp110 .nextUnit
   236 label *label52
   237 draw image 40 137 *tmp110 32 0
-    * set *tmp108 null
   238 jump *label50 always
   239 label *label49
   240 op div *tmp111 @tick 2
   241 op mod *tmp112 *tmp111 360
   242 op sub *tmp113 360 *tmp112
   243 draw image 40 137 @hydrogen 32 *tmp113
-    * set *tmp108 null
   244 label *label50
   245 label *label48
   246 set :drawHeader:tt @second
 
   375 set :drawMaterials:unit1 *tmp157
   376 set :drawMaterials:unit3 null
   377 set :drawMaterials:unit2 :drawMaterials:unit3
-    * set *tmp154 :drawMaterials:unit2
   378 jump *label71 always
   379 label *label70
   380 op equal *tmp158 .nextUnit @poly
 
   421 label *label75
   422 set *tmp159 *tmp167
   423 label *label73
-    * set *tmp154 *tmp159
   424 label *label71
   425 label *label69
   426 set :drawBold.1:x 22
 
   691 label *label91
   692 set *tmp201 null
   693 label *label92
-    * set *tmp177 *tmp201
   694 jump *label82 always
   695 label *label81
   696 set :drawMaterials:item @lead
 
   785 multijump *tmp250 0 0 (m:marker0)
   786 multilabel *label115 (m:marker0)
   787 label *label113
-    * set *tmp177 null
   788 label *label82
   789 jump *label67 always
   790 label *label66
 
   896 label *label139
   897 label *label140
   898 label *label133
-    * set *tmp279 null
   899 jump *label127 always
   900 label *label126
   901 set *tmp307 .totalTargets
 
  1042 op lessThanEq *tmp336 :drawMaterials:count 0
  1043 jump *label168 equal *tmp336 false
  1044 jump *label150 always
-    * set *tmp337 null
  1045 jump *label169 always
  1046 label *label168
-    * set *tmp337 null
  1047 label *label169
  1048 jump *label159 always
  1049 label *label158
 
  1057 label *label146
  1058 set *tmp309 null
  1059 label *label147
-    * set *tmp279 *tmp309
  1060 label *label127
  1061 label *label67
  1062 label *label65
 
  1336 label *label40
  1337 set *tmp81 null
  1338 label *label33
-    * set *tmp79 *tmp81
  1339 jump *label31 always
  1340 label *label30
  1341 op equal *tmp406 .page 1
 
  1638 label *label262
  1639 set *tmp407 null
  1640 label *label215
-    * set *tmp79 *tmp407
  1641 label *label31
  1642 label *label19
  1643 op greaterThan *tmp452 .megas 0
 
  1721 read *tmp477 :unpackCfg:cfg *tmp476
  1722 op sub *tmp478 *tmp477 74
  1723 set :unpackCfg:ind *tmp478
-    * sensor *tmp479 :unpackCfg:type @copper
-    * sensor *tmp480 :unpackCfg:type @lead
-    * sensor *tmp481 :unpackCfg:type @graphite
-    * sensor *tmp482 :unpackCfg:type @silicon
-    * sensor *tmp483 :unpackCfg:type @titanium
-    * sensor *tmp484 :unpackCfg:type @metaglass
-    * sensor *tmp485 :unpackCfg:type @thorium
  1724 sensor *tmp486 :unpackCfg:type @size
  1725 set :unpackCfg:size *tmp486
  1726 label *label287

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-10 instructions):
 
   185 drawflush display1
   186 op add .animation .animation 1
   187 label *label34
-    * set *tmp81 null
   188 jump *label33 always
   189 label *label32
   190 draw reset
 
   392 op greaterThan *tmp164 .reconstructorProgress 0
   393 op max *tmp165 .factoryProgress *tmp164
   394 set .factoryProgress *tmp165
-    * set *tmp159 .factoryProgress
   395 jump *label73 always
   396 label *label72
   397 op equal *tmp166 .nextUnit @mega
 
   417 label *label74
   418 set *tmp167 null
   419 label *label75
-    * set *tmp159 *tmp167
   420 label *label73
   421 label *label71
   422 label *label69
 
   683 label *label101
   684 set *tmp225 null
   685 label *label102
-    * set *tmp201 *tmp225
   686 jump *label92 always
   687 label *label91
-    * set *tmp201 null
   688 label *label92
   689 jump *label82 always
   690 label *label81
 
  1047 multijump *tmp310 0 0 (m:marker1)
  1048 multilabel *label157 (m:marker1)
  1049 label *label150
-    * set *tmp309 null
  1050 jump *label147 always
  1051 label *label146
-    * set *tmp309 null
  1052 label *label147
  1053 label *label127
  1054 label *label67
 
  1327 label *label198
  1328 drawflush display1
  1329 label *label40
-    * set *tmp81 null
  1330 label *label33
  1331 jump *label31 always
  1332 label *label30
 
  1512 label *label221
  1513 drawflush display1
  1514 label *label216
-    * set *tmp407 null
  1515 jump *label215 always
  1516 label *label214
  1517 op sub *tmp416 .page 2
 
  1627 jump *label265 always
  1628 label *label267
  1629 label *label262
-    * set *tmp407 null
  1630 label *label215
  1631 label *label31
  1632 label *label19

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
   412 op greaterThan *tmp173 :drawMaterials:multiReconstructorProgress 0
   413 op max *tmp174 .reconstructorProgress *tmp173
   414 set .reconstructorProgress *tmp174
-    * set *tmp167 .reconstructorProgress
   415 jump *label75 always
   416 label *label74
-    * set *tmp167 null
   417 label *label75
   418 label *label73
   419 label *label71
 
   676 label *label109
   677 label *label110
   678 label *label103
-    * set *tmp225 null
   679 jump *label102 always
   680 label *label101
-    * set *tmp225 null
   681 label *label102
   682 jump *label92 always
   683 label *label91

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-145 instructions):
 
    22 label *label7
    23 label *label10
    24 ubind @poly
-    * ulocate building core false @copper *tmp41 *tmp42 *tmp43 *tmp40
-    * set .core *tmp40
+   25 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
    26 label *label11
    27 op equal *tmp44 .core null
    28 jump *label10 notEqual *tmp44 false
    29 label *label12
-    * sensor *tmp45 .core @x
-    * set .coreX *tmp45
-    * sensor *tmp46 .core @y
-    * set .coreY *tmp46
+   30 sensor .coreX .core @x
+   31 sensor .coreY .core @y
    32 printflush null
    33 drawflush null
    34 label *label13
 
    60 op div *tmp51 176 .maph
    61 draw scale *tmp50 *tmp51
    62 op div *tmp52 .mapw 176
-    * op ceil *tmp53 *tmp52
-    * set :displayOreMap:imgSize *tmp53
+   63 op ceil :displayOreMap:imgSize *tmp52
    64 op mul *tmp54 7 :displayOreMap:imgSize
    65 draw image .coreX .coreY @core-shard *tmp54 0
    66 set :displayOreMap:index -1
-    * read *tmp19 processor3 ".locations"
-    * set :displayOreMap:count *tmp19
+   67 read :displayOreMap:count processor3 ".locations"
    68 set *tmp55 :displayOreMap:count
    69 set :displayOreMap:i 0
    70 label *label23
    71 jump *label25 greaterThanEq :displayOreMap:i *tmp55
    72 op add :displayOreMap:index :displayOreMap:index 1
-    * set *tmp56 :displayOreMap:index
-    * read *tmp57 bank1 *tmp56
-    * set :displayOreMap:id *tmp57
+   73 read :displayOreMap:id bank1 :displayOreMap:index
    74 op greaterThan *tmp58 :displayOreMap:id 0
    75 jump *label26 equal *tmp58 false
-    * lookup item *tmp60 :displayOreMap:id
-    * set *tmp59 *tmp60
+   76 lookup item *tmp59 :displayOreMap:id
    77 jump *label27 always
    78 label *label26
    79 op sub *tmp61 0 :displayOreMap:id
-    * lookup block *tmp62 *tmp61
-    * set *tmp59 *tmp62
+   80 lookup block *tmp59 *tmp61
    81 label *label27
    82 set :displayOreMap:img *tmp59
    83 op add :displayOreMap:index :displayOreMap:index 1
-    * set *tmp63 :displayOreMap:index
-    * read *tmp64 bank1 *tmp63
+   84 read *tmp64 bank1 :displayOreMap:index
    85 op sqrt *tmp65 *tmp64
-    * op add *tmp66 4 *tmp65
-    * set :displayOreMap:size *tmp66
+   86 op add :displayOreMap:size 4 *tmp65
    87 op add :displayOreMap:index :displayOreMap:index 1
-    * set *tmp67 :displayOreMap:index
-    * read *tmp68 bank1 *tmp67
-    * set :displayOreMap:x *tmp68
+   88 read :displayOreMap:x bank1 :displayOreMap:index
    89 op add :displayOreMap:index :displayOreMap:index 1
-    * set *tmp69 :displayOreMap:index
-    * read *tmp70 bank1 *tmp69
-    * set :displayOreMap:y *tmp70
+   90 read :displayOreMap:y bank1 :displayOreMap:index
    91 op mul *tmp71 :displayOreMap:size :displayOreMap:imgSize
    92 draw image :displayOreMap:x :displayOreMap:y :displayOreMap:img *tmp71 0
    93 label *label24
 
   134 draw col %[white]
   135 op div *tmp84 .animation 30
   136 op min *tmp85 *tmp84 1
-    * op max *tmp86 0 *tmp85
-    * set :animate:ratio *tmp86
+  137 op max :animate:ratio 0 *tmp85
   138 set :lerp:from 40
   139 set :lerp:to 88
   140 set :lerp:ratio :animate:ratio
   141 op sub *tmp88 1 :lerp:ratio
   142 op mul *tmp89 *tmp88 :lerp:from
   143 op mul *tmp90 :lerp:ratio :lerp:to
-    * op add *tmp91 *tmp89 *tmp90
-    * set *tmp87 *tmp91
+  144 op add *tmp87 *tmp89 *tmp90
   145 label *label37
   146 set :animate:x *tmp87
   147 set :lerp.1:from 137
 
   150 op sub *tmp93 1 :lerp.1:ratio
   151 op mul *tmp94 *tmp93 :lerp.1:from
   152 op mul *tmp95 :lerp.1:ratio :lerp.1:to
-    * op add *tmp96 *tmp94 *tmp95
-    * set *tmp92 *tmp96
+  153 op add *tmp92 *tmp94 *tmp95
   154 label *label38
   155 set :animate:y *tmp92
   156 set :lerp.2:from 32
 
   159 op sub *tmp98 1 :lerp.2:ratio
   160 op mul *tmp99 *tmp98 :lerp.2:from
   161 op mul *tmp100 :lerp.2:ratio :lerp.2:to
-    * op add *tmp101 *tmp99 *tmp100
-    * set *tmp97 *tmp101
+  162 op add *tmp97 *tmp99 *tmp100
   163 label *label39
   164 set :animate:size *tmp97
   165 draw image :animate:x :animate:y @mega :animate:size 0
 
   184 draw print :drawPrint.2:x :drawPrint.2:y :drawPrint.2:alignment
   185 label *label44
   186 label *label43
-    * op add *tmp103 :drawBold:x 1
-    * set :drawText.3:x *tmp103
+  187 op add :drawText.3:x :drawBold:x 1
   188 set :drawText.3:y :drawBold:y
   189 set :drawText.3:alignment :drawBold:alignment
   190 print "Goal"
 
   196 label *label45
   197 label *label42
   198 draw col %[white]
-    * op add *tmp104 .nextBlock .nextUnit
-    * set :drawHeader:count *tmp104
+  199 op add :drawHeader:count .nextBlock .nextUnit
   200 op equal *tmp105 :drawHeader:count 2
   201 jump *label47 equal *tmp105 false
   202 draw image 25 139 .nextBlock 25 0
 
   224 set :drawHeader:tt @second
   225 read *tmp114 processor1 "time"
   226 op div *tmp115 *tmp114 120
-    * op floor *tmp116 *tmp115
-    * set :drawHeader:t *tmp116
-    * op idiv *tmp117 :drawHeader:t 60
-    * set :drawHeader:m *tmp117
-    * op mod *tmp118 :drawHeader:t 60
-    * set :drawHeader:s *tmp118
+  227 op floor :drawHeader:t *tmp115
+  228 op idiv :drawHeader:m :drawHeader:t 60
+  229 op mod :drawHeader:s :drawHeader:t 60
   230 op lessThan *tmp119 :drawHeader:s 10
   231 jump *label53 equal *tmp119 false
   232 set *tmp120 "0"
 
   240 print :drawHeader:s
   241 op mul *tmp121 10 :drawHeader:t
   242 op div *tmp122 *tmp121 :drawHeader:tt
-    * op round *tmp123 *tmp122
-    * set :drawHeader:ratio *tmp123
+  243 op round :drawHeader:ratio *tmp122
   244 op idiv *tmp124 :drawHeader:ratio 10
   245 op mod *tmp125 :drawHeader:ratio 10
   246 print " (x"
 
   259 label *label55
   260 jump *label57 equal .titaniumDrill false
   261 sensor *tmp127 .titaniumDrill @titanium
-    * op max *tmp128 .titaniumDrillCount *tmp127
-    * set :drawHeader:count *tmp128
+  262 op max :drawHeader:count .titaniumDrillCount *tmp127
   263 set :drawHeader:x 170
   264 op log10 *tmp129 :drawHeader:count
-    * op floor *tmp130 *tmp129
-    * set :drawHeader:len *tmp130
+  265 op floor :drawHeader:len *tmp129
   266 set :drawText.5:x :drawHeader:x
   267 set :drawText.5:y 155
   268 set :drawText.5:alignment @topRight
 
   282 label *label57
   283 label *label58
   284 jump *label61 equal .thoriumContainer false
-    * sensor *tmp135 .thoriumContainer @thorium
-    * set :drawHeader:count *tmp135
+  285 sensor :drawHeader:count .thoriumContainer @thorium
   286 set :drawHeader:x.1 120
   287 op log10 *tmp136 :drawHeader:count
-    * op floor *tmp137 *tmp136
-    * set :drawHeader:len.1 *tmp137
+  288 op floor :drawHeader:len.1 *tmp136
   289 set :drawText.6:x :drawHeader:x.1
   290 set :drawText.6:y 155
   291 set :drawText.6:alignment @topRight
 
   310 op equal *tmp141 .nextBlock null
   311 jump *label66 equal *tmp141 false
   312 sensor *tmp143 A¾BHMW-air-factory13 @progress
-    * op max *tmp144 .factoryProgress *tmp143
-    * set .factoryProgress *tmp144
+  313 op max .factoryProgress .factoryProgress *tmp143
   314 sensor *tmp145 AÀHBJa-additive-reconstructor23 @progress
-    * op max *tmp146 .reconstructorProgress *tmp145
-    * set .reconstructorProgress *tmp146
-    * sensor *tmp147 AÁPBJf-multiplicative-reconstructor28 @progress
-    * set :drawMaterials:multiReconstructorProgress *tmp147
+  315 op max .reconstructorProgress .reconstructorProgress *tmp145
+  316 sensor :drawMaterials:multiReconstructorProgress AÁPBJf-multiplicative-reconstructor28 @progress
   317 op equal *tmp148 .nextUnit @mono
   318 jump *label68 equal *tmp148 false
   319 set :drawMaterials:targetFactoryLead 15
   320 set :drawMaterials:targetFactorySilicon 30
   321 set .materialCount 2
-    * set *tmp150 .monos
-    * set :drawMaterials:unitCount1 *tmp150
-    * set *tmp151 .monoTarget
-    * set :drawMaterials:unitTotal1 *tmp151
-    * set *tmp152 .nextUnit
-    * set :drawMaterials:unit1 *tmp152
+  322 set :drawMaterials:unitCount1 .monos
+  323 set :drawMaterials:unitTotal1 .monoTarget
+  324 set :drawMaterials:unit1 .nextUnit
   325 set :drawMaterials:unit3 null
   326 set :drawMaterials:unit2 :drawMaterials:unit3
   327 jump *label69 always
 
   331 set :drawMaterials:targetFactoryLead 0
   332 set :drawMaterials:targetFactorySilicon 15
   333 set .materialCount 1
-    * set *tmp155 .flares
-    * set :drawMaterials:unitCount1 *tmp155
-    * set *tmp156 .flareTarget
-    * set :drawMaterials:unitTotal1 *tmp156
-    * set *tmp157 .nextUnit
-    * set :drawMaterials:unit1 *tmp157
+  334 set :drawMaterials:unitCount1 .flares
+  335 set :drawMaterials:unitTotal1 .flareTarget
+  336 set :drawMaterials:unit1 .nextUnit
   337 set :drawMaterials:unit3 null
   338 set :drawMaterials:unit2 :drawMaterials:unit3
   339 jump *label71 always
   340 label *label70
   341 op equal *tmp158 .nextUnit @poly
   342 jump *label72 equal *tmp158 false
-    * op floor *tmp160 .factoryProgress
-    * set :drawMaterials:unitCount1 *tmp160
-    * set *tmp161 .polys
-    * set :drawMaterials:unitCount2 *tmp161
+  343 op floor :drawMaterials:unitCount1 .factoryProgress
+  344 set :drawMaterials:unitCount2 .polys
   345 set :drawMaterials:unitTotal1 1
-    * set *tmp162 .polyTarget
-    * set :drawMaterials:unitTotal2 *tmp162
+  346 set :drawMaterials:unitTotal2 .polyTarget
   347 set :drawMaterials:unit1 @mono
-    * set *tmp163 .nextUnit
-    * set :drawMaterials:unit2 *tmp163
+  348 set :drawMaterials:unit2 .nextUnit
   349 set :drawMaterials:unit3 null
   350 op greaterThan *tmp164 .reconstructorProgress 0
-    * op max *tmp165 .factoryProgress *tmp164
-    * set .factoryProgress *tmp165
+  351 op max .factoryProgress .factoryProgress *tmp164
   352 jump *label73 always
   353 label *label72
   354 op equal *tmp166 .nextUnit @mega
   355 jump *label74 equal *tmp166 false
-    * op floor *tmp168 .factoryProgress
-    * set :drawMaterials:unitCount1 *tmp168
-    * op floor *tmp169 .reconstructorProgress
-    * set :drawMaterials:unitCount2 *tmp169
+  356 op floor :drawMaterials:unitCount1 .factoryProgress
+  357 op floor :drawMaterials:unitCount2 .reconstructorProgress
   358 set :drawMaterials:unitTotal1 1
   359 set :drawMaterials:unitTotal2 1
   360 set :drawMaterials:unit1 @mono
   361 set :drawMaterials:unit2 @poly
-    * set *tmp170 .nextUnit
-    * set :drawMaterials:unit3 *tmp170
+  362 set :drawMaterials:unit3 .nextUnit
   363 op greaterThan *tmp171 .reconstructorProgress 0
-    * op max *tmp172 .factoryProgress *tmp171
-    * set .factoryProgress *tmp172
+  364 op max .factoryProgress .factoryProgress *tmp171
   365 op greaterThan *tmp173 :drawMaterials:multiReconstructorProgress 0
-    * op max *tmp174 .reconstructorProgress *tmp173
-    * set .reconstructorProgress *tmp174
+  366 op max .reconstructorProgress .reconstructorProgress *tmp173
   367 jump *label75 always
   368 label *label74
   369 label *label75
 
   383 draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
   384 label *label78
   385 label *label77
-    * op add *tmp175 :drawBold.1:x 1
-    * set :drawText.8:x *tmp175
+  386 op add :drawText.8:x :drawBold.1:x 1
   387 set :drawText.8:y :drawBold.1:y
   388 set :drawText.8:alignment :drawBold.1:alignment
   389 print "Unit factories"
 
   404 set :drawItem:target 1
   405 op mul *tmp178 :drawItem:columns 176
   406 op div *tmp179 *tmp178 2
-    * op sub *tmp180 210 *tmp179
-    * set :drawItem:barLength *tmp180
-    * op add *tmp181 48 :drawItem:barLength
-    * set :drawItem:textEnd *tmp181
+  407 op sub :drawItem:barLength 210 *tmp179
+  408 op add :drawItem:textEnd 48 :drawItem:barLength
   409 op mul *tmp182 :drawItem:barLength :drawItem:current
   410 op div *tmp183 *tmp182 :drawItem:target
-    * op min *tmp184 :drawItem:barLength *tmp183
-    * set :drawItem:length *tmp184
+  411 op min :drawItem:length :drawItem:barLength *tmp183
   412 op mul *tmp185 :drawItem:col 176
   413 op div *tmp186 *tmp185 2
-    * op add *tmp187 11 *tmp186
-    * set :drawItem:iconX *tmp187
+  414 op add :drawItem:iconX 11 *tmp186
   415 op mul *tmp188 :drawItem:col 176
   416 op div *tmp189 *tmp188 2
-    * op add *tmp190 22 *tmp189
-    * set :drawItem:barX *tmp190
+  417 op add :drawItem:barX 22 *tmp189
   418 op mul *tmp191 :drawItem:col 176
   419 op div *tmp192 *tmp191 2
-    * op add *tmp193 :drawItem:textEnd *tmp192
-    * set :drawItem:textX *tmp193
+  420 op add :drawItem:textX :drawItem:textEnd *tmp192
   421 draw col %[white]
   422 op add *tmp194 :drawItem:y 5
   423 draw image :drawItem:iconX *tmp194 :drawItem:item 16 0
 
   442 draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
   443 label *label86
   444 label *label85
-    * op add *tmp197 :drawBold.2:x 1
-    * set :drawText.10:x *tmp197
+  445 op add :drawText.10:x :drawBold.2:x 1
   446 set :drawText.10:y :drawBold.2:y
   447 set :drawText.10:alignment :drawBold.2:alignment
   448 print :drawMaterials:unitCount1
 
   474 set :drawItem.1:target 1
   475 op mul *tmp202 :drawItem.1:columns 176
   476 op div *tmp203 *tmp202 2
-    * op sub *tmp204 210 *tmp203
-    * set :drawItem.1:barLength *tmp204
-    * op add *tmp205 48 :drawItem.1:barLength
-    * set :drawItem.1:textEnd *tmp205
+  477 op sub :drawItem.1:barLength 210 *tmp203
+  478 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
   479 op mul *tmp206 :drawItem.1:barLength :drawItem.1:current
   480 op div *tmp207 *tmp206 :drawItem.1:target
-    * op min *tmp208 :drawItem.1:barLength *tmp207
-    * set :drawItem.1:length *tmp208
+  481 op min :drawItem.1:length :drawItem.1:barLength *tmp207
   482 op mul *tmp209 :drawItem.1:col 176
   483 op div *tmp210 *tmp209 2
-    * op add *tmp211 11 *tmp210
-    * set :drawItem.1:iconX *tmp211
+  484 op add :drawItem.1:iconX 11 *tmp210
   485 op mul *tmp212 :drawItem.1:col 176
   486 op div *tmp213 *tmp212 2
-    * op add *tmp214 22 *tmp213
-    * set :drawItem.1:barX *tmp214
+  487 op add :drawItem.1:barX 22 *tmp213
   488 op mul *tmp215 :drawItem.1:col 176
   489 op div *tmp216 *tmp215 2
-    * op add *tmp217 :drawItem.1:textEnd *tmp216
-    * set :drawItem.1:textX *tmp217
+  490 op add :drawItem.1:textX :drawItem.1:textEnd *tmp216
   491 draw col %[white]
   492 op add *tmp218 :drawItem.1:y 5
   493 draw image :drawItem.1:iconX *tmp218 :drawItem.1:item 16 0
 
   512 draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
   513 label *label96
   514 label *label95
-    * op add *tmp221 :drawBold.3:x 1
-    * set :drawText.12:x *tmp221
+  515 op add :drawText.12:x :drawBold.3:x 1
   516 set :drawText.12:y :drawBold.3:y
   517 set :drawText.12:alignment :drawBold.3:alignment
   518 print :drawMaterials:unitCount2
 
   544 set :drawItem.2:target 1
   545 op mul *tmp226 :drawItem.2:columns 176
   546 op div *tmp227 *tmp226 2
-    * op sub *tmp228 210 *tmp227
-    * set :drawItem.2:barLength *tmp228
-    * op add *tmp229 48 :drawItem.2:barLength
-    * set :drawItem.2:textEnd *tmp229
+  547 op sub :drawItem.2:barLength 210 *tmp227
+  548 op add :drawItem.2:textEnd 48 :drawItem.2:barLength
   549 op mul *tmp230 :drawItem.2:barLength :drawItem.2:current
   550 op div *tmp231 *tmp230 :drawItem.2:target
-    * op min *tmp232 :drawItem.2:barLength *tmp231
-    * set :drawItem.2:length *tmp232
+  551 op min :drawItem.2:length :drawItem.2:barLength *tmp231
   552 op mul *tmp233 :drawItem.2:col 176
   553 op div *tmp234 *tmp233 2
-    * op add *tmp235 11 *tmp234
-    * set :drawItem.2:iconX *tmp235
+  554 op add :drawItem.2:iconX 11 *tmp234
   555 op mul *tmp236 :drawItem.2:col 176
   556 op div *tmp237 *tmp236 2
-    * op add *tmp238 22 *tmp237
-    * set :drawItem.2:barX *tmp238
+  557 op add :drawItem.2:barX 22 *tmp237
   558 op mul *tmp239 :drawItem.2:col 176
   559 op div *tmp240 *tmp239 2
-    * op add *tmp241 :drawItem.2:textEnd *tmp240
-    * set :drawItem.2:textX *tmp241
+  560 op add :drawItem.2:textX :drawItem.2:textEnd *tmp240
   561 draw col %[white]
   562 op add *tmp242 :drawItem.2:y 5
   563 draw image :drawItem.2:iconX *tmp242 :drawItem.2:item 16 0
 
   575 set :drawText.13:alignment :drawBold.4:alignment
   576 print .megas
   577 print "/"
-    * set *tmp245 .megaTarget
-    * print *tmp245
+  578 print .megaTarget
   579 set :drawPrint.13:x :drawText.13:x
   580 set :drawPrint.13:y :drawText.13:y
   581 set :drawPrint.13:alignment :drawText.13:alignment
   582 draw print :drawPrint.13:x :drawPrint.13:y :drawPrint.13:alignment
   583 label *label106
   584 label *label105
-    * op add *tmp246 :drawBold.4:x 1
-    * set :drawText.14:x *tmp246
+  585 op add :drawText.14:x :drawBold.4:x 1
   586 set :drawText.14:y :drawBold.4:y
   587 set :drawText.14:alignment :drawBold.4:alignment
   588 print .megas
   589 print "/"
-    * set *tmp247 .megaTarget
-    * print *tmp247
+  590 print .megaTarget
   591 set :drawPrint.14:x :drawText.14:x
   592 set :drawPrint.14:y :drawText.14:y
   593 set :drawPrint.14:alignment :drawText.14:alignment
 
   632 set :drawItem.3:target :drawMaterials:target
   633 op mul *tmp254 :drawItem.3:columns 176
   634 op div *tmp255 *tmp254 2
-    * op sub *tmp256 210 *tmp255
-    * set :drawItem.3:barLength *tmp256
-    * op add *tmp257 48 :drawItem.3:barLength
-    * set :drawItem.3:textEnd *tmp257
+  635 op sub :drawItem.3:barLength 210 *tmp255
+  636 op add :drawItem.3:textEnd 48 :drawItem.3:barLength
   637 op mul *tmp258 :drawItem.3:barLength :drawItem.3:current
   638 op div *tmp259 *tmp258 :drawItem.3:target
-    * op min *tmp260 :drawItem.3:barLength *tmp259
-    * set :drawItem.3:length *tmp260
+  639 op min :drawItem.3:length :drawItem.3:barLength *tmp259
   640 op mul *tmp261 :drawItem.3:col 176
   641 op div *tmp262 *tmp261 2
-    * op add *tmp263 11 *tmp262
-    * set :drawItem.3:iconX *tmp263
+  642 op add :drawItem.3:iconX 11 *tmp262
   643 op mul *tmp264 :drawItem.3:col 176
   644 op div *tmp265 *tmp264 2
-    * op add *tmp266 22 *tmp265
-    * set :drawItem.3:barX *tmp266
+  645 op add :drawItem.3:barX 22 *tmp265
   646 op mul *tmp267 :drawItem.3:col 176
   647 op div *tmp268 *tmp267 2
-    * op add *tmp269 :drawItem.3:textEnd *tmp268
-    * set :drawItem.3:textX *tmp269
+  648 op add :drawItem.3:textX :drawItem.3:textEnd *tmp268
   649 draw col %[white]
   650 op add *tmp270 :drawItem.3:y 5
   651 draw image :drawItem.3:iconX *tmp270 :drawItem.3:item 16 0
 
   668 draw print :drawPrint.15:x :drawPrint.15:y :drawPrint.15:alignment
   669 label *label121
   670 label *label120
-    * op add *tmp273 :drawBold.5:x 1
-    * set :drawText.16:x *tmp273
+  671 op add :drawText.16:x :drawBold.5:x 1
   672 set :drawText.16:y :drawBold.5:y
   673 set :drawText.16:alignment :drawBold.5:alignment
   674 print :drawMaterials:target
 
   718 draw print :drawPrint.17:x :drawPrint.17:y :drawPrint.17:alignment
   719 label *label130
   720 label *label129
-    * op add *tmp281 :drawBold.6:x 1
-    * set :drawText.18:x *tmp281
+  721 op add :drawText.18:x :drawBold.6:x 1
   722 set :drawText.18:y :drawBold.6:y
   723 set :drawText.18:alignment :drawBold.6:alignment
   724 read *tmp282 processor3 ".mapAction"
 
   734 set :drawItem.4:y 90
   735 set :drawItem.4:columns 1
   736 set :drawItem.4:item @titanium
-    * read *tmp15 processor3 ".mapProgress"
-    * set :drawItem.4:current *tmp15
-    * read *tmp16 processor3 ".mapTotal"
-    * set :drawItem.4:target *tmp16
+  737 read :drawItem.4:current processor3 ".mapProgress"
+  738 read :drawItem.4:target processor3 ".mapTotal"
   739 op mul *tmp283 :drawItem.4:columns 176
   740 op div *tmp284 *tmp283 2
-    * op sub *tmp285 210 *tmp284
-    * set :drawItem.4:barLength *tmp285
-    * op add *tmp286 48 :drawItem.4:barLength
-    * set :drawItem.4:textEnd *tmp286
+  741 op sub :drawItem.4:barLength 210 *tmp284
+  742 op add :drawItem.4:textEnd 48 :drawItem.4:barLength
   743 op mul *tmp287 :drawItem.4:barLength :drawItem.4:current
   744 op div *tmp288 *tmp287 :drawItem.4:target
-    * op min *tmp289 :drawItem.4:barLength *tmp288
-    * set :drawItem.4:length *tmp289
+  745 op min :drawItem.4:length :drawItem.4:barLength *tmp288
   746 op mul *tmp290 :drawItem.4:col 176
   747 op div *tmp291 *tmp290 2
-    * op add *tmp292 11 *tmp291
-    * set :drawItem.4:iconX *tmp292
+  748 op add :drawItem.4:iconX 11 *tmp291
   749 op mul *tmp293 :drawItem.4:col 176
   750 op div *tmp294 *tmp293 2
-    * op add *tmp295 22 *tmp294
-    * set :drawItem.4:barX *tmp295
+  751 op add :drawItem.4:barX 22 *tmp294
   752 op mul *tmp296 :drawItem.4:col 176
   753 op div *tmp297 *tmp296 2
-    * op add *tmp298 :drawItem.4:textEnd *tmp297
-    * set :drawItem.4:textX *tmp298
+  754 op add :drawItem.4:textX :drawItem.4:textEnd *tmp297
   755 draw col %[white]
   756 op add *tmp299 :drawItem.4:y 5
   757 draw image :drawItem.4:iconX *tmp299 :drawItem.4:item 16 0
 
   776 draw print :drawPrint.19:x :drawPrint.19:y :drawPrint.19:alignment
   777 label *label136
   778 label *label135
-    * op add *tmp303 :drawBold.7:x 1
-    * set :drawText.20:x *tmp303
+  779 op add :drawText.20:x :drawBold.7:x 1
   780 set :drawText.20:y :drawBold.7:y
   781 set :drawText.20:alignment :drawBold.7:alignment
   782 print "x"
 
   800 label *label133
   801 jump *label127 always
   802 label *label126
-    * set *tmp307 .totalTargets
-    * set .materialCount *tmp307
+  803 set .materialCount .totalTargets
   804 set :drawMaterials:count .materialCount
   805 set :drawBold.8:x 22
   806 set :drawBold.8:y 105
 
   815 draw print :drawPrint.21:x :drawPrint.21:y :drawPrint.21:alignment
   816 label *label143
   817 label *label142
-    * op add *tmp308 :drawBold.8:x 1
-    * set :drawText.22:x *tmp308
+  818 op add :drawText.22:x :drawBold.8:x 1
   819 set :drawText.22:y :drawBold.8:y
   820 set :drawText.22:alignment :drawBold.8:alignment
   821 print "Materials"
 
   873 set :drawItem.5:target :drawMaterials:target.1
   874 op mul *tmp314 :drawItem.5:columns 176
   875 op div *tmp315 *tmp314 2
-    * op sub *tmp316 210 *tmp315
-    * set :drawItem.5:barLength *tmp316
-    * op add *tmp317 48 :drawItem.5:barLength
-    * set :drawItem.5:textEnd *tmp317
+  876 op sub :drawItem.5:barLength 210 *tmp315
+  877 op add :drawItem.5:textEnd 48 :drawItem.5:barLength
   878 op mul *tmp318 :drawItem.5:barLength :drawItem.5:current
   879 op div *tmp319 *tmp318 :drawItem.5:target
-    * op min *tmp320 :drawItem.5:barLength *tmp319
-    * set :drawItem.5:length *tmp320
+  880 op min :drawItem.5:length :drawItem.5:barLength *tmp319
   881 op mul *tmp321 :drawItem.5:col 176
   882 op div *tmp322 *tmp321 2
-    * op add *tmp323 11 *tmp322
-    * set :drawItem.5:iconX *tmp323
+  883 op add :drawItem.5:iconX 11 *tmp322
   884 op mul *tmp324 :drawItem.5:col 176
   885 op div *tmp325 *tmp324 2
-    * op add *tmp326 22 *tmp325
-    * set :drawItem.5:barX *tmp326
+  886 op add :drawItem.5:barX 22 *tmp325
   887 op mul *tmp327 :drawItem.5:col 176
   888 op div *tmp328 *tmp327 2
-    * op add *tmp329 :drawItem.5:textEnd *tmp328
-    * set :drawItem.5:textX *tmp329
+  889 op add :drawItem.5:textX :drawItem.5:textEnd *tmp328
   890 draw col %[white]
   891 op add *tmp330 :drawItem.5:y 5
   892 draw image :drawItem.5:iconX *tmp330 :drawItem.5:item 16 0
 
   909 draw print :drawPrint.23:x :drawPrint.23:y :drawPrint.23:alignment
   910 label *label163
   911 label *label162
-    * op add *tmp333 :drawBold.9:x 1
-    * set :drawText.24:x *tmp333
+  912 op add :drawText.24:x :drawBold.9:x 1
   913 set :drawText.24:y :drawBold.9:y
   914 set :drawText.24:alignment :drawBold.9:alignment
   915 print :drawMaterials:target.1
 
   973 draw print :drawPrint.25:x :drawPrint.25:y :drawPrint.25:alignment
   974 label *label175
   975 label *label174
-    * op add *tmp340 :drawBold.10:x 1
-    * set :drawText.26:x *tmp340
+  976 op add :drawText.26:x :drawBold.10:x 1
   977 set :drawText.26:y :drawBold.10:y
   978 set :drawText.26:alignment :drawBold.10:alignment
   979 print "Builder"
 
   998 set :drawItem.6:target .transportTarget
   999 op mul *tmp344 :drawItem.6:columns 176
  1000 op div *tmp345 *tmp344 2
-    * op sub *tmp346 210 *tmp345
-    * set :drawItem.6:barLength *tmp346
-    * op add *tmp347 48 :drawItem.6:barLength
-    * set :drawItem.6:textEnd *tmp347
+ 1001 op sub :drawItem.6:barLength 210 *tmp345
+ 1002 op add :drawItem.6:textEnd 48 :drawItem.6:barLength
  1003 op mul *tmp348 :drawItem.6:barLength :drawItem.6:current
  1004 op div *tmp349 *tmp348 :drawItem.6:target
-    * op min *tmp350 :drawItem.6:barLength *tmp349
-    * set :drawItem.6:length *tmp350
+ 1005 op min :drawItem.6:length :drawItem.6:barLength *tmp349
  1006 op mul *tmp351 :drawItem.6:col 176
  1007 op div *tmp352 *tmp351 2
-    * op add *tmp353 11 *tmp352
-    * set :drawItem.6:iconX *tmp353
+ 1008 op add :drawItem.6:iconX 11 *tmp352
  1009 op mul *tmp354 :drawItem.6:col 176
  1010 op div *tmp355 *tmp354 2
-    * op add *tmp356 22 *tmp355
-    * set :drawItem.6:barX *tmp356
+ 1011 op add :drawItem.6:barX 22 *tmp355
  1012 op mul *tmp357 :drawItem.6:col 176
  1013 op div *tmp358 *tmp357 2
-    * op add *tmp359 :drawItem.6:textEnd *tmp358
-    * set :drawItem.6:textX *tmp359
+ 1014 op add :drawItem.6:textX :drawItem.6:textEnd *tmp358
  1015 draw col %[white]
  1016 op add *tmp360 :drawItem.6:y 5
  1017 draw image :drawItem.6:iconX *tmp360 :drawItem.6:item 16 0
 
  1027 set :drawText.27:x :drawBold.11:x
  1028 set :drawText.27:y :drawBold.11:y
  1029 set :drawText.27:alignment :drawBold.11:alignment
-    * set *tmp363 .transportTarget
-    * print *tmp363
+ 1030 print .transportTarget
  1031 set :drawPrint.27:x :drawText.27:x
  1032 set :drawPrint.27:y :drawText.27:y
  1033 set :drawPrint.27:alignment :drawText.27:alignment
  1034 draw print :drawPrint.27:x :drawPrint.27:y :drawPrint.27:alignment
  1035 label *label184
  1036 label *label183
-    * op add *tmp364 :drawBold.11:x 1
-    * set :drawText.28:x *tmp364
+ 1037 op add :drawText.28:x :drawBold.11:x 1
  1038 set :drawText.28:y :drawBold.11:y
  1039 set :drawText.28:alignment :drawBold.11:alignment
-    * set *tmp365 .transportTarget
-    * print *tmp365
+ 1040 print .transportTarget
  1041 set :drawPrint.28:x :drawText.28:x
  1042 set :drawPrint.28:y :drawText.28:y
  1043 set :drawPrint.28:alignment :drawText.28:alignment
 
  1058 label *label180
  1059 jump *label179 always
  1060 label *label178
-    * sensor *tmp368 @unit @firstItem
-    * set :drawUnit:unitItem *tmp368
+ 1061 sensor :drawUnit:unitItem @unit @firstItem
  1062 sensor *tmp369 @unit @totalItems
  1063 op equal *tmp370 :drawUnit:unitItem .transportItem
  1064 op mul *tmp371 *tmp369 *tmp370
 
  1074 set :drawItem.7:target .transportTarget
  1075 op mul *tmp373 :drawItem.7:columns 176
  1076 op div *tmp374 *tmp373 2
-    * op sub *tmp375 210 *tmp374
-    * set :drawItem.7:barLength *tmp375
-    * op add *tmp376 48 :drawItem.7:barLength
-    * set :drawItem.7:textEnd *tmp376
+ 1077 op sub :drawItem.7:barLength 210 *tmp374
+ 1078 op add :drawItem.7:textEnd 48 :drawItem.7:barLength
  1079 op mul *tmp377 :drawItem.7:barLength :drawItem.7:current
  1080 op div *tmp378 *tmp377 :drawItem.7:target
-    * op min *tmp379 :drawItem.7:barLength *tmp378
-    * set :drawItem.7:length *tmp379
+ 1081 op min :drawItem.7:length :drawItem.7:barLength *tmp378
  1082 op mul *tmp380 :drawItem.7:col 176
  1083 op div *tmp381 *tmp380 2
-    * op add *tmp382 11 *tmp381
-    * set :drawItem.7:iconX *tmp382
+ 1084 op add :drawItem.7:iconX 11 *tmp381
  1085 op mul *tmp383 :drawItem.7:col 176
  1086 op div *tmp384 *tmp383 2
-    * op add *tmp385 22 *tmp384
-    * set :drawItem.7:barX *tmp385
+ 1087 op add :drawItem.7:barX 22 *tmp384
  1088 op mul *tmp386 :drawItem.7:col 176
  1089 op div *tmp387 *tmp386 2
-    * op add *tmp388 :drawItem.7:textEnd *tmp387
-    * set :drawItem.7:textX *tmp388
+ 1090 op add :drawItem.7:textX :drawItem.7:textEnd *tmp387
  1091 draw col %[white]
  1092 op add *tmp389 :drawItem.7:y 5
  1093 draw image :drawItem.7:iconX *tmp389 :drawItem.7:item 16 0
 
  1103 set :drawText.29:x :drawBold.12:x
  1104 set :drawText.29:y :drawBold.12:y
  1105 set :drawText.29:alignment :drawBold.12:alignment
-    * set *tmp392 .transportTarget
-    * print *tmp392
+ 1106 print .transportTarget
  1107 set :drawPrint.29:x :drawText.29:x
  1108 set :drawPrint.29:y :drawText.29:y
  1109 set :drawPrint.29:alignment :drawText.29:alignment
  1110 draw print :drawPrint.29:x :drawPrint.29:y :drawPrint.29:alignment
  1111 label *label193
  1112 label *label192
-    * op add *tmp393 :drawBold.12:x 1
-    * set :drawText.30:x *tmp393
+ 1113 op add :drawText.30:x :drawBold.12:x 1
  1114 set :drawText.30:y :drawBold.12:y
  1115 set :drawText.30:alignment :drawBold.12:alignment
-    * set *tmp394 .transportTarget
-    * print *tmp394
+ 1116 print .transportTarget
  1117 set :drawPrint.30:x :drawText.30:x
  1118 set :drawPrint.30:y :drawText.30:y
  1119 set :drawPrint.30:alignment :drawText.30:alignment
 
  1363 op greaterThanEq *tmp409 :displayBaseMap:i 0
  1364 jump *label255 equal *tmp409 false
  1365 set .recentBuildIndex -1
-    * set *tmp411 :displayBaseMap:i
-    * readarr<regular> *tmp412 .BLOCKS[] *tmp411
-    * set :drawBlock:cfg *tmp412
+ 1366 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
  1367 setaddr :drawBlock*retaddr *label257 (h:*label257)
  1368 call *label4 *invalid :drawBlock*retval (m:*label257) (h:*label257)
  1369 label *label257
 
  1390 label *label216
  1391 jump *label215 always
  1392 label *label214
-    * op sub *tmp416 .page 2
-    * set :displayLog:page *tmp416
+ 1393 op sub :displayLog:page .page 2
  1394 set :displayLog:x 11
  1395 set :displayLog:y 163
-    * read *tmp417 bank1 511
-    * set :displayLog:logPosition *tmp417
-    * op sub *tmp418 511 :displayLog:logPosition
-    * set :displayLog:records *tmp418
+ 1396 read :displayLog:logPosition bank1 511
+ 1397 op sub :displayLog:records 511 :displayLog:logPosition
  1398 op sub *tmp419 :displayLog:records 1
  1399 op idiv *tmp420 *tmp419 32
  1400 op add *tmp421 *tmp420 1
-    * op max *tmp422 1 *tmp421
-    * set :displayLog:pages *tmp422
-    * op add *tmp423 :displayLog:pages 2
-    * set .numPages *tmp423
+ 1401 op max :displayLog:pages 1 *tmp421
+ 1402 op add .numPages :displayLog:pages 2
  1403 op mul *tmp424 32 :displayLog:page
-    * op sub *tmp425 511 *tmp424
-    * set :displayLog:start *tmp425
+ 1404 op sub :displayLog:start 511 *tmp424
  1405 op sub *tmp426 :displayLog:start 32
-    * op max *tmp427 :displayLog:logPosition *tmp426
-    * set :displayLog:stop *tmp427
+ 1406 op max :displayLog:stop :displayLog:logPosition *tmp426
  1407 draw col %[lightgray]
  1408 op add *tmp428 :displayLog:page 1
  1409 print *tmp428
 
  1423 op sub :displayLog:position :displayLog:start 1
  1424 label *label265
  1425 jump *label267 lessThan :displayLog:position *tmp429
-    * set *tmp430 :displayLog:position
-    * read *tmp431 bank1 *tmp430
-    * set :displayLog:record *tmp431
+ 1426 read :displayLog:record bank1 :displayLog:position
  1427 set :displayRecord:record :displayLog:record
-    * op mod *tmp432 :displayRecord:record 1000
-    * set :displayRecord:id *tmp432
+ 1428 op mod :displayRecord:id :displayRecord:record 1000
  1429 op greaterThan *tmp433 :displayRecord:id @blockCount
  1430 jump *label269 equal *tmp433 false
  1431 op sub *tmp435 :displayRecord:id @blockCount
-    * lookup unit *tmp436 *tmp435
-    * set *tmp434 *tmp436
+ 1432 lookup unit *tmp434 *tmp435
  1433 jump *label270 always
  1434 label *label269
-    * lookup block *tmp437 :displayRecord:id
-    * set *tmp434 *tmp437
+ 1435 lookup block *tmp434 :displayRecord:id
  1436 label *label270
  1437 set :displayRecord:icon *tmp434
  1438 op div *tmp438 :displayRecord:record 1000
  1439 op div *tmp439 *tmp438 120
-    * op floor *tmp440 *tmp439
-    * set :displayRecord:t *tmp440
-    * op idiv *tmp441 :displayRecord:t 60
-    * set :displayRecord:m *tmp441
-    * op mod *tmp442 :displayRecord:t 60
-    * set :displayRecord:s *tmp442
+ 1440 op floor :displayRecord:t *tmp439
+ 1441 op idiv :displayRecord:m :displayRecord:t 60
+ 1442 op mod :displayRecord:s :displayRecord:t 60
  1443 op lessThan *tmp443 :displayRecord:s 10
  1444 jump *label271 equal *tmp443 false
  1445 set *tmp444 "0"
 
  1503 print "\n"
  1504 print "==================================[]"
  1505 print "\n"
-    * set *tmp454 .status1
-    * print *tmp454
+ 1506 print .status1
  1507 print "\n"
  1508 print .status2
  1509 print .item2
 
  1512 print .block2
  1513 print ")"
  1514 print "\n"
-    * set *tmp455 .status3
-    * print *tmp455
+ 1515 print .status3
  1516 print "\n"
  1517 printflush message1
  1518 label *label282
  1519 label *label281
-    * sensor *tmp456 switch1 @enabled
-    * set .pageSwitched *tmp456
+ 1520 sensor .pageSwitched switch1 @enabled
  1521 jump *label283 equal .pageSwitched false
  1522 control enabled switch1 false
  1523 op add *tmp459 .page 1
-    * op mod *tmp460 *tmp459 .numPages
-    * set .page *tmp460
+ 1524 op mod .page *tmp459 .numPages
  1525 drawflush null
  1526 draw reset
  1527 draw clear 0 0 32
 
  1544 op add :unpackCfg:index :unpackCfg:index 1
  1545 read *tmp462 :unpackCfg:cfg *tmp461
  1546 op sub *tmp463 *tmp462 74
-    * lookup block *tmp464 *tmp463
-    * set :unpackCfg:type *tmp464
+ 1547 lookup block :unpackCfg:type *tmp463
  1548 set *tmp465 :unpackCfg:index
  1549 op add :unpackCfg:index :unpackCfg:index 1
  1550 read *tmp466 :unpackCfg:cfg *tmp465
  1551 op sub *tmp467 *tmp466 74
-    * op div *tmp468 *tmp467 2
-    * set :unpackCfg:x *tmp468
+ 1552 op div :unpackCfg:x *tmp467 2
  1553 set *tmp469 :unpackCfg:index
  1554 op add :unpackCfg:index :unpackCfg:index 1
  1555 read *tmp470 :unpackCfg:cfg *tmp469
  1556 op sub *tmp471 *tmp470 74
-    * op div *tmp472 *tmp471 2
-    * set :unpackCfg:y *tmp472
+ 1557 op div :unpackCfg:y *tmp471 2
  1558 set *tmp473 :unpackCfg:index
  1559 op add :unpackCfg:index :unpackCfg:index 1
  1560 read *tmp474 :unpackCfg:cfg *tmp473
-    * op sub *tmp475 *tmp474 74
-    * set :unpackCfg:rotation *tmp475
+ 1561 op sub :unpackCfg:rotation *tmp474 74
  1562 set *tmp476 :unpackCfg:index
  1563 op add :unpackCfg:index :unpackCfg:index 1
  1564 read *tmp477 :unpackCfg:cfg *tmp476
-    * op sub *tmp478 *tmp477 74
-    * set :unpackCfg:ind *tmp478
-    * sensor *tmp486 :unpackCfg:type @size
-    * set :unpackCfg:size *tmp486
+ 1565 op sub :unpackCfg:ind *tmp477 74
+ 1566 sensor :unpackCfg:size :unpackCfg:type @size
  1567 label *label287
  1568 set :unpackCfg2:type :unpackCfg:type
  1569 set :unpackCfg2:x :unpackCfg:x

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    32 printflush null
    33 drawflush null
    34 label *label13
-    * jump *label15 equal true false
    35 jump *label16 equal .unitReset false
    36 set .reconstructorProgress 0
    37 set .factoryProgress .reconstructorProgress

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-40 instructions):
 
    24 ubind @poly
    25 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
    26 label *label11
-    * op equal *tmp44 .core null
-    * jump *label10 notEqual *tmp44 false
+   27 jump *label10 equal .core null
    28 label *label12
    29 sensor .coreX .core @x
    30 sensor .coreY .core @y
 
    38 jump *label17 always
    39 label *label16
    40 label *label17
-    * op equal *tmp48 .page -1
-    * jump *label18 equal *tmp48 false
+   41 jump *label18 notEqual .page -1
    42 draw reset
    43 draw clear 0 0 32
    44 draw col %[gold]
 
    68 jump *label25 greaterThanEq :displayOreMap:i *tmp55
    69 op add :displayOreMap:index :displayOreMap:index 1
    70 read :displayOreMap:id bank1 :displayOreMap:index
-    * op greaterThan *tmp58 :displayOreMap:id 0
-    * jump *label26 equal *tmp58 false
+   71 jump *label26 lessThanEq :displayOreMap:id 0
    72 lookup item *tmp59 :displayOreMap:id
    73 jump *label27 always
    74 label *label26
 
   114 label *label20
   115 jump *label19 always
   116 label *label18
-    * op equal *tmp78 .page 0
-    * jump *label30 equal *tmp78 false
-    * op greaterThan *tmp80 .megas 0
-    * jump *label32 equal *tmp80 false
-    * op lessThan *tmp82 .animation 0
-    * jump *label35 equal *tmp82 false
+  117 jump *label30 notEqual .page 0
+  118 jump *label32 lessThanEq .megas 0
+  119 jump *label35 greaterThanEq .animation 0
   120 draw color 0 0 32 80
   121 draw rect 0 0 176 176
   122 jump *label36 always
 
   190 label *label42
   191 draw col %[white]
   192 op add :drawHeader:count .nextBlock .nextUnit
-    * op equal *tmp105 :drawHeader:count 2
-    * jump *label47 equal *tmp105 false
+  193 jump *label47 notEqual :drawHeader:count 2
   194 draw image 25 139 .nextBlock 25 0
   195 draw image 55 139 .nextUnit 25 0
   196 jump *label48 always
   197 label *label47
-    * op equal *tmp107 :drawHeader:count 1
-    * jump *label49 equal *tmp107 false
-    * op notEqual *tmp109 .nextBlock null
-    * jump *label51 equal *tmp109 false
+  198 jump *label49 notEqual :drawHeader:count 1
+  199 jump *label51 equal .nextBlock null
   200 set *tmp110 .nextBlock
   201 jump *label52 always
   202 label *label51
 
   217 op floor :drawHeader:t *tmp115
   218 op idiv :drawHeader:m :drawHeader:t 60
   219 op mod :drawHeader:s :drawHeader:t 60
-    * op lessThan *tmp119 :drawHeader:s 10
-    * jump *label53 equal *tmp119 false
+  220 jump *label53 greaterThanEq :drawHeader:s 10
   221 set *tmp120 "0"
   222 jump *label54 always
   223 label *label53
 
   296 label *label41
   297 set :drawMaterials:col 0
   298 set :drawMaterials:y 90
-    * op equal *tmp141 .nextBlock null
-    * jump *label66 equal *tmp141 false
+  299 jump *label66 notEqual .nextBlock null
   300 sensor *tmp143 A¾BHMW-air-factory13 @progress
   301 op max .factoryProgress .factoryProgress *tmp143
   302 sensor *tmp145 AÀHBJa-additive-reconstructor23 @progress
   303 op max .reconstructorProgress .reconstructorProgress *tmp145
   304 sensor :drawMaterials:multiReconstructorProgress AÁPBJf-multiplicative-reconstructor28 @progress
-    * op equal *tmp148 .nextUnit @mono
-    * jump *label68 equal *tmp148 false
+  305 jump *label68 notEqual .nextUnit @mono
   306 set :drawMaterials:targetFactoryLead 15
   307 set :drawMaterials:targetFactorySilicon 30
   308 set .materialCount 2
 
   313 set :drawMaterials:unit2 :drawMaterials:unit3
   314 jump *label69 always
   315 label *label68
-    * op equal *tmp153 .nextUnit @flare
-    * jump *label70 equal *tmp153 false
+  316 jump *label70 notEqual .nextUnit @flare
   317 set :drawMaterials:targetFactoryLead 0
   318 set :drawMaterials:targetFactorySilicon 15
   319 set .materialCount 1
 
   324 set :drawMaterials:unit2 :drawMaterials:unit3
   325 jump *label71 always
   326 label *label70
-    * op equal *tmp158 .nextUnit @poly
-    * jump *label72 equal *tmp158 false
+  327 jump *label72 notEqual .nextUnit @poly
   328 op floor :drawMaterials:unitCount1 .factoryProgress
   329 set :drawMaterials:unitCount2 .polys
   330 set :drawMaterials:unitTotal1 1
 
   336 op max .factoryProgress .factoryProgress *tmp164
   337 jump *label73 always
   338 label *label72
-    * op equal *tmp166 .nextUnit @mega
-    * jump *label74 equal *tmp166 false
+  339 jump *label74 notEqual .nextUnit @mega
   340 op floor :drawMaterials:unitCount1 .factoryProgress
   341 op floor :drawMaterials:unitCount2 .reconstructorProgress
   342 set :drawMaterials:unitTotal1 1
 
   378 label *label80
   379 label *label79
   380 label *label76
-    * op greaterThan *tmp176 .factoryProgress 0
-    * jump *label81 equal *tmp176 false
+  381 jump *label81 lessThanEq .factoryProgress 0
   382 set :drawItem:col 0
   383 set :drawItem:y 90
   384 set :drawItem:columns 1
 
   439 label *label87
   440 label *label84
   441 op add :drawItem:col :drawItem:col 1
-    * op greaterThanEq *tmp198 :drawItem:col :drawItem:columns
-    * jump *label89 equal *tmp198 false
+  442 jump *label89 lessThan :drawItem:col :drawItem:columns
   443 set :drawItem:col 0
   444 op sub :drawItem:y :drawItem:y 15
   445 jump *label90 always
   446 label *label89
   447 label *label90
   448 label *label83
-    * op notEqual *tmp200 :drawMaterials:unit2 null
-    * jump *label91 equal *tmp200 false
+  449 jump *label91 equal :drawMaterials:unit2 null
   450 set :drawItem.1:col 0
   451 set :drawItem.1:y 75
   452 set :drawItem.1:columns 1
 
   507 label *label97
   508 label *label94
   509 op add :drawItem.1:col :drawItem.1:col 1
-    * op greaterThanEq *tmp222 :drawItem.1:col :drawItem.1:columns
-    * jump *label99 equal *tmp222 false
+  510 jump *label99 lessThan :drawItem.1:col :drawItem.1:columns
   511 set :drawItem.1:col 0
   512 op sub :drawItem.1:y :drawItem.1:y 15
   513 jump *label100 always
   514 label *label99
   515 label *label100
   516 label *label93
-    * op notEqual *tmp224 :drawMaterials:unit3 null
-    * jump *label101 equal *tmp224 false
+  517 jump *label101 equal :drawMaterials:unit3 null
   518 set :drawItem.2:col 0
   519 set :drawItem.2:y 60
   520 set :drawItem.2:columns 1
 
   575 label *label107
   576 label *label104
   577 op add :drawItem.2:col :drawItem.2:col 1
-    * op greaterThanEq *tmp248 :drawItem.2:col :drawItem.2:columns
-    * jump *label109 equal *tmp248 false
+  578 jump *label109 lessThan :drawItem.2:col :drawItem.2:columns
   579 set :drawItem.2:col 0
   580 op sub :drawItem.2:y :drawItem.2:y 15
   581 jump *label110 always
 
   599 set :drawMaterials:target :drawMaterials:targetFactorySilicon
   600 setaddr *tmp250 *label115
   601 label *label111
-    * op greaterThan *tmp251 :drawMaterials:target 0
-    * jump *label116 equal *tmp251 false
+  602 jump *label116 lessThanEq :drawMaterials:target 0
   603 sensor *tmp253 A¾BHMW-air-factory13 :drawMaterials:item
   604 set :drawItem.3:col :drawMaterials:col
   605 set :drawItem.3:y :drawMaterials:y
 
   657 label *label122
   658 label *label119
   659 op add :drawItem.3:col :drawItem.3:col 1
-    * op greaterThanEq *tmp274 :drawItem.3:col :drawItem.3:columns
-    * jump *label124 equal *tmp274 false
+  660 jump *label124 lessThan :drawItem.3:col :drawItem.3:columns
   661 set :drawItem.3:col 0
   662 op sub :drawItem.3:y :drawItem.3:y 15
   663 jump *label125 always
 
   766 label *label137
   767 label *label134
   768 op add :drawItem.4:col :drawItem.4:col 1
-    * op greaterThanEq *tmp305 :drawItem.4:col :drawItem.4:columns
-    * jump *label139 equal *tmp305 false
+  769 jump *label139 lessThan :drawItem.4:col :drawItem.4:columns
   770 set :drawItem.4:col 0
   771 op sub :drawItem.4:y :drawItem.4:y 15
   772 jump *label140 always
 
   837 set :drawMaterials:target.1 .targetThorium
   838 setaddr *tmp310 *label157
   839 label *label148
-    * op greaterThan *tmp311 :drawMaterials:target.1 0
-    * jump *label158 equal *tmp311 false
+  840 jump *label158 lessThanEq :drawMaterials:target.1 0
   841 sensor *tmp313 .core :drawMaterials:item.1
   842 set :drawItem.5:col :drawMaterials:col
   843 set :drawItem.5:y :drawMaterials:y
 
   895 label *label164
   896 label *label161
   897 op add :drawItem.5:col :drawItem.5:col 1
-    * op greaterThanEq *tmp334 :drawItem.5:col :drawItem.5:columns
-    * jump *label166 equal *tmp334 false
+  898 jump *label166 lessThan :drawItem.5:col :drawItem.5:columns
   899 set :drawItem.5:col 0
   900 op sub :drawItem.5:y :drawItem.5:y 15
   901 jump *label167 always
 
   905 set :drawMaterials:col :drawItem.5:col
   906 set :drawMaterials:y :drawItem.5:y
   907 op sub :drawMaterials:count :drawMaterials:count 1
-    * op lessThanEq *tmp336 :drawMaterials:count 0
-    * jump *label168 equal *tmp336 false
+  908 jump *label168 greaterThan :drawMaterials:count 0
   909 jump *label150 always
   910 jump *label169 always
   911 label *label168
 
   924 label *label67
   925 label *label65
   926 draw col %[white]
-    * op lessThan *tmp338 .materialCount 4
-    * jump *label171 equal *tmp338 false
+  927 jump *label171 greaterThanEq .materialCount 4
   928 set *tmp339 40
   929 jump *label172 always
   930 label *label171
 
   955 label *label177
   956 label *label176
   957 label *label173
-    * op equal *tmp341 .transportItem null
-    * jump *label178 equal *tmp341 false
+  958 jump *label178 notEqual .transportItem null
   959 op sub *tmp343 :drawUnit:y 15
   960 set :drawUnit.1:item @poly
   961 set :drawUnit.1:items 0
 
  1016 label *label185
  1017 label *label182
  1018 op add :drawItem.6:col :drawItem.6:col 1
-    * op greaterThanEq *tmp366 :drawItem.6:col :drawItem.6:columns
-    * jump *label187 equal *tmp366 false
+ 1019 jump *label187 lessThan :drawItem.6:col :drawItem.6:columns
  1020 set :drawItem.6:col 0
  1021 op sub :drawItem.6:y :drawItem.6:y 15
  1022 jump *label188 always
 
  1091 label *label194
  1092 label *label191
  1093 op add :drawItem.7:col :drawItem.7:col 1
-    * op greaterThanEq *tmp395 :drawItem.7:col :drawItem.7:columns
-    * jump *label196 equal *tmp395 false
+ 1094 jump *label196 lessThan :drawItem.7:col :drawItem.7:columns
  1095 set :drawItem.7:col 0
  1096 op sub :drawItem.7:y :drawItem.7:y 15
  1097 jump *label197 always
 
  1106 draw col %[white]
  1107 set :drawUnitCount:type @poly
  1108 set :drawUnitCount:count .polys
-    * op greaterThan *tmp397 :drawUnitCount:count 0
-    * jump *label200 equal *tmp397 false
+ 1109 jump *label200 lessThanEq :drawUnitCount:count 0
  1110 op sub *tmp399 :drawUnits:x 20
  1111 draw image *tmp399 127 :drawUnitCount:type 12 0
  1112 set :drawText.31:x :drawUnits:x
 
  1127 label *label199
  1128 set :drawUnitCount.1:type @mono
  1129 set :drawUnitCount.1:count .monos
-    * op greaterThan *tmp400 :drawUnitCount.1:count 0
-    * jump *label205 equal *tmp400 false
+ 1130 jump *label205 lessThanEq :drawUnitCount.1:count 0
  1131 op sub *tmp402 :drawUnits:x 20
  1132 draw image *tmp402 127 :drawUnitCount.1:type 12 0
  1133 set :drawText.32:x :drawUnits:x
 
  1148 label *label204
  1149 set :drawUnitCount.2:type @flare
  1150 set :drawUnitCount.2:count .flares
-    * op greaterThan *tmp403 :drawUnitCount.2:count 0
-    * jump *label210 equal *tmp403 false
+ 1151 jump *label210 lessThanEq :drawUnitCount.2:count 0
  1152 op sub *tmp405 :drawUnits:x 20
  1153 draw image *tmp405 127 :drawUnitCount.2:type 12 0
  1154 set :drawText.33:x :drawUnits:x
 
  1173 label *label33
  1174 jump *label31 always
  1175 label *label30
-    * op equal *tmp406 .page 1
-    * jump *label214 equal *tmp406 false
+ 1176 jump *label214 notEqual .page 1
  1177 draw reset
  1178 draw clear 0 0 32
  1179 draw col %[gold]
 
  1324 call *label4 *invalid :drawBlock*retval (m:*label254) (h:*label254)
  1325 label *label254
  1326 set :displayBaseMap:i .recentBuildIndex
-    * op greaterThanEq *tmp409 :displayBaseMap:i 0
-    * jump *label255 equal *tmp409 false
+ 1327 jump *label255 lessThan :displayBaseMap:i 0
  1328 set .recentBuildIndex -1
  1329 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
  1330 setaddr :drawBlock*retaddr *label257 (h:*label257)
 
  1389 read :displayLog:record bank1 :displayLog:position
  1390 set :displayRecord:record :displayLog:record
  1391 op mod :displayRecord:id :displayRecord:record 1000
-    * op greaterThan *tmp433 :displayRecord:id @blockCount
-    * jump *label269 equal *tmp433 false
+ 1392 jump *label269 lessThanEq :displayRecord:id @blockCount
  1393 op sub *tmp435 :displayRecord:id @blockCount
  1394 lookup unit *tmp434 *tmp435
  1395 jump *label270 always
 
  1402 op floor :displayRecord:t *tmp439
  1403 op idiv :displayRecord:m :displayRecord:t 60
  1404 op mod :displayRecord:s :displayRecord:t 60
-    * op lessThan *tmp443 :displayRecord:s 10
-    * jump *label271 equal *tmp443 false
+ 1405 jump *label271 greaterThanEq :displayRecord:s 10
  1406 set *tmp444 "0"
  1407 jump *label272 always
  1408 label *label271
 
  1428 label *label275
  1429 label *label274
  1430 op sub :displayLog:y :displayLog:y 15
-    * op lessThan *tmp448 :displayLog:y 10
-    * jump *label276 equal *tmp448 false
+ 1431 jump *label276 greaterThanEq :displayLog:y 10
  1432 op add :displayLog:x :displayLog:x 58
  1433 set :displayLog:y 164
  1434 jump *label277 always
 
  1451 label *label215
  1452 label *label31
  1453 label *label19
-    * op greaterThan *tmp452 .megas 0
-    * jump *label280 equal *tmp452 false
+ 1454 jump *label280 lessThanEq .megas 0
  1455 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  1456 print "\n"
  1457 printflush message1

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-28 instructions):
 
    35 set .reconstructorProgress 0
    36 set .factoryProgress .reconstructorProgress
    37 set .unitReset false
-    * jump *label17 always
    38 label *label16
    39 label *label17
    40 jump *label18 notEqual .page -1
 
   266 op mul *tmp132 7 :drawHeader:len
   267 op sub *tmp133 *tmp131 *tmp132
   268 draw image *tmp133 146 @titanium 12 0
-    * jump *label58 always
   269 label *label57
   270 label *label58
   271 jump *label61 equal .thoriumContainer false
 
   288 op mul *tmp139 7 :drawHeader:len.1
   289 op sub *tmp140 *tmp138 *tmp139
   290 draw image *tmp140 146 @thorium 12 0
-    * jump *label62 always
   291 label *label61
   292 label *label62
   293 label *label41
 
   345 op max .factoryProgress .factoryProgress *tmp171
   346 op greaterThan *tmp173 :drawMaterials:multiReconstructorProgress 0
   347 op max .reconstructorProgress .reconstructorProgress *tmp173
-    * jump *label75 always
   348 label *label74
   349 label *label75
   350 label *label73
 
   438 jump *label89 lessThan :drawItem:col :drawItem:columns
   439 set :drawItem:col 0
   440 op sub :drawItem:y :drawItem:y 15
-    * jump *label90 always
   441 label *label89
   442 label *label90
   443 label *label83
 
   505 jump *label99 lessThan :drawItem.1:col :drawItem.1:columns
   506 set :drawItem.1:col 0
   507 op sub :drawItem.1:y :drawItem.1:y 15
-    * jump *label100 always
   508 label *label99
   509 label *label100
   510 label *label93
 
   572 jump *label109 lessThan :drawItem.2:col :drawItem.2:columns
   573 set :drawItem.2:col 0
   574 op sub :drawItem.2:y :drawItem.2:y 15
-    * jump *label110 always
   575 label *label109
   576 label *label110
   577 label *label103
-    * jump *label102 always
   578 label *label101
   579 label *label102
-    * jump *label92 always
   580 label *label91
   581 label *label92
   582 jump *label82 always
 
   651 jump *label124 lessThan :drawItem.3:col :drawItem.3:columns
   652 set :drawItem.3:col 0
   653 op sub :drawItem.3:y :drawItem.3:y 15
-    * jump *label125 always
   654 label *label124
   655 label *label125
   656 label *label118
   657 set :drawMaterials:col :drawItem.3:col
   658 set :drawMaterials:y :drawItem.3:y
-    * jump *label117 always
   659 label *label116
   660 label *label117
   661 label *label112
 
   758 jump *label139 lessThan :drawItem.4:col :drawItem.4:columns
   759 set :drawItem.4:col 0
   760 op sub :drawItem.4:y :drawItem.4:y 15
-    * jump *label140 always
   761 label *label139
   762 label *label140
   763 label *label133
 
   886 jump *label166 lessThan :drawItem.5:col :drawItem.5:columns
   887 set :drawItem.5:col 0
   888 op sub :drawItem.5:y :drawItem.5:y 15
-    * jump *label167 always
   889 label *label166
   890 label *label167
   891 label *label160
 
   894 op sub :drawMaterials:count :drawMaterials:count 1
   895 jump *label168 greaterThan :drawMaterials:count 0
   896 jump *label150 always
-    * jump *label169 always
   897 label *label168
   898 label *label169
-    * jump *label159 always
   899 label *label158
   900 label *label159
   901 label *label149
   902 multijump *tmp310 0 0 (m:marker1)
   903 multilabel *label157 (m:marker1)
   904 label *label150
-    * jump *label147 always
   905 label *label146
   906 label *label147
   907 label *label127
 
  1003 jump *label187 lessThan :drawItem.6:col :drawItem.6:columns
  1004 set :drawItem.6:col 0
  1005 op sub :drawItem.6:y :drawItem.6:y 15
-    * jump *label188 always
  1006 label *label187
  1007 label *label188
  1008 label *label181
 
  1077 jump *label196 lessThan :drawItem.7:col :drawItem.7:columns
  1078 set :drawItem.7:col 0
  1079 op sub :drawItem.7:y :drawItem.7:y 15
-    * jump *label197 always
  1080 label *label196
  1081 label *label197
  1082 label *label190
 
  1103 label *label203
  1104 label *label202
  1105 op sub :drawUnits:x :drawUnits:x 30
-    * jump *label201 always
  1106 label *label200
  1107 label *label201
  1108 label *label199
 
  1123 label *label208
  1124 label *label207
  1125 op sub :drawUnits:x :drawUnits:x 30
-    * jump *label206 always
  1126 label *label205
  1127 label *label206
  1128 label *label204
 
  1143 label *label213
  1144 label *label212
  1145 op sub :drawUnits:x :drawUnits:x 30
-    * jump *label211 always
  1146 label *label210
  1147 label *label211
  1148 label *label209
 
  1309 setaddr :drawBlock*retaddr *label257 (h:*label257)
  1310 call *label4 *invalid :drawBlock*retval (m:*label257) (h:*label257)
  1311 label *label257
-    * jump *label256 always
  1312 label *label255
  1313 label *label256
  1314 sensor *tmp413 switch1 @enabled
  1315 jump *label258 equal *tmp413 false
  1316 drawflush display1
  1317 jump *label221 always
-    * jump *label259 always
  1318 label *label258
  1319 label *label259
  1320 jump *label260 equal .pageSwitched false
  1321 drawflush display1
-    * jump *label261 always
  1322 label *label260
  1323 label *label261
  1324 label *label220
 
  1407 jump *label276 greaterThanEq :displayLog:y 10
  1408 op add :displayLog:x :displayLog:x 58
  1409 set :displayLog:y 164
-    * jump *label277 always
  1410 label *label276
  1411 label *label277
  1412 label *label273
 
  1415 sensor *tmp450 switch1 @enabled
  1416 jump *label278 equal *tmp450 false
  1417 jump *label267 always
-    * jump *label279 always
  1418 label *label278
  1419 label *label279
  1420 label *label266
 
  1458 drawflush null
  1459 draw reset
  1460 draw clear 0 0 32
-    * jump *label284 always
  1461 label *label283
  1462 label *label284
  1463 label *label14
 
  1525 op mul *tmp494 2 :drawBlock:size
  1526 op mul *tmp495 90 :drawBlock:rotation
  1527 draw image *tmp492 *tmp493 :drawBlock:type *tmp494 *tmp495
-    * jump *label289 always
  1528 label *label288
  1529 label *label289
  1530 label *label285

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
   212 label *label48
   213 set :drawHeader:tt @second
   214 read *tmp114 processor1 "time"
-    * op div *tmp115 *tmp114 120
-    * op floor :drawHeader:t *tmp115
+  215 op idiv :drawHeader:t *tmp114 120
   216 op idiv :drawHeader:m :drawHeader:t 60
   217 op mod :drawHeader:s :drawHeader:t 60
   218 jump *label53 greaterThanEq :drawHeader:s 10
 
  1373 label *label270
  1374 set :displayRecord:icon *tmp434
  1375 op div *tmp438 :displayRecord:record 1000
-    * op div *tmp439 *tmp438 120
-    * op floor :displayRecord:t *tmp439
+ 1376 op idiv :displayRecord:t *tmp438 120
  1377 op idiv :displayRecord:m :displayRecord:t 60
  1378 op mod :displayRecord:s :displayRecord:t 60
  1379 jump *label271 greaterThanEq :displayRecord:s 10

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-11 instructions):
 
     1 read *tmp39 processor3 "*signature"
     2 jump *label6 notEqual *tmp39 "3290b8c661787058:v1"
     3 set .core null
-    * set .coreX 0
-    * set .coreY 0
     4 set .page 0
     5 set .numPages 3
     6 set .recentBuildIndex -1
 
    31 label *label13
    32 jump *label16 equal .unitReset false
    33 set .reconstructorProgress 0
-    * set .factoryProgress .reconstructorProgress
+   34 set .factoryProgress 0
    35 set .unitReset false
    36 label *label16
    37 label *label17
 
    43 set :drawText:y 172
    44 set :drawText:alignment @topLeft
    45 print "Map"
-    * set :drawPrint:x :drawText:x
-    * set :drawPrint:y :drawText:y
-    * set :drawPrint:alignment :drawText:alignment
-    * draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
+   46 set :drawPrint:x 4
+   47 set :drawPrint:y 172
+   48 set :drawPrint:alignment @topLeft
+   49 draw print :drawText:x :drawText:y :drawText:alignment
    50 label *label22
    51 label *label21
    52 draw col %[white]
-    * op div *tmp50 176 .mapw
-    * op div *tmp51 176 .maph
+   53 op div *tmp50 176 @mapw
+   54 op div *tmp51 176 @maph
    55 draw scale *tmp50 *tmp51
-    * op div *tmp52 .mapw 176
+   56 op div *tmp52 @mapw 176
    57 op ceil :displayOreMap:imgSize *tmp52
    58 op mul *tmp54 7 :displayOreMap:imgSize
    59 draw image .coreX .coreY @core-shard *tmp54 0
 
    62 set *tmp55 :displayOreMap:count
    63 set :displayOreMap:i 0
    64 label *label23
-    * jump *label25 greaterThanEq :displayOreMap:i *tmp55
+   65 jump *label25 greaterThanEq :displayOreMap:i :displayOreMap:count
    66 op add :displayOreMap:index :displayOreMap:index 1
    67 read :displayOreMap:id bank1 :displayOreMap:index
    68 jump *label26 lessThanEq :displayOreMap:id 0
 
    82 op add :displayOreMap:index :displayOreMap:index 1
    83 read :displayOreMap:y bank1 :displayOreMap:index
    84 op mul *tmp71 :displayOreMap:size :displayOreMap:imgSize
-    * draw image :displayOreMap:x :displayOreMap:y :displayOreMap:img *tmp71 0
+   85 draw image :displayOreMap:x :displayOreMap:y *tmp59 *tmp71 0
    86 label *label24
    87 op add :displayOreMap:i :displayOreMap:i 1
    88 jump *label23 always
 
   101 set :drawText.1:y 172
   102 set :drawText.1:alignment @topRight
   103 print :displayOreMap:index
-    * set :drawPrint.1:x :drawText.1:x
-    * set :drawPrint.1:y :drawText.1:y
-    * set :drawPrint.1:alignment :drawText.1:alignment
-    * draw print :drawPrint.1:x :drawPrint.1:y :drawPrint.1:alignment
+  104 set :drawPrint.1:x 175
+  105 set :drawPrint.1:y 172
+  106 set :drawPrint.1:alignment @topRight
+  107 draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
   108 label *label29
   109 label *label28
   110 drawflush display1
 
   128 set :lerp:from 40
   129 set :lerp:to 88
   130 set :lerp:ratio :animate:ratio
-    * op sub *tmp88 1 :lerp:ratio
-    * op mul *tmp89 *tmp88 :lerp:from
-    * op mul *tmp90 :lerp:ratio :lerp:to
+  131 op sub *tmp88 1 :animate:ratio
+  132 op mul *tmp89 *tmp88 40
+  133 op mul *tmp90 :animate:ratio 88
   134 op add *tmp87 *tmp89 *tmp90
   135 label *label37
   136 set :animate:x *tmp87
   137 set :lerp.1:from 137
   138 set :lerp.1:to 88
   139 set :lerp.1:ratio :animate:ratio
-    * op sub *tmp93 1 :lerp.1:ratio
-    * op mul *tmp94 *tmp93 :lerp.1:from
-    * op mul *tmp95 :lerp.1:ratio :lerp.1:to
+  140 op sub *tmp93 1 :animate:ratio
+  141 op mul *tmp94 *tmp88 137
+  142 op mul *tmp95 :animate:ratio 88
   143 op add *tmp92 *tmp94 *tmp95
   144 label *label38
   145 set :animate:y *tmp92
   146 set :lerp.2:from 32
   147 set :lerp.2:to 168
   148 set :lerp.2:ratio :animate:ratio
-    * op sub *tmp98 1 :lerp.2:ratio
-    * op mul *tmp99 *tmp98 :lerp.2:from
-    * op mul *tmp100 :lerp.2:ratio :lerp.2:to
+  149 op sub *tmp98 1 :animate:ratio
+  150 op mul *tmp99 *tmp88 32
+  151 op mul *tmp100 :animate:ratio 168
   152 op add *tmp97 *tmp99 *tmp100
   153 label *label39
   154 set :animate:size *tmp97
-    * draw image :animate:x :animate:y @mega :animate:size 0
+  155 draw image *tmp87 *tmp92 @mega *tmp97 0
   156 drawflush display1
   157 op add .animation .animation 1
   158 label *label34
 
   164 set :drawBold:x 40
   165 set :drawBold:y 161
   166 set :drawBold:alignment @bottom
-    * set :drawText.2:x :drawBold:x
-    * set :drawText.2:y :drawBold:y
-    * set :drawText.2:alignment :drawBold:alignment
+  167 set :drawText.2:x 40
+  168 set :drawText.2:y 161
+  169 set :drawText.2:alignment @bottom
   170 print "Goal"
-    * set :drawPrint.2:x :drawText.2:x
-    * set :drawPrint.2:y :drawText.2:y
-    * set :drawPrint.2:alignment :drawText.2:alignment
-    * draw print :drawPrint.2:x :drawPrint.2:y :drawPrint.2:alignment
+  171 set :drawPrint.2:x :drawBold:x
+  172 set :drawPrint.2:y :drawBold:y
+  173 set :drawPrint.2:alignment :drawBold:alignment
+  174 draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
   175 label *label44
   176 label *label43
-    * op add :drawText.3:x :drawBold:x 1
-    * set :drawText.3:y :drawBold:y
-    * set :drawText.3:alignment :drawBold:alignment
+  177 op add :drawText.3:x 40 1
+  178 set :drawText.3:y 161
+  179 set :drawText.3:alignment @bottom
   180 print "Goal"
-    * set :drawPrint.3:x :drawText.3:x
-    * set :drawPrint.3:y :drawText.3:y
-    * set :drawPrint.3:alignment :drawText.3:alignment
-    * draw print :drawPrint.3:x :drawPrint.3:y :drawPrint.3:alignment
+  181 set :drawPrint.3:x 41
+  182 set :drawPrint.3:y :drawBold:y
+  183 set :drawPrint.3:alignment :drawBold:alignment
+  184 draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
   185 label *label46
   186 label *label45
   187 label *label42
 
   236 set :drawText.4:y 172
   237 set :drawText.4:alignment @topRight
   238 print ")"
-    * set :drawPrint.4:x :drawText.4:x
-    * set :drawPrint.4:y :drawText.4:y
-    * set :drawPrint.4:alignment :drawText.4:alignment
-    * draw print :drawPrint.4:x :drawPrint.4:y :drawPrint.4:alignment
+  239 set :drawPrint.4:x 170
+  240 set :drawPrint.4:y 172
+  241 set :drawPrint.4:alignment @topRight
+  242 draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
   243 label *label56
   244 label *label55
   245 jump *label57 equal .titaniumDrill false
 
   248 set :drawHeader:x 170
   249 op log10 *tmp129 :drawHeader:count
   250 op floor :drawHeader:len *tmp129
-    * set :drawText.5:x :drawHeader:x
+  251 set :drawText.5:x 170
   252 set :drawText.5:y 155
   253 set :drawText.5:alignment @topRight
   254 print "x"
   255 print :drawHeader:count
-    * set :drawPrint.5:x :drawText.5:x
-    * set :drawPrint.5:y :drawText.5:y
-    * set :drawPrint.5:alignment :drawText.5:alignment
-    * draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
+  256 set :drawPrint.5:x :drawHeader:x
+  257 set :drawPrint.5:y 155
+  258 set :drawPrint.5:alignment @topRight
+  259 draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
   260 label *label60
   261 label *label59
-    * op sub *tmp131 :drawHeader:x 20
+  262 op sub *tmp131 170 20
   263 op mul *tmp132 7 :drawHeader:len
-    * op sub *tmp133 *tmp131 *tmp132
+  264 op sub *tmp133 150 *tmp132
   265 draw image *tmp133 146 @titanium 12 0
   266 label *label57
   267 label *label58
 
   270 set :drawHeader:x.1 120
   271 op log10 *tmp136 :drawHeader:count
   272 op floor :drawHeader:len.1 *tmp136
-    * set :drawText.6:x :drawHeader:x.1
+  273 set :drawText.6:x 120
   274 set :drawText.6:y 155
   275 set :drawText.6:alignment @topRight
   276 print "x"
   277 print :drawHeader:count
-    * set :drawPrint.6:x :drawText.6:x
-    * set :drawPrint.6:y :drawText.6:y
-    * set :drawPrint.6:alignment :drawText.6:alignment
-    * draw print :drawPrint.6:x :drawPrint.6:y :drawPrint.6:alignment
+  278 set :drawPrint.6:x :drawHeader:x.1
+  279 set :drawPrint.6:y 155
+  280 set :drawPrint.6:alignment @topRight
+  281 draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
   282 label *label64
   283 label *label63
-    * op sub *tmp138 :drawHeader:x.1 20
+  284 op sub *tmp138 120 20
   285 op mul *tmp139 7 :drawHeader:len.1
-    * op sub *tmp140 *tmp138 *tmp139
+  286 op sub *tmp140 100 *tmp139
   287 draw image *tmp140 146 @thorium 12 0
   288 label *label61
   289 label *label62
 
   304 set :drawMaterials:unitTotal1 .monoTarget
   305 set :drawMaterials:unit1 .nextUnit
   306 set :drawMaterials:unit3 null
-    * set :drawMaterials:unit2 :drawMaterials:unit3
+  307 set :drawMaterials:unit2 null
   308 jump *label69 always
   309 label *label68
   310 jump *label70 notEqual .nextUnit @flare
 
   315 set :drawMaterials:unitTotal1 .flareTarget
   316 set :drawMaterials:unit1 .nextUnit
   317 set :drawMaterials:unit3 null
-    * set :drawMaterials:unit2 :drawMaterials:unit3
+  318 set :drawMaterials:unit2 null
   319 jump *label71 always
   320 label *label70
   321 jump *label72 notEqual .nextUnit @poly
 
   350 set :drawBold.1:x 22
   351 set :drawBold.1:y 105
   352 set :drawBold.1:alignment @bottomLeft
-    * set :drawText.7:x :drawBold.1:x
-    * set :drawText.7:y :drawBold.1:y
-    * set :drawText.7:alignment :drawBold.1:alignment
+  353 set :drawText.7:x 22
+  354 set :drawText.7:y 105
+  355 set :drawText.7:alignment @bottomLeft
   356 print "Unit factories"
-    * set :drawPrint.7:x :drawText.7:x
-    * set :drawPrint.7:y :drawText.7:y
-    * set :drawPrint.7:alignment :drawText.7:alignment
-    * draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
+  357 set :drawPrint.7:x :drawBold.1:x
+  358 set :drawPrint.7:y :drawBold.1:y
+  359 set :drawPrint.7:alignment :drawBold.1:alignment
+  360 draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
   361 label *label78
   362 label *label77
-    * op add :drawText.8:x :drawBold.1:x 1
-    * set :drawText.8:y :drawBold.1:y
-    * set :drawText.8:alignment :drawBold.1:alignment
+  363 op add :drawText.8:x 22 1
+  364 set :drawText.8:y 105
+  365 set :drawText.8:alignment @bottomLeft
   366 print "Unit factories"
-    * set :drawPrint.8:x :drawText.8:x
-    * set :drawPrint.8:y :drawText.8:y
-    * set :drawPrint.8:alignment :drawText.8:alignment
-    * draw print :drawPrint.8:x :drawPrint.8:y :drawPrint.8:alignment
+  367 set :drawPrint.8:x 23
+  368 set :drawPrint.8:y :drawBold.1:y
+  369 set :drawPrint.8:alignment :drawBold.1:alignment
+  370 draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
   371 label *label80
   372 label *label79
   373 label *label76
 
   378 set :drawItem:item :drawMaterials:unit1
   379 set :drawItem:current .factoryProgress
   380 set :drawItem:target 1
-    * op mul *tmp178 :drawItem:columns 176
-    * op div *tmp179 *tmp178 2
-    * op sub :drawItem:barLength 210 *tmp179
-    * op add :drawItem:textEnd 48 :drawItem:barLength
-    * op mul *tmp182 :drawItem:barLength :drawItem:current
-    * op div *tmp183 *tmp182 :drawItem:target
-    * op min :drawItem:length :drawItem:barLength *tmp183
-    * op mul *tmp185 :drawItem:col 176
-    * op div *tmp186 *tmp185 2
-    * op add :drawItem:iconX 11 *tmp186
-    * op mul *tmp188 :drawItem:col 176
-    * op div *tmp189 *tmp188 2
-    * op add :drawItem:barX 22 *tmp189
-    * op mul *tmp191 :drawItem:col 176
-    * op div *tmp192 *tmp191 2
-    * op add :drawItem:textX :drawItem:textEnd *tmp192
+  381 op mul *tmp178 1 176
+  382 op div *tmp179 176 2
+  383 op sub :drawItem:barLength 210 88
+  384 op add :drawItem:textEnd 48 122
+  385 op mul *tmp182 122 .factoryProgress
+  386 op div *tmp183 *tmp182 1
+  387 op min :drawItem:length 122 *tmp183
+  388 op mul *tmp185 0 176
+  389 op div *tmp186 0 2
+  390 op add :drawItem:iconX 11 0
+  391 op mul *tmp188 0 176
+  392 op div *tmp189 0 2
+  393 op add :drawItem:barX 22 0
+  394 op mul *tmp191 0 176
+  395 op div *tmp192 0 2
+  396 op add :drawItem:textX 170 0
   397 draw col %[white]
-    * op add *tmp194 :drawItem:y 5
-    * draw image :drawItem:iconX *tmp194 :drawItem:item 16 0
+  398 op add *tmp194 90 5
+  399 draw image 11 95 :drawMaterials:unit1 16 0
   400 draw color 0 128 0 255
-    * draw rect :drawItem:barX :drawItem:y :drawItem:length 10
+  401 draw rect 22 90 :drawItem:length 10
   402 draw color 0 255 0 255
-    * draw lineRect :drawItem:barX :drawItem:y :drawItem:barLength 10
-    * op add *tmp195 :drawItem:y 5
-    * op add *tmp196 *tmp195 2
-    * set :drawBold.2:x :drawItem:textX
-    * set :drawBold.2:y *tmp196
+  403 draw lineRect 22 90 122 10
+  404 op add *tmp195 90 5
+  405 op add *tmp196 95 2
+  406 set :drawBold.2:x 170
+  407 set :drawBold.2:y 97
   408 set :drawBold.2:alignment @right
-    * set :drawText.9:x :drawBold.2:x
-    * set :drawText.9:y :drawBold.2:y
-    * set :drawText.9:alignment :drawBold.2:alignment
+  409 set :drawText.9:x :drawItem:textX
+  410 set :drawText.9:y *tmp196
+  411 set :drawText.9:alignment @right
   412 print :drawMaterials:unitCount1
   413 print "/"
   414 print :drawMaterials:unitTotal1
-    * set :drawPrint.9:x :drawText.9:x
-    * set :drawPrint.9:y :drawText.9:y
-    * set :drawPrint.9:alignment :drawText.9:alignment
-    * draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
+  415 set :drawPrint.9:x :drawBold.2:x
+  416 set :drawPrint.9:y :drawBold.2:y
+  417 set :drawPrint.9:alignment :drawBold.2:alignment
+  418 draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
   419 label *label86
   420 label *label85
-    * op add :drawText.10:x :drawBold.2:x 1
-    * set :drawText.10:y :drawBold.2:y
-    * set :drawText.10:alignment :drawBold.2:alignment
+  421 op add :drawText.10:x :drawItem:textX 1
+  422 set :drawText.10:y *tmp196
+  423 set :drawText.10:alignment @right
   424 print :drawMaterials:unitCount1
   425 print "/"
   426 print :drawMaterials:unitTotal1
   427 set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawText.10:y
-    * set :drawPrint.10:alignment :drawText.10:alignment
-    * draw print :drawPrint.10:x :drawPrint.10:y :drawPrint.10:alignment
+  428 set :drawPrint.10:y :drawBold.2:y
+  429 set :drawPrint.10:alignment :drawBold.2:alignment
+  430 draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
   431 label *label88
   432 label *label87
   433 label *label84
-    * op add :drawItem:col :drawItem:col 1
-    * jump *label89 lessThan :drawItem:col :drawItem:columns
-    * set :drawItem:col 0
-    * op sub :drawItem:y :drawItem:y 15
+  434 op add :drawItem:col 0 1
+  435 jump *label89 lessThan 1 1
+  436 op sub :drawItem:y 90 15
   437 label *label89
   438 label *label90
   439 label *label83
 
   444 set :drawItem.1:item :drawMaterials:unit2
   445 set :drawItem.1:current .reconstructorProgress
   446 set :drawItem.1:target 1
-    * op mul *tmp202 :drawItem.1:columns 176
-    * op div *tmp203 *tmp202 2
-    * op sub :drawItem.1:barLength 210 *tmp203
-    * op add :drawItem.1:textEnd 48 :drawItem.1:barLength
-    * op mul *tmp206 :drawItem.1:barLength :drawItem.1:current
-    * op div *tmp207 *tmp206 :drawItem.1:target
-    * op min :drawItem.1:length :drawItem.1:barLength *tmp207
-    * op mul *tmp209 :drawItem.1:col 176
-    * op div *tmp210 *tmp209 2
-    * op add :drawItem.1:iconX 11 *tmp210
-    * op mul *tmp212 :drawItem.1:col 176
-    * op div *tmp213 *tmp212 2
-    * op add :drawItem.1:barX 22 *tmp213
-    * op mul *tmp215 :drawItem.1:col 176
-    * op div *tmp216 *tmp215 2
-    * op add :drawItem.1:textX :drawItem.1:textEnd *tmp216
+  447 op mul *tmp202 1 176
+  448 op div *tmp203 176 2
+  449 op sub :drawItem.1:barLength 210 88
+  450 op add :drawItem.1:textEnd 48 122
+  451 op mul *tmp206 122 .reconstructorProgress
+  452 op div *tmp207 *tmp206 1
+  453 op min :drawItem.1:length 122 *tmp207
+  454 op mul *tmp209 0 176
+  455 op div *tmp210 0 2
+  456 op add :drawItem.1:iconX 11 0
+  457 op mul *tmp212 0 176
+  458 op div *tmp213 0 2
+  459 op add :drawItem.1:barX 22 0
+  460 op mul *tmp215 0 176
+  461 op div *tmp216 0 2
+  462 op add :drawItem.1:textX 170 0
   463 draw col %[white]
-    * op add *tmp218 :drawItem.1:y 5
-    * draw image :drawItem.1:iconX *tmp218 :drawItem.1:item 16 0
+  464 op add *tmp218 75 5
+  465 draw image 11 80 :drawMaterials:unit2 16 0
   466 draw color 0 128 0 255
-    * draw rect :drawItem.1:barX :drawItem.1:y :drawItem.1:length 10
+  467 draw rect 22 75 :drawItem.1:length 10
   468 draw color 0 255 0 255
-    * draw lineRect :drawItem.1:barX :drawItem.1:y :drawItem.1:barLength 10
-    * op add *tmp219 :drawItem.1:y 5
-    * op add *tmp220 *tmp219 2
-    * set :drawBold.3:x :drawItem.1:textX
-    * set :drawBold.3:y *tmp220
+  469 draw lineRect 22 75 122 10
+  470 op add *tmp219 75 5
+  471 op add *tmp220 80 2
+  472 set :drawBold.3:x 170
+  473 set :drawBold.3:y 82
   474 set :drawBold.3:alignment @right
-    * set :drawText.11:x :drawBold.3:x
-    * set :drawText.11:y :drawBold.3:y
-    * set :drawText.11:alignment :drawBold.3:alignment
+  475 set :drawText.11:x :drawItem.1:textX
+  476 set :drawText.11:y *tmp220
+  477 set :drawText.11:alignment @right
   478 print :drawMaterials:unitCount2
   479 print "/"
   480 print :drawMaterials:unitTotal2
-    * set :drawPrint.11:x :drawText.11:x
-    * set :drawPrint.11:y :drawText.11:y
-    * set :drawPrint.11:alignment :drawText.11:alignment
-    * draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
+  481 set :drawPrint.11:x :drawBold.3:x
+  482 set :drawPrint.11:y :drawBold.3:y
+  483 set :drawPrint.11:alignment :drawBold.3:alignment
+  484 draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
   485 label *label96
   486 label *label95
-    * op add :drawText.12:x :drawBold.3:x 1
-    * set :drawText.12:y :drawBold.3:y
-    * set :drawText.12:alignment :drawBold.3:alignment
+  487 op add :drawText.12:x :drawItem.1:textX 1
+  488 set :drawText.12:y *tmp220
+  489 set :drawText.12:alignment @right
   490 print :drawMaterials:unitCount2
   491 print "/"
   492 print :drawMaterials:unitTotal2
   493 set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawText.12:y
-    * set :drawPrint.12:alignment :drawText.12:alignment
-    * draw print :drawPrint.12:x :drawPrint.12:y :drawPrint.12:alignment
+  494 set :drawPrint.12:y :drawBold.3:y
+  495 set :drawPrint.12:alignment :drawBold.3:alignment
+  496 draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
   497 label *label98
   498 label *label97
   499 label *label94
-    * op add :drawItem.1:col :drawItem.1:col 1
-    * jump *label99 lessThan :drawItem.1:col :drawItem.1:columns
-    * set :drawItem.1:col 0
-    * op sub :drawItem.1:y :drawItem.1:y 15
+  500 op add :drawItem.1:col 0 1
+  501 jump *label99 lessThan 1 1
+  502 op sub :drawItem.1:y 75 15
   503 label *label99
   504 label *label100
   505 label *label93
 
   510 set :drawItem.2:item :drawMaterials:unit3
   511 set :drawItem.2:current :drawMaterials:multiReconstructorProgress
   512 set :drawItem.2:target 1
-    * op mul *tmp226 :drawItem.2:columns 176
-    * op div *tmp227 *tmp226 2
-    * op sub :drawItem.2:barLength 210 *tmp227
-    * op add :drawItem.2:textEnd 48 :drawItem.2:barLength
-    * op mul *tmp230 :drawItem.2:barLength :drawItem.2:current
-    * op div *tmp231 *tmp230 :drawItem.2:target
-    * op min :drawItem.2:length :drawItem.2:barLength *tmp231
-    * op mul *tmp233 :drawItem.2:col 176
-    * op div *tmp234 *tmp233 2
-    * op add :drawItem.2:iconX 11 *tmp234
-    * op mul *tmp236 :drawItem.2:col 176
-    * op div *tmp237 *tmp236 2
-    * op add :drawItem.2:barX 22 *tmp237
-    * op mul *tmp239 :drawItem.2:col 176
-    * op div *tmp240 *tmp239 2
-    * op add :drawItem.2:textX :drawItem.2:textEnd *tmp240
+  513 op mul *tmp226 1 176
+  514 op div *tmp227 176 2
+  515 op sub :drawItem.2:barLength 210 88
+  516 op add :drawItem.2:textEnd 48 122
+  517 op mul *tmp230 122 :drawMaterials:multiReconstructorProgress
+  518 op div *tmp231 *tmp230 1
+  519 op min :drawItem.2:length 122 *tmp231
+  520 op mul *tmp233 0 176
+  521 op div *tmp234 0 2
+  522 op add :drawItem.2:iconX 11 0
+  523 op mul *tmp236 0 176
+  524 op div *tmp237 0 2
+  525 op add :drawItem.2:barX 22 0
+  526 op mul *tmp239 0 176
+  527 op div *tmp240 0 2
+  528 op add :drawItem.2:textX 170 0
   529 draw col %[white]
-    * op add *tmp242 :drawItem.2:y 5
-    * draw image :drawItem.2:iconX *tmp242 :drawItem.2:item 16 0
+  530 op add *tmp242 60 5
+  531 draw image 11 65 :drawMaterials:unit3 16 0
   532 draw color 0 128 0 255
-    * draw rect :drawItem.2:barX :drawItem.2:y :drawItem.2:length 10
+  533 draw rect 22 60 :drawItem.2:length 10
   534 draw color 0 255 0 255
-    * draw lineRect :drawItem.2:barX :drawItem.2:y :drawItem.2:barLength 10
-    * op add *tmp243 :drawItem.2:y 5
-    * op add *tmp244 *tmp243 2
-    * set :drawBold.4:x :drawItem.2:textX
-    * set :drawBold.4:y *tmp244
+  535 draw lineRect 22 60 122 10
+  536 op add *tmp243 60 5
+  537 op add *tmp244 65 2
+  538 set :drawBold.4:x 170
+  539 set :drawBold.4:y 67
   540 set :drawBold.4:alignment @right
-    * set :drawText.13:x :drawBold.4:x
-    * set :drawText.13:y :drawBold.4:y
-    * set :drawText.13:alignment :drawBold.4:alignment
+  541 set :drawText.13:x :drawItem.2:textX
+  542 set :drawText.13:y *tmp244
+  543 set :drawText.13:alignment @right
   544 print .megas
   545 print "/"
   546 print .megaTarget
-    * set :drawPrint.13:x :drawText.13:x
-    * set :drawPrint.13:y :drawText.13:y
-    * set :drawPrint.13:alignment :drawText.13:alignment
-    * draw print :drawPrint.13:x :drawPrint.13:y :drawPrint.13:alignment
+  547 set :drawPrint.13:x :drawBold.4:x
+  548 set :drawPrint.13:y :drawBold.4:y
+  549 set :drawPrint.13:alignment :drawBold.4:alignment
+  550 draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
   551 label *label106
   552 label *label105
-    * op add :drawText.14:x :drawBold.4:x 1
-    * set :drawText.14:y :drawBold.4:y
-    * set :drawText.14:alignment :drawBold.4:alignment
+  553 op add :drawText.14:x :drawItem.2:textX 1
+  554 set :drawText.14:y *tmp244
+  555 set :drawText.14:alignment @right
   556 print .megas
   557 print "/"
   558 print .megaTarget
   559 set :drawPrint.14:x :drawText.14:x
-    * set :drawPrint.14:y :drawText.14:y
-    * set :drawPrint.14:alignment :drawText.14:alignment
-    * draw print :drawPrint.14:x :drawPrint.14:y :drawPrint.14:alignment
+  560 set :drawPrint.14:y :drawBold.4:y
+  561 set :drawPrint.14:alignment :drawBold.4:alignment
+  562 draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
   563 label *label108
   564 label *label107
   565 label *label104
-    * op add :drawItem.2:col :drawItem.2:col 1
-    * jump *label109 lessThan :drawItem.2:col :drawItem.2:columns
-    * set :drawItem.2:col 0
-    * op sub :drawItem.2:y :drawItem.2:y 15
+  566 op add :drawItem.2:col 0 1
+  567 jump *label109 lessThan 1 1
+  568 op sub :drawItem.2:y 60 15
   569 label *label109
   570 label *label110
   571 label *label103
 
   592 set :drawItem.3:item :drawMaterials:item
   593 set :drawItem.3:current *tmp253
   594 set :drawItem.3:target :drawMaterials:target
-    * op mul *tmp254 :drawItem.3:columns 176
-    * op div *tmp255 *tmp254 2
-    * op sub :drawItem.3:barLength 210 *tmp255
-    * op add :drawItem.3:textEnd 48 :drawItem.3:barLength
-    * op mul *tmp258 :drawItem.3:barLength :drawItem.3:current
-    * op div *tmp259 *tmp258 :drawItem.3:target
-    * op min :drawItem.3:length :drawItem.3:barLength *tmp259
-    * op mul *tmp261 :drawItem.3:col 176
-    * op div *tmp262 *tmp261 2
+  595 op mul *tmp254 1 176
+  596 op div *tmp255 176 2
+  597 op sub :drawItem.3:barLength 210 88
+  598 op add :drawItem.3:textEnd 48 122
+  599 op mul *tmp258 122 *tmp253
+  600 op div *tmp259 *tmp258 :drawMaterials:target
+  601 op min :drawItem.3:length 122 *tmp259
+  602 op mul *tmp261 :drawMaterials:col 176
+  603 op mul *tmp262 :drawItem.3:col 88
   604 op add :drawItem.3:iconX 11 *tmp262
-    * op mul *tmp264 :drawItem.3:col 176
-    * op div *tmp265 *tmp264 2
-    * op add :drawItem.3:barX 22 *tmp265
-    * op mul *tmp267 :drawItem.3:col 176
-    * op div *tmp268 *tmp267 2
-    * op add :drawItem.3:textX :drawItem.3:textEnd *tmp268
+  605 op mul *tmp264 :drawMaterials:col 176
+  606 op div *tmp265 *tmp261 2
+  607 op add :drawItem.3:barX 22 *tmp262
+  608 op mul *tmp267 :drawMaterials:col 176
+  609 op div *tmp268 *tmp261 2
+  610 op add :drawItem.3:textX 170 *tmp262
   611 draw col %[white]
-    * op add *tmp270 :drawItem.3:y 5
-    * draw image :drawItem.3:iconX *tmp270 :drawItem.3:item 16 0
+  612 op add *tmp270 :drawMaterials:y 5
+  613 draw image :drawItem.3:iconX *tmp270 :drawMaterials:item 16 0
   614 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawItem.3:y :drawItem.3:length 10
+  615 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
   616 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawItem.3:y :drawItem.3:barLength 10
-    * op add *tmp271 :drawItem.3:y 5
-    * op add *tmp272 *tmp271 2
+  617 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  618 op add *tmp271 :drawMaterials:y 5
+  619 op add *tmp272 *tmp270 2
   620 set :drawBold.5:x :drawItem.3:textX
   621 set :drawBold.5:y *tmp272
   622 set :drawBold.5:alignment @right
-    * set :drawText.15:x :drawBold.5:x
-    * set :drawText.15:y :drawBold.5:y
-    * set :drawText.15:alignment :drawBold.5:alignment
+  623 set :drawText.15:x :drawItem.3:textX
+  624 set :drawText.15:y *tmp272
+  625 set :drawText.15:alignment @right
   626 print :drawMaterials:target
-    * set :drawPrint.15:x :drawText.15:x
-    * set :drawPrint.15:y :drawText.15:y
-    * set :drawPrint.15:alignment :drawText.15:alignment
-    * draw print :drawPrint.15:x :drawPrint.15:y :drawPrint.15:alignment
+  627 set :drawPrint.15:x :drawBold.5:x
+  628 set :drawPrint.15:y :drawBold.5:y
+  629 set :drawPrint.15:alignment :drawBold.5:alignment
+  630 draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
   631 label *label121
   632 label *label120
-    * op add :drawText.16:x :drawBold.5:x 1
-    * set :drawText.16:y :drawBold.5:y
-    * set :drawText.16:alignment :drawBold.5:alignment
+  633 op add :drawText.16:x :drawItem.3:textX 1
+  634 set :drawText.16:y *tmp272
+  635 set :drawText.16:alignment @right
   636 print :drawMaterials:target
   637 set :drawPrint.16:x :drawText.16:x
-    * set :drawPrint.16:y :drawText.16:y
-    * set :drawPrint.16:alignment :drawText.16:alignment
-    * draw print :drawPrint.16:x :drawPrint.16:y :drawPrint.16:alignment
+  638 set :drawPrint.16:y :drawBold.5:y
+  639 set :drawPrint.16:alignment :drawBold.5:alignment
+  640 draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
   641 label *label123
   642 label *label122
   643 label *label119
-    * op add :drawItem.3:col :drawItem.3:col 1
-    * jump *label124 lessThan :drawItem.3:col :drawItem.3:columns
+  644 op add :drawItem.3:col :drawMaterials:col 1
+  645 jump *label124 lessThan :drawItem.3:col 1
   646 set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawItem.3:y 15
+  647 op sub :drawItem.3:y :drawMaterials:y 15
   648 label *label124
   649 label *label125
   650 label *label118
 
   666 set :drawBold.6:x 22
   667 set :drawBold.6:y 105
   668 set :drawBold.6:alignment @bottomLeft
-    * set :drawText.17:x :drawBold.6:x
-    * set :drawText.17:y :drawBold.6:y
-    * set :drawText.17:alignment :drawBold.6:alignment
+  669 set :drawText.17:x 22
+  670 set :drawText.17:y 105
+  671 set :drawText.17:alignment @bottomLeft
   672 read *tmp280 processor3 ".mapAction"
   673 print *tmp280
-    * set :drawPrint.17:x :drawText.17:x
-    * set :drawPrint.17:y :drawText.17:y
-    * set :drawPrint.17:alignment :drawText.17:alignment
-    * draw print :drawPrint.17:x :drawPrint.17:y :drawPrint.17:alignment
+  674 set :drawPrint.17:x :drawBold.6:x
+  675 set :drawPrint.17:y :drawBold.6:y
+  676 set :drawPrint.17:alignment :drawBold.6:alignment
+  677 draw print :drawText.17:x :drawText.17:y :drawText.17:alignment
   678 label *label130
   679 label *label129
-    * op add :drawText.18:x :drawBold.6:x 1
-    * set :drawText.18:y :drawBold.6:y
-    * set :drawText.18:alignment :drawBold.6:alignment
+  680 op add :drawText.18:x 22 1
+  681 set :drawText.18:y 105
+  682 set :drawText.18:alignment @bottomLeft
   683 read *tmp282 processor3 ".mapAction"
   684 print *tmp282
-    * set :drawPrint.18:x :drawText.18:x
-    * set :drawPrint.18:y :drawText.18:y
-    * set :drawPrint.18:alignment :drawText.18:alignment
-    * draw print :drawPrint.18:x :drawPrint.18:y :drawPrint.18:alignment
+  685 set :drawPrint.18:x 23
+  686 set :drawPrint.18:y :drawBold.6:y
+  687 set :drawPrint.18:alignment :drawBold.6:alignment
+  688 draw print :drawText.18:x :drawText.18:y :drawText.18:alignment
   689 label *label132
   690 label *label131
   691 label *label128
 
   695 set :drawItem.4:item @titanium
   696 read :drawItem.4:current processor3 ".mapProgress"
   697 read :drawItem.4:target processor3 ".mapTotal"
-    * op mul *tmp283 :drawItem.4:columns 176
-    * op div *tmp284 *tmp283 2
-    * op sub :drawItem.4:barLength 210 *tmp284
-    * op add :drawItem.4:textEnd 48 :drawItem.4:barLength
-    * op mul *tmp287 :drawItem.4:barLength :drawItem.4:current
+  698 op mul *tmp283 1 176
+  699 op div *tmp284 176 2
+  700 op sub :drawItem.4:barLength 210 88
+  701 op add :drawItem.4:textEnd 48 122
+  702 op mul *tmp287 122 :drawItem.4:current
   703 op div *tmp288 *tmp287 :drawItem.4:target
-    * op min :drawItem.4:length :drawItem.4:barLength *tmp288
-    * op mul *tmp290 :drawItem.4:col 176
-    * op div *tmp291 *tmp290 2
-    * op add :drawItem.4:iconX 11 *tmp291
-    * op mul *tmp293 :drawItem.4:col 176
-    * op div *tmp294 *tmp293 2
-    * op add :drawItem.4:barX 22 *tmp294
-    * op mul *tmp296 :drawItem.4:col 176
-    * op div *tmp297 *tmp296 2
-    * op add :drawItem.4:textX :drawItem.4:textEnd *tmp297
+  704 op min :drawItem.4:length 122 *tmp288
+  705 op mul *tmp290 0 176
+  706 op div *tmp291 0 2
+  707 op add :drawItem.4:iconX 11 0
+  708 op mul *tmp293 0 176
+  709 op div *tmp294 0 2
+  710 op add :drawItem.4:barX 22 0
+  711 op mul *tmp296 0 176
+  712 op div *tmp297 0 2
+  713 op add :drawItem.4:textX 170 0
   714 draw col %[white]
-    * op add *tmp299 :drawItem.4:y 5
-    * draw image :drawItem.4:iconX *tmp299 :drawItem.4:item 16 0
+  715 op add *tmp299 90 5
+  716 draw image 11 95 @titanium 16 0
   717 draw color 0 128 0 255
-    * draw rect :drawItem.4:barX :drawItem.4:y :drawItem.4:length 10
+  718 draw rect 22 90 :drawItem.4:length 10
   719 draw color 0 255 0 255
-    * draw lineRect :drawItem.4:barX :drawItem.4:y :drawItem.4:barLength 10
-    * op add *tmp300 :drawItem.4:y 5
-    * op add *tmp301 *tmp300 2
-    * set :drawBold.7:x :drawItem.4:textX
-    * set :drawBold.7:y *tmp301
+  720 draw lineRect 22 90 122 10
+  721 op add *tmp300 90 5
+  722 op add *tmp301 95 2
+  723 set :drawBold.7:x 170
+  724 set :drawBold.7:y 97
   725 set :drawBold.7:alignment @right
-    * set :drawText.19:x :drawBold.7:x
-    * set :drawText.19:y :drawBold.7:y
-    * set :drawText.19:alignment :drawBold.7:alignment
+  726 set :drawText.19:x :drawItem.4:textX
+  727 set :drawText.19:y *tmp301
+  728 set :drawText.19:alignment @right
   729 print "x"
   730 read *tmp302 processor3 ".mapSpots"
   731 print *tmp302
-    * set :drawPrint.19:x :drawText.19:x
-    * set :drawPrint.19:y :drawText.19:y
-    * set :drawPrint.19:alignment :drawText.19:alignment
-    * draw print :drawPrint.19:x :drawPrint.19:y :drawPrint.19:alignment
+  732 set :drawPrint.19:x :drawBold.7:x
+  733 set :drawPrint.19:y :drawBold.7:y
+  734 set :drawPrint.19:alignment :drawBold.7:alignment
+  735 draw print :drawText.19:x :drawText.19:y :drawText.19:alignment
   736 label *label136
   737 label *label135
-    * op add :drawText.20:x :drawBold.7:x 1
-    * set :drawText.20:y :drawBold.7:y
-    * set :drawText.20:alignment :drawBold.7:alignment
+  738 op add :drawText.20:x :drawItem.4:textX 1
+  739 set :drawText.20:y *tmp301
+  740 set :drawText.20:alignment @right
   741 print "x"
   742 read *tmp304 processor3 ".mapSpots"
   743 print *tmp304
   744 set :drawPrint.20:x :drawText.20:x
-    * set :drawPrint.20:y :drawText.20:y
-    * set :drawPrint.20:alignment :drawText.20:alignment
-    * draw print :drawPrint.20:x :drawPrint.20:y :drawPrint.20:alignment
+  745 set :drawPrint.20:y :drawBold.7:y
+  746 set :drawPrint.20:alignment :drawBold.7:alignment
+  747 draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
   748 label *label138
   749 label *label137
   750 label *label134
-    * op add :drawItem.4:col :drawItem.4:col 1
-    * jump *label139 lessThan :drawItem.4:col :drawItem.4:columns
-    * set :drawItem.4:col 0
-    * op sub :drawItem.4:y :drawItem.4:y 15
+  751 op add :drawItem.4:col 0 1
+  752 jump *label139 lessThan 1 1
+  753 op sub :drawItem.4:y 90 15
   754 label *label139
   755 label *label140
   756 label *label133
 
   761 set :drawBold.8:x 22
   762 set :drawBold.8:y 105
   763 set :drawBold.8:alignment @bottomLeft
-    * set :drawText.21:x :drawBold.8:x
-    * set :drawText.21:y :drawBold.8:y
-    * set :drawText.21:alignment :drawBold.8:alignment
+  764 set :drawText.21:x 22
+  765 set :drawText.21:y 105
+  766 set :drawText.21:alignment @bottomLeft
   767 print "Materials"
-    * set :drawPrint.21:x :drawText.21:x
-    * set :drawPrint.21:y :drawText.21:y
-    * set :drawPrint.21:alignment :drawText.21:alignment
-    * draw print :drawPrint.21:x :drawPrint.21:y :drawPrint.21:alignment
+  768 set :drawPrint.21:x :drawBold.8:x
+  769 set :drawPrint.21:y :drawBold.8:y
+  770 set :drawPrint.21:alignment :drawBold.8:alignment
+  771 draw print :drawText.21:x :drawText.21:y :drawText.21:alignment
   772 label *label143
   773 label *label142
-    * op add :drawText.22:x :drawBold.8:x 1
-    * set :drawText.22:y :drawBold.8:y
-    * set :drawText.22:alignment :drawBold.8:alignment
+  774 op add :drawText.22:x 22 1
+  775 set :drawText.22:y 105
+  776 set :drawText.22:alignment @bottomLeft
   777 print "Materials"
-    * set :drawPrint.22:x :drawText.22:x
-    * set :drawPrint.22:y :drawText.22:y
-    * set :drawPrint.22:alignment :drawText.22:alignment
-    * draw print :drawPrint.22:x :drawPrint.22:y :drawPrint.22:alignment
+  778 set :drawPrint.22:x 23
+  779 set :drawPrint.22:y :drawBold.8:y
+  780 set :drawPrint.22:alignment :drawBold.8:alignment
+  781 draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
   782 label *label145
   783 label *label144
   784 label *label141
   785 set :drawMaterials:columns 1
-    * jump *label146 equal :drawMaterials:count false
+  786 jump *label146 equal .materialCount false
   787 set :drawMaterials:item.1 @copper
   788 set :drawMaterials:target.1 .targetCopper
   789 setaddr *tmp310 *label151
 
   822 sensor *tmp313 .core :drawMaterials:item.1
   823 set :drawItem.5:col :drawMaterials:col
   824 set :drawItem.5:y :drawMaterials:y
-    * set :drawItem.5:columns :drawMaterials:columns
+  825 set :drawItem.5:columns 1
   826 set :drawItem.5:item :drawMaterials:item.1
   827 set :drawItem.5:current *tmp313
   828 set :drawItem.5:target :drawMaterials:target.1
-    * op mul *tmp314 :drawItem.5:columns 176
-    * op div *tmp315 *tmp314 2
+  829 op mul *tmp314 :drawMaterials:columns 176
+  830 op mul *tmp315 :drawItem.5:columns 88
   831 op sub :drawItem.5:barLength 210 *tmp315
   832 op add :drawItem.5:textEnd 48 :drawItem.5:barLength
-    * op mul *tmp318 :drawItem.5:barLength :drawItem.5:current
-    * op div *tmp319 *tmp318 :drawItem.5:target
+  833 op mul *tmp318 :drawItem.5:barLength *tmp313
+  834 op div *tmp319 *tmp318 :drawMaterials:target.1
   835 op min :drawItem.5:length :drawItem.5:barLength *tmp319
-    * op mul *tmp321 :drawItem.5:col 176
-    * op div *tmp322 *tmp321 2
+  836 op mul *tmp321 :drawMaterials:col 176
+  837 op mul *tmp322 :drawItem.5:col 88
   838 op add :drawItem.5:iconX 11 *tmp322
-    * op mul *tmp324 :drawItem.5:col 176
-    * op div *tmp325 *tmp324 2
-    * op add :drawItem.5:barX 22 *tmp325
-    * op mul *tmp327 :drawItem.5:col 176
-    * op div *tmp328 *tmp327 2
-    * op add :drawItem.5:textX :drawItem.5:textEnd *tmp328
+  839 op mul *tmp324 :drawMaterials:col 176
+  840 op div *tmp325 *tmp321 2
+  841 op add :drawItem.5:barX 22 *tmp322
+  842 op mul *tmp327 :drawMaterials:col 176
+  843 op div *tmp328 *tmp321 2
+  844 op add :drawItem.5:textX :drawItem.5:textEnd *tmp322
   845 draw col %[white]
-    * op add *tmp330 :drawItem.5:y 5
-    * draw image :drawItem.5:iconX *tmp330 :drawItem.5:item 16 0
+  846 op add *tmp330 :drawMaterials:y 5
+  847 draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
   848 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawItem.5:y :drawItem.5:length 10
+  849 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   850 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawItem.5:y :drawItem.5:barLength 10
-    * op add *tmp331 :drawItem.5:y 5
-    * op add *tmp332 *tmp331 2
+  851 draw lineRect :drawItem.5:barX :drawMaterials:y :drawItem.5:barLength 10
+  852 op add *tmp331 :drawMaterials:y 5
+  853 op add *tmp332 *tmp330 2
   854 set :drawBold.9:x :drawItem.5:textX
   855 set :drawBold.9:y *tmp332
   856 set :drawBold.9:alignment @right
-    * set :drawText.23:x :drawBold.9:x
-    * set :drawText.23:y :drawBold.9:y
-    * set :drawText.23:alignment :drawBold.9:alignment
+  857 set :drawText.23:x :drawItem.5:textX
+  858 set :drawText.23:y *tmp332
+  859 set :drawText.23:alignment @right
   860 print :drawMaterials:target.1
-    * set :drawPrint.23:x :drawText.23:x
-    * set :drawPrint.23:y :drawText.23:y
-    * set :drawPrint.23:alignment :drawText.23:alignment
-    * draw print :drawPrint.23:x :drawPrint.23:y :drawPrint.23:alignment
+  861 set :drawPrint.23:x :drawBold.9:x
+  862 set :drawPrint.23:y :drawBold.9:y
+  863 set :drawPrint.23:alignment :drawBold.9:alignment
+  864 draw print :drawText.23:x :drawText.23:y :drawText.23:alignment
   865 label *label163
   866 label *label162
-    * op add :drawText.24:x :drawBold.9:x 1
-    * set :drawText.24:y :drawBold.9:y
-    * set :drawText.24:alignment :drawBold.9:alignment
+  867 op add :drawText.24:x :drawItem.5:textX 1
+  868 set :drawText.24:y *tmp332
+  869 set :drawText.24:alignment @right
   870 print :drawMaterials:target.1
   871 set :drawPrint.24:x :drawText.24:x
-    * set :drawPrint.24:y :drawText.24:y
-    * set :drawPrint.24:alignment :drawText.24:alignment
-    * draw print :drawPrint.24:x :drawPrint.24:y :drawPrint.24:alignment
+  872 set :drawPrint.24:y :drawBold.9:y
+  873 set :drawPrint.24:alignment :drawBold.9:alignment
+  874 draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
   875 label *label165
   876 label *label164
   877 label *label161
-    * op add :drawItem.5:col :drawItem.5:col 1
-    * jump *label166 lessThan :drawItem.5:col :drawItem.5:columns
+  878 op add :drawItem.5:col :drawMaterials:col 1
+  879 jump *label166 lessThan :drawItem.5:col :drawMaterials:columns
   880 set :drawItem.5:col 0
-    * op sub :drawItem.5:y :drawItem.5:y 15
+  881 op sub :drawItem.5:y :drawMaterials:y 15
   882 label *label166
   883 label *label167
   884 label *label160
 
   909 label *label172
   910 set :drawUnit:y *tmp339
   911 set :drawBold.10:x 22
-    * set :drawBold.10:y :drawUnit:y
+  912 set :drawBold.10:y *tmp339
   913 set :drawBold.10:alignment @bottomLeft
-    * set :drawText.25:x :drawBold.10:x
-    * set :drawText.25:y :drawBold.10:y
-    * set :drawText.25:alignment :drawBold.10:alignment
+  914 set :drawText.25:x 22
+  915 set :drawText.25:y :drawUnit:y
+  916 set :drawText.25:alignment @bottomLeft
   917 print "Builder"
-    * set :drawPrint.25:x :drawText.25:x
-    * set :drawPrint.25:y :drawText.25:y
-    * set :drawPrint.25:alignment :drawText.25:alignment
-    * draw print :drawPrint.25:x :drawPrint.25:y :drawPrint.25:alignment
+  918 set :drawPrint.25:x :drawBold.10:x
+  919 set :drawPrint.25:y :drawBold.10:y
+  920 set :drawPrint.25:alignment :drawBold.10:alignment
+  921 draw print :drawText.25:x :drawText.25:y :drawText.25:alignment
   922 label *label175
   923 label *label174
-    * op add :drawText.26:x :drawBold.10:x 1
-    * set :drawText.26:y :drawBold.10:y
-    * set :drawText.26:alignment :drawBold.10:alignment
+  924 op add :drawText.26:x 22 1
+  925 set :drawText.26:y :drawUnit:y
+  926 set :drawText.26:alignment @bottomLeft
   927 print "Builder"
-    * set :drawPrint.26:x :drawText.26:x
-    * set :drawPrint.26:y :drawText.26:y
-    * set :drawPrint.26:alignment :drawText.26:alignment
-    * draw print :drawPrint.26:x :drawPrint.26:y :drawPrint.26:alignment
+  928 set :drawPrint.26:x 23
+  929 set :drawPrint.26:y :drawBold.10:y
+  930 set :drawPrint.26:alignment :drawBold.10:alignment
+  931 draw print :drawText.26:x :drawText.26:y :drawText.26:alignment
   932 label *label177
   933 label *label176
   934 label *label173
   935 jump *label178 notEqual .transportItem null
-    * op sub *tmp343 :drawUnit:y 15
+  936 op sub *tmp343 *tmp339 15
   937 set :drawUnit.1:item @poly
   938 set :drawUnit.1:items 0
   939 set :drawUnit.1:y *tmp343
   940 set :drawItem.6:col 0
-    * set :drawItem.6:y :drawUnit.1:y
+  941 set :drawItem.6:y *tmp343
   942 set :drawItem.6:columns 1
-    * set :drawItem.6:item :drawUnit.1:item
-    * set :drawItem.6:current :drawUnit.1:items
+  943 set :drawItem.6:item @poly
+  944 set :drawItem.6:current 0
   945 set :drawItem.6:target .transportTarget
-    * op mul *tmp344 :drawItem.6:columns 176
-    * op div *tmp345 *tmp344 2
-    * op sub :drawItem.6:barLength 210 *tmp345
-    * op add :drawItem.6:textEnd 48 :drawItem.6:barLength
-    * op mul *tmp348 :drawItem.6:barLength :drawItem.6:current
+  946 op mul *tmp344 1 176
+  947 op div *tmp345 176 2
+  948 op sub :drawItem.6:barLength 210 88
+  949 op add :drawItem.6:textEnd 48 122
+  950 op mul *tmp348 122 :drawUnit.1:items
   951 op div *tmp349 *tmp348 :drawItem.6:target
-    * op min :drawItem.6:length :drawItem.6:barLength *tmp349
-    * op mul *tmp351 :drawItem.6:col 176
-    * op div *tmp352 *tmp351 2
-    * op add :drawItem.6:iconX 11 *tmp352
-    * op mul *tmp354 :drawItem.6:col 176
-    * op div *tmp355 *tmp354 2
-    * op add :drawItem.6:barX 22 *tmp355
-    * op mul *tmp357 :drawItem.6:col 176
-    * op div *tmp358 *tmp357 2
-    * op add :drawItem.6:textX :drawItem.6:textEnd *tmp358
+  952 op min :drawItem.6:length 122 *tmp349
+  953 op mul *tmp351 0 176
+  954 op div *tmp352 0 2
+  955 op add :drawItem.6:iconX 11 0
+  956 op mul *tmp354 0 176
+  957 op div *tmp355 0 2
+  958 op add :drawItem.6:barX 22 0
+  959 op mul *tmp357 0 176
+  960 op div *tmp358 0 2
+  961 op add :drawItem.6:textX 170 0
   962 draw col %[white]
-    * op add *tmp360 :drawItem.6:y 5
-    * draw image :drawItem.6:iconX *tmp360 :drawItem.6:item 16 0
+  963 op add *tmp360 :drawUnit.1:y 5
+  964 draw image 11 *tmp360 :drawUnit.1:item 16 0
   965 draw color 0 128 0 255
-    * draw rect :drawItem.6:barX :drawItem.6:y :drawItem.6:length 10
+  966 draw rect 22 :drawUnit.1:y :drawItem.6:length 10
   967 draw color 0 255 0 255
-    * draw lineRect :drawItem.6:barX :drawItem.6:y :drawItem.6:barLength 10
-    * op add *tmp361 :drawItem.6:y 5
-    * op add *tmp362 *tmp361 2
-    * set :drawBold.11:x :drawItem.6:textX
+  968 draw lineRect 22 :drawUnit.1:y 122 10
+  969 op add *tmp361 :drawUnit.1:y 5
+  970 op add *tmp362 *tmp360 2
+  971 set :drawBold.11:x 170
   972 set :drawBold.11:y *tmp362
   973 set :drawBold.11:alignment @right
-    * set :drawText.27:x :drawBold.11:x
-    * set :drawText.27:y :drawBold.11:y
-    * set :drawText.27:alignment :drawBold.11:alignment
+  974 set :drawText.27:x :drawItem.6:textX
+  975 set :drawText.27:y *tmp362
+  976 set :drawText.27:alignment @right
   977 print .transportTarget
-    * set :drawPrint.27:x :drawText.27:x
-    * set :drawPrint.27:y :drawText.27:y
-    * set :drawPrint.27:alignment :drawText.27:alignment
-    * draw print :drawPrint.27:x :drawPrint.27:y :drawPrint.27:alignment
+  978 set :drawPrint.27:x :drawBold.11:x
+  979 set :drawPrint.27:y :drawBold.11:y
+  980 set :drawPrint.27:alignment :drawBold.11:alignment
+  981 draw print :drawText.27:x :drawText.27:y :drawText.27:alignment
   982 label *label184
   983 label *label183
-    * op add :drawText.28:x :drawBold.11:x 1
-    * set :drawText.28:y :drawBold.11:y
-    * set :drawText.28:alignment :drawBold.11:alignment
+  984 op add :drawText.28:x :drawItem.6:textX 1
+  985 set :drawText.28:y *tmp362
+  986 set :drawText.28:alignment @right
   987 print .transportTarget
   988 set :drawPrint.28:x :drawText.28:x
-    * set :drawPrint.28:y :drawText.28:y
-    * set :drawPrint.28:alignment :drawText.28:alignment
-    * draw print :drawPrint.28:x :drawPrint.28:y :drawPrint.28:alignment
+  989 set :drawPrint.28:y :drawBold.11:y
+  990 set :drawPrint.28:alignment :drawBold.11:alignment
+  991 draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
   992 label *label186
   993 label *label185
   994 label *label182
-    * op add :drawItem.6:col :drawItem.6:col 1
-    * jump *label187 lessThan :drawItem.6:col :drawItem.6:columns
-    * set :drawItem.6:col 0
-    * op sub :drawItem.6:y :drawItem.6:y 15
+  995 op add :drawItem.6:col 0 1
+  996 jump *label187 lessThan 1 1
+  997 op sub :drawItem.6:y :drawUnit.1:y 15
   998 label *label187
   999 label *label188
  1000 label *label181
-    * set :drawUnit.1:y :drawItem.6:y
  1001 label *label180
  1002 jump *label179 always
  1003 label *label178
 
  1005 sensor *tmp369 @unit @totalItems
  1006 op equal *tmp370 :drawUnit:unitItem .transportItem
  1007 op mul *tmp371 *tmp369 *tmp370
-    * op sub *tmp372 :drawUnit:y 15
+ 1008 op sub *tmp372 *tmp339 15
  1009 set :drawUnit.2:item .transportItem
  1010 set :drawUnit.2:items *tmp371
  1011 set :drawUnit.2:y *tmp372
  1012 set :drawItem.7:col 0
-    * set :drawItem.7:y :drawUnit.2:y
+ 1013 set :drawItem.7:y *tmp372
  1014 set :drawItem.7:columns 1
  1015 set :drawItem.7:item :drawUnit.2:item
-    * set :drawItem.7:current :drawUnit.2:items
+ 1016 set :drawItem.7:current *tmp371
  1017 set :drawItem.7:target .transportTarget
-    * op mul *tmp373 :drawItem.7:columns 176
-    * op div *tmp374 *tmp373 2
-    * op sub :drawItem.7:barLength 210 *tmp374
-    * op add :drawItem.7:textEnd 48 :drawItem.7:barLength
-    * op mul *tmp377 :drawItem.7:barLength :drawItem.7:current
+ 1018 op mul *tmp373 1 176
+ 1019 op div *tmp374 176 2
+ 1020 op sub :drawItem.7:barLength 210 88
+ 1021 op add :drawItem.7:textEnd 48 122
+ 1022 op mul *tmp377 122 :drawUnit.2:items
  1023 op div *tmp378 *tmp377 :drawItem.7:target
-    * op min :drawItem.7:length :drawItem.7:barLength *tmp378
-    * op mul *tmp380 :drawItem.7:col 176
-    * op div *tmp381 *tmp380 2
-    * op add :drawItem.7:iconX 11 *tmp381
-    * op mul *tmp383 :drawItem.7:col 176
-    * op div *tmp384 *tmp383 2
-    * op add :drawItem.7:barX 22 *tmp384
-    * op mul *tmp386 :drawItem.7:col 176
-    * op div *tmp387 *tmp386 2
-    * op add :drawItem.7:textX :drawItem.7:textEnd *tmp387
+ 1024 op min :drawItem.7:length 122 *tmp378
+ 1025 op mul *tmp380 0 176
+ 1026 op div *tmp381 0 2
+ 1027 op add :drawItem.7:iconX 11 0
+ 1028 op mul *tmp383 0 176
+ 1029 op div *tmp384 0 2
+ 1030 op add :drawItem.7:barX 22 0
+ 1031 op mul *tmp386 0 176
+ 1032 op div *tmp387 0 2
+ 1033 op add :drawItem.7:textX 170 0
  1034 draw col %[white]
-    * op add *tmp389 :drawItem.7:y 5
-    * draw image :drawItem.7:iconX *tmp389 :drawItem.7:item 16 0
+ 1035 op add *tmp389 :drawUnit.2:y 5
+ 1036 draw image 11 *tmp389 :drawUnit.2:item 16 0
  1037 draw color 0 128 0 255
-    * draw rect :drawItem.7:barX :drawItem.7:y :drawItem.7:length 10
+ 1038 draw rect 22 :drawUnit.2:y :drawItem.7:length 10
  1039 draw color 0 255 0 255
-    * draw lineRect :drawItem.7:barX :drawItem.7:y :drawItem.7:barLength 10
-    * op add *tmp390 :drawItem.7:y 5
-    * op add *tmp391 *tmp390 2
-    * set :drawBold.12:x :drawItem.7:textX
+ 1040 draw lineRect 22 :drawUnit.2:y 122 10
+ 1041 op add *tmp390 :drawUnit.2:y 5
+ 1042 op add *tmp391 *tmp389 2
+ 1043 set :drawBold.12:x 170
  1044 set :drawBold.12:y *tmp391
  1045 set :drawBold.12:alignment @right
-    * set :drawText.29:x :drawBold.12:x
-    * set :drawText.29:y :drawBold.12:y
-    * set :drawText.29:alignment :drawBold.12:alignment
+ 1046 set :drawText.29:x :drawItem.7:textX
+ 1047 set :drawText.29:y *tmp391
+ 1048 set :drawText.29:alignment @right
  1049 print .transportTarget
-    * set :drawPrint.29:x :drawText.29:x
-    * set :drawPrint.29:y :drawText.29:y
-    * set :drawPrint.29:alignment :drawText.29:alignment
-    * draw print :drawPrint.29:x :drawPrint.29:y :drawPrint.29:alignment
+ 1050 set :drawPrint.29:x :drawBold.12:x
+ 1051 set :drawPrint.29:y :drawBold.12:y
+ 1052 set :drawPrint.29:alignment :drawBold.12:alignment
+ 1053 draw print :drawText.29:x :drawText.29:y :drawText.29:alignment
  1054 label *label193
  1055 label *label192
-    * op add :drawText.30:x :drawBold.12:x 1
-    * set :drawText.30:y :drawBold.12:y
-    * set :drawText.30:alignment :drawBold.12:alignment
+ 1056 op add :drawText.30:x :drawItem.7:textX 1
+ 1057 set :drawText.30:y *tmp391
+ 1058 set :drawText.30:alignment @right
  1059 print .transportTarget
  1060 set :drawPrint.30:x :drawText.30:x
-    * set :drawPrint.30:y :drawText.30:y
-    * set :drawPrint.30:alignment :drawText.30:alignment
-    * draw print :drawPrint.30:x :drawPrint.30:y :drawPrint.30:alignment
+ 1061 set :drawPrint.30:y :drawBold.12:y
+ 1062 set :drawPrint.30:alignment :drawBold.12:alignment
+ 1063 draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
  1064 label *label195
  1065 label *label194
  1066 label *label191
-    * op add :drawItem.7:col :drawItem.7:col 1
-    * jump *label196 lessThan :drawItem.7:col :drawItem.7:columns
-    * set :drawItem.7:col 0
-    * op sub :drawItem.7:y :drawItem.7:y 15
+ 1067 op add :drawItem.7:col 0 1
+ 1068 jump *label196 lessThan 1 1
+ 1069 op sub :drawItem.7:y :drawUnit.2:y 15
  1070 label *label196
  1071 label *label197
  1072 label *label190
-    * set :drawUnit.2:y :drawItem.7:y
  1073 label *label189
  1074 label *label179
  1075 label *label170
 
  1078 set :drawUnitCount:type @poly
  1079 set :drawUnitCount:count .polys
  1080 jump *label200 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp399 :drawUnits:x 20
-    * draw image *tmp399 127 :drawUnitCount:type 12 0
-    * set :drawText.31:x :drawUnits:x
+ 1081 op sub *tmp399 170 20
+ 1082 draw image 150 127 @poly 12 0
+ 1083 set :drawText.31:x 170
  1084 set :drawText.31:y 129
  1085 set :drawText.31:alignment @right
  1086 print "x"
  1087 print :drawUnitCount:count
-    * set :drawPrint.31:x :drawText.31:x
-    * set :drawPrint.31:y :drawText.31:y
-    * set :drawPrint.31:alignment :drawText.31:alignment
-    * draw print :drawPrint.31:x :drawPrint.31:y :drawPrint.31:alignment
+ 1088 set :drawPrint.31:x :drawUnits:x
+ 1089 set :drawPrint.31:y 129
+ 1090 set :drawPrint.31:alignment @right
+ 1091 draw print :drawText.31:x :drawText.31:y :drawText.31:alignment
  1092 label *label203
  1093 label *label202
-    * op sub :drawUnits:x :drawUnits:x 30
+ 1094 op sub :drawUnits:x 170 30
  1095 label *label200
  1096 label *label201
  1097 label *label199
 
  1099 set :drawUnitCount.1:count .monos
  1100 jump *label205 lessThanEq :drawUnitCount.1:count 0
  1101 op sub *tmp402 :drawUnits:x 20
-    * draw image *tmp402 127 :drawUnitCount.1:type 12 0
+ 1102 draw image *tmp402 127 @mono 12 0
  1103 set :drawText.32:x :drawUnits:x
  1104 set :drawText.32:y 129
  1105 set :drawText.32:alignment @right
  1106 print "x"
  1107 print :drawUnitCount.1:count
-    * set :drawPrint.32:x :drawText.32:x
-    * set :drawPrint.32:y :drawText.32:y
-    * set :drawPrint.32:alignment :drawText.32:alignment
-    * draw print :drawPrint.32:x :drawPrint.32:y :drawPrint.32:alignment
+ 1108 set :drawPrint.32:x :drawUnits:x
+ 1109 set :drawPrint.32:y 129
+ 1110 set :drawPrint.32:alignment @right
+ 1111 draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
  1112 label *label208
  1113 label *label207
  1114 op sub :drawUnits:x :drawUnits:x 30
 
  1119 set :drawUnitCount.2:count .flares
  1120 jump *label210 lessThanEq :drawUnitCount.2:count 0
  1121 op sub *tmp405 :drawUnits:x 20
-    * draw image *tmp405 127 :drawUnitCount.2:type 12 0
+ 1122 draw image *tmp405 127 @flare 12 0
  1123 set :drawText.33:x :drawUnits:x
  1124 set :drawText.33:y 129
  1125 set :drawText.33:alignment @right
  1126 print "x"
  1127 print :drawUnitCount.2:count
-    * set :drawPrint.33:x :drawText.33:x
-    * set :drawPrint.33:y :drawText.33:y
-    * set :drawPrint.33:alignment :drawText.33:alignment
-    * draw print :drawPrint.33:x :drawPrint.33:y :drawPrint.33:alignment
+ 1128 set :drawPrint.33:x :drawUnits:x
+ 1129 set :drawPrint.33:y 129
+ 1130 set :drawPrint.33:alignment @right
+ 1131 draw print :drawText.33:x :drawText.33:y :drawText.33:alignment
  1132 label *label213
  1133 label *label212
-    * op sub :drawUnits:x :drawUnits:x 30
  1134 label *label210
  1135 label *label211
  1136 label *label209
 
  1148 set :drawText.34:y 172
  1149 set :drawText.34:alignment @topRight
  1150 print "Base map"
-    * set :drawPrint.34:x :drawText.34:x
-    * set :drawPrint.34:y :drawText.34:y
-    * set :drawPrint.34:alignment :drawText.34:alignment
-    * draw print :drawPrint.34:x :drawPrint.34:y :drawPrint.34:alignment
+ 1151 set :drawPrint.34:x 172
+ 1152 set :drawPrint.34:y 172
+ 1153 set :drawPrint.34:alignment @topRight
+ 1154 draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
  1155 label *label218
  1156 label *label217
  1157 draw col %[white]
 
  1322 set :displayLog:y 163
  1323 read :displayLog:logPosition bank1 511
  1324 op sub :displayLog:records 511 :displayLog:logPosition
-    * op sub *tmp419 :displayLog:records 1
+ 1325 op sub *tmp419 510 :displayLog:logPosition
  1326 op idiv *tmp420 *tmp419 32
  1327 op add *tmp421 *tmp420 1
  1328 op max :displayLog:pages 1 *tmp421
 
  1332 op sub *tmp426 :displayLog:start 32
  1333 op max :displayLog:stop :displayLog:logPosition *tmp426
  1334 draw col %[lightgray]
-    * op add *tmp428 :displayLog:page 1
+ 1335 op sub *tmp428 .page 1
  1336 print *tmp428
  1337 print "/"
  1338 set :drawText.35:x 172
  1339 set :drawText.35:y 4
  1340 set :drawText.35:alignment @bottomRight
  1341 print :displayLog:pages
-    * set :drawPrint.35:x :drawText.35:x
-    * set :drawPrint.35:y :drawText.35:y
-    * set :drawPrint.35:alignment :drawText.35:alignment
-    * draw print :drawPrint.35:x :drawPrint.35:y :drawPrint.35:alignment
+ 1342 set :drawPrint.35:x 172
+ 1343 set :drawPrint.35:y 4
+ 1344 set :drawPrint.35:alignment @bottomRight
+ 1345 draw print :drawText.35:x :drawText.35:y :drawText.35:alignment
  1346 label *label264
  1347 label *label263
  1348 draw col %[white]
  1349 set *tmp429 :displayLog:stop
  1350 op sub :displayLog:position :displayLog:start 1
  1351 label *label265
-    * jump *label267 lessThan :displayLog:position *tmp429
+ 1352 jump *label267 lessThan :displayLog:position :displayLog:stop
  1353 read :displayLog:record bank1 :displayLog:position
  1354 set :displayRecord:record :displayLog:record
-    * op mod :displayRecord:id :displayRecord:record 1000
+ 1355 op mod :displayRecord:id :displayLog:record 1000
  1356 jump *label269 lessThanEq :displayRecord:id @blockCount
  1357 op sub *tmp435 :displayRecord:id @blockCount
  1358 lookup unit *tmp434 *tmp435
 
  1361 lookup block *tmp434 :displayRecord:id
  1362 label *label270
  1363 set :displayRecord:icon *tmp434
-    * op div *tmp438 :displayRecord:record 1000
+ 1364 op div *tmp438 :displayLog:record 1000
  1365 op idiv :displayRecord:t *tmp438 120
  1366 op idiv :displayRecord:m :displayRecord:t 60
  1367 op mod :displayRecord:s :displayRecord:t 60
 
  1374 print :displayRecord:m
  1375 print ":"
  1376 print *tmp444
-    * set :displayRecordAt:image :displayRecord:icon
+ 1377 set :displayRecordAt:image *tmp434
  1378 set :displayRecordAt:text :displayRecord:s
-    * draw image :displayLog:x :displayLog:y :displayRecordAt:image 14 0
+ 1379 draw image :displayLog:x :displayLog:y :displayRecord:icon 14 0
  1380 op add *tmp445 :displayLog:x 56
-    * op sub *tmp446 *tmp445 12
+ 1381 op add *tmp446 :displayLog:x 44
  1382 op add *tmp447 :displayLog:y 2
  1383 set :drawText.36:x *tmp446
  1384 set :drawText.36:y *tmp447
  1385 set :drawText.36:alignment @right
-    * print :displayRecordAt:text
-    * set :drawPrint.36:x :drawText.36:x
-    * set :drawPrint.36:y :drawText.36:y
-    * set :drawPrint.36:alignment :drawText.36:alignment
-    * draw print :drawPrint.36:x :drawPrint.36:y :drawPrint.36:alignment
+ 1386 print :displayRecord:s
+ 1387 set :drawPrint.36:x *tmp446
+ 1388 set :drawPrint.36:y *tmp447
+ 1389 set :drawPrint.36:alignment @right
+ 1390 draw print :drawText.36:x :drawText.36:y :drawText.36:alignment
  1391 label *label275
  1392 label *label274
  1393 op sub :displayLog:y :displayLog:y 15
 
  1457 end
  1458 label *label4
  1459 set :unpackCfg2:cfg :drawBlock:cfg
-    * set :unpackCfg:cfg :unpackCfg2:cfg
+ 1460 set :unpackCfg:cfg :drawBlock:cfg
  1461 set :unpackCfg:index 1
-    * set *tmp461 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp462 :unpackCfg:cfg *tmp461
+ 1462 set *tmp461 1
+ 1463 op add :unpackCfg:index 1 1
+ 1464 read *tmp462 :unpackCfg2:cfg *tmp461
  1465 op sub *tmp463 *tmp462 74
  1466 lookup block :unpackCfg:type *tmp463
-    * set *tmp465 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp466 :unpackCfg:cfg *tmp465
+ 1467 set *tmp465 2
+ 1468 op add :unpackCfg:index 2 1
+ 1469 read *tmp466 :unpackCfg2:cfg *tmp465
  1470 op sub *tmp467 *tmp466 74
  1471 op div :unpackCfg:x *tmp467 2
-    * set *tmp469 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp470 :unpackCfg:cfg *tmp469
+ 1472 set *tmp469 3
+ 1473 op add :unpackCfg:index 3 1
+ 1474 read *tmp470 :unpackCfg2:cfg *tmp469
  1475 op sub *tmp471 *tmp470 74
  1476 op div :unpackCfg:y *tmp471 2
-    * set *tmp473 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp474 :unpackCfg:cfg *tmp473
+ 1477 set *tmp473 4
+ 1478 op add :unpackCfg:index 4 1
+ 1479 read *tmp474 :unpackCfg2:cfg *tmp473
  1480 op sub :unpackCfg:rotation *tmp474 74
-    * set *tmp476 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp477 :unpackCfg:cfg *tmp476
+ 1481 set *tmp476 5
+ 1482 op add :unpackCfg:index 5 1
+ 1483 read *tmp477 :unpackCfg2:cfg *tmp476
  1484 op sub :unpackCfg:ind *tmp477 74
  1485 sensor :unpackCfg:size :unpackCfg:type @size
  1486 label *label287
 
  1491 set :unpackCfg2:size :unpackCfg:size
  1492 set :unpackCfg2:index :unpackCfg:ind
  1493 label *label286
-    * set :drawBlock:type :unpackCfg2:type
-    * set :drawBlock:x :unpackCfg2:x
-    * set :drawBlock:y :unpackCfg2:y
-    * set :drawBlock:rotation :unpackCfg2:rotation
-    * set :drawBlock:size :unpackCfg2:size
-    * set :drawBlock:index :unpackCfg2:index
-    * op or *tmp487 :drawBlock:x :drawBlock:y
+ 1494 set :drawBlock:type :unpackCfg:type
+ 1495 set :drawBlock:x :unpackCfg:x
+ 1496 set :drawBlock:y :unpackCfg:y
+ 1497 set :drawBlock:rotation :unpackCfg:rotation
+ 1498 set :drawBlock:size :unpackCfg:size
+ 1499 set :drawBlock:index :unpackCfg:ind
+ 1500 op or *tmp487 :unpackCfg2:x :unpackCfg2:y
  1501 jump *label288 equal *tmp487 false
-    * op shl *tmp489 1 :drawBlock:index
+ 1502 op shl *tmp489 1 :unpackCfg2:index
  1503 op and *tmp490 .blocksBuilt *tmp489
  1504 jump *label290 equal *tmp490 false
  1505 draw col %[white]
 
  1507 label *label290
  1508 draw color 128 255 128 128
  1509 label *label291
-    * op mul *tmp492 2 :drawBlock:x
-    * op mul *tmp493 2 :drawBlock:y
-    * op mul *tmp494 2 :drawBlock:size
-    * op mul *tmp495 90 :drawBlock:rotation
-    * draw image *tmp492 *tmp493 :drawBlock:type *tmp494 *tmp495
+ 1510 op mul *tmp492 2 :unpackCfg2:x
+ 1511 op mul *tmp493 2 :unpackCfg2:y
+ 1512 op mul *tmp494 2 :unpackCfg2:size
+ 1513 op mul *tmp495 90 :unpackCfg2:rotation
+ 1514 draw image *tmp492 *tmp493 :unpackCfg2:type *tmp494 *tmp495
  1515 label *label288
  1516 label *label289
  1517 label *label285

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-219 instructions):
 
    13 set .polyTarget 0
    14 set .megaTarget 0
    15 set .animation -15
-    * set .mapw @mapw
-    * set .maph @maph
    16 set .pageSwitched false
    17 set *signature "0:v1"
    18 label *label7
 
    41 set :drawText:y 172
    42 set :drawText:alignment @topLeft
    43 print "Map"
-    * set :drawPrint:x 4
-    * set :drawPrint:y 172
-    * set :drawPrint:alignment @topLeft
-    * draw print :drawText:x :drawText:y :drawText:alignment
+   44 draw print 4 172 @topLeft
    45 label *label22
    46 label *label21
    47 draw col %[white]
 
    54 draw image .coreX .coreY @core-shard *tmp54 0
    55 set :displayOreMap:index -1
    56 read :displayOreMap:count processor3 ".locations"
-    * set *tmp55 :displayOreMap:count
    57 set :displayOreMap:i 0
    58 label *label23
    59 jump *label25 greaterThanEq :displayOreMap:i :displayOreMap:count
 
    66 op sub *tmp61 0 :displayOreMap:id
    67 lookup block *tmp59 *tmp61
    68 label *label27
-    * set :displayOreMap:img *tmp59
    69 op add :displayOreMap:index :displayOreMap:index 1
    70 read *tmp64 bank1 :displayOreMap:index
    71 op sqrt *tmp65 *tmp64
 
    94 set :drawText.1:y 172
    95 set :drawText.1:alignment @topRight
    96 print :displayOreMap:index
-    * set :drawPrint.1:x 175
-    * set :drawPrint.1:y 172
-    * set :drawPrint.1:alignment @topRight
-    * draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
+   97 draw print 175 172 @topRight
    98 label *label29
    99 label *label28
   100 drawflush display1
 
   115 op div *tmp84 .animation 30
   116 op min *tmp85 *tmp84 1
   117 op max :animate:ratio 0 *tmp85
-    * set :lerp:from 40
-    * set :lerp:to 88
-    * set :lerp:ratio :animate:ratio
   118 op sub *tmp88 1 :animate:ratio
   119 op mul *tmp89 *tmp88 40
   120 op mul *tmp90 :animate:ratio 88
   121 op add *tmp87 *tmp89 *tmp90
   122 label *label37
-    * set :animate:x *tmp87
-    * set :lerp.1:from 137
-    * set :lerp.1:to 88
-    * set :lerp.1:ratio :animate:ratio
-    * op sub *tmp93 1 :animate:ratio
   123 op mul *tmp94 *tmp88 137
   124 op mul *tmp95 :animate:ratio 88
-    * op add *tmp92 *tmp94 *tmp95
+  125 op add *tmp92 *tmp94 *tmp90
   126 label *label38
-    * set :animate:y *tmp92
-    * set :lerp.2:from 32
-    * set :lerp.2:to 168
-    * set :lerp.2:ratio :animate:ratio
-    * op sub *tmp98 1 :animate:ratio
   127 op mul *tmp99 *tmp88 32
   128 op mul *tmp100 :animate:ratio 168
   129 op add *tmp97 *tmp99 *tmp100
   130 label *label39
-    * set :animate:size *tmp97
   131 draw image *tmp87 *tmp92 @mega *tmp97 0
   132 drawflush display1
   133 op add .animation .animation 1
 
   144 set :drawText.2:y 161
   145 set :drawText.2:alignment @bottom
   146 print "Goal"
-    * set :drawPrint.2:x :drawBold:x
-    * set :drawPrint.2:y :drawBold:y
-    * set :drawPrint.2:alignment :drawBold:alignment
-    * draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
+  147 set :drawPrint.2:x 40
+  148 set :drawPrint.2:y 161
+  149 set :drawPrint.2:alignment @bottom
+  150 draw print 40 161 @bottom
   151 label *label44
   152 label *label43
   153 op add :drawText.3:x 40 1
   154 set :drawText.3:y 161
   155 set :drawText.3:alignment @bottom
   156 print "Goal"
-    * set :drawPrint.3:x 41
-    * set :drawPrint.3:y :drawBold:y
-    * set :drawPrint.3:alignment :drawBold:alignment
-    * draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
+  157 set :drawPrint.3:y 161
+  158 set :drawPrint.3:alignment @bottom
+  159 draw print 41 161 @bottom
   160 label *label46
   161 label *label45
   162 label *label42
 
   211 set :drawText.4:y 172
   212 set :drawText.4:alignment @topRight
   213 print ")"
-    * set :drawPrint.4:x 170
-    * set :drawPrint.4:y 172
-    * set :drawPrint.4:alignment @topRight
-    * draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
+  214 draw print 170 172 @topRight
   215 label *label56
   216 label *label55
   217 jump *label57 equal .titaniumDrill false
 
   225 set :drawText.5:alignment @topRight
   226 print "x"
   227 print :drawHeader:count
-    * set :drawPrint.5:x :drawHeader:x
-    * set :drawPrint.5:y 155
-    * set :drawPrint.5:alignment @topRight
-    * draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
+  228 set :drawPrint.5:x 170
+  229 draw print 170 155 @topRight
   230 label *label60
   231 label *label59
-    * op sub *tmp131 170 20
   232 op mul *tmp132 7 :drawHeader:len
   233 op sub *tmp133 150 *tmp132
   234 draw image *tmp133 146 @titanium 12 0
 
   244 set :drawText.6:alignment @topRight
   245 print "x"
   246 print :drawHeader:count
-    * set :drawPrint.6:x :drawHeader:x.1
-    * set :drawPrint.6:y 155
-    * set :drawPrint.6:alignment @topRight
-    * draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
+  247 set :drawPrint.6:x 120
+  248 draw print 120 155 @topRight
   249 label *label64
   250 label *label63
-    * op sub *tmp138 120 20
   251 op mul *tmp139 7 :drawHeader:len.1
   252 op sub *tmp140 100 *tmp139
   253 draw image *tmp140 146 @thorium 12 0
 
   320 set :drawText.7:y 105
   321 set :drawText.7:alignment @bottomLeft
   322 print "Unit factories"
-    * set :drawPrint.7:x :drawBold.1:x
-    * set :drawPrint.7:y :drawBold.1:y
-    * set :drawPrint.7:alignment :drawBold.1:alignment
-    * draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
+  323 set :drawPrint.7:x 22
+  324 set :drawPrint.7:y 105
+  325 set :drawPrint.7:alignment @bottomLeft
+  326 draw print 22 105 @bottomLeft
   327 label *label78
   328 label *label77
   329 op add :drawText.8:x 22 1
   330 set :drawText.8:y 105
   331 set :drawText.8:alignment @bottomLeft
   332 print "Unit factories"
-    * set :drawPrint.8:x 23
-    * set :drawPrint.8:y :drawBold.1:y
-    * set :drawPrint.8:alignment :drawBold.1:alignment
-    * draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
+  333 set :drawPrint.8:y 105
+  334 set :drawPrint.8:alignment @bottomLeft
+  335 draw print 23 105 @bottomLeft
   336 label *label80
   337 label *label79
   338 label *label76
   339 jump *label81 lessThanEq .factoryProgress 0
-    * set :drawItem:col 0
-    * set :drawItem:y 90
-    * set :drawItem:columns 1
-    * set :drawItem:item :drawMaterials:unit1
-    * set :drawItem:current .factoryProgress
-    * set :drawItem:target 1
-    * op mul *tmp178 1 176
-    * op div *tmp179 176 2
-    * op sub :drawItem:barLength 210 88
-    * op add :drawItem:textEnd 48 122
   340 op mul *tmp182 122 .factoryProgress
-    * op div *tmp183 *tmp182 1
+  341 op mul *tmp183 .factoryProgress 122
   342 op min :drawItem:length 122 *tmp183
-    * op mul *tmp185 0 176
-    * op div *tmp186 0 2
-    * op add :drawItem:iconX 11 0
-    * op mul *tmp188 0 176
-    * op div *tmp189 0 2
-    * op add :drawItem:barX 22 0
-    * op mul *tmp191 0 176
-    * op div *tmp192 0 2
   343 op add :drawItem:textX 170 0
   344 draw col %[white]
-    * op add *tmp194 90 5
   345 draw image 11 95 :drawMaterials:unit1 16 0
   346 draw color 0 128 0 255
   347 draw rect 22 90 :drawItem:length 10
   348 draw color 0 255 0 255
   349 draw lineRect 22 90 122 10
-    * op add *tmp195 90 5
   350 op add *tmp196 95 2
   351 set :drawBold.2:x 170
   352 set :drawBold.2:y 97
   353 set :drawBold.2:alignment @right
-    * set :drawText.9:x :drawItem:textX
-    * set :drawText.9:y *tmp196
+  354 set :drawText.9:x 170
+  355 set :drawText.9:y 97
   356 set :drawText.9:alignment @right
   357 print :drawMaterials:unitCount1
   358 print "/"
   359 print :drawMaterials:unitTotal1
-    * set :drawPrint.9:x :drawBold.2:x
-    * set :drawPrint.9:y :drawBold.2:y
-    * set :drawPrint.9:alignment :drawBold.2:alignment
-    * draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
+  360 set :drawPrint.9:x 170
+  361 set :drawPrint.9:y 97
+  362 set :drawPrint.9:alignment @right
+  363 draw print :drawItem:textX *tmp196 @right
   364 label *label86
   365 label *label85
-    * op add :drawText.10:x :drawItem:textX 1
-    * set :drawText.10:y *tmp196
+  366 op add :drawText.10:x 170 1
+  367 set :drawText.10:y 97
   368 set :drawText.10:alignment @right
   369 print :drawMaterials:unitCount1
   370 print "/"
   371 print :drawMaterials:unitTotal1
-    * set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawBold.2:y
-    * set :drawPrint.10:alignment :drawBold.2:alignment
-    * draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
+  372 set :drawPrint.10:x 171
+  373 set :drawPrint.10:y 97
+  374 set :drawPrint.10:alignment @right
+  375 draw print 171 *tmp196 @right
   376 label *label88
   377 label *label87
   378 label *label84
-    * op add :drawItem:col 0 1
   379 jump *label89 lessThan 1 1
-    * op sub :drawItem:y 90 15
   380 label *label89
   381 label *label90
   382 label *label83
   383 jump *label91 equal :drawMaterials:unit2 null
-    * set :drawItem.1:col 0
-    * set :drawItem.1:y 75
-    * set :drawItem.1:columns 1
-    * set :drawItem.1:item :drawMaterials:unit2
-    * set :drawItem.1:current .reconstructorProgress
-    * set :drawItem.1:target 1
-    * op mul *tmp202 1 176
-    * op div *tmp203 176 2
-    * op sub :drawItem.1:barLength 210 88
-    * op add :drawItem.1:textEnd 48 122
   384 op mul *tmp206 122 .reconstructorProgress
-    * op div *tmp207 *tmp206 1
+  385 op mul *tmp207 .reconstructorProgress 122
   386 op min :drawItem.1:length 122 *tmp207
-    * op mul *tmp209 0 176
-    * op div *tmp210 0 2
-    * op add :drawItem.1:iconX 11 0
-    * op mul *tmp212 0 176
-    * op div *tmp213 0 2
-    * op add :drawItem.1:barX 22 0
-    * op mul *tmp215 0 176
-    * op div *tmp216 0 2
   387 op add :drawItem.1:textX 170 0
   388 draw col %[white]
-    * op add *tmp218 75 5
   389 draw image 11 80 :drawMaterials:unit2 16 0
   390 draw color 0 128 0 255
   391 draw rect 22 75 :drawItem.1:length 10
   392 draw color 0 255 0 255
   393 draw lineRect 22 75 122 10
-    * op add *tmp219 75 5
   394 op add *tmp220 80 2
   395 set :drawBold.3:x 170
   396 set :drawBold.3:y 82
   397 set :drawBold.3:alignment @right
-    * set :drawText.11:x :drawItem.1:textX
-    * set :drawText.11:y *tmp220
+  398 set :drawText.11:x 170
+  399 set :drawText.11:y 82
   400 set :drawText.11:alignment @right
   401 print :drawMaterials:unitCount2
   402 print "/"
   403 print :drawMaterials:unitTotal2
-    * set :drawPrint.11:x :drawBold.3:x
-    * set :drawPrint.11:y :drawBold.3:y
-    * set :drawPrint.11:alignment :drawBold.3:alignment
-    * draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
+  404 set :drawPrint.11:x 170
+  405 set :drawPrint.11:y 82
+  406 set :drawPrint.11:alignment @right
+  407 draw print :drawItem.1:textX *tmp220 @right
   408 label *label96
   409 label *label95
-    * op add :drawText.12:x :drawItem.1:textX 1
-    * set :drawText.12:y *tmp220
+  410 op add :drawText.12:x 170 1
+  411 set :drawText.12:y 82
   412 set :drawText.12:alignment @right
   413 print :drawMaterials:unitCount2
   414 print "/"
   415 print :drawMaterials:unitTotal2
-    * set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawBold.3:y
-    * set :drawPrint.12:alignment :drawBold.3:alignment
-    * draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
+  416 set :drawPrint.12:x 171
+  417 set :drawPrint.12:y 82
+  418 set :drawPrint.12:alignment @right
+  419 draw print 171 *tmp220 @right
   420 label *label98
   421 label *label97
   422 label *label94
-    * op add :drawItem.1:col 0 1
   423 jump *label99 lessThan 1 1
-    * op sub :drawItem.1:y 75 15
   424 label *label99
   425 label *label100
   426 label *label93
   427 jump *label101 equal :drawMaterials:unit3 null
-    * set :drawItem.2:col 0
-    * set :drawItem.2:y 60
-    * set :drawItem.2:columns 1
-    * set :drawItem.2:item :drawMaterials:unit3
-    * set :drawItem.2:current :drawMaterials:multiReconstructorProgress
-    * set :drawItem.2:target 1
-    * op mul *tmp226 1 176
-    * op div *tmp227 176 2
-    * op sub :drawItem.2:barLength 210 88
-    * op add :drawItem.2:textEnd 48 122
   428 op mul *tmp230 122 :drawMaterials:multiReconstructorProgress
-    * op div *tmp231 *tmp230 1
+  429 op mul *tmp231 :drawMaterials:multiReconstructorProgress 122
   430 op min :drawItem.2:length 122 *tmp231
-    * op mul *tmp233 0 176
-    * op div *tmp234 0 2
-    * op add :drawItem.2:iconX 11 0
-    * op mul *tmp236 0 176
-    * op div *tmp237 0 2
-    * op add :drawItem.2:barX 22 0
-    * op mul *tmp239 0 176
-    * op div *tmp240 0 2
   431 op add :drawItem.2:textX 170 0
   432 draw col %[white]
-    * op add *tmp242 60 5
   433 draw image 11 65 :drawMaterials:unit3 16 0
   434 draw color 0 128 0 255
   435 draw rect 22 60 :drawItem.2:length 10
   436 draw color 0 255 0 255
   437 draw lineRect 22 60 122 10
-    * op add *tmp243 60 5
   438 op add *tmp244 65 2
   439 set :drawBold.4:x 170
   440 set :drawBold.4:y 67
   441 set :drawBold.4:alignment @right
-    * set :drawText.13:x :drawItem.2:textX
-    * set :drawText.13:y *tmp244
+  442 set :drawText.13:x 170
+  443 set :drawText.13:y 67
   444 set :drawText.13:alignment @right
   445 print .megas
   446 print "/"
   447 print .megaTarget
-    * set :drawPrint.13:x :drawBold.4:x
-    * set :drawPrint.13:y :drawBold.4:y
-    * set :drawPrint.13:alignment :drawBold.4:alignment
-    * draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
+  448 set :drawPrint.13:x 170
+  449 set :drawPrint.13:y 67
+  450 set :drawPrint.13:alignment @right
+  451 draw print :drawItem.2:textX *tmp244 @right
   452 label *label106
   453 label *label105
-    * op add :drawText.14:x :drawItem.2:textX 1
-    * set :drawText.14:y *tmp244
+  454 op add :drawText.14:x 170 1
+  455 set :drawText.14:y 67
   456 set :drawText.14:alignment @right
   457 print .megas
   458 print "/"
   459 print .megaTarget
-    * set :drawPrint.14:x :drawText.14:x
-    * set :drawPrint.14:y :drawBold.4:y
-    * set :drawPrint.14:alignment :drawBold.4:alignment
-    * draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
+  460 set :drawPrint.14:x 171
+  461 set :drawPrint.14:y 67
+  462 set :drawPrint.14:alignment @right
+  463 draw print 171 *tmp244 @right
   464 label *label108
   465 label *label107
   466 label *label104
-    * op add :drawItem.2:col 0 1
   467 jump *label109 lessThan 1 1
-    * op sub :drawItem.2:y 60 15
   468 label *label109
   469 label *label110
   470 label *label103
 
   487 sensor *tmp253 A¾BHMW-air-factory13 :drawMaterials:item
   488 set :drawItem.3:col :drawMaterials:col
   489 set :drawItem.3:y :drawMaterials:y
-    * set :drawItem.3:columns 1
-    * set :drawItem.3:item :drawMaterials:item
-    * set :drawItem.3:current *tmp253
-    * set :drawItem.3:target :drawMaterials:target
-    * op mul *tmp254 1 176
-    * op div *tmp255 176 2
-    * op sub :drawItem.3:barLength 210 88
-    * op add :drawItem.3:textEnd 48 122
   490 op mul *tmp258 122 *tmp253
   491 op div *tmp259 *tmp258 :drawMaterials:target
   492 op min :drawItem.3:length 122 *tmp259
   493 op mul *tmp261 :drawMaterials:col 176
-    * op mul *tmp262 :drawItem.3:col 88
+  494 op mul *tmp262 :drawMaterials:col 88
   495 op add :drawItem.3:iconX 11 *tmp262
-    * op mul *tmp264 :drawMaterials:col 176
-    * op div *tmp265 *tmp261 2
+  496 op mul *tmp265 :drawMaterials:col 88
   497 op add :drawItem.3:barX 22 *tmp262
-    * op mul *tmp267 :drawMaterials:col 176
-    * op div *tmp268 *tmp261 2
+  498 op mul *tmp268 :drawMaterials:col 88
   499 op add :drawItem.3:textX 170 *tmp262
   500 draw col %[white]
   501 op add *tmp270 :drawMaterials:y 5
 
   504 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
   505 draw color 0 255 0 255
   506 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
-    * op add *tmp271 :drawMaterials:y 5
-    * op add *tmp272 *tmp270 2
+  507 op add *tmp272 :drawMaterials:y 7
   508 set :drawBold.5:x :drawItem.3:textX
   509 set :drawBold.5:y *tmp272
   510 set :drawBold.5:alignment @right
 
   512 set :drawText.15:y *tmp272
   513 set :drawText.15:alignment @right
   514 print :drawMaterials:target
-    * set :drawPrint.15:x :drawBold.5:x
-    * set :drawPrint.15:y :drawBold.5:y
-    * set :drawPrint.15:alignment :drawBold.5:alignment
-    * draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
+  515 set :drawPrint.15:x :drawItem.3:textX
+  516 set :drawPrint.15:y *tmp272
+  517 set :drawPrint.15:alignment @right
+  518 draw print :drawItem.3:textX *tmp272 @right
   519 label *label121
   520 label *label120
-    * op add :drawText.16:x :drawItem.3:textX 1
+  521 op add :drawText.16:x *tmp262 171
   522 set :drawText.16:y *tmp272
   523 set :drawText.16:alignment @right
   524 print :drawMaterials:target
-    * set :drawPrint.16:x :drawText.16:x
-    * set :drawPrint.16:y :drawBold.5:y
-    * set :drawPrint.16:alignment :drawBold.5:alignment
-    * draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
+  525 set :drawPrint.16:y *tmp272
+  526 set :drawPrint.16:alignment @right
+  527 draw print :drawText.16:x *tmp272 @right
   528 label *label123
   529 label *label122
   530 label *label119
 
   558 set :drawText.17:alignment @bottomLeft
   559 read *tmp280 processor3 ".mapAction"
   560 print *tmp280
-    * set :drawPrint.17:x :drawBold.6:x
-    * set :drawPrint.17:y :drawBold.6:y
-    * set :drawPrint.17:alignment :drawBold.6:alignment
-    * draw print :drawText.17:x :drawText.17:y :drawText.17:alignment
+  561 set :drawPrint.17:x 22
+  562 set :drawPrint.17:y 105
+  563 set :drawPrint.17:alignment @bottomLeft
+  564 draw print 22 105 @bottomLeft
   565 label *label130
   566 label *label129
   567 op add :drawText.18:x 22 1
 
   569 set :drawText.18:alignment @bottomLeft
   570 read *tmp282 processor3 ".mapAction"
   571 print *tmp282
-    * set :drawPrint.18:x 23
-    * set :drawPrint.18:y :drawBold.6:y
-    * set :drawPrint.18:alignment :drawBold.6:alignment
-    * draw print :drawText.18:x :drawText.18:y :drawText.18:alignment
+  572 set :drawPrint.18:y 105
+  573 set :drawPrint.18:alignment @bottomLeft
+  574 draw print 23 105 @bottomLeft
   575 label *label132
   576 label *label131
   577 label *label128
-    * set :drawItem.4:col 0
-    * set :drawItem.4:y 90
-    * set :drawItem.4:columns 1
-    * set :drawItem.4:item @titanium
   578 read :drawItem.4:current processor3 ".mapProgress"
   579 read :drawItem.4:target processor3 ".mapTotal"
-    * op mul *tmp283 1 176
-    * op div *tmp284 176 2
-    * op sub :drawItem.4:barLength 210 88
-    * op add :drawItem.4:textEnd 48 122
   580 op mul *tmp287 122 :drawItem.4:current
   581 op div *tmp288 *tmp287 :drawItem.4:target
   582 op min :drawItem.4:length 122 *tmp288
-    * op mul *tmp290 0 176
-    * op div *tmp291 0 2
-    * op add :drawItem.4:iconX 11 0
-    * op mul *tmp293 0 176
-    * op div *tmp294 0 2
-    * op add :drawItem.4:barX 22 0
-    * op mul *tmp296 0 176
-    * op div *tmp297 0 2
   583 op add :drawItem.4:textX 170 0
   584 draw col %[white]
-    * op add *tmp299 90 5
   585 draw image 11 95 @titanium 16 0
   586 draw color 0 128 0 255
   587 draw rect 22 90 :drawItem.4:length 10
   588 draw color 0 255 0 255
   589 draw lineRect 22 90 122 10
-    * op add *tmp300 90 5
   590 op add *tmp301 95 2
   591 set :drawBold.7:x 170
   592 set :drawBold.7:y 97
   593 set :drawBold.7:alignment @right
-    * set :drawText.19:x :drawItem.4:textX
-    * set :drawText.19:y *tmp301
+  594 set :drawText.19:x 170
+  595 set :drawText.19:y 97
   596 set :drawText.19:alignment @right
   597 print "x"
   598 read *tmp302 processor3 ".mapSpots"
   599 print *tmp302
-    * set :drawPrint.19:x :drawBold.7:x
-    * set :drawPrint.19:y :drawBold.7:y
-    * set :drawPrint.19:alignment :drawBold.7:alignment
-    * draw print :drawText.19:x :drawText.19:y :drawText.19:alignment
+  600 set :drawPrint.19:x 170
+  601 set :drawPrint.19:y 97
+  602 set :drawPrint.19:alignment @right
+  603 draw print :drawItem.4:textX *tmp301 @right
   604 label *label136
   605 label *label135
-    * op add :drawText.20:x :drawItem.4:textX 1
-    * set :drawText.20:y *tmp301
+  606 op add :drawText.20:x 170 1
+  607 set :drawText.20:y 97
   608 set :drawText.20:alignment @right
   609 print "x"
   610 read *tmp304 processor3 ".mapSpots"
   611 print *tmp304
-    * set :drawPrint.20:x :drawText.20:x
-    * set :drawPrint.20:y :drawBold.7:y
-    * set :drawPrint.20:alignment :drawBold.7:alignment
-    * draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
+  612 set :drawPrint.20:x 171
+  613 set :drawPrint.20:y 97
+  614 set :drawPrint.20:alignment @right
+  615 draw print 171 *tmp301 @right
   616 label *label138
   617 label *label137
   618 label *label134
-    * op add :drawItem.4:col 0 1
   619 jump *label139 lessThan 1 1
-    * op sub :drawItem.4:y 90 15
   620 label *label139
   621 label *label140
   622 label *label133
 
   631 set :drawText.21:y 105
   632 set :drawText.21:alignment @bottomLeft
   633 print "Materials"
-    * set :drawPrint.21:x :drawBold.8:x
-    * set :drawPrint.21:y :drawBold.8:y
-    * set :drawPrint.21:alignment :drawBold.8:alignment
-    * draw print :drawText.21:x :drawText.21:y :drawText.21:alignment
+  634 set :drawPrint.21:x 22
+  635 set :drawPrint.21:y 105
+  636 set :drawPrint.21:alignment @bottomLeft
+  637 draw print 22 105 @bottomLeft
   638 label *label143
   639 label *label142
   640 op add :drawText.22:x 22 1
   641 set :drawText.22:y 105
   642 set :drawText.22:alignment @bottomLeft
   643 print "Materials"
-    * set :drawPrint.22:x 23
-    * set :drawPrint.22:y :drawBold.8:y
-    * set :drawPrint.22:alignment :drawBold.8:alignment
-    * draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
+  644 set :drawPrint.22:y 105
+  645 set :drawPrint.22:alignment @bottomLeft
+  646 draw print 23 105 @bottomLeft
   647 label *label145
   648 label *label144
   649 label *label141
 
   688 set :drawItem.5:col :drawMaterials:col
   689 set :drawItem.5:y :drawMaterials:y
   690 set :drawItem.5:columns 1
-    * set :drawItem.5:item :drawMaterials:item.1
-    * set :drawItem.5:current *tmp313
-    * set :drawItem.5:target :drawMaterials:target.1
-    * op mul *tmp314 :drawMaterials:columns 176
-    * op mul *tmp315 :drawItem.5:columns 88
-    * op sub :drawItem.5:barLength 210 *tmp315
-    * op add :drawItem.5:textEnd 48 :drawItem.5:barLength
-    * op mul *tmp318 :drawItem.5:barLength *tmp313
+  691 op mul *tmp314 1 176
+  692 op mul *tmp315 1 88
+  693 op sub :drawItem.5:barLength 210 88
+  694 op add :drawItem.5:textEnd 48 122
+  695 op mul *tmp318 122 *tmp313
   696 op div *tmp319 *tmp318 :drawMaterials:target.1
-    * op min :drawItem.5:length :drawItem.5:barLength *tmp319
+  697 op min :drawItem.5:length 122 *tmp319
   698 op mul *tmp321 :drawMaterials:col 176
-    * op mul *tmp322 :drawItem.5:col 88
+  699 op mul *tmp322 :drawMaterials:col 88
   700 op add :drawItem.5:iconX 11 *tmp322
-    * op mul *tmp324 :drawMaterials:col 176
-    * op div *tmp325 *tmp321 2
+  701 op mul *tmp325 :drawMaterials:col 88
   702 op add :drawItem.5:barX 22 *tmp322
-    * op mul *tmp327 :drawMaterials:col 176
-    * op div *tmp328 *tmp321 2
-    * op add :drawItem.5:textX :drawItem.5:textEnd *tmp322
+  703 op mul *tmp328 :drawMaterials:col 88
+  704 op add :drawItem.5:textX 170 *tmp322
   705 draw col %[white]
   706 op add *tmp330 :drawMaterials:y 5
   707 draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
   708 draw color 0 128 0 255
   709 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   710 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y :drawItem.5:barLength 10
-    * op add *tmp331 :drawMaterials:y 5
-    * op add *tmp332 *tmp330 2
+  711 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  712 op add *tmp332 :drawMaterials:y 7
   713 set :drawBold.9:x :drawItem.5:textX
   714 set :drawBold.9:y *tmp332
   715 set :drawBold.9:alignment @right
 
   717 set :drawText.23:y *tmp332
   718 set :drawText.23:alignment @right
   719 print :drawMaterials:target.1
-    * set :drawPrint.23:x :drawBold.9:x
-    * set :drawPrint.23:y :drawBold.9:y
-    * set :drawPrint.23:alignment :drawBold.9:alignment
-    * draw print :drawText.23:x :drawText.23:y :drawText.23:alignment
+  720 set :drawPrint.23:x :drawItem.5:textX
+  721 set :drawPrint.23:y *tmp332
+  722 set :drawPrint.23:alignment @right
+  723 draw print :drawItem.5:textX *tmp332 @right
   724 label *label163
   725 label *label162
   726 op add :drawText.24:x :drawItem.5:textX 1
   727 set :drawText.24:y *tmp332
   728 set :drawText.24:alignment @right
   729 print :drawMaterials:target.1
-    * set :drawPrint.24:x :drawText.24:x
-    * set :drawPrint.24:y :drawBold.9:y
-    * set :drawPrint.24:alignment :drawBold.9:alignment
-    * draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
+  730 set :drawPrint.24:y *tmp332
+  731 set :drawPrint.24:alignment @right
+  732 draw print :drawText.24:x *tmp332 @right
   733 label *label165
   734 label *label164
   735 label *label161
   736 op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label166 lessThan :drawItem.5:col :drawMaterials:columns
+  737 jump *label166 lessThan :drawItem.5:col 1
   738 set :drawItem.5:col 0
   739 op sub :drawItem.5:y :drawMaterials:y 15
   740 label *label166
 
   770 set :drawBold.10:y *tmp339
   771 set :drawBold.10:alignment @bottomLeft
   772 set :drawText.25:x 22
-    * set :drawText.25:y :drawUnit:y
+  773 set :drawText.25:y *tmp339
   774 set :drawText.25:alignment @bottomLeft
   775 print "Builder"
-    * set :drawPrint.25:x :drawBold.10:x
-    * set :drawPrint.25:y :drawBold.10:y
-    * set :drawPrint.25:alignment :drawBold.10:alignment
-    * draw print :drawText.25:x :drawText.25:y :drawText.25:alignment
+  776 set :drawPrint.25:x 22
+  777 set :drawPrint.25:y *tmp339
+  778 set :drawPrint.25:alignment @bottomLeft
+  779 draw print 22 :drawUnit:y @bottomLeft
   780 label *label175
   781 label *label174
   782 op add :drawText.26:x 22 1
-    * set :drawText.26:y :drawUnit:y
+  783 set :drawText.26:y *tmp339
   784 set :drawText.26:alignment @bottomLeft
   785 print "Builder"
-    * set :drawPrint.26:x 23
-    * set :drawPrint.26:y :drawBold.10:y
-    * set :drawPrint.26:alignment :drawBold.10:alignment
-    * draw print :drawText.26:x :drawText.26:y :drawText.26:alignment
+  786 set :drawPrint.26:y *tmp339
+  787 set :drawPrint.26:alignment @bottomLeft
+  788 draw print 23 :drawUnit:y @bottomLeft
   789 label *label177
   790 label *label176
   791 label *label173
 
   794 set :drawUnit.1:item @poly
   795 set :drawUnit.1:items 0
   796 set :drawUnit.1:y *tmp343
-    * set :drawItem.6:col 0
-    * set :drawItem.6:y *tmp343
-    * set :drawItem.6:columns 1
-    * set :drawItem.6:item @poly
-    * set :drawItem.6:current 0
   797 set :drawItem.6:target .transportTarget
-    * op mul *tmp344 1 176
-    * op div *tmp345 176 2
-    * op sub :drawItem.6:barLength 210 88
-    * op add :drawItem.6:textEnd 48 122
-    * op mul *tmp348 122 :drawUnit.1:items
-    * op div *tmp349 *tmp348 :drawItem.6:target
+  798 op mul *tmp348 122 0
+  799 op div *tmp349 0 :drawItem.6:target
   800 op min :drawItem.6:length 122 *tmp349
-    * op mul *tmp351 0 176
-    * op div *tmp352 0 2
-    * op add :drawItem.6:iconX 11 0
-    * op mul *tmp354 0 176
-    * op div *tmp355 0 2
-    * op add :drawItem.6:barX 22 0
-    * op mul *tmp357 0 176
-    * op div *tmp358 0 2
   801 op add :drawItem.6:textX 170 0
   802 draw col %[white]
-    * op add *tmp360 :drawUnit.1:y 5
-    * draw image 11 *tmp360 :drawUnit.1:item 16 0
+  803 op add *tmp360 *tmp343 5
+  804 draw image 11 *tmp360 @poly 16 0
   805 draw color 0 128 0 255
-    * draw rect 22 :drawUnit.1:y :drawItem.6:length 10
+  806 draw rect 22 *tmp343 :drawItem.6:length 10
   807 draw color 0 255 0 255
-    * draw lineRect 22 :drawUnit.1:y 122 10
-    * op add *tmp361 :drawUnit.1:y 5
-    * op add *tmp362 *tmp360 2
+  808 draw lineRect 22 *tmp343 122 10
+  809 op add *tmp361 *tmp343 5
+  810 op add *tmp362 :drawUnit.1:y 7
   811 set :drawBold.11:x 170
   812 set :drawBold.11:y *tmp362
   813 set :drawBold.11:alignment @right
-    * set :drawText.27:x :drawItem.6:textX
+  814 set :drawText.27:x 170
   815 set :drawText.27:y *tmp362
   816 set :drawText.27:alignment @right
   817 print .transportTarget
-    * set :drawPrint.27:x :drawBold.11:x
-    * set :drawPrint.27:y :drawBold.11:y
-    * set :drawPrint.27:alignment :drawBold.11:alignment
-    * draw print :drawText.27:x :drawText.27:y :drawText.27:alignment
+  818 set :drawPrint.27:x 170
+  819 set :drawPrint.27:y *tmp362
+  820 set :drawPrint.27:alignment @right
+  821 draw print :drawItem.6:textX *tmp362 @right
   822 label *label184
   823 label *label183
-    * op add :drawText.28:x :drawItem.6:textX 1
+  824 op add :drawText.28:x 170 1
   825 set :drawText.28:y *tmp362
   826 set :drawText.28:alignment @right
   827 print .transportTarget
-    * set :drawPrint.28:x :drawText.28:x
-    * set :drawPrint.28:y :drawBold.11:y
-    * set :drawPrint.28:alignment :drawBold.11:alignment
-    * draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
+  828 set :drawPrint.28:x 171
+  829 set :drawPrint.28:y *tmp362
+  830 set :drawPrint.28:alignment @right
+  831 draw print 171 *tmp362 @right
   832 label *label186
   833 label *label185
   834 label *label182
-    * op add :drawItem.6:col 0 1
   835 jump *label187 lessThan 1 1
-    * op sub :drawItem.6:y :drawUnit.1:y 15
+  836 op sub :drawItem.6:y *tmp343 15
   837 label *label187
   838 label *label188
   839 label *label181
 
   848 set :drawUnit.2:item .transportItem
   849 set :drawUnit.2:items *tmp371
   850 set :drawUnit.2:y *tmp372
-    * set :drawItem.7:col 0
-    * set :drawItem.7:y *tmp372
-    * set :drawItem.7:columns 1
-    * set :drawItem.7:item :drawUnit.2:item
-    * set :drawItem.7:current *tmp371
   851 set :drawItem.7:target .transportTarget
-    * op mul *tmp373 1 176
-    * op div *tmp374 176 2
-    * op sub :drawItem.7:barLength 210 88
-    * op add :drawItem.7:textEnd 48 122
-    * op mul *tmp377 122 :drawUnit.2:items
+  852 op mul *tmp377 122 *tmp371
   853 op div *tmp378 *tmp377 :drawItem.7:target
   854 op min :drawItem.7:length 122 *tmp378
-    * op mul *tmp380 0 176
-    * op div *tmp381 0 2
-    * op add :drawItem.7:iconX 11 0
-    * op mul *tmp383 0 176
-    * op div *tmp384 0 2
-    * op add :drawItem.7:barX 22 0
-    * op mul *tmp386 0 176
-    * op div *tmp387 0 2
   855 op add :drawItem.7:textX 170 0
   856 draw col %[white]
-    * op add *tmp389 :drawUnit.2:y 5
+  857 op add *tmp389 *tmp372 5
   858 draw image 11 *tmp389 :drawUnit.2:item 16 0
   859 draw color 0 128 0 255
-    * draw rect 22 :drawUnit.2:y :drawItem.7:length 10
+  860 draw rect 22 *tmp372 :drawItem.7:length 10
   861 draw color 0 255 0 255
-    * draw lineRect 22 :drawUnit.2:y 122 10
-    * op add *tmp390 :drawUnit.2:y 5
-    * op add *tmp391 *tmp389 2
+  862 draw lineRect 22 *tmp372 122 10
+  863 op add *tmp390 *tmp372 5
+  864 op add *tmp391 :drawUnit.2:y 7
   865 set :drawBold.12:x 170
   866 set :drawBold.12:y *tmp391
   867 set :drawBold.12:alignment @right
-    * set :drawText.29:x :drawItem.7:textX
+  868 set :drawText.29:x 170
   869 set :drawText.29:y *tmp391
   870 set :drawText.29:alignment @right
   871 print .transportTarget
-    * set :drawPrint.29:x :drawBold.12:x
-    * set :drawPrint.29:y :drawBold.12:y
-    * set :drawPrint.29:alignment :drawBold.12:alignment
-    * draw print :drawText.29:x :drawText.29:y :drawText.29:alignment
+  872 set :drawPrint.29:x 170
+  873 set :drawPrint.29:y *tmp391
+  874 set :drawPrint.29:alignment @right
+  875 draw print :drawItem.7:textX *tmp391 @right
   876 label *label193
   877 label *label192
-    * op add :drawText.30:x :drawItem.7:textX 1
+  878 op add :drawText.30:x 170 1
   879 set :drawText.30:y *tmp391
   880 set :drawText.30:alignment @right
   881 print .transportTarget
-    * set :drawPrint.30:x :drawText.30:x
-    * set :drawPrint.30:y :drawBold.12:y
-    * set :drawPrint.30:alignment :drawBold.12:alignment
-    * draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
+  882 set :drawPrint.30:x 171
+  883 set :drawPrint.30:y *tmp391
+  884 set :drawPrint.30:alignment @right
+  885 draw print 171 *tmp391 @right
   886 label *label195
   887 label *label194
   888 label *label191
-    * op add :drawItem.7:col 0 1
   889 jump *label196 lessThan 1 1
-    * op sub :drawItem.7:y :drawUnit.2:y 15
+  890 op sub :drawItem.7:y *tmp372 15
   891 label *label196
   892 label *label197
   893 label *label190
 
   896 label *label170
   897 set :drawUnits:x 170
   898 draw col %[white]
-    * set :drawUnitCount:type @poly
   899 set :drawUnitCount:count .polys
   900 jump *label200 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp399 170 20
   901 draw image 150 127 @poly 12 0
   902 set :drawText.31:x 170
   903 set :drawText.31:y 129
   904 set :drawText.31:alignment @right
   905 print "x"
   906 print :drawUnitCount:count
-    * set :drawPrint.31:x :drawUnits:x
-    * set :drawPrint.31:y 129
-    * set :drawPrint.31:alignment @right
-    * draw print :drawText.31:x :drawText.31:y :drawText.31:alignment
+  907 set :drawPrint.31:x 170
+  908 draw print 170 129 @right
   909 label *label203
   910 label *label202
   911 op sub :drawUnits:x 170 30
   912 label *label200
   913 label *label201
   914 label *label199
-    * set :drawUnitCount.1:type @mono
   915 set :drawUnitCount.1:count .monos
   916 jump *label205 lessThanEq :drawUnitCount.1:count 0
   917 op sub *tmp402 :drawUnits:x 20
 
   921 set :drawText.32:alignment @right
   922 print "x"
   923 print :drawUnitCount.1:count
-    * set :drawPrint.32:x :drawUnits:x
-    * set :drawPrint.32:y 129
-    * set :drawPrint.32:alignment @right
-    * draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
+  924 draw print :drawUnits:x 129 @right
   925 label *label208
   926 label *label207
   927 op sub :drawUnits:x :drawUnits:x 30
   928 label *label205
   929 label *label206
   930 label *label204
-    * set :drawUnitCount.2:type @flare
   931 set :drawUnitCount.2:count .flares
   932 jump *label210 lessThanEq :drawUnitCount.2:count 0
   933 op sub *tmp405 :drawUnits:x 20
 
   937 set :drawText.33:alignment @right
   938 print "x"
   939 print :drawUnitCount.2:count
-    * set :drawPrint.33:x :drawUnits:x
-    * set :drawPrint.33:y 129
-    * set :drawPrint.33:alignment @right
-    * draw print :drawText.33:x :drawText.33:y :drawText.33:alignment
+  940 draw print :drawUnits:x 129 @right
   941 label *label213
   942 label *label212
   943 label *label210
 
   957 set :drawText.34:y 172
   958 set :drawText.34:alignment @topRight
   959 print "Base map"
-    * set :drawPrint.34:x 172
-    * set :drawPrint.34:y 172
-    * set :drawPrint.34:alignment @topRight
-    * draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
+  960 draw print 172 172 @topRight
   961 label *label218
   962 label *label217
   963 draw col %[white]
 
  1127 set :displayLog:x 11
  1128 set :displayLog:y 163
  1129 read :displayLog:logPosition bank1 511
-    * op sub :displayLog:records 511 :displayLog:logPosition
  1130 op sub *tmp419 510 :displayLog:logPosition
  1131 op idiv *tmp420 *tmp419 32
  1132 op add *tmp421 *tmp420 1
 
  1144 set :drawText.35:y 4
  1145 set :drawText.35:alignment @bottomRight
  1146 print :displayLog:pages
-    * set :drawPrint.35:x 172
-    * set :drawPrint.35:y 4
-    * set :drawPrint.35:alignment @bottomRight
-    * draw print :drawText.35:x :drawText.35:y :drawText.35:alignment
+ 1147 draw print 172 4 @bottomRight
  1148 label *label264
  1149 label *label263
  1150 draw col %[white]
-    * set *tmp429 :displayLog:stop
  1151 op sub :displayLog:position :displayLog:start 1
  1152 label *label265
  1153 jump *label267 lessThan :displayLog:position :displayLog:stop
  1154 read :displayLog:record bank1 :displayLog:position
-    * set :displayRecord:record :displayLog:record
  1155 op mod :displayRecord:id :displayLog:record 1000
  1156 jump *label269 lessThanEq :displayRecord:id @blockCount
  1157 op sub *tmp435 :displayRecord:id @blockCount
 
  1174 print :displayRecord:m
  1175 print ":"
  1176 print *tmp444
-    * set :displayRecordAt:image *tmp434
-    * set :displayRecordAt:text :displayRecord:s
-    * draw image :displayLog:x :displayLog:y :displayRecord:icon 14 0
-    * op add *tmp445 :displayLog:x 56
+ 1177 draw image :displayLog:x :displayLog:y *tmp434 14 0
  1178 op add *tmp446 :displayLog:x 44
  1179 op add *tmp447 :displayLog:y 2
  1180 set :drawText.36:x *tmp446
  1181 set :drawText.36:y *tmp447
  1182 set :drawText.36:alignment @right
  1183 print :displayRecord:s
-    * set :drawPrint.36:x *tmp446
-    * set :drawPrint.36:y *tmp447
-    * set :drawPrint.36:alignment @right
-    * draw print :drawText.36:x :drawText.36:y :drawText.36:alignment
+ 1184 draw print *tmp446 *tmp447 @right
  1185 label *label275
  1186 label *label274
  1187 op sub :displayLog:y :displayLog:y 15
 
  1251 end
  1252 label *label4
  1253 set :unpackCfg2:cfg :drawBlock:cfg
-    * set :unpackCfg:cfg :drawBlock:cfg
-    * set :unpackCfg:index 1
  1254 set *tmp461 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp462 :unpackCfg2:cfg *tmp461
+ 1255 read *tmp462 :drawBlock:cfg 1
  1256 op sub *tmp463 *tmp462 74
  1257 lookup block :unpackCfg:type *tmp463
  1258 set *tmp465 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp466 :unpackCfg2:cfg *tmp465
+ 1259 read *tmp466 :drawBlock:cfg 2
  1260 op sub *tmp467 *tmp466 74
  1261 op div :unpackCfg:x *tmp467 2
  1262 set *tmp469 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp470 :unpackCfg2:cfg *tmp469
+ 1263 read *tmp470 :drawBlock:cfg 3
  1264 op sub *tmp471 *tmp470 74
  1265 op div :unpackCfg:y *tmp471 2
  1266 set *tmp473 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp474 :unpackCfg2:cfg *tmp473
+ 1267 read *tmp474 :drawBlock:cfg 4
  1268 op sub :unpackCfg:rotation *tmp474 74
  1269 set *tmp476 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp477 :unpackCfg2:cfg *tmp476
+ 1270 read *tmp477 :drawBlock:cfg 5
  1271 op sub :unpackCfg:ind *tmp477 74
  1272 sensor :unpackCfg:size :unpackCfg:type @size
  1273 label *label287
 
  1278 set :unpackCfg2:size :unpackCfg:size
  1279 set :unpackCfg2:index :unpackCfg:ind
  1280 label *label286
-    * set :drawBlock:type :unpackCfg:type
-    * set :drawBlock:x :unpackCfg:x
-    * set :drawBlock:y :unpackCfg:y
-    * set :drawBlock:rotation :unpackCfg:rotation
-    * set :drawBlock:size :unpackCfg:size
-    * set :drawBlock:index :unpackCfg:ind
-    * op or *tmp487 :unpackCfg2:x :unpackCfg2:y
+ 1281 op or *tmp487 :unpackCfg:x :unpackCfg:y
  1282 jump *label288 equal *tmp487 false
-    * op shl *tmp489 1 :unpackCfg2:index
+ 1283 op shl *tmp489 1 :unpackCfg:ind
  1284 op and *tmp490 .blocksBuilt *tmp489
  1285 jump *label290 equal *tmp490 false
  1286 draw col %[white]
 
  1288 label *label290
  1289 draw color 128 255 128 128
  1290 label *label291
-    * op mul *tmp492 2 :unpackCfg2:x
-    * op mul *tmp493 2 :unpackCfg2:y
-    * op mul *tmp494 2 :unpackCfg2:size
-    * op mul *tmp495 90 :unpackCfg2:rotation
-    * draw image *tmp492 *tmp493 :unpackCfg2:type *tmp494 *tmp495
+ 1291 op mul *tmp492 2 :unpackCfg:x
+ 1292 op mul *tmp493 2 :unpackCfg:y
+ 1293 op mul *tmp494 2 :unpackCfg:size
+ 1294 op mul *tmp495 90 :unpackCfg:rotation
+ 1295 draw image *tmp492 *tmp493 :unpackCfg:type *tmp494 *tmp495
  1296 label *label288
  1297 label *label289
  1298 label *label285

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-256 instructions):
 
    37 draw reset
    38 draw clear 0 0 32
    39 draw col %[gold]
-    * set :drawText:x 4
-    * set :drawText:y 172
-    * set :drawText:alignment @topLeft
    40 print "Map"
    41 draw print 4 172 @topLeft
    42 label *label22
 
    87 draw image *tmp75 *tmp76 @laser-drill *tmp77 0
    88 draw reset
    89 draw col %[white]
-    * set :drawText.1:x 175
-    * set :drawText.1:y 172
-    * set :drawText.1:alignment @topRight
    90 print :displayOreMap:index
    91 draw print 175 172 @topRight
    92 label *label29
 
   115 op add *tmp87 *tmp89 *tmp90
   116 label *label37
   117 op mul *tmp94 *tmp88 137
-    * op mul *tmp95 :animate:ratio 88
   118 op add *tmp92 *tmp94 *tmp90
   119 label *label38
   120 op mul *tmp99 *tmp88 32
 
   130 draw reset
   131 draw clear 0 0 32
   132 draw col %[gold]
-    * set :drawBold:x 40
-    * set :drawBold:y 161
-    * set :drawBold:alignment @bottom
-    * set :drawText.2:x 40
-    * set :drawText.2:y 161
-    * set :drawText.2:alignment @bottom
   133 print "Goal"
-    * set :drawPrint.2:x 40
-    * set :drawPrint.2:y 161
-    * set :drawPrint.2:alignment @bottom
   134 draw print 40 161 @bottom
   135 label *label44
   136 label *label43
-    * op add :drawText.3:x 40 1
-    * set :drawText.3:y 161
-    * set :drawText.3:alignment @bottom
   137 print "Goal"
-    * set :drawPrint.3:y 161
-    * set :drawPrint.3:alignment @bottom
   138 draw print 41 161 @bottom
   139 label *label46
   140 label *label45
 
   186 print *tmp124
   187 print "."
   188 print *tmp125
-    * set :drawText.4:x 170
-    * set :drawText.4:y 172
-    * set :drawText.4:alignment @topRight
   189 print ")"
   190 draw print 170 172 @topRight
   191 label *label56
 
   193 jump *label57 equal .titaniumDrill false
   194 sensor *tmp127 .titaniumDrill @titanium
   195 op max :drawHeader:count .titaniumDrillCount *tmp127
-    * set :drawHeader:x 170
   196 op log10 *tmp129 :drawHeader:count
   197 op floor :drawHeader:len *tmp129
-    * set :drawText.5:x 170
-    * set :drawText.5:y 155
-    * set :drawText.5:alignment @topRight
   198 print "x"
   199 print :drawHeader:count
-    * set :drawPrint.5:x 170
   200 draw print 170 155 @topRight
   201 label *label60
   202 label *label59
 
   207 label *label58
   208 jump *label61 equal .thoriumContainer false
   209 sensor :drawHeader:count .thoriumContainer @thorium
-    * set :drawHeader:x.1 120
   210 op log10 *tmp136 :drawHeader:count
   211 op floor :drawHeader:len.1 *tmp136
-    * set :drawText.6:x 120
-    * set :drawText.6:y 155
-    * set :drawText.6:alignment @topRight
   212 print "x"
   213 print :drawHeader:count
-    * set :drawPrint.6:x 120
   214 draw print 120 155 @topRight
   215 label *label64
   216 label *label63
 
   279 label *label73
   280 label *label71
   281 label *label69
-    * set :drawBold.1:x 22
-    * set :drawBold.1:y 105
-    * set :drawBold.1:alignment @bottomLeft
-    * set :drawText.7:x 22
-    * set :drawText.7:y 105
-    * set :drawText.7:alignment @bottomLeft
   282 print "Unit factories"
-    * set :drawPrint.7:x 22
-    * set :drawPrint.7:y 105
-    * set :drawPrint.7:alignment @bottomLeft
   283 draw print 22 105 @bottomLeft
   284 label *label78
   285 label *label77
-    * op add :drawText.8:x 22 1
-    * set :drawText.8:y 105
-    * set :drawText.8:alignment @bottomLeft
   286 print "Unit factories"
-    * set :drawPrint.8:y 105
-    * set :drawPrint.8:alignment @bottomLeft
   287 draw print 23 105 @bottomLeft
   288 label *label80
   289 label *label79
 
   291 jump *label81 lessThanEq .factoryProgress 0
   292 op mul *tmp182 122 .factoryProgress
   293 op mul *tmp183 .factoryProgress 122
-    * op min :drawItem:length 122 *tmp183
+  294 op min :drawItem:length 122 *tmp182
   295 op add :drawItem:textX 170 0
   296 draw col %[white]
   297 draw image 11 95 :drawMaterials:unit1 16 0
 
   300 draw color 0 255 0 255
   301 draw lineRect 22 90 122 10
   302 op add *tmp196 95 2
-    * set :drawBold.2:x 170
-    * set :drawBold.2:y 97
-    * set :drawBold.2:alignment @right
-    * set :drawText.9:x 170
-    * set :drawText.9:y 97
-    * set :drawText.9:alignment @right
   303 print :drawMaterials:unitCount1
   304 print "/"
   305 print :drawMaterials:unitTotal1
-    * set :drawPrint.9:x 170
-    * set :drawPrint.9:y 97
-    * set :drawPrint.9:alignment @right
-    * draw print :drawItem:textX *tmp196 @right
+  306 draw print 170 97 @right
   307 label *label86
   308 label *label85
-    * op add :drawText.10:x 170 1
-    * set :drawText.10:y 97
-    * set :drawText.10:alignment @right
   309 print :drawMaterials:unitCount1
   310 print "/"
   311 print :drawMaterials:unitTotal1
-    * set :drawPrint.10:x 171
-    * set :drawPrint.10:y 97
-    * set :drawPrint.10:alignment @right
-    * draw print 171 *tmp196 @right
+  312 draw print 171 97 @right
   313 label *label88
   314 label *label87
   315 label *label84
 
   320 jump *label91 equal :drawMaterials:unit2 null
   321 op mul *tmp206 122 .reconstructorProgress
   322 op mul *tmp207 .reconstructorProgress 122
-    * op min :drawItem.1:length 122 *tmp207
+  323 op min :drawItem.1:length 122 *tmp206
   324 op add :drawItem.1:textX 170 0
   325 draw col %[white]
   326 draw image 11 80 :drawMaterials:unit2 16 0
 
   329 draw color 0 255 0 255
   330 draw lineRect 22 75 122 10
   331 op add *tmp220 80 2
-    * set :drawBold.3:x 170
-    * set :drawBold.3:y 82
-    * set :drawBold.3:alignment @right
-    * set :drawText.11:x 170
-    * set :drawText.11:y 82
-    * set :drawText.11:alignment @right
   332 print :drawMaterials:unitCount2
   333 print "/"
   334 print :drawMaterials:unitTotal2
-    * set :drawPrint.11:x 170
-    * set :drawPrint.11:y 82
-    * set :drawPrint.11:alignment @right
-    * draw print :drawItem.1:textX *tmp220 @right
+  335 draw print 170 82 @right
   336 label *label96
   337 label *label95
-    * op add :drawText.12:x 170 1
-    * set :drawText.12:y 82
-    * set :drawText.12:alignment @right
   338 print :drawMaterials:unitCount2
   339 print "/"
   340 print :drawMaterials:unitTotal2
-    * set :drawPrint.12:x 171
-    * set :drawPrint.12:y 82
-    * set :drawPrint.12:alignment @right
-    * draw print 171 *tmp220 @right
+  341 draw print 171 82 @right
   342 label *label98
   343 label *label97
   344 label *label94
 
   349 jump *label101 equal :drawMaterials:unit3 null
   350 op mul *tmp230 122 :drawMaterials:multiReconstructorProgress
   351 op mul *tmp231 :drawMaterials:multiReconstructorProgress 122
-    * op min :drawItem.2:length 122 *tmp231
+  352 op min :drawItem.2:length 122 *tmp230
   353 op add :drawItem.2:textX 170 0
   354 draw col %[white]
   355 draw image 11 65 :drawMaterials:unit3 16 0
 
   358 draw color 0 255 0 255
   359 draw lineRect 22 60 122 10
   360 op add *tmp244 65 2
-    * set :drawBold.4:x 170
-    * set :drawBold.4:y 67
-    * set :drawBold.4:alignment @right
-    * set :drawText.13:x 170
-    * set :drawText.13:y 67
-    * set :drawText.13:alignment @right
   361 print .megas
   362 print "/"
   363 print .megaTarget
-    * set :drawPrint.13:x 170
-    * set :drawPrint.13:y 67
-    * set :drawPrint.13:alignment @right
-    * draw print :drawItem.2:textX *tmp244 @right
+  364 draw print 170 67 @right
   365 label *label106
   366 label *label105
-    * op add :drawText.14:x 170 1
-    * set :drawText.14:y 67
-    * set :drawText.14:alignment @right
   367 print .megas
   368 print "/"
   369 print .megaTarget
-    * set :drawPrint.14:x 171
-    * set :drawPrint.14:y 67
-    * set :drawPrint.14:alignment @right
-    * draw print 171 *tmp244 @right
+  370 draw print 171 67 @right
   371 label *label108
   372 label *label107
   373 label *label104
 
   392 label *label111
   393 jump *label116 lessThanEq :drawMaterials:target 0
   394 sensor *tmp253 A¾BHMW-air-factory13 :drawMaterials:item
-    * set :drawItem.3:col :drawMaterials:col
   395 set :drawItem.3:y :drawMaterials:y
   396 op mul *tmp258 122 *tmp253
   397 op div *tmp259 *tmp258 :drawMaterials:target
   398 op min :drawItem.3:length 122 *tmp259
-    * op mul *tmp261 :drawMaterials:col 176
   399 op mul *tmp262 :drawMaterials:col 88
   400 op add :drawItem.3:iconX 11 *tmp262
-    * op mul *tmp265 :drawMaterials:col 88
   401 op add :drawItem.3:barX 22 *tmp262
-    * op mul *tmp268 :drawMaterials:col 88
   402 op add :drawItem.3:textX 170 *tmp262
   403 draw col %[white]
   404 op add *tmp270 :drawMaterials:y 5
 
   408 draw color 0 255 0 255
   409 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
   410 op add *tmp272 :drawMaterials:y 7
-    * set :drawBold.5:x :drawItem.3:textX
-    * set :drawBold.5:y *tmp272
-    * set :drawBold.5:alignment @right
-    * set :drawText.15:x :drawItem.3:textX
-    * set :drawText.15:y *tmp272
-    * set :drawText.15:alignment @right
   411 print :drawMaterials:target
-    * set :drawPrint.15:x :drawItem.3:textX
-    * set :drawPrint.15:y *tmp272
-    * set :drawPrint.15:alignment @right
   412 draw print :drawItem.3:textX *tmp272 @right
   413 label *label121
   414 label *label120
   415 op add :drawText.16:x *tmp262 171
-    * set :drawText.16:y *tmp272
-    * set :drawText.16:alignment @right
   416 print :drawMaterials:target
-    * set :drawPrint.16:y *tmp272
-    * set :drawPrint.16:alignment @right
   417 draw print :drawText.16:x *tmp272 @right
   418 label *label123
   419 label *label122
 
   440 op equal *tmp277 .nextBlock @ore-titanium
   441 op or *tmp278 *tmp276 *tmp277
   442 jump *label126 equal *tmp278 false
-    * set :drawBold.6:x 22
-    * set :drawBold.6:y 105
-    * set :drawBold.6:alignment @bottomLeft
-    * set :drawText.17:x 22
-    * set :drawText.17:y 105
-    * set :drawText.17:alignment @bottomLeft
   443 read *tmp280 processor3 ".mapAction"
   444 print *tmp280
-    * set :drawPrint.17:x 22
-    * set :drawPrint.17:y 105
-    * set :drawPrint.17:alignment @bottomLeft
   445 draw print 22 105 @bottomLeft
   446 label *label130
   447 label *label129
-    * op add :drawText.18:x 22 1
-    * set :drawText.18:y 105
-    * set :drawText.18:alignment @bottomLeft
   448 read *tmp282 processor3 ".mapAction"
   449 print *tmp282
-    * set :drawPrint.18:y 105
-    * set :drawPrint.18:alignment @bottomLeft
   450 draw print 23 105 @bottomLeft
   451 label *label132
   452 label *label131
 
   464 draw color 0 255 0 255
   465 draw lineRect 22 90 122 10
   466 op add *tmp301 95 2
-    * set :drawBold.7:x 170
-    * set :drawBold.7:y 97
-    * set :drawBold.7:alignment @right
-    * set :drawText.19:x 170
-    * set :drawText.19:y 97
-    * set :drawText.19:alignment @right
   467 print "x"
   468 read *tmp302 processor3 ".mapSpots"
   469 print *tmp302
-    * set :drawPrint.19:x 170
-    * set :drawPrint.19:y 97
-    * set :drawPrint.19:alignment @right
-    * draw print :drawItem.4:textX *tmp301 @right
+  470 draw print 170 97 @right
   471 label *label136
   472 label *label135
-    * op add :drawText.20:x 170 1
-    * set :drawText.20:y 97
-    * set :drawText.20:alignment @right
   473 print "x"
   474 read *tmp304 processor3 ".mapSpots"
   475 print *tmp304
-    * set :drawPrint.20:x 171
-    * set :drawPrint.20:y 97
-    * set :drawPrint.20:alignment @right
-    * draw print 171 *tmp301 @right
+  476 draw print 171 97 @right
   477 label *label138
   478 label *label137
   479 label *label134
 
   485 label *label126
   486 set .materialCount .totalTargets
   487 set :drawMaterials:count .materialCount
-    * set :drawBold.8:x 22
-    * set :drawBold.8:y 105
-    * set :drawBold.8:alignment @bottomLeft
-    * set :drawText.21:x 22
-    * set :drawText.21:y 105
-    * set :drawText.21:alignment @bottomLeft
   488 print "Materials"
-    * set :drawPrint.21:x 22
-    * set :drawPrint.21:y 105
-    * set :drawPrint.21:alignment @bottomLeft
   489 draw print 22 105 @bottomLeft
   490 label *label143
   491 label *label142
-    * op add :drawText.22:x 22 1
-    * set :drawText.22:y 105
-    * set :drawText.22:alignment @bottomLeft
   492 print "Materials"
-    * set :drawPrint.22:y 105
-    * set :drawPrint.22:alignment @bottomLeft
   493 draw print 23 105 @bottomLeft
   494 label *label145
   495 label *label144
   496 label *label141
-    * set :drawMaterials:columns 1
   497 jump *label146 equal .materialCount false
   498 set :drawMaterials:item.1 @copper
   499 set :drawMaterials:target.1 .targetCopper
 
   531 label *label148
   532 jump *label158 lessThanEq :drawMaterials:target.1 0
   533 sensor *tmp313 .core :drawMaterials:item.1
-    * set :drawItem.5:col :drawMaterials:col
   534 set :drawItem.5:y :drawMaterials:y
-    * set :drawItem.5:columns 1
-    * op mul *tmp314 1 176
-    * op mul *tmp315 1 88
-    * op sub :drawItem.5:barLength 210 88
-    * op add :drawItem.5:textEnd 48 122
   535 op mul *tmp318 122 *tmp313
   536 op div *tmp319 *tmp318 :drawMaterials:target.1
   537 op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp321 :drawMaterials:col 176
   538 op mul *tmp322 :drawMaterials:col 88
   539 op add :drawItem.5:iconX 11 *tmp322
-    * op mul *tmp325 :drawMaterials:col 88
   540 op add :drawItem.5:barX 22 *tmp322
-    * op mul *tmp328 :drawMaterials:col 88
   541 op add :drawItem.5:textX 170 *tmp322
   542 draw col %[white]
   543 op add *tmp330 :drawMaterials:y 5
 
   547 draw color 0 255 0 255
   548 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
   549 op add *tmp332 :drawMaterials:y 7
-    * set :drawBold.9:x :drawItem.5:textX
-    * set :drawBold.9:y *tmp332
-    * set :drawBold.9:alignment @right
-    * set :drawText.23:x :drawItem.5:textX
-    * set :drawText.23:y *tmp332
-    * set :drawText.23:alignment @right
   550 print :drawMaterials:target.1
-    * set :drawPrint.23:x :drawItem.5:textX
-    * set :drawPrint.23:y *tmp332
-    * set :drawPrint.23:alignment @right
   551 draw print :drawItem.5:textX *tmp332 @right
   552 label *label163
   553 label *label162
   554 op add :drawText.24:x :drawItem.5:textX 1
-    * set :drawText.24:y *tmp332
-    * set :drawText.24:alignment @right
   555 print :drawMaterials:target.1
-    * set :drawPrint.24:y *tmp332
-    * set :drawPrint.24:alignment @right
   556 draw print :drawText.24:x *tmp332 @right
   557 label *label165
   558 label *label164
 
   590 set *tmp339 25
   591 label *label172
   592 set :drawUnit:y *tmp339
-    * set :drawBold.10:x 22
-    * set :drawBold.10:y *tmp339
-    * set :drawBold.10:alignment @bottomLeft
-    * set :drawText.25:x 22
-    * set :drawText.25:y *tmp339
-    * set :drawText.25:alignment @bottomLeft
   593 print "Builder"
-    * set :drawPrint.25:x 22
-    * set :drawPrint.25:y *tmp339
-    * set :drawPrint.25:alignment @bottomLeft
-    * draw print 22 :drawUnit:y @bottomLeft
+  594 draw print 22 *tmp339 @bottomLeft
   595 label *label175
   596 label *label174
-    * op add :drawText.26:x 22 1
-    * set :drawText.26:y *tmp339
-    * set :drawText.26:alignment @bottomLeft
   597 print "Builder"
-    * set :drawPrint.26:y *tmp339
-    * set :drawPrint.26:alignment @bottomLeft
-    * draw print 23 :drawUnit:y @bottomLeft
+  598 draw print 23 *tmp339 @bottomLeft
   599 label *label177
   600 label *label176
   601 label *label173
   602 jump *label178 notEqual .transportItem null
   603 op sub *tmp343 *tmp339 15
-    * set :drawUnit.1:item @poly
-    * set :drawUnit.1:items 0
   604 set :drawUnit.1:y *tmp343
   605 set :drawItem.6:target .transportTarget
-    * op mul *tmp348 122 0
   606 op div *tmp349 0 :drawItem.6:target
   607 op min :drawItem.6:length 122 *tmp349
   608 op add :drawItem.6:textX 170 0
   609 draw col %[white]
-    * op add *tmp360 *tmp343 5
+  610 op sub *tmp360 *tmp339 10
   611 draw image 11 *tmp360 @poly 16 0
   612 draw color 0 128 0 255
   613 draw rect 22 *tmp343 :drawItem.6:length 10
   614 draw color 0 255 0 255
   615 draw lineRect 22 *tmp343 122 10
-    * op add *tmp361 *tmp343 5
-    * op add *tmp362 :drawUnit.1:y 7
-    * set :drawBold.11:x 170
-    * set :drawBold.11:y *tmp362
-    * set :drawBold.11:alignment @right
-    * set :drawText.27:x 170
-    * set :drawText.27:y *tmp362
-    * set :drawText.27:alignment @right
+  616 op sub *tmp361 *tmp339 10
+  617 op add *tmp362 *tmp343 7
   618 print .transportTarget
-    * set :drawPrint.27:x 170
-    * set :drawPrint.27:y *tmp362
-    * set :drawPrint.27:alignment @right
-    * draw print :drawItem.6:textX *tmp362 @right
+  619 draw print 170 *tmp362 @right
   620 label *label184
   621 label *label183
-    * op add :drawText.28:x 170 1
-    * set :drawText.28:y *tmp362
-    * set :drawText.28:alignment @right
   622 print .transportTarget
-    * set :drawPrint.28:x 171
-    * set :drawPrint.28:y *tmp362
-    * set :drawPrint.28:alignment @right
   623 draw print 171 *tmp362 @right
   624 label *label186
   625 label *label185
   626 label *label182
   627 jump *label187 lessThan 1 1
-    * op sub :drawItem.6:y *tmp343 15
+  628 op sub :drawItem.6:y *tmp339 30
   629 label *label187
   630 label *label188
   631 label *label181
 
   638 op mul *tmp371 *tmp369 *tmp370
   639 op sub *tmp372 *tmp339 15
   640 set :drawUnit.2:item .transportItem
-    * set :drawUnit.2:items *tmp371
   641 set :drawUnit.2:y *tmp372
   642 set :drawItem.7:target .transportTarget
   643 op mul *tmp377 122 *tmp371
 
   645 op min :drawItem.7:length 122 *tmp378
   646 op add :drawItem.7:textX 170 0
   647 draw col %[white]
-    * op add *tmp389 *tmp372 5
+  648 op sub *tmp389 *tmp339 10
   649 draw image 11 *tmp389 :drawUnit.2:item 16 0
   650 draw color 0 128 0 255
   651 draw rect 22 *tmp372 :drawItem.7:length 10
   652 draw color 0 255 0 255
   653 draw lineRect 22 *tmp372 122 10
-    * op add *tmp390 *tmp372 5
-    * op add *tmp391 :drawUnit.2:y 7
-    * set :drawBold.12:x 170
-    * set :drawBold.12:y *tmp391
-    * set :drawBold.12:alignment @right
-    * set :drawText.29:x 170
-    * set :drawText.29:y *tmp391
-    * set :drawText.29:alignment @right
+  654 op sub *tmp390 *tmp339 10
+  655 op add *tmp391 *tmp372 7
   656 print .transportTarget
-    * set :drawPrint.29:x 170
-    * set :drawPrint.29:y *tmp391
-    * set :drawPrint.29:alignment @right
-    * draw print :drawItem.7:textX *tmp391 @right
+  657 draw print 170 *tmp391 @right
   658 label *label193
   659 label *label192
-    * op add :drawText.30:x 170 1
-    * set :drawText.30:y *tmp391
-    * set :drawText.30:alignment @right
   660 print .transportTarget
-    * set :drawPrint.30:x 171
-    * set :drawPrint.30:y *tmp391
-    * set :drawPrint.30:alignment @right
   661 draw print 171 *tmp391 @right
   662 label *label195
   663 label *label194
   664 label *label191
   665 jump *label196 lessThan 1 1
-    * op sub :drawItem.7:y *tmp372 15
+  666 op sub :drawItem.7:y *tmp339 30
   667 label *label196
   668 label *label197
   669 label *label190
 
   675 set :drawUnitCount:count .polys
   676 jump *label200 lessThanEq :drawUnitCount:count 0
   677 draw image 150 127 @poly 12 0
-    * set :drawText.31:x 170
-    * set :drawText.31:y 129
-    * set :drawText.31:alignment @right
   678 print "x"
   679 print :drawUnitCount:count
-    * set :drawPrint.31:x 170
   680 draw print 170 129 @right
   681 label *label203
   682 label *label202
 
   688 jump *label205 lessThanEq :drawUnitCount.1:count 0
   689 op sub *tmp402 :drawUnits:x 20
   690 draw image *tmp402 127 @mono 12 0
-    * set :drawText.32:x :drawUnits:x
-    * set :drawText.32:y 129
-    * set :drawText.32:alignment @right
   691 print "x"
   692 print :drawUnitCount.1:count
   693 draw print :drawUnits:x 129 @right
 
   701 jump *label210 lessThanEq :drawUnitCount.2:count 0
   702 op sub *tmp405 :drawUnits:x 20
   703 draw image *tmp405 127 @flare 12 0
-    * set :drawText.33:x :drawUnits:x
-    * set :drawText.33:y 129
-    * set :drawText.33:alignment @right
   704 print "x"
   705 print :drawUnitCount.2:count
   706 draw print :drawUnits:x 129 @right
 
   719 draw reset
   720 draw clear 0 0 32
   721 draw col %[gold]
-    * set :drawText.34:x 172
-    * set :drawText.34:y 172
-    * set :drawText.34:alignment @topRight
   722 print "Base map"
   723 draw print 172 172 @topRight
   724 label *label218
 
   903 op sub *tmp428 .page 1
   904 print *tmp428
   905 print "/"
-    * set :drawText.35:x 172
-    * set :drawText.35:y 4
-    * set :drawText.35:alignment @bottomRight
   906 print :displayLog:pages
   907 draw print 172 4 @bottomRight
   908 label *label264
 
   920 label *label269
   921 lookup block *tmp434 :displayRecord:id
   922 label *label270
-    * set :displayRecord:icon *tmp434
   923 op div *tmp438 :displayLog:record 1000
   924 op idiv :displayRecord:t *tmp438 120
   925 op idiv :displayRecord:m :displayRecord:t 60
 
   936 draw image :displayLog:x :displayLog:y *tmp434 14 0
   937 op add *tmp446 :displayLog:x 44
   938 op add *tmp447 :displayLog:y 2
-    * set :drawText.36:x *tmp446
-    * set :drawText.36:y *tmp447
-    * set :drawText.36:alignment @right
   939 print :displayRecord:s
   940 draw print *tmp446 *tmp447 @right
   941 label *label275
 
  1006 jump *label7 always
  1007 end
  1008 label *label4
-    * set :unpackCfg2:cfg :drawBlock:cfg
-    * set *tmp461 1
  1009 read *tmp462 :drawBlock:cfg 1
  1010 op sub *tmp463 *tmp462 74
  1011 lookup block :unpackCfg:type *tmp463
-    * set *tmp465 2
  1012 read *tmp466 :drawBlock:cfg 2
  1013 op sub *tmp467 *tmp466 74
  1014 op div :unpackCfg:x *tmp467 2
-    * set *tmp469 3
  1015 read *tmp470 :drawBlock:cfg 3
  1016 op sub *tmp471 *tmp470 74
  1017 op div :unpackCfg:y *tmp471 2
-    * set *tmp473 4
  1018 read *tmp474 :drawBlock:cfg 4
  1019 op sub :unpackCfg:rotation *tmp474 74
-    * set *tmp476 5
  1020 read *tmp477 :drawBlock:cfg 5
  1021 op sub :unpackCfg:ind *tmp477 74
  1022 sensor :unpackCfg:size :unpackCfg:type @size
  1023 label *label287
-    * set :unpackCfg2:type :unpackCfg:type
-    * set :unpackCfg2:x :unpackCfg:x
-    * set :unpackCfg2:y :unpackCfg:y
-    * set :unpackCfg2:rotation :unpackCfg:rotation
-    * set :unpackCfg2:size :unpackCfg:size
-    * set :unpackCfg2:index :unpackCfg:ind
  1024 label *label286
  1025 op or *tmp487 :unpackCfg:x :unpackCfg:y
  1026 jump *label288 equal *tmp487 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-20 instructions):
 
   290 label *label76
   291 jump *label81 lessThanEq .factoryProgress 0
   292 op mul *tmp182 122 .factoryProgress
-    * op mul *tmp183 .factoryProgress 122
   293 op min :drawItem:length 122 *tmp182
-    * op add :drawItem:textX 170 0
   294 draw col %[white]
   295 draw image 11 95 :drawMaterials:unit1 16 0
   296 draw color 0 128 0 255
   297 draw rect 22 90 :drawItem:length 10
   298 draw color 0 255 0 255
   299 draw lineRect 22 90 122 10
-    * op add *tmp196 95 2
   300 print :drawMaterials:unitCount1
   301 print "/"
   302 print :drawMaterials:unitTotal1
 
   316 label *label83
   317 jump *label91 equal :drawMaterials:unit2 null
   318 op mul *tmp206 122 .reconstructorProgress
-    * op mul *tmp207 .reconstructorProgress 122
   319 op min :drawItem.1:length 122 *tmp206
-    * op add :drawItem.1:textX 170 0
   320 draw col %[white]
   321 draw image 11 80 :drawMaterials:unit2 16 0
   322 draw color 0 128 0 255
   323 draw rect 22 75 :drawItem.1:length 10
   324 draw color 0 255 0 255
   325 draw lineRect 22 75 122 10
-    * op add *tmp220 80 2
   326 print :drawMaterials:unitCount2
   327 print "/"
   328 print :drawMaterials:unitTotal2
 
   342 label *label93
   343 jump *label101 equal :drawMaterials:unit3 null
   344 op mul *tmp230 122 :drawMaterials:multiReconstructorProgress
-    * op mul *tmp231 :drawMaterials:multiReconstructorProgress 122
   345 op min :drawItem.2:length 122 *tmp230
-    * op add :drawItem.2:textX 170 0
   346 draw col %[white]
   347 draw image 11 65 :drawMaterials:unit3 16 0
   348 draw color 0 128 0 255
   349 draw rect 22 60 :drawItem.2:length 10
   350 draw color 0 255 0 255
   351 draw lineRect 22 60 122 10
-    * op add *tmp244 65 2
   352 print .megas
   353 print "/"
   354 print .megaTarget
 
   447 op mul *tmp287 122 :drawItem.4:current
   448 op div *tmp288 *tmp287 :drawItem.4:target
   449 op min :drawItem.4:length 122 *tmp288
-    * op add :drawItem.4:textX 170 0
   450 draw col %[white]
   451 draw image 11 95 @titanium 16 0
   452 draw color 0 128 0 255
   453 draw rect 22 90 :drawItem.4:length 10
   454 draw color 0 255 0 255
   455 draw lineRect 22 90 122 10
-    * op add *tmp301 95 2
   456 print "x"
   457 read *tmp302 processor3 ".mapSpots"
   458 print *tmp302
 
   540 draw print :drawItem.5:textX *tmp332 @right
   541 label *label163
   542 label *label162
-    * op add :drawText.24:x :drawItem.5:textX 1
+  543 op add :drawText.24:x *tmp322 171
   544 print :drawMaterials:target.1
   545 draw print :drawText.24:x *tmp332 @right
   546 label *label165
 
   578 label *label171
   579 set *tmp339 25
   580 label *label172
-    * set :drawUnit:y *tmp339
   581 print "Builder"
   582 draw print 22 *tmp339 @bottomLeft
   583 label *label175
 
   589 label *label173
   590 jump *label178 notEqual .transportItem null
   591 op sub *tmp343 *tmp339 15
-    * set :drawUnit.1:y *tmp343
   592 set :drawItem.6:target .transportTarget
   593 op div *tmp349 0 :drawItem.6:target
   594 op min :drawItem.6:length 122 *tmp349
-    * op add :drawItem.6:textX 170 0
   595 draw col %[white]
   596 op sub *tmp360 *tmp339 10
   597 draw image 11 *tmp360 @poly 16 0
 
   599 draw rect 22 *tmp343 :drawItem.6:length 10
   600 draw color 0 255 0 255
   601 draw lineRect 22 *tmp343 122 10
-    * op sub *tmp361 *tmp339 10
-    * op add *tmp362 *tmp343 7
+  602 op sub *tmp362 *tmp339 8
   603 print .transportTarget
   604 draw print 170 *tmp362 @right
   605 label *label184
 
   610 label *label185
   611 label *label182
   612 jump *label187 lessThan 1 1
-    * op sub :drawItem.6:y *tmp339 30
   613 label *label187
   614 label *label188
   615 label *label181
 
   622 op mul *tmp371 *tmp369 *tmp370
   623 op sub *tmp372 *tmp339 15
   624 set :drawUnit.2:item .transportItem
-    * set :drawUnit.2:y *tmp372
   625 set :drawItem.7:target .transportTarget
   626 op mul *tmp377 122 *tmp371
   627 op div *tmp378 *tmp377 :drawItem.7:target
   628 op min :drawItem.7:length 122 *tmp378
-    * op add :drawItem.7:textX 170 0
   629 draw col %[white]
   630 op sub *tmp389 *tmp339 10
   631 draw image 11 *tmp389 :drawUnit.2:item 16 0
 
   633 draw rect 22 *tmp372 :drawItem.7:length 10
   634 draw color 0 255 0 255
   635 draw lineRect 22 *tmp372 122 10
-    * op sub *tmp390 *tmp339 10
-    * op add *tmp391 *tmp372 7
+  636 op sub *tmp391 *tmp339 8
   637 print .transportTarget
   638 draw print 170 *tmp391 @right
   639 label *label193
 
   644 label *label194
   645 label *label191
   646 jump *label196 lessThan 1 1
-    * op sub :drawItem.7:y *tmp339 30
   647 label *label196
   648 label *label197
   649 label *label190

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
    54 set :displayOreMap:i 0
    55 label *label23
    56 jump *label25 greaterThanEq :displayOreMap:i :displayOreMap:count
+   57 label *label298
    58 op add :displayOreMap:index :displayOreMap:index 1
    59 read :displayOreMap:id bank1 :displayOreMap:index
    60 jump *label26 lessThanEq :displayOreMap:id 0
 
    76 draw image :displayOreMap:x :displayOreMap:y *tmp59 *tmp71 0
    77 label *label24
    78 op add :displayOreMap:i :displayOreMap:i 1
-    * jump *label23 always
+   79 jump *label298 lessThan :displayOreMap:i :displayOreMap:count
    80 label *label25
    81 sensor *tmp72 .titaniumDrill @x
    82 sensor *tmp73 .titaniumDrill @y
 
   892 op sub :displayLog:position :displayLog:start 1
   893 label *label265
   894 jump *label267 lessThan :displayLog:position :displayLog:stop
+  895 label *label299
   896 read :displayLog:record bank1 :displayLog:position
   897 op mod :displayRecord:id :displayLog:record 1000
   898 jump *label269 lessThanEq :displayRecord:id @blockCount
 
   938 label *label279
   939 label *label266
   940 op sub :displayLog:position :displayLog:position 1
-    * jump *label265 always
+  941 jump *label299 greaterThanEq :displayLog:position :displayLog:stop
   942 label *label267
   943 label *label262
   944 label *label215

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-18 instructions):
 
   148 jump *label48 always
   149 label *label47
   150 jump *label49 notEqual :drawHeader:count 1
-    * jump *label51 equal .nextBlock null
-    * set *tmp110 .nextBlock
-    * jump *label52 always
-    * label *label51
-    * set *tmp110 .nextUnit
-    * label *label52
+  151 select *tmp110 notEqual .nextBlock null .nextBlock .nextUnit
   152 draw image 40 137 *tmp110 32 0
   153 jump *label50 always
   154 label *label49
 
   163 op idiv :drawHeader:t *tmp114 120
   164 op idiv :drawHeader:m :drawHeader:t 60
   165 op mod :drawHeader:s :drawHeader:t 60
-    * jump *label53 greaterThanEq :drawHeader:s 10
-    * set *tmp120 "0"
-    * jump *label54 always
-    * label *label53
-    * set *tmp120 ""
-    * label *label54
+  166 select *tmp120 lessThan :drawHeader:s 10 "0" ""
   167 print :drawHeader:m
   168 print ":"
   169 print *tmp120
 
   301 label *label88
   302 label *label87
   303 label *label84
-    * jump *label89 lessThan 1 1
-    * label *label89
-    * label *label90
   304 label *label83
   305 jump *label91 equal :drawMaterials:unit2 null
   306 op mul *tmp206 122 .reconstructorProgress
 
   324 label *label98
   325 label *label97
   326 label *label94
-    * jump *label99 lessThan 1 1
-    * label *label99
-    * label *label100
   327 label *label93
   328 jump *label101 equal :drawMaterials:unit3 null
   329 op mul *tmp230 122 :drawMaterials:multiReconstructorProgress
 
   347 label *label108
   348 label *label107
   349 label *label104
-    * jump *label109 lessThan 1 1
-    * label *label109
-    * label *label110
   350 label *label103
   351 label *label101
   352 label *label102
 
   448 label *label138
   449 label *label137
   450 label *label134
-    * jump *label139 lessThan 1 1
-    * label *label139
-    * label *label140
   451 label *label133
   452 jump *label127 always
   453 label *label126
 
   551 label *label67
   552 label *label65
   553 draw col %[white]
-    * jump *label171 greaterThanEq .materialCount 4
-    * set *tmp339 40
-    * jump *label172 always
-    * label *label171
-    * set *tmp339 25
-    * label *label172
+  554 select *tmp339 lessThan .materialCount 4 40 25
   555 print "Builder"
   556 draw print 22 *tmp339 @bottomLeft
   557 label *label175
 
   583 label *label186
   584 label *label185
   585 label *label182
-    * jump *label187 lessThan 1 1
-    * label *label187
-    * label *label188
   586 label *label181
   587 label *label180
   588 jump *label179 always
 
   614 label *label195
   615 label *label194
   616 label *label191
-    * jump *label196 lessThan 1 1
-    * label *label196
-    * label *label197
   617 label *label190
   618 label *label189
   619 label *label179
 
   873 op idiv :displayRecord:t *tmp438 120
   874 op idiv :displayRecord:m :displayRecord:t 60
   875 op mod :displayRecord:s :displayRecord:t 60
-    * jump *label271 greaterThanEq :displayRecord:s 10
-    * set *tmp444 "0"
-    * jump *label272 always
-    * label *label271
-    * set *tmp444 ""
-    * label *label272
+  876 select *tmp444 lessThan :displayRecord:s 10 "0" ""
   877 print :displayRecord:m
   878 print ":"
   879 print *tmp444

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2 (-1 instructions):
 
    57 label *label298
    58 op add :displayOreMap:index :displayOreMap:index 1
    59 read :displayOreMap:id bank1 :displayOreMap:index
-    * jump *label26 lessThanEq :displayOreMap:id 0
    60 lookup item *tmp59 :displayOreMap:id
-    * jump *label27 always
+   61 jump *label27 greaterThan :displayOreMap:id 0
    62 label *label26
    63 op sub *tmp61 0 :displayOreMap:id
    64 lookup block *tmp59 *tmp61
 
   861 label *label299
   862 read :displayLog:record bank1 :displayLog:position
   863 op mod :displayRecord:id :displayLog:record 1000
-    * jump *label269 lessThanEq :displayRecord:id @blockCount
+  864 lookup block *tmp434 :displayRecord:id
+  865 jump *label270 lessThanEq :displayRecord:id @blockCount
   866 op sub *tmp435 :displayRecord:id @blockCount
   867 lookup unit *tmp434 *tmp435
   868 jump *label270 always
-    * label *label269
-    * lookup block *tmp434 :displayRecord:id
   869 label *label270
   870 op div *tmp438 :displayLog:record 1000
   871 op idiv :displayRecord:t *tmp438 120

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-3 instructions):
 
    53 read :displayOreMap:count processor3 ".locations"
    54 set :displayOreMap:i 0
    55 label *label23
-    * jump *label25 greaterThanEq :displayOreMap:i :displayOreMap:count
+   56 jump *label25 greaterThanEq 0 :displayOreMap:count
    57 label *label298
    58 op add :displayOreMap:index :displayOreMap:index 1
    59 read :displayOreMap:id bank1 :displayOreMap:index
 
   809 set :displayBaseMap:i .recentBuildIndex
   810 jump *label255 lessThan :displayBaseMap:i 0
   811 set .recentBuildIndex -1
-    * readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
+  812 readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
   813 setaddr :drawBlock*retaddr *label257 (h:*label257)
   814 call *label4 *invalid :drawBlock*retval (m:*label257) (h:*label257)
   815 label *label257

Modifications by Inline function 'drawBlock' defined at Display.mnd:426:1 (+21 instructions):
 
   803 setaddr *tmp408 *label253
   804 label *label219
   805 set :drawBlock:cfg :displayBaseMap:cfg
-    * setaddr :drawBlock*retaddr *label254 (h:*label254)
-    * call *label4 *invalid :drawBlock*retval (m:*label254) (h:*label254)
-    * label *label254
+  806 label *label300
+  807 read *tmp462 :drawBlock:cfg 1
+  808 op sub *tmp463 *tmp462 74
+  809 lookup block :unpackCfg:type *tmp463
+  810 read *tmp466 :drawBlock:cfg 2
+  811 op sub *tmp467 *tmp466 74
+  812 op div :unpackCfg:x *tmp467 2
+  813 read *tmp470 :drawBlock:cfg 3
+  814 op sub *tmp471 *tmp470 74
+  815 op div :unpackCfg:y *tmp471 2
+  816 read *tmp474 :drawBlock:cfg 4
+  817 op sub :unpackCfg:rotation *tmp474 74
+  818 read *tmp477 :drawBlock:cfg 5
+  819 op sub :unpackCfg:ind *tmp477 74
+  820 sensor :unpackCfg:size :unpackCfg:type @size
+  821 label *label301
+  822 label *label302
+  823 op or *tmp487 :unpackCfg:x :unpackCfg:y
+  824 jump *label305 equal *tmp487 false
+  825 op shl *tmp489 1 :unpackCfg:ind
+  826 op and *tmp490 .blocksBuilt *tmp489
+  827 jump *label303 equal *tmp490 false
+  828 draw col %[white]
+  829 jump *label304 always
+  830 label *label303
+  831 draw color 128 255 128 128
+  832 label *label304
+  833 op mul *tmp492 2 :unpackCfg:x
+  834 op mul *tmp493 2 :unpackCfg:y
+  835 op mul *tmp494 2 :unpackCfg:size
+  836 op mul *tmp495 90 :unpackCfg:rotation
+  837 draw image *tmp492 *tmp493 :unpackCfg:type *tmp494 *tmp495
+  838 label *label305
+  839 label *label306
+  840 label *label307
   841 set :displayBaseMap:i .recentBuildIndex
   842 jump *label255 lessThan :displayBaseMap:i 0
   843 set .recentBuildIndex -1
   844 readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
-    * setaddr :drawBlock*retaddr *label257 (h:*label257)
-    * call *label4 *invalid :drawBlock*retval (m:*label257) (h:*label257)
-    * label *label257
+  845 label *label308
+  846 read *tmp462 :drawBlock:cfg 1
+  847 op sub *tmp463 *tmp462 74
+  848 lookup block :unpackCfg:type *tmp463
+  849 read *tmp466 :drawBlock:cfg 2
+  850 op sub *tmp467 *tmp466 74
+  851 op div :unpackCfg:x *tmp467 2
+  852 read *tmp470 :drawBlock:cfg 3
+  853 op sub *tmp471 *tmp470 74
+  854 op div :unpackCfg:y *tmp471 2
+  855 read *tmp474 :drawBlock:cfg 4
+  856 op sub :unpackCfg:rotation *tmp474 74
+  857 read *tmp477 :drawBlock:cfg 5
+  858 op sub :unpackCfg:ind *tmp477 74
+  859 sensor :unpackCfg:size :unpackCfg:type @size
+  860 label *label309
+  861 label *label310
+  862 op or *tmp487 :unpackCfg:x :unpackCfg:y
+  863 jump *label313 equal *tmp487 false
+  864 op shl *tmp489 1 :unpackCfg:ind
+  865 op and *tmp490 .blocksBuilt *tmp489
+  866 jump *label311 equal *tmp490 false
+  867 draw col %[white]
+  868 jump *label312 always
+  869 label *label311
+  870 draw color 128 255 128 128
+  871 label *label312
+  872 op mul *tmp492 2 :unpackCfg:x
+  873 op mul *tmp493 2 :unpackCfg:y
+  874 op mul *tmp494 2 :unpackCfg:size
+  875 op mul *tmp495 90 :unpackCfg:rotation
+  876 draw image *tmp492 *tmp493 :unpackCfg:type *tmp494 *tmp495
+  877 label *label313
+  878 label *label314
+  879 label *label315
   880 label *label255
   881 label *label256
   882 sensor *tmp413 switch1 @enabled
 
  1011 wait 1e12
  1012 jump *label7 always
  1013 end
-    * label *label4
-    * read *tmp462 :drawBlock:cfg 1
-    * op sub *tmp463 *tmp462 74
-    * lookup block :unpackCfg:type *tmp463
-    * read *tmp466 :drawBlock:cfg 2
-    * op sub *tmp467 *tmp466 74
-    * op div :unpackCfg:x *tmp467 2
-    * read *tmp470 :drawBlock:cfg 3
-    * op sub *tmp471 *tmp470 74
-    * op div :unpackCfg:y *tmp471 2
-    * read *tmp474 :drawBlock:cfg 4
-    * op sub :unpackCfg:rotation *tmp474 74
-    * read *tmp477 :drawBlock:cfg 5
-    * op sub :unpackCfg:ind *tmp477 74
-    * sensor :unpackCfg:size :unpackCfg:type @size
-    * label *label287
-    * label *label286
-    * op or *tmp487 :unpackCfg:x :unpackCfg:y
-    * jump *label288 equal *tmp487 false
-    * op shl *tmp489 1 :unpackCfg:ind
-    * op and *tmp490 .blocksBuilt *tmp489
-    * jump *label290 equal *tmp490 false
-    * draw col %[white]
-    * jump *label291 always
-    * label *label290
-    * draw color 128 255 128 128
-    * label *label291
-    * op mul *tmp492 2 :unpackCfg:x
-    * op mul *tmp493 2 :unpackCfg:y
-    * op mul *tmp494 2 :unpackCfg:size
-    * op mul *tmp495 90 :unpackCfg:rotation
-    * draw image *tmp492 *tmp493 :unpackCfg:type *tmp494 *tmp495
-    * label *label288
-    * label *label289
-    * label *label285
-    * return :drawBlock*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   804 label *label219
   805 set :drawBlock:cfg :displayBaseMap:cfg
   806 label *label300
-    * read *tmp462 :drawBlock:cfg 1
+  807 read *tmp462 :displayBaseMap:cfg 1
   808 op sub *tmp463 *tmp462 74
   809 lookup block :unpackCfg:type *tmp463
-    * read *tmp466 :drawBlock:cfg 2
+  810 read *tmp466 :displayBaseMap:cfg 2
   811 op sub *tmp467 *tmp466 74
   812 op div :unpackCfg:x *tmp467 2
-    * read *tmp470 :drawBlock:cfg 3
+  813 read *tmp470 :displayBaseMap:cfg 3
   814 op sub *tmp471 *tmp470 74
   815 op div :unpackCfg:y *tmp471 2
-    * read *tmp474 :drawBlock:cfg 4
+  816 read *tmp474 :displayBaseMap:cfg 4
   817 op sub :unpackCfg:rotation *tmp474 74
-    * read *tmp477 :drawBlock:cfg 5
+  818 read *tmp477 :displayBaseMap:cfg 5
   819 op sub :unpackCfg:ind *tmp477 74
   820 sensor :unpackCfg:size :unpackCfg:type @size
   821 label *label301

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   802 set :displayBaseMap:cfg "AÁPBJf-multiplicative-reconstructor28"
   803 setaddr *tmp408 *label253
   804 label *label219
-    * set :drawBlock:cfg :displayBaseMap:cfg
   805 label *label300
   806 read *tmp462 :displayBaseMap:cfg 1
   807 op sub *tmp463 *tmp462 74

Modifications by Unroll iteration loop at Display.mnd:235:13 (+25 instructions):
 
   353 label *label92
   354 jump *label82 always
   355 label *label81
-    * set :drawMaterials:item @lead
-    * set :drawMaterials:target :drawMaterials:targetFactoryLead
-    * setaddr *tmp250 *label114
-    * jump *label111 always
-    * multilabel *label114 (m:marker0)
-    * set :drawMaterials:item @silicon
-    * set :drawMaterials:target :drawMaterials:targetFactorySilicon
-    * setaddr *tmp250 *label115
-    * label *label111
-    * jump *label116 lessThanEq :drawMaterials:target 0
-    * sensor *tmp253 A¾BHMW-air-factory13 :drawMaterials:item
-    * set :drawItem.3:y :drawMaterials:y
-    * op mul *tmp258 122 *tmp253
-    * op div *tmp259 *tmp258 :drawMaterials:target
-    * op min :drawItem.3:length 122 *tmp259
-    * op mul *tmp262 :drawMaterials:col 88
-    * op add :drawItem.3:iconX 11 *tmp262
-    * op add :drawItem.3:barX 22 *tmp262
-    * op add :drawItem.3:textX 170 *tmp262
-    * draw col %[white]
-    * op add *tmp270 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp270 :drawMaterials:item 16 0
-    * draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
-    * draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
-    * op add *tmp272 :drawMaterials:y 7
-    * print :drawMaterials:target
-    * draw print :drawItem.3:textX *tmp272 @right
-    * label *label121
-    * label *label120
-    * op add :drawText.16:x *tmp262 171
-    * print :drawMaterials:target
-    * draw print :drawText.16:x *tmp272 @right
-    * label *label123
-    * label *label122
-    * label *label119
-    * op add :drawItem.3:col :drawMaterials:col 1
-    * jump *label124 lessThan :drawItem.3:col 1
-    * set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawMaterials:y 15
-    * label *label124
-    * label *label125
-    * label *label118
-    * set :drawMaterials:col :drawItem.3:col
-    * set :drawMaterials:y :drawItem.3:y
-    * label *label116
-    * label *label117
-    * label *label112
-    * multijump *tmp250 0 0 (m:marker0)
-    * multilabel *label115 (m:marker0)
-    * label *label113
+  356 set :drawMaterials:item @lead
+  357 set :drawMaterials:target :drawMaterials:targetFactoryLead
+  358 label *label316
+  359 jump *label325 lessThanEq :drawMaterials:target 0
+  360 sensor *tmp253 A¾BHMW-air-factory13 :drawMaterials:item
+  361 set :drawItem.3:y :drawMaterials:y
+  362 op mul *tmp258 122 *tmp253
+  363 op div *tmp259 *tmp258 :drawMaterials:target
+  364 op min :drawItem.3:length 122 *tmp259
+  365 op mul *tmp262 :drawMaterials:col 88
+  366 op add :drawItem.3:iconX 11 *tmp262
+  367 op add :drawItem.3:barX 22 *tmp262
+  368 op add :drawItem.3:textX 170 *tmp262
+  369 draw col %[white]
+  370 op add *tmp270 :drawMaterials:y 5
+  371 draw image :drawItem.3:iconX *tmp270 :drawMaterials:item 16 0
+  372 draw color 0 128 0 255
+  373 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  374 draw color 0 255 0 255
+  375 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  376 op add *tmp272 :drawMaterials:y 7
+  377 print :drawMaterials:target
+  378 draw print :drawItem.3:textX *tmp272 @right
+  379 label *label317
+  380 label *label318
+  381 op add :drawText.16:x *tmp262 171
+  382 print :drawMaterials:target
+  383 draw print :drawText.16:x *tmp272 @right
+  384 label *label319
+  385 label *label320
+  386 label *label321
+  387 op add :drawItem.3:col :drawMaterials:col 1
+  388 jump *label322 lessThan :drawItem.3:col 1
+  389 set :drawItem.3:col 0
+  390 op sub :drawItem.3:y :drawMaterials:y 15
+  391 label *label322
+  392 label *label323
+  393 label *label324
+  394 set :drawMaterials:col :drawItem.3:col
+  395 set :drawMaterials:y :drawItem.3:y
+  396 label *label325
+  397 label *label326
+  398 label *label327
+  399 set :drawMaterials:item @silicon
+  400 set :drawMaterials:target :drawMaterials:targetFactorySilicon
+  401 label *label330
+  402 jump *label339 lessThanEq :drawMaterials:target 0
+  403 sensor *tmp253 A¾BHMW-air-factory13 :drawMaterials:item
+  404 set :drawItem.3:y :drawMaterials:y
+  405 op mul *tmp258 122 *tmp253
+  406 op div *tmp259 *tmp258 :drawMaterials:target
+  407 op min :drawItem.3:length 122 *tmp259
+  408 op mul *tmp262 :drawMaterials:col 88
+  409 op add :drawItem.3:iconX 11 *tmp262
+  410 op add :drawItem.3:barX 22 *tmp262
+  411 op add :drawItem.3:textX 170 *tmp262
+  412 draw col %[white]
+  413 op add *tmp270 :drawMaterials:y 5
+  414 draw image :drawItem.3:iconX *tmp270 :drawMaterials:item 16 0
+  415 draw color 0 128 0 255
+  416 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  417 draw color 0 255 0 255
+  418 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  419 op add *tmp272 :drawMaterials:y 7
+  420 print :drawMaterials:target
+  421 draw print :drawItem.3:textX *tmp272 @right
+  422 label *label331
+  423 label *label332
+  424 op add :drawText.16:x *tmp262 171
+  425 print :drawMaterials:target
+  426 draw print :drawText.16:x *tmp272 @right
+  427 label *label333
+  428 label *label334
+  429 label *label335
+  430 op add :drawItem.3:col :drawMaterials:col 1
+  431 jump *label336 lessThan :drawItem.3:col 1
+  432 set :drawItem.3:col 0
+  433 op sub :drawItem.3:y :drawMaterials:y 15
+  434 label *label336
+  435 label *label337
+  436 label *label338
+  437 set :drawMaterials:col :drawItem.3:col
+  438 set :drawMaterials:y :drawItem.3:y
+  439 label *label339
+  440 label *label340
+  441 label *label341
+  442 label *label113
   443 label *label82
   444 jump *label67 always
   445 label *label66

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
   356 set :drawMaterials:item @lead
   357 set :drawMaterials:target :drawMaterials:targetFactoryLead
   358 label *label316
-    * jump *label325 lessThanEq :drawMaterials:target 0
-    * sensor *tmp253 A¾BHMW-air-factory13 :drawMaterials:item
-    * set :drawItem.3:y :drawMaterials:y
+  359 jump *label325 lessThanEq :drawMaterials:targetFactoryLead 0
+  360 sensor *tmp253 A¾BHMW-air-factory13 @lead
+  361 set :drawItem.3:y 90
   362 op mul *tmp258 122 *tmp253
-    * op div *tmp259 *tmp258 :drawMaterials:target
+  363 op div *tmp259 *tmp258 :drawMaterials:targetFactoryLead
   364 op min :drawItem.3:length 122 *tmp259
-    * op mul *tmp262 :drawMaterials:col 88
-    * op add :drawItem.3:iconX 11 *tmp262
-    * op add :drawItem.3:barX 22 *tmp262
-    * op add :drawItem.3:textX 170 *tmp262
+  365 op mul *tmp262 0 88
+  366 op add :drawItem.3:iconX 11 0
+  367 op add :drawItem.3:barX 22 0
+  368 op add :drawItem.3:textX 170 0
   369 draw col %[white]
-    * op add *tmp270 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp270 :drawMaterials:item 16 0
+  370 op add *tmp270 90 5
+  371 draw image 11 95 @lead 16 0
   372 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  373 draw rect 22 90 :drawItem.3:length 10
   374 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
-    * op add *tmp272 :drawMaterials:y 7
-    * print :drawMaterials:target
-    * draw print :drawItem.3:textX *tmp272 @right
+  375 draw lineRect 22 90 122 10
+  376 op add *tmp272 90 7
+  377 print :drawMaterials:targetFactoryLead
+  378 draw print 170 97 @right
   379 label *label317
   380 label *label318
-    * op add :drawText.16:x *tmp262 171
-    * print :drawMaterials:target
-    * draw print :drawText.16:x *tmp272 @right
+  381 op add :drawText.16:x 0 171
+  382 print :drawMaterials:targetFactoryLead
+  383 draw print 171 97 @right
   384 label *label319
   385 label *label320
   386 label *label321
-    * op add :drawItem.3:col :drawMaterials:col 1
-    * jump *label322 lessThan :drawItem.3:col 1
+  387 op add :drawItem.3:col 0 1
+  388 jump *label322 lessThan 1 1
   389 set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawMaterials:y 15
+  390 op sub :drawItem.3:y 90 15
   391 label *label322
   392 label *label323
   393 label *label324
-    * set :drawMaterials:col :drawItem.3:col
-    * set :drawMaterials:y :drawItem.3:y
+  394 set :drawMaterials:col 0
+  395 set :drawMaterials:y 75
   396 label *label325
   397 label *label326
   398 label *label327
   399 set :drawMaterials:item @silicon
   400 set :drawMaterials:target :drawMaterials:targetFactorySilicon
   401 label *label330
-    * jump *label339 lessThanEq :drawMaterials:target 0
-    * sensor *tmp253 A¾BHMW-air-factory13 :drawMaterials:item
+  402 jump *label339 lessThanEq :drawMaterials:targetFactorySilicon 0
+  403 sensor *tmp253 A¾BHMW-air-factory13 @silicon
   404 set :drawItem.3:y :drawMaterials:y
   405 op mul *tmp258 122 *tmp253
-    * op div *tmp259 *tmp258 :drawMaterials:target
+  406 op div *tmp259 *tmp258 :drawMaterials:targetFactorySilicon
   407 op min :drawItem.3:length 122 *tmp259
   408 op mul *tmp262 :drawMaterials:col 88
   409 op add :drawItem.3:iconX 11 *tmp262
 
   411 op add :drawItem.3:textX 170 *tmp262
   412 draw col %[white]
   413 op add *tmp270 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp270 :drawMaterials:item 16 0
+  414 draw image :drawItem.3:iconX *tmp270 @silicon 16 0
   415 draw color 0 128 0 255
   416 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
   417 draw color 0 255 0 255
   418 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
   419 op add *tmp272 :drawMaterials:y 7
-    * print :drawMaterials:target
+  420 print :drawMaterials:targetFactorySilicon
   421 draw print :drawItem.3:textX *tmp272 @right
   422 label *label331
   423 label *label332
   424 op add :drawText.16:x *tmp262 171
-    * print :drawMaterials:target
+  425 print :drawMaterials:targetFactorySilicon
   426 draw print :drawText.16:x *tmp272 @right
   427 label *label333
   428 label *label334
 
   434 label *label336
   435 label *label337
   436 label *label338
-    * set :drawMaterials:col :drawItem.3:col
-    * set :drawMaterials:y :drawItem.3:y
   437 label *label339
   438 label *label340
   439 label *label341

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-18 instructions):
 
   353 label *label92
   354 jump *label82 always
   355 label *label81
-    * set :drawMaterials:item @lead
-    * set :drawMaterials:target :drawMaterials:targetFactoryLead
   356 label *label316
   357 jump *label325 lessThanEq :drawMaterials:targetFactoryLead 0
   358 sensor *tmp253 A¾BHMW-air-factory13 @lead
-    * set :drawItem.3:y 90
   359 op mul *tmp258 122 *tmp253
   360 op div *tmp259 *tmp258 :drawMaterials:targetFactoryLead
   361 op min :drawItem.3:length 122 *tmp259
-    * op mul *tmp262 0 88
-    * op add :drawItem.3:iconX 11 0
-    * op add :drawItem.3:barX 22 0
-    * op add :drawItem.3:textX 170 0
   362 draw col %[white]
-    * op add *tmp270 90 5
   363 draw image 11 95 @lead 16 0
   364 draw color 0 128 0 255
   365 draw rect 22 90 :drawItem.3:length 10
   366 draw color 0 255 0 255
   367 draw lineRect 22 90 122 10
-    * op add *tmp272 90 7
   368 print :drawMaterials:targetFactoryLead
   369 draw print 170 97 @right
   370 label *label317
   371 label *label318
-    * op add :drawText.16:x 0 171
   372 print :drawMaterials:targetFactoryLead
   373 draw print 171 97 @right
   374 label *label319
   375 label *label320
   376 label *label321
-    * op add :drawItem.3:col 0 1
   377 jump *label322 lessThan 1 1
-    * set :drawItem.3:col 0
-    * op sub :drawItem.3:y 90 15
   378 label *label322
   379 label *label323
   380 label *label324
 
   383 label *label325
   384 label *label326
   385 label *label327
-    * set :drawMaterials:item @silicon
-    * set :drawMaterials:target :drawMaterials:targetFactorySilicon
   386 label *label330
   387 jump *label339 lessThanEq :drawMaterials:targetFactorySilicon 0
   388 sensor *tmp253 A¾BHMW-air-factory13 @silicon
-    * set :drawItem.3:y :drawMaterials:y
   389 op mul *tmp258 122 *tmp253
   390 op div *tmp259 *tmp258 :drawMaterials:targetFactorySilicon
   391 op min :drawItem.3:length 122 *tmp259
-    * op mul *tmp262 :drawMaterials:col 88
-    * op add :drawItem.3:iconX 11 *tmp262
-    * op add :drawItem.3:barX 22 *tmp262
-    * op add :drawItem.3:textX 170 *tmp262
+  392 op mul *tmp262 0 88
+  393 op add :drawItem.3:iconX 11 0
+  394 op add :drawItem.3:barX 22 0
+  395 op add :drawItem.3:textX 170 0
   396 draw col %[white]
   397 op add *tmp270 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp270 @silicon 16 0
+  398 draw image 11 *tmp270 @silicon 16 0
   399 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  400 draw rect 22 :drawMaterials:y :drawItem.3:length 10
   401 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  402 draw lineRect 22 :drawMaterials:y 122 10
   403 op add *tmp272 :drawMaterials:y 7
   404 print :drawMaterials:targetFactorySilicon
-    * draw print :drawItem.3:textX *tmp272 @right
+  405 draw print 170 *tmp272 @right
   406 label *label331
   407 label *label332
-    * op add :drawText.16:x *tmp262 171
+  408 op add :drawText.16:x 0 171
   409 print :drawMaterials:targetFactorySilicon
-    * draw print :drawText.16:x *tmp272 @right
+  410 draw print 171 *tmp272 @right
   411 label *label333
   412 label *label334
   413 label *label335
-    * op add :drawItem.3:col :drawMaterials:col 1
-    * jump *label336 lessThan :drawItem.3:col 1
-    * set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawMaterials:y 15
+  414 op add :drawItem.3:col 0 1
+  415 jump *label336 lessThan 1 1
   416 label *label336
   417 label *label337
   418 label *label338

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-7 instructions):
 
   378 label *label322
   379 label *label323
   380 label *label324
-    * set :drawMaterials:col 0
   381 set :drawMaterials:y 75
   382 label *label325
   383 label *label326
 
   388 op mul *tmp258 122 *tmp253
   389 op div *tmp259 *tmp258 :drawMaterials:targetFactorySilicon
   390 op min :drawItem.3:length 122 *tmp259
-    * op mul *tmp262 0 88
-    * op add :drawItem.3:iconX 11 0
-    * op add :drawItem.3:barX 22 0
-    * op add :drawItem.3:textX 170 0
   391 draw col %[white]
   392 op add *tmp270 :drawMaterials:y 5
   393 draw image 11 *tmp270 @silicon 16 0
 
   400 draw print 170 *tmp272 @right
   401 label *label331
   402 label *label332
-    * op add :drawText.16:x 0 171
   403 print :drawMaterials:targetFactorySilicon
   404 draw print 171 *tmp272 @right
   405 label *label333
   406 label *label334
   407 label *label335
-    * op add :drawItem.3:col 0 1
   408 jump *label336 lessThan 1 1
   409 label *label336
   410 label *label337

Modifications by Unroll iteration loop at Display.mnd:253:13 (+178 instructions):
 
   470 label *label144
   471 label *label141
   472 jump *label146 equal .materialCount false
-    * set :drawMaterials:item.1 @copper
-    * set :drawMaterials:target.1 .targetCopper
-    * setaddr *tmp310 *label151
-    * jump *label148 always
-    * multilabel *label151 (m:marker1)
-    * set :drawMaterials:item.1 @lead
-    * set :drawMaterials:target.1 .targetLead
-    * setaddr *tmp310 *label152
-    * jump *label148 always
-    * multilabel *label152 (m:marker1)
-    * set :drawMaterials:item.1 @graphite
-    * set :drawMaterials:target.1 .targetGraphite
-    * setaddr *tmp310 *label153
-    * jump *label148 always
-    * multilabel *label153 (m:marker1)
-    * set :drawMaterials:item.1 @silicon
-    * set :drawMaterials:target.1 .targetSilicon
-    * setaddr *tmp310 *label154
-    * jump *label148 always
-    * multilabel *label154 (m:marker1)
-    * set :drawMaterials:item.1 @titanium
-    * set :drawMaterials:target.1 .targetTitanium
-    * setaddr *tmp310 *label155
-    * jump *label148 always
-    * multilabel *label155 (m:marker1)
-    * set :drawMaterials:item.1 @metaglass
-    * set :drawMaterials:target.1 .targetMetaglass
-    * setaddr *tmp310 *label156
-    * jump *label148 always
-    * multilabel *label156 (m:marker1)
-    * set :drawMaterials:item.1 @thorium
-    * set :drawMaterials:target.1 .targetThorium
-    * setaddr *tmp310 *label157
-    * label *label148
-    * jump *label158 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp313 .core :drawMaterials:item.1
-    * set :drawItem.5:y :drawMaterials:y
-    * op mul *tmp318 122 *tmp313
-    * op div *tmp319 *tmp318 :drawMaterials:target.1
-    * op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp322 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp322
-    * op add :drawItem.5:barX 22 *tmp322
-    * op add :drawItem.5:textX 170 *tmp322
-    * draw col %[white]
-    * op add *tmp330 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
-    * draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
-    * draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
-    * op add *tmp332 :drawMaterials:y 7
-    * print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp332 @right
-    * label *label163
-    * label *label162
-    * op add :drawText.24:x *tmp322 171
-    * print :drawMaterials:target.1
-    * draw print :drawText.24:x *tmp332 @right
-    * label *label165
-    * label *label164
-    * label *label161
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label166 lessThan :drawItem.5:col 1
-    * set :drawItem.5:col 0
-    * op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label166
-    * label *label167
-    * label *label160
-    * set :drawMaterials:col :drawItem.5:col
-    * set :drawMaterials:y :drawItem.5:y
-    * op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label168 greaterThan :drawMaterials:count 0
-    * jump *label150 always
-    * label *label168
-    * label *label169
-    * label *label158
-    * label *label159
-    * label *label149
-    * multijump *tmp310 0 0 (m:marker1)
-    * multilabel *label157 (m:marker1)
-    * label *label150
+  473 set :drawMaterials:item.1 @copper
+  474 set :drawMaterials:target.1 .targetCopper
+  475 label *label345
+  476 jump *label356 lessThanEq :drawMaterials:target.1 0
+  477 sensor *tmp313 .core :drawMaterials:item.1
+  478 set :drawItem.5:y :drawMaterials:y
+  479 op mul *tmp318 122 *tmp313
+  480 op div *tmp319 *tmp318 :drawMaterials:target.1
+  481 op min :drawItem.5:length 122 *tmp319
+  482 op mul *tmp322 :drawMaterials:col 88
+  483 op add :drawItem.5:iconX 11 *tmp322
+  484 op add :drawItem.5:barX 22 *tmp322
+  485 op add :drawItem.5:textX 170 *tmp322
+  486 draw col %[white]
+  487 op add *tmp330 :drawMaterials:y 5
+  488 draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
+  489 draw color 0 128 0 255
+  490 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  491 draw color 0 255 0 255
+  492 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  493 op add *tmp332 :drawMaterials:y 7
+  494 print :drawMaterials:target.1
+  495 draw print :drawItem.5:textX *tmp332 @right
+  496 label *label346
+  497 label *label347
+  498 op add :drawText.24:x *tmp322 171
+  499 print :drawMaterials:target.1
+  500 draw print :drawText.24:x *tmp332 @right
+  501 label *label348
+  502 label *label349
+  503 label *label350
+  504 op add :drawItem.5:col :drawMaterials:col 1
+  505 jump *label351 lessThan :drawItem.5:col 1
+  506 set :drawItem.5:col 0
+  507 op sub :drawItem.5:y :drawMaterials:y 15
+  508 label *label351
+  509 label *label352
+  510 label *label353
+  511 set :drawMaterials:col :drawItem.5:col
+  512 set :drawMaterials:y :drawItem.5:y
+  513 op sub :drawMaterials:count :drawMaterials:count 1
+  514 jump *label354 greaterThan :drawMaterials:count 0
+  515 jump *label150 always
+  516 label *label354
+  517 label *label355
+  518 label *label356
+  519 label *label357
+  520 label *label358
+  521 set :drawMaterials:item.1 @lead
+  522 set :drawMaterials:target.1 .targetLead
+  523 label *label361
+  524 jump *label372 lessThanEq :drawMaterials:target.1 0
+  525 sensor *tmp313 .core :drawMaterials:item.1
+  526 set :drawItem.5:y :drawMaterials:y
+  527 op mul *tmp318 122 *tmp313
+  528 op div *tmp319 *tmp318 :drawMaterials:target.1
+  529 op min :drawItem.5:length 122 *tmp319
+  530 op mul *tmp322 :drawMaterials:col 88
+  531 op add :drawItem.5:iconX 11 *tmp322
+  532 op add :drawItem.5:barX 22 *tmp322
+  533 op add :drawItem.5:textX 170 *tmp322
+  534 draw col %[white]
+  535 op add *tmp330 :drawMaterials:y 5
+  536 draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
+  537 draw color 0 128 0 255
+  538 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  539 draw color 0 255 0 255
+  540 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  541 op add *tmp332 :drawMaterials:y 7
+  542 print :drawMaterials:target.1
+  543 draw print :drawItem.5:textX *tmp332 @right
+  544 label *label362
+  545 label *label363
+  546 op add :drawText.24:x *tmp322 171
+  547 print :drawMaterials:target.1
+  548 draw print :drawText.24:x *tmp332 @right
+  549 label *label364
+  550 label *label365
+  551 label *label366
+  552 op add :drawItem.5:col :drawMaterials:col 1
+  553 jump *label367 lessThan :drawItem.5:col 1
+  554 set :drawItem.5:col 0
+  555 op sub :drawItem.5:y :drawMaterials:y 15
+  556 label *label367
+  557 label *label368
+  558 label *label369
+  559 set :drawMaterials:col :drawItem.5:col
+  560 set :drawMaterials:y :drawItem.5:y
+  561 op sub :drawMaterials:count :drawMaterials:count 1
+  562 jump *label370 greaterThan :drawMaterials:count 0
+  563 jump *label150 always
+  564 label *label370
+  565 label *label371
+  566 label *label372
+  567 label *label373
+  568 label *label374
+  569 set :drawMaterials:item.1 @graphite
+  570 set :drawMaterials:target.1 .targetGraphite
+  571 label *label377
+  572 jump *label388 lessThanEq :drawMaterials:target.1 0
+  573 sensor *tmp313 .core :drawMaterials:item.1
+  574 set :drawItem.5:y :drawMaterials:y
+  575 op mul *tmp318 122 *tmp313
+  576 op div *tmp319 *tmp318 :drawMaterials:target.1
+  577 op min :drawItem.5:length 122 *tmp319
+  578 op mul *tmp322 :drawMaterials:col 88
+  579 op add :drawItem.5:iconX 11 *tmp322
+  580 op add :drawItem.5:barX 22 *tmp322
+  581 op add :drawItem.5:textX 170 *tmp322
+  582 draw col %[white]
+  583 op add *tmp330 :drawMaterials:y 5
+  584 draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
+  585 draw color 0 128 0 255
+  586 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  587 draw color 0 255 0 255
+  588 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  589 op add *tmp332 :drawMaterials:y 7
+  590 print :drawMaterials:target.1
+  591 draw print :drawItem.5:textX *tmp332 @right
+  592 label *label378
+  593 label *label379
+  594 op add :drawText.24:x *tmp322 171
+  595 print :drawMaterials:target.1
+  596 draw print :drawText.24:x *tmp332 @right
+  597 label *label380
+  598 label *label381
+  599 label *label382
+  600 op add :drawItem.5:col :drawMaterials:col 1
+  601 jump *label383 lessThan :drawItem.5:col 1
+  602 set :drawItem.5:col 0
+  603 op sub :drawItem.5:y :drawMaterials:y 15
+  604 label *label383
+  605 label *label384
+  606 label *label385
+  607 set :drawMaterials:col :drawItem.5:col
+  608 set :drawMaterials:y :drawItem.5:y
+  609 op sub :drawMaterials:count :drawMaterials:count 1
+  610 jump *label386 greaterThan :drawMaterials:count 0
+  611 jump *label150 always
+  612 label *label386
+  613 label *label387
+  614 label *label388
+  615 label *label389
+  616 label *label390
+  617 set :drawMaterials:item.1 @silicon
+  618 set :drawMaterials:target.1 .targetSilicon
+  619 label *label393
+  620 jump *label404 lessThanEq :drawMaterials:target.1 0
+  621 sensor *tmp313 .core :drawMaterials:item.1
+  622 set :drawItem.5:y :drawMaterials:y
+  623 op mul *tmp318 122 *tmp313
+  624 op div *tmp319 *tmp318 :drawMaterials:target.1
+  625 op min :drawItem.5:length 122 *tmp319
+  626 op mul *tmp322 :drawMaterials:col 88
+  627 op add :drawItem.5:iconX 11 *tmp322
+  628 op add :drawItem.5:barX 22 *tmp322
+  629 op add :drawItem.5:textX 170 *tmp322
+  630 draw col %[white]
+  631 op add *tmp330 :drawMaterials:y 5
+  632 draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
+  633 draw color 0 128 0 255
+  634 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  635 draw color 0 255 0 255
+  636 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  637 op add *tmp332 :drawMaterials:y 7
+  638 print :drawMaterials:target.1
+  639 draw print :drawItem.5:textX *tmp332 @right
+  640 label *label394
+  641 label *label395
+  642 op add :drawText.24:x *tmp322 171
+  643 print :drawMaterials:target.1
+  644 draw print :drawText.24:x *tmp332 @right
+  645 label *label396
+  646 label *label397
+  647 label *label398
+  648 op add :drawItem.5:col :drawMaterials:col 1
+  649 jump *label399 lessThan :drawItem.5:col 1
+  650 set :drawItem.5:col 0
+  651 op sub :drawItem.5:y :drawMaterials:y 15
+  652 label *label399
+  653 label *label400
+  654 label *label401
+  655 set :drawMaterials:col :drawItem.5:col
+  656 set :drawMaterials:y :drawItem.5:y
+  657 op sub :drawMaterials:count :drawMaterials:count 1
+  658 jump *label402 greaterThan :drawMaterials:count 0
+  659 jump *label150 always
+  660 label *label402
+  661 label *label403
+  662 label *label404
+  663 label *label405
+  664 label *label406
+  665 set :drawMaterials:item.1 @titanium
+  666 set :drawMaterials:target.1 .targetTitanium
+  667 label *label409
+  668 jump *label420 lessThanEq :drawMaterials:target.1 0
+  669 sensor *tmp313 .core :drawMaterials:item.1
+  670 set :drawItem.5:y :drawMaterials:y
+  671 op mul *tmp318 122 *tmp313
+  672 op div *tmp319 *tmp318 :drawMaterials:target.1
+  673 op min :drawItem.5:length 122 *tmp319
+  674 op mul *tmp322 :drawMaterials:col 88
+  675 op add :drawItem.5:iconX 11 *tmp322
+  676 op add :drawItem.5:barX 22 *tmp322
+  677 op add :drawItem.5:textX 170 *tmp322
+  678 draw col %[white]
+  679 op add *tmp330 :drawMaterials:y 5
+  680 draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
+  681 draw color 0 128 0 255
+  682 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  683 draw color 0 255 0 255
+  684 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  685 op add *tmp332 :drawMaterials:y 7
+  686 print :drawMaterials:target.1
+  687 draw print :drawItem.5:textX *tmp332 @right
+  688 label *label410
+  689 label *label411
+  690 op add :drawText.24:x *tmp322 171
+  691 print :drawMaterials:target.1
+  692 draw print :drawText.24:x *tmp332 @right
+  693 label *label412
+  694 label *label413
+  695 label *label414
+  696 op add :drawItem.5:col :drawMaterials:col 1
+  697 jump *label415 lessThan :drawItem.5:col 1
+  698 set :drawItem.5:col 0
+  699 op sub :drawItem.5:y :drawMaterials:y 15
+  700 label *label415
+  701 label *label416
+  702 label *label417
+  703 set :drawMaterials:col :drawItem.5:col
+  704 set :drawMaterials:y :drawItem.5:y
+  705 op sub :drawMaterials:count :drawMaterials:count 1
+  706 jump *label418 greaterThan :drawMaterials:count 0
+  707 jump *label150 always
+  708 label *label418
+  709 label *label419
+  710 label *label420
+  711 label *label421
+  712 label *label422
+  713 set :drawMaterials:item.1 @metaglass
+  714 set :drawMaterials:target.1 .targetMetaglass
+  715 label *label425
+  716 jump *label436 lessThanEq :drawMaterials:target.1 0
+  717 sensor *tmp313 .core :drawMaterials:item.1
+  718 set :drawItem.5:y :drawMaterials:y
+  719 op mul *tmp318 122 *tmp313
+  720 op div *tmp319 *tmp318 :drawMaterials:target.1
+  721 op min :drawItem.5:length 122 *tmp319
+  722 op mul *tmp322 :drawMaterials:col 88
+  723 op add :drawItem.5:iconX 11 *tmp322
+  724 op add :drawItem.5:barX 22 *tmp322
+  725 op add :drawItem.5:textX 170 *tmp322
+  726 draw col %[white]
+  727 op add *tmp330 :drawMaterials:y 5
+  728 draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
+  729 draw color 0 128 0 255
+  730 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  731 draw color 0 255 0 255
+  732 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  733 op add *tmp332 :drawMaterials:y 7
+  734 print :drawMaterials:target.1
+  735 draw print :drawItem.5:textX *tmp332 @right
+  736 label *label426
+  737 label *label427
+  738 op add :drawText.24:x *tmp322 171
+  739 print :drawMaterials:target.1
+  740 draw print :drawText.24:x *tmp332 @right
+  741 label *label428
+  742 label *label429
+  743 label *label430
+  744 op add :drawItem.5:col :drawMaterials:col 1
+  745 jump *label431 lessThan :drawItem.5:col 1
+  746 set :drawItem.5:col 0
+  747 op sub :drawItem.5:y :drawMaterials:y 15
+  748 label *label431
+  749 label *label432
+  750 label *label433
+  751 set :drawMaterials:col :drawItem.5:col
+  752 set :drawMaterials:y :drawItem.5:y
+  753 op sub :drawMaterials:count :drawMaterials:count 1
+  754 jump *label434 greaterThan :drawMaterials:count 0
+  755 jump *label150 always
+  756 label *label434
+  757 label *label435
+  758 label *label436
+  759 label *label437
+  760 label *label438
+  761 set :drawMaterials:item.1 @thorium
+  762 set :drawMaterials:target.1 .targetThorium
+  763 label *label441
+  764 jump *label452 lessThanEq :drawMaterials:target.1 0
+  765 sensor *tmp313 .core :drawMaterials:item.1
+  766 set :drawItem.5:y :drawMaterials:y
+  767 op mul *tmp318 122 *tmp313
+  768 op div *tmp319 *tmp318 :drawMaterials:target.1
+  769 op min :drawItem.5:length 122 *tmp319
+  770 op mul *tmp322 :drawMaterials:col 88
+  771 op add :drawItem.5:iconX 11 *tmp322
+  772 op add :drawItem.5:barX 22 *tmp322
+  773 op add :drawItem.5:textX 170 *tmp322
+  774 draw col %[white]
+  775 op add *tmp330 :drawMaterials:y 5
+  776 draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
+  777 draw color 0 128 0 255
+  778 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  779 draw color 0 255 0 255
+  780 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  781 op add *tmp332 :drawMaterials:y 7
+  782 print :drawMaterials:target.1
+  783 draw print :drawItem.5:textX *tmp332 @right
+  784 label *label442
+  785 label *label443
+  786 op add :drawText.24:x *tmp322 171
+  787 print :drawMaterials:target.1
+  788 draw print :drawText.24:x *tmp332 @right
+  789 label *label444
+  790 label *label445
+  791 label *label446
+  792 op add :drawItem.5:col :drawMaterials:col 1
+  793 jump *label447 lessThan :drawItem.5:col 1
+  794 set :drawItem.5:col 0
+  795 op sub :drawItem.5:y :drawMaterials:y 15
+  796 label *label447
+  797 label *label448
+  798 label *label449
+  799 set :drawMaterials:col :drawItem.5:col
+  800 set :drawMaterials:y :drawItem.5:y
+  801 op sub :drawMaterials:count :drawMaterials:count 1
+  802 jump *label450 greaterThan :drawMaterials:count 0
+  803 jump *label150 always
+  804 label *label450
+  805 label *label451
+  806 label *label452
+  807 label *label453
+  808 label *label454
+  809 label *label150
   810 label *label146
   811 label *label147
   812 label *label127

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
   474 set :drawMaterials:target.1 .targetCopper
   475 label *label345
   476 jump *label356 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp313 .core :drawMaterials:item.1
-    * set :drawItem.5:y :drawMaterials:y
+  477 sensor *tmp313 .core @copper
+  478 set :drawItem.5:y 90
   479 op mul *tmp318 122 *tmp313
   480 op div *tmp319 *tmp318 :drawMaterials:target.1
   481 op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp322 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp322
-    * op add :drawItem.5:barX 22 *tmp322
-    * op add :drawItem.5:textX 170 *tmp322
+  482 op mul *tmp322 0 88
+  483 op add :drawItem.5:iconX 11 0
+  484 op add :drawItem.5:barX 22 0
+  485 op add :drawItem.5:textX 170 0
   486 draw col %[white]
-    * op add *tmp330 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
+  487 op add *tmp330 90 5
+  488 draw image 11 95 @copper 16 0
   489 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  490 draw rect 22 90 :drawItem.5:length 10
   491 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
-    * op add *tmp332 :drawMaterials:y 7
+  492 draw lineRect 22 90 122 10
+  493 op add *tmp332 90 7
   494 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp332 @right
+  495 draw print 170 97 @right
   496 label *label346
   497 label *label347
-    * op add :drawText.24:x *tmp322 171
+  498 op add :drawText.24:x 0 171
   499 print :drawMaterials:target.1
-    * draw print :drawText.24:x *tmp332 @right
+  500 draw print 171 97 @right
   501 label *label348
   502 label *label349
   503 label *label350
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label351 lessThan :drawItem.5:col 1
+  504 op add :drawItem.5:col 0 1
+  505 jump *label351 lessThan 1 1
   506 set :drawItem.5:col 0
-    * op sub :drawItem.5:y :drawMaterials:y 15
+  507 op sub :drawItem.5:y 90 15
   508 label *label351
   509 label *label352
   510 label *label353
-    * set :drawMaterials:col :drawItem.5:col
-    * set :drawMaterials:y :drawItem.5:y
-    * op sub :drawMaterials:count :drawMaterials:count 1
+  511 set :drawMaterials:col 0
+  512 set :drawMaterials:y 75
+  513 op sub :drawMaterials:count .materialCount 1
   514 jump *label354 greaterThan :drawMaterials:count 0
   515 jump *label150 always
   516 label *label354
 
   522 set :drawMaterials:target.1 .targetLead
   523 label *label361
   524 jump *label372 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp313 .core :drawMaterials:item.1
+  525 sensor *tmp313 .core @lead
   526 set :drawItem.5:y :drawMaterials:y
   527 op mul *tmp318 122 *tmp313
   528 op div *tmp319 *tmp318 :drawMaterials:target.1
 
   533 op add :drawItem.5:textX 170 *tmp322
   534 draw col %[white]
   535 op add *tmp330 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
+  536 draw image :drawItem.5:iconX *tmp330 @lead 16 0
   537 draw color 0 128 0 255
   538 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   539 draw color 0 255 0 255
 
   570 set :drawMaterials:target.1 .targetGraphite
   571 label *label377
   572 jump *label388 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp313 .core :drawMaterials:item.1
+  573 sensor *tmp313 .core @graphite
   574 set :drawItem.5:y :drawMaterials:y
   575 op mul *tmp318 122 *tmp313
   576 op div *tmp319 *tmp318 :drawMaterials:target.1
 
   581 op add :drawItem.5:textX 170 *tmp322
   582 draw col %[white]
   583 op add *tmp330 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
+  584 draw image :drawItem.5:iconX *tmp330 @graphite 16 0
   585 draw color 0 128 0 255
   586 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   587 draw color 0 255 0 255
 
   618 set :drawMaterials:target.1 .targetSilicon
   619 label *label393
   620 jump *label404 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp313 .core :drawMaterials:item.1
+  621 sensor *tmp313 .core @silicon
   622 set :drawItem.5:y :drawMaterials:y
   623 op mul *tmp318 122 *tmp313
   624 op div *tmp319 *tmp318 :drawMaterials:target.1
 
   629 op add :drawItem.5:textX 170 *tmp322
   630 draw col %[white]
   631 op add *tmp330 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
+  632 draw image :drawItem.5:iconX *tmp330 @silicon 16 0
   633 draw color 0 128 0 255
   634 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   635 draw color 0 255 0 255
 
   666 set :drawMaterials:target.1 .targetTitanium
   667 label *label409
   668 jump *label420 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp313 .core :drawMaterials:item.1
+  669 sensor *tmp313 .core @titanium
   670 set :drawItem.5:y :drawMaterials:y
   671 op mul *tmp318 122 *tmp313
   672 op div *tmp319 *tmp318 :drawMaterials:target.1
 
   677 op add :drawItem.5:textX 170 *tmp322
   678 draw col %[white]
   679 op add *tmp330 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
+  680 draw image :drawItem.5:iconX *tmp330 @titanium 16 0
   681 draw color 0 128 0 255
   682 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   683 draw color 0 255 0 255
 
   714 set :drawMaterials:target.1 .targetMetaglass
   715 label *label425
   716 jump *label436 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp313 .core :drawMaterials:item.1
+  717 sensor *tmp313 .core @metaglass
   718 set :drawItem.5:y :drawMaterials:y
   719 op mul *tmp318 122 *tmp313
   720 op div *tmp319 *tmp318 :drawMaterials:target.1
 
   725 op add :drawItem.5:textX 170 *tmp322
   726 draw col %[white]
   727 op add *tmp330 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
+  728 draw image :drawItem.5:iconX *tmp330 @metaglass 16 0
   729 draw color 0 128 0 255
   730 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   731 draw color 0 255 0 255
 
   762 set :drawMaterials:target.1 .targetThorium
   763 label *label441
   764 jump *label452 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp313 .core :drawMaterials:item.1
+  765 sensor *tmp313 .core @thorium
   766 set :drawItem.5:y :drawMaterials:y
   767 op mul *tmp318 122 *tmp313
   768 op div *tmp319 *tmp318 :drawMaterials:target.1
 
   773 op add :drawItem.5:textX 170 *tmp322
   774 draw col %[white]
   775 op add *tmp330 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp330 :drawMaterials:item.1 16 0
+  776 draw image :drawItem.5:iconX *tmp330 @thorium 16 0
   777 draw color 0 128 0 255
   778 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   779 draw color 0 255 0 255
 
   796 label *label447
   797 label *label448
   798 label *label449
-    * set :drawMaterials:col :drawItem.5:col
-    * set :drawMaterials:y :drawItem.5:y
   799 op sub :drawMaterials:count :drawMaterials:count 1
   800 jump *label450 greaterThan :drawMaterials:count 0
   801 jump *label150 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-21 instructions):
 
   470 label *label144
   471 label *label141
   472 jump *label146 equal .materialCount false
-    * set :drawMaterials:item.1 @copper
   473 set :drawMaterials:target.1 .targetCopper
   474 label *label345
   475 jump *label356 lessThanEq :drawMaterials:target.1 0
   476 sensor *tmp313 .core @copper
-    * set :drawItem.5:y 90
   477 op mul *tmp318 122 *tmp313
   478 op div *tmp319 *tmp318 :drawMaterials:target.1
   479 op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp322 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   480 draw col %[white]
-    * op add *tmp330 90 5
   481 draw image 11 95 @copper 16 0
   482 draw color 0 128 0 255
   483 draw rect 22 90 :drawItem.5:length 10
   484 draw color 0 255 0 255
   485 draw lineRect 22 90 122 10
-    * op add *tmp332 90 7
   486 print :drawMaterials:target.1
   487 draw print 170 97 @right
   488 label *label346
   489 label *label347
-    * op add :drawText.24:x 0 171
   490 print :drawMaterials:target.1
   491 draw print 171 97 @right
   492 label *label348
   493 label *label349
   494 label *label350
-    * op add :drawItem.5:col 0 1
   495 jump *label351 lessThan 1 1
-    * set :drawItem.5:col 0
-    * op sub :drawItem.5:y 90 15
   496 label *label351
   497 label *label352
   498 label *label353
 
   506 label *label356
   507 label *label357
   508 label *label358
-    * set :drawMaterials:item.1 @lead
   509 set :drawMaterials:target.1 .targetLead
   510 label *label361
   511 jump *label372 lessThanEq :drawMaterials:target.1 0
 
   514 op mul *tmp318 122 *tmp313
   515 op div *tmp319 *tmp318 :drawMaterials:target.1
   516 op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp322 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp322
-    * op add :drawItem.5:barX 22 *tmp322
-    * op add :drawItem.5:textX 170 *tmp322
+  517 op mul *tmp322 0 88
+  518 op add :drawItem.5:iconX 11 0
+  519 op add :drawItem.5:barX 22 0
+  520 op add :drawItem.5:textX 170 0
   521 draw col %[white]
   522 op add *tmp330 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp330 @lead 16 0
+  523 draw image 11 *tmp330 @lead 16 0
   524 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  525 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   526 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  527 draw lineRect 22 :drawMaterials:y 122 10
   528 op add *tmp332 :drawMaterials:y 7
   529 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp332 @right
+  530 draw print 170 *tmp332 @right
   531 label *label362
   532 label *label363
-    * op add :drawText.24:x *tmp322 171
+  533 op add :drawText.24:x 0 171
   534 print :drawMaterials:target.1
-    * draw print :drawText.24:x *tmp332 @right
+  535 draw print 171 *tmp332 @right
   536 label *label364
   537 label *label365
   538 label *label366
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label367 lessThan :drawItem.5:col 1
+  539 op add :drawItem.5:col 0 1
+  540 jump *label367 lessThan 1 1
   541 set :drawItem.5:col 0
   542 op sub :drawItem.5:y :drawMaterials:y 15
   543 label *label367
   544 label *label368
   545 label *label369
-    * set :drawMaterials:col :drawItem.5:col
+  546 set :drawMaterials:col 0
   547 set :drawMaterials:y :drawItem.5:y
   548 op sub :drawMaterials:count :drawMaterials:count 1
   549 jump *label370 greaterThan :drawMaterials:count 0
 
   553 label *label372
   554 label *label373
   555 label *label374
-    * set :drawMaterials:item.1 @graphite
   556 set :drawMaterials:target.1 .targetGraphite
   557 label *label377
   558 jump *label388 lessThanEq :drawMaterials:target.1 0
 
   600 label *label388
   601 label *label389
   602 label *label390
-    * set :drawMaterials:item.1 @silicon
   603 set :drawMaterials:target.1 .targetSilicon
   604 label *label393
   605 jump *label404 lessThanEq :drawMaterials:target.1 0
 
   647 label *label404
   648 label *label405
   649 label *label406
-    * set :drawMaterials:item.1 @titanium
   650 set :drawMaterials:target.1 .targetTitanium
   651 label *label409
   652 jump *label420 lessThanEq :drawMaterials:target.1 0
 
   694 label *label420
   695 label *label421
   696 label *label422
-    * set :drawMaterials:item.1 @metaglass
   697 set :drawMaterials:target.1 .targetMetaglass
   698 label *label425
   699 jump *label436 lessThanEq :drawMaterials:target.1 0
 
   741 label *label436
   742 label *label437
   743 label *label438
-    * set :drawMaterials:item.1 @thorium
   744 set :drawMaterials:target.1 .targetThorium
   745 label *label441
   746 jump *label452 lessThanEq :drawMaterials:target.1 0
   747 sensor *tmp313 .core @thorium
-    * set :drawItem.5:y :drawMaterials:y
   748 op mul *tmp318 122 *tmp313
   749 op div *tmp319 *tmp318 :drawMaterials:target.1
   750 op min :drawItem.5:length 122 *tmp319
 
   772 label *label446
   773 op add :drawItem.5:col :drawMaterials:col 1
   774 jump *label447 lessThan :drawItem.5:col 1
-    * set :drawItem.5:col 0
-    * op sub :drawItem.5:y :drawMaterials:y 15
   775 label *label447
   776 label *label448
   777 label *label449

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-8 instructions):
 
   510 label *label361
   511 jump *label372 lessThanEq :drawMaterials:target.1 0
   512 sensor *tmp313 .core @lead
-    * set :drawItem.5:y :drawMaterials:y
   513 op mul *tmp318 122 *tmp313
   514 op div *tmp319 *tmp318 :drawMaterials:target.1
   515 op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp322 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   516 draw col %[white]
   517 op add *tmp330 :drawMaterials:y 5
   518 draw image 11 *tmp330 @lead 16 0
 
   525 draw print 170 *tmp332 @right
   526 label *label362
   527 label *label363
-    * op add :drawText.24:x 0 171
   528 print :drawMaterials:target.1
   529 draw print 171 *tmp332 @right
   530 label *label364
   531 label *label365
   532 label *label366
-    * op add :drawItem.5:col 0 1
   533 jump *label367 lessThan 1 1
-    * set :drawItem.5:col 0
   534 op sub :drawItem.5:y :drawMaterials:y 15
   535 label *label367
   536 label *label368
 
   553 op mul *tmp318 122 *tmp313
   554 op div *tmp319 *tmp318 :drawMaterials:target.1
   555 op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp322 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp322
-    * op add :drawItem.5:barX 22 *tmp322
-    * op add :drawItem.5:textX 170 *tmp322
+  556 op mul *tmp322 0 88
+  557 op add :drawItem.5:iconX 11 0
+  558 op add :drawItem.5:barX 22 0
+  559 op add :drawItem.5:textX 170 0
   560 draw col %[white]
   561 op add *tmp330 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp330 @graphite 16 0
+  562 draw image 11 *tmp330 @graphite 16 0
   563 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  564 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   565 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  566 draw lineRect 22 :drawMaterials:y 122 10
   567 op add *tmp332 :drawMaterials:y 7
   568 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp332 @right
+  569 draw print 170 *tmp332 @right
   570 label *label378
   571 label *label379
-    * op add :drawText.24:x *tmp322 171
+  572 op add :drawText.24:x 0 171
   573 print :drawMaterials:target.1
-    * draw print :drawText.24:x *tmp332 @right
+  574 draw print 171 *tmp332 @right
   575 label *label380
   576 label *label381
   577 label *label382
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label383 lessThan :drawItem.5:col 1
+  578 op add :drawItem.5:col 0 1
+  579 jump *label383 lessThan 1 1
   580 set :drawItem.5:col 0
   581 op sub :drawItem.5:y :drawMaterials:y 15
   582 label *label383
   583 label *label384
   584 label *label385
-    * set :drawMaterials:col :drawItem.5:col
+  585 set :drawMaterials:col 0
   586 set :drawMaterials:y :drawItem.5:y
   587 op sub :drawMaterials:count :drawMaterials:count 1
   588 jump *label386 greaterThan :drawMaterials:count 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-8 instructions):
 
   549 label *label377
   550 jump *label388 lessThanEq :drawMaterials:target.1 0
   551 sensor *tmp313 .core @graphite
-    * set :drawItem.5:y :drawMaterials:y
   552 op mul *tmp318 122 *tmp313
   553 op div *tmp319 *tmp318 :drawMaterials:target.1
   554 op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp322 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   555 draw col %[white]
   556 op add *tmp330 :drawMaterials:y 5
   557 draw image 11 *tmp330 @graphite 16 0
 
   564 draw print 170 *tmp332 @right
   565 label *label378
   566 label *label379
-    * op add :drawText.24:x 0 171
   567 print :drawMaterials:target.1
   568 draw print 171 *tmp332 @right
   569 label *label380
   570 label *label381
   571 label *label382
-    * op add :drawItem.5:col 0 1
   572 jump *label383 lessThan 1 1
-    * set :drawItem.5:col 0
   573 op sub :drawItem.5:y :drawMaterials:y 15
   574 label *label383
   575 label *label384
 
   592 op mul *tmp318 122 *tmp313
   593 op div *tmp319 *tmp318 :drawMaterials:target.1
   594 op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp322 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp322
-    * op add :drawItem.5:barX 22 *tmp322
-    * op add :drawItem.5:textX 170 *tmp322
+  595 op mul *tmp322 0 88
+  596 op add :drawItem.5:iconX 11 0
+  597 op add :drawItem.5:barX 22 0
+  598 op add :drawItem.5:textX 170 0
   599 draw col %[white]
   600 op add *tmp330 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp330 @silicon 16 0
+  601 draw image 11 *tmp330 @silicon 16 0
   602 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  603 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   604 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  605 draw lineRect 22 :drawMaterials:y 122 10
   606 op add *tmp332 :drawMaterials:y 7
   607 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp332 @right
+  608 draw print 170 *tmp332 @right
   609 label *label394
   610 label *label395
-    * op add :drawText.24:x *tmp322 171
+  611 op add :drawText.24:x 0 171
   612 print :drawMaterials:target.1
-    * draw print :drawText.24:x *tmp332 @right
+  613 draw print 171 *tmp332 @right
   614 label *label396
   615 label *label397
   616 label *label398
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label399 lessThan :drawItem.5:col 1
+  617 op add :drawItem.5:col 0 1
+  618 jump *label399 lessThan 1 1
   619 set :drawItem.5:col 0
   620 op sub :drawItem.5:y :drawMaterials:y 15
   621 label *label399
   622 label *label400
   623 label *label401
-    * set :drawMaterials:col :drawItem.5:col
+  624 set :drawMaterials:col 0
   625 set :drawMaterials:y :drawItem.5:y
   626 op sub :drawMaterials:count :drawMaterials:count 1
   627 jump *label402 greaterThan :drawMaterials:count 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-8 instructions):
 
   588 label *label393
   589 jump *label404 lessThanEq :drawMaterials:target.1 0
   590 sensor *tmp313 .core @silicon
-    * set :drawItem.5:y :drawMaterials:y
   591 op mul *tmp318 122 *tmp313
   592 op div *tmp319 *tmp318 :drawMaterials:target.1
   593 op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp322 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   594 draw col %[white]
   595 op add *tmp330 :drawMaterials:y 5
   596 draw image 11 *tmp330 @silicon 16 0
 
   603 draw print 170 *tmp332 @right
   604 label *label394
   605 label *label395
-    * op add :drawText.24:x 0 171
   606 print :drawMaterials:target.1
   607 draw print 171 *tmp332 @right
   608 label *label396
   609 label *label397
   610 label *label398
-    * op add :drawItem.5:col 0 1
   611 jump *label399 lessThan 1 1
-    * set :drawItem.5:col 0
   612 op sub :drawItem.5:y :drawMaterials:y 15
   613 label *label399
   614 label *label400
 
   631 op mul *tmp318 122 *tmp313
   632 op div *tmp319 *tmp318 :drawMaterials:target.1
   633 op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp322 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp322
-    * op add :drawItem.5:barX 22 *tmp322
-    * op add :drawItem.5:textX 170 *tmp322
+  634 op mul *tmp322 0 88
+  635 op add :drawItem.5:iconX 11 0
+  636 op add :drawItem.5:barX 22 0
+  637 op add :drawItem.5:textX 170 0
   638 draw col %[white]
   639 op add *tmp330 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp330 @titanium 16 0
+  640 draw image 11 *tmp330 @titanium 16 0
   641 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  642 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   643 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  644 draw lineRect 22 :drawMaterials:y 122 10
   645 op add *tmp332 :drawMaterials:y 7
   646 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp332 @right
+  647 draw print 170 *tmp332 @right
   648 label *label410
   649 label *label411
-    * op add :drawText.24:x *tmp322 171
+  650 op add :drawText.24:x 0 171
   651 print :drawMaterials:target.1
-    * draw print :drawText.24:x *tmp332 @right
+  652 draw print 171 *tmp332 @right
   653 label *label412
   654 label *label413
   655 label *label414
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label415 lessThan :drawItem.5:col 1
+  656 op add :drawItem.5:col 0 1
+  657 jump *label415 lessThan 1 1
   658 set :drawItem.5:col 0
   659 op sub :drawItem.5:y :drawMaterials:y 15
   660 label *label415
   661 label *label416
   662 label *label417
-    * set :drawMaterials:col :drawItem.5:col
+  663 set :drawMaterials:col 0
   664 set :drawMaterials:y :drawItem.5:y
   665 op sub :drawMaterials:count :drawMaterials:count 1
   666 jump *label418 greaterThan :drawMaterials:count 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-8 instructions):
 
   627 label *label409
   628 jump *label420 lessThanEq :drawMaterials:target.1 0
   629 sensor *tmp313 .core @titanium
-    * set :drawItem.5:y :drawMaterials:y
   630 op mul *tmp318 122 *tmp313
   631 op div *tmp319 *tmp318 :drawMaterials:target.1
   632 op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp322 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   633 draw col %[white]
   634 op add *tmp330 :drawMaterials:y 5
   635 draw image 11 *tmp330 @titanium 16 0
 
   642 draw print 170 *tmp332 @right
   643 label *label410
   644 label *label411
-    * op add :drawText.24:x 0 171
   645 print :drawMaterials:target.1
   646 draw print 171 *tmp332 @right
   647 label *label412
   648 label *label413
   649 label *label414
-    * op add :drawItem.5:col 0 1
   650 jump *label415 lessThan 1 1
-    * set :drawItem.5:col 0
   651 op sub :drawItem.5:y :drawMaterials:y 15
   652 label *label415
   653 label *label416
 
   670 op mul *tmp318 122 *tmp313
   671 op div *tmp319 *tmp318 :drawMaterials:target.1
   672 op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp322 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp322
-    * op add :drawItem.5:barX 22 *tmp322
-    * op add :drawItem.5:textX 170 *tmp322
+  673 op mul *tmp322 0 88
+  674 op add :drawItem.5:iconX 11 0
+  675 op add :drawItem.5:barX 22 0
+  676 op add :drawItem.5:textX 170 0
   677 draw col %[white]
   678 op add *tmp330 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp330 @metaglass 16 0
+  679 draw image 11 *tmp330 @metaglass 16 0
   680 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  681 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   682 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  683 draw lineRect 22 :drawMaterials:y 122 10
   684 op add *tmp332 :drawMaterials:y 7
   685 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp332 @right
+  686 draw print 170 *tmp332 @right
   687 label *label426
   688 label *label427
-    * op add :drawText.24:x *tmp322 171
+  689 op add :drawText.24:x 0 171
   690 print :drawMaterials:target.1
-    * draw print :drawText.24:x *tmp332 @right
+  691 draw print 171 *tmp332 @right
   692 label *label428
   693 label *label429
   694 label *label430
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label431 lessThan :drawItem.5:col 1
+  695 op add :drawItem.5:col 0 1
+  696 jump *label431 lessThan 1 1
   697 set :drawItem.5:col 0
   698 op sub :drawItem.5:y :drawMaterials:y 15
   699 label *label431
   700 label *label432
   701 label *label433
-    * set :drawMaterials:col :drawItem.5:col
+  702 set :drawMaterials:col 0
   703 set :drawMaterials:y :drawItem.5:y
   704 op sub :drawMaterials:count :drawMaterials:count 1
   705 jump *label434 greaterThan :drawMaterials:count 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-8 instructions):
 
   666 label *label425
   667 jump *label436 lessThanEq :drawMaterials:target.1 0
   668 sensor *tmp313 .core @metaglass
-    * set :drawItem.5:y :drawMaterials:y
   669 op mul *tmp318 122 *tmp313
   670 op div *tmp319 *tmp318 :drawMaterials:target.1
   671 op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp322 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   672 draw col %[white]
   673 op add *tmp330 :drawMaterials:y 5
   674 draw image 11 *tmp330 @metaglass 16 0
 
   681 draw print 170 *tmp332 @right
   682 label *label426
   683 label *label427
-    * op add :drawText.24:x 0 171
   684 print :drawMaterials:target.1
   685 draw print 171 *tmp332 @right
   686 label *label428
   687 label *label429
   688 label *label430
-    * op add :drawItem.5:col 0 1
   689 jump *label431 lessThan 1 1
-    * set :drawItem.5:col 0
   690 op sub :drawItem.5:y :drawMaterials:y 15
   691 label *label431
   692 label *label432
 
   708 op mul *tmp318 122 *tmp313
   709 op div *tmp319 *tmp318 :drawMaterials:target.1
   710 op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp322 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp322
-    * op add :drawItem.5:barX 22 *tmp322
-    * op add :drawItem.5:textX 170 *tmp322
+  711 op mul *tmp322 0 88
+  712 op add :drawItem.5:iconX 11 0
+  713 op add :drawItem.5:barX 22 0
+  714 op add :drawItem.5:textX 170 0
   715 draw col %[white]
   716 op add *tmp330 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp330 @thorium 16 0
+  717 draw image 11 *tmp330 @thorium 16 0
   718 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  719 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   720 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  721 draw lineRect 22 :drawMaterials:y 122 10
   722 op add *tmp332 :drawMaterials:y 7
   723 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp332 @right
+  724 draw print 170 *tmp332 @right
   725 label *label442
   726 label *label443
-    * op add :drawText.24:x *tmp322 171
+  727 op add :drawText.24:x 0 171
   728 print :drawMaterials:target.1
-    * draw print :drawText.24:x *tmp332 @right
+  729 draw print 171 *tmp332 @right
   730 label *label444
   731 label *label445
   732 label *label446
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label447 lessThan :drawItem.5:col 1
+  733 op add :drawItem.5:col 0 1
+  734 jump *label447 lessThan 1 1
   735 label *label447
   736 label *label448
   737 label *label449

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-13 instructions):
 
   210 label *label61
   211 label *label62
   212 label *label41
-    * set :drawMaterials:col 0
   213 set :drawMaterials:y 90
   214 jump *label66 notEqual .nextBlock null
   215 sensor *tmp143 A¾BHMW-air-factory13 @progress
 
   495 label *label351
   496 label *label352
   497 label *label353
-    * set :drawMaterials:col 0
   498 set :drawMaterials:y 75
   499 op sub :drawMaterials:count .materialCount 1
   500 jump *label354 greaterThan :drawMaterials:count 0
 
   533 label *label367
   534 label *label368
   535 label *label369
-    * set :drawMaterials:col 0
   536 set :drawMaterials:y :drawItem.5:y
   537 op sub :drawMaterials:count :drawMaterials:count 1
   538 jump *label370 greaterThan :drawMaterials:count 0
 
   571 label *label383
   572 label *label384
   573 label *label385
-    * set :drawMaterials:col 0
   574 set :drawMaterials:y :drawItem.5:y
   575 op sub :drawMaterials:count :drawMaterials:count 1
   576 jump *label386 greaterThan :drawMaterials:count 0
 
   609 label *label399
   610 label *label400
   611 label *label401
-    * set :drawMaterials:col 0
   612 set :drawMaterials:y :drawItem.5:y
   613 op sub :drawMaterials:count :drawMaterials:count 1
   614 jump *label402 greaterThan :drawMaterials:count 0
 
   647 label *label415
   648 label *label416
   649 label *label417
-    * set :drawMaterials:col 0
   650 set :drawMaterials:y :drawItem.5:y
   651 op sub :drawMaterials:count :drawMaterials:count 1
   652 jump *label418 greaterThan :drawMaterials:count 0
 
   685 label *label431
   686 label *label432
   687 label *label433
-    * set :drawMaterials:col 0
   688 set :drawMaterials:y :drawItem.5:y
   689 op sub :drawMaterials:count :drawMaterials:count 1
   690 jump *label434 greaterThan :drawMaterials:count 0
 
   701 op mul *tmp318 122 *tmp313
   702 op div *tmp319 *tmp318 :drawMaterials:target.1
   703 op min :drawItem.5:length 122 *tmp319
-    * op mul *tmp322 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   704 draw col %[white]
   705 op add *tmp330 :drawMaterials:y 5
   706 draw image 11 *tmp330 @thorium 16 0
 
   713 draw print 170 *tmp332 @right
   714 label *label442
   715 label *label443
-    * op add :drawText.24:x 0 171
   716 print :drawMaterials:target.1
   717 draw print 171 *tmp332 @right
   718 label *label444
   719 label *label445
   720 label *label446
-    * op add :drawItem.5:col 0 1
   721 jump *label447 lessThan 1 1
   722 label *label447
   723 label *label448

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-9 instructions):
 
   373 label *label319
   374 label *label320
   375 label *label321
-    * jump *label322 lessThan 1 1
   376 label *label322
   377 label *label323
   378 label *label324
 
   403 label *label333
   404 label *label334
   405 label *label335
-    * jump *label336 lessThan 1 1
   406 label *label336
   407 label *label337
   408 label *label338
 
   489 label *label348
   490 label *label349
   491 label *label350
-    * jump *label351 lessThan 1 1
   492 label *label351
   493 label *label352
   494 label *label353
 
   525 label *label364
   526 label *label365
   527 label *label366
-    * jump *label367 lessThan 1 1
   528 op sub :drawItem.5:y :drawMaterials:y 15
   529 label *label367
   530 label *label368
 
   562 label *label380
   563 label *label381
   564 label *label382
-    * jump *label383 lessThan 1 1
   565 op sub :drawItem.5:y :drawMaterials:y 15
   566 label *label383
   567 label *label384
 
   599 label *label396
   600 label *label397
   601 label *label398
-    * jump *label399 lessThan 1 1
   602 op sub :drawItem.5:y :drawMaterials:y 15
   603 label *label399
   604 label *label400
 
   636 label *label412
   637 label *label413
   638 label *label414
-    * jump *label415 lessThan 1 1
   639 op sub :drawItem.5:y :drawMaterials:y 15
   640 label *label415
   641 label *label416
 
   673 label *label428
   674 label *label429
   675 label *label430
-    * jump *label431 lessThan 1 1
   676 op sub :drawItem.5:y :drawMaterials:y 15
   677 label *label431
   678 label *label432
 
   710 label *label444
   711 label *label445
   712 label *label446
-    * jump *label447 lessThan 1 1
   713 label *label447
   714 label *label448
   715 label *label449

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-2 instructions):
 
   715 label *label449
   716 op sub :drawMaterials:count :drawMaterials:count 1
   717 jump *label450 greaterThan :drawMaterials:count 0
-    * jump *label150 always
   718 label *label450
   719 label *label451
   720 label *label452
 
  1105 jump *label270 lessThanEq :displayRecord:id @blockCount
  1106 op sub *tmp435 :displayRecord:id @blockCount
  1107 lookup unit *tmp434 *tmp435
-    * jump *label270 always
  1108 label *label270
  1109 op div *tmp438 :displayLog:record 1000
  1110 op idiv :displayRecord:t *tmp438 120

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-1 instructions):
 
   714 label *label448
   715 label *label449
   716 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label450 greaterThan :drawMaterials:count 0
   717 label *label450
   718 label *label451
   719 label *label452

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   739 jump *label178 notEqual .transportItem null
   740 op sub *tmp343 *tmp339 15
   741 set :drawItem.6:target .transportTarget
-    * op div *tmp349 0 :drawItem.6:target
+  742 set *tmp349 0
   743 op min :drawItem.6:length 122 *tmp349
   744 draw col %[white]
   745 op sub *tmp360 *tmp339 10

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-2 instructions):
 
   713 label *label447
   714 label *label448
   715 label *label449
-    * op sub :drawMaterials:count :drawMaterials:count 1
   716 label *label450
   717 label *label451
   718 label *label452
 
   737 label *label173
   738 jump *label178 notEqual .transportItem null
   739 op sub *tmp343 *tmp339 15
-    * set :drawItem.6:target .transportTarget
   740 set *tmp349 0
-    * op min :drawItem.6:length 122 *tmp349
+  741 op min :drawItem.6:length 122 0
   742 draw col %[white]
   743 op sub *tmp360 *tmp339 10
   744 draw image 11 *tmp360 @poly 16 0
   745 draw color 0 128 0 255
-    * draw rect 22 *tmp343 :drawItem.6:length 10
+  746 draw rect 22 *tmp343 0 10
   747 draw color 0 255 0 255
   748 draw lineRect 22 *tmp343 122 10
   749 op sub *tmp362 *tmp339 8

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-2 instructions):
 
   737 label *label173
   738 jump *label178 notEqual .transportItem null
   739 op sub *tmp343 *tmp339 15
-    * set *tmp349 0
-    * op min :drawItem.6:length 122 0
   740 draw col %[white]
   741 op sub *tmp360 *tmp339 10
   742 draw image 11 *tmp360 @poly 16 0

Modifications by Virtual Instruction Expansion (+1 instructions):
 
  1012 set :displayBaseMap:i .recentBuildIndex
  1013 jump *label255 lessThan :displayBaseMap:i 0
  1014 set .recentBuildIndex -1
-    * readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
+ 1015 op mul *tmp905 :displayBaseMap:i 2
+ 1016 multijump *label459 *tmp905 0 (m:marker3)
+ 1017 multilabel *label459 (m:marker3)
+ 1018 set :drawBlock:cfg "AJEMJK-graphite-press1"
+ 1019 jump *label458 always
+ 1020 multilabel *label460 (m:marker3)
+ 1021 set :drawBlock:cfg "AJTJL-battery2"
+ 1022 jump *label458 always
+ 1023 multilabel *label461 (m:marker3)
+ 1024 set :drawBlock:cfg "ALTJM-battery3"
+ 1025 jump *label458 always
+ 1026 multilabel *label462 (m:marker3)
+ 1027 set :drawBlock:cfg "AJRJN-combustion-generator4"
+ 1028 jump *label458 always
+ 1029 multilabel *label463 (m:marker3)
+ 1030 set :drawBlock:cfg "ALMQJO-silicon-smelter5"
+ 1031 jump *label458 always
+ 1032 multilabel *label464 (m:marker3)
+ 1033 set :drawBlock:cfg "A{LNJP-inverted-sorter6"
+ 1034 jump *label458 always
+ 1035 multilabel *label465 (m:marker3)
+ 1036 set :drawBlock:cfg "AJJJJ-pneumatic-drill0"
+ 1037 jump *label458 always
+ 1038 multilabel *label466 (m:marker3)
+ 1039 set :drawBlock:cfg "A©JNJQ-unloader7"
+ 1040 jump *label458 always
+ 1041 multilabel *label467 (m:marker3)
+ 1042 set :drawBlock:cfg "A{HNJR-inverted-sorter8"
+ 1043 jump *label458 always
+ 1044 multilabel *label468 (m:marker3)
+ 1045 set :drawBlock:cfg "A~JPJS-overflow-gate9"
+ 1046 jump *label458 always
+ 1047 multilabel *label469 (m:marker3)
+ 1048 set :drawBlock:cfg "AÕFFJT-micro-processor10"
+ 1049 jump *label458 always
+ 1050 multilabel *label470 (m:marker3)
+ 1051 set :drawBlock:cfg "AFJJU-power-node11"
+ 1052 jump *label458 always
+ 1053 multilabel *label471 (m:marker3)
+ 1054 set :drawBlock:cfg "A©FHJV-unloader12"
+ 1055 jump *label458 always
+ 1056 multilabel *label472 (m:marker3)
+ 1057 set :drawBlock:cfg "A¾BHMW-air-factory13"
+ 1058 jump *label458 always
+ 1059 multilabel *label473 (m:marker3)
+ 1060 set :drawBlock:cfg "A©NHJX-unloader14"
+ 1061 jump *label458 always
+ 1062 multilabel *label474 (m:marker3)
+ 1063 set :drawBlock:cfg "A{NJJY-inverted-sorter15"
+ 1064 jump *label458 always
+ 1065 multilabel *label475 (m:marker3)
+ 1066 set :drawBlock:cfg "ANOMJZ-kiln16"
+ 1067 jump *label458 always
+ 1068 multilabel *label476 (m:marker3)
+ 1069 set :drawBlock:cfg "A¡ASJ[-water-extractor17"
+ 1070 jump *label458 always
+ 1071 multilabel *label477 (m:marker3)
+ 1072 set :drawBlock:cfg "A©BLJ\-unloader18"
+ 1073 jump *label458 always
+ 1074 multilabel *label478 (m:marker3)
+ 1075 set :drawBlock:cfg "AAOJ]-steam-generator19"
+ 1076 jump *label458 always
+ 1077 multilabel *label479 (m:marker3)
+ 1078 set :drawBlock:cfg "AKFRJ^-multi-press20"
+ 1079 jump *label458 always
+ 1080 multilabel *label480 (m:marker3)
+ 1081 set :drawBlock:cfg "AÇBBJ_-payload-router21"
+ 1082 jump *label458 always
+ 1083 multilabel *label481 (m:marker3)
+ 1084 set :drawBlock:cfg "A©HFJ`-unloader22"
+ 1085 jump *label458 always
+ 1086 multilabel *label482 (m:marker3)
+ 1087 set :drawBlock:cfg "AÀHBJa-additive-reconstructor23"
+ 1088 jump *label458 always
+ 1089 multilabel *label483 (m:marker3)
+ 1090 set :drawBlock:cfg "AJJJJ-laser-drill0"
+ 1091 jump *label458 always
+ 1092 multilabel *label484 (m:marker3)
+ 1093 set :drawBlock:cfg "AJJJJ-solar-panel0"
+ 1094 jump *label458 always
+ 1095 multilabel *label485 (m:marker3)
+ 1096 set :drawBlock:cfg "A¨JJJJ-container0"
+ 1097 jump *label458 always
+ 1098 multilabel *label486 (m:marker3)
+ 1099 set :drawBlock:cfg "ALSIJb-silicon-smelter24"
+ 1100 jump *label458 always
+ 1101 multilabel *label487 (m:marker3)
+ 1102 set :drawBlock:cfg "A{PJJc-inverted-sorter25"
+ 1103 jump *label458 always
+ 1104 multilabel *label488 (m:marker3)
+ 1105 set :drawBlock:cfg "A{PHJd-inverted-sorter26"
+ 1106 jump *label458 always
+ 1107 multilabel *label489 (m:marker3)
+ 1108 set :drawBlock:cfg "A©JFJe-unloader27"
+ 1109 jump *label458 always
+ 1110 multilabel *label490 (m:marker3)
+ 1111 set :drawBlock:cfg "AÁPBJf-multiplicative-reconstructor28"
+ 1112 jump *label458 always
+ 1113 label *label458
  1114 label *label308
  1115 read *tmp462 :drawBlock:cfg 1
  1116 op sub *tmp463 *tmp462 74

Modifications by Iterated phase, Single Step Elimination, pass 4, iteration 1 (-1 instructions):
 
  1109 jump *label458 always
  1110 multilabel *label490 (m:marker3)
  1111 set :drawBlock:cfg "AÁPBJf-multiplicative-reconstructor28"
-    * jump *label458 always
  1112 label *label458
  1113 label *label308
  1114 read *tmp462 :drawBlock:cfg 1

Modifications by Jumps phase, Jump Normalization, pass 6, iteration 1:
 
    19 label *label10
    20 ubind @poly
    21 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
-    * label *label11
    22 jump *label10 equal .core null
-    * label *label12
    23 sensor .coreX .core @x
    24 sensor .coreY .core @y
    25 printflush null
 
    30 set .factoryProgress 0
    31 set .unitReset false
    32 label *label16
-    * label *label17
    33 jump *label18 notEqual .page -1
    34 draw reset
    35 draw clear 0 0 32
    36 draw col %[gold]
    37 print "Map"
    38 draw print 4 172 @topLeft
-    * label *label22
-    * label *label21
    39 draw col %[white]
    40 op div *tmp50 176 @mapw
    41 op div *tmp51 176 @maph
 
    47 set :displayOreMap:index -1
    48 read :displayOreMap:count processor3 ".locations"
    49 set :displayOreMap:i 0
-    * label *label23
    50 jump *label25 greaterThanEq 0 :displayOreMap:count
    51 label *label298
    52 op add :displayOreMap:index :displayOreMap:index 1
    53 read :displayOreMap:id bank1 :displayOreMap:index
    54 lookup item *tmp59 :displayOreMap:id
    55 jump *label27 greaterThan :displayOreMap:id 0
-    * label *label26
    56 op sub *tmp61 0 :displayOreMap:id
    57 lookup block *tmp59 *tmp61
    58 label *label27
 
    66 read :displayOreMap:y bank1 :displayOreMap:index
    67 op mul *tmp71 :displayOreMap:size :displayOreMap:imgSize
    68 draw image :displayOreMap:x :displayOreMap:y *tmp59 *tmp71 0
-    * label *label24
    69 op add :displayOreMap:i :displayOreMap:i 1
    70 jump *label298 lessThan :displayOreMap:i :displayOreMap:count
    71 label *label25
 
    81 draw col %[white]
    82 print :displayOreMap:index
    83 draw print 175 172 @topRight
-    * label *label29
-    * label *label28
    84 drawflush display1
-    * label *label20
    85 jump *label19 always
    86 label *label18
    87 jump *label30 notEqual .page 0
 
   102 op mul *tmp89 *tmp88 40
   103 op mul *tmp90 :animate:ratio 88
   104 op add *tmp87 *tmp89 *tmp90
-    * label *label37
   105 op mul *tmp94 *tmp88 137
   106 op add *tmp92 *tmp94 *tmp90
-    * label *label38
   107 op mul *tmp99 *tmp88 32
   108 op mul *tmp100 :animate:ratio 168
   109 op add *tmp97 *tmp99 *tmp100
-    * label *label39
   110 draw image *tmp87 *tmp92 @mega *tmp97 0
   111 drawflush display1
   112 op add .animation .animation 1
-    * label *label34
   113 jump *label33 always
   114 label *label32
   115 draw reset
 
   117 draw col %[gold]
   118 print "Goal"
   119 draw print 40 161 @bottom
-    * label *label44
-    * label *label43
   120 print "Goal"
   121 draw print 41 161 @bottom
-    * label *label46
-    * label *label45
-    * label *label42
   122 draw col %[white]
   123 op add :drawHeader:count .nextBlock .nextUnit
   124 jump *label47 notEqual :drawHeader:count 2
 
   158 print *tmp125
   159 print ")"
   160 draw print 170 172 @topRight
-    * label *label56
-    * label *label55
   161 jump *label57 equal .titaniumDrill false
   162 sensor *tmp127 .titaniumDrill @titanium
   163 op max :drawHeader:count .titaniumDrillCount *tmp127
 
   166 print "x"
   167 print :drawHeader:count
   168 draw print 170 155 @topRight
-    * label *label60
-    * label *label59
   169 op mul *tmp132 7 :drawHeader:len
   170 op sub *tmp133 150 *tmp132
   171 draw image *tmp133 146 @titanium 12 0
   172 label *label57
-    * label *label58
   173 jump *label61 equal .thoriumContainer false
   174 sensor :drawHeader:count .thoriumContainer @thorium
   175 op log10 *tmp136 :drawHeader:count
 
   177 print "x"
   178 print :drawHeader:count
   179 draw print 120 155 @topRight
-    * label *label64
-    * label *label63
   180 op mul *tmp139 7 :drawHeader:len.1
   181 op sub *tmp140 100 *tmp139
   182 draw image *tmp140 146 @thorium 12 0
   183 label *label61
-    * label *label62
-    * label *label41
   184 set :drawMaterials:y 90
   185 jump *label66 notEqual .nextBlock null
   186 sensor *tmp143 A¾BHMW-air-factory13 @progress
 
   235 op greaterThan *tmp173 :drawMaterials:multiReconstructorProgress 0
   236 op max .reconstructorProgress .reconstructorProgress *tmp173
   237 label *label74
-    * label *label75
   238 label *label73
   239 label *label71
   240 label *label69
   241 print "Unit factories"
   242 draw print 22 105 @bottomLeft
-    * label *label78
-    * label *label77
   243 print "Unit factories"
   244 draw print 23 105 @bottomLeft
-    * label *label80
-    * label *label79
-    * label *label76
   245 jump *label81 lessThanEq .factoryProgress 0
   246 op mul *tmp182 122 .factoryProgress
   247 op min :drawItem:length 122 *tmp182
 
   255 print "/"
   256 print :drawMaterials:unitTotal1
   257 draw print 170 97 @right
-    * label *label86
-    * label *label85
   258 print :drawMaterials:unitCount1
   259 print "/"
   260 print :drawMaterials:unitTotal1
   261 draw print 171 97 @right
-    * label *label88
-    * label *label87
-    * label *label84
-    * label *label83
   262 jump *label91 equal :drawMaterials:unit2 null
   263 op mul *tmp206 122 .reconstructorProgress
   264 op min :drawItem.1:length 122 *tmp206
 
   272 print "/"
   273 print :drawMaterials:unitTotal2
   274 draw print 170 82 @right
-    * label *label96
-    * label *label95
   275 print :drawMaterials:unitCount2
   276 print "/"
   277 print :drawMaterials:unitTotal2
   278 draw print 171 82 @right
-    * label *label98
-    * label *label97
-    * label *label94
-    * label *label93
   279 jump *label101 equal :drawMaterials:unit3 null
   280 op mul *tmp230 122 :drawMaterials:multiReconstructorProgress
   281 op min :drawItem.2:length 122 *tmp230
 
   289 print "/"
   290 print .megaTarget
   291 draw print 170 67 @right
-    * label *label106
-    * label *label105
   292 print .megas
   293 print "/"
   294 print .megaTarget
   295 draw print 171 67 @right
-    * label *label108
-    * label *label107
-    * label *label104
-    * label *label103
   296 label *label101
-    * label *label102
   297 label *label91
-    * label *label92
   298 jump *label82 always
   299 label *label81
-    * label *label316
   300 jump *label325 lessThanEq :drawMaterials:targetFactoryLead 0
   301 sensor *tmp253 A¾BHMW-air-factory13 @lead
   302 op mul *tmp258 122 *tmp253
 
   310 draw lineRect 22 90 122 10
   311 print :drawMaterials:targetFactoryLead
   312 draw print 170 97 @right
-    * label *label317
-    * label *label318
   313 print :drawMaterials:targetFactoryLead
   314 draw print 171 97 @right
-    * label *label319
-    * label *label320
-    * label *label321
-    * label *label322
-    * label *label323
-    * label *label324
   315 set :drawMaterials:y 75
   316 label *label325
-    * label *label326
-    * label *label327
-    * label *label330
   317 jump *label339 lessThanEq :drawMaterials:targetFactorySilicon 0
   318 sensor *tmp253 A¾BHMW-air-factory13 @silicon
   319 op mul *tmp258 122 *tmp253
 
   329 op add *tmp272 :drawMaterials:y 7
   330 print :drawMaterials:targetFactorySilicon
   331 draw print 170 *tmp272 @right
-    * label *label331
-    * label *label332
   332 print :drawMaterials:targetFactorySilicon
   333 draw print 171 *tmp272 @right
-    * label *label333
-    * label *label334
-    * label *label335
-    * label *label336
-    * label *label337
-    * label *label338
   334 label *label339
-    * label *label340
-    * label *label341
-    * label *label113
   335 label *label82
   336 jump *label67 always
   337 label *label66
 
   342 read *tmp280 processor3 ".mapAction"
   343 print *tmp280
   344 draw print 22 105 @bottomLeft
-    * label *label130
-    * label *label129
   345 read *tmp282 processor3 ".mapAction"
   346 print *tmp282
   347 draw print 23 105 @bottomLeft
-    * label *label132
-    * label *label131
-    * label *label128
   348 read :drawItem.4:current processor3 ".mapProgress"
   349 read :drawItem.4:target processor3 ".mapTotal"
   350 op mul *tmp287 122 :drawItem.4:current
 
   360 read *tmp302 processor3 ".mapSpots"
   361 print *tmp302
   362 draw print 170 97 @right
-    * label *label136
-    * label *label135
   363 print "x"
   364 read *tmp304 processor3 ".mapSpots"
   365 print *tmp304
   366 draw print 171 97 @right
-    * label *label138
-    * label *label137
-    * label *label134
-    * label *label133
   367 jump *label127 always
   368 label *label126
   369 set .materialCount .totalTargets
   370 set :drawMaterials:count .materialCount
   371 print "Materials"
   372 draw print 22 105 @bottomLeft
-    * label *label143
-    * label *label142
   373 print "Materials"
   374 draw print 23 105 @bottomLeft
-    * label *label145
-    * label *label144
-    * label *label141
   375 jump *label146 equal .materialCount false
   376 set :drawMaterials:target.1 .targetCopper
-    * label *label345
   377 jump *label356 lessThanEq :drawMaterials:target.1 0
   378 sensor *tmp313 .core @copper
   379 op mul *tmp318 122 *tmp313
 
   387 draw lineRect 22 90 122 10
   388 print :drawMaterials:target.1
   389 draw print 170 97 @right
-    * label *label346
-    * label *label347
   390 print :drawMaterials:target.1
   391 draw print 171 97 @right
-    * label *label348
-    * label *label349
-    * label *label350
-    * label *label351
-    * label *label352
-    * label *label353
   392 set :drawMaterials:y 75
   393 op sub :drawMaterials:count .materialCount 1
   394 jump *label354 greaterThan :drawMaterials:count 0
   395 jump *label150 always
   396 label *label354
-    * label *label355
   397 label *label356
-    * label *label357
-    * label *label358
   398 set :drawMaterials:target.1 .targetLead
-    * label *label361
   399 jump *label372 lessThanEq :drawMaterials:target.1 0
   400 sensor *tmp313 .core @lead
   401 op mul *tmp318 122 *tmp313
 
   411 op add *tmp332 :drawMaterials:y 7
   412 print :drawMaterials:target.1
   413 draw print 170 *tmp332 @right
-    * label *label362
-    * label *label363
   414 print :drawMaterials:target.1
   415 draw print 171 *tmp332 @right
-    * label *label364
-    * label *label365
-    * label *label366
   416 op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label367
-    * label *label368
-    * label *label369
   417 set :drawMaterials:y :drawItem.5:y
   418 op sub :drawMaterials:count :drawMaterials:count 1
   419 jump *label370 greaterThan :drawMaterials:count 0
   420 jump *label150 always
   421 label *label370
-    * label *label371
   422 label *label372
-    * label *label373
-    * label *label374
   423 set :drawMaterials:target.1 .targetGraphite
-    * label *label377
   424 jump *label388 lessThanEq :drawMaterials:target.1 0
   425 sensor *tmp313 .core @graphite
   426 op mul *tmp318 122 *tmp313
 
   436 op add *tmp332 :drawMaterials:y 7
   437 print :drawMaterials:target.1
   438 draw print 170 *tmp332 @right
-    * label *label378
-    * label *label379
   439 print :drawMaterials:target.1
   440 draw print 171 *tmp332 @right
-    * label *label380
-    * label *label381
-    * label *label382
   441 op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label383
-    * label *label384
-    * label *label385
   442 set :drawMaterials:y :drawItem.5:y
   443 op sub :drawMaterials:count :drawMaterials:count 1
   444 jump *label386 greaterThan :drawMaterials:count 0
   445 jump *label150 always
   446 label *label386
-    * label *label387
   447 label *label388
-    * label *label389
-    * label *label390
   448 set :drawMaterials:target.1 .targetSilicon
-    * label *label393
   449 jump *label404 lessThanEq :drawMaterials:target.1 0
   450 sensor *tmp313 .core @silicon
   451 op mul *tmp318 122 *tmp313
 
   461 op add *tmp332 :drawMaterials:y 7
   462 print :drawMaterials:target.1
   463 draw print 170 *tmp332 @right
-    * label *label394
-    * label *label395
   464 print :drawMaterials:target.1
   465 draw print 171 *tmp332 @right
-    * label *label396
-    * label *label397
-    * label *label398
   466 op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label399
-    * label *label400
-    * label *label401
   467 set :drawMaterials:y :drawItem.5:y
   468 op sub :drawMaterials:count :drawMaterials:count 1
   469 jump *label402 greaterThan :drawMaterials:count 0
   470 jump *label150 always
   471 label *label402
-    * label *label403
   472 label *label404
-    * label *label405
-    * label *label406
   473 set :drawMaterials:target.1 .targetTitanium
-    * label *label409
   474 jump *label420 lessThanEq :drawMaterials:target.1 0
   475 sensor *tmp313 .core @titanium
   476 op mul *tmp318 122 *tmp313
 
   486 op add *tmp332 :drawMaterials:y 7
   487 print :drawMaterials:target.1
   488 draw print 170 *tmp332 @right
-    * label *label410
-    * label *label411
   489 print :drawMaterials:target.1
   490 draw print 171 *tmp332 @right
-    * label *label412
-    * label *label413
-    * label *label414
   491 op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label415
-    * label *label416
-    * label *label417
   492 set :drawMaterials:y :drawItem.5:y
   493 op sub :drawMaterials:count :drawMaterials:count 1
   494 jump *label418 greaterThan :drawMaterials:count 0
   495 jump *label150 always
   496 label *label418
-    * label *label419
   497 label *label420
-    * label *label421
-    * label *label422
   498 set :drawMaterials:target.1 .targetMetaglass
-    * label *label425
   499 jump *label436 lessThanEq :drawMaterials:target.1 0
   500 sensor *tmp313 .core @metaglass
   501 op mul *tmp318 122 *tmp313
 
   511 op add *tmp332 :drawMaterials:y 7
   512 print :drawMaterials:target.1
   513 draw print 170 *tmp332 @right
-    * label *label426
-    * label *label427
   514 print :drawMaterials:target.1
   515 draw print 171 *tmp332 @right
-    * label *label428
-    * label *label429
-    * label *label430
   516 op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label431
-    * label *label432
-    * label *label433
   517 set :drawMaterials:y :drawItem.5:y
   518 op sub :drawMaterials:count :drawMaterials:count 1
   519 jump *label434 greaterThan :drawMaterials:count 0
   520 jump *label150 always
   521 label *label434
-    * label *label435
   522 label *label436
-    * label *label437
-    * label *label438
   523 set :drawMaterials:target.1 .targetThorium
-    * label *label441
   524 jump *label452 lessThanEq :drawMaterials:target.1 0
   525 sensor *tmp313 .core @thorium
   526 op mul *tmp318 122 *tmp313
 
   536 op add *tmp332 :drawMaterials:y 7
   537 print :drawMaterials:target.1
   538 draw print 170 *tmp332 @right
-    * label *label442
-    * label *label443
   539 print :drawMaterials:target.1
   540 draw print 171 *tmp332 @right
-    * label *label444
-    * label *label445
-    * label *label446
-    * label *label447
-    * label *label448
-    * label *label449
-    * label *label450
-    * label *label451
   541 label *label452
-    * label *label453
-    * label *label454
   542 label *label150
   543 label *label146
-    * label *label147
   544 label *label127
   545 label *label67
-    * label *label65
   546 draw col %[white]
   547 select *tmp339 lessThan .materialCount 4 40 25
   548 print "Builder"
   549 draw print 22 *tmp339 @bottomLeft
-    * label *label175
-    * label *label174
   550 print "Builder"
   551 draw print 23 *tmp339 @bottomLeft
-    * label *label177
-    * label *label176
-    * label *label173
   552 jump *label178 notEqual .transportItem null
   553 op sub *tmp343 *tmp339 15
   554 draw col %[white]
 
   561 op sub *tmp362 *tmp339 8
   562 print .transportTarget
   563 draw print 170 *tmp362 @right
-    * label *label184
-    * label *label183
   564 print .transportTarget
   565 draw print 171 *tmp362 @right
-    * label *label186
-    * label *label185
-    * label *label182
-    * label *label181
-    * label *label180
   566 jump *label179 always
   567 label *label178
   568 sensor :drawUnit:unitItem @unit @firstItem
 
   585 op sub *tmp391 *tmp339 8
   586 print .transportTarget
   587 draw print 170 *tmp391 @right
-    * label *label193
-    * label *label192
   588 print .transportTarget
   589 draw print 171 *tmp391 @right
-    * label *label195
-    * label *label194
-    * label *label191
-    * label *label190
-    * label *label189
   590 label *label179
-    * label *label170
   591 set :drawUnits:x 170
   592 draw col %[white]
   593 set :drawUnitCount:count .polys
 
   596 print "x"
   597 print :drawUnitCount:count
   598 draw print 170 129 @right
-    * label *label203
-    * label *label202
   599 op sub :drawUnits:x 170 30
   600 label *label200
-    * label *label201
-    * label *label199
   601 set :drawUnitCount.1:count .monos
   602 jump *label205 lessThanEq :drawUnitCount.1:count 0
   603 op sub *tmp402 :drawUnits:x 20
 
   605 print "x"
   606 print :drawUnitCount.1:count
   607 draw print :drawUnits:x 129 @right
-    * label *label208
-    * label *label207
   608 op sub :drawUnits:x :drawUnits:x 30
   609 label *label205
-    * label *label206
-    * label *label204
   610 set :drawUnitCount.2:count .flares
   611 jump *label210 lessThanEq :drawUnitCount.2:count 0
   612 op sub *tmp405 :drawUnits:x 20
 
   614 print "x"
   615 print :drawUnitCount.2:count
   616 draw print :drawUnits:x 129 @right
-    * label *label213
-    * label *label212
   617 label *label210
-    * label *label211
-    * label *label209
-    * label *label198
   618 drawflush display1
-    * label *label40
   619 label *label33
   620 jump *label31 always
   621 label *label30
 
   625 draw col %[gold]
   626 print "Base map"
   627 draw print 172 172 @topRight
-    * label *label218
-    * label *label217
   628 draw col %[white]
   629 draw translate 88 88
   630 draw scale 5.866666666666666 5.866666666666666
 
   757 set :displayBaseMap:cfg "AÁPBJf-multiplicative-reconstructor28"
   758 setaddr *tmp408 *label253
   759 label *label219
-    * label *label300
   760 read *tmp462 :displayBaseMap:cfg 1
   761 op sub *tmp463 *tmp462 74
   762 lookup block :unpackCfg:type *tmp463
 
   771 read *tmp477 :displayBaseMap:cfg 5
   772 op sub :unpackCfg:ind *tmp477 74
   773 sensor :unpackCfg:size :unpackCfg:type @size
-    * label *label301
-    * label *label302
   774 op or *tmp487 :unpackCfg:x :unpackCfg:y
   775 jump *label305 equal *tmp487 false
   776 op shl *tmp489 1 :unpackCfg:ind
 
   787 op mul *tmp495 90 :unpackCfg:rotation
   788 draw image *tmp492 *tmp493 :unpackCfg:type *tmp494 *tmp495
   789 label *label305
-    * label *label306
-    * label *label307
   790 set :displayBaseMap:i .recentBuildIndex
   791 jump *label255 lessThan :displayBaseMap:i 0
   792 set .recentBuildIndex -1
 
   888 multilabel *label490 (m:marker3)
   889 set :drawBlock:cfg "AÁPBJf-multiplicative-reconstructor28"
   890 label *label458
-    * label *label308
   891 read *tmp462 :drawBlock:cfg 1
   892 op sub *tmp463 *tmp462 74
   893 lookup block :unpackCfg:type *tmp463
 
   902 read *tmp477 :drawBlock:cfg 5
   903 op sub :unpackCfg:ind *tmp477 74
   904 sensor :unpackCfg:size :unpackCfg:type @size
-    * label *label309
-    * label *label310
   905 op or *tmp487 :unpackCfg:x :unpackCfg:y
   906 jump *label313 equal *tmp487 false
   907 op shl *tmp489 1 :unpackCfg:ind
 
   918 op mul *tmp495 90 :unpackCfg:rotation
   919 draw image *tmp492 *tmp493 :unpackCfg:type *tmp494 *tmp495
   920 label *label313
-    * label *label314
-    * label *label315
   921 label *label255
-    * label *label256
   922 sensor *tmp413 switch1 @enabled
   923 jump *label258 equal *tmp413 false
   924 drawflush display1
   925 jump *label221 always
   926 label *label258
-    * label *label259
   927 jump *label260 equal .pageSwitched false
   928 drawflush display1
   929 label *label260
-    * label *label261
-    * label *label220
   930 multijump *tmp408 0 0 (m:marker2)
   931 multilabel *label253 (m:marker2)
   932 label *label221
   933 drawflush display1
-    * label *label216
   934 jump *label215 always
   935 label *label214
   936 op sub :displayLog:page .page 2
 
   952 print "/"
   953 print :displayLog:pages
   954 draw print 172 4 @bottomRight
-    * label *label264
-    * label *label263
   955 draw col %[white]
   956 op sub :displayLog:position :displayLog:start 1
-    * label *label265
   957 jump *label267 lessThan :displayLog:position :displayLog:stop
   958 label *label299
   959 read :displayLog:record bank1 :displayLog:position
 
   976 op add *tmp447 :displayLog:y 2
   977 print :displayRecord:s
   978 draw print *tmp446 *tmp447 @right
-    * label *label275
-    * label *label274
   979 op sub :displayLog:y :displayLog:y 15
   980 jump *label276 greaterThanEq :displayLog:y 10
   981 op add :displayLog:x :displayLog:x 58
   982 set :displayLog:y 164
   983 label *label276
-    * label *label277
-    * label *label273
-    * label *label268
   984 drawflush display1
   985 sensor *tmp450 switch1 @enabled
   986 jump *label278 equal *tmp450 false
   987 jump *label267 always
   988 label *label278
-    * label *label279
-    * label *label266
   989 op sub :displayLog:position :displayLog:position 1
   990 jump *label299 greaterThanEq :displayLog:position :displayLog:stop
   991 label *label267
-    * label *label262
   992 label *label215
   993 label *label31
   994 label *label19
 
  1015 print .status3
  1016 print "\n"
  1017 printflush message1
-    * label *label282
  1018 label *label281
  1019 sensor .pageSwitched switch1 @enabled
  1020 jump *label283 equal .pageSwitched false
 
  1025 draw reset
  1026 draw clear 0 0 32
  1027 label *label283
-    * label *label284
-    * label *label14
  1028 jump *label13 always
-    * label *label15
-    * label *label9
-    * label *label8
  1029 wait 1e12
  1030 jump *label7 always
  1031 end

Modifications by Jumps phase, Jump Straightening, pass 6, iteration 1 (-7 instructions):
 
   391 draw print 171 97 @right
   392 set :drawMaterials:y 75
   393 op sub :drawMaterials:count .materialCount 1
-    * jump *label354 greaterThan :drawMaterials:count 0
-    * jump *label150 always
+  394 jump *label150 lessThanEq :drawMaterials:count 0
   395 label *label354
   396 label *label356
   397 set :drawMaterials:target.1 .targetLead
 
   415 op sub :drawItem.5:y :drawMaterials:y 15
   416 set :drawMaterials:y :drawItem.5:y
   417 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label370 greaterThan :drawMaterials:count 0
-    * jump *label150 always
+  418 jump *label150 lessThanEq :drawMaterials:count 0
   419 label *label370
   420 label *label372
   421 set :drawMaterials:target.1 .targetGraphite
 
   439 op sub :drawItem.5:y :drawMaterials:y 15
   440 set :drawMaterials:y :drawItem.5:y
   441 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label386 greaterThan :drawMaterials:count 0
-    * jump *label150 always
+  442 jump *label150 lessThanEq :drawMaterials:count 0
   443 label *label386
   444 label *label388
   445 set :drawMaterials:target.1 .targetSilicon
 
   463 op sub :drawItem.5:y :drawMaterials:y 15
   464 set :drawMaterials:y :drawItem.5:y
   465 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label402 greaterThan :drawMaterials:count 0
-    * jump *label150 always
+  466 jump *label150 lessThanEq :drawMaterials:count 0
   467 label *label402
   468 label *label404
   469 set :drawMaterials:target.1 .targetTitanium
 
   487 op sub :drawItem.5:y :drawMaterials:y 15
   488 set :drawMaterials:y :drawItem.5:y
   489 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label418 greaterThan :drawMaterials:count 0
-    * jump *label150 always
+  490 jump *label150 lessThanEq :drawMaterials:count 0
   491 label *label418
   492 label *label420
   493 set :drawMaterials:target.1 .targetMetaglass
 
   511 op sub :drawItem.5:y :drawMaterials:y 15
   512 set :drawMaterials:y :drawItem.5:y
   513 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label434 greaterThan :drawMaterials:count 0
-    * jump *label150 always
+  514 jump *label150 lessThanEq :drawMaterials:count 0
   515 label *label434
   516 label *label436
   517 set :drawMaterials:target.1 .targetThorium
 
   977 label *label276
   978 drawflush display1
   979 sensor *tmp450 switch1 @enabled
-    * jump *label278 equal *tmp450 false
-    * jump *label267 always
+  980 jump *label267 notEqual *tmp450 false
   981 label *label278
   982 op sub :displayLog:position :displayLog:position 1
   983 jump *label299 greaterThanEq :displayLog:position :displayLog:stop

Modifications by Jumps phase, Jump Optimization, pass 6, iteration 1:
 
   392 set :drawMaterials:y 75
   393 op sub :drawMaterials:count .materialCount 1
   394 jump *label150 lessThanEq :drawMaterials:count 0
-    * label *label354
   395 label *label356
   396 set :drawMaterials:target.1 .targetLead
   397 jump *label372 lessThanEq :drawMaterials:target.1 0
 
   415 set :drawMaterials:y :drawItem.5:y
   416 op sub :drawMaterials:count :drawMaterials:count 1
   417 jump *label150 lessThanEq :drawMaterials:count 0
-    * label *label370
   418 label *label372
   419 set :drawMaterials:target.1 .targetGraphite
   420 jump *label388 lessThanEq :drawMaterials:target.1 0
 
   438 set :drawMaterials:y :drawItem.5:y
   439 op sub :drawMaterials:count :drawMaterials:count 1
   440 jump *label150 lessThanEq :drawMaterials:count 0
-    * label *label386
   441 label *label388
   442 set :drawMaterials:target.1 .targetSilicon
   443 jump *label404 lessThanEq :drawMaterials:target.1 0
 
   461 set :drawMaterials:y :drawItem.5:y
   462 op sub :drawMaterials:count :drawMaterials:count 1
   463 jump *label150 lessThanEq :drawMaterials:count 0
-    * label *label402
   464 label *label404
   465 set :drawMaterials:target.1 .targetTitanium
   466 jump *label420 lessThanEq :drawMaterials:target.1 0
 
   484 set :drawMaterials:y :drawItem.5:y
   485 op sub :drawMaterials:count :drawMaterials:count 1
   486 jump *label150 lessThanEq :drawMaterials:count 0
-    * label *label418
   487 label *label420
   488 set :drawMaterials:target.1 .targetMetaglass
   489 jump *label436 lessThanEq :drawMaterials:target.1 0
 
   507 set :drawMaterials:y :drawItem.5:y
   508 op sub :drawMaterials:count :drawMaterials:count 1
   509 jump *label150 lessThanEq :drawMaterials:count 0
-    * label *label434
   510 label *label436
   511 set :drawMaterials:target.1 .targetThorium
   512 jump *label452 lessThanEq :drawMaterials:target.1 0
 
   972 drawflush display1
   973 sensor *tmp450 switch1 @enabled
   974 jump *label267 notEqual *tmp450 false
-    * label *label278
   975 op sub :displayLog:position :displayLog:position 1
   976 jump *label299 greaterThanEq :displayLog:position :displayLog:stop
   977 label *label267

Modifications by Jumps phase, Jump Threading, pass 6, iteration 1:
 
   110 draw image *tmp87 *tmp92 @mega *tmp97 0
   111 drawflush display1
   112 op add .animation .animation 1
-    * jump *label33 always
+  113 jump *label31 always
   114 label *label32
   115 draw reset
   116 draw clear 0 0 32
 
   259 print "/"
   260 print :drawMaterials:unitTotal1
   261 draw print 171 97 @right
-    * jump *label91 equal :drawMaterials:unit2 null
+  262 jump *label67 equal :drawMaterials:unit2 null
   263 op mul *tmp206 122 .reconstructorProgress
   264 op min :drawItem.1:length 122 *tmp206
   265 draw col %[white]
 
   276 print "/"
   277 print :drawMaterials:unitTotal2
   278 draw print 171 82 @right
-    * jump *label101 equal :drawMaterials:unit3 null
+  279 jump *label67 equal :drawMaterials:unit3 null
   280 op mul *tmp230 122 :drawMaterials:multiReconstructorProgress
   281 op min :drawItem.2:length 122 *tmp230
   282 draw col %[white]
 
   295 draw print 171 67 @right
   296 label *label101
   297 label *label91
-    * jump *label82 always
+  298 jump *label67 always
   299 label *label81
   300 jump *label325 lessThanEq :drawMaterials:targetFactoryLead 0
   301 sensor *tmp253 A¾BHMW-air-factory13 @lead
 
   314 draw print 171 97 @right
   315 set :drawMaterials:y 75
   316 label *label325
-    * jump *label339 lessThanEq :drawMaterials:targetFactorySilicon 0
+  317 jump *label67 lessThanEq :drawMaterials:targetFactorySilicon 0
   318 sensor *tmp253 A¾BHMW-air-factory13 @silicon
   319 op mul *tmp258 122 *tmp253
   320 op div *tmp259 *tmp258 :drawMaterials:targetFactorySilicon
 
  1003 printflush message1
  1004 label *label281
  1005 sensor .pageSwitched switch1 @enabled
-    * jump *label283 equal .pageSwitched false
+ 1006 jump *label13 equal .pageSwitched false
  1007 control enabled switch1 false
  1008 op add *tmp459 .page 1
  1009 op mod .page *tmp459 .numPages

Modifications by Jumps phase, Unreachable Code Elimination, pass 6, iteration 1 (-3 instructions):
 
   293 print "/"
   294 print .megaTarget
   295 draw print 171 67 @right
-    * label *label101
-    * label *label91
   296 jump *label67 always
   297 label *label81
   298 jump *label325 lessThanEq :drawMaterials:targetFactoryLead 0
 
   329 draw print 170 *tmp272 @right
   330 print :drawMaterials:targetFactorySilicon
   331 draw print 171 *tmp272 @right
-    * label *label339
-    * label *label82
   332 jump *label67 always
   333 label *label66
   334 op equal *tmp276 .nextBlock @titanium
 
   600 draw print :drawUnits:x 129 @right
   601 label *label210
   602 drawflush display1
-    * label *label33
   603 jump *label31 always
   604 label *label30
   605 jump *label214 notEqual .page 1
 
  1005 drawflush null
  1006 draw reset
  1007 draw clear 0 0 32
-    * label *label283
  1008 jump *label13 always
-    * wait 1e12
-    * jump *label7 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 6, iteration 1:
 
    15 set .animation -15
    16 set .pageSwitched false
    17 set *signature "0:v1"
-    * label *label7
    18 label *label10
    19 ubind @poly
    20 ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    17 set *signature "0:v1"
    18 label *label10
    19 ubind @poly
-    * ulocate building core false @copper *tmp41 *tmp42 *tmp43 .core
+   20 ulocate building core false @copper 0 0 0 .core
    21 jump *label10 equal .core null
    22 sensor .coreX .core @x
    23 sensor .coreY .core @y

Modifications by Final phase, Print Merging, iteration 1 (-13 instructions):
 
   143 op mod :drawHeader:s :drawHeader:t 60
   144 select *tmp120 lessThan :drawHeader:s 10 "0" ""
   145 print :drawHeader:m
-    * print ":"
-    * print *tmp120
-    * print :drawHeader:s
+  146 print ":{0}{0} (x{0}.{0})"
+  147 format *tmp120
+  148 format :drawHeader:s
   149 op mul *tmp121 10 :drawHeader:t
   150 op div *tmp122 *tmp121 :drawHeader:tt
   151 op round :drawHeader:ratio *tmp122
   152 op idiv *tmp124 :drawHeader:ratio 10
   153 op mod *tmp125 :drawHeader:ratio 10
-    * print " (x"
-    * print *tmp124
-    * print "."
-    * print *tmp125
-    * print ")"
+  154 format *tmp124
+  155 format *tmp125
   156 draw print 170 172 @topRight
   157 jump *label57 equal .titaniumDrill false
   158 sensor *tmp127 .titaniumDrill @titanium
 
   970 label *label31
   971 label *label19
   972 jump *label280 lessThanEq .megas 0
-    * print "[gold]All done.[]\nNothing more to see here.\nGo home."
-    * print "\n"
+  973 print "[gold]All done.[]\nNothing more to see here.\nGo home.\n"
   974 printflush message1
   975 jump *label281 always
   976 label *label280
-    * print "[gold]Building "
-    * print .nextBlock
-    * print "\n"
-    * print "==================================[]"
-    * print "\n"
-    * print .status1
-    * print "\n"
-    * print .status2
-    * print .item2
-    * print " "
-    * print "("
-    * print .block2
-    * print ")"
-    * print "\n"
-    * print .status3
-    * print "\n"
+  977 print "[gold]Building {0}\n==================================[]\n{0}\n{0}{0} ({0})\n{0}\n"
+  978 format .nextBlock
+  979 format .status1
+  980 format .status2
+  981 format .item2
+  982 format .block2
+  983 format .status3
   984 printflush message1
   985 label *label281
   986 sensor .pageSwitched switch1 @enabled

Final code before resolving virtual instructions:

        label *label6                                                Display.mnd: require "OreLocator.mnd" remote oreLocator;
    0:  read *tmp39 processor3 "*signature"                          ...
    1:  jump *label6 notEqual *tmp39 "3290b8c661787058:v1"           ...
    2:  set .core null                                               Display.mnd: var
    3:  set .page 0                                                  ...
    4:  set .numPages 3                                              ...
    5:  set .recentBuildIndex -1                                     Display.mnd: remote var
    6:  set .monos 0                                                 ...
    7:  set .flares 0                                                ...
    8:  set .polys 1                                                 ...
    9:  set .megas 0                                                 ...
   10:  set .flareTarget 0                                           ...
   11:  set .monoTarget 0                                            ...
   12:  set .polyTarget 0                                            ...
   13:  set .megaTarget 0                                            ...
   14:  set .animation -15                                           Display.mnd: var animation = -15;
   15:  set .pageSwitched false                                      Display.mnd: var pageSwitched = false;
   16:  set *signature "0:v1"                                        Display.mnd: #set target = 8;
        label *label10                                               Display.mnd: do
   17:  ubind @poly                                                  Display.mnd: ubind(@poly);
   18:  ulocate building core false @copper 0 0 0 .core              Display.mnd: core = ulocate(:building, :core, false);
   19:  jump *label10 equal .core null                               Display.mnd: do
   20:  sensor .coreX .core @x                                       Display.mnd: coreX = core.@x;
   21:  sensor .coreY .core @y                                       Display.mnd: coreY = core.@y;
   22:  printflush null                                              Display.mnd: printflush(null);
   23:  drawflush null                                               Display.mnd: drawflush(null);
        label *label13                                               Display.mnd: while true do
   24:  jump *label16 equal .unitReset false                         Display.mnd: if unitReset then
   25:  set .reconstructorProgress 0                                 Display.mnd: factoryProgress = reconstructorProgress = 0;
   26:  set .factoryProgress 0                                       ...
   27:  set .unitReset false                                         Display.mnd: unitReset = false;
        label *label16                                               Display.mnd: if unitReset then
   28:  jump *label18 notEqual .page -1                              Display.mnd: if page == -1 then
   29:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
   30:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
   31:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
   32:  print "Map"                                                  Display.mnd: print(text);
   33:  draw print 4 172 @topLeft                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   34:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   35:  op div *tmp50 176 @mapw                                      Display.mnd: scale(176 / mapw, 176 / maph);
   36:  op div *tmp51 176 @maph                                      ...
   37:  draw scale *tmp50 *tmp51 0 0 0 0                             ...
   38:  op div *tmp52 @mapw 176                                      Display.mnd: var imgSize = ceil(mapw / 176);
   39:  op ceil :displayOreMap:imgSize *tmp52 0                      ...
   40:  op mul *tmp54 7 :displayOreMap:imgSize                       Display.mnd: image(coreX, coreY, @core-shard, 7 * imgSize, 0);
   41:  draw image .coreX .coreY @core-shard *tmp54 0 0              ...
   42:  set :displayOreMap:index -1                                  Display.mnd: var index = -1, count = oreLocator.locations;
   43:  read :displayOreMap:count processor3 ".locations"            ...
   44:  set :displayOreMap:i 0                                       Display.mnd: for var i in 0 ... count do
   45:  jump *label25 greaterThanEq 0 :displayOreMap:count           ...
        label *label298                                              ...
   46:  op add :displayOreMap:index :displayOreMap:index 1           Display.mnd: var id = bank1[++index];
   47:  read :displayOreMap:id bank1 :displayOreMap:index            ...
   48:  lookup item *tmp59 :displayOreMap:id                         Display.mnd: var img = id > 0 ? lookup(:item, id) : lookup(:block, -id);
   49:  jump *label27 greaterThan :displayOreMap:id 0                ...
   50:  op sub *tmp61 0 :displayOreMap:id                            ...
   51:  lookup block *tmp59 *tmp61                                   ...
        label *label27                                               ...
   52:  op add :displayOreMap:index :displayOreMap:index 1           Display.mnd: var size = 4 + sqrt(bank1[++index]);
   53:  read *tmp64 bank1 :displayOreMap:index                       ...
   54:  op sqrt *tmp65 *tmp64 0                                      ...
   55:  op add :displayOreMap:size 4 *tmp65                          ...
   56:  op add :displayOreMap:index :displayOreMap:index 1           Display.mnd: var x = bank1[++index];
   57:  read :displayOreMap:x bank1 :displayOreMap:index             ...
   58:  op add :displayOreMap:index :displayOreMap:index 1           Display.mnd: var y = bank1[++index];
   59:  read :displayOreMap:y bank1 :displayOreMap:index             ...
   60:  op mul *tmp71 :displayOreMap:size :displayOreMap:imgSize     Display.mnd: image(x, y, img, size * imgSize, 0);
   61:  draw image :displayOreMap:x :displayOreMap:y *tmp59 *tmp71 0 ...
   62:  op add :displayOreMap:i :displayOreMap:i 1                   Display.mnd: for var i in 0 ... count do
   63:  jump *label298 lessThan :displayOreMap:i :displayOreMap:coun ...
        label *label25                                               ...
   64:  sensor *tmp72 .titaniumDrill @x                              Display.mnd: image(titaniumDrill.@x, titaniumDrill.@y, @pneumatic-drill, 4 * imgSize, 0);
   65:  sensor *tmp73 .titaniumDrill @y                              ...
   66:  op mul *tmp74 4 :displayOreMap:imgSize                       ...
   67:  draw image *tmp72 *tmp73 @pneumatic-drill *tmp74 0 0         ...
   68:  sensor *tmp75 .thoriumDrill @x                               Display.mnd: image(thoriumDrill.@x, thoriumDrill.@y, @laser-drill, 5 * imgSize, 0);
   69:  sensor *tmp76 .thoriumDrill @y                               ...
   70:  op mul *tmp77 5 :displayOreMap:imgSize                       ...
   71:  draw image *tmp75 *tmp76 @laser-drill *tmp77 0 0             ...
   72:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
   73:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   74:  print :displayOreMap:index                                   Display.mnd: print(text);
   75:  draw print 175 172 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   76:  drawflush display1                                           Display.mnd: drawflush(display1);
   77:  jump *label19 always 0 0                                     Display.mnd: if page == -1 then
        label *label18                                               ...
   78:  jump *label30 notEqual .page 0                               Display.mnd: elsif page == 0 then
   79:  jump *label32 lessThanEq .megas 0                            Display.mnd: if megas > 0 then
   80:  jump *label35 greaterThanEq .animation 0                     Display.mnd: if animation < 0 then
   81:  draw color 0 0 32 80 0 0                                     Display.mnd: color(0, 0, 32, 80);
   82:  draw rect 0 0 176 176 0 0                                    Display.mnd: rect(0, 0, 176, 176);
   83:  jump *label36 always 0 0                                     Display.mnd: if animation < 0 then
        label *label35                                               ...
   84:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
   85:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
        label *label36                                               Display.mnd: if animation < 0 then
   86:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   87:  op div *tmp84 .animation 30                                  Display.mnd: var ratio = max(0, min(animation / 30, 1));
   88:  op min *tmp85 *tmp84 1                                       ...
   89:  op max :animate:ratio 0 *tmp85                               ...
   90:  op sub *tmp88 1 :animate:ratio                               Display.mnd: (1 - ratio) * from + ratio * to;
   91:  op mul *tmp89 *tmp88 40                                      ...
   92:  op mul *tmp90 :animate:ratio 88                              ...
   93:  op add *tmp87 *tmp89 *tmp90                                  ...
   94:  op mul *tmp94 *tmp88 137                                     ...
   95:  op add *tmp92 *tmp94 *tmp90                                  ...
   96:  op mul *tmp99 *tmp88 32                                      ...
   97:  op mul *tmp100 :animate:ratio 168                            ...
   98:  op add *tmp97 *tmp99 *tmp100                                 ...
   99:  draw image *tmp87 *tmp92 @mega *tmp97 0 0                    Display.mnd: image(x, y, @mega, size, 0);
  100:  drawflush display1                                           Display.mnd: drawflush(display1);
  101:  op add .animation .animation 1                               Display.mnd: animate();
  102:  jump *label31 always 0 0                                     Display.mnd: if megas > 0 then
        label *label32                                               ...
  103:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  104:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  105:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  106:  print "Goal"                                                 Display.mnd: print(text);
  107:  draw print 40 161 @bottom                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  108:  print "Goal"                                                 Display.mnd: print(text);
  109:  draw print 41 161 @bottom                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  110:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  111:  op add :drawHeader:count .nextBlock .nextUnit                Display.mnd: var count = nextBlock + nextUnit;
  112:  jump *label47 notEqual :drawHeader:count 2                   Display.mnd: if count == 2 then
  113:  draw image 25 139 .nextBlock 25 0 0                          Display.mnd: image(HEADER_X - 15, HEADER1_Y - 22, nextBlock, 25, 0);
  114:  draw image 55 139 .nextUnit 25 0 0                           Display.mnd: image(HEADER_X + 15, HEADER1_Y - 22, nextUnit, 25, 0);
  115:  jump *label48 always 0 0                                     Display.mnd: if count == 2 then
        label *label47                                               ...
  116:  jump *label49 notEqual :drawHeader:count 1                   Display.mnd: elsif count == 1 then
  117:  select *tmp110 notEqual .nextBlock null .nextBlock .nextUnit Display.mnd: image(HEADER_X, HEADER1_Y - 24, nextBlock != null ? nextBlock : nextUnit, 32, 0);
  118:  draw image 40 137 *tmp110 32 0 0                             ...
  119:  jump *label50 always 0 0                                     Display.mnd: elsif count == 1 then
        label *label49                                               ...
  120:  op div *tmp111 @tick 2                                       Display.mnd: image(HEADER_X, HEADER1_Y - 24, @hydrogen, 32, 360 - (@tick / 2) % 360);
  121:  op mod *tmp112 *tmp111 360                                   ...
  122:  op sub *tmp113 360 *tmp112                                   ...
  123:  draw image 40 137 @hydrogen 32 *tmp113 0                     ...
        label *label50                                               Display.mnd: elsif count == 1 then
        label *label48                                               Display.mnd: if count == 2 then
  124:  set :drawHeader:tt @second                                   Display.mnd: var tt = @second;
  125:  read *tmp114 processor1 "time"                               Display.mnd: var t = floor(timer.read("time") / 120);
  126:  op idiv :drawHeader:t *tmp114 120                            ...
  127:  op idiv :drawHeader:m :drawHeader:t 60                       Display.mnd: var m = t \ 60;
  128:  op mod :drawHeader:s :drawHeader:t 60                        Display.mnd: var s = t % 60;
  129:  select *tmp120 lessThan :drawHeader:s 10 "0" ""              Display.mnd: print(m, ":", s < 10 ? "0" : "", s);
  130:  print :drawHeader:m                                          ...
  131:  print ":{0}{0} (x{0}.{0})"                                   ...
  132:  format *tmp120                                               ...
  133:  format :drawHeader:s                                         ...
  134:  op mul *tmp121 10 :drawHeader:t                              Display.mnd: var ratio = round(10 * t / tt);
  135:  op div *tmp122 *tmp121 :drawHeader:tt                        ...
  136:  op round :drawHeader:ratio *tmp122 0                         ...
  137:  op idiv *tmp124 :drawHeader:ratio 10                         Display.mnd: print(" (x", ratio \ 10, ".", ratio % 10);
  138:  op mod *tmp125 :drawHeader:ratio 10                          ...
  139:  format *tmp124                                               ...
  140:  format *tmp125                                               ...
  141:  draw print 170 172 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  142:  jump *label57 equal .titaniumDrill false                     Display.mnd: if titaniumDrill then
  143:  sensor *tmp127 .titaniumDrill @titanium                      Display.mnd: count = max(titaniumDrillCount, titaniumDrill.@titanium);
  144:  op max :drawHeader:count .titaniumDrillCount *tmp127         ...
  145:  op log10 *tmp129 :drawHeader:count 0                         Display.mnd: var len = floor(log10(count));
  146:  op floor :drawHeader:len *tmp129 0                           ...
  147:  print "x"                                                    Display.mnd: print(text);
  148:  print :drawHeader:count                                      ...
  149:  draw print 170 155 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  150:  op mul *tmp132 7 :drawHeader:len                             Display.mnd: image(x - 20 - 7 * len, 146, @titanium, 12, 0);
  151:  op sub *tmp133 150 *tmp132                                   ...
  152:  draw image *tmp133 146 @titanium 12 0 0                      ...
        label *label57                                               Display.mnd: if titaniumDrill then
  153:  jump *label61 equal .thoriumContainer false                  Display.mnd: if thoriumContainer then
  154:  sensor :drawHeader:count .thoriumContainer @thorium          Display.mnd: count = thoriumContainer.@thorium;
  155:  op log10 *tmp136 :drawHeader:count 0                         Display.mnd: var len = floor(log10(count));
  156:  op floor :drawHeader:len.1 *tmp136 0                         ...
  157:  print "x"                                                    Display.mnd: print(text);
  158:  print :drawHeader:count                                      ...
  159:  draw print 120 155 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  160:  op mul *tmp139 7 :drawHeader:len.1                           Display.mnd: image(x - 20 - 7 * len, 146, @thorium, 12, 0);
  161:  op sub *tmp140 100 *tmp139                                   ...
  162:  draw image *tmp140 146 @thorium 12 0 0                       ...
        label *label61                                               Display.mnd: if thoriumContainer then
  163:  set :drawMaterials:y 90                                      Display.mnd: var count, col = 0, y = HEADER2_Y - ROW_HEIGHT;
  164:  jump *label66 notEqual .nextBlock null                       Display.mnd: if nextBlock == null then
  165:  sensor *tmp143 A¾BHMW-air-factory13 @progress                Display.mnd: factoryProgress = max(factoryProgress, air_factory.@progress);
  166:  op max .factoryProgress .factoryProgress *tmp143             ...
  167:  sensor *tmp145 AÀHBJa-additive-reconstructor23 @progress     Display.mnd: reconstructorProgress = max(reconstructorProgress, additive_rec.@progress);
  168:  op max .reconstructorProgress .reconstructorProgress *tmp145 ...
  169:  sensor :drawMaterials:multiReconstructorProgress AÁPBJf-mult Display.mnd: var multiReconstructorProgress = multiplicative_rec.@progress;
  170:  jump *label68 notEqual .nextUnit @mono                       Display.mnd: if nextUnit == @mono then
  171:  set :drawMaterials:targetFactoryLead 15                      Display.mnd: targetFactoryLead = 15;
  172:  set :drawMaterials:targetFactorySilicon 30                   Display.mnd: targetFactorySilicon = 30;
  173:  set .materialCount 2                                         Display.mnd: materialCount = 2;
  174:  set :drawMaterials:unitCount1 .monos                         Display.mnd: unitCount1 = monos;
  175:  set :drawMaterials:unitTotal1 .monoTarget                    Display.mnd: unitTotal1 = monoTarget;
  176:  set :drawMaterials:unit1 .nextUnit                           Display.mnd: unit1 = nextUnit;
  177:  set :drawMaterials:unit3 null                                Display.mnd: unit2 = unit3 = null;
  178:  set :drawMaterials:unit2 null                                ...
  179:  jump *label69 always 0 0                                     Display.mnd: if nextUnit == @mono then
        label *label68                                               ...
  180:  jump *label70 notEqual .nextUnit @flare                      Display.mnd: elsif nextUnit == @flare then
  181:  set :drawMaterials:targetFactoryLead 0                       Display.mnd: targetFactoryLead = 0;
  182:  set :drawMaterials:targetFactorySilicon 15                   Display.mnd: targetFactorySilicon = 15;
  183:  set .materialCount 1                                         Display.mnd: materialCount = 1;
  184:  set :drawMaterials:unitCount1 .flares                        Display.mnd: unitCount1 = flares;
  185:  set :drawMaterials:unitTotal1 .flareTarget                   Display.mnd: unitTotal1 = flareTarget;
  186:  set :drawMaterials:unit1 .nextUnit                           Display.mnd: unit1 = nextUnit;
  187:  set :drawMaterials:unit3 null                                Display.mnd: unit2 = unit3 = null;
  188:  set :drawMaterials:unit2 null                                ...
  189:  jump *label71 always 0 0                                     Display.mnd: elsif nextUnit == @flare then
        label *label70                                               ...
  190:  jump *label72 notEqual .nextUnit @poly                       Display.mnd: elsif nextUnit == @poly then
  191:  op floor :drawMaterials:unitCount1 .factoryProgress 0        Display.mnd: unitCount1 = floor(factoryProgress);
  192:  set :drawMaterials:unitCount2 .polys                         Display.mnd: unitCount2 = polys;
  193:  set :drawMaterials:unitTotal1 1                              Display.mnd: unitTotal1 = 1;
  194:  set :drawMaterials:unitTotal2 .polyTarget                    Display.mnd: unitTotal2 = polyTarget;
  195:  set :drawMaterials:unit1 @mono                               Display.mnd: unit1 = @mono;
  196:  set :drawMaterials:unit2 .nextUnit                           Display.mnd: unit2 = nextUnit;
  197:  set :drawMaterials:unit3 null                                Display.mnd: unit3 = null;
  198:  op greaterThan *tmp164 .reconstructorProgress 0              Display.mnd: factoryProgress = max(factoryProgress, reconstructorProgress > 0);
  199:  op max .factoryProgress .factoryProgress *tmp164             ...
  200:  jump *label73 always 0 0                                     Display.mnd: elsif nextUnit == @poly then
        label *label72                                               ...
  201:  jump *label74 notEqual .nextUnit @mega                       Display.mnd: elsif nextUnit == @mega then
  202:  op floor :drawMaterials:unitCount1 .factoryProgress 0        Display.mnd: unitCount1 = floor(factoryProgress);
  203:  op floor :drawMaterials:unitCount2 .reconstructorProgress 0  Display.mnd: unitCount2 = floor(reconstructorProgress);
  204:  set :drawMaterials:unitTotal1 1                              Display.mnd: unitTotal1 = 1;
  205:  set :drawMaterials:unitTotal2 1                              Display.mnd: unitTotal2 = 1;
  206:  set :drawMaterials:unit1 @mono                               Display.mnd: unit1 = @mono;
  207:  set :drawMaterials:unit2 @poly                               Display.mnd: unit2 = @poly;
  208:  set :drawMaterials:unit3 .nextUnit                           Display.mnd: unit3 = nextUnit;
  209:  op greaterThan *tmp171 .reconstructorProgress 0              Display.mnd: factoryProgress = max(factoryProgress, reconstructorProgress > 0);
  210:  op max .factoryProgress .factoryProgress *tmp171             ...
  211:  op greaterThan *tmp173 :drawMaterials:multiReconstructorProg Display.mnd: reconstructorProgress = max(reconstructorProgress, multiReconstructorProgress > 0);
  212:  op max .reconstructorProgress .reconstructorProgress *tmp173 ...
        label *label74                                               Display.mnd: elsif nextUnit == @mega then
        label *label73                                               Display.mnd: elsif nextUnit == @poly then
        label *label71                                               Display.mnd: elsif nextUnit == @flare then
        label *label69                                               Display.mnd: if nextUnit == @mono then
  213:  print "Unit factories"                                       Display.mnd: print(text);
  214:  draw print 22 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  215:  print "Unit factories"                                       Display.mnd: print(text);
  216:  draw print 23 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  217:  jump *label81 lessThanEq .factoryProgress 0                  Display.mnd: if factoryProgress > 0 then
  218:  op mul *tmp182 122 .factoryProgress                          Display.mnd: var length = min(barLength, barLength * current / target);
  219:  op min :drawItem:length 122 *tmp182                          ...
  220:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  221:  draw image 11 95 :drawMaterials:unit1 16 0 0                 Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  222:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  223:  draw rect 22 90 :drawItem:length 10 0 0                      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  224:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  225:  draw lineRect 22 90 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  226:  print :drawMaterials:unitCount1                              Display.mnd: print(text);
  227:  print "/"                                                    ...
  228:  print :drawMaterials:unitTotal1                              ...
  229:  draw print 170 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  230:  print :drawMaterials:unitCount1                              Display.mnd: print(text);
  231:  print "/"                                                    ...
  232:  print :drawMaterials:unitTotal1                              ...
  233:  draw print 171 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  234:  jump *label67 equal :drawMaterials:unit2 null                Display.mnd: if unit2 != null then
  235:  op mul *tmp206 122 .reconstructorProgress                    Display.mnd: var length = min(barLength, barLength * current / target);
  236:  op min :drawItem.1:length 122 *tmp206                        ...
  237:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  238:  draw image 11 80 :drawMaterials:unit2 16 0 0                 Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  239:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  240:  draw rect 22 75 :drawItem.1:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  241:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  242:  draw lineRect 22 75 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  243:  print :drawMaterials:unitCount2                              Display.mnd: print(text);
  244:  print "/"                                                    ...
  245:  print :drawMaterials:unitTotal2                              ...
  246:  draw print 170 82 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  247:  print :drawMaterials:unitCount2                              Display.mnd: print(text);
  248:  print "/"                                                    ...
  249:  print :drawMaterials:unitTotal2                              ...
  250:  draw print 171 82 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  251:  jump *label67 equal :drawMaterials:unit3 null                Display.mnd: if unit3 != null then
  252:  op mul *tmp230 122 :drawMaterials:multiReconstructorProgress Display.mnd: var length = min(barLength, barLength * current / target);
  253:  op min :drawItem.2:length 122 *tmp230                        ...
  254:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  255:  draw image 11 65 :drawMaterials:unit3 16 0 0                 Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  256:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  257:  draw rect 22 60 :drawItem.2:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  258:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  259:  draw lineRect 22 60 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  260:  print .megas                                                 Display.mnd: print(text);
  261:  print "/"                                                    ...
  262:  print .megaTarget                                            ...
  263:  draw print 170 67 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  264:  print .megas                                                 Display.mnd: print(text);
  265:  print "/"                                                    ...
  266:  print .megaTarget                                            ...
  267:  draw print 171 67 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  268:  jump *label67 always 0 0                                     Display.mnd: if factoryProgress > 0 then
        label *label81                                               ...
  269:  jump *label325 lessThanEq :drawMaterials:targetFactoryLead 0 Display.mnd: if target > 0 then
  270:  sensor *tmp253 A¾BHMW-air-factory13 @lead                    Display.mnd: drawItem(in out col, in out y, 1, item, air_factory.sensor(item), target, target);
  271:  op mul *tmp258 122 *tmp253                                   Display.mnd: var length = min(barLength, barLength * current / target);
  272:  op div *tmp259 *tmp258 :drawMaterials:targetFactoryLead      ...
  273:  op min :drawItem.3:length 122 *tmp259                        ...
  274:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  275:  draw image 11 95 @lead 16 0 0                                Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  276:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  277:  draw rect 22 90 :drawItem.3:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  278:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  279:  draw lineRect 22 90 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  280:  print :drawMaterials:targetFactoryLead                       Display.mnd: print(text);
  281:  draw print 170 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  282:  print :drawMaterials:targetFactoryLead                       Display.mnd: print(text);
  283:  draw print 171 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  284:  set :drawMaterials:y 75                                      Display.mnd: drawItem(in out col, in out y, 1, item, air_factory.sensor(item), target, target);
        label *label325                                              Display.mnd: if target > 0 then
  285:  jump *label67 lessThanEq :drawMaterials:targetFactorySilicon ...
  286:  sensor *tmp253 A¾BHMW-air-factory13 @silicon                 Display.mnd: drawItem(in out col, in out y, 1, item, air_factory.sensor(item), target, target);
  287:  op mul *tmp258 122 *tmp253                                   Display.mnd: var length = min(barLength, barLength * current / target);
  288:  op div *tmp259 *tmp258 :drawMaterials:targetFactorySilicon   ...
  289:  op min :drawItem.3:length 122 *tmp259                        ...
  290:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  291:  op add *tmp270 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  292:  draw image 11 *tmp270 @silicon 16 0 0                        ...
  293:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  294:  draw rect 22 :drawMaterials:y :drawItem.3:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  295:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  296:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  297:  op add *tmp272 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  298:  print :drawMaterials:targetFactorySilicon                    Display.mnd: print(text);
  299:  draw print 170 *tmp272 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  300:  print :drawMaterials:targetFactorySilicon                    Display.mnd: print(text);
  301:  draw print 171 *tmp272 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  302:  jump *label67 always 0 0                                     Display.mnd: if nextBlock == null then
        label *label66                                               ...
  303:  op equal *tmp276 .nextBlock @titanium                        Display.mnd: elsif nextBlock == @titanium or nextBlock == @ore-titanium then
  304:  op equal *tmp277 .nextBlock @ore-titanium                    ...
  305:  op or *tmp278 *tmp276 *tmp277                                ...
  306:  jump *label126 equal *tmp278 false                           ...
  307:  read *tmp280 processor3 ".mapAction"                         Display.mnd: print(text);
  308:  print *tmp280                                                ...
  309:  draw print 22 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  310:  read *tmp282 processor3 ".mapAction"                         Display.mnd: print(text);
  311:  print *tmp282                                                ...
  312:  draw print 23 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  313:  read :drawItem.4:current processor3 ".mapProgress"           Display.mnd: drawItem(in 0, in HEADER2_Y - ROW_HEIGHT, 1, @titanium, oreLocator.mapProgress, oreLocator.mapTotal, "x", oreLocator.mapSpots);
  314:  read :drawItem.4:target processor3 ".mapTotal"               ...
  315:  op mul *tmp287 122 :drawItem.4:current                       Display.mnd: var length = min(barLength, barLength * current / target);
  316:  op div *tmp288 *tmp287 :drawItem.4:target                    ...
  317:  op min :drawItem.4:length 122 *tmp288                        ...
  318:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  319:  draw image 11 95 @titanium 16 0 0                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  320:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  321:  draw rect 22 90 :drawItem.4:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  322:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  323:  draw lineRect 22 90 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  324:  print "x"                                                    Display.mnd: print(text);
  325:  read *tmp302 processor3 ".mapSpots"                          ...
  326:  print *tmp302                                                ...
  327:  draw print 170 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  328:  print "x"                                                    Display.mnd: print(text);
  329:  read *tmp304 processor3 ".mapSpots"                          ...
  330:  print *tmp304                                                ...
  331:  draw print 171 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  332:  jump *label127 always 0 0                                    Display.mnd: elsif nextBlock == @titanium or nextBlock == @ore-titanium then
        label *label126                                              ...
  333:  set .materialCount .totalTargets                             Display.mnd: count = materialCount = totalTargets;
  334:  set :drawMaterials:count .materialCount                      ...
  335:  print "Materials"                                            Display.mnd: print(text);
  336:  draw print 22 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  337:  print "Materials"                                            Display.mnd: print(text);
  338:  draw print 23 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  339:  jump *label146 equal .materialCount false                    Display.mnd: if count then
  340:  set :drawMaterials:target.1 .targetCopper                    Display.mnd: for var item, target in
  341:  jump *label356 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  342:  sensor *tmp313 .core @copper                                 Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  343:  op mul *tmp318 122 *tmp313                                   Display.mnd: var length = min(barLength, barLength * current / target);
  344:  op div *tmp319 *tmp318 :drawMaterials:target.1               ...
  345:  op min :drawItem.5:length 122 *tmp319                        ...
  346:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  347:  draw image 11 95 @copper 16 0 0                              Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  348:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  349:  draw rect 22 90 :drawItem.5:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  350:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  351:  draw lineRect 22 90 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  352:  print :drawMaterials:target.1                                Display.mnd: print(text);
  353:  draw print 170 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  354:  print :drawMaterials:target.1                                Display.mnd: print(text);
  355:  draw print 171 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  356:  set :drawMaterials:y 75                                      Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  357:  op sub :drawMaterials:count .materialCount 1                 Display.mnd: if --count <= 0 then break; end;
  358:  jump *label150 lessThanEq :drawMaterials:count 0             ...
        label *label356                                              Display.mnd: if target > 0 then
  359:  set :drawMaterials:target.1 .targetLead                      Display.mnd: for var item, target in
  360:  jump *label372 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  361:  sensor *tmp313 .core @lead                                   Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  362:  op mul *tmp318 122 *tmp313                                   Display.mnd: var length = min(barLength, barLength * current / target);
  363:  op div *tmp319 *tmp318 :drawMaterials:target.1               ...
  364:  op min :drawItem.5:length 122 *tmp319                        ...
  365:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  366:  op add *tmp330 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  367:  draw image 11 *tmp330 @lead 16 0 0                           ...
  368:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  369:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  370:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  371:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  372:  op add *tmp332 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  373:  print :drawMaterials:target.1                                Display.mnd: print(text);
  374:  draw print 170 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  375:  print :drawMaterials:target.1                                Display.mnd: print(text);
  376:  draw print 171 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  377:  op sub :drawItem.5:y :drawMaterials:y 15                     Display.mnd: y -= ROW_HEIGHT;
  378:  set :drawMaterials:y :drawItem.5:y                           Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  379:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  380:  jump *label150 lessThanEq :drawMaterials:count 0             ...
        label *label372                                              Display.mnd: if target > 0 then
  381:  set :drawMaterials:target.1 .targetGraphite                  Display.mnd: for var item, target in
  382:  jump *label388 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  383:  sensor *tmp313 .core @graphite                               Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  384:  op mul *tmp318 122 *tmp313                                   Display.mnd: var length = min(barLength, barLength * current / target);
  385:  op div *tmp319 *tmp318 :drawMaterials:target.1               ...
  386:  op min :drawItem.5:length 122 *tmp319                        ...
  387:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  388:  op add *tmp330 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  389:  draw image 11 *tmp330 @graphite 16 0 0                       ...
  390:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  391:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  392:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  393:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  394:  op add *tmp332 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  395:  print :drawMaterials:target.1                                Display.mnd: print(text);
  396:  draw print 170 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  397:  print :drawMaterials:target.1                                Display.mnd: print(text);
  398:  draw print 171 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  399:  op sub :drawItem.5:y :drawMaterials:y 15                     Display.mnd: y -= ROW_HEIGHT;
  400:  set :drawMaterials:y :drawItem.5:y                           Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  401:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  402:  jump *label150 lessThanEq :drawMaterials:count 0             ...
        label *label388                                              Display.mnd: if target > 0 then
  403:  set :drawMaterials:target.1 .targetSilicon                   Display.mnd: for var item, target in
  404:  jump *label404 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  405:  sensor *tmp313 .core @silicon                                Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  406:  op mul *tmp318 122 *tmp313                                   Display.mnd: var length = min(barLength, barLength * current / target);
  407:  op div *tmp319 *tmp318 :drawMaterials:target.1               ...
  408:  op min :drawItem.5:length 122 *tmp319                        ...
  409:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  410:  op add *tmp330 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  411:  draw image 11 *tmp330 @silicon 16 0 0                        ...
  412:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  413:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  414:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  415:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  416:  op add *tmp332 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  417:  print :drawMaterials:target.1                                Display.mnd: print(text);
  418:  draw print 170 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  419:  print :drawMaterials:target.1                                Display.mnd: print(text);
  420:  draw print 171 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  421:  op sub :drawItem.5:y :drawMaterials:y 15                     Display.mnd: y -= ROW_HEIGHT;
  422:  set :drawMaterials:y :drawItem.5:y                           Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  423:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  424:  jump *label150 lessThanEq :drawMaterials:count 0             ...
        label *label404                                              Display.mnd: if target > 0 then
  425:  set :drawMaterials:target.1 .targetTitanium                  Display.mnd: for var item, target in
  426:  jump *label420 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  427:  sensor *tmp313 .core @titanium                               Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  428:  op mul *tmp318 122 *tmp313                                   Display.mnd: var length = min(barLength, barLength * current / target);
  429:  op div *tmp319 *tmp318 :drawMaterials:target.1               ...
  430:  op min :drawItem.5:length 122 *tmp319                        ...
  431:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  432:  op add *tmp330 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  433:  draw image 11 *tmp330 @titanium 16 0 0                       ...
  434:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  435:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  436:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  437:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  438:  op add *tmp332 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  439:  print :drawMaterials:target.1                                Display.mnd: print(text);
  440:  draw print 170 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  441:  print :drawMaterials:target.1                                Display.mnd: print(text);
  442:  draw print 171 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  443:  op sub :drawItem.5:y :drawMaterials:y 15                     Display.mnd: y -= ROW_HEIGHT;
  444:  set :drawMaterials:y :drawItem.5:y                           Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  445:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  446:  jump *label150 lessThanEq :drawMaterials:count 0             ...
        label *label420                                              Display.mnd: if target > 0 then
  447:  set :drawMaterials:target.1 .targetMetaglass                 Display.mnd: for var item, target in
  448:  jump *label436 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  449:  sensor *tmp313 .core @metaglass                              Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  450:  op mul *tmp318 122 *tmp313                                   Display.mnd: var length = min(barLength, barLength * current / target);
  451:  op div *tmp319 *tmp318 :drawMaterials:target.1               ...
  452:  op min :drawItem.5:length 122 *tmp319                        ...
  453:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  454:  op add *tmp330 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  455:  draw image 11 *tmp330 @metaglass 16 0 0                      ...
  456:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  457:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  458:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  459:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  460:  op add *tmp332 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  461:  print :drawMaterials:target.1                                Display.mnd: print(text);
  462:  draw print 170 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  463:  print :drawMaterials:target.1                                Display.mnd: print(text);
  464:  draw print 171 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  465:  op sub :drawItem.5:y :drawMaterials:y 15                     Display.mnd: y -= ROW_HEIGHT;
  466:  set :drawMaterials:y :drawItem.5:y                           Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  467:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  468:  jump *label150 lessThanEq :drawMaterials:count 0             ...
        label *label436                                              Display.mnd: if target > 0 then
  469:  set :drawMaterials:target.1 .targetThorium                   Display.mnd: for var item, target in
  470:  jump *label452 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  471:  sensor *tmp313 .core @thorium                                Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  472:  op mul *tmp318 122 *tmp313                                   Display.mnd: var length = min(barLength, barLength * current / target);
  473:  op div *tmp319 *tmp318 :drawMaterials:target.1               ...
  474:  op min :drawItem.5:length 122 *tmp319                        ...
  475:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  476:  op add *tmp330 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  477:  draw image 11 *tmp330 @thorium 16 0 0                        ...
  478:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  479:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  480:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  481:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  482:  op add *tmp332 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  483:  print :drawMaterials:target.1                                Display.mnd: print(text);
  484:  draw print 170 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  485:  print :drawMaterials:target.1                                Display.mnd: print(text);
  486:  draw print 171 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
        label *label452                                              Display.mnd: if target > 0 then
        label *label150                                              Display.mnd: for var item, target in
        label *label146                                              Display.mnd: if count then
        label *label127                                              Display.mnd: elsif nextBlock == @titanium or nextBlock == @ore-titanium then
        label *label67                                               Display.mnd: if nextBlock == null then
  487:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  488:  select *tmp339 lessThan .materialCount 4 40 25               Display.mnd: var y = materialCount < 4 ? HEADER3_Y : HEADER4_Y;
  489:  print "Builder"                                              Display.mnd: print(text);
  490:  draw print 22 *tmp339 @bottomLeft                            Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  491:  print "Builder"                                              Display.mnd: print(text);
  492:  draw print 23 *tmp339 @bottomLeft                            Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  493:  jump *label178 notEqual .transportItem null                  Display.mnd: if transportItem == null then
  494:  op sub *tmp343 *tmp339 15                                    Display.mnd: drawUnit(@poly, 0, in y - ROW_HEIGHT);
  495:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  496:  op sub *tmp360 *tmp339 10                                    Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  497:  draw image 11 *tmp360 @poly 16 0 0                           ...
  498:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  499:  draw rect 22 *tmp343 0 10 0 0                                Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  500:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  501:  draw lineRect 22 *tmp343 122 10 0 0                          Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  502:  op sub *tmp362 *tmp339 8                                     Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  503:  print .transportTarget                                       Display.mnd: print(text);
  504:  draw print 170 *tmp362 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  505:  print .transportTarget                                       Display.mnd: print(text);
  506:  draw print 171 *tmp362 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  507:  jump *label179 always 0 0                                    Display.mnd: if transportItem == null then
        label *label178                                              ...
  508:  sensor :drawUnit:unitItem @unit @firstItem                   Display.mnd: var unitItem = @unit.@firstItem;
  509:  sensor *tmp369 @unit @totalItems                             Display.mnd: drawUnit(transportItem, @unit.@totalItems * (unitItem == transportItem), in y - ROW_HEIGHT);
  510:  op equal *tmp370 :drawUnit:unitItem .transportItem           ...
  511:  op mul *tmp371 *tmp369 *tmp370                               ...
  512:  op sub *tmp372 *tmp339 15                                    ...
  513:  set :drawUnit.2:item .transportItem                          ...
  514:  set :drawItem.7:target .transportTarget                      Display.mnd: drawItem(in 0, in out y, 1, item, items, transportTarget, transportTarget);
  515:  op mul *tmp377 122 *tmp371                                   Display.mnd: var length = min(barLength, barLength * current / target);
  516:  op div *tmp378 *tmp377 :drawItem.7:target                    ...
  517:  op min :drawItem.7:length 122 *tmp378                        ...
  518:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  519:  op sub *tmp389 *tmp339 10                                    Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  520:  draw image 11 *tmp389 :drawUnit.2:item 16 0 0                ...
  521:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  522:  draw rect 22 *tmp372 :drawItem.7:length 10 0 0               Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  523:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  524:  draw lineRect 22 *tmp372 122 10 0 0                          Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  525:  op sub *tmp391 *tmp339 8                                     Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  526:  print .transportTarget                                       Display.mnd: print(text);
  527:  draw print 170 *tmp391 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  528:  print .transportTarget                                       Display.mnd: print(text);
  529:  draw print 171 *tmp391 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
        label *label179                                              Display.mnd: if transportItem == null then
  530:  set :drawUnits:x 170                                         Display.mnd: var x = 170;
  531:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  532:  set :drawUnitCount:count .polys                              Display.mnd: drawUnitCount(@poly, polys, ref x);
  533:  jump *label200 lessThanEq :drawUnitCount:count 0             Display.mnd: if count > 0 then
  534:  draw image 150 127 @poly 12 0 0                              Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  535:  print "x"                                                    Display.mnd: print(text);
  536:  print :drawUnitCount:count                                   ...
  537:  draw print 170 129 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  538:  op sub :drawUnits:x 170 30                                   Display.mnd: x -= 30;
        label *label200                                              Display.mnd: if count > 0 then
  539:  set :drawUnitCount.1:count .monos                            Display.mnd: drawUnitCount(@mono, monos, ref x);
  540:  jump *label205 lessThanEq :drawUnitCount.1:count 0           Display.mnd: if count > 0 then
  541:  op sub *tmp402 :drawUnits:x 20                               Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  542:  draw image *tmp402 127 @mono 12 0 0                          ...
  543:  print "x"                                                    Display.mnd: print(text);
  544:  print :drawUnitCount.1:count                                 ...
  545:  draw print :drawUnits:x 129 @right                           Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  546:  op sub :drawUnits:x :drawUnits:x 30                          Display.mnd: x -= 30;
        label *label205                                              Display.mnd: if count > 0 then
  547:  set :drawUnitCount.2:count .flares                           Display.mnd: drawUnitCount(@flare, flares, ref x);
  548:  jump *label210 lessThanEq :drawUnitCount.2:count 0           Display.mnd: if count > 0 then
  549:  op sub *tmp405 :drawUnits:x 20                               Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  550:  draw image *tmp405 127 @flare 12 0 0                         ...
  551:  print "x"                                                    Display.mnd: print(text);
  552:  print :drawUnitCount.2:count                                 ...
  553:  draw print :drawUnits:x 129 @right                           Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
        label *label210                                              Display.mnd: if count > 0 then
  554:  drawflush display1                                           Display.mnd: drawflush(display1);
  555:  jump *label31 always 0 0                                     Display.mnd: elsif page == 0 then
        label *label30                                               ...
  556:  jump *label214 notEqual .page 1                              Display.mnd: elsif page == 1 then
  557:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  558:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  559:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  560:  print "Base map"                                             Display.mnd: print(text);
  561:  draw print 172 172 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  562:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  563:  draw translate 88 88 0 0 0 0                                 Display.mnd: translate(176 / 2, 176 / 2);
  564:  draw scale 5.866666666666666 5.866666666666666 0 0 0 0       Display.mnd: scale(176 / 15 / 2, 176 / 15 / 2);
  565:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  566:  draw image 0 0 @core-shard 6 0 0                             Display.mnd: image(0, 0, @core-shard, 6, 0);
  567:  set :displayBaseMap:cfg "AJEMJK-graphite-press1"             Display.mnd: for var cfg in BLOCKS do
  568:  setaddr *tmp408 *label222                                    ...
  569:  jump *label219 always 0 0                                    ...
        multilabel *label222                                         ...
  570:  set :displayBaseMap:cfg "AJTJL-battery2"                    ...
  571:  setaddr *tmp408 *label223                                    ...
  572:  jump *label219 always 0 0                                    ...
        multilabel *label223                                         ...
  573:  set :displayBaseMap:cfg "ALTJM-battery3"                    ...
  574:  setaddr *tmp408 *label224                                    ...
  575:  jump *label219 always 0 0                                    ...
        multilabel *label224                                         ...
  576:  set :displayBaseMap:cfg "AJRJN-combustion-generator4"       ...
  577:  setaddr *tmp408 *label225                                    ...
  578:  jump *label219 always 0 0                                    ...
        multilabel *label225                                         ...
  579:  set :displayBaseMap:cfg "ALMQJO-silicon-smelter5"            ...
  580:  setaddr *tmp408 *label226                                    ...
  581:  jump *label219 always 0 0                                    ...
        multilabel *label226                                         ...
  582:  set :displayBaseMap:cfg "A{LNJP-inverted-sorter6"            ...
  583:  setaddr *tmp408 *label227                                    ...
  584:  jump *label219 always 0 0                                    ...
        multilabel *label227                                         ...
  585:  set :displayBaseMap:cfg "AJJJJ-pneumatic-drill0"            ...
  586:  setaddr *tmp408 *label228                                    ...
  587:  jump *label219 always 0 0                                    ...
        multilabel *label228                                         ...
  588:  set :displayBaseMap:cfg "A©JNJQ-unloader7"                   ...
  589:  setaddr *tmp408 *label229                                    ...
  590:  jump *label219 always 0 0                                    ...
        multilabel *label229                                         ...
  591:  set :displayBaseMap:cfg "A{HNJR-inverted-sorter8"            ...
  592:  setaddr *tmp408 *label230                                    ...
  593:  jump *label219 always 0 0                                    ...
        multilabel *label230                                         ...
  594:  set :displayBaseMap:cfg "A~JPJS-overflow-gate9"              ...
  595:  setaddr *tmp408 *label231                                    ...
  596:  jump *label219 always 0 0                                    ...
        multilabel *label231                                         ...
  597:  set :displayBaseMap:cfg "AÕFFJT-micro-processor10"           ...
  598:  setaddr *tmp408 *label232                                    ...
  599:  jump *label219 always 0 0                                    ...
        multilabel *label232                                         ...
  600:  set :displayBaseMap:cfg "AFJJU-power-node11"                ...
  601:  setaddr *tmp408 *label233                                    ...
  602:  jump *label219 always 0 0                                    ...
        multilabel *label233                                         ...
  603:  set :displayBaseMap:cfg "A©FHJV-unloader12"                  ...
  604:  setaddr *tmp408 *label234                                    ...
  605:  jump *label219 always 0 0                                    ...
        multilabel *label234                                         ...
  606:  set :displayBaseMap:cfg "A¾BHMW-air-factory13"               ...
  607:  setaddr *tmp408 *label235                                    ...
  608:  jump *label219 always 0 0                                    ...
        multilabel *label235                                         ...
  609:  set :displayBaseMap:cfg "A©NHJX-unloader14"                  ...
  610:  setaddr *tmp408 *label236                                    ...
  611:  jump *label219 always 0 0                                    ...
        multilabel *label236                                         ...
  612:  set :displayBaseMap:cfg "A{NJJY-inverted-sorter15"           ...
  613:  setaddr *tmp408 *label237                                    ...
  614:  jump *label219 always 0 0                                    ...
        multilabel *label237                                         ...
  615:  set :displayBaseMap:cfg "ANOMJZ-kiln16"                      ...
  616:  setaddr *tmp408 *label238                                    ...
  617:  jump *label219 always 0 0                                    ...
        multilabel *label238                                         ...
  618:  set :displayBaseMap:cfg "A¡ASJ[-water-extractor17"           ...
  619:  setaddr *tmp408 *label239                                    ...
  620:  jump *label219 always 0 0                                    ...
        multilabel *label239                                         ...
  621:  set :displayBaseMap:cfg "A©BLJ\-unloader18"                  ...
  622:  setaddr *tmp408 *label240                                    ...
  623:  jump *label219 always 0 0                                    ...
        multilabel *label240                                         ...
  624:  set :displayBaseMap:cfg "AAOJ]-steam-generator19"           ...
  625:  setaddr *tmp408 *label241                                    ...
  626:  jump *label219 always 0 0                                    ...
        multilabel *label241                                         ...
  627:  set :displayBaseMap:cfg "AKFRJ^-multi-press20"               ...
  628:  setaddr *tmp408 *label242                                    ...
  629:  jump *label219 always 0 0                                    ...
        multilabel *label242                                         ...
  630:  set :displayBaseMap:cfg "AÇBBJ_-payload-router21"            ...
  631:  setaddr *tmp408 *label243                                    ...
  632:  jump *label219 always 0 0                                    ...
        multilabel *label243                                         ...
  633:  set :displayBaseMap:cfg "A©HFJ`-unloader22"                  ...
  634:  setaddr *tmp408 *label244                                    ...
  635:  jump *label219 always 0 0                                    ...
        multilabel *label244                                         ...
  636:  set :displayBaseMap:cfg "AÀHBJa-additive-reconstructor23"    ...
  637:  setaddr *tmp408 *label245                                    ...
  638:  jump *label219 always 0 0                                    ...
        multilabel *label245                                         ...
  639:  set :displayBaseMap:cfg "AJJJJ-laser-drill0"                ...
  640:  setaddr *tmp408 *label246                                    ...
  641:  jump *label219 always 0 0                                    ...
        multilabel *label246                                         ...
  642:  set :displayBaseMap:cfg "AJJJJ-solar-panel0"                ...
  643:  setaddr *tmp408 *label247                                    ...
  644:  jump *label219 always 0 0                                    ...
        multilabel *label247                                         ...
  645:  set :displayBaseMap:cfg "A¨JJJJ-container0"                  ...
  646:  setaddr *tmp408 *label248                                    ...
  647:  jump *label219 always 0 0                                    ...
        multilabel *label248                                         ...
  648:  set :displayBaseMap:cfg "ALSIJb-silicon-smelter24"           ...
  649:  setaddr *tmp408 *label249                                    ...
  650:  jump *label219 always 0 0                                    ...
        multilabel *label249                                         ...
  651:  set :displayBaseMap:cfg "A{PJJc-inverted-sorter25"           ...
  652:  setaddr *tmp408 *label250                                    ...
  653:  jump *label219 always 0 0                                    ...
        multilabel *label250                                         ...
  654:  set :displayBaseMap:cfg "A{PHJd-inverted-sorter26"           ...
  655:  setaddr *tmp408 *label251                                    ...
  656:  jump *label219 always 0 0                                    ...
        multilabel *label251                                         ...
  657:  set :displayBaseMap:cfg "A©JFJe-unloader27"                  ...
  658:  setaddr *tmp408 *label252                                    ...
  659:  jump *label219 always 0 0                                    ...
        multilabel *label252                                         ...
  660:  set :displayBaseMap:cfg "AÁPBJf-multiplicative-reconstructor ...
  661:  setaddr *tmp408 *label253                                    ...
        label *label219                                              ...
  662:  read *tmp462 :displayBaseMap:cfg 1                           Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  663:  op sub *tmp463 *tmp462 74                                    ...
  664:  lookup block :unpackCfg:type *tmp463                         ...
  665:  read *tmp466 :displayBaseMap:cfg 2                           Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  666:  op sub *tmp467 *tmp466 74                                    ...
  667:  op div :unpackCfg:x *tmp467 2                                ...
  668:  read *tmp470 :displayBaseMap:cfg 3                           Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  669:  op sub *tmp471 *tmp470 74                                    ...
  670:  op div :unpackCfg:y *tmp471 2                                ...
  671:  read *tmp474 :displayBaseMap:cfg 4                           Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  672:  op sub :unpackCfg:rotation *tmp474 74                        ...
  673:  read *tmp477 :displayBaseMap:cfg 5                           Common.mnd: ind = char(cfg, index++) - _Common_offset;
  674:  op sub :unpackCfg:ind *tmp477 74                             ...
  675:  sensor :unpackCfg:size :unpackCfg:type @size                 Common.mnd: size = type.@size;
  676:  op or *tmp487 :unpackCfg:x :unpackCfg:y                      Display.mnd: if x | y then
  677:  jump *label305 equal *tmp487 false                           ...
  678:  op shl *tmp489 1 :unpackCfg:ind                              Display.mnd: if blocksBuilt & (1 << index) then
  679:  op and *tmp490 .blocksBuilt *tmp489                          ...
  680:  jump *label303 equal *tmp490 false                           ...
  681:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  682:  jump *label304 always 0 0                                    Display.mnd: if blocksBuilt & (1 << index) then
        label *label303                                              ...
  683:  draw color 128 255 128 128 0 0                               Display.mnd: color(128, 255, 128, 128);
        label *label304                                              Display.mnd: if blocksBuilt & (1 << index) then
  684:  op mul *tmp492 2 :unpackCfg:x                                Display.mnd: image(2 * x, 2 * y, type, 2 * size, 90 * rotation);
  685:  op mul *tmp493 2 :unpackCfg:y                                ...
  686:  op mul *tmp494 2 :unpackCfg:size                             ...
  687:  op mul *tmp495 90 :unpackCfg:rotation                        ...
  688:  draw image *tmp492 *tmp493 :unpackCfg:type *tmp494 *tmp495 0 ...
        label *label305                                              Display.mnd: if x | y then
  689:  set :displayBaseMap:i .recentBuildIndex                      Display.mnd: var i = recentBuildIndex;
  690:  jump *label255 lessThan :displayBaseMap:i 0                  Display.mnd: if i >= 0 then
  691:  set .recentBuildIndex -1                                     Display.mnd: recentBuildIndex = -1;
  692:  op mul *tmp905 :displayBaseMap:i 2                           Display.mnd: drawBlock(BLOCKS[i]);
  693:  multijump *label459 *tmp905 0                                ...
        multilabel *label459                                         ...
  694:  set :drawBlock:cfg "AJEMJK-graphite-press1"                  ...
  695:  jump *label458 always 0 0                                    ...
        multilabel *label460                                         ...
  696:  set :drawBlock:cfg "AJTJL-battery2"                         ...
  697:  jump *label458 always 0 0                                    ...
        multilabel *label461                                         ...
  698:  set :drawBlock:cfg "ALTJM-battery3"                         ...
  699:  jump *label458 always 0 0                                    ...
        multilabel *label462                                         ...
  700:  set :drawBlock:cfg "AJRJN-combustion-generator4"            ...
  701:  jump *label458 always 0 0                                    ...
        multilabel *label463                                         ...
  702:  set :drawBlock:cfg "ALMQJO-silicon-smelter5"                 ...
  703:  jump *label458 always 0 0                                    ...
        multilabel *label464                                         ...
  704:  set :drawBlock:cfg "A{LNJP-inverted-sorter6"                 ...
  705:  jump *label458 always 0 0                                    ...
        multilabel *label465                                         ...
  706:  set :drawBlock:cfg "AJJJJ-pneumatic-drill0"                 ...
  707:  jump *label458 always 0 0                                    ...
        multilabel *label466                                         ...
  708:  set :drawBlock:cfg "A©JNJQ-unloader7"                        ...
  709:  jump *label458 always 0 0                                    ...
        multilabel *label467                                         ...
  710:  set :drawBlock:cfg "A{HNJR-inverted-sorter8"                 ...
  711:  jump *label458 always 0 0                                    ...
        multilabel *label468                                         ...
  712:  set :drawBlock:cfg "A~JPJS-overflow-gate9"                   ...
  713:  jump *label458 always 0 0                                    ...
        multilabel *label469                                         ...
  714:  set :drawBlock:cfg "AÕFFJT-micro-processor10"                ...
  715:  jump *label458 always 0 0                                    ...
        multilabel *label470                                         ...
  716:  set :drawBlock:cfg "AFJJU-power-node11"                     ...
  717:  jump *label458 always 0 0                                    ...
        multilabel *label471                                         ...
  718:  set :drawBlock:cfg "A©FHJV-unloader12"                       ...
  719:  jump *label458 always 0 0                                    ...
        multilabel *label472                                         ...
  720:  set :drawBlock:cfg "A¾BHMW-air-factory13"                    ...
  721:  jump *label458 always 0 0                                    ...
        multilabel *label473                                         ...
  722:  set :drawBlock:cfg "A©NHJX-unloader14"                       ...
  723:  jump *label458 always 0 0                                    ...
        multilabel *label474                                         ...
  724:  set :drawBlock:cfg "A{NJJY-inverted-sorter15"                ...
  725:  jump *label458 always 0 0                                    ...
        multilabel *label475                                         ...
  726:  set :drawBlock:cfg "ANOMJZ-kiln16"                           ...
  727:  jump *label458 always 0 0                                    ...
        multilabel *label476                                         ...
  728:  set :drawBlock:cfg "A¡ASJ[-water-extractor17"                ...
  729:  jump *label458 always 0 0                                    ...
        multilabel *label477                                         ...
  730:  set :drawBlock:cfg "A©BLJ\-unloader18"                       ...
  731:  jump *label458 always 0 0                                    ...
        multilabel *label478                                         ...
  732:  set :drawBlock:cfg "AAOJ]-steam-generator19"                ...
  733:  jump *label458 always 0 0                                    ...
        multilabel *label479                                         ...
  734:  set :drawBlock:cfg "AKFRJ^-multi-press20"                    ...
  735:  jump *label458 always 0 0                                    ...
        multilabel *label480                                         ...
  736:  set :drawBlock:cfg "AÇBBJ_-payload-router21"                 ...
  737:  jump *label458 always 0 0                                    ...
        multilabel *label481                                         ...
  738:  set :drawBlock:cfg "A©HFJ`-unloader22"                       ...
  739:  jump *label458 always 0 0                                    ...
        multilabel *label482                                         ...
  740:  set :drawBlock:cfg "AÀHBJa-additive-reconstructor23"         ...
  741:  jump *label458 always 0 0                                    ...
        multilabel *label483                                         ...
  742:  set :drawBlock:cfg "AJJJJ-laser-drill0"                     ...
  743:  jump *label458 always 0 0                                    ...
        multilabel *label484                                         ...
  744:  set :drawBlock:cfg "AJJJJ-solar-panel0"                     ...
  745:  jump *label458 always 0 0                                    ...
        multilabel *label485                                         ...
  746:  set :drawBlock:cfg "A¨JJJJ-container0"                       ...
  747:  jump *label458 always 0 0                                    ...
        multilabel *label486                                         ...
  748:  set :drawBlock:cfg "ALSIJb-silicon-smelter24"                ...
  749:  jump *label458 always 0 0                                    ...
        multilabel *label487                                         ...
  750:  set :drawBlock:cfg "A{PJJc-inverted-sorter25"                ...
  751:  jump *label458 always 0 0                                    ...
        multilabel *label488                                         ...
  752:  set :drawBlock:cfg "A{PHJd-inverted-sorter26"                ...
  753:  jump *label458 always 0 0                                    ...
        multilabel *label489                                         ...
  754:  set :drawBlock:cfg "A©JFJe-unloader27"                       ...
  755:  jump *label458 always 0 0                                    ...
        multilabel *label490                                         ...
  756:  set :drawBlock:cfg "AÁPBJf-multiplicative-reconstructor28"   ...
        label *label458                                              ...
  757:  read *tmp462 :drawBlock:cfg 1                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  758:  op sub *tmp463 *tmp462 74                                    ...
  759:  lookup block :unpackCfg:type *tmp463                         ...
  760:  read *tmp466 :drawBlock:cfg 2                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  761:  op sub *tmp467 *tmp466 74                                    ...
  762:  op div :unpackCfg:x *tmp467 2                                ...
  763:  read *tmp470 :drawBlock:cfg 3                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  764:  op sub *tmp471 *tmp470 74                                    ...
  765:  op div :unpackCfg:y *tmp471 2                                ...
  766:  read *tmp474 :drawBlock:cfg 4                                Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  767:  op sub :unpackCfg:rotation *tmp474 74                        ...
  768:  read *tmp477 :drawBlock:cfg 5                                Common.mnd: ind = char(cfg, index++) - _Common_offset;
  769:  op sub :unpackCfg:ind *tmp477 74                             ...
  770:  sensor :unpackCfg:size :unpackCfg:type @size                 Common.mnd: size = type.@size;
  771:  op or *tmp487 :unpackCfg:x :unpackCfg:y                      Display.mnd: if x | y then
  772:  jump *label313 equal *tmp487 false                           ...
  773:  op shl *tmp489 1 :unpackCfg:ind                              Display.mnd: if blocksBuilt & (1 << index) then
  774:  op and *tmp490 .blocksBuilt *tmp489                          ...
  775:  jump *label311 equal *tmp490 false                           ...
  776:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  777:  jump *label312 always 0 0                                    Display.mnd: if blocksBuilt & (1 << index) then
        label *label311                                              ...
  778:  draw color 128 255 128 128 0 0                               Display.mnd: color(128, 255, 128, 128);
        label *label312                                              Display.mnd: if blocksBuilt & (1 << index) then
  779:  op mul *tmp492 2 :unpackCfg:x                                Display.mnd: image(2 * x, 2 * y, type, 2 * size, 90 * rotation);
  780:  op mul *tmp493 2 :unpackCfg:y                                ...
  781:  op mul *tmp494 2 :unpackCfg:size                             ...
  782:  op mul *tmp495 90 :unpackCfg:rotation                        ...
  783:  draw image *tmp492 *tmp493 :unpackCfg:type *tmp494 *tmp495 0 ...
        label *label313                                              Display.mnd: if x | y then
        label *label255                                              Display.mnd: if i >= 0 then
  784:  sensor *tmp413 switch1 @enabled                              Display.mnd: if switch1.enabled then
  785:  jump *label258 equal *tmp413 false                           ...
  786:  drawflush display1                                           Display.mnd: drawflush(display1);
  787:  jump *label221 always 0 0                                    Display.mnd: break;
        label *label258                                              Display.mnd: if switch1.enabled then
  788:  jump *label260 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  789:  drawflush display1                                           Display.mnd: drawflush(display1);
        label *label260                                              Display.mnd: if pageSwitched then
  790:  multijump *tmp408 0 0                                        Display.mnd: for var cfg in BLOCKS do
        multilabel *label253                                         ...
        label *label221                                              ...
  791:  drawflush display1                                           Display.mnd: drawflush(display1);
  792:  jump *label215 always 0 0                                    Display.mnd: elsif page == 1 then
        label *label214                                              ...
  793:  op sub :displayLog:page .page 2                              Display.mnd: displayLog(page - 2);
  794:  set :displayLog:x 11                                         Display.mnd: var x = 3 + 8;
  795:  set :displayLog:y 163                                        Display.mnd: var y = 176 - 5 - 8;
  796:  read :displayLog:logPosition bank1 511                       Display.mnd: var logPosition = bank1[511];
  797:  op sub *tmp419 510 :displayLog:logPosition                   Display.mnd: var pages = max(1, (records - 1) \ 32 + 1);
  798:  op idiv *tmp420 *tmp419 32                                   ...
  799:  op add *tmp421 *tmp420 1                                     ...
  800:  op max :displayLog:pages 1 *tmp421                           ...
  801:  op add .numPages :displayLog:pages 2                         Display.mnd: numPages = pages + 2;
  802:  op mul *tmp424 32 :displayLog:page                           Display.mnd: var start = 511 - 32 * page;
  803:  op sub :displayLog:start 511 *tmp424                         ...
  804:  op sub *tmp426 :displayLog:start 32                          Display.mnd: var stop = max(logPosition, start - 32);
  805:  op max :displayLog:stop :displayLog:logPosition *tmp426      ...
  806:  draw col %[lightgray] 0 0 0 0 0                              Display.mnd: col(%[lightgray]);
  807:  op sub *tmp428 .page 1                                       Display.mnd: print(page + 1, "/");
  808:  print *tmp428                                                ...
  809:  print "/"                                                    ...
  810:  print :displayLog:pages                                      Display.mnd: print(text);
  811:  draw print 172 4 @bottomRight                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  812:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  813:  op sub :displayLog:position :displayLog:start 1              Display.mnd: for var position in stop ... start descending do
  814:  jump *label267 lessThan :displayLog:position :displayLog:sto ...
        label *label299                                              ...
  815:  read :displayLog:record bank1 :displayLog:position           Display.mnd: var record = bank1[position];
  816:  op mod :displayRecord:id :displayLog:record 1000             Display.mnd: var id = record % 1000;
  817:  lookup block *tmp434 :displayRecord:id                       Display.mnd: var icon = id > @blockCount ? lookup(:unit, id - @blockCount) : lookup(:block, id);
  818:  jump *label270 lessThanEq :displayRecord:id @blockCount      ...
  819:  op sub *tmp435 :displayRecord:id @blockCount                 ...
  820:  lookup unit *tmp434 *tmp435                                  ...
        label *label270                                              ...
  821:  op div *tmp438 :displayLog:record 1000                       Display.mnd: var t = floor(record / 1000 / 120);
  822:  op idiv :displayRecord:t *tmp438 120                         ...
  823:  op idiv :displayRecord:m :displayRecord:t 60                 Display.mnd: var m = t \ 60;
  824:  op mod :displayRecord:s :displayRecord:t 60                  Display.mnd: var s = t % 60;
  825:  select *tmp444 lessThan :displayRecord:s 10 "0" ""           Display.mnd: print(m, ":", s < 10 ? "0" : "");
  826:  print :displayRecord:m                                       ...
  827:  print ":"                                                    ...
  828:  print *tmp444                                                ...
  829:  draw image :displayLog:x :displayLog:y *tmp434 14 0 0        Display.mnd: image(x, y, image, 14, 0);
  830:  op add *tmp446 :displayLog:x 44                              Display.mnd: drawText(x + 56 - 12, y + 2, @right, text);
  831:  op add *tmp447 :displayLog:y 2                               ...
  832:  print :displayRecord:s                                       Display.mnd: print(text);
  833:  draw print *tmp446 *tmp447 @right                            Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  834:  op sub :displayLog:y :displayLog:y 15                        Display.mnd: y -= 15;
  835:  jump *label276 greaterThanEq :displayLog:y 10                Display.mnd: if y < 10 then
  836:  op add :displayLog:x :displayLog:x 58                        Display.mnd: x += 58;
  837:  set :displayLog:y 164                                        Display.mnd: y = 176 - 4 - 8;
        label *label276                                              Display.mnd: if y < 10 then
  838:  drawflush display1                                           Display.mnd: drawflush(display1);
  839:  sensor *tmp450 switch1 @enabled                              Display.mnd: if switch1.enabled then break; end;
  840:  jump *label267 notEqual *tmp450 false                        ...
  841:  op sub :displayLog:position :displayLog:position 1           Display.mnd: for var position in stop ... start descending do
  842:  jump *label299 greaterThanEq :displayLog:position :displayLo ...
        label *label267                                              ...
        label *label215                                              Display.mnd: elsif page == 1 then
        label *label31                                               Display.mnd: elsif page == 0 then
        label *label19                                               Display.mnd: if page == -1 then
  843:  jump *label280 lessThanEq .megas 0                           Display.mnd: if megas > 0 then
  844:  print "[gold]All done.[]\nNothing more to see here.\nGo home Display.mnd: println("[gold]All done.[]\nNothing more to see here.\nGo home.");
  845:  printflush message1                                          Display.mnd: printflush(message1);
  846:  jump *label281 always 0 0                                    Display.mnd: if megas > 0 then
        label *label280                                              ...
  847:  print "[gold]Building {0}\n================================= Display.mnd: println($"[gold]Building $nextBlock");
  848:  format .nextBlock                                            ...
  849:  format .status1                                              Display.mnd: println(status1);
  850:  format .status2                                              Display.mnd: println($"$status2$item2 ($block2)");
  851:  format .item2                                                ...
  852:  format .block2                                               ...
  853:  format .status3                                              Display.mnd: println(status3);
  854:  printflush message1                                          Display.mnd: printflush(message1);
        label *label281                                              Display.mnd: if megas > 0 then
  855:  sensor .pageSwitched switch1 @enabled                        Display.mnd: pageSwitched = switch1.enabled;
  856:  jump *label13 equal .pageSwitched false                      Display.mnd: if pageSwitched then
  857:  control enabled switch1 false 0 0 0                          Display.mnd: switch1.enabled = false;
  858:  op add *tmp459 .page 1                                       Display.mnd: page = (page + 1) % numPages;
  859:  op mod .page *tmp459 .numPages                               ...
  860:  drawflush null                                               Display.mnd: drawflush(null);
  861:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  862:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  863:  jump *label13 always 0 0                                     Display.mnd: while true do


Performance: parsed in 902 ms, compiled in 560 ms, optimized in 3,353 ms, run in 6 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (1 steps):
The program didn't generate any output.
Execution exception at instruction 0: read *tmp39 processor3 "*signature":
Variable 'processor3' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
