  1637 instructions before optimizations.
   137 instructions eliminated by Temp Variables Elimination (2 passes, 8 iterations).
   127 instructions eliminated by Dead Code Elimination (7 iterations).
C:\Home\golem\jam-202507\Display.mnd:13:5 Variable 'coreX' is not used.
C:\Home\golem\jam-202507\Display.mnd:13:16 Variable 'coreY' is not used.
C:\Home\golem\jam-202507\Display.mnd:391:5 Variable 'mapw' is not used.
C:\Home\golem\jam-202507\Display.mnd:391:19 Variable 'maph' is not used.
C:\Home\golem\jam-202507\Display.mnd:477:9 Variable 'displayStorage.head' is not used.
C:\Home\golem\jam-202507\Display.mnd:497:13 Variable 'displayStorage.item' is not used.
     3 instructions eliminated by Jump Normalization (2 passes, 7 iterations).
    41 instructions eliminated by Jump Optimization (7 iterations).
    32 instructions eliminated by Single Step Elimination (3 passes, 10 iterations).
     2 instructions eliminated by Expression Optimization (2 passes, 5 iterations).
    21 instructions eliminated by If Expression Optimization (6 iterations).
   549 instructions eliminated by Data Flow Optimization (6 passes, 25 iterations).
     1 instructions modified by Loop Optimization (5 iterations).
     1 loops improved by Loop Optimization.
    69 instructions added by Loop Unrolling (10 iterations).
     3 loops unrolled by Loop Unrolling.
    21 instructions added by Function Inlining (10 iterations).
     2 function calls inlined by Function Inlining.
     1 jump tables inlined by Array Optimization.
     3 instructions eliminated by Jump Straightening (7 iterations).
     7 instructions updated by Jump Threading.
     3 instructions eliminated by Unreachable Code Elimination (2 iterations).
    13 instructions eliminated by Print Merging.
   794 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 210):
    Unroll iteration loop at Display.mnd:235:13                  size   +49, benefit       14.1, efficiency      0.287
    Unroll iteration loop at Display.mnd:253:13                  size  +190, benefit       26.6, efficiency      0.140
  * Unroll iteration loop at Display.mnd:484:9                   size   -17, benefit      109.4, efficiency   Infinity (-21 instructions)
    Unroll iteration loop at Display.mnd:497:5                   size   +37, benefit      218.8, efficiency      5.912
  ! Unroll iteration loop at Display.mnd:455:5                   size  +407, benefit      359.4, efficiency      0.883
    Inline function 'drawBlock' defined at Display.mnd:427:1     size   +25, benefit      410.2, efficiency     16.406
    Inline function call at Display.mnd:456:9                    size   +26, benefit      273.4, efficiency     10.517
    Inline function call at Display.mnd:460:13                   size   +26, benefit      136.7, efficiency      5.258
    Inline read jump table of array 'BLOCKS'                     size    -3, benefit       78.1, efficiency   Infinity
    Inline 'BLOCKS' read access at Display.mnd:460:23            size   +55, benefit       78.1, efficiency      1.420

Pass 1: speed optimization selection (cost limit 231):
    Unroll iteration loop at Display.mnd:235:13                  size   +49, benefit       14.1, efficiency      0.287
    Unroll iteration loop at Display.mnd:253:13                  size  +190, benefit       26.6, efficiency      0.140
    Unroll iteration loop at Display.mnd:497:5                   size   +37, benefit      218.8, efficiency      5.912
  ! Unroll iteration loop at Display.mnd:455:5                   size  +407, benefit      359.4, efficiency      0.883
    Inline function 'drawBlock' defined at Display.mnd:427:1     size   +25, benefit      410.2, efficiency     16.406
    Inline function call at Display.mnd:456:9                    size   +26, benefit      273.4, efficiency     10.517
    Inline function call at Display.mnd:460:13                   size   +26, benefit      136.7, efficiency      5.258
  * Inline read jump table of array 'BLOCKS'                     size    -3, benefit       78.1, efficiency   Infinity (-3 instructions)
    Inline 'BLOCKS' read access at Display.mnd:460:23            size   +55, benefit       78.1, efficiency      1.420

Pass 1: speed optimization selection (cost limit 234):
    Unroll iteration loop at Display.mnd:235:13                  size   +49, benefit       14.1, efficiency      0.287
    Unroll iteration loop at Display.mnd:253:13                  size  +190, benefit       26.6, efficiency      0.140
    Unroll iteration loop at Display.mnd:497:5                   size   +37, benefit      218.8, efficiency      5.912
  * Inline function 'drawBlock' defined at Display.mnd:427:1     size   +25, benefit      410.2, efficiency     16.406 (+20 instructions)
    Inline function call at Display.mnd:456:9                    size   +26, benefit      273.4, efficiency     10.517
    Inline function call at Display.mnd:460:13                   size   +26, benefit      136.7, efficiency      5.258

Pass 1: speed optimization selection (cost limit 214):
    Unroll iteration loop at Display.mnd:235:13                  size   +49, benefit       14.1, efficiency      0.287
    Unroll iteration loop at Display.mnd:253:13                  size  +190, benefit       26.6, efficiency      0.140
  * Unroll iteration loop at Display.mnd:497:5                   size   +37, benefit      218.8, efficiency      5.912 (+35 instructions)

Pass 1: speed optimization selection (cost limit 179):
  * Unroll iteration loop at Display.mnd:235:13                  size   +49, benefit       14.1, efficiency      0.287 (-2 instructions)
  ! Unroll iteration loop at Display.mnd:253:13                  size  +190, benefit       26.6, efficiency      0.140

Pass 1: speed optimization selection (cost limit 181):
  ! Unroll iteration loop at Display.mnd:253:13                  size  +190, benefit       26.6, efficiency      0.140

Pass 2: speed optimization selection (cost limit 187):
  ! Unroll iteration loop at Display.mnd:253:13                  size  +190, benefit       26.6, efficiency      0.140

Pass 3: speed optimization selection (cost limit 187):
  ! Unroll iteration loop at Display.mnd:253:13                  size  +190, benefit       26.6, efficiency      0.140

Pass 4: speed optimization selection (cost limit 187):
  ! Unroll iteration loop at Display.mnd:253:13                  size  +190, benefit       26.6, efficiency      0.140

Pass 5: speed optimization selection (cost limit 187):
  ! Unroll iteration loop at Display.mnd:253:13                  size  +190, benefit       26.6, efficiency      0.140

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-91 instructions):
 
     1 read *tmp40 processor3 "*signature"
     2 jump *label7 notEqual *tmp40 "3290b8c661787058:v1"
     3 set .core null
-    * set .coreX 0
-    * set .coreY 0
     4 set .page 0
     5 set .numPages 4
     6 set .recentBuildIndex -1
 
    13 set .polyTarget 0
    14 set .megaTarget 0
    15 set .animation -15
-    * set .mapw @mapw
-    * set .maph @maph
    16 set .pageSwitched false
    17 set *signature "0:v1"
    18 label *label8
 
    25 jump *label11 notEqual *tmp45 false
    26 label *label13
    27 sensor *tmp46 .core @x
-    * set .coreX *tmp46
    28 sensor *tmp47 .core @y
-    * set .coreY *tmp47
    29 printflush null
    30 drawflush null
    31 label *label14
 
    34 set .reconstructorProgress 0
    35 set .factoryProgress .reconstructorProgress
    36 set .unitReset false
-    * set *tmp48 false
    37 jump *label18 always
    38 label *label17
-    * set *tmp48 null
    39 label *label18
    40 op equal *tmp49 .page 0
    41 jump *label19 equal *tmp49 false
 
    45 jump *label24 equal *tmp53 false
    46 draw color 0 0 32 80
    47 draw rect 0 0 176 176
-    * set *tmp54 null
    48 jump *label25 always
    49 label *label24
    50 draw reset
    51 draw clear 0 0 32
-    * set *tmp54 null
    52 label *label25
    53 draw col %[white]
    54 op div *tmp55 .animation 30
 
    87 set :animate:size *tmp68
    88 draw image :animate:x :animate:y @mega :animate:size 0
    89 drawflush display1
-    * set *tmp73 .animation
    90 op add .animation .animation 1
    91 label *label23
    92 set *tmp52 null
 
   127 jump *label36 equal *tmp76 false
   128 draw image 25 139 .nextBlock 25 0
   129 draw image 55 139 .nextUnit 25 0
-    * set *tmp77 null
   130 jump *label37 always
   131 label *label36
   132 op equal *tmp78 :drawHeader:count 1
 
   148 draw image 40 137 @hydrogen 32 *tmp84
   149 set *tmp79 null
   150 label *label39
-    * set *tmp77 *tmp79
   151 label *label37
   152 set :drawHeader:tt @second
   153 read *tmp0 processor1 "time"
 
   212 op mul *tmp102 7 :drawHeader:len
   213 op sub *tmp103 *tmp101 *tmp102
   214 draw image *tmp103 146 @titanium 12 0
-    * set *tmp96 null
   215 jump *label47 always
   216 label *label46
-    * set *tmp96 null
   217 label *label47
   218 jump *label50 equal .thoriumContainer false
   219 sensor *tmp105 .thoriumContainer @thorium
 
   237 op mul *tmp109 7 :drawHeader:len.1
   238 op sub *tmp110 *tmp108 *tmp109
   239 draw image *tmp110 146 @thorium 12 0
-    * set *tmp104 null
   240 jump *label51 always
   241 label *label50
-    * set *tmp104 null
   242 label *label51
   243 label *label30
   244 set :drawMaterials:col 0
 
   266 set :drawMaterials:unit1 *tmp122
   267 set :drawMaterials:unit3 null
   268 set :drawMaterials:unit2 :drawMaterials:unit3
-    * set *tmp119 :drawMaterials:unit2
   269 jump *label58 always
   270 label *label57
   271 op equal *tmp123 .nextUnit @flare
 
   330 label *label62
   331 set *tmp124 *tmp129
   332 label *label60
-    * set *tmp119 *tmp124
   333 label *label58
   334 set :drawBold.1:x 22
   335 set :drawBold.1:y 105
 
   429 jump *label78 equal *tmp168 false
   430 set :drawItem:col 0
   431 op sub :drawItem:y :drawItem:y 15
-    * set *tmp169 :drawItem:y
   432 jump *label79 always
   433 label *label78
-    * set *tmp169 null
   434 label *label79
   435 label *label72
   436 op notEqual *tmp170 :drawMaterials:unit2 null
 
   506 jump *label88 equal *tmp192 false
   507 set :drawItem.1:col 0
   508 op sub :drawItem.1:y :drawItem.1:y 15
-    * set *tmp193 :drawItem.1:y
   509 jump *label89 always
   510 label *label88
-    * set *tmp193 null
   511 label *label89
   512 label *label82
   513 op notEqual *tmp194 :drawMaterials:unit3 null
 
   585 jump *label98 equal *tmp218 false
   586 set :drawItem.2:col 0
   587 op sub :drawItem.2:y :drawItem.2:y 15
-    * set *tmp219 :drawItem.2:y
   588 jump *label99 always
   589 label *label98
-    * set *tmp219 null
   590 label *label99
   591 label *label92
   592 set *tmp195 null
 
   681 jump *label113 equal *tmp244 false
   682 set :drawItem.3:col 0
   683 op sub :drawItem.3:y :drawItem.3:y 15
-    * set *tmp245 :drawItem.3:y
   684 jump *label114 always
   685 label *label113
-    * set *tmp245 null
   686 label *label114
   687 label *label107
   688 set :drawMaterials:col :drawItem.3:col
   689 set :drawMaterials:y :drawItem.3:y
-    * set *tmp222 null
   690 jump *label106 always
   691 label *label105
-    * set *tmp222 null
   692 label *label106
   693 label *label101
   694 multijump *tmp220 0 0 (m:marker0)
 
   696 label *label102
   697 set *tmp147 null
   698 label *label71
-    * set *tmp112 *tmp147
   699 jump *label56 always
   700 label *label55
   701 op equal *tmp246 .nextBlock @titanium
 
   802 jump *label128 equal *tmp275 false
   803 set :drawItem.4:col 0
   804 op sub :drawItem.4:y :drawItem.4:y 15
-    * set *tmp276 :drawItem.4:y
   805 jump *label129 always
   806 label *label128
-    * set *tmp276 null
   807 label *label129
   808 label *label122
   809 set *tmp249 null
 
   943 jump *label155 equal *tmp304 false
   944 set :drawItem.5:col 0
   945 op sub :drawItem.5:y :drawItem.5:y 15
-    * set *tmp305 :drawItem.5:y
   946 jump *label156 always
   947 label *label155
-    * set *tmp305 null
   948 label *label156
   949 label *label149
   950 set :drawMaterials:col :drawItem.5:col
 
   958 label *label157
   959 set *tmp307 null
   960 label *label158
-    * set *tmp282 *tmp307
   961 jump *label148 always
   962 label *label147
-    * set *tmp282 null
   963 label *label148
   964 label *label138
   965 multijump *tmp280 0 0 (m:marker1)
 
   972 label *label136
   973 set *tmp249 *tmp279
   974 label *label116
-    * set *tmp112 *tmp249
   975 label *label56
   976 label *label54
   977 draw col %[white]
 
  1083 jump *label176 equal *tmp336 false
  1084 set :drawItem.6:col 0
  1085 op sub :drawItem.6:y :drawItem.6:y 15
-    * set *tmp337 :drawItem.6:y
  1086 jump *label177 always
  1087 label *label176
-    * set *tmp337 null
  1088 label *label177
  1089 label *label170
  1090 set :drawUnit.1:y :drawItem.6:y
  1091 label *label169
-    * set *tmp312 null
  1092 jump *label168 always
  1093 label *label167
  1094 sensor *tmp338 @unit @firstItem
 
  1169 jump *label185 equal *tmp365 false
  1170 set :drawItem.7:col 0
  1171 op sub :drawItem.7:y :drawItem.7:y 15
-    * set *tmp366 :drawItem.7:y
  1172 jump *label186 always
  1173 label *label185
-    * set *tmp366 null
  1174 label *label186
  1175 label *label179
  1176 set :drawUnit.2:y :drawItem.7:y
  1177 label *label178
-    * set *tmp312 null
  1178 label *label168
  1179 label *label159
  1180 set :drawUnits:x 170
 
  1197 label *label192
  1198 label *label191
  1199 op sub :drawUnits:x :drawUnits:x 30
-    * set *tmp368 :drawUnits:x
  1200 jump *label190 always
  1201 label *label189
-    * set *tmp368 null
  1202 label *label190
  1203 label *label188
  1204 set :drawUnitCount.1:type @mono
 
  1219 label *label197
  1220 label *label196
  1221 op sub :drawUnits:x :drawUnits:x 30
-    * set *tmp371 :drawUnits:x
  1222 jump *label195 always
  1223 label *label194
-    * set *tmp371 null
  1224 label *label195
  1225 label *label193
  1226 set :drawUnitCount.2:type @flare
 
  1241 label *label202
  1242 label *label201
  1243 op sub :drawUnits:x :drawUnits:x 30
-    * set *tmp374 :drawUnits:x
  1244 jump *label200 always
  1245 label *label199
-    * set *tmp374 null
  1246 label *label200
  1247 label *label198
  1248 label *label187
 
  1250 label *label29
  1251 set *tmp52 null
  1252 label *label22
-    * set *tmp50 *tmp52
  1253 jump *label20 always
  1254 label *label19
  1255 op equal *tmp376 .page 1
  1256 jump *label203 equal *tmp376 false
  1257 read *tmp378 bank2 511
-    * set :displayStorage:head *tmp378
  1258 read *tmp379 bank2 510
  1259 set :displayStorage:tail *tmp379
  1260 jump *label206 equal .pageSwitched false
 
  1304 multilabel *label219 (m:marker2)
  1305 label *label210
  1306 drawflush display1
-    * set *tmp380 null
  1307 jump *label207 always
  1308 label *label206
-    * set *tmp380 null
  1309 label *label207
  1310 op greaterThan *tmp383 .lastTail :displayStorage:tail
  1311 jump *label220 equal *tmp383 false
  1312 jump *label205 always
-    * set *tmp384 null
  1313 jump *label221 always
  1314 label *label220
-    * set *tmp384 null
  1315 label *label221
  1316 set *tmp385 .lastTail
  1317 read *tmp386 bank2 *tmp385
 
  1319 op add *tmp387 25 .lastTail
  1320 set :displayStorage:x *tmp387
  1321 set :displayStorage:y.1 165
-    * set :displayStorage:item.1 @copper
  1322 setaddr *tmp388 *label225
  1323 jump *label222 always
  1324 multilabel *label225 (m:marker3)
-    * set :displayStorage:item.1 @lead
  1325 setaddr *tmp388 *label226
  1326 jump *label222 always
  1327 multilabel *label226 (m:marker3)
-    * set :displayStorage:item.1 @sand
  1328 setaddr *tmp388 *label227
  1329 jump *label222 always
  1330 multilabel *label227 (m:marker3)
-    * set :displayStorage:item.1 @coal
  1331 setaddr *tmp388 *label228
  1332 jump *label222 always
  1333 multilabel *label228 (m:marker3)
-    * set :displayStorage:item.1 @graphite
  1334 setaddr *tmp388 *label229
  1335 jump *label222 always
  1336 multilabel *label229 (m:marker3)
-    * set :displayStorage:item.1 @silicon
  1337 setaddr *tmp388 *label230
  1338 jump *label222 always
  1339 multilabel *label230 (m:marker3)
-    * set :displayStorage:item.1 @titanium
  1340 setaddr *tmp388 *label231
  1341 jump *label222 always
  1342 multilabel *label231 (m:marker3)
-    * set :displayStorage:item.1 @metaglass
  1343 setaddr *tmp388 *label232
  1344 jump *label222 always
  1345 multilabel *label232 (m:marker3)
-    * set :displayStorage:item.1 @thorium
  1346 setaddr *tmp388 *label233
  1347 label *label222
  1348 op and *tmp389 :displayStorage:accumulator 0b11111
 
  1365 multilabel *label233 (m:marker3)
  1366 label *label224
  1367 drawflush display1
-    * set *tmp394 .lastTail
  1368 op add .lastTail .lastTail 1
  1369 label *label205
  1370 set *tmp377 null
 
  1519 setaddr :drawBlock*retaddr *label276 (h:*label276)
  1520 call *label5 *invalid :drawBlock*retval (m:*label276) (h:*label276)
  1521 label *label276
-    * set *tmp399 null
  1522 jump *label275 always
  1523 label *label274
-    * set *tmp399 null
  1524 label *label275
  1525 sensor *tmp402 switch1 @enabled
  1526 jump *label277 equal *tmp402 false
  1527 draw clear 0 0 32
  1528 jump *label243 always
-    * set *tmp403 null
  1529 jump *label278 always
  1530 label *label277
-    * set *tmp403 null
  1531 label *label278
  1532 jump *label279 equal .pageSwitched false
  1533 drawflush display1
-    * set *tmp404 null
  1534 jump *label280 always
  1535 label *label279
-    * set *tmp404 null
  1536 label *label280
  1537 label *label242
  1538 multijump *tmp397 0 0 (m:marker4)
 
  1639 jump *label295 equal *tmp437 false
  1640 op add :displayLog:x :displayLog:x 58
  1641 set :displayLog:y 164
-    * set *tmp438 :displayLog:y
  1642 jump *label296 always
  1643 label *label295
-    * set *tmp438 null
  1644 label *label296
  1645 label *label292
  1646 label *label287
 
  1648 sensor *tmp439 switch1 @enabled
  1649 jump *label297 equal *tmp439 false
  1650 jump *label286 always
-    * set *tmp440 null
  1651 jump *label298 always
  1652 label *label297
-    * set *tmp440 null
  1653 label *label298
  1654 label *label285
  1655 op sub :displayLog:position :displayLog:position 1
 
  1661 label *label237
  1662 set *tmp377 *tmp396
  1663 label *label204
-    * set *tmp50 *tmp377
  1664 label *label20
  1665 op greaterThan *tmp441 .megas 0
  1666 jump *label299 equal *tmp441 false
  1667 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  1668 print "\n"
  1669 printflush message1
-    * set *tmp442 null
  1670 jump *label300 always
  1671 label *label299
  1672 print "[gold]Building "
 
  1689 print "\n"
  1690 printflush message1
  1691 label *label301
-    * set *tmp442 null
  1692 label *label300
  1693 sensor *tmp445 switch1 @enabled
  1694 set .pageSwitched *tmp445
 
  1700 drawflush null
  1701 draw reset
  1702 draw clear 0 0 32
-    * set *tmp446 null
  1703 jump *label303 always
  1704 label *label302
-    * set *tmp446 null
  1705 label *label303
  1706 label *label15
  1707 jump *label14 always
 
  1744 op sub *tmp467 *tmp466 74
  1745 set :unpackCfg:ind *tmp467
  1746 sensor *tmp468 :unpackCfg:type @copper
-    * set :unpackCfg:cu *tmp468
  1747 sensor *tmp469 :unpackCfg:type @lead
-    * set :unpackCfg:pb *tmp469
  1748 sensor *tmp470 :unpackCfg:type @graphite
-    * set :unpackCfg:gr *tmp470
  1749 sensor *tmp471 :unpackCfg:type @silicon
-    * set :unpackCfg:si *tmp471
  1750 sensor *tmp472 :unpackCfg:type @titanium
-    * set :unpackCfg:ti *tmp472
  1751 sensor *tmp473 :unpackCfg:type @metaglass
-    * set :unpackCfg:mg *tmp473
  1752 sensor *tmp474 :unpackCfg:type @thorium
-    * set :unpackCfg:th *tmp474
  1753 sensor *tmp475 :unpackCfg:type @size
  1754 set :unpackCfg:size *tmp475
  1755 label *label306
 
  1772 op and *tmp479 .blocksBuilt *tmp478
  1773 jump *label309 equal *tmp479 false
  1774 draw col %[white]
-    * set *tmp480 null
  1775 jump *label310 always
  1776 label *label309
  1777 draw color 128 255 128 128
-    * set *tmp480 null
  1778 label *label310
  1779 op mul *tmp481 2 :drawBlock:x
  1780 op mul *tmp482 2 :drawBlock:y
  1781 op mul *tmp483 2 :drawBlock:size
  1782 op mul *tmp484 90 :drawBlock:rotation
  1783 draw image *tmp481 *tmp482 :drawBlock:type *tmp483 *tmp484
-    * set *tmp477 null
  1784 jump *label308 always
  1785 label *label307
-    * set *tmp477 null
  1786 label *label308
  1787 label *label304
  1788 return :drawBlock*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-24 instructions):
 
    24 op equal *tmp45 .core null
    25 jump *label11 notEqual *tmp45 false
    26 label *label13
-    * sensor *tmp46 .core @x
-    * sensor *tmp47 .core @y
    27 printflush null
    28 drawflush null
    29 label *label14
 
    87 drawflush display1
    88 op add .animation .animation 1
    89 label *label23
-    * set *tmp52 null
    90 jump *label22 always
    91 label *label21
    92 draw reset
 
   136 set *tmp81 .nextUnit
   137 label *label41
   138 draw image 40 137 *tmp81 32 0
-    * set *tmp79 null
   139 jump *label39 always
   140 label *label38
   141 op div *tmp82 @tick 2
   142 op mod *tmp83 *tmp82 360
   143 op sub *tmp84 360 *tmp83
   144 draw image 40 137 @hydrogen 32 *tmp84
-    * set *tmp79 null
   145 label *label39
   146 label *label37
   147 set :drawHeader:tt @second
 
   276 set :drawMaterials:unit1 *tmp127
   277 set :drawMaterials:unit3 null
   278 set :drawMaterials:unit2 :drawMaterials:unit3
-    * set *tmp124 :drawMaterials:unit2
   279 jump *label60 always
   280 label *label59
   281 op equal *tmp128 .nextUnit @poly
 
   322 label *label64
   323 set *tmp129 *tmp137
   324 label *label62
-    * set *tmp124 *tmp129
   325 label *label60
   326 label *label58
   327 set :drawBold.1:x 22
 
   592 label *label80
   593 set *tmp171 null
   594 label *label81
-    * set *tmp147 *tmp171
   595 jump *label71 always
   596 label *label70
   597 set :drawMaterials:item @lead
 
   686 multijump *tmp220 0 0 (m:marker0)
   687 multilabel *label104 (m:marker0)
   688 label *label102
-    * set *tmp147 null
   689 label *label71
   690 jump *label56 always
   691 label *label55
 
   797 label *label128
   798 label *label129
   799 label *label122
-    * set *tmp249 null
   800 jump *label116 always
   801 label *label115
   802 set *tmp277 .totalTargets
 
   943 op lessThanEq *tmp306 :drawMaterials:count 0
   944 jump *label157 equal *tmp306 false
   945 jump *label139 always
-    * set *tmp307 null
   946 jump *label158 always
   947 label *label157
-    * set *tmp307 null
   948 label *label158
   949 jump *label148 always
   950 label *label147
 
   958 label *label135
   959 set *tmp279 null
   960 label *label136
-    * set *tmp249 *tmp279
   961 label *label116
   962 label *label56
   963 label *label54
 
  1235 label *label187
  1236 drawflush display1
  1237 label *label29
-    * set *tmp52 null
  1238 label *label22
  1239 jump *label20 always
  1240 label *label19
  1241 op equal *tmp376 .page 1
  1242 jump *label203 equal *tmp376 false
-    * read *tmp378 bank2 511
  1243 read *tmp379 bank2 510
  1244 set :displayStorage:tail *tmp379
  1245 jump *label206 equal .pageSwitched false
 
  1352 drawflush display1
  1353 op add .lastTail .lastTail 1
  1354 label *label205
-    * set *tmp377 null
  1355 jump *label204 always
  1356 label *label203
  1357 op equal *tmp395 .page 2
 
  1643 label *label281
  1644 set *tmp396 null
  1645 label *label237
-    * set *tmp377 *tmp396
  1646 label *label204
  1647 label *label20
  1648 op greaterThan *tmp441 .megas 0
 
  1726 read *tmp466 :unpackCfg:cfg *tmp465
  1727 op sub *tmp467 *tmp466 74
  1728 set :unpackCfg:ind *tmp467
-    * sensor *tmp468 :unpackCfg:type @copper
-    * sensor *tmp469 :unpackCfg:type @lead
-    * sensor *tmp470 :unpackCfg:type @graphite
-    * sensor *tmp471 :unpackCfg:type @silicon
-    * sensor *tmp472 :unpackCfg:type @titanium
-    * sensor *tmp473 :unpackCfg:type @metaglass
-    * sensor *tmp474 :unpackCfg:type @thorium
  1729 sensor *tmp475 :unpackCfg:type @size
  1730 set :unpackCfg:size *tmp475
  1731 label *label306

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-8 instructions):
 
   294 op greaterThan *tmp134 .reconstructorProgress 0
   295 op max *tmp135 .factoryProgress *tmp134
   296 set .factoryProgress *tmp135
-    * set *tmp129 .factoryProgress
   297 jump *label62 always
   298 label *label61
   299 op equal *tmp136 .nextUnit @mega
 
   319 label *label63
   320 set *tmp137 null
   321 label *label64
-    * set *tmp129 *tmp137
   322 label *label62
   323 label *label60
   324 label *label58
 
   585 label *label90
   586 set *tmp195 null
   587 label *label91
-    * set *tmp171 *tmp195
   588 jump *label81 always
   589 label *label80
-    * set *tmp171 null
   590 label *label81
   591 jump *label71 always
   592 label *label70
 
   949 multijump *tmp280 0 0 (m:marker1)
   950 multilabel *label146 (m:marker1)
   951 label *label139
-    * set *tmp279 null
   952 jump *label136 always
   953 label *label135
-    * set *tmp279 null
   954 label *label136
   955 label *label116
   956 label *label56
 
  1518 label *label243
  1519 drawflush display1
  1520 label *label238
-    * set *tmp396 null
  1521 jump *label237 always
  1522 label *label236
  1523 op sub *tmp405 .page 3
 
  1634 label *label286
  1635 drawflush display1
  1636 label *label281
-    * set *tmp396 null
  1637 label *label237
  1638 label *label204
  1639 label *label20

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
   314 op greaterThan *tmp143 :drawMaterials:multiReconstructorProgress 0
   315 op max *tmp144 .reconstructorProgress *tmp143
   316 set .reconstructorProgress *tmp144
-    * set *tmp137 .reconstructorProgress
   317 jump *label64 always
   318 label *label63
-    * set *tmp137 null
   319 label *label64
   320 label *label62
   321 label *label60
 
   578 label *label98
   579 label *label99
   580 label *label92
-    * set *tmp195 null
   581 jump *label91 always
   582 label *label90
-    * set *tmp195 null
   583 label *label91
   584 jump *label81 always
   585 label *label80

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-137 instructions):
 
    18 label *label8
    19 label *label11
    20 ubind @poly
-    * ulocate building core false @copper *tmp42 *tmp43 *tmp44 *tmp41
-    * set .core *tmp41
+   21 ulocate building core false @copper *tmp42 *tmp43 *tmp44 .core
    22 label *label12
    23 op equal *tmp45 .core null
    24 jump *label11 notEqual *tmp45 false
 
    50 draw col %[white]
    51 op div *tmp55 .animation 30
    52 op min *tmp56 *tmp55 1
-    * op max *tmp57 0 *tmp56
-    * set :animate:ratio *tmp57
+   53 op max :animate:ratio 0 *tmp56
    54 set :lerp:from 40
    55 set :lerp:to 88
    56 set :lerp:ratio :animate:ratio
    57 op sub *tmp59 1 :lerp:ratio
    58 op mul *tmp60 *tmp59 :lerp:from
    59 op mul *tmp61 :lerp:ratio :lerp:to
-    * op add *tmp62 *tmp60 *tmp61
-    * set *tmp58 *tmp62
+   60 op add *tmp58 *tmp60 *tmp61
    61 label *label26
    62 set :animate:x *tmp58
    63 set :lerp.1:from 137
 
    66 op sub *tmp64 1 :lerp.1:ratio
    67 op mul *tmp65 *tmp64 :lerp.1:from
    68 op mul *tmp66 :lerp.1:ratio :lerp.1:to
-    * op add *tmp67 *tmp65 *tmp66
-    * set *tmp63 *tmp67
+   69 op add *tmp63 *tmp65 *tmp66
    70 label *label27
    71 set :animate:y *tmp63
    72 set :lerp.2:from 32
 
    75 op sub *tmp69 1 :lerp.2:ratio
    76 op mul *tmp70 *tmp69 :lerp.2:from
    77 op mul *tmp71 :lerp.2:ratio :lerp.2:to
-    * op add *tmp72 *tmp70 *tmp71
-    * set *tmp68 *tmp72
+   78 op add *tmp68 *tmp70 *tmp71
    79 label *label28
    80 set :animate:size *tmp68
    81 draw image :animate:x :animate:y @mega :animate:size 0
 
   100 draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
   101 label *label33
   102 label *label32
-    * op add *tmp74 :drawBold:x 1
-    * set :drawText.1:x *tmp74
+  103 op add :drawText.1:x :drawBold:x 1
   104 set :drawText.1:y :drawBold:y
   105 set :drawText.1:alignment :drawBold:alignment
   106 print "Goal"
 
   112 label *label34
   113 label *label31
   114 draw col %[white]
-    * op add *tmp75 .nextBlock .nextUnit
-    * set :drawHeader:count *tmp75
+  115 op add :drawHeader:count .nextBlock .nextUnit
   116 op equal *tmp76 :drawHeader:count 2
   117 jump *label36 equal *tmp76 false
   118 draw image 25 139 .nextBlock 25 0
 
   140 set :drawHeader:tt @second
   141 read *tmp0 processor1 "time"
   142 op div *tmp85 *tmp0 120
-    * op floor *tmp86 *tmp85
-    * set :drawHeader:t *tmp86
-    * op idiv *tmp87 :drawHeader:t 60
-    * set :drawHeader:m *tmp87
-    * op mod *tmp88 :drawHeader:t 60
-    * set :drawHeader:s *tmp88
+  143 op floor :drawHeader:t *tmp85
+  144 op idiv :drawHeader:m :drawHeader:t 60
+  145 op mod :drawHeader:s :drawHeader:t 60
   146 op lessThan *tmp89 :drawHeader:s 10
   147 jump *label42 equal *tmp89 false
   148 set *tmp90 "0"
 
   156 print :drawHeader:s
   157 op mul *tmp91 10 :drawHeader:t
   158 op div *tmp92 *tmp91 :drawHeader:tt
-    * op round *tmp93 *tmp92
-    * set :drawHeader:ratio *tmp93
+  159 op round :drawHeader:ratio *tmp92
   160 op idiv *tmp94 :drawHeader:ratio 10
   161 op mod *tmp95 :drawHeader:ratio 10
   162 print " (x"
 
   175 label *label44
   176 jump *label46 equal .titaniumDrill false
   177 sensor *tmp97 .titaniumDrill @titanium
-    * op max *tmp98 .titaniumDrillCount *tmp97
-    * set :drawHeader:count *tmp98
+  178 op max :drawHeader:count .titaniumDrillCount *tmp97
   179 set :drawHeader:x 170
   180 op log10 *tmp99 :drawHeader:count
-    * op floor *tmp100 *tmp99
-    * set :drawHeader:len *tmp100
+  181 op floor :drawHeader:len *tmp99
   182 set :drawText.3:x :drawHeader:x
   183 set :drawText.3:y 155
   184 set :drawText.3:alignment @topRight
 
   198 label *label46
   199 label *label47
   200 jump *label50 equal .thoriumContainer false
-    * sensor *tmp105 .thoriumContainer @thorium
-    * set :drawHeader:count *tmp105
+  201 sensor :drawHeader:count .thoriumContainer @thorium
   202 set :drawHeader:x.1 120
   203 op log10 *tmp106 :drawHeader:count
-    * op floor *tmp107 *tmp106
-    * set :drawHeader:len.1 *tmp107
+  204 op floor :drawHeader:len.1 *tmp106
   205 set :drawText.4:x :drawHeader:x.1
   206 set :drawText.4:y 155
   207 set :drawText.4:alignment @topRight
 
   226 op equal *tmp111 .nextBlock null
   227 jump *label55 equal *tmp111 false
   228 sensor *tmp113 A¾BFLW-air-factory13 @progress
-    * op max *tmp114 .factoryProgress *tmp113
-    * set .factoryProgress *tmp114
+  229 op max .factoryProgress .factoryProgress *tmp113
   230 sensor *tmp115 AÀF@L`-additive-reconstructor22 @progress
-    * op max *tmp116 .reconstructorProgress *tmp115
-    * set .reconstructorProgress *tmp116
-    * sensor *tmp117 AÁPBJf-multiplicative-reconstructor28 @progress
-    * set :drawMaterials:multiReconstructorProgress *tmp117
+  231 op max .reconstructorProgress .reconstructorProgress *tmp115
+  232 sensor :drawMaterials:multiReconstructorProgress AÁPBJf-multiplicative-reconstructor28 @progress
   233 op equal *tmp118 .nextUnit @mono
   234 jump *label57 equal *tmp118 false
   235 set :drawMaterials:targetFactoryLead 15
   236 set :drawMaterials:targetFactorySilicon 30
   237 set .materialCount 2
-    * set *tmp120 .monos
-    * set :drawMaterials:unitCount1 *tmp120
-    * set *tmp121 .monoTarget
-    * set :drawMaterials:unitTotal1 *tmp121
-    * set *tmp122 .nextUnit
-    * set :drawMaterials:unit1 *tmp122
+  238 set :drawMaterials:unitCount1 .monos
+  239 set :drawMaterials:unitTotal1 .monoTarget
+  240 set :drawMaterials:unit1 .nextUnit
   241 set :drawMaterials:unit3 null
   242 set :drawMaterials:unit2 :drawMaterials:unit3
   243 jump *label58 always
 
   247 set :drawMaterials:targetFactoryLead 0
   248 set :drawMaterials:targetFactorySilicon 15
   249 set .materialCount 1
-    * set *tmp125 .flares
-    * set :drawMaterials:unitCount1 *tmp125
-    * set *tmp126 .flareTarget
-    * set :drawMaterials:unitTotal1 *tmp126
-    * set *tmp127 .nextUnit
-    * set :drawMaterials:unit1 *tmp127
+  250 set :drawMaterials:unitCount1 .flares
+  251 set :drawMaterials:unitTotal1 .flareTarget
+  252 set :drawMaterials:unit1 .nextUnit
   253 set :drawMaterials:unit3 null
   254 set :drawMaterials:unit2 :drawMaterials:unit3
   255 jump *label60 always
   256 label *label59
   257 op equal *tmp128 .nextUnit @poly
   258 jump *label61 equal *tmp128 false
-    * op floor *tmp130 .factoryProgress
-    * set :drawMaterials:unitCount1 *tmp130
-    * set *tmp131 .polys
-    * set :drawMaterials:unitCount2 *tmp131
+  259 op floor :drawMaterials:unitCount1 .factoryProgress
+  260 set :drawMaterials:unitCount2 .polys
   261 set :drawMaterials:unitTotal1 1
-    * set *tmp132 .polyTarget
-    * set :drawMaterials:unitTotal2 *tmp132
+  262 set :drawMaterials:unitTotal2 .polyTarget
   263 set :drawMaterials:unit1 @mono
-    * set *tmp133 .nextUnit
-    * set :drawMaterials:unit2 *tmp133
+  264 set :drawMaterials:unit2 .nextUnit
   265 set :drawMaterials:unit3 null
   266 op greaterThan *tmp134 .reconstructorProgress 0
-    * op max *tmp135 .factoryProgress *tmp134
-    * set .factoryProgress *tmp135
+  267 op max .factoryProgress .factoryProgress *tmp134
   268 jump *label62 always
   269 label *label61
   270 op equal *tmp136 .nextUnit @mega
   271 jump *label63 equal *tmp136 false
-    * op floor *tmp138 .factoryProgress
-    * set :drawMaterials:unitCount1 *tmp138
-    * op floor *tmp139 .reconstructorProgress
-    * set :drawMaterials:unitCount2 *tmp139
+  272 op floor :drawMaterials:unitCount1 .factoryProgress
+  273 op floor :drawMaterials:unitCount2 .reconstructorProgress
   274 set :drawMaterials:unitTotal1 1
   275 set :drawMaterials:unitTotal2 1
   276 set :drawMaterials:unit1 @mono
   277 set :drawMaterials:unit2 @poly
-    * set *tmp140 .nextUnit
-    * set :drawMaterials:unit3 *tmp140
+  278 set :drawMaterials:unit3 .nextUnit
   279 op greaterThan *tmp141 .reconstructorProgress 0
-    * op max *tmp142 .factoryProgress *tmp141
-    * set .factoryProgress *tmp142
+  280 op max .factoryProgress .factoryProgress *tmp141
   281 op greaterThan *tmp143 :drawMaterials:multiReconstructorProgress 0
-    * op max *tmp144 .reconstructorProgress *tmp143
-    * set .reconstructorProgress *tmp144
+  282 op max .reconstructorProgress .reconstructorProgress *tmp143
   283 jump *label64 always
   284 label *label63
   285 label *label64
 
   299 draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
   300 label *label67
   301 label *label66
-    * op add *tmp145 :drawBold.1:x 1
-    * set :drawText.6:x *tmp145
+  302 op add :drawText.6:x :drawBold.1:x 1
   303 set :drawText.6:y :drawBold.1:y
   304 set :drawText.6:alignment :drawBold.1:alignment
   305 print "Unit factories"
 
   320 set :drawItem:target 1
   321 op mul *tmp148 :drawItem:columns 176
   322 op div *tmp149 *tmp148 2
-    * op sub *tmp150 210 *tmp149
-    * set :drawItem:barLength *tmp150
-    * op add *tmp151 48 :drawItem:barLength
-    * set :drawItem:textEnd *tmp151
+  323 op sub :drawItem:barLength 210 *tmp149
+  324 op add :drawItem:textEnd 48 :drawItem:barLength
   325 op mul *tmp152 :drawItem:barLength :drawItem:current
   326 op div *tmp153 *tmp152 :drawItem:target
-    * op min *tmp154 :drawItem:barLength *tmp153
-    * set :drawItem:length *tmp154
+  327 op min :drawItem:length :drawItem:barLength *tmp153
   328 op mul *tmp155 :drawItem:col 176
   329 op div *tmp156 *tmp155 2
-    * op add *tmp157 11 *tmp156
-    * set :drawItem:iconX *tmp157
+  330 op add :drawItem:iconX 11 *tmp156
   331 op mul *tmp158 :drawItem:col 176
   332 op div *tmp159 *tmp158 2
-    * op add *tmp160 22 *tmp159
-    * set :drawItem:barX *tmp160
+  333 op add :drawItem:barX 22 *tmp159
   334 op mul *tmp161 :drawItem:col 176
   335 op div *tmp162 *tmp161 2
-    * op add *tmp163 :drawItem:textEnd *tmp162
-    * set :drawItem:textX *tmp163
+  336 op add :drawItem:textX :drawItem:textEnd *tmp162
   337 draw col %[white]
   338 op add *tmp164 :drawItem:y 5
   339 draw image :drawItem:iconX *tmp164 :drawItem:item 16 0
 
   358 draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
   359 label *label75
   360 label *label74
-    * op add *tmp167 :drawBold.2:x 1
-    * set :drawText.8:x *tmp167
+  361 op add :drawText.8:x :drawBold.2:x 1
   362 set :drawText.8:y :drawBold.2:y
   363 set :drawText.8:alignment :drawBold.2:alignment
   364 print :drawMaterials:unitCount1
 
   390 set :drawItem.1:target 1
   391 op mul *tmp172 :drawItem.1:columns 176
   392 op div *tmp173 *tmp172 2
-    * op sub *tmp174 210 *tmp173
-    * set :drawItem.1:barLength *tmp174
-    * op add *tmp175 48 :drawItem.1:barLength
-    * set :drawItem.1:textEnd *tmp175
+  393 op sub :drawItem.1:barLength 210 *tmp173
+  394 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
   395 op mul *tmp176 :drawItem.1:barLength :drawItem.1:current
   396 op div *tmp177 *tmp176 :drawItem.1:target
-    * op min *tmp178 :drawItem.1:barLength *tmp177
-    * set :drawItem.1:length *tmp178
+  397 op min :drawItem.1:length :drawItem.1:barLength *tmp177
   398 op mul *tmp179 :drawItem.1:col 176
   399 op div *tmp180 *tmp179 2
-    * op add *tmp181 11 *tmp180
-    * set :drawItem.1:iconX *tmp181
+  400 op add :drawItem.1:iconX 11 *tmp180
   401 op mul *tmp182 :drawItem.1:col 176
   402 op div *tmp183 *tmp182 2
-    * op add *tmp184 22 *tmp183
-    * set :drawItem.1:barX *tmp184
+  403 op add :drawItem.1:barX 22 *tmp183
   404 op mul *tmp185 :drawItem.1:col 176
   405 op div *tmp186 *tmp185 2
-    * op add *tmp187 :drawItem.1:textEnd *tmp186
-    * set :drawItem.1:textX *tmp187
+  406 op add :drawItem.1:textX :drawItem.1:textEnd *tmp186
   407 draw col %[white]
   408 op add *tmp188 :drawItem.1:y 5
   409 draw image :drawItem.1:iconX *tmp188 :drawItem.1:item 16 0
 
   428 draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
   429 label *label85
   430 label *label84
-    * op add *tmp191 :drawBold.3:x 1
-    * set :drawText.10:x *tmp191
+  431 op add :drawText.10:x :drawBold.3:x 1
   432 set :drawText.10:y :drawBold.3:y
   433 set :drawText.10:alignment :drawBold.3:alignment
   434 print :drawMaterials:unitCount2
 
   460 set :drawItem.2:target 1
   461 op mul *tmp196 :drawItem.2:columns 176
   462 op div *tmp197 *tmp196 2
-    * op sub *tmp198 210 *tmp197
-    * set :drawItem.2:barLength *tmp198
-    * op add *tmp199 48 :drawItem.2:barLength
-    * set :drawItem.2:textEnd *tmp199
+  463 op sub :drawItem.2:barLength 210 *tmp197
+  464 op add :drawItem.2:textEnd 48 :drawItem.2:barLength
   465 op mul *tmp200 :drawItem.2:barLength :drawItem.2:current
   466 op div *tmp201 *tmp200 :drawItem.2:target
-    * op min *tmp202 :drawItem.2:barLength *tmp201
-    * set :drawItem.2:length *tmp202
+  467 op min :drawItem.2:length :drawItem.2:barLength *tmp201
   468 op mul *tmp203 :drawItem.2:col 176
   469 op div *tmp204 *tmp203 2
-    * op add *tmp205 11 *tmp204
-    * set :drawItem.2:iconX *tmp205
+  470 op add :drawItem.2:iconX 11 *tmp204
   471 op mul *tmp206 :drawItem.2:col 176
   472 op div *tmp207 *tmp206 2
-    * op add *tmp208 22 *tmp207
-    * set :drawItem.2:barX *tmp208
+  473 op add :drawItem.2:barX 22 *tmp207
   474 op mul *tmp209 :drawItem.2:col 176
   475 op div *tmp210 *tmp209 2
-    * op add *tmp211 :drawItem.2:textEnd *tmp210
-    * set :drawItem.2:textX *tmp211
+  476 op add :drawItem.2:textX :drawItem.2:textEnd *tmp210
   477 draw col %[white]
   478 op add *tmp212 :drawItem.2:y 5
   479 draw image :drawItem.2:iconX *tmp212 :drawItem.2:item 16 0
 
   491 set :drawText.11:alignment :drawBold.4:alignment
   492 print .megas
   493 print "/"
-    * set *tmp215 .megaTarget
-    * print *tmp215
+  494 print .megaTarget
   495 set :drawPrint.11:x :drawText.11:x
   496 set :drawPrint.11:y :drawText.11:y
   497 set :drawPrint.11:alignment :drawText.11:alignment
   498 draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
   499 label *label95
   500 label *label94
-    * op add *tmp216 :drawBold.4:x 1
-    * set :drawText.12:x *tmp216
+  501 op add :drawText.12:x :drawBold.4:x 1
   502 set :drawText.12:y :drawBold.4:y
   503 set :drawText.12:alignment :drawBold.4:alignment
   504 print .megas
   505 print "/"
-    * set *tmp217 .megaTarget
-    * print *tmp217
+  506 print .megaTarget
   507 set :drawPrint.12:x :drawText.12:x
   508 set :drawPrint.12:y :drawText.12:y
   509 set :drawPrint.12:alignment :drawText.12:alignment
 
   548 set :drawItem.3:target :drawMaterials:target
   549 op mul *tmp224 :drawItem.3:columns 176
   550 op div *tmp225 *tmp224 2
-    * op sub *tmp226 210 *tmp225
-    * set :drawItem.3:barLength *tmp226
-    * op add *tmp227 48 :drawItem.3:barLength
-    * set :drawItem.3:textEnd *tmp227
+  551 op sub :drawItem.3:barLength 210 *tmp225
+  552 op add :drawItem.3:textEnd 48 :drawItem.3:barLength
   553 op mul *tmp228 :drawItem.3:barLength :drawItem.3:current
   554 op div *tmp229 *tmp228 :drawItem.3:target
-    * op min *tmp230 :drawItem.3:barLength *tmp229
-    * set :drawItem.3:length *tmp230
+  555 op min :drawItem.3:length :drawItem.3:barLength *tmp229
   556 op mul *tmp231 :drawItem.3:col 176
   557 op div *tmp232 *tmp231 2
-    * op add *tmp233 11 *tmp232
-    * set :drawItem.3:iconX *tmp233
+  558 op add :drawItem.3:iconX 11 *tmp232
   559 op mul *tmp234 :drawItem.3:col 176
   560 op div *tmp235 *tmp234 2
-    * op add *tmp236 22 *tmp235
-    * set :drawItem.3:barX *tmp236
+  561 op add :drawItem.3:barX 22 *tmp235
   562 op mul *tmp237 :drawItem.3:col 176
   563 op div *tmp238 *tmp237 2
-    * op add *tmp239 :drawItem.3:textEnd *tmp238
-    * set :drawItem.3:textX *tmp239
+  564 op add :drawItem.3:textX :drawItem.3:textEnd *tmp238
   565 draw col %[white]
   566 op add *tmp240 :drawItem.3:y 5
   567 draw image :drawItem.3:iconX *tmp240 :drawItem.3:item 16 0
 
   584 draw print :drawPrint.13:x :drawPrint.13:y :drawPrint.13:alignment
   585 label *label110
   586 label *label109
-    * op add *tmp243 :drawBold.5:x 1
-    * set :drawText.14:x *tmp243
+  587 op add :drawText.14:x :drawBold.5:x 1
   588 set :drawText.14:y :drawBold.5:y
   589 set :drawText.14:alignment :drawBold.5:alignment
   590 print :drawMaterials:target
 
   634 draw print :drawPrint.15:x :drawPrint.15:y :drawPrint.15:alignment
   635 label *label119
   636 label *label118
-    * op add *tmp251 :drawBold.6:x 1
-    * set :drawText.16:x *tmp251
+  637 op add :drawText.16:x :drawBold.6:x 1
   638 set :drawText.16:y :drawBold.6:y
   639 set :drawText.16:alignment :drawBold.6:alignment
   640 read *tmp252 processor3 ".mapAction"
 
   650 set :drawItem.4:y 90
   651 set :drawItem.4:columns 1
   652 set :drawItem.4:item @titanium
-    * read *tmp16 processor3 ".mapProgress"
-    * set :drawItem.4:current *tmp16
-    * read *tmp17 processor3 ".mapTotal"
-    * set :drawItem.4:target *tmp17
+  653 read :drawItem.4:current processor3 ".mapProgress"
+  654 read :drawItem.4:target processor3 ".mapTotal"
   655 op mul *tmp253 :drawItem.4:columns 176
   656 op div *tmp254 *tmp253 2
-    * op sub *tmp255 210 *tmp254
-    * set :drawItem.4:barLength *tmp255
-    * op add *tmp256 48 :drawItem.4:barLength
-    * set :drawItem.4:textEnd *tmp256
+  657 op sub :drawItem.4:barLength 210 *tmp254
+  658 op add :drawItem.4:textEnd 48 :drawItem.4:barLength
   659 op mul *tmp257 :drawItem.4:barLength :drawItem.4:current
   660 op div *tmp258 *tmp257 :drawItem.4:target
-    * op min *tmp259 :drawItem.4:barLength *tmp258
-    * set :drawItem.4:length *tmp259
+  661 op min :drawItem.4:length :drawItem.4:barLength *tmp258
   662 op mul *tmp260 :drawItem.4:col 176
   663 op div *tmp261 *tmp260 2
-    * op add *tmp262 11 *tmp261
-    * set :drawItem.4:iconX *tmp262
+  664 op add :drawItem.4:iconX 11 *tmp261
   665 op mul *tmp263 :drawItem.4:col 176
   666 op div *tmp264 *tmp263 2
-    * op add *tmp265 22 *tmp264
-    * set :drawItem.4:barX *tmp265
+  667 op add :drawItem.4:barX 22 *tmp264
   668 op mul *tmp266 :drawItem.4:col 176
   669 op div *tmp267 *tmp266 2
-    * op add *tmp268 :drawItem.4:textEnd *tmp267
-    * set :drawItem.4:textX *tmp268
+  670 op add :drawItem.4:textX :drawItem.4:textEnd *tmp267
   671 draw col %[white]
   672 op add *tmp269 :drawItem.4:y 5
   673 draw image :drawItem.4:iconX *tmp269 :drawItem.4:item 16 0
 
   692 draw print :drawPrint.17:x :drawPrint.17:y :drawPrint.17:alignment
   693 label *label125
   694 label *label124
-    * op add *tmp273 :drawBold.7:x 1
-    * set :drawText.18:x *tmp273
+  695 op add :drawText.18:x :drawBold.7:x 1
   696 set :drawText.18:y :drawBold.7:y
   697 set :drawText.18:alignment :drawBold.7:alignment
   698 print "x"
 
   716 label *label122
   717 jump *label116 always
   718 label *label115
-    * set *tmp277 .totalTargets
-    * set .materialCount *tmp277
+  719 set .materialCount .totalTargets
   720 set :drawMaterials:count .materialCount
   721 set :drawBold.8:x 22
   722 set :drawBold.8:y 105
 
   731 draw print :drawPrint.19:x :drawPrint.19:y :drawPrint.19:alignment
   732 label *label132
   733 label *label131
-    * op add *tmp278 :drawBold.8:x 1
-    * set :drawText.20:x *tmp278
+  734 op add :drawText.20:x :drawBold.8:x 1
   735 set :drawText.20:y :drawBold.8:y
   736 set :drawText.20:alignment :drawBold.8:alignment
   737 print "Materials"
 
   789 set :drawItem.5:target :drawMaterials:target.1
   790 op mul *tmp284 :drawItem.5:columns 176
   791 op div *tmp285 *tmp284 2
-    * op sub *tmp286 210 *tmp285
-    * set :drawItem.5:barLength *tmp286
-    * op add *tmp287 48 :drawItem.5:barLength
-    * set :drawItem.5:textEnd *tmp287
+  792 op sub :drawItem.5:barLength 210 *tmp285
+  793 op add :drawItem.5:textEnd 48 :drawItem.5:barLength
   794 op mul *tmp288 :drawItem.5:barLength :drawItem.5:current
   795 op div *tmp289 *tmp288 :drawItem.5:target
-    * op min *tmp290 :drawItem.5:barLength *tmp289
-    * set :drawItem.5:length *tmp290
+  796 op min :drawItem.5:length :drawItem.5:barLength *tmp289
   797 op mul *tmp291 :drawItem.5:col 176
   798 op div *tmp292 *tmp291 2
-    * op add *tmp293 11 *tmp292
-    * set :drawItem.5:iconX *tmp293
+  799 op add :drawItem.5:iconX 11 *tmp292
   800 op mul *tmp294 :drawItem.5:col 176
   801 op div *tmp295 *tmp294 2
-    * op add *tmp296 22 *tmp295
-    * set :drawItem.5:barX *tmp296
+  802 op add :drawItem.5:barX 22 *tmp295
   803 op mul *tmp297 :drawItem.5:col 176
   804 op div *tmp298 *tmp297 2
-    * op add *tmp299 :drawItem.5:textEnd *tmp298
-    * set :drawItem.5:textX *tmp299
+  805 op add :drawItem.5:textX :drawItem.5:textEnd *tmp298
   806 draw col %[white]
   807 op add *tmp300 :drawItem.5:y 5
   808 draw image :drawItem.5:iconX *tmp300 :drawItem.5:item 16 0
 
   825 draw print :drawPrint.21:x :drawPrint.21:y :drawPrint.21:alignment
   826 label *label152
   827 label *label151
-    * op add *tmp303 :drawBold.9:x 1
-    * set :drawText.22:x *tmp303
+  828 op add :drawText.22:x :drawBold.9:x 1
   829 set :drawText.22:y :drawBold.9:y
   830 set :drawText.22:alignment :drawBold.9:alignment
   831 print :drawMaterials:target.1
 
   889 draw print :drawPrint.23:x :drawPrint.23:y :drawPrint.23:alignment
   890 label *label164
   891 label *label163
-    * op add *tmp310 :drawBold.10:x 1
-    * set :drawText.24:x *tmp310
+  892 op add :drawText.24:x :drawBold.10:x 1
   893 set :drawText.24:y :drawBold.10:y
   894 set :drawText.24:alignment :drawBold.10:alignment
   895 print "Builder"
 
   914 set :drawItem.6:target .transportTarget
   915 op mul *tmp314 :drawItem.6:columns 176
   916 op div *tmp315 *tmp314 2
-    * op sub *tmp316 210 *tmp315
-    * set :drawItem.6:barLength *tmp316
-    * op add *tmp317 48 :drawItem.6:barLength
-    * set :drawItem.6:textEnd *tmp317
+  917 op sub :drawItem.6:barLength 210 *tmp315
+  918 op add :drawItem.6:textEnd 48 :drawItem.6:barLength
   919 op mul *tmp318 :drawItem.6:barLength :drawItem.6:current
   920 op div *tmp319 *tmp318 :drawItem.6:target
-    * op min *tmp320 :drawItem.6:barLength *tmp319
-    * set :drawItem.6:length *tmp320
+  921 op min :drawItem.6:length :drawItem.6:barLength *tmp319
   922 op mul *tmp321 :drawItem.6:col 176
   923 op div *tmp322 *tmp321 2
-    * op add *tmp323 11 *tmp322
-    * set :drawItem.6:iconX *tmp323
+  924 op add :drawItem.6:iconX 11 *tmp322
   925 op mul *tmp324 :drawItem.6:col 176
   926 op div *tmp325 *tmp324 2
-    * op add *tmp326 22 *tmp325
-    * set :drawItem.6:barX *tmp326
+  927 op add :drawItem.6:barX 22 *tmp325
   928 op mul *tmp327 :drawItem.6:col 176
   929 op div *tmp328 *tmp327 2
-    * op add *tmp329 :drawItem.6:textEnd *tmp328
-    * set :drawItem.6:textX *tmp329
+  930 op add :drawItem.6:textX :drawItem.6:textEnd *tmp328
   931 draw col %[white]
   932 op add *tmp330 :drawItem.6:y 5
   933 draw image :drawItem.6:iconX *tmp330 :drawItem.6:item 16 0
 
   943 set :drawText.25:x :drawBold.11:x
   944 set :drawText.25:y :drawBold.11:y
   945 set :drawText.25:alignment :drawBold.11:alignment
-    * set *tmp333 .transportTarget
-    * print *tmp333
+  946 print .transportTarget
   947 set :drawPrint.25:x :drawText.25:x
   948 set :drawPrint.25:y :drawText.25:y
   949 set :drawPrint.25:alignment :drawText.25:alignment
   950 draw print :drawPrint.25:x :drawPrint.25:y :drawPrint.25:alignment
   951 label *label173
   952 label *label172
-    * op add *tmp334 :drawBold.11:x 1
-    * set :drawText.26:x *tmp334
+  953 op add :drawText.26:x :drawBold.11:x 1
   954 set :drawText.26:y :drawBold.11:y
   955 set :drawText.26:alignment :drawBold.11:alignment
-    * set *tmp335 .transportTarget
-    * print *tmp335
+  956 print .transportTarget
   957 set :drawPrint.26:x :drawText.26:x
   958 set :drawPrint.26:y :drawText.26:y
   959 set :drawPrint.26:alignment :drawText.26:alignment
 
   974 label *label169
   975 jump *label168 always
   976 label *label167
-    * sensor *tmp338 @unit @firstItem
-    * set :drawUnit:unitItem *tmp338
+  977 sensor :drawUnit:unitItem @unit @firstItem
   978 sensor *tmp339 @unit @totalItems
   979 op equal *tmp340 :drawUnit:unitItem .transportItem
   980 op mul *tmp341 *tmp339 *tmp340
 
   990 set :drawItem.7:target .transportTarget
   991 op mul *tmp343 :drawItem.7:columns 176
   992 op div *tmp344 *tmp343 2
-    * op sub *tmp345 210 *tmp344
-    * set :drawItem.7:barLength *tmp345
-    * op add *tmp346 48 :drawItem.7:barLength
-    * set :drawItem.7:textEnd *tmp346
+  993 op sub :drawItem.7:barLength 210 *tmp344
+  994 op add :drawItem.7:textEnd 48 :drawItem.7:barLength
   995 op mul *tmp347 :drawItem.7:barLength :drawItem.7:current
   996 op div *tmp348 *tmp347 :drawItem.7:target
-    * op min *tmp349 :drawItem.7:barLength *tmp348
-    * set :drawItem.7:length *tmp349
+  997 op min :drawItem.7:length :drawItem.7:barLength *tmp348
   998 op mul *tmp350 :drawItem.7:col 176
   999 op div *tmp351 *tmp350 2
-    * op add *tmp352 11 *tmp351
-    * set :drawItem.7:iconX *tmp352
+ 1000 op add :drawItem.7:iconX 11 *tmp351
  1001 op mul *tmp353 :drawItem.7:col 176
  1002 op div *tmp354 *tmp353 2
-    * op add *tmp355 22 *tmp354
-    * set :drawItem.7:barX *tmp355
+ 1003 op add :drawItem.7:barX 22 *tmp354
  1004 op mul *tmp356 :drawItem.7:col 176
  1005 op div *tmp357 *tmp356 2
-    * op add *tmp358 :drawItem.7:textEnd *tmp357
-    * set :drawItem.7:textX *tmp358
+ 1006 op add :drawItem.7:textX :drawItem.7:textEnd *tmp357
  1007 draw col %[white]
  1008 op add *tmp359 :drawItem.7:y 5
  1009 draw image :drawItem.7:iconX *tmp359 :drawItem.7:item 16 0
 
  1019 set :drawText.27:x :drawBold.12:x
  1020 set :drawText.27:y :drawBold.12:y
  1021 set :drawText.27:alignment :drawBold.12:alignment
-    * set *tmp362 .transportTarget
-    * print *tmp362
+ 1022 print .transportTarget
  1023 set :drawPrint.27:x :drawText.27:x
  1024 set :drawPrint.27:y :drawText.27:y
  1025 set :drawPrint.27:alignment :drawText.27:alignment
  1026 draw print :drawPrint.27:x :drawPrint.27:y :drawPrint.27:alignment
  1027 label *label182
  1028 label *label181
-    * op add *tmp363 :drawBold.12:x 1
-    * set :drawText.28:x *tmp363
+ 1029 op add :drawText.28:x :drawBold.12:x 1
  1030 set :drawText.28:y :drawBold.12:y
  1031 set :drawText.28:alignment :drawBold.12:alignment
-    * set *tmp364 .transportTarget
-    * print *tmp364
+ 1032 print .transportTarget
  1033 set :drawPrint.28:x :drawText.28:x
  1034 set :drawPrint.28:y :drawText.28:y
  1035 set :drawPrint.28:alignment :drawText.28:alignment
 
  1126 label *label19
  1127 op equal *tmp376 .page 1
  1128 jump *label203 equal *tmp376 false
-    * read *tmp379 bank2 510
-    * set :displayStorage:tail *tmp379
+ 1129 read :displayStorage:tail bank2 510
  1130 jump *label206 equal .pageSwitched false
-    * read *tmp381 bank2 511
-    * set .lastTail *tmp381
+ 1131 read .lastTail bank2 511
  1132 draw col %[white]
  1133 set :displayStorage:y 165
  1134 set :displayStorage:item @copper
 
  1182 jump *label221 always
  1183 label *label220
  1184 label *label221
-    * set *tmp385 .lastTail
-    * read *tmp386 bank2 *tmp385
-    * set :displayStorage:accumulator *tmp386
-    * op add *tmp387 25 .lastTail
-    * set :displayStorage:x *tmp387
+ 1185 read :displayStorage:accumulator bank2 .lastTail
+ 1186 op add :displayStorage:x 25 .lastTail
  1187 set :displayStorage:y.1 165
  1188 setaddr *tmp388 *label225
  1189 jump *label222 always
 
  1212 setaddr *tmp388 *label233
  1213 label *label222
  1214 op and *tmp389 :displayStorage:accumulator 0b11111
-    * op sub *tmp390 *tmp389 8
-    * set :displayStorage:value *tmp390
+ 1215 op sub :displayStorage:value *tmp389 8
  1216 op greaterThanEq *tmp391 :displayStorage:value 0
  1217 jump *label234 equal *tmp391 false
  1218 set *tmp392 %[green]
 
  1377 op greaterThanEq *tmp398 :displayBaseMap:i 0
  1378 jump *label274 equal *tmp398 false
  1379 set .recentBuildIndex -1
-    * set *tmp400 :displayBaseMap:i
-    * readarr<regular> *tmp401 .BLOCKS[] *tmp400
-    * set :drawBlock:cfg *tmp401
+ 1380 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
  1381 setaddr :drawBlock*retaddr *label276 (h:*label276)
  1382 call *label5 *invalid :drawBlock*retval (m:*label276) (h:*label276)
  1383 label *label276
 
  1404 label *label238
  1405 jump *label237 always
  1406 label *label236
-    * op sub *tmp405 .page 3
-    * set :displayLog:page *tmp405
+ 1407 op sub :displayLog:page .page 3
  1408 set :displayLog:x 11
  1409 set :displayLog:y 163
-    * read *tmp406 bank1 511
-    * set :displayLog:logPosition *tmp406
-    * op sub *tmp407 511 :displayLog:logPosition
-    * set :displayLog:records *tmp407
+ 1410 read :displayLog:logPosition bank1 511
+ 1411 op sub :displayLog:records 511 :displayLog:logPosition
  1412 op sub *tmp408 :displayLog:records 1
  1413 op idiv *tmp409 *tmp408 32
  1414 op add *tmp410 *tmp409 1
-    * op max *tmp411 1 *tmp410
-    * set :displayLog:pages *tmp411
-    * op add *tmp412 :displayLog:pages 3
-    * set .numPages *tmp412
+ 1415 op max :displayLog:pages 1 *tmp410
+ 1416 op add .numPages :displayLog:pages 3
  1417 op mul *tmp413 32 :displayLog:page
-    * op sub *tmp414 511 *tmp413
-    * set :displayLog:start *tmp414
+ 1418 op sub :displayLog:start 511 *tmp413
  1419 op sub *tmp415 :displayLog:start 32
-    * op max *tmp416 :displayLog:logPosition *tmp415
-    * set :displayLog:stop *tmp416
+ 1420 op max :displayLog:stop :displayLog:logPosition *tmp415
  1421 draw col %[lightgray]
  1422 op add *tmp417 :displayLog:page 1
  1423 print *tmp417
 
  1437 op sub :displayLog:position :displayLog:start 1
  1438 label *label284
  1439 jump *label286 lessThan :displayLog:position *tmp418
-    * set *tmp419 :displayLog:position
-    * read *tmp420 bank1 *tmp419
-    * set :displayLog:record *tmp420
+ 1440 read :displayLog:record bank1 :displayLog:position
  1441 set :displayRecord:record :displayLog:record
-    * op mod *tmp421 :displayRecord:record 1000
-    * set :displayRecord:id *tmp421
+ 1442 op mod :displayRecord:id :displayRecord:record 1000
  1443 op greaterThan *tmp422 :displayRecord:id @blockCount
  1444 jump *label288 equal *tmp422 false
  1445 op sub *tmp424 :displayRecord:id @blockCount
-    * lookup unit *tmp425 *tmp424
-    * set *tmp423 *tmp425
+ 1446 lookup unit *tmp423 *tmp424
  1447 jump *label289 always
  1448 label *label288
-    * lookup block *tmp426 :displayRecord:id
-    * set *tmp423 *tmp426
+ 1449 lookup block *tmp423 :displayRecord:id
  1450 label *label289
  1451 set :displayRecord:icon *tmp423
  1452 op div *tmp427 :displayRecord:record 1000
  1453 op div *tmp428 *tmp427 120
-    * op floor *tmp429 *tmp428
-    * set :displayRecord:t *tmp429
-    * op idiv *tmp430 :displayRecord:t 60
-    * set :displayRecord:m *tmp430
-    * op mod *tmp431 :displayRecord:t 60
-    * set :displayRecord:s *tmp431
+ 1454 op floor :displayRecord:t *tmp428
+ 1455 op idiv :displayRecord:m :displayRecord:t 60
+ 1456 op mod :displayRecord:s :displayRecord:t 60
  1457 op lessThan *tmp432 :displayRecord:s 10
  1458 jump *label290 equal *tmp432 false
  1459 set *tmp433 "0"
 
  1518 print "\n"
  1519 print "==================================[]"
  1520 print "\n"
-    * set *tmp443 .status1
-    * print *tmp443
+ 1521 print .status1
  1522 print "\n"
  1523 print .status2
  1524 print .item2
 
  1527 print .block2
  1528 print ")"
  1529 print "\n"
-    * set *tmp444 .status3
-    * print *tmp444
+ 1530 print .status3
  1531 print "\n"
  1532 printflush message1
  1533 label *label301
  1534 label *label300
-    * sensor *tmp445 switch1 @enabled
-    * set .pageSwitched *tmp445
+ 1535 sensor .pageSwitched switch1 @enabled
  1536 jump *label302 equal .pageSwitched false
  1537 control enabled switch1 false
  1538 op add *tmp448 .page 1
-    * op mod *tmp449 *tmp448 .numPages
-    * set .page *tmp449
+ 1539 op mod .page *tmp448 .numPages
  1540 drawflush null
  1541 draw reset
  1542 draw clear 0 0 32
 
  1559 op add :unpackCfg:index :unpackCfg:index 1
  1560 read *tmp451 :unpackCfg:cfg *tmp450
  1561 op sub *tmp452 *tmp451 74
-    * lookup block *tmp453 *tmp452
-    * set :unpackCfg:type *tmp453
+ 1562 lookup block :unpackCfg:type *tmp452
  1563 set *tmp454 :unpackCfg:index
  1564 op add :unpackCfg:index :unpackCfg:index 1
  1565 read *tmp455 :unpackCfg:cfg *tmp454
  1566 op sub *tmp456 *tmp455 74
-    * op div *tmp457 *tmp456 2
-    * set :unpackCfg:x *tmp457
+ 1567 op div :unpackCfg:x *tmp456 2
  1568 set *tmp458 :unpackCfg:index
  1569 op add :unpackCfg:index :unpackCfg:index 1
  1570 read *tmp459 :unpackCfg:cfg *tmp458
  1571 op sub *tmp460 *tmp459 74
-    * op div *tmp461 *tmp460 2
-    * set :unpackCfg:y *tmp461
+ 1572 op div :unpackCfg:y *tmp460 2
  1573 set *tmp462 :unpackCfg:index
  1574 op add :unpackCfg:index :unpackCfg:index 1
  1575 read *tmp463 :unpackCfg:cfg *tmp462
-    * op sub *tmp464 *tmp463 74
-    * set :unpackCfg:rotation *tmp464
+ 1576 op sub :unpackCfg:rotation *tmp463 74
  1577 set *tmp465 :unpackCfg:index
  1578 op add :unpackCfg:index :unpackCfg:index 1
  1579 read *tmp466 :unpackCfg:cfg *tmp465
-    * op sub *tmp467 *tmp466 74
-    * set :unpackCfg:ind *tmp467
-    * sensor *tmp475 :unpackCfg:type @size
-    * set :unpackCfg:size *tmp475
+ 1580 op sub :unpackCfg:ind *tmp466 74
+ 1581 sensor :unpackCfg:size :unpackCfg:type @size
  1582 label *label306
  1583 set :unpackCfg2:type :unpackCfg:type
  1584 set :unpackCfg2:x :unpackCfg:x

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    26 printflush null
    27 drawflush null
    28 label *label14
-    * jump *label16 equal true false
    29 jump *label17 equal .unitReset false
    30 set .reconstructorProgress 0
    31 set .factoryProgress .reconstructorProgress

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-41 instructions):
 
    20 ubind @poly
    21 ulocate building core false @copper *tmp42 *tmp43 *tmp44 .core
    22 label *label12
-    * op equal *tmp45 .core null
-    * jump *label11 notEqual *tmp45 false
+   23 jump *label11 equal .core null
    24 label *label13
    25 printflush null
    26 drawflush null
 
    32 jump *label18 always
    33 label *label17
    34 label *label18
-    * op equal *tmp49 .page 0
-    * jump *label19 equal *tmp49 false
-    * op greaterThan *tmp51 .megas 0
-    * jump *label21 equal *tmp51 false
-    * op lessThan *tmp53 .animation 0
-    * jump *label24 equal *tmp53 false
+   35 jump *label19 notEqual .page 0
+   36 jump *label21 lessThanEq .megas 0
+   37 jump *label24 greaterThanEq .animation 0
    38 draw color 0 0 32 80
    39 draw rect 0 0 176 176
    40 jump *label25 always
 
   108 label *label31
   109 draw col %[white]
   110 op add :drawHeader:count .nextBlock .nextUnit
-    * op equal *tmp76 :drawHeader:count 2
-    * jump *label36 equal *tmp76 false
+  111 jump *label36 notEqual :drawHeader:count 2
   112 draw image 25 139 .nextBlock 25 0
   113 draw image 55 139 .nextUnit 25 0
   114 jump *label37 always
   115 label *label36
-    * op equal *tmp78 :drawHeader:count 1
-    * jump *label38 equal *tmp78 false
-    * op notEqual *tmp80 .nextBlock null
-    * jump *label40 equal *tmp80 false
+  116 jump *label38 notEqual :drawHeader:count 1
+  117 jump *label40 equal .nextBlock null
   118 set *tmp81 .nextBlock
   119 jump *label41 always
   120 label *label40
 
   135 op floor :drawHeader:t *tmp85
   136 op idiv :drawHeader:m :drawHeader:t 60
   137 op mod :drawHeader:s :drawHeader:t 60
-    * op lessThan *tmp89 :drawHeader:s 10
-    * jump *label42 equal *tmp89 false
+  138 jump *label42 greaterThanEq :drawHeader:s 10
   139 set *tmp90 "0"
   140 jump *label43 always
   141 label *label42
 
   214 label *label30
   215 set :drawMaterials:col 0
   216 set :drawMaterials:y 90
-    * op equal *tmp111 .nextBlock null
-    * jump *label55 equal *tmp111 false
+  217 jump *label55 notEqual .nextBlock null
   218 sensor *tmp113 A¾BFLW-air-factory13 @progress
   219 op max .factoryProgress .factoryProgress *tmp113
   220 sensor *tmp115 AÀF@L`-additive-reconstructor22 @progress
   221 op max .reconstructorProgress .reconstructorProgress *tmp115
   222 sensor :drawMaterials:multiReconstructorProgress AÁPBJf-multiplicative-reconstructor28 @progress
-    * op equal *tmp118 .nextUnit @mono
-    * jump *label57 equal *tmp118 false
+  223 jump *label57 notEqual .nextUnit @mono
   224 set :drawMaterials:targetFactoryLead 15
   225 set :drawMaterials:targetFactorySilicon 30
   226 set .materialCount 2
 
   231 set :drawMaterials:unit2 :drawMaterials:unit3
   232 jump *label58 always
   233 label *label57
-    * op equal *tmp123 .nextUnit @flare
-    * jump *label59 equal *tmp123 false
+  234 jump *label59 notEqual .nextUnit @flare
   235 set :drawMaterials:targetFactoryLead 0
   236 set :drawMaterials:targetFactorySilicon 15
   237 set .materialCount 1
 
   242 set :drawMaterials:unit2 :drawMaterials:unit3
   243 jump *label60 always
   244 label *label59
-    * op equal *tmp128 .nextUnit @poly
-    * jump *label61 equal *tmp128 false
+  245 jump *label61 notEqual .nextUnit @poly
   246 op floor :drawMaterials:unitCount1 .factoryProgress
   247 set :drawMaterials:unitCount2 .polys
   248 set :drawMaterials:unitTotal1 1
 
   254 op max .factoryProgress .factoryProgress *tmp134
   255 jump *label62 always
   256 label *label61
-    * op equal *tmp136 .nextUnit @mega
-    * jump *label63 equal *tmp136 false
+  257 jump *label63 notEqual .nextUnit @mega
   258 op floor :drawMaterials:unitCount1 .factoryProgress
   259 op floor :drawMaterials:unitCount2 .reconstructorProgress
   260 set :drawMaterials:unitTotal1 1
 
   296 label *label69
   297 label *label68
   298 label *label65
-    * op greaterThan *tmp146 .factoryProgress 0
-    * jump *label70 equal *tmp146 false
+  299 jump *label70 lessThanEq .factoryProgress 0
   300 set :drawItem:col 0
   301 set :drawItem:y 90
   302 set :drawItem:columns 1
 
   357 label *label76
   358 label *label73
   359 op add :drawItem:col :drawItem:col 1
-    * op greaterThanEq *tmp168 :drawItem:col :drawItem:columns
-    * jump *label78 equal *tmp168 false
+  360 jump *label78 lessThan :drawItem:col :drawItem:columns
   361 set :drawItem:col 0
   362 op sub :drawItem:y :drawItem:y 15
   363 jump *label79 always
   364 label *label78
   365 label *label79
   366 label *label72
-    * op notEqual *tmp170 :drawMaterials:unit2 null
-    * jump *label80 equal *tmp170 false
+  367 jump *label80 equal :drawMaterials:unit2 null
   368 set :drawItem.1:col 0
   369 set :drawItem.1:y 75
   370 set :drawItem.1:columns 1
 
   425 label *label86
   426 label *label83
   427 op add :drawItem.1:col :drawItem.1:col 1
-    * op greaterThanEq *tmp192 :drawItem.1:col :drawItem.1:columns
-    * jump *label88 equal *tmp192 false
+  428 jump *label88 lessThan :drawItem.1:col :drawItem.1:columns
   429 set :drawItem.1:col 0
   430 op sub :drawItem.1:y :drawItem.1:y 15
   431 jump *label89 always
   432 label *label88
   433 label *label89
   434 label *label82
-    * op notEqual *tmp194 :drawMaterials:unit3 null
-    * jump *label90 equal *tmp194 false
+  435 jump *label90 equal :drawMaterials:unit3 null
   436 set :drawItem.2:col 0
   437 set :drawItem.2:y 60
   438 set :drawItem.2:columns 1
 
   493 label *label96
   494 label *label93
   495 op add :drawItem.2:col :drawItem.2:col 1
-    * op greaterThanEq *tmp218 :drawItem.2:col :drawItem.2:columns
-    * jump *label98 equal *tmp218 false
+  496 jump *label98 lessThan :drawItem.2:col :drawItem.2:columns
   497 set :drawItem.2:col 0
   498 op sub :drawItem.2:y :drawItem.2:y 15
   499 jump *label99 always
 
   517 set :drawMaterials:target :drawMaterials:targetFactorySilicon
   518 setaddr *tmp220 *label104
   519 label *label100
-    * op greaterThan *tmp221 :drawMaterials:target 0
-    * jump *label105 equal *tmp221 false
+  520 jump *label105 lessThanEq :drawMaterials:target 0
   521 sensor *tmp223 A¾BFLW-air-factory13 :drawMaterials:item
   522 set :drawItem.3:col :drawMaterials:col
   523 set :drawItem.3:y :drawMaterials:y
 
   575 label *label111
   576 label *label108
   577 op add :drawItem.3:col :drawItem.3:col 1
-    * op greaterThanEq *tmp244 :drawItem.3:col :drawItem.3:columns
-    * jump *label113 equal *tmp244 false
+  578 jump *label113 lessThan :drawItem.3:col :drawItem.3:columns
   579 set :drawItem.3:col 0
   580 op sub :drawItem.3:y :drawItem.3:y 15
   581 jump *label114 always
 
   684 label *label126
   685 label *label123
   686 op add :drawItem.4:col :drawItem.4:col 1
-    * op greaterThanEq *tmp275 :drawItem.4:col :drawItem.4:columns
-    * jump *label128 equal *tmp275 false
+  687 jump *label128 lessThan :drawItem.4:col :drawItem.4:columns
   688 set :drawItem.4:col 0
   689 op sub :drawItem.4:y :drawItem.4:y 15
   690 jump *label129 always
 
   755 set :drawMaterials:target.1 .targetThorium
   756 setaddr *tmp280 *label146
   757 label *label137
-    * op greaterThan *tmp281 :drawMaterials:target.1 0
-    * jump *label147 equal *tmp281 false
+  758 jump *label147 lessThanEq :drawMaterials:target.1 0
   759 sensor *tmp283 .core :drawMaterials:item.1
   760 set :drawItem.5:col :drawMaterials:col
   761 set :drawItem.5:y :drawMaterials:y
 
   813 label *label153
   814 label *label150
   815 op add :drawItem.5:col :drawItem.5:col 1
-    * op greaterThanEq *tmp304 :drawItem.5:col :drawItem.5:columns
-    * jump *label155 equal *tmp304 false
+  816 jump *label155 lessThan :drawItem.5:col :drawItem.5:columns
   817 set :drawItem.5:col 0
   818 op sub :drawItem.5:y :drawItem.5:y 15
   819 jump *label156 always
 
   823 set :drawMaterials:col :drawItem.5:col
   824 set :drawMaterials:y :drawItem.5:y
   825 op sub :drawMaterials:count :drawMaterials:count 1
-    * op lessThanEq *tmp306 :drawMaterials:count 0
-    * jump *label157 equal *tmp306 false
+  826 jump *label157 greaterThan :drawMaterials:count 0
   827 jump *label139 always
   828 jump *label158 always
   829 label *label157
 
   842 label *label56
   843 label *label54
   844 draw col %[white]
-    * op lessThan *tmp308 .materialCount 4
-    * jump *label160 equal *tmp308 false
+  845 jump *label160 greaterThanEq .materialCount 4
   846 set *tmp309 40
   847 jump *label161 always
   848 label *label160
 
   873 label *label166
   874 label *label165
   875 label *label162
-    * op equal *tmp311 .transportItem null
-    * jump *label167 equal *tmp311 false
+  876 jump *label167 notEqual .transportItem null
   877 op sub *tmp313 :drawUnit:y 15
   878 set :drawUnit.1:item @poly
   879 set :drawUnit.1:items 0
 
   934 label *label174
   935 label *label171
   936 op add :drawItem.6:col :drawItem.6:col 1
-    * op greaterThanEq *tmp336 :drawItem.6:col :drawItem.6:columns
-    * jump *label176 equal *tmp336 false
+  937 jump *label176 lessThan :drawItem.6:col :drawItem.6:columns
   938 set :drawItem.6:col 0
   939 op sub :drawItem.6:y :drawItem.6:y 15
   940 jump *label177 always
 
  1009 label *label183
  1010 label *label180
  1011 op add :drawItem.7:col :drawItem.7:col 1
-    * op greaterThanEq *tmp365 :drawItem.7:col :drawItem.7:columns
-    * jump *label185 equal *tmp365 false
+ 1012 jump *label185 lessThan :drawItem.7:col :drawItem.7:columns
  1013 set :drawItem.7:col 0
  1014 op sub :drawItem.7:y :drawItem.7:y 15
  1015 jump *label186 always
 
  1024 draw col %[white]
  1025 set :drawUnitCount:type @poly
  1026 set :drawUnitCount:count .polys
-    * op greaterThan *tmp367 :drawUnitCount:count 0
-    * jump *label189 equal *tmp367 false
+ 1027 jump *label189 lessThanEq :drawUnitCount:count 0
  1028 op sub *tmp369 :drawUnits:x 20
  1029 draw image *tmp369 127 :drawUnitCount:type 12 0
  1030 set :drawText.29:x :drawUnits:x
 
  1045 label *label188
  1046 set :drawUnitCount.1:type @mono
  1047 set :drawUnitCount.1:count .monos
-    * op greaterThan *tmp370 :drawUnitCount.1:count 0
-    * jump *label194 equal *tmp370 false
+ 1048 jump *label194 lessThanEq :drawUnitCount.1:count 0
  1049 op sub *tmp372 :drawUnits:x 20
  1050 draw image *tmp372 127 :drawUnitCount.1:type 12 0
  1051 set :drawText.30:x :drawUnits:x
 
  1066 label *label193
  1067 set :drawUnitCount.2:type @flare
  1068 set :drawUnitCount.2:count .flares
-    * op greaterThan *tmp373 :drawUnitCount.2:count 0
-    * jump *label199 equal *tmp373 false
+ 1069 jump *label199 lessThanEq :drawUnitCount.2:count 0
  1070 op sub *tmp375 :drawUnits:x 20
  1071 draw image *tmp375 127 :drawUnitCount.2:type 12 0
  1072 set :drawText.31:x :drawUnits:x
 
  1091 label *label22
  1092 jump *label20 always
  1093 label *label19
-    * op equal *tmp376 .page 1
-    * jump *label203 equal *tmp376 false
+ 1094 jump *label203 notEqual .page 1
  1095 read :displayStorage:tail bank2 510
  1096 jump *label206 equal .pageSwitched false
  1097 read .lastTail bank2 511
 
  1142 jump *label207 always
  1143 label *label206
  1144 label *label207
-    * op greaterThan *tmp383 .lastTail :displayStorage:tail
-    * jump *label220 equal *tmp383 false
+ 1145 jump *label220 lessThanEq .lastTail :displayStorage:tail
  1146 jump *label205 always
  1147 jump *label221 always
  1148 label *label220
 
  1178 label *label222
  1179 op and *tmp389 :displayStorage:accumulator 0b11111
  1180 op sub :displayStorage:value *tmp389 8
-    * op greaterThanEq *tmp391 :displayStorage:value 0
-    * jump *label234 equal *tmp391 false
+ 1181 jump *label234 lessThan :displayStorage:value 0
  1182 set *tmp392 %[green]
  1183 jump *label235 always
  1184 label *label234
 
  1198 label *label205
  1199 jump *label204 always
  1200 label *label203
-    * op equal *tmp395 .page 2
-    * jump *label236 equal *tmp395 false
+ 1201 jump *label236 notEqual .page 2
  1202 draw reset
  1203 draw clear 0 0 32
  1204 draw col %[gold]
 
  1337 call *label5 *invalid :drawBlock*retval (m:*label273) (h:*label273)
  1338 label *label273
  1339 set :displayBaseMap:i .recentBuildIndex
-    * op greaterThanEq *tmp398 :displayBaseMap:i 0
-    * jump *label274 equal *tmp398 false
+ 1340 jump *label274 lessThan :displayBaseMap:i 0
  1341 set .recentBuildIndex -1
  1342 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
  1343 setaddr :drawBlock*retaddr *label276 (h:*label276)
 
  1402 read :displayLog:record bank1 :displayLog:position
  1403 set :displayRecord:record :displayLog:record
  1404 op mod :displayRecord:id :displayRecord:record 1000
-    * op greaterThan *tmp422 :displayRecord:id @blockCount
-    * jump *label288 equal *tmp422 false
+ 1405 jump *label288 lessThanEq :displayRecord:id @blockCount
  1406 op sub *tmp424 :displayRecord:id @blockCount
  1407 lookup unit *tmp423 *tmp424
  1408 jump *label289 always
 
  1415 op floor :displayRecord:t *tmp428
  1416 op idiv :displayRecord:m :displayRecord:t 60
  1417 op mod :displayRecord:s :displayRecord:t 60
-    * op lessThan *tmp432 :displayRecord:s 10
-    * jump *label290 equal *tmp432 false
+ 1418 jump *label290 greaterThanEq :displayRecord:s 10
  1419 set *tmp433 "0"
  1420 jump *label291 always
  1421 label *label290
 
  1441 label *label294
  1442 label *label293
  1443 op sub :displayLog:y :displayLog:y 15
-    * op lessThan *tmp437 :displayLog:y 10
-    * jump *label295 equal *tmp437 false
+ 1444 jump *label295 greaterThanEq :displayLog:y 10
  1445 op add :displayLog:x :displayLog:x 58
  1446 set :displayLog:y 164
  1447 jump *label296 always
 
  1465 label *label237
  1466 label *label204
  1467 label *label20
-    * op greaterThan *tmp441 .megas 0
-    * jump *label299 equal *tmp441 false
+ 1468 jump *label299 lessThanEq .megas 0
  1469 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  1470 print "\n"
  1471 printflush message1

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-30 instructions):
 
    29 set .reconstructorProgress 0
    30 set .factoryProgress .reconstructorProgress
    31 set .unitReset false
-    * jump *label18 always
    32 label *label17
    33 label *label18
    34 jump *label19 notEqual .page 0
 
   184 op mul *tmp102 7 :drawHeader:len
   185 op sub *tmp103 *tmp101 *tmp102
   186 draw image *tmp103 146 @titanium 12 0
-    * jump *label47 always
   187 label *label46
   188 label *label47
   189 jump *label50 equal .thoriumContainer false
 
   206 op mul *tmp109 7 :drawHeader:len.1
   207 op sub *tmp110 *tmp108 *tmp109
   208 draw image *tmp110 146 @thorium 12 0
-    * jump *label51 always
   209 label *label50
   210 label *label51
   211 label *label30
 
   263 op max .factoryProgress .factoryProgress *tmp141
   264 op greaterThan *tmp143 :drawMaterials:multiReconstructorProgress 0
   265 op max .reconstructorProgress .reconstructorProgress *tmp143
-    * jump *label64 always
   266 label *label63
   267 label *label64
   268 label *label62
 
   356 jump *label78 lessThan :drawItem:col :drawItem:columns
   357 set :drawItem:col 0
   358 op sub :drawItem:y :drawItem:y 15
-    * jump *label79 always
   359 label *label78
   360 label *label79
   361 label *label72
 
   423 jump *label88 lessThan :drawItem.1:col :drawItem.1:columns
   424 set :drawItem.1:col 0
   425 op sub :drawItem.1:y :drawItem.1:y 15
-    * jump *label89 always
   426 label *label88
   427 label *label89
   428 label *label82
 
   490 jump *label98 lessThan :drawItem.2:col :drawItem.2:columns
   491 set :drawItem.2:col 0
   492 op sub :drawItem.2:y :drawItem.2:y 15
-    * jump *label99 always
   493 label *label98
   494 label *label99
   495 label *label92
-    * jump *label91 always
   496 label *label90
   497 label *label91
-    * jump *label81 always
   498 label *label80
   499 label *label81
   500 jump *label71 always
 
   569 jump *label113 lessThan :drawItem.3:col :drawItem.3:columns
   570 set :drawItem.3:col 0
   571 op sub :drawItem.3:y :drawItem.3:y 15
-    * jump *label114 always
   572 label *label113
   573 label *label114
   574 label *label107
   575 set :drawMaterials:col :drawItem.3:col
   576 set :drawMaterials:y :drawItem.3:y
-    * jump *label106 always
   577 label *label105
   578 label *label106
   579 label *label101
 
   676 jump *label128 lessThan :drawItem.4:col :drawItem.4:columns
   677 set :drawItem.4:col 0
   678 op sub :drawItem.4:y :drawItem.4:y 15
-    * jump *label129 always
   679 label *label128
   680 label *label129
   681 label *label122
 
   804 jump *label155 lessThan :drawItem.5:col :drawItem.5:columns
   805 set :drawItem.5:col 0
   806 op sub :drawItem.5:y :drawItem.5:y 15
-    * jump *label156 always
   807 label *label155
   808 label *label156
   809 label *label149
 
   812 op sub :drawMaterials:count :drawMaterials:count 1
   813 jump *label157 greaterThan :drawMaterials:count 0
   814 jump *label139 always
-    * jump *label158 always
   815 label *label157
   816 label *label158
-    * jump *label148 always
   817 label *label147
   818 label *label148
   819 label *label138
   820 multijump *tmp280 0 0 (m:marker1)
   821 multilabel *label146 (m:marker1)
   822 label *label139
-    * jump *label136 always
   823 label *label135
   824 label *label136
   825 label *label116
 
   921 jump *label176 lessThan :drawItem.6:col :drawItem.6:columns
   922 set :drawItem.6:col 0
   923 op sub :drawItem.6:y :drawItem.6:y 15
-    * jump *label177 always
   924 label *label176
   925 label *label177
   926 label *label170
 
   995 jump *label185 lessThan :drawItem.7:col :drawItem.7:columns
   996 set :drawItem.7:col 0
   997 op sub :drawItem.7:y :drawItem.7:y 15
-    * jump *label186 always
   998 label *label185
   999 label *label186
  1000 label *label179
 
  1021 label *label192
  1022 label *label191
  1023 op sub :drawUnits:x :drawUnits:x 30
-    * jump *label190 always
  1024 label *label189
  1025 label *label190
  1026 label *label188
 
  1041 label *label197
  1042 label *label196
  1043 op sub :drawUnits:x :drawUnits:x 30
-    * jump *label195 always
  1044 label *label194
  1045 label *label195
  1046 label *label193
 
  1061 label *label202
  1062 label *label201
  1063 op sub :drawUnits:x :drawUnits:x 30
-    * jump *label200 always
  1064 label *label199
  1065 label *label200
  1066 label *label198
 
  1118 multilabel *label219 (m:marker2)
  1119 label *label210
  1120 drawflush display1
-    * jump *label207 always
  1121 label *label206
  1122 label *label207
  1123 jump *label220 lessThanEq .lastTail :displayStorage:tail
  1124 jump *label205 always
-    * jump *label221 always
  1125 label *label220
  1126 label *label221
  1127 read :displayStorage:accumulator bank2 .lastTail
 
  1320 setaddr :drawBlock*retaddr *label276 (h:*label276)
  1321 call *label5 *invalid :drawBlock*retval (m:*label276) (h:*label276)
  1322 label *label276
-    * jump *label275 always
  1323 label *label274
  1324 label *label275
  1325 sensor *tmp402 switch1 @enabled
  1326 jump *label277 equal *tmp402 false
  1327 draw clear 0 0 32
  1328 jump *label243 always
-    * jump *label278 always
  1329 label *label277
  1330 label *label278
  1331 jump *label279 equal .pageSwitched false
  1332 drawflush display1
-    * jump *label280 always
  1333 label *label279
  1334 label *label280
  1335 label *label242
 
  1418 jump *label295 greaterThanEq :displayLog:y 10
  1419 op add :displayLog:x :displayLog:x 58
  1420 set :displayLog:y 164
-    * jump *label296 always
  1421 label *label295
  1422 label *label296
  1423 label *label292
 
  1426 sensor *tmp439 switch1 @enabled
  1427 jump *label297 equal *tmp439 false
  1428 jump *label286 always
-    * jump *label298 always
  1429 label *label297
  1430 label *label298
  1431 label *label285
 
  1470 drawflush null
  1471 draw reset
  1472 draw clear 0 0 32
-    * jump *label303 always
  1473 label *label302
  1474 label *label303
  1475 label *label15
 
  1537 op mul *tmp483 2 :drawBlock:size
  1538 op mul *tmp484 90 :drawBlock:rotation
  1539 draw image *tmp481 *tmp482 :drawBlock:type *tmp483 *tmp484
-    * jump *label308 always
  1540 label *label307
  1541 label *label308
  1542 label *label304

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
   130 label *label37
   131 set :drawHeader:tt @second
   132 read *tmp0 processor1 "time"
-    * op div *tmp85 *tmp0 120
-    * op floor :drawHeader:t *tmp85
+  133 op idiv :drawHeader:t *tmp0 120
   134 op idiv :drawHeader:m :drawHeader:t 60
   135 op mod :drawHeader:s :drawHeader:t 60
   136 jump *label42 greaterThanEq :drawHeader:s 10
 
  1384 label *label289
  1385 set :displayRecord:icon *tmp423
  1386 op div *tmp427 :displayRecord:record 1000
-    * op div *tmp428 *tmp427 120
-    * op floor :displayRecord:t *tmp428
+ 1387 op idiv :displayRecord:t *tmp427 120
  1388 op idiv :displayRecord:m :displayRecord:t 60
  1389 op mod :displayRecord:s :displayRecord:t 60
  1390 jump *label290 greaterThanEq :displayRecord:s 10

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-9 instructions):
 
    27 label *label14
    28 jump *label17 equal .unitReset false
    29 set .reconstructorProgress 0
-    * set .factoryProgress .reconstructorProgress
+   30 set .factoryProgress 0
    31 set .unitReset false
    32 label *label17
    33 label *label18
 
    48 set :lerp:from 40
    49 set :lerp:to 88
    50 set :lerp:ratio :animate:ratio
-    * op sub *tmp59 1 :lerp:ratio
-    * op mul *tmp60 *tmp59 :lerp:from
-    * op mul *tmp61 :lerp:ratio :lerp:to
+   51 op sub *tmp59 1 :animate:ratio
+   52 op mul *tmp60 *tmp59 40
+   53 op mul *tmp61 :animate:ratio 88
    54 op add *tmp58 *tmp60 *tmp61
    55 label *label26
    56 set :animate:x *tmp58
    57 set :lerp.1:from 137
    58 set :lerp.1:to 88
    59 set :lerp.1:ratio :animate:ratio
-    * op sub *tmp64 1 :lerp.1:ratio
-    * op mul *tmp65 *tmp64 :lerp.1:from
-    * op mul *tmp66 :lerp.1:ratio :lerp.1:to
+   60 op sub *tmp64 1 :animate:ratio
+   61 op mul *tmp65 *tmp59 137
+   62 op mul *tmp66 :animate:ratio 88
    63 op add *tmp63 *tmp65 *tmp66
    64 label *label27
    65 set :animate:y *tmp63
    66 set :lerp.2:from 32
    67 set :lerp.2:to 168
    68 set :lerp.2:ratio :animate:ratio
-    * op sub *tmp69 1 :lerp.2:ratio
-    * op mul *tmp70 *tmp69 :lerp.2:from
-    * op mul *tmp71 :lerp.2:ratio :lerp.2:to
+   69 op sub *tmp69 1 :animate:ratio
+   70 op mul *tmp70 *tmp59 32
+   71 op mul *tmp71 :animate:ratio 168
    72 op add *tmp68 *tmp70 *tmp71
    73 label *label28
    74 set :animate:size *tmp68
-    * draw image :animate:x :animate:y @mega :animate:size 0
+   75 draw image *tmp58 *tmp63 @mega *tmp68 0
    76 drawflush display1
    77 op add .animation .animation 1
    78 label *label23
 
    84 set :drawBold:x 40
    85 set :drawBold:y 161
    86 set :drawBold:alignment @bottom
-    * set :drawText:x :drawBold:x
-    * set :drawText:y :drawBold:y
-    * set :drawText:alignment :drawBold:alignment
+   87 set :drawText:x 40
+   88 set :drawText:y 161
+   89 set :drawText:alignment @bottom
    90 print "Goal"
-    * set :drawPrint:x :drawText:x
-    * set :drawPrint:y :drawText:y
-    * set :drawPrint:alignment :drawText:alignment
-    * draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
+   91 set :drawPrint:x :drawBold:x
+   92 set :drawPrint:y :drawBold:y
+   93 set :drawPrint:alignment :drawBold:alignment
+   94 draw print :drawText:x :drawText:y :drawText:alignment
    95 label *label33
    96 label *label32
-    * op add :drawText.1:x :drawBold:x 1
-    * set :drawText.1:y :drawBold:y
-    * set :drawText.1:alignment :drawBold:alignment
+   97 op add :drawText.1:x 40 1
+   98 set :drawText.1:y 161
+   99 set :drawText.1:alignment @bottom
   100 print "Goal"
-    * set :drawPrint.1:x :drawText.1:x
-    * set :drawPrint.1:y :drawText.1:y
-    * set :drawPrint.1:alignment :drawText.1:alignment
-    * draw print :drawPrint.1:x :drawPrint.1:y :drawPrint.1:alignment
+  101 set :drawPrint.1:x 41
+  102 set :drawPrint.1:y :drawBold:y
+  103 set :drawPrint.1:alignment :drawBold:alignment
+  104 draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
   105 label *label35
   106 label *label34
   107 label *label31
 
   156 set :drawText.2:y 172
   157 set :drawText.2:alignment @topRight
   158 print ")"
-    * set :drawPrint.2:x :drawText.2:x
-    * set :drawPrint.2:y :drawText.2:y
-    * set :drawPrint.2:alignment :drawText.2:alignment
-    * draw print :drawPrint.2:x :drawPrint.2:y :drawPrint.2:alignment
+  159 set :drawPrint.2:x 170
+  160 set :drawPrint.2:y 172
+  161 set :drawPrint.2:alignment @topRight
+  162 draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
   163 label *label45
   164 label *label44
   165 jump *label46 equal .titaniumDrill false
 
   168 set :drawHeader:x 170
   169 op log10 *tmp99 :drawHeader:count
   170 op floor :drawHeader:len *tmp99
-    * set :drawText.3:x :drawHeader:x
+  171 set :drawText.3:x 170
   172 set :drawText.3:y 155
   173 set :drawText.3:alignment @topRight
   174 print "x"
   175 print :drawHeader:count
-    * set :drawPrint.3:x :drawText.3:x
-    * set :drawPrint.3:y :drawText.3:y
-    * set :drawPrint.3:alignment :drawText.3:alignment
-    * draw print :drawPrint.3:x :drawPrint.3:y :drawPrint.3:alignment
+  176 set :drawPrint.3:x :drawHeader:x
+  177 set :drawPrint.3:y 155
+  178 set :drawPrint.3:alignment @topRight
+  179 draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
   180 label *label49
   181 label *label48
-    * op sub *tmp101 :drawHeader:x 20
+  182 op sub *tmp101 170 20
   183 op mul *tmp102 7 :drawHeader:len
-    * op sub *tmp103 *tmp101 *tmp102
+  184 op sub *tmp103 150 *tmp102
   185 draw image *tmp103 146 @titanium 12 0
   186 label *label46
   187 label *label47
 
   190 set :drawHeader:x.1 120
   191 op log10 *tmp106 :drawHeader:count
   192 op floor :drawHeader:len.1 *tmp106
-    * set :drawText.4:x :drawHeader:x.1
+  193 set :drawText.4:x 120
   194 set :drawText.4:y 155
   195 set :drawText.4:alignment @topRight
   196 print "x"
   197 print :drawHeader:count
-    * set :drawPrint.4:x :drawText.4:x
-    * set :drawPrint.4:y :drawText.4:y
-    * set :drawPrint.4:alignment :drawText.4:alignment
-    * draw print :drawPrint.4:x :drawPrint.4:y :drawPrint.4:alignment
+  198 set :drawPrint.4:x :drawHeader:x.1
+  199 set :drawPrint.4:y 155
+  200 set :drawPrint.4:alignment @topRight
+  201 draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
   202 label *label53
   203 label *label52
-    * op sub *tmp108 :drawHeader:x.1 20
+  204 op sub *tmp108 120 20
   205 op mul *tmp109 7 :drawHeader:len.1
-    * op sub *tmp110 *tmp108 *tmp109
+  206 op sub *tmp110 100 *tmp109
   207 draw image *tmp110 146 @thorium 12 0
   208 label *label50
   209 label *label51
 
   224 set :drawMaterials:unitTotal1 .monoTarget
   225 set :drawMaterials:unit1 .nextUnit
   226 set :drawMaterials:unit3 null
-    * set :drawMaterials:unit2 :drawMaterials:unit3
+  227 set :drawMaterials:unit2 null
   228 jump *label58 always
   229 label *label57
   230 jump *label59 notEqual .nextUnit @flare
 
   235 set :drawMaterials:unitTotal1 .flareTarget
   236 set :drawMaterials:unit1 .nextUnit
   237 set :drawMaterials:unit3 null
-    * set :drawMaterials:unit2 :drawMaterials:unit3
+  238 set :drawMaterials:unit2 null
   239 jump *label60 always
   240 label *label59
   241 jump *label61 notEqual .nextUnit @poly
 
   270 set :drawBold.1:x 22
   271 set :drawBold.1:y 105
   272 set :drawBold.1:alignment @bottomLeft
-    * set :drawText.5:x :drawBold.1:x
-    * set :drawText.5:y :drawBold.1:y
-    * set :drawText.5:alignment :drawBold.1:alignment
+  273 set :drawText.5:x 22
+  274 set :drawText.5:y 105
+  275 set :drawText.5:alignment @bottomLeft
   276 print "Unit factories"
-    * set :drawPrint.5:x :drawText.5:x
-    * set :drawPrint.5:y :drawText.5:y
-    * set :drawPrint.5:alignment :drawText.5:alignment
-    * draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
+  277 set :drawPrint.5:x :drawBold.1:x
+  278 set :drawPrint.5:y :drawBold.1:y
+  279 set :drawPrint.5:alignment :drawBold.1:alignment
+  280 draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
   281 label *label67
   282 label *label66
-    * op add :drawText.6:x :drawBold.1:x 1
-    * set :drawText.6:y :drawBold.1:y
-    * set :drawText.6:alignment :drawBold.1:alignment
+  283 op add :drawText.6:x 22 1
+  284 set :drawText.6:y 105
+  285 set :drawText.6:alignment @bottomLeft
   286 print "Unit factories"
-    * set :drawPrint.6:x :drawText.6:x
-    * set :drawPrint.6:y :drawText.6:y
-    * set :drawPrint.6:alignment :drawText.6:alignment
-    * draw print :drawPrint.6:x :drawPrint.6:y :drawPrint.6:alignment
+  287 set :drawPrint.6:x 23
+  288 set :drawPrint.6:y :drawBold.1:y
+  289 set :drawPrint.6:alignment :drawBold.1:alignment
+  290 draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
   291 label *label69
   292 label *label68
   293 label *label65
 
   298 set :drawItem:item :drawMaterials:unit1
   299 set :drawItem:current .factoryProgress
   300 set :drawItem:target 1
-    * op mul *tmp148 :drawItem:columns 176
-    * op div *tmp149 *tmp148 2
-    * op sub :drawItem:barLength 210 *tmp149
-    * op add :drawItem:textEnd 48 :drawItem:barLength
-    * op mul *tmp152 :drawItem:barLength :drawItem:current
-    * op div *tmp153 *tmp152 :drawItem:target
-    * op min :drawItem:length :drawItem:barLength *tmp153
-    * op mul *tmp155 :drawItem:col 176
-    * op div *tmp156 *tmp155 2
-    * op add :drawItem:iconX 11 *tmp156
-    * op mul *tmp158 :drawItem:col 176
-    * op div *tmp159 *tmp158 2
-    * op add :drawItem:barX 22 *tmp159
-    * op mul *tmp161 :drawItem:col 176
-    * op div *tmp162 *tmp161 2
-    * op add :drawItem:textX :drawItem:textEnd *tmp162
+  301 op mul *tmp148 1 176
+  302 op div *tmp149 176 2
+  303 op sub :drawItem:barLength 210 88
+  304 op add :drawItem:textEnd 48 122
+  305 op mul *tmp152 122 .factoryProgress
+  306 op div *tmp153 *tmp152 1
+  307 op min :drawItem:length 122 *tmp153
+  308 op mul *tmp155 0 176
+  309 op div *tmp156 0 2
+  310 op add :drawItem:iconX 11 0
+  311 op mul *tmp158 0 176
+  312 op div *tmp159 0 2
+  313 op add :drawItem:barX 22 0
+  314 op mul *tmp161 0 176
+  315 op div *tmp162 0 2
+  316 op add :drawItem:textX 170 0
   317 draw col %[white]
-    * op add *tmp164 :drawItem:y 5
-    * draw image :drawItem:iconX *tmp164 :drawItem:item 16 0
+  318 op add *tmp164 90 5
+  319 draw image 11 95 :drawMaterials:unit1 16 0
   320 draw color 0 128 0 255
-    * draw rect :drawItem:barX :drawItem:y :drawItem:length 10
+  321 draw rect 22 90 :drawItem:length 10
   322 draw color 0 255 0 255
-    * draw lineRect :drawItem:barX :drawItem:y :drawItem:barLength 10
-    * op add *tmp165 :drawItem:y 5
-    * op add *tmp166 *tmp165 2
-    * set :drawBold.2:x :drawItem:textX
-    * set :drawBold.2:y *tmp166
+  323 draw lineRect 22 90 122 10
+  324 op add *tmp165 90 5
+  325 op add *tmp166 95 2
+  326 set :drawBold.2:x 170
+  327 set :drawBold.2:y 97
   328 set :drawBold.2:alignment @right
-    * set :drawText.7:x :drawBold.2:x
-    * set :drawText.7:y :drawBold.2:y
-    * set :drawText.7:alignment :drawBold.2:alignment
+  329 set :drawText.7:x :drawItem:textX
+  330 set :drawText.7:y *tmp166
+  331 set :drawText.7:alignment @right
   332 print :drawMaterials:unitCount1
   333 print "/"
   334 print :drawMaterials:unitTotal1
-    * set :drawPrint.7:x :drawText.7:x
-    * set :drawPrint.7:y :drawText.7:y
-    * set :drawPrint.7:alignment :drawText.7:alignment
-    * draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
+  335 set :drawPrint.7:x :drawBold.2:x
+  336 set :drawPrint.7:y :drawBold.2:y
+  337 set :drawPrint.7:alignment :drawBold.2:alignment
+  338 draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
   339 label *label75
   340 label *label74
-    * op add :drawText.8:x :drawBold.2:x 1
-    * set :drawText.8:y :drawBold.2:y
-    * set :drawText.8:alignment :drawBold.2:alignment
+  341 op add :drawText.8:x :drawItem:textX 1
+  342 set :drawText.8:y *tmp166
+  343 set :drawText.8:alignment @right
   344 print :drawMaterials:unitCount1
   345 print "/"
   346 print :drawMaterials:unitTotal1
   347 set :drawPrint.8:x :drawText.8:x
-    * set :drawPrint.8:y :drawText.8:y
-    * set :drawPrint.8:alignment :drawText.8:alignment
-    * draw print :drawPrint.8:x :drawPrint.8:y :drawPrint.8:alignment
+  348 set :drawPrint.8:y :drawBold.2:y
+  349 set :drawPrint.8:alignment :drawBold.2:alignment
+  350 draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
   351 label *label77
   352 label *label76
   353 label *label73
-    * op add :drawItem:col :drawItem:col 1
-    * jump *label78 lessThan :drawItem:col :drawItem:columns
-    * set :drawItem:col 0
-    * op sub :drawItem:y :drawItem:y 15
+  354 op add :drawItem:col 0 1
+  355 jump *label78 lessThan 1 1
+  356 op sub :drawItem:y 90 15
   357 label *label78
   358 label *label79
   359 label *label72
 
   364 set :drawItem.1:item :drawMaterials:unit2
   365 set :drawItem.1:current .reconstructorProgress
   366 set :drawItem.1:target 1
-    * op mul *tmp172 :drawItem.1:columns 176
-    * op div *tmp173 *tmp172 2
-    * op sub :drawItem.1:barLength 210 *tmp173
-    * op add :drawItem.1:textEnd 48 :drawItem.1:barLength
-    * op mul *tmp176 :drawItem.1:barLength :drawItem.1:current
-    * op div *tmp177 *tmp176 :drawItem.1:target
-    * op min :drawItem.1:length :drawItem.1:barLength *tmp177
-    * op mul *tmp179 :drawItem.1:col 176
-    * op div *tmp180 *tmp179 2
-    * op add :drawItem.1:iconX 11 *tmp180
-    * op mul *tmp182 :drawItem.1:col 176
-    * op div *tmp183 *tmp182 2
-    * op add :drawItem.1:barX 22 *tmp183
-    * op mul *tmp185 :drawItem.1:col 176
-    * op div *tmp186 *tmp185 2
-    * op add :drawItem.1:textX :drawItem.1:textEnd *tmp186
+  367 op mul *tmp172 1 176
+  368 op div *tmp173 176 2
+  369 op sub :drawItem.1:barLength 210 88
+  370 op add :drawItem.1:textEnd 48 122
+  371 op mul *tmp176 122 .reconstructorProgress
+  372 op div *tmp177 *tmp176 1
+  373 op min :drawItem.1:length 122 *tmp177
+  374 op mul *tmp179 0 176
+  375 op div *tmp180 0 2
+  376 op add :drawItem.1:iconX 11 0
+  377 op mul *tmp182 0 176
+  378 op div *tmp183 0 2
+  379 op add :drawItem.1:barX 22 0
+  380 op mul *tmp185 0 176
+  381 op div *tmp186 0 2
+  382 op add :drawItem.1:textX 170 0
   383 draw col %[white]
-    * op add *tmp188 :drawItem.1:y 5
-    * draw image :drawItem.1:iconX *tmp188 :drawItem.1:item 16 0
+  384 op add *tmp188 75 5
+  385 draw image 11 80 :drawMaterials:unit2 16 0
   386 draw color 0 128 0 255
-    * draw rect :drawItem.1:barX :drawItem.1:y :drawItem.1:length 10
+  387 draw rect 22 75 :drawItem.1:length 10
   388 draw color 0 255 0 255
-    * draw lineRect :drawItem.1:barX :drawItem.1:y :drawItem.1:barLength 10
-    * op add *tmp189 :drawItem.1:y 5
-    * op add *tmp190 *tmp189 2
-    * set :drawBold.3:x :drawItem.1:textX
-    * set :drawBold.3:y *tmp190
+  389 draw lineRect 22 75 122 10
+  390 op add *tmp189 75 5
+  391 op add *tmp190 80 2
+  392 set :drawBold.3:x 170
+  393 set :drawBold.3:y 82
   394 set :drawBold.3:alignment @right
-    * set :drawText.9:x :drawBold.3:x
-    * set :drawText.9:y :drawBold.3:y
-    * set :drawText.9:alignment :drawBold.3:alignment
+  395 set :drawText.9:x :drawItem.1:textX
+  396 set :drawText.9:y *tmp190
+  397 set :drawText.9:alignment @right
   398 print :drawMaterials:unitCount2
   399 print "/"
   400 print :drawMaterials:unitTotal2
-    * set :drawPrint.9:x :drawText.9:x
-    * set :drawPrint.9:y :drawText.9:y
-    * set :drawPrint.9:alignment :drawText.9:alignment
-    * draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
+  401 set :drawPrint.9:x :drawBold.3:x
+  402 set :drawPrint.9:y :drawBold.3:y
+  403 set :drawPrint.9:alignment :drawBold.3:alignment
+  404 draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
   405 label *label85
   406 label *label84
-    * op add :drawText.10:x :drawBold.3:x 1
-    * set :drawText.10:y :drawBold.3:y
-    * set :drawText.10:alignment :drawBold.3:alignment
+  407 op add :drawText.10:x :drawItem.1:textX 1
+  408 set :drawText.10:y *tmp190
+  409 set :drawText.10:alignment @right
   410 print :drawMaterials:unitCount2
   411 print "/"
   412 print :drawMaterials:unitTotal2
   413 set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawText.10:y
-    * set :drawPrint.10:alignment :drawText.10:alignment
-    * draw print :drawPrint.10:x :drawPrint.10:y :drawPrint.10:alignment
+  414 set :drawPrint.10:y :drawBold.3:y
+  415 set :drawPrint.10:alignment :drawBold.3:alignment
+  416 draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
   417 label *label87
   418 label *label86
   419 label *label83
-    * op add :drawItem.1:col :drawItem.1:col 1
-    * jump *label88 lessThan :drawItem.1:col :drawItem.1:columns
-    * set :drawItem.1:col 0
-    * op sub :drawItem.1:y :drawItem.1:y 15
+  420 op add :drawItem.1:col 0 1
+  421 jump *label88 lessThan 1 1
+  422 op sub :drawItem.1:y 75 15
   423 label *label88
   424 label *label89
   425 label *label82
 
   430 set :drawItem.2:item :drawMaterials:unit3
   431 set :drawItem.2:current :drawMaterials:multiReconstructorProgress
   432 set :drawItem.2:target 1
-    * op mul *tmp196 :drawItem.2:columns 176
-    * op div *tmp197 *tmp196 2
-    * op sub :drawItem.2:barLength 210 *tmp197
-    * op add :drawItem.2:textEnd 48 :drawItem.2:barLength
-    * op mul *tmp200 :drawItem.2:barLength :drawItem.2:current
-    * op div *tmp201 *tmp200 :drawItem.2:target
-    * op min :drawItem.2:length :drawItem.2:barLength *tmp201
-    * op mul *tmp203 :drawItem.2:col 176
-    * op div *tmp204 *tmp203 2
-    * op add :drawItem.2:iconX 11 *tmp204
-    * op mul *tmp206 :drawItem.2:col 176
-    * op div *tmp207 *tmp206 2
-    * op add :drawItem.2:barX 22 *tmp207
-    * op mul *tmp209 :drawItem.2:col 176
-    * op div *tmp210 *tmp209 2
-    * op add :drawItem.2:textX :drawItem.2:textEnd *tmp210
+  433 op mul *tmp196 1 176
+  434 op div *tmp197 176 2
+  435 op sub :drawItem.2:barLength 210 88
+  436 op add :drawItem.2:textEnd 48 122
+  437 op mul *tmp200 122 :drawMaterials:multiReconstructorProgress
+  438 op div *tmp201 *tmp200 1
+  439 op min :drawItem.2:length 122 *tmp201
+  440 op mul *tmp203 0 176
+  441 op div *tmp204 0 2
+  442 op add :drawItem.2:iconX 11 0
+  443 op mul *tmp206 0 176
+  444 op div *tmp207 0 2
+  445 op add :drawItem.2:barX 22 0
+  446 op mul *tmp209 0 176
+  447 op div *tmp210 0 2
+  448 op add :drawItem.2:textX 170 0
   449 draw col %[white]
-    * op add *tmp212 :drawItem.2:y 5
-    * draw image :drawItem.2:iconX *tmp212 :drawItem.2:item 16 0
+  450 op add *tmp212 60 5
+  451 draw image 11 65 :drawMaterials:unit3 16 0
   452 draw color 0 128 0 255
-    * draw rect :drawItem.2:barX :drawItem.2:y :drawItem.2:length 10
+  453 draw rect 22 60 :drawItem.2:length 10
   454 draw color 0 255 0 255
-    * draw lineRect :drawItem.2:barX :drawItem.2:y :drawItem.2:barLength 10
-    * op add *tmp213 :drawItem.2:y 5
-    * op add *tmp214 *tmp213 2
-    * set :drawBold.4:x :drawItem.2:textX
-    * set :drawBold.4:y *tmp214
+  455 draw lineRect 22 60 122 10
+  456 op add *tmp213 60 5
+  457 op add *tmp214 65 2
+  458 set :drawBold.4:x 170
+  459 set :drawBold.4:y 67
   460 set :drawBold.4:alignment @right
-    * set :drawText.11:x :drawBold.4:x
-    * set :drawText.11:y :drawBold.4:y
-    * set :drawText.11:alignment :drawBold.4:alignment
+  461 set :drawText.11:x :drawItem.2:textX
+  462 set :drawText.11:y *tmp214
+  463 set :drawText.11:alignment @right
   464 print .megas
   465 print "/"
   466 print .megaTarget
-    * set :drawPrint.11:x :drawText.11:x
-    * set :drawPrint.11:y :drawText.11:y
-    * set :drawPrint.11:alignment :drawText.11:alignment
-    * draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
+  467 set :drawPrint.11:x :drawBold.4:x
+  468 set :drawPrint.11:y :drawBold.4:y
+  469 set :drawPrint.11:alignment :drawBold.4:alignment
+  470 draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
   471 label *label95
   472 label *label94
-    * op add :drawText.12:x :drawBold.4:x 1
-    * set :drawText.12:y :drawBold.4:y
-    * set :drawText.12:alignment :drawBold.4:alignment
+  473 op add :drawText.12:x :drawItem.2:textX 1
+  474 set :drawText.12:y *tmp214
+  475 set :drawText.12:alignment @right
   476 print .megas
   477 print "/"
   478 print .megaTarget
   479 set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawText.12:y
-    * set :drawPrint.12:alignment :drawText.12:alignment
-    * draw print :drawPrint.12:x :drawPrint.12:y :drawPrint.12:alignment
+  480 set :drawPrint.12:y :drawBold.4:y
+  481 set :drawPrint.12:alignment :drawBold.4:alignment
+  482 draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
   483 label *label97
   484 label *label96
   485 label *label93
-    * op add :drawItem.2:col :drawItem.2:col 1
-    * jump *label98 lessThan :drawItem.2:col :drawItem.2:columns
-    * set :drawItem.2:col 0
-    * op sub :drawItem.2:y :drawItem.2:y 15
+  486 op add :drawItem.2:col 0 1
+  487 jump *label98 lessThan 1 1
+  488 op sub :drawItem.2:y 60 15
   489 label *label98
   490 label *label99
   491 label *label92
 
   512 set :drawItem.3:item :drawMaterials:item
   513 set :drawItem.3:current *tmp223
   514 set :drawItem.3:target :drawMaterials:target
-    * op mul *tmp224 :drawItem.3:columns 176
-    * op div *tmp225 *tmp224 2
-    * op sub :drawItem.3:barLength 210 *tmp225
-    * op add :drawItem.3:textEnd 48 :drawItem.3:barLength
-    * op mul *tmp228 :drawItem.3:barLength :drawItem.3:current
-    * op div *tmp229 *tmp228 :drawItem.3:target
-    * op min :drawItem.3:length :drawItem.3:barLength *tmp229
-    * op mul *tmp231 :drawItem.3:col 176
-    * op div *tmp232 *tmp231 2
+  515 op mul *tmp224 1 176
+  516 op div *tmp225 176 2
+  517 op sub :drawItem.3:barLength 210 88
+  518 op add :drawItem.3:textEnd 48 122
+  519 op mul *tmp228 122 *tmp223
+  520 op div *tmp229 *tmp228 :drawMaterials:target
+  521 op min :drawItem.3:length 122 *tmp229
+  522 op mul *tmp231 :drawMaterials:col 176
+  523 op mul *tmp232 :drawItem.3:col 88
   524 op add :drawItem.3:iconX 11 *tmp232
-    * op mul *tmp234 :drawItem.3:col 176
-    * op div *tmp235 *tmp234 2
-    * op add :drawItem.3:barX 22 *tmp235
-    * op mul *tmp237 :drawItem.3:col 176
-    * op div *tmp238 *tmp237 2
-    * op add :drawItem.3:textX :drawItem.3:textEnd *tmp238
+  525 op mul *tmp234 :drawMaterials:col 176
+  526 op div *tmp235 *tmp231 2
+  527 op add :drawItem.3:barX 22 *tmp232
+  528 op mul *tmp237 :drawMaterials:col 176
+  529 op div *tmp238 *tmp231 2
+  530 op add :drawItem.3:textX 170 *tmp232
   531 draw col %[white]
-    * op add *tmp240 :drawItem.3:y 5
-    * draw image :drawItem.3:iconX *tmp240 :drawItem.3:item 16 0
+  532 op add *tmp240 :drawMaterials:y 5
+  533 draw image :drawItem.3:iconX *tmp240 :drawMaterials:item 16 0
   534 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawItem.3:y :drawItem.3:length 10
+  535 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
   536 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawItem.3:y :drawItem.3:barLength 10
-    * op add *tmp241 :drawItem.3:y 5
-    * op add *tmp242 *tmp241 2
+  537 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  538 op add *tmp241 :drawMaterials:y 5
+  539 op add *tmp242 *tmp240 2
   540 set :drawBold.5:x :drawItem.3:textX
   541 set :drawBold.5:y *tmp242
   542 set :drawBold.5:alignment @right
-    * set :drawText.13:x :drawBold.5:x
-    * set :drawText.13:y :drawBold.5:y
-    * set :drawText.13:alignment :drawBold.5:alignment
+  543 set :drawText.13:x :drawItem.3:textX
+  544 set :drawText.13:y *tmp242
+  545 set :drawText.13:alignment @right
   546 print :drawMaterials:target
-    * set :drawPrint.13:x :drawText.13:x
-    * set :drawPrint.13:y :drawText.13:y
-    * set :drawPrint.13:alignment :drawText.13:alignment
-    * draw print :drawPrint.13:x :drawPrint.13:y :drawPrint.13:alignment
+  547 set :drawPrint.13:x :drawBold.5:x
+  548 set :drawPrint.13:y :drawBold.5:y
+  549 set :drawPrint.13:alignment :drawBold.5:alignment
+  550 draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
   551 label *label110
   552 label *label109
-    * op add :drawText.14:x :drawBold.5:x 1
-    * set :drawText.14:y :drawBold.5:y
-    * set :drawText.14:alignment :drawBold.5:alignment
+  553 op add :drawText.14:x :drawItem.3:textX 1
+  554 set :drawText.14:y *tmp242
+  555 set :drawText.14:alignment @right
   556 print :drawMaterials:target
   557 set :drawPrint.14:x :drawText.14:x
-    * set :drawPrint.14:y :drawText.14:y
-    * set :drawPrint.14:alignment :drawText.14:alignment
-    * draw print :drawPrint.14:x :drawPrint.14:y :drawPrint.14:alignment
+  558 set :drawPrint.14:y :drawBold.5:y
+  559 set :drawPrint.14:alignment :drawBold.5:alignment
+  560 draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
   561 label *label112
   562 label *label111
   563 label *label108
-    * op add :drawItem.3:col :drawItem.3:col 1
-    * jump *label113 lessThan :drawItem.3:col :drawItem.3:columns
+  564 op add :drawItem.3:col :drawMaterials:col 1
+  565 jump *label113 lessThan :drawItem.3:col 1
   566 set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawItem.3:y 15
+  567 op sub :drawItem.3:y :drawMaterials:y 15
   568 label *label113
   569 label *label114
   570 label *label107
 
   586 set :drawBold.6:x 22
   587 set :drawBold.6:y 105
   588 set :drawBold.6:alignment @bottomLeft
-    * set :drawText.15:x :drawBold.6:x
-    * set :drawText.15:y :drawBold.6:y
-    * set :drawText.15:alignment :drawBold.6:alignment
+  589 set :drawText.15:x 22
+  590 set :drawText.15:y 105
+  591 set :drawText.15:alignment @bottomLeft
   592 read *tmp250 processor3 ".mapAction"
   593 print *tmp250
-    * set :drawPrint.15:x :drawText.15:x
-    * set :drawPrint.15:y :drawText.15:y
-    * set :drawPrint.15:alignment :drawText.15:alignment
-    * draw print :drawPrint.15:x :drawPrint.15:y :drawPrint.15:alignment
+  594 set :drawPrint.15:x :drawBold.6:x
+  595 set :drawPrint.15:y :drawBold.6:y
+  596 set :drawPrint.15:alignment :drawBold.6:alignment
+  597 draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
   598 label *label119
   599 label *label118
-    * op add :drawText.16:x :drawBold.6:x 1
-    * set :drawText.16:y :drawBold.6:y
-    * set :drawText.16:alignment :drawBold.6:alignment
+  600 op add :drawText.16:x 22 1
+  601 set :drawText.16:y 105
+  602 set :drawText.16:alignment @bottomLeft
   603 read *tmp252 processor3 ".mapAction"
   604 print *tmp252
-    * set :drawPrint.16:x :drawText.16:x
-    * set :drawPrint.16:y :drawText.16:y
-    * set :drawPrint.16:alignment :drawText.16:alignment
-    * draw print :drawPrint.16:x :drawPrint.16:y :drawPrint.16:alignment
+  605 set :drawPrint.16:x 23
+  606 set :drawPrint.16:y :drawBold.6:y
+  607 set :drawPrint.16:alignment :drawBold.6:alignment
+  608 draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
   609 label *label121
   610 label *label120
   611 label *label117
 
   615 set :drawItem.4:item @titanium
   616 read :drawItem.4:current processor3 ".mapProgress"
   617 read :drawItem.4:target processor3 ".mapTotal"
-    * op mul *tmp253 :drawItem.4:columns 176
-    * op div *tmp254 *tmp253 2
-    * op sub :drawItem.4:barLength 210 *tmp254
-    * op add :drawItem.4:textEnd 48 :drawItem.4:barLength
-    * op mul *tmp257 :drawItem.4:barLength :drawItem.4:current
+  618 op mul *tmp253 1 176
+  619 op div *tmp254 176 2
+  620 op sub :drawItem.4:barLength 210 88
+  621 op add :drawItem.4:textEnd 48 122
+  622 op mul *tmp257 122 :drawItem.4:current
   623 op div *tmp258 *tmp257 :drawItem.4:target
-    * op min :drawItem.4:length :drawItem.4:barLength *tmp258
-    * op mul *tmp260 :drawItem.4:col 176
-    * op div *tmp261 *tmp260 2
-    * op add :drawItem.4:iconX 11 *tmp261
-    * op mul *tmp263 :drawItem.4:col 176
-    * op div *tmp264 *tmp263 2
-    * op add :drawItem.4:barX 22 *tmp264
-    * op mul *tmp266 :drawItem.4:col 176
-    * op div *tmp267 *tmp266 2
-    * op add :drawItem.4:textX :drawItem.4:textEnd *tmp267
+  624 op min :drawItem.4:length 122 *tmp258
+  625 op mul *tmp260 0 176
+  626 op div *tmp261 0 2
+  627 op add :drawItem.4:iconX 11 0
+  628 op mul *tmp263 0 176
+  629 op div *tmp264 0 2
+  630 op add :drawItem.4:barX 22 0
+  631 op mul *tmp266 0 176
+  632 op div *tmp267 0 2
+  633 op add :drawItem.4:textX 170 0
   634 draw col %[white]
-    * op add *tmp269 :drawItem.4:y 5
-    * draw image :drawItem.4:iconX *tmp269 :drawItem.4:item 16 0
+  635 op add *tmp269 90 5
+  636 draw image 11 95 @titanium 16 0
   637 draw color 0 128 0 255
-    * draw rect :drawItem.4:barX :drawItem.4:y :drawItem.4:length 10
+  638 draw rect 22 90 :drawItem.4:length 10
   639 draw color 0 255 0 255
-    * draw lineRect :drawItem.4:barX :drawItem.4:y :drawItem.4:barLength 10
-    * op add *tmp270 :drawItem.4:y 5
-    * op add *tmp271 *tmp270 2
-    * set :drawBold.7:x :drawItem.4:textX
-    * set :drawBold.7:y *tmp271
+  640 draw lineRect 22 90 122 10
+  641 op add *tmp270 90 5
+  642 op add *tmp271 95 2
+  643 set :drawBold.7:x 170
+  644 set :drawBold.7:y 97
   645 set :drawBold.7:alignment @right
-    * set :drawText.17:x :drawBold.7:x
-    * set :drawText.17:y :drawBold.7:y
-    * set :drawText.17:alignment :drawBold.7:alignment
+  646 set :drawText.17:x :drawItem.4:textX
+  647 set :drawText.17:y *tmp271
+  648 set :drawText.17:alignment @right
   649 print "x"
   650 read *tmp272 processor3 ".mapSpots"
   651 print *tmp272
-    * set :drawPrint.17:x :drawText.17:x
-    * set :drawPrint.17:y :drawText.17:y
-    * set :drawPrint.17:alignment :drawText.17:alignment
-    * draw print :drawPrint.17:x :drawPrint.17:y :drawPrint.17:alignment
+  652 set :drawPrint.17:x :drawBold.7:x
+  653 set :drawPrint.17:y :drawBold.7:y
+  654 set :drawPrint.17:alignment :drawBold.7:alignment
+  655 draw print :drawText.17:x :drawText.17:y :drawText.17:alignment
   656 label *label125
   657 label *label124
-    * op add :drawText.18:x :drawBold.7:x 1
-    * set :drawText.18:y :drawBold.7:y
-    * set :drawText.18:alignment :drawBold.7:alignment
+  658 op add :drawText.18:x :drawItem.4:textX 1
+  659 set :drawText.18:y *tmp271
+  660 set :drawText.18:alignment @right
   661 print "x"
   662 read *tmp274 processor3 ".mapSpots"
   663 print *tmp274
   664 set :drawPrint.18:x :drawText.18:x
-    * set :drawPrint.18:y :drawText.18:y
-    * set :drawPrint.18:alignment :drawText.18:alignment
-    * draw print :drawPrint.18:x :drawPrint.18:y :drawPrint.18:alignment
+  665 set :drawPrint.18:y :drawBold.7:y
+  666 set :drawPrint.18:alignment :drawBold.7:alignment
+  667 draw print :drawText.18:x :drawText.18:y :drawText.18:alignment
   668 label *label127
   669 label *label126
   670 label *label123
-    * op add :drawItem.4:col :drawItem.4:col 1
-    * jump *label128 lessThan :drawItem.4:col :drawItem.4:columns
-    * set :drawItem.4:col 0
-    * op sub :drawItem.4:y :drawItem.4:y 15
+  671 op add :drawItem.4:col 0 1
+  672 jump *label128 lessThan 1 1
+  673 op sub :drawItem.4:y 90 15
   674 label *label128
   675 label *label129
   676 label *label122
 
   681 set :drawBold.8:x 22
   682 set :drawBold.8:y 105
   683 set :drawBold.8:alignment @bottomLeft
-    * set :drawText.19:x :drawBold.8:x
-    * set :drawText.19:y :drawBold.8:y
-    * set :drawText.19:alignment :drawBold.8:alignment
+  684 set :drawText.19:x 22
+  685 set :drawText.19:y 105
+  686 set :drawText.19:alignment @bottomLeft
   687 print "Materials"
-    * set :drawPrint.19:x :drawText.19:x
-    * set :drawPrint.19:y :drawText.19:y
-    * set :drawPrint.19:alignment :drawText.19:alignment
-    * draw print :drawPrint.19:x :drawPrint.19:y :drawPrint.19:alignment
+  688 set :drawPrint.19:x :drawBold.8:x
+  689 set :drawPrint.19:y :drawBold.8:y
+  690 set :drawPrint.19:alignment :drawBold.8:alignment
+  691 draw print :drawText.19:x :drawText.19:y :drawText.19:alignment
   692 label *label132
   693 label *label131
-    * op add :drawText.20:x :drawBold.8:x 1
-    * set :drawText.20:y :drawBold.8:y
-    * set :drawText.20:alignment :drawBold.8:alignment
+  694 op add :drawText.20:x 22 1
+  695 set :drawText.20:y 105
+  696 set :drawText.20:alignment @bottomLeft
   697 print "Materials"
-    * set :drawPrint.20:x :drawText.20:x
-    * set :drawPrint.20:y :drawText.20:y
-    * set :drawPrint.20:alignment :drawText.20:alignment
-    * draw print :drawPrint.20:x :drawPrint.20:y :drawPrint.20:alignment
+  698 set :drawPrint.20:x 23
+  699 set :drawPrint.20:y :drawBold.8:y
+  700 set :drawPrint.20:alignment :drawBold.8:alignment
+  701 draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
   702 label *label134
   703 label *label133
   704 label *label130
   705 set :drawMaterials:columns 1
-    * jump *label135 equal :drawMaterials:count false
+  706 jump *label135 equal .materialCount false
   707 set :drawMaterials:item.1 @copper
   708 set :drawMaterials:target.1 .targetCopper
   709 setaddr *tmp280 *label140
 
   742 sensor *tmp283 .core :drawMaterials:item.1
   743 set :drawItem.5:col :drawMaterials:col
   744 set :drawItem.5:y :drawMaterials:y
-    * set :drawItem.5:columns :drawMaterials:columns
+  745 set :drawItem.5:columns 1
   746 set :drawItem.5:item :drawMaterials:item.1
   747 set :drawItem.5:current *tmp283
   748 set :drawItem.5:target :drawMaterials:target.1
-    * op mul *tmp284 :drawItem.5:columns 176
-    * op div *tmp285 *tmp284 2
+  749 op mul *tmp284 :drawMaterials:columns 176
+  750 op mul *tmp285 :drawItem.5:columns 88
   751 op sub :drawItem.5:barLength 210 *tmp285
   752 op add :drawItem.5:textEnd 48 :drawItem.5:barLength
-    * op mul *tmp288 :drawItem.5:barLength :drawItem.5:current
-    * op div *tmp289 *tmp288 :drawItem.5:target
+  753 op mul *tmp288 :drawItem.5:barLength *tmp283
+  754 op div *tmp289 *tmp288 :drawMaterials:target.1
   755 op min :drawItem.5:length :drawItem.5:barLength *tmp289
-    * op mul *tmp291 :drawItem.5:col 176
-    * op div *tmp292 *tmp291 2
+  756 op mul *tmp291 :drawMaterials:col 176
+  757 op mul *tmp292 :drawItem.5:col 88
   758 op add :drawItem.5:iconX 11 *tmp292
-    * op mul *tmp294 :drawItem.5:col 176
-    * op div *tmp295 *tmp294 2
-    * op add :drawItem.5:barX 22 *tmp295
-    * op mul *tmp297 :drawItem.5:col 176
-    * op div *tmp298 *tmp297 2
-    * op add :drawItem.5:textX :drawItem.5:textEnd *tmp298
+  759 op mul *tmp294 :drawMaterials:col 176
+  760 op div *tmp295 *tmp291 2
+  761 op add :drawItem.5:barX 22 *tmp292
+  762 op mul *tmp297 :drawMaterials:col 176
+  763 op div *tmp298 *tmp291 2
+  764 op add :drawItem.5:textX :drawItem.5:textEnd *tmp292
   765 draw col %[white]
-    * op add *tmp300 :drawItem.5:y 5
-    * draw image :drawItem.5:iconX *tmp300 :drawItem.5:item 16 0
+  766 op add *tmp300 :drawMaterials:y 5
+  767 draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
   768 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawItem.5:y :drawItem.5:length 10
+  769 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   770 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawItem.5:y :drawItem.5:barLength 10
-    * op add *tmp301 :drawItem.5:y 5
-    * op add *tmp302 *tmp301 2
+  771 draw lineRect :drawItem.5:barX :drawMaterials:y :drawItem.5:barLength 10
+  772 op add *tmp301 :drawMaterials:y 5
+  773 op add *tmp302 *tmp300 2
   774 set :drawBold.9:x :drawItem.5:textX
   775 set :drawBold.9:y *tmp302
   776 set :drawBold.9:alignment @right
-    * set :drawText.21:x :drawBold.9:x
-    * set :drawText.21:y :drawBold.9:y
-    * set :drawText.21:alignment :drawBold.9:alignment
+  777 set :drawText.21:x :drawItem.5:textX
+  778 set :drawText.21:y *tmp302
+  779 set :drawText.21:alignment @right
   780 print :drawMaterials:target.1
-    * set :drawPrint.21:x :drawText.21:x
-    * set :drawPrint.21:y :drawText.21:y
-    * set :drawPrint.21:alignment :drawText.21:alignment
-    * draw print :drawPrint.21:x :drawPrint.21:y :drawPrint.21:alignment
+  781 set :drawPrint.21:x :drawBold.9:x
+  782 set :drawPrint.21:y :drawBold.9:y
+  783 set :drawPrint.21:alignment :drawBold.9:alignment
+  784 draw print :drawText.21:x :drawText.21:y :drawText.21:alignment
   785 label *label152
   786 label *label151
-    * op add :drawText.22:x :drawBold.9:x 1
-    * set :drawText.22:y :drawBold.9:y
-    * set :drawText.22:alignment :drawBold.9:alignment
+  787 op add :drawText.22:x :drawItem.5:textX 1
+  788 set :drawText.22:y *tmp302
+  789 set :drawText.22:alignment @right
   790 print :drawMaterials:target.1
   791 set :drawPrint.22:x :drawText.22:x
-    * set :drawPrint.22:y :drawText.22:y
-    * set :drawPrint.22:alignment :drawText.22:alignment
-    * draw print :drawPrint.22:x :drawPrint.22:y :drawPrint.22:alignment
+  792 set :drawPrint.22:y :drawBold.9:y
+  793 set :drawPrint.22:alignment :drawBold.9:alignment
+  794 draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
   795 label *label154
   796 label *label153
   797 label *label150
-    * op add :drawItem.5:col :drawItem.5:col 1
-    * jump *label155 lessThan :drawItem.5:col :drawItem.5:columns
+  798 op add :drawItem.5:col :drawMaterials:col 1
+  799 jump *label155 lessThan :drawItem.5:col :drawMaterials:columns
   800 set :drawItem.5:col 0
-    * op sub :drawItem.5:y :drawItem.5:y 15
+  801 op sub :drawItem.5:y :drawMaterials:y 15
   802 label *label155
   803 label *label156
   804 label *label149
 
   829 label *label161
   830 set :drawUnit:y *tmp309
   831 set :drawBold.10:x 22
-    * set :drawBold.10:y :drawUnit:y
+  832 set :drawBold.10:y *tmp309
   833 set :drawBold.10:alignment @bottomLeft
-    * set :drawText.23:x :drawBold.10:x
-    * set :drawText.23:y :drawBold.10:y
-    * set :drawText.23:alignment :drawBold.10:alignment
+  834 set :drawText.23:x 22
+  835 set :drawText.23:y :drawUnit:y
+  836 set :drawText.23:alignment @bottomLeft
   837 print "Builder"
-    * set :drawPrint.23:x :drawText.23:x
-    * set :drawPrint.23:y :drawText.23:y
-    * set :drawPrint.23:alignment :drawText.23:alignment
-    * draw print :drawPrint.23:x :drawPrint.23:y :drawPrint.23:alignment
+  838 set :drawPrint.23:x :drawBold.10:x
+  839 set :drawPrint.23:y :drawBold.10:y
+  840 set :drawPrint.23:alignment :drawBold.10:alignment
+  841 draw print :drawText.23:x :drawText.23:y :drawText.23:alignment
   842 label *label164
   843 label *label163
-    * op add :drawText.24:x :drawBold.10:x 1
-    * set :drawText.24:y :drawBold.10:y
-    * set :drawText.24:alignment :drawBold.10:alignment
+  844 op add :drawText.24:x 22 1
+  845 set :drawText.24:y :drawUnit:y
+  846 set :drawText.24:alignment @bottomLeft
   847 print "Builder"
-    * set :drawPrint.24:x :drawText.24:x
-    * set :drawPrint.24:y :drawText.24:y
-    * set :drawPrint.24:alignment :drawText.24:alignment
-    * draw print :drawPrint.24:x :drawPrint.24:y :drawPrint.24:alignment
+  848 set :drawPrint.24:x 23
+  849 set :drawPrint.24:y :drawBold.10:y
+  850 set :drawPrint.24:alignment :drawBold.10:alignment
+  851 draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
   852 label *label166
   853 label *label165
   854 label *label162
   855 jump *label167 notEqual .transportItem null
-    * op sub *tmp313 :drawUnit:y 15
+  856 op sub *tmp313 *tmp309 15
   857 set :drawUnit.1:item @poly
   858 set :drawUnit.1:items 0
   859 set :drawUnit.1:y *tmp313
   860 set :drawItem.6:col 0
-    * set :drawItem.6:y :drawUnit.1:y
+  861 set :drawItem.6:y *tmp313
   862 set :drawItem.6:columns 1
-    * set :drawItem.6:item :drawUnit.1:item
-    * set :drawItem.6:current :drawUnit.1:items
+  863 set :drawItem.6:item @poly
+  864 set :drawItem.6:current 0
   865 set :drawItem.6:target .transportTarget
-    * op mul *tmp314 :drawItem.6:columns 176
-    * op div *tmp315 *tmp314 2
-    * op sub :drawItem.6:barLength 210 *tmp315
-    * op add :drawItem.6:textEnd 48 :drawItem.6:barLength
-    * op mul *tmp318 :drawItem.6:barLength :drawItem.6:current
+  866 op mul *tmp314 1 176
+  867 op div *tmp315 176 2
+  868 op sub :drawItem.6:barLength 210 88
+  869 op add :drawItem.6:textEnd 48 122
+  870 op mul *tmp318 122 :drawUnit.1:items
   871 op div *tmp319 *tmp318 :drawItem.6:target
-    * op min :drawItem.6:length :drawItem.6:barLength *tmp319
-    * op mul *tmp321 :drawItem.6:col 176
-    * op div *tmp322 *tmp321 2
-    * op add :drawItem.6:iconX 11 *tmp322
-    * op mul *tmp324 :drawItem.6:col 176
-    * op div *tmp325 *tmp324 2
-    * op add :drawItem.6:barX 22 *tmp325
-    * op mul *tmp327 :drawItem.6:col 176
-    * op div *tmp328 *tmp327 2
-    * op add :drawItem.6:textX :drawItem.6:textEnd *tmp328
+  872 op min :drawItem.6:length 122 *tmp319
+  873 op mul *tmp321 0 176
+  874 op div *tmp322 0 2
+  875 op add :drawItem.6:iconX 11 0
+  876 op mul *tmp324 0 176
+  877 op div *tmp325 0 2
+  878 op add :drawItem.6:barX 22 0
+  879 op mul *tmp327 0 176
+  880 op div *tmp328 0 2
+  881 op add :drawItem.6:textX 170 0
   882 draw col %[white]
-    * op add *tmp330 :drawItem.6:y 5
-    * draw image :drawItem.6:iconX *tmp330 :drawItem.6:item 16 0
+  883 op add *tmp330 :drawUnit.1:y 5
+  884 draw image 11 *tmp330 :drawUnit.1:item 16 0
   885 draw color 0 128 0 255
-    * draw rect :drawItem.6:barX :drawItem.6:y :drawItem.6:length 10
+  886 draw rect 22 :drawUnit.1:y :drawItem.6:length 10
   887 draw color 0 255 0 255
-    * draw lineRect :drawItem.6:barX :drawItem.6:y :drawItem.6:barLength 10
-    * op add *tmp331 :drawItem.6:y 5
-    * op add *tmp332 *tmp331 2
-    * set :drawBold.11:x :drawItem.6:textX
+  888 draw lineRect 22 :drawUnit.1:y 122 10
+  889 op add *tmp331 :drawUnit.1:y 5
+  890 op add *tmp332 *tmp330 2
+  891 set :drawBold.11:x 170
   892 set :drawBold.11:y *tmp332
   893 set :drawBold.11:alignment @right
-    * set :drawText.25:x :drawBold.11:x
-    * set :drawText.25:y :drawBold.11:y
-    * set :drawText.25:alignment :drawBold.11:alignment
+  894 set :drawText.25:x :drawItem.6:textX
+  895 set :drawText.25:y *tmp332
+  896 set :drawText.25:alignment @right
   897 print .transportTarget
-    * set :drawPrint.25:x :drawText.25:x
-    * set :drawPrint.25:y :drawText.25:y
-    * set :drawPrint.25:alignment :drawText.25:alignment
-    * draw print :drawPrint.25:x :drawPrint.25:y :drawPrint.25:alignment
+  898 set :drawPrint.25:x :drawBold.11:x
+  899 set :drawPrint.25:y :drawBold.11:y
+  900 set :drawPrint.25:alignment :drawBold.11:alignment
+  901 draw print :drawText.25:x :drawText.25:y :drawText.25:alignment
   902 label *label173
   903 label *label172
-    * op add :drawText.26:x :drawBold.11:x 1
-    * set :drawText.26:y :drawBold.11:y
-    * set :drawText.26:alignment :drawBold.11:alignment
+  904 op add :drawText.26:x :drawItem.6:textX 1
+  905 set :drawText.26:y *tmp332
+  906 set :drawText.26:alignment @right
   907 print .transportTarget
   908 set :drawPrint.26:x :drawText.26:x
-    * set :drawPrint.26:y :drawText.26:y
-    * set :drawPrint.26:alignment :drawText.26:alignment
-    * draw print :drawPrint.26:x :drawPrint.26:y :drawPrint.26:alignment
+  909 set :drawPrint.26:y :drawBold.11:y
+  910 set :drawPrint.26:alignment :drawBold.11:alignment
+  911 draw print :drawText.26:x :drawText.26:y :drawText.26:alignment
   912 label *label175
   913 label *label174
   914 label *label171
-    * op add :drawItem.6:col :drawItem.6:col 1
-    * jump *label176 lessThan :drawItem.6:col :drawItem.6:columns
-    * set :drawItem.6:col 0
-    * op sub :drawItem.6:y :drawItem.6:y 15
+  915 op add :drawItem.6:col 0 1
+  916 jump *label176 lessThan 1 1
+  917 op sub :drawItem.6:y :drawUnit.1:y 15
   918 label *label176
   919 label *label177
   920 label *label170
-    * set :drawUnit.1:y :drawItem.6:y
   921 label *label169
   922 jump *label168 always
   923 label *label167
 
   925 sensor *tmp339 @unit @totalItems
   926 op equal *tmp340 :drawUnit:unitItem .transportItem
   927 op mul *tmp341 *tmp339 *tmp340
-    * op sub *tmp342 :drawUnit:y 15
+  928 op sub *tmp342 *tmp309 15
   929 set :drawUnit.2:item .transportItem
   930 set :drawUnit.2:items *tmp341
   931 set :drawUnit.2:y *tmp342
   932 set :drawItem.7:col 0
-    * set :drawItem.7:y :drawUnit.2:y
+  933 set :drawItem.7:y *tmp342
   934 set :drawItem.7:columns 1
   935 set :drawItem.7:item :drawUnit.2:item
-    * set :drawItem.7:current :drawUnit.2:items
+  936 set :drawItem.7:current *tmp341
   937 set :drawItem.7:target .transportTarget
-    * op mul *tmp343 :drawItem.7:columns 176
-    * op div *tmp344 *tmp343 2
-    * op sub :drawItem.7:barLength 210 *tmp344
-    * op add :drawItem.7:textEnd 48 :drawItem.7:barLength
-    * op mul *tmp347 :drawItem.7:barLength :drawItem.7:current
+  938 op mul *tmp343 1 176
+  939 op div *tmp344 176 2
+  940 op sub :drawItem.7:barLength 210 88
+  941 op add :drawItem.7:textEnd 48 122
+  942 op mul *tmp347 122 :drawUnit.2:items
   943 op div *tmp348 *tmp347 :drawItem.7:target
-    * op min :drawItem.7:length :drawItem.7:barLength *tmp348
-    * op mul *tmp350 :drawItem.7:col 176
-    * op div *tmp351 *tmp350 2
-    * op add :drawItem.7:iconX 11 *tmp351
-    * op mul *tmp353 :drawItem.7:col 176
-    * op div *tmp354 *tmp353 2
-    * op add :drawItem.7:barX 22 *tmp354
-    * op mul *tmp356 :drawItem.7:col 176
-    * op div *tmp357 *tmp356 2
-    * op add :drawItem.7:textX :drawItem.7:textEnd *tmp357
+  944 op min :drawItem.7:length 122 *tmp348
+  945 op mul *tmp350 0 176
+  946 op div *tmp351 0 2
+  947 op add :drawItem.7:iconX 11 0
+  948 op mul *tmp353 0 176
+  949 op div *tmp354 0 2
+  950 op add :drawItem.7:barX 22 0
+  951 op mul *tmp356 0 176
+  952 op div *tmp357 0 2
+  953 op add :drawItem.7:textX 170 0
   954 draw col %[white]
-    * op add *tmp359 :drawItem.7:y 5
-    * draw image :drawItem.7:iconX *tmp359 :drawItem.7:item 16 0
+  955 op add *tmp359 :drawUnit.2:y 5
+  956 draw image 11 *tmp359 :drawUnit.2:item 16 0
   957 draw color 0 128 0 255
-    * draw rect :drawItem.7:barX :drawItem.7:y :drawItem.7:length 10
+  958 draw rect 22 :drawUnit.2:y :drawItem.7:length 10
   959 draw color 0 255 0 255
-    * draw lineRect :drawItem.7:barX :drawItem.7:y :drawItem.7:barLength 10
-    * op add *tmp360 :drawItem.7:y 5
-    * op add *tmp361 *tmp360 2
-    * set :drawBold.12:x :drawItem.7:textX
+  960 draw lineRect 22 :drawUnit.2:y 122 10
+  961 op add *tmp360 :drawUnit.2:y 5
+  962 op add *tmp361 *tmp359 2
+  963 set :drawBold.12:x 170
   964 set :drawBold.12:y *tmp361
   965 set :drawBold.12:alignment @right
-    * set :drawText.27:x :drawBold.12:x
-    * set :drawText.27:y :drawBold.12:y
-    * set :drawText.27:alignment :drawBold.12:alignment
+  966 set :drawText.27:x :drawItem.7:textX
+  967 set :drawText.27:y *tmp361
+  968 set :drawText.27:alignment @right
   969 print .transportTarget
-    * set :drawPrint.27:x :drawText.27:x
-    * set :drawPrint.27:y :drawText.27:y
-    * set :drawPrint.27:alignment :drawText.27:alignment
-    * draw print :drawPrint.27:x :drawPrint.27:y :drawPrint.27:alignment
+  970 set :drawPrint.27:x :drawBold.12:x
+  971 set :drawPrint.27:y :drawBold.12:y
+  972 set :drawPrint.27:alignment :drawBold.12:alignment
+  973 draw print :drawText.27:x :drawText.27:y :drawText.27:alignment
   974 label *label182
   975 label *label181
-    * op add :drawText.28:x :drawBold.12:x 1
-    * set :drawText.28:y :drawBold.12:y
-    * set :drawText.28:alignment :drawBold.12:alignment
+  976 op add :drawText.28:x :drawItem.7:textX 1
+  977 set :drawText.28:y *tmp361
+  978 set :drawText.28:alignment @right
   979 print .transportTarget
   980 set :drawPrint.28:x :drawText.28:x
-    * set :drawPrint.28:y :drawText.28:y
-    * set :drawPrint.28:alignment :drawText.28:alignment
-    * draw print :drawPrint.28:x :drawPrint.28:y :drawPrint.28:alignment
+  981 set :drawPrint.28:y :drawBold.12:y
+  982 set :drawPrint.28:alignment :drawBold.12:alignment
+  983 draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
   984 label *label184
   985 label *label183
   986 label *label180
-    * op add :drawItem.7:col :drawItem.7:col 1
-    * jump *label185 lessThan :drawItem.7:col :drawItem.7:columns
-    * set :drawItem.7:col 0
-    * op sub :drawItem.7:y :drawItem.7:y 15
+  987 op add :drawItem.7:col 0 1
+  988 jump *label185 lessThan 1 1
+  989 op sub :drawItem.7:y :drawUnit.2:y 15
   990 label *label185
   991 label *label186
   992 label *label179
-    * set :drawUnit.2:y :drawItem.7:y
   993 label *label178
   994 label *label168
   995 label *label159
 
   998 set :drawUnitCount:type @poly
   999 set :drawUnitCount:count .polys
  1000 jump *label189 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp369 :drawUnits:x 20
-    * draw image *tmp369 127 :drawUnitCount:type 12 0
-    * set :drawText.29:x :drawUnits:x
+ 1001 op sub *tmp369 170 20
+ 1002 draw image 150 127 @poly 12 0
+ 1003 set :drawText.29:x 170
  1004 set :drawText.29:y 129
  1005 set :drawText.29:alignment @right
  1006 print "x"
  1007 print :drawUnitCount:count
-    * set :drawPrint.29:x :drawText.29:x
-    * set :drawPrint.29:y :drawText.29:y
-    * set :drawPrint.29:alignment :drawText.29:alignment
-    * draw print :drawPrint.29:x :drawPrint.29:y :drawPrint.29:alignment
+ 1008 set :drawPrint.29:x :drawUnits:x
+ 1009 set :drawPrint.29:y 129
+ 1010 set :drawPrint.29:alignment @right
+ 1011 draw print :drawText.29:x :drawText.29:y :drawText.29:alignment
  1012 label *label192
  1013 label *label191
-    * op sub :drawUnits:x :drawUnits:x 30
+ 1014 op sub :drawUnits:x 170 30
  1015 label *label189
  1016 label *label190
  1017 label *label188
 
  1019 set :drawUnitCount.1:count .monos
  1020 jump *label194 lessThanEq :drawUnitCount.1:count 0
  1021 op sub *tmp372 :drawUnits:x 20
-    * draw image *tmp372 127 :drawUnitCount.1:type 12 0
+ 1022 draw image *tmp372 127 @mono 12 0
  1023 set :drawText.30:x :drawUnits:x
  1024 set :drawText.30:y 129
  1025 set :drawText.30:alignment @right
  1026 print "x"
  1027 print :drawUnitCount.1:count
-    * set :drawPrint.30:x :drawText.30:x
-    * set :drawPrint.30:y :drawText.30:y
-    * set :drawPrint.30:alignment :drawText.30:alignment
-    * draw print :drawPrint.30:x :drawPrint.30:y :drawPrint.30:alignment
+ 1028 set :drawPrint.30:x :drawUnits:x
+ 1029 set :drawPrint.30:y 129
+ 1030 set :drawPrint.30:alignment @right
+ 1031 draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
  1032 label *label197
  1033 label *label196
  1034 op sub :drawUnits:x :drawUnits:x 30
 
  1039 set :drawUnitCount.2:count .flares
  1040 jump *label199 lessThanEq :drawUnitCount.2:count 0
  1041 op sub *tmp375 :drawUnits:x 20
-    * draw image *tmp375 127 :drawUnitCount.2:type 12 0
+ 1042 draw image *tmp375 127 @flare 12 0
  1043 set :drawText.31:x :drawUnits:x
  1044 set :drawText.31:y 129
  1045 set :drawText.31:alignment @right
  1046 print "x"
  1047 print :drawUnitCount.2:count
-    * set :drawPrint.31:x :drawText.31:x
-    * set :drawPrint.31:y :drawText.31:y
-    * set :drawPrint.31:alignment :drawText.31:alignment
-    * draw print :drawPrint.31:x :drawPrint.31:y :drawPrint.31:alignment
+ 1048 set :drawPrint.31:x :drawUnits:x
+ 1049 set :drawPrint.31:y 129
+ 1050 set :drawPrint.31:alignment @right
+ 1051 draw print :drawText.31:x :drawText.31:y :drawText.31:alignment
  1052 label *label202
  1053 label *label201
-    * op sub :drawUnits:x :drawUnits:x 30
  1054 label *label199
  1055 label *label200
  1056 label *label198
 
  1173 set :drawText.32:y 172
  1174 set :drawText.32:alignment @topRight
  1175 print "Base map"
-    * set :drawPrint.32:x :drawText.32:x
-    * set :drawPrint.32:y :drawText.32:y
-    * set :drawPrint.32:alignment :drawText.32:alignment
-    * draw print :drawPrint.32:x :drawPrint.32:y :drawPrint.32:alignment
+ 1176 set :drawPrint.32:x 172
+ 1177 set :drawPrint.32:y 172
+ 1178 set :drawPrint.32:alignment @topRight
+ 1179 draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
  1180 label *label240
  1181 label *label239
  1182 draw col %[white]
 
  1335 set :displayLog:y 163
  1336 read :displayLog:logPosition bank1 511
  1337 op sub :displayLog:records 511 :displayLog:logPosition
-    * op sub *tmp408 :displayLog:records 1
+ 1338 op sub *tmp408 510 :displayLog:logPosition
  1339 op idiv *tmp409 *tmp408 32
  1340 op add *tmp410 *tmp409 1
  1341 op max :displayLog:pages 1 *tmp410
 
  1345 op sub *tmp415 :displayLog:start 32
  1346 op max :displayLog:stop :displayLog:logPosition *tmp415
  1347 draw col %[lightgray]
-    * op add *tmp417 :displayLog:page 1
+ 1348 op sub *tmp417 .page 2
  1349 print *tmp417
  1350 print "/"
  1351 set :drawText.33:x 172
  1352 set :drawText.33:y 4
  1353 set :drawText.33:alignment @bottomRight
  1354 print :displayLog:pages
-    * set :drawPrint.33:x :drawText.33:x
-    * set :drawPrint.33:y :drawText.33:y
-    * set :drawPrint.33:alignment :drawText.33:alignment
-    * draw print :drawPrint.33:x :drawPrint.33:y :drawPrint.33:alignment
+ 1355 set :drawPrint.33:x 172
+ 1356 set :drawPrint.33:y 4
+ 1357 set :drawPrint.33:alignment @bottomRight
+ 1358 draw print :drawText.33:x :drawText.33:y :drawText.33:alignment
  1359 label *label283
  1360 label *label282
  1361 draw col %[white]
  1362 set *tmp418 :displayLog:stop
  1363 op sub :displayLog:position :displayLog:start 1
  1364 label *label284
-    * jump *label286 lessThan :displayLog:position *tmp418
+ 1365 jump *label286 lessThan :displayLog:position :displayLog:stop
  1366 read :displayLog:record bank1 :displayLog:position
  1367 set :displayRecord:record :displayLog:record
-    * op mod :displayRecord:id :displayRecord:record 1000
+ 1368 op mod :displayRecord:id :displayLog:record 1000
  1369 jump *label288 lessThanEq :displayRecord:id @blockCount
  1370 op sub *tmp424 :displayRecord:id @blockCount
  1371 lookup unit *tmp423 *tmp424
 
  1374 lookup block *tmp423 :displayRecord:id
  1375 label *label289
  1376 set :displayRecord:icon *tmp423
-    * op div *tmp427 :displayRecord:record 1000
+ 1377 op div *tmp427 :displayLog:record 1000
  1378 op idiv :displayRecord:t *tmp427 120
  1379 op idiv :displayRecord:m :displayRecord:t 60
  1380 op mod :displayRecord:s :displayRecord:t 60
 
  1387 print :displayRecord:m
  1388 print ":"
  1389 print *tmp433
-    * set :displayRecordAt:image :displayRecord:icon
+ 1390 set :displayRecordAt:image *tmp423
  1391 set :displayRecordAt:text :displayRecord:s
-    * draw image :displayLog:x :displayLog:y :displayRecordAt:image 14 0
+ 1392 draw image :displayLog:x :displayLog:y :displayRecord:icon 14 0
  1393 op add *tmp434 :displayLog:x 56
-    * op sub *tmp435 *tmp434 12
+ 1394 op add *tmp435 :displayLog:x 44
  1395 op add *tmp436 :displayLog:y 2
  1396 set :drawText.34:x *tmp435
  1397 set :drawText.34:y *tmp436
  1398 set :drawText.34:alignment @right
-    * print :displayRecordAt:text
-    * set :drawPrint.34:x :drawText.34:x
-    * set :drawPrint.34:y :drawText.34:y
-    * set :drawPrint.34:alignment :drawText.34:alignment
-    * draw print :drawPrint.34:x :drawPrint.34:y :drawPrint.34:alignment
+ 1399 print :displayRecord:s
+ 1400 set :drawPrint.34:x *tmp435
+ 1401 set :drawPrint.34:y *tmp436
+ 1402 set :drawPrint.34:alignment @right
+ 1403 draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
  1404 label *label294
  1405 label *label293
  1406 op sub :displayLog:y :displayLog:y 15
 
  1471 end
  1472 label *label5
  1473 set :unpackCfg2:cfg :drawBlock:cfg
-    * set :unpackCfg:cfg :unpackCfg2:cfg
+ 1474 set :unpackCfg:cfg :drawBlock:cfg
  1475 set :unpackCfg:index 1
-    * set *tmp450 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp451 :unpackCfg:cfg *tmp450
+ 1476 set *tmp450 1
+ 1477 op add :unpackCfg:index 1 1
+ 1478 read *tmp451 :unpackCfg2:cfg *tmp450
  1479 op sub *tmp452 *tmp451 74
  1480 lookup block :unpackCfg:type *tmp452
-    * set *tmp454 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp455 :unpackCfg:cfg *tmp454
+ 1481 set *tmp454 2
+ 1482 op add :unpackCfg:index 2 1
+ 1483 read *tmp455 :unpackCfg2:cfg *tmp454
  1484 op sub *tmp456 *tmp455 74
  1485 op div :unpackCfg:x *tmp456 2
-    * set *tmp458 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp459 :unpackCfg:cfg *tmp458
+ 1486 set *tmp458 3
+ 1487 op add :unpackCfg:index 3 1
+ 1488 read *tmp459 :unpackCfg2:cfg *tmp458
  1489 op sub *tmp460 *tmp459 74
  1490 op div :unpackCfg:y *tmp460 2
-    * set *tmp462 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp463 :unpackCfg:cfg *tmp462
+ 1491 set *tmp462 4
+ 1492 op add :unpackCfg:index 4 1
+ 1493 read *tmp463 :unpackCfg2:cfg *tmp462
  1494 op sub :unpackCfg:rotation *tmp463 74
-    * set *tmp465 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp466 :unpackCfg:cfg *tmp465
+ 1495 set *tmp465 5
+ 1496 op add :unpackCfg:index 5 1
+ 1497 read *tmp466 :unpackCfg2:cfg *tmp465
  1498 op sub :unpackCfg:ind *tmp466 74
  1499 sensor :unpackCfg:size :unpackCfg:type @size
  1500 label *label306
 
  1505 set :unpackCfg2:size :unpackCfg:size
  1506 set :unpackCfg2:index :unpackCfg:ind
  1507 label *label305
-    * set :drawBlock:type :unpackCfg2:type
-    * set :drawBlock:x :unpackCfg2:x
-    * set :drawBlock:y :unpackCfg2:y
-    * set :drawBlock:rotation :unpackCfg2:rotation
-    * set :drawBlock:size :unpackCfg2:size
-    * set :drawBlock:index :unpackCfg2:index
-    * op or *tmp476 :drawBlock:x :drawBlock:y
+ 1508 set :drawBlock:type :unpackCfg:type
+ 1509 set :drawBlock:x :unpackCfg:x
+ 1510 set :drawBlock:y :unpackCfg:y
+ 1511 set :drawBlock:rotation :unpackCfg:rotation
+ 1512 set :drawBlock:size :unpackCfg:size
+ 1513 set :drawBlock:index :unpackCfg:ind
+ 1514 op or *tmp476 :unpackCfg2:x :unpackCfg2:y
  1515 jump *label307 equal *tmp476 false
-    * op shl *tmp478 1 :drawBlock:index
+ 1516 op shl *tmp478 1 :unpackCfg2:index
  1517 op and *tmp479 .blocksBuilt *tmp478
  1518 jump *label309 equal *tmp479 false
  1519 draw col %[white]
 
  1521 label *label309
  1522 draw color 128 255 128 128
  1523 label *label310
-    * op mul *tmp481 2 :drawBlock:x
-    * op mul *tmp482 2 :drawBlock:y
-    * op mul *tmp483 2 :drawBlock:size
-    * op mul *tmp484 90 :drawBlock:rotation
-    * draw image *tmp481 *tmp482 :drawBlock:type *tmp483 *tmp484
+ 1524 op mul *tmp481 2 :unpackCfg2:x
+ 1525 op mul *tmp482 2 :unpackCfg2:y
+ 1526 op mul *tmp483 2 :unpackCfg2:size
+ 1527 op mul *tmp484 90 :unpackCfg2:rotation
+ 1528 draw image *tmp481 *tmp482 :unpackCfg2:type *tmp483 *tmp484
  1529 label *label307
  1530 label *label308
  1531 label *label304

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-209 instructions):
 
    45 op div *tmp55 .animation 30
    46 op min *tmp56 *tmp55 1
    47 op max :animate:ratio 0 *tmp56
-    * set :lerp:from 40
-    * set :lerp:to 88
-    * set :lerp:ratio :animate:ratio
    48 op sub *tmp59 1 :animate:ratio
    49 op mul *tmp60 *tmp59 40
    50 op mul *tmp61 :animate:ratio 88
    51 op add *tmp58 *tmp60 *tmp61
    52 label *label26
-    * set :animate:x *tmp58
-    * set :lerp.1:from 137
-    * set :lerp.1:to 88
-    * set :lerp.1:ratio :animate:ratio
-    * op sub *tmp64 1 :animate:ratio
    53 op mul *tmp65 *tmp59 137
    54 op mul *tmp66 :animate:ratio 88
-    * op add *tmp63 *tmp65 *tmp66
+   55 op add *tmp63 *tmp65 *tmp61
    56 label *label27
-    * set :animate:y *tmp63
-    * set :lerp.2:from 32
-    * set :lerp.2:to 168
-    * set :lerp.2:ratio :animate:ratio
-    * op sub *tmp69 1 :animate:ratio
    57 op mul *tmp70 *tmp59 32
    58 op mul *tmp71 :animate:ratio 168
    59 op add *tmp68 *tmp70 *tmp71
    60 label *label28
-    * set :animate:size *tmp68
    61 draw image *tmp58 *tmp63 @mega *tmp68 0
    62 drawflush display1
    63 op add .animation .animation 1
 
    74 set :drawText:y 161
    75 set :drawText:alignment @bottom
    76 print "Goal"
-    * set :drawPrint:x :drawBold:x
-    * set :drawPrint:y :drawBold:y
-    * set :drawPrint:alignment :drawBold:alignment
-    * draw print :drawText:x :drawText:y :drawText:alignment
+   77 set :drawPrint:x 40
+   78 set :drawPrint:y 161
+   79 set :drawPrint:alignment @bottom
+   80 draw print 40 161 @bottom
    81 label *label33
    82 label *label32
    83 op add :drawText.1:x 40 1
    84 set :drawText.1:y 161
    85 set :drawText.1:alignment @bottom
    86 print "Goal"
-    * set :drawPrint.1:x 41
-    * set :drawPrint.1:y :drawBold:y
-    * set :drawPrint.1:alignment :drawBold:alignment
-    * draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
+   87 set :drawPrint.1:y 161
+   88 set :drawPrint.1:alignment @bottom
+   89 draw print 41 161 @bottom
    90 label *label35
    91 label *label34
    92 label *label31
 
   141 set :drawText.2:y 172
   142 set :drawText.2:alignment @topRight
   143 print ")"
-    * set :drawPrint.2:x 170
-    * set :drawPrint.2:y 172
-    * set :drawPrint.2:alignment @topRight
-    * draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
+  144 draw print 170 172 @topRight
   145 label *label45
   146 label *label44
   147 jump *label46 equal .titaniumDrill false
 
   155 set :drawText.3:alignment @topRight
   156 print "x"
   157 print :drawHeader:count
-    * set :drawPrint.3:x :drawHeader:x
-    * set :drawPrint.3:y 155
-    * set :drawPrint.3:alignment @topRight
-    * draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
+  158 set :drawPrint.3:x 170
+  159 draw print 170 155 @topRight
   160 label *label49
   161 label *label48
-    * op sub *tmp101 170 20
   162 op mul *tmp102 7 :drawHeader:len
   163 op sub *tmp103 150 *tmp102
   164 draw image *tmp103 146 @titanium 12 0
 
   174 set :drawText.4:alignment @topRight
   175 print "x"
   176 print :drawHeader:count
-    * set :drawPrint.4:x :drawHeader:x.1
-    * set :drawPrint.4:y 155
-    * set :drawPrint.4:alignment @topRight
-    * draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
+  177 set :drawPrint.4:x 120
+  178 draw print 120 155 @topRight
   179 label *label53
   180 label *label52
-    * op sub *tmp108 120 20
   181 op mul *tmp109 7 :drawHeader:len.1
   182 op sub *tmp110 100 *tmp109
   183 draw image *tmp110 146 @thorium 12 0
 
   250 set :drawText.5:y 105
   251 set :drawText.5:alignment @bottomLeft
   252 print "Unit factories"
-    * set :drawPrint.5:x :drawBold.1:x
-    * set :drawPrint.5:y :drawBold.1:y
-    * set :drawPrint.5:alignment :drawBold.1:alignment
-    * draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
+  253 set :drawPrint.5:x 22
+  254 set :drawPrint.5:y 105
+  255 set :drawPrint.5:alignment @bottomLeft
+  256 draw print 22 105 @bottomLeft
   257 label *label67
   258 label *label66
   259 op add :drawText.6:x 22 1
   260 set :drawText.6:y 105
   261 set :drawText.6:alignment @bottomLeft
   262 print "Unit factories"
-    * set :drawPrint.6:x 23
-    * set :drawPrint.6:y :drawBold.1:y
-    * set :drawPrint.6:alignment :drawBold.1:alignment
-    * draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
+  263 set :drawPrint.6:y 105
+  264 set :drawPrint.6:alignment @bottomLeft
+  265 draw print 23 105 @bottomLeft
   266 label *label69
   267 label *label68
   268 label *label65
   269 jump *label70 lessThanEq .factoryProgress 0
-    * set :drawItem:col 0
-    * set :drawItem:y 90
-    * set :drawItem:columns 1
-    * set :drawItem:item :drawMaterials:unit1
-    * set :drawItem:current .factoryProgress
-    * set :drawItem:target 1
-    * op mul *tmp148 1 176
-    * op div *tmp149 176 2
-    * op sub :drawItem:barLength 210 88
-    * op add :drawItem:textEnd 48 122
   270 op mul *tmp152 122 .factoryProgress
-    * op div *tmp153 *tmp152 1
+  271 op mul *tmp153 .factoryProgress 122
   272 op min :drawItem:length 122 *tmp153
-    * op mul *tmp155 0 176
-    * op div *tmp156 0 2
-    * op add :drawItem:iconX 11 0
-    * op mul *tmp158 0 176
-    * op div *tmp159 0 2
-    * op add :drawItem:barX 22 0
-    * op mul *tmp161 0 176
-    * op div *tmp162 0 2
   273 op add :drawItem:textX 170 0
   274 draw col %[white]
-    * op add *tmp164 90 5
   275 draw image 11 95 :drawMaterials:unit1 16 0
   276 draw color 0 128 0 255
   277 draw rect 22 90 :drawItem:length 10
   278 draw color 0 255 0 255
   279 draw lineRect 22 90 122 10
-    * op add *tmp165 90 5
   280 op add *tmp166 95 2
   281 set :drawBold.2:x 170
   282 set :drawBold.2:y 97
   283 set :drawBold.2:alignment @right
-    * set :drawText.7:x :drawItem:textX
-    * set :drawText.7:y *tmp166
+  284 set :drawText.7:x 170
+  285 set :drawText.7:y 97
   286 set :drawText.7:alignment @right
   287 print :drawMaterials:unitCount1
   288 print "/"
   289 print :drawMaterials:unitTotal1
-    * set :drawPrint.7:x :drawBold.2:x
-    * set :drawPrint.7:y :drawBold.2:y
-    * set :drawPrint.7:alignment :drawBold.2:alignment
-    * draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
+  290 set :drawPrint.7:x 170
+  291 set :drawPrint.7:y 97
+  292 set :drawPrint.7:alignment @right
+  293 draw print :drawItem:textX *tmp166 @right
   294 label *label75
   295 label *label74
-    * op add :drawText.8:x :drawItem:textX 1
-    * set :drawText.8:y *tmp166
+  296 op add :drawText.8:x 170 1
+  297 set :drawText.8:y 97
   298 set :drawText.8:alignment @right
   299 print :drawMaterials:unitCount1
   300 print "/"
   301 print :drawMaterials:unitTotal1
-    * set :drawPrint.8:x :drawText.8:x
-    * set :drawPrint.8:y :drawBold.2:y
-    * set :drawPrint.8:alignment :drawBold.2:alignment
-    * draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
+  302 set :drawPrint.8:x 171
+  303 set :drawPrint.8:y 97
+  304 set :drawPrint.8:alignment @right
+  305 draw print 171 *tmp166 @right
   306 label *label77
   307 label *label76
   308 label *label73
-    * op add :drawItem:col 0 1
   309 jump *label78 lessThan 1 1
-    * op sub :drawItem:y 90 15
   310 label *label78
   311 label *label79
   312 label *label72
   313 jump *label80 equal :drawMaterials:unit2 null
-    * set :drawItem.1:col 0
-    * set :drawItem.1:y 75
-    * set :drawItem.1:columns 1
-    * set :drawItem.1:item :drawMaterials:unit2
-    * set :drawItem.1:current .reconstructorProgress
-    * set :drawItem.1:target 1
-    * op mul *tmp172 1 176
-    * op div *tmp173 176 2
-    * op sub :drawItem.1:barLength 210 88
-    * op add :drawItem.1:textEnd 48 122
   314 op mul *tmp176 122 .reconstructorProgress
-    * op div *tmp177 *tmp176 1
+  315 op mul *tmp177 .reconstructorProgress 122
   316 op min :drawItem.1:length 122 *tmp177
-    * op mul *tmp179 0 176
-    * op div *tmp180 0 2
-    * op add :drawItem.1:iconX 11 0
-    * op mul *tmp182 0 176
-    * op div *tmp183 0 2
-    * op add :drawItem.1:barX 22 0
-    * op mul *tmp185 0 176
-    * op div *tmp186 0 2
   317 op add :drawItem.1:textX 170 0
   318 draw col %[white]
-    * op add *tmp188 75 5
   319 draw image 11 80 :drawMaterials:unit2 16 0
   320 draw color 0 128 0 255
   321 draw rect 22 75 :drawItem.1:length 10
   322 draw color 0 255 0 255
   323 draw lineRect 22 75 122 10
-    * op add *tmp189 75 5
   324 op add *tmp190 80 2
   325 set :drawBold.3:x 170
   326 set :drawBold.3:y 82
   327 set :drawBold.3:alignment @right
-    * set :drawText.9:x :drawItem.1:textX
-    * set :drawText.9:y *tmp190
+  328 set :drawText.9:x 170
+  329 set :drawText.9:y 82
   330 set :drawText.9:alignment @right
   331 print :drawMaterials:unitCount2
   332 print "/"
   333 print :drawMaterials:unitTotal2
-    * set :drawPrint.9:x :drawBold.3:x
-    * set :drawPrint.9:y :drawBold.3:y
-    * set :drawPrint.9:alignment :drawBold.3:alignment
-    * draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
+  334 set :drawPrint.9:x 170
+  335 set :drawPrint.9:y 82
+  336 set :drawPrint.9:alignment @right
+  337 draw print :drawItem.1:textX *tmp190 @right
   338 label *label85
   339 label *label84
-    * op add :drawText.10:x :drawItem.1:textX 1
-    * set :drawText.10:y *tmp190
+  340 op add :drawText.10:x 170 1
+  341 set :drawText.10:y 82
   342 set :drawText.10:alignment @right
   343 print :drawMaterials:unitCount2
   344 print "/"
   345 print :drawMaterials:unitTotal2
-    * set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawBold.3:y
-    * set :drawPrint.10:alignment :drawBold.3:alignment
-    * draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
+  346 set :drawPrint.10:x 171
+  347 set :drawPrint.10:y 82
+  348 set :drawPrint.10:alignment @right
+  349 draw print 171 *tmp190 @right
   350 label *label87
   351 label *label86
   352 label *label83
-    * op add :drawItem.1:col 0 1
   353 jump *label88 lessThan 1 1
-    * op sub :drawItem.1:y 75 15
   354 label *label88
   355 label *label89
   356 label *label82
   357 jump *label90 equal :drawMaterials:unit3 null
-    * set :drawItem.2:col 0
-    * set :drawItem.2:y 60
-    * set :drawItem.2:columns 1
-    * set :drawItem.2:item :drawMaterials:unit3
-    * set :drawItem.2:current :drawMaterials:multiReconstructorProgress
-    * set :drawItem.2:target 1
-    * op mul *tmp196 1 176
-    * op div *tmp197 176 2
-    * op sub :drawItem.2:barLength 210 88
-    * op add :drawItem.2:textEnd 48 122
   358 op mul *tmp200 122 :drawMaterials:multiReconstructorProgress
-    * op div *tmp201 *tmp200 1
+  359 op mul *tmp201 :drawMaterials:multiReconstructorProgress 122
   360 op min :drawItem.2:length 122 *tmp201
-    * op mul *tmp203 0 176
-    * op div *tmp204 0 2
-    * op add :drawItem.2:iconX 11 0
-    * op mul *tmp206 0 176
-    * op div *tmp207 0 2
-    * op add :drawItem.2:barX 22 0
-    * op mul *tmp209 0 176
-    * op div *tmp210 0 2
   361 op add :drawItem.2:textX 170 0
   362 draw col %[white]
-    * op add *tmp212 60 5
   363 draw image 11 65 :drawMaterials:unit3 16 0
   364 draw color 0 128 0 255
   365 draw rect 22 60 :drawItem.2:length 10
   366 draw color 0 255 0 255
   367 draw lineRect 22 60 122 10
-    * op add *tmp213 60 5
   368 op add *tmp214 65 2
   369 set :drawBold.4:x 170
   370 set :drawBold.4:y 67
   371 set :drawBold.4:alignment @right
-    * set :drawText.11:x :drawItem.2:textX
-    * set :drawText.11:y *tmp214
+  372 set :drawText.11:x 170
+  373 set :drawText.11:y 67
   374 set :drawText.11:alignment @right
   375 print .megas
   376 print "/"
   377 print .megaTarget
-    * set :drawPrint.11:x :drawBold.4:x
-    * set :drawPrint.11:y :drawBold.4:y
-    * set :drawPrint.11:alignment :drawBold.4:alignment
-    * draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
+  378 set :drawPrint.11:x 170
+  379 set :drawPrint.11:y 67
+  380 set :drawPrint.11:alignment @right
+  381 draw print :drawItem.2:textX *tmp214 @right
   382 label *label95
   383 label *label94
-    * op add :drawText.12:x :drawItem.2:textX 1
-    * set :drawText.12:y *tmp214
+  384 op add :drawText.12:x 170 1
+  385 set :drawText.12:y 67
   386 set :drawText.12:alignment @right
   387 print .megas
   388 print "/"
   389 print .megaTarget
-    * set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawBold.4:y
-    * set :drawPrint.12:alignment :drawBold.4:alignment
-    * draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
+  390 set :drawPrint.12:x 171
+  391 set :drawPrint.12:y 67
+  392 set :drawPrint.12:alignment @right
+  393 draw print 171 *tmp214 @right
   394 label *label97
   395 label *label96
   396 label *label93
-    * op add :drawItem.2:col 0 1
   397 jump *label98 lessThan 1 1
-    * op sub :drawItem.2:y 60 15
   398 label *label98
   399 label *label99
   400 label *label92
 
   417 sensor *tmp223 A¾BFLW-air-factory13 :drawMaterials:item
   418 set :drawItem.3:col :drawMaterials:col
   419 set :drawItem.3:y :drawMaterials:y
-    * set :drawItem.3:columns 1
-    * set :drawItem.3:item :drawMaterials:item
-    * set :drawItem.3:current *tmp223
-    * set :drawItem.3:target :drawMaterials:target
-    * op mul *tmp224 1 176
-    * op div *tmp225 176 2
-    * op sub :drawItem.3:barLength 210 88
-    * op add :drawItem.3:textEnd 48 122
   420 op mul *tmp228 122 *tmp223
   421 op div *tmp229 *tmp228 :drawMaterials:target
   422 op min :drawItem.3:length 122 *tmp229
   423 op mul *tmp231 :drawMaterials:col 176
-    * op mul *tmp232 :drawItem.3:col 88
+  424 op mul *tmp232 :drawMaterials:col 88
   425 op add :drawItem.3:iconX 11 *tmp232
-    * op mul *tmp234 :drawMaterials:col 176
-    * op div *tmp235 *tmp231 2
+  426 op mul *tmp235 :drawMaterials:col 88
   427 op add :drawItem.3:barX 22 *tmp232
-    * op mul *tmp237 :drawMaterials:col 176
-    * op div *tmp238 *tmp231 2
+  428 op mul *tmp238 :drawMaterials:col 88
   429 op add :drawItem.3:textX 170 *tmp232
   430 draw col %[white]
   431 op add *tmp240 :drawMaterials:y 5
 
   434 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
   435 draw color 0 255 0 255
   436 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
-    * op add *tmp241 :drawMaterials:y 5
-    * op add *tmp242 *tmp240 2
+  437 op add *tmp242 :drawMaterials:y 7
   438 set :drawBold.5:x :drawItem.3:textX
   439 set :drawBold.5:y *tmp242
   440 set :drawBold.5:alignment @right
 
   442 set :drawText.13:y *tmp242
   443 set :drawText.13:alignment @right
   444 print :drawMaterials:target
-    * set :drawPrint.13:x :drawBold.5:x
-    * set :drawPrint.13:y :drawBold.5:y
-    * set :drawPrint.13:alignment :drawBold.5:alignment
-    * draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
+  445 set :drawPrint.13:x :drawItem.3:textX
+  446 set :drawPrint.13:y *tmp242
+  447 set :drawPrint.13:alignment @right
+  448 draw print :drawItem.3:textX *tmp242 @right
   449 label *label110
   450 label *label109
-    * op add :drawText.14:x :drawItem.3:textX 1
+  451 op add :drawText.14:x *tmp232 171
   452 set :drawText.14:y *tmp242
   453 set :drawText.14:alignment @right
   454 print :drawMaterials:target
-    * set :drawPrint.14:x :drawText.14:x
-    * set :drawPrint.14:y :drawBold.5:y
-    * set :drawPrint.14:alignment :drawBold.5:alignment
-    * draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
+  455 set :drawPrint.14:y *tmp242
+  456 set :drawPrint.14:alignment @right
+  457 draw print :drawText.14:x *tmp242 @right
   458 label *label112
   459 label *label111
   460 label *label108
 
   488 set :drawText.15:alignment @bottomLeft
   489 read *tmp250 processor3 ".mapAction"
   490 print *tmp250
-    * set :drawPrint.15:x :drawBold.6:x
-    * set :drawPrint.15:y :drawBold.6:y
-    * set :drawPrint.15:alignment :drawBold.6:alignment
-    * draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
+  491 set :drawPrint.15:x 22
+  492 set :drawPrint.15:y 105
+  493 set :drawPrint.15:alignment @bottomLeft
+  494 draw print 22 105 @bottomLeft
   495 label *label119
   496 label *label118
   497 op add :drawText.16:x 22 1
 
   499 set :drawText.16:alignment @bottomLeft
   500 read *tmp252 processor3 ".mapAction"
   501 print *tmp252
-    * set :drawPrint.16:x 23
-    * set :drawPrint.16:y :drawBold.6:y
-    * set :drawPrint.16:alignment :drawBold.6:alignment
-    * draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
+  502 set :drawPrint.16:y 105
+  503 set :drawPrint.16:alignment @bottomLeft
+  504 draw print 23 105 @bottomLeft
   505 label *label121
   506 label *label120
   507 label *label117
-    * set :drawItem.4:col 0
-    * set :drawItem.4:y 90
-    * set :drawItem.4:columns 1
-    * set :drawItem.4:item @titanium
   508 read :drawItem.4:current processor3 ".mapProgress"
   509 read :drawItem.4:target processor3 ".mapTotal"
-    * op mul *tmp253 1 176
-    * op div *tmp254 176 2
-    * op sub :drawItem.4:barLength 210 88
-    * op add :drawItem.4:textEnd 48 122
   510 op mul *tmp257 122 :drawItem.4:current
   511 op div *tmp258 *tmp257 :drawItem.4:target
   512 op min :drawItem.4:length 122 *tmp258
-    * op mul *tmp260 0 176
-    * op div *tmp261 0 2
-    * op add :drawItem.4:iconX 11 0
-    * op mul *tmp263 0 176
-    * op div *tmp264 0 2
-    * op add :drawItem.4:barX 22 0
-    * op mul *tmp266 0 176
-    * op div *tmp267 0 2
   513 op add :drawItem.4:textX 170 0
   514 draw col %[white]
-    * op add *tmp269 90 5
   515 draw image 11 95 @titanium 16 0
   516 draw color 0 128 0 255
   517 draw rect 22 90 :drawItem.4:length 10
   518 draw color 0 255 0 255
   519 draw lineRect 22 90 122 10
-    * op add *tmp270 90 5
   520 op add *tmp271 95 2
   521 set :drawBold.7:x 170
   522 set :drawBold.7:y 97
   523 set :drawBold.7:alignment @right
-    * set :drawText.17:x :drawItem.4:textX
-    * set :drawText.17:y *tmp271
+  524 set :drawText.17:x 170
+  525 set :drawText.17:y 97
   526 set :drawText.17:alignment @right
   527 print "x"
   528 read *tmp272 processor3 ".mapSpots"
   529 print *tmp272
-    * set :drawPrint.17:x :drawBold.7:x
-    * set :drawPrint.17:y :drawBold.7:y
-    * set :drawPrint.17:alignment :drawBold.7:alignment
-    * draw print :drawText.17:x :drawText.17:y :drawText.17:alignment
+  530 set :drawPrint.17:x 170
+  531 set :drawPrint.17:y 97
+  532 set :drawPrint.17:alignment @right
+  533 draw print :drawItem.4:textX *tmp271 @right
   534 label *label125
   535 label *label124
-    * op add :drawText.18:x :drawItem.4:textX 1
-    * set :drawText.18:y *tmp271
+  536 op add :drawText.18:x 170 1
+  537 set :drawText.18:y 97
   538 set :drawText.18:alignment @right
   539 print "x"
   540 read *tmp274 processor3 ".mapSpots"
   541 print *tmp274
-    * set :drawPrint.18:x :drawText.18:x
-    * set :drawPrint.18:y :drawBold.7:y
-    * set :drawPrint.18:alignment :drawBold.7:alignment
-    * draw print :drawText.18:x :drawText.18:y :drawText.18:alignment
+  542 set :drawPrint.18:x 171
+  543 set :drawPrint.18:y 97
+  544 set :drawPrint.18:alignment @right
+  545 draw print 171 *tmp271 @right
   546 label *label127
   547 label *label126
   548 label *label123
-    * op add :drawItem.4:col 0 1
   549 jump *label128 lessThan 1 1
-    * op sub :drawItem.4:y 90 15
   550 label *label128
   551 label *label129
   552 label *label122
 
   561 set :drawText.19:y 105
   562 set :drawText.19:alignment @bottomLeft
   563 print "Materials"
-    * set :drawPrint.19:x :drawBold.8:x
-    * set :drawPrint.19:y :drawBold.8:y
-    * set :drawPrint.19:alignment :drawBold.8:alignment
-    * draw print :drawText.19:x :drawText.19:y :drawText.19:alignment
+  564 set :drawPrint.19:x 22
+  565 set :drawPrint.19:y 105
+  566 set :drawPrint.19:alignment @bottomLeft
+  567 draw print 22 105 @bottomLeft
   568 label *label132
   569 label *label131
   570 op add :drawText.20:x 22 1
   571 set :drawText.20:y 105
   572 set :drawText.20:alignment @bottomLeft
   573 print "Materials"
-    * set :drawPrint.20:x 23
-    * set :drawPrint.20:y :drawBold.8:y
-    * set :drawPrint.20:alignment :drawBold.8:alignment
-    * draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
+  574 set :drawPrint.20:y 105
+  575 set :drawPrint.20:alignment @bottomLeft
+  576 draw print 23 105 @bottomLeft
   577 label *label134
   578 label *label133
   579 label *label130
 
   618 set :drawItem.5:col :drawMaterials:col
   619 set :drawItem.5:y :drawMaterials:y
   620 set :drawItem.5:columns 1
-    * set :drawItem.5:item :drawMaterials:item.1
-    * set :drawItem.5:current *tmp283
-    * set :drawItem.5:target :drawMaterials:target.1
-    * op mul *tmp284 :drawMaterials:columns 176
-    * op mul *tmp285 :drawItem.5:columns 88
-    * op sub :drawItem.5:barLength 210 *tmp285
-    * op add :drawItem.5:textEnd 48 :drawItem.5:barLength
-    * op mul *tmp288 :drawItem.5:barLength *tmp283
+  621 op mul *tmp284 1 176
+  622 op mul *tmp285 1 88
+  623 op sub :drawItem.5:barLength 210 88
+  624 op add :drawItem.5:textEnd 48 122
+  625 op mul *tmp288 122 *tmp283
   626 op div *tmp289 *tmp288 :drawMaterials:target.1
-    * op min :drawItem.5:length :drawItem.5:barLength *tmp289
+  627 op min :drawItem.5:length 122 *tmp289
   628 op mul *tmp291 :drawMaterials:col 176
-    * op mul *tmp292 :drawItem.5:col 88
+  629 op mul *tmp292 :drawMaterials:col 88
   630 op add :drawItem.5:iconX 11 *tmp292
-    * op mul *tmp294 :drawMaterials:col 176
-    * op div *tmp295 *tmp291 2
+  631 op mul *tmp295 :drawMaterials:col 88
   632 op add :drawItem.5:barX 22 *tmp292
-    * op mul *tmp297 :drawMaterials:col 176
-    * op div *tmp298 *tmp291 2
-    * op add :drawItem.5:textX :drawItem.5:textEnd *tmp292
+  633 op mul *tmp298 :drawMaterials:col 88
+  634 op add :drawItem.5:textX 170 *tmp292
   635 draw col %[white]
   636 op add *tmp300 :drawMaterials:y 5
   637 draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 16 0
   638 draw color 0 128 0 255
   639 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   640 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y :drawItem.5:barLength 10
-    * op add *tmp301 :drawMaterials:y 5
-    * op add *tmp302 *tmp300 2
+  641 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  642 op add *tmp302 :drawMaterials:y 7
   643 set :drawBold.9:x :drawItem.5:textX
   644 set :drawBold.9:y *tmp302
   645 set :drawBold.9:alignment @right
 
   647 set :drawText.21:y *tmp302
   648 set :drawText.21:alignment @right
   649 print :drawMaterials:target.1
-    * set :drawPrint.21:x :drawBold.9:x
-    * set :drawPrint.21:y :drawBold.9:y
-    * set :drawPrint.21:alignment :drawBold.9:alignment
-    * draw print :drawText.21:x :drawText.21:y :drawText.21:alignment
+  650 set :drawPrint.21:x :drawItem.5:textX
+  651 set :drawPrint.21:y *tmp302
+  652 set :drawPrint.21:alignment @right
+  653 draw print :drawItem.5:textX *tmp302 @right
   654 label *label152
   655 label *label151
   656 op add :drawText.22:x :drawItem.5:textX 1
   657 set :drawText.22:y *tmp302
   658 set :drawText.22:alignment @right
   659 print :drawMaterials:target.1
-    * set :drawPrint.22:x :drawText.22:x
-    * set :drawPrint.22:y :drawBold.9:y
-    * set :drawPrint.22:alignment :drawBold.9:alignment
-    * draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
+  660 set :drawPrint.22:y *tmp302
+  661 set :drawPrint.22:alignment @right
+  662 draw print :drawText.22:x *tmp302 @right
   663 label *label154
   664 label *label153
   665 label *label150
   666 op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label155 lessThan :drawItem.5:col :drawMaterials:columns
+  667 jump *label155 lessThan :drawItem.5:col 1
   668 set :drawItem.5:col 0
   669 op sub :drawItem.5:y :drawMaterials:y 15
   670 label *label155
 
   700 set :drawBold.10:y *tmp309
   701 set :drawBold.10:alignment @bottomLeft
   702 set :drawText.23:x 22
-    * set :drawText.23:y :drawUnit:y
+  703 set :drawText.23:y *tmp309
   704 set :drawText.23:alignment @bottomLeft
   705 print "Builder"
-    * set :drawPrint.23:x :drawBold.10:x
-    * set :drawPrint.23:y :drawBold.10:y
-    * set :drawPrint.23:alignment :drawBold.10:alignment
-    * draw print :drawText.23:x :drawText.23:y :drawText.23:alignment
+  706 set :drawPrint.23:x 22
+  707 set :drawPrint.23:y *tmp309
+  708 set :drawPrint.23:alignment @bottomLeft
+  709 draw print 22 :drawUnit:y @bottomLeft
   710 label *label164
   711 label *label163
   712 op add :drawText.24:x 22 1
-    * set :drawText.24:y :drawUnit:y
+  713 set :drawText.24:y *tmp309
   714 set :drawText.24:alignment @bottomLeft
   715 print "Builder"
-    * set :drawPrint.24:x 23
-    * set :drawPrint.24:y :drawBold.10:y
-    * set :drawPrint.24:alignment :drawBold.10:alignment
-    * draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
+  716 set :drawPrint.24:y *tmp309
+  717 set :drawPrint.24:alignment @bottomLeft
+  718 draw print 23 :drawUnit:y @bottomLeft
   719 label *label166
   720 label *label165
   721 label *label162
 
   724 set :drawUnit.1:item @poly
   725 set :drawUnit.1:items 0
   726 set :drawUnit.1:y *tmp313
-    * set :drawItem.6:col 0
-    * set :drawItem.6:y *tmp313
-    * set :drawItem.6:columns 1
-    * set :drawItem.6:item @poly
-    * set :drawItem.6:current 0
   727 set :drawItem.6:target .transportTarget
-    * op mul *tmp314 1 176
-    * op div *tmp315 176 2
-    * op sub :drawItem.6:barLength 210 88
-    * op add :drawItem.6:textEnd 48 122
-    * op mul *tmp318 122 :drawUnit.1:items
-    * op div *tmp319 *tmp318 :drawItem.6:target
+  728 op mul *tmp318 122 0
+  729 op div *tmp319 0 :drawItem.6:target
   730 op min :drawItem.6:length 122 *tmp319
-    * op mul *tmp321 0 176
-    * op div *tmp322 0 2
-    * op add :drawItem.6:iconX 11 0
-    * op mul *tmp324 0 176
-    * op div *tmp325 0 2
-    * op add :drawItem.6:barX 22 0
-    * op mul *tmp327 0 176
-    * op div *tmp328 0 2
   731 op add :drawItem.6:textX 170 0
   732 draw col %[white]
-    * op add *tmp330 :drawUnit.1:y 5
-    * draw image 11 *tmp330 :drawUnit.1:item 16 0
+  733 op add *tmp330 *tmp313 5
+  734 draw image 11 *tmp330 @poly 16 0
   735 draw color 0 128 0 255
-    * draw rect 22 :drawUnit.1:y :drawItem.6:length 10
+  736 draw rect 22 *tmp313 :drawItem.6:length 10
   737 draw color 0 255 0 255
-    * draw lineRect 22 :drawUnit.1:y 122 10
-    * op add *tmp331 :drawUnit.1:y 5
-    * op add *tmp332 *tmp330 2
+  738 draw lineRect 22 *tmp313 122 10
+  739 op add *tmp331 *tmp313 5
+  740 op add *tmp332 :drawUnit.1:y 7
   741 set :drawBold.11:x 170
   742 set :drawBold.11:y *tmp332
   743 set :drawBold.11:alignment @right
-    * set :drawText.25:x :drawItem.6:textX
+  744 set :drawText.25:x 170
   745 set :drawText.25:y *tmp332
   746 set :drawText.25:alignment @right
   747 print .transportTarget
-    * set :drawPrint.25:x :drawBold.11:x
-    * set :drawPrint.25:y :drawBold.11:y
-    * set :drawPrint.25:alignment :drawBold.11:alignment
-    * draw print :drawText.25:x :drawText.25:y :drawText.25:alignment
+  748 set :drawPrint.25:x 170
+  749 set :drawPrint.25:y *tmp332
+  750 set :drawPrint.25:alignment @right
+  751 draw print :drawItem.6:textX *tmp332 @right
   752 label *label173
   753 label *label172
-    * op add :drawText.26:x :drawItem.6:textX 1
+  754 op add :drawText.26:x 170 1
   755 set :drawText.26:y *tmp332
   756 set :drawText.26:alignment @right
   757 print .transportTarget
-    * set :drawPrint.26:x :drawText.26:x
-    * set :drawPrint.26:y :drawBold.11:y
-    * set :drawPrint.26:alignment :drawBold.11:alignment
-    * draw print :drawText.26:x :drawText.26:y :drawText.26:alignment
+  758 set :drawPrint.26:x 171
+  759 set :drawPrint.26:y *tmp332
+  760 set :drawPrint.26:alignment @right
+  761 draw print 171 *tmp332 @right
   762 label *label175
   763 label *label174
   764 label *label171
-    * op add :drawItem.6:col 0 1
   765 jump *label176 lessThan 1 1
-    * op sub :drawItem.6:y :drawUnit.1:y 15
+  766 op sub :drawItem.6:y *tmp313 15
   767 label *label176
   768 label *label177
   769 label *label170
 
   778 set :drawUnit.2:item .transportItem
   779 set :drawUnit.2:items *tmp341
   780 set :drawUnit.2:y *tmp342
-    * set :drawItem.7:col 0
-    * set :drawItem.7:y *tmp342
-    * set :drawItem.7:columns 1
-    * set :drawItem.7:item :drawUnit.2:item
-    * set :drawItem.7:current *tmp341
   781 set :drawItem.7:target .transportTarget
-    * op mul *tmp343 1 176
-    * op div *tmp344 176 2
-    * op sub :drawItem.7:barLength 210 88
-    * op add :drawItem.7:textEnd 48 122
-    * op mul *tmp347 122 :drawUnit.2:items
+  782 op mul *tmp347 122 *tmp341
   783 op div *tmp348 *tmp347 :drawItem.7:target
   784 op min :drawItem.7:length 122 *tmp348
-    * op mul *tmp350 0 176
-    * op div *tmp351 0 2
-    * op add :drawItem.7:iconX 11 0
-    * op mul *tmp353 0 176
-    * op div *tmp354 0 2
-    * op add :drawItem.7:barX 22 0
-    * op mul *tmp356 0 176
-    * op div *tmp357 0 2
   785 op add :drawItem.7:textX 170 0
   786 draw col %[white]
-    * op add *tmp359 :drawUnit.2:y 5
+  787 op add *tmp359 *tmp342 5
   788 draw image 11 *tmp359 :drawUnit.2:item 16 0
   789 draw color 0 128 0 255
-    * draw rect 22 :drawUnit.2:y :drawItem.7:length 10
+  790 draw rect 22 *tmp342 :drawItem.7:length 10
   791 draw color 0 255 0 255
-    * draw lineRect 22 :drawUnit.2:y 122 10
-    * op add *tmp360 :drawUnit.2:y 5
-    * op add *tmp361 *tmp359 2
+  792 draw lineRect 22 *tmp342 122 10
+  793 op add *tmp360 *tmp342 5
+  794 op add *tmp361 :drawUnit.2:y 7
   795 set :drawBold.12:x 170
   796 set :drawBold.12:y *tmp361
   797 set :drawBold.12:alignment @right
-    * set :drawText.27:x :drawItem.7:textX
+  798 set :drawText.27:x 170
   799 set :drawText.27:y *tmp361
   800 set :drawText.27:alignment @right
   801 print .transportTarget
-    * set :drawPrint.27:x :drawBold.12:x
-    * set :drawPrint.27:y :drawBold.12:y
-    * set :drawPrint.27:alignment :drawBold.12:alignment
-    * draw print :drawText.27:x :drawText.27:y :drawText.27:alignment
+  802 set :drawPrint.27:x 170
+  803 set :drawPrint.27:y *tmp361
+  804 set :drawPrint.27:alignment @right
+  805 draw print :drawItem.7:textX *tmp361 @right
   806 label *label182
   807 label *label181
-    * op add :drawText.28:x :drawItem.7:textX 1
+  808 op add :drawText.28:x 170 1
   809 set :drawText.28:y *tmp361
   810 set :drawText.28:alignment @right
   811 print .transportTarget
-    * set :drawPrint.28:x :drawText.28:x
-    * set :drawPrint.28:y :drawBold.12:y
-    * set :drawPrint.28:alignment :drawBold.12:alignment
-    * draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
+  812 set :drawPrint.28:x 171
+  813 set :drawPrint.28:y *tmp361
+  814 set :drawPrint.28:alignment @right
+  815 draw print 171 *tmp361 @right
   816 label *label184
   817 label *label183
   818 label *label180
-    * op add :drawItem.7:col 0 1
   819 jump *label185 lessThan 1 1
-    * op sub :drawItem.7:y :drawUnit.2:y 15
+  820 op sub :drawItem.7:y *tmp342 15
   821 label *label185
   822 label *label186
   823 label *label179
 
   826 label *label159
   827 set :drawUnits:x 170
   828 draw col %[white]
-    * set :drawUnitCount:type @poly
   829 set :drawUnitCount:count .polys
   830 jump *label189 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp369 170 20
   831 draw image 150 127 @poly 12 0
   832 set :drawText.29:x 170
   833 set :drawText.29:y 129
   834 set :drawText.29:alignment @right
   835 print "x"
   836 print :drawUnitCount:count
-    * set :drawPrint.29:x :drawUnits:x
-    * set :drawPrint.29:y 129
-    * set :drawPrint.29:alignment @right
-    * draw print :drawText.29:x :drawText.29:y :drawText.29:alignment
+  837 set :drawPrint.29:x 170
+  838 draw print 170 129 @right
   839 label *label192
   840 label *label191
   841 op sub :drawUnits:x 170 30
   842 label *label189
   843 label *label190
   844 label *label188
-    * set :drawUnitCount.1:type @mono
   845 set :drawUnitCount.1:count .monos
   846 jump *label194 lessThanEq :drawUnitCount.1:count 0
   847 op sub *tmp372 :drawUnits:x 20
 
   851 set :drawText.30:alignment @right
   852 print "x"
   853 print :drawUnitCount.1:count
-    * set :drawPrint.30:x :drawUnits:x
-    * set :drawPrint.30:y 129
-    * set :drawPrint.30:alignment @right
-    * draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
+  854 draw print :drawUnits:x 129 @right
   855 label *label197
   856 label *label196
   857 op sub :drawUnits:x :drawUnits:x 30
   858 label *label194
   859 label *label195
   860 label *label193
-    * set :drawUnitCount.2:type @flare
   861 set :drawUnitCount.2:count .flares
   862 jump *label199 lessThanEq :drawUnitCount.2:count 0
   863 op sub *tmp375 :drawUnits:x 20
 
   867 set :drawText.31:alignment @right
   868 print "x"
   869 print :drawUnitCount.2:count
-    * set :drawPrint.31:x :drawUnits:x
-    * set :drawPrint.31:y 129
-    * set :drawPrint.31:alignment @right
-    * draw print :drawText.31:x :drawText.31:y :drawText.31:alignment
+  870 draw print :drawUnits:x 129 @right
   871 label *label202
   872 label *label201
   873 label *label199
 
   992 set :drawText.32:y 172
   993 set :drawText.32:alignment @topRight
   994 print "Base map"
-    * set :drawPrint.32:x 172
-    * set :drawPrint.32:y 172
-    * set :drawPrint.32:alignment @topRight
-    * draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
+  995 draw print 172 172 @topRight
   996 label *label240
   997 label *label239
   998 draw col %[white]
 
  1150 set :displayLog:x 11
  1151 set :displayLog:y 163
  1152 read :displayLog:logPosition bank1 511
-    * op sub :displayLog:records 511 :displayLog:logPosition
  1153 op sub *tmp408 510 :displayLog:logPosition
  1154 op idiv *tmp409 *tmp408 32
  1155 op add *tmp410 *tmp409 1
 
  1167 set :drawText.33:y 4
  1168 set :drawText.33:alignment @bottomRight
  1169 print :displayLog:pages
-    * set :drawPrint.33:x 172
-    * set :drawPrint.33:y 4
-    * set :drawPrint.33:alignment @bottomRight
-    * draw print :drawText.33:x :drawText.33:y :drawText.33:alignment
+ 1170 draw print 172 4 @bottomRight
  1171 label *label283
  1172 label *label282
  1173 draw col %[white]
-    * set *tmp418 :displayLog:stop
  1174 op sub :displayLog:position :displayLog:start 1
  1175 label *label284
  1176 jump *label286 lessThan :displayLog:position :displayLog:stop
  1177 read :displayLog:record bank1 :displayLog:position
-    * set :displayRecord:record :displayLog:record
  1178 op mod :displayRecord:id :displayLog:record 1000
  1179 jump *label288 lessThanEq :displayRecord:id @blockCount
  1180 op sub *tmp424 :displayRecord:id @blockCount
 
  1197 print :displayRecord:m
  1198 print ":"
  1199 print *tmp433
-    * set :displayRecordAt:image *tmp423
-    * set :displayRecordAt:text :displayRecord:s
-    * draw image :displayLog:x :displayLog:y :displayRecord:icon 14 0
-    * op add *tmp434 :displayLog:x 56
+ 1200 draw image :displayLog:x :displayLog:y *tmp423 14 0
  1201 op add *tmp435 :displayLog:x 44
  1202 op add *tmp436 :displayLog:y 2
  1203 set :drawText.34:x *tmp435
  1204 set :drawText.34:y *tmp436
  1205 set :drawText.34:alignment @right
  1206 print :displayRecord:s
-    * set :drawPrint.34:x *tmp435
-    * set :drawPrint.34:y *tmp436
-    * set :drawPrint.34:alignment @right
-    * draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
+ 1207 draw print *tmp435 *tmp436 @right
  1208 label *label294
  1209 label *label293
  1210 op sub :displayLog:y :displayLog:y 15
 
  1275 end
  1276 label *label5
  1277 set :unpackCfg2:cfg :drawBlock:cfg
-    * set :unpackCfg:cfg :drawBlock:cfg
-    * set :unpackCfg:index 1
  1278 set *tmp450 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp451 :unpackCfg2:cfg *tmp450
+ 1279 read *tmp451 :drawBlock:cfg 1
  1280 op sub *tmp452 *tmp451 74
  1281 lookup block :unpackCfg:type *tmp452
  1282 set *tmp454 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp455 :unpackCfg2:cfg *tmp454
+ 1283 read *tmp455 :drawBlock:cfg 2
  1284 op sub *tmp456 *tmp455 74
  1285 op div :unpackCfg:x *tmp456 2
  1286 set *tmp458 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp459 :unpackCfg2:cfg *tmp458
+ 1287 read *tmp459 :drawBlock:cfg 3
  1288 op sub *tmp460 *tmp459 74
  1289 op div :unpackCfg:y *tmp460 2
  1290 set *tmp462 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp463 :unpackCfg2:cfg *tmp462
+ 1291 read *tmp463 :drawBlock:cfg 4
  1292 op sub :unpackCfg:rotation *tmp463 74
  1293 set *tmp465 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp466 :unpackCfg2:cfg *tmp465
+ 1294 read *tmp466 :drawBlock:cfg 5
  1295 op sub :unpackCfg:ind *tmp466 74
  1296 sensor :unpackCfg:size :unpackCfg:type @size
  1297 label *label306
 
  1302 set :unpackCfg2:size :unpackCfg:size
  1303 set :unpackCfg2:index :unpackCfg:ind
  1304 label *label305
-    * set :drawBlock:type :unpackCfg:type
-    * set :drawBlock:x :unpackCfg:x
-    * set :drawBlock:y :unpackCfg:y
-    * set :drawBlock:rotation :unpackCfg:rotation
-    * set :drawBlock:size :unpackCfg:size
-    * set :drawBlock:index :unpackCfg:ind
-    * op or *tmp476 :unpackCfg2:x :unpackCfg2:y
+ 1305 op or *tmp476 :unpackCfg:x :unpackCfg:y
  1306 jump *label307 equal *tmp476 false
-    * op shl *tmp478 1 :unpackCfg2:index
+ 1307 op shl *tmp478 1 :unpackCfg:ind
  1308 op and *tmp479 .blocksBuilt *tmp478
  1309 jump *label309 equal *tmp479 false
  1310 draw col %[white]
 
  1312 label *label309
  1313 draw color 128 255 128 128
  1314 label *label310
-    * op mul *tmp481 2 :unpackCfg2:x
-    * op mul *tmp482 2 :unpackCfg2:y
-    * op mul *tmp483 2 :unpackCfg2:size
-    * op mul *tmp484 90 :unpackCfg2:rotation
-    * draw image *tmp481 *tmp482 :unpackCfg2:type *tmp483 *tmp484
+ 1315 op mul *tmp481 2 :unpackCfg:x
+ 1316 op mul *tmp482 2 :unpackCfg:y
+ 1317 op mul *tmp483 2 :unpackCfg:size
+ 1318 op mul *tmp484 90 :unpackCfg:rotation
+ 1319 draw image *tmp481 *tmp482 :unpackCfg:type *tmp483 *tmp484
  1320 label *label307
  1321 label *label308
  1322 label *label304

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-250 instructions):
 
    51 op add *tmp58 *tmp60 *tmp61
    52 label *label26
    53 op mul *tmp65 *tmp59 137
-    * op mul *tmp66 :animate:ratio 88
    54 op add *tmp63 *tmp65 *tmp61
    55 label *label27
    56 op mul *tmp70 *tmp59 32
 
    66 draw reset
    67 draw clear 0 0 32
    68 draw col %[gold]
-    * set :drawBold:x 40
-    * set :drawBold:y 161
-    * set :drawBold:alignment @bottom
-    * set :drawText:x 40
-    * set :drawText:y 161
-    * set :drawText:alignment @bottom
    69 print "Goal"
-    * set :drawPrint:x 40
-    * set :drawPrint:y 161
-    * set :drawPrint:alignment @bottom
    70 draw print 40 161 @bottom
    71 label *label33
    72 label *label32
-    * op add :drawText.1:x 40 1
-    * set :drawText.1:y 161
-    * set :drawText.1:alignment @bottom
    73 print "Goal"
-    * set :drawPrint.1:y 161
-    * set :drawPrint.1:alignment @bottom
    74 draw print 41 161 @bottom
    75 label *label35
    76 label *label34
 
   122 print *tmp94
   123 print "."
   124 print *tmp95
-    * set :drawText.2:x 170
-    * set :drawText.2:y 172
-    * set :drawText.2:alignment @topRight
   125 print ")"
   126 draw print 170 172 @topRight
   127 label *label45
 
   129 jump *label46 equal .titaniumDrill false
   130 sensor *tmp97 .titaniumDrill @titanium
   131 op max :drawHeader:count .titaniumDrillCount *tmp97
-    * set :drawHeader:x 170
   132 op log10 *tmp99 :drawHeader:count
   133 op floor :drawHeader:len *tmp99
-    * set :drawText.3:x 170
-    * set :drawText.3:y 155
-    * set :drawText.3:alignment @topRight
   134 print "x"
   135 print :drawHeader:count
-    * set :drawPrint.3:x 170
   136 draw print 170 155 @topRight
   137 label *label49
   138 label *label48
 
   143 label *label47
   144 jump *label50 equal .thoriumContainer false
   145 sensor :drawHeader:count .thoriumContainer @thorium
-    * set :drawHeader:x.1 120
   146 op log10 *tmp106 :drawHeader:count
   147 op floor :drawHeader:len.1 *tmp106
-    * set :drawText.4:x 120
-    * set :drawText.4:y 155
-    * set :drawText.4:alignment @topRight
   148 print "x"
   149 print :drawHeader:count
-    * set :drawPrint.4:x 120
   150 draw print 120 155 @topRight
   151 label *label53
   152 label *label52
 
   215 label *label62
   216 label *label60
   217 label *label58
-    * set :drawBold.1:x 22
-    * set :drawBold.1:y 105
-    * set :drawBold.1:alignment @bottomLeft
-    * set :drawText.5:x 22
-    * set :drawText.5:y 105
-    * set :drawText.5:alignment @bottomLeft
   218 print "Unit factories"
-    * set :drawPrint.5:x 22
-    * set :drawPrint.5:y 105
-    * set :drawPrint.5:alignment @bottomLeft
   219 draw print 22 105 @bottomLeft
   220 label *label67
   221 label *label66
-    * op add :drawText.6:x 22 1
-    * set :drawText.6:y 105
-    * set :drawText.6:alignment @bottomLeft
   222 print "Unit factories"
-    * set :drawPrint.6:y 105
-    * set :drawPrint.6:alignment @bottomLeft
   223 draw print 23 105 @bottomLeft
   224 label *label69
   225 label *label68
 
   227 jump *label70 lessThanEq .factoryProgress 0
   228 op mul *tmp152 122 .factoryProgress
   229 op mul *tmp153 .factoryProgress 122
-    * op min :drawItem:length 122 *tmp153
+  230 op min :drawItem:length 122 *tmp152
   231 op add :drawItem:textX 170 0
   232 draw col %[white]
   233 draw image 11 95 :drawMaterials:unit1 16 0
 
   236 draw color 0 255 0 255
   237 draw lineRect 22 90 122 10
   238 op add *tmp166 95 2
-    * set :drawBold.2:x 170
-    * set :drawBold.2:y 97
-    * set :drawBold.2:alignment @right
-    * set :drawText.7:x 170
-    * set :drawText.7:y 97
-    * set :drawText.7:alignment @right
   239 print :drawMaterials:unitCount1
   240 print "/"
   241 print :drawMaterials:unitTotal1
-    * set :drawPrint.7:x 170
-    * set :drawPrint.7:y 97
-    * set :drawPrint.7:alignment @right
-    * draw print :drawItem:textX *tmp166 @right
+  242 draw print 170 97 @right
   243 label *label75
   244 label *label74
-    * op add :drawText.8:x 170 1
-    * set :drawText.8:y 97
-    * set :drawText.8:alignment @right
   245 print :drawMaterials:unitCount1
   246 print "/"
   247 print :drawMaterials:unitTotal1
-    * set :drawPrint.8:x 171
-    * set :drawPrint.8:y 97
-    * set :drawPrint.8:alignment @right
-    * draw print 171 *tmp166 @right
+  248 draw print 171 97 @right
   249 label *label77
   250 label *label76
   251 label *label73
 
   256 jump *label80 equal :drawMaterials:unit2 null
   257 op mul *tmp176 122 .reconstructorProgress
   258 op mul *tmp177 .reconstructorProgress 122
-    * op min :drawItem.1:length 122 *tmp177
+  259 op min :drawItem.1:length 122 *tmp176
   260 op add :drawItem.1:textX 170 0
   261 draw col %[white]
   262 draw image 11 80 :drawMaterials:unit2 16 0
 
   265 draw color 0 255 0 255
   266 draw lineRect 22 75 122 10
   267 op add *tmp190 80 2
-    * set :drawBold.3:x 170
-    * set :drawBold.3:y 82
-    * set :drawBold.3:alignment @right
-    * set :drawText.9:x 170
-    * set :drawText.9:y 82
-    * set :drawText.9:alignment @right
   268 print :drawMaterials:unitCount2
   269 print "/"
   270 print :drawMaterials:unitTotal2
-    * set :drawPrint.9:x 170
-    * set :drawPrint.9:y 82
-    * set :drawPrint.9:alignment @right
-    * draw print :drawItem.1:textX *tmp190 @right
+  271 draw print 170 82 @right
   272 label *label85
   273 label *label84
-    * op add :drawText.10:x 170 1
-    * set :drawText.10:y 82
-    * set :drawText.10:alignment @right
   274 print :drawMaterials:unitCount2
   275 print "/"
   276 print :drawMaterials:unitTotal2
-    * set :drawPrint.10:x 171
-    * set :drawPrint.10:y 82
-    * set :drawPrint.10:alignment @right
-    * draw print 171 *tmp190 @right
+  277 draw print 171 82 @right
   278 label *label87
   279 label *label86
   280 label *label83
 
   285 jump *label90 equal :drawMaterials:unit3 null
   286 op mul *tmp200 122 :drawMaterials:multiReconstructorProgress
   287 op mul *tmp201 :drawMaterials:multiReconstructorProgress 122
-    * op min :drawItem.2:length 122 *tmp201
+  288 op min :drawItem.2:length 122 *tmp200
   289 op add :drawItem.2:textX 170 0
   290 draw col %[white]
   291 draw image 11 65 :drawMaterials:unit3 16 0
 
   294 draw color 0 255 0 255
   295 draw lineRect 22 60 122 10
   296 op add *tmp214 65 2
-    * set :drawBold.4:x 170
-    * set :drawBold.4:y 67
-    * set :drawBold.4:alignment @right
-    * set :drawText.11:x 170
-    * set :drawText.11:y 67
-    * set :drawText.11:alignment @right
   297 print .megas
   298 print "/"
   299 print .megaTarget
-    * set :drawPrint.11:x 170
-    * set :drawPrint.11:y 67
-    * set :drawPrint.11:alignment @right
-    * draw print :drawItem.2:textX *tmp214 @right
+  300 draw print 170 67 @right
   301 label *label95
   302 label *label94
-    * op add :drawText.12:x 170 1
-    * set :drawText.12:y 67
-    * set :drawText.12:alignment @right
   303 print .megas
   304 print "/"
   305 print .megaTarget
-    * set :drawPrint.12:x 171
-    * set :drawPrint.12:y 67
-    * set :drawPrint.12:alignment @right
-    * draw print 171 *tmp214 @right
+  306 draw print 171 67 @right
   307 label *label97
   308 label *label96
   309 label *label93
 
   328 label *label100
   329 jump *label105 lessThanEq :drawMaterials:target 0
   330 sensor *tmp223 A¾BFLW-air-factory13 :drawMaterials:item
-    * set :drawItem.3:col :drawMaterials:col
   331 set :drawItem.3:y :drawMaterials:y
   332 op mul *tmp228 122 *tmp223
   333 op div *tmp229 *tmp228 :drawMaterials:target
   334 op min :drawItem.3:length 122 *tmp229
-    * op mul *tmp231 :drawMaterials:col 176
   335 op mul *tmp232 :drawMaterials:col 88
   336 op add :drawItem.3:iconX 11 *tmp232
-    * op mul *tmp235 :drawMaterials:col 88
   337 op add :drawItem.3:barX 22 *tmp232
-    * op mul *tmp238 :drawMaterials:col 88
   338 op add :drawItem.3:textX 170 *tmp232
   339 draw col %[white]
   340 op add *tmp240 :drawMaterials:y 5
 
   344 draw color 0 255 0 255
   345 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
   346 op add *tmp242 :drawMaterials:y 7
-    * set :drawBold.5:x :drawItem.3:textX
-    * set :drawBold.5:y *tmp242
-    * set :drawBold.5:alignment @right
-    * set :drawText.13:x :drawItem.3:textX
-    * set :drawText.13:y *tmp242
-    * set :drawText.13:alignment @right
   347 print :drawMaterials:target
-    * set :drawPrint.13:x :drawItem.3:textX
-    * set :drawPrint.13:y *tmp242
-    * set :drawPrint.13:alignment @right
   348 draw print :drawItem.3:textX *tmp242 @right
   349 label *label110
   350 label *label109
   351 op add :drawText.14:x *tmp232 171
-    * set :drawText.14:y *tmp242
-    * set :drawText.14:alignment @right
   352 print :drawMaterials:target
-    * set :drawPrint.14:y *tmp242
-    * set :drawPrint.14:alignment @right
   353 draw print :drawText.14:x *tmp242 @right
   354 label *label112
   355 label *label111
 
   376 op equal *tmp247 .nextBlock @ore-titanium
   377 op or *tmp248 *tmp246 *tmp247
   378 jump *label115 equal *tmp248 false
-    * set :drawBold.6:x 22
-    * set :drawBold.6:y 105
-    * set :drawBold.6:alignment @bottomLeft
-    * set :drawText.15:x 22
-    * set :drawText.15:y 105
-    * set :drawText.15:alignment @bottomLeft
   379 read *tmp250 processor3 ".mapAction"
   380 print *tmp250
-    * set :drawPrint.15:x 22
-    * set :drawPrint.15:y 105
-    * set :drawPrint.15:alignment @bottomLeft
   381 draw print 22 105 @bottomLeft
   382 label *label119
   383 label *label118
-    * op add :drawText.16:x 22 1
-    * set :drawText.16:y 105
-    * set :drawText.16:alignment @bottomLeft
   384 read *tmp252 processor3 ".mapAction"
   385 print *tmp252
-    * set :drawPrint.16:y 105
-    * set :drawPrint.16:alignment @bottomLeft
   386 draw print 23 105 @bottomLeft
   387 label *label121
   388 label *label120
 
   400 draw color 0 255 0 255
   401 draw lineRect 22 90 122 10
   402 op add *tmp271 95 2
-    * set :drawBold.7:x 170
-    * set :drawBold.7:y 97
-    * set :drawBold.7:alignment @right
-    * set :drawText.17:x 170
-    * set :drawText.17:y 97
-    * set :drawText.17:alignment @right
   403 print "x"
   404 read *tmp272 processor3 ".mapSpots"
   405 print *tmp272
-    * set :drawPrint.17:x 170
-    * set :drawPrint.17:y 97
-    * set :drawPrint.17:alignment @right
-    * draw print :drawItem.4:textX *tmp271 @right
+  406 draw print 170 97 @right
   407 label *label125
   408 label *label124
-    * op add :drawText.18:x 170 1
-    * set :drawText.18:y 97
-    * set :drawText.18:alignment @right
   409 print "x"
   410 read *tmp274 processor3 ".mapSpots"
   411 print *tmp274
-    * set :drawPrint.18:x 171
-    * set :drawPrint.18:y 97
-    * set :drawPrint.18:alignment @right
-    * draw print 171 *tmp271 @right
+  412 draw print 171 97 @right
   413 label *label127
   414 label *label126
   415 label *label123
 
   421 label *label115
   422 set .materialCount .totalTargets
   423 set :drawMaterials:count .materialCount
-    * set :drawBold.8:x 22
-    * set :drawBold.8:y 105
-    * set :drawBold.8:alignment @bottomLeft
-    * set :drawText.19:x 22
-    * set :drawText.19:y 105
-    * set :drawText.19:alignment @bottomLeft
   424 print "Materials"
-    * set :drawPrint.19:x 22
-    * set :drawPrint.19:y 105
-    * set :drawPrint.19:alignment @bottomLeft
   425 draw print 22 105 @bottomLeft
   426 label *label132
   427 label *label131
-    * op add :drawText.20:x 22 1
-    * set :drawText.20:y 105
-    * set :drawText.20:alignment @bottomLeft
   428 print "Materials"
-    * set :drawPrint.20:y 105
-    * set :drawPrint.20:alignment @bottomLeft
   429 draw print 23 105 @bottomLeft
   430 label *label134
   431 label *label133
   432 label *label130
-    * set :drawMaterials:columns 1
   433 jump *label135 equal .materialCount false
   434 set :drawMaterials:item.1 @copper
   435 set :drawMaterials:target.1 .targetCopper
 
   467 label *label137
   468 jump *label147 lessThanEq :drawMaterials:target.1 0
   469 sensor *tmp283 .core :drawMaterials:item.1
-    * set :drawItem.5:col :drawMaterials:col
   470 set :drawItem.5:y :drawMaterials:y
-    * set :drawItem.5:columns 1
-    * op mul *tmp284 1 176
-    * op mul *tmp285 1 88
-    * op sub :drawItem.5:barLength 210 88
-    * op add :drawItem.5:textEnd 48 122
   471 op mul *tmp288 122 *tmp283
   472 op div *tmp289 *tmp288 :drawMaterials:target.1
   473 op min :drawItem.5:length 122 *tmp289
-    * op mul *tmp291 :drawMaterials:col 176
   474 op mul *tmp292 :drawMaterials:col 88
   475 op add :drawItem.5:iconX 11 *tmp292
-    * op mul *tmp295 :drawMaterials:col 88
   476 op add :drawItem.5:barX 22 *tmp292
-    * op mul *tmp298 :drawMaterials:col 88
   477 op add :drawItem.5:textX 170 *tmp292
   478 draw col %[white]
   479 op add *tmp300 :drawMaterials:y 5
 
   483 draw color 0 255 0 255
   484 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
   485 op add *tmp302 :drawMaterials:y 7
-    * set :drawBold.9:x :drawItem.5:textX
-    * set :drawBold.9:y *tmp302
-    * set :drawBold.9:alignment @right
-    * set :drawText.21:x :drawItem.5:textX
-    * set :drawText.21:y *tmp302
-    * set :drawText.21:alignment @right
   486 print :drawMaterials:target.1
-    * set :drawPrint.21:x :drawItem.5:textX
-    * set :drawPrint.21:y *tmp302
-    * set :drawPrint.21:alignment @right
   487 draw print :drawItem.5:textX *tmp302 @right
   488 label *label152
   489 label *label151
   490 op add :drawText.22:x :drawItem.5:textX 1
-    * set :drawText.22:y *tmp302
-    * set :drawText.22:alignment @right
   491 print :drawMaterials:target.1
-    * set :drawPrint.22:y *tmp302
-    * set :drawPrint.22:alignment @right
   492 draw print :drawText.22:x *tmp302 @right
   493 label *label154
   494 label *label153
 
   526 set *tmp309 25
   527 label *label161
   528 set :drawUnit:y *tmp309
-    * set :drawBold.10:x 22
-    * set :drawBold.10:y *tmp309
-    * set :drawBold.10:alignment @bottomLeft
-    * set :drawText.23:x 22
-    * set :drawText.23:y *tmp309
-    * set :drawText.23:alignment @bottomLeft
   529 print "Builder"
-    * set :drawPrint.23:x 22
-    * set :drawPrint.23:y *tmp309
-    * set :drawPrint.23:alignment @bottomLeft
-    * draw print 22 :drawUnit:y @bottomLeft
+  530 draw print 22 *tmp309 @bottomLeft
   531 label *label164
   532 label *label163
-    * op add :drawText.24:x 22 1
-    * set :drawText.24:y *tmp309
-    * set :drawText.24:alignment @bottomLeft
   533 print "Builder"
-    * set :drawPrint.24:y *tmp309
-    * set :drawPrint.24:alignment @bottomLeft
-    * draw print 23 :drawUnit:y @bottomLeft
+  534 draw print 23 *tmp309 @bottomLeft
   535 label *label166
   536 label *label165
   537 label *label162
   538 jump *label167 notEqual .transportItem null
   539 op sub *tmp313 *tmp309 15
-    * set :drawUnit.1:item @poly
-    * set :drawUnit.1:items 0
   540 set :drawUnit.1:y *tmp313
   541 set :drawItem.6:target .transportTarget
-    * op mul *tmp318 122 0
   542 op div *tmp319 0 :drawItem.6:target
   543 op min :drawItem.6:length 122 *tmp319
   544 op add :drawItem.6:textX 170 0
   545 draw col %[white]
-    * op add *tmp330 *tmp313 5
+  546 op sub *tmp330 *tmp309 10
   547 draw image 11 *tmp330 @poly 16 0
   548 draw color 0 128 0 255
   549 draw rect 22 *tmp313 :drawItem.6:length 10
   550 draw color 0 255 0 255
   551 draw lineRect 22 *tmp313 122 10
-    * op add *tmp331 *tmp313 5
-    * op add *tmp332 :drawUnit.1:y 7
-    * set :drawBold.11:x 170
-    * set :drawBold.11:y *tmp332
-    * set :drawBold.11:alignment @right
-    * set :drawText.25:x 170
-    * set :drawText.25:y *tmp332
-    * set :drawText.25:alignment @right
+  552 op sub *tmp331 *tmp309 10
+  553 op add *tmp332 *tmp313 7
   554 print .transportTarget
-    * set :drawPrint.25:x 170
-    * set :drawPrint.25:y *tmp332
-    * set :drawPrint.25:alignment @right
-    * draw print :drawItem.6:textX *tmp332 @right
+  555 draw print 170 *tmp332 @right
   556 label *label173
   557 label *label172
-    * op add :drawText.26:x 170 1
-    * set :drawText.26:y *tmp332
-    * set :drawText.26:alignment @right
   558 print .transportTarget
-    * set :drawPrint.26:x 171
-    * set :drawPrint.26:y *tmp332
-    * set :drawPrint.26:alignment @right
   559 draw print 171 *tmp332 @right
   560 label *label175
   561 label *label174
   562 label *label171
   563 jump *label176 lessThan 1 1
-    * op sub :drawItem.6:y *tmp313 15
+  564 op sub :drawItem.6:y *tmp309 30
   565 label *label176
   566 label *label177
   567 label *label170
 
   574 op mul *tmp341 *tmp339 *tmp340
   575 op sub *tmp342 *tmp309 15
   576 set :drawUnit.2:item .transportItem
-    * set :drawUnit.2:items *tmp341
   577 set :drawUnit.2:y *tmp342
   578 set :drawItem.7:target .transportTarget
   579 op mul *tmp347 122 *tmp341
 
   581 op min :drawItem.7:length 122 *tmp348
   582 op add :drawItem.7:textX 170 0
   583 draw col %[white]
-    * op add *tmp359 *tmp342 5
+  584 op sub *tmp359 *tmp309 10
   585 draw image 11 *tmp359 :drawUnit.2:item 16 0
   586 draw color 0 128 0 255
   587 draw rect 22 *tmp342 :drawItem.7:length 10
   588 draw color 0 255 0 255
   589 draw lineRect 22 *tmp342 122 10
-    * op add *tmp360 *tmp342 5
-    * op add *tmp361 :drawUnit.2:y 7
-    * set :drawBold.12:x 170
-    * set :drawBold.12:y *tmp361
-    * set :drawBold.12:alignment @right
-    * set :drawText.27:x 170
-    * set :drawText.27:y *tmp361
-    * set :drawText.27:alignment @right
+  590 op sub *tmp360 *tmp309 10
+  591 op add *tmp361 *tmp342 7
   592 print .transportTarget
-    * set :drawPrint.27:x 170
-    * set :drawPrint.27:y *tmp361
-    * set :drawPrint.27:alignment @right
-    * draw print :drawItem.7:textX *tmp361 @right
+  593 draw print 170 *tmp361 @right
   594 label *label182
   595 label *label181
-    * op add :drawText.28:x 170 1
-    * set :drawText.28:y *tmp361
-    * set :drawText.28:alignment @right
   596 print .transportTarget
-    * set :drawPrint.28:x 171
-    * set :drawPrint.28:y *tmp361
-    * set :drawPrint.28:alignment @right
   597 draw print 171 *tmp361 @right
   598 label *label184
   599 label *label183
   600 label *label180
   601 jump *label185 lessThan 1 1
-    * op sub :drawItem.7:y *tmp342 15
+  602 op sub :drawItem.7:y *tmp309 30
   603 label *label185
   604 label *label186
   605 label *label179
 
   611 set :drawUnitCount:count .polys
   612 jump *label189 lessThanEq :drawUnitCount:count 0
   613 draw image 150 127 @poly 12 0
-    * set :drawText.29:x 170
-    * set :drawText.29:y 129
-    * set :drawText.29:alignment @right
   614 print "x"
   615 print :drawUnitCount:count
-    * set :drawPrint.29:x 170
   616 draw print 170 129 @right
   617 label *label192
   618 label *label191
 
   624 jump *label194 lessThanEq :drawUnitCount.1:count 0
   625 op sub *tmp372 :drawUnits:x 20
   626 draw image *tmp372 127 @mono 12 0
-    * set :drawText.30:x :drawUnits:x
-    * set :drawText.30:y 129
-    * set :drawText.30:alignment @right
   627 print "x"
   628 print :drawUnitCount.1:count
   629 draw print :drawUnits:x 129 @right
 
   637 jump *label199 lessThanEq :drawUnitCount.2:count 0
   638 op sub *tmp375 :drawUnits:x 20
   639 draw image *tmp375 127 @flare 12 0
-    * set :drawText.31:x :drawUnits:x
-    * set :drawText.31:y 129
-    * set :drawText.31:alignment @right
   640 print "x"
   641 print :drawUnitCount.2:count
   642 draw print :drawUnits:x 129 @right
 
   760 draw reset
   761 draw clear 0 0 32
   762 draw col %[gold]
-    * set :drawText.32:x 172
-    * set :drawText.32:y 172
-    * set :drawText.32:alignment @topRight
   763 print "Base map"
   764 draw print 172 172 @topRight
   765 label *label240
 
   932 op sub *tmp417 .page 2
   933 print *tmp417
   934 print "/"
-    * set :drawText.33:x 172
-    * set :drawText.33:y 4
-    * set :drawText.33:alignment @bottomRight
   935 print :displayLog:pages
   936 draw print 172 4 @bottomRight
   937 label *label283
 
   949 label *label288
   950 lookup block *tmp423 :displayRecord:id
   951 label *label289
-    * set :displayRecord:icon *tmp423
   952 op div *tmp427 :displayLog:record 1000
   953 op idiv :displayRecord:t *tmp427 120
   954 op idiv :displayRecord:m :displayRecord:t 60
 
   965 draw image :displayLog:x :displayLog:y *tmp423 14 0
   966 op add *tmp435 :displayLog:x 44
   967 op add *tmp436 :displayLog:y 2
-    * set :drawText.34:x *tmp435
-    * set :drawText.34:y *tmp436
-    * set :drawText.34:alignment @right
   968 print :displayRecord:s
   969 draw print *tmp435 *tmp436 @right
   970 label *label294
 
  1036 jump *label8 always
  1037 end
  1038 label *label5
-    * set :unpackCfg2:cfg :drawBlock:cfg
-    * set *tmp450 1
  1039 read *tmp451 :drawBlock:cfg 1
  1040 op sub *tmp452 *tmp451 74
  1041 lookup block :unpackCfg:type *tmp452
-    * set *tmp454 2
  1042 read *tmp455 :drawBlock:cfg 2
  1043 op sub *tmp456 *tmp455 74
  1044 op div :unpackCfg:x *tmp456 2
-    * set *tmp458 3
  1045 read *tmp459 :drawBlock:cfg 3
  1046 op sub *tmp460 *tmp459 74
  1047 op div :unpackCfg:y *tmp460 2
-    * set *tmp462 4
  1048 read *tmp463 :drawBlock:cfg 4
  1049 op sub :unpackCfg:rotation *tmp463 74
-    * set *tmp465 5
  1050 read *tmp466 :drawBlock:cfg 5
  1051 op sub :unpackCfg:ind *tmp466 74
  1052 sensor :unpackCfg:size :unpackCfg:type @size
  1053 label *label306
-    * set :unpackCfg2:type :unpackCfg:type
-    * set :unpackCfg2:x :unpackCfg:x
-    * set :unpackCfg2:y :unpackCfg:y
-    * set :unpackCfg2:rotation :unpackCfg:rotation
-    * set :unpackCfg2:size :unpackCfg:size
-    * set :unpackCfg2:index :unpackCfg:ind
  1054 label *label305
  1055 op or *tmp476 :unpackCfg:x :unpackCfg:y
  1056 jump *label307 equal *tmp476 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-20 instructions):
 
   226 label *label65
   227 jump *label70 lessThanEq .factoryProgress 0
   228 op mul *tmp152 122 .factoryProgress
-    * op mul *tmp153 .factoryProgress 122
   229 op min :drawItem:length 122 *tmp152
-    * op add :drawItem:textX 170 0
   230 draw col %[white]
   231 draw image 11 95 :drawMaterials:unit1 16 0
   232 draw color 0 128 0 255
   233 draw rect 22 90 :drawItem:length 10
   234 draw color 0 255 0 255
   235 draw lineRect 22 90 122 10
-    * op add *tmp166 95 2
   236 print :drawMaterials:unitCount1
   237 print "/"
   238 print :drawMaterials:unitTotal1
 
   252 label *label72
   253 jump *label80 equal :drawMaterials:unit2 null
   254 op mul *tmp176 122 .reconstructorProgress
-    * op mul *tmp177 .reconstructorProgress 122
   255 op min :drawItem.1:length 122 *tmp176
-    * op add :drawItem.1:textX 170 0
   256 draw col %[white]
   257 draw image 11 80 :drawMaterials:unit2 16 0
   258 draw color 0 128 0 255
   259 draw rect 22 75 :drawItem.1:length 10
   260 draw color 0 255 0 255
   261 draw lineRect 22 75 122 10
-    * op add *tmp190 80 2
   262 print :drawMaterials:unitCount2
   263 print "/"
   264 print :drawMaterials:unitTotal2
 
   278 label *label82
   279 jump *label90 equal :drawMaterials:unit3 null
   280 op mul *tmp200 122 :drawMaterials:multiReconstructorProgress
-    * op mul *tmp201 :drawMaterials:multiReconstructorProgress 122
   281 op min :drawItem.2:length 122 *tmp200
-    * op add :drawItem.2:textX 170 0
   282 draw col %[white]
   283 draw image 11 65 :drawMaterials:unit3 16 0
   284 draw color 0 128 0 255
   285 draw rect 22 60 :drawItem.2:length 10
   286 draw color 0 255 0 255
   287 draw lineRect 22 60 122 10
-    * op add *tmp214 65 2
   288 print .megas
   289 print "/"
   290 print .megaTarget
 
   383 op mul *tmp257 122 :drawItem.4:current
   384 op div *tmp258 *tmp257 :drawItem.4:target
   385 op min :drawItem.4:length 122 *tmp258
-    * op add :drawItem.4:textX 170 0
   386 draw col %[white]
   387 draw image 11 95 @titanium 16 0
   388 draw color 0 128 0 255
   389 draw rect 22 90 :drawItem.4:length 10
   390 draw color 0 255 0 255
   391 draw lineRect 22 90 122 10
-    * op add *tmp271 95 2
   392 print "x"
   393 read *tmp272 processor3 ".mapSpots"
   394 print *tmp272
 
   476 draw print :drawItem.5:textX *tmp302 @right
   477 label *label152
   478 label *label151
-    * op add :drawText.22:x :drawItem.5:textX 1
+  479 op add :drawText.22:x *tmp292 171
   480 print :drawMaterials:target.1
   481 draw print :drawText.22:x *tmp302 @right
   482 label *label154
 
   514 label *label160
   515 set *tmp309 25
   516 label *label161
-    * set :drawUnit:y *tmp309
   517 print "Builder"
   518 draw print 22 *tmp309 @bottomLeft
   519 label *label164
 
   525 label *label162
   526 jump *label167 notEqual .transportItem null
   527 op sub *tmp313 *tmp309 15
-    * set :drawUnit.1:y *tmp313
   528 set :drawItem.6:target .transportTarget
   529 op div *tmp319 0 :drawItem.6:target
   530 op min :drawItem.6:length 122 *tmp319
-    * op add :drawItem.6:textX 170 0
   531 draw col %[white]
   532 op sub *tmp330 *tmp309 10
   533 draw image 11 *tmp330 @poly 16 0
 
   535 draw rect 22 *tmp313 :drawItem.6:length 10
   536 draw color 0 255 0 255
   537 draw lineRect 22 *tmp313 122 10
-    * op sub *tmp331 *tmp309 10
-    * op add *tmp332 *tmp313 7
+  538 op sub *tmp332 *tmp309 8
   539 print .transportTarget
   540 draw print 170 *tmp332 @right
   541 label *label173
 
   546 label *label174
   547 label *label171
   548 jump *label176 lessThan 1 1
-    * op sub :drawItem.6:y *tmp309 30
   549 label *label176
   550 label *label177
   551 label *label170
 
   558 op mul *tmp341 *tmp339 *tmp340
   559 op sub *tmp342 *tmp309 15
   560 set :drawUnit.2:item .transportItem
-    * set :drawUnit.2:y *tmp342
   561 set :drawItem.7:target .transportTarget
   562 op mul *tmp347 122 *tmp341
   563 op div *tmp348 *tmp347 :drawItem.7:target
   564 op min :drawItem.7:length 122 *tmp348
-    * op add :drawItem.7:textX 170 0
   565 draw col %[white]
   566 op sub *tmp359 *tmp309 10
   567 draw image 11 *tmp359 :drawUnit.2:item 16 0
 
   569 draw rect 22 *tmp342 :drawItem.7:length 10
   570 draw color 0 255 0 255
   571 draw lineRect 22 *tmp342 122 10
-    * op sub *tmp360 *tmp309 10
-    * op add *tmp361 *tmp342 7
+  572 op sub *tmp361 *tmp309 8
   573 print .transportTarget
   574 draw print 170 *tmp361 @right
   575 label *label182
 
   580 label *label183
   581 label *label180
   582 jump *label185 lessThan 1 1
-    * op sub :drawItem.7:y *tmp309 30
   583 label *label185
   584 label *label186
   585 label *label179

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
   920 op sub :displayLog:position :displayLog:start 1
   921 label *label284
   922 jump *label286 lessThan :displayLog:position :displayLog:stop
+  923 label *label327
   924 read :displayLog:record bank1 :displayLog:position
   925 op mod :displayRecord:id :displayLog:record 1000
   926 jump *label288 lessThanEq :displayRecord:id @blockCount
 
   966 label *label298
   967 label *label285
   968 op sub :displayLog:position :displayLog:position 1
-    * jump *label284 always
+  969 jump *label327 greaterThanEq :displayLog:position :displayLog:stop
   970 label *label286
   971 drawflush display1
   972 label *label281

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-21 instructions):
 
    83 jump *label37 always
    84 label *label36
    85 jump *label38 notEqual :drawHeader:count 1
-    * jump *label40 equal .nextBlock null
-    * set *tmp81 .nextBlock
-    * jump *label41 always
-    * label *label40
-    * set *tmp81 .nextUnit
-    * label *label41
+   86 select *tmp81 notEqual .nextBlock null .nextBlock .nextUnit
    87 draw image 40 137 *tmp81 32 0
    88 jump *label39 always
    89 label *label38
 
    98 op idiv :drawHeader:t *tmp0 120
    99 op idiv :drawHeader:m :drawHeader:t 60
   100 op mod :drawHeader:s :drawHeader:t 60
-    * jump *label42 greaterThanEq :drawHeader:s 10
-    * set *tmp90 "0"
-    * jump *label43 always
-    * label *label42
-    * set *tmp90 ""
-    * label *label43
+  101 select *tmp90 lessThan :drawHeader:s 10 "0" ""
   102 print :drawHeader:m
   103 print ":"
   104 print *tmp90
 
   236 label *label77
   237 label *label76
   238 label *label73
-    * jump *label78 lessThan 1 1
-    * label *label78
-    * label *label79
   239 label *label72
   240 jump *label80 equal :drawMaterials:unit2 null
   241 op mul *tmp176 122 .reconstructorProgress
 
   259 label *label87
   260 label *label86
   261 label *label83
-    * jump *label88 lessThan 1 1
-    * label *label88
-    * label *label89
   262 label *label82
   263 jump *label90 equal :drawMaterials:unit3 null
   264 op mul *tmp200 122 :drawMaterials:multiReconstructorProgress
 
   282 label *label97
   283 label *label96
   284 label *label93
-    * jump *label98 lessThan 1 1
-    * label *label98
-    * label *label99
   285 label *label92
   286 label *label90
   287 label *label91
 
   383 label *label127
   384 label *label126
   385 label *label123
-    * jump *label128 lessThan 1 1
-    * label *label128
-    * label *label129
   386 label *label122
   387 jump *label116 always
   388 label *label115
 
   486 label *label56
   487 label *label54
   488 draw col %[white]
-    * jump *label160 greaterThanEq .materialCount 4
-    * set *tmp309 40
-    * jump *label161 always
-    * label *label160
-    * set *tmp309 25
-    * label *label161
+  489 select *tmp309 lessThan .materialCount 4 40 25
   490 print "Builder"
   491 draw print 22 *tmp309 @bottomLeft
   492 label *label164
 
   518 label *label175
   519 label *label174
   520 label *label171
-    * jump *label176 lessThan 1 1
-    * label *label176
-    * label *label177
   521 label *label170
   522 label *label169
   523 jump *label168 always
 
   549 label *label184
   550 label *label183
   551 label *label180
-    * jump *label185 lessThan 1 1
-    * label *label185
-    * label *label186
   552 label *label179
   553 label *label178
   554 label *label168
 
   683 label *label222
   684 op and *tmp389 :displayStorage:accumulator 0b11111
   685 op sub :displayStorage:value *tmp389 8
-    * jump *label234 lessThan :displayStorage:value 0
-    * set *tmp392 %[green]
-    * jump *label235 always
-    * label *label234
-    * set *tmp392 %[red]
-    * label *label235
+  686 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
   687 draw col *tmp392
   688 op add *tmp393 :displayStorage:y.1 :displayStorage:value
   689 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
 
   896 op idiv :displayRecord:t *tmp427 120
   897 op idiv :displayRecord:m :displayRecord:t 60
   898 op mod :displayRecord:s :displayRecord:t 60
-    * jump *label290 greaterThanEq :displayRecord:s 10
-    * set *tmp433 "0"
-    * jump *label291 always
-    * label *label290
-    * set *tmp433 ""
-    * label *label291
+  899 select *tmp433 lessThan :displayRecord:s 10 "0" ""
   900 print :displayRecord:m
   901 print ":"
   902 print *tmp433

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
   885 label *label327
   886 read :displayLog:record bank1 :displayLog:position
   887 op mod :displayRecord:id :displayLog:record 1000
-    * jump *label288 lessThanEq :displayRecord:id @blockCount
+  888 lookup block *tmp423 :displayRecord:id
+  889 jump *label289 lessThanEq :displayRecord:id @blockCount
   890 op sub *tmp424 :displayRecord:id @blockCount
   891 lookup unit *tmp423 *tmp424
   892 jump *label289 always
-    * label *label288
-    * lookup block *tmp423 :displayRecord:id
   893 label *label289
   894 op div *tmp427 :displayLog:record 1000
   895 op idiv :displayRecord:t *tmp427 120

Modifications by Unroll iteration loop at Display.mnd:484:9 (-2 instructions):
 
   604 read .lastTail bank2 511
   605 draw col %[white]
   606 set :displayStorage:y 165
-    * set :displayStorage:item @copper
-    * setaddr *tmp382 *label211
-    * jump *label208 always
-    * multilabel *label211 (m:marker2)
-    * set :displayStorage:item @lead
-    * setaddr *tmp382 *label212
-    * jump *label208 always
-    * multilabel *label212 (m:marker2)
-    * set :displayStorage:item @sand
-    * setaddr *tmp382 *label213
-    * jump *label208 always
-    * multilabel *label213 (m:marker2)
-    * set :displayStorage:item @coal
-    * setaddr *tmp382 *label214
-    * jump *label208 always
-    * multilabel *label214 (m:marker2)
-    * set :displayStorage:item @graphite
-    * setaddr *tmp382 *label215
-    * jump *label208 always
-    * multilabel *label215 (m:marker2)
-    * set :displayStorage:item @silicon
-    * setaddr *tmp382 *label216
-    * jump *label208 always
-    * multilabel *label216 (m:marker2)
-    * set :displayStorage:item @titanium
-    * setaddr *tmp382 *label217
-    * jump *label208 always
-    * multilabel *label217 (m:marker2)
-    * set :displayStorage:item @metaglass
-    * setaddr *tmp382 *label218
-    * jump *label208 always
-    * multilabel *label218 (m:marker2)
-    * set :displayStorage:item @thorium
-    * setaddr *tmp382 *label219
-    * label *label208
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
-    * label *label209
-    * multijump *tmp382 0 0 (m:marker2)
-    * multilabel *label219 (m:marker2)
-    * label *label210
+  607 set :displayStorage:item @copper
+  608 label *label328
+  609 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  610 op sub :displayStorage:y :displayStorage:y 20
+  611 label *label329
+  612 set :displayStorage:item @lead
+  613 label *label332
+  614 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  615 op sub :displayStorage:y :displayStorage:y 20
+  616 label *label333
+  617 set :displayStorage:item @sand
+  618 label *label336
+  619 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  620 op sub :displayStorage:y :displayStorage:y 20
+  621 label *label337
+  622 set :displayStorage:item @coal
+  623 label *label340
+  624 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  625 op sub :displayStorage:y :displayStorage:y 20
+  626 label *label341
+  627 set :displayStorage:item @graphite
+  628 label *label344
+  629 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  630 op sub :displayStorage:y :displayStorage:y 20
+  631 label *label345
+  632 set :displayStorage:item @silicon
+  633 label *label348
+  634 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  635 op sub :displayStorage:y :displayStorage:y 20
+  636 label *label349
+  637 set :displayStorage:item @titanium
+  638 label *label352
+  639 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  640 op sub :displayStorage:y :displayStorage:y 20
+  641 label *label353
+  642 set :displayStorage:item @metaglass
+  643 label *label356
+  644 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  645 op sub :displayStorage:y :displayStorage:y 20
+  646 label *label357
+  647 set :displayStorage:item @thorium
+  648 label *label360
+  649 draw image 10 :displayStorage:y :displayStorage:item 17 0
+  650 op sub :displayStorage:y :displayStorage:y 20
+  651 label *label361
+  652 label *label210
   653 drawflush display1
   654 label *label206
   655 label *label207

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   606 set :displayStorage:y 165
   607 set :displayStorage:item @copper
   608 label *label328
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  609 draw image 10 165 @copper 17 0
+  610 op sub :displayStorage:y 165 20
   611 label *label329
   612 set :displayStorage:item @lead
   613 label *label332
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  614 draw image 10 145 @lead 17 0
+  615 op sub :displayStorage:y 145 20
   616 label *label333
   617 set :displayStorage:item @sand
   618 label *label336
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  619 draw image 10 125 @sand 17 0
+  620 op sub :displayStorage:y 125 20
   621 label *label337
   622 set :displayStorage:item @coal
   623 label *label340
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  624 draw image 10 105 @coal 17 0
+  625 op sub :displayStorage:y 105 20
   626 label *label341
   627 set :displayStorage:item @graphite
   628 label *label344
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  629 draw image 10 85 @graphite 17 0
+  630 op sub :displayStorage:y 85 20
   631 label *label345
   632 set :displayStorage:item @silicon
   633 label *label348
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  634 draw image 10 65 @silicon 17 0
+  635 op sub :displayStorage:y 65 20
   636 label *label349
   637 set :displayStorage:item @titanium
   638 label *label352
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  639 draw image 10 45 @titanium 17 0
+  640 op sub :displayStorage:y 45 20
   641 label *label353
   642 set :displayStorage:item @metaglass
   643 label *label356
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  644 draw image 10 25 @metaglass 17 0
+  645 op sub :displayStorage:y 25 20
   646 label *label357
   647 set :displayStorage:item @thorium
   648 label *label360
-    * draw image 10 :displayStorage:y :displayStorage:item 17 0
-    * op sub :displayStorage:y :displayStorage:y 20
+  649 draw image 10 5 @thorium 17 0
+  650 op sub :displayStorage:y 5 20
   651 label *label361
   652 label *label210
   653 drawflush display1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-19 instructions):
 
   603 jump *label206 equal .pageSwitched false
   604 read .lastTail bank2 511
   605 draw col %[white]
-    * set :displayStorage:y 165
-    * set :displayStorage:item @copper
   606 label *label328
   607 draw image 10 165 @copper 17 0
-    * op sub :displayStorage:y 165 20
   608 label *label329
-    * set :displayStorage:item @lead
   609 label *label332
   610 draw image 10 145 @lead 17 0
-    * op sub :displayStorage:y 145 20
   611 label *label333
-    * set :displayStorage:item @sand
   612 label *label336
   613 draw image 10 125 @sand 17 0
-    * op sub :displayStorage:y 125 20
   614 label *label337
-    * set :displayStorage:item @coal
   615 label *label340
   616 draw image 10 105 @coal 17 0
-    * op sub :displayStorage:y 105 20
   617 label *label341
-    * set :displayStorage:item @graphite
   618 label *label344
   619 draw image 10 85 @graphite 17 0
-    * op sub :displayStorage:y 85 20
   620 label *label345
-    * set :displayStorage:item @silicon
   621 label *label348
   622 draw image 10 65 @silicon 17 0
-    * op sub :displayStorage:y 65 20
   623 label *label349
-    * set :displayStorage:item @titanium
   624 label *label352
   625 draw image 10 45 @titanium 17 0
-    * op sub :displayStorage:y 45 20
   626 label *label353
-    * set :displayStorage:item @metaglass
   627 label *label356
   628 draw image 10 25 @metaglass 17 0
-    * op sub :displayStorage:y 25 20
   629 label *label357
-    * set :displayStorage:item @thorium
   630 label *label360
   631 draw image 10 5 @thorium 17 0
-    * op sub :displayStorage:y 5 20
   632 label *label361
   633 label *label210
   634 drawflush display1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-3 instructions):
 
   819 set :displayBaseMap:i .recentBuildIndex
   820 jump *label274 lessThan :displayBaseMap:i 0
   821 set .recentBuildIndex -1
-    * readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
+  822 readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
   823 setaddr :drawBlock*retaddr *label276 (h:*label276)
   824 call *label5 *invalid :drawBlock*retval (m:*label276) (h:*label276)
   825 label *label276

Modifications by Inline function 'drawBlock' defined at Display.mnd:427:1 (+21 instructions):
 
   813 setaddr *tmp397 *label272
   814 label *label241
   815 set :drawBlock:cfg :displayBaseMap:cfg
-    * setaddr :drawBlock*retaddr *label273 (h:*label273)
-    * call *label5 *invalid :drawBlock*retval (m:*label273) (h:*label273)
-    * label *label273
+  816 label *label365
+  817 read *tmp451 :drawBlock:cfg 1
+  818 op sub *tmp452 *tmp451 74
+  819 lookup block :unpackCfg:type *tmp452
+  820 read *tmp455 :drawBlock:cfg 2
+  821 op sub *tmp456 *tmp455 74
+  822 op div :unpackCfg:x *tmp456 2
+  823 read *tmp459 :drawBlock:cfg 3
+  824 op sub *tmp460 *tmp459 74
+  825 op div :unpackCfg:y *tmp460 2
+  826 read *tmp463 :drawBlock:cfg 4
+  827 op sub :unpackCfg:rotation *tmp463 74
+  828 read *tmp466 :drawBlock:cfg 5
+  829 op sub :unpackCfg:ind *tmp466 74
+  830 sensor :unpackCfg:size :unpackCfg:type @size
+  831 label *label366
+  832 label *label367
+  833 op or *tmp476 :unpackCfg:x :unpackCfg:y
+  834 jump *label370 equal *tmp476 false
+  835 op shl *tmp478 1 :unpackCfg:ind
+  836 op and *tmp479 .blocksBuilt *tmp478
+  837 jump *label368 equal *tmp479 false
+  838 draw col %[white]
+  839 jump *label369 always
+  840 label *label368
+  841 draw color 128 255 128 128
+  842 label *label369
+  843 op mul *tmp481 2 :unpackCfg:x
+  844 op mul *tmp482 2 :unpackCfg:y
+  845 op mul *tmp483 2 :unpackCfg:size
+  846 op mul *tmp484 90 :unpackCfg:rotation
+  847 draw image *tmp481 *tmp482 :unpackCfg:type *tmp483 *tmp484
+  848 label *label370
+  849 label *label371
+  850 label *label372
   851 set :displayBaseMap:i .recentBuildIndex
   852 jump *label274 lessThan :displayBaseMap:i 0
   853 set .recentBuildIndex -1
   854 readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
-    * setaddr :drawBlock*retaddr *label276 (h:*label276)
-    * call *label5 *invalid :drawBlock*retval (m:*label276) (h:*label276)
-    * label *label276
+  855 label *label373
+  856 read *tmp451 :drawBlock:cfg 1
+  857 op sub *tmp452 *tmp451 74
+  858 lookup block :unpackCfg:type *tmp452
+  859 read *tmp455 :drawBlock:cfg 2
+  860 op sub *tmp456 *tmp455 74
+  861 op div :unpackCfg:x *tmp456 2
+  862 read *tmp459 :drawBlock:cfg 3
+  863 op sub *tmp460 *tmp459 74
+  864 op div :unpackCfg:y *tmp460 2
+  865 read *tmp463 :drawBlock:cfg 4
+  866 op sub :unpackCfg:rotation *tmp463 74
+  867 read *tmp466 :drawBlock:cfg 5
+  868 op sub :unpackCfg:ind *tmp466 74
+  869 sensor :unpackCfg:size :unpackCfg:type @size
+  870 label *label374
+  871 label *label375
+  872 op or *tmp476 :unpackCfg:x :unpackCfg:y
+  873 jump *label378 equal *tmp476 false
+  874 op shl *tmp478 1 :unpackCfg:ind
+  875 op and *tmp479 .blocksBuilt *tmp478
+  876 jump *label376 equal *tmp479 false
+  877 draw col %[white]
+  878 jump *label377 always
+  879 label *label376
+  880 draw color 128 255 128 128
+  881 label *label377
+  882 op mul *tmp481 2 :unpackCfg:x
+  883 op mul *tmp482 2 :unpackCfg:y
+  884 op mul *tmp483 2 :unpackCfg:size
+  885 op mul *tmp484 90 :unpackCfg:rotation
+  886 draw image *tmp481 *tmp482 :unpackCfg:type *tmp483 *tmp484
+  887 label *label378
+  888 label *label379
+  889 label *label380
   890 label *label274
   891 label *label275
   892 sensor *tmp402 switch1 @enabled
 
  1022 wait 1e12
  1023 jump *label8 always
  1024 end
-    * label *label5
-    * read *tmp451 :drawBlock:cfg 1
-    * op sub *tmp452 *tmp451 74
-    * lookup block :unpackCfg:type *tmp452
-    * read *tmp455 :drawBlock:cfg 2
-    * op sub *tmp456 *tmp455 74
-    * op div :unpackCfg:x *tmp456 2
-    * read *tmp459 :drawBlock:cfg 3
-    * op sub *tmp460 *tmp459 74
-    * op div :unpackCfg:y *tmp460 2
-    * read *tmp463 :drawBlock:cfg 4
-    * op sub :unpackCfg:rotation *tmp463 74
-    * read *tmp466 :drawBlock:cfg 5
-    * op sub :unpackCfg:ind *tmp466 74
-    * sensor :unpackCfg:size :unpackCfg:type @size
-    * label *label306
-    * label *label305
-    * op or *tmp476 :unpackCfg:x :unpackCfg:y
-    * jump *label307 equal *tmp476 false
-    * op shl *tmp478 1 :unpackCfg:ind
-    * op and *tmp479 .blocksBuilt *tmp478
-    * jump *label309 equal *tmp479 false
-    * draw col %[white]
-    * jump *label310 always
-    * label *label309
-    * draw color 128 255 128 128
-    * label *label310
-    * op mul *tmp481 2 :unpackCfg:x
-    * op mul *tmp482 2 :unpackCfg:y
-    * op mul *tmp483 2 :unpackCfg:size
-    * op mul *tmp484 90 :unpackCfg:rotation
-    * draw image *tmp481 *tmp482 :unpackCfg:type *tmp483 *tmp484
-    * label *label307
-    * label *label308
-    * label *label304
-    * return :drawBlock*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   814 label *label241
   815 set :drawBlock:cfg :displayBaseMap:cfg
   816 label *label365
-    * read *tmp451 :drawBlock:cfg 1
+  817 read *tmp451 :displayBaseMap:cfg 1
   818 op sub *tmp452 *tmp451 74
   819 lookup block :unpackCfg:type *tmp452
-    * read *tmp455 :drawBlock:cfg 2
+  820 read *tmp455 :displayBaseMap:cfg 2
   821 op sub *tmp456 *tmp455 74
   822 op div :unpackCfg:x *tmp456 2
-    * read *tmp459 :drawBlock:cfg 3
+  823 read *tmp459 :displayBaseMap:cfg 3
   824 op sub *tmp460 *tmp459 74
   825 op div :unpackCfg:y *tmp460 2
-    * read *tmp463 :drawBlock:cfg 4
+  826 read *tmp463 :displayBaseMap:cfg 4
   827 op sub :unpackCfg:rotation *tmp463 74
-    * read *tmp466 :drawBlock:cfg 5
+  828 read *tmp466 :displayBaseMap:cfg 5
   829 op sub :unpackCfg:ind *tmp466 74
   830 sensor :unpackCfg:size :unpackCfg:type @size
   831 label *label366

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   812 set :displayBaseMap:cfg "AÁPBJf-multiplicative-reconstructor28"
   813 setaddr *tmp397 *label272
   814 label *label241
-    * set :drawBlock:cfg :displayBaseMap:cfg
   815 label *label365
   816 read *tmp451 :displayBaseMap:cfg 1
   817 op sub *tmp452 *tmp451 74

Modifications by Unroll iteration loop at Display.mnd:497:5 (+46 instructions):
 
   641 read :displayStorage:accumulator bank2 .lastTail
   642 op add :displayStorage:x 25 .lastTail
   643 set :displayStorage:y.1 165
-    * setaddr *tmp388 *label225
-    * jump *label222 always
-    * multilabel *label225 (m:marker3)
-    * setaddr *tmp388 *label226
-    * jump *label222 always
-    * multilabel *label226 (m:marker3)
-    * setaddr *tmp388 *label227
-    * jump *label222 always
-    * multilabel *label227 (m:marker3)
-    * setaddr *tmp388 *label228
-    * jump *label222 always
-    * multilabel *label228 (m:marker3)
-    * setaddr *tmp388 *label229
-    * jump *label222 always
-    * multilabel *label229 (m:marker3)
-    * setaddr *tmp388 *label230
-    * jump *label222 always
-    * multilabel *label230 (m:marker3)
-    * setaddr *tmp388 *label231
-    * jump *label222 always
-    * multilabel *label231 (m:marker3)
-    * setaddr *tmp388 *label232
-    * jump *label222 always
-    * multilabel *label232 (m:marker3)
-    * setaddr *tmp388 *label233
-    * label *label222
-    * op and *tmp389 :displayStorage:accumulator 0b11111
-    * op sub :displayStorage:value *tmp389 8
-    * select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
-    * draw col *tmp392
-    * op add *tmp393 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
-    * op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label223
-    * multijump *tmp388 0 0 (m:marker3)
-    * multilabel *label233 (m:marker3)
-    * label *label224
+  644 label *label381
+  645 op and *tmp389 :displayStorage:accumulator 0b11111
+  646 op sub :displayStorage:value *tmp389 8
+  647 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  648 draw col *tmp392
+  649 op add *tmp393 :displayStorage:y.1 :displayStorage:value
+  650 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
+  651 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  652 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  653 label *label382
+  654 label *label385
+  655 op and *tmp389 :displayStorage:accumulator 0b11111
+  656 op sub :displayStorage:value *tmp389 8
+  657 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  658 draw col *tmp392
+  659 op add *tmp393 :displayStorage:y.1 :displayStorage:value
+  660 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
+  661 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  662 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  663 label *label386
+  664 label *label389
+  665 op and *tmp389 :displayStorage:accumulator 0b11111
+  666 op sub :displayStorage:value *tmp389 8
+  667 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  668 draw col *tmp392
+  669 op add *tmp393 :displayStorage:y.1 :displayStorage:value
+  670 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
+  671 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  672 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  673 label *label390
+  674 label *label393
+  675 op and *tmp389 :displayStorage:accumulator 0b11111
+  676 op sub :displayStorage:value *tmp389 8
+  677 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  678 draw col *tmp392
+  679 op add *tmp393 :displayStorage:y.1 :displayStorage:value
+  680 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
+  681 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  682 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  683 label *label394
+  684 label *label397
+  685 op and *tmp389 :displayStorage:accumulator 0b11111
+  686 op sub :displayStorage:value *tmp389 8
+  687 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  688 draw col *tmp392
+  689 op add *tmp393 :displayStorage:y.1 :displayStorage:value
+  690 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
+  691 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  692 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  693 label *label398
+  694 label *label401
+  695 op and *tmp389 :displayStorage:accumulator 0b11111
+  696 op sub :displayStorage:value *tmp389 8
+  697 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  698 draw col *tmp392
+  699 op add *tmp393 :displayStorage:y.1 :displayStorage:value
+  700 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
+  701 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  702 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  703 label *label402
+  704 label *label405
+  705 op and *tmp389 :displayStorage:accumulator 0b11111
+  706 op sub :displayStorage:value *tmp389 8
+  707 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  708 draw col *tmp392
+  709 op add *tmp393 :displayStorage:y.1 :displayStorage:value
+  710 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
+  711 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  712 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  713 label *label406
+  714 label *label409
+  715 op and *tmp389 :displayStorage:accumulator 0b11111
+  716 op sub :displayStorage:value *tmp389 8
+  717 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  718 draw col *tmp392
+  719 op add *tmp393 :displayStorage:y.1 :displayStorage:value
+  720 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
+  721 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  722 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  723 label *label410
+  724 label *label413
+  725 op and *tmp389 :displayStorage:accumulator 0b11111
+  726 op sub :displayStorage:value *tmp389 8
+  727 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
+  728 draw col *tmp392
+  729 op add *tmp393 :displayStorage:y.1 :displayStorage:value
+  730 draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
+  731 op sub :displayStorage:y.1 :displayStorage:y.1 20
+  732 op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  733 label *label414
+  734 label *label224
   735 drawflush display1
   736 op add .lastTail .lastTail 1
   737 label *label205

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   646 op sub :displayStorage:value *tmp389 8
   647 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
   648 draw col *tmp392
-    * op add *tmp393 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  649 op add *tmp393 165 :displayStorage:value
+  650 draw line :displayStorage:x 165 :displayStorage:x *tmp393
+  651 op sub :displayStorage:y.1 165 20
   652 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   653 label *label382
   654 label *label385
 
   656 op sub :displayStorage:value *tmp389 8
   657 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
   658 draw col *tmp392
-    * op add *tmp393 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  659 op add *tmp393 145 :displayStorage:value
+  660 draw line :displayStorage:x 145 :displayStorage:x *tmp393
+  661 op sub :displayStorage:y.1 145 20
   662 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   663 label *label386
   664 label *label389
 
   666 op sub :displayStorage:value *tmp389 8
   667 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
   668 draw col *tmp392
-    * op add *tmp393 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  669 op add *tmp393 125 :displayStorage:value
+  670 draw line :displayStorage:x 125 :displayStorage:x *tmp393
+  671 op sub :displayStorage:y.1 125 20
   672 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   673 label *label390
   674 label *label393
 
   676 op sub :displayStorage:value *tmp389 8
   677 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
   678 draw col *tmp392
-    * op add *tmp393 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  679 op add *tmp393 105 :displayStorage:value
+  680 draw line :displayStorage:x 105 :displayStorage:x *tmp393
+  681 op sub :displayStorage:y.1 105 20
   682 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   683 label *label394
   684 label *label397
 
   686 op sub :displayStorage:value *tmp389 8
   687 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
   688 draw col *tmp392
-    * op add *tmp393 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  689 op add *tmp393 85 :displayStorage:value
+  690 draw line :displayStorage:x 85 :displayStorage:x *tmp393
+  691 op sub :displayStorage:y.1 85 20
   692 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   693 label *label398
   694 label *label401
 
   696 op sub :displayStorage:value *tmp389 8
   697 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
   698 draw col *tmp392
-    * op add *tmp393 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  699 op add *tmp393 65 :displayStorage:value
+  700 draw line :displayStorage:x 65 :displayStorage:x *tmp393
+  701 op sub :displayStorage:y.1 65 20
   702 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   703 label *label402
   704 label *label405
 
   706 op sub :displayStorage:value *tmp389 8
   707 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
   708 draw col *tmp392
-    * op add *tmp393 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  709 op add *tmp393 45 :displayStorage:value
+  710 draw line :displayStorage:x 45 :displayStorage:x *tmp393
+  711 op sub :displayStorage:y.1 45 20
   712 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   713 label *label406
   714 label *label409
 
   716 op sub :displayStorage:value *tmp389 8
   717 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
   718 draw col *tmp392
-    * op add *tmp393 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
+  719 op add *tmp393 25 :displayStorage:value
+  720 draw line :displayStorage:x 25 :displayStorage:x *tmp393
+  721 op sub :displayStorage:y.1 25 20
   722 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   723 label *label410
   724 label *label413
 
   726 op sub :displayStorage:value *tmp389 8
   727 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
   728 draw col *tmp392
-    * op add *tmp393 :displayStorage:y.1 :displayStorage:value
-    * draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 :displayStorage:y.1 20
-    * op shr :displayStorage:accumulator :displayStorage:accumulator 5
+  729 op add *tmp393 5 :displayStorage:value
+  730 draw line :displayStorage:x 5 :displayStorage:x *tmp393
+  731 op sub :displayStorage:y.1 5 20
   732 label *label414
   733 label *label224
   734 drawflush display1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-10 instructions):
 
   640 label *label221
   641 read :displayStorage:accumulator bank2 .lastTail
   642 op add :displayStorage:x 25 .lastTail
-    * set :displayStorage:y.1 165
   643 label *label381
   644 op and *tmp389 :displayStorage:accumulator 0b11111
   645 op sub :displayStorage:value *tmp389 8
 
   647 draw col *tmp392
   648 op add *tmp393 165 :displayStorage:value
   649 draw line :displayStorage:x 165 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 165 20
   650 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   651 label *label382
   652 label *label385
 
   656 draw col *tmp392
   657 op add *tmp393 145 :displayStorage:value
   658 draw line :displayStorage:x 145 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 145 20
   659 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   660 label *label386
   661 label *label389
 
   665 draw col *tmp392
   666 op add *tmp393 125 :displayStorage:value
   667 draw line :displayStorage:x 125 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 125 20
   668 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   669 label *label390
   670 label *label393
 
   674 draw col *tmp392
   675 op add *tmp393 105 :displayStorage:value
   676 draw line :displayStorage:x 105 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 105 20
   677 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   678 label *label394
   679 label *label397
 
   683 draw col *tmp392
   684 op add *tmp393 85 :displayStorage:value
   685 draw line :displayStorage:x 85 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 85 20
   686 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   687 label *label398
   688 label *label401
 
   692 draw col *tmp392
   693 op add *tmp393 65 :displayStorage:value
   694 draw line :displayStorage:x 65 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 65 20
   695 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   696 label *label402
   697 label *label405
 
   701 draw col *tmp392
   702 op add *tmp393 45 :displayStorage:value
   703 draw line :displayStorage:x 45 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 45 20
   704 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   705 label *label406
   706 label *label409
 
   710 draw col *tmp392
   711 op add *tmp393 25 :displayStorage:value
   712 draw line :displayStorage:x 25 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 25 20
   713 op shr :displayStorage:accumulator :displayStorage:accumulator 5
   714 label *label410
   715 label *label413
 
   719 draw col *tmp392
   720 op add *tmp393 5 :displayStorage:value
   721 draw line :displayStorage:x 5 :displayStorage:x *tmp393
-    * op sub :displayStorage:y.1 5 20
   722 label *label414
   723 label *label224
   724 drawflush display1

Modifications by Unroll iteration loop at Display.mnd:235:13 (+25 instructions):
 
   289 label *label81
   290 jump *label71 always
   291 label *label70
-    * set :drawMaterials:item @lead
-    * set :drawMaterials:target :drawMaterials:targetFactoryLead
-    * setaddr *tmp220 *label103
-    * jump *label100 always
-    * multilabel *label103 (m:marker0)
-    * set :drawMaterials:item @silicon
-    * set :drawMaterials:target :drawMaterials:targetFactorySilicon
-    * setaddr *tmp220 *label104
-    * label *label100
-    * jump *label105 lessThanEq :drawMaterials:target 0
-    * sensor *tmp223 A¾BFLW-air-factory13 :drawMaterials:item
-    * set :drawItem.3:y :drawMaterials:y
-    * op mul *tmp228 122 *tmp223
-    * op div *tmp229 *tmp228 :drawMaterials:target
-    * op min :drawItem.3:length 122 *tmp229
-    * op mul *tmp232 :drawMaterials:col 88
-    * op add :drawItem.3:iconX 11 *tmp232
-    * op add :drawItem.3:barX 22 *tmp232
-    * op add :drawItem.3:textX 170 *tmp232
-    * draw col %[white]
-    * op add *tmp240 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp240 :drawMaterials:item 16 0
-    * draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
-    * draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
-    * op add *tmp242 :drawMaterials:y 7
-    * print :drawMaterials:target
-    * draw print :drawItem.3:textX *tmp242 @right
-    * label *label110
-    * label *label109
-    * op add :drawText.14:x *tmp232 171
-    * print :drawMaterials:target
-    * draw print :drawText.14:x *tmp242 @right
-    * label *label112
-    * label *label111
-    * label *label108
-    * op add :drawItem.3:col :drawMaterials:col 1
-    * jump *label113 lessThan :drawItem.3:col 1
-    * set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawMaterials:y 15
-    * label *label113
-    * label *label114
-    * label *label107
-    * set :drawMaterials:col :drawItem.3:col
-    * set :drawMaterials:y :drawItem.3:y
-    * label *label105
-    * label *label106
-    * label *label101
-    * multijump *tmp220 0 0 (m:marker0)
-    * multilabel *label104 (m:marker0)
-    * label *label102
+  292 set :drawMaterials:item @lead
+  293 set :drawMaterials:target :drawMaterials:targetFactoryLead
+  294 label *label418
+  295 jump *label427 lessThanEq :drawMaterials:target 0
+  296 sensor *tmp223 A¾BFLW-air-factory13 :drawMaterials:item
+  297 set :drawItem.3:y :drawMaterials:y
+  298 op mul *tmp228 122 *tmp223
+  299 op div *tmp229 *tmp228 :drawMaterials:target
+  300 op min :drawItem.3:length 122 *tmp229
+  301 op mul *tmp232 :drawMaterials:col 88
+  302 op add :drawItem.3:iconX 11 *tmp232
+  303 op add :drawItem.3:barX 22 *tmp232
+  304 op add :drawItem.3:textX 170 *tmp232
+  305 draw col %[white]
+  306 op add *tmp240 :drawMaterials:y 5
+  307 draw image :drawItem.3:iconX *tmp240 :drawMaterials:item 16 0
+  308 draw color 0 128 0 255
+  309 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  310 draw color 0 255 0 255
+  311 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  312 op add *tmp242 :drawMaterials:y 7
+  313 print :drawMaterials:target
+  314 draw print :drawItem.3:textX *tmp242 @right
+  315 label *label419
+  316 label *label420
+  317 op add :drawText.14:x *tmp232 171
+  318 print :drawMaterials:target
+  319 draw print :drawText.14:x *tmp242 @right
+  320 label *label421
+  321 label *label422
+  322 label *label423
+  323 op add :drawItem.3:col :drawMaterials:col 1
+  324 jump *label424 lessThan :drawItem.3:col 1
+  325 set :drawItem.3:col 0
+  326 op sub :drawItem.3:y :drawMaterials:y 15
+  327 label *label424
+  328 label *label425
+  329 label *label426
+  330 set :drawMaterials:col :drawItem.3:col
+  331 set :drawMaterials:y :drawItem.3:y
+  332 label *label427
+  333 label *label428
+  334 label *label429
+  335 set :drawMaterials:item @silicon
+  336 set :drawMaterials:target :drawMaterials:targetFactorySilicon
+  337 label *label432
+  338 jump *label441 lessThanEq :drawMaterials:target 0
+  339 sensor *tmp223 A¾BFLW-air-factory13 :drawMaterials:item
+  340 set :drawItem.3:y :drawMaterials:y
+  341 op mul *tmp228 122 *tmp223
+  342 op div *tmp229 *tmp228 :drawMaterials:target
+  343 op min :drawItem.3:length 122 *tmp229
+  344 op mul *tmp232 :drawMaterials:col 88
+  345 op add :drawItem.3:iconX 11 *tmp232
+  346 op add :drawItem.3:barX 22 *tmp232
+  347 op add :drawItem.3:textX 170 *tmp232
+  348 draw col %[white]
+  349 op add *tmp240 :drawMaterials:y 5
+  350 draw image :drawItem.3:iconX *tmp240 :drawMaterials:item 16 0
+  351 draw color 0 128 0 255
+  352 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  353 draw color 0 255 0 255
+  354 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  355 op add *tmp242 :drawMaterials:y 7
+  356 print :drawMaterials:target
+  357 draw print :drawItem.3:textX *tmp242 @right
+  358 label *label433
+  359 label *label434
+  360 op add :drawText.14:x *tmp232 171
+  361 print :drawMaterials:target
+  362 draw print :drawText.14:x *tmp242 @right
+  363 label *label435
+  364 label *label436
+  365 label *label437
+  366 op add :drawItem.3:col :drawMaterials:col 1
+  367 jump *label438 lessThan :drawItem.3:col 1
+  368 set :drawItem.3:col 0
+  369 op sub :drawItem.3:y :drawMaterials:y 15
+  370 label *label438
+  371 label *label439
+  372 label *label440
+  373 set :drawMaterials:col :drawItem.3:col
+  374 set :drawMaterials:y :drawItem.3:y
+  375 label *label441
+  376 label *label442
+  377 label *label443
+  378 label *label102
   379 label *label71
   380 jump *label56 always
   381 label *label55

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
   292 set :drawMaterials:item @lead
   293 set :drawMaterials:target :drawMaterials:targetFactoryLead
   294 label *label418
-    * jump *label427 lessThanEq :drawMaterials:target 0
-    * sensor *tmp223 A¾BFLW-air-factory13 :drawMaterials:item
-    * set :drawItem.3:y :drawMaterials:y
+  295 jump *label427 lessThanEq :drawMaterials:targetFactoryLead 0
+  296 sensor *tmp223 A¾BFLW-air-factory13 @lead
+  297 set :drawItem.3:y 90
   298 op mul *tmp228 122 *tmp223
-    * op div *tmp229 *tmp228 :drawMaterials:target
+  299 op div *tmp229 *tmp228 :drawMaterials:targetFactoryLead
   300 op min :drawItem.3:length 122 *tmp229
-    * op mul *tmp232 :drawMaterials:col 88
-    * op add :drawItem.3:iconX 11 *tmp232
-    * op add :drawItem.3:barX 22 *tmp232
-    * op add :drawItem.3:textX 170 *tmp232
+  301 op mul *tmp232 0 88
+  302 op add :drawItem.3:iconX 11 0
+  303 op add :drawItem.3:barX 22 0
+  304 op add :drawItem.3:textX 170 0
   305 draw col %[white]
-    * op add *tmp240 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp240 :drawMaterials:item 16 0
+  306 op add *tmp240 90 5
+  307 draw image 11 95 @lead 16 0
   308 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  309 draw rect 22 90 :drawItem.3:length 10
   310 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
-    * op add *tmp242 :drawMaterials:y 7
-    * print :drawMaterials:target
-    * draw print :drawItem.3:textX *tmp242 @right
+  311 draw lineRect 22 90 122 10
+  312 op add *tmp242 90 7
+  313 print :drawMaterials:targetFactoryLead
+  314 draw print 170 97 @right
   315 label *label419
   316 label *label420
-    * op add :drawText.14:x *tmp232 171
-    * print :drawMaterials:target
-    * draw print :drawText.14:x *tmp242 @right
+  317 op add :drawText.14:x 0 171
+  318 print :drawMaterials:targetFactoryLead
+  319 draw print 171 97 @right
   320 label *label421
   321 label *label422
   322 label *label423
-    * op add :drawItem.3:col :drawMaterials:col 1
-    * jump *label424 lessThan :drawItem.3:col 1
+  323 op add :drawItem.3:col 0 1
+  324 jump *label424 lessThan 1 1
   325 set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawMaterials:y 15
+  326 op sub :drawItem.3:y 90 15
   327 label *label424
   328 label *label425
   329 label *label426
-    * set :drawMaterials:col :drawItem.3:col
-    * set :drawMaterials:y :drawItem.3:y
+  330 set :drawMaterials:col 0
+  331 set :drawMaterials:y 75
   332 label *label427
   333 label *label428
   334 label *label429
   335 set :drawMaterials:item @silicon
   336 set :drawMaterials:target :drawMaterials:targetFactorySilicon
   337 label *label432
-    * jump *label441 lessThanEq :drawMaterials:target 0
-    * sensor *tmp223 A¾BFLW-air-factory13 :drawMaterials:item
+  338 jump *label441 lessThanEq :drawMaterials:targetFactorySilicon 0
+  339 sensor *tmp223 A¾BFLW-air-factory13 @silicon
   340 set :drawItem.3:y :drawMaterials:y
   341 op mul *tmp228 122 *tmp223
-    * op div *tmp229 *tmp228 :drawMaterials:target
+  342 op div *tmp229 *tmp228 :drawMaterials:targetFactorySilicon
   343 op min :drawItem.3:length 122 *tmp229
   344 op mul *tmp232 :drawMaterials:col 88
   345 op add :drawItem.3:iconX 11 *tmp232
 
   347 op add :drawItem.3:textX 170 *tmp232
   348 draw col %[white]
   349 op add *tmp240 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp240 :drawMaterials:item 16 0
+  350 draw image :drawItem.3:iconX *tmp240 @silicon 16 0
   351 draw color 0 128 0 255
   352 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
   353 draw color 0 255 0 255
   354 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
   355 op add *tmp242 :drawMaterials:y 7
-    * print :drawMaterials:target
+  356 print :drawMaterials:targetFactorySilicon
   357 draw print :drawItem.3:textX *tmp242 @right
   358 label *label433
   359 label *label434
   360 op add :drawText.14:x *tmp232 171
-    * print :drawMaterials:target
+  361 print :drawMaterials:targetFactorySilicon
   362 draw print :drawText.14:x *tmp242 @right
   363 label *label435
   364 label *label436
 
   370 label *label438
   371 label *label439
   372 label *label440
-    * set :drawMaterials:col :drawItem.3:col
-    * set :drawMaterials:y :drawItem.3:y
   373 label *label441
   374 label *label442
   375 label *label443

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-18 instructions):
 
   289 label *label81
   290 jump *label71 always
   291 label *label70
-    * set :drawMaterials:item @lead
-    * set :drawMaterials:target :drawMaterials:targetFactoryLead
   292 label *label418
   293 jump *label427 lessThanEq :drawMaterials:targetFactoryLead 0
   294 sensor *tmp223 A¾BFLW-air-factory13 @lead
-    * set :drawItem.3:y 90
   295 op mul *tmp228 122 *tmp223
   296 op div *tmp229 *tmp228 :drawMaterials:targetFactoryLead
   297 op min :drawItem.3:length 122 *tmp229
-    * op mul *tmp232 0 88
-    * op add :drawItem.3:iconX 11 0
-    * op add :drawItem.3:barX 22 0
-    * op add :drawItem.3:textX 170 0
   298 draw col %[white]
-    * op add *tmp240 90 5
   299 draw image 11 95 @lead 16 0
   300 draw color 0 128 0 255
   301 draw rect 22 90 :drawItem.3:length 10
   302 draw color 0 255 0 255
   303 draw lineRect 22 90 122 10
-    * op add *tmp242 90 7
   304 print :drawMaterials:targetFactoryLead
   305 draw print 170 97 @right
   306 label *label419
   307 label *label420
-    * op add :drawText.14:x 0 171
   308 print :drawMaterials:targetFactoryLead
   309 draw print 171 97 @right
   310 label *label421
   311 label *label422
   312 label *label423
-    * op add :drawItem.3:col 0 1
   313 jump *label424 lessThan 1 1
-    * set :drawItem.3:col 0
-    * op sub :drawItem.3:y 90 15
   314 label *label424
   315 label *label425
   316 label *label426
 
   319 label *label427
   320 label *label428
   321 label *label429
-    * set :drawMaterials:item @silicon
-    * set :drawMaterials:target :drawMaterials:targetFactorySilicon
   322 label *label432
   323 jump *label441 lessThanEq :drawMaterials:targetFactorySilicon 0
   324 sensor *tmp223 A¾BFLW-air-factory13 @silicon
-    * set :drawItem.3:y :drawMaterials:y
   325 op mul *tmp228 122 *tmp223
   326 op div *tmp229 *tmp228 :drawMaterials:targetFactorySilicon
   327 op min :drawItem.3:length 122 *tmp229
-    * op mul *tmp232 :drawMaterials:col 88
-    * op add :drawItem.3:iconX 11 *tmp232
-    * op add :drawItem.3:barX 22 *tmp232
-    * op add :drawItem.3:textX 170 *tmp232
+  328 op mul *tmp232 0 88
+  329 op add :drawItem.3:iconX 11 0
+  330 op add :drawItem.3:barX 22 0
+  331 op add :drawItem.3:textX 170 0
   332 draw col %[white]
   333 op add *tmp240 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp240 @silicon 16 0
+  334 draw image 11 *tmp240 @silicon 16 0
   335 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  336 draw rect 22 :drawMaterials:y :drawItem.3:length 10
   337 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  338 draw lineRect 22 :drawMaterials:y 122 10
   339 op add *tmp242 :drawMaterials:y 7
   340 print :drawMaterials:targetFactorySilicon
-    * draw print :drawItem.3:textX *tmp242 @right
+  341 draw print 170 *tmp242 @right
   342 label *label433
   343 label *label434
-    * op add :drawText.14:x *tmp232 171
+  344 op add :drawText.14:x 0 171
   345 print :drawMaterials:targetFactorySilicon
-    * draw print :drawText.14:x *tmp242 @right
+  346 draw print 171 *tmp242 @right
   347 label *label435
   348 label *label436
   349 label *label437
-    * op add :drawItem.3:col :drawMaterials:col 1
-    * jump *label438 lessThan :drawItem.3:col 1
-    * set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawMaterials:y 15
+  350 op add :drawItem.3:col 0 1
+  351 jump *label438 lessThan 1 1
   352 label *label438
   353 label *label439
   354 label *label440

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-7 instructions):
 
   314 label *label424
   315 label *label425
   316 label *label426
-    * set :drawMaterials:col 0
   317 set :drawMaterials:y 75
   318 label *label427
   319 label *label428
 
   324 op mul *tmp228 122 *tmp223
   325 op div *tmp229 *tmp228 :drawMaterials:targetFactorySilicon
   326 op min :drawItem.3:length 122 *tmp229
-    * op mul *tmp232 0 88
-    * op add :drawItem.3:iconX 11 0
-    * op add :drawItem.3:barX 22 0
-    * op add :drawItem.3:textX 170 0
   327 draw col %[white]
   328 op add *tmp240 :drawMaterials:y 5
   329 draw image 11 *tmp240 @silicon 16 0
 
   336 draw print 170 *tmp242 @right
   337 label *label433
   338 label *label434
-    * op add :drawText.14:x 0 171
   339 print :drawMaterials:targetFactorySilicon
   340 draw print 171 *tmp242 @right
   341 label *label435
   342 label *label436
   343 label *label437
-    * op add :drawItem.3:col 0 1
   344 jump *label438 lessThan 1 1
   345 label *label438
   346 label *label439

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-2 instructions):
 
   310 label *label421
   311 label *label422
   312 label *label423
-    * jump *label424 lessThan 1 1
   313 label *label424
   314 label *label425
   315 label *label426
 
   340 label *label435
   341 label *label436
   342 label *label437
-    * jump *label438 lessThan 1 1
   343 label *label438
   344 label *label439
   345 label *label440

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-1 instructions):
 
   986 jump *label289 lessThanEq :displayRecord:id @blockCount
   987 op sub *tmp424 :displayRecord:id @blockCount
   988 lookup unit *tmp423 *tmp424
-    * jump *label289 always
   989 label *label289
   990 op div *tmp427 :displayLog:record 1000
   991 op idiv :displayRecord:t *tmp427 120

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   505 jump *label167 notEqual .transportItem null
   506 op sub *tmp313 *tmp309 15
   507 set :drawItem.6:target .transportTarget
-    * op div *tmp319 0 :drawItem.6:target
+  508 set *tmp319 0
   509 op min :drawItem.6:length 122 *tmp319
   510 draw col %[white]
   511 op sub *tmp330 *tmp309 10

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
   504 label *label162
   505 jump *label167 notEqual .transportItem null
   506 op sub *tmp313 *tmp309 15
-    * set :drawItem.6:target .transportTarget
   507 set *tmp319 0
-    * op min :drawItem.6:length 122 *tmp319
+  508 op min :drawItem.6:length 122 0
   509 draw col %[white]
   510 op sub *tmp330 *tmp309 10
   511 draw image 11 *tmp330 @poly 16 0
   512 draw color 0 128 0 255
-    * draw rect 22 *tmp313 :drawItem.6:length 10
+  513 draw rect 22 *tmp313 0 10
   514 draw color 0 255 0 255
   515 draw lineRect 22 *tmp313 122 10
   516 op sub *tmp332 *tmp309 8

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-2 instructions):
 
   504 label *label162
   505 jump *label167 notEqual .transportItem null
   506 op sub *tmp313 *tmp309 15
-    * set *tmp319 0
-    * op min :drawItem.6:length 122 0
   507 draw col %[white]
   508 op sub *tmp330 *tmp309 10
   509 draw image 11 *tmp330 @poly 16 0

Modifications by Virtual Instruction Expansion (+1 instructions):
 
   895 set :displayBaseMap:i .recentBuildIndex
   896 jump *label274 lessThan :displayBaseMap:i 0
   897 set .recentBuildIndex -1
-    * readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
+  898 op mul *tmp888 :displayBaseMap:i 2
+  899 multijump *label448 *tmp888 0 (m:marker5)
+  900 multilabel *label448 (m:marker5)
+  901 set :drawBlock:cfg "AJEMJJ-graphite-press0"
+  902 jump *label447 always
+  903 multilabel *label449 (m:marker5)
+  904 set :drawBlock:cfg "AJTJK-battery1"
+  905 jump *label447 always
+  906 multilabel *label450 (m:marker5)
+  907 set :drawBlock:cfg "ALTJL-battery2"
+  908 jump *label447 always
+  909 multilabel *label451 (m:marker5)
+  910 set :drawBlock:cfg "AJRJM-combustion-generator3"
+  911 jump *label447 always
+  912 multilabel *label452 (m:marker5)
+  913 set :drawBlock:cfg "ALMQJN-silicon-smelter4"
+  914 jump *label447 always
+  915 multilabel *label453 (m:marker5)
+  916 set :drawBlock:cfg "A{LNJO-inverted-sorter5"
+  917 jump *label447 always
+  918 multilabel *label454 (m:marker5)
+  919 set :drawBlock:cfg "A©JNJP-unloader6"
+  920 jump *label447 always
+  921 multilabel *label455 (m:marker5)
+  922 set :drawBlock:cfg "A{HNJQ-inverted-sorter7"
+  923 jump *label447 always
+  924 multilabel *label456 (m:marker5)
+  925 set :drawBlock:cfg "A~JPJR-overflow-gate8"
+  926 jump *label447 always
+  927 multilabel *label457 (m:marker5)
+  928 set :drawBlock:cfg "AÕFFJS-micro-processor9"
+  929 jump *label447 always
+  930 multilabel *label458 (m:marker5)
+  931 set :drawBlock:cfg "AFHJT-power-node10"
+  932 jump *label447 always
+  933 multilabel *label459 (m:marker5)
+  934 set :drawBlock:cfg "A©FJJU-unloader11"
+  935 jump *label447 always
+  936 multilabel *label460 (m:marker5)
+  937 set :drawBlock:cfg "A~DJJV-overflow-gate12"
+  938 jump *label447 always
+  939 multilabel *label461 (m:marker5)
+  940 set :drawBlock:cfg "A¾BFLW-air-factory13"
+  941 jump *label447 always
+  942 multilabel *label462 (m:marker5)
+  943 set :drawBlock:cfg "A©NHJX-unloader14"
+  944 jump *label447 always
+  945 multilabel *label463 (m:marker5)
+  946 set :drawBlock:cfg "A{NJJY-inverted-sorter15"
+  947 jump *label447 always
+  948 multilabel *label464 (m:marker5)
+  949 set :drawBlock:cfg "ANOMJZ-kiln16"
+  950 jump *label447 always
+  951 multilabel *label465 (m:marker5)
+  952 set :drawBlock:cfg "A¡AOJ[-water-extractor17"
+  953 jump *label447 always
+  954 multilabel *label466 (m:marker5)
+  955 set :drawBlock:cfg "AAKJ\-steam-generator18"
+  956 jump *label447 always
+  957 multilabel *label467 (m:marker5)
+  958 set :drawBlock:cfg "AKFRJ]-multi-press19"
+  959 jump *label447 always
+  960 multilabel *label468 (m:marker5)
+  961 set :drawBlock:cfg "A©HFJ^-unloader20"
+  962 jump *label447 always
+  963 multilabel *label469 (m:marker5)
+  964 set :drawBlock:cfg "A{HDJ_-inverted-sorter21"
+  965 jump *label447 always
+  966 multilabel *label470 (m:marker5)
+  967 set :drawBlock:cfg "AÀF@L`-additive-reconstructor22"
+  968 jump *label447 always
+  969 multilabel *label471 (m:marker5)
+  970 set :drawBlock:cfg "ALSIJa-silicon-smelter23"
+  971 jump *label447 always
+  972 multilabel *label472 (m:marker5)
+  973 set :drawBlock:cfg "A{PJJb-inverted-sorter24"
+  974 jump *label447 always
+  975 multilabel *label473 (m:marker5)
+  976 set :drawBlock:cfg "A{PHJc-inverted-sorter25"
+  977 jump *label447 always
+  978 multilabel *label474 (m:marker5)
+  979 set :drawBlock:cfg "A©JFJd-unloader26"
+  980 jump *label447 always
+  981 multilabel *label475 (m:marker5)
+  982 set :drawBlock:cfg "A{JDJe-inverted-sorter27"
+  983 jump *label447 always
+  984 multilabel *label476 (m:marker5)
+  985 set :drawBlock:cfg "AÁPBJf-multiplicative-reconstructor28"
+  986 jump *label447 always
+  987 label *label447
   988 label *label373
   989 read *tmp451 :drawBlock:cfg 1
   990 op sub *tmp452 *tmp451 74

Modifications by Iterated phase, Single Step Elimination, pass 4, iteration 1 (-1 instructions):
 
   983 jump *label447 always
   984 multilabel *label476 (m:marker5)
   985 set :drawBlock:cfg "AÁPBJf-multiplicative-reconstructor28"
-    * jump *label447 always
   986 label *label447
   987 label *label373
   988 read *tmp451 :drawBlock:cfg 1

Modifications by Jumps phase, Jump Normalization, pass 6, iteration 1:
 
    19 label *label11
    20 ubind @poly
    21 ulocate building core false @copper *tmp42 *tmp43 *tmp44 .core
-    * label *label12
    22 jump *label11 equal .core null
-    * label *label13
    23 printflush null
    24 drawflush null
    25 label *label14
 
    28 set .factoryProgress 0
    29 set .unitReset false
    30 label *label17
-    * label *label18
    31 jump *label19 notEqual .page 0
    32 jump *label21 lessThanEq .megas 0
    33 jump *label24 greaterThanEq .animation 0
 
    46 op mul *tmp60 *tmp59 40
    47 op mul *tmp61 :animate:ratio 88
    48 op add *tmp58 *tmp60 *tmp61
-    * label *label26
    49 op mul *tmp65 *tmp59 137
    50 op add *tmp63 *tmp65 *tmp61
-    * label *label27
    51 op mul *tmp70 *tmp59 32
    52 op mul *tmp71 :animate:ratio 168
    53 op add *tmp68 *tmp70 *tmp71
-    * label *label28
    54 draw image *tmp58 *tmp63 @mega *tmp68 0
    55 drawflush display1
    56 op add .animation .animation 1
-    * label *label23
    57 jump *label22 always
    58 label *label21
    59 draw reset
 
    61 draw col %[gold]
    62 print "Goal"
    63 draw print 40 161 @bottom
-    * label *label33
-    * label *label32
    64 print "Goal"
    65 draw print 41 161 @bottom
-    * label *label35
-    * label *label34
-    * label *label31
    66 draw col %[white]
    67 op add :drawHeader:count .nextBlock .nextUnit
    68 jump *label36 notEqual :drawHeader:count 2
 
   102 print *tmp95
   103 print ")"
   104 draw print 170 172 @topRight
-    * label *label45
-    * label *label44
   105 jump *label46 equal .titaniumDrill false
   106 sensor *tmp97 .titaniumDrill @titanium
   107 op max :drawHeader:count .titaniumDrillCount *tmp97
 
   110 print "x"
   111 print :drawHeader:count
   112 draw print 170 155 @topRight
-    * label *label49
-    * label *label48
   113 op mul *tmp102 7 :drawHeader:len
   114 op sub *tmp103 150 *tmp102
   115 draw image *tmp103 146 @titanium 12 0
   116 label *label46
-    * label *label47
   117 jump *label50 equal .thoriumContainer false
   118 sensor :drawHeader:count .thoriumContainer @thorium
   119 op log10 *tmp106 :drawHeader:count
 
   121 print "x"
   122 print :drawHeader:count
   123 draw print 120 155 @topRight
-    * label *label53
-    * label *label52
   124 op mul *tmp109 7 :drawHeader:len.1
   125 op sub *tmp110 100 *tmp109
   126 draw image *tmp110 146 @thorium 12 0
   127 label *label50
-    * label *label51
-    * label *label30
   128 set :drawMaterials:col 0
   129 set :drawMaterials:y 90
   130 jump *label55 notEqual .nextBlock null
 
   180 op greaterThan *tmp143 :drawMaterials:multiReconstructorProgress 0
   181 op max .reconstructorProgress .reconstructorProgress *tmp143
   182 label *label63
-    * label *label64
   183 label *label62
   184 label *label60
   185 label *label58
   186 print "Unit factories"
   187 draw print 22 105 @bottomLeft
-    * label *label67
-    * label *label66
   188 print "Unit factories"
   189 draw print 23 105 @bottomLeft
-    * label *label69
-    * label *label68
-    * label *label65
   190 jump *label70 lessThanEq .factoryProgress 0
   191 op mul *tmp152 122 .factoryProgress
   192 op min :drawItem:length 122 *tmp152
 
   200 print "/"
   201 print :drawMaterials:unitTotal1
   202 draw print 170 97 @right
-    * label *label75
-    * label *label74
   203 print :drawMaterials:unitCount1
   204 print "/"
   205 print :drawMaterials:unitTotal1
   206 draw print 171 97 @right
-    * label *label77
-    * label *label76
-    * label *label73
-    * label *label72
   207 jump *label80 equal :drawMaterials:unit2 null
   208 op mul *tmp176 122 .reconstructorProgress
   209 op min :drawItem.1:length 122 *tmp176
 
   217 print "/"
   218 print :drawMaterials:unitTotal2
   219 draw print 170 82 @right
-    * label *label85
-    * label *label84
   220 print :drawMaterials:unitCount2
   221 print "/"
   222 print :drawMaterials:unitTotal2
   223 draw print 171 82 @right
-    * label *label87
-    * label *label86
-    * label *label83
-    * label *label82
   224 jump *label90 equal :drawMaterials:unit3 null
   225 op mul *tmp200 122 :drawMaterials:multiReconstructorProgress
   226 op min :drawItem.2:length 122 *tmp200
 
   234 print "/"
   235 print .megaTarget
   236 draw print 170 67 @right
-    * label *label95
-    * label *label94
   237 print .megas
   238 print "/"
   239 print .megaTarget
   240 draw print 171 67 @right
-    * label *label97
-    * label *label96
-    * label *label93
-    * label *label92
   241 label *label90
-    * label *label91
   242 label *label80
-    * label *label81
   243 jump *label71 always
   244 label *label70
-    * label *label418
   245 jump *label427 lessThanEq :drawMaterials:targetFactoryLead 0
   246 sensor *tmp223 A¾BFLW-air-factory13 @lead
   247 op mul *tmp228 122 *tmp223
 
   255 draw lineRect 22 90 122 10
   256 print :drawMaterials:targetFactoryLead
   257 draw print 170 97 @right
-    * label *label419
-    * label *label420
   258 print :drawMaterials:targetFactoryLead
   259 draw print 171 97 @right
-    * label *label421
-    * label *label422
-    * label *label423
-    * label *label424
-    * label *label425
-    * label *label426
   260 set :drawMaterials:y 75
   261 label *label427
-    * label *label428
-    * label *label429
-    * label *label432
   262 jump *label441 lessThanEq :drawMaterials:targetFactorySilicon 0
   263 sensor *tmp223 A¾BFLW-air-factory13 @silicon
   264 op mul *tmp228 122 *tmp223
 
   274 op add *tmp242 :drawMaterials:y 7
   275 print :drawMaterials:targetFactorySilicon
   276 draw print 170 *tmp242 @right
-    * label *label433
-    * label *label434
   277 print :drawMaterials:targetFactorySilicon
   278 draw print 171 *tmp242 @right
-    * label *label435
-    * label *label436
-    * label *label437
-    * label *label438
-    * label *label439
-    * label *label440
   279 label *label441
-    * label *label442
-    * label *label443
-    * label *label102
   280 label *label71
   281 jump *label56 always
   282 label *label55
 
   287 read *tmp250 processor3 ".mapAction"
   288 print *tmp250
   289 draw print 22 105 @bottomLeft
-    * label *label119
-    * label *label118
   290 read *tmp252 processor3 ".mapAction"
   291 print *tmp252
   292 draw print 23 105 @bottomLeft
-    * label *label121
-    * label *label120
-    * label *label117
   293 read :drawItem.4:current processor3 ".mapProgress"
   294 read :drawItem.4:target processor3 ".mapTotal"
   295 op mul *tmp257 122 :drawItem.4:current
 
   305 read *tmp272 processor3 ".mapSpots"
   306 print *tmp272
   307 draw print 170 97 @right
-    * label *label125
-    * label *label124
   308 print "x"
   309 read *tmp274 processor3 ".mapSpots"
   310 print *tmp274
   311 draw print 171 97 @right
-    * label *label127
-    * label *label126
-    * label *label123
-    * label *label122
   312 jump *label116 always
   313 label *label115
   314 set .materialCount .totalTargets
   315 set :drawMaterials:count .materialCount
   316 print "Materials"
   317 draw print 22 105 @bottomLeft
-    * label *label132
-    * label *label131
   318 print "Materials"
   319 draw print 23 105 @bottomLeft
-    * label *label134
-    * label *label133
-    * label *label130
   320 jump *label135 equal .materialCount false
   321 set :drawMaterials:item.1 @copper
   322 set :drawMaterials:target.1 .targetCopper
 
   372 op add *tmp302 :drawMaterials:y 7
   373 print :drawMaterials:target.1
   374 draw print :drawItem.5:textX *tmp302 @right
-    * label *label152
-    * label *label151
   375 op add :drawText.22:x *tmp292 171
   376 print :drawMaterials:target.1
   377 draw print :drawText.22:x *tmp302 @right
-    * label *label154
-    * label *label153
-    * label *label150
   378 op add :drawItem.5:col :drawMaterials:col 1
   379 jump *label155 lessThan :drawItem.5:col 1
   380 set :drawItem.5:col 0
   381 op sub :drawItem.5:y :drawMaterials:y 15
   382 label *label155
-    * label *label156
-    * label *label149
   383 set :drawMaterials:col :drawItem.5:col
   384 set :drawMaterials:y :drawItem.5:y
   385 op sub :drawMaterials:count :drawMaterials:count 1
   386 jump *label157 greaterThan :drawMaterials:count 0
   387 jump *label139 always
   388 label *label157
-    * label *label158
   389 label *label147
-    * label *label148
-    * label *label138
   390 multijump *tmp280 0 0 (m:marker1)
   391 multilabel *label146 (m:marker1)
   392 label *label139
   393 label *label135
-    * label *label136
   394 label *label116
   395 label *label56
-    * label *label54
   396 draw col %[white]
   397 select *tmp309 lessThan .materialCount 4 40 25
   398 print "Builder"
   399 draw print 22 *tmp309 @bottomLeft
-    * label *label164
-    * label *label163
   400 print "Builder"
   401 draw print 23 *tmp309 @bottomLeft
-    * label *label166
-    * label *label165
-    * label *label162
   402 jump *label167 notEqual .transportItem null
   403 op sub *tmp313 *tmp309 15
   404 draw col %[white]
 
   411 op sub *tmp332 *tmp309 8
   412 print .transportTarget
   413 draw print 170 *tmp332 @right
-    * label *label173
-    * label *label172
   414 print .transportTarget
   415 draw print 171 *tmp332 @right
-    * label *label175
-    * label *label174
-    * label *label171
-    * label *label170
-    * label *label169
   416 jump *label168 always
   417 label *label167
   418 sensor :drawUnit:unitItem @unit @firstItem
 
   435 op sub *tmp361 *tmp309 8
   436 print .transportTarget
   437 draw print 170 *tmp361 @right
-    * label *label182
-    * label *label181
   438 print .transportTarget
   439 draw print 171 *tmp361 @right
-    * label *label184
-    * label *label183
-    * label *label180
-    * label *label179
-    * label *label178
   440 label *label168
-    * label *label159
   441 set :drawUnits:x 170
   442 draw col %[white]
   443 set :drawUnitCount:count .polys
 
   446 print "x"
   447 print :drawUnitCount:count
   448 draw print 170 129 @right
-    * label *label192
-    * label *label191
   449 op sub :drawUnits:x 170 30
   450 label *label189
-    * label *label190
-    * label *label188
   451 set :drawUnitCount.1:count .monos
   452 jump *label194 lessThanEq :drawUnitCount.1:count 0
   453 op sub *tmp372 :drawUnits:x 20
 
   455 print "x"
   456 print :drawUnitCount.1:count
   457 draw print :drawUnits:x 129 @right
-    * label *label197
-    * label *label196
   458 op sub :drawUnits:x :drawUnits:x 30
   459 label *label194
-    * label *label195
-    * label *label193
   460 set :drawUnitCount.2:count .flares
   461 jump *label199 lessThanEq :drawUnitCount.2:count 0
   462 op sub *tmp375 :drawUnits:x 20
 
   464 print "x"
   465 print :drawUnitCount.2:count
   466 draw print :drawUnits:x 129 @right
-    * label *label202
-    * label *label201
   467 label *label199
-    * label *label200
-    * label *label198
-    * label *label187
   468 drawflush display1
-    * label *label29
   469 label *label22
   470 jump *label20 always
   471 label *label19
 
   474 jump *label206 equal .pageSwitched false
   475 read .lastTail bank2 511
   476 draw col %[white]
-    * label *label328
   477 draw image 10 165 @copper 17 0
-    * label *label329
-    * label *label332
   478 draw image 10 145 @lead 17 0
-    * label *label333
-    * label *label336
   479 draw image 10 125 @sand 17 0
-    * label *label337
-    * label *label340
   480 draw image 10 105 @coal 17 0
-    * label *label341
-    * label *label344
   481 draw image 10 85 @graphite 17 0
-    * label *label345
-    * label *label348
   482 draw image 10 65 @silicon 17 0
-    * label *label349
-    * label *label352
   483 draw image 10 45 @titanium 17 0
-    * label *label353
-    * label *label356
   484 draw image 10 25 @metaglass 17 0
-    * label *label357
-    * label *label360
   485 draw image 10 5 @thorium 17 0
-    * label *label361
-    * label *label210
   486 drawflush display1
   487 label *label206
-    * label *label207
   488 jump *label220 lessThanEq .lastTail :displayStorage:tail
   489 jump *label205 always
   490 label *label220
-    * label *label221
   491 read :displayStorage:accumulator bank2 .lastTail
   492 op add :displayStorage:x 25 .lastTail
-    * label *label381
   493 op and *tmp389 :displayStorage:accumulator 0b11111
   494 op sub :displayStorage:value *tmp389 8
   495 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   497 op add *tmp393 165 :displayStorage:value
   498 draw line :displayStorage:x 165 :displayStorage:x *tmp393
   499 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label382
-    * label *label385
   500 op and *tmp389 :displayStorage:accumulator 0b11111
   501 op sub :displayStorage:value *tmp389 8
   502 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   504 op add *tmp393 145 :displayStorage:value
   505 draw line :displayStorage:x 145 :displayStorage:x *tmp393
   506 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label386
-    * label *label389
   507 op and *tmp389 :displayStorage:accumulator 0b11111
   508 op sub :displayStorage:value *tmp389 8
   509 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   511 op add *tmp393 125 :displayStorage:value
   512 draw line :displayStorage:x 125 :displayStorage:x *tmp393
   513 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label390
-    * label *label393
   514 op and *tmp389 :displayStorage:accumulator 0b11111
   515 op sub :displayStorage:value *tmp389 8
   516 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   518 op add *tmp393 105 :displayStorage:value
   519 draw line :displayStorage:x 105 :displayStorage:x *tmp393
   520 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label394
-    * label *label397
   521 op and *tmp389 :displayStorage:accumulator 0b11111
   522 op sub :displayStorage:value *tmp389 8
   523 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   525 op add *tmp393 85 :displayStorage:value
   526 draw line :displayStorage:x 85 :displayStorage:x *tmp393
   527 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label398
-    * label *label401
   528 op and *tmp389 :displayStorage:accumulator 0b11111
   529 op sub :displayStorage:value *tmp389 8
   530 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   532 op add *tmp393 65 :displayStorage:value
   533 draw line :displayStorage:x 65 :displayStorage:x *tmp393
   534 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label402
-    * label *label405
   535 op and *tmp389 :displayStorage:accumulator 0b11111
   536 op sub :displayStorage:value *tmp389 8
   537 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   539 op add *tmp393 45 :displayStorage:value
   540 draw line :displayStorage:x 45 :displayStorage:x *tmp393
   541 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label406
-    * label *label409
   542 op and *tmp389 :displayStorage:accumulator 0b11111
   543 op sub :displayStorage:value *tmp389 8
   544 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
 
   546 op add *tmp393 25 :displayStorage:value
   547 draw line :displayStorage:x 25 :displayStorage:x *tmp393
   548 op shr :displayStorage:accumulator :displayStorage:accumulator 5
-    * label *label410
-    * label *label413
   549 op and *tmp389 :displayStorage:accumulator 0b11111
   550 op sub :displayStorage:value *tmp389 8
   551 select *tmp392 greaterThanEq :displayStorage:value 0 %[green] %[red]
   552 draw col *tmp392
   553 op add *tmp393 5 :displayStorage:value
   554 draw line :displayStorage:x 5 :displayStorage:x *tmp393
-    * label *label414
-    * label *label224
   555 drawflush display1
   556 op add .lastTail .lastTail 1
   557 label *label205
 
   563 draw col %[gold]
   564 print "Base map"
   565 draw print 172 172 @topRight
-    * label *label240
-    * label *label239
   566 draw col %[white]
   567 draw translate 88 88
   568 draw scale 5.866666666666666 5.866666666666666
 
   683 set :displayBaseMap:cfg "AÁPBJf-multiplicative-reconstructor28"
   684 setaddr *tmp397 *label272
   685 label *label241
-    * label *label365
   686 read *tmp451 :displayBaseMap:cfg 1
   687 op sub *tmp452 *tmp451 74
   688 lookup block :unpackCfg:type *tmp452
 
   697 read *tmp466 :displayBaseMap:cfg 5
   698 op sub :unpackCfg:ind *tmp466 74
   699 sensor :unpackCfg:size :unpackCfg:type @size
-    * label *label366
-    * label *label367
   700 op or *tmp476 :unpackCfg:x :unpackCfg:y
   701 jump *label370 equal *tmp476 false
   702 op shl *tmp478 1 :unpackCfg:ind
 
   713 op mul *tmp484 90 :unpackCfg:rotation
   714 draw image *tmp481 *tmp482 :unpackCfg:type *tmp483 *tmp484
   715 label *label370
-    * label *label371
-    * label *label372
   716 set :displayBaseMap:i .recentBuildIndex
   717 jump *label274 lessThan :displayBaseMap:i 0
   718 set .recentBuildIndex -1
 
   805 multilabel *label476 (m:marker5)
   806 set :drawBlock:cfg "AÁPBJf-multiplicative-reconstructor28"
   807 label *label447
-    * label *label373
   808 read *tmp451 :drawBlock:cfg 1
   809 op sub *tmp452 *tmp451 74
   810 lookup block :unpackCfg:type *tmp452
 
   819 read *tmp466 :drawBlock:cfg 5
   820 op sub :unpackCfg:ind *tmp466 74
   821 sensor :unpackCfg:size :unpackCfg:type @size
-    * label *label374
-    * label *label375
   822 op or *tmp476 :unpackCfg:x :unpackCfg:y
   823 jump *label378 equal *tmp476 false
   824 op shl *tmp478 1 :unpackCfg:ind
 
   835 op mul *tmp484 90 :unpackCfg:rotation
   836 draw image *tmp481 *tmp482 :unpackCfg:type *tmp483 *tmp484
   837 label *label378
-    * label *label379
-    * label *label380
   838 label *label274
-    * label *label275
   839 sensor *tmp402 switch1 @enabled
   840 jump *label277 equal *tmp402 false
   841 draw clear 0 0 32
   842 jump *label243 always
   843 label *label277
-    * label *label278
   844 jump *label279 equal .pageSwitched false
   845 drawflush display1
   846 label *label279
-    * label *label280
-    * label *label242
   847 multijump *tmp397 0 0 (m:marker4)
   848 multilabel *label272 (m:marker4)
   849 label *label243
   850 drawflush display1
-    * label *label238
   851 jump *label237 always
   852 label *label236
   853 op sub :displayLog:page .page 3
 
   869 print "/"
   870 print :displayLog:pages
   871 draw print 172 4 @bottomRight
-    * label *label283
-    * label *label282
   872 draw col %[white]
   873 op sub :displayLog:position :displayLog:start 1
-    * label *label284
   874 jump *label286 lessThan :displayLog:position :displayLog:stop
   875 label *label327
   876 read :displayLog:record bank1 :displayLog:position
 
   893 op add *tmp436 :displayLog:y 2
   894 print :displayRecord:s
   895 draw print *tmp435 *tmp436 @right
-    * label *label294
-    * label *label293
   896 op sub :displayLog:y :displayLog:y 15
   897 jump *label295 greaterThanEq :displayLog:y 10
   898 op add :displayLog:x :displayLog:x 58
   899 set :displayLog:y 164
   900 label *label295
-    * label *label296
-    * label *label292
-    * label *label287
   901 drawflush display1
   902 sensor *tmp439 switch1 @enabled
   903 jump *label297 equal *tmp439 false
   904 jump *label286 always
   905 label *label297
-    * label *label298
-    * label *label285
   906 op sub :displayLog:position :displayLog:position 1
   907 jump *label327 greaterThanEq :displayLog:position :displayLog:stop
   908 label *label286
   909 drawflush display1
-    * label *label281
   910 label *label237
   911 label *label204
   912 label *label20
 
   933 print .status3
   934 print "\n"
   935 printflush message1
-    * label *label301
   936 label *label300
   937 sensor .pageSwitched switch1 @enabled
   938 jump *label302 equal .pageSwitched false
 
   943 draw reset
   944 draw clear 0 0 32
   945 label *label302
-    * label *label303
-    * label *label15
   946 jump *label14 always
-    * label *label16
-    * label *label10
-    * label *label9
   947 wait 1e12
   948 jump *label8 always
   949 end

Modifications by Jumps phase, Jump Straightening, pass 6, iteration 1 (-3 instructions):
 
   383 set :drawMaterials:col :drawItem.5:col
   384 set :drawMaterials:y :drawItem.5:y
   385 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label157 greaterThan :drawMaterials:count 0
-    * jump *label139 always
+  386 jump *label139 lessThanEq :drawMaterials:count 0
   387 label *label157
   388 label *label147
   389 multijump *tmp280 0 0 (m:marker1)
 
   484 draw image 10 5 @thorium 17 0
   485 drawflush display1
   486 label *label206
-    * jump *label220 lessThanEq .lastTail :displayStorage:tail
-    * jump *label205 always
+  487 jump *label205 greaterThan .lastTail :displayStorage:tail
   488 label *label220
   489 read :displayStorage:accumulator bank2 .lastTail
   490 op add :displayStorage:x 25 .lastTail
 
   898 label *label295
   899 drawflush display1
   900 sensor *tmp439 switch1 @enabled
-    * jump *label297 equal *tmp439 false
-    * jump *label286 always
+  901 jump *label286 notEqual *tmp439 false
   902 label *label297
   903 op sub :displayLog:position :displayLog:position 1
   904 jump *label327 greaterThanEq :displayLog:position :displayLog:stop

Modifications by Jumps phase, Jump Optimization, pass 6, iteration 1:
 
   384 set :drawMaterials:y :drawItem.5:y
   385 op sub :drawMaterials:count :drawMaterials:count 1
   386 jump *label139 lessThanEq :drawMaterials:count 0
-    * label *label157
   387 label *label147
   388 multijump *tmp280 0 0 (m:marker1)
   389 multilabel *label146 (m:marker1)
 
   484 drawflush display1
   485 label *label206
   486 jump *label205 greaterThan .lastTail :displayStorage:tail
-    * label *label220
   487 read :displayStorage:accumulator bank2 .lastTail
   488 op add :displayStorage:x 25 .lastTail
   489 op and *tmp389 :displayStorage:accumulator 0b11111
 
   897 drawflush display1
   898 sensor *tmp439 switch1 @enabled
   899 jump *label286 notEqual *tmp439 false
-    * label *label297
   900 op sub :displayLog:position :displayLog:position 1
   901 jump *label327 greaterThanEq :displayLog:position :displayLog:stop
   902 label *label286

Modifications by Jumps phase, Jump Threading, pass 6, iteration 1:
 
    54 draw image *tmp58 *tmp63 @mega *tmp68 0
    55 drawflush display1
    56 op add .animation .animation 1
-    * jump *label22 always
+   57 jump *label20 always
    58 label *label21
    59 draw reset
    60 draw clear 0 0 32
 
   204 print "/"
   205 print :drawMaterials:unitTotal1
   206 draw print 171 97 @right
-    * jump *label80 equal :drawMaterials:unit2 null
+  207 jump *label56 equal :drawMaterials:unit2 null
   208 op mul *tmp176 122 .reconstructorProgress
   209 op min :drawItem.1:length 122 *tmp176
   210 draw col %[white]
 
   221 print "/"
   222 print :drawMaterials:unitTotal2
   223 draw print 171 82 @right
-    * jump *label90 equal :drawMaterials:unit3 null
+  224 jump *label56 equal :drawMaterials:unit3 null
   225 op mul *tmp200 122 :drawMaterials:multiReconstructorProgress
   226 op min :drawItem.2:length 122 *tmp200
   227 draw col %[white]
 
   240 draw print 171 67 @right
   241 label *label90
   242 label *label80
-    * jump *label71 always
+  243 jump *label56 always
   244 label *label70
   245 jump *label427 lessThanEq :drawMaterials:targetFactoryLead 0
   246 sensor *tmp223 A¾BFLW-air-factory13 @lead
 
   259 draw print 171 97 @right
   260 set :drawMaterials:y 75
   261 label *label427
-    * jump *label441 lessThanEq :drawMaterials:targetFactorySilicon 0
+  262 jump *label56 lessThanEq :drawMaterials:targetFactorySilicon 0
   263 sensor *tmp223 A¾BFLW-air-factory13 @silicon
   264 op mul *tmp228 122 *tmp223
   265 op div *tmp229 *tmp228 :drawMaterials:targetFactorySilicon
 
   483 draw image 10 5 @thorium 17 0
   484 drawflush display1
   485 label *label206
-    * jump *label205 greaterThan .lastTail :displayStorage:tail
+  486 jump *label204 greaterThan .lastTail :displayStorage:tail
   487 read :displayStorage:accumulator bank2 .lastTail
   488 op add :displayStorage:x 25 .lastTail
   489 op and *tmp389 :displayStorage:accumulator 0b11111
 
   929 printflush message1
   930 label *label300
   931 sensor .pageSwitched switch1 @enabled
-    * jump *label302 equal .pageSwitched false
+  932 jump *label14 equal .pageSwitched false
   933 control enabled switch1 false
   934 op add *tmp448 .page 1
   935 op mod .page *tmp448 .numPages

Modifications by Jumps phase, Unreachable Code Elimination, pass 6, iteration 1 (-3 instructions):
 
   238 print "/"
   239 print .megaTarget
   240 draw print 171 67 @right
-    * label *label90
-    * label *label80
   241 jump *label56 always
   242 label *label70
   243 jump *label427 lessThanEq :drawMaterials:targetFactoryLead 0
 
   274 draw print 170 *tmp242 @right
   275 print :drawMaterials:targetFactorySilicon
   276 draw print 171 *tmp242 @right
-    * label *label441
-    * label *label71
   277 jump *label56 always
   278 label *label55
   279 op equal *tmp246 .nextBlock @titanium
 
   460 draw print :drawUnits:x 129 @right
   461 label *label199
   462 drawflush display1
-    * label *label22
   463 jump *label20 always
   464 label *label19
   465 jump *label203 notEqual .page 1
 
   545 draw line :displayStorage:x 5 :displayStorage:x *tmp393
   546 drawflush display1
   547 op add .lastTail .lastTail 1
-    * label *label205
   548 jump *label204 always
   549 label *label203
   550 jump *label236 notEqual .page 2
 
   930 drawflush null
   931 draw reset
   932 draw clear 0 0 32
-    * label *label302
   933 jump *label14 always
-    * wait 1e12
-    * jump *label8 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 6, iteration 1:
 
    15 set .animation -15
    16 set .pageSwitched false
    17 set *signature "0:v1"
-    * label *label8
    18 label *label11
    19 ubind @poly
    20 ulocate building core false @copper *tmp42 *tmp43 *tmp44 .core

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    17 set *signature "0:v1"
    18 label *label11
    19 ubind @poly
-    * ulocate building core false @copper *tmp42 *tmp43 *tmp44 .core
+   20 ulocate building core false @copper 0 0 0 .core
    21 jump *label11 equal .core null
    22 printflush null
    23 drawflush null

Modifications by Final phase, Print Merging, iteration 1 (-13 instructions):
 
    87 op mod :drawHeader:s :drawHeader:t 60
    88 select *tmp90 lessThan :drawHeader:s 10 "0" ""
    89 print :drawHeader:m
-    * print ":"
-    * print *tmp90
-    * print :drawHeader:s
+   90 print ":{0}{0} (x{0}.{0})"
+   91 format *tmp90
+   92 format :drawHeader:s
    93 op mul *tmp91 10 :drawHeader:t
    94 op div *tmp92 *tmp91 :drawHeader:tt
    95 op round :drawHeader:ratio *tmp92
    96 op idiv *tmp94 :drawHeader:ratio 10
    97 op mod *tmp95 :drawHeader:ratio 10
-    * print " (x"
-    * print *tmp94
-    * print "."
-    * print *tmp95
-    * print ")"
+   98 format *tmp94
+   99 format *tmp95
   100 draw print 170 172 @topRight
   101 jump *label46 equal .titaniumDrill false
   102 sensor *tmp97 .titaniumDrill @titanium
 
   895 label *label204
   896 label *label20
   897 jump *label299 lessThanEq .megas 0
-    * print "[gold]All done.[]\nNothing more to see here.\nGo home."
-    * print "\n"
+  898 print "[gold]All done.[]\nNothing more to see here.\nGo home.\n"
   899 printflush message1
   900 jump *label300 always
   901 label *label299
-    * print "[gold]Building "
-    * print .nextBlock
-    * print "\n"
-    * print "==================================[]"
-    * print "\n"
-    * print .status1
-    * print "\n"
-    * print .status2
-    * print .item2
-    * print " "
-    * print "("
-    * print .block2
-    * print ")"
-    * print "\n"
-    * print .status3
-    * print "\n"
+  902 print "[gold]Building {0}\n==================================[]\n{0}\n{0}{0} ({0})\n{0}\n"
+  903 format .nextBlock
+  904 format .status1
+  905 format .status2
+  906 format .item2
+  907 format .block2
+  908 format .status3
   909 printflush message1
   910 label *label300
   911 sensor .pageSwitched switch1 @enabled

Final code before resolving virtual instructions:

        label *label7                                                Display.mnd: require "OreLocator.mnd" remote oreLocator;
    0:  read *tmp40 processor3 "*signature"                          ...
    1:  jump *label7 notEqual *tmp40 "3290b8c661787058:v1"           ...
    2:  set .core null                                               Display.mnd: var
    3:  set .page 0                                                  ...
    4:  set .numPages 4                                              ...
    5:  set .recentBuildIndex -1                                     Display.mnd: remote var
    6:  set .monos 0                                                 ...
    7:  set .flares 0                                                ...
    8:  set .polys 1                                                 ...
    9:  set .megas 0                                                 ...
   10:  set .flareTarget 0                                           ...
   11:  set .monoTarget 0                                            ...
   12:  set .polyTarget 0                                            ...
   13:  set .megaTarget 0                                            ...
   14:  set .animation -15                                           Display.mnd: var animation = -15;
   15:  set .pageSwitched false                                      Display.mnd: var pageSwitched = false;
   16:  set *signature "0:v1"                                        Display.mnd: #set target = 8;
        label *label11                                               Display.mnd: do
   17:  ubind @poly                                                  Display.mnd: ubind(@poly);
   18:  ulocate building core false @copper 0 0 0 .core              Display.mnd: core = ulocate(:building, :core, false);
   19:  jump *label11 equal .core null                               Display.mnd: do
   20:  printflush null                                              Display.mnd: printflush(null);
   21:  drawflush null                                               Display.mnd: drawflush(null);
        label *label14                                               Display.mnd: while true do
   22:  jump *label17 equal .unitReset false                         Display.mnd: if unitReset then
   23:  set .reconstructorProgress 0                                 Display.mnd: factoryProgress = reconstructorProgress = 0;
   24:  set .factoryProgress 0                                       ...
   25:  set .unitReset false                                         Display.mnd: unitReset = false;
        label *label17                                               Display.mnd: if unitReset then
   26:  jump *label19 notEqual .page 0                               Display.mnd: if page == 0 then
   27:  jump *label21 lessThanEq .megas 0                            Display.mnd: if megas > 0 then
   28:  jump *label24 greaterThanEq .animation 0                     Display.mnd: if animation < 0 then
   29:  draw color 0 0 32 80 0 0                                     Display.mnd: color(0, 0, 32, 80);
   30:  draw rect 0 0 176 176 0 0                                    Display.mnd: rect(0, 0, 176, 176);
   31:  jump *label25 always 0 0                                     Display.mnd: if animation < 0 then
        label *label24                                               ...
   32:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
   33:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
        label *label25                                               Display.mnd: if animation < 0 then
   34:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   35:  op div *tmp55 .animation 30                                  Display.mnd: var ratio = max(0, min(animation / 30, 1));
   36:  op min *tmp56 *tmp55 1                                       ...
   37:  op max :animate:ratio 0 *tmp56                               ...
   38:  op sub *tmp59 1 :animate:ratio                               Display.mnd: (1 - ratio) * from + ratio * to;
   39:  op mul *tmp60 *tmp59 40                                      ...
   40:  op mul *tmp61 :animate:ratio 88                              ...
   41:  op add *tmp58 *tmp60 *tmp61                                  ...
   42:  op mul *tmp65 *tmp59 137                                     ...
   43:  op add *tmp63 *tmp65 *tmp61                                  ...
   44:  op mul *tmp70 *tmp59 32                                      ...
   45:  op mul *tmp71 :animate:ratio 168                             ...
   46:  op add *tmp68 *tmp70 *tmp71                                  ...
   47:  draw image *tmp58 *tmp63 @mega *tmp68 0 0                    Display.mnd: image(x, y, @mega, size, 0);
   48:  drawflush display1                                           Display.mnd: drawflush(display1);
   49:  op add .animation .animation 1                               Display.mnd: animate();
   50:  jump *label20 always 0 0                                     Display.mnd: if megas > 0 then
        label *label21                                               ...
   51:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
   52:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
   53:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
   54:  print "Goal"                                                 Display.mnd: print(text);
   55:  draw print 40 161 @bottom                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   56:  print "Goal"                                                 Display.mnd: print(text);
   57:  draw print 41 161 @bottom                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   58:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
   59:  op add :drawHeader:count .nextBlock .nextUnit                Display.mnd: var count = nextBlock + nextUnit;
   60:  jump *label36 notEqual :drawHeader:count 2                   Display.mnd: if count == 2 then
   61:  draw image 25 139 .nextBlock 25 0 0                          Display.mnd: image(HEADER_X - 15, HEADER1_Y - 22, nextBlock, 25, 0);
   62:  draw image 55 139 .nextUnit 25 0 0                           Display.mnd: image(HEADER_X + 15, HEADER1_Y - 22, nextUnit, 25, 0);
   63:  jump *label37 always 0 0                                     Display.mnd: if count == 2 then
        label *label36                                               ...
   64:  jump *label38 notEqual :drawHeader:count 1                   Display.mnd: elsif count == 1 then
   65:  select *tmp81 notEqual .nextBlock null .nextBlock .nextUnit  Display.mnd: image(HEADER_X, HEADER1_Y - 24, nextBlock != null ? nextBlock : nextUnit, 32, 0);
   66:  draw image 40 137 *tmp81 32 0 0                              ...
   67:  jump *label39 always 0 0                                     Display.mnd: elsif count == 1 then
        label *label38                                               ...
   68:  op div *tmp82 @tick 2                                        Display.mnd: image(HEADER_X, HEADER1_Y - 24, @hydrogen, 32, 360 - (@tick / 2) % 360);
   69:  op mod *tmp83 *tmp82 360                                     ...
   70:  op sub *tmp84 360 *tmp83                                     ...
   71:  draw image 40 137 @hydrogen 32 *tmp84 0                      ...
        label *label39                                               Display.mnd: elsif count == 1 then
        label *label37                                               Display.mnd: if count == 2 then
   72:  set :drawHeader:tt @second                                   Display.mnd: var tt = @second;
   73:  read *tmp0 processor1 "time"                                 Display.mnd: var t = floor(TIME / 120);
   74:  op idiv :drawHeader:t *tmp0 120                              ...
   75:  op idiv :drawHeader:m :drawHeader:t 60                       Display.mnd: var m = t \ 60;
   76:  op mod :drawHeader:s :drawHeader:t 60                        Display.mnd: var s = t % 60;
   77:  select *tmp90 lessThan :drawHeader:s 10 "0" ""               Display.mnd: print(m, ":", s < 10 ? "0" : "", s);
   78:  print :drawHeader:m                                          ...
   79:  print ":{0}{0} (x{0}.{0})"                                   ...
   80:  format *tmp90                                                ...
   81:  format :drawHeader:s                                         ...
   82:  op mul *tmp91 10 :drawHeader:t                               Display.mnd: var ratio = round(10 * t / tt);
   83:  op div *tmp92 *tmp91 :drawHeader:tt                          ...
   84:  op round :drawHeader:ratio *tmp92 0                          ...
   85:  op idiv *tmp94 :drawHeader:ratio 10                          Display.mnd: print(" (x", ratio \ 10, ".", ratio % 10);
   86:  op mod *tmp95 :drawHeader:ratio 10                           ...
   87:  format *tmp94                                                ...
   88:  format *tmp95                                                ...
   89:  draw print 170 172 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   90:  jump *label46 equal .titaniumDrill false                     Display.mnd: if titaniumDrill then
   91:  sensor *tmp97 .titaniumDrill @titanium                       Display.mnd: count = max(titaniumDrillCount, titaniumDrill.@titanium);
   92:  op max :drawHeader:count .titaniumDrillCount *tmp97          ...
   93:  op log10 *tmp99 :drawHeader:count 0                          Display.mnd: var len = floor(log10(count));
   94:  op floor :drawHeader:len *tmp99 0                            ...
   95:  print "x"                                                    Display.mnd: print(text);
   96:  print :drawHeader:count                                      ...
   97:  draw print 170 155 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
   98:  op mul *tmp102 7 :drawHeader:len                             Display.mnd: image(x - 20 - 7 * len, 146, @titanium, 12, 0);
   99:  op sub *tmp103 150 *tmp102                                   ...
  100:  draw image *tmp103 146 @titanium 12 0 0                      ...
        label *label46                                               Display.mnd: if titaniumDrill then
  101:  jump *label50 equal .thoriumContainer false                  Display.mnd: if thoriumContainer then
  102:  sensor :drawHeader:count .thoriumContainer @thorium          Display.mnd: count = thoriumContainer.@thorium;
  103:  op log10 *tmp106 :drawHeader:count 0                         Display.mnd: var len = floor(log10(count));
  104:  op floor :drawHeader:len.1 *tmp106 0                         ...
  105:  print "x"                                                    Display.mnd: print(text);
  106:  print :drawHeader:count                                      ...
  107:  draw print 120 155 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  108:  op mul *tmp109 7 :drawHeader:len.1                           Display.mnd: image(x - 20 - 7 * len, 146, @thorium, 12, 0);
  109:  op sub *tmp110 100 *tmp109                                   ...
  110:  draw image *tmp110 146 @thorium 12 0 0                       ...
        label *label50                                               Display.mnd: if thoriumContainer then
  111:  set :drawMaterials:col 0                                     Display.mnd: var count, col = 0, y = HEADER2_Y - ROW_HEIGHT;
  112:  set :drawMaterials:y 90                                      ...
  113:  jump *label55 notEqual .nextBlock null                       Display.mnd: if nextBlock == null then
  114:  sensor *tmp113 A¾BFLW-air-factory13 @progress                Display.mnd: factoryProgress = max(factoryProgress, air_factory.@progress);
  115:  op max .factoryProgress .factoryProgress *tmp113             ...
  116:  sensor *tmp115 AÀF@L`-additive-reconstructor22 @progress     Display.mnd: reconstructorProgress = max(reconstructorProgress, additive_rec.@progress);
  117:  op max .reconstructorProgress .reconstructorProgress *tmp115 ...
  118:  sensor :drawMaterials:multiReconstructorProgress AÁPBJf-mult Display.mnd: var multiReconstructorProgress = multiplicative_rec.@progress;
  119:  jump *label57 notEqual .nextUnit @mono                       Display.mnd: if nextUnit == @mono then
  120:  set :drawMaterials:targetFactoryLead 15                      Display.mnd: targetFactoryLead = 15;
  121:  set :drawMaterials:targetFactorySilicon 30                   Display.mnd: targetFactorySilicon = 30;
  122:  set .materialCount 2                                         Display.mnd: materialCount = 2;
  123:  set :drawMaterials:unitCount1 .monos                         Display.mnd: unitCount1 = monos;
  124:  set :drawMaterials:unitTotal1 .monoTarget                    Display.mnd: unitTotal1 = monoTarget;
  125:  set :drawMaterials:unit1 .nextUnit                           Display.mnd: unit1 = nextUnit;
  126:  set :drawMaterials:unit3 null                                Display.mnd: unit2 = unit3 = null;
  127:  set :drawMaterials:unit2 null                                ...
  128:  jump *label58 always 0 0                                     Display.mnd: if nextUnit == @mono then
        label *label57                                               ...
  129:  jump *label59 notEqual .nextUnit @flare                      Display.mnd: elsif nextUnit == @flare then
  130:  set :drawMaterials:targetFactoryLead 0                       Display.mnd: targetFactoryLead = 0;
  131:  set :drawMaterials:targetFactorySilicon 15                   Display.mnd: targetFactorySilicon = 15;
  132:  set .materialCount 1                                         Display.mnd: materialCount = 1;
  133:  set :drawMaterials:unitCount1 .flares                        Display.mnd: unitCount1 = flares;
  134:  set :drawMaterials:unitTotal1 .flareTarget                   Display.mnd: unitTotal1 = flareTarget;
  135:  set :drawMaterials:unit1 .nextUnit                           Display.mnd: unit1 = nextUnit;
  136:  set :drawMaterials:unit3 null                                Display.mnd: unit2 = unit3 = null;
  137:  set :drawMaterials:unit2 null                                ...
  138:  jump *label60 always 0 0                                     Display.mnd: elsif nextUnit == @flare then
        label *label59                                               ...
  139:  jump *label61 notEqual .nextUnit @poly                       Display.mnd: elsif nextUnit == @poly then
  140:  op floor :drawMaterials:unitCount1 .factoryProgress 0        Display.mnd: unitCount1 = floor(factoryProgress);
  141:  set :drawMaterials:unitCount2 .polys                         Display.mnd: unitCount2 = polys;
  142:  set :drawMaterials:unitTotal1 1                              Display.mnd: unitTotal1 = 1;
  143:  set :drawMaterials:unitTotal2 .polyTarget                    Display.mnd: unitTotal2 = polyTarget;
  144:  set :drawMaterials:unit1 @mono                               Display.mnd: unit1 = @mono;
  145:  set :drawMaterials:unit2 .nextUnit                           Display.mnd: unit2 = nextUnit;
  146:  set :drawMaterials:unit3 null                                Display.mnd: unit3 = null;
  147:  op greaterThan *tmp134 .reconstructorProgress 0              Display.mnd: factoryProgress = max(factoryProgress, reconstructorProgress > 0);
  148:  op max .factoryProgress .factoryProgress *tmp134             ...
  149:  jump *label62 always 0 0                                     Display.mnd: elsif nextUnit == @poly then
        label *label61                                               ...
  150:  jump *label63 notEqual .nextUnit @mega                       Display.mnd: elsif nextUnit == @mega then
  151:  op floor :drawMaterials:unitCount1 .factoryProgress 0        Display.mnd: unitCount1 = floor(factoryProgress);
  152:  op floor :drawMaterials:unitCount2 .reconstructorProgress 0  Display.mnd: unitCount2 = floor(reconstructorProgress);
  153:  set :drawMaterials:unitTotal1 1                              Display.mnd: unitTotal1 = 1;
  154:  set :drawMaterials:unitTotal2 1                              Display.mnd: unitTotal2 = 1;
  155:  set :drawMaterials:unit1 @mono                               Display.mnd: unit1 = @mono;
  156:  set :drawMaterials:unit2 @poly                               Display.mnd: unit2 = @poly;
  157:  set :drawMaterials:unit3 .nextUnit                           Display.mnd: unit3 = nextUnit;
  158:  op greaterThan *tmp141 .reconstructorProgress 0              Display.mnd: factoryProgress = max(factoryProgress, reconstructorProgress > 0);
  159:  op max .factoryProgress .factoryProgress *tmp141             ...
  160:  op greaterThan *tmp143 :drawMaterials:multiReconstructorProg Display.mnd: reconstructorProgress = max(reconstructorProgress, multiReconstructorProgress > 0);
  161:  op max .reconstructorProgress .reconstructorProgress *tmp143 ...
        label *label63                                               Display.mnd: elsif nextUnit == @mega then
        label *label62                                               Display.mnd: elsif nextUnit == @poly then
        label *label60                                               Display.mnd: elsif nextUnit == @flare then
        label *label58                                               Display.mnd: if nextUnit == @mono then
  162:  print "Unit factories"                                       Display.mnd: print(text);
  163:  draw print 22 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  164:  print "Unit factories"                                       Display.mnd: print(text);
  165:  draw print 23 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  166:  jump *label70 lessThanEq .factoryProgress 0                  Display.mnd: if factoryProgress > 0 then
  167:  op mul *tmp152 122 .factoryProgress                          Display.mnd: var length = min(barLength, barLength * current / target);
  168:  op min :drawItem:length 122 *tmp152                          ...
  169:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  170:  draw image 11 95 :drawMaterials:unit1 16 0 0                 Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  171:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  172:  draw rect 22 90 :drawItem:length 10 0 0                      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  173:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  174:  draw lineRect 22 90 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  175:  print :drawMaterials:unitCount1                              Display.mnd: print(text);
  176:  print "/"                                                    ...
  177:  print :drawMaterials:unitTotal1                              ...
  178:  draw print 170 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  179:  print :drawMaterials:unitCount1                              Display.mnd: print(text);
  180:  print "/"                                                    ...
  181:  print :drawMaterials:unitTotal1                              ...
  182:  draw print 171 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  183:  jump *label56 equal :drawMaterials:unit2 null                Display.mnd: if unit2 != null then
  184:  op mul *tmp176 122 .reconstructorProgress                    Display.mnd: var length = min(barLength, barLength * current / target);
  185:  op min :drawItem.1:length 122 *tmp176                        ...
  186:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  187:  draw image 11 80 :drawMaterials:unit2 16 0 0                 Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  188:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  189:  draw rect 22 75 :drawItem.1:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  190:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  191:  draw lineRect 22 75 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  192:  print :drawMaterials:unitCount2                              Display.mnd: print(text);
  193:  print "/"                                                    ...
  194:  print :drawMaterials:unitTotal2                              ...
  195:  draw print 170 82 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  196:  print :drawMaterials:unitCount2                              Display.mnd: print(text);
  197:  print "/"                                                    ...
  198:  print :drawMaterials:unitTotal2                              ...
  199:  draw print 171 82 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  200:  jump *label56 equal :drawMaterials:unit3 null                Display.mnd: if unit3 != null then
  201:  op mul *tmp200 122 :drawMaterials:multiReconstructorProgress Display.mnd: var length = min(barLength, barLength * current / target);
  202:  op min :drawItem.2:length 122 *tmp200                        ...
  203:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  204:  draw image 11 65 :drawMaterials:unit3 16 0 0                 Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  205:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  206:  draw rect 22 60 :drawItem.2:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  207:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  208:  draw lineRect 22 60 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  209:  print .megas                                                 Display.mnd: print(text);
  210:  print "/"                                                    ...
  211:  print .megaTarget                                            ...
  212:  draw print 170 67 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  213:  print .megas                                                 Display.mnd: print(text);
  214:  print "/"                                                    ...
  215:  print .megaTarget                                            ...
  216:  draw print 171 67 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  217:  jump *label56 always 0 0                                     Display.mnd: if factoryProgress > 0 then
        label *label70                                               ...
  218:  jump *label427 lessThanEq :drawMaterials:targetFactoryLead 0 Display.mnd: if target > 0 then
  219:  sensor *tmp223 A¾BFLW-air-factory13 @lead                    Display.mnd: drawItem(in out col, in out y, 1, item, air_factory.sensor(item), target, target);
  220:  op mul *tmp228 122 *tmp223                                   Display.mnd: var length = min(barLength, barLength * current / target);
  221:  op div *tmp229 *tmp228 :drawMaterials:targetFactoryLead      ...
  222:  op min :drawItem.3:length 122 *tmp229                        ...
  223:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  224:  draw image 11 95 @lead 16 0 0                                Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  225:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  226:  draw rect 22 90 :drawItem.3:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  227:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  228:  draw lineRect 22 90 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  229:  print :drawMaterials:targetFactoryLead                       Display.mnd: print(text);
  230:  draw print 170 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  231:  print :drawMaterials:targetFactoryLead                       Display.mnd: print(text);
  232:  draw print 171 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  233:  set :drawMaterials:y 75                                      Display.mnd: drawItem(in out col, in out y, 1, item, air_factory.sensor(item), target, target);
        label *label427                                              Display.mnd: if target > 0 then
  234:  jump *label56 lessThanEq :drawMaterials:targetFactorySilicon ...
  235:  sensor *tmp223 A¾BFLW-air-factory13 @silicon                 Display.mnd: drawItem(in out col, in out y, 1, item, air_factory.sensor(item), target, target);
  236:  op mul *tmp228 122 *tmp223                                   Display.mnd: var length = min(barLength, barLength * current / target);
  237:  op div *tmp229 *tmp228 :drawMaterials:targetFactorySilicon   ...
  238:  op min :drawItem.3:length 122 *tmp229                        ...
  239:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  240:  op add *tmp240 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  241:  draw image 11 *tmp240 @silicon 16 0 0                        ...
  242:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  243:  draw rect 22 :drawMaterials:y :drawItem.3:length 10 0 0      Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  244:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  245:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  246:  op add *tmp242 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  247:  print :drawMaterials:targetFactorySilicon                    Display.mnd: print(text);
  248:  draw print 170 *tmp242 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  249:  print :drawMaterials:targetFactorySilicon                    Display.mnd: print(text);
  250:  draw print 171 *tmp242 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  251:  jump *label56 always 0 0                                     Display.mnd: if nextBlock == null then
        label *label55                                               ...
  252:  op equal *tmp246 .nextBlock @titanium                        Display.mnd: elsif nextBlock == @titanium or nextBlock == @ore-titanium then
  253:  op equal *tmp247 .nextBlock @ore-titanium                    ...
  254:  op or *tmp248 *tmp246 *tmp247                                ...
  255:  jump *label115 equal *tmp248 false                           ...
  256:  read *tmp250 processor3 ".mapAction"                         Display.mnd: print(text);
  257:  print *tmp250                                                ...
  258:  draw print 22 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  259:  read *tmp252 processor3 ".mapAction"                         Display.mnd: print(text);
  260:  print *tmp252                                                ...
  261:  draw print 23 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  262:  read :drawItem.4:current processor3 ".mapProgress"           Display.mnd: drawItem(in 0, in HEADER2_Y - ROW_HEIGHT, 1, @titanium, oreLocator.mapProgress, oreLocator.mapTotal, "x", oreLocator.mapSpots);
  263:  read :drawItem.4:target processor3 ".mapTotal"               ...
  264:  op mul *tmp257 122 :drawItem.4:current                       Display.mnd: var length = min(barLength, barLength * current / target);
  265:  op div *tmp258 *tmp257 :drawItem.4:target                    ...
  266:  op min :drawItem.4:length 122 *tmp258                        ...
  267:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  268:  draw image 11 95 @titanium 16 0 0                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  269:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  270:  draw rect 22 90 :drawItem.4:length 10 0 0                    Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  271:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  272:  draw lineRect 22 90 122 10 0 0                               Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  273:  print "x"                                                    Display.mnd: print(text);
  274:  read *tmp272 processor3 ".mapSpots"                          ...
  275:  print *tmp272                                                ...
  276:  draw print 170 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  277:  print "x"                                                    Display.mnd: print(text);
  278:  read *tmp274 processor3 ".mapSpots"                          ...
  279:  print *tmp274                                                ...
  280:  draw print 171 97 @right                                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  281:  jump *label116 always 0 0                                    Display.mnd: elsif nextBlock == @titanium or nextBlock == @ore-titanium then
        label *label115                                              ...
  282:  set .materialCount .totalTargets                             Display.mnd: count = materialCount = totalTargets;
  283:  set :drawMaterials:count .materialCount                      ...
  284:  print "Materials"                                            Display.mnd: print(text);
  285:  draw print 22 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  286:  print "Materials"                                            Display.mnd: print(text);
  287:  draw print 23 105 @bottomLeft                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  288:  jump *label135 equal .materialCount false                    Display.mnd: if count then
  289:  set :drawMaterials:item.1 @copper                            Display.mnd: for var item, target in
  290:  set :drawMaterials:target.1 .targetCopper                    ...
  291:  setaddr *tmp280 *label140                                    ...
  292:  jump *label137 always 0 0                                    ...
        multilabel *label140                                         ...
  293:  set :drawMaterials:item.1 @lead                              ...
  294:  set :drawMaterials:target.1 .targetLead                      ...
  295:  setaddr *tmp280 *label141                                    ...
  296:  jump *label137 always 0 0                                    ...
        multilabel *label141                                         ...
  297:  set :drawMaterials:item.1 @graphite                          ...
  298:  set :drawMaterials:target.1 .targetGraphite                  ...
  299:  setaddr *tmp280 *label142                                    ...
  300:  jump *label137 always 0 0                                    ...
        multilabel *label142                                         ...
  301:  set :drawMaterials:item.1 @silicon                           ...
  302:  set :drawMaterials:target.1 .targetSilicon                   ...
  303:  setaddr *tmp280 *label143                                    ...
  304:  jump *label137 always 0 0                                    ...
        multilabel *label143                                         ...
  305:  set :drawMaterials:item.1 @titanium                          ...
  306:  set :drawMaterials:target.1 .targetTitanium                  ...
  307:  setaddr *tmp280 *label144                                    ...
  308:  jump *label137 always 0 0                                    ...
        multilabel *label144                                         ...
  309:  set :drawMaterials:item.1 @metaglass                         ...
  310:  set :drawMaterials:target.1 .targetMetaglass                 ...
  311:  setaddr *tmp280 *label145                                    ...
  312:  jump *label137 always 0 0                                    ...
        multilabel *label145                                         ...
  313:  set :drawMaterials:item.1 @thorium                           ...
  314:  set :drawMaterials:target.1 .targetThorium                   ...
  315:  setaddr *tmp280 *label146                                    ...
        label *label137                                              ...
  316:  jump *label147 lessThanEq :drawMaterials:target.1 0          Display.mnd: if target > 0 then
  317:  sensor *tmp283 .core :drawMaterials:item.1                   Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  318:  set :drawItem.5:y :drawMaterials:y                           ...
  319:  op mul *tmp288 122 *tmp283                                   Display.mnd: var length = min(barLength, barLength * current / target);
  320:  op div *tmp289 *tmp288 :drawMaterials:target.1               ...
  321:  op min :drawItem.5:length 122 *tmp289                        ...
  322:  op mul *tmp292 :drawMaterials:col 88                         Display.mnd: var iconX = ICON_X + col * 176 / 2;
  323:  op add :drawItem.5:iconX 11 *tmp292                          ...
  324:  op add :drawItem.5:barX 22 *tmp292                           Display.mnd: var barX = BAR_X + col * 176 / 2;
  325:  op add :drawItem.5:textX 170 *tmp292                         Display.mnd: var textX = textEnd + col * 176 / 2;
  326:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  327:  op add *tmp300 :drawMaterials:y 5                            Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  328:  draw image :drawItem.5:iconX *tmp300 :drawMaterials:item.1 1 ...
  329:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  330:  draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:leng Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  331:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  332:  draw lineRect :drawItem.5:barX :drawMaterials:y 122 10 0 0   Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  333:  op add *tmp302 :drawMaterials:y 7                            Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  334:  print :drawMaterials:target.1                                Display.mnd: print(text);
  335:  draw print :drawItem.5:textX *tmp302 @right                  Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  336:  op add :drawText.22:x *tmp292 171                            Display.mnd: drawText(x + 1, y, alignment, text);
  337:  print :drawMaterials:target.1                                Display.mnd: print(text);
  338:  draw print :drawText.22:x *tmp302 @right                     Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  339:  op add :drawItem.5:col :drawMaterials:col 1                  Display.mnd: if ++col >= columns then
  340:  jump *label155 lessThan :drawItem.5:col 1                    ...
  341:  set :drawItem.5:col 0                                        Display.mnd: col = 0;
  342:  op sub :drawItem.5:y :drawMaterials:y 15                     Display.mnd: y -= ROW_HEIGHT;
        label *label155                                              Display.mnd: if ++col >= columns then
  343:  set :drawMaterials:col :drawItem.5:col                       Display.mnd: drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  344:  set :drawMaterials:y :drawItem.5:y                           ...
  345:  op sub :drawMaterials:count :drawMaterials:count 1           Display.mnd: if --count <= 0 then break; end;
  346:  jump *label139 lessThanEq :drawMaterials:count 0             ...
        label *label147                                              Display.mnd: if target > 0 then
  347:  multijump *tmp280 0 0                                        Display.mnd: for var item, target in
        multilabel *label146                                         ...
        label *label139                                              ...
        label *label135                                              Display.mnd: if count then
        label *label116                                              Display.mnd: elsif nextBlock == @titanium or nextBlock == @ore-titanium then
        label *label56                                               Display.mnd: if nextBlock == null then
  348:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  349:  select *tmp309 lessThan .materialCount 4 40 25               Display.mnd: var y = materialCount < 4 ? HEADER3_Y : HEADER4_Y;
  350:  print "Builder"                                              Display.mnd: print(text);
  351:  draw print 22 *tmp309 @bottomLeft                            Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  352:  print "Builder"                                              Display.mnd: print(text);
  353:  draw print 23 *tmp309 @bottomLeft                            Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  354:  jump *label167 notEqual .transportItem null                  Display.mnd: if transportItem == null then
  355:  op sub *tmp313 *tmp309 15                                    Display.mnd: drawUnit(@poly, 0, in y - ROW_HEIGHT);
  356:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  357:  op sub *tmp330 *tmp309 10                                    Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  358:  draw image 11 *tmp330 @poly 16 0 0                           ...
  359:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  360:  draw rect 22 *tmp313 0 10 0 0                                Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  361:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  362:  draw lineRect 22 *tmp313 122 10 0 0                          Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  363:  op sub *tmp332 *tmp309 8                                     Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  364:  print .transportTarget                                       Display.mnd: print(text);
  365:  draw print 170 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  366:  print .transportTarget                                       Display.mnd: print(text);
  367:  draw print 171 *tmp332 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  368:  jump *label168 always 0 0                                    Display.mnd: if transportItem == null then
        label *label167                                              ...
  369:  sensor :drawUnit:unitItem @unit @firstItem                   Display.mnd: var unitItem = @unit.@firstItem;
  370:  sensor *tmp339 @unit @totalItems                             Display.mnd: drawUnit(transportItem, @unit.@totalItems * (unitItem == transportItem), in y - ROW_HEIGHT);
  371:  op equal *tmp340 :drawUnit:unitItem .transportItem           ...
  372:  op mul *tmp341 *tmp339 *tmp340                               ...
  373:  op sub *tmp342 *tmp309 15                                    ...
  374:  set :drawUnit.2:item .transportItem                          ...
  375:  set :drawItem.7:target .transportTarget                      Display.mnd: drawItem(in 0, in out y, 1, item, items, transportTarget, transportTarget);
  376:  op mul *tmp347 122 *tmp341                                   Display.mnd: var length = min(barLength, barLength * current / target);
  377:  op div *tmp348 *tmp347 :drawItem.7:target                    ...
  378:  op min :drawItem.7:length 122 *tmp348                        ...
  379:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  380:  op sub *tmp359 *tmp309 10                                    Display.mnd: image(iconX, y + ICON_Y, item, 16, 0);
  381:  draw image 11 *tmp359 :drawUnit.2:item 16 0 0                ...
  382:  draw color 0 128 0 255 0 0                                   Display.mnd: color(0,128,0,255);
  383:  draw rect 22 *tmp342 :drawItem.7:length 10 0 0               Display.mnd: rect(barX, y, length, BAR_HEIGHT);
  384:  draw color 0 255 0 255 0 0                                   Display.mnd: color(0,255,0,255);
  385:  draw lineRect 22 *tmp342 122 10 0 0                          Display.mnd: lineRect(barX, y, barLength, BAR_HEIGHT);
  386:  op sub *tmp361 *tmp309 8                                     Display.mnd: drawBold(textX, y + ICON_Y + 2, @right, text);
  387:  print .transportTarget                                       Display.mnd: print(text);
  388:  draw print 170 *tmp361 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  389:  print .transportTarget                                       Display.mnd: print(text);
  390:  draw print 171 *tmp361 @right                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
        label *label168                                              Display.mnd: if transportItem == null then
  391:  set :drawUnits:x 170                                         Display.mnd: var x = 170;
  392:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  393:  set :drawUnitCount:count .polys                              Display.mnd: drawUnitCount(@poly, polys, ref x);
  394:  jump *label189 lessThanEq :drawUnitCount:count 0             Display.mnd: if count > 0 then
  395:  draw image 150 127 @poly 12 0 0                              Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  396:  print "x"                                                    Display.mnd: print(text);
  397:  print :drawUnitCount:count                                   ...
  398:  draw print 170 129 @right                                    Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  399:  op sub :drawUnits:x 170 30                                   Display.mnd: x -= 30;
        label *label189                                              Display.mnd: if count > 0 then
  400:  set :drawUnitCount.1:count .monos                            Display.mnd: drawUnitCount(@mono, monos, ref x);
  401:  jump *label194 lessThanEq :drawUnitCount.1:count 0           Display.mnd: if count > 0 then
  402:  op sub *tmp372 :drawUnits:x 20                               Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  403:  draw image *tmp372 127 @mono 12 0 0                          ...
  404:  print "x"                                                    Display.mnd: print(text);
  405:  print :drawUnitCount.1:count                                 ...
  406:  draw print :drawUnits:x 129 @right                           Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  407:  op sub :drawUnits:x :drawUnits:x 30                          Display.mnd: x -= 30;
        label *label194                                              Display.mnd: if count > 0 then
  408:  set :drawUnitCount.2:count .flares                           Display.mnd: drawUnitCount(@flare, flares, ref x);
  409:  jump *label199 lessThanEq :drawUnitCount.2:count 0           Display.mnd: if count > 0 then
  410:  op sub *tmp375 :drawUnits:x 20                               Display.mnd: image(x - 20, HEADER1_Y - 34, type, 12, 0);
  411:  draw image *tmp375 127 @flare 12 0 0                         ...
  412:  print "x"                                                    Display.mnd: print(text);
  413:  print :drawUnitCount.2:count                                 ...
  414:  draw print :drawUnits:x 129 @right                           Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
        label *label199                                              Display.mnd: if count > 0 then
  415:  drawflush display1                                           Display.mnd: drawflush(display1);
  416:  jump *label20 always 0 0                                     Display.mnd: if page == 0 then
        label *label19                                               ...
  417:  jump *label203 notEqual .page 1                              Display.mnd: elsif page == 1 then
  418:  read :displayStorage:tail bank2 510                          Display.mnd: var tail = bank2[510];
  419:  jump *label206 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  420:  read .lastTail bank2 511                                     Display.mnd: lastTail = bank2[511];
  421:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  422:  draw image 10 165 @copper 17 0 0                             Display.mnd: image(10, y, item, 17, 0);
  423:  draw image 10 145 @lead 17 0 0                               ...
  424:  draw image 10 125 @sand 17 0 0                               ...
  425:  draw image 10 105 @coal 17 0 0                               ...
  426:  draw image 10 85 @graphite 17 0 0                            ...
  427:  draw image 10 65 @silicon 17 0 0                             ...
  428:  draw image 10 45 @titanium 17 0 0                            ...
  429:  draw image 10 25 @metaglass 17 0 0                           ...
  430:  draw image 10 5 @thorium 17 0 0                              ...
  431:  drawflush display1                                           Display.mnd: drawflush(display1);
        label *label206                                              Display.mnd: if pageSwitched then
  432:  jump *label204 greaterThan .lastTail :displayStorage:tail    Display.mnd: if lastTail > tail then return; end;
  433:  read :displayStorage:accumulator bank2 .lastTail             Display.mnd: var accumulator = bank2[lastTail];
  434:  op add :displayStorage:x 25 .lastTail                        Display.mnd: var x = 25 + lastTail;
  435:  op and *tmp389 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  436:  op sub :displayStorage:value *tmp389 8                       ...
  437:  select *tmp392 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  438:  draw col *tmp392 0 0 0 0 0                                   ...
  439:  op add *tmp393 165 :displayStorage:value                     Display.mnd: line(x, y, x, y + value);
  440:  draw line :displayStorage:x 165 :displayStorage:x *tmp393 0  ...
  441:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  442:  op and *tmp389 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  443:  op sub :displayStorage:value *tmp389 8                       ...
  444:  select *tmp392 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  445:  draw col *tmp392 0 0 0 0 0                                   ...
  446:  op add *tmp393 145 :displayStorage:value                     Display.mnd: line(x, y, x, y + value);
  447:  draw line :displayStorage:x 145 :displayStorage:x *tmp393 0  ...
  448:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  449:  op and *tmp389 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  450:  op sub :displayStorage:value *tmp389 8                       ...
  451:  select *tmp392 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  452:  draw col *tmp392 0 0 0 0 0                                   ...
  453:  op add *tmp393 125 :displayStorage:value                     Display.mnd: line(x, y, x, y + value);
  454:  draw line :displayStorage:x 125 :displayStorage:x *tmp393 0  ...
  455:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  456:  op and *tmp389 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  457:  op sub :displayStorage:value *tmp389 8                       ...
  458:  select *tmp392 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  459:  draw col *tmp392 0 0 0 0 0                                   ...
  460:  op add *tmp393 105 :displayStorage:value                     Display.mnd: line(x, y, x, y + value);
  461:  draw line :displayStorage:x 105 :displayStorage:x *tmp393 0  ...
  462:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  463:  op and *tmp389 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  464:  op sub :displayStorage:value *tmp389 8                       ...
  465:  select *tmp392 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  466:  draw col *tmp392 0 0 0 0 0                                   ...
  467:  op add *tmp393 85 :displayStorage:value                      Display.mnd: line(x, y, x, y + value);
  468:  draw line :displayStorage:x 85 :displayStorage:x *tmp393 0 0 ...
  469:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  470:  op and *tmp389 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  471:  op sub :displayStorage:value *tmp389 8                       ...
  472:  select *tmp392 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  473:  draw col *tmp392 0 0 0 0 0                                   ...
  474:  op add *tmp393 65 :displayStorage:value                      Display.mnd: line(x, y, x, y + value);
  475:  draw line :displayStorage:x 65 :displayStorage:x *tmp393 0 0 ...
  476:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  477:  op and *tmp389 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  478:  op sub :displayStorage:value *tmp389 8                       ...
  479:  select *tmp392 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  480:  draw col *tmp392 0 0 0 0 0                                   ...
  481:  op add *tmp393 45 :displayStorage:value                      Display.mnd: line(x, y, x, y + value);
  482:  draw line :displayStorage:x 45 :displayStorage:x *tmp393 0 0 ...
  483:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  484:  op and *tmp389 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  485:  op sub :displayStorage:value *tmp389 8                       ...
  486:  select *tmp392 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  487:  draw col *tmp392 0 0 0 0 0                                   ...
  488:  op add *tmp393 25 :displayStorage:value                      Display.mnd: line(x, y, x, y + value);
  489:  draw line :displayStorage:x 25 :displayStorage:x *tmp393 0 0 ...
  490:  op shr :displayStorage:accumulator :displayStorage:accumulat Display.mnd: accumulator >>= 5;
  491:  op and *tmp389 :displayStorage:accumulator 0b11111           Display.mnd: var value = (accumulator & 0b11111) - 8;
  492:  op sub :displayStorage:value *tmp389 8                       ...
  493:  select *tmp392 greaterThanEq :displayStorage:value 0 %[green Display.mnd: col(value >= 0 ? %[green] : %[red]);
  494:  draw col *tmp392 0 0 0 0 0                                   ...
  495:  op add *tmp393 5 :displayStorage:value                       Display.mnd: line(x, y, x, y + value);
  496:  draw line :displayStorage:x 5 :displayStorage:x *tmp393 0 0  ...
  497:  drawflush display1                                           Display.mnd: drawflush(display1);
  498:  op add .lastTail .lastTail 1                                 Display.mnd: displayStorage();
  499:  jump *label204 always 0 0                                    Display.mnd: elsif page == 1 then
        label *label203                                              ...
  500:  jump *label236 notEqual .page 2                              Display.mnd: elsif page == 2 then
  501:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  502:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  503:  draw col %[gold] 0 0 0 0 0                                   Display.mnd: col(%[gold]);
  504:  print "Base map"                                             Display.mnd: print(text);
  505:  draw print 172 172 @topRight                                 Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  506:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  507:  draw translate 88 88 0 0 0 0                                 Display.mnd: translate(176 / 2, 176 / 2);
  508:  draw scale 5.866666666666666 5.866666666666666 0 0 0 0       Display.mnd: scale(176 / 15 / 2, 176 / 15 / 2);
  509:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  510:  draw image 0 0 @core-shard 6 0 0                             Display.mnd: image(0, 0, @core-shard, 6, 0);
  511:  set :displayBaseMap:cfg "AJEMJJ-graphite-press0"             Display.mnd: for var cfg in BLOCKS do
  512:  setaddr *tmp397 *label244                                    ...
  513:  jump *label241 always 0 0                                    ...
        multilabel *label244                                         ...
  514:  set :displayBaseMap:cfg "AJTJK-battery1"                    ...
  515:  setaddr *tmp397 *label245                                    ...
  516:  jump *label241 always 0 0                                    ...
        multilabel *label245                                         ...
  517:  set :displayBaseMap:cfg "ALTJL-battery2"                    ...
  518:  setaddr *tmp397 *label246                                    ...
  519:  jump *label241 always 0 0                                    ...
        multilabel *label246                                         ...
  520:  set :displayBaseMap:cfg "AJRJM-combustion-generator3"       ...
  521:  setaddr *tmp397 *label247                                    ...
  522:  jump *label241 always 0 0                                    ...
        multilabel *label247                                         ...
  523:  set :displayBaseMap:cfg "ALMQJN-silicon-smelter4"            ...
  524:  setaddr *tmp397 *label248                                    ...
  525:  jump *label241 always 0 0                                    ...
        multilabel *label248                                         ...
  526:  set :displayBaseMap:cfg "A{LNJO-inverted-sorter5"            ...
  527:  setaddr *tmp397 *label249                                    ...
  528:  jump *label241 always 0 0                                    ...
        multilabel *label249                                         ...
  529:  set :displayBaseMap:cfg "A©JNJP-unloader6"                   ...
  530:  setaddr *tmp397 *label250                                    ...
  531:  jump *label241 always 0 0                                    ...
        multilabel *label250                                         ...
  532:  set :displayBaseMap:cfg "A{HNJQ-inverted-sorter7"            ...
  533:  setaddr *tmp397 *label251                                    ...
  534:  jump *label241 always 0 0                                    ...
        multilabel *label251                                         ...
  535:  set :displayBaseMap:cfg "A~JPJR-overflow-gate8"              ...
  536:  setaddr *tmp397 *label252                                    ...
  537:  jump *label241 always 0 0                                    ...
        multilabel *label252                                         ...
  538:  set :displayBaseMap:cfg "AÕFFJS-micro-processor9"            ...
  539:  setaddr *tmp397 *label253                                    ...
  540:  jump *label241 always 0 0                                    ...
        multilabel *label253                                         ...
  541:  set :displayBaseMap:cfg "AFHJT-power-node10"                ...
  542:  setaddr *tmp397 *label254                                    ...
  543:  jump *label241 always 0 0                                    ...
        multilabel *label254                                         ...
  544:  set :displayBaseMap:cfg "A©FJJU-unloader11"                  ...
  545:  setaddr *tmp397 *label255                                    ...
  546:  jump *label241 always 0 0                                    ...
        multilabel *label255                                         ...
  547:  set :displayBaseMap:cfg "A~DJJV-overflow-gate12"             ...
  548:  setaddr *tmp397 *label256                                    ...
  549:  jump *label241 always 0 0                                    ...
        multilabel *label256                                         ...
  550:  set :displayBaseMap:cfg "A¾BFLW-air-factory13"               ...
  551:  setaddr *tmp397 *label257                                    ...
  552:  jump *label241 always 0 0                                    ...
        multilabel *label257                                         ...
  553:  set :displayBaseMap:cfg "A©NHJX-unloader14"                  ...
  554:  setaddr *tmp397 *label258                                    ...
  555:  jump *label241 always 0 0                                    ...
        multilabel *label258                                         ...
  556:  set :displayBaseMap:cfg "A{NJJY-inverted-sorter15"           ...
  557:  setaddr *tmp397 *label259                                    ...
  558:  jump *label241 always 0 0                                    ...
        multilabel *label259                                         ...
  559:  set :displayBaseMap:cfg "ANOMJZ-kiln16"                      ...
  560:  setaddr *tmp397 *label260                                    ...
  561:  jump *label241 always 0 0                                    ...
        multilabel *label260                                         ...
  562:  set :displayBaseMap:cfg "A¡AOJ[-water-extractor17"           ...
  563:  setaddr *tmp397 *label261                                    ...
  564:  jump *label241 always 0 0                                    ...
        multilabel *label261                                         ...
  565:  set :displayBaseMap:cfg "AAKJ\-steam-generator18"           ...
  566:  setaddr *tmp397 *label262                                    ...
  567:  jump *label241 always 0 0                                    ...
        multilabel *label262                                         ...
  568:  set :displayBaseMap:cfg "AKFRJ]-multi-press19"               ...
  569:  setaddr *tmp397 *label263                                    ...
  570:  jump *label241 always 0 0                                    ...
        multilabel *label263                                         ...
  571:  set :displayBaseMap:cfg "A©HFJ^-unloader20"                  ...
  572:  setaddr *tmp397 *label264                                    ...
  573:  jump *label241 always 0 0                                    ...
        multilabel *label264                                         ...
  574:  set :displayBaseMap:cfg "A{HDJ_-inverted-sorter21"           ...
  575:  setaddr *tmp397 *label265                                    ...
  576:  jump *label241 always 0 0                                    ...
        multilabel *label265                                         ...
  577:  set :displayBaseMap:cfg "AÀF@L`-additive-reconstructor22"    ...
  578:  setaddr *tmp397 *label266                                    ...
  579:  jump *label241 always 0 0                                    ...
        multilabel *label266                                         ...
  580:  set :displayBaseMap:cfg "ALSIJa-silicon-smelter23"           ...
  581:  setaddr *tmp397 *label267                                    ...
  582:  jump *label241 always 0 0                                    ...
        multilabel *label267                                         ...
  583:  set :displayBaseMap:cfg "A{PJJb-inverted-sorter24"           ...
  584:  setaddr *tmp397 *label268                                    ...
  585:  jump *label241 always 0 0                                    ...
        multilabel *label268                                         ...
  586:  set :displayBaseMap:cfg "A{PHJc-inverted-sorter25"           ...
  587:  setaddr *tmp397 *label269                                    ...
  588:  jump *label241 always 0 0                                    ...
        multilabel *label269                                         ...
  589:  set :displayBaseMap:cfg "A©JFJd-unloader26"                  ...
  590:  setaddr *tmp397 *label270                                    ...
  591:  jump *label241 always 0 0                                    ...
        multilabel *label270                                         ...
  592:  set :displayBaseMap:cfg "A{JDJe-inverted-sorter27"           ...
  593:  setaddr *tmp397 *label271                                    ...
  594:  jump *label241 always 0 0                                    ...
        multilabel *label271                                         ...
  595:  set :displayBaseMap:cfg "AÁPBJf-multiplicative-reconstructor ...
  596:  setaddr *tmp397 *label272                                    ...
        label *label241                                              ...
  597:  read *tmp451 :displayBaseMap:cfg 1                           Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  598:  op sub *tmp452 *tmp451 74                                    ...
  599:  lookup block :unpackCfg:type *tmp452                         ...
  600:  read *tmp455 :displayBaseMap:cfg 2                           Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  601:  op sub *tmp456 *tmp455 74                                    ...
  602:  op div :unpackCfg:x *tmp456 2                                ...
  603:  read *tmp459 :displayBaseMap:cfg 3                           Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  604:  op sub *tmp460 *tmp459 74                                    ...
  605:  op div :unpackCfg:y *tmp460 2                                ...
  606:  read *tmp463 :displayBaseMap:cfg 4                           Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  607:  op sub :unpackCfg:rotation *tmp463 74                        ...
  608:  read *tmp466 :displayBaseMap:cfg 5                           Common.mnd: ind = char(cfg, index++) - _Common_offset;
  609:  op sub :unpackCfg:ind *tmp466 74                             ...
  610:  sensor :unpackCfg:size :unpackCfg:type @size                 Common.mnd: size = type.@size;
  611:  op or *tmp476 :unpackCfg:x :unpackCfg:y                      Display.mnd: if x | y then
  612:  jump *label370 equal *tmp476 false                           ...
  613:  op shl *tmp478 1 :unpackCfg:ind                              Display.mnd: if blocksBuilt & (1 << index) then
  614:  op and *tmp479 .blocksBuilt *tmp478                          ...
  615:  jump *label368 equal *tmp479 false                           ...
  616:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  617:  jump *label369 always 0 0                                    Display.mnd: if blocksBuilt & (1 << index) then
        label *label368                                              ...
  618:  draw color 128 255 128 128 0 0                               Display.mnd: color(128, 255, 128, 128);
        label *label369                                              Display.mnd: if blocksBuilt & (1 << index) then
  619:  op mul *tmp481 2 :unpackCfg:x                                Display.mnd: image(2 * x, 2 * y, type, 2 * size, 90 * rotation);
  620:  op mul *tmp482 2 :unpackCfg:y                                ...
  621:  op mul *tmp483 2 :unpackCfg:size                             ...
  622:  op mul *tmp484 90 :unpackCfg:rotation                        ...
  623:  draw image *tmp481 *tmp482 :unpackCfg:type *tmp483 *tmp484 0 ...
        label *label370                                              Display.mnd: if x | y then
  624:  set :displayBaseMap:i .recentBuildIndex                      Display.mnd: var i = recentBuildIndex;
  625:  jump *label274 lessThan :displayBaseMap:i 0                  Display.mnd: if i >= 0 then
  626:  set .recentBuildIndex -1                                     Display.mnd: recentBuildIndex = -1;
  627:  op mul *tmp888 :displayBaseMap:i 2                           Display.mnd: drawBlock(BLOCKS[i]);
  628:  multijump *label448 *tmp888 0                                ...
        multilabel *label448                                         ...
  629:  set :drawBlock:cfg "AJEMJJ-graphite-press0"                  ...
  630:  jump *label447 always 0 0                                    ...
        multilabel *label449                                         ...
  631:  set :drawBlock:cfg "AJTJK-battery1"                         ...
  632:  jump *label447 always 0 0                                    ...
        multilabel *label450                                         ...
  633:  set :drawBlock:cfg "ALTJL-battery2"                         ...
  634:  jump *label447 always 0 0                                    ...
        multilabel *label451                                         ...
  635:  set :drawBlock:cfg "AJRJM-combustion-generator3"            ...
  636:  jump *label447 always 0 0                                    ...
        multilabel *label452                                         ...
  637:  set :drawBlock:cfg "ALMQJN-silicon-smelter4"                 ...
  638:  jump *label447 always 0 0                                    ...
        multilabel *label453                                         ...
  639:  set :drawBlock:cfg "A{LNJO-inverted-sorter5"                 ...
  640:  jump *label447 always 0 0                                    ...
        multilabel *label454                                         ...
  641:  set :drawBlock:cfg "A©JNJP-unloader6"                        ...
  642:  jump *label447 always 0 0                                    ...
        multilabel *label455                                         ...
  643:  set :drawBlock:cfg "A{HNJQ-inverted-sorter7"                 ...
  644:  jump *label447 always 0 0                                    ...
        multilabel *label456                                         ...
  645:  set :drawBlock:cfg "A~JPJR-overflow-gate8"                   ...
  646:  jump *label447 always 0 0                                    ...
        multilabel *label457                                         ...
  647:  set :drawBlock:cfg "AÕFFJS-micro-processor9"                 ...
  648:  jump *label447 always 0 0                                    ...
        multilabel *label458                                         ...
  649:  set :drawBlock:cfg "AFHJT-power-node10"                     ...
  650:  jump *label447 always 0 0                                    ...
        multilabel *label459                                         ...
  651:  set :drawBlock:cfg "A©FJJU-unloader11"                       ...
  652:  jump *label447 always 0 0                                    ...
        multilabel *label460                                         ...
  653:  set :drawBlock:cfg "A~DJJV-overflow-gate12"                  ...
  654:  jump *label447 always 0 0                                    ...
        multilabel *label461                                         ...
  655:  set :drawBlock:cfg "A¾BFLW-air-factory13"                    ...
  656:  jump *label447 always 0 0                                    ...
        multilabel *label462                                         ...
  657:  set :drawBlock:cfg "A©NHJX-unloader14"                       ...
  658:  jump *label447 always 0 0                                    ...
        multilabel *label463                                         ...
  659:  set :drawBlock:cfg "A{NJJY-inverted-sorter15"                ...
  660:  jump *label447 always 0 0                                    ...
        multilabel *label464                                         ...
  661:  set :drawBlock:cfg "ANOMJZ-kiln16"                           ...
  662:  jump *label447 always 0 0                                    ...
        multilabel *label465                                         ...
  663:  set :drawBlock:cfg "A¡AOJ[-water-extractor17"                ...
  664:  jump *label447 always 0 0                                    ...
        multilabel *label466                                         ...
  665:  set :drawBlock:cfg "AAKJ\-steam-generator18"                ...
  666:  jump *label447 always 0 0                                    ...
        multilabel *label467                                         ...
  667:  set :drawBlock:cfg "AKFRJ]-multi-press19"                    ...
  668:  jump *label447 always 0 0                                    ...
        multilabel *label468                                         ...
  669:  set :drawBlock:cfg "A©HFJ^-unloader20"                       ...
  670:  jump *label447 always 0 0                                    ...
        multilabel *label469                                         ...
  671:  set :drawBlock:cfg "A{HDJ_-inverted-sorter21"                ...
  672:  jump *label447 always 0 0                                    ...
        multilabel *label470                                         ...
  673:  set :drawBlock:cfg "AÀF@L`-additive-reconstructor22"         ...
  674:  jump *label447 always 0 0                                    ...
        multilabel *label471                                         ...
  675:  set :drawBlock:cfg "ALSIJa-silicon-smelter23"                ...
  676:  jump *label447 always 0 0                                    ...
        multilabel *label472                                         ...
  677:  set :drawBlock:cfg "A{PJJb-inverted-sorter24"                ...
  678:  jump *label447 always 0 0                                    ...
        multilabel *label473                                         ...
  679:  set :drawBlock:cfg "A{PHJc-inverted-sorter25"                ...
  680:  jump *label447 always 0 0                                    ...
        multilabel *label474                                         ...
  681:  set :drawBlock:cfg "A©JFJd-unloader26"                       ...
  682:  jump *label447 always 0 0                                    ...
        multilabel *label475                                         ...
  683:  set :drawBlock:cfg "A{JDJe-inverted-sorter27"                ...
  684:  jump *label447 always 0 0                                    ...
        multilabel *label476                                         ...
  685:  set :drawBlock:cfg "AÁPBJf-multiplicative-reconstructor28"   ...
        label *label447                                              ...
  686:  read *tmp451 :drawBlock:cfg 1                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  687:  op sub *tmp452 *tmp451 74                                    ...
  688:  lookup block :unpackCfg:type *tmp452                         ...
  689:  read *tmp455 :drawBlock:cfg 2                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  690:  op sub *tmp456 *tmp455 74                                    ...
  691:  op div :unpackCfg:x *tmp456 2                                ...
  692:  read *tmp459 :drawBlock:cfg 3                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  693:  op sub *tmp460 *tmp459 74                                    ...
  694:  op div :unpackCfg:y *tmp460 2                                ...
  695:  read *tmp463 :drawBlock:cfg 4                                Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  696:  op sub :unpackCfg:rotation *tmp463 74                        ...
  697:  read *tmp466 :drawBlock:cfg 5                                Common.mnd: ind = char(cfg, index++) - _Common_offset;
  698:  op sub :unpackCfg:ind *tmp466 74                             ...
  699:  sensor :unpackCfg:size :unpackCfg:type @size                 Common.mnd: size = type.@size;
  700:  op or *tmp476 :unpackCfg:x :unpackCfg:y                      Display.mnd: if x | y then
  701:  jump *label378 equal *tmp476 false                           ...
  702:  op shl *tmp478 1 :unpackCfg:ind                              Display.mnd: if blocksBuilt & (1 << index) then
  703:  op and *tmp479 .blocksBuilt *tmp478                          ...
  704:  jump *label376 equal *tmp479 false                           ...
  705:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  706:  jump *label377 always 0 0                                    Display.mnd: if blocksBuilt & (1 << index) then
        label *label376                                              ...
  707:  draw color 128 255 128 128 0 0                               Display.mnd: color(128, 255, 128, 128);
        label *label377                                              Display.mnd: if blocksBuilt & (1 << index) then
  708:  op mul *tmp481 2 :unpackCfg:x                                Display.mnd: image(2 * x, 2 * y, type, 2 * size, 90 * rotation);
  709:  op mul *tmp482 2 :unpackCfg:y                                ...
  710:  op mul *tmp483 2 :unpackCfg:size                             ...
  711:  op mul *tmp484 90 :unpackCfg:rotation                        ...
  712:  draw image *tmp481 *tmp482 :unpackCfg:type *tmp483 *tmp484 0 ...
        label *label378                                              Display.mnd: if x | y then
        label *label274                                              Display.mnd: if i >= 0 then
  713:  sensor *tmp402 switch1 @enabled                              Display.mnd: if switch1.enabled then
  714:  jump *label277 equal *tmp402 false                           ...
  715:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  716:  jump *label243 always 0 0                                    Display.mnd: break;
        label *label277                                              Display.mnd: if switch1.enabled then
  717:  jump *label279 equal .pageSwitched false                     Display.mnd: if pageSwitched then
  718:  drawflush display1                                           Display.mnd: drawflush(display1);
        label *label279                                              Display.mnd: if pageSwitched then
  719:  multijump *tmp397 0 0                                        Display.mnd: for var cfg in BLOCKS do
        multilabel *label272                                         ...
        label *label243                                              ...
  720:  drawflush display1                                           Display.mnd: drawflush(display1);
  721:  jump *label237 always 0 0                                    Display.mnd: elsif page == 2 then
        label *label236                                              ...
  722:  op sub :displayLog:page .page 3                              Display.mnd: displayLog(page - 3);
  723:  set :displayLog:x 11                                         Display.mnd: var x = 3 + 8;
  724:  set :displayLog:y 163                                        Display.mnd: var y = 176 - 5 - 8;
  725:  read :displayLog:logPosition bank1 511                       Display.mnd: var logPosition = bank1[511];
  726:  op sub *tmp408 510 :displayLog:logPosition                   Display.mnd: var pages = max(1, (records - 1) \ 32 + 1);
  727:  op idiv *tmp409 *tmp408 32                                   ...
  728:  op add *tmp410 *tmp409 1                                     ...
  729:  op max :displayLog:pages 1 *tmp410                           ...
  730:  op add .numPages :displayLog:pages 3                         Display.mnd: numPages = pages + 3;
  731:  op mul *tmp413 32 :displayLog:page                           Display.mnd: var start = 511 - 32 * page;
  732:  op sub :displayLog:start 511 *tmp413                         ...
  733:  op sub *tmp415 :displayLog:start 32                          Display.mnd: var stop = max(logPosition, start - 32);
  734:  op max :displayLog:stop :displayLog:logPosition *tmp415      ...
  735:  draw col %[lightgray] 0 0 0 0 0                              Display.mnd: col(%[lightgray]);
  736:  op sub *tmp417 .page 2                                       Display.mnd: print(page + 1, "/");
  737:  print *tmp417                                                ...
  738:  print "/"                                                    ...
  739:  print :displayLog:pages                                      Display.mnd: print(text);
  740:  draw print 172 4 @bottomRight                                Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  741:  draw col %[white] 0 0 0 0 0                                  Display.mnd: col(%[white]);
  742:  op sub :displayLog:position :displayLog:start 1              Display.mnd: for var position in stop ... start descending do
  743:  jump *label286 lessThan :displayLog:position :displayLog:sto ...
        label *label327                                              ...
  744:  read :displayLog:record bank1 :displayLog:position           Display.mnd: var record = bank1[position];
  745:  op mod :displayRecord:id :displayLog:record 1000             Display.mnd: var id = record % 1000;
  746:  lookup block *tmp423 :displayRecord:id                       Display.mnd: var icon = id > @blockCount ? lookup(:unit, id - @blockCount) : lookup(:block, id);
  747:  jump *label289 lessThanEq :displayRecord:id @blockCount      ...
  748:  op sub *tmp424 :displayRecord:id @blockCount                 ...
  749:  lookup unit *tmp423 *tmp424                                  ...
        label *label289                                              ...
  750:  op div *tmp427 :displayLog:record 1000                       Display.mnd: var t = floor(record / 1000 / 120);
  751:  op idiv :displayRecord:t *tmp427 120                         ...
  752:  op idiv :displayRecord:m :displayRecord:t 60                 Display.mnd: var m = t \ 60;
  753:  op mod :displayRecord:s :displayRecord:t 60                  Display.mnd: var s = t % 60;
  754:  select *tmp433 lessThan :displayRecord:s 10 "0" ""           Display.mnd: print(m, ":", s < 10 ? "0" : "");
  755:  print :displayRecord:m                                       ...
  756:  print ":"                                                    ...
  757:  print *tmp433                                                ...
  758:  draw image :displayLog:x :displayLog:y *tmp423 14 0 0        Display.mnd: image(x, y, image, 14, 0);
  759:  op add *tmp435 :displayLog:x 44                              Display.mnd: drawText(x + 56 - 12, y + 2, @right, text);
  760:  op add *tmp436 :displayLog:y 2                               ...
  761:  print :displayRecord:s                                       Display.mnd: print(text);
  762:  draw print *tmp435 *tmp436 @right                            Display.mnd: mlogText("draw", "print", in x, in y, in alignment);
  763:  op sub :displayLog:y :displayLog:y 15                        Display.mnd: y -= 15;
  764:  jump *label295 greaterThanEq :displayLog:y 10                Display.mnd: if y < 10 then
  765:  op add :displayLog:x :displayLog:x 58                        Display.mnd: x += 58;
  766:  set :displayLog:y 164                                        Display.mnd: y = 176 - 4 - 8;
        label *label295                                              Display.mnd: if y < 10 then
  767:  drawflush display1                                           Display.mnd: drawflush(display1);
  768:  sensor *tmp439 switch1 @enabled                              Display.mnd: if switch1.enabled then break; end;
  769:  jump *label286 notEqual *tmp439 false                        ...
  770:  op sub :displayLog:position :displayLog:position 1           Display.mnd: for var position in stop ... start descending do
  771:  jump *label327 greaterThanEq :displayLog:position :displayLo ...
        label *label286                                              ...
  772:  drawflush display1                                           Display.mnd: drawflush(display1);
        label *label237                                              Display.mnd: elsif page == 2 then
        label *label204                                              Display.mnd: elsif page == 1 then
        label *label20                                               Display.mnd: if page == 0 then
  773:  jump *label299 lessThanEq .megas 0                           Display.mnd: if megas > 0 then
  774:  print "[gold]All done.[]\nNothing more to see here.\nGo home Display.mnd: println("[gold]All done.[]\nNothing more to see here.\nGo home.");
  775:  printflush message1                                          Display.mnd: printflush(message1);
  776:  jump *label300 always 0 0                                    Display.mnd: if megas > 0 then
        label *label299                                              ...
  777:  print "[gold]Building {0}\n================================= Display.mnd: println($"[gold]Building $nextBlock");
  778:  format .nextBlock                                            ...
  779:  format .status1                                              Display.mnd: println(status1);
  780:  format .status2                                              Display.mnd: println($"$status2$item2 ($block2)");
  781:  format .item2                                                ...
  782:  format .block2                                               ...
  783:  format .status3                                              Display.mnd: println(status3);
  784:  printflush message1                                          Display.mnd: printflush(message1);
        label *label300                                              Display.mnd: if megas > 0 then
  785:  sensor .pageSwitched switch1 @enabled                        Display.mnd: pageSwitched = switch1.enabled;
  786:  jump *label14 equal .pageSwitched false                      Display.mnd: if pageSwitched then
  787:  control enabled switch1 false 0 0 0                          Display.mnd: switch1.enabled = false;
  788:  op add *tmp448 .page 1                                       Display.mnd: page = (page + 1) % numPages;
  789:  op mod .page *tmp448 .numPages                               ...
  790:  drawflush null                                               Display.mnd: drawflush(null);
  791:  draw reset 0 0 0 0 0 0                                       Display.mnd: reset();
  792:  draw clear 0 0 32 0 0 0                                      Display.mnd: clear(0, 0, 32);
  793:  jump *label14 always 0 0                                     Display.mnd: while true do


Performance: parsed in 915 ms, compiled in 1,004 ms, optimized in 3,018 ms, run in 12 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: success.

Program output (1 steps):
The program didn't generate any output.
Execution exception at instruction 0: read *tmp40 processor3 "*signature":
Variable 'processor3' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
