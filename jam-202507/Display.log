   459 instructions before optimizations.
    34 instructions eliminated by Temp Variables Elimination (2 iterations).
    18 instructions eliminated by Dead Code Elimination (5 iterations).
     3 instructions eliminated by Jump Normalization (2 passes, 5 iterations).
    12 instructions eliminated by Jump Optimization (5 iterations).
    13 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
     2 instructions modified by Expression Optimization (3 iterations).
     2 instructions modified by If Expression Optimization (3 iterations).
   220 instructions eliminated by Data Flow Optimization (3 passes, 14 iterations).
   148 instructions added by Loop Unrolling (4 iterations).
     1 loops unrolled by Loop Unrolling.
     5 instructions eliminated by Jump Straightening (5 iterations).
     3 instructions eliminated by Unreachable Code Elimination (2 iterations).
    10 instructions eliminated by Print Merging.
   289 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 815):
  * Unroll iteration loop at line 94:5                           size  +163, benefit      725.0, efficiency      4.448 (+134 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-16 instructions):
 
   214 jump *label44 equal *tmp38 false
   215 set :drawMaterials:col 0
   216 op sub :drawMaterials:y :drawMaterials:y 15
-    * set *tmp39 :drawMaterials:y
   217 jump *label45 always
   218 label *label44
-    * set *tmp39 null
   219 label *label45
   220 label *label38
   221 op sub :drawMaterials:count :drawMaterials:count 1
 
   227 label *label46
   228 set *tmp41 null
   229 label *label47
-    * set *tmp16 *tmp41
   230 jump *label37 always
   231 label *label36
-    * set *tmp16 null
   232 label *label37
   233 label *label28
   234 multijump *tmp14 0 0 (m:marker0)
 
   339 jump *label63 equal *tmp65 false
   340 set :drawUnit.1:col 0
   341 op sub :drawUnit:y :drawUnit:y 15
-    * set *tmp66 :drawUnit:y
   342 jump *label64 always
   343 label *label63
-    * set *tmp66 null
   344 label *label64
   345 label *label57
   346 label *label56
-    * set *tmp44 null
   347 jump *label55 always
   348 label *label54
   349 sensor *tmp67 @unit @firstItem
 
   423 jump *label72 equal *tmp91 false
   424 set :drawUnit.2:col 0
   425 op sub :drawUnit:y :drawUnit:y 15
-    * set *tmp92 :drawUnit:y
   426 jump *label73 always
   427 label *label72
-    * set *tmp92 null
   428 label *label73
   429 label *label66
   430 label *label65
-    * set *tmp44 null
   431 label *label55
   432 label *label48
   433 set :drawUnits:x 10
 
   451 label *label79
   452 label *label78
   453 op add :drawUnits:x :drawUnits:x 30
-    * set *tmp94 :drawUnits:x
   454 jump *label77 always
   455 label *label76
-    * set *tmp94 null
   456 label *label77
   457 label *label75
   458 set :drawUnitCount.1:type @mono
 
   474 label *label84
   475 label *label83
   476 op add :drawUnits:x :drawUnits:x 30
-    * set *tmp97 :drawUnits:x
   477 jump *label82 always
   478 label *label81
-    * set *tmp97 null
   479 label *label82
   480 label *label80
   481 set :drawUnitCount.2:type @poly
 
   497 label *label89
   498 label *label88
   499 op add :drawUnits:x :drawUnits:x 30
-    * set *tmp100 :drawUnits:x
   500 jump *label87 always
   501 label *label86
-    * set *tmp100 null
   502 label *label87
   503 label *label85
   504 label *label74

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-2 instructions):
 
   222 op lessThanEq *tmp40 :drawMaterials:count 0
   223 jump *label46 equal *tmp40 false
   224 jump *label29 always
-    * set *tmp41 null
   225 jump *label47 always
   226 label *label46
-    * set *tmp41 null
   227 label *label47
   228 jump *label37 always
   229 label *label36

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-34 instructions):
 
     2 label *label0
     3 label *label2
     4 ubind @poly
-    * ulocate building core false @copper *tmp1 *tmp2 *tmp3 *tmp0
-    * set .core *tmp0
+    5 ulocate building core false @copper 0 0 0 .core
     6 label *label3
     7 op equal *tmp4 .core null
     8 jump *label2 notEqual *tmp4 false
 
    29 draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
    30 label *label12
    31 label *label11
-    * op add *tmp5 :drawBold:x 1
-    * set :drawText.1:x *tmp5
+   32 op add :drawText.1:x :drawBold:x 1
    33 set :drawText.1:y :drawBold:y
    34 set :drawText.1:alignment :drawBold:alignment
    35 set :drawText.1:text :drawBold:text
 
    43 label *label10
    44 draw col %[white]
    45 draw image 40 137 .nextBlock 32 0
-    * op floor *tmp6 @second
-    * set :drawHeader:t *tmp6
-    * op idiv *tmp7 :drawHeader:t 60
-    * set :drawHeader:m *tmp7
-    * op mod *tmp8 :drawHeader:t 60
-    * set :drawHeader:s *tmp8
+   46 op floor :drawHeader:t @second
+   47 op idiv :drawHeader:m :drawHeader:t 60
+   48 op mod :drawHeader:s :drawHeader:t 60
    49 op lessThan *tmp9 :drawHeader:s 10
    50 jump *label15 equal *tmp9 false
    51 set *tmp10 "0"
 
    84 draw print :drawPrint.3:x :drawPrint.3:y :drawPrint.3:alignment
    85 label *label22
    86 label *label21
-    * op add *tmp11 :drawBold.1:x 1
-    * set :drawText.4:x *tmp11
+   87 op add :drawText.4:x :drawBold.1:x 1
    88 set :drawText.4:y :drawBold.1:y
    89 set :drawText.4:alignment :drawBold.1:alignment
    90 set :drawText.4:text :drawBold.1:text
 
   146 set :drawItem:count :drawMaterials:target
   147 op mul *tmp18 :drawItem:columns 176
   148 op div *tmp19 *tmp18 2
-    * op sub *tmp20 210 *tmp19
-    * set :drawItem:barLength *tmp20
-    * op add *tmp21 48 :drawItem:barLength
-    * set :drawItem:textEnd *tmp21
+  149 op sub :drawItem:barLength 210 *tmp19
+  150 op add :drawItem:textEnd 48 :drawItem:barLength
   151 op mul *tmp22 :drawItem:barLength :drawItem:current
   152 op div *tmp23 *tmp22 :drawItem:target
-    * op min *tmp24 :drawItem:barLength *tmp23
-    * set :drawItem:length *tmp24
+  153 op min :drawItem:length :drawItem:barLength *tmp23
   154 op mul *tmp25 :drawMaterials:col 176
   155 op div *tmp26 *tmp25 2
-    * op add *tmp27 11 *tmp26
-    * set :drawItem:iconX *tmp27
+  156 op add :drawItem:iconX 11 *tmp26
   157 op mul *tmp28 :drawMaterials:col 176
   158 op div *tmp29 *tmp28 2
-    * op add *tmp30 22 *tmp29
-    * set :drawItem:barX *tmp30
+  159 op add :drawItem:barX 22 *tmp29
   160 op mul *tmp31 :drawMaterials:col 176
   161 op div *tmp32 *tmp31 2
-    * op add *tmp33 :drawItem:textEnd *tmp32
-    * set :drawItem:textX *tmp33
+  162 op add :drawItem:textX :drawItem:textEnd *tmp32
   163 draw col %[white]
   164 op add *tmp34 :drawMaterials:y 5
   165 draw image :drawItem:iconX *tmp34 :drawItem:item 16 0
 
   184 draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
   185 label *label41
   186 label *label40
-    * op add *tmp37 :drawBold.2:x 1
-    * set :drawText.6:x *tmp37
+  187 op add :drawText.6:x :drawBold.2:x 1
   188 set :drawText.6:y :drawBold.2:y
   189 set :drawText.6:alignment :drawBold.2:alignment
   190 set :drawText.6:text :drawBold.2:text
 
   236 draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
   237 label *label51
   238 label *label50
-    * op add *tmp42 :drawBold.3:x 1
-    * set :drawText.8:x *tmp42
+  239 op add :drawText.8:x :drawBold.3:x 1
   240 set :drawText.8:y :drawBold.3:y
   241 set :drawText.8:alignment :drawBold.3:alignment
   242 set :drawText.8:text :drawBold.3:text
 
   261 set :drawItem.1:count .transportTarget
   262 op mul *tmp45 :drawItem.1:columns 176
   263 op div *tmp46 *tmp45 2
-    * op sub *tmp47 210 *tmp46
-    * set :drawItem.1:barLength *tmp47
-    * op add *tmp48 48 :drawItem.1:barLength
-    * set :drawItem.1:textEnd *tmp48
+  264 op sub :drawItem.1:barLength 210 *tmp46
+  265 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
   266 op mul *tmp49 :drawItem.1:barLength :drawItem.1:current
   267 op div *tmp50 *tmp49 :drawItem.1:target
-    * op min *tmp51 :drawItem.1:barLength *tmp50
-    * set :drawItem.1:length *tmp51
+  268 op min :drawItem.1:length :drawItem.1:barLength *tmp50
   269 op mul *tmp52 :drawUnit.1:col 176
   270 op div *tmp53 *tmp52 2
-    * op add *tmp54 11 *tmp53
-    * set :drawItem.1:iconX *tmp54
+  271 op add :drawItem.1:iconX 11 *tmp53
   272 op mul *tmp55 :drawUnit.1:col 176
   273 op div *tmp56 *tmp55 2
-    * op add *tmp57 22 *tmp56
-    * set :drawItem.1:barX *tmp57
+  274 op add :drawItem.1:barX 22 *tmp56
   275 op mul *tmp58 :drawUnit.1:col 176
   276 op div *tmp59 *tmp58 2
-    * op add *tmp60 :drawItem.1:textEnd *tmp59
-    * set :drawItem.1:textX *tmp60
+  277 op add :drawItem.1:textX :drawItem.1:textEnd *tmp59
   278 draw col %[white]
   279 op add *tmp61 :drawUnit:y 5
   280 draw image :drawItem.1:iconX *tmp61 :drawItem.1:item 16 0
 
   299 draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
   300 label *label60
   301 label *label59
-    * op add *tmp64 :drawBold.4:x 1
-    * set :drawText.10:x *tmp64
+  302 op add :drawText.10:x :drawBold.4:x 1
   303 set :drawText.10:y :drawBold.4:y
   304 set :drawText.10:alignment :drawBold.4:alignment
   305 set :drawText.10:text :drawBold.4:text
 
   323 label *label56
   324 jump *label55 always
   325 label *label54
-    * sensor *tmp67 @unit @firstItem
-    * set :drawUnit:unitItem *tmp67
+  326 sensor :drawUnit:unitItem @unit @firstItem
   327 sensor *tmp68 @unit @totalItems
   328 op equal *tmp69 :drawUnit:unitItem .transportItem
   329 op mul *tmp70 *tmp68 *tmp69
 
   337 set :drawItem.2:count .transportTarget
   338 op mul *tmp71 :drawItem.2:columns 176
   339 op div *tmp72 *tmp71 2
-    * op sub *tmp73 210 *tmp72
-    * set :drawItem.2:barLength *tmp73
-    * op add *tmp74 48 :drawItem.2:barLength
-    * set :drawItem.2:textEnd *tmp74
+  340 op sub :drawItem.2:barLength 210 *tmp72
+  341 op add :drawItem.2:textEnd 48 :drawItem.2:barLength
   342 op mul *tmp75 :drawItem.2:barLength :drawItem.2:current
   343 op div *tmp76 *tmp75 :drawItem.2:target
-    * op min *tmp77 :drawItem.2:barLength *tmp76
-    * set :drawItem.2:length *tmp77
+  344 op min :drawItem.2:length :drawItem.2:barLength *tmp76
   345 op mul *tmp78 :drawUnit.2:col 176
   346 op div *tmp79 *tmp78 2
-    * op add *tmp80 11 *tmp79
-    * set :drawItem.2:iconX *tmp80
+  347 op add :drawItem.2:iconX 11 *tmp79
   348 op mul *tmp81 :drawUnit.2:col 176
   349 op div *tmp82 *tmp81 2
-    * op add *tmp83 22 *tmp82
-    * set :drawItem.2:barX *tmp83
+  350 op add :drawItem.2:barX 22 *tmp82
   351 op mul *tmp84 :drawUnit.2:col 176
   352 op div *tmp85 *tmp84 2
-    * op add *tmp86 :drawItem.2:textEnd *tmp85
-    * set :drawItem.2:textX *tmp86
+  353 op add :drawItem.2:textX :drawItem.2:textEnd *tmp85
   354 draw col %[white]
   355 op add *tmp87 :drawUnit:y 5
   356 draw image :drawItem.2:iconX *tmp87 :drawItem.2:item 16 0
 
   375 draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
   376 label *label69
   377 label *label68
-    * op add *tmp90 :drawBold.5:x 1
-    * set :drawText.12:x *tmp90
+  378 op add :drawText.12:x :drawBold.5:x 1
   379 set :drawText.12:y :drawBold.5:y
   380 set :drawText.12:alignment :drawBold.5:alignment
   381 set :drawText.12:text :drawBold.5:text
 
   407 jump *label76 equal *tmp93 false
   408 draw image :drawUnits:x 8 :drawUnitCount:type 12 0
   409 print "x"
-    * op add *tmp95 :drawUnits:x 7
-    * set :drawText.13:x *tmp95
+  410 op add :drawText.13:x :drawUnits:x 7
   411 set :drawText.13:y 10
   412 set :drawText.13:alignment @left
   413 set :drawText.13:text :drawUnitCount:count
 
   429 jump *label81 equal *tmp96 false
   430 draw image :drawUnits:x 8 :drawUnitCount.1:type 12 0
   431 print "x"
-    * op add *tmp98 :drawUnits:x 7
-    * set :drawText.14:x *tmp98
+  432 op add :drawText.14:x :drawUnits:x 7
   433 set :drawText.14:y 10
   434 set :drawText.14:alignment @left
   435 set :drawText.14:text :drawUnitCount.1:count
 
   451 jump *label86 equal *tmp99 false
   452 draw image :drawUnits:x 8 :drawUnitCount.2:type 12 0
   453 print "x"
-    * op add *tmp101 :drawUnits:x 7
-    * set :drawText.15:x *tmp101
+  454 op add :drawText.15:x :drawUnits:x 7
   455 set :drawText.15:y 10
   456 set :drawText.15:alignment @left
   457 set :drawText.15:text :drawUnitCount.2:count
 
   475 print "\n"
   476 print "==================================[]"
   477 print "\n"
-    * set *tmp102 .status1
-    * print *tmp102
+  478 print .status1
   479 print "\n"
   480 print .status2
   481 print .item2
 
   484 print .block2
   485 print ")"
   486 print "\n"
-    * set *tmp103 .status3
-    * print *tmp103
+  487 print .status3
   488 print "\n"
   489 printflush message1
   490 label *label90

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    10 printflush null
    11 drawflush null
    12 label *label5
-    * jump *label7 equal true false
    13 draw reset
    14 draw clear 0 0 32
    15 draw col %[gold]

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-12 instructions):
 
     4 ubind @poly
     5 ulocate building core false @copper 0 0 0 .core
     6 label *label3
-    * op equal *tmp4 .core null
-    * jump *label2 notEqual *tmp4 false
+    7 jump *label2 equal .core null
     8 label *label4
     9 printflush null
    10 drawflush null
 
    44 op floor :drawHeader:t @second
    45 op idiv :drawHeader:m :drawHeader:t 60
    46 op mod :drawHeader:s :drawHeader:t 60
-    * op lessThan *tmp9 :drawHeader:s 10
-    * jump *label15 equal *tmp9 false
+   47 jump *label15 greaterThanEq :drawHeader:s 10
    48 set *tmp10 "0"
    49 jump *label16 always
    50 label *label15
 
    96 set :drawMaterials:col 0
    97 set :drawMaterials:y 85
    98 set :drawMaterials:count .totalTargets
-    * op greaterThan *tmp12 :drawMaterials:count 2
-    * jump *label25 equal *tmp12 false
+   99 jump *label25 lessThanEq :drawMaterials:count 2
   100 set *tmp13 2
   101 jump *label26 always
   102 label *label25
 
   132 set :drawMaterials:target .metaglassTarget
   133 setaddr *tmp14 *label35
   134 label *label27
-    * op greaterThan *tmp15 :drawMaterials:target 0
-    * jump *label36 equal *tmp15 false
+  135 jump *label36 lessThanEq :drawMaterials:target 0
   136 sensor *tmp17 .core :drawMaterials:item
   137 set :drawItem:columns :drawMaterials:columns
   138 set :drawItem:item :drawMaterials:item
 
   192 label *label42
   193 label *label39
   194 op add :drawMaterials:col :drawMaterials:col 1
-    * op greaterThanEq *tmp38 :drawMaterials:col :drawItem:columns
-    * jump *label44 equal *tmp38 false
+  195 jump *label44 lessThan :drawMaterials:col :drawItem:columns
   196 set :drawMaterials:col 0
   197 op sub :drawMaterials:y :drawMaterials:y 15
   198 jump *label45 always
 
   200 label *label45
   201 label *label38
   202 op sub :drawMaterials:count :drawMaterials:count 1
-    * op lessThanEq *tmp40 :drawMaterials:count 0
-    * jump *label46 equal *tmp40 false
+  203 jump *label46 greaterThan :drawMaterials:count 0
   204 jump *label29 always
   205 jump *label47 always
   206 label *label46
 
   242 label *label52
   243 label *label49
   244 set :drawUnit:y 29
-    * op equal *tmp43 .transportItem null
-    * jump *label54 equal *tmp43 false
+  245 jump *label54 notEqual .transportItem null
   246 set :drawUnit.1:item @poly
   247 set :drawUnit.1:items 0
   248 set :drawUnit.1:col 0
 
   304 label *label61
   305 label *label58
   306 op add :drawUnit.1:col :drawUnit.1:col 1
-    * op greaterThanEq *tmp65 :drawUnit.1:col :drawItem.1:columns
-    * jump *label63 equal *tmp65 false
+  307 jump *label63 lessThan :drawUnit.1:col :drawItem.1:columns
   308 set :drawUnit.1:col 0
   309 op sub :drawUnit:y :drawUnit:y 15
   310 jump *label64 always
 
   379 label *label70
   380 label *label67
   381 op add :drawUnit.2:col :drawUnit.2:col 1
-    * op greaterThanEq *tmp91 :drawUnit.2:col :drawItem.2:columns
-    * jump *label72 equal *tmp91 false
+  382 jump *label72 lessThan :drawUnit.2:col :drawItem.2:columns
   383 set :drawUnit.2:col 0
   384 op sub :drawUnit:y :drawUnit:y 15
   385 jump *label73 always
 
   393 draw col %[white]
   394 set :drawUnitCount:type @flare
   395 set :drawUnitCount:count .flares
-    * op greaterThan *tmp93 :drawUnitCount:count 0
-    * jump *label76 equal *tmp93 false
+  396 jump *label76 lessThanEq :drawUnitCount:count 0
   397 draw image :drawUnits:x 8 :drawUnitCount:type 12 0
   398 print "x"
   399 op add :drawText.13:x :drawUnits:x 7
 
   414 label *label75
   415 set :drawUnitCount.1:type @mono
   416 set :drawUnitCount.1:count .monos
-    * op greaterThan *tmp96 :drawUnitCount.1:count 0
-    * jump *label81 equal *tmp96 false
+  417 jump *label81 lessThanEq :drawUnitCount.1:count 0
   418 draw image :drawUnits:x 8 :drawUnitCount.1:type 12 0
   419 print "x"
   420 op add :drawText.14:x :drawUnits:x 7
 
   435 label *label80
   436 set :drawUnitCount.2:type @poly
   437 set :drawUnitCount.2:count .polys
-    * op greaterThan *tmp99 :drawUnitCount.2:count 0
-    * jump *label86 equal *tmp99 false
+  438 jump *label86 lessThanEq :drawUnitCount.2:count 0
   439 draw image :drawUnits:x 8 :drawUnitCount.2:type 12 0
   440 print "x"
   441 op add :drawText.15:x :drawUnits:x 7

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-8 instructions):
 
   195 jump *label44 lessThan :drawMaterials:col :drawItem:columns
   196 set :drawMaterials:col 0
   197 op sub :drawMaterials:y :drawMaterials:y 15
-    * jump *label45 always
   198 label *label44
   199 label *label45
   200 label *label38
   201 op sub :drawMaterials:count :drawMaterials:count 1
   202 jump *label46 greaterThan :drawMaterials:count 0
   203 jump *label29 always
-    * jump *label47 always
   204 label *label46
   205 label *label47
-    * jump *label37 always
   206 label *label36
   207 label *label37
   208 label *label28
 
   304 jump *label63 lessThan :drawUnit.1:col :drawItem.1:columns
   305 set :drawUnit.1:col 0
   306 op sub :drawUnit:y :drawUnit:y 15
-    * jump *label64 always
   307 label *label63
   308 label *label64
   309 label *label57
 
   378 jump *label72 lessThan :drawUnit.2:col :drawItem.2:columns
   379 set :drawUnit.2:col 0
   380 op sub :drawUnit:y :drawUnit:y 15
-    * jump *label73 always
   381 label *label72
   382 label *label73
   383 label *label66
 
   403 label *label79
   404 label *label78
   405 op add :drawUnits:x :drawUnits:x 30
-    * jump *label77 always
   406 label *label76
   407 label *label77
   408 label *label75
 
   423 label *label84
   424 label *label83
   425 op add :drawUnits:x :drawUnits:x 30
-    * jump *label82 always
   426 label *label81
   427 label *label82
   428 label *label80
 
   443 label *label89
   444 label *label88
   445 op add :drawUnits:x :drawUnits:x 30
-    * jump *label87 always
   446 label *label86
   447 label *label87
   448 label *label85

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-3 instructions):
 
    16 set :drawBold:y 161
    17 set :drawBold:alignment @bottom
    18 set :drawBold:text "Building"
-    * set :drawText:x :drawBold:x
-    * set :drawText:y :drawBold:y
-    * set :drawText:alignment :drawBold:alignment
-    * set :drawText:text :drawBold:text
-    * print :drawText:text
-    * set :drawPrint:x :drawText:x
-    * set :drawPrint:y :drawText:y
-    * set :drawPrint:alignment :drawText:alignment
-    * draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
+   19 set :drawText:x 40
+   20 set :drawText:y 161
+   21 set :drawText:alignment @bottom
+   22 set :drawText:text "Building"
+   23 print :drawBold:text
+   24 set :drawPrint:x :drawBold:x
+   25 set :drawPrint:y :drawBold:y
+   26 set :drawPrint:alignment :drawBold:alignment
+   27 draw print :drawText:x :drawText:y :drawText:alignment
    28 label *label12
    29 label *label11
-    * op add :drawText.1:x :drawBold:x 1
-    * set :drawText.1:y :drawBold:y
-    * set :drawText.1:alignment :drawBold:alignment
-    * set :drawText.1:text :drawBold:text
-    * print :drawText.1:text
-    * set :drawPrint.1:x :drawText.1:x
-    * set :drawPrint.1:y :drawText.1:y
-    * set :drawPrint.1:alignment :drawText.1:alignment
-    * draw print :drawPrint.1:x :drawPrint.1:y :drawPrint.1:alignment
+   30 op add :drawText.1:x 40 1
+   31 set :drawText.1:y 161
+   32 set :drawText.1:alignment @bottom
+   33 set :drawText.1:text "Building"
+   34 print :drawBold:text
+   35 set :drawPrint.1:x 41
+   36 set :drawPrint.1:y :drawBold:y
+   37 set :drawPrint.1:alignment :drawBold:alignment
+   38 draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
    39 label *label14
    40 label *label13
    41 label *label10
 
    58 set :drawText.2:y 172
    59 set :drawText.2:alignment @topRight
    60 set :drawText.2:text ""
-    * print :drawText.2:text
-    * set :drawPrint.2:x :drawText.2:x
-    * set :drawPrint.2:y :drawText.2:y
-    * set :drawPrint.2:alignment :drawText.2:alignment
-    * draw print :drawPrint.2:x :drawPrint.2:y :drawPrint.2:alignment
+   61 print ""
+   62 set :drawPrint.2:x 168
+   63 set :drawPrint.2:y 172
+   64 set :drawPrint.2:alignment @topRight
+   65 draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
    66 label *label18
    67 label *label17
    68 label *label9
 
    70 set :drawBold.1:y 101
    71 set :drawBold.1:alignment @bottomLeft
    72 set :drawBold.1:text "Materials"
-    * set :drawText.3:x :drawBold.1:x
-    * set :drawText.3:y :drawBold.1:y
-    * set :drawText.3:alignment :drawBold.1:alignment
-    * set :drawText.3:text :drawBold.1:text
-    * print :drawText.3:text
-    * set :drawPrint.3:x :drawText.3:x
-    * set :drawPrint.3:y :drawText.3:y
-    * set :drawPrint.3:alignment :drawText.3:alignment
-    * draw print :drawPrint.3:x :drawPrint.3:y :drawPrint.3:alignment
+   73 set :drawText.3:x 22
+   74 set :drawText.3:y 101
+   75 set :drawText.3:alignment @bottomLeft
+   76 set :drawText.3:text "Materials"
+   77 print :drawBold.1:text
+   78 set :drawPrint.3:x :drawBold.1:x
+   79 set :drawPrint.3:y :drawBold.1:y
+   80 set :drawPrint.3:alignment :drawBold.1:alignment
+   81 draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
    82 label *label22
    83 label *label21
-    * op add :drawText.4:x :drawBold.1:x 1
-    * set :drawText.4:y :drawBold.1:y
-    * set :drawText.4:alignment :drawBold.1:alignment
-    * set :drawText.4:text :drawBold.1:text
-    * print :drawText.4:text
-    * set :drawPrint.4:x :drawText.4:x
-    * set :drawPrint.4:y :drawText.4:y
-    * set :drawPrint.4:alignment :drawText.4:alignment
-    * draw print :drawPrint.4:x :drawPrint.4:y :drawPrint.4:alignment
+   84 op add :drawText.4:x 22 1
+   85 set :drawText.4:y 101
+   86 set :drawText.4:alignment @bottomLeft
+   87 set :drawText.4:text "Materials"
+   88 print :drawBold.1:text
+   89 set :drawPrint.4:x 23
+   90 set :drawPrint.4:y :drawBold.1:y
+   91 set :drawPrint.4:alignment :drawBold.1:alignment
+   92 draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
    93 label *label24
    94 label *label23
    95 label *label20
 
   134 label *label27
   135 jump *label36 lessThanEq :drawMaterials:target 0
   136 sensor *tmp17 .core :drawMaterials:item
-    * set :drawItem:columns :drawMaterials:columns
+  137 set :drawItem:columns *tmp13
   138 set :drawItem:item :drawMaterials:item
   139 set :drawItem:current *tmp17
   140 set :drawItem:target :drawMaterials:target
   141 set :drawItem:count :drawMaterials:target
-    * op mul *tmp18 :drawItem:columns 176
-    * op div *tmp19 *tmp18 2
+  142 op mul *tmp18 :drawMaterials:columns 176
+  143 op mul *tmp19 :drawItem:columns 88
   144 op sub :drawItem:barLength 210 *tmp19
   145 op add :drawItem:textEnd 48 :drawItem:barLength
-    * op mul *tmp22 :drawItem:barLength :drawItem:current
-    * op div *tmp23 *tmp22 :drawItem:target
+  146 op mul *tmp22 :drawItem:barLength *tmp17
+  147 op div *tmp23 *tmp22 :drawMaterials:target
   148 op min :drawItem:length :drawItem:barLength *tmp23
   149 op mul *tmp25 :drawMaterials:col 176
-    * op div *tmp26 *tmp25 2
+  150 op mul *tmp26 :drawMaterials:col 88
   151 op add :drawItem:iconX 11 *tmp26
   152 op mul *tmp28 :drawMaterials:col 176
-    * op div *tmp29 *tmp28 2
-    * op add :drawItem:barX 22 *tmp29
+  153 op div *tmp29 *tmp25 2
+  154 op add :drawItem:barX 22 *tmp26
   155 op mul *tmp31 :drawMaterials:col 176
-    * op div *tmp32 *tmp31 2
-    * op add :drawItem:textX :drawItem:textEnd *tmp32
+  156 op div *tmp32 *tmp25 2
+  157 op add :drawItem:textX :drawItem:textEnd *tmp26
   158 draw col %[white]
   159 op add *tmp34 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp34 :drawItem:item 16 0
+  160 draw image :drawItem:iconX *tmp34 :drawMaterials:item 16 0
   161 draw color 0 128 0 255
   162 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   163 draw color 0 255 0 255
   164 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
   165 op add *tmp35 :drawMaterials:y 5
-    * op add *tmp36 *tmp35 2
+  166 op add *tmp36 *tmp34 2
   167 set :drawBold.2:x :drawItem:textX
   168 set :drawBold.2:y *tmp36
   169 set :drawBold.2:alignment @right
-    * set :drawBold.2:text :drawItem:count
-    * set :drawText.5:x :drawBold.2:x
-    * set :drawText.5:y :drawBold.2:y
-    * set :drawText.5:alignment :drawBold.2:alignment
-    * set :drawText.5:text :drawBold.2:text
-    * print :drawText.5:text
-    * set :drawPrint.5:x :drawText.5:x
-    * set :drawPrint.5:y :drawText.5:y
-    * set :drawPrint.5:alignment :drawText.5:alignment
-    * draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
+  170 set :drawBold.2:text :drawMaterials:target
+  171 set :drawText.5:x :drawItem:textX
+  172 set :drawText.5:y *tmp36
+  173 set :drawText.5:alignment @right
+  174 set :drawText.5:text :drawItem:count
+  175 print :drawBold.2:text
+  176 set :drawPrint.5:x :drawBold.2:x
+  177 set :drawPrint.5:y :drawBold.2:y
+  178 set :drawPrint.5:alignment :drawBold.2:alignment
+  179 draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
   180 label *label41
   181 label *label40
-    * op add :drawText.6:x :drawBold.2:x 1
-    * set :drawText.6:y :drawBold.2:y
-    * set :drawText.6:alignment :drawBold.2:alignment
-    * set :drawText.6:text :drawBold.2:text
-    * print :drawText.6:text
+  182 op add :drawText.6:x :drawItem:textX 1
+  183 set :drawText.6:y *tmp36
+  184 set :drawText.6:alignment @right
+  185 set :drawText.6:text :drawItem:count
+  186 print :drawBold.2:text
   187 set :drawPrint.6:x :drawText.6:x
-    * set :drawPrint.6:y :drawText.6:y
-    * set :drawPrint.6:alignment :drawText.6:alignment
-    * draw print :drawPrint.6:x :drawPrint.6:y :drawPrint.6:alignment
+  188 set :drawPrint.6:y :drawBold.2:y
+  189 set :drawPrint.6:alignment :drawBold.2:alignment
+  190 draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
   191 label *label43
   192 label *label42
   193 label *label39
   194 op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label44 lessThan :drawMaterials:col :drawItem:columns
+  195 jump *label44 lessThan :drawMaterials:col :drawMaterials:columns
   196 set :drawMaterials:col 0
   197 op sub :drawMaterials:y :drawMaterials:y 15
   198 label *label44
 
   215 set :drawBold.3:y 45
   216 set :drawBold.3:alignment @bottomLeft
   217 set :drawBold.3:text "Main unit"
-    * set :drawText.7:x :drawBold.3:x
-    * set :drawText.7:y :drawBold.3:y
-    * set :drawText.7:alignment :drawBold.3:alignment
-    * set :drawText.7:text :drawBold.3:text
-    * print :drawText.7:text
-    * set :drawPrint.7:x :drawText.7:x
-    * set :drawPrint.7:y :drawText.7:y
-    * set :drawPrint.7:alignment :drawText.7:alignment
-    * draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
+  218 set :drawText.7:x 22
+  219 set :drawText.7:y 45
+  220 set :drawText.7:alignment @bottomLeft
+  221 set :drawText.7:text "Main unit"
+  222 print :drawBold.3:text
+  223 set :drawPrint.7:x :drawBold.3:x
+  224 set :drawPrint.7:y :drawBold.3:y
+  225 set :drawPrint.7:alignment :drawBold.3:alignment
+  226 draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
   227 label *label51
   228 label *label50
-    * op add :drawText.8:x :drawBold.3:x 1
-    * set :drawText.8:y :drawBold.3:y
-    * set :drawText.8:alignment :drawBold.3:alignment
-    * set :drawText.8:text :drawBold.3:text
-    * print :drawText.8:text
-    * set :drawPrint.8:x :drawText.8:x
-    * set :drawPrint.8:y :drawText.8:y
-    * set :drawPrint.8:alignment :drawText.8:alignment
-    * draw print :drawPrint.8:x :drawPrint.8:y :drawPrint.8:alignment
+  229 op add :drawText.8:x 22 1
+  230 set :drawText.8:y 45
+  231 set :drawText.8:alignment @bottomLeft
+  232 set :drawText.8:text "Main unit"
+  233 print :drawBold.3:text
+  234 set :drawPrint.8:x 23
+  235 set :drawPrint.8:y :drawBold.3:y
+  236 set :drawPrint.8:alignment :drawBold.3:alignment
+  237 draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
   238 label *label53
   239 label *label52
   240 label *label49
 
   244 set :drawUnit.1:items 0
   245 set :drawUnit.1:col 0
   246 set :drawItem.1:columns 1
-    * set :drawItem.1:item :drawUnit.1:item
-    * set :drawItem.1:current :drawUnit.1:items
+  247 set :drawItem.1:item @poly
+  248 set :drawItem.1:current 0
   249 set :drawItem.1:target .transportTarget
   250 set :drawItem.1:count .transportTarget
-    * op mul *tmp45 :drawItem.1:columns 176
-    * op div *tmp46 *tmp45 2
-    * op sub :drawItem.1:barLength 210 *tmp46
-    * op add :drawItem.1:textEnd 48 :drawItem.1:barLength
-    * op mul *tmp49 :drawItem.1:barLength :drawItem.1:current
+  251 op mul *tmp45 1 176
+  252 op div *tmp46 176 2
+  253 op sub :drawItem.1:barLength 210 88
+  254 op add :drawItem.1:textEnd 48 122
+  255 op mul *tmp49 122 :drawUnit.1:items
   256 op div *tmp50 *tmp49 :drawItem.1:target
-    * op min :drawItem.1:length :drawItem.1:barLength *tmp50
-    * op mul *tmp52 :drawUnit.1:col 176
-    * op div *tmp53 *tmp52 2
-    * op add :drawItem.1:iconX 11 *tmp53
-    * op mul *tmp55 :drawUnit.1:col 176
-    * op div *tmp56 *tmp55 2
-    * op add :drawItem.1:barX 22 *tmp56
-    * op mul *tmp58 :drawUnit.1:col 176
-    * op div *tmp59 *tmp58 2
-    * op add :drawItem.1:textX :drawItem.1:textEnd *tmp59
+  257 op min :drawItem.1:length 122 *tmp50
+  258 op mul *tmp52 0 176
+  259 op div *tmp53 0 2
+  260 op add :drawItem.1:iconX 11 0
+  261 op mul *tmp55 0 176
+  262 op div *tmp56 0 2
+  263 op add :drawItem.1:barX 22 0
+  264 op mul *tmp58 0 176
+  265 op div *tmp59 0 2
+  266 op add :drawItem.1:textX 170 0
   267 draw col %[white]
-    * op add *tmp61 :drawUnit:y 5
-    * draw image :drawItem.1:iconX *tmp61 :drawItem.1:item 16 0
+  268 op add *tmp61 29 5
+  269 draw image 11 34 :drawUnit.1:item 16 0
   270 draw color 0 128 0 255
-    * draw rect :drawItem.1:barX :drawUnit:y :drawItem.1:length 10
+  271 draw rect 22 29 :drawItem.1:length 10
   272 draw color 0 255 0 255
-    * draw lineRect :drawItem.1:barX :drawUnit:y :drawItem.1:barLength 10
-    * op add *tmp62 :drawUnit:y 5
-    * op add *tmp63 *tmp62 2
-    * set :drawBold.4:x :drawItem.1:textX
-    * set :drawBold.4:y *tmp63
+  273 draw lineRect 22 29 122 10
+  274 op add *tmp62 29 5
+  275 op add *tmp63 34 2
+  276 set :drawBold.4:x 170
+  277 set :drawBold.4:y 36
   278 set :drawBold.4:alignment @right
   279 set :drawBold.4:text :drawItem.1:count
-    * set :drawText.9:x :drawBold.4:x
-    * set :drawText.9:y :drawBold.4:y
-    * set :drawText.9:alignment :drawBold.4:alignment
-    * set :drawText.9:text :drawBold.4:text
-    * print :drawText.9:text
-    * set :drawPrint.9:x :drawText.9:x
-    * set :drawPrint.9:y :drawText.9:y
-    * set :drawPrint.9:alignment :drawText.9:alignment
-    * draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
+  280 set :drawText.9:x :drawItem.1:textX
+  281 set :drawText.9:y *tmp63
+  282 set :drawText.9:alignment @right
+  283 set :drawText.9:text :drawItem.1:count
+  284 print :drawBold.4:text
+  285 set :drawPrint.9:x :drawBold.4:x
+  286 set :drawPrint.9:y :drawBold.4:y
+  287 set :drawPrint.9:alignment :drawBold.4:alignment
+  288 draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
   289 label *label60
   290 label *label59
-    * op add :drawText.10:x :drawBold.4:x 1
-    * set :drawText.10:y :drawBold.4:y
-    * set :drawText.10:alignment :drawBold.4:alignment
-    * set :drawText.10:text :drawBold.4:text
-    * print :drawText.10:text
+  291 op add :drawText.10:x :drawItem.1:textX 1
+  292 set :drawText.10:y *tmp63
+  293 set :drawText.10:alignment @right
+  294 set :drawText.10:text :drawItem.1:count
+  295 print :drawBold.4:text
   296 set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawText.10:y
-    * set :drawPrint.10:alignment :drawText.10:alignment
-    * draw print :drawPrint.10:x :drawPrint.10:y :drawPrint.10:alignment
+  297 set :drawPrint.10:y :drawBold.4:y
+  298 set :drawPrint.10:alignment :drawBold.4:alignment
+  299 draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
   300 label *label62
   301 label *label61
   302 label *label58
-    * op add :drawUnit.1:col :drawUnit.1:col 1
-    * jump *label63 lessThan :drawUnit.1:col :drawItem.1:columns
-    * set :drawUnit.1:col 0
-    * op sub :drawUnit:y :drawUnit:y 15
+  303 op add :drawUnit.1:col 0 1
+  304 jump *label63 lessThan 1 1
+  305 op sub :drawUnit:y 29 15
   306 label *label63
   307 label *label64
   308 label *label57
 
   318 set :drawUnit.2:col 0
   319 set :drawItem.2:columns 1
   320 set :drawItem.2:item :drawUnit.2:item
-    * set :drawItem.2:current :drawUnit.2:items
+  321 set :drawItem.2:current *tmp70
   322 set :drawItem.2:target .transportTarget
   323 set :drawItem.2:count .transportTarget
-    * op mul *tmp71 :drawItem.2:columns 176
-    * op div *tmp72 *tmp71 2
-    * op sub :drawItem.2:barLength 210 *tmp72
-    * op add :drawItem.2:textEnd 48 :drawItem.2:barLength
-    * op mul *tmp75 :drawItem.2:barLength :drawItem.2:current
+  324 op mul *tmp71 1 176
+  325 op div *tmp72 176 2
+  326 op sub :drawItem.2:barLength 210 88
+  327 op add :drawItem.2:textEnd 48 122
+  328 op mul *tmp75 122 :drawUnit.2:items
   329 op div *tmp76 *tmp75 :drawItem.2:target
-    * op min :drawItem.2:length :drawItem.2:barLength *tmp76
-    * op mul *tmp78 :drawUnit.2:col 176
-    * op div *tmp79 *tmp78 2
-    * op add :drawItem.2:iconX 11 *tmp79
-    * op mul *tmp81 :drawUnit.2:col 176
-    * op div *tmp82 *tmp81 2
-    * op add :drawItem.2:barX 22 *tmp82
-    * op mul *tmp84 :drawUnit.2:col 176
-    * op div *tmp85 *tmp84 2
-    * op add :drawItem.2:textX :drawItem.2:textEnd *tmp85
+  330 op min :drawItem.2:length 122 *tmp76
+  331 op mul *tmp78 0 176
+  332 op div *tmp79 0 2
+  333 op add :drawItem.2:iconX 11 0
+  334 op mul *tmp81 0 176
+  335 op div *tmp82 0 2
+  336 op add :drawItem.2:barX 22 0
+  337 op mul *tmp84 0 176
+  338 op div *tmp85 0 2
+  339 op add :drawItem.2:textX 170 0
   340 draw col %[white]
-    * op add *tmp87 :drawUnit:y 5
-    * draw image :drawItem.2:iconX *tmp87 :drawItem.2:item 16 0
+  341 op add *tmp87 29 5
+  342 draw image 11 34 :drawUnit.2:item 16 0
   343 draw color 0 128 0 255
-    * draw rect :drawItem.2:barX :drawUnit:y :drawItem.2:length 10
+  344 draw rect 22 29 :drawItem.2:length 10
   345 draw color 0 255 0 255
-    * draw lineRect :drawItem.2:barX :drawUnit:y :drawItem.2:barLength 10
-    * op add *tmp88 :drawUnit:y 5
-    * op add *tmp89 *tmp88 2
-    * set :drawBold.5:x :drawItem.2:textX
-    * set :drawBold.5:y *tmp89
+  346 draw lineRect 22 29 122 10
+  347 op add *tmp88 29 5
+  348 op add *tmp89 34 2
+  349 set :drawBold.5:x 170
+  350 set :drawBold.5:y 36
   351 set :drawBold.5:alignment @right
   352 set :drawBold.5:text :drawItem.2:count
-    * set :drawText.11:x :drawBold.5:x
-    * set :drawText.11:y :drawBold.5:y
-    * set :drawText.11:alignment :drawBold.5:alignment
-    * set :drawText.11:text :drawBold.5:text
-    * print :drawText.11:text
-    * set :drawPrint.11:x :drawText.11:x
-    * set :drawPrint.11:y :drawText.11:y
-    * set :drawPrint.11:alignment :drawText.11:alignment
-    * draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
+  353 set :drawText.11:x :drawItem.2:textX
+  354 set :drawText.11:y *tmp89
+  355 set :drawText.11:alignment @right
+  356 set :drawText.11:text :drawItem.2:count
+  357 print :drawBold.5:text
+  358 set :drawPrint.11:x :drawBold.5:x
+  359 set :drawPrint.11:y :drawBold.5:y
+  360 set :drawPrint.11:alignment :drawBold.5:alignment
+  361 draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
   362 label *label69
   363 label *label68
-    * op add :drawText.12:x :drawBold.5:x 1
-    * set :drawText.12:y :drawBold.5:y
-    * set :drawText.12:alignment :drawBold.5:alignment
-    * set :drawText.12:text :drawBold.5:text
-    * print :drawText.12:text
+  364 op add :drawText.12:x :drawItem.2:textX 1
+  365 set :drawText.12:y *tmp89
+  366 set :drawText.12:alignment @right
+  367 set :drawText.12:text :drawItem.2:count
+  368 print :drawBold.5:text
   369 set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawText.12:y
-    * set :drawPrint.12:alignment :drawText.12:alignment
-    * draw print :drawPrint.12:x :drawPrint.12:y :drawPrint.12:alignment
+  370 set :drawPrint.12:y :drawBold.5:y
+  371 set :drawPrint.12:alignment :drawBold.5:alignment
+  372 draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
   373 label *label71
   374 label *label70
   375 label *label67
-    * op add :drawUnit.2:col :drawUnit.2:col 1
-    * jump *label72 lessThan :drawUnit.2:col :drawItem.2:columns
-    * set :drawUnit.2:col 0
-    * op sub :drawUnit:y :drawUnit:y 15
+  376 op add :drawUnit.2:col 0 1
+  377 jump *label72 lessThan 1 1
+  378 op sub :drawUnit:y 29 15
   379 label *label72
   380 label *label73
   381 label *label66
 
   387 set :drawUnitCount:type @flare
   388 set :drawUnitCount:count .flares
   389 jump *label76 lessThanEq :drawUnitCount:count 0
-    * draw image :drawUnits:x 8 :drawUnitCount:type 12 0
+  390 draw image 10 8 @flare 12 0
   391 print "x"
-    * op add :drawText.13:x :drawUnits:x 7
+  392 op add :drawText.13:x 10 7
   393 set :drawText.13:y 10
   394 set :drawText.13:alignment @left
   395 set :drawText.13:text :drawUnitCount:count
-    * print :drawText.13:text
-    * set :drawPrint.13:x :drawText.13:x
-    * set :drawPrint.13:y :drawText.13:y
-    * set :drawPrint.13:alignment :drawText.13:alignment
-    * draw print :drawPrint.13:x :drawPrint.13:y :drawPrint.13:alignment
+  396 print :drawUnitCount:count
+  397 set :drawPrint.13:x 17
+  398 set :drawPrint.13:y 10
+  399 set :drawPrint.13:alignment @left
+  400 draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
   401 label *label79
   402 label *label78
-    * op add :drawUnits:x :drawUnits:x 30
+  403 op add :drawUnits:x 10 30
   404 label *label76
   405 label *label77
   406 label *label75
   407 set :drawUnitCount.1:type @mono
   408 set :drawUnitCount.1:count .monos
   409 jump *label81 lessThanEq :drawUnitCount.1:count 0
-    * draw image :drawUnits:x 8 :drawUnitCount.1:type 12 0
+  410 draw image :drawUnits:x 8 @mono 12 0
   411 print "x"
   412 op add :drawText.14:x :drawUnits:x 7
   413 set :drawText.14:y 10
   414 set :drawText.14:alignment @left
   415 set :drawText.14:text :drawUnitCount.1:count
-    * print :drawText.14:text
+  416 print :drawUnitCount.1:count
   417 set :drawPrint.14:x :drawText.14:x
-    * set :drawPrint.14:y :drawText.14:y
-    * set :drawPrint.14:alignment :drawText.14:alignment
-    * draw print :drawPrint.14:x :drawPrint.14:y :drawPrint.14:alignment
+  418 set :drawPrint.14:y 10
+  419 set :drawPrint.14:alignment @left
+  420 draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
   421 label *label84
   422 label *label83
   423 op add :drawUnits:x :drawUnits:x 30
 
   427 set :drawUnitCount.2:type @poly
   428 set :drawUnitCount.2:count .polys
   429 jump *label86 lessThanEq :drawUnitCount.2:count 0
-    * draw image :drawUnits:x 8 :drawUnitCount.2:type 12 0
+  430 draw image :drawUnits:x 8 @poly 12 0
   431 print "x"
   432 op add :drawText.15:x :drawUnits:x 7
   433 set :drawText.15:y 10
   434 set :drawText.15:alignment @left
   435 set :drawText.15:text :drawUnitCount.2:count
-    * print :drawText.15:text
+  436 print :drawUnitCount.2:count
   437 set :drawPrint.15:x :drawText.15:x
-    * set :drawPrint.15:y :drawText.15:y
-    * set :drawPrint.15:alignment :drawText.15:alignment
-    * draw print :drawPrint.15:x :drawPrint.15:y :drawPrint.15:alignment
+  438 set :drawPrint.15:y 10
+  439 set :drawPrint.15:alignment @left
+  440 draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
   441 label *label89
   442 label *label88
-    * op add :drawUnits:x :drawUnits:x 30
   443 label *label86
   444 label *label87
   445 label *label85

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-80 instructions):
 
    19 set :drawText:x 40
    20 set :drawText:y 161
    21 set :drawText:alignment @bottom
-    * set :drawText:text "Building"
-    * print :drawBold:text
-    * set :drawPrint:x :drawBold:x
-    * set :drawPrint:y :drawBold:y
-    * set :drawPrint:alignment :drawBold:alignment
-    * draw print :drawText:x :drawText:y :drawText:alignment
+   22 print "Building"
+   23 set :drawPrint:x 40
+   24 set :drawPrint:y 161
+   25 set :drawPrint:alignment @bottom
+   26 draw print 40 161 @bottom
    27 label *label12
    28 label *label11
    29 op add :drawText.1:x 40 1
    30 set :drawText.1:y 161
    31 set :drawText.1:alignment @bottom
-    * set :drawText.1:text "Building"
-    * print :drawBold:text
-    * set :drawPrint.1:x 41
-    * set :drawPrint.1:y :drawBold:y
-    * set :drawPrint.1:alignment :drawBold:alignment
-    * draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
+   32 print "Building"
+   33 set :drawPrint.1:y 161
+   34 set :drawPrint.1:alignment @bottom
+   35 draw print 41 161 @bottom
    36 label *label14
    37 label *label13
    38 label *label10
 
    54 set :drawText.2:x 168
    55 set :drawText.2:y 172
    56 set :drawText.2:alignment @topRight
-    * set :drawText.2:text ""
    57 print ""
-    * set :drawPrint.2:x 168
-    * set :drawPrint.2:y 172
-    * set :drawPrint.2:alignment @topRight
-    * draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
+   58 draw print 168 172 @topRight
    59 label *label18
    60 label *label17
    61 label *label9
 
    66 set :drawText.3:x 22
    67 set :drawText.3:y 101
    68 set :drawText.3:alignment @bottomLeft
-    * set :drawText.3:text "Materials"
-    * print :drawBold.1:text
-    * set :drawPrint.3:x :drawBold.1:x
-    * set :drawPrint.3:y :drawBold.1:y
-    * set :drawPrint.3:alignment :drawBold.1:alignment
-    * draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
+   69 print "Materials"
+   70 set :drawPrint.3:x 22
+   71 set :drawPrint.3:y 101
+   72 set :drawPrint.3:alignment @bottomLeft
+   73 draw print 22 101 @bottomLeft
    74 label *label22
    75 label *label21
    76 op add :drawText.4:x 22 1
    77 set :drawText.4:y 101
    78 set :drawText.4:alignment @bottomLeft
-    * set :drawText.4:text "Materials"
-    * print :drawBold.1:text
-    * set :drawPrint.4:x 23
-    * set :drawPrint.4:y :drawBold.1:y
-    * set :drawPrint.4:alignment :drawBold.1:alignment
-    * draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
+   79 print "Materials"
+   80 set :drawPrint.4:y 101
+   81 set :drawPrint.4:alignment @bottomLeft
+   82 draw print 23 101 @bottomLeft
    83 label *label24
    84 label *label23
    85 label *label20
 
   125 jump *label36 lessThanEq :drawMaterials:target 0
   126 sensor *tmp17 .core :drawMaterials:item
   127 set :drawItem:columns *tmp13
-    * set :drawItem:item :drawMaterials:item
-    * set :drawItem:current *tmp17
-    * set :drawItem:target :drawMaterials:target
   128 set :drawItem:count :drawMaterials:target
-    * op mul *tmp18 :drawMaterials:columns 176
-    * op mul *tmp19 :drawItem:columns 88
+  129 op mul *tmp18 *tmp13 176
+  130 op mul *tmp19 *tmp13 88
   131 op sub :drawItem:barLength 210 *tmp19
   132 op add :drawItem:textEnd 48 :drawItem:barLength
   133 op mul *tmp22 :drawItem:barLength *tmp17
 
   136 op mul *tmp25 :drawMaterials:col 176
   137 op mul *tmp26 :drawMaterials:col 88
   138 op add :drawItem:iconX 11 *tmp26
-    * op mul *tmp28 :drawMaterials:col 176
-    * op div *tmp29 *tmp25 2
+  139 op mul *tmp29 :drawMaterials:col 88
   140 op add :drawItem:barX 22 *tmp26
-    * op mul *tmp31 :drawMaterials:col 176
-    * op div *tmp32 *tmp25 2
+  141 op mul *tmp32 :drawMaterials:col 88
   142 op add :drawItem:textX :drawItem:textEnd *tmp26
   143 draw col %[white]
   144 op add *tmp34 :drawMaterials:y 5
 
   147 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   148 draw color 0 255 0 255
   149 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
-    * op add *tmp35 :drawMaterials:y 5
-    * op add *tmp36 *tmp34 2
+  150 op add *tmp36 :drawMaterials:y 7
   151 set :drawBold.2:x :drawItem:textX
   152 set :drawBold.2:y *tmp36
   153 set :drawBold.2:alignment @right
 
   155 set :drawText.5:x :drawItem:textX
   156 set :drawText.5:y *tmp36
   157 set :drawText.5:alignment @right
-    * set :drawText.5:text :drawItem:count
-    * print :drawBold.2:text
-    * set :drawPrint.5:x :drawBold.2:x
-    * set :drawPrint.5:y :drawBold.2:y
-    * set :drawPrint.5:alignment :drawBold.2:alignment
-    * draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
+  158 set :drawText.5:text :drawMaterials:target
+  159 print :drawMaterials:target
+  160 set :drawPrint.5:x :drawItem:textX
+  161 set :drawPrint.5:y *tmp36
+  162 set :drawPrint.5:alignment @right
+  163 draw print :drawItem:textX *tmp36 @right
   164 label *label41
   165 label *label40
   166 op add :drawText.6:x :drawItem:textX 1
   167 set :drawText.6:y *tmp36
   168 set :drawText.6:alignment @right
-    * set :drawText.6:text :drawItem:count
-    * print :drawBold.2:text
-    * set :drawPrint.6:x :drawText.6:x
-    * set :drawPrint.6:y :drawBold.2:y
-    * set :drawPrint.6:alignment :drawBold.2:alignment
-    * draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
+  169 set :drawText.6:text :drawMaterials:target
+  170 print :drawMaterials:target
+  171 set :drawPrint.6:y *tmp36
+  172 set :drawPrint.6:alignment @right
+  173 draw print :drawText.6:x *tmp36 @right
   174 label *label43
   175 label *label42
   176 label *label39
   177 op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label44 lessThan :drawMaterials:col :drawMaterials:columns
+  178 jump *label44 lessThan :drawMaterials:col *tmp13
   179 set :drawMaterials:col 0
   180 op sub :drawMaterials:y :drawMaterials:y 15
   181 label *label44
 
   201 set :drawText.7:x 22
   202 set :drawText.7:y 45
   203 set :drawText.7:alignment @bottomLeft
-    * set :drawText.7:text "Main unit"
-    * print :drawBold.3:text
-    * set :drawPrint.7:x :drawBold.3:x
-    * set :drawPrint.7:y :drawBold.3:y
-    * set :drawPrint.7:alignment :drawBold.3:alignment
-    * draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
+  204 print "Main unit"
+  205 set :drawPrint.7:x 22
+  206 set :drawPrint.7:y 45
+  207 set :drawPrint.7:alignment @bottomLeft
+  208 draw print 22 45 @bottomLeft
   209 label *label51
   210 label *label50
   211 op add :drawText.8:x 22 1
   212 set :drawText.8:y 45
   213 set :drawText.8:alignment @bottomLeft
-    * set :drawText.8:text "Main unit"
-    * print :drawBold.3:text
-    * set :drawPrint.8:x 23
-    * set :drawPrint.8:y :drawBold.3:y
-    * set :drawPrint.8:alignment :drawBold.3:alignment
-    * draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
+  214 print "Main unit"
+  215 set :drawPrint.8:y 45
+  216 set :drawPrint.8:alignment @bottomLeft
+  217 draw print 23 45 @bottomLeft
   218 label *label53
   219 label *label52
   220 label *label49
-    * set :drawUnit:y 29
   221 jump *label54 notEqual .transportItem null
   222 set :drawUnit.1:item @poly
   223 set :drawUnit.1:items 0
-    * set :drawUnit.1:col 0
-    * set :drawItem.1:columns 1
-    * set :drawItem.1:item @poly
-    * set :drawItem.1:current 0
   224 set :drawItem.1:target .transportTarget
   225 set :drawItem.1:count .transportTarget
-    * op mul *tmp45 1 176
-    * op div *tmp46 176 2
-    * op sub :drawItem.1:barLength 210 88
-    * op add :drawItem.1:textEnd 48 122
-    * op mul *tmp49 122 :drawUnit.1:items
-    * op div *tmp50 *tmp49 :drawItem.1:target
+  226 op mul *tmp49 122 0
+  227 op div *tmp50 0 :drawItem.1:target
   228 op min :drawItem.1:length 122 *tmp50
-    * op mul *tmp52 0 176
-    * op div *tmp53 0 2
-    * op add :drawItem.1:iconX 11 0
-    * op mul *tmp55 0 176
-    * op div *tmp56 0 2
-    * op add :drawItem.1:barX 22 0
-    * op mul *tmp58 0 176
-    * op div *tmp59 0 2
   229 op add :drawItem.1:textX 170 0
   230 draw col %[white]
-    * op add *tmp61 29 5
-    * draw image 11 34 :drawUnit.1:item 16 0
+  231 draw image 11 34 @poly 16 0
   232 draw color 0 128 0 255
   233 draw rect 22 29 :drawItem.1:length 10
   234 draw color 0 255 0 255
   235 draw lineRect 22 29 122 10
-    * op add *tmp62 29 5
   236 op add *tmp63 34 2
   237 set :drawBold.4:x 170
   238 set :drawBold.4:y 36
   239 set :drawBold.4:alignment @right
   240 set :drawBold.4:text :drawItem.1:count
-    * set :drawText.9:x :drawItem.1:textX
-    * set :drawText.9:y *tmp63
+  241 set :drawText.9:x 170
+  242 set :drawText.9:y 36
   243 set :drawText.9:alignment @right
-    * set :drawText.9:text :drawItem.1:count
-    * print :drawBold.4:text
-    * set :drawPrint.9:x :drawBold.4:x
-    * set :drawPrint.9:y :drawBold.4:y
-    * set :drawPrint.9:alignment :drawBold.4:alignment
-    * draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
+  244 print :drawItem.1:count
+  245 set :drawPrint.9:x 170
+  246 set :drawPrint.9:y 36
+  247 set :drawPrint.9:alignment @right
+  248 draw print :drawItem.1:textX *tmp63 @right
   249 label *label60
   250 label *label59
-    * op add :drawText.10:x :drawItem.1:textX 1
-    * set :drawText.10:y *tmp63
+  251 op add :drawText.10:x 170 1
+  252 set :drawText.10:y 36
   253 set :drawText.10:alignment @right
-    * set :drawText.10:text :drawItem.1:count
-    * print :drawBold.4:text
-    * set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawBold.4:y
-    * set :drawPrint.10:alignment :drawBold.4:alignment
-    * draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
+  254 print :drawItem.1:count
+  255 set :drawPrint.10:x 171
+  256 set :drawPrint.10:y 36
+  257 set :drawPrint.10:alignment @right
+  258 draw print 171 *tmp63 @right
   259 label *label62
   260 label *label61
   261 label *label58
-    * op add :drawUnit.1:col 0 1
   262 jump *label63 lessThan 1 1
-    * op sub :drawUnit:y 29 15
   263 label *label63
   264 label *label64
   265 label *label57
 
   272 op mul *tmp70 *tmp68 *tmp69
   273 set :drawUnit.2:item .transportItem
   274 set :drawUnit.2:items *tmp70
-    * set :drawUnit.2:col 0
-    * set :drawItem.2:columns 1
-    * set :drawItem.2:item :drawUnit.2:item
-    * set :drawItem.2:current *tmp70
   275 set :drawItem.2:target .transportTarget
   276 set :drawItem.2:count .transportTarget
-    * op mul *tmp71 1 176
-    * op div *tmp72 176 2
-    * op sub :drawItem.2:barLength 210 88
-    * op add :drawItem.2:textEnd 48 122
-    * op mul *tmp75 122 :drawUnit.2:items
+  277 op mul *tmp75 122 *tmp70
   278 op div *tmp76 *tmp75 :drawItem.2:target
   279 op min :drawItem.2:length 122 *tmp76
-    * op mul *tmp78 0 176
-    * op div *tmp79 0 2
-    * op add :drawItem.2:iconX 11 0
-    * op mul *tmp81 0 176
-    * op div *tmp82 0 2
-    * op add :drawItem.2:barX 22 0
-    * op mul *tmp84 0 176
-    * op div *tmp85 0 2
   280 op add :drawItem.2:textX 170 0
   281 draw col %[white]
-    * op add *tmp87 29 5
   282 draw image 11 34 :drawUnit.2:item 16 0
   283 draw color 0 128 0 255
   284 draw rect 22 29 :drawItem.2:length 10
   285 draw color 0 255 0 255
   286 draw lineRect 22 29 122 10
-    * op add *tmp88 29 5
   287 op add *tmp89 34 2
   288 set :drawBold.5:x 170
   289 set :drawBold.5:y 36
   290 set :drawBold.5:alignment @right
   291 set :drawBold.5:text :drawItem.2:count
-    * set :drawText.11:x :drawItem.2:textX
-    * set :drawText.11:y *tmp89
+  292 set :drawText.11:x 170
+  293 set :drawText.11:y 36
   294 set :drawText.11:alignment @right
-    * set :drawText.11:text :drawItem.2:count
-    * print :drawBold.5:text
-    * set :drawPrint.11:x :drawBold.5:x
-    * set :drawPrint.11:y :drawBold.5:y
-    * set :drawPrint.11:alignment :drawBold.5:alignment
-    * draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
+  295 print :drawItem.2:count
+  296 set :drawPrint.11:x 170
+  297 set :drawPrint.11:y 36
+  298 set :drawPrint.11:alignment @right
+  299 draw print :drawItem.2:textX *tmp89 @right
   300 label *label69
   301 label *label68
-    * op add :drawText.12:x :drawItem.2:textX 1
-    * set :drawText.12:y *tmp89
+  302 op add :drawText.12:x 170 1
+  303 set :drawText.12:y 36
   304 set :drawText.12:alignment @right
-    * set :drawText.12:text :drawItem.2:count
-    * print :drawBold.5:text
-    * set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawBold.5:y
-    * set :drawPrint.12:alignment :drawBold.5:alignment
-    * draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
+  305 print :drawItem.2:count
+  306 set :drawPrint.12:x 171
+  307 set :drawPrint.12:y 36
+  308 set :drawPrint.12:alignment @right
+  309 draw print 171 *tmp89 @right
   310 label *label71
   311 label *label70
   312 label *label67
-    * op add :drawUnit.2:col 0 1
   313 jump *label72 lessThan 1 1
-    * op sub :drawUnit:y 29 15
   314 label *label72
   315 label *label73
   316 label *label66
 
   319 label *label48
   320 set :drawUnits:x 10
   321 draw col %[white]
-    * set :drawUnitCount:type @flare
   322 set :drawUnitCount:count .flares
   323 jump *label76 lessThanEq :drawUnitCount:count 0
   324 draw image 10 8 @flare 12 0
 
   326 op add :drawText.13:x 10 7
   327 set :drawText.13:y 10
   328 set :drawText.13:alignment @left
-    * set :drawText.13:text :drawUnitCount:count
   329 print :drawUnitCount:count
-    * set :drawPrint.13:x 17
-    * set :drawPrint.13:y 10
-    * set :drawPrint.13:alignment @left
-    * draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
+  330 draw print 17 10 @left
   331 label *label79
   332 label *label78
   333 op add :drawUnits:x 10 30
   334 label *label76
   335 label *label77
   336 label *label75
-    * set :drawUnitCount.1:type @mono
   337 set :drawUnitCount.1:count .monos
   338 jump *label81 lessThanEq :drawUnitCount.1:count 0
   339 draw image :drawUnits:x 8 @mono 12 0
 
   341 op add :drawText.14:x :drawUnits:x 7
   342 set :drawText.14:y 10
   343 set :drawText.14:alignment @left
-    * set :drawText.14:text :drawUnitCount.1:count
   344 print :drawUnitCount.1:count
-    * set :drawPrint.14:x :drawText.14:x
-    * set :drawPrint.14:y 10
-    * set :drawPrint.14:alignment @left
-    * draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
+  345 draw print :drawText.14:x 10 @left
   346 label *label84
   347 label *label83
   348 op add :drawUnits:x :drawUnits:x 30
   349 label *label81
   350 label *label82
   351 label *label80
-    * set :drawUnitCount.2:type @poly
   352 set :drawUnitCount.2:count .polys
   353 jump *label86 lessThanEq :drawUnitCount.2:count 0
   354 draw image :drawUnits:x 8 @poly 12 0
 
   356 op add :drawText.15:x :drawUnits:x 7
   357 set :drawText.15:y 10
   358 set :drawText.15:alignment @left
-    * set :drawText.15:text :drawUnitCount.2:count
   359 print :drawUnitCount.2:count
-    * set :drawPrint.15:x :drawText.15:x
-    * set :drawPrint.15:y 10
-    * set :drawPrint.15:alignment @left
-    * draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
+  360 draw print :drawText.15:x 10 @left
   361 label *label89
   362 label *label88
   363 label *label86

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-114 instructions):
 
    12 draw reset
    13 draw clear 0 0 32
    14 draw col %[gold]
-    * set :drawBold:x 40
-    * set :drawBold:y 161
-    * set :drawBold:alignment @bottom
-    * set :drawBold:text "Building"
-    * set :drawText:x 40
-    * set :drawText:y 161
-    * set :drawText:alignment @bottom
    15 print "Building"
-    * set :drawPrint:x 40
-    * set :drawPrint:y 161
-    * set :drawPrint:alignment @bottom
    16 draw print 40 161 @bottom
    17 label *label12
    18 label *label11
-    * op add :drawText.1:x 40 1
-    * set :drawText.1:y 161
-    * set :drawText.1:alignment @bottom
    19 print "Building"
-    * set :drawPrint.1:y 161
-    * set :drawPrint.1:alignment @bottom
    20 draw print 41 161 @bottom
    21 label *label14
    22 label *label13
 
    36 print ":"
    37 print *tmp10
    38 print :drawHeader:s
-    * set :drawText.2:x 168
-    * set :drawText.2:y 172
-    * set :drawText.2:alignment @topRight
    39 print ""
    40 draw print 168 172 @topRight
    41 label *label18
    42 label *label17
    43 label *label9
-    * set :drawBold.1:x 22
-    * set :drawBold.1:y 101
-    * set :drawBold.1:alignment @bottomLeft
-    * set :drawBold.1:text "Materials"
-    * set :drawText.3:x 22
-    * set :drawText.3:y 101
-    * set :drawText.3:alignment @bottomLeft
    44 print "Materials"
-    * set :drawPrint.3:x 22
-    * set :drawPrint.3:y 101
-    * set :drawPrint.3:alignment @bottomLeft
    45 draw print 22 101 @bottomLeft
    46 label *label22
    47 label *label21
-    * op add :drawText.4:x 22 1
-    * set :drawText.4:y 101
-    * set :drawText.4:alignment @bottomLeft
    48 print "Materials"
-    * set :drawPrint.4:y 101
-    * set :drawPrint.4:alignment @bottomLeft
    49 draw print 23 101 @bottomLeft
    50 label *label24
    51 label *label23
 
    59 label *label25
    60 set *tmp13 1
    61 label *label26
-    * set :drawMaterials:columns *tmp13
    62 set :drawMaterials:item @copper
    63 set :drawMaterials:target .copperTarget
    64 setaddr *tmp14 *label30
 
    90 label *label27
    91 jump *label36 lessThanEq :drawMaterials:target 0
    92 sensor *tmp17 .core :drawMaterials:item
-    * set :drawItem:columns *tmp13
-    * set :drawItem:count :drawMaterials:target
-    * op mul *tmp18 *tmp13 176
    93 op mul *tmp19 *tmp13 88
    94 op sub :drawItem:barLength 210 *tmp19
    95 op add :drawItem:textEnd 48 :drawItem:barLength
    96 op mul *tmp22 :drawItem:barLength *tmp17
    97 op div *tmp23 *tmp22 :drawMaterials:target
    98 op min :drawItem:length :drawItem:barLength *tmp23
-    * op mul *tmp25 :drawMaterials:col 176
    99 op mul *tmp26 :drawMaterials:col 88
   100 op add :drawItem:iconX 11 *tmp26
-    * op mul *tmp29 :drawMaterials:col 88
   101 op add :drawItem:barX 22 *tmp26
-    * op mul *tmp32 :drawMaterials:col 88
   102 op add :drawItem:textX :drawItem:textEnd *tmp26
   103 draw col %[white]
   104 op add *tmp34 :drawMaterials:y 5
 
   108 draw color 0 255 0 255
   109 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
   110 op add *tmp36 :drawMaterials:y 7
-    * set :drawBold.2:x :drawItem:textX
-    * set :drawBold.2:y *tmp36
-    * set :drawBold.2:alignment @right
-    * set :drawBold.2:text :drawMaterials:target
-    * set :drawText.5:x :drawItem:textX
-    * set :drawText.5:y *tmp36
-    * set :drawText.5:alignment @right
-    * set :drawText.5:text :drawMaterials:target
   111 print :drawMaterials:target
-    * set :drawPrint.5:x :drawItem:textX
-    * set :drawPrint.5:y *tmp36
-    * set :drawPrint.5:alignment @right
   112 draw print :drawItem:textX *tmp36 @right
   113 label *label41
   114 label *label40
   115 op add :drawText.6:x :drawItem:textX 1
-    * set :drawText.6:y *tmp36
-    * set :drawText.6:alignment @right
-    * set :drawText.6:text :drawMaterials:target
   116 print :drawMaterials:target
-    * set :drawPrint.6:y *tmp36
-    * set :drawPrint.6:alignment @right
   117 draw print :drawText.6:x *tmp36 @right
   118 label *label43
   119 label *label42
 
   138 label *label29
   139 label *label19
   140 draw col %[white]
-    * set :drawBold.3:x 22
-    * set :drawBold.3:y 45
-    * set :drawBold.3:alignment @bottomLeft
-    * set :drawBold.3:text "Main unit"
-    * set :drawText.7:x 22
-    * set :drawText.7:y 45
-    * set :drawText.7:alignment @bottomLeft
   141 print "Main unit"
-    * set :drawPrint.7:x 22
-    * set :drawPrint.7:y 45
-    * set :drawPrint.7:alignment @bottomLeft
   142 draw print 22 45 @bottomLeft
   143 label *label51
   144 label *label50
-    * op add :drawText.8:x 22 1
-    * set :drawText.8:y 45
-    * set :drawText.8:alignment @bottomLeft
   145 print "Main unit"
-    * set :drawPrint.8:y 45
-    * set :drawPrint.8:alignment @bottomLeft
   146 draw print 23 45 @bottomLeft
   147 label *label53
   148 label *label52
   149 label *label49
   150 jump *label54 notEqual .transportItem null
-    * set :drawUnit.1:item @poly
-    * set :drawUnit.1:items 0
   151 set :drawItem.1:target .transportTarget
   152 set :drawItem.1:count .transportTarget
-    * op mul *tmp49 122 0
   153 op div *tmp50 0 :drawItem.1:target
   154 op min :drawItem.1:length 122 *tmp50
   155 op add :drawItem.1:textX 170 0
 
   160 draw color 0 255 0 255
   161 draw lineRect 22 29 122 10
   162 op add *tmp63 34 2
-    * set :drawBold.4:x 170
-    * set :drawBold.4:y 36
-    * set :drawBold.4:alignment @right
-    * set :drawBold.4:text :drawItem.1:count
-    * set :drawText.9:x 170
-    * set :drawText.9:y 36
-    * set :drawText.9:alignment @right
   163 print :drawItem.1:count
-    * set :drawPrint.9:x 170
-    * set :drawPrint.9:y 36
-    * set :drawPrint.9:alignment @right
-    * draw print :drawItem.1:textX *tmp63 @right
+  164 draw print 170 36 @right
   165 label *label60
   166 label *label59
-    * op add :drawText.10:x 170 1
-    * set :drawText.10:y 36
-    * set :drawText.10:alignment @right
   167 print :drawItem.1:count
-    * set :drawPrint.10:x 171
-    * set :drawPrint.10:y 36
-    * set :drawPrint.10:alignment @right
-    * draw print 171 *tmp63 @right
+  168 draw print 171 36 @right
   169 label *label62
   170 label *label61
   171 label *label58
 
   181 op equal *tmp69 :drawUnit:unitItem .transportItem
   182 op mul *tmp70 *tmp68 *tmp69
   183 set :drawUnit.2:item .transportItem
-    * set :drawUnit.2:items *tmp70
   184 set :drawItem.2:target .transportTarget
   185 set :drawItem.2:count .transportTarget
   186 op mul *tmp75 122 *tmp70
 
   194 draw color 0 255 0 255
   195 draw lineRect 22 29 122 10
   196 op add *tmp89 34 2
-    * set :drawBold.5:x 170
-    * set :drawBold.5:y 36
-    * set :drawBold.5:alignment @right
-    * set :drawBold.5:text :drawItem.2:count
-    * set :drawText.11:x 170
-    * set :drawText.11:y 36
-    * set :drawText.11:alignment @right
   197 print :drawItem.2:count
-    * set :drawPrint.11:x 170
-    * set :drawPrint.11:y 36
-    * set :drawPrint.11:alignment @right
-    * draw print :drawItem.2:textX *tmp89 @right
+  198 draw print 170 36 @right
   199 label *label69
   200 label *label68
-    * op add :drawText.12:x 170 1
-    * set :drawText.12:y 36
-    * set :drawText.12:alignment @right
   201 print :drawItem.2:count
-    * set :drawPrint.12:x 171
-    * set :drawPrint.12:y 36
-    * set :drawPrint.12:alignment @right
-    * draw print 171 *tmp89 @right
+  202 draw print 171 36 @right
   203 label *label71
   204 label *label70
   205 label *label67
 
   216 jump *label76 lessThanEq :drawUnitCount:count 0
   217 draw image 10 8 @flare 12 0
   218 print "x"
-    * op add :drawText.13:x 10 7
-    * set :drawText.13:y 10
-    * set :drawText.13:alignment @left
   219 print :drawUnitCount:count
   220 draw print 17 10 @left
   221 label *label79
 
   229 draw image :drawUnits:x 8 @mono 12 0
   230 print "x"
   231 op add :drawText.14:x :drawUnits:x 7
-    * set :drawText.14:y 10
-    * set :drawText.14:alignment @left
   232 print :drawUnitCount.1:count
   233 draw print :drawText.14:x 10 @left
   234 label *label84
 
   242 draw image :drawUnits:x 8 @poly 12 0
   243 print "x"
   244 op add :drawText.15:x :drawUnits:x 7
-    * set :drawText.15:y 10
-    * set :drawText.15:alignment @left
   245 print :drawUnitCount.2:count
   246 draw print :drawText.15:x 10 @left
   247 label *label89

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-4 instructions):
 
   152 set :drawItem.1:count .transportTarget
   153 op div *tmp50 0 :drawItem.1:target
   154 op min :drawItem.1:length 122 *tmp50
-    * op add :drawItem.1:textX 170 0
   155 draw col %[white]
   156 draw image 11 34 @poly 16 0
   157 draw color 0 128 0 255
   158 draw rect 22 29 :drawItem.1:length 10
   159 draw color 0 255 0 255
   160 draw lineRect 22 29 122 10
-    * op add *tmp63 34 2
   161 print :drawItem.1:count
   162 draw print 170 36 @right
   163 label *label60
 
   184 op mul *tmp75 122 *tmp70
   185 op div *tmp76 *tmp75 :drawItem.2:target
   186 op min :drawItem.2:length 122 *tmp76
-    * op add :drawItem.2:textX 170 0
   187 draw col %[white]
   188 draw image 11 34 :drawUnit.2:item 16 0
   189 draw color 0 128 0 255
   190 draw rect 22 29 :drawItem.2:length 10
   191 draw color 0 255 0 255
   192 draw lineRect 22 29 122 10
-    * op add *tmp89 34 2
   193 print :drawItem.2:count
   194 draw print 170 36 @right
   195 label *label69

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1:
 
    26 op floor :drawHeader:t @second
    27 op idiv :drawHeader:m :drawHeader:t 60
    28 op mod :drawHeader:s :drawHeader:t 60
-    * jump *label15 greaterThanEq :drawHeader:s 10
+   29 set *tmp10 ""
+   30 jump *label16 greaterThanEq :drawHeader:s 10
    31 set *tmp10 "0"
    32 jump *label16 always
-    * label *label15
-    * set *tmp10 ""
    33 label *label16
    34 print :drawHeader:m
    35 print ":"
 
    52 set :drawMaterials:col 0
    53 set :drawMaterials:y 85
    54 set :drawMaterials:count .totalTargets
-    * jump *label25 lessThanEq :drawMaterials:count 2
+   55 set *tmp13 1
+   56 jump *label26 lessThanEq :drawMaterials:count 2
    57 set *tmp13 2
    58 jump *label26 always
-    * label *label25
-    * set *tmp13 1
    59 label *label26
    60 set :drawMaterials:item @copper
    61 set :drawMaterials:target .copperTarget

Modifications by Unroll iteration loop at line 94:5 (+148 instructions):
 
    57 set *tmp13 2
    58 jump *label26 always
    59 label *label26
-    * set :drawMaterials:item @copper
-    * set :drawMaterials:target .copperTarget
-    * setaddr *tmp14 *label30
-    * jump *label27 always
-    * multilabel *label30 (m:marker0)
-    * set :drawMaterials:item @lead
-    * set :drawMaterials:target .leadTarget
-    * setaddr *tmp14 *label31
-    * jump *label27 always
-    * multilabel *label31 (m:marker0)
-    * set :drawMaterials:item @graphite
-    * set :drawMaterials:target .graphiteTarget
-    * setaddr *tmp14 *label32
-    * jump *label27 always
-    * multilabel *label32 (m:marker0)
-    * set :drawMaterials:item @silicon
-    * set :drawMaterials:target .siliconTarget
-    * setaddr *tmp14 *label33
-    * jump *label27 always
-    * multilabel *label33 (m:marker0)
-    * set :drawMaterials:item @titanium
-    * set :drawMaterials:target .titaniumTarget
-    * setaddr *tmp14 *label34
-    * jump *label27 always
-    * multilabel *label34 (m:marker0)
-    * set :drawMaterials:item @metaglass
-    * set :drawMaterials:target .metaglassTarget
-    * setaddr *tmp14 *label35
-    * label *label27
-    * jump *label36 lessThanEq :drawMaterials:target 0
-    * sensor *tmp17 .core :drawMaterials:item
-    * op mul *tmp19 *tmp13 88
-    * op sub :drawItem:barLength 210 *tmp19
-    * op add :drawItem:textEnd 48 :drawItem:barLength
-    * op mul *tmp22 :drawItem:barLength *tmp17
-    * op div *tmp23 *tmp22 :drawMaterials:target
-    * op min :drawItem:length :drawItem:barLength *tmp23
-    * op mul *tmp26 :drawMaterials:col 88
-    * op add :drawItem:iconX 11 *tmp26
-    * op add :drawItem:barX 22 *tmp26
-    * op add :drawItem:textX :drawItem:textEnd *tmp26
-    * draw col %[white]
-    * op add *tmp34 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp34 :drawMaterials:item 16 0
-    * draw color 0 128 0 255
-    * draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
-    * draw color 0 255 0 255
-    * draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
-    * op add *tmp36 :drawMaterials:y 7
-    * print :drawMaterials:target
-    * draw print :drawItem:textX *tmp36 @right
-    * label *label41
-    * label *label40
-    * op add :drawText.6:x :drawItem:textX 1
-    * print :drawMaterials:target
-    * draw print :drawText.6:x *tmp36 @right
-    * label *label43
-    * label *label42
-    * label *label39
-    * op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label44 lessThan :drawMaterials:col *tmp13
-    * set :drawMaterials:col 0
-    * op sub :drawMaterials:y :drawMaterials:y 15
-    * label *label44
-    * label *label45
-    * label *label38
-    * op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label46 greaterThan :drawMaterials:count 0
-    * jump *label29 always
-    * label *label46
-    * label *label47
-    * label *label36
-    * label *label37
-    * label *label28
-    * multijump *tmp14 0 0 (m:marker0)
-    * multilabel *label35 (m:marker0)
-    * label *label29
+   60 set :drawMaterials:item @copper
+   61 set :drawMaterials:target .copperTarget
+   62 label *label91
+   63 jump *label102 lessThanEq :drawMaterials:target 0
+   64 sensor *tmp17 .core :drawMaterials:item
+   65 op mul *tmp19 *tmp13 88
+   66 op sub :drawItem:barLength 210 *tmp19
+   67 op add :drawItem:textEnd 48 :drawItem:barLength
+   68 op mul *tmp22 :drawItem:barLength *tmp17
+   69 op div *tmp23 *tmp22 :drawMaterials:target
+   70 op min :drawItem:length :drawItem:barLength *tmp23
+   71 op mul *tmp26 :drawMaterials:col 88
+   72 op add :drawItem:iconX 11 *tmp26
+   73 op add :drawItem:barX 22 *tmp26
+   74 op add :drawItem:textX :drawItem:textEnd *tmp26
+   75 draw col %[white]
+   76 op add *tmp34 :drawMaterials:y 5
+   77 draw image :drawItem:iconX *tmp34 :drawMaterials:item 16 0
+   78 draw color 0 128 0 255
+   79 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+   80 draw color 0 255 0 255
+   81 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+   82 op add *tmp36 :drawMaterials:y 7
+   83 print :drawMaterials:target
+   84 draw print :drawItem:textX *tmp36 @right
+   85 label *label92
+   86 label *label93
+   87 op add :drawText.6:x :drawItem:textX 1
+   88 print :drawMaterials:target
+   89 draw print :drawText.6:x *tmp36 @right
+   90 label *label94
+   91 label *label95
+   92 label *label96
+   93 op add :drawMaterials:col :drawMaterials:col 1
+   94 jump *label97 lessThan :drawMaterials:col *tmp13
+   95 set :drawMaterials:col 0
+   96 op sub :drawMaterials:y :drawMaterials:y 15
+   97 label *label97
+   98 label *label98
+   99 label *label99
+  100 op sub :drawMaterials:count :drawMaterials:count 1
+  101 jump *label100 greaterThan :drawMaterials:count 0
+  102 jump *label29 always
+  103 label *label100
+  104 label *label101
+  105 label *label102
+  106 label *label103
+  107 label *label104
+  108 set :drawMaterials:item @lead
+  109 set :drawMaterials:target .leadTarget
+  110 label *label107
+  111 jump *label118 lessThanEq :drawMaterials:target 0
+  112 sensor *tmp17 .core :drawMaterials:item
+  113 op mul *tmp19 *tmp13 88
+  114 op sub :drawItem:barLength 210 *tmp19
+  115 op add :drawItem:textEnd 48 :drawItem:barLength
+  116 op mul *tmp22 :drawItem:barLength *tmp17
+  117 op div *tmp23 *tmp22 :drawMaterials:target
+  118 op min :drawItem:length :drawItem:barLength *tmp23
+  119 op mul *tmp26 :drawMaterials:col 88
+  120 op add :drawItem:iconX 11 *tmp26
+  121 op add :drawItem:barX 22 *tmp26
+  122 op add :drawItem:textX :drawItem:textEnd *tmp26
+  123 draw col %[white]
+  124 op add *tmp34 :drawMaterials:y 5
+  125 draw image :drawItem:iconX *tmp34 :drawMaterials:item 16 0
+  126 draw color 0 128 0 255
+  127 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+  128 draw color 0 255 0 255
+  129 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+  130 op add *tmp36 :drawMaterials:y 7
+  131 print :drawMaterials:target
+  132 draw print :drawItem:textX *tmp36 @right
+  133 label *label108
+  134 label *label109
+  135 op add :drawText.6:x :drawItem:textX 1
+  136 print :drawMaterials:target
+  137 draw print :drawText.6:x *tmp36 @right
+  138 label *label110
+  139 label *label111
+  140 label *label112
+  141 op add :drawMaterials:col :drawMaterials:col 1
+  142 jump *label113 lessThan :drawMaterials:col *tmp13
+  143 set :drawMaterials:col 0
+  144 op sub :drawMaterials:y :drawMaterials:y 15
+  145 label *label113
+  146 label *label114
+  147 label *label115
+  148 op sub :drawMaterials:count :drawMaterials:count 1
+  149 jump *label116 greaterThan :drawMaterials:count 0
+  150 jump *label29 always
+  151 label *label116
+  152 label *label117
+  153 label *label118
+  154 label *label119
+  155 label *label120
+  156 set :drawMaterials:item @graphite
+  157 set :drawMaterials:target .graphiteTarget
+  158 label *label123
+  159 jump *label134 lessThanEq :drawMaterials:target 0
+  160 sensor *tmp17 .core :drawMaterials:item
+  161 op mul *tmp19 *tmp13 88
+  162 op sub :drawItem:barLength 210 *tmp19
+  163 op add :drawItem:textEnd 48 :drawItem:barLength
+  164 op mul *tmp22 :drawItem:barLength *tmp17
+  165 op div *tmp23 *tmp22 :drawMaterials:target
+  166 op min :drawItem:length :drawItem:barLength *tmp23
+  167 op mul *tmp26 :drawMaterials:col 88
+  168 op add :drawItem:iconX 11 *tmp26
+  169 op add :drawItem:barX 22 *tmp26
+  170 op add :drawItem:textX :drawItem:textEnd *tmp26
+  171 draw col %[white]
+  172 op add *tmp34 :drawMaterials:y 5
+  173 draw image :drawItem:iconX *tmp34 :drawMaterials:item 16 0
+  174 draw color 0 128 0 255
+  175 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+  176 draw color 0 255 0 255
+  177 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+  178 op add *tmp36 :drawMaterials:y 7
+  179 print :drawMaterials:target
+  180 draw print :drawItem:textX *tmp36 @right
+  181 label *label124
+  182 label *label125
+  183 op add :drawText.6:x :drawItem:textX 1
+  184 print :drawMaterials:target
+  185 draw print :drawText.6:x *tmp36 @right
+  186 label *label126
+  187 label *label127
+  188 label *label128
+  189 op add :drawMaterials:col :drawMaterials:col 1
+  190 jump *label129 lessThan :drawMaterials:col *tmp13
+  191 set :drawMaterials:col 0
+  192 op sub :drawMaterials:y :drawMaterials:y 15
+  193 label *label129
+  194 label *label130
+  195 label *label131
+  196 op sub :drawMaterials:count :drawMaterials:count 1
+  197 jump *label132 greaterThan :drawMaterials:count 0
+  198 jump *label29 always
+  199 label *label132
+  200 label *label133
+  201 label *label134
+  202 label *label135
+  203 label *label136
+  204 set :drawMaterials:item @silicon
+  205 set :drawMaterials:target .siliconTarget
+  206 label *label139
+  207 jump *label150 lessThanEq :drawMaterials:target 0
+  208 sensor *tmp17 .core :drawMaterials:item
+  209 op mul *tmp19 *tmp13 88
+  210 op sub :drawItem:barLength 210 *tmp19
+  211 op add :drawItem:textEnd 48 :drawItem:barLength
+  212 op mul *tmp22 :drawItem:barLength *tmp17
+  213 op div *tmp23 *tmp22 :drawMaterials:target
+  214 op min :drawItem:length :drawItem:barLength *tmp23
+  215 op mul *tmp26 :drawMaterials:col 88
+  216 op add :drawItem:iconX 11 *tmp26
+  217 op add :drawItem:barX 22 *tmp26
+  218 op add :drawItem:textX :drawItem:textEnd *tmp26
+  219 draw col %[white]
+  220 op add *tmp34 :drawMaterials:y 5
+  221 draw image :drawItem:iconX *tmp34 :drawMaterials:item 16 0
+  222 draw color 0 128 0 255
+  223 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+  224 draw color 0 255 0 255
+  225 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+  226 op add *tmp36 :drawMaterials:y 7
+  227 print :drawMaterials:target
+  228 draw print :drawItem:textX *tmp36 @right
+  229 label *label140
+  230 label *label141
+  231 op add :drawText.6:x :drawItem:textX 1
+  232 print :drawMaterials:target
+  233 draw print :drawText.6:x *tmp36 @right
+  234 label *label142
+  235 label *label143
+  236 label *label144
+  237 op add :drawMaterials:col :drawMaterials:col 1
+  238 jump *label145 lessThan :drawMaterials:col *tmp13
+  239 set :drawMaterials:col 0
+  240 op sub :drawMaterials:y :drawMaterials:y 15
+  241 label *label145
+  242 label *label146
+  243 label *label147
+  244 op sub :drawMaterials:count :drawMaterials:count 1
+  245 jump *label148 greaterThan :drawMaterials:count 0
+  246 jump *label29 always
+  247 label *label148
+  248 label *label149
+  249 label *label150
+  250 label *label151
+  251 label *label152
+  252 set :drawMaterials:item @titanium
+  253 set :drawMaterials:target .titaniumTarget
+  254 label *label155
+  255 jump *label166 lessThanEq :drawMaterials:target 0
+  256 sensor *tmp17 .core :drawMaterials:item
+  257 op mul *tmp19 *tmp13 88
+  258 op sub :drawItem:barLength 210 *tmp19
+  259 op add :drawItem:textEnd 48 :drawItem:barLength
+  260 op mul *tmp22 :drawItem:barLength *tmp17
+  261 op div *tmp23 *tmp22 :drawMaterials:target
+  262 op min :drawItem:length :drawItem:barLength *tmp23
+  263 op mul *tmp26 :drawMaterials:col 88
+  264 op add :drawItem:iconX 11 *tmp26
+  265 op add :drawItem:barX 22 *tmp26
+  266 op add :drawItem:textX :drawItem:textEnd *tmp26
+  267 draw col %[white]
+  268 op add *tmp34 :drawMaterials:y 5
+  269 draw image :drawItem:iconX *tmp34 :drawMaterials:item 16 0
+  270 draw color 0 128 0 255
+  271 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+  272 draw color 0 255 0 255
+  273 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+  274 op add *tmp36 :drawMaterials:y 7
+  275 print :drawMaterials:target
+  276 draw print :drawItem:textX *tmp36 @right
+  277 label *label156
+  278 label *label157
+  279 op add :drawText.6:x :drawItem:textX 1
+  280 print :drawMaterials:target
+  281 draw print :drawText.6:x *tmp36 @right
+  282 label *label158
+  283 label *label159
+  284 label *label160
+  285 op add :drawMaterials:col :drawMaterials:col 1
+  286 jump *label161 lessThan :drawMaterials:col *tmp13
+  287 set :drawMaterials:col 0
+  288 op sub :drawMaterials:y :drawMaterials:y 15
+  289 label *label161
+  290 label *label162
+  291 label *label163
+  292 op sub :drawMaterials:count :drawMaterials:count 1
+  293 jump *label164 greaterThan :drawMaterials:count 0
+  294 jump *label29 always
+  295 label *label164
+  296 label *label165
+  297 label *label166
+  298 label *label167
+  299 label *label168
+  300 set :drawMaterials:item @metaglass
+  301 set :drawMaterials:target .metaglassTarget
+  302 label *label171
+  303 jump *label182 lessThanEq :drawMaterials:target 0
+  304 sensor *tmp17 .core :drawMaterials:item
+  305 op mul *tmp19 *tmp13 88
+  306 op sub :drawItem:barLength 210 *tmp19
+  307 op add :drawItem:textEnd 48 :drawItem:barLength
+  308 op mul *tmp22 :drawItem:barLength *tmp17
+  309 op div *tmp23 *tmp22 :drawMaterials:target
+  310 op min :drawItem:length :drawItem:barLength *tmp23
+  311 op mul *tmp26 :drawMaterials:col 88
+  312 op add :drawItem:iconX 11 *tmp26
+  313 op add :drawItem:barX 22 *tmp26
+  314 op add :drawItem:textX :drawItem:textEnd *tmp26
+  315 draw col %[white]
+  316 op add *tmp34 :drawMaterials:y 5
+  317 draw image :drawItem:iconX *tmp34 :drawMaterials:item 16 0
+  318 draw color 0 128 0 255
+  319 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+  320 draw color 0 255 0 255
+  321 draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
+  322 op add *tmp36 :drawMaterials:y 7
+  323 print :drawMaterials:target
+  324 draw print :drawItem:textX *tmp36 @right
+  325 label *label172
+  326 label *label173
+  327 op add :drawText.6:x :drawItem:textX 1
+  328 print :drawMaterials:target
+  329 draw print :drawText.6:x *tmp36 @right
+  330 label *label174
+  331 label *label175
+  332 label *label176
+  333 op add :drawMaterials:col :drawMaterials:col 1
+  334 jump *label177 lessThan :drawMaterials:col *tmp13
+  335 set :drawMaterials:col 0
+  336 op sub :drawMaterials:y :drawMaterials:y 15
+  337 label *label177
+  338 label *label178
+  339 label *label179
+  340 op sub :drawMaterials:count :drawMaterials:count 1
+  341 jump *label180 greaterThan :drawMaterials:count 0
+  342 jump *label29 always
+  343 label *label180
+  344 label *label181
+  345 label *label182
+  346 label *label183
+  347 label *label184
+  348 label *label29
   349 label *label19
   350 draw col %[white]
   351 print "Main unit"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
    61 set :drawMaterials:target .copperTarget
    62 label *label91
    63 jump *label102 lessThanEq :drawMaterials:target 0
-    * sensor *tmp17 .core :drawMaterials:item
+   64 sensor *tmp17 .core @copper
    65 op mul *tmp19 *tmp13 88
    66 op sub :drawItem:barLength 210 *tmp19
    67 op add :drawItem:textEnd 48 :drawItem:barLength
    68 op mul *tmp22 :drawItem:barLength *tmp17
    69 op div *tmp23 *tmp22 :drawMaterials:target
    70 op min :drawItem:length :drawItem:barLength *tmp23
-    * op mul *tmp26 :drawMaterials:col 88
-    * op add :drawItem:iconX 11 *tmp26
-    * op add :drawItem:barX 22 *tmp26
-    * op add :drawItem:textX :drawItem:textEnd *tmp26
+   71 op mul *tmp26 0 88
+   72 op add :drawItem:iconX 11 0
+   73 op add :drawItem:barX 22 0
+   74 op add :drawItem:textX :drawItem:textEnd 0
    75 draw col %[white]
-    * op add *tmp34 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp34 :drawMaterials:item 16 0
+   76 op add *tmp34 85 5
+   77 draw image 11 90 @copper 16 0
    78 draw color 0 128 0 255
-    * draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
+   79 draw rect 22 85 :drawItem:length 10
    80 draw color 0 255 0 255
-    * draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barLength 10
-    * op add *tmp36 :drawMaterials:y 7
+   81 draw lineRect 22 85 :drawItem:barLength 10
+   82 op add *tmp36 85 7
    83 print :drawMaterials:target
-    * draw print :drawItem:textX *tmp36 @right
+   84 draw print :drawItem:textX 92 @right
    85 label *label92
    86 label *label93
    87 op add :drawText.6:x :drawItem:textX 1
    88 print :drawMaterials:target
-    * draw print :drawText.6:x *tmp36 @right
+   89 draw print :drawText.6:x 92 @right
    90 label *label94
    91 label *label95
    92 label *label96
-    * op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label97 lessThan :drawMaterials:col *tmp13
+   93 op add :drawMaterials:col 0 1
+   94 jump *label97 lessThan 1 *tmp13
    95 set :drawMaterials:col 0
-    * op sub :drawMaterials:y :drawMaterials:y 15
+   96 op sub :drawMaterials:y 85 15
    97 label *label97
    98 label *label98
    99 label *label99
 
   109 set :drawMaterials:target .leadTarget
   110 label *label107
   111 jump *label118 lessThanEq :drawMaterials:target 0
-    * sensor *tmp17 .core :drawMaterials:item
+  112 sensor *tmp17 .core @lead
   113 op mul *tmp19 *tmp13 88
   114 op sub :drawItem:barLength 210 *tmp19
   115 op add :drawItem:textEnd 48 :drawItem:barLength
 
   122 op add :drawItem:textX :drawItem:textEnd *tmp26
   123 draw col %[white]
   124 op add *tmp34 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp34 :drawMaterials:item 16 0
+  125 draw image :drawItem:iconX *tmp34 @lead 16 0
   126 draw color 0 128 0 255
   127 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   128 draw color 0 255 0 255
 
   157 set :drawMaterials:target .graphiteTarget
   158 label *label123
   159 jump *label134 lessThanEq :drawMaterials:target 0
-    * sensor *tmp17 .core :drawMaterials:item
+  160 sensor *tmp17 .core @graphite
   161 op mul *tmp19 *tmp13 88
   162 op sub :drawItem:barLength 210 *tmp19
   163 op add :drawItem:textEnd 48 :drawItem:barLength
 
   170 op add :drawItem:textX :drawItem:textEnd *tmp26
   171 draw col %[white]
   172 op add *tmp34 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp34 :drawMaterials:item 16 0
+  173 draw image :drawItem:iconX *tmp34 @graphite 16 0
   174 draw color 0 128 0 255
   175 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   176 draw color 0 255 0 255
 
   205 set :drawMaterials:target .siliconTarget
   206 label *label139
   207 jump *label150 lessThanEq :drawMaterials:target 0
-    * sensor *tmp17 .core :drawMaterials:item
+  208 sensor *tmp17 .core @silicon
   209 op mul *tmp19 *tmp13 88
   210 op sub :drawItem:barLength 210 *tmp19
   211 op add :drawItem:textEnd 48 :drawItem:barLength
 
   218 op add :drawItem:textX :drawItem:textEnd *tmp26
   219 draw col %[white]
   220 op add *tmp34 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp34 :drawMaterials:item 16 0
+  221 draw image :drawItem:iconX *tmp34 @silicon 16 0
   222 draw color 0 128 0 255
   223 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   224 draw color 0 255 0 255
 
   253 set :drawMaterials:target .titaniumTarget
   254 label *label155
   255 jump *label166 lessThanEq :drawMaterials:target 0
-    * sensor *tmp17 .core :drawMaterials:item
+  256 sensor *tmp17 .core @titanium
   257 op mul *tmp19 *tmp13 88
   258 op sub :drawItem:barLength 210 *tmp19
   259 op add :drawItem:textEnd 48 :drawItem:barLength
 
   266 op add :drawItem:textX :drawItem:textEnd *tmp26
   267 draw col %[white]
   268 op add *tmp34 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp34 :drawMaterials:item 16 0
+  269 draw image :drawItem:iconX *tmp34 @titanium 16 0
   270 draw color 0 128 0 255
   271 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   272 draw color 0 255 0 255
 
   301 set :drawMaterials:target .metaglassTarget
   302 label *label171
   303 jump *label182 lessThanEq :drawMaterials:target 0
-    * sensor *tmp17 .core :drawMaterials:item
+  304 sensor *tmp17 .core @metaglass
   305 op mul *tmp19 *tmp13 88
   306 op sub :drawItem:barLength 210 *tmp19
   307 op add :drawItem:textEnd 48 :drawItem:barLength
 
   314 op add :drawItem:textX :drawItem:textEnd *tmp26
   315 draw col %[white]
   316 op add *tmp34 :drawMaterials:y 5
-    * draw image :drawItem:iconX *tmp34 :drawMaterials:item 16 0
+  317 draw image :drawItem:iconX *tmp34 @metaglass 16 0
   318 draw color 0 128 0 255
   319 draw rect :drawItem:barX :drawMaterials:y :drawItem:length 10
   320 draw color 0 255 0 255
 
   332 label *label176
   333 op add :drawMaterials:col :drawMaterials:col 1
   334 jump *label177 lessThan :drawMaterials:col *tmp13
-    * set :drawMaterials:col 0
-    * op sub :drawMaterials:y :drawMaterials:y 15
   335 label *label177
   336 label *label178
   337 label *label179

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
    57 set *tmp13 2
    58 jump *label26 always
    59 label *label26
-    * set :drawMaterials:item @copper
    60 set :drawMaterials:target .copperTarget
    61 label *label91
    62 jump *label102 lessThanEq :drawMaterials:target 0
 
    67 op mul *tmp22 :drawItem:barLength *tmp17
    68 op div *tmp23 *tmp22 :drawMaterials:target
    69 op min :drawItem:length :drawItem:barLength *tmp23
-    * op mul *tmp26 0 88
-    * op add :drawItem:iconX 11 0
-    * op add :drawItem:barX 22 0
-    * op add :drawItem:textX :drawItem:textEnd 0
+   70 op add :drawItem:textX :drawItem:barLength 48
    71 draw col %[white]
-    * op add *tmp34 85 5
    72 draw image 11 90 @copper 16 0
    73 draw color 0 128 0 255
    74 draw rect 22 85 :drawItem:length 10
    75 draw color 0 255 0 255
    76 draw lineRect 22 85 :drawItem:barLength 10
-    * op add *tmp36 85 7
    77 print :drawMaterials:target
    78 draw print :drawItem:textX 92 @right
    79 label *label92
 
    99 label *label102
   100 label *label103
   101 label *label104
-    * set :drawMaterials:item @lead
   102 set :drawMaterials:target .leadTarget
   103 label *label107
   104 jump *label118 lessThanEq :drawMaterials:target 0
 
   146 label *label118
   147 label *label119
   148 label *label120
-    * set :drawMaterials:item @graphite
   149 set :drawMaterials:target .graphiteTarget
   150 label *label123
   151 jump *label134 lessThanEq :drawMaterials:target 0
 
   193 label *label134
   194 label *label135
   195 label *label136
-    * set :drawMaterials:item @silicon
   196 set :drawMaterials:target .siliconTarget
   197 label *label139
   198 jump *label150 lessThanEq :drawMaterials:target 0
 
   240 label *label150
   241 label *label151
   242 label *label152
-    * set :drawMaterials:item @titanium
   243 set :drawMaterials:target .titaniumTarget
   244 label *label155
   245 jump *label166 lessThanEq :drawMaterials:target 0
 
   287 label *label166
   288 label *label167
   289 label *label168
-    * set :drawMaterials:item @metaglass
   290 set :drawMaterials:target .metaglassTarget
   291 label *label171
   292 jump *label182 lessThanEq :drawMaterials:target 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3:
 
    75 draw color 0 255 0 255
    76 draw lineRect 22 85 :drawItem:barLength 10
    77 print :drawMaterials:target
-    * draw print :drawItem:textX 92 @right
+   78 draw print :drawItem:textEnd 92 @right
    79 label *label92
    80 label *label93
-    * op add :drawText.6:x :drawItem:textX 1
+   81 op add :drawText.6:x :drawItem:textEnd 1
    82 print :drawMaterials:target
    83 draw print :drawText.6:x 92 @right
    84 label *label94

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-1 instructions):
 
    67 op mul *tmp22 :drawItem:barLength *tmp17
    68 op div *tmp23 *tmp22 :drawMaterials:target
    69 op min :drawItem:length :drawItem:barLength *tmp23
-    * op add :drawItem:textX :drawItem:barLength 48
    70 draw col %[white]
    71 draw image 11 90 @copper 16 0
    72 draw color 0 128 0 255
 
    77 draw print :drawItem:textEnd 92 @right
    78 label *label92
    79 label *label93
-    * op add :drawText.6:x :drawItem:textEnd 1
+   80 op add :drawText.6:x :drawItem:barLength 49
    81 print :drawMaterials:target
    82 draw print :drawText.6:x 92 @right
    83 label *label94

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-2 instructions):
 
   363 label *label62
   364 label *label61
   365 label *label58
-    * jump *label63 lessThan 1 1
   366 label *label63
   367 label *label64
   368 label *label57
 
   394 label *label71
   395 label *label70
   396 label *label67
-    * jump *label72 lessThan 1 1
   397 label *label72
   398 label *label73
   399 label *label66

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-4 instructions):
 
    29 set *tmp10 ""
    30 jump *label16 greaterThanEq :drawHeader:s 10
    31 set *tmp10 "0"
-    * jump *label16 always
    32 label *label16
    33 print :drawHeader:m
    34 print ":"
 
    54 set *tmp13 1
    55 jump *label26 lessThanEq :drawMaterials:count 2
    56 set *tmp13 2
-    * jump *label26 always
    57 label *label26
    58 set :drawMaterials:target .copperTarget
    59 label *label91
 
   317 label *label175
   318 label *label176
   319 op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label177 lessThan :drawMaterials:col *tmp13
   320 label *label177
   321 label *label178
   322 label *label179
   323 op sub :drawMaterials:count :drawMaterials:count 1
   324 jump *label180 greaterThan :drawMaterials:count 0
-    * jump *label29 always
   325 label *label180
   326 label *label181
   327 label *label182

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-1 instructions):
 
   321 label *label178
   322 label *label179
   323 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label180 greaterThan :drawMaterials:count 0
   324 label *label180
   325 label *label181
   326 label *label182

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    81 label *label94
    82 label *label95
    83 label *label96
-    * op add :drawMaterials:col 0 1
+   84 set :drawMaterials:col 1
    85 jump *label97 lessThan 1 *tmp13
    86 set :drawMaterials:col 0
    87 op sub :drawMaterials:y 85 15
 
   341 jump *label54 notEqual .transportItem null
   342 set :drawItem.1:target .transportTarget
   343 set :drawItem.1:count .transportTarget
-    * op div *tmp50 0 :drawItem.1:target
+  344 set *tmp50 0
   345 op min :drawItem.1:length 122 *tmp50
   346 draw col %[white]
   347 draw image 11 34 @poly 16 0

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-3 instructions):
 
   316 label *label174
   317 label *label175
   318 label *label176
-    * op add :drawMaterials:col :drawMaterials:col 1
   319 label *label177
   320 label *label178
   321 label *label179
-    * op sub :drawMaterials:count :drawMaterials:count 1
   322 label *label180
   323 label *label181
   324 label *label182
 
   337 label *label52
   338 label *label49
   339 jump *label54 notEqual .transportItem null
-    * set :drawItem.1:target .transportTarget
   340 set :drawItem.1:count .transportTarget
   341 set *tmp50 0
-    * op min :drawItem.1:length 122 *tmp50
+  342 op min :drawItem.1:length 122 0
   343 draw col %[white]
   344 draw image 11 34 @poly 16 0
   345 draw color 0 128 0 255
-    * draw rect 22 29 :drawItem.1:length 10
+  346 draw rect 22 29 0 10
   347 draw color 0 255 0 255
   348 draw lineRect 22 29 122 10
   349 print :drawItem.1:count

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-2 instructions):
 
   338 label *label49
   339 jump *label54 notEqual .transportItem null
   340 set :drawItem.1:count .transportTarget
-    * set *tmp50 0
-    * op min :drawItem.1:length 122 0
   341 draw col %[white]
   342 draw image 11 34 @poly 16 0
   343 draw color 0 128 0 255

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
     3 label *label2
     4 ubind @poly
     5 ulocate building core false @copper 0 0 0 .core
-    * label *label3
     6 jump *label2 equal .core null
-    * label *label4
     7 printflush null
     8 drawflush null
     9 label *label5
 
    12 draw col %[gold]
    13 print "Building"
    14 draw print 40 161 @bottom
-    * label *label12
-    * label *label11
    15 print "Building"
    16 draw print 41 161 @bottom
-    * label *label14
-    * label *label13
-    * label *label10
    17 draw col %[white]
    18 draw image 40 137 .nextBlock 32 0
    19 op floor :drawHeader:t @second
 
    29 print :drawHeader:s
    30 print ""
    31 draw print 168 172 @topRight
-    * label *label18
-    * label *label17
-    * label *label9
    32 print "Materials"
    33 draw print 22 101 @bottomLeft
-    * label *label22
-    * label *label21
    34 print "Materials"
    35 draw print 23 101 @bottomLeft
-    * label *label24
-    * label *label23
-    * label *label20
    36 set :drawMaterials:col 0
    37 set :drawMaterials:y 85
    38 set :drawMaterials:count .totalTargets
 
    41 set *tmp13 2
    42 label *label26
    43 set :drawMaterials:target .copperTarget
-    * label *label91
    44 jump *label102 lessThanEq :drawMaterials:target 0
    45 sensor *tmp17 .core @copper
    46 op mul *tmp19 *tmp13 88
 
    57 draw lineRect 22 85 :drawItem:barLength 10
    58 print :drawMaterials:target
    59 draw print :drawItem:textEnd 92 @right
-    * label *label92
-    * label *label93
    60 op add :drawText.6:x :drawItem:barLength 49
    61 print :drawMaterials:target
    62 draw print :drawText.6:x 92 @right
-    * label *label94
-    * label *label95
-    * label *label96
    63 set :drawMaterials:col 1
    64 jump *label97 lessThan 1 *tmp13
    65 set :drawMaterials:col 0
    66 op sub :drawMaterials:y 85 15
    67 label *label97
-    * label *label98
-    * label *label99
    68 op sub :drawMaterials:count :drawMaterials:count 1
    69 jump *label100 greaterThan :drawMaterials:count 0
    70 jump *label29 always
    71 label *label100
-    * label *label101
    72 label *label102
-    * label *label103
-    * label *label104
    73 set :drawMaterials:target .leadTarget
-    * label *label107
    74 jump *label118 lessThanEq :drawMaterials:target 0
    75 sensor *tmp17 .core @lead
    76 op mul *tmp19 *tmp13 88
 
    93 op add *tmp36 :drawMaterials:y 7
    94 print :drawMaterials:target
    95 draw print :drawItem:textX *tmp36 @right
-    * label *label108
-    * label *label109
    96 op add :drawText.6:x :drawItem:textX 1
    97 print :drawMaterials:target
    98 draw print :drawText.6:x *tmp36 @right
-    * label *label110
-    * label *label111
-    * label *label112
    99 op add :drawMaterials:col :drawMaterials:col 1
   100 jump *label113 lessThan :drawMaterials:col *tmp13
   101 set :drawMaterials:col 0
   102 op sub :drawMaterials:y :drawMaterials:y 15
   103 label *label113
-    * label *label114
-    * label *label115
   104 op sub :drawMaterials:count :drawMaterials:count 1
   105 jump *label116 greaterThan :drawMaterials:count 0
   106 jump *label29 always
   107 label *label116
-    * label *label117
   108 label *label118
-    * label *label119
-    * label *label120
   109 set :drawMaterials:target .graphiteTarget
-    * label *label123
   110 jump *label134 lessThanEq :drawMaterials:target 0
   111 sensor *tmp17 .core @graphite
   112 op mul *tmp19 *tmp13 88
 
   129 op add *tmp36 :drawMaterials:y 7
   130 print :drawMaterials:target
   131 draw print :drawItem:textX *tmp36 @right
-    * label *label124
-    * label *label125
   132 op add :drawText.6:x :drawItem:textX 1
   133 print :drawMaterials:target
   134 draw print :drawText.6:x *tmp36 @right
-    * label *label126
-    * label *label127
-    * label *label128
   135 op add :drawMaterials:col :drawMaterials:col 1
   136 jump *label129 lessThan :drawMaterials:col *tmp13
   137 set :drawMaterials:col 0
   138 op sub :drawMaterials:y :drawMaterials:y 15
   139 label *label129
-    * label *label130
-    * label *label131
   140 op sub :drawMaterials:count :drawMaterials:count 1
   141 jump *label132 greaterThan :drawMaterials:count 0
   142 jump *label29 always
   143 label *label132
-    * label *label133
   144 label *label134
-    * label *label135
-    * label *label136
   145 set :drawMaterials:target .siliconTarget
-    * label *label139
   146 jump *label150 lessThanEq :drawMaterials:target 0
   147 sensor *tmp17 .core @silicon
   148 op mul *tmp19 *tmp13 88
 
   165 op add *tmp36 :drawMaterials:y 7
   166 print :drawMaterials:target
   167 draw print :drawItem:textX *tmp36 @right
-    * label *label140
-    * label *label141
   168 op add :drawText.6:x :drawItem:textX 1
   169 print :drawMaterials:target
   170 draw print :drawText.6:x *tmp36 @right
-    * label *label142
-    * label *label143
-    * label *label144
   171 op add :drawMaterials:col :drawMaterials:col 1
   172 jump *label145 lessThan :drawMaterials:col *tmp13
   173 set :drawMaterials:col 0
   174 op sub :drawMaterials:y :drawMaterials:y 15
   175 label *label145
-    * label *label146
-    * label *label147
   176 op sub :drawMaterials:count :drawMaterials:count 1
   177 jump *label148 greaterThan :drawMaterials:count 0
   178 jump *label29 always
   179 label *label148
-    * label *label149
   180 label *label150
-    * label *label151
-    * label *label152
   181 set :drawMaterials:target .titaniumTarget
-    * label *label155
   182 jump *label166 lessThanEq :drawMaterials:target 0
   183 sensor *tmp17 .core @titanium
   184 op mul *tmp19 *tmp13 88
 
   201 op add *tmp36 :drawMaterials:y 7
   202 print :drawMaterials:target
   203 draw print :drawItem:textX *tmp36 @right
-    * label *label156
-    * label *label157
   204 op add :drawText.6:x :drawItem:textX 1
   205 print :drawMaterials:target
   206 draw print :drawText.6:x *tmp36 @right
-    * label *label158
-    * label *label159
-    * label *label160
   207 op add :drawMaterials:col :drawMaterials:col 1
   208 jump *label161 lessThan :drawMaterials:col *tmp13
   209 set :drawMaterials:col 0
   210 op sub :drawMaterials:y :drawMaterials:y 15
   211 label *label161
-    * label *label162
-    * label *label163
   212 op sub :drawMaterials:count :drawMaterials:count 1
   213 jump *label164 greaterThan :drawMaterials:count 0
   214 jump *label29 always
   215 label *label164
-    * label *label165
   216 label *label166
-    * label *label167
-    * label *label168
   217 set :drawMaterials:target .metaglassTarget
-    * label *label171
   218 jump *label182 lessThanEq :drawMaterials:target 0
   219 sensor *tmp17 .core @metaglass
   220 op mul *tmp19 *tmp13 88
 
   237 op add *tmp36 :drawMaterials:y 7
   238 print :drawMaterials:target
   239 draw print :drawItem:textX *tmp36 @right
-    * label *label172
-    * label *label173
   240 op add :drawText.6:x :drawItem:textX 1
   241 print :drawMaterials:target
   242 draw print :drawText.6:x *tmp36 @right
-    * label *label174
-    * label *label175
-    * label *label176
-    * label *label177
-    * label *label178
-    * label *label179
-    * label *label180
-    * label *label181
   243 label *label182
-    * label *label183
-    * label *label184
   244 label *label29
-    * label *label19
   245 draw col %[white]
   246 print "Main unit"
   247 draw print 22 45 @bottomLeft
-    * label *label51
-    * label *label50
   248 print "Main unit"
   249 draw print 23 45 @bottomLeft
-    * label *label53
-    * label *label52
-    * label *label49
   250 jump *label54 notEqual .transportItem null
   251 set :drawItem.1:count .transportTarget
   252 draw col %[white]
 
   257 draw lineRect 22 29 122 10
   258 print :drawItem.1:count
   259 draw print 170 36 @right
-    * label *label60
-    * label *label59
   260 print :drawItem.1:count
   261 draw print 171 36 @right
-    * label *label62
-    * label *label61
-    * label *label58
-    * label *label63
-    * label *label64
-    * label *label57
-    * label *label56
   262 jump *label55 always
   263 label *label54
   264 sensor :drawUnit:unitItem @unit @firstItem
 
   279 draw lineRect 22 29 122 10
   280 print :drawItem.2:count
   281 draw print 170 36 @right
-    * label *label69
-    * label *label68
   282 print :drawItem.2:count
   283 draw print 171 36 @right
-    * label *label71
-    * label *label70
-    * label *label67
-    * label *label72
-    * label *label73
-    * label *label66
-    * label *label65
   284 label *label55
-    * label *label48
   285 set :drawUnits:x 10
   286 draw col %[white]
   287 set :drawUnitCount:count .flares
 
   290 print "x"
   291 print :drawUnitCount:count
   292 draw print 17 10 @left
-    * label *label79
-    * label *label78
   293 op add :drawUnits:x 10 30
   294 label *label76
-    * label *label77
-    * label *label75
   295 set :drawUnitCount.1:count .monos
   296 jump *label81 lessThanEq :drawUnitCount.1:count 0
   297 draw image :drawUnits:x 8 @mono 12 0
 
   299 op add :drawText.14:x :drawUnits:x 7
   300 print :drawUnitCount.1:count
   301 draw print :drawText.14:x 10 @left
-    * label *label84
-    * label *label83
   302 op add :drawUnits:x :drawUnits:x 30
   303 label *label81
-    * label *label82
-    * label *label80
   304 set :drawUnitCount.2:count .polys
   305 jump *label86 lessThanEq :drawUnitCount.2:count 0
   306 draw image :drawUnits:x 8 @poly 12 0
 
   308 op add :drawText.15:x :drawUnits:x 7
   309 print :drawUnitCount.2:count
   310 draw print :drawText.15:x 10 @left
-    * label *label89
-    * label *label88
   311 label *label86
-    * label *label87
-    * label *label85
-    * label *label74
   312 drawflush display1
-    * label *label8
   313 print "[gold]Building "
   314 print .nextBlock
   315 print "\n"
 
   327 print .status3
   328 print "\n"
   329 printflush message1
-    * label *label90
-    * label *label6
   330 jump *label5 always
-    * label *label7
-    * label *label1
   331 wait 1e12
   332 jump *label0 always
   333 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-5 instructions):
 
    66 op sub :drawMaterials:y 85 15
    67 label *label97
    68 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label100 greaterThan :drawMaterials:count 0
-    * jump *label29 always
+   69 jump *label29 lessThanEq :drawMaterials:count 0
    70 label *label100
    71 label *label102
    72 set :drawMaterials:target .leadTarget
 
   101 op sub :drawMaterials:y :drawMaterials:y 15
   102 label *label113
   103 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label116 greaterThan :drawMaterials:count 0
-    * jump *label29 always
+  104 jump *label29 lessThanEq :drawMaterials:count 0
   105 label *label116
   106 label *label118
   107 set :drawMaterials:target .graphiteTarget
 
   136 op sub :drawMaterials:y :drawMaterials:y 15
   137 label *label129
   138 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label132 greaterThan :drawMaterials:count 0
-    * jump *label29 always
+  139 jump *label29 lessThanEq :drawMaterials:count 0
   140 label *label132
   141 label *label134
   142 set :drawMaterials:target .siliconTarget
 
   171 op sub :drawMaterials:y :drawMaterials:y 15
   172 label *label145
   173 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label148 greaterThan :drawMaterials:count 0
-    * jump *label29 always
+  174 jump *label29 lessThanEq :drawMaterials:count 0
   175 label *label148
   176 label *label150
   177 set :drawMaterials:target .titaniumTarget
 
   206 op sub :drawMaterials:y :drawMaterials:y 15
   207 label *label161
   208 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label164 greaterThan :drawMaterials:count 0
-    * jump *label29 always
+  209 jump *label29 lessThanEq :drawMaterials:count 0
   210 label *label164
   211 label *label166
   212 set :drawMaterials:target .metaglassTarget

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
    67 label *label97
    68 op sub :drawMaterials:count :drawMaterials:count 1
    69 jump *label29 lessThanEq :drawMaterials:count 0
-    * label *label100
    70 label *label102
    71 set :drawMaterials:target .leadTarget
    72 jump *label118 lessThanEq :drawMaterials:target 0
 
   101 label *label113
   102 op sub :drawMaterials:count :drawMaterials:count 1
   103 jump *label29 lessThanEq :drawMaterials:count 0
-    * label *label116
   104 label *label118
   105 set :drawMaterials:target .graphiteTarget
   106 jump *label134 lessThanEq :drawMaterials:target 0
 
   135 label *label129
   136 op sub :drawMaterials:count :drawMaterials:count 1
   137 jump *label29 lessThanEq :drawMaterials:count 0
-    * label *label132
   138 label *label134
   139 set :drawMaterials:target .siliconTarget
   140 jump *label150 lessThanEq :drawMaterials:target 0
 
   169 label *label145
   170 op sub :drawMaterials:count :drawMaterials:count 1
   171 jump *label29 lessThanEq :drawMaterials:count 0
-    * label *label148
   172 label *label150
   173 set :drawMaterials:target .titaniumTarget
   174 jump *label166 lessThanEq :drawMaterials:target 0
 
   203 label *label161
   204 op sub :drawMaterials:count :drawMaterials:count 1
   205 jump *label29 lessThanEq :drawMaterials:count 0
-    * label *label164
   206 label *label166
   207 set :drawMaterials:target .metaglassTarget
   208 jump *label182 lessThanEq :drawMaterials:target 0

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-3 instructions):
 
   318 print "\n"
   319 printflush message1
   320 jump *label5 always
-    * wait 1e12
-    * jump *label0 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
     0 set .core null
     1 set *signature "0:v1"
-    * label *label0
     2 label *label2
     3 ubind @poly
     4 ulocate building core false @copper 0 0 0 .core

Modifications by Final phase, Print Merging, iteration 1 (-10 instructions):
 
    23 set *tmp10 "0"
    24 label *label16
    25 print :drawHeader:m
-    * print ":"
-    * print *tmp10
-    * print :drawHeader:s
-    * print ""
+   26 print ":{0}{0}"
+   27 format *tmp10
+   28 format :drawHeader:s
    29 draw print 168 172 @topRight
    30 print "Materials"
    31 draw print 22 101 @bottomLeft
 
   298 draw print :drawText.15:x 10 @left
   299 label *label86
   300 drawflush display1
-    * print "[gold]Building "
-    * print .nextBlock
-    * print "\n"
-    * print "==================================[]"
-    * print "\n"
-    * print .status1
-    * print "\n"
-    * print .status2
-    * print .item2
-    * print " "
-    * print "("
-    * print .block2
-    * print ")"
-    * print "\n"
-    * print .status3
-    * print "\n"
+  301 print "[gold]Building {0}\n==================================[]\n{0}\n{0}{0} ({0})\n{0}\n"
+  302 format .nextBlock
+  303 format .status1
+  304 format .status2
+  305 format .item2
+  306 format .block2
+  307 format .status3
   308 printflush message1
   309 jump *label5 always

Final code before resolving virtual instructions:

    0:  jump *label188 always 0 0                                    var core = null;
    1:  draw triangle display1 message1 .block2 .copperTarget .core  ...
    2:  draw triangle .graphiteTarget .item2 .leadTarget .metaglassT ...
    3:  draw triangle .polys .siliconTarget .status1 .status2 .statu ...
    4:  draw triangle .totalTargets .transportItem .transportTarget  ...
    5:  draw triangle :drawItem:barLength :drawItem:barX :drawItem.2 ...
    6:  draw triangle :drawItem.2:length :drawItem.2:target :drawIte ...
    7:  draw triangle :drawMaterials:target :drawMaterials:y :drawTe ...
    8:  draw triangle :drawUnit:unitItem :drawUnitCount:count :drawU ...
        label *label188                                              ...
    9:  set .core null                                               ...
   10:  set *signature "0:v1"                                        #set target = 8;
        label *label2                                                do
   11:  ubind @poly                                                  ubind(@poly);
   12:  ulocate building core false @copper 0 0 0 .core              core = ulocate(:building, :core, false);
   13:  jump *label2 equal .core null                                do
   14:  printflush null                                              printflush(null);
   15:  drawflush null                                               drawflush(null);
        label *label5                                                while true do
   16:  draw reset 0 0 0 0 0 0                                       reset();
   17:  draw clear 0 0 32 0 0 0                                      clear(0, 0, 32);
   18:  draw col %[gold] 0 0 0 0 0                                   col(%[gold]);
   19:  print "Building"                                             print(text);
   20:  draw print 40 161 @bottom                                    mlogText("draw", "print", in x, in y, in alignment);
   21:  print "Building"                                             print(text);
   22:  draw print 41 161 @bottom                                    mlogText("draw", "print", in x, in y, in alignment);
   23:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
   24:  draw image 40 137 .nextBlock 32 0 0                          image(HEADER_X, HEADER_Y - 24, nextBlock, 32, 0);
   25:  op floor :drawHeader:t @second 0                             var t = floor(@second);
   26:  op idiv :drawHeader:m :drawHeader:t 60                       var m = t \ 60;
   27:  op mod :drawHeader:s :drawHeader:t 60                        var s = t % 60;
   28:  set *tmp10 ""                                                print(m, ":", s < 10 ? "0" : "", s);
   29:  jump *label16 greaterThanEq :drawHeader:s 10                 ...
   30:  set *tmp10 "0"                                               ...
        label *label16                                               ...
   31:  print :drawHeader:m                                          ...
   32:  print ":{0}{0}"                                              ...
   33:  format *tmp10                                                ...
   34:  format :drawHeader:s                                         ...
   35:  draw print 168 172 @topRight                                 mlogText("draw", "print", in x, in y, in alignment);
   36:  print "Materials"                                            print(text);
   37:  draw print 22 101 @bottomLeft                                mlogText("draw", "print", in x, in y, in alignment);
   38:  print "Materials"                                            print(text);
   39:  draw print 23 101 @bottomLeft                                mlogText("draw", "print", in x, in y, in alignment);
   40:  set :drawMaterials:col 0                                     var col = 0, y = 85;
   41:  set :drawMaterials:y 85                                      ...
   42:  set :drawMaterials:count .totalTargets                       var count = totalTargets;
   43:  set *tmp13 1                                                 var columns = count > 2 ? 2 : 1;
   44:  jump *label26 lessThanEq :drawMaterials:count 2              ...
   45:  set *tmp13 2                                                 ...
        label *label26                                               ...
   46:  set :drawMaterials:target .copperTarget                      for var item, target in
   47:  jump *label102 lessThanEq :drawMaterials:target 0            if target > 0 then
   48:  sensor *tmp17 .core @copper                                  drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
   49:  op mul *tmp19 *tmp13 88                                      var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
   50:  op sub :drawItem:barLength 210 *tmp19                        ...
   51:  op add :drawItem:textEnd 48 :drawItem:barLength              var textEnd = 170 - BAR_LENGTH + barLength;
   52:  op mul *tmp22 :drawItem:barLength *tmp17                     var length = min(barLength, barLength * current / target);
   53:  op div *tmp23 *tmp22 :drawMaterials:target                   ...
   54:  op min :drawItem:length :drawItem:barLength *tmp23           ...
   55:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
   56:  draw image 11 90 @copper 16 0 0                              image(iconX, y + ICON_Y, item, 16, 0);
   57:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
   58:  draw rect 22 85 :drawItem:length 10 0 0                      rect(barX, y, length, BAR_HEIGHT);
   59:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
   60:  draw lineRect 22 85 :drawItem:barLength 10 0 0               lineRect(barX, y, barLength, BAR_HEIGHT);
   61:  print :drawMaterials:target                                  print(text);
   62:  draw print :drawItem:textEnd 92 @right                       mlogText("draw", "print", in x, in y, in alignment);
   63:  op add :drawText.6:x :drawItem:barLength 49                  drawText(x + 1, y, alignment, text);
   64:  print :drawMaterials:target                                  print(text);
   65:  draw print :drawText.6:x 92 @right                           mlogText("draw", "print", in x, in y, in alignment);
   66:  set :drawMaterials:col 1                                     if ++col >= columns then
   67:  jump *label97 lessThan 1 *tmp13                              ...
   68:  set :drawMaterials:col 0                                     col = 0;
   69:  op sub :drawMaterials:y 85 15                                y -= ROW_HEIGHT;
        label *label97                                               if ++col >= columns then
   70:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
   71:  jump *label29 lessThanEq :drawMaterials:count 0              ...
        label *label102                                              if target > 0 then
   72:  set :drawMaterials:target .leadTarget                        for var item, target in
   73:  jump *label118 lessThanEq :drawMaterials:target 0            if target > 0 then
   74:  sensor *tmp17 .core @lead                                    drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
   75:  op mul *tmp19 *tmp13 88                                      var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
   76:  op sub :drawItem:barLength 210 *tmp19                        ...
   77:  op add :drawItem:textEnd 48 :drawItem:barLength              var textEnd = 170 - BAR_LENGTH + barLength;
   78:  op mul *tmp22 :drawItem:barLength *tmp17                     var length = min(barLength, barLength * current / target);
   79:  op div *tmp23 *tmp22 :drawMaterials:target                   ...
   80:  op min :drawItem:length :drawItem:barLength *tmp23           ...
   81:  op mul *tmp26 :drawMaterials:col 88                          var iconX = ICON_X + col * 176 / 2;
   82:  op add :drawItem:iconX 11 *tmp26                             ...
   83:  op add :drawItem:barX 22 *tmp26                              var barX = BAR_X + col * 176 / 2;
   84:  op add :drawItem:textX :drawItem:textEnd *tmp26              var textX = textEnd + col * 176 / 2;
   85:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
   86:  op add *tmp34 :drawMaterials:y 5                             image(iconX, y + ICON_Y, item, 16, 0);
   87:  draw image :drawItem:iconX *tmp34 @lead 16 0 0               ...
   88:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
   89:  draw rect :drawItem:barX :drawMaterials:y :drawItem:length 1 rect(barX, y, length, BAR_HEIGHT);
   90:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
   91:  draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barL lineRect(barX, y, barLength, BAR_HEIGHT);
   92:  op add *tmp36 :drawMaterials:y 7                             drawBold(textX, y + ICON_Y + 2, @right, count);
   93:  print :drawMaterials:target                                  print(text);
   94:  draw print :drawItem:textX *tmp36 @right                     mlogText("draw", "print", in x, in y, in alignment);
   95:  op add :drawText.6:x :drawItem:textX 1                       drawText(x + 1, y, alignment, text);
   96:  print :drawMaterials:target                                  print(text);
   97:  draw print :drawText.6:x *tmp36 @right                       mlogText("draw", "print", in x, in y, in alignment);
   98:  op add :drawMaterials:col :drawMaterials:col 1               if ++col >= columns then
   99:  jump *label113 lessThan :drawMaterials:col *tmp13            ...
  100:  set :drawMaterials:col 0                                     col = 0;
  101:  op sub :drawMaterials:y :drawMaterials:y 15                  y -= ROW_HEIGHT;
        label *label113                                              if ++col >= columns then
  102:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
  103:  jump *label29 lessThanEq :drawMaterials:count 0              ...
        label *label118                                              if target > 0 then
  104:  set :drawMaterials:target .graphiteTarget                    for var item, target in
  105:  jump *label134 lessThanEq :drawMaterials:target 0            if target > 0 then
  106:  sensor *tmp17 .core @graphite                                drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
  107:  op mul *tmp19 *tmp13 88                                      var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  108:  op sub :drawItem:barLength 210 *tmp19                        ...
  109:  op add :drawItem:textEnd 48 :drawItem:barLength              var textEnd = 170 - BAR_LENGTH + barLength;
  110:  op mul *tmp22 :drawItem:barLength *tmp17                     var length = min(barLength, barLength * current / target);
  111:  op div *tmp23 *tmp22 :drawMaterials:target                   ...
  112:  op min :drawItem:length :drawItem:barLength *tmp23           ...
  113:  op mul *tmp26 :drawMaterials:col 88                          var iconX = ICON_X + col * 176 / 2;
  114:  op add :drawItem:iconX 11 *tmp26                             ...
  115:  op add :drawItem:barX 22 *tmp26                              var barX = BAR_X + col * 176 / 2;
  116:  op add :drawItem:textX :drawItem:textEnd *tmp26              var textX = textEnd + col * 176 / 2;
  117:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  118:  op add *tmp34 :drawMaterials:y 5                             image(iconX, y + ICON_Y, item, 16, 0);
  119:  draw image :drawItem:iconX *tmp34 @graphite 16 0 0           ...
  120:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  121:  draw rect :drawItem:barX :drawMaterials:y :drawItem:length 1 rect(barX, y, length, BAR_HEIGHT);
  122:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  123:  draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barL lineRect(barX, y, barLength, BAR_HEIGHT);
  124:  op add *tmp36 :drawMaterials:y 7                             drawBold(textX, y + ICON_Y + 2, @right, count);
  125:  print :drawMaterials:target                                  print(text);
  126:  draw print :drawItem:textX *tmp36 @right                     mlogText("draw", "print", in x, in y, in alignment);
  127:  op add :drawText.6:x :drawItem:textX 1                       drawText(x + 1, y, alignment, text);
  128:  print :drawMaterials:target                                  print(text);
  129:  draw print :drawText.6:x *tmp36 @right                       mlogText("draw", "print", in x, in y, in alignment);
  130:  op add :drawMaterials:col :drawMaterials:col 1               if ++col >= columns then
  131:  jump *label129 lessThan :drawMaterials:col *tmp13            ...
  132:  set :drawMaterials:col 0                                     col = 0;
  133:  op sub :drawMaterials:y :drawMaterials:y 15                  y -= ROW_HEIGHT;
        label *label129                                              if ++col >= columns then
  134:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
  135:  jump *label29 lessThanEq :drawMaterials:count 0              ...
        label *label134                                              if target > 0 then
  136:  set :drawMaterials:target .siliconTarget                     for var item, target in
  137:  jump *label150 lessThanEq :drawMaterials:target 0            if target > 0 then
  138:  sensor *tmp17 .core @silicon                                 drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
  139:  op mul *tmp19 *tmp13 88                                      var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  140:  op sub :drawItem:barLength 210 *tmp19                        ...
  141:  op add :drawItem:textEnd 48 :drawItem:barLength              var textEnd = 170 - BAR_LENGTH + barLength;
  142:  op mul *tmp22 :drawItem:barLength *tmp17                     var length = min(barLength, barLength * current / target);
  143:  op div *tmp23 *tmp22 :drawMaterials:target                   ...
  144:  op min :drawItem:length :drawItem:barLength *tmp23           ...
  145:  op mul *tmp26 :drawMaterials:col 88                          var iconX = ICON_X + col * 176 / 2;
  146:  op add :drawItem:iconX 11 *tmp26                             ...
  147:  op add :drawItem:barX 22 *tmp26                              var barX = BAR_X + col * 176 / 2;
  148:  op add :drawItem:textX :drawItem:textEnd *tmp26              var textX = textEnd + col * 176 / 2;
  149:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  150:  op add *tmp34 :drawMaterials:y 5                             image(iconX, y + ICON_Y, item, 16, 0);
  151:  draw image :drawItem:iconX *tmp34 @silicon 16 0 0            ...
  152:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  153:  draw rect :drawItem:barX :drawMaterials:y :drawItem:length 1 rect(barX, y, length, BAR_HEIGHT);
  154:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  155:  draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barL lineRect(barX, y, barLength, BAR_HEIGHT);
  156:  op add *tmp36 :drawMaterials:y 7                             drawBold(textX, y + ICON_Y + 2, @right, count);
  157:  print :drawMaterials:target                                  print(text);
  158:  draw print :drawItem:textX *tmp36 @right                     mlogText("draw", "print", in x, in y, in alignment);
  159:  op add :drawText.6:x :drawItem:textX 1                       drawText(x + 1, y, alignment, text);
  160:  print :drawMaterials:target                                  print(text);
  161:  draw print :drawText.6:x *tmp36 @right                       mlogText("draw", "print", in x, in y, in alignment);
  162:  op add :drawMaterials:col :drawMaterials:col 1               if ++col >= columns then
  163:  jump *label145 lessThan :drawMaterials:col *tmp13            ...
  164:  set :drawMaterials:col 0                                     col = 0;
  165:  op sub :drawMaterials:y :drawMaterials:y 15                  y -= ROW_HEIGHT;
        label *label145                                              if ++col >= columns then
  166:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
  167:  jump *label29 lessThanEq :drawMaterials:count 0              ...
        label *label150                                              if target > 0 then
  168:  set :drawMaterials:target .titaniumTarget                    for var item, target in
  169:  jump *label166 lessThanEq :drawMaterials:target 0            if target > 0 then
  170:  sensor *tmp17 .core @titanium                                drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
  171:  op mul *tmp19 *tmp13 88                                      var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  172:  op sub :drawItem:barLength 210 *tmp19                        ...
  173:  op add :drawItem:textEnd 48 :drawItem:barLength              var textEnd = 170 - BAR_LENGTH + barLength;
  174:  op mul *tmp22 :drawItem:barLength *tmp17                     var length = min(barLength, barLength * current / target);
  175:  op div *tmp23 *tmp22 :drawMaterials:target                   ...
  176:  op min :drawItem:length :drawItem:barLength *tmp23           ...
  177:  op mul *tmp26 :drawMaterials:col 88                          var iconX = ICON_X + col * 176 / 2;
  178:  op add :drawItem:iconX 11 *tmp26                             ...
  179:  op add :drawItem:barX 22 *tmp26                              var barX = BAR_X + col * 176 / 2;
  180:  op add :drawItem:textX :drawItem:textEnd *tmp26              var textX = textEnd + col * 176 / 2;
  181:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  182:  op add *tmp34 :drawMaterials:y 5                             image(iconX, y + ICON_Y, item, 16, 0);
  183:  draw image :drawItem:iconX *tmp34 @titanium 16 0 0           ...
  184:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  185:  draw rect :drawItem:barX :drawMaterials:y :drawItem:length 1 rect(barX, y, length, BAR_HEIGHT);
  186:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  187:  draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barL lineRect(barX, y, barLength, BAR_HEIGHT);
  188:  op add *tmp36 :drawMaterials:y 7                             drawBold(textX, y + ICON_Y + 2, @right, count);
  189:  print :drawMaterials:target                                  print(text);
  190:  draw print :drawItem:textX *tmp36 @right                     mlogText("draw", "print", in x, in y, in alignment);
  191:  op add :drawText.6:x :drawItem:textX 1                       drawText(x + 1, y, alignment, text);
  192:  print :drawMaterials:target                                  print(text);
  193:  draw print :drawText.6:x *tmp36 @right                       mlogText("draw", "print", in x, in y, in alignment);
  194:  op add :drawMaterials:col :drawMaterials:col 1               if ++col >= columns then
  195:  jump *label161 lessThan :drawMaterials:col *tmp13            ...
  196:  set :drawMaterials:col 0                                     col = 0;
  197:  op sub :drawMaterials:y :drawMaterials:y 15                  y -= ROW_HEIGHT;
        label *label161                                              if ++col >= columns then
  198:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
  199:  jump *label29 lessThanEq :drawMaterials:count 0              ...
        label *label166                                              if target > 0 then
  200:  set :drawMaterials:target .metaglassTarget                   for var item, target in
  201:  jump *label182 lessThanEq :drawMaterials:target 0            if target > 0 then
  202:  sensor *tmp17 .core @metaglass                               drawItem(ref col, ref y, columns, item, core.sensor(item), target, target);
  203:  op mul *tmp19 *tmp13 88                                      var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  204:  op sub :drawItem:barLength 210 *tmp19                        ...
  205:  op add :drawItem:textEnd 48 :drawItem:barLength              var textEnd = 170 - BAR_LENGTH + barLength;
  206:  op mul *tmp22 :drawItem:barLength *tmp17                     var length = min(barLength, barLength * current / target);
  207:  op div *tmp23 *tmp22 :drawMaterials:target                   ...
  208:  op min :drawItem:length :drawItem:barLength *tmp23           ...
  209:  op mul *tmp26 :drawMaterials:col 88                          var iconX = ICON_X + col * 176 / 2;
  210:  op add :drawItem:iconX 11 *tmp26                             ...
  211:  op add :drawItem:barX 22 *tmp26                              var barX = BAR_X + col * 176 / 2;
  212:  op add :drawItem:textX :drawItem:textEnd *tmp26              var textX = textEnd + col * 176 / 2;
  213:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  214:  op add *tmp34 :drawMaterials:y 5                             image(iconX, y + ICON_Y, item, 16, 0);
  215:  draw image :drawItem:iconX *tmp34 @metaglass 16 0 0          ...
  216:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  217:  draw rect :drawItem:barX :drawMaterials:y :drawItem:length 1 rect(barX, y, length, BAR_HEIGHT);
  218:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  219:  draw lineRect :drawItem:barX :drawMaterials:y :drawItem:barL lineRect(barX, y, barLength, BAR_HEIGHT);
  220:  op add *tmp36 :drawMaterials:y 7                             drawBold(textX, y + ICON_Y + 2, @right, count);
  221:  print :drawMaterials:target                                  print(text);
  222:  draw print :drawItem:textX *tmp36 @right                     mlogText("draw", "print", in x, in y, in alignment);
  223:  op add :drawText.6:x :drawItem:textX 1                       drawText(x + 1, y, alignment, text);
  224:  print :drawMaterials:target                                  print(text);
  225:  draw print :drawText.6:x *tmp36 @right                       mlogText("draw", "print", in x, in y, in alignment);
        label *label182                                              if target > 0 then
        label *label29                                               for var item, target in
  226:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  227:  print "Main unit"                                            print(text);
  228:  draw print 22 45 @bottomLeft                                 mlogText("draw", "print", in x, in y, in alignment);
  229:  print "Main unit"                                            print(text);
  230:  draw print 23 45 @bottomLeft                                 mlogText("draw", "print", in x, in y, in alignment);
  231:  jump *label54 notEqual .transportItem null                   if transportItem == null then
  232:  set :drawItem.1:count .transportTarget                       drawItem(ref col, ref y, 1, item, items, transportTarget, transportTarget);
  233:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  234:  draw image 11 34 @poly 16 0 0                                image(iconX, y + ICON_Y, item, 16, 0);
  235:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  236:  draw rect 22 29 0 10 0 0                                     rect(barX, y, length, BAR_HEIGHT);
  237:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  238:  draw lineRect 22 29 122 10 0 0                               lineRect(barX, y, barLength, BAR_HEIGHT);
  239:  print :drawItem.1:count                                      print(text);
  240:  draw print 170 36 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  241:  print :drawItem.1:count                                      print(text);
  242:  draw print 171 36 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  243:  jump *label55 always 0 0                                     if transportItem == null then
        label *label54                                               ...
  244:  sensor :drawUnit:unitItem @unit @firstItem                   var unitItem = @unit.@firstItem;
  245:  sensor *tmp68 @unit @totalItems                              drawUnit(transportItem, @unit.@totalItems * (unitItem == transportItem), ref y);
  246:  op equal *tmp69 :drawUnit:unitItem .transportItem            ...
  247:  op mul *tmp70 *tmp68 *tmp69                                  ...
  248:  set :drawUnit.2:item .transportItem                          ...
  249:  set :drawItem.2:target .transportTarget                      drawItem(ref col, ref y, 1, item, items, transportTarget, transportTarget);
  250:  set :drawItem.2:count .transportTarget                       ...
  251:  op mul *tmp75 122 *tmp70                                     var length = min(barLength, barLength * current / target);
  252:  op div *tmp76 *tmp75 :drawItem.2:target                      ...
  253:  op min :drawItem.2:length 122 *tmp76                         ...
  254:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  255:  draw image 11 34 :drawUnit.2:item 16 0 0                     image(iconX, y + ICON_Y, item, 16, 0);
  256:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  257:  draw rect 22 29 :drawItem.2:length 10 0 0                    rect(barX, y, length, BAR_HEIGHT);
  258:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  259:  draw lineRect 22 29 122 10 0 0                               lineRect(barX, y, barLength, BAR_HEIGHT);
  260:  print :drawItem.2:count                                      print(text);
  261:  draw print 170 36 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  262:  print :drawItem.2:count                                      print(text);
  263:  draw print 171 36 @right                                     mlogText("draw", "print", in x, in y, in alignment);
        label *label55                                               if transportItem == null then
  264:  set :drawUnits:x 10                                          var x = 4 + 6;
  265:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  266:  set :drawUnitCount:count .flares                             drawUnitCount(@flare, flares, ref x);
  267:  jump *label76 lessThanEq :drawUnitCount:count 0              if count > 0 then
  268:  draw image 10 8 @flare 12 0 0                                image(x, 2 + 6, type, 12, 0);
  269:  print "x"                                                    print("x");
  270:  print :drawUnitCount:count                                   print(text);
  271:  draw print 17 10 @left                                       mlogText("draw", "print", in x, in y, in alignment);
  272:  op add :drawUnits:x 10 30                                    x += 30;
        label *label76                                               if count > 0 then
  273:  set :drawUnitCount.1:count .monos                            drawUnitCount(@mono, monos, ref x);
  274:  jump *label81 lessThanEq :drawUnitCount.1:count 0            if count > 0 then
  275:  draw image :drawUnits:x 8 @mono 12 0 0                       image(x, 2 + 6, type, 12, 0);
  276:  print "x"                                                    print("x");
  277:  op add :drawText.14:x :drawUnits:x 7                         drawText(x + 7, 2 + 8, @left, count);
  278:  print :drawUnitCount.1:count                                 print(text);
  279:  draw print :drawText.14:x 10 @left                           mlogText("draw", "print", in x, in y, in alignment);
  280:  op add :drawUnits:x :drawUnits:x 30                          x += 30;
        label *label81                                               if count > 0 then
  281:  set :drawUnitCount.2:count .polys                            drawUnitCount(@poly, polys, ref x);
  282:  jump *label86 lessThanEq :drawUnitCount.2:count 0            if count > 0 then
  283:  draw image :drawUnits:x 8 @poly 12 0 0                       image(x, 2 + 6, type, 12, 0);
  284:  print "x"                                                    print("x");
  285:  op add :drawText.15:x :drawUnits:x 7                         drawText(x + 7, 2 + 8, @left, count);
  286:  print :drawUnitCount.2:count                                 print(text);
  287:  draw print :drawText.15:x 10 @left                           mlogText("draw", "print", in x, in y, in alignment);
        label *label86                                               if count > 0 then
  288:  drawflush display1                                           drawflush(display1);
  289:  print "[gold]Building {0}\n================================= println($"[gold]Building $nextBlock");
  290:  format .nextBlock                                            ...
  291:  format .status1                                              println(status1);
  292:  format .status2                                              println($"$status2$item2 ($block2)");
  293:  format .item2                                                ...
  294:  format .block2                                               ...
  295:  format .status3                                              println(status3);
  296:  printflush message1                                          printflush(message1);
  297:  jump *label5 always 0 0                                      while true do


Performance: parsed in 275 ms, compiled in 293 ms, optimized in 515 ms, run in 15 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: success.

Program output (4 steps):
The program didn't generate any output.
Execution exception at instruction 11: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
