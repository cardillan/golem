   574 instructions before optimizations.
    42 instructions eliminated by Temp Variables Elimination (2 iterations).
    22 instructions eliminated by Dead Code Elimination (5 iterations).
     4 instructions eliminated by Jump Normalization (2 passes, 5 iterations).
    13 instructions eliminated by Jump Optimization (5 iterations).
    14 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
     2 instructions modified by Expression Optimization (3 iterations).
     2 instructions modified by If Expression Optimization (3 iterations).
   292 instructions eliminated by Data Flow Optimization (3 passes, 15 iterations).
   208 instructions added by Loop Unrolling (4 iterations).
     1 loops unrolled by Loop Unrolling.
     7 instructions eliminated by Jump Straightening (5 iterations).
     3 instructions eliminated by Unreachable Code Elimination (2 iterations).
    10 instructions eliminated by Print Merging.
   375 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 778):
  * Unroll iteration loop at line 111:5                          size  +209, benefit      587.5, efficiency      2.811 (+186 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-20 instructions):
 
   177 jump *label33 equal *tmp35 false
   178 set :drawUnitBuilding:col 0
   179 op sub :drawUnitBuilding:y :drawUnitBuilding:y 15
-    * set *tmp36 :drawUnitBuilding:y
   180 jump *label34 always
   181 label *label33
-    * set *tmp36 null
   182 label *label34
   183 label *label27
   184 label *label21
-    * set *tmp11 null
   185 jump *label20 always
   186 label *label19
   187 set :drawBold.3:x 22
 
   342 jump *label62 equal *tmp64 false
   343 set :drawMaterials:col 0
   344 op sub :drawMaterials:y :drawMaterials:y 15
-    * set *tmp65 :drawMaterials:y
   345 jump *label63 always
   346 label *label62
-    * set *tmp65 null
   347 label *label63
   348 label *label56
   349 op sub :drawMaterials:count :drawMaterials:count 1
 
   355 label *label64
   356 set *tmp67 null
   357 label *label65
-    * set *tmp42 *tmp67
   358 jump *label55 always
   359 label *label54
-    * set *tmp42 null
   360 label *label55
   361 label *label44
   362 multijump *tmp40 0 0 (m:marker0)
   363 multilabel *label53 (m:marker0)
   364 label *label45
   365 label *label35
-    * set *tmp11 null
   366 label *label20
   367 draw col %[white]
   368 set :drawBold.5:x 22
 
   468 jump *label81 equal *tmp91 false
   469 set :drawUnit.1:col 0
   470 op sub :drawUnit:y :drawUnit:y 15
-    * set *tmp92 :drawUnit:y
   471 jump *label82 always
   472 label *label81
-    * set *tmp92 null
   473 label *label82
   474 label *label75
   475 label *label74
-    * set *tmp70 null
   476 jump *label73 always
   477 label *label72
   478 sensor *tmp93 @unit @firstItem
 
   552 jump *label90 equal *tmp117 false
   553 set :drawUnit.2:col 0
   554 op sub :drawUnit:y :drawUnit:y 15
-    * set *tmp118 :drawUnit:y
   555 jump *label91 always
   556 label *label90
-    * set *tmp118 null
   557 label *label91
   558 label *label84
   559 label *label83
-    * set *tmp70 null
   560 label *label73
   561 label *label66
   562 set :drawUnits:x 10
 
   580 label *label97
   581 label *label96
   582 op add :drawUnits:x :drawUnits:x 30
-    * set *tmp120 :drawUnits:x
   583 jump *label95 always
   584 label *label94
-    * set *tmp120 null
   585 label *label95
   586 label *label93
   587 set :drawUnitCount.1:type @mono
 
   603 label *label102
   604 label *label101
   605 op add :drawUnits:x :drawUnits:x 30
-    * set *tmp123 :drawUnits:x
   606 jump *label100 always
   607 label *label99
-    * set *tmp123 null
   608 label *label100
   609 label *label98
   610 set :drawUnitCount.2:type @poly
 
   626 label *label107
   627 label *label106
   628 op add :drawUnits:x :drawUnits:x 30
-    * set *tmp126 :drawUnits:x
   629 jump *label105 always
   630 label *label104
-    * set *tmp126 null
   631 label *label105
   632 label *label103
   633 label *label92

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-2 instructions):
 
   350 op lessThanEq *tmp66 :drawMaterials:count 0
   351 jump *label64 equal *tmp66 false
   352 jump *label45 always
-    * set *tmp67 null
   353 jump *label65 always
   354 label *label64
-    * set *tmp67 null
   355 label *label65
   356 jump *label55 always
   357 label *label54

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-42 instructions):
 
     2 label *label0
     3 label *label2
     4 ubind @poly
-    * ulocate building core false @copper *tmp1 *tmp2 *tmp3 *tmp0
-    * set .core *tmp0
+    5 ulocate building core false @copper 0 0 0 .core
     6 label *label3
     7 op equal *tmp4 .core null
     8 jump *label2 notEqual *tmp4 false
 
    29 draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
    30 label *label12
    31 label *label11
-    * op add *tmp5 :drawBold:x 1
-    * set :drawText.1:x *tmp5
+   32 op add :drawText.1:x :drawBold:x 1
    33 set :drawText.1:y :drawBold:y
    34 set :drawText.1:alignment :drawBold:alignment
    35 set :drawText.1:text :drawBold:text
 
    43 label *label10
    44 draw col %[white]
    45 draw image 40 137 .nextBlock 32 0
-    * op floor *tmp6 @second
-    * set :drawHeader:t *tmp6
-    * op idiv *tmp7 :drawHeader:t 60
-    * set :drawHeader:m *tmp7
-    * op mod *tmp8 :drawHeader:t 60
-    * set :drawHeader:s *tmp8
+   46 op floor :drawHeader:t @second
+   47 op idiv :drawHeader:m :drawHeader:t 60
+   48 op mod :drawHeader:s :drawHeader:t 60
    49 op lessThan *tmp9 :drawHeader:s 10
    50 jump *label15 equal *tmp9 false
    51 set *tmp10 "0"
 
    85 draw print :drawPrint.3:x :drawPrint.3:y :drawPrint.3:alignment
    86 label *label24
    87 label *label23
-    * op add *tmp12 :drawBold.1:x 1
-    * set :drawText.4:x *tmp12
+   88 op add :drawText.4:x :drawBold.1:x 1
    89 set :drawText.4:y :drawBold.1:y
    90 set :drawText.4:alignment :drawBold.1:alignment
    91 set :drawText.4:text :drawBold.1:text
 
   109 set :drawItem:count 1
   110 op mul *tmp15 :drawItem:columns 176
   111 op div *tmp16 *tmp15 2
-    * op sub *tmp17 210 *tmp16
-    * set :drawItem:barLength *tmp17
-    * op add *tmp18 48 :drawItem:barLength
-    * set :drawItem:textEnd *tmp18
+  112 op sub :drawItem:barLength 210 *tmp16
+  113 op add :drawItem:textEnd 48 :drawItem:barLength
   114 op mul *tmp19 :drawItem:barLength :drawItem:current
   115 op div *tmp20 *tmp19 :drawItem:target
-    * op min *tmp21 :drawItem:barLength *tmp20
-    * set :drawItem:length *tmp21
+  116 op min :drawItem:length :drawItem:barLength *tmp20
   117 op mul *tmp22 :drawUnitBuilding:col 176
   118 op div *tmp23 *tmp22 2
-    * op add *tmp24 11 *tmp23
-    * set :drawItem:iconX *tmp24
+  119 op add :drawItem:iconX 11 *tmp23
   120 op mul *tmp25 :drawUnitBuilding:col 176
   121 op div *tmp26 *tmp25 2
-    * op add *tmp27 22 *tmp26
-    * set :drawItem:barX *tmp27
+  122 op add :drawItem:barX 22 *tmp26
   123 op mul *tmp28 :drawUnitBuilding:col 176
   124 op div *tmp29 *tmp28 2
-    * op add *tmp30 :drawItem:textEnd *tmp29
-    * set :drawItem:textX *tmp30
+  125 op add :drawItem:textX :drawItem:textEnd *tmp29
   126 draw col %[white]
   127 op add *tmp31 :drawUnitBuilding:y 5
   128 draw image :drawItem:iconX *tmp31 :drawItem:item 16 0
 
   147 draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
   148 label *label30
   149 label *label29
-    * op add *tmp34 :drawBold.2:x 1
-    * set :drawText.6:x *tmp34
+  150 op add :drawText.6:x :drawBold.2:x 1
   151 set :drawText.6:y :drawBold.2:y
   152 set :drawText.6:alignment :drawBold.2:alignment
   153 set :drawText.6:text :drawBold.2:text
 
   186 draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
   187 label *label38
   188 label *label37
-    * op add *tmp37 :drawBold.3:x 1
-    * set :drawText.8:x *tmp37
+  189 op add :drawText.8:x :drawBold.3:x 1
   190 set :drawText.8:y :drawBold.3:y
   191 set :drawText.8:alignment :drawBold.3:alignment
   192 set :drawText.8:text :drawBold.3:text
 
   266 set :drawItem.1:count :drawMaterials:target
   267 op mul *tmp44 :drawItem.1:columns 176
   268 op div *tmp45 *tmp44 2
-    * op sub *tmp46 210 *tmp45
-    * set :drawItem.1:barLength *tmp46
-    * op add *tmp47 48 :drawItem.1:barLength
-    * set :drawItem.1:textEnd *tmp47
+  269 op sub :drawItem.1:barLength 210 *tmp45
+  270 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
   271 op mul *tmp48 :drawItem.1:barLength :drawItem.1:current
   272 op div *tmp49 *tmp48 :drawItem.1:target
-    * op min *tmp50 :drawItem.1:barLength *tmp49
-    * set :drawItem.1:length *tmp50
+  273 op min :drawItem.1:length :drawItem.1:barLength *tmp49
   274 op mul *tmp51 :drawMaterials:col 176
   275 op div *tmp52 *tmp51 2
-    * op add *tmp53 11 *tmp52
-    * set :drawItem.1:iconX *tmp53
+  276 op add :drawItem.1:iconX 11 *tmp52
   277 op mul *tmp54 :drawMaterials:col 176
   278 op div *tmp55 *tmp54 2
-    * op add *tmp56 22 *tmp55
-    * set :drawItem.1:barX *tmp56
+  279 op add :drawItem.1:barX 22 *tmp55
   280 op mul *tmp57 :drawMaterials:col 176
   281 op div *tmp58 *tmp57 2
-    * op add *tmp59 :drawItem.1:textEnd *tmp58
-    * set :drawItem.1:textX *tmp59
+  282 op add :drawItem.1:textX :drawItem.1:textEnd *tmp58
   283 draw col %[white]
   284 op add *tmp60 :drawMaterials:y 5
   285 draw image :drawItem.1:iconX *tmp60 :drawItem.1:item 16 0
 
   304 draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
   305 label *label59
   306 label *label58
-    * op add *tmp63 :drawBold.4:x 1
-    * set :drawText.10:x *tmp63
+  307 op add :drawText.10:x :drawBold.4:x 1
   308 set :drawText.10:y :drawBold.4:y
   309 set :drawText.10:alignment :drawBold.4:alignment
   310 set :drawText.10:text :drawBold.4:text
 
   357 draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
   358 label *label69
   359 label *label68
-    * op add *tmp68 :drawBold.5:x 1
-    * set :drawText.12:x *tmp68
+  360 op add :drawText.12:x :drawBold.5:x 1
   361 set :drawText.12:y :drawBold.5:y
   362 set :drawText.12:alignment :drawBold.5:alignment
   363 set :drawText.12:text :drawBold.5:text
 
   382 set :drawItem.2:count .transportTarget
   383 op mul *tmp71 :drawItem.2:columns 176
   384 op div *tmp72 *tmp71 2
-    * op sub *tmp73 210 *tmp72
-    * set :drawItem.2:barLength *tmp73
-    * op add *tmp74 48 :drawItem.2:barLength
-    * set :drawItem.2:textEnd *tmp74
+  385 op sub :drawItem.2:barLength 210 *tmp72
+  386 op add :drawItem.2:textEnd 48 :drawItem.2:barLength
   387 op mul *tmp75 :drawItem.2:barLength :drawItem.2:current
   388 op div *tmp76 *tmp75 :drawItem.2:target
-    * op min *tmp77 :drawItem.2:barLength *tmp76
-    * set :drawItem.2:length *tmp77
+  389 op min :drawItem.2:length :drawItem.2:barLength *tmp76
   390 op mul *tmp78 :drawUnit.1:col 176
   391 op div *tmp79 *tmp78 2
-    * op add *tmp80 11 *tmp79
-    * set :drawItem.2:iconX *tmp80
+  392 op add :drawItem.2:iconX 11 *tmp79
   393 op mul *tmp81 :drawUnit.1:col 176
   394 op div *tmp82 *tmp81 2
-    * op add *tmp83 22 *tmp82
-    * set :drawItem.2:barX *tmp83
+  395 op add :drawItem.2:barX 22 *tmp82
   396 op mul *tmp84 :drawUnit.1:col 176
   397 op div *tmp85 *tmp84 2
-    * op add *tmp86 :drawItem.2:textEnd *tmp85
-    * set :drawItem.2:textX *tmp86
+  398 op add :drawItem.2:textX :drawItem.2:textEnd *tmp85
   399 draw col %[white]
   400 op add *tmp87 :drawUnit:y 5
   401 draw image :drawItem.2:iconX *tmp87 :drawItem.2:item 16 0
 
   420 draw print :drawPrint.13:x :drawPrint.13:y :drawPrint.13:alignment
   421 label *label78
   422 label *label77
-    * op add *tmp90 :drawBold.6:x 1
-    * set :drawText.14:x *tmp90
+  423 op add :drawText.14:x :drawBold.6:x 1
   424 set :drawText.14:y :drawBold.6:y
   425 set :drawText.14:alignment :drawBold.6:alignment
   426 set :drawText.14:text :drawBold.6:text
 
   444 label *label74
   445 jump *label73 always
   446 label *label72
-    * sensor *tmp93 @unit @firstItem
-    * set :drawUnit:unitItem *tmp93
+  447 sensor :drawUnit:unitItem @unit @firstItem
   448 sensor *tmp94 @unit @totalItems
   449 op equal *tmp95 :drawUnit:unitItem .transportItem
   450 op mul *tmp96 *tmp94 *tmp95
 
   458 set :drawItem.3:count .transportTarget
   459 op mul *tmp97 :drawItem.3:columns 176
   460 op div *tmp98 *tmp97 2
-    * op sub *tmp99 210 *tmp98
-    * set :drawItem.3:barLength *tmp99
-    * op add *tmp100 48 :drawItem.3:barLength
-    * set :drawItem.3:textEnd *tmp100
+  461 op sub :drawItem.3:barLength 210 *tmp98
+  462 op add :drawItem.3:textEnd 48 :drawItem.3:barLength
   463 op mul *tmp101 :drawItem.3:barLength :drawItem.3:current
   464 op div *tmp102 *tmp101 :drawItem.3:target
-    * op min *tmp103 :drawItem.3:barLength *tmp102
-    * set :drawItem.3:length *tmp103
+  465 op min :drawItem.3:length :drawItem.3:barLength *tmp102
   466 op mul *tmp104 :drawUnit.2:col 176
   467 op div *tmp105 *tmp104 2
-    * op add *tmp106 11 *tmp105
-    * set :drawItem.3:iconX *tmp106
+  468 op add :drawItem.3:iconX 11 *tmp105
   469 op mul *tmp107 :drawUnit.2:col 176
   470 op div *tmp108 *tmp107 2
-    * op add *tmp109 22 *tmp108
-    * set :drawItem.3:barX *tmp109
+  471 op add :drawItem.3:barX 22 *tmp108
   472 op mul *tmp110 :drawUnit.2:col 176
   473 op div *tmp111 *tmp110 2
-    * op add *tmp112 :drawItem.3:textEnd *tmp111
-    * set :drawItem.3:textX *tmp112
+  474 op add :drawItem.3:textX :drawItem.3:textEnd *tmp111
   475 draw col %[white]
   476 op add *tmp113 :drawUnit:y 5
   477 draw image :drawItem.3:iconX *tmp113 :drawItem.3:item 16 0
 
   496 draw print :drawPrint.15:x :drawPrint.15:y :drawPrint.15:alignment
   497 label *label87
   498 label *label86
-    * op add *tmp116 :drawBold.7:x 1
-    * set :drawText.16:x *tmp116
+  499 op add :drawText.16:x :drawBold.7:x 1
   500 set :drawText.16:y :drawBold.7:y
   501 set :drawText.16:alignment :drawBold.7:alignment
   502 set :drawText.16:text :drawBold.7:text
 
   528 jump *label94 equal *tmp119 false
   529 draw image :drawUnits:x 8 :drawUnitCount:type 12 0
   530 print "x"
-    * op add *tmp121 :drawUnits:x 7
-    * set :drawText.17:x *tmp121
+  531 op add :drawText.17:x :drawUnits:x 7
   532 set :drawText.17:y 10
   533 set :drawText.17:alignment @left
   534 set :drawText.17:text :drawUnitCount:count
 
   550 jump *label99 equal *tmp122 false
   551 draw image :drawUnits:x 8 :drawUnitCount.1:type 12 0
   552 print "x"
-    * op add *tmp124 :drawUnits:x 7
-    * set :drawText.18:x *tmp124
+  553 op add :drawText.18:x :drawUnits:x 7
   554 set :drawText.18:y 10
   555 set :drawText.18:alignment @left
   556 set :drawText.18:text :drawUnitCount.1:count
 
   572 jump *label104 equal *tmp125 false
   573 draw image :drawUnits:x 8 :drawUnitCount.2:type 12 0
   574 print "x"
-    * op add *tmp127 :drawUnits:x 7
-    * set :drawText.19:x *tmp127
+  575 op add :drawText.19:x :drawUnits:x 7
   576 set :drawText.19:y 10
   577 set :drawText.19:alignment @left
   578 set :drawText.19:text :drawUnitCount.2:count
 
   596 print "\n"
   597 print "==================================[]"
   598 print "\n"
-    * set *tmp128 .status1
-    * print *tmp128
+  599 print .status1
   600 print "\n"
   601 print .status2
   602 print .item2
 
   605 print .block2
   606 print ")"
   607 print "\n"
-    * set *tmp129 .status3
-    * print *tmp129
+  608 print .status3
   609 print "\n"
   610 printflush message1
   611 label *label108

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    10 printflush null
    11 drawflush null
    12 label *label5
-    * jump *label7 equal true false
    13 draw reset
    14 draw clear 0 0 32
    15 draw col %[gold]

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-13 instructions):
 
     4 ubind @poly
     5 ulocate building core false @copper 0 0 0 .core
     6 label *label3
-    * op equal *tmp4 .core null
-    * jump *label2 notEqual *tmp4 false
+    7 jump *label2 equal .core null
     8 label *label4
     9 printflush null
    10 drawflush null
 
    44 op floor :drawHeader:t @second
    45 op idiv :drawHeader:m :drawHeader:t 60
    46 op mod :drawHeader:s :drawHeader:t 60
-    * op lessThan *tmp9 :drawHeader:s 10
-    * jump *label15 equal *tmp9 false
+   47 jump *label15 greaterThanEq :drawHeader:s 10
    48 set *tmp10 "0"
    49 jump *label16 always
    50 label *label15
 
   157 label *label31
   158 label *label28
   159 op add :drawUnitBuilding:col :drawUnitBuilding:col 1
-    * op greaterThanEq *tmp35 :drawUnitBuilding:col :drawItem:columns
-    * jump *label33 equal *tmp35 false
+  160 jump *label33 lessThan :drawUnitBuilding:col :drawItem:columns
   161 set :drawUnitBuilding:col 0
   162 op sub :drawUnitBuilding:y :drawUnitBuilding:y 15
   163 jump *label34 always
 
   197 set :drawMaterials:col 0
   198 set :drawMaterials:y 85
   199 set :drawMaterials:count .totalTargets
-    * op greaterThan *tmp38 :drawMaterials:count 2
-    * jump *label41 equal *tmp38 false
+  200 jump *label41 lessThanEq :drawMaterials:count 2
   201 set *tmp39 2
   202 jump *label42 always
   203 label *label41
 
   251 set :drawMaterials:target .targetSiliconFactory
   252 setaddr *tmp40 *label53
   253 label *label43
-    * op greaterThan *tmp41 :drawMaterials:target 0
-    * jump *label54 equal *tmp41 false
+  254 jump *label54 lessThanEq :drawMaterials:target 0
   255 sensor *tmp43 :drawMaterials:block :drawMaterials:item
   256 set :drawItem.1:columns :drawMaterials:columns
   257 set :drawItem.1:item :drawMaterials:item
 
   311 label *label60
   312 label *label57
   313 op add :drawMaterials:col :drawMaterials:col 1
-    * op greaterThanEq *tmp64 :drawMaterials:col :drawItem.1:columns
-    * jump *label62 equal *tmp64 false
+  314 jump *label62 lessThan :drawMaterials:col :drawItem.1:columns
   315 set :drawMaterials:col 0
   316 op sub :drawMaterials:y :drawMaterials:y 15
   317 jump *label63 always
 
   319 label *label63
   320 label *label56
   321 op sub :drawMaterials:count :drawMaterials:count 1
-    * op lessThanEq *tmp66 :drawMaterials:count 0
-    * jump *label64 equal *tmp66 false
+  322 jump *label64 greaterThan :drawMaterials:count 0
   323 jump *label45 always
   324 jump *label65 always
   325 label *label64
 
   362 label *label70
   363 label *label67
   364 set :drawUnit:y 29
-    * op equal *tmp69 .transportItem null
-    * jump *label72 equal *tmp69 false
+  365 jump *label72 notEqual .transportItem null
   366 set :drawUnit.1:item @poly
   367 set :drawUnit.1:items 0
   368 set :drawUnit.1:col 0
 
   424 label *label79
   425 label *label76
   426 op add :drawUnit.1:col :drawUnit.1:col 1
-    * op greaterThanEq *tmp91 :drawUnit.1:col :drawItem.2:columns
-    * jump *label81 equal *tmp91 false
+  427 jump *label81 lessThan :drawUnit.1:col :drawItem.2:columns
   428 set :drawUnit.1:col 0
   429 op sub :drawUnit:y :drawUnit:y 15
   430 jump *label82 always
 
   499 label *label88
   500 label *label85
   501 op add :drawUnit.2:col :drawUnit.2:col 1
-    * op greaterThanEq *tmp117 :drawUnit.2:col :drawItem.3:columns
-    * jump *label90 equal *tmp117 false
+  502 jump *label90 lessThan :drawUnit.2:col :drawItem.3:columns
   503 set :drawUnit.2:col 0
   504 op sub :drawUnit:y :drawUnit:y 15
   505 jump *label91 always
 
   513 draw col %[white]
   514 set :drawUnitCount:type @flare
   515 set :drawUnitCount:count .flares
-    * op greaterThan *tmp119 :drawUnitCount:count 0
-    * jump *label94 equal *tmp119 false
+  516 jump *label94 lessThanEq :drawUnitCount:count 0
   517 draw image :drawUnits:x 8 :drawUnitCount:type 12 0
   518 print "x"
   519 op add :drawText.17:x :drawUnits:x 7
 
   534 label *label93
   535 set :drawUnitCount.1:type @mono
   536 set :drawUnitCount.1:count .monos
-    * op greaterThan *tmp122 :drawUnitCount.1:count 0
-    * jump *label99 equal *tmp122 false
+  537 jump *label99 lessThanEq :drawUnitCount.1:count 0
   538 draw image :drawUnits:x 8 :drawUnitCount.1:type 12 0
   539 print "x"
   540 op add :drawText.18:x :drawUnits:x 7
 
   555 label *label98
   556 set :drawUnitCount.2:type @poly
   557 set :drawUnitCount.2:count .polys
-    * op greaterThan *tmp125 :drawUnitCount.2:count 0
-    * jump *label104 equal *tmp125 false
+  558 jump *label104 lessThanEq :drawUnitCount.2:count 0
   559 draw image :drawUnits:x 8 :drawUnitCount.2:type 12 0
   560 print "x"
   561 op add :drawText.19:x :drawUnits:x 7

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-9 instructions):
 
   160 jump *label33 lessThan :drawUnitBuilding:col :drawItem:columns
   161 set :drawUnitBuilding:col 0
   162 op sub :drawUnitBuilding:y :drawUnitBuilding:y 15
-    * jump *label34 always
   163 label *label33
   164 label *label34
   165 label *label27
 
   313 jump *label62 lessThan :drawMaterials:col :drawItem.1:columns
   314 set :drawMaterials:col 0
   315 op sub :drawMaterials:y :drawMaterials:y 15
-    * jump *label63 always
   316 label *label62
   317 label *label63
   318 label *label56
   319 op sub :drawMaterials:count :drawMaterials:count 1
   320 jump *label64 greaterThan :drawMaterials:count 0
   321 jump *label45 always
-    * jump *label65 always
   322 label *label64
   323 label *label65
-    * jump *label55 always
   324 label *label54
   325 label *label55
   326 label *label44
 
   423 jump *label81 lessThan :drawUnit.1:col :drawItem.2:columns
   424 set :drawUnit.1:col 0
   425 op sub :drawUnit:y :drawUnit:y 15
-    * jump *label82 always
   426 label *label81
   427 label *label82
   428 label *label75
 
   497 jump *label90 lessThan :drawUnit.2:col :drawItem.3:columns
   498 set :drawUnit.2:col 0
   499 op sub :drawUnit:y :drawUnit:y 15
-    * jump *label91 always
   500 label *label90
   501 label *label91
   502 label *label84
 
   522 label *label97
   523 label *label96
   524 op add :drawUnits:x :drawUnits:x 30
-    * jump *label95 always
   525 label *label94
   526 label *label95
   527 label *label93
 
   542 label *label102
   543 label *label101
   544 op add :drawUnits:x :drawUnits:x 30
-    * jump *label100 always
   545 label *label99
   546 label *label100
   547 label *label98
 
   562 label *label107
   563 label *label106
   564 op add :drawUnits:x :drawUnits:x 30
-    * jump *label105 always
   565 label *label104
   566 label *label105
   567 label *label103

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-4 instructions):
 
    16 set :drawBold:y 161
    17 set :drawBold:alignment @bottom
    18 set :drawBold:text "Building"
-    * set :drawText:x :drawBold:x
-    * set :drawText:y :drawBold:y
-    * set :drawText:alignment :drawBold:alignment
-    * set :drawText:text :drawBold:text
-    * print :drawText:text
-    * set :drawPrint:x :drawText:x
-    * set :drawPrint:y :drawText:y
-    * set :drawPrint:alignment :drawText:alignment
-    * draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
+   19 set :drawText:x 40
+   20 set :drawText:y 161
+   21 set :drawText:alignment @bottom
+   22 set :drawText:text "Building"
+   23 print :drawBold:text
+   24 set :drawPrint:x :drawBold:x
+   25 set :drawPrint:y :drawBold:y
+   26 set :drawPrint:alignment :drawBold:alignment
+   27 draw print :drawText:x :drawText:y :drawText:alignment
    28 label *label12
    29 label *label11
-    * op add :drawText.1:x :drawBold:x 1
-    * set :drawText.1:y :drawBold:y
-    * set :drawText.1:alignment :drawBold:alignment
-    * set :drawText.1:text :drawBold:text
-    * print :drawText.1:text
-    * set :drawPrint.1:x :drawText.1:x
-    * set :drawPrint.1:y :drawText.1:y
-    * set :drawPrint.1:alignment :drawText.1:alignment
-    * draw print :drawPrint.1:x :drawPrint.1:y :drawPrint.1:alignment
+   30 op add :drawText.1:x 40 1
+   31 set :drawText.1:y 161
+   32 set :drawText.1:alignment @bottom
+   33 set :drawText.1:text "Building"
+   34 print :drawBold:text
+   35 set :drawPrint.1:x 41
+   36 set :drawPrint.1:y :drawBold:y
+   37 set :drawPrint.1:alignment :drawBold:alignment
+   38 draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
    39 label *label14
    40 label *label13
    41 label *label10
 
    58 set :drawText.2:y 172
    59 set :drawText.2:alignment @topRight
    60 set :drawText.2:text ""
-    * print :drawText.2:text
-    * set :drawPrint.2:x :drawText.2:x
-    * set :drawPrint.2:y :drawText.2:y
-    * set :drawPrint.2:alignment :drawText.2:alignment
-    * draw print :drawPrint.2:x :drawPrint.2:y :drawPrint.2:alignment
+   61 print ""
+   62 set :drawPrint.2:x 168
+   63 set :drawPrint.2:y 172
+   64 set :drawPrint.2:alignment @topRight
+   65 draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
    66 label *label18
    67 label *label17
    68 label *label9
 
    71 set :drawBold.1:y 101
    72 set :drawBold.1:alignment @bottomLeft
    73 set :drawBold.1:text "Air factory"
-    * set :drawText.3:x :drawBold.1:x
-    * set :drawText.3:y :drawBold.1:y
-    * set :drawText.3:alignment :drawBold.1:alignment
-    * set :drawText.3:text :drawBold.1:text
-    * print :drawText.3:text
-    * set :drawPrint.3:x :drawText.3:x
-    * set :drawPrint.3:y :drawText.3:y
-    * set :drawPrint.3:alignment :drawText.3:alignment
-    * draw print :drawPrint.3:x :drawPrint.3:y :drawPrint.3:alignment
+   74 set :drawText.3:x 22
+   75 set :drawText.3:y 101
+   76 set :drawText.3:alignment @bottomLeft
+   77 set :drawText.3:text "Air factory"
+   78 print :drawBold.1:text
+   79 set :drawPrint.3:x :drawBold.1:x
+   80 set :drawPrint.3:y :drawBold.1:y
+   81 set :drawPrint.3:alignment :drawBold.1:alignment
+   82 draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
    83 label *label24
    84 label *label23
-    * op add :drawText.4:x :drawBold.1:x 1
-    * set :drawText.4:y :drawBold.1:y
-    * set :drawText.4:alignment :drawBold.1:alignment
-    * set :drawText.4:text :drawBold.1:text
-    * print :drawText.4:text
-    * set :drawPrint.4:x :drawText.4:x
-    * set :drawPrint.4:y :drawText.4:y
-    * set :drawPrint.4:alignment :drawText.4:alignment
-    * draw print :drawPrint.4:x :drawPrint.4:y :drawPrint.4:alignment
+   85 op add :drawText.4:x 22 1
+   86 set :drawText.4:y 101
+   87 set :drawText.4:alignment @bottomLeft
+   88 set :drawText.4:text "Air factory"
+   89 print :drawBold.1:text
+   90 set :drawPrint.4:x 23
+   91 set :drawPrint.4:y :drawBold.1:y
+   92 set :drawPrint.4:alignment :drawBold.1:alignment
+   93 draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
    94 label *label26
    95 label *label25
    96 label *label22
 
    99 set :drawUnitBuilding:columns 1
   100 sensor *tmp13 .factory @config
   101 sensor *tmp14 .factory @progress
-    * set :drawItem:columns :drawUnitBuilding:columns
+  102 set :drawItem:columns 1
   103 set :drawItem:item *tmp13
   104 set :drawItem:current *tmp14
   105 set :drawItem:target 1
   106 set :drawItem:count 1
-    * op mul *tmp15 :drawItem:columns 176
-    * op div *tmp16 *tmp15 2
+  107 op mul *tmp15 :drawUnitBuilding:columns 176
+  108 op mul *tmp16 :drawItem:columns 88
   109 op sub :drawItem:barLength 210 *tmp16
   110 op add :drawItem:textEnd 48 :drawItem:barLength
-    * op mul *tmp19 :drawItem:barLength :drawItem:current
-    * op div *tmp20 *tmp19 :drawItem:target
+  111 op mul *tmp19 :drawItem:barLength *tmp14
+  112 op div *tmp20 *tmp19 1
   113 op min :drawItem:length :drawItem:barLength *tmp20
-    * op mul *tmp22 :drawUnitBuilding:col 176
-    * op div *tmp23 *tmp22 2
-    * op add :drawItem:iconX 11 *tmp23
-    * op mul *tmp25 :drawUnitBuilding:col 176
-    * op div *tmp26 *tmp25 2
-    * op add :drawItem:barX 22 *tmp26
-    * op mul *tmp28 :drawUnitBuilding:col 176
-    * op div *tmp29 *tmp28 2
-    * op add :drawItem:textX :drawItem:textEnd *tmp29
+  114 op mul *tmp22 0 176
+  115 op div *tmp23 0 2
+  116 op add :drawItem:iconX 11 0
+  117 op mul *tmp25 0 176
+  118 op div *tmp26 0 2
+  119 op add :drawItem:barX 22 0
+  120 op mul *tmp28 0 176
+  121 op div *tmp29 0 2
+  122 op add :drawItem:textX :drawItem:textEnd 0
   123 draw col %[white]
-    * op add *tmp31 :drawUnitBuilding:y 5
-    * draw image :drawItem:iconX *tmp31 :drawItem:item 16 0
+  124 op add *tmp31 85 5
+  125 draw image 11 90 *tmp13 16 0
   126 draw color 0 128 0 255
-    * draw rect :drawItem:barX :drawUnitBuilding:y :drawItem:length 10
+  127 draw rect 22 85 :drawItem:length 10
   128 draw color 0 255 0 255
-    * draw lineRect :drawItem:barX :drawUnitBuilding:y :drawItem:barLength 10
-    * op add *tmp32 :drawUnitBuilding:y 5
-    * op add *tmp33 *tmp32 2
+  129 draw lineRect 22 85 :drawItem:barLength 10
+  130 op add *tmp32 85 5
+  131 op add *tmp33 90 2
   132 set :drawBold.2:x :drawItem:textX
-    * set :drawBold.2:y *tmp33
+  133 set :drawBold.2:y 92
   134 set :drawBold.2:alignment @right
-    * set :drawBold.2:text :drawItem:count
-    * set :drawText.5:x :drawBold.2:x
-    * set :drawText.5:y :drawBold.2:y
-    * set :drawText.5:alignment :drawBold.2:alignment
-    * set :drawText.5:text :drawBold.2:text
-    * print :drawText.5:text
-    * set :drawPrint.5:x :drawText.5:x
-    * set :drawPrint.5:y :drawText.5:y
-    * set :drawPrint.5:alignment :drawText.5:alignment
-    * draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
+  135 set :drawBold.2:text 1
+  136 set :drawText.5:x :drawItem:textX
+  137 set :drawText.5:y *tmp33
+  138 set :drawText.5:alignment @right
+  139 set :drawText.5:text :drawItem:count
+  140 print :drawBold.2:text
+  141 set :drawPrint.5:x :drawBold.2:x
+  142 set :drawPrint.5:y :drawBold.2:y
+  143 set :drawPrint.5:alignment :drawBold.2:alignment
+  144 draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
   145 label *label30
   146 label *label29
-    * op add :drawText.6:x :drawBold.2:x 1
-    * set :drawText.6:y :drawBold.2:y
-    * set :drawText.6:alignment :drawBold.2:alignment
-    * set :drawText.6:text :drawBold.2:text
-    * print :drawText.6:text
+  147 op add :drawText.6:x :drawItem:textX 1
+  148 set :drawText.6:y *tmp33
+  149 set :drawText.6:alignment @right
+  150 set :drawText.6:text :drawItem:count
+  151 print :drawBold.2:text
   152 set :drawPrint.6:x :drawText.6:x
-    * set :drawPrint.6:y :drawText.6:y
-    * set :drawPrint.6:alignment :drawText.6:alignment
-    * draw print :drawPrint.6:x :drawPrint.6:y :drawPrint.6:alignment
+  153 set :drawPrint.6:y :drawBold.2:y
+  154 set :drawPrint.6:alignment :drawBold.2:alignment
+  155 draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
   156 label *label32
   157 label *label31
   158 label *label28
-    * op add :drawUnitBuilding:col :drawUnitBuilding:col 1
-    * jump *label33 lessThan :drawUnitBuilding:col :drawItem:columns
-    * set :drawUnitBuilding:col 0
-    * op sub :drawUnitBuilding:y :drawUnitBuilding:y 15
+  159 op add :drawUnitBuilding:col 0 1
+  160 jump *label33 lessThan 1 :drawUnitBuilding:columns
+  161 op sub :drawUnitBuilding:y 85 15
   162 label *label33
   163 label *label34
   164 label *label27
 
   169 set :drawBold.3:y 101
   170 set :drawBold.3:alignment @bottomLeft
   171 set :drawBold.3:text "Materials"
-    * set :drawText.7:x :drawBold.3:x
-    * set :drawText.7:y :drawBold.3:y
-    * set :drawText.7:alignment :drawBold.3:alignment
-    * set :drawText.7:text :drawBold.3:text
-    * print :drawText.7:text
-    * set :drawPrint.7:x :drawText.7:x
-    * set :drawPrint.7:y :drawText.7:y
-    * set :drawPrint.7:alignment :drawText.7:alignment
-    * draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
+  172 set :drawText.7:x 22
+  173 set :drawText.7:y 101
+  174 set :drawText.7:alignment @bottomLeft
+  175 set :drawText.7:text "Materials"
+  176 print :drawBold.3:text
+  177 set :drawPrint.7:x :drawBold.3:x
+  178 set :drawPrint.7:y :drawBold.3:y
+  179 set :drawPrint.7:alignment :drawBold.3:alignment
+  180 draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
   181 label *label38
   182 label *label37
-    * op add :drawText.8:x :drawBold.3:x 1
-    * set :drawText.8:y :drawBold.3:y
-    * set :drawText.8:alignment :drawBold.3:alignment
-    * set :drawText.8:text :drawBold.3:text
-    * print :drawText.8:text
-    * set :drawPrint.8:x :drawText.8:x
-    * set :drawPrint.8:y :drawText.8:y
-    * set :drawPrint.8:alignment :drawText.8:alignment
-    * draw print :drawPrint.8:x :drawPrint.8:y :drawPrint.8:alignment
+  183 op add :drawText.8:x 22 1
+  184 set :drawText.8:y 101
+  185 set :drawText.8:alignment @bottomLeft
+  186 set :drawText.8:text "Materials"
+  187 print :drawBold.3:text
+  188 set :drawPrint.8:x 23
+  189 set :drawPrint.8:y :drawBold.3:y
+  190 set :drawPrint.8:alignment :drawBold.3:alignment
+  191 draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
   192 label *label40
   193 label *label39
   194 label *label36
 
   251 label *label43
   252 jump *label54 lessThanEq :drawMaterials:target 0
   253 sensor *tmp43 :drawMaterials:block :drawMaterials:item
-    * set :drawItem.1:columns :drawMaterials:columns
+  254 set :drawItem.1:columns *tmp39
   255 set :drawItem.1:item :drawMaterials:item
   256 set :drawItem.1:current *tmp43
   257 set :drawItem.1:target :drawMaterials:target
   258 set :drawItem.1:count :drawMaterials:target
-    * op mul *tmp44 :drawItem.1:columns 176
-    * op div *tmp45 *tmp44 2
+  259 op mul *tmp44 :drawMaterials:columns 176
+  260 op mul *tmp45 :drawItem.1:columns 88
   261 op sub :drawItem.1:barLength 210 *tmp45
   262 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
-    * op mul *tmp48 :drawItem.1:barLength :drawItem.1:current
-    * op div *tmp49 *tmp48 :drawItem.1:target
+  263 op mul *tmp48 :drawItem.1:barLength *tmp43
+  264 op div *tmp49 *tmp48 :drawMaterials:target
   265 op min :drawItem.1:length :drawItem.1:barLength *tmp49
   266 op mul *tmp51 :drawMaterials:col 176
-    * op div *tmp52 *tmp51 2
+  267 op mul *tmp52 :drawMaterials:col 88
   268 op add :drawItem.1:iconX 11 *tmp52
   269 op mul *tmp54 :drawMaterials:col 176
-    * op div *tmp55 *tmp54 2
-    * op add :drawItem.1:barX 22 *tmp55
+  270 op div *tmp55 *tmp51 2
+  271 op add :drawItem.1:barX 22 *tmp52
   272 op mul *tmp57 :drawMaterials:col 176
-    * op div *tmp58 *tmp57 2
-    * op add :drawItem.1:textX :drawItem.1:textEnd *tmp58
+  273 op div *tmp58 *tmp51 2
+  274 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
   275 draw col %[white]
   276 op add *tmp60 :drawMaterials:y 5
-    * draw image :drawItem.1:iconX *tmp60 :drawItem.1:item 16 0
+  277 draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
   278 draw color 0 128 0 255
   279 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
   280 draw color 0 255 0 255
   281 draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1:barLength 10
   282 op add *tmp61 :drawMaterials:y 5
-    * op add *tmp62 *tmp61 2
+  283 op add *tmp62 *tmp60 2
   284 set :drawBold.4:x :drawItem.1:textX
   285 set :drawBold.4:y *tmp62
   286 set :drawBold.4:alignment @right
-    * set :drawBold.4:text :drawItem.1:count
-    * set :drawText.9:x :drawBold.4:x
-    * set :drawText.9:y :drawBold.4:y
-    * set :drawText.9:alignment :drawBold.4:alignment
-    * set :drawText.9:text :drawBold.4:text
-    * print :drawText.9:text
-    * set :drawPrint.9:x :drawText.9:x
-    * set :drawPrint.9:y :drawText.9:y
-    * set :drawPrint.9:alignment :drawText.9:alignment
-    * draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
+  287 set :drawBold.4:text :drawMaterials:target
+  288 set :drawText.9:x :drawItem.1:textX
+  289 set :drawText.9:y *tmp62
+  290 set :drawText.9:alignment @right
+  291 set :drawText.9:text :drawItem.1:count
+  292 print :drawBold.4:text
+  293 set :drawPrint.9:x :drawBold.4:x
+  294 set :drawPrint.9:y :drawBold.4:y
+  295 set :drawPrint.9:alignment :drawBold.4:alignment
+  296 draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
   297 label *label59
   298 label *label58
-    * op add :drawText.10:x :drawBold.4:x 1
-    * set :drawText.10:y :drawBold.4:y
-    * set :drawText.10:alignment :drawBold.4:alignment
-    * set :drawText.10:text :drawBold.4:text
-    * print :drawText.10:text
+  299 op add :drawText.10:x :drawItem.1:textX 1
+  300 set :drawText.10:y *tmp62
+  301 set :drawText.10:alignment @right
+  302 set :drawText.10:text :drawItem.1:count
+  303 print :drawBold.4:text
   304 set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawText.10:y
-    * set :drawPrint.10:alignment :drawText.10:alignment
-    * draw print :drawPrint.10:x :drawPrint.10:y :drawPrint.10:alignment
+  305 set :drawPrint.10:y :drawBold.4:y
+  306 set :drawPrint.10:alignment :drawBold.4:alignment
+  307 draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
   308 label *label61
   309 label *label60
   310 label *label57
   311 op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label62 lessThan :drawMaterials:col :drawItem.1:columns
+  312 jump *label62 lessThan :drawMaterials:col :drawMaterials:columns
   313 set :drawMaterials:col 0
   314 op sub :drawMaterials:y :drawMaterials:y 15
   315 label *label62
 
   333 set :drawBold.5:y 45
   334 set :drawBold.5:alignment @bottomLeft
   335 set :drawBold.5:text "Main unit"
-    * set :drawText.11:x :drawBold.5:x
-    * set :drawText.11:y :drawBold.5:y
-    * set :drawText.11:alignment :drawBold.5:alignment
-    * set :drawText.11:text :drawBold.5:text
-    * print :drawText.11:text
-    * set :drawPrint.11:x :drawText.11:x
-    * set :drawPrint.11:y :drawText.11:y
-    * set :drawPrint.11:alignment :drawText.11:alignment
-    * draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
+  336 set :drawText.11:x 22
+  337 set :drawText.11:y 45
+  338 set :drawText.11:alignment @bottomLeft
+  339 set :drawText.11:text "Main unit"
+  340 print :drawBold.5:text
+  341 set :drawPrint.11:x :drawBold.5:x
+  342 set :drawPrint.11:y :drawBold.5:y
+  343 set :drawPrint.11:alignment :drawBold.5:alignment
+  344 draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
   345 label *label69
   346 label *label68
-    * op add :drawText.12:x :drawBold.5:x 1
-    * set :drawText.12:y :drawBold.5:y
-    * set :drawText.12:alignment :drawBold.5:alignment
-    * set :drawText.12:text :drawBold.5:text
-    * print :drawText.12:text
-    * set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawText.12:y
-    * set :drawPrint.12:alignment :drawText.12:alignment
-    * draw print :drawPrint.12:x :drawPrint.12:y :drawPrint.12:alignment
+  347 op add :drawText.12:x 22 1
+  348 set :drawText.12:y 45
+  349 set :drawText.12:alignment @bottomLeft
+  350 set :drawText.12:text "Main unit"
+  351 print :drawBold.5:text
+  352 set :drawPrint.12:x 23
+  353 set :drawPrint.12:y :drawBold.5:y
+  354 set :drawPrint.12:alignment :drawBold.5:alignment
+  355 draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
   356 label *label71
   357 label *label70
   358 label *label67
 
   362 set :drawUnit.1:items 0
   363 set :drawUnit.1:col 0
   364 set :drawItem.2:columns 1
-    * set :drawItem.2:item :drawUnit.1:item
-    * set :drawItem.2:current :drawUnit.1:items
+  365 set :drawItem.2:item @poly
+  366 set :drawItem.2:current 0
   367 set :drawItem.2:target .transportTarget
   368 set :drawItem.2:count .transportTarget
-    * op mul *tmp71 :drawItem.2:columns 176
-    * op div *tmp72 *tmp71 2
-    * op sub :drawItem.2:barLength 210 *tmp72
-    * op add :drawItem.2:textEnd 48 :drawItem.2:barLength
-    * op mul *tmp75 :drawItem.2:barLength :drawItem.2:current
+  369 op mul *tmp71 1 176
+  370 op div *tmp72 176 2
+  371 op sub :drawItem.2:barLength 210 88
+  372 op add :drawItem.2:textEnd 48 122
+  373 op mul *tmp75 122 :drawUnit.1:items
   374 op div *tmp76 *tmp75 :drawItem.2:target
-    * op min :drawItem.2:length :drawItem.2:barLength *tmp76
-    * op mul *tmp78 :drawUnit.1:col 176
-    * op div *tmp79 *tmp78 2
-    * op add :drawItem.2:iconX 11 *tmp79
-    * op mul *tmp81 :drawUnit.1:col 176
-    * op div *tmp82 *tmp81 2
-    * op add :drawItem.2:barX 22 *tmp82
-    * op mul *tmp84 :drawUnit.1:col 176
-    * op div *tmp85 *tmp84 2
-    * op add :drawItem.2:textX :drawItem.2:textEnd *tmp85
+  375 op min :drawItem.2:length 122 *tmp76
+  376 op mul *tmp78 0 176
+  377 op div *tmp79 0 2
+  378 op add :drawItem.2:iconX 11 0
+  379 op mul *tmp81 0 176
+  380 op div *tmp82 0 2
+  381 op add :drawItem.2:barX 22 0
+  382 op mul *tmp84 0 176
+  383 op div *tmp85 0 2
+  384 op add :drawItem.2:textX 170 0
   385 draw col %[white]
-    * op add *tmp87 :drawUnit:y 5
-    * draw image :drawItem.2:iconX *tmp87 :drawItem.2:item 16 0
+  386 op add *tmp87 29 5
+  387 draw image 11 34 :drawUnit.1:item 16 0
   388 draw color 0 128 0 255
-    * draw rect :drawItem.2:barX :drawUnit:y :drawItem.2:length 10
+  389 draw rect 22 29 :drawItem.2:length 10
   390 draw color 0 255 0 255
-    * draw lineRect :drawItem.2:barX :drawUnit:y :drawItem.2:barLength 10
-    * op add *tmp88 :drawUnit:y 5
-    * op add *tmp89 *tmp88 2
-    * set :drawBold.6:x :drawItem.2:textX
-    * set :drawBold.6:y *tmp89
+  391 draw lineRect 22 29 122 10
+  392 op add *tmp88 29 5
+  393 op add *tmp89 34 2
+  394 set :drawBold.6:x 170
+  395 set :drawBold.6:y 36
   396 set :drawBold.6:alignment @right
   397 set :drawBold.6:text :drawItem.2:count
-    * set :drawText.13:x :drawBold.6:x
-    * set :drawText.13:y :drawBold.6:y
-    * set :drawText.13:alignment :drawBold.6:alignment
-    * set :drawText.13:text :drawBold.6:text
-    * print :drawText.13:text
-    * set :drawPrint.13:x :drawText.13:x
-    * set :drawPrint.13:y :drawText.13:y
-    * set :drawPrint.13:alignment :drawText.13:alignment
-    * draw print :drawPrint.13:x :drawPrint.13:y :drawPrint.13:alignment
+  398 set :drawText.13:x :drawItem.2:textX
+  399 set :drawText.13:y *tmp89
+  400 set :drawText.13:alignment @right
+  401 set :drawText.13:text :drawItem.2:count
+  402 print :drawBold.6:text
+  403 set :drawPrint.13:x :drawBold.6:x
+  404 set :drawPrint.13:y :drawBold.6:y
+  405 set :drawPrint.13:alignment :drawBold.6:alignment
+  406 draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
   407 label *label78
   408 label *label77
-    * op add :drawText.14:x :drawBold.6:x 1
-    * set :drawText.14:y :drawBold.6:y
-    * set :drawText.14:alignment :drawBold.6:alignment
-    * set :drawText.14:text :drawBold.6:text
-    * print :drawText.14:text
+  409 op add :drawText.14:x :drawItem.2:textX 1
+  410 set :drawText.14:y *tmp89
+  411 set :drawText.14:alignment @right
+  412 set :drawText.14:text :drawItem.2:count
+  413 print :drawBold.6:text
   414 set :drawPrint.14:x :drawText.14:x
-    * set :drawPrint.14:y :drawText.14:y
-    * set :drawPrint.14:alignment :drawText.14:alignment
-    * draw print :drawPrint.14:x :drawPrint.14:y :drawPrint.14:alignment
+  415 set :drawPrint.14:y :drawBold.6:y
+  416 set :drawPrint.14:alignment :drawBold.6:alignment
+  417 draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
   418 label *label80
   419 label *label79
   420 label *label76
-    * op add :drawUnit.1:col :drawUnit.1:col 1
-    * jump *label81 lessThan :drawUnit.1:col :drawItem.2:columns
-    * set :drawUnit.1:col 0
-    * op sub :drawUnit:y :drawUnit:y 15
+  421 op add :drawUnit.1:col 0 1
+  422 jump *label81 lessThan 1 1
+  423 op sub :drawUnit:y 29 15
   424 label *label81
   425 label *label82
   426 label *label75
 
   436 set :drawUnit.2:col 0
   437 set :drawItem.3:columns 1
   438 set :drawItem.3:item :drawUnit.2:item
-    * set :drawItem.3:current :drawUnit.2:items
+  439 set :drawItem.3:current *tmp96
   440 set :drawItem.3:target .transportTarget
   441 set :drawItem.3:count .transportTarget
-    * op mul *tmp97 :drawItem.3:columns 176
-    * op div *tmp98 *tmp97 2
-    * op sub :drawItem.3:barLength 210 *tmp98
-    * op add :drawItem.3:textEnd 48 :drawItem.3:barLength
-    * op mul *tmp101 :drawItem.3:barLength :drawItem.3:current
+  442 op mul *tmp97 1 176
+  443 op div *tmp98 176 2
+  444 op sub :drawItem.3:barLength 210 88
+  445 op add :drawItem.3:textEnd 48 122
+  446 op mul *tmp101 122 :drawUnit.2:items
   447 op div *tmp102 *tmp101 :drawItem.3:target
-    * op min :drawItem.3:length :drawItem.3:barLength *tmp102
-    * op mul *tmp104 :drawUnit.2:col 176
-    * op div *tmp105 *tmp104 2
-    * op add :drawItem.3:iconX 11 *tmp105
-    * op mul *tmp107 :drawUnit.2:col 176
-    * op div *tmp108 *tmp107 2
-    * op add :drawItem.3:barX 22 *tmp108
-    * op mul *tmp110 :drawUnit.2:col 176
-    * op div *tmp111 *tmp110 2
-    * op add :drawItem.3:textX :drawItem.3:textEnd *tmp111
+  448 op min :drawItem.3:length 122 *tmp102
+  449 op mul *tmp104 0 176
+  450 op div *tmp105 0 2
+  451 op add :drawItem.3:iconX 11 0
+  452 op mul *tmp107 0 176
+  453 op div *tmp108 0 2
+  454 op add :drawItem.3:barX 22 0
+  455 op mul *tmp110 0 176
+  456 op div *tmp111 0 2
+  457 op add :drawItem.3:textX 170 0
   458 draw col %[white]
-    * op add *tmp113 :drawUnit:y 5
-    * draw image :drawItem.3:iconX *tmp113 :drawItem.3:item 16 0
+  459 op add *tmp113 29 5
+  460 draw image 11 34 :drawUnit.2:item 16 0
   461 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawUnit:y :drawItem.3:length 10
+  462 draw rect 22 29 :drawItem.3:length 10
   463 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawUnit:y :drawItem.3:barLength 10
-    * op add *tmp114 :drawUnit:y 5
-    * op add *tmp115 *tmp114 2
-    * set :drawBold.7:x :drawItem.3:textX
-    * set :drawBold.7:y *tmp115
+  464 draw lineRect 22 29 122 10
+  465 op add *tmp114 29 5
+  466 op add *tmp115 34 2
+  467 set :drawBold.7:x 170
+  468 set :drawBold.7:y 36
   469 set :drawBold.7:alignment @right
   470 set :drawBold.7:text :drawItem.3:count
-    * set :drawText.15:x :drawBold.7:x
-    * set :drawText.15:y :drawBold.7:y
-    * set :drawText.15:alignment :drawBold.7:alignment
-    * set :drawText.15:text :drawBold.7:text
-    * print :drawText.15:text
-    * set :drawPrint.15:x :drawText.15:x
-    * set :drawPrint.15:y :drawText.15:y
-    * set :drawPrint.15:alignment :drawText.15:alignment
-    * draw print :drawPrint.15:x :drawPrint.15:y :drawPrint.15:alignment
+  471 set :drawText.15:x :drawItem.3:textX
+  472 set :drawText.15:y *tmp115
+  473 set :drawText.15:alignment @right
+  474 set :drawText.15:text :drawItem.3:count
+  475 print :drawBold.7:text
+  476 set :drawPrint.15:x :drawBold.7:x
+  477 set :drawPrint.15:y :drawBold.7:y
+  478 set :drawPrint.15:alignment :drawBold.7:alignment
+  479 draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
   480 label *label87
   481 label *label86
-    * op add :drawText.16:x :drawBold.7:x 1
-    * set :drawText.16:y :drawBold.7:y
-    * set :drawText.16:alignment :drawBold.7:alignment
-    * set :drawText.16:text :drawBold.7:text
-    * print :drawText.16:text
+  482 op add :drawText.16:x :drawItem.3:textX 1
+  483 set :drawText.16:y *tmp115
+  484 set :drawText.16:alignment @right
+  485 set :drawText.16:text :drawItem.3:count
+  486 print :drawBold.7:text
   487 set :drawPrint.16:x :drawText.16:x
-    * set :drawPrint.16:y :drawText.16:y
-    * set :drawPrint.16:alignment :drawText.16:alignment
-    * draw print :drawPrint.16:x :drawPrint.16:y :drawPrint.16:alignment
+  488 set :drawPrint.16:y :drawBold.7:y
+  489 set :drawPrint.16:alignment :drawBold.7:alignment
+  490 draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
   491 label *label89
   492 label *label88
   493 label *label85
-    * op add :drawUnit.2:col :drawUnit.2:col 1
-    * jump *label90 lessThan :drawUnit.2:col :drawItem.3:columns
-    * set :drawUnit.2:col 0
-    * op sub :drawUnit:y :drawUnit:y 15
+  494 op add :drawUnit.2:col 0 1
+  495 jump *label90 lessThan 1 1
+  496 op sub :drawUnit:y 29 15
   497 label *label90
   498 label *label91
   499 label *label84
 
   505 set :drawUnitCount:type @flare
   506 set :drawUnitCount:count .flares
   507 jump *label94 lessThanEq :drawUnitCount:count 0
-    * draw image :drawUnits:x 8 :drawUnitCount:type 12 0
+  508 draw image 10 8 @flare 12 0
   509 print "x"
-    * op add :drawText.17:x :drawUnits:x 7
+  510 op add :drawText.17:x 10 7
   511 set :drawText.17:y 10
   512 set :drawText.17:alignment @left
   513 set :drawText.17:text :drawUnitCount:count
-    * print :drawText.17:text
-    * set :drawPrint.17:x :drawText.17:x
-    * set :drawPrint.17:y :drawText.17:y
-    * set :drawPrint.17:alignment :drawText.17:alignment
-    * draw print :drawPrint.17:x :drawPrint.17:y :drawPrint.17:alignment
+  514 print :drawUnitCount:count
+  515 set :drawPrint.17:x 17
+  516 set :drawPrint.17:y 10
+  517 set :drawPrint.17:alignment @left
+  518 draw print :drawText.17:x :drawText.17:y :drawText.17:alignment
   519 label *label97
   520 label *label96
-    * op add :drawUnits:x :drawUnits:x 30
+  521 op add :drawUnits:x 10 30
   522 label *label94
   523 label *label95
   524 label *label93
   525 set :drawUnitCount.1:type @mono
   526 set :drawUnitCount.1:count .monos
   527 jump *label99 lessThanEq :drawUnitCount.1:count 0
-    * draw image :drawUnits:x 8 :drawUnitCount.1:type 12 0
+  528 draw image :drawUnits:x 8 @mono 12 0
   529 print "x"
   530 op add :drawText.18:x :drawUnits:x 7
   531 set :drawText.18:y 10
   532 set :drawText.18:alignment @left
   533 set :drawText.18:text :drawUnitCount.1:count
-    * print :drawText.18:text
+  534 print :drawUnitCount.1:count
   535 set :drawPrint.18:x :drawText.18:x
-    * set :drawPrint.18:y :drawText.18:y
-    * set :drawPrint.18:alignment :drawText.18:alignment
-    * draw print :drawPrint.18:x :drawPrint.18:y :drawPrint.18:alignment
+  536 set :drawPrint.18:y 10
+  537 set :drawPrint.18:alignment @left
+  538 draw print :drawText.18:x :drawText.18:y :drawText.18:alignment
   539 label *label102
   540 label *label101
   541 op add :drawUnits:x :drawUnits:x 30
 
   545 set :drawUnitCount.2:type @poly
   546 set :drawUnitCount.2:count .polys
   547 jump *label104 lessThanEq :drawUnitCount.2:count 0
-    * draw image :drawUnits:x 8 :drawUnitCount.2:type 12 0
+  548 draw image :drawUnits:x 8 @poly 12 0
   549 print "x"
   550 op add :drawText.19:x :drawUnits:x 7
   551 set :drawText.19:y 10
   552 set :drawText.19:alignment @left
   553 set :drawText.19:text :drawUnitCount.2:count
-    * print :drawText.19:text
+  554 print :drawUnitCount.2:count
   555 set :drawPrint.19:x :drawText.19:x
-    * set :drawPrint.19:y :drawText.19:y
-    * set :drawPrint.19:alignment :drawText.19:alignment
-    * draw print :drawPrint.19:x :drawPrint.19:y :drawPrint.19:alignment
+  556 set :drawPrint.19:y 10
+  557 set :drawPrint.19:alignment @left
+  558 draw print :drawText.19:x :drawText.19:y :drawText.19:alignment
   559 label *label107
   560 label *label106
-    * op add :drawUnits:x :drawUnits:x 30
   561 label *label104
   562 label *label105
   563 label *label103

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-100 instructions):
 
    19 set :drawText:x 40
    20 set :drawText:y 161
    21 set :drawText:alignment @bottom
-    * set :drawText:text "Building"
-    * print :drawBold:text
-    * set :drawPrint:x :drawBold:x
-    * set :drawPrint:y :drawBold:y
-    * set :drawPrint:alignment :drawBold:alignment
-    * draw print :drawText:x :drawText:y :drawText:alignment
+   22 print "Building"
+   23 set :drawPrint:x 40
+   24 set :drawPrint:y 161
+   25 set :drawPrint:alignment @bottom
+   26 draw print 40 161 @bottom
    27 label *label12
    28 label *label11
    29 op add :drawText.1:x 40 1
    30 set :drawText.1:y 161
    31 set :drawText.1:alignment @bottom
-    * set :drawText.1:text "Building"
-    * print :drawBold:text
-    * set :drawPrint.1:x 41
-    * set :drawPrint.1:y :drawBold:y
-    * set :drawPrint.1:alignment :drawBold:alignment
-    * draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
+   32 print "Building"
+   33 set :drawPrint.1:y 161
+   34 set :drawPrint.1:alignment @bottom
+   35 draw print 41 161 @bottom
    36 label *label14
    37 label *label13
    38 label *label10
 
    54 set :drawText.2:x 168
    55 set :drawText.2:y 172
    56 set :drawText.2:alignment @topRight
-    * set :drawText.2:text ""
    57 print ""
-    * set :drawPrint.2:x 168
-    * set :drawPrint.2:y 172
-    * set :drawPrint.2:alignment @topRight
-    * draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
+   58 draw print 168 172 @topRight
    59 label *label18
    60 label *label17
    61 label *label9
 
    67 set :drawText.3:x 22
    68 set :drawText.3:y 101
    69 set :drawText.3:alignment @bottomLeft
-    * set :drawText.3:text "Air factory"
-    * print :drawBold.1:text
-    * set :drawPrint.3:x :drawBold.1:x
-    * set :drawPrint.3:y :drawBold.1:y
-    * set :drawPrint.3:alignment :drawBold.1:alignment
-    * draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
+   70 print "Air factory"
+   71 set :drawPrint.3:x 22
+   72 set :drawPrint.3:y 101
+   73 set :drawPrint.3:alignment @bottomLeft
+   74 draw print 22 101 @bottomLeft
    75 label *label24
    76 label *label23
    77 op add :drawText.4:x 22 1
    78 set :drawText.4:y 101
    79 set :drawText.4:alignment @bottomLeft
-    * set :drawText.4:text "Air factory"
-    * print :drawBold.1:text
-    * set :drawPrint.4:x 23
-    * set :drawPrint.4:y :drawBold.1:y
-    * set :drawPrint.4:alignment :drawBold.1:alignment
-    * draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
+   80 print "Air factory"
+   81 set :drawPrint.4:y 101
+   82 set :drawPrint.4:alignment @bottomLeft
+   83 draw print 23 101 @bottomLeft
    84 label *label26
    85 label *label25
    86 label *label22
-    * set :drawUnitBuilding:col 0
-    * set :drawUnitBuilding:y 85
    87 set :drawUnitBuilding:columns 1
    88 sensor *tmp13 .factory @config
    89 sensor *tmp14 .factory @progress
    90 set :drawItem:columns 1
-    * set :drawItem:item *tmp13
-    * set :drawItem:current *tmp14
-    * set :drawItem:target 1
    91 set :drawItem:count 1
-    * op mul *tmp15 :drawUnitBuilding:columns 176
-    * op mul *tmp16 :drawItem:columns 88
-    * op sub :drawItem:barLength 210 *tmp16
-    * op add :drawItem:textEnd 48 :drawItem:barLength
-    * op mul *tmp19 :drawItem:barLength *tmp14
+   92 op mul *tmp15 1 176
+   93 op mul *tmp16 1 88
+   94 op sub :drawItem:barLength 210 88
+   95 op add :drawItem:textEnd 48 122
+   96 op mul *tmp19 122 *tmp14
    97 op div *tmp20 *tmp19 1
-    * op min :drawItem:length :drawItem:barLength *tmp20
-    * op mul *tmp22 0 176
-    * op div *tmp23 0 2
-    * op add :drawItem:iconX 11 0
-    * op mul *tmp25 0 176
-    * op div *tmp26 0 2
-    * op add :drawItem:barX 22 0
-    * op mul *tmp28 0 176
-    * op div *tmp29 0 2
-    * op add :drawItem:textX :drawItem:textEnd 0
+   98 op min :drawItem:length 122 *tmp20
+   99 op add :drawItem:textX 170 0
   100 draw col %[white]
-    * op add *tmp31 85 5
   101 draw image 11 90 *tmp13 16 0
   102 draw color 0 128 0 255
   103 draw rect 22 85 :drawItem:length 10
   104 draw color 0 255 0 255
-    * draw lineRect 22 85 :drawItem:barLength 10
-    * op add *tmp32 85 5
+  105 draw lineRect 22 85 122 10
   106 op add *tmp33 90 2
-    * set :drawBold.2:x :drawItem:textX
+  107 set :drawBold.2:x 170
   108 set :drawBold.2:y 92
   109 set :drawBold.2:alignment @right
   110 set :drawBold.2:text 1
-    * set :drawText.5:x :drawItem:textX
-    * set :drawText.5:y *tmp33
+  111 set :drawText.5:x 170
+  112 set :drawText.5:y 92
   113 set :drawText.5:alignment @right
-    * set :drawText.5:text :drawItem:count
-    * print :drawBold.2:text
-    * set :drawPrint.5:x :drawBold.2:x
-    * set :drawPrint.5:y :drawBold.2:y
-    * set :drawPrint.5:alignment :drawBold.2:alignment
-    * draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
+  114 set :drawText.5:text 1
+  115 print 1
+  116 set :drawPrint.5:x :drawItem:textX
+  117 set :drawPrint.5:y 92
+  118 set :drawPrint.5:alignment @right
+  119 draw print :drawItem:textX *tmp33 @right
   120 label *label30
   121 label *label29
-    * op add :drawText.6:x :drawItem:textX 1
-    * set :drawText.6:y *tmp33
+  122 op add :drawText.6:x 170 1
+  123 set :drawText.6:y 92
   124 set :drawText.6:alignment @right
-    * set :drawText.6:text :drawItem:count
-    * print :drawBold.2:text
-    * set :drawPrint.6:x :drawText.6:x
-    * set :drawPrint.6:y :drawBold.2:y
-    * set :drawPrint.6:alignment :drawBold.2:alignment
-    * draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
+  125 set :drawText.6:text 1
+  126 print 1
+  127 set :drawPrint.6:x 171
+  128 set :drawPrint.6:y 92
+  129 set :drawPrint.6:alignment @right
+  130 draw print 171 *tmp33 @right
   131 label *label32
   132 label *label31
   133 label *label28
-    * op add :drawUnitBuilding:col 0 1
-    * jump *label33 lessThan 1 :drawUnitBuilding:columns
-    * op sub :drawUnitBuilding:y 85 15
+  134 jump *label33 lessThan 1 1
   135 label *label33
   136 label *label34
   137 label *label27
 
   145 set :drawText.7:x 22
   146 set :drawText.7:y 101
   147 set :drawText.7:alignment @bottomLeft
-    * set :drawText.7:text "Materials"
-    * print :drawBold.3:text
-    * set :drawPrint.7:x :drawBold.3:x
-    * set :drawPrint.7:y :drawBold.3:y
-    * set :drawPrint.7:alignment :drawBold.3:alignment
-    * draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
+  148 print "Materials"
+  149 set :drawPrint.7:x 22
+  150 set :drawPrint.7:y 101
+  151 set :drawPrint.7:alignment @bottomLeft
+  152 draw print 22 101 @bottomLeft
   153 label *label38
   154 label *label37
   155 op add :drawText.8:x 22 1
   156 set :drawText.8:y 101
   157 set :drawText.8:alignment @bottomLeft
-    * set :drawText.8:text "Materials"
-    * print :drawBold.3:text
-    * set :drawPrint.8:x 23
-    * set :drawPrint.8:y :drawBold.3:y
-    * set :drawPrint.8:alignment :drawBold.3:alignment
-    * draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
+  158 print "Materials"
+  159 set :drawPrint.8:y 101
+  160 set :drawPrint.8:alignment @bottomLeft
+  161 draw print 23 101 @bottomLeft
   162 label *label40
   163 label *label39
   164 label *label36
 
   222 jump *label54 lessThanEq :drawMaterials:target 0
   223 sensor *tmp43 :drawMaterials:block :drawMaterials:item
   224 set :drawItem.1:columns *tmp39
-    * set :drawItem.1:item :drawMaterials:item
-    * set :drawItem.1:current *tmp43
-    * set :drawItem.1:target :drawMaterials:target
   225 set :drawItem.1:count :drawMaterials:target
-    * op mul *tmp44 :drawMaterials:columns 176
-    * op mul *tmp45 :drawItem.1:columns 88
+  226 op mul *tmp44 *tmp39 176
+  227 op mul *tmp45 *tmp39 88
   228 op sub :drawItem.1:barLength 210 *tmp45
   229 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
   230 op mul *tmp48 :drawItem.1:barLength *tmp43
 
   233 op mul *tmp51 :drawMaterials:col 176
   234 op mul *tmp52 :drawMaterials:col 88
   235 op add :drawItem.1:iconX 11 *tmp52
-    * op mul *tmp54 :drawMaterials:col 176
-    * op div *tmp55 *tmp51 2
+  236 op mul *tmp55 :drawMaterials:col 88
   237 op add :drawItem.1:barX 22 *tmp52
-    * op mul *tmp57 :drawMaterials:col 176
-    * op div *tmp58 *tmp51 2
+  238 op mul *tmp58 :drawMaterials:col 88
   239 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
   240 draw col %[white]
   241 op add *tmp60 :drawMaterials:y 5
 
   244 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
   245 draw color 0 255 0 255
   246 draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1:barLength 10
-    * op add *tmp61 :drawMaterials:y 5
-    * op add *tmp62 *tmp60 2
+  247 op add *tmp62 :drawMaterials:y 7
   248 set :drawBold.4:x :drawItem.1:textX
   249 set :drawBold.4:y *tmp62
   250 set :drawBold.4:alignment @right
 
   252 set :drawText.9:x :drawItem.1:textX
   253 set :drawText.9:y *tmp62
   254 set :drawText.9:alignment @right
-    * set :drawText.9:text :drawItem.1:count
-    * print :drawBold.4:text
-    * set :drawPrint.9:x :drawBold.4:x
-    * set :drawPrint.9:y :drawBold.4:y
-    * set :drawPrint.9:alignment :drawBold.4:alignment
-    * draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
+  255 set :drawText.9:text :drawMaterials:target
+  256 print :drawMaterials:target
+  257 set :drawPrint.9:x :drawItem.1:textX
+  258 set :drawPrint.9:y *tmp62
+  259 set :drawPrint.9:alignment @right
+  260 draw print :drawItem.1:textX *tmp62 @right
   261 label *label59
   262 label *label58
   263 op add :drawText.10:x :drawItem.1:textX 1
   264 set :drawText.10:y *tmp62
   265 set :drawText.10:alignment @right
-    * set :drawText.10:text :drawItem.1:count
-    * print :drawBold.4:text
-    * set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawBold.4:y
-    * set :drawPrint.10:alignment :drawBold.4:alignment
-    * draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
+  266 set :drawText.10:text :drawMaterials:target
+  267 print :drawMaterials:target
+  268 set :drawPrint.10:y *tmp62
+  269 set :drawPrint.10:alignment @right
+  270 draw print :drawText.10:x *tmp62 @right
   271 label *label61
   272 label *label60
   273 label *label57
   274 op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label62 lessThan :drawMaterials:col :drawMaterials:columns
+  275 jump *label62 lessThan :drawMaterials:col *tmp39
   276 set :drawMaterials:col 0
   277 op sub :drawMaterials:y :drawMaterials:y 15
   278 label *label62
 
   299 set :drawText.11:x 22
   300 set :drawText.11:y 45
   301 set :drawText.11:alignment @bottomLeft
-    * set :drawText.11:text "Main unit"
-    * print :drawBold.5:text
-    * set :drawPrint.11:x :drawBold.5:x
-    * set :drawPrint.11:y :drawBold.5:y
-    * set :drawPrint.11:alignment :drawBold.5:alignment
-    * draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
+  302 print "Main unit"
+  303 set :drawPrint.11:x 22
+  304 set :drawPrint.11:y 45
+  305 set :drawPrint.11:alignment @bottomLeft
+  306 draw print 22 45 @bottomLeft
   307 label *label69
   308 label *label68
   309 op add :drawText.12:x 22 1
   310 set :drawText.12:y 45
   311 set :drawText.12:alignment @bottomLeft
-    * set :drawText.12:text "Main unit"
-    * print :drawBold.5:text
-    * set :drawPrint.12:x 23
-    * set :drawPrint.12:y :drawBold.5:y
-    * set :drawPrint.12:alignment :drawBold.5:alignment
-    * draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
+  312 print "Main unit"
+  313 set :drawPrint.12:y 45
+  314 set :drawPrint.12:alignment @bottomLeft
+  315 draw print 23 45 @bottomLeft
   316 label *label71
   317 label *label70
   318 label *label67
-    * set :drawUnit:y 29
   319 jump *label72 notEqual .transportItem null
   320 set :drawUnit.1:item @poly
   321 set :drawUnit.1:items 0
-    * set :drawUnit.1:col 0
-    * set :drawItem.2:columns 1
-    * set :drawItem.2:item @poly
-    * set :drawItem.2:current 0
   322 set :drawItem.2:target .transportTarget
   323 set :drawItem.2:count .transportTarget
-    * op mul *tmp71 1 176
-    * op div *tmp72 176 2
-    * op sub :drawItem.2:barLength 210 88
-    * op add :drawItem.2:textEnd 48 122
-    * op mul *tmp75 122 :drawUnit.1:items
-    * op div *tmp76 *tmp75 :drawItem.2:target
+  324 op mul *tmp75 122 0
+  325 op div *tmp76 0 :drawItem.2:target
   326 op min :drawItem.2:length 122 *tmp76
-    * op mul *tmp78 0 176
-    * op div *tmp79 0 2
-    * op add :drawItem.2:iconX 11 0
-    * op mul *tmp81 0 176
-    * op div *tmp82 0 2
-    * op add :drawItem.2:barX 22 0
-    * op mul *tmp84 0 176
-    * op div *tmp85 0 2
   327 op add :drawItem.2:textX 170 0
   328 draw col %[white]
-    * op add *tmp87 29 5
-    * draw image 11 34 :drawUnit.1:item 16 0
+  329 draw image 11 34 @poly 16 0
   330 draw color 0 128 0 255
   331 draw rect 22 29 :drawItem.2:length 10
   332 draw color 0 255 0 255
   333 draw lineRect 22 29 122 10
-    * op add *tmp88 29 5
   334 op add *tmp89 34 2
   335 set :drawBold.6:x 170
   336 set :drawBold.6:y 36
   337 set :drawBold.6:alignment @right
   338 set :drawBold.6:text :drawItem.2:count
-    * set :drawText.13:x :drawItem.2:textX
-    * set :drawText.13:y *tmp89
+  339 set :drawText.13:x 170
+  340 set :drawText.13:y 36
   341 set :drawText.13:alignment @right
-    * set :drawText.13:text :drawItem.2:count
-    * print :drawBold.6:text
-    * set :drawPrint.13:x :drawBold.6:x
-    * set :drawPrint.13:y :drawBold.6:y
-    * set :drawPrint.13:alignment :drawBold.6:alignment
-    * draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
+  342 print :drawItem.2:count
+  343 set :drawPrint.13:x 170
+  344 set :drawPrint.13:y 36
+  345 set :drawPrint.13:alignment @right
+  346 draw print :drawItem.2:textX *tmp89 @right
   347 label *label78
   348 label *label77
-    * op add :drawText.14:x :drawItem.2:textX 1
-    * set :drawText.14:y *tmp89
+  349 op add :drawText.14:x 170 1
+  350 set :drawText.14:y 36
   351 set :drawText.14:alignment @right
-    * set :drawText.14:text :drawItem.2:count
-    * print :drawBold.6:text
-    * set :drawPrint.14:x :drawText.14:x
-    * set :drawPrint.14:y :drawBold.6:y
-    * set :drawPrint.14:alignment :drawBold.6:alignment
-    * draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
+  352 print :drawItem.2:count
+  353 set :drawPrint.14:x 171
+  354 set :drawPrint.14:y 36
+  355 set :drawPrint.14:alignment @right
+  356 draw print 171 *tmp89 @right
   357 label *label80
   358 label *label79
   359 label *label76
-    * op add :drawUnit.1:col 0 1
   360 jump *label81 lessThan 1 1
-    * op sub :drawUnit:y 29 15
   361 label *label81
   362 label *label82
   363 label *label75
 
   370 op mul *tmp96 *tmp94 *tmp95
   371 set :drawUnit.2:item .transportItem
   372 set :drawUnit.2:items *tmp96
-    * set :drawUnit.2:col 0
-    * set :drawItem.3:columns 1
-    * set :drawItem.3:item :drawUnit.2:item
-    * set :drawItem.3:current *tmp96
   373 set :drawItem.3:target .transportTarget
   374 set :drawItem.3:count .transportTarget
-    * op mul *tmp97 1 176
-    * op div *tmp98 176 2
-    * op sub :drawItem.3:barLength 210 88
-    * op add :drawItem.3:textEnd 48 122
-    * op mul *tmp101 122 :drawUnit.2:items
+  375 op mul *tmp101 122 *tmp96
   376 op div *tmp102 *tmp101 :drawItem.3:target
   377 op min :drawItem.3:length 122 *tmp102
-    * op mul *tmp104 0 176
-    * op div *tmp105 0 2
-    * op add :drawItem.3:iconX 11 0
-    * op mul *tmp107 0 176
-    * op div *tmp108 0 2
-    * op add :drawItem.3:barX 22 0
-    * op mul *tmp110 0 176
-    * op div *tmp111 0 2
   378 op add :drawItem.3:textX 170 0
   379 draw col %[white]
-    * op add *tmp113 29 5
   380 draw image 11 34 :drawUnit.2:item 16 0
   381 draw color 0 128 0 255
   382 draw rect 22 29 :drawItem.3:length 10
   383 draw color 0 255 0 255
   384 draw lineRect 22 29 122 10
-    * op add *tmp114 29 5
   385 op add *tmp115 34 2
   386 set :drawBold.7:x 170
   387 set :drawBold.7:y 36
   388 set :drawBold.7:alignment @right
   389 set :drawBold.7:text :drawItem.3:count
-    * set :drawText.15:x :drawItem.3:textX
-    * set :drawText.15:y *tmp115
+  390 set :drawText.15:x 170
+  391 set :drawText.15:y 36
   392 set :drawText.15:alignment @right
-    * set :drawText.15:text :drawItem.3:count
-    * print :drawBold.7:text
-    * set :drawPrint.15:x :drawBold.7:x
-    * set :drawPrint.15:y :drawBold.7:y
-    * set :drawPrint.15:alignment :drawBold.7:alignment
-    * draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
+  393 print :drawItem.3:count
+  394 set :drawPrint.15:x 170
+  395 set :drawPrint.15:y 36
+  396 set :drawPrint.15:alignment @right
+  397 draw print :drawItem.3:textX *tmp115 @right
   398 label *label87
   399 label *label86
-    * op add :drawText.16:x :drawItem.3:textX 1
-    * set :drawText.16:y *tmp115
+  400 op add :drawText.16:x 170 1
+  401 set :drawText.16:y 36
   402 set :drawText.16:alignment @right
-    * set :drawText.16:text :drawItem.3:count
-    * print :drawBold.7:text
-    * set :drawPrint.16:x :drawText.16:x
-    * set :drawPrint.16:y :drawBold.7:y
-    * set :drawPrint.16:alignment :drawBold.7:alignment
-    * draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
+  403 print :drawItem.3:count
+  404 set :drawPrint.16:x 171
+  405 set :drawPrint.16:y 36
+  406 set :drawPrint.16:alignment @right
+  407 draw print 171 *tmp115 @right
   408 label *label89
   409 label *label88
   410 label *label85
-    * op add :drawUnit.2:col 0 1
   411 jump *label90 lessThan 1 1
-    * op sub :drawUnit:y 29 15
   412 label *label90
   413 label *label91
   414 label *label84
 
   417 label *label66
   418 set :drawUnits:x 10
   419 draw col %[white]
-    * set :drawUnitCount:type @flare
   420 set :drawUnitCount:count .flares
   421 jump *label94 lessThanEq :drawUnitCount:count 0
   422 draw image 10 8 @flare 12 0
 
   424 op add :drawText.17:x 10 7
   425 set :drawText.17:y 10
   426 set :drawText.17:alignment @left
-    * set :drawText.17:text :drawUnitCount:count
   427 print :drawUnitCount:count
-    * set :drawPrint.17:x 17
-    * set :drawPrint.17:y 10
-    * set :drawPrint.17:alignment @left
-    * draw print :drawText.17:x :drawText.17:y :drawText.17:alignment
+  428 draw print 17 10 @left
   429 label *label97
   430 label *label96
   431 op add :drawUnits:x 10 30
   432 label *label94
   433 label *label95
   434 label *label93
-    * set :drawUnitCount.1:type @mono
   435 set :drawUnitCount.1:count .monos
   436 jump *label99 lessThanEq :drawUnitCount.1:count 0
   437 draw image :drawUnits:x 8 @mono 12 0
 
   439 op add :drawText.18:x :drawUnits:x 7
   440 set :drawText.18:y 10
   441 set :drawText.18:alignment @left
-    * set :drawText.18:text :drawUnitCount.1:count
   442 print :drawUnitCount.1:count
-    * set :drawPrint.18:x :drawText.18:x
-    * set :drawPrint.18:y 10
-    * set :drawPrint.18:alignment @left
-    * draw print :drawText.18:x :drawText.18:y :drawText.18:alignment
+  443 draw print :drawText.18:x 10 @left
   444 label *label102
   445 label *label101
   446 op add :drawUnits:x :drawUnits:x 30
   447 label *label99
   448 label *label100
   449 label *label98
-    * set :drawUnitCount.2:type @poly
   450 set :drawUnitCount.2:count .polys
   451 jump *label104 lessThanEq :drawUnitCount.2:count 0
   452 draw image :drawUnits:x 8 @poly 12 0
 
   454 op add :drawText.19:x :drawUnits:x 7
   455 set :drawText.19:y 10
   456 set :drawText.19:alignment @left
-    * set :drawText.19:text :drawUnitCount.2:count
   457 print :drawUnitCount.2:count
-    * set :drawPrint.19:x :drawText.19:x
-    * set :drawPrint.19:y 10
-    * set :drawPrint.19:alignment @left
-    * draw print :drawText.19:x :drawText.19:y :drawText.19:alignment
+  458 draw print :drawText.19:x 10 @left
   459 label *label107
   460 label *label106
   461 label *label104

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-153 instructions):
 
    12 draw reset
    13 draw clear 0 0 32
    14 draw col %[gold]
-    * set :drawBold:x 40
-    * set :drawBold:y 161
-    * set :drawBold:alignment @bottom
-    * set :drawBold:text "Building"
-    * set :drawText:x 40
-    * set :drawText:y 161
-    * set :drawText:alignment @bottom
    15 print "Building"
-    * set :drawPrint:x 40
-    * set :drawPrint:y 161
-    * set :drawPrint:alignment @bottom
    16 draw print 40 161 @bottom
    17 label *label12
    18 label *label11
-    * op add :drawText.1:x 40 1
-    * set :drawText.1:y 161
-    * set :drawText.1:alignment @bottom
    19 print "Building"
-    * set :drawPrint.1:y 161
-    * set :drawPrint.1:alignment @bottom
    20 draw print 41 161 @bottom
    21 label *label14
    22 label *label13
 
    36 print ":"
    37 print *tmp10
    38 print :drawHeader:s
-    * set :drawText.2:x 168
-    * set :drawText.2:y 172
-    * set :drawText.2:alignment @topRight
    39 print ""
    40 draw print 168 172 @topRight
    41 label *label18
    42 label *label17
    43 label *label9
    44 jump *label19 equal .unitBuilding false
-    * set :drawBold.1:x 22
-    * set :drawBold.1:y 101
-    * set :drawBold.1:alignment @bottomLeft
-    * set :drawBold.1:text "Air factory"
-    * set :drawText.3:x 22
-    * set :drawText.3:y 101
-    * set :drawText.3:alignment @bottomLeft
    45 print "Air factory"
-    * set :drawPrint.3:x 22
-    * set :drawPrint.3:y 101
-    * set :drawPrint.3:alignment @bottomLeft
    46 draw print 22 101 @bottomLeft
    47 label *label24
    48 label *label23
-    * op add :drawText.4:x 22 1
-    * set :drawText.4:y 101
-    * set :drawText.4:alignment @bottomLeft
    49 print "Air factory"
-    * set :drawPrint.4:y 101
-    * set :drawPrint.4:alignment @bottomLeft
    50 draw print 23 101 @bottomLeft
    51 label *label26
    52 label *label25
    53 label *label22
-    * set :drawUnitBuilding:columns 1
    54 sensor *tmp13 .factory @config
    55 sensor *tmp14 .factory @progress
-    * set :drawItem:columns 1
-    * set :drawItem:count 1
-    * op mul *tmp15 1 176
-    * op mul *tmp16 1 88
-    * op sub :drawItem:barLength 210 88
-    * op add :drawItem:textEnd 48 122
    56 op mul *tmp19 122 *tmp14
-    * op div *tmp20 *tmp19 1
+   57 op mul *tmp20 *tmp14 122
    58 op min :drawItem:length 122 *tmp20
    59 op add :drawItem:textX 170 0
    60 draw col %[white]
 
    64 draw color 0 255 0 255
    65 draw lineRect 22 85 122 10
    66 op add *tmp33 90 2
-    * set :drawBold.2:x 170
-    * set :drawBold.2:y 92
-    * set :drawBold.2:alignment @right
-    * set :drawBold.2:text 1
-    * set :drawText.5:x 170
-    * set :drawText.5:y 92
-    * set :drawText.5:alignment @right
-    * set :drawText.5:text 1
    67 print 1
-    * set :drawPrint.5:x :drawItem:textX
-    * set :drawPrint.5:y 92
-    * set :drawPrint.5:alignment @right
-    * draw print :drawItem:textX *tmp33 @right
+   68 set :drawPrint.5:x 170
+   69 draw print 170 92 @right
    70 label *label30
    71 label *label29
-    * op add :drawText.6:x 170 1
-    * set :drawText.6:y 92
-    * set :drawText.6:alignment @right
-    * set :drawText.6:text 1
    72 print 1
-    * set :drawPrint.6:x 171
-    * set :drawPrint.6:y 92
-    * set :drawPrint.6:alignment @right
-    * draw print 171 *tmp33 @right
+   73 draw print 171 92 @right
    74 label *label32
    75 label *label31
    76 label *label28
 
    81 label *label21
    82 jump *label20 always
    83 label *label19
-    * set :drawBold.3:x 22
-    * set :drawBold.3:y 101
-    * set :drawBold.3:alignment @bottomLeft
-    * set :drawBold.3:text "Materials"
-    * set :drawText.7:x 22
-    * set :drawText.7:y 101
-    * set :drawText.7:alignment @bottomLeft
    84 print "Materials"
-    * set :drawPrint.7:x 22
-    * set :drawPrint.7:y 101
-    * set :drawPrint.7:alignment @bottomLeft
    85 draw print 22 101 @bottomLeft
    86 label *label38
    87 label *label37
-    * op add :drawText.8:x 22 1
-    * set :drawText.8:y 101
-    * set :drawText.8:alignment @bottomLeft
    88 print "Materials"
-    * set :drawPrint.8:y 101
-    * set :drawPrint.8:alignment @bottomLeft
    89 draw print 23 101 @bottomLeft
    90 label *label40
    91 label *label39
 
    99 label *label41
   100 set *tmp39 1
   101 label *label42
-    * set :drawMaterials:columns *tmp39
   102 set :drawMaterials:block .core
   103 set :drawMaterials:item @copper
   104 set :drawMaterials:target .targetCopper
 
   148 label *label43
   149 jump *label54 lessThanEq :drawMaterials:target 0
   150 sensor *tmp43 :drawMaterials:block :drawMaterials:item
-    * set :drawItem.1:columns *tmp39
-    * set :drawItem.1:count :drawMaterials:target
-    * op mul *tmp44 *tmp39 176
   151 op mul *tmp45 *tmp39 88
   152 op sub :drawItem.1:barLength 210 *tmp45
   153 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
   154 op mul *tmp48 :drawItem.1:barLength *tmp43
   155 op div *tmp49 *tmp48 :drawMaterials:target
   156 op min :drawItem.1:length :drawItem.1:barLength *tmp49
-    * op mul *tmp51 :drawMaterials:col 176
   157 op mul *tmp52 :drawMaterials:col 88
   158 op add :drawItem.1:iconX 11 *tmp52
-    * op mul *tmp55 :drawMaterials:col 88
   159 op add :drawItem.1:barX 22 *tmp52
-    * op mul *tmp58 :drawMaterials:col 88
   160 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
   161 draw col %[white]
   162 op add *tmp60 :drawMaterials:y 5
 
   166 draw color 0 255 0 255
   167 draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1:barLength 10
   168 op add *tmp62 :drawMaterials:y 7
-    * set :drawBold.4:x :drawItem.1:textX
-    * set :drawBold.4:y *tmp62
-    * set :drawBold.4:alignment @right
-    * set :drawBold.4:text :drawMaterials:target
-    * set :drawText.9:x :drawItem.1:textX
-    * set :drawText.9:y *tmp62
-    * set :drawText.9:alignment @right
-    * set :drawText.9:text :drawMaterials:target
   169 print :drawMaterials:target
-    * set :drawPrint.9:x :drawItem.1:textX
-    * set :drawPrint.9:y *tmp62
-    * set :drawPrint.9:alignment @right
   170 draw print :drawItem.1:textX *tmp62 @right
   171 label *label59
   172 label *label58
   173 op add :drawText.10:x :drawItem.1:textX 1
-    * set :drawText.10:y *tmp62
-    * set :drawText.10:alignment @right
-    * set :drawText.10:text :drawMaterials:target
   174 print :drawMaterials:target
-    * set :drawPrint.10:y *tmp62
-    * set :drawPrint.10:alignment @right
   175 draw print :drawText.10:x *tmp62 @right
   176 label *label61
   177 label *label60
 
   197 label *label35
   198 label *label20
   199 draw col %[white]
-    * set :drawBold.5:x 22
-    * set :drawBold.5:y 45
-    * set :drawBold.5:alignment @bottomLeft
-    * set :drawBold.5:text "Main unit"
-    * set :drawText.11:x 22
-    * set :drawText.11:y 45
-    * set :drawText.11:alignment @bottomLeft
   200 print "Main unit"
-    * set :drawPrint.11:x 22
-    * set :drawPrint.11:y 45
-    * set :drawPrint.11:alignment @bottomLeft
   201 draw print 22 45 @bottomLeft
   202 label *label69
   203 label *label68
-    * op add :drawText.12:x 22 1
-    * set :drawText.12:y 45
-    * set :drawText.12:alignment @bottomLeft
   204 print "Main unit"
-    * set :drawPrint.12:y 45
-    * set :drawPrint.12:alignment @bottomLeft
   205 draw print 23 45 @bottomLeft
   206 label *label71
   207 label *label70
   208 label *label67
   209 jump *label72 notEqual .transportItem null
-    * set :drawUnit.1:item @poly
-    * set :drawUnit.1:items 0
   210 set :drawItem.2:target .transportTarget
   211 set :drawItem.2:count .transportTarget
-    * op mul *tmp75 122 0
   212 op div *tmp76 0 :drawItem.2:target
   213 op min :drawItem.2:length 122 *tmp76
   214 op add :drawItem.2:textX 170 0
 
   219 draw color 0 255 0 255
   220 draw lineRect 22 29 122 10
   221 op add *tmp89 34 2
-    * set :drawBold.6:x 170
-    * set :drawBold.6:y 36
-    * set :drawBold.6:alignment @right
-    * set :drawBold.6:text :drawItem.2:count
-    * set :drawText.13:x 170
-    * set :drawText.13:y 36
-    * set :drawText.13:alignment @right
   222 print :drawItem.2:count
-    * set :drawPrint.13:x 170
-    * set :drawPrint.13:y 36
-    * set :drawPrint.13:alignment @right
-    * draw print :drawItem.2:textX *tmp89 @right
+  223 draw print 170 36 @right
   224 label *label78
   225 label *label77
-    * op add :drawText.14:x 170 1
-    * set :drawText.14:y 36
-    * set :drawText.14:alignment @right
   226 print :drawItem.2:count
-    * set :drawPrint.14:x 171
-    * set :drawPrint.14:y 36
-    * set :drawPrint.14:alignment @right
-    * draw print 171 *tmp89 @right
+  227 draw print 171 36 @right
   228 label *label80
   229 label *label79
   230 label *label76
 
   240 op equal *tmp95 :drawUnit:unitItem .transportItem
   241 op mul *tmp96 *tmp94 *tmp95
   242 set :drawUnit.2:item .transportItem
-    * set :drawUnit.2:items *tmp96
   243 set :drawItem.3:target .transportTarget
   244 set :drawItem.3:count .transportTarget
   245 op mul *tmp101 122 *tmp96
 
   253 draw color 0 255 0 255
   254 draw lineRect 22 29 122 10
   255 op add *tmp115 34 2
-    * set :drawBold.7:x 170
-    * set :drawBold.7:y 36
-    * set :drawBold.7:alignment @right
-    * set :drawBold.7:text :drawItem.3:count
-    * set :drawText.15:x 170
-    * set :drawText.15:y 36
-    * set :drawText.15:alignment @right
   256 print :drawItem.3:count
-    * set :drawPrint.15:x 170
-    * set :drawPrint.15:y 36
-    * set :drawPrint.15:alignment @right
-    * draw print :drawItem.3:textX *tmp115 @right
+  257 draw print 170 36 @right
   258 label *label87
   259 label *label86
-    * op add :drawText.16:x 170 1
-    * set :drawText.16:y 36
-    * set :drawText.16:alignment @right
   260 print :drawItem.3:count
-    * set :drawPrint.16:x 171
-    * set :drawPrint.16:y 36
-    * set :drawPrint.16:alignment @right
-    * draw print 171 *tmp115 @right
+  261 draw print 171 36 @right
   262 label *label89
   263 label *label88
   264 label *label85
 
   275 jump *label94 lessThanEq :drawUnitCount:count 0
   276 draw image 10 8 @flare 12 0
   277 print "x"
-    * op add :drawText.17:x 10 7
-    * set :drawText.17:y 10
-    * set :drawText.17:alignment @left
   278 print :drawUnitCount:count
   279 draw print 17 10 @left
   280 label *label97
 
   288 draw image :drawUnits:x 8 @mono 12 0
   289 print "x"
   290 op add :drawText.18:x :drawUnits:x 7
-    * set :drawText.18:y 10
-    * set :drawText.18:alignment @left
   291 print :drawUnitCount.1:count
   292 draw print :drawText.18:x 10 @left
   293 label *label102
 
   301 draw image :drawUnits:x 8 @poly 12 0
   302 print "x"
   303 op add :drawText.19:x :drawUnits:x 7
-    * set :drawText.19:y 10
-    * set :drawText.19:alignment @left
   304 print :drawUnitCount.2:count
   305 draw print :drawText.19:x 10 @left
   306 label *label107

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-7 instructions):
 
    55 sensor *tmp14 .factory @progress
    56 op mul *tmp19 122 *tmp14
    57 op mul *tmp20 *tmp14 122
-    * op min :drawItem:length 122 *tmp20
-    * op add :drawItem:textX 170 0
+   58 op min :drawItem:length 122 *tmp19
    59 draw col %[white]
    60 draw image 11 90 *tmp13 16 0
    61 draw color 0 128 0 255
    62 draw rect 22 85 :drawItem:length 10
    63 draw color 0 255 0 255
    64 draw lineRect 22 85 122 10
-    * op add *tmp33 90 2
    65 print 1
-    * set :drawPrint.5:x 170
    66 draw print 170 92 @right
    67 label *label30
    68 label *label29
 
   208 set :drawItem.2:count .transportTarget
   209 op div *tmp76 0 :drawItem.2:target
   210 op min :drawItem.2:length 122 *tmp76
-    * op add :drawItem.2:textX 170 0
   211 draw col %[white]
   212 draw image 11 34 @poly 16 0
   213 draw color 0 128 0 255
   214 draw rect 22 29 :drawItem.2:length 10
   215 draw color 0 255 0 255
   216 draw lineRect 22 29 122 10
-    * op add *tmp89 34 2
   217 print :drawItem.2:count
   218 draw print 170 36 @right
   219 label *label78
 
   240 op mul *tmp101 122 *tmp96
   241 op div *tmp102 *tmp101 :drawItem.3:target
   242 op min :drawItem.3:length 122 *tmp102
-    * op add :drawItem.3:textX 170 0
   243 draw col %[white]
   244 draw image 11 34 :drawUnit.2:item 16 0
   245 draw color 0 128 0 255
   246 draw rect 22 29 :drawItem.3:length 10
   247 draw color 0 255 0 255
   248 draw lineRect 22 29 122 10
-    * op add *tmp115 34 2
   249 print :drawItem.3:count
   250 draw print 170 36 @right
   251 label *label87

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-1 instructions):
 
    54 sensor *tmp13 .factory @config
    55 sensor *tmp14 .factory @progress
    56 op mul *tmp19 122 *tmp14
-    * op mul *tmp20 *tmp14 122
    57 op min :drawItem:length 122 *tmp19
    58 draw col %[white]
    59 draw image 11 90 *tmp13 16 0

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1:
 
    26 op floor :drawHeader:t @second
    27 op idiv :drawHeader:m :drawHeader:t 60
    28 op mod :drawHeader:s :drawHeader:t 60
-    * jump *label15 greaterThanEq :drawHeader:s 10
+   29 set *tmp10 ""
+   30 jump *label16 greaterThanEq :drawHeader:s 10
    31 set *tmp10 "0"
    32 jump *label16 always
-    * label *label15
-    * set *tmp10 ""
    33 label *label16
    34 print :drawHeader:m
    35 print ":"
 
    88 set :drawMaterials:col 0
    89 set :drawMaterials:y 85
    90 set :drawMaterials:count .totalTargets
-    * jump *label41 lessThanEq :drawMaterials:count 2
+   91 set *tmp39 1
+   92 jump *label42 lessThanEq :drawMaterials:count 2
    93 set *tmp39 2
    94 jump *label42 always
-    * label *label41
-    * set *tmp39 1
    95 label *label42
    96 set :drawMaterials:block .core
    97 set :drawMaterials:item @copper

Modifications by Unroll iteration loop at line 111:5 (+208 instructions):
 
    93 set *tmp39 2
    94 jump *label42 always
    95 label *label42
-    * set :drawMaterials:block .core
-    * set :drawMaterials:item @copper
-    * set :drawMaterials:target .targetCopper
-    * setaddr *tmp40 *label46
-    * jump *label43 always
-    * multilabel *label46 (m:marker0)
-    * set :drawMaterials:block .core
-    * set :drawMaterials:item @lead
-    * set :drawMaterials:target .targetLead
-    * setaddr *tmp40 *label47
-    * jump *label43 always
-    * multilabel *label47 (m:marker0)
-    * set :drawMaterials:block .core
-    * set :drawMaterials:item @graphite
-    * set :drawMaterials:target .targetGraphite
-    * setaddr *tmp40 *label48
-    * jump *label43 always
-    * multilabel *label48 (m:marker0)
-    * set :drawMaterials:block .core
-    * set :drawMaterials:item @silicon
-    * set :drawMaterials:target .targetSilicon
-    * setaddr *tmp40 *label49
-    * jump *label43 always
-    * multilabel *label49 (m:marker0)
-    * set :drawMaterials:block .core
-    * set :drawMaterials:item @titanium
-    * set :drawMaterials:target .targetTitanium
-    * setaddr *tmp40 *label50
-    * jump *label43 always
-    * multilabel *label50 (m:marker0)
-    * set :drawMaterials:block .core
-    * set :drawMaterials:item @metaglass
-    * set :drawMaterials:target .targetMetaglass
-    * setaddr *tmp40 *label51
-    * jump *label43 always
-    * multilabel *label51 (m:marker0)
-    * set :drawMaterials:block .factory
-    * set :drawMaterials:item @lead
-    * set :drawMaterials:target .targetLeadFactory
-    * setaddr *tmp40 *label52
-    * jump *label43 always
-    * multilabel *label52 (m:marker0)
-    * set :drawMaterials:block .factory
-    * set :drawMaterials:item @silicon
-    * set :drawMaterials:target .targetSiliconFactory
-    * setaddr *tmp40 *label53
-    * label *label43
-    * jump *label54 lessThanEq :drawMaterials:target 0
-    * sensor *tmp43 :drawMaterials:block :drawMaterials:item
-    * op mul *tmp45 *tmp39 88
-    * op sub :drawItem.1:barLength 210 *tmp45
-    * op add :drawItem.1:textEnd 48 :drawItem.1:barLength
-    * op mul *tmp48 :drawItem.1:barLength *tmp43
-    * op div *tmp49 *tmp48 :drawMaterials:target
-    * op min :drawItem.1:length :drawItem.1:barLength *tmp49
-    * op mul *tmp52 :drawMaterials:col 88
-    * op add :drawItem.1:iconX 11 *tmp52
-    * op add :drawItem.1:barX 22 *tmp52
-    * op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
-    * draw col %[white]
-    * op add *tmp60 :drawMaterials:y 5
-    * draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
-    * draw color 0 128 0 255
-    * draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
-    * draw color 0 255 0 255
-    * draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1:barLength 10
-    * op add *tmp62 :drawMaterials:y 7
-    * print :drawMaterials:target
-    * draw print :drawItem.1:textX *tmp62 @right
-    * label *label59
-    * label *label58
-    * op add :drawText.10:x :drawItem.1:textX 1
-    * print :drawMaterials:target
-    * draw print :drawText.10:x *tmp62 @right
-    * label *label61
-    * label *label60
-    * label *label57
-    * op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label62 lessThan :drawMaterials:col *tmp39
-    * set :drawMaterials:col 0
-    * op sub :drawMaterials:y :drawMaterials:y 15
-    * label *label62
-    * label *label63
-    * label *label56
-    * op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label64 greaterThan :drawMaterials:count 0
-    * jump *label45 always
-    * label *label64
-    * label *label65
-    * label *label54
-    * label *label55
-    * label *label44
-    * multijump *tmp40 0 0 (m:marker0)
-    * multilabel *label53 (m:marker0)
-    * label *label45
+   96 set :drawMaterials:block .core
+   97 set :drawMaterials:item @copper
+   98 set :drawMaterials:target .targetCopper
+   99 label *label109
+  100 jump *label120 lessThanEq :drawMaterials:target 0
+  101 sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  102 op mul *tmp45 *tmp39 88
+  103 op sub :drawItem.1:barLength 210 *tmp45
+  104 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
+  105 op mul *tmp48 :drawItem.1:barLength *tmp43
+  106 op div *tmp49 *tmp48 :drawMaterials:target
+  107 op min :drawItem.1:length :drawItem.1:barLength *tmp49
+  108 op mul *tmp52 :drawMaterials:col 88
+  109 op add :drawItem.1:iconX 11 *tmp52
+  110 op add :drawItem.1:barX 22 *tmp52
+  111 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
+  112 draw col %[white]
+  113 op add *tmp60 :drawMaterials:y 5
+  114 draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  115 draw color 0 128 0 255
+  116 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
+  117 draw color 0 255 0 255
+  118 draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1:barLength 10
+  119 op add *tmp62 :drawMaterials:y 7
+  120 print :drawMaterials:target
+  121 draw print :drawItem.1:textX *tmp62 @right
+  122 label *label110
+  123 label *label111
+  124 op add :drawText.10:x :drawItem.1:textX 1
+  125 print :drawMaterials:target
+  126 draw print :drawText.10:x *tmp62 @right
+  127 label *label112
+  128 label *label113
+  129 label *label114
+  130 op add :drawMaterials:col :drawMaterials:col 1
+  131 jump *label115 lessThan :drawMaterials:col *tmp39
+  132 set :drawMaterials:col 0
+  133 op sub :drawMaterials:y :drawMaterials:y 15
+  134 label *label115
+  135 label *label116
+  136 label *label117
+  137 op sub :drawMaterials:count :drawMaterials:count 1
+  138 jump *label118 greaterThan :drawMaterials:count 0
+  139 jump *label45 always
+  140 label *label118
+  141 label *label119
+  142 label *label120
+  143 label *label121
+  144 label *label122
+  145 set :drawMaterials:block .core
+  146 set :drawMaterials:item @lead
+  147 set :drawMaterials:target .targetLead
+  148 label *label125
+  149 jump *label136 lessThanEq :drawMaterials:target 0
+  150 sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  151 op mul *tmp45 *tmp39 88
+  152 op sub :drawItem.1:barLength 210 *tmp45
+  153 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
+  154 op mul *tmp48 :drawItem.1:barLength *tmp43
+  155 op div *tmp49 *tmp48 :drawMaterials:target
+  156 op min :drawItem.1:length :drawItem.1:barLength *tmp49
+  157 op mul *tmp52 :drawMaterials:col 88
+  158 op add :drawItem.1:iconX 11 *tmp52
+  159 op add :drawItem.1:barX 22 *tmp52
+  160 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
+  161 draw col %[white]
+  162 op add *tmp60 :drawMaterials:y 5
+  163 draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  164 draw color 0 128 0 255
+  165 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
+  166 draw color 0 255 0 255
+  167 draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1:barLength 10
+  168 op add *tmp62 :drawMaterials:y 7
+  169 print :drawMaterials:target
+  170 draw print :drawItem.1:textX *tmp62 @right
+  171 label *label126
+  172 label *label127
+  173 op add :drawText.10:x :drawItem.1:textX 1
+  174 print :drawMaterials:target
+  175 draw print :drawText.10:x *tmp62 @right
+  176 label *label128
+  177 label *label129
+  178 label *label130
+  179 op add :drawMaterials:col :drawMaterials:col 1
+  180 jump *label131 lessThan :drawMaterials:col *tmp39
+  181 set :drawMaterials:col 0
+  182 op sub :drawMaterials:y :drawMaterials:y 15
+  183 label *label131
+  184 label *label132
+  185 label *label133
+  186 op sub :drawMaterials:count :drawMaterials:count 1
+  187 jump *label134 greaterThan :drawMaterials:count 0
+  188 jump *label45 always
+  189 label *label134
+  190 label *label135
+  191 label *label136
+  192 label *label137
+  193 label *label138
+  194 set :drawMaterials:block .core
+  195 set :drawMaterials:item @graphite
+  196 set :drawMaterials:target .targetGraphite
+  197 label *label141
+  198 jump *label152 lessThanEq :drawMaterials:target 0
+  199 sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  200 op mul *tmp45 *tmp39 88
+  201 op sub :drawItem.1:barLength 210 *tmp45
+  202 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
+  203 op mul *tmp48 :drawItem.1:barLength *tmp43
+  204 op div *tmp49 *tmp48 :drawMaterials:target
+  205 op min :drawItem.1:length :drawItem.1:barLength *tmp49
+  206 op mul *tmp52 :drawMaterials:col 88
+  207 op add :drawItem.1:iconX 11 *tmp52
+  208 op add :drawItem.1:barX 22 *tmp52
+  209 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
+  210 draw col %[white]
+  211 op add *tmp60 :drawMaterials:y 5
+  212 draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  213 draw color 0 128 0 255
+  214 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
+  215 draw color 0 255 0 255
+  216 draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1:barLength 10
+  217 op add *tmp62 :drawMaterials:y 7
+  218 print :drawMaterials:target
+  219 draw print :drawItem.1:textX *tmp62 @right
+  220 label *label142
+  221 label *label143
+  222 op add :drawText.10:x :drawItem.1:textX 1
+  223 print :drawMaterials:target
+  224 draw print :drawText.10:x *tmp62 @right
+  225 label *label144
+  226 label *label145
+  227 label *label146
+  228 op add :drawMaterials:col :drawMaterials:col 1
+  229 jump *label147 lessThan :drawMaterials:col *tmp39
+  230 set :drawMaterials:col 0
+  231 op sub :drawMaterials:y :drawMaterials:y 15
+  232 label *label147
+  233 label *label148
+  234 label *label149
+  235 op sub :drawMaterials:count :drawMaterials:count 1
+  236 jump *label150 greaterThan :drawMaterials:count 0
+  237 jump *label45 always
+  238 label *label150
+  239 label *label151
+  240 label *label152
+  241 label *label153
+  242 label *label154
+  243 set :drawMaterials:block .core
+  244 set :drawMaterials:item @silicon
+  245 set :drawMaterials:target .targetSilicon
+  246 label *label157
+  247 jump *label168 lessThanEq :drawMaterials:target 0
+  248 sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  249 op mul *tmp45 *tmp39 88
+  250 op sub :drawItem.1:barLength 210 *tmp45
+  251 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
+  252 op mul *tmp48 :drawItem.1:barLength *tmp43
+  253 op div *tmp49 *tmp48 :drawMaterials:target
+  254 op min :drawItem.1:length :drawItem.1:barLength *tmp49
+  255 op mul *tmp52 :drawMaterials:col 88
+  256 op add :drawItem.1:iconX 11 *tmp52
+  257 op add :drawItem.1:barX 22 *tmp52
+  258 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
+  259 draw col %[white]
+  260 op add *tmp60 :drawMaterials:y 5
+  261 draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  262 draw color 0 128 0 255
+  263 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
+  264 draw color 0 255 0 255
+  265 draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1:barLength 10
+  266 op add *tmp62 :drawMaterials:y 7
+  267 print :drawMaterials:target
+  268 draw print :drawItem.1:textX *tmp62 @right
+  269 label *label158
+  270 label *label159
+  271 op add :drawText.10:x :drawItem.1:textX 1
+  272 print :drawMaterials:target
+  273 draw print :drawText.10:x *tmp62 @right
+  274 label *label160
+  275 label *label161
+  276 label *label162
+  277 op add :drawMaterials:col :drawMaterials:col 1
+  278 jump *label163 lessThan :drawMaterials:col *tmp39
+  279 set :drawMaterials:col 0
+  280 op sub :drawMaterials:y :drawMaterials:y 15
+  281 label *label163
+  282 label *label164
+  283 label *label165
+  284 op sub :drawMaterials:count :drawMaterials:count 1
+  285 jump *label166 greaterThan :drawMaterials:count 0
+  286 jump *label45 always
+  287 label *label166
+  288 label *label167
+  289 label *label168
+  290 label *label169
+  291 label *label170
+  292 set :drawMaterials:block .core
+  293 set :drawMaterials:item @titanium
+  294 set :drawMaterials:target .targetTitanium
+  295 label *label173
+  296 jump *label184 lessThanEq :drawMaterials:target 0
+  297 sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  298 op mul *tmp45 *tmp39 88
+  299 op sub :drawItem.1:barLength 210 *tmp45
+  300 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
+  301 op mul *tmp48 :drawItem.1:barLength *tmp43
+  302 op div *tmp49 *tmp48 :drawMaterials:target
+  303 op min :drawItem.1:length :drawItem.1:barLength *tmp49
+  304 op mul *tmp52 :drawMaterials:col 88
+  305 op add :drawItem.1:iconX 11 *tmp52
+  306 op add :drawItem.1:barX 22 *tmp52
+  307 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
+  308 draw col %[white]
+  309 op add *tmp60 :drawMaterials:y 5
+  310 draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  311 draw color 0 128 0 255
+  312 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
+  313 draw color 0 255 0 255
+  314 draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1:barLength 10
+  315 op add *tmp62 :drawMaterials:y 7
+  316 print :drawMaterials:target
+  317 draw print :drawItem.1:textX *tmp62 @right
+  318 label *label174
+  319 label *label175
+  320 op add :drawText.10:x :drawItem.1:textX 1
+  321 print :drawMaterials:target
+  322 draw print :drawText.10:x *tmp62 @right
+  323 label *label176
+  324 label *label177
+  325 label *label178
+  326 op add :drawMaterials:col :drawMaterials:col 1
+  327 jump *label179 lessThan :drawMaterials:col *tmp39
+  328 set :drawMaterials:col 0
+  329 op sub :drawMaterials:y :drawMaterials:y 15
+  330 label *label179
+  331 label *label180
+  332 label *label181
+  333 op sub :drawMaterials:count :drawMaterials:count 1
+  334 jump *label182 greaterThan :drawMaterials:count 0
+  335 jump *label45 always
+  336 label *label182
+  337 label *label183
+  338 label *label184
+  339 label *label185
+  340 label *label186
+  341 set :drawMaterials:block .core
+  342 set :drawMaterials:item @metaglass
+  343 set :drawMaterials:target .targetMetaglass
+  344 label *label189
+  345 jump *label200 lessThanEq :drawMaterials:target 0
+  346 sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  347 op mul *tmp45 *tmp39 88
+  348 op sub :drawItem.1:barLength 210 *tmp45
+  349 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
+  350 op mul *tmp48 :drawItem.1:barLength *tmp43
+  351 op div *tmp49 *tmp48 :drawMaterials:target
+  352 op min :drawItem.1:length :drawItem.1:barLength *tmp49
+  353 op mul *tmp52 :drawMaterials:col 88
+  354 op add :drawItem.1:iconX 11 *tmp52
+  355 op add :drawItem.1:barX 22 *tmp52
+  356 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
+  357 draw col %[white]
+  358 op add *tmp60 :drawMaterials:y 5
+  359 draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  360 draw color 0 128 0 255
+  361 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
+  362 draw color 0 255 0 255
+  363 draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1:barLength 10
+  364 op add *tmp62 :drawMaterials:y 7
+  365 print :drawMaterials:target
+  366 draw print :drawItem.1:textX *tmp62 @right
+  367 label *label190
+  368 label *label191
+  369 op add :drawText.10:x :drawItem.1:textX 1
+  370 print :drawMaterials:target
+  371 draw print :drawText.10:x *tmp62 @right
+  372 label *label192
+  373 label *label193
+  374 label *label194
+  375 op add :drawMaterials:col :drawMaterials:col 1
+  376 jump *label195 lessThan :drawMaterials:col *tmp39
+  377 set :drawMaterials:col 0
+  378 op sub :drawMaterials:y :drawMaterials:y 15
+  379 label *label195
+  380 label *label196
+  381 label *label197
+  382 op sub :drawMaterials:count :drawMaterials:count 1
+  383 jump *label198 greaterThan :drawMaterials:count 0
+  384 jump *label45 always
+  385 label *label198
+  386 label *label199
+  387 label *label200
+  388 label *label201
+  389 label *label202
+  390 set :drawMaterials:block .factory
+  391 set :drawMaterials:item @lead
+  392 set :drawMaterials:target .targetLeadFactory
+  393 label *label205
+  394 jump *label216 lessThanEq :drawMaterials:target 0
+  395 sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  396 op mul *tmp45 *tmp39 88
+  397 op sub :drawItem.1:barLength 210 *tmp45
+  398 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
+  399 op mul *tmp48 :drawItem.1:barLength *tmp43
+  400 op div *tmp49 *tmp48 :drawMaterials:target
+  401 op min :drawItem.1:length :drawItem.1:barLength *tmp49
+  402 op mul *tmp52 :drawMaterials:col 88
+  403 op add :drawItem.1:iconX 11 *tmp52
+  404 op add :drawItem.1:barX 22 *tmp52
+  405 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
+  406 draw col %[white]
+  407 op add *tmp60 :drawMaterials:y 5
+  408 draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  409 draw color 0 128 0 255
+  410 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
+  411 draw color 0 255 0 255
+  412 draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1:barLength 10
+  413 op add *tmp62 :drawMaterials:y 7
+  414 print :drawMaterials:target
+  415 draw print :drawItem.1:textX *tmp62 @right
+  416 label *label206
+  417 label *label207
+  418 op add :drawText.10:x :drawItem.1:textX 1
+  419 print :drawMaterials:target
+  420 draw print :drawText.10:x *tmp62 @right
+  421 label *label208
+  422 label *label209
+  423 label *label210
+  424 op add :drawMaterials:col :drawMaterials:col 1
+  425 jump *label211 lessThan :drawMaterials:col *tmp39
+  426 set :drawMaterials:col 0
+  427 op sub :drawMaterials:y :drawMaterials:y 15
+  428 label *label211
+  429 label *label212
+  430 label *label213
+  431 op sub :drawMaterials:count :drawMaterials:count 1
+  432 jump *label214 greaterThan :drawMaterials:count 0
+  433 jump *label45 always
+  434 label *label214
+  435 label *label215
+  436 label *label216
+  437 label *label217
+  438 label *label218
+  439 set :drawMaterials:block .factory
+  440 set :drawMaterials:item @silicon
+  441 set :drawMaterials:target .targetSiliconFactory
+  442 label *label221
+  443 jump *label232 lessThanEq :drawMaterials:target 0
+  444 sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  445 op mul *tmp45 *tmp39 88
+  446 op sub :drawItem.1:barLength 210 *tmp45
+  447 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
+  448 op mul *tmp48 :drawItem.1:barLength *tmp43
+  449 op div *tmp49 *tmp48 :drawMaterials:target
+  450 op min :drawItem.1:length :drawItem.1:barLength *tmp49
+  451 op mul *tmp52 :drawMaterials:col 88
+  452 op add :drawItem.1:iconX 11 *tmp52
+  453 op add :drawItem.1:barX 22 *tmp52
+  454 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
+  455 draw col %[white]
+  456 op add *tmp60 :drawMaterials:y 5
+  457 draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  458 draw color 0 128 0 255
+  459 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
+  460 draw color 0 255 0 255
+  461 draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1:barLength 10
+  462 op add *tmp62 :drawMaterials:y 7
+  463 print :drawMaterials:target
+  464 draw print :drawItem.1:textX *tmp62 @right
+  465 label *label222
+  466 label *label223
+  467 op add :drawText.10:x :drawItem.1:textX 1
+  468 print :drawMaterials:target
+  469 draw print :drawText.10:x *tmp62 @right
+  470 label *label224
+  471 label *label225
+  472 label *label226
+  473 op add :drawMaterials:col :drawMaterials:col 1
+  474 jump *label227 lessThan :drawMaterials:col *tmp39
+  475 set :drawMaterials:col 0
+  476 op sub :drawMaterials:y :drawMaterials:y 15
+  477 label *label227
+  478 label *label228
+  479 label *label229
+  480 op sub :drawMaterials:count :drawMaterials:count 1
+  481 jump *label230 greaterThan :drawMaterials:count 0
+  482 jump *label45 always
+  483 label *label230
+  484 label *label231
+  485 label *label232
+  486 label *label233
+  487 label *label234
+  488 label *label45
   489 label *label35
   490 label *label20
   491 draw col %[white]

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
    98 set :drawMaterials:target .targetCopper
    99 label *label109
   100 jump *label120 lessThanEq :drawMaterials:target 0
-    * sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  101 sensor *tmp43 .core @copper
   102 op mul *tmp45 *tmp39 88
   103 op sub :drawItem.1:barLength 210 *tmp45
   104 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
   105 op mul *tmp48 :drawItem.1:barLength *tmp43
   106 op div *tmp49 *tmp48 :drawMaterials:target
   107 op min :drawItem.1:length :drawItem.1:barLength *tmp49
-    * op mul *tmp52 :drawMaterials:col 88
-    * op add :drawItem.1:iconX 11 *tmp52
-    * op add :drawItem.1:barX 22 *tmp52
-    * op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
+  108 op mul *tmp52 0 88
+  109 op add :drawItem.1:iconX 11 0
+  110 op add :drawItem.1:barX 22 0
+  111 op add :drawItem.1:textX :drawItem.1:textEnd 0
   112 draw col %[white]
-    * op add *tmp60 :drawMaterials:y 5
-    * draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  113 op add *tmp60 85 5
+  114 draw image 11 90 @copper 16 0
   115 draw color 0 128 0 255
-    * draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
+  116 draw rect 22 85 :drawItem.1:length 10
   117 draw color 0 255 0 255
-    * draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1:barLength 10
-    * op add *tmp62 :drawMaterials:y 7
+  118 draw lineRect 22 85 :drawItem.1:barLength 10
+  119 op add *tmp62 85 7
   120 print :drawMaterials:target
-    * draw print :drawItem.1:textX *tmp62 @right
+  121 draw print :drawItem.1:textX 92 @right
   122 label *label110
   123 label *label111
   124 op add :drawText.10:x :drawItem.1:textX 1
   125 print :drawMaterials:target
-    * draw print :drawText.10:x *tmp62 @right
+  126 draw print :drawText.10:x 92 @right
   127 label *label112
   128 label *label113
   129 label *label114
-    * op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label115 lessThan :drawMaterials:col *tmp39
+  130 op add :drawMaterials:col 0 1
+  131 jump *label115 lessThan 1 *tmp39
   132 set :drawMaterials:col 0
-    * op sub :drawMaterials:y :drawMaterials:y 15
+  133 op sub :drawMaterials:y 85 15
   134 label *label115
   135 label *label116
   136 label *label117
 
   147 set :drawMaterials:target .targetLead
   148 label *label125
   149 jump *label136 lessThanEq :drawMaterials:target 0
-    * sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  150 sensor *tmp43 .core @lead
   151 op mul *tmp45 *tmp39 88
   152 op sub :drawItem.1:barLength 210 *tmp45
   153 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
 
   160 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
   161 draw col %[white]
   162 op add *tmp60 :drawMaterials:y 5
-    * draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  163 draw image :drawItem.1:iconX *tmp60 @lead 16 0
   164 draw color 0 128 0 255
   165 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
   166 draw color 0 255 0 255
 
   196 set :drawMaterials:target .targetGraphite
   197 label *label141
   198 jump *label152 lessThanEq :drawMaterials:target 0
-    * sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  199 sensor *tmp43 .core @graphite
   200 op mul *tmp45 *tmp39 88
   201 op sub :drawItem.1:barLength 210 *tmp45
   202 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
 
   209 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
   210 draw col %[white]
   211 op add *tmp60 :drawMaterials:y 5
-    * draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  212 draw image :drawItem.1:iconX *tmp60 @graphite 16 0
   213 draw color 0 128 0 255
   214 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
   215 draw color 0 255 0 255
 
   245 set :drawMaterials:target .targetSilicon
   246 label *label157
   247 jump *label168 lessThanEq :drawMaterials:target 0
-    * sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  248 sensor *tmp43 .core @silicon
   249 op mul *tmp45 *tmp39 88
   250 op sub :drawItem.1:barLength 210 *tmp45
   251 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
 
   258 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
   259 draw col %[white]
   260 op add *tmp60 :drawMaterials:y 5
-    * draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  261 draw image :drawItem.1:iconX *tmp60 @silicon 16 0
   262 draw color 0 128 0 255
   263 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
   264 draw color 0 255 0 255
 
   294 set :drawMaterials:target .targetTitanium
   295 label *label173
   296 jump *label184 lessThanEq :drawMaterials:target 0
-    * sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  297 sensor *tmp43 .core @titanium
   298 op mul *tmp45 *tmp39 88
   299 op sub :drawItem.1:barLength 210 *tmp45
   300 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
 
   307 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
   308 draw col %[white]
   309 op add *tmp60 :drawMaterials:y 5
-    * draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  310 draw image :drawItem.1:iconX *tmp60 @titanium 16 0
   311 draw color 0 128 0 255
   312 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
   313 draw color 0 255 0 255
 
   343 set :drawMaterials:target .targetMetaglass
   344 label *label189
   345 jump *label200 lessThanEq :drawMaterials:target 0
-    * sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  346 sensor *tmp43 .core @metaglass
   347 op mul *tmp45 *tmp39 88
   348 op sub :drawItem.1:barLength 210 *tmp45
   349 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
 
   356 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
   357 draw col %[white]
   358 op add *tmp60 :drawMaterials:y 5
-    * draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  359 draw image :drawItem.1:iconX *tmp60 @metaglass 16 0
   360 draw color 0 128 0 255
   361 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
   362 draw color 0 255 0 255
 
   392 set :drawMaterials:target .targetLeadFactory
   393 label *label205
   394 jump *label216 lessThanEq :drawMaterials:target 0
-    * sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  395 sensor *tmp43 :drawMaterials:block @lead
   396 op mul *tmp45 *tmp39 88
   397 op sub :drawItem.1:barLength 210 *tmp45
   398 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
 
   405 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
   406 draw col %[white]
   407 op add *tmp60 :drawMaterials:y 5
-    * draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  408 draw image :drawItem.1:iconX *tmp60 @lead 16 0
   409 draw color 0 128 0 255
   410 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
   411 draw color 0 255 0 255
 
   441 set :drawMaterials:target .targetSiliconFactory
   442 label *label221
   443 jump *label232 lessThanEq :drawMaterials:target 0
-    * sensor *tmp43 :drawMaterials:block :drawMaterials:item
+  444 sensor *tmp43 :drawMaterials:block @silicon
   445 op mul *tmp45 *tmp39 88
   446 op sub :drawItem.1:barLength 210 *tmp45
   447 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
 
   454 op add :drawItem.1:textX :drawItem.1:textEnd *tmp52
   455 draw col %[white]
   456 op add *tmp60 :drawMaterials:y 5
-    * draw image :drawItem.1:iconX *tmp60 :drawMaterials:item 16 0
+  457 draw image :drawItem.1:iconX *tmp60 @silicon 16 0
   458 draw color 0 128 0 255
   459 draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:length 10
   460 draw color 0 255 0 255
 
   472 label *label226
   473 op add :drawMaterials:col :drawMaterials:col 1
   474 jump *label227 lessThan :drawMaterials:col *tmp39
-    * set :drawMaterials:col 0
-    * op sub :drawMaterials:y :drawMaterials:y 15
   475 label *label227
   476 label *label228
   477 label *label229

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-19 instructions):
 
    93 set *tmp39 2
    94 jump *label42 always
    95 label *label42
-    * set :drawMaterials:block .core
-    * set :drawMaterials:item @copper
    96 set :drawMaterials:target .targetCopper
    97 label *label109
    98 jump *label120 lessThanEq :drawMaterials:target 0
 
   103 op mul *tmp48 :drawItem.1:barLength *tmp43
   104 op div *tmp49 *tmp48 :drawMaterials:target
   105 op min :drawItem.1:length :drawItem.1:barLength *tmp49
-    * op mul *tmp52 0 88
-    * op add :drawItem.1:iconX 11 0
-    * op add :drawItem.1:barX 22 0
-    * op add :drawItem.1:textX :drawItem.1:textEnd 0
+  106 op add :drawItem.1:textX :drawItem.1:barLength 48
   107 draw col %[white]
-    * op add *tmp60 85 5
   108 draw image 11 90 @copper 16 0
   109 draw color 0 128 0 255
   110 draw rect 22 85 :drawItem.1:length 10
   111 draw color 0 255 0 255
   112 draw lineRect 22 85 :drawItem.1:barLength 10
-    * op add *tmp62 85 7
   113 print :drawMaterials:target
   114 draw print :drawItem.1:textX 92 @right
   115 label *label110
 
   135 label *label120
   136 label *label121
   137 label *label122
-    * set :drawMaterials:block .core
-    * set :drawMaterials:item @lead
   138 set :drawMaterials:target .targetLead
   139 label *label125
   140 jump *label136 lessThanEq :drawMaterials:target 0
 
   182 label *label136
   183 label *label137
   184 label *label138
-    * set :drawMaterials:block .core
-    * set :drawMaterials:item @graphite
   185 set :drawMaterials:target .targetGraphite
   186 label *label141
   187 jump *label152 lessThanEq :drawMaterials:target 0
 
   229 label *label152
   230 label *label153
   231 label *label154
-    * set :drawMaterials:block .core
-    * set :drawMaterials:item @silicon
   232 set :drawMaterials:target .targetSilicon
   233 label *label157
   234 jump *label168 lessThanEq :drawMaterials:target 0
 
   276 label *label168
   277 label *label169
   278 label *label170
-    * set :drawMaterials:block .core
-    * set :drawMaterials:item @titanium
   279 set :drawMaterials:target .targetTitanium
   280 label *label173
   281 jump *label184 lessThanEq :drawMaterials:target 0
 
   323 label *label184
   324 label *label185
   325 label *label186
-    * set :drawMaterials:block .core
-    * set :drawMaterials:item @metaglass
   326 set :drawMaterials:target .targetMetaglass
   327 label *label189
   328 jump *label200 lessThanEq :drawMaterials:target 0
 
   371 label *label201
   372 label *label202
   373 set :drawMaterials:block .factory
-    * set :drawMaterials:item @lead
   374 set :drawMaterials:target .targetLeadFactory
   375 label *label205
   376 jump *label216 lessThanEq :drawMaterials:target 0
 
   419 label *label217
   420 label *label218
   421 set :drawMaterials:block .factory
-    * set :drawMaterials:item @silicon
   422 set :drawMaterials:target .targetSiliconFactory
   423 label *label221
   424 jump *label232 lessThanEq :drawMaterials:target 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3:
 
   111 draw color 0 255 0 255
   112 draw lineRect 22 85 :drawItem.1:barLength 10
   113 print :drawMaterials:target
-    * draw print :drawItem.1:textX 92 @right
+  114 draw print :drawItem.1:textEnd 92 @right
   115 label *label110
   116 label *label111
-    * op add :drawText.10:x :drawItem.1:textX 1
+  117 op add :drawText.10:x :drawItem.1:textEnd 1
   118 print :drawMaterials:target
   119 draw print :drawText.10:x 92 @right
   120 label *label112

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-1 instructions):
 
   103 op mul *tmp48 :drawItem.1:barLength *tmp43
   104 op div *tmp49 *tmp48 :drawMaterials:target
   105 op min :drawItem.1:length :drawItem.1:barLength *tmp49
-    * op add :drawItem.1:textX :drawItem.1:barLength 48
   106 draw col %[white]
   107 draw image 11 90 @copper 16 0
   108 draw color 0 128 0 255
 
   113 draw print :drawItem.1:textEnd 92 @right
   114 label *label110
   115 label *label111
-    * op add :drawText.10:x :drawItem.1:textEnd 1
+  116 op add :drawText.10:x :drawItem.1:barLength 49
   117 print :drawMaterials:target
   118 draw print :drawText.10:x 92 @right
   119 label *label112

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-3 instructions):
 
    69 label *label32
    70 label *label31
    71 label *label28
-    * jump *label33 lessThan 1 1
    72 label *label33
    73 label *label34
    74 label *label27
 
   495 label *label80
   496 label *label79
   497 label *label76
-    * jump *label81 lessThan 1 1
   498 label *label81
   499 label *label82
   500 label *label75
 
   526 label *label89
   527 label *label88
   528 label *label85
-    * jump *label90 lessThan 1 1
   529 label *label90
   530 label *label91
   531 label *label84

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-4 instructions):
 
    29 set *tmp10 ""
    30 jump *label16 greaterThanEq :drawHeader:s 10
    31 set *tmp10 "0"
-    * jump *label16 always
    32 label *label16
    33 print :drawHeader:m
    34 print ":"
 
    89 set *tmp39 1
    90 jump *label42 lessThanEq :drawMaterials:count 2
    91 set *tmp39 2
-    * jump *label42 always
    92 label *label42
    93 set :drawMaterials:target .targetCopper
    94 label *label109
 
   448 label *label225
   449 label *label226
   450 op add :drawMaterials:col :drawMaterials:col 1
-    * jump *label227 lessThan :drawMaterials:col *tmp39
   451 label *label227
   452 label *label228
   453 label *label229
   454 op sub :drawMaterials:count :drawMaterials:count 1
   455 jump *label230 greaterThan :drawMaterials:count 0
-    * jump *label45 always
   456 label *label230
   457 label *label231
   458 label *label232

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-1 instructions):
 
   452 label *label228
   453 label *label229
   454 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label230 greaterThan :drawMaterials:count 0
   455 label *label230
   456 label *label231
   457 label *label232

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   116 label *label112
   117 label *label113
   118 label *label114
-    * op add :drawMaterials:col 0 1
+  119 set :drawMaterials:col 1
   120 jump *label115 lessThan 1 *tmp39
   121 set :drawMaterials:col 0
   122 op sub :drawMaterials:y 85 15
 
   473 jump *label72 notEqual .transportItem null
   474 set :drawItem.2:target .transportTarget
   475 set :drawItem.2:count .transportTarget
-    * op div *tmp76 0 :drawItem.2:target
+  476 set *tmp76 0
   477 op min :drawItem.2:length 122 *tmp76
   478 draw col %[white]
   479 draw image 11 34 @poly 16 0

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-3 instructions):
 
   447 label *label224
   448 label *label225
   449 label *label226
-    * op add :drawMaterials:col :drawMaterials:col 1
   450 label *label227
   451 label *label228
   452 label *label229
-    * op sub :drawMaterials:count :drawMaterials:count 1
   453 label *label230
   454 label *label231
   455 label *label232
 
   469 label *label70
   470 label *label67
   471 jump *label72 notEqual .transportItem null
-    * set :drawItem.2:target .transportTarget
   472 set :drawItem.2:count .transportTarget
   473 set *tmp76 0
-    * op min :drawItem.2:length 122 *tmp76
+  474 op min :drawItem.2:length 122 0
   475 draw col %[white]
   476 draw image 11 34 @poly 16 0
   477 draw color 0 128 0 255
-    * draw rect 22 29 :drawItem.2:length 10
+  478 draw rect 22 29 0 10
   479 draw color 0 255 0 255
   480 draw lineRect 22 29 122 10
   481 print :drawItem.2:count

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-2 instructions):
 
   470 label *label67
   471 jump *label72 notEqual .transportItem null
   472 set :drawItem.2:count .transportTarget
-    * set *tmp76 0
-    * op min :drawItem.2:length 122 0
   473 draw col %[white]
   474 draw image 11 34 @poly 16 0
   475 draw color 0 128 0 255

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
     3 label *label2
     4 ubind @poly
     5 ulocate building core false @copper 0 0 0 .core
-    * label *label3
     6 jump *label2 equal .core null
-    * label *label4
     7 printflush null
     8 drawflush null
     9 label *label5
 
    12 draw col %[gold]
    13 print "Building"
    14 draw print 40 161 @bottom
-    * label *label12
-    * label *label11
    15 print "Building"
    16 draw print 41 161 @bottom
-    * label *label14
-    * label *label13
-    * label *label10
    17 draw col %[white]
    18 draw image 40 137 .nextBlock 32 0
    19 op floor :drawHeader:t @second
 
    29 print :drawHeader:s
    30 print ""
    31 draw print 168 172 @topRight
-    * label *label18
-    * label *label17
-    * label *label9
    32 jump *label19 equal .unitBuilding false
    33 print "Air factory"
    34 draw print 22 101 @bottomLeft
-    * label *label24
-    * label *label23
    35 print "Air factory"
    36 draw print 23 101 @bottomLeft
-    * label *label26
-    * label *label25
-    * label *label22
    37 sensor *tmp13 .factory @config
    38 sensor *tmp14 .factory @progress
    39 op mul *tmp19 122 *tmp14
 
    46 draw lineRect 22 85 122 10
    47 print 1
    48 draw print 170 92 @right
-    * label *label30
-    * label *label29
    49 print 1
    50 draw print 171 92 @right
-    * label *label32
-    * label *label31
-    * label *label28
-    * label *label33
-    * label *label34
-    * label *label27
-    * label *label21
    51 jump *label20 always
    52 label *label19
    53 print "Materials"
    54 draw print 22 101 @bottomLeft
-    * label *label38
-    * label *label37
    55 print "Materials"
    56 draw print 23 101 @bottomLeft
-    * label *label40
-    * label *label39
-    * label *label36
    57 set :drawMaterials:col 0
    58 set :drawMaterials:y 85
    59 set :drawMaterials:count .totalTargets
 
    62 set *tmp39 2
    63 label *label42
    64 set :drawMaterials:target .targetCopper
-    * label *label109
    65 jump *label120 lessThanEq :drawMaterials:target 0
    66 sensor *tmp43 .core @copper
    67 op mul *tmp45 *tmp39 88
 
    78 draw lineRect 22 85 :drawItem.1:barLength 10
    79 print :drawMaterials:target
    80 draw print :drawItem.1:textEnd 92 @right
-    * label *label110
-    * label *label111
    81 op add :drawText.10:x :drawItem.1:barLength 49
    82 print :drawMaterials:target
    83 draw print :drawText.10:x 92 @right
-    * label *label112
-    * label *label113
-    * label *label114
    84 set :drawMaterials:col 1
    85 jump *label115 lessThan 1 *tmp39
    86 set :drawMaterials:col 0
    87 op sub :drawMaterials:y 85 15
    88 label *label115
-    * label *label116
-    * label *label117
    89 op sub :drawMaterials:count :drawMaterials:count 1
    90 jump *label118 greaterThan :drawMaterials:count 0
    91 jump *label45 always
    92 label *label118
-    * label *label119
    93 label *label120
-    * label *label121
-    * label *label122
    94 set :drawMaterials:target .targetLead
-    * label *label125
    95 jump *label136 lessThanEq :drawMaterials:target 0
    96 sensor *tmp43 .core @lead
    97 op mul *tmp45 *tmp39 88
 
   114 op add *tmp62 :drawMaterials:y 7
   115 print :drawMaterials:target
   116 draw print :drawItem.1:textX *tmp62 @right
-    * label *label126
-    * label *label127
   117 op add :drawText.10:x :drawItem.1:textX 1
   118 print :drawMaterials:target
   119 draw print :drawText.10:x *tmp62 @right
-    * label *label128
-    * label *label129
-    * label *label130
   120 op add :drawMaterials:col :drawMaterials:col 1
   121 jump *label131 lessThan :drawMaterials:col *tmp39
   122 set :drawMaterials:col 0
   123 op sub :drawMaterials:y :drawMaterials:y 15
   124 label *label131
-    * label *label132
-    * label *label133
   125 op sub :drawMaterials:count :drawMaterials:count 1
   126 jump *label134 greaterThan :drawMaterials:count 0
   127 jump *label45 always
   128 label *label134
-    * label *label135
   129 label *label136
-    * label *label137
-    * label *label138
   130 set :drawMaterials:target .targetGraphite
-    * label *label141
   131 jump *label152 lessThanEq :drawMaterials:target 0
   132 sensor *tmp43 .core @graphite
   133 op mul *tmp45 *tmp39 88
 
   150 op add *tmp62 :drawMaterials:y 7
   151 print :drawMaterials:target
   152 draw print :drawItem.1:textX *tmp62 @right
-    * label *label142
-    * label *label143
   153 op add :drawText.10:x :drawItem.1:textX 1
   154 print :drawMaterials:target
   155 draw print :drawText.10:x *tmp62 @right
-    * label *label144
-    * label *label145
-    * label *label146
   156 op add :drawMaterials:col :drawMaterials:col 1
   157 jump *label147 lessThan :drawMaterials:col *tmp39
   158 set :drawMaterials:col 0
   159 op sub :drawMaterials:y :drawMaterials:y 15
   160 label *label147
-    * label *label148
-    * label *label149
   161 op sub :drawMaterials:count :drawMaterials:count 1
   162 jump *label150 greaterThan :drawMaterials:count 0
   163 jump *label45 always
   164 label *label150
-    * label *label151
   165 label *label152
-    * label *label153
-    * label *label154
   166 set :drawMaterials:target .targetSilicon
-    * label *label157
   167 jump *label168 lessThanEq :drawMaterials:target 0
   168 sensor *tmp43 .core @silicon
   169 op mul *tmp45 *tmp39 88
 
   186 op add *tmp62 :drawMaterials:y 7
   187 print :drawMaterials:target
   188 draw print :drawItem.1:textX *tmp62 @right
-    * label *label158
-    * label *label159
   189 op add :drawText.10:x :drawItem.1:textX 1
   190 print :drawMaterials:target
   191 draw print :drawText.10:x *tmp62 @right
-    * label *label160
-    * label *label161
-    * label *label162
   192 op add :drawMaterials:col :drawMaterials:col 1
   193 jump *label163 lessThan :drawMaterials:col *tmp39
   194 set :drawMaterials:col 0
   195 op sub :drawMaterials:y :drawMaterials:y 15
   196 label *label163
-    * label *label164
-    * label *label165
   197 op sub :drawMaterials:count :drawMaterials:count 1
   198 jump *label166 greaterThan :drawMaterials:count 0
   199 jump *label45 always
   200 label *label166
-    * label *label167
   201 label *label168
-    * label *label169
-    * label *label170
   202 set :drawMaterials:target .targetTitanium
-    * label *label173
   203 jump *label184 lessThanEq :drawMaterials:target 0
   204 sensor *tmp43 .core @titanium
   205 op mul *tmp45 *tmp39 88
 
   222 op add *tmp62 :drawMaterials:y 7
   223 print :drawMaterials:target
   224 draw print :drawItem.1:textX *tmp62 @right
-    * label *label174
-    * label *label175
   225 op add :drawText.10:x :drawItem.1:textX 1
   226 print :drawMaterials:target
   227 draw print :drawText.10:x *tmp62 @right
-    * label *label176
-    * label *label177
-    * label *label178
   228 op add :drawMaterials:col :drawMaterials:col 1
   229 jump *label179 lessThan :drawMaterials:col *tmp39
   230 set :drawMaterials:col 0
   231 op sub :drawMaterials:y :drawMaterials:y 15
   232 label *label179
-    * label *label180
-    * label *label181
   233 op sub :drawMaterials:count :drawMaterials:count 1
   234 jump *label182 greaterThan :drawMaterials:count 0
   235 jump *label45 always
   236 label *label182
-    * label *label183
   237 label *label184
-    * label *label185
-    * label *label186
   238 set :drawMaterials:target .targetMetaglass
-    * label *label189
   239 jump *label200 lessThanEq :drawMaterials:target 0
   240 sensor *tmp43 .core @metaglass
   241 op mul *tmp45 *tmp39 88
 
   258 op add *tmp62 :drawMaterials:y 7
   259 print :drawMaterials:target
   260 draw print :drawItem.1:textX *tmp62 @right
-    * label *label190
-    * label *label191
   261 op add :drawText.10:x :drawItem.1:textX 1
   262 print :drawMaterials:target
   263 draw print :drawText.10:x *tmp62 @right
-    * label *label192
-    * label *label193
-    * label *label194
   264 op add :drawMaterials:col :drawMaterials:col 1
   265 jump *label195 lessThan :drawMaterials:col *tmp39
   266 set :drawMaterials:col 0
   267 op sub :drawMaterials:y :drawMaterials:y 15
   268 label *label195
-    * label *label196
-    * label *label197
   269 op sub :drawMaterials:count :drawMaterials:count 1
   270 jump *label198 greaterThan :drawMaterials:count 0
   271 jump *label45 always
   272 label *label198
-    * label *label199
   273 label *label200
-    * label *label201
-    * label *label202
   274 set :drawMaterials:block .factory
   275 set :drawMaterials:target .targetLeadFactory
-    * label *label205
   276 jump *label216 lessThanEq :drawMaterials:target 0
   277 sensor *tmp43 :drawMaterials:block @lead
   278 op mul *tmp45 *tmp39 88
 
   295 op add *tmp62 :drawMaterials:y 7
   296 print :drawMaterials:target
   297 draw print :drawItem.1:textX *tmp62 @right
-    * label *label206
-    * label *label207
   298 op add :drawText.10:x :drawItem.1:textX 1
   299 print :drawMaterials:target
   300 draw print :drawText.10:x *tmp62 @right
-    * label *label208
-    * label *label209
-    * label *label210
   301 op add :drawMaterials:col :drawMaterials:col 1
   302 jump *label211 lessThan :drawMaterials:col *tmp39
   303 set :drawMaterials:col 0
   304 op sub :drawMaterials:y :drawMaterials:y 15
   305 label *label211
-    * label *label212
-    * label *label213
   306 op sub :drawMaterials:count :drawMaterials:count 1
   307 jump *label214 greaterThan :drawMaterials:count 0
   308 jump *label45 always
   309 label *label214
-    * label *label215
   310 label *label216
-    * label *label217
-    * label *label218
   311 set :drawMaterials:block .factory
   312 set :drawMaterials:target .targetSiliconFactory
-    * label *label221
   313 jump *label232 lessThanEq :drawMaterials:target 0
   314 sensor *tmp43 :drawMaterials:block @silicon
   315 op mul *tmp45 *tmp39 88
 
   332 op add *tmp62 :drawMaterials:y 7
   333 print :drawMaterials:target
   334 draw print :drawItem.1:textX *tmp62 @right
-    * label *label222
-    * label *label223
   335 op add :drawText.10:x :drawItem.1:textX 1
   336 print :drawMaterials:target
   337 draw print :drawText.10:x *tmp62 @right
-    * label *label224
-    * label *label225
-    * label *label226
-    * label *label227
-    * label *label228
-    * label *label229
-    * label *label230
-    * label *label231
   338 label *label232
-    * label *label233
-    * label *label234
   339 label *label45
-    * label *label35
   340 label *label20
   341 draw col %[white]
   342 print "Main unit"
   343 draw print 22 45 @bottomLeft
-    * label *label69
-    * label *label68
   344 print "Main unit"
   345 draw print 23 45 @bottomLeft
-    * label *label71
-    * label *label70
-    * label *label67
   346 jump *label72 notEqual .transportItem null
   347 set :drawItem.2:count .transportTarget
   348 draw col %[white]
 
   353 draw lineRect 22 29 122 10
   354 print :drawItem.2:count
   355 draw print 170 36 @right
-    * label *label78
-    * label *label77
   356 print :drawItem.2:count
   357 draw print 171 36 @right
-    * label *label80
-    * label *label79
-    * label *label76
-    * label *label81
-    * label *label82
-    * label *label75
-    * label *label74
   358 jump *label73 always
   359 label *label72
   360 sensor :drawUnit:unitItem @unit @firstItem
 
   375 draw lineRect 22 29 122 10
   376 print :drawItem.3:count
   377 draw print 170 36 @right
-    * label *label87
-    * label *label86
   378 print :drawItem.3:count
   379 draw print 171 36 @right
-    * label *label89
-    * label *label88
-    * label *label85
-    * label *label90
-    * label *label91
-    * label *label84
-    * label *label83
   380 label *label73
-    * label *label66
   381 set :drawUnits:x 10
   382 draw col %[white]
   383 set :drawUnitCount:count .flares
 
   386 print "x"
   387 print :drawUnitCount:count
   388 draw print 17 10 @left
-    * label *label97
-    * label *label96
   389 op add :drawUnits:x 10 30
   390 label *label94
-    * label *label95
-    * label *label93
   391 set :drawUnitCount.1:count .monos
   392 jump *label99 lessThanEq :drawUnitCount.1:count 0
   393 draw image :drawUnits:x 8 @mono 12 0
 
   395 op add :drawText.18:x :drawUnits:x 7
   396 print :drawUnitCount.1:count
   397 draw print :drawText.18:x 10 @left
-    * label *label102
-    * label *label101
   398 op add :drawUnits:x :drawUnits:x 30
   399 label *label99
-    * label *label100
-    * label *label98
   400 set :drawUnitCount.2:count .polys
   401 jump *label104 lessThanEq :drawUnitCount.2:count 0
   402 draw image :drawUnits:x 8 @poly 12 0
 
   404 op add :drawText.19:x :drawUnits:x 7
   405 print :drawUnitCount.2:count
   406 draw print :drawText.19:x 10 @left
-    * label *label107
-    * label *label106
   407 label *label104
-    * label *label105
-    * label *label103
-    * label *label92
   408 drawflush display1
-    * label *label8
   409 print "[gold]Building "
   410 print .nextBlock
   411 print "\n"
 
   423 print .status3
   424 print "\n"
   425 printflush message1
-    * label *label108
-    * label *label6
   426 jump *label5 always
-    * label *label7
-    * label *label1
   427 wait 1e12
   428 jump *label0 always
   429 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-7 instructions):
 
    87 op sub :drawMaterials:y 85 15
    88 label *label115
    89 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label118 greaterThan :drawMaterials:count 0
-    * jump *label45 always
+   90 jump *label45 lessThanEq :drawMaterials:count 0
    91 label *label118
    92 label *label120
    93 set :drawMaterials:target .targetLead
 
   122 op sub :drawMaterials:y :drawMaterials:y 15
   123 label *label131
   124 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label134 greaterThan :drawMaterials:count 0
-    * jump *label45 always
+  125 jump *label45 lessThanEq :drawMaterials:count 0
   126 label *label134
   127 label *label136
   128 set :drawMaterials:target .targetGraphite
 
   157 op sub :drawMaterials:y :drawMaterials:y 15
   158 label *label147
   159 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label150 greaterThan :drawMaterials:count 0
-    * jump *label45 always
+  160 jump *label45 lessThanEq :drawMaterials:count 0
   161 label *label150
   162 label *label152
   163 set :drawMaterials:target .targetSilicon
 
   192 op sub :drawMaterials:y :drawMaterials:y 15
   193 label *label163
   194 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label166 greaterThan :drawMaterials:count 0
-    * jump *label45 always
+  195 jump *label45 lessThanEq :drawMaterials:count 0
   196 label *label166
   197 label *label168
   198 set :drawMaterials:target .targetTitanium
 
   227 op sub :drawMaterials:y :drawMaterials:y 15
   228 label *label179
   229 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label182 greaterThan :drawMaterials:count 0
-    * jump *label45 always
+  230 jump *label45 lessThanEq :drawMaterials:count 0
   231 label *label182
   232 label *label184
   233 set :drawMaterials:target .targetMetaglass
 
   262 op sub :drawMaterials:y :drawMaterials:y 15
   263 label *label195
   264 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label198 greaterThan :drawMaterials:count 0
-    * jump *label45 always
+  265 jump *label45 lessThanEq :drawMaterials:count 0
   266 label *label198
   267 label *label200
   268 set :drawMaterials:block .factory
 
   298 op sub :drawMaterials:y :drawMaterials:y 15
   299 label *label211
   300 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label214 greaterThan :drawMaterials:count 0
-    * jump *label45 always
+  301 jump *label45 lessThanEq :drawMaterials:count 0
   302 label *label214
   303 label *label216
   304 set :drawMaterials:block .factory

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
    88 label *label115
    89 op sub :drawMaterials:count :drawMaterials:count 1
    90 jump *label45 lessThanEq :drawMaterials:count 0
-    * label *label118
    91 label *label120
    92 set :drawMaterials:target .targetLead
    93 jump *label136 lessThanEq :drawMaterials:target 0
 
   122 label *label131
   123 op sub :drawMaterials:count :drawMaterials:count 1
   124 jump *label45 lessThanEq :drawMaterials:count 0
-    * label *label134
   125 label *label136
   126 set :drawMaterials:target .targetGraphite
   127 jump *label152 lessThanEq :drawMaterials:target 0
 
   156 label *label147
   157 op sub :drawMaterials:count :drawMaterials:count 1
   158 jump *label45 lessThanEq :drawMaterials:count 0
-    * label *label150
   159 label *label152
   160 set :drawMaterials:target .targetSilicon
   161 jump *label168 lessThanEq :drawMaterials:target 0
 
   190 label *label163
   191 op sub :drawMaterials:count :drawMaterials:count 1
   192 jump *label45 lessThanEq :drawMaterials:count 0
-    * label *label166
   193 label *label168
   194 set :drawMaterials:target .targetTitanium
   195 jump *label184 lessThanEq :drawMaterials:target 0
 
   224 label *label179
   225 op sub :drawMaterials:count :drawMaterials:count 1
   226 jump *label45 lessThanEq :drawMaterials:count 0
-    * label *label182
   227 label *label184
   228 set :drawMaterials:target .targetMetaglass
   229 jump *label200 lessThanEq :drawMaterials:target 0
 
   258 label *label195
   259 op sub :drawMaterials:count :drawMaterials:count 1
   260 jump *label45 lessThanEq :drawMaterials:count 0
-    * label *label198
   261 label *label200
   262 set :drawMaterials:block .factory
   263 set :drawMaterials:target .targetLeadFactory
 
   293 label *label211
   294 op sub :drawMaterials:count :drawMaterials:count 1
   295 jump *label45 lessThanEq :drawMaterials:count 0
-    * label *label214
   296 label *label216
   297 set :drawMaterials:block .factory
   298 set :drawMaterials:target .targetSiliconFactory

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-3 instructions):
 
   410 print "\n"
   411 printflush message1
   412 jump *label5 always
-    * wait 1e12
-    * jump *label0 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
     0 set .core null
     1 set *signature "0:v1"
-    * label *label0
     2 label *label2
     3 ubind @poly
     4 ulocate building core false @copper 0 0 0 .core

Modifications by Final phase, Print Merging, iteration 1 (-10 instructions):
 
    23 set *tmp10 "0"
    24 label *label16
    25 print :drawHeader:m
-    * print ":"
-    * print *tmp10
-    * print :drawHeader:s
-    * print ""
+   26 print ":{0}{0}"
+   27 format *tmp10
+   28 format :drawHeader:s
    29 draw print 168 172 @topRight
    30 jump *label19 equal .unitBuilding false
    31 print "Air factory"
 
   390 draw print :drawText.19:x 10 @left
   391 label *label104
   392 drawflush display1
-    * print "[gold]Building "
-    * print .nextBlock
-    * print "\n"
-    * print "==================================[]"
-    * print "\n"
-    * print .status1
-    * print "\n"
-    * print .status2
-    * print .item2
-    * print " "
-    * print "("
-    * print .block2
-    * print ")"
-    * print "\n"
-    * print .status3
-    * print "\n"
+  393 print "[gold]Building {0}\n==================================[]\n{0}\n{0}{0} ({0})\n{0}\n"
+  394 format .nextBlock
+  395 format .status1
+  396 format .status2
+  397 format .item2
+  398 format .block2
+  399 format .status3
   400 printflush message1
   401 jump *label5 always

Final code before resolving virtual instructions:

    0:  jump *label238 always 0 0                                    var core = null;
    1:  draw triangle display1 message1 .block2 .core .factory .flar ...
    2:  draw triangle .item2 .monos .nextBlock .polys .status1 .stat ...
    3:  draw triangle .status3 .targetCopper .targetGraphite .target ...
    4:  draw triangle .targetSilicon .targetSiliconFactory .targetTi ...
    5:  draw triangle .unitBuilding :drawHeader:m :drawHeader:s :dra ...
    6:  draw triangle :drawItem.2:count :drawItem.3:count :drawItem. ...
    7:  draw triangle :drawItem.3:target :drawItem.1:textEnd :drawIt ...
    8:  draw triangle :drawMaterials:target :drawMaterials:y :drawTe ...
    9:  draw triangle :drawUnit:unitItem :drawUnitCount:count :drawU ...
        label *label238                                              ...
   10:  set .core null                                               ...
   11:  set *signature "0:v1"                                        #set target = 8;
        label *label2                                                do
   12:  ubind @poly                                                  ubind(@poly);
   13:  ulocate building core false @copper 0 0 0 .core              core = ulocate(:building, :core, false);
   14:  jump *label2 equal .core null                                do
   15:  printflush null                                              printflush(null);
   16:  drawflush null                                               drawflush(null);
        label *label5                                                while true do
   17:  draw reset 0 0 0 0 0 0                                       reset();
   18:  draw clear 0 0 32 0 0 0                                      clear(0, 0, 32);
   19:  draw col %[gold] 0 0 0 0 0                                   col(%[gold]);
   20:  print "Building"                                             print(text);
   21:  draw print 40 161 @bottom                                    mlogText("draw", "print", in x, in y, in alignment);
   22:  print "Building"                                             print(text);
   23:  draw print 41 161 @bottom                                    mlogText("draw", "print", in x, in y, in alignment);
   24:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
   25:  draw image 40 137 .nextBlock 32 0 0                          image(HEADER_X, HEADER_Y - 24, nextBlock, 32, 0);
   26:  op floor :drawHeader:t @second 0                             var t = floor(@second);
   27:  op idiv :drawHeader:m :drawHeader:t 60                       var m = t \ 60;
   28:  op mod :drawHeader:s :drawHeader:t 60                        var s = t % 60;
   29:  set *tmp10 ""                                                print(m, ":", s < 10 ? "0" : "", s);
   30:  jump *label16 greaterThanEq :drawHeader:s 10                 ...
   31:  set *tmp10 "0"                                               ...
        label *label16                                               ...
   32:  print :drawHeader:m                                          ...
   33:  print ":{0}{0}"                                              ...
   34:  format *tmp10                                                ...
   35:  format :drawHeader:s                                         ...
   36:  draw print 168 172 @topRight                                 mlogText("draw", "print", in x, in y, in alignment);
   37:  jump *label19 equal .unitBuilding false                      if unitBuilding then
   38:  print "Air factory"                                          print(text);
   39:  draw print 22 101 @bottomLeft                                mlogText("draw", "print", in x, in y, in alignment);
   40:  print "Air factory"                                          print(text);
   41:  draw print 23 101 @bottomLeft                                mlogText("draw", "print", in x, in y, in alignment);
   42:  sensor *tmp13 .factory @config                               drawItem(ref col, ref y, columns, factory.@config, factory.@progress, 1.0, 1.0);
   43:  sensor *tmp14 .factory @progress                             ...
   44:  op mul *tmp19 122 *tmp14                                     var length = min(barLength, barLength * current / target);
   45:  op min :drawItem:length 122 *tmp19                           ...
   46:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
   47:  draw image 11 90 *tmp13 16 0 0                               image(iconX, y + ICON_Y, item, 16, 0);
   48:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
   49:  draw rect 22 85 :drawItem:length 10 0 0                      rect(barX, y, length, BAR_HEIGHT);
   50:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
   51:  draw lineRect 22 85 122 10 0 0                               lineRect(barX, y, barLength, BAR_HEIGHT);
   52:  print 1                                                      print(text);
   53:  draw print 170 92 @right                                     mlogText("draw", "print", in x, in y, in alignment);
   54:  print 1                                                      print(text);
   55:  draw print 171 92 @right                                     mlogText("draw", "print", in x, in y, in alignment);
   56:  jump *label20 always 0 0                                     if unitBuilding then
        label *label19                                               ...
   57:  print "Materials"                                            print(text);
   58:  draw print 22 101 @bottomLeft                                mlogText("draw", "print", in x, in y, in alignment);
   59:  print "Materials"                                            print(text);
   60:  draw print 23 101 @bottomLeft                                mlogText("draw", "print", in x, in y, in alignment);
   61:  set :drawMaterials:col 0                                     var col = 0, y = 85;
   62:  set :drawMaterials:y 85                                      ...
   63:  set :drawMaterials:count .totalTargets                       var count = totalTargets;
   64:  set *tmp39 1                                                 var columns = count > 2 ? 2 : 1;
   65:  jump *label42 lessThanEq :drawMaterials:count 2              ...
   66:  set *tmp39 2                                                 ...
        label *label42                                               ...
   67:  set :drawMaterials:target .targetCopper                      for var block, item, target in
   68:  jump *label120 lessThanEq :drawMaterials:target 0            if target > 0 then
   69:  sensor *tmp43 .core @copper                                  drawItem(ref col, ref y, columns, item, block.sensor(item), target, target);
   70:  op mul *tmp45 *tmp39 88                                      var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
   71:  op sub :drawItem.1:barLength 210 *tmp45                      ...
   72:  op add :drawItem.1:textEnd 48 :drawItem.1:barLength          var textEnd = 170 - BAR_LENGTH + barLength;
   73:  op mul *tmp48 :drawItem.1:barLength *tmp43                   var length = min(barLength, barLength * current / target);
   74:  op div *tmp49 *tmp48 :drawMaterials:target                   ...
   75:  op min :drawItem.1:length :drawItem.1:barLength *tmp49       ...
   76:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
   77:  draw image 11 90 @copper 16 0 0                              image(iconX, y + ICON_Y, item, 16, 0);
   78:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
   79:  draw rect 22 85 :drawItem.1:length 10 0 0                    rect(barX, y, length, BAR_HEIGHT);
   80:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
   81:  draw lineRect 22 85 :drawItem.1:barLength 10 0 0             lineRect(barX, y, barLength, BAR_HEIGHT);
   82:  print :drawMaterials:target                                  print(text);
   83:  draw print :drawItem.1:textEnd 92 @right                     mlogText("draw", "print", in x, in y, in alignment);
   84:  op add :drawText.10:x :drawItem.1:barLength 49               drawText(x + 1, y, alignment, text);
   85:  print :drawMaterials:target                                  print(text);
   86:  draw print :drawText.10:x 92 @right                          mlogText("draw", "print", in x, in y, in alignment);
   87:  set :drawMaterials:col 1                                     if ++col >= columns then
   88:  jump *label115 lessThan 1 *tmp39                             ...
   89:  set :drawMaterials:col 0                                     col = 0;
   90:  op sub :drawMaterials:y 85 15                                y -= ROW_HEIGHT;
        label *label115                                              if ++col >= columns then
   91:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
   92:  jump *label45 lessThanEq :drawMaterials:count 0              ...
        label *label120                                              if target > 0 then
   93:  set :drawMaterials:target .targetLead                        for var block, item, target in
   94:  jump *label136 lessThanEq :drawMaterials:target 0            if target > 0 then
   95:  sensor *tmp43 .core @lead                                    drawItem(ref col, ref y, columns, item, block.sensor(item), target, target);
   96:  op mul *tmp45 *tmp39 88                                      var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
   97:  op sub :drawItem.1:barLength 210 *tmp45                      ...
   98:  op add :drawItem.1:textEnd 48 :drawItem.1:barLength          var textEnd = 170 - BAR_LENGTH + barLength;
   99:  op mul *tmp48 :drawItem.1:barLength *tmp43                   var length = min(barLength, barLength * current / target);
  100:  op div *tmp49 *tmp48 :drawMaterials:target                   ...
  101:  op min :drawItem.1:length :drawItem.1:barLength *tmp49       ...
  102:  op mul *tmp52 :drawMaterials:col 88                          var iconX = ICON_X + col * 176 / 2;
  103:  op add :drawItem.1:iconX 11 *tmp52                           ...
  104:  op add :drawItem.1:barX 22 *tmp52                            var barX = BAR_X + col * 176 / 2;
  105:  op add :drawItem.1:textX :drawItem.1:textEnd *tmp52          var textX = textEnd + col * 176 / 2;
  106:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  107:  op add *tmp60 :drawMaterials:y 5                             image(iconX, y + ICON_Y, item, 16, 0);
  108:  draw image :drawItem.1:iconX *tmp60 @lead 16 0 0             ...
  109:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  110:  draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:leng rect(barX, y, length, BAR_HEIGHT);
  111:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  112:  draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1: lineRect(barX, y, barLength, BAR_HEIGHT);
  113:  op add *tmp62 :drawMaterials:y 7                             drawBold(textX, y + ICON_Y + 2, @right, count);
  114:  print :drawMaterials:target                                  print(text);
  115:  draw print :drawItem.1:textX *tmp62 @right                   mlogText("draw", "print", in x, in y, in alignment);
  116:  op add :drawText.10:x :drawItem.1:textX 1                    drawText(x + 1, y, alignment, text);
  117:  print :drawMaterials:target                                  print(text);
  118:  draw print :drawText.10:x *tmp62 @right                      mlogText("draw", "print", in x, in y, in alignment);
  119:  op add :drawMaterials:col :drawMaterials:col 1               if ++col >= columns then
  120:  jump *label131 lessThan :drawMaterials:col *tmp39            ...
  121:  set :drawMaterials:col 0                                     col = 0;
  122:  op sub :drawMaterials:y :drawMaterials:y 15                  y -= ROW_HEIGHT;
        label *label131                                              if ++col >= columns then
  123:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
  124:  jump *label45 lessThanEq :drawMaterials:count 0              ...
        label *label136                                              if target > 0 then
  125:  set :drawMaterials:target .targetGraphite                    for var block, item, target in
  126:  jump *label152 lessThanEq :drawMaterials:target 0            if target > 0 then
  127:  sensor *tmp43 .core @graphite                                drawItem(ref col, ref y, columns, item, block.sensor(item), target, target);
  128:  op mul *tmp45 *tmp39 88                                      var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  129:  op sub :drawItem.1:barLength 210 *tmp45                      ...
  130:  op add :drawItem.1:textEnd 48 :drawItem.1:barLength          var textEnd = 170 - BAR_LENGTH + barLength;
  131:  op mul *tmp48 :drawItem.1:barLength *tmp43                   var length = min(barLength, barLength * current / target);
  132:  op div *tmp49 *tmp48 :drawMaterials:target                   ...
  133:  op min :drawItem.1:length :drawItem.1:barLength *tmp49       ...
  134:  op mul *tmp52 :drawMaterials:col 88                          var iconX = ICON_X + col * 176 / 2;
  135:  op add :drawItem.1:iconX 11 *tmp52                           ...
  136:  op add :drawItem.1:barX 22 *tmp52                            var barX = BAR_X + col * 176 / 2;
  137:  op add :drawItem.1:textX :drawItem.1:textEnd *tmp52          var textX = textEnd + col * 176 / 2;
  138:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  139:  op add *tmp60 :drawMaterials:y 5                             image(iconX, y + ICON_Y, item, 16, 0);
  140:  draw image :drawItem.1:iconX *tmp60 @graphite 16 0 0         ...
  141:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  142:  draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:leng rect(barX, y, length, BAR_HEIGHT);
  143:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  144:  draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1: lineRect(barX, y, barLength, BAR_HEIGHT);
  145:  op add *tmp62 :drawMaterials:y 7                             drawBold(textX, y + ICON_Y + 2, @right, count);
  146:  print :drawMaterials:target                                  print(text);
  147:  draw print :drawItem.1:textX *tmp62 @right                   mlogText("draw", "print", in x, in y, in alignment);
  148:  op add :drawText.10:x :drawItem.1:textX 1                    drawText(x + 1, y, alignment, text);
  149:  print :drawMaterials:target                                  print(text);
  150:  draw print :drawText.10:x *tmp62 @right                      mlogText("draw", "print", in x, in y, in alignment);
  151:  op add :drawMaterials:col :drawMaterials:col 1               if ++col >= columns then
  152:  jump *label147 lessThan :drawMaterials:col *tmp39            ...
  153:  set :drawMaterials:col 0                                     col = 0;
  154:  op sub :drawMaterials:y :drawMaterials:y 15                  y -= ROW_HEIGHT;
        label *label147                                              if ++col >= columns then
  155:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
  156:  jump *label45 lessThanEq :drawMaterials:count 0              ...
        label *label152                                              if target > 0 then
  157:  set :drawMaterials:target .targetSilicon                     for var block, item, target in
  158:  jump *label168 lessThanEq :drawMaterials:target 0            if target > 0 then
  159:  sensor *tmp43 .core @silicon                                 drawItem(ref col, ref y, columns, item, block.sensor(item), target, target);
  160:  op mul *tmp45 *tmp39 88                                      var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  161:  op sub :drawItem.1:barLength 210 *tmp45                      ...
  162:  op add :drawItem.1:textEnd 48 :drawItem.1:barLength          var textEnd = 170 - BAR_LENGTH + barLength;
  163:  op mul *tmp48 :drawItem.1:barLength *tmp43                   var length = min(barLength, barLength * current / target);
  164:  op div *tmp49 *tmp48 :drawMaterials:target                   ...
  165:  op min :drawItem.1:length :drawItem.1:barLength *tmp49       ...
  166:  op mul *tmp52 :drawMaterials:col 88                          var iconX = ICON_X + col * 176 / 2;
  167:  op add :drawItem.1:iconX 11 *tmp52                           ...
  168:  op add :drawItem.1:barX 22 *tmp52                            var barX = BAR_X + col * 176 / 2;
  169:  op add :drawItem.1:textX :drawItem.1:textEnd *tmp52          var textX = textEnd + col * 176 / 2;
  170:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  171:  op add *tmp60 :drawMaterials:y 5                             image(iconX, y + ICON_Y, item, 16, 0);
  172:  draw image :drawItem.1:iconX *tmp60 @silicon 16 0 0          ...
  173:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  174:  draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:leng rect(barX, y, length, BAR_HEIGHT);
  175:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  176:  draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1: lineRect(barX, y, barLength, BAR_HEIGHT);
  177:  op add *tmp62 :drawMaterials:y 7                             drawBold(textX, y + ICON_Y + 2, @right, count);
  178:  print :drawMaterials:target                                  print(text);
  179:  draw print :drawItem.1:textX *tmp62 @right                   mlogText("draw", "print", in x, in y, in alignment);
  180:  op add :drawText.10:x :drawItem.1:textX 1                    drawText(x + 1, y, alignment, text);
  181:  print :drawMaterials:target                                  print(text);
  182:  draw print :drawText.10:x *tmp62 @right                      mlogText("draw", "print", in x, in y, in alignment);
  183:  op add :drawMaterials:col :drawMaterials:col 1               if ++col >= columns then
  184:  jump *label163 lessThan :drawMaterials:col *tmp39            ...
  185:  set :drawMaterials:col 0                                     col = 0;
  186:  op sub :drawMaterials:y :drawMaterials:y 15                  y -= ROW_HEIGHT;
        label *label163                                              if ++col >= columns then
  187:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
  188:  jump *label45 lessThanEq :drawMaterials:count 0              ...
        label *label168                                              if target > 0 then
  189:  set :drawMaterials:target .targetTitanium                    for var block, item, target in
  190:  jump *label184 lessThanEq :drawMaterials:target 0            if target > 0 then
  191:  sensor *tmp43 .core @titanium                                drawItem(ref col, ref y, columns, item, block.sensor(item), target, target);
  192:  op mul *tmp45 *tmp39 88                                      var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  193:  op sub :drawItem.1:barLength 210 *tmp45                      ...
  194:  op add :drawItem.1:textEnd 48 :drawItem.1:barLength          var textEnd = 170 - BAR_LENGTH + barLength;
  195:  op mul *tmp48 :drawItem.1:barLength *tmp43                   var length = min(barLength, barLength * current / target);
  196:  op div *tmp49 *tmp48 :drawMaterials:target                   ...
  197:  op min :drawItem.1:length :drawItem.1:barLength *tmp49       ...
  198:  op mul *tmp52 :drawMaterials:col 88                          var iconX = ICON_X + col * 176 / 2;
  199:  op add :drawItem.1:iconX 11 *tmp52                           ...
  200:  op add :drawItem.1:barX 22 *tmp52                            var barX = BAR_X + col * 176 / 2;
  201:  op add :drawItem.1:textX :drawItem.1:textEnd *tmp52          var textX = textEnd + col * 176 / 2;
  202:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  203:  op add *tmp60 :drawMaterials:y 5                             image(iconX, y + ICON_Y, item, 16, 0);
  204:  draw image :drawItem.1:iconX *tmp60 @titanium 16 0 0         ...
  205:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  206:  draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:leng rect(barX, y, length, BAR_HEIGHT);
  207:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  208:  draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1: lineRect(barX, y, barLength, BAR_HEIGHT);
  209:  op add *tmp62 :drawMaterials:y 7                             drawBold(textX, y + ICON_Y + 2, @right, count);
  210:  print :drawMaterials:target                                  print(text);
  211:  draw print :drawItem.1:textX *tmp62 @right                   mlogText("draw", "print", in x, in y, in alignment);
  212:  op add :drawText.10:x :drawItem.1:textX 1                    drawText(x + 1, y, alignment, text);
  213:  print :drawMaterials:target                                  print(text);
  214:  draw print :drawText.10:x *tmp62 @right                      mlogText("draw", "print", in x, in y, in alignment);
  215:  op add :drawMaterials:col :drawMaterials:col 1               if ++col >= columns then
  216:  jump *label179 lessThan :drawMaterials:col *tmp39            ...
  217:  set :drawMaterials:col 0                                     col = 0;
  218:  op sub :drawMaterials:y :drawMaterials:y 15                  y -= ROW_HEIGHT;
        label *label179                                              if ++col >= columns then
  219:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
  220:  jump *label45 lessThanEq :drawMaterials:count 0              ...
        label *label184                                              if target > 0 then
  221:  set :drawMaterials:target .targetMetaglass                   for var block, item, target in
  222:  jump *label200 lessThanEq :drawMaterials:target 0            if target > 0 then
  223:  sensor *tmp43 .core @metaglass                               drawItem(ref col, ref y, columns, item, block.sensor(item), target, target);
  224:  op mul *tmp45 *tmp39 88                                      var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  225:  op sub :drawItem.1:barLength 210 *tmp45                      ...
  226:  op add :drawItem.1:textEnd 48 :drawItem.1:barLength          var textEnd = 170 - BAR_LENGTH + barLength;
  227:  op mul *tmp48 :drawItem.1:barLength *tmp43                   var length = min(barLength, barLength * current / target);
  228:  op div *tmp49 *tmp48 :drawMaterials:target                   ...
  229:  op min :drawItem.1:length :drawItem.1:barLength *tmp49       ...
  230:  op mul *tmp52 :drawMaterials:col 88                          var iconX = ICON_X + col * 176 / 2;
  231:  op add :drawItem.1:iconX 11 *tmp52                           ...
  232:  op add :drawItem.1:barX 22 *tmp52                            var barX = BAR_X + col * 176 / 2;
  233:  op add :drawItem.1:textX :drawItem.1:textEnd *tmp52          var textX = textEnd + col * 176 / 2;
  234:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  235:  op add *tmp60 :drawMaterials:y 5                             image(iconX, y + ICON_Y, item, 16, 0);
  236:  draw image :drawItem.1:iconX *tmp60 @metaglass 16 0 0        ...
  237:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  238:  draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:leng rect(barX, y, length, BAR_HEIGHT);
  239:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  240:  draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1: lineRect(barX, y, barLength, BAR_HEIGHT);
  241:  op add *tmp62 :drawMaterials:y 7                             drawBold(textX, y + ICON_Y + 2, @right, count);
  242:  print :drawMaterials:target                                  print(text);
  243:  draw print :drawItem.1:textX *tmp62 @right                   mlogText("draw", "print", in x, in y, in alignment);
  244:  op add :drawText.10:x :drawItem.1:textX 1                    drawText(x + 1, y, alignment, text);
  245:  print :drawMaterials:target                                  print(text);
  246:  draw print :drawText.10:x *tmp62 @right                      mlogText("draw", "print", in x, in y, in alignment);
  247:  op add :drawMaterials:col :drawMaterials:col 1               if ++col >= columns then
  248:  jump *label195 lessThan :drawMaterials:col *tmp39            ...
  249:  set :drawMaterials:col 0                                     col = 0;
  250:  op sub :drawMaterials:y :drawMaterials:y 15                  y -= ROW_HEIGHT;
        label *label195                                              if ++col >= columns then
  251:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
  252:  jump *label45 lessThanEq :drawMaterials:count 0              ...
        label *label200                                              if target > 0 then
  253:  set :drawMaterials:block .factory                            for var block, item, target in
  254:  set :drawMaterials:target .targetLeadFactory                 ...
  255:  jump *label216 lessThanEq :drawMaterials:target 0            if target > 0 then
  256:  sensor *tmp43 :drawMaterials:block @lead                     drawItem(ref col, ref y, columns, item, block.sensor(item), target, target);
  257:  op mul *tmp45 *tmp39 88                                      var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  258:  op sub :drawItem.1:barLength 210 *tmp45                      ...
  259:  op add :drawItem.1:textEnd 48 :drawItem.1:barLength          var textEnd = 170 - BAR_LENGTH + barLength;
  260:  op mul *tmp48 :drawItem.1:barLength *tmp43                   var length = min(barLength, barLength * current / target);
  261:  op div *tmp49 *tmp48 :drawMaterials:target                   ...
  262:  op min :drawItem.1:length :drawItem.1:barLength *tmp49       ...
  263:  op mul *tmp52 :drawMaterials:col 88                          var iconX = ICON_X + col * 176 / 2;
  264:  op add :drawItem.1:iconX 11 *tmp52                           ...
  265:  op add :drawItem.1:barX 22 *tmp52                            var barX = BAR_X + col * 176 / 2;
  266:  op add :drawItem.1:textX :drawItem.1:textEnd *tmp52          var textX = textEnd + col * 176 / 2;
  267:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  268:  op add *tmp60 :drawMaterials:y 5                             image(iconX, y + ICON_Y, item, 16, 0);
  269:  draw image :drawItem.1:iconX *tmp60 @lead 16 0 0             ...
  270:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  271:  draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:leng rect(barX, y, length, BAR_HEIGHT);
  272:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  273:  draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1: lineRect(barX, y, barLength, BAR_HEIGHT);
  274:  op add *tmp62 :drawMaterials:y 7                             drawBold(textX, y + ICON_Y + 2, @right, count);
  275:  print :drawMaterials:target                                  print(text);
  276:  draw print :drawItem.1:textX *tmp62 @right                   mlogText("draw", "print", in x, in y, in alignment);
  277:  op add :drawText.10:x :drawItem.1:textX 1                    drawText(x + 1, y, alignment, text);
  278:  print :drawMaterials:target                                  print(text);
  279:  draw print :drawText.10:x *tmp62 @right                      mlogText("draw", "print", in x, in y, in alignment);
  280:  op add :drawMaterials:col :drawMaterials:col 1               if ++col >= columns then
  281:  jump *label211 lessThan :drawMaterials:col *tmp39            ...
  282:  set :drawMaterials:col 0                                     col = 0;
  283:  op sub :drawMaterials:y :drawMaterials:y 15                  y -= ROW_HEIGHT;
        label *label211                                              if ++col >= columns then
  284:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
  285:  jump *label45 lessThanEq :drawMaterials:count 0              ...
        label *label216                                              if target > 0 then
  286:  set :drawMaterials:block .factory                            for var block, item, target in
  287:  set :drawMaterials:target .targetSiliconFactory              ...
  288:  jump *label232 lessThanEq :drawMaterials:target 0            if target > 0 then
  289:  sensor *tmp43 :drawMaterials:block @silicon                  drawItem(ref col, ref y, columns, item, block.sensor(item), target, target);
  290:  op mul *tmp45 *tmp39 88                                      var barLength = BAR_LENGTH + 176 / 2 - (columns * 176 / 2);
  291:  op sub :drawItem.1:barLength 210 *tmp45                      ...
  292:  op add :drawItem.1:textEnd 48 :drawItem.1:barLength          var textEnd = 170 - BAR_LENGTH + barLength;
  293:  op mul *tmp48 :drawItem.1:barLength *tmp43                   var length = min(barLength, barLength * current / target);
  294:  op div *tmp49 *tmp48 :drawMaterials:target                   ...
  295:  op min :drawItem.1:length :drawItem.1:barLength *tmp49       ...
  296:  op mul *tmp52 :drawMaterials:col 88                          var iconX = ICON_X + col * 176 / 2;
  297:  op add :drawItem.1:iconX 11 *tmp52                           ...
  298:  op add :drawItem.1:barX 22 *tmp52                            var barX = BAR_X + col * 176 / 2;
  299:  op add :drawItem.1:textX :drawItem.1:textEnd *tmp52          var textX = textEnd + col * 176 / 2;
  300:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  301:  op add *tmp60 :drawMaterials:y 5                             image(iconX, y + ICON_Y, item, 16, 0);
  302:  draw image :drawItem.1:iconX *tmp60 @silicon 16 0 0          ...
  303:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  304:  draw rect :drawItem.1:barX :drawMaterials:y :drawItem.1:leng rect(barX, y, length, BAR_HEIGHT);
  305:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  306:  draw lineRect :drawItem.1:barX :drawMaterials:y :drawItem.1: lineRect(barX, y, barLength, BAR_HEIGHT);
  307:  op add *tmp62 :drawMaterials:y 7                             drawBold(textX, y + ICON_Y + 2, @right, count);
  308:  print :drawMaterials:target                                  print(text);
  309:  draw print :drawItem.1:textX *tmp62 @right                   mlogText("draw", "print", in x, in y, in alignment);
  310:  op add :drawText.10:x :drawItem.1:textX 1                    drawText(x + 1, y, alignment, text);
  311:  print :drawMaterials:target                                  print(text);
  312:  draw print :drawText.10:x *tmp62 @right                      mlogText("draw", "print", in x, in y, in alignment);
        label *label232                                              if target > 0 then
        label *label45                                               for var block, item, target in
        label *label20                                               if unitBuilding then
  313:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  314:  print "Main unit"                                            print(text);
  315:  draw print 22 45 @bottomLeft                                 mlogText("draw", "print", in x, in y, in alignment);
  316:  print "Main unit"                                            print(text);
  317:  draw print 23 45 @bottomLeft                                 mlogText("draw", "print", in x, in y, in alignment);
  318:  jump *label72 notEqual .transportItem null                   if transportItem == null then
  319:  set :drawItem.2:count .transportTarget                       drawItem(ref col, ref y, 1, item, items, transportTarget, transportTarget);
  320:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  321:  draw image 11 34 @poly 16 0 0                                image(iconX, y + ICON_Y, item, 16, 0);
  322:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  323:  draw rect 22 29 0 10 0 0                                     rect(barX, y, length, BAR_HEIGHT);
  324:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  325:  draw lineRect 22 29 122 10 0 0                               lineRect(barX, y, barLength, BAR_HEIGHT);
  326:  print :drawItem.2:count                                      print(text);
  327:  draw print 170 36 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  328:  print :drawItem.2:count                                      print(text);
  329:  draw print 171 36 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  330:  jump *label73 always 0 0                                     if transportItem == null then
        label *label72                                               ...
  331:  sensor :drawUnit:unitItem @unit @firstItem                   var unitItem = @unit.@firstItem;
  332:  sensor *tmp94 @unit @totalItems                              drawUnit(transportItem, @unit.@totalItems * (unitItem == transportItem), ref y);
  333:  op equal *tmp95 :drawUnit:unitItem .transportItem            ...
  334:  op mul *tmp96 *tmp94 *tmp95                                  ...
  335:  set :drawUnit.2:item .transportItem                          ...
  336:  set :drawItem.3:target .transportTarget                      drawItem(ref col, ref y, 1, item, items, transportTarget, transportTarget);
  337:  set :drawItem.3:count .transportTarget                       ...
  338:  op mul *tmp101 122 *tmp96                                    var length = min(barLength, barLength * current / target);
  339:  op div *tmp102 *tmp101 :drawItem.3:target                    ...
  340:  op min :drawItem.3:length 122 *tmp102                        ...
  341:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  342:  draw image 11 34 :drawUnit.2:item 16 0 0                     image(iconX, y + ICON_Y, item, 16, 0);
  343:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  344:  draw rect 22 29 :drawItem.3:length 10 0 0                    rect(barX, y, length, BAR_HEIGHT);
  345:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  346:  draw lineRect 22 29 122 10 0 0                               lineRect(barX, y, barLength, BAR_HEIGHT);
  347:  print :drawItem.3:count                                      print(text);
  348:  draw print 170 36 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  349:  print :drawItem.3:count                                      print(text);
  350:  draw print 171 36 @right                                     mlogText("draw", "print", in x, in y, in alignment);
        label *label73                                               if transportItem == null then
  351:  set :drawUnits:x 10                                          var x = 4 + 6;
  352:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  353:  set :drawUnitCount:count .flares                             drawUnitCount(@flare, flares, ref x);
  354:  jump *label94 lessThanEq :drawUnitCount:count 0              if count > 0 then
  355:  draw image 10 8 @flare 12 0 0                                image(x, 2 + 6, type, 12, 0);
  356:  print "x"                                                    print("x");
  357:  print :drawUnitCount:count                                   print(text);
  358:  draw print 17 10 @left                                       mlogText("draw", "print", in x, in y, in alignment);
  359:  op add :drawUnits:x 10 30                                    x += 30;
        label *label94                                               if count > 0 then
  360:  set :drawUnitCount.1:count .monos                            drawUnitCount(@mono, monos, ref x);
  361:  jump *label99 lessThanEq :drawUnitCount.1:count 0            if count > 0 then
  362:  draw image :drawUnits:x 8 @mono 12 0 0                       image(x, 2 + 6, type, 12, 0);
  363:  print "x"                                                    print("x");
  364:  op add :drawText.18:x :drawUnits:x 7                         drawText(x + 7, 2 + 8, @left, count);
  365:  print :drawUnitCount.1:count                                 print(text);
  366:  draw print :drawText.18:x 10 @left                           mlogText("draw", "print", in x, in y, in alignment);
  367:  op add :drawUnits:x :drawUnits:x 30                          x += 30;
        label *label99                                               if count > 0 then
  368:  set :drawUnitCount.2:count .polys                            drawUnitCount(@poly, polys, ref x);
  369:  jump *label104 lessThanEq :drawUnitCount.2:count 0           if count > 0 then
  370:  draw image :drawUnits:x 8 @poly 12 0 0                       image(x, 2 + 6, type, 12, 0);
  371:  print "x"                                                    print("x");
  372:  op add :drawText.19:x :drawUnits:x 7                         drawText(x + 7, 2 + 8, @left, count);
  373:  print :drawUnitCount.2:count                                 print(text);
  374:  draw print :drawText.19:x 10 @left                           mlogText("draw", "print", in x, in y, in alignment);
        label *label104                                              if count > 0 then
  375:  drawflush display1                                           drawflush(display1);
  376:  print "[gold]Building {0}\n================================= println($"[gold]Building $nextBlock");
  377:  format .nextBlock                                            ...
  378:  format .status1                                              println(status1);
  379:  format .status2                                              println($"$status2$item2 ($block2)");
  380:  format .item2                                                ...
  381:  format .block2                                               ...
  382:  format .status3                                              println(status3);
  383:  printflush message1                                          printflush(message1);
  384:  jump *label5 always 0 0                                      while true do


Performance: parsed in 270 ms, compiled in 275 ms, optimized in 708 ms, run in 14 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (4 steps):
The program didn't generate any output.
Execution exception at instruction 12: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
