  1604 instructions before optimizations.
   132 instructions eliminated by Temp Variables Elimination (2 iterations).
   123 instructions eliminated by Dead Code Elimination (7 iterations).
C:\Home\golem\jam-202507\Display.mnd:15:5 Variable 'coreX' is not used.
C:\Home\golem\jam-202507\Display.mnd:15:16 Variable 'coreY' is not used.
C:\Home\golem\jam-202507\Display.mnd:101:9 Variable 'unpackCfg.cu' is not used.
C:\Home\golem\jam-202507\Display.mnd:102:9 Variable 'unpackCfg.pb' is not used.
C:\Home\golem\jam-202507\Display.mnd:103:9 Variable 'unpackCfg.gr' is not used.
C:\Home\golem\jam-202507\Display.mnd:104:9 Variable 'unpackCfg.si' is not used.
C:\Home\golem\jam-202507\Display.mnd:105:9 Variable 'unpackCfg.ti' is not used.
C:\Home\golem\jam-202507\Display.mnd:106:9 Variable 'unpackCfg.mg' is not used.
C:\Home\golem\jam-202507\Display.mnd:107:9 Variable 'unpackCfg.th' is not used.
C:\Home\golem\jam-202507\Display.mnd:492:5 Variable 'mapw' is not used.
C:\Home\golem\jam-202507\Display.mnd:492:19 Variable 'maph' is not used.
    16 instructions eliminated by Jump Normalization (2 passes, 7 iterations).
    38 instructions eliminated by Jump Optimization (7 iterations).
    35 instructions eliminated by Single Step Elimination (3 passes, 11 iterations).
     2 instructions eliminated by Expression Optimization (2 passes, 5 iterations).
     1 instructions eliminated by If Expression Optimization (5 iterations).
   600 instructions eliminated by Data Flow Optimization (5 passes, 28 iterations).
     1 instructions modified by Loop Optimization (5 iterations).
     1 loops improved by Loop Optimization.
   203 instructions added by Loop Unrolling (9 iterations).
     2 loops unrolled by Loop Unrolling.
    24 instructions added by Function Inlining (9 iterations).
     2 function calls inlined by Function Inlining.
     1 jump tables inlined by Array Optimization.
     7 instructions eliminated by Jump Straightening (7 iterations).
     7 instructions updated by JumpThreading.
     3 instructions eliminated by Unreachable Code Elimination (2 iterations).
    13 instructions eliminated by Print Merging.
   859 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 213):
    Unroll iteration loop at line 336:13                         size   +49, benefit       14.1, efficiency      0.287
    Unroll iteration loop at line 354:13                         size  +190, benefit       26.6, efficiency      0.140
  ! Unroll iteration loop at line 557:5                          size  +547, benefit      968.8, efficiency      1.771
    Inline function 'drawBlock' defined at line 528:1            size   +28, benefit      820.3, efficiency     29.297
    Inline function call at line 558:9                           size   +29, benefit      546.9, efficiency     18.858
    Inline function call at line 562:13                          size   +29, benefit      273.4, efficiency      9.429
  * Inline read jump table of array 'BLOCKS'                     size    -3, benefit      156.3, efficiency   Infinity (-3 instructions)
    Inline 'BLOCKS' read access at line 562:23                   size   +75, benefit      156.3, efficiency      2.083

Pass 1: speed optimization selection (cost limit 216):
    Unroll iteration loop at line 336:13                         size   +49, benefit       14.1, efficiency      0.287
    Unroll iteration loop at line 354:13                         size  +190, benefit       26.6, efficiency      0.140
  * Inline function 'drawBlock' defined at line 528:1            size   +28, benefit      820.3, efficiency     29.297 (+23 instructions)
    Inline function call at line 558:9                           size   +29, benefit      546.9, efficiency     18.858
    Inline function call at line 562:13                          size   +29, benefit      273.4, efficiency      9.429

Pass 1: speed optimization selection (cost limit 193):
  * Unroll iteration loop at line 336:13                         size   +49, benefit       14.1, efficiency      0.287 (-2 instructions)
    Unroll iteration loop at line 354:13                         size  +190, benefit       26.6, efficiency      0.140

Pass 1: speed optimization selection (cost limit 195):
  * Unroll iteration loop at line 354:13                         size  +190, benefit       26.6, efficiency      0.140 (+102 instructions)
C:\Home\golem\jam-202507\Display.mnd:277:16 Variable 'drawMaterials.targetFactoryLead' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:277:35 Variable 'drawMaterials.targetFactorySilicon' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:284:13 Variable 'drawMaterials.unit1' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:284:20 Variable 'drawMaterials.unit2' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:284:27 Variable 'drawMaterials.unit3' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:285:13 Variable 'drawMaterials.unitCount1' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:285:25 Variable 'drawMaterials.unitCount2' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:286:13 Variable 'drawMaterials.unitTotal1' is not initialized.
C:\Home\golem\jam-202507\Display.mnd:286:25 Variable 'drawMaterials.unitTotal2' is not initialized.

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-76 instructions):
     0 set .core null
-    * set .coreX 0
-    * set .coreY 0
     1 set .page 0
     2 set .numPages 3
     3 set .recentBuildIndex -1
 
    10 set .polyTarget 0
    11 set .megaTarget 0
    12 set .animation -15
-    * set .mapw @mapw
-    * set .maph @maph
    13 set .pageSwitched false
    14 set *signature "0:v1"
    15 label *label3
 
    22 jump *label6 notEqual *tmp9 false
    23 label *label8
    24 sensor *tmp10 .core @x
-    * set .coreX *tmp10
    25 sensor *tmp11 .core @y
-    * set .coreY *tmp11
    26 printflush null
    27 drawflush null
    28 label *label9
 
    31 set .reconstructorProgress 0
    32 set .factoryProgress .reconstructorProgress
    33 set .displayUnitReset false
-    * set *tmp12 false
    34 jump *label13 always
    35 label *label12
-    * set *tmp12 null
    36 label *label13
    37 op equal *tmp13 .page 0
    38 jump *label14 equal *tmp13 false
 
    42 jump *label19 equal *tmp17 false
    43 draw color 0 0 32 80
    44 draw rect 0 0 176 176
-    * set *tmp18 null
    45 jump *label20 always
    46 label *label19
    47 draw reset
    48 draw clear 0 0 32
-    * set *tmp18 null
    49 label *label20
    50 draw col %[white]
    51 op div *tmp19 .animation 30
 
    84 set :animate:size *tmp32
    85 draw image :animate:x :animate:y @mega :animate:size 0
    86 drawflush display1
-    * set *tmp37 .animation
    87 op add .animation .animation 1
    88 label *label18
    89 set *tmp16 null
 
   124 jump *label31 equal *tmp40 false
   125 draw image 25 139 .nextBlock 25 0
   126 draw image 55 139 .displayNextUnit 25 0
-    * set *tmp41 null
   127 jump *label32 always
   128 label *label31
   129 op equal *tmp42 :drawHeader:count 1
 
   145 draw image 40 137 @hydrogen 32 *tmp48
   146 set *tmp43 null
   147 label *label34
-    * set *tmp41 *tmp43
   148 label *label32
   149 set :drawHeader:tt @second
   150 read *tmp49 processor2 "time"
 
   209 op mul *tmp67 7 :drawHeader:len
   210 op sub *tmp68 *tmp66 *tmp67
   211 draw image *tmp68 146 @titanium 12 0
-    * set *tmp61 null
   212 jump *label42 always
   213 label *label41
-    * set *tmp61 null
   214 label *label42
   215 jump *label45 equal .thoriumContainer false
   216 sensor *tmp70 .thoriumContainer @thorium
 
   234 op mul *tmp74 7 :drawHeader:len.1
   235 op sub *tmp75 *tmp73 *tmp74
   236 draw image *tmp75 146 @thorium 12 0
-    * set *tmp69 null
   237 jump *label46 always
   238 label *label45
-    * set *tmp69 null
   239 label *label46
   240 label *label25
   241 set :drawMaterials:col 0
 
   263 set :drawMaterials:unit1 *tmp87
   264 set :drawMaterials:unit3 null
   265 set :drawMaterials:unit2 :drawMaterials:unit3
-    * set *tmp84 :drawMaterials:unit2
   266 jump *label53 always
   267 label *label52
   268 op equal *tmp88 .displayNextUnit @flare
 
   327 label *label57
   328 set *tmp89 *tmp94
   329 label *label55
-    * set *tmp84 *tmp89
   330 label *label53
   331 set :drawBold.1:x 22
   332 set :drawBold.1:y 105
 
   426 jump *label73 equal *tmp133 false
   427 set :drawItem:col 0
   428 op sub :drawItem:y :drawItem:y 15
-    * set *tmp134 :drawItem:y
   429 jump *label74 always
   430 label *label73
-    * set *tmp134 null
   431 label *label74
   432 label *label67
   433 op notEqual *tmp135 :drawMaterials:unit2 null
 
   503 jump *label83 equal *tmp157 false
   504 set :drawItem.1:col 0
   505 op sub :drawItem.1:y :drawItem.1:y 15
-    * set *tmp158 :drawItem.1:y
   506 jump *label84 always
   507 label *label83
-    * set *tmp158 null
   508 label *label84
   509 label *label77
   510 op notEqual *tmp159 :drawMaterials:unit3 null
 
   582 jump *label93 equal *tmp183 false
   583 set :drawItem.2:col 0
   584 op sub :drawItem.2:y :drawItem.2:y 15
-    * set *tmp184 :drawItem.2:y
   585 jump *label94 always
   586 label *label93
-    * set *tmp184 null
   587 label *label94
   588 label *label87
   589 set *tmp160 null
 
   678 jump *label108 equal *tmp209 false
   679 set :drawItem.3:col 0
   680 op sub :drawItem.3:y :drawItem.3:y 15
-    * set *tmp210 :drawItem.3:y
   681 jump *label109 always
   682 label *label108
-    * set *tmp210 null
   683 label *label109
   684 label *label102
   685 set :drawMaterials:col :drawItem.3:col
   686 set :drawMaterials:y :drawItem.3:y
-    * set *tmp187 null
   687 jump *label101 always
   688 label *label100
-    * set *tmp187 null
   689 label *label101
   690 label *label96
   691 multijump *tmp185 0 0 (m:marker0)
 
   693 label *label97
   694 set *tmp112 null
   695 label *label66
-    * set *tmp77 *tmp112
   696 jump *label51 always
   697 label *label50
   698 op equal *tmp211 .nextBlock @titanium
 
   799 jump *label123 equal *tmp240 false
   800 set :drawItem.4:col 0
   801 op sub :drawItem.4:y :drawItem.4:y 15
-    * set *tmp241 :drawItem.4:y
   802 jump *label124 always
   803 label *label123
-    * set *tmp241 null
   804 label *label124
   805 label *label117
   806 set *tmp214 null
 
   940 jump *label150 equal *tmp269 false
   941 set :drawItem.5:col 0
   942 op sub :drawItem.5:y :drawItem.5:y 15
-    * set *tmp270 :drawItem.5:y
   943 jump *label151 always
   944 label *label150
-    * set *tmp270 null
   945 label *label151
   946 label *label144
   947 set :drawMaterials:col :drawItem.5:col
 
   955 label *label152
   956 set *tmp272 null
   957 label *label153
-    * set *tmp247 *tmp272
   958 jump *label143 always
   959 label *label142
-    * set *tmp247 null
   960 label *label143
   961 label *label133
   962 multijump *tmp245 0 0 (m:marker1)
 
   969 label *label131
   970 set *tmp214 *tmp244
   971 label *label111
-    * set *tmp77 *tmp214
   972 label *label51
   973 label *label49
   974 draw col %[white]
 
  1080 jump *label171 equal *tmp301 false
  1081 set :drawItem.6:col 0
  1082 op sub :drawItem.6:y :drawItem.6:y 15
-    * set *tmp302 :drawItem.6:y
  1083 jump *label172 always
  1084 label *label171
-    * set *tmp302 null
  1085 label *label172
  1086 label *label165
  1087 set :drawUnit.1:y :drawItem.6:y
  1088 label *label164
-    * set *tmp277 null
  1089 jump *label163 always
  1090 label *label162
  1091 sensor *tmp303 @unit @firstItem
 
  1166 jump *label180 equal *tmp330 false
  1167 set :drawItem.7:col 0
  1168 op sub :drawItem.7:y :drawItem.7:y 15
-    * set *tmp331 :drawItem.7:y
  1169 jump *label181 always
  1170 label *label180
-    * set *tmp331 null
  1171 label *label181
  1172 label *label174
  1173 set :drawUnit.2:y :drawItem.7:y
  1174 label *label173
-    * set *tmp277 null
  1175 label *label163
  1176 label *label154
  1177 set :drawUnits:x 170
 
  1194 label *label187
  1195 label *label186
  1196 op sub :drawUnits:x :drawUnits:x 30
-    * set *tmp333 :drawUnits:x
  1197 jump *label185 always
  1198 label *label184
-    * set *tmp333 null
  1199 label *label185
  1200 label *label183
  1201 set :drawUnitCount.1:type @mono
 
  1216 label *label192
  1217 label *label191
  1218 op sub :drawUnits:x :drawUnits:x 30
-    * set *tmp336 :drawUnits:x
  1219 jump *label190 always
  1220 label *label189
-    * set *tmp336 null
  1221 label *label190
  1222 label *label188
  1223 set :drawUnitCount.2:type @flare
 
  1238 label *label197
  1239 label *label196
  1240 op sub :drawUnits:x :drawUnits:x 30
-    * set *tmp339 :drawUnits:x
  1241 jump *label195 always
  1242 label *label194
-    * set *tmp339 null
  1243 label *label195
  1244 label *label193
  1245 label *label182
 
  1247 label *label24
  1248 set *tmp16 null
  1249 label *label17
-    * set *tmp14 *tmp16
  1250 jump *label15 always
  1251 label *label14
  1252 op equal *tmp341 .page 1
 
  1438 setaddr :drawBlock*retaddr *label248 (h:*label248)
  1439 call *label1 *invalid :drawBlock*retval (m:*label248) (h:*label248)
  1440 label *label248
-    * set *tmp345 null
  1441 jump *label247 always
  1442 label *label246
-    * set *tmp345 null
  1443 label *label247
  1444 sensor *tmp348 switch1 @enabled
  1445 jump *label249 equal *tmp348 false
  1446 drawflush null
  1447 jump *label205 always
-    * set *tmp349 null
  1448 jump *label250 always
  1449 label *label249
-    * set *tmp349 null
  1450 label *label250
  1451 jump *label251 equal .pageSwitched false
  1452 drawflush display1
-    * set *tmp350 null
  1453 jump *label252 always
  1454 label *label251
-    * set *tmp350 null
  1455 label *label252
  1456 label *label204
  1457 multijump *tmp343 0 0 (m:marker2)
 
  1558 jump *label267 equal *tmp383 false
  1559 op add :displayLog:x :displayLog:x 58
  1560 set :displayLog:y 164
-    * set *tmp384 :displayLog:y
  1561 jump *label268 always
  1562 label *label267
-    * set *tmp384 null
  1563 label *label268
  1564 label *label264
  1565 label *label259
 
  1567 sensor *tmp385 switch1 @enabled
  1568 jump *label269 equal *tmp385 false
  1569 jump *label258 always
-    * set *tmp386 null
  1570 jump *label270 always
  1571 label *label269
-    * set *tmp386 null
  1572 label *label270
  1573 label *label257
  1574 op sub :displayLog:position :displayLog:position 1
 
  1577 label *label253
  1578 set *tmp342 null
  1579 label *label199
-    * set *tmp14 *tmp342
  1580 label *label15
  1581 op greaterThan *tmp387 .displayMegas 0
  1582 jump *label271 equal *tmp387 false
  1583 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  1584 print "\n"
  1585 printflush message1
-    * set *tmp388 null
  1586 jump *label272 always
  1587 label *label271
  1588 print "[gold]Building "
 
  1605 print "\n"
  1606 printflush message1
  1607 label *label273
-    * set *tmp388 null
  1608 label *label272
  1609 sensor *tmp391 switch1 @enabled
  1610 set .pageSwitched *tmp391
 
  1616 drawflush null
  1617 draw reset
  1618 draw clear 0 0 32
-    * set *tmp392 null
  1619 jump *label275 always
  1620 label *label274
-    * set *tmp392 null
  1621 label *label275
  1622 label *label10
  1623 jump *label9 always
 
  1652 op add :unpackCfg:index :unpackCfg:index 1
  1653 read *tmp442 :unpackCfg:cfg *tmp441
  1654 op sub *tmp443 *tmp442 35
-    * set :unpackCfg:cu *tmp443
  1655 set *tmp444 :unpackCfg:index
  1656 op add :unpackCfg:index :unpackCfg:index 1
  1657 read *tmp445 :unpackCfg:cfg *tmp444
  1658 op sub *tmp446 *tmp445 35
-    * set :unpackCfg:pb *tmp446
  1659 set *tmp447 :unpackCfg:index
  1660 op add :unpackCfg:index :unpackCfg:index 1
  1661 read *tmp448 :unpackCfg:cfg *tmp447
  1662 op sub *tmp449 *tmp448 35
-    * set :unpackCfg:gr *tmp449
  1663 set *tmp450 :unpackCfg:index
  1664 op add :unpackCfg:index :unpackCfg:index 1
  1665 read *tmp451 :unpackCfg:cfg *tmp450
  1666 op sub *tmp452 *tmp451 35
-    * set :unpackCfg:si *tmp452
  1667 set *tmp453 :unpackCfg:index
  1668 op add :unpackCfg:index :unpackCfg:index 1
  1669 read *tmp454 :unpackCfg:cfg *tmp453
  1670 op sub *tmp455 *tmp454 35
-    * set :unpackCfg:ti *tmp455
  1671 set *tmp456 :unpackCfg:index
  1672 op add :unpackCfg:index :unpackCfg:index 1
  1673 read *tmp457 :unpackCfg:cfg *tmp456
  1674 op sub *tmp458 *tmp457 35
-    * set :unpackCfg:mg *tmp458
  1675 set *tmp459 :unpackCfg:index
  1676 op add :unpackCfg:index :unpackCfg:index 1
  1677 read *tmp460 :unpackCfg:cfg *tmp459
  1678 op sub *tmp461 *tmp460 35
-    * set :unpackCfg:th *tmp461
  1679 set *tmp462 :unpackCfg:index
  1680 op add :unpackCfg:index :unpackCfg:index 1
  1681 read *tmp463 :unpackCfg:cfg *tmp462
 
  1704 op and *tmp474 .blocksBuilt *tmp473
  1705 jump *label296 equal *tmp474 false
  1706 draw col %[white]
-    * set *tmp475 null
  1707 jump *label297 always
  1708 label *label296
  1709 draw color 128 255 128 128
-    * set *tmp475 null
  1710 label *label297
  1711 op and *tmp476 :drawBlock:size 1
  1712 op sub *tmp477 1 *tmp476
 
  1718 op mul *tmp482 2 :drawBlock:size
  1719 op mul *tmp483 90 :drawBlock:rotation
  1720 draw image *tmp479 *tmp481 :drawBlock:type *tmp482 *tmp483
-    * set *tmp472 null
  1721 jump *label295 always
  1722 label *label294
-    * set *tmp472 null
  1723 label *label295
  1724 label *label292
  1725 return :drawBlock*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-23 instructions):
 
    21 op equal *tmp9 .core null
    22 jump *label6 notEqual *tmp9 false
    23 label *label8
-    * sensor *tmp10 .core @x
-    * sensor *tmp11 .core @y
    24 printflush null
    25 drawflush null
    26 label *label9
 
    84 drawflush display1
    85 op add .animation .animation 1
    86 label *label18
-    * set *tmp16 null
    87 jump *label17 always
    88 label *label16
    89 draw reset
 
   133 set *tmp45 .displayNextUnit
   134 label *label36
   135 draw image 40 137 *tmp45 32 0
-    * set *tmp43 null
   136 jump *label34 always
   137 label *label33
   138 op div *tmp46 @tick 2
   139 op mod *tmp47 *tmp46 360
   140 op sub *tmp48 360 *tmp47
   141 draw image 40 137 @hydrogen 32 *tmp48
-    * set *tmp43 null
   142 label *label34
   143 label *label32
   144 set :drawHeader:tt @second
 
   273 set :drawMaterials:unit1 *tmp92
   274 set :drawMaterials:unit3 null
   275 set :drawMaterials:unit2 :drawMaterials:unit3
-    * set *tmp89 :drawMaterials:unit2
   276 jump *label55 always
   277 label *label54
   278 op equal *tmp93 .displayNextUnit @poly
 
   319 label *label59
   320 set *tmp94 *tmp102
   321 label *label57
-    * set *tmp89 *tmp94
   322 label *label55
   323 label *label53
   324 set :drawBold.1:x 22
 
   589 label *label75
   590 set *tmp136 null
   591 label *label76
-    * set *tmp112 *tmp136
   592 jump *label66 always
   593 label *label65
   594 set :drawMaterials:item @lead
 
   683 multijump *tmp185 0 0 (m:marker0)
   684 multilabel *label99 (m:marker0)
   685 label *label97
-    * set *tmp112 null
   686 label *label66
   687 jump *label51 always
   688 label *label50
 
   794 label *label123
   795 label *label124
   796 label *label117
-    * set *tmp214 null
   797 jump *label111 always
   798 label *label110
   799 set *tmp242 .totalTargets
 
   940 op lessThanEq *tmp271 :drawMaterials:count 0
   941 jump *label152 equal *tmp271 false
   942 jump *label134 always
-    * set *tmp272 null
   943 jump *label153 always
   944 label *label152
-    * set *tmp272 null
   945 label *label153
   946 jump *label143 always
   947 label *label142
 
   955 label *label130
   956 set *tmp244 null
   957 label *label131
-    * set *tmp214 *tmp244
   958 label *label111
   959 label *label51
   960 label *label49
 
  1232 label *label182
  1233 drawflush display1
  1234 label *label24
-    * set *tmp16 null
  1235 label *label17
  1236 jump *label15 always
  1237 label *label14
 
  1445 label *label205
  1446 drawflush display1
  1447 label *label200
-    * set *tmp342 null
  1448 jump *label199 always
  1449 label *label198
  1450 op sub *tmp351 .page 2
 
  1560 jump *label256 always
  1561 label *label258
  1562 label *label253
-    * set *tmp342 null
  1563 label *label199
  1564 label *label15
  1565 op greaterThan *tmp387 .displayMegas 0
 
  1635 set *tmp441 :unpackCfg:index
  1636 op add :unpackCfg:index :unpackCfg:index 1
  1637 read *tmp442 :unpackCfg:cfg *tmp441
-    * op sub *tmp443 *tmp442 35
  1638 set *tmp444 :unpackCfg:index
  1639 op add :unpackCfg:index :unpackCfg:index 1
  1640 read *tmp445 :unpackCfg:cfg *tmp444
-    * op sub *tmp446 *tmp445 35
  1641 set *tmp447 :unpackCfg:index
  1642 op add :unpackCfg:index :unpackCfg:index 1
  1643 read *tmp448 :unpackCfg:cfg *tmp447
-    * op sub *tmp449 *tmp448 35
  1644 set *tmp450 :unpackCfg:index
  1645 op add :unpackCfg:index :unpackCfg:index 1
  1646 read *tmp451 :unpackCfg:cfg *tmp450
-    * op sub *tmp452 *tmp451 35
  1647 set *tmp453 :unpackCfg:index
  1648 op add :unpackCfg:index :unpackCfg:index 1
  1649 read *tmp454 :unpackCfg:cfg *tmp453
-    * op sub *tmp455 *tmp454 35
  1650 set *tmp456 :unpackCfg:index
  1651 op add :unpackCfg:index :unpackCfg:index 1
  1652 read *tmp457 :unpackCfg:cfg *tmp456
-    * op sub *tmp458 *tmp457 35
  1653 set *tmp459 :unpackCfg:index
  1654 op add :unpackCfg:index :unpackCfg:index 1
  1655 read *tmp460 :unpackCfg:cfg *tmp459
-    * op sub *tmp461 *tmp460 35
  1656 set *tmp462 :unpackCfg:index
  1657 op add :unpackCfg:index :unpackCfg:index 1
  1658 read *tmp463 :unpackCfg:cfg *tmp462

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-13 instructions):
 
   291 op greaterThan *tmp99 .reconstructorProgress 0
   292 op max *tmp100 .factoryProgress *tmp99
   293 set .factoryProgress *tmp100
-    * set *tmp94 .factoryProgress
   294 jump *label57 always
   295 label *label56
   296 op equal *tmp101 .displayNextUnit @mega
 
   316 label *label58
   317 set *tmp102 null
   318 label *label59
-    * set *tmp94 *tmp102
   319 label *label57
   320 label *label55
   321 label *label53
 
   582 label *label85
   583 set *tmp160 null
   584 label *label86
-    * set *tmp136 *tmp160
   585 jump *label76 always
   586 label *label75
-    * set *tmp136 null
   587 label *label76
   588 jump *label66 always
   589 label *label65
 
   946 multijump *tmp245 0 0 (m:marker1)
   947 multilabel *label141 (m:marker1)
   948 label *label134
-    * set *tmp244 null
   949 jump *label131 always
   950 label *label130
-    * set *tmp244 null
   951 label *label131
   952 label *label111
   953 label *label51
 
  1628 set :unpackCfg:y *tmp440
  1629 set *tmp441 :unpackCfg:index
  1630 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp442 :unpackCfg:cfg *tmp441
  1631 set *tmp444 :unpackCfg:index
  1632 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp445 :unpackCfg:cfg *tmp444
  1633 set *tmp447 :unpackCfg:index
  1634 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp448 :unpackCfg:cfg *tmp447
  1635 set *tmp450 :unpackCfg:index
  1636 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp451 :unpackCfg:cfg *tmp450
  1637 set *tmp453 :unpackCfg:index
  1638 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp454 :unpackCfg:cfg *tmp453
  1639 set *tmp456 :unpackCfg:index
  1640 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp457 :unpackCfg:cfg *tmp456
  1641 set *tmp459 :unpackCfg:index
  1642 op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp460 :unpackCfg:cfg *tmp459
  1643 set *tmp462 :unpackCfg:index
  1644 op add :unpackCfg:index :unpackCfg:index 1
  1645 read *tmp463 :unpackCfg:cfg *tmp462

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-11 instructions):
 
   311 op greaterThan *tmp108 :drawMaterials:multiReconstructorProgress 0
   312 op max *tmp109 .reconstructorProgress *tmp108
   313 set .reconstructorProgress *tmp109
-    * set *tmp102 .reconstructorProgress
   314 jump *label59 always
   315 label *label58
-    * set *tmp102 null
   316 label *label59
   317 label *label57
   318 label *label55
 
   575 label *label93
   576 label *label94
   577 label *label87
-    * set *tmp160 null
   578 jump *label86 always
   579 label *label85
-    * set *tmp160 null
   580 label *label86
   581 jump *label76 always
   582 label *label75
 
  1622 op sub *tmp439 *tmp438 35
  1623 op sub *tmp440 *tmp439 7
  1624 set :unpackCfg:y *tmp440
-    * set *tmp441 :unpackCfg:index
  1625 op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp444 :unpackCfg:index
  1626 op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp447 :unpackCfg:index
  1627 op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp450 :unpackCfg:index
  1628 op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp453 :unpackCfg:index
  1629 op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp456 :unpackCfg:index
  1630 op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp459 :unpackCfg:index
  1631 op add :unpackCfg:index :unpackCfg:index 1
  1632 set *tmp462 :unpackCfg:index
  1633 op add :unpackCfg:index :unpackCfg:index 1

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-132 instructions):
 
    15 label *label3
    16 label *label6
    17 ubind @poly
-    * ulocate building core false @copper *tmp6 *tmp7 *tmp8 *tmp5
-    * set .core *tmp5
+   18 ulocate building core false @copper 0 0 0 .core
    19 label *label7
    20 op equal *tmp9 .core null
    21 jump *label6 notEqual *tmp9 false
 
    47 draw col %[white]
    48 op div *tmp19 .animation 30
    49 op min *tmp20 *tmp19 1
-    * op max *tmp21 0 *tmp20
-    * set :animate:ratio *tmp21
+   50 op max :animate:ratio 0 *tmp20
    51 set :lerp:from 40
    52 set :lerp:to 88
    53 set :lerp:ratio :animate:ratio
    54 op sub *tmp23 1 :lerp:ratio
    55 op mul *tmp24 *tmp23 :lerp:from
    56 op mul *tmp25 :lerp:ratio :lerp:to
-    * op add *tmp26 *tmp24 *tmp25
-    * set *tmp22 *tmp26
+   57 op add *tmp22 *tmp24 *tmp25
    58 label *label21
    59 set :animate:x *tmp22
    60 set :lerp.1:from 137
 
    63 op sub *tmp28 1 :lerp.1:ratio
    64 op mul *tmp29 *tmp28 :lerp.1:from
    65 op mul *tmp30 :lerp.1:ratio :lerp.1:to
-    * op add *tmp31 *tmp29 *tmp30
-    * set *tmp27 *tmp31
+   66 op add *tmp27 *tmp29 *tmp30
    67 label *label22
    68 set :animate:y *tmp27
    69 set :lerp.2:from 32
 
    72 op sub *tmp33 1 :lerp.2:ratio
    73 op mul *tmp34 *tmp33 :lerp.2:from
    74 op mul *tmp35 :lerp.2:ratio :lerp.2:to
-    * op add *tmp36 *tmp34 *tmp35
-    * set *tmp32 *tmp36
+   75 op add *tmp32 *tmp34 *tmp35
    76 label *label23
    77 set :animate:size *tmp32
    78 draw image :animate:x :animate:y @mega :animate:size 0
 
    97 draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
    98 label *label28
    99 label *label27
-    * op add *tmp38 :drawBold:x 1
-    * set :drawText.1:x *tmp38
+  100 op add :drawText.1:x :drawBold:x 1
   101 set :drawText.1:y :drawBold:y
   102 set :drawText.1:alignment :drawBold:alignment
   103 print "Goal"
 
   109 label *label29
   110 label *label26
   111 draw col %[white]
-    * op add *tmp39 .nextBlock .displayNextUnit
-    * set :drawHeader:count *tmp39
+  112 op add :drawHeader:count .nextBlock .displayNextUnit
   113 op equal *tmp40 :drawHeader:count 2
   114 jump *label31 equal *tmp40 false
   115 draw image 25 139 .nextBlock 25 0
 
   137 set :drawHeader:tt @second
   138 read *tmp49 processor2 "time"
   139 op div *tmp50 *tmp49 120
-    * op floor *tmp51 *tmp50
-    * set :drawHeader:t *tmp51
-    * op idiv *tmp52 :drawHeader:t 60
-    * set :drawHeader:m *tmp52
-    * op mod *tmp53 :drawHeader:t 60
-    * set :drawHeader:s *tmp53
+  140 op floor :drawHeader:t *tmp50
+  141 op idiv :drawHeader:m :drawHeader:t 60
+  142 op mod :drawHeader:s :drawHeader:t 60
   143 op lessThan *tmp54 :drawHeader:s 10
   144 jump *label37 equal *tmp54 false
   145 set *tmp55 "0"
 
   153 print :drawHeader:s
   154 op mul *tmp56 10 :drawHeader:t
   155 op div *tmp57 *tmp56 :drawHeader:tt
-    * op round *tmp58 *tmp57
-    * set :drawHeader:ratio *tmp58
+  156 op round :drawHeader:ratio *tmp57
   157 op idiv *tmp59 :drawHeader:ratio 10
   158 op mod *tmp60 :drawHeader:ratio 10
   159 print " (x"
 
   172 label *label39
   173 jump *label41 equal .titaniumDrill false
   174 sensor *tmp62 .titaniumDrill @titanium
-    * op max *tmp63 .titaniumDrillCount *tmp62
-    * set :drawHeader:count *tmp63
+  175 op max :drawHeader:count .titaniumDrillCount *tmp62
   176 set :drawHeader:x 170
   177 op log10 *tmp64 :drawHeader:count
-    * op floor *tmp65 *tmp64
-    * set :drawHeader:len *tmp65
+  178 op floor :drawHeader:len *tmp64
   179 set :drawText.3:x :drawHeader:x
   180 set :drawText.3:y 155
   181 set :drawText.3:alignment @topRight
 
   195 label *label41
   196 label *label42
   197 jump *label45 equal .thoriumContainer false
-    * sensor *tmp70 .thoriumContainer @thorium
-    * set :drawHeader:count *tmp70
+  198 sensor :drawHeader:count .thoriumContainer @thorium
   199 set :drawHeader:x.1 120
   200 op log10 *tmp71 :drawHeader:count
-    * op floor *tmp72 *tmp71
-    * set :drawHeader:len.1 *tmp72
+  201 op floor :drawHeader:len.1 *tmp71
   202 set :drawText.4:x :drawHeader:x.1
   203 set :drawText.4:y 155
   204 set :drawText.4:alignment @topRight
 
   223 op equal *tmp76 .nextBlock null
   224 jump *label50 equal *tmp76 false
   225 sensor *tmp78 .airFactory @progress
-    * op max *tmp79 .factoryProgress *tmp78
-    * set .factoryProgress *tmp79
+  226 op max .factoryProgress .factoryProgress *tmp78
   227 sensor *tmp80 .reconstructor @progress
-    * op max *tmp81 .reconstructorProgress *tmp80
-    * set .reconstructorProgress *tmp81
-    * sensor *tmp82 .multiReconstructor @progress
-    * set :drawMaterials:multiReconstructorProgress *tmp82
+  228 op max .reconstructorProgress .reconstructorProgress *tmp80
+  229 sensor :drawMaterials:multiReconstructorProgress .multiReconstructor @progress
   230 op equal *tmp83 .displayNextUnit @mono
   231 jump *label52 equal *tmp83 false
   232 set :drawMaterials:targetFactoryLead 15
   233 set :drawMaterials:targetFactorySilicon 30
   234 set .materialCount 2
-    * set *tmp85 .displayMonos
-    * set :drawMaterials:unitCount1 *tmp85
-    * set *tmp86 .monoTarget
-    * set :drawMaterials:unitTotal1 *tmp86
-    * set *tmp87 .displayNextUnit
-    * set :drawMaterials:unit1 *tmp87
+  235 set :drawMaterials:unitCount1 .displayMonos
+  236 set :drawMaterials:unitTotal1 .monoTarget
+  237 set :drawMaterials:unit1 .displayNextUnit
   238 set :drawMaterials:unit3 null
   239 set :drawMaterials:unit2 :drawMaterials:unit3
   240 jump *label53 always
 
   244 set :drawMaterials:targetFactoryLead 0
   245 set :drawMaterials:targetFactorySilicon 15
   246 set .materialCount 1
-    * set *tmp90 .displayFlares
-    * set :drawMaterials:unitCount1 *tmp90
-    * set *tmp91 .flareTarget
-    * set :drawMaterials:unitTotal1 *tmp91
-    * set *tmp92 .displayNextUnit
-    * set :drawMaterials:unit1 *tmp92
+  247 set :drawMaterials:unitCount1 .displayFlares
+  248 set :drawMaterials:unitTotal1 .flareTarget
+  249 set :drawMaterials:unit1 .displayNextUnit
   250 set :drawMaterials:unit3 null
   251 set :drawMaterials:unit2 :drawMaterials:unit3
   252 jump *label55 always
   253 label *label54
   254 op equal *tmp93 .displayNextUnit @poly
   255 jump *label56 equal *tmp93 false
-    * op floor *tmp95 .factoryProgress
-    * set :drawMaterials:unitCount1 *tmp95
-    * set *tmp96 .displayPolys
-    * set :drawMaterials:unitCount2 *tmp96
+  256 op floor :drawMaterials:unitCount1 .factoryProgress
+  257 set :drawMaterials:unitCount2 .displayPolys
   258 set :drawMaterials:unitTotal1 1
-    * set *tmp97 .polyTarget
-    * set :drawMaterials:unitTotal2 *tmp97
+  259 set :drawMaterials:unitTotal2 .polyTarget
   260 set :drawMaterials:unit1 @mono
-    * set *tmp98 .displayNextUnit
-    * set :drawMaterials:unit2 *tmp98
+  261 set :drawMaterials:unit2 .displayNextUnit
   262 set :drawMaterials:unit3 null
   263 op greaterThan *tmp99 .reconstructorProgress 0
-    * op max *tmp100 .factoryProgress *tmp99
-    * set .factoryProgress *tmp100
+  264 op max .factoryProgress .factoryProgress *tmp99
   265 jump *label57 always
   266 label *label56
   267 op equal *tmp101 .displayNextUnit @mega
   268 jump *label58 equal *tmp101 false
-    * op floor *tmp103 .factoryProgress
-    * set :drawMaterials:unitCount1 *tmp103
-    * op floor *tmp104 .reconstructorProgress
-    * set :drawMaterials:unitCount2 *tmp104
+  269 op floor :drawMaterials:unitCount1 .factoryProgress
+  270 op floor :drawMaterials:unitCount2 .reconstructorProgress
   271 set :drawMaterials:unitTotal1 1
   272 set :drawMaterials:unitTotal2 1
   273 set :drawMaterials:unit1 @mono
   274 set :drawMaterials:unit2 @poly
-    * set *tmp105 .displayNextUnit
-    * set :drawMaterials:unit3 *tmp105
+  275 set :drawMaterials:unit3 .displayNextUnit
   276 op greaterThan *tmp106 .reconstructorProgress 0
-    * op max *tmp107 .factoryProgress *tmp106
-    * set .factoryProgress *tmp107
+  277 op max .factoryProgress .factoryProgress *tmp106
   278 op greaterThan *tmp108 :drawMaterials:multiReconstructorProgress 0
-    * op max *tmp109 .reconstructorProgress *tmp108
-    * set .reconstructorProgress *tmp109
+  279 op max .reconstructorProgress .reconstructorProgress *tmp108
   280 jump *label59 always
   281 label *label58
   282 label *label59
 
   296 draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
   297 label *label62
   298 label *label61
-    * op add *tmp110 :drawBold.1:x 1
-    * set :drawText.6:x *tmp110
+  299 op add :drawText.6:x :drawBold.1:x 1
   300 set :drawText.6:y :drawBold.1:y
   301 set :drawText.6:alignment :drawBold.1:alignment
   302 print "Unit factories"
 
   317 set :drawItem:target 1
   318 op mul *tmp113 :drawItem:columns 176
   319 op div *tmp114 *tmp113 2
-    * op sub *tmp115 210 *tmp114
-    * set :drawItem:barLength *tmp115
-    * op add *tmp116 48 :drawItem:barLength
-    * set :drawItem:textEnd *tmp116
+  320 op sub :drawItem:barLength 210 *tmp114
+  321 op add :drawItem:textEnd 48 :drawItem:barLength
   322 op mul *tmp117 :drawItem:barLength :drawItem:current
   323 op div *tmp118 *tmp117 :drawItem:target
-    * op min *tmp119 :drawItem:barLength *tmp118
-    * set :drawItem:length *tmp119
+  324 op min :drawItem:length :drawItem:barLength *tmp118
   325 op mul *tmp120 :drawItem:col 176
   326 op div *tmp121 *tmp120 2
-    * op add *tmp122 11 *tmp121
-    * set :drawItem:iconX *tmp122
+  327 op add :drawItem:iconX 11 *tmp121
   328 op mul *tmp123 :drawItem:col 176
   329 op div *tmp124 *tmp123 2
-    * op add *tmp125 22 *tmp124
-    * set :drawItem:barX *tmp125
+  330 op add :drawItem:barX 22 *tmp124
   331 op mul *tmp126 :drawItem:col 176
   332 op div *tmp127 *tmp126 2
-    * op add *tmp128 :drawItem:textEnd *tmp127
-    * set :drawItem:textX *tmp128
+  333 op add :drawItem:textX :drawItem:textEnd *tmp127
   334 draw col %[white]
   335 op add *tmp129 :drawItem:y 5
   336 draw image :drawItem:iconX *tmp129 :drawItem:item 16 0
 
   355 draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
   356 label *label70
   357 label *label69
-    * op add *tmp132 :drawBold.2:x 1
-    * set :drawText.8:x *tmp132
+  358 op add :drawText.8:x :drawBold.2:x 1
   359 set :drawText.8:y :drawBold.2:y
   360 set :drawText.8:alignment :drawBold.2:alignment
   361 print :drawMaterials:unitCount1
 
   387 set :drawItem.1:target 1
   388 op mul *tmp137 :drawItem.1:columns 176
   389 op div *tmp138 *tmp137 2
-    * op sub *tmp139 210 *tmp138
-    * set :drawItem.1:barLength *tmp139
-    * op add *tmp140 48 :drawItem.1:barLength
-    * set :drawItem.1:textEnd *tmp140
+  390 op sub :drawItem.1:barLength 210 *tmp138
+  391 op add :drawItem.1:textEnd 48 :drawItem.1:barLength
   392 op mul *tmp141 :drawItem.1:barLength :drawItem.1:current
   393 op div *tmp142 *tmp141 :drawItem.1:target
-    * op min *tmp143 :drawItem.1:barLength *tmp142
-    * set :drawItem.1:length *tmp143
+  394 op min :drawItem.1:length :drawItem.1:barLength *tmp142
   395 op mul *tmp144 :drawItem.1:col 176
   396 op div *tmp145 *tmp144 2
-    * op add *tmp146 11 *tmp145
-    * set :drawItem.1:iconX *tmp146
+  397 op add :drawItem.1:iconX 11 *tmp145
   398 op mul *tmp147 :drawItem.1:col 176
   399 op div *tmp148 *tmp147 2
-    * op add *tmp149 22 *tmp148
-    * set :drawItem.1:barX *tmp149
+  400 op add :drawItem.1:barX 22 *tmp148
   401 op mul *tmp150 :drawItem.1:col 176
   402 op div *tmp151 *tmp150 2
-    * op add *tmp152 :drawItem.1:textEnd *tmp151
-    * set :drawItem.1:textX *tmp152
+  403 op add :drawItem.1:textX :drawItem.1:textEnd *tmp151
   404 draw col %[white]
   405 op add *tmp153 :drawItem.1:y 5
   406 draw image :drawItem.1:iconX *tmp153 :drawItem.1:item 16 0
 
   425 draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
   426 label *label80
   427 label *label79
-    * op add *tmp156 :drawBold.3:x 1
-    * set :drawText.10:x *tmp156
+  428 op add :drawText.10:x :drawBold.3:x 1
   429 set :drawText.10:y :drawBold.3:y
   430 set :drawText.10:alignment :drawBold.3:alignment
   431 print :drawMaterials:unitCount2
 
   457 set :drawItem.2:target 1
   458 op mul *tmp161 :drawItem.2:columns 176
   459 op div *tmp162 *tmp161 2
-    * op sub *tmp163 210 *tmp162
-    * set :drawItem.2:barLength *tmp163
-    * op add *tmp164 48 :drawItem.2:barLength
-    * set :drawItem.2:textEnd *tmp164
+  460 op sub :drawItem.2:barLength 210 *tmp162
+  461 op add :drawItem.2:textEnd 48 :drawItem.2:barLength
   462 op mul *tmp165 :drawItem.2:barLength :drawItem.2:current
   463 op div *tmp166 *tmp165 :drawItem.2:target
-    * op min *tmp167 :drawItem.2:barLength *tmp166
-    * set :drawItem.2:length *tmp167
+  464 op min :drawItem.2:length :drawItem.2:barLength *tmp166
   465 op mul *tmp168 :drawItem.2:col 176
   466 op div *tmp169 *tmp168 2
-    * op add *tmp170 11 *tmp169
-    * set :drawItem.2:iconX *tmp170
+  467 op add :drawItem.2:iconX 11 *tmp169
   468 op mul *tmp171 :drawItem.2:col 176
   469 op div *tmp172 *tmp171 2
-    * op add *tmp173 22 *tmp172
-    * set :drawItem.2:barX *tmp173
+  470 op add :drawItem.2:barX 22 *tmp172
   471 op mul *tmp174 :drawItem.2:col 176
   472 op div *tmp175 *tmp174 2
-    * op add *tmp176 :drawItem.2:textEnd *tmp175
-    * set :drawItem.2:textX *tmp176
+  473 op add :drawItem.2:textX :drawItem.2:textEnd *tmp175
   474 draw col %[white]
   475 op add *tmp177 :drawItem.2:y 5
   476 draw image :drawItem.2:iconX *tmp177 :drawItem.2:item 16 0
 
   488 set :drawText.11:alignment :drawBold.4:alignment
   489 print .displayMegas
   490 print "/"
-    * set *tmp180 .megaTarget
-    * print *tmp180
+  491 print .megaTarget
   492 set :drawPrint.11:x :drawText.11:x
   493 set :drawPrint.11:y :drawText.11:y
   494 set :drawPrint.11:alignment :drawText.11:alignment
   495 draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
   496 label *label90
   497 label *label89
-    * op add *tmp181 :drawBold.4:x 1
-    * set :drawText.12:x *tmp181
+  498 op add :drawText.12:x :drawBold.4:x 1
   499 set :drawText.12:y :drawBold.4:y
   500 set :drawText.12:alignment :drawBold.4:alignment
   501 print .displayMegas
   502 print "/"
-    * set *tmp182 .megaTarget
-    * print *tmp182
+  503 print .megaTarget
   504 set :drawPrint.12:x :drawText.12:x
   505 set :drawPrint.12:y :drawText.12:y
   506 set :drawPrint.12:alignment :drawText.12:alignment
 
   545 set :drawItem.3:target :drawMaterials:target
   546 op mul *tmp189 :drawItem.3:columns 176
   547 op div *tmp190 *tmp189 2
-    * op sub *tmp191 210 *tmp190
-    * set :drawItem.3:barLength *tmp191
-    * op add *tmp192 48 :drawItem.3:barLength
-    * set :drawItem.3:textEnd *tmp192
+  548 op sub :drawItem.3:barLength 210 *tmp190
+  549 op add :drawItem.3:textEnd 48 :drawItem.3:barLength
   550 op mul *tmp193 :drawItem.3:barLength :drawItem.3:current
   551 op div *tmp194 *tmp193 :drawItem.3:target
-    * op min *tmp195 :drawItem.3:barLength *tmp194
-    * set :drawItem.3:length *tmp195
+  552 op min :drawItem.3:length :drawItem.3:barLength *tmp194
   553 op mul *tmp196 :drawItem.3:col 176
   554 op div *tmp197 *tmp196 2
-    * op add *tmp198 11 *tmp197
-    * set :drawItem.3:iconX *tmp198
+  555 op add :drawItem.3:iconX 11 *tmp197
   556 op mul *tmp199 :drawItem.3:col 176
   557 op div *tmp200 *tmp199 2
-    * op add *tmp201 22 *tmp200
-    * set :drawItem.3:barX *tmp201
+  558 op add :drawItem.3:barX 22 *tmp200
   559 op mul *tmp202 :drawItem.3:col 176
   560 op div *tmp203 *tmp202 2
-    * op add *tmp204 :drawItem.3:textEnd *tmp203
-    * set :drawItem.3:textX *tmp204
+  561 op add :drawItem.3:textX :drawItem.3:textEnd *tmp203
   562 draw col %[white]
   563 op add *tmp205 :drawItem.3:y 5
   564 draw image :drawItem.3:iconX *tmp205 :drawItem.3:item 16 0
 
   581 draw print :drawPrint.13:x :drawPrint.13:y :drawPrint.13:alignment
   582 label *label105
   583 label *label104
-    * op add *tmp208 :drawBold.5:x 1
-    * set :drawText.14:x *tmp208
+  584 op add :drawText.14:x :drawBold.5:x 1
   585 set :drawText.14:y :drawBold.5:y
   586 set :drawText.14:alignment :drawBold.5:alignment
   587 print :drawMaterials:target
 
   631 draw print :drawPrint.15:x :drawPrint.15:y :drawPrint.15:alignment
   632 label *label114
   633 label *label113
-    * op add *tmp216 :drawBold.6:x 1
-    * set :drawText.16:x *tmp216
+  634 op add :drawText.16:x :drawBold.6:x 1
   635 set :drawText.16:y :drawBold.6:y
   636 set :drawText.16:alignment :drawBold.6:alignment
   637 read *tmp217 processor1 ".mapAction"
 
   647 set :drawItem.4:y 90
   648 set :drawItem.4:columns 1
   649 set :drawItem.4:item @titanium
-    * read *tmp0 processor1 ".mapProgress"
-    * set :drawItem.4:current *tmp0
-    * read *tmp1 processor1 ".mapTotal"
-    * set :drawItem.4:target *tmp1
+  650 read :drawItem.4:current processor1 ".mapProgress"
+  651 read :drawItem.4:target processor1 ".mapTotal"
   652 op mul *tmp218 :drawItem.4:columns 176
   653 op div *tmp219 *tmp218 2
-    * op sub *tmp220 210 *tmp219
-    * set :drawItem.4:barLength *tmp220
-    * op add *tmp221 48 :drawItem.4:barLength
-    * set :drawItem.4:textEnd *tmp221
+  654 op sub :drawItem.4:barLength 210 *tmp219
+  655 op add :drawItem.4:textEnd 48 :drawItem.4:barLength
   656 op mul *tmp222 :drawItem.4:barLength :drawItem.4:current
   657 op div *tmp223 *tmp222 :drawItem.4:target
-    * op min *tmp224 :drawItem.4:barLength *tmp223
-    * set :drawItem.4:length *tmp224
+  658 op min :drawItem.4:length :drawItem.4:barLength *tmp223
   659 op mul *tmp225 :drawItem.4:col 176
   660 op div *tmp226 *tmp225 2
-    * op add *tmp227 11 *tmp226
-    * set :drawItem.4:iconX *tmp227
+  661 op add :drawItem.4:iconX 11 *tmp226
   662 op mul *tmp228 :drawItem.4:col 176
   663 op div *tmp229 *tmp228 2
-    * op add *tmp230 22 *tmp229
-    * set :drawItem.4:barX *tmp230
+  664 op add :drawItem.4:barX 22 *tmp229
   665 op mul *tmp231 :drawItem.4:col 176
   666 op div *tmp232 *tmp231 2
-    * op add *tmp233 :drawItem.4:textEnd *tmp232
-    * set :drawItem.4:textX *tmp233
+  667 op add :drawItem.4:textX :drawItem.4:textEnd *tmp232
   668 draw col %[white]
   669 op add *tmp234 :drawItem.4:y 5
   670 draw image :drawItem.4:iconX *tmp234 :drawItem.4:item 16 0
 
   689 draw print :drawPrint.17:x :drawPrint.17:y :drawPrint.17:alignment
   690 label *label120
   691 label *label119
-    * op add *tmp238 :drawBold.7:x 1
-    * set :drawText.18:x *tmp238
+  692 op add :drawText.18:x :drawBold.7:x 1
   693 set :drawText.18:y :drawBold.7:y
   694 set :drawText.18:alignment :drawBold.7:alignment
   695 print "x"
 
   713 label *label117
   714 jump *label111 always
   715 label *label110
-    * set *tmp242 .totalTargets
-    * set .materialCount *tmp242
+  716 set .materialCount .totalTargets
   717 set :drawMaterials:count .materialCount
   718 set :drawBold.8:x 22
   719 set :drawBold.8:y 105
 
   728 draw print :drawPrint.19:x :drawPrint.19:y :drawPrint.19:alignment
   729 label *label127
   730 label *label126
-    * op add *tmp243 :drawBold.8:x 1
-    * set :drawText.20:x *tmp243
+  731 op add :drawText.20:x :drawBold.8:x 1
   732 set :drawText.20:y :drawBold.8:y
   733 set :drawText.20:alignment :drawBold.8:alignment
   734 print "Materials"
 
   786 set :drawItem.5:target :drawMaterials:target.1
   787 op mul *tmp249 :drawItem.5:columns 176
   788 op div *tmp250 *tmp249 2
-    * op sub *tmp251 210 *tmp250
-    * set :drawItem.5:barLength *tmp251
-    * op add *tmp252 48 :drawItem.5:barLength
-    * set :drawItem.5:textEnd *tmp252
+  789 op sub :drawItem.5:barLength 210 *tmp250
+  790 op add :drawItem.5:textEnd 48 :drawItem.5:barLength
   791 op mul *tmp253 :drawItem.5:barLength :drawItem.5:current
   792 op div *tmp254 *tmp253 :drawItem.5:target
-    * op min *tmp255 :drawItem.5:barLength *tmp254
-    * set :drawItem.5:length *tmp255
+  793 op min :drawItem.5:length :drawItem.5:barLength *tmp254
   794 op mul *tmp256 :drawItem.5:col 176
   795 op div *tmp257 *tmp256 2
-    * op add *tmp258 11 *tmp257
-    * set :drawItem.5:iconX *tmp258
+  796 op add :drawItem.5:iconX 11 *tmp257
   797 op mul *tmp259 :drawItem.5:col 176
   798 op div *tmp260 *tmp259 2
-    * op add *tmp261 22 *tmp260
-    * set :drawItem.5:barX *tmp261
+  799 op add :drawItem.5:barX 22 *tmp260
   800 op mul *tmp262 :drawItem.5:col 176
   801 op div *tmp263 *tmp262 2
-    * op add *tmp264 :drawItem.5:textEnd *tmp263
-    * set :drawItem.5:textX *tmp264
+  802 op add :drawItem.5:textX :drawItem.5:textEnd *tmp263
   803 draw col %[white]
   804 op add *tmp265 :drawItem.5:y 5
   805 draw image :drawItem.5:iconX *tmp265 :drawItem.5:item 16 0
 
   822 draw print :drawPrint.21:x :drawPrint.21:y :drawPrint.21:alignment
   823 label *label147
   824 label *label146
-    * op add *tmp268 :drawBold.9:x 1
-    * set :drawText.22:x *tmp268
+  825 op add :drawText.22:x :drawBold.9:x 1
   826 set :drawText.22:y :drawBold.9:y
   827 set :drawText.22:alignment :drawBold.9:alignment
   828 print :drawMaterials:target.1
 
   886 draw print :drawPrint.23:x :drawPrint.23:y :drawPrint.23:alignment
   887 label *label159
   888 label *label158
-    * op add *tmp275 :drawBold.10:x 1
-    * set :drawText.24:x *tmp275
+  889 op add :drawText.24:x :drawBold.10:x 1
   890 set :drawText.24:y :drawBold.10:y
   891 set :drawText.24:alignment :drawBold.10:alignment
   892 print "Builder"
 
   911 set :drawItem.6:target .transportTarget
   912 op mul *tmp279 :drawItem.6:columns 176
   913 op div *tmp280 *tmp279 2
-    * op sub *tmp281 210 *tmp280
-    * set :drawItem.6:barLength *tmp281
-    * op add *tmp282 48 :drawItem.6:barLength
-    * set :drawItem.6:textEnd *tmp282
+  914 op sub :drawItem.6:barLength 210 *tmp280
+  915 op add :drawItem.6:textEnd 48 :drawItem.6:barLength
   916 op mul *tmp283 :drawItem.6:barLength :drawItem.6:current
   917 op div *tmp284 *tmp283 :drawItem.6:target
-    * op min *tmp285 :drawItem.6:barLength *tmp284
-    * set :drawItem.6:length *tmp285
+  918 op min :drawItem.6:length :drawItem.6:barLength *tmp284
   919 op mul *tmp286 :drawItem.6:col 176
   920 op div *tmp287 *tmp286 2
-    * op add *tmp288 11 *tmp287
-    * set :drawItem.6:iconX *tmp288
+  921 op add :drawItem.6:iconX 11 *tmp287
   922 op mul *tmp289 :drawItem.6:col 176
   923 op div *tmp290 *tmp289 2
-    * op add *tmp291 22 *tmp290
-    * set :drawItem.6:barX *tmp291
+  924 op add :drawItem.6:barX 22 *tmp290
   925 op mul *tmp292 :drawItem.6:col 176
   926 op div *tmp293 *tmp292 2
-    * op add *tmp294 :drawItem.6:textEnd *tmp293
-    * set :drawItem.6:textX *tmp294
+  927 op add :drawItem.6:textX :drawItem.6:textEnd *tmp293
   928 draw col %[white]
   929 op add *tmp295 :drawItem.6:y 5
   930 draw image :drawItem.6:iconX *tmp295 :drawItem.6:item 16 0
 
   940 set :drawText.25:x :drawBold.11:x
   941 set :drawText.25:y :drawBold.11:y
   942 set :drawText.25:alignment :drawBold.11:alignment
-    * set *tmp298 .transportTarget
-    * print *tmp298
+  943 print .transportTarget
   944 set :drawPrint.25:x :drawText.25:x
   945 set :drawPrint.25:y :drawText.25:y
   946 set :drawPrint.25:alignment :drawText.25:alignment
   947 draw print :drawPrint.25:x :drawPrint.25:y :drawPrint.25:alignment
   948 label *label168
   949 label *label167
-    * op add *tmp299 :drawBold.11:x 1
-    * set :drawText.26:x *tmp299
+  950 op add :drawText.26:x :drawBold.11:x 1
   951 set :drawText.26:y :drawBold.11:y
   952 set :drawText.26:alignment :drawBold.11:alignment
-    * set *tmp300 .transportTarget
-    * print *tmp300
+  953 print .transportTarget
   954 set :drawPrint.26:x :drawText.26:x
   955 set :drawPrint.26:y :drawText.26:y
   956 set :drawPrint.26:alignment :drawText.26:alignment
 
   971 label *label164
   972 jump *label163 always
   973 label *label162
-    * sensor *tmp303 @unit @firstItem
-    * set :drawUnit:unitItem *tmp303
+  974 sensor :drawUnit:unitItem @unit @firstItem
   975 sensor *tmp304 @unit @totalItems
   976 op equal *tmp305 :drawUnit:unitItem .transportItem
   977 op mul *tmp306 *tmp304 *tmp305
 
   987 set :drawItem.7:target .transportTarget
   988 op mul *tmp308 :drawItem.7:columns 176
   989 op div *tmp309 *tmp308 2
-    * op sub *tmp310 210 *tmp309
-    * set :drawItem.7:barLength *tmp310
-    * op add *tmp311 48 :drawItem.7:barLength
-    * set :drawItem.7:textEnd *tmp311
+  990 op sub :drawItem.7:barLength 210 *tmp309
+  991 op add :drawItem.7:textEnd 48 :drawItem.7:barLength
   992 op mul *tmp312 :drawItem.7:barLength :drawItem.7:current
   993 op div *tmp313 *tmp312 :drawItem.7:target
-    * op min *tmp314 :drawItem.7:barLength *tmp313
-    * set :drawItem.7:length *tmp314
+  994 op min :drawItem.7:length :drawItem.7:barLength *tmp313
   995 op mul *tmp315 :drawItem.7:col 176
   996 op div *tmp316 *tmp315 2
-    * op add *tmp317 11 *tmp316
-    * set :drawItem.7:iconX *tmp317
+  997 op add :drawItem.7:iconX 11 *tmp316
   998 op mul *tmp318 :drawItem.7:col 176
   999 op div *tmp319 *tmp318 2
-    * op add *tmp320 22 *tmp319
-    * set :drawItem.7:barX *tmp320
+ 1000 op add :drawItem.7:barX 22 *tmp319
  1001 op mul *tmp321 :drawItem.7:col 176
  1002 op div *tmp322 *tmp321 2
-    * op add *tmp323 :drawItem.7:textEnd *tmp322
-    * set :drawItem.7:textX *tmp323
+ 1003 op add :drawItem.7:textX :drawItem.7:textEnd *tmp322
  1004 draw col %[white]
  1005 op add *tmp324 :drawItem.7:y 5
  1006 draw image :drawItem.7:iconX *tmp324 :drawItem.7:item 16 0
 
  1016 set :drawText.27:x :drawBold.12:x
  1017 set :drawText.27:y :drawBold.12:y
  1018 set :drawText.27:alignment :drawBold.12:alignment
-    * set *tmp327 .transportTarget
-    * print *tmp327
+ 1019 print .transportTarget
  1020 set :drawPrint.27:x :drawText.27:x
  1021 set :drawPrint.27:y :drawText.27:y
  1022 set :drawPrint.27:alignment :drawText.27:alignment
  1023 draw print :drawPrint.27:x :drawPrint.27:y :drawPrint.27:alignment
  1024 label *label177
  1025 label *label176
-    * op add *tmp328 :drawBold.12:x 1
-    * set :drawText.28:x *tmp328
+ 1026 op add :drawText.28:x :drawBold.12:x 1
  1027 set :drawText.28:y :drawBold.12:y
  1028 set :drawText.28:alignment :drawBold.12:alignment
-    * set *tmp329 .transportTarget
-    * print *tmp329
+ 1029 print .transportTarget
  1030 set :drawPrint.28:x :drawText.28:x
  1031 set :drawPrint.28:y :drawText.28:y
  1032 set :drawPrint.28:alignment :drawText.28:alignment
 
  1304 op greaterThanEq *tmp344 :displayBaseMap:i 0
  1305 jump *label246 equal *tmp344 false
  1306 set .recentBuildIndex -1
-    * set *tmp346 :displayBaseMap:i
-    * readarr<regular> *tmp347 .BLOCKS[] *tmp346
-    * set :drawBlock:cfg *tmp347
+ 1307 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
  1308 setaddr :drawBlock*retaddr *label248 (h:*label248)
  1309 call *label1 *invalid :drawBlock*retval (m:*label248) (h:*label248)
  1310 label *label248
 
  1331 label *label200
  1332 jump *label199 always
  1333 label *label198
-    * op sub *tmp351 .page 2
-    * set :displayLog:page *tmp351
+ 1334 op sub :displayLog:page .page 2
  1335 set :displayLog:x 11
  1336 set :displayLog:y 163
-    * read *tmp352 bank1 511
-    * set :displayLog:logPosition *tmp352
-    * op sub *tmp353 511 :displayLog:logPosition
-    * set :displayLog:records *tmp353
+ 1337 read :displayLog:logPosition bank1 511
+ 1338 op sub :displayLog:records 511 :displayLog:logPosition
  1339 op sub *tmp354 :displayLog:records 1
  1340 op idiv *tmp355 *tmp354 32
  1341 op add *tmp356 *tmp355 1
-    * op max *tmp357 1 *tmp356
-    * set :displayLog:pages *tmp357
-    * op add *tmp358 :displayLog:pages 2
-    * set .numPages *tmp358
+ 1342 op max :displayLog:pages 1 *tmp356
+ 1343 op add .numPages :displayLog:pages 2
  1344 op mul *tmp359 32 :displayLog:page
-    * op sub *tmp360 511 *tmp359
-    * set :displayLog:start *tmp360
+ 1345 op sub :displayLog:start 511 *tmp359
  1346 op sub *tmp361 :displayLog:start 32
-    * op max *tmp362 :displayLog:logPosition *tmp361
-    * set :displayLog:stop *tmp362
+ 1347 op max :displayLog:stop :displayLog:logPosition *tmp361
  1348 draw col %[lightgray]
  1349 op add *tmp363 :displayLog:page 1
  1350 print *tmp363
 
  1364 op sub :displayLog:position :displayLog:start 1
  1365 label *label256
  1366 jump *label258 lessThan :displayLog:position *tmp364
-    * set *tmp365 :displayLog:position
-    * read *tmp366 bank1 *tmp365
-    * set :displayLog:record *tmp366
+ 1367 read :displayLog:record bank1 :displayLog:position
  1368 set :displayRecord:record :displayLog:record
-    * op mod *tmp367 :displayRecord:record 1000
-    * set :displayRecord:id *tmp367
+ 1369 op mod :displayRecord:id :displayRecord:record 1000
  1370 op greaterThan *tmp368 :displayRecord:id @blockCount
  1371 jump *label260 equal *tmp368 false
  1372 op sub *tmp370 :displayRecord:id @blockCount
-    * lookup unit *tmp371 *tmp370
-    * set *tmp369 *tmp371
+ 1373 lookup unit *tmp369 *tmp370
  1374 jump *label261 always
  1375 label *label260
-    * lookup block *tmp372 :displayRecord:id
-    * set *tmp369 *tmp372
+ 1376 lookup block *tmp369 :displayRecord:id
  1377 label *label261
  1378 set :displayRecord:icon *tmp369
  1379 op div *tmp373 :displayRecord:record 1000
  1380 op div *tmp374 *tmp373 120
-    * op floor *tmp375 *tmp374
-    * set :displayRecord:t *tmp375
-    * op idiv *tmp376 :displayRecord:t 60
-    * set :displayRecord:m *tmp376
-    * op mod *tmp377 :displayRecord:t 60
-    * set :displayRecord:s *tmp377
+ 1381 op floor :displayRecord:t *tmp374
+ 1382 op idiv :displayRecord:m :displayRecord:t 60
+ 1383 op mod :displayRecord:s :displayRecord:t 60
  1384 op lessThan *tmp378 :displayRecord:s 10
  1385 jump *label262 equal *tmp378 false
  1386 set *tmp379 "0"
 
  1443 print "\n"
  1444 print "==================================[]"
  1445 print "\n"
-    * set *tmp389 .status1
-    * print *tmp389
+ 1446 print .status1
  1447 print "\n"
  1448 print .status2
  1449 print .item2
 
  1452 print .block2
  1453 print ")"
  1454 print "\n"
-    * set *tmp390 .status3
-    * print *tmp390
+ 1455 print .status3
  1456 print "\n"
  1457 printflush message1
  1458 label *label273
  1459 label *label272
-    * sensor *tmp391 switch1 @enabled
-    * set .pageSwitched *tmp391
+ 1460 sensor .pageSwitched switch1 @enabled
  1461 jump *label274 equal .pageSwitched false
  1462 control enabled switch1 false
  1463 op add *tmp394 .page 1
-    * op mod *tmp395 *tmp394 .numPages
-    * set .page *tmp395
+ 1464 op mod .page *tmp394 .numPages
  1465 drawflush null
  1466 draw reset
  1467 draw clear 0 0 32
 
  1483 op add :unpackCfg:index :unpackCfg:index 1
  1484 read *tmp430 :unpackCfg:cfg *tmp429
  1485 op sub *tmp431 *tmp430 35
-    * lookup block *tmp432 *tmp431
-    * set :unpackCfg:type *tmp432
+ 1486 lookup block :unpackCfg:type *tmp431
  1487 set *tmp433 :unpackCfg:index
  1488 op add :unpackCfg:index :unpackCfg:index 1
  1489 read *tmp434 :unpackCfg:cfg *tmp433
  1490 op sub *tmp435 *tmp434 35
-    * op sub *tmp436 *tmp435 7
-    * set :unpackCfg:x *tmp436
+ 1491 op sub :unpackCfg:x *tmp435 7
  1492 set *tmp437 :unpackCfg:index
  1493 op add :unpackCfg:index :unpackCfg:index 1
  1494 read *tmp438 :unpackCfg:cfg *tmp437
  1495 op sub *tmp439 *tmp438 35
-    * op sub *tmp440 *tmp439 7
-    * set :unpackCfg:y *tmp440
+ 1496 op sub :unpackCfg:y *tmp439 7
  1497 op add :unpackCfg:index :unpackCfg:index 1
  1498 op add :unpackCfg:index :unpackCfg:index 1
  1499 op add :unpackCfg:index :unpackCfg:index 1
 
  1504 set *tmp462 :unpackCfg:index
  1505 op add :unpackCfg:index :unpackCfg:index 1
  1506 read *tmp463 :unpackCfg:cfg *tmp462
-    * op sub *tmp464 *tmp463 35
-    * set :unpackCfg:rotation *tmp464
+ 1507 op sub :unpackCfg:rotation *tmp463 35
  1508 set *tmp465 :unpackCfg:index
  1509 op add :unpackCfg:index :unpackCfg:index 1
  1510 read *tmp466 :unpackCfg:cfg *tmp465
-    * op sub *tmp467 *tmp466 35
-    * set :unpackCfg:size *tmp467
+ 1511 op sub :unpackCfg:size *tmp466 35
  1512 set *tmp468 :unpackCfg:index
  1513 op add :unpackCfg:index :unpackCfg:index 1
  1514 read *tmp469 :unpackCfg:cfg *tmp468
-    * op sub *tmp470 *tmp469 35
-    * set :unpackCfg:ind *tmp470
+ 1515 op sub :unpackCfg:ind *tmp469 35
  1516 label *label293
  1517 set :drawBlock:type :unpackCfg:type
  1518 set :drawBlock:x :unpackCfg:x
 
  1531 draw color 128 255 128 128
  1532 label *label297
  1533 op and *tmp476 :drawBlock:size 1
-    * op sub *tmp477 1 *tmp476
-    * set :drawBlock:offset *tmp477
+ 1534 op sub :drawBlock:offset 1 *tmp476
  1535 op mul *tmp478 2 :drawBlock:x
  1536 op add *tmp479 *tmp478 :drawBlock:offset
  1537 op mul *tmp480 2 :drawBlock:y

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    23 printflush null
    24 drawflush null
    25 label *label9
-    * jump *label11 equal true false
    26 jump *label12 equal .displayUnitReset false
    27 set .reconstructorProgress 0
    28 set .factoryProgress .reconstructorProgress

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-38 instructions):
 
    17 ubind @poly
    18 ulocate building core false @copper 0 0 0 .core
    19 label *label7
-    * op equal *tmp9 .core null
-    * jump *label6 notEqual *tmp9 false
+   20 jump *label6 equal .core null
    21 label *label8
    22 printflush null
    23 drawflush null
 
    29 jump *label13 always
    30 label *label12
    31 label *label13
-    * op equal *tmp13 .page 0
-    * jump *label14 equal *tmp13 false
-    * op greaterThan *tmp15 .displayMegas 0
-    * jump *label16 equal *tmp15 false
-    * op lessThan *tmp17 .animation 0
-    * jump *label19 equal *tmp17 false
+   32 jump *label14 notEqual .page 0
+   33 jump *label16 lessThanEq .displayMegas 0
+   34 jump *label19 greaterThanEq .animation 0
    35 draw color 0 0 32 80
    36 draw rect 0 0 176 176
    37 jump *label20 always
 
   105 label *label26
   106 draw col %[white]
   107 op add :drawHeader:count .nextBlock .displayNextUnit
-    * op equal *tmp40 :drawHeader:count 2
-    * jump *label31 equal *tmp40 false
+  108 jump *label31 notEqual :drawHeader:count 2
   109 draw image 25 139 .nextBlock 25 0
   110 draw image 55 139 .displayNextUnit 25 0
   111 jump *label32 always
   112 label *label31
-    * op equal *tmp42 :drawHeader:count 1
-    * jump *label33 equal *tmp42 false
-    * op notEqual *tmp44 .nextBlock null
-    * jump *label35 equal *tmp44 false
+  113 jump *label33 notEqual :drawHeader:count 1
+  114 jump *label35 equal .nextBlock null
   115 set *tmp45 .nextBlock
   116 jump *label36 always
   117 label *label35
 
   132 op floor :drawHeader:t *tmp50
   133 op idiv :drawHeader:m :drawHeader:t 60
   134 op mod :drawHeader:s :drawHeader:t 60
-    * op lessThan *tmp54 :drawHeader:s 10
-    * jump *label37 equal *tmp54 false
+  135 jump *label37 greaterThanEq :drawHeader:s 10
   136 set *tmp55 "0"
   137 jump *label38 always
   138 label *label37
 
   211 label *label25
   212 set :drawMaterials:col 0
   213 set :drawMaterials:y 90
-    * op equal *tmp76 .nextBlock null
-    * jump *label50 equal *tmp76 false
+  214 jump *label50 notEqual .nextBlock null
   215 sensor *tmp78 .airFactory @progress
   216 op max .factoryProgress .factoryProgress *tmp78
   217 sensor *tmp80 .reconstructor @progress
   218 op max .reconstructorProgress .reconstructorProgress *tmp80
   219 sensor :drawMaterials:multiReconstructorProgress .multiReconstructor @progress
-    * op equal *tmp83 .displayNextUnit @mono
-    * jump *label52 equal *tmp83 false
+  220 jump *label52 notEqual .displayNextUnit @mono
   221 set :drawMaterials:targetFactoryLead 15
   222 set :drawMaterials:targetFactorySilicon 30
   223 set .materialCount 2
 
   228 set :drawMaterials:unit2 :drawMaterials:unit3
   229 jump *label53 always
   230 label *label52
-    * op equal *tmp88 .displayNextUnit @flare
-    * jump *label54 equal *tmp88 false
+  231 jump *label54 notEqual .displayNextUnit @flare
   232 set :drawMaterials:targetFactoryLead 0
   233 set :drawMaterials:targetFactorySilicon 15
   234 set .materialCount 1
 
   239 set :drawMaterials:unit2 :drawMaterials:unit3
   240 jump *label55 always
   241 label *label54
-    * op equal *tmp93 .displayNextUnit @poly
-    * jump *label56 equal *tmp93 false
+  242 jump *label56 notEqual .displayNextUnit @poly
   243 op floor :drawMaterials:unitCount1 .factoryProgress
   244 set :drawMaterials:unitCount2 .displayPolys
   245 set :drawMaterials:unitTotal1 1
 
   251 op max .factoryProgress .factoryProgress *tmp99
   252 jump *label57 always
   253 label *label56
-    * op equal *tmp101 .displayNextUnit @mega
-    * jump *label58 equal *tmp101 false
+  254 jump *label58 notEqual .displayNextUnit @mega
   255 op floor :drawMaterials:unitCount1 .factoryProgress
   256 op floor :drawMaterials:unitCount2 .reconstructorProgress
   257 set :drawMaterials:unitTotal1 1
 
   293 label *label64
   294 label *label63
   295 label *label60
-    * op greaterThan *tmp111 .factoryProgress 0
-    * jump *label65 equal *tmp111 false
+  296 jump *label65 lessThanEq .factoryProgress 0
   297 set :drawItem:col 0
   298 set :drawItem:y 90
   299 set :drawItem:columns 1
 
   354 label *label71
   355 label *label68
   356 op add :drawItem:col :drawItem:col 1
-    * op greaterThanEq *tmp133 :drawItem:col :drawItem:columns
-    * jump *label73 equal *tmp133 false
+  357 jump *label73 lessThan :drawItem:col :drawItem:columns
   358 set :drawItem:col 0
   359 op sub :drawItem:y :drawItem:y 15
   360 jump *label74 always
   361 label *label73
   362 label *label74
   363 label *label67
-    * op notEqual *tmp135 :drawMaterials:unit2 null
-    * jump *label75 equal *tmp135 false
+  364 jump *label75 equal :drawMaterials:unit2 null
   365 set :drawItem.1:col 0
   366 set :drawItem.1:y 75
   367 set :drawItem.1:columns 1
 
   422 label *label81
   423 label *label78
   424 op add :drawItem.1:col :drawItem.1:col 1
-    * op greaterThanEq *tmp157 :drawItem.1:col :drawItem.1:columns
-    * jump *label83 equal *tmp157 false
+  425 jump *label83 lessThan :drawItem.1:col :drawItem.1:columns
   426 set :drawItem.1:col 0
   427 op sub :drawItem.1:y :drawItem.1:y 15
   428 jump *label84 always
   429 label *label83
   430 label *label84
   431 label *label77
-    * op notEqual *tmp159 :drawMaterials:unit3 null
-    * jump *label85 equal *tmp159 false
+  432 jump *label85 equal :drawMaterials:unit3 null
   433 set :drawItem.2:col 0
   434 set :drawItem.2:y 60
   435 set :drawItem.2:columns 1
 
   490 label *label91
   491 label *label88
   492 op add :drawItem.2:col :drawItem.2:col 1
-    * op greaterThanEq *tmp183 :drawItem.2:col :drawItem.2:columns
-    * jump *label93 equal *tmp183 false
+  493 jump *label93 lessThan :drawItem.2:col :drawItem.2:columns
   494 set :drawItem.2:col 0
   495 op sub :drawItem.2:y :drawItem.2:y 15
   496 jump *label94 always
 
   514 set :drawMaterials:target :drawMaterials:targetFactorySilicon
   515 setaddr *tmp185 *label99
   516 label *label95
-    * op greaterThan *tmp186 :drawMaterials:target 0
-    * jump *label100 equal *tmp186 false
+  517 jump *label100 lessThanEq :drawMaterials:target 0
   518 sensor *tmp188 .airFactory :drawMaterials:item
   519 set :drawItem.3:col :drawMaterials:col
   520 set :drawItem.3:y :drawMaterials:y
 
   572 label *label106
   573 label *label103
   574 op add :drawItem.3:col :drawItem.3:col 1
-    * op greaterThanEq *tmp209 :drawItem.3:col :drawItem.3:columns
-    * jump *label108 equal *tmp209 false
+  575 jump *label108 lessThan :drawItem.3:col :drawItem.3:columns
   576 set :drawItem.3:col 0
   577 op sub :drawItem.3:y :drawItem.3:y 15
   578 jump *label109 always
 
   681 label *label121
   682 label *label118
   683 op add :drawItem.4:col :drawItem.4:col 1
-    * op greaterThanEq *tmp240 :drawItem.4:col :drawItem.4:columns
-    * jump *label123 equal *tmp240 false
+  684 jump *label123 lessThan :drawItem.4:col :drawItem.4:columns
   685 set :drawItem.4:col 0
   686 op sub :drawItem.4:y :drawItem.4:y 15
   687 jump *label124 always
 
   752 set :drawMaterials:target.1 .targetThorium
   753 setaddr *tmp245 *label141
   754 label *label132
-    * op greaterThan *tmp246 :drawMaterials:target.1 0
-    * jump *label142 equal *tmp246 false
+  755 jump *label142 lessThanEq :drawMaterials:target.1 0
   756 sensor *tmp248 .core :drawMaterials:item.1
   757 set :drawItem.5:col :drawMaterials:col
   758 set :drawItem.5:y :drawMaterials:y
 
   810 label *label148
   811 label *label145
   812 op add :drawItem.5:col :drawItem.5:col 1
-    * op greaterThanEq *tmp269 :drawItem.5:col :drawItem.5:columns
-    * jump *label150 equal *tmp269 false
+  813 jump *label150 lessThan :drawItem.5:col :drawItem.5:columns
   814 set :drawItem.5:col 0
   815 op sub :drawItem.5:y :drawItem.5:y 15
   816 jump *label151 always
 
   820 set :drawMaterials:col :drawItem.5:col
   821 set :drawMaterials:y :drawItem.5:y
   822 op sub :drawMaterials:count :drawMaterials:count 1
-    * op lessThanEq *tmp271 :drawMaterials:count 0
-    * jump *label152 equal *tmp271 false
+  823 jump *label152 greaterThan :drawMaterials:count 0
   824 jump *label134 always
   825 jump *label153 always
   826 label *label152
 
   839 label *label51
   840 label *label49
   841 draw col %[white]
-    * op lessThan *tmp273 .materialCount 4
-    * jump *label155 equal *tmp273 false
+  842 jump *label155 greaterThanEq .materialCount 4
   843 set *tmp274 40
   844 jump *label156 always
   845 label *label155
 
   870 label *label161
   871 label *label160
   872 label *label157
-    * op equal *tmp276 .transportItem null
-    * jump *label162 equal *tmp276 false
+  873 jump *label162 notEqual .transportItem null
   874 op sub *tmp278 :drawUnit:y 15
   875 set :drawUnit.1:item @poly
   876 set :drawUnit.1:items 0
 
   931 label *label169
   932 label *label166
   933 op add :drawItem.6:col :drawItem.6:col 1
-    * op greaterThanEq *tmp301 :drawItem.6:col :drawItem.6:columns
-    * jump *label171 equal *tmp301 false
+  934 jump *label171 lessThan :drawItem.6:col :drawItem.6:columns
   935 set :drawItem.6:col 0
   936 op sub :drawItem.6:y :drawItem.6:y 15
   937 jump *label172 always
 
  1006 label *label178
  1007 label *label175
  1008 op add :drawItem.7:col :drawItem.7:col 1
-    * op greaterThanEq *tmp330 :drawItem.7:col :drawItem.7:columns
-    * jump *label180 equal *tmp330 false
+ 1009 jump *label180 lessThan :drawItem.7:col :drawItem.7:columns
  1010 set :drawItem.7:col 0
  1011 op sub :drawItem.7:y :drawItem.7:y 15
  1012 jump *label181 always
 
  1021 draw col %[white]
  1022 set :drawUnitCount:type @poly
  1023 set :drawUnitCount:count .displayPolys
-    * op greaterThan *tmp332 :drawUnitCount:count 0
-    * jump *label184 equal *tmp332 false
+ 1024 jump *label184 lessThanEq :drawUnitCount:count 0
  1025 op sub *tmp334 :drawUnits:x 20
  1026 draw image *tmp334 127 :drawUnitCount:type 12 0
  1027 set :drawText.29:x :drawUnits:x
 
  1042 label *label183
  1043 set :drawUnitCount.1:type @mono
  1044 set :drawUnitCount.1:count .displayMonos
-    * op greaterThan *tmp335 :drawUnitCount.1:count 0
-    * jump *label189 equal *tmp335 false
+ 1045 jump *label189 lessThanEq :drawUnitCount.1:count 0
  1046 op sub *tmp337 :drawUnits:x 20
  1047 draw image *tmp337 127 :drawUnitCount.1:type 12 0
  1048 set :drawText.30:x :drawUnits:x
 
  1063 label *label188
  1064 set :drawUnitCount.2:type @flare
  1065 set :drawUnitCount.2:count .displayFlares
-    * op greaterThan *tmp338 :drawUnitCount.2:count 0
-    * jump *label194 equal *tmp338 false
+ 1066 jump *label194 lessThanEq :drawUnitCount.2:count 0
  1067 op sub *tmp340 :drawUnits:x 20
  1068 draw image *tmp340 127 :drawUnitCount.2:type 12 0
  1069 set :drawText.31:x :drawUnits:x
 
  1088 label *label17
  1089 jump *label15 always
  1090 label *label14
-    * op equal *tmp341 .page 1
-    * jump *label198 equal *tmp341 false
+ 1091 jump *label198 notEqual .page 1
  1092 draw reset
  1093 draw clear 0 0 32
  1094 draw col %[gold]
 
  1267 call *label1 *invalid :drawBlock*retval (m:*label245) (h:*label245)
  1268 label *label245
  1269 set :displayBaseMap:i .recentBuildIndex
-    * op greaterThanEq *tmp344 :displayBaseMap:i 0
-    * jump *label246 equal *tmp344 false
+ 1270 jump *label246 lessThan :displayBaseMap:i 0
  1271 set .recentBuildIndex -1
  1272 readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
  1273 setaddr :drawBlock*retaddr *label248 (h:*label248)
 
  1332 read :displayLog:record bank1 :displayLog:position
  1333 set :displayRecord:record :displayLog:record
  1334 op mod :displayRecord:id :displayRecord:record 1000
-    * op greaterThan *tmp368 :displayRecord:id @blockCount
-    * jump *label260 equal *tmp368 false
+ 1335 jump *label260 lessThanEq :displayRecord:id @blockCount
  1336 op sub *tmp370 :displayRecord:id @blockCount
  1337 lookup unit *tmp369 *tmp370
  1338 jump *label261 always
 
  1345 op floor :displayRecord:t *tmp374
  1346 op idiv :displayRecord:m :displayRecord:t 60
  1347 op mod :displayRecord:s :displayRecord:t 60
-    * op lessThan *tmp378 :displayRecord:s 10
-    * jump *label262 equal *tmp378 false
+ 1348 jump *label262 greaterThanEq :displayRecord:s 10
  1349 set *tmp379 "0"
  1350 jump *label263 always
  1351 label *label262
 
  1371 label *label266
  1372 label *label265
  1373 op sub :displayLog:y :displayLog:y 15
-    * op lessThan *tmp383 :displayLog:y 10
-    * jump *label267 equal *tmp383 false
+ 1374 jump *label267 greaterThanEq :displayLog:y 10
  1375 op add :displayLog:x :displayLog:x 58
  1376 set :displayLog:y 164
  1377 jump *label268 always
 
  1393 label *label253
  1394 label *label199
  1395 label *label15
-    * op greaterThan *tmp387 .displayMegas 0
-    * jump *label271 equal *tmp387 false
+ 1396 jump *label271 lessThanEq .displayMegas 0
  1397 print "[gold]All done.[]\nNothing more to see here.\nGo home."
  1398 print "\n"
  1399 printflush message1

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-28 instructions):
 
    26 set .reconstructorProgress 0
    27 set .factoryProgress .reconstructorProgress
    28 set .displayUnitReset false
-    * jump *label13 always
    29 label *label12
    30 label *label13
    31 jump *label14 notEqual .page 0
 
   181 op mul *tmp67 7 :drawHeader:len
   182 op sub *tmp68 *tmp66 *tmp67
   183 draw image *tmp68 146 @titanium 12 0
-    * jump *label42 always
   184 label *label41
   185 label *label42
   186 jump *label45 equal .thoriumContainer false
 
   203 op mul *tmp74 7 :drawHeader:len.1
   204 op sub *tmp75 *tmp73 *tmp74
   205 draw image *tmp75 146 @thorium 12 0
-    * jump *label46 always
   206 label *label45
   207 label *label46
   208 label *label25
 
   260 op max .factoryProgress .factoryProgress *tmp106
   261 op greaterThan *tmp108 :drawMaterials:multiReconstructorProgress 0
   262 op max .reconstructorProgress .reconstructorProgress *tmp108
-    * jump *label59 always
   263 label *label58
   264 label *label59
   265 label *label57
 
   353 jump *label73 lessThan :drawItem:col :drawItem:columns
   354 set :drawItem:col 0
   355 op sub :drawItem:y :drawItem:y 15
-    * jump *label74 always
   356 label *label73
   357 label *label74
   358 label *label67
 
   420 jump *label83 lessThan :drawItem.1:col :drawItem.1:columns
   421 set :drawItem.1:col 0
   422 op sub :drawItem.1:y :drawItem.1:y 15
-    * jump *label84 always
   423 label *label83
   424 label *label84
   425 label *label77
 
   487 jump *label93 lessThan :drawItem.2:col :drawItem.2:columns
   488 set :drawItem.2:col 0
   489 op sub :drawItem.2:y :drawItem.2:y 15
-    * jump *label94 always
   490 label *label93
   491 label *label94
   492 label *label87
-    * jump *label86 always
   493 label *label85
   494 label *label86
-    * jump *label76 always
   495 label *label75
   496 label *label76
   497 jump *label66 always
 
   566 jump *label108 lessThan :drawItem.3:col :drawItem.3:columns
   567 set :drawItem.3:col 0
   568 op sub :drawItem.3:y :drawItem.3:y 15
-    * jump *label109 always
   569 label *label108
   570 label *label109
   571 label *label102
   572 set :drawMaterials:col :drawItem.3:col
   573 set :drawMaterials:y :drawItem.3:y
-    * jump *label101 always
   574 label *label100
   575 label *label101
   576 label *label96
 
   673 jump *label123 lessThan :drawItem.4:col :drawItem.4:columns
   674 set :drawItem.4:col 0
   675 op sub :drawItem.4:y :drawItem.4:y 15
-    * jump *label124 always
   676 label *label123
   677 label *label124
   678 label *label117
 
   801 jump *label150 lessThan :drawItem.5:col :drawItem.5:columns
   802 set :drawItem.5:col 0
   803 op sub :drawItem.5:y :drawItem.5:y 15
-    * jump *label151 always
   804 label *label150
   805 label *label151
   806 label *label144
 
   809 op sub :drawMaterials:count :drawMaterials:count 1
   810 jump *label152 greaterThan :drawMaterials:count 0
   811 jump *label134 always
-    * jump *label153 always
   812 label *label152
   813 label *label153
-    * jump *label143 always
   814 label *label142
   815 label *label143
   816 label *label133
   817 multijump *tmp245 0 0 (m:marker1)
   818 multilabel *label141 (m:marker1)
   819 label *label134
-    * jump *label131 always
   820 label *label130
   821 label *label131
   822 label *label111
 
   918 jump *label171 lessThan :drawItem.6:col :drawItem.6:columns
   919 set :drawItem.6:col 0
   920 op sub :drawItem.6:y :drawItem.6:y 15
-    * jump *label172 always
   921 label *label171
   922 label *label172
   923 label *label165
 
   992 jump *label180 lessThan :drawItem.7:col :drawItem.7:columns
   993 set :drawItem.7:col 0
   994 op sub :drawItem.7:y :drawItem.7:y 15
-    * jump *label181 always
   995 label *label180
   996 label *label181
   997 label *label174
 
  1018 label *label187
  1019 label *label186
  1020 op sub :drawUnits:x :drawUnits:x 30
-    * jump *label185 always
  1021 label *label184
  1022 label *label185
  1023 label *label183
 
  1038 label *label192
  1039 label *label191
  1040 op sub :drawUnits:x :drawUnits:x 30
-    * jump *label190 always
  1041 label *label189
  1042 label *label190
  1043 label *label188
 
  1058 label *label197
  1059 label *label196
  1060 op sub :drawUnits:x :drawUnits:x 30
-    * jump *label195 always
  1061 label *label194
  1062 label *label195
  1063 label *label193
 
  1252 setaddr :drawBlock*retaddr *label248 (h:*label248)
  1253 call *label1 *invalid :drawBlock*retval (m:*label248) (h:*label248)
  1254 label *label248
-    * jump *label247 always
  1255 label *label246
  1256 label *label247
  1257 sensor *tmp348 switch1 @enabled
  1258 jump *label249 equal *tmp348 false
  1259 drawflush null
  1260 jump *label205 always
-    * jump *label250 always
  1261 label *label249
  1262 label *label250
  1263 jump *label251 equal .pageSwitched false
  1264 drawflush display1
-    * jump *label252 always
  1265 label *label251
  1266 label *label252
  1267 label *label204
 
  1350 jump *label267 greaterThanEq :displayLog:y 10
  1351 op add :displayLog:x :displayLog:x 58
  1352 set :displayLog:y 164
-    * jump *label268 always
  1353 label *label267
  1354 label *label268
  1355 label *label264
 
  1358 sensor *tmp385 switch1 @enabled
  1359 jump *label269 equal *tmp385 false
  1360 jump *label258 always
-    * jump *label270 always
  1361 label *label269
  1362 label *label270
  1363 label *label257
 
  1400 drawflush null
  1401 draw reset
  1402 draw clear 0 0 32
-    * jump *label275 always
  1403 label *label274
  1404 label *label275
  1405 label *label10
 
  1473 op mul *tmp482 2 :drawBlock:size
  1474 op mul *tmp483 90 :drawBlock:rotation
  1475 draw image *tmp479 *tmp481 :drawBlock:type *tmp482 *tmp483
-    * jump *label295 always
  1476 label *label294
  1477 label *label295
  1478 label *label292

Modifications by Iterated phase, Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
   127 label *label32
   128 set :drawHeader:tt @second
   129 read *tmp49 processor2 "time"
-    * op div *tmp50 *tmp49 120
-    * op floor :drawHeader:t *tmp50
+  130 op idiv :drawHeader:t *tmp49 120
   131 op idiv :drawHeader:m :drawHeader:t 60
   132 op mod :drawHeader:s :drawHeader:t 60
   133 jump *label37 greaterThanEq :drawHeader:s 10
 
  1316 label *label261
  1317 set :displayRecord:icon *tmp369
  1318 op div *tmp373 :displayRecord:record 1000
-    * op div *tmp374 *tmp373 120
-    * op floor :displayRecord:t *tmp374
+ 1319 op idiv :displayRecord:t *tmp373 120
  1320 op idiv :displayRecord:m :displayRecord:t 60
  1321 op mod :displayRecord:s :displayRecord:t 60
  1322 jump *label262 greaterThanEq :displayRecord:s 10

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-9 instructions):
 
    24 label *label9
    25 jump *label12 equal .displayUnitReset false
    26 set .reconstructorProgress 0
-    * set .factoryProgress .reconstructorProgress
+   27 set .factoryProgress 0
    28 set .displayUnitReset false
    29 label *label12
    30 label *label13
 
    45 set :lerp:from 40
    46 set :lerp:to 88
    47 set :lerp:ratio :animate:ratio
-    * op sub *tmp23 1 :lerp:ratio
-    * op mul *tmp24 *tmp23 :lerp:from
-    * op mul *tmp25 :lerp:ratio :lerp:to
+   48 op sub *tmp23 1 :animate:ratio
+   49 op mul *tmp24 *tmp23 40
+   50 op mul *tmp25 :animate:ratio 88
    51 op add *tmp22 *tmp24 *tmp25
    52 label *label21
    53 set :animate:x *tmp22
    54 set :lerp.1:from 137
    55 set :lerp.1:to 88
    56 set :lerp.1:ratio :animate:ratio
-    * op sub *tmp28 1 :lerp.1:ratio
-    * op mul *tmp29 *tmp28 :lerp.1:from
-    * op mul *tmp30 :lerp.1:ratio :lerp.1:to
+   57 op sub *tmp28 1 :animate:ratio
+   58 op mul *tmp29 *tmp23 137
+   59 op mul *tmp30 :animate:ratio 88
    60 op add *tmp27 *tmp29 *tmp30
    61 label *label22
    62 set :animate:y *tmp27
    63 set :lerp.2:from 32
    64 set :lerp.2:to 168
    65 set :lerp.2:ratio :animate:ratio
-    * op sub *tmp33 1 :lerp.2:ratio
-    * op mul *tmp34 *tmp33 :lerp.2:from
-    * op mul *tmp35 :lerp.2:ratio :lerp.2:to
+   66 op sub *tmp33 1 :animate:ratio
+   67 op mul *tmp34 *tmp23 32
+   68 op mul *tmp35 :animate:ratio 168
    69 op add *tmp32 *tmp34 *tmp35
    70 label *label23
    71 set :animate:size *tmp32
-    * draw image :animate:x :animate:y @mega :animate:size 0
+   72 draw image *tmp22 *tmp27 @mega *tmp32 0
    73 drawflush display1
    74 op add .animation .animation 1
    75 label *label18
 
    81 set :drawBold:x 40
    82 set :drawBold:y 161
    83 set :drawBold:alignment @bottom
-    * set :drawText:x :drawBold:x
-    * set :drawText:y :drawBold:y
-    * set :drawText:alignment :drawBold:alignment
+   84 set :drawText:x 40
+   85 set :drawText:y 161
+   86 set :drawText:alignment @bottom
    87 print "Goal"
-    * set :drawPrint:x :drawText:x
-    * set :drawPrint:y :drawText:y
-    * set :drawPrint:alignment :drawText:alignment
-    * draw print :drawPrint:x :drawPrint:y :drawPrint:alignment
+   88 set :drawPrint:x :drawBold:x
+   89 set :drawPrint:y :drawBold:y
+   90 set :drawPrint:alignment :drawBold:alignment
+   91 draw print :drawText:x :drawText:y :drawText:alignment
    92 label *label28
    93 label *label27
-    * op add :drawText.1:x :drawBold:x 1
-    * set :drawText.1:y :drawBold:y
-    * set :drawText.1:alignment :drawBold:alignment
+   94 op add :drawText.1:x 40 1
+   95 set :drawText.1:y 161
+   96 set :drawText.1:alignment @bottom
    97 print "Goal"
-    * set :drawPrint.1:x :drawText.1:x
-    * set :drawPrint.1:y :drawText.1:y
-    * set :drawPrint.1:alignment :drawText.1:alignment
-    * draw print :drawPrint.1:x :drawPrint.1:y :drawPrint.1:alignment
+   98 set :drawPrint.1:x 41
+   99 set :drawPrint.1:y :drawBold:y
+  100 set :drawPrint.1:alignment :drawBold:alignment
+  101 draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
   102 label *label30
   103 label *label29
   104 label *label26
 
   153 set :drawText.2:y 172
   154 set :drawText.2:alignment @topRight
   155 print ")"
-    * set :drawPrint.2:x :drawText.2:x
-    * set :drawPrint.2:y :drawText.2:y
-    * set :drawPrint.2:alignment :drawText.2:alignment
-    * draw print :drawPrint.2:x :drawPrint.2:y :drawPrint.2:alignment
+  156 set :drawPrint.2:x 170
+  157 set :drawPrint.2:y 172
+  158 set :drawPrint.2:alignment @topRight
+  159 draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
   160 label *label40
   161 label *label39
   162 jump *label41 equal .titaniumDrill false
 
   165 set :drawHeader:x 170
   166 op log10 *tmp64 :drawHeader:count
   167 op floor :drawHeader:len *tmp64
-    * set :drawText.3:x :drawHeader:x
+  168 set :drawText.3:x 170
   169 set :drawText.3:y 155
   170 set :drawText.3:alignment @topRight
   171 print "x"
   172 print :drawHeader:count
-    * set :drawPrint.3:x :drawText.3:x
-    * set :drawPrint.3:y :drawText.3:y
-    * set :drawPrint.3:alignment :drawText.3:alignment
-    * draw print :drawPrint.3:x :drawPrint.3:y :drawPrint.3:alignment
+  173 set :drawPrint.3:x :drawHeader:x
+  174 set :drawPrint.3:y 155
+  175 set :drawPrint.3:alignment @topRight
+  176 draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
   177 label *label44
   178 label *label43
-    * op sub *tmp66 :drawHeader:x 20
+  179 op sub *tmp66 170 20
   180 op mul *tmp67 7 :drawHeader:len
-    * op sub *tmp68 *tmp66 *tmp67
+  181 op sub *tmp68 150 *tmp67
   182 draw image *tmp68 146 @titanium 12 0
   183 label *label41
   184 label *label42
 
   187 set :drawHeader:x.1 120
   188 op log10 *tmp71 :drawHeader:count
   189 op floor :drawHeader:len.1 *tmp71
-    * set :drawText.4:x :drawHeader:x.1
+  190 set :drawText.4:x 120
   191 set :drawText.4:y 155
   192 set :drawText.4:alignment @topRight
   193 print "x"
   194 print :drawHeader:count
-    * set :drawPrint.4:x :drawText.4:x
-    * set :drawPrint.4:y :drawText.4:y
-    * set :drawPrint.4:alignment :drawText.4:alignment
-    * draw print :drawPrint.4:x :drawPrint.4:y :drawPrint.4:alignment
+  195 set :drawPrint.4:x :drawHeader:x.1
+  196 set :drawPrint.4:y 155
+  197 set :drawPrint.4:alignment @topRight
+  198 draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
   199 label *label48
   200 label *label47
-    * op sub *tmp73 :drawHeader:x.1 20
+  201 op sub *tmp73 120 20
   202 op mul *tmp74 7 :drawHeader:len.1
-    * op sub *tmp75 *tmp73 *tmp74
+  203 op sub *tmp75 100 *tmp74
   204 draw image *tmp75 146 @thorium 12 0
   205 label *label45
   206 label *label46
 
   221 set :drawMaterials:unitTotal1 .monoTarget
   222 set :drawMaterials:unit1 .displayNextUnit
   223 set :drawMaterials:unit3 null
-    * set :drawMaterials:unit2 :drawMaterials:unit3
+  224 set :drawMaterials:unit2 null
   225 jump *label53 always
   226 label *label52
   227 jump *label54 notEqual .displayNextUnit @flare
 
   232 set :drawMaterials:unitTotal1 .flareTarget
   233 set :drawMaterials:unit1 .displayNextUnit
   234 set :drawMaterials:unit3 null
-    * set :drawMaterials:unit2 :drawMaterials:unit3
+  235 set :drawMaterials:unit2 null
   236 jump *label55 always
   237 label *label54
   238 jump *label56 notEqual .displayNextUnit @poly
 
   267 set :drawBold.1:x 22
   268 set :drawBold.1:y 105
   269 set :drawBold.1:alignment @bottomLeft
-    * set :drawText.5:x :drawBold.1:x
-    * set :drawText.5:y :drawBold.1:y
-    * set :drawText.5:alignment :drawBold.1:alignment
+  270 set :drawText.5:x 22
+  271 set :drawText.5:y 105
+  272 set :drawText.5:alignment @bottomLeft
   273 print "Unit factories"
-    * set :drawPrint.5:x :drawText.5:x
-    * set :drawPrint.5:y :drawText.5:y
-    * set :drawPrint.5:alignment :drawText.5:alignment
-    * draw print :drawPrint.5:x :drawPrint.5:y :drawPrint.5:alignment
+  274 set :drawPrint.5:x :drawBold.1:x
+  275 set :drawPrint.5:y :drawBold.1:y
+  276 set :drawPrint.5:alignment :drawBold.1:alignment
+  277 draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
   278 label *label62
   279 label *label61
-    * op add :drawText.6:x :drawBold.1:x 1
-    * set :drawText.6:y :drawBold.1:y
-    * set :drawText.6:alignment :drawBold.1:alignment
+  280 op add :drawText.6:x 22 1
+  281 set :drawText.6:y 105
+  282 set :drawText.6:alignment @bottomLeft
   283 print "Unit factories"
-    * set :drawPrint.6:x :drawText.6:x
-    * set :drawPrint.6:y :drawText.6:y
-    * set :drawPrint.6:alignment :drawText.6:alignment
-    * draw print :drawPrint.6:x :drawPrint.6:y :drawPrint.6:alignment
+  284 set :drawPrint.6:x 23
+  285 set :drawPrint.6:y :drawBold.1:y
+  286 set :drawPrint.6:alignment :drawBold.1:alignment
+  287 draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
   288 label *label64
   289 label *label63
   290 label *label60
 
   295 set :drawItem:item :drawMaterials:unit1
   296 set :drawItem:current .factoryProgress
   297 set :drawItem:target 1
-    * op mul *tmp113 :drawItem:columns 176
-    * op div *tmp114 *tmp113 2
-    * op sub :drawItem:barLength 210 *tmp114
-    * op add :drawItem:textEnd 48 :drawItem:barLength
-    * op mul *tmp117 :drawItem:barLength :drawItem:current
-    * op div *tmp118 *tmp117 :drawItem:target
-    * op min :drawItem:length :drawItem:barLength *tmp118
-    * op mul *tmp120 :drawItem:col 176
-    * op div *tmp121 *tmp120 2
-    * op add :drawItem:iconX 11 *tmp121
-    * op mul *tmp123 :drawItem:col 176
-    * op div *tmp124 *tmp123 2
-    * op add :drawItem:barX 22 *tmp124
-    * op mul *tmp126 :drawItem:col 176
-    * op div *tmp127 *tmp126 2
-    * op add :drawItem:textX :drawItem:textEnd *tmp127
+  298 op mul *tmp113 1 176
+  299 op div *tmp114 176 2
+  300 op sub :drawItem:barLength 210 88
+  301 op add :drawItem:textEnd 48 122
+  302 op mul *tmp117 122 .factoryProgress
+  303 op div *tmp118 *tmp117 1
+  304 op min :drawItem:length 122 *tmp118
+  305 op mul *tmp120 0 176
+  306 op div *tmp121 0 2
+  307 op add :drawItem:iconX 11 0
+  308 op mul *tmp123 0 176
+  309 op div *tmp124 0 2
+  310 op add :drawItem:barX 22 0
+  311 op mul *tmp126 0 176
+  312 op div *tmp127 0 2
+  313 op add :drawItem:textX 170 0
   314 draw col %[white]
-    * op add *tmp129 :drawItem:y 5
-    * draw image :drawItem:iconX *tmp129 :drawItem:item 16 0
+  315 op add *tmp129 90 5
+  316 draw image 11 95 :drawMaterials:unit1 16 0
   317 draw color 0 128 0 255
-    * draw rect :drawItem:barX :drawItem:y :drawItem:length 10
+  318 draw rect 22 90 :drawItem:length 10
   319 draw color 0 255 0 255
-    * draw lineRect :drawItem:barX :drawItem:y :drawItem:barLength 10
-    * op add *tmp130 :drawItem:y 5
-    * op add *tmp131 *tmp130 2
-    * set :drawBold.2:x :drawItem:textX
-    * set :drawBold.2:y *tmp131
+  320 draw lineRect 22 90 122 10
+  321 op add *tmp130 90 5
+  322 op add *tmp131 95 2
+  323 set :drawBold.2:x 170
+  324 set :drawBold.2:y 97
   325 set :drawBold.2:alignment @right
-    * set :drawText.7:x :drawBold.2:x
-    * set :drawText.7:y :drawBold.2:y
-    * set :drawText.7:alignment :drawBold.2:alignment
+  326 set :drawText.7:x :drawItem:textX
+  327 set :drawText.7:y *tmp131
+  328 set :drawText.7:alignment @right
   329 print :drawMaterials:unitCount1
   330 print "/"
   331 print :drawMaterials:unitTotal1
-    * set :drawPrint.7:x :drawText.7:x
-    * set :drawPrint.7:y :drawText.7:y
-    * set :drawPrint.7:alignment :drawText.7:alignment
-    * draw print :drawPrint.7:x :drawPrint.7:y :drawPrint.7:alignment
+  332 set :drawPrint.7:x :drawBold.2:x
+  333 set :drawPrint.7:y :drawBold.2:y
+  334 set :drawPrint.7:alignment :drawBold.2:alignment
+  335 draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
   336 label *label70
   337 label *label69
-    * op add :drawText.8:x :drawBold.2:x 1
-    * set :drawText.8:y :drawBold.2:y
-    * set :drawText.8:alignment :drawBold.2:alignment
+  338 op add :drawText.8:x :drawItem:textX 1
+  339 set :drawText.8:y *tmp131
+  340 set :drawText.8:alignment @right
   341 print :drawMaterials:unitCount1
   342 print "/"
   343 print :drawMaterials:unitTotal1
   344 set :drawPrint.8:x :drawText.8:x
-    * set :drawPrint.8:y :drawText.8:y
-    * set :drawPrint.8:alignment :drawText.8:alignment
-    * draw print :drawPrint.8:x :drawPrint.8:y :drawPrint.8:alignment
+  345 set :drawPrint.8:y :drawBold.2:y
+  346 set :drawPrint.8:alignment :drawBold.2:alignment
+  347 draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
   348 label *label72
   349 label *label71
   350 label *label68
-    * op add :drawItem:col :drawItem:col 1
-    * jump *label73 lessThan :drawItem:col :drawItem:columns
-    * set :drawItem:col 0
-    * op sub :drawItem:y :drawItem:y 15
+  351 op add :drawItem:col 0 1
+  352 jump *label73 lessThan 1 1
+  353 op sub :drawItem:y 90 15
   354 label *label73
   355 label *label74
   356 label *label67
 
   361 set :drawItem.1:item :drawMaterials:unit2
   362 set :drawItem.1:current .reconstructorProgress
   363 set :drawItem.1:target 1
-    * op mul *tmp137 :drawItem.1:columns 176
-    * op div *tmp138 *tmp137 2
-    * op sub :drawItem.1:barLength 210 *tmp138
-    * op add :drawItem.1:textEnd 48 :drawItem.1:barLength
-    * op mul *tmp141 :drawItem.1:barLength :drawItem.1:current
-    * op div *tmp142 *tmp141 :drawItem.1:target
-    * op min :drawItem.1:length :drawItem.1:barLength *tmp142
-    * op mul *tmp144 :drawItem.1:col 176
-    * op div *tmp145 *tmp144 2
-    * op add :drawItem.1:iconX 11 *tmp145
-    * op mul *tmp147 :drawItem.1:col 176
-    * op div *tmp148 *tmp147 2
-    * op add :drawItem.1:barX 22 *tmp148
-    * op mul *tmp150 :drawItem.1:col 176
-    * op div *tmp151 *tmp150 2
-    * op add :drawItem.1:textX :drawItem.1:textEnd *tmp151
+  364 op mul *tmp137 1 176
+  365 op div *tmp138 176 2
+  366 op sub :drawItem.1:barLength 210 88
+  367 op add :drawItem.1:textEnd 48 122
+  368 op mul *tmp141 122 .reconstructorProgress
+  369 op div *tmp142 *tmp141 1
+  370 op min :drawItem.1:length 122 *tmp142
+  371 op mul *tmp144 0 176
+  372 op div *tmp145 0 2
+  373 op add :drawItem.1:iconX 11 0
+  374 op mul *tmp147 0 176
+  375 op div *tmp148 0 2
+  376 op add :drawItem.1:barX 22 0
+  377 op mul *tmp150 0 176
+  378 op div *tmp151 0 2
+  379 op add :drawItem.1:textX 170 0
   380 draw col %[white]
-    * op add *tmp153 :drawItem.1:y 5
-    * draw image :drawItem.1:iconX *tmp153 :drawItem.1:item 16 0
+  381 op add *tmp153 75 5
+  382 draw image 11 80 :drawMaterials:unit2 16 0
   383 draw color 0 128 0 255
-    * draw rect :drawItem.1:barX :drawItem.1:y :drawItem.1:length 10
+  384 draw rect 22 75 :drawItem.1:length 10
   385 draw color 0 255 0 255
-    * draw lineRect :drawItem.1:barX :drawItem.1:y :drawItem.1:barLength 10
-    * op add *tmp154 :drawItem.1:y 5
-    * op add *tmp155 *tmp154 2
-    * set :drawBold.3:x :drawItem.1:textX
-    * set :drawBold.3:y *tmp155
+  386 draw lineRect 22 75 122 10
+  387 op add *tmp154 75 5
+  388 op add *tmp155 80 2
+  389 set :drawBold.3:x 170
+  390 set :drawBold.3:y 82
   391 set :drawBold.3:alignment @right
-    * set :drawText.9:x :drawBold.3:x
-    * set :drawText.9:y :drawBold.3:y
-    * set :drawText.9:alignment :drawBold.3:alignment
+  392 set :drawText.9:x :drawItem.1:textX
+  393 set :drawText.9:y *tmp155
+  394 set :drawText.9:alignment @right
   395 print :drawMaterials:unitCount2
   396 print "/"
   397 print :drawMaterials:unitTotal2
-    * set :drawPrint.9:x :drawText.9:x
-    * set :drawPrint.9:y :drawText.9:y
-    * set :drawPrint.9:alignment :drawText.9:alignment
-    * draw print :drawPrint.9:x :drawPrint.9:y :drawPrint.9:alignment
+  398 set :drawPrint.9:x :drawBold.3:x
+  399 set :drawPrint.9:y :drawBold.3:y
+  400 set :drawPrint.9:alignment :drawBold.3:alignment
+  401 draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
   402 label *label80
   403 label *label79
-    * op add :drawText.10:x :drawBold.3:x 1
-    * set :drawText.10:y :drawBold.3:y
-    * set :drawText.10:alignment :drawBold.3:alignment
+  404 op add :drawText.10:x :drawItem.1:textX 1
+  405 set :drawText.10:y *tmp155
+  406 set :drawText.10:alignment @right
   407 print :drawMaterials:unitCount2
   408 print "/"
   409 print :drawMaterials:unitTotal2
   410 set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawText.10:y
-    * set :drawPrint.10:alignment :drawText.10:alignment
-    * draw print :drawPrint.10:x :drawPrint.10:y :drawPrint.10:alignment
+  411 set :drawPrint.10:y :drawBold.3:y
+  412 set :drawPrint.10:alignment :drawBold.3:alignment
+  413 draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
   414 label *label82
   415 label *label81
   416 label *label78
-    * op add :drawItem.1:col :drawItem.1:col 1
-    * jump *label83 lessThan :drawItem.1:col :drawItem.1:columns
-    * set :drawItem.1:col 0
-    * op sub :drawItem.1:y :drawItem.1:y 15
+  417 op add :drawItem.1:col 0 1
+  418 jump *label83 lessThan 1 1
+  419 op sub :drawItem.1:y 75 15
   420 label *label83
   421 label *label84
   422 label *label77
 
   427 set :drawItem.2:item :drawMaterials:unit3
   428 set :drawItem.2:current :drawMaterials:multiReconstructorProgress
   429 set :drawItem.2:target 1
-    * op mul *tmp161 :drawItem.2:columns 176
-    * op div *tmp162 *tmp161 2
-    * op sub :drawItem.2:barLength 210 *tmp162
-    * op add :drawItem.2:textEnd 48 :drawItem.2:barLength
-    * op mul *tmp165 :drawItem.2:barLength :drawItem.2:current
-    * op div *tmp166 *tmp165 :drawItem.2:target
-    * op min :drawItem.2:length :drawItem.2:barLength *tmp166
-    * op mul *tmp168 :drawItem.2:col 176
-    * op div *tmp169 *tmp168 2
-    * op add :drawItem.2:iconX 11 *tmp169
-    * op mul *tmp171 :drawItem.2:col 176
-    * op div *tmp172 *tmp171 2
-    * op add :drawItem.2:barX 22 *tmp172
-    * op mul *tmp174 :drawItem.2:col 176
-    * op div *tmp175 *tmp174 2
-    * op add :drawItem.2:textX :drawItem.2:textEnd *tmp175
+  430 op mul *tmp161 1 176
+  431 op div *tmp162 176 2
+  432 op sub :drawItem.2:barLength 210 88
+  433 op add :drawItem.2:textEnd 48 122
+  434 op mul *tmp165 122 :drawMaterials:multiReconstructorProgress
+  435 op div *tmp166 *tmp165 1
+  436 op min :drawItem.2:length 122 *tmp166
+  437 op mul *tmp168 0 176
+  438 op div *tmp169 0 2
+  439 op add :drawItem.2:iconX 11 0
+  440 op mul *tmp171 0 176
+  441 op div *tmp172 0 2
+  442 op add :drawItem.2:barX 22 0
+  443 op mul *tmp174 0 176
+  444 op div *tmp175 0 2
+  445 op add :drawItem.2:textX 170 0
   446 draw col %[white]
-    * op add *tmp177 :drawItem.2:y 5
-    * draw image :drawItem.2:iconX *tmp177 :drawItem.2:item 16 0
+  447 op add *tmp177 60 5
+  448 draw image 11 65 :drawMaterials:unit3 16 0
   449 draw color 0 128 0 255
-    * draw rect :drawItem.2:barX :drawItem.2:y :drawItem.2:length 10
+  450 draw rect 22 60 :drawItem.2:length 10
   451 draw color 0 255 0 255
-    * draw lineRect :drawItem.2:barX :drawItem.2:y :drawItem.2:barLength 10
-    * op add *tmp178 :drawItem.2:y 5
-    * op add *tmp179 *tmp178 2
-    * set :drawBold.4:x :drawItem.2:textX
-    * set :drawBold.4:y *tmp179
+  452 draw lineRect 22 60 122 10
+  453 op add *tmp178 60 5
+  454 op add *tmp179 65 2
+  455 set :drawBold.4:x 170
+  456 set :drawBold.4:y 67
   457 set :drawBold.4:alignment @right
-    * set :drawText.11:x :drawBold.4:x
-    * set :drawText.11:y :drawBold.4:y
-    * set :drawText.11:alignment :drawBold.4:alignment
+  458 set :drawText.11:x :drawItem.2:textX
+  459 set :drawText.11:y *tmp179
+  460 set :drawText.11:alignment @right
   461 print .displayMegas
   462 print "/"
   463 print .megaTarget
-    * set :drawPrint.11:x :drawText.11:x
-    * set :drawPrint.11:y :drawText.11:y
-    * set :drawPrint.11:alignment :drawText.11:alignment
-    * draw print :drawPrint.11:x :drawPrint.11:y :drawPrint.11:alignment
+  464 set :drawPrint.11:x :drawBold.4:x
+  465 set :drawPrint.11:y :drawBold.4:y
+  466 set :drawPrint.11:alignment :drawBold.4:alignment
+  467 draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
   468 label *label90
   469 label *label89
-    * op add :drawText.12:x :drawBold.4:x 1
-    * set :drawText.12:y :drawBold.4:y
-    * set :drawText.12:alignment :drawBold.4:alignment
+  470 op add :drawText.12:x :drawItem.2:textX 1
+  471 set :drawText.12:y *tmp179
+  472 set :drawText.12:alignment @right
   473 print .displayMegas
   474 print "/"
   475 print .megaTarget
   476 set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawText.12:y
-    * set :drawPrint.12:alignment :drawText.12:alignment
-    * draw print :drawPrint.12:x :drawPrint.12:y :drawPrint.12:alignment
+  477 set :drawPrint.12:y :drawBold.4:y
+  478 set :drawPrint.12:alignment :drawBold.4:alignment
+  479 draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
   480 label *label92
   481 label *label91
   482 label *label88
-    * op add :drawItem.2:col :drawItem.2:col 1
-    * jump *label93 lessThan :drawItem.2:col :drawItem.2:columns
-    * set :drawItem.2:col 0
-    * op sub :drawItem.2:y :drawItem.2:y 15
+  483 op add :drawItem.2:col 0 1
+  484 jump *label93 lessThan 1 1
+  485 op sub :drawItem.2:y 60 15
   486 label *label93
   487 label *label94
   488 label *label87
 
   509 set :drawItem.3:item :drawMaterials:item
   510 set :drawItem.3:current *tmp188
   511 set :drawItem.3:target :drawMaterials:target
-    * op mul *tmp189 :drawItem.3:columns 176
-    * op div *tmp190 *tmp189 2
-    * op sub :drawItem.3:barLength 210 *tmp190
-    * op add :drawItem.3:textEnd 48 :drawItem.3:barLength
-    * op mul *tmp193 :drawItem.3:barLength :drawItem.3:current
-    * op div *tmp194 *tmp193 :drawItem.3:target
-    * op min :drawItem.3:length :drawItem.3:barLength *tmp194
-    * op mul *tmp196 :drawItem.3:col 176
-    * op div *tmp197 *tmp196 2
+  512 op mul *tmp189 1 176
+  513 op div *tmp190 176 2
+  514 op sub :drawItem.3:barLength 210 88
+  515 op add :drawItem.3:textEnd 48 122
+  516 op mul *tmp193 122 *tmp188
+  517 op div *tmp194 *tmp193 :drawMaterials:target
+  518 op min :drawItem.3:length 122 *tmp194
+  519 op mul *tmp196 :drawMaterials:col 176
+  520 op mul *tmp197 :drawItem.3:col 88
   521 op add :drawItem.3:iconX 11 *tmp197
-    * op mul *tmp199 :drawItem.3:col 176
-    * op div *tmp200 *tmp199 2
-    * op add :drawItem.3:barX 22 *tmp200
-    * op mul *tmp202 :drawItem.3:col 176
-    * op div *tmp203 *tmp202 2
-    * op add :drawItem.3:textX :drawItem.3:textEnd *tmp203
+  522 op mul *tmp199 :drawMaterials:col 176
+  523 op div *tmp200 *tmp196 2
+  524 op add :drawItem.3:barX 22 *tmp197
+  525 op mul *tmp202 :drawMaterials:col 176
+  526 op div *tmp203 *tmp196 2
+  527 op add :drawItem.3:textX 170 *tmp197
   528 draw col %[white]
-    * op add *tmp205 :drawItem.3:y 5
-    * draw image :drawItem.3:iconX *tmp205 :drawItem.3:item 16 0
+  529 op add *tmp205 :drawMaterials:y 5
+  530 draw image :drawItem.3:iconX *tmp205 :drawMaterials:item 16 0
   531 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawItem.3:y :drawItem.3:length 10
+  532 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
   533 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawItem.3:y :drawItem.3:barLength 10
-    * op add *tmp206 :drawItem.3:y 5
-    * op add *tmp207 *tmp206 2
+  534 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  535 op add *tmp206 :drawMaterials:y 5
+  536 op add *tmp207 *tmp205 2
   537 set :drawBold.5:x :drawItem.3:textX
   538 set :drawBold.5:y *tmp207
   539 set :drawBold.5:alignment @right
-    * set :drawText.13:x :drawBold.5:x
-    * set :drawText.13:y :drawBold.5:y
-    * set :drawText.13:alignment :drawBold.5:alignment
+  540 set :drawText.13:x :drawItem.3:textX
+  541 set :drawText.13:y *tmp207
+  542 set :drawText.13:alignment @right
   543 print :drawMaterials:target
-    * set :drawPrint.13:x :drawText.13:x
-    * set :drawPrint.13:y :drawText.13:y
-    * set :drawPrint.13:alignment :drawText.13:alignment
-    * draw print :drawPrint.13:x :drawPrint.13:y :drawPrint.13:alignment
+  544 set :drawPrint.13:x :drawBold.5:x
+  545 set :drawPrint.13:y :drawBold.5:y
+  546 set :drawPrint.13:alignment :drawBold.5:alignment
+  547 draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
   548 label *label105
   549 label *label104
-    * op add :drawText.14:x :drawBold.5:x 1
-    * set :drawText.14:y :drawBold.5:y
-    * set :drawText.14:alignment :drawBold.5:alignment
+  550 op add :drawText.14:x :drawItem.3:textX 1
+  551 set :drawText.14:y *tmp207
+  552 set :drawText.14:alignment @right
   553 print :drawMaterials:target
   554 set :drawPrint.14:x :drawText.14:x
-    * set :drawPrint.14:y :drawText.14:y
-    * set :drawPrint.14:alignment :drawText.14:alignment
-    * draw print :drawPrint.14:x :drawPrint.14:y :drawPrint.14:alignment
+  555 set :drawPrint.14:y :drawBold.5:y
+  556 set :drawPrint.14:alignment :drawBold.5:alignment
+  557 draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
   558 label *label107
   559 label *label106
   560 label *label103
-    * op add :drawItem.3:col :drawItem.3:col 1
-    * jump *label108 lessThan :drawItem.3:col :drawItem.3:columns
+  561 op add :drawItem.3:col :drawMaterials:col 1
+  562 jump *label108 lessThan :drawItem.3:col 1
   563 set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawItem.3:y 15
+  564 op sub :drawItem.3:y :drawMaterials:y 15
   565 label *label108
   566 label *label109
   567 label *label102
 
   583 set :drawBold.6:x 22
   584 set :drawBold.6:y 105
   585 set :drawBold.6:alignment @bottomLeft
-    * set :drawText.15:x :drawBold.6:x
-    * set :drawText.15:y :drawBold.6:y
-    * set :drawText.15:alignment :drawBold.6:alignment
+  586 set :drawText.15:x 22
+  587 set :drawText.15:y 105
+  588 set :drawText.15:alignment @bottomLeft
   589 read *tmp215 processor1 ".mapAction"
   590 print *tmp215
-    * set :drawPrint.15:x :drawText.15:x
-    * set :drawPrint.15:y :drawText.15:y
-    * set :drawPrint.15:alignment :drawText.15:alignment
-    * draw print :drawPrint.15:x :drawPrint.15:y :drawPrint.15:alignment
+  591 set :drawPrint.15:x :drawBold.6:x
+  592 set :drawPrint.15:y :drawBold.6:y
+  593 set :drawPrint.15:alignment :drawBold.6:alignment
+  594 draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
   595 label *label114
   596 label *label113
-    * op add :drawText.16:x :drawBold.6:x 1
-    * set :drawText.16:y :drawBold.6:y
-    * set :drawText.16:alignment :drawBold.6:alignment
+  597 op add :drawText.16:x 22 1
+  598 set :drawText.16:y 105
+  599 set :drawText.16:alignment @bottomLeft
   600 read *tmp217 processor1 ".mapAction"
   601 print *tmp217
-    * set :drawPrint.16:x :drawText.16:x
-    * set :drawPrint.16:y :drawText.16:y
-    * set :drawPrint.16:alignment :drawText.16:alignment
-    * draw print :drawPrint.16:x :drawPrint.16:y :drawPrint.16:alignment
+  602 set :drawPrint.16:x 23
+  603 set :drawPrint.16:y :drawBold.6:y
+  604 set :drawPrint.16:alignment :drawBold.6:alignment
+  605 draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
   606 label *label116
   607 label *label115
   608 label *label112
 
   612 set :drawItem.4:item @titanium
   613 read :drawItem.4:current processor1 ".mapProgress"
   614 read :drawItem.4:target processor1 ".mapTotal"
-    * op mul *tmp218 :drawItem.4:columns 176
-    * op div *tmp219 *tmp218 2
-    * op sub :drawItem.4:barLength 210 *tmp219
-    * op add :drawItem.4:textEnd 48 :drawItem.4:barLength
-    * op mul *tmp222 :drawItem.4:barLength :drawItem.4:current
+  615 op mul *tmp218 1 176
+  616 op div *tmp219 176 2
+  617 op sub :drawItem.4:barLength 210 88
+  618 op add :drawItem.4:textEnd 48 122
+  619 op mul *tmp222 122 :drawItem.4:current
   620 op div *tmp223 *tmp222 :drawItem.4:target
-    * op min :drawItem.4:length :drawItem.4:barLength *tmp223
-    * op mul *tmp225 :drawItem.4:col 176
-    * op div *tmp226 *tmp225 2
-    * op add :drawItem.4:iconX 11 *tmp226
-    * op mul *tmp228 :drawItem.4:col 176
-    * op div *tmp229 *tmp228 2
-    * op add :drawItem.4:barX 22 *tmp229
-    * op mul *tmp231 :drawItem.4:col 176
-    * op div *tmp232 *tmp231 2
-    * op add :drawItem.4:textX :drawItem.4:textEnd *tmp232
+  621 op min :drawItem.4:length 122 *tmp223
+  622 op mul *tmp225 0 176
+  623 op div *tmp226 0 2
+  624 op add :drawItem.4:iconX 11 0
+  625 op mul *tmp228 0 176
+  626 op div *tmp229 0 2
+  627 op add :drawItem.4:barX 22 0
+  628 op mul *tmp231 0 176
+  629 op div *tmp232 0 2
+  630 op add :drawItem.4:textX 170 0
   631 draw col %[white]
-    * op add *tmp234 :drawItem.4:y 5
-    * draw image :drawItem.4:iconX *tmp234 :drawItem.4:item 16 0
+  632 op add *tmp234 90 5
+  633 draw image 11 95 @titanium 16 0
   634 draw color 0 128 0 255
-    * draw rect :drawItem.4:barX :drawItem.4:y :drawItem.4:length 10
+  635 draw rect 22 90 :drawItem.4:length 10
   636 draw color 0 255 0 255
-    * draw lineRect :drawItem.4:barX :drawItem.4:y :drawItem.4:barLength 10
-    * op add *tmp235 :drawItem.4:y 5
-    * op add *tmp236 *tmp235 2
-    * set :drawBold.7:x :drawItem.4:textX
-    * set :drawBold.7:y *tmp236
+  637 draw lineRect 22 90 122 10
+  638 op add *tmp235 90 5
+  639 op add *tmp236 95 2
+  640 set :drawBold.7:x 170
+  641 set :drawBold.7:y 97
   642 set :drawBold.7:alignment @right
-    * set :drawText.17:x :drawBold.7:x
-    * set :drawText.17:y :drawBold.7:y
-    * set :drawText.17:alignment :drawBold.7:alignment
+  643 set :drawText.17:x :drawItem.4:textX
+  644 set :drawText.17:y *tmp236
+  645 set :drawText.17:alignment @right
   646 print "x"
   647 read *tmp237 processor1 ".mapSpots"
   648 print *tmp237
-    * set :drawPrint.17:x :drawText.17:x
-    * set :drawPrint.17:y :drawText.17:y
-    * set :drawPrint.17:alignment :drawText.17:alignment
-    * draw print :drawPrint.17:x :drawPrint.17:y :drawPrint.17:alignment
+  649 set :drawPrint.17:x :drawBold.7:x
+  650 set :drawPrint.17:y :drawBold.7:y
+  651 set :drawPrint.17:alignment :drawBold.7:alignment
+  652 draw print :drawText.17:x :drawText.17:y :drawText.17:alignment
   653 label *label120
   654 label *label119
-    * op add :drawText.18:x :drawBold.7:x 1
-    * set :drawText.18:y :drawBold.7:y
-    * set :drawText.18:alignment :drawBold.7:alignment
+  655 op add :drawText.18:x :drawItem.4:textX 1
+  656 set :drawText.18:y *tmp236
+  657 set :drawText.18:alignment @right
   658 print "x"
   659 read *tmp239 processor1 ".mapSpots"
   660 print *tmp239
   661 set :drawPrint.18:x :drawText.18:x
-    * set :drawPrint.18:y :drawText.18:y
-    * set :drawPrint.18:alignment :drawText.18:alignment
-    * draw print :drawPrint.18:x :drawPrint.18:y :drawPrint.18:alignment
+  662 set :drawPrint.18:y :drawBold.7:y
+  663 set :drawPrint.18:alignment :drawBold.7:alignment
+  664 draw print :drawText.18:x :drawText.18:y :drawText.18:alignment
   665 label *label122
   666 label *label121
   667 label *label118
-    * op add :drawItem.4:col :drawItem.4:col 1
-    * jump *label123 lessThan :drawItem.4:col :drawItem.4:columns
-    * set :drawItem.4:col 0
-    * op sub :drawItem.4:y :drawItem.4:y 15
+  668 op add :drawItem.4:col 0 1
+  669 jump *label123 lessThan 1 1
+  670 op sub :drawItem.4:y 90 15
   671 label *label123
   672 label *label124
   673 label *label117
 
   678 set :drawBold.8:x 22
   679 set :drawBold.8:y 105
   680 set :drawBold.8:alignment @bottomLeft
-    * set :drawText.19:x :drawBold.8:x
-    * set :drawText.19:y :drawBold.8:y
-    * set :drawText.19:alignment :drawBold.8:alignment
+  681 set :drawText.19:x 22
+  682 set :drawText.19:y 105
+  683 set :drawText.19:alignment @bottomLeft
   684 print "Materials"
-    * set :drawPrint.19:x :drawText.19:x
-    * set :drawPrint.19:y :drawText.19:y
-    * set :drawPrint.19:alignment :drawText.19:alignment
-    * draw print :drawPrint.19:x :drawPrint.19:y :drawPrint.19:alignment
+  685 set :drawPrint.19:x :drawBold.8:x
+  686 set :drawPrint.19:y :drawBold.8:y
+  687 set :drawPrint.19:alignment :drawBold.8:alignment
+  688 draw print :drawText.19:x :drawText.19:y :drawText.19:alignment
   689 label *label127
   690 label *label126
-    * op add :drawText.20:x :drawBold.8:x 1
-    * set :drawText.20:y :drawBold.8:y
-    * set :drawText.20:alignment :drawBold.8:alignment
+  691 op add :drawText.20:x 22 1
+  692 set :drawText.20:y 105
+  693 set :drawText.20:alignment @bottomLeft
   694 print "Materials"
-    * set :drawPrint.20:x :drawText.20:x
-    * set :drawPrint.20:y :drawText.20:y
-    * set :drawPrint.20:alignment :drawText.20:alignment
-    * draw print :drawPrint.20:x :drawPrint.20:y :drawPrint.20:alignment
+  695 set :drawPrint.20:x 23
+  696 set :drawPrint.20:y :drawBold.8:y
+  697 set :drawPrint.20:alignment :drawBold.8:alignment
+  698 draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
   699 label *label129
   700 label *label128
   701 label *label125
   702 set :drawMaterials:columns 1
-    * jump *label130 equal :drawMaterials:count false
+  703 jump *label130 equal .materialCount false
   704 set :drawMaterials:item.1 @copper
   705 set :drawMaterials:target.1 .targetCopper
   706 setaddr *tmp245 *label135
 
   739 sensor *tmp248 .core :drawMaterials:item.1
   740 set :drawItem.5:col :drawMaterials:col
   741 set :drawItem.5:y :drawMaterials:y
-    * set :drawItem.5:columns :drawMaterials:columns
+  742 set :drawItem.5:columns 1
   743 set :drawItem.5:item :drawMaterials:item.1
   744 set :drawItem.5:current *tmp248
   745 set :drawItem.5:target :drawMaterials:target.1
-    * op mul *tmp249 :drawItem.5:columns 176
-    * op div *tmp250 *tmp249 2
+  746 op mul *tmp249 :drawMaterials:columns 176
+  747 op mul *tmp250 :drawItem.5:columns 88
   748 op sub :drawItem.5:barLength 210 *tmp250
   749 op add :drawItem.5:textEnd 48 :drawItem.5:barLength
-    * op mul *tmp253 :drawItem.5:barLength :drawItem.5:current
-    * op div *tmp254 *tmp253 :drawItem.5:target
+  750 op mul *tmp253 :drawItem.5:barLength *tmp248
+  751 op div *tmp254 *tmp253 :drawMaterials:target.1
   752 op min :drawItem.5:length :drawItem.5:barLength *tmp254
-    * op mul *tmp256 :drawItem.5:col 176
-    * op div *tmp257 *tmp256 2
+  753 op mul *tmp256 :drawMaterials:col 176
+  754 op mul *tmp257 :drawItem.5:col 88
   755 op add :drawItem.5:iconX 11 *tmp257
-    * op mul *tmp259 :drawItem.5:col 176
-    * op div *tmp260 *tmp259 2
-    * op add :drawItem.5:barX 22 *tmp260
-    * op mul *tmp262 :drawItem.5:col 176
-    * op div *tmp263 *tmp262 2
-    * op add :drawItem.5:textX :drawItem.5:textEnd *tmp263
+  756 op mul *tmp259 :drawMaterials:col 176
+  757 op div *tmp260 *tmp256 2
+  758 op add :drawItem.5:barX 22 *tmp257
+  759 op mul *tmp262 :drawMaterials:col 176
+  760 op div *tmp263 *tmp256 2
+  761 op add :drawItem.5:textX :drawItem.5:textEnd *tmp257
   762 draw col %[white]
-    * op add *tmp265 :drawItem.5:y 5
-    * draw image :drawItem.5:iconX *tmp265 :drawItem.5:item 16 0
+  763 op add *tmp265 :drawMaterials:y 5
+  764 draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
   765 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawItem.5:y :drawItem.5:length 10
+  766 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   767 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawItem.5:y :drawItem.5:barLength 10
-    * op add *tmp266 :drawItem.5:y 5
-    * op add *tmp267 *tmp266 2
+  768 draw lineRect :drawItem.5:barX :drawMaterials:y :drawItem.5:barLength 10
+  769 op add *tmp266 :drawMaterials:y 5
+  770 op add *tmp267 *tmp265 2
   771 set :drawBold.9:x :drawItem.5:textX
   772 set :drawBold.9:y *tmp267
   773 set :drawBold.9:alignment @right
-    * set :drawText.21:x :drawBold.9:x
-    * set :drawText.21:y :drawBold.9:y
-    * set :drawText.21:alignment :drawBold.9:alignment
+  774 set :drawText.21:x :drawItem.5:textX
+  775 set :drawText.21:y *tmp267
+  776 set :drawText.21:alignment @right
   777 print :drawMaterials:target.1
-    * set :drawPrint.21:x :drawText.21:x
-    * set :drawPrint.21:y :drawText.21:y
-    * set :drawPrint.21:alignment :drawText.21:alignment
-    * draw print :drawPrint.21:x :drawPrint.21:y :drawPrint.21:alignment
+  778 set :drawPrint.21:x :drawBold.9:x
+  779 set :drawPrint.21:y :drawBold.9:y
+  780 set :drawPrint.21:alignment :drawBold.9:alignment
+  781 draw print :drawText.21:x :drawText.21:y :drawText.21:alignment
   782 label *label147
   783 label *label146
-    * op add :drawText.22:x :drawBold.9:x 1
-    * set :drawText.22:y :drawBold.9:y
-    * set :drawText.22:alignment :drawBold.9:alignment
+  784 op add :drawText.22:x :drawItem.5:textX 1
+  785 set :drawText.22:y *tmp267
+  786 set :drawText.22:alignment @right
   787 print :drawMaterials:target.1
   788 set :drawPrint.22:x :drawText.22:x
-    * set :drawPrint.22:y :drawText.22:y
-    * set :drawPrint.22:alignment :drawText.22:alignment
-    * draw print :drawPrint.22:x :drawPrint.22:y :drawPrint.22:alignment
+  789 set :drawPrint.22:y :drawBold.9:y
+  790 set :drawPrint.22:alignment :drawBold.9:alignment
+  791 draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
   792 label *label149
   793 label *label148
   794 label *label145
-    * op add :drawItem.5:col :drawItem.5:col 1
-    * jump *label150 lessThan :drawItem.5:col :drawItem.5:columns
+  795 op add :drawItem.5:col :drawMaterials:col 1
+  796 jump *label150 lessThan :drawItem.5:col :drawMaterials:columns
   797 set :drawItem.5:col 0
-    * op sub :drawItem.5:y :drawItem.5:y 15
+  798 op sub :drawItem.5:y :drawMaterials:y 15
   799 label *label150
   800 label *label151
   801 label *label144
 
   826 label *label156
   827 set :drawUnit:y *tmp274
   828 set :drawBold.10:x 22
-    * set :drawBold.10:y :drawUnit:y
+  829 set :drawBold.10:y *tmp274
   830 set :drawBold.10:alignment @bottomLeft
-    * set :drawText.23:x :drawBold.10:x
-    * set :drawText.23:y :drawBold.10:y
-    * set :drawText.23:alignment :drawBold.10:alignment
+  831 set :drawText.23:x 22
+  832 set :drawText.23:y :drawUnit:y
+  833 set :drawText.23:alignment @bottomLeft
   834 print "Builder"
-    * set :drawPrint.23:x :drawText.23:x
-    * set :drawPrint.23:y :drawText.23:y
-    * set :drawPrint.23:alignment :drawText.23:alignment
-    * draw print :drawPrint.23:x :drawPrint.23:y :drawPrint.23:alignment
+  835 set :drawPrint.23:x :drawBold.10:x
+  836 set :drawPrint.23:y :drawBold.10:y
+  837 set :drawPrint.23:alignment :drawBold.10:alignment
+  838 draw print :drawText.23:x :drawText.23:y :drawText.23:alignment
   839 label *label159
   840 label *label158
-    * op add :drawText.24:x :drawBold.10:x 1
-    * set :drawText.24:y :drawBold.10:y
-    * set :drawText.24:alignment :drawBold.10:alignment
+  841 op add :drawText.24:x 22 1
+  842 set :drawText.24:y :drawUnit:y
+  843 set :drawText.24:alignment @bottomLeft
   844 print "Builder"
-    * set :drawPrint.24:x :drawText.24:x
-    * set :drawPrint.24:y :drawText.24:y
-    * set :drawPrint.24:alignment :drawText.24:alignment
-    * draw print :drawPrint.24:x :drawPrint.24:y :drawPrint.24:alignment
+  845 set :drawPrint.24:x 23
+  846 set :drawPrint.24:y :drawBold.10:y
+  847 set :drawPrint.24:alignment :drawBold.10:alignment
+  848 draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
   849 label *label161
   850 label *label160
   851 label *label157
   852 jump *label162 notEqual .transportItem null
-    * op sub *tmp278 :drawUnit:y 15
+  853 op sub *tmp278 *tmp274 15
   854 set :drawUnit.1:item @poly
   855 set :drawUnit.1:items 0
   856 set :drawUnit.1:y *tmp278
   857 set :drawItem.6:col 0
-    * set :drawItem.6:y :drawUnit.1:y
+  858 set :drawItem.6:y *tmp278
   859 set :drawItem.6:columns 1
-    * set :drawItem.6:item :drawUnit.1:item
-    * set :drawItem.6:current :drawUnit.1:items
+  860 set :drawItem.6:item @poly
+  861 set :drawItem.6:current 0
   862 set :drawItem.6:target .transportTarget
-    * op mul *tmp279 :drawItem.6:columns 176
-    * op div *tmp280 *tmp279 2
-    * op sub :drawItem.6:barLength 210 *tmp280
-    * op add :drawItem.6:textEnd 48 :drawItem.6:barLength
-    * op mul *tmp283 :drawItem.6:barLength :drawItem.6:current
+  863 op mul *tmp279 1 176
+  864 op div *tmp280 176 2
+  865 op sub :drawItem.6:barLength 210 88
+  866 op add :drawItem.6:textEnd 48 122
+  867 op mul *tmp283 122 :drawUnit.1:items
   868 op div *tmp284 *tmp283 :drawItem.6:target
-    * op min :drawItem.6:length :drawItem.6:barLength *tmp284
-    * op mul *tmp286 :drawItem.6:col 176
-    * op div *tmp287 *tmp286 2
-    * op add :drawItem.6:iconX 11 *tmp287
-    * op mul *tmp289 :drawItem.6:col 176
-    * op div *tmp290 *tmp289 2
-    * op add :drawItem.6:barX 22 *tmp290
-    * op mul *tmp292 :drawItem.6:col 176
-    * op div *tmp293 *tmp292 2
-    * op add :drawItem.6:textX :drawItem.6:textEnd *tmp293
+  869 op min :drawItem.6:length 122 *tmp284
+  870 op mul *tmp286 0 176
+  871 op div *tmp287 0 2
+  872 op add :drawItem.6:iconX 11 0
+  873 op mul *tmp289 0 176
+  874 op div *tmp290 0 2
+  875 op add :drawItem.6:barX 22 0
+  876 op mul *tmp292 0 176
+  877 op div *tmp293 0 2
+  878 op add :drawItem.6:textX 170 0
   879 draw col %[white]
-    * op add *tmp295 :drawItem.6:y 5
-    * draw image :drawItem.6:iconX *tmp295 :drawItem.6:item 16 0
+  880 op add *tmp295 :drawUnit.1:y 5
+  881 draw image 11 *tmp295 :drawUnit.1:item 16 0
   882 draw color 0 128 0 255
-    * draw rect :drawItem.6:barX :drawItem.6:y :drawItem.6:length 10
+  883 draw rect 22 :drawUnit.1:y :drawItem.6:length 10
   884 draw color 0 255 0 255
-    * draw lineRect :drawItem.6:barX :drawItem.6:y :drawItem.6:barLength 10
-    * op add *tmp296 :drawItem.6:y 5
-    * op add *tmp297 *tmp296 2
-    * set :drawBold.11:x :drawItem.6:textX
+  885 draw lineRect 22 :drawUnit.1:y 122 10
+  886 op add *tmp296 :drawUnit.1:y 5
+  887 op add *tmp297 *tmp295 2
+  888 set :drawBold.11:x 170
   889 set :drawBold.11:y *tmp297
   890 set :drawBold.11:alignment @right
-    * set :drawText.25:x :drawBold.11:x
-    * set :drawText.25:y :drawBold.11:y
-    * set :drawText.25:alignment :drawBold.11:alignment
+  891 set :drawText.25:x :drawItem.6:textX
+  892 set :drawText.25:y *tmp297
+  893 set :drawText.25:alignment @right
   894 print .transportTarget
-    * set :drawPrint.25:x :drawText.25:x
-    * set :drawPrint.25:y :drawText.25:y
-    * set :drawPrint.25:alignment :drawText.25:alignment
-    * draw print :drawPrint.25:x :drawPrint.25:y :drawPrint.25:alignment
+  895 set :drawPrint.25:x :drawBold.11:x
+  896 set :drawPrint.25:y :drawBold.11:y
+  897 set :drawPrint.25:alignment :drawBold.11:alignment
+  898 draw print :drawText.25:x :drawText.25:y :drawText.25:alignment
   899 label *label168
   900 label *label167
-    * op add :drawText.26:x :drawBold.11:x 1
-    * set :drawText.26:y :drawBold.11:y
-    * set :drawText.26:alignment :drawBold.11:alignment
+  901 op add :drawText.26:x :drawItem.6:textX 1
+  902 set :drawText.26:y *tmp297
+  903 set :drawText.26:alignment @right
   904 print .transportTarget
   905 set :drawPrint.26:x :drawText.26:x
-    * set :drawPrint.26:y :drawText.26:y
-    * set :drawPrint.26:alignment :drawText.26:alignment
-    * draw print :drawPrint.26:x :drawPrint.26:y :drawPrint.26:alignment
+  906 set :drawPrint.26:y :drawBold.11:y
+  907 set :drawPrint.26:alignment :drawBold.11:alignment
+  908 draw print :drawText.26:x :drawText.26:y :drawText.26:alignment
   909 label *label170
   910 label *label169
   911 label *label166
-    * op add :drawItem.6:col :drawItem.6:col 1
-    * jump *label171 lessThan :drawItem.6:col :drawItem.6:columns
-    * set :drawItem.6:col 0
-    * op sub :drawItem.6:y :drawItem.6:y 15
+  912 op add :drawItem.6:col 0 1
+  913 jump *label171 lessThan 1 1
+  914 op sub :drawItem.6:y :drawUnit.1:y 15
   915 label *label171
   916 label *label172
   917 label *label165
-    * set :drawUnit.1:y :drawItem.6:y
   918 label *label164
   919 jump *label163 always
   920 label *label162
 
   922 sensor *tmp304 @unit @totalItems
   923 op equal *tmp305 :drawUnit:unitItem .transportItem
   924 op mul *tmp306 *tmp304 *tmp305
-    * op sub *tmp307 :drawUnit:y 15
+  925 op sub *tmp307 *tmp274 15
   926 set :drawUnit.2:item .transportItem
   927 set :drawUnit.2:items *tmp306
   928 set :drawUnit.2:y *tmp307
   929 set :drawItem.7:col 0
-    * set :drawItem.7:y :drawUnit.2:y
+  930 set :drawItem.7:y *tmp307
   931 set :drawItem.7:columns 1
   932 set :drawItem.7:item :drawUnit.2:item
-    * set :drawItem.7:current :drawUnit.2:items
+  933 set :drawItem.7:current *tmp306
   934 set :drawItem.7:target .transportTarget
-    * op mul *tmp308 :drawItem.7:columns 176
-    * op div *tmp309 *tmp308 2
-    * op sub :drawItem.7:barLength 210 *tmp309
-    * op add :drawItem.7:textEnd 48 :drawItem.7:barLength
-    * op mul *tmp312 :drawItem.7:barLength :drawItem.7:current
+  935 op mul *tmp308 1 176
+  936 op div *tmp309 176 2
+  937 op sub :drawItem.7:barLength 210 88
+  938 op add :drawItem.7:textEnd 48 122
+  939 op mul *tmp312 122 :drawUnit.2:items
   940 op div *tmp313 *tmp312 :drawItem.7:target
-    * op min :drawItem.7:length :drawItem.7:barLength *tmp313
-    * op mul *tmp315 :drawItem.7:col 176
-    * op div *tmp316 *tmp315 2
-    * op add :drawItem.7:iconX 11 *tmp316
-    * op mul *tmp318 :drawItem.7:col 176
-    * op div *tmp319 *tmp318 2
-    * op add :drawItem.7:barX 22 *tmp319
-    * op mul *tmp321 :drawItem.7:col 176
-    * op div *tmp322 *tmp321 2
-    * op add :drawItem.7:textX :drawItem.7:textEnd *tmp322
+  941 op min :drawItem.7:length 122 *tmp313
+  942 op mul *tmp315 0 176
+  943 op div *tmp316 0 2
+  944 op add :drawItem.7:iconX 11 0
+  945 op mul *tmp318 0 176
+  946 op div *tmp319 0 2
+  947 op add :drawItem.7:barX 22 0
+  948 op mul *tmp321 0 176
+  949 op div *tmp322 0 2
+  950 op add :drawItem.7:textX 170 0
   951 draw col %[white]
-    * op add *tmp324 :drawItem.7:y 5
-    * draw image :drawItem.7:iconX *tmp324 :drawItem.7:item 16 0
+  952 op add *tmp324 :drawUnit.2:y 5
+  953 draw image 11 *tmp324 :drawUnit.2:item 16 0
   954 draw color 0 128 0 255
-    * draw rect :drawItem.7:barX :drawItem.7:y :drawItem.7:length 10
+  955 draw rect 22 :drawUnit.2:y :drawItem.7:length 10
   956 draw color 0 255 0 255
-    * draw lineRect :drawItem.7:barX :drawItem.7:y :drawItem.7:barLength 10
-    * op add *tmp325 :drawItem.7:y 5
-    * op add *tmp326 *tmp325 2
-    * set :drawBold.12:x :drawItem.7:textX
+  957 draw lineRect 22 :drawUnit.2:y 122 10
+  958 op add *tmp325 :drawUnit.2:y 5
+  959 op add *tmp326 *tmp324 2
+  960 set :drawBold.12:x 170
   961 set :drawBold.12:y *tmp326
   962 set :drawBold.12:alignment @right
-    * set :drawText.27:x :drawBold.12:x
-    * set :drawText.27:y :drawBold.12:y
-    * set :drawText.27:alignment :drawBold.12:alignment
+  963 set :drawText.27:x :drawItem.7:textX
+  964 set :drawText.27:y *tmp326
+  965 set :drawText.27:alignment @right
   966 print .transportTarget
-    * set :drawPrint.27:x :drawText.27:x
-    * set :drawPrint.27:y :drawText.27:y
-    * set :drawPrint.27:alignment :drawText.27:alignment
-    * draw print :drawPrint.27:x :drawPrint.27:y :drawPrint.27:alignment
+  967 set :drawPrint.27:x :drawBold.12:x
+  968 set :drawPrint.27:y :drawBold.12:y
+  969 set :drawPrint.27:alignment :drawBold.12:alignment
+  970 draw print :drawText.27:x :drawText.27:y :drawText.27:alignment
   971 label *label177
   972 label *label176
-    * op add :drawText.28:x :drawBold.12:x 1
-    * set :drawText.28:y :drawBold.12:y
-    * set :drawText.28:alignment :drawBold.12:alignment
+  973 op add :drawText.28:x :drawItem.7:textX 1
+  974 set :drawText.28:y *tmp326
+  975 set :drawText.28:alignment @right
   976 print .transportTarget
   977 set :drawPrint.28:x :drawText.28:x
-    * set :drawPrint.28:y :drawText.28:y
-    * set :drawPrint.28:alignment :drawText.28:alignment
-    * draw print :drawPrint.28:x :drawPrint.28:y :drawPrint.28:alignment
+  978 set :drawPrint.28:y :drawBold.12:y
+  979 set :drawPrint.28:alignment :drawBold.12:alignment
+  980 draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
   981 label *label179
   982 label *label178
   983 label *label175
-    * op add :drawItem.7:col :drawItem.7:col 1
-    * jump *label180 lessThan :drawItem.7:col :drawItem.7:columns
-    * set :drawItem.7:col 0
-    * op sub :drawItem.7:y :drawItem.7:y 15
+  984 op add :drawItem.7:col 0 1
+  985 jump *label180 lessThan 1 1
+  986 op sub :drawItem.7:y :drawUnit.2:y 15
   987 label *label180
   988 label *label181
   989 label *label174
-    * set :drawUnit.2:y :drawItem.7:y
   990 label *label173
   991 label *label163
   992 label *label154
 
   995 set :drawUnitCount:type @poly
   996 set :drawUnitCount:count .displayPolys
   997 jump *label184 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp334 :drawUnits:x 20
-    * draw image *tmp334 127 :drawUnitCount:type 12 0
-    * set :drawText.29:x :drawUnits:x
+  998 op sub *tmp334 170 20
+  999 draw image 150 127 @poly 12 0
+ 1000 set :drawText.29:x 170
  1001 set :drawText.29:y 129
  1002 set :drawText.29:alignment @right
  1003 print "x"
  1004 print :drawUnitCount:count
-    * set :drawPrint.29:x :drawText.29:x
-    * set :drawPrint.29:y :drawText.29:y
-    * set :drawPrint.29:alignment :drawText.29:alignment
-    * draw print :drawPrint.29:x :drawPrint.29:y :drawPrint.29:alignment
+ 1005 set :drawPrint.29:x :drawUnits:x
+ 1006 set :drawPrint.29:y 129
+ 1007 set :drawPrint.29:alignment @right
+ 1008 draw print :drawText.29:x :drawText.29:y :drawText.29:alignment
  1009 label *label187
  1010 label *label186
-    * op sub :drawUnits:x :drawUnits:x 30
+ 1011 op sub :drawUnits:x 170 30
  1012 label *label184
  1013 label *label185
  1014 label *label183
 
  1016 set :drawUnitCount.1:count .displayMonos
  1017 jump *label189 lessThanEq :drawUnitCount.1:count 0
  1018 op sub *tmp337 :drawUnits:x 20
-    * draw image *tmp337 127 :drawUnitCount.1:type 12 0
+ 1019 draw image *tmp337 127 @mono 12 0
  1020 set :drawText.30:x :drawUnits:x
  1021 set :drawText.30:y 129
  1022 set :drawText.30:alignment @right
  1023 print "x"
  1024 print :drawUnitCount.1:count
-    * set :drawPrint.30:x :drawText.30:x
-    * set :drawPrint.30:y :drawText.30:y
-    * set :drawPrint.30:alignment :drawText.30:alignment
-    * draw print :drawPrint.30:x :drawPrint.30:y :drawPrint.30:alignment
+ 1025 set :drawPrint.30:x :drawUnits:x
+ 1026 set :drawPrint.30:y 129
+ 1027 set :drawPrint.30:alignment @right
+ 1028 draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
  1029 label *label192
  1030 label *label191
  1031 op sub :drawUnits:x :drawUnits:x 30
 
  1036 set :drawUnitCount.2:count .displayFlares
  1037 jump *label194 lessThanEq :drawUnitCount.2:count 0
  1038 op sub *tmp340 :drawUnits:x 20
-    * draw image *tmp340 127 :drawUnitCount.2:type 12 0
+ 1039 draw image *tmp340 127 @flare 12 0
  1040 set :drawText.31:x :drawUnits:x
  1041 set :drawText.31:y 129
  1042 set :drawText.31:alignment @right
  1043 print "x"
  1044 print :drawUnitCount.2:count
-    * set :drawPrint.31:x :drawText.31:x
-    * set :drawPrint.31:y :drawText.31:y
-    * set :drawPrint.31:alignment :drawText.31:alignment
-    * draw print :drawPrint.31:x :drawPrint.31:y :drawPrint.31:alignment
+ 1045 set :drawPrint.31:x :drawUnits:x
+ 1046 set :drawPrint.31:y 129
+ 1047 set :drawPrint.31:alignment @right
+ 1048 draw print :drawText.31:x :drawText.31:y :drawText.31:alignment
  1049 label *label197
  1050 label *label196
-    * op sub :drawUnits:x :drawUnits:x 30
  1051 label *label194
  1052 label *label195
  1053 label *label193
 
  1065 set :drawText.32:y 172
  1066 set :drawText.32:alignment @topRight
  1067 print "Base map"
-    * set :drawPrint.32:x :drawText.32:x
-    * set :drawPrint.32:y :drawText.32:y
-    * set :drawPrint.32:alignment :drawText.32:alignment
-    * draw print :drawPrint.32:x :drawPrint.32:y :drawPrint.32:alignment
+ 1068 set :drawPrint.32:x 172
+ 1069 set :drawPrint.32:y 172
+ 1070 set :drawPrint.32:alignment @topRight
+ 1071 draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
  1072 label *label202
  1073 label *label201
  1074 draw col %[white]
 
  1267 set :displayLog:y 163
  1268 read :displayLog:logPosition bank1 511
  1269 op sub :displayLog:records 511 :displayLog:logPosition
-    * op sub *tmp354 :displayLog:records 1
+ 1270 op sub *tmp354 510 :displayLog:logPosition
  1271 op idiv *tmp355 *tmp354 32
  1272 op add *tmp356 *tmp355 1
  1273 op max :displayLog:pages 1 *tmp356
 
  1277 op sub *tmp361 :displayLog:start 32
  1278 op max :displayLog:stop :displayLog:logPosition *tmp361
  1279 draw col %[lightgray]
-    * op add *tmp363 :displayLog:page 1
+ 1280 op sub *tmp363 .page 1
  1281 print *tmp363
  1282 print "/"
  1283 set :drawText.33:x 172
  1284 set :drawText.33:y 4
  1285 set :drawText.33:alignment @bottomRight
  1286 print :displayLog:pages
-    * set :drawPrint.33:x :drawText.33:x
-    * set :drawPrint.33:y :drawText.33:y
-    * set :drawPrint.33:alignment :drawText.33:alignment
-    * draw print :drawPrint.33:x :drawPrint.33:y :drawPrint.33:alignment
+ 1287 set :drawPrint.33:x 172
+ 1288 set :drawPrint.33:y 4
+ 1289 set :drawPrint.33:alignment @bottomRight
+ 1290 draw print :drawText.33:x :drawText.33:y :drawText.33:alignment
  1291 label *label255
  1292 label *label254
  1293 draw col %[white]
  1294 set *tmp364 :displayLog:stop
  1295 op sub :displayLog:position :displayLog:start 1
  1296 label *label256
-    * jump *label258 lessThan :displayLog:position *tmp364
+ 1297 jump *label258 lessThan :displayLog:position :displayLog:stop
  1298 read :displayLog:record bank1 :displayLog:position
  1299 set :displayRecord:record :displayLog:record
-    * op mod :displayRecord:id :displayRecord:record 1000
+ 1300 op mod :displayRecord:id :displayLog:record 1000
  1301 jump *label260 lessThanEq :displayRecord:id @blockCount
  1302 op sub *tmp370 :displayRecord:id @blockCount
  1303 lookup unit *tmp369 *tmp370
 
  1306 lookup block *tmp369 :displayRecord:id
  1307 label *label261
  1308 set :displayRecord:icon *tmp369
-    * op div *tmp373 :displayRecord:record 1000
+ 1309 op div *tmp373 :displayLog:record 1000
  1310 op idiv :displayRecord:t *tmp373 120
  1311 op idiv :displayRecord:m :displayRecord:t 60
  1312 op mod :displayRecord:s :displayRecord:t 60
 
  1319 print :displayRecord:m
  1320 print ":"
  1321 print *tmp379
-    * set :displayRecordAt:image :displayRecord:icon
+ 1322 set :displayRecordAt:image *tmp369
  1323 set :displayRecordAt:text :displayRecord:s
-    * draw image :displayLog:x :displayLog:y :displayRecordAt:image 14 0
+ 1324 draw image :displayLog:x :displayLog:y :displayRecord:icon 14 0
  1325 op add *tmp380 :displayLog:x 56
-    * op sub *tmp381 *tmp380 12
+ 1326 op add *tmp381 :displayLog:x 44
  1327 op add *tmp382 :displayLog:y 2
  1328 set :drawText.34:x *tmp381
  1329 set :drawText.34:y *tmp382
  1330 set :drawText.34:alignment @right
-    * print :displayRecordAt:text
-    * set :drawPrint.34:x :drawText.34:x
-    * set :drawPrint.34:y :drawText.34:y
-    * set :drawPrint.34:alignment :drawText.34:alignment
-    * draw print :drawPrint.34:x :drawPrint.34:y :drawPrint.34:alignment
+ 1331 print :displayRecord:s
+ 1332 set :drawPrint.34:x *tmp381
+ 1333 set :drawPrint.34:y *tmp382
+ 1334 set :drawPrint.34:alignment @right
+ 1335 draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
  1336 label *label266
  1337 label *label265
  1338 op sub :displayLog:y :displayLog:y 15
 
  1402 label *label1
  1403 set :unpackCfg:cfg :drawBlock:cfg
  1404 set :unpackCfg:index 0
-    * set *tmp429 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp430 :unpackCfg:cfg *tmp429
+ 1405 set *tmp429 0
+ 1406 op add :unpackCfg:index 0 1
+ 1407 read *tmp430 :drawBlock:cfg *tmp429
  1408 op sub *tmp431 *tmp430 35
  1409 lookup block :unpackCfg:type *tmp431
-    * set *tmp433 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp434 :unpackCfg:cfg *tmp433
+ 1410 set *tmp433 1
+ 1411 op add :unpackCfg:index 1 1
+ 1412 read *tmp434 :drawBlock:cfg *tmp433
  1413 op sub *tmp435 *tmp434 35
-    * op sub :unpackCfg:x *tmp435 7
-    * set *tmp437 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp438 :unpackCfg:cfg *tmp437
+ 1414 op sub :unpackCfg:x *tmp434 42
+ 1415 set *tmp437 2
+ 1416 op add :unpackCfg:index 2 1
+ 1417 read *tmp438 :drawBlock:cfg *tmp437
  1418 op sub *tmp439 *tmp438 35
-    * op sub :unpackCfg:y *tmp439 7
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * set *tmp462 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp463 :unpackCfg:cfg *tmp462
+ 1419 op sub :unpackCfg:y *tmp438 42
+ 1420 op add :unpackCfg:index 3 1
+ 1421 op add :unpackCfg:index 4 1
+ 1422 op add :unpackCfg:index 5 1
+ 1423 op add :unpackCfg:index 6 1
+ 1424 op add :unpackCfg:index 7 1
+ 1425 op add :unpackCfg:index 8 1
+ 1426 op add :unpackCfg:index 9 1
+ 1427 set *tmp462 10
+ 1428 op add :unpackCfg:index 10 1
+ 1429 read *tmp463 :drawBlock:cfg *tmp462
  1430 op sub :unpackCfg:rotation *tmp463 35
-    * set *tmp465 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp466 :unpackCfg:cfg *tmp465
+ 1431 set *tmp465 11
+ 1432 op add :unpackCfg:index 11 1
+ 1433 read *tmp466 :drawBlock:cfg *tmp465
  1434 op sub :unpackCfg:size *tmp466 35
-    * set *tmp468 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
-    * read *tmp469 :unpackCfg:cfg *tmp468
+ 1435 set *tmp468 12
+ 1436 op add :unpackCfg:index 12 1
+ 1437 read *tmp469 :drawBlock:cfg *tmp468
  1438 op sub :unpackCfg:ind *tmp469 35
  1439 label *label293
  1440 set :drawBlock:type :unpackCfg:type
 
  1443 set :drawBlock:rotation :unpackCfg:rotation
  1444 set :drawBlock:size :unpackCfg:size
  1445 set :drawBlock:index :unpackCfg:ind
-    * op or *tmp471 :drawBlock:x :drawBlock:y
+ 1446 op or *tmp471 :unpackCfg:x :unpackCfg:y
  1447 jump *label294 equal *tmp471 false
-    * op shl *tmp473 1 :drawBlock:index
+ 1448 op shl *tmp473 1 :unpackCfg:ind
  1449 op and *tmp474 .blocksBuilt *tmp473
  1450 jump *label296 equal *tmp474 false
  1451 draw col %[white]
 
  1453 label *label296
  1454 draw color 128 255 128 128
  1455 label *label297
-    * op and *tmp476 :drawBlock:size 1
+ 1456 op and *tmp476 :unpackCfg:size 1
  1457 op sub :drawBlock:offset 1 *tmp476
-    * op mul *tmp478 2 :drawBlock:x
+ 1458 op mul *tmp478 2 :unpackCfg:x
  1459 op add *tmp479 *tmp478 :drawBlock:offset
-    * op mul *tmp480 2 :drawBlock:y
+ 1460 op mul *tmp480 2 :unpackCfg:y
  1461 op add *tmp481 *tmp480 :drawBlock:offset
-    * op mul *tmp482 2 :drawBlock:size
-    * op mul *tmp483 90 :drawBlock:rotation
-    * draw image *tmp479 *tmp481 :drawBlock:type *tmp482 *tmp483
+ 1462 op mul *tmp482 2 :unpackCfg:size
+ 1463 op mul *tmp483 90 :unpackCfg:rotation
+ 1464 draw image *tmp479 *tmp481 :unpackCfg:type *tmp482 *tmp483
  1465 label *label294
  1466 label *label295
  1467 label *label292

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-219 instructions):
 
    42 op div *tmp19 .animation 30
    43 op min *tmp20 *tmp19 1
    44 op max :animate:ratio 0 *tmp20
-    * set :lerp:from 40
-    * set :lerp:to 88
-    * set :lerp:ratio :animate:ratio
    45 op sub *tmp23 1 :animate:ratio
    46 op mul *tmp24 *tmp23 40
    47 op mul *tmp25 :animate:ratio 88
    48 op add *tmp22 *tmp24 *tmp25
    49 label *label21
-    * set :animate:x *tmp22
-    * set :lerp.1:from 137
-    * set :lerp.1:to 88
-    * set :lerp.1:ratio :animate:ratio
-    * op sub *tmp28 1 :animate:ratio
    50 op mul *tmp29 *tmp23 137
    51 op mul *tmp30 :animate:ratio 88
-    * op add *tmp27 *tmp29 *tmp30
+   52 op add *tmp27 *tmp29 *tmp25
    53 label *label22
-    * set :animate:y *tmp27
-    * set :lerp.2:from 32
-    * set :lerp.2:to 168
-    * set :lerp.2:ratio :animate:ratio
-    * op sub *tmp33 1 :animate:ratio
    54 op mul *tmp34 *tmp23 32
    55 op mul *tmp35 :animate:ratio 168
    56 op add *tmp32 *tmp34 *tmp35
    57 label *label23
-    * set :animate:size *tmp32
    58 draw image *tmp22 *tmp27 @mega *tmp32 0
    59 drawflush display1
    60 op add .animation .animation 1
 
    71 set :drawText:y 161
    72 set :drawText:alignment @bottom
    73 print "Goal"
-    * set :drawPrint:x :drawBold:x
-    * set :drawPrint:y :drawBold:y
-    * set :drawPrint:alignment :drawBold:alignment
-    * draw print :drawText:x :drawText:y :drawText:alignment
+   74 set :drawPrint:x 40
+   75 set :drawPrint:y 161
+   76 set :drawPrint:alignment @bottom
+   77 draw print 40 161 @bottom
    78 label *label28
    79 label *label27
    80 op add :drawText.1:x 40 1
    81 set :drawText.1:y 161
    82 set :drawText.1:alignment @bottom
    83 print "Goal"
-    * set :drawPrint.1:x 41
-    * set :drawPrint.1:y :drawBold:y
-    * set :drawPrint.1:alignment :drawBold:alignment
-    * draw print :drawText.1:x :drawText.1:y :drawText.1:alignment
+   84 set :drawPrint.1:y 161
+   85 set :drawPrint.1:alignment @bottom
+   86 draw print 41 161 @bottom
    87 label *label30
    88 label *label29
    89 label *label26
 
   138 set :drawText.2:y 172
   139 set :drawText.2:alignment @topRight
   140 print ")"
-    * set :drawPrint.2:x 170
-    * set :drawPrint.2:y 172
-    * set :drawPrint.2:alignment @topRight
-    * draw print :drawText.2:x :drawText.2:y :drawText.2:alignment
+  141 draw print 170 172 @topRight
   142 label *label40
   143 label *label39
   144 jump *label41 equal .titaniumDrill false
 
   152 set :drawText.3:alignment @topRight
   153 print "x"
   154 print :drawHeader:count
-    * set :drawPrint.3:x :drawHeader:x
-    * set :drawPrint.3:y 155
-    * set :drawPrint.3:alignment @topRight
-    * draw print :drawText.3:x :drawText.3:y :drawText.3:alignment
+  155 set :drawPrint.3:x 170
+  156 draw print 170 155 @topRight
   157 label *label44
   158 label *label43
-    * op sub *tmp66 170 20
   159 op mul *tmp67 7 :drawHeader:len
   160 op sub *tmp68 150 *tmp67
   161 draw image *tmp68 146 @titanium 12 0
 
   171 set :drawText.4:alignment @topRight
   172 print "x"
   173 print :drawHeader:count
-    * set :drawPrint.4:x :drawHeader:x.1
-    * set :drawPrint.4:y 155
-    * set :drawPrint.4:alignment @topRight
-    * draw print :drawText.4:x :drawText.4:y :drawText.4:alignment
+  174 set :drawPrint.4:x 120
+  175 draw print 120 155 @topRight
   176 label *label48
   177 label *label47
-    * op sub *tmp73 120 20
   178 op mul *tmp74 7 :drawHeader:len.1
   179 op sub *tmp75 100 *tmp74
   180 draw image *tmp75 146 @thorium 12 0
 
   247 set :drawText.5:y 105
   248 set :drawText.5:alignment @bottomLeft
   249 print "Unit factories"
-    * set :drawPrint.5:x :drawBold.1:x
-    * set :drawPrint.5:y :drawBold.1:y
-    * set :drawPrint.5:alignment :drawBold.1:alignment
-    * draw print :drawText.5:x :drawText.5:y :drawText.5:alignment
+  250 set :drawPrint.5:x 22
+  251 set :drawPrint.5:y 105
+  252 set :drawPrint.5:alignment @bottomLeft
+  253 draw print 22 105 @bottomLeft
   254 label *label62
   255 label *label61
   256 op add :drawText.6:x 22 1
   257 set :drawText.6:y 105
   258 set :drawText.6:alignment @bottomLeft
   259 print "Unit factories"
-    * set :drawPrint.6:x 23
-    * set :drawPrint.6:y :drawBold.1:y
-    * set :drawPrint.6:alignment :drawBold.1:alignment
-    * draw print :drawText.6:x :drawText.6:y :drawText.6:alignment
+  260 set :drawPrint.6:y 105
+  261 set :drawPrint.6:alignment @bottomLeft
+  262 draw print 23 105 @bottomLeft
   263 label *label64
   264 label *label63
   265 label *label60
   266 jump *label65 lessThanEq .factoryProgress 0
-    * set :drawItem:col 0
-    * set :drawItem:y 90
-    * set :drawItem:columns 1
-    * set :drawItem:item :drawMaterials:unit1
-    * set :drawItem:current .factoryProgress
-    * set :drawItem:target 1
-    * op mul *tmp113 1 176
-    * op div *tmp114 176 2
-    * op sub :drawItem:barLength 210 88
-    * op add :drawItem:textEnd 48 122
   267 op mul *tmp117 122 .factoryProgress
-    * op div *tmp118 *tmp117 1
+  268 op mul *tmp118 .factoryProgress 122
   269 op min :drawItem:length 122 *tmp118
-    * op mul *tmp120 0 176
-    * op div *tmp121 0 2
-    * op add :drawItem:iconX 11 0
-    * op mul *tmp123 0 176
-    * op div *tmp124 0 2
-    * op add :drawItem:barX 22 0
-    * op mul *tmp126 0 176
-    * op div *tmp127 0 2
   270 op add :drawItem:textX 170 0
   271 draw col %[white]
-    * op add *tmp129 90 5
   272 draw image 11 95 :drawMaterials:unit1 16 0
   273 draw color 0 128 0 255
   274 draw rect 22 90 :drawItem:length 10
   275 draw color 0 255 0 255
   276 draw lineRect 22 90 122 10
-    * op add *tmp130 90 5
   277 op add *tmp131 95 2
   278 set :drawBold.2:x 170
   279 set :drawBold.2:y 97
   280 set :drawBold.2:alignment @right
-    * set :drawText.7:x :drawItem:textX
-    * set :drawText.7:y *tmp131
+  281 set :drawText.7:x 170
+  282 set :drawText.7:y 97
   283 set :drawText.7:alignment @right
   284 print :drawMaterials:unitCount1
   285 print "/"
   286 print :drawMaterials:unitTotal1
-    * set :drawPrint.7:x :drawBold.2:x
-    * set :drawPrint.7:y :drawBold.2:y
-    * set :drawPrint.7:alignment :drawBold.2:alignment
-    * draw print :drawText.7:x :drawText.7:y :drawText.7:alignment
+  287 set :drawPrint.7:x 170
+  288 set :drawPrint.7:y 97
+  289 set :drawPrint.7:alignment @right
+  290 draw print :drawItem:textX *tmp131 @right
   291 label *label70
   292 label *label69
-    * op add :drawText.8:x :drawItem:textX 1
-    * set :drawText.8:y *tmp131
+  293 op add :drawText.8:x 170 1
+  294 set :drawText.8:y 97
   295 set :drawText.8:alignment @right
   296 print :drawMaterials:unitCount1
   297 print "/"
   298 print :drawMaterials:unitTotal1
-    * set :drawPrint.8:x :drawText.8:x
-    * set :drawPrint.8:y :drawBold.2:y
-    * set :drawPrint.8:alignment :drawBold.2:alignment
-    * draw print :drawText.8:x :drawText.8:y :drawText.8:alignment
+  299 set :drawPrint.8:x 171
+  300 set :drawPrint.8:y 97
+  301 set :drawPrint.8:alignment @right
+  302 draw print 171 *tmp131 @right
   303 label *label72
   304 label *label71
   305 label *label68
-    * op add :drawItem:col 0 1
   306 jump *label73 lessThan 1 1
-    * op sub :drawItem:y 90 15
   307 label *label73
   308 label *label74
   309 label *label67
   310 jump *label75 equal :drawMaterials:unit2 null
-    * set :drawItem.1:col 0
-    * set :drawItem.1:y 75
-    * set :drawItem.1:columns 1
-    * set :drawItem.1:item :drawMaterials:unit2
-    * set :drawItem.1:current .reconstructorProgress
-    * set :drawItem.1:target 1
-    * op mul *tmp137 1 176
-    * op div *tmp138 176 2
-    * op sub :drawItem.1:barLength 210 88
-    * op add :drawItem.1:textEnd 48 122
   311 op mul *tmp141 122 .reconstructorProgress
-    * op div *tmp142 *tmp141 1
+  312 op mul *tmp142 .reconstructorProgress 122
   313 op min :drawItem.1:length 122 *tmp142
-    * op mul *tmp144 0 176
-    * op div *tmp145 0 2
-    * op add :drawItem.1:iconX 11 0
-    * op mul *tmp147 0 176
-    * op div *tmp148 0 2
-    * op add :drawItem.1:barX 22 0
-    * op mul *tmp150 0 176
-    * op div *tmp151 0 2
   314 op add :drawItem.1:textX 170 0
   315 draw col %[white]
-    * op add *tmp153 75 5
   316 draw image 11 80 :drawMaterials:unit2 16 0
   317 draw color 0 128 0 255
   318 draw rect 22 75 :drawItem.1:length 10
   319 draw color 0 255 0 255
   320 draw lineRect 22 75 122 10
-    * op add *tmp154 75 5
   321 op add *tmp155 80 2
   322 set :drawBold.3:x 170
   323 set :drawBold.3:y 82
   324 set :drawBold.3:alignment @right
-    * set :drawText.9:x :drawItem.1:textX
-    * set :drawText.9:y *tmp155
+  325 set :drawText.9:x 170
+  326 set :drawText.9:y 82
   327 set :drawText.9:alignment @right
   328 print :drawMaterials:unitCount2
   329 print "/"
   330 print :drawMaterials:unitTotal2
-    * set :drawPrint.9:x :drawBold.3:x
-    * set :drawPrint.9:y :drawBold.3:y
-    * set :drawPrint.9:alignment :drawBold.3:alignment
-    * draw print :drawText.9:x :drawText.9:y :drawText.9:alignment
+  331 set :drawPrint.9:x 170
+  332 set :drawPrint.9:y 82
+  333 set :drawPrint.9:alignment @right
+  334 draw print :drawItem.1:textX *tmp155 @right
   335 label *label80
   336 label *label79
-    * op add :drawText.10:x :drawItem.1:textX 1
-    * set :drawText.10:y *tmp155
+  337 op add :drawText.10:x 170 1
+  338 set :drawText.10:y 82
   339 set :drawText.10:alignment @right
   340 print :drawMaterials:unitCount2
   341 print "/"
   342 print :drawMaterials:unitTotal2
-    * set :drawPrint.10:x :drawText.10:x
-    * set :drawPrint.10:y :drawBold.3:y
-    * set :drawPrint.10:alignment :drawBold.3:alignment
-    * draw print :drawText.10:x :drawText.10:y :drawText.10:alignment
+  343 set :drawPrint.10:x 171
+  344 set :drawPrint.10:y 82
+  345 set :drawPrint.10:alignment @right
+  346 draw print 171 *tmp155 @right
   347 label *label82
   348 label *label81
   349 label *label78
-    * op add :drawItem.1:col 0 1
   350 jump *label83 lessThan 1 1
-    * op sub :drawItem.1:y 75 15
   351 label *label83
   352 label *label84
   353 label *label77
   354 jump *label85 equal :drawMaterials:unit3 null
-    * set :drawItem.2:col 0
-    * set :drawItem.2:y 60
-    * set :drawItem.2:columns 1
-    * set :drawItem.2:item :drawMaterials:unit3
-    * set :drawItem.2:current :drawMaterials:multiReconstructorProgress
-    * set :drawItem.2:target 1
-    * op mul *tmp161 1 176
-    * op div *tmp162 176 2
-    * op sub :drawItem.2:barLength 210 88
-    * op add :drawItem.2:textEnd 48 122
   355 op mul *tmp165 122 :drawMaterials:multiReconstructorProgress
-    * op div *tmp166 *tmp165 1
+  356 op mul *tmp166 :drawMaterials:multiReconstructorProgress 122
   357 op min :drawItem.2:length 122 *tmp166
-    * op mul *tmp168 0 176
-    * op div *tmp169 0 2
-    * op add :drawItem.2:iconX 11 0
-    * op mul *tmp171 0 176
-    * op div *tmp172 0 2
-    * op add :drawItem.2:barX 22 0
-    * op mul *tmp174 0 176
-    * op div *tmp175 0 2
   358 op add :drawItem.2:textX 170 0
   359 draw col %[white]
-    * op add *tmp177 60 5
   360 draw image 11 65 :drawMaterials:unit3 16 0
   361 draw color 0 128 0 255
   362 draw rect 22 60 :drawItem.2:length 10
   363 draw color 0 255 0 255
   364 draw lineRect 22 60 122 10
-    * op add *tmp178 60 5
   365 op add *tmp179 65 2
   366 set :drawBold.4:x 170
   367 set :drawBold.4:y 67
   368 set :drawBold.4:alignment @right
-    * set :drawText.11:x :drawItem.2:textX
-    * set :drawText.11:y *tmp179
+  369 set :drawText.11:x 170
+  370 set :drawText.11:y 67
   371 set :drawText.11:alignment @right
   372 print .displayMegas
   373 print "/"
   374 print .megaTarget
-    * set :drawPrint.11:x :drawBold.4:x
-    * set :drawPrint.11:y :drawBold.4:y
-    * set :drawPrint.11:alignment :drawBold.4:alignment
-    * draw print :drawText.11:x :drawText.11:y :drawText.11:alignment
+  375 set :drawPrint.11:x 170
+  376 set :drawPrint.11:y 67
+  377 set :drawPrint.11:alignment @right
+  378 draw print :drawItem.2:textX *tmp179 @right
   379 label *label90
   380 label *label89
-    * op add :drawText.12:x :drawItem.2:textX 1
-    * set :drawText.12:y *tmp179
+  381 op add :drawText.12:x 170 1
+  382 set :drawText.12:y 67
   383 set :drawText.12:alignment @right
   384 print .displayMegas
   385 print "/"
   386 print .megaTarget
-    * set :drawPrint.12:x :drawText.12:x
-    * set :drawPrint.12:y :drawBold.4:y
-    * set :drawPrint.12:alignment :drawBold.4:alignment
-    * draw print :drawText.12:x :drawText.12:y :drawText.12:alignment
+  387 set :drawPrint.12:x 171
+  388 set :drawPrint.12:y 67
+  389 set :drawPrint.12:alignment @right
+  390 draw print 171 *tmp179 @right
   391 label *label92
   392 label *label91
   393 label *label88
-    * op add :drawItem.2:col 0 1
   394 jump *label93 lessThan 1 1
-    * op sub :drawItem.2:y 60 15
   395 label *label93
   396 label *label94
   397 label *label87
 
   414 sensor *tmp188 .airFactory :drawMaterials:item
   415 set :drawItem.3:col :drawMaterials:col
   416 set :drawItem.3:y :drawMaterials:y
-    * set :drawItem.3:columns 1
-    * set :drawItem.3:item :drawMaterials:item
-    * set :drawItem.3:current *tmp188
-    * set :drawItem.3:target :drawMaterials:target
-    * op mul *tmp189 1 176
-    * op div *tmp190 176 2
-    * op sub :drawItem.3:barLength 210 88
-    * op add :drawItem.3:textEnd 48 122
   417 op mul *tmp193 122 *tmp188
   418 op div *tmp194 *tmp193 :drawMaterials:target
   419 op min :drawItem.3:length 122 *tmp194
   420 op mul *tmp196 :drawMaterials:col 176
-    * op mul *tmp197 :drawItem.3:col 88
+  421 op mul *tmp197 :drawMaterials:col 88
   422 op add :drawItem.3:iconX 11 *tmp197
-    * op mul *tmp199 :drawMaterials:col 176
-    * op div *tmp200 *tmp196 2
+  423 op mul *tmp200 :drawMaterials:col 88
   424 op add :drawItem.3:barX 22 *tmp197
-    * op mul *tmp202 :drawMaterials:col 176
-    * op div *tmp203 *tmp196 2
+  425 op mul *tmp203 :drawMaterials:col 88
   426 op add :drawItem.3:textX 170 *tmp197
   427 draw col %[white]
   428 op add *tmp205 :drawMaterials:y 5
 
   431 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
   432 draw color 0 255 0 255
   433 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
-    * op add *tmp206 :drawMaterials:y 5
-    * op add *tmp207 *tmp205 2
+  434 op add *tmp207 :drawMaterials:y 7
   435 set :drawBold.5:x :drawItem.3:textX
   436 set :drawBold.5:y *tmp207
   437 set :drawBold.5:alignment @right
 
   439 set :drawText.13:y *tmp207
   440 set :drawText.13:alignment @right
   441 print :drawMaterials:target
-    * set :drawPrint.13:x :drawBold.5:x
-    * set :drawPrint.13:y :drawBold.5:y
-    * set :drawPrint.13:alignment :drawBold.5:alignment
-    * draw print :drawText.13:x :drawText.13:y :drawText.13:alignment
+  442 set :drawPrint.13:x :drawItem.3:textX
+  443 set :drawPrint.13:y *tmp207
+  444 set :drawPrint.13:alignment @right
+  445 draw print :drawItem.3:textX *tmp207 @right
   446 label *label105
   447 label *label104
-    * op add :drawText.14:x :drawItem.3:textX 1
+  448 op add :drawText.14:x *tmp197 171
   449 set :drawText.14:y *tmp207
   450 set :drawText.14:alignment @right
   451 print :drawMaterials:target
-    * set :drawPrint.14:x :drawText.14:x
-    * set :drawPrint.14:y :drawBold.5:y
-    * set :drawPrint.14:alignment :drawBold.5:alignment
-    * draw print :drawText.14:x :drawText.14:y :drawText.14:alignment
+  452 set :drawPrint.14:y *tmp207
+  453 set :drawPrint.14:alignment @right
+  454 draw print :drawText.14:x *tmp207 @right
   455 label *label107
   456 label *label106
   457 label *label103
 
   485 set :drawText.15:alignment @bottomLeft
   486 read *tmp215 processor1 ".mapAction"
   487 print *tmp215
-    * set :drawPrint.15:x :drawBold.6:x
-    * set :drawPrint.15:y :drawBold.6:y
-    * set :drawPrint.15:alignment :drawBold.6:alignment
-    * draw print :drawText.15:x :drawText.15:y :drawText.15:alignment
+  488 set :drawPrint.15:x 22
+  489 set :drawPrint.15:y 105
+  490 set :drawPrint.15:alignment @bottomLeft
+  491 draw print 22 105 @bottomLeft
   492 label *label114
   493 label *label113
   494 op add :drawText.16:x 22 1
 
   496 set :drawText.16:alignment @bottomLeft
   497 read *tmp217 processor1 ".mapAction"
   498 print *tmp217
-    * set :drawPrint.16:x 23
-    * set :drawPrint.16:y :drawBold.6:y
-    * set :drawPrint.16:alignment :drawBold.6:alignment
-    * draw print :drawText.16:x :drawText.16:y :drawText.16:alignment
+  499 set :drawPrint.16:y 105
+  500 set :drawPrint.16:alignment @bottomLeft
+  501 draw print 23 105 @bottomLeft
   502 label *label116
   503 label *label115
   504 label *label112
-    * set :drawItem.4:col 0
-    * set :drawItem.4:y 90
-    * set :drawItem.4:columns 1
-    * set :drawItem.4:item @titanium
   505 read :drawItem.4:current processor1 ".mapProgress"
   506 read :drawItem.4:target processor1 ".mapTotal"
-    * op mul *tmp218 1 176
-    * op div *tmp219 176 2
-    * op sub :drawItem.4:barLength 210 88
-    * op add :drawItem.4:textEnd 48 122
   507 op mul *tmp222 122 :drawItem.4:current
   508 op div *tmp223 *tmp222 :drawItem.4:target
   509 op min :drawItem.4:length 122 *tmp223
-    * op mul *tmp225 0 176
-    * op div *tmp226 0 2
-    * op add :drawItem.4:iconX 11 0
-    * op mul *tmp228 0 176
-    * op div *tmp229 0 2
-    * op add :drawItem.4:barX 22 0
-    * op mul *tmp231 0 176
-    * op div *tmp232 0 2
   510 op add :drawItem.4:textX 170 0
   511 draw col %[white]
-    * op add *tmp234 90 5
   512 draw image 11 95 @titanium 16 0
   513 draw color 0 128 0 255
   514 draw rect 22 90 :drawItem.4:length 10
   515 draw color 0 255 0 255
   516 draw lineRect 22 90 122 10
-    * op add *tmp235 90 5
   517 op add *tmp236 95 2
   518 set :drawBold.7:x 170
   519 set :drawBold.7:y 97
   520 set :drawBold.7:alignment @right
-    * set :drawText.17:x :drawItem.4:textX
-    * set :drawText.17:y *tmp236
+  521 set :drawText.17:x 170
+  522 set :drawText.17:y 97
   523 set :drawText.17:alignment @right
   524 print "x"
   525 read *tmp237 processor1 ".mapSpots"
   526 print *tmp237
-    * set :drawPrint.17:x :drawBold.7:x
-    * set :drawPrint.17:y :drawBold.7:y
-    * set :drawPrint.17:alignment :drawBold.7:alignment
-    * draw print :drawText.17:x :drawText.17:y :drawText.17:alignment
+  527 set :drawPrint.17:x 170
+  528 set :drawPrint.17:y 97
+  529 set :drawPrint.17:alignment @right
+  530 draw print :drawItem.4:textX *tmp236 @right
   531 label *label120
   532 label *label119
-    * op add :drawText.18:x :drawItem.4:textX 1
-    * set :drawText.18:y *tmp236
+  533 op add :drawText.18:x 170 1
+  534 set :drawText.18:y 97
   535 set :drawText.18:alignment @right
   536 print "x"
   537 read *tmp239 processor1 ".mapSpots"
   538 print *tmp239
-    * set :drawPrint.18:x :drawText.18:x
-    * set :drawPrint.18:y :drawBold.7:y
-    * set :drawPrint.18:alignment :drawBold.7:alignment
-    * draw print :drawText.18:x :drawText.18:y :drawText.18:alignment
+  539 set :drawPrint.18:x 171
+  540 set :drawPrint.18:y 97
+  541 set :drawPrint.18:alignment @right
+  542 draw print 171 *tmp236 @right
   543 label *label122
   544 label *label121
   545 label *label118
-    * op add :drawItem.4:col 0 1
   546 jump *label123 lessThan 1 1
-    * op sub :drawItem.4:y 90 15
   547 label *label123
   548 label *label124
   549 label *label117
 
   558 set :drawText.19:y 105
   559 set :drawText.19:alignment @bottomLeft
   560 print "Materials"
-    * set :drawPrint.19:x :drawBold.8:x
-    * set :drawPrint.19:y :drawBold.8:y
-    * set :drawPrint.19:alignment :drawBold.8:alignment
-    * draw print :drawText.19:x :drawText.19:y :drawText.19:alignment
+  561 set :drawPrint.19:x 22
+  562 set :drawPrint.19:y 105
+  563 set :drawPrint.19:alignment @bottomLeft
+  564 draw print 22 105 @bottomLeft
   565 label *label127
   566 label *label126
   567 op add :drawText.20:x 22 1
   568 set :drawText.20:y 105
   569 set :drawText.20:alignment @bottomLeft
   570 print "Materials"
-    * set :drawPrint.20:x 23
-    * set :drawPrint.20:y :drawBold.8:y
-    * set :drawPrint.20:alignment :drawBold.8:alignment
-    * draw print :drawText.20:x :drawText.20:y :drawText.20:alignment
+  571 set :drawPrint.20:y 105
+  572 set :drawPrint.20:alignment @bottomLeft
+  573 draw print 23 105 @bottomLeft
   574 label *label129
   575 label *label128
   576 label *label125
 
   615 set :drawItem.5:col :drawMaterials:col
   616 set :drawItem.5:y :drawMaterials:y
   617 set :drawItem.5:columns 1
-    * set :drawItem.5:item :drawMaterials:item.1
-    * set :drawItem.5:current *tmp248
-    * set :drawItem.5:target :drawMaterials:target.1
-    * op mul *tmp249 :drawMaterials:columns 176
-    * op mul *tmp250 :drawItem.5:columns 88
-    * op sub :drawItem.5:barLength 210 *tmp250
-    * op add :drawItem.5:textEnd 48 :drawItem.5:barLength
-    * op mul *tmp253 :drawItem.5:barLength *tmp248
+  618 op mul *tmp249 1 176
+  619 op mul *tmp250 1 88
+  620 op sub :drawItem.5:barLength 210 88
+  621 op add :drawItem.5:textEnd 48 122
+  622 op mul *tmp253 122 *tmp248
   623 op div *tmp254 *tmp253 :drawMaterials:target.1
-    * op min :drawItem.5:length :drawItem.5:barLength *tmp254
+  624 op min :drawItem.5:length 122 *tmp254
   625 op mul *tmp256 :drawMaterials:col 176
-    * op mul *tmp257 :drawItem.5:col 88
+  626 op mul *tmp257 :drawMaterials:col 88
   627 op add :drawItem.5:iconX 11 *tmp257
-    * op mul *tmp259 :drawMaterials:col 176
-    * op div *tmp260 *tmp256 2
+  628 op mul *tmp260 :drawMaterials:col 88
   629 op add :drawItem.5:barX 22 *tmp257
-    * op mul *tmp262 :drawMaterials:col 176
-    * op div *tmp263 *tmp256 2
-    * op add :drawItem.5:textX :drawItem.5:textEnd *tmp257
+  630 op mul *tmp263 :drawMaterials:col 88
+  631 op add :drawItem.5:textX 170 *tmp257
   632 draw col %[white]
   633 op add *tmp265 :drawMaterials:y 5
   634 draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
   635 draw color 0 128 0 255
   636 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   637 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y :drawItem.5:barLength 10
-    * op add *tmp266 :drawMaterials:y 5
-    * op add *tmp267 *tmp265 2
+  638 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  639 op add *tmp267 :drawMaterials:y 7
   640 set :drawBold.9:x :drawItem.5:textX
   641 set :drawBold.9:y *tmp267
   642 set :drawBold.9:alignment @right
 
   644 set :drawText.21:y *tmp267
   645 set :drawText.21:alignment @right
   646 print :drawMaterials:target.1
-    * set :drawPrint.21:x :drawBold.9:x
-    * set :drawPrint.21:y :drawBold.9:y
-    * set :drawPrint.21:alignment :drawBold.9:alignment
-    * draw print :drawText.21:x :drawText.21:y :drawText.21:alignment
+  647 set :drawPrint.21:x :drawItem.5:textX
+  648 set :drawPrint.21:y *tmp267
+  649 set :drawPrint.21:alignment @right
+  650 draw print :drawItem.5:textX *tmp267 @right
   651 label *label147
   652 label *label146
   653 op add :drawText.22:x :drawItem.5:textX 1
   654 set :drawText.22:y *tmp267
   655 set :drawText.22:alignment @right
   656 print :drawMaterials:target.1
-    * set :drawPrint.22:x :drawText.22:x
-    * set :drawPrint.22:y :drawBold.9:y
-    * set :drawPrint.22:alignment :drawBold.9:alignment
-    * draw print :drawText.22:x :drawText.22:y :drawText.22:alignment
+  657 set :drawPrint.22:y *tmp267
+  658 set :drawPrint.22:alignment @right
+  659 draw print :drawText.22:x *tmp267 @right
   660 label *label149
   661 label *label148
   662 label *label145
   663 op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label150 lessThan :drawItem.5:col :drawMaterials:columns
+  664 jump *label150 lessThan :drawItem.5:col 1
   665 set :drawItem.5:col 0
   666 op sub :drawItem.5:y :drawMaterials:y 15
   667 label *label150
 
   697 set :drawBold.10:y *tmp274
   698 set :drawBold.10:alignment @bottomLeft
   699 set :drawText.23:x 22
-    * set :drawText.23:y :drawUnit:y
+  700 set :drawText.23:y *tmp274
   701 set :drawText.23:alignment @bottomLeft
   702 print "Builder"
-    * set :drawPrint.23:x :drawBold.10:x
-    * set :drawPrint.23:y :drawBold.10:y
-    * set :drawPrint.23:alignment :drawBold.10:alignment
-    * draw print :drawText.23:x :drawText.23:y :drawText.23:alignment
+  703 set :drawPrint.23:x 22
+  704 set :drawPrint.23:y *tmp274
+  705 set :drawPrint.23:alignment @bottomLeft
+  706 draw print 22 :drawUnit:y @bottomLeft
   707 label *label159
   708 label *label158
   709 op add :drawText.24:x 22 1
-    * set :drawText.24:y :drawUnit:y
+  710 set :drawText.24:y *tmp274
   711 set :drawText.24:alignment @bottomLeft
   712 print "Builder"
-    * set :drawPrint.24:x 23
-    * set :drawPrint.24:y :drawBold.10:y
-    * set :drawPrint.24:alignment :drawBold.10:alignment
-    * draw print :drawText.24:x :drawText.24:y :drawText.24:alignment
+  713 set :drawPrint.24:y *tmp274
+  714 set :drawPrint.24:alignment @bottomLeft
+  715 draw print 23 :drawUnit:y @bottomLeft
   716 label *label161
   717 label *label160
   718 label *label157
 
   721 set :drawUnit.1:item @poly
   722 set :drawUnit.1:items 0
   723 set :drawUnit.1:y *tmp278
-    * set :drawItem.6:col 0
-    * set :drawItem.6:y *tmp278
-    * set :drawItem.6:columns 1
-    * set :drawItem.6:item @poly
-    * set :drawItem.6:current 0
   724 set :drawItem.6:target .transportTarget
-    * op mul *tmp279 1 176
-    * op div *tmp280 176 2
-    * op sub :drawItem.6:barLength 210 88
-    * op add :drawItem.6:textEnd 48 122
-    * op mul *tmp283 122 :drawUnit.1:items
-    * op div *tmp284 *tmp283 :drawItem.6:target
+  725 op mul *tmp283 122 0
+  726 op div *tmp284 0 :drawItem.6:target
   727 op min :drawItem.6:length 122 *tmp284
-    * op mul *tmp286 0 176
-    * op div *tmp287 0 2
-    * op add :drawItem.6:iconX 11 0
-    * op mul *tmp289 0 176
-    * op div *tmp290 0 2
-    * op add :drawItem.6:barX 22 0
-    * op mul *tmp292 0 176
-    * op div *tmp293 0 2
   728 op add :drawItem.6:textX 170 0
   729 draw col %[white]
-    * op add *tmp295 :drawUnit.1:y 5
-    * draw image 11 *tmp295 :drawUnit.1:item 16 0
+  730 op add *tmp295 *tmp278 5
+  731 draw image 11 *tmp295 @poly 16 0
   732 draw color 0 128 0 255
-    * draw rect 22 :drawUnit.1:y :drawItem.6:length 10
+  733 draw rect 22 *tmp278 :drawItem.6:length 10
   734 draw color 0 255 0 255
-    * draw lineRect 22 :drawUnit.1:y 122 10
-    * op add *tmp296 :drawUnit.1:y 5
-    * op add *tmp297 *tmp295 2
+  735 draw lineRect 22 *tmp278 122 10
+  736 op add *tmp296 *tmp278 5
+  737 op add *tmp297 :drawUnit.1:y 7
   738 set :drawBold.11:x 170
   739 set :drawBold.11:y *tmp297
   740 set :drawBold.11:alignment @right
-    * set :drawText.25:x :drawItem.6:textX
+  741 set :drawText.25:x 170
   742 set :drawText.25:y *tmp297
   743 set :drawText.25:alignment @right
   744 print .transportTarget
-    * set :drawPrint.25:x :drawBold.11:x
-    * set :drawPrint.25:y :drawBold.11:y
-    * set :drawPrint.25:alignment :drawBold.11:alignment
-    * draw print :drawText.25:x :drawText.25:y :drawText.25:alignment
+  745 set :drawPrint.25:x 170
+  746 set :drawPrint.25:y *tmp297
+  747 set :drawPrint.25:alignment @right
+  748 draw print :drawItem.6:textX *tmp297 @right
   749 label *label168
   750 label *label167
-    * op add :drawText.26:x :drawItem.6:textX 1
+  751 op add :drawText.26:x 170 1
   752 set :drawText.26:y *tmp297
   753 set :drawText.26:alignment @right
   754 print .transportTarget
-    * set :drawPrint.26:x :drawText.26:x
-    * set :drawPrint.26:y :drawBold.11:y
-    * set :drawPrint.26:alignment :drawBold.11:alignment
-    * draw print :drawText.26:x :drawText.26:y :drawText.26:alignment
+  755 set :drawPrint.26:x 171
+  756 set :drawPrint.26:y *tmp297
+  757 set :drawPrint.26:alignment @right
+  758 draw print 171 *tmp297 @right
   759 label *label170
   760 label *label169
   761 label *label166
-    * op add :drawItem.6:col 0 1
   762 jump *label171 lessThan 1 1
-    * op sub :drawItem.6:y :drawUnit.1:y 15
+  763 op sub :drawItem.6:y *tmp278 15
   764 label *label171
   765 label *label172
   766 label *label165
 
   775 set :drawUnit.2:item .transportItem
   776 set :drawUnit.2:items *tmp306
   777 set :drawUnit.2:y *tmp307
-    * set :drawItem.7:col 0
-    * set :drawItem.7:y *tmp307
-    * set :drawItem.7:columns 1
-    * set :drawItem.7:item :drawUnit.2:item
-    * set :drawItem.7:current *tmp306
   778 set :drawItem.7:target .transportTarget
-    * op mul *tmp308 1 176
-    * op div *tmp309 176 2
-    * op sub :drawItem.7:barLength 210 88
-    * op add :drawItem.7:textEnd 48 122
-    * op mul *tmp312 122 :drawUnit.2:items
+  779 op mul *tmp312 122 *tmp306
   780 op div *tmp313 *tmp312 :drawItem.7:target
   781 op min :drawItem.7:length 122 *tmp313
-    * op mul *tmp315 0 176
-    * op div *tmp316 0 2
-    * op add :drawItem.7:iconX 11 0
-    * op mul *tmp318 0 176
-    * op div *tmp319 0 2
-    * op add :drawItem.7:barX 22 0
-    * op mul *tmp321 0 176
-    * op div *tmp322 0 2
   782 op add :drawItem.7:textX 170 0
   783 draw col %[white]
-    * op add *tmp324 :drawUnit.2:y 5
+  784 op add *tmp324 *tmp307 5
   785 draw image 11 *tmp324 :drawUnit.2:item 16 0
   786 draw color 0 128 0 255
-    * draw rect 22 :drawUnit.2:y :drawItem.7:length 10
+  787 draw rect 22 *tmp307 :drawItem.7:length 10
   788 draw color 0 255 0 255
-    * draw lineRect 22 :drawUnit.2:y 122 10
-    * op add *tmp325 :drawUnit.2:y 5
-    * op add *tmp326 *tmp324 2
+  789 draw lineRect 22 *tmp307 122 10
+  790 op add *tmp325 *tmp307 5
+  791 op add *tmp326 :drawUnit.2:y 7
   792 set :drawBold.12:x 170
   793 set :drawBold.12:y *tmp326
   794 set :drawBold.12:alignment @right
-    * set :drawText.27:x :drawItem.7:textX
+  795 set :drawText.27:x 170
   796 set :drawText.27:y *tmp326
   797 set :drawText.27:alignment @right
   798 print .transportTarget
-    * set :drawPrint.27:x :drawBold.12:x
-    * set :drawPrint.27:y :drawBold.12:y
-    * set :drawPrint.27:alignment :drawBold.12:alignment
-    * draw print :drawText.27:x :drawText.27:y :drawText.27:alignment
+  799 set :drawPrint.27:x 170
+  800 set :drawPrint.27:y *tmp326
+  801 set :drawPrint.27:alignment @right
+  802 draw print :drawItem.7:textX *tmp326 @right
   803 label *label177
   804 label *label176
-    * op add :drawText.28:x :drawItem.7:textX 1
+  805 op add :drawText.28:x 170 1
   806 set :drawText.28:y *tmp326
   807 set :drawText.28:alignment @right
   808 print .transportTarget
-    * set :drawPrint.28:x :drawText.28:x
-    * set :drawPrint.28:y :drawBold.12:y
-    * set :drawPrint.28:alignment :drawBold.12:alignment
-    * draw print :drawText.28:x :drawText.28:y :drawText.28:alignment
+  809 set :drawPrint.28:x 171
+  810 set :drawPrint.28:y *tmp326
+  811 set :drawPrint.28:alignment @right
+  812 draw print 171 *tmp326 @right
   813 label *label179
   814 label *label178
   815 label *label175
-    * op add :drawItem.7:col 0 1
   816 jump *label180 lessThan 1 1
-    * op sub :drawItem.7:y :drawUnit.2:y 15
+  817 op sub :drawItem.7:y *tmp307 15
   818 label *label180
   819 label *label181
   820 label *label174
 
   823 label *label154
   824 set :drawUnits:x 170
   825 draw col %[white]
-    * set :drawUnitCount:type @poly
   826 set :drawUnitCount:count .displayPolys
   827 jump *label184 lessThanEq :drawUnitCount:count 0
-    * op sub *tmp334 170 20
   828 draw image 150 127 @poly 12 0
   829 set :drawText.29:x 170
   830 set :drawText.29:y 129
   831 set :drawText.29:alignment @right
   832 print "x"
   833 print :drawUnitCount:count
-    * set :drawPrint.29:x :drawUnits:x
-    * set :drawPrint.29:y 129
-    * set :drawPrint.29:alignment @right
-    * draw print :drawText.29:x :drawText.29:y :drawText.29:alignment
+  834 set :drawPrint.29:x 170
+  835 draw print 170 129 @right
   836 label *label187
   837 label *label186
   838 op sub :drawUnits:x 170 30
   839 label *label184
   840 label *label185
   841 label *label183
-    * set :drawUnitCount.1:type @mono
   842 set :drawUnitCount.1:count .displayMonos
   843 jump *label189 lessThanEq :drawUnitCount.1:count 0
   844 op sub *tmp337 :drawUnits:x 20
 
   848 set :drawText.30:alignment @right
   849 print "x"
   850 print :drawUnitCount.1:count
-    * set :drawPrint.30:x :drawUnits:x
-    * set :drawPrint.30:y 129
-    * set :drawPrint.30:alignment @right
-    * draw print :drawText.30:x :drawText.30:y :drawText.30:alignment
+  851 draw print :drawUnits:x 129 @right
   852 label *label192
   853 label *label191
   854 op sub :drawUnits:x :drawUnits:x 30
   855 label *label189
   856 label *label190
   857 label *label188
-    * set :drawUnitCount.2:type @flare
   858 set :drawUnitCount.2:count .displayFlares
   859 jump *label194 lessThanEq :drawUnitCount.2:count 0
   860 op sub *tmp340 :drawUnits:x 20
 
   864 set :drawText.31:alignment @right
   865 print "x"
   866 print :drawUnitCount.2:count
-    * set :drawPrint.31:x :drawUnits:x
-    * set :drawPrint.31:y 129
-    * set :drawPrint.31:alignment @right
-    * draw print :drawText.31:x :drawText.31:y :drawText.31:alignment
+  867 draw print :drawUnits:x 129 @right
   868 label *label197
   869 label *label196
   870 label *label194
 
   884 set :drawText.32:y 172
   885 set :drawText.32:alignment @topRight
   886 print "Base map"
-    * set :drawPrint.32:x 172
-    * set :drawPrint.32:y 172
-    * set :drawPrint.32:alignment @topRight
-    * draw print :drawText.32:x :drawText.32:y :drawText.32:alignment
+  887 draw print 172 172 @topRight
   888 label *label202
   889 label *label201
   890 draw col %[white]
 
  1082 set :displayLog:x 11
  1083 set :displayLog:y 163
  1084 read :displayLog:logPosition bank1 511
-    * op sub :displayLog:records 511 :displayLog:logPosition
  1085 op sub *tmp354 510 :displayLog:logPosition
  1086 op idiv *tmp355 *tmp354 32
  1087 op add *tmp356 *tmp355 1
 
  1099 set :drawText.33:y 4
  1100 set :drawText.33:alignment @bottomRight
  1101 print :displayLog:pages
-    * set :drawPrint.33:x 172
-    * set :drawPrint.33:y 4
-    * set :drawPrint.33:alignment @bottomRight
-    * draw print :drawText.33:x :drawText.33:y :drawText.33:alignment
+ 1102 draw print 172 4 @bottomRight
  1103 label *label255
  1104 label *label254
  1105 draw col %[white]
-    * set *tmp364 :displayLog:stop
  1106 op sub :displayLog:position :displayLog:start 1
  1107 label *label256
  1108 jump *label258 lessThan :displayLog:position :displayLog:stop
  1109 read :displayLog:record bank1 :displayLog:position
-    * set :displayRecord:record :displayLog:record
  1110 op mod :displayRecord:id :displayLog:record 1000
  1111 jump *label260 lessThanEq :displayRecord:id @blockCount
  1112 op sub *tmp370 :displayRecord:id @blockCount
 
  1129 print :displayRecord:m
  1130 print ":"
  1131 print *tmp379
-    * set :displayRecordAt:image *tmp369
-    * set :displayRecordAt:text :displayRecord:s
-    * draw image :displayLog:x :displayLog:y :displayRecord:icon 14 0
-    * op add *tmp380 :displayLog:x 56
+ 1132 draw image :displayLog:x :displayLog:y *tmp369 14 0
  1133 op add *tmp381 :displayLog:x 44
  1134 op add *tmp382 :displayLog:y 2
  1135 set :drawText.34:x *tmp381
  1136 set :drawText.34:y *tmp382
  1137 set :drawText.34:alignment @right
  1138 print :displayRecord:s
-    * set :drawPrint.34:x *tmp381
-    * set :drawPrint.34:y *tmp382
-    * set :drawPrint.34:alignment @right
-    * draw print :drawText.34:x :drawText.34:y :drawText.34:alignment
+ 1139 draw print *tmp381 *tmp382 @right
  1140 label *label266
  1141 label *label265
  1142 op sub :displayLog:y :displayLog:y 15
 
  1204 jump *label3 always
  1205 end
  1206 label *label1
-    * set :unpackCfg:cfg :drawBlock:cfg
-    * set :unpackCfg:index 0
  1207 set *tmp429 0
-    * op add :unpackCfg:index 0 1
-    * read *tmp430 :drawBlock:cfg *tmp429
+ 1208 read *tmp430 :drawBlock:cfg 0
  1209 op sub *tmp431 *tmp430 35
  1210 lookup block :unpackCfg:type *tmp431
  1211 set *tmp433 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp434 :drawBlock:cfg *tmp433
-    * op sub *tmp435 *tmp434 35
+ 1212 read *tmp434 :drawBlock:cfg 1
  1213 op sub :unpackCfg:x *tmp434 42
  1214 set *tmp437 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp438 :drawBlock:cfg *tmp437
-    * op sub *tmp439 *tmp438 35
+ 1215 read *tmp438 :drawBlock:cfg 2
  1216 op sub :unpackCfg:y *tmp438 42
-    * op add :unpackCfg:index 3 1
-    * op add :unpackCfg:index 4 1
-    * op add :unpackCfg:index 5 1
-    * op add :unpackCfg:index 6 1
-    * op add :unpackCfg:index 7 1
-    * op add :unpackCfg:index 8 1
-    * op add :unpackCfg:index 9 1
  1217 set *tmp462 10
-    * op add :unpackCfg:index 10 1
-    * read *tmp463 :drawBlock:cfg *tmp462
+ 1218 read *tmp463 :drawBlock:cfg 10
  1219 op sub :unpackCfg:rotation *tmp463 35
  1220 set *tmp465 11
-    * op add :unpackCfg:index 11 1
-    * read *tmp466 :drawBlock:cfg *tmp465
+ 1221 read *tmp466 :drawBlock:cfg 11
  1222 op sub :unpackCfg:size *tmp466 35
  1223 set *tmp468 12
-    * op add :unpackCfg:index 12 1
-    * read *tmp469 :drawBlock:cfg *tmp468
+ 1224 read *tmp469 :drawBlock:cfg 12
  1225 op sub :unpackCfg:ind *tmp469 35
  1226 label *label293
-    * set :drawBlock:type :unpackCfg:type
-    * set :drawBlock:x :unpackCfg:x
-    * set :drawBlock:y :unpackCfg:y
-    * set :drawBlock:rotation :unpackCfg:rotation
-    * set :drawBlock:size :unpackCfg:size
-    * set :drawBlock:index :unpackCfg:ind
  1227 op or *tmp471 :unpackCfg:x :unpackCfg:y
  1228 jump *label294 equal *tmp471 false
  1229 op shl *tmp473 1 :unpackCfg:ind

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-244 instructions):
 
    48 op add *tmp22 *tmp24 *tmp25
    49 label *label21
    50 op mul *tmp29 *tmp23 137
-    * op mul *tmp30 :animate:ratio 88
    51 op add *tmp27 *tmp29 *tmp25
    52 label *label22
    53 op mul *tmp34 *tmp23 32
 
    63 draw reset
    64 draw clear 0 0 32
    65 draw col %[gold]
-    * set :drawBold:x 40
-    * set :drawBold:y 161
-    * set :drawBold:alignment @bottom
-    * set :drawText:x 40
-    * set :drawText:y 161
-    * set :drawText:alignment @bottom
    66 print "Goal"
-    * set :drawPrint:x 40
-    * set :drawPrint:y 161
-    * set :drawPrint:alignment @bottom
    67 draw print 40 161 @bottom
    68 label *label28
    69 label *label27
-    * op add :drawText.1:x 40 1
-    * set :drawText.1:y 161
-    * set :drawText.1:alignment @bottom
    70 print "Goal"
-    * set :drawPrint.1:y 161
-    * set :drawPrint.1:alignment @bottom
    71 draw print 41 161 @bottom
    72 label *label30
    73 label *label29
 
   119 print *tmp59
   120 print "."
   121 print *tmp60
-    * set :drawText.2:x 170
-    * set :drawText.2:y 172
-    * set :drawText.2:alignment @topRight
   122 print ")"
   123 draw print 170 172 @topRight
   124 label *label40
 
   126 jump *label41 equal .titaniumDrill false
   127 sensor *tmp62 .titaniumDrill @titanium
   128 op max :drawHeader:count .titaniumDrillCount *tmp62
-    * set :drawHeader:x 170
   129 op log10 *tmp64 :drawHeader:count
   130 op floor :drawHeader:len *tmp64
-    * set :drawText.3:x 170
-    * set :drawText.3:y 155
-    * set :drawText.3:alignment @topRight
   131 print "x"
   132 print :drawHeader:count
-    * set :drawPrint.3:x 170
   133 draw print 170 155 @topRight
   134 label *label44
   135 label *label43
 
   140 label *label42
   141 jump *label45 equal .thoriumContainer false
   142 sensor :drawHeader:count .thoriumContainer @thorium
-    * set :drawHeader:x.1 120
   143 op log10 *tmp71 :drawHeader:count
   144 op floor :drawHeader:len.1 *tmp71
-    * set :drawText.4:x 120
-    * set :drawText.4:y 155
-    * set :drawText.4:alignment @topRight
   145 print "x"
   146 print :drawHeader:count
-    * set :drawPrint.4:x 120
   147 draw print 120 155 @topRight
   148 label *label48
   149 label *label47
 
   212 label *label57
   213 label *label55
   214 label *label53
-    * set :drawBold.1:x 22
-    * set :drawBold.1:y 105
-    * set :drawBold.1:alignment @bottomLeft
-    * set :drawText.5:x 22
-    * set :drawText.5:y 105
-    * set :drawText.5:alignment @bottomLeft
   215 print "Unit factories"
-    * set :drawPrint.5:x 22
-    * set :drawPrint.5:y 105
-    * set :drawPrint.5:alignment @bottomLeft
   216 draw print 22 105 @bottomLeft
   217 label *label62
   218 label *label61
-    * op add :drawText.6:x 22 1
-    * set :drawText.6:y 105
-    * set :drawText.6:alignment @bottomLeft
   219 print "Unit factories"
-    * set :drawPrint.6:y 105
-    * set :drawPrint.6:alignment @bottomLeft
   220 draw print 23 105 @bottomLeft
   221 label *label64
   222 label *label63
 
   224 jump *label65 lessThanEq .factoryProgress 0
   225 op mul *tmp117 122 .factoryProgress
   226 op mul *tmp118 .factoryProgress 122
-    * op min :drawItem:length 122 *tmp118
+  227 op min :drawItem:length 122 *tmp117
   228 op add :drawItem:textX 170 0
   229 draw col %[white]
   230 draw image 11 95 :drawMaterials:unit1 16 0
 
   233 draw color 0 255 0 255
   234 draw lineRect 22 90 122 10
   235 op add *tmp131 95 2
-    * set :drawBold.2:x 170
-    * set :drawBold.2:y 97
-    * set :drawBold.2:alignment @right
-    * set :drawText.7:x 170
-    * set :drawText.7:y 97
-    * set :drawText.7:alignment @right
   236 print :drawMaterials:unitCount1
   237 print "/"
   238 print :drawMaterials:unitTotal1
-    * set :drawPrint.7:x 170
-    * set :drawPrint.7:y 97
-    * set :drawPrint.7:alignment @right
-    * draw print :drawItem:textX *tmp131 @right
+  239 draw print 170 97 @right
   240 label *label70
   241 label *label69
-    * op add :drawText.8:x 170 1
-    * set :drawText.8:y 97
-    * set :drawText.8:alignment @right
   242 print :drawMaterials:unitCount1
   243 print "/"
   244 print :drawMaterials:unitTotal1
-    * set :drawPrint.8:x 171
-    * set :drawPrint.8:y 97
-    * set :drawPrint.8:alignment @right
-    * draw print 171 *tmp131 @right
+  245 draw print 171 97 @right
   246 label *label72
   247 label *label71
   248 label *label68
 
   253 jump *label75 equal :drawMaterials:unit2 null
   254 op mul *tmp141 122 .reconstructorProgress
   255 op mul *tmp142 .reconstructorProgress 122
-    * op min :drawItem.1:length 122 *tmp142
+  256 op min :drawItem.1:length 122 *tmp141
   257 op add :drawItem.1:textX 170 0
   258 draw col %[white]
   259 draw image 11 80 :drawMaterials:unit2 16 0
 
   262 draw color 0 255 0 255
   263 draw lineRect 22 75 122 10
   264 op add *tmp155 80 2
-    * set :drawBold.3:x 170
-    * set :drawBold.3:y 82
-    * set :drawBold.3:alignment @right
-    * set :drawText.9:x 170
-    * set :drawText.9:y 82
-    * set :drawText.9:alignment @right
   265 print :drawMaterials:unitCount2
   266 print "/"
   267 print :drawMaterials:unitTotal2
-    * set :drawPrint.9:x 170
-    * set :drawPrint.9:y 82
-    * set :drawPrint.9:alignment @right
-    * draw print :drawItem.1:textX *tmp155 @right
+  268 draw print 170 82 @right
   269 label *label80
   270 label *label79
-    * op add :drawText.10:x 170 1
-    * set :drawText.10:y 82
-    * set :drawText.10:alignment @right
   271 print :drawMaterials:unitCount2
   272 print "/"
   273 print :drawMaterials:unitTotal2
-    * set :drawPrint.10:x 171
-    * set :drawPrint.10:y 82
-    * set :drawPrint.10:alignment @right
-    * draw print 171 *tmp155 @right
+  274 draw print 171 82 @right
   275 label *label82
   276 label *label81
   277 label *label78
 
   282 jump *label85 equal :drawMaterials:unit3 null
   283 op mul *tmp165 122 :drawMaterials:multiReconstructorProgress
   284 op mul *tmp166 :drawMaterials:multiReconstructorProgress 122
-    * op min :drawItem.2:length 122 *tmp166
+  285 op min :drawItem.2:length 122 *tmp165
   286 op add :drawItem.2:textX 170 0
   287 draw col %[white]
   288 draw image 11 65 :drawMaterials:unit3 16 0
 
   291 draw color 0 255 0 255
   292 draw lineRect 22 60 122 10
   293 op add *tmp179 65 2
-    * set :drawBold.4:x 170
-    * set :drawBold.4:y 67
-    * set :drawBold.4:alignment @right
-    * set :drawText.11:x 170
-    * set :drawText.11:y 67
-    * set :drawText.11:alignment @right
   294 print .displayMegas
   295 print "/"
   296 print .megaTarget
-    * set :drawPrint.11:x 170
-    * set :drawPrint.11:y 67
-    * set :drawPrint.11:alignment @right
-    * draw print :drawItem.2:textX *tmp179 @right
+  297 draw print 170 67 @right
   298 label *label90
   299 label *label89
-    * op add :drawText.12:x 170 1
-    * set :drawText.12:y 67
-    * set :drawText.12:alignment @right
   300 print .displayMegas
   301 print "/"
   302 print .megaTarget
-    * set :drawPrint.12:x 171
-    * set :drawPrint.12:y 67
-    * set :drawPrint.12:alignment @right
-    * draw print 171 *tmp179 @right
+  303 draw print 171 67 @right
   304 label *label92
   305 label *label91
   306 label *label88
 
   325 label *label95
   326 jump *label100 lessThanEq :drawMaterials:target 0
   327 sensor *tmp188 .airFactory :drawMaterials:item
-    * set :drawItem.3:col :drawMaterials:col
   328 set :drawItem.3:y :drawMaterials:y
   329 op mul *tmp193 122 *tmp188
   330 op div *tmp194 *tmp193 :drawMaterials:target
   331 op min :drawItem.3:length 122 *tmp194
-    * op mul *tmp196 :drawMaterials:col 176
   332 op mul *tmp197 :drawMaterials:col 88
   333 op add :drawItem.3:iconX 11 *tmp197
-    * op mul *tmp200 :drawMaterials:col 88
   334 op add :drawItem.3:barX 22 *tmp197
-    * op mul *tmp203 :drawMaterials:col 88
   335 op add :drawItem.3:textX 170 *tmp197
   336 draw col %[white]
   337 op add *tmp205 :drawMaterials:y 5
 
   341 draw color 0 255 0 255
   342 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
   343 op add *tmp207 :drawMaterials:y 7
-    * set :drawBold.5:x :drawItem.3:textX
-    * set :drawBold.5:y *tmp207
-    * set :drawBold.5:alignment @right
-    * set :drawText.13:x :drawItem.3:textX
-    * set :drawText.13:y *tmp207
-    * set :drawText.13:alignment @right
   344 print :drawMaterials:target
-    * set :drawPrint.13:x :drawItem.3:textX
-    * set :drawPrint.13:y *tmp207
-    * set :drawPrint.13:alignment @right
   345 draw print :drawItem.3:textX *tmp207 @right
   346 label *label105
   347 label *label104
   348 op add :drawText.14:x *tmp197 171
-    * set :drawText.14:y *tmp207
-    * set :drawText.14:alignment @right
   349 print :drawMaterials:target
-    * set :drawPrint.14:y *tmp207
-    * set :drawPrint.14:alignment @right
   350 draw print :drawText.14:x *tmp207 @right
   351 label *label107
   352 label *label106
 
   373 op equal *tmp212 .nextBlock @ore-titanium
   374 op or *tmp213 *tmp211 *tmp212
   375 jump *label110 equal *tmp213 false
-    * set :drawBold.6:x 22
-    * set :drawBold.6:y 105
-    * set :drawBold.6:alignment @bottomLeft
-    * set :drawText.15:x 22
-    * set :drawText.15:y 105
-    * set :drawText.15:alignment @bottomLeft
   376 read *tmp215 processor1 ".mapAction"
   377 print *tmp215
-    * set :drawPrint.15:x 22
-    * set :drawPrint.15:y 105
-    * set :drawPrint.15:alignment @bottomLeft
   378 draw print 22 105 @bottomLeft
   379 label *label114
   380 label *label113
-    * op add :drawText.16:x 22 1
-    * set :drawText.16:y 105
-    * set :drawText.16:alignment @bottomLeft
   381 read *tmp217 processor1 ".mapAction"
   382 print *tmp217
-    * set :drawPrint.16:y 105
-    * set :drawPrint.16:alignment @bottomLeft
   383 draw print 23 105 @bottomLeft
   384 label *label116
   385 label *label115
 
   397 draw color 0 255 0 255
   398 draw lineRect 22 90 122 10
   399 op add *tmp236 95 2
-    * set :drawBold.7:x 170
-    * set :drawBold.7:y 97
-    * set :drawBold.7:alignment @right
-    * set :drawText.17:x 170
-    * set :drawText.17:y 97
-    * set :drawText.17:alignment @right
   400 print "x"
   401 read *tmp237 processor1 ".mapSpots"
   402 print *tmp237
-    * set :drawPrint.17:x 170
-    * set :drawPrint.17:y 97
-    * set :drawPrint.17:alignment @right
-    * draw print :drawItem.4:textX *tmp236 @right
+  403 draw print 170 97 @right
   404 label *label120
   405 label *label119
-    * op add :drawText.18:x 170 1
-    * set :drawText.18:y 97
-    * set :drawText.18:alignment @right
   406 print "x"
   407 read *tmp239 processor1 ".mapSpots"
   408 print *tmp239
-    * set :drawPrint.18:x 171
-    * set :drawPrint.18:y 97
-    * set :drawPrint.18:alignment @right
-    * draw print 171 *tmp236 @right
+  409 draw print 171 97 @right
   410 label *label122
   411 label *label121
   412 label *label118
 
   418 label *label110
   419 set .materialCount .totalTargets
   420 set :drawMaterials:count .materialCount
-    * set :drawBold.8:x 22
-    * set :drawBold.8:y 105
-    * set :drawBold.8:alignment @bottomLeft
-    * set :drawText.19:x 22
-    * set :drawText.19:y 105
-    * set :drawText.19:alignment @bottomLeft
   421 print "Materials"
-    * set :drawPrint.19:x 22
-    * set :drawPrint.19:y 105
-    * set :drawPrint.19:alignment @bottomLeft
   422 draw print 22 105 @bottomLeft
   423 label *label127
   424 label *label126
-    * op add :drawText.20:x 22 1
-    * set :drawText.20:y 105
-    * set :drawText.20:alignment @bottomLeft
   425 print "Materials"
-    * set :drawPrint.20:y 105
-    * set :drawPrint.20:alignment @bottomLeft
   426 draw print 23 105 @bottomLeft
   427 label *label129
   428 label *label128
   429 label *label125
-    * set :drawMaterials:columns 1
   430 jump *label130 equal .materialCount false
   431 set :drawMaterials:item.1 @copper
   432 set :drawMaterials:target.1 .targetCopper
 
   464 label *label132
   465 jump *label142 lessThanEq :drawMaterials:target.1 0
   466 sensor *tmp248 .core :drawMaterials:item.1
-    * set :drawItem.5:col :drawMaterials:col
   467 set :drawItem.5:y :drawMaterials:y
-    * set :drawItem.5:columns 1
-    * op mul *tmp249 1 176
-    * op mul *tmp250 1 88
-    * op sub :drawItem.5:barLength 210 88
-    * op add :drawItem.5:textEnd 48 122
   468 op mul *tmp253 122 *tmp248
   469 op div *tmp254 *tmp253 :drawMaterials:target.1
   470 op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp256 :drawMaterials:col 176
   471 op mul *tmp257 :drawMaterials:col 88
   472 op add :drawItem.5:iconX 11 *tmp257
-    * op mul *tmp260 :drawMaterials:col 88
   473 op add :drawItem.5:barX 22 *tmp257
-    * op mul *tmp263 :drawMaterials:col 88
   474 op add :drawItem.5:textX 170 *tmp257
   475 draw col %[white]
   476 op add *tmp265 :drawMaterials:y 5
 
   480 draw color 0 255 0 255
   481 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
   482 op add *tmp267 :drawMaterials:y 7
-    * set :drawBold.9:x :drawItem.5:textX
-    * set :drawBold.9:y *tmp267
-    * set :drawBold.9:alignment @right
-    * set :drawText.21:x :drawItem.5:textX
-    * set :drawText.21:y *tmp267
-    * set :drawText.21:alignment @right
   483 print :drawMaterials:target.1
-    * set :drawPrint.21:x :drawItem.5:textX
-    * set :drawPrint.21:y *tmp267
-    * set :drawPrint.21:alignment @right
   484 draw print :drawItem.5:textX *tmp267 @right
   485 label *label147
   486 label *label146
   487 op add :drawText.22:x :drawItem.5:textX 1
-    * set :drawText.22:y *tmp267
-    * set :drawText.22:alignment @right
   488 print :drawMaterials:target.1
-    * set :drawPrint.22:y *tmp267
-    * set :drawPrint.22:alignment @right
   489 draw print :drawText.22:x *tmp267 @right
   490 label *label149
   491 label *label148
 
   523 set *tmp274 25
   524 label *label156
   525 set :drawUnit:y *tmp274
-    * set :drawBold.10:x 22
-    * set :drawBold.10:y *tmp274
-    * set :drawBold.10:alignment @bottomLeft
-    * set :drawText.23:x 22
-    * set :drawText.23:y *tmp274
-    * set :drawText.23:alignment @bottomLeft
   526 print "Builder"
-    * set :drawPrint.23:x 22
-    * set :drawPrint.23:y *tmp274
-    * set :drawPrint.23:alignment @bottomLeft
-    * draw print 22 :drawUnit:y @bottomLeft
+  527 draw print 22 *tmp274 @bottomLeft
   528 label *label159
   529 label *label158
-    * op add :drawText.24:x 22 1
-    * set :drawText.24:y *tmp274
-    * set :drawText.24:alignment @bottomLeft
   530 print "Builder"
-    * set :drawPrint.24:y *tmp274
-    * set :drawPrint.24:alignment @bottomLeft
-    * draw print 23 :drawUnit:y @bottomLeft
+  531 draw print 23 *tmp274 @bottomLeft
   532 label *label161
   533 label *label160
   534 label *label157
   535 jump *label162 notEqual .transportItem null
   536 op sub *tmp278 *tmp274 15
-    * set :drawUnit.1:item @poly
-    * set :drawUnit.1:items 0
   537 set :drawUnit.1:y *tmp278
   538 set :drawItem.6:target .transportTarget
-    * op mul *tmp283 122 0
   539 op div *tmp284 0 :drawItem.6:target
   540 op min :drawItem.6:length 122 *tmp284
   541 op add :drawItem.6:textX 170 0
   542 draw col %[white]
-    * op add *tmp295 *tmp278 5
+  543 op sub *tmp295 *tmp274 10
   544 draw image 11 *tmp295 @poly 16 0
   545 draw color 0 128 0 255
   546 draw rect 22 *tmp278 :drawItem.6:length 10
   547 draw color 0 255 0 255
   548 draw lineRect 22 *tmp278 122 10
-    * op add *tmp296 *tmp278 5
-    * op add *tmp297 :drawUnit.1:y 7
-    * set :drawBold.11:x 170
-    * set :drawBold.11:y *tmp297
-    * set :drawBold.11:alignment @right
-    * set :drawText.25:x 170
-    * set :drawText.25:y *tmp297
-    * set :drawText.25:alignment @right
+  549 op sub *tmp296 *tmp274 10
+  550 op add *tmp297 *tmp278 7
   551 print .transportTarget
-    * set :drawPrint.25:x 170
-    * set :drawPrint.25:y *tmp297
-    * set :drawPrint.25:alignment @right
-    * draw print :drawItem.6:textX *tmp297 @right
+  552 draw print 170 *tmp297 @right
   553 label *label168
   554 label *label167
-    * op add :drawText.26:x 170 1
-    * set :drawText.26:y *tmp297
-    * set :drawText.26:alignment @right
   555 print .transportTarget
-    * set :drawPrint.26:x 171
-    * set :drawPrint.26:y *tmp297
-    * set :drawPrint.26:alignment @right
   556 draw print 171 *tmp297 @right
   557 label *label170
   558 label *label169
   559 label *label166
   560 jump *label171 lessThan 1 1
-    * op sub :drawItem.6:y *tmp278 15
+  561 op sub :drawItem.6:y *tmp274 30
   562 label *label171
   563 label *label172
   564 label *label165
 
   571 op mul *tmp306 *tmp304 *tmp305
   572 op sub *tmp307 *tmp274 15
   573 set :drawUnit.2:item .transportItem
-    * set :drawUnit.2:items *tmp306
   574 set :drawUnit.2:y *tmp307
   575 set :drawItem.7:target .transportTarget
   576 op mul *tmp312 122 *tmp306
 
   578 op min :drawItem.7:length 122 *tmp313
   579 op add :drawItem.7:textX 170 0
   580 draw col %[white]
-    * op add *tmp324 *tmp307 5
+  581 op sub *tmp324 *tmp274 10
   582 draw image 11 *tmp324 :drawUnit.2:item 16 0
   583 draw color 0 128 0 255
   584 draw rect 22 *tmp307 :drawItem.7:length 10
   585 draw color 0 255 0 255
   586 draw lineRect 22 *tmp307 122 10
-    * op add *tmp325 *tmp307 5
-    * op add *tmp326 :drawUnit.2:y 7
-    * set :drawBold.12:x 170
-    * set :drawBold.12:y *tmp326
-    * set :drawBold.12:alignment @right
-    * set :drawText.27:x 170
-    * set :drawText.27:y *tmp326
-    * set :drawText.27:alignment @right
+  587 op sub *tmp325 *tmp274 10
+  588 op add *tmp326 *tmp307 7
   589 print .transportTarget
-    * set :drawPrint.27:x 170
-    * set :drawPrint.27:y *tmp326
-    * set :drawPrint.27:alignment @right
-    * draw print :drawItem.7:textX *tmp326 @right
+  590 draw print 170 *tmp326 @right
   591 label *label177
   592 label *label176
-    * op add :drawText.28:x 170 1
-    * set :drawText.28:y *tmp326
-    * set :drawText.28:alignment @right
   593 print .transportTarget
-    * set :drawPrint.28:x 171
-    * set :drawPrint.28:y *tmp326
-    * set :drawPrint.28:alignment @right
   594 draw print 171 *tmp326 @right
   595 label *label179
   596 label *label178
   597 label *label175
   598 jump *label180 lessThan 1 1
-    * op sub :drawItem.7:y *tmp307 15
+  599 op sub :drawItem.7:y *tmp274 30
   600 label *label180
   601 label *label181
   602 label *label174
 
   608 set :drawUnitCount:count .displayPolys
   609 jump *label184 lessThanEq :drawUnitCount:count 0
   610 draw image 150 127 @poly 12 0
-    * set :drawText.29:x 170
-    * set :drawText.29:y 129
-    * set :drawText.29:alignment @right
   611 print "x"
   612 print :drawUnitCount:count
-    * set :drawPrint.29:x 170
   613 draw print 170 129 @right
   614 label *label187
   615 label *label186
 
   621 jump *label189 lessThanEq :drawUnitCount.1:count 0
   622 op sub *tmp337 :drawUnits:x 20
   623 draw image *tmp337 127 @mono 12 0
-    * set :drawText.30:x :drawUnits:x
-    * set :drawText.30:y 129
-    * set :drawText.30:alignment @right
   624 print "x"
   625 print :drawUnitCount.1:count
   626 draw print :drawUnits:x 129 @right
 
   634 jump *label194 lessThanEq :drawUnitCount.2:count 0
   635 op sub *tmp340 :drawUnits:x 20
   636 draw image *tmp340 127 @flare 12 0
-    * set :drawText.31:x :drawUnits:x
-    * set :drawText.31:y 129
-    * set :drawText.31:alignment @right
   637 print "x"
   638 print :drawUnitCount.2:count
   639 draw print :drawUnits:x 129 @right
 
   652 draw reset
   653 draw clear 0 0 32
   654 draw col %[gold]
-    * set :drawText.32:x 172
-    * set :drawText.32:y 172
-    * set :drawText.32:alignment @topRight
   655 print "Base map"
   656 draw print 172 172 @topRight
   657 label *label202
 
   864 op sub *tmp363 .page 1
   865 print *tmp363
   866 print "/"
-    * set :drawText.33:x 172
-    * set :drawText.33:y 4
-    * set :drawText.33:alignment @bottomRight
   867 print :displayLog:pages
   868 draw print 172 4 @bottomRight
   869 label *label255
 
   881 label *label260
   882 lookup block *tmp369 :displayRecord:id
   883 label *label261
-    * set :displayRecord:icon *tmp369
   884 op div *tmp373 :displayLog:record 1000
   885 op idiv :displayRecord:t *tmp373 120
   886 op idiv :displayRecord:m :displayRecord:t 60
 
   897 draw image :displayLog:x :displayLog:y *tmp369 14 0
   898 op add *tmp381 :displayLog:x 44
   899 op add *tmp382 :displayLog:y 2
-    * set :drawText.34:x *tmp381
-    * set :drawText.34:y *tmp382
-    * set :drawText.34:alignment @right
   900 print :displayRecord:s
   901 draw print *tmp381 *tmp382 @right
   902 label *label266
 
   966 jump *label3 always
   967 end
   968 label *label1
-    * set *tmp429 0
   969 read *tmp430 :drawBlock:cfg 0
   970 op sub *tmp431 *tmp430 35
   971 lookup block :unpackCfg:type *tmp431
-    * set *tmp433 1
   972 read *tmp434 :drawBlock:cfg 1
   973 op sub :unpackCfg:x *tmp434 42
-    * set *tmp437 2
   974 read *tmp438 :drawBlock:cfg 2
   975 op sub :unpackCfg:y *tmp438 42
-    * set *tmp462 10
   976 read *tmp463 :drawBlock:cfg 10
   977 op sub :unpackCfg:rotation *tmp463 35
-    * set *tmp465 11
   978 read *tmp466 :drawBlock:cfg 11
   979 op sub :unpackCfg:size *tmp466 35
-    * set *tmp468 12
   980 read *tmp469 :drawBlock:cfg 12
   981 op sub :unpackCfg:ind *tmp469 35
   982 label *label293

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-20 instructions):
 
   223 label *label60
   224 jump *label65 lessThanEq .factoryProgress 0
   225 op mul *tmp117 122 .factoryProgress
-    * op mul *tmp118 .factoryProgress 122
   226 op min :drawItem:length 122 *tmp117
-    * op add :drawItem:textX 170 0
   227 draw col %[white]
   228 draw image 11 95 :drawMaterials:unit1 16 0
   229 draw color 0 128 0 255
   230 draw rect 22 90 :drawItem:length 10
   231 draw color 0 255 0 255
   232 draw lineRect 22 90 122 10
-    * op add *tmp131 95 2
   233 print :drawMaterials:unitCount1
   234 print "/"
   235 print :drawMaterials:unitTotal1
 
   249 label *label67
   250 jump *label75 equal :drawMaterials:unit2 null
   251 op mul *tmp141 122 .reconstructorProgress
-    * op mul *tmp142 .reconstructorProgress 122
   252 op min :drawItem.1:length 122 *tmp141
-    * op add :drawItem.1:textX 170 0
   253 draw col %[white]
   254 draw image 11 80 :drawMaterials:unit2 16 0
   255 draw color 0 128 0 255
   256 draw rect 22 75 :drawItem.1:length 10
   257 draw color 0 255 0 255
   258 draw lineRect 22 75 122 10
-    * op add *tmp155 80 2
   259 print :drawMaterials:unitCount2
   260 print "/"
   261 print :drawMaterials:unitTotal2
 
   275 label *label77
   276 jump *label85 equal :drawMaterials:unit3 null
   277 op mul *tmp165 122 :drawMaterials:multiReconstructorProgress
-    * op mul *tmp166 :drawMaterials:multiReconstructorProgress 122
   278 op min :drawItem.2:length 122 *tmp165
-    * op add :drawItem.2:textX 170 0
   279 draw col %[white]
   280 draw image 11 65 :drawMaterials:unit3 16 0
   281 draw color 0 128 0 255
   282 draw rect 22 60 :drawItem.2:length 10
   283 draw color 0 255 0 255
   284 draw lineRect 22 60 122 10
-    * op add *tmp179 65 2
   285 print .displayMegas
   286 print "/"
   287 print .megaTarget
 
   380 op mul *tmp222 122 :drawItem.4:current
   381 op div *tmp223 *tmp222 :drawItem.4:target
   382 op min :drawItem.4:length 122 *tmp223
-    * op add :drawItem.4:textX 170 0
   383 draw col %[white]
   384 draw image 11 95 @titanium 16 0
   385 draw color 0 128 0 255
   386 draw rect 22 90 :drawItem.4:length 10
   387 draw color 0 255 0 255
   388 draw lineRect 22 90 122 10
-    * op add *tmp236 95 2
   389 print "x"
   390 read *tmp237 processor1 ".mapSpots"
   391 print *tmp237
 
   473 draw print :drawItem.5:textX *tmp267 @right
   474 label *label147
   475 label *label146
-    * op add :drawText.22:x :drawItem.5:textX 1
+  476 op add :drawText.22:x *tmp257 171
   477 print :drawMaterials:target.1
   478 draw print :drawText.22:x *tmp267 @right
   479 label *label149
 
   511 label *label155
   512 set *tmp274 25
   513 label *label156
-    * set :drawUnit:y *tmp274
   514 print "Builder"
   515 draw print 22 *tmp274 @bottomLeft
   516 label *label159
 
   522 label *label157
   523 jump *label162 notEqual .transportItem null
   524 op sub *tmp278 *tmp274 15
-    * set :drawUnit.1:y *tmp278
   525 set :drawItem.6:target .transportTarget
   526 op div *tmp284 0 :drawItem.6:target
   527 op min :drawItem.6:length 122 *tmp284
-    * op add :drawItem.6:textX 170 0
   528 draw col %[white]
   529 op sub *tmp295 *tmp274 10
   530 draw image 11 *tmp295 @poly 16 0
 
   532 draw rect 22 *tmp278 :drawItem.6:length 10
   533 draw color 0 255 0 255
   534 draw lineRect 22 *tmp278 122 10
-    * op sub *tmp296 *tmp274 10
-    * op add *tmp297 *tmp278 7
+  535 op sub *tmp297 *tmp274 8
   536 print .transportTarget
   537 draw print 170 *tmp297 @right
   538 label *label168
 
   543 label *label169
   544 label *label166
   545 jump *label171 lessThan 1 1
-    * op sub :drawItem.6:y *tmp274 30
   546 label *label171
   547 label *label172
   548 label *label165
 
   555 op mul *tmp306 *tmp304 *tmp305
   556 op sub *tmp307 *tmp274 15
   557 set :drawUnit.2:item .transportItem
-    * set :drawUnit.2:y *tmp307
   558 set :drawItem.7:target .transportTarget
   559 op mul *tmp312 122 *tmp306
   560 op div *tmp313 *tmp312 :drawItem.7:target
   561 op min :drawItem.7:length 122 *tmp313
-    * op add :drawItem.7:textX 170 0
   562 draw col %[white]
   563 op sub *tmp324 *tmp274 10
   564 draw image 11 *tmp324 :drawUnit.2:item 16 0
 
   566 draw rect 22 *tmp307 :drawItem.7:length 10
   567 draw color 0 255 0 255
   568 draw lineRect 22 *tmp307 122 10
-    * op sub *tmp325 *tmp274 10
-    * op add *tmp326 *tmp307 7
+  569 op sub *tmp326 *tmp274 8
   570 print .transportTarget
   571 draw print 170 *tmp326 @right
   572 label *label177
 
   577 label *label178
   578 label *label175
   579 jump *label180 lessThan 1 1
-    * op sub :drawItem.7:y *tmp274 30
   580 label *label180
   581 label *label181
   582 label *label174

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1:
 
   852 op sub :displayLog:position :displayLog:start 1
   853 label *label256
   854 jump *label258 lessThan :displayLog:position :displayLog:stop
+  855 label *label298
   856 read :displayLog:record bank1 :displayLog:position
   857 op mod :displayRecord:id :displayLog:record 1000
   858 jump *label260 lessThanEq :displayRecord:id @blockCount
 
   898 label *label270
   899 label *label257
   900 op sub :displayLog:position :displayLog:position 1
-    * jump *label256 always
+  901 jump *label298 greaterThanEq :displayLog:position :displayLog:stop
   902 label *label258
   903 label *label253
   904 label *label199

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
    81 label *label31
    82 jump *label33 notEqual :drawHeader:count 1
    83 jump *label35 equal .nextBlock null
-    * set *tmp45 .nextBlock
+   84 draw image 40 137 .nextBlock 32 0
    85 jump *label36 always
    86 label *label35
-    * set *tmp45 .displayNextUnit
+   87 draw image 40 137 .displayNextUnit 32 0
    88 label *label36
-    * draw image 40 137 *tmp45 32 0
    89 jump *label34 always
    90 label *label33
    91 op div *tmp46 @tick 2
 
    99 op idiv :drawHeader:t *tmp49 120
   100 op idiv :drawHeader:m :drawHeader:t 60
   101 op mod :drawHeader:s :drawHeader:t 60
-    * jump *label37 greaterThanEq :drawHeader:s 10
+  102 set *tmp55 ""
+  103 jump *label38 greaterThanEq :drawHeader:s 10
   104 set *tmp55 "0"
   105 jump *label38 always
-    * label *label37
-    * set *tmp55 ""
   106 label *label38
   107 print :drawHeader:m
   108 print ":"
 
   503 label *label51
   504 label *label49
   505 draw col %[white]
-    * jump *label155 greaterThanEq .materialCount 4
+  506 set *tmp274 25
+  507 jump *label156 greaterThanEq .materialCount 4
   508 set *tmp274 40
   509 jump *label156 always
-    * label *label155
-    * set *tmp274 25
   510 label *label156
   511 print "Builder"
   512 draw print 22 *tmp274 @bottomLeft
 
   852 label *label298
   853 read :displayLog:record bank1 :displayLog:position
   854 op mod :displayRecord:id :displayLog:record 1000
-    * jump *label260 lessThanEq :displayRecord:id @blockCount
+  855 lookup block *tmp369 :displayRecord:id
+  856 jump *label261 lessThanEq :displayRecord:id @blockCount
   857 op sub *tmp370 :displayRecord:id @blockCount
   858 lookup unit *tmp369 *tmp370
   859 jump *label261 always
-    * label *label260
-    * lookup block *tmp369 :displayRecord:id
   860 label *label261
   861 op div *tmp373 :displayLog:record 1000
   862 op idiv :displayRecord:t *tmp373 120
   863 op idiv :displayRecord:m :displayRecord:t 60
   864 op mod :displayRecord:s :displayRecord:t 60
-    * jump *label262 greaterThanEq :displayRecord:s 10
+  865 set *tmp379 ""
+  866 jump *label263 greaterThanEq :displayRecord:s 10
   867 set *tmp379 "0"
   868 jump *label263 always
-    * label *label262
-    * set *tmp379 ""
   869 label *label263
   870 print :displayRecord:m
   871 print ":"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-3 instructions):
 
   800 set :displayBaseMap:i .recentBuildIndex
   801 jump *label246 lessThan :displayBaseMap:i 0
   802 set .recentBuildIndex -1
-    * readarr<regular> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
+  803 readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
   804 setaddr :drawBlock*retaddr *label248 (h:*label248)
   805 call *label1 *invalid :drawBlock*retval (m:*label248) (h:*label248)
   806 label *label248

Modifications by Inline function 'drawBlock' defined at line 528:1 (+24 instructions):
 
   794 setaddr *tmp343 *label244
   795 label *label203
   796 set :drawBlock:cfg :displayBaseMap:cfg
-    * setaddr :drawBlock*retaddr *label245 (h:*label245)
-    * call *label1 *invalid :drawBlock*retval (m:*label245) (h:*label245)
-    * label *label245
+  797 label *label299
+  798 read *tmp430 :drawBlock:cfg 0
+  799 op sub *tmp431 *tmp430 35
+  800 lookup block :unpackCfg:type *tmp431
+  801 read *tmp434 :drawBlock:cfg 1
+  802 op sub :unpackCfg:x *tmp434 42
+  803 read *tmp438 :drawBlock:cfg 2
+  804 op sub :unpackCfg:y *tmp438 42
+  805 read *tmp463 :drawBlock:cfg 10
+  806 op sub :unpackCfg:rotation *tmp463 35
+  807 read *tmp466 :drawBlock:cfg 11
+  808 op sub :unpackCfg:size *tmp466 35
+  809 read *tmp469 :drawBlock:cfg 12
+  810 op sub :unpackCfg:ind *tmp469 35
+  811 label *label300
+  812 op or *tmp471 :unpackCfg:x :unpackCfg:y
+  813 jump *label303 equal *tmp471 false
+  814 op shl *tmp473 1 :unpackCfg:ind
+  815 op and *tmp474 .blocksBuilt *tmp473
+  816 jump *label301 equal *tmp474 false
+  817 draw col %[white]
+  818 jump *label302 always
+  819 label *label301
+  820 draw color 128 255 128 128
+  821 label *label302
+  822 op and *tmp476 :unpackCfg:size 1
+  823 op sub :drawBlock:offset 1 *tmp476
+  824 op mul *tmp478 2 :unpackCfg:x
+  825 op add *tmp479 *tmp478 :drawBlock:offset
+  826 op mul *tmp480 2 :unpackCfg:y
+  827 op add *tmp481 *tmp480 :drawBlock:offset
+  828 op mul *tmp482 2 :unpackCfg:size
+  829 op mul *tmp483 90 :unpackCfg:rotation
+  830 draw image *tmp479 *tmp481 :unpackCfg:type *tmp482 *tmp483
+  831 label *label303
+  832 label *label304
+  833 label *label305
   834 set :displayBaseMap:i .recentBuildIndex
   835 jump *label246 lessThan :displayBaseMap:i 0
   836 set .recentBuildIndex -1
   837 readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
-    * setaddr :drawBlock*retaddr *label248 (h:*label248)
-    * call *label1 *invalid :drawBlock*retval (m:*label248) (h:*label248)
-    * label *label248
+  838 label *label306
+  839 read *tmp430 :drawBlock:cfg 0
+  840 op sub *tmp431 *tmp430 35
+  841 lookup block :unpackCfg:type *tmp431
+  842 read *tmp434 :drawBlock:cfg 1
+  843 op sub :unpackCfg:x *tmp434 42
+  844 read *tmp438 :drawBlock:cfg 2
+  845 op sub :unpackCfg:y *tmp438 42
+  846 read *tmp463 :drawBlock:cfg 10
+  847 op sub :unpackCfg:rotation *tmp463 35
+  848 read *tmp466 :drawBlock:cfg 11
+  849 op sub :unpackCfg:size *tmp466 35
+  850 read *tmp469 :drawBlock:cfg 12
+  851 op sub :unpackCfg:ind *tmp469 35
+  852 label *label307
+  853 op or *tmp471 :unpackCfg:x :unpackCfg:y
+  854 jump *label310 equal *tmp471 false
+  855 op shl *tmp473 1 :unpackCfg:ind
+  856 op and *tmp474 .blocksBuilt *tmp473
+  857 jump *label308 equal *tmp474 false
+  858 draw col %[white]
+  859 jump *label309 always
+  860 label *label308
+  861 draw color 128 255 128 128
+  862 label *label309
+  863 op and *tmp476 :unpackCfg:size 1
+  864 op sub :drawBlock:offset 1 *tmp476
+  865 op mul *tmp478 2 :unpackCfg:x
+  866 op add *tmp479 *tmp478 :drawBlock:offset
+  867 op mul *tmp480 2 :unpackCfg:y
+  868 op add *tmp481 *tmp480 :drawBlock:offset
+  869 op mul *tmp482 2 :unpackCfg:size
+  870 op mul *tmp483 90 :unpackCfg:rotation
+  871 draw image *tmp479 *tmp481 :unpackCfg:type *tmp482 *tmp483
+  872 label *label310
+  873 label *label311
+  874 label *label312
   875 label *label246
   876 label *label247
   877 sensor *tmp348 switch1 @enabled
 
  1009 wait 1e12
  1010 jump *label3 always
  1011 end
-    * label *label1
-    * read *tmp430 :drawBlock:cfg 0
-    * op sub *tmp431 *tmp430 35
-    * lookup block :unpackCfg:type *tmp431
-    * read *tmp434 :drawBlock:cfg 1
-    * op sub :unpackCfg:x *tmp434 42
-    * read *tmp438 :drawBlock:cfg 2
-    * op sub :unpackCfg:y *tmp438 42
-    * read *tmp463 :drawBlock:cfg 10
-    * op sub :unpackCfg:rotation *tmp463 35
-    * read *tmp466 :drawBlock:cfg 11
-    * op sub :unpackCfg:size *tmp466 35
-    * read *tmp469 :drawBlock:cfg 12
-    * op sub :unpackCfg:ind *tmp469 35
-    * label *label293
-    * op or *tmp471 :unpackCfg:x :unpackCfg:y
-    * jump *label294 equal *tmp471 false
-    * op shl *tmp473 1 :unpackCfg:ind
-    * op and *tmp474 .blocksBuilt *tmp473
-    * jump *label296 equal *tmp474 false
-    * draw col %[white]
-    * jump *label297 always
-    * label *label296
-    * draw color 128 255 128 128
-    * label *label297
-    * op and *tmp476 :unpackCfg:size 1
-    * op sub :drawBlock:offset 1 *tmp476
-    * op mul *tmp478 2 :unpackCfg:x
-    * op add *tmp479 *tmp478 :drawBlock:offset
-    * op mul *tmp480 2 :unpackCfg:y
-    * op add *tmp481 *tmp480 :drawBlock:offset
-    * op mul *tmp482 2 :unpackCfg:size
-    * op mul *tmp483 90 :unpackCfg:rotation
-    * draw image *tmp479 *tmp481 :unpackCfg:type *tmp482 *tmp483
-    * label *label294
-    * label *label295
-    * label *label292
-    * return :drawBlock*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   795 label *label203
   796 set :drawBlock:cfg :displayBaseMap:cfg
   797 label *label299
-    * read *tmp430 :drawBlock:cfg 0
+  798 read *tmp430 :displayBaseMap:cfg 0
   799 op sub *tmp431 *tmp430 35
   800 lookup block :unpackCfg:type *tmp431
-    * read *tmp434 :drawBlock:cfg 1
+  801 read *tmp434 :displayBaseMap:cfg 1
   802 op sub :unpackCfg:x *tmp434 42
-    * read *tmp438 :drawBlock:cfg 2
+  803 read *tmp438 :displayBaseMap:cfg 2
   804 op sub :unpackCfg:y *tmp438 42
-    * read *tmp463 :drawBlock:cfg 10
+  805 read *tmp463 :displayBaseMap:cfg 10
   806 op sub :unpackCfg:rotation *tmp463 35
-    * read *tmp466 :drawBlock:cfg 11
+  807 read *tmp466 :displayBaseMap:cfg 11
   808 op sub :unpackCfg:size *tmp466 35
-    * read *tmp469 :drawBlock:cfg 12
+  809 read *tmp469 :displayBaseMap:cfg 12
   810 op sub :unpackCfg:ind *tmp469 35
   811 label *label300
   812 op or *tmp471 :unpackCfg:x :unpackCfg:y

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   793 set :displayBaseMap:cfg ".&#ʭ#ǥƁ#ʭ#(I"
   794 setaddr *tmp343 *label244
   795 label *label203
-    * set :drawBlock:cfg :displayBaseMap:cfg
   796 label *label299
   797 read *tmp430 :displayBaseMap:cfg 0
   798 op sub *tmp431 *tmp430 35

Modifications by Unroll iteration loop at line 336:13 (+25 instructions):
 
   303 label *label76
   304 jump *label66 always
   305 label *label65
-    * set :drawMaterials:item @lead
-    * set :drawMaterials:target :drawMaterials:targetFactoryLead
-    * setaddr *tmp185 *label98
-    * jump *label95 always
-    * multilabel *label98 (m:marker0)
-    * set :drawMaterials:item @silicon
-    * set :drawMaterials:target :drawMaterials:targetFactorySilicon
-    * setaddr *tmp185 *label99
-    * label *label95
-    * jump *label100 lessThanEq :drawMaterials:target 0
-    * sensor *tmp188 .airFactory :drawMaterials:item
-    * set :drawItem.3:y :drawMaterials:y
-    * op mul *tmp193 122 *tmp188
-    * op div *tmp194 *tmp193 :drawMaterials:target
-    * op min :drawItem.3:length 122 *tmp194
-    * op mul *tmp197 :drawMaterials:col 88
-    * op add :drawItem.3:iconX 11 *tmp197
-    * op add :drawItem.3:barX 22 *tmp197
-    * op add :drawItem.3:textX 170 *tmp197
-    * draw col %[white]
-    * op add *tmp205 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp205 :drawMaterials:item 16 0
-    * draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
-    * draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
-    * op add *tmp207 :drawMaterials:y 7
-    * print :drawMaterials:target
-    * draw print :drawItem.3:textX *tmp207 @right
-    * label *label105
-    * label *label104
-    * op add :drawText.14:x *tmp197 171
-    * print :drawMaterials:target
-    * draw print :drawText.14:x *tmp207 @right
-    * label *label107
-    * label *label106
-    * label *label103
-    * op add :drawItem.3:col :drawMaterials:col 1
-    * jump *label108 lessThan :drawItem.3:col 1
-    * set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawMaterials:y 15
-    * label *label108
-    * label *label109
-    * label *label102
-    * set :drawMaterials:col :drawItem.3:col
-    * set :drawMaterials:y :drawItem.3:y
-    * label *label100
-    * label *label101
-    * label *label96
-    * multijump *tmp185 0 0 (m:marker0)
-    * multilabel *label99 (m:marker0)
-    * label *label97
+  306 set :drawMaterials:item @lead
+  307 set :drawMaterials:target :drawMaterials:targetFactoryLead
+  308 label *label313
+  309 jump *label322 lessThanEq :drawMaterials:target 0
+  310 sensor *tmp188 .airFactory :drawMaterials:item
+  311 set :drawItem.3:y :drawMaterials:y
+  312 op mul *tmp193 122 *tmp188
+  313 op div *tmp194 *tmp193 :drawMaterials:target
+  314 op min :drawItem.3:length 122 *tmp194
+  315 op mul *tmp197 :drawMaterials:col 88
+  316 op add :drawItem.3:iconX 11 *tmp197
+  317 op add :drawItem.3:barX 22 *tmp197
+  318 op add :drawItem.3:textX 170 *tmp197
+  319 draw col %[white]
+  320 op add *tmp205 :drawMaterials:y 5
+  321 draw image :drawItem.3:iconX *tmp205 :drawMaterials:item 16 0
+  322 draw color 0 128 0 255
+  323 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  324 draw color 0 255 0 255
+  325 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  326 op add *tmp207 :drawMaterials:y 7
+  327 print :drawMaterials:target
+  328 draw print :drawItem.3:textX *tmp207 @right
+  329 label *label314
+  330 label *label315
+  331 op add :drawText.14:x *tmp197 171
+  332 print :drawMaterials:target
+  333 draw print :drawText.14:x *tmp207 @right
+  334 label *label316
+  335 label *label317
+  336 label *label318
+  337 op add :drawItem.3:col :drawMaterials:col 1
+  338 jump *label319 lessThan :drawItem.3:col 1
+  339 set :drawItem.3:col 0
+  340 op sub :drawItem.3:y :drawMaterials:y 15
+  341 label *label319
+  342 label *label320
+  343 label *label321
+  344 set :drawMaterials:col :drawItem.3:col
+  345 set :drawMaterials:y :drawItem.3:y
+  346 label *label322
+  347 label *label323
+  348 label *label324
+  349 set :drawMaterials:item @silicon
+  350 set :drawMaterials:target :drawMaterials:targetFactorySilicon
+  351 label *label327
+  352 jump *label336 lessThanEq :drawMaterials:target 0
+  353 sensor *tmp188 .airFactory :drawMaterials:item
+  354 set :drawItem.3:y :drawMaterials:y
+  355 op mul *tmp193 122 *tmp188
+  356 op div *tmp194 *tmp193 :drawMaterials:target
+  357 op min :drawItem.3:length 122 *tmp194
+  358 op mul *tmp197 :drawMaterials:col 88
+  359 op add :drawItem.3:iconX 11 *tmp197
+  360 op add :drawItem.3:barX 22 *tmp197
+  361 op add :drawItem.3:textX 170 *tmp197
+  362 draw col %[white]
+  363 op add *tmp205 :drawMaterials:y 5
+  364 draw image :drawItem.3:iconX *tmp205 :drawMaterials:item 16 0
+  365 draw color 0 128 0 255
+  366 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  367 draw color 0 255 0 255
+  368 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  369 op add *tmp207 :drawMaterials:y 7
+  370 print :drawMaterials:target
+  371 draw print :drawItem.3:textX *tmp207 @right
+  372 label *label328
+  373 label *label329
+  374 op add :drawText.14:x *tmp197 171
+  375 print :drawMaterials:target
+  376 draw print :drawText.14:x *tmp207 @right
+  377 label *label330
+  378 label *label331
+  379 label *label332
+  380 op add :drawItem.3:col :drawMaterials:col 1
+  381 jump *label333 lessThan :drawItem.3:col 1
+  382 set :drawItem.3:col 0
+  383 op sub :drawItem.3:y :drawMaterials:y 15
+  384 label *label333
+  385 label *label334
+  386 label *label335
+  387 set :drawMaterials:col :drawItem.3:col
+  388 set :drawMaterials:y :drawItem.3:y
+  389 label *label336
+  390 label *label337
+  391 label *label338
+  392 label *label97
   393 label *label66
   394 jump *label51 always
   395 label *label50

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
   306 set :drawMaterials:item @lead
   307 set :drawMaterials:target :drawMaterials:targetFactoryLead
   308 label *label313
-    * jump *label322 lessThanEq :drawMaterials:target 0
-    * sensor *tmp188 .airFactory :drawMaterials:item
-    * set :drawItem.3:y :drawMaterials:y
+  309 jump *label322 lessThanEq :drawMaterials:targetFactoryLead 0
+  310 sensor *tmp188 .airFactory @lead
+  311 set :drawItem.3:y 90
   312 op mul *tmp193 122 *tmp188
-    * op div *tmp194 *tmp193 :drawMaterials:target
+  313 op div *tmp194 *tmp193 :drawMaterials:targetFactoryLead
   314 op min :drawItem.3:length 122 *tmp194
-    * op mul *tmp197 :drawMaterials:col 88
-    * op add :drawItem.3:iconX 11 *tmp197
-    * op add :drawItem.3:barX 22 *tmp197
-    * op add :drawItem.3:textX 170 *tmp197
+  315 op mul *tmp197 0 88
+  316 op add :drawItem.3:iconX 11 0
+  317 op add :drawItem.3:barX 22 0
+  318 op add :drawItem.3:textX 170 0
   319 draw col %[white]
-    * op add *tmp205 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp205 :drawMaterials:item 16 0
+  320 op add *tmp205 90 5
+  321 draw image 11 95 @lead 16 0
   322 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  323 draw rect 22 90 :drawItem.3:length 10
   324 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
-    * op add *tmp207 :drawMaterials:y 7
-    * print :drawMaterials:target
-    * draw print :drawItem.3:textX *tmp207 @right
+  325 draw lineRect 22 90 122 10
+  326 op add *tmp207 90 7
+  327 print :drawMaterials:targetFactoryLead
+  328 draw print 170 97 @right
   329 label *label314
   330 label *label315
-    * op add :drawText.14:x *tmp197 171
-    * print :drawMaterials:target
-    * draw print :drawText.14:x *tmp207 @right
+  331 op add :drawText.14:x 0 171
+  332 print :drawMaterials:targetFactoryLead
+  333 draw print 171 97 @right
   334 label *label316
   335 label *label317
   336 label *label318
-    * op add :drawItem.3:col :drawMaterials:col 1
-    * jump *label319 lessThan :drawItem.3:col 1
+  337 op add :drawItem.3:col 0 1
+  338 jump *label319 lessThan 1 1
   339 set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawMaterials:y 15
+  340 op sub :drawItem.3:y 90 15
   341 label *label319
   342 label *label320
   343 label *label321
-    * set :drawMaterials:col :drawItem.3:col
-    * set :drawMaterials:y :drawItem.3:y
+  344 set :drawMaterials:col 0
+  345 set :drawMaterials:y 75
   346 label *label322
   347 label *label323
   348 label *label324
   349 set :drawMaterials:item @silicon
   350 set :drawMaterials:target :drawMaterials:targetFactorySilicon
   351 label *label327
-    * jump *label336 lessThanEq :drawMaterials:target 0
-    * sensor *tmp188 .airFactory :drawMaterials:item
+  352 jump *label336 lessThanEq :drawMaterials:targetFactorySilicon 0
+  353 sensor *tmp188 .airFactory @silicon
   354 set :drawItem.3:y :drawMaterials:y
   355 op mul *tmp193 122 *tmp188
-    * op div *tmp194 *tmp193 :drawMaterials:target
+  356 op div *tmp194 *tmp193 :drawMaterials:targetFactorySilicon
   357 op min :drawItem.3:length 122 *tmp194
   358 op mul *tmp197 :drawMaterials:col 88
   359 op add :drawItem.3:iconX 11 *tmp197
 
   361 op add :drawItem.3:textX 170 *tmp197
   362 draw col %[white]
   363 op add *tmp205 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp205 :drawMaterials:item 16 0
+  364 draw image :drawItem.3:iconX *tmp205 @silicon 16 0
   365 draw color 0 128 0 255
   366 draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
   367 draw color 0 255 0 255
   368 draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
   369 op add *tmp207 :drawMaterials:y 7
-    * print :drawMaterials:target
+  370 print :drawMaterials:targetFactorySilicon
   371 draw print :drawItem.3:textX *tmp207 @right
   372 label *label328
   373 label *label329
   374 op add :drawText.14:x *tmp197 171
-    * print :drawMaterials:target
+  375 print :drawMaterials:targetFactorySilicon
   376 draw print :drawText.14:x *tmp207 @right
   377 label *label330
   378 label *label331
 
   384 label *label333
   385 label *label334
   386 label *label335
-    * set :drawMaterials:col :drawItem.3:col
-    * set :drawMaterials:y :drawItem.3:y
   387 label *label336
   388 label *label337
   389 label *label338

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-18 instructions):
 
   303 label *label76
   304 jump *label66 always
   305 label *label65
-    * set :drawMaterials:item @lead
-    * set :drawMaterials:target :drawMaterials:targetFactoryLead
   306 label *label313
   307 jump *label322 lessThanEq :drawMaterials:targetFactoryLead 0
   308 sensor *tmp188 .airFactory @lead
-    * set :drawItem.3:y 90
   309 op mul *tmp193 122 *tmp188
   310 op div *tmp194 *tmp193 :drawMaterials:targetFactoryLead
   311 op min :drawItem.3:length 122 *tmp194
-    * op mul *tmp197 0 88
-    * op add :drawItem.3:iconX 11 0
-    * op add :drawItem.3:barX 22 0
-    * op add :drawItem.3:textX 170 0
   312 draw col %[white]
-    * op add *tmp205 90 5
   313 draw image 11 95 @lead 16 0
   314 draw color 0 128 0 255
   315 draw rect 22 90 :drawItem.3:length 10
   316 draw color 0 255 0 255
   317 draw lineRect 22 90 122 10
-    * op add *tmp207 90 7
   318 print :drawMaterials:targetFactoryLead
   319 draw print 170 97 @right
   320 label *label314
   321 label *label315
-    * op add :drawText.14:x 0 171
   322 print :drawMaterials:targetFactoryLead
   323 draw print 171 97 @right
   324 label *label316
   325 label *label317
   326 label *label318
-    * op add :drawItem.3:col 0 1
   327 jump *label319 lessThan 1 1
-    * set :drawItem.3:col 0
-    * op sub :drawItem.3:y 90 15
   328 label *label319
   329 label *label320
   330 label *label321
 
   333 label *label322
   334 label *label323
   335 label *label324
-    * set :drawMaterials:item @silicon
-    * set :drawMaterials:target :drawMaterials:targetFactorySilicon
   336 label *label327
   337 jump *label336 lessThanEq :drawMaterials:targetFactorySilicon 0
   338 sensor *tmp188 .airFactory @silicon
-    * set :drawItem.3:y :drawMaterials:y
   339 op mul *tmp193 122 *tmp188
   340 op div *tmp194 *tmp193 :drawMaterials:targetFactorySilicon
   341 op min :drawItem.3:length 122 *tmp194
-    * op mul *tmp197 :drawMaterials:col 88
-    * op add :drawItem.3:iconX 11 *tmp197
-    * op add :drawItem.3:barX 22 *tmp197
-    * op add :drawItem.3:textX 170 *tmp197
+  342 op mul *tmp197 0 88
+  343 op add :drawItem.3:iconX 11 0
+  344 op add :drawItem.3:barX 22 0
+  345 op add :drawItem.3:textX 170 0
   346 draw col %[white]
   347 op add *tmp205 :drawMaterials:y 5
-    * draw image :drawItem.3:iconX *tmp205 @silicon 16 0
+  348 draw image 11 *tmp205 @silicon 16 0
   349 draw color 0 128 0 255
-    * draw rect :drawItem.3:barX :drawMaterials:y :drawItem.3:length 10
+  350 draw rect 22 :drawMaterials:y :drawItem.3:length 10
   351 draw color 0 255 0 255
-    * draw lineRect :drawItem.3:barX :drawMaterials:y 122 10
+  352 draw lineRect 22 :drawMaterials:y 122 10
   353 op add *tmp207 :drawMaterials:y 7
   354 print :drawMaterials:targetFactorySilicon
-    * draw print :drawItem.3:textX *tmp207 @right
+  355 draw print 170 *tmp207 @right
   356 label *label328
   357 label *label329
-    * op add :drawText.14:x *tmp197 171
+  358 op add :drawText.14:x 0 171
   359 print :drawMaterials:targetFactorySilicon
-    * draw print :drawText.14:x *tmp207 @right
+  360 draw print 171 *tmp207 @right
   361 label *label330
   362 label *label331
   363 label *label332
-    * op add :drawItem.3:col :drawMaterials:col 1
-    * jump *label333 lessThan :drawItem.3:col 1
-    * set :drawItem.3:col 0
-    * op sub :drawItem.3:y :drawMaterials:y 15
+  364 op add :drawItem.3:col 0 1
+  365 jump *label333 lessThan 1 1
   366 label *label333
   367 label *label334
   368 label *label335

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-7 instructions):
 
   328 label *label319
   329 label *label320
   330 label *label321
-    * set :drawMaterials:col 0
   331 set :drawMaterials:y 75
   332 label *label322
   333 label *label323
 
   338 op mul *tmp193 122 *tmp188
   339 op div *tmp194 *tmp193 :drawMaterials:targetFactorySilicon
   340 op min :drawItem.3:length 122 *tmp194
-    * op mul *tmp197 0 88
-    * op add :drawItem.3:iconX 11 0
-    * op add :drawItem.3:barX 22 0
-    * op add :drawItem.3:textX 170 0
   341 draw col %[white]
   342 op add *tmp205 :drawMaterials:y 5
   343 draw image 11 *tmp205 @silicon 16 0
 
   350 draw print 170 *tmp207 @right
   351 label *label328
   352 label *label329
-    * op add :drawText.14:x 0 171
   353 print :drawMaterials:targetFactorySilicon
   354 draw print 171 *tmp207 @right
   355 label *label330
   356 label *label331
   357 label *label332
-    * op add :drawItem.3:col 0 1
   358 jump *label333 lessThan 1 1
   359 label *label333
   360 label *label334

Modifications by Unroll iteration loop at line 354:13 (+178 instructions):
 
   423 label *label128
   424 label *label125
   425 jump *label130 equal .materialCount false
-    * set :drawMaterials:item.1 @copper
-    * set :drawMaterials:target.1 .targetCopper
-    * setaddr *tmp245 *label135
-    * jump *label132 always
-    * multilabel *label135 (m:marker1)
-    * set :drawMaterials:item.1 @lead
-    * set :drawMaterials:target.1 .targetLead
-    * setaddr *tmp245 *label136
-    * jump *label132 always
-    * multilabel *label136 (m:marker1)
-    * set :drawMaterials:item.1 @graphite
-    * set :drawMaterials:target.1 .targetGraphite
-    * setaddr *tmp245 *label137
-    * jump *label132 always
-    * multilabel *label137 (m:marker1)
-    * set :drawMaterials:item.1 @silicon
-    * set :drawMaterials:target.1 .targetSilicon
-    * setaddr *tmp245 *label138
-    * jump *label132 always
-    * multilabel *label138 (m:marker1)
-    * set :drawMaterials:item.1 @titanium
-    * set :drawMaterials:target.1 .targetTitanium
-    * setaddr *tmp245 *label139
-    * jump *label132 always
-    * multilabel *label139 (m:marker1)
-    * set :drawMaterials:item.1 @metaglass
-    * set :drawMaterials:target.1 .targetMetaglass
-    * setaddr *tmp245 *label140
-    * jump *label132 always
-    * multilabel *label140 (m:marker1)
-    * set :drawMaterials:item.1 @thorium
-    * set :drawMaterials:target.1 .targetThorium
-    * setaddr *tmp245 *label141
-    * label *label132
-    * jump *label142 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp248 .core :drawMaterials:item.1
-    * set :drawItem.5:y :drawMaterials:y
-    * op mul *tmp253 122 *tmp248
-    * op div *tmp254 *tmp253 :drawMaterials:target.1
-    * op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp257 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp257
-    * op add :drawItem.5:barX 22 *tmp257
-    * op add :drawItem.5:textX 170 *tmp257
-    * draw col %[white]
-    * op add *tmp265 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
-    * draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
-    * draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
-    * op add *tmp267 :drawMaterials:y 7
-    * print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp267 @right
-    * label *label147
-    * label *label146
-    * op add :drawText.22:x *tmp257 171
-    * print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp267 @right
-    * label *label149
-    * label *label148
-    * label *label145
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label150 lessThan :drawItem.5:col 1
-    * set :drawItem.5:col 0
-    * op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label150
-    * label *label151
-    * label *label144
-    * set :drawMaterials:col :drawItem.5:col
-    * set :drawMaterials:y :drawItem.5:y
-    * op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label152 greaterThan :drawMaterials:count 0
-    * jump *label134 always
-    * label *label152
-    * label *label153
-    * label *label142
-    * label *label143
-    * label *label133
-    * multijump *tmp245 0 0 (m:marker1)
-    * multilabel *label141 (m:marker1)
-    * label *label134
+  426 set :drawMaterials:item.1 @copper
+  427 set :drawMaterials:target.1 .targetCopper
+  428 label *label342
+  429 jump *label353 lessThanEq :drawMaterials:target.1 0
+  430 sensor *tmp248 .core :drawMaterials:item.1
+  431 set :drawItem.5:y :drawMaterials:y
+  432 op mul *tmp253 122 *tmp248
+  433 op div *tmp254 *tmp253 :drawMaterials:target.1
+  434 op min :drawItem.5:length 122 *tmp254
+  435 op mul *tmp257 :drawMaterials:col 88
+  436 op add :drawItem.5:iconX 11 *tmp257
+  437 op add :drawItem.5:barX 22 *tmp257
+  438 op add :drawItem.5:textX 170 *tmp257
+  439 draw col %[white]
+  440 op add *tmp265 :drawMaterials:y 5
+  441 draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
+  442 draw color 0 128 0 255
+  443 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  444 draw color 0 255 0 255
+  445 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  446 op add *tmp267 :drawMaterials:y 7
+  447 print :drawMaterials:target.1
+  448 draw print :drawItem.5:textX *tmp267 @right
+  449 label *label343
+  450 label *label344
+  451 op add :drawText.22:x *tmp257 171
+  452 print :drawMaterials:target.1
+  453 draw print :drawText.22:x *tmp267 @right
+  454 label *label345
+  455 label *label346
+  456 label *label347
+  457 op add :drawItem.5:col :drawMaterials:col 1
+  458 jump *label348 lessThan :drawItem.5:col 1
+  459 set :drawItem.5:col 0
+  460 op sub :drawItem.5:y :drawMaterials:y 15
+  461 label *label348
+  462 label *label349
+  463 label *label350
+  464 set :drawMaterials:col :drawItem.5:col
+  465 set :drawMaterials:y :drawItem.5:y
+  466 op sub :drawMaterials:count :drawMaterials:count 1
+  467 jump *label351 greaterThan :drawMaterials:count 0
+  468 jump *label134 always
+  469 label *label351
+  470 label *label352
+  471 label *label353
+  472 label *label354
+  473 label *label355
+  474 set :drawMaterials:item.1 @lead
+  475 set :drawMaterials:target.1 .targetLead
+  476 label *label358
+  477 jump *label369 lessThanEq :drawMaterials:target.1 0
+  478 sensor *tmp248 .core :drawMaterials:item.1
+  479 set :drawItem.5:y :drawMaterials:y
+  480 op mul *tmp253 122 *tmp248
+  481 op div *tmp254 *tmp253 :drawMaterials:target.1
+  482 op min :drawItem.5:length 122 *tmp254
+  483 op mul *tmp257 :drawMaterials:col 88
+  484 op add :drawItem.5:iconX 11 *tmp257
+  485 op add :drawItem.5:barX 22 *tmp257
+  486 op add :drawItem.5:textX 170 *tmp257
+  487 draw col %[white]
+  488 op add *tmp265 :drawMaterials:y 5
+  489 draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
+  490 draw color 0 128 0 255
+  491 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  492 draw color 0 255 0 255
+  493 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  494 op add *tmp267 :drawMaterials:y 7
+  495 print :drawMaterials:target.1
+  496 draw print :drawItem.5:textX *tmp267 @right
+  497 label *label359
+  498 label *label360
+  499 op add :drawText.22:x *tmp257 171
+  500 print :drawMaterials:target.1
+  501 draw print :drawText.22:x *tmp267 @right
+  502 label *label361
+  503 label *label362
+  504 label *label363
+  505 op add :drawItem.5:col :drawMaterials:col 1
+  506 jump *label364 lessThan :drawItem.5:col 1
+  507 set :drawItem.5:col 0
+  508 op sub :drawItem.5:y :drawMaterials:y 15
+  509 label *label364
+  510 label *label365
+  511 label *label366
+  512 set :drawMaterials:col :drawItem.5:col
+  513 set :drawMaterials:y :drawItem.5:y
+  514 op sub :drawMaterials:count :drawMaterials:count 1
+  515 jump *label367 greaterThan :drawMaterials:count 0
+  516 jump *label134 always
+  517 label *label367
+  518 label *label368
+  519 label *label369
+  520 label *label370
+  521 label *label371
+  522 set :drawMaterials:item.1 @graphite
+  523 set :drawMaterials:target.1 .targetGraphite
+  524 label *label374
+  525 jump *label385 lessThanEq :drawMaterials:target.1 0
+  526 sensor *tmp248 .core :drawMaterials:item.1
+  527 set :drawItem.5:y :drawMaterials:y
+  528 op mul *tmp253 122 *tmp248
+  529 op div *tmp254 *tmp253 :drawMaterials:target.1
+  530 op min :drawItem.5:length 122 *tmp254
+  531 op mul *tmp257 :drawMaterials:col 88
+  532 op add :drawItem.5:iconX 11 *tmp257
+  533 op add :drawItem.5:barX 22 *tmp257
+  534 op add :drawItem.5:textX 170 *tmp257
+  535 draw col %[white]
+  536 op add *tmp265 :drawMaterials:y 5
+  537 draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
+  538 draw color 0 128 0 255
+  539 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  540 draw color 0 255 0 255
+  541 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  542 op add *tmp267 :drawMaterials:y 7
+  543 print :drawMaterials:target.1
+  544 draw print :drawItem.5:textX *tmp267 @right
+  545 label *label375
+  546 label *label376
+  547 op add :drawText.22:x *tmp257 171
+  548 print :drawMaterials:target.1
+  549 draw print :drawText.22:x *tmp267 @right
+  550 label *label377
+  551 label *label378
+  552 label *label379
+  553 op add :drawItem.5:col :drawMaterials:col 1
+  554 jump *label380 lessThan :drawItem.5:col 1
+  555 set :drawItem.5:col 0
+  556 op sub :drawItem.5:y :drawMaterials:y 15
+  557 label *label380
+  558 label *label381
+  559 label *label382
+  560 set :drawMaterials:col :drawItem.5:col
+  561 set :drawMaterials:y :drawItem.5:y
+  562 op sub :drawMaterials:count :drawMaterials:count 1
+  563 jump *label383 greaterThan :drawMaterials:count 0
+  564 jump *label134 always
+  565 label *label383
+  566 label *label384
+  567 label *label385
+  568 label *label386
+  569 label *label387
+  570 set :drawMaterials:item.1 @silicon
+  571 set :drawMaterials:target.1 .targetSilicon
+  572 label *label390
+  573 jump *label401 lessThanEq :drawMaterials:target.1 0
+  574 sensor *tmp248 .core :drawMaterials:item.1
+  575 set :drawItem.5:y :drawMaterials:y
+  576 op mul *tmp253 122 *tmp248
+  577 op div *tmp254 *tmp253 :drawMaterials:target.1
+  578 op min :drawItem.5:length 122 *tmp254
+  579 op mul *tmp257 :drawMaterials:col 88
+  580 op add :drawItem.5:iconX 11 *tmp257
+  581 op add :drawItem.5:barX 22 *tmp257
+  582 op add :drawItem.5:textX 170 *tmp257
+  583 draw col %[white]
+  584 op add *tmp265 :drawMaterials:y 5
+  585 draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
+  586 draw color 0 128 0 255
+  587 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  588 draw color 0 255 0 255
+  589 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  590 op add *tmp267 :drawMaterials:y 7
+  591 print :drawMaterials:target.1
+  592 draw print :drawItem.5:textX *tmp267 @right
+  593 label *label391
+  594 label *label392
+  595 op add :drawText.22:x *tmp257 171
+  596 print :drawMaterials:target.1
+  597 draw print :drawText.22:x *tmp267 @right
+  598 label *label393
+  599 label *label394
+  600 label *label395
+  601 op add :drawItem.5:col :drawMaterials:col 1
+  602 jump *label396 lessThan :drawItem.5:col 1
+  603 set :drawItem.5:col 0
+  604 op sub :drawItem.5:y :drawMaterials:y 15
+  605 label *label396
+  606 label *label397
+  607 label *label398
+  608 set :drawMaterials:col :drawItem.5:col
+  609 set :drawMaterials:y :drawItem.5:y
+  610 op sub :drawMaterials:count :drawMaterials:count 1
+  611 jump *label399 greaterThan :drawMaterials:count 0
+  612 jump *label134 always
+  613 label *label399
+  614 label *label400
+  615 label *label401
+  616 label *label402
+  617 label *label403
+  618 set :drawMaterials:item.1 @titanium
+  619 set :drawMaterials:target.1 .targetTitanium
+  620 label *label406
+  621 jump *label417 lessThanEq :drawMaterials:target.1 0
+  622 sensor *tmp248 .core :drawMaterials:item.1
+  623 set :drawItem.5:y :drawMaterials:y
+  624 op mul *tmp253 122 *tmp248
+  625 op div *tmp254 *tmp253 :drawMaterials:target.1
+  626 op min :drawItem.5:length 122 *tmp254
+  627 op mul *tmp257 :drawMaterials:col 88
+  628 op add :drawItem.5:iconX 11 *tmp257
+  629 op add :drawItem.5:barX 22 *tmp257
+  630 op add :drawItem.5:textX 170 *tmp257
+  631 draw col %[white]
+  632 op add *tmp265 :drawMaterials:y 5
+  633 draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
+  634 draw color 0 128 0 255
+  635 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  636 draw color 0 255 0 255
+  637 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  638 op add *tmp267 :drawMaterials:y 7
+  639 print :drawMaterials:target.1
+  640 draw print :drawItem.5:textX *tmp267 @right
+  641 label *label407
+  642 label *label408
+  643 op add :drawText.22:x *tmp257 171
+  644 print :drawMaterials:target.1
+  645 draw print :drawText.22:x *tmp267 @right
+  646 label *label409
+  647 label *label410
+  648 label *label411
+  649 op add :drawItem.5:col :drawMaterials:col 1
+  650 jump *label412 lessThan :drawItem.5:col 1
+  651 set :drawItem.5:col 0
+  652 op sub :drawItem.5:y :drawMaterials:y 15
+  653 label *label412
+  654 label *label413
+  655 label *label414
+  656 set :drawMaterials:col :drawItem.5:col
+  657 set :drawMaterials:y :drawItem.5:y
+  658 op sub :drawMaterials:count :drawMaterials:count 1
+  659 jump *label415 greaterThan :drawMaterials:count 0
+  660 jump *label134 always
+  661 label *label415
+  662 label *label416
+  663 label *label417
+  664 label *label418
+  665 label *label419
+  666 set :drawMaterials:item.1 @metaglass
+  667 set :drawMaterials:target.1 .targetMetaglass
+  668 label *label422
+  669 jump *label433 lessThanEq :drawMaterials:target.1 0
+  670 sensor *tmp248 .core :drawMaterials:item.1
+  671 set :drawItem.5:y :drawMaterials:y
+  672 op mul *tmp253 122 *tmp248
+  673 op div *tmp254 *tmp253 :drawMaterials:target.1
+  674 op min :drawItem.5:length 122 *tmp254
+  675 op mul *tmp257 :drawMaterials:col 88
+  676 op add :drawItem.5:iconX 11 *tmp257
+  677 op add :drawItem.5:barX 22 *tmp257
+  678 op add :drawItem.5:textX 170 *tmp257
+  679 draw col %[white]
+  680 op add *tmp265 :drawMaterials:y 5
+  681 draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
+  682 draw color 0 128 0 255
+  683 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  684 draw color 0 255 0 255
+  685 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  686 op add *tmp267 :drawMaterials:y 7
+  687 print :drawMaterials:target.1
+  688 draw print :drawItem.5:textX *tmp267 @right
+  689 label *label423
+  690 label *label424
+  691 op add :drawText.22:x *tmp257 171
+  692 print :drawMaterials:target.1
+  693 draw print :drawText.22:x *tmp267 @right
+  694 label *label425
+  695 label *label426
+  696 label *label427
+  697 op add :drawItem.5:col :drawMaterials:col 1
+  698 jump *label428 lessThan :drawItem.5:col 1
+  699 set :drawItem.5:col 0
+  700 op sub :drawItem.5:y :drawMaterials:y 15
+  701 label *label428
+  702 label *label429
+  703 label *label430
+  704 set :drawMaterials:col :drawItem.5:col
+  705 set :drawMaterials:y :drawItem.5:y
+  706 op sub :drawMaterials:count :drawMaterials:count 1
+  707 jump *label431 greaterThan :drawMaterials:count 0
+  708 jump *label134 always
+  709 label *label431
+  710 label *label432
+  711 label *label433
+  712 label *label434
+  713 label *label435
+  714 set :drawMaterials:item.1 @thorium
+  715 set :drawMaterials:target.1 .targetThorium
+  716 label *label438
+  717 jump *label449 lessThanEq :drawMaterials:target.1 0
+  718 sensor *tmp248 .core :drawMaterials:item.1
+  719 set :drawItem.5:y :drawMaterials:y
+  720 op mul *tmp253 122 *tmp248
+  721 op div *tmp254 *tmp253 :drawMaterials:target.1
+  722 op min :drawItem.5:length 122 *tmp254
+  723 op mul *tmp257 :drawMaterials:col 88
+  724 op add :drawItem.5:iconX 11 *tmp257
+  725 op add :drawItem.5:barX 22 *tmp257
+  726 op add :drawItem.5:textX 170 *tmp257
+  727 draw col %[white]
+  728 op add *tmp265 :drawMaterials:y 5
+  729 draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
+  730 draw color 0 128 0 255
+  731 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  732 draw color 0 255 0 255
+  733 draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  734 op add *tmp267 :drawMaterials:y 7
+  735 print :drawMaterials:target.1
+  736 draw print :drawItem.5:textX *tmp267 @right
+  737 label *label439
+  738 label *label440
+  739 op add :drawText.22:x *tmp257 171
+  740 print :drawMaterials:target.1
+  741 draw print :drawText.22:x *tmp267 @right
+  742 label *label441
+  743 label *label442
+  744 label *label443
+  745 op add :drawItem.5:col :drawMaterials:col 1
+  746 jump *label444 lessThan :drawItem.5:col 1
+  747 set :drawItem.5:col 0
+  748 op sub :drawItem.5:y :drawMaterials:y 15
+  749 label *label444
+  750 label *label445
+  751 label *label446
+  752 set :drawMaterials:col :drawItem.5:col
+  753 set :drawMaterials:y :drawItem.5:y
+  754 op sub :drawMaterials:count :drawMaterials:count 1
+  755 jump *label447 greaterThan :drawMaterials:count 0
+  756 jump *label134 always
+  757 label *label447
+  758 label *label448
+  759 label *label449
+  760 label *label450
+  761 label *label451
+  762 label *label134
   763 label *label130
   764 label *label131
   765 label *label111

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
   427 set :drawMaterials:target.1 .targetCopper
   428 label *label342
   429 jump *label353 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp248 .core :drawMaterials:item.1
-    * set :drawItem.5:y :drawMaterials:y
+  430 sensor *tmp248 .core @copper
+  431 set :drawItem.5:y 90
   432 op mul *tmp253 122 *tmp248
   433 op div *tmp254 *tmp253 :drawMaterials:target.1
   434 op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp257 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp257
-    * op add :drawItem.5:barX 22 *tmp257
-    * op add :drawItem.5:textX 170 *tmp257
+  435 op mul *tmp257 0 88
+  436 op add :drawItem.5:iconX 11 0
+  437 op add :drawItem.5:barX 22 0
+  438 op add :drawItem.5:textX 170 0
   439 draw col %[white]
-    * op add *tmp265 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
+  440 op add *tmp265 90 5
+  441 draw image 11 95 @copper 16 0
   442 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  443 draw rect 22 90 :drawItem.5:length 10
   444 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
-    * op add *tmp267 :drawMaterials:y 7
+  445 draw lineRect 22 90 122 10
+  446 op add *tmp267 90 7
   447 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp267 @right
+  448 draw print 170 97 @right
   449 label *label343
   450 label *label344
-    * op add :drawText.22:x *tmp257 171
+  451 op add :drawText.22:x 0 171
   452 print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp267 @right
+  453 draw print 171 97 @right
   454 label *label345
   455 label *label346
   456 label *label347
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label348 lessThan :drawItem.5:col 1
+  457 op add :drawItem.5:col 0 1
+  458 jump *label348 lessThan 1 1
   459 set :drawItem.5:col 0
-    * op sub :drawItem.5:y :drawMaterials:y 15
+  460 op sub :drawItem.5:y 90 15
   461 label *label348
   462 label *label349
   463 label *label350
-    * set :drawMaterials:col :drawItem.5:col
-    * set :drawMaterials:y :drawItem.5:y
-    * op sub :drawMaterials:count :drawMaterials:count 1
+  464 set :drawMaterials:col 0
+  465 set :drawMaterials:y 75
+  466 op sub :drawMaterials:count .materialCount 1
   467 jump *label351 greaterThan :drawMaterials:count 0
   468 jump *label134 always
   469 label *label351
 
   475 set :drawMaterials:target.1 .targetLead
   476 label *label358
   477 jump *label369 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp248 .core :drawMaterials:item.1
+  478 sensor *tmp248 .core @lead
   479 set :drawItem.5:y :drawMaterials:y
   480 op mul *tmp253 122 *tmp248
   481 op div *tmp254 *tmp253 :drawMaterials:target.1
 
   486 op add :drawItem.5:textX 170 *tmp257
   487 draw col %[white]
   488 op add *tmp265 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
+  489 draw image :drawItem.5:iconX *tmp265 @lead 16 0
   490 draw color 0 128 0 255
   491 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   492 draw color 0 255 0 255
 
   523 set :drawMaterials:target.1 .targetGraphite
   524 label *label374
   525 jump *label385 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp248 .core :drawMaterials:item.1
+  526 sensor *tmp248 .core @graphite
   527 set :drawItem.5:y :drawMaterials:y
   528 op mul *tmp253 122 *tmp248
   529 op div *tmp254 *tmp253 :drawMaterials:target.1
 
   534 op add :drawItem.5:textX 170 *tmp257
   535 draw col %[white]
   536 op add *tmp265 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
+  537 draw image :drawItem.5:iconX *tmp265 @graphite 16 0
   538 draw color 0 128 0 255
   539 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   540 draw color 0 255 0 255
 
   571 set :drawMaterials:target.1 .targetSilicon
   572 label *label390
   573 jump *label401 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp248 .core :drawMaterials:item.1
+  574 sensor *tmp248 .core @silicon
   575 set :drawItem.5:y :drawMaterials:y
   576 op mul *tmp253 122 *tmp248
   577 op div *tmp254 *tmp253 :drawMaterials:target.1
 
   582 op add :drawItem.5:textX 170 *tmp257
   583 draw col %[white]
   584 op add *tmp265 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
+  585 draw image :drawItem.5:iconX *tmp265 @silicon 16 0
   586 draw color 0 128 0 255
   587 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   588 draw color 0 255 0 255
 
   619 set :drawMaterials:target.1 .targetTitanium
   620 label *label406
   621 jump *label417 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp248 .core :drawMaterials:item.1
+  622 sensor *tmp248 .core @titanium
   623 set :drawItem.5:y :drawMaterials:y
   624 op mul *tmp253 122 *tmp248
   625 op div *tmp254 *tmp253 :drawMaterials:target.1
 
   630 op add :drawItem.5:textX 170 *tmp257
   631 draw col %[white]
   632 op add *tmp265 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
+  633 draw image :drawItem.5:iconX *tmp265 @titanium 16 0
   634 draw color 0 128 0 255
   635 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   636 draw color 0 255 0 255
 
   667 set :drawMaterials:target.1 .targetMetaglass
   668 label *label422
   669 jump *label433 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp248 .core :drawMaterials:item.1
+  670 sensor *tmp248 .core @metaglass
   671 set :drawItem.5:y :drawMaterials:y
   672 op mul *tmp253 122 *tmp248
   673 op div *tmp254 *tmp253 :drawMaterials:target.1
 
   678 op add :drawItem.5:textX 170 *tmp257
   679 draw col %[white]
   680 op add *tmp265 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
+  681 draw image :drawItem.5:iconX *tmp265 @metaglass 16 0
   682 draw color 0 128 0 255
   683 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   684 draw color 0 255 0 255
 
   715 set :drawMaterials:target.1 .targetThorium
   716 label *label438
   717 jump *label449 lessThanEq :drawMaterials:target.1 0
-    * sensor *tmp248 .core :drawMaterials:item.1
+  718 sensor *tmp248 .core @thorium
   719 set :drawItem.5:y :drawMaterials:y
   720 op mul *tmp253 122 *tmp248
   721 op div *tmp254 *tmp253 :drawMaterials:target.1
 
   726 op add :drawItem.5:textX 170 *tmp257
   727 draw col %[white]
   728 op add *tmp265 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp265 :drawMaterials:item.1 16 0
+  729 draw image :drawItem.5:iconX *tmp265 @thorium 16 0
   730 draw color 0 128 0 255
   731 draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
   732 draw color 0 255 0 255
 
   749 label *label444
   750 label *label445
   751 label *label446
-    * set :drawMaterials:col :drawItem.5:col
-    * set :drawMaterials:y :drawItem.5:y
   752 op sub :drawMaterials:count :drawMaterials:count 1
   753 jump *label447 greaterThan :drawMaterials:count 0
   754 jump *label134 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-21 instructions):
 
   423 label *label128
   424 label *label125
   425 jump *label130 equal .materialCount false
-    * set :drawMaterials:item.1 @copper
   426 set :drawMaterials:target.1 .targetCopper
   427 label *label342
   428 jump *label353 lessThanEq :drawMaterials:target.1 0
   429 sensor *tmp248 .core @copper
-    * set :drawItem.5:y 90
   430 op mul *tmp253 122 *tmp248
   431 op div *tmp254 *tmp253 :drawMaterials:target.1
   432 op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp257 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   433 draw col %[white]
-    * op add *tmp265 90 5
   434 draw image 11 95 @copper 16 0
   435 draw color 0 128 0 255
   436 draw rect 22 90 :drawItem.5:length 10
   437 draw color 0 255 0 255
   438 draw lineRect 22 90 122 10
-    * op add *tmp267 90 7
   439 print :drawMaterials:target.1
   440 draw print 170 97 @right
   441 label *label343
   442 label *label344
-    * op add :drawText.22:x 0 171
   443 print :drawMaterials:target.1
   444 draw print 171 97 @right
   445 label *label345
   446 label *label346
   447 label *label347
-    * op add :drawItem.5:col 0 1
   448 jump *label348 lessThan 1 1
-    * set :drawItem.5:col 0
-    * op sub :drawItem.5:y 90 15
   449 label *label348
   450 label *label349
   451 label *label350
 
   459 label *label353
   460 label *label354
   461 label *label355
-    * set :drawMaterials:item.1 @lead
   462 set :drawMaterials:target.1 .targetLead
   463 label *label358
   464 jump *label369 lessThanEq :drawMaterials:target.1 0
 
   467 op mul *tmp253 122 *tmp248
   468 op div *tmp254 *tmp253 :drawMaterials:target.1
   469 op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp257 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp257
-    * op add :drawItem.5:barX 22 *tmp257
-    * op add :drawItem.5:textX 170 *tmp257
+  470 op mul *tmp257 0 88
+  471 op add :drawItem.5:iconX 11 0
+  472 op add :drawItem.5:barX 22 0
+  473 op add :drawItem.5:textX 170 0
   474 draw col %[white]
   475 op add *tmp265 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp265 @lead 16 0
+  476 draw image 11 *tmp265 @lead 16 0
   477 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  478 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   479 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  480 draw lineRect 22 :drawMaterials:y 122 10
   481 op add *tmp267 :drawMaterials:y 7
   482 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp267 @right
+  483 draw print 170 *tmp267 @right
   484 label *label359
   485 label *label360
-    * op add :drawText.22:x *tmp257 171
+  486 op add :drawText.22:x 0 171
   487 print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp267 @right
+  488 draw print 171 *tmp267 @right
   489 label *label361
   490 label *label362
   491 label *label363
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label364 lessThan :drawItem.5:col 1
+  492 op add :drawItem.5:col 0 1
+  493 jump *label364 lessThan 1 1
   494 set :drawItem.5:col 0
   495 op sub :drawItem.5:y :drawMaterials:y 15
   496 label *label364
   497 label *label365
   498 label *label366
-    * set :drawMaterials:col :drawItem.5:col
+  499 set :drawMaterials:col 0
   500 set :drawMaterials:y :drawItem.5:y
   501 op sub :drawMaterials:count :drawMaterials:count 1
   502 jump *label367 greaterThan :drawMaterials:count 0
 
   506 label *label369
   507 label *label370
   508 label *label371
-    * set :drawMaterials:item.1 @graphite
   509 set :drawMaterials:target.1 .targetGraphite
   510 label *label374
   511 jump *label385 lessThanEq :drawMaterials:target.1 0
 
   553 label *label385
   554 label *label386
   555 label *label387
-    * set :drawMaterials:item.1 @silicon
   556 set :drawMaterials:target.1 .targetSilicon
   557 label *label390
   558 jump *label401 lessThanEq :drawMaterials:target.1 0
 
   600 label *label401
   601 label *label402
   602 label *label403
-    * set :drawMaterials:item.1 @titanium
   603 set :drawMaterials:target.1 .targetTitanium
   604 label *label406
   605 jump *label417 lessThanEq :drawMaterials:target.1 0
 
   647 label *label417
   648 label *label418
   649 label *label419
-    * set :drawMaterials:item.1 @metaglass
   650 set :drawMaterials:target.1 .targetMetaglass
   651 label *label422
   652 jump *label433 lessThanEq :drawMaterials:target.1 0
 
   694 label *label433
   695 label *label434
   696 label *label435
-    * set :drawMaterials:item.1 @thorium
   697 set :drawMaterials:target.1 .targetThorium
   698 label *label438
   699 jump *label449 lessThanEq :drawMaterials:target.1 0
   700 sensor *tmp248 .core @thorium
-    * set :drawItem.5:y :drawMaterials:y
   701 op mul *tmp253 122 *tmp248
   702 op div *tmp254 *tmp253 :drawMaterials:target.1
   703 op min :drawItem.5:length 122 *tmp254
 
   725 label *label443
   726 op add :drawItem.5:col :drawMaterials:col 1
   727 jump *label444 lessThan :drawItem.5:col 1
-    * set :drawItem.5:col 0
-    * op sub :drawItem.5:y :drawMaterials:y 15
   728 label *label444
   729 label *label445
   730 label *label446

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-8 instructions):
 
   463 label *label358
   464 jump *label369 lessThanEq :drawMaterials:target.1 0
   465 sensor *tmp248 .core @lead
-    * set :drawItem.5:y :drawMaterials:y
   466 op mul *tmp253 122 *tmp248
   467 op div *tmp254 *tmp253 :drawMaterials:target.1
   468 op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp257 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   469 draw col %[white]
   470 op add *tmp265 :drawMaterials:y 5
   471 draw image 11 *tmp265 @lead 16 0
 
   478 draw print 170 *tmp267 @right
   479 label *label359
   480 label *label360
-    * op add :drawText.22:x 0 171
   481 print :drawMaterials:target.1
   482 draw print 171 *tmp267 @right
   483 label *label361
   484 label *label362
   485 label *label363
-    * op add :drawItem.5:col 0 1
   486 jump *label364 lessThan 1 1
-    * set :drawItem.5:col 0
   487 op sub :drawItem.5:y :drawMaterials:y 15
   488 label *label364
   489 label *label365
 
   506 op mul *tmp253 122 *tmp248
   507 op div *tmp254 *tmp253 :drawMaterials:target.1
   508 op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp257 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp257
-    * op add :drawItem.5:barX 22 *tmp257
-    * op add :drawItem.5:textX 170 *tmp257
+  509 op mul *tmp257 0 88
+  510 op add :drawItem.5:iconX 11 0
+  511 op add :drawItem.5:barX 22 0
+  512 op add :drawItem.5:textX 170 0
   513 draw col %[white]
   514 op add *tmp265 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp265 @graphite 16 0
+  515 draw image 11 *tmp265 @graphite 16 0
   516 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  517 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   518 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  519 draw lineRect 22 :drawMaterials:y 122 10
   520 op add *tmp267 :drawMaterials:y 7
   521 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp267 @right
+  522 draw print 170 *tmp267 @right
   523 label *label375
   524 label *label376
-    * op add :drawText.22:x *tmp257 171
+  525 op add :drawText.22:x 0 171
   526 print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp267 @right
+  527 draw print 171 *tmp267 @right
   528 label *label377
   529 label *label378
   530 label *label379
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label380 lessThan :drawItem.5:col 1
+  531 op add :drawItem.5:col 0 1
+  532 jump *label380 lessThan 1 1
   533 set :drawItem.5:col 0
   534 op sub :drawItem.5:y :drawMaterials:y 15
   535 label *label380
   536 label *label381
   537 label *label382
-    * set :drawMaterials:col :drawItem.5:col
+  538 set :drawMaterials:col 0
   539 set :drawMaterials:y :drawItem.5:y
   540 op sub :drawMaterials:count :drawMaterials:count 1
   541 jump *label383 greaterThan :drawMaterials:count 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-8 instructions):
 
   502 label *label374
   503 jump *label385 lessThanEq :drawMaterials:target.1 0
   504 sensor *tmp248 .core @graphite
-    * set :drawItem.5:y :drawMaterials:y
   505 op mul *tmp253 122 *tmp248
   506 op div *tmp254 *tmp253 :drawMaterials:target.1
   507 op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp257 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   508 draw col %[white]
   509 op add *tmp265 :drawMaterials:y 5
   510 draw image 11 *tmp265 @graphite 16 0
 
   517 draw print 170 *tmp267 @right
   518 label *label375
   519 label *label376
-    * op add :drawText.22:x 0 171
   520 print :drawMaterials:target.1
   521 draw print 171 *tmp267 @right
   522 label *label377
   523 label *label378
   524 label *label379
-    * op add :drawItem.5:col 0 1
   525 jump *label380 lessThan 1 1
-    * set :drawItem.5:col 0
   526 op sub :drawItem.5:y :drawMaterials:y 15
   527 label *label380
   528 label *label381
 
   545 op mul *tmp253 122 *tmp248
   546 op div *tmp254 *tmp253 :drawMaterials:target.1
   547 op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp257 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp257
-    * op add :drawItem.5:barX 22 *tmp257
-    * op add :drawItem.5:textX 170 *tmp257
+  548 op mul *tmp257 0 88
+  549 op add :drawItem.5:iconX 11 0
+  550 op add :drawItem.5:barX 22 0
+  551 op add :drawItem.5:textX 170 0
   552 draw col %[white]
   553 op add *tmp265 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp265 @silicon 16 0
+  554 draw image 11 *tmp265 @silicon 16 0
   555 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  556 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   557 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  558 draw lineRect 22 :drawMaterials:y 122 10
   559 op add *tmp267 :drawMaterials:y 7
   560 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp267 @right
+  561 draw print 170 *tmp267 @right
   562 label *label391
   563 label *label392
-    * op add :drawText.22:x *tmp257 171
+  564 op add :drawText.22:x 0 171
   565 print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp267 @right
+  566 draw print 171 *tmp267 @right
   567 label *label393
   568 label *label394
   569 label *label395
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label396 lessThan :drawItem.5:col 1
+  570 op add :drawItem.5:col 0 1
+  571 jump *label396 lessThan 1 1
   572 set :drawItem.5:col 0
   573 op sub :drawItem.5:y :drawMaterials:y 15
   574 label *label396
   575 label *label397
   576 label *label398
-    * set :drawMaterials:col :drawItem.5:col
+  577 set :drawMaterials:col 0
   578 set :drawMaterials:y :drawItem.5:y
   579 op sub :drawMaterials:count :drawMaterials:count 1
   580 jump *label399 greaterThan :drawMaterials:count 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-8 instructions):
 
   541 label *label390
   542 jump *label401 lessThanEq :drawMaterials:target.1 0
   543 sensor *tmp248 .core @silicon
-    * set :drawItem.5:y :drawMaterials:y
   544 op mul *tmp253 122 *tmp248
   545 op div *tmp254 *tmp253 :drawMaterials:target.1
   546 op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp257 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   547 draw col %[white]
   548 op add *tmp265 :drawMaterials:y 5
   549 draw image 11 *tmp265 @silicon 16 0
 
   556 draw print 170 *tmp267 @right
   557 label *label391
   558 label *label392
-    * op add :drawText.22:x 0 171
   559 print :drawMaterials:target.1
   560 draw print 171 *tmp267 @right
   561 label *label393
   562 label *label394
   563 label *label395
-    * op add :drawItem.5:col 0 1
   564 jump *label396 lessThan 1 1
-    * set :drawItem.5:col 0
   565 op sub :drawItem.5:y :drawMaterials:y 15
   566 label *label396
   567 label *label397
 
   584 op mul *tmp253 122 *tmp248
   585 op div *tmp254 *tmp253 :drawMaterials:target.1
   586 op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp257 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp257
-    * op add :drawItem.5:barX 22 *tmp257
-    * op add :drawItem.5:textX 170 *tmp257
+  587 op mul *tmp257 0 88
+  588 op add :drawItem.5:iconX 11 0
+  589 op add :drawItem.5:barX 22 0
+  590 op add :drawItem.5:textX 170 0
   591 draw col %[white]
   592 op add *tmp265 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp265 @titanium 16 0
+  593 draw image 11 *tmp265 @titanium 16 0
   594 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  595 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   596 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  597 draw lineRect 22 :drawMaterials:y 122 10
   598 op add *tmp267 :drawMaterials:y 7
   599 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp267 @right
+  600 draw print 170 *tmp267 @right
   601 label *label407
   602 label *label408
-    * op add :drawText.22:x *tmp257 171
+  603 op add :drawText.22:x 0 171
   604 print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp267 @right
+  605 draw print 171 *tmp267 @right
   606 label *label409
   607 label *label410
   608 label *label411
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label412 lessThan :drawItem.5:col 1
+  609 op add :drawItem.5:col 0 1
+  610 jump *label412 lessThan 1 1
   611 set :drawItem.5:col 0
   612 op sub :drawItem.5:y :drawMaterials:y 15
   613 label *label412
   614 label *label413
   615 label *label414
-    * set :drawMaterials:col :drawItem.5:col
+  616 set :drawMaterials:col 0
   617 set :drawMaterials:y :drawItem.5:y
   618 op sub :drawMaterials:count :drawMaterials:count 1
   619 jump *label415 greaterThan :drawMaterials:count 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-8 instructions):
 
   580 label *label406
   581 jump *label417 lessThanEq :drawMaterials:target.1 0
   582 sensor *tmp248 .core @titanium
-    * set :drawItem.5:y :drawMaterials:y
   583 op mul *tmp253 122 *tmp248
   584 op div *tmp254 *tmp253 :drawMaterials:target.1
   585 op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp257 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   586 draw col %[white]
   587 op add *tmp265 :drawMaterials:y 5
   588 draw image 11 *tmp265 @titanium 16 0
 
   595 draw print 170 *tmp267 @right
   596 label *label407
   597 label *label408
-    * op add :drawText.22:x 0 171
   598 print :drawMaterials:target.1
   599 draw print 171 *tmp267 @right
   600 label *label409
   601 label *label410
   602 label *label411
-    * op add :drawItem.5:col 0 1
   603 jump *label412 lessThan 1 1
-    * set :drawItem.5:col 0
   604 op sub :drawItem.5:y :drawMaterials:y 15
   605 label *label412
   606 label *label413
 
   623 op mul *tmp253 122 *tmp248
   624 op div *tmp254 *tmp253 :drawMaterials:target.1
   625 op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp257 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp257
-    * op add :drawItem.5:barX 22 *tmp257
-    * op add :drawItem.5:textX 170 *tmp257
+  626 op mul *tmp257 0 88
+  627 op add :drawItem.5:iconX 11 0
+  628 op add :drawItem.5:barX 22 0
+  629 op add :drawItem.5:textX 170 0
   630 draw col %[white]
   631 op add *tmp265 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp265 @metaglass 16 0
+  632 draw image 11 *tmp265 @metaglass 16 0
   633 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  634 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   635 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  636 draw lineRect 22 :drawMaterials:y 122 10
   637 op add *tmp267 :drawMaterials:y 7
   638 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp267 @right
+  639 draw print 170 *tmp267 @right
   640 label *label423
   641 label *label424
-    * op add :drawText.22:x *tmp257 171
+  642 op add :drawText.22:x 0 171
   643 print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp267 @right
+  644 draw print 171 *tmp267 @right
   645 label *label425
   646 label *label426
   647 label *label427
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label428 lessThan :drawItem.5:col 1
+  648 op add :drawItem.5:col 0 1
+  649 jump *label428 lessThan 1 1
   650 set :drawItem.5:col 0
   651 op sub :drawItem.5:y :drawMaterials:y 15
   652 label *label428
   653 label *label429
   654 label *label430
-    * set :drawMaterials:col :drawItem.5:col
+  655 set :drawMaterials:col 0
   656 set :drawMaterials:y :drawItem.5:y
   657 op sub :drawMaterials:count :drawMaterials:count 1
   658 jump *label431 greaterThan :drawMaterials:count 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-8 instructions):
 
   619 label *label422
   620 jump *label433 lessThanEq :drawMaterials:target.1 0
   621 sensor *tmp248 .core @metaglass
-    * set :drawItem.5:y :drawMaterials:y
   622 op mul *tmp253 122 *tmp248
   623 op div *tmp254 *tmp253 :drawMaterials:target.1
   624 op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp257 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   625 draw col %[white]
   626 op add *tmp265 :drawMaterials:y 5
   627 draw image 11 *tmp265 @metaglass 16 0
 
   634 draw print 170 *tmp267 @right
   635 label *label423
   636 label *label424
-    * op add :drawText.22:x 0 171
   637 print :drawMaterials:target.1
   638 draw print 171 *tmp267 @right
   639 label *label425
   640 label *label426
   641 label *label427
-    * op add :drawItem.5:col 0 1
   642 jump *label428 lessThan 1 1
-    * set :drawItem.5:col 0
   643 op sub :drawItem.5:y :drawMaterials:y 15
   644 label *label428
   645 label *label429
 
   661 op mul *tmp253 122 *tmp248
   662 op div *tmp254 *tmp253 :drawMaterials:target.1
   663 op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp257 :drawMaterials:col 88
-    * op add :drawItem.5:iconX 11 *tmp257
-    * op add :drawItem.5:barX 22 *tmp257
-    * op add :drawItem.5:textX 170 *tmp257
+  664 op mul *tmp257 0 88
+  665 op add :drawItem.5:iconX 11 0
+  666 op add :drawItem.5:barX 22 0
+  667 op add :drawItem.5:textX 170 0
   668 draw col %[white]
   669 op add *tmp265 :drawMaterials:y 5
-    * draw image :drawItem.5:iconX *tmp265 @thorium 16 0
+  670 draw image 11 *tmp265 @thorium 16 0
   671 draw color 0 128 0 255
-    * draw rect :drawItem.5:barX :drawMaterials:y :drawItem.5:length 10
+  672 draw rect 22 :drawMaterials:y :drawItem.5:length 10
   673 draw color 0 255 0 255
-    * draw lineRect :drawItem.5:barX :drawMaterials:y 122 10
+  674 draw lineRect 22 :drawMaterials:y 122 10
   675 op add *tmp267 :drawMaterials:y 7
   676 print :drawMaterials:target.1
-    * draw print :drawItem.5:textX *tmp267 @right
+  677 draw print 170 *tmp267 @right
   678 label *label439
   679 label *label440
-    * op add :drawText.22:x *tmp257 171
+  680 op add :drawText.22:x 0 171
   681 print :drawMaterials:target.1
-    * draw print :drawText.22:x *tmp267 @right
+  682 draw print 171 *tmp267 @right
   683 label *label441
   684 label *label442
   685 label *label443
-    * op add :drawItem.5:col :drawMaterials:col 1
-    * jump *label444 lessThan :drawItem.5:col 1
+  686 op add :drawItem.5:col 0 1
+  687 jump *label444 lessThan 1 1
   688 label *label444
   689 label *label445
   690 label *label446

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-13 instructions):
 
   151 label *label45
   152 label *label46
   153 label *label25
-    * set :drawMaterials:col 0
   154 set :drawMaterials:y 90
   155 jump *label50 notEqual .nextBlock null
   156 sensor *tmp78 .airFactory @progress
 
   448 label *label348
   449 label *label349
   450 label *label350
-    * set :drawMaterials:col 0
   451 set :drawMaterials:y 75
   452 op sub :drawMaterials:count .materialCount 1
   453 jump *label351 greaterThan :drawMaterials:count 0
 
   486 label *label364
   487 label *label365
   488 label *label366
-    * set :drawMaterials:col 0
   489 set :drawMaterials:y :drawItem.5:y
   490 op sub :drawMaterials:count :drawMaterials:count 1
   491 jump *label367 greaterThan :drawMaterials:count 0
 
   524 label *label380
   525 label *label381
   526 label *label382
-    * set :drawMaterials:col 0
   527 set :drawMaterials:y :drawItem.5:y
   528 op sub :drawMaterials:count :drawMaterials:count 1
   529 jump *label383 greaterThan :drawMaterials:count 0
 
   562 label *label396
   563 label *label397
   564 label *label398
-    * set :drawMaterials:col 0
   565 set :drawMaterials:y :drawItem.5:y
   566 op sub :drawMaterials:count :drawMaterials:count 1
   567 jump *label399 greaterThan :drawMaterials:count 0
 
   600 label *label412
   601 label *label413
   602 label *label414
-    * set :drawMaterials:col 0
   603 set :drawMaterials:y :drawItem.5:y
   604 op sub :drawMaterials:count :drawMaterials:count 1
   605 jump *label415 greaterThan :drawMaterials:count 0
 
   638 label *label428
   639 label *label429
   640 label *label430
-    * set :drawMaterials:col 0
   641 set :drawMaterials:y :drawItem.5:y
   642 op sub :drawMaterials:count :drawMaterials:count 1
   643 jump *label431 greaterThan :drawMaterials:count 0
 
   654 op mul *tmp253 122 *tmp248
   655 op div *tmp254 *tmp253 :drawMaterials:target.1
   656 op min :drawItem.5:length 122 *tmp254
-    * op mul *tmp257 0 88
-    * op add :drawItem.5:iconX 11 0
-    * op add :drawItem.5:barX 22 0
-    * op add :drawItem.5:textX 170 0
   657 draw col %[white]
   658 op add *tmp265 :drawMaterials:y 5
   659 draw image 11 *tmp265 @thorium 16 0
 
   666 draw print 170 *tmp267 @right
   667 label *label439
   668 label *label440
-    * op add :drawText.22:x 0 171
   669 print :drawMaterials:target.1
   670 draw print 171 *tmp267 @right
   671 label *label441
   672 label *label442
   673 label *label443
-    * op add :drawItem.5:col 0 1
   674 jump *label444 lessThan 1 1
   675 label *label444
   676 label *label445

Modifications by Iterated phase, Jump Normalization, pass 2, iteration 1 (-15 instructions):
 
   240 label *label72
   241 label *label71
   242 label *label68
-    * jump *label73 lessThan 1 1
   243 label *label73
   244 label *label74
   245 label *label67
 
   265 label *label82
   266 label *label81
   267 label *label78
-    * jump *label83 lessThan 1 1
   268 label *label83
   269 label *label84
   270 label *label77
 
   290 label *label92
   291 label *label91
   292 label *label88
-    * jump *label93 lessThan 1 1
   293 label *label93
   294 label *label94
   295 label *label87
 
   320 label *label316
   321 label *label317
   322 label *label318
-    * jump *label319 lessThan 1 1
   323 label *label319
   324 label *label320
   325 label *label321
 
   350 label *label330
   351 label *label331
   352 label *label332
-    * jump *label333 lessThan 1 1
   353 label *label333
   354 label *label334
   355 label *label335
 
   399 label *label122
   400 label *label121
   401 label *label118
-    * jump *label123 lessThan 1 1
   402 label *label123
   403 label *label124
   404 label *label117
 
   438 label *label345
   439 label *label346
   440 label *label347
-    * jump *label348 lessThan 1 1
   441 label *label348
   442 label *label349
   443 label *label350
 
   474 label *label361
   475 label *label362
   476 label *label363
-    * jump *label364 lessThan 1 1
   477 op sub :drawItem.5:y :drawMaterials:y 15
   478 label *label364
   479 label *label365
 
   511 label *label377
   512 label *label378
   513 label *label379
-    * jump *label380 lessThan 1 1
   514 op sub :drawItem.5:y :drawMaterials:y 15
   515 label *label380
   516 label *label381
 
   548 label *label393
   549 label *label394
   550 label *label395
-    * jump *label396 lessThan 1 1
   551 op sub :drawItem.5:y :drawMaterials:y 15
   552 label *label396
   553 label *label397
 
   585 label *label409
   586 label *label410
   587 label *label411
-    * jump *label412 lessThan 1 1
   588 op sub :drawItem.5:y :drawMaterials:y 15
   589 label *label412
   590 label *label413
 
   622 label *label425
   623 label *label426
   624 label *label427
-    * jump *label428 lessThan 1 1
   625 op sub :drawItem.5:y :drawMaterials:y 15
   626 label *label428
   627 label *label429
 
   659 label *label441
   660 label *label442
   661 label *label443
-    * jump *label444 lessThan 1 1
   662 label *label444
   663 label *label445
   664 label *label446
 
   713 label *label170
   714 label *label169
   715 label *label166
-    * jump *label171 lessThan 1 1
   716 label *label171
   717 label *label172
   718 label *label165
 
   746 label *label179
   747 label *label178
   748 label *label175
-    * jump *label180 lessThan 1 1
   749 label *label180
   750 label *label181
   751 label *label174

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-5 instructions):
 
   102 set *tmp55 ""
   103 jump *label38 greaterThanEq :drawHeader:s 10
   104 set *tmp55 "0"
-    * jump *label38 always
   105 label *label38
   106 print :drawHeader:m
   107 print ":"
 
   663 label *label446
   664 op sub :drawMaterials:count :drawMaterials:count 1
   665 jump *label447 greaterThan :drawMaterials:count 0
-    * jump *label134 always
   666 label *label447
   667 label *label448
   668 label *label449
 
   678 set *tmp274 25
   679 jump *label156 greaterThanEq .materialCount 4
   680 set *tmp274 40
-    * jump *label156 always
   681 label *label156
   682 print "Builder"
   683 draw print 22 *tmp274 @bottomLeft
 
  1092 jump *label261 lessThanEq :displayRecord:id @blockCount
  1093 op sub *tmp370 :displayRecord:id @blockCount
  1094 lookup unit *tmp369 *tmp370
-    * jump *label261 always
  1095 label *label261
  1096 op div *tmp373 :displayLog:record 1000
  1097 op idiv :displayRecord:t *tmp373 120
 
  1100 set *tmp379 ""
  1101 jump *label263 greaterThanEq :displayRecord:s 10
  1102 set *tmp379 "0"
-    * jump *label263 always
  1103 label *label263
  1104 print :displayRecord:m
  1105 print ":"

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-1 instructions):
 
   662 label *label445
   663 label *label446
   664 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label447 greaterThan :drawMaterials:count 0
   665 label *label447
   666 label *label448
   667 label *label449

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   690 jump *label162 notEqual .transportItem null
   691 op sub *tmp278 *tmp274 15
   692 set :drawItem.6:target .transportTarget
-    * op div *tmp284 0 :drawItem.6:target
+  693 set *tmp284 0
   694 op min :drawItem.6:length 122 *tmp284
   695 draw col %[white]
   696 op sub *tmp295 *tmp274 10

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-2 instructions):
 
   661 label *label444
   662 label *label445
   663 label *label446
-    * op sub :drawMaterials:count :drawMaterials:count 1
   664 label *label447
   665 label *label448
   666 label *label449
 
   688 label *label157
   689 jump *label162 notEqual .transportItem null
   690 op sub *tmp278 *tmp274 15
-    * set :drawItem.6:target .transportTarget
   691 set *tmp284 0
-    * op min :drawItem.6:length 122 *tmp284
+  692 op min :drawItem.6:length 122 0
   693 draw col %[white]
   694 op sub *tmp295 *tmp274 10
   695 draw image 11 *tmp295 @poly 16 0
   696 draw color 0 128 0 255
-    * draw rect 22 *tmp278 :drawItem.6:length 10
+  697 draw rect 22 *tmp278 0 10
   698 draw color 0 255 0 255
   699 draw lineRect 22 *tmp278 122 10
   700 op sub *tmp297 *tmp274 8

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-2 instructions):
 
   688 label *label157
   689 jump *label162 notEqual .transportItem null
   690 op sub *tmp278 *tmp274 15
-    * set *tmp284 0
-    * op min :drawItem.6:length 122 0
   691 draw col %[white]
   692 op sub *tmp295 *tmp274 10
   693 draw image 11 *tmp295 @poly 16 0

Modifications by Virtual Instruction Expansion (+1 instructions):
 
   997 set :displayBaseMap:i .recentBuildIndex
   998 jump *label246 lessThan :displayBaseMap:i 0
   999 set .recentBuildIndex -1
-    * readarr<inlined> :drawBlock:cfg .BLOCKS[] :displayBaseMap:i
+ 1000 op mul *tmp484 :displayBaseMap:i 2
+ 1001 multijump *label456 *tmp484 0 (m:marker3)
+ 1002 multilabel *label456 (m:marker3)
+ 1003 set :drawBlock:cfg "#'+nA######%#"
+ 1004 jump *label455 always
+ 1005 multilabel *label457 (m:marker3)
+ 1006 set :drawBlock:cfg "k*/(7######$$"
+ 1007 jump *label455 always
+ 1008 multilabel *label458 (m:marker3)
+ 1009 set :drawBlock:cfg "k+/(7######$%"
+ 1010 jump *label455 always
+ 1011 multilabel *label459 (m:marker3)
+ 1012 set :drawBlock:cfg "m*.<2######$&"
+ 1013 jump *label455 always
+ 1014 multilabel *label460 (m:marker3)
+ 1015 set :drawBlock:cfg "%+-A<######%'"
+ 1016 jump *label455 always
+ 1017 multilabel *label461 (m:marker3)
+ 1018 set :drawBlock:cfg "T+,%%######$("
+ 1019 jump *label455 always
+ 1020 multilabel *label462 (m:marker3)
+ 1021 set :drawBlock:cfg "w**5#-#####%)"
+ 1022 jump *label455 always
+ 1023 multilabel *label463 (m:marker3)
+ 1024 set :drawBlock:cfg "*,###A<###$*"
+ 1025 jump *label455 always
+ 1026 multilabel *label464 (m:marker3)
+ 1027 set :drawBlock:cfg "T),%%######$+"
+ 1028 jump *label455 always
+ 1029 multilabel *label465 (m:marker3)
+ 1030 set :drawBlock:cfg "W*-'%######$,"
+ 1031 jump *label455 always
+ 1032 multilabel *label466 (m:marker3)
+ 1033 set :drawBlock:cfg "®-.}U#U####$-"
+ 1034 jump *label455 always
+ 1035 multilabel *label467 (m:marker3)
+ 1036 set :drawBlock:cfg "g)'%)######$."
+ 1037 jump *label455 always
+ 1038 multilabel *label468 (m:marker3)
+ 1039 set :drawBlock:cfg "(*###A<###$/"
+ 1040 jump *label455 always
+ 1041 multilabel *label469 (m:marker3)
+ 1042 set :drawBlock:cfg "'(_i#####&&0"
+ 1043 jump *label455 always
+ 1044 multilabel *label470 (m:marker3)
+ 1045 set :drawBlock:cfg ",)###A<###$1"
+ 1046 jump *label455 always
+ 1047 multilabel *label471 (m:marker3)
+ 1048 set :drawBlock:cfg "T,*%%######$2"
+ 1049 jump *label455 always
+ 1050 multilabel *label472 (m:marker3)
+ 1051 set :drawBlock:cfg "',+_AA#####%3"
+ 1052 jump *label455 always
+ 1053 multilabel *label473 (m:marker3)
+ 1054 set :drawBlock:cfg "z%-AAA##A##%4"
+ 1055 jump *label455 always
+ 1056 multilabel *label474 (m:marker3)
+ 1057 set :drawBlock:cfg "W'*'%######$5"
+ 1058 jump *label455 always
+ 1059 multilabel *label475 (m:marker3)
+ 1060 set :drawBlock:cfg "W&*'%######$6"
+ 1061 jump *label455 always
+ 1062 multilabel *label476 (m:marker3)
+ 1063 set :drawBlock:cfg "o%+FK<A####%7"
+ 1064 jump *label455 always
+ 1065 multilabel *label477 (m:marker3)
+ 1066 set :drawBlock:cfg "$(.#U<###&8"
+ 1067 jump *label455 always
+ 1068 multilabel *label478 (m:marker3)
+ 1069 set :drawBlock:cfg "z%/AAA##A##%9"
+ 1070 jump *label455 always
+ 1071 multilabel *label479 (m:marker3)
+ 1072 set :drawBlock:cfg " '%-#2#####&:"
+ 1073 jump *label455 always
+ 1074 multilabel *label480 (m:marker3)
+ 1075 set :drawBlock:cfg "*(###A<###$;"
+ 1076 jump *label455 always
+ 1077 multilabel *label481 (m:marker3)
+ 1078 set :drawBlock:cfg "X*''%######$<"
+ 1079 jump *label455 always
+ 1080 multilabel *label482 (m:marker3)
+ 1081 set :drawBlock:cfg "*%ë#}####&="
+ 1082 jump *label455 always
+ 1083 multilabel *label483 (m:marker3)
+ 1084 set :drawBlock:cfg "l/,#U#A7###&>"
+ 1085 jump *label455 always
+ 1086 multilabel *label484 (m:marker3)
+ 1087 set :drawBlock:cfg "W&*'%######$?"
+ 1088 jump *label455 always
+ 1089 multilabel *label485 (m:marker3)
+ 1090 set :drawBlock:cfg "x**F#AA7###&@"
+ 1091 jump *label455 always
+ 1092 multilabel *label486 (m:marker3)
+ 1093 set :drawBlock:cfg "r**#-#+####$A"
+ 1094 jump *label455 always
+ 1095 multilabel *label487 (m:marker3)
+ 1096 set :drawBlock:cfg "**#######%B"
+ 1097 jump *label455 always
+ 1098 multilabel *label488 (m:marker3)
+ 1099 set :drawBlock:cfg "%.)A<######%C"
+ 1100 jump *label455 always
+ 1101 multilabel *label489 (m:marker3)
+ 1102 set :drawBlock:cfg "T-*%%######$D"
+ 1103 jump *label455 always
+ 1104 multilabel *label490 (m:marker3)
+ 1105 set :drawBlock:cfg "T-)%%######$E"
+ 1106 jump *label455 always
+ 1107 multilabel *label491 (m:marker3)
+ 1108 set :drawBlock:cfg "--###A<###$F"
+ 1109 jump *label455 always
+ 1110 multilabel *label492 (m:marker3)
+ 1111 set :drawBlock:cfg "+(###A<###$G"
+ 1112 jump *label455 always
+ 1113 multilabel *label493 (m:marker3)
+ 1114 set :drawBlock:cfg "X+''%######$H"
+ 1115 jump *label455 always
+ 1116 multilabel *label494 (m:marker3)
+ 1117 set :drawBlock:cfg ".&#ʭ#ǥƁ#ʭ#(I"
+ 1118 jump *label455 always
+ 1119 label *label455
  1120 label *label306
  1121 read *tmp430 :drawBlock:cfg 0
  1122 op sub *tmp431 *tmp430 35

Modifications by Iterated phase, Single Step Elimination, pass 4, iteration 1 (-1 instructions):
 
  1115 jump *label455 always
  1116 multilabel *label494 (m:marker3)
  1117 set :drawBlock:cfg ".&#ʭ#ǥƁ#ʭ#(I"
-    * jump *label455 always
  1118 label *label455
  1119 label *label306
  1120 read *tmp430 :drawBlock:cfg 0

Modifications by Jumps phase, Jump Normalization, pass 6, iteration 1:
 
    16 label *label6
    17 ubind @poly
    18 ulocate building core false @copper 0 0 0 .core
-    * label *label7
    19 jump *label6 equal .core null
-    * label *label8
    20 printflush null
    21 drawflush null
    22 label *label9
 
    25 set .factoryProgress 0
    26 set .displayUnitReset false
    27 label *label12
-    * label *label13
    28 jump *label14 notEqual .page 0
    29 jump *label16 lessThanEq .displayMegas 0
    30 jump *label19 greaterThanEq .animation 0
 
    43 op mul *tmp24 *tmp23 40
    44 op mul *tmp25 :animate:ratio 88
    45 op add *tmp22 *tmp24 *tmp25
-    * label *label21
    46 op mul *tmp29 *tmp23 137
    47 op add *tmp27 *tmp29 *tmp25
-    * label *label22
    48 op mul *tmp34 *tmp23 32
    49 op mul *tmp35 :animate:ratio 168
    50 op add *tmp32 *tmp34 *tmp35
-    * label *label23
    51 draw image *tmp22 *tmp27 @mega *tmp32 0
    52 drawflush display1
    53 op add .animation .animation 1
-    * label *label18
    54 jump *label17 always
    55 label *label16
    56 draw reset
 
    58 draw col %[gold]
    59 print "Goal"
    60 draw print 40 161 @bottom
-    * label *label28
-    * label *label27
    61 print "Goal"
    62 draw print 41 161 @bottom
-    * label *label30
-    * label *label29
-    * label *label26
    63 draw col %[white]
    64 op add :drawHeader:count .nextBlock .displayNextUnit
    65 jump *label31 notEqual :drawHeader:count 2
 
   106 print *tmp60
   107 print ")"
   108 draw print 170 172 @topRight
-    * label *label40
-    * label *label39
   109 jump *label41 equal .titaniumDrill false
   110 sensor *tmp62 .titaniumDrill @titanium
   111 op max :drawHeader:count .titaniumDrillCount *tmp62
 
   114 print "x"
   115 print :drawHeader:count
   116 draw print 170 155 @topRight
-    * label *label44
-    * label *label43
   117 op mul *tmp67 7 :drawHeader:len
   118 op sub *tmp68 150 *tmp67
   119 draw image *tmp68 146 @titanium 12 0
   120 label *label41
-    * label *label42
   121 jump *label45 equal .thoriumContainer false
   122 sensor :drawHeader:count .thoriumContainer @thorium
   123 op log10 *tmp71 :drawHeader:count
 
   125 print "x"
   126 print :drawHeader:count
   127 draw print 120 155 @topRight
-    * label *label48
-    * label *label47
   128 op mul *tmp74 7 :drawHeader:len.1
   129 op sub *tmp75 100 *tmp74
   130 draw image *tmp75 146 @thorium 12 0
   131 label *label45
-    * label *label46
-    * label *label25
   132 set :drawMaterials:y 90
   133 jump *label50 notEqual .nextBlock null
   134 sensor *tmp78 .airFactory @progress
 
   183 op greaterThan *tmp108 :drawMaterials:multiReconstructorProgress 0
   184 op max .reconstructorProgress .reconstructorProgress *tmp108
   185 label *label58
-    * label *label59
   186 label *label57
   187 label *label55
   188 label *label53
   189 print "Unit factories"
   190 draw print 22 105 @bottomLeft
-    * label *label62
-    * label *label61
   191 print "Unit factories"
   192 draw print 23 105 @bottomLeft
-    * label *label64
-    * label *label63
-    * label *label60
   193 jump *label65 lessThanEq .factoryProgress 0
   194 op mul *tmp117 122 .factoryProgress
   195 op min :drawItem:length 122 *tmp117
 
   203 print "/"
   204 print :drawMaterials:unitTotal1
   205 draw print 170 97 @right
-    * label *label70
-    * label *label69
   206 print :drawMaterials:unitCount1
   207 print "/"
   208 print :drawMaterials:unitTotal1
   209 draw print 171 97 @right
-    * label *label72
-    * label *label71
-    * label *label68
-    * label *label73
-    * label *label74
-    * label *label67
   210 jump *label75 equal :drawMaterials:unit2 null
   211 op mul *tmp141 122 .reconstructorProgress
   212 op min :drawItem.1:length 122 *tmp141
 
   220 print "/"
   221 print :drawMaterials:unitTotal2
   222 draw print 170 82 @right
-    * label *label80
-    * label *label79
   223 print :drawMaterials:unitCount2
   224 print "/"
   225 print :drawMaterials:unitTotal2
   226 draw print 171 82 @right
-    * label *label82
-    * label *label81
-    * label *label78
-    * label *label83
-    * label *label84
-    * label *label77
   227 jump *label85 equal :drawMaterials:unit3 null
   228 op mul *tmp165 122 :drawMaterials:multiReconstructorProgress
   229 op min :drawItem.2:length 122 *tmp165
 
   237 print "/"
   238 print .megaTarget
   239 draw print 170 67 @right
-    * label *label90
-    * label *label89
   240 print .displayMegas
   241 print "/"
   242 print .megaTarget
   243 draw print 171 67 @right
-    * label *label92
-    * label *label91
-    * label *label88
-    * label *label93
-    * label *label94
-    * label *label87
   244 label *label85
-    * label *label86
   245 label *label75
-    * label *label76
   246 jump *label66 always
   247 label *label65
-    * label *label313
   248 jump *label322 lessThanEq :drawMaterials:targetFactoryLead 0
   249 sensor *tmp188 .airFactory @lead
   250 op mul *tmp193 122 *tmp188
 
   258 draw lineRect 22 90 122 10
   259 print :drawMaterials:targetFactoryLead
   260 draw print 170 97 @right
-    * label *label314
-    * label *label315
   261 print :drawMaterials:targetFactoryLead
   262 draw print 171 97 @right
-    * label *label316
-    * label *label317
-    * label *label318
-    * label *label319
-    * label *label320
-    * label *label321
   263 set :drawMaterials:y 75
   264 label *label322
-    * label *label323
-    * label *label324
-    * label *label327
   265 jump *label336 lessThanEq :drawMaterials:targetFactorySilicon 0
   266 sensor *tmp188 .airFactory @silicon
   267 op mul *tmp193 122 *tmp188
 
   277 op add *tmp207 :drawMaterials:y 7
   278 print :drawMaterials:targetFactorySilicon
   279 draw print 170 *tmp207 @right
-    * label *label328
-    * label *label329
   280 print :drawMaterials:targetFactorySilicon
   281 draw print 171 *tmp207 @right
-    * label *label330
-    * label *label331
-    * label *label332
-    * label *label333
-    * label *label334
-    * label *label335
   282 label *label336
-    * label *label337
-    * label *label338
-    * label *label97
   283 label *label66
   284 jump *label51 always
   285 label *label50
 
   290 read *tmp215 processor1 ".mapAction"
   291 print *tmp215
   292 draw print 22 105 @bottomLeft
-    * label *label114
-    * label *label113
   293 read *tmp217 processor1 ".mapAction"
   294 print *tmp217
   295 draw print 23 105 @bottomLeft
-    * label *label116
-    * label *label115
-    * label *label112
   296 read :drawItem.4:current processor1 ".mapProgress"
   297 read :drawItem.4:target processor1 ".mapTotal"
   298 op mul *tmp222 122 :drawItem.4:current
 
   308 read *tmp237 processor1 ".mapSpots"
   309 print *tmp237
   310 draw print 170 97 @right
-    * label *label120
-    * label *label119
   311 print "x"
   312 read *tmp239 processor1 ".mapSpots"
   313 print *tmp239
   314 draw print 171 97 @right
-    * label *label122
-    * label *label121
-    * label *label118
-    * label *label123
-    * label *label124
-    * label *label117
   315 jump *label111 always
   316 label *label110
   317 set .materialCount .totalTargets
   318 set :drawMaterials:count .materialCount
   319 print "Materials"
   320 draw print 22 105 @bottomLeft
-    * label *label127
-    * label *label126
   321 print "Materials"
   322 draw print 23 105 @bottomLeft
-    * label *label129
-    * label *label128
-    * label *label125
   323 jump *label130 equal .materialCount false
   324 set :drawMaterials:target.1 .targetCopper
-    * label *label342
   325 jump *label353 lessThanEq :drawMaterials:target.1 0
   326 sensor *tmp248 .core @copper
   327 op mul *tmp253 122 *tmp248
 
   335 draw lineRect 22 90 122 10
   336 print :drawMaterials:target.1
   337 draw print 170 97 @right
-    * label *label343
-    * label *label344
   338 print :drawMaterials:target.1
   339 draw print 171 97 @right
-    * label *label345
-    * label *label346
-    * label *label347
-    * label *label348
-    * label *label349
-    * label *label350
   340 set :drawMaterials:y 75
   341 op sub :drawMaterials:count .materialCount 1
   342 jump *label351 greaterThan :drawMaterials:count 0
   343 jump *label134 always
   344 label *label351
-    * label *label352
   345 label *label353
-    * label *label354
-    * label *label355
   346 set :drawMaterials:target.1 .targetLead
-    * label *label358
   347 jump *label369 lessThanEq :drawMaterials:target.1 0
   348 sensor *tmp248 .core @lead
   349 op mul *tmp253 122 *tmp248
 
   359 op add *tmp267 :drawMaterials:y 7
   360 print :drawMaterials:target.1
   361 draw print 170 *tmp267 @right
-    * label *label359
-    * label *label360
   362 print :drawMaterials:target.1
   363 draw print 171 *tmp267 @right
-    * label *label361
-    * label *label362
-    * label *label363
   364 op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label364
-    * label *label365
-    * label *label366
   365 set :drawMaterials:y :drawItem.5:y
   366 op sub :drawMaterials:count :drawMaterials:count 1
   367 jump *label367 greaterThan :drawMaterials:count 0
   368 jump *label134 always
   369 label *label367
-    * label *label368
   370 label *label369
-    * label *label370
-    * label *label371
   371 set :drawMaterials:target.1 .targetGraphite
-    * label *label374
   372 jump *label385 lessThanEq :drawMaterials:target.1 0
   373 sensor *tmp248 .core @graphite
   374 op mul *tmp253 122 *tmp248
 
   384 op add *tmp267 :drawMaterials:y 7
   385 print :drawMaterials:target.1
   386 draw print 170 *tmp267 @right
-    * label *label375
-    * label *label376
   387 print :drawMaterials:target.1
   388 draw print 171 *tmp267 @right
-    * label *label377
-    * label *label378
-    * label *label379
   389 op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label380
-    * label *label381
-    * label *label382
   390 set :drawMaterials:y :drawItem.5:y
   391 op sub :drawMaterials:count :drawMaterials:count 1
   392 jump *label383 greaterThan :drawMaterials:count 0
   393 jump *label134 always
   394 label *label383
-    * label *label384
   395 label *label385
-    * label *label386
-    * label *label387
   396 set :drawMaterials:target.1 .targetSilicon
-    * label *label390
   397 jump *label401 lessThanEq :drawMaterials:target.1 0
   398 sensor *tmp248 .core @silicon
   399 op mul *tmp253 122 *tmp248
 
   409 op add *tmp267 :drawMaterials:y 7
   410 print :drawMaterials:target.1
   411 draw print 170 *tmp267 @right
-    * label *label391
-    * label *label392
   412 print :drawMaterials:target.1
   413 draw print 171 *tmp267 @right
-    * label *label393
-    * label *label394
-    * label *label395
   414 op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label396
-    * label *label397
-    * label *label398
   415 set :drawMaterials:y :drawItem.5:y
   416 op sub :drawMaterials:count :drawMaterials:count 1
   417 jump *label399 greaterThan :drawMaterials:count 0
   418 jump *label134 always
   419 label *label399
-    * label *label400
   420 label *label401
-    * label *label402
-    * label *label403
   421 set :drawMaterials:target.1 .targetTitanium
-    * label *label406
   422 jump *label417 lessThanEq :drawMaterials:target.1 0
   423 sensor *tmp248 .core @titanium
   424 op mul *tmp253 122 *tmp248
 
   434 op add *tmp267 :drawMaterials:y 7
   435 print :drawMaterials:target.1
   436 draw print 170 *tmp267 @right
-    * label *label407
-    * label *label408
   437 print :drawMaterials:target.1
   438 draw print 171 *tmp267 @right
-    * label *label409
-    * label *label410
-    * label *label411
   439 op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label412
-    * label *label413
-    * label *label414
   440 set :drawMaterials:y :drawItem.5:y
   441 op sub :drawMaterials:count :drawMaterials:count 1
   442 jump *label415 greaterThan :drawMaterials:count 0
   443 jump *label134 always
   444 label *label415
-    * label *label416
   445 label *label417
-    * label *label418
-    * label *label419
   446 set :drawMaterials:target.1 .targetMetaglass
-    * label *label422
   447 jump *label433 lessThanEq :drawMaterials:target.1 0
   448 sensor *tmp248 .core @metaglass
   449 op mul *tmp253 122 *tmp248
 
   459 op add *tmp267 :drawMaterials:y 7
   460 print :drawMaterials:target.1
   461 draw print 170 *tmp267 @right
-    * label *label423
-    * label *label424
   462 print :drawMaterials:target.1
   463 draw print 171 *tmp267 @right
-    * label *label425
-    * label *label426
-    * label *label427
   464 op sub :drawItem.5:y :drawMaterials:y 15
-    * label *label428
-    * label *label429
-    * label *label430
   465 set :drawMaterials:y :drawItem.5:y
   466 op sub :drawMaterials:count :drawMaterials:count 1
   467 jump *label431 greaterThan :drawMaterials:count 0
   468 jump *label134 always
   469 label *label431
-    * label *label432
   470 label *label433
-    * label *label434
-    * label *label435
   471 set :drawMaterials:target.1 .targetThorium
-    * label *label438
   472 jump *label449 lessThanEq :drawMaterials:target.1 0
   473 sensor *tmp248 .core @thorium
   474 op mul *tmp253 122 *tmp248
 
   484 op add *tmp267 :drawMaterials:y 7
   485 print :drawMaterials:target.1
   486 draw print 170 *tmp267 @right
-    * label *label439
-    * label *label440
   487 print :drawMaterials:target.1
   488 draw print 171 *tmp267 @right
-    * label *label441
-    * label *label442
-    * label *label443
-    * label *label444
-    * label *label445
-    * label *label446
-    * label *label447
-    * label *label448
   489 label *label449
-    * label *label450
-    * label *label451
   490 label *label134
   491 label *label130
-    * label *label131
   492 label *label111
   493 label *label51
-    * label *label49
   494 draw col %[white]
   495 set *tmp274 25
   496 jump *label156 greaterThanEq .materialCount 4
 
   498 label *label156
   499 print "Builder"
   500 draw print 22 *tmp274 @bottomLeft
-    * label *label159
-    * label *label158
   501 print "Builder"
   502 draw print 23 *tmp274 @bottomLeft
-    * label *label161
-    * label *label160
-    * label *label157
   503 jump *label162 notEqual .transportItem null
   504 op sub *tmp278 *tmp274 15
   505 draw col %[white]
 
   512 op sub *tmp297 *tmp274 8
   513 print .transportTarget
   514 draw print 170 *tmp297 @right
-    * label *label168
-    * label *label167
   515 print .transportTarget
   516 draw print 171 *tmp297 @right
-    * label *label170
-    * label *label169
-    * label *label166
-    * label *label171
-    * label *label172
-    * label *label165
-    * label *label164
   517 jump *label163 always
   518 label *label162
   519 sensor :drawUnit:unitItem @unit @firstItem
 
   536 op sub *tmp326 *tmp274 8
   537 print .transportTarget
   538 draw print 170 *tmp326 @right
-    * label *label177
-    * label *label176
   539 print .transportTarget
   540 draw print 171 *tmp326 @right
-    * label *label179
-    * label *label178
-    * label *label175
-    * label *label180
-    * label *label181
-    * label *label174
-    * label *label173
   541 label *label163
-    * label *label154
   542 set :drawUnits:x 170
   543 draw col %[white]
   544 set :drawUnitCount:count .displayPolys
 
   547 print "x"
   548 print :drawUnitCount:count
   549 draw print 170 129 @right
-    * label *label187
-    * label *label186
   550 op sub :drawUnits:x 170 30
   551 label *label184
-    * label *label185
-    * label *label183
   552 set :drawUnitCount.1:count .displayMonos
   553 jump *label189 lessThanEq :drawUnitCount.1:count 0
   554 op sub *tmp337 :drawUnits:x 20
 
   556 print "x"
   557 print :drawUnitCount.1:count
   558 draw print :drawUnits:x 129 @right
-    * label *label192
-    * label *label191
   559 op sub :drawUnits:x :drawUnits:x 30
   560 label *label189
-    * label *label190
-    * label *label188
   561 set :drawUnitCount.2:count .displayFlares
   562 jump *label194 lessThanEq :drawUnitCount.2:count 0
   563 op sub *tmp340 :drawUnits:x 20
 
   565 print "x"
   566 print :drawUnitCount.2:count
   567 draw print :drawUnits:x 129 @right
-    * label *label197
-    * label *label196
   568 label *label194
-    * label *label195
-    * label *label193
-    * label *label182
   569 drawflush display1
-    * label *label24
   570 label *label17
   571 jump *label15 always
   572 label *label14
 
   576 draw col %[gold]
   577 print "Base map"
   578 draw print 172 172 @topRight
-    * label *label202
-    * label *label201
   579 draw col %[white]
   580 draw translate 88 88
   581 draw scale 5.866666666666666 5.866666666666666
 
   736 set :displayBaseMap:cfg ".&#ʭ#ǥƁ#ʭ#(I"
   737 setaddr *tmp343 *label244
   738 label *label203
-    * label *label299
   739 read *tmp430 :displayBaseMap:cfg 0
   740 op sub *tmp431 *tmp430 35
   741 lookup block :unpackCfg:type *tmp431
 
   749 op sub :unpackCfg:size *tmp466 35
   750 read *tmp469 :displayBaseMap:cfg 12
   751 op sub :unpackCfg:ind *tmp469 35
-    * label *label300
   752 op or *tmp471 :unpackCfg:x :unpackCfg:y
   753 jump *label303 equal *tmp471 false
   754 op shl *tmp473 1 :unpackCfg:ind
 
   769 op mul *tmp483 90 :unpackCfg:rotation
   770 draw image *tmp479 *tmp481 :unpackCfg:type *tmp482 *tmp483
   771 label *label303
-    * label *label304
-    * label *label305
   772 set :displayBaseMap:i .recentBuildIndex
   773 jump *label246 lessThan :displayBaseMap:i 0
   774 set .recentBuildIndex -1
 
   891 multilabel *label494 (m:marker3)
   892 set :drawBlock:cfg ".&#ʭ#ǥƁ#ʭ#(I"
   893 label *label455
-    * label *label306
   894 read *tmp430 :drawBlock:cfg 0
   895 op sub *tmp431 *tmp430 35
   896 lookup block :unpackCfg:type *tmp431
 
   904 op sub :unpackCfg:size *tmp466 35
   905 read *tmp469 :drawBlock:cfg 12
   906 op sub :unpackCfg:ind *tmp469 35
-    * label *label307
   907 op or *tmp471 :unpackCfg:x :unpackCfg:y
   908 jump *label310 equal *tmp471 false
   909 op shl *tmp473 1 :unpackCfg:ind
 
   924 op mul *tmp483 90 :unpackCfg:rotation
   925 draw image *tmp479 *tmp481 :unpackCfg:type *tmp482 *tmp483
   926 label *label310
-    * label *label311
-    * label *label312
   927 label *label246
-    * label *label247
   928 sensor *tmp348 switch1 @enabled
   929 jump *label249 equal *tmp348 false
   930 drawflush null
   931 jump *label205 always
   932 label *label249
-    * label *label250
   933 jump *label251 equal .pageSwitched false
   934 drawflush display1
   935 label *label251
-    * label *label252
-    * label *label204
   936 multijump *tmp343 0 0 (m:marker2)
   937 multilabel *label244 (m:marker2)
   938 label *label205
   939 drawflush display1
-    * label *label200
   940 jump *label199 always
   941 label *label198
   942 op sub :displayLog:page .page 2
 
   958 print "/"
   959 print :displayLog:pages
   960 draw print 172 4 @bottomRight
-    * label *label255
-    * label *label254
   961 draw col %[white]
   962 op sub :displayLog:position :displayLog:start 1
-    * label *label256
   963 jump *label258 lessThan :displayLog:position :displayLog:stop
   964 label *label298
   965 read :displayLog:record bank1 :displayLog:position
 
   985 op add *tmp382 :displayLog:y 2
   986 print :displayRecord:s
   987 draw print *tmp381 *tmp382 @right
-    * label *label266
-    * label *label265
   988 op sub :displayLog:y :displayLog:y 15
   989 jump *label267 greaterThanEq :displayLog:y 10
   990 op add :displayLog:x :displayLog:x 58
   991 set :displayLog:y 164
   992 label *label267
-    * label *label268
-    * label *label264
-    * label *label259
   993 drawflush display1
   994 sensor *tmp385 switch1 @enabled
   995 jump *label269 equal *tmp385 false
   996 jump *label258 always
   997 label *label269
-    * label *label270
-    * label *label257
   998 op sub :displayLog:position :displayLog:position 1
   999 jump *label298 greaterThanEq :displayLog:position :displayLog:stop
  1000 label *label258
-    * label *label253
  1001 label *label199
  1002 label *label15
  1003 jump *label271 lessThanEq .displayMegas 0
 
  1023 print .status3
  1024 print "\n"
  1025 printflush message1
-    * label *label273
  1026 label *label272
  1027 sensor .pageSwitched switch1 @enabled
  1028 jump *label274 equal .pageSwitched false
 
  1033 draw reset
  1034 draw clear 0 0 32
  1035 label *label274
-    * label *label275
-    * label *label10
  1036 jump *label9 always
-    * label *label11
-    * label *label5
-    * label *label4
  1037 wait 1e12
  1038 jump *label3 always
  1039 end

Modifications by Jumps phase, Jump Straightening, pass 6, iteration 1 (-7 instructions):
 
   339 draw print 171 97 @right
   340 set :drawMaterials:y 75
   341 op sub :drawMaterials:count .materialCount 1
-    * jump *label351 greaterThan :drawMaterials:count 0
-    * jump *label134 always
+  342 jump *label134 lessThanEq :drawMaterials:count 0
   343 label *label351
   344 label *label353
   345 set :drawMaterials:target.1 .targetLead
 
   363 op sub :drawItem.5:y :drawMaterials:y 15
   364 set :drawMaterials:y :drawItem.5:y
   365 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label367 greaterThan :drawMaterials:count 0
-    * jump *label134 always
+  366 jump *label134 lessThanEq :drawMaterials:count 0
   367 label *label367
   368 label *label369
   369 set :drawMaterials:target.1 .targetGraphite
 
   387 op sub :drawItem.5:y :drawMaterials:y 15
   388 set :drawMaterials:y :drawItem.5:y
   389 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label383 greaterThan :drawMaterials:count 0
-    * jump *label134 always
+  390 jump *label134 lessThanEq :drawMaterials:count 0
   391 label *label383
   392 label *label385
   393 set :drawMaterials:target.1 .targetSilicon
 
   411 op sub :drawItem.5:y :drawMaterials:y 15
   412 set :drawMaterials:y :drawItem.5:y
   413 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label399 greaterThan :drawMaterials:count 0
-    * jump *label134 always
+  414 jump *label134 lessThanEq :drawMaterials:count 0
   415 label *label399
   416 label *label401
   417 set :drawMaterials:target.1 .targetTitanium
 
   435 op sub :drawItem.5:y :drawMaterials:y 15
   436 set :drawMaterials:y :drawItem.5:y
   437 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label415 greaterThan :drawMaterials:count 0
-    * jump *label134 always
+  438 jump *label134 lessThanEq :drawMaterials:count 0
   439 label *label415
   440 label *label417
   441 set :drawMaterials:target.1 .targetMetaglass
 
   459 op sub :drawItem.5:y :drawMaterials:y 15
   460 set :drawMaterials:y :drawItem.5:y
   461 op sub :drawMaterials:count :drawMaterials:count 1
-    * jump *label431 greaterThan :drawMaterials:count 0
-    * jump *label134 always
+  462 jump *label134 lessThanEq :drawMaterials:count 0
   463 label *label431
   464 label *label433
   465 set :drawMaterials:target.1 .targetThorium
 
   986 label *label267
   987 drawflush display1
   988 sensor *tmp385 switch1 @enabled
-    * jump *label269 equal *tmp385 false
-    * jump *label258 always
+  989 jump *label258 notEqual *tmp385 false
   990 label *label269
   991 op sub :displayLog:position :displayLog:position 1
   992 jump *label298 greaterThanEq :displayLog:position :displayLog:stop

Modifications by Jumps phase, Jump Optimization, pass 6, iteration 1:
 
   340 set :drawMaterials:y 75
   341 op sub :drawMaterials:count .materialCount 1
   342 jump *label134 lessThanEq :drawMaterials:count 0
-    * label *label351
   343 label *label353
   344 set :drawMaterials:target.1 .targetLead
   345 jump *label369 lessThanEq :drawMaterials:target.1 0
 
   363 set :drawMaterials:y :drawItem.5:y
   364 op sub :drawMaterials:count :drawMaterials:count 1
   365 jump *label134 lessThanEq :drawMaterials:count 0
-    * label *label367
   366 label *label369
   367 set :drawMaterials:target.1 .targetGraphite
   368 jump *label385 lessThanEq :drawMaterials:target.1 0
 
   386 set :drawMaterials:y :drawItem.5:y
   387 op sub :drawMaterials:count :drawMaterials:count 1
   388 jump *label134 lessThanEq :drawMaterials:count 0
-    * label *label383
   389 label *label385
   390 set :drawMaterials:target.1 .targetSilicon
   391 jump *label401 lessThanEq :drawMaterials:target.1 0
 
   409 set :drawMaterials:y :drawItem.5:y
   410 op sub :drawMaterials:count :drawMaterials:count 1
   411 jump *label134 lessThanEq :drawMaterials:count 0
-    * label *label399
   412 label *label401
   413 set :drawMaterials:target.1 .targetTitanium
   414 jump *label417 lessThanEq :drawMaterials:target.1 0
 
   432 set :drawMaterials:y :drawItem.5:y
   433 op sub :drawMaterials:count :drawMaterials:count 1
   434 jump *label134 lessThanEq :drawMaterials:count 0
-    * label *label415
   435 label *label417
   436 set :drawMaterials:target.1 .targetMetaglass
   437 jump *label433 lessThanEq :drawMaterials:target.1 0
 
   455 set :drawMaterials:y :drawItem.5:y
   456 op sub :drawMaterials:count :drawMaterials:count 1
   457 jump *label134 lessThanEq :drawMaterials:count 0
-    * label *label431
   458 label *label433
   459 set :drawMaterials:target.1 .targetThorium
   460 jump *label449 lessThanEq :drawMaterials:target.1 0
 
   981 drawflush display1
   982 sensor *tmp385 switch1 @enabled
   983 jump *label258 notEqual *tmp385 false
-    * label *label269
   984 op sub :displayLog:position :displayLog:position 1
   985 jump *label298 greaterThanEq :displayLog:position :displayLog:stop
   986 label *label258

Modifications by Jumps phase, Jump Threading, pass 6, iteration 1:
 
    51 draw image *tmp22 *tmp27 @mega *tmp32 0
    52 drawflush display1
    53 op add .animation .animation 1
-    * jump *label17 always
+   54 jump *label15 always
    55 label *label16
    56 draw reset
    57 draw clear 0 0 32
 
    70 jump *label33 notEqual :drawHeader:count 1
    71 jump *label35 equal .nextBlock null
    72 draw image 40 137 .nextBlock 32 0
-    * jump *label36 always
+   73 jump *label34 always
    74 label *label35
    75 draw image 40 137 .displayNextUnit 32 0
    76 label *label36
 
   207 print "/"
   208 print :drawMaterials:unitTotal1
   209 draw print 171 97 @right
-    * jump *label75 equal :drawMaterials:unit2 null
+  210 jump *label51 equal :drawMaterials:unit2 null
   211 op mul *tmp141 122 .reconstructorProgress
   212 op min :drawItem.1:length 122 *tmp141
   213 draw col %[white]
 
   224 print "/"
   225 print :drawMaterials:unitTotal2
   226 draw print 171 82 @right
-    * jump *label85 equal :drawMaterials:unit3 null
+  227 jump *label51 equal :drawMaterials:unit3 null
   228 op mul *tmp165 122 :drawMaterials:multiReconstructorProgress
   229 op min :drawItem.2:length 122 *tmp165
   230 draw col %[white]
 
   243 draw print 171 67 @right
   244 label *label85
   245 label *label75
-    * jump *label66 always
+  246 jump *label51 always
   247 label *label65
   248 jump *label322 lessThanEq :drawMaterials:targetFactoryLead 0
   249 sensor *tmp188 .airFactory @lead
 
   262 draw print 171 97 @right
   263 set :drawMaterials:y 75
   264 label *label322
-    * jump *label336 lessThanEq :drawMaterials:targetFactorySilicon 0
+  265 jump *label51 lessThanEq :drawMaterials:targetFactorySilicon 0
   266 sensor *tmp188 .airFactory @silicon
   267 op mul *tmp193 122 *tmp188
   268 op div *tmp194 *tmp193 :drawMaterials:targetFactorySilicon
 
  1011 printflush message1
  1012 label *label272
  1013 sensor .pageSwitched switch1 @enabled
-    * jump *label274 equal .pageSwitched false
+ 1014 jump *label9 equal .pageSwitched false
  1015 control enabled switch1 false
  1016 op add *tmp394 .page 1
  1017 op mod .page *tmp394 .numPages

Modifications by Jumps phase, Unreachable Code Elimination, pass 6, iteration 1 (-3 instructions):
 
    73 jump *label34 always
    74 label *label35
    75 draw image 40 137 .displayNextUnit 32 0
-    * label *label36
    76 jump *label34 always
    77 label *label33
    78 op div *tmp46 @tick 2
 
   240 print "/"
   241 print .megaTarget
   242 draw print 171 67 @right
-    * label *label85
-    * label *label75
   243 jump *label51 always
   244 label *label65
   245 jump *label322 lessThanEq :drawMaterials:targetFactoryLead 0
 
   276 draw print 170 *tmp207 @right
   277 print :drawMaterials:targetFactorySilicon
   278 draw print 171 *tmp207 @right
-    * label *label336
-    * label *label66
   279 jump *label51 always
   280 label *label50
   281 op equal *tmp211 .nextBlock @titanium
 
   550 draw print :drawUnits:x 129 @right
   551 label *label194
   552 drawflush display1
-    * label *label17
   553 jump *label15 always
   554 label *label14
   555 jump *label198 notEqual .page 1
 
  1012 drawflush null
  1013 draw reset
  1014 draw clear 0 0 32
-    * label *label274
  1015 jump *label9 always
-    * wait 1e12
-    * jump *label3 always
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 6, iteration 1:
 
    12 set .animation -15
    13 set .pageSwitched false
    14 set *signature "0:v1"
-    * label *label3
    15 label *label6
    16 ubind @poly
    17 ulocate building core false @copper 0 0 0 .core

Modifications by Final phase, Print Merging, iteration 1 (-13 instructions):
 
    90 set *tmp55 "0"
    91 label *label38
    92 print :drawHeader:m
-    * print ":"
-    * print *tmp55
-    * print :drawHeader:s
+   93 print ":{0}{0} (x{0}.{0})"
+   94 format *tmp55
+   95 format :drawHeader:s
    96 op mul *tmp56 10 :drawHeader:t
    97 op div *tmp57 *tmp56 :drawHeader:tt
    98 op round :drawHeader:ratio *tmp57
    99 op idiv *tmp59 :drawHeader:ratio 10
   100 op mod *tmp60 :drawHeader:ratio 10
-    * print " (x"
-    * print *tmp59
-    * print "."
-    * print *tmp60
-    * print ")"
+  101 format *tmp59
+  102 format *tmp60
   103 draw print 170 172 @topRight
   104 jump *label41 equal .titaniumDrill false
   105 sensor *tmp62 .titaniumDrill @titanium
 
   977 label *label199
   978 label *label15
   979 jump *label271 lessThanEq .displayMegas 0
-    * print "[gold]All done.[]\nNothing more to see here.\nGo home."
-    * print "\n"
+  980 print "[gold]All done.[]\nNothing more to see here.\nGo home.\n"
   981 printflush message1
   982 jump *label272 always
   983 label *label271
-    * print "[gold]Building "
-    * print .nextBlock
-    * print "\n"
-    * print "==================================[]"
-    * print "\n"
-    * print .status1
-    * print "\n"
-    * print .status2
-    * print .item2
-    * print " "
-    * print "("
-    * print .block2
-    * print ")"
-    * print "\n"
-    * print .status3
-    * print "\n"
+  984 print "[gold]Building {0}\n==================================[]\n{0}\n{0}{0} ({0})\n{0}\n"
+  985 format .nextBlock
+  986 format .status1
+  987 format .status2
+  988 format .item2
+  989 format .block2
+  990 format .status3
   991 printflush message1
   992 label *label272
   993 sensor .pageSwitched switch1 @enabled

Final code before resolving virtual instructions:

    0:  set .core null                                               var
    1:  set .page 0                                                  ...
    2:  set .numPages 3                                              ...
    3:  set .recentBuildIndex -1                                     remote var
    4:  set .displayMonos 0                                          ...
    5:  set .displayFlares 0                                         ...
    6:  set .displayPolys 1                                          ...
    7:  set .displayMegas 0                                          ...
    8:  set .flareTarget 0                                           ...
    9:  set .monoTarget 0                                            ...
   10:  set .polyTarget 0                                            ...
   11:  set .megaTarget 0                                            ...
   12:  set .animation -15                                           var animation = -15;
   13:  set .pageSwitched false                                      var pageSwitched = false;
   14:  set *signature "0:v1"                                        #set target = 8;
        label *label6                                                do
   15:  ubind @poly                                                  ubind(@poly);
   16:  ulocate building core false @copper 0 0 0 .core              core = ulocate(:building, :core, false);
   17:  jump *label6 equal .core null                                do
   18:  printflush null                                              printflush(null);
   19:  drawflush null                                               drawflush(null);
        label *label9                                                while true do
   20:  jump *label12 equal .displayUnitReset false                  if displayUnitReset then
   21:  set .reconstructorProgress 0                                 factoryProgress = reconstructorProgress = 0;
   22:  set .factoryProgress 0                                       ...
   23:  set .displayUnitReset false                                  displayUnitReset = false;
        label *label12                                               if displayUnitReset then
   24:  jump *label14 notEqual .page 0                               if page == 0 then
   25:  jump *label16 lessThanEq .displayMegas 0                     if displayMegas > 0 then
   26:  jump *label19 greaterThanEq .animation 0                     if animation < 0 then
   27:  draw color 0 0 32 80 0 0                                     color(0, 0, 32, 80);
   28:  draw rect 0 0 176 176 0 0                                    rect(0, 0, 176, 176);
   29:  jump *label20 always 0 0                                     if animation < 0 then
        label *label19                                               ...
   30:  draw reset 0 0 0 0 0 0                                       reset();
   31:  draw clear 0 0 32 0 0 0                                      clear(0, 0, 32);
        label *label20                                               if animation < 0 then
   32:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
   33:  op div *tmp19 .animation 30                                  var ratio = max(0, min(animation / 30, 1));
   34:  op min *tmp20 *tmp19 1                                       ...
   35:  op max :animate:ratio 0 *tmp20                               ...
   36:  op sub *tmp23 1 :animate:ratio                               (1 - ratio) * from + ratio * to;
   37:  op mul *tmp24 *tmp23 40                                      ...
   38:  op mul *tmp25 :animate:ratio 88                              ...
   39:  op add *tmp22 *tmp24 *tmp25                                  var x = lerp(HEADER_X, 176 / 2, ratio);
   40:  op mul *tmp29 *tmp23 137                                     (1 - ratio) * from + ratio * to;
   41:  op add *tmp27 *tmp29 *tmp25                                  var y = lerp(HEADER1_Y - 24, 176 / 2, ratio);
   42:  op mul *tmp34 *tmp23 32                                      (1 - ratio) * from + ratio * to;
   43:  op mul *tmp35 :animate:ratio 168                             ...
   44:  op add *tmp32 *tmp34 *tmp35                                  var size = lerp(32, 168, ratio);
   45:  draw image *tmp22 *tmp27 @mega *tmp32 0 0                    image(x, y, @mega, size, 0);
   46:  drawflush display1                                           drawflush(display1);
   47:  op add .animation .animation 1                               animate();
   48:  jump *label15 always 0 0                                     if displayMegas > 0 then
        label *label16                                               ...
   49:  draw reset 0 0 0 0 0 0                                       reset();
   50:  draw clear 0 0 32 0 0 0                                      clear(0, 0, 32);
   51:  draw col %[gold] 0 0 0 0 0                                   col(%[gold]);
   52:  print "Goal"                                                 print(text);
   53:  draw print 40 161 @bottom                                    mlogText("draw", "print", in x, in y, in alignment);
   54:  print "Goal"                                                 print(text);
   55:  draw print 41 161 @bottom                                    mlogText("draw", "print", in x, in y, in alignment);
   56:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
   57:  op add :drawHeader:count .nextBlock .displayNextUnit         var count = nextBlock + displayNextUnit;
   58:  jump *label31 notEqual :drawHeader:count 2                   if count == 2 then
   59:  draw image 25 139 .nextBlock 25 0 0                          image(HEADER_X - 15, HEADER1_Y - 22, nextBlock, 25, 0);
   60:  draw image 55 139 .displayNextUnit 25 0 0                    image(HEADER_X + 15, HEADER1_Y - 22, displayNextUnit, 25, 0);
   61:  jump *label32 always 0 0                                     if count == 2 then
        label *label31                                               ...
   62:  jump *label33 notEqual :drawHeader:count 1                   elsif count == 1 then
   63:  jump *label35 equal .nextBlock null                          image(HEADER_X, HEADER1_Y - 24, nextBlock != null ? nextBlock : displayNextUnit, 32, 0);
   64:  draw image 40 137 .nextBlock 32 0 0                          ...
   65:  jump *label34 always 0 0                                     ...
        label *label35                                               ...
   66:  draw image 40 137 .displayNextUnit 32 0 0                    ...
   67:  jump *label34 always 0 0                                     elsif count == 1 then
        label *label33                                               ...
   68:  op div *tmp46 @tick 2                                        image(HEADER_X, HEADER1_Y - 24, @hydrogen, 32, 360 - (@tick / 2) % 360);
   69:  op mod *tmp47 *tmp46 360                                     ...
   70:  op sub *tmp48 360 *tmp47                                     ...
   71:  draw image 40 137 @hydrogen 32 *tmp48 0                      ...
        label *label34                                               elsif count == 1 then
        label *label32                                               if count == 2 then
   72:  set :drawHeader:tt @second                                   var tt = @second;
   73:  read *tmp49 processor2 "time"                                var t = floor(timer.read("time") / 120);
   74:  op idiv :drawHeader:t *tmp49 120                             ...
   75:  op idiv :drawHeader:m :drawHeader:t 60                       var m = t \ 60;
   76:  op mod :drawHeader:s :drawHeader:t 60                        var s = t % 60;
   77:  set *tmp55 ""                                                print(m, ":", s < 10 ? "0" : "", s);
   78:  jump *label38 greaterThanEq :drawHeader:s 10                 ...
   79:  set *tmp55 "0"                                               ...
        label *label38                                               ...
   80:  print :drawHeader:m                                          ...
   81:  print ":{0}{0} (x{0}.{0})"                                   ...
   82:  format *tmp55                                                ...
   83:  format :drawHeader:s                                         ...
   84:  op mul *tmp56 10 :drawHeader:t                               var ratio = round(10 * t / tt);
   85:  op div *tmp57 *tmp56 :drawHeader:tt                          ...
   86:  op round :drawHeader:ratio *tmp57 0                          ...
   87:  op idiv *tmp59 :drawHeader:ratio 10                          print(" (x", ratio \ 10, ".", ratio % 10);
   88:  op mod *tmp60 :drawHeader:ratio 10                           ...
   89:  format *tmp59                                                ...
   90:  format *tmp60                                                ...
   91:  draw print 170 172 @topRight                                 mlogText("draw", "print", in x, in y, in alignment);
   92:  jump *label41 equal .titaniumDrill false                     if titaniumDrill then
   93:  sensor *tmp62 .titaniumDrill @titanium                       count = max(titaniumDrillCount, titaniumDrill.@titanium);
   94:  op max :drawHeader:count .titaniumDrillCount *tmp62          ...
   95:  op log10 *tmp64 :drawHeader:count 0                          var len = floor(log10(count));
   96:  op floor :drawHeader:len *tmp64 0                            ...
   97:  print "x"                                                    print(text);
   98:  print :drawHeader:count                                      ...
   99:  draw print 170 155 @topRight                                 mlogText("draw", "print", in x, in y, in alignment);
  100:  op mul *tmp67 7 :drawHeader:len                              image(x - 20 - 7 * len, 146, @titanium, 12, 0);
  101:  op sub *tmp68 150 *tmp67                                     ...
  102:  draw image *tmp68 146 @titanium 12 0 0                       ...
        label *label41                                               if titaniumDrill then
  103:  jump *label45 equal .thoriumContainer false                  if thoriumContainer then
  104:  sensor :drawHeader:count .thoriumContainer @thorium          count = thoriumContainer.@thorium;
  105:  op log10 *tmp71 :drawHeader:count 0                          var len = floor(log10(count));
  106:  op floor :drawHeader:len.1 *tmp71 0                          ...
  107:  print "x"                                                    print(text);
  108:  print :drawHeader:count                                      ...
  109:  draw print 120 155 @topRight                                 mlogText("draw", "print", in x, in y, in alignment);
  110:  op mul *tmp74 7 :drawHeader:len.1                            image(x - 20 - 7 * len, 146, @thorium, 12, 0);
  111:  op sub *tmp75 100 *tmp74                                     ...
  112:  draw image *tmp75 146 @thorium 12 0 0                        ...
        label *label45                                               if thoriumContainer then
  113:  set :drawMaterials:y 90                                      var col = 0, y = HEADER2_Y - ROW_HEIGHT;
  114:  jump *label50 notEqual .nextBlock null                       if nextBlock == null then
  115:  sensor *tmp78 .airFactory @progress                          factoryProgress = max(factoryProgress, airFactory.@progress);
  116:  op max .factoryProgress .factoryProgress *tmp78              ...
  117:  sensor *tmp80 .reconstructor @progress                       reconstructorProgress = max(reconstructorProgress, reconstructor.@progress);
  118:  op max .reconstructorProgress .reconstructorProgress *tmp80  ...
  119:  sensor :drawMaterials:multiReconstructorProgress .multiRecon var multiReconstructorProgress = multiReconstructor.@progress;
  120:  jump *label52 notEqual .displayNextUnit @mono                if displayNextUnit == @mono then
  121:  set :drawMaterials:targetFactoryLead 15                      targetFactoryLead = 15;
  122:  set :drawMaterials:targetFactorySilicon 30                   targetFactorySilicon = 30;
  123:  set .materialCount 2                                         materialCount = 2;
  124:  set :drawMaterials:unitCount1 .displayMonos                  unitCount1 = displayMonos;
  125:  set :drawMaterials:unitTotal1 .monoTarget                    unitTotal1 = monoTarget;
  126:  set :drawMaterials:unit1 .displayNextUnit                    unit1 = displayNextUnit;
  127:  set :drawMaterials:unit3 null                                unit2 = unit3 = null;
  128:  set :drawMaterials:unit2 null                                ...
  129:  jump *label53 always 0 0                                     if displayNextUnit == @mono then
        label *label52                                               ...
  130:  jump *label54 notEqual .displayNextUnit @flare               elsif displayNextUnit == @flare then
  131:  set :drawMaterials:targetFactoryLead 0                       targetFactoryLead = 0;
  132:  set :drawMaterials:targetFactorySilicon 15                   targetFactorySilicon = 15;
  133:  set .materialCount 1                                         materialCount = 1;
  134:  set :drawMaterials:unitCount1 .displayFlares                 unitCount1 = displayFlares;
  135:  set :drawMaterials:unitTotal1 .flareTarget                   unitTotal1 = flareTarget;
  136:  set :drawMaterials:unit1 .displayNextUnit                    unit1 = displayNextUnit;
  137:  set :drawMaterials:unit3 null                                unit2 = unit3 = null;
  138:  set :drawMaterials:unit2 null                                ...
  139:  jump *label55 always 0 0                                     elsif displayNextUnit == @flare then
        label *label54                                               ...
  140:  jump *label56 notEqual .displayNextUnit @poly                elsif displayNextUnit == @poly then
  141:  op floor :drawMaterials:unitCount1 .factoryProgress 0        unitCount1 = floor(factoryProgress);
  142:  set :drawMaterials:unitCount2 .displayPolys                  unitCount2 = displayPolys;
  143:  set :drawMaterials:unitTotal1 1                              unitTotal1 = 1;
  144:  set :drawMaterials:unitTotal2 .polyTarget                    unitTotal2 = polyTarget;
  145:  set :drawMaterials:unit1 @mono                               unit1 = @mono;
  146:  set :drawMaterials:unit2 .displayNextUnit                    unit2 = displayNextUnit;
  147:  set :drawMaterials:unit3 null                                unit3 = null;
  148:  op greaterThan *tmp99 .reconstructorProgress 0               factoryProgress = max(factoryProgress, reconstructorProgress > 0);
  149:  op max .factoryProgress .factoryProgress *tmp99              ...
  150:  jump *label57 always 0 0                                     elsif displayNextUnit == @poly then
        label *label56                                               ...
  151:  jump *label58 notEqual .displayNextUnit @mega                elsif displayNextUnit == @mega then
  152:  op floor :drawMaterials:unitCount1 .factoryProgress 0        unitCount1 = floor(factoryProgress);
  153:  op floor :drawMaterials:unitCount2 .reconstructorProgress 0  unitCount2 = floor(reconstructorProgress);
  154:  set :drawMaterials:unitTotal1 1                              unitTotal1 = 1;
  155:  set :drawMaterials:unitTotal2 1                              unitTotal2 = 1;
  156:  set :drawMaterials:unit1 @mono                               unit1 = @mono;
  157:  set :drawMaterials:unit2 @poly                               unit2 = @poly;
  158:  set :drawMaterials:unit3 .displayNextUnit                    unit3 = displayNextUnit;
  159:  op greaterThan *tmp106 .reconstructorProgress 0              factoryProgress = max(factoryProgress, reconstructorProgress > 0);
  160:  op max .factoryProgress .factoryProgress *tmp106             ...
  161:  op greaterThan *tmp108 :drawMaterials:multiReconstructorProg reconstructorProgress = max(reconstructorProgress, multiReconstructorProgress > 0);
  162:  op max .reconstructorProgress .reconstructorProgress *tmp108 ...
        label *label58                                               elsif displayNextUnit == @mega then
        label *label57                                               elsif displayNextUnit == @poly then
        label *label55                                               elsif displayNextUnit == @flare then
        label *label53                                               if displayNextUnit == @mono then
  163:  print "Unit factories"                                       print(text);
  164:  draw print 22 105 @bottomLeft                                mlogText("draw", "print", in x, in y, in alignment);
  165:  print "Unit factories"                                       print(text);
  166:  draw print 23 105 @bottomLeft                                mlogText("draw", "print", in x, in y, in alignment);
  167:  jump *label65 lessThanEq .factoryProgress 0                  if factoryProgress > 0 then
  168:  op mul *tmp117 122 .factoryProgress                          var length = min(barLength, barLength * current / target);
  169:  op min :drawItem:length 122 *tmp117                          ...
  170:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  171:  draw image 11 95 :drawMaterials:unit1 16 0 0                 image(iconX, y + ICON_Y, item, 16, 0);
  172:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  173:  draw rect 22 90 :drawItem:length 10 0 0                      rect(barX, y, length, BAR_HEIGHT);
  174:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  175:  draw lineRect 22 90 122 10 0 0                               lineRect(barX, y, barLength, BAR_HEIGHT);
  176:  print :drawMaterials:unitCount1                              print(text);
  177:  print "/"                                                    ...
  178:  print :drawMaterials:unitTotal1                              ...
  179:  draw print 170 97 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  180:  print :drawMaterials:unitCount1                              print(text);
  181:  print "/"                                                    ...
  182:  print :drawMaterials:unitTotal1                              ...
  183:  draw print 171 97 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  184:  jump *label51 equal :drawMaterials:unit2 null                if unit2 != null then
  185:  op mul *tmp141 122 .reconstructorProgress                    var length = min(barLength, barLength * current / target);
  186:  op min :drawItem.1:length 122 *tmp141                        ...
  187:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  188:  draw image 11 80 :drawMaterials:unit2 16 0 0                 image(iconX, y + ICON_Y, item, 16, 0);
  189:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  190:  draw rect 22 75 :drawItem.1:length 10 0 0                    rect(barX, y, length, BAR_HEIGHT);
  191:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  192:  draw lineRect 22 75 122 10 0 0                               lineRect(barX, y, barLength, BAR_HEIGHT);
  193:  print :drawMaterials:unitCount2                              print(text);
  194:  print "/"                                                    ...
  195:  print :drawMaterials:unitTotal2                              ...
  196:  draw print 170 82 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  197:  print :drawMaterials:unitCount2                              print(text);
  198:  print "/"                                                    ...
  199:  print :drawMaterials:unitTotal2                              ...
  200:  draw print 171 82 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  201:  jump *label51 equal :drawMaterials:unit3 null                if unit3 != null then
  202:  op mul *tmp165 122 :drawMaterials:multiReconstructorProgress var length = min(barLength, barLength * current / target);
  203:  op min :drawItem.2:length 122 *tmp165                        ...
  204:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  205:  draw image 11 65 :drawMaterials:unit3 16 0 0                 image(iconX, y + ICON_Y, item, 16, 0);
  206:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  207:  draw rect 22 60 :drawItem.2:length 10 0 0                    rect(barX, y, length, BAR_HEIGHT);
  208:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  209:  draw lineRect 22 60 122 10 0 0                               lineRect(barX, y, barLength, BAR_HEIGHT);
  210:  print .displayMegas                                          print(text);
  211:  print "/"                                                    ...
  212:  print .megaTarget                                            ...
  213:  draw print 170 67 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  214:  print .displayMegas                                          print(text);
  215:  print "/"                                                    ...
  216:  print .megaTarget                                            ...
  217:  draw print 171 67 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  218:  jump *label51 always 0 0                                     if factoryProgress > 0 then
        label *label65                                               ...
  219:  jump *label322 lessThanEq :drawMaterials:targetFactoryLead 0 if target > 0 then
  220:  sensor *tmp188 .airFactory @lead                             drawItem(in out col, in out y, 1, item, airFactory.sensor(item), target, target);
  221:  op mul *tmp193 122 *tmp188                                   var length = min(barLength, barLength * current / target);
  222:  op div *tmp194 *tmp193 :drawMaterials:targetFactoryLead      ...
  223:  op min :drawItem.3:length 122 *tmp194                        ...
  224:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  225:  draw image 11 95 @lead 16 0 0                                image(iconX, y + ICON_Y, item, 16, 0);
  226:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  227:  draw rect 22 90 :drawItem.3:length 10 0 0                    rect(barX, y, length, BAR_HEIGHT);
  228:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  229:  draw lineRect 22 90 122 10 0 0                               lineRect(barX, y, barLength, BAR_HEIGHT);
  230:  print :drawMaterials:targetFactoryLead                       print(text);
  231:  draw print 170 97 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  232:  print :drawMaterials:targetFactoryLead                       print(text);
  233:  draw print 171 97 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  234:  set :drawMaterials:y 75                                      drawItem(in out col, in out y, 1, item, airFactory.sensor(item), target, target);
        label *label322                                              if target > 0 then
  235:  jump *label51 lessThanEq :drawMaterials:targetFactorySilicon ...
  236:  sensor *tmp188 .airFactory @silicon                          drawItem(in out col, in out y, 1, item, airFactory.sensor(item), target, target);
  237:  op mul *tmp193 122 *tmp188                                   var length = min(barLength, barLength * current / target);
  238:  op div *tmp194 *tmp193 :drawMaterials:targetFactorySilicon   ...
  239:  op min :drawItem.3:length 122 *tmp194                        ...
  240:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  241:  op add *tmp205 :drawMaterials:y 5                            image(iconX, y + ICON_Y, item, 16, 0);
  242:  draw image 11 *tmp205 @silicon 16 0 0                        ...
  243:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  244:  draw rect 22 :drawMaterials:y :drawItem.3:length 10 0 0      rect(barX, y, length, BAR_HEIGHT);
  245:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  246:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 lineRect(barX, y, barLength, BAR_HEIGHT);
  247:  op add *tmp207 :drawMaterials:y 7                            drawBold(textX, y + ICON_Y + 2, @right, text);
  248:  print :drawMaterials:targetFactorySilicon                    print(text);
  249:  draw print 170 *tmp207 @right                                mlogText("draw", "print", in x, in y, in alignment);
  250:  print :drawMaterials:targetFactorySilicon                    print(text);
  251:  draw print 171 *tmp207 @right                                mlogText("draw", "print", in x, in y, in alignment);
  252:  jump *label51 always 0 0                                     if nextBlock == null then
        label *label50                                               ...
  253:  op equal *tmp211 .nextBlock @titanium                        elsif nextBlock == @titanium or nextBlock == @ore-titanium then
  254:  op equal *tmp212 .nextBlock @ore-titanium                    ...
  255:  op or *tmp213 *tmp211 *tmp212                                ...
  256:  jump *label110 equal *tmp213 false                           ...
  257:  read *tmp215 processor1 ".mapAction"                         print(text);
  258:  print *tmp215                                                ...
  259:  draw print 22 105 @bottomLeft                                mlogText("draw", "print", in x, in y, in alignment);
  260:  read *tmp217 processor1 ".mapAction"                         print(text);
  261:  print *tmp217                                                ...
  262:  draw print 23 105 @bottomLeft                                mlogText("draw", "print", in x, in y, in alignment);
  263:  read :drawItem.4:current processor1 ".mapProgress"           drawItem(in 0, in HEADER2_Y - ROW_HEIGHT, 1, @titanium, mapProgress, mapTotal, "x", mapSpots);
  264:  read :drawItem.4:target processor1 ".mapTotal"               ...
  265:  op mul *tmp222 122 :drawItem.4:current                       var length = min(barLength, barLength * current / target);
  266:  op div *tmp223 *tmp222 :drawItem.4:target                    ...
  267:  op min :drawItem.4:length 122 *tmp223                        ...
  268:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  269:  draw image 11 95 @titanium 16 0 0                            image(iconX, y + ICON_Y, item, 16, 0);
  270:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  271:  draw rect 22 90 :drawItem.4:length 10 0 0                    rect(barX, y, length, BAR_HEIGHT);
  272:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  273:  draw lineRect 22 90 122 10 0 0                               lineRect(barX, y, barLength, BAR_HEIGHT);
  274:  print "x"                                                    print(text);
  275:  read *tmp237 processor1 ".mapSpots"                          ...
  276:  print *tmp237                                                ...
  277:  draw print 170 97 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  278:  print "x"                                                    print(text);
  279:  read *tmp239 processor1 ".mapSpots"                          ...
  280:  print *tmp239                                                ...
  281:  draw print 171 97 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  282:  jump *label111 always 0 0                                    elsif nextBlock == @titanium or nextBlock == @ore-titanium then
        label *label110                                              ...
  283:  set .materialCount .totalTargets                             count = materialCount = totalTargets;
  284:  set :drawMaterials:count .materialCount                      ...
  285:  print "Materials"                                            print(text);
  286:  draw print 22 105 @bottomLeft                                mlogText("draw", "print", in x, in y, in alignment);
  287:  print "Materials"                                            print(text);
  288:  draw print 23 105 @bottomLeft                                mlogText("draw", "print", in x, in y, in alignment);
  289:  jump *label130 equal .materialCount false                    if count then
  290:  set :drawMaterials:target.1 .targetCopper                    for var item, target in
  291:  jump *label353 lessThanEq :drawMaterials:target.1 0          if target > 0 then
  292:  sensor *tmp248 .core @copper                                 drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  293:  op mul *tmp253 122 *tmp248                                   var length = min(barLength, barLength * current / target);
  294:  op div *tmp254 *tmp253 :drawMaterials:target.1               ...
  295:  op min :drawItem.5:length 122 *tmp254                        ...
  296:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  297:  draw image 11 95 @copper 16 0 0                              image(iconX, y + ICON_Y, item, 16, 0);
  298:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  299:  draw rect 22 90 :drawItem.5:length 10 0 0                    rect(barX, y, length, BAR_HEIGHT);
  300:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  301:  draw lineRect 22 90 122 10 0 0                               lineRect(barX, y, barLength, BAR_HEIGHT);
  302:  print :drawMaterials:target.1                                print(text);
  303:  draw print 170 97 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  304:  print :drawMaterials:target.1                                print(text);
  305:  draw print 171 97 @right                                     mlogText("draw", "print", in x, in y, in alignment);
  306:  set :drawMaterials:y 75                                      drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  307:  op sub :drawMaterials:count .materialCount 1                 if --count <= 0 then break; end;
  308:  jump *label134 lessThanEq :drawMaterials:count 0             ...
        label *label353                                              if target > 0 then
  309:  set :drawMaterials:target.1 .targetLead                      for var item, target in
  310:  jump *label369 lessThanEq :drawMaterials:target.1 0          if target > 0 then
  311:  sensor *tmp248 .core @lead                                   drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  312:  op mul *tmp253 122 *tmp248                                   var length = min(barLength, barLength * current / target);
  313:  op div *tmp254 *tmp253 :drawMaterials:target.1               ...
  314:  op min :drawItem.5:length 122 *tmp254                        ...
  315:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  316:  op add *tmp265 :drawMaterials:y 5                            image(iconX, y + ICON_Y, item, 16, 0);
  317:  draw image 11 *tmp265 @lead 16 0 0                           ...
  318:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  319:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      rect(barX, y, length, BAR_HEIGHT);
  320:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  321:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 lineRect(barX, y, barLength, BAR_HEIGHT);
  322:  op add *tmp267 :drawMaterials:y 7                            drawBold(textX, y + ICON_Y + 2, @right, text);
  323:  print :drawMaterials:target.1                                print(text);
  324:  draw print 170 *tmp267 @right                                mlogText("draw", "print", in x, in y, in alignment);
  325:  print :drawMaterials:target.1                                print(text);
  326:  draw print 171 *tmp267 @right                                mlogText("draw", "print", in x, in y, in alignment);
  327:  op sub :drawItem.5:y :drawMaterials:y 15                     y -= ROW_HEIGHT;
  328:  set :drawMaterials:y :drawItem.5:y                           drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  329:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
  330:  jump *label134 lessThanEq :drawMaterials:count 0             ...
        label *label369                                              if target > 0 then
  331:  set :drawMaterials:target.1 .targetGraphite                  for var item, target in
  332:  jump *label385 lessThanEq :drawMaterials:target.1 0          if target > 0 then
  333:  sensor *tmp248 .core @graphite                               drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  334:  op mul *tmp253 122 *tmp248                                   var length = min(barLength, barLength * current / target);
  335:  op div *tmp254 *tmp253 :drawMaterials:target.1               ...
  336:  op min :drawItem.5:length 122 *tmp254                        ...
  337:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  338:  op add *tmp265 :drawMaterials:y 5                            image(iconX, y + ICON_Y, item, 16, 0);
  339:  draw image 11 *tmp265 @graphite 16 0 0                       ...
  340:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  341:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      rect(barX, y, length, BAR_HEIGHT);
  342:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  343:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 lineRect(barX, y, barLength, BAR_HEIGHT);
  344:  op add *tmp267 :drawMaterials:y 7                            drawBold(textX, y + ICON_Y + 2, @right, text);
  345:  print :drawMaterials:target.1                                print(text);
  346:  draw print 170 *tmp267 @right                                mlogText("draw", "print", in x, in y, in alignment);
  347:  print :drawMaterials:target.1                                print(text);
  348:  draw print 171 *tmp267 @right                                mlogText("draw", "print", in x, in y, in alignment);
  349:  op sub :drawItem.5:y :drawMaterials:y 15                     y -= ROW_HEIGHT;
  350:  set :drawMaterials:y :drawItem.5:y                           drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  351:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
  352:  jump *label134 lessThanEq :drawMaterials:count 0             ...
        label *label385                                              if target > 0 then
  353:  set :drawMaterials:target.1 .targetSilicon                   for var item, target in
  354:  jump *label401 lessThanEq :drawMaterials:target.1 0          if target > 0 then
  355:  sensor *tmp248 .core @silicon                                drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  356:  op mul *tmp253 122 *tmp248                                   var length = min(barLength, barLength * current / target);
  357:  op div *tmp254 *tmp253 :drawMaterials:target.1               ...
  358:  op min :drawItem.5:length 122 *tmp254                        ...
  359:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  360:  op add *tmp265 :drawMaterials:y 5                            image(iconX, y + ICON_Y, item, 16, 0);
  361:  draw image 11 *tmp265 @silicon 16 0 0                        ...
  362:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  363:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      rect(barX, y, length, BAR_HEIGHT);
  364:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  365:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 lineRect(barX, y, barLength, BAR_HEIGHT);
  366:  op add *tmp267 :drawMaterials:y 7                            drawBold(textX, y + ICON_Y + 2, @right, text);
  367:  print :drawMaterials:target.1                                print(text);
  368:  draw print 170 *tmp267 @right                                mlogText("draw", "print", in x, in y, in alignment);
  369:  print :drawMaterials:target.1                                print(text);
  370:  draw print 171 *tmp267 @right                                mlogText("draw", "print", in x, in y, in alignment);
  371:  op sub :drawItem.5:y :drawMaterials:y 15                     y -= ROW_HEIGHT;
  372:  set :drawMaterials:y :drawItem.5:y                           drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  373:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
  374:  jump *label134 lessThanEq :drawMaterials:count 0             ...
        label *label401                                              if target > 0 then
  375:  set :drawMaterials:target.1 .targetTitanium                  for var item, target in
  376:  jump *label417 lessThanEq :drawMaterials:target.1 0          if target > 0 then
  377:  sensor *tmp248 .core @titanium                               drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  378:  op mul *tmp253 122 *tmp248                                   var length = min(barLength, barLength * current / target);
  379:  op div *tmp254 *tmp253 :drawMaterials:target.1               ...
  380:  op min :drawItem.5:length 122 *tmp254                        ...
  381:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  382:  op add *tmp265 :drawMaterials:y 5                            image(iconX, y + ICON_Y, item, 16, 0);
  383:  draw image 11 *tmp265 @titanium 16 0 0                       ...
  384:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  385:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      rect(barX, y, length, BAR_HEIGHT);
  386:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  387:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 lineRect(barX, y, barLength, BAR_HEIGHT);
  388:  op add *tmp267 :drawMaterials:y 7                            drawBold(textX, y + ICON_Y + 2, @right, text);
  389:  print :drawMaterials:target.1                                print(text);
  390:  draw print 170 *tmp267 @right                                mlogText("draw", "print", in x, in y, in alignment);
  391:  print :drawMaterials:target.1                                print(text);
  392:  draw print 171 *tmp267 @right                                mlogText("draw", "print", in x, in y, in alignment);
  393:  op sub :drawItem.5:y :drawMaterials:y 15                     y -= ROW_HEIGHT;
  394:  set :drawMaterials:y :drawItem.5:y                           drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  395:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
  396:  jump *label134 lessThanEq :drawMaterials:count 0             ...
        label *label417                                              if target > 0 then
  397:  set :drawMaterials:target.1 .targetMetaglass                 for var item, target in
  398:  jump *label433 lessThanEq :drawMaterials:target.1 0          if target > 0 then
  399:  sensor *tmp248 .core @metaglass                              drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  400:  op mul *tmp253 122 *tmp248                                   var length = min(barLength, barLength * current / target);
  401:  op div *tmp254 *tmp253 :drawMaterials:target.1               ...
  402:  op min :drawItem.5:length 122 *tmp254                        ...
  403:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  404:  op add *tmp265 :drawMaterials:y 5                            image(iconX, y + ICON_Y, item, 16, 0);
  405:  draw image 11 *tmp265 @metaglass 16 0 0                      ...
  406:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  407:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      rect(barX, y, length, BAR_HEIGHT);
  408:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  409:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 lineRect(barX, y, barLength, BAR_HEIGHT);
  410:  op add *tmp267 :drawMaterials:y 7                            drawBold(textX, y + ICON_Y + 2, @right, text);
  411:  print :drawMaterials:target.1                                print(text);
  412:  draw print 170 *tmp267 @right                                mlogText("draw", "print", in x, in y, in alignment);
  413:  print :drawMaterials:target.1                                print(text);
  414:  draw print 171 *tmp267 @right                                mlogText("draw", "print", in x, in y, in alignment);
  415:  op sub :drawItem.5:y :drawMaterials:y 15                     y -= ROW_HEIGHT;
  416:  set :drawMaterials:y :drawItem.5:y                           drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  417:  op sub :drawMaterials:count :drawMaterials:count 1           if --count <= 0 then break; end;
  418:  jump *label134 lessThanEq :drawMaterials:count 0             ...
        label *label433                                              if target > 0 then
  419:  set :drawMaterials:target.1 .targetThorium                   for var item, target in
  420:  jump *label449 lessThanEq :drawMaterials:target.1 0          if target > 0 then
  421:  sensor *tmp248 .core @thorium                                drawItem(in out col, in out y, columns, item, core.sensor(item), target, target);
  422:  op mul *tmp253 122 *tmp248                                   var length = min(barLength, barLength * current / target);
  423:  op div *tmp254 *tmp253 :drawMaterials:target.1               ...
  424:  op min :drawItem.5:length 122 *tmp254                        ...
  425:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  426:  op add *tmp265 :drawMaterials:y 5                            image(iconX, y + ICON_Y, item, 16, 0);
  427:  draw image 11 *tmp265 @thorium 16 0 0                        ...
  428:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  429:  draw rect 22 :drawMaterials:y :drawItem.5:length 10 0 0      rect(barX, y, length, BAR_HEIGHT);
  430:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  431:  draw lineRect 22 :drawMaterials:y 122 10 0 0                 lineRect(barX, y, barLength, BAR_HEIGHT);
  432:  op add *tmp267 :drawMaterials:y 7                            drawBold(textX, y + ICON_Y + 2, @right, text);
  433:  print :drawMaterials:target.1                                print(text);
  434:  draw print 170 *tmp267 @right                                mlogText("draw", "print", in x, in y, in alignment);
  435:  print :drawMaterials:target.1                                print(text);
  436:  draw print 171 *tmp267 @right                                mlogText("draw", "print", in x, in y, in alignment);
        label *label449                                              if target > 0 then
        label *label134                                              for var item, target in
        label *label130                                              if count then
        label *label111                                              elsif nextBlock == @titanium or nextBlock == @ore-titanium then
        label *label51                                               if nextBlock == null then
  437:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  438:  set *tmp274 25                                               var y = materialCount < 4 ? HEADER3_Y : HEADER4_Y;
  439:  jump *label156 greaterThanEq .materialCount 4                ...
  440:  set *tmp274 40                                               ...
        label *label156                                              ...
  441:  print "Builder"                                              print(text);
  442:  draw print 22 *tmp274 @bottomLeft                            mlogText("draw", "print", in x, in y, in alignment);
  443:  print "Builder"                                              print(text);
  444:  draw print 23 *tmp274 @bottomLeft                            mlogText("draw", "print", in x, in y, in alignment);
  445:  jump *label162 notEqual .transportItem null                  if transportItem == null then
  446:  op sub *tmp278 *tmp274 15                                    drawUnit(@poly, 0, in y - ROW_HEIGHT);
  447:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  448:  op sub *tmp295 *tmp274 10                                    image(iconX, y + ICON_Y, item, 16, 0);
  449:  draw image 11 *tmp295 @poly 16 0 0                           ...
  450:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  451:  draw rect 22 *tmp278 0 10 0 0                                rect(barX, y, length, BAR_HEIGHT);
  452:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  453:  draw lineRect 22 *tmp278 122 10 0 0                          lineRect(barX, y, barLength, BAR_HEIGHT);
  454:  op sub *tmp297 *tmp274 8                                     drawBold(textX, y + ICON_Y + 2, @right, text);
  455:  print .transportTarget                                       print(text);
  456:  draw print 170 *tmp297 @right                                mlogText("draw", "print", in x, in y, in alignment);
  457:  print .transportTarget                                       print(text);
  458:  draw print 171 *tmp297 @right                                mlogText("draw", "print", in x, in y, in alignment);
  459:  jump *label163 always 0 0                                    if transportItem == null then
        label *label162                                              ...
  460:  sensor :drawUnit:unitItem @unit @firstItem                   var unitItem = @unit.@firstItem;
  461:  sensor *tmp304 @unit @totalItems                             drawUnit(transportItem, @unit.@totalItems * (unitItem == transportItem), in y - ROW_HEIGHT);
  462:  op equal *tmp305 :drawUnit:unitItem .transportItem           ...
  463:  op mul *tmp306 *tmp304 *tmp305                               ...
  464:  op sub *tmp307 *tmp274 15                                    ...
  465:  set :drawUnit.2:item .transportItem                          ...
  466:  set :drawItem.7:target .transportTarget                      drawItem(in 0, in out y, 1, item, items, transportTarget, transportTarget);
  467:  op mul *tmp312 122 *tmp306                                   var length = min(barLength, barLength * current / target);
  468:  op div *tmp313 *tmp312 :drawItem.7:target                    ...
  469:  op min :drawItem.7:length 122 *tmp313                        ...
  470:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  471:  op sub *tmp324 *tmp274 10                                    image(iconX, y + ICON_Y, item, 16, 0);
  472:  draw image 11 *tmp324 :drawUnit.2:item 16 0 0                ...
  473:  draw color 0 128 0 255 0 0                                   color(0,128,0,255);
  474:  draw rect 22 *tmp307 :drawItem.7:length 10 0 0               rect(barX, y, length, BAR_HEIGHT);
  475:  draw color 0 255 0 255 0 0                                   color(0,255,0,255);
  476:  draw lineRect 22 *tmp307 122 10 0 0                          lineRect(barX, y, barLength, BAR_HEIGHT);
  477:  op sub *tmp326 *tmp274 8                                     drawBold(textX, y + ICON_Y + 2, @right, text);
  478:  print .transportTarget                                       print(text);
  479:  draw print 170 *tmp326 @right                                mlogText("draw", "print", in x, in y, in alignment);
  480:  print .transportTarget                                       print(text);
  481:  draw print 171 *tmp326 @right                                mlogText("draw", "print", in x, in y, in alignment);
        label *label163                                              if transportItem == null then
  482:  set :drawUnits:x 170                                         var x = 170;
  483:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  484:  set :drawUnitCount:count .displayPolys                       drawUnitCount(@poly, displayPolys, ref x);
  485:  jump *label184 lessThanEq :drawUnitCount:count 0             if count > 0 then
  486:  draw image 150 127 @poly 12 0 0                              image(x - 20, HEADER1_Y - 34, type, 12, 0);
  487:  print "x"                                                    print(text);
  488:  print :drawUnitCount:count                                   ...
  489:  draw print 170 129 @right                                    mlogText("draw", "print", in x, in y, in alignment);
  490:  op sub :drawUnits:x 170 30                                   x -= 30;
        label *label184                                              if count > 0 then
  491:  set :drawUnitCount.1:count .displayMonos                     drawUnitCount(@mono, displayMonos, ref x);
  492:  jump *label189 lessThanEq :drawUnitCount.1:count 0           if count > 0 then
  493:  op sub *tmp337 :drawUnits:x 20                               image(x - 20, HEADER1_Y - 34, type, 12, 0);
  494:  draw image *tmp337 127 @mono 12 0 0                          ...
  495:  print "x"                                                    print(text);
  496:  print :drawUnitCount.1:count                                 ...
  497:  draw print :drawUnits:x 129 @right                           mlogText("draw", "print", in x, in y, in alignment);
  498:  op sub :drawUnits:x :drawUnits:x 30                          x -= 30;
        label *label189                                              if count > 0 then
  499:  set :drawUnitCount.2:count .displayFlares                    drawUnitCount(@flare, displayFlares, ref x);
  500:  jump *label194 lessThanEq :drawUnitCount.2:count 0           if count > 0 then
  501:  op sub *tmp340 :drawUnits:x 20                               image(x - 20, HEADER1_Y - 34, type, 12, 0);
  502:  draw image *tmp340 127 @flare 12 0 0                         ...
  503:  print "x"                                                    print(text);
  504:  print :drawUnitCount.2:count                                 ...
  505:  draw print :drawUnits:x 129 @right                           mlogText("draw", "print", in x, in y, in alignment);
        label *label194                                              if count > 0 then
  506:  drawflush display1                                           drawflush(display1);
  507:  jump *label15 always 0 0                                     if page == 0 then
        label *label14                                               ...
  508:  jump *label198 notEqual .page 1                              elsif page == 1 then
  509:  draw reset 0 0 0 0 0 0                                       reset();
  510:  draw clear 0 0 32 0 0 0                                      clear(0, 0, 32);
  511:  draw col %[gold] 0 0 0 0 0                                   col(%[gold]);
  512:  print "Base map"                                             print(text);
  513:  draw print 172 172 @topRight                                 mlogText("draw", "print", in x, in y, in alignment);
  514:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  515:  draw translate 88 88 0 0 0 0                                 translate(176 / 2, 176 / 2);
  516:  draw scale 5.866666666666666 5.866666666666666 0 0 0 0       scale(176 / 15 / 2, 176 / 15 / 2);
  517:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  518:  draw image 0 0 @core-shard 6 0 0                             image(0, 0, @core-shard, 6, 0);
  519:  set :displayBaseMap:cfg "#'+nA######%#"                      for var cfg in BLOCKS do
  520:  setaddr *tmp343 *label206                                    ...
  521:  jump *label203 always 0 0                                    ...
        multilabel *label206                                         ...
  522:  set :displayBaseMap:cfg "k*/(7######$$"                      ...
  523:  setaddr *tmp343 *label207                                    ...
  524:  jump *label203 always 0 0                                    ...
        multilabel *label207                                         ...
  525:  set :displayBaseMap:cfg "k+/(7######$%"                      ...
  526:  setaddr *tmp343 *label208                                    ...
  527:  jump *label203 always 0 0                                    ...
        multilabel *label208                                         ...
  528:  set :displayBaseMap:cfg "m*.<2######$&"                      ...
  529:  setaddr *tmp343 *label209                                    ...
  530:  jump *label203 always 0 0                                    ...
        multilabel *label209                                         ...
  531:  set :displayBaseMap:cfg "%+-A<######%'"                      ...
  532:  setaddr *tmp343 *label210                                    ...
  533:  jump *label203 always 0 0                                    ...
        multilabel *label210                                         ...
  534:  set :displayBaseMap:cfg "T+,%%######$("                      ...
  535:  setaddr *tmp343 *label211                                    ...
  536:  jump *label203 always 0 0                                    ...
        multilabel *label211                                         ...
  537:  set :displayBaseMap:cfg "w**5#-#####%)"                      ...
  538:  setaddr *tmp343 *label212                                    ...
  539:  jump *label203 always 0 0                                    ...
        multilabel *label212                                         ...
  540:  set :displayBaseMap:cfg "*,###A<###$*"                      ...
  541:  setaddr *tmp343 *label213                                    ...
  542:  jump *label203 always 0 0                                    ...
        multilabel *label213                                         ...
  543:  set :displayBaseMap:cfg "T),%%######$+"                      ...
  544:  setaddr *tmp343 *label214                                    ...
  545:  jump *label203 always 0 0                                    ...
        multilabel *label214                                         ...
  546:  set :displayBaseMap:cfg "W*-'%######$,"                      ...
  547:  setaddr *tmp343 *label215                                    ...
  548:  jump *label203 always 0 0                                    ...
        multilabel *label215                                         ...
  549:  set :displayBaseMap:cfg "®-.}U#U####$-"                      ...
  550:  setaddr *tmp343 *label216                                    ...
  551:  jump *label203 always 0 0                                    ...
        multilabel *label216                                         ...
  552:  set :displayBaseMap:cfg "g)'%)######$."                      ...
  553:  setaddr *tmp343 *label217                                    ...
  554:  jump *label203 always 0 0                                    ...
        multilabel *label217                                         ...
  555:  set :displayBaseMap:cfg "(*###A<###$/"                      ...
  556:  setaddr *tmp343 *label218                                    ...
  557:  jump *label203 always 0 0                                    ...
        multilabel *label218                                         ...
  558:  set :displayBaseMap:cfg "'(_i#####&&0"                      ...
  559:  setaddr *tmp343 *label219                                    ...
  560:  jump *label203 always 0 0                                    ...
        multilabel *label219                                         ...
  561:  set :displayBaseMap:cfg ",)###A<###$1"                      ...
  562:  setaddr *tmp343 *label220                                    ...
  563:  jump *label203 always 0 0                                    ...
        multilabel *label220                                         ...
  564:  set :displayBaseMap:cfg "T,*%%######$2"                      ...
  565:  setaddr *tmp343 *label221                                    ...
  566:  jump *label203 always 0 0                                    ...
        multilabel *label221                                         ...
  567:  set :displayBaseMap:cfg "',+_AA#####%3"                      ...
  568:  setaddr *tmp343 *label222                                    ...
  569:  jump *label203 always 0 0                                    ...
        multilabel *label222                                         ...
  570:  set :displayBaseMap:cfg "z%-AAA##A##%4"                      ...
  571:  setaddr *tmp343 *label223                                    ...
  572:  jump *label203 always 0 0                                    ...
        multilabel *label223                                         ...
  573:  set :displayBaseMap:cfg "W'*'%######$5"                      ...
  574:  setaddr *tmp343 *label224                                    ...
  575:  jump *label203 always 0 0                                    ...
        multilabel *label224                                         ...
  576:  set :displayBaseMap:cfg "W&*'%######$6"                      ...
  577:  setaddr *tmp343 *label225                                    ...
  578:  jump *label203 always 0 0                                    ...
        multilabel *label225                                         ...
  579:  set :displayBaseMap:cfg "o%+FK<A####%7"                      ...
  580:  setaddr *tmp343 *label226                                    ...
  581:  jump *label203 always 0 0                                    ...
        multilabel *label226                                         ...
  582:  set :displayBaseMap:cfg "$(.#U<###&8"                      ...
  583:  setaddr *tmp343 *label227                                    ...
  584:  jump *label203 always 0 0                                    ...
        multilabel *label227                                         ...
  585:  set :displayBaseMap:cfg "z%/AAA##A##%9"                      ...
  586:  setaddr *tmp343 *label228                                    ...
  587:  jump *label203 always 0 0                                    ...
        multilabel *label228                                         ...
  588:  set :displayBaseMap:cfg " '%-#2#####&:"                      ...
  589:  setaddr *tmp343 *label229                                    ...
  590:  jump *label203 always 0 0                                    ...
        multilabel *label229                                         ...
  591:  set :displayBaseMap:cfg "*(###A<###$;"                      ...
  592:  setaddr *tmp343 *label230                                    ...
  593:  jump *label203 always 0 0                                    ...
        multilabel *label230                                         ...
  594:  set :displayBaseMap:cfg "X*''%######$<"                      ...
  595:  setaddr *tmp343 *label231                                    ...
  596:  jump *label203 always 0 0                                    ...
        multilabel *label231                                         ...
  597:  set :displayBaseMap:cfg "*%ë#}####&="                      ...
  598:  setaddr *tmp343 *label232                                    ...
  599:  jump *label203 always 0 0                                    ...
        multilabel *label232                                         ...
  600:  set :displayBaseMap:cfg "l/,#U#A7###&>"                      ...
  601:  setaddr *tmp343 *label233                                    ...
  602:  jump *label203 always 0 0                                    ...
        multilabel *label233                                         ...
  603:  set :displayBaseMap:cfg "W&*'%######$?"                      ...
  604:  setaddr *tmp343 *label234                                    ...
  605:  jump *label203 always 0 0                                    ...
        multilabel *label234                                         ...
  606:  set :displayBaseMap:cfg "x**F#AA7###&@"                      ...
  607:  setaddr *tmp343 *label235                                    ...
  608:  jump *label203 always 0 0                                    ...
        multilabel *label235                                         ...
  609:  set :displayBaseMap:cfg "r**#-#+####$A"                      ...
  610:  setaddr *tmp343 *label236                                    ...
  611:  jump *label203 always 0 0                                    ...
        multilabel *label236                                         ...
  612:  set :displayBaseMap:cfg "**#######%B"                      ...
  613:  setaddr *tmp343 *label237                                    ...
  614:  jump *label203 always 0 0                                    ...
        multilabel *label237                                         ...
  615:  set :displayBaseMap:cfg "%.)A<######%C"                      ...
  616:  setaddr *tmp343 *label238                                    ...
  617:  jump *label203 always 0 0                                    ...
        multilabel *label238                                         ...
  618:  set :displayBaseMap:cfg "T-*%%######$D"                      ...
  619:  setaddr *tmp343 *label239                                    ...
  620:  jump *label203 always 0 0                                    ...
        multilabel *label239                                         ...
  621:  set :displayBaseMap:cfg "T-)%%######$E"                      ...
  622:  setaddr *tmp343 *label240                                    ...
  623:  jump *label203 always 0 0                                    ...
        multilabel *label240                                         ...
  624:  set :displayBaseMap:cfg "--###A<###$F"                      ...
  625:  setaddr *tmp343 *label241                                    ...
  626:  jump *label203 always 0 0                                    ...
        multilabel *label241                                         ...
  627:  set :displayBaseMap:cfg "+(###A<###$G"                      ...
  628:  setaddr *tmp343 *label242                                    ...
  629:  jump *label203 always 0 0                                    ...
        multilabel *label242                                         ...
  630:  set :displayBaseMap:cfg "X+''%######$H"                      ...
  631:  setaddr *tmp343 *label243                                    ...
  632:  jump *label203 always 0 0                                    ...
        multilabel *label243                                         ...
  633:  set :displayBaseMap:cfg ".&#ʭ#ǥƁ#ʭ#(I"                      ...
  634:  setaddr *tmp343 *label244                                    ...
        label *label203                                              ...
  635:  read *tmp430 :displayBaseMap:cfg 0                           type = lookup(:block, char(cfg, index++) - 35);
  636:  op sub *tmp431 *tmp430 35                                    ...
  637:  lookup block :unpackCfg:type *tmp431                         ...
  638:  read *tmp434 :displayBaseMap:cfg 1                           x = char(cfg, index++) - 35 - 7;
  639:  op sub :unpackCfg:x *tmp434 42                               ...
  640:  read *tmp438 :displayBaseMap:cfg 2                           y = char(cfg, index++) - 35 - 7;
  641:  op sub :unpackCfg:y *tmp438 42                               ...
  642:  read *tmp463 :displayBaseMap:cfg 10                          rotation = char(cfg, index++) - 35;
  643:  op sub :unpackCfg:rotation *tmp463 35                        ...
  644:  read *tmp466 :displayBaseMap:cfg 11                          size = char(cfg, index++) - 35;
  645:  op sub :unpackCfg:size *tmp466 35                            ...
  646:  read *tmp469 :displayBaseMap:cfg 12                          ind = char(cfg, index++) - 35;
  647:  op sub :unpackCfg:ind *tmp469 35                             ...
  648:  op or *tmp471 :unpackCfg:x :unpackCfg:y                      if x | y then
  649:  jump *label303 equal *tmp471 false                           ...
  650:  op shl *tmp473 1 :unpackCfg:ind                              if blocksBuilt & (1 << index) then
  651:  op and *tmp474 .blocksBuilt *tmp473                          ...
  652:  jump *label301 equal *tmp474 false                           ...
  653:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  654:  jump *label302 always 0 0                                    if blocksBuilt & (1 << index) then
        label *label301                                              ...
  655:  draw color 128 255 128 128 0 0                               color(128, 255, 128, 128);
        label *label302                                              if blocksBuilt & (1 << index) then
  656:  op and *tmp476 :unpackCfg:size 1                             var offset = 1 - (size & 1);
  657:  op sub :drawBlock:offset 1 *tmp476                           ...
  658:  op mul *tmp478 2 :unpackCfg:x                                image(2 * x + offset, 2 * y + offset, type, 2 * size, 90 * rotation);
  659:  op add *tmp479 *tmp478 :drawBlock:offset                     ...
  660:  op mul *tmp480 2 :unpackCfg:y                                ...
  661:  op add *tmp481 *tmp480 :drawBlock:offset                     ...
  662:  op mul *tmp482 2 :unpackCfg:size                             ...
  663:  op mul *tmp483 90 :unpackCfg:rotation                        ...
  664:  draw image *tmp479 *tmp481 :unpackCfg:type *tmp482 *tmp483 0 ...
        label *label303                                              if x | y then
  665:  set :displayBaseMap:i .recentBuildIndex                      var i = recentBuildIndex;
  666:  jump *label246 lessThan :displayBaseMap:i 0                  if i >= 0 then
  667:  set .recentBuildIndex -1                                     recentBuildIndex = -1;
  668:  op mul *tmp484 :displayBaseMap:i 2                           drawBlock(BLOCKS[i]);
  669:  multijump *label456 *tmp484 0                                ...
        multilabel *label456                                         ...
  670:  set :drawBlock:cfg "#'+nA######%#"                           ...
  671:  jump *label455 always 0 0                                    ...
        multilabel *label457                                         ...
  672:  set :drawBlock:cfg "k*/(7######$$"                           ...
  673:  jump *label455 always 0 0                                    ...
        multilabel *label458                                         ...
  674:  set :drawBlock:cfg "k+/(7######$%"                           ...
  675:  jump *label455 always 0 0                                    ...
        multilabel *label459                                         ...
  676:  set :drawBlock:cfg "m*.<2######$&"                           ...
  677:  jump *label455 always 0 0                                    ...
        multilabel *label460                                         ...
  678:  set :drawBlock:cfg "%+-A<######%'"                           ...
  679:  jump *label455 always 0 0                                    ...
        multilabel *label461                                         ...
  680:  set :drawBlock:cfg "T+,%%######$("                           ...
  681:  jump *label455 always 0 0                                    ...
        multilabel *label462                                         ...
  682:  set :drawBlock:cfg "w**5#-#####%)"                           ...
  683:  jump *label455 always 0 0                                    ...
        multilabel *label463                                         ...
  684:  set :drawBlock:cfg "*,###A<###$*"                           ...
  685:  jump *label455 always 0 0                                    ...
        multilabel *label464                                         ...
  686:  set :drawBlock:cfg "T),%%######$+"                           ...
  687:  jump *label455 always 0 0                                    ...
        multilabel *label465                                         ...
  688:  set :drawBlock:cfg "W*-'%######$,"                           ...
  689:  jump *label455 always 0 0                                    ...
        multilabel *label466                                         ...
  690:  set :drawBlock:cfg "®-.}U#U####$-"                           ...
  691:  jump *label455 always 0 0                                    ...
        multilabel *label467                                         ...
  692:  set :drawBlock:cfg "g)'%)######$."                           ...
  693:  jump *label455 always 0 0                                    ...
        multilabel *label468                                         ...
  694:  set :drawBlock:cfg "(*###A<###$/"                           ...
  695:  jump *label455 always 0 0                                    ...
        multilabel *label469                                         ...
  696:  set :drawBlock:cfg "'(_i#####&&0"                           ...
  697:  jump *label455 always 0 0                                    ...
        multilabel *label470                                         ...
  698:  set :drawBlock:cfg ",)###A<###$1"                           ...
  699:  jump *label455 always 0 0                                    ...
        multilabel *label471                                         ...
  700:  set :drawBlock:cfg "T,*%%######$2"                           ...
  701:  jump *label455 always 0 0                                    ...
        multilabel *label472                                         ...
  702:  set :drawBlock:cfg "',+_AA#####%3"                           ...
  703:  jump *label455 always 0 0                                    ...
        multilabel *label473                                         ...
  704:  set :drawBlock:cfg "z%-AAA##A##%4"                           ...
  705:  jump *label455 always 0 0                                    ...
        multilabel *label474                                         ...
  706:  set :drawBlock:cfg "W'*'%######$5"                           ...
  707:  jump *label455 always 0 0                                    ...
        multilabel *label475                                         ...
  708:  set :drawBlock:cfg "W&*'%######$6"                           ...
  709:  jump *label455 always 0 0                                    ...
        multilabel *label476                                         ...
  710:  set :drawBlock:cfg "o%+FK<A####%7"                           ...
  711:  jump *label455 always 0 0                                    ...
        multilabel *label477                                         ...
  712:  set :drawBlock:cfg "$(.#U<###&8"                           ...
  713:  jump *label455 always 0 0                                    ...
        multilabel *label478                                         ...
  714:  set :drawBlock:cfg "z%/AAA##A##%9"                           ...
  715:  jump *label455 always 0 0                                    ...
        multilabel *label479                                         ...
  716:  set :drawBlock:cfg " '%-#2#####&:"                           ...
  717:  jump *label455 always 0 0                                    ...
        multilabel *label480                                         ...
  718:  set :drawBlock:cfg "*(###A<###$;"                           ...
  719:  jump *label455 always 0 0                                    ...
        multilabel *label481                                         ...
  720:  set :drawBlock:cfg "X*''%######$<"                           ...
  721:  jump *label455 always 0 0                                    ...
        multilabel *label482                                         ...
  722:  set :drawBlock:cfg "*%ë#}####&="                           ...
  723:  jump *label455 always 0 0                                    ...
        multilabel *label483                                         ...
  724:  set :drawBlock:cfg "l/,#U#A7###&>"                           ...
  725:  jump *label455 always 0 0                                    ...
        multilabel *label484                                         ...
  726:  set :drawBlock:cfg "W&*'%######$?"                           ...
  727:  jump *label455 always 0 0                                    ...
        multilabel *label485                                         ...
  728:  set :drawBlock:cfg "x**F#AA7###&@"                           ...
  729:  jump *label455 always 0 0                                    ...
        multilabel *label486                                         ...
  730:  set :drawBlock:cfg "r**#-#+####$A"                           ...
  731:  jump *label455 always 0 0                                    ...
        multilabel *label487                                         ...
  732:  set :drawBlock:cfg "**#######%B"                           ...
  733:  jump *label455 always 0 0                                    ...
        multilabel *label488                                         ...
  734:  set :drawBlock:cfg "%.)A<######%C"                           ...
  735:  jump *label455 always 0 0                                    ...
        multilabel *label489                                         ...
  736:  set :drawBlock:cfg "T-*%%######$D"                           ...
  737:  jump *label455 always 0 0                                    ...
        multilabel *label490                                         ...
  738:  set :drawBlock:cfg "T-)%%######$E"                           ...
  739:  jump *label455 always 0 0                                    ...
        multilabel *label491                                         ...
  740:  set :drawBlock:cfg "--###A<###$F"                           ...
  741:  jump *label455 always 0 0                                    ...
        multilabel *label492                                         ...
  742:  set :drawBlock:cfg "+(###A<###$G"                           ...
  743:  jump *label455 always 0 0                                    ...
        multilabel *label493                                         ...
  744:  set :drawBlock:cfg "X+''%######$H"                           ...
  745:  jump *label455 always 0 0                                    ...
        multilabel *label494                                         ...
  746:  set :drawBlock:cfg ".&#ʭ#ǥƁ#ʭ#(I"                           ...
        label *label455                                              ...
  747:  read *tmp430 :drawBlock:cfg 0                                type = lookup(:block, char(cfg, index++) - 35);
  748:  op sub *tmp431 *tmp430 35                                    ...
  749:  lookup block :unpackCfg:type *tmp431                         ...
  750:  read *tmp434 :drawBlock:cfg 1                                x = char(cfg, index++) - 35 - 7;
  751:  op sub :unpackCfg:x *tmp434 42                               ...
  752:  read *tmp438 :drawBlock:cfg 2                                y = char(cfg, index++) - 35 - 7;
  753:  op sub :unpackCfg:y *tmp438 42                               ...
  754:  read *tmp463 :drawBlock:cfg 10                               rotation = char(cfg, index++) - 35;
  755:  op sub :unpackCfg:rotation *tmp463 35                        ...
  756:  read *tmp466 :drawBlock:cfg 11                               size = char(cfg, index++) - 35;
  757:  op sub :unpackCfg:size *tmp466 35                            ...
  758:  read *tmp469 :drawBlock:cfg 12                               ind = char(cfg, index++) - 35;
  759:  op sub :unpackCfg:ind *tmp469 35                             ...
  760:  op or *tmp471 :unpackCfg:x :unpackCfg:y                      if x | y then
  761:  jump *label310 equal *tmp471 false                           ...
  762:  op shl *tmp473 1 :unpackCfg:ind                              if blocksBuilt & (1 << index) then
  763:  op and *tmp474 .blocksBuilt *tmp473                          ...
  764:  jump *label308 equal *tmp474 false                           ...
  765:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  766:  jump *label309 always 0 0                                    if blocksBuilt & (1 << index) then
        label *label308                                              ...
  767:  draw color 128 255 128 128 0 0                               color(128, 255, 128, 128);
        label *label309                                              if blocksBuilt & (1 << index) then
  768:  op and *tmp476 :unpackCfg:size 1                             var offset = 1 - (size & 1);
  769:  op sub :drawBlock:offset 1 *tmp476                           ...
  770:  op mul *tmp478 2 :unpackCfg:x                                image(2 * x + offset, 2 * y + offset, type, 2 * size, 90 * rotation);
  771:  op add *tmp479 *tmp478 :drawBlock:offset                     ...
  772:  op mul *tmp480 2 :unpackCfg:y                                ...
  773:  op add *tmp481 *tmp480 :drawBlock:offset                     ...
  774:  op mul *tmp482 2 :unpackCfg:size                             ...
  775:  op mul *tmp483 90 :unpackCfg:rotation                        ...
  776:  draw image *tmp479 *tmp481 :unpackCfg:type *tmp482 *tmp483 0 ...
        label *label310                                              if x | y then
        label *label246                                              if i >= 0 then
  777:  sensor *tmp348 switch1 @enabled                              if switch1.enabled then
  778:  jump *label249 equal *tmp348 false                           ...
  779:  drawflush null                                               drawflush(null);
  780:  jump *label205 always 0 0                                    break;
        label *label249                                              if switch1.enabled then
  781:  jump *label251 equal .pageSwitched false                     if pageSwitched then
  782:  drawflush display1                                           drawflush(display1);
        label *label251                                              if pageSwitched then
  783:  multijump *tmp343 0 0                                        for var cfg in BLOCKS do
        multilabel *label244                                         ...
        label *label205                                              ...
  784:  drawflush display1                                           drawflush(display1);
  785:  jump *label199 always 0 0                                    elsif page == 1 then
        label *label198                                              ...
  786:  op sub :displayLog:page .page 2                              displayLog(page - 2);
  787:  set :displayLog:x 11                                         var x = 3 + 8;
  788:  set :displayLog:y 163                                        var y = 176 - 5 - 8;
  789:  read :displayLog:logPosition bank1 511                       var logPosition = bank1[511];
  790:  op sub *tmp354 510 :displayLog:logPosition                   var pages = max(1, (records - 1) \ 32 + 1);
  791:  op idiv *tmp355 *tmp354 32                                   ...
  792:  op add *tmp356 *tmp355 1                                     ...
  793:  op max :displayLog:pages 1 *tmp356                           ...
  794:  op add .numPages :displayLog:pages 2                         numPages = pages + 2;
  795:  op mul *tmp359 32 :displayLog:page                           var start = 511 - 32 * page;
  796:  op sub :displayLog:start 511 *tmp359                         ...
  797:  op sub *tmp361 :displayLog:start 32                          var stop = max(logPosition, start - 32);
  798:  op max :displayLog:stop :displayLog:logPosition *tmp361      ...
  799:  draw col %[lightgray] 0 0 0 0 0                              col(%[lightgray]);
  800:  op sub *tmp363 .page 1                                       print(page + 1, "/");
  801:  print *tmp363                                                ...
  802:  print "/"                                                    ...
  803:  print :displayLog:pages                                      print(text);
  804:  draw print 172 4 @bottomRight                                mlogText("draw", "print", in x, in y, in alignment);
  805:  draw col %[white] 0 0 0 0 0                                  col(%[white]);
  806:  op sub :displayLog:position :displayLog:start 1              for var position in stop ... start descending do
  807:  jump *label258 lessThan :displayLog:position :displayLog:sto ...
        label *label298                                              ...
  808:  read :displayLog:record bank1 :displayLog:position           var record = bank1[position];
  809:  op mod :displayRecord:id :displayLog:record 1000             var id = record % 1000;
  810:  lookup block *tmp369 :displayRecord:id                       var icon = id > @blockCount ? lookup(:unit, id - @blockCount) : lookup(:block, id);
  811:  jump *label261 lessThanEq :displayRecord:id @blockCount      ...
  812:  op sub *tmp370 :displayRecord:id @blockCount                 ...
  813:  lookup unit *tmp369 *tmp370                                  ...
        label *label261                                              ...
  814:  op div *tmp373 :displayLog:record 1000                       var t = floor(record / 1000 / 120);
  815:  op idiv :displayRecord:t *tmp373 120                         ...
  816:  op idiv :displayRecord:m :displayRecord:t 60                 var m = t \ 60;
  817:  op mod :displayRecord:s :displayRecord:t 60                  var s = t % 60;
  818:  set *tmp379 ""                                               print(m, ":", s < 10 ? "0" : "");
  819:  jump *label263 greaterThanEq :displayRecord:s 10             ...
  820:  set *tmp379 "0"                                              ...
        label *label263                                              ...
  821:  print :displayRecord:m                                       ...
  822:  print ":"                                                    ...
  823:  print *tmp379                                                ...
  824:  draw image :displayLog:x :displayLog:y *tmp369 14 0 0        image(x, y, image, 14, 0);
  825:  op add *tmp381 :displayLog:x 44                              drawText(x + 56 - 12, y + 2, @right, text);
  826:  op add *tmp382 :displayLog:y 2                               ...
  827:  print :displayRecord:s                                       print(text);
  828:  draw print *tmp381 *tmp382 @right                            mlogText("draw", "print", in x, in y, in alignment);
  829:  op sub :displayLog:y :displayLog:y 15                        y -= 15;
  830:  jump *label267 greaterThanEq :displayLog:y 10                if y < 10 then
  831:  op add :displayLog:x :displayLog:x 58                        x += 58;
  832:  set :displayLog:y 164                                        y = 176 - 4 - 8;
        label *label267                                              if y < 10 then
  833:  drawflush display1                                           drawflush(display1);
  834:  sensor *tmp385 switch1 @enabled                              if switch1.enabled then break; end;
  835:  jump *label258 notEqual *tmp385 false                        ...
  836:  op sub :displayLog:position :displayLog:position 1           for var position in stop ... start descending do
  837:  jump *label298 greaterThanEq :displayLog:position :displayLo ...
        label *label258                                              ...
        label *label199                                              elsif page == 1 then
        label *label15                                               if page == 0 then
  838:  jump *label271 lessThanEq .displayMegas 0                    if displayMegas > 0 then
  839:  print "[gold]All done.[]\nNothing more to see here.\nGo home println("[gold]All done.[]\nNothing more to see here.\nGo home.");
  840:  printflush message1                                          printflush(message1);
  841:  jump *label272 always 0 0                                    if displayMegas > 0 then
        label *label271                                              ...
  842:  print "[gold]Building {0}\n================================= println($"[gold]Building $nextBlock");
  843:  format .nextBlock                                            ...
  844:  format .status1                                              println(status1);
  845:  format .status2                                              println($"$status2$item2 ($block2)");
  846:  format .item2                                                ...
  847:  format .block2                                               ...
  848:  format .status3                                              println(status3);
  849:  printflush message1                                          printflush(message1);
        label *label272                                              if displayMegas > 0 then
  850:  sensor .pageSwitched switch1 @enabled                        pageSwitched = switch1.enabled;
  851:  jump *label9 equal .pageSwitched false                       if pageSwitched then
  852:  control enabled switch1 false 0 0 0                          switch1.enabled = false;
  853:  op add *tmp394 .page 1                                       page = (page + 1) % numPages;
  854:  op mod .page *tmp394 .numPages                               ...
  855:  drawflush null                                               drawflush(null);
  856:  draw reset 0 0 0 0 0 0                                       reset();
  857:  draw clear 0 0 32 0 0 0                                      clear(0, 0, 32);
  858:  jump *label9 always 0 0                                      while true do


Performance: parsed in 541 ms, compiled in 326 ms, optimized in 3,010 ms, run in 5 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (16 steps):
The program didn't generate any output.
Execution exception at instruction 15: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
