module Common;

const _Common_offset = 60 + 14;

def packCfg(type, x, y, rotation, ind)
    encode(_Common_offset, 'A' - _Common_offset, type.@id, round(2 * x), round(2 * y), rotation, ind) + "-" + type.@name + ind;
end;

void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
    var index = 1;
    type = lookup(:block, char(cfg, index++) - _Common_offset);
    x = (char(cfg, index++) - _Common_offset) / 2;
    y = (char(cfg, index++) - _Common_offset) / 2;
    rotation = char(cfg, index++) - _Common_offset;
    ind = char(cfg, index++) - _Common_offset;

    cu = type.@copper;
    pb = type.@lead;
    gr = type.@graphite;
    si = type.@silicon;
    ti = type.@titanium;
    mg = type.@metaglass;
    th = type.@thorium;
    size = type.@size;
    //println($"Type: $type, x: $x, y: $y, $cu, $pb, $gr, $si, $ti, $mg, $rotation");
end;

//                                    type,                             x,    y, rot, ind
const PRESS                 = packCfg(@graphite-press,               -2.5, +1.5,   0,  0);
const BATTERY1              = packCfg(@battery,                       0.0, +5.0,   0,  1);
const BATTERY2              = packCfg(@battery,                      +1.0, +5.0,   0,  2);
const GENERATOR             = packCfg(@combustion-generator,          0.0, +4.0,   0,  3);
const SMELTER               = packCfg(@silicon-smelter,              +1.5, +3.5,   0,  4);
const INVERTED_SORT1        = packCfg(@inverted-sorter,              +1.0, +2.0,   0,  5);
const PNEUMATIC_DRILL       = packCfg(@pneumatic-drill,               0.0,  0.0,   0,  6);
const UNLOADER1             = packCfg(@unloader,                      0.0, +2.0,   0,  7);
const INVERTED_SORT2        = packCfg(@inverted-sorter,              -1.0, +2.0,   0,  8);
const OVERFLOW_GATE1        = packCfg(@overflow-gate,                 0.0, +3.0,   0,  9);
const PROCESSOR             = packCfg(@micro-processor,              -2.0, -2.0,   0, 10);
const POWER_NODE            = packCfg(@power-node,                   -2.0, -0.0,   0, 11);
const UNLOADER2             = packCfg(@unloader,                     -2.0, -1.0,   0, 12);
const AIR_FACTORY           = packCfg(@air-factory,                  -4.0, -1.0,   3, 13);
const UNLOADER3             = packCfg(@unloader,                     +2.0, -1.0,   0, 14);
const INVERTED_SORT3        = packCfg(@inverted-sorter,              +2.0,  0.0,   0, 15);
const KILN                  = packCfg(@kiln,                         +2.5, +1.5,   0, 16);
const WATER_EXT             = packCfg(@water-extractor,              -4.5, +4.5,   0, 17);
const UNLOADER3A            = packCfg(@unloader,                     -4.0,  1.0,   0, 18);
const STEAM_GEN             = packCfg(@steam-generator,              -4.5, +2.5,   0, 19);
const MULTIPRESS            = packCfg(@multi-press,                  -2.0, +4.0,   0, 20);
const PAYLOAD_ROUTER        = packCfg(@payload-router,               -4.0, -4.0,   0, 21);
const UNLOADER4             = packCfg(@unloader,                     -1.0, -2.0,   0, 22);
const ADDITIVE_REC          = packCfg(@additive-reconstructor,       -1.0, -4.0,   0, 23);
const BATTERY_LARGE         = packCfg(@battery-large,                +5.0, +2.0,   0, 24);
const LASER_DRILL           = packCfg(@laser-drill,                   0.0,  0.0,   0, 25);
const SOLAR_PANEL           = packCfg(@solar-panel,                   0.0,  0.0,   0, 26);
const CONTAINER             = packCfg(@container,                     0.0,  0.0,   0, 27);
const SMELTER2              = packCfg(@silicon-smelter,              +4.5, -0.5,   0, 28);
const INVERTED_SORT4        = packCfg(@inverted-sorter,              +3.0,  0.0,   0, 29);
const INVERTED_SORT5        = packCfg(@inverted-sorter,              +3.0, -1.0,   0, 30);
const UNLOADER5             = packCfg(@unloader,                     +3.0, +3.0,   0, 31);
const UNLOADER6             = packCfg(@unloader,                      0.0, -2.0,   0, 32);
const MULTIPLICATIVE_REC    = packCfg(@multiplicative-reconstructor, +3.0, -4.0,   0, 33);

const BLOCKS[] = (
        PRESS,
        BATTERY1,
        BATTERY2,
        GENERATOR,
        SMELTER,
        INVERTED_SORT1,
        PNEUMATIC_DRILL,
        UNLOADER1,
        INVERTED_SORT2,
        OVERFLOW_GATE1,
        PROCESSOR,
        POWER_NODE,
        UNLOADER2,
        AIR_FACTORY,
        UNLOADER3,
        INVERTED_SORT3,
        KILN,
        WATER_EXT,
        UNLOADER3A,
        STEAM_GEN,
        MULTIPRESS,
        PAYLOAD_ROUTER,
        UNLOADER4,
        ADDITIVE_REC,
        BATTERY_LARGE,
        LASER_DRILL,
        SOLAR_PANEL,
        CONTAINER,
        SMELTER2,
        INVERTED_SORT4,
        INVERTED_SORT5,
        UNLOADER5,
        UNLOADER6,
        MULTIPLICATIVE_REC
    );

volatile noinit mlog(PRESS) var press;
volatile noinit mlog(BATTERY1) var battery1;
volatile noinit mlog(BATTERY2) var battery2;
volatile noinit mlog(GENERATOR) var generator;
volatile noinit mlog(SMELTER) var smelter;
volatile noinit mlog(INVERTED_SORT1) var inverted_sort1;
volatile noinit mlog(PNEUMATIC_DRILL) var pneumatic_drill;
volatile noinit mlog(UNLOADER1) var unloader1;
volatile noinit mlog(INVERTED_SORT2) var inverted_sort2;
volatile noinit mlog(OVERFLOW_GATE1) var overflow_gate1;
volatile noinit mlog(PROCESSOR) var processor;
volatile noinit mlog(POWER_NODE) var power_node;
volatile noinit mlog(UNLOADER2) var unloader2;
volatile noinit mlog(AIR_FACTORY) var air_factory;
volatile noinit mlog(UNLOADER3) var unloader3;
volatile noinit mlog(INVERTED_SORT3) var inverted_sort3;
volatile noinit mlog(KILN) var kiln;
volatile noinit mlog(WATER_EXT) var water_ext;
volatile noinit mlog(UNLOADER3A) var unloader3a;
volatile noinit mlog(STEAM_GEN) var steam_gen;
volatile noinit mlog(MULTIPRESS) var multipress;
volatile noinit mlog(PAYLOAD_ROUTER) var payload_router;
volatile noinit mlog(UNLOADER4) var unloader4;
volatile noinit mlog(ADDITIVE_REC) var additive_rec;
volatile noinit mlog(BATTERY_LARGE) var battery_large;
volatile noinit mlog(LASER_DRILL) var laser_drill;
volatile noinit mlog(SOLAR_PANEL) var solar_panel;
volatile noinit mlog(CONTAINER) var container;
volatile noinit mlog(SMELTER2) var smelter2;
volatile noinit mlog(INVERTED_SORT4) var inverted_sort4;
volatile noinit mlog(INVERTED_SORT5) var inverted_sort5;
volatile noinit mlog(UNLOADER5) var unloader5;
volatile noinit mlog(UNLOADER6) var unloader6;
volatile noinit mlog(MULTIPLICATIVE_REC) var multiplicative_rec;
