jump 3 always 0 0
jump 6 always 0 0
jump 434 always 0 0
set *signature "385702d66f725e74:v1"
wait 1e12
jump 4 always 0 0
ubind :createTerrainMask:unit
op add *tmp2 :createTerrainMask:y 3
op add :isSolid:x :createTerrainMask:x 3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op shl *tmp0 :isSolid:result 1
op add :isSolid:x :createTerrainMask:x 2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
set :isSolid:x :createTerrainMask:x
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op add *tmp2 :createTerrainMask:y 2
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
set :isSolid:x :createTerrainMask:x
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op add *tmp2 :createTerrainMask:y 1
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
set :isSolid:x :createTerrainMask:x
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 3
set :isSolid:y :createTerrainMask:y
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 2
set :isSolid:y :createTerrainMask:y
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 1
set :isSolid:y :createTerrainMask:y
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
set :isSolid:x :createTerrainMask:x
set :isSolid:y :createTerrainMask:y
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -1
set :isSolid:y :createTerrainMask:y
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -2
set :isSolid:y :createTerrainMask:y
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -3
set :isSolid:y :createTerrainMask:y
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op add *tmp2 :createTerrainMask:y -1
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
set :isSolid:x :createTerrainMask:x
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op add *tmp2 :createTerrainMask:y -2
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
set :isSolid:x :createTerrainMask:x
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op add *tmp2 :createTerrainMask:y -3
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x 1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
set :isSolid:x :createTerrainMask:x
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -1
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -2
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask:result *tmp0 :isSolid:result
op shl *tmp0 :createTerrainMask:result 1
op add :isSolid:x :createTerrainMask:x -3
set :isSolid:y *tmp2
ucontrol getBlock :isSolid:x :isSolid:y type building floor
sensor solid type @solid
select :isSolid:result notEqual solid false 1 0
op or :createTerrainMask*retval *tmp0 :isSolid:result
set :createTerrainMask*finished true
jump 4 always 0 0
op sub :spotValue:x :computeRowValues:x 2
set :spotValue:y :computeRowValues:y
set :spotValue:ore :computeRowValues:ore
ucontrol getBlock :spotValue:x :spotValue:y type building floor
select value equal floor :spotValue:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue:result notEqual solid false 0.09803921568627451 value
op sub :spotValue.1:x :computeRowValues:x 1
set :spotValue.1:y :computeRowValues:y
set :spotValue.1:ore :computeRowValues:ore
ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
select value equal floor :spotValue.1:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.1:result notEqual solid false 0.09803921568627451 value
set :spotValue.2:x :computeRowValues:x
set :spotValue.2:y :computeRowValues:y
set :spotValue.2:ore :computeRowValues:ore
ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
select value equal floor :spotValue.2:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.2:result notEqual solid false 0.09803921568627451 value
op add :spotValue.3:x :computeRowValues:x 1
set :spotValue.3:y :computeRowValues:y
set :spotValue.3:ore :computeRowValues:ore
ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
select value equal floor :spotValue.3:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.3:result notEqual solid false 0.09803921568627451 value
op add :spotValue.4:x :computeRowValues:x 2
set :spotValue.4:y :computeRowValues:y
set :spotValue.4:ore :computeRowValues:ore
ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
select value equal floor :spotValue.4:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.4:result notEqual solid false 0.09803921568627451 value
jump 398 notEqual :computeRowValues:size 2
op add *tmp17 :spotValue:result :spotValue.1:result
op add *tmp18 :spotValue.1:result :spotValue.2:result
op add *tmp19 :spotValue.2:result :spotValue.3:result
op add *tmp20 :spotValue.3:result :spotValue.4:result
packcolor :computeRowValues*retval *tmp17 *tmp18 *tmp19 *tmp20
set @counter :computeRowValues*retaddr
jump 406 notEqual :computeRowValues:size 3
op add *tmp24 :spotValue.1:result :spotValue.2:result
op add *tmp25 :spotValue:result *tmp24
op add *tmp27 *tmp24 :spotValue.3:result
op add *tmp28 :spotValue.2:result :spotValue.3:result
op add *tmp29 *tmp28 :spotValue.4:result
packcolor :computeRowValues*retval *tmp25 *tmp27 *tmp29 0
set @counter :computeRowValues*retaddr
op sub :spotValue.5:x :computeRowValues:x 3
set :spotValue.5:y :computeRowValues:y
set :spotValue.5:ore :computeRowValues:ore
ucontrol getBlock :spotValue.5:x :spotValue.5:y type building floor
select value equal floor :spotValue.5:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.5:result notEqual solid false 0.09803921568627451 value
op add :spotValue.6:x :computeRowValues:x 3
set :spotValue.6:y :computeRowValues:y
set :spotValue.6:ore :computeRowValues:ore
ucontrol getBlock :spotValue.6:x :spotValue.6:y type building floor
select value equal floor :spotValue.6:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.6:result notEqual solid false 0.09803921568627451 value
op add *tmp35 :spotValue:result :spotValue.1:result
op add *tmp36 *tmp35 :spotValue.2:result
op add *tmp37 :spotValue.5:result *tmp36
op min *tmp38 0.09803921568627451 *tmp37
op add *tmp41 *tmp36 :spotValue.3:result
op min *tmp42 0.09803921568627451 *tmp41
op add *tmp43 :spotValue.2:result :spotValue.3:result
op add *tmp44 *tmp43 :spotValue.4:result
op add *tmp45 :spotValue.1:result *tmp44
op min *tmp46 0.09803921568627451 *tmp45
op add *tmp49 *tmp44 :spotValue.6:result
op min *tmp50 0.09803921568627451 *tmp49
packcolor :computeRowValues*retval *tmp38 *tmp42 *tmp46 *tmp50
set @counter :computeRowValues*retaddr
ubind :findBestPosition:unit
op sub *tmp52 :findBestPosition:y 2
op sub :spotValue:x :findBestPosition:x 2
set :spotValue:y *tmp52
set :spotValue:ore :findBestPosition:ore
ucontrol getBlock :spotValue:x :spotValue:y type building floor
select value equal floor :spotValue:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue:result notEqual solid false 0.09803921568627451 value
op sub :spotValue.1:x :findBestPosition:x 1
set :spotValue.1:y *tmp52
set :spotValue.1:ore :findBestPosition:ore
ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
select value equal floor :spotValue.1:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.1:result notEqual solid false 0.09803921568627451 value
set :spotValue.2:x :findBestPosition:x
set :spotValue.2:y *tmp52
set :spotValue.2:ore :findBestPosition:ore
ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
select value equal floor :spotValue.2:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.2:result notEqual solid false 0.09803921568627451 value
op add :spotValue.3:x :findBestPosition:x 1
set :spotValue.3:y *tmp52
set :spotValue.3:ore :findBestPosition:ore
ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
select value equal floor :spotValue.3:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.3:result notEqual solid false 0.09803921568627451 value
op add :spotValue.4:x :findBestPosition:x 2
set :spotValue.4:y *tmp52
set :spotValue.4:ore :findBestPosition:ore
ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
select value equal floor :spotValue.4:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.4:result notEqual solid false 0.09803921568627451 value
jump 478 notEqual :findBestPosition:size 2
op add *tmp17 :spotValue:result :spotValue.1:result
op add *tmp18 :spotValue.1:result :spotValue.2:result
op add *tmp19 :spotValue.2:result :spotValue.3:result
op add *tmp20 :spotValue.3:result :spotValue.4:result
packcolor :findBestPosition:y1 *tmp17 *tmp18 *tmp19 *tmp20
jump 513 always 0 0
jump 486 notEqual :findBestPosition:size 3
op add *tmp24 :spotValue.1:result :spotValue.2:result
op add *tmp25 :spotValue:result *tmp24
op add *tmp27 *tmp24 :spotValue.3:result
op add *tmp28 :spotValue.2:result :spotValue.3:result
op add *tmp29 *tmp28 :spotValue.4:result
packcolor :findBestPosition:y1 *tmp25 *tmp27 *tmp29 0
jump 513 always 0 0
op sub :spotValue.5:x :findBestPosition:x 3
set :spotValue.5:y *tmp52
set :spotValue.5:ore :findBestPosition:ore
ucontrol getBlock :spotValue.5:x :spotValue.5:y type building floor
select value equal floor :spotValue.5:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.5:result notEqual solid false 0.09803921568627451 value
op add :spotValue.6:x :findBestPosition:x 3
set :spotValue.6:y *tmp52
set :spotValue.6:ore :findBestPosition:ore
ucontrol getBlock :spotValue.6:x :spotValue.6:y type building floor
select value equal floor :spotValue.6:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.6:result notEqual solid false 0.09803921568627451 value
op add *tmp35 :spotValue:result :spotValue.1:result
op add *tmp36 *tmp35 :spotValue.2:result
op add *tmp37 :spotValue.5:result *tmp36
op min *tmp38 0.09803921568627451 *tmp37
op add *tmp41 *tmp36 :spotValue.3:result
op min *tmp42 0.09803921568627451 *tmp41
op add *tmp43 :spotValue.2:result :spotValue.3:result
op add *tmp44 *tmp43 :spotValue.4:result
op add *tmp45 :spotValue.1:result *tmp44
op min *tmp46 0.09803921568627451 *tmp45
op add *tmp49 *tmp44 :spotValue.6:result
op min *tmp50 0.09803921568627451 *tmp49
packcolor :findBestPosition:y1 *tmp38 *tmp42 *tmp46 *tmp50
op sub *tmp54 :findBestPosition:y 1
op sub :spotValue:x :findBestPosition:x 2
set :spotValue:y *tmp54
set :spotValue:ore :findBestPosition:ore
ucontrol getBlock :spotValue:x :spotValue:y type building floor
select value equal floor :spotValue:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue:result notEqual solid false 0.09803921568627451 value
op sub :spotValue.1:x :findBestPosition:x 1
set :spotValue.1:y *tmp54
set :spotValue.1:ore :findBestPosition:ore
ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
select value equal floor :spotValue.1:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.1:result notEqual solid false 0.09803921568627451 value
set :spotValue.2:x :findBestPosition:x
set :spotValue.2:y *tmp54
set :spotValue.2:ore :findBestPosition:ore
ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
select value equal floor :spotValue.2:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.2:result notEqual solid false 0.09803921568627451 value
op add :spotValue.3:x :findBestPosition:x 1
set :spotValue.3:y *tmp54
set :spotValue.3:ore :findBestPosition:ore
ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
select value equal floor :spotValue.3:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.3:result notEqual solid false 0.09803921568627451 value
op add :spotValue.4:x :findBestPosition:x 2
set :spotValue.4:y *tmp54
set :spotValue.4:ore :findBestPosition:ore
ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
select value equal floor :spotValue.4:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.4:result notEqual solid false 0.09803921568627451 value
jump 556 notEqual :findBestPosition:size 2
op add *tmp17 :spotValue:result :spotValue.1:result
op add *tmp18 :spotValue.1:result :spotValue.2:result
op add *tmp19 :spotValue.2:result :spotValue.3:result
op add *tmp20 :spotValue.3:result :spotValue.4:result
packcolor :findBestPosition:y2 *tmp17 *tmp18 *tmp19 *tmp20
jump 591 always 0 0
jump 564 notEqual :findBestPosition:size 3
op add *tmp24 :spotValue.1:result :spotValue.2:result
op add *tmp25 :spotValue:result *tmp24
op add *tmp27 *tmp24 :spotValue.3:result
op add *tmp28 :spotValue.2:result :spotValue.3:result
op add *tmp29 *tmp28 :spotValue.4:result
packcolor :findBestPosition:y2 *tmp25 *tmp27 *tmp29 0
jump 591 always 0 0
op sub :spotValue.5:x :findBestPosition:x 3
set :spotValue.5:y *tmp54
set :spotValue.5:ore :findBestPosition:ore
ucontrol getBlock :spotValue.5:x :spotValue.5:y type building floor
select value equal floor :spotValue.5:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.5:result notEqual solid false 0.09803921568627451 value
op add :spotValue.6:x :findBestPosition:x 3
set :spotValue.6:y *tmp54
set :spotValue.6:ore :findBestPosition:ore
ucontrol getBlock :spotValue.6:x :spotValue.6:y type building floor
select value equal floor :spotValue.6:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.6:result notEqual solid false 0.09803921568627451 value
op add *tmp35 :spotValue:result :spotValue.1:result
op add *tmp36 *tmp35 :spotValue.2:result
op add *tmp37 :spotValue.5:result *tmp36
op min *tmp38 0.09803921568627451 *tmp37
op add *tmp41 *tmp36 :spotValue.3:result
op min *tmp42 0.09803921568627451 *tmp41
op add *tmp43 :spotValue.2:result :spotValue.3:result
op add *tmp44 *tmp43 :spotValue.4:result
op add *tmp45 :spotValue.1:result *tmp44
op min *tmp46 0.09803921568627451 *tmp45
op add *tmp49 *tmp44 :spotValue.6:result
op min *tmp50 0.09803921568627451 *tmp49
packcolor :findBestPosition:y2 *tmp38 *tmp42 *tmp46 *tmp50
op sub :spotValue:x :findBestPosition:x 2
set :spotValue:y :findBestPosition:y
set :spotValue:ore :findBestPosition:ore
ucontrol getBlock :spotValue:x :spotValue:y type building floor
select value equal floor :spotValue:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue:result notEqual solid false 0.09803921568627451 value
op sub :spotValue.1:x :findBestPosition:x 1
set :spotValue.1:y :findBestPosition:y
set :spotValue.1:ore :findBestPosition:ore
ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
select value equal floor :spotValue.1:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.1:result notEqual solid false 0.09803921568627451 value
set :spotValue.2:x :findBestPosition:x
set :spotValue.2:y :findBestPosition:y
set :spotValue.2:ore :findBestPosition:ore
ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
select value equal floor :spotValue.2:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.2:result notEqual solid false 0.09803921568627451 value
op add :spotValue.3:x :findBestPosition:x 1
set :spotValue.3:y :findBestPosition:y
set :spotValue.3:ore :findBestPosition:ore
ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
select value equal floor :spotValue.3:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.3:result notEqual solid false 0.09803921568627451 value
op add :spotValue.4:x :findBestPosition:x 2
set :spotValue.4:y :findBestPosition:y
set :spotValue.4:ore :findBestPosition:ore
ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
select value equal floor :spotValue.4:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.4:result notEqual solid false 0.09803921568627451 value
jump 633 notEqual :findBestPosition:size 2
op add *tmp17 :spotValue:result :spotValue.1:result
op add *tmp18 :spotValue.1:result :spotValue.2:result
op add *tmp19 :spotValue.2:result :spotValue.3:result
op add *tmp20 :spotValue.3:result :spotValue.4:result
packcolor :findBestPosition:y3 *tmp17 *tmp18 *tmp19 *tmp20
jump 668 always 0 0
jump 641 notEqual :findBestPosition:size 3
op add *tmp24 :spotValue.1:result :spotValue.2:result
op add *tmp25 :spotValue:result *tmp24
op add *tmp27 *tmp24 :spotValue.3:result
op add *tmp28 :spotValue.2:result :spotValue.3:result
op add *tmp29 *tmp28 :spotValue.4:result
packcolor :findBestPosition:y3 *tmp25 *tmp27 *tmp29 0
jump 668 always 0 0
op sub :spotValue.5:x :findBestPosition:x 3
set :spotValue.5:y :findBestPosition:y
set :spotValue.5:ore :findBestPosition:ore
ucontrol getBlock :spotValue.5:x :spotValue.5:y type building floor
select value equal floor :spotValue.5:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.5:result notEqual solid false 0.09803921568627451 value
op add :spotValue.6:x :findBestPosition:x 3
set :spotValue.6:y :findBestPosition:y
set :spotValue.6:ore :findBestPosition:ore
ucontrol getBlock :spotValue.6:x :spotValue.6:y type building floor
select value equal floor :spotValue.6:ore 0.00392156862745098 0
sensor solid type @solid
select :spotValue.6:result notEqual solid false 0.09803921568627451 value
op add *tmp35 :spotValue:result :spotValue.1:result
op add *tmp36 *tmp35 :spotValue.2:result
op add *tmp37 :spotValue.5:result *tmp36
op min *tmp38 0.09803921568627451 *tmp37
op add *tmp41 *tmp36 :spotValue.3:result
op min *tmp42 0.09803921568627451 *tmp41
op add *tmp43 :spotValue.2:result :spotValue.3:result
op add *tmp44 *tmp43 :spotValue.4:result
op add *tmp45 :spotValue.1:result *tmp44
op min *tmp46 0.09803921568627451 *tmp45
op add *tmp49 *tmp44 :spotValue.6:result
op min *tmp50 0.09803921568627451 *tmp49
packcolor :findBestPosition:y3 *tmp38 *tmp42 *tmp46 *tmp50
op add *tmp58 :findBestPosition:y 1
set :computeRowValues:x :findBestPosition:x
set :computeRowValues:y *tmp58
set :computeRowValues:ore :findBestPosition:ore
set :computeRowValues:size :findBestPosition:size
set :computeRowValues*retaddr 675
jump 356 always 0 0
set :findBestPosition:y4 :computeRowValues*retval
op add *tmp60 :findBestPosition:y 2
set :computeRowValues:x :findBestPosition:x
set :computeRowValues:y *tmp60
set :computeRowValues:ore :findBestPosition:ore
set :computeRowValues:size :findBestPosition:size
set :computeRowValues*retaddr 683
jump 356 always 0 0
set :findBestPosition:y5 :computeRowValues*retval
set :findBestPosition:best 0
set :findBestPosition:bestX 0
set :findBestPosition:bestY 0
jump 777 notEqual :findBestPosition:size 2
op add :findBestPosition:row1 :findBestPosition:y1 :findBestPosition:y2
op add :findBestPosition:row2 :findBestPosition:y2 :findBestPosition:y3
op add :findBestPosition:row3 :findBestPosition:y3 :findBestPosition:y4
op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
unpackcolor :updateRowPositions2x2:col1 :updateRowPositions2x2:col2 :updateRowPositions2x2:col3 :updateRowPositions2x2:col4 :findBestPosition:row1
jump 698 greaterThanEq :updateRowPositions2x2:col1 0.0784313725490196
jump 698 lessThanEq :updateRowPositions2x2:col1 0
set :findBestPosition:bestX -1.5
set :findBestPosition:bestY -1.5
set :findBestPosition:best :updateRowPositions2x2:col1
jump 703 greaterThanEq :updateRowPositions2x2:col2 0.0784313725490196
jump 703 lessThanEq :updateRowPositions2x2:col2 :findBestPosition:best
set :findBestPosition:bestX -0.5
set :findBestPosition:bestY -1.5
set :findBestPosition:best :updateRowPositions2x2:col2
jump 708 greaterThanEq :updateRowPositions2x2:col3 0.0784313725490196
jump 708 lessThanEq :updateRowPositions2x2:col3 :findBestPosition:best
set :findBestPosition:bestX 0.5
set :findBestPosition:bestY -1.5
set :findBestPosition:best :updateRowPositions2x2:col3
jump 713 greaterThanEq :updateRowPositions2x2:col4 0.0784313725490196
jump 713 lessThanEq :updateRowPositions2x2:col4 :findBestPosition:best
set :findBestPosition:bestX 1.5
set :findBestPosition:bestY -1.5
set :findBestPosition:best :updateRowPositions2x2:col4
unpackcolor :updateRowPositions2x2.1:col1 :updateRowPositions2x2.1:col2 :updateRowPositions2x2.1:col3 :updateRowPositions2x2.1:col4 :findBestPosition:row2
jump 719 greaterThanEq :updateRowPositions2x2.1:col1 0.0784313725490196
jump 719 lessThanEq :updateRowPositions2x2.1:col1 :findBestPosition:best
set :findBestPosition:bestX -1.5
set :findBestPosition:bestY -0.5
set :findBestPosition:best :updateRowPositions2x2.1:col1
jump 724 greaterThanEq :updateRowPositions2x2.1:col2 0.0784313725490196
jump 724 lessThanEq :updateRowPositions2x2.1:col2 :findBestPosition:best
set :findBestPosition:bestX -0.5
set :findBestPosition:bestY -0.5
set :findBestPosition:best :updateRowPositions2x2.1:col2
jump 729 greaterThanEq :updateRowPositions2x2.1:col3 0.0784313725490196
jump 729 lessThanEq :updateRowPositions2x2.1:col3 :findBestPosition:best
set :findBestPosition:bestX 0.5
set :findBestPosition:bestY -0.5
set :findBestPosition:best :updateRowPositions2x2.1:col3
jump 734 greaterThanEq :updateRowPositions2x2.1:col4 0.0784313725490196
jump 734 lessThanEq :updateRowPositions2x2.1:col4 :findBestPosition:best
set :findBestPosition:bestX 1.5
set :findBestPosition:bestY -0.5
set :findBestPosition:best :updateRowPositions2x2.1:col4
unpackcolor :updateRowPositions2x2.2:col1 :updateRowPositions2x2.2:col2 :updateRowPositions2x2.2:col3 :updateRowPositions2x2.2:col4 :findBestPosition:row3
jump 740 greaterThanEq :updateRowPositions2x2.2:col1 0.0784313725490196
jump 740 lessThanEq :updateRowPositions2x2.2:col1 :findBestPosition:best
set :findBestPosition:bestX -1.5
set :findBestPosition:bestY 0.5
set :findBestPosition:best :updateRowPositions2x2.2:col1
jump 745 greaterThanEq :updateRowPositions2x2.2:col2 0.0784313725490196
jump 745 lessThanEq :updateRowPositions2x2.2:col2 :findBestPosition:best
set :findBestPosition:bestX -0.5
set :findBestPosition:bestY 0.5
set :findBestPosition:best :updateRowPositions2x2.2:col2
jump 750 greaterThanEq :updateRowPositions2x2.2:col3 0.0784313725490196
jump 750 lessThanEq :updateRowPositions2x2.2:col3 :findBestPosition:best
set :findBestPosition:bestX 0.5
set :findBestPosition:bestY 0.5
set :findBestPosition:best :updateRowPositions2x2.2:col3
jump 755 greaterThanEq :updateRowPositions2x2.2:col4 0.0784313725490196
jump 755 lessThanEq :updateRowPositions2x2.2:col4 :findBestPosition:best
set :findBestPosition:bestX 1.5
set :findBestPosition:bestY 0.5
set :findBestPosition:best :updateRowPositions2x2.2:col4
unpackcolor :updateRowPositions2x2.3:col1 :updateRowPositions2x2.3:col2 :updateRowPositions2x2.3:col3 :updateRowPositions2x2.3:col4 :findBestPosition:row4
jump 761 greaterThanEq :updateRowPositions2x2.3:col1 0.0784313725490196
jump 761 lessThanEq :updateRowPositions2x2.3:col1 :findBestPosition:best
set :findBestPosition:bestX -1.5
set :findBestPosition:bestY 1.5
set :findBestPosition:best :updateRowPositions2x2.3:col1
jump 766 greaterThanEq :updateRowPositions2x2.3:col2 0.0784313725490196
jump 766 lessThanEq :updateRowPositions2x2.3:col2 :findBestPosition:best
set :findBestPosition:bestX -0.5
set :findBestPosition:bestY 1.5
set :findBestPosition:best :updateRowPositions2x2.3:col2
jump 771 greaterThanEq :updateRowPositions2x2.3:col3 0.0784313725490196
jump 771 lessThanEq :updateRowPositions2x2.3:col3 :findBestPosition:best
set :findBestPosition:bestX 0.5
set :findBestPosition:bestY 1.5
set :findBestPosition:best :updateRowPositions2x2.3:col3
jump 939 greaterThanEq :updateRowPositions2x2.3:col4 0.0784313725490196
jump 939 lessThanEq :updateRowPositions2x2.3:col4 :findBestPosition:best
set :findBestPosition:bestX 1.5
set :findBestPosition:bestY 1.5
set :findBestPosition:best :updateRowPositions2x2.3:col4
jump 939 always 0 0
jump 832 notEqual :findBestPosition:size 3
op add *tmp134 :findBestPosition:y2 :findBestPosition:y3
op add :findBestPosition:row1.1 :findBestPosition:y1 *tmp134
op add :findBestPosition:row2.1 *tmp134 :findBestPosition:y4
op add *tmp138 :findBestPosition:y3 :findBestPosition:y4
op add :findBestPosition:row3.1 *tmp138 :computeRowValues*retval
unpackcolor :updateRowPositions3x3:col1 :updateRowPositions3x3:col2 :updateRowPositions3x3:col3 0 :findBestPosition:row1.1
jump 789 greaterThanEq :updateRowPositions3x3:col1 0.0784313725490196
jump 789 lessThanEq :updateRowPositions3x3:col1 0
set :findBestPosition:bestX -1
set :findBestPosition:bestY -1
set :findBestPosition:best :updateRowPositions3x3:col1
jump 794 greaterThanEq :updateRowPositions3x3:col2 0.0784313725490196
jump 794 lessThanEq :updateRowPositions3x3:col2 :findBestPosition:best
set :findBestPosition:bestX 0
set :findBestPosition:bestY -1
set :findBestPosition:best :updateRowPositions3x3:col2
jump 799 greaterThanEq :updateRowPositions3x3:col3 0.0784313725490196
jump 799 lessThanEq :updateRowPositions3x3:col3 :findBestPosition:best
set :findBestPosition:bestX 1
set :findBestPosition:bestY -1
set :findBestPosition:best :updateRowPositions3x3:col3
unpackcolor :updateRowPositions3x3.1:col1 :updateRowPositions3x3.1:col2 :updateRowPositions3x3.1:col3 0 :findBestPosition:row2.1
jump 805 greaterThanEq :updateRowPositions3x3.1:col1 0.0784313725490196
jump 805 lessThanEq :updateRowPositions3x3.1:col1 :findBestPosition:best
set :findBestPosition:bestX -1
set :findBestPosition:bestY 0
set :findBestPosition:best :updateRowPositions3x3.1:col1
jump 810 greaterThanEq :updateRowPositions3x3.1:col2 0.0784313725490196
jump 810 lessThanEq :updateRowPositions3x3.1:col2 :findBestPosition:best
set :findBestPosition:bestX 0
set :findBestPosition:bestY 0
set :findBestPosition:best :updateRowPositions3x3.1:col2
jump 815 greaterThanEq :updateRowPositions3x3.1:col3 0.0784313725490196
jump 815 lessThanEq :updateRowPositions3x3.1:col3 :findBestPosition:best
set :findBestPosition:bestX 1
set :findBestPosition:bestY 0
set :findBestPosition:best :updateRowPositions3x3.1:col3
unpackcolor :updateRowPositions3x3.2:col1 :updateRowPositions3x3.2:col2 :updateRowPositions3x3.2:col3 0 :findBestPosition:row3.1
jump 821 greaterThanEq :updateRowPositions3x3.2:col1 0.0784313725490196
jump 821 lessThanEq :updateRowPositions3x3.2:col1 :findBestPosition:best
set :findBestPosition:bestX -1
set :findBestPosition:bestY 1
set :findBestPosition:best :updateRowPositions3x3.2:col1
jump 826 greaterThanEq :updateRowPositions3x3.2:col2 0.0784313725490196
jump 826 lessThanEq :updateRowPositions3x3.2:col2 :findBestPosition:best
set :findBestPosition:bestX 0
set :findBestPosition:bestY 1
set :findBestPosition:best :updateRowPositions3x3.2:col2
jump 939 greaterThanEq :updateRowPositions3x3.2:col3 0.0784313725490196
jump 939 lessThanEq :updateRowPositions3x3.2:col3 :findBestPosition:best
set :findBestPosition:bestX 1
set :findBestPosition:bestY 1
set :findBestPosition:best :updateRowPositions3x3.2:col3
jump 939 always 0 0
op sub *tmp179 :findBestPosition:y 3
set :computeRowValues:x :findBestPosition:x
set :computeRowValues:y *tmp179
set :computeRowValues:ore :findBestPosition:ore
set :computeRowValues:size :findBestPosition:size
set :computeRowValues*retaddr 839
jump 356 always 0 0
set :findBestPosition:y0 :computeRowValues*retval
op add *tmp181 :findBestPosition:y 3
set :computeRowValues:x :findBestPosition:x
set :computeRowValues:y *tmp181
set :computeRowValues:ore :findBestPosition:ore
set :computeRowValues:size :findBestPosition:size
set :computeRowValues*retaddr 847
jump 356 always 0 0
op add *tmp183 :findBestPosition:y1 :findBestPosition:y2
op add *tmp184 *tmp183 :findBestPosition:y3
op add :findBestPosition:row1.2 :findBestPosition:y0 *tmp184
op add :findBestPosition:row2.2 *tmp184 :findBestPosition:y4
op add *tmp189 :findBestPosition:y3 :findBestPosition:y4
op add *tmp190 *tmp189 :findBestPosition:y5
op add :findBestPosition:row3.2 :findBestPosition:y2 *tmp190
op add :findBestPosition:row4.1 *tmp190 :computeRowValues*retval
unpackcolor :updateRowPositions4x4:col1 :updateRowPositions4x4:col2 :updateRowPositions4x4:col3 :updateRowPositions4x4:col4 :findBestPosition:row1.2
jump 861 greaterThanEq :updateRowPositions4x4:col1 0.0784313725490196
jump 861 lessThanEq :updateRowPositions4x4:col1 :findBestPosition:best
set :findBestPosition:bestX -1.5
set :findBestPosition:bestY -1.5
set :findBestPosition:best :updateRowPositions4x4:col1
jump 866 greaterThanEq :updateRowPositions4x4:col2 0.0784313725490196
jump 866 lessThanEq :updateRowPositions4x4:col2 :findBestPosition:best
set :findBestPosition:bestX -0.5
set :findBestPosition:bestY -1.5
set :findBestPosition:best :updateRowPositions4x4:col2
jump 871 greaterThanEq :updateRowPositions4x4:col3 0.0784313725490196
jump 871 lessThanEq :updateRowPositions4x4:col3 :findBestPosition:best
set :findBestPosition:bestX 0.5
set :findBestPosition:bestY -1.5
set :findBestPosition:best :updateRowPositions4x4:col3
jump 876 greaterThanEq :updateRowPositions4x4:col4 0.0784313725490196
jump 876 lessThanEq :updateRowPositions4x4:col4 :findBestPosition:best
set :findBestPosition:bestX 1.5
set :findBestPosition:bestY -1.5
set :findBestPosition:best :updateRowPositions4x4:col4
unpackcolor :updateRowPositions4x4.1:col1 :updateRowPositions4x4.1:col2 :updateRowPositions4x4.1:col3 :updateRowPositions4x4.1:col4 :findBestPosition:row2.2
jump 882 greaterThanEq :updateRowPositions4x4.1:col1 0.0784313725490196
jump 882 lessThanEq :updateRowPositions4x4.1:col1 :findBestPosition:best
set :findBestPosition:bestX -1.5
set :findBestPosition:bestY -0.5
set :findBestPosition:best :updateRowPositions4x4.1:col1
jump 887 greaterThanEq :updateRowPositions4x4.1:col2 0.0784313725490196
jump 887 lessThanEq :updateRowPositions4x4.1:col2 :findBestPosition:best
set :findBestPosition:bestX -0.5
set :findBestPosition:bestY -0.5
set :findBestPosition:best :updateRowPositions4x4.1:col2
jump 892 greaterThanEq :updateRowPositions4x4.1:col3 0.0784313725490196
jump 892 lessThanEq :updateRowPositions4x4.1:col3 :findBestPosition:best
set :findBestPosition:bestX 0.5
set :findBestPosition:bestY -0.5
set :findBestPosition:best :updateRowPositions4x4.1:col3
jump 897 greaterThanEq :updateRowPositions4x4.1:col4 0.0784313725490196
jump 897 lessThanEq :updateRowPositions4x4.1:col4 :findBestPosition:best
set :findBestPosition:bestX 1.5
set :findBestPosition:bestY -0.5
set :findBestPosition:best :updateRowPositions4x4.1:col4
unpackcolor :updateRowPositions4x4.2:col1 :updateRowPositions4x4.2:col2 :updateRowPositions4x4.2:col3 :updateRowPositions4x4.2:col4 :findBestPosition:row3.2
jump 903 greaterThanEq :updateRowPositions4x4.2:col1 0.0784313725490196
jump 903 lessThanEq :updateRowPositions4x4.2:col1 :findBestPosition:best
set :findBestPosition:bestX -1.5
set :findBestPosition:bestY 0.5
set :findBestPosition:best :updateRowPositions4x4.2:col1
jump 908 greaterThanEq :updateRowPositions4x4.2:col2 0.0784313725490196
jump 908 lessThanEq :updateRowPositions4x4.2:col2 :findBestPosition:best
set :findBestPosition:bestX -0.5
set :findBestPosition:bestY 0.5
set :findBestPosition:best :updateRowPositions4x4.2:col2
jump 913 greaterThanEq :updateRowPositions4x4.2:col3 0.0784313725490196
jump 913 lessThanEq :updateRowPositions4x4.2:col3 :findBestPosition:best
set :findBestPosition:bestX 0.5
set :findBestPosition:bestY 0.5
set :findBestPosition:best :updateRowPositions4x4.2:col3
jump 918 greaterThanEq :updateRowPositions4x4.2:col4 0.0784313725490196
jump 918 lessThanEq :updateRowPositions4x4.2:col4 :findBestPosition:best
set :findBestPosition:bestX 1.5
set :findBestPosition:bestY 0.5
set :findBestPosition:best :updateRowPositions4x4.2:col4
unpackcolor :updateRowPositions4x4.3:col1 :updateRowPositions4x4.3:col2 :updateRowPositions4x4.3:col3 :updateRowPositions4x4.3:col4 :findBestPosition:row4.1
jump 924 greaterThanEq :updateRowPositions4x4.3:col1 0.0784313725490196
jump 924 lessThanEq :updateRowPositions4x4.3:col1 :findBestPosition:best
set :findBestPosition:bestX -1.5
set :findBestPosition:bestY 1.5
set :findBestPosition:best :updateRowPositions4x4.3:col1
jump 929 greaterThanEq :updateRowPositions4x4.3:col2 0.0784313725490196
jump 929 lessThanEq :updateRowPositions4x4.3:col2 :findBestPosition:best
set :findBestPosition:bestX -0.5
set :findBestPosition:bestY 1.5
set :findBestPosition:best :updateRowPositions4x4.3:col2
jump 934 greaterThanEq :updateRowPositions4x4.3:col3 0.0784313725490196
jump 934 lessThanEq :updateRowPositions4x4.3:col3 :findBestPosition:best
set :findBestPosition:bestX 0.5
set :findBestPosition:bestY 1.5
set :findBestPosition:best :updateRowPositions4x4.3:col3
jump 939 greaterThanEq :updateRowPositions4x4.3:col4 0.0784313725490196
jump 939 lessThanEq :updateRowPositions4x4.3:col4 :findBestPosition:best
set :findBestPosition:bestX 1.5
set :findBestPosition:bestY 1.5
set :findBestPosition:best :updateRowPositions4x4.3:col4
op mul :findBestPosition*retval :findBestPosition:best 255
set :findBestPosition*finished true
jump 4 always 0 0
print "Compiled by Mindcode - github.com/cardillan/mindcode"

