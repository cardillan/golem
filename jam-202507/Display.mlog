read *tmp39 processor3 "*signature"
jump 0 notEqual *tmp39 "3290b8c661787058:v1"
set .core null
set .page 0
set .numPages 4
set .recentBuildIndex -1
set .monos 0
set .flares 0
set .polys 1
set .megas 0
set .animation -15
set .pageSwitched false
set *signature "0:v1"
ubind @poly
ulocate building core false @copper 0 0 0 .core
jump 13 equal .core null
printflush null
drawflush null
sensor *tmp45 processor2 @bufferSize
jump 790 greaterThanEq *tmp45 200
jump 451 notEqual .page 0
jump 49 lessThanEq .megas 0
jump 26 greaterThanEq .animation 0
draw color 0 0 32 80 0 0
draw rect 0 0 176 176 0 0
jump 28 always 0 0
draw reset 0 0 0 0 0 0
draw clear 0 0 32 0 0 0
draw col %[white] 0 0 0 0 0
op div *tmp54 .animation 30
op min *tmp55 *tmp54 1
op max :animate:ratio 0 *tmp55
op sub *tmp58 1 :animate:ratio
op mul *tmp59 *tmp58 42
op mul *tmp60 :animate:ratio 90
op add *tmp57 *tmp59 *tmp60
op mul *tmp64 *tmp58 237
op mul *tmp65 :animate:ratio 120
op add *tmp62 *tmp64 *tmp65
op mul *tmp69 *tmp58 32
op mul *tmp70 :animate:ratio 168
op add *tmp67 *tmp69 *tmp70
draw image *tmp57 *tmp62 @mega *tmp67 0 0
jump 46 notEqual :animate:ratio 1
set :drawHeader*retaddr 46
jump 811 always 0 0
drawflush display1
op add .animation .animation 1
jump 790 always 0 0
draw clear 0 0 32 0 0 0
set :drawHeader*retaddr 52
jump 811 always 0 0
set :updateDisplay:y 201
set :drawMaterials:col 0
op equal *tmp75 .nextBlock @ore-thorium
op equal *tmp76 .nextBlock @ore-titanium
op or *tmp77 *tmp75 *tmp76
jump 84 equal *tmp77 false
print "Locating ore..."
draw print 22 201 @bottomLeft 0 0 0
print "Locating ore..."
draw print 23 201 @bottomLeft 0 0 0
set :drawItem:item .nextBlock
read :drawItem:current processor3 ".mapProgress"
read :drawItem:target processor3 ".mapTotal"
op mul *tmp83 126 :drawItem:current
op div *tmp84 *tmp83 :drawItem:target
op min :drawItemColor:length 126 *tmp84
draw col %[white] 0 0 0 0 0
draw image 11 191 :drawItem:item 16 0 0
draw col %008000FF 0 0 0 0 0
draw rect 22 186 :drawItemColor:length 10 0 0
draw col %00FF00FF 0 0 0 0 0
draw lineRect 22 186 126 10 0 0
print "x"
read *tmp98 processor3 ".mapSpots"
print *tmp98
draw print 174 193 @right 0 0 0
print "x"
read *tmp100 processor3 ".mapSpots"
print *tmp100
draw print 175 193 @right 0 0 0
op sub :updateDisplay:y 171 35
jump 156 always 0 0
jump 156 equal .nextBlock null
set :drawMaterials:count .totalTargets
print "Materials"
draw print 22 201 @bottomLeft 0 0 0
print "Materials"
draw print 23 201 @bottomLeft 0 0 0
set :updateDisplay:y 186
jump 151 equal :drawMaterials:count false
set :drawMaterials:item @copper
set :drawMaterials:target .targetCopper
set *tmp107 96
jump 119 always 0 0
set :drawMaterials:item @lead
set :drawMaterials:target .targetLead
set *tmp107 100
jump 119 always 0 0
set :drawMaterials:item @graphite
set :drawMaterials:target .targetGraphite
set *tmp107 104
jump 119 always 0 0
set :drawMaterials:item @silicon
set :drawMaterials:target .targetSilicon
set *tmp107 108
jump 119 always 0 0
set :drawMaterials:item @titanium
set :drawMaterials:target .targetTitanium
set *tmp107 112
jump 119 always 0 0
set :drawMaterials:item @metaglass
set :drawMaterials:target .targetMetaglass
set *tmp107 116
jump 119 always 0 0
set :drawMaterials:item @thorium
set :drawMaterials:target .targetThorium
set *tmp107 151
jump 150 lessThanEq :drawMaterials:target 0
sensor *tmp110 .core :drawMaterials:item
set :drawItemColor.1:y :updateDisplay:y
op mul *tmp115 126 *tmp110
op div *tmp116 *tmp115 :drawMaterials:target
op min :drawItemColor.1:length 126 *tmp116
op mul *tmp119 :drawMaterials:col 88
op add :drawItemColor.1:iconX 11 *tmp119
op add :drawItemColor.1:barX 22 *tmp119
op add :drawItemColor.1:textX 174 *tmp119
draw col %[white] 0 0 0 0 0
op add *tmp127 :updateDisplay:y 5
draw image :drawItemColor.1:iconX *tmp127 :drawMaterials:item 16 0 0
draw col %008000FF 0 0 0 0 0
draw rect :drawItemColor.1:barX :updateDisplay:y :drawItemColor.1:length 10 0 0
draw col %00FF00FF 0 0 0 0 0
draw lineRect :drawItemColor.1:barX :updateDisplay:y 126 10 0 0
op add *tmp129 :updateDisplay:y 7
print :drawMaterials:target
draw print :drawItemColor.1:textX *tmp129 @right 0 0 0
op add :drawText.7:x *tmp119 175
print :drawMaterials:target
draw print :drawText.7:x *tmp129 @right 0 0 0
op add :drawItemColor.1:col :drawMaterials:col 1
jump 146 lessThan :drawItemColor.1:col 1
set :drawItemColor.1:col 0
op sub :drawItemColor.1:y :updateDisplay:y 15
set :drawMaterials:col :drawItemColor.1:col
set :updateDisplay:y :drawItemColor.1:y
op sub :drawMaterials:count :drawMaterials:count 1
jump 151 lessThanEq :drawMaterials:count 0
set @counter *tmp107
jump 155 greaterThanEq .totalTargets 3
op sub *tmp137 3 .totalTargets
op mul *tmp138 *tmp137 15
op sub :updateDisplay:y :updateDisplay:y *tmp138
op sub :updateDisplay:y :updateDisplay:y 5
jump 237 equal .nextFactory null
draw col %[white] 0 0 0 0 0
print "Air Factory"
draw print 22 :updateDisplay:y @bottomLeft 0 0 0
print "Air Factory"
draw print 23 :updateDisplay:y @bottomLeft 0 0 0
op sub :drawTitleRow.2:y :updateDisplay:y 15
sensor :drawAirFactory:progress A¾BFLX-air-factory14 @progress
jump 217 notEqual :drawAirFactory:progress 0
jump 183 notEqual .nextFactory @flare
sensor *tmp146 A¾BFLX-air-factory14 @silicon
op mul *tmp152 *tmp146 8.4
op min :drawItemColor.2:length 126 *tmp152
draw col %[white] 0 0 0 0 0
op sub *tmp163 :updateDisplay:y 10
draw image 11 *tmp163 @silicon 16 0 0
draw col %008000FF 0 0 0 0 0
draw rect 22 :drawTitleRow.2:y :drawItemColor.2:length 10 0 0
draw col %00FF00FF 0 0 0 0 0
draw lineRect 22 :drawTitleRow.2:y 126 10 0 0
op sub *tmp165 :updateDisplay:y 8
print 15
draw print 174 *tmp165 @right 0 0 0
print 15
draw print 175 *tmp165 @right 0 0 0
op sub :updateDisplay:y :drawTitleRow.2:y 30
jump 236 always 0 0
sensor *tmp169 A¾BFLX-air-factory14 @lead
op mul *tmp175 *tmp169 8.4
op min :drawItemColor.3:length 126 *tmp175
draw col %[white] 0 0 0 0 0
op sub *tmp186 :updateDisplay:y 10
draw image 11 *tmp186 @lead 16 0 0
draw col %008000FF 0 0 0 0 0
draw rect 22 :drawTitleRow.2:y :drawItemColor.3:length 10 0 0
draw col %00FF00FF 0 0 0 0 0
draw lineRect 22 :drawTitleRow.2:y 126 10 0 0
op sub *tmp188 :updateDisplay:y 8
print 15
draw print 174 *tmp188 @right 0 0 0
print 15
draw print 175 *tmp188 @right 0 0 0
op sub :drawItemColor.3:y :updateDisplay:y 30
sensor *tmp192 A¾BFLX-air-factory14 @silicon
op mul *tmp198 *tmp192 4.2
op min :drawItemColor.4:length 126 *tmp198
draw col %[white] 0 0 0 0 0
op sub *tmp209 :updateDisplay:y 25
draw image 11 *tmp209 @silicon 16 0 0
draw col %008000FF 0 0 0 0 0
draw rect 22 :drawItemColor.3:y :drawItemColor.4:length 10 0 0
draw col %00FF00FF 0 0 0 0 0
draw lineRect 22 :drawItemColor.3:y 126 10 0 0
op sub *tmp211 :updateDisplay:y 23
print 30
draw print 174 *tmp211 @right 0 0 0
print 30
draw print 175 *tmp211 @right 0 0 0
op sub :drawItemColor.4:y :updateDisplay:y 45
set :updateDisplay:y :drawItemColor.4:y
jump 236 always 0 0
op idiv *tmp216 :drawAirFactory:progress 0.01
set :drawItem.5:item .nextFactory
op mul *tmp221 126 :drawAirFactory:progress
op min :drawItemColor.5:length 126 *tmp221
draw col %[white] 0 0 0 0 0
op sub *tmp233 :updateDisplay:y 10
draw image 11 *tmp233 :drawItem.5:item 16 0 0
draw col %008000FF 0 0 0 0 0
draw rect 22 :drawTitleRow.2:y :drawItemColor.5:length 10 0 0
draw col %00FF00FF 0 0 0 0 0
draw lineRect 22 :drawTitleRow.2:y 126 10 0 0
op sub *tmp235 :updateDisplay:y 8
print *tmp216
print "%"
draw print 174 *tmp235 @right 0 0 0
print *tmp216
print "%"
draw print 175 *tmp235 @right 0 0 0
op sub :updateDisplay:y :drawTitleRow.2:y 30
op sub :updateDisplay:y :updateDisplay:y 5
jump 299 equal .nextAddReco null
draw col %[white] 0 0 0 0 0
print "Reconstructor"
draw print 22 :updateDisplay:y @bottomLeft 0 0 0
print "Reconstructor"
draw print 23 :updateDisplay:y @bottomLeft 0 0 0
op sub :drawTitleRow.3:y :updateDisplay:y 15
sensor :drawAddReco:progress AÀF@Ld-additive-reconstructor26 @progress
jump 280 notEqual :drawAddReco:progress 0
sensor *tmp244 AÀF@Ld-additive-reconstructor26 @graphite
op mul *tmp250 *tmp244 3.1500000000000004
op min :drawItemColor.6:length 126 *tmp250
draw col %[white] 0 0 0 0 0
op sub *tmp261 :updateDisplay:y 10
draw image 11 *tmp261 @graphite 16 0 0
draw col %008000FF 0 0 0 0 0
draw rect 22 :drawTitleRow.3:y :drawItemColor.6:length 10 0 0
draw col %00FF00FF 0 0 0 0 0
draw lineRect 22 :drawTitleRow.3:y 126 10 0 0
op sub *tmp263 :updateDisplay:y 8
print 40
draw print 174 *tmp263 @right 0 0 0
print 40
draw print 175 *tmp263 @right 0 0 0
op sub :drawItemColor.6:y :updateDisplay:y 30
sensor *tmp267 AÀF@Ld-additive-reconstructor26 @silicon
op mul *tmp273 *tmp267 3.1500000000000004
op min :drawItemColor.7:length 126 *tmp273
draw col %[white] 0 0 0 0 0
op sub *tmp284 :updateDisplay:y 25
draw image 11 *tmp284 @silicon 16 0 0
draw col %008000FF 0 0 0 0 0
draw rect 22 :drawItemColor.6:y :drawItemColor.7:length 10 0 0
draw col %00FF00FF 0 0 0 0 0
draw lineRect 22 :drawItemColor.6:y 126 10 0 0
op sub *tmp286 :updateDisplay:y 23
print 40
draw print 174 *tmp286 @right 0 0 0
print 40
draw print 175 *tmp286 @right 0 0 0
op sub :drawItemColor.7:y :updateDisplay:y 45
set :updateDisplay:y :drawItemColor.7:y
jump 298 always 0 0
op idiv *tmp291 :drawAddReco:progress 0.01
op mul *tmp296 126 :drawAddReco:progress
op min :drawItemColor.8:length 126 *tmp296
draw col %[white] 0 0 0 0 0
op sub *tmp308 :updateDisplay:y 10
draw image 11 *tmp308 @poly 16 0 0
draw col %008000FF 0 0 0 0 0
draw rect 22 :drawTitleRow.3:y :drawItemColor.8:length 10 0 0
draw col %00FF00FF 0 0 0 0 0
draw lineRect 22 :drawTitleRow.3:y 126 10 0 0
op sub *tmp310 :updateDisplay:y 8
print *tmp291
print "%"
draw print 174 *tmp310 @right 0 0 0
print *tmp291
print "%"
draw print 175 *tmp310 @right 0 0 0
op sub :updateDisplay:y :drawTitleRow.3:y 30
op sub :updateDisplay:y :updateDisplay:y 5
jump 378 equal .nextMultiReco null
draw col %[white] 0 0 0 0 0
op min :updateDisplay:y :updateDisplay:y 142
print "Reconstructor"
draw print 22 :updateDisplay:y @bottomLeft 0 0 0
print "Reconstructor"
draw print 23 :updateDisplay:y @bottomLeft 0 0 0
op sub :drawTitleRow.4:y :updateDisplay:y 15
sensor :drawMultiReco:progress AÁNBJe-multiplicative-reconstructor27 @progress
jump 359 notEqual :drawMultiReco:progress 0
sensor *tmp320 AÁNBJe-multiplicative-reconstructor27 @metaglass
op mul *tmp326 *tmp320 3.1500000000000004
op min :drawItemColor.9:length 126 *tmp326
draw col %[white] 0 0 0 0 0
op sub *tmp337 :updateDisplay:y 10
draw image 11 *tmp337 @metaglass 16 0 0
draw col %008000FF 0 0 0 0 0
draw rect 22 :drawTitleRow.4:y :drawItemColor.9:length 10 0 0
draw col %00FF00FF 0 0 0 0 0
draw lineRect 22 :drawTitleRow.4:y 126 10 0 0
op sub *tmp339 :updateDisplay:y 8
print 40
draw print 174 *tmp339 @right 0 0 0
print 40
draw print 175 *tmp339 @right 0 0 0
op sub :drawItemColor.9:y :updateDisplay:y 30
sensor *tmp343 AÁNBJe-multiplicative-reconstructor27 @titanium
op div *tmp349 *tmp343 0.6349206349206349
op min :drawItemColor.10:length 126 *tmp349
draw col %[white] 0 0 0 0 0
op sub *tmp360 :updateDisplay:y 25
draw image 11 *tmp360 @titanium 16 0 0
draw col %008000FF 0 0 0 0 0
draw rect 22 :drawItemColor.9:y :drawItemColor.10:length 10 0 0
draw col %00FF00FF 0 0 0 0 0
draw lineRect 22 :drawItemColor.9:y 126 10 0 0
op sub *tmp362 :updateDisplay:y 23
print 80
draw print 174 *tmp362 @right 0 0 0
print 80
draw print 175 *tmp362 @right 0 0 0
op sub :drawItemColor.10:y :updateDisplay:y 45
sensor *tmp366 AÁNBJe-multiplicative-reconstructor27 @silicon
op div *tmp372 *tmp366 1.0317460317460319
op min :drawItemColor.11:length 126 *tmp372
draw col %[white] 0 0 0 0 0
op sub *tmp383 :updateDisplay:y 40
draw image 11 *tmp383 @silicon 16 0 0
draw col %008000FF 0 0 0 0 0
draw rect 22 :drawItemColor.10:y :drawItemColor.11:length 10 0 0
draw col %00FF00FF 0 0 0 0 0
draw lineRect 22 :drawItemColor.10:y 126 10 0 0
op sub *tmp385 :updateDisplay:y 38
print 130
draw print 174 *tmp385 @right 0 0 0
print 130
draw print 175 *tmp385 @right 0 0 0
op sub :drawItemColor.11:y :updateDisplay:y 60
set :updateDisplay:y :drawItemColor.11:y
jump 377 always 0 0
op idiv *tmp390 :drawMultiReco:progress 0.01
op mul *tmp395 126 :drawMultiReco:progress
op min :drawItemColor.12:length 126 *tmp395
draw col %[white] 0 0 0 0 0
op sub *tmp407 :updateDisplay:y 10
draw image 11 *tmp407 @mega 16 0 0
draw col %008000FF 0 0 0 0 0
draw rect 22 :drawTitleRow.4:y :drawItemColor.12:length 10 0 0
draw col %00FF00FF 0 0 0 0 0
draw lineRect 22 :drawTitleRow.4:y 126 10 0 0
op sub *tmp409 :updateDisplay:y 8
print *tmp390
print "%"
draw print 174 *tmp409 @right 0 0 0
print *tmp390
print "%"
draw print 175 *tmp409 @right 0 0 0
op sub :updateDisplay:y :drawTitleRow.4:y 45
op sub :updateDisplay:y :updateDisplay:y 5
sensor *tmp413 @unit @dead
jump 425 notEqual *tmp413 false
draw col %[white] 0 0 0 0 0
print "Builder"
draw print 22 :updateDisplay:y @bottomLeft 0 0 0
print "Builder"
draw print 23 :updateDisplay:y @bottomLeft 0 0 0
op sub :drawTitleRow.5:y :updateDisplay:y 15
jump 402 notEqual .transportItem null
draw col %[white] 0 0 0 0 0
op sub *tmp433 :updateDisplay:y 10
draw image 11 *tmp433 @poly 16 0 0
draw col %008000FF 0 0 0 0 0
draw rect 22 :drawTitleRow.5:y 0 10 0 0
draw col %00FF00FF 0 0 0 0 0
draw lineRect 22 :drawTitleRow.5:y 126 10 0 0
op sub *tmp435 :updateDisplay:y 8
print .transportTarget
draw print 174 *tmp435 @right 0 0 0
print .transportTarget
draw print 175 *tmp435 @right 0 0 0
op sub :drawItemColor.13:y :updateDisplay:y 30
set :updateDisplay:y :drawItemColor.13:y
jump 425 always 0 0
sensor :drawBuilder:unitItem @unit @firstItem
sensor *tmp442 @unit @totalItems
op equal *tmp443 :drawBuilder:unitItem .transportItem
op mul *tmp444 *tmp442 *tmp443
set :drawUnit.1:item .transportItem
set :drawItem.14:target .transportTarget
op mul *tmp449 126 *tmp444
op div *tmp450 *tmp449 :drawItem.14:target
op min :drawItemColor.14:length 126 *tmp450
draw col %[white] 0 0 0 0 0
op sub *tmp461 :updateDisplay:y 10
draw image 11 *tmp461 :drawUnit.1:item 16 0 0
draw col %008000FF 0 0 0 0 0
draw rect 22 :drawTitleRow.5:y :drawItemColor.14:length 10 0 0
draw col %00FF00FF 0 0 0 0 0
draw lineRect 22 :drawTitleRow.5:y 126 10 0 0
op sub *tmp463 :updateDisplay:y 8
print .transportTarget
draw print 174 *tmp463 @right 0 0 0
print .transportTarget
draw print 175 *tmp463 @right 0 0 0
op sub :drawItemColor.14:y :updateDisplay:y 30
set :updateDisplay:y :drawItemColor.14:y
jump 449 lessThan :updateDisplay:y 20
jump 449 equal AJTJK-battery1 null
draw col %[white] 0 0 0 0 0
print "Power"
draw print 22 20 @bottomLeft 0 0 0
print "Power"
draw print 23 20 @bottomLeft 0 0 0
sensor :drawPower:power AJTJK-battery1 @totalPower
op mul *tmp474 :drawPower:power 100
op idiv *tmp476 *tmp474 4000
op mul *tmp482 :drawPower:power 0.0315
op min :drawItemColor.15:length 126 *tmp482
draw col %[white] 0 0 0 0 0
draw image 11 10 @battery 16 0 0
draw col %808000FF 0 0 0 0 0
draw rect 22 5 :drawItemColor.15:length 10 0 0
draw col %FFFF00FF 0 0 0 0 0
draw lineRect 22 5 126 10 0 0
print *tmp476
print "%"
draw print 174 12 @right 0 0 0
print *tmp476
print "%"
draw print 175 12 @right 0 0 0
drawflush display1
jump 790 always 0 0
jump 491 notEqual .page 1
read :displayStorage:tail bank2 510
jump 470 equal .pageSwitched false
read .lastTail bank2 511
draw col %[gold] 0 0 0 0 0
print "Resources"
draw print 11 206 @left 0 0 0
print "Resources"
draw print 12 206 @left 0 0 0
draw col %[white] 0 0 0 0 0
draw image 12 182 @copper 15 0 0
draw image 12 161 @lead 15 0 0
draw image 12 140 @sand 15 0 0
draw image 12 119 @coal 15 0 0
draw image 12 98 @graphite 15 0 0
draw image 12 77 @silicon 15 0 0
draw image 12 56 @titanium 15 0 0
draw image 12 35 @metaglass 15 0 0
draw image 12 14 @thorium 15 0 0
set :drawHeader*retaddr 472
jump 811 always 0 0
drawflush display1
jump 790 greaterThan .lastTail :displayStorage:tail
read :displayStorage:accumulator bank2 .lastTail
op add :displayStorage:x 25 .lastTail
op sub :displayStorage:y.1 190 8
set :displayStorage:i 0
op and *tmp513 :displayStorage:accumulator 0b11111
op sub :displayStorage:value *tmp513 8
select *tmp516 greaterThanEq :displayStorage:value 0 %[green] %[red]
draw col *tmp516 0 0 0 0 0
op add *tmp517 :displayStorage:y.1 :displayStorage:value
draw line :displayStorage:x :displayStorage:y.1 :displayStorage:x *tmp517 0 0
op sub :displayStorage:y.1 :displayStorage:y.1 21
op shr :displayStorage:accumulator :displayStorage:accumulator 5
op add :displayStorage:i :displayStorage:i 1
jump 478 lessThan :displayStorage:i 9
drawflush display1
op add .lastTail .lastTail 1
jump 790 always 0 0
jump 729 notEqual .page 2
set :drawHeader*retaddr 494
jump 811 always 0 0
set :displayBaseMap:limit 0
jump 508 equal .pageSwitched false
draw col %[gold] 0 0 0 0 0
print "Base map"
draw print 90 206 @center 0 0 0
print "Base map"
draw print 91 206 @center 0 0 0
draw col %[white] 0 0 0 0 0
draw reset 0 0 0 0 0 0
draw translate 90 105 0 0 0 0
draw scale 7.333333333333333 7.333333333333333 0 0 0 0
draw image 0 0 @core-shard 6 0 0
drawflush display1
set :displayBaseMap:limit 5
set :displayBaseMap:counter 0
set :displayBaseMap:cfg "AJEMJJ-graphite-press0"
set *tmp523 512
jump 586 always 0 0
set :displayBaseMap:cfg "AJTJK-battery1"
set *tmp523 515
jump 586 always 0 0
set :displayBaseMap:cfg "ALTJL-battery2"
set *tmp523 518
jump 586 always 0 0
set :displayBaseMap:cfg "AJRJM-combustion-generator3"
set *tmp523 521
jump 586 always 0 0
set :displayBaseMap:cfg "ALMQJN-silicon-smelter4"
set *tmp523 524
jump 586 always 0 0
set :displayBaseMap:cfg "A{LNJO-inverted-sorter5"
set *tmp523 527
jump 586 always 0 0
set :displayBaseMap:cfg "A©JNJP-unloader6"
set *tmp523 530
jump 586 always 0 0
set :displayBaseMap:cfg "A{HNJQ-inverted-sorter7"
set *tmp523 533
jump 586 always 0 0
set :displayBaseMap:cfg "AJPJR-underflow-gate8"
set *tmp523 536
jump 586 always 0 0
set :displayBaseMap:cfg "AÕFDJS-micro-processor9"
set *tmp523 539
jump 586 always 0 0
set :displayBaseMap:cfg "AFFJT-power-node10"
set *tmp523 542
jump 586 always 0 0
set :displayBaseMap:cfg "A©FHJU-unloader11"
set *tmp523 545
jump 586 always 0 0
set :displayBaseMap:cfg "A~FJJV-overflow-gate12"
set *tmp523 548
jump 586 always 0 0
set :displayBaseMap:cfg "A~DJJW-overflow-gate13"
set *tmp523 551
jump 586 always 0 0
set :displayBaseMap:cfg "A¾BFLX-air-factory14"
set *tmp523 554
jump 586 always 0 0
set :displayBaseMap:cfg "A©NHJY-unloader15"
set *tmp523 557
jump 586 always 0 0
set :displayBaseMap:cfg "A{NJJZ-inverted-sorter16"
set *tmp523 560
jump 586 always 0 0
set :displayBaseMap:cfg "ANOMJ[-kiln17"
set *tmp523 563
jump 586 always 0 0
set :displayBaseMap:cfg "A¡AOJ\-water-extractor18"
set *tmp523 566
jump 586 always 0 0
set :displayBaseMap:cfg "AAKJ^-steam-generator20"
set *tmp523 569
jump 586 always 0 0
set :displayBaseMap:cfg "ALQIJ_-silicon-smelter21"
set *tmp523 572
jump 586 always 0 0
set :displayBaseMap:cfg "AKFRJa-multi-press23"
set *tmp523 575
jump 586 always 0 0
set :displayBaseMap:cfg "A©HFJb-unloader24"
set *tmp523 578
jump 586 always 0 0
set :displayBaseMap:cfg "A{HDJc-inverted-sorter25"
set *tmp523 581
jump 586 always 0 0
set :displayBaseMap:cfg "AÀF@Ld-additive-reconstructor26"
set *tmp523 584
jump 586 always 0 0
set :displayBaseMap:cfg "AÁNBJe-multiplicative-reconstructor27"
set *tmp523 728
jump 591 notEqual :displayBaseMap:counter :displayBaseMap:limit
set :drawHeader*retaddr 589
jump 811 always 0 0
set :displayBaseMap:counter 0
jump 592 always 0 0
op add :displayBaseMap:counter :displayBaseMap:counter 1
read *tmp652 :displayBaseMap:cfg 1
op sub *tmp653 *tmp652 74
lookup block :unpackCfg:type *tmp653
read *tmp656 :displayBaseMap:cfg 2
op sub *tmp657 *tmp656 74
op div :unpackCfg:x *tmp657 2
read *tmp660 :displayBaseMap:cfg 3
op sub *tmp661 *tmp660 74
op div :unpackCfg:y *tmp661 2
read *tmp664 :displayBaseMap:cfg 4
op sub :unpackCfg:rotation *tmp664 74
read *tmp667 :displayBaseMap:cfg 5
op sub :unpackCfg:ind *tmp667 74
sensor :unpackCfg:size :unpackCfg:type @size
op shl *tmp677 1 :unpackCfg:ind
op and *tmp678 .blocksBuilt *tmp677
jump 619 equal *tmp678 false
draw col %[white] 0 0 0 0 0
draw reset 0 0 0 0 0 0
draw translate 90 105 0 0 0 0
draw scale 7.333333333333333 7.333333333333333 0 0 0 0
op mul *tmp680 2 :unpackCfg:x
op mul *tmp681 2 :unpackCfg:y
op mul *tmp682 2 :unpackCfg:size
op mul *tmp683 90 :unpackCfg:rotation
draw image *tmp680 *tmp681 :unpackCfg:type *tmp682 *tmp683 0
jump 629 always 0 0
jump 629 equal .pageSwitched false
draw color 128 255 128 128 0 0
draw reset 0 0 0 0 0 0
draw translate 90 105 0 0 0 0
draw scale 7.333333333333333 7.333333333333333 0 0 0 0
op mul *tmp685 2 :unpackCfg:x
op mul *tmp686 2 :unpackCfg:y
op mul *tmp687 2 :unpackCfg:size
op mul *tmp688 90 :unpackCfg:rotation
draw image *tmp685 *tmp686 :unpackCfg:type *tmp687 *tmp688 0
set :displayBaseMap:index .recentBuildIndex
jump 722 lessThan :displayBaseMap:index 0
set .recentBuildIndex -1
op mul *tmp1035 :displayBaseMap:index 2
op add @counter *tmp1035 634
set :drawBlock:cfg "AJEMJJ-graphite-press0"
jump 685 always 0 0
set :drawBlock:cfg "AJTJK-battery1"
jump 685 always 0 0
set :drawBlock:cfg "ALTJL-battery2"
jump 685 always 0 0
set :drawBlock:cfg "AJRJM-combustion-generator3"
jump 685 always 0 0
set :drawBlock:cfg "ALMQJN-silicon-smelter4"
jump 685 always 0 0
set :drawBlock:cfg "A{LNJO-inverted-sorter5"
jump 685 always 0 0
set :drawBlock:cfg "A©JNJP-unloader6"
jump 685 always 0 0
set :drawBlock:cfg "A{HNJQ-inverted-sorter7"
jump 685 always 0 0
set :drawBlock:cfg "AJPJR-underflow-gate8"
jump 685 always 0 0
set :drawBlock:cfg "AÕFDJS-micro-processor9"
jump 685 always 0 0
set :drawBlock:cfg "AFFJT-power-node10"
jump 685 always 0 0
set :drawBlock:cfg "A©FHJU-unloader11"
jump 685 always 0 0
set :drawBlock:cfg "A~FJJV-overflow-gate12"
jump 685 always 0 0
set :drawBlock:cfg "A~DJJW-overflow-gate13"
jump 685 always 0 0
set :drawBlock:cfg "A¾BFLX-air-factory14"
jump 685 always 0 0
set :drawBlock:cfg "A©NHJY-unloader15"
jump 685 always 0 0
set :drawBlock:cfg "A{NJJZ-inverted-sorter16"
jump 685 always 0 0
set :drawBlock:cfg "ANOMJ[-kiln17"
jump 685 always 0 0
set :drawBlock:cfg "A¡AOJ\-water-extractor18"
jump 685 always 0 0
set :drawBlock:cfg "AAKJ^-steam-generator20"
jump 685 always 0 0
set :drawBlock:cfg "ALQIJ_-silicon-smelter21"
jump 685 always 0 0
set :drawBlock:cfg "AKFRJa-multi-press23"
jump 685 always 0 0
set :drawBlock:cfg "A©HFJb-unloader24"
jump 685 always 0 0
set :drawBlock:cfg "A{HDJc-inverted-sorter25"
jump 685 always 0 0
set :drawBlock:cfg "AÀF@Ld-additive-reconstructor26"
jump 685 always 0 0
set :drawBlock:cfg "AÁNBJe-multiplicative-reconstructor27"
read *tmp652 :drawBlock:cfg 1
op sub *tmp653 *tmp652 74
lookup block :unpackCfg:type *tmp653
read *tmp656 :drawBlock:cfg 2
op sub *tmp657 *tmp656 74
op div :unpackCfg:x *tmp657 2
read *tmp660 :drawBlock:cfg 3
op sub *tmp661 *tmp660 74
op div :unpackCfg:y *tmp661 2
read *tmp664 :drawBlock:cfg 4
op sub :unpackCfg:rotation *tmp664 74
read *tmp667 :drawBlock:cfg 5
op sub :unpackCfg:ind *tmp667 74
sensor :unpackCfg:size :unpackCfg:type @size
op shl *tmp677 1 :unpackCfg:ind
op and *tmp678 .blocksBuilt *tmp677
jump 712 equal *tmp678 false
draw col %[white] 0 0 0 0 0
draw reset 0 0 0 0 0 0
draw translate 90 105 0 0 0 0
draw scale 7.333333333333333 7.333333333333333 0 0 0 0
op mul *tmp680 2 :unpackCfg:x
op mul *tmp681 2 :unpackCfg:y
op mul *tmp682 2 :unpackCfg:size
op mul *tmp683 90 :unpackCfg:rotation
draw image *tmp680 *tmp681 :unpackCfg:type *tmp682 *tmp683 0
jump 722 always 0 0
jump 722 equal .pageSwitched false
draw color 128 255 128 128 0 0
draw reset 0 0 0 0 0 0
draw translate 90 105 0 0 0 0
draw scale 7.333333333333333 7.333333333333333 0 0 0 0
op mul *tmp685 2 :unpackCfg:x
op mul *tmp686 2 :unpackCfg:y
op mul *tmp687 2 :unpackCfg:size
op mul *tmp688 90 :unpackCfg:rotation
draw image *tmp685 *tmp686 :unpackCfg:type *tmp687 *tmp688 0
sensor *tmp531 switch1 @enabled
jump 726 equal *tmp531 false
draw clear 0 0 32 0 0 0
jump 790 always 0 0
drawflush display1
set @counter *tmp523
jump 790 always 0 0
op sub :displayLog:page .page 3
read :displayLog:logPosition bank1 511
op sub *tmp536 510 :displayLog:logPosition
op idiv *tmp537 *tmp536 39
op add *tmp538 *tmp537 1
op max :displayLog:pages 1 *tmp538
op add .numPages :displayLog:pages 3
op mul *tmp541 39 :displayLog:page
op sub :displayLog:start 511 *tmp541
op sub *tmp543 :displayLog:start 39
op max :displayLog:stop :displayLog:logPosition *tmp543
jump 752 equal .pageSwitched false
draw col %[gold] 0 0 0 0 0
print "Build records"
draw print 4 206 @left 0 0 0
print "Build records"
draw print 5 206 @left 0 0 0
op sub *tmp547 .page 2
print *tmp547
print "/"
print :displayLog:pages
draw print 172 206 @right 0 0 0
set .lastRecord :displayLog:start
set :drawHeader*retaddr 754
jump 811 always 0 0
op sub :displayLog:position .lastRecord 1
jump 788 lessThan :displayLog:position :displayLog:stop
read :displayLog:record bank1 :displayLog:position
op sub *tmp551 :displayLog:start :displayLog:position
op sub *tmp552 *tmp551 1
op idiv :displayRecord:col *tmp552 13
op mod :displayRecord:row *tmp552 13
op mul *tmp555 58 :displayRecord:col
op add :displayRecord:x 11 *tmp555
op mul *tmp557 15 :displayRecord:row
op sub :displayRecord:y 189 *tmp557
op mod :displayRecord:id :displayLog:record 1000
lookup block *tmp561 :displayRecord:id
jump 770 lessThanEq :displayRecord:id @blockCount
op sub *tmp562 :displayRecord:id @blockCount
lookup unit *tmp561 *tmp562
op div *tmp565 :displayLog:record 1000
op idiv :displayRecord:t *tmp565 120
op idiv :displayRecord:m :displayRecord:t 60
op mod :displayRecord:s :displayRecord:t 60
select *tmp571 lessThan :displayRecord:s 10 "0" ""
print :displayRecord:m
print ":"
print *tmp571
draw image :displayRecord:x :displayRecord:y *tmp561 14 0 0
op add *tmp573 :displayRecord:x 44
op add *tmp574 :displayRecord:y 2
print :displayRecord:s
draw print *tmp573 *tmp574 @right 0 0 0
drawflush display1
sensor *tmp575 switch1 @enabled
jump 788 notEqual *tmp575 false
op sub :displayLog:position :displayLog:position 1
jump 756 greaterThanEq :displayLog:position :displayLog:stop
op add .lastRecord :displayLog:stop 1
drawflush display1
jump 794 lessThanEq .megas 0
print "[gold]All done.[]\nNothing more to see here.\nGo home.\n"
printflush message1
jump 802 always 0 0
print "[gold]Building {0}\n==================================[]\n{0}\n{0}{0} ({0})\n{0}\n"
format .nextBlock
format .status1
format .status2
format .item2
format .block2
format .status3
printflush message1
sensor .pageSwitched switch1 @enabled
jump 18 equal .pageSwitched false
control enabled switch1 false 0 0 0
op add *tmp585 .page 1
op mod .page *tmp585 .numPages
drawflush null
draw reset 0 0 0 0 0 0
draw clear 0 0 32 0 0 0
jump 18 always 0 0
draw reset 0 0 0 0 0 0
draw color 0 0 32 255 0 0
draw rect 0 217 200 300 0 0
jump 835 lessThanEq .megas 0
draw col %[gold] 0 0 0 0 0
draw scale 3.5 3.5 0 0 0 0
read *tmp0 processor1 "time"
op idiv :drawHeader:t *tmp0 120
op idiv :drawHeader:m :drawHeader:t 60
op mod :drawHeader:s :drawHeader:t 60
select *tmp594 lessThan :drawHeader:s 10 "0" ""
print :drawHeader:m
print ":"
print *tmp594
print :drawHeader:s
draw print 25 71 @center 0 0 0
print :drawHeader:m
print ":"
print *tmp594
print :drawHeader:s
draw print 26 71 @center 0 0 0
draw col %[white] 0 0 0 0 0
draw reset 0 0 0 0 0 0
set @counter :drawHeader*retaddr
draw col %[gold] 0 0 0 0 0
print "Goal"
draw print 42 261 @bottom 0 0 0
print "Goal"
draw print 43 261 @bottom 0 0 0
draw col %[white] 0 0 0 0 0
jump 844 equal .nextMultiReco false
draw image 42 237 .nextMultiReco 32 0 0
jump 877 always 0 0
op add *tmp598 .nextBlock .nextFactory
op add :drawHeader:count *tmp598 .nextAddReco
jump 851 notEqual :drawHeader:count 3
draw image 22 244 .nextBlock 18 0 0
draw image 42 244 .nextFactory 18 0 0
draw image 62 244 .nextAddReco 18 0 0
jump 877 always 0 0
jump 865 notEqual :drawHeader:count 2
set :drawHeader:x 27
set :drawHeader:goal .nextBlock
jump 857 equal :drawHeader:goal null
draw image 27 240 :drawHeader:goal 25 0 0
op add :drawHeader:x 27 30
set :drawHeader:goal .nextFactory
jump 861 equal :drawHeader:goal null
draw image :drawHeader:x 240 :drawHeader:goal 25 0 0
op add :drawHeader:x :drawHeader:x 30
set :drawHeader:goal .nextAddReco
jump 877 equal :drawHeader:goal null
draw image :drawHeader:x 240 :drawHeader:goal 25 0 0
jump 877 always 0 0
jump 877 notEqual :drawHeader:count 1
set :drawHeader:goal.1 .nextBlock
jump 870 equal :drawHeader:goal.1 null
draw image 42 237 :drawHeader:goal.1 32 0 0
jump 877 always 0 0
set :drawHeader:goal.1 .nextFactory
jump 874 equal :drawHeader:goal.1 null
draw image 42 237 :drawHeader:goal.1 32 0 0
jump 877 always 0 0
set :drawHeader:goal.1 .nextAddReco
jump 877 equal :drawHeader:goal.1 null
draw image 42 237 :drawHeader:goal.1 32 0 0
set :drawHeader:tt.1 @second
read *tmp0 processor1 "time"
op idiv :drawHeader:t.1 *tmp0 120
op idiv :drawHeader:m.1 :drawHeader:t.1 60
op mod :drawHeader:s.1 :drawHeader:t.1 60
select *tmp617 lessThan :drawHeader:s.1 10 "0" ""
print :drawHeader:m.1
print ":{0}{0} (x{0}.{0})"
format *tmp617
format :drawHeader:s.1
op mul *tmp618 10 :drawHeader:t.1
op div *tmp619 *tmp618 :drawHeader:tt.1
op round :drawHeader:ratio *tmp619 0
op idiv *tmp621 :drawHeader:ratio 10
op mod *tmp622 :drawHeader:ratio 10
format *tmp621
format *tmp622
draw print 174 272 @topRight 0 0 0
jump 906 equal .titaniumDrill false
sensor *tmp624 .titaniumDrill @titanium
op max :drawHeader:count.1 .titaniumDrillCount *tmp624
op log10 *tmp626 :drawHeader:count.1 0
op floor :drawHeader:len *tmp626 0
print "x"
print :drawHeader:count.1
draw print 174 255 @topRight 0 0 0
op mul *tmp629 7 :drawHeader:len
op sub *tmp630 154 *tmp629
draw image *tmp630 246 @titanium 12 0 0
jump 916 equal .thoriumContainer false
sensor :drawHeader:count.2 .thoriumContainer @thorium
op log10 *tmp633 :drawHeader:count.2 0
op floor :drawHeader:len.1 *tmp633 0
print "x"
print :drawHeader:count.2
draw print 124 255 @topRight 0 0 0
op mul *tmp636 7 :drawHeader:len.1
op sub *tmp637 104 *tmp636
draw image *tmp637 246 @thorium 12 0 0
set :drawHeader:x.3 174
draw col %[white] 0 0 0 0 0
set :drawUnitCount:count .polys
jump 925 lessThanEq :drawUnitCount:count 0
draw image 154 227 @poly 12 0 0
print "x"
print :drawUnitCount:count
draw print 174 229 @right 0 0 0
op sub :drawHeader:x.3 174 30
set :drawUnitCount.1:count .monos
jump 933 lessThanEq :drawUnitCount.1:count 0
op sub *tmp643 :drawHeader:x.3 20
draw image *tmp643 227 @mono 12 0 0
print "x"
print :drawUnitCount.1:count
draw print :drawHeader:x.3 229 @right 0 0 0
op sub :drawHeader:x.3 :drawHeader:x.3 30
set :drawUnitCount.2:count .flares
jump 940 lessThanEq :drawUnitCount.2:count 0
op sub *tmp646 :drawHeader:x.3 20
draw image *tmp646 227 @flare 12 0 0
print "x"
print :drawUnitCount.2:count
draw print :drawHeader:x.3 229 @right 0 0 0
set @counter :drawHeader*retaddr
draw triangle AJEMJJ-graphite-press0 ALTJL-battery2 AJRJM-combustion-generator3 ALMQJN-silicon-smelter4 A{LNJO-inverted-sorter5 A©JNJP-unloader6
draw triangle A{HNJQ-inverted-sorter7 AJPJR-underflow-gate8 AÕFDJS-micro-processor9 AFFJT-power-node10 A©FHJU-unloader11 A~FJJV-overflow-gate12
draw triangle A~DJJW-overflow-gate13 A©NHJY-unloader15 A{NJJZ-inverted-sorter16 ANOMJ[-kiln17 A¡AOJ\-water-extractor18 AAKJ^-steam-generator20
draw triangle ALQIJ_-silicon-smelter21 AKFRJa-multi-press23 A©HFJb-unloader24 A{HDJc-inverted-sorter25 .thoriumDrill 0
print "Compiled by Mindcode - github.com/cardillan/mindcode"

