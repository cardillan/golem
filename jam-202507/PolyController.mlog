jump 4 always 0 0
draw triangle message1 .builder .coalX .coalY .core .coreX
draw triangle .coreY .distance :backgroundProcess:flag :findOreToMine:dist :findOreToMine:floor :findOreToMine:x
draw triangle :findOreToMine:y 0 0 0 0 0
set .coalX 0
set .coalY 0
set .distance 1000000000
ubind @poly
set .builder @unit
ulocate building core false @copper .coreX .coreY 0 .core
jump 7 equal .core null
set *signature "0:v1"
jump 82 equal .core null
ubind @poly
jump 18 notEqual @unit .builder
print "Found builder unit.\n"
printflush message1
jump 13 always 0 0
sensor :backgroundProcess:flag @unit @flag
print "Unit flag: {0}\n"
format :backgroundProcess:flag
jump 56 notEqual :backgroundProcess:flag 0
sensor *tmp11 @unit @firstItem
jump 29 equal *tmp11 null
ucontrol itemDrop @air 30 0 0 0
sensor *tmp14 @unit @firstItem
jump 29 equal *tmp14 null
print "Holding wrong item.\n"
jump 13 always 0 0
ulocate ore core true @coal :findOreToMine:x :findOreToMine:y 0 0
op sub *tmp19 :findOreToMine:x .coreX
op sub *tmp20 :findOreToMine:y .coreY
op len :findOreToMine:dist *tmp19 *tmp20
jump 37 greaterThanEq :findOreToMine:dist .distance
set .coalX :findOreToMine:x
set .coalY :findOreToMine:y
set .distance :findOreToMine:dist
ucontrol approach .coalX .coalY 6 0 0
ucontrol getBlock .coalX .coalY 0 0 :findOreToMine:floor
jump 46 notEqual :findOreToMine:floor @ore-coal
ucontrol mine :findOreToMine:x :findOreToMine:y 0 0 0
print "Found coal at {0}, {0}\n"
format .coalX
format .coalY
ucontrol flag 2 0 0 0 0
jump 13 always 0 0
jump 52 equal :findOreToMine:floor null
set .distance 1000000000
print "Coal at {0}, {0} disappeared\n"
format .coalX
format .coalY
jump 13 always 0 0
print "Not close enough to {0}, {0}\n"
format .coalX
format .coalY
jump 13 always 0 0
jump 65 notEqual :backgroundProcess:flag 1
print "Returning\n"
ucontrol approach .coreX .coreY 6 0 0
ucontrol itemDrop .core 30 0 0 0
sensor *tmp32 @unit @firstItem
jump 13 notEqual *tmp32 null
print "    Finished\n"
ucontrol flag 0 0 0 0 0
jump 13 always 0 0
print "Mining"
sensor *tmp35 @unit @firstItem
jump 70 equal *tmp35 @coal
print " (dropping)"
ucontrol itemDrop @air 30 0 0 0
print " at {0}, "
format .coalX
print .coalY
ucontrol approach .coalX .coalY 6 0 0
ucontrol mine .coalX .coalY 0 0 0
sensor *tmp38 @unit @totalItems
jump 80 lessThan *tmp38 30
print ", full"
ucontrol approach .coreX .coreY 6 0 0
ucontrol flag 1 0 0 0 0
print "\n"
jump 13 always 0 0
wait 1e12
jump 12 always 0 0
print "Compiled by Mindcode - github.com/cardillan/mindcode"

