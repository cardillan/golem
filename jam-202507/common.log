Automatically added missing 'printflush(message1);' call to the end of the program.
     6 instructions before optimizations.
     1 instructions eliminated by Single Step Elimination (5 iterations).
     1 instructions eliminated by Data Flow Optimization (4 iterations).
     4 instructions after optimizations.

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
     1 op mul :second:result @second TIME_COMPRESS
     2 set *tmp0 :second:result
     3 label *label0
-    * print *tmp0
+    4 print :second:result
     5 printflush message1
     6 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
     0 set TIME_COMPRESS 8
     1 op mul :second:result @second TIME_COMPRESS
-    * set *tmp0 :second:result
     2 label *label0
     3 print :second:result
     4 printflush message1

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
     0 set TIME_COMPRESS 8
     1 op mul :second:result @second TIME_COMPRESS
-    * label *label0
     2 print :second:result
     3 printflush message1
     4 end

Modifications by Jumps phase, Single Step Elimination, pass 3, iteration 1 (-1 instructions):
 
     1 op mul :second:result @second TIME_COMPRESS
     2 print :second:result
     3 printflush message1
-    * end

Final code before resolving virtual instructions:

    0:  set TIME_COMPRESS 8                                          param TIME_COMPRESS = 8;
    1:  op mul :second:result @second TIME_COMPRESS                  mlog (out result) {
    2:  print :second:result                                         print(second());
    3:  printflush message1                                          param TIME_COMPRESS = 8;


Performance: parsed in 95 ms, compiled in 186 ms, optimized in 66 ms, run in 11 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (4 steps):
8
