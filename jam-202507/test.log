Automatically added missing 'printflush(message1);' call to the end of the program.
   122 instructions before optimizations.
     7 instructions eliminated by Temp Variables Elimination (2 iterations).
     2 instructions eliminated by Dead Code Elimination (5 iterations).
C:\Home\golem\jam-202507\test.mnd:37:9 Variable 'createCombinedMask.terrainMask' is not used.
     1 instructions eliminated by Jump Optimization (5 iterations).
    11 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
    20 instructions modified by Expression Optimization (3 iterations).
     1 instructions eliminated by If Expression Optimization (3 iterations).
   258 instructions eliminated by Data Flow Optimization (7 passes, 25 iterations).
     3 loops improved by Loop Hoisting.
     4 instructions eliminated by Loop Optimization (3 iterations).
     4 loops improved by Loop Optimization.
   582 instructions added by Loop Unrolling (8 iterations).
     4 loops unrolled by Loop Unrolling.
   276 instructions added by Function Inlining (8 iterations).
     9 function calls inlined by Function Inlining.
   696 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 907):
    Unroll loop at test.mnd:23:5                                 size   +80, benefit      350.0, efficiency      4.375
    Unroll loop at test.mnd:46:5                                 size   +81, benefit      350.0, efficiency      4.321
    Unroll loop at test.mnd:47:9                                 size   +56, benefit     8750.0, efficiency    156.250
  * Unroll loop at test.mnd:9:5                                  size   +29, benefit    12150.0, efficiency    418.966 (+27 instructions)
    Inline function 'createBlockMaskRow' defined at test.mnd:7:1 size   +17, benefit      108.0, efficiency      6.353
    Inline function call at test.mnd:20:16                       size    +9, benefit        4.0, efficiency      0.444
    Inline function call at test.mnd:21:16                       size    +9, benefit        4.0, efficiency      0.444
    Inline function call at test.mnd:24:20                       size    +9, benefit      100.0, efficiency     11.111

Pass 1: speed optimization selection (cost limit 880):
    Unroll loop at test.mnd:23:5                                 size   +80, benefit      350.0, efficiency      4.375
    Unroll loop at test.mnd:46:5                                 size   +81, benefit      350.0, efficiency      4.321
  * Unroll loop at test.mnd:47:9                                 size   +56, benefit     8750.0, efficiency    156.250 (+50 instructions)
    Inline function 'createBlockMaskRow' defined at test.mnd:7:1 size   +71, benefit      108.0, efficiency      1.521
    Inline function call at test.mnd:20:16                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:21:16                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit      100.0, efficiency      2.778

Pass 1: speed optimization selection (cost limit 830):
  * Unroll loop at test.mnd:23:5                                 size   +80, benefit      350.0, efficiency      4.375 (+77 instructions)
    Unroll loop at test.mnd:46:5                                 size  +381, benefit      350.0, efficiency      0.919
    Inline function 'createBlockMaskRow' defined at test.mnd:7:1 size   +71, benefit      108.0, efficiency      1.521
    Inline function call at test.mnd:20:16                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:21:16                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit      100.0, efficiency      2.778

Pass 1: speed optimization selection (cost limit 753):
  * Unroll loop at test.mnd:46:5                                 size  +381, benefit      350.0, efficiency      0.919 (+227 instructions)
    Inline function 'createBlockMaskRow' defined at test.mnd:7:1 size  +287, benefit       36.0, efficiency      0.125
    Inline function call at test.mnd:20:16                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:21:16                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit        4.0, efficiency      0.111

Pass 1: speed optimization selection (cost limit 526):
  * Inline function 'createBlockMaskRow' defined at test.mnd:7:1 size  +287, benefit       36.0, efficiency      0.125 (+255 instructions)
    Inline function call at test.mnd:20:16                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:21:16                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit        4.0, efficiency      0.111
    Inline function call at test.mnd:24:20                       size   +36, benefit        4.0, efficiency      0.111

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-1 instructions):
 
    75 read *tmp38 processor1 ":createTerrainMask*finished"
    76 jump *label15 equal *tmp38 false
    77 read *tmp39 processor1 ":createTerrainMask*retval"
-    * set :createCombinedMask:terrainMask *tmp39
    78 set *tmp18 :createCombinedMask:adjacentMask
    79 jump *label7 always
    80 set *tmp18 null

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-1 instructions):
 
    74 wait 1e-15
    75 read *tmp38 processor1 ":createTerrainMask*finished"
    76 jump *label15 equal *tmp38 false
-    * read *tmp39 processor1 ":createTerrainMask*retval"
    77 set *tmp18 :createCombinedMask:adjacentMask
    78 jump *label7 always
    79 set *tmp18 null

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-7 instructions):
 
    29 setaddr :createBlockMaskRow*retaddr *label9 (h:*label9)
    30 call *label2 *invalid :createBlockMaskRow*retval (m:*label9) (h:*label9)
    31 label *label9
-    * set *tmp24 :createBlockMaskRow*retval
-    * set :createAdjacentMask:row2 *tmp24
+   32 set :createAdjacentMask:row2 :createBlockMaskRow*retval
    33 op add *tmp25 :createAdjacentMask:y 3
    34 set :createBlockMaskRow:x :createAdjacentMask:x
    35 set :createBlockMaskRow:y *tmp25
    36 setaddr :createBlockMaskRow*retaddr *label10 (h:*label10)
    37 call *label2 *invalid :createBlockMaskRow*retval (m:*label10) (h:*label10)
    38 label *label10
-    * set *tmp26 :createBlockMaskRow*retval
-    * set :createAdjacentMask:row1 *tmp26
+   39 set :createAdjacentMask:row1 :createBlockMaskRow*retval
    40 set :createAdjacentMask:r 2
    41 label *label11
    42 jump *label13 lessThan :createAdjacentMask:r -4
 
    46 setaddr :createBlockMaskRow*retaddr *label14 (h:*label14)
    47 call *label2 *invalid :createBlockMaskRow*retval (m:*label14) (h:*label14)
    48 label *label14
-    * set *tmp28 :createBlockMaskRow*retval
-    * set :createAdjacentMask:row0 *tmp28
+   49 set :createAdjacentMask:row0 :createBlockMaskRow*retval
    50 op shl *tmp29 :createAdjacentMask:row1 1
    51 op or *tmp30 :createAdjacentMask:row2 *tmp29
    52 op shr *tmp31 :createAdjacentMask:row1 1
    53 op or *tmp32 *tmp30 *tmp31
-    * op or *tmp33 *tmp32 :createAdjacentMask:row0
-    * set :createAdjacentMask:mask *tmp33
+   54 op or :createAdjacentMask:mask *tmp32 :createAdjacentMask:row0
    55 op shl *tmp34 :createAdjacentMask:result 7
    56 op and *tmp35 :createAdjacentMask:mask 0xFE
-    * op or *tmp36 *tmp34 *tmp35
-    * set :createAdjacentMask:result *tmp36
+   57 op or :createAdjacentMask:result *tmp34 *tmp35
    58 set :createAdjacentMask:row2 :createAdjacentMask:row1
    59 set :createAdjacentMask:row1 :createAdjacentMask:row0
    60 label *label12
    61 op sub :createAdjacentMask:r :createAdjacentMask:r 1
    62 jump *label11 always
    63 label *label13
-    * op shr *tmp37 :createAdjacentMask:result 1
-    * set *tmp22 *tmp37
+   64 op shr *tmp22 :createAdjacentMask:result 1
    65 label *label8
    66 set :createCombinedMask:adjacentMask *tmp22
    67 label *label15
 
   125 jump *label28 lessThan :createBlockMaskRow:c -4
   126 op shl *tmp51 :createBlockMaskRow:result 1
   127 op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y *tmp54 *tmp53 *tmp55
-    * op or *tmp56 *tmp51 *tmp53
-    * set :createBlockMaskRow:result *tmp56
+  128 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  129 op or :createBlockMaskRow:result *tmp51 *tmp53
   130 label *label27
   131 op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
   132 jump *label26 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-1 instructions):
 
     9 label *label5
    10 op add *tmp15 y 5
    11 ucontrol within x *tmp15 2 *tmp16
-    * op equal *tmp17 *tmp16 false
-    * jump *label4 notEqual *tmp17 false
+   12 jump *label4 equal *tmp16 false
    13 label *label6
    14 set :start @tick
    15 set :createCombinedMask:x x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
     8 ucontrol move x *tmp14
     9 label *label5
    10 op add *tmp15 y 5
-    * ucontrol within x *tmp15 2 *tmp16
+   11 ucontrol within x *tmp14 2 *tmp16
    12 jump *label4 equal *tmp16 false
    13 label *label6
    14 set :start @tick
    15 set :createCombinedMask:x x
    16 set :createCombinedMask:y y
    17 write @unit processor1 ":createTerrainMask:unit"
-    * write :createCombinedMask:x processor1 ":createTerrainMask:x"
-    * write :createCombinedMask:y processor1 ":createTerrainMask:y"
+   18 write x processor1 ":createTerrainMask:x"
+   19 write y processor1 ":createTerrainMask:y"
    20 write false processor1 ":createTerrainMask*finished"
    21 write 1 processor1 "@counter"
-    * set :createAdjacentMask:x :createCombinedMask:x
-    * set :createAdjacentMask:y :createCombinedMask:y
+   22 set :createAdjacentMask:x x
+   23 set :createAdjacentMask:y y
    24 set :createAdjacentMask:result 0
-    * op add *tmp23 :createAdjacentMask:y 4
-    * set :createBlockMaskRow:x :createAdjacentMask:x
+   25 op add *tmp23 :createCombinedMask:y 4
+   26 set :createBlockMaskRow:x :createCombinedMask:x
    27 set :createBlockMaskRow:y *tmp23
    28 setaddr :createBlockMaskRow*retaddr *label9 (h:*label9)
    29 call *label2 *invalid :createBlockMaskRow*retval (m:*label9) (h:*label9)
    30 label *label9
    31 set :createAdjacentMask:row2 :createBlockMaskRow*retval
-    * op add *tmp25 :createAdjacentMask:y 3
-    * set :createBlockMaskRow:x :createAdjacentMask:x
+   32 op add *tmp25 :createCombinedMask:y 3
+   33 set :createBlockMaskRow:x :createCombinedMask:x
    34 set :createBlockMaskRow:y *tmp25
    35 setaddr :createBlockMaskRow*retaddr *label10 (h:*label10)
    36 call *label2 *invalid :createBlockMaskRow*retval (m:*label10) (h:*label10)
 
    39 set :createAdjacentMask:r 2
    40 label *label11
    41 jump *label13 lessThan :createAdjacentMask:r -4
-    * op add *tmp27 :createAdjacentMask:y :createAdjacentMask:r
-    * set :createBlockMaskRow:x :createAdjacentMask:x
+   42 op add *tmp27 :createCombinedMask:y :createAdjacentMask:r
+   43 set :createBlockMaskRow:x :createCombinedMask:x
    44 set :createBlockMaskRow:y *tmp27
    45 setaddr :createBlockMaskRow*retaddr *label14 (h:*label14)
    46 call *label2 *invalid :createBlockMaskRow*retval (m:*label14) (h:*label14)
 
    50 op or *tmp30 :createAdjacentMask:row2 *tmp29
    51 op shr *tmp31 :createAdjacentMask:row1 1
    52 op or *tmp32 *tmp30 *tmp31
-    * op or :createAdjacentMask:mask *tmp32 :createAdjacentMask:row0
+   53 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
    54 op shl *tmp34 :createAdjacentMask:result 7
    55 op and *tmp35 :createAdjacentMask:mask 0xFE
    56 op or :createAdjacentMask:result *tmp34 *tmp35
    57 set :createAdjacentMask:row2 :createAdjacentMask:row1
-    * set :createAdjacentMask:row1 :createAdjacentMask:row0
+   58 set :createAdjacentMask:row1 :createBlockMaskRow*retval
    59 label *label12
    60 op sub :createAdjacentMask:r :createAdjacentMask:r 1
    61 jump *label11 always
 
    67 wait 1e-15
    68 read *tmp38 processor1 ":createTerrainMask*finished"
    69 jump *label15 equal *tmp38 false
-    * set *tmp18 :createCombinedMask:adjacentMask
+   70 set *tmp18 *tmp22
    71 jump *label7 always
-    * set *tmp18 null
    72 label *label7
-    * set :m *tmp18
+   73 set :m :createCombinedMask:adjacentMask
    74 set :finish @tick
-    * set :drawMask:mask :m
+   75 set :drawMask:mask *tmp18
    76 draw reset
    77 draw translate 6 6
    78 draw clear 0 0 0
 
    85 op mul *tmp40 7 :drawMask:r
    86 op add *tmp41 *tmp40 :drawMask:c
    87 op shl *tmp42 1 *tmp41
-    * op and *tmp43 :drawMask:mask *tmp42
+   88 op and *tmp43 :m *tmp42
    89 jump *label23 equal *tmp43 false
    90 set *tmp44 %[red]
    91 jump *label24 always
 
    93 set *tmp44 %[green]
    94 label *label24
    95 set :drawMask:color *tmp44
-    * draw col :drawMask:color
+   96 draw col *tmp44
    97 op mul *tmp45 :drawMask:c 10
    98 op mul *tmp46 :drawMask:r 10
    99 draw rect *tmp45 *tmp46 8 8
 
   107 label *label19
   108 drawflush display1
   109 label *label16
-    * print :m
+  110 print *tmp18
   111 print "\n"
   112 op sub *tmp47 :finish :start
   113 op mul *tmp48 1000 *tmp47
-    * op div *tmp49 *tmp48 60
+  114 op div *tmp49 *tmp47 0.06
   115 op round *tmp50 *tmp49
   116 print *tmp50
   117 printflush message1
 
   131 label *label28
   132 set :createBlockMaskRow*retval :createBlockMaskRow:result
   133 jump *label25 always
-    * set :createBlockMaskRow*retval null
   134 label *label25
   135 return :createBlockMaskRow*retaddr
   136 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
     7 op add *tmp14 y 5
     8 ucontrol move x *tmp14
     9 label *label5
-    * op add *tmp15 y 5
    10 ucontrol within x *tmp14 2 *tmp16
    11 jump *label4 equal *tmp16 false
    12 label *label6
 
    18 write y processor1 ":createTerrainMask:y"
    19 write false processor1 ":createTerrainMask*finished"
    20 write 1 processor1 "@counter"
-    * set :createAdjacentMask:x x
-    * set :createAdjacentMask:y y
    21 set :createAdjacentMask:result 0
-    * op add *tmp23 :createCombinedMask:y 4
-    * set :createBlockMaskRow:x :createCombinedMask:x
+   22 op add *tmp23 y 4
+   23 set :createBlockMaskRow:x x
    24 set :createBlockMaskRow:y *tmp23
    25 setaddr :createBlockMaskRow*retaddr *label9 (h:*label9)
    26 call *label2 *invalid :createBlockMaskRow*retval (m:*label9) (h:*label9)
    27 label *label9
    28 set :createAdjacentMask:row2 :createBlockMaskRow*retval
-    * op add *tmp25 :createCombinedMask:y 3
-    * set :createBlockMaskRow:x :createCombinedMask:x
+   29 op add *tmp25 y 3
+   30 set :createBlockMaskRow:x x
    31 set :createBlockMaskRow:y *tmp25
    32 setaddr :createBlockMaskRow*retaddr *label10 (h:*label10)
    33 call *label2 *invalid :createBlockMaskRow*retval (m:*label10) (h:*label10)
 
    36 set :createAdjacentMask:r 2
    37 label *label11
    38 jump *label13 lessThan :createAdjacentMask:r -4
-    * op add *tmp27 :createCombinedMask:y :createAdjacentMask:r
-    * set :createBlockMaskRow:x :createCombinedMask:x
+   39 op add *tmp27 y :createAdjacentMask:r
+   40 set :createBlockMaskRow:x x
    41 set :createBlockMaskRow:y *tmp27
    42 setaddr :createBlockMaskRow*retaddr *label14 (h:*label14)
    43 call *label2 *invalid :createBlockMaskRow*retval (m:*label14) (h:*label14)
    44 label *label14
-    * set :createAdjacentMask:row0 :createBlockMaskRow*retval
    45 op shl *tmp29 :createAdjacentMask:row1 1
    46 op or *tmp30 :createAdjacentMask:row2 *tmp29
    47 op shr *tmp31 :createAdjacentMask:row1 1
 
    66 set *tmp18 *tmp22
    67 jump *label7 always
    68 label *label7
-    * set :m :createCombinedMask:adjacentMask
+   69 set :m *tmp22
    70 set :finish @tick
-    * set :drawMask:mask *tmp18
+   71 set :drawMask:mask *tmp22
    72 draw reset
    73 draw translate 6 6
    74 draw clear 0 0 0
 
    81 op mul *tmp40 7 :drawMask:r
    82 op add *tmp41 *tmp40 :drawMask:c
    83 op shl *tmp42 1 *tmp41
-    * op and *tmp43 :m *tmp42
+   84 op and *tmp43 :createCombinedMask:adjacentMask *tmp42
    85 jump *label23 equal *tmp43 false
    86 set *tmp44 %[red]
    87 jump *label24 always
    88 label *label23
    89 set *tmp44 %[green]
    90 label *label24
-    * set :drawMask:color *tmp44
    91 draw col *tmp44
    92 op mul *tmp45 :drawMask:c 10
    93 op mul *tmp46 :drawMask:r 10
 
   102 label *label19
   103 drawflush display1
   104 label *label16
-    * print *tmp18
+  105 print *tmp22
   106 print "\n"
   107 op sub *tmp47 :finish :start
-    * op mul *tmp48 1000 *tmp47
   108 op div *tmp49 *tmp47 0.06
   109 op round *tmp50 *tmp49
   110 print *tmp50

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-5 instructions):
 
    11 jump *label4 equal *tmp16 false
    12 label *label6
    13 set :start @tick
-    * set :createCombinedMask:x x
-    * set :createCombinedMask:y y
    14 write @unit processor1 ":createTerrainMask:unit"
    15 write x processor1 ":createTerrainMask:x"
    16 write y processor1 ":createTerrainMask:y"
 
    61 wait 1e-15
    62 read *tmp38 processor1 ":createTerrainMask*finished"
    63 jump *label15 equal *tmp38 false
-    * set *tmp18 *tmp22
    64 jump *label7 always
    65 label *label7
-    * set :m *tmp22
    66 set :finish @tick
-    * set :drawMask:mask *tmp22
    67 draw reset
    68 draw translate 6 6
    69 draw clear 0 0 0
 
    76 op mul *tmp40 7 :drawMask:r
    77 op add *tmp41 *tmp40 :drawMask:c
    78 op shl *tmp42 1 *tmp41
-    * op and *tmp43 :createCombinedMask:adjacentMask *tmp42
+   79 op and *tmp43 *tmp22 *tmp42
    80 jump *label23 equal *tmp43 false
    81 set *tmp44 %[red]
    82 jump *label24 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-1 instructions):
 
    56 label *label13
    57 op shr *tmp22 :createAdjacentMask:result 1
    58 label *label8
-    * set :createCombinedMask:adjacentMask *tmp22
    59 label *label15
    60 wait 1e-15
    61 read *tmp38 processor1 ":createTerrainMask*finished"

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
     3 set x 85
     4 set y 100
     5 ubind @poly
+    6 op add *tmp14 y 5
     7 label *label4
-    * op add *tmp14 y 5
     8 ucontrol move x *tmp14
     9 label *label5
    10 ucontrol within x *tmp14 2 *tmp16
 
    32 label *label10
    33 set :createAdjacentMask:row1 :createBlockMaskRow*retval
    34 set :createAdjacentMask:r 2
+   35 set :createBlockMaskRow:x x
+   36 setaddr :createBlockMaskRow*retaddr *label14 (h:*label14)
    37 label *label11
    38 jump *label13 lessThan :createAdjacentMask:r -4
    39 op add *tmp27 y :createAdjacentMask:r
-    * set :createBlockMaskRow:x x
    40 set :createBlockMaskRow:y *tmp27
-    * setaddr :createBlockMaskRow*retaddr *label14 (h:*label14)
    41 call *label2 *invalid :createBlockMaskRow*retval (m:*label14) (h:*label14)
    42 label *label14
    43 op shl *tmp29 :createAdjacentMask:row1 1
 
    70 label *label17
    71 jump *label19 lessThan :drawMask:r 0
    72 set :drawMask:c 0
+   73 op mul *tmp46 :drawMask:r 10
    74 label *label20
    75 jump *label22 greaterThanEq :drawMask:c 7
    76 op mul *tmp40 7 :drawMask:r
 
    85 label *label24
    86 draw col *tmp44
    87 op mul *tmp45 :drawMask:c 10
-    * op mul *tmp46 :drawMask:r 10
    88 draw rect *tmp45 *tmp46 8 8
    89 label *label21
    90 op add :drawMask:c :drawMask:c 1

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-4 instructions):
 
    35 set :createBlockMaskRow:x x
    36 setaddr :createBlockMaskRow*retaddr *label14 (h:*label14)
    37 label *label11
-    * jump *label13 lessThan :createAdjacentMask:r -4
+   38 label *label29
    39 op add *tmp27 y :createAdjacentMask:r
    40 set :createBlockMaskRow:y *tmp27
    41 call *label2 *invalid :createBlockMaskRow*retval (m:*label14) (h:*label14)
 
    52 set :createAdjacentMask:row1 :createBlockMaskRow*retval
    53 label *label12
    54 op sub :createAdjacentMask:r :createAdjacentMask:r 1
-    * jump *label11 always
+   55 jump *label29 greaterThanEq :createAdjacentMask:r -4
    56 label *label13
    57 op shr *tmp22 :createAdjacentMask:result 1
    58 label *label8
 
    68 draw clear 0 0 0
    69 op sub :drawMask:r 7 1
    70 label *label17
-    * jump *label19 lessThan :drawMask:r 0
+   71 label *label30
    72 set :drawMask:c 0
    73 op mul *tmp46 :drawMask:r 10
    74 label *label20
-    * jump *label22 greaterThanEq :drawMask:c 7
+   75 label *label31
    76 op mul *tmp40 7 :drawMask:r
    77 op add *tmp41 *tmp40 :drawMask:c
    78 op shl *tmp42 1 *tmp41
 
    88 draw rect *tmp45 *tmp46 8 8
    89 label *label21
    90 op add :drawMask:c :drawMask:c 1
-    * jump *label20 always
+   91 jump *label31 lessThan :drawMask:c 7
    92 label *label22
    93 label *label18
    94 op sub :drawMask:r :drawMask:r 1
-    * jump *label17 always
+   95 jump *label30 greaterThanEq :drawMask:r 0
    96 label *label19
    97 drawflush display1
    98 label *label16
 
   108 set :createBlockMaskRow:result 0
   109 set :createBlockMaskRow:c 4
   110 label *label26
-    * jump *label28 lessThan :createBlockMaskRow:c -4
+  111 label *label32
   112 op shl *tmp51 :createBlockMaskRow:result 1
   113 op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
   114 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   115 op or :createBlockMaskRow:result *tmp51 *tmp53
   116 label *label27
   117 op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
-    * jump *label26 always
+  118 jump *label32 greaterThanEq :createBlockMaskRow:c -4
   119 label *label28
   120 set :createBlockMaskRow*retval :createBlockMaskRow:result
   121 jump *label25 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
    78 op shl *tmp42 1 *tmp41
    79 op and *tmp43 *tmp22 *tmp42
    80 jump *label23 equal *tmp43 false
-    * set *tmp44 %[red]
+   81 draw col %[red]
    82 jump *label24 always
    83 label *label23
-    * set *tmp44 %[green]
+   84 draw col %[green]
    85 label *label24
-    * draw col *tmp44
    86 op mul *tmp45 :drawMask:c 10
    87 draw rect *tmp45 *tmp46 8 8
    88 label *label21

Modifications by Unroll loop at test.mnd:9:5 (+39 instructions):
 
   105 end
   106 label *label2
   107 set :createBlockMaskRow:result 0
-    * set :createBlockMaskRow:c 4
-    * label *label26
-    * label *label32
-    * op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
-    * op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label27
-    * op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
-    * jump *label32 greaterThanEq :createBlockMaskRow:c -4
-    * label *label28
+  108 set :createBlockMaskRow:c 4
+  109 label *label33
+  110 label *label34
+  111 op shl *tmp51 :createBlockMaskRow:result 1
+  112 op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  113 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  114 op or :createBlockMaskRow:result *tmp51 *tmp53
+  115 label *label35
+  116 op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  117 label *label36
+  118 op shl *tmp51 :createBlockMaskRow:result 1
+  119 op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  120 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  121 op or :createBlockMaskRow:result *tmp51 *tmp53
+  122 label *label37
+  123 op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  124 label *label38
+  125 op shl *tmp51 :createBlockMaskRow:result 1
+  126 op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  127 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  128 op or :createBlockMaskRow:result *tmp51 *tmp53
+  129 label *label39
+  130 op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  131 label *label40
+  132 op shl *tmp51 :createBlockMaskRow:result 1
+  133 op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  134 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  135 op or :createBlockMaskRow:result *tmp51 *tmp53
+  136 label *label41
+  137 op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  138 label *label42
+  139 op shl *tmp51 :createBlockMaskRow:result 1
+  140 op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  141 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  142 op or :createBlockMaskRow:result *tmp51 *tmp53
+  143 label *label43
+  144 op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  145 label *label44
+  146 op shl *tmp51 :createBlockMaskRow:result 1
+  147 op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  148 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  149 op or :createBlockMaskRow:result *tmp51 *tmp53
+  150 label *label45
+  151 op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  152 label *label46
+  153 op shl *tmp51 :createBlockMaskRow:result 1
+  154 op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  155 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  156 op or :createBlockMaskRow:result *tmp51 *tmp53
+  157 label *label47
+  158 op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  159 label *label48
+  160 op shl *tmp51 :createBlockMaskRow:result 1
+  161 op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  162 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  163 op or :createBlockMaskRow:result *tmp51 *tmp53
+  164 label *label49
+  165 op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  166 label *label50
+  167 op shl *tmp51 :createBlockMaskRow:result 1
+  168 op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  169 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  170 op or :createBlockMaskRow:result *tmp51 *tmp53
+  171 label *label51
+  172 op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  173 label *label28
   174 set :createBlockMaskRow*retval :createBlockMaskRow:result
   175 jump *label25 always
   176 label *label25

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   108 set :createBlockMaskRow:c 4
   109 label *label33
   110 label *label34
-    * op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  111 op shl *tmp51 0 1
+  112 op add *tmp52 :createBlockMaskRow:x 4
   113 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
-    * op or :createBlockMaskRow:result *tmp51 *tmp53
+  114 op or :createBlockMaskRow:result 0 *tmp53
   115 label *label35
-    * op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  116 op sub :createBlockMaskRow:c 4 1
   117 label *label36
   118 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  119 op add *tmp52 :createBlockMaskRow:x 3
   120 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   121 op or :createBlockMaskRow:result *tmp51 *tmp53
   122 label *label37
-    * op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  123 op sub :createBlockMaskRow:c 3 1
   124 label *label38
   125 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  126 op add *tmp52 :createBlockMaskRow:x 2
   127 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   128 op or :createBlockMaskRow:result *tmp51 *tmp53
   129 label *label39
-    * op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  130 op sub :createBlockMaskRow:c 2 1
   131 label *label40
   132 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  133 op add *tmp52 :createBlockMaskRow:x 1
   134 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   135 op or :createBlockMaskRow:result *tmp51 *tmp53
   136 label *label41
-    * op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  137 op sub :createBlockMaskRow:c 1 1
   138 label *label42
   139 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  140 op add *tmp52 :createBlockMaskRow:x 0
   141 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   142 op or :createBlockMaskRow:result *tmp51 *tmp53
   143 label *label43
-    * op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  144 op sub :createBlockMaskRow:c 0 1
   145 label *label44
   146 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  147 op add *tmp52 :createBlockMaskRow:x -1
   148 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   149 op or :createBlockMaskRow:result *tmp51 *tmp53
   150 label *label45
-    * op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  151 op sub :createBlockMaskRow:c -1 1
   152 label *label46
   153 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  154 op add *tmp52 :createBlockMaskRow:x -2
   155 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   156 op or :createBlockMaskRow:result *tmp51 *tmp53
   157 label *label47
-    * op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  158 op sub :createBlockMaskRow:c -2 1
   159 label *label48
   160 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  161 op add *tmp52 :createBlockMaskRow:x -3
   162 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   163 op or :createBlockMaskRow:result *tmp51 *tmp53
   164 label *label49
-    * op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  165 op sub :createBlockMaskRow:c -3 1
   166 label *label50
   167 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x :createBlockMaskRow:c
+  168 op add *tmp52 :createBlockMaskRow:x -4
   169 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   170 op or :createBlockMaskRow:result *tmp51 *tmp53
   171 label *label51
-    * op sub :createBlockMaskRow:c :createBlockMaskRow:c 1
+  172 op sub :createBlockMaskRow:c -4 1
   173 label *label28
   174 set :createBlockMaskRow*retval :createBlockMaskRow:result
   175 jump *label25 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-12 instructions):
 
   104 printflush message1
   105 end
   106 label *label2
-    * set :createBlockMaskRow:result 0
-    * set :createBlockMaskRow:c 4
   107 label *label33
   108 label *label34
-    * op shl *tmp51 0 1
   109 op add *tmp52 :createBlockMaskRow:x 4
   110 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   111 op or :createBlockMaskRow:result 0 *tmp53
   112 label *label35
-    * op sub :createBlockMaskRow:c 4 1
   113 label *label36
   114 op shl *tmp51 :createBlockMaskRow:result 1
   115 op add *tmp52 :createBlockMaskRow:x 3
   116 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   117 op or :createBlockMaskRow:result *tmp51 *tmp53
   118 label *label37
-    * op sub :createBlockMaskRow:c 3 1
   119 label *label38
   120 op shl *tmp51 :createBlockMaskRow:result 1
   121 op add *tmp52 :createBlockMaskRow:x 2
   122 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   123 op or :createBlockMaskRow:result *tmp51 *tmp53
   124 label *label39
-    * op sub :createBlockMaskRow:c 2 1
   125 label *label40
   126 op shl *tmp51 :createBlockMaskRow:result 1
   127 op add *tmp52 :createBlockMaskRow:x 1
   128 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   129 op or :createBlockMaskRow:result *tmp51 *tmp53
   130 label *label41
-    * op sub :createBlockMaskRow:c 1 1
   131 label *label42
   132 op shl *tmp51 :createBlockMaskRow:result 1
   133 op add *tmp52 :createBlockMaskRow:x 0
   134 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   135 op or :createBlockMaskRow:result *tmp51 *tmp53
   136 label *label43
-    * op sub :createBlockMaskRow:c 0 1
   137 label *label44
   138 op shl *tmp51 :createBlockMaskRow:result 1
   139 op add *tmp52 :createBlockMaskRow:x -1
   140 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   141 op or :createBlockMaskRow:result *tmp51 *tmp53
   142 label *label45
-    * op sub :createBlockMaskRow:c -1 1
   143 label *label46
   144 op shl *tmp51 :createBlockMaskRow:result 1
   145 op add *tmp52 :createBlockMaskRow:x -2
   146 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   147 op or :createBlockMaskRow:result *tmp51 *tmp53
   148 label *label47
-    * op sub :createBlockMaskRow:c -2 1
   149 label *label48
   150 op shl *tmp51 :createBlockMaskRow:result 1
   151 op add *tmp52 :createBlockMaskRow:x -3
   152 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   153 op or :createBlockMaskRow:result *tmp51 *tmp53
   154 label *label49
-    * op sub :createBlockMaskRow:c -3 1
   155 label *label50
   156 op shl *tmp51 :createBlockMaskRow:result 1
   157 op add *tmp52 :createBlockMaskRow:x -4
   158 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
   159 op or :createBlockMaskRow:result *tmp51 *tmp53
   160 label *label51
-    * op sub :createBlockMaskRow:c -4 1
   161 label *label28
   162 set :createBlockMaskRow*retval :createBlockMaskRow:result
   163 jump *label25 always

Modifications by Unroll loop at test.mnd:47:9 (+65 instructions):
 
    69 op sub :drawMask:r 7 1
    70 label *label17
    71 label *label30
-    * set :drawMask:c 0
-    * op mul *tmp46 :drawMask:r 10
-    * label *label20
-    * label *label31
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 :drawMask:c
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
-    * jump *label23 equal *tmp43 false
-    * draw col %[red]
-    * jump *label24 always
-    * label *label23
-    * draw col %[green]
-    * label *label24
-    * op mul *tmp45 :drawMask:c 10
-    * draw rect *tmp45 *tmp46 8 8
-    * label *label21
-    * op add :drawMask:c :drawMask:c 1
-    * jump *label31 lessThan :drawMask:c 7
-    * label *label22
+   72 set :drawMask:c 0
+   73 op mul *tmp46 :drawMask:r 10
+   74 label *label52
+   75 label *label53
+   76 op mul *tmp40 7 :drawMask:r
+   77 op add *tmp41 *tmp40 :drawMask:c
+   78 op shl *tmp42 1 *tmp41
+   79 op and *tmp43 *tmp22 *tmp42
+   80 jump *label54 equal *tmp43 false
+   81 draw col %[red]
+   82 jump *label55 always
+   83 label *label54
+   84 draw col %[green]
+   85 label *label55
+   86 op mul *tmp45 :drawMask:c 10
+   87 draw rect *tmp45 *tmp46 8 8
+   88 label *label56
+   89 op add :drawMask:c :drawMask:c 1
+   90 label *label57
+   91 op mul *tmp40 7 :drawMask:r
+   92 op add *tmp41 *tmp40 :drawMask:c
+   93 op shl *tmp42 1 *tmp41
+   94 op and *tmp43 *tmp22 *tmp42
+   95 jump *label58 equal *tmp43 false
+   96 draw col %[red]
+   97 jump *label59 always
+   98 label *label58
+   99 draw col %[green]
+  100 label *label59
+  101 op mul *tmp45 :drawMask:c 10
+  102 draw rect *tmp45 *tmp46 8 8
+  103 label *label60
+  104 op add :drawMask:c :drawMask:c 1
+  105 label *label61
+  106 op mul *tmp40 7 :drawMask:r
+  107 op add *tmp41 *tmp40 :drawMask:c
+  108 op shl *tmp42 1 *tmp41
+  109 op and *tmp43 *tmp22 *tmp42
+  110 jump *label62 equal *tmp43 false
+  111 draw col %[red]
+  112 jump *label63 always
+  113 label *label62
+  114 draw col %[green]
+  115 label *label63
+  116 op mul *tmp45 :drawMask:c 10
+  117 draw rect *tmp45 *tmp46 8 8
+  118 label *label64
+  119 op add :drawMask:c :drawMask:c 1
+  120 label *label65
+  121 op mul *tmp40 7 :drawMask:r
+  122 op add *tmp41 *tmp40 :drawMask:c
+  123 op shl *tmp42 1 *tmp41
+  124 op and *tmp43 *tmp22 *tmp42
+  125 jump *label66 equal *tmp43 false
+  126 draw col %[red]
+  127 jump *label67 always
+  128 label *label66
+  129 draw col %[green]
+  130 label *label67
+  131 op mul *tmp45 :drawMask:c 10
+  132 draw rect *tmp45 *tmp46 8 8
+  133 label *label68
+  134 op add :drawMask:c :drawMask:c 1
+  135 label *label69
+  136 op mul *tmp40 7 :drawMask:r
+  137 op add *tmp41 *tmp40 :drawMask:c
+  138 op shl *tmp42 1 *tmp41
+  139 op and *tmp43 *tmp22 *tmp42
+  140 jump *label70 equal *tmp43 false
+  141 draw col %[red]
+  142 jump *label71 always
+  143 label *label70
+  144 draw col %[green]
+  145 label *label71
+  146 op mul *tmp45 :drawMask:c 10
+  147 draw rect *tmp45 *tmp46 8 8
+  148 label *label72
+  149 op add :drawMask:c :drawMask:c 1
+  150 label *label73
+  151 op mul *tmp40 7 :drawMask:r
+  152 op add *tmp41 *tmp40 :drawMask:c
+  153 op shl *tmp42 1 *tmp41
+  154 op and *tmp43 *tmp22 *tmp42
+  155 jump *label74 equal *tmp43 false
+  156 draw col %[red]
+  157 jump *label75 always
+  158 label *label74
+  159 draw col %[green]
+  160 label *label75
+  161 op mul *tmp45 :drawMask:c 10
+  162 draw rect *tmp45 *tmp46 8 8
+  163 label *label76
+  164 op add :drawMask:c :drawMask:c 1
+  165 label *label77
+  166 op mul *tmp40 7 :drawMask:r
+  167 op add *tmp41 *tmp40 :drawMask:c
+  168 op shl *tmp42 1 *tmp41
+  169 op and *tmp43 *tmp22 *tmp42
+  170 jump *label78 equal *tmp43 false
+  171 draw col %[red]
+  172 jump *label79 always
+  173 label *label78
+  174 draw col %[green]
+  175 label *label79
+  176 op mul *tmp45 :drawMask:c 10
+  177 draw rect *tmp45 *tmp46 8 8
+  178 label *label80
+  179 op add :drawMask:c :drawMask:c 1
+  180 label *label22
   181 label *label18
   182 op sub :drawMask:r :drawMask:r 1
   183 jump *label30 greaterThanEq :drawMask:r 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    74 label *label52
    75 label *label53
    76 op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 :drawMask:c
+   77 op add *tmp41 *tmp40 0
    78 op shl *tmp42 1 *tmp41
    79 op and *tmp43 *tmp22 *tmp42
    80 jump *label54 equal *tmp43 false
 
    83 label *label54
    84 draw col %[green]
    85 label *label55
-    * op mul *tmp45 :drawMask:c 10
-    * draw rect *tmp45 *tmp46 8 8
+   86 op mul *tmp45 0 10
+   87 draw rect 0 *tmp46 8 8
    88 label *label56
-    * op add :drawMask:c :drawMask:c 1
+   89 op add :drawMask:c 0 1
    90 label *label57
    91 op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 :drawMask:c
+   92 op add *tmp41 *tmp40 1
    93 op shl *tmp42 1 *tmp41
    94 op and *tmp43 *tmp22 *tmp42
    95 jump *label58 equal *tmp43 false
 
    98 label *label58
    99 draw col %[green]
   100 label *label59
-    * op mul *tmp45 :drawMask:c 10
-    * draw rect *tmp45 *tmp46 8 8
+  101 op mul *tmp45 1 10
+  102 draw rect 10 *tmp46 8 8
   103 label *label60
-    * op add :drawMask:c :drawMask:c 1
+  104 op add :drawMask:c 1 1
   105 label *label61
   106 op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 :drawMask:c
+  107 op add *tmp41 *tmp40 2
   108 op shl *tmp42 1 *tmp41
   109 op and *tmp43 *tmp22 *tmp42
   110 jump *label62 equal *tmp43 false
 
   113 label *label62
   114 draw col %[green]
   115 label *label63
-    * op mul *tmp45 :drawMask:c 10
-    * draw rect *tmp45 *tmp46 8 8
+  116 op mul *tmp45 2 10
+  117 draw rect 20 *tmp46 8 8
   118 label *label64
-    * op add :drawMask:c :drawMask:c 1
+  119 op add :drawMask:c 2 1
   120 label *label65
   121 op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 :drawMask:c
+  122 op add *tmp41 *tmp40 3
   123 op shl *tmp42 1 *tmp41
   124 op and *tmp43 *tmp22 *tmp42
   125 jump *label66 equal *tmp43 false
 
   128 label *label66
   129 draw col %[green]
   130 label *label67
-    * op mul *tmp45 :drawMask:c 10
-    * draw rect *tmp45 *tmp46 8 8
+  131 op mul *tmp45 3 10
+  132 draw rect 30 *tmp46 8 8
   133 label *label68
-    * op add :drawMask:c :drawMask:c 1
+  134 op add :drawMask:c 3 1
   135 label *label69
   136 op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 :drawMask:c
+  137 op add *tmp41 *tmp40 4
   138 op shl *tmp42 1 *tmp41
   139 op and *tmp43 *tmp22 *tmp42
   140 jump *label70 equal *tmp43 false
 
   143 label *label70
   144 draw col %[green]
   145 label *label71
-    * op mul *tmp45 :drawMask:c 10
-    * draw rect *tmp45 *tmp46 8 8
+  146 op mul *tmp45 4 10
+  147 draw rect 40 *tmp46 8 8
   148 label *label72
-    * op add :drawMask:c :drawMask:c 1
+  149 op add :drawMask:c 4 1
   150 label *label73
   151 op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 :drawMask:c
+  152 op add *tmp41 *tmp40 5
   153 op shl *tmp42 1 *tmp41
   154 op and *tmp43 *tmp22 *tmp42
   155 jump *label74 equal *tmp43 false
 
   158 label *label74
   159 draw col %[green]
   160 label *label75
-    * op mul *tmp45 :drawMask:c 10
-    * draw rect *tmp45 *tmp46 8 8
+  161 op mul *tmp45 5 10
+  162 draw rect 50 *tmp46 8 8
   163 label *label76
-    * op add :drawMask:c :drawMask:c 1
+  164 op add :drawMask:c 5 1
   165 label *label77
   166 op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 :drawMask:c
+  167 op add *tmp41 *tmp40 6
   168 op shl *tmp42 1 *tmp41
   169 op and *tmp43 *tmp22 *tmp42
   170 jump *label78 equal *tmp43 false
 
   173 label *label78
   174 draw col %[green]
   175 label *label79
-    * op mul *tmp45 :drawMask:c 10
-    * draw rect *tmp45 *tmp46 8 8
+  176 op mul *tmp45 6 10
+  177 draw rect 60 *tmp46 8 8
   178 label *label80
-    * op add :drawMask:c :drawMask:c 1
+  179 op add :drawMask:c 6 1
   180 label *label22
   181 label *label18
   182 op sub :drawMask:r :drawMask:r 1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-15 instructions):
 
    69 op sub :drawMask:r 7 1
    70 label *label17
    71 label *label30
-    * set :drawMask:c 0
    72 op mul *tmp46 :drawMask:r 10
    73 label *label52
    74 label *label53
 
    82 label *label54
    83 draw col %[green]
    84 label *label55
-    * op mul *tmp45 0 10
    85 draw rect 0 *tmp46 8 8
    86 label *label56
-    * op add :drawMask:c 0 1
    87 label *label57
    88 op mul *tmp40 7 :drawMask:r
    89 op add *tmp41 *tmp40 1
 
    95 label *label58
    96 draw col %[green]
    97 label *label59
-    * op mul *tmp45 1 10
    98 draw rect 10 *tmp46 8 8
    99 label *label60
-    * op add :drawMask:c 1 1
   100 label *label61
   101 op mul *tmp40 7 :drawMask:r
   102 op add *tmp41 *tmp40 2
 
   108 label *label62
   109 draw col %[green]
   110 label *label63
-    * op mul *tmp45 2 10
   111 draw rect 20 *tmp46 8 8
   112 label *label64
-    * op add :drawMask:c 2 1
   113 label *label65
   114 op mul *tmp40 7 :drawMask:r
   115 op add *tmp41 *tmp40 3
 
   121 label *label66
   122 draw col %[green]
   123 label *label67
-    * op mul *tmp45 3 10
   124 draw rect 30 *tmp46 8 8
   125 label *label68
-    * op add :drawMask:c 3 1
   126 label *label69
   127 op mul *tmp40 7 :drawMask:r
   128 op add *tmp41 *tmp40 4
 
   134 label *label70
   135 draw col %[green]
   136 label *label71
-    * op mul *tmp45 4 10
   137 draw rect 40 *tmp46 8 8
   138 label *label72
-    * op add :drawMask:c 4 1
   139 label *label73
   140 op mul *tmp40 7 :drawMask:r
   141 op add *tmp41 *tmp40 5
 
   147 label *label74
   148 draw col %[green]
   149 label *label75
-    * op mul *tmp45 5 10
   150 draw rect 50 *tmp46 8 8
   151 label *label76
-    * op add :drawMask:c 5 1
   152 label *label77
   153 op mul *tmp40 7 :drawMask:r
   154 op add *tmp41 *tmp40 6
 
   160 label *label78
   161 draw col %[green]
   162 label *label79
-    * op mul *tmp45 6 10
   163 draw rect 60 *tmp46 8 8
   164 label *label80
-    * op add :drawMask:c 6 1
   165 label *label22
   166 label *label18
   167 op sub :drawMask:r :drawMask:r 1

Modifications by Unroll loop at test.mnd:23:5 (+89 instructions):
 
    31 call *label2 *invalid :createBlockMaskRow*retval (m:*label10) (h:*label10)
    32 label *label10
    33 set :createAdjacentMask:row1 :createBlockMaskRow*retval
-    * set :createAdjacentMask:r 2
-    * set :createBlockMaskRow:x x
-    * setaddr :createBlockMaskRow*retaddr *label14 (h:*label14)
-    * label *label11
-    * label *label29
-    * op add *tmp27 y :createAdjacentMask:r
-    * set :createBlockMaskRow:y *tmp27
-    * call *label2 *invalid :createBlockMaskRow*retval (m:*label14) (h:*label14)
-    * label *label14
-    * op shl *tmp29 :createAdjacentMask:row1 1
-    * op or *tmp30 :createAdjacentMask:row2 *tmp29
-    * op shr *tmp31 :createAdjacentMask:row1 1
-    * op or *tmp32 *tmp30 *tmp31
-    * op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
-    * op shl *tmp34 :createAdjacentMask:result 7
-    * op and *tmp35 :createAdjacentMask:mask 0xFE
-    * op or :createAdjacentMask:result *tmp34 *tmp35
-    * set :createAdjacentMask:row2 :createAdjacentMask:row1
-    * set :createAdjacentMask:row1 :createBlockMaskRow*retval
-    * label *label12
-    * op sub :createAdjacentMask:r :createAdjacentMask:r 1
-    * jump *label29 greaterThanEq :createAdjacentMask:r -4
-    * label *label13
+   34 set :createAdjacentMask:r 2
+   35 set :createBlockMaskRow:x x
+   36 label *label81
+   37 label *label82
+   38 op add *tmp27 y :createAdjacentMask:r
+   39 set :createBlockMaskRow:y *tmp27
+   40 setaddr :createBlockMaskRow*retaddr *label83
+   41 call *label2 *invalid :createBlockMaskRow*retval (m:*label83) (h:*label83)
+   42 label *label83
+   43 op shl *tmp29 :createAdjacentMask:row1 1
+   44 op or *tmp30 :createAdjacentMask:row2 *tmp29
+   45 op shr *tmp31 :createAdjacentMask:row1 1
+   46 op or *tmp32 *tmp30 *tmp31
+   47 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
+   48 op shl *tmp34 :createAdjacentMask:result 7
+   49 op and *tmp35 :createAdjacentMask:mask 0xFE
+   50 op or :createAdjacentMask:result *tmp34 *tmp35
+   51 set :createAdjacentMask:row2 :createAdjacentMask:row1
+   52 set :createAdjacentMask:row1 :createBlockMaskRow*retval
+   53 label *label84
+   54 op sub :createAdjacentMask:r :createAdjacentMask:r 1
+   55 label *label85
+   56 op add *tmp27 y :createAdjacentMask:r
+   57 set :createBlockMaskRow:y *tmp27
+   58 setaddr :createBlockMaskRow*retaddr *label86
+   59 call *label2 *invalid :createBlockMaskRow*retval (m:*label86) (h:*label86)
+   60 label *label86
+   61 op shl *tmp29 :createAdjacentMask:row1 1
+   62 op or *tmp30 :createAdjacentMask:row2 *tmp29
+   63 op shr *tmp31 :createAdjacentMask:row1 1
+   64 op or *tmp32 *tmp30 *tmp31
+   65 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
+   66 op shl *tmp34 :createAdjacentMask:result 7
+   67 op and *tmp35 :createAdjacentMask:mask 0xFE
+   68 op or :createAdjacentMask:result *tmp34 *tmp35
+   69 set :createAdjacentMask:row2 :createAdjacentMask:row1
+   70 set :createAdjacentMask:row1 :createBlockMaskRow*retval
+   71 label *label87
+   72 op sub :createAdjacentMask:r :createAdjacentMask:r 1
+   73 label *label88
+   74 op add *tmp27 y :createAdjacentMask:r
+   75 set :createBlockMaskRow:y *tmp27
+   76 setaddr :createBlockMaskRow*retaddr *label89
+   77 call *label2 *invalid :createBlockMaskRow*retval (m:*label89) (h:*label89)
+   78 label *label89
+   79 op shl *tmp29 :createAdjacentMask:row1 1
+   80 op or *tmp30 :createAdjacentMask:row2 *tmp29
+   81 op shr *tmp31 :createAdjacentMask:row1 1
+   82 op or *tmp32 *tmp30 *tmp31
+   83 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
+   84 op shl *tmp34 :createAdjacentMask:result 7
+   85 op and *tmp35 :createAdjacentMask:mask 0xFE
+   86 op or :createAdjacentMask:result *tmp34 *tmp35
+   87 set :createAdjacentMask:row2 :createAdjacentMask:row1
+   88 set :createAdjacentMask:row1 :createBlockMaskRow*retval
+   89 label *label90
+   90 op sub :createAdjacentMask:r :createAdjacentMask:r 1
+   91 label *label91
+   92 op add *tmp27 y :createAdjacentMask:r
+   93 set :createBlockMaskRow:y *tmp27
+   94 setaddr :createBlockMaskRow*retaddr *label92
+   95 call *label2 *invalid :createBlockMaskRow*retval (m:*label92) (h:*label92)
+   96 label *label92
+   97 op shl *tmp29 :createAdjacentMask:row1 1
+   98 op or *tmp30 :createAdjacentMask:row2 *tmp29
+   99 op shr *tmp31 :createAdjacentMask:row1 1
+  100 op or *tmp32 *tmp30 *tmp31
+  101 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
+  102 op shl *tmp34 :createAdjacentMask:result 7
+  103 op and *tmp35 :createAdjacentMask:mask 0xFE
+  104 op or :createAdjacentMask:result *tmp34 *tmp35
+  105 set :createAdjacentMask:row2 :createAdjacentMask:row1
+  106 set :createAdjacentMask:row1 :createBlockMaskRow*retval
+  107 label *label93
+  108 op sub :createAdjacentMask:r :createAdjacentMask:r 1
+  109 label *label94
+  110 op add *tmp27 y :createAdjacentMask:r
+  111 set :createBlockMaskRow:y *tmp27
+  112 setaddr :createBlockMaskRow*retaddr *label95
+  113 call *label2 *invalid :createBlockMaskRow*retval (m:*label95) (h:*label95)
+  114 label *label95
+  115 op shl *tmp29 :createAdjacentMask:row1 1
+  116 op or *tmp30 :createAdjacentMask:row2 *tmp29
+  117 op shr *tmp31 :createAdjacentMask:row1 1
+  118 op or *tmp32 *tmp30 *tmp31
+  119 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
+  120 op shl *tmp34 :createAdjacentMask:result 7
+  121 op and *tmp35 :createAdjacentMask:mask 0xFE
+  122 op or :createAdjacentMask:result *tmp34 *tmp35
+  123 set :createAdjacentMask:row2 :createAdjacentMask:row1
+  124 set :createAdjacentMask:row1 :createBlockMaskRow*retval
+  125 label *label96
+  126 op sub :createAdjacentMask:r :createAdjacentMask:r 1
+  127 label *label97
+  128 op add *tmp27 y :createAdjacentMask:r
+  129 set :createBlockMaskRow:y *tmp27
+  130 setaddr :createBlockMaskRow*retaddr *label98
+  131 call *label2 *invalid :createBlockMaskRow*retval (m:*label98) (h:*label98)
+  132 label *label98
+  133 op shl *tmp29 :createAdjacentMask:row1 1
+  134 op or *tmp30 :createAdjacentMask:row2 *tmp29
+  135 op shr *tmp31 :createAdjacentMask:row1 1
+  136 op or *tmp32 *tmp30 *tmp31
+  137 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
+  138 op shl *tmp34 :createAdjacentMask:result 7
+  139 op and *tmp35 :createAdjacentMask:mask 0xFE
+  140 op or :createAdjacentMask:result *tmp34 *tmp35
+  141 set :createAdjacentMask:row2 :createAdjacentMask:row1
+  142 set :createAdjacentMask:row1 :createBlockMaskRow*retval
+  143 label *label99
+  144 op sub :createAdjacentMask:r :createAdjacentMask:r 1
+  145 label *label100
+  146 op add *tmp27 y :createAdjacentMask:r
+  147 set :createBlockMaskRow:y *tmp27
+  148 setaddr :createBlockMaskRow*retaddr *label101
+  149 call *label2 *invalid :createBlockMaskRow*retval (m:*label101) (h:*label101)
+  150 label *label101
+  151 op shl *tmp29 :createAdjacentMask:row1 1
+  152 op or *tmp30 :createAdjacentMask:row2 *tmp29
+  153 op shr *tmp31 :createAdjacentMask:row1 1
+  154 op or *tmp32 *tmp30 *tmp31
+  155 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
+  156 op shl *tmp34 :createAdjacentMask:result 7
+  157 op and *tmp35 :createAdjacentMask:mask 0xFE
+  158 op or :createAdjacentMask:result *tmp34 *tmp35
+  159 set :createAdjacentMask:row2 :createAdjacentMask:row1
+  160 set :createAdjacentMask:row1 :createBlockMaskRow*retval
+  161 label *label102
+  162 op sub :createAdjacentMask:r :createAdjacentMask:r 1
+  163 label *label13
   164 op shr *tmp22 :createAdjacentMask:result 1
   165 label *label8
   166 label *label15

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-2 instructions):
 
    35 set :createBlockMaskRow:x x
    36 label *label81
    37 label *label82
-    * op add *tmp27 y :createAdjacentMask:r
+   38 op add *tmp27 y 2
    39 set :createBlockMaskRow:y *tmp27
    40 setaddr :createBlockMaskRow*retaddr *label83
    41 call *label2 *invalid :createBlockMaskRow*retval (m:*label83) (h:*label83)
 
    45 op shr *tmp31 :createAdjacentMask:row1 1
    46 op or *tmp32 *tmp30 *tmp31
    47 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
-    * op shl *tmp34 :createAdjacentMask:result 7
+   48 op shl *tmp34 0 7
    49 op and *tmp35 :createAdjacentMask:mask 0xFE
-    * op or :createAdjacentMask:result *tmp34 *tmp35
+   50 op or :createAdjacentMask:result 0 *tmp35
    51 set :createAdjacentMask:row2 :createAdjacentMask:row1
    52 set :createAdjacentMask:row1 :createBlockMaskRow*retval
    53 label *label84
-    * op sub :createAdjacentMask:r :createAdjacentMask:r 1
+   54 op sub :createAdjacentMask:r 2 1
    55 label *label85
-    * op add *tmp27 y :createAdjacentMask:r
+   56 op add *tmp27 y 1
    57 set :createBlockMaskRow:y *tmp27
    58 setaddr :createBlockMaskRow*retaddr *label86
    59 call *label2 *invalid :createBlockMaskRow*retval (m:*label86) (h:*label86)
 
    69 set :createAdjacentMask:row2 :createAdjacentMask:row1
    70 set :createAdjacentMask:row1 :createBlockMaskRow*retval
    71 label *label87
-    * op sub :createAdjacentMask:r :createAdjacentMask:r 1
+   72 op sub :createAdjacentMask:r 1 1
    73 label *label88
-    * op add *tmp27 y :createAdjacentMask:r
+   74 op add *tmp27 y 0
    75 set :createBlockMaskRow:y *tmp27
    76 setaddr :createBlockMaskRow*retaddr *label89
    77 call *label2 *invalid :createBlockMaskRow*retval (m:*label89) (h:*label89)
 
    87 set :createAdjacentMask:row2 :createAdjacentMask:row1
    88 set :createAdjacentMask:row1 :createBlockMaskRow*retval
    89 label *label90
-    * op sub :createAdjacentMask:r :createAdjacentMask:r 1
+   90 op sub :createAdjacentMask:r 0 1
    91 label *label91
-    * op add *tmp27 y :createAdjacentMask:r
+   92 op add *tmp27 y -1
    93 set :createBlockMaskRow:y *tmp27
    94 setaddr :createBlockMaskRow*retaddr *label92
    95 call *label2 *invalid :createBlockMaskRow*retval (m:*label92) (h:*label92)
 
   105 set :createAdjacentMask:row2 :createAdjacentMask:row1
   106 set :createAdjacentMask:row1 :createBlockMaskRow*retval
   107 label *label93
-    * op sub :createAdjacentMask:r :createAdjacentMask:r 1
+  108 op sub :createAdjacentMask:r -1 1
   109 label *label94
-    * op add *tmp27 y :createAdjacentMask:r
+  110 op add *tmp27 y -2
   111 set :createBlockMaskRow:y *tmp27
   112 setaddr :createBlockMaskRow*retaddr *label95
   113 call *label2 *invalid :createBlockMaskRow*retval (m:*label95) (h:*label95)
 
   123 set :createAdjacentMask:row2 :createAdjacentMask:row1
   124 set :createAdjacentMask:row1 :createBlockMaskRow*retval
   125 label *label96
-    * op sub :createAdjacentMask:r :createAdjacentMask:r 1
+  126 op sub :createAdjacentMask:r -2 1
   127 label *label97
-    * op add *tmp27 y :createAdjacentMask:r
+  128 op add *tmp27 y -3
   129 set :createBlockMaskRow:y *tmp27
   130 setaddr :createBlockMaskRow*retaddr *label98
   131 call *label2 *invalid :createBlockMaskRow*retval (m:*label98) (h:*label98)
 
   141 set :createAdjacentMask:row2 :createAdjacentMask:row1
   142 set :createAdjacentMask:row1 :createBlockMaskRow*retval
   143 label *label99
-    * op sub :createAdjacentMask:r :createAdjacentMask:r 1
+  144 op sub :createAdjacentMask:r -3 1
   145 label *label100
-    * op add *tmp27 y :createAdjacentMask:r
+  146 op add *tmp27 y -4
   147 set :createBlockMaskRow:y *tmp27
   148 setaddr :createBlockMaskRow*retaddr *label101
   149 call *label2 *invalid :createBlockMaskRow*retval (m:*label101) (h:*label101)
 
   156 op shl *tmp34 :createAdjacentMask:result 7
   157 op and *tmp35 :createAdjacentMask:mask 0xFE
   158 op or :createAdjacentMask:result *tmp34 *tmp35
-    * set :createAdjacentMask:row2 :createAdjacentMask:row1
-    * set :createAdjacentMask:row1 :createBlockMaskRow*retval
   159 label *label102
-    * op sub :createAdjacentMask:r :createAdjacentMask:r 1
+  160 op sub :createAdjacentMask:r -4 1
   161 label *label13
   162 op shr *tmp22 :createAdjacentMask:result 1
   163 label *label8

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-10 instructions):
 
    16 write y processor1 ":createTerrainMask:y"
    17 write false processor1 ":createTerrainMask*finished"
    18 write 1 processor1 "@counter"
-    * set :createAdjacentMask:result 0
    19 op add *tmp23 y 4
    20 set :createBlockMaskRow:x x
    21 set :createBlockMaskRow:y *tmp23
 
    30 call *label2 *invalid :createBlockMaskRow*retval (m:*label10) (h:*label10)
    31 label *label10
    32 set :createAdjacentMask:row1 :createBlockMaskRow*retval
-    * set :createAdjacentMask:r 2
    33 set :createBlockMaskRow:x x
    34 label *label81
    35 label *label82
 
    43 op shr *tmp31 :createAdjacentMask:row1 1
    44 op or *tmp32 *tmp30 *tmp31
    45 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
-    * op shl *tmp34 0 7
    46 op and *tmp35 :createAdjacentMask:mask 0xFE
    47 op or :createAdjacentMask:result 0 *tmp35
    48 set :createAdjacentMask:row2 :createAdjacentMask:row1
    49 set :createAdjacentMask:row1 :createBlockMaskRow*retval
    50 label *label84
-    * op sub :createAdjacentMask:r 2 1
    51 label *label85
    52 op add *tmp27 y 1
    53 set :createBlockMaskRow:y *tmp27
 
    65 set :createAdjacentMask:row2 :createAdjacentMask:row1
    66 set :createAdjacentMask:row1 :createBlockMaskRow*retval
    67 label *label87
-    * op sub :createAdjacentMask:r 1 1
    68 label *label88
    69 op add *tmp27 y 0
    70 set :createBlockMaskRow:y *tmp27
 
    82 set :createAdjacentMask:row2 :createAdjacentMask:row1
    83 set :createAdjacentMask:row1 :createBlockMaskRow*retval
    84 label *label90
-    * op sub :createAdjacentMask:r 0 1
    85 label *label91
    86 op add *tmp27 y -1
    87 set :createBlockMaskRow:y *tmp27
 
    99 set :createAdjacentMask:row2 :createAdjacentMask:row1
   100 set :createAdjacentMask:row1 :createBlockMaskRow*retval
   101 label *label93
-    * op sub :createAdjacentMask:r -1 1
   102 label *label94
   103 op add *tmp27 y -2
   104 set :createBlockMaskRow:y *tmp27
 
   116 set :createAdjacentMask:row2 :createAdjacentMask:row1
   117 set :createAdjacentMask:row1 :createBlockMaskRow*retval
   118 label *label96
-    * op sub :createAdjacentMask:r -2 1
   119 label *label97
   120 op add *tmp27 y -3
   121 set :createBlockMaskRow:y *tmp27
 
   133 set :createAdjacentMask:row2 :createAdjacentMask:row1
   134 set :createAdjacentMask:row1 :createBlockMaskRow*retval
   135 label *label99
-    * op sub :createAdjacentMask:r -3 1
   136 label *label100
   137 op add *tmp27 y -4
   138 set :createBlockMaskRow:y *tmp27
 
   148 op and *tmp35 :createAdjacentMask:mask 0xFE
   149 op or :createAdjacentMask:result *tmp34 *tmp35
   150 label *label102
-    * op sub :createAdjacentMask:r -4 1
   151 label *label13
   152 op shr *tmp22 :createAdjacentMask:result 1
   153 label *label8

Modifications by Unroll loop at test.mnd:46:5 (+389 instructions):
 
   161 draw reset
   162 draw translate 6 6
   163 draw clear 0 0 0
-    * op sub :drawMask:r 7 1
-    * label *label17
-    * label *label30
-    * op mul *tmp46 :drawMask:r 10
-    * label *label52
-    * label *label53
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 0
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
-    * jump *label54 equal *tmp43 false
-    * draw col %[red]
-    * jump *label55 always
-    * label *label54
-    * draw col %[green]
-    * label *label55
-    * draw rect 0 *tmp46 8 8
-    * label *label56
-    * label *label57
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 1
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
-    * jump *label58 equal *tmp43 false
-    * draw col %[red]
-    * jump *label59 always
-    * label *label58
-    * draw col %[green]
-    * label *label59
-    * draw rect 10 *tmp46 8 8
-    * label *label60
-    * label *label61
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 2
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
-    * jump *label62 equal *tmp43 false
-    * draw col %[red]
-    * jump *label63 always
-    * label *label62
-    * draw col %[green]
-    * label *label63
-    * draw rect 20 *tmp46 8 8
-    * label *label64
-    * label *label65
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 3
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
-    * jump *label66 equal *tmp43 false
-    * draw col %[red]
-    * jump *label67 always
-    * label *label66
-    * draw col %[green]
-    * label *label67
-    * draw rect 30 *tmp46 8 8
-    * label *label68
-    * label *label69
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 4
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
-    * jump *label70 equal *tmp43 false
-    * draw col %[red]
-    * jump *label71 always
-    * label *label70
-    * draw col %[green]
-    * label *label71
-    * draw rect 40 *tmp46 8 8
-    * label *label72
-    * label *label73
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 5
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
-    * jump *label74 equal *tmp43 false
-    * draw col %[red]
-    * jump *label75 always
-    * label *label74
-    * draw col %[green]
-    * label *label75
-    * draw rect 50 *tmp46 8 8
-    * label *label76
-    * label *label77
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 6
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
-    * jump *label78 equal *tmp43 false
-    * draw col %[red]
-    * jump *label79 always
-    * label *label78
-    * draw col %[green]
-    * label *label79
-    * draw rect 60 *tmp46 8 8
-    * label *label80
-    * label *label22
-    * label *label18
-    * op sub :drawMask:r :drawMask:r 1
-    * jump *label30 greaterThanEq :drawMask:r 0
-    * label *label19
+  164 op sub :drawMask:r 7 1
+  165 label *label103
+  166 label *label104
+  167 op mul *tmp46 :drawMask:r 10
+  168 label *label105
+  169 label *label106
+  170 op mul *tmp40 7 :drawMask:r
+  171 op add *tmp41 *tmp40 0
+  172 op shl *tmp42 1 *tmp41
+  173 op and *tmp43 *tmp22 *tmp42
+  174 jump *label107 equal *tmp43 false
+  175 draw col %[red]
+  176 jump *label108 always
+  177 label *label107
+  178 draw col %[green]
+  179 label *label108
+  180 draw rect 0 *tmp46 8 8
+  181 label *label109
+  182 label *label110
+  183 op mul *tmp40 7 :drawMask:r
+  184 op add *tmp41 *tmp40 1
+  185 op shl *tmp42 1 *tmp41
+  186 op and *tmp43 *tmp22 *tmp42
+  187 jump *label111 equal *tmp43 false
+  188 draw col %[red]
+  189 jump *label112 always
+  190 label *label111
+  191 draw col %[green]
+  192 label *label112
+  193 draw rect 10 *tmp46 8 8
+  194 label *label113
+  195 label *label114
+  196 op mul *tmp40 7 :drawMask:r
+  197 op add *tmp41 *tmp40 2
+  198 op shl *tmp42 1 *tmp41
+  199 op and *tmp43 *tmp22 *tmp42
+  200 jump *label115 equal *tmp43 false
+  201 draw col %[red]
+  202 jump *label116 always
+  203 label *label115
+  204 draw col %[green]
+  205 label *label116
+  206 draw rect 20 *tmp46 8 8
+  207 label *label117
+  208 label *label118
+  209 op mul *tmp40 7 :drawMask:r
+  210 op add *tmp41 *tmp40 3
+  211 op shl *tmp42 1 *tmp41
+  212 op and *tmp43 *tmp22 *tmp42
+  213 jump *label119 equal *tmp43 false
+  214 draw col %[red]
+  215 jump *label120 always
+  216 label *label119
+  217 draw col %[green]
+  218 label *label120
+  219 draw rect 30 *tmp46 8 8
+  220 label *label121
+  221 label *label122
+  222 op mul *tmp40 7 :drawMask:r
+  223 op add *tmp41 *tmp40 4
+  224 op shl *tmp42 1 *tmp41
+  225 op and *tmp43 *tmp22 *tmp42
+  226 jump *label123 equal *tmp43 false
+  227 draw col %[red]
+  228 jump *label124 always
+  229 label *label123
+  230 draw col %[green]
+  231 label *label124
+  232 draw rect 40 *tmp46 8 8
+  233 label *label125
+  234 label *label126
+  235 op mul *tmp40 7 :drawMask:r
+  236 op add *tmp41 *tmp40 5
+  237 op shl *tmp42 1 *tmp41
+  238 op and *tmp43 *tmp22 *tmp42
+  239 jump *label127 equal *tmp43 false
+  240 draw col %[red]
+  241 jump *label128 always
+  242 label *label127
+  243 draw col %[green]
+  244 label *label128
+  245 draw rect 50 *tmp46 8 8
+  246 label *label129
+  247 label *label130
+  248 op mul *tmp40 7 :drawMask:r
+  249 op add *tmp41 *tmp40 6
+  250 op shl *tmp42 1 *tmp41
+  251 op and *tmp43 *tmp22 *tmp42
+  252 jump *label131 equal *tmp43 false
+  253 draw col %[red]
+  254 jump *label132 always
+  255 label *label131
+  256 draw col %[green]
+  257 label *label132
+  258 draw rect 60 *tmp46 8 8
+  259 label *label133
+  260 label *label134
+  261 label *label135
+  262 op sub :drawMask:r :drawMask:r 1
+  263 label *label136
+  264 op mul *tmp46 :drawMask:r 10
+  265 label *label137
+  266 label *label138
+  267 op mul *tmp40 7 :drawMask:r
+  268 op add *tmp41 *tmp40 0
+  269 op shl *tmp42 1 *tmp41
+  270 op and *tmp43 *tmp22 *tmp42
+  271 jump *label139 equal *tmp43 false
+  272 draw col %[red]
+  273 jump *label140 always
+  274 label *label139
+  275 draw col %[green]
+  276 label *label140
+  277 draw rect 0 *tmp46 8 8
+  278 label *label141
+  279 label *label142
+  280 op mul *tmp40 7 :drawMask:r
+  281 op add *tmp41 *tmp40 1
+  282 op shl *tmp42 1 *tmp41
+  283 op and *tmp43 *tmp22 *tmp42
+  284 jump *label143 equal *tmp43 false
+  285 draw col %[red]
+  286 jump *label144 always
+  287 label *label143
+  288 draw col %[green]
+  289 label *label144
+  290 draw rect 10 *tmp46 8 8
+  291 label *label145
+  292 label *label146
+  293 op mul *tmp40 7 :drawMask:r
+  294 op add *tmp41 *tmp40 2
+  295 op shl *tmp42 1 *tmp41
+  296 op and *tmp43 *tmp22 *tmp42
+  297 jump *label147 equal *tmp43 false
+  298 draw col %[red]
+  299 jump *label148 always
+  300 label *label147
+  301 draw col %[green]
+  302 label *label148
+  303 draw rect 20 *tmp46 8 8
+  304 label *label149
+  305 label *label150
+  306 op mul *tmp40 7 :drawMask:r
+  307 op add *tmp41 *tmp40 3
+  308 op shl *tmp42 1 *tmp41
+  309 op and *tmp43 *tmp22 *tmp42
+  310 jump *label151 equal *tmp43 false
+  311 draw col %[red]
+  312 jump *label152 always
+  313 label *label151
+  314 draw col %[green]
+  315 label *label152
+  316 draw rect 30 *tmp46 8 8
+  317 label *label153
+  318 label *label154
+  319 op mul *tmp40 7 :drawMask:r
+  320 op add *tmp41 *tmp40 4
+  321 op shl *tmp42 1 *tmp41
+  322 op and *tmp43 *tmp22 *tmp42
+  323 jump *label155 equal *tmp43 false
+  324 draw col %[red]
+  325 jump *label156 always
+  326 label *label155
+  327 draw col %[green]
+  328 label *label156
+  329 draw rect 40 *tmp46 8 8
+  330 label *label157
+  331 label *label158
+  332 op mul *tmp40 7 :drawMask:r
+  333 op add *tmp41 *tmp40 5
+  334 op shl *tmp42 1 *tmp41
+  335 op and *tmp43 *tmp22 *tmp42
+  336 jump *label159 equal *tmp43 false
+  337 draw col %[red]
+  338 jump *label160 always
+  339 label *label159
+  340 draw col %[green]
+  341 label *label160
+  342 draw rect 50 *tmp46 8 8
+  343 label *label161
+  344 label *label162
+  345 op mul *tmp40 7 :drawMask:r
+  346 op add *tmp41 *tmp40 6
+  347 op shl *tmp42 1 *tmp41
+  348 op and *tmp43 *tmp22 *tmp42
+  349 jump *label163 equal *tmp43 false
+  350 draw col %[red]
+  351 jump *label164 always
+  352 label *label163
+  353 draw col %[green]
+  354 label *label164
+  355 draw rect 60 *tmp46 8 8
+  356 label *label165
+  357 label *label166
+  358 label *label167
+  359 op sub :drawMask:r :drawMask:r 1
+  360 label *label168
+  361 op mul *tmp46 :drawMask:r 10
+  362 label *label169
+  363 label *label170
+  364 op mul *tmp40 7 :drawMask:r
+  365 op add *tmp41 *tmp40 0
+  366 op shl *tmp42 1 *tmp41
+  367 op and *tmp43 *tmp22 *tmp42
+  368 jump *label171 equal *tmp43 false
+  369 draw col %[red]
+  370 jump *label172 always
+  371 label *label171
+  372 draw col %[green]
+  373 label *label172
+  374 draw rect 0 *tmp46 8 8
+  375 label *label173
+  376 label *label174
+  377 op mul *tmp40 7 :drawMask:r
+  378 op add *tmp41 *tmp40 1
+  379 op shl *tmp42 1 *tmp41
+  380 op and *tmp43 *tmp22 *tmp42
+  381 jump *label175 equal *tmp43 false
+  382 draw col %[red]
+  383 jump *label176 always
+  384 label *label175
+  385 draw col %[green]
+  386 label *label176
+  387 draw rect 10 *tmp46 8 8
+  388 label *label177
+  389 label *label178
+  390 op mul *tmp40 7 :drawMask:r
+  391 op add *tmp41 *tmp40 2
+  392 op shl *tmp42 1 *tmp41
+  393 op and *tmp43 *tmp22 *tmp42
+  394 jump *label179 equal *tmp43 false
+  395 draw col %[red]
+  396 jump *label180 always
+  397 label *label179
+  398 draw col %[green]
+  399 label *label180
+  400 draw rect 20 *tmp46 8 8
+  401 label *label181
+  402 label *label182
+  403 op mul *tmp40 7 :drawMask:r
+  404 op add *tmp41 *tmp40 3
+  405 op shl *tmp42 1 *tmp41
+  406 op and *tmp43 *tmp22 *tmp42
+  407 jump *label183 equal *tmp43 false
+  408 draw col %[red]
+  409 jump *label184 always
+  410 label *label183
+  411 draw col %[green]
+  412 label *label184
+  413 draw rect 30 *tmp46 8 8
+  414 label *label185
+  415 label *label186
+  416 op mul *tmp40 7 :drawMask:r
+  417 op add *tmp41 *tmp40 4
+  418 op shl *tmp42 1 *tmp41
+  419 op and *tmp43 *tmp22 *tmp42
+  420 jump *label187 equal *tmp43 false
+  421 draw col %[red]
+  422 jump *label188 always
+  423 label *label187
+  424 draw col %[green]
+  425 label *label188
+  426 draw rect 40 *tmp46 8 8
+  427 label *label189
+  428 label *label190
+  429 op mul *tmp40 7 :drawMask:r
+  430 op add *tmp41 *tmp40 5
+  431 op shl *tmp42 1 *tmp41
+  432 op and *tmp43 *tmp22 *tmp42
+  433 jump *label191 equal *tmp43 false
+  434 draw col %[red]
+  435 jump *label192 always
+  436 label *label191
+  437 draw col %[green]
+  438 label *label192
+  439 draw rect 50 *tmp46 8 8
+  440 label *label193
+  441 label *label194
+  442 op mul *tmp40 7 :drawMask:r
+  443 op add *tmp41 *tmp40 6
+  444 op shl *tmp42 1 *tmp41
+  445 op and *tmp43 *tmp22 *tmp42
+  446 jump *label195 equal *tmp43 false
+  447 draw col %[red]
+  448 jump *label196 always
+  449 label *label195
+  450 draw col %[green]
+  451 label *label196
+  452 draw rect 60 *tmp46 8 8
+  453 label *label197
+  454 label *label198
+  455 label *label199
+  456 op sub :drawMask:r :drawMask:r 1
+  457 label *label200
+  458 op mul *tmp46 :drawMask:r 10
+  459 label *label201
+  460 label *label202
+  461 op mul *tmp40 7 :drawMask:r
+  462 op add *tmp41 *tmp40 0
+  463 op shl *tmp42 1 *tmp41
+  464 op and *tmp43 *tmp22 *tmp42
+  465 jump *label203 equal *tmp43 false
+  466 draw col %[red]
+  467 jump *label204 always
+  468 label *label203
+  469 draw col %[green]
+  470 label *label204
+  471 draw rect 0 *tmp46 8 8
+  472 label *label205
+  473 label *label206
+  474 op mul *tmp40 7 :drawMask:r
+  475 op add *tmp41 *tmp40 1
+  476 op shl *tmp42 1 *tmp41
+  477 op and *tmp43 *tmp22 *tmp42
+  478 jump *label207 equal *tmp43 false
+  479 draw col %[red]
+  480 jump *label208 always
+  481 label *label207
+  482 draw col %[green]
+  483 label *label208
+  484 draw rect 10 *tmp46 8 8
+  485 label *label209
+  486 label *label210
+  487 op mul *tmp40 7 :drawMask:r
+  488 op add *tmp41 *tmp40 2
+  489 op shl *tmp42 1 *tmp41
+  490 op and *tmp43 *tmp22 *tmp42
+  491 jump *label211 equal *tmp43 false
+  492 draw col %[red]
+  493 jump *label212 always
+  494 label *label211
+  495 draw col %[green]
+  496 label *label212
+  497 draw rect 20 *tmp46 8 8
+  498 label *label213
+  499 label *label214
+  500 op mul *tmp40 7 :drawMask:r
+  501 op add *tmp41 *tmp40 3
+  502 op shl *tmp42 1 *tmp41
+  503 op and *tmp43 *tmp22 *tmp42
+  504 jump *label215 equal *tmp43 false
+  505 draw col %[red]
+  506 jump *label216 always
+  507 label *label215
+  508 draw col %[green]
+  509 label *label216
+  510 draw rect 30 *tmp46 8 8
+  511 label *label217
+  512 label *label218
+  513 op mul *tmp40 7 :drawMask:r
+  514 op add *tmp41 *tmp40 4
+  515 op shl *tmp42 1 *tmp41
+  516 op and *tmp43 *tmp22 *tmp42
+  517 jump *label219 equal *tmp43 false
+  518 draw col %[red]
+  519 jump *label220 always
+  520 label *label219
+  521 draw col %[green]
+  522 label *label220
+  523 draw rect 40 *tmp46 8 8
+  524 label *label221
+  525 label *label222
+  526 op mul *tmp40 7 :drawMask:r
+  527 op add *tmp41 *tmp40 5
+  528 op shl *tmp42 1 *tmp41
+  529 op and *tmp43 *tmp22 *tmp42
+  530 jump *label223 equal *tmp43 false
+  531 draw col %[red]
+  532 jump *label224 always
+  533 label *label223
+  534 draw col %[green]
+  535 label *label224
+  536 draw rect 50 *tmp46 8 8
+  537 label *label225
+  538 label *label226
+  539 op mul *tmp40 7 :drawMask:r
+  540 op add *tmp41 *tmp40 6
+  541 op shl *tmp42 1 *tmp41
+  542 op and *tmp43 *tmp22 *tmp42
+  543 jump *label227 equal *tmp43 false
+  544 draw col %[red]
+  545 jump *label228 always
+  546 label *label227
+  547 draw col %[green]
+  548 label *label228
+  549 draw rect 60 *tmp46 8 8
+  550 label *label229
+  551 label *label230
+  552 label *label231
+  553 op sub :drawMask:r :drawMask:r 1
+  554 label *label232
+  555 op mul *tmp46 :drawMask:r 10
+  556 label *label233
+  557 label *label234
+  558 op mul *tmp40 7 :drawMask:r
+  559 op add *tmp41 *tmp40 0
+  560 op shl *tmp42 1 *tmp41
+  561 op and *tmp43 *tmp22 *tmp42
+  562 jump *label235 equal *tmp43 false
+  563 draw col %[red]
+  564 jump *label236 always
+  565 label *label235
+  566 draw col %[green]
+  567 label *label236
+  568 draw rect 0 *tmp46 8 8
+  569 label *label237
+  570 label *label238
+  571 op mul *tmp40 7 :drawMask:r
+  572 op add *tmp41 *tmp40 1
+  573 op shl *tmp42 1 *tmp41
+  574 op and *tmp43 *tmp22 *tmp42
+  575 jump *label239 equal *tmp43 false
+  576 draw col %[red]
+  577 jump *label240 always
+  578 label *label239
+  579 draw col %[green]
+  580 label *label240
+  581 draw rect 10 *tmp46 8 8
+  582 label *label241
+  583 label *label242
+  584 op mul *tmp40 7 :drawMask:r
+  585 op add *tmp41 *tmp40 2
+  586 op shl *tmp42 1 *tmp41
+  587 op and *tmp43 *tmp22 *tmp42
+  588 jump *label243 equal *tmp43 false
+  589 draw col %[red]
+  590 jump *label244 always
+  591 label *label243
+  592 draw col %[green]
+  593 label *label244
+  594 draw rect 20 *tmp46 8 8
+  595 label *label245
+  596 label *label246
+  597 op mul *tmp40 7 :drawMask:r
+  598 op add *tmp41 *tmp40 3
+  599 op shl *tmp42 1 *tmp41
+  600 op and *tmp43 *tmp22 *tmp42
+  601 jump *label247 equal *tmp43 false
+  602 draw col %[red]
+  603 jump *label248 always
+  604 label *label247
+  605 draw col %[green]
+  606 label *label248
+  607 draw rect 30 *tmp46 8 8
+  608 label *label249
+  609 label *label250
+  610 op mul *tmp40 7 :drawMask:r
+  611 op add *tmp41 *tmp40 4
+  612 op shl *tmp42 1 *tmp41
+  613 op and *tmp43 *tmp22 *tmp42
+  614 jump *label251 equal *tmp43 false
+  615 draw col %[red]
+  616 jump *label252 always
+  617 label *label251
+  618 draw col %[green]
+  619 label *label252
+  620 draw rect 40 *tmp46 8 8
+  621 label *label253
+  622 label *label254
+  623 op mul *tmp40 7 :drawMask:r
+  624 op add *tmp41 *tmp40 5
+  625 op shl *tmp42 1 *tmp41
+  626 op and *tmp43 *tmp22 *tmp42
+  627 jump *label255 equal *tmp43 false
+  628 draw col %[red]
+  629 jump *label256 always
+  630 label *label255
+  631 draw col %[green]
+  632 label *label256
+  633 draw rect 50 *tmp46 8 8
+  634 label *label257
+  635 label *label258
+  636 op mul *tmp40 7 :drawMask:r
+  637 op add *tmp41 *tmp40 6
+  638 op shl *tmp42 1 *tmp41
+  639 op and *tmp43 *tmp22 *tmp42
+  640 jump *label259 equal *tmp43 false
+  641 draw col %[red]
+  642 jump *label260 always
+  643 label *label259
+  644 draw col %[green]
+  645 label *label260
+  646 draw rect 60 *tmp46 8 8
+  647 label *label261
+  648 label *label262
+  649 label *label263
+  650 op sub :drawMask:r :drawMask:r 1
+  651 label *label264
+  652 op mul *tmp46 :drawMask:r 10
+  653 label *label265
+  654 label *label266
+  655 op mul *tmp40 7 :drawMask:r
+  656 op add *tmp41 *tmp40 0
+  657 op shl *tmp42 1 *tmp41
+  658 op and *tmp43 *tmp22 *tmp42
+  659 jump *label267 equal *tmp43 false
+  660 draw col %[red]
+  661 jump *label268 always
+  662 label *label267
+  663 draw col %[green]
+  664 label *label268
+  665 draw rect 0 *tmp46 8 8
+  666 label *label269
+  667 label *label270
+  668 op mul *tmp40 7 :drawMask:r
+  669 op add *tmp41 *tmp40 1
+  670 op shl *tmp42 1 *tmp41
+  671 op and *tmp43 *tmp22 *tmp42
+  672 jump *label271 equal *tmp43 false
+  673 draw col %[red]
+  674 jump *label272 always
+  675 label *label271
+  676 draw col %[green]
+  677 label *label272
+  678 draw rect 10 *tmp46 8 8
+  679 label *label273
+  680 label *label274
+  681 op mul *tmp40 7 :drawMask:r
+  682 op add *tmp41 *tmp40 2
+  683 op shl *tmp42 1 *tmp41
+  684 op and *tmp43 *tmp22 *tmp42
+  685 jump *label275 equal *tmp43 false
+  686 draw col %[red]
+  687 jump *label276 always
+  688 label *label275
+  689 draw col %[green]
+  690 label *label276
+  691 draw rect 20 *tmp46 8 8
+  692 label *label277
+  693 label *label278
+  694 op mul *tmp40 7 :drawMask:r
+  695 op add *tmp41 *tmp40 3
+  696 op shl *tmp42 1 *tmp41
+  697 op and *tmp43 *tmp22 *tmp42
+  698 jump *label279 equal *tmp43 false
+  699 draw col %[red]
+  700 jump *label280 always
+  701 label *label279
+  702 draw col %[green]
+  703 label *label280
+  704 draw rect 30 *tmp46 8 8
+  705 label *label281
+  706 label *label282
+  707 op mul *tmp40 7 :drawMask:r
+  708 op add *tmp41 *tmp40 4
+  709 op shl *tmp42 1 *tmp41
+  710 op and *tmp43 *tmp22 *tmp42
+  711 jump *label283 equal *tmp43 false
+  712 draw col %[red]
+  713 jump *label284 always
+  714 label *label283
+  715 draw col %[green]
+  716 label *label284
+  717 draw rect 40 *tmp46 8 8
+  718 label *label285
+  719 label *label286
+  720 op mul *tmp40 7 :drawMask:r
+  721 op add *tmp41 *tmp40 5
+  722 op shl *tmp42 1 *tmp41
+  723 op and *tmp43 *tmp22 *tmp42
+  724 jump *label287 equal *tmp43 false
+  725 draw col %[red]
+  726 jump *label288 always
+  727 label *label287
+  728 draw col %[green]
+  729 label *label288
+  730 draw rect 50 *tmp46 8 8
+  731 label *label289
+  732 label *label290
+  733 op mul *tmp40 7 :drawMask:r
+  734 op add *tmp41 *tmp40 6
+  735 op shl *tmp42 1 *tmp41
+  736 op and *tmp43 *tmp22 *tmp42
+  737 jump *label291 equal *tmp43 false
+  738 draw col %[red]
+  739 jump *label292 always
+  740 label *label291
+  741 draw col %[green]
+  742 label *label292
+  743 draw rect 60 *tmp46 8 8
+  744 label *label293
+  745 label *label294
+  746 label *label295
+  747 op sub :drawMask:r :drawMask:r 1
+  748 label *label296
+  749 op mul *tmp46 :drawMask:r 10
+  750 label *label297
+  751 label *label298
+  752 op mul *tmp40 7 :drawMask:r
+  753 op add *tmp41 *tmp40 0
+  754 op shl *tmp42 1 *tmp41
+  755 op and *tmp43 *tmp22 *tmp42
+  756 jump *label299 equal *tmp43 false
+  757 draw col %[red]
+  758 jump *label300 always
+  759 label *label299
+  760 draw col %[green]
+  761 label *label300
+  762 draw rect 0 *tmp46 8 8
+  763 label *label301
+  764 label *label302
+  765 op mul *tmp40 7 :drawMask:r
+  766 op add *tmp41 *tmp40 1
+  767 op shl *tmp42 1 *tmp41
+  768 op and *tmp43 *tmp22 *tmp42
+  769 jump *label303 equal *tmp43 false
+  770 draw col %[red]
+  771 jump *label304 always
+  772 label *label303
+  773 draw col %[green]
+  774 label *label304
+  775 draw rect 10 *tmp46 8 8
+  776 label *label305
+  777 label *label306
+  778 op mul *tmp40 7 :drawMask:r
+  779 op add *tmp41 *tmp40 2
+  780 op shl *tmp42 1 *tmp41
+  781 op and *tmp43 *tmp22 *tmp42
+  782 jump *label307 equal *tmp43 false
+  783 draw col %[red]
+  784 jump *label308 always
+  785 label *label307
+  786 draw col %[green]
+  787 label *label308
+  788 draw rect 20 *tmp46 8 8
+  789 label *label309
+  790 label *label310
+  791 op mul *tmp40 7 :drawMask:r
+  792 op add *tmp41 *tmp40 3
+  793 op shl *tmp42 1 *tmp41
+  794 op and *tmp43 *tmp22 *tmp42
+  795 jump *label311 equal *tmp43 false
+  796 draw col %[red]
+  797 jump *label312 always
+  798 label *label311
+  799 draw col %[green]
+  800 label *label312
+  801 draw rect 30 *tmp46 8 8
+  802 label *label313
+  803 label *label314
+  804 op mul *tmp40 7 :drawMask:r
+  805 op add *tmp41 *tmp40 4
+  806 op shl *tmp42 1 *tmp41
+  807 op and *tmp43 *tmp22 *tmp42
+  808 jump *label315 equal *tmp43 false
+  809 draw col %[red]
+  810 jump *label316 always
+  811 label *label315
+  812 draw col %[green]
+  813 label *label316
+  814 draw rect 40 *tmp46 8 8
+  815 label *label317
+  816 label *label318
+  817 op mul *tmp40 7 :drawMask:r
+  818 op add *tmp41 *tmp40 5
+  819 op shl *tmp42 1 *tmp41
+  820 op and *tmp43 *tmp22 *tmp42
+  821 jump *label319 equal *tmp43 false
+  822 draw col %[red]
+  823 jump *label320 always
+  824 label *label319
+  825 draw col %[green]
+  826 label *label320
+  827 draw rect 50 *tmp46 8 8
+  828 label *label321
+  829 label *label322
+  830 op mul *tmp40 7 :drawMask:r
+  831 op add *tmp41 *tmp40 6
+  832 op shl *tmp42 1 *tmp41
+  833 op and *tmp43 *tmp22 *tmp42
+  834 jump *label323 equal *tmp43 false
+  835 draw col %[red]
+  836 jump *label324 always
+  837 label *label323
+  838 draw col %[green]
+  839 label *label324
+  840 draw rect 60 *tmp46 8 8
+  841 label *label325
+  842 label *label326
+  843 label *label327
+  844 op sub :drawMask:r :drawMask:r 1
+  845 label *label19
   846 drawflush display1
   847 label *label16
   848 print *tmp22

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   164 op sub :drawMask:r 7 1
   165 label *label103
   166 label *label104
-    * op mul *tmp46 :drawMask:r 10
+  167 op mul *tmp46 6 10
   168 label *label105
   169 label *label106
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 0
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  170 op mul *tmp40 7 6
+  171 op add *tmp41 42 0
+  172 op shl *tmp42 1 42
+  173 op and *tmp43 *tmp22 4398046511104
   174 jump *label107 equal *tmp43 false
   175 draw col %[red]
   176 jump *label108 always
   177 label *label107
   178 draw col %[green]
   179 label *label108
-    * draw rect 0 *tmp46 8 8
+  180 draw rect 0 60 8 8
   181 label *label109
   182 label *label110
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 1
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  183 op mul *tmp40 7 6
+  184 op add *tmp41 42 1
+  185 op shl *tmp42 1 43
+  186 op and *tmp43 *tmp22 8796093022208
   187 jump *label111 equal *tmp43 false
   188 draw col %[red]
   189 jump *label112 always
   190 label *label111
   191 draw col %[green]
   192 label *label112
-    * draw rect 10 *tmp46 8 8
+  193 draw rect 10 60 8 8
   194 label *label113
   195 label *label114
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 2
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  196 op mul *tmp40 7 6
+  197 op add *tmp41 42 2
+  198 op shl *tmp42 1 44
+  199 op and *tmp43 *tmp22 17592186044416
   200 jump *label115 equal *tmp43 false
   201 draw col %[red]
   202 jump *label116 always
   203 label *label115
   204 draw col %[green]
   205 label *label116
-    * draw rect 20 *tmp46 8 8
+  206 draw rect 20 60 8 8
   207 label *label117
   208 label *label118
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 3
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  209 op mul *tmp40 7 6
+  210 op add *tmp41 42 3
+  211 op shl *tmp42 1 45
+  212 op and *tmp43 *tmp22 35184372088832
   213 jump *label119 equal *tmp43 false
   214 draw col %[red]
   215 jump *label120 always
   216 label *label119
   217 draw col %[green]
   218 label *label120
-    * draw rect 30 *tmp46 8 8
+  219 draw rect 30 60 8 8
   220 label *label121
   221 label *label122
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 4
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  222 op mul *tmp40 7 6
+  223 op add *tmp41 42 4
+  224 op shl *tmp42 1 46
+  225 op and *tmp43 *tmp22 70368744177664
   226 jump *label123 equal *tmp43 false
   227 draw col %[red]
   228 jump *label124 always
   229 label *label123
   230 draw col %[green]
   231 label *label124
-    * draw rect 40 *tmp46 8 8
+  232 draw rect 40 60 8 8
   233 label *label125
   234 label *label126
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 5
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  235 op mul *tmp40 7 6
+  236 op add *tmp41 42 5
+  237 op shl *tmp42 1 47
+  238 op and *tmp43 *tmp22 140737488355328
   239 jump *label127 equal *tmp43 false
   240 draw col %[red]
   241 jump *label128 always
   242 label *label127
   243 draw col %[green]
   244 label *label128
-    * draw rect 50 *tmp46 8 8
+  245 draw rect 50 60 8 8
   246 label *label129
   247 label *label130
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 6
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  248 op mul *tmp40 7 6
+  249 op add *tmp41 42 6
+  250 op shl *tmp42 1 48
+  251 op and *tmp43 *tmp22 281474976710656
   252 jump *label131 equal *tmp43 false
   253 draw col %[red]
   254 jump *label132 always
   255 label *label131
   256 draw col %[green]
   257 label *label132
-    * draw rect 60 *tmp46 8 8
+  258 draw rect 60 60 8 8
   259 label *label133
   260 label *label134
   261 label *label135
-    * op sub :drawMask:r :drawMask:r 1
+  262 op sub :drawMask:r 6 1
   263 label *label136
-    * op mul *tmp46 :drawMask:r 10
+  264 op mul *tmp46 5 10
   265 label *label137
   266 label *label138
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 0
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  267 op mul *tmp40 7 5
+  268 op add *tmp41 35 0
+  269 op shl *tmp42 1 35
+  270 op and *tmp43 *tmp22 34359738368
   271 jump *label139 equal *tmp43 false
   272 draw col %[red]
   273 jump *label140 always
   274 label *label139
   275 draw col %[green]
   276 label *label140
-    * draw rect 0 *tmp46 8 8
+  277 draw rect 0 50 8 8
   278 label *label141
   279 label *label142
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 1
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  280 op mul *tmp40 7 5
+  281 op add *tmp41 35 1
+  282 op shl *tmp42 1 36
+  283 op and *tmp43 *tmp22 68719476736
   284 jump *label143 equal *tmp43 false
   285 draw col %[red]
   286 jump *label144 always
   287 label *label143
   288 draw col %[green]
   289 label *label144
-    * draw rect 10 *tmp46 8 8
+  290 draw rect 10 50 8 8
   291 label *label145
   292 label *label146
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 2
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  293 op mul *tmp40 7 5
+  294 op add *tmp41 35 2
+  295 op shl *tmp42 1 37
+  296 op and *tmp43 *tmp22 137438953472
   297 jump *label147 equal *tmp43 false
   298 draw col %[red]
   299 jump *label148 always
   300 label *label147
   301 draw col %[green]
   302 label *label148
-    * draw rect 20 *tmp46 8 8
+  303 draw rect 20 50 8 8
   304 label *label149
   305 label *label150
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 3
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  306 op mul *tmp40 7 5
+  307 op add *tmp41 35 3
+  308 op shl *tmp42 1 38
+  309 op and *tmp43 *tmp22 274877906944
   310 jump *label151 equal *tmp43 false
   311 draw col %[red]
   312 jump *label152 always
   313 label *label151
   314 draw col %[green]
   315 label *label152
-    * draw rect 30 *tmp46 8 8
+  316 draw rect 30 50 8 8
   317 label *label153
   318 label *label154
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 4
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  319 op mul *tmp40 7 5
+  320 op add *tmp41 35 4
+  321 op shl *tmp42 1 39
+  322 op and *tmp43 *tmp22 549755813888
   323 jump *label155 equal *tmp43 false
   324 draw col %[red]
   325 jump *label156 always
   326 label *label155
   327 draw col %[green]
   328 label *label156
-    * draw rect 40 *tmp46 8 8
+  329 draw rect 40 50 8 8
   330 label *label157
   331 label *label158
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 5
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  332 op mul *tmp40 7 5
+  333 op add *tmp41 35 5
+  334 op shl *tmp42 1 40
+  335 op and *tmp43 *tmp22 1099511627776
   336 jump *label159 equal *tmp43 false
   337 draw col %[red]
   338 jump *label160 always
   339 label *label159
   340 draw col %[green]
   341 label *label160
-    * draw rect 50 *tmp46 8 8
+  342 draw rect 50 50 8 8
   343 label *label161
   344 label *label162
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 6
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  345 op mul *tmp40 7 5
+  346 op add *tmp41 35 6
+  347 op shl *tmp42 1 41
+  348 op and *tmp43 *tmp22 2199023255552
   349 jump *label163 equal *tmp43 false
   350 draw col %[red]
   351 jump *label164 always
   352 label *label163
   353 draw col %[green]
   354 label *label164
-    * draw rect 60 *tmp46 8 8
+  355 draw rect 60 50 8 8
   356 label *label165
   357 label *label166
   358 label *label167
-    * op sub :drawMask:r :drawMask:r 1
+  359 op sub :drawMask:r 5 1
   360 label *label168
-    * op mul *tmp46 :drawMask:r 10
+  361 op mul *tmp46 4 10
   362 label *label169
   363 label *label170
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 0
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  364 op mul *tmp40 7 4
+  365 op add *tmp41 28 0
+  366 op shl *tmp42 1 28
+  367 op and *tmp43 *tmp22 268435456
   368 jump *label171 equal *tmp43 false
   369 draw col %[red]
   370 jump *label172 always
   371 label *label171
   372 draw col %[green]
   373 label *label172
-    * draw rect 0 *tmp46 8 8
+  374 draw rect 0 40 8 8
   375 label *label173
   376 label *label174
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 1
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  377 op mul *tmp40 7 4
+  378 op add *tmp41 28 1
+  379 op shl *tmp42 1 29
+  380 op and *tmp43 *tmp22 536870912
   381 jump *label175 equal *tmp43 false
   382 draw col %[red]
   383 jump *label176 always
   384 label *label175
   385 draw col %[green]
   386 label *label176
-    * draw rect 10 *tmp46 8 8
+  387 draw rect 10 40 8 8
   388 label *label177
   389 label *label178
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 2
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  390 op mul *tmp40 7 4
+  391 op add *tmp41 28 2
+  392 op shl *tmp42 1 30
+  393 op and *tmp43 *tmp22 1073741824
   394 jump *label179 equal *tmp43 false
   395 draw col %[red]
   396 jump *label180 always
   397 label *label179
   398 draw col %[green]
   399 label *label180
-    * draw rect 20 *tmp46 8 8
+  400 draw rect 20 40 8 8
   401 label *label181
   402 label *label182
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 3
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  403 op mul *tmp40 7 4
+  404 op add *tmp41 28 3
+  405 op shl *tmp42 1 31
+  406 op and *tmp43 *tmp22 2147483648
   407 jump *label183 equal *tmp43 false
   408 draw col %[red]
   409 jump *label184 always
   410 label *label183
   411 draw col %[green]
   412 label *label184
-    * draw rect 30 *tmp46 8 8
+  413 draw rect 30 40 8 8
   414 label *label185
   415 label *label186
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 4
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  416 op mul *tmp40 7 4
+  417 op add *tmp41 28 4
+  418 op shl *tmp42 1 32
+  419 op and *tmp43 *tmp22 4294967296
   420 jump *label187 equal *tmp43 false
   421 draw col %[red]
   422 jump *label188 always
   423 label *label187
   424 draw col %[green]
   425 label *label188
-    * draw rect 40 *tmp46 8 8
+  426 draw rect 40 40 8 8
   427 label *label189
   428 label *label190
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 5
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  429 op mul *tmp40 7 4
+  430 op add *tmp41 28 5
+  431 op shl *tmp42 1 33
+  432 op and *tmp43 *tmp22 8589934592
   433 jump *label191 equal *tmp43 false
   434 draw col %[red]
   435 jump *label192 always
   436 label *label191
   437 draw col %[green]
   438 label *label192
-    * draw rect 50 *tmp46 8 8
+  439 draw rect 50 40 8 8
   440 label *label193
   441 label *label194
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 6
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  442 op mul *tmp40 7 4
+  443 op add *tmp41 28 6
+  444 op shl *tmp42 1 34
+  445 op and *tmp43 *tmp22 17179869184
   446 jump *label195 equal *tmp43 false
   447 draw col %[red]
   448 jump *label196 always
   449 label *label195
   450 draw col %[green]
   451 label *label196
-    * draw rect 60 *tmp46 8 8
+  452 draw rect 60 40 8 8
   453 label *label197
   454 label *label198
   455 label *label199
-    * op sub :drawMask:r :drawMask:r 1
+  456 op sub :drawMask:r 4 1
   457 label *label200
-    * op mul *tmp46 :drawMask:r 10
+  458 op mul *tmp46 3 10
   459 label *label201
   460 label *label202
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 0
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  461 op mul *tmp40 7 3
+  462 op add *tmp41 21 0
+  463 op shl *tmp42 1 21
+  464 op and *tmp43 *tmp22 2097152
   465 jump *label203 equal *tmp43 false
   466 draw col %[red]
   467 jump *label204 always
   468 label *label203
   469 draw col %[green]
   470 label *label204
-    * draw rect 0 *tmp46 8 8
+  471 draw rect 0 30 8 8
   472 label *label205
   473 label *label206
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 1
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  474 op mul *tmp40 7 3
+  475 op add *tmp41 21 1
+  476 op shl *tmp42 1 22
+  477 op and *tmp43 *tmp22 4194304
   478 jump *label207 equal *tmp43 false
   479 draw col %[red]
   480 jump *label208 always
   481 label *label207
   482 draw col %[green]
   483 label *label208
-    * draw rect 10 *tmp46 8 8
+  484 draw rect 10 30 8 8
   485 label *label209
   486 label *label210
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 2
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  487 op mul *tmp40 7 3
+  488 op add *tmp41 21 2
+  489 op shl *tmp42 1 23
+  490 op and *tmp43 *tmp22 8388608
   491 jump *label211 equal *tmp43 false
   492 draw col %[red]
   493 jump *label212 always
   494 label *label211
   495 draw col %[green]
   496 label *label212
-    * draw rect 20 *tmp46 8 8
+  497 draw rect 20 30 8 8
   498 label *label213
   499 label *label214
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 3
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  500 op mul *tmp40 7 3
+  501 op add *tmp41 21 3
+  502 op shl *tmp42 1 24
+  503 op and *tmp43 *tmp22 16777216
   504 jump *label215 equal *tmp43 false
   505 draw col %[red]
   506 jump *label216 always
   507 label *label215
   508 draw col %[green]
   509 label *label216
-    * draw rect 30 *tmp46 8 8
+  510 draw rect 30 30 8 8
   511 label *label217
   512 label *label218
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 4
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  513 op mul *tmp40 7 3
+  514 op add *tmp41 21 4
+  515 op shl *tmp42 1 25
+  516 op and *tmp43 *tmp22 33554432
   517 jump *label219 equal *tmp43 false
   518 draw col %[red]
   519 jump *label220 always
   520 label *label219
   521 draw col %[green]
   522 label *label220
-    * draw rect 40 *tmp46 8 8
+  523 draw rect 40 30 8 8
   524 label *label221
   525 label *label222
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 5
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  526 op mul *tmp40 7 3
+  527 op add *tmp41 21 5
+  528 op shl *tmp42 1 26
+  529 op and *tmp43 *tmp22 67108864
   530 jump *label223 equal *tmp43 false
   531 draw col %[red]
   532 jump *label224 always
   533 label *label223
   534 draw col %[green]
   535 label *label224
-    * draw rect 50 *tmp46 8 8
+  536 draw rect 50 30 8 8
   537 label *label225
   538 label *label226
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 6
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  539 op mul *tmp40 7 3
+  540 op add *tmp41 21 6
+  541 op shl *tmp42 1 27
+  542 op and *tmp43 *tmp22 134217728
   543 jump *label227 equal *tmp43 false
   544 draw col %[red]
   545 jump *label228 always
   546 label *label227
   547 draw col %[green]
   548 label *label228
-    * draw rect 60 *tmp46 8 8
+  549 draw rect 60 30 8 8
   550 label *label229
   551 label *label230
   552 label *label231
-    * op sub :drawMask:r :drawMask:r 1
+  553 op sub :drawMask:r 3 1
   554 label *label232
-    * op mul *tmp46 :drawMask:r 10
+  555 op mul *tmp46 2 10
   556 label *label233
   557 label *label234
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 0
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  558 op mul *tmp40 7 2
+  559 op add *tmp41 14 0
+  560 op shl *tmp42 1 14
+  561 op and *tmp43 *tmp22 16384
   562 jump *label235 equal *tmp43 false
   563 draw col %[red]
   564 jump *label236 always
   565 label *label235
   566 draw col %[green]
   567 label *label236
-    * draw rect 0 *tmp46 8 8
+  568 draw rect 0 20 8 8
   569 label *label237
   570 label *label238
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 1
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  571 op mul *tmp40 7 2
+  572 op add *tmp41 14 1
+  573 op shl *tmp42 1 15
+  574 op and *tmp43 *tmp22 32768
   575 jump *label239 equal *tmp43 false
   576 draw col %[red]
   577 jump *label240 always
   578 label *label239
   579 draw col %[green]
   580 label *label240
-    * draw rect 10 *tmp46 8 8
+  581 draw rect 10 20 8 8
   582 label *label241
   583 label *label242
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 2
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  584 op mul *tmp40 7 2
+  585 op add *tmp41 14 2
+  586 op shl *tmp42 1 16
+  587 op and *tmp43 *tmp22 65536
   588 jump *label243 equal *tmp43 false
   589 draw col %[red]
   590 jump *label244 always
   591 label *label243
   592 draw col %[green]
   593 label *label244
-    * draw rect 20 *tmp46 8 8
+  594 draw rect 20 20 8 8
   595 label *label245
   596 label *label246
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 3
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  597 op mul *tmp40 7 2
+  598 op add *tmp41 14 3
+  599 op shl *tmp42 1 17
+  600 op and *tmp43 *tmp22 131072
   601 jump *label247 equal *tmp43 false
   602 draw col %[red]
   603 jump *label248 always
   604 label *label247
   605 draw col %[green]
   606 label *label248
-    * draw rect 30 *tmp46 8 8
+  607 draw rect 30 20 8 8
   608 label *label249
   609 label *label250
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 4
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  610 op mul *tmp40 7 2
+  611 op add *tmp41 14 4
+  612 op shl *tmp42 1 18
+  613 op and *tmp43 *tmp22 262144
   614 jump *label251 equal *tmp43 false
   615 draw col %[red]
   616 jump *label252 always
   617 label *label251
   618 draw col %[green]
   619 label *label252
-    * draw rect 40 *tmp46 8 8
+  620 draw rect 40 20 8 8
   621 label *label253
   622 label *label254
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 5
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  623 op mul *tmp40 7 2
+  624 op add *tmp41 14 5
+  625 op shl *tmp42 1 19
+  626 op and *tmp43 *tmp22 524288
   627 jump *label255 equal *tmp43 false
   628 draw col %[red]
   629 jump *label256 always
   630 label *label255
   631 draw col %[green]
   632 label *label256
-    * draw rect 50 *tmp46 8 8
+  633 draw rect 50 20 8 8
   634 label *label257
   635 label *label258
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 6
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  636 op mul *tmp40 7 2
+  637 op add *tmp41 14 6
+  638 op shl *tmp42 1 20
+  639 op and *tmp43 *tmp22 1048576
   640 jump *label259 equal *tmp43 false
   641 draw col %[red]
   642 jump *label260 always
   643 label *label259
   644 draw col %[green]
   645 label *label260
-    * draw rect 60 *tmp46 8 8
+  646 draw rect 60 20 8 8
   647 label *label261
   648 label *label262
   649 label *label263
-    * op sub :drawMask:r :drawMask:r 1
+  650 op sub :drawMask:r 2 1
   651 label *label264
-    * op mul *tmp46 :drawMask:r 10
+  652 op mul *tmp46 1 10
   653 label *label265
   654 label *label266
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 0
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  655 op mul *tmp40 7 1
+  656 op add *tmp41 7 0
+  657 op shl *tmp42 1 7
+  658 op and *tmp43 *tmp22 128
   659 jump *label267 equal *tmp43 false
   660 draw col %[red]
   661 jump *label268 always
   662 label *label267
   663 draw col %[green]
   664 label *label268
-    * draw rect 0 *tmp46 8 8
+  665 draw rect 0 10 8 8
   666 label *label269
   667 label *label270
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 1
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  668 op mul *tmp40 7 1
+  669 op add *tmp41 7 1
+  670 op shl *tmp42 1 8
+  671 op and *tmp43 *tmp22 256
   672 jump *label271 equal *tmp43 false
   673 draw col %[red]
   674 jump *label272 always
   675 label *label271
   676 draw col %[green]
   677 label *label272
-    * draw rect 10 *tmp46 8 8
+  678 draw rect 10 10 8 8
   679 label *label273
   680 label *label274
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 2
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  681 op mul *tmp40 7 1
+  682 op add *tmp41 7 2
+  683 op shl *tmp42 1 9
+  684 op and *tmp43 *tmp22 512
   685 jump *label275 equal *tmp43 false
   686 draw col %[red]
   687 jump *label276 always
   688 label *label275
   689 draw col %[green]
   690 label *label276
-    * draw rect 20 *tmp46 8 8
+  691 draw rect 20 10 8 8
   692 label *label277
   693 label *label278
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 3
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  694 op mul *tmp40 7 1
+  695 op add *tmp41 7 3
+  696 op shl *tmp42 1 10
+  697 op and *tmp43 *tmp22 1024
   698 jump *label279 equal *tmp43 false
   699 draw col %[red]
   700 jump *label280 always
   701 label *label279
   702 draw col %[green]
   703 label *label280
-    * draw rect 30 *tmp46 8 8
+  704 draw rect 30 10 8 8
   705 label *label281
   706 label *label282
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 4
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  707 op mul *tmp40 7 1
+  708 op add *tmp41 7 4
+  709 op shl *tmp42 1 11
+  710 op and *tmp43 *tmp22 2048
   711 jump *label283 equal *tmp43 false
   712 draw col %[red]
   713 jump *label284 always
   714 label *label283
   715 draw col %[green]
   716 label *label284
-    * draw rect 40 *tmp46 8 8
+  717 draw rect 40 10 8 8
   718 label *label285
   719 label *label286
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 5
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  720 op mul *tmp40 7 1
+  721 op add *tmp41 7 5
+  722 op shl *tmp42 1 12
+  723 op and *tmp43 *tmp22 4096
   724 jump *label287 equal *tmp43 false
   725 draw col %[red]
   726 jump *label288 always
   727 label *label287
   728 draw col %[green]
   729 label *label288
-    * draw rect 50 *tmp46 8 8
+  730 draw rect 50 10 8 8
   731 label *label289
   732 label *label290
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 6
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  733 op mul *tmp40 7 1
+  734 op add *tmp41 7 6
+  735 op shl *tmp42 1 13
+  736 op and *tmp43 *tmp22 8192
   737 jump *label291 equal *tmp43 false
   738 draw col %[red]
   739 jump *label292 always
   740 label *label291
   741 draw col %[green]
   742 label *label292
-    * draw rect 60 *tmp46 8 8
+  743 draw rect 60 10 8 8
   744 label *label293
   745 label *label294
   746 label *label295
-    * op sub :drawMask:r :drawMask:r 1
+  747 op sub :drawMask:r 1 1
   748 label *label296
-    * op mul *tmp46 :drawMask:r 10
+  749 op mul *tmp46 0 10
   750 label *label297
   751 label *label298
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 0
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  752 op mul *tmp40 7 0
+  753 op add *tmp41 0 0
+  754 op shl *tmp42 1 0
+  755 op and *tmp43 *tmp22 1
   756 jump *label299 equal *tmp43 false
   757 draw col %[red]
   758 jump *label300 always
   759 label *label299
   760 draw col %[green]
   761 label *label300
-    * draw rect 0 *tmp46 8 8
+  762 draw rect 0 0 8 8
   763 label *label301
   764 label *label302
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 1
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  765 op mul *tmp40 7 0
+  766 op add *tmp41 0 1
+  767 op shl *tmp42 1 1
+  768 op and *tmp43 *tmp22 2
   769 jump *label303 equal *tmp43 false
   770 draw col %[red]
   771 jump *label304 always
   772 label *label303
   773 draw col %[green]
   774 label *label304
-    * draw rect 10 *tmp46 8 8
+  775 draw rect 10 0 8 8
   776 label *label305
   777 label *label306
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 2
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  778 op mul *tmp40 7 0
+  779 op add *tmp41 0 2
+  780 op shl *tmp42 1 2
+  781 op and *tmp43 *tmp22 4
   782 jump *label307 equal *tmp43 false
   783 draw col %[red]
   784 jump *label308 always
   785 label *label307
   786 draw col %[green]
   787 label *label308
-    * draw rect 20 *tmp46 8 8
+  788 draw rect 20 0 8 8
   789 label *label309
   790 label *label310
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 3
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  791 op mul *tmp40 7 0
+  792 op add *tmp41 0 3
+  793 op shl *tmp42 1 3
+  794 op and *tmp43 *tmp22 8
   795 jump *label311 equal *tmp43 false
   796 draw col %[red]
   797 jump *label312 always
   798 label *label311
   799 draw col %[green]
   800 label *label312
-    * draw rect 30 *tmp46 8 8
+  801 draw rect 30 0 8 8
   802 label *label313
   803 label *label314
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 4
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  804 op mul *tmp40 7 0
+  805 op add *tmp41 0 4
+  806 op shl *tmp42 1 4
+  807 op and *tmp43 *tmp22 16
   808 jump *label315 equal *tmp43 false
   809 draw col %[red]
   810 jump *label316 always
   811 label *label315
   812 draw col %[green]
   813 label *label316
-    * draw rect 40 *tmp46 8 8
+  814 draw rect 40 0 8 8
   815 label *label317
   816 label *label318
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 5
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  817 op mul *tmp40 7 0
+  818 op add *tmp41 0 5
+  819 op shl *tmp42 1 5
+  820 op and *tmp43 *tmp22 32
   821 jump *label319 equal *tmp43 false
   822 draw col %[red]
   823 jump *label320 always
   824 label *label319
   825 draw col %[green]
   826 label *label320
-    * draw rect 50 *tmp46 8 8
+  827 draw rect 50 0 8 8
   828 label *label321
   829 label *label322
-    * op mul *tmp40 7 :drawMask:r
-    * op add *tmp41 *tmp40 6
-    * op shl *tmp42 1 *tmp41
-    * op and *tmp43 *tmp22 *tmp42
+  830 op mul *tmp40 7 0
+  831 op add *tmp41 0 6
+  832 op shl *tmp42 1 6
+  833 op and *tmp43 *tmp22 64
   834 jump *label323 equal *tmp43 false
   835 draw col %[red]
   836 jump *label324 always
   837 label *label323
   838 draw col %[green]
   839 label *label324
-    * draw rect 60 *tmp46 8 8
+  840 draw rect 60 0 8 8
   841 label *label325
   842 label *label326
   843 label *label327
-    * op sub :drawMask:r :drawMask:r 1
+  844 op sub :drawMask:r 0 1
   845 label *label19
   846 drawflush display1
   847 label *label16

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-162 instructions):
 
   161 draw reset
   162 draw translate 6 6
   163 draw clear 0 0 0
-    * op sub :drawMask:r 7 1
   164 label *label103
   165 label *label104
-    * op mul *tmp46 6 10
   166 label *label105
   167 label *label106
-    * op mul *tmp40 7 6
-    * op add *tmp41 42 0
-    * op shl *tmp42 1 42
   168 op and *tmp43 *tmp22 4398046511104
   169 jump *label107 equal *tmp43 false
   170 draw col %[red]
 
   175 draw rect 0 60 8 8
   176 label *label109
   177 label *label110
-    * op mul *tmp40 7 6
-    * op add *tmp41 42 1
-    * op shl *tmp42 1 43
   178 op and *tmp43 *tmp22 8796093022208
   179 jump *label111 equal *tmp43 false
   180 draw col %[red]
 
   185 draw rect 10 60 8 8
   186 label *label113
   187 label *label114
-    * op mul *tmp40 7 6
-    * op add *tmp41 42 2
-    * op shl *tmp42 1 44
   188 op and *tmp43 *tmp22 17592186044416
   189 jump *label115 equal *tmp43 false
   190 draw col %[red]
 
   195 draw rect 20 60 8 8
   196 label *label117
   197 label *label118
-    * op mul *tmp40 7 6
-    * op add *tmp41 42 3
-    * op shl *tmp42 1 45
   198 op and *tmp43 *tmp22 35184372088832
   199 jump *label119 equal *tmp43 false
   200 draw col %[red]
 
   205 draw rect 30 60 8 8
   206 label *label121
   207 label *label122
-    * op mul *tmp40 7 6
-    * op add *tmp41 42 4
-    * op shl *tmp42 1 46
   208 op and *tmp43 *tmp22 70368744177664
   209 jump *label123 equal *tmp43 false
   210 draw col %[red]
 
   215 draw rect 40 60 8 8
   216 label *label125
   217 label *label126
-    * op mul *tmp40 7 6
-    * op add *tmp41 42 5
-    * op shl *tmp42 1 47
   218 op and *tmp43 *tmp22 140737488355328
   219 jump *label127 equal *tmp43 false
   220 draw col %[red]
 
   225 draw rect 50 60 8 8
   226 label *label129
   227 label *label130
-    * op mul *tmp40 7 6
-    * op add *tmp41 42 6
-    * op shl *tmp42 1 48
   228 op and *tmp43 *tmp22 281474976710656
   229 jump *label131 equal *tmp43 false
   230 draw col %[red]
 
   236 label *label133
   237 label *label134
   238 label *label135
-    * op sub :drawMask:r 6 1
   239 label *label136
-    * op mul *tmp46 5 10
   240 label *label137
   241 label *label138
-    * op mul *tmp40 7 5
-    * op add *tmp41 35 0
-    * op shl *tmp42 1 35
   242 op and *tmp43 *tmp22 34359738368
   243 jump *label139 equal *tmp43 false
   244 draw col %[red]
 
   249 draw rect 0 50 8 8
   250 label *label141
   251 label *label142
-    * op mul *tmp40 7 5
-    * op add *tmp41 35 1
-    * op shl *tmp42 1 36
   252 op and *tmp43 *tmp22 68719476736
   253 jump *label143 equal *tmp43 false
   254 draw col %[red]
 
   259 draw rect 10 50 8 8
   260 label *label145
   261 label *label146
-    * op mul *tmp40 7 5
-    * op add *tmp41 35 2
-    * op shl *tmp42 1 37
   262 op and *tmp43 *tmp22 137438953472
   263 jump *label147 equal *tmp43 false
   264 draw col %[red]
 
   269 draw rect 20 50 8 8
   270 label *label149
   271 label *label150
-    * op mul *tmp40 7 5
-    * op add *tmp41 35 3
-    * op shl *tmp42 1 38
   272 op and *tmp43 *tmp22 274877906944
   273 jump *label151 equal *tmp43 false
   274 draw col %[red]
 
   279 draw rect 30 50 8 8
   280 label *label153
   281 label *label154
-    * op mul *tmp40 7 5
-    * op add *tmp41 35 4
-    * op shl *tmp42 1 39
   282 op and *tmp43 *tmp22 549755813888
   283 jump *label155 equal *tmp43 false
   284 draw col %[red]
 
   289 draw rect 40 50 8 8
   290 label *label157
   291 label *label158
-    * op mul *tmp40 7 5
-    * op add *tmp41 35 5
-    * op shl *tmp42 1 40
   292 op and *tmp43 *tmp22 1099511627776
   293 jump *label159 equal *tmp43 false
   294 draw col %[red]
 
   299 draw rect 50 50 8 8
   300 label *label161
   301 label *label162
-    * op mul *tmp40 7 5
-    * op add *tmp41 35 6
-    * op shl *tmp42 1 41
   302 op and *tmp43 *tmp22 2199023255552
   303 jump *label163 equal *tmp43 false
   304 draw col %[red]
 
   310 label *label165
   311 label *label166
   312 label *label167
-    * op sub :drawMask:r 5 1
   313 label *label168
-    * op mul *tmp46 4 10
   314 label *label169
   315 label *label170
-    * op mul *tmp40 7 4
-    * op add *tmp41 28 0
-    * op shl *tmp42 1 28
   316 op and *tmp43 *tmp22 268435456
   317 jump *label171 equal *tmp43 false
   318 draw col %[red]
 
   323 draw rect 0 40 8 8
   324 label *label173
   325 label *label174
-    * op mul *tmp40 7 4
-    * op add *tmp41 28 1
-    * op shl *tmp42 1 29
   326 op and *tmp43 *tmp22 536870912
   327 jump *label175 equal *tmp43 false
   328 draw col %[red]
 
   333 draw rect 10 40 8 8
   334 label *label177
   335 label *label178
-    * op mul *tmp40 7 4
-    * op add *tmp41 28 2
-    * op shl *tmp42 1 30
   336 op and *tmp43 *tmp22 1073741824
   337 jump *label179 equal *tmp43 false
   338 draw col %[red]
 
   343 draw rect 20 40 8 8
   344 label *label181
   345 label *label182
-    * op mul *tmp40 7 4
-    * op add *tmp41 28 3
-    * op shl *tmp42 1 31
   346 op and *tmp43 *tmp22 2147483648
   347 jump *label183 equal *tmp43 false
   348 draw col %[red]
 
   353 draw rect 30 40 8 8
   354 label *label185
   355 label *label186
-    * op mul *tmp40 7 4
-    * op add *tmp41 28 4
-    * op shl *tmp42 1 32
   356 op and *tmp43 *tmp22 4294967296
   357 jump *label187 equal *tmp43 false
   358 draw col %[red]
 
   363 draw rect 40 40 8 8
   364 label *label189
   365 label *label190
-    * op mul *tmp40 7 4
-    * op add *tmp41 28 5
-    * op shl *tmp42 1 33
   366 op and *tmp43 *tmp22 8589934592
   367 jump *label191 equal *tmp43 false
   368 draw col %[red]
 
   373 draw rect 50 40 8 8
   374 label *label193
   375 label *label194
-    * op mul *tmp40 7 4
-    * op add *tmp41 28 6
-    * op shl *tmp42 1 34
   376 op and *tmp43 *tmp22 17179869184
   377 jump *label195 equal *tmp43 false
   378 draw col %[red]
 
   384 label *label197
   385 label *label198
   386 label *label199
-    * op sub :drawMask:r 4 1
   387 label *label200
-    * op mul *tmp46 3 10
   388 label *label201
   389 label *label202
-    * op mul *tmp40 7 3
-    * op add *tmp41 21 0
-    * op shl *tmp42 1 21
   390 op and *tmp43 *tmp22 2097152
   391 jump *label203 equal *tmp43 false
   392 draw col %[red]
 
   397 draw rect 0 30 8 8
   398 label *label205
   399 label *label206
-    * op mul *tmp40 7 3
-    * op add *tmp41 21 1
-    * op shl *tmp42 1 22
   400 op and *tmp43 *tmp22 4194304
   401 jump *label207 equal *tmp43 false
   402 draw col %[red]
 
   407 draw rect 10 30 8 8
   408 label *label209
   409 label *label210
-    * op mul *tmp40 7 3
-    * op add *tmp41 21 2
-    * op shl *tmp42 1 23
   410 op and *tmp43 *tmp22 8388608
   411 jump *label211 equal *tmp43 false
   412 draw col %[red]
 
   417 draw rect 20 30 8 8
   418 label *label213
   419 label *label214
-    * op mul *tmp40 7 3
-    * op add *tmp41 21 3
-    * op shl *tmp42 1 24
   420 op and *tmp43 *tmp22 16777216
   421 jump *label215 equal *tmp43 false
   422 draw col %[red]
 
   427 draw rect 30 30 8 8
   428 label *label217
   429 label *label218
-    * op mul *tmp40 7 3
-    * op add *tmp41 21 4
-    * op shl *tmp42 1 25
   430 op and *tmp43 *tmp22 33554432
   431 jump *label219 equal *tmp43 false
   432 draw col %[red]
 
   437 draw rect 40 30 8 8
   438 label *label221
   439 label *label222
-    * op mul *tmp40 7 3
-    * op add *tmp41 21 5
-    * op shl *tmp42 1 26
   440 op and *tmp43 *tmp22 67108864
   441 jump *label223 equal *tmp43 false
   442 draw col %[red]
 
   447 draw rect 50 30 8 8
   448 label *label225
   449 label *label226
-    * op mul *tmp40 7 3
-    * op add *tmp41 21 6
-    * op shl *tmp42 1 27
   450 op and *tmp43 *tmp22 134217728
   451 jump *label227 equal *tmp43 false
   452 draw col %[red]
 
   458 label *label229
   459 label *label230
   460 label *label231
-    * op sub :drawMask:r 3 1
   461 label *label232
-    * op mul *tmp46 2 10
   462 label *label233
   463 label *label234
-    * op mul *tmp40 7 2
-    * op add *tmp41 14 0
-    * op shl *tmp42 1 14
   464 op and *tmp43 *tmp22 16384
   465 jump *label235 equal *tmp43 false
   466 draw col %[red]
 
   471 draw rect 0 20 8 8
   472 label *label237
   473 label *label238
-    * op mul *tmp40 7 2
-    * op add *tmp41 14 1
-    * op shl *tmp42 1 15
   474 op and *tmp43 *tmp22 32768
   475 jump *label239 equal *tmp43 false
   476 draw col %[red]
 
   481 draw rect 10 20 8 8
   482 label *label241
   483 label *label242
-    * op mul *tmp40 7 2
-    * op add *tmp41 14 2
-    * op shl *tmp42 1 16
   484 op and *tmp43 *tmp22 65536
   485 jump *label243 equal *tmp43 false
   486 draw col %[red]
 
   491 draw rect 20 20 8 8
   492 label *label245
   493 label *label246
-    * op mul *tmp40 7 2
-    * op add *tmp41 14 3
-    * op shl *tmp42 1 17
   494 op and *tmp43 *tmp22 131072
   495 jump *label247 equal *tmp43 false
   496 draw col %[red]
 
   501 draw rect 30 20 8 8
   502 label *label249
   503 label *label250
-    * op mul *tmp40 7 2
-    * op add *tmp41 14 4
-    * op shl *tmp42 1 18
   504 op and *tmp43 *tmp22 262144
   505 jump *label251 equal *tmp43 false
   506 draw col %[red]
 
   511 draw rect 40 20 8 8
   512 label *label253
   513 label *label254
-    * op mul *tmp40 7 2
-    * op add *tmp41 14 5
-    * op shl *tmp42 1 19
   514 op and *tmp43 *tmp22 524288
   515 jump *label255 equal *tmp43 false
   516 draw col %[red]
 
   521 draw rect 50 20 8 8
   522 label *label257
   523 label *label258
-    * op mul *tmp40 7 2
-    * op add *tmp41 14 6
-    * op shl *tmp42 1 20
   524 op and *tmp43 *tmp22 1048576
   525 jump *label259 equal *tmp43 false
   526 draw col %[red]
 
   532 label *label261
   533 label *label262
   534 label *label263
-    * op sub :drawMask:r 2 1
   535 label *label264
-    * op mul *tmp46 1 10
   536 label *label265
   537 label *label266
-    * op mul *tmp40 7 1
-    * op add *tmp41 7 0
-    * op shl *tmp42 1 7
   538 op and *tmp43 *tmp22 128
   539 jump *label267 equal *tmp43 false
   540 draw col %[red]
 
   545 draw rect 0 10 8 8
   546 label *label269
   547 label *label270
-    * op mul *tmp40 7 1
-    * op add *tmp41 7 1
-    * op shl *tmp42 1 8
   548 op and *tmp43 *tmp22 256
   549 jump *label271 equal *tmp43 false
   550 draw col %[red]
 
   555 draw rect 10 10 8 8
   556 label *label273
   557 label *label274
-    * op mul *tmp40 7 1
-    * op add *tmp41 7 2
-    * op shl *tmp42 1 9
   558 op and *tmp43 *tmp22 512
   559 jump *label275 equal *tmp43 false
   560 draw col %[red]
 
   565 draw rect 20 10 8 8
   566 label *label277
   567 label *label278
-    * op mul *tmp40 7 1
-    * op add *tmp41 7 3
-    * op shl *tmp42 1 10
   568 op and *tmp43 *tmp22 1024
   569 jump *label279 equal *tmp43 false
   570 draw col %[red]
 
   575 draw rect 30 10 8 8
   576 label *label281
   577 label *label282
-    * op mul *tmp40 7 1
-    * op add *tmp41 7 4
-    * op shl *tmp42 1 11
   578 op and *tmp43 *tmp22 2048
   579 jump *label283 equal *tmp43 false
   580 draw col %[red]
 
   585 draw rect 40 10 8 8
   586 label *label285
   587 label *label286
-    * op mul *tmp40 7 1
-    * op add *tmp41 7 5
-    * op shl *tmp42 1 12
   588 op and *tmp43 *tmp22 4096
   589 jump *label287 equal *tmp43 false
   590 draw col %[red]
 
   595 draw rect 50 10 8 8
   596 label *label289
   597 label *label290
-    * op mul *tmp40 7 1
-    * op add *tmp41 7 6
-    * op shl *tmp42 1 13
   598 op and *tmp43 *tmp22 8192
   599 jump *label291 equal *tmp43 false
   600 draw col %[red]
 
   606 label *label293
   607 label *label294
   608 label *label295
-    * op sub :drawMask:r 1 1
   609 label *label296
-    * op mul *tmp46 0 10
   610 label *label297
   611 label *label298
-    * op mul *tmp40 7 0
-    * op add *tmp41 0 0
-    * op shl *tmp42 1 0
   612 op and *tmp43 *tmp22 1
   613 jump *label299 equal *tmp43 false
   614 draw col %[red]
 
   619 draw rect 0 0 8 8
   620 label *label301
   621 label *label302
-    * op mul *tmp40 7 0
-    * op add *tmp41 0 1
-    * op shl *tmp42 1 1
   622 op and *tmp43 *tmp22 2
   623 jump *label303 equal *tmp43 false
   624 draw col %[red]
 
   629 draw rect 10 0 8 8
   630 label *label305
   631 label *label306
-    * op mul *tmp40 7 0
-    * op add *tmp41 0 2
-    * op shl *tmp42 1 2
   632 op and *tmp43 *tmp22 4
   633 jump *label307 equal *tmp43 false
   634 draw col %[red]
 
   639 draw rect 20 0 8 8
   640 label *label309
   641 label *label310
-    * op mul *tmp40 7 0
-    * op add *tmp41 0 3
-    * op shl *tmp42 1 3
   642 op and *tmp43 *tmp22 8
   643 jump *label311 equal *tmp43 false
   644 draw col %[red]
 
   649 draw rect 30 0 8 8
   650 label *label313
   651 label *label314
-    * op mul *tmp40 7 0
-    * op add *tmp41 0 4
-    * op shl *tmp42 1 4
   652 op and *tmp43 *tmp22 16
   653 jump *label315 equal *tmp43 false
   654 draw col %[red]
 
   659 draw rect 40 0 8 8
   660 label *label317
   661 label *label318
-    * op mul *tmp40 7 0
-    * op add *tmp41 0 5
-    * op shl *tmp42 1 5
   662 op and *tmp43 *tmp22 32
   663 jump *label319 equal *tmp43 false
   664 draw col %[red]
 
   669 draw rect 50 0 8 8
   670 label *label321
   671 label *label322
-    * op mul *tmp40 7 0
-    * op add *tmp41 0 6
-    * op shl *tmp42 1 6
   672 op and *tmp43 *tmp22 64
   673 jump *label323 equal *tmp43 false
   674 draw col %[red]
 
   680 label *label325
   681 label *label326
   682 label *label327
-    * op sub :drawMask:r 0 1
   683 label *label19
   684 drawflush display1
   685 label *label16

Modifications by Inline function 'createBlockMaskRow' defined at test.mnd:7:1 (+276 instructions):
 
    19 op add *tmp23 y 4
    20 set :createBlockMaskRow:x x
    21 set :createBlockMaskRow:y *tmp23
-    * setaddr :createBlockMaskRow*retaddr *label9 (h:*label9)
-    * call *label2 *invalid :createBlockMaskRow*retval (m:*label9) (h:*label9)
-    * label *label9
+   22 label *label328
+   23 label *label329
+   24 label *label330
+   25 op add *tmp52 :createBlockMaskRow:x 4
+   26 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   27 op or :createBlockMaskRow:result 0 *tmp53
+   28 label *label331
+   29 label *label332
+   30 op shl *tmp51 :createBlockMaskRow:result 1
+   31 op add *tmp52 :createBlockMaskRow:x 3
+   32 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   33 op or :createBlockMaskRow:result *tmp51 *tmp53
+   34 label *label333
+   35 label *label334
+   36 op shl *tmp51 :createBlockMaskRow:result 1
+   37 op add *tmp52 :createBlockMaskRow:x 2
+   38 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   39 op or :createBlockMaskRow:result *tmp51 *tmp53
+   40 label *label335
+   41 label *label336
+   42 op shl *tmp51 :createBlockMaskRow:result 1
+   43 op add *tmp52 :createBlockMaskRow:x 1
+   44 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   45 op or :createBlockMaskRow:result *tmp51 *tmp53
+   46 label *label337
+   47 label *label338
+   48 op shl *tmp51 :createBlockMaskRow:result 1
+   49 op add *tmp52 :createBlockMaskRow:x 0
+   50 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   51 op or :createBlockMaskRow:result *tmp51 *tmp53
+   52 label *label339
+   53 label *label340
+   54 op shl *tmp51 :createBlockMaskRow:result 1
+   55 op add *tmp52 :createBlockMaskRow:x -1
+   56 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   57 op or :createBlockMaskRow:result *tmp51 *tmp53
+   58 label *label341
+   59 label *label342
+   60 op shl *tmp51 :createBlockMaskRow:result 1
+   61 op add *tmp52 :createBlockMaskRow:x -2
+   62 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   63 op or :createBlockMaskRow:result *tmp51 *tmp53
+   64 label *label343
+   65 label *label344
+   66 op shl *tmp51 :createBlockMaskRow:result 1
+   67 op add *tmp52 :createBlockMaskRow:x -3
+   68 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   69 op or :createBlockMaskRow:result *tmp51 *tmp53
+   70 label *label345
+   71 label *label346
+   72 op shl *tmp51 :createBlockMaskRow:result 1
+   73 op add *tmp52 :createBlockMaskRow:x -4
+   74 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   75 op or :createBlockMaskRow:result *tmp51 *tmp53
+   76 label *label347
+   77 label *label348
+   78 set :createBlockMaskRow*retval :createBlockMaskRow:result
+   79 jump *label349 always
+   80 label *label349
    81 set :createAdjacentMask:row2 :createBlockMaskRow*retval
    82 op add *tmp25 y 3
    83 set :createBlockMaskRow:x x
    84 set :createBlockMaskRow:y *tmp25
-    * setaddr :createBlockMaskRow*retaddr *label10 (h:*label10)
-    * call *label2 *invalid :createBlockMaskRow*retval (m:*label10) (h:*label10)
-    * label *label10
+   85 label *label350
+   86 label *label351
+   87 label *label352
+   88 op add *tmp52 :createBlockMaskRow:x 4
+   89 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   90 op or :createBlockMaskRow:result 0 *tmp53
+   91 label *label353
+   92 label *label354
+   93 op shl *tmp51 :createBlockMaskRow:result 1
+   94 op add *tmp52 :createBlockMaskRow:x 3
+   95 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   96 op or :createBlockMaskRow:result *tmp51 *tmp53
+   97 label *label355
+   98 label *label356
+   99 op shl *tmp51 :createBlockMaskRow:result 1
+  100 op add *tmp52 :createBlockMaskRow:x 2
+  101 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  102 op or :createBlockMaskRow:result *tmp51 *tmp53
+  103 label *label357
+  104 label *label358
+  105 op shl *tmp51 :createBlockMaskRow:result 1
+  106 op add *tmp52 :createBlockMaskRow:x 1
+  107 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  108 op or :createBlockMaskRow:result *tmp51 *tmp53
+  109 label *label359
+  110 label *label360
+  111 op shl *tmp51 :createBlockMaskRow:result 1
+  112 op add *tmp52 :createBlockMaskRow:x 0
+  113 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  114 op or :createBlockMaskRow:result *tmp51 *tmp53
+  115 label *label361
+  116 label *label362
+  117 op shl *tmp51 :createBlockMaskRow:result 1
+  118 op add *tmp52 :createBlockMaskRow:x -1
+  119 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  120 op or :createBlockMaskRow:result *tmp51 *tmp53
+  121 label *label363
+  122 label *label364
+  123 op shl *tmp51 :createBlockMaskRow:result 1
+  124 op add *tmp52 :createBlockMaskRow:x -2
+  125 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  126 op or :createBlockMaskRow:result *tmp51 *tmp53
+  127 label *label365
+  128 label *label366
+  129 op shl *tmp51 :createBlockMaskRow:result 1
+  130 op add *tmp52 :createBlockMaskRow:x -3
+  131 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  132 op or :createBlockMaskRow:result *tmp51 *tmp53
+  133 label *label367
+  134 label *label368
+  135 op shl *tmp51 :createBlockMaskRow:result 1
+  136 op add *tmp52 :createBlockMaskRow:x -4
+  137 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  138 op or :createBlockMaskRow:result *tmp51 *tmp53
+  139 label *label369
+  140 label *label370
+  141 set :createBlockMaskRow*retval :createBlockMaskRow:result
+  142 jump *label371 always
+  143 label *label371
   144 set :createAdjacentMask:row1 :createBlockMaskRow*retval
   145 set :createBlockMaskRow:x x
   146 label *label81
   147 label *label82
   148 op add *tmp27 y 2
   149 set :createBlockMaskRow:y *tmp27
-    * setaddr :createBlockMaskRow*retaddr *label83
-    * call *label2 *invalid :createBlockMaskRow*retval (m:*label83) (h:*label83)
-    * label *label83
+  150 label *label372
+  151 label *label373
+  152 label *label374
+  153 op add *tmp52 :createBlockMaskRow:x 4
+  154 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  155 op or :createBlockMaskRow:result 0 *tmp53
+  156 label *label375
+  157 label *label376
+  158 op shl *tmp51 :createBlockMaskRow:result 1
+  159 op add *tmp52 :createBlockMaskRow:x 3
+  160 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  161 op or :createBlockMaskRow:result *tmp51 *tmp53
+  162 label *label377
+  163 label *label378
+  164 op shl *tmp51 :createBlockMaskRow:result 1
+  165 op add *tmp52 :createBlockMaskRow:x 2
+  166 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  167 op or :createBlockMaskRow:result *tmp51 *tmp53
+  168 label *label379
+  169 label *label380
+  170 op shl *tmp51 :createBlockMaskRow:result 1
+  171 op add *tmp52 :createBlockMaskRow:x 1
+  172 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  173 op or :createBlockMaskRow:result *tmp51 *tmp53
+  174 label *label381
+  175 label *label382
+  176 op shl *tmp51 :createBlockMaskRow:result 1
+  177 op add *tmp52 :createBlockMaskRow:x 0
+  178 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  179 op or :createBlockMaskRow:result *tmp51 *tmp53
+  180 label *label383
+  181 label *label384
+  182 op shl *tmp51 :createBlockMaskRow:result 1
+  183 op add *tmp52 :createBlockMaskRow:x -1
+  184 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  185 op or :createBlockMaskRow:result *tmp51 *tmp53
+  186 label *label385
+  187 label *label386
+  188 op shl *tmp51 :createBlockMaskRow:result 1
+  189 op add *tmp52 :createBlockMaskRow:x -2
+  190 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  191 op or :createBlockMaskRow:result *tmp51 *tmp53
+  192 label *label387
+  193 label *label388
+  194 op shl *tmp51 :createBlockMaskRow:result 1
+  195 op add *tmp52 :createBlockMaskRow:x -3
+  196 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  197 op or :createBlockMaskRow:result *tmp51 *tmp53
+  198 label *label389
+  199 label *label390
+  200 op shl *tmp51 :createBlockMaskRow:result 1
+  201 op add *tmp52 :createBlockMaskRow:x -4
+  202 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  203 op or :createBlockMaskRow:result *tmp51 *tmp53
+  204 label *label391
+  205 label *label392
+  206 set :createBlockMaskRow*retval :createBlockMaskRow:result
+  207 jump *label393 always
+  208 label *label393
   209 op shl *tmp29 :createAdjacentMask:row1 1
   210 op or *tmp30 :createAdjacentMask:row2 *tmp29
   211 op shr *tmp31 :createAdjacentMask:row1 1
 
   219 label *label85
   220 op add *tmp27 y 1
   221 set :createBlockMaskRow:y *tmp27
-    * setaddr :createBlockMaskRow*retaddr *label86
-    * call *label2 *invalid :createBlockMaskRow*retval (m:*label86) (h:*label86)
-    * label *label86
+  222 label *label394
+  223 label *label395
+  224 label *label396
+  225 op add *tmp52 :createBlockMaskRow:x 4
+  226 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  227 op or :createBlockMaskRow:result 0 *tmp53
+  228 label *label397
+  229 label *label398
+  230 op shl *tmp51 :createBlockMaskRow:result 1
+  231 op add *tmp52 :createBlockMaskRow:x 3
+  232 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  233 op or :createBlockMaskRow:result *tmp51 *tmp53
+  234 label *label399
+  235 label *label400
+  236 op shl *tmp51 :createBlockMaskRow:result 1
+  237 op add *tmp52 :createBlockMaskRow:x 2
+  238 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  239 op or :createBlockMaskRow:result *tmp51 *tmp53
+  240 label *label401
+  241 label *label402
+  242 op shl *tmp51 :createBlockMaskRow:result 1
+  243 op add *tmp52 :createBlockMaskRow:x 1
+  244 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  245 op or :createBlockMaskRow:result *tmp51 *tmp53
+  246 label *label403
+  247 label *label404
+  248 op shl *tmp51 :createBlockMaskRow:result 1
+  249 op add *tmp52 :createBlockMaskRow:x 0
+  250 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  251 op or :createBlockMaskRow:result *tmp51 *tmp53
+  252 label *label405
+  253 label *label406
+  254 op shl *tmp51 :createBlockMaskRow:result 1
+  255 op add *tmp52 :createBlockMaskRow:x -1
+  256 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  257 op or :createBlockMaskRow:result *tmp51 *tmp53
+  258 label *label407
+  259 label *label408
+  260 op shl *tmp51 :createBlockMaskRow:result 1
+  261 op add *tmp52 :createBlockMaskRow:x -2
+  262 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  263 op or :createBlockMaskRow:result *tmp51 *tmp53
+  264 label *label409
+  265 label *label410
+  266 op shl *tmp51 :createBlockMaskRow:result 1
+  267 op add *tmp52 :createBlockMaskRow:x -3
+  268 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  269 op or :createBlockMaskRow:result *tmp51 *tmp53
+  270 label *label411
+  271 label *label412
+  272 op shl *tmp51 :createBlockMaskRow:result 1
+  273 op add *tmp52 :createBlockMaskRow:x -4
+  274 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  275 op or :createBlockMaskRow:result *tmp51 *tmp53
+  276 label *label413
+  277 label *label414
+  278 set :createBlockMaskRow*retval :createBlockMaskRow:result
+  279 jump *label415 always
+  280 label *label415
   281 op shl *tmp29 :createAdjacentMask:row1 1
   282 op or *tmp30 :createAdjacentMask:row2 *tmp29
   283 op shr *tmp31 :createAdjacentMask:row1 1
 
   292 label *label88
   293 op add *tmp27 y 0
   294 set :createBlockMaskRow:y *tmp27
-    * setaddr :createBlockMaskRow*retaddr *label89
-    * call *label2 *invalid :createBlockMaskRow*retval (m:*label89) (h:*label89)
-    * label *label89
+  295 label *label416
+  296 label *label417
+  297 label *label418
+  298 op add *tmp52 :createBlockMaskRow:x 4
+  299 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  300 op or :createBlockMaskRow:result 0 *tmp53
+  301 label *label419
+  302 label *label420
+  303 op shl *tmp51 :createBlockMaskRow:result 1
+  304 op add *tmp52 :createBlockMaskRow:x 3
+  305 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  306 op or :createBlockMaskRow:result *tmp51 *tmp53
+  307 label *label421
+  308 label *label422
+  309 op shl *tmp51 :createBlockMaskRow:result 1
+  310 op add *tmp52 :createBlockMaskRow:x 2
+  311 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  312 op or :createBlockMaskRow:result *tmp51 *tmp53
+  313 label *label423
+  314 label *label424
+  315 op shl *tmp51 :createBlockMaskRow:result 1
+  316 op add *tmp52 :createBlockMaskRow:x 1
+  317 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  318 op or :createBlockMaskRow:result *tmp51 *tmp53
+  319 label *label425
+  320 label *label426
+  321 op shl *tmp51 :createBlockMaskRow:result 1
+  322 op add *tmp52 :createBlockMaskRow:x 0
+  323 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  324 op or :createBlockMaskRow:result *tmp51 *tmp53
+  325 label *label427
+  326 label *label428
+  327 op shl *tmp51 :createBlockMaskRow:result 1
+  328 op add *tmp52 :createBlockMaskRow:x -1
+  329 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  330 op or :createBlockMaskRow:result *tmp51 *tmp53
+  331 label *label429
+  332 label *label430
+  333 op shl *tmp51 :createBlockMaskRow:result 1
+  334 op add *tmp52 :createBlockMaskRow:x -2
+  335 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  336 op or :createBlockMaskRow:result *tmp51 *tmp53
+  337 label *label431
+  338 label *label432
+  339 op shl *tmp51 :createBlockMaskRow:result 1
+  340 op add *tmp52 :createBlockMaskRow:x -3
+  341 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  342 op or :createBlockMaskRow:result *tmp51 *tmp53
+  343 label *label433
+  344 label *label434
+  345 op shl *tmp51 :createBlockMaskRow:result 1
+  346 op add *tmp52 :createBlockMaskRow:x -4
+  347 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  348 op or :createBlockMaskRow:result *tmp51 *tmp53
+  349 label *label435
+  350 label *label436
+  351 set :createBlockMaskRow*retval :createBlockMaskRow:result
+  352 jump *label437 always
+  353 label *label437
   354 op shl *tmp29 :createAdjacentMask:row1 1
   355 op or *tmp30 :createAdjacentMask:row2 *tmp29
   356 op shr *tmp31 :createAdjacentMask:row1 1
 
   365 label *label91
   366 op add *tmp27 y -1
   367 set :createBlockMaskRow:y *tmp27
-    * setaddr :createBlockMaskRow*retaddr *label92
-    * call *label2 *invalid :createBlockMaskRow*retval (m:*label92) (h:*label92)
-    * label *label92
+  368 label *label438
+  369 label *label439
+  370 label *label440
+  371 op add *tmp52 :createBlockMaskRow:x 4
+  372 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  373 op or :createBlockMaskRow:result 0 *tmp53
+  374 label *label441
+  375 label *label442
+  376 op shl *tmp51 :createBlockMaskRow:result 1
+  377 op add *tmp52 :createBlockMaskRow:x 3
+  378 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  379 op or :createBlockMaskRow:result *tmp51 *tmp53
+  380 label *label443
+  381 label *label444
+  382 op shl *tmp51 :createBlockMaskRow:result 1
+  383 op add *tmp52 :createBlockMaskRow:x 2
+  384 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  385 op or :createBlockMaskRow:result *tmp51 *tmp53
+  386 label *label445
+  387 label *label446
+  388 op shl *tmp51 :createBlockMaskRow:result 1
+  389 op add *tmp52 :createBlockMaskRow:x 1
+  390 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  391 op or :createBlockMaskRow:result *tmp51 *tmp53
+  392 label *label447
+  393 label *label448
+  394 op shl *tmp51 :createBlockMaskRow:result 1
+  395 op add *tmp52 :createBlockMaskRow:x 0
+  396 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  397 op or :createBlockMaskRow:result *tmp51 *tmp53
+  398 label *label449
+  399 label *label450
+  400 op shl *tmp51 :createBlockMaskRow:result 1
+  401 op add *tmp52 :createBlockMaskRow:x -1
+  402 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  403 op or :createBlockMaskRow:result *tmp51 *tmp53
+  404 label *label451
+  405 label *label452
+  406 op shl *tmp51 :createBlockMaskRow:result 1
+  407 op add *tmp52 :createBlockMaskRow:x -2
+  408 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  409 op or :createBlockMaskRow:result *tmp51 *tmp53
+  410 label *label453
+  411 label *label454
+  412 op shl *tmp51 :createBlockMaskRow:result 1
+  413 op add *tmp52 :createBlockMaskRow:x -3
+  414 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  415 op or :createBlockMaskRow:result *tmp51 *tmp53
+  416 label *label455
+  417 label *label456
+  418 op shl *tmp51 :createBlockMaskRow:result 1
+  419 op add *tmp52 :createBlockMaskRow:x -4
+  420 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  421 op or :createBlockMaskRow:result *tmp51 *tmp53
+  422 label *label457
+  423 label *label458
+  424 set :createBlockMaskRow*retval :createBlockMaskRow:result
+  425 jump *label459 always
+  426 label *label459
   427 op shl *tmp29 :createAdjacentMask:row1 1
   428 op or *tmp30 :createAdjacentMask:row2 *tmp29
   429 op shr *tmp31 :createAdjacentMask:row1 1
 
   438 label *label94
   439 op add *tmp27 y -2
   440 set :createBlockMaskRow:y *tmp27
-    * setaddr :createBlockMaskRow*retaddr *label95
-    * call *label2 *invalid :createBlockMaskRow*retval (m:*label95) (h:*label95)
-    * label *label95
+  441 label *label460
+  442 label *label461
+  443 label *label462
+  444 op add *tmp52 :createBlockMaskRow:x 4
+  445 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  446 op or :createBlockMaskRow:result 0 *tmp53
+  447 label *label463
+  448 label *label464
+  449 op shl *tmp51 :createBlockMaskRow:result 1
+  450 op add *tmp52 :createBlockMaskRow:x 3
+  451 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  452 op or :createBlockMaskRow:result *tmp51 *tmp53
+  453 label *label465
+  454 label *label466
+  455 op shl *tmp51 :createBlockMaskRow:result 1
+  456 op add *tmp52 :createBlockMaskRow:x 2
+  457 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  458 op or :createBlockMaskRow:result *tmp51 *tmp53
+  459 label *label467
+  460 label *label468
+  461 op shl *tmp51 :createBlockMaskRow:result 1
+  462 op add *tmp52 :createBlockMaskRow:x 1
+  463 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  464 op or :createBlockMaskRow:result *tmp51 *tmp53
+  465 label *label469
+  466 label *label470
+  467 op shl *tmp51 :createBlockMaskRow:result 1
+  468 op add *tmp52 :createBlockMaskRow:x 0
+  469 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  470 op or :createBlockMaskRow:result *tmp51 *tmp53
+  471 label *label471
+  472 label *label472
+  473 op shl *tmp51 :createBlockMaskRow:result 1
+  474 op add *tmp52 :createBlockMaskRow:x -1
+  475 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  476 op or :createBlockMaskRow:result *tmp51 *tmp53
+  477 label *label473
+  478 label *label474
+  479 op shl *tmp51 :createBlockMaskRow:result 1
+  480 op add *tmp52 :createBlockMaskRow:x -2
+  481 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  482 op or :createBlockMaskRow:result *tmp51 *tmp53
+  483 label *label475
+  484 label *label476
+  485 op shl *tmp51 :createBlockMaskRow:result 1
+  486 op add *tmp52 :createBlockMaskRow:x -3
+  487 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  488 op or :createBlockMaskRow:result *tmp51 *tmp53
+  489 label *label477
+  490 label *label478
+  491 op shl *tmp51 :createBlockMaskRow:result 1
+  492 op add *tmp52 :createBlockMaskRow:x -4
+  493 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  494 op or :createBlockMaskRow:result *tmp51 *tmp53
+  495 label *label479
+  496 label *label480
+  497 set :createBlockMaskRow*retval :createBlockMaskRow:result
+  498 jump *label481 always
+  499 label *label481
   500 op shl *tmp29 :createAdjacentMask:row1 1
   501 op or *tmp30 :createAdjacentMask:row2 *tmp29
   502 op shr *tmp31 :createAdjacentMask:row1 1
 
   511 label *label97
   512 op add *tmp27 y -3
   513 set :createBlockMaskRow:y *tmp27
-    * setaddr :createBlockMaskRow*retaddr *label98
-    * call *label2 *invalid :createBlockMaskRow*retval (m:*label98) (h:*label98)
-    * label *label98
+  514 label *label482
+  515 label *label483
+  516 label *label484
+  517 op add *tmp52 :createBlockMaskRow:x 4
+  518 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  519 op or :createBlockMaskRow:result 0 *tmp53
+  520 label *label485
+  521 label *label486
+  522 op shl *tmp51 :createBlockMaskRow:result 1
+  523 op add *tmp52 :createBlockMaskRow:x 3
+  524 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  525 op or :createBlockMaskRow:result *tmp51 *tmp53
+  526 label *label487
+  527 label *label488
+  528 op shl *tmp51 :createBlockMaskRow:result 1
+  529 op add *tmp52 :createBlockMaskRow:x 2
+  530 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  531 op or :createBlockMaskRow:result *tmp51 *tmp53
+  532 label *label489
+  533 label *label490
+  534 op shl *tmp51 :createBlockMaskRow:result 1
+  535 op add *tmp52 :createBlockMaskRow:x 1
+  536 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  537 op or :createBlockMaskRow:result *tmp51 *tmp53
+  538 label *label491
+  539 label *label492
+  540 op shl *tmp51 :createBlockMaskRow:result 1
+  541 op add *tmp52 :createBlockMaskRow:x 0
+  542 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  543 op or :createBlockMaskRow:result *tmp51 *tmp53
+  544 label *label493
+  545 label *label494
+  546 op shl *tmp51 :createBlockMaskRow:result 1
+  547 op add *tmp52 :createBlockMaskRow:x -1
+  548 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  549 op or :createBlockMaskRow:result *tmp51 *tmp53
+  550 label *label495
+  551 label *label496
+  552 op shl *tmp51 :createBlockMaskRow:result 1
+  553 op add *tmp52 :createBlockMaskRow:x -2
+  554 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  555 op or :createBlockMaskRow:result *tmp51 *tmp53
+  556 label *label497
+  557 label *label498
+  558 op shl *tmp51 :createBlockMaskRow:result 1
+  559 op add *tmp52 :createBlockMaskRow:x -3
+  560 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  561 op or :createBlockMaskRow:result *tmp51 *tmp53
+  562 label *label499
+  563 label *label500
+  564 op shl *tmp51 :createBlockMaskRow:result 1
+  565 op add *tmp52 :createBlockMaskRow:x -4
+  566 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  567 op or :createBlockMaskRow:result *tmp51 *tmp53
+  568 label *label501
+  569 label *label502
+  570 set :createBlockMaskRow*retval :createBlockMaskRow:result
+  571 jump *label503 always
+  572 label *label503
   573 op shl *tmp29 :createAdjacentMask:row1 1
   574 op or *tmp30 :createAdjacentMask:row2 *tmp29
   575 op shr *tmp31 :createAdjacentMask:row1 1
 
   584 label *label100
   585 op add *tmp27 y -4
   586 set :createBlockMaskRow:y *tmp27
-    * setaddr :createBlockMaskRow*retaddr *label101
-    * call *label2 *invalid :createBlockMaskRow*retval (m:*label101) (h:*label101)
-    * label *label101
+  587 label *label504
+  588 label *label505
+  589 label *label506
+  590 op add *tmp52 :createBlockMaskRow:x 4
+  591 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  592 op or :createBlockMaskRow:result 0 *tmp53
+  593 label *label507
+  594 label *label508
+  595 op shl *tmp51 :createBlockMaskRow:result 1
+  596 op add *tmp52 :createBlockMaskRow:x 3
+  597 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  598 op or :createBlockMaskRow:result *tmp51 *tmp53
+  599 label *label509
+  600 label *label510
+  601 op shl *tmp51 :createBlockMaskRow:result 1
+  602 op add *tmp52 :createBlockMaskRow:x 2
+  603 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  604 op or :createBlockMaskRow:result *tmp51 *tmp53
+  605 label *label511
+  606 label *label512
+  607 op shl *tmp51 :createBlockMaskRow:result 1
+  608 op add *tmp52 :createBlockMaskRow:x 1
+  609 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  610 op or :createBlockMaskRow:result *tmp51 *tmp53
+  611 label *label513
+  612 label *label514
+  613 op shl *tmp51 :createBlockMaskRow:result 1
+  614 op add *tmp52 :createBlockMaskRow:x 0
+  615 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  616 op or :createBlockMaskRow:result *tmp51 *tmp53
+  617 label *label515
+  618 label *label516
+  619 op shl *tmp51 :createBlockMaskRow:result 1
+  620 op add *tmp52 :createBlockMaskRow:x -1
+  621 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  622 op or :createBlockMaskRow:result *tmp51 *tmp53
+  623 label *label517
+  624 label *label518
+  625 op shl *tmp51 :createBlockMaskRow:result 1
+  626 op add *tmp52 :createBlockMaskRow:x -2
+  627 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  628 op or :createBlockMaskRow:result *tmp51 *tmp53
+  629 label *label519
+  630 label *label520
+  631 op shl *tmp51 :createBlockMaskRow:result 1
+  632 op add *tmp52 :createBlockMaskRow:x -3
+  633 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  634 op or :createBlockMaskRow:result *tmp51 *tmp53
+  635 label *label521
+  636 label *label522
+  637 op shl *tmp51 :createBlockMaskRow:result 1
+  638 op add *tmp52 :createBlockMaskRow:x -4
+  639 ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  640 op or :createBlockMaskRow:result *tmp51 *tmp53
+  641 label *label523
+  642 label *label524
+  643 set :createBlockMaskRow*retval :createBlockMaskRow:result
+  644 jump *label525 always
+  645 label *label525
   646 op shl *tmp29 :createAdjacentMask:row1 1
   647 op or *tmp30 :createAdjacentMask:row2 *tmp29
   648 op shr *tmp31 :createAdjacentMask:row1 1
 
  1195 print *tmp50
  1196 printflush message1
  1197 end
-    * label *label2
-    * label *label33
-    * label *label34
-    * op add *tmp52 :createBlockMaskRow:x 4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
-    * op or :createBlockMaskRow:result 0 *tmp53
-    * label *label35
-    * label *label36
-    * op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
-    * op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label37
-    * label *label38
-    * op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
-    * op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label39
-    * label *label40
-    * op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
-    * op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label41
-    * label *label42
-    * op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 0
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
-    * op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label43
-    * label *label44
-    * op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
-    * op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label45
-    * label *label46
-    * op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
-    * op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label47
-    * label *label48
-    * op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
-    * op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label49
-    * label *label50
-    * op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
-    * op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label51
-    * label *label28
-    * set :createBlockMaskRow*retval :createBlockMaskRow:result
-    * jump *label25 always
-    * label *label25
-    * return :createBlockMaskRow*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    22 label *label328
    23 label *label329
    24 label *label330
-    * op add *tmp52 :createBlockMaskRow:x 4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   25 op add *tmp52 x 4
+   26 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    27 op or :createBlockMaskRow:result 0 *tmp53
    28 label *label331
    29 label *label332
    30 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   31 op add *tmp52 x 3
+   32 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    33 op or :createBlockMaskRow:result *tmp51 *tmp53
    34 label *label333
    35 label *label334
    36 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   37 op add *tmp52 x 2
+   38 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    39 op or :createBlockMaskRow:result *tmp51 *tmp53
    40 label *label335
    41 label *label336
    42 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   43 op add *tmp52 x 1
+   44 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    45 op or :createBlockMaskRow:result *tmp51 *tmp53
    46 label *label337
    47 label *label338
    48 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 0
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   49 op add *tmp52 x 0
+   50 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    51 op or :createBlockMaskRow:result *tmp51 *tmp53
    52 label *label339
    53 label *label340
    54 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   55 op add *tmp52 x -1
+   56 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    57 op or :createBlockMaskRow:result *tmp51 *tmp53
    58 label *label341
    59 label *label342
    60 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   61 op add *tmp52 x -2
+   62 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    63 op or :createBlockMaskRow:result *tmp51 *tmp53
    64 label *label343
    65 label *label344
    66 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   67 op add *tmp52 x -3
+   68 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    69 op or :createBlockMaskRow:result *tmp51 *tmp53
    70 label *label345
    71 label *label346
    72 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   73 op add *tmp52 x -4
+   74 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    75 op or :createBlockMaskRow:result *tmp51 *tmp53
    76 label *label347
    77 label *label348
    78 set :createBlockMaskRow*retval :createBlockMaskRow:result
    79 jump *label349 always
    80 label *label349
-    * set :createAdjacentMask:row2 :createBlockMaskRow*retval
+   81 set :createAdjacentMask:row2 :createBlockMaskRow:result
    82 op add *tmp25 y 3
    83 set :createBlockMaskRow:x x
    84 set :createBlockMaskRow:y *tmp25
    85 label *label350
    86 label *label351
    87 label *label352
-    * op add *tmp52 :createBlockMaskRow:x 4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   88 op add *tmp52 x 4
+   89 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
    90 op or :createBlockMaskRow:result 0 *tmp53
    91 label *label353
    92 label *label354
    93 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+   94 op add *tmp52 x 3
+   95 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
    96 op or :createBlockMaskRow:result *tmp51 *tmp53
    97 label *label355
    98 label *label356
    99 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  100 op add *tmp52 x 2
+  101 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
   102 op or :createBlockMaskRow:result *tmp51 *tmp53
   103 label *label357
   104 label *label358
   105 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  106 op add *tmp52 x 1
+  107 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
   108 op or :createBlockMaskRow:result *tmp51 *tmp53
   109 label *label359
   110 label *label360
   111 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 0
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  112 op add *tmp52 x 0
+  113 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
   114 op or :createBlockMaskRow:result *tmp51 *tmp53
   115 label *label361
   116 label *label362
   117 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  118 op add *tmp52 x -1
+  119 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
   120 op or :createBlockMaskRow:result *tmp51 *tmp53
   121 label *label363
   122 label *label364
   123 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  124 op add *tmp52 x -2
+  125 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
   126 op or :createBlockMaskRow:result *tmp51 *tmp53
   127 label *label365
   128 label *label366
   129 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  130 op add *tmp52 x -3
+  131 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
   132 op or :createBlockMaskRow:result *tmp51 *tmp53
   133 label *label367
   134 label *label368
   135 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  136 op add *tmp52 x -4
+  137 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
   138 op or :createBlockMaskRow:result *tmp51 *tmp53
   139 label *label369
   140 label *label370
   141 set :createBlockMaskRow*retval :createBlockMaskRow:result
   142 jump *label371 always
   143 label *label371
-    * set :createAdjacentMask:row1 :createBlockMaskRow*retval
+  144 set :createAdjacentMask:row1 :createBlockMaskRow:result
   145 set :createBlockMaskRow:x x
   146 label *label81
   147 label *label82
 
   150 label *label372
   151 label *label373
   152 label *label374
-    * op add *tmp52 :createBlockMaskRow:x 4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  153 op add *tmp52 x 4
+  154 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   155 op or :createBlockMaskRow:result 0 *tmp53
   156 label *label375
   157 label *label376
   158 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  159 op add *tmp52 x 3
+  160 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   161 op or :createBlockMaskRow:result *tmp51 *tmp53
   162 label *label377
   163 label *label378
   164 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  165 op add *tmp52 x 2
+  166 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   167 op or :createBlockMaskRow:result *tmp51 *tmp53
   168 label *label379
   169 label *label380
   170 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  171 op add *tmp52 x 1
+  172 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   173 op or :createBlockMaskRow:result *tmp51 *tmp53
   174 label *label381
   175 label *label382
   176 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 0
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  177 op add *tmp52 x 0
+  178 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   179 op or :createBlockMaskRow:result *tmp51 *tmp53
   180 label *label383
   181 label *label384
   182 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  183 op add *tmp52 x -1
+  184 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   185 op or :createBlockMaskRow:result *tmp51 *tmp53
   186 label *label385
   187 label *label386
   188 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  189 op add *tmp52 x -2
+  190 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   191 op or :createBlockMaskRow:result *tmp51 *tmp53
   192 label *label387
   193 label *label388
   194 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  195 op add *tmp52 x -3
+  196 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   197 op or :createBlockMaskRow:result *tmp51 *tmp53
   198 label *label389
   199 label *label390
   200 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  201 op add *tmp52 x -4
+  202 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   203 op or :createBlockMaskRow:result *tmp51 *tmp53
   204 label *label391
   205 label *label392
 
   210 op or *tmp30 :createAdjacentMask:row2 *tmp29
   211 op shr *tmp31 :createAdjacentMask:row1 1
   212 op or *tmp32 *tmp30 *tmp31
-    * op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
+  213 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
   214 op and *tmp35 :createAdjacentMask:mask 0xFE
   215 op or :createAdjacentMask:result 0 *tmp35
   216 set :createAdjacentMask:row2 :createAdjacentMask:row1
-    * set :createAdjacentMask:row1 :createBlockMaskRow*retval
+  217 set :createAdjacentMask:row1 :createBlockMaskRow:result
   218 label *label84
   219 label *label85
   220 op add *tmp27 y 1
 
   222 label *label394
   223 label *label395
   224 label *label396
-    * op add *tmp52 :createBlockMaskRow:x 4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  225 op add *tmp52 x 4
+  226 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   227 op or :createBlockMaskRow:result 0 *tmp53
   228 label *label397
   229 label *label398
   230 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  231 op add *tmp52 x 3
+  232 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   233 op or :createBlockMaskRow:result *tmp51 *tmp53
   234 label *label399
   235 label *label400
   236 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  237 op add *tmp52 x 2
+  238 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   239 op or :createBlockMaskRow:result *tmp51 *tmp53
   240 label *label401
   241 label *label402
   242 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  243 op add *tmp52 x 1
+  244 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   245 op or :createBlockMaskRow:result *tmp51 *tmp53
   246 label *label403
   247 label *label404
   248 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 0
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  249 op add *tmp52 x 0
+  250 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   251 op or :createBlockMaskRow:result *tmp51 *tmp53
   252 label *label405
   253 label *label406
   254 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  255 op add *tmp52 x -1
+  256 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   257 op or :createBlockMaskRow:result *tmp51 *tmp53
   258 label *label407
   259 label *label408
   260 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  261 op add *tmp52 x -2
+  262 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   263 op or :createBlockMaskRow:result *tmp51 *tmp53
   264 label *label409
   265 label *label410
   266 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  267 op add *tmp52 x -3
+  268 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   269 op or :createBlockMaskRow:result *tmp51 *tmp53
   270 label *label411
   271 label *label412
   272 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  273 op add *tmp52 x -4
+  274 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   275 op or :createBlockMaskRow:result *tmp51 *tmp53
   276 label *label413
   277 label *label414
 
   282 op or *tmp30 :createAdjacentMask:row2 *tmp29
   283 op shr *tmp31 :createAdjacentMask:row1 1
   284 op or *tmp32 *tmp30 *tmp31
-    * op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
+  285 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
   286 op shl *tmp34 :createAdjacentMask:result 7
   287 op and *tmp35 :createAdjacentMask:mask 0xFE
   288 op or :createAdjacentMask:result *tmp34 *tmp35
   289 set :createAdjacentMask:row2 :createAdjacentMask:row1
-    * set :createAdjacentMask:row1 :createBlockMaskRow*retval
+  290 set :createAdjacentMask:row1 :createBlockMaskRow:result
   291 label *label87
   292 label *label88
   293 op add *tmp27 y 0
 
   295 label *label416
   296 label *label417
   297 label *label418
-    * op add *tmp52 :createBlockMaskRow:x 4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  298 op add *tmp52 x 4
+  299 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   300 op or :createBlockMaskRow:result 0 *tmp53
   301 label *label419
   302 label *label420
   303 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  304 op add *tmp52 x 3
+  305 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   306 op or :createBlockMaskRow:result *tmp51 *tmp53
   307 label *label421
   308 label *label422
   309 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  310 op add *tmp52 x 2
+  311 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   312 op or :createBlockMaskRow:result *tmp51 *tmp53
   313 label *label423
   314 label *label424
   315 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  316 op add *tmp52 x 1
+  317 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   318 op or :createBlockMaskRow:result *tmp51 *tmp53
   319 label *label425
   320 label *label426
   321 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 0
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  322 op add *tmp52 x 0
+  323 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   324 op or :createBlockMaskRow:result *tmp51 *tmp53
   325 label *label427
   326 label *label428
   327 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  328 op add *tmp52 x -1
+  329 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   330 op or :createBlockMaskRow:result *tmp51 *tmp53
   331 label *label429
   332 label *label430
   333 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  334 op add *tmp52 x -2
+  335 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   336 op or :createBlockMaskRow:result *tmp51 *tmp53
   337 label *label431
   338 label *label432
   339 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  340 op add *tmp52 x -3
+  341 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   342 op or :createBlockMaskRow:result *tmp51 *tmp53
   343 label *label433
   344 label *label434
   345 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  346 op add *tmp52 x -4
+  347 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   348 op or :createBlockMaskRow:result *tmp51 *tmp53
   349 label *label435
   350 label *label436
 
   355 op or *tmp30 :createAdjacentMask:row2 *tmp29
   356 op shr *tmp31 :createAdjacentMask:row1 1
   357 op or *tmp32 *tmp30 *tmp31
-    * op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
+  358 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
   359 op shl *tmp34 :createAdjacentMask:result 7
   360 op and *tmp35 :createAdjacentMask:mask 0xFE
   361 op or :createAdjacentMask:result *tmp34 *tmp35
   362 set :createAdjacentMask:row2 :createAdjacentMask:row1
-    * set :createAdjacentMask:row1 :createBlockMaskRow*retval
+  363 set :createAdjacentMask:row1 :createBlockMaskRow:result
   364 label *label90
   365 label *label91
   366 op add *tmp27 y -1
 
   368 label *label438
   369 label *label439
   370 label *label440
-    * op add *tmp52 :createBlockMaskRow:x 4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  371 op add *tmp52 x 4
+  372 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   373 op or :createBlockMaskRow:result 0 *tmp53
   374 label *label441
   375 label *label442
   376 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  377 op add *tmp52 x 3
+  378 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   379 op or :createBlockMaskRow:result *tmp51 *tmp53
   380 label *label443
   381 label *label444
   382 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  383 op add *tmp52 x 2
+  384 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   385 op or :createBlockMaskRow:result *tmp51 *tmp53
   386 label *label445
   387 label *label446
   388 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  389 op add *tmp52 x 1
+  390 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   391 op or :createBlockMaskRow:result *tmp51 *tmp53
   392 label *label447
   393 label *label448
   394 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 0
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  395 op add *tmp52 x 0
+  396 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   397 op or :createBlockMaskRow:result *tmp51 *tmp53
   398 label *label449
   399 label *label450
   400 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  401 op add *tmp52 x -1
+  402 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   403 op or :createBlockMaskRow:result *tmp51 *tmp53
   404 label *label451
   405 label *label452
   406 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  407 op add *tmp52 x -2
+  408 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   409 op or :createBlockMaskRow:result *tmp51 *tmp53
   410 label *label453
   411 label *label454
   412 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  413 op add *tmp52 x -3
+  414 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   415 op or :createBlockMaskRow:result *tmp51 *tmp53
   416 label *label455
   417 label *label456
   418 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  419 op add *tmp52 x -4
+  420 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   421 op or :createBlockMaskRow:result *tmp51 *tmp53
   422 label *label457
   423 label *label458
 
   428 op or *tmp30 :createAdjacentMask:row2 *tmp29
   429 op shr *tmp31 :createAdjacentMask:row1 1
   430 op or *tmp32 *tmp30 *tmp31
-    * op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
+  431 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
   432 op shl *tmp34 :createAdjacentMask:result 7
   433 op and *tmp35 :createAdjacentMask:mask 0xFE
   434 op or :createAdjacentMask:result *tmp34 *tmp35
   435 set :createAdjacentMask:row2 :createAdjacentMask:row1
-    * set :createAdjacentMask:row1 :createBlockMaskRow*retval
+  436 set :createAdjacentMask:row1 :createBlockMaskRow:result
   437 label *label93
   438 label *label94
   439 op add *tmp27 y -2
 
   441 label *label460
   442 label *label461
   443 label *label462
-    * op add *tmp52 :createBlockMaskRow:x 4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  444 op add *tmp52 x 4
+  445 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   446 op or :createBlockMaskRow:result 0 *tmp53
   447 label *label463
   448 label *label464
   449 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  450 op add *tmp52 x 3
+  451 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   452 op or :createBlockMaskRow:result *tmp51 *tmp53
   453 label *label465
   454 label *label466
   455 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  456 op add *tmp52 x 2
+  457 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   458 op or :createBlockMaskRow:result *tmp51 *tmp53
   459 label *label467
   460 label *label468
   461 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  462 op add *tmp52 x 1
+  463 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   464 op or :createBlockMaskRow:result *tmp51 *tmp53
   465 label *label469
   466 label *label470
   467 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 0
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  468 op add *tmp52 x 0
+  469 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   470 op or :createBlockMaskRow:result *tmp51 *tmp53
   471 label *label471
   472 label *label472
   473 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  474 op add *tmp52 x -1
+  475 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   476 op or :createBlockMaskRow:result *tmp51 *tmp53
   477 label *label473
   478 label *label474
   479 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  480 op add *tmp52 x -2
+  481 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   482 op or :createBlockMaskRow:result *tmp51 *tmp53
   483 label *label475
   484 label *label476
   485 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  486 op add *tmp52 x -3
+  487 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   488 op or :createBlockMaskRow:result *tmp51 *tmp53
   489 label *label477
   490 label *label478
   491 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  492 op add *tmp52 x -4
+  493 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   494 op or :createBlockMaskRow:result *tmp51 *tmp53
   495 label *label479
   496 label *label480
 
   501 op or *tmp30 :createAdjacentMask:row2 *tmp29
   502 op shr *tmp31 :createAdjacentMask:row1 1
   503 op or *tmp32 *tmp30 *tmp31
-    * op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
+  504 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
   505 op shl *tmp34 :createAdjacentMask:result 7
   506 op and *tmp35 :createAdjacentMask:mask 0xFE
   507 op or :createAdjacentMask:result *tmp34 *tmp35
   508 set :createAdjacentMask:row2 :createAdjacentMask:row1
-    * set :createAdjacentMask:row1 :createBlockMaskRow*retval
+  509 set :createAdjacentMask:row1 :createBlockMaskRow:result
   510 label *label96
   511 label *label97
   512 op add *tmp27 y -3
 
   514 label *label482
   515 label *label483
   516 label *label484
-    * op add *tmp52 :createBlockMaskRow:x 4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  517 op add *tmp52 x 4
+  518 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   519 op or :createBlockMaskRow:result 0 *tmp53
   520 label *label485
   521 label *label486
   522 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  523 op add *tmp52 x 3
+  524 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   525 op or :createBlockMaskRow:result *tmp51 *tmp53
   526 label *label487
   527 label *label488
   528 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  529 op add *tmp52 x 2
+  530 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   531 op or :createBlockMaskRow:result *tmp51 *tmp53
   532 label *label489
   533 label *label490
   534 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  535 op add *tmp52 x 1
+  536 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   537 op or :createBlockMaskRow:result *tmp51 *tmp53
   538 label *label491
   539 label *label492
   540 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 0
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  541 op add *tmp52 x 0
+  542 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   543 op or :createBlockMaskRow:result *tmp51 *tmp53
   544 label *label493
   545 label *label494
   546 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  547 op add *tmp52 x -1
+  548 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   549 op or :createBlockMaskRow:result *tmp51 *tmp53
   550 label *label495
   551 label *label496
   552 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  553 op add *tmp52 x -2
+  554 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   555 op or :createBlockMaskRow:result *tmp51 *tmp53
   556 label *label497
   557 label *label498
   558 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  559 op add *tmp52 x -3
+  560 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   561 op or :createBlockMaskRow:result *tmp51 *tmp53
   562 label *label499
   563 label *label500
   564 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  565 op add *tmp52 x -4
+  566 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   567 op or :createBlockMaskRow:result *tmp51 *tmp53
   568 label *label501
   569 label *label502
 
   574 op or *tmp30 :createAdjacentMask:row2 *tmp29
   575 op shr *tmp31 :createAdjacentMask:row1 1
   576 op or *tmp32 *tmp30 *tmp31
-    * op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
+  577 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
   578 op shl *tmp34 :createAdjacentMask:result 7
   579 op and *tmp35 :createAdjacentMask:mask 0xFE
   580 op or :createAdjacentMask:result *tmp34 *tmp35
   581 set :createAdjacentMask:row2 :createAdjacentMask:row1
-    * set :createAdjacentMask:row1 :createBlockMaskRow*retval
+  582 set :createAdjacentMask:row1 :createBlockMaskRow:result
   583 label *label99
   584 label *label100
   585 op add *tmp27 y -4
 
   587 label *label504
   588 label *label505
   589 label *label506
-    * op add *tmp52 :createBlockMaskRow:x 4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  590 op add *tmp52 x 4
+  591 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   592 op or :createBlockMaskRow:result 0 *tmp53
   593 label *label507
   594 label *label508
   595 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  596 op add *tmp52 x 3
+  597 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   598 op or :createBlockMaskRow:result *tmp51 *tmp53
   599 label *label509
   600 label *label510
   601 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  602 op add *tmp52 x 2
+  603 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   604 op or :createBlockMaskRow:result *tmp51 *tmp53
   605 label *label511
   606 label *label512
   607 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  608 op add *tmp52 x 1
+  609 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   610 op or :createBlockMaskRow:result *tmp51 *tmp53
   611 label *label513
   612 label *label514
   613 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x 0
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  614 op add *tmp52 x 0
+  615 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   616 op or :createBlockMaskRow:result *tmp51 *tmp53
   617 label *label515
   618 label *label516
   619 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -1
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  620 op add *tmp52 x -1
+  621 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   622 op or :createBlockMaskRow:result *tmp51 *tmp53
   623 label *label517
   624 label *label518
   625 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -2
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  626 op add *tmp52 x -2
+  627 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   628 op or :createBlockMaskRow:result *tmp51 *tmp53
   629 label *label519
   630 label *label520
   631 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -3
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  632 op add *tmp52 x -3
+  633 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   634 op or :createBlockMaskRow:result *tmp51 *tmp53
   635 label *label521
   636 label *label522
   637 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 :createBlockMaskRow:x -4
-    * ucontrol getBlock *tmp52 :createBlockMaskRow:y 0 *tmp53 0
+  638 op add *tmp52 x -4
+  639 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   640 op or :createBlockMaskRow:result *tmp51 *tmp53
   641 label *label523
   642 label *label524
 
   647 op or *tmp30 :createAdjacentMask:row2 *tmp29
   648 op shr *tmp31 :createAdjacentMask:row1 1
   649 op or *tmp32 *tmp30 *tmp31
-    * op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow*retval
+  650 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
   651 op shl *tmp34 :createAdjacentMask:result 7
   652 op and *tmp35 :createAdjacentMask:mask 0xFE
   653 op or :createAdjacentMask:result *tmp34 *tmp35

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-21 instructions):
 
    17 write false processor1 ":createTerrainMask*finished"
    18 write 1 processor1 "@counter"
    19 op add *tmp23 y 4
-    * set :createBlockMaskRow:x x
-    * set :createBlockMaskRow:y *tmp23
    20 label *label328
    21 label *label329
    22 label *label330
 
    73 op or :createBlockMaskRow:result *tmp51 *tmp53
    74 label *label347
    75 label *label348
-    * set :createBlockMaskRow*retval :createBlockMaskRow:result
    76 jump *label349 always
    77 label *label349
    78 set :createAdjacentMask:row2 :createBlockMaskRow:result
    79 op add *tmp25 y 3
-    * set :createBlockMaskRow:x x
-    * set :createBlockMaskRow:y *tmp25
    80 label *label350
    81 label *label351
    82 label *label352
 
   133 op or :createBlockMaskRow:result *tmp51 *tmp53
   134 label *label369
   135 label *label370
-    * set :createBlockMaskRow*retval :createBlockMaskRow:result
   136 jump *label371 always
   137 label *label371
   138 set :createAdjacentMask:row1 :createBlockMaskRow:result
-    * set :createBlockMaskRow:x x
   139 label *label81
   140 label *label82
   141 op add *tmp27 y 2
-    * set :createBlockMaskRow:y *tmp27
   142 label *label372
   143 label *label373
   144 label *label374
 
   195 op or :createBlockMaskRow:result *tmp51 *tmp53
   196 label *label391
   197 label *label392
-    * set :createBlockMaskRow*retval :createBlockMaskRow:result
   198 jump *label393 always
   199 label *label393
   200 op shl *tmp29 :createAdjacentMask:row1 1
 
   209 label *label84
   210 label *label85
   211 op add *tmp27 y 1
-    * set :createBlockMaskRow:y *tmp27
   212 label *label394
   213 label *label395
   214 label *label396
 
   265 op or :createBlockMaskRow:result *tmp51 *tmp53
   266 label *label413
   267 label *label414
-    * set :createBlockMaskRow*retval :createBlockMaskRow:result
   268 jump *label415 always
   269 label *label415
   270 op shl *tmp29 :createAdjacentMask:row1 1
 
   280 label *label87
   281 label *label88
   282 op add *tmp27 y 0
-    * set :createBlockMaskRow:y *tmp27
   283 label *label416
   284 label *label417
   285 label *label418
 
   336 op or :createBlockMaskRow:result *tmp51 *tmp53
   337 label *label435
   338 label *label436
-    * set :createBlockMaskRow*retval :createBlockMaskRow:result
   339 jump *label437 always
   340 label *label437
   341 op shl *tmp29 :createAdjacentMask:row1 1
 
   351 label *label90
   352 label *label91
   353 op add *tmp27 y -1
-    * set :createBlockMaskRow:y *tmp27
   354 label *label438
   355 label *label439
   356 label *label440
 
   407 op or :createBlockMaskRow:result *tmp51 *tmp53
   408 label *label457
   409 label *label458
-    * set :createBlockMaskRow*retval :createBlockMaskRow:result
   410 jump *label459 always
   411 label *label459
   412 op shl *tmp29 :createAdjacentMask:row1 1
 
   422 label *label93
   423 label *label94
   424 op add *tmp27 y -2
-    * set :createBlockMaskRow:y *tmp27
   425 label *label460
   426 label *label461
   427 label *label462
 
   478 op or :createBlockMaskRow:result *tmp51 *tmp53
   479 label *label479
   480 label *label480
-    * set :createBlockMaskRow*retval :createBlockMaskRow:result
   481 jump *label481 always
   482 label *label481
   483 op shl *tmp29 :createAdjacentMask:row1 1
 
   493 label *label96
   494 label *label97
   495 op add *tmp27 y -3
-    * set :createBlockMaskRow:y *tmp27
   496 label *label482
   497 label *label483
   498 label *label484
 
   549 op or :createBlockMaskRow:result *tmp51 *tmp53
   550 label *label501
   551 label *label502
-    * set :createBlockMaskRow*retval :createBlockMaskRow:result
   552 jump *label503 always
   553 label *label503
   554 op shl *tmp29 :createAdjacentMask:row1 1
 
   564 label *label99
   565 label *label100
   566 op add *tmp27 y -4
-    * set :createBlockMaskRow:y *tmp27
   567 label *label504
   568 label *label505
   569 label *label506
 
   620 op or :createBlockMaskRow:result *tmp51 *tmp53
   621 label *label523
   622 label *label524
-    * set :createBlockMaskRow*retval :createBlockMaskRow:result
   623 jump *label525 always
   624 label *label525
   625 op shl *tmp29 :createAdjacentMask:row1 1

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-10 instructions):
 
    73 op or :createBlockMaskRow:result *tmp51 *tmp53
    74 label *label347
    75 label *label348
-    * jump *label349 always
    76 label *label349
    77 set :createAdjacentMask:row2 :createBlockMaskRow:result
    78 op add *tmp25 y 3
 
   132 op or :createBlockMaskRow:result *tmp51 *tmp53
   133 label *label369
   134 label *label370
-    * jump *label371 always
   135 label *label371
   136 set :createAdjacentMask:row1 :createBlockMaskRow:result
   137 label *label81
 
   193 op or :createBlockMaskRow:result *tmp51 *tmp53
   194 label *label391
   195 label *label392
-    * jump *label393 always
   196 label *label393
   197 op shl *tmp29 :createAdjacentMask:row1 1
   198 op or *tmp30 :createAdjacentMask:row2 *tmp29
 
   262 op or :createBlockMaskRow:result *tmp51 *tmp53
   263 label *label413
   264 label *label414
-    * jump *label415 always
   265 label *label415
   266 op shl *tmp29 :createAdjacentMask:row1 1
   267 op or *tmp30 :createAdjacentMask:row2 *tmp29
 
   332 op or :createBlockMaskRow:result *tmp51 *tmp53
   333 label *label435
   334 label *label436
-    * jump *label437 always
   335 label *label437
   336 op shl *tmp29 :createAdjacentMask:row1 1
   337 op or *tmp30 :createAdjacentMask:row2 *tmp29
 
   402 op or :createBlockMaskRow:result *tmp51 *tmp53
   403 label *label457
   404 label *label458
-    * jump *label459 always
   405 label *label459
   406 op shl *tmp29 :createAdjacentMask:row1 1
   407 op or *tmp30 :createAdjacentMask:row2 *tmp29
 
   472 op or :createBlockMaskRow:result *tmp51 *tmp53
   473 label *label479
   474 label *label480
-    * jump *label481 always
   475 label *label481
   476 op shl *tmp29 :createAdjacentMask:row1 1
   477 op or *tmp30 :createAdjacentMask:row2 *tmp29
 
   542 op or :createBlockMaskRow:result *tmp51 *tmp53
   543 label *label501
   544 label *label502
-    * jump *label503 always
   545 label *label503
   546 op shl *tmp29 :createAdjacentMask:row1 1
   547 op or *tmp30 :createAdjacentMask:row2 *tmp29
 
   612 op or :createBlockMaskRow:result *tmp51 *tmp53
   613 label *label523
   614 label *label524
-    * jump *label525 always
   615 label *label525
   616 op shl *tmp29 :createAdjacentMask:row1 1
   617 op or *tmp30 :createAdjacentMask:row2 *tmp29
 
   629 wait 1e-15
   630 read *tmp38 processor1 ":createTerrainMask*finished"
   631 jump *label15 equal *tmp38 false
-    * jump *label7 always
   632 label *label7
   633 set :finish @tick
   634 draw reset

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    22 label *label330
    23 op add *tmp52 x 4
    24 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
-    * op or :createBlockMaskRow:result 0 *tmp53
+   25 set :createBlockMaskRow:result *tmp53
    26 label *label331
    27 label *label332
    28 op shl *tmp51 :createBlockMaskRow:result 1
 
    44 label *label337
    45 label *label338
    46 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 x 0
+   47 set *tmp52 x
    48 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    49 op or :createBlockMaskRow:result *tmp51 *tmp53
    50 label *label339
 
    81 label *label352
    82 op add *tmp52 x 4
    83 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
-    * op or :createBlockMaskRow:result 0 *tmp53
+   84 set :createBlockMaskRow:result *tmp53
    85 label *label353
    86 label *label354
    87 op shl *tmp51 :createBlockMaskRow:result 1
 
   103 label *label359
   104 label *label360
   105 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 x 0
+  106 set *tmp52 x
   107 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
   108 op or :createBlockMaskRow:result *tmp51 *tmp53
   109 label *label361
 
   142 label *label374
   143 op add *tmp52 x 4
   144 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
-    * op or :createBlockMaskRow:result 0 *tmp53
+  145 set :createBlockMaskRow:result *tmp53
   146 label *label375
   147 label *label376
   148 op shl *tmp51 :createBlockMaskRow:result 1
 
   164 label *label381
   165 label *label382
   166 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 x 0
+  167 set *tmp52 x
   168 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   169 op or :createBlockMaskRow:result *tmp51 *tmp53
   170 label *label383
 
   200 op or *tmp32 *tmp30 *tmp31
   201 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
   202 op and *tmp35 :createAdjacentMask:mask 0xFE
-    * op or :createAdjacentMask:result 0 *tmp35
+  203 set :createAdjacentMask:result *tmp35
   204 set :createAdjacentMask:row2 :createAdjacentMask:row1
   205 set :createAdjacentMask:row1 :createBlockMaskRow:result
   206 label *label84
 
   211 label *label396
   212 op add *tmp52 x 4
   213 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
-    * op or :createBlockMaskRow:result 0 *tmp53
+  214 set :createBlockMaskRow:result *tmp53
   215 label *label397
   216 label *label398
   217 op shl *tmp51 :createBlockMaskRow:result 1
 
   233 label *label403
   234 label *label404
   235 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 x 0
+  236 set *tmp52 x
   237 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   238 op or :createBlockMaskRow:result *tmp51 *tmp53
   239 label *label405
 
   275 set :createAdjacentMask:row1 :createBlockMaskRow:result
   276 label *label87
   277 label *label88
-    * op add *tmp27 y 0
+  278 set *tmp27 y
   279 label *label416
   280 label *label417
   281 label *label418
   282 op add *tmp52 x 4
   283 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
-    * op or :createBlockMaskRow:result 0 *tmp53
+  284 set :createBlockMaskRow:result *tmp53
   285 label *label419
   286 label *label420
   287 op shl *tmp51 :createBlockMaskRow:result 1
 
   303 label *label425
   304 label *label426
   305 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 x 0
+  306 set *tmp52 x
   307 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   308 op or :createBlockMaskRow:result *tmp51 *tmp53
   309 label *label427
 
   351 label *label440
   352 op add *tmp52 x 4
   353 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
-    * op or :createBlockMaskRow:result 0 *tmp53
+  354 set :createBlockMaskRow:result *tmp53
   355 label *label441
   356 label *label442
   357 op shl *tmp51 :createBlockMaskRow:result 1
 
   373 label *label447
   374 label *label448
   375 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 x 0
+  376 set *tmp52 x
   377 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   378 op or :createBlockMaskRow:result *tmp51 *tmp53
   379 label *label449
 
   421 label *label462
   422 op add *tmp52 x 4
   423 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
-    * op or :createBlockMaskRow:result 0 *tmp53
+  424 set :createBlockMaskRow:result *tmp53
   425 label *label463
   426 label *label464
   427 op shl *tmp51 :createBlockMaskRow:result 1
 
   443 label *label469
   444 label *label470
   445 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 x 0
+  446 set *tmp52 x
   447 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   448 op or :createBlockMaskRow:result *tmp51 *tmp53
   449 label *label471
 
   491 label *label484
   492 op add *tmp52 x 4
   493 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
-    * op or :createBlockMaskRow:result 0 *tmp53
+  494 set :createBlockMaskRow:result *tmp53
   495 label *label485
   496 label *label486
   497 op shl *tmp51 :createBlockMaskRow:result 1
 
   513 label *label491
   514 label *label492
   515 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 x 0
+  516 set *tmp52 x
   517 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   518 op or :createBlockMaskRow:result *tmp51 *tmp53
   519 label *label493
 
   561 label *label506
   562 op add *tmp52 x 4
   563 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
-    * op or :createBlockMaskRow:result 0 *tmp53
+  564 set :createBlockMaskRow:result *tmp53
   565 label *label507
   566 label *label508
   567 op shl *tmp51 :createBlockMaskRow:result 1
 
   583 label *label513
   584 label *label514
   585 op shl *tmp51 :createBlockMaskRow:result 1
-    * op add *tmp52 x 0
+  586 set *tmp52 x
   587 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   588 op or :createBlockMaskRow:result *tmp51 *tmp53
   589 label *label515

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-12 instructions):
 
    21 label *label329
    22 label *label330
    23 op add *tmp52 x 4
-    * ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
-    * set :createBlockMaskRow:result *tmp53
+   24 ucontrol getBlock *tmp52 *tmp23 0 :createBlockMaskRow:result 0
    25 label *label331
    26 label *label332
    27 op shl *tmp51 :createBlockMaskRow:result 1
 
    69 op shl *tmp51 :createBlockMaskRow:result 1
    70 op add *tmp52 x -4
    71 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
-    * op or :createBlockMaskRow:result *tmp51 *tmp53
+   72 op or :createAdjacentMask:row2 *tmp51 *tmp53
    73 label *label347
    74 label *label348
    75 label *label349
-    * set :createAdjacentMask:row2 :createBlockMaskRow:result
    76 op add *tmp25 y 3
    77 label *label350
    78 label *label351
    79 label *label352
    80 op add *tmp52 x 4
-    * ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
-    * set :createBlockMaskRow:result *tmp53
+   81 ucontrol getBlock *tmp52 *tmp25 0 :createBlockMaskRow:result 0
    82 label *label353
    83 label *label354
    84 op shl *tmp51 :createBlockMaskRow:result 1
 
   126 op shl *tmp51 :createBlockMaskRow:result 1
   127 op add *tmp52 x -4
   128 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
-    * op or :createBlockMaskRow:result *tmp51 *tmp53
+  129 op or :createAdjacentMask:row1 *tmp51 *tmp53
   130 label *label369
   131 label *label370
   132 label *label371
-    * set :createAdjacentMask:row1 :createBlockMaskRow:result
   133 label *label81
   134 label *label82
   135 op add *tmp27 y 2
 
   137 label *label373
   138 label *label374
   139 op add *tmp52 x 4
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
-    * set :createBlockMaskRow:result *tmp53
+  140 ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
   141 label *label375
   142 label *label376
   143 op shl *tmp51 :createBlockMaskRow:result 1
 
   194 op shr *tmp31 :createAdjacentMask:row1 1
   195 op or *tmp32 *tmp30 *tmp31
   196 op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:result
-    * op and *tmp35 :createAdjacentMask:mask 0xFE
-    * set :createAdjacentMask:result *tmp35
+  197 op and :createAdjacentMask:result :createAdjacentMask:mask 0xFE
   198 set :createAdjacentMask:row2 :createAdjacentMask:row1
   199 set :createAdjacentMask:row1 :createBlockMaskRow:result
   200 label *label84
 
   204 label *label395
   205 label *label396
   206 op add *tmp52 x 4
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
-    * set :createBlockMaskRow:result *tmp53
+  207 ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
   208 label *label397
   209 label *label398
   210 op shl *tmp51 :createBlockMaskRow:result 1
 
   273 label *label417
   274 label *label418
   275 op add *tmp52 x 4
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
-    * set :createBlockMaskRow:result *tmp53
+  276 ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
   277 label *label419
   278 label *label420
   279 op shl *tmp51 :createBlockMaskRow:result 1
 
   342 label *label439
   343 label *label440
   344 op add *tmp52 x 4
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
-    * set :createBlockMaskRow:result *tmp53
+  345 ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
   346 label *label441
   347 label *label442
   348 op shl *tmp51 :createBlockMaskRow:result 1
 
   411 label *label461
   412 label *label462
   413 op add *tmp52 x 4
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
-    * set :createBlockMaskRow:result *tmp53
+  414 ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
   415 label *label463
   416 label *label464
   417 op shl *tmp51 :createBlockMaskRow:result 1
 
   480 label *label483
   481 label *label484
   482 op add *tmp52 x 4
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
-    * set :createBlockMaskRow:result *tmp53
+  483 ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
   484 label *label485
   485 label *label486
   486 op shl *tmp51 :createBlockMaskRow:result 1
 
   549 label *label505
   550 label *label506
   551 op add *tmp52 x 4
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
-    * set :createBlockMaskRow:result *tmp53
+  552 ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
   553 label *label507
   554 label *label508
   555 op shl *tmp51 :createBlockMaskRow:result 1

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2:
 
    44 label *label338
    45 op shl *tmp51 :createBlockMaskRow:result 1
    46 set *tmp52 x
-    * ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
+   47 ucontrol getBlock x *tmp23 0 *tmp53 0
    48 op or :createBlockMaskRow:result *tmp51 *tmp53
    49 label *label339
    50 label *label340
 
   101 label *label360
   102 op shl *tmp51 :createBlockMaskRow:result 1
   103 set *tmp52 x
-    * ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
+  104 ucontrol getBlock x *tmp25 0 *tmp53 0
   105 op or :createBlockMaskRow:result *tmp51 *tmp53
   106 label *label361
   107 label *label362
 
   160 label *label382
   161 op shl *tmp51 :createBlockMaskRow:result 1
   162 set *tmp52 x
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
+  163 ucontrol getBlock x *tmp27 0 *tmp53 0
   164 op or :createBlockMaskRow:result *tmp51 *tmp53
   165 label *label383
   166 label *label384
 
   227 label *label404
   228 op shl *tmp51 :createBlockMaskRow:result 1
   229 set *tmp52 x
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
+  230 ucontrol getBlock x *tmp27 0 *tmp53 0
   231 op or :createBlockMaskRow:result *tmp51 *tmp53
   232 label *label405
   233 label *label406
 
   273 label *label417
   274 label *label418
   275 op add *tmp52 x 4
-    * ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
+  276 ucontrol getBlock *tmp52 y 0 :createBlockMaskRow:result 0
   277 label *label419
   278 label *label420
   279 op shl *tmp51 :createBlockMaskRow:result 1
   280 op add *tmp52 x 3
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
+  281 ucontrol getBlock *tmp52 y 0 *tmp53 0
   282 op or :createBlockMaskRow:result *tmp51 *tmp53
   283 label *label421
   284 label *label422
   285 op shl *tmp51 :createBlockMaskRow:result 1
   286 op add *tmp52 x 2
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
+  287 ucontrol getBlock *tmp52 y 0 *tmp53 0
   288 op or :createBlockMaskRow:result *tmp51 *tmp53
   289 label *label423
   290 label *label424
   291 op shl *tmp51 :createBlockMaskRow:result 1
   292 op add *tmp52 x 1
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
+  293 ucontrol getBlock *tmp52 y 0 *tmp53 0
   294 op or :createBlockMaskRow:result *tmp51 *tmp53
   295 label *label425
   296 label *label426
   297 op shl *tmp51 :createBlockMaskRow:result 1
   298 set *tmp52 x
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
+  299 ucontrol getBlock x y 0 *tmp53 0
   300 op or :createBlockMaskRow:result *tmp51 *tmp53
   301 label *label427
   302 label *label428
   303 op shl *tmp51 :createBlockMaskRow:result 1
   304 op add *tmp52 x -1
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
+  305 ucontrol getBlock *tmp52 y 0 *tmp53 0
   306 op or :createBlockMaskRow:result *tmp51 *tmp53
   307 label *label429
   308 label *label430
   309 op shl *tmp51 :createBlockMaskRow:result 1
   310 op add *tmp52 x -2
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
+  311 ucontrol getBlock *tmp52 y 0 *tmp53 0
   312 op or :createBlockMaskRow:result *tmp51 *tmp53
   313 label *label431
   314 label *label432
   315 op shl *tmp51 :createBlockMaskRow:result 1
   316 op add *tmp52 x -3
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
+  317 ucontrol getBlock *tmp52 y 0 *tmp53 0
   318 op or :createBlockMaskRow:result *tmp51 *tmp53
   319 label *label433
   320 label *label434
   321 op shl *tmp51 :createBlockMaskRow:result 1
   322 op add *tmp52 x -4
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
+  323 ucontrol getBlock *tmp52 y 0 *tmp53 0
   324 op or :createBlockMaskRow:result *tmp51 *tmp53
   325 label *label435
   326 label *label436
 
   365 label *label448
   366 op shl *tmp51 :createBlockMaskRow:result 1
   367 set *tmp52 x
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
+  368 ucontrol getBlock x *tmp27 0 *tmp53 0
   369 op or :createBlockMaskRow:result *tmp51 *tmp53
   370 label *label449
   371 label *label450
 
   434 label *label470
   435 op shl *tmp51 :createBlockMaskRow:result 1
   436 set *tmp52 x
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
+  437 ucontrol getBlock x *tmp27 0 *tmp53 0
   438 op or :createBlockMaskRow:result *tmp51 *tmp53
   439 label *label471
   440 label *label472
 
   503 label *label492
   504 op shl *tmp51 :createBlockMaskRow:result 1
   505 set *tmp52 x
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
+  506 ucontrol getBlock x *tmp27 0 *tmp53 0
   507 op or :createBlockMaskRow:result *tmp51 *tmp53
   508 label *label493
   509 label *label494
 
   572 label *label514
   573 op shl *tmp51 :createBlockMaskRow:result 1
   574 set *tmp52 x
-    * ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
+  575 ucontrol getBlock x *tmp27 0 *tmp53 0
   576 op or :createBlockMaskRow:result *tmp51 *tmp53
   577 label *label515
   578 label *label516

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-10 instructions):
 
    43 label *label337
    44 label *label338
    45 op shl *tmp51 :createBlockMaskRow:result 1
-    * set *tmp52 x
    46 ucontrol getBlock x *tmp23 0 *tmp53 0
    47 op or :createBlockMaskRow:result *tmp51 *tmp53
    48 label *label339
 
    99 label *label359
   100 label *label360
   101 op shl *tmp51 :createBlockMaskRow:result 1
-    * set *tmp52 x
   102 ucontrol getBlock x *tmp25 0 *tmp53 0
   103 op or :createBlockMaskRow:result *tmp51 *tmp53
   104 label *label361
 
   157 label *label381
   158 label *label382
   159 op shl *tmp51 :createBlockMaskRow:result 1
-    * set *tmp52 x
   160 ucontrol getBlock x *tmp27 0 *tmp53 0
   161 op or :createBlockMaskRow:result *tmp51 *tmp53
   162 label *label383
 
   223 label *label403
   224 label *label404
   225 op shl *tmp51 :createBlockMaskRow:result 1
-    * set *tmp52 x
   226 ucontrol getBlock x *tmp27 0 *tmp53 0
   227 op or :createBlockMaskRow:result *tmp51 *tmp53
   228 label *label405
 
   264 set :createAdjacentMask:row1 :createBlockMaskRow:result
   265 label *label87
   266 label *label88
-    * set *tmp27 y
   267 label *label416
   268 label *label417
   269 label *label418
 
   290 label *label425
   291 label *label426
   292 op shl *tmp51 :createBlockMaskRow:result 1
-    * set *tmp52 x
   293 ucontrol getBlock x y 0 *tmp53 0
   294 op or :createBlockMaskRow:result *tmp51 *tmp53
   295 label *label427
 
   358 label *label447
   359 label *label448
   360 op shl *tmp51 :createBlockMaskRow:result 1
-    * set *tmp52 x
   361 ucontrol getBlock x *tmp27 0 *tmp53 0
   362 op or :createBlockMaskRow:result *tmp51 *tmp53
   363 label *label449
 
   426 label *label469
   427 label *label470
   428 op shl *tmp51 :createBlockMaskRow:result 1
-    * set *tmp52 x
   429 ucontrol getBlock x *tmp27 0 *tmp53 0
   430 op or :createBlockMaskRow:result *tmp51 *tmp53
   431 label *label471
 
   494 label *label491
   495 label *label492
   496 op shl *tmp51 :createBlockMaskRow:result 1
-    * set *tmp52 x
   497 ucontrol getBlock x *tmp27 0 *tmp53 0
   498 op or :createBlockMaskRow:result *tmp51 *tmp53
   499 label *label493
 
   562 label *label513
   563 label *label514
   564 op shl *tmp51 :createBlockMaskRow:result 1
-    * set *tmp52 x
   565 ucontrol getBlock x *tmp27 0 *tmp53 0
   566 op or :createBlockMaskRow:result *tmp51 *tmp53
   567 label *label515

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
     6 op add *tmp14 y 5
     7 label *label4
     8 ucontrol move x *tmp14
-    * label *label5
     9 ucontrol within x *tmp14 2 *tmp16
    10 jump *label4 equal *tmp16 false
-    * label *label6
    11 set :start @tick
    12 write @unit processor1 ":createTerrainMask:unit"
    13 write x processor1 ":createTerrainMask:x"
 
    15 write false processor1 ":createTerrainMask*finished"
    16 write 1 processor1 "@counter"
    17 op add *tmp23 y 4
-    * label *label328
-    * label *label329
-    * label *label330
    18 op add *tmp52 x 4
    19 ucontrol getBlock *tmp52 *tmp23 0 :createBlockMaskRow:result 0
-    * label *label331
-    * label *label332
    20 op shl *tmp51 :createBlockMaskRow:result 1
    21 op add *tmp52 x 3
    22 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    23 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label333
-    * label *label334
    24 op shl *tmp51 :createBlockMaskRow:result 1
    25 op add *tmp52 x 2
    26 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    27 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label335
-    * label *label336
    28 op shl *tmp51 :createBlockMaskRow:result 1
    29 op add *tmp52 x 1
    30 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    31 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label337
-    * label *label338
    32 op shl *tmp51 :createBlockMaskRow:result 1
    33 ucontrol getBlock x *tmp23 0 *tmp53 0
    34 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label339
-    * label *label340
    35 op shl *tmp51 :createBlockMaskRow:result 1
    36 op add *tmp52 x -1
    37 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    38 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label341
-    * label *label342
    39 op shl *tmp51 :createBlockMaskRow:result 1
    40 op add *tmp52 x -2
    41 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    42 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label343
-    * label *label344
    43 op shl *tmp51 :createBlockMaskRow:result 1
    44 op add *tmp52 x -3
    45 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    46 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label345
-    * label *label346
    47 op shl *tmp51 :createBlockMaskRow:result 1
    48 op add *tmp52 x -4
    49 ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0
    50 op or :createAdjacentMask:row2 *tmp51 *tmp53
-    * label *label347
-    * label *label348
-    * label *label349
    51 op add *tmp25 y 3
-    * label *label350
-    * label *label351
-    * label *label352
    52 op add *tmp52 x 4
    53 ucontrol getBlock *tmp52 *tmp25 0 :createBlockMaskRow:result 0
-    * label *label353
-    * label *label354
    54 op shl *tmp51 :createBlockMaskRow:result 1
    55 op add *tmp52 x 3
    56 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
    57 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label355
-    * label *label356
    58 op shl *tmp51 :createBlockMaskRow:result 1
    59 op add *tmp52 x 2
    60 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
    61 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label357
-    * label *label358
    62 op shl *tmp51 :createBlockMaskRow:result 1
    63 op add *tmp52 x 1
    64 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
    65 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label359
-    * label *label360
    66 op shl *tmp51 :createBlockMaskRow:result 1
    67 ucontrol getBlock x *tmp25 0 *tmp53 0
    68 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label361
-    * label *label362
    69 op shl *tmp51 :createBlockMaskRow:result 1
    70 op add *tmp52 x -1
    71 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
    72 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label363
-    * label *label364
    73 op shl *tmp51 :createBlockMaskRow:result 1
    74 op add *tmp52 x -2
    75 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
    76 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label365
-    * label *label366
    77 op shl *tmp51 :createBlockMaskRow:result 1
    78 op add *tmp52 x -3
    79 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
    80 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label367
-    * label *label368
    81 op shl *tmp51 :createBlockMaskRow:result 1
    82 op add *tmp52 x -4
    83 ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0
    84 op or :createAdjacentMask:row1 *tmp51 *tmp53
-    * label *label369
-    * label *label370
-    * label *label371
-    * label *label81
-    * label *label82
    85 op add *tmp27 y 2
-    * label *label372
-    * label *label373
-    * label *label374
    86 op add *tmp52 x 4
    87 ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
-    * label *label375
-    * label *label376
    88 op shl *tmp51 :createBlockMaskRow:result 1
    89 op add *tmp52 x 3
    90 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
    91 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label377
-    * label *label378
    92 op shl *tmp51 :createBlockMaskRow:result 1
    93 op add *tmp52 x 2
    94 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
    95 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label379
-    * label *label380
    96 op shl *tmp51 :createBlockMaskRow:result 1
    97 op add *tmp52 x 1
    98 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
    99 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label381
-    * label *label382
   100 op shl *tmp51 :createBlockMaskRow:result 1
   101 ucontrol getBlock x *tmp27 0 *tmp53 0
   102 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label383
-    * label *label384
   103 op shl *tmp51 :createBlockMaskRow:result 1
   104 op add *tmp52 x -1
   105 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   106 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label385
-    * label *label386
   107 op shl *tmp51 :createBlockMaskRow:result 1
   108 op add *tmp52 x -2
   109 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   110 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label387
-    * label *label388
   111 op shl *tmp51 :createBlockMaskRow:result 1
   112 op add *tmp52 x -3
   113 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   114 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label389
-    * label *label390
   115 op shl *tmp51 :createBlockMaskRow:result 1
   116 op add *tmp52 x -4
   117 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   118 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label391
-    * label *label392
-    * label *label393
   119 op shl *tmp29 :createAdjacentMask:row1 1
   120 op or *tmp30 :createAdjacentMask:row2 *tmp29
   121 op shr *tmp31 :createAdjacentMask:row1 1
 
   124 op and :createAdjacentMask:result :createAdjacentMask:mask 0xFE
   125 set :createAdjacentMask:row2 :createAdjacentMask:row1
   126 set :createAdjacentMask:row1 :createBlockMaskRow:result
-    * label *label84
-    * label *label85
   127 op add *tmp27 y 1
-    * label *label394
-    * label *label395
-    * label *label396
   128 op add *tmp52 x 4
   129 ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
-    * label *label397
-    * label *label398
   130 op shl *tmp51 :createBlockMaskRow:result 1
   131 op add *tmp52 x 3
   132 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   133 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label399
-    * label *label400
   134 op shl *tmp51 :createBlockMaskRow:result 1
   135 op add *tmp52 x 2
   136 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   137 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label401
-    * label *label402
   138 op shl *tmp51 :createBlockMaskRow:result 1
   139 op add *tmp52 x 1
   140 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   141 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label403
-    * label *label404
   142 op shl *tmp51 :createBlockMaskRow:result 1
   143 ucontrol getBlock x *tmp27 0 *tmp53 0
   144 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label405
-    * label *label406
   145 op shl *tmp51 :createBlockMaskRow:result 1
   146 op add *tmp52 x -1
   147 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   148 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label407
-    * label *label408
   149 op shl *tmp51 :createBlockMaskRow:result 1
   150 op add *tmp52 x -2
   151 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   152 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label409
-    * label *label410
   153 op shl *tmp51 :createBlockMaskRow:result 1
   154 op add *tmp52 x -3
   155 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   156 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label411
-    * label *label412
   157 op shl *tmp51 :createBlockMaskRow:result 1
   158 op add *tmp52 x -4
   159 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   160 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label413
-    * label *label414
-    * label *label415
   161 op shl *tmp29 :createAdjacentMask:row1 1
   162 op or *tmp30 :createAdjacentMask:row2 *tmp29
   163 op shr *tmp31 :createAdjacentMask:row1 1
 
   168 op or :createAdjacentMask:result *tmp34 *tmp35
   169 set :createAdjacentMask:row2 :createAdjacentMask:row1
   170 set :createAdjacentMask:row1 :createBlockMaskRow:result
-    * label *label87
-    * label *label88
-    * label *label416
-    * label *label417
-    * label *label418
   171 op add *tmp52 x 4
   172 ucontrol getBlock *tmp52 y 0 :createBlockMaskRow:result 0
-    * label *label419
-    * label *label420
   173 op shl *tmp51 :createBlockMaskRow:result 1
   174 op add *tmp52 x 3
   175 ucontrol getBlock *tmp52 y 0 *tmp53 0
   176 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label421
-    * label *label422
   177 op shl *tmp51 :createBlockMaskRow:result 1
   178 op add *tmp52 x 2
   179 ucontrol getBlock *tmp52 y 0 *tmp53 0
   180 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label423
-    * label *label424
   181 op shl *tmp51 :createBlockMaskRow:result 1
   182 op add *tmp52 x 1
   183 ucontrol getBlock *tmp52 y 0 *tmp53 0
   184 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label425
-    * label *label426
   185 op shl *tmp51 :createBlockMaskRow:result 1
   186 ucontrol getBlock x y 0 *tmp53 0
   187 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label427
-    * label *label428
   188 op shl *tmp51 :createBlockMaskRow:result 1
   189 op add *tmp52 x -1
   190 ucontrol getBlock *tmp52 y 0 *tmp53 0
   191 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label429
-    * label *label430
   192 op shl *tmp51 :createBlockMaskRow:result 1
   193 op add *tmp52 x -2
   194 ucontrol getBlock *tmp52 y 0 *tmp53 0
   195 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label431
-    * label *label432
   196 op shl *tmp51 :createBlockMaskRow:result 1
   197 op add *tmp52 x -3
   198 ucontrol getBlock *tmp52 y 0 *tmp53 0
   199 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label433
-    * label *label434
   200 op shl *tmp51 :createBlockMaskRow:result 1
   201 op add *tmp52 x -4
   202 ucontrol getBlock *tmp52 y 0 *tmp53 0
   203 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label435
-    * label *label436
-    * label *label437
   204 op shl *tmp29 :createAdjacentMask:row1 1
   205 op or *tmp30 :createAdjacentMask:row2 *tmp29
   206 op shr *tmp31 :createAdjacentMask:row1 1
 
   211 op or :createAdjacentMask:result *tmp34 *tmp35
   212 set :createAdjacentMask:row2 :createAdjacentMask:row1
   213 set :createAdjacentMask:row1 :createBlockMaskRow:result
-    * label *label90
-    * label *label91
   214 op add *tmp27 y -1
-    * label *label438
-    * label *label439
-    * label *label440
   215 op add *tmp52 x 4
   216 ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
-    * label *label441
-    * label *label442
   217 op shl *tmp51 :createBlockMaskRow:result 1
   218 op add *tmp52 x 3
   219 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   220 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label443
-    * label *label444
   221 op shl *tmp51 :createBlockMaskRow:result 1
   222 op add *tmp52 x 2
   223 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   224 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label445
-    * label *label446
   225 op shl *tmp51 :createBlockMaskRow:result 1
   226 op add *tmp52 x 1
   227 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   228 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label447
-    * label *label448
   229 op shl *tmp51 :createBlockMaskRow:result 1
   230 ucontrol getBlock x *tmp27 0 *tmp53 0
   231 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label449
-    * label *label450
   232 op shl *tmp51 :createBlockMaskRow:result 1
   233 op add *tmp52 x -1
   234 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   235 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label451
-    * label *label452
   236 op shl *tmp51 :createBlockMaskRow:result 1
   237 op add *tmp52 x -2
   238 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   239 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label453
-    * label *label454
   240 op shl *tmp51 :createBlockMaskRow:result 1
   241 op add *tmp52 x -3
   242 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   243 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label455
-    * label *label456
   244 op shl *tmp51 :createBlockMaskRow:result 1
   245 op add *tmp52 x -4
   246 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   247 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label457
-    * label *label458
-    * label *label459
   248 op shl *tmp29 :createAdjacentMask:row1 1
   249 op or *tmp30 :createAdjacentMask:row2 *tmp29
   250 op shr *tmp31 :createAdjacentMask:row1 1
 
   255 op or :createAdjacentMask:result *tmp34 *tmp35
   256 set :createAdjacentMask:row2 :createAdjacentMask:row1
   257 set :createAdjacentMask:row1 :createBlockMaskRow:result
-    * label *label93
-    * label *label94
   258 op add *tmp27 y -2
-    * label *label460
-    * label *label461
-    * label *label462
   259 op add *tmp52 x 4
   260 ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
-    * label *label463
-    * label *label464
   261 op shl *tmp51 :createBlockMaskRow:result 1
   262 op add *tmp52 x 3
   263 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   264 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label465
-    * label *label466
   265 op shl *tmp51 :createBlockMaskRow:result 1
   266 op add *tmp52 x 2
   267 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   268 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label467
-    * label *label468
   269 op shl *tmp51 :createBlockMaskRow:result 1
   270 op add *tmp52 x 1
   271 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   272 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label469
-    * label *label470
   273 op shl *tmp51 :createBlockMaskRow:result 1
   274 ucontrol getBlock x *tmp27 0 *tmp53 0
   275 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label471
-    * label *label472
   276 op shl *tmp51 :createBlockMaskRow:result 1
   277 op add *tmp52 x -1
   278 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   279 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label473
-    * label *label474
   280 op shl *tmp51 :createBlockMaskRow:result 1
   281 op add *tmp52 x -2
   282 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   283 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label475
-    * label *label476
   284 op shl *tmp51 :createBlockMaskRow:result 1
   285 op add *tmp52 x -3
   286 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   287 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label477
-    * label *label478
   288 op shl *tmp51 :createBlockMaskRow:result 1
   289 op add *tmp52 x -4
   290 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   291 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label479
-    * label *label480
-    * label *label481
   292 op shl *tmp29 :createAdjacentMask:row1 1
   293 op or *tmp30 :createAdjacentMask:row2 *tmp29
   294 op shr *tmp31 :createAdjacentMask:row1 1
 
   299 op or :createAdjacentMask:result *tmp34 *tmp35
   300 set :createAdjacentMask:row2 :createAdjacentMask:row1
   301 set :createAdjacentMask:row1 :createBlockMaskRow:result
-    * label *label96
-    * label *label97
   302 op add *tmp27 y -3
-    * label *label482
-    * label *label483
-    * label *label484
   303 op add *tmp52 x 4
   304 ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
-    * label *label485
-    * label *label486
   305 op shl *tmp51 :createBlockMaskRow:result 1
   306 op add *tmp52 x 3
   307 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   308 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label487
-    * label *label488
   309 op shl *tmp51 :createBlockMaskRow:result 1
   310 op add *tmp52 x 2
   311 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   312 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label489
-    * label *label490
   313 op shl *tmp51 :createBlockMaskRow:result 1
   314 op add *tmp52 x 1
   315 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   316 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label491
-    * label *label492
   317 op shl *tmp51 :createBlockMaskRow:result 1
   318 ucontrol getBlock x *tmp27 0 *tmp53 0
   319 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label493
-    * label *label494
   320 op shl *tmp51 :createBlockMaskRow:result 1
   321 op add *tmp52 x -1
   322 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   323 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label495
-    * label *label496
   324 op shl *tmp51 :createBlockMaskRow:result 1
   325 op add *tmp52 x -2
   326 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   327 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label497
-    * label *label498
   328 op shl *tmp51 :createBlockMaskRow:result 1
   329 op add *tmp52 x -3
   330 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   331 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label499
-    * label *label500
   332 op shl *tmp51 :createBlockMaskRow:result 1
   333 op add *tmp52 x -4
   334 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   335 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label501
-    * label *label502
-    * label *label503
   336 op shl *tmp29 :createAdjacentMask:row1 1
   337 op or *tmp30 :createAdjacentMask:row2 *tmp29
   338 op shr *tmp31 :createAdjacentMask:row1 1
 
   343 op or :createAdjacentMask:result *tmp34 *tmp35
   344 set :createAdjacentMask:row2 :createAdjacentMask:row1
   345 set :createAdjacentMask:row1 :createBlockMaskRow:result
-    * label *label99
-    * label *label100
   346 op add *tmp27 y -4
-    * label *label504
-    * label *label505
-    * label *label506
   347 op add *tmp52 x 4
   348 ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result 0
-    * label *label507
-    * label *label508
   349 op shl *tmp51 :createBlockMaskRow:result 1
   350 op add *tmp52 x 3
   351 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   352 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label509
-    * label *label510
   353 op shl *tmp51 :createBlockMaskRow:result 1
   354 op add *tmp52 x 2
   355 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   356 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label511
-    * label *label512
   357 op shl *tmp51 :createBlockMaskRow:result 1
   358 op add *tmp52 x 1
   359 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   360 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label513
-    * label *label514
   361 op shl *tmp51 :createBlockMaskRow:result 1
   362 ucontrol getBlock x *tmp27 0 *tmp53 0
   363 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label515
-    * label *label516
   364 op shl *tmp51 :createBlockMaskRow:result 1
   365 op add *tmp52 x -1
   366 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   367 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label517
-    * label *label518
   368 op shl *tmp51 :createBlockMaskRow:result 1
   369 op add *tmp52 x -2
   370 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   371 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label519
-    * label *label520
   372 op shl *tmp51 :createBlockMaskRow:result 1
   373 op add *tmp52 x -3
   374 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   375 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label521
-    * label *label522
   376 op shl *tmp51 :createBlockMaskRow:result 1
   377 op add *tmp52 x -4
   378 ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0
   379 op or :createBlockMaskRow:result *tmp51 *tmp53
-    * label *label523
-    * label *label524
-    * label *label525
   380 op shl *tmp29 :createAdjacentMask:row1 1
   381 op or *tmp30 :createAdjacentMask:row2 *tmp29
   382 op shr *tmp31 :createAdjacentMask:row1 1
 
   385 op shl *tmp34 :createAdjacentMask:result 7
   386 op and *tmp35 :createAdjacentMask:mask 0xFE
   387 op or :createAdjacentMask:result *tmp34 *tmp35
-    * label *label102
-    * label *label13
   388 op shr *tmp22 :createAdjacentMask:result 1
-    * label *label8
   389 label *label15
   390 wait 1e-15
   391 read *tmp38 processor1 ":createTerrainMask*finished"
   392 jump *label15 equal *tmp38 false
-    * label *label7
   393 set :finish @tick
   394 draw reset
   395 draw translate 6 6
   396 draw clear 0 0 0
-    * label *label103
-    * label *label104
-    * label *label105
-    * label *label106
   397 op and *tmp43 *tmp22 4398046511104
   398 jump *label107 equal *tmp43 false
   399 draw col %[red]
 
   402 draw col %[green]
   403 label *label108
   404 draw rect 0 60 8 8
-    * label *label109
-    * label *label110
   405 op and *tmp43 *tmp22 8796093022208
   406 jump *label111 equal *tmp43 false
   407 draw col %[red]
 
   410 draw col %[green]
   411 label *label112
   412 draw rect 10 60 8 8
-    * label *label113
-    * label *label114
   413 op and *tmp43 *tmp22 17592186044416
   414 jump *label115 equal *tmp43 false
   415 draw col %[red]
 
   418 draw col %[green]
   419 label *label116
   420 draw rect 20 60 8 8
-    * label *label117
-    * label *label118
   421 op and *tmp43 *tmp22 35184372088832
   422 jump *label119 equal *tmp43 false
   423 draw col %[red]
 
   426 draw col %[green]
   427 label *label120
   428 draw rect 30 60 8 8
-    * label *label121
-    * label *label122
   429 op and *tmp43 *tmp22 70368744177664
   430 jump *label123 equal *tmp43 false
   431 draw col %[red]
 
   434 draw col %[green]
   435 label *label124
   436 draw rect 40 60 8 8
-    * label *label125
-    * label *label126
   437 op and *tmp43 *tmp22 140737488355328
   438 jump *label127 equal *tmp43 false
   439 draw col %[red]
 
   442 draw col %[green]
   443 label *label128
   444 draw rect 50 60 8 8
-    * label *label129
-    * label *label130
   445 op and *tmp43 *tmp22 281474976710656
   446 jump *label131 equal *tmp43 false
   447 draw col %[red]
 
   450 draw col %[green]
   451 label *label132
   452 draw rect 60 60 8 8
-    * label *label133
-    * label *label134
-    * label *label135
-    * label *label136
-    * label *label137
-    * label *label138
   453 op and *tmp43 *tmp22 34359738368
   454 jump *label139 equal *tmp43 false
   455 draw col %[red]
 
   458 draw col %[green]
   459 label *label140
   460 draw rect 0 50 8 8
-    * label *label141
-    * label *label142
   461 op and *tmp43 *tmp22 68719476736
   462 jump *label143 equal *tmp43 false
   463 draw col %[red]
 
   466 draw col %[green]
   467 label *label144
   468 draw rect 10 50 8 8
-    * label *label145
-    * label *label146
   469 op and *tmp43 *tmp22 137438953472
   470 jump *label147 equal *tmp43 false
   471 draw col %[red]
 
   474 draw col %[green]
   475 label *label148
   476 draw rect 20 50 8 8
-    * label *label149
-    * label *label150
   477 op and *tmp43 *tmp22 274877906944
   478 jump *label151 equal *tmp43 false
   479 draw col %[red]
 
   482 draw col %[green]
   483 label *label152
   484 draw rect 30 50 8 8
-    * label *label153
-    * label *label154
   485 op and *tmp43 *tmp22 549755813888
   486 jump *label155 equal *tmp43 false
   487 draw col %[red]
 
   490 draw col %[green]
   491 label *label156
   492 draw rect 40 50 8 8
-    * label *label157
-    * label *label158
   493 op and *tmp43 *tmp22 1099511627776
   494 jump *label159 equal *tmp43 false
   495 draw col %[red]
 
   498 draw col %[green]
   499 label *label160
   500 draw rect 50 50 8 8
-    * label *label161
-    * label *label162
   501 op and *tmp43 *tmp22 2199023255552
   502 jump *label163 equal *tmp43 false
   503 draw col %[red]
 
   506 draw col %[green]
   507 label *label164
   508 draw rect 60 50 8 8
-    * label *label165
-    * label *label166
-    * label *label167
-    * label *label168
-    * label *label169
-    * label *label170
   509 op and *tmp43 *tmp22 268435456
   510 jump *label171 equal *tmp43 false
   511 draw col %[red]
 
   514 draw col %[green]
   515 label *label172
   516 draw rect 0 40 8 8
-    * label *label173
-    * label *label174
   517 op and *tmp43 *tmp22 536870912
   518 jump *label175 equal *tmp43 false
   519 draw col %[red]
 
   522 draw col %[green]
   523 label *label176
   524 draw rect 10 40 8 8
-    * label *label177
-    * label *label178
   525 op and *tmp43 *tmp22 1073741824
   526 jump *label179 equal *tmp43 false
   527 draw col %[red]
 
   530 draw col %[green]
   531 label *label180
   532 draw rect 20 40 8 8
-    * label *label181
-    * label *label182
   533 op and *tmp43 *tmp22 2147483648
   534 jump *label183 equal *tmp43 false
   535 draw col %[red]
 
   538 draw col %[green]
   539 label *label184
   540 draw rect 30 40 8 8
-    * label *label185
-    * label *label186
   541 op and *tmp43 *tmp22 4294967296
   542 jump *label187 equal *tmp43 false
   543 draw col %[red]
 
   546 draw col %[green]
   547 label *label188
   548 draw rect 40 40 8 8
-    * label *label189
-    * label *label190
   549 op and *tmp43 *tmp22 8589934592
   550 jump *label191 equal *tmp43 false
   551 draw col %[red]
 
   554 draw col %[green]
   555 label *label192
   556 draw rect 50 40 8 8
-    * label *label193
-    * label *label194
   557 op and *tmp43 *tmp22 17179869184
   558 jump *label195 equal *tmp43 false
   559 draw col %[red]
 
   562 draw col %[green]
   563 label *label196
   564 draw rect 60 40 8 8
-    * label *label197
-    * label *label198
-    * label *label199
-    * label *label200
-    * label *label201
-    * label *label202
   565 op and *tmp43 *tmp22 2097152
   566 jump *label203 equal *tmp43 false
   567 draw col %[red]
 
   570 draw col %[green]
   571 label *label204
   572 draw rect 0 30 8 8
-    * label *label205
-    * label *label206
   573 op and *tmp43 *tmp22 4194304
   574 jump *label207 equal *tmp43 false
   575 draw col %[red]
 
   578 draw col %[green]
   579 label *label208
   580 draw rect 10 30 8 8
-    * label *label209
-    * label *label210
   581 op and *tmp43 *tmp22 8388608
   582 jump *label211 equal *tmp43 false
   583 draw col %[red]
 
   586 draw col %[green]
   587 label *label212
   588 draw rect 20 30 8 8
-    * label *label213
-    * label *label214
   589 op and *tmp43 *tmp22 16777216
   590 jump *label215 equal *tmp43 false
   591 draw col %[red]
 
   594 draw col %[green]
   595 label *label216
   596 draw rect 30 30 8 8
-    * label *label217
-    * label *label218
   597 op and *tmp43 *tmp22 33554432
   598 jump *label219 equal *tmp43 false
   599 draw col %[red]
 
   602 draw col %[green]
   603 label *label220
   604 draw rect 40 30 8 8
-    * label *label221
-    * label *label222
   605 op and *tmp43 *tmp22 67108864
   606 jump *label223 equal *tmp43 false
   607 draw col %[red]
 
   610 draw col %[green]
   611 label *label224
   612 draw rect 50 30 8 8
-    * label *label225
-    * label *label226
   613 op and *tmp43 *tmp22 134217728
   614 jump *label227 equal *tmp43 false
   615 draw col %[red]
 
   618 draw col %[green]
   619 label *label228
   620 draw rect 60 30 8 8
-    * label *label229
-    * label *label230
-    * label *label231
-    * label *label232
-    * label *label233
-    * label *label234
   621 op and *tmp43 *tmp22 16384
   622 jump *label235 equal *tmp43 false
   623 draw col %[red]
 
   626 draw col %[green]
   627 label *label236
   628 draw rect 0 20 8 8
-    * label *label237
-    * label *label238
   629 op and *tmp43 *tmp22 32768
   630 jump *label239 equal *tmp43 false
   631 draw col %[red]
 
   634 draw col %[green]
   635 label *label240
   636 draw rect 10 20 8 8
-    * label *label241
-    * label *label242
   637 op and *tmp43 *tmp22 65536
   638 jump *label243 equal *tmp43 false
   639 draw col %[red]
 
   642 draw col %[green]
   643 label *label244
   644 draw rect 20 20 8 8
-    * label *label245
-    * label *label246
   645 op and *tmp43 *tmp22 131072
   646 jump *label247 equal *tmp43 false
   647 draw col %[red]
 
   650 draw col %[green]
   651 label *label248
   652 draw rect 30 20 8 8
-    * label *label249
-    * label *label250
   653 op and *tmp43 *tmp22 262144
   654 jump *label251 equal *tmp43 false
   655 draw col %[red]
 
   658 draw col %[green]
   659 label *label252
   660 draw rect 40 20 8 8
-    * label *label253
-    * label *label254
   661 op and *tmp43 *tmp22 524288
   662 jump *label255 equal *tmp43 false
   663 draw col %[red]
 
   666 draw col %[green]
   667 label *label256
   668 draw rect 50 20 8 8
-    * label *label257
-    * label *label258
   669 op and *tmp43 *tmp22 1048576
   670 jump *label259 equal *tmp43 false
   671 draw col %[red]
 
   674 draw col %[green]
   675 label *label260
   676 draw rect 60 20 8 8
-    * label *label261
-    * label *label262
-    * label *label263
-    * label *label264
-    * label *label265
-    * label *label266
   677 op and *tmp43 *tmp22 128
   678 jump *label267 equal *tmp43 false
   679 draw col %[red]
 
   682 draw col %[green]
   683 label *label268
   684 draw rect 0 10 8 8
-    * label *label269
-    * label *label270
   685 op and *tmp43 *tmp22 256
   686 jump *label271 equal *tmp43 false
   687 draw col %[red]
 
   690 draw col %[green]
   691 label *label272
   692 draw rect 10 10 8 8
-    * label *label273
-    * label *label274
   693 op and *tmp43 *tmp22 512
   694 jump *label275 equal *tmp43 false
   695 draw col %[red]
 
   698 draw col %[green]
   699 label *label276
   700 draw rect 20 10 8 8
-    * label *label277
-    * label *label278
   701 op and *tmp43 *tmp22 1024
   702 jump *label279 equal *tmp43 false
   703 draw col %[red]
 
   706 draw col %[green]
   707 label *label280
   708 draw rect 30 10 8 8
-    * label *label281
-    * label *label282
   709 op and *tmp43 *tmp22 2048
   710 jump *label283 equal *tmp43 false
   711 draw col %[red]
 
   714 draw col %[green]
   715 label *label284
   716 draw rect 40 10 8 8
-    * label *label285
-    * label *label286
   717 op and *tmp43 *tmp22 4096
   718 jump *label287 equal *tmp43 false
   719 draw col %[red]
 
   722 draw col %[green]
   723 label *label288
   724 draw rect 50 10 8 8
-    * label *label289
-    * label *label290
   725 op and *tmp43 *tmp22 8192
   726 jump *label291 equal *tmp43 false
   727 draw col %[red]
 
   730 draw col %[green]
   731 label *label292
   732 draw rect 60 10 8 8
-    * label *label293
-    * label *label294
-    * label *label295
-    * label *label296
-    * label *label297
-    * label *label298
   733 op and *tmp43 *tmp22 1
   734 jump *label299 equal *tmp43 false
   735 draw col %[red]
 
   738 draw col %[green]
   739 label *label300
   740 draw rect 0 0 8 8
-    * label *label301
-    * label *label302
   741 op and *tmp43 *tmp22 2
   742 jump *label303 equal *tmp43 false
   743 draw col %[red]
 
   746 draw col %[green]
   747 label *label304
   748 draw rect 10 0 8 8
-    * label *label305
-    * label *label306
   749 op and *tmp43 *tmp22 4
   750 jump *label307 equal *tmp43 false
   751 draw col %[red]
 
   754 draw col %[green]
   755 label *label308
   756 draw rect 20 0 8 8
-    * label *label309
-    * label *label310
   757 op and *tmp43 *tmp22 8
   758 jump *label311 equal *tmp43 false
   759 draw col %[red]
 
   762 draw col %[green]
   763 label *label312
   764 draw rect 30 0 8 8
-    * label *label313
-    * label *label314
   765 op and *tmp43 *tmp22 16
   766 jump *label315 equal *tmp43 false
   767 draw col %[red]
 
   770 draw col %[green]
   771 label *label316
   772 draw rect 40 0 8 8
-    * label *label317
-    * label *label318
   773 op and *tmp43 *tmp22 32
   774 jump *label319 equal *tmp43 false
   775 draw col %[red]
 
   778 draw col %[green]
   779 label *label320
   780 draw rect 50 0 8 8
-    * label *label321
-    * label *label322
   781 op and *tmp43 *tmp22 64
   782 jump *label323 equal *tmp43 false
   783 draw col %[red]
 
   786 draw col %[green]
   787 label *label324
   788 draw rect 60 0 8 8
-    * label *label325
-    * label *label326
-    * label *label327
-    * label *label19
   789 drawflush display1
-    * label *label16
   790 print *tmp22
   791 print "\n"
   792 op sub *tmp47 :finish :start

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-1 instructions):
 
   794 op round *tmp50 *tmp49
   795 print *tmp50
   796 printflush message1
-    * end

Final code before resolving virtual instructions:

        label *label3                                                test.mnd: require "Matrices.mnd" remote processor1;
    0:  read *tmp13 processor1 "*signature"                          ...
    1:  jump *label3 notEqual *tmp13 "385702d66f725e74:v1"           ...
    2:  set x 85                                                     test.mnd: param x = 85;
    3:  set y 100                                                    test.mnd: param y = 100;
    4:  ubind @poly                                                  test.mnd: ubind(@poly);
    5:  op add *tmp14 y 5                                            test.mnd: do
        label *label4                                                ...
    6:  ucontrol move x *tmp14 0 0 0                                 test.mnd: move(x, y + 5);
    7:  ucontrol within x *tmp14 2 *tmp16 0                          test.mnd: while !within(x, y + 5, 2);
    8:  jump *label4 equal *tmp16 false                              test.mnd: do
    9:  set :start @tick                                             test.mnd: var start = @tick;
   10:  write @unit processor1 ":createTerrainMask:unit"             test.mnd: async(processor1.createTerrainMask(@unit, x, y));
   11:  write x processor1 ":createTerrainMask:x"                    ...
   12:  write y processor1 ":createTerrainMask:y"                    ...
   13:  write false processor1 ":createTerrainMask*finished"         ...
   14:  write 1 processor1 "@counter"                                ...
   15:  op add *tmp23 y 4                                            test.mnd: var row2 = createBlockMaskRow(x, y + 4);
   16:  op add *tmp52 x 4                                            test.mnd: result = (result << 1) | getBlock(x + c, y);
   17:  ucontrol getBlock *tmp52 *tmp23 0 :createBlockMaskRow:result ...
   18:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   19:  op add *tmp52 x 3                                            ...
   20:  ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0                   ...
   21:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   22:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   23:  op add *tmp52 x 2                                            ...
   24:  ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0                   ...
   25:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   26:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   27:  op add *tmp52 x 1                                            ...
   28:  ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0                   ...
   29:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   30:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   31:  ucontrol getBlock x *tmp23 0 *tmp53 0                        ...
   32:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   33:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   34:  op add *tmp52 x -1                                           ...
   35:  ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0                   ...
   36:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   37:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   38:  op add *tmp52 x -2                                           ...
   39:  ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0                   ...
   40:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   41:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   42:  op add *tmp52 x -3                                           ...
   43:  ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0                   ...
   44:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   45:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   46:  op add *tmp52 x -4                                           ...
   47:  ucontrol getBlock *tmp52 *tmp23 0 *tmp53 0                   ...
   48:  op or :createAdjacentMask:row2 *tmp51 *tmp53                 ...
   49:  op add *tmp25 y 3                                            test.mnd: var row1 = createBlockMaskRow(x, y + 3);
   50:  op add *tmp52 x 4                                            test.mnd: result = (result << 1) | getBlock(x + c, y);
   51:  ucontrol getBlock *tmp52 *tmp25 0 :createBlockMaskRow:result ...
   52:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   53:  op add *tmp52 x 3                                            ...
   54:  ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0                   ...
   55:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   56:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   57:  op add *tmp52 x 2                                            ...
   58:  ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0                   ...
   59:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   60:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   61:  op add *tmp52 x 1                                            ...
   62:  ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0                   ...
   63:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   64:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   65:  ucontrol getBlock x *tmp25 0 *tmp53 0                        ...
   66:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   67:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   68:  op add *tmp52 x -1                                           ...
   69:  ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0                   ...
   70:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   71:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   72:  op add *tmp52 x -2                                           ...
   73:  ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0                   ...
   74:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   75:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   76:  op add *tmp52 x -3                                           ...
   77:  ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0                   ...
   78:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   79:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   80:  op add *tmp52 x -4                                           ...
   81:  ucontrol getBlock *tmp52 *tmp25 0 *tmp53 0                   ...
   82:  op or :createAdjacentMask:row1 *tmp51 *tmp53                 ...
   83:  op add *tmp27 y 2                                            test.mnd: var row0 = createBlockMaskRow(x, y + r);
   84:  op add *tmp52 x 4                                            test.mnd: result = (result << 1) | getBlock(x + c, y);
   85:  ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result ...
   86:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   87:  op add *tmp52 x 3                                            ...
   88:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
   89:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   90:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   91:  op add *tmp52 x 2                                            ...
   92:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
   93:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   94:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   95:  op add *tmp52 x 1                                            ...
   96:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
   97:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
   98:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
   99:  ucontrol getBlock x *tmp27 0 *tmp53 0                        ...
  100:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  101:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  102:  op add *tmp52 x -1                                           ...
  103:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  104:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  105:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  106:  op add *tmp52 x -2                                           ...
  107:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  108:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  109:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  110:  op add *tmp52 x -3                                           ...
  111:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  112:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  113:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  114:  op add *tmp52 x -4                                           ...
  115:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  116:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  117:  op shl *tmp29 :createAdjacentMask:row1 1                     test.mnd: var mask = row2 | (row1 << 1) | (row1 >> 1) | row0;
  118:  op or *tmp30 :createAdjacentMask:row2 *tmp29                 ...
  119:  op shr *tmp31 :createAdjacentMask:row1 1                     ...
  120:  op or *tmp32 *tmp30 *tmp31                                   ...
  121:  op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:re ...
  122:  op and :createAdjacentMask:result :createAdjacentMask:mask 0 test.mnd: result = (result << 7) | (mask & 0xFE);       // We're keeping one additional bit on the right
  123:  set :createAdjacentMask:row2 :createAdjacentMask:row1        test.mnd: row2 = row1;
  124:  set :createAdjacentMask:row1 :createBlockMaskRow:result      test.mnd: row1 = row0;
  125:  op add *tmp27 y 1                                            test.mnd: var row0 = createBlockMaskRow(x, y + r);
  126:  op add *tmp52 x 4                                            test.mnd: result = (result << 1) | getBlock(x + c, y);
  127:  ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result ...
  128:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  129:  op add *tmp52 x 3                                            ...
  130:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  131:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  132:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  133:  op add *tmp52 x 2                                            ...
  134:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  135:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  136:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  137:  op add *tmp52 x 1                                            ...
  138:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  139:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  140:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  141:  ucontrol getBlock x *tmp27 0 *tmp53 0                        ...
  142:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  143:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  144:  op add *tmp52 x -1                                           ...
  145:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  146:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  147:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  148:  op add *tmp52 x -2                                           ...
  149:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  150:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  151:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  152:  op add *tmp52 x -3                                           ...
  153:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  154:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  155:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  156:  op add *tmp52 x -4                                           ...
  157:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  158:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  159:  op shl *tmp29 :createAdjacentMask:row1 1                     test.mnd: var mask = row2 | (row1 << 1) | (row1 >> 1) | row0;
  160:  op or *tmp30 :createAdjacentMask:row2 *tmp29                 ...
  161:  op shr *tmp31 :createAdjacentMask:row1 1                     ...
  162:  op or *tmp32 *tmp30 *tmp31                                   ...
  163:  op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:re ...
  164:  op shl *tmp34 :createAdjacentMask:result 7                   test.mnd: result = (result << 7) | (mask & 0xFE);       // We're keeping one additional bit on the right
  165:  op and *tmp35 :createAdjacentMask:mask 0xFE                  ...
  166:  op or :createAdjacentMask:result *tmp34 *tmp35               ...
  167:  set :createAdjacentMask:row2 :createAdjacentMask:row1        test.mnd: row2 = row1;
  168:  set :createAdjacentMask:row1 :createBlockMaskRow:result      test.mnd: row1 = row0;
  169:  op add *tmp52 x 4                                            test.mnd: result = (result << 1) | getBlock(x + c, y);
  170:  ucontrol getBlock *tmp52 y 0 :createBlockMaskRow:result 0    ...
  171:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  172:  op add *tmp52 x 3                                            ...
  173:  ucontrol getBlock *tmp52 y 0 *tmp53 0                        ...
  174:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  175:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  176:  op add *tmp52 x 2                                            ...
  177:  ucontrol getBlock *tmp52 y 0 *tmp53 0                        ...
  178:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  179:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  180:  op add *tmp52 x 1                                            ...
  181:  ucontrol getBlock *tmp52 y 0 *tmp53 0                        ...
  182:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  183:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  184:  ucontrol getBlock x y 0 *tmp53 0                             ...
  185:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  186:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  187:  op add *tmp52 x -1                                           ...
  188:  ucontrol getBlock *tmp52 y 0 *tmp53 0                        ...
  189:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  190:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  191:  op add *tmp52 x -2                                           ...
  192:  ucontrol getBlock *tmp52 y 0 *tmp53 0                        ...
  193:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  194:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  195:  op add *tmp52 x -3                                           ...
  196:  ucontrol getBlock *tmp52 y 0 *tmp53 0                        ...
  197:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  198:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  199:  op add *tmp52 x -4                                           ...
  200:  ucontrol getBlock *tmp52 y 0 *tmp53 0                        ...
  201:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  202:  op shl *tmp29 :createAdjacentMask:row1 1                     test.mnd: var mask = row2 | (row1 << 1) | (row1 >> 1) | row0;
  203:  op or *tmp30 :createAdjacentMask:row2 *tmp29                 ...
  204:  op shr *tmp31 :createAdjacentMask:row1 1                     ...
  205:  op or *tmp32 *tmp30 *tmp31                                   ...
  206:  op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:re ...
  207:  op shl *tmp34 :createAdjacentMask:result 7                   test.mnd: result = (result << 7) | (mask & 0xFE);       // We're keeping one additional bit on the right
  208:  op and *tmp35 :createAdjacentMask:mask 0xFE                  ...
  209:  op or :createAdjacentMask:result *tmp34 *tmp35               ...
  210:  set :createAdjacentMask:row2 :createAdjacentMask:row1        test.mnd: row2 = row1;
  211:  set :createAdjacentMask:row1 :createBlockMaskRow:result      test.mnd: row1 = row0;
  212:  op add *tmp27 y -1                                           test.mnd: var row0 = createBlockMaskRow(x, y + r);
  213:  op add *tmp52 x 4                                            test.mnd: result = (result << 1) | getBlock(x + c, y);
  214:  ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result ...
  215:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  216:  op add *tmp52 x 3                                            ...
  217:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  218:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  219:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  220:  op add *tmp52 x 2                                            ...
  221:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  222:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  223:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  224:  op add *tmp52 x 1                                            ...
  225:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  226:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  227:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  228:  ucontrol getBlock x *tmp27 0 *tmp53 0                        ...
  229:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  230:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  231:  op add *tmp52 x -1                                           ...
  232:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  233:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  234:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  235:  op add *tmp52 x -2                                           ...
  236:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  237:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  238:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  239:  op add *tmp52 x -3                                           ...
  240:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  241:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  242:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  243:  op add *tmp52 x -4                                           ...
  244:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  245:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  246:  op shl *tmp29 :createAdjacentMask:row1 1                     test.mnd: var mask = row2 | (row1 << 1) | (row1 >> 1) | row0;
  247:  op or *tmp30 :createAdjacentMask:row2 *tmp29                 ...
  248:  op shr *tmp31 :createAdjacentMask:row1 1                     ...
  249:  op or *tmp32 *tmp30 *tmp31                                   ...
  250:  op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:re ...
  251:  op shl *tmp34 :createAdjacentMask:result 7                   test.mnd: result = (result << 7) | (mask & 0xFE);       // We're keeping one additional bit on the right
  252:  op and *tmp35 :createAdjacentMask:mask 0xFE                  ...
  253:  op or :createAdjacentMask:result *tmp34 *tmp35               ...
  254:  set :createAdjacentMask:row2 :createAdjacentMask:row1        test.mnd: row2 = row1;
  255:  set :createAdjacentMask:row1 :createBlockMaskRow:result      test.mnd: row1 = row0;
  256:  op add *tmp27 y -2                                           test.mnd: var row0 = createBlockMaskRow(x, y + r);
  257:  op add *tmp52 x 4                                            test.mnd: result = (result << 1) | getBlock(x + c, y);
  258:  ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result ...
  259:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  260:  op add *tmp52 x 3                                            ...
  261:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  262:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  263:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  264:  op add *tmp52 x 2                                            ...
  265:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  266:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  267:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  268:  op add *tmp52 x 1                                            ...
  269:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  270:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  271:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  272:  ucontrol getBlock x *tmp27 0 *tmp53 0                        ...
  273:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  274:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  275:  op add *tmp52 x -1                                           ...
  276:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  277:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  278:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  279:  op add *tmp52 x -2                                           ...
  280:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  281:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  282:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  283:  op add *tmp52 x -3                                           ...
  284:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  285:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  286:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  287:  op add *tmp52 x -4                                           ...
  288:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  289:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  290:  op shl *tmp29 :createAdjacentMask:row1 1                     test.mnd: var mask = row2 | (row1 << 1) | (row1 >> 1) | row0;
  291:  op or *tmp30 :createAdjacentMask:row2 *tmp29                 ...
  292:  op shr *tmp31 :createAdjacentMask:row1 1                     ...
  293:  op or *tmp32 *tmp30 *tmp31                                   ...
  294:  op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:re ...
  295:  op shl *tmp34 :createAdjacentMask:result 7                   test.mnd: result = (result << 7) | (mask & 0xFE);       // We're keeping one additional bit on the right
  296:  op and *tmp35 :createAdjacentMask:mask 0xFE                  ...
  297:  op or :createAdjacentMask:result *tmp34 *tmp35               ...
  298:  set :createAdjacentMask:row2 :createAdjacentMask:row1        test.mnd: row2 = row1;
  299:  set :createAdjacentMask:row1 :createBlockMaskRow:result      test.mnd: row1 = row0;
  300:  op add *tmp27 y -3                                           test.mnd: var row0 = createBlockMaskRow(x, y + r);
  301:  op add *tmp52 x 4                                            test.mnd: result = (result << 1) | getBlock(x + c, y);
  302:  ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result ...
  303:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  304:  op add *tmp52 x 3                                            ...
  305:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  306:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  307:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  308:  op add *tmp52 x 2                                            ...
  309:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  310:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  311:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  312:  op add *tmp52 x 1                                            ...
  313:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  314:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  315:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  316:  ucontrol getBlock x *tmp27 0 *tmp53 0                        ...
  317:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  318:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  319:  op add *tmp52 x -1                                           ...
  320:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  321:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  322:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  323:  op add *tmp52 x -2                                           ...
  324:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  325:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  326:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  327:  op add *tmp52 x -3                                           ...
  328:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  329:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  330:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  331:  op add *tmp52 x -4                                           ...
  332:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  333:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  334:  op shl *tmp29 :createAdjacentMask:row1 1                     test.mnd: var mask = row2 | (row1 << 1) | (row1 >> 1) | row0;
  335:  op or *tmp30 :createAdjacentMask:row2 *tmp29                 ...
  336:  op shr *tmp31 :createAdjacentMask:row1 1                     ...
  337:  op or *tmp32 *tmp30 *tmp31                                   ...
  338:  op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:re ...
  339:  op shl *tmp34 :createAdjacentMask:result 7                   test.mnd: result = (result << 7) | (mask & 0xFE);       // We're keeping one additional bit on the right
  340:  op and *tmp35 :createAdjacentMask:mask 0xFE                  ...
  341:  op or :createAdjacentMask:result *tmp34 *tmp35               ...
  342:  set :createAdjacentMask:row2 :createAdjacentMask:row1        test.mnd: row2 = row1;
  343:  set :createAdjacentMask:row1 :createBlockMaskRow:result      test.mnd: row1 = row0;
  344:  op add *tmp27 y -4                                           test.mnd: var row0 = createBlockMaskRow(x, y + r);
  345:  op add *tmp52 x 4                                            test.mnd: result = (result << 1) | getBlock(x + c, y);
  346:  ucontrol getBlock *tmp52 *tmp27 0 :createBlockMaskRow:result ...
  347:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  348:  op add *tmp52 x 3                                            ...
  349:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  350:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  351:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  352:  op add *tmp52 x 2                                            ...
  353:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  354:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  355:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  356:  op add *tmp52 x 1                                            ...
  357:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  358:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  359:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  360:  ucontrol getBlock x *tmp27 0 *tmp53 0                        ...
  361:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  362:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  363:  op add *tmp52 x -1                                           ...
  364:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  365:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  366:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  367:  op add *tmp52 x -2                                           ...
  368:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  369:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  370:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  371:  op add *tmp52 x -3                                           ...
  372:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  373:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  374:  op shl *tmp51 :createBlockMaskRow:result 1                   ...
  375:  op add *tmp52 x -4                                           ...
  376:  ucontrol getBlock *tmp52 *tmp27 0 *tmp53 0                   ...
  377:  op or :createBlockMaskRow:result *tmp51 *tmp53               ...
  378:  op shl *tmp29 :createAdjacentMask:row1 1                     test.mnd: var mask = row2 | (row1 << 1) | (row1 >> 1) | row0;
  379:  op or *tmp30 :createAdjacentMask:row2 *tmp29                 ...
  380:  op shr *tmp31 :createAdjacentMask:row1 1                     ...
  381:  op or *tmp32 *tmp30 *tmp31                                   ...
  382:  op or :createAdjacentMask:mask *tmp32 :createBlockMaskRow:re ...
  383:  op shl *tmp34 :createAdjacentMask:result 7                   test.mnd: result = (result << 7) | (mask & 0xFE);       // We're keeping one additional bit on the right
  384:  op and *tmp35 :createAdjacentMask:mask 0xFE                  ...
  385:  op or :createAdjacentMask:result *tmp34 *tmp35               ...
  386:  op shr *tmp22 :createAdjacentMask:result 1                   test.mnd: var adjacentMask = createAdjacentMask(x, y);
        label *label15                                               test.mnd: var terrainMask = await(processor1.createTerrainMask);
  387:  wait 1e-15                                                   ...
  388:  read *tmp38 processor1 ":createTerrainMask*finished"         ...
  389:  jump *label15 equal *tmp38 false                             ...
  390:  set :finish @tick                                            test.mnd: var finish = @tick;
  391:  draw reset 0 0 0 0 0 0                                       test.mnd: reset();
  392:  draw translate 6 6 0 0 0 0                                   test.mnd: translate(6, 6);
  393:  draw clear 0 0 0 0 0 0                                       test.mnd: clear(0, 0, 0);
  394:  op and *tmp43 *tmp22 4398046511104                           test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  395:  jump *label107 equal *tmp43 false                            ...
  396:  draw col %[red] 0 0 0 0 0                                    ...
  397:  jump *label108 always 0 0                                    ...
        label *label107                                              ...
  398:  draw col %[green] 0 0 0 0 0                                  ...
        label *label108                                              ...
  399:  draw rect 0 60 8 8 0 0                                       test.mnd: rect(c * 10, r * 10, 8, 8);
  400:  op and *tmp43 *tmp22 8796093022208                           test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  401:  jump *label111 equal *tmp43 false                            ...
  402:  draw col %[red] 0 0 0 0 0                                    ...
  403:  jump *label112 always 0 0                                    ...
        label *label111                                              ...
  404:  draw col %[green] 0 0 0 0 0                                  ...
        label *label112                                              ...
  405:  draw rect 10 60 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  406:  op and *tmp43 *tmp22 17592186044416                          test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  407:  jump *label115 equal *tmp43 false                            ...
  408:  draw col %[red] 0 0 0 0 0                                    ...
  409:  jump *label116 always 0 0                                    ...
        label *label115                                              ...
  410:  draw col %[green] 0 0 0 0 0                                  ...
        label *label116                                              ...
  411:  draw rect 20 60 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  412:  op and *tmp43 *tmp22 35184372088832                          test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  413:  jump *label119 equal *tmp43 false                            ...
  414:  draw col %[red] 0 0 0 0 0                                    ...
  415:  jump *label120 always 0 0                                    ...
        label *label119                                              ...
  416:  draw col %[green] 0 0 0 0 0                                  ...
        label *label120                                              ...
  417:  draw rect 30 60 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  418:  op and *tmp43 *tmp22 70368744177664                          test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  419:  jump *label123 equal *tmp43 false                            ...
  420:  draw col %[red] 0 0 0 0 0                                    ...
  421:  jump *label124 always 0 0                                    ...
        label *label123                                              ...
  422:  draw col %[green] 0 0 0 0 0                                  ...
        label *label124                                              ...
  423:  draw rect 40 60 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  424:  op and *tmp43 *tmp22 140737488355328                         test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  425:  jump *label127 equal *tmp43 false                            ...
  426:  draw col %[red] 0 0 0 0 0                                    ...
  427:  jump *label128 always 0 0                                    ...
        label *label127                                              ...
  428:  draw col %[green] 0 0 0 0 0                                  ...
        label *label128                                              ...
  429:  draw rect 50 60 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  430:  op and *tmp43 *tmp22 281474976710656                         test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  431:  jump *label131 equal *tmp43 false                            ...
  432:  draw col %[red] 0 0 0 0 0                                    ...
  433:  jump *label132 always 0 0                                    ...
        label *label131                                              ...
  434:  draw col %[green] 0 0 0 0 0                                  ...
        label *label132                                              ...
  435:  draw rect 60 60 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  436:  op and *tmp43 *tmp22 34359738368                             test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  437:  jump *label139 equal *tmp43 false                            ...
  438:  draw col %[red] 0 0 0 0 0                                    ...
  439:  jump *label140 always 0 0                                    ...
        label *label139                                              ...
  440:  draw col %[green] 0 0 0 0 0                                  ...
        label *label140                                              ...
  441:  draw rect 0 50 8 8 0 0                                       test.mnd: rect(c * 10, r * 10, 8, 8);
  442:  op and *tmp43 *tmp22 68719476736                             test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  443:  jump *label143 equal *tmp43 false                            ...
  444:  draw col %[red] 0 0 0 0 0                                    ...
  445:  jump *label144 always 0 0                                    ...
        label *label143                                              ...
  446:  draw col %[green] 0 0 0 0 0                                  ...
        label *label144                                              ...
  447:  draw rect 10 50 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  448:  op and *tmp43 *tmp22 137438953472                            test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  449:  jump *label147 equal *tmp43 false                            ...
  450:  draw col %[red] 0 0 0 0 0                                    ...
  451:  jump *label148 always 0 0                                    ...
        label *label147                                              ...
  452:  draw col %[green] 0 0 0 0 0                                  ...
        label *label148                                              ...
  453:  draw rect 20 50 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  454:  op and *tmp43 *tmp22 274877906944                            test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  455:  jump *label151 equal *tmp43 false                            ...
  456:  draw col %[red] 0 0 0 0 0                                    ...
  457:  jump *label152 always 0 0                                    ...
        label *label151                                              ...
  458:  draw col %[green] 0 0 0 0 0                                  ...
        label *label152                                              ...
  459:  draw rect 30 50 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  460:  op and *tmp43 *tmp22 549755813888                            test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  461:  jump *label155 equal *tmp43 false                            ...
  462:  draw col %[red] 0 0 0 0 0                                    ...
  463:  jump *label156 always 0 0                                    ...
        label *label155                                              ...
  464:  draw col %[green] 0 0 0 0 0                                  ...
        label *label156                                              ...
  465:  draw rect 40 50 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  466:  op and *tmp43 *tmp22 1099511627776                           test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  467:  jump *label159 equal *tmp43 false                            ...
  468:  draw col %[red] 0 0 0 0 0                                    ...
  469:  jump *label160 always 0 0                                    ...
        label *label159                                              ...
  470:  draw col %[green] 0 0 0 0 0                                  ...
        label *label160                                              ...
  471:  draw rect 50 50 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  472:  op and *tmp43 *tmp22 2199023255552                           test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  473:  jump *label163 equal *tmp43 false                            ...
  474:  draw col %[red] 0 0 0 0 0                                    ...
  475:  jump *label164 always 0 0                                    ...
        label *label163                                              ...
  476:  draw col %[green] 0 0 0 0 0                                  ...
        label *label164                                              ...
  477:  draw rect 60 50 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  478:  op and *tmp43 *tmp22 268435456                               test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  479:  jump *label171 equal *tmp43 false                            ...
  480:  draw col %[red] 0 0 0 0 0                                    ...
  481:  jump *label172 always 0 0                                    ...
        label *label171                                              ...
  482:  draw col %[green] 0 0 0 0 0                                  ...
        label *label172                                              ...
  483:  draw rect 0 40 8 8 0 0                                       test.mnd: rect(c * 10, r * 10, 8, 8);
  484:  op and *tmp43 *tmp22 536870912                               test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  485:  jump *label175 equal *tmp43 false                            ...
  486:  draw col %[red] 0 0 0 0 0                                    ...
  487:  jump *label176 always 0 0                                    ...
        label *label175                                              ...
  488:  draw col %[green] 0 0 0 0 0                                  ...
        label *label176                                              ...
  489:  draw rect 10 40 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  490:  op and *tmp43 *tmp22 1073741824                              test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  491:  jump *label179 equal *tmp43 false                            ...
  492:  draw col %[red] 0 0 0 0 0                                    ...
  493:  jump *label180 always 0 0                                    ...
        label *label179                                              ...
  494:  draw col %[green] 0 0 0 0 0                                  ...
        label *label180                                              ...
  495:  draw rect 20 40 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  496:  op and *tmp43 *tmp22 2147483648                              test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  497:  jump *label183 equal *tmp43 false                            ...
  498:  draw col %[red] 0 0 0 0 0                                    ...
  499:  jump *label184 always 0 0                                    ...
        label *label183                                              ...
  500:  draw col %[green] 0 0 0 0 0                                  ...
        label *label184                                              ...
  501:  draw rect 30 40 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  502:  op and *tmp43 *tmp22 4294967296                              test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  503:  jump *label187 equal *tmp43 false                            ...
  504:  draw col %[red] 0 0 0 0 0                                    ...
  505:  jump *label188 always 0 0                                    ...
        label *label187                                              ...
  506:  draw col %[green] 0 0 0 0 0                                  ...
        label *label188                                              ...
  507:  draw rect 40 40 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  508:  op and *tmp43 *tmp22 8589934592                              test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  509:  jump *label191 equal *tmp43 false                            ...
  510:  draw col %[red] 0 0 0 0 0                                    ...
  511:  jump *label192 always 0 0                                    ...
        label *label191                                              ...
  512:  draw col %[green] 0 0 0 0 0                                  ...
        label *label192                                              ...
  513:  draw rect 50 40 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  514:  op and *tmp43 *tmp22 17179869184                             test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  515:  jump *label195 equal *tmp43 false                            ...
  516:  draw col %[red] 0 0 0 0 0                                    ...
  517:  jump *label196 always 0 0                                    ...
        label *label195                                              ...
  518:  draw col %[green] 0 0 0 0 0                                  ...
        label *label196                                              ...
  519:  draw rect 60 40 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  520:  op and *tmp43 *tmp22 2097152                                 test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  521:  jump *label203 equal *tmp43 false                            ...
  522:  draw col %[red] 0 0 0 0 0                                    ...
  523:  jump *label204 always 0 0                                    ...
        label *label203                                              ...
  524:  draw col %[green] 0 0 0 0 0                                  ...
        label *label204                                              ...
  525:  draw rect 0 30 8 8 0 0                                       test.mnd: rect(c * 10, r * 10, 8, 8);
  526:  op and *tmp43 *tmp22 4194304                                 test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  527:  jump *label207 equal *tmp43 false                            ...
  528:  draw col %[red] 0 0 0 0 0                                    ...
  529:  jump *label208 always 0 0                                    ...
        label *label207                                              ...
  530:  draw col %[green] 0 0 0 0 0                                  ...
        label *label208                                              ...
  531:  draw rect 10 30 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  532:  op and *tmp43 *tmp22 8388608                                 test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  533:  jump *label211 equal *tmp43 false                            ...
  534:  draw col %[red] 0 0 0 0 0                                    ...
  535:  jump *label212 always 0 0                                    ...
        label *label211                                              ...
  536:  draw col %[green] 0 0 0 0 0                                  ...
        label *label212                                              ...
  537:  draw rect 20 30 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  538:  op and *tmp43 *tmp22 16777216                                test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  539:  jump *label215 equal *tmp43 false                            ...
  540:  draw col %[red] 0 0 0 0 0                                    ...
  541:  jump *label216 always 0 0                                    ...
        label *label215                                              ...
  542:  draw col %[green] 0 0 0 0 0                                  ...
        label *label216                                              ...
  543:  draw rect 30 30 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  544:  op and *tmp43 *tmp22 33554432                                test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  545:  jump *label219 equal *tmp43 false                            ...
  546:  draw col %[red] 0 0 0 0 0                                    ...
  547:  jump *label220 always 0 0                                    ...
        label *label219                                              ...
  548:  draw col %[green] 0 0 0 0 0                                  ...
        label *label220                                              ...
  549:  draw rect 40 30 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  550:  op and *tmp43 *tmp22 67108864                                test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  551:  jump *label223 equal *tmp43 false                            ...
  552:  draw col %[red] 0 0 0 0 0                                    ...
  553:  jump *label224 always 0 0                                    ...
        label *label223                                              ...
  554:  draw col %[green] 0 0 0 0 0                                  ...
        label *label224                                              ...
  555:  draw rect 50 30 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  556:  op and *tmp43 *tmp22 134217728                               test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  557:  jump *label227 equal *tmp43 false                            ...
  558:  draw col %[red] 0 0 0 0 0                                    ...
  559:  jump *label228 always 0 0                                    ...
        label *label227                                              ...
  560:  draw col %[green] 0 0 0 0 0                                  ...
        label *label228                                              ...
  561:  draw rect 60 30 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  562:  op and *tmp43 *tmp22 16384                                   test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  563:  jump *label235 equal *tmp43 false                            ...
  564:  draw col %[red] 0 0 0 0 0                                    ...
  565:  jump *label236 always 0 0                                    ...
        label *label235                                              ...
  566:  draw col %[green] 0 0 0 0 0                                  ...
        label *label236                                              ...
  567:  draw rect 0 20 8 8 0 0                                       test.mnd: rect(c * 10, r * 10, 8, 8);
  568:  op and *tmp43 *tmp22 32768                                   test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  569:  jump *label239 equal *tmp43 false                            ...
  570:  draw col %[red] 0 0 0 0 0                                    ...
  571:  jump *label240 always 0 0                                    ...
        label *label239                                              ...
  572:  draw col %[green] 0 0 0 0 0                                  ...
        label *label240                                              ...
  573:  draw rect 10 20 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  574:  op and *tmp43 *tmp22 65536                                   test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  575:  jump *label243 equal *tmp43 false                            ...
  576:  draw col %[red] 0 0 0 0 0                                    ...
  577:  jump *label244 always 0 0                                    ...
        label *label243                                              ...
  578:  draw col %[green] 0 0 0 0 0                                  ...
        label *label244                                              ...
  579:  draw rect 20 20 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  580:  op and *tmp43 *tmp22 131072                                  test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  581:  jump *label247 equal *tmp43 false                            ...
  582:  draw col %[red] 0 0 0 0 0                                    ...
  583:  jump *label248 always 0 0                                    ...
        label *label247                                              ...
  584:  draw col %[green] 0 0 0 0 0                                  ...
        label *label248                                              ...
  585:  draw rect 30 20 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  586:  op and *tmp43 *tmp22 262144                                  test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  587:  jump *label251 equal *tmp43 false                            ...
  588:  draw col %[red] 0 0 0 0 0                                    ...
  589:  jump *label252 always 0 0                                    ...
        label *label251                                              ...
  590:  draw col %[green] 0 0 0 0 0                                  ...
        label *label252                                              ...
  591:  draw rect 40 20 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  592:  op and *tmp43 *tmp22 524288                                  test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  593:  jump *label255 equal *tmp43 false                            ...
  594:  draw col %[red] 0 0 0 0 0                                    ...
  595:  jump *label256 always 0 0                                    ...
        label *label255                                              ...
  596:  draw col %[green] 0 0 0 0 0                                  ...
        label *label256                                              ...
  597:  draw rect 50 20 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  598:  op and *tmp43 *tmp22 1048576                                 test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  599:  jump *label259 equal *tmp43 false                            ...
  600:  draw col %[red] 0 0 0 0 0                                    ...
  601:  jump *label260 always 0 0                                    ...
        label *label259                                              ...
  602:  draw col %[green] 0 0 0 0 0                                  ...
        label *label260                                              ...
  603:  draw rect 60 20 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  604:  op and *tmp43 *tmp22 128                                     test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  605:  jump *label267 equal *tmp43 false                            ...
  606:  draw col %[red] 0 0 0 0 0                                    ...
  607:  jump *label268 always 0 0                                    ...
        label *label267                                              ...
  608:  draw col %[green] 0 0 0 0 0                                  ...
        label *label268                                              ...
  609:  draw rect 0 10 8 8 0 0                                       test.mnd: rect(c * 10, r * 10, 8, 8);
  610:  op and *tmp43 *tmp22 256                                     test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  611:  jump *label271 equal *tmp43 false                            ...
  612:  draw col %[red] 0 0 0 0 0                                    ...
  613:  jump *label272 always 0 0                                    ...
        label *label271                                              ...
  614:  draw col %[green] 0 0 0 0 0                                  ...
        label *label272                                              ...
  615:  draw rect 10 10 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  616:  op and *tmp43 *tmp22 512                                     test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  617:  jump *label275 equal *tmp43 false                            ...
  618:  draw col %[red] 0 0 0 0 0                                    ...
  619:  jump *label276 always 0 0                                    ...
        label *label275                                              ...
  620:  draw col %[green] 0 0 0 0 0                                  ...
        label *label276                                              ...
  621:  draw rect 20 10 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  622:  op and *tmp43 *tmp22 1024                                    test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  623:  jump *label279 equal *tmp43 false                            ...
  624:  draw col %[red] 0 0 0 0 0                                    ...
  625:  jump *label280 always 0 0                                    ...
        label *label279                                              ...
  626:  draw col %[green] 0 0 0 0 0                                  ...
        label *label280                                              ...
  627:  draw rect 30 10 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  628:  op and *tmp43 *tmp22 2048                                    test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  629:  jump *label283 equal *tmp43 false                            ...
  630:  draw col %[red] 0 0 0 0 0                                    ...
  631:  jump *label284 always 0 0                                    ...
        label *label283                                              ...
  632:  draw col %[green] 0 0 0 0 0                                  ...
        label *label284                                              ...
  633:  draw rect 40 10 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  634:  op and *tmp43 *tmp22 4096                                    test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  635:  jump *label287 equal *tmp43 false                            ...
  636:  draw col %[red] 0 0 0 0 0                                    ...
  637:  jump *label288 always 0 0                                    ...
        label *label287                                              ...
  638:  draw col %[green] 0 0 0 0 0                                  ...
        label *label288                                              ...
  639:  draw rect 50 10 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  640:  op and *tmp43 *tmp22 8192                                    test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  641:  jump *label291 equal *tmp43 false                            ...
  642:  draw col %[red] 0 0 0 0 0                                    ...
  643:  jump *label292 always 0 0                                    ...
        label *label291                                              ...
  644:  draw col %[green] 0 0 0 0 0                                  ...
        label *label292                                              ...
  645:  draw rect 60 10 8 8 0 0                                      test.mnd: rect(c * 10, r * 10, 8, 8);
  646:  op and *tmp43 *tmp22 1                                       test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  647:  jump *label299 equal *tmp43 false                            ...
  648:  draw col %[red] 0 0 0 0 0                                    ...
  649:  jump *label300 always 0 0                                    ...
        label *label299                                              ...
  650:  draw col %[green] 0 0 0 0 0                                  ...
        label *label300                                              ...
  651:  draw rect 0 0 8 8 0 0                                        test.mnd: rect(c * 10, r * 10, 8, 8);
  652:  op and *tmp43 *tmp22 2                                       test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  653:  jump *label303 equal *tmp43 false                            ...
  654:  draw col %[red] 0 0 0 0 0                                    ...
  655:  jump *label304 always 0 0                                    ...
        label *label303                                              ...
  656:  draw col %[green] 0 0 0 0 0                                  ...
        label *label304                                              ...
  657:  draw rect 10 0 8 8 0 0                                       test.mnd: rect(c * 10, r * 10, 8, 8);
  658:  op and *tmp43 *tmp22 4                                       test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  659:  jump *label307 equal *tmp43 false                            ...
  660:  draw col %[red] 0 0 0 0 0                                    ...
  661:  jump *label308 always 0 0                                    ...
        label *label307                                              ...
  662:  draw col %[green] 0 0 0 0 0                                  ...
        label *label308                                              ...
  663:  draw rect 20 0 8 8 0 0                                       test.mnd: rect(c * 10, r * 10, 8, 8);
  664:  op and *tmp43 *tmp22 8                                       test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  665:  jump *label311 equal *tmp43 false                            ...
  666:  draw col %[red] 0 0 0 0 0                                    ...
  667:  jump *label312 always 0 0                                    ...
        label *label311                                              ...
  668:  draw col %[green] 0 0 0 0 0                                  ...
        label *label312                                              ...
  669:  draw rect 30 0 8 8 0 0                                       test.mnd: rect(c * 10, r * 10, 8, 8);
  670:  op and *tmp43 *tmp22 16                                      test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  671:  jump *label315 equal *tmp43 false                            ...
  672:  draw col %[red] 0 0 0 0 0                                    ...
  673:  jump *label316 always 0 0                                    ...
        label *label315                                              ...
  674:  draw col %[green] 0 0 0 0 0                                  ...
        label *label316                                              ...
  675:  draw rect 40 0 8 8 0 0                                       test.mnd: rect(c * 10, r * 10, 8, 8);
  676:  op and *tmp43 *tmp22 32                                      test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  677:  jump *label319 equal *tmp43 false                            ...
  678:  draw col %[red] 0 0 0 0 0                                    ...
  679:  jump *label320 always 0 0                                    ...
        label *label319                                              ...
  680:  draw col %[green] 0 0 0 0 0                                  ...
        label *label320                                              ...
  681:  draw rect 50 0 8 8 0 0                                       test.mnd: rect(c * 10, r * 10, 8, 8);
  682:  op and *tmp43 *tmp22 64                                      test.mnd: var color = mask & (1 << (7 * r + c)) ? %[red] : %[green];
  683:  jump *label323 equal *tmp43 false                            ...
  684:  draw col %[red] 0 0 0 0 0                                    ...
  685:  jump *label324 always 0 0                                    ...
        label *label323                                              ...
  686:  draw col %[green] 0 0 0 0 0                                  ...
        label *label324                                              ...
  687:  draw rect 60 0 8 8 0 0                                       test.mnd: rect(c * 10, r * 10, 8, 8);
  688:  drawflush display1                                           test.mnd: drawflush(display1);
  689:  print *tmp22                                                 test.mnd: println(m);
  690:  print "\n"                                                   ...
  691:  op sub *tmp47 :finish :start                                 test.mnd: print(round(1000 * (finish - start) / 60));
  692:  op div *tmp49 *tmp47 0.06                                    ...
  693:  op round *tmp50 *tmp49 0                                     ...
  694:  print *tmp50                                                 ...
  695:  printflush message1                                          test.mnd: #set target = 8;


Performance: parsed in 362 ms, compiled in 246 ms, optimized in 488 ms, run in 14 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: success.

Program output (1 steps):
The program didn't generate any output.
Execution exception at instruction 0: read *tmp13 processor1 "*signature":
Variable 'processor1' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
