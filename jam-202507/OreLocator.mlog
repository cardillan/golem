jump 24 always 0 0
jump 922 always 0 0
jump 939 always 0 0
jump 958 always 0 0
draw triangle bank1 message1 processor1 .adjacentMask .angle .attenuationRate
draw triangle .batteryX .batteryY .containerX .containerY .count .drillX
draw triangle .drillY .generatorX .generatorY .lastCombinedMask .lastShiftedMask .lastUnshiftedMask
draw triangle .locations .locationsStart .mapAction .mapProgress .mapSpots .mapTotal
draw triangle .maskX .maskY .nodeX .nodeY .panelX .panelY
draw triangle .searchFinished .terrainMask .water1X .water1Y .water2X .water2Y
draw triangle :createAdjacentMask:mask :createAdjacentMask:result :createAdjacentMask:row1 :createAdjacentMask:row2 :createBlockMaskRow:result :createCombinedMask:x
draw triangle :createCombinedMask:y :findDrillLocation:capacity :findDrillLocation:dx :findDrillLocation:dy :findDrillLocation:item :findDrillLocation:limit
draw triangle :findDrillLocation:ore :findDrillLocation:size :findDrillLocation:unit :findDrillLocation:x :findDrillLocation:y :findDrillLocationLocal:best
draw triangle :findDrillLocationLocal:bestX :findDrillLocationLocal:bestY :findDrillLocationLocal:capacity :findDrillLocationLocal:diffX :findDrillLocationLocal:diffY :findDrillLocationLocal:distanceLimit
draw triangle :findDrillLocationLocal:dx :findDrillLocationLocal:dy :findDrillLocationLocal:item :findDrillLocationLocal:last :findDrillLocationLocal:limit :findDrillLocationLocal:maxDistance
draw triangle :findDrillLocationLocal:ore :findDrillLocationLocal:oreX :findDrillLocationLocal:oreY :findDrillLocationLocal:score :findDrillLocationLocal:size :findDrillLocationLocal:unit
draw triangle :findDrillLocationLocal:x :findDrillLocationLocal:y :findPossiblePlacement:height :findPossiblePlacement:mask :findPossiblePlacement:placementMask :findPossiblePlacement:terrainMask
draw triangle :findPossiblePlacement:width :findPossiblePlacement:x :findPossiblePlacement:y :layoutThoriumDrill:limit :layoutThoriumDrill:unit :layoutThoriumDrill:x
draw triangle :layoutThoriumDrill:y :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:generatorHorizontal :layoutThoriumDrillAtLocation:generatorVertical :layoutThoriumDrillAtLocation:mask2x2
draw triangle :layoutThoriumDrillAtLocation:newX :layoutThoriumDrillAtLocation:newY :layoutThoriumDrillAtLocation:sx :layoutThoriumDrillAtLocation:sy :layoutThoriumDrillAtLocation:terrainMask :locateOreAway:a
draw triangle :locateOreAway:coreDist :locateOreAway:distance :locateOreAway:lastX :locateOreAway:lastY :locateOreAway:unitDist :locateOreAway:x
draw triangle :locateOreAway:y :moveTo.5:x :moveTo.5:y :round.1:x :round:x :shiftMask:clearMask
draw triangle :shiftMask:keep :shiftMask:mask :shiftMask:shift :tryPlaceGenerator:centerX :tryPlaceGenerator:centerY :tryPlaceGenerator:generatorHorizontal
draw triangle :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:terrainMask :visited:i :visited:index :visited:lx :visited:ly
read *tmp20 processor1 "*signature"
jump 24 notEqual *tmp20 "385702d66f725e74:v1"
set .attenuationRate 50
set .locations 0
set .count -1
op abs *tmp179 1 0
op greaterThan *tmp180 1 6
op abs *tmp181 0 0
op greaterThan *tmp182 0 6
set *tmp183 false
op mul *tmp185 7 0
op add :shiftMask:shift 1 0
op shr :shiftMask:clearMask 562949953421311 1
op and *tmp190 562949953421312 281474976710655
op shl *tmp199 126 7
op shl *tmp200 16254 14
op shl *tmp201 266321790 21
op or :shiftMask:keep 266321790 558517274542080
set :shiftMask:mask false
set :shiftMask*retval 0
assertequals 0 558517276622718 "Column right"
set *signature "3290b8c661787058:v1"
wait 1e12
jump 46 always 0 0
ubind :findDrillLocationLocal:unit
set .locationsStart .locations
set :findDrillLocationLocal:capacity 0
set :findDrillLocationLocal:dy :findDrillLocationLocal:capacity
set :findDrillLocationLocal:dx :findDrillLocationLocal:dy
set .mapSpots :findDrillLocationLocal:dx
op sub *tmp36 @mapw :findDrillLocationLocal:x
op sub *tmp37 @maph :findDrillLocationLocal:y
op max *tmp38 :findDrillLocationLocal:x :findDrillLocationLocal:y
op max *tmp38 *tmp38 *tmp36
op max *tmp38 *tmp38 *tmp37
set :findDrillLocationLocal:distanceLimit *tmp38
set .mapAction "Locating ore..."
set .angle 0
set .mapProgress 0
ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp41 0
jump 68 notEqual *tmp41 false
ucontrol approach :findDrillLocationLocal:x :findDrillLocationLocal:y 5.5 0 0
ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp41 0
jump 65 equal *tmp41 false
op div *tmp44 *tmp38 3.8197185279121366
op pow .mapTotal *tmp44 2
set :findDrillLocationLocal:oreX 0
set :findDrillLocationLocal:oreY 0
set :findDrillLocationLocal:best -1
set :findDrillLocationLocal:bestX :findDrillLocationLocal:x
set :findDrillLocationLocal:bestY :findDrillLocationLocal:y
op sub *tmp46 :findDrillLocationLocal:limit :findDrillLocationLocal:capacity
op mul :findDrillLocationLocal:maxDistance *tmp46 .attenuationRate
op min :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
op div *tmp49 :findDrillLocationLocal:distanceLimit 3.8197185279121366
op pow .mapTotal *tmp49 2
set :locateOreAway:x :findDrillLocationLocal:oreX
set :locateOreAway:y :findDrillLocationLocal:oreY
op mul :locateOreAway:distance 3.8197185279121366 .angle
set :locateOreAway:lastX -1
set :locateOreAway:lastY -1
op max .angle .angle @pi
op mul .mapProgress .angle .angle
op sub *tmp60 @mapw 5
op sub *tmp67 @maph 5
jump 153 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
op div :locateOreAway:a .angle @degToRad
op sin *tmp57 :locateOreAway:a 0
op mul *tmp58 *tmp57 :locateOreAway:distance
op add *tmp59 :findDrillLocationLocal:x *tmp58
op max *tmp62 *tmp59 5
op min *tmp61 *tmp62 *tmp60
op cos *tmp64 :locateOreAway:a 0
op mul *tmp65 *tmp64 :locateOreAway:distance
op add *tmp66 :findDrillLocationLocal:y *tmp65
op max *tmp69 *tmp66 5
op min *tmp68 *tmp69 *tmp67
ucontrol within *tmp61 *tmp68 5 *tmp71 0
jump 106 notEqual *tmp71 false
ucontrol approach *tmp61 *tmp68 4.5 0 0
ucontrol within *tmp61 *tmp68 5 *tmp71 0
jump 103 equal *tmp71 false
op div *tmp74 3.8197185279121366 :locateOreAway:distance
op add .angle .angle *tmp74
op mul .mapProgress .angle .angle
op mul :locateOreAway:distance 3.8197185279121366 .angle
ulocate ore core true :findDrillLocationLocal:item :locateOreAway:x :locateOreAway:y *tmp77 0
jump 114 notEqual *tmp77 false
set *tmp51 false
jump 154 always 0 0
op sub *tmp81 :locateOreAway:x :findDrillLocationLocal:x
op abs *tmp82 *tmp81 0
op sub *tmp83 :locateOreAway:y :findDrillLocationLocal:y
op abs *tmp84 *tmp83 0
op max :locateOreAway:coreDist *tmp82 *tmp84
op sub *tmp86 :locateOreAway:x *tmp61
op sub *tmp87 :locateOreAway:y *tmp68
op len :locateOreAway:unitDist *tmp86 *tmp87
jump 124 notEqual :locateOreAway:lastX :locateOreAway:x
jump 152 equal :locateOreAway:lastY :locateOreAway:y
jump 152 lessThan :locateOreAway:coreDist 7
jump 152 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
set :locateOreAway:lastX :locateOreAway:x
set :locateOreAway:lastY :locateOreAway:y
set *tmp98 .locations
set :visited:i .locationsStart
jump 144 greaterThanEq .locationsStart *tmp98
op mul :visited:index 4 :visited:i
op add *tmp100 :visited:index 2
read :visited:lx bank1 *tmp100
op add *tmp103 :visited:index 3
read :visited:ly bank1 *tmp103
op sub *tmp106 :locateOreAway:x :visited:lx
op sub *tmp107 :locateOreAway:y :visited:ly
op len *tmp108 *tmp106 *tmp107
jump 142 greaterThanEq *tmp108 7
set *tmp97 true
jump 145 always 0 0
op add :visited:i :visited:i 1
jump 131 lessThan :visited:i *tmp98
set *tmp97 false
jump 152 notEqual *tmp97 false
op div *tmp113 2 .angle
op add .angle .angle *tmp113
op mul .mapProgress .angle .angle
printflush message1
set *tmp51 true
jump 154 always 0 0
jump 90 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
set *tmp51 false
set :findDrillLocationLocal:oreX :locateOreAway:x
set :findDrillLocationLocal:oreY :locateOreAway:y
jump 159 notEqual *tmp51 false
op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
set @counter :findDrillLocationLocal*retaddr
jump 161 lessThan :findDrillLocationLocal:limit 1000
op add .mapSpots .mapSpots 1
ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp123 0
jump 166 notEqual *tmp123 false
ucontrol approach :locateOreAway:x :locateOreAway:y 5.5 0 0
ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp123 0
jump 163 equal *tmp123 false
set :findDrillLocationLocal:last 0
write @unit processor1 ":findBestPosition:unit"
write :findDrillLocationLocal:oreX processor1 ":findBestPosition:x"
write :findDrillLocationLocal:oreY processor1 ":findBestPosition:y"
write :findDrillLocationLocal:ore processor1 ":findBestPosition:ore"
write :findDrillLocationLocal:size processor1 ":findBestPosition:size"
write false processor1 ":findBestPosition*finished"
write 2 processor1 "@counter"
wait 1e-15
read *tmp126 processor1 ":findBestPosition*finished"
jump 174 equal *tmp126 false
read :findDrillLocationLocal:diffX processor1 ":findBestPosition:bestX"
read :findDrillLocationLocal:diffY processor1 ":findBestPosition:bestY"
read :findDrillLocationLocal:score processor1 ":findBestPosition*retval"
jump 200 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:capacity
op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
jump 186 greaterThanEq :findDrillLocationLocal:limit 1000
set .mapSpots :findDrillLocationLocal:score
jump 200 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
op add .count .count 1
sensor *tmp138 :findDrillLocationLocal:item @id
write *tmp138 bank1 .count
op add .count .count 1
write :findDrillLocationLocal:score bank1 .count
op add .count .count 1
write :findDrillLocationLocal:dx bank1 .count
op add .count .count 1
write :findDrillLocationLocal:dy bank1 .count
op add .locations .locations 1
ucontrol unbind 0 0 0 0 0
set :findDrillLocationLocal*retval true
set @counter :findDrillLocationLocal*retaddr
jump 204 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
set :findDrillLocationLocal:best :findDrillLocationLocal:score
jump 220 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:last
set :findDrillLocationLocal:last :findDrillLocationLocal:score
op mul :round:x :findDrillLocationLocal:diffX 1.1
op add *tmp154 :round:x 0.5
op floor *tmp153 *tmp154 0
op add :findDrillLocationLocal:oreX :findDrillLocationLocal:oreX *tmp153
op mul :round.1:x :findDrillLocationLocal:diffY 1.1
op add *tmp158 :round.1:x 0.5
op floor *tmp157 *tmp158 0
op add :findDrillLocationLocal:oreY :findDrillLocationLocal:oreY *tmp157
op sub *tmp160 :findDrillLocationLocal:oreX :findDrillLocationLocal:x
op abs *tmp161 *tmp160 0
op sub *tmp162 :findDrillLocationLocal:oreY :findDrillLocationLocal:y
op abs *tmp163 *tmp162 0
op min *tmp164 *tmp161 *tmp163
jump 167 greaterThanEq *tmp164 7
jump 72 lessThan :findDrillLocationLocal:best 0
op add .count .count 1
sensor *tmp171 :findDrillLocationLocal:item @id
write *tmp171 bank1 .count
op add .count .count 1
write :findDrillLocationLocal:best bank1 .count
op add .count .count 1
write :findDrillLocationLocal:bestX bank1 .count
op add .count .count 1
write :findDrillLocationLocal:bestY bank1 .count
op add .locations .locations 1
jump 72 always 0 0
set :findPossiblePlacement:y -3
jump 254 greaterThan :findPossiblePlacement:y 3
op add *tmp202 :findPossiblePlacement:y 3
op mul *tmp203 7 *tmp202
op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp203
set :findPossiblePlacement:x -3
jump 250 greaterThan :findPossiblePlacement:x 3
op and *tmp205 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
jump 245 notEqual *tmp205 0
op mul *tmp208 :findPossiblePlacement:y 7
op add *tmp209 24 *tmp208
op add :findPossiblePlacement*retval *tmp209 :findPossiblePlacement:x
set @counter :findPossiblePlacement*retaddr
op sub *tmp211 3 :findPossiblePlacement:width
jump 250 greaterThan :findPossiblePlacement:x *tmp211
op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
op add :findPossiblePlacement:x :findPossiblePlacement:x 1
jump 239 lessThanEq :findPossiblePlacement:x 3
op sub *tmp214 3 :findPossiblePlacement:height
jump 254 greaterThan :findPossiblePlacement:y *tmp214
op add :findPossiblePlacement:y :findPossiblePlacement:y 1
jump 234 lessThanEq :findPossiblePlacement:y 3
set :findPossiblePlacement*retval -1
set @counter :findPossiblePlacement*retaddr
write @unit processor1 ":createTerrainMask:unit"
write :createCombinedMask:x processor1 ":createTerrainMask:x"
write :createCombinedMask:y processor1 ":createTerrainMask:y"
write false processor1 ":createTerrainMask*finished"
write 1 processor1 "@counter"
set .maskX :createCombinedMask:x
set .maskY :createCombinedMask:y
op add *tmp271 :createCombinedMask:y 4
op add *tmp262 :createCombinedMask:x 4
ucontrol getBlock *tmp262 *tmp271 0 :createBlockMaskRow:result 0
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 3
ucontrol getBlock *tmp262 *tmp271 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 2
ucontrol getBlock *tmp262 *tmp271 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 1
ucontrol getBlock *tmp262 *tmp271 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp271 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -1
ucontrol getBlock *tmp262 *tmp271 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -2
ucontrol getBlock *tmp262 *tmp271 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -3
ucontrol getBlock *tmp262 *tmp271 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -4
ucontrol getBlock *tmp262 *tmp271 0 *tmp263 0
op or :createAdjacentMask:row2 *tmp261 *tmp263
op add *tmp273 :createCombinedMask:y 3
op add *tmp262 :createCombinedMask:x 4
ucontrol getBlock *tmp262 *tmp273 0 :createBlockMaskRow:result 0
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 3
ucontrol getBlock *tmp262 *tmp273 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 2
ucontrol getBlock *tmp262 *tmp273 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 1
ucontrol getBlock *tmp262 *tmp273 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp273 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -1
ucontrol getBlock *tmp262 *tmp273 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -2
ucontrol getBlock *tmp262 *tmp273 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -3
ucontrol getBlock *tmp262 *tmp273 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -4
ucontrol getBlock *tmp262 *tmp273 0 *tmp263 0
op or :createAdjacentMask:row1 *tmp261 *tmp263
op add *tmp275 :createCombinedMask:y 2
op add *tmp262 :createCombinedMask:x 4
ucontrol getBlock *tmp262 *tmp275 0 :createBlockMaskRow:result 0
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 3
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 2
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 1
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -1
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -2
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -3
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -4
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp277 :createAdjacentMask:row1 1
op or *tmp278 :createAdjacentMask:row2 *tmp277
op shr *tmp279 :createAdjacentMask:row1 1
op or *tmp280 *tmp278 *tmp279
op or :createAdjacentMask:mask *tmp280 :createBlockMaskRow:result
op and :createAdjacentMask:result :createAdjacentMask:mask 0xFE
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp275 :createCombinedMask:y 1
op add *tmp262 :createCombinedMask:x 4
ucontrol getBlock *tmp262 *tmp275 0 :createBlockMaskRow:result 0
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 3
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 2
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 1
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -1
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -2
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -3
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -4
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp277 :createAdjacentMask:row1 1
op or *tmp278 :createAdjacentMask:row2 *tmp277
op shr *tmp279 :createAdjacentMask:row1 1
op or *tmp280 *tmp278 *tmp279
op or :createAdjacentMask:mask *tmp280 :createBlockMaskRow:result
op shl *tmp282 :createAdjacentMask:result 7
op and *tmp283 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp282 *tmp283
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp262 :createCombinedMask:x 4
ucontrol getBlock *tmp262 :createCombinedMask:y 0 :createBlockMaskRow:result 0
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 3
ucontrol getBlock *tmp262 :createCombinedMask:y 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 2
ucontrol getBlock *tmp262 :createCombinedMask:y 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 1
ucontrol getBlock *tmp262 :createCombinedMask:y 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x :createCombinedMask:y 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -1
ucontrol getBlock *tmp262 :createCombinedMask:y 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -2
ucontrol getBlock *tmp262 :createCombinedMask:y 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -3
ucontrol getBlock *tmp262 :createCombinedMask:y 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -4
ucontrol getBlock *tmp262 :createCombinedMask:y 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp277 :createAdjacentMask:row1 1
op or *tmp278 :createAdjacentMask:row2 *tmp277
op shr *tmp279 :createAdjacentMask:row1 1
op or *tmp280 *tmp278 *tmp279
op or :createAdjacentMask:mask *tmp280 :createBlockMaskRow:result
op shl *tmp282 :createAdjacentMask:result 7
op and *tmp283 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp282 *tmp283
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp275 :createCombinedMask:y -1
op add *tmp262 :createCombinedMask:x 4
ucontrol getBlock *tmp262 *tmp275 0 :createBlockMaskRow:result 0
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 3
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 2
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 1
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -1
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -2
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -3
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -4
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp277 :createAdjacentMask:row1 1
op or *tmp278 :createAdjacentMask:row2 *tmp277
op shr *tmp279 :createAdjacentMask:row1 1
op or *tmp280 *tmp278 *tmp279
op or :createAdjacentMask:mask *tmp280 :createBlockMaskRow:result
op shl *tmp282 :createAdjacentMask:result 7
op and *tmp283 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp282 *tmp283
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp275 :createCombinedMask:y -2
op add *tmp262 :createCombinedMask:x 4
ucontrol getBlock *tmp262 *tmp275 0 :createBlockMaskRow:result 0
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 3
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 2
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 1
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -1
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -2
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -3
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -4
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp277 :createAdjacentMask:row1 1
op or *tmp278 :createAdjacentMask:row2 *tmp277
op shr *tmp279 :createAdjacentMask:row1 1
op or *tmp280 *tmp278 *tmp279
op or :createAdjacentMask:mask *tmp280 :createBlockMaskRow:result
op shl *tmp282 :createAdjacentMask:result 7
op and *tmp283 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp282 *tmp283
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp275 :createCombinedMask:y -3
op add *tmp262 :createCombinedMask:x 4
ucontrol getBlock *tmp262 *tmp275 0 :createBlockMaskRow:result 0
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 3
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 2
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 1
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -1
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -2
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -3
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -4
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp277 :createAdjacentMask:row1 1
op or *tmp278 :createAdjacentMask:row2 *tmp277
op shr *tmp279 :createAdjacentMask:row1 1
op or *tmp280 *tmp278 *tmp279
op or :createAdjacentMask:mask *tmp280 :createBlockMaskRow:result
op shl *tmp282 :createAdjacentMask:result 7
op and *tmp283 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp282 *tmp283
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp275 :createCombinedMask:y -4
op add *tmp262 :createCombinedMask:x 4
ucontrol getBlock *tmp262 *tmp275 0 :createBlockMaskRow:result 0
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 3
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 2
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x 1
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -1
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -2
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -3
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp261 :createBlockMaskRow:result 1
op add *tmp262 :createCombinedMask:x -4
ucontrol getBlock *tmp262 *tmp275 0 *tmp263 0
op or :createBlockMaskRow:result *tmp261 *tmp263
op shl *tmp277 :createAdjacentMask:row1 1
op or *tmp278 :createAdjacentMask:row2 *tmp277
op shr *tmp279 :createAdjacentMask:row1 1
op or *tmp280 *tmp278 *tmp279
op or :createAdjacentMask:mask *tmp280 :createBlockMaskRow:result
op shl *tmp282 :createAdjacentMask:result 7
op and *tmp283 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp282 *tmp283
op shr .adjacentMask :createAdjacentMask:result 1
wait 1e-15
read *tmp286 processor1 ":createTerrainMask*finished"
jump 635 equal *tmp286 false
read .terrainMask processor1 ":createTerrainMask*retval"
op or :createCombinedMask*retval .adjacentMask .terrainMask
set @counter :createCombinedMask*retaddr
set .panelY -1
set .panelX -1
set .generatorY -1
set .generatorX -1
set .water2Y -1
set .water2X -1
set .water1Y -1
set .water1X -1
set :moveTo.5:x .drillX
set :moveTo.5:y .drillY
ucontrol within :moveTo.5:x :moveTo.5:y 1 *tmp289 0
jump 656 notEqual *tmp289 false
ucontrol approach :moveTo.5:x :moveTo.5:y 0.5 0 0
ucontrol within :moveTo.5:x :moveTo.5:y 1 *tmp289 0
jump 653 equal *tmp289 false
set :createCombinedMask:x .drillX
set :createCombinedMask:y .drillY
set :createCombinedMask*retaddr 660
jump 256 always 0 0
op or :layoutThoriumDrillAtLocation:terrainMask :createCombinedMask*retval 7575371776
op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
set :layoutThoriumDrillAtLocation:mask2x2 387
set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
set :findPossiblePlacement:placementMask 387
set :findPossiblePlacement:width 2
set :findPossiblePlacement:height 2
set :findPossiblePlacement*retaddr 669
jump 232 always 0 0
jump 677 lessThan :findPossiblePlacement*retval 0
op add *tmp330 .drillX 0.5
op add .water1X *tmp330 :findPossiblePlacement:x
op add *tmp332 .drillY 0.5
op add .water1Y *tmp332 :findPossiblePlacement:y
op shl *tmp334 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp334
op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:cornersMask *tmp334
set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
set :findPossiblePlacement:placementMask :layoutThoriumDrillAtLocation:mask2x2
set :findPossiblePlacement:width 2
set :findPossiblePlacement:height 2
set :findPossiblePlacement*retaddr 683
jump 232 always 0 0
jump 690 lessThan :findPossiblePlacement*retval 0
op add *tmp339 .drillX 0.5
op add .containerX *tmp339 :findPossiblePlacement:x
op add *tmp341 .drillY 0.5
op add .containerY *tmp341 :findPossiblePlacement:y
op shl *tmp343 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp343
set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
set :layoutThoriumDrillAtLocation:generatorVertical 6340995
set :tryPlaceGenerator:centerX .drillX
set :tryPlaceGenerator:centerY .drillY
set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:terrainMask
set :tryPlaceGenerator:generatorHorizontal 1935
set :tryPlaceGenerator:generatorVertical 6340995
set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:terrainMask
set :findPossiblePlacement:placementMask 6340995
set :findPossiblePlacement:width 2
set :findPossiblePlacement:height 4
set :findPossiblePlacement*retaddr 703
jump 232 always 0 0
jump 717 lessThan :findPossiblePlacement*retval 0
jump 707 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 774 always 0 0
op add *tmp222 :tryPlaceGenerator:centerX 0.5
op add .water2X *tmp222 :findPossiblePlacement:x
op add *tmp224 :tryPlaceGenerator:centerY 0.5
op add .water2Y *tmp224 :findPossiblePlacement:y
op add .generatorX *tmp222 :findPossiblePlacement:x
op add *tmp228 :tryPlaceGenerator:centerY 2.5
op add .generatorY *tmp228 :findPossiblePlacement:y
op shl *tmp230 :tryPlaceGenerator:generatorVertical :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp230
jump 735 always 0 0
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask :tryPlaceGenerator:generatorHorizontal
set :findPossiblePlacement:width 4
set :findPossiblePlacement:height 2
set :findPossiblePlacement*retaddr 723
jump 232 always 0 0
jump 726 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 774 always 0 0
op add *tmp234 :tryPlaceGenerator:centerX 0.5
op add .water2X *tmp234 :findPossiblePlacement:x
op add *tmp236 :tryPlaceGenerator:centerY 0.5
op add .water2Y *tmp236 :findPossiblePlacement:y
op add *tmp238 :tryPlaceGenerator:centerX 2.5
op add .generatorX *tmp238 :findPossiblePlacement:x
op add .generatorY *tmp236 :findPossiblePlacement:y
op shl *tmp242 :tryPlaceGenerator:generatorHorizontal :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp242
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask 1
set :findPossiblePlacement:width 1
set :findPossiblePlacement:height 1
set :findPossiblePlacement*retaddr 741
jump 232 always 0 0
jump 744 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 774 always 0 0
op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
op shl *tmp248 1 :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp248
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask 1
set :findPossiblePlacement:width 1
set :findPossiblePlacement:height 1
set :findPossiblePlacement*retaddr 754
jump 232 always 0 0
jump 757 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 774 always 0 0
op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
op shl *tmp254 1 :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp254
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask 1
set :findPossiblePlacement:width 1
set :findPossiblePlacement:height 1
set :findPossiblePlacement*retaddr 767
jump 232 always 0 0
jump 770 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 774 always 0 0
op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
set :tryPlaceGenerator*retval true
jump 774 always 0 0
jump 777 equal :tryPlaceGenerator*retval false
set :layoutThoriumDrillAtLocation*retval true
set @counter :layoutThoriumDrillAtLocation*retaddr
set :layoutThoriumDrillAtLocation:sx 3
set :layoutThoriumDrillAtLocation:sy 3
set *tmp358 781
jump 792 always 0 0
set :layoutThoriumDrillAtLocation:sx 3
set :layoutThoriumDrillAtLocation:sy -3
set *tmp358 785
jump 792 always 0 0
set :layoutThoriumDrillAtLocation:sx -3
set :layoutThoriumDrillAtLocation:sy 3
set *tmp358 789
jump 792 always 0 0
set :layoutThoriumDrillAtLocation:sx -3
set :layoutThoriumDrillAtLocation:sy -3
set *tmp358 920
op sub :layoutThoriumDrillAtLocation:newX .drillX :layoutThoriumDrillAtLocation:sx
op sub :layoutThoriumDrillAtLocation:newY .drillY :layoutThoriumDrillAtLocation:sy
set :createCombinedMask:x :layoutThoriumDrillAtLocation:newX
set :createCombinedMask:y :layoutThoriumDrillAtLocation:newY
set :createCombinedMask*retaddr 798
jump 256 always 0 0
set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
op abs *tmp179 :layoutThoriumDrillAtLocation:sx 0
op greaterThan *tmp180 *tmp179 6
op abs *tmp181 :layoutThoriumDrillAtLocation:sy 0
op greaterThan *tmp182 *tmp181 6
op or *tmp183 *tmp180 *tmp182
jump 807 equal *tmp183 false
set :shiftMask*retval 0
jump 828 always 0 0
op mul *tmp185 7 :layoutThoriumDrillAtLocation:sy
op add :shiftMask:shift :layoutThoriumDrillAtLocation:sx *tmp185
jump 814 lessThanEq :shiftMask:shift 0
op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
op and *tmp190 :layoutThoriumDrillAtLocation:terrainMask :shiftMask:clearMask
op shl :shiftMask:mask *tmp190 :shiftMask:shift
jump 816 always 0 0
op sub *tmp192 0 :shiftMask:shift
op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask *tmp192
jump 827 equal :layoutThoriumDrillAtLocation:sx 0
op shr :shiftMask:keep 0b1111111 *tmp179
jump 820 lessThanEq :layoutThoriumDrillAtLocation:sx 0
op shl :shiftMask:keep :shiftMask:keep :layoutThoriumDrillAtLocation:sx
op shl *tmp199 :shiftMask:keep 7
op or :shiftMask:keep :shiftMask:keep *tmp199
op shl *tmp200 :shiftMask:keep 14
op or :shiftMask:keep :shiftMask:keep *tmp200
op shl *tmp201 :shiftMask:keep 21
op or :shiftMask:keep :shiftMask:keep *tmp201
op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
set :shiftMask*retval :shiftMask:mask
op or :layoutThoriumDrillAtLocation:combinedMask :createCombinedMask*retval :shiftMask*retval
set .lastUnshiftedMask :layoutThoriumDrillAtLocation:terrainMask
set .lastShiftedMask :shiftMask*retval
set .lastCombinedMask :layoutThoriumDrillAtLocation:combinedMask
op sub *tmp363 .drillX :layoutThoriumDrillAtLocation:sx
op sub *tmp364 .drillY :layoutThoriumDrillAtLocation:sy
set :tryPlaceGenerator:centerX *tmp363
set :tryPlaceGenerator:centerY *tmp364
set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:combinedMask
set :tryPlaceGenerator:generatorHorizontal :layoutThoriumDrillAtLocation:generatorHorizontal
set :tryPlaceGenerator:generatorVertical :layoutThoriumDrillAtLocation:generatorVertical
set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:combinedMask
set :findPossiblePlacement:placementMask :layoutThoriumDrillAtLocation:generatorVertical
set :findPossiblePlacement:width 2
set :findPossiblePlacement:height 4
set :findPossiblePlacement*retaddr 845
jump 232 always 0 0
jump 859 lessThan :findPossiblePlacement*retval 0
jump 849 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 916 always 0 0
op add *tmp222 :tryPlaceGenerator:centerX 0.5
op add .water2X *tmp222 :findPossiblePlacement:x
op add *tmp224 :tryPlaceGenerator:centerY 0.5
op add .water2Y *tmp224 :findPossiblePlacement:y
op add .generatorX *tmp222 :findPossiblePlacement:x
op add *tmp228 :tryPlaceGenerator:centerY 2.5
op add .generatorY *tmp228 :findPossiblePlacement:y
op shl *tmp230 :tryPlaceGenerator:generatorVertical :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp230
jump 877 always 0 0
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask :tryPlaceGenerator:generatorHorizontal
set :findPossiblePlacement:width 4
set :findPossiblePlacement:height 2
set :findPossiblePlacement*retaddr 865
jump 232 always 0 0
jump 868 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 916 always 0 0
op add *tmp234 :tryPlaceGenerator:centerX 0.5
op add .water2X *tmp234 :findPossiblePlacement:x
op add *tmp236 :tryPlaceGenerator:centerY 0.5
op add .water2Y *tmp236 :findPossiblePlacement:y
op add *tmp238 :tryPlaceGenerator:centerX 2.5
op add .generatorX *tmp238 :findPossiblePlacement:x
op add .generatorY *tmp236 :findPossiblePlacement:y
op shl *tmp242 :tryPlaceGenerator:generatorHorizontal :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp242
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask 1
set :findPossiblePlacement:width 1
set :findPossiblePlacement:height 1
set :findPossiblePlacement*retaddr 883
jump 232 always 0 0
jump 886 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 916 always 0 0
op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
op shl *tmp248 1 :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp248
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask 1
set :findPossiblePlacement:width 1
set :findPossiblePlacement:height 1
set :findPossiblePlacement*retaddr 896
jump 232 always 0 0
jump 899 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 916 always 0 0
op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
op shl *tmp254 1 :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp254
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask 1
set :findPossiblePlacement:width 1
set :findPossiblePlacement:height 1
set :findPossiblePlacement*retaddr 909
jump 232 always 0 0
jump 912 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 916 always 0 0
op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
set :tryPlaceGenerator*retval true
jump 916 always 0 0
jump 919 equal :tryPlaceGenerator*retval false
set :layoutThoriumDrillAtLocation*retval true
set @counter :layoutThoriumDrillAtLocation*retaddr
set @counter *tmp358
set :layoutThoriumDrillAtLocation*retval true
set @counter :layoutThoriumDrillAtLocation*retaddr
set .searchFinished false
set :findDrillLocationLocal:x :findDrillLocation:x
set :findDrillLocationLocal:y :findDrillLocation:y
set :findDrillLocationLocal:unit :findDrillLocation:unit
set :findDrillLocationLocal:item :findDrillLocation:item
set :findDrillLocationLocal:ore :findDrillLocation:ore
set :findDrillLocationLocal:size :findDrillLocation:size
set :findDrillLocationLocal:limit :findDrillLocation:limit
set :findDrillLocationLocal*retaddr 932
jump 48 always 0 0
set :findDrillLocation:dx :findDrillLocationLocal:dx
set :findDrillLocation:dy :findDrillLocationLocal:dy
set :findDrillLocation:capacity :findDrillLocationLocal:capacity
set .searchFinished true
set :findDrillLocation*retval true
set :findDrillLocation*finished true
jump 46 always 0 0
set :findDrillLocationLocal:x :layoutThoriumDrill:x
set :findDrillLocationLocal:y :layoutThoriumDrill:y
set :findDrillLocationLocal:unit :layoutThoriumDrill:unit
set :findDrillLocationLocal:item @thorium
set :findDrillLocationLocal:ore @ore-thorium
set :findDrillLocationLocal:size 3
set :findDrillLocationLocal:limit :layoutThoriumDrill:limit
set :findDrillLocationLocal*retaddr 948
jump 48 always 0 0
set .drillX :findDrillLocationLocal:dx
set .drillY :findDrillLocationLocal:dy
jump 953 notEqual :findDrillLocationLocal*retval false
set :layoutThoriumDrill*retval false
jump 956 always 0 0
set :layoutThoriumDrillAtLocation*retaddr 955
jump 641 always 0 0
set :layoutThoriumDrill*retval :layoutThoriumDrillAtLocation*retval
set :layoutThoriumDrill*finished true
jump 46 always 0 0
set .mapSpots 0
set .mapAction 0
set .mapTotal 0
set .mapProgress 0
ucontrol unbind 0 0 0 0 0
set :stopLocation*finished true
jump 46 always 0 0
print "Compiled by Mindcode - github.com/cardillan/mindcode"

