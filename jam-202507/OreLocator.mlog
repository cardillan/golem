jump 4 always 0 0
jump 884 always 0 0
jump 901 always 0 0
jump 920 always 0 0
read *tmp20 processor1 "*signature"
jump 4 notEqual *tmp20 "385702d66f725e74:v1"
set .attenuationRate 50
set .locations 0
set .count -1
set *signature "3290b8c661787058:v1"
wait 1e12
jump 10 always 0 0
ubind :findDrillLocationLocal:unit
set .locationsStart .locations
set :findDrillLocationLocal:capacity 0
set :findDrillLocationLocal:dy :findDrillLocationLocal:capacity
set :findDrillLocationLocal:dx :findDrillLocationLocal:dy
set .mapSpots :findDrillLocationLocal:dx
op sub *tmp22 @mapw :findDrillLocationLocal:x
op sub *tmp23 @maph :findDrillLocationLocal:y
op max *tmp24 :findDrillLocationLocal:x :findDrillLocationLocal:y
op max *tmp24 *tmp24 *tmp22
op max *tmp24 *tmp24 *tmp23
set :findDrillLocationLocal:distanceLimit *tmp24
set .mapAction "Locating ore..."
set .angle 0
set .mapProgress 0
ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp27 0
jump 32 notEqual *tmp27 false
ucontrol approach :findDrillLocationLocal:x :findDrillLocationLocal:y 5.5 0 0
ucontrol within :findDrillLocationLocal:x :findDrillLocationLocal:y 6 *tmp27 0
jump 29 equal *tmp27 false
op div *tmp30 *tmp24 3.8197185279121366
op pow .mapTotal *tmp30 2
set :findDrillLocationLocal:oreX 0
set :findDrillLocationLocal:oreY 0
set :findDrillLocationLocal:best -1
set :findDrillLocationLocal:bestX :findDrillLocationLocal:x
set :findDrillLocationLocal:bestY :findDrillLocationLocal:y
op sub *tmp32 :findDrillLocationLocal:limit :findDrillLocationLocal:capacity
op mul :findDrillLocationLocal:maxDistance *tmp32 .attenuationRate
op min :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
op div *tmp35 :findDrillLocationLocal:distanceLimit 3.8197185279121366
op pow .mapTotal *tmp35 2
set :locateOreAway:x :findDrillLocationLocal:oreX
set :locateOreAway:y :findDrillLocationLocal:oreY
op mul :locateOreAway:distance 3.8197185279121366 .angle
set :locateOreAway:lastX -1
set :locateOreAway:lastY -1
op max .angle .angle @pi
op mul .mapProgress .angle .angle
op sub *tmp46 @mapw 5
op sub *tmp53 @maph 5
jump 117 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
op div :locateOreAway:a .angle @degToRad
op sin *tmp43 :locateOreAway:a 0
op mul *tmp44 *tmp43 :locateOreAway:distance
op add *tmp45 :findDrillLocationLocal:x *tmp44
op max *tmp48 *tmp45 5
op min *tmp47 *tmp48 *tmp46
op cos *tmp50 :locateOreAway:a 0
op mul *tmp51 *tmp50 :locateOreAway:distance
op add *tmp52 :findDrillLocationLocal:y *tmp51
op max *tmp55 *tmp52 5
op min *tmp54 *tmp55 *tmp53
ucontrol within *tmp47 *tmp54 5 *tmp57 0
jump 70 notEqual *tmp57 false
ucontrol approach *tmp47 *tmp54 4.5 0 0
ucontrol within *tmp47 *tmp54 5 *tmp57 0
jump 67 equal *tmp57 false
op div *tmp60 3.8197185279121366 :locateOreAway:distance
op add .angle .angle *tmp60
op mul .mapProgress .angle .angle
op mul :locateOreAway:distance 3.8197185279121366 .angle
ulocate ore core true :findDrillLocationLocal:item :locateOreAway:x :locateOreAway:y *tmp63 0
jump 78 notEqual *tmp63 false
set *tmp37 false
jump 118 always 0 0
op sub *tmp67 :locateOreAway:x :findDrillLocationLocal:x
op abs *tmp68 *tmp67 0
op sub *tmp69 :locateOreAway:y :findDrillLocationLocal:y
op abs *tmp70 *tmp69 0
op max :locateOreAway:coreDist *tmp68 *tmp70
op sub *tmp72 :locateOreAway:x *tmp47
op sub *tmp73 :locateOreAway:y *tmp54
op len :locateOreAway:unitDist *tmp72 *tmp73
jump 88 notEqual :locateOreAway:lastX :locateOreAway:x
jump 116 equal :locateOreAway:lastY :locateOreAway:y
jump 116 lessThan :locateOreAway:coreDist 10
jump 116 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
set :locateOreAway:lastX :locateOreAway:x
set :locateOreAway:lastY :locateOreAway:y
set *tmp84 .locations
set :visited:i .locationsStart
jump 108 greaterThanEq .locationsStart *tmp84
op mul :visited:index 4 :visited:i
op add *tmp87 :visited:index 2
read :visited:lx bank1 *tmp87
op add *tmp90 :visited:index 3
read :visited:ly bank1 *tmp90
op sub *tmp92 :locateOreAway:x :visited:lx
op sub *tmp93 :locateOreAway:y :visited:ly
op len *tmp94 *tmp92 *tmp93
jump 106 greaterThanEq *tmp94 7
set *tmp83 true
jump 109 always 0 0
op add :visited:i :visited:i 1
jump 95 lessThan :visited:i *tmp84
set *tmp83 false
jump 116 notEqual *tmp83 false
op div *tmp99 2 .angle
op add .angle .angle *tmp99
op mul .mapProgress .angle .angle
printflush message1
set *tmp37 true
jump 118 always 0 0
jump 54 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
set *tmp37 false
set :findDrillLocationLocal:oreX :locateOreAway:x
set :findDrillLocationLocal:oreY :locateOreAway:y
jump 123 notEqual *tmp37 false
op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
set @counter :findDrillLocationLocal*retaddr
jump 125 lessThan :findDrillLocationLocal:limit 1000
op add .mapSpots .mapSpots 1
ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp109 0
jump 130 notEqual *tmp109 false
ucontrol approach :locateOreAway:x :locateOreAway:y 5.5 0 0
ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp109 0
jump 127 equal *tmp109 false
set :findDrillLocationLocal:last 0
write @unit processor1 ":findBestPosition:unit"
write :findDrillLocationLocal:oreX processor1 ":findBestPosition:x"
write :findDrillLocationLocal:oreY processor1 ":findBestPosition:y"
write :findDrillLocationLocal:ore processor1 ":findBestPosition:ore"
write :findDrillLocationLocal:size processor1 ":findBestPosition:size"
write false processor1 ":findBestPosition*finished"
write 2 processor1 "@counter"
wait 1e-15
read *tmp112 processor1 ":findBestPosition*finished"
jump 138 equal *tmp112 false
read :findDrillLocationLocal:diffX processor1 ":findBestPosition:bestX"
read :findDrillLocationLocal:diffY processor1 ":findBestPosition:bestY"
read :findDrillLocationLocal:score processor1 ":findBestPosition*retval"
op add :findDrillLocationLocal:newX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
op add :findDrillLocationLocal:newY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
op sub *tmp116 :findDrillLocationLocal:newX :findDrillLocationLocal:x
op abs *tmp117 *tmp116 0
op sub *tmp118 :findDrillLocationLocal:newY :findDrillLocationLocal:y
op abs *tmp119 *tmp118 0
op max :findDrillLocationLocal:coreDist *tmp117 *tmp119
jump 187 lessThanEq :findDrillLocationLocal:coreDist 10
jump 172 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:capacity
set :findDrillLocationLocal:dx :findDrillLocationLocal:newX
set :findDrillLocationLocal:dy :findDrillLocationLocal:newY
set :findDrillLocationLocal:capacity :findDrillLocationLocal:score
jump 158 greaterThanEq :findDrillLocationLocal:limit 1000
set .mapSpots :findDrillLocationLocal:score
jump 172 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
op add .count .count 1
sensor *tmp131 :findDrillLocationLocal:item @id
write *tmp131 bank1 .count
op add .count .count 1
write :findDrillLocationLocal:score bank1 .count
op add .count .count 1
write :findDrillLocationLocal:dx bank1 .count
op add .count .count 1
write :findDrillLocationLocal:dy bank1 .count
op add .locations .locations 1
ucontrol unbind 0 0 0 0 0
set :findDrillLocationLocal*retval true
set @counter :findDrillLocationLocal*retaddr
jump 176 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:best
set :findDrillLocationLocal:bestX :findDrillLocationLocal:newX
set :findDrillLocationLocal:bestY :findDrillLocationLocal:newY
set :findDrillLocationLocal:best :findDrillLocationLocal:score
jump 187 lessThanEq :findDrillLocationLocal:score :findDrillLocationLocal:last
set :findDrillLocationLocal:last :findDrillLocationLocal:score
op mul :round:x :findDrillLocationLocal:diffX 1.1
op add *tmp145 :round:x 0.5
op floor *tmp144 *tmp145 0
op add :findDrillLocationLocal:oreX :findDrillLocationLocal:oreX *tmp144
op mul :round.1:x :findDrillLocationLocal:diffY 1.1
op add *tmp149 :round.1:x 0.5
op floor *tmp148 *tmp149 0
op add :findDrillLocationLocal:oreY :findDrillLocationLocal:oreY *tmp148
jump 131 always 0 0
jump 36 lessThan :findDrillLocationLocal:best 0
op add .count .count 1
sensor *tmp155 :findDrillLocationLocal:item @id
write *tmp155 bank1 .count
op add .count .count 1
write :findDrillLocationLocal:best bank1 .count
op add .count .count 1
write :findDrillLocationLocal:bestX bank1 .count
op add .count .count 1
write :findDrillLocationLocal:bestY bank1 .count
op add .locations .locations 1
jump 36 always 0 0
set :findPossiblePlacement:y -3
jump 221 greaterThan :findPossiblePlacement:y 3
op add *tmp163 :findPossiblePlacement:y 3
op mul *tmp164 7 *tmp163
op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp164
set :findPossiblePlacement:x -3
jump 217 greaterThan :findPossiblePlacement:x 3
op and *tmp166 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
jump 212 notEqual *tmp166 0
op mul *tmp169 :findPossiblePlacement:y 7
op add *tmp170 24 *tmp169
op add :findPossiblePlacement*retval *tmp170 :findPossiblePlacement:x
set @counter :findPossiblePlacement*retaddr
op sub *tmp172 3 :findPossiblePlacement:width
jump 217 greaterThan :findPossiblePlacement:x *tmp172
op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
op add :findPossiblePlacement:x :findPossiblePlacement:x 1
jump 206 lessThanEq :findPossiblePlacement:x 3
op sub *tmp175 3 :findPossiblePlacement:height
jump 221 greaterThan :findPossiblePlacement:y *tmp175
op add :findPossiblePlacement:y :findPossiblePlacement:y 1
jump 201 lessThanEq :findPossiblePlacement:y 3
set :findPossiblePlacement*retval -1
set @counter :findPossiblePlacement*retaddr
write @unit processor1 ":createTerrainMask:unit"
write :createCombinedMask:x processor1 ":createTerrainMask:x"
write :createCombinedMask:y processor1 ":createTerrainMask:y"
write false processor1 ":createTerrainMask*finished"
write 1 processor1 "@counter"
op add *tmp232 :createCombinedMask:y 4
op add *tmp223 :createCombinedMask:x 4
ucontrol getBlock *tmp223 *tmp232 0 :createBlockMaskRow:result 0
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 3
ucontrol getBlock *tmp223 *tmp232 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 2
ucontrol getBlock *tmp223 *tmp232 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 1
ucontrol getBlock *tmp223 *tmp232 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp232 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -1
ucontrol getBlock *tmp223 *tmp232 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -2
ucontrol getBlock *tmp223 *tmp232 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -3
ucontrol getBlock *tmp223 *tmp232 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -4
ucontrol getBlock *tmp223 *tmp232 0 *tmp224 0
op or :createAdjacentMask:row2 *tmp222 *tmp224
op add *tmp234 :createCombinedMask:y 3
op add *tmp223 :createCombinedMask:x 4
ucontrol getBlock *tmp223 *tmp234 0 :createBlockMaskRow:result 0
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 3
ucontrol getBlock *tmp223 *tmp234 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 2
ucontrol getBlock *tmp223 *tmp234 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 1
ucontrol getBlock *tmp223 *tmp234 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp234 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -1
ucontrol getBlock *tmp223 *tmp234 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -2
ucontrol getBlock *tmp223 *tmp234 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -3
ucontrol getBlock *tmp223 *tmp234 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -4
ucontrol getBlock *tmp223 *tmp234 0 *tmp224 0
op or :createAdjacentMask:row1 *tmp222 *tmp224
op add *tmp236 :createCombinedMask:y 2
op add *tmp223 :createCombinedMask:x 4
ucontrol getBlock *tmp223 *tmp236 0 :createBlockMaskRow:result 0
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 3
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 2
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 1
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -1
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -2
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -3
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -4
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp238 :createAdjacentMask:row1 1
op or *tmp239 :createAdjacentMask:row2 *tmp238
op shr *tmp240 :createAdjacentMask:row1 1
op or *tmp241 *tmp239 *tmp240
op or :createAdjacentMask:mask *tmp241 :createBlockMaskRow:result
op and :createAdjacentMask:result :createAdjacentMask:mask 0xFE
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp236 :createCombinedMask:y 1
op add *tmp223 :createCombinedMask:x 4
ucontrol getBlock *tmp223 *tmp236 0 :createBlockMaskRow:result 0
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 3
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 2
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 1
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -1
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -2
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -3
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -4
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp238 :createAdjacentMask:row1 1
op or *tmp239 :createAdjacentMask:row2 *tmp238
op shr *tmp240 :createAdjacentMask:row1 1
op or *tmp241 *tmp239 *tmp240
op or :createAdjacentMask:mask *tmp241 :createBlockMaskRow:result
op shl *tmp243 :createAdjacentMask:result 7
op and *tmp244 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp243 *tmp244
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp223 :createCombinedMask:x 4
ucontrol getBlock *tmp223 :createCombinedMask:y 0 :createBlockMaskRow:result 0
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 3
ucontrol getBlock *tmp223 :createCombinedMask:y 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 2
ucontrol getBlock *tmp223 :createCombinedMask:y 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 1
ucontrol getBlock *tmp223 :createCombinedMask:y 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x :createCombinedMask:y 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -1
ucontrol getBlock *tmp223 :createCombinedMask:y 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -2
ucontrol getBlock *tmp223 :createCombinedMask:y 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -3
ucontrol getBlock *tmp223 :createCombinedMask:y 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -4
ucontrol getBlock *tmp223 :createCombinedMask:y 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp238 :createAdjacentMask:row1 1
op or *tmp239 :createAdjacentMask:row2 *tmp238
op shr *tmp240 :createAdjacentMask:row1 1
op or *tmp241 *tmp239 *tmp240
op or :createAdjacentMask:mask *tmp241 :createBlockMaskRow:result
op shl *tmp243 :createAdjacentMask:result 7
op and *tmp244 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp243 *tmp244
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp236 :createCombinedMask:y -1
op add *tmp223 :createCombinedMask:x 4
ucontrol getBlock *tmp223 *tmp236 0 :createBlockMaskRow:result 0
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 3
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 2
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 1
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -1
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -2
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -3
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -4
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp238 :createAdjacentMask:row1 1
op or *tmp239 :createAdjacentMask:row2 *tmp238
op shr *tmp240 :createAdjacentMask:row1 1
op or *tmp241 *tmp239 *tmp240
op or :createAdjacentMask:mask *tmp241 :createBlockMaskRow:result
op shl *tmp243 :createAdjacentMask:result 7
op and *tmp244 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp243 *tmp244
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp236 :createCombinedMask:y -2
op add *tmp223 :createCombinedMask:x 4
ucontrol getBlock *tmp223 *tmp236 0 :createBlockMaskRow:result 0
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 3
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 2
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 1
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -1
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -2
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -3
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -4
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp238 :createAdjacentMask:row1 1
op or *tmp239 :createAdjacentMask:row2 *tmp238
op shr *tmp240 :createAdjacentMask:row1 1
op or *tmp241 *tmp239 *tmp240
op or :createAdjacentMask:mask *tmp241 :createBlockMaskRow:result
op shl *tmp243 :createAdjacentMask:result 7
op and *tmp244 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp243 *tmp244
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp236 :createCombinedMask:y -3
op add *tmp223 :createCombinedMask:x 4
ucontrol getBlock *tmp223 *tmp236 0 :createBlockMaskRow:result 0
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 3
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 2
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 1
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -1
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -2
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -3
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -4
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp238 :createAdjacentMask:row1 1
op or *tmp239 :createAdjacentMask:row2 *tmp238
op shr *tmp240 :createAdjacentMask:row1 1
op or *tmp241 *tmp239 *tmp240
op or :createAdjacentMask:mask *tmp241 :createBlockMaskRow:result
op shl *tmp243 :createAdjacentMask:result 7
op and *tmp244 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp243 *tmp244
set :createAdjacentMask:row2 :createAdjacentMask:row1
set :createAdjacentMask:row1 :createBlockMaskRow:result
op add *tmp236 :createCombinedMask:y -4
op add *tmp223 :createCombinedMask:x 4
ucontrol getBlock *tmp223 *tmp236 0 :createBlockMaskRow:result 0
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 3
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 2
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x 1
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
ucontrol getBlock :createCombinedMask:x *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -1
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -2
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -3
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp222 :createBlockMaskRow:result 1
op add *tmp223 :createCombinedMask:x -4
ucontrol getBlock *tmp223 *tmp236 0 *tmp224 0
op or :createBlockMaskRow:result *tmp222 *tmp224
op shl *tmp238 :createAdjacentMask:row1 1
op or *tmp239 :createAdjacentMask:row2 *tmp238
op shr *tmp240 :createAdjacentMask:row1 1
op or *tmp241 *tmp239 *tmp240
op or :createAdjacentMask:mask *tmp241 :createBlockMaskRow:result
op shl *tmp243 :createAdjacentMask:result 7
op and *tmp244 :createAdjacentMask:mask 0xFE
op or :createAdjacentMask:result *tmp243 *tmp244
op shr *tmp231 :createAdjacentMask:result 1
wait 1e-15
read *tmp247 processor1 ":createTerrainMask*finished"
jump 600 equal *tmp247 false
read :createCombinedMask:terrainMask processor1 ":createTerrainMask*retval"
op or :createCombinedMask*retval *tmp231 :createCombinedMask:terrainMask
set @counter :createCombinedMask*retaddr
set .panelY -1
set .panelX -1
set .generatorY -1
set .generatorX -1
set .water2Y -1
set .water2X -1
set .water1Y -1
set .water1X -1
set :moveTo.5:x .drillX
set :moveTo.5:y .drillY
ucontrol within :moveTo.5:x :moveTo.5:y 1 *tmp250 0
jump 621 notEqual *tmp250 false
ucontrol approach :moveTo.5:x :moveTo.5:y 0.5 0 0
ucontrol within :moveTo.5:x :moveTo.5:y 1 *tmp250 0
jump 618 equal *tmp250 false
set :createCombinedMask:x .drillX
set :createCombinedMask:y .drillY
set :createCombinedMask*retaddr 625
jump 223 always 0 0
op or :layoutThoriumDrillAtLocation:terrainMask :createCombinedMask*retval 7575371776
op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
set :layoutThoriumDrillAtLocation:mask2x2 387
set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
set :findPossiblePlacement:placementMask 387
set :findPossiblePlacement:width 2
set :findPossiblePlacement:height 2
set :findPossiblePlacement*retaddr 634
jump 199 always 0 0
jump 642 lessThan :findPossiblePlacement*retval 0
op add *tmp291 .drillX 0.5
op add .water1X *tmp291 :findPossiblePlacement:x
op add *tmp293 .drillY 0.5
op add .water1Y *tmp293 :findPossiblePlacement:y
op shl *tmp295 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp295
op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:cornersMask *tmp295
set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
set :findPossiblePlacement:placementMask :layoutThoriumDrillAtLocation:mask2x2
set :findPossiblePlacement:width 2
set :findPossiblePlacement:height 2
set :findPossiblePlacement*retaddr 648
jump 199 always 0 0
jump 655 lessThan :findPossiblePlacement*retval 0
op add *tmp300 .drillX 0.5
op add .containerX *tmp300 :findPossiblePlacement:x
op add *tmp302 .drillY 0.5
op add .containerY *tmp302 :findPossiblePlacement:y
op shl *tmp304 :layoutThoriumDrillAtLocation:mask2x2 :findPossiblePlacement*retval
op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask *tmp304
set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
set :layoutThoriumDrillAtLocation:generatorVertical 6340995
set :tryPlaceGenerator:centerX .drillX
set :tryPlaceGenerator:centerY .drillY
set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:terrainMask
set :tryPlaceGenerator:generatorHorizontal 1935
set :tryPlaceGenerator:generatorVertical 6340995
set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:terrainMask
set :findPossiblePlacement:placementMask 6340995
set :findPossiblePlacement:width 2
set :findPossiblePlacement:height 4
set :findPossiblePlacement*retaddr 668
jump 199 always 0 0
jump 682 lessThan :findPossiblePlacement*retval 0
jump 672 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 739 always 0 0
op add *tmp183 :tryPlaceGenerator:centerX 0.5
op add .water2X *tmp183 :findPossiblePlacement:x
op add *tmp185 :tryPlaceGenerator:centerY 0.5
op add .water2Y *tmp185 :findPossiblePlacement:y
op add .generatorX *tmp183 :findPossiblePlacement:x
op add *tmp189 :tryPlaceGenerator:centerY 2.5
op add .generatorY *tmp189 :findPossiblePlacement:y
op shl *tmp191 :tryPlaceGenerator:generatorVertical :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp191
jump 700 always 0 0
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask :tryPlaceGenerator:generatorHorizontal
set :findPossiblePlacement:width 4
set :findPossiblePlacement:height 2
set :findPossiblePlacement*retaddr 688
jump 199 always 0 0
jump 691 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 739 always 0 0
op add *tmp195 :tryPlaceGenerator:centerX 0.5
op add .water2X *tmp195 :findPossiblePlacement:x
op add *tmp197 :tryPlaceGenerator:centerY 0.5
op add .water2Y *tmp197 :findPossiblePlacement:y
op add *tmp199 :tryPlaceGenerator:centerX 2.5
op add .generatorX *tmp199 :findPossiblePlacement:x
op add .generatorY *tmp197 :findPossiblePlacement:y
op shl *tmp203 :tryPlaceGenerator:generatorHorizontal :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp203
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask 1
set :findPossiblePlacement:width 1
set :findPossiblePlacement:height 1
set :findPossiblePlacement*retaddr 706
jump 199 always 0 0
jump 709 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 739 always 0 0
op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
op shl *tmp209 1 :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp209
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask 1
set :findPossiblePlacement:width 1
set :findPossiblePlacement:height 1
set :findPossiblePlacement*retaddr 719
jump 199 always 0 0
jump 722 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 739 always 0 0
op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
op shl *tmp215 1 :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp215
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask 1
set :findPossiblePlacement:width 1
set :findPossiblePlacement:height 1
set :findPossiblePlacement*retaddr 732
jump 199 always 0 0
jump 735 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 739 always 0 0
op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
set :tryPlaceGenerator*retval true
jump 739 always 0 0
jump 742 equal :tryPlaceGenerator*retval false
set :layoutThoriumDrillAtLocation*retval true
set @counter :layoutThoriumDrillAtLocation*retaddr
set :layoutThoriumDrillAtLocation:sx 3
set :layoutThoriumDrillAtLocation:sy 3
set *tmp319 746
jump 757 always 0 0
set :layoutThoriumDrillAtLocation:sx 3
set :layoutThoriumDrillAtLocation:sy -3
set *tmp319 750
jump 757 always 0 0
set :layoutThoriumDrillAtLocation:sx -3
set :layoutThoriumDrillAtLocation:sy 3
set *tmp319 754
jump 757 always 0 0
set :layoutThoriumDrillAtLocation:sx -3
set :layoutThoriumDrillAtLocation:sy -3
set *tmp319 882
op sub :layoutThoriumDrillAtLocation:newX .drillX :layoutThoriumDrillAtLocation:sx
op sub :layoutThoriumDrillAtLocation:newY .drillY :layoutThoriumDrillAtLocation:sy
set :createCombinedMask:x :layoutThoriumDrillAtLocation:newX
set :createCombinedMask:y :layoutThoriumDrillAtLocation:newY
set :createCombinedMask*retaddr 763
jump 223 always 0 0
set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
op abs *tmp324 :layoutThoriumDrillAtLocation:sx 0
op greaterThan *tmp325 *tmp324 6
op abs *tmp326 :layoutThoriumDrillAtLocation:sy 0
op greaterThan *tmp327 *tmp326 6
op or *tmp328 *tmp325 *tmp327
jump 772 equal *tmp328 false
set *tmp323 0
jump 793 always 0 0
op mul *tmp330 7 :layoutThoriumDrillAtLocation:sy
op add :shiftMask:shift :layoutThoriumDrillAtLocation:sx *tmp330
jump 779 lessThanEq :shiftMask:shift 0
op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
op and *tmp335 :layoutThoriumDrillAtLocation:terrainMask :shiftMask:clearMask
op shl :shiftMask:mask *tmp335 :shiftMask:shift
jump 781 always 0 0
op sub *tmp337 0 :shiftMask:shift
op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask *tmp337
jump 792 equal :layoutThoriumDrillAtLocation:sx 0
op shr :shiftMask:keep 0b1111111 *tmp324
jump 785 lessThanEq :layoutThoriumDrillAtLocation:sx 0
op shl :shiftMask:keep :shiftMask:keep :layoutThoriumDrillAtLocation:sx
op shl *tmp344 :shiftMask:keep 7
op or :shiftMask:keep :shiftMask:keep *tmp344
op shl *tmp345 :shiftMask:keep 14
op or :shiftMask:keep :shiftMask:keep *tmp345
op shl *tmp346 :shiftMask:keep 21
op or :shiftMask:keep :shiftMask:keep *tmp346
op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
set *tmp323 :shiftMask:mask
op or :layoutThoriumDrillAtLocation:combinedMask :createCombinedMask*retval *tmp323
op sub *tmp348 .drillX :layoutThoriumDrillAtLocation:sx
op sub *tmp349 .drillY :layoutThoriumDrillAtLocation:sy
set :tryPlaceGenerator:centerX *tmp348
set :tryPlaceGenerator:centerY *tmp349
set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:combinedMask
set :tryPlaceGenerator:generatorHorizontal :layoutThoriumDrillAtLocation:generatorHorizontal
set :tryPlaceGenerator:generatorVertical :layoutThoriumDrillAtLocation:generatorVertical
set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:combinedMask
set :findPossiblePlacement:placementMask :layoutThoriumDrillAtLocation:generatorVertical
set :findPossiblePlacement:width 2
set :findPossiblePlacement:height 4
set :findPossiblePlacement*retaddr 807
jump 199 always 0 0
jump 821 lessThan :findPossiblePlacement*retval 0
jump 811 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 878 always 0 0
op add *tmp183 :tryPlaceGenerator:centerX 0.5
op add .water2X *tmp183 :findPossiblePlacement:x
op add *tmp185 :tryPlaceGenerator:centerY 0.5
op add .water2Y *tmp185 :findPossiblePlacement:y
op add .generatorX *tmp183 :findPossiblePlacement:x
op add *tmp189 :tryPlaceGenerator:centerY 2.5
op add .generatorY *tmp189 :findPossiblePlacement:y
op shl *tmp191 :tryPlaceGenerator:generatorVertical :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp191
jump 839 always 0 0
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask :tryPlaceGenerator:generatorHorizontal
set :findPossiblePlacement:width 4
set :findPossiblePlacement:height 2
set :findPossiblePlacement*retaddr 827
jump 199 always 0 0
jump 830 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 878 always 0 0
op add *tmp195 :tryPlaceGenerator:centerX 0.5
op add .water2X *tmp195 :findPossiblePlacement:x
op add *tmp197 :tryPlaceGenerator:centerY 0.5
op add .water2Y *tmp197 :findPossiblePlacement:y
op add *tmp199 :tryPlaceGenerator:centerX 2.5
op add .generatorX *tmp199 :findPossiblePlacement:x
op add .generatorY *tmp197 :findPossiblePlacement:y
op shl *tmp203 :tryPlaceGenerator:generatorHorizontal :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp203
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask 1
set :findPossiblePlacement:width 1
set :findPossiblePlacement:height 1
set :findPossiblePlacement*retaddr 845
jump 199 always 0 0
jump 848 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 878 always 0 0
op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
op shl *tmp209 1 :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp209
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask 1
set :findPossiblePlacement:width 1
set :findPossiblePlacement:height 1
set :findPossiblePlacement*retaddr 858
jump 199 always 0 0
jump 861 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 878 always 0 0
op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
op shl *tmp215 1 :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp215
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask 1
set :findPossiblePlacement:width 1
set :findPossiblePlacement:height 1
set :findPossiblePlacement*retaddr 871
jump 199 always 0 0
jump 874 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
jump 878 always 0 0
op add .batteryX :tryPlaceGenerator:centerX :findPossiblePlacement:x
op add .batteryY :tryPlaceGenerator:centerY :findPossiblePlacement:y
set :tryPlaceGenerator*retval true
jump 878 always 0 0
jump 881 equal :tryPlaceGenerator*retval false
set :layoutThoriumDrillAtLocation*retval true
set @counter :layoutThoriumDrillAtLocation*retaddr
set @counter *tmp319
set :layoutThoriumDrillAtLocation*retval true
set @counter :layoutThoriumDrillAtLocation*retaddr
set .searchFinished false
set :findDrillLocationLocal:x :findDrillLocation:x
set :findDrillLocationLocal:y :findDrillLocation:y
set :findDrillLocationLocal:unit :findDrillLocation:unit
set :findDrillLocationLocal:item :findDrillLocation:item
set :findDrillLocationLocal:ore :findDrillLocation:ore
set :findDrillLocationLocal:size :findDrillLocation:size
set :findDrillLocationLocal:limit :findDrillLocation:limit
set :findDrillLocationLocal*retaddr 894
jump 12 always 0 0
set :findDrillLocation:dx :findDrillLocationLocal:dx
set :findDrillLocation:dy :findDrillLocationLocal:dy
set :findDrillLocation:capacity :findDrillLocationLocal:capacity
set .searchFinished true
set :findDrillLocation*retval true
set :findDrillLocation*finished true
jump 10 always 0 0
set :findDrillLocationLocal:x :layoutThoriumDrill:x
set :findDrillLocationLocal:y :layoutThoriumDrill:y
set :findDrillLocationLocal:unit :layoutThoriumDrill:unit
set :findDrillLocationLocal:item @thorium
set :findDrillLocationLocal:ore @ore-thorium
set :findDrillLocationLocal:size 3
set :findDrillLocationLocal:limit :layoutThoriumDrill:limit
set :findDrillLocationLocal*retaddr 910
jump 12 always 0 0
set .drillX :findDrillLocationLocal:dx
set .drillY :findDrillLocationLocal:dy
jump 915 notEqual :findDrillLocationLocal*retval false
set :layoutThoriumDrill*retval false
jump 918 always 0 0
set :layoutThoriumDrillAtLocation*retaddr 917
jump 606 always 0 0
set :layoutThoriumDrill*retval :layoutThoriumDrillAtLocation*retval
set :layoutThoriumDrill*finished true
jump 10 always 0 0
set .mapSpots 0
set .mapAction 0
set .mapTotal 0
set .mapProgress 0
ucontrol unbind 0 0 0 0 0
set :stopLocation*finished true
jump 10 always 0 0
print "Compiled by Mindcode - github.com/cardillan/mindcode"

