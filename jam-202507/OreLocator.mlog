jump 33 always 0 0
jump 630 always 0 0
jump 860 always 0 0
draw triangle bank1 message1 switch1 .angle .attenuationRate .bestSpot
draw triangle .coreX .coreY .debug .drillX .drillY .generatorX
draw triangle .generatorY .locations .maxAngle .nodeX .nodeY .panelX
draw triangle .panelY .start .water1X .water1Y .water2X .water2Y
draw triangle :core :x :y :computeRowValues:large :computeRowValues:ore :computeRowValues:x
draw triangle :computeRowValues:y :createTerrainMask:c :createTerrainMask:r :createTerrainMask:result :createTerrainMask:x :createTerrainMask:y
draw triangle :debugPrintSpot:i :debugPrintSpot:index :debugPrintSpot:size :debugPrintSpot:x :debugPrintSpot:y :findBestPosition:best
draw triangle :findBestPosition:large :findBestPosition:ore :findBestPosition:row1 :findBestPosition:row1.1 :findBestPosition:row2.1 :findBestPosition:row2
draw triangle :findBestPosition:row3 :findBestPosition:row3.1 :findBestPosition:row4 :findBestPosition:x :findBestPosition:y :findBestPosition:y1
draw triangle :findBestPosition:y2 :findBestPosition:y3 :findBestPosition:y4 :findDrillLocation:capacity :findDrillLocation:dx :findDrillLocation:dy
draw triangle :findDrillLocation:item :findDrillLocation:large :findDrillLocation:limit :findDrillLocation:ore :findDrillLocation:unit :findDrillLocation:x
draw triangle :findDrillLocation:y :findDrillLocationLocal:best :findDrillLocationLocal:bestX :findDrillLocationLocal:bestY :findDrillLocationLocal:capacity :findDrillLocationLocal:count
draw triangle :findDrillLocationLocal:diffX :findDrillLocationLocal:diffY :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:dx :findDrillLocationLocal:dy :findDrillLocationLocal:item
draw triangle :findDrillLocationLocal:large :findDrillLocationLocal:last :findDrillLocationLocal:limit :findDrillLocationLocal:maxDistance :findDrillLocationLocal:ore :findDrillLocationLocal:oreX
draw triangle :findDrillLocationLocal:oreY :findDrillLocationLocal:unit :findDrillLocationLocal:x :findDrillLocationLocal:y :findPossiblePlacement:height :findPossiblePlacement:mask
draw triangle :findPossiblePlacement:placementMask :findPossiblePlacement:terrainMask :findPossiblePlacement:width :findPossiblePlacement:x :findPossiblePlacement:y :isBlocked:result
draw triangle :isBlocked:x :isBlocked:y :layoutThoriumDrill:limit :layoutThoriumDrill:unit :layoutThoriumDrill:x :layoutThoriumDrill:y
draw triangle :layoutThoriumDrillAtLocation:combinedMask :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:generatorHorizontal :layoutThoriumDrillAtLocation:generatorVertical :layoutThoriumDrillAtLocation:newX
draw triangle :layoutThoriumDrillAtLocation:newY :layoutThoriumDrillAtLocation:sx :layoutThoriumDrillAtLocation:sy :layoutThoriumDrillAtLocation:terrainMask :locateOreAway:a :locateOreAway:coreDist
draw triangle :locateOreAway:distance :locateOreAway:unitDist :locateOreAway:x :locateOreAway:y :round.1:x :round:x
draw triangle :round.2:x :shiftMask:clearMask :shiftMask:keep :shiftMask:mask :shiftMask:shift :spotValue.1:ore
draw triangle :spotValue.3:ore :spotValue:ore :spotValue.2:ore :spotValue.4:ore :spotValue.1:result :spotValue.3:result
draw triangle :spotValue.4:result :spotValue:result :spotValue.2:result :spotValue:x :spotValue.3:x :spotValue.2:x
draw triangle :spotValue.1:x :spotValue.4:x :spotValue:y :spotValue.3:y :spotValue.2:y :spotValue.1:y
draw triangle :spotValue.4:y :tryPlaceGenerator:centerX :tryPlaceGenerator:centerY :tryPlaceGenerator:generatorHorizontal :tryPlaceGenerator:generatorVertical :tryPlaceGenerator:terrainMask
draw triangle :updateRowPositions3.1:col1 :updateRowPositions3.2:col1 :updateRowPositions3:col1 :updateRowPositions3.1:col2 :updateRowPositions3.2:col2 :updateRowPositions3:col2
draw triangle :updateRowPositions3.1:col3 :updateRowPositions3.2:col3 :updateRowPositions3:col3 :updateRowPositions4.1:col1 :updateRowPositions4.3:col1 :updateRowPositions4:col1
draw triangle :updateRowPositions4.2:col1 :updateRowPositions4.1:col2 :updateRowPositions4.3:col2 :updateRowPositions4:col2 :updateRowPositions4.2:col2 :updateRowPositions4.1:col3
draw triangle :updateRowPositions4.3:col3 :updateRowPositions4:col3 :updateRowPositions4.2:col3 :updateRowPositions4.1:col4 :updateRowPositions4.3:col4 :updateRowPositions4:col4
draw triangle :updateRowPositions4.2:col4 :visited:i :visited:index :visited:lx :visited:ly 0
set .attenuationRate 50
set .debug true
printflush message1
printflush message1
ubind @poly
ulocate building core false @copper :x :y 0 :core
jump 37 equal :core null
ucontrol within :x :y 1 *tmp3 0
jump 44 notEqual *tmp3 false
ucontrol approach :x :y 0.5 0 0
jump 40 always 0 0
set .start @second
set :findDrillLocationLocal:x :x
set :findDrillLocationLocal:y :y
set :findDrillLocationLocal:unit @unit
set :findDrillLocationLocal:item @thorium
set :findDrillLocationLocal:ore @ore-thorium
set :findDrillLocationLocal:large true
set :findDrillLocationLocal:limit 7
set :findDrillLocationLocal*retaddr 54
jump 128 always 0 0
print "Found {0} at {0}, {0}.\nFinished."
format :findDrillLocationLocal:capacity
format :findDrillLocationLocal:dx
format :findDrillLocationLocal:dy
printflush message1
control enabled switch1 true 0 0 0
sensor *tmp53 switch1 @enabled
jump 60 notEqual *tmp53 false
end
wait 1e12
jump 63 always 0 0
op sub :spotValue:x :computeRowValues:x 2
set :spotValue:y :computeRowValues:y
set :spotValue:ore :computeRowValues:ore
ucontrol getBlock :spotValue:x :spotValue:y type building floor
select value equal floor :spotValue:ore 0.00392156862745098 0
select type equal type @boulder @air type
select :spotValue:result equal type @air value 0.06274509803921569
op sub :spotValue.1:x :computeRowValues:x 1
set :spotValue.1:y :computeRowValues:y
set :spotValue.1:ore :computeRowValues:ore
ucontrol getBlock :spotValue.1:x :spotValue.1:y type building floor
select value equal floor :spotValue.1:ore 0.00392156862745098 0
select type equal type @boulder @air type
select :spotValue.1:result equal type @air value 0.06274509803921569
set :spotValue.2:x :computeRowValues:x
set :spotValue.2:y :computeRowValues:y
set :spotValue.2:ore :computeRowValues:ore
ucontrol getBlock :spotValue.2:x :spotValue.2:y type building floor
select value equal floor :spotValue.2:ore 0.00392156862745098 0
select type equal type @boulder @air type
select :spotValue.2:result equal type @air value 0.06274509803921569
op add :spotValue.3:x :computeRowValues:x 1
set :spotValue.3:y :computeRowValues:y
set :spotValue.3:ore :computeRowValues:ore
ucontrol getBlock :spotValue.3:x :spotValue.3:y type building floor
select value equal floor :spotValue.3:ore 0.00392156862745098 0
select type equal type @boulder @air type
select :spotValue.3:result equal type @air value 0.06274509803921569
op add :spotValue.4:x :computeRowValues:x 2
set :spotValue.4:y :computeRowValues:y
set :spotValue.4:ore :computeRowValues:ore
ucontrol getBlock :spotValue.4:x :spotValue.4:y type building floor
select value equal floor :spotValue.4:ore 0.00392156862745098 0
select type equal type @boulder @air type
select :spotValue.4:result equal type @air value 0.06274509803921569
op mul *tmp64 :spotValue:result 255
op mul *tmp65 :spotValue.1:result 255
op mul *tmp66 :spotValue.2:result 255
op mul *tmp67 :spotValue.3:result 255
op mul *tmp68 :spotValue.4:result 255
jump 113 equal .debug false
print "Spot values for row {0}: {0}, {0}, {0}, {0}, {0}\n"
format :computeRowValues:y
format *tmp64
format *tmp65
format *tmp66
format *tmp67
format *tmp68
jump 122 equal :computeRowValues:large false
op add *tmp71 :spotValue:result :spotValue.1:result
op add *tmp72 *tmp71 :spotValue.2:result
op add *tmp73 :spotValue.1:result :spotValue.2:result
op add *tmp74 *tmp73 :spotValue.3:result
op add *tmp75 :spotValue.2:result :spotValue.3:result
op add *tmp76 *tmp75 :spotValue.4:result
packcolor :computeRowValues*retval *tmp72 *tmp74 *tmp76 0
set @counter :computeRowValues*retaddr
op add *tmp78 :spotValue:result :spotValue.1:result
op add *tmp79 :spotValue.1:result :spotValue.2:result
op add *tmp80 :spotValue.2:result :spotValue.3:result
op add *tmp81 :spotValue.3:result :spotValue.4:result
packcolor :computeRowValues*retval *tmp78 *tmp79 *tmp80 *tmp81
set @counter :computeRowValues*retaddr
set .locations 0
set .coreX :findDrillLocationLocal:x
set .coreY :findDrillLocationLocal:y
op sub *tmp83 @mapw :findDrillLocationLocal:x
op sub *tmp84 @maph :findDrillLocationLocal:y
op max *tmp85 :findDrillLocationLocal:x :findDrillLocationLocal:y
op max *tmp85 *tmp85 *tmp83
op max *tmp85 *tmp85 *tmp84
set :findDrillLocationLocal:distanceLimit *tmp85
ubind :findDrillLocationLocal:unit
set .angle 0
op div .maxAngle *tmp85 3.8197185279121366
set :findDrillLocationLocal:count -1
set :findDrillLocationLocal:oreX 0
set :findDrillLocationLocal:oreY 0
set :findDrillLocationLocal:capacity 0
set :findDrillLocationLocal:dy :findDrillLocationLocal:capacity
set :findDrillLocationLocal:dx :findDrillLocationLocal:dy
set .bestSpot :findDrillLocationLocal:dx
set :findDrillLocationLocal:best 0
set :findDrillLocationLocal:bestX :findDrillLocationLocal:x
set :findDrillLocationLocal:bestY :findDrillLocationLocal:y
op sub *tmp87 :findDrillLocationLocal:limit :findDrillLocationLocal:capacity
op mul :findDrillLocationLocal:maxDistance *tmp87 .attenuationRate
op min :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:distanceLimit :findDrillLocationLocal:maxDistance
op div .maxAngle :findDrillLocationLocal:distanceLimit 3.8197185279121366
set :locateOreAway:x :findDrillLocationLocal:oreX
set :locateOreAway:y :findDrillLocationLocal:oreY
op mul :locateOreAway:distance 3.8197185279121366 .angle
op max .angle .angle @pi
op sub *tmp99 @mapw 5
op sub *tmp106 @maph 5
jump 215 greaterThanEq :locateOreAway:distance :findDrillLocationLocal:distanceLimit
op div :locateOreAway:a .angle @degToRad
op sin *tmp96 :locateOreAway:a 0
op mul *tmp97 *tmp96 :locateOreAway:distance
op add *tmp98 .coreX *tmp97
op max *tmp101 *tmp98 5
op min *tmp100 *tmp101 *tmp99
op cos *tmp103 :locateOreAway:a 0
op mul *tmp104 *tmp103 :locateOreAway:distance
op add *tmp105 .coreY *tmp104
op max *tmp108 *tmp105 5
op min *tmp107 *tmp108 *tmp106
ucontrol within *tmp100 *tmp107 5 *tmp110 0
jump 176 notEqual *tmp110 false
ucontrol approach *tmp100 *tmp107 4.5 0 0
jump 172 always 0 0
op div *tmp113 3.8197185279121366 :locateOreAway:distance
op add .angle .angle *tmp113
op mul :locateOreAway:distance 3.8197185279121366 .angle
ulocate ore core true :findDrillLocationLocal:item :locateOreAway:x :locateOreAway:y *tmp116 0
jump 183 notEqual *tmp116 false
set *tmp91 false
jump 216 always 0 0
op sub *tmp120 :locateOreAway:x .coreX
op abs *tmp121 *tmp120 0
op sub *tmp122 :locateOreAway:y .coreY
op abs *tmp123 *tmp122 0
op max :locateOreAway:coreDist *tmp121 *tmp123
op sub *tmp125 :locateOreAway:x *tmp100
op sub *tmp126 :locateOreAway:y *tmp107
op len :locateOreAway:unitDist *tmp125 *tmp126
jump 214 lessThan :locateOreAway:coreDist 7
jump 214 greaterThanEq :locateOreAway:unitDist :locateOreAway:distance
set :visited:index 1
set :visited:i 0
jump 208 greaterThanEq 0 .locations
read :visited:lx bank1 :visited:index
op add *tmp136 :visited:index 1
read :visited:ly bank1 *tmp136
op sub *tmp139 :locateOreAway:x :visited:lx
op sub *tmp140 :locateOreAway:y :visited:ly
op len *tmp141 *tmp139 *tmp140
jump 205 greaterThanEq *tmp141 7
set *tmp132 true
jump 209 always 0 0
op add :visited:index :visited:index 3
op add :visited:i :visited:i 1
jump 196 lessThan :visited:i .locations
set *tmp132 false
jump 214 notEqual *tmp132 false
op div *tmp146 7.639437055824273 :locateOreAway:distance
op add .angle .angle *tmp146
set *tmp91 true
jump 216 always 0 0
jump 161 lessThan :locateOreAway:distance :findDrillLocationLocal:distanceLimit
set *tmp91 false
set :findDrillLocationLocal:oreX :locateOreAway:x
set :findDrillLocationLocal:oreY :locateOreAway:y
jump 221 notEqual *tmp91 false
op greaterThan :findDrillLocationLocal*retval :findDrillLocationLocal:capacity 0
set @counter :findDrillLocationLocal*retaddr
ucontrol within :locateOreAway:x :locateOreAway:y 6 *tmp153 0
jump 225 notEqual *tmp153 false
ucontrol approach :locateOreAway:x :locateOreAway:y 5.5 0 0
jump 221 always 0 0
set :findDrillLocationLocal:last 0
set :findBestPosition:x :findDrillLocationLocal:oreX
set :findBestPosition:y :findDrillLocationLocal:oreY
set :findBestPosition:ore :findDrillLocationLocal:ore
set :findBestPosition:large :findDrillLocationLocal:large
op sub *tmp157 :findDrillLocationLocal:oreY 2
set :computeRowValues:x :findDrillLocationLocal:oreX
set :computeRowValues:y *tmp157
set :computeRowValues:ore :findDrillLocationLocal:ore
set :computeRowValues:large :findDrillLocationLocal:large
set :computeRowValues*retaddr 237
jump 65 always 0 0
set :findBestPosition:y1 :computeRowValues*retval
op sub *tmp159 :findBestPosition:y 1
set :computeRowValues:x :findBestPosition:x
set :computeRowValues:y *tmp159
set :computeRowValues:ore :findBestPosition:ore
set :computeRowValues:large :findBestPosition:large
set :computeRowValues*retaddr 245
jump 65 always 0 0
set :findBestPosition:y2 :computeRowValues*retval
set :computeRowValues:x :findBestPosition:x
set :computeRowValues:y :findBestPosition:y
set :computeRowValues:ore :findBestPosition:ore
set :computeRowValues:large :findBestPosition:large
set :computeRowValues*retaddr 252
jump 65 always 0 0
set :findBestPosition:y3 :computeRowValues*retval
op add *tmp163 :findBestPosition:y 1
set :computeRowValues:x :findBestPosition:x
set :computeRowValues:y *tmp163
set :computeRowValues:ore :findBestPosition:ore
set :computeRowValues:large :findBestPosition:large
set :computeRowValues*retaddr 260
jump 65 always 0 0
set :findBestPosition:y4 :computeRowValues*retval
op add *tmp165 :findBestPosition:y 2
set :computeRowValues:x :findBestPosition:x
set :computeRowValues:y *tmp165
set :computeRowValues:ore :findBestPosition:ore
set :computeRowValues:large :findBestPosition:large
set :computeRowValues*retaddr 268
jump 65 always 0 0
set :findBestPosition:best 0
set :findDrillLocationLocal:diffX 0
set :findDrillLocationLocal:diffY 0
jump 386 equal :findBestPosition:large false
op add *tmp168 :findBestPosition:y1 :findBestPosition:y2
op add :findBestPosition:row1 *tmp168 :findBestPosition:y3
op add *tmp170 :findBestPosition:y2 :findBestPosition:y3
op add :findBestPosition:row2 *tmp170 :findBestPosition:y4
op add *tmp172 :findBestPosition:y3 :findBestPosition:y4
op add :findBestPosition:row3 *tmp172 :computeRowValues*retval
unpackcolor :updateRowPositions3:col1 :updateRowPositions3:col2 :updateRowPositions3:col3 0 :findBestPosition:row1
op mul *tmp175 :updateRowPositions3:col1 255
print *tmp175
print " at -1, -1 (0, 0)"
jump 287 greaterThanEq :updateRowPositions3:col1 0.0392156862745098
jump 287 lessThanEq :updateRowPositions3:col1 0
set :findDrillLocationLocal:diffX -1
set :findDrillLocationLocal:diffY -1
set :findBestPosition:best :updateRowPositions3:col1
print "\n{0} at 0, -1 ({0}, {0})"
op mul *tmp180 :updateRowPositions3:col2 255
format *tmp180
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 297 greaterThanEq :updateRowPositions3:col2 0.0392156862745098
jump 297 lessThanEq :updateRowPositions3:col2 :findBestPosition:best
set :findDrillLocationLocal:diffX 0
set :findDrillLocationLocal:diffY -1
set :findBestPosition:best :updateRowPositions3:col2
print "\n{0} at 1, -1 ({0}, {0})"
op mul *tmp185 :updateRowPositions3:col3 255
format *tmp185
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 307 greaterThanEq :updateRowPositions3:col3 0.0392156862745098
jump 307 lessThanEq :updateRowPositions3:col3 :findBestPosition:best
set :findDrillLocationLocal:diffX 1
set :findDrillLocationLocal:diffY -1
set :findBestPosition:best :updateRowPositions3:col3
print "\nupdateRowPositions3: {0}, {0}: {0}\n{0} at -1, 0 ({0}, {0})"
op mul *tmp190 :findBestPosition:best 255
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
format *tmp190
unpackcolor :updateRowPositions3.1:col1 :updateRowPositions3.1:col2 :updateRowPositions3.1:col3 0 :findBestPosition:row2
op mul *tmp192 :updateRowPositions3.1:col1 255
format *tmp192
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 322 greaterThanEq :updateRowPositions3.1:col1 0.0392156862745098
jump 322 lessThanEq :updateRowPositions3.1:col1 :findBestPosition:best
set :findDrillLocationLocal:diffX -1
set :findDrillLocationLocal:diffY 0
set :findBestPosition:best :updateRowPositions3.1:col1
print "\n{0} at 0, 0 ({0}, {0})"
op mul *tmp197 :updateRowPositions3.1:col2 255
format *tmp197
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 332 greaterThanEq :updateRowPositions3.1:col2 0.0392156862745098
jump 332 lessThanEq :updateRowPositions3.1:col2 :findBestPosition:best
set :findDrillLocationLocal:diffX 0
set :findDrillLocationLocal:diffY 0
set :findBestPosition:best :updateRowPositions3.1:col2
print "\n{0} at 1, 0 ({0}, {0})"
op mul *tmp202 :updateRowPositions3.1:col3 255
format *tmp202
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 342 greaterThanEq :updateRowPositions3.1:col3 0.0392156862745098
jump 342 lessThanEq :updateRowPositions3.1:col3 :findBestPosition:best
set :findDrillLocationLocal:diffX 1
set :findDrillLocationLocal:diffY 0
set :findBestPosition:best :updateRowPositions3.1:col3
print "\nupdateRowPositions3: {0}, {0}: {0}\n{0} at -1, 1 ({0}, {0})"
op mul *tmp207 :findBestPosition:best 255
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
format *tmp207
unpackcolor :updateRowPositions3.2:col1 :updateRowPositions3.2:col2 :updateRowPositions3.2:col3 0 :findBestPosition:row3
op mul *tmp209 :updateRowPositions3.2:col1 255
format *tmp209
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 357 greaterThanEq :updateRowPositions3.2:col1 0.0392156862745098
jump 357 lessThanEq :updateRowPositions3.2:col1 :findBestPosition:best
set :findDrillLocationLocal:diffX -1
set :findDrillLocationLocal:diffY 1
set :findBestPosition:best :updateRowPositions3.2:col1
print "\n{0} at 0, 1 ({0}, {0})"
op mul *tmp214 :updateRowPositions3.2:col2 255
format *tmp214
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 367 greaterThanEq :updateRowPositions3.2:col2 0.0392156862745098
jump 367 lessThanEq :updateRowPositions3.2:col2 :findBestPosition:best
set :findDrillLocationLocal:diffX 0
set :findDrillLocationLocal:diffY 1
set :findBestPosition:best :updateRowPositions3.2:col2
print "\n{0} at 1, 1 ({0}, {0})"
op mul *tmp219 :updateRowPositions3.2:col3 255
format *tmp219
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 377 greaterThanEq :updateRowPositions3.2:col3 0.0392156862745098
jump 377 lessThanEq :updateRowPositions3.2:col3 :findBestPosition:best
set :findDrillLocationLocal:diffX 1
set :findDrillLocationLocal:diffY 1
set :findBestPosition:best :updateRowPositions3.2:col3
print "\nupdateRowPositions3: {0}, {0}: {0}\nfindBestPosition: {0}, {0}: {0}\n"
op mul *tmp224 :findBestPosition:best 255
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
format *tmp224
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
format *tmp224
jump 553 always 0 0
op add :findBestPosition:row1.1 :findBestPosition:y1 :findBestPosition:y2
op add :findBestPosition:row2.1 :findBestPosition:y2 :findBestPosition:y3
op add :findBestPosition:row3.1 :findBestPosition:y3 :findBestPosition:y4
op add :findBestPosition:row4 :findBestPosition:y4 :computeRowValues*retval
unpackcolor :updateRowPositions4:col1 :updateRowPositions4:col2 :updateRowPositions4:col3 :updateRowPositions4:col4 :findBestPosition:row1.1
op mul *tmp230 :updateRowPositions4:col1 255
print *tmp230
print " at -1.5, -1.5 (0, 0)"
jump 399 greaterThanEq :updateRowPositions4:col1 0.0392156862745098
jump 399 lessThanEq :updateRowPositions4:col1 0
set :findDrillLocationLocal:diffX -1.5
set :findDrillLocationLocal:diffY -1.5
set :findBestPosition:best :updateRowPositions4:col1
print "\n{0} at -0.5, -1.5 ({0}, {0})"
op mul *tmp235 :updateRowPositions4:col2 255
format *tmp235
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 409 greaterThanEq :updateRowPositions4:col2 0.0392156862745098
jump 409 lessThanEq :updateRowPositions4:col2 :findBestPosition:best
set :findDrillLocationLocal:diffX -0.5
set :findDrillLocationLocal:diffY -1.5
set :findBestPosition:best :updateRowPositions4:col2
print "\n{0} at 0.5, -1.5 ({0}, {0})"
op mul *tmp240 :updateRowPositions4:col3 255
format *tmp240
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 419 greaterThanEq :updateRowPositions4:col3 0.0392156862745098
jump 419 lessThanEq :updateRowPositions4:col3 :findBestPosition:best
set :findDrillLocationLocal:diffX 0.5
set :findDrillLocationLocal:diffY -1.5
set :findBestPosition:best :updateRowPositions4:col3
print "\n{0} at 1.5, -1.5 ({0}, {0})"
op mul *tmp245 :updateRowPositions4:col4 255
format *tmp245
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 429 greaterThanEq :updateRowPositions4:col4 0.0392156862745098
jump 429 lessThanEq :updateRowPositions4:col4 :findBestPosition:best
set :findDrillLocationLocal:diffX 1.5
set :findDrillLocationLocal:diffY -1.5
set :findBestPosition:best :updateRowPositions4:col4
print "\n{0} at -1.5, -0.5 ({0}, {0})"
unpackcolor :updateRowPositions4.1:col1 :updateRowPositions4.1:col2 :updateRowPositions4.1:col3 :updateRowPositions4.1:col4 :findBestPosition:row2.1
op mul *tmp250 :updateRowPositions4.1:col1 255
format *tmp250
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 440 greaterThanEq :updateRowPositions4.1:col1 0.0392156862745098
jump 440 lessThanEq :updateRowPositions4.1:col1 :findBestPosition:best
set :findDrillLocationLocal:diffX -1.5
set :findDrillLocationLocal:diffY -0.5
set :findBestPosition:best :updateRowPositions4.1:col1
print "\n{0} at -0.5, -0.5 ({0}, {0})"
op mul *tmp255 :updateRowPositions4.1:col2 255
format *tmp255
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 450 greaterThanEq :updateRowPositions4.1:col2 0.0392156862745098
jump 450 lessThanEq :updateRowPositions4.1:col2 :findBestPosition:best
set :findDrillLocationLocal:diffX -0.5
set :findDrillLocationLocal:diffY -0.5
set :findBestPosition:best :updateRowPositions4.1:col2
print "\n{0} at 0.5, -0.5 ({0}, {0})"
op mul *tmp260 :updateRowPositions4.1:col3 255
format *tmp260
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 460 greaterThanEq :updateRowPositions4.1:col3 0.0392156862745098
jump 460 lessThanEq :updateRowPositions4.1:col3 :findBestPosition:best
set :findDrillLocationLocal:diffX 0.5
set :findDrillLocationLocal:diffY -0.5
set :findBestPosition:best :updateRowPositions4.1:col3
print "\n{0} at 1.5, -0.5 ({0}, {0})"
op mul *tmp265 :updateRowPositions4.1:col4 255
format *tmp265
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 470 greaterThanEq :updateRowPositions4.1:col4 0.0392156862745098
jump 470 lessThanEq :updateRowPositions4.1:col4 :findBestPosition:best
set :findDrillLocationLocal:diffX 1.5
set :findDrillLocationLocal:diffY -0.5
set :findBestPosition:best :updateRowPositions4.1:col4
print "\n{0} at -1.5, 0.5 ({0}, {0})"
unpackcolor :updateRowPositions4.2:col1 :updateRowPositions4.2:col2 :updateRowPositions4.2:col3 :updateRowPositions4.2:col4 :findBestPosition:row3.1
op mul *tmp270 :updateRowPositions4.2:col1 255
format *tmp270
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 481 greaterThanEq :updateRowPositions4.2:col1 0.0392156862745098
jump 481 lessThanEq :updateRowPositions4.2:col1 :findBestPosition:best
set :findDrillLocationLocal:diffX -1.5
set :findDrillLocationLocal:diffY 0.5
set :findBestPosition:best :updateRowPositions4.2:col1
print "\n{0} at -0.5, 0.5 ({0}, {0})"
op mul *tmp275 :updateRowPositions4.2:col2 255
format *tmp275
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 491 greaterThanEq :updateRowPositions4.2:col2 0.0392156862745098
jump 491 lessThanEq :updateRowPositions4.2:col2 :findBestPosition:best
set :findDrillLocationLocal:diffX -0.5
set :findDrillLocationLocal:diffY 0.5
set :findBestPosition:best :updateRowPositions4.2:col2
print "\n{0} at 0.5, 0.5 ({0}, {0})"
op mul *tmp280 :updateRowPositions4.2:col3 255
format *tmp280
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 501 greaterThanEq :updateRowPositions4.2:col3 0.0392156862745098
jump 501 lessThanEq :updateRowPositions4.2:col3 :findBestPosition:best
set :findDrillLocationLocal:diffX 0.5
set :findDrillLocationLocal:diffY 0.5
set :findBestPosition:best :updateRowPositions4.2:col3
print "\n{0} at 1.5, 0.5 ({0}, {0})"
op mul *tmp285 :updateRowPositions4.2:col4 255
format *tmp285
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 511 greaterThanEq :updateRowPositions4.2:col4 0.0392156862745098
jump 511 lessThanEq :updateRowPositions4.2:col4 :findBestPosition:best
set :findDrillLocationLocal:diffX 1.5
set :findDrillLocationLocal:diffY 0.5
set :findBestPosition:best :updateRowPositions4.2:col4
print "\n{0} at -1.5, 1.5 ({0}, {0})"
unpackcolor :updateRowPositions4.3:col1 :updateRowPositions4.3:col2 :updateRowPositions4.3:col3 :updateRowPositions4.3:col4 :findBestPosition:row4
op mul *tmp290 :updateRowPositions4.3:col1 255
format *tmp290
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 522 greaterThanEq :updateRowPositions4.3:col1 0.0392156862745098
jump 522 lessThanEq :updateRowPositions4.3:col1 :findBestPosition:best
set :findDrillLocationLocal:diffX -1.5
set :findDrillLocationLocal:diffY 1.5
set :findBestPosition:best :updateRowPositions4.3:col1
print "\n{0} at -0.5, 1.5 ({0}, {0})"
op mul *tmp295 :updateRowPositions4.3:col2 255
format *tmp295
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 532 greaterThanEq :updateRowPositions4.3:col2 0.0392156862745098
jump 532 lessThanEq :updateRowPositions4.3:col2 :findBestPosition:best
set :findDrillLocationLocal:diffX -0.5
set :findDrillLocationLocal:diffY 1.5
set :findBestPosition:best :updateRowPositions4.3:col2
print "\n{0} at 0.5, 1.5 ({0}, {0})"
op mul *tmp300 :updateRowPositions4.3:col3 255
format *tmp300
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 542 greaterThanEq :updateRowPositions4.3:col3 0.0392156862745098
jump 542 lessThanEq :updateRowPositions4.3:col3 :findBestPosition:best
set :findDrillLocationLocal:diffX 0.5
set :findDrillLocationLocal:diffY 1.5
set :findBestPosition:best :updateRowPositions4.3:col3
print "\n{0} at 1.5, 1.5 ({0}, {0})"
op mul *tmp305 :updateRowPositions4.3:col4 255
format *tmp305
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 552 greaterThanEq :updateRowPositions4.3:col4 0.0392156862745098
jump 552 lessThanEq :updateRowPositions4.3:col4 :findBestPosition:best
set :findDrillLocationLocal:diffX 1.5
set :findDrillLocationLocal:diffY 1.5
set :findBestPosition:best :updateRowPositions4.3:col4
print "\n"
jump 558 equal .debug false
printflush message1
control enabled switch1 true 0 0 0
sensor *tmp312 switch1 @enabled
jump 556 notEqual *tmp312 false
op mul *tmp156 :findBestPosition:best 255
print "Ore at {0}, {0}: score {0}, best {0}, dx {0}, dy {0}\n"
format :findDrillLocationLocal:oreX
format :findDrillLocationLocal:oreY
format *tmp156
format :findDrillLocationLocal:best
format :findDrillLocationLocal:diffX
format :findDrillLocationLocal:diffY
jump 571 equal .debug false
printflush message1
control enabled switch1 true 0 0 0
sensor *tmp316 switch1 @enabled
jump 569 notEqual *tmp316 false
jump 580 lessThanEq *tmp156 :findDrillLocationLocal:capacity
op add :findDrillLocationLocal:dx :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
op add :findDrillLocationLocal:dy :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
set :findDrillLocationLocal:capacity *tmp156
set .bestSpot *tmp156
jump 580 lessThan :findDrillLocationLocal:capacity :findDrillLocationLocal:limit
ucontrol unbind 0 0 0 0 0
set :findDrillLocationLocal*retval true
set @counter :findDrillLocationLocal*retaddr
jump 584 lessThanEq *tmp156 :findDrillLocationLocal:best
op add :findDrillLocationLocal:bestX :findDrillLocationLocal:oreX :findDrillLocationLocal:diffX
op add :findDrillLocationLocal:bestY :findDrillLocationLocal:oreY :findDrillLocationLocal:diffY
set :findDrillLocationLocal:best *tmp156
jump 600 lessThanEq *tmp156 :findDrillLocationLocal:last
set :findDrillLocationLocal:last *tmp156
op mul :round:x :findDrillLocationLocal:diffX 1.1
op add *tmp331 :round:x 0.5
op floor *tmp330 *tmp331 0
op add :findDrillLocationLocal:oreX :findDrillLocationLocal:oreX *tmp330
op mul :round.1:x :findDrillLocationLocal:diffY 1.1
op add *tmp335 :round.1:x 0.5
op floor *tmp334 *tmp335 0
op add :findDrillLocationLocal:oreY :findDrillLocationLocal:oreY *tmp334
op sub *tmp337 :findDrillLocationLocal:oreX .coreX
op abs *tmp338 *tmp337 0
op sub *tmp339 :findDrillLocationLocal:oreY .coreY
op abs *tmp340 *tmp339 0
op min *tmp341 *tmp338 *tmp340
jump 226 greaterThanEq *tmp341 7
op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
write :findDrillLocationLocal:best bank1 :findDrillLocationLocal:count
op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
write :findDrillLocationLocal:bestX bank1 :findDrillLocationLocal:count
op add :findDrillLocationLocal:count :findDrillLocationLocal:count 1
write :findDrillLocationLocal:bestY bank1 :findDrillLocationLocal:count
op add .locations .locations 1
op sub :round.2:x @second .start
op add *tmp353 :round.2:x 0.5
op floor *tmp352 *tmp353 0
print "Time: {0} s\n"
format *tmp352
set :debugPrintSpot:index -1
set :debugPrintSpot:i 0
jump 627 greaterThanEq 0 .locations
op add :debugPrintSpot:index :debugPrintSpot:index 1
read :debugPrintSpot:size bank1 :debugPrintSpot:index
op add :debugPrintSpot:index :debugPrintSpot:index 1
read :debugPrintSpot:x bank1 :debugPrintSpot:index
op add :debugPrintSpot:index :debugPrintSpot:index 1
read :debugPrintSpot:y bank1 :debugPrintSpot:index
print :debugPrintSpot:x
print ", {0}: {0}\n"
format :debugPrintSpot:y
format :debugPrintSpot:size
op add :debugPrintSpot:i :debugPrintSpot:i 1
jump 615 lessThan :debugPrintSpot:i .locations
print ""
printflush message1
jump 147 always 0 0
set :findDrillLocationLocal:x :findDrillLocation:x
set :findDrillLocationLocal:y :findDrillLocation:y
set :findDrillLocationLocal:unit :findDrillLocation:unit
set :findDrillLocationLocal:item :findDrillLocation:item
set :findDrillLocationLocal:ore :findDrillLocation:ore
set :findDrillLocationLocal:large :findDrillLocation:large
set :findDrillLocationLocal:limit :findDrillLocation:limit
set :findDrillLocationLocal*retaddr 639
jump 128 always 0 0
set :findDrillLocation:dx :findDrillLocationLocal:dx
set :findDrillLocation:dy :findDrillLocationLocal:dy
set :findDrillLocation:capacity :findDrillLocationLocal:capacity
set :findDrillLocation*retval :findDrillLocationLocal*retval
set :findDrillLocation*finished true
jump 63 always 0 0
ucontrol within :createTerrainMask:x :createTerrainMask:y 6 *tmp364 0
jump 649 notEqual *tmp364 false
ucontrol approach :createTerrainMask:x :createTerrainMask:y 5.5 0 0
jump 645 always 0 0
set :createTerrainMask:result 0
set :createTerrainMask:r 3
set :createTerrainMask:c 3
op add :isBlocked:y :createTerrainMask:y :createTerrainMask:r
op shl *tmp367 :createTerrainMask:result 1
op add :isBlocked:x :createTerrainMask:x :createTerrainMask:c
ucontrol getBlock :isBlocked:x :isBlocked:y type building floor
select type equal type @boulder @air type
select :isBlocked:result equal type @air 0 1
op or :createTerrainMask:result *tmp367 :isBlocked:result
op sub :createTerrainMask:c :createTerrainMask:c 1
jump 653 greaterThanEq :createTerrainMask:c -3
op sub :createTerrainMask:r :createTerrainMask:r 1
jump 651 greaterThanEq :createTerrainMask:r -3
set :createTerrainMask*retval :createTerrainMask:result
set @counter :createTerrainMask*retaddr
set :findPossiblePlacement:y -3
jump 687 greaterThan :findPossiblePlacement:y 3
op add *tmp397 :findPossiblePlacement:y 3
op mul *tmp398 7 *tmp397
op shl :findPossiblePlacement:mask :findPossiblePlacement:placementMask *tmp398
set :findPossiblePlacement:x -3
jump 683 greaterThan :findPossiblePlacement:x 3
op and *tmp400 :findPossiblePlacement:terrainMask :findPossiblePlacement:mask
jump 678 notEqual *tmp400 0
op mul *tmp403 :findPossiblePlacement:y 7
op add *tmp404 24 *tmp403
op add :findPossiblePlacement*retval *tmp404 :findPossiblePlacement:x
set @counter :findPossiblePlacement*retaddr
op sub *tmp406 3 :findPossiblePlacement:width
jump 683 greaterThan :findPossiblePlacement:x *tmp406
op shl :findPossiblePlacement:mask :findPossiblePlacement:mask 1
op add :findPossiblePlacement:x :findPossiblePlacement:x 1
jump 672 lessThanEq :findPossiblePlacement:x 3
op sub *tmp409 3 :findPossiblePlacement:height
jump 687 greaterThan :findPossiblePlacement:y *tmp409
op add :findPossiblePlacement:y :findPossiblePlacement:y 1
jump 667 lessThanEq :findPossiblePlacement:y 3
set :findPossiblePlacement*retval -1
set @counter :findPossiblePlacement*retaddr
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask :tryPlaceGenerator:generatorHorizontal
set :findPossiblePlacement:width 4
set :findPossiblePlacement:height 2
set :findPossiblePlacement*retaddr 695
jump 665 always 0 0
jump 706 lessThan :findPossiblePlacement*retval 0
op add *tmp415 :tryPlaceGenerator:centerX 0.5
op add .water2X *tmp415 :findPossiblePlacement:x
op add *tmp417 :tryPlaceGenerator:centerY 0.5
op add .water2Y *tmp417 :findPossiblePlacement:y
op add *tmp419 :tryPlaceGenerator:centerX 2.5
op add .generatorX *tmp419 :findPossiblePlacement:x
op add .generatorY *tmp417 :findPossiblePlacement:y
op shl *tmp423 :tryPlaceGenerator:generatorHorizontal :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp423
jump 724 always 0 0
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask :tryPlaceGenerator:generatorVertical
set :findPossiblePlacement:width 2
set :findPossiblePlacement:height 4
set :findPossiblePlacement*retaddr 712
jump 665 always 0 0
jump 715 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
set @counter :tryPlaceGenerator*retaddr
op add *tmp427 :tryPlaceGenerator:centerX 0.5
op add .water2X *tmp427 :findPossiblePlacement:x
op add *tmp429 :tryPlaceGenerator:centerY 0.5
op add .water2Y *tmp429 :findPossiblePlacement:y
op add .generatorX *tmp427 :findPossiblePlacement:x
op add *tmp433 :tryPlaceGenerator:centerY 2.5
op add .generatorY *tmp433 :findPossiblePlacement:y
op shl *tmp435 :tryPlaceGenerator:generatorVertical :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp435
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask 1
set :findPossiblePlacement:width 1
set :findPossiblePlacement:height 1
set :findPossiblePlacement*retaddr 730
jump 665 always 0 0
jump 733 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
set @counter :tryPlaceGenerator*retaddr
op add .nodeX :tryPlaceGenerator:centerX :findPossiblePlacement:x
op add .nodeY :tryPlaceGenerator:centerY :findPossiblePlacement:y
op shl *tmp441 1 :findPossiblePlacement*retval
op or :tryPlaceGenerator:terrainMask :tryPlaceGenerator:terrainMask *tmp441
set :findPossiblePlacement:terrainMask :tryPlaceGenerator:terrainMask
set :findPossiblePlacement:placementMask 1
set :findPossiblePlacement:width 1
set :findPossiblePlacement:height 1
set :findPossiblePlacement*retaddr 743
jump 665 always 0 0
jump 746 greaterThanEq :findPossiblePlacement*retval 0
set :tryPlaceGenerator*retval false
set @counter :tryPlaceGenerator*retaddr
op add .panelX :tryPlaceGenerator:centerX :findPossiblePlacement:x
op add .panelY :tryPlaceGenerator:centerY :findPossiblePlacement:y
set :tryPlaceGenerator*retval true
set @counter :tryPlaceGenerator*retaddr
set .panelY -1
set .panelX -1
set .generatorY -1
set .generatorX -1
set .water2Y -1
set .water2X -1
set .water1Y -1
set .water1X -1
set :createTerrainMask:x .drillX
set :createTerrainMask:y .drillY
set :createTerrainMask*retaddr 762
jump 645 always 0 0
op or :layoutThoriumDrillAtLocation:terrainMask :createTerrainMask*retval 7575371776
op or :layoutThoriumDrillAtLocation:cornersMask :layoutThoriumDrillAtLocation:terrainMask 285880598593601
set :layoutThoriumDrillAtLocation:extractorMask 387
set :findPossiblePlacement:terrainMask :layoutThoriumDrillAtLocation:cornersMask
set :findPossiblePlacement:placementMask 387
set :findPossiblePlacement:width 2
set :findPossiblePlacement:height 2
set :findPossiblePlacement*retaddr 771
jump 665 always 0 0
jump 778 lessThan :findPossiblePlacement*retval 0
op add *tmp485 .drillX 0.5
op add .water1X *tmp485 :findPossiblePlacement:x
op add *tmp487 .drillY 0.5
op add .water1Y *tmp487 :findPossiblePlacement:y
op shl :layoutThoriumDrillAtLocation:extractorMask :layoutThoriumDrillAtLocation:extractorMask :findPossiblePlacement*retval
op or :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:terrainMask :layoutThoriumDrillAtLocation:extractorMask
set :layoutThoriumDrillAtLocation:generatorHorizontal 1935
set :layoutThoriumDrillAtLocation:generatorVertical 6340995
set :tryPlaceGenerator:centerX .drillX
set :tryPlaceGenerator:centerY .drillY
set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:terrainMask
set :tryPlaceGenerator:generatorHorizontal 1935
set :tryPlaceGenerator:generatorVertical 6340995
set :tryPlaceGenerator*retaddr 787
jump 689 always 0 0
jump 790 equal :tryPlaceGenerator*retval false
set :layoutThoriumDrillAtLocation*retval true
set @counter :layoutThoriumDrillAtLocation*retaddr
set :layoutThoriumDrillAtLocation:sx 3
set :layoutThoriumDrillAtLocation:sy 3
set *tmp503 794
jump 805 always 0 0
set :layoutThoriumDrillAtLocation:sx 3
set :layoutThoriumDrillAtLocation:sy -3
set *tmp503 798
jump 805 always 0 0
set :layoutThoriumDrillAtLocation:sx -3
set :layoutThoriumDrillAtLocation:sy 3
set *tmp503 802
jump 805 always 0 0
set :layoutThoriumDrillAtLocation:sx -3
set :layoutThoriumDrillAtLocation:sy -3
set *tmp503 858
op add :layoutThoriumDrillAtLocation:newX .drillX :layoutThoriumDrillAtLocation:sx
op add :layoutThoriumDrillAtLocation:newY .drillY :layoutThoriumDrillAtLocation:sy
set :createTerrainMask:x :layoutThoriumDrillAtLocation:newX
set :createTerrainMask:y :layoutThoriumDrillAtLocation:newY
set :createTerrainMask*retaddr 811
jump 645 always 0 0
op sub *tmp507 0 :layoutThoriumDrillAtLocation:sx
op sub *tmp508 0 :layoutThoriumDrillAtLocation:sy
set :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask
op abs *tmp371 *tmp507 0
op greaterThan *tmp372 *tmp371 6
op abs *tmp373 *tmp508 0
op greaterThan *tmp374 *tmp373 6
op or *tmp375 *tmp372 *tmp374
jump 822 equal *tmp375 false
set :shiftMask*retval 0
jump 844 always 0 0
op mul *tmp377 7 *tmp508
op add :shiftMask:shift *tmp507 *tmp377
jump 829 lessThanEq :shiftMask:shift 0
op shr :shiftMask:clearMask 562949953421311 :shiftMask:shift
op and *tmp382 :layoutThoriumDrillAtLocation:terrainMask :shiftMask:clearMask
op shl :shiftMask:mask *tmp382 :shiftMask:shift
jump 831 always 0 0
op sub *tmp384 0 :shiftMask:shift
op shr :shiftMask:mask :layoutThoriumDrillAtLocation:terrainMask *tmp384
jump 843 equal *tmp507 0
op sub *tmp388 7 *tmp371
op shr :shiftMask:keep 0b1111111 *tmp388
jump 836 lessThanEq *tmp507 0
op shl :shiftMask:keep :shiftMask:keep *tmp388
op shl *tmp394 :shiftMask:keep 7
op or :shiftMask:keep :shiftMask:keep *tmp394
op shl *tmp395 :shiftMask:keep 14
op or :shiftMask:keep :shiftMask:keep *tmp395
op shl *tmp396 :shiftMask:keep 21
op or :shiftMask:keep :shiftMask:keep *tmp396
op and :shiftMask:mask :shiftMask:mask :shiftMask:keep
set :shiftMask*retval :shiftMask:mask
op or :layoutThoriumDrillAtLocation:combinedMask :createTerrainMask*retval :shiftMask*retval
op add *tmp510 .drillX :layoutThoriumDrillAtLocation:sx
op add *tmp511 .drillY :layoutThoriumDrillAtLocation:sy
set :tryPlaceGenerator:centerX *tmp510
set :tryPlaceGenerator:centerY *tmp511
set :tryPlaceGenerator:terrainMask :layoutThoriumDrillAtLocation:combinedMask
set :tryPlaceGenerator:generatorHorizontal :layoutThoriumDrillAtLocation:generatorHorizontal
set :tryPlaceGenerator:generatorVertical :layoutThoriumDrillAtLocation:generatorVertical
set :tryPlaceGenerator*retaddr 854
jump 689 always 0 0
jump 857 equal :tryPlaceGenerator*retval false
set :layoutThoriumDrillAtLocation*retval true
set @counter :layoutThoriumDrillAtLocation*retaddr
set @counter *tmp503
set :layoutThoriumDrillAtLocation*retval true
set @counter :layoutThoriumDrillAtLocation*retaddr
set :findDrillLocationLocal:x :layoutThoriumDrill:x
set :findDrillLocationLocal:y :layoutThoriumDrill:y
set :findDrillLocationLocal:unit :layoutThoriumDrill:unit
set :findDrillLocationLocal:item @thorium
set :findDrillLocationLocal:ore @ore-thorium
set :findDrillLocationLocal:large true
set :findDrillLocationLocal:limit :layoutThoriumDrill:limit
set :findDrillLocationLocal*retaddr 869
jump 128 always 0 0
set .drillX :findDrillLocationLocal:dx
set .drillY :findDrillLocationLocal:dy
jump 874 notEqual :findDrillLocationLocal*retval false
set :layoutThoriumDrill*retval false
jump 877 always 0 0
set :layoutThoriumDrillAtLocation*retaddr 876
jump 750 always 0 0
set :layoutThoriumDrill*retval :layoutThoriumDrillAtLocation*retval
set :layoutThoriumDrill*finished true
jump 63 always 0 0
print "Compiled by Mindcode - github.com/cardillan/mindcode"

