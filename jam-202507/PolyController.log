   220 instructions before optimizations.
     6 instructions eliminated by Temp Variables Elimination (2 iterations).
    40 instructions eliminated by Dead Code Elimination (7 iterations).
     1 instructions eliminated by Jump Normalization (4 iterations).
    19 instructions eliminated by Jump Optimization (4 iterations).
     8 instructions eliminated by Single Step Elimination (5 iterations).
     1 instructions eliminated by Data Flow Optimization (3 iterations).
     1 instructions eliminated by Jump Straightening (4 iterations).
    15 instructions updated by JumpThreading.
     1 instructions eliminated by Unreachable Code Elimination (2 iterations).
    18 instructions eliminated by Print Merging.
   125 instructions after optimizations.

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-20 instructions):
 
    18 op equal *tmp4 .core null
    19 jump *label11 equal *tmp4 false
    20 jump *label10 always
-    * set *tmp5 null
    21 jump *label12 always
    22 label *label11
-    * set *tmp5 null
    23 label *label12
    24 label *label13
    25 jump *label15 equal true false
 
    29 print "Found builder unit."
    30 print "\n"
    31 printflush message1
-    * set *tmp7 null
    32 jump *label17 always
    33 label *label16
    34 op equal *tmp8 .thoriumDrone null
 
    68 label *label28
    69 set *tmp19 *tmp23
    70 label *label26
-    * set *tmp17 *tmp19
    71 jump *label24 always
    72 label *label23
    73 op equal *tmp24 :serviceThoriumDrill:item @thorium
 
   103 label *label32
   104 set *tmp25 *tmp27
   105 label *label30
-    * set *tmp17 *tmp25
   106 label *label24
   107 label *label22
   108 jump *label14 always
-    * set *tmp15 null
   109 jump *label21 always
   110 label *label20
-    * set *tmp15 null
   111 label *label21
   112 sensor *tmp34 @unit @flag
   113 set :backgroundProcess:flag *tmp34
 
   131 label *label40
   132 set *tmp42 null
   133 label *label41
-    * set *tmp39 *tmp42
   134 jump *label39 always
   135 label *label38
-    * set *tmp39 null
   136 label *label39
   137 ulocate ore core true @coal :findOreToMine:x :findOreToMine:y *tmp43 *tmp44
   138 op sub *tmp45 :findOreToMine:x .coreX
 
   144 set .coalX :findOreToMine:x
   145 set .coalY :findOreToMine:y
   146 set .distance :findOreToMine:dist
-    * set *tmp49 .distance
   147 jump *label43 always
   148 label *label42
-    * set *tmp49 null
   149 label *label43
   150 ucontrol approach .coalX .coalY 6
   151 set :findOreToMine:floor null
 
   160 print .coalY
   161 print "\n"
   162 ucontrol flag 2
-    * set *tmp53 null
   163 jump *label45 always
   164 label *label44
   165 op notEqual *tmp54 :findOreToMine:floor null
 
   184 print "\n"
   185 set *tmp55 null
   186 label *label47
-    * set *tmp53 *tmp55
   187 label *label45
   188 label *label37
   189 set *tmp36 null
 
   201 print "    Finished"
   202 print "\n"
   203 ucontrol flag 0
-    * set *tmp60 null
   204 jump *label52 always
   205 label *label51
-    * set *tmp60 null
   206 label *label52
   207 label *label50
   208 set *tmp57 null
 
   214 jump *label54 equal *tmp62 false
   215 print " (dropping)"
   216 ucontrol itemDrop @air 30
-    * set *tmp63 null
   217 jump *label55 always
   218 label *label54
-    * set *tmp63 null
   219 label *label55
   220 print " at "
   221 print .coalX
 
   230 print ", full"
   231 ucontrol approach .coreX .coreY 6
   232 ucontrol flag 1
-    * set *tmp66 null
   233 jump *label57 always
   234 label *label56
-    * set *tmp66 null
   235 label *label57
   236 print "\n"
   237 label *label53
 
   241 label *label36
   242 set *tmp9 *tmp36
   243 label *label19
-    * set *tmp7 *tmp9
   244 label *label17
   245 label *label14
   246 jump *label13 always

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-10 instructions):
 
    35 jump *label18 equal *tmp8 false
    36 set *tmp10 @unit
    37 set .thoriumDrone *tmp10
-    * set *tmp9 *tmp10
    38 jump *label19 always
    39 label *label18
    40 op equal *tmp11 @unit .thoriumDrone
 
    52 ucontrol approach *tmp20 *tmp21 6
    53 ucontrol itemDrop .thoriumGenerator 30
    54 set .onBase false
-    * set *tmp19 .onBase
    55 jump *label26 always
    56 label *label25
    57 ucontrol approach .coreX .coreY 6
 
    64 ucontrol itemDrop .core 30
    65 set *tmp23 null
    66 label *label28
-    * set *tmp19 *tmp23
    67 label *label26
    68 jump *label24 always
    69 label *label23
 
    72 ucontrol approach .coreX .coreY 6
    73 ucontrol itemDrop .core 30
    74 set .onBase true
-    * set *tmp25 .onBase
    75 jump *label30 always
    76 label *label29
    77 op equal *tmp26 :serviceThoriumDrill:item @coal
 
    97 label *label34
    98 set *tmp27 *tmp31
    99 label *label32
-    * set *tmp25 *tmp27
   100 label *label30
   101 label *label24
   102 label *label22
 
   121 print "Holding wrong item."
   122 print "\n"
   123 jump *label37 always
-    * set *tmp42 null
   124 jump *label41 always
   125 label *label40
-    * set *tmp42 null
   126 label *label41
   127 jump *label39 always
   128 label *label38
 
   166 print " "
   167 print "disappeared"
   168 print "\n"
-    * set *tmp55 null
   169 jump *label47 always
   170 label *label46
   171 print "Not close enough to "
 
   174 print " "
   175 print .coalY
   176 print "\n"
-    * set *tmp55 null
   177 label *label47
   178 label *label45
   179 label *label37
 
   230 label *label49
   231 set *tmp36 *tmp57
   232 label *label36
-    * set *tmp9 *tmp36
   233 label *label19
   234 label *label17
   235 label *label14

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-6 instructions):
 
    58 op equal *tmp22 :serviceThoriumDrill:item null
    59 jump *label27 equal *tmp22 false
    60 ucontrol itemTake .core @coal 8
-    * set *tmp23 null
    61 jump *label28 always
    62 label *label27
    63 ucontrol itemDrop .core 30
-    * set *tmp23 null
    64 label *label28
    65 label *label26
    66 jump *label24 always
 
    78 sensor *tmp29 .thoriumGenerator @y
    79 ucontrol approach *tmp28 *tmp29 6
    80 ucontrol itemDrop .thoriumGenerator 30
-    * set *tmp27 null
    81 jump *label32 always
    82 label *label31
    83 op equal *tmp30 :serviceThoriumDrill:item null
 
    92 ucontrol itemDrop @air 30
    93 set *tmp31 null
    94 label *label34
-    * set *tmp27 *tmp31
    95 label *label32
    96 label *label30
    97 label *label24
 
   173 label *label47
   174 label *label45
   175 label *label37
-    * set *tmp36 null
   176 jump *label36 always
   177 label *label35
   178 op equal *tmp56 :backgroundProcess:flag 1
 
   223 label *label53
   224 set *tmp57 null
   225 label *label49
-    * set *tmp36 *tmp57
   226 label *label36
   227 label *label19
   228 label *label17

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
    86 sensor *tmp33 .thoriumContainer @y
    87 ucontrol approach *tmp32 *tmp33 6
    88 ucontrol itemTake .thoriumContainer @thorium 30
-    * set *tmp31 null
    89 jump *label34 always
    90 label *label33
    91 ucontrol itemDrop @air 30
-    * set *tmp31 null
    92 label *label34
    93 label *label32
    94 label *label30
 
   189 label *label51
   190 label *label52
   191 label *label50
-    * set *tmp57 null
   192 jump *label49 always
   193 label *label48
   194 print "Mining"
 
   218 label *label57
   219 print "\n"
   220 label *label53
-    * set *tmp57 null
   221 label *label49
   222 label *label36
   223 label *label19

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-6 instructions):
 
     5 set .onBase true
     6 label *label6
     7 ubind @poly
-    * set *tmp0 @unit
-    * set .builder *tmp0
-    * ulocate building core false @copper .coreX .coreY *tmp2 *tmp1
-    * set .core *tmp1
+    8 set .builder @unit
+    9 ulocate building core false @copper .coreX .coreY 0 .core
    10 label *label7
    11 op equal *tmp3 .core null
    12 jump *label6 notEqual *tmp3 false
 
    31 label *label16
    32 op equal *tmp8 .thoriumDrone null
    33 jump *label18 equal *tmp8 false
-    * set *tmp10 @unit
-    * set .thoriumDrone *tmp10
+   34 set .thoriumDrone @unit
    35 jump *label19 always
    36 label *label18
    37 op equal *tmp11 @unit .thoriumDrone
 
    39 op greaterThan *tmp13 *tmp12 100
    40 op land *tmp14 *tmp11 *tmp13
    41 jump *label20 equal *tmp14 false
-    * sensor *tmp16 @unit @firstItem
-    * set :serviceThoriumDrill:item *tmp16
+   42 sensor :serviceThoriumDrill:item @unit @firstItem
    43 jump *label23 equal .onBase false
    44 op equal *tmp18 :serviceThoriumDrill:item @coal
    45 jump *label25 equal *tmp18 false
 
    94 jump *label21 always
    95 label *label20
    96 label *label21
-    * sensor *tmp34 @unit @flag
-    * set :backgroundProcess:flag *tmp34
+   97 sensor :backgroundProcess:flag @unit @flag
    98 print "Unit flag: "
    99 print :backgroundProcess:flag
   100 print "\n"
 
   116 jump *label39 always
   117 label *label38
   118 label *label39
-    * ulocate ore core true @coal :findOreToMine:x :findOreToMine:y *tmp43 *tmp44
+  119 ulocate ore core true @coal :findOreToMine:x :findOreToMine:y 0 0
   120 op sub *tmp45 :findOreToMine:x .coreX
   121 op sub *tmp46 :findOreToMine:y .coreY
-    * op len *tmp47 *tmp45 *tmp46
-    * set :findOreToMine:dist *tmp47
+  122 op len :findOreToMine:dist *tmp45 *tmp46
   123 op lessThan *tmp48 :findOreToMine:dist .distance
   124 jump *label42 equal *tmp48 false
   125 set .coalX :findOreToMine:x
 
   130 label *label43
   131 ucontrol approach .coalX .coalY 6
   132 set :findOreToMine:floor null
-    * ucontrol getBlock .coalX .coalY *tmp51 *tmp50 :findOreToMine:floor
+  133 ucontrol getBlock .coalX .coalY 0 0 :findOreToMine:floor
   134 op equal *tmp52 :findOreToMine:floor @ore-coal
   135 jump *label44 equal *tmp52 false
   136 ucontrol mine :findOreToMine:x :findOreToMine:y

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    20 label *label11
    21 label *label12
    22 label *label13
-    * jump *label15 equal true false
    23 ubind @poly
    24 op equal *tmp6 @unit .builder
    25 jump *label16 equal *tmp6 false

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-19 instructions):
 
     8 set .builder @unit
     9 ulocate building core false @copper .coreX .coreY 0 .core
    10 label *label7
-    * op equal *tmp3 .core null
-    * jump *label6 notEqual *tmp3 false
+   11 jump *label6 equal .core null
    12 label *label8
    13 set *signature "0:v1"
    14 label *label9
-    * op equal *tmp4 .core null
-    * jump *label11 equal *tmp4 false
+   15 jump *label11 notEqual .core null
    16 jump *label10 always
    17 jump *label12 always
    18 label *label11
    19 label *label12
    20 label *label13
    21 ubind @poly
-    * op equal *tmp6 @unit .builder
-    * jump *label16 equal *tmp6 false
+   22 jump *label16 notEqual @unit .builder
    23 print "Found builder unit."
    24 print "\n"
    25 printflush message1
    26 jump *label17 always
    27 label *label16
-    * op equal *tmp8 .thoriumDrone null
-    * jump *label18 equal *tmp8 false
+   28 jump *label18 notEqual .thoriumDrone null
    29 set .thoriumDrone @unit
    30 jump *label19 always
    31 label *label18
 
    36 jump *label20 equal *tmp14 false
    37 sensor :serviceThoriumDrill:item @unit @firstItem
    38 jump *label23 equal .onBase false
-    * op equal *tmp18 :serviceThoriumDrill:item @coal
-    * jump *label25 equal *tmp18 false
+   39 jump *label25 notEqual :serviceThoriumDrill:item @coal
    40 sensor *tmp20 .thoriumGenerator @x
    41 sensor *tmp21 .thoriumGenerator @y
    42 ucontrol approach *tmp20 *tmp21 6
 
    45 jump *label26 always
    46 label *label25
    47 ucontrol approach .coreX .coreY 6
-    * op equal *tmp22 :serviceThoriumDrill:item null
-    * jump *label27 equal *tmp22 false
+   48 jump *label27 notEqual :serviceThoriumDrill:item null
    49 ucontrol itemTake .core @coal 8
    50 jump *label28 always
    51 label *label27
 
    54 label *label26
    55 jump *label24 always
    56 label *label23
-    * op equal *tmp24 :serviceThoriumDrill:item @thorium
-    * jump *label29 equal *tmp24 false
+   57 jump *label29 notEqual :serviceThoriumDrill:item @thorium
    58 ucontrol approach .coreX .coreY 6
    59 ucontrol itemDrop .core 30
    60 set .onBase true
    61 jump *label30 always
    62 label *label29
-    * op equal *tmp26 :serviceThoriumDrill:item @coal
-    * jump *label31 equal *tmp26 false
+   63 jump *label31 notEqual :serviceThoriumDrill:item @coal
    64 sensor *tmp28 .thoriumGenerator @x
    65 sensor *tmp29 .thoriumGenerator @y
    66 ucontrol approach *tmp28 *tmp29 6
    67 ucontrol itemDrop .thoriumGenerator 30
    68 jump *label32 always
    69 label *label31
-    * op equal *tmp30 :serviceThoriumDrill:item null
-    * jump *label33 equal *tmp30 false
+   70 jump *label33 notEqual :serviceThoriumDrill:item null
    71 sensor *tmp32 .thoriumContainer @x
    72 sensor *tmp33 .thoriumContainer @y
    73 ucontrol approach *tmp32 *tmp33 6
 
    88 print "Unit flag: "
    89 print :backgroundProcess:flag
    90 print "\n"
-    * op equal *tmp35 :backgroundProcess:flag 0
-    * jump *label35 equal *tmp35 false
+   91 jump *label35 notEqual :backgroundProcess:flag 0
    92 sensor *tmp37 @unit @firstItem
-    * op notEqual *tmp38 *tmp37 null
-    * jump *label38 equal *tmp38 false
+   93 jump *label38 equal *tmp37 null
    94 ucontrol itemDrop @air 30
    95 sensor *tmp40 @unit @firstItem
-    * op notEqual *tmp41 *tmp40 null
-    * jump *label40 equal *tmp41 false
+   96 jump *label40 equal *tmp40 null
    97 print "Holding wrong item."
    98 print "\n"
    99 jump *label37 always
 
   107 op sub *tmp45 :findOreToMine:x .coreX
   108 op sub *tmp46 :findOreToMine:y .coreY
   109 op len :findOreToMine:dist *tmp45 *tmp46
-    * op lessThan *tmp48 :findOreToMine:dist .distance
-    * jump *label42 equal *tmp48 false
+  110 jump *label42 greaterThanEq :findOreToMine:dist .distance
   111 set .coalX :findOreToMine:x
   112 set .coalY :findOreToMine:y
   113 set .distance :findOreToMine:dist
 
   117 ucontrol approach .coalX .coalY 6
   118 set :findOreToMine:floor null
   119 ucontrol getBlock .coalX .coalY 0 0 :findOreToMine:floor
-    * op equal *tmp52 :findOreToMine:floor @ore-coal
-    * jump *label44 equal *tmp52 false
+  120 jump *label44 notEqual :findOreToMine:floor @ore-coal
   121 ucontrol mine :findOreToMine:x :findOreToMine:y
   122 print "Found coal at "
   123 print .coalX
 
   128 ucontrol flag 2
   129 jump *label45 always
   130 label *label44
-    * op notEqual *tmp54 :findOreToMine:floor null
-    * jump *label46 equal *tmp54 false
+  131 jump *label46 equal :findOreToMine:floor null
   132 set .distance 1000000000
   133 print "Coal at "
   134 print .coalX
 
   151 label *label37
   152 jump *label36 always
   153 label *label35
-    * op equal *tmp56 :backgroundProcess:flag 1
-    * jump *label48 equal *tmp56 false
+  154 jump *label48 notEqual :backgroundProcess:flag 1
   155 print "Returning"
   156 print "\n"
   157 ucontrol approach .coreX .coreY 6
   158 ucontrol itemDrop .core 30
   159 sensor *tmp58 @unit @firstItem
-    * op equal *tmp59 *tmp58 null
-    * jump *label51 equal *tmp59 false
+  160 jump *label51 notEqual *tmp58 null
   161 print "    Finished"
   162 print "\n"
   163 ucontrol flag 0
 
   169 label *label48
   170 print "Mining"
   171 sensor *tmp61 @unit @firstItem
-    * op notEqual *tmp62 *tmp61 @coal
-    * jump *label54 equal *tmp62 false
+  172 jump *label54 equal *tmp61 @coal
   173 print " (dropping)"
   174 ucontrol itemDrop @air 30
   175 jump *label55 always
 
   183 ucontrol approach .coalX .coalY 6
   184 ucontrol mine .coalX .coalY
   185 sensor *tmp64 @unit @totalItems
-    * op greaterThanEq *tmp65 *tmp64 30
-    * jump *label56 equal *tmp65 false
+  186 jump *label56 lessThan *tmp64 30
   187 print ", full"
   188 ucontrol approach .coreX .coreY 6
   189 ucontrol flag 1

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-8 instructions):
 
    14 label *label9
    15 jump *label11 notEqual .core null
    16 jump *label10 always
-    * jump *label12 always
    17 label *label11
    18 label *label12
    19 label *label13
 
    80 label *label24
    81 label *label22
    82 jump *label14 always
-    * jump *label21 always
    83 label *label20
    84 label *label21
    85 sensor :backgroundProcess:flag @unit @flag
 
    95 print "Holding wrong item."
    96 print "\n"
    97 jump *label37 always
-    * jump *label41 always
    98 label *label40
    99 label *label41
-    * jump *label39 always
   100 label *label38
   101 label *label39
   102 ulocate ore core true @coal :findOreToMine:x :findOreToMine:y 0 0
 
   107 set .coalX :findOreToMine:x
   108 set .coalY :findOreToMine:y
   109 set .distance :findOreToMine:dist
-    * jump *label43 always
   110 label *label42
   111 label *label43
   112 ucontrol approach .coalX .coalY 6
 
   156 print "    Finished"
   157 print "\n"
   158 ucontrol flag 0
-    * jump *label52 always
   159 label *label51
   160 label *label52
   161 label *label50
 
   166 jump *label54 equal *tmp61 @coal
   167 print " (dropping)"
   168 ucontrol itemDrop @air 30
-    * jump *label55 always
   169 label *label54
   170 label *label55
   171 print " at "
 
   180 print ", full"
   181 ucontrol approach .coreX .coreY 6
   182 ucontrol flag 1
-    * jump *label57 always
   183 label *label56
   184 label *label57
   185 print "\n"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   110 label *label42
   111 label *label43
   112 ucontrol approach .coalX .coalY 6
-    * set :findOreToMine:floor null
   113 ucontrol getBlock .coalX .coalY 0 0 :findOreToMine:floor
   114 jump *label44 notEqual :findOreToMine:floor @ore-coal
   115 ucontrol mine :findOreToMine:x :findOreToMine:y

Modifications by Jumps phase, Jump Normalization, pass 3, iteration 1:
 
     7 ubind @poly
     8 set .builder @unit
     9 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label7
    10 jump *label6 equal .core null
-    * label *label8
    11 set *signature "0:v1"
    12 label *label9
    13 jump *label11 notEqual .core null
    14 jump *label10 always
    15 label *label11
-    * label *label12
    16 label *label13
    17 ubind @poly
    18 jump *label16 notEqual @unit .builder
 
    75 label *label32
    76 label *label30
    77 label *label24
-    * label *label22
    78 jump *label14 always
    79 label *label20
-    * label *label21
    80 sensor :backgroundProcess:flag @unit @flag
    81 print "Unit flag: "
    82 print :backgroundProcess:flag
 
    91 print "\n"
    92 jump *label37 always
    93 label *label40
-    * label *label41
    94 label *label38
-    * label *label39
    95 ulocate ore core true @coal :findOreToMine:x :findOreToMine:y 0 0
    96 op sub *tmp45 :findOreToMine:x .coreX
    97 op sub *tmp46 :findOreToMine:y .coreY
 
   101 set .coalY :findOreToMine:y
   102 set .distance :findOreToMine:dist
   103 label *label42
-    * label *label43
   104 ucontrol approach .coalX .coalY 6
   105 ucontrol getBlock .coalX .coalY 0 0 :findOreToMine:floor
   106 jump *label44 notEqual :findOreToMine:floor @ore-coal
 
   148 print "\n"
   149 ucontrol flag 0
   150 label *label51
-    * label *label52
-    * label *label50
   151 jump *label49 always
   152 label *label48
   153 print "Mining"
 
   156 print " (dropping)"
   157 ucontrol itemDrop @air 30
   158 label *label54
-    * label *label55
   159 print " at "
   160 print .coalX
   161 print ","
 
   169 ucontrol approach .coreX .coreY 6
   170 ucontrol flag 1
   171 label *label56
-    * label *label57
   172 print "\n"
-    * label *label53
   173 label *label49
   174 label *label36
   175 label *label19
   176 label *label17
   177 label *label14
   178 jump *label13 always
-    * label *label15
   179 label *label10
   180 wait 1e12
   181 jump *label9 always

Modifications by Jumps phase, Jump Straightening, pass 3, iteration 1 (-1 instructions):
 
    10 jump *label6 equal .core null
    11 set *signature "0:v1"
    12 label *label9
-    * jump *label11 notEqual .core null
-    * jump *label10 always
+   13 jump *label10 equal .core null
    14 label *label11
    15 label *label13
    16 ubind @poly

Modifications by Jumps phase, Jump Optimization, pass 3, iteration 1:
 
    11 set *signature "0:v1"
    12 label *label9
    13 jump *label10 equal .core null
-    * label *label11
    14 label *label13
    15 ubind @poly
    16 jump *label16 notEqual @unit .builder

Modifications by Jumps phase, Jump Threading, pass 3, iteration 1:
 
    17 print "Found builder unit."
    18 print "\n"
    19 printflush message1
-    * jump *label17 always
+   20 jump *label13 always
    21 label *label16
    22 jump *label18 notEqual .thoriumDrone null
    23 set .thoriumDrone @unit
-    * jump *label19 always
+   24 jump *label13 always
    25 label *label18
    26 op equal *tmp11 @unit .thoriumDrone
    27 sensor *tmp12 .thoriumContainer @thorium
 
    36 ucontrol approach *tmp20 *tmp21 6
    37 ucontrol itemDrop .thoriumGenerator 30
    38 set .onBase false
-    * jump *label26 always
+   39 jump *label13 always
    40 label *label25
    41 ucontrol approach .coreX .coreY 6
    42 jump *label27 notEqual :serviceThoriumDrill:item null
    43 ucontrol itemTake .core @coal 8
-    * jump *label28 always
+   44 jump *label13 always
    45 label *label27
    46 ucontrol itemDrop .core 30
    47 label *label28
    48 label *label26
-    * jump *label24 always
+   49 jump *label13 always
    50 label *label23
    51 jump *label29 notEqual :serviceThoriumDrill:item @thorium
    52 ucontrol approach .coreX .coreY 6
    53 ucontrol itemDrop .core 30
    54 set .onBase true
-    * jump *label30 always
+   55 jump *label13 always
    56 label *label29
    57 jump *label31 notEqual :serviceThoriumDrill:item @coal
    58 sensor *tmp28 .thoriumGenerator @x
    59 sensor *tmp29 .thoriumGenerator @y
    60 ucontrol approach *tmp28 *tmp29 6
    61 ucontrol itemDrop .thoriumGenerator 30
-    * jump *label32 always
+   62 jump *label13 always
    63 label *label31
    64 jump *label33 notEqual :serviceThoriumDrill:item null
    65 sensor *tmp32 .thoriumContainer @x
    66 sensor *tmp33 .thoriumContainer @y
    67 ucontrol approach *tmp32 *tmp33 6
    68 ucontrol itemTake .thoriumContainer @thorium 30
-    * jump *label34 always
+   69 jump *label13 always
    70 label *label33
    71 ucontrol itemDrop @air 30
    72 label *label34
    73 label *label32
    74 label *label30
    75 label *label24
-    * jump *label14 always
+   76 jump *label13 always
    77 label *label20
    78 sensor :backgroundProcess:flag @unit @flag
    79 print "Unit flag: "
 
    87 jump *label40 equal *tmp40 null
    88 print "Holding wrong item."
    89 print "\n"
-    * jump *label37 always
+   90 jump *label13 always
    91 label *label40
    92 label *label38
    93 ulocate ore core true @coal :findOreToMine:x :findOreToMine:y 0 0
 
   110 print .coalY
   111 print "\n"
   112 ucontrol flag 2
-    * jump *label45 always
+  113 jump *label13 always
   114 label *label44
   115 jump *label46 equal :findOreToMine:floor null
   116 set .distance 1000000000
 
   122 print " "
   123 print "disappeared"
   124 print "\n"
-    * jump *label47 always
+  125 jump *label13 always
   126 label *label46
   127 print "Not close enough to "
   128 print .coalX
 
   133 label *label47
   134 label *label45
   135 label *label37
-    * jump *label36 always
+  136 jump *label13 always
   137 label *label35
   138 jump *label48 notEqual :backgroundProcess:flag 1
   139 print "Returning"
 
   141 ucontrol approach .coreX .coreY 6
   142 ucontrol itemDrop .core 30
   143 sensor *tmp58 @unit @firstItem
-    * jump *label51 notEqual *tmp58 null
+  144 jump *label13 notEqual *tmp58 null
   145 print "    Finished"
   146 print "\n"
   147 ucontrol flag 0
   148 label *label51
-    * jump *label49 always
+  149 jump *label13 always
   150 label *label48
   151 print "Mining"
   152 sensor *tmp61 @unit @firstItem

Modifications by Jumps phase, Unreachable Code Elimination, pass 3, iteration 1 (-1 instructions):
 
    44 jump *label13 always
    45 label *label27
    46 ucontrol itemDrop .core 30
-    * label *label28
-    * label *label26
    47 jump *label13 always
    48 label *label23
    49 jump *label29 notEqual :serviceThoriumDrill:item @thorium
 
    67 jump *label13 always
    68 label *label33
    69 ucontrol itemDrop @air 30
-    * label *label34
-    * label *label32
-    * label *label30
-    * label *label24
    70 jump *label13 always
    71 label *label20
    72 sensor :backgroundProcess:flag @unit @flag
 
   124 print " "
   125 print .coalY
   126 print "\n"
-    * label *label47
-    * label *label45
-    * label *label37
   127 jump *label13 always
   128 label *label35
   129 jump *label48 notEqual :backgroundProcess:flag 1
 
   136 print "    Finished"
   137 print "\n"
   138 ucontrol flag 0
-    * label *label51
   139 jump *label13 always
   140 label *label48
   141 print "Mining"
 
   158 ucontrol flag 1
   159 label *label56
   160 print "\n"
-    * label *label49
-    * label *label36
-    * label *label19
-    * label *label17
-    * label *label14
   161 jump *label13 always
   162 label *label10
   163 wait 1e12
   164 jump *label9 always
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-18 instructions):
 
    14 label *label13
    15 ubind @poly
    16 jump *label16 notEqual @unit .builder
-    * print "Found builder unit."
-    * print "\n"
+   17 print "Found builder unit.\n"
    18 printflush message1
    19 jump *label13 always
    20 label *label16
 
    69 jump *label13 always
    70 label *label20
    71 sensor :backgroundProcess:flag @unit @flag
-    * print "Unit flag: "
-    * print :backgroundProcess:flag
-    * print "\n"
+   72 print "Unit flag: {0}\n"
+   73 format :backgroundProcess:flag
    74 jump *label35 notEqual :backgroundProcess:flag 0
    75 sensor *tmp37 @unit @firstItem
    76 jump *label38 equal *tmp37 null
    77 ucontrol itemDrop @air 30
    78 sensor *tmp40 @unit @firstItem
    79 jump *label40 equal *tmp40 null
-    * print "Holding wrong item."
-    * print "\n"
+   80 print "Holding wrong item.\n"
    81 jump *label13 always
    82 label *label40
    83 label *label38
 
    94 ucontrol getBlock .coalX .coalY 0 0 :findOreToMine:floor
    95 jump *label44 notEqual :findOreToMine:floor @ore-coal
    96 ucontrol mine :findOreToMine:x :findOreToMine:y
-    * print "Found coal at "
-    * print .coalX
-    * print ","
-    * print " "
-    * print .coalY
-    * print "\n"
+   97 print "Found coal at {0}, {0}\n"
+   98 format .coalX
+   99 format .coalY
   100 ucontrol flag 2
   101 jump *label13 always
   102 label *label44
   103 jump *label46 equal :findOreToMine:floor null
   104 set .distance 1000000000
-    * print "Coal at "
-    * print .coalX
-    * print ","
-    * print " "
-    * print .coalY
-    * print " "
-    * print "disappeared"
-    * print "\n"
+  105 print "Coal at {0}, {0} disappeared\n"
+  106 format .coalX
+  107 format .coalY
   108 jump *label13 always
   109 label *label46
-    * print "Not close enough to "
-    * print .coalX
-    * print ","
-    * print " "
-    * print .coalY
-    * print "\n"
+  110 print "Not close enough to {0}, {0}\n"
+  111 format .coalX
+  112 format .coalY
   113 jump *label13 always
   114 label *label35
   115 jump *label48 notEqual :backgroundProcess:flag 1
-    * print "Returning"
-    * print "\n"
+  116 print "Returning\n"
   117 ucontrol approach .coreX .coreY 6
   118 ucontrol itemDrop .core 30
   119 sensor *tmp58 @unit @firstItem
   120 jump *label13 notEqual *tmp58 null
-    * print "    Finished"
-    * print "\n"
+  121 print "    Finished\n"
   122 ucontrol flag 0
   123 jump *label13 always
   124 label *label48
 
   128 print " (dropping)"
   129 ucontrol itemDrop @air 30
   130 label *label54
-    * print " at "
-    * print .coalX
-    * print ","
-    * print " "
+  131 print " at {0}, "
+  132 format .coalX
   133 print .coalY
   134 ucontrol approach .coalX .coalY 6
   135 ucontrol mine .coalX .coalY

Final code before resolving virtual instructions:

    0:  jump *label58 always 0 0
    1:  draw triangle message1 .builder .coalX .coalY .core .coreX
    2:  draw triangle .coreY .distance .onBase .thoriumContainer .thoriumDrone .thoriumGenerator
    3:  draw triangle :backgroundProcess:flag :findOreToMine:dist :findOreToMine:floor :findOreToMine:x :findOreToMine:y :serviceThoriumDrill:item
        label *label58
    4:  set .thoriumContainer null                                   remote var
    5:  set .thoriumGenerator null                                   ...
    6:  set .coalX 0                                                 var
    7:  set .coalY 0                                                 ...
    8:  set .distance 1000000000                                     ...
    9:  set .onBase true                                             var onBase = true;
        label *label6                                                do
   10:  ubind @poly                                                  builder = ubind(@poly);
   11:  set .builder @unit                                           ...
   12:  ulocate building core false @copper .coreX .coreY 0 .core    core = ulocate(:building, :core, false, out coreX, out coreY);
   13:  jump *label6 equal .core null                                do
   14:  set *signature "0:v1"                                        #set target = 8;
        label *label9                                                ...
   15:  jump *label10 equal .core null                               if core == null then return; end;
        label *label13                                               while true do
   16:  ubind @poly                                                  ubind(@poly);
   17:  jump *label16 notEqual @unit .builder                        if @unit == builder then
   18:  print "Found builder unit.\n"                                println("Found builder unit.");
   19:  printflush message1                                          printflush(message1);
   20:  jump *label13 always 0 0                                     if @unit == builder then
        label *label16                                               ...
   21:  jump *label18 notEqual .thoriumDrone null                    elsif thoriumDrone == null then
   22:  set .thoriumDrone @unit                                      thoriumDrone = @unit;
   23:  jump *label13 always 0 0                                     elsif thoriumDrone == null then
        label *label18                                               ...
   24:  op equal *tmp11 @unit .thoriumDrone                          if @unit == thoriumDrone and thoriumContainer.@thorium > 100 then
   25:  sensor *tmp12 .thoriumContainer @thorium                     ...
   26:  op greaterThan *tmp13 *tmp12 100                             ...
   27:  op land *tmp14 *tmp11 *tmp13                                 ...
   28:  jump *label20 equal *tmp14 false                             ...
   29:  sensor :serviceThoriumDrill:item @unit @firstItem            var item = @unit.@firstItem;
   30:  jump *label23 equal .onBase false                            if onBase then
   31:  jump *label25 notEqual :serviceThoriumDrill:item @coal       if item == @coal then
   32:  sensor *tmp20 .thoriumGenerator @x                           approach(thoriumGenerator.@x, thoriumGenerator.@y, RADIUS);
   33:  sensor *tmp21 .thoriumGenerator @y                           ...
   34:  ucontrol approach *tmp20 *tmp21 6 0 0                        ...
   35:  ucontrol itemDrop .thoriumGenerator 30 0 0 0                 itemDrop(thoriumGenerator, CAPACITY);
   36:  set .onBase false                                            onBase = false;
   37:  jump *label13 always 0 0                                     if item == @coal then
        label *label25                                               ...
   38:  ucontrol approach .coreX .coreY 6 0 0                        approach(coreX, coreY, RADIUS);
   39:  jump *label27 notEqual :serviceThoriumDrill:item null        if item == null then
   40:  ucontrol itemTake .core @coal 8 0 0                          itemTake(core, @coal, 8);
   41:  jump *label13 always 0 0                                     if item == null then
        label *label27                                               ...
   42:  ucontrol itemDrop .core 30 0 0 0                             itemDrop(core, CAPACITY);
   43:  jump *label13 always 0 0                                     if onBase then
        label *label23                                               ...
   44:  jump *label29 notEqual :serviceThoriumDrill:item @thorium    if item == @thorium then
   45:  ucontrol approach .coreX .coreY 6 0 0                        approach(coreX, coreY, RADIUS);
   46:  ucontrol itemDrop .core 30 0 0 0                             itemDrop(core, CAPACITY);
   47:  set .onBase true                                             onBase = true;
   48:  jump *label13 always 0 0                                     if item == @thorium then
        label *label29                                               ...
   49:  jump *label31 notEqual :serviceThoriumDrill:item @coal       elsif item == @coal then
   50:  sensor *tmp28 .thoriumGenerator @x                           approach(thoriumGenerator.@x, thoriumGenerator.@y, RADIUS);
   51:  sensor *tmp29 .thoriumGenerator @y                           ...
   52:  ucontrol approach *tmp28 *tmp29 6 0 0                        ...
   53:  ucontrol itemDrop .thoriumGenerator 30 0 0 0                 itemDrop(thoriumGenerator, CAPACITY);
   54:  jump *label13 always 0 0                                     elsif item == @coal then
        label *label31                                               ...
   55:  jump *label33 notEqual :serviceThoriumDrill:item null        elsif item == null then
   56:  sensor *tmp32 .thoriumContainer @x                           approach(thoriumContainer.@x, thoriumContainer.@y, RADIUS);
   57:  sensor *tmp33 .thoriumContainer @y                           ...
   58:  ucontrol approach *tmp32 *tmp33 6 0 0                        ...
   59:  ucontrol itemTake .thoriumContainer @thorium 30 0 0          itemTake(thoriumContainer, @thorium, CAPACITY);
   60:  jump *label13 always 0 0                                     elsif item == null then
        label *label33                                               ...
   61:  ucontrol itemDrop @air 30 0 0 0                              itemDrop(@air, CAPACITY);
   62:  jump *label13 always 0 0                                     continue;
        label *label20                                               if @unit == thoriumDrone and thoriumContainer.@thorium > 100 then
   63:  sensor :backgroundProcess:flag @unit @flag                   var flag = @unit.@flag;
   64:  print "Unit flag: {0}\n"                                     println("Unit flag: ", flag);
   65:  format :backgroundProcess:flag                               ...
   66:  jump *label35 notEqual :backgroundProcess:flag 0             if flag == 0 then
   67:  sensor *tmp37 @unit @firstItem                               if @unit.@firstItem != null then
   68:  jump *label38 equal *tmp37 null                              ...
   69:  ucontrol itemDrop @air 30 0 0 0                              itemDrop(@air, CAPACITY);
   70:  sensor *tmp40 @unit @firstItem                               if @unit.@firstItem != null then
   71:  jump *label40 equal *tmp40 null                              ...
   72:  print "Holding wrong item.\n"                                println($"Holding wrong item.");
   73:  jump *label13 always 0 0                                     return;
        label *label40                                               if @unit.@firstItem != null then
        label *label38                                               if @unit.@firstItem != null then
   74:  ulocate ore core true @coal :findOreToMine:x :findOreToMine: ulocate(:ore, @coal, out x, out y);
   75:  op sub *tmp45 :findOreToMine:x .coreX                        var dist = len(x - coreX, y - coreY);
   76:  op sub *tmp46 :findOreToMine:y .coreY                        ...
   77:  op len :findOreToMine:dist *tmp45 *tmp46                     ...
   78:  jump *label42 greaterThanEq :findOreToMine:dist .distance    if dist < distance then
   79:  set .coalX :findOreToMine:x                                  coalX = x;
   80:  set .coalY :findOreToMine:y                                  coalY = y;
   81:  set .distance :findOreToMine:dist                            distance = dist;
        label *label42                                               if dist < distance then
   82:  ucontrol approach .coalX .coalY 6 0 0                        approach(coalX, coalY, RADIUS);
   83:  ucontrol getBlock .coalX .coalY 0 0 :findOreToMine:floor     getBlock(coalX, coalY, , out floor);
   84:  jump *label44 notEqual :findOreToMine:floor @ore-coal        if floor == @ore-coal then
   85:  ucontrol mine :findOreToMine:x :findOreToMine:y 0 0 0        mine(x, y);
   86:  print "Found coal at {0}, {0}\n"                             println($"Found coal at $coalX, $coalY");
   87:  format .coalX                                                ...
   88:  format .coalY                                                ...
   89:  ucontrol flag 2 0 0 0 0                                      flag(2);
   90:  jump *label13 always 0 0                                     if floor == @ore-coal then
        label *label44                                               ...
   91:  jump *label46 equal :findOreToMine:floor null                elsif floor != null
   92:  set .distance 1000000000                                     then distance = 1e9;
   93:  print "Coal at {0}, {0} disappeared\n"                       println($"Coal at $coalX, $coalY disappeared");
   94:  format .coalX                                                ...
   95:  format .coalY                                                ...
   96:  jump *label13 always 0 0                                     elsif floor != null
        label *label46                                               ...
   97:  print "Not close enough to {0}, {0}\n"                       println($"Not close enough to $coalX, $coalY");
   98:  format .coalX                                                ...
   99:  format .coalY                                                ...
  100:  jump *label13 always 0 0                                     if flag == 0 then
        label *label35                                               ...
  101:  jump *label48 notEqual :backgroundProcess:flag 1             elsif flag == 1 then
  102:  print "Returning\n"                                          println("Returning");
  103:  ucontrol approach .coreX .coreY 6 0 0                        approach(coreX, coreY, RADIUS);
  104:  ucontrol itemDrop .core 30 0 0 0                             itemDrop(core, CAPACITY);
  105:  sensor *tmp58 @unit @firstItem                               if @unit.@firstItem == null then
  106:  jump *label13 notEqual *tmp58 null                           ...
  107:  print "    Finished\n"                                       println("    Finished");
  108:  ucontrol flag 0 0 0 0 0                                      flag(0);
  109:  jump *label13 always 0 0                                     elsif flag == 1 then
        label *label48                                               ...
  110:  print "Mining"                                               print("Mining");
  111:  sensor *tmp61 @unit @firstItem                               if @unit.@firstItem != @coal then
  112:  jump *label54 equal *tmp61 @coal                             ...
  113:  print " (dropping)"                                          print(" (dropping)");
  114:  ucontrol itemDrop @air 30 0 0 0                              itemDrop(@air, CAPACITY);
        label *label54                                               if @unit.@firstItem != @coal then
  115:  print " at {0}, "                                            print($" at $coalX, $coalY");
  116:  format .coalX                                                ...
  117:  print .coalY                                                 ...
  118:  ucontrol approach .coalX .coalY 6 0 0                        approach(coalX, coalY, RADIUS);
  119:  ucontrol mine .coalX .coalY 0 0 0                            mine(coalX, coalY);
  120:  sensor *tmp64 @unit @totalItems                              if @unit.@totalItems >= CAPACITY then
  121:  jump *label56 lessThan *tmp64 30                             ...
  122:  print ", full"                                               print(", full");
  123:  ucontrol approach .coreX .coreY 6 0 0                        approach(coreX, coreY, RADIUS);
  124:  ucontrol flag 1 0 0 0 0                                      flag(1);
        label *label56                                               if @unit.@totalItems >= CAPACITY then
  125:  print "\n"                                                   println();
  126:  jump *label13 always 0 0                                     while true do
        label *label10                                               #set target = 8;
  127:  wait 1e12                                                    ...
  128:  jump *label9 always 0 0                                      ...


Performance: parsed in 264 ms, compiled in 319 ms, optimized in 212 ms, run in 6 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (8 steps):
The program didn't generate any output.
Execution exception at instruction 10: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
