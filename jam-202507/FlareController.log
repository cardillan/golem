   372 instructions before optimizations.
    15 instructions eliminated by Temp Variables Elimination (2 iterations).
    34 instructions eliminated by Dead Code Elimination (6 iterations).
C:\Home\golem\jam-202507\FlareController.mnd:97:13 Variable 'backgroundProcess.index' is not used.
     1 instructions eliminated by Jump Normalization (6 iterations).
    16 instructions eliminated by Jump Optimization (6 iterations).
    32 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
     2 instructions modified by Expression Optimization (4 iterations).
    12 instructions eliminated by Data Flow Optimization (2 passes, 9 iterations).
   673 instructions added by Loop Unrolling (5 iterations).
     1 loops unrolled by Loop Unrolling.
    10 instructions eliminated by Jump Straightening (6 iterations).
    20 instructions updated by JumpThreading.
    14 instructions eliminated by Unreachable Code Elimination (2 iterations).
   911 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 718):
  * Unroll iteration loop at line 98:9                           size  +681, benefit     2225.0, efficiency      3.267 (+673 instructions)
    Inline write jump table of array 'drills'                    size  +227, benefit        4.0, efficiency      0.018
    Inline 'drills' write access at line 36:9                    size   +77, benefit        1.0, efficiency      0.013
    Inline 'drills' write access at line 37:9                    size   +77, benefit        1.0, efficiency      0.013
    Inline 'drills' write access at line 38:9                    size   +77, benefit        1.0, efficiency      0.013
    Inline 'drills' write access at line 39:9                    size   +77, benefit        1.0, efficiency      0.013

Pass 1: speed optimization selection (cost limit 45):
  ! Inline write jump table of array 'drills'                    size  +227, benefit        4.0, efficiency      0.018
  ! Inline 'drills' write access at line 36:9                    size   +77, benefit        1.0, efficiency      0.013
  ! Inline 'drills' write access at line 37:9                    size   +77, benefit        1.0, efficiency      0.013
  ! Inline 'drills' write access at line 38:9                    size   +77, benefit        1.0, efficiency      0.013
  ! Inline 'drills' write access at line 39:9                    size   +77, benefit        1.0, efficiency      0.013

Pass 2: speed optimization selection (cost limit 65):
  ! Inline write jump table of array 'drills'                    size  +227, benefit        4.0, efficiency      0.018
  ! Inline 'drills' write access at line 36:9                    size   +77, benefit        1.0, efficiency      0.013
  ! Inline 'drills' write access at line 37:9                    size   +77, benefit        1.0, efficiency      0.013
  ! Inline 'drills' write access at line 38:9                    size   +77, benefit        1.0, efficiency      0.013
  ! Inline 'drills' write access at line 39:9                    size   +77, benefit        1.0, efficiency      0.013

Pass 3: speed optimization selection (cost limit 65):
  ! Inline write jump table of array 'drills'                    size  +227, benefit        4.0, efficiency      0.018
  ! Inline 'drills' write access at line 36:9                    size   +77, benefit        1.0, efficiency      0.013
  ! Inline 'drills' write access at line 37:9                    size   +77, benefit        1.0, efficiency      0.013
  ! Inline 'drills' write access at line 38:9                    size   +77, benefit        1.0, efficiency      0.013
  ! Inline 'drills' write access at line 39:9                    size   +77, benefit        1.0, efficiency      0.013

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-23 instructions):
 
    18 set .coreX *tmp6
    19 sensor *tmp7 .core @y
    20 set .coreY *tmp7
-    * set *tmp2 *tmp7
    21 jump *label10 always
    22 label *label9
-    * set *tmp2 null
    23 label *label10
    24 label *label14
    25 jump *label16 equal true false
    26 set :backgroundProcess:count 0
-    * set :backgroundProcess:index 0
    27 set :backgroundProcess:unit .units*0
    28 set :backgroundProcess:drill1 .drills*0
    29 set :backgroundProcess:drill2 .drills*1
 
   115 op equal *tmp9 :backgroundProcess:drill1 null
   116 jump *label30 equal *tmp9 false
   117 jump *label19 always
-    * set *tmp10 null
   118 jump *label31 always
   119 label *label30
-    * set *tmp10 null
   120 label *label31
   121 sensor *tmp11 :backgroundProcess:unit @controller
   122 op notEqual *tmp12 *tmp11 @this
 
   129 jump *label35 equal *tmp15 false
   130 set *tmp14 null
   131 jump *label34 always
-    * set *tmp16 null
   132 jump *label36 always
   133 label *label35
-    * set *tmp16 null
   134 label *label36
   135 set :findFreeUnit:first_unit @unit
   136 label *label37
 
   140 ucontrol flag :findFreeUnit:initial_flag
   141 set *tmp14 @unit
   142 jump *label34 always
-    * set *tmp19 null
   143 jump *label41 always
   144 label *label40
   145 sensor *tmp20 :findFreeUnit:first_unit @dead
 
   152 label *label42
   153 set *tmp22 null
   154 label *label43
-    * set *tmp19 *tmp22
   155 label *label41
   156 ubind :findFreeUnit:unit_type
   157 label *label38
 
   179 label *label44
   180 set *tmp26 null
   181 label *label45
-    * set *tmp13 *tmp26
   182 jump *label33 always
   183 label *label32
-    * set *tmp13 null
   184 label *label33
   185 ubind :backgroundProcess:unit
   186 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
 
   215 op equal *tmp49 :serviceSpot:t1 :serviceSpot:max
   216 jump *label49 equal *tmp49 false
   217 ucontrol itemTake :serviceSpot:drill1 @titanium 10
-    * set *tmp50 null
   218 jump *label50 always
   219 label *label49
-    * set *tmp50 null
   220 label *label50
   221 op equal *tmp51 :serviceSpot:t2 :serviceSpot:max
   222 jump *label51 equal *tmp51 false
   223 ucontrol itemTake :serviceSpot:drill2 @titanium 10
-    * set *tmp52 null
   224 jump *label52 always
   225 label *label51
-    * set *tmp52 null
   226 label *label52
   227 op equal *tmp53 :serviceSpot:t3 :serviceSpot:max
   228 jump *label53 equal *tmp53 false
   229 ucontrol itemTake :serviceSpot:drill3 @titanium 10
-    * set *tmp54 null
   230 jump *label54 always
   231 label *label53
-    * set *tmp54 null
   232 label *label54
   233 op equal *tmp55 :serviceSpot:t4 :serviceSpot:max
   234 jump *label55 equal *tmp55 false
   235 ucontrol itemTake :serviceSpot:drill4 @titanium 10
-    * set *tmp56 null
   236 jump *label56 always
   237 label *label55
-    * set *tmp56 null
   238 label *label56
   239 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
   240 op equal *tmp58 :serviceSpot:drillAmount 0
 
   257 label *label60
   258 set *tmp60 *tmp63
   259 label *label58
-    * set *tmp45 *tmp60
   260 jump *label48 always
   261 label *label47
   262 jump *label61 equal :serviceSpot:unitAmount false
 
   268 ucontrol flag 1
   269 set *tmp64 null
   270 label *label62
-    * set *tmp45 *tmp64
   271 label *label48
   272 set *tmp34 :serviceSpot:drillAmount
   273 jump *label46 always
 
   311 writearr<regular> :addTitaniumDrills:d4 .drills[] *tmp78
   312 set *tmp80 .spotCount
   313 op add .spotCount .spotCount 1
-    * set *tmp66 *tmp80
   314 jump *label65 always
   315 label *label64
-    * set *tmp66 null
   316 label *label65
   317 label *label63
   318 set :addTitaniumDrills*finished true

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-9 instructions):
 
   147 jump *label42 equal *tmp21 false
   148 set *tmp23 @unit
   149 set :findFreeUnit:first_unit *tmp23
-    * set *tmp22 :findFreeUnit:first_unit
   150 jump *label43 always
   151 label *label42
-    * set *tmp22 null
   152 label *label43
   153 label *label41
   154 ubind :findFreeUnit:unit_type
 
   172 op add *tmp33 *tmp31 *tmp32
   173 op add :backgroundProcess:count :backgroundProcess:count *tmp33
   174 jump *label18 always
-    * set *tmp26 null
   175 jump *label45 always
   176 label *label44
-    * set *tmp26 null
   177 label *label45
   178 jump *label33 always
   179 label *label32
 
   239 ucontrol flag 2
   240 ucontrol approach .coreX .coreY 4
   241 ucontrol itemDrop .core 10
-    * set *tmp60 null
   242 jump *label58 always
   243 label *label57
   244 sensor *tmp61 @unit @firstItem
 
   250 label *label59
   251 set *tmp63 null
   252 label *label60
-    * set *tmp60 *tmp63
   253 label *label58
   254 jump *label48 always
   255 label *label47
   256 jump *label61 equal :serviceSpot:unitAmount false
   257 ucontrol approach .coreX .coreY 4
   258 ucontrol itemDrop .core 10
-    * set *tmp64 null
   259 jump *label62 always
   260 label *label61
   261 ucontrol flag 1
-    * set *tmp64 null
   262 label *label62
   263 label *label48
   264 set *tmp34 :serviceSpot:drillAmount
 
   301 op add :addTitaniumDrills:i :addTitaniumDrills:i 1
   302 set *tmp78 *tmp77
   303 writearr<regular> :addTitaniumDrills:d4 .drills[] *tmp78
-    * set *tmp80 .spotCount
   304 op add .spotCount .spotCount 1
   305 jump *label65 always
   306 label *label64

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-2 instructions):
 
   245 op notEqual *tmp62 *tmp61 @titanium
   246 jump *label59 equal *tmp62 false
   247 ucontrol itemDrop @air 10
-    * set *tmp63 null
   248 jump *label60 always
   249 label *label59
-    * set *tmp63 null
   250 label *label60
   251 label *label58
   252 jump *label48 always

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-15 instructions):
 
     8 jump *label9 equal *tmp1 false
     9 label *label11
    10 ubind @flare
-    * ulocate building core false @copper .coreX .coreY *tmp4 *tmp3
-    * set .core *tmp3
+   11 ulocate building core false @copper .coreX .coreY 0 .core
    12 label *label12
    13 op equal *tmp5 .core null
    14 jump *label11 notEqual *tmp5 false
    15 label *label13
-    * sensor *tmp6 .core @x
-    * set .coreX *tmp6
-    * sensor *tmp7 .core @y
-    * set .coreY *tmp7
+   16 sensor .coreX .core @x
+   17 sensor .coreY .core @y
    18 jump *label10 always
    19 label *label9
    20 label *label10
 
   142 sensor *tmp20 :findFreeUnit:first_unit @dead
   143 op equal *tmp21 *tmp20 1
   144 jump *label42 equal *tmp21 false
-    * set *tmp23 @unit
-    * set :findFreeUnit:first_unit *tmp23
+  145 set :findFreeUnit:first_unit @unit
   146 jump *label43 always
   147 label *label42
   148 label *label43
 
   180 set :serviceSpot:drill2 :backgroundProcess:drill2
   181 set :serviceSpot:drill3 :backgroundProcess:drill3
   182 set :serviceSpot:drill4 :backgroundProcess:drill4
-    * sensor *tmp35 :serviceSpot:drill1 @titanium
-    * set :serviceSpot:t1 *tmp35
-    * sensor *tmp36 :serviceSpot:drill2 @titanium
-    * set :serviceSpot:t2 *tmp36
-    * sensor *tmp37 :serviceSpot:drill3 @titanium
-    * set :serviceSpot:t3 *tmp37
-    * sensor *tmp38 :serviceSpot:drill4 @titanium
-    * set :serviceSpot:t4 *tmp38
+  183 sensor :serviceSpot:t1 :serviceSpot:drill1 @titanium
+  184 sensor :serviceSpot:t2 :serviceSpot:drill2 @titanium
+  185 sensor :serviceSpot:t3 :serviceSpot:drill3 @titanium
+  186 sensor :serviceSpot:t4 :serviceSpot:drill4 @titanium
   187 op add *tmp39 :serviceSpot:t1 :serviceSpot:t2
   188 op add *tmp40 *tmp39 :serviceSpot:t3
-    * op add *tmp41 *tmp40 :serviceSpot:t4
-    * set :serviceSpot:drillAmount *tmp41
-    * sensor *tmp42 @unit @totalItems
-    * set :serviceSpot:unitAmount *tmp42
+  189 op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4
+  190 sensor :serviceSpot:unitAmount @unit @totalItems
   191 sensor *tmp43 @unit @flag
   192 op equal *tmp44 *tmp43 1
   193 jump *label47 equal *tmp44 false
 
   271 # "Function: remote void addTitaniumDrills(in d1, in d2, in d3, in d4)"
   272 op lessThan *tmp65 .spotCount 39
   273 jump *label64 equal *tmp65 false
-    * op mul *tmp67 .spotCount 4
-    * set :addTitaniumDrills:i *tmp67
+  274 op mul :addTitaniumDrills:i .spotCount 4
   275 set *tmp68 :addTitaniumDrills:i
   276 op add :addTitaniumDrills:i :addTitaniumDrills:i 1
-    * set *tmp69 *tmp68
-    * writearr<regular> :addTitaniumDrills:d1 .drills[] *tmp69
+  277 writearr<regular> :addTitaniumDrills:d1 .drills[] *tmp68
   278 set *tmp71 :addTitaniumDrills:i
   279 op add :addTitaniumDrills:i :addTitaniumDrills:i 1
-    * set *tmp72 *tmp71
-    * writearr<regular> :addTitaniumDrills:d2 .drills[] *tmp72
+  280 writearr<regular> :addTitaniumDrills:d2 .drills[] *tmp71
   281 set *tmp74 :addTitaniumDrills:i
   282 op add :addTitaniumDrills:i :addTitaniumDrills:i 1
-    * set *tmp75 *tmp74
-    * writearr<regular> :addTitaniumDrills:d3 .drills[] *tmp75
+  283 writearr<regular> :addTitaniumDrills:d3 .drills[] *tmp74
   284 set *tmp77 :addTitaniumDrills:i
   285 op add :addTitaniumDrills:i :addTitaniumDrills:i 1
-    * set *tmp78 *tmp77
-    * writearr<regular> :addTitaniumDrills:d4 .drills[] *tmp78
+  286 writearr<regular> :addTitaniumDrills:d4 .drills[] *tmp77
   287 op add .spotCount .spotCount 1
   288 jump *label65 always
   289 label *label64

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
    19 label *label9
    20 label *label10
    21 label *label14
-    * jump *label16 equal true false
    22 set :backgroundProcess:count 0
    23 set :backgroundProcess:unit .units*0
    24 set :backgroundProcess:drill1 .drills*0

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-16 instructions):
 
     4 set *signature "2347e8b86ae8a071:v1"
     5 label *label7
     6 # "Function: void backgroundProcess()"
-    * op equal *tmp1 .core null
-    * jump *label9 equal *tmp1 false
+    7 jump *label9 notEqual .core null
     8 label *label11
     9 ubind @flare
    10 ulocate building core false @copper .coreX .coreY 0 .core
    11 label *label12
-    * op equal *tmp5 .core null
-    * jump *label11 notEqual *tmp5 false
+   12 jump *label11 equal .core null
    13 label *label13
    14 sensor .coreX .core @x
    15 sensor .coreY .core @y
 
   106 set :backgroundProcess:drill4 .drills*39
   107 set *tmp8 null
   108 label *label17
-    * op equal *tmp9 :backgroundProcess:drill1 null
-    * jump *label30 equal *tmp9 false
+  109 jump *label30 notEqual :backgroundProcess:drill1 null
   110 jump *label19 always
   111 jump *label31 always
   112 label *label30
   113 label *label31
   114 sensor *tmp11 :backgroundProcess:unit @controller
-    * op notEqual *tmp12 *tmp11 @this
-    * jump *label32 equal *tmp12 false
+  115 jump *label32 equal *tmp11 @this
   116 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
   117 set :findFreeUnit:unit_type @flare
   118 set :findFreeUnit:initial_flag 0
   119 ubind :findFreeUnit:unit_type
-    * op equal *tmp15 @unit null
-    * jump *label35 equal *tmp15 false
+  120 jump *label35 notEqual @unit null
   121 set *tmp14 null
   122 jump *label34 always
   123 jump *label36 always
 
   126 set :findFreeUnit:first_unit @unit
   127 label *label37
   128 sensor *tmp17 @unit @controlled
-    * op equal *tmp18 *tmp17 0
-    * jump *label40 equal *tmp18 false
+  129 jump *label40 notEqual *tmp17 0
   130 ucontrol flag :findFreeUnit:initial_flag
   131 set *tmp14 @unit
   132 jump *label34 always
   133 jump *label41 always
   134 label *label40
   135 sensor *tmp20 :findFreeUnit:first_unit @dead
-    * op equal *tmp21 *tmp20 1
-    * jump *label42 equal *tmp21 false
+  136 jump *label42 notEqual *tmp20 1
   137 set :findFreeUnit:first_unit @unit
   138 jump *label43 always
   139 label *label42
 
   141 label *label41
   142 ubind :findFreeUnit:unit_type
   143 label *label38
-    * op notEqual *tmp24 :findFreeUnit:first_unit @unit
-    * jump *label37 notEqual *tmp24 false
+  144 jump *label37 notEqual :findFreeUnit:first_unit @unit
   145 label *label39
   146 set *tmp14 null
   147 jump *label34 always
   148 set *tmp14 null
   149 label *label34
   150 set :backgroundProcess:unit *tmp14
-    * op equal *tmp25 :backgroundProcess:unit null
-    * jump *label44 equal *tmp25 false
+  151 jump *label44 notEqual :backgroundProcess:unit null
   152 sensor *tmp27 :backgroundProcess:drill1 @titanium
   153 sensor *tmp28 :backgroundProcess:drill2 @titanium
   154 op add *tmp29 *tmp27 *tmp28
 
   179 op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4
   180 sensor :serviceSpot:unitAmount @unit @totalItems
   181 sensor *tmp43 @unit @flag
-    * op equal *tmp44 *tmp43 1
-    * jump *label47 equal *tmp44 false
+  182 jump *label47 notEqual *tmp43 1
   183 sensor *tmp46 :serviceSpot:drill1 @x
   184 sensor *tmp47 :serviceSpot:drill1 @y
   185 ucontrol approach *tmp46 *tmp47 2
 
   187 op max *tmp48 *tmp48 :serviceSpot:t3
   188 op max *tmp48 *tmp48 :serviceSpot:t4
   189 set :serviceSpot:max *tmp48
-    * op equal *tmp49 :serviceSpot:t1 :serviceSpot:max
-    * jump *label49 equal *tmp49 false
+  190 jump *label49 notEqual :serviceSpot:t1 :serviceSpot:max
   191 ucontrol itemTake :serviceSpot:drill1 @titanium 10
   192 jump *label50 always
   193 label *label49
   194 label *label50
-    * op equal *tmp51 :serviceSpot:t2 :serviceSpot:max
-    * jump *label51 equal *tmp51 false
+  195 jump *label51 notEqual :serviceSpot:t2 :serviceSpot:max
   196 ucontrol itemTake :serviceSpot:drill2 @titanium 10
   197 jump *label52 always
   198 label *label51
   199 label *label52
-    * op equal *tmp53 :serviceSpot:t3 :serviceSpot:max
-    * jump *label53 equal *tmp53 false
+  200 jump *label53 notEqual :serviceSpot:t3 :serviceSpot:max
   201 ucontrol itemTake :serviceSpot:drill3 @titanium 10
   202 jump *label54 always
   203 label *label53
   204 label *label54
-    * op equal *tmp55 :serviceSpot:t4 :serviceSpot:max
-    * jump *label55 equal *tmp55 false
+  205 jump *label55 notEqual :serviceSpot:t4 :serviceSpot:max
   206 ucontrol itemTake :serviceSpot:drill4 @titanium 10
   207 jump *label56 always
   208 label *label55
 
   217 jump *label58 always
   218 label *label57
   219 sensor *tmp61 @unit @firstItem
-    * op notEqual *tmp62 *tmp61 @titanium
-    * jump *label59 equal *tmp62 false
+  220 jump *label59 equal *tmp61 @titanium
   221 ucontrol itemDrop @air 10
   222 jump *label60 always
   223 label *label59
 
   253 end
   254 label *label0
   255 # "Function: remote void addTitaniumDrills(in d1, in d2, in d3, in d4)"
-    * op lessThan *tmp65 .spotCount 39
-    * jump *label64 equal *tmp65 false
+  256 jump *label64 greaterThanEq .spotCount 39
   257 op mul :addTitaniumDrills:i .spotCount 4
   258 set *tmp68 :addTitaniumDrills:i
   259 op add :addTitaniumDrills:i :addTitaniumDrills:i 1

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-12 instructions):
 
    13 label *label13
    14 sensor .coreX .core @x
    15 sensor .coreY .core @y
-    * jump *label10 always
    16 label *label9
    17 label *label10
    18 label *label14
 
   107 label *label17
   108 jump *label30 notEqual :backgroundProcess:drill1 null
   109 jump *label19 always
-    * jump *label31 always
   110 label *label30
   111 label *label31
   112 sensor *tmp11 :backgroundProcess:unit @controller
 
   118 jump *label35 notEqual @unit null
   119 set *tmp14 null
   120 jump *label34 always
-    * jump *label36 always
   121 label *label35
   122 label *label36
   123 set :findFreeUnit:first_unit @unit
 
   132 sensor *tmp20 :findFreeUnit:first_unit @dead
   133 jump *label42 notEqual *tmp20 1
   134 set :findFreeUnit:first_unit @unit
-    * jump *label43 always
   135 label *label42
   136 label *label43
   137 label *label41
 
   154 op add *tmp33 *tmp31 *tmp32
   155 op add :backgroundProcess:count :backgroundProcess:count *tmp33
   156 jump *label18 always
-    * jump *label45 always
   157 label *label44
   158 label *label45
-    * jump *label33 always
   159 label *label32
   160 label *label33
   161 ubind :backgroundProcess:unit
 
   183 set :serviceSpot:max *tmp48
   184 jump *label49 notEqual :serviceSpot:t1 :serviceSpot:max
   185 ucontrol itemTake :serviceSpot:drill1 @titanium 10
-    * jump *label50 always
   186 label *label49
   187 label *label50
   188 jump *label51 notEqual :serviceSpot:t2 :serviceSpot:max
   189 ucontrol itemTake :serviceSpot:drill2 @titanium 10
-    * jump *label52 always
   190 label *label51
   191 label *label52
   192 jump *label53 notEqual :serviceSpot:t3 :serviceSpot:max
   193 ucontrol itemTake :serviceSpot:drill3 @titanium 10
-    * jump *label54 always
   194 label *label53
   195 label *label54
   196 jump *label55 notEqual :serviceSpot:t4 :serviceSpot:max
   197 ucontrol itemTake :serviceSpot:drill4 @titanium 10
-    * jump *label56 always
   198 label *label55
   199 label *label56
   200 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
 
   209 sensor *tmp61 @unit @firstItem
   210 jump *label59 equal *tmp61 @titanium
   211 ucontrol itemDrop @air 10
-    * jump *label60 always
   212 label *label59
   213 label *label60
   214 label *label58
 
   257 op add :addTitaniumDrills:i :addTitaniumDrills:i 1
   258 writearr<regular> :addTitaniumDrills:d4 .drills[] *tmp77
   259 op add .spotCount .spotCount 1
-    * jump *label65 always
   260 label *label64
   261 label *label65
   262 label *label63

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-3 instructions):
 
   114 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
   115 set :findFreeUnit:unit_type @flare
   116 set :findFreeUnit:initial_flag 0
-    * ubind :findFreeUnit:unit_type
+  117 ubind @flare
   118 jump *label35 notEqual @unit null
   119 set *tmp14 null
   120 jump *label34 always
 
   124 label *label37
   125 sensor *tmp17 @unit @controlled
   126 jump *label40 notEqual *tmp17 0
-    * ucontrol flag :findFreeUnit:initial_flag
+  127 ucontrol flag 0
   128 set *tmp14 @unit
   129 jump *label34 always
   130 jump *label41 always
 
   135 label *label42
   136 label *label43
   137 label *label41
-    * ubind :findFreeUnit:unit_type
+  138 ubind @flare
   139 label *label38
   140 jump *label37 notEqual :findFreeUnit:first_unit @unit
   141 label *label39
   142 set *tmp14 null
   143 jump *label34 always
-    * set *tmp14 null
   144 label *label34
   145 set :backgroundProcess:unit *tmp14
-    * jump *label44 notEqual :backgroundProcess:unit null
+  146 jump *label44 notEqual *tmp14 null
   147 sensor *tmp27 :backgroundProcess:drill1 @titanium
   148 sensor *tmp28 :backgroundProcess:drill2 @titanium
   149 op add *tmp29 *tmp27 *tmp28
 
   163 set :serviceSpot:drill2 :backgroundProcess:drill2
   164 set :serviceSpot:drill3 :backgroundProcess:drill3
   165 set :serviceSpot:drill4 :backgroundProcess:drill4
-    * sensor :serviceSpot:t1 :serviceSpot:drill1 @titanium
-    * sensor :serviceSpot:t2 :serviceSpot:drill2 @titanium
-    * sensor :serviceSpot:t3 :serviceSpot:drill3 @titanium
-    * sensor :serviceSpot:t4 :serviceSpot:drill4 @titanium
+  166 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
+  167 sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium
+  168 sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium
+  169 sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium
   170 op add *tmp39 :serviceSpot:t1 :serviceSpot:t2
   171 op add *tmp40 *tmp39 :serviceSpot:t3
   172 op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4
   173 sensor :serviceSpot:unitAmount @unit @totalItems
   174 sensor *tmp43 @unit @flag
   175 jump *label47 notEqual *tmp43 1
-    * sensor *tmp46 :serviceSpot:drill1 @x
-    * sensor *tmp47 :serviceSpot:drill1 @y
+  176 sensor *tmp46 :backgroundProcess:drill1 @x
+  177 sensor *tmp47 :backgroundProcess:drill1 @y
   178 ucontrol approach *tmp46 *tmp47 2
   179 op max *tmp48 :serviceSpot:t1 :serviceSpot:t2
   180 op max *tmp48 *tmp48 :serviceSpot:t3
   181 op max *tmp48 *tmp48 :serviceSpot:t4
   182 set :serviceSpot:max *tmp48
-    * jump *label49 notEqual :serviceSpot:t1 :serviceSpot:max
-    * ucontrol itemTake :serviceSpot:drill1 @titanium 10
+  183 jump *label49 notEqual :serviceSpot:t1 *tmp48
+  184 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
   185 label *label49
   186 label *label50
-    * jump *label51 notEqual :serviceSpot:t2 :serviceSpot:max
-    * ucontrol itemTake :serviceSpot:drill2 @titanium 10
+  187 jump *label51 notEqual :serviceSpot:t2 *tmp48
+  188 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
   189 label *label51
   190 label *label52
-    * jump *label53 notEqual :serviceSpot:t3 :serviceSpot:max
-    * ucontrol itemTake :serviceSpot:drill3 @titanium 10
+  191 jump *label53 notEqual :serviceSpot:t3 *tmp48
+  192 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
   193 label *label53
   194 label *label54
-    * jump *label55 notEqual :serviceSpot:t4 :serviceSpot:max
-    * ucontrol itemTake :serviceSpot:drill4 @titanium 10
+  195 jump *label55 notEqual :serviceSpot:t4 *tmp48
+  196 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
   197 label *label55
   198 label *label56
   199 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
 
   223 label *label48
   224 set *tmp34 :serviceSpot:drillAmount
   225 jump *label46 always
-    * set *tmp34 null
   226 label *label46
-    * op add :backgroundProcess:count :backgroundProcess:count *tmp34
+  227 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   228 label *label18
   229 multijump *tmp8 0 0 (m:marker0)
   230 multilabel *label29 (m:marker0)
 
   252 op add :addTitaniumDrills:i :addTitaniumDrills:i 1
   253 writearr<regular> :addTitaniumDrills:d3 .drills[] *tmp74
   254 set *tmp77 :addTitaniumDrills:i
-    * op add :addTitaniumDrills:i :addTitaniumDrills:i 1
   255 writearr<regular> :addTitaniumDrills:d4 .drills[] *tmp77
   256 op add .spotCount .spotCount 1
   257 label *label64

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   112 sensor *tmp11 :backgroundProcess:unit @controller
   113 jump *label32 equal *tmp11 @this
   114 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
-    * set :findFreeUnit:unit_type @flare
-    * set :findFreeUnit:initial_flag 0
   115 ubind @flare
   116 jump *label35 notEqual @unit null
   117 set *tmp14 null
 
   157 label *label33
   158 ubind :backgroundProcess:unit
   159 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
-    * set :serviceSpot:drill1 :backgroundProcess:drill1
-    * set :serviceSpot:drill2 :backgroundProcess:drill2
-    * set :serviceSpot:drill3 :backgroundProcess:drill3
-    * set :serviceSpot:drill4 :backgroundProcess:drill4
   160 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
   161 sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium
   162 sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium
 
   173 op max *tmp48 :serviceSpot:t1 :serviceSpot:t2
   174 op max *tmp48 *tmp48 :serviceSpot:t3
   175 op max *tmp48 *tmp48 :serviceSpot:t4
-    * set :serviceSpot:max *tmp48
   176 jump *label49 notEqual :serviceSpot:t1 *tmp48
   177 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
   178 label *label49
 
   214 ucontrol flag 1
   215 label *label62
   216 label *label48
-    * set *tmp34 :serviceSpot:drillAmount
   217 jump *label46 always
   218 label *label46
   219 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
 
   244 op add :addTitaniumDrills:i :addTitaniumDrills:i 1
   245 writearr<regular> :addTitaniumDrills:d3 .drills[] *tmp74
   246 set *tmp77 :addTitaniumDrills:i
-    * writearr<regular> :addTitaniumDrills:d4 .drills[] *tmp77
+  247 writearr<regular> :addTitaniumDrills:d4 .drills[] :addTitaniumDrills:i
   248 op add .spotCount .spotCount 1
   249 label *label64
   250 label *label65

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-1 instructions):
 
   243 set *tmp74 :addTitaniumDrills:i
   244 op add :addTitaniumDrills:i :addTitaniumDrills:i 1
   245 writearr<regular> :addTitaniumDrills:d3 .drills[] *tmp74
-    * set *tmp77 :addTitaniumDrills:i
   246 writearr<regular> :addTitaniumDrills:d4 .drills[] :addTitaniumDrills:i
   247 op add .spotCount .spotCount 1
   248 label *label64

Modifications by Unroll iteration loop at line 98:9 (+673 instructions):
 
    17 label *label10
    18 label *label14
    19 set :backgroundProcess:count 0
-    * set :backgroundProcess:unit .units*0
-    * set :backgroundProcess:drill1 .drills*0
-    * set :backgroundProcess:drill2 .drills*1
-    * set :backgroundProcess:drill3 .drills*2
-    * set :backgroundProcess:drill4 .drills*3
-    * op add *tmp8 @counter 1
-    * jump *label17 always
-    * multilabel *label20 (m:marker0)
-    * set .units*0 :backgroundProcess:unit
-    * set :backgroundProcess:unit .units*1
-    * set :backgroundProcess:drill1 .drills*4
-    * set :backgroundProcess:drill2 .drills*5
-    * set :backgroundProcess:drill3 .drills*6
-    * set :backgroundProcess:drill4 .drills*7
-    * op add *tmp8 @counter 1
-    * jump *label17 always
-    * multilabel *label21 (m:marker0)
-    * set .units*1 :backgroundProcess:unit
-    * set :backgroundProcess:unit .units*2
-    * set :backgroundProcess:drill1 .drills*8
-    * set :backgroundProcess:drill2 .drills*9
-    * set :backgroundProcess:drill3 .drills*10
-    * set :backgroundProcess:drill4 .drills*11
-    * op add *tmp8 @counter 1
-    * jump *label17 always
-    * multilabel *label22 (m:marker0)
-    * set .units*2 :backgroundProcess:unit
-    * set :backgroundProcess:unit .units*3
-    * set :backgroundProcess:drill1 .drills*12
-    * set :backgroundProcess:drill2 .drills*13
-    * set :backgroundProcess:drill3 .drills*14
-    * set :backgroundProcess:drill4 .drills*15
-    * op add *tmp8 @counter 1
-    * jump *label17 always
-    * multilabel *label23 (m:marker0)
-    * set .units*3 :backgroundProcess:unit
-    * set :backgroundProcess:unit .units*4
-    * set :backgroundProcess:drill1 .drills*16
-    * set :backgroundProcess:drill2 .drills*17
-    * set :backgroundProcess:drill3 .drills*18
-    * set :backgroundProcess:drill4 .drills*19
-    * op add *tmp8 @counter 1
-    * jump *label17 always
-    * multilabel *label24 (m:marker0)
-    * set .units*4 :backgroundProcess:unit
-    * set :backgroundProcess:unit .units*5
-    * set :backgroundProcess:drill1 .drills*20
-    * set :backgroundProcess:drill2 .drills*21
-    * set :backgroundProcess:drill3 .drills*22
-    * set :backgroundProcess:drill4 .drills*23
-    * op add *tmp8 @counter 1
-    * jump *label17 always
-    * multilabel *label25 (m:marker0)
-    * set .units*5 :backgroundProcess:unit
-    * set :backgroundProcess:unit .units*6
-    * set :backgroundProcess:drill1 .drills*24
-    * set :backgroundProcess:drill2 .drills*25
-    * set :backgroundProcess:drill3 .drills*26
-    * set :backgroundProcess:drill4 .drills*27
-    * op add *tmp8 @counter 1
-    * jump *label17 always
-    * multilabel *label26 (m:marker0)
-    * set .units*6 :backgroundProcess:unit
-    * set :backgroundProcess:unit .units*7
-    * set :backgroundProcess:drill1 .drills*28
-    * set :backgroundProcess:drill2 .drills*29
-    * set :backgroundProcess:drill3 .drills*30
-    * set :backgroundProcess:drill4 .drills*31
-    * op add *tmp8 @counter 1
-    * jump *label17 always
-    * multilabel *label27 (m:marker0)
-    * set .units*7 :backgroundProcess:unit
-    * set :backgroundProcess:unit .units*8
-    * set :backgroundProcess:drill1 .drills*32
-    * set :backgroundProcess:drill2 .drills*33
-    * set :backgroundProcess:drill3 .drills*34
-    * set :backgroundProcess:drill4 .drills*35
-    * op add *tmp8 @counter 1
-    * jump *label17 always
-    * multilabel *label28 (m:marker0)
-    * set .units*8 :backgroundProcess:unit
-    * set :backgroundProcess:unit .units*9
-    * set :backgroundProcess:drill1 .drills*36
-    * set :backgroundProcess:drill2 .drills*37
-    * set :backgroundProcess:drill3 .drills*38
-    * set :backgroundProcess:drill4 .drills*39
-    * set *tmp8 null
-    * label *label17
-    * jump *label30 notEqual :backgroundProcess:drill1 null
-    * jump *label19 always
-    * label *label30
-    * label *label31
-    * sensor *tmp11 :backgroundProcess:unit @controller
-    * jump *label32 equal *tmp11 @this
-    * # "Function: def findFreeUnit(in unit_type, in initial_flag)"
-    * ubind @flare
-    * jump *label35 notEqual @unit null
-    * set *tmp14 null
-    * jump *label34 always
-    * label *label35
-    * label *label36
-    * set :findFreeUnit:first_unit @unit
-    * label *label37
-    * sensor *tmp17 @unit @controlled
-    * jump *label40 notEqual *tmp17 0
-    * ucontrol flag 0
-    * set *tmp14 @unit
-    * jump *label34 always
-    * jump *label41 always
-    * label *label40
-    * sensor *tmp20 :findFreeUnit:first_unit @dead
-    * jump *label42 notEqual *tmp20 1
-    * set :findFreeUnit:first_unit @unit
-    * label *label42
-    * label *label43
-    * label *label41
-    * ubind @flare
-    * label *label38
-    * jump *label37 notEqual :findFreeUnit:first_unit @unit
-    * label *label39
-    * set *tmp14 null
-    * jump *label34 always
-    * label *label34
-    * set :backgroundProcess:unit *tmp14
-    * jump *label44 notEqual *tmp14 null
-    * sensor *tmp27 :backgroundProcess:drill1 @titanium
-    * sensor *tmp28 :backgroundProcess:drill2 @titanium
-    * op add *tmp29 *tmp27 *tmp28
-    * sensor *tmp30 :backgroundProcess:drill3 @titanium
-    * op add *tmp31 *tmp29 *tmp30
-    * sensor *tmp32 :backgroundProcess:drill4 @titanium
-    * op add *tmp33 *tmp31 *tmp32
-    * op add :backgroundProcess:count :backgroundProcess:count *tmp33
-    * jump *label18 always
-    * label *label44
-    * label *label45
-    * label *label32
-    * label *label33
-    * ubind :backgroundProcess:unit
-    * # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
-    * sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
-    * sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium
-    * sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium
-    * sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium
-    * op add *tmp39 :serviceSpot:t1 :serviceSpot:t2
-    * op add *tmp40 *tmp39 :serviceSpot:t3
-    * op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4
-    * sensor :serviceSpot:unitAmount @unit @totalItems
-    * sensor *tmp43 @unit @flag
-    * jump *label47 notEqual *tmp43 1
-    * sensor *tmp46 :backgroundProcess:drill1 @x
-    * sensor *tmp47 :backgroundProcess:drill1 @y
-    * ucontrol approach *tmp46 *tmp47 2
-    * op max *tmp48 :serviceSpot:t1 :serviceSpot:t2
-    * op max *tmp48 *tmp48 :serviceSpot:t3
-    * op max *tmp48 *tmp48 :serviceSpot:t4
-    * jump *label49 notEqual :serviceSpot:t1 *tmp48
-    * ucontrol itemTake :backgroundProcess:drill1 @titanium 10
-    * label *label49
-    * label *label50
-    * jump *label51 notEqual :serviceSpot:t2 *tmp48
-    * ucontrol itemTake :backgroundProcess:drill2 @titanium 10
-    * label *label51
-    * label *label52
-    * jump *label53 notEqual :serviceSpot:t3 *tmp48
-    * ucontrol itemTake :backgroundProcess:drill3 @titanium 10
-    * label *label53
-    * label *label54
-    * jump *label55 notEqual :serviceSpot:t4 *tmp48
-    * ucontrol itemTake :backgroundProcess:drill4 @titanium 10
-    * label *label55
-    * label *label56
-    * op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
-    * op equal *tmp58 :serviceSpot:drillAmount 0
-    * op or *tmp59 *tmp57 *tmp58
-    * jump *label57 equal *tmp59 false
-    * ucontrol flag 2
-    * ucontrol approach .coreX .coreY 4
-    * ucontrol itemDrop .core 10
-    * jump *label58 always
-    * label *label57
-    * sensor *tmp61 @unit @firstItem
-    * jump *label59 equal *tmp61 @titanium
-    * ucontrol itemDrop @air 10
-    * label *label59
-    * label *label60
-    * label *label58
-    * jump *label48 always
-    * label *label47
-    * jump *label61 equal :serviceSpot:unitAmount false
-    * ucontrol approach .coreX .coreY 4
-    * ucontrol itemDrop .core 10
-    * jump *label62 always
-    * label *label61
-    * ucontrol flag 1
-    * label *label62
-    * label *label48
-    * jump *label46 always
-    * label *label46
-    * op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
-    * label *label18
-    * multijump *tmp8 0 0 (m:marker0)
-    * multilabel *label29 (m:marker0)
-    * set .units*9 :backgroundProcess:unit
-    * label *label19
+   20 set :backgroundProcess:unit .units*0
+   21 set :backgroundProcess:drill1 .drills*0
+   22 set :backgroundProcess:drill2 .drills*1
+   23 set :backgroundProcess:drill3 .drills*2
+   24 set :backgroundProcess:drill4 .drills*3
+   25 label *label66
+   26 jump *label67 notEqual :backgroundProcess:drill1 null
+   27 jump *label19 always
+   28 label *label67
+   29 label *label68
+   30 sensor *tmp11 :backgroundProcess:unit @controller
+   31 jump *label81 equal *tmp11 @this
+   32 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
+   33 ubind @flare
+   34 jump *label69 notEqual @unit null
+   35 set *tmp14 null
+   36 jump *label78 always
+   37 label *label69
+   38 label *label70
+   39 set :findFreeUnit:first_unit @unit
+   40 label *label71
+   41 sensor *tmp17 @unit @controlled
+   42 jump *label72 notEqual *tmp17 0
+   43 ucontrol flag 0
+   44 set *tmp14 @unit
+   45 jump *label78 always
+   46 jump *label75 always
+   47 label *label72
+   48 sensor *tmp20 :findFreeUnit:first_unit @dead
+   49 jump *label73 notEqual *tmp20 1
+   50 set :findFreeUnit:first_unit @unit
+   51 label *label73
+   52 label *label74
+   53 label *label75
+   54 ubind @flare
+   55 label *label76
+   56 jump *label71 notEqual :findFreeUnit:first_unit @unit
+   57 label *label77
+   58 set *tmp14 null
+   59 jump *label78 always
+   60 label *label78
+   61 set :backgroundProcess:unit *tmp14
+   62 jump *label79 notEqual *tmp14 null
+   63 sensor *tmp27 :backgroundProcess:drill1 @titanium
+   64 sensor *tmp28 :backgroundProcess:drill2 @titanium
+   65 op add *tmp29 *tmp27 *tmp28
+   66 sensor *tmp30 :backgroundProcess:drill3 @titanium
+   67 op add *tmp31 *tmp29 *tmp30
+   68 sensor *tmp32 :backgroundProcess:drill4 @titanium
+   69 op add *tmp33 *tmp31 *tmp32
+   70 op add :backgroundProcess:count :backgroundProcess:count *tmp33
+   71 jump *label100 always
+   72 label *label79
+   73 label *label80
+   74 label *label81
+   75 label *label82
+   76 ubind :backgroundProcess:unit
+   77 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
+   78 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
+   79 sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium
+   80 sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium
+   81 sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium
+   82 op add *tmp39 :serviceSpot:t1 :serviceSpot:t2
+   83 op add *tmp40 *tmp39 :serviceSpot:t3
+   84 op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4
+   85 sensor :serviceSpot:unitAmount @unit @totalItems
+   86 sensor *tmp43 @unit @flag
+   87 jump *label95 notEqual *tmp43 1
+   88 sensor *tmp46 :backgroundProcess:drill1 @x
+   89 sensor *tmp47 :backgroundProcess:drill1 @y
+   90 ucontrol approach *tmp46 *tmp47 2
+   91 op max *tmp48 :serviceSpot:t1 :serviceSpot:t2
+   92 op max *tmp48 *tmp48 :serviceSpot:t3
+   93 op max *tmp48 *tmp48 :serviceSpot:t4
+   94 jump *label83 notEqual :serviceSpot:t1 *tmp48
+   95 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
+   96 label *label83
+   97 label *label84
+   98 jump *label85 notEqual :serviceSpot:t2 *tmp48
+   99 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
+  100 label *label85
+  101 label *label86
+  102 jump *label87 notEqual :serviceSpot:t3 *tmp48
+  103 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
+  104 label *label87
+  105 label *label88
+  106 jump *label89 notEqual :serviceSpot:t4 *tmp48
+  107 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
+  108 label *label89
+  109 label *label90
+  110 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
+  111 op equal *tmp58 :serviceSpot:drillAmount 0
+  112 op or *tmp59 *tmp57 *tmp58
+  113 jump *label91 equal *tmp59 false
+  114 ucontrol flag 2
+  115 ucontrol approach .coreX .coreY 4
+  116 ucontrol itemDrop .core 10
+  117 jump *label94 always
+  118 label *label91
+  119 sensor *tmp61 @unit @firstItem
+  120 jump *label92 equal *tmp61 @titanium
+  121 ucontrol itemDrop @air 10
+  122 label *label92
+  123 label *label93
+  124 label *label94
+  125 jump *label98 always
+  126 label *label95
+  127 jump *label96 equal :serviceSpot:unitAmount false
+  128 ucontrol approach .coreX .coreY 4
+  129 ucontrol itemDrop .core 10
+  130 jump *label97 always
+  131 label *label96
+  132 ucontrol flag 1
+  133 label *label97
+  134 label *label98
+  135 jump *label99 always
+  136 label *label99
+  137 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
+  138 label *label100
+  139 set .units*0 :backgroundProcess:unit
+  140 set :backgroundProcess:unit .units*1
+  141 set :backgroundProcess:drill1 .drills*4
+  142 set :backgroundProcess:drill2 .drills*5
+  143 set :backgroundProcess:drill3 .drills*6
+  144 set :backgroundProcess:drill4 .drills*7
+  145 label *label103
+  146 jump *label104 notEqual :backgroundProcess:drill1 null
+  147 jump *label19 always
+  148 label *label104
+  149 label *label105
+  150 sensor *tmp11 :backgroundProcess:unit @controller
+  151 jump *label118 equal *tmp11 @this
+  152 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
+  153 ubind @flare
+  154 jump *label106 notEqual @unit null
+  155 set *tmp14 null
+  156 jump *label115 always
+  157 label *label106
+  158 label *label107
+  159 set :findFreeUnit:first_unit @unit
+  160 label *label108
+  161 sensor *tmp17 @unit @controlled
+  162 jump *label109 notEqual *tmp17 0
+  163 ucontrol flag 0
+  164 set *tmp14 @unit
+  165 jump *label115 always
+  166 jump *label112 always
+  167 label *label109
+  168 sensor *tmp20 :findFreeUnit:first_unit @dead
+  169 jump *label110 notEqual *tmp20 1
+  170 set :findFreeUnit:first_unit @unit
+  171 label *label110
+  172 label *label111
+  173 label *label112
+  174 ubind @flare
+  175 label *label113
+  176 jump *label108 notEqual :findFreeUnit:first_unit @unit
+  177 label *label114
+  178 set *tmp14 null
+  179 jump *label115 always
+  180 label *label115
+  181 set :backgroundProcess:unit *tmp14
+  182 jump *label116 notEqual *tmp14 null
+  183 sensor *tmp27 :backgroundProcess:drill1 @titanium
+  184 sensor *tmp28 :backgroundProcess:drill2 @titanium
+  185 op add *tmp29 *tmp27 *tmp28
+  186 sensor *tmp30 :backgroundProcess:drill3 @titanium
+  187 op add *tmp31 *tmp29 *tmp30
+  188 sensor *tmp32 :backgroundProcess:drill4 @titanium
+  189 op add *tmp33 *tmp31 *tmp32
+  190 op add :backgroundProcess:count :backgroundProcess:count *tmp33
+  191 jump *label137 always
+  192 label *label116
+  193 label *label117
+  194 label *label118
+  195 label *label119
+  196 ubind :backgroundProcess:unit
+  197 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
+  198 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
+  199 sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium
+  200 sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium
+  201 sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium
+  202 op add *tmp39 :serviceSpot:t1 :serviceSpot:t2
+  203 op add *tmp40 *tmp39 :serviceSpot:t3
+  204 op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4
+  205 sensor :serviceSpot:unitAmount @unit @totalItems
+  206 sensor *tmp43 @unit @flag
+  207 jump *label132 notEqual *tmp43 1
+  208 sensor *tmp46 :backgroundProcess:drill1 @x
+  209 sensor *tmp47 :backgroundProcess:drill1 @y
+  210 ucontrol approach *tmp46 *tmp47 2
+  211 op max *tmp48 :serviceSpot:t1 :serviceSpot:t2
+  212 op max *tmp48 *tmp48 :serviceSpot:t3
+  213 op max *tmp48 *tmp48 :serviceSpot:t4
+  214 jump *label120 notEqual :serviceSpot:t1 *tmp48
+  215 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
+  216 label *label120
+  217 label *label121
+  218 jump *label122 notEqual :serviceSpot:t2 *tmp48
+  219 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
+  220 label *label122
+  221 label *label123
+  222 jump *label124 notEqual :serviceSpot:t3 *tmp48
+  223 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
+  224 label *label124
+  225 label *label125
+  226 jump *label126 notEqual :serviceSpot:t4 *tmp48
+  227 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
+  228 label *label126
+  229 label *label127
+  230 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
+  231 op equal *tmp58 :serviceSpot:drillAmount 0
+  232 op or *tmp59 *tmp57 *tmp58
+  233 jump *label128 equal *tmp59 false
+  234 ucontrol flag 2
+  235 ucontrol approach .coreX .coreY 4
+  236 ucontrol itemDrop .core 10
+  237 jump *label131 always
+  238 label *label128
+  239 sensor *tmp61 @unit @firstItem
+  240 jump *label129 equal *tmp61 @titanium
+  241 ucontrol itemDrop @air 10
+  242 label *label129
+  243 label *label130
+  244 label *label131
+  245 jump *label135 always
+  246 label *label132
+  247 jump *label133 equal :serviceSpot:unitAmount false
+  248 ucontrol approach .coreX .coreY 4
+  249 ucontrol itemDrop .core 10
+  250 jump *label134 always
+  251 label *label133
+  252 ucontrol flag 1
+  253 label *label134
+  254 label *label135
+  255 jump *label136 always
+  256 label *label136
+  257 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
+  258 label *label137
+  259 set .units*1 :backgroundProcess:unit
+  260 set :backgroundProcess:unit .units*2
+  261 set :backgroundProcess:drill1 .drills*8
+  262 set :backgroundProcess:drill2 .drills*9
+  263 set :backgroundProcess:drill3 .drills*10
+  264 set :backgroundProcess:drill4 .drills*11
+  265 label *label140
+  266 jump *label141 notEqual :backgroundProcess:drill1 null
+  267 jump *label19 always
+  268 label *label141
+  269 label *label142
+  270 sensor *tmp11 :backgroundProcess:unit @controller
+  271 jump *label155 equal *tmp11 @this
+  272 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
+  273 ubind @flare
+  274 jump *label143 notEqual @unit null
+  275 set *tmp14 null
+  276 jump *label152 always
+  277 label *label143
+  278 label *label144
+  279 set :findFreeUnit:first_unit @unit
+  280 label *label145
+  281 sensor *tmp17 @unit @controlled
+  282 jump *label146 notEqual *tmp17 0
+  283 ucontrol flag 0
+  284 set *tmp14 @unit
+  285 jump *label152 always
+  286 jump *label149 always
+  287 label *label146
+  288 sensor *tmp20 :findFreeUnit:first_unit @dead
+  289 jump *label147 notEqual *tmp20 1
+  290 set :findFreeUnit:first_unit @unit
+  291 label *label147
+  292 label *label148
+  293 label *label149
+  294 ubind @flare
+  295 label *label150
+  296 jump *label145 notEqual :findFreeUnit:first_unit @unit
+  297 label *label151
+  298 set *tmp14 null
+  299 jump *label152 always
+  300 label *label152
+  301 set :backgroundProcess:unit *tmp14
+  302 jump *label153 notEqual *tmp14 null
+  303 sensor *tmp27 :backgroundProcess:drill1 @titanium
+  304 sensor *tmp28 :backgroundProcess:drill2 @titanium
+  305 op add *tmp29 *tmp27 *tmp28
+  306 sensor *tmp30 :backgroundProcess:drill3 @titanium
+  307 op add *tmp31 *tmp29 *tmp30
+  308 sensor *tmp32 :backgroundProcess:drill4 @titanium
+  309 op add *tmp33 *tmp31 *tmp32
+  310 op add :backgroundProcess:count :backgroundProcess:count *tmp33
+  311 jump *label174 always
+  312 label *label153
+  313 label *label154
+  314 label *label155
+  315 label *label156
+  316 ubind :backgroundProcess:unit
+  317 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
+  318 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
+  319 sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium
+  320 sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium
+  321 sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium
+  322 op add *tmp39 :serviceSpot:t1 :serviceSpot:t2
+  323 op add *tmp40 *tmp39 :serviceSpot:t3
+  324 op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4
+  325 sensor :serviceSpot:unitAmount @unit @totalItems
+  326 sensor *tmp43 @unit @flag
+  327 jump *label169 notEqual *tmp43 1
+  328 sensor *tmp46 :backgroundProcess:drill1 @x
+  329 sensor *tmp47 :backgroundProcess:drill1 @y
+  330 ucontrol approach *tmp46 *tmp47 2
+  331 op max *tmp48 :serviceSpot:t1 :serviceSpot:t2
+  332 op max *tmp48 *tmp48 :serviceSpot:t3
+  333 op max *tmp48 *tmp48 :serviceSpot:t4
+  334 jump *label157 notEqual :serviceSpot:t1 *tmp48
+  335 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
+  336 label *label157
+  337 label *label158
+  338 jump *label159 notEqual :serviceSpot:t2 *tmp48
+  339 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
+  340 label *label159
+  341 label *label160
+  342 jump *label161 notEqual :serviceSpot:t3 *tmp48
+  343 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
+  344 label *label161
+  345 label *label162
+  346 jump *label163 notEqual :serviceSpot:t4 *tmp48
+  347 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
+  348 label *label163
+  349 label *label164
+  350 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
+  351 op equal *tmp58 :serviceSpot:drillAmount 0
+  352 op or *tmp59 *tmp57 *tmp58
+  353 jump *label165 equal *tmp59 false
+  354 ucontrol flag 2
+  355 ucontrol approach .coreX .coreY 4
+  356 ucontrol itemDrop .core 10
+  357 jump *label168 always
+  358 label *label165
+  359 sensor *tmp61 @unit @firstItem
+  360 jump *label166 equal *tmp61 @titanium
+  361 ucontrol itemDrop @air 10
+  362 label *label166
+  363 label *label167
+  364 label *label168
+  365 jump *label172 always
+  366 label *label169
+  367 jump *label170 equal :serviceSpot:unitAmount false
+  368 ucontrol approach .coreX .coreY 4
+  369 ucontrol itemDrop .core 10
+  370 jump *label171 always
+  371 label *label170
+  372 ucontrol flag 1
+  373 label *label171
+  374 label *label172
+  375 jump *label173 always
+  376 label *label173
+  377 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
+  378 label *label174
+  379 set .units*2 :backgroundProcess:unit
+  380 set :backgroundProcess:unit .units*3
+  381 set :backgroundProcess:drill1 .drills*12
+  382 set :backgroundProcess:drill2 .drills*13
+  383 set :backgroundProcess:drill3 .drills*14
+  384 set :backgroundProcess:drill4 .drills*15
+  385 label *label177
+  386 jump *label178 notEqual :backgroundProcess:drill1 null
+  387 jump *label19 always
+  388 label *label178
+  389 label *label179
+  390 sensor *tmp11 :backgroundProcess:unit @controller
+  391 jump *label192 equal *tmp11 @this
+  392 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
+  393 ubind @flare
+  394 jump *label180 notEqual @unit null
+  395 set *tmp14 null
+  396 jump *label189 always
+  397 label *label180
+  398 label *label181
+  399 set :findFreeUnit:first_unit @unit
+  400 label *label182
+  401 sensor *tmp17 @unit @controlled
+  402 jump *label183 notEqual *tmp17 0
+  403 ucontrol flag 0
+  404 set *tmp14 @unit
+  405 jump *label189 always
+  406 jump *label186 always
+  407 label *label183
+  408 sensor *tmp20 :findFreeUnit:first_unit @dead
+  409 jump *label184 notEqual *tmp20 1
+  410 set :findFreeUnit:first_unit @unit
+  411 label *label184
+  412 label *label185
+  413 label *label186
+  414 ubind @flare
+  415 label *label187
+  416 jump *label182 notEqual :findFreeUnit:first_unit @unit
+  417 label *label188
+  418 set *tmp14 null
+  419 jump *label189 always
+  420 label *label189
+  421 set :backgroundProcess:unit *tmp14
+  422 jump *label190 notEqual *tmp14 null
+  423 sensor *tmp27 :backgroundProcess:drill1 @titanium
+  424 sensor *tmp28 :backgroundProcess:drill2 @titanium
+  425 op add *tmp29 *tmp27 *tmp28
+  426 sensor *tmp30 :backgroundProcess:drill3 @titanium
+  427 op add *tmp31 *tmp29 *tmp30
+  428 sensor *tmp32 :backgroundProcess:drill4 @titanium
+  429 op add *tmp33 *tmp31 *tmp32
+  430 op add :backgroundProcess:count :backgroundProcess:count *tmp33
+  431 jump *label211 always
+  432 label *label190
+  433 label *label191
+  434 label *label192
+  435 label *label193
+  436 ubind :backgroundProcess:unit
+  437 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
+  438 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
+  439 sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium
+  440 sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium
+  441 sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium
+  442 op add *tmp39 :serviceSpot:t1 :serviceSpot:t2
+  443 op add *tmp40 *tmp39 :serviceSpot:t3
+  444 op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4
+  445 sensor :serviceSpot:unitAmount @unit @totalItems
+  446 sensor *tmp43 @unit @flag
+  447 jump *label206 notEqual *tmp43 1
+  448 sensor *tmp46 :backgroundProcess:drill1 @x
+  449 sensor *tmp47 :backgroundProcess:drill1 @y
+  450 ucontrol approach *tmp46 *tmp47 2
+  451 op max *tmp48 :serviceSpot:t1 :serviceSpot:t2
+  452 op max *tmp48 *tmp48 :serviceSpot:t3
+  453 op max *tmp48 *tmp48 :serviceSpot:t4
+  454 jump *label194 notEqual :serviceSpot:t1 *tmp48
+  455 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
+  456 label *label194
+  457 label *label195
+  458 jump *label196 notEqual :serviceSpot:t2 *tmp48
+  459 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
+  460 label *label196
+  461 label *label197
+  462 jump *label198 notEqual :serviceSpot:t3 *tmp48
+  463 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
+  464 label *label198
+  465 label *label199
+  466 jump *label200 notEqual :serviceSpot:t4 *tmp48
+  467 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
+  468 label *label200
+  469 label *label201
+  470 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
+  471 op equal *tmp58 :serviceSpot:drillAmount 0
+  472 op or *tmp59 *tmp57 *tmp58
+  473 jump *label202 equal *tmp59 false
+  474 ucontrol flag 2
+  475 ucontrol approach .coreX .coreY 4
+  476 ucontrol itemDrop .core 10
+  477 jump *label205 always
+  478 label *label202
+  479 sensor *tmp61 @unit @firstItem
+  480 jump *label203 equal *tmp61 @titanium
+  481 ucontrol itemDrop @air 10
+  482 label *label203
+  483 label *label204
+  484 label *label205
+  485 jump *label209 always
+  486 label *label206
+  487 jump *label207 equal :serviceSpot:unitAmount false
+  488 ucontrol approach .coreX .coreY 4
+  489 ucontrol itemDrop .core 10
+  490 jump *label208 always
+  491 label *label207
+  492 ucontrol flag 1
+  493 label *label208
+  494 label *label209
+  495 jump *label210 always
+  496 label *label210
+  497 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
+  498 label *label211
+  499 set .units*3 :backgroundProcess:unit
+  500 set :backgroundProcess:unit .units*4
+  501 set :backgroundProcess:drill1 .drills*16
+  502 set :backgroundProcess:drill2 .drills*17
+  503 set :backgroundProcess:drill3 .drills*18
+  504 set :backgroundProcess:drill4 .drills*19
+  505 label *label214
+  506 jump *label215 notEqual :backgroundProcess:drill1 null
+  507 jump *label19 always
+  508 label *label215
+  509 label *label216
+  510 sensor *tmp11 :backgroundProcess:unit @controller
+  511 jump *label229 equal *tmp11 @this
+  512 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
+  513 ubind @flare
+  514 jump *label217 notEqual @unit null
+  515 set *tmp14 null
+  516 jump *label226 always
+  517 label *label217
+  518 label *label218
+  519 set :findFreeUnit:first_unit @unit
+  520 label *label219
+  521 sensor *tmp17 @unit @controlled
+  522 jump *label220 notEqual *tmp17 0
+  523 ucontrol flag 0
+  524 set *tmp14 @unit
+  525 jump *label226 always
+  526 jump *label223 always
+  527 label *label220
+  528 sensor *tmp20 :findFreeUnit:first_unit @dead
+  529 jump *label221 notEqual *tmp20 1
+  530 set :findFreeUnit:first_unit @unit
+  531 label *label221
+  532 label *label222
+  533 label *label223
+  534 ubind @flare
+  535 label *label224
+  536 jump *label219 notEqual :findFreeUnit:first_unit @unit
+  537 label *label225
+  538 set *tmp14 null
+  539 jump *label226 always
+  540 label *label226
+  541 set :backgroundProcess:unit *tmp14
+  542 jump *label227 notEqual *tmp14 null
+  543 sensor *tmp27 :backgroundProcess:drill1 @titanium
+  544 sensor *tmp28 :backgroundProcess:drill2 @titanium
+  545 op add *tmp29 *tmp27 *tmp28
+  546 sensor *tmp30 :backgroundProcess:drill3 @titanium
+  547 op add *tmp31 *tmp29 *tmp30
+  548 sensor *tmp32 :backgroundProcess:drill4 @titanium
+  549 op add *tmp33 *tmp31 *tmp32
+  550 op add :backgroundProcess:count :backgroundProcess:count *tmp33
+  551 jump *label248 always
+  552 label *label227
+  553 label *label228
+  554 label *label229
+  555 label *label230
+  556 ubind :backgroundProcess:unit
+  557 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
+  558 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
+  559 sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium
+  560 sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium
+  561 sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium
+  562 op add *tmp39 :serviceSpot:t1 :serviceSpot:t2
+  563 op add *tmp40 *tmp39 :serviceSpot:t3
+  564 op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4
+  565 sensor :serviceSpot:unitAmount @unit @totalItems
+  566 sensor *tmp43 @unit @flag
+  567 jump *label243 notEqual *tmp43 1
+  568 sensor *tmp46 :backgroundProcess:drill1 @x
+  569 sensor *tmp47 :backgroundProcess:drill1 @y
+  570 ucontrol approach *tmp46 *tmp47 2
+  571 op max *tmp48 :serviceSpot:t1 :serviceSpot:t2
+  572 op max *tmp48 *tmp48 :serviceSpot:t3
+  573 op max *tmp48 *tmp48 :serviceSpot:t4
+  574 jump *label231 notEqual :serviceSpot:t1 *tmp48
+  575 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
+  576 label *label231
+  577 label *label232
+  578 jump *label233 notEqual :serviceSpot:t2 *tmp48
+  579 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
+  580 label *label233
+  581 label *label234
+  582 jump *label235 notEqual :serviceSpot:t3 *tmp48
+  583 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
+  584 label *label235
+  585 label *label236
+  586 jump *label237 notEqual :serviceSpot:t4 *tmp48
+  587 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
+  588 label *label237
+  589 label *label238
+  590 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
+  591 op equal *tmp58 :serviceSpot:drillAmount 0
+  592 op or *tmp59 *tmp57 *tmp58
+  593 jump *label239 equal *tmp59 false
+  594 ucontrol flag 2
+  595 ucontrol approach .coreX .coreY 4
+  596 ucontrol itemDrop .core 10
+  597 jump *label242 always
+  598 label *label239
+  599 sensor *tmp61 @unit @firstItem
+  600 jump *label240 equal *tmp61 @titanium
+  601 ucontrol itemDrop @air 10
+  602 label *label240
+  603 label *label241
+  604 label *label242
+  605 jump *label246 always
+  606 label *label243
+  607 jump *label244 equal :serviceSpot:unitAmount false
+  608 ucontrol approach .coreX .coreY 4
+  609 ucontrol itemDrop .core 10
+  610 jump *label245 always
+  611 label *label244
+  612 ucontrol flag 1
+  613 label *label245
+  614 label *label246
+  615 jump *label247 always
+  616 label *label247
+  617 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
+  618 label *label248
+  619 set .units*4 :backgroundProcess:unit
+  620 set :backgroundProcess:unit .units*5
+  621 set :backgroundProcess:drill1 .drills*20
+  622 set :backgroundProcess:drill2 .drills*21
+  623 set :backgroundProcess:drill3 .drills*22
+  624 set :backgroundProcess:drill4 .drills*23
+  625 label *label251
+  626 jump *label252 notEqual :backgroundProcess:drill1 null
+  627 jump *label19 always
+  628 label *label252
+  629 label *label253
+  630 sensor *tmp11 :backgroundProcess:unit @controller
+  631 jump *label266 equal *tmp11 @this
+  632 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
+  633 ubind @flare
+  634 jump *label254 notEqual @unit null
+  635 set *tmp14 null
+  636 jump *label263 always
+  637 label *label254
+  638 label *label255
+  639 set :findFreeUnit:first_unit @unit
+  640 label *label256
+  641 sensor *tmp17 @unit @controlled
+  642 jump *label257 notEqual *tmp17 0
+  643 ucontrol flag 0
+  644 set *tmp14 @unit
+  645 jump *label263 always
+  646 jump *label260 always
+  647 label *label257
+  648 sensor *tmp20 :findFreeUnit:first_unit @dead
+  649 jump *label258 notEqual *tmp20 1
+  650 set :findFreeUnit:first_unit @unit
+  651 label *label258
+  652 label *label259
+  653 label *label260
+  654 ubind @flare
+  655 label *label261
+  656 jump *label256 notEqual :findFreeUnit:first_unit @unit
+  657 label *label262
+  658 set *tmp14 null
+  659 jump *label263 always
+  660 label *label263
+  661 set :backgroundProcess:unit *tmp14
+  662 jump *label264 notEqual *tmp14 null
+  663 sensor *tmp27 :backgroundProcess:drill1 @titanium
+  664 sensor *tmp28 :backgroundProcess:drill2 @titanium
+  665 op add *tmp29 *tmp27 *tmp28
+  666 sensor *tmp30 :backgroundProcess:drill3 @titanium
+  667 op add *tmp31 *tmp29 *tmp30
+  668 sensor *tmp32 :backgroundProcess:drill4 @titanium
+  669 op add *tmp33 *tmp31 *tmp32
+  670 op add :backgroundProcess:count :backgroundProcess:count *tmp33
+  671 jump *label285 always
+  672 label *label264
+  673 label *label265
+  674 label *label266
+  675 label *label267
+  676 ubind :backgroundProcess:unit
+  677 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
+  678 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
+  679 sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium
+  680 sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium
+  681 sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium
+  682 op add *tmp39 :serviceSpot:t1 :serviceSpot:t2
+  683 op add *tmp40 *tmp39 :serviceSpot:t3
+  684 op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4
+  685 sensor :serviceSpot:unitAmount @unit @totalItems
+  686 sensor *tmp43 @unit @flag
+  687 jump *label280 notEqual *tmp43 1
+  688 sensor *tmp46 :backgroundProcess:drill1 @x
+  689 sensor *tmp47 :backgroundProcess:drill1 @y
+  690 ucontrol approach *tmp46 *tmp47 2
+  691 op max *tmp48 :serviceSpot:t1 :serviceSpot:t2
+  692 op max *tmp48 *tmp48 :serviceSpot:t3
+  693 op max *tmp48 *tmp48 :serviceSpot:t4
+  694 jump *label268 notEqual :serviceSpot:t1 *tmp48
+  695 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
+  696 label *label268
+  697 label *label269
+  698 jump *label270 notEqual :serviceSpot:t2 *tmp48
+  699 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
+  700 label *label270
+  701 label *label271
+  702 jump *label272 notEqual :serviceSpot:t3 *tmp48
+  703 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
+  704 label *label272
+  705 label *label273
+  706 jump *label274 notEqual :serviceSpot:t4 *tmp48
+  707 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
+  708 label *label274
+  709 label *label275
+  710 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
+  711 op equal *tmp58 :serviceSpot:drillAmount 0
+  712 op or *tmp59 *tmp57 *tmp58
+  713 jump *label276 equal *tmp59 false
+  714 ucontrol flag 2
+  715 ucontrol approach .coreX .coreY 4
+  716 ucontrol itemDrop .core 10
+  717 jump *label279 always
+  718 label *label276
+  719 sensor *tmp61 @unit @firstItem
+  720 jump *label277 equal *tmp61 @titanium
+  721 ucontrol itemDrop @air 10
+  722 label *label277
+  723 label *label278
+  724 label *label279
+  725 jump *label283 always
+  726 label *label280
+  727 jump *label281 equal :serviceSpot:unitAmount false
+  728 ucontrol approach .coreX .coreY 4
+  729 ucontrol itemDrop .core 10
+  730 jump *label282 always
+  731 label *label281
+  732 ucontrol flag 1
+  733 label *label282
+  734 label *label283
+  735 jump *label284 always
+  736 label *label284
+  737 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
+  738 label *label285
+  739 set .units*5 :backgroundProcess:unit
+  740 set :backgroundProcess:unit .units*6
+  741 set :backgroundProcess:drill1 .drills*24
+  742 set :backgroundProcess:drill2 .drills*25
+  743 set :backgroundProcess:drill3 .drills*26
+  744 set :backgroundProcess:drill4 .drills*27
+  745 label *label288
+  746 jump *label289 notEqual :backgroundProcess:drill1 null
+  747 jump *label19 always
+  748 label *label289
+  749 label *label290
+  750 sensor *tmp11 :backgroundProcess:unit @controller
+  751 jump *label303 equal *tmp11 @this
+  752 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
+  753 ubind @flare
+  754 jump *label291 notEqual @unit null
+  755 set *tmp14 null
+  756 jump *label300 always
+  757 label *label291
+  758 label *label292
+  759 set :findFreeUnit:first_unit @unit
+  760 label *label293
+  761 sensor *tmp17 @unit @controlled
+  762 jump *label294 notEqual *tmp17 0
+  763 ucontrol flag 0
+  764 set *tmp14 @unit
+  765 jump *label300 always
+  766 jump *label297 always
+  767 label *label294
+  768 sensor *tmp20 :findFreeUnit:first_unit @dead
+  769 jump *label295 notEqual *tmp20 1
+  770 set :findFreeUnit:first_unit @unit
+  771 label *label295
+  772 label *label296
+  773 label *label297
+  774 ubind @flare
+  775 label *label298
+  776 jump *label293 notEqual :findFreeUnit:first_unit @unit
+  777 label *label299
+  778 set *tmp14 null
+  779 jump *label300 always
+  780 label *label300
+  781 set :backgroundProcess:unit *tmp14
+  782 jump *label301 notEqual *tmp14 null
+  783 sensor *tmp27 :backgroundProcess:drill1 @titanium
+  784 sensor *tmp28 :backgroundProcess:drill2 @titanium
+  785 op add *tmp29 *tmp27 *tmp28
+  786 sensor *tmp30 :backgroundProcess:drill3 @titanium
+  787 op add *tmp31 *tmp29 *tmp30
+  788 sensor *tmp32 :backgroundProcess:drill4 @titanium
+  789 op add *tmp33 *tmp31 *tmp32
+  790 op add :backgroundProcess:count :backgroundProcess:count *tmp33
+  791 jump *label322 always
+  792 label *label301
+  793 label *label302
+  794 label *label303
+  795 label *label304
+  796 ubind :backgroundProcess:unit
+  797 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
+  798 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
+  799 sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium
+  800 sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium
+  801 sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium
+  802 op add *tmp39 :serviceSpot:t1 :serviceSpot:t2
+  803 op add *tmp40 *tmp39 :serviceSpot:t3
+  804 op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4
+  805 sensor :serviceSpot:unitAmount @unit @totalItems
+  806 sensor *tmp43 @unit @flag
+  807 jump *label317 notEqual *tmp43 1
+  808 sensor *tmp46 :backgroundProcess:drill1 @x
+  809 sensor *tmp47 :backgroundProcess:drill1 @y
+  810 ucontrol approach *tmp46 *tmp47 2
+  811 op max *tmp48 :serviceSpot:t1 :serviceSpot:t2
+  812 op max *tmp48 *tmp48 :serviceSpot:t3
+  813 op max *tmp48 *tmp48 :serviceSpot:t4
+  814 jump *label305 notEqual :serviceSpot:t1 *tmp48
+  815 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
+  816 label *label305
+  817 label *label306
+  818 jump *label307 notEqual :serviceSpot:t2 *tmp48
+  819 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
+  820 label *label307
+  821 label *label308
+  822 jump *label309 notEqual :serviceSpot:t3 *tmp48
+  823 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
+  824 label *label309
+  825 label *label310
+  826 jump *label311 notEqual :serviceSpot:t4 *tmp48
+  827 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
+  828 label *label311
+  829 label *label312
+  830 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
+  831 op equal *tmp58 :serviceSpot:drillAmount 0
+  832 op or *tmp59 *tmp57 *tmp58
+  833 jump *label313 equal *tmp59 false
+  834 ucontrol flag 2
+  835 ucontrol approach .coreX .coreY 4
+  836 ucontrol itemDrop .core 10
+  837 jump *label316 always
+  838 label *label313
+  839 sensor *tmp61 @unit @firstItem
+  840 jump *label314 equal *tmp61 @titanium
+  841 ucontrol itemDrop @air 10
+  842 label *label314
+  843 label *label315
+  844 label *label316
+  845 jump *label320 always
+  846 label *label317
+  847 jump *label318 equal :serviceSpot:unitAmount false
+  848 ucontrol approach .coreX .coreY 4
+  849 ucontrol itemDrop .core 10
+  850 jump *label319 always
+  851 label *label318
+  852 ucontrol flag 1
+  853 label *label319
+  854 label *label320
+  855 jump *label321 always
+  856 label *label321
+  857 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
+  858 label *label322
+  859 set .units*6 :backgroundProcess:unit
+  860 set :backgroundProcess:unit .units*7
+  861 set :backgroundProcess:drill1 .drills*28
+  862 set :backgroundProcess:drill2 .drills*29
+  863 set :backgroundProcess:drill3 .drills*30
+  864 set :backgroundProcess:drill4 .drills*31
+  865 label *label325
+  866 jump *label326 notEqual :backgroundProcess:drill1 null
+  867 jump *label19 always
+  868 label *label326
+  869 label *label327
+  870 sensor *tmp11 :backgroundProcess:unit @controller
+  871 jump *label340 equal *tmp11 @this
+  872 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
+  873 ubind @flare
+  874 jump *label328 notEqual @unit null
+  875 set *tmp14 null
+  876 jump *label337 always
+  877 label *label328
+  878 label *label329
+  879 set :findFreeUnit:first_unit @unit
+  880 label *label330
+  881 sensor *tmp17 @unit @controlled
+  882 jump *label331 notEqual *tmp17 0
+  883 ucontrol flag 0
+  884 set *tmp14 @unit
+  885 jump *label337 always
+  886 jump *label334 always
+  887 label *label331
+  888 sensor *tmp20 :findFreeUnit:first_unit @dead
+  889 jump *label332 notEqual *tmp20 1
+  890 set :findFreeUnit:first_unit @unit
+  891 label *label332
+  892 label *label333
+  893 label *label334
+  894 ubind @flare
+  895 label *label335
+  896 jump *label330 notEqual :findFreeUnit:first_unit @unit
+  897 label *label336
+  898 set *tmp14 null
+  899 jump *label337 always
+  900 label *label337
+  901 set :backgroundProcess:unit *tmp14
+  902 jump *label338 notEqual *tmp14 null
+  903 sensor *tmp27 :backgroundProcess:drill1 @titanium
+  904 sensor *tmp28 :backgroundProcess:drill2 @titanium
+  905 op add *tmp29 *tmp27 *tmp28
+  906 sensor *tmp30 :backgroundProcess:drill3 @titanium
+  907 op add *tmp31 *tmp29 *tmp30
+  908 sensor *tmp32 :backgroundProcess:drill4 @titanium
+  909 op add *tmp33 *tmp31 *tmp32
+  910 op add :backgroundProcess:count :backgroundProcess:count *tmp33
+  911 jump *label359 always
+  912 label *label338
+  913 label *label339
+  914 label *label340
+  915 label *label341
+  916 ubind :backgroundProcess:unit
+  917 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
+  918 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
+  919 sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium
+  920 sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium
+  921 sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium
+  922 op add *tmp39 :serviceSpot:t1 :serviceSpot:t2
+  923 op add *tmp40 *tmp39 :serviceSpot:t3
+  924 op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4
+  925 sensor :serviceSpot:unitAmount @unit @totalItems
+  926 sensor *tmp43 @unit @flag
+  927 jump *label354 notEqual *tmp43 1
+  928 sensor *tmp46 :backgroundProcess:drill1 @x
+  929 sensor *tmp47 :backgroundProcess:drill1 @y
+  930 ucontrol approach *tmp46 *tmp47 2
+  931 op max *tmp48 :serviceSpot:t1 :serviceSpot:t2
+  932 op max *tmp48 *tmp48 :serviceSpot:t3
+  933 op max *tmp48 *tmp48 :serviceSpot:t4
+  934 jump *label342 notEqual :serviceSpot:t1 *tmp48
+  935 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
+  936 label *label342
+  937 label *label343
+  938 jump *label344 notEqual :serviceSpot:t2 *tmp48
+  939 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
+  940 label *label344
+  941 label *label345
+  942 jump *label346 notEqual :serviceSpot:t3 *tmp48
+  943 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
+  944 label *label346
+  945 label *label347
+  946 jump *label348 notEqual :serviceSpot:t4 *tmp48
+  947 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
+  948 label *label348
+  949 label *label349
+  950 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
+  951 op equal *tmp58 :serviceSpot:drillAmount 0
+  952 op or *tmp59 *tmp57 *tmp58
+  953 jump *label350 equal *tmp59 false
+  954 ucontrol flag 2
+  955 ucontrol approach .coreX .coreY 4
+  956 ucontrol itemDrop .core 10
+  957 jump *label353 always
+  958 label *label350
+  959 sensor *tmp61 @unit @firstItem
+  960 jump *label351 equal *tmp61 @titanium
+  961 ucontrol itemDrop @air 10
+  962 label *label351
+  963 label *label352
+  964 label *label353
+  965 jump *label357 always
+  966 label *label354
+  967 jump *label355 equal :serviceSpot:unitAmount false
+  968 ucontrol approach .coreX .coreY 4
+  969 ucontrol itemDrop .core 10
+  970 jump *label356 always
+  971 label *label355
+  972 ucontrol flag 1
+  973 label *label356
+  974 label *label357
+  975 jump *label358 always
+  976 label *label358
+  977 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
+  978 label *label359
+  979 set .units*7 :backgroundProcess:unit
+  980 set :backgroundProcess:unit .units*8
+  981 set :backgroundProcess:drill1 .drills*32
+  982 set :backgroundProcess:drill2 .drills*33
+  983 set :backgroundProcess:drill3 .drills*34
+  984 set :backgroundProcess:drill4 .drills*35
+  985 label *label362
+  986 jump *label363 notEqual :backgroundProcess:drill1 null
+  987 jump *label19 always
+  988 label *label363
+  989 label *label364
+  990 sensor *tmp11 :backgroundProcess:unit @controller
+  991 jump *label377 equal *tmp11 @this
+  992 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
+  993 ubind @flare
+  994 jump *label365 notEqual @unit null
+  995 set *tmp14 null
+  996 jump *label374 always
+  997 label *label365
+  998 label *label366
+  999 set :findFreeUnit:first_unit @unit
+ 1000 label *label367
+ 1001 sensor *tmp17 @unit @controlled
+ 1002 jump *label368 notEqual *tmp17 0
+ 1003 ucontrol flag 0
+ 1004 set *tmp14 @unit
+ 1005 jump *label374 always
+ 1006 jump *label371 always
+ 1007 label *label368
+ 1008 sensor *tmp20 :findFreeUnit:first_unit @dead
+ 1009 jump *label369 notEqual *tmp20 1
+ 1010 set :findFreeUnit:first_unit @unit
+ 1011 label *label369
+ 1012 label *label370
+ 1013 label *label371
+ 1014 ubind @flare
+ 1015 label *label372
+ 1016 jump *label367 notEqual :findFreeUnit:first_unit @unit
+ 1017 label *label373
+ 1018 set *tmp14 null
+ 1019 jump *label374 always
+ 1020 label *label374
+ 1021 set :backgroundProcess:unit *tmp14
+ 1022 jump *label375 notEqual *tmp14 null
+ 1023 sensor *tmp27 :backgroundProcess:drill1 @titanium
+ 1024 sensor *tmp28 :backgroundProcess:drill2 @titanium
+ 1025 op add *tmp29 *tmp27 *tmp28
+ 1026 sensor *tmp30 :backgroundProcess:drill3 @titanium
+ 1027 op add *tmp31 *tmp29 *tmp30
+ 1028 sensor *tmp32 :backgroundProcess:drill4 @titanium
+ 1029 op add *tmp33 *tmp31 *tmp32
+ 1030 op add :backgroundProcess:count :backgroundProcess:count *tmp33
+ 1031 jump *label396 always
+ 1032 label *label375
+ 1033 label *label376
+ 1034 label *label377
+ 1035 label *label378
+ 1036 ubind :backgroundProcess:unit
+ 1037 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
+ 1038 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
+ 1039 sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium
+ 1040 sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium
+ 1041 sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium
+ 1042 op add *tmp39 :serviceSpot:t1 :serviceSpot:t2
+ 1043 op add *tmp40 *tmp39 :serviceSpot:t3
+ 1044 op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4
+ 1045 sensor :serviceSpot:unitAmount @unit @totalItems
+ 1046 sensor *tmp43 @unit @flag
+ 1047 jump *label391 notEqual *tmp43 1
+ 1048 sensor *tmp46 :backgroundProcess:drill1 @x
+ 1049 sensor *tmp47 :backgroundProcess:drill1 @y
+ 1050 ucontrol approach *tmp46 *tmp47 2
+ 1051 op max *tmp48 :serviceSpot:t1 :serviceSpot:t2
+ 1052 op max *tmp48 *tmp48 :serviceSpot:t3
+ 1053 op max *tmp48 *tmp48 :serviceSpot:t4
+ 1054 jump *label379 notEqual :serviceSpot:t1 *tmp48
+ 1055 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
+ 1056 label *label379
+ 1057 label *label380
+ 1058 jump *label381 notEqual :serviceSpot:t2 *tmp48
+ 1059 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
+ 1060 label *label381
+ 1061 label *label382
+ 1062 jump *label383 notEqual :serviceSpot:t3 *tmp48
+ 1063 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
+ 1064 label *label383
+ 1065 label *label384
+ 1066 jump *label385 notEqual :serviceSpot:t4 *tmp48
+ 1067 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
+ 1068 label *label385
+ 1069 label *label386
+ 1070 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
+ 1071 op equal *tmp58 :serviceSpot:drillAmount 0
+ 1072 op or *tmp59 *tmp57 *tmp58
+ 1073 jump *label387 equal *tmp59 false
+ 1074 ucontrol flag 2
+ 1075 ucontrol approach .coreX .coreY 4
+ 1076 ucontrol itemDrop .core 10
+ 1077 jump *label390 always
+ 1078 label *label387
+ 1079 sensor *tmp61 @unit @firstItem
+ 1080 jump *label388 equal *tmp61 @titanium
+ 1081 ucontrol itemDrop @air 10
+ 1082 label *label388
+ 1083 label *label389
+ 1084 label *label390
+ 1085 jump *label394 always
+ 1086 label *label391
+ 1087 jump *label392 equal :serviceSpot:unitAmount false
+ 1088 ucontrol approach .coreX .coreY 4
+ 1089 ucontrol itemDrop .core 10
+ 1090 jump *label393 always
+ 1091 label *label392
+ 1092 ucontrol flag 1
+ 1093 label *label393
+ 1094 label *label394
+ 1095 jump *label395 always
+ 1096 label *label395
+ 1097 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
+ 1098 label *label396
+ 1099 set .units*8 :backgroundProcess:unit
+ 1100 set :backgroundProcess:unit .units*9
+ 1101 set :backgroundProcess:drill1 .drills*36
+ 1102 set :backgroundProcess:drill2 .drills*37
+ 1103 set :backgroundProcess:drill3 .drills*38
+ 1104 set :backgroundProcess:drill4 .drills*39
+ 1105 label *label399
+ 1106 jump *label400 notEqual :backgroundProcess:drill1 null
+ 1107 jump *label19 always
+ 1108 label *label400
+ 1109 label *label401
+ 1110 sensor *tmp11 :backgroundProcess:unit @controller
+ 1111 jump *label414 equal *tmp11 @this
+ 1112 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
+ 1113 ubind @flare
+ 1114 jump *label402 notEqual @unit null
+ 1115 set *tmp14 null
+ 1116 jump *label411 always
+ 1117 label *label402
+ 1118 label *label403
+ 1119 set :findFreeUnit:first_unit @unit
+ 1120 label *label404
+ 1121 sensor *tmp17 @unit @controlled
+ 1122 jump *label405 notEqual *tmp17 0
+ 1123 ucontrol flag 0
+ 1124 set *tmp14 @unit
+ 1125 jump *label411 always
+ 1126 jump *label408 always
+ 1127 label *label405
+ 1128 sensor *tmp20 :findFreeUnit:first_unit @dead
+ 1129 jump *label406 notEqual *tmp20 1
+ 1130 set :findFreeUnit:first_unit @unit
+ 1131 label *label406
+ 1132 label *label407
+ 1133 label *label408
+ 1134 ubind @flare
+ 1135 label *label409
+ 1136 jump *label404 notEqual :findFreeUnit:first_unit @unit
+ 1137 label *label410
+ 1138 set *tmp14 null
+ 1139 jump *label411 always
+ 1140 label *label411
+ 1141 set :backgroundProcess:unit *tmp14
+ 1142 jump *label412 notEqual *tmp14 null
+ 1143 sensor *tmp27 :backgroundProcess:drill1 @titanium
+ 1144 sensor *tmp28 :backgroundProcess:drill2 @titanium
+ 1145 op add *tmp29 *tmp27 *tmp28
+ 1146 sensor *tmp30 :backgroundProcess:drill3 @titanium
+ 1147 op add *tmp31 *tmp29 *tmp30
+ 1148 sensor *tmp32 :backgroundProcess:drill4 @titanium
+ 1149 op add *tmp33 *tmp31 *tmp32
+ 1150 op add :backgroundProcess:count :backgroundProcess:count *tmp33
+ 1151 jump *label433 always
+ 1152 label *label412
+ 1153 label *label413
+ 1154 label *label414
+ 1155 label *label415
+ 1156 ubind :backgroundProcess:unit
+ 1157 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
+ 1158 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
+ 1159 sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium
+ 1160 sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium
+ 1161 sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium
+ 1162 op add *tmp39 :serviceSpot:t1 :serviceSpot:t2
+ 1163 op add *tmp40 *tmp39 :serviceSpot:t3
+ 1164 op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4
+ 1165 sensor :serviceSpot:unitAmount @unit @totalItems
+ 1166 sensor *tmp43 @unit @flag
+ 1167 jump *label428 notEqual *tmp43 1
+ 1168 sensor *tmp46 :backgroundProcess:drill1 @x
+ 1169 sensor *tmp47 :backgroundProcess:drill1 @y
+ 1170 ucontrol approach *tmp46 *tmp47 2
+ 1171 op max *tmp48 :serviceSpot:t1 :serviceSpot:t2
+ 1172 op max *tmp48 *tmp48 :serviceSpot:t3
+ 1173 op max *tmp48 *tmp48 :serviceSpot:t4
+ 1174 jump *label416 notEqual :serviceSpot:t1 *tmp48
+ 1175 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
+ 1176 label *label416
+ 1177 label *label417
+ 1178 jump *label418 notEqual :serviceSpot:t2 *tmp48
+ 1179 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
+ 1180 label *label418
+ 1181 label *label419
+ 1182 jump *label420 notEqual :serviceSpot:t3 *tmp48
+ 1183 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
+ 1184 label *label420
+ 1185 label *label421
+ 1186 jump *label422 notEqual :serviceSpot:t4 *tmp48
+ 1187 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
+ 1188 label *label422
+ 1189 label *label423
+ 1190 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
+ 1191 op equal *tmp58 :serviceSpot:drillAmount 0
+ 1192 op or *tmp59 *tmp57 *tmp58
+ 1193 jump *label424 equal *tmp59 false
+ 1194 ucontrol flag 2
+ 1195 ucontrol approach .coreX .coreY 4
+ 1196 ucontrol itemDrop .core 10
+ 1197 jump *label427 always
+ 1198 label *label424
+ 1199 sensor *tmp61 @unit @firstItem
+ 1200 jump *label425 equal *tmp61 @titanium
+ 1201 ucontrol itemDrop @air 10
+ 1202 label *label425
+ 1203 label *label426
+ 1204 label *label427
+ 1205 jump *label431 always
+ 1206 label *label428
+ 1207 jump *label429 equal :serviceSpot:unitAmount false
+ 1208 ucontrol approach .coreX .coreY 4
+ 1209 ucontrol itemDrop .core 10
+ 1210 jump *label430 always
+ 1211 label *label429
+ 1212 ucontrol flag 1
+ 1213 label *label430
+ 1214 label *label431
+ 1215 jump *label432 always
+ 1216 label *label432
+ 1217 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
+ 1218 label *label433
+ 1219 set .units*9 :backgroundProcess:unit
+ 1220 label *label19
  1221 write :backgroundProcess:count processor1 ".titaniumDrillCount"
  1222 label *label15
  1223 jump *label14 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    67 op add *tmp31 *tmp29 *tmp30
    68 sensor *tmp32 :backgroundProcess:drill4 @titanium
    69 op add *tmp33 *tmp31 *tmp32
-    * op add :backgroundProcess:count :backgroundProcess:count *tmp33
+   70 op add :backgroundProcess:count 0 *tmp33
    71 jump *label100 always
    72 label *label79
    73 label *label80
 
   134 label *label98
   135 jump *label99 always
   136 label *label99
-    * op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
+  137 op add :backgroundProcess:count 0 :serviceSpot:drillAmount
   138 label *label100
   139 set .units*0 :backgroundProcess:unit
   140 set :backgroundProcess:unit .units*1

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-20 instructions):
 
    56 jump *label71 notEqual :findFreeUnit:first_unit @unit
    57 label *label77
    58 set *tmp14 null
-    * jump *label78 always
    59 label *label78
    60 set :backgroundProcess:unit *tmp14
    61 jump *label79 notEqual *tmp14 null
 
   131 ucontrol flag 1
   132 label *label97
   133 label *label98
-    * jump *label99 always
   134 label *label99
   135 op add :backgroundProcess:count 0 :serviceSpot:drillAmount
   136 label *label100
 
   174 jump *label108 notEqual :findFreeUnit:first_unit @unit
   175 label *label114
   176 set *tmp14 null
-    * jump *label115 always
   177 label *label115
   178 set :backgroundProcess:unit *tmp14
   179 jump *label116 notEqual *tmp14 null
 
   249 ucontrol flag 1
   250 label *label134
   251 label *label135
-    * jump *label136 always
   252 label *label136
   253 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   254 label *label137
 
   292 jump *label145 notEqual :findFreeUnit:first_unit @unit
   293 label *label151
   294 set *tmp14 null
-    * jump *label152 always
   295 label *label152
   296 set :backgroundProcess:unit *tmp14
   297 jump *label153 notEqual *tmp14 null
 
   367 ucontrol flag 1
   368 label *label171
   369 label *label172
-    * jump *label173 always
   370 label *label173
   371 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   372 label *label174
 
   410 jump *label182 notEqual :findFreeUnit:first_unit @unit
   411 label *label188
   412 set *tmp14 null
-    * jump *label189 always
   413 label *label189
   414 set :backgroundProcess:unit *tmp14
   415 jump *label190 notEqual *tmp14 null
 
   485 ucontrol flag 1
   486 label *label208
   487 label *label209
-    * jump *label210 always
   488 label *label210
   489 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   490 label *label211
 
   528 jump *label219 notEqual :findFreeUnit:first_unit @unit
   529 label *label225
   530 set *tmp14 null
-    * jump *label226 always
   531 label *label226
   532 set :backgroundProcess:unit *tmp14
   533 jump *label227 notEqual *tmp14 null
 
   603 ucontrol flag 1
   604 label *label245
   605 label *label246
-    * jump *label247 always
   606 label *label247
   607 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   608 label *label248
 
   646 jump *label256 notEqual :findFreeUnit:first_unit @unit
   647 label *label262
   648 set *tmp14 null
-    * jump *label263 always
   649 label *label263
   650 set :backgroundProcess:unit *tmp14
   651 jump *label264 notEqual *tmp14 null
 
   721 ucontrol flag 1
   722 label *label282
   723 label *label283
-    * jump *label284 always
   724 label *label284
   725 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   726 label *label285
 
   764 jump *label293 notEqual :findFreeUnit:first_unit @unit
   765 label *label299
   766 set *tmp14 null
-    * jump *label300 always
   767 label *label300
   768 set :backgroundProcess:unit *tmp14
   769 jump *label301 notEqual *tmp14 null
 
   839 ucontrol flag 1
   840 label *label319
   841 label *label320
-    * jump *label321 always
   842 label *label321
   843 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   844 label *label322
 
   882 jump *label330 notEqual :findFreeUnit:first_unit @unit
   883 label *label336
   884 set *tmp14 null
-    * jump *label337 always
   885 label *label337
   886 set :backgroundProcess:unit *tmp14
   887 jump *label338 notEqual *tmp14 null
 
   957 ucontrol flag 1
   958 label *label356
   959 label *label357
-    * jump *label358 always
   960 label *label358
   961 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   962 label *label359
 
  1000 jump *label367 notEqual :findFreeUnit:first_unit @unit
  1001 label *label373
  1002 set *tmp14 null
-    * jump *label374 always
  1003 label *label374
  1004 set :backgroundProcess:unit *tmp14
  1005 jump *label375 notEqual *tmp14 null
 
  1075 ucontrol flag 1
  1076 label *label393
  1077 label *label394
-    * jump *label395 always
  1078 label *label395
  1079 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
  1080 label *label396
 
  1118 jump *label404 notEqual :findFreeUnit:first_unit @unit
  1119 label *label410
  1120 set *tmp14 null
-    * jump *label411 always
  1121 label *label411
  1122 set :backgroundProcess:unit *tmp14
  1123 jump *label412 notEqual *tmp14 null
 
  1193 ucontrol flag 1
  1194 label *label430
  1195 label *label431
-    * jump *label432 always
  1196 label *label432
  1197 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
  1198 label *label433

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    66 op add *tmp31 *tmp29 *tmp30
    67 sensor *tmp32 :backgroundProcess:drill4 @titanium
    68 op add *tmp33 *tmp31 *tmp32
-    * op add :backgroundProcess:count 0 *tmp33
+   69 set :backgroundProcess:count *tmp33
    70 jump *label100 always
    71 label *label79
    72 label *label80
 
   132 label *label97
   133 label *label98
   134 label *label99
-    * op add :backgroundProcess:count 0 :serviceSpot:drillAmount
+  135 set :backgroundProcess:count :serviceSpot:drillAmount
   136 label *label100
   137 set .units*0 :backgroundProcess:unit
   138 set :backgroundProcess:unit .units*1

Modifications by Virtual Instruction Expansion:
 
  1212 op mul :addTitaniumDrills:i .spotCount 4
  1213 set *tmp68 :addTitaniumDrills:i
  1214 op add :addTitaniumDrills:i :addTitaniumDrills:i 1
-    * writearr<regular> :addTitaniumDrills:d1 .drills[] *tmp68
+ 1215 set .drills*w :addTitaniumDrills:d1
+ 1216 op mul .drills*wind *tmp68 2
+ 1217 call *label438 .drills*wret *invalid
  1218 set *tmp71 :addTitaniumDrills:i
  1219 op add :addTitaniumDrills:i :addTitaniumDrills:i 1
-    * writearr<regular> :addTitaniumDrills:d2 .drills[] *tmp71
+ 1220 set .drills*w :addTitaniumDrills:d2
+ 1221 op mul .drills*wind *tmp71 2
+ 1222 call *label438 .drills*wret *invalid
  1223 set *tmp74 :addTitaniumDrills:i
  1224 op add :addTitaniumDrills:i :addTitaniumDrills:i 1
-    * writearr<regular> :addTitaniumDrills:d3 .drills[] *tmp74
-    * writearr<regular> :addTitaniumDrills:d4 .drills[] :addTitaniumDrills:i
+ 1225 set .drills*w :addTitaniumDrills:d3
+ 1226 op mul .drills*wind *tmp74 2
+ 1227 call *label438 .drills*wret *invalid
+ 1228 set .drills*w :addTitaniumDrills:d4
+ 1229 op mul .drills*wind :addTitaniumDrills:i 2
+ 1230 call *label438 .drills*wret *invalid
  1231 op add .spotCount .spotCount 1
  1232 label *label64
  1233 label *label65
 
  1235 set :addTitaniumDrills*finished true
  1236 jump *label7 always
  1237 end
+ 1238 label *label438 (m:*label438)
+ 1239 multijump *label437 .drills*wind 0 (m:marker1)
+ 1240 multilabel *label437 (m:marker1)
+ 1241 set .drills*0 .drills*w
+ 1242 return .drills*wret
+ 1243 multilabel *label439 (m:marker1)
+ 1244 set .drills*1 .drills*w
+ 1245 return .drills*wret
+ 1246 multilabel *label440 (m:marker1)
+ 1247 set .drills*2 .drills*w
+ 1248 return .drills*wret
+ 1249 multilabel *label441 (m:marker1)
+ 1250 set .drills*3 .drills*w
+ 1251 return .drills*wret
+ 1252 multilabel *label442 (m:marker1)
+ 1253 set .drills*4 .drills*w
+ 1254 return .drills*wret
+ 1255 multilabel *label443 (m:marker1)
+ 1256 set .drills*5 .drills*w
+ 1257 return .drills*wret
+ 1258 multilabel *label444 (m:marker1)
+ 1259 set .drills*6 .drills*w
+ 1260 return .drills*wret
+ 1261 multilabel *label445 (m:marker1)
+ 1262 set .drills*7 .drills*w
+ 1263 return .drills*wret
+ 1264 multilabel *label446 (m:marker1)
+ 1265 set .drills*8 .drills*w
+ 1266 return .drills*wret
+ 1267 multilabel *label447 (m:marker1)
+ 1268 set .drills*9 .drills*w
+ 1269 return .drills*wret
+ 1270 multilabel *label448 (m:marker1)
+ 1271 set .drills*10 .drills*w
+ 1272 return .drills*wret
+ 1273 multilabel *label449 (m:marker1)
+ 1274 set .drills*11 .drills*w
+ 1275 return .drills*wret
+ 1276 multilabel *label450 (m:marker1)
+ 1277 set .drills*12 .drills*w
+ 1278 return .drills*wret
+ 1279 multilabel *label451 (m:marker1)
+ 1280 set .drills*13 .drills*w
+ 1281 return .drills*wret
+ 1282 multilabel *label452 (m:marker1)
+ 1283 set .drills*14 .drills*w
+ 1284 return .drills*wret
+ 1285 multilabel *label453 (m:marker1)
+ 1286 set .drills*15 .drills*w
+ 1287 return .drills*wret
+ 1288 multilabel *label454 (m:marker1)
+ 1289 set .drills*16 .drills*w
+ 1290 return .drills*wret
+ 1291 multilabel *label455 (m:marker1)
+ 1292 set .drills*17 .drills*w
+ 1293 return .drills*wret
+ 1294 multilabel *label456 (m:marker1)
+ 1295 set .drills*18 .drills*w
+ 1296 return .drills*wret
+ 1297 multilabel *label457 (m:marker1)
+ 1298 set .drills*19 .drills*w
+ 1299 return .drills*wret
+ 1300 multilabel *label458 (m:marker1)
+ 1301 set .drills*20 .drills*w
+ 1302 return .drills*wret
+ 1303 multilabel *label459 (m:marker1)
+ 1304 set .drills*21 .drills*w
+ 1305 return .drills*wret
+ 1306 multilabel *label460 (m:marker1)
+ 1307 set .drills*22 .drills*w
+ 1308 return .drills*wret
+ 1309 multilabel *label461 (m:marker1)
+ 1310 set .drills*23 .drills*w
+ 1311 return .drills*wret
+ 1312 multilabel *label462 (m:marker1)
+ 1313 set .drills*24 .drills*w
+ 1314 return .drills*wret
+ 1315 multilabel *label463 (m:marker1)
+ 1316 set .drills*25 .drills*w
+ 1317 return .drills*wret
+ 1318 multilabel *label464 (m:marker1)
+ 1319 set .drills*26 .drills*w
+ 1320 return .drills*wret
+ 1321 multilabel *label465 (m:marker1)
+ 1322 set .drills*27 .drills*w
+ 1323 return .drills*wret
+ 1324 multilabel *label466 (m:marker1)
+ 1325 set .drills*28 .drills*w
+ 1326 return .drills*wret
+ 1327 multilabel *label467 (m:marker1)
+ 1328 set .drills*29 .drills*w
+ 1329 return .drills*wret
+ 1330 multilabel *label468 (m:marker1)
+ 1331 set .drills*30 .drills*w
+ 1332 return .drills*wret
+ 1333 multilabel *label469 (m:marker1)
+ 1334 set .drills*31 .drills*w
+ 1335 return .drills*wret
+ 1336 multilabel *label470 (m:marker1)
+ 1337 set .drills*32 .drills*w
+ 1338 return .drills*wret
+ 1339 multilabel *label471 (m:marker1)
+ 1340 set .drills*33 .drills*w
+ 1341 return .drills*wret
+ 1342 multilabel *label472 (m:marker1)
+ 1343 set .drills*34 .drills*w
+ 1344 return .drills*wret
+ 1345 multilabel *label473 (m:marker1)
+ 1346 set .drills*35 .drills*w
+ 1347 return .drills*wret
+ 1348 multilabel *label474 (m:marker1)
+ 1349 set .drills*36 .drills*w
+ 1350 return .drills*wret
+ 1351 multilabel *label475 (m:marker1)
+ 1352 set .drills*37 .drills*w
+ 1353 return .drills*wret
+ 1354 multilabel *label476 (m:marker1)
+ 1355 set .drills*38 .drills*w
+ 1356 return .drills*wret
+ 1357 multilabel *label477 (m:marker1)
+ 1358 set .drills*39 .drills*w
+ 1359 return .drills*wret

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
     8 label *label11
     9 ubind @flare
    10 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label12
    11 jump *label11 equal .core null
-    * label *label13
    12 sensor .coreX .core @x
    13 sensor .coreY .core @y
    14 label *label9
-    * label *label10
    15 label *label14
    16 set :backgroundProcess:count 0
    17 set :backgroundProcess:unit .units*0
 
    19 set :backgroundProcess:drill2 .drills*1
    20 set :backgroundProcess:drill3 .drills*2
    21 set :backgroundProcess:drill4 .drills*3
-    * label *label66
    22 jump *label67 notEqual :backgroundProcess:drill1 null
    23 jump *label19 always
    24 label *label67
-    * label *label68
    25 sensor *tmp11 :backgroundProcess:unit @controller
    26 jump *label81 equal *tmp11 @this
    27 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
    30 set *tmp14 null
    31 jump *label78 always
    32 label *label69
-    * label *label70
    33 set :findFreeUnit:first_unit @unit
    34 label *label71
    35 sensor *tmp17 @unit @controlled
 
    43 jump *label73 notEqual *tmp20 1
    44 set :findFreeUnit:first_unit @unit
    45 label *label73
-    * label *label74
    46 label *label75
    47 ubind @flare
-    * label *label76
    48 jump *label71 notEqual :findFreeUnit:first_unit @unit
-    * label *label77
    49 set *tmp14 null
    50 label *label78
    51 set :backgroundProcess:unit *tmp14
 
    60 set :backgroundProcess:count *tmp33
    61 jump *label100 always
    62 label *label79
-    * label *label80
    63 label *label81
-    * label *label82
    64 ubind :backgroundProcess:unit
    65 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
    66 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
 
    82 jump *label83 notEqual :serviceSpot:t1 *tmp48
    83 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
    84 label *label83
-    * label *label84
    85 jump *label85 notEqual :serviceSpot:t2 *tmp48
    86 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
    87 label *label85
-    * label *label86
    88 jump *label87 notEqual :serviceSpot:t3 *tmp48
    89 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
    90 label *label87
-    * label *label88
    91 jump *label89 notEqual :serviceSpot:t4 *tmp48
    92 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
    93 label *label89
-    * label *label90
    94 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
    95 op equal *tmp58 :serviceSpot:drillAmount 0
    96 op or *tmp59 *tmp57 *tmp58
 
   104 jump *label92 equal *tmp61 @titanium
   105 ucontrol itemDrop @air 10
   106 label *label92
-    * label *label93
   107 label *label94
   108 jump *label98 always
   109 label *label95
 
   115 ucontrol flag 1
   116 label *label97
   117 label *label98
-    * label *label99
   118 set :backgroundProcess:count :serviceSpot:drillAmount
   119 label *label100
   120 set .units*0 :backgroundProcess:unit
 
   123 set :backgroundProcess:drill2 .drills*5
   124 set :backgroundProcess:drill3 .drills*6
   125 set :backgroundProcess:drill4 .drills*7
-    * label *label103
   126 jump *label104 notEqual :backgroundProcess:drill1 null
   127 jump *label19 always
   128 label *label104
-    * label *label105
   129 sensor *tmp11 :backgroundProcess:unit @controller
   130 jump *label118 equal *tmp11 @this
   131 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   134 set *tmp14 null
   135 jump *label115 always
   136 label *label106
-    * label *label107
   137 set :findFreeUnit:first_unit @unit
   138 label *label108
   139 sensor *tmp17 @unit @controlled
 
   147 jump *label110 notEqual *tmp20 1
   148 set :findFreeUnit:first_unit @unit
   149 label *label110
-    * label *label111
   150 label *label112
   151 ubind @flare
-    * label *label113
   152 jump *label108 notEqual :findFreeUnit:first_unit @unit
-    * label *label114
   153 set *tmp14 null
   154 label *label115
   155 set :backgroundProcess:unit *tmp14
 
   164 op add :backgroundProcess:count :backgroundProcess:count *tmp33
   165 jump *label137 always
   166 label *label116
-    * label *label117
   167 label *label118
-    * label *label119
   168 ubind :backgroundProcess:unit
   169 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
   170 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
 
   186 jump *label120 notEqual :serviceSpot:t1 *tmp48
   187 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
   188 label *label120
-    * label *label121
   189 jump *label122 notEqual :serviceSpot:t2 *tmp48
   190 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
   191 label *label122
-    * label *label123
   192 jump *label124 notEqual :serviceSpot:t3 *tmp48
   193 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
   194 label *label124
-    * label *label125
   195 jump *label126 notEqual :serviceSpot:t4 *tmp48
   196 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
   197 label *label126
-    * label *label127
   198 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
   199 op equal *tmp58 :serviceSpot:drillAmount 0
   200 op or *tmp59 *tmp57 *tmp58
 
   208 jump *label129 equal *tmp61 @titanium
   209 ucontrol itemDrop @air 10
   210 label *label129
-    * label *label130
   211 label *label131
   212 jump *label135 always
   213 label *label132
 
   219 ucontrol flag 1
   220 label *label134
   221 label *label135
-    * label *label136
   222 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   223 label *label137
   224 set .units*1 :backgroundProcess:unit
 
   227 set :backgroundProcess:drill2 .drills*9
   228 set :backgroundProcess:drill3 .drills*10
   229 set :backgroundProcess:drill4 .drills*11
-    * label *label140
   230 jump *label141 notEqual :backgroundProcess:drill1 null
   231 jump *label19 always
   232 label *label141
-    * label *label142
   233 sensor *tmp11 :backgroundProcess:unit @controller
   234 jump *label155 equal *tmp11 @this
   235 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   238 set *tmp14 null
   239 jump *label152 always
   240 label *label143
-    * label *label144
   241 set :findFreeUnit:first_unit @unit
   242 label *label145
   243 sensor *tmp17 @unit @controlled
 
   251 jump *label147 notEqual *tmp20 1
   252 set :findFreeUnit:first_unit @unit
   253 label *label147
-    * label *label148
   254 label *label149
   255 ubind @flare
-    * label *label150
   256 jump *label145 notEqual :findFreeUnit:first_unit @unit
-    * label *label151
   257 set *tmp14 null
   258 label *label152
   259 set :backgroundProcess:unit *tmp14
 
   268 op add :backgroundProcess:count :backgroundProcess:count *tmp33
   269 jump *label174 always
   270 label *label153
-    * label *label154
   271 label *label155
-    * label *label156
   272 ubind :backgroundProcess:unit
   273 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
   274 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
 
   290 jump *label157 notEqual :serviceSpot:t1 *tmp48
   291 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
   292 label *label157
-    * label *label158
   293 jump *label159 notEqual :serviceSpot:t2 *tmp48
   294 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
   295 label *label159
-    * label *label160
   296 jump *label161 notEqual :serviceSpot:t3 *tmp48
   297 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
   298 label *label161
-    * label *label162
   299 jump *label163 notEqual :serviceSpot:t4 *tmp48
   300 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
   301 label *label163
-    * label *label164
   302 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
   303 op equal *tmp58 :serviceSpot:drillAmount 0
   304 op or *tmp59 *tmp57 *tmp58
 
   312 jump *label166 equal *tmp61 @titanium
   313 ucontrol itemDrop @air 10
   314 label *label166
-    * label *label167
   315 label *label168
   316 jump *label172 always
   317 label *label169
 
   323 ucontrol flag 1
   324 label *label171
   325 label *label172
-    * label *label173
   326 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   327 label *label174
   328 set .units*2 :backgroundProcess:unit
 
   331 set :backgroundProcess:drill2 .drills*13
   332 set :backgroundProcess:drill3 .drills*14
   333 set :backgroundProcess:drill4 .drills*15
-    * label *label177
   334 jump *label178 notEqual :backgroundProcess:drill1 null
   335 jump *label19 always
   336 label *label178
-    * label *label179
   337 sensor *tmp11 :backgroundProcess:unit @controller
   338 jump *label192 equal *tmp11 @this
   339 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   342 set *tmp14 null
   343 jump *label189 always
   344 label *label180
-    * label *label181
   345 set :findFreeUnit:first_unit @unit
   346 label *label182
   347 sensor *tmp17 @unit @controlled
 
   355 jump *label184 notEqual *tmp20 1
   356 set :findFreeUnit:first_unit @unit
   357 label *label184
-    * label *label185
   358 label *label186
   359 ubind @flare
-    * label *label187
   360 jump *label182 notEqual :findFreeUnit:first_unit @unit
-    * label *label188
   361 set *tmp14 null
   362 label *label189
   363 set :backgroundProcess:unit *tmp14
 
   372 op add :backgroundProcess:count :backgroundProcess:count *tmp33
   373 jump *label211 always
   374 label *label190
-    * label *label191
   375 label *label192
-    * label *label193
   376 ubind :backgroundProcess:unit
   377 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
   378 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
 
   394 jump *label194 notEqual :serviceSpot:t1 *tmp48
   395 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
   396 label *label194
-    * label *label195
   397 jump *label196 notEqual :serviceSpot:t2 *tmp48
   398 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
   399 label *label196
-    * label *label197
   400 jump *label198 notEqual :serviceSpot:t3 *tmp48
   401 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
   402 label *label198
-    * label *label199
   403 jump *label200 notEqual :serviceSpot:t4 *tmp48
   404 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
   405 label *label200
-    * label *label201
   406 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
   407 op equal *tmp58 :serviceSpot:drillAmount 0
   408 op or *tmp59 *tmp57 *tmp58
 
   416 jump *label203 equal *tmp61 @titanium
   417 ucontrol itemDrop @air 10
   418 label *label203
-    * label *label204
   419 label *label205
   420 jump *label209 always
   421 label *label206
 
   427 ucontrol flag 1
   428 label *label208
   429 label *label209
-    * label *label210
   430 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   431 label *label211
   432 set .units*3 :backgroundProcess:unit
 
   435 set :backgroundProcess:drill2 .drills*17
   436 set :backgroundProcess:drill3 .drills*18
   437 set :backgroundProcess:drill4 .drills*19
-    * label *label214
   438 jump *label215 notEqual :backgroundProcess:drill1 null
   439 jump *label19 always
   440 label *label215
-    * label *label216
   441 sensor *tmp11 :backgroundProcess:unit @controller
   442 jump *label229 equal *tmp11 @this
   443 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   446 set *tmp14 null
   447 jump *label226 always
   448 label *label217
-    * label *label218
   449 set :findFreeUnit:first_unit @unit
   450 label *label219
   451 sensor *tmp17 @unit @controlled
 
   459 jump *label221 notEqual *tmp20 1
   460 set :findFreeUnit:first_unit @unit
   461 label *label221
-    * label *label222
   462 label *label223
   463 ubind @flare
-    * label *label224
   464 jump *label219 notEqual :findFreeUnit:first_unit @unit
-    * label *label225
   465 set *tmp14 null
   466 label *label226
   467 set :backgroundProcess:unit *tmp14
 
   476 op add :backgroundProcess:count :backgroundProcess:count *tmp33
   477 jump *label248 always
   478 label *label227
-    * label *label228
   479 label *label229
-    * label *label230
   480 ubind :backgroundProcess:unit
   481 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
   482 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
 
   498 jump *label231 notEqual :serviceSpot:t1 *tmp48
   499 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
   500 label *label231
-    * label *label232
   501 jump *label233 notEqual :serviceSpot:t2 *tmp48
   502 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
   503 label *label233
-    * label *label234
   504 jump *label235 notEqual :serviceSpot:t3 *tmp48
   505 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
   506 label *label235
-    * label *label236
   507 jump *label237 notEqual :serviceSpot:t4 *tmp48
   508 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
   509 label *label237
-    * label *label238
   510 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
   511 op equal *tmp58 :serviceSpot:drillAmount 0
   512 op or *tmp59 *tmp57 *tmp58
 
   520 jump *label240 equal *tmp61 @titanium
   521 ucontrol itemDrop @air 10
   522 label *label240
-    * label *label241
   523 label *label242
   524 jump *label246 always
   525 label *label243
 
   531 ucontrol flag 1
   532 label *label245
   533 label *label246
-    * label *label247
   534 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   535 label *label248
   536 set .units*4 :backgroundProcess:unit
 
   539 set :backgroundProcess:drill2 .drills*21
   540 set :backgroundProcess:drill3 .drills*22
   541 set :backgroundProcess:drill4 .drills*23
-    * label *label251
   542 jump *label252 notEqual :backgroundProcess:drill1 null
   543 jump *label19 always
   544 label *label252
-    * label *label253
   545 sensor *tmp11 :backgroundProcess:unit @controller
   546 jump *label266 equal *tmp11 @this
   547 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   550 set *tmp14 null
   551 jump *label263 always
   552 label *label254
-    * label *label255
   553 set :findFreeUnit:first_unit @unit
   554 label *label256
   555 sensor *tmp17 @unit @controlled
 
   563 jump *label258 notEqual *tmp20 1
   564 set :findFreeUnit:first_unit @unit
   565 label *label258
-    * label *label259
   566 label *label260
   567 ubind @flare
-    * label *label261
   568 jump *label256 notEqual :findFreeUnit:first_unit @unit
-    * label *label262
   569 set *tmp14 null
   570 label *label263
   571 set :backgroundProcess:unit *tmp14
 
   580 op add :backgroundProcess:count :backgroundProcess:count *tmp33
   581 jump *label285 always
   582 label *label264
-    * label *label265
   583 label *label266
-    * label *label267
   584 ubind :backgroundProcess:unit
   585 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
   586 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
 
   602 jump *label268 notEqual :serviceSpot:t1 *tmp48
   603 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
   604 label *label268
-    * label *label269
   605 jump *label270 notEqual :serviceSpot:t2 *tmp48
   606 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
   607 label *label270
-    * label *label271
   608 jump *label272 notEqual :serviceSpot:t3 *tmp48
   609 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
   610 label *label272
-    * label *label273
   611 jump *label274 notEqual :serviceSpot:t4 *tmp48
   612 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
   613 label *label274
-    * label *label275
   614 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
   615 op equal *tmp58 :serviceSpot:drillAmount 0
   616 op or *tmp59 *tmp57 *tmp58
 
   624 jump *label277 equal *tmp61 @titanium
   625 ucontrol itemDrop @air 10
   626 label *label277
-    * label *label278
   627 label *label279
   628 jump *label283 always
   629 label *label280
 
   635 ucontrol flag 1
   636 label *label282
   637 label *label283
-    * label *label284
   638 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   639 label *label285
   640 set .units*5 :backgroundProcess:unit
 
   643 set :backgroundProcess:drill2 .drills*25
   644 set :backgroundProcess:drill3 .drills*26
   645 set :backgroundProcess:drill4 .drills*27
-    * label *label288
   646 jump *label289 notEqual :backgroundProcess:drill1 null
   647 jump *label19 always
   648 label *label289
-    * label *label290
   649 sensor *tmp11 :backgroundProcess:unit @controller
   650 jump *label303 equal *tmp11 @this
   651 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   654 set *tmp14 null
   655 jump *label300 always
   656 label *label291
-    * label *label292
   657 set :findFreeUnit:first_unit @unit
   658 label *label293
   659 sensor *tmp17 @unit @controlled
 
   667 jump *label295 notEqual *tmp20 1
   668 set :findFreeUnit:first_unit @unit
   669 label *label295
-    * label *label296
   670 label *label297
   671 ubind @flare
-    * label *label298
   672 jump *label293 notEqual :findFreeUnit:first_unit @unit
-    * label *label299
   673 set *tmp14 null
   674 label *label300
   675 set :backgroundProcess:unit *tmp14
 
   684 op add :backgroundProcess:count :backgroundProcess:count *tmp33
   685 jump *label322 always
   686 label *label301
-    * label *label302
   687 label *label303
-    * label *label304
   688 ubind :backgroundProcess:unit
   689 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
   690 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
 
   706 jump *label305 notEqual :serviceSpot:t1 *tmp48
   707 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
   708 label *label305
-    * label *label306
   709 jump *label307 notEqual :serviceSpot:t2 *tmp48
   710 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
   711 label *label307
-    * label *label308
   712 jump *label309 notEqual :serviceSpot:t3 *tmp48
   713 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
   714 label *label309
-    * label *label310
   715 jump *label311 notEqual :serviceSpot:t4 *tmp48
   716 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
   717 label *label311
-    * label *label312
   718 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
   719 op equal *tmp58 :serviceSpot:drillAmount 0
   720 op or *tmp59 *tmp57 *tmp58
 
   728 jump *label314 equal *tmp61 @titanium
   729 ucontrol itemDrop @air 10
   730 label *label314
-    * label *label315
   731 label *label316
   732 jump *label320 always
   733 label *label317
 
   739 ucontrol flag 1
   740 label *label319
   741 label *label320
-    * label *label321
   742 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   743 label *label322
   744 set .units*6 :backgroundProcess:unit
 
   747 set :backgroundProcess:drill2 .drills*29
   748 set :backgroundProcess:drill3 .drills*30
   749 set :backgroundProcess:drill4 .drills*31
-    * label *label325
   750 jump *label326 notEqual :backgroundProcess:drill1 null
   751 jump *label19 always
   752 label *label326
-    * label *label327
   753 sensor *tmp11 :backgroundProcess:unit @controller
   754 jump *label340 equal *tmp11 @this
   755 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   758 set *tmp14 null
   759 jump *label337 always
   760 label *label328
-    * label *label329
   761 set :findFreeUnit:first_unit @unit
   762 label *label330
   763 sensor *tmp17 @unit @controlled
 
   771 jump *label332 notEqual *tmp20 1
   772 set :findFreeUnit:first_unit @unit
   773 label *label332
-    * label *label333
   774 label *label334
   775 ubind @flare
-    * label *label335
   776 jump *label330 notEqual :findFreeUnit:first_unit @unit
-    * label *label336
   777 set *tmp14 null
   778 label *label337
   779 set :backgroundProcess:unit *tmp14
 
   788 op add :backgroundProcess:count :backgroundProcess:count *tmp33
   789 jump *label359 always
   790 label *label338
-    * label *label339
   791 label *label340
-    * label *label341
   792 ubind :backgroundProcess:unit
   793 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
   794 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
 
   810 jump *label342 notEqual :serviceSpot:t1 *tmp48
   811 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
   812 label *label342
-    * label *label343
   813 jump *label344 notEqual :serviceSpot:t2 *tmp48
   814 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
   815 label *label344
-    * label *label345
   816 jump *label346 notEqual :serviceSpot:t3 *tmp48
   817 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
   818 label *label346
-    * label *label347
   819 jump *label348 notEqual :serviceSpot:t4 *tmp48
   820 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
   821 label *label348
-    * label *label349
   822 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
   823 op equal *tmp58 :serviceSpot:drillAmount 0
   824 op or *tmp59 *tmp57 *tmp58
 
   832 jump *label351 equal *tmp61 @titanium
   833 ucontrol itemDrop @air 10
   834 label *label351
-    * label *label352
   835 label *label353
   836 jump *label357 always
   837 label *label354
 
   843 ucontrol flag 1
   844 label *label356
   845 label *label357
-    * label *label358
   846 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   847 label *label359
   848 set .units*7 :backgroundProcess:unit
 
   851 set :backgroundProcess:drill2 .drills*33
   852 set :backgroundProcess:drill3 .drills*34
   853 set :backgroundProcess:drill4 .drills*35
-    * label *label362
   854 jump *label363 notEqual :backgroundProcess:drill1 null
   855 jump *label19 always
   856 label *label363
-    * label *label364
   857 sensor *tmp11 :backgroundProcess:unit @controller
   858 jump *label377 equal *tmp11 @this
   859 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   862 set *tmp14 null
   863 jump *label374 always
   864 label *label365
-    * label *label366
   865 set :findFreeUnit:first_unit @unit
   866 label *label367
   867 sensor *tmp17 @unit @controlled
 
   875 jump *label369 notEqual *tmp20 1
   876 set :findFreeUnit:first_unit @unit
   877 label *label369
-    * label *label370
   878 label *label371
   879 ubind @flare
-    * label *label372
   880 jump *label367 notEqual :findFreeUnit:first_unit @unit
-    * label *label373
   881 set *tmp14 null
   882 label *label374
   883 set :backgroundProcess:unit *tmp14
 
   892 op add :backgroundProcess:count :backgroundProcess:count *tmp33
   893 jump *label396 always
   894 label *label375
-    * label *label376
   895 label *label377
-    * label *label378
   896 ubind :backgroundProcess:unit
   897 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
   898 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
 
   914 jump *label379 notEqual :serviceSpot:t1 *tmp48
   915 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
   916 label *label379
-    * label *label380
   917 jump *label381 notEqual :serviceSpot:t2 *tmp48
   918 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
   919 label *label381
-    * label *label382
   920 jump *label383 notEqual :serviceSpot:t3 *tmp48
   921 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
   922 label *label383
-    * label *label384
   923 jump *label385 notEqual :serviceSpot:t4 *tmp48
   924 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
   925 label *label385
-    * label *label386
   926 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
   927 op equal *tmp58 :serviceSpot:drillAmount 0
   928 op or *tmp59 *tmp57 *tmp58
 
   936 jump *label388 equal *tmp61 @titanium
   937 ucontrol itemDrop @air 10
   938 label *label388
-    * label *label389
   939 label *label390
   940 jump *label394 always
   941 label *label391
 
   947 ucontrol flag 1
   948 label *label393
   949 label *label394
-    * label *label395
   950 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
   951 label *label396
   952 set .units*8 :backgroundProcess:unit
 
   955 set :backgroundProcess:drill2 .drills*37
   956 set :backgroundProcess:drill3 .drills*38
   957 set :backgroundProcess:drill4 .drills*39
-    * label *label399
   958 jump *label400 notEqual :backgroundProcess:drill1 null
   959 jump *label19 always
   960 label *label400
-    * label *label401
   961 sensor *tmp11 :backgroundProcess:unit @controller
   962 jump *label414 equal *tmp11 @this
   963 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   966 set *tmp14 null
   967 jump *label411 always
   968 label *label402
-    * label *label403
   969 set :findFreeUnit:first_unit @unit
   970 label *label404
   971 sensor *tmp17 @unit @controlled
 
   979 jump *label406 notEqual *tmp20 1
   980 set :findFreeUnit:first_unit @unit
   981 label *label406
-    * label *label407
   982 label *label408
   983 ubind @flare
-    * label *label409
   984 jump *label404 notEqual :findFreeUnit:first_unit @unit
-    * label *label410
   985 set *tmp14 null
   986 label *label411
   987 set :backgroundProcess:unit *tmp14
 
   996 op add :backgroundProcess:count :backgroundProcess:count *tmp33
   997 jump *label433 always
   998 label *label412
-    * label *label413
   999 label *label414
-    * label *label415
  1000 ubind :backgroundProcess:unit
  1001 # "Function: def serviceSpot(in drill1, in drill2, in drill3, in drill4)"
  1002 sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium
 
  1018 jump *label416 notEqual :serviceSpot:t1 *tmp48
  1019 ucontrol itemTake :backgroundProcess:drill1 @titanium 10
  1020 label *label416
-    * label *label417
  1021 jump *label418 notEqual :serviceSpot:t2 *tmp48
  1022 ucontrol itemTake :backgroundProcess:drill2 @titanium 10
  1023 label *label418
-    * label *label419
  1024 jump *label420 notEqual :serviceSpot:t3 *tmp48
  1025 ucontrol itemTake :backgroundProcess:drill3 @titanium 10
  1026 label *label420
-    * label *label421
  1027 jump *label422 notEqual :serviceSpot:t4 *tmp48
  1028 ucontrol itemTake :backgroundProcess:drill4 @titanium 10
  1029 label *label422
-    * label *label423
  1030 op greaterThanEq *tmp57 :serviceSpot:unitAmount 10
  1031 op equal *tmp58 :serviceSpot:drillAmount 0
  1032 op or *tmp59 *tmp57 *tmp58
 
  1040 jump *label425 equal *tmp61 @titanium
  1041 ucontrol itemDrop @air 10
  1042 label *label425
-    * label *label426
  1043 label *label427
  1044 jump *label431 always
  1045 label *label428
 
  1051 ucontrol flag 1
  1052 label *label430
  1053 label *label431
-    * label *label432
  1054 op add :backgroundProcess:count :backgroundProcess:count :serviceSpot:drillAmount
  1055 label *label433
  1056 set .units*9 :backgroundProcess:unit
  1057 label *label19
  1058 write :backgroundProcess:count processor1 ".titaniumDrillCount"
-    * label *label15
  1059 jump *label14 always
-    * label *label16
-    * label *label8
  1060 wait 1e12
  1061 jump *label7 always
  1062 end
 
  1084 call *label438 .drills*wret *invalid
  1085 op add .spotCount .spotCount 1
  1086 label *label64
-    * label *label65
-    * label *label63
  1087 set :addTitaniumDrills*finished true
  1088 jump *label7 always
  1089 end

Modifications by Jumps phase, Jump Straightening, pass 5, iteration 1 (-10 instructions):
 
    19 set :backgroundProcess:drill2 .drills*1
    20 set :backgroundProcess:drill3 .drills*2
    21 set :backgroundProcess:drill4 .drills*3
-    * jump *label67 notEqual :backgroundProcess:drill1 null
-    * jump *label19 always
+   22 jump *label19 equal :backgroundProcess:drill1 null
    23 label *label67
    24 sensor *tmp11 :backgroundProcess:unit @controller
    25 jump *label81 equal *tmp11 @this
 
   122 set :backgroundProcess:drill2 .drills*5
   123 set :backgroundProcess:drill3 .drills*6
   124 set :backgroundProcess:drill4 .drills*7
-    * jump *label104 notEqual :backgroundProcess:drill1 null
-    * jump *label19 always
+  125 jump *label19 equal :backgroundProcess:drill1 null
   126 label *label104
   127 sensor *tmp11 :backgroundProcess:unit @controller
   128 jump *label118 equal *tmp11 @this
 
   225 set :backgroundProcess:drill2 .drills*9
   226 set :backgroundProcess:drill3 .drills*10
   227 set :backgroundProcess:drill4 .drills*11
-    * jump *label141 notEqual :backgroundProcess:drill1 null
-    * jump *label19 always
+  228 jump *label19 equal :backgroundProcess:drill1 null
   229 label *label141
   230 sensor *tmp11 :backgroundProcess:unit @controller
   231 jump *label155 equal *tmp11 @this
 
   328 set :backgroundProcess:drill2 .drills*13
   329 set :backgroundProcess:drill3 .drills*14
   330 set :backgroundProcess:drill4 .drills*15
-    * jump *label178 notEqual :backgroundProcess:drill1 null
-    * jump *label19 always
+  331 jump *label19 equal :backgroundProcess:drill1 null
   332 label *label178
   333 sensor *tmp11 :backgroundProcess:unit @controller
   334 jump *label192 equal *tmp11 @this
 
   431 set :backgroundProcess:drill2 .drills*17
   432 set :backgroundProcess:drill3 .drills*18
   433 set :backgroundProcess:drill4 .drills*19
-    * jump *label215 notEqual :backgroundProcess:drill1 null
-    * jump *label19 always
+  434 jump *label19 equal :backgroundProcess:drill1 null
   435 label *label215
   436 sensor *tmp11 :backgroundProcess:unit @controller
   437 jump *label229 equal *tmp11 @this
 
   534 set :backgroundProcess:drill2 .drills*21
   535 set :backgroundProcess:drill3 .drills*22
   536 set :backgroundProcess:drill4 .drills*23
-    * jump *label252 notEqual :backgroundProcess:drill1 null
-    * jump *label19 always
+  537 jump *label19 equal :backgroundProcess:drill1 null
   538 label *label252
   539 sensor *tmp11 :backgroundProcess:unit @controller
   540 jump *label266 equal *tmp11 @this
 
   637 set :backgroundProcess:drill2 .drills*25
   638 set :backgroundProcess:drill3 .drills*26
   639 set :backgroundProcess:drill4 .drills*27
-    * jump *label289 notEqual :backgroundProcess:drill1 null
-    * jump *label19 always
+  640 jump *label19 equal :backgroundProcess:drill1 null
   641 label *label289
   642 sensor *tmp11 :backgroundProcess:unit @controller
   643 jump *label303 equal *tmp11 @this
 
   740 set :backgroundProcess:drill2 .drills*29
   741 set :backgroundProcess:drill3 .drills*30
   742 set :backgroundProcess:drill4 .drills*31
-    * jump *label326 notEqual :backgroundProcess:drill1 null
-    * jump *label19 always
+  743 jump *label19 equal :backgroundProcess:drill1 null
   744 label *label326
   745 sensor *tmp11 :backgroundProcess:unit @controller
   746 jump *label340 equal *tmp11 @this
 
   843 set :backgroundProcess:drill2 .drills*33
   844 set :backgroundProcess:drill3 .drills*34
   845 set :backgroundProcess:drill4 .drills*35
-    * jump *label363 notEqual :backgroundProcess:drill1 null
-    * jump *label19 always
+  846 jump *label19 equal :backgroundProcess:drill1 null
   847 label *label363
   848 sensor *tmp11 :backgroundProcess:unit @controller
   849 jump *label377 equal *tmp11 @this
 
   946 set :backgroundProcess:drill2 .drills*37
   947 set :backgroundProcess:drill3 .drills*38
   948 set :backgroundProcess:drill4 .drills*39
-    * jump *label400 notEqual :backgroundProcess:drill1 null
-    * jump *label19 always
+  949 jump *label19 equal :backgroundProcess:drill1 null
   950 label *label400
   951 sensor *tmp11 :backgroundProcess:unit @controller
   952 jump *label414 equal *tmp11 @this

Modifications by Jumps phase, Jump Optimization, pass 5, iteration 1:
 
    20 set :backgroundProcess:drill3 .drills*2
    21 set :backgroundProcess:drill4 .drills*3
    22 jump *label19 equal :backgroundProcess:drill1 null
-    * label *label67
    23 sensor *tmp11 :backgroundProcess:unit @controller
    24 jump *label81 equal *tmp11 @this
    25 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   122 set :backgroundProcess:drill3 .drills*6
   123 set :backgroundProcess:drill4 .drills*7
   124 jump *label19 equal :backgroundProcess:drill1 null
-    * label *label104
   125 sensor *tmp11 :backgroundProcess:unit @controller
   126 jump *label118 equal *tmp11 @this
   127 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   224 set :backgroundProcess:drill3 .drills*10
   225 set :backgroundProcess:drill4 .drills*11
   226 jump *label19 equal :backgroundProcess:drill1 null
-    * label *label141
   227 sensor *tmp11 :backgroundProcess:unit @controller
   228 jump *label155 equal *tmp11 @this
   229 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   326 set :backgroundProcess:drill3 .drills*14
   327 set :backgroundProcess:drill4 .drills*15
   328 jump *label19 equal :backgroundProcess:drill1 null
-    * label *label178
   329 sensor *tmp11 :backgroundProcess:unit @controller
   330 jump *label192 equal *tmp11 @this
   331 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   428 set :backgroundProcess:drill3 .drills*18
   429 set :backgroundProcess:drill4 .drills*19
   430 jump *label19 equal :backgroundProcess:drill1 null
-    * label *label215
   431 sensor *tmp11 :backgroundProcess:unit @controller
   432 jump *label229 equal *tmp11 @this
   433 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   530 set :backgroundProcess:drill3 .drills*22
   531 set :backgroundProcess:drill4 .drills*23
   532 jump *label19 equal :backgroundProcess:drill1 null
-    * label *label252
   533 sensor *tmp11 :backgroundProcess:unit @controller
   534 jump *label266 equal *tmp11 @this
   535 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   632 set :backgroundProcess:drill3 .drills*26
   633 set :backgroundProcess:drill4 .drills*27
   634 jump *label19 equal :backgroundProcess:drill1 null
-    * label *label289
   635 sensor *tmp11 :backgroundProcess:unit @controller
   636 jump *label303 equal *tmp11 @this
   637 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   734 set :backgroundProcess:drill3 .drills*30
   735 set :backgroundProcess:drill4 .drills*31
   736 jump *label19 equal :backgroundProcess:drill1 null
-    * label *label326
   737 sensor *tmp11 :backgroundProcess:unit @controller
   738 jump *label340 equal *tmp11 @this
   739 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   836 set :backgroundProcess:drill3 .drills*34
   837 set :backgroundProcess:drill4 .drills*35
   838 jump *label19 equal :backgroundProcess:drill1 null
-    * label *label363
   839 sensor *tmp11 :backgroundProcess:unit @controller
   840 jump *label377 equal *tmp11 @this
   841 # "Function: def findFreeUnit(in unit_type, in initial_flag)"
 
   938 set :backgroundProcess:drill3 .drills*38
   939 set :backgroundProcess:drill4 .drills*39
   940 jump *label19 equal :backgroundProcess:drill1 null
-    * label *label400
   941 sensor *tmp11 :backgroundProcess:unit @controller
   942 jump *label414 equal *tmp11 @this
   943 # "Function: def findFreeUnit(in unit_type, in initial_flag)"

Modifications by Jumps phase, Jump Threading, pass 5, iteration 1:
 
    96 ucontrol flag 2
    97 ucontrol approach .coreX .coreY 4
    98 ucontrol itemDrop .core 10
-    * jump *label94 always
+   99 jump *label98 always
   100 label *label91
   101 sensor *tmp61 @unit @firstItem
-    * jump *label92 equal *tmp61 @titanium
+  102 jump *label98 equal *tmp61 @titanium
   103 ucontrol itemDrop @air 10
   104 label *label92
   105 label *label94
 
   198 ucontrol flag 2
   199 ucontrol approach .coreX .coreY 4
   200 ucontrol itemDrop .core 10
-    * jump *label131 always
+  201 jump *label135 always
   202 label *label128
   203 sensor *tmp61 @unit @firstItem
-    * jump *label129 equal *tmp61 @titanium
+  204 jump *label135 equal *tmp61 @titanium
   205 ucontrol itemDrop @air 10
   206 label *label129
   207 label *label131
 
   300 ucontrol flag 2
   301 ucontrol approach .coreX .coreY 4
   302 ucontrol itemDrop .core 10
-    * jump *label168 always
+  303 jump *label172 always
   304 label *label165
   305 sensor *tmp61 @unit @firstItem
-    * jump *label166 equal *tmp61 @titanium
+  306 jump *label172 equal *tmp61 @titanium
   307 ucontrol itemDrop @air 10
   308 label *label166
   309 label *label168
 
   402 ucontrol flag 2
   403 ucontrol approach .coreX .coreY 4
   404 ucontrol itemDrop .core 10
-    * jump *label205 always
+  405 jump *label209 always
   406 label *label202
   407 sensor *tmp61 @unit @firstItem
-    * jump *label203 equal *tmp61 @titanium
+  408 jump *label209 equal *tmp61 @titanium
   409 ucontrol itemDrop @air 10
   410 label *label203
   411 label *label205
 
   504 ucontrol flag 2
   505 ucontrol approach .coreX .coreY 4
   506 ucontrol itemDrop .core 10
-    * jump *label242 always
+  507 jump *label246 always
   508 label *label239
   509 sensor *tmp61 @unit @firstItem
-    * jump *label240 equal *tmp61 @titanium
+  510 jump *label246 equal *tmp61 @titanium
   511 ucontrol itemDrop @air 10
   512 label *label240
   513 label *label242
 
   606 ucontrol flag 2
   607 ucontrol approach .coreX .coreY 4
   608 ucontrol itemDrop .core 10
-    * jump *label279 always
+  609 jump *label283 always
   610 label *label276
   611 sensor *tmp61 @unit @firstItem
-    * jump *label277 equal *tmp61 @titanium
+  612 jump *label283 equal *tmp61 @titanium
   613 ucontrol itemDrop @air 10
   614 label *label277
   615 label *label279
 
   708 ucontrol flag 2
   709 ucontrol approach .coreX .coreY 4
   710 ucontrol itemDrop .core 10
-    * jump *label316 always
+  711 jump *label320 always
   712 label *label313
   713 sensor *tmp61 @unit @firstItem
-    * jump *label314 equal *tmp61 @titanium
+  714 jump *label320 equal *tmp61 @titanium
   715 ucontrol itemDrop @air 10
   716 label *label314
   717 label *label316
 
   810 ucontrol flag 2
   811 ucontrol approach .coreX .coreY 4
   812 ucontrol itemDrop .core 10
-    * jump *label353 always
+  813 jump *label357 always
   814 label *label350
   815 sensor *tmp61 @unit @firstItem
-    * jump *label351 equal *tmp61 @titanium
+  816 jump *label357 equal *tmp61 @titanium
   817 ucontrol itemDrop @air 10
   818 label *label351
   819 label *label353
 
   912 ucontrol flag 2
   913 ucontrol approach .coreX .coreY 4
   914 ucontrol itemDrop .core 10
-    * jump *label390 always
+  915 jump *label394 always
   916 label *label387
   917 sensor *tmp61 @unit @firstItem
-    * jump *label388 equal *tmp61 @titanium
+  918 jump *label394 equal *tmp61 @titanium
   919 ucontrol itemDrop @air 10
   920 label *label388
   921 label *label390
 
  1014 ucontrol flag 2
  1015 ucontrol approach .coreX .coreY 4
  1016 ucontrol itemDrop .core 10
-    * jump *label427 always
+ 1017 jump *label431 always
  1018 label *label424
  1019 sensor *tmp61 @unit @firstItem
-    * jump *label425 equal *tmp61 @titanium
+ 1020 jump *label431 equal *tmp61 @titanium
  1021 ucontrol itemDrop @air 10
  1022 label *label425
  1023 label *label427

Modifications by Jumps phase, Unreachable Code Elimination, pass 5, iteration 1 (-14 instructions):
 
    35 ucontrol flag 0
    36 set *tmp14 @unit
    37 jump *label78 always
-    * jump *label75 always
    38 label *label72
    39 sensor *tmp20 :findFreeUnit:first_unit @dead
    40 jump *label73 notEqual *tmp20 1
 
   100 sensor *tmp61 @unit @firstItem
   101 jump *label98 equal *tmp61 @titanium
   102 ucontrol itemDrop @air 10
-    * label *label92
-    * label *label94
   103 jump *label98 always
   104 label *label95
   105 jump *label96 equal :serviceSpot:unitAmount false
 
   134 ucontrol flag 0
   135 set *tmp14 @unit
   136 jump *label115 always
-    * jump *label112 always
   137 label *label109
   138 sensor *tmp20 :findFreeUnit:first_unit @dead
   139 jump *label110 notEqual *tmp20 1
 
   199 sensor *tmp61 @unit @firstItem
   200 jump *label135 equal *tmp61 @titanium
   201 ucontrol itemDrop @air 10
-    * label *label129
-    * label *label131
   202 jump *label135 always
   203 label *label132
   204 jump *label133 equal :serviceSpot:unitAmount false
 
   233 ucontrol flag 0
   234 set *tmp14 @unit
   235 jump *label152 always
-    * jump *label149 always
   236 label *label146
   237 sensor *tmp20 :findFreeUnit:first_unit @dead
   238 jump *label147 notEqual *tmp20 1
 
   298 sensor *tmp61 @unit @firstItem
   299 jump *label172 equal *tmp61 @titanium
   300 ucontrol itemDrop @air 10
-    * label *label166
-    * label *label168
   301 jump *label172 always
   302 label *label169
   303 jump *label170 equal :serviceSpot:unitAmount false
 
   332 ucontrol flag 0
   333 set *tmp14 @unit
   334 jump *label189 always
-    * jump *label186 always
   335 label *label183
   336 sensor *tmp20 :findFreeUnit:first_unit @dead
   337 jump *label184 notEqual *tmp20 1
 
   397 sensor *tmp61 @unit @firstItem
   398 jump *label209 equal *tmp61 @titanium
   399 ucontrol itemDrop @air 10
-    * label *label203
-    * label *label205
   400 jump *label209 always
   401 label *label206
   402 jump *label207 equal :serviceSpot:unitAmount false
 
   431 ucontrol flag 0
   432 set *tmp14 @unit
   433 jump *label226 always
-    * jump *label223 always
   434 label *label220
   435 sensor *tmp20 :findFreeUnit:first_unit @dead
   436 jump *label221 notEqual *tmp20 1
 
   496 sensor *tmp61 @unit @firstItem
   497 jump *label246 equal *tmp61 @titanium
   498 ucontrol itemDrop @air 10
-    * label *label240
-    * label *label242
   499 jump *label246 always
   500 label *label243
   501 jump *label244 equal :serviceSpot:unitAmount false
 
   530 ucontrol flag 0
   531 set *tmp14 @unit
   532 jump *label263 always
-    * jump *label260 always
   533 label *label257
   534 sensor *tmp20 :findFreeUnit:first_unit @dead
   535 jump *label258 notEqual *tmp20 1
 
   595 sensor *tmp61 @unit @firstItem
   596 jump *label283 equal *tmp61 @titanium
   597 ucontrol itemDrop @air 10
-    * label *label277
-    * label *label279
   598 jump *label283 always
   599 label *label280
   600 jump *label281 equal :serviceSpot:unitAmount false
 
   629 ucontrol flag 0
   630 set *tmp14 @unit
   631 jump *label300 always
-    * jump *label297 always
   632 label *label294
   633 sensor *tmp20 :findFreeUnit:first_unit @dead
   634 jump *label295 notEqual *tmp20 1
 
   694 sensor *tmp61 @unit @firstItem
   695 jump *label320 equal *tmp61 @titanium
   696 ucontrol itemDrop @air 10
-    * label *label314
-    * label *label316
   697 jump *label320 always
   698 label *label317
   699 jump *label318 equal :serviceSpot:unitAmount false
 
   728 ucontrol flag 0
   729 set *tmp14 @unit
   730 jump *label337 always
-    * jump *label334 always
   731 label *label331
   732 sensor *tmp20 :findFreeUnit:first_unit @dead
   733 jump *label332 notEqual *tmp20 1
 
   793 sensor *tmp61 @unit @firstItem
   794 jump *label357 equal *tmp61 @titanium
   795 ucontrol itemDrop @air 10
-    * label *label351
-    * label *label353
   796 jump *label357 always
   797 label *label354
   798 jump *label355 equal :serviceSpot:unitAmount false
 
   827 ucontrol flag 0
   828 set *tmp14 @unit
   829 jump *label374 always
-    * jump *label371 always
   830 label *label368
   831 sensor *tmp20 :findFreeUnit:first_unit @dead
   832 jump *label369 notEqual *tmp20 1
 
   892 sensor *tmp61 @unit @firstItem
   893 jump *label394 equal *tmp61 @titanium
   894 ucontrol itemDrop @air 10
-    * label *label388
-    * label *label390
   895 jump *label394 always
   896 label *label391
   897 jump *label392 equal :serviceSpot:unitAmount false
 
   926 ucontrol flag 0
   927 set *tmp14 @unit
   928 jump *label411 always
-    * jump *label408 always
   929 label *label405
   930 sensor *tmp20 :findFreeUnit:first_unit @dead
   931 jump *label406 notEqual *tmp20 1
 
   991 sensor *tmp61 @unit @firstItem
   992 jump *label431 equal *tmp61 @titanium
   993 ucontrol itemDrop @air 10
-    * label *label425
-    * label *label427
   994 jump *label431 always
   995 label *label428
   996 jump *label429 equal :serviceSpot:unitAmount false
 
  1007 label *label19
  1008 write :backgroundProcess:count processor1 ".titaniumDrillCount"
  1009 jump *label14 always
-    * wait 1e12
-    * jump *label7 always
-    * end
  1010 label *label0
  1011 # "Function: remote void addTitaniumDrills(in d1, in d2, in d3, in d4)"
  1012 jump *label64 greaterThanEq .spotCount 39
 
  1033 label *label64
  1034 set :addTitaniumDrills*finished true
  1035 jump *label7 always
-    * end
  1036 label *label438 (m:*label438)
  1037 multijump *label437 .drills*wind 0 (m:marker1)
  1038 multilabel *label437 (m:marker1)

Modifications by Jumps phase, Dead Code Elimination, pass 5, iteration 1:
 
    40 jump *label73 notEqual *tmp20 1
    41 set :findFreeUnit:first_unit @unit
    42 label *label73
-    * label *label75
    43 ubind @flare
    44 jump *label71 notEqual :findFreeUnit:first_unit @unit
    45 set *tmp14 null
 
   138 jump *label110 notEqual *tmp20 1
   139 set :findFreeUnit:first_unit @unit
   140 label *label110
-    * label *label112
   141 ubind @flare
   142 jump *label108 notEqual :findFreeUnit:first_unit @unit
   143 set *tmp14 null
 
   236 jump *label147 notEqual *tmp20 1
   237 set :findFreeUnit:first_unit @unit
   238 label *label147
-    * label *label149
   239 ubind @flare
   240 jump *label145 notEqual :findFreeUnit:first_unit @unit
   241 set *tmp14 null
 
   334 jump *label184 notEqual *tmp20 1
   335 set :findFreeUnit:first_unit @unit
   336 label *label184
-    * label *label186
   337 ubind @flare
   338 jump *label182 notEqual :findFreeUnit:first_unit @unit
   339 set *tmp14 null
 
   432 jump *label221 notEqual *tmp20 1
   433 set :findFreeUnit:first_unit @unit
   434 label *label221
-    * label *label223
   435 ubind @flare
   436 jump *label219 notEqual :findFreeUnit:first_unit @unit
   437 set *tmp14 null
 
   530 jump *label258 notEqual *tmp20 1
   531 set :findFreeUnit:first_unit @unit
   532 label *label258
-    * label *label260
   533 ubind @flare
   534 jump *label256 notEqual :findFreeUnit:first_unit @unit
   535 set *tmp14 null
 
   628 jump *label295 notEqual *tmp20 1
   629 set :findFreeUnit:first_unit @unit
   630 label *label295
-    * label *label297
   631 ubind @flare
   632 jump *label293 notEqual :findFreeUnit:first_unit @unit
   633 set *tmp14 null
 
   726 jump *label332 notEqual *tmp20 1
   727 set :findFreeUnit:first_unit @unit
   728 label *label332
-    * label *label334
   729 ubind @flare
   730 jump *label330 notEqual :findFreeUnit:first_unit @unit
   731 set *tmp14 null
 
   824 jump *label369 notEqual *tmp20 1
   825 set :findFreeUnit:first_unit @unit
   826 label *label369
-    * label *label371
   827 ubind @flare
   828 jump *label367 notEqual :findFreeUnit:first_unit @unit
   829 set *tmp14 null
 
   922 jump *label406 notEqual *tmp20 1
   923 set :findFreeUnit:first_unit @unit
   924 label *label406
-    * label *label408
   925 ubind @flare
   926 jump *label404 notEqual :findFreeUnit:first_unit @unit
   927 set *tmp14 null

Final code before resolving virtual instructions:

    0:  jump *label6 always 0 0                                      #set target = 8;
    1:  jump *label0 always 0 0                                      ...
    2:  draw triangle processor1 .core .coreX .coreY .drills*0 .drills*1
    3:  draw triangle .drills*10 .drills*11 .drills*12 .drills*13 .drills*14 .drills*15
    4:  draw triangle .drills*16 .drills*17 .drills*18 .drills*19 .drills*2 .drills*20
    5:  draw triangle .drills*21 .drills*22 .drills*23 .drills*24 .drills*25 .drills*26
    6:  draw triangle .drills*27 .drills*28 .drills*29 .drills*3 .drills*30 .drills*31
    7:  draw triangle .drills*32 .drills*33 .drills*34 .drills*35 .drills*36 .drills*37
    8:  draw triangle .drills*38 .drills*39 .drills*4 .drills*5 .drills*6 .drills*7
    9:  draw triangle .drills*8 .drills*9 .drills*w .drills*wind .spotCount .units*0
   10:  draw triangle .units*1 .units*2 .units*3 .units*4 .units*5 .units*6
   11:  draw triangle .units*7 .units*8 .units*9 :addTitaniumDrills:d1 :addTitaniumDrills:d2 :addTitaniumDrills:d3
   12:  draw triangle :addTitaniumDrills:d4 :addTitaniumDrills:i :backgroundProcess:count :backgroundProcess:drill1 :backgroundProcess:drill2 :backgroundProcess:drill3
   13:  draw triangle :backgroundProcess:drill4 :backgroundProcess:unit :findFreeUnit:first_unit :serviceSpot:drillAmount :serviceSpot:t1 :serviceSpot:t2
   14:  draw triangle :serviceSpot:t3 :serviceSpot:t4 :serviceSpot:unitAmount 0 0 0
        label *label6                                                ...
   15:  set .spotCount 0                                             volatile var spotCount = 0;
   16:  set *signature "2347e8b86ae8a071:v1"                         #set target = 8;
        label *label7                                                ...
        # "Function: void backgroundProcess()"                       ...
   17:  jump *label9 notEqual .core null                             if core == null then
        label *label11                                               do
   18:  ubind @flare                                                 ubind(@flare);
   19:  ulocate building core false @copper .coreX .coreY 0 .core    core = ulocate(:building, :core, false, out coreX, out coreY);
   20:  jump *label11 equal .core null                               do
   21:  sensor .coreX .core @x                                       coreX = core.@x;
   22:  sensor .coreY .core @y                                       coreY = core.@y;
        label *label9                                                if core == null then
        label *label14                                               while true do
   23:  set :backgroundProcess:count 0                               var count = 0;
   24:  set :backgroundProcess:unit .units*0                         for var out unit in units; var drill1, drill2, drill3, drill4 in drills do
   25:  set :backgroundProcess:drill1 .drills*0                      ...
   26:  set :backgroundProcess:drill2 .drills*1                      ...
   27:  set :backgroundProcess:drill3 .drills*2                      ...
   28:  set :backgroundProcess:drill4 .drills*3                      ...
   29:  jump *label19 equal :backgroundProcess:drill1 null           if drill1 == null then break; end;
   30:  sensor *tmp11 :backgroundProcess:unit @controller            if unit.@controller != @this then
   31:  jump *label81 equal *tmp11 @this                             ...
        # "Function: def findFreeUnit(in unit_type, in initial_flag) unit = findFreeUnit(@flare, 0);
   32:  ubind @flare                                                 *units: ubind(unit_type);
   33:  jump *label69 notEqual @unit null                            *units: if @unit == null then return null; end;
   34:  set *tmp14 null                                              ...
   35:  jump *label78 always 0 0                                     ...
        label *label69                                               ...
   36:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label71                                               *units: do
   37:  sensor *tmp17 @unit @controlled                              *units: if @unit.@controlled == 0 then
   38:  jump *label72 notEqual *tmp17 0                              ...
   39:  ucontrol flag 0 0 0 0 0                                      *units: flag(initial_flag);        // Mark unit as active
   40:  set *tmp14 @unit                                             *units: return @unit;
   41:  jump *label78 always 0 0                                     ...
        label *label72                                               *units: if @unit.@controlled == 0 then
   42:  sensor *tmp20 :findFreeUnit:first_unit @dead                 *units: elsif first_unit.@dead == 1 then
   43:  jump *label73 notEqual *tmp20 1                              ...
   44:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label73                                               *units: elsif first_unit.@dead == 1 then
   45:  ubind @flare                                                 *units: ubind(unit_type);
   46:  jump *label71 notEqual :findFreeUnit:first_unit @unit        *units: do
   47:  set *tmp14 null                                              *units: return null;
        label *label78                                               unit = findFreeUnit(@flare, 0);
   48:  set :backgroundProcess:unit *tmp14                           ...
   49:  jump *label79 notEqual *tmp14 null                           if unit == null then
   50:  sensor *tmp27 :backgroundProcess:drill1 @titanium            count += drill1.@titanium + drill2.@titanium + drill3.@titanium + drill4.@titanium;
   51:  sensor *tmp28 :backgroundProcess:drill2 @titanium            ...
   52:  op add *tmp29 *tmp27 *tmp28                                  ...
   53:  sensor *tmp30 :backgroundProcess:drill3 @titanium            ...
   54:  op add *tmp31 *tmp29 *tmp30                                  ...
   55:  sensor *tmp32 :backgroundProcess:drill4 @titanium            ...
   56:  op add *tmp33 *tmp31 *tmp32                                  ...
   57:  set :backgroundProcess:count *tmp33                          ...
   58:  jump *label100 always 0 0                                    continue;
        label *label79                                               if unit == null then
        label *label81                                               if unit.@controller != @this then
   59:  ubind :backgroundProcess:unit                                ubind(unit);
        # "Function: def serviceSpot(in drill1, in drill2, in drill3 count += serviceSpot(drill1, drill2, drill3, drill4);
   60:  sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium   var t1 = drill1.@titanium;
   61:  sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium   var t2 = drill2.@titanium;
   62:  sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium   var t3 = drill3.@titanium;
   63:  sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium   var t4 = drill4.@titanium;
   64:  op add *tmp39 :serviceSpot:t1 :serviceSpot:t2                var drillAmount = t1 + t2 + t3 + t4;
   65:  op add *tmp40 *tmp39 :serviceSpot:t3                         ...
   66:  op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4       ...
   67:  sensor :serviceSpot:unitAmount @unit @totalItems             var unitAmount = @unit.@totalItems;
   68:  sensor *tmp43 @unit @flag                                    if @unit.@flag == outgoing then
   69:  jump *label95 notEqual *tmp43 1                              ...
   70:  sensor *tmp46 :backgroundProcess:drill1 @x                   approach(drill1.@x, drill1.@y, 2);
   71:  sensor *tmp47 :backgroundProcess:drill1 @y                   ...
   72:  ucontrol approach *tmp46 *tmp47 2 0 0                        ...
   73:  op max *tmp48 :serviceSpot:t1 :serviceSpot:t2                var max = max(t1, t2, t3, t4);
   74:  op max *tmp48 *tmp48 :serviceSpot:t3                         ...
   75:  op max *tmp48 *tmp48 :serviceSpot:t4                         ...
   76:  jump *label83 notEqual :serviceSpot:t1 *tmp48                if t1 == max then itemTake(drill1, @titanium, CAPACITY); end;
   77:  ucontrol itemTake :backgroundProcess:drill1 @titanium 10 0 0 ...
        label *label83                                               ...
   78:  jump *label85 notEqual :serviceSpot:t2 *tmp48                if t2 == max then itemTake(drill2, @titanium, CAPACITY); end;
   79:  ucontrol itemTake :backgroundProcess:drill2 @titanium 10 0 0 ...
        label *label85                                               ...
   80:  jump *label87 notEqual :serviceSpot:t3 *tmp48                if t3 == max then itemTake(drill3, @titanium, CAPACITY); end;
   81:  ucontrol itemTake :backgroundProcess:drill3 @titanium 10 0 0 ...
        label *label87                                               ...
   82:  jump *label89 notEqual :serviceSpot:t4 *tmp48                if t4 == max then itemTake(drill4, @titanium, CAPACITY); end;
   83:  ucontrol itemTake :backgroundProcess:drill4 @titanium 10 0 0 ...
        label *label89                                               ...
   84:  op greaterThanEq *tmp57 :serviceSpot:unitAmount 10           if unitAmount >= CAPACITY or drillAmount == 0 then
   85:  op equal *tmp58 :serviceSpot:drillAmount 0                   ...
   86:  op or *tmp59 *tmp57 *tmp58                                   ...
   87:  jump *label91 equal *tmp59 false                             ...
   88:  ucontrol flag 2 0 0 0 0                                      flag(returning);
   89:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
   90:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
   91:  jump *label98 always 0 0                                     if unitAmount >= CAPACITY or drillAmount == 0 then
        label *label91                                               ...
   92:  sensor *tmp61 @unit @firstItem                               elsif @unit.@firstItem != @titanium then
   93:  jump *label98 equal *tmp61 @titanium                         ...
   94:  ucontrol itemDrop @air 10 0 0 0                              itemDrop(@air, CAPACITY);
   95:  jump *label98 always 0 0                                     if @unit.@flag == outgoing then
        label *label95                                               ...
   96:  jump *label96 equal :serviceSpot:unitAmount false            if unitAmount then
   97:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
   98:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
   99:  jump *label97 always 0 0                                     if unitAmount then
        label *label96                                               ...
  100:  ucontrol flag 1 0 0 0 0                                      flag(outgoing);
        label *label97                                               if unitAmount then
        label *label98                                               if @unit.@flag == outgoing then
  101:  set :backgroundProcess:count :serviceSpot:drillAmount        count += serviceSpot(drill1, drill2, drill3, drill4);
        label *label100                                              for var out unit in units; var drill1, drill2, drill3, drill4 in drills do
  102:  set .units*0 :backgroundProcess:unit                         ...
  103:  set :backgroundProcess:unit .units*1                         ...
  104:  set :backgroundProcess:drill1 .drills*4                      ...
  105:  set :backgroundProcess:drill2 .drills*5                      ...
  106:  set :backgroundProcess:drill3 .drills*6                      ...
  107:  set :backgroundProcess:drill4 .drills*7                      ...
  108:  jump *label19 equal :backgroundProcess:drill1 null           if drill1 == null then break; end;
  109:  sensor *tmp11 :backgroundProcess:unit @controller            if unit.@controller != @this then
  110:  jump *label118 equal *tmp11 @this                            ...
        # "Function: def findFreeUnit(in unit_type, in initial_flag) unit = findFreeUnit(@flare, 0);
  111:  ubind @flare                                                 *units: ubind(unit_type);
  112:  jump *label106 notEqual @unit null                           *units: if @unit == null then return null; end;
  113:  set *tmp14 null                                              ...
  114:  jump *label115 always 0 0                                    ...
        label *label106                                              ...
  115:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label108                                              *units: do
  116:  sensor *tmp17 @unit @controlled                              *units: if @unit.@controlled == 0 then
  117:  jump *label109 notEqual *tmp17 0                             ...
  118:  ucontrol flag 0 0 0 0 0                                      *units: flag(initial_flag);        // Mark unit as active
  119:  set *tmp14 @unit                                             *units: return @unit;
  120:  jump *label115 always 0 0                                    ...
        label *label109                                              *units: if @unit.@controlled == 0 then
  121:  sensor *tmp20 :findFreeUnit:first_unit @dead                 *units: elsif first_unit.@dead == 1 then
  122:  jump *label110 notEqual *tmp20 1                             ...
  123:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label110                                              *units: elsif first_unit.@dead == 1 then
  124:  ubind @flare                                                 *units: ubind(unit_type);
  125:  jump *label108 notEqual :findFreeUnit:first_unit @unit       *units: do
  126:  set *tmp14 null                                              *units: return null;
        label *label115                                              unit = findFreeUnit(@flare, 0);
  127:  set :backgroundProcess:unit *tmp14                           ...
  128:  jump *label116 notEqual *tmp14 null                          if unit == null then
  129:  sensor *tmp27 :backgroundProcess:drill1 @titanium            count += drill1.@titanium + drill2.@titanium + drill3.@titanium + drill4.@titanium;
  130:  sensor *tmp28 :backgroundProcess:drill2 @titanium            ...
  131:  op add *tmp29 *tmp27 *tmp28                                  ...
  132:  sensor *tmp30 :backgroundProcess:drill3 @titanium            ...
  133:  op add *tmp31 *tmp29 *tmp30                                  ...
  134:  sensor *tmp32 :backgroundProcess:drill4 @titanium            ...
  135:  op add *tmp33 *tmp31 *tmp32                                  ...
  136:  op add :backgroundProcess:count :backgroundProcess:count *tm ...
  137:  jump *label137 always 0 0                                    continue;
        label *label116                                              if unit == null then
        label *label118                                              if unit.@controller != @this then
  138:  ubind :backgroundProcess:unit                                ubind(unit);
        # "Function: def serviceSpot(in drill1, in drill2, in drill3 count += serviceSpot(drill1, drill2, drill3, drill4);
  139:  sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium   var t1 = drill1.@titanium;
  140:  sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium   var t2 = drill2.@titanium;
  141:  sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium   var t3 = drill3.@titanium;
  142:  sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium   var t4 = drill4.@titanium;
  143:  op add *tmp39 :serviceSpot:t1 :serviceSpot:t2                var drillAmount = t1 + t2 + t3 + t4;
  144:  op add *tmp40 *tmp39 :serviceSpot:t3                         ...
  145:  op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4       ...
  146:  sensor :serviceSpot:unitAmount @unit @totalItems             var unitAmount = @unit.@totalItems;
  147:  sensor *tmp43 @unit @flag                                    if @unit.@flag == outgoing then
  148:  jump *label132 notEqual *tmp43 1                             ...
  149:  sensor *tmp46 :backgroundProcess:drill1 @x                   approach(drill1.@x, drill1.@y, 2);
  150:  sensor *tmp47 :backgroundProcess:drill1 @y                   ...
  151:  ucontrol approach *tmp46 *tmp47 2 0 0                        ...
  152:  op max *tmp48 :serviceSpot:t1 :serviceSpot:t2                var max = max(t1, t2, t3, t4);
  153:  op max *tmp48 *tmp48 :serviceSpot:t3                         ...
  154:  op max *tmp48 *tmp48 :serviceSpot:t4                         ...
  155:  jump *label120 notEqual :serviceSpot:t1 *tmp48               if t1 == max then itemTake(drill1, @titanium, CAPACITY); end;
  156:  ucontrol itemTake :backgroundProcess:drill1 @titanium 10 0 0 ...
        label *label120                                              ...
  157:  jump *label122 notEqual :serviceSpot:t2 *tmp48               if t2 == max then itemTake(drill2, @titanium, CAPACITY); end;
  158:  ucontrol itemTake :backgroundProcess:drill2 @titanium 10 0 0 ...
        label *label122                                              ...
  159:  jump *label124 notEqual :serviceSpot:t3 *tmp48               if t3 == max then itemTake(drill3, @titanium, CAPACITY); end;
  160:  ucontrol itemTake :backgroundProcess:drill3 @titanium 10 0 0 ...
        label *label124                                              ...
  161:  jump *label126 notEqual :serviceSpot:t4 *tmp48               if t4 == max then itemTake(drill4, @titanium, CAPACITY); end;
  162:  ucontrol itemTake :backgroundProcess:drill4 @titanium 10 0 0 ...
        label *label126                                              ...
  163:  op greaterThanEq *tmp57 :serviceSpot:unitAmount 10           if unitAmount >= CAPACITY or drillAmount == 0 then
  164:  op equal *tmp58 :serviceSpot:drillAmount 0                   ...
  165:  op or *tmp59 *tmp57 *tmp58                                   ...
  166:  jump *label128 equal *tmp59 false                            ...
  167:  ucontrol flag 2 0 0 0 0                                      flag(returning);
  168:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  169:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  170:  jump *label135 always 0 0                                    if unitAmount >= CAPACITY or drillAmount == 0 then
        label *label128                                              ...
  171:  sensor *tmp61 @unit @firstItem                               elsif @unit.@firstItem != @titanium then
  172:  jump *label135 equal *tmp61 @titanium                        ...
  173:  ucontrol itemDrop @air 10 0 0 0                              itemDrop(@air, CAPACITY);
  174:  jump *label135 always 0 0                                    if @unit.@flag == outgoing then
        label *label132                                              ...
  175:  jump *label133 equal :serviceSpot:unitAmount false           if unitAmount then
  176:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  177:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  178:  jump *label134 always 0 0                                    if unitAmount then
        label *label133                                              ...
  179:  ucontrol flag 1 0 0 0 0                                      flag(outgoing);
        label *label134                                              if unitAmount then
        label *label135                                              if @unit.@flag == outgoing then
  180:  op add :backgroundProcess:count :backgroundProcess:count :se count += serviceSpot(drill1, drill2, drill3, drill4);
        label *label137                                              for var out unit in units; var drill1, drill2, drill3, drill4 in drills do
  181:  set .units*1 :backgroundProcess:unit                         ...
  182:  set :backgroundProcess:unit .units*2                         ...
  183:  set :backgroundProcess:drill1 .drills*8                      ...
  184:  set :backgroundProcess:drill2 .drills*9                      ...
  185:  set :backgroundProcess:drill3 .drills*10                     ...
  186:  set :backgroundProcess:drill4 .drills*11                     ...
  187:  jump *label19 equal :backgroundProcess:drill1 null           if drill1 == null then break; end;
  188:  sensor *tmp11 :backgroundProcess:unit @controller            if unit.@controller != @this then
  189:  jump *label155 equal *tmp11 @this                            ...
        # "Function: def findFreeUnit(in unit_type, in initial_flag) unit = findFreeUnit(@flare, 0);
  190:  ubind @flare                                                 *units: ubind(unit_type);
  191:  jump *label143 notEqual @unit null                           *units: if @unit == null then return null; end;
  192:  set *tmp14 null                                              ...
  193:  jump *label152 always 0 0                                    ...
        label *label143                                              ...
  194:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label145                                              *units: do
  195:  sensor *tmp17 @unit @controlled                              *units: if @unit.@controlled == 0 then
  196:  jump *label146 notEqual *tmp17 0                             ...
  197:  ucontrol flag 0 0 0 0 0                                      *units: flag(initial_flag);        // Mark unit as active
  198:  set *tmp14 @unit                                             *units: return @unit;
  199:  jump *label152 always 0 0                                    ...
        label *label146                                              *units: if @unit.@controlled == 0 then
  200:  sensor *tmp20 :findFreeUnit:first_unit @dead                 *units: elsif first_unit.@dead == 1 then
  201:  jump *label147 notEqual *tmp20 1                             ...
  202:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label147                                              *units: elsif first_unit.@dead == 1 then
  203:  ubind @flare                                                 *units: ubind(unit_type);
  204:  jump *label145 notEqual :findFreeUnit:first_unit @unit       *units: do
  205:  set *tmp14 null                                              *units: return null;
        label *label152                                              unit = findFreeUnit(@flare, 0);
  206:  set :backgroundProcess:unit *tmp14                           ...
  207:  jump *label153 notEqual *tmp14 null                          if unit == null then
  208:  sensor *tmp27 :backgroundProcess:drill1 @titanium            count += drill1.@titanium + drill2.@titanium + drill3.@titanium + drill4.@titanium;
  209:  sensor *tmp28 :backgroundProcess:drill2 @titanium            ...
  210:  op add *tmp29 *tmp27 *tmp28                                  ...
  211:  sensor *tmp30 :backgroundProcess:drill3 @titanium            ...
  212:  op add *tmp31 *tmp29 *tmp30                                  ...
  213:  sensor *tmp32 :backgroundProcess:drill4 @titanium            ...
  214:  op add *tmp33 *tmp31 *tmp32                                  ...
  215:  op add :backgroundProcess:count :backgroundProcess:count *tm ...
  216:  jump *label174 always 0 0                                    continue;
        label *label153                                              if unit == null then
        label *label155                                              if unit.@controller != @this then
  217:  ubind :backgroundProcess:unit                                ubind(unit);
        # "Function: def serviceSpot(in drill1, in drill2, in drill3 count += serviceSpot(drill1, drill2, drill3, drill4);
  218:  sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium   var t1 = drill1.@titanium;
  219:  sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium   var t2 = drill2.@titanium;
  220:  sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium   var t3 = drill3.@titanium;
  221:  sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium   var t4 = drill4.@titanium;
  222:  op add *tmp39 :serviceSpot:t1 :serviceSpot:t2                var drillAmount = t1 + t2 + t3 + t4;
  223:  op add *tmp40 *tmp39 :serviceSpot:t3                         ...
  224:  op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4       ...
  225:  sensor :serviceSpot:unitAmount @unit @totalItems             var unitAmount = @unit.@totalItems;
  226:  sensor *tmp43 @unit @flag                                    if @unit.@flag == outgoing then
  227:  jump *label169 notEqual *tmp43 1                             ...
  228:  sensor *tmp46 :backgroundProcess:drill1 @x                   approach(drill1.@x, drill1.@y, 2);
  229:  sensor *tmp47 :backgroundProcess:drill1 @y                   ...
  230:  ucontrol approach *tmp46 *tmp47 2 0 0                        ...
  231:  op max *tmp48 :serviceSpot:t1 :serviceSpot:t2                var max = max(t1, t2, t3, t4);
  232:  op max *tmp48 *tmp48 :serviceSpot:t3                         ...
  233:  op max *tmp48 *tmp48 :serviceSpot:t4                         ...
  234:  jump *label157 notEqual :serviceSpot:t1 *tmp48               if t1 == max then itemTake(drill1, @titanium, CAPACITY); end;
  235:  ucontrol itemTake :backgroundProcess:drill1 @titanium 10 0 0 ...
        label *label157                                              ...
  236:  jump *label159 notEqual :serviceSpot:t2 *tmp48               if t2 == max then itemTake(drill2, @titanium, CAPACITY); end;
  237:  ucontrol itemTake :backgroundProcess:drill2 @titanium 10 0 0 ...
        label *label159                                              ...
  238:  jump *label161 notEqual :serviceSpot:t3 *tmp48               if t3 == max then itemTake(drill3, @titanium, CAPACITY); end;
  239:  ucontrol itemTake :backgroundProcess:drill3 @titanium 10 0 0 ...
        label *label161                                              ...
  240:  jump *label163 notEqual :serviceSpot:t4 *tmp48               if t4 == max then itemTake(drill4, @titanium, CAPACITY); end;
  241:  ucontrol itemTake :backgroundProcess:drill4 @titanium 10 0 0 ...
        label *label163                                              ...
  242:  op greaterThanEq *tmp57 :serviceSpot:unitAmount 10           if unitAmount >= CAPACITY or drillAmount == 0 then
  243:  op equal *tmp58 :serviceSpot:drillAmount 0                   ...
  244:  op or *tmp59 *tmp57 *tmp58                                   ...
  245:  jump *label165 equal *tmp59 false                            ...
  246:  ucontrol flag 2 0 0 0 0                                      flag(returning);
  247:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  248:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  249:  jump *label172 always 0 0                                    if unitAmount >= CAPACITY or drillAmount == 0 then
        label *label165                                              ...
  250:  sensor *tmp61 @unit @firstItem                               elsif @unit.@firstItem != @titanium then
  251:  jump *label172 equal *tmp61 @titanium                        ...
  252:  ucontrol itemDrop @air 10 0 0 0                              itemDrop(@air, CAPACITY);
  253:  jump *label172 always 0 0                                    if @unit.@flag == outgoing then
        label *label169                                              ...
  254:  jump *label170 equal :serviceSpot:unitAmount false           if unitAmount then
  255:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  256:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  257:  jump *label171 always 0 0                                    if unitAmount then
        label *label170                                              ...
  258:  ucontrol flag 1 0 0 0 0                                      flag(outgoing);
        label *label171                                              if unitAmount then
        label *label172                                              if @unit.@flag == outgoing then
  259:  op add :backgroundProcess:count :backgroundProcess:count :se count += serviceSpot(drill1, drill2, drill3, drill4);
        label *label174                                              for var out unit in units; var drill1, drill2, drill3, drill4 in drills do
  260:  set .units*2 :backgroundProcess:unit                         ...
  261:  set :backgroundProcess:unit .units*3                         ...
  262:  set :backgroundProcess:drill1 .drills*12                     ...
  263:  set :backgroundProcess:drill2 .drills*13                     ...
  264:  set :backgroundProcess:drill3 .drills*14                     ...
  265:  set :backgroundProcess:drill4 .drills*15                     ...
  266:  jump *label19 equal :backgroundProcess:drill1 null           if drill1 == null then break; end;
  267:  sensor *tmp11 :backgroundProcess:unit @controller            if unit.@controller != @this then
  268:  jump *label192 equal *tmp11 @this                            ...
        # "Function: def findFreeUnit(in unit_type, in initial_flag) unit = findFreeUnit(@flare, 0);
  269:  ubind @flare                                                 *units: ubind(unit_type);
  270:  jump *label180 notEqual @unit null                           *units: if @unit == null then return null; end;
  271:  set *tmp14 null                                              ...
  272:  jump *label189 always 0 0                                    ...
        label *label180                                              ...
  273:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label182                                              *units: do
  274:  sensor *tmp17 @unit @controlled                              *units: if @unit.@controlled == 0 then
  275:  jump *label183 notEqual *tmp17 0                             ...
  276:  ucontrol flag 0 0 0 0 0                                      *units: flag(initial_flag);        // Mark unit as active
  277:  set *tmp14 @unit                                             *units: return @unit;
  278:  jump *label189 always 0 0                                    ...
        label *label183                                              *units: if @unit.@controlled == 0 then
  279:  sensor *tmp20 :findFreeUnit:first_unit @dead                 *units: elsif first_unit.@dead == 1 then
  280:  jump *label184 notEqual *tmp20 1                             ...
  281:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label184                                              *units: elsif first_unit.@dead == 1 then
  282:  ubind @flare                                                 *units: ubind(unit_type);
  283:  jump *label182 notEqual :findFreeUnit:first_unit @unit       *units: do
  284:  set *tmp14 null                                              *units: return null;
        label *label189                                              unit = findFreeUnit(@flare, 0);
  285:  set :backgroundProcess:unit *tmp14                           ...
  286:  jump *label190 notEqual *tmp14 null                          if unit == null then
  287:  sensor *tmp27 :backgroundProcess:drill1 @titanium            count += drill1.@titanium + drill2.@titanium + drill3.@titanium + drill4.@titanium;
  288:  sensor *tmp28 :backgroundProcess:drill2 @titanium            ...
  289:  op add *tmp29 *tmp27 *tmp28                                  ...
  290:  sensor *tmp30 :backgroundProcess:drill3 @titanium            ...
  291:  op add *tmp31 *tmp29 *tmp30                                  ...
  292:  sensor *tmp32 :backgroundProcess:drill4 @titanium            ...
  293:  op add *tmp33 *tmp31 *tmp32                                  ...
  294:  op add :backgroundProcess:count :backgroundProcess:count *tm ...
  295:  jump *label211 always 0 0                                    continue;
        label *label190                                              if unit == null then
        label *label192                                              if unit.@controller != @this then
  296:  ubind :backgroundProcess:unit                                ubind(unit);
        # "Function: def serviceSpot(in drill1, in drill2, in drill3 count += serviceSpot(drill1, drill2, drill3, drill4);
  297:  sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium   var t1 = drill1.@titanium;
  298:  sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium   var t2 = drill2.@titanium;
  299:  sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium   var t3 = drill3.@titanium;
  300:  sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium   var t4 = drill4.@titanium;
  301:  op add *tmp39 :serviceSpot:t1 :serviceSpot:t2                var drillAmount = t1 + t2 + t3 + t4;
  302:  op add *tmp40 *tmp39 :serviceSpot:t3                         ...
  303:  op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4       ...
  304:  sensor :serviceSpot:unitAmount @unit @totalItems             var unitAmount = @unit.@totalItems;
  305:  sensor *tmp43 @unit @flag                                    if @unit.@flag == outgoing then
  306:  jump *label206 notEqual *tmp43 1                             ...
  307:  sensor *tmp46 :backgroundProcess:drill1 @x                   approach(drill1.@x, drill1.@y, 2);
  308:  sensor *tmp47 :backgroundProcess:drill1 @y                   ...
  309:  ucontrol approach *tmp46 *tmp47 2 0 0                        ...
  310:  op max *tmp48 :serviceSpot:t1 :serviceSpot:t2                var max = max(t1, t2, t3, t4);
  311:  op max *tmp48 *tmp48 :serviceSpot:t3                         ...
  312:  op max *tmp48 *tmp48 :serviceSpot:t4                         ...
  313:  jump *label194 notEqual :serviceSpot:t1 *tmp48               if t1 == max then itemTake(drill1, @titanium, CAPACITY); end;
  314:  ucontrol itemTake :backgroundProcess:drill1 @titanium 10 0 0 ...
        label *label194                                              ...
  315:  jump *label196 notEqual :serviceSpot:t2 *tmp48               if t2 == max then itemTake(drill2, @titanium, CAPACITY); end;
  316:  ucontrol itemTake :backgroundProcess:drill2 @titanium 10 0 0 ...
        label *label196                                              ...
  317:  jump *label198 notEqual :serviceSpot:t3 *tmp48               if t3 == max then itemTake(drill3, @titanium, CAPACITY); end;
  318:  ucontrol itemTake :backgroundProcess:drill3 @titanium 10 0 0 ...
        label *label198                                              ...
  319:  jump *label200 notEqual :serviceSpot:t4 *tmp48               if t4 == max then itemTake(drill4, @titanium, CAPACITY); end;
  320:  ucontrol itemTake :backgroundProcess:drill4 @titanium 10 0 0 ...
        label *label200                                              ...
  321:  op greaterThanEq *tmp57 :serviceSpot:unitAmount 10           if unitAmount >= CAPACITY or drillAmount == 0 then
  322:  op equal *tmp58 :serviceSpot:drillAmount 0                   ...
  323:  op or *tmp59 *tmp57 *tmp58                                   ...
  324:  jump *label202 equal *tmp59 false                            ...
  325:  ucontrol flag 2 0 0 0 0                                      flag(returning);
  326:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  327:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  328:  jump *label209 always 0 0                                    if unitAmount >= CAPACITY or drillAmount == 0 then
        label *label202                                              ...
  329:  sensor *tmp61 @unit @firstItem                               elsif @unit.@firstItem != @titanium then
  330:  jump *label209 equal *tmp61 @titanium                        ...
  331:  ucontrol itemDrop @air 10 0 0 0                              itemDrop(@air, CAPACITY);
  332:  jump *label209 always 0 0                                    if @unit.@flag == outgoing then
        label *label206                                              ...
  333:  jump *label207 equal :serviceSpot:unitAmount false           if unitAmount then
  334:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  335:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  336:  jump *label208 always 0 0                                    if unitAmount then
        label *label207                                              ...
  337:  ucontrol flag 1 0 0 0 0                                      flag(outgoing);
        label *label208                                              if unitAmount then
        label *label209                                              if @unit.@flag == outgoing then
  338:  op add :backgroundProcess:count :backgroundProcess:count :se count += serviceSpot(drill1, drill2, drill3, drill4);
        label *label211                                              for var out unit in units; var drill1, drill2, drill3, drill4 in drills do
  339:  set .units*3 :backgroundProcess:unit                         ...
  340:  set :backgroundProcess:unit .units*4                         ...
  341:  set :backgroundProcess:drill1 .drills*16                     ...
  342:  set :backgroundProcess:drill2 .drills*17                     ...
  343:  set :backgroundProcess:drill3 .drills*18                     ...
  344:  set :backgroundProcess:drill4 .drills*19                     ...
  345:  jump *label19 equal :backgroundProcess:drill1 null           if drill1 == null then break; end;
  346:  sensor *tmp11 :backgroundProcess:unit @controller            if unit.@controller != @this then
  347:  jump *label229 equal *tmp11 @this                            ...
        # "Function: def findFreeUnit(in unit_type, in initial_flag) unit = findFreeUnit(@flare, 0);
  348:  ubind @flare                                                 *units: ubind(unit_type);
  349:  jump *label217 notEqual @unit null                           *units: if @unit == null then return null; end;
  350:  set *tmp14 null                                              ...
  351:  jump *label226 always 0 0                                    ...
        label *label217                                              ...
  352:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label219                                              *units: do
  353:  sensor *tmp17 @unit @controlled                              *units: if @unit.@controlled == 0 then
  354:  jump *label220 notEqual *tmp17 0                             ...
  355:  ucontrol flag 0 0 0 0 0                                      *units: flag(initial_flag);        // Mark unit as active
  356:  set *tmp14 @unit                                             *units: return @unit;
  357:  jump *label226 always 0 0                                    ...
        label *label220                                              *units: if @unit.@controlled == 0 then
  358:  sensor *tmp20 :findFreeUnit:first_unit @dead                 *units: elsif first_unit.@dead == 1 then
  359:  jump *label221 notEqual *tmp20 1                             ...
  360:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label221                                              *units: elsif first_unit.@dead == 1 then
  361:  ubind @flare                                                 *units: ubind(unit_type);
  362:  jump *label219 notEqual :findFreeUnit:first_unit @unit       *units: do
  363:  set *tmp14 null                                              *units: return null;
        label *label226                                              unit = findFreeUnit(@flare, 0);
  364:  set :backgroundProcess:unit *tmp14                           ...
  365:  jump *label227 notEqual *tmp14 null                          if unit == null then
  366:  sensor *tmp27 :backgroundProcess:drill1 @titanium            count += drill1.@titanium + drill2.@titanium + drill3.@titanium + drill4.@titanium;
  367:  sensor *tmp28 :backgroundProcess:drill2 @titanium            ...
  368:  op add *tmp29 *tmp27 *tmp28                                  ...
  369:  sensor *tmp30 :backgroundProcess:drill3 @titanium            ...
  370:  op add *tmp31 *tmp29 *tmp30                                  ...
  371:  sensor *tmp32 :backgroundProcess:drill4 @titanium            ...
  372:  op add *tmp33 *tmp31 *tmp32                                  ...
  373:  op add :backgroundProcess:count :backgroundProcess:count *tm ...
  374:  jump *label248 always 0 0                                    continue;
        label *label227                                              if unit == null then
        label *label229                                              if unit.@controller != @this then
  375:  ubind :backgroundProcess:unit                                ubind(unit);
        # "Function: def serviceSpot(in drill1, in drill2, in drill3 count += serviceSpot(drill1, drill2, drill3, drill4);
  376:  sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium   var t1 = drill1.@titanium;
  377:  sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium   var t2 = drill2.@titanium;
  378:  sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium   var t3 = drill3.@titanium;
  379:  sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium   var t4 = drill4.@titanium;
  380:  op add *tmp39 :serviceSpot:t1 :serviceSpot:t2                var drillAmount = t1 + t2 + t3 + t4;
  381:  op add *tmp40 *tmp39 :serviceSpot:t3                         ...
  382:  op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4       ...
  383:  sensor :serviceSpot:unitAmount @unit @totalItems             var unitAmount = @unit.@totalItems;
  384:  sensor *tmp43 @unit @flag                                    if @unit.@flag == outgoing then
  385:  jump *label243 notEqual *tmp43 1                             ...
  386:  sensor *tmp46 :backgroundProcess:drill1 @x                   approach(drill1.@x, drill1.@y, 2);
  387:  sensor *tmp47 :backgroundProcess:drill1 @y                   ...
  388:  ucontrol approach *tmp46 *tmp47 2 0 0                        ...
  389:  op max *tmp48 :serviceSpot:t1 :serviceSpot:t2                var max = max(t1, t2, t3, t4);
  390:  op max *tmp48 *tmp48 :serviceSpot:t3                         ...
  391:  op max *tmp48 *tmp48 :serviceSpot:t4                         ...
  392:  jump *label231 notEqual :serviceSpot:t1 *tmp48               if t1 == max then itemTake(drill1, @titanium, CAPACITY); end;
  393:  ucontrol itemTake :backgroundProcess:drill1 @titanium 10 0 0 ...
        label *label231                                              ...
  394:  jump *label233 notEqual :serviceSpot:t2 *tmp48               if t2 == max then itemTake(drill2, @titanium, CAPACITY); end;
  395:  ucontrol itemTake :backgroundProcess:drill2 @titanium 10 0 0 ...
        label *label233                                              ...
  396:  jump *label235 notEqual :serviceSpot:t3 *tmp48               if t3 == max then itemTake(drill3, @titanium, CAPACITY); end;
  397:  ucontrol itemTake :backgroundProcess:drill3 @titanium 10 0 0 ...
        label *label235                                              ...
  398:  jump *label237 notEqual :serviceSpot:t4 *tmp48               if t4 == max then itemTake(drill4, @titanium, CAPACITY); end;
  399:  ucontrol itemTake :backgroundProcess:drill4 @titanium 10 0 0 ...
        label *label237                                              ...
  400:  op greaterThanEq *tmp57 :serviceSpot:unitAmount 10           if unitAmount >= CAPACITY or drillAmount == 0 then
  401:  op equal *tmp58 :serviceSpot:drillAmount 0                   ...
  402:  op or *tmp59 *tmp57 *tmp58                                   ...
  403:  jump *label239 equal *tmp59 false                            ...
  404:  ucontrol flag 2 0 0 0 0                                      flag(returning);
  405:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  406:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  407:  jump *label246 always 0 0                                    if unitAmount >= CAPACITY or drillAmount == 0 then
        label *label239                                              ...
  408:  sensor *tmp61 @unit @firstItem                               elsif @unit.@firstItem != @titanium then
  409:  jump *label246 equal *tmp61 @titanium                        ...
  410:  ucontrol itemDrop @air 10 0 0 0                              itemDrop(@air, CAPACITY);
  411:  jump *label246 always 0 0                                    if @unit.@flag == outgoing then
        label *label243                                              ...
  412:  jump *label244 equal :serviceSpot:unitAmount false           if unitAmount then
  413:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  414:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  415:  jump *label245 always 0 0                                    if unitAmount then
        label *label244                                              ...
  416:  ucontrol flag 1 0 0 0 0                                      flag(outgoing);
        label *label245                                              if unitAmount then
        label *label246                                              if @unit.@flag == outgoing then
  417:  op add :backgroundProcess:count :backgroundProcess:count :se count += serviceSpot(drill1, drill2, drill3, drill4);
        label *label248                                              for var out unit in units; var drill1, drill2, drill3, drill4 in drills do
  418:  set .units*4 :backgroundProcess:unit                         ...
  419:  set :backgroundProcess:unit .units*5                         ...
  420:  set :backgroundProcess:drill1 .drills*20                     ...
  421:  set :backgroundProcess:drill2 .drills*21                     ...
  422:  set :backgroundProcess:drill3 .drills*22                     ...
  423:  set :backgroundProcess:drill4 .drills*23                     ...
  424:  jump *label19 equal :backgroundProcess:drill1 null           if drill1 == null then break; end;
  425:  sensor *tmp11 :backgroundProcess:unit @controller            if unit.@controller != @this then
  426:  jump *label266 equal *tmp11 @this                            ...
        # "Function: def findFreeUnit(in unit_type, in initial_flag) unit = findFreeUnit(@flare, 0);
  427:  ubind @flare                                                 *units: ubind(unit_type);
  428:  jump *label254 notEqual @unit null                           *units: if @unit == null then return null; end;
  429:  set *tmp14 null                                              ...
  430:  jump *label263 always 0 0                                    ...
        label *label254                                              ...
  431:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label256                                              *units: do
  432:  sensor *tmp17 @unit @controlled                              *units: if @unit.@controlled == 0 then
  433:  jump *label257 notEqual *tmp17 0                             ...
  434:  ucontrol flag 0 0 0 0 0                                      *units: flag(initial_flag);        // Mark unit as active
  435:  set *tmp14 @unit                                             *units: return @unit;
  436:  jump *label263 always 0 0                                    ...
        label *label257                                              *units: if @unit.@controlled == 0 then
  437:  sensor *tmp20 :findFreeUnit:first_unit @dead                 *units: elsif first_unit.@dead == 1 then
  438:  jump *label258 notEqual *tmp20 1                             ...
  439:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label258                                              *units: elsif first_unit.@dead == 1 then
  440:  ubind @flare                                                 *units: ubind(unit_type);
  441:  jump *label256 notEqual :findFreeUnit:first_unit @unit       *units: do
  442:  set *tmp14 null                                              *units: return null;
        label *label263                                              unit = findFreeUnit(@flare, 0);
  443:  set :backgroundProcess:unit *tmp14                           ...
  444:  jump *label264 notEqual *tmp14 null                          if unit == null then
  445:  sensor *tmp27 :backgroundProcess:drill1 @titanium            count += drill1.@titanium + drill2.@titanium + drill3.@titanium + drill4.@titanium;
  446:  sensor *tmp28 :backgroundProcess:drill2 @titanium            ...
  447:  op add *tmp29 *tmp27 *tmp28                                  ...
  448:  sensor *tmp30 :backgroundProcess:drill3 @titanium            ...
  449:  op add *tmp31 *tmp29 *tmp30                                  ...
  450:  sensor *tmp32 :backgroundProcess:drill4 @titanium            ...
  451:  op add *tmp33 *tmp31 *tmp32                                  ...
  452:  op add :backgroundProcess:count :backgroundProcess:count *tm ...
  453:  jump *label285 always 0 0                                    continue;
        label *label264                                              if unit == null then
        label *label266                                              if unit.@controller != @this then
  454:  ubind :backgroundProcess:unit                                ubind(unit);
        # "Function: def serviceSpot(in drill1, in drill2, in drill3 count += serviceSpot(drill1, drill2, drill3, drill4);
  455:  sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium   var t1 = drill1.@titanium;
  456:  sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium   var t2 = drill2.@titanium;
  457:  sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium   var t3 = drill3.@titanium;
  458:  sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium   var t4 = drill4.@titanium;
  459:  op add *tmp39 :serviceSpot:t1 :serviceSpot:t2                var drillAmount = t1 + t2 + t3 + t4;
  460:  op add *tmp40 *tmp39 :serviceSpot:t3                         ...
  461:  op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4       ...
  462:  sensor :serviceSpot:unitAmount @unit @totalItems             var unitAmount = @unit.@totalItems;
  463:  sensor *tmp43 @unit @flag                                    if @unit.@flag == outgoing then
  464:  jump *label280 notEqual *tmp43 1                             ...
  465:  sensor *tmp46 :backgroundProcess:drill1 @x                   approach(drill1.@x, drill1.@y, 2);
  466:  sensor *tmp47 :backgroundProcess:drill1 @y                   ...
  467:  ucontrol approach *tmp46 *tmp47 2 0 0                        ...
  468:  op max *tmp48 :serviceSpot:t1 :serviceSpot:t2                var max = max(t1, t2, t3, t4);
  469:  op max *tmp48 *tmp48 :serviceSpot:t3                         ...
  470:  op max *tmp48 *tmp48 :serviceSpot:t4                         ...
  471:  jump *label268 notEqual :serviceSpot:t1 *tmp48               if t1 == max then itemTake(drill1, @titanium, CAPACITY); end;
  472:  ucontrol itemTake :backgroundProcess:drill1 @titanium 10 0 0 ...
        label *label268                                              ...
  473:  jump *label270 notEqual :serviceSpot:t2 *tmp48               if t2 == max then itemTake(drill2, @titanium, CAPACITY); end;
  474:  ucontrol itemTake :backgroundProcess:drill2 @titanium 10 0 0 ...
        label *label270                                              ...
  475:  jump *label272 notEqual :serviceSpot:t3 *tmp48               if t3 == max then itemTake(drill3, @titanium, CAPACITY); end;
  476:  ucontrol itemTake :backgroundProcess:drill3 @titanium 10 0 0 ...
        label *label272                                              ...
  477:  jump *label274 notEqual :serviceSpot:t4 *tmp48               if t4 == max then itemTake(drill4, @titanium, CAPACITY); end;
  478:  ucontrol itemTake :backgroundProcess:drill4 @titanium 10 0 0 ...
        label *label274                                              ...
  479:  op greaterThanEq *tmp57 :serviceSpot:unitAmount 10           if unitAmount >= CAPACITY or drillAmount == 0 then
  480:  op equal *tmp58 :serviceSpot:drillAmount 0                   ...
  481:  op or *tmp59 *tmp57 *tmp58                                   ...
  482:  jump *label276 equal *tmp59 false                            ...
  483:  ucontrol flag 2 0 0 0 0                                      flag(returning);
  484:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  485:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  486:  jump *label283 always 0 0                                    if unitAmount >= CAPACITY or drillAmount == 0 then
        label *label276                                              ...
  487:  sensor *tmp61 @unit @firstItem                               elsif @unit.@firstItem != @titanium then
  488:  jump *label283 equal *tmp61 @titanium                        ...
  489:  ucontrol itemDrop @air 10 0 0 0                              itemDrop(@air, CAPACITY);
  490:  jump *label283 always 0 0                                    if @unit.@flag == outgoing then
        label *label280                                              ...
  491:  jump *label281 equal :serviceSpot:unitAmount false           if unitAmount then
  492:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  493:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  494:  jump *label282 always 0 0                                    if unitAmount then
        label *label281                                              ...
  495:  ucontrol flag 1 0 0 0 0                                      flag(outgoing);
        label *label282                                              if unitAmount then
        label *label283                                              if @unit.@flag == outgoing then
  496:  op add :backgroundProcess:count :backgroundProcess:count :se count += serviceSpot(drill1, drill2, drill3, drill4);
        label *label285                                              for var out unit in units; var drill1, drill2, drill3, drill4 in drills do
  497:  set .units*5 :backgroundProcess:unit                         ...
  498:  set :backgroundProcess:unit .units*6                         ...
  499:  set :backgroundProcess:drill1 .drills*24                     ...
  500:  set :backgroundProcess:drill2 .drills*25                     ...
  501:  set :backgroundProcess:drill3 .drills*26                     ...
  502:  set :backgroundProcess:drill4 .drills*27                     ...
  503:  jump *label19 equal :backgroundProcess:drill1 null           if drill1 == null then break; end;
  504:  sensor *tmp11 :backgroundProcess:unit @controller            if unit.@controller != @this then
  505:  jump *label303 equal *tmp11 @this                            ...
        # "Function: def findFreeUnit(in unit_type, in initial_flag) unit = findFreeUnit(@flare, 0);
  506:  ubind @flare                                                 *units: ubind(unit_type);
  507:  jump *label291 notEqual @unit null                           *units: if @unit == null then return null; end;
  508:  set *tmp14 null                                              ...
  509:  jump *label300 always 0 0                                    ...
        label *label291                                              ...
  510:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label293                                              *units: do
  511:  sensor *tmp17 @unit @controlled                              *units: if @unit.@controlled == 0 then
  512:  jump *label294 notEqual *tmp17 0                             ...
  513:  ucontrol flag 0 0 0 0 0                                      *units: flag(initial_flag);        // Mark unit as active
  514:  set *tmp14 @unit                                             *units: return @unit;
  515:  jump *label300 always 0 0                                    ...
        label *label294                                              *units: if @unit.@controlled == 0 then
  516:  sensor *tmp20 :findFreeUnit:first_unit @dead                 *units: elsif first_unit.@dead == 1 then
  517:  jump *label295 notEqual *tmp20 1                             ...
  518:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label295                                              *units: elsif first_unit.@dead == 1 then
  519:  ubind @flare                                                 *units: ubind(unit_type);
  520:  jump *label293 notEqual :findFreeUnit:first_unit @unit       *units: do
  521:  set *tmp14 null                                              *units: return null;
        label *label300                                              unit = findFreeUnit(@flare, 0);
  522:  set :backgroundProcess:unit *tmp14                           ...
  523:  jump *label301 notEqual *tmp14 null                          if unit == null then
  524:  sensor *tmp27 :backgroundProcess:drill1 @titanium            count += drill1.@titanium + drill2.@titanium + drill3.@titanium + drill4.@titanium;
  525:  sensor *tmp28 :backgroundProcess:drill2 @titanium            ...
  526:  op add *tmp29 *tmp27 *tmp28                                  ...
  527:  sensor *tmp30 :backgroundProcess:drill3 @titanium            ...
  528:  op add *tmp31 *tmp29 *tmp30                                  ...
  529:  sensor *tmp32 :backgroundProcess:drill4 @titanium            ...
  530:  op add *tmp33 *tmp31 *tmp32                                  ...
  531:  op add :backgroundProcess:count :backgroundProcess:count *tm ...
  532:  jump *label322 always 0 0                                    continue;
        label *label301                                              if unit == null then
        label *label303                                              if unit.@controller != @this then
  533:  ubind :backgroundProcess:unit                                ubind(unit);
        # "Function: def serviceSpot(in drill1, in drill2, in drill3 count += serviceSpot(drill1, drill2, drill3, drill4);
  534:  sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium   var t1 = drill1.@titanium;
  535:  sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium   var t2 = drill2.@titanium;
  536:  sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium   var t3 = drill3.@titanium;
  537:  sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium   var t4 = drill4.@titanium;
  538:  op add *tmp39 :serviceSpot:t1 :serviceSpot:t2                var drillAmount = t1 + t2 + t3 + t4;
  539:  op add *tmp40 *tmp39 :serviceSpot:t3                         ...
  540:  op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4       ...
  541:  sensor :serviceSpot:unitAmount @unit @totalItems             var unitAmount = @unit.@totalItems;
  542:  sensor *tmp43 @unit @flag                                    if @unit.@flag == outgoing then
  543:  jump *label317 notEqual *tmp43 1                             ...
  544:  sensor *tmp46 :backgroundProcess:drill1 @x                   approach(drill1.@x, drill1.@y, 2);
  545:  sensor *tmp47 :backgroundProcess:drill1 @y                   ...
  546:  ucontrol approach *tmp46 *tmp47 2 0 0                        ...
  547:  op max *tmp48 :serviceSpot:t1 :serviceSpot:t2                var max = max(t1, t2, t3, t4);
  548:  op max *tmp48 *tmp48 :serviceSpot:t3                         ...
  549:  op max *tmp48 *tmp48 :serviceSpot:t4                         ...
  550:  jump *label305 notEqual :serviceSpot:t1 *tmp48               if t1 == max then itemTake(drill1, @titanium, CAPACITY); end;
  551:  ucontrol itemTake :backgroundProcess:drill1 @titanium 10 0 0 ...
        label *label305                                              ...
  552:  jump *label307 notEqual :serviceSpot:t2 *tmp48               if t2 == max then itemTake(drill2, @titanium, CAPACITY); end;
  553:  ucontrol itemTake :backgroundProcess:drill2 @titanium 10 0 0 ...
        label *label307                                              ...
  554:  jump *label309 notEqual :serviceSpot:t3 *tmp48               if t3 == max then itemTake(drill3, @titanium, CAPACITY); end;
  555:  ucontrol itemTake :backgroundProcess:drill3 @titanium 10 0 0 ...
        label *label309                                              ...
  556:  jump *label311 notEqual :serviceSpot:t4 *tmp48               if t4 == max then itemTake(drill4, @titanium, CAPACITY); end;
  557:  ucontrol itemTake :backgroundProcess:drill4 @titanium 10 0 0 ...
        label *label311                                              ...
  558:  op greaterThanEq *tmp57 :serviceSpot:unitAmount 10           if unitAmount >= CAPACITY or drillAmount == 0 then
  559:  op equal *tmp58 :serviceSpot:drillAmount 0                   ...
  560:  op or *tmp59 *tmp57 *tmp58                                   ...
  561:  jump *label313 equal *tmp59 false                            ...
  562:  ucontrol flag 2 0 0 0 0                                      flag(returning);
  563:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  564:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  565:  jump *label320 always 0 0                                    if unitAmount >= CAPACITY or drillAmount == 0 then
        label *label313                                              ...
  566:  sensor *tmp61 @unit @firstItem                               elsif @unit.@firstItem != @titanium then
  567:  jump *label320 equal *tmp61 @titanium                        ...
  568:  ucontrol itemDrop @air 10 0 0 0                              itemDrop(@air, CAPACITY);
  569:  jump *label320 always 0 0                                    if @unit.@flag == outgoing then
        label *label317                                              ...
  570:  jump *label318 equal :serviceSpot:unitAmount false           if unitAmount then
  571:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  572:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  573:  jump *label319 always 0 0                                    if unitAmount then
        label *label318                                              ...
  574:  ucontrol flag 1 0 0 0 0                                      flag(outgoing);
        label *label319                                              if unitAmount then
        label *label320                                              if @unit.@flag == outgoing then
  575:  op add :backgroundProcess:count :backgroundProcess:count :se count += serviceSpot(drill1, drill2, drill3, drill4);
        label *label322                                              for var out unit in units; var drill1, drill2, drill3, drill4 in drills do
  576:  set .units*6 :backgroundProcess:unit                         ...
  577:  set :backgroundProcess:unit .units*7                         ...
  578:  set :backgroundProcess:drill1 .drills*28                     ...
  579:  set :backgroundProcess:drill2 .drills*29                     ...
  580:  set :backgroundProcess:drill3 .drills*30                     ...
  581:  set :backgroundProcess:drill4 .drills*31                     ...
  582:  jump *label19 equal :backgroundProcess:drill1 null           if drill1 == null then break; end;
  583:  sensor *tmp11 :backgroundProcess:unit @controller            if unit.@controller != @this then
  584:  jump *label340 equal *tmp11 @this                            ...
        # "Function: def findFreeUnit(in unit_type, in initial_flag) unit = findFreeUnit(@flare, 0);
  585:  ubind @flare                                                 *units: ubind(unit_type);
  586:  jump *label328 notEqual @unit null                           *units: if @unit == null then return null; end;
  587:  set *tmp14 null                                              ...
  588:  jump *label337 always 0 0                                    ...
        label *label328                                              ...
  589:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label330                                              *units: do
  590:  sensor *tmp17 @unit @controlled                              *units: if @unit.@controlled == 0 then
  591:  jump *label331 notEqual *tmp17 0                             ...
  592:  ucontrol flag 0 0 0 0 0                                      *units: flag(initial_flag);        // Mark unit as active
  593:  set *tmp14 @unit                                             *units: return @unit;
  594:  jump *label337 always 0 0                                    ...
        label *label331                                              *units: if @unit.@controlled == 0 then
  595:  sensor *tmp20 :findFreeUnit:first_unit @dead                 *units: elsif first_unit.@dead == 1 then
  596:  jump *label332 notEqual *tmp20 1                             ...
  597:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label332                                              *units: elsif first_unit.@dead == 1 then
  598:  ubind @flare                                                 *units: ubind(unit_type);
  599:  jump *label330 notEqual :findFreeUnit:first_unit @unit       *units: do
  600:  set *tmp14 null                                              *units: return null;
        label *label337                                              unit = findFreeUnit(@flare, 0);
  601:  set :backgroundProcess:unit *tmp14                           ...
  602:  jump *label338 notEqual *tmp14 null                          if unit == null then
  603:  sensor *tmp27 :backgroundProcess:drill1 @titanium            count += drill1.@titanium + drill2.@titanium + drill3.@titanium + drill4.@titanium;
  604:  sensor *tmp28 :backgroundProcess:drill2 @titanium            ...
  605:  op add *tmp29 *tmp27 *tmp28                                  ...
  606:  sensor *tmp30 :backgroundProcess:drill3 @titanium            ...
  607:  op add *tmp31 *tmp29 *tmp30                                  ...
  608:  sensor *tmp32 :backgroundProcess:drill4 @titanium            ...
  609:  op add *tmp33 *tmp31 *tmp32                                  ...
  610:  op add :backgroundProcess:count :backgroundProcess:count *tm ...
  611:  jump *label359 always 0 0                                    continue;
        label *label338                                              if unit == null then
        label *label340                                              if unit.@controller != @this then
  612:  ubind :backgroundProcess:unit                                ubind(unit);
        # "Function: def serviceSpot(in drill1, in drill2, in drill3 count += serviceSpot(drill1, drill2, drill3, drill4);
  613:  sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium   var t1 = drill1.@titanium;
  614:  sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium   var t2 = drill2.@titanium;
  615:  sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium   var t3 = drill3.@titanium;
  616:  sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium   var t4 = drill4.@titanium;
  617:  op add *tmp39 :serviceSpot:t1 :serviceSpot:t2                var drillAmount = t1 + t2 + t3 + t4;
  618:  op add *tmp40 *tmp39 :serviceSpot:t3                         ...
  619:  op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4       ...
  620:  sensor :serviceSpot:unitAmount @unit @totalItems             var unitAmount = @unit.@totalItems;
  621:  sensor *tmp43 @unit @flag                                    if @unit.@flag == outgoing then
  622:  jump *label354 notEqual *tmp43 1                             ...
  623:  sensor *tmp46 :backgroundProcess:drill1 @x                   approach(drill1.@x, drill1.@y, 2);
  624:  sensor *tmp47 :backgroundProcess:drill1 @y                   ...
  625:  ucontrol approach *tmp46 *tmp47 2 0 0                        ...
  626:  op max *tmp48 :serviceSpot:t1 :serviceSpot:t2                var max = max(t1, t2, t3, t4);
  627:  op max *tmp48 *tmp48 :serviceSpot:t3                         ...
  628:  op max *tmp48 *tmp48 :serviceSpot:t4                         ...
  629:  jump *label342 notEqual :serviceSpot:t1 *tmp48               if t1 == max then itemTake(drill1, @titanium, CAPACITY); end;
  630:  ucontrol itemTake :backgroundProcess:drill1 @titanium 10 0 0 ...
        label *label342                                              ...
  631:  jump *label344 notEqual :serviceSpot:t2 *tmp48               if t2 == max then itemTake(drill2, @titanium, CAPACITY); end;
  632:  ucontrol itemTake :backgroundProcess:drill2 @titanium 10 0 0 ...
        label *label344                                              ...
  633:  jump *label346 notEqual :serviceSpot:t3 *tmp48               if t3 == max then itemTake(drill3, @titanium, CAPACITY); end;
  634:  ucontrol itemTake :backgroundProcess:drill3 @titanium 10 0 0 ...
        label *label346                                              ...
  635:  jump *label348 notEqual :serviceSpot:t4 *tmp48               if t4 == max then itemTake(drill4, @titanium, CAPACITY); end;
  636:  ucontrol itemTake :backgroundProcess:drill4 @titanium 10 0 0 ...
        label *label348                                              ...
  637:  op greaterThanEq *tmp57 :serviceSpot:unitAmount 10           if unitAmount >= CAPACITY or drillAmount == 0 then
  638:  op equal *tmp58 :serviceSpot:drillAmount 0                   ...
  639:  op or *tmp59 *tmp57 *tmp58                                   ...
  640:  jump *label350 equal *tmp59 false                            ...
  641:  ucontrol flag 2 0 0 0 0                                      flag(returning);
  642:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  643:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  644:  jump *label357 always 0 0                                    if unitAmount >= CAPACITY or drillAmount == 0 then
        label *label350                                              ...
  645:  sensor *tmp61 @unit @firstItem                               elsif @unit.@firstItem != @titanium then
  646:  jump *label357 equal *tmp61 @titanium                        ...
  647:  ucontrol itemDrop @air 10 0 0 0                              itemDrop(@air, CAPACITY);
  648:  jump *label357 always 0 0                                    if @unit.@flag == outgoing then
        label *label354                                              ...
  649:  jump *label355 equal :serviceSpot:unitAmount false           if unitAmount then
  650:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  651:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  652:  jump *label356 always 0 0                                    if unitAmount then
        label *label355                                              ...
  653:  ucontrol flag 1 0 0 0 0                                      flag(outgoing);
        label *label356                                              if unitAmount then
        label *label357                                              if @unit.@flag == outgoing then
  654:  op add :backgroundProcess:count :backgroundProcess:count :se count += serviceSpot(drill1, drill2, drill3, drill4);
        label *label359                                              for var out unit in units; var drill1, drill2, drill3, drill4 in drills do
  655:  set .units*7 :backgroundProcess:unit                         ...
  656:  set :backgroundProcess:unit .units*8                         ...
  657:  set :backgroundProcess:drill1 .drills*32                     ...
  658:  set :backgroundProcess:drill2 .drills*33                     ...
  659:  set :backgroundProcess:drill3 .drills*34                     ...
  660:  set :backgroundProcess:drill4 .drills*35                     ...
  661:  jump *label19 equal :backgroundProcess:drill1 null           if drill1 == null then break; end;
  662:  sensor *tmp11 :backgroundProcess:unit @controller            if unit.@controller != @this then
  663:  jump *label377 equal *tmp11 @this                            ...
        # "Function: def findFreeUnit(in unit_type, in initial_flag) unit = findFreeUnit(@flare, 0);
  664:  ubind @flare                                                 *units: ubind(unit_type);
  665:  jump *label365 notEqual @unit null                           *units: if @unit == null then return null; end;
  666:  set *tmp14 null                                              ...
  667:  jump *label374 always 0 0                                    ...
        label *label365                                              ...
  668:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label367                                              *units: do
  669:  sensor *tmp17 @unit @controlled                              *units: if @unit.@controlled == 0 then
  670:  jump *label368 notEqual *tmp17 0                             ...
  671:  ucontrol flag 0 0 0 0 0                                      *units: flag(initial_flag);        // Mark unit as active
  672:  set *tmp14 @unit                                             *units: return @unit;
  673:  jump *label374 always 0 0                                    ...
        label *label368                                              *units: if @unit.@controlled == 0 then
  674:  sensor *tmp20 :findFreeUnit:first_unit @dead                 *units: elsif first_unit.@dead == 1 then
  675:  jump *label369 notEqual *tmp20 1                             ...
  676:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label369                                              *units: elsif first_unit.@dead == 1 then
  677:  ubind @flare                                                 *units: ubind(unit_type);
  678:  jump *label367 notEqual :findFreeUnit:first_unit @unit       *units: do
  679:  set *tmp14 null                                              *units: return null;
        label *label374                                              unit = findFreeUnit(@flare, 0);
  680:  set :backgroundProcess:unit *tmp14                           ...
  681:  jump *label375 notEqual *tmp14 null                          if unit == null then
  682:  sensor *tmp27 :backgroundProcess:drill1 @titanium            count += drill1.@titanium + drill2.@titanium + drill3.@titanium + drill4.@titanium;
  683:  sensor *tmp28 :backgroundProcess:drill2 @titanium            ...
  684:  op add *tmp29 *tmp27 *tmp28                                  ...
  685:  sensor *tmp30 :backgroundProcess:drill3 @titanium            ...
  686:  op add *tmp31 *tmp29 *tmp30                                  ...
  687:  sensor *tmp32 :backgroundProcess:drill4 @titanium            ...
  688:  op add *tmp33 *tmp31 *tmp32                                  ...
  689:  op add :backgroundProcess:count :backgroundProcess:count *tm ...
  690:  jump *label396 always 0 0                                    continue;
        label *label375                                              if unit == null then
        label *label377                                              if unit.@controller != @this then
  691:  ubind :backgroundProcess:unit                                ubind(unit);
        # "Function: def serviceSpot(in drill1, in drill2, in drill3 count += serviceSpot(drill1, drill2, drill3, drill4);
  692:  sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium   var t1 = drill1.@titanium;
  693:  sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium   var t2 = drill2.@titanium;
  694:  sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium   var t3 = drill3.@titanium;
  695:  sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium   var t4 = drill4.@titanium;
  696:  op add *tmp39 :serviceSpot:t1 :serviceSpot:t2                var drillAmount = t1 + t2 + t3 + t4;
  697:  op add *tmp40 *tmp39 :serviceSpot:t3                         ...
  698:  op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4       ...
  699:  sensor :serviceSpot:unitAmount @unit @totalItems             var unitAmount = @unit.@totalItems;
  700:  sensor *tmp43 @unit @flag                                    if @unit.@flag == outgoing then
  701:  jump *label391 notEqual *tmp43 1                             ...
  702:  sensor *tmp46 :backgroundProcess:drill1 @x                   approach(drill1.@x, drill1.@y, 2);
  703:  sensor *tmp47 :backgroundProcess:drill1 @y                   ...
  704:  ucontrol approach *tmp46 *tmp47 2 0 0                        ...
  705:  op max *tmp48 :serviceSpot:t1 :serviceSpot:t2                var max = max(t1, t2, t3, t4);
  706:  op max *tmp48 *tmp48 :serviceSpot:t3                         ...
  707:  op max *tmp48 *tmp48 :serviceSpot:t4                         ...
  708:  jump *label379 notEqual :serviceSpot:t1 *tmp48               if t1 == max then itemTake(drill1, @titanium, CAPACITY); end;
  709:  ucontrol itemTake :backgroundProcess:drill1 @titanium 10 0 0 ...
        label *label379                                              ...
  710:  jump *label381 notEqual :serviceSpot:t2 *tmp48               if t2 == max then itemTake(drill2, @titanium, CAPACITY); end;
  711:  ucontrol itemTake :backgroundProcess:drill2 @titanium 10 0 0 ...
        label *label381                                              ...
  712:  jump *label383 notEqual :serviceSpot:t3 *tmp48               if t3 == max then itemTake(drill3, @titanium, CAPACITY); end;
  713:  ucontrol itemTake :backgroundProcess:drill3 @titanium 10 0 0 ...
        label *label383                                              ...
  714:  jump *label385 notEqual :serviceSpot:t4 *tmp48               if t4 == max then itemTake(drill4, @titanium, CAPACITY); end;
  715:  ucontrol itemTake :backgroundProcess:drill4 @titanium 10 0 0 ...
        label *label385                                              ...
  716:  op greaterThanEq *tmp57 :serviceSpot:unitAmount 10           if unitAmount >= CAPACITY or drillAmount == 0 then
  717:  op equal *tmp58 :serviceSpot:drillAmount 0                   ...
  718:  op or *tmp59 *tmp57 *tmp58                                   ...
  719:  jump *label387 equal *tmp59 false                            ...
  720:  ucontrol flag 2 0 0 0 0                                      flag(returning);
  721:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  722:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  723:  jump *label394 always 0 0                                    if unitAmount >= CAPACITY or drillAmount == 0 then
        label *label387                                              ...
  724:  sensor *tmp61 @unit @firstItem                               elsif @unit.@firstItem != @titanium then
  725:  jump *label394 equal *tmp61 @titanium                        ...
  726:  ucontrol itemDrop @air 10 0 0 0                              itemDrop(@air, CAPACITY);
  727:  jump *label394 always 0 0                                    if @unit.@flag == outgoing then
        label *label391                                              ...
  728:  jump *label392 equal :serviceSpot:unitAmount false           if unitAmount then
  729:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  730:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  731:  jump *label393 always 0 0                                    if unitAmount then
        label *label392                                              ...
  732:  ucontrol flag 1 0 0 0 0                                      flag(outgoing);
        label *label393                                              if unitAmount then
        label *label394                                              if @unit.@flag == outgoing then
  733:  op add :backgroundProcess:count :backgroundProcess:count :se count += serviceSpot(drill1, drill2, drill3, drill4);
        label *label396                                              for var out unit in units; var drill1, drill2, drill3, drill4 in drills do
  734:  set .units*8 :backgroundProcess:unit                         ...
  735:  set :backgroundProcess:unit .units*9                         ...
  736:  set :backgroundProcess:drill1 .drills*36                     ...
  737:  set :backgroundProcess:drill2 .drills*37                     ...
  738:  set :backgroundProcess:drill3 .drills*38                     ...
  739:  set :backgroundProcess:drill4 .drills*39                     ...
  740:  jump *label19 equal :backgroundProcess:drill1 null           if drill1 == null then break; end;
  741:  sensor *tmp11 :backgroundProcess:unit @controller            if unit.@controller != @this then
  742:  jump *label414 equal *tmp11 @this                            ...
        # "Function: def findFreeUnit(in unit_type, in initial_flag) unit = findFreeUnit(@flare, 0);
  743:  ubind @flare                                                 *units: ubind(unit_type);
  744:  jump *label402 notEqual @unit null                           *units: if @unit == null then return null; end;
  745:  set *tmp14 null                                              ...
  746:  jump *label411 always 0 0                                    ...
        label *label402                                              ...
  747:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label404                                              *units: do
  748:  sensor *tmp17 @unit @controlled                              *units: if @unit.@controlled == 0 then
  749:  jump *label405 notEqual *tmp17 0                             ...
  750:  ucontrol flag 0 0 0 0 0                                      *units: flag(initial_flag);        // Mark unit as active
  751:  set *tmp14 @unit                                             *units: return @unit;
  752:  jump *label411 always 0 0                                    ...
        label *label405                                              *units: if @unit.@controlled == 0 then
  753:  sensor *tmp20 :findFreeUnit:first_unit @dead                 *units: elsif first_unit.@dead == 1 then
  754:  jump *label406 notEqual *tmp20 1                             ...
  755:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label406                                              *units: elsif first_unit.@dead == 1 then
  756:  ubind @flare                                                 *units: ubind(unit_type);
  757:  jump *label404 notEqual :findFreeUnit:first_unit @unit       *units: do
  758:  set *tmp14 null                                              *units: return null;
        label *label411                                              unit = findFreeUnit(@flare, 0);
  759:  set :backgroundProcess:unit *tmp14                           ...
  760:  jump *label412 notEqual *tmp14 null                          if unit == null then
  761:  sensor *tmp27 :backgroundProcess:drill1 @titanium            count += drill1.@titanium + drill2.@titanium + drill3.@titanium + drill4.@titanium;
  762:  sensor *tmp28 :backgroundProcess:drill2 @titanium            ...
  763:  op add *tmp29 *tmp27 *tmp28                                  ...
  764:  sensor *tmp30 :backgroundProcess:drill3 @titanium            ...
  765:  op add *tmp31 *tmp29 *tmp30                                  ...
  766:  sensor *tmp32 :backgroundProcess:drill4 @titanium            ...
  767:  op add *tmp33 *tmp31 *tmp32                                  ...
  768:  op add :backgroundProcess:count :backgroundProcess:count *tm ...
  769:  jump *label433 always 0 0                                    continue;
        label *label412                                              if unit == null then
        label *label414                                              if unit.@controller != @this then
  770:  ubind :backgroundProcess:unit                                ubind(unit);
        # "Function: def serviceSpot(in drill1, in drill2, in drill3 count += serviceSpot(drill1, drill2, drill3, drill4);
  771:  sensor :serviceSpot:t1 :backgroundProcess:drill1 @titanium   var t1 = drill1.@titanium;
  772:  sensor :serviceSpot:t2 :backgroundProcess:drill2 @titanium   var t2 = drill2.@titanium;
  773:  sensor :serviceSpot:t3 :backgroundProcess:drill3 @titanium   var t3 = drill3.@titanium;
  774:  sensor :serviceSpot:t4 :backgroundProcess:drill4 @titanium   var t4 = drill4.@titanium;
  775:  op add *tmp39 :serviceSpot:t1 :serviceSpot:t2                var drillAmount = t1 + t2 + t3 + t4;
  776:  op add *tmp40 *tmp39 :serviceSpot:t3                         ...
  777:  op add :serviceSpot:drillAmount *tmp40 :serviceSpot:t4       ...
  778:  sensor :serviceSpot:unitAmount @unit @totalItems             var unitAmount = @unit.@totalItems;
  779:  sensor *tmp43 @unit @flag                                    if @unit.@flag == outgoing then
  780:  jump *label428 notEqual *tmp43 1                             ...
  781:  sensor *tmp46 :backgroundProcess:drill1 @x                   approach(drill1.@x, drill1.@y, 2);
  782:  sensor *tmp47 :backgroundProcess:drill1 @y                   ...
  783:  ucontrol approach *tmp46 *tmp47 2 0 0                        ...
  784:  op max *tmp48 :serviceSpot:t1 :serviceSpot:t2                var max = max(t1, t2, t3, t4);
  785:  op max *tmp48 *tmp48 :serviceSpot:t3                         ...
  786:  op max *tmp48 *tmp48 :serviceSpot:t4                         ...
  787:  jump *label416 notEqual :serviceSpot:t1 *tmp48               if t1 == max then itemTake(drill1, @titanium, CAPACITY); end;
  788:  ucontrol itemTake :backgroundProcess:drill1 @titanium 10 0 0 ...
        label *label416                                              ...
  789:  jump *label418 notEqual :serviceSpot:t2 *tmp48               if t2 == max then itemTake(drill2, @titanium, CAPACITY); end;
  790:  ucontrol itemTake :backgroundProcess:drill2 @titanium 10 0 0 ...
        label *label418                                              ...
  791:  jump *label420 notEqual :serviceSpot:t3 *tmp48               if t3 == max then itemTake(drill3, @titanium, CAPACITY); end;
  792:  ucontrol itemTake :backgroundProcess:drill3 @titanium 10 0 0 ...
        label *label420                                              ...
  793:  jump *label422 notEqual :serviceSpot:t4 *tmp48               if t4 == max then itemTake(drill4, @titanium, CAPACITY); end;
  794:  ucontrol itemTake :backgroundProcess:drill4 @titanium 10 0 0 ...
        label *label422                                              ...
  795:  op greaterThanEq *tmp57 :serviceSpot:unitAmount 10           if unitAmount >= CAPACITY or drillAmount == 0 then
  796:  op equal *tmp58 :serviceSpot:drillAmount 0                   ...
  797:  op or *tmp59 *tmp57 *tmp58                                   ...
  798:  jump *label424 equal *tmp59 false                            ...
  799:  ucontrol flag 2 0 0 0 0                                      flag(returning);
  800:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  801:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  802:  jump *label431 always 0 0                                    if unitAmount >= CAPACITY or drillAmount == 0 then
        label *label424                                              ...
  803:  sensor *tmp61 @unit @firstItem                               elsif @unit.@firstItem != @titanium then
  804:  jump *label431 equal *tmp61 @titanium                        ...
  805:  ucontrol itemDrop @air 10 0 0 0                              itemDrop(@air, CAPACITY);
  806:  jump *label431 always 0 0                                    if @unit.@flag == outgoing then
        label *label428                                              ...
  807:  jump *label429 equal :serviceSpot:unitAmount false           if unitAmount then
  808:  ucontrol approach .coreX .coreY 4 0 0                        approach(coreX, coreY, RADIUS);
  809:  ucontrol itemDrop .core 10 0 0 0                             itemDrop(core, CAPACITY);
  810:  jump *label430 always 0 0                                    if unitAmount then
        label *label429                                              ...
  811:  ucontrol flag 1 0 0 0 0                                      flag(outgoing);
        label *label430                                              if unitAmount then
        label *label431                                              if @unit.@flag == outgoing then
  812:  op add :backgroundProcess:count :backgroundProcess:count :se count += serviceSpot(drill1, drill2, drill3, drill4);
        label *label433                                              for var out unit in units; var drill1, drill2, drill3, drill4 in drills do
  813:  set .units*9 :backgroundProcess:unit                         ...
        label *label19                                               ...
  814:  write :backgroundProcess:count processor1 ".titaniumDrillCou titaniumDrillCount = count;
  815:  jump *label14 always 0 0                                     while true do
        label *label0                                                remote void addTitaniumDrills(d1, d2, d3, d4)
        # "Function: remote void addTitaniumDrills(in d1, in d2, in  ...
  816:  jump *label64 greaterThanEq .spotCount 39                    if spotCount < length(drills) - 1 then
  817:  op mul :addTitaniumDrills:i .spotCount 4                     var i = spotCount * 4;
  818:  set *tmp68 :addTitaniumDrills:i                              drills[i++] = d1;
  819:  op add :addTitaniumDrills:i :addTitaniumDrills:i 1           ...
  820:  set .drills*w :addTitaniumDrills:d1                          ...
  821:  op mul .drills*wind *tmp68 2                                 ...
  822:  call *label438 .drills*wret *invalid                         ...
  824:  set *tmp71 :addTitaniumDrills:i                              drills[i++] = d2;
  825:  op add :addTitaniumDrills:i :addTitaniumDrills:i 1           ...
  826:  set .drills*w :addTitaniumDrills:d2                          ...
  827:  op mul .drills*wind *tmp71 2                                 ...
  828:  call *label438 .drills*wret *invalid                         ...
  830:  set *tmp74 :addTitaniumDrills:i                              drills[i++] = d3;
  831:  op add :addTitaniumDrills:i :addTitaniumDrills:i 1           ...
  832:  set .drills*w :addTitaniumDrills:d3                          ...
  833:  op mul .drills*wind *tmp74 2                                 ...
  834:  call *label438 .drills*wret *invalid                         ...
  836:  set .drills*w :addTitaniumDrills:d4                          drills[i++] = d4;
  837:  op mul .drills*wind :addTitaniumDrills:i 2                   ...
  838:  call *label438 .drills*wret *invalid                         ...
  840:  op add .spotCount .spotCount 1                               if spotCount < length(drills) - 1 then
        label *label64                                               ...
  841:  set :addTitaniumDrills*finished true                         remote void addTitaniumDrills(d1, d2, d3, d4)
  842:  jump *label7 always 0 0                                      ...
        label *label438
  843:  multijump *label437 .drills*wind 0
        multilabel *label437
  844:  set .drills*0 .drills*w
  845:  return .drills*wret
        multilabel *label439
  846:  set .drills*1 .drills*w
  847:  return .drills*wret
        multilabel *label440
  848:  set .drills*2 .drills*w
  849:  return .drills*wret
        multilabel *label441
  850:  set .drills*3 .drills*w
  851:  return .drills*wret
        multilabel *label442
  852:  set .drills*4 .drills*w
  853:  return .drills*wret
        multilabel *label443
  854:  set .drills*5 .drills*w
  855:  return .drills*wret
        multilabel *label444
  856:  set .drills*6 .drills*w
  857:  return .drills*wret
        multilabel *label445
  858:  set .drills*7 .drills*w
  859:  return .drills*wret
        multilabel *label446
  860:  set .drills*8 .drills*w
  861:  return .drills*wret
        multilabel *label447
  862:  set .drills*9 .drills*w
  863:  return .drills*wret
        multilabel *label448
  864:  set .drills*10 .drills*w
  865:  return .drills*wret
        multilabel *label449
  866:  set .drills*11 .drills*w
  867:  return .drills*wret
        multilabel *label450
  868:  set .drills*12 .drills*w
  869:  return .drills*wret
        multilabel *label451
  870:  set .drills*13 .drills*w
  871:  return .drills*wret
        multilabel *label452
  872:  set .drills*14 .drills*w
  873:  return .drills*wret
        multilabel *label453
  874:  set .drills*15 .drills*w
  875:  return .drills*wret
        multilabel *label454
  876:  set .drills*16 .drills*w
  877:  return .drills*wret
        multilabel *label455
  878:  set .drills*17 .drills*w
  879:  return .drills*wret
        multilabel *label456
  880:  set .drills*18 .drills*w
  881:  return .drills*wret
        multilabel *label457
  882:  set .drills*19 .drills*w
  883:  return .drills*wret
        multilabel *label458
  884:  set .drills*20 .drills*w
  885:  return .drills*wret
        multilabel *label459
  886:  set .drills*21 .drills*w
  887:  return .drills*wret
        multilabel *label460
  888:  set .drills*22 .drills*w
  889:  return .drills*wret
        multilabel *label461
  890:  set .drills*23 .drills*w
  891:  return .drills*wret
        multilabel *label462
  892:  set .drills*24 .drills*w
  893:  return .drills*wret
        multilabel *label463
  894:  set .drills*25 .drills*w
  895:  return .drills*wret
        multilabel *label464
  896:  set .drills*26 .drills*w
  897:  return .drills*wret
        multilabel *label465
  898:  set .drills*27 .drills*w
  899:  return .drills*wret
        multilabel *label466
  900:  set .drills*28 .drills*w
  901:  return .drills*wret
        multilabel *label467
  902:  set .drills*29 .drills*w
  903:  return .drills*wret
        multilabel *label468
  904:  set .drills*30 .drills*w
  905:  return .drills*wret
        multilabel *label469
  906:  set .drills*31 .drills*w
  907:  return .drills*wret
        multilabel *label470
  908:  set .drills*32 .drills*w
  909:  return .drills*wret
        multilabel *label471
  910:  set .drills*33 .drills*w
  911:  return .drills*wret
        multilabel *label472
  912:  set .drills*34 .drills*w
  913:  return .drills*wret
        multilabel *label473
  914:  set .drills*35 .drills*w
  915:  return .drills*wret
        multilabel *label474
  916:  set .drills*36 .drills*w
  917:  return .drills*wret
        multilabel *label475
  918:  set .drills*37 .drills*w
  919:  return .drills*wret
        multilabel *label476
  920:  set .drills*38 .drills*w
  921:  return .drills*wret
        multilabel *label477
  922:  set .drills*39 .drills*w
  923:  return .drills*wret


Performance: parsed in 276 ms, compiled in 294 ms, optimized in 804 ms, run in 21 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (5 steps):
The program didn't generate any output.
Execution exception at instruction 18: ubind @flare:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
