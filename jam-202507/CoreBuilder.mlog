set .ERROR ""
set .display processor1
set .blockBuilder processor5
set .press null
set .generator null
set .battery null
set .smelter null
set .titaniumDrill null
set .unloader1 null
set .thoriumContainer null
set .thoriumGenerator null
set .leadSurplus 0
set .graphiteSurplus 20
set .siliconSurplus 20
set .metaglassSurplus 20
write 511 bank1 511
ubind @poly
set .builder @unit
ulocate building core false @copper .coreX .coreY 0 .core
jump 16 equal .core null
set :buildBlockFromCfg.1:cfg "#'+nA######%#"
set :buildBlockFromCfg.1*retaddr 23
jump 921 always 0 0
set .press :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "k*/(7######$$"
set :buildBlockFromCfg.1*retaddr 27
jump 921 always 0 0
set .battery :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "k+/(7######$%"
set :buildBlockFromCfg.1*retaddr 31
jump 921 always 0 0
set :buildBlockFromCfg.1:cfg "m*.<2######$&"
set :buildBlockFromCfg.1*retaddr 34
jump 921 always 0 0
set .generator :buildBlockFromCfg.1*retval
set .powerTarget 400
set :buildBlockFromCfg.1:cfg "%+-A<######%'"
set :buildBlockFromCfg.1*retaddr 39
jump 921 always 0 0
set .smelter :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "T+,%%######$("
set :buildBlockFromCfg.1*retaddr 43
jump 921 always 0 0
set :meetTarget.1:cfg "w**5#-#####%)"
set :meetTarget.1*retaddr 46
jump 927 always 0 0
write @titanium processor1 ".nextBlock"
write .coreX processor4 ":findDrillLocation:x"
write .coreY processor4 ":findDrillLocation:y"
write @unit processor4 ":findDrillLocation:unit"
write @titanium processor4 ":findDrillLocation:item"
write @ore-titanium processor4 ":findDrillLocation:ore"
write 2 processor4 ":findDrillLocation:size"
write 4 processor4 ":findDrillLocation:limit"
write false processor4 ":findDrillLocation*finished"
write 1 processor4 "@counter"
wait 1e-15
read *tmp148 processor4 ":findDrillLocation*finished"
jump 56 equal *tmp148 false
read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocation:dx"
read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
jump 65 notEqual :buildFirstTitaniumDrill:result false
set .ERROR "Cannot locate spot for titanium drill"
stop
write @pneumatic-drill processor1 ".nextBlock"
write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
write false processor5 ":buildFirstTitaniumDrillAt*finished"
write 2 processor5 "@counter"
wait 1e-15
read *tmp154 processor5 ":buildFirstTitaniumDrillAt*finished"
jump 70 equal *tmp154 false
read *tmp137 processor5 ":buildFirstTitaniumDrillAt*retval"
set .titaniumDrill *tmp137
write *tmp137 processor1 ".titaniumDrill"
set :buildBlockFromCfg.1:cfg "*,###A<###$*"
set :buildBlockFromCfg.1*retaddr 79
jump 921 always 0 0
set .unloader1 :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "T),%%######$+"
set :buildBlockFromCfg.1*retaddr 83
jump 921 always 0 0
set :buildBlockFromCfg.1:cfg "W*-'%######$,"
set :buildBlockFromCfg.1*retaddr 86
jump 921 always 0 0
set .graphiteSurplus 100
set :buildBlockFromCfg:cfg "®-.}U#U####$-"
set :buildBlockFromCfg:config processor2
set :buildBlockFromCfg*retaddr 91
jump 899 always 0 0
set .controller :buildBlockFromCfg*retval
write processor6 :buildBlockFromCfg*retval ".timer"
write processor1 :buildBlockFromCfg*retval ".display"
write .core :buildBlockFromCfg*retval ".core"
write bank1 :buildBlockFromCfg*retval ".bank"
write .battery :buildBlockFromCfg*retval ".battery"
write .generator :buildBlockFromCfg*retval ".generator"
write .smelter :buildBlockFromCfg*retval ".smelter"
write .press :buildBlockFromCfg*retval ".press"
write .unloader1 :buildBlockFromCfg*retval ".unloader1"
set :buildBlockFromCfg.1:cfg "g)'%)######$."
set :buildBlockFromCfg.1*retaddr 104
jump 921 always 0 0
set :buildBlockFromCfg.1:cfg "(*###A<###$/"
set :buildBlockFromCfg.1*retaddr 107
jump 921 always 0 0
write :buildBlockFromCfg.1*retval .controller ".unloader2"
set :buildBlockFromCfg.1:cfg "'(_i#####&&0"
set :buildBlockFromCfg.1*retaddr 111
jump 921 always 0 0
write :buildBlockFromCfg.1*retval .controller ".factory"
write :buildBlockFromCfg.1*retval processor1 ".airFactory"
write 1 .controller ".flareTarget"
write 1 processor1 ".flareTarget"
write 3 .controller ".monoTarget"
write 3 processor1 ".monoTarget"
write 85 .controller ".pressTarget"
write 150 .controller ".smelterTarget"
write 30 .controller ".kilnTarget"
set .leadSurplus 20
set .siliconSurplus 20
set :buildUnits*retaddr 124
jump 941 always 0 0
set :supplyBase*retaddr 126
jump 562 always 0 0
sensor *tmp163 .battery @totalPower
jump 130 lessThan *tmp163 300
read *tmp101 .controller ".monos"
jump 124 lessThan *tmp101 3
set .siliconSurplus 65
set :buildBlockFromCfg.1:cfg ",)###A<###$1"
set :buildBlockFromCfg.1*retaddr 134
jump 921 always 0 0
set :buildBlockFromCfg.1:cfg "T,*%%######$2"
set :buildBlockFromCfg.1*retaddr 137
jump 921 always 0 0
set :buildBlockFromCfg.1:cfg "',+_AA#####%3"
set :buildBlockFromCfg.1*retaddr 140
jump 921 always 0 0
write :buildBlockFromCfg.1*retval .controller ".kiln"
set :buildBlockFromCfg.1:cfg "z%-AAA##A##%4"
set :buildBlockFromCfg.1*retaddr 144
jump 921 always 0 0
set :buildBlockFromCfg.1:cfg "W'*'%######$5"
set :buildBlockFromCfg.1*retaddr 147
jump 921 always 0 0
set :buildBlockFromCfg.1:cfg "W&*'%######$6"
set :buildBlockFromCfg.1*retaddr 150
jump 921 always 0 0
set :buildBlockFromCfg.1:cfg "o%+FK<A####%7"
set :buildBlockFromCfg.1*retaddr 153
jump 921 always 0 0
write :buildBlockFromCfg.1*retval .controller ".generator2"
set :buildBlockFromCfg.1:cfg "$(.#U<###&8"
set :buildBlockFromCfg.1*retaddr 157
jump 921 always 0 0
write :buildBlockFromCfg.1*retval .controller ".multipress"
set .graphiteSurplus 150
set :buildBlockFromCfg.1:cfg " '%-#2#####&:"
set :buildBlockFromCfg.1*retaddr 162
jump 921 always 0 0
write :buildBlockFromCfg.1*retval .controller ".payloadRouter"
set :buildBlockFromCfg.1:cfg "*(###A<###$;"
set :buildBlockFromCfg.1*retaddr 166
jump 921 always 0 0
write :buildBlockFromCfg.1*retval .controller ".unloader4"
set :buildBlockFromCfg.1:cfg "X*''%######$<"
set :buildBlockFromCfg.1*retaddr 170
jump 921 always 0 0
set :buildBlockFromCfg.1:cfg "*%ë#}####&="
set :buildBlockFromCfg.1*retaddr 173
jump 921 always 0 0
write :buildBlockFromCfg.1*retval .controller ".reconstructor"
write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
set :buildBlockFromCfg.1:cfg "l/,#U#A7###&>"
set :buildBlockFromCfg.1*retaddr 178
jump 921 always 0 0
set :buildUnits*retaddr 180
jump 941 always 0 0
set .siliconSurplus 1000
set .metaglassSurplus 200
write 6 .controller ".polyTarget"
write 6 processor1 ".polyTarget"
set :buildBlockFromCfg.1:cfg "%.)A<######%C"
set :buildBlockFromCfg.1*retaddr 187
jump 921 always 0 0
write :buildBlockFromCfg.1*retval .controller ".smelter2"
set :buildBlockFromCfg.1:cfg "T-*%%######$D"
set :buildBlockFromCfg.1*retaddr 191
jump 921 always 0 0
set :buildBlockFromCfg.1:cfg "T-)%%######$E"
set :buildBlockFromCfg.1*retaddr 194
jump 921 always 0 0
set :buildBlockFromCfg:cfg "--###A<###$F"
set :buildBlockFromCfg:config @sand
set :buildBlockFromCfg*retaddr 198
jump 899 always 0 0
set :buildUnits*retaddr 200
jump 941 always 0 0
read *tmp102 .controller ".polys"
jump 206 greaterThanEq *tmp102 3
set :supplyBase*retaddr 204
jump 562 always 0 0
read *tmp102 .controller ".polys"
jump 202 lessThan *tmp102 3
write 3 .controller ".flareTarget"
write 3 processor1 ".flareTarget"
read *tmp100 .controller ".flares"
jump 214 greaterThanEq *tmp100 2
set :supplyBase*retaddr 212
jump 562 always 0 0
read *tmp100 .controller ".flares"
jump 210 lessThan *tmp100 2
set .graphiteSurplus 100
write 5 .controller ".monoTarget"
write 5 processor1 ".monoTarget"
write @ore-titanium processor1 ".nextBlock"
wait 0.000000001
ubind @flare
read :blocksBuildTitaniumDrills:current processor4 ".locations"
write .coreX processor4 ":findDrillLocation:x"
write .coreY processor4 ":findDrillLocation:y"
write @unit processor4 ":findDrillLocation:unit"
write @titanium processor4 ":findDrillLocation:item"
write @ore-titanium processor4 ":findDrillLocation:ore"
write 4 processor4 ":findDrillLocation:size"
write 1000000000 processor4 ":findDrillLocation:limit"
write false processor4 ":findDrillLocation*finished"
write 1 processor4 "@counter"
ubind .builder
write .controller processor5 ":buildTitaniumDrills:aController"
write :blocksBuildTitaniumDrills:current processor5 ":buildTitaniumDrills:current"
write false processor5 ":buildTitaniumDrills*finished"
write 3 processor5 "@counter"
wait 1e-15
read *tmp198 processor5 ":buildTitaniumDrills*finished"
jump 235 equal *tmp198 false
write false processor4 ":stopLocation*finished"
write 3 processor4 "@counter"
write null processor1 ".nextBlock"
write .coreX processor4 ":layoutThoriumDrill:x"
write .coreY processor4 ":layoutThoriumDrill:y"
write @unit processor4 ":layoutThoriumDrill:unit"
write 7 processor4 ":layoutThoriumDrill:limit"
write false processor4 ":layoutThoriumDrill*finished"
write 2 processor4 "@counter"
wait 1e-15
read *tmp203 processor4 ":layoutThoriumDrill*finished"
jump 247 equal *tmp203 false
set :meetTarget.1:cfg "x**F#AA7###&@"
set :meetTarget.1*retaddr 253
jump 927 always 0 0
wait 1e-15
read *tmp205 processor4 ":layoutThoriumDrill*finished"
jump 253 equal *tmp205 false
read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
jump 260 notEqual :buildThoriumDrill:result false
set .ERROR "Cannot locate spot for thorium drill"
stop
write @laser-drill processor5 ":buildBlockAt:block"
read *tmp56 processor4 ".drillX"
write *tmp56 processor5 ":buildBlockAt:x"
read *tmp57 processor4 ".drillY"
write *tmp57 processor5 ":buildBlockAt:y"
write null processor5 ":buildBlockAt:rotation"
write 0 processor5 ":buildBlockAt:config"
write -1 processor5 ":buildBlockAt:index"
write false processor5 ":buildBlockAt*finished"
write 1 processor5 "@counter"
wait 1e-15
read *tmp215 processor5 ":buildBlockAt*finished"
jump 270 equal *tmp215 false
read .thoriumDrill processor5 ":buildBlockAt*retval"
set :buildRemoteBlock:cfg "z%-AAA##A##%4"
read :buildRemoteBlock:x processor4 ".water1X"
read :buildRemoteBlock:y processor4 ".water1Y"
set :buildRemoteBlock*retaddr 279
jump 875 always 0 0
read :buildRemoteBlock:x processor4 ".water2X"
read :buildRemoteBlock:y processor4 ".water2Y"
set :buildRemoteBlock*retaddr 283
jump 875 always 0 0
set :buildRemoteBlock:cfg "o%+FK<A####%7"
read :buildRemoteBlock:x processor4 ".generatorX"
read :buildRemoteBlock:y processor4 ".generatorY"
set :buildRemoteBlock*retaddr 288
jump 875 always 0 0
set .thoriumGenerator :buildRemoteBlock*retval
set :buildRemoteBlock:cfg "g)'%)######$."
read :buildRemoteBlock:x processor4 ".node1X"
read :buildRemoteBlock:y processor4 ".node1Y"
set :buildRemoteBlock*retaddr 294
jump 875 always 0 0
read :buildRemoteBlock:x processor4 ".node2X"
read :buildRemoteBlock:y processor4 ".node2Y"
set :buildRemoteBlock*retaddr 298
jump 875 always 0 0
set :buildRemoteBlock:cfg "r**#-#+####$A"
read :buildRemoteBlock:x processor4 ".panelX"
read :buildRemoteBlock:y processor4 ".panelY"
set :buildRemoteBlock*retaddr 303
jump 875 always 0 0
set :buildRemoteBlock:cfg "k*/(7######$$"
read :buildRemoteBlock:x processor4 ".batteryX"
read :buildRemoteBlock:y processor4 ".batteryY"
set :buildRemoteBlock*retaddr 308
jump 875 always 0 0
set :buildRemoteBlock:cfg "**#######%B"
read :buildRemoteBlock:x processor4 ".containerX"
read :buildRemoteBlock:y processor4 ".containerY"
set :buildRemoteBlock*retaddr 313
jump 875 always 0 0
set .thoriumContainer :buildRemoteBlock*retval
jump 316 notEqual :buildRemoteBlock*retval null
set .thoriumContainer .thoriumDrill
write .thoriumDrill processor1 ".thoriumDrill"
write .thoriumContainer processor1 ".thoriumContainer"
write .thoriumContainer processor3 ":setThoriumContainer:container"
write false processor3 ":setThoriumContainer*finished"
write 3 processor3 "@counter"
wait 1e-15
read *tmp228 processor3 ":setThoriumContainer*finished"
jump 321 equal *tmp228 false
write null processor1 ".nextBlock"
write 1 .controller ".megaTarget"
write 1 processor1 ".megaTarget"
read *tmp102 .controller ".polys"
jump 333 greaterThanEq *tmp102 5
set :supplyBase*retaddr 331
jump 562 always 0 0
read *tmp102 .controller ".polys"
jump 329 lessThan *tmp102 5
set :buildBlockFromCfg:cfg "+(###A<###$G"
set :buildBlockFromCfg:config @silicon
set :buildBlockFromCfg*retaddr 337
jump 899 always 0 0
write :buildBlockFromCfg*retval .controller ".unloader6"
set :buildBlockFromCfg.1:cfg "X+''%######$H"
set :buildBlockFromCfg.1*retaddr 341
jump 921 always 0 0
set :buildBlockFromCfg.1:cfg ".&#ʭ#ǥƁ#ʭ#(I"
set :buildBlockFromCfg.1*retaddr 344
jump 921 always 0 0
write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
set .metaglassSurplus 50
set :buildUnits*retaddr 349
jump 941 always 0 0
read *tmp103 .controller ".megas"
jump 355 greaterThanEq *tmp103 1
set :supplyBase*retaddr 353
jump 562 always 0 0
read *tmp103 .controller ".megas"
jump 351 lessThan *tmp103 1
control enabled processor7 false 0 0 0
control enabled processor8 false 0 0 0
control enabled processor3 false 0 0 0
control enabled processor4 false 0 0 0
control enabled processor5 false 0 0 0
set :flagUnits:unit @mega
set :flagUnits*retaddr 363
jump 957 always 0 0
set :flagUnits:unit @poly
set :flagUnits*retaddr 366
jump 957 always 0 0
set :flagUnits:unit @mono
set :flagUnits*retaddr 369
jump 957 always 0 0
set :flagUnits:unit @flare
set :flagUnits*retaddr 372
jump 957 always 0 0
op sub :lineUpUnits:y @thisy 6
ubind @mega
set :lineUpUnits:firstUnit @unit
sensor :lineUpUnits:x @unit @flag
ucontrol itemDrop @air 1000 0 0 0
ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0
sensor *tmp478 @unit @mining
jump 381 equal *tmp478 false
ucontrol stop 0 0 0 0 0
ubind @mega
jump 375 notEqual @unit :lineUpUnits:firstUnit
op sub :lineUpUnits:y @thisy 10
set :lineUpUnits:unit @poly
set :lineUpUnits*retaddr 387
jump 966 always 0 0
op sub :lineUpUnits:y @thisy 14
set :lineUpUnits:unit @mono
set :lineUpUnits*retaddr 391
jump 966 always 0 0
op sub :lineUpUnits:y @thisy 18
set :lineUpUnits:unit @flare
set :lineUpUnits*retaddr 395
jump 966 always 0 0
jump 372 always 0 0
op min :mineOre:amount :mineOre:amount 30
write :mineOre:amount .display ".transportTarget"
write :mineOre:ore .display ".transportItem"
ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp266 0
jump 403 notEqual *tmp266 false
set .ERROR "Cannot locate ore"
stop
write "Moving..." .display ".status3"
sensor *tmp247 @unit @firstItem
jump 407 equal *tmp247 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach :locateOre:x :locateOre:y 5.5 0 0
ucontrol within :locateOre:x :locateOre:y 6 *tmp250 0
jump 404 equal *tmp250 false
sensor *tmp271 @unit @firstItem
jump 417 equal *tmp271 :mineOre:ore
sensor *tmp252 @unit @firstItem
jump 417 equal *tmp252 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp252 @unit @firstItem
jump 414 notEqual *tmp252 null
write "Mining..." .display ".status3"
op add :mineOre:stop @second 10
sensor :mineOre:item @unit @firstItem
op notEqual *tmp276 :mineOre:item null
op notEqual *tmp277 :mineOre:item :mineOre:ore
op land *tmp278 *tmp276 *tmp277
jump 428 notEqual *tmp278 false
ucontrol mine :locateOre:x :locateOre:y 0 0 0
jump 428 greaterThan @second :mineOre:stop
sensor *tmp282 @unit @totalItems
jump 419 lessThan *tmp282 :mineOre:amount
ucontrol unbind 0 0 0 0 0
write "Depositing..." .display ".status3"
sensor *tmp256 @unit @firstItem
jump 447 notEqual *tmp256 :mineOre:ore
sensor *tmp254 :mineOre:block @x
sensor *tmp255 :mineOre:block @y
write "Moving..." .display ".status3"
ucontrol within *tmp254 *tmp255 6 *tmp242 0
jump 440 notEqual *tmp242 false
ucontrol approach *tmp254 *tmp255 5.5 0 0
ucontrol within *tmp254 *tmp255 6 *tmp242 0
jump 437 equal *tmp242 false
sensor :depositItems:cap :mineOre:block @itemCapacity
ucontrol itemDrop :mineOre:block 30 0 0 0
sensor *tmp260 @unit @firstItem
op mul *tmp261 *tmp260 :depositItems:cap
sensor *tmp262 :mineOre:block :mineOre:ore
jump 441 greaterThan *tmp261 *tmp262
jump 452 always 0 0
sensor *tmp264 @unit @firstItem
jump 452 equal *tmp264 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp264 @unit @firstItem
jump 449 notEqual *tmp264 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set @counter :mineOre*retaddr
write "Mining " .display ".status2"
write :mineOre.1:ore .display ".item2"
write "core" .display ".block2"
set :mineOre:ore :mineOre.1:ore
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 463
jump 396 always 0 0
set @counter :mineOre.1*retaddr
sensor *tmp285 :fetchBlock:block @itemCapacity
op min :transportStatus:target *tmp285 30
write :transportStatus:target .display ".transportTarget"
write :fetchBlock:item .display ".transportItem"
write "Fetching " .display ".status2"
write :fetchBlock:item .display ".item2"
write :fetchBlock:block .display ".block2"
sensor *tmp287 :fetchBlock:block @x
sensor *tmp288 :fetchBlock:block @y
write "Moving..." .display ".status3"
sensor *tmp247 @unit @firstItem
jump 477 equal *tmp247 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach *tmp287 *tmp288 5.5 0 0
ucontrol within *tmp287 *tmp288 6 *tmp250 0
jump 474 equal *tmp250 false
sensor *tmp252 @unit @firstItem
jump 485 equal *tmp252 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp252 @unit @firstItem
jump 482 notEqual *tmp252 null
ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0
sensor :fetchBlock:unitItem @unit @firstItem
op notEqual *tmp290 :fetchBlock:unitItem null
op notEqual *tmp291 :fetchBlock:unitItem :fetchBlock:item
op land *tmp292 *tmp290 *tmp291
jump 492 equal *tmp292 false
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp294 @unit :fetchBlock:item
op lessThan *tmp295 *tmp294 30
sensor *tmp296 :fetchBlock:block :fetchBlock:item
op land *tmp297 *tmp295 *tmp296
jump 485 notEqual *tmp297 false
write "Depositing..." .display ".status3"
sensor *tmp256 @unit @firstItem
jump 515 notEqual *tmp256 :fetchBlock:item
sensor *tmp254 .core @x
sensor *tmp255 .core @y
write "Moving..." .display ".status3"
ucontrol within *tmp254 *tmp255 6 *tmp242 0
jump 508 notEqual *tmp242 false
ucontrol approach *tmp254 *tmp255 5.5 0 0
ucontrol within *tmp254 *tmp255 6 *tmp242 0
jump 505 equal *tmp242 false
sensor :depositItems:cap .core @itemCapacity
ucontrol itemDrop .core 30 0 0 0
sensor *tmp260 @unit @firstItem
op mul *tmp261 *tmp260 :depositItems:cap
sensor *tmp262 .core :fetchBlock:item
jump 509 greaterThan *tmp261 *tmp262
jump 520 always 0 0
sensor *tmp264 @unit @firstItem
jump 520 equal *tmp264 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp264 @unit @firstItem
jump 517 notEqual *tmp264 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set @counter :fetchBlock*retaddr
write "Supplying " .display ".status2"
write :supplyBlock:ore .display ".item2"
write :supplyBlock:block .display ".block2"
sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
sensor *tmp299 :supplyBlock:block :supplyBlock:ore
op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp299
jump 535 lessThanEq :supplyBlock:missing 0
set :mineOre:ore :supplyBlock:ore
set :mineOre:amount :supplyBlock:blockCapacity
set :mineOre:block :supplyBlock:block
set :mineOre*retaddr 535
jump 396 always 0 0
set @counter :supplyBlock*retaddr
read *tmp315 :unpackCfg:cfg 0
op sub *tmp316 *tmp315 35
lookup block :unpackCfg:type *tmp316
read *tmp319 :unpackCfg:cfg 1
op sub :unpackCfg:x *tmp319 42
read *tmp323 :unpackCfg:cfg 2
op sub :unpackCfg:y *tmp323 42
read *tmp327 :unpackCfg:cfg 3
op sub :unpackCfg:cu *tmp327 35
read *tmp330 :unpackCfg:cfg 4
op sub :unpackCfg:pb *tmp330 35
read *tmp333 :unpackCfg:cfg 5
op sub :unpackCfg:gr *tmp333 35
read *tmp336 :unpackCfg:cfg 6
op sub :unpackCfg:si *tmp336 35
read *tmp339 :unpackCfg:cfg 7
op sub :unpackCfg:ti *tmp339 35
read *tmp342 :unpackCfg:cfg 8
op sub :unpackCfg:mg *tmp342 35
read *tmp345 :unpackCfg:cfg 9
op sub :unpackCfg:th *tmp345 35
read *tmp348 :unpackCfg:cfg 10
op sub :unpackCfg:rotation *tmp348 35
read *tmp354 :unpackCfg:cfg 12
op sub :unpackCfg:ind *tmp354 35
set @counter :unpackCfg*retaddr
sensor *tmp356 .core @silicon
op sub *tmp357 .targetSilicon *tmp356
op max *tmp358 0 *tmp357
write *tmp358 processor8 ".monoSandTarget"
jump 646 equal .thoriumContainer false
write "Phase 2: servicing thorium drill" .display ".status1"
sensor *tmp360 .core @coal
jump 585 greaterThanEq *tmp360 50
set :supplyBlock:block .thoriumGenerator
set :supplyBlock:ore @coal
write "Supplying " .display ".status2"
write @coal .display ".item2"
write .thoriumGenerator .display ".block2"
sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
sensor *tmp299 .thoriumGenerator @coal
op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp299
jump 641 lessThanEq :supplyBlock:missing 0
set :mineOre:ore @coal
set :mineOre:amount :supplyBlock:blockCapacity
set :mineOre:block .thoriumGenerator
set :mineOre*retaddr 584
jump 396 always 0 0
jump 641 always 0 0
sensor *tmp303 .thoriumGenerator @itemCapacity
op min :transportStatus:target *tmp303 30
write :transportStatus:target .display ".transportTarget"
write @coal .display ".transportItem"
write "Transferring " .display ".status2"
write @coal .display ".item2"
write .thoriumGenerator .display ".block2"
write "Moving..." .display ".status3"
sensor *tmp247 @unit @firstItem
jump 596 equal *tmp247 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach .coreX .coreY 5.5 0 0
ucontrol within .coreX .coreY 6 *tmp250 0
jump 593 equal *tmp250 false
sensor *tmp252 @unit @firstItem
jump 604 equal *tmp252 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp252 @unit @firstItem
jump 601 notEqual *tmp252 null
ucontrol itemTake .core @coal 30 0 0
sensor :supplyBlockFromCore:unitItem @unit @firstItem
op notEqual *tmp306 :supplyBlockFromCore:unitItem null
op notEqual *tmp307 :supplyBlockFromCore:unitItem @coal
op land *tmp308 *tmp306 *tmp307
jump 611 equal *tmp308 false
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp310 @unit @coal
op lessThan *tmp311 *tmp310 30
sensor *tmp312 .core @coal
op land *tmp313 *tmp311 *tmp312
jump 604 notEqual *tmp313 false
write "Depositing..." .display ".status3"
sensor *tmp256 @unit @firstItem
jump 634 notEqual *tmp256 @coal
sensor *tmp254 .thoriumGenerator @x
sensor *tmp255 .thoriumGenerator @y
write "Moving..." .display ".status3"
ucontrol within *tmp254 *tmp255 6 *tmp242 0
jump 627 notEqual *tmp242 false
ucontrol approach *tmp254 *tmp255 5.5 0 0
ucontrol within *tmp254 *tmp255 6 *tmp242 0
jump 624 equal *tmp242 false
sensor :depositItems:cap .thoriumGenerator @itemCapacity
ucontrol itemDrop .thoriumGenerator 30 0 0 0
sensor *tmp260 @unit @firstItem
op mul *tmp261 *tmp260 :depositItems:cap
sensor *tmp262 .thoriumGenerator @coal
jump 628 greaterThan *tmp261 *tmp262
jump 639 always 0 0
sensor *tmp264 @unit @firstItem
jump 639 equal *tmp264 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp264 @unit @firstItem
jump 636 notEqual *tmp264 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set :fetchBlock:block .thoriumContainer
set :fetchBlock:item @thorium
set :fetchBlock*retaddr 645
jump 464 always 0 0
set @counter :supplyBase*retaddr
read *tmp101 .controller ".monos"
jump 659 lessThanEq *tmp101 3
write "Phase 1: supplying base" .display ".status1"
set :mineOre.1:ore @coal
write "Mining " .display ".status2"
write @coal .display ".item2"
write "core" .display ".block2"
set :mineOre:ore @coal
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 658
jump 396 always 0 0
set @counter :supplyBase*retaddr
set :supplyBase0:supplied false
jump 700 notEqual .unloader1 null
sensor *tmp367 .core @graphite
jump 671 greaterThanEq *tmp367 .targetGraphite
sensor *tmp370 .press @coal
jump 671 greaterThanEq *tmp370 5
write "Goal 1: graphite requirement" .display ".status1"
set :supplyBlock:block .press
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 670
jump 523 always 0 0
set :supplyBase0:supplied true
sensor *tmp373 .core @silicon
jump 690 greaterThanEq *tmp373 .targetSilicon
sensor *tmp376 .smelter @coal
jump 682 greaterThanEq *tmp376 5
write "Goal 2: coal for silicon requirement" .display ".status1"
set :supplyBlock:block .smelter
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 680
jump 523 always 0 0
set :supplyBase0:supplied true
jump 690 always 0 0
sensor *tmp379 .smelter @sand
jump 690 greaterThanEq *tmp379 5
write "Goal 3: sand for silicon requirement" .display ".status1"
set :supplyBlock:block .smelter
set :supplyBlock:ore @sand
set :supplyBlock*retaddr 689
jump 523 always 0 0
set :supplyBase0:supplied true
sensor *tmp382 .battery @totalPower
jump 700 greaterThanEq *tmp382 .powerTarget
sensor *tmp385 .generator @coal
jump 700 greaterThanEq *tmp385 2
write "Goal 4: supplying generator" .display ".status1"
set :supplyBlock:block .generator
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 699
jump 523 always 0 0
set :supplyBase0:supplied true
set *tmp390 100
sensor *tmp388 .core @titanium
jump 706 greaterThanEq *tmp388 .targetTitanium
sensor *tmp391 .core @titanium
op sub *tmp392 .targetTitanium *tmp391
op min *tmp390 7 *tmp392
sensor *tmp394 .titaniumDrill @titanium
jump 764 greaterThanEq *tmp394 *tmp390
jump 769 notEqual :supplyBase0:supplied false
sensor *tmp399 .battery @totalPower
op mul *tmp400 .unloader1 .powerTarget
jump 723 greaterThanEq *tmp399 *tmp400
write "Goal 5: supplying generator" .display ".status1"
set :mineOre.1:ore @coal
write "Mining " .display ".status2"
write @coal .display ".item2"
write "core" .display ".block2"
set :mineOre:ore @coal
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 722
jump 396 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp403 .core @silicon
jump 734 greaterThanEq *tmp403 .targetSilicon
write "Goal 6: silicon requirement" .display ".status1"
sensor :supplyBase0:coal .core @coal
sensor :supplyBase0:sand .core @sand
set :mineOre.1:ore @sand
jump 731 greaterThanEq :supplyBase0:coal :supplyBase0:sand
set :mineOre.1:ore @coal
set :mineOre.1*retaddr 733
jump 455 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp410 .core @copper
jump 741 greaterThanEq *tmp410 .targetCopper
write "Goal 7: copper requirement" .display ".status1"
set :mineOre.1:ore @copper
set :mineOre.1*retaddr 740
jump 455 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp413 .core @lead
jump 748 greaterThanEq *tmp413 .targetLead
write "Goal 8: lead requirement" .display ".status1"
set :mineOre.1:ore @lead
set :mineOre.1*retaddr 747
jump 455 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp416 .core @metaglass
jump 755 greaterThanEq *tmp416 .targetMetaglass
write "Goal 9: metaglass requirement" .display ".status1"
set :mineOre.1:ore @sand
set :mineOre.1*retaddr 754
jump 455 always 0 0
set @counter :supplyBase*retaddr
write "Goal 10: supplying base" .display ".status1"
sensor :supplyBase0:coal.1 .core @coal
sensor :supplyBase0:sand.1 .core @sand
set :mineOre.1:ore @sand
jump 761 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
set :mineOre.1:ore @coal
set :mineOre.1*retaddr 763
jump 455 always 0 0
set @counter :supplyBase*retaddr
write "Goal 11: Fetching titanium" .display ".status1"
set :fetchBlock:block .titaniumDrill
set :fetchBlock:item @titanium
set :fetchBlock*retaddr 769
jump 464 always 0 0
set @counter :supplyBase*retaddr
op sign :meetTarget:count :meetTarget:copper 0
op sign *tmp424 :meetTarget:lead 0
op add :meetTarget:count :meetTarget:count *tmp424
op sign *tmp424 :meetTarget:graphite 0
op add :meetTarget:count :meetTarget:count *tmp424
op sign *tmp424 :meetTarget:silicon 0
op add :meetTarget:count :meetTarget:count *tmp424
op sign *tmp424 :meetTarget:titanium 0
op add :meetTarget:count :meetTarget:count *tmp424
op sign *tmp424 :meetTarget:metaglass 0
op add :meetTarget:count :meetTarget:count *tmp424
op sign *tmp424 :meetTarget:thorium 0
op add :meetTarget:count :meetTarget:count *tmp424
write :meetTarget:count .display ".totalTargets"
write :meetTarget:block .display ".nextBlock"
write :meetTarget:copper .display ".targetCopper"
write :meetTarget:lead .display ".targetLead"
write :meetTarget:graphite .display ".targetGraphite"
write :meetTarget:silicon .display ".targetSilicon"
write :meetTarget:titanium .display ".targetTitanium"
write :meetTarget:metaglass .display ".targetMetaglass"
write :meetTarget:thorium .display ".targetThorium"
set .targetCopper :meetTarget:copper
op add *tmp425 :meetTarget:lead .leadSurplus
op add .targetLead *tmp425 1
set .targetGraphite :meetTarget:graphite
set .targetSilicon :meetTarget:silicon
set .targetTitanium :meetTarget:titanium
set .targetMetaglass :meetTarget:metaglass
set .targetThorium :meetTarget:thorium
op add *tmp427 :meetTarget:graphite .graphiteSurplus
write *tmp427 .controller ".pressTarget"
op add *tmp428 :meetTarget:silicon .siliconSurplus
write *tmp428 .controller ".smelterTarget"
op add *tmp429 :meetTarget:metaglass .metaglassSurplus
write *tmp429 .controller ".kilnTarget"
write *tmp425 .controller ".leadReserve"
op sign *tmp431 :meetTarget:silicon 0
op mul *tmp432 *tmp431 20
op add *tmp433 :meetTarget:silicon *tmp432
write *tmp433 .controller ".siliconReserve"
op sign *tmp434 :meetTarget:graphite 0
op mul *tmp435 *tmp434 20
op add *tmp436 :meetTarget:graphite *tmp435
write *tmp436 .controller ".graphiteReserve"
write .targetLead processor8 ".monoLeadTarget"
write :meetTarget:copper processor8 ".monoCopperTarget"
sensor *tmp438 .core @copper
jump 821 greaterThanEq *tmp438 .targetCopper
set *tmp437 false
jump 847 always 0 0
sensor *tmp441 .core @lead
jump 825 greaterThanEq *tmp441 .targetLead
set *tmp437 false
jump 847 always 0 0
sensor *tmp444 .core @graphite
jump 829 greaterThanEq *tmp444 .targetGraphite
set *tmp437 false
jump 847 always 0 0
sensor *tmp447 .core @silicon
jump 833 greaterThanEq *tmp447 .targetSilicon
set *tmp437 false
jump 847 always 0 0
sensor *tmp450 .core @titanium
jump 837 greaterThanEq *tmp450 .targetTitanium
set *tmp437 false
jump 847 always 0 0
sensor *tmp453 .core @metaglass
jump 841 greaterThanEq *tmp453 .targetMetaglass
set *tmp437 false
jump 847 always 0 0
sensor *tmp456 .core @thorium
jump 845 greaterThanEq *tmp456 .targetThorium
set *tmp437 false
jump 847 always 0 0
set *tmp437 true
jump 847 always 0 0
jump 851 notEqual *tmp437 false
set :supplyBase*retaddr 850
jump 562 always 0 0
jump 817 always 0 0
set @counter :meetTarget*retaddr
set :meetTarget:block :buildBlock:block
set :meetTarget:copper :buildBlock:copper
set :meetTarget:lead :buildBlock:lead
set :meetTarget:graphite :buildBlock:graphite
set :meetTarget:silicon :buildBlock:silicon
set :meetTarget:titanium :buildBlock:titanium
set :meetTarget:metaglass :buildBlock:metaglass
set :meetTarget:thorium :buildBlock:thorium
set :meetTarget*retaddr 862
jump 770 always 0 0
write :buildBlock:block .blockBuilder ":buildBlockAt:block"
write :buildBlock:x .blockBuilder ":buildBlockAt:x"
write :buildBlock:y .blockBuilder ":buildBlockAt:y"
write :buildBlock:rotation .blockBuilder ":buildBlockAt:rotation"
write :buildBlock:config .blockBuilder ":buildBlockAt:config"
write :buildBlock:index .blockBuilder ":buildBlockAt:index"
write false .blockBuilder ":buildBlockAt*finished"
write 1 .blockBuilder "@counter"
wait 1e-15
read *tmp466 .blockBuilder ":buildBlockAt*finished"
jump 870 equal *tmp466 false
read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
set @counter :buildBlock*retaddr
op add *tmp468 :buildRemoteBlock:x :buildRemoteBlock:y
jump 897 lessThanEq *tmp468 0
set :unpackCfg:cfg :buildRemoteBlock:cfg
set :unpackCfg*retaddr 880
jump 536 always 0 0
set :buildBlock:block :unpackCfg:type
set :buildBlock:x :buildRemoteBlock:x
set :buildBlock:y :buildRemoteBlock:y
set :buildBlock:copper :unpackCfg:cu
set :buildBlock:lead :unpackCfg:pb
set :buildBlock:graphite :unpackCfg:gr
set :buildBlock:silicon :unpackCfg:si
set :buildBlock:titanium :unpackCfg:ti
set :buildBlock:metaglass :unpackCfg:mg
set :buildBlock:thorium :unpackCfg:th
set :buildBlock:rotation :unpackCfg:rotation
set :buildBlock:config null
set :buildBlock:index :unpackCfg:ind
set :buildBlock*retaddr 895
jump 852 always 0 0
set :buildRemoteBlock*retval :buildBlock*retval
set @counter :buildRemoteBlock*retaddr
set :buildRemoteBlock*retval false
set @counter :buildRemoteBlock*retaddr
set :unpackCfg:cfg :buildBlockFromCfg:cfg
set :unpackCfg*retaddr 902
jump 536 always 0 0
op add *tmp471 .coreX :unpackCfg:x
op add *tmp472 .coreY :unpackCfg:y
set :buildBlock:block :unpackCfg:type
set :buildBlock:x *tmp471
set :buildBlock:y *tmp472
set :buildBlock:copper :unpackCfg:cu
set :buildBlock:lead :unpackCfg:pb
set :buildBlock:graphite :unpackCfg:gr
set :buildBlock:silicon :unpackCfg:si
set :buildBlock:titanium :unpackCfg:ti
set :buildBlock:metaglass :unpackCfg:mg
set :buildBlock:thorium :unpackCfg:th
set :buildBlock:rotation :unpackCfg:rotation
set :buildBlock:config :buildBlockFromCfg:config
set :buildBlock:index :unpackCfg:ind
set :buildBlock*retaddr 919
jump 852 always 0 0
set :buildBlockFromCfg*retval :buildBlock*retval
set @counter :buildBlockFromCfg*retaddr
set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
set :buildBlockFromCfg:config null
set :buildBlockFromCfg*retaddr 925
jump 899 always 0 0
set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
set @counter :buildBlockFromCfg.1*retaddr
set :unpackCfg:cfg :meetTarget.1:cfg
set :unpackCfg*retaddr 930
jump 536 always 0 0
set :meetTarget:block :unpackCfg:type
set :meetTarget:copper :unpackCfg:cu
set :meetTarget:lead :unpackCfg:pb
set :meetTarget:graphite :unpackCfg:gr
set :meetTarget:silicon :unpackCfg:si
set :meetTarget:titanium :unpackCfg:ti
set :meetTarget:metaglass :unpackCfg:mg
set :meetTarget:thorium :unpackCfg:th
set :meetTarget*retaddr 940
jump 770 always 0 0
set @counter :meetTarget.1*retaddr
set :meetTarget:block 0
set :meetTarget:copper 0
set :meetTarget:lead 0
set :meetTarget:graphite 0
set :meetTarget:silicon 0
set :meetTarget:titanium 0
set :meetTarget:metaglass 0
set :meetTarget:thorium 0
set :meetTarget*retaddr 951
jump 770 always 0 0
write 0 .display ".totalTargets"
write null .display ".nextBlock"
write 0 .controller ".leadReserve"
write 0 .controller ".siliconReserve"
write 0 .controller ".graphiteReserve"
set @counter :buildUnits*retaddr
ubind :flagUnits:unit
set :flagUnits:firstUnit @unit
jump 957 equal :flagUnits:firstUnit null
set :flagUnits:x @thisx
ucontrol flag :flagUnits:x 0 0 0 0
op add :flagUnits:x :flagUnits:x 4
ubind :flagUnits:unit
jump 961 notEqual @unit :flagUnits:firstUnit
set @counter :flagUnits*retaddr
ubind :lineUpUnits:unit
set :lineUpUnits:firstUnit @unit
sensor :lineUpUnits:x @unit @flag
ucontrol itemDrop @air 1000 0 0 0
ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0
sensor *tmp478 @unit @mining
jump 974 equal *tmp478 false
ucontrol stop 0 0 0 0 0
ubind :lineUpUnits:unit
jump 968 notEqual @unit :lineUpUnits:firstUnit
set @counter :lineUpUnits*retaddr
print "Compiled by Mindcode - github.com/cardillan/mindcode"

