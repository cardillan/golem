jump 20 always 0 0
draw triangle bank1 processor1 processor2 processor3 processor4 processor5
draw triangle processor6 processor7 processor8 .ERROR .battery .blockBuilder
draw triangle .builder .controller .core .coreX .coreY .display
draw triangle .generator .graphiteSurplus .leadSurplus .metaglassSurplus .powerTarget .press
draw triangle .siliconSurplus .smelter .targetCopper .targetGraphite .targetLead .targetMetaglass
draw triangle .targetSilicon .targetThorium .targetTitanium .thoriumContainer .thoriumDrill .thoriumGenerator
draw triangle .titaniumDrill .unloader1 :blocksBuildTitaniumDrills:current :buildBlock:block :buildBlock:config :buildBlock:copper
draw triangle :buildBlock:graphite :buildBlock:lead :buildBlock:metaglass :buildBlock:rotation :buildBlock:silicon :buildBlock:thorium
draw triangle :buildBlock:titanium :buildBlock:x :buildBlock:y :buildBlockFromCfg.1:cfg :buildBlockFromCfg:cfg :buildBlockFromCfg:config
draw triangle :buildFirstTitaniumDrill:dx :buildFirstTitaniumDrill:dy :buildFirstTitaniumDrill:result :buildRemoteBlock:cfg :buildRemoteBlock:x :buildRemoteBlock:y
draw triangle :buildThoriumDrill:result :depositItems:cap :fetchBlock:unitItem :flagUnits:firstUnit :flagUnits:unit :flagUnits:x
draw triangle :lineUpUnits:firstUnit :lineUpUnits:unit :lineUpUnits:x :lineUpUnits:y :locateOre:x :locateOre:y
draw triangle :meetTarget:block :meetTarget.1:cfg :meetTarget:copper :meetTarget:count :meetTarget:graphite :meetTarget:lead
draw triangle :meetTarget:metaglass :meetTarget:silicon :meetTarget:thorium :meetTarget:titanium :mineOre:amount :mineOre:block
draw triangle :mineOre:item :mineOre.1:ore :mineOre:ore :mineOre:stop :supplyBase0:coal.1 :supplyBase0:coal
draw triangle :supplyBase0:sand.1 :supplyBase0:sand :supplyBase0:supplied :supplyBlock:block :supplyBlock:blockCapacity :supplyBlock:missing
draw triangle :supplyBlock:ore :supplyBlockFromCore:unitItem :transportStatus:target :unpackCfg:cfg :unpackCfg:cu :unpackCfg:gr
draw triangle :unpackCfg:mg :unpackCfg:pb :unpackCfg:rotation :unpackCfg:si :unpackCfg:th :unpackCfg:ti
draw triangle :unpackCfg:type :unpackCfg:x :unpackCfg:y 0 0 0
set .ERROR ""
set .display processor1
set .blockBuilder processor5
set .press null
set .generator null
set .battery null
set .smelter null
set .titaniumDrill null
set .unloader1 null
set .thoriumContainer null
set .thoriumGenerator null
set .leadSurplus 0
set .graphiteSurplus 20
set .siliconSurplus 20
set .metaglassSurplus 20
write 511 bank1 511
ubind @poly
set .builder @unit
ulocate building core false @copper .coreX .coreY 0 .core
jump 36 equal .core null
set :buildBlockFromCfg.1:cfg "#'+nA######"
set :buildBlockFromCfg.1*retaddr 43
jump 946 always 0 0
set .press :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "k*/(7######"
set :buildBlockFromCfg.1*retaddr 47
jump 946 always 0 0
set .battery :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "k+/(7######"
set :buildBlockFromCfg.1*retaddr 51
jump 946 always 0 0
set :buildBlockFromCfg.1:cfg "m*.<2######"
set :buildBlockFromCfg.1*retaddr 54
jump 946 always 0 0
set .generator :buildBlockFromCfg.1*retval
set .powerTarget 400
set :buildBlockFromCfg.1:cfg "%+-A<######"
set :buildBlockFromCfg.1*retaddr 59
jump 946 always 0 0
set .smelter :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "T+,%%######"
set :buildBlockFromCfg.1*retaddr 63
jump 946 always 0 0
set :meetTarget.1:cfg "w**5#-#####"
set :meetTarget.1*retaddr 66
jump 952 always 0 0
write @titanium processor1 ".nextBlock"
write .coreX processor4 ":findDrillLocation:x"
write .coreY processor4 ":findDrillLocation:y"
write @unit processor4 ":findDrillLocation:unit"
write @titanium processor4 ":findDrillLocation:item"
write @ore-titanium processor4 ":findDrillLocation:ore"
write 2 processor4 ":findDrillLocation:size"
write 4 processor4 ":findDrillLocation:limit"
write false processor4 ":findDrillLocation*finished"
write 1 processor4 "@counter"
wait 1e-15
read *tmp140 processor4 ":findDrillLocation*finished"
jump 76 equal *tmp140 false
read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocation:dx"
read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
jump 85 notEqual :buildFirstTitaniumDrill:result false
set .ERROR "Cannot locate spot for titanium drill"
stop
write @pneumatic-drill processor1 ".nextBlock"
write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
write false processor5 ":buildFirstTitaniumDrillAt*finished"
write 2 processor5 "@counter"
wait 1e-15
read *tmp146 processor5 ":buildFirstTitaniumDrillAt*finished"
jump 90 equal *tmp146 false
read *tmp129 processor5 ":buildFirstTitaniumDrillAt*retval"
set .titaniumDrill *tmp129
write *tmp129 processor1 ".titaniumDrill"
set :buildBlockFromCfg.1:cfg "*,###A<###"
set :buildBlockFromCfg.1*retaddr 99
jump 946 always 0 0
set .unloader1 :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "T),%%######"
set :buildBlockFromCfg.1*retaddr 103
jump 946 always 0 0
set :buildBlockFromCfg.1:cfg "W*-'%######"
set :buildBlockFromCfg.1*retaddr 106
jump 946 always 0 0
set .graphiteSurplus 100
set :buildBlockFromCfg:cfg "®-.}U#U####"
set :buildBlockFromCfg:config processor2
set :buildBlockFromCfg*retaddr 111
jump 925 always 0 0
set .controller :buildBlockFromCfg*retval
write processor6 :buildBlockFromCfg*retval ".timer"
write processor1 :buildBlockFromCfg*retval ".display"
write .core :buildBlockFromCfg*retval ".core"
write bank1 :buildBlockFromCfg*retval ".bank"
write .battery :buildBlockFromCfg*retval ".battery"
write .generator :buildBlockFromCfg*retval ".generator"
write .smelter :buildBlockFromCfg*retval ".smelter"
write .press :buildBlockFromCfg*retval ".press"
write .unloader1 :buildBlockFromCfg*retval ".unloader1"
set :buildBlockFromCfg.1:cfg "g)'%)######"
set :buildBlockFromCfg.1*retaddr 124
jump 946 always 0 0
set :buildBlockFromCfg.1:cfg "(*###A<###"
set :buildBlockFromCfg.1*retaddr 127
jump 946 always 0 0
write :buildBlockFromCfg.1*retval .controller ".unloader2"
set :buildBlockFromCfg.1:cfg "'(_i#####&"
set :buildBlockFromCfg.1*retaddr 131
jump 946 always 0 0
write :buildBlockFromCfg.1*retval .controller ".factory"
write :buildBlockFromCfg.1*retval processor1 ".airFactory"
write 1 .controller ".flareTarget"
write 1 processor1 ".flareTarget"
write 3 .controller ".monoTarget"
write 3 processor1 ".monoTarget"
write 85 .controller ".pressTarget"
write 150 .controller ".smelterTarget"
write 30 .controller ".kilnTarget"
set .leadSurplus 20
set .siliconSurplus 20
set :buildUnits*retaddr 144
jump 966 always 0 0
set :supplyBase*retaddr 146
jump 505 always 0 0
sensor *tmp155 .battery @totalPower
jump 150 lessThan *tmp155 300
read *tmp97 .controller ".monos"
jump 144 lessThan *tmp97 3
set .siliconSurplus 65
set :buildBlockFromCfg.1:cfg ",)###A<###"
set :buildBlockFromCfg.1*retaddr 154
jump 946 always 0 0
set :buildBlockFromCfg.1:cfg "T,*%%######"
set :buildBlockFromCfg.1*retaddr 157
jump 946 always 0 0
set :buildBlockFromCfg.1:cfg "',+_AA#####"
set :buildBlockFromCfg.1*retaddr 160
jump 946 always 0 0
write :buildBlockFromCfg.1*retval .controller ".kiln"
set :buildBlockFromCfg.1:cfg "z%-AAA##A##"
set :buildBlockFromCfg.1*retaddr 164
jump 946 always 0 0
set :buildBlockFromCfg.1:cfg "W'*'%######"
set :buildBlockFromCfg.1*retaddr 167
jump 946 always 0 0
set :buildBlockFromCfg.1:cfg "W&*'%######"
set :buildBlockFromCfg.1*retaddr 170
jump 946 always 0 0
set :buildBlockFromCfg.1:cfg "o%+FK<A####"
set :buildBlockFromCfg.1*retaddr 173
jump 946 always 0 0
write :buildBlockFromCfg.1*retval .controller ".generator2"
set :buildBlockFromCfg.1:cfg "$(.#U<###"
set :buildBlockFromCfg.1*retaddr 177
jump 946 always 0 0
write :buildBlockFromCfg.1*retval .controller ".multipress"
set .graphiteSurplus 200
set :buildBlockFromCfg.1:cfg " '%-#2#####"
set :buildBlockFromCfg.1*retaddr 182
jump 946 always 0 0
write :buildBlockFromCfg.1*retval .controller ".payloadRouter"
set :buildBlockFromCfg.1:cfg "*(###A<###"
set :buildBlockFromCfg.1*retaddr 186
jump 946 always 0 0
write :buildBlockFromCfg.1*retval .controller ".unloader4"
set :buildBlockFromCfg.1:cfg "X*''%######"
set :buildBlockFromCfg.1*retaddr 190
jump 946 always 0 0
set :buildBlockFromCfg.1:cfg "*%ë#}####"
set :buildBlockFromCfg.1*retaddr 193
jump 946 always 0 0
write :buildBlockFromCfg.1*retval .controller ".reconstructor"
write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
set :buildBlockFromCfg.1:cfg "l/-#U#A7###"
set :buildBlockFromCfg.1*retaddr 198
jump 946 always 0 0
set :buildUnits*retaddr 200
jump 966 always 0 0
set .siliconSurplus 1000
set .metaglassSurplus 200
write 6 .controller ".polyTarget"
write 6 processor1 ".polyTarget"
set :buildBlockFromCfg.1:cfg "%-)A<######"
set :buildBlockFromCfg.1*retaddr 207
jump 946 always 0 0
write :buildBlockFromCfg.1*retval .controller ".smelter2"
set :buildBlockFromCfg:cfg "--###A<###"
set :buildBlockFromCfg:config @sand
set :buildBlockFromCfg*retaddr 212
jump 925 always 0 0
set :buildUnits*retaddr 214
jump 966 always 0 0
read *tmp98 .controller ".polys"
jump 220 greaterThanEq *tmp98 3
set :supplyBase*retaddr 218
jump 505 always 0 0
read *tmp98 .controller ".polys"
jump 216 lessThan *tmp98 3
write 3 .controller ".flareTarget"
write 3 processor1 ".flareTarget"
read *tmp96 .controller ".flares"
jump 228 greaterThanEq *tmp96 2
set :supplyBase*retaddr 226
jump 505 always 0 0
read *tmp96 .controller ".flares"
jump 224 lessThan *tmp96 2
write 5 .controller ".monoTarget"
write 5 processor1 ".monoTarget"
write @ore-titanium processor1 ".nextBlock"
wait 0.000000001
ubind @flare
read :blocksBuildTitaniumDrills:current processor4 ".locations"
write .coreX processor4 ":findDrillLocation:x"
write .coreY processor4 ":findDrillLocation:y"
write @unit processor4 ":findDrillLocation:unit"
write @titanium processor4 ":findDrillLocation:item"
write @ore-titanium processor4 ":findDrillLocation:ore"
write 4 processor4 ":findDrillLocation:size"
write 1000000000 processor4 ":findDrillLocation:limit"
write false processor4 ":findDrillLocation*finished"
write 1 processor4 "@counter"
ubind .builder
write .controller processor5 ":buildTitaniumDrills:aController"
write :blocksBuildTitaniumDrills:current processor5 ":buildTitaniumDrills:current"
write false processor5 ":buildTitaniumDrills*finished"
write 3 processor5 "@counter"
wait 1e-15
read *tmp188 processor5 ":buildTitaniumDrills*finished"
jump 248 equal *tmp188 false
write false processor4 ":stopLocation*finished"
write 3 processor4 "@counter"
write null processor1 ".nextBlock"
write .coreX processor4 ":layoutThoriumDrill:x"
write .coreY processor4 ":layoutThoriumDrill:y"
write @unit processor4 ":layoutThoriumDrill:unit"
write 7 processor4 ":layoutThoriumDrill:limit"
write false processor4 ":layoutThoriumDrill*finished"
write 2 processor4 "@counter"
wait 1e-15
read *tmp193 processor4 ":layoutThoriumDrill*finished"
jump 260 equal *tmp193 false
set :meetTarget.1:cfg "x**F#AA7###"
set :meetTarget.1*retaddr 266
jump 952 always 0 0
wait 1e-15
read *tmp195 processor4 ":layoutThoriumDrill*finished"
jump 266 equal *tmp195 false
read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
jump 273 notEqual :buildThoriumDrill:result false
set .ERROR "Cannot locate spot for thorium drill"
stop
write @laser-drill processor5 ":buildBlockAt:block"
read *tmp54 processor4 ".drillX"
write *tmp54 processor5 ":buildBlockAt:x"
read *tmp55 processor4 ".drillY"
write *tmp55 processor5 ":buildBlockAt:y"
write null processor5 ":buildBlockAt:rotation"
write 0 processor5 ":buildBlockAt:config"
write false processor5 ":buildBlockAt*finished"
write 1 processor5 "@counter"
wait 1e-15
read *tmp204 processor5 ":buildBlockAt*finished"
jump 282 equal *tmp204 false
read .thoriumDrill processor5 ":buildBlockAt*retval"
set :buildRemoteBlock:cfg "z%-AAA##A##"
read :buildRemoteBlock:x processor4 ".water1X"
read :buildRemoteBlock:y processor4 ".water1Y"
set :buildRemoteBlock*retaddr 291
jump 902 always 0 0
read :buildRemoteBlock:x processor4 ".water2X"
read :buildRemoteBlock:y processor4 ".water2Y"
set :buildRemoteBlock*retaddr 295
jump 902 always 0 0
set :buildRemoteBlock:cfg "o%+FK<A####"
read :buildRemoteBlock:x processor4 ".generatorX"
read :buildRemoteBlock:y processor4 ".generatorY"
set :buildRemoteBlock*retaddr 300
jump 902 always 0 0
set .thoriumGenerator :buildRemoteBlock*retval
set :buildRemoteBlock:cfg "g)'%)######"
read :buildRemoteBlock:x processor4 ".nodeX"
read :buildRemoteBlock:y processor4 ".nodeY"
set :buildRemoteBlock*retaddr 306
jump 902 always 0 0
set :buildRemoteBlock:cfg "r**#-#+####"
read :buildRemoteBlock:x processor4 ".panelX"
read :buildRemoteBlock:y processor4 ".panelY"
set :buildRemoteBlock*retaddr 311
jump 902 always 0 0
set :buildRemoteBlock:cfg "k*/(7######"
read :buildRemoteBlock:x processor4 ".batteryX"
read :buildRemoteBlock:y processor4 ".batteryY"
set :buildRemoteBlock*retaddr 316
jump 902 always 0 0
set :buildRemoteBlock:cfg "**#######"
read :buildRemoteBlock:x processor4 ".containerX"
read :buildRemoteBlock:y processor4 ".containerY"
set :buildRemoteBlock*retaddr 321
jump 902 always 0 0
set .thoriumContainer :buildRemoteBlock*retval
jump 324 notEqual :buildRemoteBlock*retval null
set .thoriumContainer .thoriumDrill
write .thoriumDrill processor1 ".thoriumDrill"
write .thoriumContainer processor1 ".thoriumContainer"
write .thoriumContainer processor3 ":setThoriumContainer:container"
write false processor3 ":setThoriumContainer*finished"
write 3 processor3 "@counter"
wait 1e-15
read *tmp216 processor3 ":setThoriumContainer*finished"
jump 329 equal *tmp216 false
write null processor1 ".nextBlock"
write 1 .controller ".megaTarget"
write 1 processor1 ".megaTarget"
read *tmp98 .controller ".polys"
jump 341 greaterThanEq *tmp98 5
set :supplyBase*retaddr 339
jump 505 always 0 0
read *tmp98 .controller ".polys"
jump 337 lessThan *tmp98 5
set :buildBlockFromCfg:cfg "+(###A<###"
set :buildBlockFromCfg:config @silicon
set :buildBlockFromCfg*retaddr 345
jump 925 always 0 0
write :buildBlockFromCfg*retval .controller ".unloader6"
set :buildBlockFromCfg.1:cfg "X+''%######"
set :buildBlockFromCfg.1*retaddr 349
jump 946 always 0 0
set :buildBlockFromCfg.1:cfg ".&#ʭ#ǥƁ#ʭ#"
set :buildBlockFromCfg.1*retaddr 352
jump 946 always 0 0
write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
set :buildUnits*retaddr 356
jump 966 always 0 0
read *tmp99 .controller ".megas"
jump 362 greaterThanEq *tmp99 1
set :supplyBase*retaddr 360
jump 505 always 0 0
read *tmp99 .controller ".megas"
jump 358 lessThan *tmp99 1
control enabled processor7 false 0 0 0
control enabled processor8 false 0 0 0
control enabled processor3 false 0 0 0
control enabled processor4 false 0 0 0
control enabled processor5 false 0 0 0
set :flagUnits:unit @mega
set :flagUnits*retaddr 370
jump 982 always 0 0
set :flagUnits:unit @poly
set :flagUnits*retaddr 373
jump 982 always 0 0
set :flagUnits:unit @mono
set :flagUnits*retaddr 376
jump 982 always 0 0
set :flagUnits:unit @flare
set :flagUnits*retaddr 379
jump 982 always 0 0
op sub :lineUpUnits:y @thisy 6
ubind @mega
set :lineUpUnits:firstUnit @unit
sensor :lineUpUnits:x @unit @flag
ucontrol itemDrop @air 1000 0 0 0
ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0
ubind @mega
jump 382 notEqual @unit :lineUpUnits:firstUnit
op sub :lineUpUnits:y @thisy 10
set :lineUpUnits:unit @poly
set :lineUpUnits*retaddr 391
jump 990 always 0 0
op sub :lineUpUnits:y @thisy 14
set :lineUpUnits:unit @mono
set :lineUpUnits*retaddr 395
jump 990 always 0 0
op sub :lineUpUnits:y @thisy 18
set :lineUpUnits:unit @flare
set :lineUpUnits*retaddr 399
jump 990 always 0 0
jump 379 always 0 0
op min :mineOre:amount :mineOre:amount 30
write :mineOre:amount .display ".transportTarget"
write :mineOre:ore .display ".transportItem"
ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp254 0
jump 407 notEqual *tmp254 false
set .ERROR "Cannot locate ore"
stop
write "Moving..." .display ".status3"
sensor *tmp235 @unit @firstItem
jump 411 equal *tmp235 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach :locateOre:x :locateOre:y 5.5 0 0
ucontrol within :locateOre:x :locateOre:y 6 *tmp238 0
jump 408 equal *tmp238 false
sensor *tmp259 @unit @firstItem
jump 421 equal *tmp259 :mineOre:ore
sensor *tmp240 @unit @firstItem
jump 421 equal *tmp240 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp240 @unit @firstItem
jump 418 notEqual *tmp240 null
write "Mining..." .display ".status3"
op add :mineOre:stop @second 10
sensor :mineOre:item @unit @firstItem
op notEqual *tmp264 :mineOre:item null
op notEqual *tmp265 :mineOre:item :mineOre:ore
op land *tmp266 *tmp264 *tmp265
jump 432 notEqual *tmp266 false
ucontrol mine :locateOre:x :locateOre:y 0 0 0
jump 432 greaterThan @second :mineOre:stop
sensor *tmp270 @unit @totalItems
jump 423 lessThan *tmp270 :mineOre:amount
ucontrol unbind 0 0 0 0 0
write "Depositing..." .display ".status3"
sensor *tmp244 @unit @firstItem
jump 451 notEqual *tmp244 :mineOre:ore
sensor *tmp242 :mineOre:block @x
sensor *tmp243 :mineOre:block @y
write "Moving..." .display ".status3"
ucontrol within *tmp242 *tmp243 6 *tmp230 0
jump 444 notEqual *tmp230 false
ucontrol approach *tmp242 *tmp243 5.5 0 0
ucontrol within *tmp242 *tmp243 6 *tmp230 0
jump 441 equal *tmp230 false
sensor :depositItems:cap :mineOre:block @itemCapacity
ucontrol itemDrop :mineOre:block 30 0 0 0
sensor *tmp248 @unit @firstItem
op mul *tmp249 *tmp248 :depositItems:cap
sensor *tmp250 :mineOre:block :mineOre:ore
jump 445 greaterThan *tmp249 *tmp250
jump 456 always 0 0
sensor *tmp252 @unit @firstItem
jump 456 equal *tmp252 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp252 @unit @firstItem
jump 453 notEqual *tmp252 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set @counter :mineOre*retaddr
write "Mining " .display ".status2"
write :mineOre.1:ore .display ".item2"
write "core" .display ".block2"
set :mineOre:ore :mineOre.1:ore
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 467
jump 400 always 0 0
set @counter :mineOre.1*retaddr
write "Supplying " .display ".status2"
write :supplyBlock:ore .display ".item2"
write :supplyBlock:block .display ".block2"
sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
sensor *tmp287 :supplyBlock:block :supplyBlock:ore
op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp287
jump 480 lessThanEq :supplyBlock:missing 0
set :mineOre:ore :supplyBlock:ore
set :mineOre:amount :supplyBlock:blockCapacity
set :mineOre:block :supplyBlock:block
set :mineOre*retaddr 480
jump 400 always 0 0
set @counter :supplyBlock*retaddr
read *tmp303 :unpackCfg:cfg 0
op sub *tmp304 *tmp303 35
lookup block :unpackCfg:type *tmp304
read *tmp307 :unpackCfg:cfg 1
op sub :unpackCfg:x *tmp307 42
read *tmp311 :unpackCfg:cfg 2
op sub :unpackCfg:y *tmp311 42
read *tmp315 :unpackCfg:cfg 3
op sub :unpackCfg:cu *tmp315 35
read *tmp318 :unpackCfg:cfg 4
op sub :unpackCfg:pb *tmp318 35
read *tmp321 :unpackCfg:cfg 5
op sub :unpackCfg:gr *tmp321 35
read *tmp324 :unpackCfg:cfg 6
op sub :unpackCfg:si *tmp324 35
read *tmp327 :unpackCfg:cfg 7
op sub :unpackCfg:ti *tmp327 35
read *tmp330 :unpackCfg:cfg 8
op sub :unpackCfg:mg *tmp330 35
read *tmp333 :unpackCfg:cfg 9
op sub :unpackCfg:th *tmp333 35
read *tmp336 :unpackCfg:cfg 10
op sub :unpackCfg:rotation *tmp336 35
set @counter :unpackCfg*retaddr
jump 622 equal .thoriumContainer false
write "Phase 2: servicing thorium drill" .display ".status1"
sensor *tmp291 .thoriumGenerator @itemCapacity
op min :transportStatus:target *tmp291 30
write :transportStatus:target .display ".transportTarget"
write @coal .display ".transportItem"
write "Transferring " .display ".status2"
write @coal .display ".item2"
write .thoriumGenerator .display ".block2"
write "Moving..." .display ".status3"
sensor *tmp235 @unit @firstItem
jump 518 equal *tmp235 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach .coreX .coreY 5.5 0 0
ucontrol within .coreX .coreY 6 *tmp238 0
jump 515 equal *tmp238 false
sensor *tmp240 @unit @firstItem
jump 526 equal *tmp240 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp240 @unit @firstItem
jump 523 notEqual *tmp240 null
ucontrol itemTake .core @coal 30 0 0
sensor :supplyBlockFromCore:unitItem @unit @firstItem
op notEqual *tmp294 :supplyBlockFromCore:unitItem null
op notEqual *tmp295 :supplyBlockFromCore:unitItem @coal
op land *tmp296 *tmp294 *tmp295
jump 533 equal *tmp296 false
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp298 @unit @coal
op lessThan *tmp299 *tmp298 30
sensor *tmp300 .core @coal
op land *tmp301 *tmp299 *tmp300
jump 526 notEqual *tmp301 false
write "Depositing..." .display ".status3"
sensor *tmp244 @unit @firstItem
jump 556 notEqual *tmp244 @coal
sensor *tmp242 .thoriumGenerator @x
sensor *tmp243 .thoriumGenerator @y
write "Moving..." .display ".status3"
ucontrol within *tmp242 *tmp243 6 *tmp230 0
jump 549 notEqual *tmp230 false
ucontrol approach *tmp242 *tmp243 5.5 0 0
ucontrol within *tmp242 *tmp243 6 *tmp230 0
jump 546 equal *tmp230 false
sensor :depositItems:cap .thoriumGenerator @itemCapacity
ucontrol itemDrop .thoriumGenerator 30 0 0 0
sensor *tmp248 @unit @firstItem
op mul *tmp249 *tmp248 :depositItems:cap
sensor *tmp250 .thoriumGenerator @coal
jump 550 greaterThan *tmp249 *tmp250
jump 561 always 0 0
sensor *tmp252 @unit @firstItem
jump 561 equal *tmp252 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp252 @unit @firstItem
jump 558 notEqual *tmp252 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
sensor *tmp273 .thoriumContainer @itemCapacity
op min :transportStatus:target *tmp273 30
write :transportStatus:target .display ".transportTarget"
write @thorium .display ".transportItem"
write "Fetching " .display ".status2"
write @thorium .display ".item2"
write .thoriumContainer .display ".block2"
sensor *tmp275 .thoriumContainer @x
sensor *tmp276 .thoriumContainer @y
write "Moving..." .display ".status3"
sensor *tmp235 @unit @firstItem
jump 576 equal *tmp235 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach *tmp275 *tmp276 5.5 0 0
ucontrol within *tmp275 *tmp276 6 *tmp238 0
jump 573 equal *tmp238 false
sensor *tmp240 @unit @firstItem
jump 584 equal *tmp240 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp240 @unit @firstItem
jump 581 notEqual *tmp240 null
ucontrol itemTake .thoriumContainer @thorium 30 0 0
sensor :fetchBlock:unitItem @unit @firstItem
op notEqual *tmp278 :fetchBlock:unitItem null
op notEqual *tmp279 :fetchBlock:unitItem @thorium
op land *tmp280 *tmp278 *tmp279
jump 591 equal *tmp280 false
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp282 @unit @thorium
op lessThan *tmp283 *tmp282 30
sensor *tmp284 .thoriumContainer @thorium
op land *tmp285 *tmp283 *tmp284
jump 584 notEqual *tmp285 false
write "Depositing..." .display ".status3"
sensor *tmp244 @unit @firstItem
jump 614 notEqual *tmp244 @thorium
sensor *tmp242 .core @x
sensor *tmp243 .core @y
write "Moving..." .display ".status3"
ucontrol within *tmp242 *tmp243 6 *tmp230 0
jump 607 notEqual *tmp230 false
ucontrol approach *tmp242 *tmp243 5.5 0 0
ucontrol within *tmp242 *tmp243 6 *tmp230 0
jump 604 equal *tmp230 false
sensor :depositItems:cap .core @itemCapacity
ucontrol itemDrop .core 30 0 0 0
sensor *tmp248 @unit @firstItem
op mul *tmp249 *tmp248 :depositItems:cap
sensor *tmp250 .core @thorium
jump 608 greaterThan *tmp249 *tmp250
jump 619 always 0 0
sensor *tmp252 @unit @firstItem
jump 619 equal *tmp252 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp252 @unit @firstItem
jump 616 notEqual *tmp252 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set @counter :supplyBase*retaddr
read *tmp97 .controller ".monos"
jump 635 lessThanEq *tmp97 3
write "Phase 1: supplying base" .display ".status1"
set :mineOre.1:ore @coal
write "Mining " .display ".status2"
write @coal .display ".item2"
write "core" .display ".block2"
set :mineOre:ore @coal
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 634
jump 400 always 0 0
set @counter :supplyBase*retaddr
set :supplyBase0:supplied false
jump 676 notEqual .unloader1 null
sensor *tmp343 .core @graphite
jump 647 greaterThanEq *tmp343 .targetGraphite
sensor *tmp346 .press @coal
jump 647 greaterThanEq *tmp346 5
write "Goal 1: graphite requirement" .display ".status1"
set :supplyBlock:block .press
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 646
jump 468 always 0 0
set :supplyBase0:supplied true
sensor *tmp349 .core @silicon
jump 666 greaterThanEq *tmp349 .targetSilicon
sensor *tmp352 .smelter @coal
jump 658 greaterThanEq *tmp352 5
write "Goal 2: coal for silicon requirement" .display ".status1"
set :supplyBlock:block .smelter
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 656
jump 468 always 0 0
set :supplyBase0:supplied true
jump 666 always 0 0
sensor *tmp355 .smelter @sand
jump 666 greaterThanEq *tmp355 5
write "Goal 3: sand for silicon requirement" .display ".status1"
set :supplyBlock:block .smelter
set :supplyBlock:ore @sand
set :supplyBlock*retaddr 665
jump 468 always 0 0
set :supplyBase0:supplied true
sensor *tmp358 .battery @totalPower
jump 676 greaterThanEq *tmp358 .powerTarget
sensor *tmp361 .generator @coal
jump 676 greaterThanEq *tmp361 2
write "Goal 4: supplying generator" .display ".status1"
set :supplyBlock:block .generator
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 675
jump 468 always 0 0
set :supplyBase0:supplied true
set *tmp366 100
sensor *tmp364 .core @titanium
jump 682 greaterThanEq *tmp364 .targetTitanium
sensor *tmp367 .core @titanium
op sub *tmp368 .targetTitanium *tmp367
op min *tmp366 7 *tmp368
sensor *tmp370 .titaniumDrill @titanium
jump 740 greaterThanEq *tmp370 *tmp366
jump 799 notEqual :supplyBase0:supplied false
sensor *tmp375 .battery @totalPower
op mul *tmp376 .unloader1 .powerTarget
jump 699 greaterThanEq *tmp375 *tmp376
write "Goal 5: supplying generator" .display ".status1"
set :mineOre.1:ore @coal
write "Mining " .display ".status2"
write @coal .display ".item2"
write "core" .display ".block2"
set :mineOre:ore @coal
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 698
jump 400 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp379 .core @silicon
jump 710 greaterThanEq *tmp379 .targetSilicon
write "Goal 6: silicon requirement" .display ".status1"
sensor :supplyBase0:coal .core @coal
sensor :supplyBase0:sand .core @sand
set :mineOre.1:ore @sand
jump 707 greaterThanEq :supplyBase0:coal :supplyBase0:sand
set :mineOre.1:ore @coal
set :mineOre.1*retaddr 709
jump 459 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp386 .core @copper
jump 717 greaterThanEq *tmp386 .targetCopper
write "Goal 7: copper requirement" .display ".status1"
set :mineOre.1:ore @copper
set :mineOre.1*retaddr 716
jump 459 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp389 .core @lead
jump 724 greaterThanEq *tmp389 .targetLead
write "Goal 8: lead requirement" .display ".status1"
set :mineOre.1:ore @lead
set :mineOre.1*retaddr 723
jump 459 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp392 .core @metaglass
jump 731 greaterThanEq *tmp392 .targetMetaglass
write "Goal 9: metaglass requirement" .display ".status1"
set :mineOre.1:ore @sand
set :mineOre.1*retaddr 730
jump 459 always 0 0
set @counter :supplyBase*retaddr
write "Goal 10: supplying base" .display ".status1"
sensor :supplyBase0:coal.1 .core @coal
sensor :supplyBase0:sand.1 .core @sand
set :mineOre.1:ore @sand
jump 737 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
set :mineOre.1:ore @coal
set :mineOre.1*retaddr 739
jump 459 always 0 0
set @counter :supplyBase*retaddr
write "Goal 11: Fetching titanium" .display ".status1"
sensor *tmp273 .titaniumDrill @itemCapacity
op min :transportStatus:target *tmp273 30
write :transportStatus:target .display ".transportTarget"
write @titanium .display ".transportItem"
write "Fetching " .display ".status2"
write @titanium .display ".item2"
write .titaniumDrill .display ".block2"
sensor *tmp275 .titaniumDrill @x
sensor *tmp276 .titaniumDrill @y
write "Moving..." .display ".status3"
sensor *tmp235 @unit @firstItem
jump 754 equal *tmp235 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach *tmp275 *tmp276 5.5 0 0
ucontrol within *tmp275 *tmp276 6 *tmp238 0
jump 751 equal *tmp238 false
sensor *tmp240 @unit @firstItem
jump 762 equal *tmp240 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp240 @unit @firstItem
jump 759 notEqual *tmp240 null
ucontrol itemTake .titaniumDrill @titanium 30 0 0
sensor :fetchBlock:unitItem @unit @firstItem
op notEqual *tmp278 :fetchBlock:unitItem null
op notEqual *tmp279 :fetchBlock:unitItem @titanium
op land *tmp280 *tmp278 *tmp279
jump 769 equal *tmp280 false
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp282 @unit @titanium
op lessThan *tmp283 *tmp282 30
sensor *tmp284 .titaniumDrill @titanium
op land *tmp285 *tmp283 *tmp284
jump 762 notEqual *tmp285 false
write "Depositing..." .display ".status3"
sensor *tmp244 @unit @firstItem
jump 792 notEqual *tmp244 @titanium
sensor *tmp242 .core @x
sensor *tmp243 .core @y
write "Moving..." .display ".status3"
ucontrol within *tmp242 *tmp243 6 *tmp230 0
jump 785 notEqual *tmp230 false
ucontrol approach *tmp242 *tmp243 5.5 0 0
ucontrol within *tmp242 *tmp243 6 *tmp230 0
jump 782 equal *tmp230 false
sensor :depositItems:cap .core @itemCapacity
ucontrol itemDrop .core 30 0 0 0
sensor *tmp248 @unit @firstItem
op mul *tmp249 *tmp248 :depositItems:cap
sensor *tmp250 .core @titanium
jump 786 greaterThan *tmp249 *tmp250
jump 797 always 0 0
sensor *tmp252 @unit @firstItem
jump 797 equal *tmp252 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp252 @unit @firstItem
jump 794 notEqual *tmp252 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set @counter :supplyBase*retaddr
op sign :meetTarget:count :meetTarget:copper 0
op sign *tmp400 :meetTarget:lead 0
op add :meetTarget:count :meetTarget:count *tmp400
op sign *tmp400 :meetTarget:graphite 0
op add :meetTarget:count :meetTarget:count *tmp400
op sign *tmp400 :meetTarget:silicon 0
op add :meetTarget:count :meetTarget:count *tmp400
op sign *tmp400 :meetTarget:titanium 0
op add :meetTarget:count :meetTarget:count *tmp400
op sign *tmp400 :meetTarget:metaglass 0
op add :meetTarget:count :meetTarget:count *tmp400
op sign *tmp400 :meetTarget:thorium 0
op add :meetTarget:count :meetTarget:count *tmp400
write :meetTarget:count .display ".totalTargets"
write :meetTarget:block .display ".nextBlock"
write :meetTarget:copper .display ".targetCopper"
write :meetTarget:lead .display ".targetLead"
write :meetTarget:graphite .display ".targetGraphite"
write :meetTarget:silicon .display ".targetSilicon"
write :meetTarget:titanium .display ".targetTitanium"
write :meetTarget:metaglass .display ".targetMetaglass"
write :meetTarget:thorium .display ".targetThorium"
set .targetCopper :meetTarget:copper
op add *tmp401 :meetTarget:lead .leadSurplus
op add .targetLead *tmp401 1
set .targetGraphite :meetTarget:graphite
set .targetSilicon :meetTarget:silicon
set .targetTitanium :meetTarget:titanium
set .targetMetaglass :meetTarget:metaglass
set .targetThorium :meetTarget:thorium
op add *tmp403 :meetTarget:graphite .graphiteSurplus
write *tmp403 .controller ".pressTarget"
op add *tmp404 :meetTarget:silicon .siliconSurplus
write *tmp404 .controller ".smelterTarget"
op add *tmp405 :meetTarget:metaglass .metaglassSurplus
write *tmp405 .controller ".kilnTarget"
write *tmp401 .controller ".leadReserve"
op sign *tmp407 :meetTarget:silicon 0
op mul *tmp408 *tmp407 20
op add *tmp409 :meetTarget:silicon *tmp408
write *tmp409 .controller ".siliconReserve"
op sign *tmp410 :meetTarget:graphite 0
op mul *tmp411 *tmp410 20
op add *tmp412 :meetTarget:graphite *tmp411
write *tmp412 .controller ".graphiteReserve"
sensor *tmp414 .core @copper
jump 849 greaterThanEq *tmp414 .targetCopper
set *tmp413 false
jump 875 always 0 0
sensor *tmp417 .core @lead
jump 853 greaterThanEq *tmp417 .targetLead
set *tmp413 false
jump 875 always 0 0
sensor *tmp420 .core @graphite
jump 857 greaterThanEq *tmp420 .targetGraphite
set *tmp413 false
jump 875 always 0 0
sensor *tmp423 .core @silicon
jump 861 greaterThanEq *tmp423 .targetSilicon
set *tmp413 false
jump 875 always 0 0
sensor *tmp426 .core @titanium
jump 865 greaterThanEq *tmp426 .targetTitanium
set *tmp413 false
jump 875 always 0 0
sensor *tmp429 .core @metaglass
jump 869 greaterThanEq *tmp429 .targetMetaglass
set *tmp413 false
jump 875 always 0 0
sensor *tmp432 .core @thorium
jump 873 greaterThanEq *tmp432 .targetThorium
set *tmp413 false
jump 875 always 0 0
set *tmp413 true
jump 875 always 0 0
jump 879 notEqual *tmp413 false
set :supplyBase*retaddr 878
jump 505 always 0 0
jump 845 always 0 0
set @counter :meetTarget*retaddr
set :meetTarget:block :buildBlock:block
set :meetTarget:copper :buildBlock:copper
set :meetTarget:lead :buildBlock:lead
set :meetTarget:graphite :buildBlock:graphite
set :meetTarget:silicon :buildBlock:silicon
set :meetTarget:titanium :buildBlock:titanium
set :meetTarget:metaglass :buildBlock:metaglass
set :meetTarget:thorium :buildBlock:thorium
set :meetTarget*retaddr 890
jump 800 always 0 0
write :buildBlock:block .blockBuilder ":buildBlockAt:block"
write :buildBlock:x .blockBuilder ":buildBlockAt:x"
write :buildBlock:y .blockBuilder ":buildBlockAt:y"
write :buildBlock:rotation .blockBuilder ":buildBlockAt:rotation"
write :buildBlock:config .blockBuilder ":buildBlockAt:config"
write false .blockBuilder ":buildBlockAt*finished"
write 1 .blockBuilder "@counter"
wait 1e-15
read *tmp456 .blockBuilder ":buildBlockAt*finished"
jump 897 equal *tmp456 false
read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
set @counter :buildBlock*retaddr
op add *tmp458 :buildRemoteBlock:x :buildRemoteBlock:y
jump 923 lessThanEq *tmp458 0
set :unpackCfg:cfg :buildRemoteBlock:cfg
set :unpackCfg*retaddr 907
jump 481 always 0 0
set :buildBlock:block :unpackCfg:type
set :buildBlock:x :buildRemoteBlock:x
set :buildBlock:y :buildRemoteBlock:y
set :buildBlock:copper :unpackCfg:cu
set :buildBlock:lead :unpackCfg:pb
set :buildBlock:graphite :unpackCfg:gr
set :buildBlock:silicon :unpackCfg:si
set :buildBlock:titanium :unpackCfg:ti
set :buildBlock:metaglass :unpackCfg:mg
set :buildBlock:thorium :unpackCfg:th
set :buildBlock:rotation :unpackCfg:rotation
set :buildBlock:config null
set :buildBlock*retaddr 921
jump 880 always 0 0
set :buildRemoteBlock*retval :buildBlock*retval
set @counter :buildRemoteBlock*retaddr
set :buildRemoteBlock*retval false
set @counter :buildRemoteBlock*retaddr
set :unpackCfg:cfg :buildBlockFromCfg:cfg
set :unpackCfg*retaddr 928
jump 481 always 0 0
op add *tmp461 .coreX :unpackCfg:x
op add *tmp462 .coreY :unpackCfg:y
set :buildBlock:block :unpackCfg:type
set :buildBlock:x *tmp461
set :buildBlock:y *tmp462
set :buildBlock:copper :unpackCfg:cu
set :buildBlock:lead :unpackCfg:pb
set :buildBlock:graphite :unpackCfg:gr
set :buildBlock:silicon :unpackCfg:si
set :buildBlock:titanium :unpackCfg:ti
set :buildBlock:metaglass :unpackCfg:mg
set :buildBlock:thorium :unpackCfg:th
set :buildBlock:rotation :unpackCfg:rotation
set :buildBlock:config :buildBlockFromCfg:config
set :buildBlock*retaddr 944
jump 880 always 0 0
set :buildBlockFromCfg*retval :buildBlock*retval
set @counter :buildBlockFromCfg*retaddr
set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
set :buildBlockFromCfg:config null
set :buildBlockFromCfg*retaddr 950
jump 925 always 0 0
set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
set @counter :buildBlockFromCfg.1*retaddr
set :unpackCfg:cfg :meetTarget.1:cfg
set :unpackCfg*retaddr 955
jump 481 always 0 0
set :meetTarget:block :unpackCfg:type
set :meetTarget:copper :unpackCfg:cu
set :meetTarget:lead :unpackCfg:pb
set :meetTarget:graphite :unpackCfg:gr
set :meetTarget:silicon :unpackCfg:si
set :meetTarget:titanium :unpackCfg:ti
set :meetTarget:metaglass :unpackCfg:mg
set :meetTarget:thorium :unpackCfg:th
set :meetTarget*retaddr 965
jump 800 always 0 0
set @counter :meetTarget.1*retaddr
set :meetTarget:block 0
set :meetTarget:copper 0
set :meetTarget:lead 0
set :meetTarget:graphite 0
set :meetTarget:silicon 0
set :meetTarget:titanium 0
set :meetTarget:metaglass 0
set :meetTarget:thorium 0
set :meetTarget*retaddr 976
jump 800 always 0 0
write 0 .display ".totalTargets"
write null .display ".nextBlock"
write 0 .controller ".leadReserve"
write 0 .controller ".siliconReserve"
write 0 .controller ".graphiteReserve"
set @counter :buildUnits*retaddr
ubind :flagUnits:unit
set :flagUnits:firstUnit @unit
set :flagUnits:x @thisx
ucontrol flag :flagUnits:x 0 0 0 0
op add :flagUnits:x :flagUnits:x 4
ubind :flagUnits:unit
jump 985 notEqual @unit :flagUnits:firstUnit
set @counter :flagUnits*retaddr
ubind :lineUpUnits:unit
set :lineUpUnits:firstUnit @unit
sensor :lineUpUnits:x @unit @flag
ucontrol itemDrop @air 1000 0 0 0
ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0
ubind :lineUpUnits:unit
jump 992 notEqual @unit :lineUpUnits:firstUnit
set @counter :lineUpUnits*retaddr
print "Compiled by Mindcode - github.com/cardillan/mindcode"

