set .ERROR ""
set .display processor1
set .blockBuilder processor5
set .press null
set .generator null
set .battery null
set .smelter null
set .titaniumDrill null
set .unloader1 null
set .thoriumContainer null
set .thoriumGenerator null
set .leadSurplus 0
set .graphiteSurplus 20
set .siliconSurplus 20
set .metaglassSurplus 20
write 511 bank1 511
ubind @poly
set .builder @unit
ulocate building core false @copper .coreX .coreY 0 .core
jump 16 equal .core null
set :buildBlockFromCfg.1:cfg "#'+nA######%#"
set :buildBlockFromCfg.1*retaddr 23
jump 922 always 0 0
set .press :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "k*/(7######$$"
set :buildBlockFromCfg.1*retaddr 27
jump 922 always 0 0
set .battery :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "k+/(7######$%"
set :buildBlockFromCfg.1*retaddr 31
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "m*.<2######$&"
set :buildBlockFromCfg.1*retaddr 34
jump 922 always 0 0
set .generator :buildBlockFromCfg.1*retval
set .powerTarget 400
set :buildBlockFromCfg.1:cfg "%+-A<######%'"
set :buildBlockFromCfg.1*retaddr 39
jump 922 always 0 0
set .smelter :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "T+,%%######$("
set :buildBlockFromCfg.1*retaddr 43
jump 922 always 0 0
set :meetTarget.1:cfg "w**5#-#####%)"
set :meetTarget.1*retaddr 46
jump 928 always 0 0
write @titanium processor1 ".nextBlock"
write .coreX processor4 ":findDrillLocation:x"
write .coreY processor4 ":findDrillLocation:y"
write @unit processor4 ":findDrillLocation:unit"
write @titanium processor4 ":findDrillLocation:item"
write @ore-titanium processor4 ":findDrillLocation:ore"
write 2 processor4 ":findDrillLocation:size"
write 4 processor4 ":findDrillLocation:limit"
write false processor4 ":findDrillLocation*finished"
write 1 processor4 "@counter"
wait 1e-15
read *tmp146 processor4 ":findDrillLocation*finished"
jump 56 equal *tmp146 false
read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocation:dx"
read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
jump 65 notEqual :buildFirstTitaniumDrill:result false
set .ERROR "Cannot locate spot for titanium drill"
stop
write @pneumatic-drill processor1 ".nextBlock"
write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
write false processor5 ":buildFirstTitaniumDrillAt*finished"
write 2 processor5 "@counter"
wait 1e-15
read *tmp152 processor5 ":buildFirstTitaniumDrillAt*finished"
jump 70 equal *tmp152 false
read *tmp135 processor5 ":buildFirstTitaniumDrillAt*retval"
set .titaniumDrill *tmp135
write *tmp135 processor1 ".titaniumDrill"
set :buildBlockFromCfg.1:cfg "*,###A<###$*"
set :buildBlockFromCfg.1*retaddr 79
jump 922 always 0 0
set .unloader1 :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "T),%%######$+"
set :buildBlockFromCfg.1*retaddr 83
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "W*-'%######$,"
set :buildBlockFromCfg.1*retaddr 86
jump 922 always 0 0
set .graphiteSurplus 100
set :buildBlockFromCfg:cfg "®-.}U#U####$-"
set :buildBlockFromCfg:config processor2
set :buildBlockFromCfg*retaddr 91
jump 900 always 0 0
set .controller :buildBlockFromCfg*retval
write processor6 :buildBlockFromCfg*retval ".timer"
write processor1 :buildBlockFromCfg*retval ".display"
write .core :buildBlockFromCfg*retval ".core"
write bank1 :buildBlockFromCfg*retval ".bank"
write .battery :buildBlockFromCfg*retval ".battery"
write .generator :buildBlockFromCfg*retval ".generator"
write .smelter :buildBlockFromCfg*retval ".smelter"
write .press :buildBlockFromCfg*retval ".press"
write .unloader1 :buildBlockFromCfg*retval ".unloader1"
set :buildBlockFromCfg.1:cfg "g)'%)######$."
set :buildBlockFromCfg.1*retaddr 104
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "(*###A<###$/"
set :buildBlockFromCfg.1*retaddr 107
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".unloader2"
set :buildBlockFromCfg.1:cfg "'(_i#####&&0"
set :buildBlockFromCfg.1*retaddr 111
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".factory"
write :buildBlockFromCfg.1*retval processor1 ".airFactory"
write 1 .controller ".flareTarget"
write 1 processor1 ".flareTarget"
write 3 .controller ".monoTarget"
write 3 processor1 ".monoTarget"
write 85 .controller ".pressTarget"
write 150 .controller ".smelterTarget"
write 30 .controller ".kilnTarget"
set .leadSurplus 20
set .siliconSurplus 20
set :buildUnits*retaddr 124
jump 942 always 0 0
set :supplyBase*retaddr 126
jump 551 always 0 0
sensor *tmp161 .battery @totalPower
jump 130 lessThan *tmp161 300
read *tmp99 .controller ".monos"
jump 124 lessThan *tmp99 3
set .siliconSurplus 65
set :buildBlockFromCfg.1:cfg ",)###A<###$1"
set :buildBlockFromCfg.1*retaddr 134
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "T,*%%######$2"
set :buildBlockFromCfg.1*retaddr 137
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "',+_AA#####%3"
set :buildBlockFromCfg.1*retaddr 140
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".kiln"
set :buildBlockFromCfg.1:cfg "z%-AAA##A##%4"
set :buildBlockFromCfg.1*retaddr 144
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "W'*'%######$5"
set :buildBlockFromCfg.1*retaddr 147
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "W&*'%######$6"
set :buildBlockFromCfg.1*retaddr 150
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "o%+FK<A####%7"
set :buildBlockFromCfg.1*retaddr 153
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".generator2"
set :buildBlockFromCfg.1:cfg "$(.#U<###&8"
set :buildBlockFromCfg.1*retaddr 157
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".multipress"
set .graphiteSurplus 150
set :buildBlockFromCfg.1:cfg " '%-#2#####&:"
set :buildBlockFromCfg.1*retaddr 162
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".payloadRouter"
set :buildBlockFromCfg.1:cfg "*(###A<###$;"
set :buildBlockFromCfg.1*retaddr 166
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".unloader4"
set :buildBlockFromCfg.1:cfg "X*''%######$<"
set :buildBlockFromCfg.1*retaddr 170
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "*%ë#}####&="
set :buildBlockFromCfg.1*retaddr 173
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".reconstructor"
write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
set :buildBlockFromCfg.1:cfg "l/,#U#A7###&>"
set :buildBlockFromCfg.1*retaddr 178
jump 922 always 0 0
set :buildUnits*retaddr 180
jump 942 always 0 0
set .siliconSurplus 1000
set .metaglassSurplus 200
write 6 .controller ".polyTarget"
write 6 processor1 ".polyTarget"
set :buildBlockFromCfg.1:cfg "%.)A<######%C"
set :buildBlockFromCfg.1*retaddr 187
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".smelter2"
set :buildBlockFromCfg.1:cfg "T-*%%######$D"
set :buildBlockFromCfg.1*retaddr 191
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "T-)%%######$E"
set :buildBlockFromCfg.1*retaddr 194
jump 922 always 0 0
set :buildBlockFromCfg:cfg "--###A<###$F"
set :buildBlockFromCfg:config @sand
set :buildBlockFromCfg*retaddr 198
jump 900 always 0 0
set :buildUnits*retaddr 200
jump 942 always 0 0
read *tmp100 .controller ".polys"
jump 206 greaterThanEq *tmp100 3
set :supplyBase*retaddr 204
jump 551 always 0 0
read *tmp100 .controller ".polys"
jump 202 lessThan *tmp100 3
write 3 .controller ".flareTarget"
write 3 processor1 ".flareTarget"
read *tmp98 .controller ".flares"
jump 214 greaterThanEq *tmp98 2
set :supplyBase*retaddr 212
jump 551 always 0 0
read *tmp98 .controller ".flares"
jump 210 lessThan *tmp98 2
set .graphiteSurplus 100
write 5 .controller ".monoTarget"
write 5 processor1 ".monoTarget"
write @ore-titanium processor1 ".nextBlock"
wait 0.000000001
ubind @flare
read :blocksBuildTitaniumDrills:current processor4 ".locations"
write .coreX processor4 ":findDrillLocation:x"
write .coreY processor4 ":findDrillLocation:y"
write @unit processor4 ":findDrillLocation:unit"
write @titanium processor4 ":findDrillLocation:item"
write @ore-titanium processor4 ":findDrillLocation:ore"
write 4 processor4 ":findDrillLocation:size"
write 1000000000 processor4 ":findDrillLocation:limit"
write false processor4 ":findDrillLocation*finished"
write 1 processor4 "@counter"
ubind .builder
write .controller processor5 ":buildTitaniumDrills:aController"
write :blocksBuildTitaniumDrills:current processor5 ":buildTitaniumDrills:current"
write false processor5 ":buildTitaniumDrills*finished"
write 3 processor5 "@counter"
wait 1e-15
read *tmp196 processor5 ":buildTitaniumDrills*finished"
jump 235 equal *tmp196 false
write false processor4 ":stopLocation*finished"
write 3 processor4 "@counter"
write null processor1 ".nextBlock"
write .coreX processor4 ":layoutThoriumDrill:x"
write .coreY processor4 ":layoutThoriumDrill:y"
write @unit processor4 ":layoutThoriumDrill:unit"
write 7 processor4 ":layoutThoriumDrill:limit"
write false processor4 ":layoutThoriumDrill*finished"
write 2 processor4 "@counter"
wait 1e-15
read *tmp201 processor4 ":layoutThoriumDrill*finished"
jump 247 equal *tmp201 false
set :meetTarget.1:cfg "x**F#AA7###&@"
set :meetTarget.1*retaddr 253
jump 928 always 0 0
wait 1e-15
read *tmp203 processor4 ":layoutThoriumDrill*finished"
jump 253 equal *tmp203 false
read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
jump 260 notEqual :buildThoriumDrill:result false
set .ERROR "Cannot locate spot for thorium drill"
stop
write @laser-drill processor5 ":buildBlockAt:block"
read *tmp56 processor4 ".drillX"
write *tmp56 processor5 ":buildBlockAt:x"
read *tmp57 processor4 ".drillY"
write *tmp57 processor5 ":buildBlockAt:y"
write null processor5 ":buildBlockAt:rotation"
write 0 processor5 ":buildBlockAt:config"
write -1 processor5 ":buildBlockAt:index"
write false processor5 ":buildBlockAt*finished"
write 1 processor5 "@counter"
wait 1e-15
read *tmp213 processor5 ":buildBlockAt*finished"
jump 270 equal *tmp213 false
read .thoriumDrill processor5 ":buildBlockAt*retval"
set :buildRemoteBlock:cfg "z%-AAA##A##%4"
read :buildRemoteBlock:x processor4 ".water1X"
read :buildRemoteBlock:y processor4 ".water1Y"
set :buildRemoteBlock*retaddr 279
jump 876 always 0 0
read :buildRemoteBlock:x processor4 ".water2X"
read :buildRemoteBlock:y processor4 ".water2Y"
set :buildRemoteBlock*retaddr 283
jump 876 always 0 0
set :buildRemoteBlock:cfg "o%+FK<A####%7"
read :buildRemoteBlock:x processor4 ".generatorX"
read :buildRemoteBlock:y processor4 ".generatorY"
set :buildRemoteBlock*retaddr 288
jump 876 always 0 0
set .thoriumGenerator :buildRemoteBlock*retval
set :buildRemoteBlock:cfg "g)'%)######$."
read :buildRemoteBlock:x processor4 ".nodeX"
read :buildRemoteBlock:y processor4 ".nodeY"
set :buildRemoteBlock*retaddr 294
jump 876 always 0 0
set :buildRemoteBlock:cfg "r**#-#+####$A"
read :buildRemoteBlock:x processor4 ".panelX"
read :buildRemoteBlock:y processor4 ".panelY"
set :buildRemoteBlock*retaddr 299
jump 876 always 0 0
set :buildRemoteBlock:cfg "k*/(7######$$"
read :buildRemoteBlock:x processor4 ".batteryX"
read :buildRemoteBlock:y processor4 ".batteryY"
set :buildRemoteBlock*retaddr 304
jump 876 always 0 0
set :buildRemoteBlock:cfg "**#######%B"
read :buildRemoteBlock:x processor4 ".containerX"
read :buildRemoteBlock:y processor4 ".containerY"
set :buildRemoteBlock*retaddr 309
jump 876 always 0 0
set .thoriumContainer :buildRemoteBlock*retval
jump 312 notEqual :buildRemoteBlock*retval null
set .thoriumContainer .thoriumDrill
write .thoriumDrill processor1 ".thoriumDrill"
write .thoriumContainer processor1 ".thoriumContainer"
write .thoriumContainer processor3 ":setThoriumContainer:container"
write false processor3 ":setThoriumContainer*finished"
write 3 processor3 "@counter"
wait 1e-15
read *tmp225 processor3 ":setThoriumContainer*finished"
jump 317 equal *tmp225 false
write null processor1 ".nextBlock"
write 1 .controller ".megaTarget"
write 1 processor1 ".megaTarget"
read *tmp100 .controller ".polys"
jump 329 greaterThanEq *tmp100 5
set :supplyBase*retaddr 327
jump 551 always 0 0
read *tmp100 .controller ".polys"
jump 325 lessThan *tmp100 5
set :buildBlockFromCfg:cfg "+(###A<###$G"
set :buildBlockFromCfg:config @silicon
set :buildBlockFromCfg*retaddr 333
jump 900 always 0 0
write :buildBlockFromCfg*retval .controller ".unloader6"
set :buildBlockFromCfg.1:cfg "X+''%######$H"
set :buildBlockFromCfg.1*retaddr 337
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg ".&#ʭ#ǥƁ#ʭ#(I"
set :buildBlockFromCfg.1*retaddr 340
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
set .metaglassSurplus 50
set :buildUnits*retaddr 345
jump 942 always 0 0
read *tmp101 .controller ".megas"
jump 351 greaterThanEq *tmp101 1
set :supplyBase*retaddr 349
jump 551 always 0 0
read *tmp101 .controller ".megas"
jump 347 lessThan *tmp101 1
control enabled processor7 false 0 0 0
control enabled processor8 false 0 0 0
control enabled processor3 false 0 0 0
control enabled processor4 false 0 0 0
control enabled processor5 false 0 0 0
set :flagUnits:unit @mega
set :flagUnits*retaddr 359
jump 958 always 0 0
set :flagUnits:unit @poly
set :flagUnits*retaddr 362
jump 958 always 0 0
set :flagUnits:unit @mono
set :flagUnits*retaddr 365
jump 958 always 0 0
set :flagUnits:unit @flare
set :flagUnits*retaddr 368
jump 958 always 0 0
op sub :lineUpUnits:y @thisy 6
set :lineUpUnits:unit @mega
set :lineUpUnits*retaddr 372
jump 967 always 0 0
op sub :lineUpUnits:y @thisy 10
set :lineUpUnits:unit @poly
set :lineUpUnits*retaddr 376
jump 967 always 0 0
op sub :lineUpUnits:y @thisy 14
set :lineUpUnits:unit @mono
set :lineUpUnits*retaddr 380
jump 967 always 0 0
op sub :lineUpUnits:y @thisy 18
set :lineUpUnits:unit @flare
set :lineUpUnits*retaddr 384
jump 967 always 0 0
jump 368 always 0 0
op min :mineOre:amount :mineOre:amount 30
write :mineOre:amount .display ".transportTarget"
write :mineOre:ore .display ".transportItem"
ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp263 0
jump 392 notEqual *tmp263 false
set .ERROR "Cannot locate ore"
stop
write "Moving..." .display ".status3"
sensor *tmp244 @unit @firstItem
jump 396 equal *tmp244 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach :locateOre:x :locateOre:y 5.5 0 0
ucontrol within :locateOre:x :locateOre:y 6 *tmp247 0
jump 393 equal *tmp247 false
sensor *tmp268 @unit @firstItem
jump 406 equal *tmp268 :mineOre:ore
sensor *tmp249 @unit @firstItem
jump 406 equal *tmp249 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp249 @unit @firstItem
jump 403 notEqual *tmp249 null
write "Mining..." .display ".status3"
op add :mineOre:stop @second 10
sensor :mineOre:item @unit @firstItem
op notEqual *tmp273 :mineOre:item null
op notEqual *tmp274 :mineOre:item :mineOre:ore
op land *tmp275 *tmp273 *tmp274
jump 417 notEqual *tmp275 false
ucontrol mine :locateOre:x :locateOre:y 0 0 0
jump 417 greaterThan @second :mineOre:stop
sensor *tmp279 @unit @totalItems
jump 408 lessThan *tmp279 :mineOre:amount
ucontrol unbind 0 0 0 0 0
write "Depositing..." .display ".status3"
sensor *tmp253 @unit @firstItem
jump 436 notEqual *tmp253 :mineOre:ore
sensor *tmp251 :mineOre:block @x
sensor *tmp252 :mineOre:block @y
write "Moving..." .display ".status3"
ucontrol within *tmp251 *tmp252 6 *tmp239 0
jump 429 notEqual *tmp239 false
ucontrol approach *tmp251 *tmp252 5.5 0 0
ucontrol within *tmp251 *tmp252 6 *tmp239 0
jump 426 equal *tmp239 false
sensor :depositItems:cap :mineOre:block @itemCapacity
ucontrol itemDrop :mineOre:block 30 0 0 0
sensor *tmp257 @unit @firstItem
op mul *tmp258 *tmp257 :depositItems:cap
sensor *tmp259 :mineOre:block :mineOre:ore
jump 430 greaterThan *tmp258 *tmp259
jump 441 always 0 0
sensor *tmp261 @unit @firstItem
jump 441 equal *tmp261 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp261 @unit @firstItem
jump 438 notEqual *tmp261 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set @counter :mineOre*retaddr
write "Mining " .display ".status2"
write :mineOre.1:ore .display ".item2"
write "core" .display ".block2"
set :mineOre:ore :mineOre.1:ore
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 452
jump 385 always 0 0
set @counter :mineOre.1*retaddr
sensor *tmp282 :fetchBlock:block @itemCapacity
op min :transportStatus:target *tmp282 30
write :transportStatus:target .display ".transportTarget"
write :fetchBlock:item .display ".transportItem"
write "Fetching " .display ".status2"
write :fetchBlock:item .display ".item2"
write :fetchBlock:block .display ".block2"
sensor *tmp284 :fetchBlock:block @x
sensor *tmp285 :fetchBlock:block @y
write "Moving..." .display ".status3"
sensor *tmp244 @unit @firstItem
jump 466 equal *tmp244 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach *tmp284 *tmp285 5.5 0 0
ucontrol within *tmp284 *tmp285 6 *tmp247 0
jump 463 equal *tmp247 false
sensor *tmp249 @unit @firstItem
jump 474 equal *tmp249 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp249 @unit @firstItem
jump 471 notEqual *tmp249 null
ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0
sensor :fetchBlock:unitItem @unit @firstItem
op notEqual *tmp287 :fetchBlock:unitItem null
op notEqual *tmp288 :fetchBlock:unitItem :fetchBlock:item
op land *tmp289 *tmp287 *tmp288
jump 481 equal *tmp289 false
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp291 @unit :fetchBlock:item
op lessThan *tmp292 *tmp291 30
sensor *tmp293 :fetchBlock:block :fetchBlock:item
op land *tmp294 *tmp292 *tmp293
jump 474 notEqual *tmp294 false
write "Depositing..." .display ".status3"
sensor *tmp253 @unit @firstItem
jump 504 notEqual *tmp253 :fetchBlock:item
sensor *tmp251 .core @x
sensor *tmp252 .core @y
write "Moving..." .display ".status3"
ucontrol within *tmp251 *tmp252 6 *tmp239 0
jump 497 notEqual *tmp239 false
ucontrol approach *tmp251 *tmp252 5.5 0 0
ucontrol within *tmp251 *tmp252 6 *tmp239 0
jump 494 equal *tmp239 false
sensor :depositItems:cap .core @itemCapacity
ucontrol itemDrop .core 30 0 0 0
sensor *tmp257 @unit @firstItem
op mul *tmp258 *tmp257 :depositItems:cap
sensor *tmp259 .core :fetchBlock:item
jump 498 greaterThan *tmp258 *tmp259
jump 509 always 0 0
sensor *tmp261 @unit @firstItem
jump 509 equal *tmp261 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp261 @unit @firstItem
jump 506 notEqual *tmp261 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set @counter :fetchBlock*retaddr
write "Supplying " .display ".status2"
write :supplyBlock:ore .display ".item2"
write :supplyBlock:block .display ".block2"
sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
sensor *tmp296 :supplyBlock:block :supplyBlock:ore
op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp296
jump 524 lessThanEq :supplyBlock:missing 0
set :mineOre:ore :supplyBlock:ore
set :mineOre:amount :supplyBlock:blockCapacity
set :mineOre:block :supplyBlock:block
set :mineOre*retaddr 524
jump 385 always 0 0
set @counter :supplyBlock*retaddr
read *tmp312 :unpackCfg:cfg 0
op sub *tmp313 *tmp312 35
lookup block :unpackCfg:type *tmp313
read *tmp316 :unpackCfg:cfg 1
op sub :unpackCfg:x *tmp316 42
read *tmp320 :unpackCfg:cfg 2
op sub :unpackCfg:y *tmp320 42
read *tmp324 :unpackCfg:cfg 3
op sub :unpackCfg:cu *tmp324 35
read *tmp327 :unpackCfg:cfg 4
op sub :unpackCfg:pb *tmp327 35
read *tmp330 :unpackCfg:cfg 5
op sub :unpackCfg:gr *tmp330 35
read *tmp333 :unpackCfg:cfg 6
op sub :unpackCfg:si *tmp333 35
read *tmp336 :unpackCfg:cfg 7
op sub :unpackCfg:ti *tmp336 35
read *tmp339 :unpackCfg:cfg 8
op sub :unpackCfg:mg *tmp339 35
read *tmp342 :unpackCfg:cfg 9
op sub :unpackCfg:th *tmp342 35
read *tmp345 :unpackCfg:cfg 10
op sub :unpackCfg:rotation *tmp345 35
read *tmp351 :unpackCfg:cfg 12
op sub :unpackCfg:ind *tmp351 35
set @counter :unpackCfg*retaddr
sensor *tmp353 .core @silicon
op sub *tmp354 .targetSilicon *tmp353
op max *tmp355 0 *tmp354
write *tmp355 processor8 ".monoSandTarget"
jump 635 equal .thoriumContainer false
write "Phase 2: servicing thorium drill" .display ".status1"
sensor *tmp357 .core @coal
jump 574 greaterThanEq *tmp357 50
set :supplyBlock:block .thoriumGenerator
set :supplyBlock:ore @coal
write "Supplying " .display ".status2"
write @coal .display ".item2"
write .thoriumGenerator .display ".block2"
sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
sensor *tmp296 .thoriumGenerator @coal
op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp296
jump 630 lessThanEq :supplyBlock:missing 0
set :mineOre:ore @coal
set :mineOre:amount :supplyBlock:blockCapacity
set :mineOre:block .thoriumGenerator
set :mineOre*retaddr 573
jump 385 always 0 0
jump 630 always 0 0
sensor *tmp300 .thoriumGenerator @itemCapacity
op min :transportStatus:target *tmp300 30
write :transportStatus:target .display ".transportTarget"
write @coal .display ".transportItem"
write "Transferring " .display ".status2"
write @coal .display ".item2"
write .thoriumGenerator .display ".block2"
write "Moving..." .display ".status3"
sensor *tmp244 @unit @firstItem
jump 585 equal *tmp244 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach .coreX .coreY 5.5 0 0
ucontrol within .coreX .coreY 6 *tmp247 0
jump 582 equal *tmp247 false
sensor *tmp249 @unit @firstItem
jump 593 equal *tmp249 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp249 @unit @firstItem
jump 590 notEqual *tmp249 null
ucontrol itemTake .core @coal 30 0 0
sensor :supplyBlockFromCore:unitItem @unit @firstItem
op notEqual *tmp303 :supplyBlockFromCore:unitItem null
op notEqual *tmp304 :supplyBlockFromCore:unitItem @coal
op land *tmp305 *tmp303 *tmp304
jump 600 equal *tmp305 false
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp307 @unit @coal
op lessThan *tmp308 *tmp307 30
sensor *tmp309 .core @coal
op land *tmp310 *tmp308 *tmp309
jump 593 notEqual *tmp310 false
write "Depositing..." .display ".status3"
sensor *tmp253 @unit @firstItem
jump 623 notEqual *tmp253 @coal
sensor *tmp251 .thoriumGenerator @x
sensor *tmp252 .thoriumGenerator @y
write "Moving..." .display ".status3"
ucontrol within *tmp251 *tmp252 6 *tmp239 0
jump 616 notEqual *tmp239 false
ucontrol approach *tmp251 *tmp252 5.5 0 0
ucontrol within *tmp251 *tmp252 6 *tmp239 0
jump 613 equal *tmp239 false
sensor :depositItems:cap .thoriumGenerator @itemCapacity
ucontrol itemDrop .thoriumGenerator 30 0 0 0
sensor *tmp257 @unit @firstItem
op mul *tmp258 *tmp257 :depositItems:cap
sensor *tmp259 .thoriumGenerator @coal
jump 617 greaterThan *tmp258 *tmp259
jump 628 always 0 0
sensor *tmp261 @unit @firstItem
jump 628 equal *tmp261 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp261 @unit @firstItem
jump 625 notEqual *tmp261 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set :fetchBlock:block .thoriumContainer
set :fetchBlock:item @thorium
set :fetchBlock*retaddr 634
jump 453 always 0 0
set @counter :supplyBase*retaddr
read *tmp99 .controller ".monos"
jump 648 lessThanEq *tmp99 3
write "Phase 1: supplying base" .display ".status1"
set :mineOre.1:ore @coal
write "Mining " .display ".status2"
write @coal .display ".item2"
write "core" .display ".block2"
set :mineOre:ore @coal
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 647
jump 385 always 0 0
set @counter :supplyBase*retaddr
set :supplyBase0:supplied false
jump 689 notEqual .unloader1 null
sensor *tmp364 .core @graphite
jump 660 greaterThanEq *tmp364 .targetGraphite
sensor *tmp367 .press @coal
jump 660 greaterThanEq *tmp367 5
write "Goal 1: graphite requirement" .display ".status1"
set :supplyBlock:block .press
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 659
jump 512 always 0 0
set :supplyBase0:supplied true
sensor *tmp370 .core @silicon
jump 679 greaterThanEq *tmp370 .targetSilicon
sensor *tmp373 .smelter @coal
jump 671 greaterThanEq *tmp373 5
write "Goal 2: coal for silicon requirement" .display ".status1"
set :supplyBlock:block .smelter
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 669
jump 512 always 0 0
set :supplyBase0:supplied true
jump 679 always 0 0
sensor *tmp376 .smelter @sand
jump 679 greaterThanEq *tmp376 5
write "Goal 3: sand for silicon requirement" .display ".status1"
set :supplyBlock:block .smelter
set :supplyBlock:ore @sand
set :supplyBlock*retaddr 678
jump 512 always 0 0
set :supplyBase0:supplied true
sensor *tmp379 .battery @totalPower
jump 689 greaterThanEq *tmp379 .powerTarget
sensor *tmp382 .generator @coal
jump 689 greaterThanEq *tmp382 2
write "Goal 4: supplying generator" .display ".status1"
set :supplyBlock:block .generator
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 688
jump 512 always 0 0
set :supplyBase0:supplied true
set *tmp387 100
sensor *tmp385 .core @titanium
jump 695 greaterThanEq *tmp385 .targetTitanium
sensor *tmp388 .core @titanium
op sub *tmp389 .targetTitanium *tmp388
op min *tmp387 7 *tmp389
sensor *tmp391 .titaniumDrill @titanium
jump 765 greaterThanEq *tmp391 *tmp387
jump 770 notEqual :supplyBase0:supplied false
sensor *tmp396 .battery @totalPower
op mul *tmp397 .unloader1 .powerTarget
jump 712 greaterThanEq *tmp396 *tmp397
write "Goal 5: supplying generator" .display ".status1"
set :mineOre.1:ore @coal
write "Mining " .display ".status2"
write @coal .display ".item2"
write "core" .display ".block2"
set :mineOre:ore @coal
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 711
jump 385 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp400 .core @silicon
jump 729 greaterThanEq *tmp400 .targetSilicon
write "Goal 6: silicon requirement" .display ".status1"
sensor :supplyBase0:coal .core @coal
sensor :supplyBase0:sand .core @sand
set :mineOre.1:ore @sand
jump 720 greaterThanEq :supplyBase0:coal :supplyBase0:sand
set :mineOre.1:ore @coal
write "Mining " .display ".status2"
write :mineOre.1:ore .display ".item2"
write "core" .display ".block2"
set :mineOre:ore :mineOre.1:ore
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 728
jump 385 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp407 .core @copper
jump 742 greaterThanEq *tmp407 .targetCopper
write "Goal 7: copper requirement" .display ".status1"
set :mineOre.1:ore @copper
write "Mining " .display ".status2"
write @copper .display ".item2"
write "core" .display ".block2"
set :mineOre:ore @copper
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 741
jump 385 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp410 .core @lead
jump 749 greaterThanEq *tmp410 .targetLead
write "Goal 8: lead requirement" .display ".status1"
set :mineOre.1:ore @lead
set :mineOre.1*retaddr 748
jump 444 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp413 .core @metaglass
jump 756 greaterThanEq *tmp413 .targetMetaglass
write "Goal 9: metaglass requirement" .display ".status1"
set :mineOre.1:ore @sand
set :mineOre.1*retaddr 755
jump 444 always 0 0
set @counter :supplyBase*retaddr
write "Goal 10: supplying base" .display ".status1"
sensor :supplyBase0:coal.1 .core @coal
sensor :supplyBase0:sand.1 .core @sand
set :mineOre.1:ore @sand
jump 762 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
set :mineOre.1:ore @coal
set :mineOre.1*retaddr 764
jump 444 always 0 0
set @counter :supplyBase*retaddr
write "Goal 11: Fetching titanium" .display ".status1"
set :fetchBlock:block .titaniumDrill
set :fetchBlock:item @titanium
set :fetchBlock*retaddr 770
jump 453 always 0 0
set @counter :supplyBase*retaddr
op sign :meetTarget:count :meetTarget:copper 0
op sign *tmp421 :meetTarget:lead 0
op add :meetTarget:count :meetTarget:count *tmp421
op sign *tmp421 :meetTarget:graphite 0
op add :meetTarget:count :meetTarget:count *tmp421
op sign *tmp421 :meetTarget:silicon 0
op add :meetTarget:count :meetTarget:count *tmp421
op sign *tmp421 :meetTarget:titanium 0
op add :meetTarget:count :meetTarget:count *tmp421
op sign *tmp421 :meetTarget:metaglass 0
op add :meetTarget:count :meetTarget:count *tmp421
op sign *tmp421 :meetTarget:thorium 0
op add :meetTarget:count :meetTarget:count *tmp421
write :meetTarget:count .display ".totalTargets"
write :meetTarget:block .display ".nextBlock"
write :meetTarget:copper .display ".targetCopper"
write :meetTarget:lead .display ".targetLead"
write :meetTarget:graphite .display ".targetGraphite"
write :meetTarget:silicon .display ".targetSilicon"
write :meetTarget:titanium .display ".targetTitanium"
write :meetTarget:metaglass .display ".targetMetaglass"
write :meetTarget:thorium .display ".targetThorium"
set .targetCopper :meetTarget:copper
op add *tmp422 :meetTarget:lead .leadSurplus
op add .targetLead *tmp422 1
set .targetGraphite :meetTarget:graphite
set .targetSilicon :meetTarget:silicon
set .targetTitanium :meetTarget:titanium
set .targetMetaglass :meetTarget:metaglass
set .targetThorium :meetTarget:thorium
op add *tmp424 :meetTarget:graphite .graphiteSurplus
write *tmp424 .controller ".pressTarget"
op add *tmp425 :meetTarget:silicon .siliconSurplus
write *tmp425 .controller ".smelterTarget"
op add *tmp426 :meetTarget:metaglass .metaglassSurplus
write *tmp426 .controller ".kilnTarget"
write *tmp422 .controller ".leadReserve"
op sign *tmp428 :meetTarget:silicon 0
op mul *tmp429 *tmp428 20
op add *tmp430 :meetTarget:silicon *tmp429
write *tmp430 .controller ".siliconReserve"
op sign *tmp431 :meetTarget:graphite 0
op mul *tmp432 *tmp431 20
op add *tmp433 :meetTarget:graphite *tmp432
write *tmp433 .controller ".graphiteReserve"
write .targetLead processor8 ".monoLeadTarget"
write :meetTarget:copper processor8 ".monoCopperTarget"
sensor *tmp435 .core @copper
jump 822 greaterThanEq *tmp435 .targetCopper
set *tmp434 false
jump 848 always 0 0
sensor *tmp438 .core @lead
jump 826 greaterThanEq *tmp438 .targetLead
set *tmp434 false
jump 848 always 0 0
sensor *tmp441 .core @graphite
jump 830 greaterThanEq *tmp441 .targetGraphite
set *tmp434 false
jump 848 always 0 0
sensor *tmp444 .core @silicon
jump 834 greaterThanEq *tmp444 .targetSilicon
set *tmp434 false
jump 848 always 0 0
sensor *tmp447 .core @titanium
jump 838 greaterThanEq *tmp447 .targetTitanium
set *tmp434 false
jump 848 always 0 0
sensor *tmp450 .core @metaglass
jump 842 greaterThanEq *tmp450 .targetMetaglass
set *tmp434 false
jump 848 always 0 0
sensor *tmp453 .core @thorium
jump 846 greaterThanEq *tmp453 .targetThorium
set *tmp434 false
jump 848 always 0 0
set *tmp434 true
jump 848 always 0 0
jump 852 notEqual *tmp434 false
set :supplyBase*retaddr 851
jump 551 always 0 0
jump 818 always 0 0
set @counter :meetTarget*retaddr
set :meetTarget:block :buildBlock:block
set :meetTarget:copper :buildBlock:copper
set :meetTarget:lead :buildBlock:lead
set :meetTarget:graphite :buildBlock:graphite
set :meetTarget:silicon :buildBlock:silicon
set :meetTarget:titanium :buildBlock:titanium
set :meetTarget:metaglass :buildBlock:metaglass
set :meetTarget:thorium :buildBlock:thorium
set :meetTarget*retaddr 863
jump 771 always 0 0
write :buildBlock:block .blockBuilder ":buildBlockAt:block"
write :buildBlock:x .blockBuilder ":buildBlockAt:x"
write :buildBlock:y .blockBuilder ":buildBlockAt:y"
write :buildBlock:rotation .blockBuilder ":buildBlockAt:rotation"
write :buildBlock:config .blockBuilder ":buildBlockAt:config"
write :buildBlock:index .blockBuilder ":buildBlockAt:index"
write false .blockBuilder ":buildBlockAt*finished"
write 1 .blockBuilder "@counter"
wait 1e-15
read *tmp463 .blockBuilder ":buildBlockAt*finished"
jump 871 equal *tmp463 false
read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
set @counter :buildBlock*retaddr
op add *tmp465 :buildRemoteBlock:x :buildRemoteBlock:y
jump 898 lessThanEq *tmp465 0
set :unpackCfg:cfg :buildRemoteBlock:cfg
set :unpackCfg*retaddr 881
jump 525 always 0 0
set :buildBlock:block :unpackCfg:type
set :buildBlock:x :buildRemoteBlock:x
set :buildBlock:y :buildRemoteBlock:y
set :buildBlock:copper :unpackCfg:cu
set :buildBlock:lead :unpackCfg:pb
set :buildBlock:graphite :unpackCfg:gr
set :buildBlock:silicon :unpackCfg:si
set :buildBlock:titanium :unpackCfg:ti
set :buildBlock:metaglass :unpackCfg:mg
set :buildBlock:thorium :unpackCfg:th
set :buildBlock:rotation :unpackCfg:rotation
set :buildBlock:config null
set :buildBlock:index :unpackCfg:ind
set :buildBlock*retaddr 896
jump 853 always 0 0
set :buildRemoteBlock*retval :buildBlock*retval
set @counter :buildRemoteBlock*retaddr
set :buildRemoteBlock*retval false
set @counter :buildRemoteBlock*retaddr
set :unpackCfg:cfg :buildBlockFromCfg:cfg
set :unpackCfg*retaddr 903
jump 525 always 0 0
op add *tmp468 .coreX :unpackCfg:x
op add *tmp469 .coreY :unpackCfg:y
set :buildBlock:block :unpackCfg:type
set :buildBlock:x *tmp468
set :buildBlock:y *tmp469
set :buildBlock:copper :unpackCfg:cu
set :buildBlock:lead :unpackCfg:pb
set :buildBlock:graphite :unpackCfg:gr
set :buildBlock:silicon :unpackCfg:si
set :buildBlock:titanium :unpackCfg:ti
set :buildBlock:metaglass :unpackCfg:mg
set :buildBlock:thorium :unpackCfg:th
set :buildBlock:rotation :unpackCfg:rotation
set :buildBlock:config :buildBlockFromCfg:config
set :buildBlock:index :unpackCfg:ind
set :buildBlock*retaddr 920
jump 853 always 0 0
set :buildBlockFromCfg*retval :buildBlock*retval
set @counter :buildBlockFromCfg*retaddr
set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
set :buildBlockFromCfg:config null
set :buildBlockFromCfg*retaddr 926
jump 900 always 0 0
set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
set @counter :buildBlockFromCfg.1*retaddr
set :unpackCfg:cfg :meetTarget.1:cfg
set :unpackCfg*retaddr 931
jump 525 always 0 0
set :meetTarget:block :unpackCfg:type
set :meetTarget:copper :unpackCfg:cu
set :meetTarget:lead :unpackCfg:pb
set :meetTarget:graphite :unpackCfg:gr
set :meetTarget:silicon :unpackCfg:si
set :meetTarget:titanium :unpackCfg:ti
set :meetTarget:metaglass :unpackCfg:mg
set :meetTarget:thorium :unpackCfg:th
set :meetTarget*retaddr 941
jump 771 always 0 0
set @counter :meetTarget.1*retaddr
set :meetTarget:block 0
set :meetTarget:copper 0
set :meetTarget:lead 0
set :meetTarget:graphite 0
set :meetTarget:silicon 0
set :meetTarget:titanium 0
set :meetTarget:metaglass 0
set :meetTarget:thorium 0
set :meetTarget*retaddr 952
jump 771 always 0 0
write 0 .display ".totalTargets"
write null .display ".nextBlock"
write 0 .controller ".leadReserve"
write 0 .controller ".siliconReserve"
write 0 .controller ".graphiteReserve"
set @counter :buildUnits*retaddr
ubind :flagUnits:unit
set :flagUnits:firstUnit @unit
jump 958 equal :flagUnits:firstUnit null
set :flagUnits:x @thisx
ucontrol flag :flagUnits:x 0 0 0 0
op add :flagUnits:x :flagUnits:x 4
ubind :flagUnits:unit
jump 962 notEqual @unit :flagUnits:firstUnit
set @counter :flagUnits*retaddr
ubind :lineUpUnits:unit
set :lineUpUnits:firstUnit @unit
sensor :lineUpUnits:x @unit @flag
ucontrol itemDrop @air 1000 0 0 0
ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0
sensor *tmp475 @unit @mining
jump 975 equal *tmp475 false
ucontrol stop 0 0 0 0 0
ubind :lineUpUnits:unit
jump 969 notEqual @unit :lineUpUnits:firstUnit
set @counter :lineUpUnits*retaddr
print "Compiled by Mindcode - github.com/cardillan/mindcode"

