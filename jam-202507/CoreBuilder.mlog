set .ERROR ""
set .display processor1
set .blockBuilder processor5
read *tmp114 processor8 "*signature"
jump 3 notEqual *tmp114 "0:v1"
set .press null
set .generator null
set .battery null
set .smelter null
set .titaniumDrill null
set .unloader1 null
set .thoriumBattery null
set .thoriumContainer null
set .thoriumGenerator null
set .leadSurplus 0
set .graphiteSurplus 20
set .siliconSurplus 20
set .metaglassSurplus 20
write 511 bank1 511
ubind @poly
set .builder @unit
ulocate building core false @copper .coreX .coreY 0 .core
jump 19 equal .core null
set :buildBlockFromCfg.1:cfg "2-522"
set :buildBlockFromCfg.1*retaddr 26
jump 654 always 0 0
set .press :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "z2<23"
set :buildBlockFromCfg.1*retaddr 30
jump 654 always 0 0
set .battery :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "z4<24"
set :buildBlockFromCfg.1*retaddr 34
jump 654 always 0 0
set :buildBlockFromCfg.1:cfg "|2:25"
set :buildBlockFromCfg.1*retaddr 37
jump 654 always 0 0
set .generator :buildBlockFromCfg.1*retval
set .powerTarget 400
set :buildBlockFromCfg.1:cfg "45926"
set :buildBlockFromCfg.1*retaddr 42
jump 654 always 0 0
set .smelter :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "c4627"
set :buildBlockFromCfg.1*retaddr 46
jump 654 always 0 0
set :meetTarget.1:cfg "2228"
set :meetTarget.1*retaddr 49
jump 660 always 0 0
write @titanium processor1 ".nextBlock"
write .coreX processor4 ":findDrillLocation:x"
write .coreY processor4 ":findDrillLocation:y"
write @unit processor4 ":findDrillLocation:unit"
write @titanium processor4 ":findDrillLocation:item"
write @ore-titanium processor4 ":findDrillLocation:ore"
write 2 processor4 ":findDrillLocation:size"
write 4 processor4 ":findDrillLocation:limit"
write false processor4 ":findDrillLocation*finished"
write 1 processor4 "@counter"
wait 1e-15
read *tmp153 processor4 ":findDrillLocation*finished"
jump 59 equal *tmp153 false
read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocation:dx"
read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
jump 68 notEqual :buildFirstTitaniumDrill:result false
set .ERROR "Cannot locate spot for titanium drill"
stop
write @pneumatic-drill processor1 ".nextBlock"
write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
write false processor5 ":buildFirstTitaniumDrillAt*finished"
write 2 processor5 "@counter"
wait 1e-15
read *tmp159 processor5 ":buildFirstTitaniumDrillAt*finished"
jump 73 equal *tmp159 false
read *tmp142 processor5 ":buildFirstTitaniumDrillAt*retval"
set .titaniumDrill *tmp142
write *tmp142 processor1 ".titaniumDrill"
set :buildBlockFromCfg.1:cfg "2629"
set :buildBlockFromCfg.1*retaddr 82
jump 654 always 0 0
set .unloader1 :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "c062:"
set :buildBlockFromCfg.1*retaddr 86
jump 654 always 0 0
set :buildBlockFromCfg.1:cfg "f282;"
set :buildBlockFromCfg.1*retaddr 89
jump 654 always 0 0
set .graphiteSurplus 100
set :buildBlockFromCfg:cfg "½..2<"
set :buildBlockFromCfg:config processor2
set :buildBlockFromCfg*retaddr 94
jump 614 always 0 0
set .controller :buildBlockFromCfg*retval
write processor6 :buildBlockFromCfg*retval ".timer"
write processor1 :buildBlockFromCfg*retval ".display"
write .core :buildBlockFromCfg*retval ".core"
write bank1 :buildBlockFromCfg*retval ".bank"
write .battery :buildBlockFromCfg*retval ".battery"
write .generator :buildBlockFromCfg*retval ".generator"
write .smelter :buildBlockFromCfg*retval ".smelter"
write .press :buildBlockFromCfg*retval ".press"
write .unloader1 :buildBlockFromCfg*retval ".unloader1"
set :buildBlockFromCfg.1:cfg "v.22="
set :buildBlockFromCfg.1*retaddr 107
jump 654 always 0 0
set :buildBlockFromCfg.1:cfg ".02>"
set :buildBlockFromCfg.1*retaddr 110
jump 654 always 0 0
write :buildBlockFromCfg.1*retval .controller ".unloader2"
set :buildBlockFromCfg.1:cfg "¦*05?"
set :buildBlockFromCfg.1*retaddr 114
jump 654 always 0 0
write :buildBlockFromCfg.1*retval .controller ".factory"
write :buildBlockFromCfg.1*retval processor1 ".airFactory"
write 1 .controller ".flareTarget"
write 1 processor1 ".flareTarget"
write 3 .controller ".monoTarget"
write 3 processor1 ".monoTarget"
write 85 .controller ".pressTarget"
write 150 .controller ".smelterTarget"
write 30 .controller ".kilnTarget"
set .leadSurplus 20
set .siliconSurplus 20
set :buildUnits*retaddr 127
jump 674 always 0 0
set :supplyBase*retaddr 129
jump 381 always 0 0
sensor *tmp168 .battery @totalPower
jump 133 lessThan *tmp168 300
read *tmp101 .controller ".monos"
jump 127 lessThan *tmp101 3
set .siliconSurplus 65
set :buildBlockFromCfg.1:cfg "602@"
set :buildBlockFromCfg.1*retaddr 137
jump 654 always 0 0
set :buildBlockFromCfg.1:cfg "c622A"
set :buildBlockFromCfg.1*retaddr 140
jump 654 always 0 0
set :buildBlockFromCfg.1:cfg "6752B"
set :buildBlockFromCfg.1*retaddr 143
jump 654 always 0 0
write :buildBlockFromCfg.1*retval .controller ".kiln"
set :buildBlockFromCfg.1:cfg ");2C"
set :buildBlockFromCfg.1*retaddr 147
jump 654 always 0 0
set :buildBlockFromCfg:cfg "*42D"
set :buildBlockFromCfg:config @coal
set :buildBlockFromCfg*retaddr 151
jump 614 always 0 0
set :buildBlockFromCfg.1:cfg "~)72E"
set :buildBlockFromCfg.1*retaddr 154
jump 654 always 0 0
write :buildBlockFromCfg.1*retval .controller ".generator2"
set :buildBlockFromCfg.1:cfg "3.:2F"
set :buildBlockFromCfg.1*retaddr 158
jump 654 always 0 0
write :buildBlockFromCfg.1*retval .controller ".multipress"
set .graphiteSurplus 150
set :buildBlockFromCfg.1:cfg "¯**2G"
set :buildBlockFromCfg.1*retaddr 163
jump 654 always 0 0
write :buildBlockFromCfg.1*retval .controller ".payloadRouter"
set :buildBlockFromCfg.1:cfg "0.2H"
set :buildBlockFromCfg.1*retaddr 167
jump 654 always 0 0
write :buildBlockFromCfg.1*retval .controller ".unloader4"
set :buildBlockFromCfg.1:cfg "¨0*2I"
set :buildBlockFromCfg.1*retaddr 171
jump 654 always 0 0
write :buildBlockFromCfg.1*retval .controller ".reconstructor"
write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
set :buildBlockFromCfg.1:cfg "{<62J"
set :buildBlockFromCfg.1*retaddr 176
jump 654 always 0 0
set :buildUnits*retaddr 178
jump 674 always 0 0
set .siliconSurplus 1000
set .metaglassSurplus 200
write 6 .controller ".polyTarget"
write 6 processor1 ".polyTarget"
set :buildBlockFromCfg.1:cfg "4;12N"
set :buildBlockFromCfg.1*retaddr 185
jump 654 always 0 0
write :buildBlockFromCfg.1*retval .controller ".smelter2"
set :buildBlockFromCfg.1:cfg "c822O"
set :buildBlockFromCfg.1*retaddr 189
jump 654 always 0 0
set :buildBlockFromCfg.1:cfg "c802P"
set :buildBlockFromCfg.1*retaddr 192
jump 654 always 0 0
set :buildBlockFromCfg:cfg "882Q"
set :buildBlockFromCfg:config @sand
set :buildBlockFromCfg*retaddr 196
jump 614 always 0 0
set :buildUnits*retaddr 198
jump 674 always 0 0
read *tmp102 .controller ".polys"
jump 204 greaterThanEq *tmp102 3
set :supplyBase*retaddr 202
jump 381 always 0 0
read *tmp102 .controller ".polys"
jump 200 lessThan *tmp102 3
write 3 .controller ".flareTarget"
write 3 processor1 ".flareTarget"
read *tmp100 .controller ".flares"
jump 212 greaterThanEq *tmp100 2
set :supplyBase*retaddr 210
jump 381 always 0 0
read *tmp100 .controller ".flares"
jump 208 lessThan *tmp100 2
set .graphiteSurplus 100
write 5 .controller ".monoTarget"
write 5 processor1 ".monoTarget"
write @ore-titanium processor1 ".nextBlock"
ubind @flare
read :blocksBuildTitaniumDrills:current processor4 ".locations"
write .coreX processor4 ":findDrillLocation:x"
write .coreY processor4 ":findDrillLocation:y"
write @unit processor4 ":findDrillLocation:unit"
write @titanium processor4 ":findDrillLocation:item"
write @ore-titanium processor4 ":findDrillLocation:ore"
write 4 processor4 ":findDrillLocation:size"
write 1000000000 processor4 ":findDrillLocation:limit"
write false processor4 ":findDrillLocation*finished"
write 1 processor4 "@counter"
ubind .builder
write .controller processor5 ":buildTitaniumDrills:aController"
write :blocksBuildTitaniumDrills:current processor5 ":buildTitaniumDrills:current"
write false processor5 ":buildTitaniumDrills*finished"
write 3 processor5 "@counter"
wait 1e-15
read *tmp201 processor5 ":buildTitaniumDrills*finished"
jump 232 equal *tmp201 false
write false processor4 ":stopLocation*finished"
write 3 processor4 "@counter"
write null processor1 ".nextBlock"
write .coreX processor4 ":layoutThoriumDrill:x"
write .coreY processor4 ":layoutThoriumDrill:y"
write @unit processor4 ":layoutThoriumDrill:unit"
write 7 processor4 ":layoutThoriumDrill:limit"
write false processor4 ":layoutThoriumDrill*finished"
write 2 processor4 "@counter"
wait 1e-15
read *tmp206 processor4 ":layoutThoriumDrill*finished"
jump 244 equal *tmp206 false
set :meetTarget.1:cfg "222K"
set :meetTarget.1*retaddr 250
jump 660 always 0 0
wait 1e-15
read *tmp208 processor4 ":layoutThoriumDrill*finished"
jump 250 equal *tmp208 false
read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
jump 257 notEqual :buildThoriumDrill:result false
set .ERROR "Cannot locate spot for thorium drill"
stop
write @laser-drill processor5 ":buildBlockAt:block"
read *tmp56 processor4 ".drillX"
write *tmp56 processor5 ":buildBlockAt:x"
read *tmp57 processor4 ".drillY"
write *tmp57 processor5 ":buildBlockAt:y"
write null processor5 ":buildBlockAt:rotation"
write 0 processor5 ":buildBlockAt:config"
write -1 processor5 ":buildBlockAt:index"
write false processor5 ":buildBlockAt*finished"
write 1 processor5 "@counter"
wait 1e-15
read *tmp218 processor5 ":buildBlockAt*finished"
jump 267 equal *tmp218 false
read .thoriumDrill processor5 ":buildBlockAt*retval"
set :buildRemoteBlock:cfg ");2C"
read :buildRemoteBlock:x processor4 ".water1X"
read :buildRemoteBlock:y processor4 ".water1Y"
set :buildRemoteBlock*retaddr 276
jump 590 always 0 0
read :buildRemoteBlock:x processor4 ".water2X"
read :buildRemoteBlock:y processor4 ".water2Y"
set :buildRemoteBlock*retaddr 280
jump 590 always 0 0
set :buildRemoteBlock:cfg "~)72E"
read :buildRemoteBlock:x processor4 ".generatorX"
read :buildRemoteBlock:y processor4 ".generatorY"
set :buildRemoteBlock*retaddr 285
jump 590 always 0 0
set .thoriumGenerator :buildRemoteBlock*retval
set :buildRemoteBlock:cfg "v.22="
read :buildRemoteBlock:x processor4 ".node1X"
read :buildRemoteBlock:y processor4 ".node1Y"
set :buildRemoteBlock*retaddr 291
jump 590 always 0 0
read :buildRemoteBlock:x processor4 ".node2X"
read :buildRemoteBlock:y processor4 ".node2Y"
set :buildRemoteBlock*retaddr 295
jump 590 always 0 0
set :buildRemoteBlock:cfg "222L"
read :buildRemoteBlock:x processor4 ".panelX"
read :buildRemoteBlock:y processor4 ".panelY"
set :buildRemoteBlock*retaddr 300
jump 590 always 0 0
set :buildRemoteBlock:cfg "z2<23"
read :buildRemoteBlock:x processor4 ".batteryX"
read :buildRemoteBlock:y processor4 ".batteryY"
set :buildRemoteBlock*retaddr 305
jump 590 always 0 0
set .thoriumBattery :buildRemoteBlock*retval
set :buildRemoteBlock:cfg "222M"
read :buildRemoteBlock:x processor4 ".containerX"
read :buildRemoteBlock:y processor4 ".containerY"
set :buildRemoteBlock*retaddr 311
jump 590 always 0 0
select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
write .thoriumDrill processor1 ".thoriumDrill"
write .thoriumContainer processor1 ".thoriumContainer"
write .thoriumContainer processor3 ":setThoriumContainer:container"
write false processor3 ":setThoriumContainer*finished"
write 3 processor3 "@counter"
wait 1e-15
read *tmp231 processor3 ":setThoriumContainer*finished"
jump 317 equal *tmp231 false
write null processor1 ".nextBlock"
write 1 .controller ".megaTarget"
write 1 processor1 ".megaTarget"
read *tmp102 .controller ".polys"
jump 329 greaterThanEq *tmp102 5
set :supplyBase*retaddr 327
jump 381 always 0 0
read *tmp102 .controller ".polys"
jump 325 lessThan *tmp102 5
set :buildBlockFromCfg:cfg "2.2R"
set :buildBlockFromCfg:config @silicon
set :buildBlockFromCfg*retaddr 333
jump 614 always 0 0
write :buildBlockFromCfg*retval .controller ".unloader6"
set :buildBlockFromCfg.1:cfg "©8*2S"
set :buildBlockFromCfg.1*retaddr 337
jump 654 always 0 0
write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
set .metaglassSurplus 50
set :buildUnits*retaddr 342
jump 674 always 0 0
read *tmp103 .controller ".megas"
jump 348 greaterThanEq *tmp103 1
set :supplyBase*retaddr 346
jump 381 always 0 0
read *tmp103 .controller ".megas"
jump 344 lessThan *tmp103 1
control enabled processor7 false 0 0 0
control enabled processor8 false 0 0 0
control enabled processor3 false 0 0 0
control enabled processor4 false 0 0 0
control enabled processor5 false 0 0 0
set :flagUnits:unit @mega
set :flagUnits*retaddr 356
jump 690 always 0 0
set :flagUnits:unit @poly
set :flagUnits*retaddr 359
jump 690 always 0 0
set :flagUnits:unit @mono
set :flagUnits*retaddr 362
jump 690 always 0 0
set :flagUnits:unit @flare
set :flagUnits*retaddr 365
jump 690 always 0 0
op sub :lineUpUnits:y @thisy 6
set :lineUpUnits:unit @mega
set :lineUpUnits*retaddr 369
jump 699 always 0 0
op sub :lineUpUnits:y @thisy 10
set :lineUpUnits:unit @poly
set :lineUpUnits*retaddr 373
jump 699 always 0 0
op sub :lineUpUnits:y @thisy 14
set :lineUpUnits:unit @mono
set :lineUpUnits*retaddr 377
jump 699 always 0 0
op sub :lineUpUnits:y @thisy 18
set :lineUpUnits:unit @flare
set :lineUpUnits*retaddr 365
jump 699 always 0 0
sensor *tmp244 .core @silicon
op sub *tmp245 .targetSilicon *tmp244
op max *tmp246 0 *tmp245
write *tmp246 processor8 ".sandTarget"
jump 466 equal .thoriumContainer false
write "Phase 2: servicing thorium drill" .display ".status1"
sensor *tmp248 .thoriumBattery @totalPower
jump 461 greaterThanEq *tmp248 2000
sensor *tmp251 .core @coal
jump 405 greaterThanEq *tmp251 50
set :supplyBlock:block .thoriumGenerator
set :supplyBlock:ore @coal
write "Supplying " .display ".status2"
write @coal .display ".item2"
write .thoriumGenerator .display ".block2"
sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
sensor *tmp342 .thoriumGenerator @coal
op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp342
jump 461 lessThanEq :supplyBlock:missing 0
set :mineOre:ore @coal
set :mineOre:amount :supplyBlock:blockCapacity
set :mineOre:block .thoriumGenerator
set :mineOre*retaddr 461
jump 916 always 0 0
sensor *tmp346 .thoriumGenerator @itemCapacity
op min :transportStatus:target *tmp346 30
write :transportStatus:target .display ".transportTarget"
write @coal .display ".transportItem"
write "Transferring " .display ".status2"
write @coal .display ".item2"
write .thoriumGenerator .display ".block2"
write "Moving..." .display ".status3"
sensor *tmp428 @unit @firstItem
jump 416 equal *tmp428 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach .coreX .coreY 5.5 0 0
ucontrol within .coreX .coreY 6 *tmp431 0
jump 413 equal *tmp431 false
sensor *tmp433 @unit @firstItem
jump 424 equal *tmp433 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp433 @unit @firstItem
jump 421 notEqual *tmp433 null
ucontrol itemTake .core @coal 30 0 0
sensor :supplyBlockFromCore:unitItem @unit @firstItem
op notEqual *tmp349 :supplyBlockFromCore:unitItem null
op notEqual *tmp350 :supplyBlockFromCore:unitItem @coal
op land *tmp351 *tmp349 *tmp350
jump 431 equal *tmp351 false
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp353 @unit @coal
op lessThan *tmp354 *tmp353 30
sensor *tmp355 .core @coal
op land *tmp356 *tmp354 *tmp355
jump 424 notEqual *tmp356 false
write "Depositing..." .display ".status3"
sensor *tmp435 @unit @firstItem
jump 454 notEqual *tmp435 @coal
sensor *tmp459 .thoriumGenerator @x
sensor *tmp460 .thoriumGenerator @y
write "Moving..." .display ".status3"
ucontrol within *tmp459 *tmp460 6 *tmp465 0
jump 447 notEqual *tmp465 false
ucontrol approach *tmp459 *tmp460 5.5 0 0
ucontrol within *tmp459 *tmp460 6 *tmp465 0
jump 444 equal *tmp465 false
sensor :depositItems:cap .thoriumGenerator @itemCapacity
ucontrol itemDrop .thoriumGenerator 30 0 0 0
sensor *tmp439 @unit @firstItem
op mul *tmp440 *tmp439 :depositItems:cap
sensor *tmp441 .thoriumGenerator @coal
jump 448 greaterThan *tmp440 *tmp441
jump 459 always 0 0
sensor *tmp443 @unit @firstItem
jump 459 equal *tmp443 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp443 @unit @firstItem
jump 456 notEqual *tmp443 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set :fetchBlock:block .thoriumContainer
set :fetchBlock:item @thorium
set :fetchBlock*retaddr 465
jump 719 always 0 0
set @counter :supplyBase*retaddr
read *tmp101 .controller ".monos"
jump 478 lessThanEq *tmp101 3
write "Phase 1: supplying base" .display ".status1"
write "Mining " .display ".status2"
write @coal .display ".item2"
write "core" .display ".block2"
set :mineOre:ore @coal
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 477
jump 916 always 0 0
set @counter :supplyBase*retaddr
set :supplyBase0:supplied false
jump 519 notEqual .unloader1 null
sensor *tmp258 .core @graphite
jump 490 greaterThanEq *tmp258 .targetGraphite
sensor *tmp261 .press @coal
jump 490 greaterThanEq *tmp261 5
write "Goal 1: graphite requirement" .display ".status1"
set :supplyBlock:block .press
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 489
jump 778 always 0 0
set :supplyBase0:supplied true
sensor *tmp264 .core @silicon
jump 509 greaterThanEq *tmp264 .targetSilicon
sensor *tmp267 .smelter @coal
jump 501 greaterThanEq *tmp267 5
write "Goal 2: coal for silicon requirement" .display ".status1"
set :supplyBlock:block .smelter
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 499
jump 778 always 0 0
set :supplyBase0:supplied true
jump 509 always 0 0
sensor *tmp270 .smelter @sand
jump 509 greaterThanEq *tmp270 5
write "Goal 3: sand for silicon requirement" .display ".status1"
set :supplyBlock:block .smelter
set :supplyBlock:ore @sand
set :supplyBlock*retaddr 508
jump 778 always 0 0
set :supplyBase0:supplied true
sensor *tmp273 .battery @totalPower
jump 519 greaterThanEq *tmp273 .powerTarget
sensor *tmp276 .generator @coal
jump 519 greaterThanEq *tmp276 2
write "Goal 4: supplying generator" .display ".status1"
set :supplyBlock:block .generator
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 518
jump 778 always 0 0
set :supplyBase0:supplied true
set *tmp281 100
sensor *tmp279 .core @titanium
jump 525 greaterThanEq *tmp279 .targetTitanium
sensor *tmp282 .core @titanium
op sub *tmp283 .targetTitanium *tmp282
op min *tmp281 7 *tmp283
sensor *tmp285 .titaniumDrill @titanium
jump 584 greaterThanEq *tmp285 *tmp281
jump 589 notEqual :supplyBase0:supplied false
sensor *tmp290 .battery @totalPower
op mul *tmp291 .unloader1 .powerTarget
jump 541 greaterThanEq *tmp290 *tmp291
write "Goal 5: supplying generator" .display ".status1"
write "Mining " .display ".status2"
write @coal .display ".item2"
write "core" .display ".block2"
set :mineOre:ore @coal
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 540
jump 916 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp294 .core @silicon
jump 556 greaterThanEq *tmp294 .targetSilicon
write "Goal 6: silicon requirement" .display ".status1"
sensor :supplyBase0:coal .core @coal
sensor :supplyBase0:sand .core @sand
select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
write "Mining " .display ".status2"
write :mineOre.1:ore .display ".item2"
write "core" .display ".block2"
set :mineOre:ore :mineOre.1:ore
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 555
jump 916 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp301 .core @copper
jump 563 greaterThanEq *tmp301 .targetCopper
write "Goal 7: copper requirement" .display ".status1"
set :mineOre.1:ore @copper
set :mineOre.1*retaddr 562
jump 710 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp304 .core @lead
jump 570 greaterThanEq *tmp304 .targetLead
write "Goal 8: lead requirement" .display ".status1"
set :mineOre.1:ore @lead
set :mineOre.1*retaddr 569
jump 710 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp307 .core @metaglass
jump 577 greaterThanEq *tmp307 .targetMetaglass
write "Goal 9: metaglass requirement" .display ".status1"
set :mineOre.1:ore @sand
set :mineOre.1*retaddr 576
jump 710 always 0 0
set @counter :supplyBase*retaddr
write "Goal 10: supplying base" .display ".status1"
sensor :supplyBase0:coal.1 .core @coal
sensor :supplyBase0:sand.1 .core @sand
select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
set :mineOre.1*retaddr 583
jump 710 always 0 0
set @counter :supplyBase*retaddr
write "Goal 11: Fetching titanium" .display ".status1"
set :fetchBlock:block .titaniumDrill
set :fetchBlock:item @titanium
set :fetchBlock*retaddr 589
jump 719 always 0 0
set @counter :supplyBase*retaddr
op add *tmp314 :buildRemoteBlock:x :buildRemoteBlock:y
jump 612 lessThanEq *tmp314 0
set :unpackCfg:cfg :buildRemoteBlock:cfg
set :unpackCfg*retaddr 595
jump 791 always 0 0
set :buildBlock:block :unpackCfg:type
set :buildBlock:x :buildRemoteBlock:x
set :buildBlock:y :buildRemoteBlock:y
set :buildBlock:copper :unpackCfg:cu
set :buildBlock:lead :unpackCfg:pb
set :buildBlock:graphite :unpackCfg:gr
set :buildBlock:silicon :unpackCfg:si
set :buildBlock:titanium :unpackCfg:ti
set :buildBlock:metaglass :unpackCfg:mg
set :buildBlock:thorium :unpackCfg:th
set :buildBlock:rotation :unpackCfg:rotation
set :buildBlock:config null
set :buildBlock:index :unpackCfg:ind
set :buildBlock*retaddr 610
jump 893 always 0 0
set :buildRemoteBlock*retval :buildBlock*retval
set @counter :buildRemoteBlock*retaddr
set :buildRemoteBlock*retval false
set @counter :buildRemoteBlock*retaddr
set :unpackCfg:cfg :buildBlockFromCfg:cfg
read *tmp358 :buildBlockFromCfg:cfg 0
op sub *tmp359 *tmp358 50
lookup block :unpackCfg:type *tmp359
read *tmp362 :buildBlockFromCfg:cfg 1
op sub *tmp363 *tmp362 50
op div :unpackCfg:x *tmp363 2
read *tmp366 :buildBlockFromCfg:cfg 2
op sub *tmp367 *tmp366 50
op div :unpackCfg:y *tmp367 2
read *tmp370 :buildBlockFromCfg:cfg 3
op sub :unpackCfg:rotation *tmp370 50
read *tmp373 :buildBlockFromCfg:cfg 4
op sub :unpackCfg:ind *tmp373 50
sensor :unpackCfg:cu :unpackCfg:type @copper
sensor :unpackCfg:pb :unpackCfg:type @lead
sensor :unpackCfg:gr :unpackCfg:type @graphite
sensor :unpackCfg:si :unpackCfg:type @silicon
sensor :unpackCfg:ti :unpackCfg:type @titanium
sensor :unpackCfg:mg :unpackCfg:type @metaglass
sensor :unpackCfg:th :unpackCfg:type @thorium
op add *tmp317 .coreX :unpackCfg:x
op add *tmp318 .coreY :unpackCfg:y
set :buildBlock:block :unpackCfg:type
set :buildBlock:x *tmp317
set :buildBlock:y *tmp318
set :buildBlock:copper :unpackCfg:cu
set :buildBlock:lead :unpackCfg:pb
set :buildBlock:graphite :unpackCfg:gr
set :buildBlock:silicon :unpackCfg:si
set :buildBlock:titanium :unpackCfg:ti
set :buildBlock:metaglass :unpackCfg:mg
set :buildBlock:thorium :unpackCfg:th
set :buildBlock:rotation :unpackCfg:rotation
set :buildBlock:config :buildBlockFromCfg:config
set :buildBlock:index :unpackCfg:ind
set :buildBlock*retaddr 652
jump 893 always 0 0
set :buildBlockFromCfg*retval :buildBlock*retval
set @counter :buildBlockFromCfg*retaddr
set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
set :buildBlockFromCfg:config null
set :buildBlockFromCfg*retaddr 658
jump 614 always 0 0
set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
set @counter :buildBlockFromCfg.1*retaddr
set :unpackCfg:cfg :meetTarget.1:cfg
set :unpackCfg*retaddr 663
jump 791 always 0 0
set :meetTarget:block :unpackCfg:type
set :meetTarget:copper :unpackCfg:cu
set :meetTarget:lead :unpackCfg:pb
set :meetTarget:graphite :unpackCfg:gr
set :meetTarget:silicon :unpackCfg:si
set :meetTarget:titanium :unpackCfg:ti
set :meetTarget:metaglass :unpackCfg:mg
set :meetTarget:thorium :unpackCfg:th
set :meetTarget*retaddr 673
jump 812 always 0 0
set @counter :meetTarget.1*retaddr
set :meetTarget:block 0
set :meetTarget:copper 0
set :meetTarget:lead 0
set :meetTarget:graphite 0
set :meetTarget:silicon 0
set :meetTarget:titanium 0
set :meetTarget:metaglass 0
set :meetTarget:thorium 0
set :meetTarget*retaddr 684
jump 812 always 0 0
write 0 .display ".totalTargets"
write null .display ".nextBlock"
write 0 .controller ".leadReserve"
write 0 .controller ".siliconReserve"
write 0 .controller ".graphiteReserve"
set @counter :buildUnits*retaddr
ubind :flagUnits:unit
set :flagUnits:firstUnit @unit
jump 690 equal :flagUnits:firstUnit null
set :flagUnits:x @thisx
ucontrol flag :flagUnits:x 0 0 0 0
op add :flagUnits:x :flagUnits:x 4
ubind :flagUnits:unit
jump 694 notEqual @unit :flagUnits:firstUnit
set @counter :flagUnits*retaddr
ubind :lineUpUnits:unit
set :lineUpUnits:firstUnit @unit
sensor :lineUpUnits:x @unit @flag
ucontrol itemDrop @air 1000 0 0 0
ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0
sensor *tmp324 @unit @mining
jump 707 equal *tmp324 false
ucontrol stop 0 0 0 0 0
ubind :lineUpUnits:unit
jump 701 notEqual @unit :lineUpUnits:firstUnit
set @counter :lineUpUnits*retaddr
write "Mining " .display ".status2"
write :mineOre.1:ore .display ".item2"
write "core" .display ".block2"
set :mineOre:ore :mineOre.1:ore
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 718
jump 916 always 0 0
set @counter :mineOre.1*retaddr
sensor *tmp328 :fetchBlock:block @itemCapacity
op min :transportStatus:target *tmp328 30
write :transportStatus:target .display ".transportTarget"
write :fetchBlock:item .display ".transportItem"
write "Fetching " .display ".status2"
write :fetchBlock:item .display ".item2"
write :fetchBlock:block .display ".block2"
sensor *tmp330 :fetchBlock:block @x
sensor *tmp331 :fetchBlock:block @y
write "Moving..." .display ".status3"
sensor *tmp428 @unit @firstItem
jump 732 equal *tmp428 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach *tmp330 *tmp331 5.5 0 0
ucontrol within *tmp330 *tmp331 6 *tmp431 0
jump 729 equal *tmp431 false
sensor *tmp433 @unit @firstItem
jump 740 equal *tmp433 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp433 @unit @firstItem
jump 737 notEqual *tmp433 null
ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0
sensor :fetchBlock:unitItem @unit @firstItem
op notEqual *tmp333 :fetchBlock:unitItem null
op notEqual *tmp334 :fetchBlock:unitItem :fetchBlock:item
op land *tmp335 *tmp333 *tmp334
jump 747 equal *tmp335 false
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp337 @unit :fetchBlock:item
op lessThan *tmp338 *tmp337 30
sensor *tmp339 :fetchBlock:block :fetchBlock:item
op land *tmp340 *tmp338 *tmp339
jump 740 notEqual *tmp340 false
write "Depositing..." .display ".status3"
sensor *tmp435 @unit @firstItem
jump 770 notEqual *tmp435 :fetchBlock:item
sensor *tmp459 .core @x
sensor *tmp460 .core @y
write "Moving..." .display ".status3"
ucontrol within *tmp459 *tmp460 6 *tmp465 0
jump 763 notEqual *tmp465 false
ucontrol approach *tmp459 *tmp460 5.5 0 0
ucontrol within *tmp459 *tmp460 6 *tmp465 0
jump 760 equal *tmp465 false
sensor :depositItems:cap .core @itemCapacity
ucontrol itemDrop .core 30 0 0 0
sensor *tmp439 @unit @firstItem
op mul *tmp440 *tmp439 :depositItems:cap
sensor *tmp441 .core :fetchBlock:item
jump 764 greaterThan *tmp440 *tmp441
jump 775 always 0 0
sensor *tmp443 @unit @firstItem
jump 775 equal *tmp443 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp443 @unit @firstItem
jump 772 notEqual *tmp443 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set @counter :fetchBlock*retaddr
write "Supplying " .display ".status2"
write :supplyBlock:ore .display ".item2"
write :supplyBlock:block .display ".block2"
sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
sensor *tmp342 :supplyBlock:block :supplyBlock:ore
op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp342
jump 790 lessThanEq :supplyBlock:missing 0
set :mineOre:ore :supplyBlock:ore
set :mineOre:amount :supplyBlock:blockCapacity
set :mineOre:block :supplyBlock:block
set :mineOre*retaddr 790
jump 916 always 0 0
set @counter :supplyBlock*retaddr
read *tmp358 :unpackCfg:cfg 0
op sub *tmp359 *tmp358 50
lookup block :unpackCfg:type *tmp359
read *tmp362 :unpackCfg:cfg 1
op sub *tmp363 *tmp362 50
op div :unpackCfg:x *tmp363 2
read *tmp366 :unpackCfg:cfg 2
op sub *tmp367 *tmp366 50
op div :unpackCfg:y *tmp367 2
read *tmp370 :unpackCfg:cfg 3
op sub :unpackCfg:rotation *tmp370 50
read *tmp373 :unpackCfg:cfg 4
op sub :unpackCfg:ind *tmp373 50
sensor :unpackCfg:cu :unpackCfg:type @copper
sensor :unpackCfg:pb :unpackCfg:type @lead
sensor :unpackCfg:gr :unpackCfg:type @graphite
sensor :unpackCfg:si :unpackCfg:type @silicon
sensor :unpackCfg:ti :unpackCfg:type @titanium
sensor :unpackCfg:mg :unpackCfg:type @metaglass
sensor :unpackCfg:th :unpackCfg:type @thorium
set @counter :unpackCfg*retaddr
op sign :meetTarget:count :meetTarget:copper 0
op sign *tmp384 :meetTarget:lead 0
op add :meetTarget:count :meetTarget:count *tmp384
op sign *tmp384 :meetTarget:graphite 0
op add :meetTarget:count :meetTarget:count *tmp384
op sign *tmp384 :meetTarget:silicon 0
op add :meetTarget:count :meetTarget:count *tmp384
op sign *tmp384 :meetTarget:titanium 0
op add :meetTarget:count :meetTarget:count *tmp384
op sign *tmp384 :meetTarget:metaglass 0
op add :meetTarget:count :meetTarget:count *tmp384
op sign *tmp384 :meetTarget:thorium 0
op add :meetTarget:count :meetTarget:count *tmp384
write :meetTarget:count .display ".totalTargets"
write :meetTarget:block .display ".nextBlock"
write :meetTarget:copper .display ".targetCopper"
write :meetTarget:lead .display ".targetLead"
write :meetTarget:graphite .display ".targetGraphite"
write :meetTarget:silicon .display ".targetSilicon"
write :meetTarget:titanium .display ".targetTitanium"
write :meetTarget:metaglass .display ".targetMetaglass"
write :meetTarget:thorium .display ".targetThorium"
set .targetCopper :meetTarget:copper
op add *tmp385 :meetTarget:lead .leadSurplus
op add .targetLead *tmp385 1
set .targetGraphite :meetTarget:graphite
set .targetSilicon :meetTarget:silicon
set .targetTitanium :meetTarget:titanium
set .targetMetaglass :meetTarget:metaglass
set .targetThorium :meetTarget:thorium
op add *tmp387 :meetTarget:graphite .graphiteSurplus
write *tmp387 .controller ".pressTarget"
op add *tmp388 :meetTarget:silicon .siliconSurplus
write *tmp388 .controller ".smelterTarget"
op add *tmp389 :meetTarget:metaglass .metaglassSurplus
write *tmp389 .controller ".kilnTarget"
write *tmp385 .controller ".leadReserve"
op sign *tmp391 :meetTarget:silicon 0
op mul *tmp392 *tmp391 20
op add *tmp393 :meetTarget:silicon *tmp392
write *tmp393 .controller ".siliconReserve"
op sign *tmp394 :meetTarget:graphite 0
op mul *tmp395 *tmp394 20
op add *tmp396 :meetTarget:graphite *tmp395
write *tmp396 .controller ".graphiteReserve"
write .targetLead processor8 ".leadTarget"
write :meetTarget:copper processor8 ".copperTarget"
sensor *tmp398 .core @copper
jump 863 greaterThanEq *tmp398 .targetCopper
set *tmp397 false
jump 889 always 0 0
sensor *tmp401 .core @lead
jump 867 greaterThanEq *tmp401 .targetLead
set *tmp397 false
jump 889 always 0 0
sensor *tmp404 .core @graphite
jump 871 greaterThanEq *tmp404 .targetGraphite
set *tmp397 false
jump 889 always 0 0
sensor *tmp407 .core @silicon
jump 875 greaterThanEq *tmp407 .targetSilicon
set *tmp397 false
jump 889 always 0 0
sensor *tmp410 .core @titanium
jump 879 greaterThanEq *tmp410 .targetTitanium
set *tmp397 false
jump 889 always 0 0
sensor *tmp413 .core @metaglass
jump 883 greaterThanEq *tmp413 .targetMetaglass
set *tmp397 false
jump 889 always 0 0
sensor *tmp416 .core @thorium
jump 887 greaterThanEq *tmp416 .targetThorium
set *tmp397 false
jump 889 always 0 0
set *tmp397 true
jump 889 always 0 0
jump 892 notEqual *tmp397 false
set :supplyBase*retaddr 859
jump 381 always 0 0
set @counter :meetTarget*retaddr
set :meetTarget:block :buildBlock:block
set :meetTarget:copper :buildBlock:copper
set :meetTarget:lead :buildBlock:lead
set :meetTarget:graphite :buildBlock:graphite
set :meetTarget:silicon :buildBlock:silicon
set :meetTarget:titanium :buildBlock:titanium
set :meetTarget:metaglass :buildBlock:metaglass
set :meetTarget:thorium :buildBlock:thorium
set :meetTarget*retaddr 903
jump 812 always 0 0
write :buildBlock:block .blockBuilder ":buildBlockAt:block"
write :buildBlock:x .blockBuilder ":buildBlockAt:x"
write :buildBlock:y .blockBuilder ":buildBlockAt:y"
write :buildBlock:rotation .blockBuilder ":buildBlockAt:rotation"
write :buildBlock:config .blockBuilder ":buildBlockAt:config"
write :buildBlock:index .blockBuilder ":buildBlockAt:index"
write false .blockBuilder ":buildBlockAt*finished"
write 1 .blockBuilder "@counter"
wait 1e-15
read *tmp426 .blockBuilder ":buildBlockAt*finished"
jump 911 equal *tmp426 false
read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
set @counter :buildBlock*retaddr
op min :mineOre:amount :mineOre:amount 30
write :mineOre:amount .display ".transportTarget"
write :mineOre:ore .display ".transportItem"
ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp461 0
jump 923 notEqual *tmp461 false
set .ERROR "Cannot locate ore"
stop
write "Moving..." .display ".status3"
sensor *tmp428 @unit @firstItem
jump 927 equal *tmp428 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach :locateOre:x :locateOre:y 5.5 0 0
ucontrol within :locateOre:x :locateOre:y 6 *tmp431 0
jump 924 equal *tmp431 false
sensor *tmp446 @unit @firstItem
jump 937 equal *tmp446 :mineOre:ore
sensor *tmp433 @unit @firstItem
jump 937 equal *tmp433 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp433 @unit @firstItem
jump 934 notEqual *tmp433 null
write "Mining..." .display ".status3"
op add :mineOre:stop @second 10
sensor :mineOre:item @unit @firstItem
op notEqual *tmp451 :mineOre:item null
op notEqual *tmp452 :mineOre:item :mineOre:ore
op land *tmp453 *tmp451 *tmp452
jump 948 notEqual *tmp453 false
ucontrol mine :locateOre:x :locateOre:y 0 0 0
jump 948 greaterThan @second :mineOre:stop
sensor *tmp457 @unit @totalItems
jump 939 lessThan *tmp457 :mineOre:amount
ucontrol unbind 0 0 0 0 0
write "Depositing..." .display ".status3"
sensor *tmp435 @unit @firstItem
jump 967 notEqual *tmp435 :mineOre:ore
sensor *tmp459 :mineOre:block @x
sensor *tmp460 :mineOre:block @y
write "Moving..." .display ".status3"
ucontrol within *tmp459 *tmp460 6 *tmp465 0
jump 960 notEqual *tmp465 false
ucontrol approach *tmp459 *tmp460 5.5 0 0
ucontrol within *tmp459 *tmp460 6 *tmp465 0
jump 957 equal *tmp465 false
sensor :depositItems:cap :mineOre:block @itemCapacity
ucontrol itemDrop :mineOre:block 30 0 0 0
sensor *tmp439 @unit @firstItem
op mul *tmp440 *tmp439 :depositItems:cap
sensor *tmp441 :mineOre:block :mineOre:ore
jump 961 greaterThan *tmp440 *tmp441
jump 972 always 0 0
sensor *tmp443 @unit @firstItem
jump 972 equal *tmp443 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp443 @unit @firstItem
jump 969 notEqual *tmp443 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set @counter :mineOre*retaddr
print "Compiled by Mindcode - github.com/cardillan/mindcode"

