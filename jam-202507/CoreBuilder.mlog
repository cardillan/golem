set .ERROR ""
set .display processor1
set .blockBuilder processor5
read *tmp114 processor8 "*signature"
jump 3 notEqual *tmp114 "0:v1"
set .press null
set .generator null
set .battery null
set .smelter null
set .titaniumDrill null
set .unloader1 null
set .thoriumBattery null
set .thoriumContainer null
set .thoriumGenerator null
set .leadSurplus 0
set .graphiteSurplus 20
set .siliconSurplus 20
set .metaglassSurplus 20
write 511 bank1 511
ubind @poly
set .builder @unit
ulocate building core false @copper .coreX .coreY 0 .core
jump 19 equal .core null
set :buildBlockFromCfg.1:cfg "2-5}P22222242"
set :buildBlockFromCfg.1*retaddr 26
jump 646 always 0 0
set .press :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "z2<7F22222233"
set :buildBlockFromCfg.1*retaddr 30
jump 646 always 0 0
set .battery :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "z4<7F22222234"
set :buildBlockFromCfg.1*retaddr 34
jump 646 always 0 0
set :buildBlockFromCfg.1:cfg "|2:KA22222235"
set :buildBlockFromCfg.1*retaddr 37
jump 646 always 0 0
set .generator :buildBlockFromCfg.1*retval
set .powerTarget 400
set :buildBlockFromCfg.1:cfg "459PK22222246"
set :buildBlockFromCfg.1*retaddr 42
jump 646 always 0 0
set .smelter :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "c464422222237"
set :buildBlockFromCfg.1*retaddr 46
jump 646 always 0 0
set :meetTarget.1:cfg "22D2<2222248"
set :meetTarget.1*retaddr 49
jump 652 always 0 0
write @titanium processor1 ".nextBlock"
write .coreX processor4 ":findDrillLocation:x"
write .coreY processor4 ":findDrillLocation:y"
write @unit processor4 ":findDrillLocation:unit"
write @titanium processor4 ":findDrillLocation:item"
write @ore-titanium processor4 ":findDrillLocation:ore"
write 2 processor4 ":findDrillLocation:size"
write 4 processor4 ":findDrillLocation:limit"
write false processor4 ":findDrillLocation*finished"
write 1 processor4 "@counter"
wait 1e-15
read *tmp153 processor4 ":findDrillLocation*finished"
jump 59 equal *tmp153 false
read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocation:dx"
read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
jump 68 notEqual :buildFirstTitaniumDrill:result false
set .ERROR "Cannot locate spot for titanium drill"
stop
write @pneumatic-drill processor1 ".nextBlock"
write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
write false processor5 ":buildFirstTitaniumDrillAt*finished"
write 2 processor5 "@counter"
wait 1e-15
read *tmp159 processor5 ":buildFirstTitaniumDrillAt*finished"
jump 73 equal *tmp159 false
read *tmp142 processor5 ":buildFirstTitaniumDrillAt*retval"
set .titaniumDrill *tmp142
write *tmp142 processor1 ".titaniumDrill"
set :buildBlockFromCfg.1:cfg "26222PK22239"
set :buildBlockFromCfg.1*retaddr 82
jump 646 always 0 0
set .unloader1 :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "c06442222223:"
set :buildBlockFromCfg.1*retaddr 86
jump 646 always 0 0
set :buildBlockFromCfg.1:cfg "f28642222223;"
set :buildBlockFromCfg.1*retaddr 89
jump 646 always 0 0
set .graphiteSurplus 100
set :buildBlockFromCfg:cfg "½8:d2d22223<"
set :buildBlockFromCfg:config processor2
set :buildBlockFromCfg*retaddr 94
jump 624 always 0 0
set .controller :buildBlockFromCfg*retval
write processor6 :buildBlockFromCfg*retval ".timer"
write processor1 :buildBlockFromCfg*retval ".display"
write .core :buildBlockFromCfg*retval ".core"
write bank1 :buildBlockFromCfg*retval ".bank"
write .battery :buildBlockFromCfg*retval ".battery"
write .generator :buildBlockFromCfg*retval ".generator"
write .smelter :buildBlockFromCfg*retval ".smelter"
write .press :buildBlockFromCfg*retval ".press"
write .unloader1 :buildBlockFromCfg*retval ".unloader1"
set :buildBlockFromCfg.1:cfg "v0,482222223="
set :buildBlockFromCfg.1*retaddr 107
jump 646 always 0 0
set :buildBlockFromCfg.1:cfg ".2222PK2223>"
set :buildBlockFromCfg.1*retaddr 110
jump 646 always 0 0
write :buildBlockFromCfg.1*retval .controller ".unloader2"
set :buildBlockFromCfg.1:cfg "¦,.nx2222255?"
set :buildBlockFromCfg.1*retaddr 114
jump 646 always 0 0
write :buildBlockFromCfg.1*retval .controller ".factory"
write :buildBlockFromCfg.1*retval processor1 ".airFactory"
write 1 .controller ".flareTarget"
write 1 processor1 ".flareTarget"
write 3 .controller ".monoTarget"
write 3 processor1 ".monoTarget"
write 85 .controller ".pressTarget"
write 150 .controller ".smelterTarget"
write 30 .controller ".kilnTarget"
set .leadSurplus 20
set .siliconSurplus 20
set :buildUnits*retaddr 127
jump 666 always 0 0
set :supplyBase*retaddr 129
jump 397 always 0 0
sensor *tmp168 .battery @totalPower
jump 133 lessThan *tmp168 300
read *tmp101 .controller ".monos"
jump 127 lessThan *tmp101 3
set .siliconSurplus 65
set :buildBlockFromCfg.1:cfg "60222PK2223@"
set :buildBlockFromCfg.1*retaddr 137
jump 646 always 0 0
set :buildBlockFromCfg.1:cfg "c62442222223A"
set :buildBlockFromCfg.1*retaddr 140
jump 646 always 0 0
set :buildBlockFromCfg.1:cfg "675nPP222224B"
set :buildBlockFromCfg.1*retaddr 143
jump 646 always 0 0
write :buildBlockFromCfg.1*retval .controller ".kiln"
set :buildBlockFromCfg.1:cfg ")9PPP22P224C"
set :buildBlockFromCfg.1*retaddr 147
jump 646 always 0 0
set :buildBlockFromCfg.1:cfg "f,2642222223D"
set :buildBlockFromCfg.1*retaddr 150
jump 646 always 0 0
set :buildBlockFromCfg.1:cfg "f*2642222223E"
set :buildBlockFromCfg.1*retaddr 153
jump 646 always 0 0
set :buildBlockFromCfg.1:cfg "~)5UZKP22224F"
set :buildBlockFromCfg.1*retaddr 156
jump 646 always 0 0
write :buildBlockFromCfg.1*retval .controller ".generator2"
set :buildBlockFromCfg.1:cfg "3.:2dK2225G"
set :buildBlockFromCfg.1*retaddr 160
jump 646 always 0 0
write :buildBlockFromCfg.1*retval .controller ".multipress"
set .graphiteSurplus 150
set :buildBlockFromCfg.1:cfg "¯,(<2A222225H"
set :buildBlockFromCfg.1*retaddr 165
jump 646 always 0 0
write :buildBlockFromCfg.1*retval .controller ".payloadRouter"
set :buildBlockFromCfg.1:cfg "2.222PK2223I"
set :buildBlockFromCfg.1*retaddr 169
jump 646 always 0 0
write :buildBlockFromCfg.1*retval .controller ".unloader4"
set :buildBlockFromCfg.1:cfg "g2,642222223J"
set :buildBlockFromCfg.1*retaddr 173
jump 646 always 0 0
set :buildBlockFromCfg.1:cfg "¨2(úª222225K"
set :buildBlockFromCfg.1*retaddr 176
jump 646 always 0 0
write :buildBlockFromCfg.1*retval .controller ".reconstructor"
write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
set :buildBlockFromCfg.1:cfg "{<62d2PF2225L"
set :buildBlockFromCfg.1*retaddr 181
jump 646 always 0 0
set :buildUnits*retaddr 183
jump 666 always 0 0
set .siliconSurplus 1000
set .metaglassSurplus 200
write 6 .controller ".polyTarget"
write 6 processor1 ".polyTarget"
set :buildBlockFromCfg.1:cfg "4;1PK2222224P"
set :buildBlockFromCfg.1*retaddr 190
jump 646 always 0 0
write :buildBlockFromCfg.1*retval .controller ".smelter2"
set :buildBlockFromCfg.1:cfg "c82442222223Q"
set :buildBlockFromCfg.1*retaddr 194
jump 646 always 0 0
set :buildBlockFromCfg.1:cfg "c80442222223R"
set :buildBlockFromCfg.1*retaddr 197
jump 646 always 0 0
set :buildBlockFromCfg:cfg "88222PK2223S"
set :buildBlockFromCfg:config @sand
set :buildBlockFromCfg*retaddr 201
jump 624 always 0 0
set :buildUnits*retaddr 203
jump 666 always 0 0
read *tmp102 .controller ".polys"
jump 209 greaterThanEq *tmp102 3
set :supplyBase*retaddr 207
jump 397 always 0 0
read *tmp102 .controller ".polys"
jump 205 lessThan *tmp102 3
write 3 .controller ".flareTarget"
write 3 processor1 ".flareTarget"
read *tmp100 .controller ".flares"
jump 217 greaterThanEq *tmp100 2
set :supplyBase*retaddr 215
jump 397 always 0 0
read *tmp100 .controller ".flares"
jump 213 lessThan *tmp100 2
set .graphiteSurplus 100
write 5 .controller ".monoTarget"
write 5 processor1 ".monoTarget"
write @ore-titanium processor1 ".nextBlock"
wait 0.000000001
ubind @flare
read :blocksBuildTitaniumDrills:current processor4 ".locations"
write .coreX processor4 ":findDrillLocation:x"
write .coreY processor4 ":findDrillLocation:y"
write @unit processor4 ":findDrillLocation:unit"
write @titanium processor4 ":findDrillLocation:item"
write @ore-titanium processor4 ":findDrillLocation:ore"
write 4 processor4 ":findDrillLocation:size"
write 1000000000 processor4 ":findDrillLocation:limit"
write false processor4 ":findDrillLocation*finished"
write 1 processor4 "@counter"
ubind .builder
write .controller processor5 ":buildTitaniumDrills:aController"
write :blocksBuildTitaniumDrills:current processor5 ":buildTitaniumDrills:current"
write false processor5 ":buildTitaniumDrills*finished"
write 3 processor5 "@counter"
wait 1e-15
read *tmp203 processor5 ":buildTitaniumDrills*finished"
jump 238 equal *tmp203 false
write false processor4 ":stopLocation*finished"
write 3 processor4 "@counter"
write null processor1 ".nextBlock"
write .coreX processor4 ":layoutThoriumDrill:x"
write .coreY processor4 ":layoutThoriumDrill:y"
write @unit processor4 ":layoutThoriumDrill:unit"
write 7 processor4 ":layoutThoriumDrill:limit"
write false processor4 ":layoutThoriumDrill*finished"
write 2 processor4 "@counter"
wait 1e-15
read *tmp208 processor4 ":layoutThoriumDrill*finished"
jump 250 equal *tmp208 false
set :meetTarget.1:cfg "22U2PPF2225M"
set :meetTarget.1*retaddr 256
jump 652 always 0 0
wait 1e-15
read *tmp210 processor4 ":layoutThoriumDrill*finished"
jump 256 equal *tmp210 false
read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
jump 263 notEqual :buildThoriumDrill:result false
set .ERROR "Cannot locate spot for thorium drill"
stop
write @laser-drill processor5 ":buildBlockAt:block"
read *tmp56 processor4 ".drillX"
write *tmp56 processor5 ":buildBlockAt:x"
read *tmp57 processor4 ".drillY"
write *tmp57 processor5 ":buildBlockAt:y"
write null processor5 ":buildBlockAt:rotation"
write 0 processor5 ":buildBlockAt:config"
write -1 processor5 ":buildBlockAt:index"
write false processor5 ":buildBlockAt*finished"
write 1 processor5 "@counter"
wait 1e-15
read *tmp220 processor5 ":buildBlockAt*finished"
jump 273 equal *tmp220 false
read .thoriumDrill processor5 ":buildBlockAt*retval"
set :buildRemoteBlock:cfg ")9PPP22P224C"
read :buildRemoteBlock:x processor4 ".water1X"
read :buildRemoteBlock:y processor4 ".water1Y"
set :buildRemoteBlock*retaddr 282
jump 600 always 0 0
read :buildRemoteBlock:x processor4 ".water2X"
read :buildRemoteBlock:y processor4 ".water2Y"
set :buildRemoteBlock*retaddr 286
jump 600 always 0 0
set :buildRemoteBlock:cfg "~)5UZKP22224F"
read :buildRemoteBlock:x processor4 ".generatorX"
read :buildRemoteBlock:y processor4 ".generatorY"
set :buildRemoteBlock*retaddr 291
jump 600 always 0 0
set .thoriumGenerator :buildRemoteBlock*retval
set :buildRemoteBlock:cfg "v0,482222223="
read :buildRemoteBlock:x processor4 ".node1X"
read :buildRemoteBlock:y processor4 ".node1Y"
set :buildRemoteBlock*retaddr 297
jump 600 always 0 0
read :buildRemoteBlock:x processor4 ".node2X"
read :buildRemoteBlock:y processor4 ".node2Y"
set :buildRemoteBlock*retaddr 301
jump 600 always 0 0
set :buildRemoteBlock:cfg "222<2:22223N"
read :buildRemoteBlock:x processor4 ".panelX"
read :buildRemoteBlock:y processor4 ".panelY"
set :buildRemoteBlock*retaddr 306
jump 600 always 0 0
set :buildRemoteBlock:cfg "z2<7F22222233"
read :buildRemoteBlock:x processor4 ".batteryX"
read :buildRemoteBlock:y processor4 ".batteryY"
set :buildRemoteBlock*retaddr 311
jump 600 always 0 0
set .thoriumBattery :buildRemoteBlock*retval
set :buildRemoteBlock:cfg "2222222224O"
read :buildRemoteBlock:x processor4 ".containerX"
read :buildRemoteBlock:y processor4 ".containerY"
set :buildRemoteBlock*retaddr 317
jump 600 always 0 0
select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
write .thoriumDrill processor1 ".thoriumDrill"
write .thoriumContainer processor1 ".thoriumContainer"
write .thoriumContainer processor3 ":setThoriumContainer:container"
write false processor3 ":setThoriumContainer*finished"
write 3 processor3 "@counter"
wait 1e-15
read *tmp233 processor3 ":setThoriumContainer*finished"
jump 323 equal *tmp233 false
write null processor1 ".nextBlock"
write 1 .controller ".megaTarget"
write 1 processor1 ".megaTarget"
read *tmp102 .controller ".polys"
jump 335 greaterThanEq *tmp102 5
set :supplyBase*retaddr 333
jump 397 always 0 0
read *tmp102 .controller ".polys"
jump 331 lessThan *tmp102 5
set :buildBlockFromCfg:cfg "4.222PK2223T"
set :buildBlockFromCfg:config @silicon
set :buildBlockFromCfg*retaddr 339
jump 624 always 0 0
write :buildBlockFromCfg*retval .controller ".unloader6"
set :buildBlockFromCfg.1:cfg "g4,642222223U"
set :buildBlockFromCfg.1*retaddr 343
jump 646 always 0 0
set :buildBlockFromCfg.1:cfg "©:*2ʼ2ǴƐ2ʼ27V"
set :buildBlockFromCfg.1*retaddr 346
jump 646 always 0 0
write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
set .metaglassSurplus 50
set :buildUnits*retaddr 351
jump 666 always 0 0
read *tmp103 .controller ".megas"
jump 357 greaterThanEq *tmp103 1
set :supplyBase*retaddr 355
jump 397 always 0 0
read *tmp103 .controller ".megas"
jump 353 lessThan *tmp103 1
control enabled processor7 false 0 0 0
control enabled processor8 false 0 0 0
control enabled processor3 false 0 0 0
control enabled processor4 false 0 0 0
control enabled processor5 false 0 0 0
set :flagUnits:unit @mega
set :flagUnits*retaddr 365
jump 682 always 0 0
set :flagUnits:unit @poly
set :flagUnits*retaddr 368
jump 682 always 0 0
set :flagUnits:unit @mono
set :flagUnits*retaddr 371
jump 682 always 0 0
set :flagUnits:unit @flare
set :flagUnits*retaddr 374
jump 682 always 0 0
op sub :lineUpUnits:y @thisy 6
ubind @mega
set :lineUpUnits:firstUnit @unit
sensor :lineUpUnits:x @unit @flag
ucontrol itemDrop @air 1000 0 0 0
ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0
sensor *tmp327 @unit @mining
jump 383 equal *tmp327 false
ucontrol stop 0 0 0 0 0
ubind @mega
jump 377 notEqual @unit :lineUpUnits:firstUnit
op sub :lineUpUnits:y @thisy 10
set :lineUpUnits:unit @poly
set :lineUpUnits*retaddr 389
jump 691 always 0 0
op sub :lineUpUnits:y @thisy 14
set :lineUpUnits:unit @mono
set :lineUpUnits*retaddr 393
jump 691 always 0 0
op sub :lineUpUnits:y @thisy 18
set :lineUpUnits:unit @flare
set :lineUpUnits*retaddr 374
jump 691 always 0 0
sensor *tmp247 .core @silicon
op sub *tmp248 .targetSilicon *tmp247
op max *tmp249 0 *tmp248
write *tmp249 processor8 ".sandTarget"
jump 482 equal .thoriumContainer false
write "Phase 2: servicing thorium drill" .display ".status1"
sensor *tmp251 .thoriumBattery @totalPower
jump 477 greaterThanEq *tmp251 3000
sensor *tmp254 .core @coal
jump 421 greaterThanEq *tmp254 50
set :supplyBlock:block .thoriumGenerator
set :supplyBlock:ore @coal
write "Supplying " .display ".status2"
write @coal .display ".item2"
write .thoriumGenerator .display ".block2"
sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
sensor *tmp345 .thoriumGenerator @coal
op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp345
jump 477 lessThanEq :supplyBlock:missing 0
set :mineOre:ore @coal
set :mineOre:amount :supplyBlock:blockCapacity
set :mineOre:block .thoriumGenerator
set :mineOre*retaddr 477
jump 915 always 0 0
sensor *tmp349 .thoriumGenerator @itemCapacity
op min :transportStatus:target *tmp349 30
write :transportStatus:target .display ".transportTarget"
write @coal .display ".transportItem"
write "Transferring " .display ".status2"
write @coal .display ".item2"
write .thoriumGenerator .display ".block2"
write "Moving..." .display ".status3"
sensor *tmp447 @unit @firstItem
jump 432 equal *tmp447 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach .coreX .coreY 5.5 0 0
ucontrol within .coreX .coreY 6 *tmp450 0
jump 429 equal *tmp450 false
sensor *tmp452 @unit @firstItem
jump 440 equal *tmp452 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp452 @unit @firstItem
jump 437 notEqual *tmp452 null
ucontrol itemTake .core @coal 30 0 0
sensor :supplyBlockFromCore:unitItem @unit @firstItem
op notEqual *tmp352 :supplyBlockFromCore:unitItem null
op notEqual *tmp353 :supplyBlockFromCore:unitItem @coal
op land *tmp354 *tmp352 *tmp353
jump 447 equal *tmp354 false
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp356 @unit @coal
op lessThan *tmp357 *tmp356 30
sensor *tmp358 .core @coal
op land *tmp359 *tmp357 *tmp358
jump 440 notEqual *tmp359 false
write "Depositing..." .display ".status3"
sensor *tmp454 @unit @firstItem
jump 470 notEqual *tmp454 @coal
sensor *tmp478 .thoriumGenerator @x
sensor *tmp479 .thoriumGenerator @y
write "Moving..." .display ".status3"
ucontrol within *tmp478 *tmp479 6 *tmp484 0
jump 463 notEqual *tmp484 false
ucontrol approach *tmp478 *tmp479 5.5 0 0
ucontrol within *tmp478 *tmp479 6 *tmp484 0
jump 460 equal *tmp484 false
sensor :depositItems:cap .thoriumGenerator @itemCapacity
ucontrol itemDrop .thoriumGenerator 30 0 0 0
sensor *tmp458 @unit @firstItem
op mul *tmp459 *tmp458 :depositItems:cap
sensor *tmp460 .thoriumGenerator @coal
jump 464 greaterThan *tmp459 *tmp460
jump 475 always 0 0
sensor *tmp462 @unit @firstItem
jump 475 equal *tmp462 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp462 @unit @firstItem
jump 472 notEqual *tmp462 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set :fetchBlock:block .thoriumContainer
set :fetchBlock:item @thorium
set :fetchBlock*retaddr 481
jump 711 always 0 0
set @counter :supplyBase*retaddr
read *tmp101 .controller ".monos"
jump 494 lessThanEq *tmp101 3
write "Phase 1: supplying base" .display ".status1"
write "Mining " .display ".status2"
write @coal .display ".item2"
write "core" .display ".block2"
set :mineOre:ore @coal
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 493
jump 915 always 0 0
set @counter :supplyBase*retaddr
set :supplyBase0:supplied false
jump 535 notEqual .unloader1 null
sensor *tmp261 .core @graphite
jump 506 greaterThanEq *tmp261 .targetGraphite
sensor *tmp264 .press @coal
jump 506 greaterThanEq *tmp264 5
write "Goal 1: graphite requirement" .display ".status1"
set :supplyBlock:block .press
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 505
jump 770 always 0 0
set :supplyBase0:supplied true
sensor *tmp267 .core @silicon
jump 525 greaterThanEq *tmp267 .targetSilicon
sensor *tmp270 .smelter @coal
jump 517 greaterThanEq *tmp270 5
write "Goal 2: coal for silicon requirement" .display ".status1"
set :supplyBlock:block .smelter
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 515
jump 770 always 0 0
set :supplyBase0:supplied true
jump 525 always 0 0
sensor *tmp273 .smelter @sand
jump 525 greaterThanEq *tmp273 5
write "Goal 3: sand for silicon requirement" .display ".status1"
set :supplyBlock:block .smelter
set :supplyBlock:ore @sand
set :supplyBlock*retaddr 524
jump 770 always 0 0
set :supplyBase0:supplied true
sensor *tmp276 .battery @totalPower
jump 535 greaterThanEq *tmp276 .powerTarget
sensor *tmp279 .generator @coal
jump 535 greaterThanEq *tmp279 2
write "Goal 4: supplying generator" .display ".status1"
set :supplyBlock:block .generator
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 534
jump 770 always 0 0
set :supplyBase0:supplied true
set *tmp284 100
sensor *tmp282 .core @titanium
jump 541 greaterThanEq *tmp282 .targetTitanium
sensor *tmp285 .core @titanium
op sub *tmp286 .targetTitanium *tmp285
op min *tmp284 7 *tmp286
sensor *tmp288 .titaniumDrill @titanium
jump 594 greaterThanEq *tmp288 *tmp284
jump 599 notEqual :supplyBase0:supplied false
sensor *tmp293 .battery @totalPower
op mul *tmp294 .unloader1 .powerTarget
jump 557 greaterThanEq *tmp293 *tmp294
write "Goal 5: supplying generator" .display ".status1"
write "Mining " .display ".status2"
write @coal .display ".item2"
write "core" .display ".block2"
set :mineOre:ore @coal
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 556
jump 915 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp297 .core @silicon
jump 566 greaterThanEq *tmp297 .targetSilicon
write "Goal 6: silicon requirement" .display ".status1"
sensor :supplyBase0:coal .core @coal
sensor :supplyBase0:sand .core @sand
select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
set :mineOre.1*retaddr 565
jump 702 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp304 .core @copper
jump 573 greaterThanEq *tmp304 .targetCopper
write "Goal 7: copper requirement" .display ".status1"
set :mineOre.1:ore @copper
set :mineOre.1*retaddr 572
jump 702 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp307 .core @lead
jump 580 greaterThanEq *tmp307 .targetLead
write "Goal 8: lead requirement" .display ".status1"
set :mineOre.1:ore @lead
set :mineOre.1*retaddr 579
jump 702 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp310 .core @metaglass
jump 587 greaterThanEq *tmp310 .targetMetaglass
write "Goal 9: metaglass requirement" .display ".status1"
set :mineOre.1:ore @sand
set :mineOre.1*retaddr 586
jump 702 always 0 0
set @counter :supplyBase*retaddr
write "Goal 10: supplying base" .display ".status1"
sensor :supplyBase0:coal.1 .core @coal
sensor :supplyBase0:sand.1 .core @sand
select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
set :mineOre.1*retaddr 593
jump 702 always 0 0
set @counter :supplyBase*retaddr
write "Goal 11: Fetching titanium" .display ".status1"
set :fetchBlock:block .titaniumDrill
set :fetchBlock:item @titanium
set :fetchBlock*retaddr 599
jump 711 always 0 0
set @counter :supplyBase*retaddr
op add *tmp317 :buildRemoteBlock:x :buildRemoteBlock:y
jump 622 lessThanEq *tmp317 0
set :unpackCfg:cfg :buildRemoteBlock:cfg
set :unpackCfg*retaddr 605
jump 783 always 0 0
set :buildBlock:block :unpackCfg:type
set :buildBlock:x :buildRemoteBlock:x
set :buildBlock:y :buildRemoteBlock:y
set :buildBlock:copper :unpackCfg:cu
set :buildBlock:lead :unpackCfg:pb
set :buildBlock:graphite :unpackCfg:gr
set :buildBlock:silicon :unpackCfg:si
set :buildBlock:titanium :unpackCfg:ti
set :buildBlock:metaglass :unpackCfg:mg
set :buildBlock:thorium :unpackCfg:th
set :buildBlock:rotation :unpackCfg:rotation
set :buildBlock:config null
set :buildBlock:index :unpackCfg:ind
set :buildBlock*retaddr 620
jump 892 always 0 0
set :buildRemoteBlock*retval :buildBlock*retval
set @counter :buildRemoteBlock*retaddr
set :buildRemoteBlock*retval false
set @counter :buildRemoteBlock*retaddr
set :unpackCfg:cfg :buildBlockFromCfg:cfg
set :unpackCfg*retaddr 627
jump 783 always 0 0
op add *tmp320 .coreX :unpackCfg:x
op add *tmp321 .coreY :unpackCfg:y
set :buildBlock:block :unpackCfg:type
set :buildBlock:x *tmp320
set :buildBlock:y *tmp321
set :buildBlock:copper :unpackCfg:cu
set :buildBlock:lead :unpackCfg:pb
set :buildBlock:graphite :unpackCfg:gr
set :buildBlock:silicon :unpackCfg:si
set :buildBlock:titanium :unpackCfg:ti
set :buildBlock:metaglass :unpackCfg:mg
set :buildBlock:thorium :unpackCfg:th
set :buildBlock:rotation :unpackCfg:rotation
set :buildBlock:config :buildBlockFromCfg:config
set :buildBlock:index :unpackCfg:ind
set :buildBlock*retaddr 644
jump 892 always 0 0
set :buildBlockFromCfg*retval :buildBlock*retval
set @counter :buildBlockFromCfg*retaddr
set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
set :buildBlockFromCfg:config null
set :buildBlockFromCfg*retaddr 650
jump 624 always 0 0
set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
set @counter :buildBlockFromCfg.1*retaddr
set :unpackCfg:cfg :meetTarget.1:cfg
set :unpackCfg*retaddr 655
jump 783 always 0 0
set :meetTarget:block :unpackCfg:type
set :meetTarget:copper :unpackCfg:cu
set :meetTarget:lead :unpackCfg:pb
set :meetTarget:graphite :unpackCfg:gr
set :meetTarget:silicon :unpackCfg:si
set :meetTarget:titanium :unpackCfg:ti
set :meetTarget:metaglass :unpackCfg:mg
set :meetTarget:thorium :unpackCfg:th
set :meetTarget*retaddr 665
jump 811 always 0 0
set @counter :meetTarget.1*retaddr
set :meetTarget:block 0
set :meetTarget:copper 0
set :meetTarget:lead 0
set :meetTarget:graphite 0
set :meetTarget:silicon 0
set :meetTarget:titanium 0
set :meetTarget:metaglass 0
set :meetTarget:thorium 0
set :meetTarget*retaddr 676
jump 811 always 0 0
write 0 .display ".totalTargets"
write null .display ".nextBlock"
write 0 .controller ".leadReserve"
write 0 .controller ".siliconReserve"
write 0 .controller ".graphiteReserve"
set @counter :buildUnits*retaddr
ubind :flagUnits:unit
set :flagUnits:firstUnit @unit
jump 682 equal :flagUnits:firstUnit null
set :flagUnits:x @thisx
ucontrol flag :flagUnits:x 0 0 0 0
op add :flagUnits:x :flagUnits:x 4
ubind :flagUnits:unit
jump 686 notEqual @unit :flagUnits:firstUnit
set @counter :flagUnits*retaddr
ubind :lineUpUnits:unit
set :lineUpUnits:firstUnit @unit
sensor :lineUpUnits:x @unit @flag
ucontrol itemDrop @air 1000 0 0 0
ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0
sensor *tmp327 @unit @mining
jump 699 equal *tmp327 false
ucontrol stop 0 0 0 0 0
ubind :lineUpUnits:unit
jump 693 notEqual @unit :lineUpUnits:firstUnit
set @counter :lineUpUnits*retaddr
write "Mining " .display ".status2"
write :mineOre.1:ore .display ".item2"
write "core" .display ".block2"
set :mineOre:ore :mineOre.1:ore
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 710
jump 915 always 0 0
set @counter :mineOre.1*retaddr
sensor *tmp331 :fetchBlock:block @itemCapacity
op min :transportStatus:target *tmp331 30
write :transportStatus:target .display ".transportTarget"
write :fetchBlock:item .display ".transportItem"
write "Fetching " .display ".status2"
write :fetchBlock:item .display ".item2"
write :fetchBlock:block .display ".block2"
sensor *tmp333 :fetchBlock:block @x
sensor *tmp334 :fetchBlock:block @y
write "Moving..." .display ".status3"
sensor *tmp447 @unit @firstItem
jump 724 equal *tmp447 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach *tmp333 *tmp334 5.5 0 0
ucontrol within *tmp333 *tmp334 6 *tmp450 0
jump 721 equal *tmp450 false
sensor *tmp452 @unit @firstItem
jump 732 equal *tmp452 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp452 @unit @firstItem
jump 729 notEqual *tmp452 null
ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0
sensor :fetchBlock:unitItem @unit @firstItem
op notEqual *tmp336 :fetchBlock:unitItem null
op notEqual *tmp337 :fetchBlock:unitItem :fetchBlock:item
op land *tmp338 *tmp336 *tmp337
jump 739 equal *tmp338 false
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp340 @unit :fetchBlock:item
op lessThan *tmp341 *tmp340 30
sensor *tmp342 :fetchBlock:block :fetchBlock:item
op land *tmp343 *tmp341 *tmp342
jump 732 notEqual *tmp343 false
write "Depositing..." .display ".status3"
sensor *tmp454 @unit @firstItem
jump 762 notEqual *tmp454 :fetchBlock:item
sensor *tmp478 .core @x
sensor *tmp479 .core @y
write "Moving..." .display ".status3"
ucontrol within *tmp478 *tmp479 6 *tmp484 0
jump 755 notEqual *tmp484 false
ucontrol approach *tmp478 *tmp479 5.5 0 0
ucontrol within *tmp478 *tmp479 6 *tmp484 0
jump 752 equal *tmp484 false
sensor :depositItems:cap .core @itemCapacity
ucontrol itemDrop .core 30 0 0 0
sensor *tmp458 @unit @firstItem
op mul *tmp459 *tmp458 :depositItems:cap
sensor *tmp460 .core :fetchBlock:item
jump 756 greaterThan *tmp459 *tmp460
jump 767 always 0 0
sensor *tmp462 @unit @firstItem
jump 767 equal *tmp462 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp462 @unit @firstItem
jump 764 notEqual *tmp462 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set @counter :fetchBlock*retaddr
write "Supplying " .display ".status2"
write :supplyBlock:ore .display ".item2"
write :supplyBlock:block .display ".block2"
sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
sensor *tmp345 :supplyBlock:block :supplyBlock:ore
op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp345
jump 782 lessThanEq :supplyBlock:missing 0
set :mineOre:ore :supplyBlock:ore
set :mineOre:amount :supplyBlock:blockCapacity
set :mineOre:block :supplyBlock:block
set :mineOre*retaddr 782
jump 915 always 0 0
set @counter :supplyBlock*retaddr
read *tmp361 :unpackCfg:cfg 0
op sub *tmp362 *tmp361 50
lookup block :unpackCfg:type *tmp362
read *tmp365 :unpackCfg:cfg 1
op sub *tmp366 *tmp365 50
op div :unpackCfg:x *tmp366 2
read *tmp369 :unpackCfg:cfg 2
op sub *tmp370 *tmp369 50
op div :unpackCfg:y *tmp370 2
read *tmp373 :unpackCfg:cfg 3
op sub :unpackCfg:cu *tmp373 50
read *tmp376 :unpackCfg:cfg 4
op sub :unpackCfg:pb *tmp376 50
read *tmp379 :unpackCfg:cfg 5
op sub :unpackCfg:gr *tmp379 50
read *tmp382 :unpackCfg:cfg 6
op sub :unpackCfg:si *tmp382 50
read *tmp385 :unpackCfg:cfg 7
op sub :unpackCfg:ti *tmp385 50
read *tmp388 :unpackCfg:cfg 8
op sub :unpackCfg:mg *tmp388 50
read *tmp391 :unpackCfg:cfg 9
op sub :unpackCfg:th *tmp391 50
read *tmp394 :unpackCfg:cfg 10
op sub :unpackCfg:rotation *tmp394 50
read *tmp400 :unpackCfg:cfg 12
op sub :unpackCfg:ind *tmp400 50
set @counter :unpackCfg*retaddr
op sign :meetTarget:count :meetTarget:copper 0
op sign *tmp403 :meetTarget:lead 0
op add :meetTarget:count :meetTarget:count *tmp403
op sign *tmp403 :meetTarget:graphite 0
op add :meetTarget:count :meetTarget:count *tmp403
op sign *tmp403 :meetTarget:silicon 0
op add :meetTarget:count :meetTarget:count *tmp403
op sign *tmp403 :meetTarget:titanium 0
op add :meetTarget:count :meetTarget:count *tmp403
op sign *tmp403 :meetTarget:metaglass 0
op add :meetTarget:count :meetTarget:count *tmp403
op sign *tmp403 :meetTarget:thorium 0
op add :meetTarget:count :meetTarget:count *tmp403
write :meetTarget:count .display ".totalTargets"
write :meetTarget:block .display ".nextBlock"
write :meetTarget:copper .display ".targetCopper"
write :meetTarget:lead .display ".targetLead"
write :meetTarget:graphite .display ".targetGraphite"
write :meetTarget:silicon .display ".targetSilicon"
write :meetTarget:titanium .display ".targetTitanium"
write :meetTarget:metaglass .display ".targetMetaglass"
write :meetTarget:thorium .display ".targetThorium"
set .targetCopper :meetTarget:copper
op add *tmp404 :meetTarget:lead .leadSurplus
op add .targetLead *tmp404 1
set .targetGraphite :meetTarget:graphite
set .targetSilicon :meetTarget:silicon
set .targetTitanium :meetTarget:titanium
set .targetMetaglass :meetTarget:metaglass
set .targetThorium :meetTarget:thorium
op add *tmp406 :meetTarget:graphite .graphiteSurplus
write *tmp406 .controller ".pressTarget"
op add *tmp407 :meetTarget:silicon .siliconSurplus
write *tmp407 .controller ".smelterTarget"
op add *tmp408 :meetTarget:metaglass .metaglassSurplus
write *tmp408 .controller ".kilnTarget"
write *tmp404 .controller ".leadReserve"
op sign *tmp410 :meetTarget:silicon 0
op mul *tmp411 *tmp410 20
op add *tmp412 :meetTarget:silicon *tmp411
write *tmp412 .controller ".siliconReserve"
op sign *tmp413 :meetTarget:graphite 0
op mul *tmp414 *tmp413 20
op add *tmp415 :meetTarget:graphite *tmp414
write *tmp415 .controller ".graphiteReserve"
write .targetLead processor8 ".leadTarget"
write :meetTarget:copper processor8 ".copperTarget"
sensor *tmp417 .core @copper
jump 862 greaterThanEq *tmp417 .targetCopper
set *tmp416 false
jump 888 always 0 0
sensor *tmp420 .core @lead
jump 866 greaterThanEq *tmp420 .targetLead
set *tmp416 false
jump 888 always 0 0
sensor *tmp423 .core @graphite
jump 870 greaterThanEq *tmp423 .targetGraphite
set *tmp416 false
jump 888 always 0 0
sensor *tmp426 .core @silicon
jump 874 greaterThanEq *tmp426 .targetSilicon
set *tmp416 false
jump 888 always 0 0
sensor *tmp429 .core @titanium
jump 878 greaterThanEq *tmp429 .targetTitanium
set *tmp416 false
jump 888 always 0 0
sensor *tmp432 .core @metaglass
jump 882 greaterThanEq *tmp432 .targetMetaglass
set *tmp416 false
jump 888 always 0 0
sensor *tmp435 .core @thorium
jump 886 greaterThanEq *tmp435 .targetThorium
set *tmp416 false
jump 888 always 0 0
set *tmp416 true
jump 888 always 0 0
jump 891 notEqual *tmp416 false
set :supplyBase*retaddr 858
jump 397 always 0 0
set @counter :meetTarget*retaddr
set :meetTarget:block :buildBlock:block
set :meetTarget:copper :buildBlock:copper
set :meetTarget:lead :buildBlock:lead
set :meetTarget:graphite :buildBlock:graphite
set :meetTarget:silicon :buildBlock:silicon
set :meetTarget:titanium :buildBlock:titanium
set :meetTarget:metaglass :buildBlock:metaglass
set :meetTarget:thorium :buildBlock:thorium
set :meetTarget*retaddr 902
jump 811 always 0 0
write :buildBlock:block .blockBuilder ":buildBlockAt:block"
write :buildBlock:x .blockBuilder ":buildBlockAt:x"
write :buildBlock:y .blockBuilder ":buildBlockAt:y"
write :buildBlock:rotation .blockBuilder ":buildBlockAt:rotation"
write :buildBlock:config .blockBuilder ":buildBlockAt:config"
write :buildBlock:index .blockBuilder ":buildBlockAt:index"
write false .blockBuilder ":buildBlockAt*finished"
write 1 .blockBuilder "@counter"
wait 1e-15
read *tmp445 .blockBuilder ":buildBlockAt*finished"
jump 910 equal *tmp445 false
read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
set @counter :buildBlock*retaddr
op min :mineOre:amount :mineOre:amount 30
write :mineOre:amount .display ".transportTarget"
write :mineOre:ore .display ".transportItem"
ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp480 0
jump 922 notEqual *tmp480 false
set .ERROR "Cannot locate ore"
stop
write "Moving..." .display ".status3"
sensor *tmp447 @unit @firstItem
jump 926 equal *tmp447 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach :locateOre:x :locateOre:y 5.5 0 0
ucontrol within :locateOre:x :locateOre:y 6 *tmp450 0
jump 923 equal *tmp450 false
sensor *tmp465 @unit @firstItem
jump 936 equal *tmp465 :mineOre:ore
sensor *tmp452 @unit @firstItem
jump 936 equal *tmp452 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp452 @unit @firstItem
jump 933 notEqual *tmp452 null
write "Mining..." .display ".status3"
op add :mineOre:stop @second 10
sensor :mineOre:item @unit @firstItem
op notEqual *tmp470 :mineOre:item null
op notEqual *tmp471 :mineOre:item :mineOre:ore
op land *tmp472 *tmp470 *tmp471
jump 947 notEqual *tmp472 false
ucontrol mine :locateOre:x :locateOre:y 0 0 0
jump 947 greaterThan @second :mineOre:stop
sensor *tmp476 @unit @totalItems
jump 938 lessThan *tmp476 :mineOre:amount
ucontrol unbind 0 0 0 0 0
write "Depositing..." .display ".status3"
sensor *tmp454 @unit @firstItem
jump 966 notEqual *tmp454 :mineOre:ore
sensor *tmp478 :mineOre:block @x
sensor *tmp479 :mineOre:block @y
write "Moving..." .display ".status3"
ucontrol within *tmp478 *tmp479 6 *tmp484 0
jump 959 notEqual *tmp484 false
ucontrol approach *tmp478 *tmp479 5.5 0 0
ucontrol within *tmp478 *tmp479 6 *tmp484 0
jump 956 equal *tmp484 false
sensor :depositItems:cap :mineOre:block @itemCapacity
ucontrol itemDrop :mineOre:block 30 0 0 0
sensor *tmp458 @unit @firstItem
op mul *tmp459 *tmp458 :depositItems:cap
sensor *tmp460 :mineOre:block :mineOre:ore
jump 960 greaterThan *tmp459 *tmp460
jump 971 always 0 0
sensor *tmp462 @unit @firstItem
jump 971 equal *tmp462 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp462 @unit @firstItem
jump 968 notEqual *tmp462 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set @counter :mineOre*retaddr
print "Compiled by Mindcode - github.com/cardillan/mindcode"

