set .ERROR ""
set .display processor1
set .blockBuilder processor5
set .press null
set .generator null
set .battery null
set .smelter null
set .titaniumDrill null
set .unloader1 null
set .thoriumContainer null
set .thoriumGenerator null
set .leadSurplus 0
set .graphiteSurplus 20
set .siliconSurplus 20
set .metaglassSurplus 20
write 511 bank1 511
ubind @poly
set .builder @unit
ulocate building core false @copper .coreX .coreY 0 .core
jump 16 equal .core null
set :buildBlockFromCfg.1:cfg "#'+nA######"
set :buildBlockFromCfg:cfg "#'+nA######"
set :buildBlockFromCfg:config null
set :buildBlockFromCfg*retaddr 25
jump 901 always 0 0
set .press :buildBlockFromCfg*retval
set :buildBlockFromCfg.1:cfg "k*/(7######"
set :buildBlockFromCfg.1*retaddr 29
jump 922 always 0 0
set .battery :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "k+/(7######"
set :buildBlockFromCfg.1*retaddr 33
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "m*.<2######"
set :buildBlockFromCfg.1*retaddr 36
jump 922 always 0 0
set .generator :buildBlockFromCfg.1*retval
set .powerTarget 400
set :buildBlockFromCfg.1:cfg "%+-A<######"
set :buildBlockFromCfg.1*retaddr 41
jump 922 always 0 0
set .smelter :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "T+,%%######"
set :buildBlockFromCfg.1*retaddr 45
jump 922 always 0 0
set :meetTarget.1:cfg "w**5#-#####"
set :meetTarget.1*retaddr 48
jump 928 always 0 0
write @titanium processor1 ".nextBlock"
write .coreX processor4 ":findDrillLocation:x"
write .coreY processor4 ":findDrillLocation:y"
write @unit processor4 ":findDrillLocation:unit"
write @titanium processor4 ":findDrillLocation:item"
write @ore-titanium processor4 ":findDrillLocation:ore"
write 2 processor4 ":findDrillLocation:size"
write 4 processor4 ":findDrillLocation:limit"
write false processor4 ":findDrillLocation*finished"
write 1 processor4 "@counter"
wait 1e-15
read *tmp143 processor4 ":findDrillLocation*finished"
jump 58 equal *tmp143 false
read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocation:dx"
read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
jump 67 notEqual :buildFirstTitaniumDrill:result false
set .ERROR "Cannot locate spot for titanium drill"
stop
write @pneumatic-drill processor1 ".nextBlock"
write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
write false processor5 ":buildFirstTitaniumDrillAt*finished"
write 2 processor5 "@counter"
wait 1e-15
read *tmp149 processor5 ":buildFirstTitaniumDrillAt*finished"
jump 72 equal *tmp149 false
read *tmp132 processor5 ":buildFirstTitaniumDrillAt*retval"
set .titaniumDrill *tmp132
write *tmp132 processor1 ".titaniumDrill"
set :buildBlockFromCfg.1:cfg "*,###A<###"
set :buildBlockFromCfg.1*retaddr 81
jump 922 always 0 0
set .unloader1 :buildBlockFromCfg.1*retval
set :buildBlockFromCfg.1:cfg "T),%%######"
set :buildBlockFromCfg.1*retaddr 85
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "W*-'%######"
set :buildBlockFromCfg.1*retaddr 88
jump 922 always 0 0
set .graphiteSurplus 100
set :buildBlockFromCfg:cfg "®-.}U#U####"
set :buildBlockFromCfg:config processor2
set :buildBlockFromCfg*retaddr 93
jump 901 always 0 0
set .controller :buildBlockFromCfg*retval
write processor6 :buildBlockFromCfg*retval ".timer"
write processor1 :buildBlockFromCfg*retval ".display"
write .core :buildBlockFromCfg*retval ".core"
write bank1 :buildBlockFromCfg*retval ".bank"
write .battery :buildBlockFromCfg*retval ".battery"
write .generator :buildBlockFromCfg*retval ".generator"
write .smelter :buildBlockFromCfg*retval ".smelter"
write .press :buildBlockFromCfg*retval ".press"
write .unloader1 :buildBlockFromCfg*retval ".unloader1"
set :buildBlockFromCfg.1:cfg "g)'%)######"
set :buildBlockFromCfg.1*retaddr 106
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "(*###A<###"
set :buildBlockFromCfg.1*retaddr 109
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".unloader2"
set :buildBlockFromCfg.1:cfg "'(_i#####&"
set :buildBlockFromCfg.1*retaddr 113
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".factory"
write :buildBlockFromCfg.1*retval processor1 ".airFactory"
write 1 .controller ".flareTarget"
write 1 processor1 ".flareTarget"
write 3 .controller ".monoTarget"
write 3 processor1 ".monoTarget"
write 85 .controller ".pressTarget"
write 150 .controller ".smelterTarget"
write 30 .controller ".kilnTarget"
set .leadSurplus 20
set .siliconSurplus 20
set :buildUnits*retaddr 126
jump 942 always 0 0
set :supplyBase*retaddr 128
jump 556 always 0 0
sensor *tmp158 .battery @totalPower
jump 132 lessThan *tmp158 300
read *tmp97 .controller ".monos"
jump 126 lessThan *tmp97 3
set .siliconSurplus 65
set :buildBlockFromCfg.1:cfg ",)###A<###"
set :buildBlockFromCfg.1*retaddr 136
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "T,*%%######"
set :buildBlockFromCfg.1*retaddr 139
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "',+_AA#####"
set :buildBlockFromCfg.1*retaddr 142
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".kiln"
set :buildBlockFromCfg.1:cfg "z%-AAA##A##"
set :buildBlockFromCfg.1*retaddr 146
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "W'*'%######"
set :buildBlockFromCfg.1*retaddr 149
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "W&*'%######"
set :buildBlockFromCfg.1*retaddr 152
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "o%+FK<A####"
set :buildBlockFromCfg.1*retaddr 155
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".generator2"
set :buildBlockFromCfg.1:cfg "$(.#U<###"
set :buildBlockFromCfg.1*retaddr 159
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".multipress"
set .graphiteSurplus 150
set :buildBlockFromCfg.1:cfg " '%-#2#####"
set :buildBlockFromCfg.1*retaddr 164
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".payloadRouter"
set :buildBlockFromCfg.1:cfg "*(###A<###"
set :buildBlockFromCfg.1*retaddr 168
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".unloader4"
set :buildBlockFromCfg.1:cfg "X*''%######"
set :buildBlockFromCfg.1*retaddr 172
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "*%ë#}####"
set :buildBlockFromCfg.1*retaddr 175
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".reconstructor"
write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
set :buildBlockFromCfg.1:cfg "l/,#U#A7###"
set :buildBlockFromCfg.1*retaddr 180
jump 922 always 0 0
set :buildUnits*retaddr 182
jump 942 always 0 0
set .siliconSurplus 1000
set .metaglassSurplus 200
write 6 .controller ".polyTarget"
write 6 processor1 ".polyTarget"
set :buildBlockFromCfg.1:cfg "%.)A<######"
set :buildBlockFromCfg.1*retaddr 189
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".smelter2"
set :buildBlockFromCfg.1:cfg "T-*%%######"
set :buildBlockFromCfg.1*retaddr 193
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg "T-)%%######"
set :buildBlockFromCfg.1*retaddr 196
jump 922 always 0 0
set :buildBlockFromCfg:cfg "--###A<###"
set :buildBlockFromCfg:config @sand
set :buildBlockFromCfg*retaddr 200
jump 901 always 0 0
set :buildUnits*retaddr 202
jump 942 always 0 0
read *tmp98 .controller ".polys"
jump 208 greaterThanEq *tmp98 3
set :supplyBase*retaddr 206
jump 556 always 0 0
read *tmp98 .controller ".polys"
jump 204 lessThan *tmp98 3
write 3 .controller ".flareTarget"
write 3 processor1 ".flareTarget"
read *tmp96 .controller ".flares"
jump 216 greaterThanEq *tmp96 2
set :supplyBase*retaddr 214
jump 556 always 0 0
read *tmp96 .controller ".flares"
jump 212 lessThan *tmp96 2
set .graphiteSurplus 100
write 5 .controller ".monoTarget"
write 5 processor1 ".monoTarget"
write @ore-titanium processor1 ".nextBlock"
wait 0.000000001
ubind @flare
read :blocksBuildTitaniumDrills:current processor4 ".locations"
write .coreX processor4 ":findDrillLocation:x"
write .coreY processor4 ":findDrillLocation:y"
write @unit processor4 ":findDrillLocation:unit"
write @titanium processor4 ":findDrillLocation:item"
write @ore-titanium processor4 ":findDrillLocation:ore"
write 4 processor4 ":findDrillLocation:size"
write 1000000000 processor4 ":findDrillLocation:limit"
write false processor4 ":findDrillLocation*finished"
write 1 processor4 "@counter"
ubind .builder
write .controller processor5 ":buildTitaniumDrills:aController"
write :blocksBuildTitaniumDrills:current processor5 ":buildTitaniumDrills:current"
write false processor5 ":buildTitaniumDrills*finished"
write 3 processor5 "@counter"
wait 1e-15
read *tmp193 processor5 ":buildTitaniumDrills*finished"
jump 237 equal *tmp193 false
write false processor4 ":stopLocation*finished"
write 3 processor4 "@counter"
write null processor1 ".nextBlock"
write .coreX processor4 ":layoutThoriumDrill:x"
write .coreY processor4 ":layoutThoriumDrill:y"
write @unit processor4 ":layoutThoriumDrill:unit"
write 7 processor4 ":layoutThoriumDrill:limit"
write false processor4 ":layoutThoriumDrill*finished"
write 2 processor4 "@counter"
wait 1e-15
read *tmp198 processor4 ":layoutThoriumDrill*finished"
jump 249 equal *tmp198 false
set :meetTarget.1:cfg "x**F#AA7###"
set :meetTarget.1*retaddr 255
jump 928 always 0 0
wait 1e-15
read *tmp200 processor4 ":layoutThoriumDrill*finished"
jump 255 equal *tmp200 false
read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
jump 262 notEqual :buildThoriumDrill:result false
set .ERROR "Cannot locate spot for thorium drill"
stop
write @laser-drill processor5 ":buildBlockAt:block"
read *tmp54 processor4 ".drillX"
write *tmp54 processor5 ":buildBlockAt:x"
read *tmp55 processor4 ".drillY"
write *tmp55 processor5 ":buildBlockAt:y"
write null processor5 ":buildBlockAt:rotation"
write 0 processor5 ":buildBlockAt:config"
write false processor5 ":buildBlockAt*finished"
write 1 processor5 "@counter"
wait 1e-15
read *tmp209 processor5 ":buildBlockAt*finished"
jump 271 equal *tmp209 false
read .thoriumDrill processor5 ":buildBlockAt*retval"
set :buildRemoteBlock:cfg "z%-AAA##A##"
read :buildRemoteBlock:x processor4 ".water1X"
read :buildRemoteBlock:y processor4 ".water1Y"
set :buildRemoteBlock*retaddr 280
jump 878 always 0 0
read :buildRemoteBlock:x processor4 ".water2X"
read :buildRemoteBlock:y processor4 ".water2Y"
set :buildRemoteBlock*retaddr 284
jump 878 always 0 0
set :buildRemoteBlock:cfg "o%+FK<A####"
read :buildRemoteBlock:x processor4 ".generatorX"
read :buildRemoteBlock:y processor4 ".generatorY"
set :buildRemoteBlock*retaddr 289
jump 878 always 0 0
set .thoriumGenerator :buildRemoteBlock*retval
set :buildRemoteBlock:cfg "g)'%)######"
read :buildRemoteBlock:x processor4 ".nodeX"
read :buildRemoteBlock:y processor4 ".nodeY"
set :buildRemoteBlock*retaddr 295
jump 878 always 0 0
set :buildRemoteBlock:cfg "r**#-#+####"
read :buildRemoteBlock:x processor4 ".panelX"
read :buildRemoteBlock:y processor4 ".panelY"
set :buildRemoteBlock*retaddr 300
jump 878 always 0 0
set :buildRemoteBlock:cfg "k*/(7######"
read :buildRemoteBlock:x processor4 ".batteryX"
read :buildRemoteBlock:y processor4 ".batteryY"
set :buildRemoteBlock*retaddr 305
jump 878 always 0 0
set :buildRemoteBlock:cfg "**#######"
read :buildRemoteBlock:x processor4 ".containerX"
read :buildRemoteBlock:y processor4 ".containerY"
set :buildRemoteBlock*retaddr 310
jump 878 always 0 0
set .thoriumContainer :buildRemoteBlock*retval
jump 313 notEqual :buildRemoteBlock*retval null
set .thoriumContainer .thoriumDrill
write .thoriumDrill processor1 ".thoriumDrill"
write .thoriumContainer processor1 ".thoriumContainer"
write .thoriumContainer processor3 ":setThoriumContainer:container"
write false processor3 ":setThoriumContainer*finished"
write 3 processor3 "@counter"
wait 1e-15
read *tmp221 processor3 ":setThoriumContainer*finished"
jump 318 equal *tmp221 false
write null processor1 ".nextBlock"
write 1 .controller ".megaTarget"
write 1 processor1 ".megaTarget"
read *tmp98 .controller ".polys"
jump 330 greaterThanEq *tmp98 5
set :supplyBase*retaddr 328
jump 556 always 0 0
read *tmp98 .controller ".polys"
jump 326 lessThan *tmp98 5
set :buildBlockFromCfg:cfg "+(###A<###"
set :buildBlockFromCfg:config @silicon
set :buildBlockFromCfg*retaddr 334
jump 901 always 0 0
write :buildBlockFromCfg*retval .controller ".unloader6"
set :buildBlockFromCfg.1:cfg "X+''%######"
set :buildBlockFromCfg.1*retaddr 338
jump 922 always 0 0
set :buildBlockFromCfg.1:cfg ".&#ʭ#ǥƁ#ʭ#"
set :buildBlockFromCfg.1*retaddr 341
jump 922 always 0 0
write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
set :buildUnits*retaddr 345
jump 942 always 0 0
read *tmp99 .controller ".megas"
jump 351 greaterThanEq *tmp99 1
set :supplyBase*retaddr 349
jump 556 always 0 0
read *tmp99 .controller ".megas"
jump 347 lessThan *tmp99 1
control enabled processor7 false 0 0 0
control enabled processor8 false 0 0 0
control enabled processor3 false 0 0 0
control enabled processor4 false 0 0 0
control enabled processor5 false 0 0 0
set :flagUnits:unit @mega
set :flagUnits*retaddr 359
jump 958 always 0 0
set :flagUnits:unit @poly
set :flagUnits*retaddr 362
jump 958 always 0 0
set :flagUnits:unit @mono
set :flagUnits*retaddr 365
jump 958 always 0 0
set :flagUnits:unit @flare
set :flagUnits*retaddr 368
jump 958 always 0 0
op sub :lineUpUnits:y @thisy 6
ubind @mega
set :lineUpUnits:firstUnit @unit
sensor :lineUpUnits:x @unit @flag
ucontrol itemDrop @air 1000 0 0 0
ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0
sensor *tmp486 @unit @mining
jump 377 equal *tmp486 false
ucontrol stop 0 0 0 0 0
ubind @mega
jump 371 notEqual @unit :lineUpUnits:firstUnit
op sub :lineUpUnits:y @thisy 10
set :lineUpUnits:unit @poly
set :lineUpUnits*retaddr 383
jump 967 always 0 0
op sub :lineUpUnits:y @thisy 14
set :lineUpUnits:unit @mono
set :lineUpUnits*retaddr 387
jump 967 always 0 0
op sub :lineUpUnits:y @thisy 18
set :lineUpUnits:unit @flare
set :lineUpUnits*retaddr 391
jump 967 always 0 0
jump 368 always 0 0
op min :mineOre:amount :mineOre:amount 30
write :mineOre:amount .display ".transportTarget"
write :mineOre:ore .display ".transportItem"
ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp259 0
jump 399 notEqual *tmp259 false
set .ERROR "Cannot locate ore"
stop
write "Moving..." .display ".status3"
sensor *tmp240 @unit @firstItem
jump 403 equal *tmp240 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach :locateOre:x :locateOre:y 5.5 0 0
ucontrol within :locateOre:x :locateOre:y 6 *tmp243 0
jump 400 equal *tmp243 false
sensor *tmp264 @unit @firstItem
jump 413 equal *tmp264 :mineOre:ore
sensor *tmp245 @unit @firstItem
jump 413 equal *tmp245 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp245 @unit @firstItem
jump 410 notEqual *tmp245 null
write "Mining..." .display ".status3"
op add :mineOre:stop @second 10
sensor :mineOre:item @unit @firstItem
op notEqual *tmp269 :mineOre:item null
op notEqual *tmp270 :mineOre:item :mineOre:ore
op land *tmp271 *tmp269 *tmp270
jump 424 notEqual *tmp271 false
ucontrol mine :locateOre:x :locateOre:y 0 0 0
jump 424 greaterThan @second :mineOre:stop
sensor *tmp275 @unit @totalItems
jump 415 lessThan *tmp275 :mineOre:amount
ucontrol unbind 0 0 0 0 0
write "Depositing..." .display ".status3"
sensor *tmp249 @unit @firstItem
jump 443 notEqual *tmp249 :mineOre:ore
sensor *tmp247 :mineOre:block @x
sensor *tmp248 :mineOre:block @y
write "Moving..." .display ".status3"
ucontrol within *tmp247 *tmp248 6 *tmp235 0
jump 436 notEqual *tmp235 false
ucontrol approach *tmp247 *tmp248 5.5 0 0
ucontrol within *tmp247 *tmp248 6 *tmp235 0
jump 433 equal *tmp235 false
sensor :depositItems:cap :mineOre:block @itemCapacity
ucontrol itemDrop :mineOre:block 30 0 0 0
sensor *tmp253 @unit @firstItem
op mul *tmp254 *tmp253 :depositItems:cap
sensor *tmp255 :mineOre:block :mineOre:ore
jump 437 greaterThan *tmp254 *tmp255
jump 448 always 0 0
sensor *tmp257 @unit @firstItem
jump 448 equal *tmp257 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp257 @unit @firstItem
jump 445 notEqual *tmp257 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set @counter :mineOre*retaddr
write "Mining " .display ".status2"
write :mineOre.1:ore .display ".item2"
write "core" .display ".block2"
set :mineOre:ore :mineOre.1:ore
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 459
jump 392 always 0 0
set @counter :mineOre.1*retaddr
sensor *tmp278 :fetchBlock:block @itemCapacity
op min :transportStatus:target *tmp278 30
write :transportStatus:target .display ".transportTarget"
write :fetchBlock:item .display ".transportItem"
write "Fetching " .display ".status2"
write :fetchBlock:item .display ".item2"
write :fetchBlock:block .display ".block2"
sensor *tmp280 :fetchBlock:block @x
sensor *tmp281 :fetchBlock:block @y
write "Moving..." .display ".status3"
sensor *tmp240 @unit @firstItem
jump 473 equal *tmp240 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach *tmp280 *tmp281 5.5 0 0
ucontrol within *tmp280 *tmp281 6 *tmp243 0
jump 470 equal *tmp243 false
sensor *tmp245 @unit @firstItem
jump 481 equal *tmp245 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp245 @unit @firstItem
jump 478 notEqual *tmp245 null
ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0
sensor :fetchBlock:unitItem @unit @firstItem
op notEqual *tmp283 :fetchBlock:unitItem null
op notEqual *tmp284 :fetchBlock:unitItem :fetchBlock:item
op land *tmp285 *tmp283 *tmp284
jump 488 equal *tmp285 false
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp287 @unit :fetchBlock:item
op lessThan *tmp288 *tmp287 30
sensor *tmp289 :fetchBlock:block :fetchBlock:item
op land *tmp290 *tmp288 *tmp289
jump 481 notEqual *tmp290 false
write "Depositing..." .display ".status3"
sensor *tmp249 @unit @firstItem
jump 511 notEqual *tmp249 :fetchBlock:item
sensor *tmp247 .core @x
sensor *tmp248 .core @y
write "Moving..." .display ".status3"
ucontrol within *tmp247 *tmp248 6 *tmp235 0
jump 504 notEqual *tmp235 false
ucontrol approach *tmp247 *tmp248 5.5 0 0
ucontrol within *tmp247 *tmp248 6 *tmp235 0
jump 501 equal *tmp235 false
sensor :depositItems:cap .core @itemCapacity
ucontrol itemDrop .core 30 0 0 0
sensor *tmp253 @unit @firstItem
op mul *tmp254 *tmp253 :depositItems:cap
sensor *tmp255 .core :fetchBlock:item
jump 505 greaterThan *tmp254 *tmp255
jump 516 always 0 0
sensor *tmp257 @unit @firstItem
jump 516 equal *tmp257 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp257 @unit @firstItem
jump 513 notEqual *tmp257 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set @counter :fetchBlock*retaddr
write "Supplying " .display ".status2"
write :supplyBlock:ore .display ".item2"
write :supplyBlock:block .display ".block2"
sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
sensor *tmp292 :supplyBlock:block :supplyBlock:ore
op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp292
jump 531 lessThanEq :supplyBlock:missing 0
set :mineOre:ore :supplyBlock:ore
set :mineOre:amount :supplyBlock:blockCapacity
set :mineOre:block :supplyBlock:block
set :mineOre*retaddr 531
jump 392 always 0 0
set @counter :supplyBlock*retaddr
read *tmp308 :unpackCfg:cfg 0
op sub *tmp309 *tmp308 35
lookup block :unpackCfg:type *tmp309
read *tmp312 :unpackCfg:cfg 1
op sub :unpackCfg:x *tmp312 42
read *tmp316 :unpackCfg:cfg 2
op sub :unpackCfg:y *tmp316 42
read *tmp320 :unpackCfg:cfg 3
op sub :unpackCfg:cu *tmp320 35
read *tmp323 :unpackCfg:cfg 4
op sub :unpackCfg:pb *tmp323 35
read *tmp326 :unpackCfg:cfg 5
op sub :unpackCfg:gr *tmp326 35
read *tmp329 :unpackCfg:cfg 6
op sub :unpackCfg:si *tmp329 35
read *tmp332 :unpackCfg:cfg 7
op sub :unpackCfg:ti *tmp332 35
read *tmp335 :unpackCfg:cfg 8
op sub :unpackCfg:mg *tmp335 35
read *tmp338 :unpackCfg:cfg 9
op sub :unpackCfg:th *tmp338 35
read *tmp341 :unpackCfg:cfg 10
op sub :unpackCfg:rotation *tmp341 35
set @counter :unpackCfg*retaddr
sensor *tmp343 .core @silicon
op sub *tmp344 .targetSilicon *tmp343
op max *tmp345 0 *tmp344
write *tmp345 processor8 ".monoSandTarget"
jump 640 equal .thoriumContainer false
write "Phase 2: servicing thorium drill" .display ".status1"
sensor *tmp347 .core @coal
jump 579 greaterThanEq *tmp347 50
set :supplyBlock:block .thoriumGenerator
set :supplyBlock:ore @coal
write "Supplying " .display ".status2"
write @coal .display ".item2"
write .thoriumGenerator .display ".block2"
sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
sensor *tmp292 .thoriumGenerator @coal
op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp292
jump 635 lessThanEq :supplyBlock:missing 0
set :mineOre:ore @coal
set :mineOre:amount :supplyBlock:blockCapacity
set :mineOre:block .thoriumGenerator
set :mineOre*retaddr 578
jump 392 always 0 0
jump 635 always 0 0
sensor *tmp296 .thoriumGenerator @itemCapacity
op min :transportStatus:target *tmp296 30
write :transportStatus:target .display ".transportTarget"
write @coal .display ".transportItem"
write "Transferring " .display ".status2"
write @coal .display ".item2"
write .thoriumGenerator .display ".block2"
write "Moving..." .display ".status3"
sensor *tmp240 @unit @firstItem
jump 590 equal *tmp240 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach .coreX .coreY 5.5 0 0
ucontrol within .coreX .coreY 6 *tmp243 0
jump 587 equal *tmp243 false
sensor *tmp245 @unit @firstItem
jump 598 equal *tmp245 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp245 @unit @firstItem
jump 595 notEqual *tmp245 null
ucontrol itemTake .core @coal 30 0 0
sensor :supplyBlockFromCore:unitItem @unit @firstItem
op notEqual *tmp299 :supplyBlockFromCore:unitItem null
op notEqual *tmp300 :supplyBlockFromCore:unitItem @coal
op land *tmp301 *tmp299 *tmp300
jump 605 equal *tmp301 false
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp303 @unit @coal
op lessThan *tmp304 *tmp303 30
sensor *tmp305 .core @coal
op land *tmp306 *tmp304 *tmp305
jump 598 notEqual *tmp306 false
write "Depositing..." .display ".status3"
sensor *tmp249 @unit @firstItem
jump 628 notEqual *tmp249 @coal
sensor *tmp247 .thoriumGenerator @x
sensor *tmp248 .thoriumGenerator @y
write "Moving..." .display ".status3"
ucontrol within *tmp247 *tmp248 6 *tmp235 0
jump 621 notEqual *tmp235 false
ucontrol approach *tmp247 *tmp248 5.5 0 0
ucontrol within *tmp247 *tmp248 6 *tmp235 0
jump 618 equal *tmp235 false
sensor :depositItems:cap .thoriumGenerator @itemCapacity
ucontrol itemDrop .thoriumGenerator 30 0 0 0
sensor *tmp253 @unit @firstItem
op mul *tmp254 *tmp253 :depositItems:cap
sensor *tmp255 .thoriumGenerator @coal
jump 622 greaterThan *tmp254 *tmp255
jump 633 always 0 0
sensor *tmp257 @unit @firstItem
jump 633 equal *tmp257 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp257 @unit @firstItem
jump 630 notEqual *tmp257 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set :fetchBlock:block .thoriumContainer
set :fetchBlock:item @thorium
set :fetchBlock*retaddr 639
jump 460 always 0 0
set @counter :supplyBase*retaddr
read *tmp97 .controller ".monos"
jump 653 lessThanEq *tmp97 3
write "Phase 1: supplying base" .display ".status1"
set :mineOre.1:ore @coal
write "Mining " .display ".status2"
write @coal .display ".item2"
write "core" .display ".block2"
set :mineOre:ore @coal
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 652
jump 392 always 0 0
set @counter :supplyBase*retaddr
set :supplyBase0:supplied false
jump 704 notEqual .unloader1 null
sensor *tmp354 .core @graphite
jump 675 greaterThanEq *tmp354 .targetGraphite
sensor *tmp357 .press @coal
jump 675 greaterThanEq *tmp357 5
write "Goal 1: graphite requirement" .display ".status1"
set :supplyBlock:block .press
set :supplyBlock:ore @coal
write "Supplying " .display ".status2"
write @coal .display ".item2"
write .press .display ".block2"
sensor :supplyBlock:blockCapacity .press @itemCapacity
sensor *tmp292 .press @coal
op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp292
jump 674 lessThanEq :supplyBlock:missing 0
set :mineOre:ore @coal
set :mineOre:amount :supplyBlock:blockCapacity
set :mineOre:block .press
set :mineOre*retaddr 674
jump 392 always 0 0
set :supplyBase0:supplied true
sensor *tmp360 .core @silicon
jump 694 greaterThanEq *tmp360 .targetSilicon
sensor *tmp363 .smelter @coal
jump 686 greaterThanEq *tmp363 5
write "Goal 2: coal for silicon requirement" .display ".status1"
set :supplyBlock:block .smelter
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 684
jump 519 always 0 0
set :supplyBase0:supplied true
jump 694 always 0 0
sensor *tmp366 .smelter @sand
jump 694 greaterThanEq *tmp366 5
write "Goal 3: sand for silicon requirement" .display ".status1"
set :supplyBlock:block .smelter
set :supplyBlock:ore @sand
set :supplyBlock*retaddr 693
jump 519 always 0 0
set :supplyBase0:supplied true
sensor *tmp369 .battery @totalPower
jump 704 greaterThanEq *tmp369 .powerTarget
sensor *tmp372 .generator @coal
jump 704 greaterThanEq *tmp372 2
write "Goal 4: supplying generator" .display ".status1"
set :supplyBlock:block .generator
set :supplyBlock:ore @coal
set :supplyBlock*retaddr 703
jump 519 always 0 0
set :supplyBase0:supplied true
set *tmp377 100
sensor *tmp375 .core @titanium
jump 710 greaterThanEq *tmp375 .targetTitanium
sensor *tmp378 .core @titanium
op sub *tmp379 .targetTitanium *tmp378
op min *tmp377 7 *tmp379
sensor *tmp381 .titaniumDrill @titanium
jump 768 greaterThanEq *tmp381 *tmp377
jump 773 notEqual :supplyBase0:supplied false
sensor *tmp386 .battery @totalPower
op mul *tmp387 .unloader1 .powerTarget
jump 727 greaterThanEq *tmp386 *tmp387
write "Goal 5: supplying generator" .display ".status1"
set :mineOre.1:ore @coal
write "Mining " .display ".status2"
write @coal .display ".item2"
write "core" .display ".block2"
set :mineOre:ore @coal
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 726
jump 392 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp390 .core @silicon
jump 738 greaterThanEq *tmp390 .targetSilicon
write "Goal 6: silicon requirement" .display ".status1"
sensor :supplyBase0:coal .core @coal
sensor :supplyBase0:sand .core @sand
set :mineOre.1:ore @sand
jump 735 greaterThanEq :supplyBase0:coal :supplyBase0:sand
set :mineOre.1:ore @coal
set :mineOre.1*retaddr 737
jump 451 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp397 .core @copper
jump 745 greaterThanEq *tmp397 .targetCopper
write "Goal 7: copper requirement" .display ".status1"
set :mineOre.1:ore @copper
set :mineOre.1*retaddr 744
jump 451 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp400 .core @lead
jump 752 greaterThanEq *tmp400 .targetLead
write "Goal 8: lead requirement" .display ".status1"
set :mineOre.1:ore @lead
set :mineOre.1*retaddr 751
jump 451 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp403 .core @metaglass
jump 759 greaterThanEq *tmp403 .targetMetaglass
write "Goal 9: metaglass requirement" .display ".status1"
set :mineOre.1:ore @sand
set :mineOre.1*retaddr 758
jump 451 always 0 0
set @counter :supplyBase*retaddr
write "Goal 10: supplying base" .display ".status1"
sensor :supplyBase0:coal.1 .core @coal
sensor :supplyBase0:sand.1 .core @sand
set :mineOre.1:ore @sand
jump 765 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
set :mineOre.1:ore @coal
set :mineOre.1*retaddr 767
jump 451 always 0 0
set @counter :supplyBase*retaddr
write "Goal 11: Fetching titanium" .display ".status1"
set :fetchBlock:block .titaniumDrill
set :fetchBlock:item @titanium
set :fetchBlock*retaddr 773
jump 460 always 0 0
set @counter :supplyBase*retaddr
op sign :meetTarget:count :meetTarget:copper 0
op sign *tmp411 :meetTarget:lead 0
op add :meetTarget:count :meetTarget:count *tmp411
op sign *tmp411 :meetTarget:graphite 0
op add :meetTarget:count :meetTarget:count *tmp411
op sign *tmp411 :meetTarget:silicon 0
op add :meetTarget:count :meetTarget:count *tmp411
op sign *tmp411 :meetTarget:titanium 0
op add :meetTarget:count :meetTarget:count *tmp411
op sign *tmp411 :meetTarget:metaglass 0
op add :meetTarget:count :meetTarget:count *tmp411
op sign *tmp411 :meetTarget:thorium 0
op add :meetTarget:count :meetTarget:count *tmp411
write :meetTarget:count .display ".totalTargets"
write :meetTarget:block .display ".nextBlock"
write :meetTarget:copper .display ".targetCopper"
write :meetTarget:lead .display ".targetLead"
write :meetTarget:graphite .display ".targetGraphite"
write :meetTarget:silicon .display ".targetSilicon"
write :meetTarget:titanium .display ".targetTitanium"
write :meetTarget:metaglass .display ".targetMetaglass"
write :meetTarget:thorium .display ".targetThorium"
set .targetCopper :meetTarget:copper
op add *tmp412 :meetTarget:lead .leadSurplus
op add .targetLead *tmp412 1
set .targetGraphite :meetTarget:graphite
set .targetSilicon :meetTarget:silicon
set .targetTitanium :meetTarget:titanium
set .targetMetaglass :meetTarget:metaglass
set .targetThorium :meetTarget:thorium
op add *tmp414 :meetTarget:graphite .graphiteSurplus
write *tmp414 .controller ".pressTarget"
op add *tmp415 :meetTarget:silicon .siliconSurplus
write *tmp415 .controller ".smelterTarget"
op add *tmp416 :meetTarget:metaglass .metaglassSurplus
write *tmp416 .controller ".kilnTarget"
write *tmp412 .controller ".leadReserve"
op sign *tmp418 :meetTarget:silicon 0
op mul *tmp419 *tmp418 20
op add *tmp420 :meetTarget:silicon *tmp419
write *tmp420 .controller ".siliconReserve"
op sign *tmp421 :meetTarget:graphite 0
op mul *tmp422 *tmp421 20
op add *tmp423 :meetTarget:graphite *tmp422
write *tmp423 .controller ".graphiteReserve"
write .targetLead processor8 ".monoLeadTarget"
write :meetTarget:copper processor8 ".monoCopperTarget"
sensor *tmp425 .core @copper
jump 825 greaterThanEq *tmp425 .targetCopper
set *tmp424 false
jump 851 always 0 0
sensor *tmp428 .core @lead
jump 829 greaterThanEq *tmp428 .targetLead
set *tmp424 false
jump 851 always 0 0
sensor *tmp431 .core @graphite
jump 833 greaterThanEq *tmp431 .targetGraphite
set *tmp424 false
jump 851 always 0 0
sensor *tmp434 .core @silicon
jump 837 greaterThanEq *tmp434 .targetSilicon
set *tmp424 false
jump 851 always 0 0
sensor *tmp437 .core @titanium
jump 841 greaterThanEq *tmp437 .targetTitanium
set *tmp424 false
jump 851 always 0 0
sensor *tmp440 .core @metaglass
jump 845 greaterThanEq *tmp440 .targetMetaglass
set *tmp424 false
jump 851 always 0 0
sensor *tmp443 .core @thorium
jump 849 greaterThanEq *tmp443 .targetThorium
set *tmp424 false
jump 851 always 0 0
set *tmp424 true
jump 851 always 0 0
jump 855 notEqual *tmp424 false
set :supplyBase*retaddr 854
jump 556 always 0 0
jump 821 always 0 0
set @counter :meetTarget*retaddr
set :meetTarget:block :buildBlock:block
set :meetTarget:copper :buildBlock:copper
set :meetTarget:lead :buildBlock:lead
set :meetTarget:graphite :buildBlock:graphite
set :meetTarget:silicon :buildBlock:silicon
set :meetTarget:titanium :buildBlock:titanium
set :meetTarget:metaglass :buildBlock:metaglass
set :meetTarget:thorium :buildBlock:thorium
set :meetTarget*retaddr 866
jump 774 always 0 0
write :buildBlock:block .blockBuilder ":buildBlockAt:block"
write :buildBlock:x .blockBuilder ":buildBlockAt:x"
write :buildBlock:y .blockBuilder ":buildBlockAt:y"
write :buildBlock:rotation .blockBuilder ":buildBlockAt:rotation"
write :buildBlock:config .blockBuilder ":buildBlockAt:config"
write false .blockBuilder ":buildBlockAt*finished"
write 1 .blockBuilder "@counter"
wait 1e-15
read *tmp467 .blockBuilder ":buildBlockAt*finished"
jump 873 equal *tmp467 false
read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
set @counter :buildBlock*retaddr
op add *tmp469 :buildRemoteBlock:x :buildRemoteBlock:y
jump 899 lessThanEq *tmp469 0
set :unpackCfg:cfg :buildRemoteBlock:cfg
set :unpackCfg*retaddr 883
jump 532 always 0 0
set :buildBlock:block :unpackCfg:type
set :buildBlock:x :buildRemoteBlock:x
set :buildBlock:y :buildRemoteBlock:y
set :buildBlock:copper :unpackCfg:cu
set :buildBlock:lead :unpackCfg:pb
set :buildBlock:graphite :unpackCfg:gr
set :buildBlock:silicon :unpackCfg:si
set :buildBlock:titanium :unpackCfg:ti
set :buildBlock:metaglass :unpackCfg:mg
set :buildBlock:thorium :unpackCfg:th
set :buildBlock:rotation :unpackCfg:rotation
set :buildBlock:config null
set :buildBlock*retaddr 897
jump 856 always 0 0
set :buildRemoteBlock*retval :buildBlock*retval
set @counter :buildRemoteBlock*retaddr
set :buildRemoteBlock*retval false
set @counter :buildRemoteBlock*retaddr
set :unpackCfg:cfg :buildBlockFromCfg:cfg
set :unpackCfg*retaddr 904
jump 532 always 0 0
op add *tmp472 .coreX :unpackCfg:x
op add *tmp473 .coreY :unpackCfg:y
set :buildBlock:block :unpackCfg:type
set :buildBlock:x *tmp472
set :buildBlock:y *tmp473
set :buildBlock:copper :unpackCfg:cu
set :buildBlock:lead :unpackCfg:pb
set :buildBlock:graphite :unpackCfg:gr
set :buildBlock:silicon :unpackCfg:si
set :buildBlock:titanium :unpackCfg:ti
set :buildBlock:metaglass :unpackCfg:mg
set :buildBlock:thorium :unpackCfg:th
set :buildBlock:rotation :unpackCfg:rotation
set :buildBlock:config :buildBlockFromCfg:config
set :buildBlock*retaddr 920
jump 856 always 0 0
set :buildBlockFromCfg*retval :buildBlock*retval
set @counter :buildBlockFromCfg*retaddr
set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
set :buildBlockFromCfg:config null
set :buildBlockFromCfg*retaddr 926
jump 901 always 0 0
set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
set @counter :buildBlockFromCfg.1*retaddr
set :unpackCfg:cfg :meetTarget.1:cfg
set :unpackCfg*retaddr 931
jump 532 always 0 0
set :meetTarget:block :unpackCfg:type
set :meetTarget:copper :unpackCfg:cu
set :meetTarget:lead :unpackCfg:pb
set :meetTarget:graphite :unpackCfg:gr
set :meetTarget:silicon :unpackCfg:si
set :meetTarget:titanium :unpackCfg:ti
set :meetTarget:metaglass :unpackCfg:mg
set :meetTarget:thorium :unpackCfg:th
set :meetTarget*retaddr 941
jump 774 always 0 0
set @counter :meetTarget.1*retaddr
set :meetTarget:block 0
set :meetTarget:copper 0
set :meetTarget:lead 0
set :meetTarget:graphite 0
set :meetTarget:silicon 0
set :meetTarget:titanium 0
set :meetTarget:metaglass 0
set :meetTarget:thorium 0
set :meetTarget*retaddr 952
jump 774 always 0 0
write 0 .display ".totalTargets"
write null .display ".nextBlock"
write 0 .controller ".leadReserve"
write 0 .controller ".siliconReserve"
write 0 .controller ".graphiteReserve"
set @counter :buildUnits*retaddr
ubind :flagUnits:unit
set :flagUnits:firstUnit @unit
jump 958 equal :flagUnits:firstUnit null
set :flagUnits:x @thisx
ucontrol flag :flagUnits:x 0 0 0 0
op add :flagUnits:x :flagUnits:x 4
ubind :flagUnits:unit
jump 962 notEqual @unit :flagUnits:firstUnit
set @counter :flagUnits*retaddr
ubind :lineUpUnits:unit
set :lineUpUnits:firstUnit @unit
sensor :lineUpUnits:x @unit @flag
ucontrol itemDrop @air 1000 0 0 0
ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0
sensor *tmp486 @unit @mining
jump 975 equal *tmp486 false
ucontrol stop 0 0 0 0 0
ubind :lineUpUnits:unit
jump 969 notEqual @unit :lineUpUnits:firstUnit
set @counter :lineUpUnits*retaddr
print "Compiled by Mindcode - github.com/cardillan/mindcode"

