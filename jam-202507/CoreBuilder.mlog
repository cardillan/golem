jump 22 always 0 0
draw triangle bank1 processor1 processor2 processor3 processor4 .ERROR
draw triangle .battery .controller .core .coreX .coreY .display
draw triangle .generator .graphiteSurplus .metaglassSurplus .phase .powerTarget .press
draw triangle .siliconSurplus .smelter .targetCopper .targetGraphite .targetLead .targetMetaglass
draw triangle .targetSilicon .targetTitanium .titaniumDrill .unloader1 :flares :monos
draw triangle :polys :thoriumDrill :buildBlock:block :buildBlock:config :buildBlock:copper :buildBlock:graphite
draw triangle :buildBlock:lead :buildBlock:metaglass :buildBlock:rotation :buildBlock:silicon :buildBlock:titanium :buildBlock:x
draw triangle :buildBlock:y :buildBlockAt:block :buildBlockAt:building :buildBlockAt:config :buildBlockAt:rotation :buildBlockAt:skipError
draw triangle :buildBlockAt:type :buildBlockAt:x :buildBlockAt:y :buildBlockFromCfg.10:x :buildBlockFromCfg.14:x :buildBlockFromCfg:x
draw triangle :buildBlockFromCfg.9:x :buildBlockFromCfg.4:x :buildBlockFromCfg.7:x :buildBlockFromCfg.11:x :buildBlockFromCfg.6:x :buildBlockFromCfg.2:x
draw triangle :buildBlockFromCfg.5:y :buildBlockFromCfg.1:y :buildBlockFromCfg:y :buildBlockFromCfg.8:y :buildBlockFromCfg.3:y :buildBlockFromCfg.7:y
draw triangle :buildTitaniumDrill:dx :buildTitaniumDrill:dy :buildTitaniumDrill:result :depositItems:block :depositItems:cap :depositItems:item
draw triangle :fetchBlock:block :fetchBlock:item :fetchBlock:unitItem :findUnits:count :findUnits:firstUnit :findUnits:type
draw triangle :locateOre:ore :locateOre:x :locateOre:y :log:encodedId :logBlock:block :meetTarget:block
draw triangle :meetTarget:copper :meetTarget:count :meetTarget:graphite :meetTarget:lead :meetTarget:metaglass :meetTarget:silicon
draw triangle :meetTarget:titanium :mineOre:amount :mineOre:block :mineOre:item :mineOre.1:ore :mineOre:ore
draw triangle :mineOre:stop :mineOre:x :mineOre:y :moveTo:radius :moveTo.1:x :moveTo:x
draw triangle :moveTo.1:y :moveTo:y :moveToBlock:block :moveToBlock:radius :moveToEmpty:x :moveToEmpty:y
draw triangle :supplyBase0:coal.1 :supplyBase0:coal :supplyBase0:sand.1 :supplyBase0:sand :supplyBase0:supplied :supplyBlock.3:blockCapacity
draw triangle :supplyBlock:blockCapacity :supplyBlock.1:blockCapacity :supplyBlock.2:blockCapacity :supplyBlock.1:missing :supplyBlock:missing :supplyBlock.2:missing
draw triangle :supplyBlock.3:missing :transportStatus.2:target 0 0 0 0
set .ERROR ""
read *tmp63 processor4 "*signature"
jump 23 notEqual *tmp63 "56ce045a33d85ce5:v1"
set .press null
set .generator null
set .battery null
set .smelter null
set .titaniumDrill null
set .unloader1 null
set .phase 0
set .graphiteSurplus 20
set .siliconSurplus 20
set .metaglassSurplus 20
write 511 bank1 511
ubind @poly
ulocate building core false @copper .coreX .coreY 0 .core
jump 36 equal .core null
set .display processor1
set :findUnits:type @mono
set :findUnits*retaddr 43
jump 769 always 0 0
write :findUnits:count processor1 ".monos"
set :monos :findUnits*retval
set :findUnits:type @flare
set :findUnits*retaddr 48
jump 769 always 0 0
write :findUnits:count processor1 ".flares"
set :flares :findUnits*retval
set :findUnits:type @poly
set :findUnits*retaddr 53
jump 769 always 0 0
write :findUnits:count processor1 ".polys"
set :polys :findUnits*retval
op add :buildBlockFromCfg:x .coreX -1.5
op add :buildBlockFromCfg:y .coreY 2.5
set :buildBlock:block @graphite-press
set :buildBlock:x :buildBlockFromCfg:x
set :buildBlock:y :buildBlockFromCfg:y
set :buildBlock:copper 75
set :buildBlock:lead 30
set :buildBlock:graphite 0
set :buildBlock:silicon 0
set :buildBlock:titanium 0
set :buildBlock:metaglass 0
set :buildBlock:rotation 0
set :buildBlock:config null
set :buildBlock*retaddr 70
jump 750 always 0 0
set *tmp74 :buildBlock*retval
set .press *tmp74
op add :buildBlockFromCfg.1:y .coreY 4
set :buildBlock:block @battery
set :buildBlock:x .coreX
set :buildBlock:y :buildBlockFromCfg.1:y
set :buildBlock:copper 5
set :buildBlock:lead 20
set :buildBlock*retaddr 80
jump 750 always 0 0
set *tmp78 :buildBlock*retval
set .battery *tmp78
op add :buildBlockFromCfg.2:x .coreX -1
set :buildBlock:x :buildBlockFromCfg.2:x
set :buildBlock:y :buildBlockFromCfg.1:y
set :buildBlock*retaddr 87
jump 750 always 0 0
op add :buildBlockFromCfg.3:y .coreY 3
set :buildBlock:block @combustion-generator
set :buildBlock:x .coreX
set :buildBlock:y :buildBlockFromCfg.3:y
set :buildBlock:copper 25
set :buildBlock:lead 15
set :buildBlock*retaddr 95
jump 750 always 0 0
set *tmp86 :buildBlock*retval
set .generator *tmp86
set .powerTarget 800
op add :buildBlockFromCfg.4:x .coreX 1.5
set :buildBlock:block @silicon-smelter
set :buildBlock:x :buildBlockFromCfg.4:x
set :buildBlock:y :buildBlockFromCfg:y
set :buildBlock:copper 30
set :buildBlock:lead 25
set :buildBlock*retaddr 106
jump 750 always 0 0
set *tmp90 :buildBlock*retval
set .smelter *tmp90
set :meetTarget:block @pneumatic-drill
set :meetTarget:copper 18
set :meetTarget:lead 0
set :meetTarget:graphite 10
set :meetTarget:silicon 0
set :meetTarget:titanium 0
set :meetTarget:metaglass 0
set :meetTarget*retaddr 117
jump 663 always 0 0
write .coreX processor4 ":findDrillLocation:x"
write .coreY processor4 ":findDrillLocation:y"
write @unit processor4 ":findDrillLocation:unit"
write @titanium processor4 ":findDrillLocation:item"
write @ore-titanium processor4 ":findDrillLocation:ore"
write false processor4 ":findDrillLocation:large"
write 4 processor4 ":findDrillLocation:limit"
write false processor4 ":findDrillLocation*finished"
write 1 processor4 "@counter"
wait 1e-15
read *tmp95 processor4 ":findDrillLocation*finished"
jump 126 equal *tmp95 false
read :buildTitaniumDrill:dx processor4 ":findDrillLocation:dx"
read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
jump 135 notEqual :buildTitaniumDrill:result false
set .ERROR "Cannot locate spot for titanium drill"
stop
set :buildBlockAt:block @pneumatic-drill
set :buildBlockAt:x :buildTitaniumDrill:dx
set :buildBlockAt:y :buildTitaniumDrill:dy
set :buildBlockAt:rotation null
set :buildBlockAt:config 0
set :buildBlockAt:skipError false
set :buildBlockAt*retaddr 143
jump 723 always 0 0
set .titaniumDrill :buildBlockAt*retval
write :buildBlockAt*retval processor1 ".titaniumDrill"
write .core processor3 ".core"
write :buildBlockAt*retval processor3 ".drill"
op add :buildBlockFromCfg.5:y .coreY 2
set :buildBlock:block @unloader
set :buildBlock:x .coreX
set :buildBlock:y :buildBlockFromCfg.5:y
set :buildBlock:copper 0
set :buildBlock:lead 0
set :buildBlock:silicon 30
set :buildBlock:titanium 25
set :buildBlock*retaddr 157
jump 750 always 0 0
set *tmp99 :buildBlock*retval
set .unloader1 *tmp99
op add :buildBlockFromCfg.6:x .coreX 1
set :buildBlock:block @micro-processor
set :buildBlock:x :buildBlockFromCfg.6:x
set :buildBlock:y :buildBlockFromCfg.1:y
set :buildBlock:copper 90
set :buildBlock:lead 50
set :buildBlock:silicon 50
set :buildBlock:titanium 0
set :buildBlock*retaddr 170
set :buildBlock:config processor2
jump 750 always 0 0
set *tmp103 :buildBlock*retval
set .controller *tmp103
write processor1 *tmp103 ".display"
write .core *tmp103 ".core"
write bank1 *tmp103 ".bank"
write *tmp78 *tmp103 ".battery"
write *tmp86 *tmp103 ".generator"
write *tmp90 *tmp103 ".smelter"
write *tmp74 *tmp103 ".press"
write :monos *tmp103 ".monos"
write :flares *tmp103 ".flares"
write :polys *tmp103 ".polys"
op add :buildBlockFromCfg.7:x .coreX -2
op add :buildBlockFromCfg.7:y .coreY -1
set :buildBlock:block @power-node
set :buildBlock:x :buildBlockFromCfg.7:x
set :buildBlock:y :buildBlockFromCfg.7:y
set :buildBlock:copper 2
set :buildBlock:lead 6
set :buildBlock:silicon 0
set :buildBlock:config null
set :buildBlock*retaddr 193
jump 750 always 0 0
op add :buildBlockFromCfg.8:y .coreY 1
set :buildBlock:block @unloader
set :buildBlock:x :buildBlockFromCfg.7:x
set :buildBlock:y :buildBlockFromCfg.8:y
set :buildBlock:copper 0
set :buildBlock:lead 0
set :buildBlock:silicon 30
set :buildBlock:titanium 25
set :buildBlock*retaddr 203
jump 750 always 0 0
set *tmp111 :buildBlock*retval
write *tmp111 *tmp103 ".unloader2"
op add :buildBlockFromCfg.9:x .coreX -3
set :buildBlock:block @overflow-gate
set :buildBlock:x :buildBlockFromCfg.9:x
set :buildBlock:y :buildBlockFromCfg.8:y
set :buildBlock:copper 4
set :buildBlock:lead 2
set :buildBlock:silicon 0
set :buildBlock:titanium 0
set :buildBlock*retaddr 215
jump 750 always 0 0
op add :buildBlockFromCfg.10:x .coreX -4
set :buildBlock:block @air-factory
set :buildBlock:x :buildBlockFromCfg.10:x
set :buildBlock:y :buildBlockFromCfg.7:y
set :buildBlock:copper 60
set :buildBlock:lead 70
set :buildBlock:rotation 3
set :buildBlock:config @mono
set :buildBlock*retaddr 225
jump 750 always 0 0
set *tmp119 :buildBlock*retval
write *tmp119 *tmp103 ".factory"
write *tmp119 processor1 ".factory"
write 2 *tmp103 ".flareTarget"
write 0 processor1 ".totalTargets"
write null processor1 ".nextBlock"
write 0 *tmp103 ".leadReserve"
write 0 *tmp103 ".siliconReserve"
write @flare *tmp103 ".unitToProduce"
set .phase 1
write 85 *tmp103 ".pressTarget"
write 150 *tmp103 ".smelterTarget"
write 30 *tmp103 ".kilnTarget"
set :thoriumDrill true
read *tmp35 *tmp103 ".flares"
op greaterThan *tmp124 *tmp35 1
op land *tmp125 :thoriumDrill *tmp124
jump 244 equal *tmp125 false
set :thoriumDrill false
set :supplyBase1*retaddr 246
jump 610 always 0 0
sensor *tmp127 *tmp78 @totalPower
jump 250 lessThan *tmp127 300
read *tmp34 *tmp103 ".monos"
jump 239 lessThan *tmp34 3
op add :buildBlockFromCfg.11:x .coreX 2
set :buildBlock:y .coreY
set :buildBlock:block @unloader
set :buildBlock:x :buildBlockFromCfg.11:x
set :buildBlock:copper 0
set :buildBlock:lead 0
set :buildBlock:silicon 30
set :buildBlock:titanium 25
set :buildBlock:rotation 0
set :buildBlock:config null
set :buildBlock*retaddr 262
jump 750 always 0 0
op add :buildBlock:x .coreX 3.5
op add :buildBlock:y .coreY 0.5
set :buildBlock:block @kiln
set :buildBlock:copper 60
set :buildBlock:lead 30
set :buildBlock:graphite 30
set :buildBlock:silicon 0
set :buildBlock:titanium 0
set :buildBlock*retaddr 272
jump 750 always 0 0
set *tmp135 :buildBlock*retval
write *tmp135 *tmp103 ".kiln"
set :buildBlock:block @junction
set :buildBlock:x :buildBlockFromCfg.11:x
set :buildBlock:y :buildBlockFromCfg.8:y
set :buildBlock:copper 3
set :buildBlock:lead 0
set :buildBlock:graphite 0
set :buildBlock*retaddr 282
jump 750 always 0 0
op add :buildBlockFromCfg.14:x .coreX -3.5
op add :buildBlock:y .coreY 4.5
set :buildBlock:block @water-extractor
set :buildBlock:x :buildBlockFromCfg.14:x
set :buildBlock:copper 30
set :buildBlock:lead 30
set :buildBlock:graphite 30
set :buildBlock:metaglass 30
set :buildBlock*retaddr 292
jump 750 always 0 0
set :buildBlock:block @steam-generator
set :buildBlock:x :buildBlockFromCfg.14:x
set :buildBlock:y :buildBlockFromCfg:y
set :buildBlock:copper 35
set :buildBlock:lead 40
set :buildBlock:graphite 25
set :buildBlock:silicon 30
set :buildBlock:metaglass 0
set :buildBlock*retaddr 302
jump 750 always 0 0
set *tmp147 :buildBlock*retval
write *tmp147 *tmp103 ".generator2"
op add :buildBlock:x .coreX 4
set :buildBlock:block @battery-large
set :buildBlock:y :buildBlockFromCfg.3:y
set :buildBlock:copper 0
set :buildBlock:lead 50
set :buildBlock:graphite 0
set :buildBlock:titanium 20
set :buildBlock*retaddr 313
jump 750 always 0 0
set .graphiteSurplus 100
set .siliconSurplus 1000
set .metaglassSurplus 100
set :buildBlock:block @sorter
set :buildBlock:x :buildBlockFromCfg.10:x
set :buildBlock:y :buildBlockFromCfg.8:y
set :buildBlock:copper 2
set :buildBlock:lead 2
set :buildBlock:silicon 0
set :buildBlock:titanium 0
set :buildBlock:config @coal
set :buildBlock*retaddr 326
jump 750 always 0 0
write 0 processor1 ".totalTargets"
write null processor1 ".nextBlock"
set :supplyBase1*retaddr 330
jump 610 always 0 0
read *tmp35 *tmp103 ".flares"
read *tmp34 *tmp103 ".monos"
op add *tmp159 *tmp35 *tmp34
jump 328 lessThan *tmp159 16
set :supplyBase*retaddr 336
jump 639 always 0 0
jump 334 always 0 0
write "Moving..." .display ".status3"
op sub *tmp163 :moveTo:radius 0.5
ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp161 0
jump 344 notEqual *tmp161 false
ucontrol approach :moveTo:x :moveTo:y *tmp163 0 0
ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp161 0
jump 341 equal *tmp161 false
set @counter :moveTo*retaddr
set :moveTo:x :moveTo.1:x
set :moveTo:y :moveTo.1:y
set :moveTo:radius 6
set :moveTo*retaddr 350
jump 337 always 0 0
set @counter :moveTo.1*retaddr
write "Moving..." .display ".status3"
sensor *tmp166 @unit @firstItem
jump 355 equal *tmp166 null
ucontrol itemDrop @air 1000 0 0 0
ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5 0 0
ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp169 0
jump 352 equal *tmp169 false
set @counter :moveToEmpty*retaddr
sensor *tmp171 :moveToBlock:block @x
sensor *tmp172 :moveToBlock:block @y
set :moveTo:x *tmp171
set :moveTo:y *tmp172
set :moveTo:radius :moveToBlock:radius
set :moveTo*retaddr 366
jump 337 always 0 0
set @counter :moveToBlock*retaddr
write "Depositing..." .display ".status3"
sensor *tmp173 @unit @firstItem
jump 381 notEqual *tmp173 :depositItems:item
set :moveToBlock:block :depositItems:block
set :moveToBlock:radius 6
set :moveToBlock*retaddr 374
jump 359 always 0 0
sensor :depositItems:cap :depositItems:block @itemCapacity
ucontrol itemDrop :depositItems:block 30 0 0 0
sensor *tmp177 @unit @firstItem
op mul *tmp178 *tmp177 :depositItems:cap
sensor *tmp179 :depositItems:block :depositItems:item
jump 375 greaterThan *tmp178 *tmp179
jump 386 always 0 0
sensor *tmp181 @unit @firstItem
jump 386 equal *tmp181 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp181 @unit @firstItem
jump 383 notEqual *tmp181 null
write 0 .display ".transportTarget"
write null .display ".transportItem"
set @counter :depositItems*retaddr
ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp183 0
jump 393 notEqual *tmp183 false
set .ERROR "Cannot locate ore"
stop
set @counter :locateOre*retaddr
op min :mineOre:amount :mineOre:amount 30
write :mineOre:amount .display ".transportTarget"
write :mineOre:ore .display ".transportItem"
set :locateOre:ore :mineOre:ore
set :locateOre*retaddr 400
jump 389 always 0 0
set :mineOre:x :locateOre:x
set :mineOre:y :locateOre:y
set :moveToEmpty:x :locateOre:x
set :moveToEmpty:y :locateOre:y
set :moveToEmpty*retaddr 406
jump 351 always 0 0
sensor *tmp188 @unit @firstItem
jump 413 equal *tmp188 :mineOre:ore
sensor *tmp191 @unit @firstItem
jump 413 equal *tmp191 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp191 @unit @firstItem
jump 410 notEqual *tmp191 null
write "Mining..." .display ".status3"
op add :mineOre:stop @second 10
sensor :mineOre:item @unit @firstItem
op notEqual *tmp195 :mineOre:item null
op notEqual *tmp196 :mineOre:item :mineOre:ore
op land *tmp197 *tmp195 *tmp196
jump 424 notEqual *tmp197 false
ucontrol mine :mineOre:x :mineOre:y 0 0 0
jump 424 greaterThan @second :mineOre:stop
sensor *tmp201 @unit @totalItems
jump 415 lessThan *tmp201 :mineOre:amount
ucontrol unbind 0 0 0 0 0
set :depositItems:block :mineOre:block
set :depositItems:item :mineOre:ore
set :depositItems*retaddr 429
jump 367 always 0 0
set @counter :mineOre*retaddr
write "Mining " .display ".status2"
write :mineOre.1:ore .display ".item2"
write "core" .display ".block2"
set :mineOre:ore :mineOre.1:ore
set :mineOre:amount 30
set :mineOre:block .core
set :mineOre*retaddr 438
jump 394 always 0 0
set @counter :mineOre.1*retaddr
sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
write :transportStatus.2:target .display ".transportTarget"
write :fetchBlock:item .display ".transportItem"
write "Fetching " .display ".status2"
write :fetchBlock:item .display ".item2"
write :fetchBlock:block .display ".block2"
sensor *tmp205 :fetchBlock:block @x
sensor *tmp206 :fetchBlock:block @y
set :moveToEmpty:x *tmp205
set :moveToEmpty:y *tmp206
set :moveToEmpty*retaddr 451
jump 351 always 0 0
sensor *tmp207 @unit @firstItem
jump 456 equal *tmp207 null
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp207 @unit @firstItem
jump 453 notEqual *tmp207 null
ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0
sensor :fetchBlock:unitItem @unit @firstItem
op notEqual *tmp210 :fetchBlock:unitItem null
op notEqual *tmp211 :fetchBlock:unitItem :fetchBlock:item
op land *tmp212 *tmp210 *tmp211
jump 463 equal *tmp212 false
ucontrol itemDrop @air 1000 0 0 0
sensor *tmp214 @unit :fetchBlock:item
op lessThan *tmp215 *tmp214 30
sensor *tmp216 :fetchBlock:block :fetchBlock:item
op land *tmp217 *tmp215 *tmp216
jump 456 notEqual *tmp217 false
set :depositItems:block .core
set :depositItems:item :fetchBlock:item
set :depositItems*retaddr 472
jump 367 always 0 0
set @counter :fetchBlock*retaddr
set :supplyBase0:supplied false
jump 546 notEqual .unloader1 null
sensor *tmp220 .core @graphite
jump 493 greaterThanEq *tmp220 .targetGraphite
sensor *tmp223 .press @coal
jump 493 greaterThanEq *tmp223 5
write "Goal 1: graphite requirement" .display ".status1"
write "Supplying " .display ".status2"
write @coal .display ".item2"
write .press .display ".block2"
sensor :supplyBlock:blockCapacity .press @itemCapacity
sensor *tmp227 .press @coal
op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp227
jump 492 lessThanEq :supplyBlock:missing 0
set :mineOre:ore @coal
set :mineOre:amount :supplyBlock:blockCapacity
set :mineOre:block .press
set :mineOre*retaddr 492
jump 394 always 0 0
set :supplyBase0:supplied true
sensor *tmp231 .core @silicon
jump 528 greaterThanEq *tmp231 .targetSilicon
sensor *tmp234 .smelter @coal
jump 512 greaterThanEq *tmp234 5
write "Goal 2: coal for silicon requirement" .display ".status1"
write "Supplying " .display ".status2"
write @coal .display ".item2"
write .smelter .display ".block2"
sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
sensor *tmp238 .smelter @coal
op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp238
jump 510 lessThanEq :supplyBlock.1:missing 0
set :mineOre:ore @coal
set :mineOre:amount :supplyBlock.1:blockCapacity
set :mineOre:block .smelter
set :mineOre*retaddr 510
jump 394 always 0 0
set :supplyBase0:supplied true
jump 528 always 0 0
sensor *tmp242 .smelter @sand
jump 528 greaterThanEq *tmp242 5
write "Goal 3: sand for silicon requirement" .display ".status1"
write "Supplying " .display ".status2"
write @sand .display ".item2"
write .smelter .display ".block2"
sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
sensor *tmp246 .smelter @sand
op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp246
jump 527 lessThanEq :supplyBlock.2:missing 0
set :mineOre:ore @sand
set :mineOre:amount :supplyBlock.2:blockCapacity
set :mineOre:block .smelter
set :mineOre*retaddr 527
jump 394 always 0 0
set :supplyBase0:supplied true
sensor *tmp250 .battery @totalPower
jump 546 greaterThanEq *tmp250 .powerTarget
sensor *tmp253 .generator @coal
jump 546 greaterThanEq *tmp253 2
write "Goal 4: supplying generator" .display ".status1"
write "Supplying " .display ".status2"
write @coal .display ".item2"
write .generator .display ".block2"
sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
sensor *tmp257 .generator @coal
op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp257
jump 545 lessThanEq :supplyBlock.3:missing 0
set :mineOre:ore @coal
set :mineOre:amount :supplyBlock.3:blockCapacity
set :mineOre:block .generator
set :mineOre*retaddr 545
jump 394 always 0 0
set :supplyBase0:supplied true
set *tmp263 100
sensor *tmp261 .core @titanium
jump 552 greaterThanEq *tmp261 .targetTitanium
sensor *tmp264 .core @titanium
op sub *tmp265 .targetTitanium *tmp264
op min *tmp263 7 *tmp265
sensor *tmp267 .titaniumDrill @titanium
jump 604 greaterThanEq *tmp267 *tmp263
jump 609 notEqual :supplyBase0:supplied false
sensor *tmp272 .battery @totalPower
op mul *tmp273 .unloader1 .powerTarget
jump 563 greaterThanEq *tmp272 *tmp273
write "Goal 5: supplying generator" .display ".status1"
set :mineOre.1:ore @coal
set :mineOre.1*retaddr 562
jump 430 always 0 0
set @counter :supplyBase0*retaddr
sensor *tmp276 .core @silicon
jump 574 greaterThanEq *tmp276 .targetSilicon
write "Goal 6: silicon requirement" .display ".status1"
sensor :supplyBase0:coal .core @coal
sensor :supplyBase0:sand .core @sand
set :mineOre.1:ore @sand
jump 571 greaterThanEq :supplyBase0:coal :supplyBase0:sand
set :mineOre.1:ore @coal
set :mineOre.1*retaddr 573
jump 430 always 0 0
set @counter :supplyBase0*retaddr
sensor *tmp283 .core @copper
jump 581 greaterThanEq *tmp283 .targetCopper
write "Goal 7: copper requirement" .display ".status1"
set :mineOre.1:ore @copper
set :mineOre.1*retaddr 580
jump 430 always 0 0
set @counter :supplyBase0*retaddr
sensor *tmp286 .core @lead
jump 588 greaterThanEq *tmp286 .targetLead
write "Goal 8: lead requirement" .display ".status1"
set :mineOre.1:ore @lead
set :mineOre.1*retaddr 587
jump 430 always 0 0
set @counter :supplyBase0*retaddr
sensor *tmp289 .core @metaglass
jump 595 greaterThanEq *tmp289 .targetMetaglass
write "Goal 9: metaglass requirement" .display ".status1"
set :mineOre.1:ore @sand
set :mineOre.1*retaddr 594
jump 430 always 0 0
set @counter :supplyBase0*retaddr
write "Goal 10: supplying base" .display ".status1"
sensor :supplyBase0:coal.1 .core @coal
sensor :supplyBase0:sand.1 .core @sand
set :mineOre.1:ore @sand
jump 601 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
set :mineOre.1:ore @coal
set :mineOre.1*retaddr 603
jump 430 always 0 0
set @counter :supplyBase0*retaddr
write "Goal 11: Fetching titanium" .display ".status1"
set :fetchBlock:block .titaniumDrill
set :fetchBlock:item @titanium
set :fetchBlock*retaddr 609
jump 439 always 0 0
set @counter :supplyBase0*retaddr
sensor *tmp296 .core @sand
sensor *tmp297 .core @coal
jump 626 greaterThanEq *tmp296 *tmp297
sensor *tmp300 .core @sand
sensor *tmp301 .core @lead
jump 621 greaterThanEq *tmp300 *tmp301
write "Phase 1: mining sand" .display ".status1"
set :mineOre.1:ore @sand
set :mineOre.1*retaddr 620
jump 430 always 0 0
set @counter :supplyBase1*retaddr
write "Phase 1: mining lead" .display ".status1"
set :mineOre.1:ore @lead
set :mineOre.1*retaddr 625
jump 430 always 0 0
set @counter :supplyBase1*retaddr
sensor *tmp304 .core @coal
sensor *tmp305 .core @lead
jump 634 greaterThanEq *tmp304 *tmp305
write "Phase 1: mining coal" .display ".status1"
set :mineOre.1:ore @coal
set :mineOre.1*retaddr 633
jump 430 always 0 0
set @counter :supplyBase1*retaddr
write "Phase 1: mining lead" .display ".status1"
set :mineOre.1:ore @lead
set :mineOre.1*retaddr 638
jump 430 always 0 0
set @counter :supplyBase1*retaddr
jump 643 notEqual .phase 0
set :supplyBase0*retaddr 642
jump 473 always 0 0
set @counter :supplyBase*retaddr
jump 646 notEqual .phase 1
set :supplyBase1*retaddr 646
jump 610 always 0 0
set @counter :supplyBase*retaddr
sensor *tmp310 .core @copper
jump 661 lessThan *tmp310 .targetCopper
sensor *tmp313 .core @lead
jump 661 lessThan *tmp313 .targetLead
sensor *tmp316 .core @graphite
jump 661 lessThan *tmp316 .targetGraphite
sensor *tmp319 .core @silicon
jump 661 lessThan *tmp319 .targetSilicon
sensor *tmp322 .core @titanium
jump 661 lessThan *tmp322 .targetTitanium
sensor *tmp325 .core @metaglass
jump 661 lessThan *tmp325 .targetMetaglass
set :targetMet*retval true
set @counter :targetMet*retaddr
set :targetMet*retval false
set @counter :targetMet*retaddr
op sign :meetTarget:count :meetTarget:copper 0
op sign *tmp329 :meetTarget:lead 0
op add :meetTarget:count :meetTarget:count *tmp329
op sign *tmp329 :meetTarget:graphite 0
op add :meetTarget:count :meetTarget:count *tmp329
op sign *tmp329 :meetTarget:silicon 0
op add :meetTarget:count :meetTarget:count *tmp329
op sign *tmp329 :meetTarget:titanium 0
op add :meetTarget:count :meetTarget:count *tmp329
op sign *tmp329 :meetTarget:metaglass 0
op add :meetTarget:count :meetTarget:count *tmp329
write :meetTarget:count .display ".totalTargets"
write :meetTarget:block .display ".nextBlock"
write :meetTarget:copper .display ".targetCopper"
write :meetTarget:lead .display ".targetLead"
write :meetTarget:graphite .display ".targetGraphite"
write :meetTarget:silicon .display ".targetSilicon"
write :meetTarget:titanium .display ".targetTitanium"
write :meetTarget:metaglass .display ".targetMetaglass"
set .targetCopper :meetTarget:copper
set .targetLead :meetTarget:lead
set .targetGraphite :meetTarget:graphite
set .targetSilicon :meetTarget:silicon
set .targetTitanium :meetTarget:titanium
set .targetMetaglass :meetTarget:metaglass
op add *tmp330 :meetTarget:graphite .graphiteSurplus
write *tmp330 .controller ".pressTarget"
op add *tmp331 :meetTarget:silicon .siliconSurplus
write *tmp331 .controller ".smelterTarget"
op add *tmp332 :meetTarget:metaglass .metaglassSurplus
write *tmp332 .controller ".kilnTarget"
op sign *tmp333 :meetTarget:lead 0
op mul *tmp334 *tmp333 20
op add *tmp335 :meetTarget:lead *tmp334
write *tmp335 .controller ".leadReserve"
op sign *tmp336 :meetTarget:silicon 0
op mul *tmp337 *tmp336 20
op add *tmp338 :meetTarget:silicon *tmp337
write *tmp338 .controller ".siliconReserve"
set :targetMet*retaddr 704
jump 647 always 0 0
jump 710 notEqual :targetMet*retval false
set :supplyBase*retaddr 707
jump 639 always 0 0
set :targetMet*retaddr 709
jump 647 always 0 0
jump 705 equal :targetMet*retval false
set @counter :meetTarget*retaddr
read *tmp64 bank1 511
op sub *tmp340 *tmp64 1
write *tmp340 bank1 511
op floor *tmp343 @second 0
op mul *tmp344 *tmp343 1000
op add *tmp345 :log:encodedId *tmp344
write *tmp345 bank1 *tmp340
set @counter :log*retaddr
sensor :log:encodedId :logBlock:block @id
set :log*retaddr 722
jump 711 always 0 0
set @counter :logBlock*retaddr
set :moveTo.1:x :buildBlockAt:x
set :moveTo.1:y :buildBlockAt:y
set :moveTo.1*retaddr 727
jump 345 always 0 0
write "Building..." .display ".status3"
ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
jump 738 equal :buildBlockAt:building null
jump 733 notEqual :buildBlockAt:type :buildBlockAt:block
set :buildBlockAt*retval :buildBlockAt:building
set @counter :buildBlockAt*retaddr
jump 736 equal :buildBlockAt:skipError false
set :buildBlockAt*retval null
set @counter :buildBlockAt*retaddr
set .ERROR "Cannot build at ("
stop
ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
wait 0.25
ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
jump 744 notEqual :buildBlockAt:building null
set :buildBlockAt*retval null
set @counter :buildBlockAt*retaddr
jump 740 notEqual :buildBlockAt:type :buildBlockAt:block
set :logBlock:block :buildBlockAt:block
set :logBlock*retaddr 748
jump 719 always 0 0
set :buildBlockAt*retval :buildBlockAt:building
set @counter :buildBlockAt*retaddr
set :meetTarget:block :buildBlock:block
set :meetTarget:copper :buildBlock:copper
set :meetTarget:lead :buildBlock:lead
set :meetTarget:graphite :buildBlock:graphite
set :meetTarget:silicon :buildBlock:silicon
set :meetTarget:titanium :buildBlock:titanium
set :meetTarget:metaglass :buildBlock:metaglass
set :meetTarget*retaddr 759
jump 663 always 0 0
set :buildBlockAt:block :buildBlock:block
set :buildBlockAt:x :buildBlock:x
set :buildBlockAt:y :buildBlock:y
set :buildBlockAt:rotation :buildBlock:rotation
set :buildBlockAt:config :buildBlock:config
set :buildBlockAt:skipError false
set :buildBlockAt*retaddr 767
jump 723 always 0 0
set :buildBlock*retval :buildBlockAt*retval
set @counter :buildBlock*retaddr
set :findUnits:count 0
ubind :findUnits:type
set :findUnits:firstUnit @unit
jump 776 equal :findUnits:firstUnit null
op add :findUnits:count :findUnits:count 1
ubind :findUnits:type
jump 773 notEqual @unit :findUnits:firstUnit
set :findUnits*retval :findUnits:count
set @counter :findUnits*retaddr
print "Compiled by Mindcode - github.com/cardillan/mindcode"

