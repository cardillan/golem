  1696 instructions before optimizations.
    77 instructions eliminated by Temp Variables Elimination (2 iterations).
   134 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\CoreBuilder.mnd:36:5 Variable 'thoriumDrill' is not used.
C:\Home\golem\jam-202507\CoreBuilder.mnd:37:5 Variable 'thoriumGenerator' is not used.
C:\Home\golem\jam-202507\Actions.mnd:8:14 Variable 'ERROR' is not used.
     1 instructions eliminated by Jump Normalization (5 iterations).
    65 instructions eliminated by Jump Optimization (5 iterations).
    62 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
     3 instructions modified by Expression Optimization (3 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
   388 instructions eliminated by Data Flow Optimization (3 passes, 30 iterations).
    18 loops improved by Loop Hoisting.
     7 instructions added by Loop Optimization (3 iterations).
     6 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (10 iterations).
     1 loops unrolled by Loop Unrolling.
     6 instructions eliminated by Jump Straightening (5 iterations).
    17 instructions updated by JumpThreading.
    43 instructions eliminated by Unreachable Code Elimination (2 iterations).
   923 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:496:9            size    +1, benefit       12.5, efficiency     12.500
  ! Replicate loop condition at Actions.mnd:23:5                 size    +1, benefit   144926.0, efficiency 144925.977
  ! Replicate loop condition at Actions.mnd:68:9                 size    +1, benefit   134126.0, efficiency 134125.977
  ! Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit   100141.6, efficiency 100141.602
  ! Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit    67968.8, efficiency  67968.750
  ! Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    10800.0, efficiency   5400.000
  * Unroll iteration loop at CoreBuilder.mnd:254:5               size   -11, benefit     9936.0, efficiency   Infinity (-9 instructions)

Pass 1: speed optimization selection (cost limit 9):
    Replicate loop condition at CoreBuilder.mnd:496:9            size    +1, benefit       12.5, efficiency     12.500
  * Replicate loop condition at Actions.mnd:23:5                 size    +1, benefit   144926.0, efficiency 144925.977 (+1 instructions)
    Replicate loop condition at Actions.mnd:68:9                 size    +1, benefit   134126.0, efficiency 134125.977
    Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit   100141.6, efficiency 100141.602
    Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit    67968.8, efficiency  67968.750
    Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    10800.0, efficiency   5400.000

Pass 1: speed optimization selection (cost limit 8):
    Replicate loop condition at CoreBuilder.mnd:496:9            size    +1, benefit       12.5, efficiency     12.500
  * Replicate loop condition at Actions.mnd:68:9                 size    +1, benefit   134126.0, efficiency 134125.977 (+1 instructions)
    Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit   100141.6, efficiency 100141.602
    Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit    67968.8, efficiency  67968.750
    Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    10800.0, efficiency   5400.000

Pass 1: speed optimization selection (cost limit 7):
    Replicate loop condition at CoreBuilder.mnd:496:9            size    +1, benefit       12.5, efficiency     12.500
  * Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit   100141.6, efficiency 100141.602 (+1 instructions)
    Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit    67968.8, efficiency  67968.750
    Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    10800.0, efficiency   5400.000

Pass 1: speed optimization selection (cost limit 6):
    Replicate loop condition at CoreBuilder.mnd:496:9            size    +1, benefit       12.5, efficiency     12.500
  * Replicate loop condition at Actions.mnd:45:5                 size    +1, benefit    67968.8, efficiency  67968.750 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    10800.0, efficiency   5400.000

Pass 1: speed optimization selection (cost limit 5):
    Replicate loop condition at CoreBuilder.mnd:496:9            size    +1, benefit       12.5, efficiency     12.500
  * Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    10800.0, efficiency   5400.000 (+2 instructions)

Pass 1: speed optimization selection (cost limit 3):
  * Replicate loop condition at CoreBuilder.mnd:496:9            size    +1, benefit       12.5, efficiency     12.500 (+1 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-90 instructions):
 
     8 set .factory null
     9 set .generator2 null
    10 set .kiln null
-    * set .thoriumDrill null
-    * set .thoriumGenerator null
    11 set .phase 0
    12 set .graphiteSurplus 20
    13 set .siliconSurplus 20
 
   158 setaddr :buildBlock*retaddr *label51 (h:*label51)
   159 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
   160 label *label51
-    * set *tmp93 :buildBlock*retval
   161 jump *label46 always
   162 label *label48
   163 multijump *tmp94 0 0 (m:marker2)
   164 multilabel *label50 (m:marker2)
   165 label *label49
-    * set *tmp93 null
   166 label *label46
   167 set :buildBlockFromCfg.3:block @combustion-generator
   168 set :buildBlockFromCfg.3:offsetX 0
 
   282 set .ERROR :error:error
   283 stop
   284 label *label70
-    * set *tmp119 null
   285 jump *label69 always
   286 label *label68
-    * set *tmp119 null
   287 label *label69
   288 write @pneumatic-drill .display ".nextBlock"
   289 set :buildBlockAt:block @pneumatic-drill
 
   422 setaddr :buildBlock*retaddr *label89 (h:*label89)
   423 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)
   424 label *label89
-    * set *tmp128 :buildBlock*retval
   425 jump *label84 always
   426 label *label86
   427 multijump *tmp129 0 0 (m:marker7)
   428 multilabel *label88 (m:marker7)
   429 label *label87
-    * set *tmp128 null
   430 label *label84
   431 set :buildBlockFromCfg.8:block @unloader
   432 set :buildBlockFromCfg.8:offsetX -2
 
   500 setaddr :buildBlock*retaddr *label101 (h:*label101)
   501 call *label26 *invalid :buildBlock*retval (m:*label101) (h:*label101)
   502 label *label101
-    * set *tmp136 :buildBlock*retval
   503 jump *label96 always
   504 label *label98
   505 multijump *tmp137 0 0 (m:marker9)
   506 multilabel *label100 (m:marker9)
   507 label *label99
-    * set *tmp136 null
   508 label *label96
   509 set :buildBlockFromCfg.10:block @air-factory
   510 set :buildBlockFromCfg.10:offsetX -4
 
   556 write 0 .controller ".siliconReserve"
   557 write :buildUnits:unit .controller ".unitToProduce"
   558 label *label108
-    * set *tmp144 .phase
   559 op add .phase .phase 1
   560 write 85 .controller ".pressTarget"
   561 write 150 .controller ".smelterTarget"
 
   572 setaddr :findFreeUnit*retaddr *label114 (h:*label114)
   573 call *label14 *invalid :findFreeUnit*retval (m:*label114) (h:*label114)
   574 label *label114
-    * set *tmp148 :findFreeUnit*retval
   575 write .coreX .oreLocator ":layoutThoriumDrill:x"
   576 write .coreY .oreLocator ":layoutThoriumDrill:y"
   577 write @unit .oreLocator ":layoutThoriumDrill:unit"
 
   587 wait 1e-15
   588 read *tmp155 .flareController ":start*finished"
   589 jump *label115 equal *tmp155 false
-    * set *tmp147 null
   590 jump *label113 always
   591 label *label112
-    * set *tmp147 null
   592 label *label113
   593 setaddr :supplyBase1*retaddr *label116 (h:*label116)
   594 call *label19 *invalid :supplyBase1*retval (m:*label116) (h:*label116)
 
   597 op lessThan *tmp157 *tmp156 300
   598 jump *label117 equal *tmp157 false
   599 jump *label111 always
-    * set *tmp158 null
   600 jump *label118 always
   601 label *label117
-    * set *tmp158 null
   602 label *label118
   603 label *label110
   604 read *tmp34 .controller ".monos"
 
   644 setaddr :buildBlock*retaddr *label125 (h:*label125)
   645 call *label26 *invalid :buildBlock*retval (m:*label125) (h:*label125)
   646 label *label125
-    * set *tmp163 :buildBlock*retval
   647 jump *label120 always
   648 label *label122
   649 multijump *tmp164 0 0 (m:marker11)
   650 multilabel *label124 (m:marker11)
   651 label *label123
-    * set *tmp163 null
   652 label *label120
   653 set :buildBlockFromCfg.12:block @kiln
   654 set :buildBlockFromCfg.12:offsetX 3.5
 
   722 setaddr :buildBlock*retaddr *label137 (h:*label137)
   723 call *label26 *invalid :buildBlock*retval (m:*label137) (h:*label137)
   724 label *label137
-    * set *tmp171 :buildBlock*retval
   725 jump *label132 always
   726 label *label134
   727 multijump *tmp172 0 0 (m:marker13)
   728 multilabel *label136 (m:marker13)
   729 label *label135
-    * set *tmp171 null
   730 label *label132
   731 set :buildBlockFromCfg.14:block @water-extractor
   732 set :buildBlockFromCfg.14:offsetX -3.5
 
   759 setaddr :buildBlock*retaddr *label143 (h:*label143)
   760 call *label26 *invalid :buildBlock*retval (m:*label143) (h:*label143)
   761 label *label143
-    * set *tmp175 :buildBlock*retval
   762 jump *label138 always
   763 label *label140
   764 multijump *tmp176 0 0 (m:marker14)
   765 multilabel *label142 (m:marker14)
   766 label *label141
-    * set *tmp175 null
   767 label *label138
   768 set :buildBlockFromCfg.15:block @steam-generator
   769 set :buildBlockFromCfg.15:offsetX -3.5
 
   826 setaddr :findFreeUnit*retaddr *label156 (h:*label156)
   827 call *label14 *invalid :findFreeUnit*retval (m:*label156) (h:*label156)
   828 label *label156
-    * set *tmp185 :findFreeUnit*retval
   829 write .coreX .oreLocator ":layoutThoriumDrill:x"
   830 write .coreY .oreLocator ":layoutThoriumDrill:y"
   831 write @unit .oreLocator ":layoutThoriumDrill:unit"
 
   842 op equal *tmp191 *tmp190 false
   843 jump *label157 notEqual *tmp191 false
   844 label *label159
-    * set *tmp183 null
   845 jump *label151 always
   846 label *label150
-    * set *tmp183 null
   847 label *label151
   848 set :meetTarget:block @laser-drill
   849 set :meetTarget:copper 35
 
   868 set .ERROR :error.1:error
   869 stop
   870 label *label167
-    * set *tmp195 null
   871 jump *label166 always
   872 label *label165
-    * set *tmp195 null
   873 label *label166
   874 set :buildBlockAt:block @laser-drill
   875 read *tmp62 .oreLocator ".drillX"
 
   883 call *label25 *invalid :buildBlockAt*retval (m:*label168) (h:*label168)
   884 label *label168
   885 set *tmp196 :buildBlockAt*retval
-    * set .thoriumDrill *tmp196
   886 read *tmp64 .oreLocator ".water1X"
   887 op lessThan *tmp197 *tmp64 0
   888 jump *label169 equal *tmp197 false
   889 jump *label161 always
-    * set *tmp198 null
   890 jump *label170 always
   891 label *label169
-    * set *tmp198 null
   892 label *label170
   893 set :meetTarget:block @water-extractor
   894 set :meetTarget:copper 30
 
   912 setaddr :buildBlockAt*retaddr *label173 (h:*label173)
   913 call *label25 *invalid :buildBlockAt*retval (m:*label173) (h:*label173)
   914 label *label173
-    * set *tmp199 :buildBlockAt*retval
   915 read *tmp66 .oreLocator ".water2X"
   916 op lessThan *tmp200 *tmp66 0
   917 jump *label174 equal *tmp200 false
   918 jump *label161 always
-    * set *tmp201 null
   919 jump *label175 always
   920 label *label174
-    * set *tmp201 null
   921 label *label175
   922 set :meetTarget:block @water-extractor
   923 set :meetTarget:copper 30
 
   941 setaddr :buildBlockAt*retaddr *label178 (h:*label178)
   942 call *label25 *invalid :buildBlockAt*retval (m:*label178) (h:*label178)
   943 label *label178
-    * set *tmp202 :buildBlockAt*retval
   944 set :meetTarget:block @water-extractor
   945 set :meetTarget:copper 30
   946 set :meetTarget:lead 30
 
   964 call *label25 *invalid :buildBlockAt*retval (m:*label181) (h:*label181)
   965 label *label181
   966 set *tmp203 :buildBlockAt*retval
-    * set .thoriumGenerator *tmp203
   967 set :meetTarget:block @power-node
   968 set :meetTarget:copper 2
   969 set :meetTarget:lead 6
 
   986 setaddr :buildBlockAt*retaddr *label184 (h:*label184)
   987 call *label25 *invalid :buildBlockAt*retval (m:*label184) (h:*label184)
   988 label *label184
-    * set *tmp204 :buildBlockAt*retval
   989 set :meetTarget:block @solar-panel
   990 set :meetTarget:copper 0
   991 set :meetTarget:lead 10
 
  1008 setaddr :buildBlockAt*retaddr *label187 (h:*label187)
  1009 call *label25 *invalid :buildBlockAt*retval (m:*label187) (h:*label187)
  1010 label *label187
-    * set *tmp205 :buildBlockAt*retval
  1011 label *label161
  1012 set :buildBlockFromCfg.16:block @sorter
  1013 set :buildBlockFromCfg.16:offsetX -4
 
  1040 setaddr :buildBlock*retaddr *label193 (h:*label193)
  1041 call *label26 *invalid :buildBlock*retval (m:*label193) (h:*label193)
  1042 label *label193
-    * set *tmp206 :buildBlock*retval
  1043 jump *label188 always
  1044 label *label190
  1045 multijump *tmp207 0 0 (m:marker16)
  1046 multilabel *label192 (m:marker16)
  1047 label *label191
-    * set *tmp206 null
  1048 label *label188
  1049 write 0 .display ".totalTargets"
  1050 write null .display ".nextBlock"
 
  1110 op notEqual *tmp218 *tmp217 null
  1111 jump *label216 equal *tmp218 false
  1112 ucontrol itemDrop @air 1000
-    * set *tmp219 null
  1113 jump *label217 always
  1114 label *label216
-    * set *tmp219 null
  1115 label *label217
  1116 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1117 label *label214
 
  1157 op greaterThan *tmp231 *tmp229 *tmp230
  1158 jump *label225 notEqual *tmp231 false
  1159 label *label227
-    * set *tmp226 null
  1160 jump *label223 always
  1161 label *label222
  1162 label *label228
 
  1167 label *label229
  1168 jump *label228 always
  1169 label *label230
-    * set *tmp226 null
  1170 label *label223
  1171 set :transportStatus:target 0
  1172 set :transportStatus:item null
 
  1184 set .ERROR :error.3:error
  1185 stop
  1186 label *label235
-    * set *tmp237 null
  1187 jump *label234 always
  1188 label *label233
-    * set *tmp237 null
  1189 label *label234
  1190 label *label232
  1191 return :locateOre*retaddr
 
  1221 jump *label243 always
  1222 label *label245
  1223 label *label242
-    * set *tmp241 null
  1224 jump *label241 always
  1225 label *label240
-    * set *tmp241 null
  1226 label *label241
  1227 set :status3.3:text "Mining..."
  1228 write :status3.3:text .display ".status3"
 
  1237 op land *tmp248 *tmp246 *tmp247
  1238 jump *label250 equal *tmp248 false
  1239 jump *label249 always
-    * set *tmp249 null
  1240 jump *label251 always
  1241 label *label250
-    * set *tmp249 null
  1242 label *label251
  1243 ucontrol mine :mineOre:x :mineOre:y
  1244 op greaterThan *tmp250 @second :mineOre:stop
  1245 jump *label252 equal *tmp250 false
  1246 jump *label249 always
-    * set *tmp251 null
  1247 jump *label253 always
  1248 label *label252
-    * set *tmp251 null
  1249 label *label253
  1250 label *label248
  1251 sensor *tmp252 @unit @totalItems
 
  1318 op land *tmp263 *tmp261 *tmp262
  1319 jump *label269 equal *tmp263 false
  1320 ucontrol itemDrop @air 1000
-    * set *tmp264 null
  1321 jump *label270 always
  1322 label *label269
-    * set *tmp264 null
  1323 label *label270
  1324 label *label267
  1325 sensor *tmp265 @unit :fetchBlock:item
 
  1342 jump *label273 equal *tmp269 false
  1343 set :findFreeUnit*retval null
  1344 jump *label272 always
-    * set *tmp270 null
  1345 jump *label274 always
  1346 label *label273
-    * set *tmp270 null
  1347 label *label274
  1348 set :findFreeUnit:first_unit @unit
  1349 label *label275
 
  1353 ucontrol flag :findFreeUnit:initial_flag
  1354 set :findFreeUnit*retval @unit
  1355 jump *label272 always
-    * set *tmp273 null
  1356 jump *label279 always
  1357 label *label278
  1358 sensor *tmp274 :findFreeUnit:first_unit @dead
 
  1365 label *label280
  1366 set *tmp276 null
  1367 label *label281
-    * set *tmp273 *tmp276
  1368 label *label279
  1369 ubind :findFreeUnit:unit_type
  1370 label *label276
 
  1412 setaddr :mineOre*retaddr *label294 (h:*label294)
  1413 call *label10 *invalid :mineOre*retval (m:*label294) (h:*label294)
  1414 label *label294
-    * set *tmp291 null
  1415 jump *label293 always
  1416 label *label292
-    * set *tmp291 null
  1417 label *label293
  1418 label *label290
  1419 set :supplyBase0:supplied true
 
  1422 label *label287
  1423 set *tmp286 null
  1424 label *label288
-    * set *tmp283 *tmp286
  1425 jump *label286 always
  1426 label *label285
-    * set *tmp283 null
  1427 label *label286
  1428 sensor *tmp292 .core @silicon
  1429 op lessThan *tmp293 *tmp292 .targetSilicon
 
  1456 setaddr :mineOre*retaddr *label304 (h:*label304)
  1457 call *label10 *invalid :mineOre*retval (m:*label304) (h:*label304)
  1458 label *label304
-    * set *tmp302 null
  1459 jump *label303 always
  1460 label *label302
-    * set *tmp302 null
  1461 label *label303
  1462 label *label300
  1463 set :supplyBase0:supplied true
 
  1492 setaddr :mineOre*retaddr *label312 (h:*label312)
  1493 call *label10 *invalid :mineOre*retval (m:*label312) (h:*label312)
  1494 label *label312
-    * set *tmp310 null
  1495 jump *label311 always
  1496 label *label310
-    * set *tmp310 null
  1497 label *label311
  1498 label *label308
  1499 set :supplyBase0:supplied true
 
  1504 label *label306
  1505 set *tmp297 *tmp305
  1506 label *label298
-    * set *tmp294 *tmp297
  1507 jump *label296 always
  1508 label *label295
-    * set *tmp294 null
  1509 label *label296
  1510 sensor *tmp311 .battery @totalPower
  1511 op lessThan *tmp312 *tmp311 .powerTarget
 
  1538 setaddr :mineOre*retaddr *label322 (h:*label322)
  1539 call *label10 *invalid :mineOre*retval (m:*label322) (h:*label322)
  1540 label *label322
-    * set *tmp321 null
  1541 jump *label321 always
  1542 label *label320
-    * set *tmp321 null
  1543 label *label321
  1544 label *label318
  1545 set :supplyBase0:supplied true
 
  1553 label *label313
  1554 set *tmp313 null
  1555 label *label314
-    * set *tmp280 *tmp313
  1556 jump *label284 always
  1557 label *label283
-    * set *tmp280 null
  1558 label *label284
  1559 sensor *tmp322 .core @titanium
  1560 op lessThan *tmp323 *tmp322 .targetTitanium
 
  1685 label *label327
  1686 set *tmp332 null
  1687 label *label328
-    * set *tmp330 *tmp332
  1688 jump *label326 always
  1689 label *label325
  1690 set :status1.10:text "Goal 11: Fetching titanium"
 
  1695 setaddr :fetchBlock*retaddr *label356 (h:*label356)
  1696 call *label12 *invalid :fetchBlock*retval (m:*label356) (h:*label356)
  1697 label *label356
-    * set *tmp330 null
  1698 label *label326
  1699 label *label282
  1700 return :supplyBase0*retaddr
 
  1727 label *label365
  1728 set *tmp364 null
  1729 label *label361
-    * set *tmp360 *tmp364
  1730 jump *label359 always
  1731 label *label358
  1732 sensor *tmp365 .core @coal
 
  1752 label *label371
  1753 set *tmp368 null
  1754 label *label367
-    * set *tmp360 *tmp368
  1755 label *label359
  1756 label *label357
  1757 return :supplyBase1*retaddr
 
  1763 setaddr :supplyBase1*retaddr *label375 (h:*label375)
  1764 call *label19 *invalid :supplyBase1*retval (m:*label375) (h:*label375)
  1765 label *label375
-    * set *tmp370 null
  1766 jump *label374 always
  1767 label *label373
  1768 setaddr :supplyBase0*retaddr *label376 (h:*label376)
  1769 call *label18 *invalid :supplyBase0*retval (m:*label376) (h:*label376)
  1770 label *label376
-    * set *tmp370 null
  1771 label *label374
  1772 label *label372
  1773 return :supplyBase*retaddr
 
  1818 label *label380
  1819 set *tmp376 null
  1820 label *label381
-    * set *tmp373 *tmp376
  1821 jump *label379 always
  1822 label *label378
-    * set *tmp373 null
  1823 label *label379
  1824 set :targetMet*retval false
  1825 jump *label377 always
 
  1939 jump *label413 equal *tmp412 false
  1940 set :buildBlockAt*retval :buildBlockAt:building
  1941 jump *label408 always
-    * set *tmp413 null
  1942 jump *label414 always
  1943 label *label413
-    * set *tmp413 null
  1944 label *label414
  1945 jump *label415 equal :buildBlockAt:skipError false
  1946 set :buildBlockAt*retval null
  1947 jump *label408 always
-    * set *tmp414 null
  1948 jump *label416 always
  1949 label *label415
-    * set *tmp414 null
  1950 label *label416
  1951 set :error.4:error "Cannot build at ("
  1952 set .ERROR :error.4:error
  1953 stop
  1954 label *label417
-    * set *tmp411 null
  1955 jump *label412 always
  1956 label *label411
-    * set *tmp411 null
  1957 label *label412
  1958 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1959 wait 0.25
 
  1964 jump *label421 equal *tmp417 false
  1965 set :buildBlockAt*retval null
  1966 jump *label408 always
-    * set *tmp418 null
  1967 jump *label422 always
  1968 label *label421
-    * set *tmp418 null
  1969 label *label422
  1970 label *label419
  1971 op notEqual *tmp419 :buildBlockAt:type :buildBlockAt:block
 
  2014 op notEqual *tmp420 :findUnits:firstUnit null
  2015 jump *label428 equal *tmp420 false
  2016 label *label430
-    * set *tmp422 :findUnits:count
  2017 op add :findUnits:count :findUnits:count 1
  2018 ubind :findUnits:type
  2019 label *label431
  2020 op notEqual *tmp423 @unit :findUnits:firstUnit
  2021 jump *label430 notEqual *tmp423 false
  2022 label *label432
-    * set *tmp421 null
  2023 jump *label429 always
  2024 label *label428
-    * set *tmp421 null
  2025 label *label429
  2026 set :findUnits*retval :findUnits:count
  2027 label *label427

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-22 instructions):
 
   882 setaddr :buildBlockAt*retaddr *label168 (h:*label168)
   883 call *label25 *invalid :buildBlockAt*retval (m:*label168) (h:*label168)
   884 label *label168
-    * set *tmp196 :buildBlockAt*retval
   885 read *tmp64 .oreLocator ".water1X"
   886 op lessThan *tmp197 *tmp64 0
   887 jump *label169 equal *tmp197 false
 
   962 setaddr :buildBlockAt*retaddr *label181 (h:*label181)
   963 call *label25 *invalid :buildBlockAt*retval (m:*label181) (h:*label181)
   964 label *label181
-    * set *tmp203 :buildBlockAt*retval
   965 set :meetTarget:block @power-node
   966 set :meetTarget:copper 2
   967 set :meetTarget:lead 6
 
  1338 ubind :findFreeUnit:unit_type
  1339 op equal *tmp269 @unit null
  1340 jump *label273 equal *tmp269 false
-    * set :findFreeUnit*retval null
  1341 jump *label272 always
  1342 jump *label274 always
  1343 label *label273
 
  1348 op equal *tmp272 *tmp271 0
  1349 jump *label278 equal *tmp272 false
  1350 ucontrol flag :findFreeUnit:initial_flag
-    * set :findFreeUnit*retval @unit
  1351 jump *label272 always
  1352 jump *label279 always
  1353 label *label278
 
  1356 jump *label280 equal *tmp275 false
  1357 set *tmp277 @unit
  1358 set :findFreeUnit:first_unit *tmp277
-    * set *tmp276 :findFreeUnit:first_unit
  1359 jump *label281 always
  1360 label *label280
-    * set *tmp276 null
  1361 label *label281
  1362 label *label279
  1363 ubind :findFreeUnit:unit_type
 
  1365 op notEqual *tmp278 :findFreeUnit:first_unit @unit
  1366 jump *label275 notEqual *tmp278 false
  1367 label *label277
-    * set :findFreeUnit*retval null
  1368 jump *label272 always
-    * set :findFreeUnit*retval null
  1369 label *label272
  1370 return :findFreeUnit*retaddr
  1371 end
 
  1409 label *label293
  1410 label *label290
  1411 set :supplyBase0:supplied true
-    * set *tmp286 :supplyBase0:supplied
  1412 jump *label288 always
  1413 label *label287
-    * set *tmp286 null
  1414 label *label288
  1415 jump *label286 always
  1416 label *label285
 
  1451 label *label303
  1452 label *label300
  1453 set :supplyBase0:supplied true
-    * set *tmp297 :supplyBase0:supplied
  1454 jump *label298 always
  1455 label *label297
  1456 sensor *tmp303 .smelter @sand
 
  1491 label *label305
  1492 set *tmp305 null
  1493 label *label306
-    * set *tmp297 *tmp305
  1494 label *label298
  1495 jump *label296 always
  1496 label *label295
 
  1536 label *label315
  1537 set *tmp316 null
  1538 label *label316
-    * set *tmp313 *tmp316
  1539 jump *label314 always
  1540 label *label313
-    * set *tmp313 null
  1541 label *label314
  1542 jump *label284 always
  1543 label *label283
 
  1666 label *label334
  1667 set *tmp336 *tmp339
  1668 label *label330
-    * set *tmp332 *tmp336
  1669 jump *label328 always
  1670 label *label327
-    * set *tmp332 null
  1671 label *label328
  1672 jump *label326 always
  1673 label *label325
 
  1699 setaddr :mineOre.1*retaddr *label363 (h:*label363)
  1700 call *label11 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
  1701 label *label363
-    * set *tmp364 null
  1702 jump *label361 always
  1703 label *label360
  1704 set :status1.12:text "Phase 1: mining lead"
 
  1708 setaddr :mineOre.1*retaddr *label365 (h:*label365)
  1709 call *label11 *invalid :mineOre.1*retval (m:*label365) (h:*label365)
  1710 label *label365
-    * set *tmp364 null
  1711 label *label361
  1712 jump *label359 always
  1713 label *label358
 
  1722 setaddr :mineOre.1*retaddr *label369 (h:*label369)
  1723 call *label11 *invalid :mineOre.1*retval (m:*label369) (h:*label369)
  1724 label *label369
-    * set *tmp368 null
  1725 jump *label367 always
  1726 label *label366
  1727 set :status1.14:text "Phase 1: mining lead"
 
  1731 setaddr :mineOre.1*retaddr *label371 (h:*label371)
  1732 call *label11 *invalid :mineOre.1*retval (m:*label371) (h:*label371)
  1733 label *label371
-    * set *tmp368 null
  1734 label *label367
  1735 label *label359
  1736 label *label357
 
  1793 label *label382
  1794 set *tmp379 null
  1795 label *label383
-    * set *tmp376 *tmp379
  1796 jump *label381 always
  1797 label *label380
-    * set *tmp376 null
  1798 label *label381
  1799 jump *label379 always
  1800 label *label378

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-8 instructions):
 
  1486 label *label311
  1487 label *label308
  1488 set :supplyBase0:supplied true
-    * set *tmp305 :supplyBase0:supplied
  1489 jump *label306 always
  1490 label *label305
-    * set *tmp305 null
  1491 label *label306
  1492 label *label298
  1493 jump *label296 always
 
  1529 label *label321
  1530 label *label318
  1531 set :supplyBase0:supplied true
-    * set *tmp316 :supplyBase0:supplied
  1532 jump *label316 always
  1533 label *label315
-    * set *tmp316 null
  1534 label *label316
  1535 jump *label314 always
  1536 label *label313
 
  1566 setaddr :mineOre.1*retaddr *label332 (h:*label332)
  1567 call *label11 *invalid :mineOre.1*retval (m:*label332) (h:*label332)
  1568 label *label332
-    * set *tmp336 null
  1569 jump *label330 always
  1570 label *label329
  1571 sensor *tmp337 .core @silicon
 
  1659 label *label340
  1660 set *tmp339 *tmp346
  1661 label *label334
-    * set *tmp336 *tmp339
  1662 label *label330
  1663 jump *label328 always
  1664 label *label327
 
  1782 label *label384
  1783 set *tmp382 null
  1784 label *label385
-    * set *tmp379 *tmp382
  1785 jump *label383 always
  1786 label *label382
-    * set *tmp379 null
  1787 label *label383
  1788 jump *label381 always
  1789 label *label380

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
  1590 setaddr :mineOre.1*retaddr *label338 (h:*label338)
  1591 call *label11 *invalid :mineOre.1*retval (m:*label338) (h:*label338)
  1592 label *label338
-    * set *tmp339 null
  1593 jump *label334 always
  1594 label *label333
  1595 sensor *tmp344 .core @copper
 
  1656 label *label344
  1657 set *tmp346 *tmp349
  1658 label *label340
-    * set *tmp339 *tmp346
  1659 label *label334
  1660 label *label330
  1661 jump *label328 always
 
  1775 label *label386
  1776 set *tmp385 null
  1777 label *label387
-    * set *tmp382 *tmp385
  1778 jump *label385 always
  1779 label *label384
-    * set *tmp382 null
  1780 label *label385
  1781 jump *label383 always
  1782 label *label382

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-4 instructions):
 
  1602 setaddr :mineOre.1*retaddr *label342 (h:*label342)
  1603 call *label11 *invalid :mineOre.1*retval (m:*label342) (h:*label342)
  1604 label *label342
-    * set *tmp346 null
  1605 jump *label340 always
  1606 label *label339
  1607 sensor *tmp347 .core @lead
 
  1653 label *label348
  1654 set *tmp349 *tmp352
  1655 label *label344
-    * set *tmp346 *tmp349
  1656 label *label340
  1657 label *label334
  1658 label *label330
 
  1768 label *label388
  1769 set *tmp388 null
  1770 label *label389
-    * set *tmp385 *tmp388
  1771 jump *label387 always
  1772 label *label386
-    * set *tmp385 null
  1773 label *label387
  1774 jump *label385 always
  1775 label *label384

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-4 instructions):
 
  1614 setaddr :mineOre.1*retaddr *label346 (h:*label346)
  1615 call *label11 *invalid :mineOre.1*retval (m:*label346) (h:*label346)
  1616 label *label346
-    * set *tmp349 null
  1617 jump *label344 always
  1618 label *label343
  1619 sensor *tmp350 .core @metaglass
 
  1650 label *label354
  1651 set *tmp352 null
  1652 label *label348
-    * set *tmp349 *tmp352
  1653 label *label344
  1654 label *label340
  1655 label *label334
 
  1761 jump *label388 equal *tmp387 false
  1762 set :targetMet*retval true
  1763 jump *label377 always
-    * set *tmp388 null
  1764 jump *label389 always
  1765 label *label388
-    * set *tmp388 null
  1766 label *label389
  1767 jump *label387 always
  1768 label *label386

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1626 setaddr :mineOre.1*retaddr *label350 (h:*label350)
  1627 call *label11 *invalid :mineOre.1*retval (m:*label350) (h:*label350)
  1628 label *label350
-    * set *tmp352 null
  1629 jump *label348 always
  1630 label *label347
  1631 set :status1.9:text "Goal 10: supplying base"
 
  1647 setaddr :mineOre.1*retaddr *label354 (h:*label354)
  1648 call *label11 *invalid :mineOre.1*retval (m:*label354) (h:*label354)
  1649 label *label354
-    * set *tmp352 null
  1650 label *label348
  1651 label *label344
  1652 label *label340

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-77 instructions):
 
    15 write 511 bank1 511
    16 label *label28
    17 ubind @poly
-    * set *tmp75 @unit
-    * set .builder *tmp75
-    * ulocate building core false @copper .coreX .coreY *tmp77 *tmp76
-    * set .core *tmp76
+   18 set .builder @unit
+   19 ulocate building core false @copper .coreX .coreY 0 .core
    20 label *label29
    21 op equal *tmp78 .core null
    22 jump *label28 notEqual *tmp78 false
 
    29 call *label27 *invalid :findUnits*retval (m:*label31) (h:*label31)
    30 label *label31
    31 write :findUnits:count .display ".monos"
-    * set *tmp80 :findUnits*retval
-    * set :monos *tmp80
+   32 set :monos :findUnits*retval
    33 set :findUnits:type @flare
    34 setaddr :findUnits*retaddr *label32 (h:*label32)
    35 call *label27 *invalid :findUnits*retval (m:*label32) (h:*label32)
    36 label *label32
    37 write :findUnits:count .display ".flares"
-    * set *tmp82 :findUnits*retval
-    * set :flares *tmp82
+   38 set :flares :findUnits*retval
    39 set :findUnits:type @poly
    40 setaddr :findUnits*retaddr *label33 (h:*label33)
    41 call *label27 *invalid :findUnits*retval (m:*label33) (h:*label33)
    42 label *label33
    43 write :findUnits:count .display ".polys"
-    * set *tmp84 :findUnits*retval
-    * set :polys *tmp84
+   44 set :polys :findUnits*retval
    45 set :buildBlockFromCfg:block @graphite-press
    46 set :buildBlockFromCfg:offsetX -1.5
    47 set :buildBlockFromCfg:offsetY 2.5
 
    55 set :buildBlockFromCfg:config null
    56 setaddr *tmp86 *label38
    57 label *label35
-    * op add *tmp87 .coreX :buildBlockFromCfg:offsetX
-    * set :buildBlockFromCfg:x *tmp87
-    * op add *tmp88 .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlockFromCfg:y *tmp88
+   58 op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
+   59 op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
    60 set :buildBlock:block :buildBlockFromCfg:block
    61 set :buildBlock:x :buildBlockFromCfg:x
    62 set :buildBlock:y :buildBlockFromCfg:y
 
    93 set :buildBlockFromCfg.1:config null
    94 setaddr *tmp90 *label44
    95 label *label41
-    * op add *tmp91 .coreX :buildBlockFromCfg.1:offsetX
-    * set :buildBlockFromCfg.1:x *tmp91
-    * op add *tmp92 .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlockFromCfg.1:y *tmp92
+   96 op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
+   97 op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
    98 set :buildBlock:block :buildBlockFromCfg.1:block
    99 set :buildBlock:x :buildBlockFromCfg.1:x
   100 set :buildBlock:y :buildBlockFromCfg.1:y
 
   131 set :buildBlockFromCfg.2:config null
   132 setaddr *tmp94 *label50
   133 label *label47
-    * op add *tmp95 .coreX :buildBlockFromCfg.2:offsetX
-    * set :buildBlockFromCfg.2:x *tmp95
-    * op add *tmp96 .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlockFromCfg.2:y *tmp96
+  134 op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
+  135 op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
   136 set :buildBlock:block :buildBlockFromCfg.2:block
   137 set :buildBlock:x :buildBlockFromCfg.2:x
   138 set :buildBlock:y :buildBlockFromCfg.2:y
 
   166 set :buildBlockFromCfg.3:config null
   167 setaddr *tmp98 *label56
   168 label *label53
-    * op add *tmp99 .coreX :buildBlockFromCfg.3:offsetX
-    * set :buildBlockFromCfg.3:x *tmp99
-    * op add *tmp100 .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlockFromCfg.3:y *tmp100
+  169 op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
+  170 op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
   171 set :buildBlock:block :buildBlockFromCfg.3:block
   172 set :buildBlock:x :buildBlockFromCfg.3:x
   173 set :buildBlock:y :buildBlockFromCfg.3:y
 
   205 set :buildBlockFromCfg.4:config null
   206 setaddr *tmp102 *label62
   207 label *label59
-    * op add *tmp103 .coreX :buildBlockFromCfg.4:offsetX
-    * set :buildBlockFromCfg.4:x *tmp103
-    * op add *tmp104 .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlockFromCfg.4:y *tmp104
+  208 op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
+  209 op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
   210 set :buildBlock:block :buildBlockFromCfg.4:block
   211 set :buildBlock:x :buildBlockFromCfg.4:x
   212 set :buildBlock:y :buildBlockFromCfg.4:y
 
   255 wait 1e-15
   256 read *tmp116 .oreLocator ":findDrillLocation*finished"
   257 jump *label67 equal *tmp116 false
-    * read *tmp113 .oreLocator ":findDrillLocation:dx"
-    * set :buildTitaniumDrill:dx *tmp113
-    * read *tmp114 .oreLocator ":findDrillLocation:dy"
-    * set :buildTitaniumDrill:dy *tmp114
-    * read *tmp117 .oreLocator ":findDrillLocation*retval"
-    * set :buildTitaniumDrill:result *tmp117
+  258 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+  259 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+  260 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
   261 op equal *tmp118 :buildTitaniumDrill:result false
   262 jump *label68 equal *tmp118 false
   263 set :error:error "Cannot locate spot for titanium drill"
 
   296 set :buildBlockFromCfg.5:config null
   297 setaddr *tmp121 *label76
   298 label *label73
-    * op add *tmp122 .coreX :buildBlockFromCfg.5:offsetX
-    * set :buildBlockFromCfg.5:x *tmp122
-    * op add *tmp123 .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlockFromCfg.5:y *tmp123
+  299 op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
+  300 op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
   301 set :buildBlock:block :buildBlockFromCfg.5:block
   302 set :buildBlock:x :buildBlockFromCfg.5:x
   303 set :buildBlock:y :buildBlockFromCfg.5:y
 
   334 set :buildBlockFromCfg.6:config processor2
   335 setaddr *tmp125 *label82
   336 label *label79
-    * op add *tmp126 .coreX :buildBlockFromCfg.6:offsetX
-    * set :buildBlockFromCfg.6:x *tmp126
-    * op add *tmp127 .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlockFromCfg.6:y *tmp127
+  337 op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
+  338 op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
   339 set :buildBlock:block :buildBlockFromCfg.6:block
   340 set :buildBlock:x :buildBlockFromCfg.6:x
   341 set :buildBlock:y :buildBlockFromCfg.6:y
 
   382 set :buildBlockFromCfg.7:config null
   383 setaddr *tmp129 *label88
   384 label *label85
-    * op add *tmp130 .coreX :buildBlockFromCfg.7:offsetX
-    * set :buildBlockFromCfg.7:x *tmp130
-    * op add *tmp131 .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlockFromCfg.7:y *tmp131
+  385 op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
+  386 op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
   387 set :buildBlock:block :buildBlockFromCfg.7:block
   388 set :buildBlock:x :buildBlockFromCfg.7:x
   389 set :buildBlock:y :buildBlockFromCfg.7:y
 
   417 set :buildBlockFromCfg.8:config null
   418 setaddr *tmp133 *label94
   419 label *label91
-    * op add *tmp134 .coreX :buildBlockFromCfg.8:offsetX
-    * set :buildBlockFromCfg.8:x *tmp134
-    * op add *tmp135 .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlockFromCfg.8:y *tmp135
+  420 op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
+  421 op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
   422 set :buildBlock:block :buildBlockFromCfg.8:block
   423 set :buildBlock:x :buildBlockFromCfg.8:x
   424 set :buildBlock:y :buildBlockFromCfg.8:y
 
   456 set :buildBlockFromCfg.9:config null
   457 setaddr *tmp137 *label100
   458 label *label97
-    * op add *tmp138 .coreX :buildBlockFromCfg.9:offsetX
-    * set :buildBlockFromCfg.9:x *tmp138
-    * op add *tmp139 .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlockFromCfg.9:y *tmp139
+  459 op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
+  460 op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
   461 set :buildBlock:block :buildBlockFromCfg.9:block
   462 set :buildBlock:x :buildBlockFromCfg.9:x
   463 set :buildBlock:y :buildBlockFromCfg.9:y
 
   491 set :buildBlockFromCfg.10:config @mono
   492 setaddr *tmp141 *label106
   493 label *label103
-    * op add *tmp142 .coreX :buildBlockFromCfg.10:offsetX
-    * set :buildBlockFromCfg.10:x *tmp142
-    * op add *tmp143 .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlockFromCfg.10:y *tmp143
+  494 op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
+  495 op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
   496 set :buildBlock:block :buildBlockFromCfg.10:block
   497 set :buildBlock:x :buildBlockFromCfg.10:x
   498 set :buildBlock:y :buildBlockFromCfg.10:y
 
   596 set :buildBlockFromCfg.11:config null
   597 setaddr *tmp164 *label124
   598 label *label121
-    * op add *tmp165 .coreX :buildBlockFromCfg.11:offsetX
-    * set :buildBlockFromCfg.11:x *tmp165
-    * op add *tmp166 .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlockFromCfg.11:y *tmp166
+  599 op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
+  600 op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
   601 set :buildBlock:block :buildBlockFromCfg.11:block
   602 set :buildBlock:x :buildBlockFromCfg.11:x
   603 set :buildBlock:y :buildBlockFromCfg.11:y
 
   631 set :buildBlockFromCfg.12:config null
   632 setaddr *tmp168 *label130
   633 label *label127
-    * op add *tmp169 .coreX :buildBlockFromCfg.12:offsetX
-    * set :buildBlockFromCfg.12:x *tmp169
-    * op add *tmp170 .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlockFromCfg.12:y *tmp170
+  634 op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
+  635 op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
   636 set :buildBlock:block :buildBlockFromCfg.12:block
   637 set :buildBlock:x :buildBlockFromCfg.12:x
   638 set :buildBlock:y :buildBlockFromCfg.12:y
 
   670 set :buildBlockFromCfg.13:config null
   671 setaddr *tmp172 *label136
   672 label *label133
-    * op add *tmp173 .coreX :buildBlockFromCfg.13:offsetX
-    * set :buildBlockFromCfg.13:x *tmp173
-    * op add *tmp174 .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlockFromCfg.13:y *tmp174
+  673 op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
+  674 op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
   675 set :buildBlock:block :buildBlockFromCfg.13:block
   676 set :buildBlock:x :buildBlockFromCfg.13:x
   677 set :buildBlock:y :buildBlockFromCfg.13:y
 
   705 set :buildBlockFromCfg.14:config null
   706 setaddr *tmp176 *label142
   707 label *label139
-    * op add *tmp177 .coreX :buildBlockFromCfg.14:offsetX
-    * set :buildBlockFromCfg.14:x *tmp177
-    * op add *tmp178 .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlockFromCfg.14:y *tmp178
+  708 op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
+  709 op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
   710 set :buildBlock:block :buildBlockFromCfg.14:block
   711 set :buildBlock:x :buildBlockFromCfg.14:x
   712 set :buildBlock:y :buildBlockFromCfg.14:y
 
   740 set :buildBlockFromCfg.15:config null
   741 setaddr *tmp180 *label148
   742 label *label145
-    * op add *tmp181 .coreX :buildBlockFromCfg.15:offsetX
-    * set :buildBlockFromCfg.15:x *tmp181
-    * op add *tmp182 .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlockFromCfg.15:y *tmp182
+  743 op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
+  744 op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
   745 set :buildBlock:block :buildBlockFromCfg.15:block
   746 set :buildBlock:x :buildBlockFromCfg.15:x
   747 set :buildBlock:y :buildBlockFromCfg.15:y
 
   820 wait 1e-15
   821 read *tmp192 .oreLocator ":layoutThoriumDrill*finished"
   822 jump *label164 equal *tmp192 false
-    * read *tmp193 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp193
+  823 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
   824 op equal *tmp194 :buildThoriumDrill:result false
   825 jump *label165 equal *tmp194 false
   826 set :error.1:error "Cannot locate spot for thorium drill"
 
   831 label *label165
   832 label *label166
   833 set :buildBlockAt:block @laser-drill
-    * read *tmp62 .oreLocator ".drillX"
-    * set :buildBlockAt:x *tmp62
-    * read *tmp63 .oreLocator ".drillY"
-    * set :buildBlockAt:y *tmp63
+  834 read :buildBlockAt:x .oreLocator ".drillX"
+  835 read :buildBlockAt:y .oreLocator ".drillY"
   836 set :buildBlockAt:rotation null
   837 set :buildBlockAt:config 0
   838 set :buildBlockAt:skipError false
 
   860 set :buildBlockAt:block @water-extractor
   861 read *tmp64 .oreLocator ".water1X"
   862 set :buildBlockAt:x *tmp64
-    * read *tmp65 .oreLocator ".water1Y"
-    * set :buildBlockAt:y *tmp65
+  863 read :buildBlockAt:y .oreLocator ".water1Y"
   864 set :buildBlockAt:rotation null
   865 set :buildBlockAt:config 0
   866 set :buildBlockAt:skipError false
 
   888 set :buildBlockAt:block @water-extractor
   889 read *tmp66 .oreLocator ".water2X"
   890 set :buildBlockAt:x *tmp66
-    * read *tmp67 .oreLocator ".water2Y"
-    * set :buildBlockAt:y *tmp67
+  891 read :buildBlockAt:y .oreLocator ".water2Y"
   892 set :buildBlockAt:rotation null
   893 set :buildBlockAt:config 0
   894 set :buildBlockAt:skipError false
 
   907 label *label180
   908 label *label179
   909 set :buildBlockAt:block @steam-generator
-    * read *tmp68 .oreLocator ".generatorX"
-    * set :buildBlockAt:x *tmp68
-    * read *tmp69 .oreLocator ".generatorY"
-    * set :buildBlockAt:y *tmp69
+  910 read :buildBlockAt:x .oreLocator ".generatorX"
+  911 read :buildBlockAt:y .oreLocator ".generatorY"
   912 set :buildBlockAt:rotation null
   913 set :buildBlockAt:config 0
   914 set :buildBlockAt:skipError false
 
   927 label *label183
   928 label *label182
   929 set :buildBlockAt:block @power-node
-    * read *tmp70 .oreLocator ".nodeX"
-    * set :buildBlockAt:x *tmp70
-    * read *tmp71 .oreLocator ".nodeY"
-    * set :buildBlockAt:y *tmp71
+  930 read :buildBlockAt:x .oreLocator ".nodeX"
+  931 read :buildBlockAt:y .oreLocator ".nodeY"
   932 set :buildBlockAt:rotation null
   933 set :buildBlockAt:config 0
   934 set :buildBlockAt:skipError false
 
   947 label *label186
   948 label *label185
   949 set :buildBlockAt:block @solar-panel
-    * read *tmp72 .oreLocator ".panelX"
-    * set :buildBlockAt:x *tmp72
-    * read *tmp73 .oreLocator ".panelY"
-    * set :buildBlockAt:y *tmp73
+  950 read :buildBlockAt:x .oreLocator ".panelX"
+  951 read :buildBlockAt:y .oreLocator ".panelY"
   952 set :buildBlockAt:rotation null
   953 set :buildBlockAt:config 0
   954 set :buildBlockAt:skipError false
 
   969 set :buildBlockFromCfg.16:config @coal
   970 setaddr *tmp207 *label192
   971 label *label189
-    * op add *tmp208 .coreX :buildBlockFromCfg.16:offsetX
-    * set :buildBlockFromCfg.16:x *tmp208
-    * op add *tmp209 .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlockFromCfg.16:y *tmp209
+  972 op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
+  973 op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
   974 set :buildBlock:block :buildBlockFromCfg.16:block
   975 set :buildBlock:x :buildBlockFromCfg.16:x
   976 set :buildBlock:y :buildBlockFromCfg.16:y
 
  1091 setaddr :moveToBlock*retaddr *label224 (h:*label224)
  1092 call *label7 *invalid :moveToBlock*retval (m:*label224) (h:*label224)
  1093 label *label224
-    * sensor *tmp227 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp227
+ 1094 sensor :depositItems:cap :depositItems:block @itemCapacity
  1095 label *label225
  1096 ucontrol itemDrop :depositItems:block 5
  1097 label *label226
 
  1121 return :depositItems*retaddr
  1122 end
  1123 label *label9
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp234 *tmp235
+ 1124 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp234 0
  1125 op equal *tmp236 *tmp234 false
  1126 jump *label233 equal *tmp236 false
  1127 set :error.3:error "Cannot locate ore"
 
  1135 return :locateOre*retaddr
  1136 end
  1137 label *label10
-    * op min *tmp238 :mineOre:amount 5
-    * set :mineOre:amount *tmp238
+ 1138 op min :mineOre:amount :mineOre:amount 5
  1139 set :transportStatus.1:target :mineOre:amount
  1140 set :transportStatus.1:item :mineOre:ore
  1141 write :transportStatus.1:target .display ".transportTarget"
 
  1170 set :status3.3:text "Mining..."
  1171 write :status3.3:text .display ".status3"
  1172 label *label246
-    * op add *tmp244 @second 10
-    * set :mineOre:stop *tmp244
+ 1173 op add :mineOre:stop @second 10
  1174 label *label247
-    * sensor *tmp245 @unit @firstItem
-    * set :mineOre:item *tmp245
+ 1175 sensor :mineOre:item @unit @firstItem
  1176 op notEqual *tmp246 :mineOre:item null
  1177 op notEqual *tmp247 :mineOre:item :mineOre:ore
  1178 op land *tmp248 *tmp246 *tmp247
 
  1210 write :status2:item .display ".item2"
  1211 write :status2:block .display ".block2"
  1212 label *label256
-    * set *tmp254 :mineOre.1:ore
-    * set :mineOre:ore *tmp254
+ 1213 set :mineOre:ore :mineOre.1:ore
  1214 set :mineOre:amount 5
  1215 set :mineOre:block .core
  1216 setaddr :mineOre*retaddr *label257 (h:*label257)
 
  1220 return :mineOre.1*retaddr
  1221 end
  1222 label *label12
-    * sensor *tmp255 :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:target *tmp255
+ 1223 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1224 set :transportStatus.2:item :fetchBlock:item
  1225 write :transportStatus.2:target .display ".transportTarget"
  1226 write :transportStatus.2:item .display ".transportItem"
 
  1250 label *label262
  1251 label *label266
  1252 ucontrol itemTake :fetchBlock:block :fetchBlock:item 5
-    * sensor *tmp260 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp260
+ 1253 sensor :fetchBlock:unitItem @unit @firstItem
  1254 op notEqual *tmp261 :fetchBlock:unitItem null
  1255 op notEqual *tmp262 :fetchBlock:unitItem :fetchBlock:item
  1256 op land *tmp263 *tmp261 *tmp262
 
  1294 sensor *tmp274 :findFreeUnit:first_unit @dead
  1295 op equal *tmp275 *tmp274 1
  1296 jump *label280 equal *tmp275 false
-    * set *tmp277 @unit
-    * set :findFreeUnit:first_unit *tmp277
+ 1297 set :findFreeUnit:first_unit @unit
  1298 jump *label281 always
  1299 label *label280
  1300 label *label281
 
  1330 write :status2.2:item .display ".item2"
  1331 write :status2.2:block .display ".block2"
  1332 label *label291
-    * sensor *tmp287 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp287
+ 1333 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1334 sensor *tmp288 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp289 :supplyBlock:blockCapacity *tmp288
-    * set :supplyBlock:missing *tmp289
+ 1335 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp288
  1336 op greaterThan *tmp290 :supplyBlock:missing 0
  1337 jump *label292 equal *tmp290 false
  1338 set :mineOre:ore :supplyBlock:ore
 
  1370 write :status2.3:item .display ".item2"
  1371 write :status2.3:block .display ".block2"
  1372 label *label301
-    * sensor *tmp298 :supplyBlock.1:block @itemCapacity
-    * set :supplyBlock.1:blockCapacity *tmp298
+ 1373 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1374 sensor *tmp299 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp300 :supplyBlock.1:blockCapacity *tmp299
-    * set :supplyBlock.1:missing *tmp300
+ 1375 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp299
  1376 op greaterThan *tmp301 :supplyBlock.1:missing 0
  1377 jump *label302 equal *tmp301 false
  1378 set :mineOre:ore :supplyBlock.1:ore
 
  1403 write :status2.4:item .display ".item2"
  1404 write :status2.4:block .display ".block2"
  1405 label *label309
-    * sensor *tmp306 :supplyBlock.2:block @itemCapacity
-    * set :supplyBlock.2:blockCapacity *tmp306
+ 1406 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1407 sensor *tmp307 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp308 :supplyBlock.2:blockCapacity *tmp307
-    * set :supplyBlock.2:missing *tmp308
+ 1408 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp307
  1409 op greaterThan *tmp309 :supplyBlock.2:missing 0
  1410 jump *label310 equal *tmp309 false
  1411 set :mineOre:ore :supplyBlock.2:ore
 
  1444 write :status2.5:item .display ".item2"
  1445 write :status2.5:block .display ".block2"
  1446 label *label319
-    * sensor *tmp317 :supplyBlock.3:block @itemCapacity
-    * set :supplyBlock.3:blockCapacity *tmp317
+ 1447 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1448 sensor *tmp318 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp319 :supplyBlock.3:blockCapacity *tmp318
-    * set :supplyBlock.3:missing *tmp319
+ 1449 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp318
  1450 op greaterThan *tmp320 :supplyBlock.3:missing 0
  1451 jump *label320 equal *tmp320 false
  1452 set :mineOre:ore :supplyBlock.3:ore
 
  1474 jump *label323 equal *tmp323 false
  1475 sensor *tmp325 .core @titanium
  1476 op sub *tmp326 .targetTitanium *tmp325
-    * op min *tmp327 7 *tmp326
-    * set *tmp324 *tmp327
+ 1477 op min *tmp324 7 *tmp326
  1478 jump *label324 always
  1479 label *label323
  1480 set *tmp324 100
 
  1504 set :status1.5:text "Goal 6: silicon requirement"
  1505 write :status1.5:text .display ".status1"
  1506 label *label335
-    * sensor *tmp340 .core @coal
-    * set :supplyBase0:coal *tmp340
-    * sensor *tmp341 .core @sand
-    * set :supplyBase0:sand *tmp341
+ 1507 sensor :supplyBase0:coal .core @coal
+ 1508 sensor :supplyBase0:sand .core @sand
  1509 op lessThan *tmp342 :supplyBase0:coal :supplyBase0:sand
  1510 jump *label336 equal *tmp342 false
  1511 set *tmp343 @coal
 
  1559 set :status1.9:text "Goal 10: supplying base"
  1560 write :status1.9:text .display ".status1"
  1561 label *label351
-    * sensor *tmp353 .core @coal
-    * set :supplyBase0:coal.1 *tmp353
-    * sensor *tmp354 .core @sand
-    * set :supplyBase0:sand.1 *tmp354
+ 1562 sensor :supplyBase0:coal.1 .core @coal
+ 1563 sensor :supplyBase0:sand.1 .core @sand
  1564 op lessThanEq *tmp355 :supplyBase0:coal.1 :supplyBase0:sand.1
  1565 jump *label352 equal *tmp355 false
  1566 set *tmp356 @coal
 
  1796 return :log*retaddr
  1797 end
  1798 label *label24
-    * sensor *tmp407 :logBlock:block @id
-    * set :log:encodedId *tmp407
+ 1799 sensor :log:encodedId :logBlock:block @id
  1800 setaddr :log*retaddr *label407 (h:*label407)
  1801 call *label23 *invalid :log*retval (m:*label407) (h:*label407)
  1802 label *label407
 
  1812 set :status3.4:text "Building..."
  1813 write :status3.4:text .display ".status3"
  1814 label *label410
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp408 *tmp409
-    * set :buildBlockAt:building *tmp408
+ 1815 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1816 op notEqual *tmp410 :buildBlockAt:building null
  1817 jump *label411 equal *tmp410 false
  1818 op equal *tmp412 :buildBlockAt:type :buildBlockAt:block
 
  1838 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1839 wait 0.25
  1840 label *label418
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp415 *tmp416
-    * set :buildBlockAt:building *tmp415
+ 1841 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1842 op equal *tmp417 :buildBlockAt:building null
  1843 jump *label421 equal *tmp417 false
  1844 set :buildBlockAt*retval null

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
  1005 jump *label194 notEqual *tmp211 false
  1006 label *label196
  1007 label *label198
-    * jump *label200 equal true false
  1008 setaddr :supplyBase*retaddr *label201 (h:*label201)
  1009 call *label20 *invalid :supplyBase*retval (m:*label201) (h:*label201)
  1010 label *label201

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-65 instructions):
 
    18 set .builder @unit
    19 ulocate building core false @copper .coreX .coreY 0 .core
    20 label *label29
-    * op equal *tmp78 .core null
-    * jump *label28 notEqual *tmp78 false
+   21 jump *label28 equal .core null
    22 label *label30
    23 set .display processor1
    24 set .flareController processor3
 
   257 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
   258 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
   259 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp118 :buildTitaniumDrill:result false
-    * jump *label68 equal *tmp118 false
+  260 jump *label68 notEqual :buildTitaniumDrill:result false
   261 set :error:error "Cannot locate spot for titanium drill"
   262 set .ERROR :error:error
   263 stop
 
   562 call *label19 *invalid :supplyBase1*retval (m:*label116) (h:*label116)
   563 label *label116
   564 sensor *tmp156 .battery @totalPower
-    * op lessThan *tmp157 *tmp156 300
-    * jump *label117 equal *tmp157 false
+  565 jump *label117 greaterThanEq *tmp156 300
   566 jump *label111 always
   567 jump *label118 always
   568 label *label117
   569 label *label118
   570 label *label110
   571 read *tmp34 .controller ".monos"
-    * op lessThan *tmp159 *tmp34 1
-    * jump *label109 notEqual *tmp159 false
+  572 jump *label109 lessThan *tmp34 1
   573 label *label111
   574 write .core .flareController ":start:aCore"
   575 write .titaniumDrill .flareController ":start:aDrill"
 
   768 jump *label150 equal :searchThorium false
   769 label *label152
   770 read *tmp35 .controller ".flares"
-    * op lessThan *tmp184 *tmp35 1
-    * jump *label154 equal *tmp184 false
+  771 jump *label154 greaterThanEq *tmp35 1
   772 setaddr :supplyBase*retaddr *label155 (h:*label155)
   773 call *label20 *invalid :supplyBase*retval (m:*label155) (h:*label155)
   774 label *label155
 
   794 label *label160
   795 label *label158
   796 read *tmp190 .oreLocator ":layoutThoriumDrill*finished"
-    * op equal *tmp191 *tmp190 false
-    * jump *label157 notEqual *tmp191 false
+  797 jump *label157 equal *tmp190 false
   798 label *label159
   799 jump *label151 always
   800 label *label150
 
   815 read *tmp192 .oreLocator ":layoutThoriumDrill*finished"
   816 jump *label164 equal *tmp192 false
   817 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp194 :buildThoriumDrill:result false
-    * jump *label165 equal *tmp194 false
+  818 jump *label165 notEqual :buildThoriumDrill:result false
   819 set :error.1:error "Cannot locate spot for thorium drill"
   820 set .ERROR :error.1:error
   821 stop
 
   833 call *label25 *invalid :buildBlockAt*retval (m:*label168) (h:*label168)
   834 label *label168
   835 read *tmp64 .oreLocator ".water1X"
-    * op lessThan *tmp197 *tmp64 0
-    * jump *label169 equal *tmp197 false
+  836 jump *label169 greaterThanEq *tmp64 0
   837 jump *label161 always
   838 jump *label170 always
   839 label *label169
 
   860 call *label25 *invalid :buildBlockAt*retval (m:*label173) (h:*label173)
   861 label *label173
   862 read *tmp66 .oreLocator ".water2X"
-    * op lessThan *tmp200 *tmp66 0
-    * jump *label174 equal *tmp200 false
+  863 jump *label174 greaterThanEq *tmp66 0
   864 jump *label161 always
   865 jump *label175 always
   866 label *label174
 
   992 read *tmp35 .controller ".flares"
   993 read *tmp34 .controller ".monos"
   994 op add *tmp210 *tmp35 *tmp34
-    * op lessThan *tmp211 *tmp210 16
-    * jump *label194 notEqual *tmp211 false
+  995 jump *label194 lessThan *tmp210 16
   996 label *label196
   997 label *label198
   998 setaddr :supplyBase*retaddr *label201 (h:*label201)
 
  1013 label *label205
  1014 label *label206
  1015 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp212
-    * op equal *tmp213 *tmp212 false
-    * jump *label208 equal *tmp213 false
+ 1016 jump *label208 notEqual *tmp212 false
  1017 op sub *tmp214 :moveTo:radius 0.5
  1018 ucontrol approach :moveTo:x :moveTo:y *tmp214
  1019 label *label207
 
  1040 label *label212
  1041 label *label213
  1042 sensor *tmp217 @unit @firstItem
-    * op notEqual *tmp218 *tmp217 null
-    * jump *label216 equal *tmp218 false
+ 1043 jump *label216 equal *tmp217 null
  1044 ucontrol itemDrop @air 1000
  1045 jump *label217 always
  1046 label *label216
 
  1048 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1049 label *label214
  1050 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp220
-    * op equal *tmp221 *tmp220 false
-    * jump *label213 notEqual *tmp221 false
+ 1051 jump *label213 equal *tmp220 false
  1052 label *label215
  1053 label *label211
  1054 return :moveToEmpty*retaddr
 
  1070 write :status3.2:text .display ".status3"
  1071 label *label221
  1072 sensor *tmp224 @unit @firstItem
-    * op equal *tmp225 *tmp224 :depositItems:item
-    * jump *label222 equal *tmp225 false
+ 1073 jump *label222 notEqual *tmp224 :depositItems:item
  1074 set :moveToBlock:block :depositItems:block
  1075 set :moveToBlock:radius 6
  1076 setaddr :moveToBlock*retaddr *label224 (h:*label224)
 
  1083 sensor *tmp228 @unit @firstItem
  1084 op mul *tmp229 *tmp228 :depositItems:cap
  1085 sensor *tmp230 :depositItems:block :depositItems:item
-    * op greaterThan *tmp231 *tmp229 *tmp230
-    * jump *label225 notEqual *tmp231 false
+ 1086 jump *label225 greaterThan *tmp229 *tmp230
  1087 label *label227
  1088 jump *label223 always
  1089 label *label222
  1090 label *label228
  1091 sensor *tmp232 @unit @firstItem
-    * op notEqual *tmp233 *tmp232 null
-    * jump *label230 equal *tmp233 false
+ 1092 jump *label230 equal *tmp232 null
  1093 ucontrol itemDrop @air 1000
  1094 label *label229
  1095 jump *label228 always
 
  1105 end
  1106 label *label9
  1107 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp234 0
-    * op equal *tmp236 *tmp234 false
-    * jump *label233 equal *tmp236 false
+ 1108 jump *label233 notEqual *tmp234 false
  1109 set :error.3:error "Cannot locate ore"
  1110 set .ERROR :error.3:error
  1111 stop
 
  1135 call *label6 *invalid :moveToEmpty*retval (m:*label239) (h:*label239)
  1136 label *label239
  1137 sensor *tmp239 @unit @firstItem
-    * op notEqual *tmp240 *tmp239 :mineOre:ore
-    * jump *label240 equal *tmp240 false
+ 1138 jump *label240 equal *tmp239 :mineOre:ore
  1139 label *label243
  1140 sensor *tmp242 @unit @firstItem
-    * op notEqual *tmp243 *tmp242 null
-    * jump *label245 equal *tmp243 false
+ 1141 jump *label245 equal *tmp242 null
  1142 ucontrol itemDrop @air 1000
  1143 label *label244
  1144 jump *label243 always
 
  1162 label *label250
  1163 label *label251
  1164 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp250 @second :mineOre:stop
-    * jump *label252 equal *tmp250 false
+ 1165 jump *label252 lessThanEq @second :mineOre:stop
  1166 jump *label249 always
  1167 jump *label253 always
  1168 label *label252
  1169 label *label253
  1170 label *label248
  1171 sensor *tmp252 @unit @totalItems
-    * op lessThan *tmp253 *tmp252 :mineOre:amount
-    * jump *label247 notEqual *tmp253 false
+ 1172 jump *label247 lessThan *tmp252 :mineOre:amount
  1173 label *label249
  1174 ucontrol unbind
  1175 set :depositItems:block :mineOre:block
 
  1219 label *label261
  1220 label *label263
  1221 sensor *tmp258 @unit @firstItem
-    * op notEqual *tmp259 *tmp258 null
-    * jump *label265 equal *tmp259 false
+ 1222 jump *label265 equal *tmp258 null
  1223 ucontrol itemDrop @air 1000
  1224 label *label264
  1225 jump *label263 always
 
  1253 end
  1254 label *label14
  1255 ubind :findFreeUnit:unit_type
-    * op equal *tmp269 @unit null
-    * jump *label273 equal *tmp269 false
+ 1256 jump *label273 notEqual @unit null
  1257 jump *label272 always
  1258 jump *label274 always
  1259 label *label273
 
  1261 set :findFreeUnit:first_unit @unit
  1262 label *label275
  1263 sensor *tmp271 @unit @controlled
-    * op equal *tmp272 *tmp271 0
-    * jump *label278 equal *tmp272 false
+ 1264 jump *label278 notEqual *tmp271 0
  1265 ucontrol flag :findFreeUnit:initial_flag
  1266 jump *label272 always
  1267 jump *label279 always
  1268 label *label278
  1269 sensor *tmp274 :findFreeUnit:first_unit @dead
-    * op equal *tmp275 *tmp274 1
-    * jump *label280 equal *tmp275 false
+ 1270 jump *label280 notEqual *tmp274 1
  1271 set :findFreeUnit:first_unit @unit
  1272 jump *label281 always
  1273 label *label280
 
  1275 label *label279
  1276 ubind :findFreeUnit:unit_type
  1277 label *label276
-    * op notEqual *tmp278 :findFreeUnit:first_unit @unit
-    * jump *label275 notEqual *tmp278 false
+ 1278 jump *label275 notEqual :findFreeUnit:first_unit @unit
  1279 label *label277
  1280 jump *label272 always
  1281 label *label272
 
  1283 end
  1284 label *label18
  1285 set :supplyBase0:supplied false
-    * op equal *tmp279 .unloader1 null
-    * jump *label283 equal *tmp279 false
+ 1286 jump *label283 notEqual .unloader1 null
  1287 sensor *tmp281 .core @graphite
-    * op lessThan *tmp282 *tmp281 .targetGraphite
-    * jump *label285 equal *tmp282 false
+ 1288 jump *label285 greaterThanEq *tmp281 .targetGraphite
  1289 sensor *tmp284 .press @coal
-    * op lessThan *tmp285 *tmp284 5
-    * jump *label287 equal *tmp285 false
+ 1290 jump *label287 greaterThanEq *tmp284 5
  1291 set :status1:text "Goal 1: graphite requirement"
  1292 write :status1:text .display ".status1"
  1293 label *label289
 
  1303 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1304 sensor *tmp288 :supplyBlock:block :supplyBlock:ore
  1305 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp288
-    * op greaterThan *tmp290 :supplyBlock:missing 0
-    * jump *label292 equal *tmp290 false
+ 1306 jump *label292 lessThanEq :supplyBlock:missing 0
  1307 set :mineOre:ore :supplyBlock:ore
  1308 set :mineOre:amount :supplyBlock:blockCapacity
  1309 set :mineOre:block :supplyBlock:block
 
  1322 label *label285
  1323 label *label286
  1324 sensor *tmp292 .core @silicon
-    * op lessThan *tmp293 *tmp292 .targetSilicon
-    * jump *label295 equal *tmp293 false
+ 1325 jump *label295 greaterThanEq *tmp292 .targetSilicon
  1326 sensor *tmp295 .smelter @coal
-    * op lessThan *tmp296 *tmp295 5
-    * jump *label297 equal *tmp296 false
+ 1327 jump *label297 greaterThanEq *tmp295 5
  1328 set :status1.1:text "Goal 2: coal for silicon requirement"
  1329 write :status1.1:text .display ".status1"
  1330 label *label299
 
  1340 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1341 sensor *tmp299 :supplyBlock.1:block :supplyBlock.1:ore
  1342 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp299
-    * op greaterThan *tmp301 :supplyBlock.1:missing 0
-    * jump *label302 equal *tmp301 false
+ 1343 jump *label302 lessThanEq :supplyBlock.1:missing 0
  1344 set :mineOre:ore :supplyBlock.1:ore
  1345 set :mineOre:amount :supplyBlock.1:blockCapacity
  1346 set :mineOre:block :supplyBlock.1:block
 
  1355 jump *label298 always
  1356 label *label297
  1357 sensor *tmp303 .smelter @sand
-    * op lessThan *tmp304 *tmp303 5
-    * jump *label305 equal *tmp304 false
+ 1358 jump *label305 greaterThanEq *tmp303 5
  1359 set :status1.2:text "Goal 3: sand for silicon requirement"
  1360 write :status1.2:text .display ".status1"
  1361 label *label307
 
  1371 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1372 sensor *tmp307 :supplyBlock.2:block :supplyBlock.2:ore
  1373 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp307
-    * op greaterThan *tmp309 :supplyBlock.2:missing 0
-    * jump *label310 equal *tmp309 false
+ 1374 jump *label310 lessThanEq :supplyBlock.2:missing 0
  1375 set :mineOre:ore :supplyBlock.2:ore
  1376 set :mineOre:amount :supplyBlock.2:blockCapacity
  1377 set :mineOre:block :supplyBlock.2:block
 
  1391 label *label295
  1392 label *label296
  1393 sensor *tmp311 .battery @totalPower
-    * op lessThan *tmp312 *tmp311 .powerTarget
-    * jump *label313 equal *tmp312 false
+ 1394 jump *label313 greaterThanEq *tmp311 .powerTarget
  1395 sensor *tmp314 .generator @coal
-    * op lessThan *tmp315 *tmp314 2
-    * jump *label315 equal *tmp315 false
+ 1396 jump *label315 greaterThanEq *tmp314 2
  1397 set :status1.3:text "Goal 4: supplying generator"
  1398 write :status1.3:text .display ".status1"
  1399 label *label317
 
  1409 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1410 sensor *tmp318 :supplyBlock.3:block :supplyBlock.3:ore
  1411 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp318
-    * op greaterThan *tmp320 :supplyBlock.3:missing 0
-    * jump *label320 equal *tmp320 false
+ 1412 jump *label320 lessThanEq :supplyBlock.3:missing 0
  1413 set :mineOre:ore :supplyBlock.3:ore
  1414 set :mineOre:amount :supplyBlock.3:blockCapacity
  1415 set :mineOre:block :supplyBlock.3:block
 
  1431 label *label283
  1432 label *label284
  1433 sensor *tmp322 .core @titanium
-    * op lessThan *tmp323 *tmp322 .targetTitanium
-    * jump *label323 equal *tmp323 false
+ 1434 jump *label323 greaterThanEq *tmp322 .targetTitanium
  1435 sensor *tmp325 .core @titanium
  1436 op sub *tmp326 .targetTitanium *tmp325
  1437 op min *tmp324 7 *tmp326
 
  1441 label *label324
  1442 set :supplyBase0:titaniumTrigger *tmp324
  1443 sensor *tmp328 .titaniumDrill @titanium
-    * op lessThan *tmp329 *tmp328 :supplyBase0:titaniumTrigger
-    * jump *label325 equal *tmp329 false
-    * op equal *tmp331 :supplyBase0:supplied false
-    * jump *label327 equal *tmp331 false
+ 1444 jump *label325 greaterThanEq *tmp328 :supplyBase0:titaniumTrigger
+ 1445 jump *label327 notEqual :supplyBase0:supplied false
  1446 sensor *tmp333 .battery @totalPower
  1447 op mul *tmp334 .unloader1 .powerTarget
-    * op lessThan *tmp335 *tmp333 *tmp334
-    * jump *label329 equal *tmp335 false
+ 1448 jump *label329 greaterThanEq *tmp333 *tmp334
  1449 set :status1.4:text "Goal 5: supplying generator"
  1450 write :status1.4:text .display ".status1"
  1451 label *label331
 
  1456 jump *label330 always
  1457 label *label329
  1458 sensor *tmp337 .core @silicon
-    * op lessThan *tmp338 *tmp337 .targetSilicon
-    * jump *label333 equal *tmp338 false
+ 1459 jump *label333 greaterThanEq *tmp337 .targetSilicon
  1460 set :status1.5:text "Goal 6: silicon requirement"
  1461 write :status1.5:text .display ".status1"
  1462 label *label335
  1463 sensor :supplyBase0:coal .core @coal
  1464 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp342 :supplyBase0:coal :supplyBase0:sand
-    * jump *label336 equal *tmp342 false
+ 1465 jump *label336 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1466 set *tmp343 @coal
  1467 jump *label337 always
  1468 label *label336
 
  1476 jump *label334 always
  1477 label *label333
  1478 sensor *tmp344 .core @copper
-    * op lessThan *tmp345 *tmp344 .targetCopper
-    * jump *label339 equal *tmp345 false
+ 1479 jump *label339 greaterThanEq *tmp344 .targetCopper
  1480 set :status1.6:text "Goal 7: copper requirement"
  1481 write :status1.6:text .display ".status1"
  1482 label *label341
 
  1487 jump *label340 always
  1488 label *label339
  1489 sensor *tmp347 .core @lead
-    * op lessThan *tmp348 *tmp347 .targetLead
-    * jump *label343 equal *tmp348 false
+ 1490 jump *label343 greaterThanEq *tmp347 .targetLead
  1491 set :status1.7:text "Goal 8: lead requirement"
  1492 write :status1.7:text .display ".status1"
  1493 label *label345
 
  1498 jump *label344 always
  1499 label *label343
  1500 sensor *tmp350 .core @metaglass
-    * op lessThan *tmp351 *tmp350 .targetMetaglass
-    * jump *label347 equal *tmp351 false
+ 1501 jump *label347 greaterThanEq *tmp350 .targetMetaglass
  1502 set :status1.8:text "Goal 9: metaglass requirement"
  1503 write :status1.8:text .display ".status1"
  1504 label *label349
 
  1513 label *label351
  1514 sensor :supplyBase0:coal.1 .core @coal
  1515 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp355 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label352 equal *tmp355 false
+ 1516 jump *label352 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1517 set *tmp356 @coal
  1518 jump *label353 always
  1519 label *label352
 
  1549 label *label19
  1550 sensor *tmp357 .core @sand
  1551 sensor *tmp358 .core @coal
-    * op lessThan *tmp359 *tmp357 *tmp358
-    * jump *label358 equal *tmp359 false
+ 1552 jump *label358 greaterThanEq *tmp357 *tmp358
  1553 sensor *tmp361 .core @sand
  1554 sensor *tmp362 .core @lead
-    * op lessThan *tmp363 *tmp361 *tmp362
-    * jump *label360 equal *tmp363 false
+ 1555 jump *label360 greaterThanEq *tmp361 *tmp362
  1556 set :status1.11:text "Phase 1: mining sand"
  1557 write :status1.11:text .display ".status1"
  1558 label *label362
 
  1574 label *label358
  1575 sensor *tmp365 .core @coal
  1576 sensor *tmp366 .core @lead
-    * op lessThan *tmp367 *tmp365 *tmp366
-    * jump *label366 equal *tmp367 false
+ 1577 jump *label366 greaterThanEq *tmp365 *tmp366
  1578 set :status1.13:text "Phase 1: mining coal"
  1579 write :status1.13:text .display ".status1"
  1580 label *label368
 
  1598 end
  1599 label *label20
  1600 read *tmp34 .controller ".monos"
-    * op greaterThan *tmp369 *tmp34 3
-    * jump *label373 equal *tmp369 false
+ 1601 jump *label373 lessThanEq *tmp34 3
  1602 setaddr :supplyBase1*retaddr *label375 (h:*label375)
  1603 call *label19 *invalid :supplyBase1*retval (m:*label375) (h:*label375)
  1604 label *label375
 
  1613 end
  1614 label *label21
  1615 sensor *tmp371 .core @copper
-    * op greaterThanEq *tmp372 *tmp371 .targetCopper
-    * jump *label378 equal *tmp372 false
+ 1616 jump *label378 lessThan *tmp371 .targetCopper
  1617 sensor *tmp374 .core @lead
-    * op greaterThanEq *tmp375 *tmp374 .targetLead
-    * jump *label380 equal *tmp375 false
+ 1618 jump *label380 lessThan *tmp374 .targetLead
  1619 sensor *tmp377 .core @graphite
-    * op greaterThanEq *tmp378 *tmp377 .targetGraphite
-    * jump *label382 equal *tmp378 false
+ 1620 jump *label382 lessThan *tmp377 .targetGraphite
  1621 sensor *tmp380 .core @silicon
-    * op greaterThanEq *tmp381 *tmp380 .targetSilicon
-    * jump *label384 equal *tmp381 false
+ 1622 jump *label384 lessThan *tmp380 .targetSilicon
  1623 sensor *tmp383 .core @titanium
-    * op greaterThanEq *tmp384 *tmp383 .targetTitanium
-    * jump *label386 equal *tmp384 false
+ 1624 jump *label386 lessThan *tmp383 .targetTitanium
  1625 sensor *tmp386 .core @metaglass
-    * op greaterThanEq *tmp387 *tmp386 .targetMetaglass
-    * jump *label388 equal *tmp387 false
+ 1626 jump *label388 lessThan *tmp386 .targetMetaglass
  1627 set :targetMet*retval true
  1628 jump *label377 always
  1629 jump *label389 always
 
  1713 setaddr :targetMet*retaddr *label403 (h:*label403)
  1714 call *label21 *invalid :targetMet*retval (m:*label403) (h:*label403)
  1715 label *label403
-    * op equal *tmp400 :targetMet*retval false
-    * jump *label402 equal *tmp400 false
+ 1716 jump *label402 notEqual :targetMet*retval false
  1717 setaddr :supplyBase*retaddr *label404 (h:*label404)
  1718 call *label20 *invalid :supplyBase*retval (m:*label404) (h:*label404)
  1719 label *label404
 
  1753 write :status3.4:text .display ".status3"
  1754 label *label410
  1755 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp410 :buildBlockAt:building null
-    * jump *label411 equal *tmp410 false
-    * op equal *tmp412 :buildBlockAt:type :buildBlockAt:block
-    * jump *label413 equal *tmp412 false
+ 1756 jump *label411 equal :buildBlockAt:building null
+ 1757 jump *label413 notEqual :buildBlockAt:type :buildBlockAt:block
  1758 set :buildBlockAt*retval :buildBlockAt:building
  1759 jump *label408 always
  1760 jump *label414 always
 
  1777 wait 0.25
  1778 label *label418
  1779 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op equal *tmp417 :buildBlockAt:building null
-    * jump *label421 equal *tmp417 false
+ 1780 jump *label421 notEqual :buildBlockAt:building null
  1781 set :buildBlockAt*retval null
  1782 jump *label408 always
  1783 jump *label422 always
  1784 label *label421
  1785 label *label422
  1786 label *label419
-    * op notEqual *tmp419 :buildBlockAt:type :buildBlockAt:block
-    * jump *label418 notEqual *tmp419 false
+ 1787 jump *label418 notEqual :buildBlockAt:type :buildBlockAt:block
  1788 label *label420
  1789 set :logBlock:block :buildBlockAt:block
  1790 setaddr :logBlock*retaddr *label423 (h:*label423)
 
  1826 set :findUnits:count 0
  1827 ubind :findUnits:type
  1828 set :findUnits:firstUnit @unit
-    * op notEqual *tmp420 :findUnits:firstUnit null
-    * jump *label428 equal *tmp420 false
+ 1829 jump *label428 equal :findUnits:firstUnit null
  1830 label *label430
  1831 op add :findUnits:count :findUnits:count 1
  1832 ubind :findUnits:type
  1833 label *label431
-    * op notEqual *tmp423 @unit :findUnits:firstUnit
-    * jump *label430 notEqual *tmp423 false
+ 1834 jump *label430 notEqual @unit :findUnits:firstUnit
  1835 label *label432
  1836 jump *label429 always
  1837 label *label428

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-39 instructions):
 
   262 set .ERROR :error:error
   263 stop
   264 label *label70
-    * jump *label69 always
   265 label *label68
   266 label *label69
   267 write @pneumatic-drill .display ".nextBlock"
 
   554 wait 1e-15
   555 read *tmp155 .flareController ":start*finished"
   556 jump *label115 equal *tmp155 false
-    * jump *label113 always
   557 label *label112
   558 label *label113
   559 setaddr :supplyBase1*retaddr *label116 (h:*label116)
 
   562 sensor *tmp156 .battery @totalPower
   563 jump *label117 greaterThanEq *tmp156 300
   564 jump *label111 always
-    * jump *label118 always
   565 label *label117
   566 label *label118
   567 label *label110
 
   793 read *tmp190 .oreLocator ":layoutThoriumDrill*finished"
   794 jump *label157 equal *tmp190 false
   795 label *label159
-    * jump *label151 always
   796 label *label150
   797 label *label151
   798 set :meetTarget:block @laser-drill
 
   816 set .ERROR :error.1:error
   817 stop
   818 label *label167
-    * jump *label166 always
   819 label *label165
   820 label *label166
   821 set :buildBlockAt:block @laser-drill
 
   830 read *tmp64 .oreLocator ".water1X"
   831 jump *label169 greaterThanEq *tmp64 0
   832 jump *label161 always
-    * jump *label170 always
   833 label *label169
   834 label *label170
   835 set :meetTarget:block @water-extractor
 
   856 read *tmp66 .oreLocator ".water2X"
   857 jump *label174 greaterThanEq *tmp66 0
   858 jump *label161 always
-    * jump *label175 always
   859 label *label174
   860 label *label175
   861 set :meetTarget:block @water-extractor
 
  1035 sensor *tmp217 @unit @firstItem
  1036 jump *label216 equal *tmp217 null
  1037 ucontrol itemDrop @air 1000
-    * jump *label217 always
  1038 label *label216
  1039 label *label217
  1040 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
  1102 set .ERROR :error.3:error
  1103 stop
  1104 label *label235
-    * jump *label234 always
  1105 label *label233
  1106 label *label234
  1107 label *label232
 
  1135 jump *label243 always
  1136 label *label245
  1137 label *label242
-    * jump *label241 always
  1138 label *label240
  1139 label *label241
  1140 set :status3.3:text "Mining..."
 
  1148 op land *tmp248 *tmp246 *tmp247
  1149 jump *label250 equal *tmp248 false
  1150 jump *label249 always
-    * jump *label251 always
  1151 label *label250
  1152 label *label251
  1153 ucontrol mine :mineOre:x :mineOre:y
  1154 jump *label252 lessThanEq @second :mineOre:stop
  1155 jump *label249 always
-    * jump *label253 always
  1156 label *label252
  1157 label *label253
  1158 label *label248
 
  1221 op land *tmp263 *tmp261 *tmp262
  1222 jump *label269 equal *tmp263 false
  1223 ucontrol itemDrop @air 1000
-    * jump *label270 always
  1224 label *label269
  1225 label *label270
  1226 label *label267
 
  1242 ubind :findFreeUnit:unit_type
  1243 jump *label273 notEqual @unit null
  1244 jump *label272 always
-    * jump *label274 always
  1245 label *label273
  1246 label *label274
  1247 set :findFreeUnit:first_unit @unit
 
  1255 sensor *tmp274 :findFreeUnit:first_unit @dead
  1256 jump *label280 notEqual *tmp274 1
  1257 set :findFreeUnit:first_unit @unit
-    * jump *label281 always
  1258 label *label280
  1259 label *label281
  1260 label *label279
 
  1262 label *label276
  1263 jump *label275 notEqual :findFreeUnit:first_unit @unit
  1264 label *label277
-    * jump *label272 always
  1265 label *label272
  1266 return :findFreeUnit*retaddr
  1267 end
 
  1294 setaddr :mineOre*retaddr *label294 (h:*label294)
  1295 call *label10 *invalid :mineOre*retval (m:*label294) (h:*label294)
  1296 label *label294
-    * jump *label293 always
  1297 label *label292
  1298 label *label293
  1299 label *label290
  1300 set :supplyBase0:supplied true
-    * jump *label288 always
  1301 label *label287
  1302 label *label288
-    * jump *label286 always
  1303 label *label285
  1304 label *label286
  1305 sensor *tmp292 .core @silicon
 
  1328 setaddr :mineOre*retaddr *label304 (h:*label304)
  1329 call *label10 *invalid :mineOre*retval (m:*label304) (h:*label304)
  1330 label *label304
-    * jump *label303 always
  1331 label *label302
  1332 label *label303
  1333 label *label300
 
  1358 setaddr :mineOre*retaddr *label312 (h:*label312)
  1359 call *label10 *invalid :mineOre*retval (m:*label312) (h:*label312)
  1360 label *label312
-    * jump *label311 always
  1361 label *label310
  1362 label *label311
  1363 label *label308
  1364 set :supplyBase0:supplied true
-    * jump *label306 always
  1365 label *label305
  1366 label *label306
  1367 label *label298
-    * jump *label296 always
  1368 label *label295
  1369 label *label296
  1370 sensor *tmp311 .battery @totalPower
 
  1393 setaddr :mineOre*retaddr *label322 (h:*label322)
  1394 call *label10 *invalid :mineOre*retval (m:*label322) (h:*label322)
  1395 label *label322
-    * jump *label321 always
  1396 label *label320
  1397 label *label321
  1398 label *label318
  1399 set :supplyBase0:supplied true
-    * jump *label316 always
  1400 label *label315
  1401 label *label316
-    * jump *label314 always
  1402 label *label313
  1403 label *label314
-    * jump *label284 always
  1404 label *label283
  1405 label *label284
  1406 sensor *tmp322 .core @titanium
 
  1502 label *label340
  1503 label *label334
  1504 label *label330
-    * jump *label328 always
  1505 label *label327
  1506 label *label328
  1507 jump *label326 always
 
  1598 jump *label388 lessThan *tmp386 .targetMetaglass
  1599 set :targetMet*retval true
  1600 jump *label377 always
-    * jump *label389 always
  1601 label *label388
  1602 label *label389
-    * jump *label387 always
  1603 label *label386
  1604 label *label387
-    * jump *label385 always
  1605 label *label384
  1606 label *label385
-    * jump *label383 always
  1607 label *label382
  1608 label *label383
-    * jump *label381 always
  1609 label *label380
  1610 label *label381
-    * jump *label379 always
  1611 label *label378
  1612 label *label379
  1613 set :targetMet*retval false
 
  1723 jump *label413 notEqual :buildBlockAt:type :buildBlockAt:block
  1724 set :buildBlockAt*retval :buildBlockAt:building
  1725 jump *label408 always
-    * jump *label414 always
  1726 label *label413
  1727 label *label414
  1728 jump *label415 equal :buildBlockAt:skipError false
  1729 set :buildBlockAt*retval null
  1730 jump *label408 always
-    * jump *label416 always
  1731 label *label415
  1732 label *label416
  1733 set :error.4:error "Cannot build at ("
  1734 set .ERROR :error.4:error
  1735 stop
  1736 label *label417
-    * jump *label412 always
  1737 label *label411
  1738 label *label412
  1739 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
  1743 jump *label421 notEqual :buildBlockAt:building null
  1744 set :buildBlockAt*retval null
  1745 jump *label408 always
-    * jump *label422 always
  1746 label *label421
  1747 label *label422
  1748 label *label419
 
  1795 label *label431
  1796 jump *label430 notEqual @unit :findUnits:firstUnit
  1797 label *label432
-    * jump *label429 always
  1798 label *label428
  1799 label *label429
  1800 set :findUnits*retval :findUnits:count

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-37 instructions):
 
     4 set .smelter null
     5 set .titaniumDrill null
     6 set .unloader1 null
-    * set .unloader2 null
-    * set .factory null
-    * set .generator2 null
-    * set .kiln null
     7 set .phase 0
     8 set .graphiteSurplus 20
     9 set .siliconSurplus 20
 
    23 setaddr :findUnits*retaddr *label31 (h:*label31)
    24 call *label27 *invalid :findUnits*retval (m:*label31) (h:*label31)
    25 label *label31
-    * write :findUnits:count .display ".monos"
+   26 write :findUnits:count processor1 ".monos"
    27 set :monos :findUnits*retval
    28 set :findUnits:type @flare
    29 setaddr :findUnits*retaddr *label32 (h:*label32)
    30 call *label27 *invalid :findUnits*retval (m:*label32) (h:*label32)
    31 label *label32
-    * write :findUnits:count .display ".flares"
+   32 write :findUnits:count processor1 ".flares"
    33 set :flares :findUnits*retval
    34 set :findUnits:type @poly
    35 setaddr :findUnits*retaddr *label33 (h:*label33)
    36 call *label27 *invalid :findUnits*retval (m:*label33) (h:*label33)
    37 label *label33
-    * write :findUnits:count .display ".polys"
+   38 write :findUnits:count processor1 ".polys"
    39 set :polys :findUnits*retval
    40 set :buildBlockFromCfg:block @graphite-press
    41 set :buildBlockFromCfg:offsetX -1.5
 
    48 set :buildBlockFromCfg:metaglass 0
    49 set :buildBlockFromCfg:rotation 0
    50 set :buildBlockFromCfg:config null
-    * setaddr *tmp86 *label38
    51 label *label35
-    * op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
-    * op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlock:block :buildBlockFromCfg:block
+   52 op add :buildBlockFromCfg:x .coreX -1.5
+   53 op add :buildBlockFromCfg:y .coreY 2.5
+   54 set :buildBlock:block @graphite-press
    55 set :buildBlock:x :buildBlockFromCfg:x
    56 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper :buildBlockFromCfg:copper
-    * set :buildBlock:lead :buildBlockFromCfg:lead
-    * set :buildBlock:graphite :buildBlockFromCfg:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
-    * set :buildBlock:config :buildBlockFromCfg:config
+   57 set :buildBlock:copper 75
+   58 set :buildBlock:lead 30
+   59 set :buildBlock:graphite 0
+   60 set :buildBlock:silicon 0
+   61 set :buildBlock:titanium 0
+   62 set :buildBlock:metaglass 0
+   63 set :buildBlock:rotation 0
+   64 set :buildBlock:config null
    65 setaddr :buildBlock*retaddr *label39 (h:*label39)
    66 call *label26 *invalid :buildBlock*retval (m:*label39) (h:*label39)
    67 label *label39
 
    71 multijump *tmp86 0 0 (m:marker0)
    72 multilabel *label38 (m:marker0)
    73 label *label37
-    * set *tmp85 null
    74 label *label34
    75 set .press *tmp85
    76 set :buildBlockFromCfg.1:block @battery
 
    84 set :buildBlockFromCfg.1:metaglass 0
    85 set :buildBlockFromCfg.1:rotation 0
    86 set :buildBlockFromCfg.1:config null
-    * setaddr *tmp90 *label44
    87 label *label41
-    * op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
-    * op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.1:block
+   88 op add :buildBlockFromCfg.1:x .coreX 0
+   89 op add :buildBlockFromCfg.1:y .coreY 4
+   90 set :buildBlock:block @battery
    91 set :buildBlock:x :buildBlockFromCfg.1:x
    92 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper :buildBlockFromCfg.1:copper
-    * set :buildBlock:lead :buildBlockFromCfg.1:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.1:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.1:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.1:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.1:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.1:rotation
-    * set :buildBlock:config :buildBlockFromCfg.1:config
+   93 set :buildBlock:copper 5
+   94 set :buildBlock:lead 20
+   95 set :buildBlock:graphite 0
+   96 set :buildBlock:silicon 0
+   97 set :buildBlock:titanium 0
+   98 set :buildBlock:metaglass 0
+   99 set :buildBlock:rotation 0
+  100 set :buildBlock:config null
   101 setaddr :buildBlock*retaddr *label45 (h:*label45)
   102 call *label26 *invalid :buildBlock*retval (m:*label45) (h:*label45)
   103 label *label45
 
   107 multijump *tmp90 0 0 (m:marker1)
   108 multilabel *label44 (m:marker1)
   109 label *label43
-    * set *tmp89 null
   110 label *label40
   111 set .battery *tmp89
   112 set :buildBlockFromCfg.2:block @battery
 
   120 set :buildBlockFromCfg.2:metaglass 0
   121 set :buildBlockFromCfg.2:rotation 0
   122 set :buildBlockFromCfg.2:config null
-    * setaddr *tmp94 *label50
   123 label *label47
-    * op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
-    * op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.2:block
+  124 op add :buildBlockFromCfg.2:x .coreX -1
+  125 op add :buildBlockFromCfg.2:y .coreY 4
+  126 set :buildBlock:block @battery
   127 set :buildBlock:x :buildBlockFromCfg.2:x
   128 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper :buildBlockFromCfg.2:copper
-    * set :buildBlock:lead :buildBlockFromCfg.2:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.2:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.2:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.2:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.2:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.2:rotation
-    * set :buildBlock:config :buildBlockFromCfg.2:config
+  129 set :buildBlock:copper 5
+  130 set :buildBlock:lead 20
+  131 set :buildBlock:graphite 0
+  132 set :buildBlock:silicon 0
+  133 set :buildBlock:titanium 0
+  134 set :buildBlock:metaglass 0
+  135 set :buildBlock:rotation 0
+  136 set :buildBlock:config null
   137 setaddr :buildBlock*retaddr *label51 (h:*label51)
   138 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
   139 label *label51
 
   154 set :buildBlockFromCfg.3:metaglass 0
   155 set :buildBlockFromCfg.3:rotation 0
   156 set :buildBlockFromCfg.3:config null
-    * setaddr *tmp98 *label56
   157 label *label53
-    * op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
-    * op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.3:block
+  158 op add :buildBlockFromCfg.3:x .coreX 0
+  159 op add :buildBlockFromCfg.3:y .coreY 3
+  160 set :buildBlock:block @combustion-generator
   161 set :buildBlock:x :buildBlockFromCfg.3:x
   162 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper :buildBlockFromCfg.3:copper
-    * set :buildBlock:lead :buildBlockFromCfg.3:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.3:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.3:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.3:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.3:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.3:rotation
-    * set :buildBlock:config :buildBlockFromCfg.3:config
+  163 set :buildBlock:copper 25
+  164 set :buildBlock:lead 15
+  165 set :buildBlock:graphite 0
+  166 set :buildBlock:silicon 0
+  167 set :buildBlock:titanium 0
+  168 set :buildBlock:metaglass 0
+  169 set :buildBlock:rotation 0
+  170 set :buildBlock:config null
   171 setaddr :buildBlock*retaddr *label57 (h:*label57)
   172 call *label26 *invalid :buildBlock*retval (m:*label57) (h:*label57)
   173 label *label57
 
   177 multijump *tmp98 0 0 (m:marker3)
   178 multilabel *label56 (m:marker3)
   179 label *label55
-    * set *tmp97 null
   180 label *label52
   181 set .generator *tmp97
   182 set .powerTarget 800
 
   191 set :buildBlockFromCfg.4:metaglass 0
   192 set :buildBlockFromCfg.4:rotation 0
   193 set :buildBlockFromCfg.4:config null
-    * setaddr *tmp102 *label62
   194 label *label59
-    * op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
-    * op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.4:block
+  195 op add :buildBlockFromCfg.4:x .coreX 1.5
+  196 op add :buildBlockFromCfg.4:y .coreY 2.5
+  197 set :buildBlock:block @silicon-smelter
   198 set :buildBlock:x :buildBlockFromCfg.4:x
   199 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper :buildBlockFromCfg.4:copper
-    * set :buildBlock:lead :buildBlockFromCfg.4:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.4:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.4:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.4:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.4:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.4:rotation
-    * set :buildBlock:config :buildBlockFromCfg.4:config
+  200 set :buildBlock:copper 30
+  201 set :buildBlock:lead 25
+  202 set :buildBlock:graphite 0
+  203 set :buildBlock:silicon 0
+  204 set :buildBlock:titanium 0
+  205 set :buildBlock:metaglass 0
+  206 set :buildBlock:rotation 0
+  207 set :buildBlock:config null
   208 setaddr :buildBlock*retaddr *label63 (h:*label63)
   209 call *label26 *invalid :buildBlock*retval (m:*label63) (h:*label63)
   210 label *label63
 
   214 multijump *tmp102 0 0 (m:marker4)
   215 multilabel *label62 (m:marker4)
   216 label *label61
-    * set *tmp101 null
   217 label *label58
   218 set .smelter *tmp101
   219 set :meetTarget:block @pneumatic-drill
 
   227 call *label22 *invalid :meetTarget*retval (m:*label66) (h:*label66)
   228 label *label66
   229 label *label65
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write false .oreLocator ":findDrillLocation:large"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  230 write @titanium processor1 ".nextBlock"
+  231 write .coreX processor4 ":findDrillLocation:x"
+  232 write .coreY processor4 ":findDrillLocation:y"
+  233 write @unit processor4 ":findDrillLocation:unit"
+  234 write @titanium processor4 ":findDrillLocation:item"
+  235 write @ore-titanium processor4 ":findDrillLocation:ore"
+  236 write false processor4 ":findDrillLocation:large"
+  237 write 4 processor4 ":findDrillLocation:limit"
+  238 write false processor4 ":findDrillLocation*finished"
+  239 write 1 processor4 "@counter"
   240 label *label67
   241 wait 1e-15
-    * read *tmp116 .oreLocator ":findDrillLocation*finished"
+  242 read *tmp116 processor4 ":findDrillLocation*finished"
   243 jump *label67 equal *tmp116 false
-    * read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+  244 read :buildTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+  245 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+  246 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   247 jump *label68 notEqual :buildTitaniumDrill:result false
   248 set :error:error "Cannot locate spot for titanium drill"
-    * set .ERROR :error:error
+  249 set .ERROR "Cannot locate spot for titanium drill"
   250 stop
   251 label *label70
   252 label *label68
   253 label *label69
-    * write @pneumatic-drill .display ".nextBlock"
+  254 write @pneumatic-drill processor1 ".nextBlock"
   255 set :buildBlockAt:block @pneumatic-drill
   256 set :buildBlockAt:x :buildTitaniumDrill:dx
   257 set :buildBlockAt:y :buildTitaniumDrill:dy
 
   263 label *label71
   264 set *tmp105 :buildBlockAt*retval
   265 jump *label64 always
-    * set *tmp105 null
   266 label *label64
-    * set .titaniumDrill *tmp105
-    * write .titaniumDrill .display ".titaniumDrill"
+  267 set .titaniumDrill :buildBlockAt*retval
+  268 write *tmp105 processor1 ".titaniumDrill"
   269 set :buildBlockFromCfg.5:block @unloader
   270 set :buildBlockFromCfg.5:offsetX 0
   271 set :buildBlockFromCfg.5:offsetY 2
 
   277 set :buildBlockFromCfg.5:metaglass 0
   278 set :buildBlockFromCfg.5:rotation 0
   279 set :buildBlockFromCfg.5:config null
-    * setaddr *tmp121 *label76
   280 label *label73
-    * op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
-    * op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.5:block
+  281 op add :buildBlockFromCfg.5:x .coreX 0
+  282 op add :buildBlockFromCfg.5:y .coreY 2
+  283 set :buildBlock:block @unloader
   284 set :buildBlock:x :buildBlockFromCfg.5:x
   285 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper :buildBlockFromCfg.5:copper
-    * set :buildBlock:lead :buildBlockFromCfg.5:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.5:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.5:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.5:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.5:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.5:rotation
-    * set :buildBlock:config :buildBlockFromCfg.5:config
+  286 set :buildBlock:copper 0
+  287 set :buildBlock:lead 0
+  288 set :buildBlock:graphite 0
+  289 set :buildBlock:silicon 30
+  290 set :buildBlock:titanium 25
+  291 set :buildBlock:metaglass 0
+  292 set :buildBlock:rotation 0
+  293 set :buildBlock:config null
   294 setaddr :buildBlock*retaddr *label77 (h:*label77)
   295 call *label26 *invalid :buildBlock*retval (m:*label77) (h:*label77)
   296 label *label77
 
   300 multijump *tmp121 0 0 (m:marker5)
   301 multilabel *label76 (m:marker5)
   302 label *label75
-    * set *tmp120 null
   303 label *label72
   304 set .unloader1 *tmp120
   305 set :buildBlockFromCfg.6:block @micro-processor
 
   313 set :buildBlockFromCfg.6:metaglass 0
   314 set :buildBlockFromCfg.6:rotation 0
   315 set :buildBlockFromCfg.6:config processor2
-    * setaddr *tmp125 *label82
   316 label *label79
-    * op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
-    * op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.6:block
+  317 op add :buildBlockFromCfg.6:x .coreX 1
+  318 op add :buildBlockFromCfg.6:y .coreY 4
+  319 set :buildBlock:block @micro-processor
   320 set :buildBlock:x :buildBlockFromCfg.6:x
   321 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper :buildBlockFromCfg.6:copper
-    * set :buildBlock:lead :buildBlockFromCfg.6:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.6:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.6:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.6:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.6:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.6:rotation
-    * set :buildBlock:config :buildBlockFromCfg.6:config
+  322 set :buildBlock:copper 90
+  323 set :buildBlock:lead 50
+  324 set :buildBlock:graphite 0
+  325 set :buildBlock:silicon 50
+  326 set :buildBlock:titanium 0
+  327 set :buildBlock:metaglass 0
+  328 set :buildBlock:rotation 0
+  329 set :buildBlock:config processor2
   330 setaddr :buildBlock*retaddr *label83 (h:*label83)
   331 call *label26 *invalid :buildBlock*retval (m:*label83) (h:*label83)
   332 label *label83
 
   336 multijump *tmp125 0 0 (m:marker6)
   337 multilabel *label82 (m:marker6)
   338 label *label81
-    * set *tmp124 null
   339 label *label78
   340 set .controller *tmp124
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write :monos .controller ".monos"
-    * write :flares .controller ".flares"
-    * write :polys .controller ".polys"
+  341 write processor1 *tmp124 ".display"
+  342 write .core *tmp124 ".core"
+  343 write bank1 *tmp124 ".bank"
+  344 write *tmp89 *tmp124 ".battery"
+  345 write *tmp97 *tmp124 ".generator"
+  346 write *tmp101 *tmp124 ".smelter"
+  347 write *tmp85 *tmp124 ".press"
+  348 write :monos *tmp124 ".monos"
+  349 write :flares *tmp124 ".flares"
+  350 write :polys *tmp124 ".polys"
   351 set :buildBlockFromCfg.7:block @power-node
   352 set :buildBlockFromCfg.7:offsetX -2
   353 set :buildBlockFromCfg.7:offsetY -1
 
   359 set :buildBlockFromCfg.7:metaglass 0
   360 set :buildBlockFromCfg.7:rotation 0
   361 set :buildBlockFromCfg.7:config null
-    * setaddr *tmp129 *label88
   362 label *label85
-    * op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
-    * op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.7:block
+  363 op add :buildBlockFromCfg.7:x .coreX -2
+  364 op add :buildBlockFromCfg.7:y .coreY -1
+  365 set :buildBlock:block @power-node
   366 set :buildBlock:x :buildBlockFromCfg.7:x
   367 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper :buildBlockFromCfg.7:copper
-    * set :buildBlock:lead :buildBlockFromCfg.7:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.7:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.7:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.7:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.7:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.7:rotation
-    * set :buildBlock:config :buildBlockFromCfg.7:config
+  368 set :buildBlock:copper 2
+  369 set :buildBlock:lead 6
+  370 set :buildBlock:graphite 0
+  371 set :buildBlock:silicon 0
+  372 set :buildBlock:titanium 0
+  373 set :buildBlock:metaglass 0
+  374 set :buildBlock:rotation 0
+  375 set :buildBlock:config null
   376 setaddr :buildBlock*retaddr *label89 (h:*label89)
   377 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)
   378 label *label89
 
   393 set :buildBlockFromCfg.8:metaglass 0
   394 set :buildBlockFromCfg.8:rotation 0
   395 set :buildBlockFromCfg.8:config null
-    * setaddr *tmp133 *label94
   396 label *label91
-    * op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
-    * op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.8:block
+  397 op add :buildBlockFromCfg.8:x .coreX -2
+  398 op add :buildBlockFromCfg.8:y .coreY 1
+  399 set :buildBlock:block @unloader
   400 set :buildBlock:x :buildBlockFromCfg.8:x
   401 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper :buildBlockFromCfg.8:copper
-    * set :buildBlock:lead :buildBlockFromCfg.8:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.8:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.8:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.8:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.8:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.8:rotation
-    * set :buildBlock:config :buildBlockFromCfg.8:config
+  402 set :buildBlock:copper 0
+  403 set :buildBlock:lead 0
+  404 set :buildBlock:graphite 0
+  405 set :buildBlock:silicon 30
+  406 set :buildBlock:titanium 25
+  407 set :buildBlock:metaglass 0
+  408 set :buildBlock:rotation 0
+  409 set :buildBlock:config null
   410 setaddr :buildBlock*retaddr *label95 (h:*label95)
   411 call *label26 *invalid :buildBlock*retval (m:*label95) (h:*label95)
   412 label *label95
 
   416 multijump *tmp133 0 0 (m:marker8)
   417 multilabel *label94 (m:marker8)
   418 label *label93
-    * set *tmp132 null
   419 label *label90
   420 set .unloader2 *tmp132
-    * write .unloader2 .controller ".unloader2"
+  421 write *tmp132 *tmp124 ".unloader2"
   422 set :buildBlockFromCfg.9:block @overflow-gate
   423 set :buildBlockFromCfg.9:offsetX -3
   424 set :buildBlockFromCfg.9:offsetY 1
 
   430 set :buildBlockFromCfg.9:metaglass 0
   431 set :buildBlockFromCfg.9:rotation 0
   432 set :buildBlockFromCfg.9:config null
-    * setaddr *tmp137 *label100
   433 label *label97
-    * op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
-    * op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.9:block
+  434 op add :buildBlockFromCfg.9:x .coreX -3
+  435 op add :buildBlockFromCfg.9:y .coreY 1
+  436 set :buildBlock:block @overflow-gate
   437 set :buildBlock:x :buildBlockFromCfg.9:x
   438 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper :buildBlockFromCfg.9:copper
-    * set :buildBlock:lead :buildBlockFromCfg.9:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.9:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.9:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.9:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.9:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.9:rotation
-    * set :buildBlock:config :buildBlockFromCfg.9:config
+  439 set :buildBlock:copper 4
+  440 set :buildBlock:lead 2
+  441 set :buildBlock:graphite 0
+  442 set :buildBlock:silicon 0
+  443 set :buildBlock:titanium 0
+  444 set :buildBlock:metaglass 0
+  445 set :buildBlock:rotation 0
+  446 set :buildBlock:config null
   447 setaddr :buildBlock*retaddr *label101 (h:*label101)
   448 call *label26 *invalid :buildBlock*retval (m:*label101) (h:*label101)
   449 label *label101
 
   464 set :buildBlockFromCfg.10:metaglass 0
   465 set :buildBlockFromCfg.10:rotation 3
   466 set :buildBlockFromCfg.10:config @mono
-    * setaddr *tmp141 *label106
   467 label *label103
-    * op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
-    * op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.10:block
+  468 op add :buildBlockFromCfg.10:x .coreX -4
+  469 op add :buildBlockFromCfg.10:y .coreY -1
+  470 set :buildBlock:block @air-factory
   471 set :buildBlock:x :buildBlockFromCfg.10:x
   472 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper :buildBlockFromCfg.10:copper
-    * set :buildBlock:lead :buildBlockFromCfg.10:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.10:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.10:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.10:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.10:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.10:rotation
-    * set :buildBlock:config :buildBlockFromCfg.10:config
+  473 set :buildBlock:copper 60
+  474 set :buildBlock:lead 70
+  475 set :buildBlock:graphite 0
+  476 set :buildBlock:silicon 0
+  477 set :buildBlock:titanium 0
+  478 set :buildBlock:metaglass 0
+  479 set :buildBlock:rotation 3
+  480 set :buildBlock:config @mono
   481 setaddr :buildBlock*retaddr *label107 (h:*label107)
   482 call *label26 *invalid :buildBlock*retval (m:*label107) (h:*label107)
   483 label *label107
 
   487 multijump *tmp141 0 0 (m:marker10)
   488 multilabel *label106 (m:marker10)
   489 label *label105
-    * set *tmp140 null
   490 label *label102
   491 set .factory *tmp140
-    * write .factory .controller ".factory"
-    * write .factory .display ".factory"
-    * write 2 .controller ".flareTarget"
+  492 write *tmp140 *tmp124 ".factory"
+  493 write *tmp140 processor1 ".factory"
+  494 write 2 *tmp124 ".flareTarget"
   495 set :buildUnits:unit @flare
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
-    * write 0 .controller ".leadReserve"
-    * write 0 .controller ".siliconReserve"
-    * write :buildUnits:unit .controller ".unitToProduce"
+  496 write 0 processor1 ".totalTargets"
+  497 write null processor1 ".nextBlock"
+  498 write 0 *tmp124 ".leadReserve"
+  499 write 0 *tmp124 ".siliconReserve"
+  500 write @flare *tmp124 ".unitToProduce"
   501 label *label108
-    * op add .phase .phase 1
-    * write 85 .controller ".pressTarget"
-    * write 150 .controller ".smelterTarget"
-    * write 30 .controller ".kilnTarget"
+  502 op add .phase 0 1
+  503 write 85 *tmp124 ".pressTarget"
+  504 write 150 *tmp124 ".smelterTarget"
+  505 write 30 *tmp124 ".kilnTarget"
   506 set :searchThorium true
   507 label *label109
-    * read *tmp35 .controller ".flares"
+  508 read *tmp35 *tmp124 ".flares"
   509 op greaterThan *tmp145 *tmp35 0
   510 op land *tmp146 :searchThorium *tmp145
   511 jump *label112 equal *tmp146 false
 
   515 setaddr :findFreeUnit*retaddr *label114 (h:*label114)
   516 call *label14 *invalid :findFreeUnit*retval (m:*label114) (h:*label114)
   517 label *label114
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  518 write .coreX processor4 ":layoutThoriumDrill:x"
+  519 write .coreY processor4 ":layoutThoriumDrill:y"
+  520 write @unit processor4 ":layoutThoriumDrill:unit"
+  521 write 7 processor4 ":layoutThoriumDrill:limit"
+  522 write false processor4 ":layoutThoriumDrill*finished"
+  523 write 2 processor4 "@counter"
   524 ubind .builder
-    * write .core .flareController ":start:aCore"
-    * write .titaniumDrill .flareController ":start:aDrill"
-    * write false .flareController ":start*finished"
-    * write 2 .flareController "@counter"
+  525 write .core processor3 ":start:aCore"
+  526 write *tmp105 processor3 ":start:aDrill"
+  527 write false processor3 ":start*finished"
+  528 write 2 processor3 "@counter"
   529 label *label115
   530 wait 1e-15
-    * read *tmp155 .flareController ":start*finished"
+  531 read *tmp155 processor3 ":start*finished"
   532 jump *label115 equal *tmp155 false
   533 label *label112
   534 label *label113
   535 setaddr :supplyBase1*retaddr *label116 (h:*label116)
   536 call *label19 *invalid :supplyBase1*retval (m:*label116) (h:*label116)
   537 label *label116
-    * sensor *tmp156 .battery @totalPower
+  538 sensor *tmp156 *tmp89 @totalPower
   539 jump *label117 greaterThanEq *tmp156 300
   540 jump *label111 always
   541 label *label117
   542 label *label118
   543 label *label110
-    * read *tmp34 .controller ".monos"
+  544 read *tmp34 *tmp124 ".monos"
   545 jump *label109 lessThan *tmp34 1
   546 label *label111
-    * write .core .flareController ":start:aCore"
-    * write .titaniumDrill .flareController ":start:aDrill"
-    * write false .flareController ":start*finished"
-    * write 2 .flareController "@counter"
+  547 write .core processor3 ":start:aCore"
+  548 write *tmp105 processor3 ":start:aDrill"
+  549 write false processor3 ":start*finished"
+  550 write 2 processor3 "@counter"
   551 label *label119
   552 wait 1e-15
-    * read *tmp162 .flareController ":start*finished"
+  553 read *tmp162 processor3 ":start*finished"
   554 jump *label119 equal *tmp162 false
   555 set :buildBlockFromCfg.11:block @unloader
   556 set :buildBlockFromCfg.11:offsetX 2
 
   563 set :buildBlockFromCfg.11:metaglass 0
   564 set :buildBlockFromCfg.11:rotation 0
   565 set :buildBlockFromCfg.11:config null
-    * setaddr *tmp164 *label124
   566 label *label121
-    * op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
-    * op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.11:block
+  567 op add :buildBlockFromCfg.11:x .coreX 2
+  568 op add :buildBlockFromCfg.11:y .coreY 0
+  569 set :buildBlock:block @unloader
   570 set :buildBlock:x :buildBlockFromCfg.11:x
   571 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper :buildBlockFromCfg.11:copper
-    * set :buildBlock:lead :buildBlockFromCfg.11:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.11:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.11:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.11:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.11:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.11:rotation
-    * set :buildBlock:config :buildBlockFromCfg.11:config
+  572 set :buildBlock:copper 0
+  573 set :buildBlock:lead 0
+  574 set :buildBlock:graphite 0
+  575 set :buildBlock:silicon 30
+  576 set :buildBlock:titanium 25
+  577 set :buildBlock:metaglass 0
+  578 set :buildBlock:rotation 0
+  579 set :buildBlock:config null
   580 setaddr :buildBlock*retaddr *label125 (h:*label125)
   581 call *label26 *invalid :buildBlock*retval (m:*label125) (h:*label125)
   582 label *label125
 
   597 set :buildBlockFromCfg.12:metaglass 0
   598 set :buildBlockFromCfg.12:rotation 0
   599 set :buildBlockFromCfg.12:config null
-    * setaddr *tmp168 *label130
   600 label *label127
-    * op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
-    * op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.12:block
+  601 op add :buildBlockFromCfg.12:x .coreX 3.5
+  602 op add :buildBlockFromCfg.12:y .coreY 0.5
+  603 set :buildBlock:block @kiln
   604 set :buildBlock:x :buildBlockFromCfg.12:x
   605 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper :buildBlockFromCfg.12:copper
-    * set :buildBlock:lead :buildBlockFromCfg.12:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.12:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.12:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.12:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.12:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.12:rotation
-    * set :buildBlock:config :buildBlockFromCfg.12:config
+  606 set :buildBlock:copper 60
+  607 set :buildBlock:lead 30
+  608 set :buildBlock:graphite 30
+  609 set :buildBlock:silicon 0
+  610 set :buildBlock:titanium 0
+  611 set :buildBlock:metaglass 0
+  612 set :buildBlock:rotation 0
+  613 set :buildBlock:config null
   614 setaddr :buildBlock*retaddr *label131 (h:*label131)
   615 call *label26 *invalid :buildBlock*retval (m:*label131) (h:*label131)
   616 label *label131
 
   620 multijump *tmp168 0 0 (m:marker12)
   621 multilabel *label130 (m:marker12)
   622 label *label129
-    * set *tmp167 null
   623 label *label126
   624 set .kiln *tmp167
-    * write .kiln .controller ".kiln"
+  625 write *tmp167 *tmp124 ".kiln"
   626 set :buildBlockFromCfg.13:block @junction
   627 set :buildBlockFromCfg.13:offsetX 2
   628 set :buildBlockFromCfg.13:offsetY 1
 
   634 set :buildBlockFromCfg.13:metaglass 0
   635 set :buildBlockFromCfg.13:rotation 0
   636 set :buildBlockFromCfg.13:config null
-    * setaddr *tmp172 *label136
   637 label *label133
-    * op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
-    * op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.13:block
+  638 op add :buildBlockFromCfg.13:x .coreX 2
+  639 op add :buildBlockFromCfg.13:y .coreY 1
+  640 set :buildBlock:block @junction
   641 set :buildBlock:x :buildBlockFromCfg.13:x
   642 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper :buildBlockFromCfg.13:copper
-    * set :buildBlock:lead :buildBlockFromCfg.13:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.13:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.13:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.13:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.13:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.13:rotation
-    * set :buildBlock:config :buildBlockFromCfg.13:config
+  643 set :buildBlock:copper 3
+  644 set :buildBlock:lead 0
+  645 set :buildBlock:graphite 0
+  646 set :buildBlock:silicon 0
+  647 set :buildBlock:titanium 0
+  648 set :buildBlock:metaglass 0
+  649 set :buildBlock:rotation 0
+  650 set :buildBlock:config null
   651 setaddr :buildBlock*retaddr *label137 (h:*label137)
   652 call *label26 *invalid :buildBlock*retval (m:*label137) (h:*label137)
   653 label *label137
 
   668 set :buildBlockFromCfg.14:metaglass 30
   669 set :buildBlockFromCfg.14:rotation 0
   670 set :buildBlockFromCfg.14:config null
-    * setaddr *tmp176 *label142
   671 label *label139
-    * op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
-    * op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.14:block
+  672 op add :buildBlockFromCfg.14:x .coreX -3.5
+  673 op add :buildBlockFromCfg.14:y .coreY 4.5
+  674 set :buildBlock:block @water-extractor
   675 set :buildBlock:x :buildBlockFromCfg.14:x
   676 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper :buildBlockFromCfg.14:copper
-    * set :buildBlock:lead :buildBlockFromCfg.14:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.14:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.14:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.14:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.14:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.14:rotation
-    * set :buildBlock:config :buildBlockFromCfg.14:config
+  677 set :buildBlock:copper 30
+  678 set :buildBlock:lead 30
+  679 set :buildBlock:graphite 30
+  680 set :buildBlock:silicon 0
+  681 set :buildBlock:titanium 0
+  682 set :buildBlock:metaglass 30
+  683 set :buildBlock:rotation 0
+  684 set :buildBlock:config null
   685 setaddr :buildBlock*retaddr *label143 (h:*label143)
   686 call *label26 *invalid :buildBlock*retval (m:*label143) (h:*label143)
   687 label *label143
 
   702 set :buildBlockFromCfg.15:metaglass 0
   703 set :buildBlockFromCfg.15:rotation 0
   704 set :buildBlockFromCfg.15:config null
-    * setaddr *tmp180 *label148
   705 label *label145
-    * op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
-    * op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.15:block
+  706 op add :buildBlockFromCfg.15:x .coreX -3.5
+  707 op add :buildBlockFromCfg.15:y .coreY 2.5
+  708 set :buildBlock:block @steam-generator
   709 set :buildBlock:x :buildBlockFromCfg.15:x
   710 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper :buildBlockFromCfg.15:copper
-    * set :buildBlock:lead :buildBlockFromCfg.15:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.15:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.15:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.15:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.15:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.15:rotation
-    * set :buildBlock:config :buildBlockFromCfg.15:config
+  711 set :buildBlock:copper 35
+  712 set :buildBlock:lead 40
+  713 set :buildBlock:graphite 25
+  714 set :buildBlock:silicon 30
+  715 set :buildBlock:titanium 0
+  716 set :buildBlock:metaglass 0
+  717 set :buildBlock:rotation 0
+  718 set :buildBlock:config null
   719 setaddr :buildBlock*retaddr *label149 (h:*label149)
   720 call *label26 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   721 label *label149
 
   725 multijump *tmp180 0 0 (m:marker15)
   726 multilabel *label148 (m:marker15)
   727 label *label147
-    * set *tmp179 null
   728 label *label144
   729 set .generator2 *tmp179
-    * write .generator2 .controller ".generator2"
+  730 write *tmp179 *tmp124 ".generator2"
   731 set .graphiteSurplus 200
   732 set .siliconSurplus 1000
   733 set .metaglassSurplus 200
   734 jump *label150 equal :searchThorium false
   735 label *label152
-    * read *tmp35 .controller ".flares"
+  736 read *tmp35 *tmp124 ".flares"
   737 jump *label154 greaterThanEq *tmp35 1
   738 setaddr :supplyBase*retaddr *label155 (h:*label155)
   739 call *label20 *invalid :supplyBase*retval (m:*label155) (h:*label155)
 
   741 label *label153
   742 jump *label152 always
   743 label *label154
-    * set :searchThorium false
   744 set :findFreeUnit:unit_type @flare
   745 set :findFreeUnit:initial_flag 0
   746 setaddr :findFreeUnit*retaddr *label156 (h:*label156)
   747 call *label14 *invalid :findFreeUnit*retval (m:*label156) (h:*label156)
   748 label *label156
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  749 write .coreX processor4 ":layoutThoriumDrill:x"
+  750 write .coreY processor4 ":layoutThoriumDrill:y"
+  751 write @unit processor4 ":layoutThoriumDrill:unit"
+  752 write 7 processor4 ":layoutThoriumDrill:limit"
+  753 write false processor4 ":layoutThoriumDrill*finished"
+  754 write 2 processor4 "@counter"
   755 ubind .builder
   756 label *label157
   757 setaddr :supplyBase*retaddr *label160 (h:*label160)
   758 call *label20 *invalid :supplyBase*retval (m:*label160) (h:*label160)
   759 label *label160
   760 label *label158
-    * read *tmp190 .oreLocator ":layoutThoriumDrill*finished"
+  761 read *tmp190 processor4 ":layoutThoriumDrill*finished"
   762 jump *label157 equal *tmp190 false
   763 label *label159
   764 label *label150
 
   776 label *label162
   777 label *label164
   778 wait 1e-15
-    * read *tmp192 .oreLocator ":layoutThoriumDrill*finished"
+  779 read *tmp192 processor4 ":layoutThoriumDrill*finished"
   780 jump *label164 equal *tmp192 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  781 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   782 jump *label165 notEqual :buildThoriumDrill:result false
   783 set :error.1:error "Cannot locate spot for thorium drill"
-    * set .ERROR :error.1:error
+  784 set .ERROR "Cannot locate spot for thorium drill"
   785 stop
   786 label *label167
   787 label *label165
   788 label *label166
   789 set :buildBlockAt:block @laser-drill
-    * read :buildBlockAt:x .oreLocator ".drillX"
-    * read :buildBlockAt:y .oreLocator ".drillY"
+  790 read :buildBlockAt:x processor4 ".drillX"
+  791 read :buildBlockAt:y processor4 ".drillY"
   792 set :buildBlockAt:rotation null
   793 set :buildBlockAt:config 0
   794 set :buildBlockAt:skipError false
   795 setaddr :buildBlockAt*retaddr *label168 (h:*label168)
   796 call *label25 *invalid :buildBlockAt*retval (m:*label168) (h:*label168)
   797 label *label168
-    * read *tmp64 .oreLocator ".water1X"
+  798 read *tmp64 processor4 ".water1X"
   799 jump *label169 greaterThanEq *tmp64 0
   800 jump *label161 always
   801 label *label169
 
   812 label *label172
   813 label *label171
   814 set :buildBlockAt:block @water-extractor
-    * read *tmp64 .oreLocator ".water1X"
+  815 read *tmp64 processor4 ".water1X"
   816 set :buildBlockAt:x *tmp64
-    * read :buildBlockAt:y .oreLocator ".water1Y"
+  817 read :buildBlockAt:y processor4 ".water1Y"
   818 set :buildBlockAt:rotation null
   819 set :buildBlockAt:config 0
   820 set :buildBlockAt:skipError false
   821 setaddr :buildBlockAt*retaddr *label173 (h:*label173)
   822 call *label25 *invalid :buildBlockAt*retval (m:*label173) (h:*label173)
   823 label *label173
-    * read *tmp66 .oreLocator ".water2X"
+  824 read *tmp66 processor4 ".water2X"
   825 jump *label174 greaterThanEq *tmp66 0
   826 jump *label161 always
   827 label *label174
 
   838 label *label177
   839 label *label176
   840 set :buildBlockAt:block @water-extractor
-    * read *tmp66 .oreLocator ".water2X"
+  841 read *tmp66 processor4 ".water2X"
   842 set :buildBlockAt:x *tmp66
-    * read :buildBlockAt:y .oreLocator ".water2Y"
+  843 read :buildBlockAt:y processor4 ".water2Y"
   844 set :buildBlockAt:rotation null
   845 set :buildBlockAt:config 0
   846 set :buildBlockAt:skipError false
 
   859 label *label180
   860 label *label179
   861 set :buildBlockAt:block @steam-generator
-    * read :buildBlockAt:x .oreLocator ".generatorX"
-    * read :buildBlockAt:y .oreLocator ".generatorY"
+  862 read :buildBlockAt:x processor4 ".generatorX"
+  863 read :buildBlockAt:y processor4 ".generatorY"
   864 set :buildBlockAt:rotation null
   865 set :buildBlockAt:config 0
   866 set :buildBlockAt:skipError false
 
   879 label *label183
   880 label *label182
   881 set :buildBlockAt:block @power-node
-    * read :buildBlockAt:x .oreLocator ".nodeX"
-    * read :buildBlockAt:y .oreLocator ".nodeY"
+  882 read :buildBlockAt:x processor4 ".nodeX"
+  883 read :buildBlockAt:y processor4 ".nodeY"
   884 set :buildBlockAt:rotation null
   885 set :buildBlockAt:config 0
   886 set :buildBlockAt:skipError false
 
   899 label *label186
   900 label *label185
   901 set :buildBlockAt:block @solar-panel
-    * read :buildBlockAt:x .oreLocator ".panelX"
-    * read :buildBlockAt:y .oreLocator ".panelY"
+  902 read :buildBlockAt:x processor4 ".panelX"
+  903 read :buildBlockAt:y processor4 ".panelY"
   904 set :buildBlockAt:rotation null
   905 set :buildBlockAt:config 0
   906 set :buildBlockAt:skipError false
 
   919 set :buildBlockFromCfg.16:metaglass 0
   920 set :buildBlockFromCfg.16:rotation 0
   921 set :buildBlockFromCfg.16:config @coal
-    * setaddr *tmp207 *label192
   922 label *label189
-    * op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
-    * op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.16:block
+  923 op add :buildBlockFromCfg.16:x .coreX -4
+  924 op add :buildBlockFromCfg.16:y .coreY 1
+  925 set :buildBlock:block @sorter
   926 set :buildBlock:x :buildBlockFromCfg.16:x
   927 set :buildBlock:y :buildBlockFromCfg.16:y
-    * set :buildBlock:copper :buildBlockFromCfg.16:copper
-    * set :buildBlock:lead :buildBlockFromCfg.16:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.16:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.16:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.16:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.16:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.16:rotation
-    * set :buildBlock:config :buildBlockFromCfg.16:config
+  928 set :buildBlock:copper 2
+  929 set :buildBlock:lead 2
+  930 set :buildBlock:graphite 0
+  931 set :buildBlock:silicon 0
+  932 set :buildBlock:titanium 0
+  933 set :buildBlock:metaglass 0
+  934 set :buildBlock:rotation 0
+  935 set :buildBlock:config @coal
   936 setaddr :buildBlock*retaddr *label193 (h:*label193)
   937 call *label26 *invalid :buildBlock*retval (m:*label193) (h:*label193)
   938 label *label193
 
   942 multilabel *label192 (m:marker16)
   943 label *label191
   944 label *label188
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
+  945 write 0 processor1 ".totalTargets"
+  946 write null processor1 ".nextBlock"
   947 label *label194
   948 setaddr :supplyBase*retaddr *label197 (h:*label197)
   949 call *label20 *invalid :supplyBase*retval (m:*label197) (h:*label197)
   950 label *label197
   951 label *label195
-    * read *tmp35 .controller ".flares"
-    * read *tmp34 .controller ".monos"
+  952 read *tmp35 *tmp124 ".flares"
+  953 read *tmp34 *tmp124 ".monos"
   954 op add *tmp210 *tmp35 *tmp34
   955 jump *label194 lessThan *tmp210 16
   956 label *label196
 
   962 jump *label198 always
   963 label *label200
   964 ucontrol stop
-    * set :error.2:error "Done"
-    * set .ERROR :error.2:error
+  965 set .ERROR "Done"
   966 stop
   967 label *label202
   968 end
   969 label *label4
   970 set :status3:text "Moving..."
-    * write :status3:text .display ".status3"
+  971 write "Moving..." .display ".status3"
   972 label *label205
   973 label *label206
   974 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp212
 
   984 label *label5
   985 set *tmp215 :moveTo.1:x
   986 set *tmp216 :moveTo.1:y
-    * set :moveTo:x *tmp215
-    * set :moveTo:y *tmp216
+  987 set :moveTo:x :moveTo.1:x
+  988 set :moveTo:y :moveTo.1:y
   989 set :moveTo:radius 6
   990 setaddr :moveTo*retaddr *label210 (h:*label210)
   991 call *label4 *invalid :moveTo*retval (m:*label210) (h:*label210)
 
   995 end
   996 label *label6
   997 set :status3.1:text "Moving..."
-    * write :status3.1:text .display ".status3"
+  998 write "Moving..." .display ".status3"
   999 label *label212
  1000 label *label213
  1001 sensor *tmp217 @unit @firstItem
 
  1025 end
  1026 label *label8
  1027 set :status3.2:text "Depositing..."
-    * write :status3.2:text .display ".status3"
+ 1028 write "Depositing..." .display ".status3"
  1029 label *label221
  1030 sensor *tmp224 @unit @firstItem
  1031 jump *label222 notEqual *tmp224 :depositItems:item
 
  1055 label *label223
  1056 set :transportStatus:target 0
  1057 set :transportStatus:item null
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1058 write 0 .display ".transportTarget"
+ 1059 write null .display ".transportItem"
  1060 label *label231
  1061 label *label220
  1062 return :depositItems*retaddr
 
  1065 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp234 0
  1066 jump *label233 notEqual *tmp234 false
  1067 set :error.3:error "Cannot locate ore"
-    * set .ERROR :error.3:error
+ 1068 set .ERROR "Cannot locate ore"
  1069 stop
  1070 label *label235
  1071 label *label233
 
  1077 op min :mineOre:amount :mineOre:amount 5
  1078 set :transportStatus.1:target :mineOre:amount
  1079 set :transportStatus.1:item :mineOre:ore
-    * write :transportStatus.1:target .display ".transportTarget"
-    * write :transportStatus.1:item .display ".transportItem"
+ 1080 write :mineOre:amount .display ".transportTarget"
+ 1081 write :mineOre:ore .display ".transportItem"
  1082 label *label237
  1083 set :locateOre:ore :mineOre:ore
  1084 setaddr :locateOre*retaddr *label238 (h:*label238)
 
  1086 label *label238
  1087 set :mineOre:x :locateOre:x
  1088 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1089 set :moveToEmpty:x :locateOre:x
+ 1090 set :moveToEmpty:y :locateOre:y
  1091 setaddr :moveToEmpty*retaddr *label239 (h:*label239)
  1092 call *label6 *invalid :moveToEmpty*retval (m:*label239) (h:*label239)
  1093 label *label239
 
  1104 label *label240
  1105 label *label241
  1106 set :status3.3:text "Mining..."
-    * write :status3.3:text .display ".status3"
+ 1107 write "Mining..." .display ".status3"
  1108 label *label246
  1109 op add :mineOre:stop @second 10
  1110 label *label247
 
  1138 set :status2:text "Mining "
  1139 set :status2:item :mineOre.1:ore
  1140 set :status2:block "core"
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+ 1141 write "Mining " .display ".status2"
+ 1142 write :mineOre.1:ore .display ".item2"
+ 1143 write "core" .display ".block2"
  1144 label *label256
  1145 set :mineOre:ore :mineOre.1:ore
  1146 set :mineOre:amount 5
 
  1155 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1156 set :transportStatus.2:item :fetchBlock:item
  1157 write :transportStatus.2:target .display ".transportTarget"
-    * write :transportStatus.2:item .display ".transportItem"
+ 1158 write :fetchBlock:item .display ".transportItem"
  1159 label *label259
  1160 set :status2.1:text "Fetching "
  1161 set :status2.1:item :fetchBlock:item
  1162 set :status2.1:block :fetchBlock:block
-    * write :status2.1:text .display ".status2"
-    * write :status2.1:item .display ".item2"
-    * write :status2.1:block .display ".block2"
+ 1163 write "Fetching " .display ".status2"
+ 1164 write :fetchBlock:item .display ".item2"
+ 1165 write :fetchBlock:block .display ".block2"
  1166 label *label260
  1167 sensor *tmp256 :fetchBlock:block @x
  1168 sensor *tmp257 :fetchBlock:block @y
 
  1239 sensor *tmp284 .press @coal
  1240 jump *label287 greaterThanEq *tmp284 5
  1241 set :status1:text "Goal 1: graphite requirement"
-    * write :status1:text .display ".status1"
+ 1242 write "Goal 1: graphite requirement" .display ".status1"
  1243 label *label289
  1244 set :supplyBlock:block .press
  1245 set :supplyBlock:ore @coal
  1246 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock:ore
-    * set :status2.2:block :supplyBlock:block
-    * write :status2.2:text .display ".status2"
-    * write :status2.2:item .display ".item2"
-    * write :status2.2:block .display ".block2"
+ 1247 set :status2.2:item @coal
+ 1248 set :status2.2:block .press
+ 1249 write "Supplying " .display ".status2"
+ 1250 write :supplyBlock:ore .display ".item2"
+ 1251 write :supplyBlock:block .display ".block2"
  1252 label *label291
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp288 :supplyBlock:block :supplyBlock:ore
+ 1253 sensor :supplyBlock:blockCapacity .press @itemCapacity
+ 1254 sensor *tmp288 .press @coal
  1255 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp288
  1256 jump *label292 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+ 1257 set :mineOre:ore @coal
  1258 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+ 1259 set :mineOre:block .press
  1260 setaddr :mineOre*retaddr *label294 (h:*label294)
  1261 call *label10 *invalid :mineOre*retval (m:*label294) (h:*label294)
  1262 label *label294
 
  1273 sensor *tmp295 .smelter @coal
  1274 jump *label297 greaterThanEq *tmp295 5
  1275 set :status1.1:text "Goal 2: coal for silicon requirement"
-    * write :status1.1:text .display ".status1"
+ 1276 write "Goal 2: coal for silicon requirement" .display ".status1"
  1277 label *label299
  1278 set :supplyBlock.1:block .smelter
  1279 set :supplyBlock.1:ore @coal
  1280 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.1:ore
-    * set :status2.3:block :supplyBlock.1:block
-    * write :status2.3:text .display ".status2"
-    * write :status2.3:item .display ".item2"
-    * write :status2.3:block .display ".block2"
+ 1281 set :status2.3:item @coal
+ 1282 set :status2.3:block .smelter
+ 1283 write "Supplying " .display ".status2"
+ 1284 write :supplyBlock.1:ore .display ".item2"
+ 1285 write :supplyBlock.1:block .display ".block2"
  1286 label *label301
-    * sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
-    * sensor *tmp299 :supplyBlock.1:block :supplyBlock.1:ore
+ 1287 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
+ 1288 sensor *tmp299 .smelter @coal
  1289 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp299
  1290 jump *label302 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+ 1291 set :mineOre:ore @coal
  1292 set :mineOre:amount :supplyBlock.1:blockCapacity
-    * set :mineOre:block :supplyBlock.1:block
+ 1293 set :mineOre:block .smelter
  1294 setaddr :mineOre*retaddr *label304 (h:*label304)
  1295 call *label10 *invalid :mineOre*retval (m:*label304) (h:*label304)
  1296 label *label304
 
  1303 sensor *tmp303 .smelter @sand
  1304 jump *label305 greaterThanEq *tmp303 5
  1305 set :status1.2:text "Goal 3: sand for silicon requirement"
-    * write :status1.2:text .display ".status1"
+ 1306 write "Goal 3: sand for silicon requirement" .display ".status1"
  1307 label *label307
  1308 set :supplyBlock.2:block .smelter
  1309 set :supplyBlock.2:ore @sand
  1310 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.2:ore
-    * set :status2.4:block :supplyBlock.2:block
-    * write :status2.4:text .display ".status2"
-    * write :status2.4:item .display ".item2"
-    * write :status2.4:block .display ".block2"
+ 1311 set :status2.4:item @sand
+ 1312 set :status2.4:block .smelter
+ 1313 write "Supplying " .display ".status2"
+ 1314 write :supplyBlock.2:ore .display ".item2"
+ 1315 write :supplyBlock.2:block .display ".block2"
  1316 label *label309
-    * sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
-    * sensor *tmp307 :supplyBlock.2:block :supplyBlock.2:ore
+ 1317 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
+ 1318 sensor *tmp307 .smelter @sand
  1319 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp307
  1320 jump *label310 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+ 1321 set :mineOre:ore @sand
  1322 set :mineOre:amount :supplyBlock.2:blockCapacity
-    * set :mineOre:block :supplyBlock.2:block
+ 1323 set :mineOre:block .smelter
  1324 setaddr :mineOre*retaddr *label312 (h:*label312)
  1325 call *label10 *invalid :mineOre*retval (m:*label312) (h:*label312)
  1326 label *label312
 
  1338 sensor *tmp314 .generator @coal
  1339 jump *label315 greaterThanEq *tmp314 2
  1340 set :status1.3:text "Goal 4: supplying generator"
-    * write :status1.3:text .display ".status1"
+ 1341 write "Goal 4: supplying generator" .display ".status1"
  1342 label *label317
  1343 set :supplyBlock.3:block .generator
  1344 set :supplyBlock.3:ore @coal
  1345 set :status2.5:text "Supplying "
-    * set :status2.5:item :supplyBlock.3:ore
-    * set :status2.5:block :supplyBlock.3:block
-    * write :status2.5:text .display ".status2"
-    * write :status2.5:item .display ".item2"
-    * write :status2.5:block .display ".block2"
+ 1346 set :status2.5:item @coal
+ 1347 set :status2.5:block .generator
+ 1348 write "Supplying " .display ".status2"
+ 1349 write :supplyBlock.3:ore .display ".item2"
+ 1350 write :supplyBlock.3:block .display ".block2"
  1351 label *label319
-    * sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
-    * sensor *tmp318 :supplyBlock.3:block :supplyBlock.3:ore
+ 1352 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
+ 1353 sensor *tmp318 .generator @coal
  1354 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp318
  1355 jump *label320 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+ 1356 set :mineOre:ore @coal
  1357 set :mineOre:amount :supplyBlock.3:blockCapacity
-    * set :mineOre:block :supplyBlock.3:block
+ 1358 set :mineOre:block .generator
  1359 setaddr :mineOre*retaddr *label322 (h:*label322)
  1360 call *label10 *invalid :mineOre*retval (m:*label322) (h:*label322)
  1361 label *label322
 
  1380 label *label324
  1381 set :supplyBase0:titaniumTrigger *tmp324
  1382 sensor *tmp328 .titaniumDrill @titanium
-    * jump *label325 greaterThanEq *tmp328 :supplyBase0:titaniumTrigger
+ 1383 jump *label325 greaterThanEq *tmp328 *tmp324
  1384 jump *label327 notEqual :supplyBase0:supplied false
  1385 sensor *tmp333 .battery @totalPower
  1386 op mul *tmp334 .unloader1 .powerTarget
  1387 jump *label329 greaterThanEq *tmp333 *tmp334
  1388 set :status1.4:text "Goal 5: supplying generator"
-    * write :status1.4:text .display ".status1"
+ 1389 write "Goal 5: supplying generator" .display ".status1"
  1390 label *label331
  1391 set :mineOre.1:ore @coal
  1392 setaddr :mineOre.1*retaddr *label332 (h:*label332)
 
  1397 sensor *tmp337 .core @silicon
  1398 jump *label333 greaterThanEq *tmp337 .targetSilicon
  1399 set :status1.5:text "Goal 6: silicon requirement"
-    * write :status1.5:text .display ".status1"
+ 1400 write "Goal 6: silicon requirement" .display ".status1"
  1401 label *label335
  1402 sensor :supplyBase0:coal .core @coal
  1403 sensor :supplyBase0:sand .core @sand
 
  1408 set *tmp343 @sand
  1409 label *label337
  1410 set :supplyBase0:ore *tmp343
-    * set :mineOre.1:ore :supplyBase0:ore
+ 1411 set :mineOre.1:ore *tmp343
  1412 setaddr :mineOre.1*retaddr *label338 (h:*label338)
  1413 call *label11 *invalid :mineOre.1*retval (m:*label338) (h:*label338)
  1414 label *label338
 
  1417 sensor *tmp344 .core @copper
  1418 jump *label339 greaterThanEq *tmp344 .targetCopper
  1419 set :status1.6:text "Goal 7: copper requirement"
-    * write :status1.6:text .display ".status1"
+ 1420 write "Goal 7: copper requirement" .display ".status1"
  1421 label *label341
  1422 set :mineOre.1:ore @copper
  1423 setaddr :mineOre.1*retaddr *label342 (h:*label342)
 
  1428 sensor *tmp347 .core @lead
  1429 jump *label343 greaterThanEq *tmp347 .targetLead
  1430 set :status1.7:text "Goal 8: lead requirement"
-    * write :status1.7:text .display ".status1"
+ 1431 write "Goal 8: lead requirement" .display ".status1"
  1432 label *label345
  1433 set :mineOre.1:ore @lead
  1434 setaddr :mineOre.1*retaddr *label346 (h:*label346)
 
  1439 sensor *tmp350 .core @metaglass
  1440 jump *label347 greaterThanEq *tmp350 .targetMetaglass
  1441 set :status1.8:text "Goal 9: metaglass requirement"
-    * write :status1.8:text .display ".status1"
+ 1442 write "Goal 9: metaglass requirement" .display ".status1"
  1443 label *label349
  1444 set :mineOre.1:ore @sand
  1445 setaddr :mineOre.1*retaddr *label350 (h:*label350)
 
  1448 jump *label348 always
  1449 label *label347
  1450 set :status1.9:text "Goal 10: supplying base"
-    * write :status1.9:text .display ".status1"
+ 1451 write "Goal 10: supplying base" .display ".status1"
  1452 label *label351
  1453 sensor :supplyBase0:coal.1 .core @coal
  1454 sensor :supplyBase0:sand.1 .core @sand
 
  1459 set *tmp356 @sand
  1460 label *label353
  1461 set :supplyBase0:ore.1 *tmp356
-    * set :mineOre.1:ore :supplyBase0:ore.1
+ 1462 set :mineOre.1:ore *tmp356
  1463 setaddr :mineOre.1*retaddr *label354 (h:*label354)
  1464 call *label11 *invalid :mineOre.1*retval (m:*label354) (h:*label354)
  1465 label *label354
 
  1473 jump *label326 always
  1474 label *label325
  1475 set :status1.10:text "Goal 11: Fetching titanium"
-    * write :status1.10:text .display ".status1"
+ 1476 write "Goal 11: Fetching titanium" .display ".status1"
  1477 label *label355
  1478 set :fetchBlock:block .titaniumDrill
  1479 set :fetchBlock:item @titanium
 
  1492 sensor *tmp362 .core @lead
  1493 jump *label360 greaterThanEq *tmp361 *tmp362
  1494 set :status1.11:text "Phase 1: mining sand"
-    * write :status1.11:text .display ".status1"
+ 1495 write "Phase 1: mining sand" .display ".status1"
  1496 label *label362
  1497 set :mineOre.1:ore @sand
  1498 setaddr :mineOre.1*retaddr *label363 (h:*label363)
 
  1501 jump *label361 always
  1502 label *label360
  1503 set :status1.12:text "Phase 1: mining lead"
-    * write :status1.12:text .display ".status1"
+ 1504 write "Phase 1: mining lead" .display ".status1"
  1505 label *label364
  1506 set :mineOre.1:ore @lead
  1507 setaddr :mineOre.1*retaddr *label365 (h:*label365)
 
  1514 sensor *tmp366 .core @lead
  1515 jump *label366 greaterThanEq *tmp365 *tmp366
  1516 set :status1.13:text "Phase 1: mining coal"
-    * write :status1.13:text .display ".status1"
+ 1517 write "Phase 1: mining coal" .display ".status1"
  1518 label *label368
  1519 set :mineOre.1:ore @coal
  1520 setaddr :mineOre.1*retaddr *label369 (h:*label369)
 
  1523 jump *label367 always
  1524 label *label366
  1525 set :status1.14:text "Phase 1: mining lead"
-    * write :status1.14:text .display ".status1"
+ 1526 write "Phase 1: mining lead" .display ".status1"
  1527 label *label370
  1528 set :mineOre.1:ore @lead
  1529 setaddr :mineOre.1*retaddr *label371 (h:*label371)
 
  1578 label *label379
  1579 set :targetMet*retval false
  1580 jump *label377 always
-    * set :targetMet*retval null
  1581 label *label377
  1582 return :targetMet*retaddr
  1583 end
 
  1662 op floor *tmp404 @second
  1663 op mul *tmp405 *tmp404 1000
  1664 op add *tmp406 :log:encodedId *tmp405
-    * write *tmp406 bank1 *tmp402
+ 1665 write *tmp406 bank1 *tmp401
  1666 label *label405
  1667 return :log*retaddr
  1668 end
 
  1681 call *label5 *invalid :moveTo.1*retval (m:*label409) (h:*label409)
  1682 label *label409
  1683 set :status3.4:text "Building..."
-    * write :status3.4:text .display ".status3"
+ 1684 write "Building..." .display ".status3"
  1685 label *label410
  1686 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1687 jump *label411 equal :buildBlockAt:building null
 
  1696 label *label415
  1697 label *label416
  1698 set :error.4:error "Cannot build at ("
-    * set .ERROR :error.4:error
+ 1699 set .ERROR "Cannot build at ("
  1700 stop
  1701 label *label417
  1702 label *label411
 
  1719 label *label423
  1720 set :buildBlockAt*retval :buildBlockAt:building
  1721 jump *label408 always
-    * set :buildBlockAt*retval null
  1722 label *label408
  1723 return :buildBlockAt*retaddr
  1724 end
 
  1744 label *label426
  1745 set :buildBlock*retval :buildBlockAt*retval
  1746 jump *label424 always
-    * set :buildBlock*retval null
  1747 label *label424
  1748 return :buildBlock*retaddr
  1749 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-258 instructions):
 
     4 set .smelter null
     5 set .titaniumDrill null
     6 set .unloader1 null
-    * set .phase 0
     7 set .graphiteSurplus 20
     8 set .siliconSurplus 20
     9 set .metaglassSurplus 20
 
    16 jump *label28 equal .core null
    17 label *label30
    18 set .display processor1
-    * set .flareController processor3
-    * set .oreLocator processor4
    19 set :findUnits:type @mono
    20 setaddr :findUnits*retaddr *label31 (h:*label31)
    21 call *label27 *invalid :findUnits*retval (m:*label31) (h:*label31)
 
    34 label *label33
    35 write :findUnits:count processor1 ".polys"
    36 set :polys :findUnits*retval
-    * set :buildBlockFromCfg:block @graphite-press
-    * set :buildBlockFromCfg:offsetX -1.5
-    * set :buildBlockFromCfg:offsetY 2.5
-    * set :buildBlockFromCfg:copper 75
-    * set :buildBlockFromCfg:lead 30
-    * set :buildBlockFromCfg:graphite 0
-    * set :buildBlockFromCfg:silicon 0
-    * set :buildBlockFromCfg:titanium 0
-    * set :buildBlockFromCfg:metaglass 0
-    * set :buildBlockFromCfg:rotation 0
-    * set :buildBlockFromCfg:config null
    37 label *label35
    38 op add :buildBlockFromCfg:x .coreX -1.5
    39 op add :buildBlockFromCfg:y .coreY 2.5
 
    59 label *label37
    60 label *label34
    61 set .press *tmp85
-    * set :buildBlockFromCfg.1:block @battery
-    * set :buildBlockFromCfg.1:offsetX 0
-    * set :buildBlockFromCfg.1:offsetY 4
-    * set :buildBlockFromCfg.1:copper 5
-    * set :buildBlockFromCfg.1:lead 20
-    * set :buildBlockFromCfg.1:graphite 0
-    * set :buildBlockFromCfg.1:silicon 0
-    * set :buildBlockFromCfg.1:titanium 0
-    * set :buildBlockFromCfg.1:metaglass 0
-    * set :buildBlockFromCfg.1:rotation 0
-    * set :buildBlockFromCfg.1:config null
    62 label *label41
    63 op add :buildBlockFromCfg.1:x .coreX 0
    64 op add :buildBlockFromCfg.1:y .coreY 4
 
    84 label *label43
    85 label *label40
    86 set .battery *tmp89
-    * set :buildBlockFromCfg.2:block @battery
-    * set :buildBlockFromCfg.2:offsetX -1
-    * set :buildBlockFromCfg.2:offsetY 4
-    * set :buildBlockFromCfg.2:copper 5
-    * set :buildBlockFromCfg.2:lead 20
-    * set :buildBlockFromCfg.2:graphite 0
-    * set :buildBlockFromCfg.2:silicon 0
-    * set :buildBlockFromCfg.2:titanium 0
-    * set :buildBlockFromCfg.2:metaglass 0
-    * set :buildBlockFromCfg.2:rotation 0
-    * set :buildBlockFromCfg.2:config null
    87 label *label47
    88 op add :buildBlockFromCfg.2:x .coreX -1
    89 op add :buildBlockFromCfg.2:y .coreY 4
-    * set :buildBlock:block @battery
    90 set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
+   91 set :buildBlock:y :buildBlockFromCfg.1:y
    92 set :buildBlock:graphite 0
    93 set :buildBlock:silicon 0
    94 set :buildBlock:titanium 0
 
   104 multilabel *label50 (m:marker2)
   105 label *label49
   106 label *label46
-    * set :buildBlockFromCfg.3:block @combustion-generator
-    * set :buildBlockFromCfg.3:offsetX 0
-    * set :buildBlockFromCfg.3:offsetY 3
-    * set :buildBlockFromCfg.3:copper 25
-    * set :buildBlockFromCfg.3:lead 15
-    * set :buildBlockFromCfg.3:graphite 0
-    * set :buildBlockFromCfg.3:silicon 0
-    * set :buildBlockFromCfg.3:titanium 0
-    * set :buildBlockFromCfg.3:metaglass 0
-    * set :buildBlockFromCfg.3:rotation 0
-    * set :buildBlockFromCfg.3:config null
   107 label *label53
   108 op add :buildBlockFromCfg.3:x .coreX 0
   109 op add :buildBlockFromCfg.3:y .coreY 3
   110 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.3:x
+  111 set :buildBlock:x :buildBlockFromCfg.1:x
   112 set :buildBlock:y :buildBlockFromCfg.3:y
   113 set :buildBlock:copper 25
   114 set :buildBlock:lead 15
 
   130 label *label52
   131 set .generator *tmp97
   132 set .powerTarget 800
-    * set :buildBlockFromCfg.4:block @silicon-smelter
-    * set :buildBlockFromCfg.4:offsetX 1.5
-    * set :buildBlockFromCfg.4:offsetY 2.5
-    * set :buildBlockFromCfg.4:copper 30
-    * set :buildBlockFromCfg.4:lead 25
-    * set :buildBlockFromCfg.4:graphite 0
-    * set :buildBlockFromCfg.4:silicon 0
-    * set :buildBlockFromCfg.4:titanium 0
-    * set :buildBlockFromCfg.4:metaglass 0
-    * set :buildBlockFromCfg.4:rotation 0
-    * set :buildBlockFromCfg.4:config null
   133 label *label59
   134 op add :buildBlockFromCfg.4:x .coreX 1.5
   135 op add :buildBlockFromCfg.4:y .coreY 2.5
   136 set :buildBlock:block @silicon-smelter
   137 set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg.4:y
+  138 set :buildBlock:y :buildBlockFromCfg:y
   139 set :buildBlock:copper 30
   140 set :buildBlock:lead 25
   141 set :buildBlock:graphite 0
 
   184 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
   185 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   186 jump *label68 notEqual :buildTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
   187 set .ERROR "Cannot locate spot for titanium drill"
   188 stop
   189 label *label70
 
   203 jump *label64 always
   204 label *label64
   205 set .titaniumDrill :buildBlockAt*retval
-    * write *tmp105 processor1 ".titaniumDrill"
-    * set :buildBlockFromCfg.5:block @unloader
-    * set :buildBlockFromCfg.5:offsetX 0
-    * set :buildBlockFromCfg.5:offsetY 2
-    * set :buildBlockFromCfg.5:copper 0
-    * set :buildBlockFromCfg.5:lead 0
-    * set :buildBlockFromCfg.5:graphite 0
-    * set :buildBlockFromCfg.5:silicon 30
-    * set :buildBlockFromCfg.5:titanium 25
-    * set :buildBlockFromCfg.5:metaglass 0
-    * set :buildBlockFromCfg.5:rotation 0
-    * set :buildBlockFromCfg.5:config null
+  206 write :buildBlockAt*retval processor1 ".titaniumDrill"
   207 label *label73
   208 op add :buildBlockFromCfg.5:x .coreX 0
   209 op add :buildBlockFromCfg.5:y .coreY 2
   210 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.5:x
+  211 set :buildBlock:x :buildBlockFromCfg.1:x
   212 set :buildBlock:y :buildBlockFromCfg.5:y
   213 set :buildBlock:copper 0
   214 set :buildBlock:lead 0
 
   229 label *label75
   230 label *label72
   231 set .unloader1 *tmp120
-    * set :buildBlockFromCfg.6:block @micro-processor
-    * set :buildBlockFromCfg.6:offsetX 1
-    * set :buildBlockFromCfg.6:offsetY 4
-    * set :buildBlockFromCfg.6:copper 90
-    * set :buildBlockFromCfg.6:lead 50
-    * set :buildBlockFromCfg.6:graphite 0
-    * set :buildBlockFromCfg.6:silicon 50
-    * set :buildBlockFromCfg.6:titanium 0
-    * set :buildBlockFromCfg.6:metaglass 0
-    * set :buildBlockFromCfg.6:rotation 0
-    * set :buildBlockFromCfg.6:config processor2
   232 label *label79
   233 op add :buildBlockFromCfg.6:x .coreX 1
   234 op add :buildBlockFromCfg.6:y .coreY 4
   235 set :buildBlock:block @micro-processor
   236 set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.6:y
+  237 set :buildBlock:y :buildBlockFromCfg.1:y
   238 set :buildBlock:copper 90
   239 set :buildBlock:lead 50
   240 set :buildBlock:graphite 0
 
   264 write :monos *tmp124 ".monos"
   265 write :flares *tmp124 ".flares"
   266 write :polys *tmp124 ".polys"
-    * set :buildBlockFromCfg.7:block @power-node
-    * set :buildBlockFromCfg.7:offsetX -2
-    * set :buildBlockFromCfg.7:offsetY -1
-    * set :buildBlockFromCfg.7:copper 2
-    * set :buildBlockFromCfg.7:lead 6
-    * set :buildBlockFromCfg.7:graphite 0
-    * set :buildBlockFromCfg.7:silicon 0
-    * set :buildBlockFromCfg.7:titanium 0
-    * set :buildBlockFromCfg.7:metaglass 0
-    * set :buildBlockFromCfg.7:rotation 0
-    * set :buildBlockFromCfg.7:config null
   267 label *label85
   268 op add :buildBlockFromCfg.7:x .coreX -2
   269 op add :buildBlockFromCfg.7:y .coreY -1
 
   287 multilabel *label88 (m:marker7)
   288 label *label87
   289 label *label84
-    * set :buildBlockFromCfg.8:block @unloader
-    * set :buildBlockFromCfg.8:offsetX -2
-    * set :buildBlockFromCfg.8:offsetY 1
-    * set :buildBlockFromCfg.8:copper 0
-    * set :buildBlockFromCfg.8:lead 0
-    * set :buildBlockFromCfg.8:graphite 0
-    * set :buildBlockFromCfg.8:silicon 30
-    * set :buildBlockFromCfg.8:titanium 25
-    * set :buildBlockFromCfg.8:metaglass 0
-    * set :buildBlockFromCfg.8:rotation 0
-    * set :buildBlockFromCfg.8:config null
   290 label *label91
   291 op add :buildBlockFromCfg.8:x .coreX -2
   292 op add :buildBlockFromCfg.8:y .coreY 1
   293 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.8:x
+  294 set :buildBlock:x :buildBlockFromCfg.7:x
   295 set :buildBlock:y :buildBlockFromCfg.8:y
   296 set :buildBlock:copper 0
   297 set :buildBlock:lead 0
 
   311 multilabel *label94 (m:marker8)
   312 label *label93
   313 label *label90
-    * set .unloader2 *tmp132
   314 write *tmp132 *tmp124 ".unloader2"
-    * set :buildBlockFromCfg.9:block @overflow-gate
-    * set :buildBlockFromCfg.9:offsetX -3
-    * set :buildBlockFromCfg.9:offsetY 1
-    * set :buildBlockFromCfg.9:copper 4
-    * set :buildBlockFromCfg.9:lead 2
-    * set :buildBlockFromCfg.9:graphite 0
-    * set :buildBlockFromCfg.9:silicon 0
-    * set :buildBlockFromCfg.9:titanium 0
-    * set :buildBlockFromCfg.9:metaglass 0
-    * set :buildBlockFromCfg.9:rotation 0
-    * set :buildBlockFromCfg.9:config null
   315 label *label97
   316 op add :buildBlockFromCfg.9:x .coreX -3
   317 op add :buildBlockFromCfg.9:y .coreY 1
   318 set :buildBlock:block @overflow-gate
   319 set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
+  320 set :buildBlock:y :buildBlockFromCfg.8:y
   321 set :buildBlock:copper 4
   322 set :buildBlock:lead 2
   323 set :buildBlock:graphite 0
 
   335 multilabel *label100 (m:marker9)
   336 label *label99
   337 label *label96
-    * set :buildBlockFromCfg.10:block @air-factory
-    * set :buildBlockFromCfg.10:offsetX -4
-    * set :buildBlockFromCfg.10:offsetY -1
-    * set :buildBlockFromCfg.10:copper 60
-    * set :buildBlockFromCfg.10:lead 70
-    * set :buildBlockFromCfg.10:graphite 0
-    * set :buildBlockFromCfg.10:silicon 0
-    * set :buildBlockFromCfg.10:titanium 0
-    * set :buildBlockFromCfg.10:metaglass 0
-    * set :buildBlockFromCfg.10:rotation 3
-    * set :buildBlockFromCfg.10:config @mono
   338 label *label103
   339 op add :buildBlockFromCfg.10:x .coreX -4
   340 op add :buildBlockFromCfg.10:y .coreY -1
   341 set :buildBlock:block @air-factory
   342 set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.10:y
+  343 set :buildBlock:y :buildBlockFromCfg.7:y
   344 set :buildBlock:copper 60
   345 set :buildBlock:lead 70
   346 set :buildBlock:graphite 0
 
   359 multilabel *label106 (m:marker10)
   360 label *label105
   361 label *label102
-    * set .factory *tmp140
   362 write *tmp140 *tmp124 ".factory"
   363 write *tmp140 processor1 ".factory"
   364 write 2 *tmp124 ".flareTarget"
-    * set :buildUnits:unit @flare
   365 write 0 processor1 ".totalTargets"
   366 write null processor1 ".nextBlock"
   367 write 0 *tmp124 ".leadReserve"
   368 write 0 *tmp124 ".siliconReserve"
   369 write @flare *tmp124 ".unitToProduce"
   370 label *label108
-    * op add .phase 0 1
   371 write 85 *tmp124 ".pressTarget"
   372 write 150 *tmp124 ".smelterTarget"
   373 write 30 *tmp124 ".kilnTarget"
 
   420 wait 1e-15
   421 read *tmp162 processor3 ":start*finished"
   422 jump *label119 equal *tmp162 false
-    * set :buildBlockFromCfg.11:block @unloader
-    * set :buildBlockFromCfg.11:offsetX 2
-    * set :buildBlockFromCfg.11:offsetY 0
-    * set :buildBlockFromCfg.11:copper 0
-    * set :buildBlockFromCfg.11:lead 0
-    * set :buildBlockFromCfg.11:graphite 0
-    * set :buildBlockFromCfg.11:silicon 30
-    * set :buildBlockFromCfg.11:titanium 25
-    * set :buildBlockFromCfg.11:metaglass 0
-    * set :buildBlockFromCfg.11:rotation 0
-    * set :buildBlockFromCfg.11:config null
   423 label *label121
   424 op add :buildBlockFromCfg.11:x .coreX 2
   425 op add :buildBlockFromCfg.11:y .coreY 0
 
   428 set :buildBlock:y :buildBlockFromCfg.11:y
   429 set :buildBlock:copper 0
   430 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   431 set :buildBlock:silicon 30
   432 set :buildBlock:titanium 25
   433 set :buildBlock:metaglass 0
 
   442 multilabel *label124 (m:marker11)
   443 label *label123
   444 label *label120
-    * set :buildBlockFromCfg.12:block @kiln
-    * set :buildBlockFromCfg.12:offsetX 3.5
-    * set :buildBlockFromCfg.12:offsetY 0.5
-    * set :buildBlockFromCfg.12:copper 60
-    * set :buildBlockFromCfg.12:lead 30
-    * set :buildBlockFromCfg.12:graphite 30
-    * set :buildBlockFromCfg.12:silicon 0
-    * set :buildBlockFromCfg.12:titanium 0
-    * set :buildBlockFromCfg.12:metaglass 0
-    * set :buildBlockFromCfg.12:rotation 0
-    * set :buildBlockFromCfg.12:config null
   445 label *label127
   446 op add :buildBlockFromCfg.12:x .coreX 3.5
   447 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   466 multilabel *label130 (m:marker12)
   467 label *label129
   468 label *label126
-    * set .kiln *tmp167
   469 write *tmp167 *tmp124 ".kiln"
-    * set :buildBlockFromCfg.13:block @junction
-    * set :buildBlockFromCfg.13:offsetX 2
-    * set :buildBlockFromCfg.13:offsetY 1
-    * set :buildBlockFromCfg.13:copper 3
-    * set :buildBlockFromCfg.13:lead 0
-    * set :buildBlockFromCfg.13:graphite 0
-    * set :buildBlockFromCfg.13:silicon 0
-    * set :buildBlockFromCfg.13:titanium 0
-    * set :buildBlockFromCfg.13:metaglass 0
-    * set :buildBlockFromCfg.13:rotation 0
-    * set :buildBlockFromCfg.13:config null
   470 label *label133
   471 op add :buildBlockFromCfg.13:x .coreX 2
   472 op add :buildBlockFromCfg.13:y .coreY 1
   473 set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
+  474 set :buildBlock:x :buildBlockFromCfg.11:x
+  475 set :buildBlock:y :buildBlockFromCfg.8:y
   476 set :buildBlock:copper 3
   477 set :buildBlock:lead 0
   478 set :buildBlock:graphite 0
 
   490 multilabel *label136 (m:marker13)
   491 label *label135
   492 label *label132
-    * set :buildBlockFromCfg.14:block @water-extractor
-    * set :buildBlockFromCfg.14:offsetX -3.5
-    * set :buildBlockFromCfg.14:offsetY 4.5
-    * set :buildBlockFromCfg.14:copper 30
-    * set :buildBlockFromCfg.14:lead 30
-    * set :buildBlockFromCfg.14:graphite 30
-    * set :buildBlockFromCfg.14:silicon 0
-    * set :buildBlockFromCfg.14:titanium 0
-    * set :buildBlockFromCfg.14:metaglass 30
-    * set :buildBlockFromCfg.14:rotation 0
-    * set :buildBlockFromCfg.14:config null
   493 label *label139
   494 op add :buildBlockFromCfg.14:x .coreX -3.5
   495 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   499 set :buildBlock:copper 30
   500 set :buildBlock:lead 30
   501 set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
   502 set :buildBlock:titanium 0
   503 set :buildBlock:metaglass 30
   504 set :buildBlock:rotation 0
 
   512 multilabel *label142 (m:marker14)
   513 label *label141
   514 label *label138
-    * set :buildBlockFromCfg.15:block @steam-generator
-    * set :buildBlockFromCfg.15:offsetX -3.5
-    * set :buildBlockFromCfg.15:offsetY 2.5
-    * set :buildBlockFromCfg.15:copper 35
-    * set :buildBlockFromCfg.15:lead 40
-    * set :buildBlockFromCfg.15:graphite 25
-    * set :buildBlockFromCfg.15:silicon 30
-    * set :buildBlockFromCfg.15:titanium 0
-    * set :buildBlockFromCfg.15:metaglass 0
-    * set :buildBlockFromCfg.15:rotation 0
-    * set :buildBlockFromCfg.15:config null
   515 label *label145
   516 op add :buildBlockFromCfg.15:x .coreX -3.5
   517 op add :buildBlockFromCfg.15:y .coreY 2.5
   518 set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.15:x
-    * set :buildBlock:y :buildBlockFromCfg.15:y
+  519 set :buildBlock:x :buildBlockFromCfg.14:x
+  520 set :buildBlock:y :buildBlockFromCfg:y
   521 set :buildBlock:copper 35
   522 set :buildBlock:lead 40
   523 set :buildBlock:graphite 25
 
   525 set :buildBlock:titanium 0
   526 set :buildBlock:metaglass 0
   527 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   528 setaddr :buildBlock*retaddr *label149 (h:*label149)
   529 call *label26 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   530 label *label149
 
   535 multilabel *label148 (m:marker15)
   536 label *label147
   537 label *label144
-    * set .generator2 *tmp179
   538 write *tmp179 *tmp124 ".generator2"
   539 set .graphiteSurplus 200
   540 set .siliconSurplus 1000
 
   588 jump *label164 equal *tmp192 false
   589 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   590 jump *label165 notEqual :buildThoriumDrill:result false
-    * set :error.1:error "Cannot locate spot for thorium drill"
   591 set .ERROR "Cannot locate spot for thorium drill"
   592 stop
   593 label *label167
 
   715 call *label25 *invalid :buildBlockAt*retval (m:*label187) (h:*label187)
   716 label *label187
   717 label *label161
-    * set :buildBlockFromCfg.16:block @sorter
-    * set :buildBlockFromCfg.16:offsetX -4
-    * set :buildBlockFromCfg.16:offsetY 1
-    * set :buildBlockFromCfg.16:copper 2
-    * set :buildBlockFromCfg.16:lead 2
-    * set :buildBlockFromCfg.16:graphite 0
-    * set :buildBlockFromCfg.16:silicon 0
-    * set :buildBlockFromCfg.16:titanium 0
-    * set :buildBlockFromCfg.16:metaglass 0
-    * set :buildBlockFromCfg.16:rotation 0
-    * set :buildBlockFromCfg.16:config @coal
   718 label *label189
   719 op add :buildBlockFromCfg.16:x .coreX -4
   720 op add :buildBlockFromCfg.16:y .coreY 1
   721 set :buildBlock:block @sorter
-    * set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.16:y
+  722 set :buildBlock:x :buildBlockFromCfg.10:x
+  723 set :buildBlock:y :buildBlockFromCfg.8:y
   724 set :buildBlock:copper 2
   725 set :buildBlock:lead 2
   726 set :buildBlock:graphite 0
   727 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   728 set :buildBlock:config @coal
   729 setaddr :buildBlock*retaddr *label193 (h:*label193)
   730 call *label26 *invalid :buildBlock*retval (m:*label193) (h:*label193)
 
   760 label *label202
   761 end
   762 label *label4
-    * set :status3:text "Moving..."
   763 write "Moving..." .display ".status3"
   764 label *label205
   765 label *label206
 
   774 return :moveTo*retaddr
   775 end
   776 label *label5
-    * set *tmp215 :moveTo.1:x
-    * set *tmp216 :moveTo.1:y
   777 set :moveTo:x :moveTo.1:x
   778 set :moveTo:y :moveTo.1:y
   779 set :moveTo:radius 6
 
   784 return :moveTo.1*retaddr
   785 end
   786 label *label6
-    * set :status3.1:text "Moving..."
   787 write "Moving..." .display ".status3"
   788 label *label212
   789 label *label213
 
   813 return :moveToBlock*retaddr
   814 end
   815 label *label8
-    * set :status3.2:text "Depositing..."
   816 write "Depositing..." .display ".status3"
   817 label *label221
   818 sensor *tmp224 @unit @firstItem
 
   841 jump *label228 always
   842 label *label230
   843 label *label223
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   844 write 0 .display ".transportTarget"
   845 write null .display ".transportItem"
   846 label *label231
 
   850 label *label9
   851 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp234 0
   852 jump *label233 notEqual *tmp234 false
-    * set :error.3:error "Cannot locate ore"
   853 set .ERROR "Cannot locate ore"
   854 stop
   855 label *label235
 
   860 end
   861 label *label10
   862 op min :mineOre:amount :mineOre:amount 5
-    * set :transportStatus.1:target :mineOre:amount
-    * set :transportStatus.1:item :mineOre:ore
   863 write :mineOre:amount .display ".transportTarget"
   864 write :mineOre:ore .display ".transportItem"
   865 label *label237
 
   886 label *label242
   887 label *label240
   888 label *label241
-    * set :status3.3:text "Mining..."
   889 write "Mining..." .display ".status3"
   890 label *label246
   891 op add :mineOre:stop @second 10
 
   917 return :mineOre*retaddr
   918 end
   919 label *label11
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
   920 write "Mining " .display ".status2"
   921 write :mineOre.1:ore .display ".item2"
   922 write "core" .display ".block2"
 
   932 end
   933 label *label12
   934 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:item :fetchBlock:item
   935 write :transportStatus.2:target .display ".transportTarget"
   936 write :fetchBlock:item .display ".transportItem"
   937 label *label259
-    * set :status2.1:text "Fetching "
-    * set :status2.1:item :fetchBlock:item
-    * set :status2.1:block :fetchBlock:block
   938 write "Fetching " .display ".status2"
   939 write :fetchBlock:item .display ".item2"
   940 write :fetchBlock:block .display ".block2"
 
  1013 jump *label285 greaterThanEq *tmp281 .targetGraphite
  1014 sensor *tmp284 .press @coal
  1015 jump *label287 greaterThanEq *tmp284 5
-    * set :status1:text "Goal 1: graphite requirement"
  1016 write "Goal 1: graphite requirement" .display ".status1"
  1017 label *label289
  1018 set :supplyBlock:block .press
  1019 set :supplyBlock:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .press
  1020 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+ 1021 write @coal .display ".item2"
+ 1022 write .press .display ".block2"
  1023 label *label291
  1024 sensor :supplyBlock:blockCapacity .press @itemCapacity
  1025 sensor *tmp288 .press @coal
 
  1043 jump *label295 greaterThanEq *tmp292 .targetSilicon
  1044 sensor *tmp295 .smelter @coal
  1045 jump *label297 greaterThanEq *tmp295 5
-    * set :status1.1:text "Goal 2: coal for silicon requirement"
  1046 write "Goal 2: coal for silicon requirement" .display ".status1"
  1047 label *label299
  1048 set :supplyBlock.1:block .smelter
  1049 set :supplyBlock.1:ore @coal
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @coal
-    * set :status2.3:block .smelter
  1050 write "Supplying " .display ".status2"
-    * write :supplyBlock.1:ore .display ".item2"
-    * write :supplyBlock.1:block .display ".block2"
+ 1051 write @coal .display ".item2"
+ 1052 write .smelter .display ".block2"
  1053 label *label301
  1054 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
  1055 sensor *tmp299 .smelter @coal
 
  1069 label *label297
  1070 sensor *tmp303 .smelter @sand
  1071 jump *label305 greaterThanEq *tmp303 5
-    * set :status1.2:text "Goal 3: sand for silicon requirement"
  1072 write "Goal 3: sand for silicon requirement" .display ".status1"
  1073 label *label307
  1074 set :supplyBlock.2:block .smelter
  1075 set :supplyBlock.2:ore @sand
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @sand
-    * set :status2.4:block .smelter
  1076 write "Supplying " .display ".status2"
-    * write :supplyBlock.2:ore .display ".item2"
-    * write :supplyBlock.2:block .display ".block2"
+ 1077 write @sand .display ".item2"
+ 1078 write .smelter .display ".block2"
  1079 label *label309
  1080 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
  1081 sensor *tmp307 .smelter @sand
 
  1100 jump *label313 greaterThanEq *tmp311 .powerTarget
  1101 sensor *tmp314 .generator @coal
  1102 jump *label315 greaterThanEq *tmp314 2
-    * set :status1.3:text "Goal 4: supplying generator"
  1103 write "Goal 4: supplying generator" .display ".status1"
  1104 label *label317
  1105 set :supplyBlock.3:block .generator
  1106 set :supplyBlock.3:ore @coal
-    * set :status2.5:text "Supplying "
-    * set :status2.5:item @coal
-    * set :status2.5:block .generator
  1107 write "Supplying " .display ".status2"
-    * write :supplyBlock.3:ore .display ".item2"
-    * write :supplyBlock.3:block .display ".block2"
+ 1108 write @coal .display ".item2"
+ 1109 write .generator .display ".block2"
  1110 label *label319
  1111 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
  1112 sensor *tmp318 .generator @coal
 
  1137 label *label323
  1138 set *tmp324 100
  1139 label *label324
-    * set :supplyBase0:titaniumTrigger *tmp324
  1140 sensor *tmp328 .titaniumDrill @titanium
  1141 jump *label325 greaterThanEq *tmp328 *tmp324
  1142 jump *label327 notEqual :supplyBase0:supplied false
  1143 sensor *tmp333 .battery @totalPower
  1144 op mul *tmp334 .unloader1 .powerTarget
  1145 jump *label329 greaterThanEq *tmp333 *tmp334
-    * set :status1.4:text "Goal 5: supplying generator"
  1146 write "Goal 5: supplying generator" .display ".status1"
  1147 label *label331
  1148 set :mineOre.1:ore @coal
 
  1153 label *label329
  1154 sensor *tmp337 .core @silicon
  1155 jump *label333 greaterThanEq *tmp337 .targetSilicon
-    * set :status1.5:text "Goal 6: silicon requirement"
  1156 write "Goal 6: silicon requirement" .display ".status1"
  1157 label *label335
  1158 sensor :supplyBase0:coal .core @coal
 
  1163 label *label336
  1164 set *tmp343 @sand
  1165 label *label337
-    * set :supplyBase0:ore *tmp343
  1166 set :mineOre.1:ore *tmp343
  1167 setaddr :mineOre.1*retaddr *label338 (h:*label338)
  1168 call *label11 *invalid :mineOre.1*retval (m:*label338) (h:*label338)
 
  1171 label *label333
  1172 sensor *tmp344 .core @copper
  1173 jump *label339 greaterThanEq *tmp344 .targetCopper
-    * set :status1.6:text "Goal 7: copper requirement"
  1174 write "Goal 7: copper requirement" .display ".status1"
  1175 label *label341
  1176 set :mineOre.1:ore @copper
 
  1181 label *label339
  1182 sensor *tmp347 .core @lead
  1183 jump *label343 greaterThanEq *tmp347 .targetLead
-    * set :status1.7:text "Goal 8: lead requirement"
  1184 write "Goal 8: lead requirement" .display ".status1"
  1185 label *label345
  1186 set :mineOre.1:ore @lead
 
  1191 label *label343
  1192 sensor *tmp350 .core @metaglass
  1193 jump *label347 greaterThanEq *tmp350 .targetMetaglass
-    * set :status1.8:text "Goal 9: metaglass requirement"
  1194 write "Goal 9: metaglass requirement" .display ".status1"
  1195 label *label349
  1196 set :mineOre.1:ore @sand
 
  1199 label *label350
  1200 jump *label348 always
  1201 label *label347
-    * set :status1.9:text "Goal 10: supplying base"
  1202 write "Goal 10: supplying base" .display ".status1"
  1203 label *label351
  1204 sensor :supplyBase0:coal.1 .core @coal
 
  1209 label *label352
  1210 set *tmp356 @sand
  1211 label *label353
-    * set :supplyBase0:ore.1 *tmp356
  1212 set :mineOre.1:ore *tmp356
  1213 setaddr :mineOre.1*retaddr *label354 (h:*label354)
  1214 call *label11 *invalid :mineOre.1*retval (m:*label354) (h:*label354)
 
  1222 label *label328
  1223 jump *label326 always
  1224 label *label325
-    * set :status1.10:text "Goal 11: Fetching titanium"
  1225 write "Goal 11: Fetching titanium" .display ".status1"
  1226 label *label355
  1227 set :fetchBlock:block .titaniumDrill
 
  1240 sensor *tmp361 .core @sand
  1241 sensor *tmp362 .core @lead
  1242 jump *label360 greaterThanEq *tmp361 *tmp362
-    * set :status1.11:text "Phase 1: mining sand"
  1243 write "Phase 1: mining sand" .display ".status1"
  1244 label *label362
  1245 set :mineOre.1:ore @sand
 
  1248 label *label363
  1249 jump *label361 always
  1250 label *label360
-    * set :status1.12:text "Phase 1: mining lead"
  1251 write "Phase 1: mining lead" .display ".status1"
  1252 label *label364
  1253 set :mineOre.1:ore @lead
 
  1260 sensor *tmp365 .core @coal
  1261 sensor *tmp366 .core @lead
  1262 jump *label366 greaterThanEq *tmp365 *tmp366
-    * set :status1.13:text "Phase 1: mining coal"
  1263 write "Phase 1: mining coal" .display ".status1"
  1264 label *label368
  1265 set :mineOre.1:ore @coal
 
  1268 label *label369
  1269 jump *label367 always
  1270 label *label366
-    * set :status1.14:text "Phase 1: mining lead"
  1271 write "Phase 1: mining lead" .display ".status1"
  1272 label *label370
  1273 set :mineOre.1:ore @lead
 
  1403 read *tmp74 bank1 511
  1404 op sub *tmp401 *tmp74 1
  1405 write *tmp401 bank1 511
-    * set *tmp402 *tmp401
  1406 op floor *tmp404 @second
  1407 op mul *tmp405 *tmp404 1000
  1408 op add *tmp406 :log:encodedId *tmp405
 
  1424 setaddr :moveTo.1*retaddr *label409 (h:*label409)
  1425 call *label5 *invalid :moveTo.1*retval (m:*label409) (h:*label409)
  1426 label *label409
-    * set :status3.4:text "Building..."
  1427 write "Building..." .display ".status3"
  1428 label *label410
  1429 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
 
  1438 jump *label408 always
  1439 label *label415
  1440 label *label416
-    * set :error.4:error "Cannot build at ("
  1441 set .ERROR "Cannot build at ("
  1442 stop
  1443 label *label417

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-28 instructions):
 
    86 set .battery *tmp89
    87 label *label47
    88 op add :buildBlockFromCfg.2:x .coreX -1
-    * op add :buildBlockFromCfg.2:y .coreY 4
    89 set :buildBlock:x :buildBlockFromCfg.2:x
    90 set :buildBlock:y :buildBlockFromCfg.1:y
    91 set :buildBlock:graphite 0
 
   104 label *label49
   105 label *label46
   106 label *label53
-    * op add :buildBlockFromCfg.3:x .coreX 0
   107 op add :buildBlockFromCfg.3:y .coreY 3
   108 set :buildBlock:block @combustion-generator
   109 set :buildBlock:x :buildBlockFromCfg.1:x
 
   130 set .powerTarget 800
   131 label *label59
   132 op add :buildBlockFromCfg.4:x .coreX 1.5
-    * op add :buildBlockFromCfg.4:y .coreY 2.5
   133 set :buildBlock:block @silicon-smelter
   134 set :buildBlock:x :buildBlockFromCfg.4:x
   135 set :buildBlock:y :buildBlockFromCfg:y
 
   202 set .titaniumDrill :buildBlockAt*retval
   203 write :buildBlockAt*retval processor1 ".titaniumDrill"
   204 label *label73
-    * op add :buildBlockFromCfg.5:x .coreX 0
   205 op add :buildBlockFromCfg.5:y .coreY 2
   206 set :buildBlock:block @unloader
   207 set :buildBlock:x :buildBlockFromCfg.1:x
 
   227 set .unloader1 *tmp120
   228 label *label79
   229 op add :buildBlockFromCfg.6:x .coreX 1
-    * op add :buildBlockFromCfg.6:y .coreY 4
   230 set :buildBlock:block @micro-processor
   231 set :buildBlock:x :buildBlockFromCfg.6:x
   232 set :buildBlock:y :buildBlockFromCfg.1:y
 
   283 label *label87
   284 label *label84
   285 label *label91
-    * op add :buildBlockFromCfg.8:x .coreX -2
   286 op add :buildBlockFromCfg.8:y .coreY 1
   287 set :buildBlock:block @unloader
   288 set :buildBlock:x :buildBlockFromCfg.7:x
 
   308 write *tmp132 *tmp124 ".unloader2"
   309 label *label97
   310 op add :buildBlockFromCfg.9:x .coreX -3
-    * op add :buildBlockFromCfg.9:y .coreY 1
   311 set :buildBlock:block @overflow-gate
   312 set :buildBlock:x :buildBlockFromCfg.9:x
   313 set :buildBlock:y :buildBlockFromCfg.8:y
 
   330 label *label96
   331 label *label103
   332 op add :buildBlockFromCfg.10:x .coreX -4
-    * op add :buildBlockFromCfg.10:y .coreY -1
   333 set :buildBlock:block @air-factory
   334 set :buildBlock:x :buildBlockFromCfg.10:x
   335 set :buildBlock:y :buildBlockFromCfg.7:y
   336 set :buildBlock:copper 60
   337 set :buildBlock:lead 70
-    * set :buildBlock:graphite 0
   338 set :buildBlock:silicon 0
   339 set :buildBlock:titanium 0
   340 set :buildBlock:metaglass 0
 
   459 label *label126
   460 write *tmp167 *tmp124 ".kiln"
   461 label *label133
-    * op add :buildBlockFromCfg.13:x .coreX 2
-    * op add :buildBlockFromCfg.13:y .coreY 1
   462 set :buildBlock:block @junction
   463 set :buildBlock:x :buildBlockFromCfg.11:x
   464 set :buildBlock:y :buildBlockFromCfg.8:y
   465 set :buildBlock:copper 3
   466 set :buildBlock:lead 0
   467 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   468 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   469 set :buildBlock:rotation 0
   470 set :buildBlock:config null
   471 setaddr :buildBlock*retaddr *label137 (h:*label137)
 
   489 set :buildBlock:titanium 0
   490 set :buildBlock:metaglass 30
   491 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   492 setaddr :buildBlock*retaddr *label143 (h:*label143)
   493 call *label26 *invalid :buildBlock*retval (m:*label143) (h:*label143)
   494 label *label143
 
   499 label *label141
   500 label *label138
   501 label *label145
-    * op add :buildBlockFromCfg.15:x .coreX -3.5
-    * op add :buildBlockFromCfg.15:y .coreY 2.5
   502 set :buildBlock:block @steam-generator
   503 set :buildBlock:x :buildBlockFromCfg.14:x
   504 set :buildBlock:y :buildBlockFromCfg:y
 
   506 set :buildBlock:lead 40
   507 set :buildBlock:graphite 25
   508 set :buildBlock:silicon 30
-    * set :buildBlock:titanium 0
   509 set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   510 setaddr :buildBlock*retaddr *label149 (h:*label149)
   511 call *label26 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   512 label *label149
 
   698 label *label187
   699 label *label161
   700 label *label189
-    * op add :buildBlockFromCfg.16:x .coreX -4
-    * op add :buildBlockFromCfg.16:y .coreY 1
   701 set :buildBlock:block @sorter
   702 set :buildBlock:x :buildBlockFromCfg.10:x
   703 set :buildBlock:y :buildBlockFromCfg.8:y
 
   995 jump *label287 greaterThanEq *tmp284 5
   996 write "Goal 1: graphite requirement" .display ".status1"
   997 label *label289
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
   998 write "Supplying " .display ".status2"
   999 write @coal .display ".item2"
  1000 write .press .display ".block2"
 
  1023 jump *label297 greaterThanEq *tmp295 5
  1024 write "Goal 2: coal for silicon requirement" .display ".status1"
  1025 label *label299
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
  1026 write "Supplying " .display ".status2"
  1027 write @coal .display ".item2"
  1028 write .smelter .display ".block2"
 
  1047 jump *label305 greaterThanEq *tmp303 5
  1048 write "Goal 3: sand for silicon requirement" .display ".status1"
  1049 label *label307
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
  1050 write "Supplying " .display ".status2"
  1051 write @sand .display ".item2"
  1052 write .smelter .display ".block2"
 
  1076 jump *label315 greaterThanEq *tmp314 2
  1077 write "Goal 4: supplying generator" .display ".status1"
  1078 label *label317
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
  1079 write "Supplying " .display ".status2"
  1080 write @coal .display ".item2"
  1081 write .generator .display ".block2"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-6 instructions):
 
   313 set :buildBlock:y :buildBlockFromCfg.8:y
   314 set :buildBlock:copper 4
   315 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
   316 set :buildBlock:silicon 0
   317 set :buildBlock:titanium 0
   318 set :buildBlock:metaglass 0
 
   334 set :buildBlock:y :buildBlockFromCfg.7:y
   335 set :buildBlock:copper 60
   336 set :buildBlock:lead 70
-    * set :buildBlock:silicon 0
   337 set :buildBlock:titanium 0
   338 set :buildBlock:metaglass 0
   339 set :buildBlock:rotation 3
 
   442 set :buildBlock:graphite 30
   443 set :buildBlock:silicon 0
   444 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   445 set :buildBlock:rotation 0
   446 set :buildBlock:config null
   447 setaddr :buildBlock*retaddr *label131 (h:*label131)
 
   464 set :buildBlock:graphite 0
   465 set :buildBlock:titanium 0
   466 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   467 setaddr :buildBlock*retaddr *label137 (h:*label137)
   468 call *label26 *invalid :buildBlock*retval (m:*label137) (h:*label137)
   469 label *label137
 
   482 set :buildBlock:copper 30
   483 set :buildBlock:lead 30
   484 set :buildBlock:graphite 30
-    * set :buildBlock:titanium 0
   485 set :buildBlock:metaglass 30
-    * set :buildBlock:rotation 0
   486 setaddr :buildBlock*retaddr *label143 (h:*label143)
   487 call *label26 *invalid :buildBlock*retval (m:*label143) (h:*label143)
   488 label *label143

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-6 instructions):
 
   136 set :buildBlock:copper 30
   137 set :buildBlock:lead 25
   138 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   139 set :buildBlock:titanium 0
   140 set :buildBlock:metaglass 0
   141 set :buildBlock:rotation 0
 
   288 set :buildBlock:y :buildBlockFromCfg.8:y
   289 set :buildBlock:copper 0
   290 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   291 set :buildBlock:silicon 30
   292 set :buildBlock:titanium 25
   293 set :buildBlock:metaglass 0
 
   417 set :buildBlock:lead 0
   418 set :buildBlock:silicon 30
   419 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
   420 set :buildBlock:rotation 0
   421 set :buildBlock:config null
   422 setaddr :buildBlock*retaddr *label125 (h:*label125)
 
   440 set :buildBlock:silicon 0
   441 set :buildBlock:titanium 0
   442 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   443 setaddr :buildBlock*retaddr *label131 (h:*label131)
   444 call *label26 *invalid :buildBlock*retval (m:*label131) (h:*label131)
   445 label *label131
 
   458 set :buildBlock:copper 3
   459 set :buildBlock:lead 0
   460 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   461 setaddr :buildBlock*retaddr *label137 (h:*label137)
   462 call *label26 *invalid :buildBlock*retval (m:*label137) (h:*label137)
   463 label *label137

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-6 instructions):
 
   111 set :buildBlock:copper 25
   112 set :buildBlock:lead 15
   113 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   114 set :buildBlock:titanium 0
   115 set :buildBlock:metaglass 0
   116 set :buildBlock:rotation 0
 
   265 set :buildBlock:y :buildBlockFromCfg.7:y
   266 set :buildBlock:copper 2
   267 set :buildBlock:lead 6
-    * set :buildBlock:graphite 0
   268 set :buildBlock:silicon 0
   269 set :buildBlock:titanium 0
   270 set :buildBlock:metaglass 0
 
   313 set :buildBlock:titanium 0
   314 set :buildBlock:metaglass 0
   315 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   316 setaddr :buildBlock*retaddr *label101 (h:*label101)
   317 call *label26 *invalid :buildBlock*retval (m:*label101) (h:*label101)
   318 label *label101
 
   329 set :buildBlock:y :buildBlockFromCfg.7:y
   330 set :buildBlock:copper 60
   331 set :buildBlock:lead 70
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   332 set :buildBlock:rotation 3
   333 set :buildBlock:config @mono
   334 setaddr :buildBlock*retaddr *label107 (h:*label107)
 
   434 set :buildBlock:graphite 30
   435 set :buildBlock:silicon 0
   436 set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   437 setaddr :buildBlock*retaddr *label131 (h:*label131)
   438 call *label26 *invalid :buildBlock*retval (m:*label131) (h:*label131)
   439 label *label131

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-6 instructions):
 
    89 set :buildBlock:x :buildBlockFromCfg.2:x
    90 set :buildBlock:y :buildBlockFromCfg.1:y
    91 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    92 set :buildBlock:titanium 0
    93 set :buildBlock:metaglass 0
    94 set :buildBlock:rotation 0
 
   229 set :buildBlock:y :buildBlockFromCfg.1:y
   230 set :buildBlock:copper 90
   231 set :buildBlock:lead 50
-    * set :buildBlock:graphite 0
   232 set :buildBlock:silicon 50
   233 set :buildBlock:titanium 0
   234 set :buildBlock:metaglass 0
 
   264 set :buildBlock:copper 2
   265 set :buildBlock:lead 6
   266 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   267 set :buildBlock:metaglass 0
   268 set :buildBlock:rotation 0
   269 set :buildBlock:config null
 
   287 set :buildBlock:titanium 25
   288 set :buildBlock:metaglass 0
   289 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   290 setaddr :buildBlock*retaddr *label95 (h:*label95)
   291 call *label26 *invalid :buildBlock*retval (m:*label95) (h:*label95)
   292 label *label95
 
   307 set :buildBlock:lead 2
   308 set :buildBlock:silicon 0
   309 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   310 setaddr :buildBlock*retaddr *label101 (h:*label101)
   311 call *label26 *invalid :buildBlock*retval (m:*label101) (h:*label101)
   312 label *label101

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-6 instructions):
 
    68 set :buildBlock:copper 5
    69 set :buildBlock:lead 20
    70 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    71 set :buildBlock:titanium 0
    72 set :buildBlock:metaglass 0
    73 set :buildBlock:rotation 0
 
   133 set :buildBlock:copper 30
   134 set :buildBlock:lead 25
   135 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   136 set :buildBlock:metaglass 0
   137 set :buildBlock:rotation 0
   138 set :buildBlock:config null
 
   203 set :buildBlock:y :buildBlockFromCfg.5:y
   204 set :buildBlock:copper 0
   205 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   206 set :buildBlock:silicon 30
   207 set :buildBlock:titanium 25
   208 set :buildBlock:metaglass 0
   209 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   210 setaddr :buildBlock*retaddr *label77 (h:*label77)
   211 call *label26 *invalid :buildBlock*retval (m:*label77) (h:*label77)
   212 label *label77
 
   281 set :buildBlock:lead 0
   282 set :buildBlock:silicon 30
   283 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   284 setaddr :buildBlock*retaddr *label95 (h:*label95)
   285 call *label26 *invalid :buildBlock*retval (m:*label95) (h:*label95)
   286 label *label95

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 9 (-5 instructions):
 
   109 set :buildBlock:copper 25
   110 set :buildBlock:lead 15
   111 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   112 set :buildBlock:metaglass 0
   113 set :buildBlock:rotation 0
   114 set :buildBlock:config null
 
   131 set :buildBlock:y :buildBlockFromCfg:y
   132 set :buildBlock:copper 30
   133 set :buildBlock:lead 25
-    * set :buildBlock:graphite 0
   134 set :buildBlock:metaglass 0
   135 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   136 setaddr :buildBlock*retaddr *label63 (h:*label63)
   137 call *label26 *invalid :buildBlock*retval (m:*label63) (h:*label63)
   138 label *label63
 
   257 set :buildBlock:copper 2
   258 set :buildBlock:lead 6
   259 set :buildBlock:silicon 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   260 set :buildBlock:config null
   261 setaddr :buildBlock*retaddr *label89 (h:*label89)
   262 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 10 (-5 instructions):
 
    88 set :buildBlock:x :buildBlockFromCfg.2:x
    89 set :buildBlock:y :buildBlockFromCfg.1:y
    90 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    91 set :buildBlock:metaglass 0
    92 set :buildBlock:rotation 0
    93 set :buildBlock:config null
 
   107 set :buildBlock:y :buildBlockFromCfg.3:y
   108 set :buildBlock:copper 25
   109 set :buildBlock:lead 15
-    * set :buildBlock:graphite 0
   110 set :buildBlock:metaglass 0
   111 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   112 setaddr :buildBlock*retaddr *label57 (h:*label57)
   113 call *label26 *invalid :buildBlock*retval (m:*label57) (h:*label57)
   114 label *label57
 
   221 set :buildBlock:lead 50
   222 set :buildBlock:silicon 50
   223 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   224 set :buildBlock:config processor2
   225 setaddr :buildBlock*retaddr *label83 (h:*label83)
   226 call *label26 *invalid :buildBlock*retval (m:*label83) (h:*label83)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 11 (-5 instructions):
 
    68 set :buildBlock:copper 5
    69 set :buildBlock:lead 20
    70 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    71 set :buildBlock:metaglass 0
    72 set :buildBlock:rotation 0
    73 set :buildBlock:config null
 
    86 op add :buildBlockFromCfg.2:x .coreX -1
    87 set :buildBlock:x :buildBlockFromCfg.2:x
    88 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:graphite 0
    89 set :buildBlock:metaglass 0
    90 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    91 setaddr :buildBlock*retaddr *label51 (h:*label51)
    92 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
    93 label *label51
 
   196 set :buildBlock:lead 0
   197 set :buildBlock:silicon 30
   198 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   199 setaddr :buildBlock*retaddr *label77 (h:*label77)
   200 call *label26 *invalid :buildBlock*retval (m:*label77) (h:*label77)
   201 label *label77

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 12 (-4 instructions):
 
    67 set :buildBlock:y :buildBlockFromCfg.1:y
    68 set :buildBlock:copper 5
    69 set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
    70 set :buildBlock:metaglass 0
    71 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    72 setaddr :buildBlock*retaddr *label45 (h:*label45)
    73 call *label26 *invalid :buildBlock*retval (m:*label45) (h:*label45)
    74 label *label45
 
   123 set :buildBlock:y :buildBlockFromCfg:y
   124 set :buildBlock:copper 30
   125 set :buildBlock:lead 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   126 setaddr :buildBlock*retaddr *label63 (h:*label63)
   127 call *label26 *invalid :buildBlock*retval (m:*label63) (h:*label63)
   128 label *label63

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 13 (-2 instructions):
 
   102 set :buildBlock:y :buildBlockFromCfg.3:y
   103 set :buildBlock:copper 25
   104 set :buildBlock:lead 15
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   105 setaddr :buildBlock*retaddr *label57 (h:*label57)
   106 call *label26 *invalid :buildBlock*retval (m:*label57) (h:*label57)
   107 label *label57

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 14 (-2 instructions):
 
    84 op add :buildBlockFromCfg.2:x .coreX -1
    85 set :buildBlock:x :buildBlockFromCfg.2:x
    86 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    87 setaddr :buildBlock*retaddr *label51 (h:*label51)
    88 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
    89 label *label51

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 15 (-2 instructions):
 
    67 set :buildBlock:y :buildBlockFromCfg.1:y
    68 set :buildBlock:copper 5
    69 set :buildBlock:lead 20
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    70 setaddr :buildBlock*retaddr *label45 (h:*label45)
    71 call *label26 *invalid :buildBlock*retval (m:*label45) (h:*label45)
    72 label *label45

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    34 label *label33
    35 write :findUnits:count processor1 ".polys"
    36 set :polys :findUnits*retval
+   37 op add :buildBlockFromCfg:x .coreX -1.5
+   38 op add :buildBlockFromCfg:y .coreY 2.5
+   39 set :buildBlock:block @graphite-press
+   40 set :buildBlock:x :buildBlockFromCfg:x
+   41 set :buildBlock:y :buildBlockFromCfg:y
+   42 set :buildBlock:copper 75
+   43 set :buildBlock:lead 30
+   44 set :buildBlock:graphite 0
+   45 set :buildBlock:silicon 0
+   46 set :buildBlock:titanium 0
+   47 set :buildBlock:metaglass 0
+   48 set :buildBlock:rotation 0
+   49 set :buildBlock:config null
+   50 setaddr :buildBlock*retaddr *label39 (h:*label39)
    51 label *label35
-    * op add :buildBlockFromCfg:x .coreX -1.5
-    * op add :buildBlockFromCfg:y .coreY 2.5
-    * set :buildBlock:block @graphite-press
-    * set :buildBlock:x :buildBlockFromCfg:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 75
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label39 (h:*label39)
    52 call *label26 *invalid :buildBlock*retval (m:*label39) (h:*label39)
    53 label *label39
    54 set *tmp85 :buildBlock*retval
 
    59 label *label37
    60 label *label34
    61 set .press *tmp85
+   62 op add :buildBlockFromCfg.1:x .coreX 0
+   63 op add :buildBlockFromCfg.1:y .coreY 4
+   64 set :buildBlock:block @battery
+   65 set :buildBlock:x :buildBlockFromCfg.1:x
+   66 set :buildBlock:y :buildBlockFromCfg.1:y
+   67 set :buildBlock:copper 5
+   68 set :buildBlock:lead 20
+   69 setaddr :buildBlock*retaddr *label45 (h:*label45)
    70 label *label41
-    * op add :buildBlockFromCfg.1:x .coreX 0
-    * op add :buildBlockFromCfg.1:y .coreY 4
-    * set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * setaddr :buildBlock*retaddr *label45 (h:*label45)
    71 call *label26 *invalid :buildBlock*retval (m:*label45) (h:*label45)
    72 label *label45
    73 set *tmp89 :buildBlock*retval
 
    78 label *label43
    79 label *label40
    80 set .battery *tmp89
+   81 op add :buildBlockFromCfg.2:x .coreX -1
+   82 set :buildBlock:x :buildBlockFromCfg.2:x
+   83 set :buildBlock:y :buildBlockFromCfg.1:y
+   84 setaddr :buildBlock*retaddr *label51 (h:*label51)
    85 label *label47
-    * op add :buildBlockFromCfg.2:x .coreX -1
-    * set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * setaddr :buildBlock*retaddr *label51 (h:*label51)
    86 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
    87 label *label51
    88 jump *label46 always
 
    91 multilabel *label50 (m:marker2)
    92 label *label49
    93 label *label46
+   94 op add :buildBlockFromCfg.3:y .coreY 3
+   95 set :buildBlock:block @combustion-generator
+   96 set :buildBlock:x :buildBlockFromCfg.1:x
+   97 set :buildBlock:y :buildBlockFromCfg.3:y
+   98 set :buildBlock:copper 25
+   99 set :buildBlock:lead 15
+  100 setaddr :buildBlock*retaddr *label57 (h:*label57)
   101 label *label53
-    * op add :buildBlockFromCfg.3:y .coreY 3
-    * set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 25
-    * set :buildBlock:lead 15
-    * setaddr :buildBlock*retaddr *label57 (h:*label57)
   102 call *label26 *invalid :buildBlock*retval (m:*label57) (h:*label57)
   103 label *label57
   104 set *tmp97 :buildBlock*retval
 
   110 label *label52
   111 set .generator *tmp97
   112 set .powerTarget 800
+  113 op add :buildBlockFromCfg.4:x .coreX 1.5
+  114 set :buildBlock:block @silicon-smelter
+  115 set :buildBlock:x :buildBlockFromCfg.4:x
+  116 set :buildBlock:y :buildBlockFromCfg:y
+  117 set :buildBlock:copper 30
+  118 set :buildBlock:lead 25
+  119 setaddr :buildBlock*retaddr *label63 (h:*label63)
   120 label *label59
-    * op add :buildBlockFromCfg.4:x .coreX 1.5
-    * set :buildBlock:block @silicon-smelter
-    * set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 25
-    * setaddr :buildBlock*retaddr *label63 (h:*label63)
   121 call *label26 *invalid :buildBlock*retval (m:*label63) (h:*label63)
   122 label *label63
   123 set *tmp101 :buildBlock*retval
 
   177 label *label64
   178 set .titaniumDrill :buildBlockAt*retval
   179 write :buildBlockAt*retval processor1 ".titaniumDrill"
+  180 op add :buildBlockFromCfg.5:y .coreY 2
+  181 set :buildBlock:block @unloader
+  182 set :buildBlock:x :buildBlockFromCfg.1:x
+  183 set :buildBlock:y :buildBlockFromCfg.5:y
+  184 set :buildBlock:copper 0
+  185 set :buildBlock:lead 0
+  186 set :buildBlock:silicon 30
+  187 set :buildBlock:titanium 25
+  188 setaddr :buildBlock*retaddr *label77 (h:*label77)
   189 label *label73
-    * op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label77 (h:*label77)
   190 call *label26 *invalid :buildBlock*retval (m:*label77) (h:*label77)
   191 label *label77
   192 set *tmp120 :buildBlock*retval
 
   197 label *label75
   198 label *label72
   199 set .unloader1 *tmp120
+  200 op add :buildBlockFromCfg.6:x .coreX 1
+  201 set :buildBlock:block @micro-processor
+  202 set :buildBlock:x :buildBlockFromCfg.6:x
+  203 set :buildBlock:y :buildBlockFromCfg.1:y
+  204 set :buildBlock:copper 90
+  205 set :buildBlock:lead 50
+  206 set :buildBlock:silicon 50
+  207 set :buildBlock:titanium 0
+  208 setaddr :buildBlock*retaddr *label83 (h:*label83)
   209 label *label79
-    * op add :buildBlockFromCfg.6:x .coreX 1
-    * set :buildBlock:block @micro-processor
-    * set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 90
-    * set :buildBlock:lead 50
-    * set :buildBlock:silicon 50
-    * set :buildBlock:titanium 0
   210 set :buildBlock:config processor2
-    * setaddr :buildBlock*retaddr *label83 (h:*label83)
   211 call *label26 *invalid :buildBlock*retval (m:*label83) (h:*label83)
   212 label *label83
   213 set *tmp124 :buildBlock*retval
 
   228 write :monos *tmp124 ".monos"
   229 write :flares *tmp124 ".flares"
   230 write :polys *tmp124 ".polys"
+  231 op add :buildBlockFromCfg.7:x .coreX -2
+  232 op add :buildBlockFromCfg.7:y .coreY -1
+  233 set :buildBlock:block @power-node
+  234 set :buildBlock:x :buildBlockFromCfg.7:x
+  235 set :buildBlock:y :buildBlockFromCfg.7:y
+  236 set :buildBlock:copper 2
+  237 set :buildBlock:lead 6
+  238 set :buildBlock:silicon 0
+  239 set :buildBlock:config null
+  240 setaddr :buildBlock*retaddr *label89 (h:*label89)
   241 label *label85
-    * op add :buildBlockFromCfg.7:x .coreX -2
-    * op add :buildBlockFromCfg.7:y .coreY -1
-    * set :buildBlock:block @power-node
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 6
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label89 (h:*label89)
   242 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)
   243 label *label89
   244 jump *label84 always
 
   247 multilabel *label88 (m:marker7)
   248 label *label87
   249 label *label84
+  250 op add :buildBlockFromCfg.8:y .coreY 1
+  251 set :buildBlock:block @unloader
+  252 set :buildBlock:x :buildBlockFromCfg.7:x
+  253 set :buildBlock:y :buildBlockFromCfg.8:y
+  254 set :buildBlock:copper 0
+  255 set :buildBlock:lead 0
+  256 set :buildBlock:silicon 30
+  257 set :buildBlock:titanium 25
+  258 setaddr :buildBlock*retaddr *label95 (h:*label95)
   259 label *label91
-    * op add :buildBlockFromCfg.8:y .coreY 1
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label95 (h:*label95)
   260 call *label26 *invalid :buildBlock*retval (m:*label95) (h:*label95)
   261 label *label95
   262 set *tmp132 :buildBlock*retval
 
   267 label *label93
   268 label *label90
   269 write *tmp132 *tmp124 ".unloader2"
+  270 op add :buildBlockFromCfg.9:x .coreX -3
+  271 set :buildBlock:block @overflow-gate
+  272 set :buildBlock:x :buildBlockFromCfg.9:x
+  273 set :buildBlock:y :buildBlockFromCfg.8:y
+  274 set :buildBlock:copper 4
+  275 set :buildBlock:lead 2
+  276 set :buildBlock:silicon 0
+  277 set :buildBlock:titanium 0
+  278 setaddr :buildBlock*retaddr *label101 (h:*label101)
   279 label *label97
-    * op add :buildBlockFromCfg.9:x .coreX -3
-    * set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label101 (h:*label101)
   280 call *label26 *invalid :buildBlock*retval (m:*label101) (h:*label101)
   281 label *label101
   282 jump *label96 always
 
   285 multilabel *label100 (m:marker9)
   286 label *label99
   287 label *label96
+  288 op add :buildBlockFromCfg.10:x .coreX -4
+  289 set :buildBlock:block @air-factory
+  290 set :buildBlock:x :buildBlockFromCfg.10:x
+  291 set :buildBlock:y :buildBlockFromCfg.7:y
+  292 set :buildBlock:copper 60
+  293 set :buildBlock:lead 70
+  294 set :buildBlock:rotation 3
+  295 set :buildBlock:config @mono
+  296 setaddr :buildBlock*retaddr *label107 (h:*label107)
   297 label *label103
-    * op add :buildBlockFromCfg.10:x .coreX -4
-    * set :buildBlock:block @air-factory
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 70
-    * set :buildBlock:rotation 3
-    * set :buildBlock:config @mono
-    * setaddr :buildBlock*retaddr *label107 (h:*label107)
   298 call *label26 *invalid :buildBlock*retval (m:*label107) (h:*label107)
   299 label *label107
   300 set *tmp140 :buildBlock*retval
 
   365 wait 1e-15
   366 read *tmp162 processor3 ":start*finished"
   367 jump *label119 equal *tmp162 false
+  368 op add :buildBlockFromCfg.11:x .coreX 2
+  369 op add :buildBlockFromCfg.11:y .coreY 0
+  370 set :buildBlock:block @unloader
+  371 set :buildBlock:x :buildBlockFromCfg.11:x
+  372 set :buildBlock:y :buildBlockFromCfg.11:y
+  373 set :buildBlock:copper 0
+  374 set :buildBlock:lead 0
+  375 set :buildBlock:silicon 30
+  376 set :buildBlock:titanium 25
+  377 set :buildBlock:rotation 0
+  378 set :buildBlock:config null
+  379 setaddr :buildBlock*retaddr *label125 (h:*label125)
   380 label *label121
-    * op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label125 (h:*label125)
   381 call *label26 *invalid :buildBlock*retval (m:*label125) (h:*label125)
   382 label *label125
   383 jump *label120 always
 
   386 multilabel *label124 (m:marker11)
   387 label *label123
   388 label *label120
+  389 op add :buildBlockFromCfg.12:x .coreX 3.5
+  390 op add :buildBlockFromCfg.12:y .coreY 0.5
+  391 set :buildBlock:block @kiln
+  392 set :buildBlock:x :buildBlockFromCfg.12:x
+  393 set :buildBlock:y :buildBlockFromCfg.12:y
+  394 set :buildBlock:copper 60
+  395 set :buildBlock:lead 30
+  396 set :buildBlock:graphite 30
+  397 set :buildBlock:silicon 0
+  398 set :buildBlock:titanium 0
+  399 setaddr :buildBlock*retaddr *label131 (h:*label131)
   400 label *label127
-    * op add :buildBlockFromCfg.12:x .coreX 3.5
-    * op add :buildBlockFromCfg.12:y .coreY 0.5
-    * set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label131 (h:*label131)
   401 call *label26 *invalid :buildBlock*retval (m:*label131) (h:*label131)
   402 label *label131
   403 set *tmp167 :buildBlock*retval
 
   408 label *label129
   409 label *label126
   410 write *tmp167 *tmp124 ".kiln"
+  411 set :buildBlock:block @junction
+  412 set :buildBlock:x :buildBlockFromCfg.11:x
+  413 set :buildBlock:y :buildBlockFromCfg.8:y
+  414 set :buildBlock:copper 3
+  415 set :buildBlock:lead 0
+  416 set :buildBlock:graphite 0
+  417 setaddr :buildBlock*retaddr *label137 (h:*label137)
   418 label *label133
-    * set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 3
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * setaddr :buildBlock*retaddr *label137 (h:*label137)
   419 call *label26 *invalid :buildBlock*retval (m:*label137) (h:*label137)
   420 label *label137
   421 jump *label132 always
 
   424 multilabel *label136 (m:marker13)
   425 label *label135
   426 label *label132
+  427 op add :buildBlockFromCfg.14:x .coreX -3.5
+  428 op add :buildBlockFromCfg.14:y .coreY 4.5
+  429 set :buildBlock:block @water-extractor
+  430 set :buildBlock:x :buildBlockFromCfg.14:x
+  431 set :buildBlock:y :buildBlockFromCfg.14:y
+  432 set :buildBlock:copper 30
+  433 set :buildBlock:lead 30
+  434 set :buildBlock:graphite 30
+  435 set :buildBlock:metaglass 30
+  436 setaddr :buildBlock*retaddr *label143 (h:*label143)
   437 label *label139
-    * op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 4.5
-    * set :buildBlock:block @water-extractor
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:metaglass 30
-    * setaddr :buildBlock*retaddr *label143 (h:*label143)
   438 call *label26 *invalid :buildBlock*retval (m:*label143) (h:*label143)
   439 label *label143
   440 jump *label138 always
 
   443 multilabel *label142 (m:marker14)
   444 label *label141
   445 label *label138
+  446 set :buildBlock:block @steam-generator
+  447 set :buildBlock:x :buildBlockFromCfg.14:x
+  448 set :buildBlock:y :buildBlockFromCfg:y
+  449 set :buildBlock:copper 35
+  450 set :buildBlock:lead 40
+  451 set :buildBlock:graphite 25
+  452 set :buildBlock:silicon 30
+  453 set :buildBlock:metaglass 0
+  454 setaddr :buildBlock*retaddr *label149 (h:*label149)
   455 label *label145
-    * set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 35
-    * set :buildBlock:lead 40
-    * set :buildBlock:graphite 25
-    * set :buildBlock:silicon 30
-    * set :buildBlock:metaglass 0
-    * setaddr :buildBlock*retaddr *label149 (h:*label149)
   456 call *label26 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   457 label *label149
   458 set *tmp179 :buildBlock*retval
 
   642 call *label25 *invalid :buildBlockAt*retval (m:*label187) (h:*label187)
   643 label *label187
   644 label *label161
+  645 set :buildBlock:block @sorter
+  646 set :buildBlock:x :buildBlockFromCfg.10:x
+  647 set :buildBlock:y :buildBlockFromCfg.8:y
+  648 set :buildBlock:copper 2
+  649 set :buildBlock:lead 2
+  650 set :buildBlock:graphite 0
+  651 set :buildBlock:silicon 0
+  652 set :buildBlock:config @coal
+  653 setaddr :buildBlock*retaddr *label193 (h:*label193)
   654 label *label189
-    * set :buildBlock:block @sorter
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config @coal
-    * setaddr :buildBlock*retaddr *label193 (h:*label193)
   655 call *label26 *invalid :buildBlock*retval (m:*label193) (h:*label193)
   656 label *label193
   657 jump *label188 always
 
   687 label *label4
   688 write "Moving..." .display ".status3"
   689 label *label205
+  690 op sub *tmp214 :moveTo:radius 0.5
   691 label *label206
   692 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp212
   693 jump *label208 notEqual *tmp212 false
-    * op sub *tmp214 :moveTo:radius 0.5
   694 ucontrol approach :moveTo:x :moveTo:y *tmp214
   695 label *label207
   696 jump *label206 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
  1045 label *label314
  1046 label *label283
  1047 label *label284
+ 1048 set *tmp324 100
  1049 sensor *tmp322 .core @titanium
-    * jump *label323 greaterThanEq *tmp322 .targetTitanium
+ 1050 jump *label324 greaterThanEq *tmp322 .targetTitanium
  1051 sensor *tmp325 .core @titanium
  1052 op sub *tmp326 .targetTitanium *tmp325
  1053 op min *tmp324 7 *tmp326
  1054 jump *label324 always
-    * label *label323
-    * set *tmp324 100
  1055 label *label324
  1056 sensor *tmp328 .titaniumDrill @titanium
  1057 jump *label325 greaterThanEq *tmp328 *tmp324
 
  1073 label *label335
  1074 sensor :supplyBase0:coal .core @coal
  1075 sensor :supplyBase0:sand .core @sand
-    * jump *label336 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp343 @coal
+ 1076 set :mineOre.1:ore @sand
+ 1077 jump *label337 greaterThanEq :supplyBase0:coal :supplyBase0:sand
+ 1078 set :mineOre.1:ore @coal
  1079 jump *label337 always
-    * label *label336
-    * set *tmp343 @sand
  1080 label *label337
-    * set :mineOre.1:ore *tmp343
  1081 setaddr :mineOre.1*retaddr *label338 (h:*label338)
  1082 call *label11 *invalid :mineOre.1*retval (m:*label338) (h:*label338)
  1083 label *label338
 
  1117 label *label351
  1118 sensor :supplyBase0:coal.1 .core @coal
  1119 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label352 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp356 @coal
+ 1120 set :mineOre.1:ore @sand
+ 1121 jump *label353 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
+ 1122 set :mineOre.1:ore @coal
  1123 jump *label353 always
-    * label *label352
-    * set *tmp356 @sand
  1124 label *label353
-    * set :mineOre.1:ore *tmp356
  1125 setaddr :mineOre.1*retaddr *label354 (h:*label354)
  1126 call *label11 *invalid :mineOre.1*retval (m:*label354) (h:*label354)
  1127 label *label354

Modifications by Unroll iteration loop at CoreBuilder.mnd:254:5 (-2 instructions):
 
  1240 end
  1241 label *label22
  1242 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp389 *label394
-    * jump *label391 always
-    * multilabel *label394 (m:marker17)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp389 *label395
-    * jump *label391 always
-    * multilabel *label395 (m:marker17)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp389 *label396
-    * jump *label391 always
-    * multilabel *label396 (m:marker17)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp389 *label397
-    * jump *label391 always
-    * multilabel *label397 (m:marker17)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp389 *label398
-    * jump *label391 always
-    * multilabel *label398 (m:marker17)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp389 *label399
-    * label *label391
-    * op sign *tmp390 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp390
-    * label *label392
-    * multijump *tmp389 0 0 (m:marker17)
-    * multilabel *label399 (m:marker17)
-    * label *label393
+ 1243 set :meetTarget:t :meetTarget:copper
+ 1244 label *label433
+ 1245 op sign *tmp390 :meetTarget:t
+ 1246 op add :meetTarget:count :meetTarget:count *tmp390
+ 1247 label *label434
+ 1248 set :meetTarget:t :meetTarget:lead
+ 1249 label *label437
+ 1250 op sign *tmp390 :meetTarget:t
+ 1251 op add :meetTarget:count :meetTarget:count *tmp390
+ 1252 label *label438
+ 1253 set :meetTarget:t :meetTarget:graphite
+ 1254 label *label441
+ 1255 op sign *tmp390 :meetTarget:t
+ 1256 op add :meetTarget:count :meetTarget:count *tmp390
+ 1257 label *label442
+ 1258 set :meetTarget:t :meetTarget:silicon
+ 1259 label *label445
+ 1260 op sign *tmp390 :meetTarget:t
+ 1261 op add :meetTarget:count :meetTarget:count *tmp390
+ 1262 label *label446
+ 1263 set :meetTarget:t :meetTarget:titanium
+ 1264 label *label449
+ 1265 op sign *tmp390 :meetTarget:t
+ 1266 op add :meetTarget:count :meetTarget:count *tmp390
+ 1267 label *label450
+ 1268 set :meetTarget:t :meetTarget:metaglass
+ 1269 label *label453
+ 1270 op sign *tmp390 :meetTarget:t
+ 1271 op add :meetTarget:count :meetTarget:count *tmp390
+ 1272 label *label454
+ 1273 label *label393
  1274 write :meetTarget:count .display ".totalTargets"
  1275 write :meetTarget:block .display ".nextBlock"
  1276 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1242 set :meetTarget:count 0
  1243 set :meetTarget:t :meetTarget:copper
  1244 label *label433
-    * op sign *tmp390 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp390
+ 1245 op sign *tmp390 :meetTarget:copper
+ 1246 op add :meetTarget:count 0 *tmp390
  1247 label *label434
  1248 set :meetTarget:t :meetTarget:lead
  1249 label *label437
-    * op sign *tmp390 :meetTarget:t
+ 1250 op sign *tmp390 :meetTarget:lead
  1251 op add :meetTarget:count :meetTarget:count *tmp390
  1252 label *label438
  1253 set :meetTarget:t :meetTarget:graphite
  1254 label *label441
-    * op sign *tmp390 :meetTarget:t
+ 1255 op sign *tmp390 :meetTarget:graphite
  1256 op add :meetTarget:count :meetTarget:count *tmp390
  1257 label *label442
  1258 set :meetTarget:t :meetTarget:silicon
  1259 label *label445
-    * op sign *tmp390 :meetTarget:t
+ 1260 op sign *tmp390 :meetTarget:silicon
  1261 op add :meetTarget:count :meetTarget:count *tmp390
  1262 label *label446
  1263 set :meetTarget:t :meetTarget:titanium
  1264 label *label449
-    * op sign *tmp390 :meetTarget:t
+ 1265 op sign *tmp390 :meetTarget:titanium
  1266 op add :meetTarget:count :meetTarget:count *tmp390
  1267 label *label450
  1268 set :meetTarget:t :meetTarget:metaglass
  1269 label *label453
-    * op sign *tmp390 :meetTarget:t
+ 1270 op sign *tmp390 :meetTarget:metaglass
  1271 op add :meetTarget:count :meetTarget:count *tmp390
  1272 label *label454
  1273 label *label393

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
  1239 return :targetMet*retaddr
  1240 end
  1241 label *label22
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1242 label *label433
  1243 op sign *tmp390 :meetTarget:copper
  1244 op add :meetTarget:count 0 *tmp390
  1245 label *label434
-    * set :meetTarget:t :meetTarget:lead
  1246 label *label437
  1247 op sign *tmp390 :meetTarget:lead
  1248 op add :meetTarget:count :meetTarget:count *tmp390
  1249 label *label438
-    * set :meetTarget:t :meetTarget:graphite
  1250 label *label441
  1251 op sign *tmp390 :meetTarget:graphite
  1252 op add :meetTarget:count :meetTarget:count *tmp390
  1253 label *label442
-    * set :meetTarget:t :meetTarget:silicon
  1254 label *label445
  1255 op sign *tmp390 :meetTarget:silicon
  1256 op add :meetTarget:count :meetTarget:count *tmp390
  1257 label *label446
-    * set :meetTarget:t :meetTarget:titanium
  1258 label *label449
  1259 op sign *tmp390 :meetTarget:titanium
  1260 op add :meetTarget:count :meetTarget:count *tmp390
  1261 label *label450
-    * set :meetTarget:t :meetTarget:metaglass
  1262 label *label453
  1263 op sign *tmp390 :meetTarget:metaglass
  1264 op add :meetTarget:count :meetTarget:count *tmp390

Modifications by Replicate loop condition at Actions.mnd:23:5 (+1 instructions):
 
   691 label *label206
   692 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp212
   693 jump *label208 notEqual *tmp212 false
+  694 label *label458
   695 ucontrol approach :moveTo:x :moveTo:y *tmp214
   696 label *label207
-    * jump *label206 always
+  697 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp212
+  698 jump *label458 equal *tmp212 false
   699 label *label208
   700 label *label204
   701 return :moveTo*retaddr

Modifications by Replicate loop condition at Actions.mnd:68:9 (+1 instructions):
 
   763 label *label228
   764 sensor *tmp232 @unit @firstItem
   765 jump *label230 equal *tmp232 null
+  766 label *label459
   767 ucontrol itemDrop @air 1000
   768 label *label229
-    * jump *label228 always
+  769 sensor *tmp232 @unit @firstItem
+  770 jump *label459 notEqual *tmp232 null
   771 label *label230
   772 label *label223
   773 write 0 .display ".transportTarget"

Modifications by Replicate loop condition at Actions.mnd:45:5 (+1 instructions):
 
   808 label *label243
   809 sensor *tmp242 @unit @firstItem
   810 jump *label245 equal *tmp242 null
+  811 label *label460
   812 ucontrol itemDrop @air 1000
   813 label *label244
-    * jump *label243 always
+  814 sensor *tmp242 @unit @firstItem
+  815 jump *label460 notEqual *tmp242 null
   816 label *label245
   817 label *label242
   818 label *label240

Modifications by Replicate loop condition at Actions.mnd:45:5 (+1 instructions):
 
   880 label *label263
   881 sensor *tmp258 @unit @firstItem
   882 jump *label265 equal *tmp258 null
+  883 label *label461
   884 ucontrol itemDrop @air 1000
   885 label *label264
-    * jump *label263 always
+  886 sensor *tmp258 @unit @firstItem
+  887 jump *label461 notEqual *tmp258 null
   888 label *label265
   889 label *label262
   890 label *label266

Modifications by Replicate loop condition at CoreBuilder.mnd:277:5 (+2 instructions):
 
  1305 call *label21 *invalid :targetMet*retval (m:*label403) (h:*label403)
  1306 label *label403
  1307 jump *label402 notEqual :targetMet*retval false
+ 1308 label *label462
  1309 setaddr :supplyBase*retaddr *label404 (h:*label404)
  1310 call *label20 *invalid :supplyBase*retval (m:*label404) (h:*label404)
  1311 label *label404
  1312 label *label401
-    * jump *label400 always
+ 1313 setaddr :targetMet*retaddr *label463 (h:*label463)
+ 1314 call *label21 *invalid :targetMet*retval (m:*label463) (h:*label463)
+ 1315 label *label463
+ 1316 jump *label462 equal :targetMet*retval false
  1317 label *label402
  1318 label *label390
  1319 return :meetTarget*retaddr

Modifications by Replicate loop condition at CoreBuilder.mnd:496:9 (+1 instructions):
 
   470 label *label152
   471 read *tmp35 *tmp124 ".flares"
   472 jump *label154 greaterThanEq *tmp35 1
+  473 label *label464
   474 setaddr :supplyBase*retaddr *label155 (h:*label155)
   475 call *label20 *invalid :supplyBase*retval (m:*label155) (h:*label155)
   476 label *label155
   477 label *label153
-    * jump *label152 always
+  478 read *tmp35 *tmp124 ".flares"
+  479 jump *label464 lessThan *tmp35 1
   480 label *label154
   481 set :findFreeUnit:unit_type @flare
   482 set :findFreeUnit:initial_flag 0

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   173 call *label25 *invalid :buildBlockAt*retval (m:*label71) (h:*label71)
   174 label *label71
   175 set *tmp105 :buildBlockAt*retval
-    * jump *label64 always
   176 label *label64
   177 set .titaniumDrill :buildBlockAt*retval
   178 write :buildBlockAt*retval processor1 ".titaniumDrill"
 
  1060 sensor *tmp325 .core @titanium
  1061 op sub *tmp326 .targetTitanium *tmp325
  1062 op min *tmp324 7 *tmp326
-    * jump *label324 always
  1063 label *label324
  1064 sensor *tmp328 .titaniumDrill @titanium
  1065 jump *label325 greaterThanEq *tmp328 *tmp324
 
  1084 set :mineOre.1:ore @sand
  1085 jump *label337 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1086 set :mineOre.1:ore @coal
-    * jump *label337 always
  1087 label *label337
  1088 setaddr :mineOre.1*retaddr *label338 (h:*label338)
  1089 call *label11 *invalid :mineOre.1*retval (m:*label338) (h:*label338)
 
  1127 set :mineOre.1:ore @sand
  1128 jump *label353 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1129 set :mineOre.1:ore @coal
-    * jump *label353 always
  1130 label *label353
  1131 setaddr :mineOre.1*retaddr *label354 (h:*label354)
  1132 call *label11 *invalid :mineOre.1*retval (m:*label354) (h:*label354)
 
  1377 call *label24 *invalid :logBlock*retval (m:*label423) (h:*label423)
  1378 label *label423
  1379 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label408 always
  1380 label *label408
  1381 return :buildBlockAt*retaddr
  1382 end
 
  1401 call *label25 *invalid :buildBlockAt*retval (m:*label426) (h:*label426)
  1402 label *label426
  1403 set :buildBlock*retval :buildBlockAt*retval
-    * jump *label424 always
  1404 label *label424
  1405 return :buildBlock*retaddr
  1406 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    59 label *label37
    60 label *label34
    61 set .press *tmp85
-    * op add :buildBlockFromCfg.1:x .coreX 0
+   62 set :buildBlockFromCfg.1:x .coreX
    63 op add :buildBlockFromCfg.1:y .coreY 4
    64 set :buildBlock:block @battery
    65 set :buildBlock:x :buildBlockFromCfg.1:x
 
   365 read *tmp162 processor3 ":start*finished"
   366 jump *label119 equal *tmp162 false
   367 op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
+  368 set :buildBlockFromCfg.11:y .coreY
   369 set :buildBlock:block @unloader
   370 set :buildBlock:x :buildBlockFromCfg.11:x
   371 set :buildBlock:y :buildBlockFromCfg.11:y
 
  1247 label *label22
  1248 label *label433
  1249 op sign *tmp390 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp390
+ 1250 set :meetTarget:count *tmp390
  1251 label *label434
  1252 label *label437
  1253 op sign *tmp390 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1246 end
  1247 label *label22
  1248 label *label433
-    * op sign *tmp390 :meetTarget:copper
-    * set :meetTarget:count *tmp390
+ 1249 op sign :meetTarget:count :meetTarget:copper
  1250 label *label434
  1251 label *label437
  1252 op sign *tmp390 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2:
 
    62 set :buildBlockFromCfg.1:x .coreX
    63 op add :buildBlockFromCfg.1:y .coreY 4
    64 set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   65 set :buildBlock:x .coreX
    66 set :buildBlock:y :buildBlockFromCfg.1:y
    67 set :buildBlock:copper 5
    68 set :buildBlock:lead 20
 
    93 label *label46
    94 op add :buildBlockFromCfg.3:y .coreY 3
    95 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   96 set :buildBlock:x .coreX
    97 set :buildBlock:y :buildBlockFromCfg.3:y
    98 set :buildBlock:copper 25
    99 set :buildBlock:lead 15
 
   178 write :buildBlockAt*retval processor1 ".titaniumDrill"
   179 op add :buildBlockFromCfg.5:y .coreY 2
   180 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  181 set :buildBlock:x .coreX
   182 set :buildBlock:y :buildBlockFromCfg.5:y
   183 set :buildBlock:copper 0
   184 set :buildBlock:lead 0
 
   368 set :buildBlockFromCfg.11:y .coreY
   369 set :buildBlock:block @unloader
   370 set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
+  371 set :buildBlock:y .coreY
   372 set :buildBlock:copper 0
   373 set :buildBlock:lead 0
   374 set :buildBlock:silicon 30

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-2 instructions):
 
    59 label *label37
    60 label *label34
    61 set .press *tmp85
-    * set :buildBlockFromCfg.1:x .coreX
    62 op add :buildBlockFromCfg.1:y .coreY 4
    63 set :buildBlock:block @battery
    64 set :buildBlock:x .coreX
 
   364 read *tmp162 processor3 ":start*finished"
   365 jump *label119 equal *tmp162 false
   366 op add :buildBlockFromCfg.11:x .coreX 2
-    * set :buildBlockFromCfg.11:y .coreY
   367 set :buildBlock:block @unloader
   368 set :buildBlock:x :buildBlockFromCfg.11:x
   369 set :buildBlock:y .coreY

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    12 ubind @poly
    13 set .builder @unit
    14 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label29
    15 jump *label28 equal .core null
-    * label *label30
    16 set .display processor1
    17 set :findUnits:type @mono
    18 setaddr :findUnits*retaddr *label31 (h:*label31)
 
    46 set :buildBlock:rotation 0
    47 set :buildBlock:config null
    48 setaddr :buildBlock*retaddr *label39 (h:*label39)
-    * label *label35
    49 call *label26 *invalid :buildBlock*retval (m:*label39) (h:*label39)
    50 label *label39
    51 set *tmp85 :buildBlock*retval
    52 jump *label34 always
-    * label *label36
    53 multijump *tmp86 0 0 (m:marker0)
    54 multilabel *label38 (m:marker0)
-    * label *label37
    55 label *label34
    56 set .press *tmp85
    57 op add :buildBlockFromCfg.1:y .coreY 4
 
    61 set :buildBlock:copper 5
    62 set :buildBlock:lead 20
    63 setaddr :buildBlock*retaddr *label45 (h:*label45)
-    * label *label41
    64 call *label26 *invalid :buildBlock*retval (m:*label45) (h:*label45)
    65 label *label45
    66 set *tmp89 :buildBlock*retval
    67 jump *label40 always
-    * label *label42
    68 multijump *tmp90 0 0 (m:marker1)
    69 multilabel *label44 (m:marker1)
-    * label *label43
    70 label *label40
    71 set .battery *tmp89
    72 op add :buildBlockFromCfg.2:x .coreX -1
    73 set :buildBlock:x :buildBlockFromCfg.2:x
    74 set :buildBlock:y :buildBlockFromCfg.1:y
    75 setaddr :buildBlock*retaddr *label51 (h:*label51)
-    * label *label47
    76 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
    77 label *label51
    78 jump *label46 always
-    * label *label48
    79 multijump *tmp94 0 0 (m:marker2)
    80 multilabel *label50 (m:marker2)
-    * label *label49
    81 label *label46
    82 op add :buildBlockFromCfg.3:y .coreY 3
    83 set :buildBlock:block @combustion-generator
 
    86 set :buildBlock:copper 25
    87 set :buildBlock:lead 15
    88 setaddr :buildBlock*retaddr *label57 (h:*label57)
-    * label *label53
    89 call *label26 *invalid :buildBlock*retval (m:*label57) (h:*label57)
    90 label *label57
    91 set *tmp97 :buildBlock*retval
    92 jump *label52 always
-    * label *label54
    93 multijump *tmp98 0 0 (m:marker3)
    94 multilabel *label56 (m:marker3)
-    * label *label55
    95 label *label52
    96 set .generator *tmp97
    97 set .powerTarget 800
 
   102 set :buildBlock:copper 30
   103 set :buildBlock:lead 25
   104 setaddr :buildBlock*retaddr *label63 (h:*label63)
-    * label *label59
   105 call *label26 *invalid :buildBlock*retval (m:*label63) (h:*label63)
   106 label *label63
   107 set *tmp101 :buildBlock*retval
   108 jump *label58 always
-    * label *label60
   109 multijump *tmp102 0 0 (m:marker4)
   110 multilabel *label62 (m:marker4)
-    * label *label61
   111 label *label58
   112 set .smelter *tmp101
   113 set :meetTarget:block @pneumatic-drill
 
   120 setaddr :meetTarget*retaddr *label66 (h:*label66)
   121 call *label22 *invalid :meetTarget*retval (m:*label66) (h:*label66)
   122 label *label66
-    * label *label65
   123 write @titanium processor1 ".nextBlock"
   124 write .coreX processor4 ":findDrillLocation:x"
   125 write .coreY processor4 ":findDrillLocation:y"
 
   140 jump *label68 notEqual :buildTitaniumDrill:result false
   141 set .ERROR "Cannot locate spot for titanium drill"
   142 stop
-    * label *label70
   143 label *label68
-    * label *label69
   144 write @pneumatic-drill processor1 ".nextBlock"
   145 set :buildBlockAt:block @pneumatic-drill
   146 set :buildBlockAt:x :buildTitaniumDrill:dx
 
   152 call *label25 *invalid :buildBlockAt*retval (m:*label71) (h:*label71)
   153 label *label71
   154 set *tmp105 :buildBlockAt*retval
-    * label *label64
   155 set .titaniumDrill :buildBlockAt*retval
   156 write :buildBlockAt*retval processor1 ".titaniumDrill"
   157 op add :buildBlockFromCfg.5:y .coreY 2
 
   163 set :buildBlock:silicon 30
   164 set :buildBlock:titanium 25
   165 setaddr :buildBlock*retaddr *label77 (h:*label77)
-    * label *label73
   166 call *label26 *invalid :buildBlock*retval (m:*label77) (h:*label77)
   167 label *label77
   168 set *tmp120 :buildBlock*retval
   169 jump *label72 always
-    * label *label74
   170 multijump *tmp121 0 0 (m:marker5)
   171 multilabel *label76 (m:marker5)
-    * label *label75
   172 label *label72
   173 set .unloader1 *tmp120
   174 op add :buildBlockFromCfg.6:x .coreX 1
 
   180 set :buildBlock:silicon 50
   181 set :buildBlock:titanium 0
   182 setaddr :buildBlock*retaddr *label83 (h:*label83)
-    * label *label79
   183 set :buildBlock:config processor2
   184 call *label26 *invalid :buildBlock*retval (m:*label83) (h:*label83)
   185 label *label83
   186 set *tmp124 :buildBlock*retval
   187 jump *label78 always
-    * label *label80
   188 multijump *tmp125 0 0 (m:marker6)
   189 multilabel *label82 (m:marker6)
-    * label *label81
   190 label *label78
   191 set .controller *tmp124
   192 write processor1 *tmp124 ".display"
 
   209 set :buildBlock:silicon 0
   210 set :buildBlock:config null
   211 setaddr :buildBlock*retaddr *label89 (h:*label89)
-    * label *label85
   212 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)
   213 label *label89
   214 jump *label84 always
-    * label *label86
   215 multijump *tmp129 0 0 (m:marker7)
   216 multilabel *label88 (m:marker7)
-    * label *label87
   217 label *label84
   218 op add :buildBlockFromCfg.8:y .coreY 1
   219 set :buildBlock:block @unloader
 
   224 set :buildBlock:silicon 30
   225 set :buildBlock:titanium 25
   226 setaddr :buildBlock*retaddr *label95 (h:*label95)
-    * label *label91
   227 call *label26 *invalid :buildBlock*retval (m:*label95) (h:*label95)
   228 label *label95
   229 set *tmp132 :buildBlock*retval
   230 jump *label90 always
-    * label *label92
   231 multijump *tmp133 0 0 (m:marker8)
   232 multilabel *label94 (m:marker8)
-    * label *label93
   233 label *label90
   234 write *tmp132 *tmp124 ".unloader2"
   235 op add :buildBlockFromCfg.9:x .coreX -3
 
   241 set :buildBlock:silicon 0
   242 set :buildBlock:titanium 0
   243 setaddr :buildBlock*retaddr *label101 (h:*label101)
-    * label *label97
   244 call *label26 *invalid :buildBlock*retval (m:*label101) (h:*label101)
   245 label *label101
   246 jump *label96 always
-    * label *label98
   247 multijump *tmp137 0 0 (m:marker9)
   248 multilabel *label100 (m:marker9)
-    * label *label99
   249 label *label96
   250 op add :buildBlockFromCfg.10:x .coreX -4
   251 set :buildBlock:block @air-factory
 
   256 set :buildBlock:rotation 3
   257 set :buildBlock:config @mono
   258 setaddr :buildBlock*retaddr *label107 (h:*label107)
-    * label *label103
   259 call *label26 *invalid :buildBlock*retval (m:*label107) (h:*label107)
   260 label *label107
   261 set *tmp140 :buildBlock*retval
   262 jump *label102 always
-    * label *label104
   263 multijump *tmp141 0 0 (m:marker10)
   264 multilabel *label106 (m:marker10)
-    * label *label105
   265 label *label102
   266 write *tmp140 *tmp124 ".factory"
   267 write *tmp140 processor1 ".factory"
 
   271 write 0 *tmp124 ".leadReserve"
   272 write 0 *tmp124 ".siliconReserve"
   273 write @flare *tmp124 ".unitToProduce"
-    * label *label108
   274 write 85 *tmp124 ".pressTarget"
   275 write 150 *tmp124 ".smelterTarget"
   276 write 30 *tmp124 ".kilnTarget"
 
   302 read *tmp155 processor3 ":start*finished"
   303 jump *label115 equal *tmp155 false
   304 label *label112
-    * label *label113
   305 setaddr :supplyBase1*retaddr *label116 (h:*label116)
   306 call *label19 *invalid :supplyBase1*retval (m:*label116) (h:*label116)
   307 label *label116
 
   309 jump *label117 greaterThanEq *tmp156 300
   310 jump *label111 always
   311 label *label117
-    * label *label118
-    * label *label110
   312 read *tmp34 *tmp124 ".monos"
   313 jump *label109 lessThan *tmp34 1
   314 label *label111
 
   331 set :buildBlock:rotation 0
   332 set :buildBlock:config null
   333 setaddr :buildBlock*retaddr *label125 (h:*label125)
-    * label *label121
   334 call *label26 *invalid :buildBlock*retval (m:*label125) (h:*label125)
   335 label *label125
   336 jump *label120 always
-    * label *label122
   337 multijump *tmp164 0 0 (m:marker11)
   338 multilabel *label124 (m:marker11)
-    * label *label123
   339 label *label120
   340 op add :buildBlockFromCfg.12:x .coreX 3.5
   341 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   348 set :buildBlock:silicon 0
   349 set :buildBlock:titanium 0
   350 setaddr :buildBlock*retaddr *label131 (h:*label131)
-    * label *label127
   351 call *label26 *invalid :buildBlock*retval (m:*label131) (h:*label131)
   352 label *label131
   353 set *tmp167 :buildBlock*retval
   354 jump *label126 always
-    * label *label128
   355 multijump *tmp168 0 0 (m:marker12)
   356 multilabel *label130 (m:marker12)
-    * label *label129
   357 label *label126
   358 write *tmp167 *tmp124 ".kiln"
   359 set :buildBlock:block @junction
 
   363 set :buildBlock:lead 0
   364 set :buildBlock:graphite 0
   365 setaddr :buildBlock*retaddr *label137 (h:*label137)
-    * label *label133
   366 call *label26 *invalid :buildBlock*retval (m:*label137) (h:*label137)
   367 label *label137
   368 jump *label132 always
-    * label *label134
   369 multijump *tmp172 0 0 (m:marker13)
   370 multilabel *label136 (m:marker13)
-    * label *label135
   371 label *label132
   372 op add :buildBlockFromCfg.14:x .coreX -3.5
   373 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   379 set :buildBlock:graphite 30
   380 set :buildBlock:metaglass 30
   381 setaddr :buildBlock*retaddr *label143 (h:*label143)
-    * label *label139
   382 call *label26 *invalid :buildBlock*retval (m:*label143) (h:*label143)
   383 label *label143
   384 jump *label138 always
-    * label *label140
   385 multijump *tmp176 0 0 (m:marker14)
   386 multilabel *label142 (m:marker14)
-    * label *label141
   387 label *label138
   388 set :buildBlock:block @steam-generator
   389 set :buildBlock:x :buildBlockFromCfg.14:x
 
   394 set :buildBlock:silicon 30
   395 set :buildBlock:metaglass 0
   396 setaddr :buildBlock*retaddr *label149 (h:*label149)
-    * label *label145
   397 call *label26 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   398 label *label149
   399 set *tmp179 :buildBlock*retval
   400 jump *label144 always
-    * label *label146
   401 multijump *tmp180 0 0 (m:marker15)
   402 multilabel *label148 (m:marker15)
-    * label *label147
   403 label *label144
   404 write *tmp179 *tmp124 ".generator2"
   405 set .graphiteSurplus 200
   406 set .siliconSurplus 1000
   407 set .metaglassSurplus 200
   408 jump *label150 equal :searchThorium false
-    * label *label152
   409 read *tmp35 *tmp124 ".flares"
   410 jump *label154 greaterThanEq *tmp35 1
   411 label *label464
   412 setaddr :supplyBase*retaddr *label155 (h:*label155)
   413 call *label20 *invalid :supplyBase*retval (m:*label155) (h:*label155)
   414 label *label155
-    * label *label153
   415 read *tmp35 *tmp124 ".flares"
   416 jump *label464 lessThan *tmp35 1
   417 label *label154
 
   431 setaddr :supplyBase*retaddr *label160 (h:*label160)
   432 call *label20 *invalid :supplyBase*retval (m:*label160) (h:*label160)
   433 label *label160
-    * label *label158
   434 read *tmp190 processor4 ":layoutThoriumDrill*finished"
   435 jump *label157 equal *tmp190 false
-    * label *label159
   436 label *label150
-    * label *label151
   437 set :meetTarget:block @laser-drill
   438 set :meetTarget:copper 35
   439 set :meetTarget:lead 0
 
   444 setaddr :meetTarget*retaddr *label163 (h:*label163)
   445 call *label22 *invalid :meetTarget*retval (m:*label163) (h:*label163)
   446 label *label163
-    * label *label162
   447 label *label164
   448 wait 1e-15
   449 read *tmp192 processor4 ":layoutThoriumDrill*finished"
 
   452 jump *label165 notEqual :buildThoriumDrill:result false
   453 set .ERROR "Cannot locate spot for thorium drill"
   454 stop
-    * label *label167
   455 label *label165
-    * label *label166
   456 set :buildBlockAt:block @laser-drill
   457 read :buildBlockAt:x processor4 ".drillX"
   458 read :buildBlockAt:y processor4 ".drillY"
 
   466 jump *label169 greaterThanEq *tmp64 0
   467 jump *label161 always
   468 label *label169
-    * label *label170
   469 set :meetTarget:block @water-extractor
   470 set :meetTarget:copper 30
   471 set :meetTarget:lead 30
 
   476 setaddr :meetTarget*retaddr *label172 (h:*label172)
   477 call *label22 *invalid :meetTarget*retval (m:*label172) (h:*label172)
   478 label *label172
-    * label *label171
   479 set :buildBlockAt:block @water-extractor
   480 read *tmp64 processor4 ".water1X"
   481 set :buildBlockAt:x *tmp64
 
   490 jump *label174 greaterThanEq *tmp66 0
   491 jump *label161 always
   492 label *label174
-    * label *label175
   493 set :meetTarget:block @water-extractor
   494 set :meetTarget:copper 30
   495 set :meetTarget:lead 30
 
   500 setaddr :meetTarget*retaddr *label177 (h:*label177)
   501 call *label22 *invalid :meetTarget*retval (m:*label177) (h:*label177)
   502 label *label177
-    * label *label176
   503 set :buildBlockAt:block @water-extractor
   504 read *tmp66 processor4 ".water2X"
   505 set :buildBlockAt:x *tmp66
 
   520 setaddr :meetTarget*retaddr *label180 (h:*label180)
   521 call *label22 *invalid :meetTarget*retval (m:*label180) (h:*label180)
   522 label *label180
-    * label *label179
   523 set :buildBlockAt:block @steam-generator
   524 read :buildBlockAt:x processor4 ".generatorX"
   525 read :buildBlockAt:y processor4 ".generatorY"
 
   539 setaddr :meetTarget*retaddr *label183 (h:*label183)
   540 call *label22 *invalid :meetTarget*retval (m:*label183) (h:*label183)
   541 label *label183
-    * label *label182
   542 set :buildBlockAt:block @power-node
   543 read :buildBlockAt:x processor4 ".nodeX"
   544 read :buildBlockAt:y processor4 ".nodeY"
 
   558 setaddr :meetTarget*retaddr *label186 (h:*label186)
   559 call *label22 *invalid :meetTarget*retval (m:*label186) (h:*label186)
   560 label *label186
-    * label *label185
   561 set :buildBlockAt:block @solar-panel
   562 read :buildBlockAt:x processor4 ".panelX"
   563 read :buildBlockAt:y processor4 ".panelY"
 
   577 set :buildBlock:silicon 0
   578 set :buildBlock:config @coal
   579 setaddr :buildBlock*retaddr *label193 (h:*label193)
-    * label *label189
   580 call *label26 *invalid :buildBlock*retval (m:*label193) (h:*label193)
   581 label *label193
   582 jump *label188 always
-    * label *label190
   583 multijump *tmp207 0 0 (m:marker16)
   584 multilabel *label192 (m:marker16)
-    * label *label191
   585 label *label188
   586 write 0 processor1 ".totalTargets"
   587 write null processor1 ".nextBlock"
 
   589 setaddr :supplyBase*retaddr *label197 (h:*label197)
   590 call *label20 *invalid :supplyBase*retval (m:*label197) (h:*label197)
   591 label *label197
-    * label *label195
   592 read *tmp35 *tmp124 ".flares"
   593 read *tmp34 *tmp124 ".monos"
   594 op add *tmp210 *tmp35 *tmp34
   595 jump *label194 lessThan *tmp210 16
-    * label *label196
   596 label *label198
   597 setaddr :supplyBase*retaddr *label201 (h:*label201)
   598 call *label20 *invalid :supplyBase*retval (m:*label201) (h:*label201)
   599 label *label201
-    * label *label199
   600 jump *label198 always
-    * label *label200
   601 ucontrol stop
   602 set .ERROR "Done"
   603 stop
-    * label *label202
   604 end
   605 label *label4
   606 write "Moving..." .display ".status3"
-    * label *label205
   607 op sub *tmp214 :moveTo:radius 0.5
-    * label *label206
   608 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp212
   609 jump *label208 notEqual *tmp212 false
   610 label *label458
   611 ucontrol approach :moveTo:x :moveTo:y *tmp214
-    * label *label207
   612 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp212
   613 jump *label458 equal *tmp212 false
   614 label *label208
-    * label *label204
   615 return :moveTo*retaddr
   616 end
   617 label *label5
 
   621 setaddr :moveTo*retaddr *label210 (h:*label210)
   622 call *label4 *invalid :moveTo*retval (m:*label210) (h:*label210)
   623 label *label210
-    * label *label209
   624 return :moveTo.1*retaddr
   625 end
   626 label *label6
   627 write "Moving..." .display ".status3"
-    * label *label212
   628 label *label213
   629 sensor *tmp217 @unit @firstItem
   630 jump *label216 equal *tmp217 null
   631 ucontrol itemDrop @air 1000
   632 label *label216
-    * label *label217
   633 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label214
   634 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp220
   635 jump *label213 equal *tmp220 false
-    * label *label215
-    * label *label211
   636 return :moveToEmpty*retaddr
   637 end
   638 label *label7
 
   644 setaddr :moveTo*retaddr *label219 (h:*label219)
   645 call *label4 *invalid :moveTo*retval (m:*label219) (h:*label219)
   646 label *label219
-    * label *label218
   647 return :moveToBlock*retaddr
   648 end
   649 label *label8
   650 write "Depositing..." .display ".status3"
-    * label *label221
   651 sensor *tmp224 @unit @firstItem
   652 jump *label222 notEqual *tmp224 :depositItems:item
   653 set :moveToBlock:block :depositItems:block
 
   658 sensor :depositItems:cap :depositItems:block @itemCapacity
   659 label *label225
   660 ucontrol itemDrop :depositItems:block 5
-    * label *label226
   661 sensor *tmp228 @unit @firstItem
   662 op mul *tmp229 *tmp228 :depositItems:cap
   663 sensor *tmp230 :depositItems:block :depositItems:item
   664 jump *label225 greaterThan *tmp229 *tmp230
-    * label *label227
   665 jump *label223 always
   666 label *label222
-    * label *label228
   667 sensor *tmp232 @unit @firstItem
   668 jump *label230 equal *tmp232 null
   669 label *label459
   670 ucontrol itemDrop @air 1000
-    * label *label229
   671 sensor *tmp232 @unit @firstItem
   672 jump *label459 notEqual *tmp232 null
   673 label *label230
   674 label *label223
   675 write 0 .display ".transportTarget"
   676 write null .display ".transportItem"
-    * label *label231
-    * label *label220
   677 return :depositItems*retaddr
   678 end
   679 label *label9
 
   681 jump *label233 notEqual *tmp234 false
   682 set .ERROR "Cannot locate ore"
   683 stop
-    * label *label235
   684 label *label233
-    * label *label234
-    * label *label232
   685 return :locateOre*retaddr
   686 end
   687 label *label10
   688 op min :mineOre:amount :mineOre:amount 5
   689 write :mineOre:amount .display ".transportTarget"
   690 write :mineOre:ore .display ".transportItem"
-    * label *label237
   691 set :locateOre:ore :mineOre:ore
   692 setaddr :locateOre*retaddr *label238 (h:*label238)
   693 call *label9 *invalid :locateOre*retval (m:*label238) (h:*label238)
 
   701 label *label239
   702 sensor *tmp239 @unit @firstItem
   703 jump *label240 equal *tmp239 :mineOre:ore
-    * label *label243
   704 sensor *tmp242 @unit @firstItem
   705 jump *label245 equal *tmp242 null
   706 label *label460
   707 ucontrol itemDrop @air 1000
-    * label *label244
   708 sensor *tmp242 @unit @firstItem
   709 jump *label460 notEqual *tmp242 null
   710 label *label245
-    * label *label242
   711 label *label240
-    * label *label241
   712 write "Mining..." .display ".status3"
-    * label *label246
   713 op add :mineOre:stop @second 10
   714 label *label247
   715 sensor :mineOre:item @unit @firstItem
 
   719 jump *label250 equal *tmp248 false
   720 jump *label249 always
   721 label *label250
-    * label *label251
   722 ucontrol mine :mineOre:x :mineOre:y
   723 jump *label252 lessThanEq @second :mineOre:stop
   724 jump *label249 always
   725 label *label252
-    * label *label253
-    * label *label248
   726 sensor *tmp252 @unit @totalItems
   727 jump *label247 lessThan *tmp252 :mineOre:amount
   728 label *label249
 
   732 setaddr :depositItems*retaddr *label254 (h:*label254)
   733 call *label8 *invalid :depositItems*retval (m:*label254) (h:*label254)
   734 label *label254
-    * label *label236
   735 return :mineOre*retaddr
   736 end
   737 label *label11
   738 write "Mining " .display ".status2"
   739 write :mineOre.1:ore .display ".item2"
   740 write "core" .display ".block2"
-    * label *label256
   741 set :mineOre:ore :mineOre.1:ore
   742 set :mineOre:amount 5
   743 set :mineOre:block .core
   744 setaddr :mineOre*retaddr *label257 (h:*label257)
   745 call *label10 *invalid :mineOre*retval (m:*label257) (h:*label257)
   746 label *label257
-    * label *label255
   747 return :mineOre.1*retaddr
   748 end
   749 label *label12
   750 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   751 write :transportStatus.2:target .display ".transportTarget"
   752 write :fetchBlock:item .display ".transportItem"
-    * label *label259
   753 write "Fetching " .display ".status2"
   754 write :fetchBlock:item .display ".item2"
   755 write :fetchBlock:block .display ".block2"
-    * label *label260
   756 sensor *tmp256 :fetchBlock:block @x
   757 sensor *tmp257 :fetchBlock:block @y
   758 set :moveToEmpty:x *tmp256
 
   760 setaddr :moveToEmpty*retaddr *label261 (h:*label261)
   761 call *label6 *invalid :moveToEmpty*retval (m:*label261) (h:*label261)
   762 label *label261
-    * label *label263
   763 sensor *tmp258 @unit @firstItem
   764 jump *label265 equal *tmp258 null
   765 label *label461
   766 ucontrol itemDrop @air 1000
-    * label *label264
   767 sensor *tmp258 @unit @firstItem
   768 jump *label461 notEqual *tmp258 null
   769 label *label265
-    * label *label262
   770 label *label266
   771 ucontrol itemTake :fetchBlock:block :fetchBlock:item 5
   772 sensor :fetchBlock:unitItem @unit @firstItem
 
   776 jump *label269 equal *tmp263 false
   777 ucontrol itemDrop @air 1000
   778 label *label269
-    * label *label270
-    * label *label267
   779 sensor *tmp265 @unit :fetchBlock:item
   780 op lessThan *tmp266 *tmp265 5
   781 sensor *tmp267 :fetchBlock:block :fetchBlock:item
   782 op land *tmp268 *tmp266 *tmp267
   783 jump *label266 notEqual *tmp268 false
-    * label *label268
   784 set :depositItems:block .core
   785 set :depositItems:item :fetchBlock:item
   786 setaddr :depositItems*retaddr *label271 (h:*label271)
   787 call *label8 *invalid :depositItems*retval (m:*label271) (h:*label271)
   788 label *label271
-    * label *label258
   789 return :fetchBlock*retaddr
   790 end
   791 label *label14
 
   793 jump *label273 notEqual @unit null
   794 jump *label272 always
   795 label *label273
-    * label *label274
   796 set :findFreeUnit:first_unit @unit
   797 label *label275
   798 sensor *tmp271 @unit @controlled
 
   805 jump *label280 notEqual *tmp274 1
   806 set :findFreeUnit:first_unit @unit
   807 label *label280
-    * label *label281
   808 label *label279
   809 ubind :findFreeUnit:unit_type
-    * label *label276
   810 jump *label275 notEqual :findFreeUnit:first_unit @unit
-    * label *label277
   811 label *label272
   812 return :findFreeUnit*retaddr
   813 end
 
   819 sensor *tmp284 .press @coal
   820 jump *label287 greaterThanEq *tmp284 5
   821 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label289
   822 write "Supplying " .display ".status2"
   823 write @coal .display ".item2"
   824 write .press .display ".block2"
-    * label *label291
   825 sensor :supplyBlock:blockCapacity .press @itemCapacity
   826 sensor *tmp288 .press @coal
   827 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp288
 
   833 call *label10 *invalid :mineOre*retval (m:*label294) (h:*label294)
   834 label *label294
   835 label *label292
-    * label *label293
-    * label *label290
   836 set :supplyBase0:supplied true
   837 label *label287
-    * label *label288
   838 label *label285
-    * label *label286
   839 sensor *tmp292 .core @silicon
   840 jump *label295 greaterThanEq *tmp292 .targetSilicon
   841 sensor *tmp295 .smelter @coal
   842 jump *label297 greaterThanEq *tmp295 5
   843 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label299
   844 write "Supplying " .display ".status2"
   845 write @coal .display ".item2"
   846 write .smelter .display ".block2"
-    * label *label301
   847 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
   848 sensor *tmp299 .smelter @coal
   849 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp299
 
   855 call *label10 *invalid :mineOre*retval (m:*label304) (h:*label304)
   856 label *label304
   857 label *label302
-    * label *label303
-    * label *label300
   858 set :supplyBase0:supplied true
   859 jump *label298 always
   860 label *label297
   861 sensor *tmp303 .smelter @sand
   862 jump *label305 greaterThanEq *tmp303 5
   863 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label307
   864 write "Supplying " .display ".status2"
   865 write @sand .display ".item2"
   866 write .smelter .display ".block2"
-    * label *label309
   867 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
   868 sensor *tmp307 .smelter @sand
   869 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp307
 
   875 call *label10 *invalid :mineOre*retval (m:*label312) (h:*label312)
   876 label *label312
   877 label *label310
-    * label *label311
-    * label *label308
   878 set :supplyBase0:supplied true
   879 label *label305
-    * label *label306
   880 label *label298
   881 label *label295
-    * label *label296
   882 sensor *tmp311 .battery @totalPower
   883 jump *label313 greaterThanEq *tmp311 .powerTarget
   884 sensor *tmp314 .generator @coal
   885 jump *label315 greaterThanEq *tmp314 2
   886 write "Goal 4: supplying generator" .display ".status1"
-    * label *label317
   887 write "Supplying " .display ".status2"
   888 write @coal .display ".item2"
   889 write .generator .display ".block2"
-    * label *label319
   890 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
   891 sensor *tmp318 .generator @coal
   892 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp318
 
   898 call *label10 *invalid :mineOre*retval (m:*label322) (h:*label322)
   899 label *label322
   900 label *label320
-    * label *label321
-    * label *label318
   901 set :supplyBase0:supplied true
   902 label *label315
-    * label *label316
   903 label *label313
-    * label *label314
   904 label *label283
-    * label *label284
   905 set *tmp324 100
   906 sensor *tmp322 .core @titanium
   907 jump *label324 greaterThanEq *tmp322 .targetTitanium
 
   916 op mul *tmp334 .unloader1 .powerTarget
   917 jump *label329 greaterThanEq *tmp333 *tmp334
   918 write "Goal 5: supplying generator" .display ".status1"
-    * label *label331
   919 set :mineOre.1:ore @coal
   920 setaddr :mineOre.1*retaddr *label332 (h:*label332)
   921 call *label11 *invalid :mineOre.1*retval (m:*label332) (h:*label332)
 
   925 sensor *tmp337 .core @silicon
   926 jump *label333 greaterThanEq *tmp337 .targetSilicon
   927 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label335
   928 sensor :supplyBase0:coal .core @coal
   929 sensor :supplyBase0:sand .core @sand
   930 set :mineOre.1:ore @sand
 
   939 sensor *tmp344 .core @copper
   940 jump *label339 greaterThanEq *tmp344 .targetCopper
   941 write "Goal 7: copper requirement" .display ".status1"
-    * label *label341
   942 set :mineOre.1:ore @copper
   943 setaddr :mineOre.1*retaddr *label342 (h:*label342)
   944 call *label11 *invalid :mineOre.1*retval (m:*label342) (h:*label342)
 
   948 sensor *tmp347 .core @lead
   949 jump *label343 greaterThanEq *tmp347 .targetLead
   950 write "Goal 8: lead requirement" .display ".status1"
-    * label *label345
   951 set :mineOre.1:ore @lead
   952 setaddr :mineOre.1*retaddr *label346 (h:*label346)
   953 call *label11 *invalid :mineOre.1*retval (m:*label346) (h:*label346)
 
   957 sensor *tmp350 .core @metaglass
   958 jump *label347 greaterThanEq *tmp350 .targetMetaglass
   959 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label349
   960 set :mineOre.1:ore @sand
   961 setaddr :mineOre.1*retaddr *label350 (h:*label350)
   962 call *label11 *invalid :mineOre.1*retval (m:*label350) (h:*label350)
 
   964 jump *label348 always
   965 label *label347
   966 write "Goal 10: supplying base" .display ".status1"
-    * label *label351
   967 sensor :supplyBase0:coal.1 .core @coal
   968 sensor :supplyBase0:sand.1 .core @sand
   969 set :mineOre.1:ore @sand
 
   979 label *label334
   980 label *label330
   981 label *label327
-    * label *label328
   982 jump *label326 always
   983 label *label325
   984 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label355
   985 set :fetchBlock:block .titaniumDrill
   986 set :fetchBlock:item @titanium
   987 setaddr :fetchBlock*retaddr *label356 (h:*label356)
   988 call *label12 *invalid :fetchBlock*retval (m:*label356) (h:*label356)
   989 label *label356
   990 label *label326
-    * label *label282
   991 return :supplyBase0*retaddr
   992 end
   993 label *label19
 
   998 sensor *tmp362 .core @lead
   999 jump *label360 greaterThanEq *tmp361 *tmp362
  1000 write "Phase 1: mining sand" .display ".status1"
-    * label *label362
  1001 set :mineOre.1:ore @sand
  1002 setaddr :mineOre.1*retaddr *label363 (h:*label363)
  1003 call *label11 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
 
  1005 jump *label361 always
  1006 label *label360
  1007 write "Phase 1: mining lead" .display ".status1"
-    * label *label364
  1008 set :mineOre.1:ore @lead
  1009 setaddr :mineOre.1*retaddr *label365 (h:*label365)
  1010 call *label11 *invalid :mineOre.1*retval (m:*label365) (h:*label365)
 
  1016 sensor *tmp366 .core @lead
  1017 jump *label366 greaterThanEq *tmp365 *tmp366
  1018 write "Phase 1: mining coal" .display ".status1"
-    * label *label368
  1019 set :mineOre.1:ore @coal
  1020 setaddr :mineOre.1*retaddr *label369 (h:*label369)
  1021 call *label11 *invalid :mineOre.1*retval (m:*label369) (h:*label369)
 
  1023 jump *label367 always
  1024 label *label366
  1025 write "Phase 1: mining lead" .display ".status1"
-    * label *label370
  1026 set :mineOre.1:ore @lead
  1027 setaddr :mineOre.1*retaddr *label371 (h:*label371)
  1028 call *label11 *invalid :mineOre.1*retval (m:*label371) (h:*label371)
  1029 label *label371
  1030 label *label367
  1031 label *label359
-    * label *label357
  1032 return :supplyBase1*retaddr
  1033 end
  1034 label *label20
 
  1043 call *label18 *invalid :supplyBase0*retval (m:*label376) (h:*label376)
  1044 label *label376
  1045 label *label374
-    * label *label372
  1046 return :supplyBase*retaddr
  1047 end
  1048 label *label21
 
  1061 set :targetMet*retval true
  1062 jump *label377 always
  1063 label *label388
-    * label *label389
  1064 label *label386
-    * label *label387
  1065 label *label384
-    * label *label385
  1066 label *label382
-    * label *label383
  1067 label *label380
-    * label *label381
  1068 label *label378
-    * label *label379
  1069 set :targetMet*retval false
  1070 jump *label377 always
  1071 label *label377
  1072 return :targetMet*retaddr
  1073 end
  1074 label *label22
-    * label *label433
  1075 op sign :meetTarget:count :meetTarget:copper
-    * label *label434
-    * label *label437
  1076 op sign *tmp390 :meetTarget:lead
  1077 op add :meetTarget:count :meetTarget:count *tmp390
-    * label *label438
-    * label *label441
  1078 op sign *tmp390 :meetTarget:graphite
  1079 op add :meetTarget:count :meetTarget:count *tmp390
-    * label *label442
-    * label *label445
  1080 op sign *tmp390 :meetTarget:silicon
  1081 op add :meetTarget:count :meetTarget:count *tmp390
-    * label *label446
-    * label *label449
  1082 op sign *tmp390 :meetTarget:titanium
  1083 op add :meetTarget:count :meetTarget:count *tmp390
-    * label *label450
-    * label *label453
  1084 op sign *tmp390 :meetTarget:metaglass
  1085 op add :meetTarget:count :meetTarget:count *tmp390
-    * label *label454
-    * label *label393
  1086 write :meetTarget:count .display ".totalTargets"
  1087 write :meetTarget:block .display ".nextBlock"
  1088 write :meetTarget:copper .display ".targetCopper"
 
  1111 op mul *tmp398 *tmp397 20
  1112 op add *tmp399 :meetTarget:silicon *tmp398
  1113 write *tmp399 .controller ".siliconReserve"
-    * label *label400
  1114 setaddr :targetMet*retaddr *label403 (h:*label403)
  1115 call *label21 *invalid :targetMet*retval (m:*label403) (h:*label403)
  1116 label *label403
 
  1119 setaddr :supplyBase*retaddr *label404 (h:*label404)
  1120 call *label20 *invalid :supplyBase*retval (m:*label404) (h:*label404)
  1121 label *label404
-    * label *label401
  1122 setaddr :targetMet*retaddr *label463 (h:*label463)
  1123 call *label21 *invalid :targetMet*retval (m:*label463) (h:*label463)
  1124 label *label463
  1125 jump *label462 equal :targetMet*retval false
  1126 label *label402
-    * label *label390
  1127 return :meetTarget*retaddr
  1128 end
  1129 label *label23
 
  1134 op mul *tmp405 *tmp404 1000
  1135 op add *tmp406 :log:encodedId *tmp405
  1136 write *tmp406 bank1 *tmp401
-    * label *label405
  1137 return :log*retaddr
  1138 end
  1139 label *label24
 
  1141 setaddr :log*retaddr *label407 (h:*label407)
  1142 call *label23 *invalid :log*retval (m:*label407) (h:*label407)
  1143 label *label407
-    * label *label406
  1144 return :logBlock*retaddr
  1145 end
  1146 label *label25
 
  1150 call *label5 *invalid :moveTo.1*retval (m:*label409) (h:*label409)
  1151 label *label409
  1152 write "Building..." .display ".status3"
-    * label *label410
  1153 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1154 jump *label411 equal :buildBlockAt:building null
  1155 jump *label413 notEqual :buildBlockAt:type :buildBlockAt:block
  1156 set :buildBlockAt*retval :buildBlockAt:building
  1157 jump *label408 always
  1158 label *label413
-    * label *label414
  1159 jump *label415 equal :buildBlockAt:skipError false
  1160 set :buildBlockAt*retval null
  1161 jump *label408 always
  1162 label *label415
-    * label *label416
  1163 set .ERROR "Cannot build at ("
  1164 stop
-    * label *label417
  1165 label *label411
-    * label *label412
  1166 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1167 wait 0.25
  1168 label *label418
 
  1171 set :buildBlockAt*retval null
  1172 jump *label408 always
  1173 label *label421
-    * label *label422
-    * label *label419
  1174 jump *label418 notEqual :buildBlockAt:type :buildBlockAt:block
-    * label *label420
  1175 set :logBlock:block :buildBlockAt:block
  1176 setaddr :logBlock*retaddr *label423 (h:*label423)
  1177 call *label24 *invalid :logBlock*retval (m:*label423) (h:*label423)
 
  1201 call *label25 *invalid :buildBlockAt*retval (m:*label426) (h:*label426)
  1202 label *label426
  1203 set :buildBlock*retval :buildBlockAt*retval
-    * label *label424
  1204 return :buildBlock*retaddr
  1205 end
  1206 label *label27
 
  1211 label *label430
  1212 op add :findUnits:count :findUnits:count 1
  1213 ubind :findUnits:type
-    * label *label431
  1214 jump *label430 notEqual @unit :findUnits:firstUnit
-    * label *label432
  1215 label *label428
-    * label *label429
  1216 set :findUnits*retval :findUnits:count
-    * label *label427
  1217 return :findUnits*retaddr
  1218 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-6 instructions):
 
   306 call *label19 *invalid :supplyBase1*retval (m:*label116) (h:*label116)
   307 label *label116
   308 sensor *tmp156 *tmp89 @totalPower
-    * jump *label117 greaterThanEq *tmp156 300
-    * jump *label111 always
+  309 jump *label111 lessThan *tmp156 300
   310 label *label117
   311 read *tmp34 *tmp124 ".monos"
   312 jump *label109 lessThan *tmp34 1
 
   462 call *label25 *invalid :buildBlockAt*retval (m:*label168) (h:*label168)
   463 label *label168
   464 read *tmp64 processor4 ".water1X"
-    * jump *label169 greaterThanEq *tmp64 0
-    * jump *label161 always
+  465 jump *label161 lessThan *tmp64 0
   466 label *label169
   467 set :meetTarget:block @water-extractor
   468 set :meetTarget:copper 30
 
   485 call *label25 *invalid :buildBlockAt*retval (m:*label173) (h:*label173)
   486 label *label173
   487 read *tmp66 processor4 ".water2X"
-    * jump *label174 greaterThanEq *tmp66 0
-    * jump *label161 always
+  488 jump *label161 lessThan *tmp66 0
   489 label *label174
   490 set :meetTarget:block @water-extractor
   491 set :meetTarget:copper 30
 
   713 op notEqual *tmp246 :mineOre:item null
   714 op notEqual *tmp247 :mineOre:item :mineOre:ore
   715 op land *tmp248 *tmp246 *tmp247
-    * jump *label250 equal *tmp248 false
-    * jump *label249 always
+  716 jump *label249 notEqual *tmp248 false
   717 label *label250
   718 ucontrol mine :mineOre:x :mineOre:y
-    * jump *label252 lessThanEq @second :mineOre:stop
-    * jump *label249 always
+  719 jump *label249 greaterThan @second :mineOre:stop
   720 label *label252
   721 sensor *tmp252 @unit @totalItems
   722 jump *label247 lessThan *tmp252 :mineOre:amount
 
   785 end
   786 label *label14
   787 ubind :findFreeUnit:unit_type
-    * jump *label273 notEqual @unit null
-    * jump *label272 always
+  788 jump *label272 equal @unit null
   789 label *label273
   790 set :findFreeUnit:first_unit @unit
   791 label *label275

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   307 label *label116
   308 sensor *tmp156 *tmp89 @totalPower
   309 jump *label111 lessThan *tmp156 300
-    * label *label117
   310 read *tmp34 *tmp124 ".monos"
   311 jump *label109 lessThan *tmp34 1
   312 label *label111
 
   462 label *label168
   463 read *tmp64 processor4 ".water1X"
   464 jump *label161 lessThan *tmp64 0
-    * label *label169
   465 set :meetTarget:block @water-extractor
   466 set :meetTarget:copper 30
   467 set :meetTarget:lead 30
 
   484 label *label173
   485 read *tmp66 processor4 ".water2X"
   486 jump *label161 lessThan *tmp66 0
-    * label *label174
   487 set :meetTarget:block @water-extractor
   488 set :meetTarget:copper 30
   489 set :meetTarget:lead 30
 
   711 op notEqual *tmp247 :mineOre:item :mineOre:ore
   712 op land *tmp248 *tmp246 *tmp247
   713 jump *label249 notEqual *tmp248 false
-    * label *label250
   714 ucontrol mine :mineOre:x :mineOre:y
   715 jump *label249 greaterThan @second :mineOre:stop
-    * label *label252
   716 sensor *tmp252 @unit @totalItems
   717 jump *label247 lessThan *tmp252 :mineOre:amount
   718 label *label249
 
   781 label *label14
   782 ubind :findFreeUnit:unit_type
   783 jump *label272 equal @unit null
-    * label *label273
   784 set :findFreeUnit:first_unit @unit
   785 label *label275
   786 sensor *tmp271 @unit @controlled

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   786 sensor *tmp271 @unit @controlled
   787 jump *label278 notEqual *tmp271 0
   788 ucontrol flag :findFreeUnit:initial_flag
-    * jump *label272 always
+  789 return :findFreeUnit*retaddr
   790 jump *label279 always
   791 label *label278
   792 sensor *tmp274 :findFreeUnit:first_unit @dead
 
   899 label *label324
   900 sensor *tmp328 .titaniumDrill @titanium
   901 jump *label325 greaterThanEq *tmp328 *tmp324
-    * jump *label327 notEqual :supplyBase0:supplied false
+  902 jump *label326 notEqual :supplyBase0:supplied false
   903 sensor *tmp333 .battery @totalPower
   904 op mul *tmp334 .unloader1 .powerTarget
   905 jump *label329 greaterThanEq *tmp333 *tmp334
 
   908 setaddr :mineOre.1*retaddr *label332 (h:*label332)
   909 call *label11 *invalid :mineOre.1*retval (m:*label332) (h:*label332)
   910 label *label332
-    * jump *label330 always
+  911 return :supplyBase0*retaddr
   912 label *label329
   913 sensor *tmp337 .core @silicon
   914 jump *label333 greaterThanEq *tmp337 .targetSilicon
 
   922 setaddr :mineOre.1*retaddr *label338 (h:*label338)
   923 call *label11 *invalid :mineOre.1*retval (m:*label338) (h:*label338)
   924 label *label338
-    * jump *label334 always
+  925 return :supplyBase0*retaddr
   926 label *label333
   927 sensor *tmp344 .core @copper
   928 jump *label339 greaterThanEq *tmp344 .targetCopper
 
   931 setaddr :mineOre.1*retaddr *label342 (h:*label342)
   932 call *label11 *invalid :mineOre.1*retval (m:*label342) (h:*label342)
   933 label *label342
-    * jump *label340 always
+  934 return :supplyBase0*retaddr
   935 label *label339
   936 sensor *tmp347 .core @lead
   937 jump *label343 greaterThanEq *tmp347 .targetLead
 
   940 setaddr :mineOre.1*retaddr *label346 (h:*label346)
   941 call *label11 *invalid :mineOre.1*retval (m:*label346) (h:*label346)
   942 label *label346
-    * jump *label344 always
+  943 return :supplyBase0*retaddr
   944 label *label343
   945 sensor *tmp350 .core @metaglass
   946 jump *label347 greaterThanEq *tmp350 .targetMetaglass
 
   949 setaddr :mineOre.1*retaddr *label350 (h:*label350)
   950 call *label11 *invalid :mineOre.1*retval (m:*label350) (h:*label350)
   951 label *label350
-    * jump *label348 always
+  952 return :supplyBase0*retaddr
   953 label *label347
   954 write "Goal 10: supplying base" .display ".status1"
   955 sensor :supplyBase0:coal.1 .core @coal
 
   967 label *label334
   968 label *label330
   969 label *label327
-    * jump *label326 always
+  970 return :supplyBase0*retaddr
   971 label *label325
   972 write "Goal 11: Fetching titanium" .display ".status1"
   973 set :fetchBlock:block .titaniumDrill
 
   990 setaddr :mineOre.1*retaddr *label363 (h:*label363)
   991 call *label11 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
   992 label *label363
-    * jump *label361 always
+  993 return :supplyBase1*retaddr
   994 label *label360
   995 write "Phase 1: mining lead" .display ".status1"
   996 set :mineOre.1:ore @lead
 
   998 call *label11 *invalid :mineOre.1*retval (m:*label365) (h:*label365)
   999 label *label365
  1000 label *label361
-    * jump *label359 always
+ 1001 return :supplyBase1*retaddr
  1002 label *label358
  1003 sensor *tmp365 .core @coal
  1004 sensor *tmp366 .core @lead
 
  1008 setaddr :mineOre.1*retaddr *label369 (h:*label369)
  1009 call *label11 *invalid :mineOre.1*retval (m:*label369) (h:*label369)
  1010 label *label369
-    * jump *label367 always
+ 1011 return :supplyBase1*retaddr
  1012 label *label366
  1013 write "Phase 1: mining lead" .display ".status1"
  1014 set :mineOre.1:ore @lead
 
  1025 setaddr :supplyBase1*retaddr *label375 (h:*label375)
  1026 call *label19 *invalid :supplyBase1*retval (m:*label375) (h:*label375)
  1027 label *label375
-    * jump *label374 always
+ 1028 return :supplyBase*retaddr
  1029 label *label373
  1030 setaddr :supplyBase0*retaddr *label376 (h:*label376)
  1031 call *label18 *invalid :supplyBase0*retval (m:*label376) (h:*label376)
 
  1047 sensor *tmp386 .core @metaglass
  1048 jump *label388 lessThan *tmp386 .targetMetaglass
  1049 set :targetMet*retval true
-    * jump *label377 always
+ 1050 return :targetMet*retaddr
  1051 label *label388
  1052 label *label386
  1053 label *label384
 
  1055 label *label380
  1056 label *label378
  1057 set :targetMet*retval false
-    * jump *label377 always
+ 1058 return :targetMet*retaddr
  1059 label *label377
  1060 return :targetMet*retaddr
  1061 end
 
  1142 jump *label411 equal :buildBlockAt:building null
  1143 jump *label413 notEqual :buildBlockAt:type :buildBlockAt:block
  1144 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label408 always
+ 1145 return :buildBlockAt*retaddr
  1146 label *label413
  1147 jump *label415 equal :buildBlockAt:skipError false
  1148 set :buildBlockAt*retval null
-    * jump *label408 always
+ 1149 return :buildBlockAt*retaddr
  1150 label *label415
  1151 set .ERROR "Cannot build at ("
  1152 stop
 
  1157 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1158 jump *label421 notEqual :buildBlockAt:building null
  1159 set :buildBlockAt*retval null
-    * jump *label408 always
+ 1160 return :buildBlockAt*retaddr
  1161 label *label421
  1162 jump *label418 notEqual :buildBlockAt:type :buildBlockAt:block
  1163 set :logBlock:block :buildBlockAt:block

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-43 instructions):
 
    50 label *label39
    51 set *tmp85 :buildBlock*retval
    52 jump *label34 always
-    * multijump *tmp86 0 0 (m:marker0)
-    * multilabel *label38 (m:marker0)
    53 label *label34
    54 set .press *tmp85
    55 op add :buildBlockFromCfg.1:y .coreY 4
 
    63 label *label45
    64 set *tmp89 :buildBlock*retval
    65 jump *label40 always
-    * multijump *tmp90 0 0 (m:marker1)
-    * multilabel *label44 (m:marker1)
    66 label *label40
    67 set .battery *tmp89
    68 op add :buildBlockFromCfg.2:x .coreX -1
 
    72 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
    73 label *label51
    74 jump *label46 always
-    * multijump *tmp94 0 0 (m:marker2)
-    * multilabel *label50 (m:marker2)
    75 label *label46
    76 op add :buildBlockFromCfg.3:y .coreY 3
    77 set :buildBlock:block @combustion-generator
 
    84 label *label57
    85 set *tmp97 :buildBlock*retval
    86 jump *label52 always
-    * multijump *tmp98 0 0 (m:marker3)
-    * multilabel *label56 (m:marker3)
    87 label *label52
    88 set .generator *tmp97
    89 set .powerTarget 800
 
    98 label *label63
    99 set *tmp101 :buildBlock*retval
   100 jump *label58 always
-    * multijump *tmp102 0 0 (m:marker4)
-    * multilabel *label62 (m:marker4)
   101 label *label58
   102 set .smelter *tmp101
   103 set :meetTarget:block @pneumatic-drill
 
   157 label *label77
   158 set *tmp120 :buildBlock*retval
   159 jump *label72 always
-    * multijump *tmp121 0 0 (m:marker5)
-    * multilabel *label76 (m:marker5)
   160 label *label72
   161 set .unloader1 *tmp120
   162 op add :buildBlockFromCfg.6:x .coreX 1
 
   173 label *label83
   174 set *tmp124 :buildBlock*retval
   175 jump *label78 always
-    * multijump *tmp125 0 0 (m:marker6)
-    * multilabel *label82 (m:marker6)
   176 label *label78
   177 set .controller *tmp124
   178 write processor1 *tmp124 ".display"
 
   198 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)
   199 label *label89
   200 jump *label84 always
-    * multijump *tmp129 0 0 (m:marker7)
-    * multilabel *label88 (m:marker7)
   201 label *label84
   202 op add :buildBlockFromCfg.8:y .coreY 1
   203 set :buildBlock:block @unloader
 
   212 label *label95
   213 set *tmp132 :buildBlock*retval
   214 jump *label90 always
-    * multijump *tmp133 0 0 (m:marker8)
-    * multilabel *label94 (m:marker8)
   215 label *label90
   216 write *tmp132 *tmp124 ".unloader2"
   217 op add :buildBlockFromCfg.9:x .coreX -3
 
   226 call *label26 *invalid :buildBlock*retval (m:*label101) (h:*label101)
   227 label *label101
   228 jump *label96 always
-    * multijump *tmp137 0 0 (m:marker9)
-    * multilabel *label100 (m:marker9)
   229 label *label96
   230 op add :buildBlockFromCfg.10:x .coreX -4
   231 set :buildBlock:block @air-factory
 
   240 label *label107
   241 set *tmp140 :buildBlock*retval
   242 jump *label102 always
-    * multijump *tmp141 0 0 (m:marker10)
-    * multilabel *label106 (m:marker10)
   243 label *label102
   244 write *tmp140 *tmp124 ".factory"
   245 write *tmp140 processor1 ".factory"
 
   310 call *label26 *invalid :buildBlock*retval (m:*label125) (h:*label125)
   311 label *label125
   312 jump *label120 always
-    * multijump *tmp164 0 0 (m:marker11)
-    * multilabel *label124 (m:marker11)
   313 label *label120
   314 op add :buildBlockFromCfg.12:x .coreX 3.5
   315 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   326 label *label131
   327 set *tmp167 :buildBlock*retval
   328 jump *label126 always
-    * multijump *tmp168 0 0 (m:marker12)
-    * multilabel *label130 (m:marker12)
   329 label *label126
   330 write *tmp167 *tmp124 ".kiln"
   331 set :buildBlock:block @junction
 
   338 call *label26 *invalid :buildBlock*retval (m:*label137) (h:*label137)
   339 label *label137
   340 jump *label132 always
-    * multijump *tmp172 0 0 (m:marker13)
-    * multilabel *label136 (m:marker13)
   341 label *label132
   342 op add :buildBlockFromCfg.14:x .coreX -3.5
   343 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   352 call *label26 *invalid :buildBlock*retval (m:*label143) (h:*label143)
   353 label *label143
   354 jump *label138 always
-    * multijump *tmp176 0 0 (m:marker14)
-    * multilabel *label142 (m:marker14)
   355 label *label138
   356 set :buildBlock:block @steam-generator
   357 set :buildBlock:x :buildBlockFromCfg.14:x
 
   366 label *label149
   367 set *tmp179 :buildBlock*retval
   368 jump *label144 always
-    * multijump *tmp180 0 0 (m:marker15)
-    * multilabel *label148 (m:marker15)
   369 label *label144
   370 write *tmp179 *tmp124 ".generator2"
   371 set .graphiteSurplus 200
 
   542 call *label26 *invalid :buildBlock*retval (m:*label193) (h:*label193)
   543 label *label193
   544 jump *label188 always
-    * multijump *tmp207 0 0 (m:marker16)
-    * multilabel *label192 (m:marker16)
   545 label *label188
   546 write 0 processor1 ".totalTargets"
   547 write null processor1 ".nextBlock"
 
   558 call *label20 *invalid :supplyBase*retval (m:*label201) (h:*label201)
   559 label *label201
   560 jump *label198 always
-    * ucontrol stop
-    * set .ERROR "Done"
-    * stop
-    * end
   561 label *label4
   562 write "Moving..." .display ".status3"
   563 op sub *tmp214 :moveTo:radius 0.5
 
   569 jump *label458 equal *tmp212 false
   570 label *label208
   571 return :moveTo*retaddr
-    * end
   572 label *label5
   573 set :moveTo:x :moveTo.1:x
   574 set :moveTo:y :moveTo.1:y
 
   577 call *label4 *invalid :moveTo*retval (m:*label210) (h:*label210)
   578 label *label210
   579 return :moveTo.1*retaddr
-    * end
   580 label *label6
   581 write "Moving..." .display ".status3"
   582 label *label213
 
   588 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp220
   589 jump *label213 equal *tmp220 false
   590 return :moveToEmpty*retaddr
-    * end
   591 label *label7
   592 sensor *tmp222 :moveToBlock:block @x
   593 sensor *tmp223 :moveToBlock:block @y
 
   598 call *label4 *invalid :moveTo*retval (m:*label219) (h:*label219)
   599 label *label219
   600 return :moveToBlock*retaddr
-    * end
   601 label *label8
   602 write "Depositing..." .display ".status3"
   603 sensor *tmp224 @unit @firstItem
 
   627 write 0 .display ".transportTarget"
   628 write null .display ".transportItem"
   629 return :depositItems*retaddr
-    * end
   630 label *label9
   631 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp234 0
   632 jump *label233 notEqual *tmp234 false
 
   634 stop
   635 label *label233
   636 return :locateOre*retaddr
-    * end
   637 label *label10
   638 op min :mineOre:amount :mineOre:amount 5
   639 write :mineOre:amount .display ".transportTarget"
 
   679 call *label8 *invalid :depositItems*retval (m:*label254) (h:*label254)
   680 label *label254
   681 return :mineOre*retaddr
-    * end
   682 label *label11
   683 write "Mining " .display ".status2"
   684 write :mineOre.1:ore .display ".item2"
 
   690 call *label10 *invalid :mineOre*retval (m:*label257) (h:*label257)
   691 label *label257
   692 return :mineOre.1*retaddr
-    * end
   693 label *label12
   694 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   695 write :transportStatus.2:target .display ".transportTarget"
 
   731 call *label8 *invalid :depositItems*retval (m:*label271) (h:*label271)
   732 label *label271
   733 return :fetchBlock*retaddr
-    * end
   734 label *label14
   735 ubind :findFreeUnit:unit_type
   736 jump *label272 equal @unit null
 
   740 jump *label278 notEqual *tmp271 0
   741 ucontrol flag :findFreeUnit:initial_flag
   742 return :findFreeUnit*retaddr
-    * jump *label279 always
   743 label *label278
   744 sensor *tmp274 :findFreeUnit:first_unit @dead
   745 jump *label280 notEqual *tmp274 1
 
   750 jump *label275 notEqual :findFreeUnit:first_unit @unit
   751 label *label272
   752 return :findFreeUnit*retaddr
-    * end
   753 label *label18
   754 set :supplyBase0:supplied false
   755 jump *label283 notEqual .unloader1 null
 
   912 setaddr :mineOre.1*retaddr *label354 (h:*label354)
   913 call *label11 *invalid :mineOre.1*retval (m:*label354) (h:*label354)
   914 label *label354
-    * label *label348
-    * label *label344
-    * label *label340
-    * label *label334
-    * label *label330
-    * label *label327
   915 return :supplyBase0*retaddr
   916 label *label325
   917 write "Goal 11: Fetching titanium" .display ".status1"
 
   922 label *label356
   923 label *label326
   924 return :supplyBase0*retaddr
-    * end
   925 label *label19
   926 sensor *tmp357 .core @sand
   927 sensor *tmp358 .core @coal
 
   941 setaddr :mineOre.1*retaddr *label365 (h:*label365)
   942 call *label11 *invalid :mineOre.1*retval (m:*label365) (h:*label365)
   943 label *label365
-    * label *label361
   944 return :supplyBase1*retaddr
   945 label *label358
   946 sensor *tmp365 .core @coal
 
   958 setaddr :mineOre.1*retaddr *label371 (h:*label371)
   959 call *label11 *invalid :mineOre.1*retval (m:*label371) (h:*label371)
   960 label *label371
-    * label *label367
-    * label *label359
   961 return :supplyBase1*retaddr
-    * end
   962 label *label20
   963 read *tmp34 .controller ".monos"
   964 jump *label373 lessThanEq *tmp34 3
 
   970 setaddr :supplyBase0*retaddr *label376 (h:*label376)
   971 call *label18 *invalid :supplyBase0*retval (m:*label376) (h:*label376)
   972 label *label376
-    * label *label374
   973 return :supplyBase*retaddr
-    * end
   974 label *label21
   975 sensor *tmp371 .core @copper
   976 jump *label378 lessThan *tmp371 .targetCopper
 
   994 label *label378
   995 set :targetMet*retval false
   996 return :targetMet*retaddr
-    * label *label377
-    * return :targetMet*retaddr
-    * end
   997 label *label22
   998 op sign :meetTarget:count :meetTarget:copper
   999 op sign *tmp390 :meetTarget:lead
 
  1048 jump *label462 equal :targetMet*retval false
  1049 label *label402
  1050 return :meetTarget*retaddr
-    * end
  1051 label *label23
  1052 read *tmp74 bank1 511
  1053 op sub *tmp401 *tmp74 1
 
  1057 op add *tmp406 :log:encodedId *tmp405
  1058 write *tmp406 bank1 *tmp401
  1059 return :log*retaddr
-    * end
  1060 label *label24
  1061 sensor :log:encodedId :logBlock:block @id
  1062 setaddr :log*retaddr *label407 (h:*label407)
  1063 call *label23 *invalid :log*retval (m:*label407) (h:*label407)
  1064 label *label407
  1065 return :logBlock*retaddr
-    * end
  1066 label *label25
  1067 set :moveTo.1:x :buildBlockAt:x
  1068 set :moveTo.1:y :buildBlockAt:y
 
  1097 call *label24 *invalid :logBlock*retval (m:*label423) (h:*label423)
  1098 label *label423
  1099 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label408
  1100 return :buildBlockAt*retaddr
-    * end
  1101 label *label26
  1102 set :meetTarget:block :buildBlock:block
  1103 set :meetTarget:copper :buildBlock:copper
 
  1120 label *label426
  1121 set :buildBlock*retval :buildBlockAt*retval
  1122 return :buildBlock*retaddr
-    * end
  1123 label *label27
  1124 set :findUnits:count 0
  1125 ubind :findUnits:type
 
  1132 label *label428
  1133 set :findUnits*retval :findUnits:count
  1134 return :findUnits*retaddr
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
   745 jump *label280 notEqual *tmp274 1
   746 set :findFreeUnit:first_unit @unit
   747 label *label280
-    * label *label279
   748 ubind :findFreeUnit:unit_type
   749 jump *label275 notEqual :findFreeUnit:first_unit @unit
   750 label *label272

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-17 instructions):
 
    49 call *label26 *invalid :buildBlock*retval (m:*label39) (h:*label39)
    50 label *label39
    51 set *tmp85 :buildBlock*retval
-    * jump *label34 always
    52 label *label34
    53 set .press *tmp85
    54 op add :buildBlockFromCfg.1:y .coreY 4
 
    61 call *label26 *invalid :buildBlock*retval (m:*label45) (h:*label45)
    62 label *label45
    63 set *tmp89 :buildBlock*retval
-    * jump *label40 always
    64 label *label40
    65 set .battery *tmp89
    66 op add :buildBlockFromCfg.2:x .coreX -1
 
    69 setaddr :buildBlock*retaddr *label51 (h:*label51)
    70 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
    71 label *label51
-    * jump *label46 always
    72 label *label46
    73 op add :buildBlockFromCfg.3:y .coreY 3
    74 set :buildBlock:block @combustion-generator
 
    80 call *label26 *invalid :buildBlock*retval (m:*label57) (h:*label57)
    81 label *label57
    82 set *tmp97 :buildBlock*retval
-    * jump *label52 always
    83 label *label52
    84 set .generator *tmp97
    85 set .powerTarget 800
 
    93 call *label26 *invalid :buildBlock*retval (m:*label63) (h:*label63)
    94 label *label63
    95 set *tmp101 :buildBlock*retval
-    * jump *label58 always
    96 label *label58
    97 set .smelter *tmp101
    98 set :meetTarget:block @pneumatic-drill
 
   151 call *label26 *invalid :buildBlock*retval (m:*label77) (h:*label77)
   152 label *label77
   153 set *tmp120 :buildBlock*retval
-    * jump *label72 always
   154 label *label72
   155 set .unloader1 *tmp120
   156 op add :buildBlockFromCfg.6:x .coreX 1
 
   166 call *label26 *invalid :buildBlock*retval (m:*label83) (h:*label83)
   167 label *label83
   168 set *tmp124 :buildBlock*retval
-    * jump *label78 always
   169 label *label78
   170 set .controller *tmp124
   171 write processor1 *tmp124 ".display"
 
   190 setaddr :buildBlock*retaddr *label89 (h:*label89)
   191 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)
   192 label *label89
-    * jump *label84 always
   193 label *label84
   194 op add :buildBlockFromCfg.8:y .coreY 1
   195 set :buildBlock:block @unloader
 
   203 call *label26 *invalid :buildBlock*retval (m:*label95) (h:*label95)
   204 label *label95
   205 set *tmp132 :buildBlock*retval
-    * jump *label90 always
   206 label *label90
   207 write *tmp132 *tmp124 ".unloader2"
   208 op add :buildBlockFromCfg.9:x .coreX -3
 
   216 setaddr :buildBlock*retaddr *label101 (h:*label101)
   217 call *label26 *invalid :buildBlock*retval (m:*label101) (h:*label101)
   218 label *label101
-    * jump *label96 always
   219 label *label96
   220 op add :buildBlockFromCfg.10:x .coreX -4
   221 set :buildBlock:block @air-factory
 
   229 call *label26 *invalid :buildBlock*retval (m:*label107) (h:*label107)
   230 label *label107
   231 set *tmp140 :buildBlock*retval
-    * jump *label102 always
   232 label *label102
   233 write *tmp140 *tmp124 ".factory"
   234 write *tmp140 processor1 ".factory"
 
   298 setaddr :buildBlock*retaddr *label125 (h:*label125)
   299 call *label26 *invalid :buildBlock*retval (m:*label125) (h:*label125)
   300 label *label125
-    * jump *label120 always
   301 label *label120
   302 op add :buildBlockFromCfg.12:x .coreX 3.5
   303 op add :buildBlockFromCfg.12:y .coreY 0.5
 
   313 call *label26 *invalid :buildBlock*retval (m:*label131) (h:*label131)
   314 label *label131
   315 set *tmp167 :buildBlock*retval
-    * jump *label126 always
   316 label *label126
   317 write *tmp167 *tmp124 ".kiln"
   318 set :buildBlock:block @junction
 
   324 setaddr :buildBlock*retaddr *label137 (h:*label137)
   325 call *label26 *invalid :buildBlock*retval (m:*label137) (h:*label137)
   326 label *label137
-    * jump *label132 always
   327 label *label132
   328 op add :buildBlockFromCfg.14:x .coreX -3.5
   329 op add :buildBlockFromCfg.14:y .coreY 4.5
 
   337 setaddr :buildBlock*retaddr *label143 (h:*label143)
   338 call *label26 *invalid :buildBlock*retval (m:*label143) (h:*label143)
   339 label *label143
-    * jump *label138 always
   340 label *label138
   341 set :buildBlock:block @steam-generator
   342 set :buildBlock:x :buildBlockFromCfg.14:x
 
   350 call *label26 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   351 label *label149
   352 set *tmp179 :buildBlock*retval
-    * jump *label144 always
   353 label *label144
   354 write *tmp179 *tmp124 ".generator2"
   355 set .graphiteSurplus 200
 
   525 setaddr :buildBlock*retaddr *label193 (h:*label193)
   526 call *label26 *invalid :buildBlock*retval (m:*label193) (h:*label193)
   527 label *label193
-    * jump *label188 always
   528 label *label188
   529 write 0 processor1 ".totalTargets"
   530 write null processor1 ".nextBlock"

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    49 call *label26 *invalid :buildBlock*retval (m:*label39) (h:*label39)
    50 label *label39
    51 set *tmp85 :buildBlock*retval
-    * label *label34
    52 set .press *tmp85
    53 op add :buildBlockFromCfg.1:y .coreY 4
    54 set :buildBlock:block @battery
 
    60 call *label26 *invalid :buildBlock*retval (m:*label45) (h:*label45)
    61 label *label45
    62 set *tmp89 :buildBlock*retval
-    * label *label40
    63 set .battery *tmp89
    64 op add :buildBlockFromCfg.2:x .coreX -1
    65 set :buildBlock:x :buildBlockFromCfg.2:x
 
    67 setaddr :buildBlock*retaddr *label51 (h:*label51)
    68 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
    69 label *label51
-    * label *label46
    70 op add :buildBlockFromCfg.3:y .coreY 3
    71 set :buildBlock:block @combustion-generator
    72 set :buildBlock:x .coreX
 
    77 call *label26 *invalid :buildBlock*retval (m:*label57) (h:*label57)
    78 label *label57
    79 set *tmp97 :buildBlock*retval
-    * label *label52
    80 set .generator *tmp97
    81 set .powerTarget 800
    82 op add :buildBlockFromCfg.4:x .coreX 1.5
 
    89 call *label26 *invalid :buildBlock*retval (m:*label63) (h:*label63)
    90 label *label63
    91 set *tmp101 :buildBlock*retval
-    * label *label58
    92 set .smelter *tmp101
    93 set :meetTarget:block @pneumatic-drill
    94 set :meetTarget:copper 18
 
   146 call *label26 *invalid :buildBlock*retval (m:*label77) (h:*label77)
   147 label *label77
   148 set *tmp120 :buildBlock*retval
-    * label *label72
   149 set .unloader1 *tmp120
   150 op add :buildBlockFromCfg.6:x .coreX 1
   151 set :buildBlock:block @micro-processor
 
   160 call *label26 *invalid :buildBlock*retval (m:*label83) (h:*label83)
   161 label *label83
   162 set *tmp124 :buildBlock*retval
-    * label *label78
   163 set .controller *tmp124
   164 write processor1 *tmp124 ".display"
   165 write .core *tmp124 ".core"
 
   183 setaddr :buildBlock*retaddr *label89 (h:*label89)
   184 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)
   185 label *label89
-    * label *label84
   186 op add :buildBlockFromCfg.8:y .coreY 1
   187 set :buildBlock:block @unloader
   188 set :buildBlock:x :buildBlockFromCfg.7:x
 
   195 call *label26 *invalid :buildBlock*retval (m:*label95) (h:*label95)
   196 label *label95
   197 set *tmp132 :buildBlock*retval
-    * label *label90
   198 write *tmp132 *tmp124 ".unloader2"
   199 op add :buildBlockFromCfg.9:x .coreX -3
   200 set :buildBlock:block @overflow-gate
 
   207 setaddr :buildBlock*retaddr *label101 (h:*label101)
   208 call *label26 *invalid :buildBlock*retval (m:*label101) (h:*label101)
   209 label *label101
-    * label *label96
   210 op add :buildBlockFromCfg.10:x .coreX -4
   211 set :buildBlock:block @air-factory
   212 set :buildBlock:x :buildBlockFromCfg.10:x
 
   219 call *label26 *invalid :buildBlock*retval (m:*label107) (h:*label107)
   220 label *label107
   221 set *tmp140 :buildBlock*retval
-    * label *label102
   222 write *tmp140 *tmp124 ".factory"
   223 write *tmp140 processor1 ".factory"
   224 write 2 *tmp124 ".flareTarget"
 
   287 setaddr :buildBlock*retaddr *label125 (h:*label125)
   288 call *label26 *invalid :buildBlock*retval (m:*label125) (h:*label125)
   289 label *label125
-    * label *label120
   290 op add :buildBlockFromCfg.12:x .coreX 3.5
   291 op add :buildBlockFromCfg.12:y .coreY 0.5
   292 set :buildBlock:block @kiln
 
   301 call *label26 *invalid :buildBlock*retval (m:*label131) (h:*label131)
   302 label *label131
   303 set *tmp167 :buildBlock*retval
-    * label *label126
   304 write *tmp167 *tmp124 ".kiln"
   305 set :buildBlock:block @junction
   306 set :buildBlock:x :buildBlockFromCfg.11:x
 
   311 setaddr :buildBlock*retaddr *label137 (h:*label137)
   312 call *label26 *invalid :buildBlock*retval (m:*label137) (h:*label137)
   313 label *label137
-    * label *label132
   314 op add :buildBlockFromCfg.14:x .coreX -3.5
   315 op add :buildBlockFromCfg.14:y .coreY 4.5
   316 set :buildBlock:block @water-extractor
 
   323 setaddr :buildBlock*retaddr *label143 (h:*label143)
   324 call *label26 *invalid :buildBlock*retval (m:*label143) (h:*label143)
   325 label *label143
-    * label *label138
   326 set :buildBlock:block @steam-generator
   327 set :buildBlock:x :buildBlockFromCfg.14:x
   328 set :buildBlock:y :buildBlockFromCfg:y
 
   335 call *label26 *invalid :buildBlock*retval (m:*label149) (h:*label149)
   336 label *label149
   337 set *tmp179 :buildBlock*retval
-    * label *label144
   338 write *tmp179 *tmp124 ".generator2"
   339 set .graphiteSurplus 200
   340 set .siliconSurplus 1000
 
   509 setaddr :buildBlock*retaddr *label193 (h:*label193)
   510 call *label26 *invalid :buildBlock*retval (m:*label193) (h:*label193)
   511 label *label193
-    * label *label188
   512 write 0 processor1 ".totalTargets"
   513 write null processor1 ".nextBlock"
   514 label *label194

Final code before resolving virtual instructions:

    0:  jump *label465 always 0 0
    1:  draw triangle bank1 processor1 processor2 processor3 processor4 .ERROR
    2:  draw triangle .battery .builder .controller .core .coreX .coreY
    3:  draw triangle .display .generator .graphiteSurplus .metaglassSurplus .powerTarget .press
    4:  draw triangle .siliconSurplus .smelter .targetCopper .targetGraphite .targetLead .targetMetaglass
    5:  draw triangle .targetSilicon .targetTitanium .titaniumDrill .unloader1 :flares :monos
    6:  draw triangle :polys :searchThorium :buildBlock:block :buildBlock:config :buildBlock:copper :buildBlock:graphite
    7:  draw triangle :buildBlock:lead :buildBlock:metaglass :buildBlock:rotation :buildBlock:silicon :buildBlock:titanium :buildBlock:x
    8:  draw triangle :buildBlock:y :buildBlockAt:block :buildBlockAt:building :buildBlockAt:config :buildBlockAt:rotation :buildBlockAt:skipError
    9:  draw triangle :buildBlockAt:type :buildBlockAt:x :buildBlockAt:y :buildBlockFromCfg.10:x :buildBlockFromCfg.14:x :buildBlockFromCfg:x
   10:  draw triangle :buildBlockFromCfg.9:x :buildBlockFromCfg.4:x :buildBlockFromCfg.12:x :buildBlockFromCfg.7:x :buildBlockFromCfg.11:x :buildBlockFromCfg.6:x
   11:  draw triangle :buildBlockFromCfg.2:x :buildBlockFromCfg.14:y :buildBlockFromCfg.5:y :buildBlockFromCfg.1:y :buildBlockFromCfg:y :buildBlockFromCfg.8:y
   12:  draw triangle :buildBlockFromCfg.12:y :buildBlockFromCfg.3:y :buildBlockFromCfg.7:y :buildThoriumDrill:result :buildTitaniumDrill:dx :buildTitaniumDrill:dy
   13:  draw triangle :buildTitaniumDrill:result :depositItems:block :depositItems:cap :depositItems:item :fetchBlock:block :fetchBlock:item
   14:  draw triangle :fetchBlock:unitItem :findFreeUnit:first_unit :findFreeUnit:initial_flag :findFreeUnit:unit_type :findUnits:count :findUnits:firstUnit
   15:  draw triangle :findUnits:type :locateOre:ore :locateOre:x :locateOre:y :log:encodedId :logBlock:block
   16:  draw triangle :meetTarget:block :meetTarget:copper :meetTarget:count :meetTarget:graphite :meetTarget:lead :meetTarget:metaglass
   17:  draw triangle :meetTarget:silicon :meetTarget:titanium :mineOre:amount :mineOre:block :mineOre:item :mineOre.1:ore
   18:  draw triangle :mineOre:ore :mineOre:stop :mineOre:x :mineOre:y :moveTo:radius :moveTo.1:x
   19:  draw triangle :moveTo:x :moveTo.1:y :moveTo:y :moveToBlock:block :moveToBlock:radius :moveToEmpty:x
   20:  draw triangle :moveToEmpty:y :supplyBase0:coal.1 :supplyBase0:coal :supplyBase0:sand.1 :supplyBase0:sand :supplyBase0:supplied
   21:  draw triangle :supplyBlock.3:blockCapacity :supplyBlock:blockCapacity :supplyBlock.1:blockCapacity :supplyBlock.2:blockCapacity :supplyBlock.1:missing :supplyBlock:missing
   22:  draw triangle :supplyBlock.2:missing :supplyBlock.3:missing :transportStatus.2:target 0 0 0
        label *label465
   23:  set .ERROR ""                                                Actions.mnd: volatile var ERROR = "";
   24:  set .press null                                              CoreBuilder.mnd: var
   25:  set .generator null                                          ...
   26:  set .battery null                                            ...
   27:  set .smelter null                                            ...
   28:  set .titaniumDrill null                                      ...
   29:  set .unloader1 null                                          ...
   30:  set .graphiteSurplus 20                                      CoreBuilder.mnd: var
   31:  set .siliconSurplus 20                                       ...
   32:  set .metaglassSurplus 20                                     ...
   33:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label28                                               CoreBuilder.mnd: do
   34:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   35:  set .builder @unit                                           ...
   36:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   37:  jump *label28 equal .core null                               CoreBuilder.mnd: do
   38:  set .display processor1                                      CoreBuilder.mnd: display = processor1;
   39:  set :findUnits:type @mono                                    CoreBuilder.mnd: var monos = findUnits(@mono, out display.monos);
   40:  setaddr :findUnits*retaddr *label31                          ...
   41:  call *label27 *invalid :findUnits*retval                     ...
        label *label31                                               ...
   42:  write :findUnits:count processor1 ".monos"                   ...
   43:  set :monos :findUnits*retval                                 ...
   44:  set :findUnits:type @flare                                   CoreBuilder.mnd: var flares = findUnits(@flare, out display.flares);
   45:  setaddr :findUnits*retaddr *label32                          ...
   46:  call *label27 *invalid :findUnits*retval                     ...
        label *label32                                               ...
   47:  write :findUnits:count processor1 ".flares"                  ...
   48:  set :flares :findUnits*retval                                ...
   49:  set :findUnits:type @poly                                    CoreBuilder.mnd: var polys = findUnits(@poly, out display.polys);
   50:  setaddr :findUnits*retaddr *label33                          ...
   51:  call *label27 *invalid :findUnits*retval                     ...
        label *label33                                               ...
   52:  write :findUnits:count processor1 ".polys"                   ...
   53:  set :polys :findUnits*retval                                 ...
   54:  op add :buildBlockFromCfg:x .coreX -1.5                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   55:  op add :buildBlockFromCfg:y .coreY 2.5                       ...
   56:  set :buildBlock:block @graphite-press                        ...
   57:  set :buildBlock:x :buildBlockFromCfg:x                       ...
   58:  set :buildBlock:y :buildBlockFromCfg:y                       ...
   59:  set :buildBlock:copper 75                                    ...
   60:  set :buildBlock:lead 30                                      ...
   61:  set :buildBlock:graphite 0                                   ...
   62:  set :buildBlock:silicon 0                                    ...
   63:  set :buildBlock:titanium 0                                   ...
   64:  set :buildBlock:metaglass 0                                  ...
   65:  set :buildBlock:rotation 0                                   ...
   66:  set :buildBlock:config null                                  ...
   67:  setaddr :buildBlock*retaddr *label39                         ...
   68:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label39                                               ...
   69:  set *tmp85 :buildBlock*retval                                ...
   70:  set .press *tmp85                                            CoreBuilder.mnd: press = buildBlockFromCfg(ref PRESS);
   71:  op add :buildBlockFromCfg.1:y .coreY 4                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   72:  set :buildBlock:block @battery                               ...
   73:  set :buildBlock:x .coreX                                     ...
   74:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   75:  set :buildBlock:copper 5                                     ...
   76:  set :buildBlock:lead 20                                      ...
   77:  setaddr :buildBlock*retaddr *label45                         ...
   78:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label45                                               ...
   79:  set *tmp89 :buildBlock*retval                                ...
   80:  set .battery *tmp89                                          CoreBuilder.mnd: battery = buildBlockFromCfg(ref BATTERY1);
   81:  op add :buildBlockFromCfg.2:x .coreX -1                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   82:  set :buildBlock:x :buildBlockFromCfg.2:x                     ...
   83:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   84:  setaddr :buildBlock*retaddr *label51                         ...
   85:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label51                                               ...
   86:  op add :buildBlockFromCfg.3:y .coreY 3                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   87:  set :buildBlock:block @combustion-generator                  ...
   88:  set :buildBlock:x .coreX                                     ...
   89:  set :buildBlock:y :buildBlockFromCfg.3:y                     ...
   90:  set :buildBlock:copper 25                                    ...
   91:  set :buildBlock:lead 15                                      ...
   92:  setaddr :buildBlock*retaddr *label57                         ...
   93:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label57                                               ...
   94:  set *tmp97 :buildBlock*retval                                ...
   95:  set .generator *tmp97                                        CoreBuilder.mnd: generator = buildBlockFromCfg(ref GENERATOR);
   96:  set .powerTarget 800                                         CoreBuilder.mnd: powerTarget = 800;
   97:  op add :buildBlockFromCfg.4:x .coreX 1.5                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   98:  set :buildBlock:block @silicon-smelter                       ...
   99:  set :buildBlock:x :buildBlockFromCfg.4:x                     ...
  100:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  101:  set :buildBlock:copper 30                                    ...
  102:  set :buildBlock:lead 25                                      ...
  103:  setaddr :buildBlock*retaddr *label63                         ...
  104:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label63                                               ...
  105:  set *tmp101 :buildBlock*retval                               ...
  106:  set .smelter *tmp101                                         CoreBuilder.mnd: smelter = buildBlockFromCfg(ref SMELTER);
  107:  set :meetTarget:block @pneumatic-drill                       CoreBuilder.mnd: meetTarget(
  108:  set :meetTarget:copper 18                                    ...
  109:  set :meetTarget:lead 0                                       ...
  110:  set :meetTarget:graphite 10                                  ...
  111:  set :meetTarget:silicon 0                                    ...
  112:  set :meetTarget:titanium 0                                   ...
  113:  set :meetTarget:metaglass 0                                  ...
  114:  setaddr :meetTarget*retaddr *label66                         ...
  115:  call *label22 *invalid :meetTarget*retval                    ...
        label *label66                                               ...
  116:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
  117:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, false, 4, out dx, out dy);
  118:  write .coreY processor4 ":findDrillLocation:y"               ...
  119:  write @unit processor4 ":findDrillLocation:unit"             ...
  120:  write @titanium processor4 ":findDrillLocation:item"         ...
  121:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  122:  write false processor4 ":findDrillLocation:large"            ...
  123:  write 4 processor4 ":findDrillLocation:limit"                ...
  124:  write false processor4 ":findDrillLocation*finished"         ...
  125:  write 1 processor4 "@counter"                                ...
        label *label67                                               ...
  126:  wait 1e-15                                                   ...
  127:  read *tmp116 processor4 ":findDrillLocation*finished"        ...
  128:  jump *label67 equal *tmp116 false                            ...
  129:  read :buildTitaniumDrill:dx processor4 ":findDrillLocation:d ...
  130:  read :buildTitaniumDrill:dy processor4 ":findDrillLocation:d ...
  131:  read :buildTitaniumDrill:result processor4 ":findDrillLocati ...
  132:  jump *label68 notEqual :buildTitaniumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  133:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
  134:  stop                                                         Actions.mnd: stopProcessor();
        label *label68                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  135:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
  136:  set :buildBlockAt:block @pneumatic-drill                     CoreBuilder.mnd: return buildBlockAt(@pneumatic-drill, dx, dy, null, 0, false);
  137:  set :buildBlockAt:x :buildTitaniumDrill:dx                   ...
  138:  set :buildBlockAt:y :buildTitaniumDrill:dy                   ...
  139:  set :buildBlockAt:rotation null                              ...
  140:  set :buildBlockAt:config 0                                   ...
  141:  set :buildBlockAt:skipError false                            ...
  142:  setaddr :buildBlockAt*retaddr *label71                       ...
  143:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label71                                               ...
  144:  set *tmp105 :buildBlockAt*retval                             ...
  145:  set .titaniumDrill :buildBlockAt*retval                      CoreBuilder.mnd: titaniumDrill = buildTitaniumDrill(ref PNEUMATIC_DRILL);
  146:  write :buildBlockAt*retval processor1 ".titaniumDrill"       CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
  147:  op add :buildBlockFromCfg.5:y .coreY 2                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  148:  set :buildBlock:block @unloader                              ...
  149:  set :buildBlock:x .coreX                                     ...
  150:  set :buildBlock:y :buildBlockFromCfg.5:y                     ...
  151:  set :buildBlock:copper 0                                     ...
  152:  set :buildBlock:lead 0                                       ...
  153:  set :buildBlock:silicon 30                                   ...
  154:  set :buildBlock:titanium 25                                  ...
  155:  setaddr :buildBlock*retaddr *label77                         ...
  156:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label77                                               ...
  157:  set *tmp120 :buildBlock*retval                               ...
  158:  set .unloader1 *tmp120                                       CoreBuilder.mnd: unloader1 = buildBlockFromCfg(ref UNLOADER1);
  159:  op add :buildBlockFromCfg.6:x .coreX 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  160:  set :buildBlock:block @micro-processor                       ...
  161:  set :buildBlock:x :buildBlockFromCfg.6:x                     ...
  162:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
  163:  set :buildBlock:copper 90                                    ...
  164:  set :buildBlock:lead 50                                      ...
  165:  set :buildBlock:silicon 50                                   ...
  166:  set :buildBlock:titanium 0                                   ...
  167:  setaddr :buildBlock*retaddr *label83                         ...
  168:  set :buildBlock:config processor2                            CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  169:  call *label26 *invalid :buildBlock*retval                    ...
        label *label83                                               ...
  170:  set *tmp124 :buildBlock*retval                               ...
  171:  set .controller *tmp124                                      CoreBuilder.mnd: controller = buildBlockFromCfg(ref PROCESSOR);
  172:  write processor1 *tmp124 ".display"                          CoreBuilder.mnd: controller.display = display;
  173:  write .core *tmp124 ".core"                                  CoreBuilder.mnd: controller.core = core;
  174:  write bank1 *tmp124 ".bank"                                  CoreBuilder.mnd: controller.bank = bank1;
  175:  write *tmp89 *tmp124 ".battery"                              CoreBuilder.mnd: controller.battery = battery;
  176:  write *tmp97 *tmp124 ".generator"                            CoreBuilder.mnd: controller.generator = generator;
  177:  write *tmp101 *tmp124 ".smelter"                             CoreBuilder.mnd: controller.smelter = smelter;
  178:  write *tmp85 *tmp124 ".press"                                CoreBuilder.mnd: controller.press = press;
  179:  write :monos *tmp124 ".monos"                                CoreBuilder.mnd: controller.monos = monos;
  180:  write :flares *tmp124 ".flares"                              CoreBuilder.mnd: controller.flares = flares;
  181:  write :polys *tmp124 ".polys"                                CoreBuilder.mnd: controller.polys = polys;
  182:  op add :buildBlockFromCfg.7:x .coreX -2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  183:  op add :buildBlockFromCfg.7:y .coreY -1                      ...
  184:  set :buildBlock:block @power-node                            ...
  185:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  186:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  187:  set :buildBlock:copper 2                                     ...
  188:  set :buildBlock:lead 6                                       ...
  189:  set :buildBlock:silicon 0                                    ...
  190:  set :buildBlock:config null                                  ...
  191:  setaddr :buildBlock*retaddr *label89                         ...
  192:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label89                                               ...
  193:  op add :buildBlockFromCfg.8:y .coreY 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  194:  set :buildBlock:block @unloader                              ...
  195:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  196:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  197:  set :buildBlock:copper 0                                     ...
  198:  set :buildBlock:lead 0                                       ...
  199:  set :buildBlock:silicon 30                                   ...
  200:  set :buildBlock:titanium 25                                  ...
  201:  setaddr :buildBlock*retaddr *label95                         ...
  202:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label95                                               ...
  203:  set *tmp132 :buildBlock*retval                               ...
  204:  write *tmp132 *tmp124 ".unloader2"                           CoreBuilder.mnd: controller.unloader2 = unloader2;
  205:  op add :buildBlockFromCfg.9:x .coreX -3                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  206:  set :buildBlock:block @overflow-gate                         ...
  207:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  208:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  209:  set :buildBlock:copper 4                                     ...
  210:  set :buildBlock:lead 2                                       ...
  211:  set :buildBlock:silicon 0                                    ...
  212:  set :buildBlock:titanium 0                                   ...
  213:  setaddr :buildBlock*retaddr *label101                        ...
  214:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label101                                              ...
  215:  op add :buildBlockFromCfg.10:x .coreX -4                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  216:  set :buildBlock:block @air-factory                           ...
  217:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  218:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  219:  set :buildBlock:copper 60                                    ...
  220:  set :buildBlock:lead 70                                      ...
  221:  set :buildBlock:rotation 3                                   ...
  222:  set :buildBlock:config @mono                                 ...
  223:  setaddr :buildBlock*retaddr *label107                        ...
  224:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label107                                              ...
  225:  set *tmp140 :buildBlock*retval                               ...
  226:  write *tmp140 *tmp124 ".factory"                             CoreBuilder.mnd: controller.factory = factory;
  227:  write *tmp140 processor1 ".factory"                          CoreBuilder.mnd: display.factory = factory;
  228:  write 2 *tmp124 ".flareTarget"                               CoreBuilder.mnd: controller.flareTarget = 2;
  229:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  230:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  231:  write 0 *tmp124 ".leadReserve"                               CoreBuilder.mnd: controller.leadReserve = 0;
  232:  write 0 *tmp124 ".siliconReserve"                            CoreBuilder.mnd: controller.siliconReserve = 0;
  233:  write @flare *tmp124 ".unitToProduce"                        CoreBuilder.mnd: controller.unitToProduce = unit;
  234:  write 85 *tmp124 ".pressTarget"                              CoreBuilder.mnd: controller.pressTarget = 85;
  235:  write 150 *tmp124 ".smelterTarget"                           CoreBuilder.mnd: controller.smelterTarget = 150;
  236:  write 30 *tmp124 ".kilnTarget"                               CoreBuilder.mnd: controller.kilnTarget = 30;
  237:  set :searchThorium true                                      CoreBuilder.mnd: var searchThorium = true;
        label *label109                                              CoreBuilder.mnd: do
  238:  read *tmp35 *tmp124 ".flares"                                CoreBuilder.mnd: if searchThorium and controller.flares > 0 then
  239:  op greaterThan *tmp145 *tmp35 0                              ...
  240:  op land *tmp146 :searchThorium *tmp145                       ...
  241:  jump *label112 equal *tmp146 false                           ...
  242:  set :searchThorium false                                     CoreBuilder.mnd: searchThorium = false;
  243:  set :findFreeUnit:unit_type @flare                           CoreBuilder.mnd: findFreeUnit(@flare, 0);
  244:  set :findFreeUnit:initial_flag 0                             ...
  245:  setaddr :findFreeUnit*retaddr *label114                      ...
  246:  call *label14 *invalid :findFreeUnit*retval                  ...
        label *label114                                              ...
  247:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: async(oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7));
  248:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  249:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  250:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  251:  write false processor4 ":layoutThoriumDrill*finished"        ...
  252:  write 2 processor4 "@counter"                                ...
  253:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  254:  write .core processor3 ":start:aCore"                        CoreBuilder.mnd: flareController.start(core, titaniumDrill);
  255:  write *tmp105 processor3 ":start:aDrill"                     ...
  256:  write false processor3 ":start*finished"                     ...
  257:  write 2 processor3 "@counter"                                ...
        label *label115                                              ...
  258:  wait 1e-15                                                   ...
  259:  read *tmp155 processor3 ":start*finished"                    ...
  260:  jump *label115 equal *tmp155 false                           ...
        label *label112                                              CoreBuilder.mnd: if searchThorium and controller.flares > 0 then
  261:  setaddr :supplyBase1*retaddr *label116                       CoreBuilder.mnd: supplyBase1();
  262:  call *label19 *invalid :supplyBase1*retval                   ...
        label *label116                                              ...
  263:  sensor *tmp156 *tmp89 @totalPower                            CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  264:  jump *label111 lessThan *tmp156 300                          ...
  265:  read *tmp34 *tmp124 ".monos"                                 CoreBuilder.mnd: while controller.monos < 1;
  266:  jump *label109 lessThan *tmp34 1                             CoreBuilder.mnd: do
        label *label111                                              ...
  267:  write .core processor3 ":start:aCore"                        CoreBuilder.mnd: flareController.start(core, titaniumDrill);
  268:  write *tmp105 processor3 ":start:aDrill"                     ...
  269:  write false processor3 ":start*finished"                     ...
  270:  write 2 processor3 "@counter"                                ...
        label *label119                                              ...
  271:  wait 1e-15                                                   ...
  272:  read *tmp162 processor3 ":start*finished"                    ...
  273:  jump *label119 equal *tmp162 false                           ...
  274:  op add :buildBlockFromCfg.11:x .coreX 2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  275:  set :buildBlock:block @unloader                              ...
  276:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  277:  set :buildBlock:y .coreY                                     ...
  278:  set :buildBlock:copper 0                                     ...
  279:  set :buildBlock:lead 0                                       ...
  280:  set :buildBlock:silicon 30                                   ...
  281:  set :buildBlock:titanium 25                                  ...
  282:  set :buildBlock:rotation 0                                   ...
  283:  set :buildBlock:config null                                  ...
  284:  setaddr :buildBlock*retaddr *label125                        ...
  285:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label125                                              ...
  286:  op add :buildBlockFromCfg.12:x .coreX 3.5                    CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  287:  op add :buildBlockFromCfg.12:y .coreY 0.5                    ...
  288:  set :buildBlock:block @kiln                                  ...
  289:  set :buildBlock:x :buildBlockFromCfg.12:x                    ...
  290:  set :buildBlock:y :buildBlockFromCfg.12:y                    ...
  291:  set :buildBlock:copper 60                                    ...
  292:  set :buildBlock:lead 30                                      ...
  293:  set :buildBlock:graphite 30                                  ...
  294:  set :buildBlock:silicon 0                                    ...
  295:  set :buildBlock:titanium 0                                   ...
  296:  setaddr :buildBlock*retaddr *label131                        ...
  297:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label131                                              ...
  298:  set *tmp167 :buildBlock*retval                               ...
  299:  write *tmp167 *tmp124 ".kiln"                                CoreBuilder.mnd: controller.kiln = kiln;
  300:  set :buildBlock:block @junction                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  301:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  302:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  303:  set :buildBlock:copper 3                                     ...
  304:  set :buildBlock:lead 0                                       ...
  305:  set :buildBlock:graphite 0                                   ...
  306:  setaddr :buildBlock*retaddr *label137                        ...
  307:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label137                                              ...
  308:  op add :buildBlockFromCfg.14:x .coreX -3.5                   CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  309:  op add :buildBlockFromCfg.14:y .coreY 4.5                    ...
  310:  set :buildBlock:block @water-extractor                       ...
  311:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  312:  set :buildBlock:y :buildBlockFromCfg.14:y                    ...
  313:  set :buildBlock:copper 30                                    ...
  314:  set :buildBlock:lead 30                                      ...
  315:  set :buildBlock:graphite 30                                  ...
  316:  set :buildBlock:metaglass 30                                 ...
  317:  setaddr :buildBlock*retaddr *label143                        ...
  318:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label143                                              ...
  319:  set :buildBlock:block @steam-generator                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  320:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  321:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  322:  set :buildBlock:copper 35                                    ...
  323:  set :buildBlock:lead 40                                      ...
  324:  set :buildBlock:graphite 25                                  ...
  325:  set :buildBlock:silicon 30                                   ...
  326:  set :buildBlock:metaglass 0                                  ...
  327:  setaddr :buildBlock*retaddr *label149                        ...
  328:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label149                                              ...
  329:  set *tmp179 :buildBlock*retval                               ...
  330:  write *tmp179 *tmp124 ".generator2"                          CoreBuilder.mnd: controller.generator2 = generator2;
  331:  set .graphiteSurplus 200                                     CoreBuilder.mnd: graphiteSurplus = 200;
  332:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  333:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  334:  jump *label150 equal :searchThorium false                    CoreBuilder.mnd: if searchThorium then
  335:  read *tmp35 *tmp124 ".flares"                                CoreBuilder.mnd: while controller.flares < 1 do
  336:  jump *label154 greaterThanEq *tmp35 1                        ...
        label *label464                                              ...
  337:  setaddr :supplyBase*retaddr *label155                        CoreBuilder.mnd: supplyBase();
  338:  call *label20 *invalid :supplyBase*retval                    ...
        label *label155                                              ...
  339:  read *tmp35 *tmp124 ".flares"                                CoreBuilder.mnd: while controller.flares < 1 do
  340:  jump *label464 lessThan *tmp35 1                             ...
        label *label154                                              ...
  341:  set :findFreeUnit:unit_type @flare                           CoreBuilder.mnd: findFreeUnit(@flare, 0);
  342:  set :findFreeUnit:initial_flag 0                             ...
  343:  setaddr :findFreeUnit*retaddr *label156                      ...
  344:  call *label14 *invalid :findFreeUnit*retval                  ...
        label *label156                                              ...
  345:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: async(oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7));
  346:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  347:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  348:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  349:  write false processor4 ":layoutThoriumDrill*finished"        ...
  350:  write 2 processor4 "@counter"                                ...
  351:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
        label *label157                                              CoreBuilder.mnd: do
  352:  setaddr :supplyBase*retaddr *label160                        CoreBuilder.mnd: supplyBase();
  353:  call *label20 *invalid :supplyBase*retval                    ...
        label *label160                                              ...
  354:  read *tmp190 processor4 ":layoutThoriumDrill*finished"       CoreBuilder.mnd: while !finished(layoutThoriumDrill);
  355:  jump *label157 equal *tmp190 false                           CoreBuilder.mnd: do
        label *label150                                              CoreBuilder.mnd: if searchThorium then
  356:  set :meetTarget:block @laser-drill                           CoreBuilder.mnd: meetTarget(
  357:  set :meetTarget:copper 35                                    ...
  358:  set :meetTarget:lead 0                                       ...
  359:  set :meetTarget:graphite 30                                  ...
  360:  set :meetTarget:silicon 30                                   ...
  361:  set :meetTarget:titanium 20                                  ...
  362:  set :meetTarget:metaglass 0                                  ...
  363:  setaddr :meetTarget*retaddr *label163                        ...
  364:  call *label22 *invalid :meetTarget*retval                    ...
        label *label163                                              ...
        label *label164                                              CoreBuilder.mnd: var result = await(layoutThoriumDrill);
  365:  wait 1e-15                                                   ...
  366:  read *tmp192 processor4 ":layoutThoriumDrill*finished"       ...
  367:  jump *label164 equal *tmp192 false                           ...
  368:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  369:  jump *label165 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  370:  set .ERROR "Cannot locate spot for thorium drill"            Actions.mnd: ERROR = error;
  371:  stop                                                         Actions.mnd: stopProcessor();
        label *label165                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  372:  set :buildBlockAt:block @laser-drill                         CoreBuilder.mnd: thoriumDrill = buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, false);
  373:  read :buildBlockAt:x processor4 ".drillX"                    ...
  374:  read :buildBlockAt:y processor4 ".drillY"                    ...
  375:  set :buildBlockAt:rotation null                              ...
  376:  set :buildBlockAt:config 0                                   ...
  377:  set :buildBlockAt:skipError false                            ...
  378:  setaddr :buildBlockAt*retaddr *label168                      ...
  379:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label168                                              ...
  380:  read *tmp64 processor4 ".water1X"                            CoreBuilder.mnd: if oreLocator.water1X < 0 then return; end;
  381:  jump *label161 lessThan *tmp64 0                             ...
  382:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  383:  set :meetTarget:copper 30                                    ...
  384:  set :meetTarget:lead 30                                      ...
  385:  set :meetTarget:graphite 30                                  ...
  386:  set :meetTarget:silicon 0                                    ...
  387:  set :meetTarget:titanium 0                                   ...
  388:  set :meetTarget:metaglass 30                                 ...
  389:  setaddr :meetTarget*retaddr *label172                        ...
  390:  call *label22 *invalid :meetTarget*retval                    ...
        label *label172                                              ...
  391:  set :buildBlockAt:block @water-extractor                     CoreBuilder.mnd: buildBlockAt(@water-extractor, oreLocator.water1X, oreLocator.water1Y, null, 0, false);
  392:  read *tmp64 processor4 ".water1X"                            ...
  393:  set :buildBlockAt:x *tmp64                                   ...
  394:  read :buildBlockAt:y processor4 ".water1Y"                   ...
  395:  set :buildBlockAt:rotation null                              ...
  396:  set :buildBlockAt:config 0                                   ...
  397:  set :buildBlockAt:skipError false                            ...
  398:  setaddr :buildBlockAt*retaddr *label173                      ...
  399:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label173                                              ...
  400:  read *tmp66 processor4 ".water2X"                            CoreBuilder.mnd: if oreLocator.water2X < 0 then return; end;
  401:  jump *label161 lessThan *tmp66 0                             ...
  402:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  403:  set :meetTarget:copper 30                                    ...
  404:  set :meetTarget:lead 30                                      ...
  405:  set :meetTarget:graphite 30                                  ...
  406:  set :meetTarget:silicon 0                                    ...
  407:  set :meetTarget:titanium 0                                   ...
  408:  set :meetTarget:metaglass 30                                 ...
  409:  setaddr :meetTarget*retaddr *label177                        ...
  410:  call *label22 *invalid :meetTarget*retval                    ...
        label *label177                                              ...
  411:  set :buildBlockAt:block @water-extractor                     CoreBuilder.mnd: buildBlockAt(@water-extractor, oreLocator.water2X, oreLocator.water2Y, null, 0, false);
  412:  read *tmp66 processor4 ".water2X"                            ...
  413:  set :buildBlockAt:x *tmp66                                   ...
  414:  read :buildBlockAt:y processor4 ".water2Y"                   ...
  415:  set :buildBlockAt:rotation null                              ...
  416:  set :buildBlockAt:config 0                                   ...
  417:  set :buildBlockAt:skipError false                            ...
  418:  setaddr :buildBlockAt*retaddr *label178                      ...
  419:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label178                                              ...
  420:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  421:  set :meetTarget:copper 30                                    ...
  422:  set :meetTarget:lead 30                                      ...
  423:  set :meetTarget:graphite 30                                  ...
  424:  set :meetTarget:silicon 0                                    ...
  425:  set :meetTarget:titanium 0                                   ...
  426:  set :meetTarget:metaglass 30                                 ...
  427:  setaddr :meetTarget*retaddr *label180                        ...
  428:  call *label22 *invalid :meetTarget*retval                    ...
        label *label180                                              ...
  429:  set :buildBlockAt:block @steam-generator                     CoreBuilder.mnd: thoriumGenerator = buildBlockAt(@steam-generator, oreLocator.generatorX, oreLocator.generatorY, null, 0, false);
  430:  read :buildBlockAt:x processor4 ".generatorX"                ...
  431:  read :buildBlockAt:y processor4 ".generatorY"                ...
  432:  set :buildBlockAt:rotation null                              ...
  433:  set :buildBlockAt:config 0                                   ...
  434:  set :buildBlockAt:skipError false                            ...
  435:  setaddr :buildBlockAt*retaddr *label181                      ...
  436:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label181                                              ...
  437:  set :meetTarget:block @power-node                            CoreBuilder.mnd: meetTarget(
  438:  set :meetTarget:copper 2                                     ...
  439:  set :meetTarget:lead 6                                       ...
  440:  set :meetTarget:graphite 0                                   ...
  441:  set :meetTarget:silicon 0                                    ...
  442:  set :meetTarget:titanium 0                                   ...
  443:  set :meetTarget:metaglass 0                                  ...
  444:  setaddr :meetTarget*retaddr *label183                        ...
  445:  call *label22 *invalid :meetTarget*retval                    ...
        label *label183                                              ...
  446:  set :buildBlockAt:block @power-node                          CoreBuilder.mnd: buildBlockAt(@power-node, oreLocator.nodeX, oreLocator.nodeY, null, 0, false);
  447:  read :buildBlockAt:x processor4 ".nodeX"                     ...
  448:  read :buildBlockAt:y processor4 ".nodeY"                     ...
  449:  set :buildBlockAt:rotation null                              ...
  450:  set :buildBlockAt:config 0                                   ...
  451:  set :buildBlockAt:skipError false                            ...
  452:  setaddr :buildBlockAt*retaddr *label184                      ...
  453:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label184                                              ...
  454:  set :meetTarget:block @solar-panel                           CoreBuilder.mnd: meetTarget(
  455:  set :meetTarget:copper 0                                     ...
  456:  set :meetTarget:lead 10                                      ...
  457:  set :meetTarget:graphite 0                                   ...
  458:  set :meetTarget:silicon 8                                    ...
  459:  set :meetTarget:titanium 0                                   ...
  460:  set :meetTarget:metaglass 0                                  ...
  461:  setaddr :meetTarget*retaddr *label186                        ...
  462:  call *label22 *invalid :meetTarget*retval                    ...
        label *label186                                              ...
  463:  set :buildBlockAt:block @solar-panel                         CoreBuilder.mnd: buildBlockAt(@solar-panel, oreLocator.panelX, oreLocator.panelY, null, 0, false);
  464:  read :buildBlockAt:x processor4 ".panelX"                    ...
  465:  read :buildBlockAt:y processor4 ".panelY"                    ...
  466:  set :buildBlockAt:rotation null                              ...
  467:  set :buildBlockAt:config 0                                   ...
  468:  set :buildBlockAt:skipError false                            ...
  469:  setaddr :buildBlockAt*retaddr *label187                      ...
  470:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label187                                              ...
        label *label161                                              CoreBuilder.mnd: buildThoriumDrill();
  471:  set :buildBlock:block @sorter                                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  472:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  473:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  474:  set :buildBlock:copper 2                                     ...
  475:  set :buildBlock:lead 2                                       ...
  476:  set :buildBlock:graphite 0                                   ...
  477:  set :buildBlock:silicon 0                                    ...
  478:  set :buildBlock:config @coal                                 ...
  479:  setaddr :buildBlock*retaddr *label193                        ...
  480:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label193                                              ...
  481:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  482:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
        label *label194                                              CoreBuilder.mnd: do
  483:  setaddr :supplyBase*retaddr *label197                        CoreBuilder.mnd: supplyBase();
  484:  call *label20 *invalid :supplyBase*retval                    ...
        label *label197                                              ...
  485:  read *tmp35 *tmp124 ".flares"                                CoreBuilder.mnd: while controller.flares + controller.monos < 16;
  486:  read *tmp34 *tmp124 ".monos"                                 ...
  487:  op add *tmp210 *tmp35 *tmp34                                 ...
  488:  jump *label194 lessThan *tmp210 16                           CoreBuilder.mnd: do
        label *label198                                              CoreBuilder.mnd: while true do
  489:  setaddr :supplyBase*retaddr *label201                        CoreBuilder.mnd: supplyBase();
  490:  call *label20 *invalid :supplyBase*retval                    ...
        label *label201                                              ...
  491:  jump *label198 always 0 0                                    CoreBuilder.mnd: while true do
        label *label4                                                Actions.mnd: void moveTo(x, y, radius)
  492:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  493:  op sub *tmp214 :moveTo:radius 0.5                            Actions.mnd: while !within(x, y, radius) do
  494:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp212 0 ...
  495:  jump *label208 notEqual *tmp212 false                        ...
        label *label458                                              ...
  496:  ucontrol approach :moveTo:x :moveTo:y *tmp214 0 0            Actions.mnd: approach(x, y, radius - 0.5);
  497:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp212 0 Actions.mnd: while !within(x, y, radius) do
  498:  jump *label458 equal *tmp212 false                           ...
        label *label208                                              ...
  499:  return :moveTo*retaddr                                       Actions.mnd: void moveTo(x, y, radius)
        label *label5                                                Actions.mnd: void moveTo(x, y)
  500:  set :moveTo:x :moveTo.1:x                                    Actions.mnd: moveTo(x, y, RADIUS);
  501:  set :moveTo:y :moveTo.1:y                                    ...
  502:  set :moveTo:radius 6                                         ...
  503:  setaddr :moveTo*retaddr *label210                            ...
  504:  call *label4 *invalid :moveTo*retval                         ...
        label *label210                                              ...
  505:  return :moveTo.1*retaddr                                     Actions.mnd: void moveTo(x, y)
        label *label6                                                Actions.mnd: void moveToEmpty(x, y)
  506:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
        label *label213                                              Actions.mnd: do
  507:  sensor *tmp217 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  508:  jump *label216 equal *tmp217 null                            ...
  509:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label216                                              ...
  510:  ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5 0 0      Actions.mnd: approach(x, y, RADIUS - 0.5);
  511:  ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp220 0    Actions.mnd: while !within(x, y, RADIUS);
  512:  jump *label213 equal *tmp220 false                           Actions.mnd: do
  513:  return :moveToEmpty*retaddr                                  Actions.mnd: void moveToEmpty(x, y)
        label *label7                                                Actions.mnd: void moveToBlock(block, radius)
  514:  sensor *tmp222 :moveToBlock:block @x                         Actions.mnd: moveTo(block.@x, block.@y, radius);
  515:  sensor *tmp223 :moveToBlock:block @y                         ...
  516:  set :moveTo:x *tmp222                                        ...
  517:  set :moveTo:y *tmp223                                        ...
  518:  set :moveTo:radius :moveToBlock:radius                       ...
  519:  setaddr :moveTo*retaddr *label219                            ...
  520:  call *label4 *invalid :moveTo*retval                         ...
        label *label219                                              ...
  521:  return :moveToBlock*retaddr                                  Actions.mnd: void moveToBlock(block, radius)
        label *label8                                                Actions.mnd: void depositItems(block, item)
  522:  write "Depositing..." .display ".status3"                    CoreBuilder.mnd: display.status3 = text;
  523:  sensor *tmp224 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  524:  jump *label222 notEqual *tmp224 :depositItems:item           ...
  525:  set :moveToBlock:block :depositItems:block                   Actions.mnd: moveToBlock(block, RADIUS);
  526:  set :moveToBlock:radius 6                                    ...
  527:  setaddr :moveToBlock*retaddr *label224                       ...
  528:  call *label7 *invalid :moveToBlock*retval                    ...
        label *label224                                              ...
  529:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label225                                              Actions.mnd: do
  530:  ucontrol itemDrop :depositItems:block 5 0 0 0                Actions.mnd: itemDrop(block, capacity);
  531:  sensor *tmp228 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  532:  op mul *tmp229 *tmp228 :depositItems:cap                     ...
  533:  sensor *tmp230 :depositItems:block :depositItems:item        ...
  534:  jump *label225 greaterThan *tmp229 *tmp230                   Actions.mnd: do
  535:  jump *label223 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label222                                              ...
  536:  sensor *tmp232 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  537:  jump *label230 equal *tmp232 null                            ...
        label *label459                                              ...
  538:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  539:  sensor *tmp232 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  540:  jump *label459 notEqual *tmp232 null                         ...
        label *label230                                              ...
        label *label223                                              Actions.mnd: if @unit.@firstItem == item then
  541:  write 0 .display ".transportTarget"                          CoreBuilder.mnd: display.transportTarget = target;
  542:  write null .display ".transportItem"                         CoreBuilder.mnd: display.transportItem = item;
  543:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item)
        label *label9                                                Actions.mnd: void locateOre(ore, out x, out y)
  544:  ulocate ore core true :locateOre:ore :locateOre:x :locateOre Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  545:  jump *label233 notEqual *tmp234 false                        ...
  546:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  547:  stop                                                         Actions.mnd: stopProcessor();
        label *label233                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  548:  return :locateOre*retaddr                                    Actions.mnd: void locateOre(ore, out x, out y)
        label *label10                                               Actions.mnd: void mineOre(ore, amount, block)
  549:  op min :mineOre:amount :mineOre:amount 5                     Actions.mnd: amount = min(amount, capacity);
  550:  write :mineOre:amount .display ".transportTarget"            CoreBuilder.mnd: display.transportTarget = target;
  551:  write :mineOre:ore .display ".transportItem"                 CoreBuilder.mnd: display.transportItem = item;
  552:  set :locateOre:ore :mineOre:ore                              Actions.mnd: locateOre(ore, out x, out y);
  553:  setaddr :locateOre*retaddr *label238                         ...
  554:  call *label9 *invalid :locateOre*retval                      ...
        label *label238                                              ...
  555:  set :mineOre:x :locateOre:x                                  ...
  556:  set :mineOre:y :locateOre:y                                  ...
  557:  set :moveToEmpty:x :locateOre:x                              Actions.mnd: moveToEmpty(x, y);
  558:  set :moveToEmpty:y :locateOre:y                              ...
  559:  setaddr :moveToEmpty*retaddr *label239                       ...
  560:  call *label6 *invalid :moveToEmpty*retval                    ...
        label *label239                                              ...
  561:  sensor *tmp239 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  562:  jump *label240 equal *tmp239 :mineOre:ore                    ...
  563:  sensor *tmp242 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  564:  jump *label245 equal *tmp242 null                            ...
        label *label460                                              ...
  565:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  566:  sensor *tmp242 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  567:  jump *label460 notEqual *tmp242 null                         ...
        label *label245                                              ...
        label *label240                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  568:  write "Mining..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  569:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label247                                              Actions.mnd: do
  570:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  571:  op notEqual *tmp246 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  572:  op notEqual *tmp247 :mineOre:item :mineOre:ore               ...
  573:  op land *tmp248 *tmp246 *tmp247                              ...
  574:  jump *label249 notEqual *tmp248 false                        ...
  575:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    Actions.mnd: mine(x, y);
  576:  jump *label249 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  577:  sensor *tmp252 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  578:  jump *label247 lessThan *tmp252 :mineOre:amount              Actions.mnd: do
        label *label249                                              ...
  579:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  580:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore);
  581:  set :depositItems:item :mineOre:ore                          ...
  582:  setaddr :depositItems*retaddr *label254                      ...
  583:  call *label8 *invalid :depositItems*retval                   ...
        label *label254                                              ...
  584:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label11                                               Actions.mnd: void mineOre(ore)
  585:  write "Mining " .display ".status2"                          CoreBuilder.mnd: display.status2  = text;
  586:  write :mineOre.1:ore .display ".item2"                       CoreBuilder.mnd: display.item2  = item;
  587:  write "core" .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  588:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  589:  set :mineOre:amount 5                                        ...
  590:  set :mineOre:block .core                                     ...
  591:  setaddr :mineOre*retaddr *label257                           ...
  592:  call *label10 *invalid :mineOre*retval                       ...
        label *label257                                              ...
  593:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label12                                               Actions.mnd: void fetchBlock(block, item)
  594:  sensor :transportStatus.2:target :fetchBlock:block @itemCapa Actions.mnd: transportStatus(block.@itemCapacity, item);
  595:  write :transportStatus.2:target .display ".transportTarget"  CoreBuilder.mnd: display.transportTarget = target;
  596:  write :fetchBlock:item .display ".transportItem"             CoreBuilder.mnd: display.transportItem = item;
  597:  write "Fetching " .display ".status2"                        CoreBuilder.mnd: display.status2  = text;
  598:  write :fetchBlock:item .display ".item2"                     CoreBuilder.mnd: display.item2  = item;
  599:  write :fetchBlock:block .display ".block2"                   CoreBuilder.mnd: display.block2 = block;
  600:  sensor *tmp256 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  601:  sensor *tmp257 :fetchBlock:block @y                          ...
  602:  set :moveToEmpty:x *tmp256                                   ...
  603:  set :moveToEmpty:y *tmp257                                   ...
  604:  setaddr :moveToEmpty*retaddr *label261                       ...
  605:  call *label6 *invalid :moveToEmpty*retval                    ...
        label *label261                                              ...
  606:  sensor *tmp258 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  607:  jump *label265 equal *tmp258 null                            ...
        label *label461                                              ...
  608:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  609:  sensor *tmp258 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  610:  jump *label461 notEqual *tmp258 null                         ...
        label *label265                                              ...
        label *label266                                              Actions.mnd: do
  611:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 5 0 0   Actions.mnd: itemTake(block, item, capacity);
  612:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  613:  op notEqual *tmp261 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  614:  op notEqual *tmp262 :fetchBlock:unitItem :fetchBlock:item    ...
  615:  op land *tmp263 *tmp261 *tmp262                              ...
  616:  jump *label269 equal *tmp263 false                           ...
  617:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label269                                              Actions.mnd: if unitItem != null and unitItem != item then
  618:  sensor *tmp265 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  619:  op lessThan *tmp266 *tmp265 5                                ...
  620:  sensor *tmp267 :fetchBlock:block :fetchBlock:item            ...
  621:  op land *tmp268 *tmp266 *tmp267                              ...
  622:  jump *label266 notEqual *tmp268 false                        Actions.mnd: do
  623:  set :depositItems:block .core                                Actions.mnd: depositItems(core, item);
  624:  set :depositItems:item :fetchBlock:item                      ...
  625:  setaddr :depositItems*retaddr *label271                      ...
  626:  call *label8 *invalid :depositItems*retval                   ...
        label *label271                                              ...
  627:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label14                                               *units: def findFreeUnit(unit_type, initial_flag)
  628:  ubind :findFreeUnit:unit_type                                *units: ubind(unit_type);
  629:  jump *label272 equal @unit null                              *units: if @unit == null then return null; end;
  630:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label275                                              *units: do
  631:  sensor *tmp271 @unit @controlled                             *units: if @unit.@controlled == 0 then
  632:  jump *label278 notEqual *tmp271 0                            ...
  633:  ucontrol flag :findFreeUnit:initial_flag 0 0 0 0             *units: flag(initial_flag);        // Mark unit as active
  634:  return :findFreeUnit*retaddr                                 *units: return @unit;
        label *label278                                              *units: if @unit.@controlled == 0 then
  635:  sensor *tmp274 :findFreeUnit:first_unit @dead                *units: elsif first_unit.@dead == 1 then
  636:  jump *label280 notEqual *tmp274 1                            ...
  637:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label280                                              *units: elsif first_unit.@dead == 1 then
  638:  ubind :findFreeUnit:unit_type                                *units: ubind(unit_type);
  639:  jump *label275 notEqual :findFreeUnit:first_unit @unit       *units: do
        label *label272                                              *units: def findFreeUnit(unit_type, initial_flag)
  640:  return :findFreeUnit*retaddr                                 ...
        label *label18                                               CoreBuilder.mnd: void supplyBase0()
  641:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  642:  jump *label283 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  643:  sensor *tmp281 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  644:  jump *label285 greaterThanEq *tmp281 .targetGraphite         ...
  645:  sensor *tmp284 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  646:  jump *label287 greaterThanEq *tmp284 5                       ...
  647:  write "Goal 1: graphite requirement" .display ".status1"     CoreBuilder.mnd: display.status1 = text;
  648:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  649:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  650:  write .press .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  651:  sensor :supplyBlock:blockCapacity .press @itemCapacity       CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  652:  sensor *tmp288 .press @coal                                  CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  653:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  654:  jump *label292 lessThanEq :supplyBlock:missing 0             CoreBuilder.mnd: if missing > 0 then
  655:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  656:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  657:  set :mineOre:block .press                                    ...
  658:  setaddr :mineOre*retaddr *label294                           ...
  659:  call *label10 *invalid :mineOre*retval                       ...
        label *label294                                              ...
        label *label292                                              CoreBuilder.mnd: if missing > 0 then
  660:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label287                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label285                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  661:  sensor *tmp292 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  662:  jump *label295 greaterThanEq *tmp292 .targetSilicon          ...
  663:  sensor *tmp295 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  664:  jump *label297 greaterThanEq *tmp295 5                       ...
  665:  write "Goal 2: coal for silicon requirement" .display ".stat CoreBuilder.mnd: display.status1 = text;
  666:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  667:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  668:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  669:  sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  670:  sensor *tmp299 .smelter @coal                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  671:  op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity * ...
  672:  jump *label302 lessThanEq :supplyBlock.1:missing 0           CoreBuilder.mnd: if missing > 0 then
  673:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  674:  set :mineOre:amount :supplyBlock.1:blockCapacity             ...
  675:  set :mineOre:block .smelter                                  ...
  676:  setaddr :mineOre*retaddr *label304                           ...
  677:  call *label10 *invalid :mineOre*retval                       ...
        label *label304                                              ...
        label *label302                                              CoreBuilder.mnd: if missing > 0 then
  678:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  679:  jump *label298 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label297                                              ...
  680:  sensor *tmp303 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  681:  jump *label305 greaterThanEq *tmp303 5                       ...
  682:  write "Goal 3: sand for silicon requirement" .display ".stat CoreBuilder.mnd: display.status1 = text;
  683:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  684:  write @sand .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  685:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  686:  sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  687:  sensor *tmp307 .smelter @sand                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  688:  op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity * ...
  689:  jump *label310 lessThanEq :supplyBlock.2:missing 0           CoreBuilder.mnd: if missing > 0 then
  690:  set :mineOre:ore @sand                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  691:  set :mineOre:amount :supplyBlock.2:blockCapacity             ...
  692:  set :mineOre:block .smelter                                  ...
  693:  setaddr :mineOre*retaddr *label312                           ...
  694:  call *label10 *invalid :mineOre*retval                       ...
        label *label312                                              ...
        label *label310                                              CoreBuilder.mnd: if missing > 0 then
  695:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label305                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label298                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label295                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  696:  sensor *tmp311 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  697:  jump *label313 greaterThanEq *tmp311 .powerTarget            ...
  698:  sensor *tmp314 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  699:  jump *label315 greaterThanEq *tmp314 2                       ...
  700:  write "Goal 4: supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  701:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  702:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  703:  write .generator .display ".block2"                          CoreBuilder.mnd: display.block2 = block;
  704:  sensor :supplyBlock.3:blockCapacity .generator @itemCapacity CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  705:  sensor *tmp318 .generator @coal                              CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  706:  op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity * ...
  707:  jump *label320 lessThanEq :supplyBlock.3:missing 0           CoreBuilder.mnd: if missing > 0 then
  708:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  709:  set :mineOre:amount :supplyBlock.3:blockCapacity             ...
  710:  set :mineOre:block .generator                                ...
  711:  setaddr :mineOre*retaddr *label322                           ...
  712:  call *label10 *invalid :mineOre*retval                       ...
        label *label322                                              ...
        label *label320                                              CoreBuilder.mnd: if missing > 0 then
  713:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label315                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label313                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label283                                              CoreBuilder.mnd: if unloader1 == null then
  714:  set *tmp324 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  715:  sensor *tmp322 .core @titanium                               ...
  716:  jump *label324 greaterThanEq *tmp322 .targetTitanium         ...
  717:  sensor *tmp325 .core @titanium                               ...
  718:  op sub *tmp326 .targetTitanium *tmp325                       ...
  719:  op min *tmp324 7 *tmp326                                     ...
        label *label324                                              ...
  720:  sensor *tmp328 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  721:  jump *label325 greaterThanEq *tmp328 *tmp324                 ...
  722:  jump *label326 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  723:  sensor *tmp333 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  724:  op mul *tmp334 .unloader1 .powerTarget                       ...
  725:  jump *label329 greaterThanEq *tmp333 *tmp334                 ...
  726:  write "Goal 5: supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  727:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  728:  setaddr :mineOre.1*retaddr *label332                         ...
  729:  call *label11 *invalid :mineOre.1*retval                     ...
        label *label332                                              ...
  730:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label329                                              ...
  731:  sensor *tmp337 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  732:  jump *label333 greaterThanEq *tmp337 .targetSilicon          ...
  733:  write "Goal 6: silicon requirement" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  734:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  735:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  736:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  737:  jump *label337 greaterThanEq :supplyBase0:coal :supplyBase0: ...
  738:  set :mineOre.1:ore @coal                                     ...
        label *label337                                              ...
  739:  setaddr :mineOre.1*retaddr *label338                         CoreBuilder.mnd: mineOre(ore);
  740:  call *label11 *invalid :mineOre.1*retval                     ...
        label *label338                                              ...
  741:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label333                                              ...
  742:  sensor *tmp344 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  743:  jump *label339 greaterThanEq *tmp344 .targetCopper           ...
  744:  write "Goal 7: copper requirement" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  745:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  746:  setaddr :mineOre.1*retaddr *label342                         ...
  747:  call *label11 *invalid :mineOre.1*retval                     ...
        label *label342                                              ...
  748:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label339                                              ...
  749:  sensor *tmp347 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  750:  jump *label343 greaterThanEq *tmp347 .targetLead             ...
  751:  write "Goal 8: lead requirement" .display ".status1"         CoreBuilder.mnd: display.status1 = text;
  752:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  753:  setaddr :mineOre.1*retaddr *label346                         ...
  754:  call *label11 *invalid :mineOre.1*retval                     ...
        label *label346                                              ...
  755:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label343                                              ...
  756:  sensor *tmp350 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  757:  jump *label347 greaterThanEq *tmp350 .targetMetaglass        ...
  758:  write "Goal 9: metaglass requirement" .display ".status1"    CoreBuilder.mnd: display.status1 = text;
  759:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  760:  setaddr :mineOre.1*retaddr *label350                         ...
  761:  call *label11 *invalid :mineOre.1*retval                     ...
        label *label350                                              ...
  762:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label347                                              ...
  763:  write "Goal 10: supplying base" .display ".status1"          CoreBuilder.mnd: display.status1 = text;
  764:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  765:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  766:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  767:  jump *label353 greaterThan :supplyBase0:coal.1 :supplyBase0: ...
  768:  set :mineOre.1:ore @coal                                     ...
        label *label353                                              ...
  769:  setaddr :mineOre.1*retaddr *label354                         CoreBuilder.mnd: mineOre(ore);
  770:  call *label11 *invalid :mineOre.1*retval                     ...
        label *label354                                              ...
  771:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label325                                              ...
  772:  write "Goal 11: Fetching titanium" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  773:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  774:  set :fetchBlock:item @titanium                               ...
  775:  setaddr :fetchBlock*retaddr *label356                        ...
  776:  call *label12 *invalid :fetchBlock*retval                    ...
        label *label356                                              ...
        label *label326                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  777:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: void supplyBase0()
        label *label19                                               CoreBuilder.mnd: void supplyBase1()
  778:  sensor *tmp357 .core @sand                                   CoreBuilder.mnd: if core.@sand < core.@coal then
  779:  sensor *tmp358 .core @coal                                   ...
  780:  jump *label358 greaterThanEq *tmp357 *tmp358                 ...
  781:  sensor *tmp361 .core @sand                                   CoreBuilder.mnd: if core.@sand < core.@lead then
  782:  sensor *tmp362 .core @lead                                   ...
  783:  jump *label360 greaterThanEq *tmp361 *tmp362                 ...
  784:  write "Phase 1: mining sand" .display ".status1"             CoreBuilder.mnd: display.status1 = text;
  785:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  786:  setaddr :mineOre.1*retaddr *label363                         ...
  787:  call *label11 *invalid :mineOre.1*retval                     ...
        label *label363                                              ...
  788:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: if core.@sand < core.@lead then
        label *label360                                              ...
  789:  write "Phase 1: mining lead" .display ".status1"             CoreBuilder.mnd: display.status1 = text;
  790:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  791:  setaddr :mineOre.1*retaddr *label365                         ...
  792:  call *label11 *invalid :mineOre.1*retval                     ...
        label *label365                                              ...
  793:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: if core.@sand < core.@coal then
        label *label358                                              ...
  794:  sensor *tmp365 .core @coal                                   CoreBuilder.mnd: if core.@coal < core.@lead then
  795:  sensor *tmp366 .core @lead                                   ...
  796:  jump *label366 greaterThanEq *tmp365 *tmp366                 ...
  797:  write "Phase 1: mining coal" .display ".status1"             CoreBuilder.mnd: display.status1 = text;
  798:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  799:  setaddr :mineOre.1*retaddr *label369                         ...
  800:  call *label11 *invalid :mineOre.1*retval                     ...
        label *label369                                              ...
  801:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: if core.@coal < core.@lead then
        label *label366                                              ...
  802:  write "Phase 1: mining lead" .display ".status1"             CoreBuilder.mnd: display.status1 = text;
  803:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  804:  setaddr :mineOre.1*retaddr *label371                         ...
  805:  call *label11 *invalid :mineOre.1*retval                     ...
        label *label371                                              ...
  806:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: void supplyBase1()
        label *label20                                               CoreBuilder.mnd: void supplyBase()
  807:  read *tmp34 .controller ".monos"                             CoreBuilder.mnd: if controller.monos > 3 then
  808:  jump *label373 lessThanEq *tmp34 3                           ...
  809:  setaddr :supplyBase1*retaddr *label375                       CoreBuilder.mnd: supplyBase1();
  810:  call *label19 *invalid :supplyBase1*retval                   ...
        label *label375                                              ...
  811:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if controller.monos > 3 then
        label *label373                                              ...
  812:  setaddr :supplyBase0*retaddr *label376                       CoreBuilder.mnd: supplyBase0();
  813:  call *label18 *invalid :supplyBase0*retval                   ...
        label *label376                                              ...
  814:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label21                                               CoreBuilder.mnd: def targetMet()
  815:  sensor *tmp371 .core @copper                                 CoreBuilder.mnd: if core.@copper >= targetCopper then
  816:  jump *label378 lessThan *tmp371 .targetCopper                ...
  817:  sensor *tmp374 .core @lead                                   CoreBuilder.mnd: if core.@lead >= targetLead then
  818:  jump *label380 lessThan *tmp374 .targetLead                  ...
  819:  sensor *tmp377 .core @graphite                               CoreBuilder.mnd: if core.@graphite >= targetGraphite then
  820:  jump *label382 lessThan *tmp377 .targetGraphite              ...
  821:  sensor *tmp380 .core @silicon                                CoreBuilder.mnd: if core.@silicon >= targetSilicon then
  822:  jump *label384 lessThan *tmp380 .targetSilicon               ...
  823:  sensor *tmp383 .core @titanium                               CoreBuilder.mnd: if core.@titanium >= targetTitanium then
  824:  jump *label386 lessThan *tmp383 .targetTitanium              ...
  825:  sensor *tmp386 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
  826:  jump *label388 lessThan *tmp386 .targetMetaglass             ...
  827:  set :targetMet*retval true                                   CoreBuilder.mnd: return true;
  828:  return :targetMet*retaddr                                    ...
        label *label388                                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
        label *label386                                              CoreBuilder.mnd: if core.@titanium >= targetTitanium then
        label *label384                                              CoreBuilder.mnd: if core.@silicon >= targetSilicon then
        label *label382                                              CoreBuilder.mnd: if core.@graphite >= targetGraphite then
        label *label380                                              CoreBuilder.mnd: if core.@lead >= targetLead then
        label *label378                                              CoreBuilder.mnd: if core.@copper >= targetCopper then
  829:  set :targetMet*retval false                                  CoreBuilder.mnd: return false;
  830:  return :targetMet*retaddr                                    ...
        label *label22                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
  831:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass do count += sign(t); end;
  832:  op sign *tmp390 :meetTarget:lead 0                           ...
  833:  op add :meetTarget:count :meetTarget:count *tmp390           ...
  834:  op sign *tmp390 :meetTarget:graphite 0                       ...
  835:  op add :meetTarget:count :meetTarget:count *tmp390           ...
  836:  op sign *tmp390 :meetTarget:silicon 0                        ...
  837:  op add :meetTarget:count :meetTarget:count *tmp390           ...
  838:  op sign *tmp390 :meetTarget:titanium 0                       ...
  839:  op add :meetTarget:count :meetTarget:count *tmp390           ...
  840:  op sign *tmp390 :meetTarget:metaglass 0                      ...
  841:  op add :meetTarget:count :meetTarget:count *tmp390           ...
  842:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  843:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  844:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  845:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  846:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  847:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  848:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  849:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  850:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  851:  set .targetLead :meetTarget:lead                             CoreBuilder.mnd: targetLead = lead;
  852:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  853:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  854:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  855:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  856:  op add *tmp391 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  857:  write *tmp391 .controller ".pressTarget"                     ...
  858:  op add *tmp392 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  859:  write *tmp392 .controller ".smelterTarget"                   ...
  860:  op add *tmp393 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  861:  write *tmp393 .controller ".kilnTarget"                      ...
  862:  op sign *tmp394 :meetTarget:lead 0                           CoreBuilder.mnd: controller.leadReserve = lead + sign(lead) * 20;
  863:  op mul *tmp395 *tmp394 20                                    ...
  864:  op add *tmp396 :meetTarget:lead *tmp395                      ...
  865:  write *tmp396 .controller ".leadReserve"                     ...
  866:  op sign *tmp397 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  867:  op mul *tmp398 *tmp397 20                                    ...
  868:  op add *tmp399 :meetTarget:silicon *tmp398                   ...
  869:  write *tmp399 .controller ".siliconReserve"                  ...
  870:  setaddr :targetMet*retaddr *label403                         CoreBuilder.mnd: while !targetMet() do
  871:  call *label21 *invalid :targetMet*retval                     ...
        label *label403                                              ...
  872:  jump *label402 notEqual :targetMet*retval false              ...
        label *label462                                              ...
  873:  setaddr :supplyBase*retaddr *label404                        CoreBuilder.mnd: supplyBase();
  874:  call *label20 *invalid :supplyBase*retval                    ...
        label *label404                                              ...
  875:  setaddr :targetMet*retaddr *label463                         CoreBuilder.mnd: while !targetMet() do
  876:  call *label21 *invalid :targetMet*retval                     ...
        label *label463                                              ...
  877:  jump *label462 equal :targetMet*retval false                 ...
        label *label402                                              ...
  878:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
        label *label23                                               CoreBuilder.mnd: void log(encodedId)
  879:  read *tmp74 bank1 511                                        CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(@second) * 1000;
  880:  op sub *tmp401 *tmp74 1                                      ...
  881:  write *tmp401 bank1 511                                      ...
  882:  op floor *tmp404 @second 0                                   ...
  883:  op mul *tmp405 *tmp404 1000                                  ...
  884:  op add *tmp406 :log:encodedId *tmp405                        ...
  885:  write *tmp406 bank1 *tmp401                                  ...
  886:  return :log*retaddr                                          CoreBuilder.mnd: void log(encodedId)
        label *label24                                               CoreBuilder.mnd: void logBlock(block)
  887:  sensor :log:encodedId :logBlock:block @id                    CoreBuilder.mnd: log(block.@id);
  888:  setaddr :log*retaddr *label407                               ...
  889:  call *label23 *invalid :log*retval                           ...
        label *label407                                              ...
  890:  return :logBlock*retaddr                                     CoreBuilder.mnd: void logBlock(block)
        label *label25                                               CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
  891:  set :moveTo.1:x :buildBlockAt:x                              CoreBuilder.mnd: moveTo(x, y);
  892:  set :moveTo.1:y :buildBlockAt:y                              ...
  893:  setaddr :moveTo.1*retaddr *label409                          ...
  894:  call *label5 *invalid :moveTo.1*retval                       ...
        label *label409                                              ...
  895:  write "Building..." .display ".status3"                      CoreBuilder.mnd: display.status3 = text;
  896:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: var building = getBlock(x, y, out type);
  897:  jump *label411 equal :buildBlockAt:building null             CoreBuilder.mnd: if building != null then
  898:  jump *label413 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: if type == block then return building; end;
  899:  set :buildBlockAt*retval :buildBlockAt:building              ...
  900:  return :buildBlockAt*retaddr                                 ...
        label *label413                                              ...
  901:  jump *label415 equal :buildBlockAt:skipError false           CoreBuilder.mnd: if skipError then return null; end;
  902:  set :buildBlockAt*retval null                                ...
  903:  return :buildBlockAt*retaddr                                 ...
        label *label415                                              ...
  904:  set .ERROR "Cannot build at ("                               Actions.mnd: ERROR = error;
  905:  stop                                                         Actions.mnd: stopProcessor();
        label *label411                                              CoreBuilder.mnd: if building != null then
  906:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt CoreBuilder.mnd: build(x, y, block, rotation, config);
  907:  wait 0.25                                                    CoreBuilder.mnd: wait(0.25);
        label *label418                                              CoreBuilder.mnd: do
  908:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: building = getBlock(x, y, out type);
  909:  jump *label421 notEqual :buildBlockAt:building null          CoreBuilder.mnd: if building == null then return null; end;
  910:  set :buildBlockAt*retval null                                ...
  911:  return :buildBlockAt*retaddr                                 ...
        label *label421                                              ...
  912:  jump *label418 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: do
  913:  set :logBlock:block :buildBlockAt:block                      CoreBuilder.mnd: logBlock(block);
  914:  setaddr :logBlock*retaddr *label423                          ...
  915:  call *label24 *invalid :logBlock*retval                      ...
        label *label423                                              ...
  916:  set :buildBlockAt*retval :buildBlockAt:building              CoreBuilder.mnd: return building;
  917:  return :buildBlockAt*retaddr                                 CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
        label *label26                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
  918:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass);
  919:  set :meetTarget:copper :buildBlock:copper                    ...
  920:  set :meetTarget:lead :buildBlock:lead                        ...
  921:  set :meetTarget:graphite :buildBlock:graphite                ...
  922:  set :meetTarget:silicon :buildBlock:silicon                  ...
  923:  set :meetTarget:titanium :buildBlock:titanium                ...
  924:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  925:  setaddr :meetTarget*retaddr *label425                        ...
  926:  call *label22 *invalid :meetTarget*retval                    ...
        label *label425                                              ...
  927:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  928:  set :buildBlockAt:x :buildBlock:x                            ...
  929:  set :buildBlockAt:y :buildBlock:y                            ...
  930:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  931:  set :buildBlockAt:config :buildBlock:config                  ...
  932:  set :buildBlockAt:skipError false                            ...
  933:  setaddr :buildBlockAt*retaddr *label426                      ...
  934:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label426                                              ...
  935:  set :buildBlock*retval :buildBlockAt*retval                  ...
  936:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
        label *label27                                               CoreBuilder.mnd: def findUnits(type, out count)
  937:  set :findUnits:count 0                                       CoreBuilder.mnd: count = 0;
  938:  ubind :findUnits:type                                        CoreBuilder.mnd: var firstUnit = ubind(type);
  939:  set :findUnits:firstUnit @unit                               ...
  940:  jump *label428 equal :findUnits:firstUnit null               CoreBuilder.mnd: if firstUnit != null then
        label *label430                                              CoreBuilder.mnd: do
  941:  op add :findUnits:count :findUnits:count 1                   ...
  942:  ubind :findUnits:type                                        CoreBuilder.mnd: ubind(type);
  943:  jump *label430 notEqual @unit :findUnits:firstUnit           CoreBuilder.mnd: do
        label *label428                                              CoreBuilder.mnd: if firstUnit != null then
  944:  set :findUnits*retval :findUnits:count                       CoreBuilder.mnd: def findUnits(type, out count)
  945:  return :findUnits*retaddr                                    ...


Performance: parsed in 889 ms, compiled in 510 ms, optimized in 3,032 ms, run in 8 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (13 steps):
The program didn't generate any output.
Execution exception at instruction 34: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
