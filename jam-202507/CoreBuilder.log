  1368 instructions before optimizations.
    77 instructions eliminated by Temp Variables Elimination (2 iterations).
   101 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\Actions.mnd:29:14 Variable 'ERROR' is not used.
     1 instructions eliminated by Jump Normalization (5 iterations).
    54 instructions eliminated by Jump Optimization (5 iterations).
    35 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     1 instructions modified by Expression Optimization (3 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
   150 instructions eliminated by Data Flow Optimization (23 passes, 72 iterations).
     1 loops improved by Loop Hoisting.
     7 instructions added by Loop Optimization (3 iterations).
     7 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (31 iterations).
     1 loops unrolled by Loop Unrolling.
    45 instructions added by Function Inlining (31 iterations).
    47 function calls inlined by Function Inlining.
     3 instructions eliminated by Jump Straightening (5 iterations).
    12 instructions updated by JumpThreading.
    17 instructions eliminated by Unreachable Code Elimination (2 iterations).
   978 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
  ! Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  * Unroll iteration loop at CoreBuilder.mnd:239:5               size   -13, benefit     1147.5, efficiency   Infinity (-10 instructions)
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4351.1, efficiency   Infinity
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16251.6, efficiency   Infinity
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3653.0, efficiency   Infinity
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6494.1, efficiency    432.943
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3247.1, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6494.1, efficiency    144.314
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2630.1, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1187.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +181, benefit      297.5, efficiency      1.644
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:326:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:514:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:355:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2841.2, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5682.4, efficiency   Infinity
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3653.0, efficiency    521.851
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5682.4, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     3247.1, efficiency    541.178
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2630.1, efficiency    657.532
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2337.9, efficiency    292.236
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2045.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     2337.9, efficiency    101.647
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2968.8, efficiency    371.094
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2968.8, efficiency    129.076
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit     1187.5, efficiency    148.438
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit     1187.5, efficiency     51.630
    Inline function call at CoreBuilder.mnd:202:5                size    +0, benefit     2078.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:205:9                size   +13, benefit     1187.5, efficiency     91.346
  ! Inline function call at CoreBuilder.mnd:207:9                size   +31, benefit     1187.5, efficiency     38.306
  ! Inline function call at CoreBuilder.mnd:209:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:197:5                size    +0, benefit     1039.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:198:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:134:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:135:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:142:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:143:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:146:17               size    +0, benefit       64.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:147:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:154:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:155:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:165:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:166:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:168:17               size    +0, benefit       64.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:172:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:174:17               size    +0, benefit       32.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:175:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:177:17               size    +0, benefit       16.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:178:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:180:17               size    +0, benefit        8.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:181:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:183:17               size    +0, benefit        8.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:187:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:191:9                size    +0, benefit      519.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:192:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:269:9                size  +161, benefit     3187.5, efficiency     19.798
  ! Inline function call at CoreBuilder.mnd:284:5                size   +91, benefit      255.5, efficiency      2.808
  ! Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
  ! Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
  ! Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
  ! Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
  ! Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +91, benefit       14.0, efficiency      0.154
  ! Inline function call at CoreBuilder.mnd:393:5                size   +91, benefit       28.0, efficiency      0.308

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
  ! Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  * Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4351.1, efficiency   Infinity (-29 instructions)
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16251.6, efficiency   Infinity
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3653.0, efficiency   Infinity
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6494.1, efficiency    432.943
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3247.1, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6494.1, efficiency    144.314
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2630.1, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1187.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:326:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:514:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:355:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2841.2, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5682.4, efficiency   Infinity
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     3653.0, efficiency    521.851
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5682.4, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     3247.1, efficiency    541.178
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2630.1, efficiency    657.532
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     2337.9, efficiency    292.236
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2045.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     2337.9, efficiency    101.647
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2968.8, efficiency    371.094
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2968.8, efficiency    129.076
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit     1187.5, efficiency    148.438
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit     1187.5, efficiency     51.630
    Inline function call at CoreBuilder.mnd:202:5                size    +0, benefit     2078.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:205:9                size   +13, benefit     1187.5, efficiency     91.346
  ! Inline function call at CoreBuilder.mnd:207:9                size   +31, benefit     1187.5, efficiency     38.306
  ! Inline function call at CoreBuilder.mnd:209:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:197:5                size    +0, benefit     1039.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:198:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:134:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:135:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:142:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:143:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:146:17               size    +0, benefit       64.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:147:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:154:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:155:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:165:17               size    +0, benefit      129.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:166:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:168:17               size    +0, benefit       64.9, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:172:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:174:17               size    +0, benefit       32.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:175:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:177:17               size    +0, benefit       16.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:178:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:180:17               size    +0, benefit        8.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:181:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:183:17               size    +0, benefit        8.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:187:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:191:9                size    +0, benefit      519.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:192:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:269:9                size  +161, benefit     3187.5, efficiency     19.798
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
  ! Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
  ! Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
  ! Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
  ! Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 13):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
  ! Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
  * Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    16251.6, efficiency   Infinity (-11 instructions)
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3653.0, efficiency   Infinity
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     6494.1, efficiency    432.943
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3247.1, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     6494.1, efficiency    144.314
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2630.1, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1187.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:326:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +135, benefit       75.0, efficiency      0.556
  ! Inline function call at CoreBuilder.mnd:514:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:355:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +135, benefit       75.0, efficiency      0.556
  ! Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2841.2, efficiency   Infinity
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     5682.4, efficiency   Infinity
    Inline function call at Actions.mnd:68:5                     size    +7, benefit     3653.0, efficiency    521.851
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     5682.4, efficiency   Infinity
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     3247.1, efficiency    541.178
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2630.1, efficiency    657.532
    Inline function call at Actions.mnd:105:5                    size    +8, benefit     2337.9, efficiency    292.236
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     2045.7, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     2337.9, efficiency    101.647
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +8, benefit     2968.8, efficiency    371.094
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2968.8, efficiency    129.076
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +8, benefit     1187.5, efficiency    148.438
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit     1187.5, efficiency     51.630
    Inline function call at CoreBuilder.mnd:205:9                size   +13, benefit     1187.5, efficiency     91.346
  ! Inline function call at CoreBuilder.mnd:207:9                size   +31, benefit     1187.5, efficiency     38.306
  ! Inline function call at CoreBuilder.mnd:209:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:198:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:135:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:143:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:147:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:155:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:166:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:172:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:175:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:178:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:181:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:187:17               size    +9, benefit        8.1, efficiency      0.902
  ! Inline function call at CoreBuilder.mnd:192:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:269:9                size  +135, benefit     3187.5, efficiency     23.611
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
  ! Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
  ! Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
  ! Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
  ! Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 24):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
  ! Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
  * Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     3653.0, efficiency   Infinity (-7 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3247.1, efficiency   Infinity
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit     6494.1, efficiency    158.394
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2630.1, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2630.1, efficiency     77.357
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1187.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:326:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +135, benefit       75.0, efficiency      0.556
  ! Inline function call at CoreBuilder.mnd:514:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:355:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:68:5                     size    +5, benefit     3653.0, efficiency    730.591
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     3247.1, efficiency    541.178
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2630.1, efficiency    657.532
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
    Inline function call at Actions.mnd:124:5                    size   +21, benefit     2337.9, efficiency    111.328
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
  ! Inline function call at Actions.mnd:130:5                    size   +35, benefit     1669.9, efficiency     47.712
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
    Inline function call at Actions.mnd:147:5                    size   +21, benefit     2968.8, efficiency    141.369
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
  ! Inline function call at Actions.mnd:156:9                    size   +35, benefit      960.2, efficiency     27.434
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
    Inline function call at Actions.mnd:174:5                    size   +21, benefit     1187.5, efficiency     56.548
    Inline function call at CoreBuilder.mnd:205:9                size   +13, benefit     1187.5, efficiency     91.346
  ! Inline function call at CoreBuilder.mnd:207:9                size   +31, benefit     1187.5, efficiency     38.306
  ! Inline function call at CoreBuilder.mnd:209:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:198:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:135:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:143:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:147:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:155:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:166:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:172:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:175:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:178:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:181:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:187:17               size    +9, benefit        8.1, efficiency      0.902
  ! Inline function call at CoreBuilder.mnd:192:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:269:9                size  +135, benefit     3187.5, efficiency     23.611
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 31):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
  * Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     3247.1, efficiency   Infinity (-7 instructions)
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit     6494.1, efficiency    158.394
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2630.1, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2630.1, efficiency     77.357
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1187.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:326:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +135, benefit       75.0, efficiency      0.556
  ! Inline function call at CoreBuilder.mnd:514:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:355:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:77:9                     size    +7, benefit     3247.1, efficiency    463.867
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2630.1, efficiency    657.532
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
    Inline function call at Actions.mnd:124:5                    size   +21, benefit     2337.9, efficiency    111.328
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
  ! Inline function call at Actions.mnd:130:5                    size   +35, benefit     1669.9, efficiency     47.712
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
    Inline function call at Actions.mnd:147:5                    size   +21, benefit     2968.8, efficiency    141.369
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
  ! Inline function call at Actions.mnd:156:9                    size   +35, benefit      960.2, efficiency     27.434
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
    Inline function call at Actions.mnd:174:5                    size   +21, benefit     1187.5, efficiency     56.548
    Inline function call at CoreBuilder.mnd:205:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at CoreBuilder.mnd:207:9                size   +31, benefit     1187.5, efficiency     38.306
  ! Inline function call at CoreBuilder.mnd:209:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:198:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:135:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:143:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:147:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:155:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:166:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:172:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:175:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:178:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:181:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:187:17               size    +9, benefit        8.1, efficiency      0.902
  ! Inline function call at CoreBuilder.mnd:192:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:269:9                size  +135, benefit     3187.5, efficiency     23.611
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 38):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
  * Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2630.1, efficiency   Infinity (-5 instructions)
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2630.1, efficiency     77.357
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1187.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:326:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +135, benefit       75.0, efficiency      0.556
  ! Inline function call at CoreBuilder.mnd:514:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:355:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2630.1, efficiency    657.532
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +35, benefit     1669.9, efficiency     47.712
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +35, benefit      960.2, efficiency     27.434
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:205:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at CoreBuilder.mnd:207:9                size   +31, benefit     1187.5, efficiency     38.306
    Inline function call at CoreBuilder.mnd:209:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:198:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:135:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:143:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:147:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:155:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:166:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:172:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:175:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:178:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:181:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:187:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:192:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:269:9                size  +135, benefit     3187.5, efficiency     23.611
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 43):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
  * Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit     1187.5, efficiency   Infinity (-4 instructions)
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:326:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +135, benefit       75.0, efficiency      0.556
  ! Inline function call at CoreBuilder.mnd:514:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:355:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +135, benefit       75.0, efficiency      0.556
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:205:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at CoreBuilder.mnd:207:9                size   +31, benefit     1187.5, efficiency     38.306
    Inline function call at CoreBuilder.mnd:209:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:198:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:135:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:143:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:147:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:155:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:166:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:172:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:175:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:178:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:181:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:187:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:192:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:269:9                size  +135, benefit     3187.5, efficiency     23.611
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 47):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    33282.5, efficiency  33282.471 (+1 instructions)
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3993.9, efficiency    798.779
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:326:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +165, benefit       75.0, efficiency      0.455
  ! Inline function call at CoreBuilder.mnd:514:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:355:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      876.7, efficiency    292.236
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2226.6, efficiency    742.188
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
    Inline function call at CoreBuilder.mnd:205:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      890.6, efficiency    296.875
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:209:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:198:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:135:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:143:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:147:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:155:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:166:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:172:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:175:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:178:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:181:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:187:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:192:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:269:9                size  +165, benefit     3187.5, efficiency     19.318
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 46):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    20294.2, efficiency  20294.189 (+1 instructions)
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:326:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +165, benefit       75.0, efficiency      0.455
  ! Inline function call at CoreBuilder.mnd:514:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:355:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
    Inline function call at CoreBuilder.mnd:205:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:209:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:198:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:135:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:143:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:147:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:155:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:166:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:172:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:175:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:178:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:181:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:187:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:192:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:269:9                size  +165, benefit     3187.5, efficiency     19.318
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 45):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    20294.2, efficiency  20294.189 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit     6494.1, efficiency    132.533
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:326:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +165, benefit       75.0, efficiency      0.455
  ! Inline function call at CoreBuilder.mnd:514:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:355:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +25, benefit     2337.9, efficiency     93.516
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +25, benefit     2968.8, efficiency    118.750
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
    Inline function call at CoreBuilder.mnd:205:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +25, benefit     1187.5, efficiency     47.500
    Inline function call at CoreBuilder.mnd:209:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:198:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:135:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:143:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:147:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:155:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:166:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:172:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:175:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:178:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:181:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:187:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:192:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:269:9                size  +165, benefit     3187.5, efficiency     19.318
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 44):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    12988.3, efficiency   6494.141
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +51, benefit     6494.1, efficiency    127.336
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:326:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +165, benefit       75.0, efficiency      0.455
  ! Inline function call at CoreBuilder.mnd:514:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:355:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
  * Inline function call at Actions.mnd:88:5                     size    +1, benefit     6494.1, efficiency   6494.141 (-2 instructions)
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +26, benefit     2337.9, efficiency     89.919
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +26, benefit     2968.8, efficiency    114.183
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
    Inline function call at CoreBuilder.mnd:205:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +26, benefit     1187.5, efficiency     45.673
    Inline function call at CoreBuilder.mnd:209:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:198:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:135:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:143:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:147:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:155:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:166:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:172:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:175:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:178:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:181:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:187:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:192:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:269:9                size  +165, benefit     3187.5, efficiency     19.318
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 46):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
  * Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +1, benefit     6494.1, efficiency   6494.141 (-7 instructions)
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2630.1, efficiency     73.059
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:326:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +165, benefit       75.0, efficiency      0.455
  ! Inline function call at CoreBuilder.mnd:514:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:355:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     2337.9, efficiency   2337.891
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1669.9, efficiency     45.133
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2968.8, efficiency   2968.750
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      960.2, efficiency     25.951
    Inline function call at CoreBuilder.mnd:205:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at Actions.mnd:161:5                    size    +1, benefit     1187.5, efficiency   1187.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:209:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:198:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:135:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:143:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:147:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:155:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:166:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:172:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:175:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:178:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:181:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:187:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:192:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:269:9                size  +165, benefit     3187.5, efficiency     19.318
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 53):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     8266.1, efficiency   1653.223
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2630.1, efficiency     75.146
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +31, benefit     2968.8, efficiency     95.766
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:326:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +164, benefit       75.0, efficiency      0.457
  ! Inline function call at CoreBuilder.mnd:514:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:355:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1669.9, efficiency     46.387
  * Inline function call at Actions.mnd:135:5                    size    +2, benefit     3339.8, efficiency   1669.922 (-2 instructions)
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      960.2, efficiency     26.672
    Inline function call at CoreBuilder.mnd:205:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:209:5                size   +32, benefit     2375.0, efficiency     74.219
    Inline function call at CoreBuilder.mnd:198:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:135:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:143:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:147:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:155:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:166:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:172:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:175:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:178:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:181:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:187:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:192:9                size   +32, benefit      593.8, efficiency     18.555
  ! Inline function call at CoreBuilder.mnd:269:9                size  +164, benefit     3187.5, efficiency     19.436
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 55):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  * Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit     4926.3, efficiency   1642.090 (-11 instructions)
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2630.1, efficiency     75.146
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1298.8, efficiency     24.506
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2968.8, efficiency    102.371
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1707.0, efficiency     33.471
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:326:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +164, benefit       75.0, efficiency      0.457
  ! Inline function call at CoreBuilder.mnd:514:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:355:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1669.9, efficiency    834.961
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1669.9, efficiency     46.387
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1920.4, efficiency    960.205
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      960.2, efficiency     26.672
    Inline function call at CoreBuilder.mnd:205:9                size   +13, benefit     1187.5, efficiency     91.346
    Inline function call at Actions.mnd:162:5                    size    +2, benefit     1335.9, efficiency    667.969
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:209:5                size   +30, benefit     2375.0, efficiency     79.167
    Inline function call at CoreBuilder.mnd:198:5                size    +9, benefit     1039.1, efficiency    115.451
    Inline function call at CoreBuilder.mnd:135:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:143:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:147:17               size   +13, benefit       74.2, efficiency      5.709
    Inline function call at CoreBuilder.mnd:155:17               size   +13, benefit      148.4, efficiency     11.418
    Inline function call at CoreBuilder.mnd:166:17               size    +9, benefit      129.9, efficiency     14.431
    Inline function call at CoreBuilder.mnd:172:17               size    +9, benefit       64.9, efficiency      7.216
    Inline function call at CoreBuilder.mnd:175:17               size    +9, benefit       32.5, efficiency      3.608
    Inline function call at CoreBuilder.mnd:178:17               size    +9, benefit       16.2, efficiency      1.804
    Inline function call at CoreBuilder.mnd:181:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:187:17               size    +9, benefit        8.1, efficiency      0.902
    Inline function call at CoreBuilder.mnd:192:9                size   +30, benefit      593.8, efficiency     19.792
  ! Inline function call at CoreBuilder.mnd:269:9                size  +164, benefit     3187.5, efficiency     19.436
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 66):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  * Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit     1026.3, efficiency   1026.327 (-7 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2630.1, efficiency     75.146
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1298.8, efficiency     31.679
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2968.8, efficiency    102.371
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1707.0, efficiency     39.698
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:326:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +162, benefit       75.0, efficiency      0.463
  ! Inline function call at CoreBuilder.mnd:514:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:355:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:94:9                     size    +1, benefit     1022.8, efficiency   1022.827
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1669.9, efficiency     46.387
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      960.2, efficiency     26.672
    Inline function call at CoreBuilder.mnd:205:9                size   +11, benefit     1187.5, efficiency    107.955
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:209:5                size   +30, benefit     2375.0, efficiency     79.167
    Inline function call at CoreBuilder.mnd:198:5                size    +7, benefit     1039.1, efficiency    148.438
    Inline function call at CoreBuilder.mnd:135:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:166:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:192:9                size   +30, benefit      593.8, efficiency     19.792
  ! Inline function call at CoreBuilder.mnd:269:9                size  +162, benefit     3187.5, efficiency     19.676
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 73):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  * Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     6494.1, efficiency    590.376 (+0 instructions)
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2630.1, efficiency     77.357
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1298.8, efficiency     31.679
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2968.8, efficiency    102.371
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1707.0, efficiency     39.698
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +162, benefit       75.0, efficiency      0.463
  ! Inline function call at CoreBuilder.mnd:514:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +162, benefit       75.0, efficiency      0.463
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     2337.9, efficiency    389.648
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:130:5                    size   +35, benefit     1669.9, efficiency     47.712
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2968.8, efficiency    494.792
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:156:9                    size   +35, benefit      960.2, efficiency     27.434
    Inline function call at CoreBuilder.mnd:205:9                size   +11, benefit     1187.5, efficiency    107.955
    Inline function call at Actions.mnd:163:5                    size    +6, benefit     1187.5, efficiency    197.917
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:209:5                size   +30, benefit     2375.0, efficiency     79.167
    Inline function call at CoreBuilder.mnd:198:5                size    +7, benefit     1039.1, efficiency    148.438
    Inline function call at CoreBuilder.mnd:135:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:166:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:192:9                size   +30, benefit      593.8, efficiency     19.792
  ! Inline function call at CoreBuilder.mnd:269:9                size  +162, benefit     3187.5, efficiency     19.676
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 73):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  * Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3993.9, efficiency    570.557 (-2 instructions)
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +37, benefit     2630.1, efficiency     71.085
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1298.8, efficiency     31.679
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2968.8, efficiency     92.773
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1707.0, efficiency     39.698
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +165, benefit       75.0, efficiency      0.455
  ! Inline function call at CoreBuilder.mnd:514:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +165, benefit       75.0, efficiency      0.455
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      876.7, efficiency    219.177
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1669.9, efficiency     43.945
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2226.6, efficiency    556.641
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:156:9                    size   +38, benefit      960.2, efficiency     25.269
    Inline function call at CoreBuilder.mnd:205:9                size   +11, benefit     1187.5, efficiency    107.955
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      890.6, efficiency    222.656
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:209:5                size   +33, benefit     2375.0, efficiency     71.970
    Inline function call at CoreBuilder.mnd:198:5                size    +7, benefit     1039.1, efficiency    148.438
    Inline function call at CoreBuilder.mnd:135:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:166:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:192:9                size   +33, benefit      593.8, efficiency     17.992
  ! Inline function call at CoreBuilder.mnd:269:9                size  +165, benefit     3187.5, efficiency     19.318
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 75):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +38, benefit     2630.1, efficiency     69.214
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1298.8, efficiency     31.679
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2968.8, efficiency     84.821
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1707.0, efficiency     39.698
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +166, benefit       75.0, efficiency      0.452
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +166, benefit       75.0, efficiency      0.452
  ! Inline function call at CoreBuilder.mnd:514:9                size  +166, benefit       75.0, efficiency      0.452
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +166, benefit       75.0, efficiency      0.452
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +166, benefit       75.0, efficiency      0.452
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:130:5                    size   +39, benefit     1669.9, efficiency     42.819
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:156:9                    size   +39, benefit      960.2, efficiency     24.621
    Inline function call at CoreBuilder.mnd:205:9                size   +11, benefit     1187.5, efficiency    107.955
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:209:5                size   +36, benefit     2375.0, efficiency     65.972
  * Inline function call at CoreBuilder.mnd:198:5                size    +7, benefit     1039.1, efficiency    148.438 (+6 instructions)
    Inline function call at CoreBuilder.mnd:135:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:166:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:192:9                size   +36, benefit      593.8, efficiency     16.493
  ! Inline function call at CoreBuilder.mnd:269:9                size  +166, benefit     3187.5, efficiency     19.202
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 69):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  * Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     6494.1, efficiency    138.173 (+35 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +77, benefit     3966.1, efficiency     51.507
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      259.8, efficiency      7.640
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2968.8, efficiency     84.821
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1707.0, efficiency     39.698
    Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +172, benefit       75.0, efficiency      0.436
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +172, benefit       75.0, efficiency      0.436
  ! Inline function call at CoreBuilder.mnd:514:9                size  +172, benefit       75.0, efficiency      0.436
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +172, benefit       75.0, efficiency      0.436
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +172, benefit       75.0, efficiency      0.436
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     2337.9, efficiency     97.412
    Inline function call at Actions.mnd:130:5                    size   +39, benefit     1669.9, efficiency     42.819
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2968.8, efficiency    123.698
    Inline function call at Actions.mnd:156:9                    size   +39, benefit      960.2, efficiency     24.621
    Inline function call at CoreBuilder.mnd:205:9                size   +11, benefit     1187.5, efficiency    107.955
    Inline function call at Actions.mnd:174:5                    size   +24, benefit     1187.5, efficiency     49.479
    Inline function call at CoreBuilder.mnd:209:5                size   +36, benefit     2375.0, efficiency     65.972
    Inline function call at Actions.mnd:130:5                    size   +39, benefit     1335.9, efficiency     34.255
    Inline function call at CoreBuilder.mnd:135:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:166:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:192:9                size   +36, benefit      593.8, efficiency     16.493
  ! Inline function call at CoreBuilder.mnd:269:9                size  +172, benefit     3187.5, efficiency     18.532
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 34):
    Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +117, benefit     3966.1, efficiency     33.898
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      259.8, efficiency      7.640
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1707.0, efficiency     39.698
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +193, benefit       75.0, efficiency      0.389
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +193, benefit       75.0, efficiency      0.389
  ! Inline function call at CoreBuilder.mnd:514:9                size  +193, benefit       75.0, efficiency      0.389
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +193, benefit       75.0, efficiency      0.389
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +193, benefit       75.0, efficiency      0.389
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  * Inline function call at CoreBuilder.mnd:205:9                size   +11, benefit     1187.5, efficiency    107.955 (+10 instructions)
  ! Inline function call at CoreBuilder.mnd:209:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
    Inline function call at CoreBuilder.mnd:135:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:166:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:192:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:269:9                size  +193, benefit     3187.5, efficiency     16.516
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 24):
  * Replicate loop condition at CoreBuilder.mnd:508:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4634.0, efficiency     26.330
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      259.8, efficiency      7.640
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +203, benefit       75.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:514:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:209:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
    Inline function call at CoreBuilder.mnd:135:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:166:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:192:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:269:9                size  +203, benefit     3187.5, efficiency     15.702
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 23):
  * Replicate loop condition at CoreBuilder.mnd:513:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4634.0, efficiency     26.330
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      259.8, efficiency      7.640
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +203, benefit       75.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:514:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:209:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
    Inline function call at CoreBuilder.mnd:135:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:166:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:192:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:269:9                size  +203, benefit     3187.5, efficiency     15.702
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 22):
  * Replicate loop condition at CoreBuilder.mnd:532:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4634.0, efficiency     26.330
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      259.8, efficiency      7.640
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +203, benefit       75.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:514:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
    Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:209:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
    Inline function call at CoreBuilder.mnd:135:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:166:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:192:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:269:9                size  +203, benefit     3187.5, efficiency     15.702
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
    Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
    Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
    Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 21):
  * Replicate loop condition at CoreBuilder.mnd:542:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
  ! Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4634.0, efficiency     26.330
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      259.8, efficiency      7.640
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +203, benefit       75.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:514:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:209:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
    Inline function call at CoreBuilder.mnd:135:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:166:17               size    +7, benefit      129.9, efficiency     18.555
    Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:192:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:269:9                size  +203, benefit     3187.5, efficiency     15.702
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
    Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
  ! Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
    Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 20):
  ! Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     4634.0, efficiency     26.330
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      259.8, efficiency      7.640
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
    Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +203, benefit       75.0, efficiency      0.369
  ! Inline function call at CoreBuilder.mnd:514:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +203, benefit       75.0, efficiency      0.369
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:209:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
    Inline function call at CoreBuilder.mnd:135:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
  * Inline function call at CoreBuilder.mnd:166:17               size    +7, benefit      129.9, efficiency     18.555 (+6 instructions)
    Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:192:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:269:9                size  +203, benefit     3187.5, efficiency     15.702
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
  ! Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
  ! Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
  ! Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
    Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 14):
  ! Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     4801.0, efficiency     20.430
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      129.9, efficiency      4.810
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      519.5, efficiency     16.235
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
    Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +209, benefit       75.0, efficiency      0.359
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:514:9                size  +209, benefit       75.0, efficiency      0.359
    Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +209, benefit       75.0, efficiency      0.359
  ! Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +209, benefit       75.0, efficiency      0.359
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:209:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
  * Inline function call at CoreBuilder.mnd:135:17               size   +11, benefit      148.4, efficiency     13.494 (+10 instructions)
    Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
    Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
    Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      167.0, efficiency      2.830
    Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:192:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:269:9                size  +209, benefit     3187.5, efficiency     15.251
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
  ! Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
  ! Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
  ! Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
  ! Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 4):
  ! Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +294, benefit     4884.5, efficiency     16.614
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      129.9, efficiency      4.810
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +21, benefit      371.1, efficiency     17.671
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +59, benefit      132.0, efficiency      2.237
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +115, benefit      105.0, efficiency      0.913
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
  * Inline function call at CoreBuilder.mnd:411:13               size    +4, benefit        3.5, efficiency      0.875 (+2 instructions)
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +219, benefit       75.0, efficiency      0.342
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +219, benefit       75.0, efficiency      0.342
  ! Inline function call at CoreBuilder.mnd:514:9                size  +219, benefit       75.0, efficiency      0.342
  ! Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +219, benefit       75.0, efficiency      0.342
  ! Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +219, benefit       75.0, efficiency      0.342
  ! Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:209:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit       83.5, efficiency      1.415
  ! Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
  ! Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      167.0, efficiency      2.830
  ! Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
  ! Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
  ! Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
  ! Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:192:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:269:9                size  +219, benefit     3187.5, efficiency     14.555
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
  ! Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
  ! Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
  ! Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
  ! Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 1: speed optimization selection (cost limit 2):
  ! Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +294, benefit     4884.5, efficiency     16.614
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      129.9, efficiency      4.810
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +21, benefit      371.1, efficiency     17.671
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +161, benefit      297.5, efficiency      1.848
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +20, benefit      328.5, efficiency     16.425
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +79, benefit      136.0, efficiency      1.722
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +111, benefit      101.5, efficiency      0.914
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:18               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +219, benefit       75.0, efficiency      0.342
  ! Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:505:5                size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +219, benefit       75.0, efficiency      0.342
  ! Inline function call at CoreBuilder.mnd:514:9                size  +219, benefit       75.0, efficiency      0.342
  ! Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +219, benefit       75.0, efficiency      0.342
  ! Inline function call at CoreBuilder.mnd:536:28               size   +20, benefit        4.0, efficiency      0.200
  ! Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +219, benefit       75.0, efficiency      0.342
  ! Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:209:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit       83.5, efficiency      1.415
  ! Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
  ! Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      167.0, efficiency      2.830
  ! Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
  ! Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
  ! Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
  ! Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:192:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:269:9                size  +219, benefit     3187.5, efficiency     14.555
  ! Inline function call at CoreBuilder.mnd:284:5                size   +81, benefit      255.5, efficiency      3.154
  ! Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
  ! Inline function call at CoreBuilder.mnd:292:16               size   +21, benefit       31.5, efficiency      1.500
  ! Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
  ! Inline function call at CoreBuilder.mnd:301:12               size   +21, benefit      297.0, efficiency     14.143
  ! Inline function call at CoreBuilder.mnd:305:5                size   +20, benefit      120.0, efficiency      6.000
  ! Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:393:5                size   +81, benefit       28.0, efficiency      0.346

Pass 2: speed optimization selection (cost limit 9):
  ! Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +294, benefit     4884.5, efficiency     16.614
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      129.9, efficiency      4.810
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +21, benefit      371.1, efficiency     17.671
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +159, benefit      297.5, efficiency      1.871
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +19, benefit      328.5, efficiency     17.289
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +75, benefit      136.0, efficiency      1.813
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +111, benefit      101.5, efficiency      0.914
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function call at CoreBuilder.mnd:305:5                size   +19, benefit        4.0, efficiency      0.211
    Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:18               size   +19, benefit        4.0, efficiency      0.211
    Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +216, benefit       75.0, efficiency      0.347
    Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:505:5                size   +19, benefit        4.0, efficiency      0.211
  ! Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +216, benefit       75.0, efficiency      0.347
  ! Inline function call at CoreBuilder.mnd:514:9                size  +216, benefit       75.0, efficiency      0.347
  ! Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +216, benefit       75.0, efficiency      0.347
  ! Inline function call at CoreBuilder.mnd:536:28               size   +19, benefit        4.0, efficiency      0.211
    Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
    Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +216, benefit       75.0, efficiency      0.347
    Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
  * Inline function call at CoreBuilder.mnd:582:9                size    +9, benefit      100.0, efficiency     11.111 (+7 instructions)
    Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:209:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit       83.5, efficiency      1.415
  ! Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
  ! Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      167.0, efficiency      2.830
    Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
    Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
    Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
    Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
    Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:192:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:269:9                size  +216, benefit     3187.5, efficiency     14.757
  ! Inline function call at CoreBuilder.mnd:284:5                size   +80, benefit      255.5, efficiency      3.194
  ! Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
  ! Inline function call at CoreBuilder.mnd:292:16               size   +20, benefit       31.5, efficiency      1.575
  ! Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
  ! Inline function call at CoreBuilder.mnd:301:12               size   +20, benefit      297.0, efficiency     14.850
  ! Inline function call at CoreBuilder.mnd:305:5                size   +19, benefit      120.0, efficiency      6.316
  ! Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:393:5                size   +80, benefit       28.0, efficiency      0.350

Pass 2: speed optimization selection (cost limit 2):
  ! Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +294, benefit     4884.5, efficiency     16.614
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      129.9, efficiency      4.810
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +21, benefit      371.1, efficiency     17.671
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +159, benefit      297.5, efficiency      1.871
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +19, benefit      328.5, efficiency     17.289
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +75, benefit      136.0, efficiency      1.813
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +111, benefit      101.5, efficiency      0.914
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +17, benefit      300.0, efficiency     17.647
  ! Inline function call at CoreBuilder.mnd:305:5                size   +19, benefit        4.0, efficiency      0.211
  ! Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:18               size   +19, benefit        4.0, efficiency      0.211
  ! Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +216, benefit       75.0, efficiency      0.347
  ! Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:505:5                size   +19, benefit        4.0, efficiency      0.211
  ! Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +216, benefit       75.0, efficiency      0.347
  ! Inline function call at CoreBuilder.mnd:514:9                size  +216, benefit       75.0, efficiency      0.347
  ! Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +216, benefit       75.0, efficiency      0.347
  ! Inline function call at CoreBuilder.mnd:536:28               size   +19, benefit        4.0, efficiency      0.211
  ! Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +216, benefit       75.0, efficiency      0.347
  ! Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:209:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit       83.5, efficiency      1.415
  ! Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
  ! Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      167.0, efficiency      2.830
  ! Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
  ! Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
  ! Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
  ! Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:192:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:269:9                size  +216, benefit     3187.5, efficiency     14.757
  ! Inline function call at CoreBuilder.mnd:284:5                size   +80, benefit      255.5, efficiency      3.194
  ! Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
  ! Inline function call at CoreBuilder.mnd:292:16               size   +20, benefit       31.5, efficiency      1.575
  ! Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
  ! Inline function call at CoreBuilder.mnd:301:12               size   +20, benefit      297.0, efficiency     14.850
  ! Inline function call at CoreBuilder.mnd:305:5                size   +19, benefit      120.0, efficiency      6.316
  ! Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:393:5                size   +80, benefit       28.0, efficiency      0.350

Pass 3: speed optimization selection (cost limit 2):
  ! Replicate loop condition at CoreBuilder.mnd:268:5            size   +30, benefit     1062.5, efficiency     35.417
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +294, benefit     4884.5, efficiency     16.614
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      129.9, efficiency      4.810
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2968.8, efficiency     53.013
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +21, benefit      371.1, efficiency     17.671
  ! Inline function 'unpackCfg' defined at CoreBuilder.mnd:110:1 size   +43, benefit      340.0, efficiency      7.907
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:236:1 size  +159, benefit      297.5, efficiency      1.871
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:283:1 size   +19, benefit      328.5, efficiency     17.289
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:288:1 size  +131, benefit       31.5, efficiency      0.240
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:298:1 size   +75, benefit      136.0, efficiency      1.813
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:304:1 size  +111, benefit      101.5, efficiency      0.914
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:308:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:392:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:589:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:603:1 size   +17, benefit      300.0, efficiency     17.647
  ! Inline function call at CoreBuilder.mnd:305:5                size   +19, benefit        4.0, efficiency      0.211
  ! Inline function call at CoreBuilder.mnd:412:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:413:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:414:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:418:15               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:419:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:321:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:422:17               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:423:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:424:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:429:18               size   +19, benefit        4.0, efficiency      0.211
  ! Inline function call at CoreBuilder.mnd:440:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:441:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:443:19               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:456:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:458:9                size  +216, benefit       75.0, efficiency      0.347
  ! Inline function call at CoreBuilder.mnd:469:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:470:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:471:12               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:475:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:476:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:477:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:478:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:480:29               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:487:32               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:488:28               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:489:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:490:25               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:493:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:495:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:502:27               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:503:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:504:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:505:5                size   +19, benefit        4.0, efficiency      0.211
  ! Inline function call at CoreBuilder.mnd:506:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:509:9                size  +216, benefit       75.0, efficiency      0.347
  ! Inline function call at CoreBuilder.mnd:514:9                size  +216, benefit       75.0, efficiency      0.347
  ! Inline function call at CoreBuilder.mnd:352:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:358:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:359:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:360:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:361:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:362:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:363:5                size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:364:24               size   +22, benefit        4.5, efficiency      0.205
  ! Inline function call at CoreBuilder.mnd:533:9                size  +216, benefit       75.0, efficiency      0.347
  ! Inline function call at CoreBuilder.mnd:536:28               size   +19, benefit        4.0, efficiency      0.211
  ! Inline function call at CoreBuilder.mnd:537:5                size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:376:30               size    +4, benefit        3.5, efficiency      0.875
  ! Inline function call at CoreBuilder.mnd:540:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:543:9                size  +216, benefit       75.0, efficiency      0.347
  ! Inline function call at CoreBuilder.mnd:576:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:577:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:578:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:579:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:583:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:584:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:585:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1669.9, efficiency     28.304
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      960.2, efficiency     16.275
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      668.0, efficiency     11.322
  ! Inline function call at CoreBuilder.mnd:209:5                size   +57, benefit     2375.0, efficiency     41.667
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1335.9, efficiency     22.643
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit       83.5, efficiency      1.415
  ! Inline function call at CoreBuilder.mnd:143:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at CoreBuilder.mnd:147:17               size   +11, benefit       74.2, efficiency      6.747
  ! Inline function call at CoreBuilder.mnd:155:17               size   +11, benefit      148.4, efficiency     13.494
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      167.0, efficiency      2.830
  ! Inline function call at CoreBuilder.mnd:172:17               size    +7, benefit       64.9, efficiency      9.277
  ! Inline function call at CoreBuilder.mnd:175:17               size    +7, benefit       32.5, efficiency      4.639
  ! Inline function call at CoreBuilder.mnd:178:17               size    +7, benefit       16.2, efficiency      2.319
  ! Inline function call at CoreBuilder.mnd:181:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:187:17               size    +7, benefit        8.1, efficiency      1.160
  ! Inline function call at CoreBuilder.mnd:192:9                size   +57, benefit      593.8, efficiency     10.417
  ! Inline function call at CoreBuilder.mnd:269:9                size  +216, benefit     3187.5, efficiency     14.757
  ! Inline function call at CoreBuilder.mnd:284:5                size   +80, benefit      255.5, efficiency      3.194
  ! Inline function call at CoreBuilder.mnd:291:9                size   +22, benefit       28.0, efficiency      1.273
  ! Inline function call at CoreBuilder.mnd:292:16               size   +20, benefit       31.5, efficiency      1.575
  ! Inline function call at CoreBuilder.mnd:300:5                size   +22, benefit      297.0, efficiency     13.500
  ! Inline function call at CoreBuilder.mnd:301:12               size   +20, benefit      297.0, efficiency     14.850
  ! Inline function call at CoreBuilder.mnd:305:5                size   +19, benefit      120.0, efficiency      6.316
  ! Inline function call at CoreBuilder.mnd:310:5                size   +22, benefit       15.0, efficiency      0.682
  ! Inline function call at CoreBuilder.mnd:311:5                size   +80, benefit       14.0, efficiency      0.175
  ! Inline function call at CoreBuilder.mnd:393:5                size   +80, benefit       28.0, efficiency      0.350

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-77 instructions):
 
    43 setaddr :buildBlockFromCfg.1*retaddr *label48 (h:*label48)
    44 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label48) (h:*label48)
    45 label *label48
-    * set *tmp128 :buildBlockFromCfg.1*retval
    46 set :buildBlockFromCfg.1:cfg "m*.<2######"
    47 setaddr :buildBlockFromCfg.1*retaddr *label49 (h:*label49)
    48 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label49) (h:*label49)
 
    60 setaddr :buildBlockFromCfg.1*retaddr *label51 (h:*label51)
    61 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label51) (h:*label51)
    62 label *label51
-    * set *tmp131 :buildBlockFromCfg.1*retval
    63 set :buildFirstTitaniumDrill:cfg "w**5#-#####"
    64 set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
    65 setaddr :meetTarget.1*retaddr *label53 (h:*label53)
 
    91 setaddr :error*retaddr *label57 (h:*label57)
    92 call *label13 *invalid :error*retval (m:*label57) (h:*label57)
    93 label *label57
-    * set *tmp146 null
    94 jump *label56 always
    95 label *label55
-    * set *tmp146 null
    96 label *label56
    97 write @pneumatic-drill .display ".nextBlock"
    98 write :buildFirstTitaniumDrill:dx .blockBuilder ":buildFirstTitaniumDrillAt:x"
 
   120 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
   121 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
   122 label *label60
-    * set *tmp152 :buildBlockFromCfg.1*retval
   123 set :buildBlockFromCfg.1:cfg "W*-'%######"
   124 setaddr :buildBlockFromCfg.1*retaddr *label61 (h:*label61)
   125 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
   126 label *label61
-    * set *tmp153 :buildBlockFromCfg.1*retval
   127 set .graphiteSurplus 100
   128 set :buildBlockFromCfg:cfg "®-.}U#U####"
   129 set :buildBlockFromCfg:config processor2
 
   145 setaddr :buildBlockFromCfg.1*retaddr *label63 (h:*label63)
   146 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label63) (h:*label63)
   147 label *label63
-    * set *tmp155 :buildBlockFromCfg.1*retval
   148 set :buildBlockFromCfg.1:cfg "(*###A<###"
   149 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
   150 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
 
   183 op lessThan *tmp159 *tmp158 300
   184 jump *label73 equal *tmp159 false
   185 jump *label71 always
-    * set *tmp160 null
   186 jump *label74 always
   187 label *label73
-    * set *tmp160 null
   188 label *label74
   189 label *label70
   190 read *tmp97 .controller ".monos"
 
   196 setaddr :buildBlockFromCfg.1*retaddr *label75 (h:*label75)
   197 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label75) (h:*label75)
   198 label *label75
-    * set *tmp162 :buildBlockFromCfg.1*retval
   199 set :buildBlockFromCfg.1:cfg "T,*%%######"
   200 setaddr :buildBlockFromCfg.1*retaddr *label76 (h:*label76)
   201 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label76) (h:*label76)
   202 label *label76
-    * set *tmp163 :buildBlockFromCfg.1*retval
   203 set :buildBlockFromCfg.1:cfg "',+_AA#####"
   204 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   205 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
 
   211 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   212 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
   213 label *label78
-    * set *tmp165 :buildBlockFromCfg.1*retval
   214 set :buildBlockFromCfg.1:cfg "W'*'%######"
   215 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
   216 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label79) (h:*label79)
   217 label *label79
-    * set *tmp166 :buildBlockFromCfg.1*retval
   218 set :buildBlockFromCfg.1:cfg "W&*'%######"
   219 setaddr :buildBlockFromCfg.1*retaddr *label80 (h:*label80)
   220 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label80) (h:*label80)
   221 label *label80
-    * set *tmp167 :buildBlockFromCfg.1*retval
   222 set :buildBlockFromCfg.1:cfg "o%+FK<A####"
   223 setaddr :buildBlockFromCfg.1*retaddr *label81 (h:*label81)
   224 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label81) (h:*label81)
 
   248 setaddr :buildBlockFromCfg.1*retaddr *label85 (h:*label85)
   249 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label85) (h:*label85)
   250 label *label85
-    * set *tmp172 :buildBlockFromCfg.1*retval
   251 set :buildBlockFromCfg.1:cfg "*%ë#}####"
   252 setaddr :buildBlockFromCfg.1*retaddr *label86 (h:*label86)
   253 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
 
   260 setaddr :buildBlockFromCfg.1*retaddr *label87 (h:*label87)
   261 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label87) (h:*label87)
   262 label *label87
-    * set *tmp174 :buildBlockFromCfg.1*retval
   263 setaddr :buildUnits*retaddr *label88 (h:*label88)
   264 call *label40 *invalid :buildUnits*retval (m:*label88) (h:*label88)
   265 label *label88
 
   279 setaddr :buildBlockFromCfg.1*retaddr *label91 (h:*label91)
   280 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label91) (h:*label91)
   281 label *label91
-    * set *tmp176 :buildBlockFromCfg.1*retval
   282 set :buildBlockFromCfg.1:cfg "T-)%%######"
   283 setaddr :buildBlockFromCfg.1*retaddr *label92 (h:*label92)
   284 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label92) (h:*label92)
   285 label *label92
-    * set *tmp177 :buildBlockFromCfg.1*retval
   286 set :buildBlockFromCfg:cfg "--###A<###"
   287 set :buildBlockFromCfg:config @sand
   288 setaddr :buildBlockFromCfg*retaddr *label93 (h:*label93)
   289 call *label36 *invalid :buildBlockFromCfg*retval (m:*label93) (h:*label93)
   290 label *label93
-    * set *tmp178 :buildBlockFromCfg*retval
   291 setaddr :buildUnits*retaddr *label94 (h:*label94)
   292 call *label40 *invalid :buildUnits*retval (m:*label94) (h:*label94)
   293 label *label94
 
   373 setaddr :error*retaddr *label113 (h:*label113)
   374 call *label13 *invalid :error*retval (m:*label113) (h:*label113)
   375 label *label113
-    * set *tmp203 null
   376 jump *label112 always
   377 label *label111
-    * set *tmp203 null
   378 label *label112
   379 write @laser-drill .blockBuilder ":buildBlockAt:block"
   380 read *tmp54 .oreLocator ".drillX"
 
   399 setaddr :buildRemoteBlock*retaddr *label115 (h:*label115)
   400 call *label35 *invalid :buildRemoteBlock*retval (m:*label115) (h:*label115)
   401 label *label115
-    * set *tmp211 :buildRemoteBlock*retval
   402 set :buildRemoteBlock:cfg "z%-AAA##A##"
   403 read *tmp60 .oreLocator ".water2X"
   404 set :buildRemoteBlock:x *tmp60
 
   407 setaddr :buildRemoteBlock*retaddr *label116 (h:*label116)
   408 call *label35 *invalid :buildRemoteBlock*retval (m:*label116) (h:*label116)
   409 label *label116
-    * set *tmp212 :buildRemoteBlock*retval
   410 set :buildRemoteBlock:cfg "o%+FK<A####"
   411 read *tmp62 .oreLocator ".generatorX"
   412 set :buildRemoteBlock:x *tmp62
 
   425 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   426 call *label35 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   427 label *label118
-    * set *tmp214 :buildRemoteBlock*retval
   428 set :buildRemoteBlock:cfg "r**#-#+####"
   429 read *tmp66 .oreLocator ".panelX"
   430 set :buildRemoteBlock:x *tmp66
 
   433 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   434 call *label35 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   435 label *label119
-    * set *tmp215 :buildRemoteBlock*retval
   436 set :buildRemoteBlock:cfg "k*/(7######"
   437 read *tmp68 .oreLocator ".batteryX"
   438 set :buildRemoteBlock:x *tmp68
 
   441 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   442 call *label35 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   443 label *label120
-    * set *tmp216 :buildRemoteBlock*retval
   444 set :buildRemoteBlock:cfg "**#######"
   445 read *tmp58 .oreLocator ".containerX"
   446 set :buildRemoteBlock:x *tmp58
 
   454 op equal *tmp218 .thoriumContainer null
   455 jump *label122 equal *tmp218 false
   456 set .thoriumContainer .thoriumDrill
-    * set *tmp219 .thoriumContainer
   457 jump *label123 always
   458 label *label122
-    * set *tmp219 null
   459 label *label123
   460 write .thoriumDrill .display ".thoriumDrill"
   461 write .thoriumContainer .display ".thoriumContainer"
 
   493 setaddr :buildBlockFromCfg.1*retaddr *label131 (h:*label131)
   494 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label131) (h:*label131)
   495 label *label131
-    * set *tmp224 :buildBlockFromCfg.1*retval
   496 set :buildBlockFromCfg.1:cfg ".&#ʭ#ǥƁ#ʭ#"
   497 setaddr :buildBlockFromCfg.1*retaddr *label133 (h:*label133)
   498 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label133) (h:*label133)
 
   622 op notEqual *tmp241 *tmp240 null
   623 jump *label168 equal *tmp241 false
   624 ucontrol itemDrop @air 1000
-    * set *tmp242 null
   625 jump *label169 always
   626 label *label168
-    * set *tmp242 null
   627 label *label169
   628 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   629 label *label166
 
   682 op greaterThan *tmp256 *tmp254 *tmp255
   683 jump *label181 notEqual *tmp256 false
   684 label *label183
-    * set *tmp251 null
   685 jump *label179 always
   686 label *label178
   687 label *label184
 
   692 label *label185
   693 jump *label184 always
   694 label *label186
-    * set *tmp251 null
   695 label *label179
   696 set :transportStatus:target 0
   697 set :transportStatus:item null
 
   709 setaddr :error*retaddr *label191 (h:*label191)
   710 call *label13 *invalid :error*retval (m:*label191) (h:*label191)
   711 label *label191
-    * set *tmp262 null
   712 jump *label190 always
   713 label *label189
-    * set *tmp262 null
   714 label *label190
   715 label *label188
   716 return :locateOre*retaddr
 
   740 setaddr :dropAll*retaddr *label198 (h:*label198)
   741 call *label17 *invalid :dropAll*retval (m:*label198) (h:*label198)
   742 label *label198
-    * set *tmp266 null
   743 jump *label197 always
   744 label *label196
-    * set *tmp266 null
   745 label *label197
   746 set :status3:text "Mining..."
   747 setaddr :status3*retaddr *label199 (h:*label199)
 
   757 op land *tmp271 *tmp269 *tmp270
   758 jump *label203 equal *tmp271 false
   759 jump *label202 always
-    * set *tmp272 null
   760 jump *label204 always
   761 label *label203
-    * set *tmp272 null
   762 label *label204
   763 ucontrol mine :mineOre:x :mineOre:y
   764 op greaterThan *tmp273 @second :mineOre:stop
   765 jump *label205 equal *tmp273 false
   766 jump *label202 always
-    * set *tmp274 null
   767 jump *label206 always
   768 label *label205
-    * set *tmp274 null
   769 label *label206
   770 label *label201
   771 sensor *tmp275 @unit @totalItems
 
   831 op land *tmp285 *tmp283 *tmp284
   832 jump *label219 equal *tmp285 false
   833 ucontrol itemDrop @air 1000
-    * set *tmp286 null
   834 jump *label220 always
   835 label *label219
-    * set *tmp286 null
   836 label *label220
   837 label *label217
   838 sensor *tmp287 @unit :fetchBlock:item
 
   869 setaddr :mineOre*retaddr *label226 (h:*label226)
   870 call *label21 *invalid :mineOre*retval (m:*label226) (h:*label226)
   871 label *label226
-    * set *tmp295 null
   872 jump *label225 always
   873 label *label224
-    * set *tmp295 null
   874 label *label225
   875 label *label222
   876 return :supplyBlock*retaddr
 
   906 op land *tmp301 *tmp299 *tmp300
   907 jump *label235 equal *tmp301 false
   908 ucontrol itemDrop @air 1000
-    * set *tmp302 null
   909 jump *label236 always
   910 label *label235
-    * set *tmp302 null
   911 label *label236
   912 label *label233
   913 sensor *tmp303 @unit :supplyBlockFromCore:item
 
  1005 setaddr :supplyBlock*retaddr *label246 (h:*label246)
  1006 call *label24 *invalid :supplyBlock*retval (m:*label246) (h:*label246)
  1007 label *label246
-    * set *tmp349 null
  1008 jump *label245 always
  1009 label *label244
  1010 set :supplyBlockFromCore:target .thoriumGenerator
 
  1012 setaddr :supplyBlockFromCore*retaddr *label247 (h:*label247)
  1013 call *label25 *invalid :supplyBlockFromCore*retval (m:*label247) (h:*label247)
  1014 label *label247
-    * set *tmp349 null
  1015 label *label245
  1016 set :fetchBlock:block .thoriumContainer
  1017 set :fetchBlock:item @thorium
 
  1019 call *label23 *invalid :fetchBlock*retval (m:*label248) (h:*label248)
  1020 label *label248
  1021 label *label242
-    * set *tmp346 null
  1022 jump *label241 always
  1023 label *label240
  1024 read *tmp97 .controller ".monos"
 
  1060 label *label259
  1061 set *tmp359 null
  1062 label *label260
-    * set *tmp356 *tmp359
  1063 jump *label258 always
  1064 label *label257
-    * set *tmp356 null
  1065 label *label258
  1066 sensor *tmp360 .core @silicon
  1067 op lessThan *tmp361 *tmp360 .targetSilicon
 
  1102 label *label270
  1103 set *tmp365 *tmp368
  1104 label *label266
-    * set *tmp362 *tmp365
  1105 jump *label264 always
  1106 label *label263
-    * set *tmp362 null
  1107 label *label264
  1108 sensor *tmp369 .battery @totalPower
  1109 op lessThan *tmp370 *tmp369 .powerTarget
 
  1131 label *label273
  1132 set *tmp371 null
  1133 label *label274
-    * set *tmp353 *tmp371
  1134 jump *label256 always
  1135 label *label255
-    * set *tmp353 null
  1136 label *label256
  1137 sensor *tmp375 .core @titanium
  1138 op lessThan *tmp376 *tmp375 .targetTitanium
 
  1269 label *label283
  1270 set *tmp385 null
  1271 label *label284
-    * set *tmp383 *tmp385
  1272 jump *label282 always
  1273 label *label281
  1274 set :status1:text "Goal 11: Fetching titanium"
 
  1280 setaddr :fetchBlock*retaddr *label312 (h:*label312)
  1281 call *label23 *invalid :fetchBlock*retval (m:*label312) (h:*label312)
  1282 label *label312
-    * set *tmp383 null
  1283 label *label282
  1284 label *label254
  1285 set *tmp351 null
  1286 label *label250
-    * set *tmp346 *tmp351
  1287 label *label241
  1288 label *label239
  1289 return :supplyBase*retaddr
 
  1365 jump *label328 equal *tmp426 false
  1366 set *tmp424 false
  1367 jump *label327 always
-    * set *tmp427 null
  1368 jump *label329 always
  1369 label *label328
-    * set *tmp427 null
  1370 label *label329
  1371 sensor *tmp428 .core @lead
  1372 op lessThan *tmp429 *tmp428 .targetLead
  1373 jump *label330 equal *tmp429 false
  1374 set *tmp424 false
  1375 jump *label327 always
-    * set *tmp430 null
  1376 jump *label331 always
  1377 label *label330
-    * set *tmp430 null
  1378 label *label331
  1379 sensor *tmp431 .core @graphite
  1380 op lessThan *tmp432 *tmp431 .targetGraphite
  1381 jump *label332 equal *tmp432 false
  1382 set *tmp424 false
  1383 jump *label327 always
-    * set *tmp433 null
  1384 jump *label333 always
  1385 label *label332
-    * set *tmp433 null
  1386 label *label333
  1387 sensor *tmp434 .core @silicon
  1388 op lessThan *tmp435 *tmp434 .targetSilicon
  1389 jump *label334 equal *tmp435 false
  1390 set *tmp424 false
  1391 jump *label327 always
-    * set *tmp436 null
  1392 jump *label335 always
  1393 label *label334
-    * set *tmp436 null
  1394 label *label335
  1395 sensor *tmp437 .core @titanium
  1396 op lessThan *tmp438 *tmp437 .targetTitanium
  1397 jump *label336 equal *tmp438 false
  1398 set *tmp424 false
  1399 jump *label327 always
-    * set *tmp439 null
  1400 jump *label337 always
  1401 label *label336
-    * set *tmp439 null
  1402 label *label337
  1403 sensor *tmp440 .core @metaglass
  1404 op lessThan *tmp441 *tmp440 .targetMetaglass
  1405 jump *label338 equal *tmp441 false
  1406 set *tmp424 false
  1407 jump *label327 always
-    * set *tmp442 null
  1408 jump *label339 always
  1409 label *label338
-    * set *tmp442 null
  1410 label *label339
  1411 sensor *tmp443 .core @thorium
  1412 op lessThan *tmp444 *tmp443 .targetThorium
  1413 jump *label340 equal *tmp444 false
  1414 set *tmp424 false
  1415 jump *label327 always
-    * set *tmp445 null
  1416 jump *label341 always
  1417 label *label340
-    * set *tmp445 null
  1418 label *label341
  1419 set *tmp424 true
  1420 jump *label327 always
 
  1495 label *label353
  1496 set :buildRemoteBlock*retval :buildBlock*retval
  1497 jump *label349 always
-    * set *tmp471 null
  1498 jump *label351 always
  1499 label *label350
-    * set *tmp471 null
  1500 label *label351
  1501 set :buildRemoteBlock*retval false
  1502 jump *label349 always
 
  1633 sensor *tmp486 @unit @mining
  1634 jump *label378 equal *tmp486 false
  1635 ucontrol stop
-    * set *tmp487 null
  1636 jump *label379 always
  1637 label *label378
-    * set *tmp487 null
  1638 label *label379
  1639 ubind :lineUpUnits:unit
  1640 label *label376

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-10 instructions):
 
  1033 call *label22 *invalid :mineOre.1*retval (m:*label253) (h:*label253)
  1034 label *label253
  1035 label *label251
-    * set *tmp351 null
  1036 jump *label250 always
  1037 label *label249
  1038 set :supplyBase0:supplied false
 
  1054 call *label24 *invalid :supplyBlock*retval (m:*label262) (h:*label262)
  1055 label *label262
  1056 set :supplyBase0:supplied true
-    * set *tmp359 :supplyBase0:supplied
  1057 jump *label260 always
  1058 label *label259
-    * set *tmp359 null
  1059 label *label260
  1060 jump *label258 always
  1061 label *label257
 
  1076 call *label24 *invalid :supplyBlock*retval (m:*label268) (h:*label268)
  1077 label *label268
  1078 set :supplyBase0:supplied true
-    * set *tmp365 :supplyBase0:supplied
  1079 jump *label266 always
  1080 label *label265
  1081 sensor *tmp366 .smelter @sand
 
  1096 label *label269
  1097 set *tmp368 null
  1098 label *label270
-    * set *tmp365 *tmp368
  1099 label *label266
  1100 jump *label264 always
  1101 label *label263
 
  1121 label *label275
  1122 set *tmp374 null
  1123 label *label276
-    * set *tmp371 *tmp374
  1124 jump *label274 always
  1125 label *label273
-    * set *tmp371 null
  1126 label *label274
  1127 jump *label256 always
  1128 label *label255
 
  1257 label *label290
  1258 set *tmp389 *tmp392
  1259 label *label286
-    * set *tmp385 *tmp389
  1260 jump *label284 always
  1261 label *label283
-    * set *tmp385 null
  1262 label *label284
  1263 jump *label282 always
  1264 label *label281
 
  1273 label *label312
  1274 label *label282
  1275 label *label254
-    * set *tmp351 null
  1276 label *label250
  1277 label *label241
  1278 label *label239

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-6 instructions):
 
  1091 call *label24 *invalid :supplyBlock*retval (m:*label272) (h:*label272)
  1092 label *label272
  1093 set :supplyBase0:supplied true
-    * set *tmp368 :supplyBase0:supplied
  1094 jump *label270 always
  1095 label *label269
-    * set *tmp368 null
  1096 label *label270
  1097 label *label266
  1098 jump *label264 always
 
  1114 call *label24 *invalid :supplyBlock*retval (m:*label278) (h:*label278)
  1115 label *label278
  1116 set :supplyBase0:supplied true
-    * set *tmp374 :supplyBase0:supplied
  1117 jump *label276 always
  1118 label *label275
-    * set *tmp374 null
  1119 label *label276
  1120 jump *label274 always
  1121 label *label273
 
  1152 setaddr :mineOre.1*retaddr *label288 (h:*label288)
  1153 call *label22 *invalid :mineOre.1*retval (m:*label288) (h:*label288)
  1154 label *label288
-    * set *tmp389 null
  1155 jump *label286 always
  1156 label *label285
  1157 sensor *tmp390 .core @silicon
 
  1250 label *label296
  1251 set *tmp392 *tmp399
  1252 label *label290
-    * set *tmp389 *tmp392
  1253 label *label286
  1254 jump *label284 always
  1255 label *label283

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
  1177 setaddr :mineOre.1*retaddr *label294 (h:*label294)
  1178 call *label22 *invalid :mineOre.1*retval (m:*label294) (h:*label294)
  1179 label *label294
-    * set *tmp392 null
  1180 jump *label290 always
  1181 label *label289
  1182 sensor *tmp397 .core @copper
 
  1247 label *label300
  1248 set *tmp399 *tmp402
  1249 label *label296
-    * set *tmp392 *tmp399
  1250 label *label290
  1251 label *label286
  1252 jump *label284 always

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-2 instructions):
 
  1190 setaddr :mineOre.1*retaddr *label298 (h:*label298)
  1191 call *label22 *invalid :mineOre.1*retval (m:*label298) (h:*label298)
  1192 label *label298
-    * set *tmp399 null
  1193 jump *label296 always
  1194 label *label295
  1195 sensor *tmp400 .core @lead
 
  1244 label *label304
  1245 set *tmp402 *tmp405
  1246 label *label300
-    * set *tmp399 *tmp402
  1247 label *label296
  1248 label *label290
  1249 label *label286

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
  1203 setaddr :mineOre.1*retaddr *label302 (h:*label302)
  1204 call *label22 *invalid :mineOre.1*retval (m:*label302) (h:*label302)
  1205 label *label302
-    * set *tmp402 null
  1206 jump *label300 always
  1207 label *label299
  1208 sensor *tmp403 .core @metaglass
 
  1241 label *label310
  1242 set *tmp405 null
  1243 label *label304
-    * set *tmp402 *tmp405
  1244 label *label300
  1245 label *label296
  1246 label *label290

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1216 setaddr :mineOre.1*retaddr *label306 (h:*label306)
  1217 call *label22 *invalid :mineOre.1*retval (m:*label306) (h:*label306)
  1218 label *label306
-    * set *tmp405 null
  1219 jump *label304 always
  1220 label *label303
  1221 set :status1:text "Goal 10: supplying base"
 
  1238 setaddr :mineOre.1*retaddr *label310 (h:*label310)
  1239 call *label22 *invalid :mineOre.1*retval (m:*label310) (h:*label310)
  1240 label *label310
-    * set *tmp405 null
  1241 label *label304
  1242 label *label300
  1243 label *label296

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-77 instructions):
 
    19 write 511 bank1 511
    20 label *label43
    21 ubind @poly
-    * set *tmp122 @unit
-    * set .builder *tmp122
-    * ulocate building core false @copper .coreX .coreY *tmp124 *tmp123
-    * set .core *tmp123
+   22 set .builder @unit
+   23 ulocate building core false @copper .coreX .coreY 0 .core
    24 label *label44
    25 op equal *tmp125 .core null
    26 jump *label43 notEqual *tmp125 false
 
    29 setaddr :buildBlockFromCfg.1*retaddr *label46 (h:*label46)
    30 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label46) (h:*label46)
    31 label *label46
-    * set *tmp126 :buildBlockFromCfg.1*retval
-    * set .press *tmp126
+   32 set .press :buildBlockFromCfg.1*retval
    33 set :buildBlockFromCfg.1:cfg "k*/(7######"
    34 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    35 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
    36 label *label47
-    * set *tmp127 :buildBlockFromCfg.1*retval
-    * set .battery *tmp127
+   37 set .battery :buildBlockFromCfg.1*retval
    38 set :buildBlockFromCfg.1:cfg "k+/(7######"
    39 setaddr :buildBlockFromCfg.1*retaddr *label48 (h:*label48)
    40 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label48) (h:*label48)
 
    43 setaddr :buildBlockFromCfg.1*retaddr *label49 (h:*label49)
    44 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label49) (h:*label49)
    45 label *label49
-    * set *tmp129 :buildBlockFromCfg.1*retval
-    * set .generator *tmp129
+   46 set .generator :buildBlockFromCfg.1*retval
    47 set .powerTarget 400
    48 set :buildBlockFromCfg.1:cfg "%+-A<######"
    49 setaddr :buildBlockFromCfg.1*retaddr *label50 (h:*label50)
    50 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label50) (h:*label50)
    51 label *label50
-    * set *tmp130 :buildBlockFromCfg.1*retval
-    * set .smelter *tmp130
+   52 set .smelter :buildBlockFromCfg.1*retval
    53 set :buildBlockFromCfg.1:cfg "T+,%%######"
    54 setaddr :buildBlockFromCfg.1*retaddr *label51 (h:*label51)
    55 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label51) (h:*label51)
 
    73 wait 1e-15
    74 read *tmp143 .oreLocator ":findDrillLocation*finished"
    75 jump *label54 equal *tmp143 false
-    * read *tmp140 .oreLocator ":findDrillLocation:dx"
-    * set :buildFirstTitaniumDrill:dx *tmp140
-    * read *tmp141 .oreLocator ":findDrillLocation:dy"
-    * set :buildFirstTitaniumDrill:dy *tmp141
-    * read *tmp144 .oreLocator ":findDrillLocation*retval"
-    * set :buildFirstTitaniumDrill:result *tmp144
+   76 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+   77 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+   78 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
    79 op equal *tmp145 :buildFirstTitaniumDrill:result false
    80 jump *label55 equal *tmp145 false
    81 set :error:error "Cannot locate spot for titanium drill"
 
    94 wait 1e-15
    95 read *tmp149 .blockBuilder ":buildFirstTitaniumDrillAt*finished"
    96 jump *label58 equal *tmp149 false
-    * read *tmp150 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
-    * set *tmp132 *tmp150
+   97 read *tmp132 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
    98 jump *label52 always
    99 set *tmp132 null
   100 label *label52
 
   104 setaddr :buildBlockFromCfg.1*retaddr *label59 (h:*label59)
   105 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label59) (h:*label59)
   106 label *label59
-    * set *tmp151 :buildBlockFromCfg.1*retval
-    * set .unloader1 *tmp151
+  107 set .unloader1 :buildBlockFromCfg.1*retval
   108 set :buildBlockFromCfg.1:cfg "T),%%######"
   109 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
   110 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
 
   119 setaddr :buildBlockFromCfg*retaddr *label62 (h:*label62)
   120 call *label36 *invalid :buildBlockFromCfg*retval (m:*label62) (h:*label62)
   121 label *label62
-    * set *tmp154 :buildBlockFromCfg*retval
-    * set .controller *tmp154
+  122 set .controller :buildBlockFromCfg*retval
   123 write processor6 .controller ".timer"
   124 write .display .controller ".display"
   125 write .core .controller ".core"
 
   137 setaddr :buildBlockFromCfg.1*retaddr *label64 (h:*label64)
   138 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label64) (h:*label64)
   139 label *label64
-    * set *tmp156 :buildBlockFromCfg.1*retval
-    * write *tmp156 .controller ".unloader2"
+  140 write :buildBlockFromCfg.1*retval .controller ".unloader2"
   141 set :buildBlockFromCfg.1:cfg "'(_i#####&"
   142 setaddr :buildBlockFromCfg.1*retaddr *label65 (h:*label65)
   143 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label65) (h:*label65)
   144 label *label65
-    * set *tmp157 :buildBlockFromCfg.1*retval
-    * set :factory *tmp157
+  145 set :factory :buildBlockFromCfg.1*retval
   146 write :factory .controller ".factory"
   147 write :factory .display ".airFactory"
   148 set :setFlareTarget:target 1
 
   190 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   191 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
   192 label *label77
-    * set *tmp164 :buildBlockFromCfg.1*retval
-    * set .kiln *tmp164
+  193 set .kiln :buildBlockFromCfg.1*retval
   194 write .kiln .controller ".kiln"
   195 set :buildBlockFromCfg.1:cfg "z%-AAA##A##"
   196 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
 
   208 setaddr :buildBlockFromCfg.1*retaddr *label81 (h:*label81)
   209 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label81) (h:*label81)
   210 label *label81
-    * set *tmp168 :buildBlockFromCfg.1*retval
-    * write *tmp168 .controller ".generator2"
+  211 write :buildBlockFromCfg.1*retval .controller ".generator2"
   212 set :buildBlockFromCfg.1:cfg "$(.#U<###"
   213 setaddr :buildBlockFromCfg.1*retaddr *label82 (h:*label82)
   214 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label82) (h:*label82)
   215 label *label82
-    * set *tmp169 :buildBlockFromCfg.1*retval
-    * write *tmp169 .controller ".multipress"
+  216 write :buildBlockFromCfg.1*retval .controller ".multipress"
   217 set .graphiteSurplus 150
   218 set :buildBlockFromCfg.1:cfg " '%-#2#####"
   219 setaddr :buildBlockFromCfg.1*retaddr *label83 (h:*label83)
   220 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label83) (h:*label83)
   221 label *label83
-    * set *tmp170 :buildBlockFromCfg.1*retval
-    * write *tmp170 .controller ".payloadRouter"
+  222 write :buildBlockFromCfg.1*retval .controller ".payloadRouter"
   223 set :buildBlockFromCfg.1:cfg "*(###A<###"
   224 setaddr :buildBlockFromCfg.1*retaddr *label84 (h:*label84)
   225 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label84) (h:*label84)
   226 label *label84
-    * set *tmp171 :buildBlockFromCfg.1*retval
-    * write *tmp171 .controller ".unloader4"
+  227 write :buildBlockFromCfg.1*retval .controller ".unloader4"
   228 set :buildBlockFromCfg.1:cfg "X*''%######"
   229 setaddr :buildBlockFromCfg.1*retaddr *label85 (h:*label85)
   230 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label85) (h:*label85)
 
   233 setaddr :buildBlockFromCfg.1*retaddr *label86 (h:*label86)
   234 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
   235 label *label86
-    * set *tmp173 :buildBlockFromCfg.1*retval
-    * set :reconstructor *tmp173
+  236 set :reconstructor :buildBlockFromCfg.1*retval
   237 write :reconstructor .controller ".reconstructor"
   238 write :reconstructor .display ".reconstructor"
   239 set :buildBlockFromCfg.1:cfg "l/,#U#A7###"
 
   253 setaddr :buildBlockFromCfg.1*retaddr *label90 (h:*label90)
   254 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label90) (h:*label90)
   255 label *label90
-    * set *tmp175 :buildBlockFromCfg.1*retval
-    * write *tmp175 .controller ".smelter2"
+  256 write :buildBlockFromCfg.1*retval .controller ".smelter2"
   257 set :buildBlockFromCfg.1:cfg "T-*%%######"
   258 setaddr :buildBlockFromCfg.1*retaddr *label91 (h:*label91)
   259 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label91) (h:*label91)
 
   302 write @ore-titanium .display ".nextBlock"
   303 wait 0.000000001
   304 ubind @flare
-    * read *tmp52 .oreLocator ".locations"
-    * set :blocksBuildTitaniumDrills:current *tmp52
+  305 read :blocksBuildTitaniumDrills:current .oreLocator ".locations"
   306 write .coreX .oreLocator ":findDrillLocation:x"
   307 write .coreY .oreLocator ":findDrillLocation:y"
   308 write @unit .oreLocator ":findDrillLocation:unit"
 
   343 wait 1e-15
   344 read *tmp200 .oreLocator ":layoutThoriumDrill*finished"
   345 jump *label110 equal *tmp200 false
-    * read *tmp201 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp201
+  346 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
   347 op equal *tmp202 :buildThoriumDrill:result false
   348 jump *label111 equal *tmp202 false
   349 set :error:error "Cannot locate spot for thorium drill"
 
   366 wait 1e-15
   367 read *tmp209 .blockBuilder ":buildBlockAt*finished"
   368 jump *label114 equal *tmp209 false
-    * read *tmp210 .blockBuilder ":buildBlockAt*retval"
-    * set .thoriumDrill *tmp210
+  369 read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
   370 set :buildRemoteBlock:cfg "z%-AAA##A##"
-    * read *tmp56 .oreLocator ".water1X"
-    * set :buildRemoteBlock:x *tmp56
-    * read *tmp57 .oreLocator ".water1Y"
-    * set :buildRemoteBlock:y *tmp57
+  371 read :buildRemoteBlock:x .oreLocator ".water1X"
+  372 read :buildRemoteBlock:y .oreLocator ".water1Y"
   373 setaddr :buildRemoteBlock*retaddr *label115 (h:*label115)
   374 call *label35 *invalid :buildRemoteBlock*retval (m:*label115) (h:*label115)
   375 label *label115
   376 set :buildRemoteBlock:cfg "z%-AAA##A##"
-    * read *tmp60 .oreLocator ".water2X"
-    * set :buildRemoteBlock:x *tmp60
-    * read *tmp61 .oreLocator ".water2Y"
-    * set :buildRemoteBlock:y *tmp61
+  377 read :buildRemoteBlock:x .oreLocator ".water2X"
+  378 read :buildRemoteBlock:y .oreLocator ".water2Y"
   379 setaddr :buildRemoteBlock*retaddr *label116 (h:*label116)
   380 call *label35 *invalid :buildRemoteBlock*retval (m:*label116) (h:*label116)
   381 label *label116
   382 set :buildRemoteBlock:cfg "o%+FK<A####"
-    * read *tmp62 .oreLocator ".generatorX"
-    * set :buildRemoteBlock:x *tmp62
-    * read *tmp63 .oreLocator ".generatorY"
-    * set :buildRemoteBlock:y *tmp63
+  383 read :buildRemoteBlock:x .oreLocator ".generatorX"
+  384 read :buildRemoteBlock:y .oreLocator ".generatorY"
   385 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   386 call *label35 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   387 label *label117
-    * set *tmp213 :buildRemoteBlock*retval
-    * set .thoriumGenerator *tmp213
+  388 set .thoriumGenerator :buildRemoteBlock*retval
   389 set :buildRemoteBlock:cfg "g)'%)######"
-    * read *tmp64 .oreLocator ".nodeX"
-    * set :buildRemoteBlock:x *tmp64
-    * read *tmp65 .oreLocator ".nodeY"
-    * set :buildRemoteBlock:y *tmp65
+  390 read :buildRemoteBlock:x .oreLocator ".nodeX"
+  391 read :buildRemoteBlock:y .oreLocator ".nodeY"
   392 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   393 call *label35 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   394 label *label118
   395 set :buildRemoteBlock:cfg "r**#-#+####"
-    * read *tmp66 .oreLocator ".panelX"
-    * set :buildRemoteBlock:x *tmp66
-    * read *tmp67 .oreLocator ".panelY"
-    * set :buildRemoteBlock:y *tmp67
+  396 read :buildRemoteBlock:x .oreLocator ".panelX"
+  397 read :buildRemoteBlock:y .oreLocator ".panelY"
   398 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   399 call *label35 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   400 label *label119
   401 set :buildRemoteBlock:cfg "k*/(7######"
-    * read *tmp68 .oreLocator ".batteryX"
-    * set :buildRemoteBlock:x *tmp68
-    * read *tmp69 .oreLocator ".batteryY"
-    * set :buildRemoteBlock:y *tmp69
+  402 read :buildRemoteBlock:x .oreLocator ".batteryX"
+  403 read :buildRemoteBlock:y .oreLocator ".batteryY"
   404 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   405 call *label35 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   406 label *label120
   407 set :buildRemoteBlock:cfg "**#######"
-    * read *tmp58 .oreLocator ".containerX"
-    * set :buildRemoteBlock:x *tmp58
-    * read *tmp59 .oreLocator ".containerY"
-    * set :buildRemoteBlock:y *tmp59
+  408 read :buildRemoteBlock:x .oreLocator ".containerX"
+  409 read :buildRemoteBlock:y .oreLocator ".containerY"
   410 setaddr :buildRemoteBlock*retaddr *label121 (h:*label121)
   411 call *label35 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   412 label *label121
-    * set *tmp217 :buildRemoteBlock*retval
-    * set .thoriumContainer *tmp217
+  413 set .thoriumContainer :buildRemoteBlock*retval
   414 op equal *tmp218 .thoriumContainer null
   415 jump *label122 equal *tmp218 false
   416 set .thoriumContainer .thoriumDrill
 
   447 setaddr :buildBlockFromCfg*retaddr *label130 (h:*label130)
   448 call *label36 *invalid :buildBlockFromCfg*retval (m:*label130) (h:*label130)
   449 label *label130
-    * set *tmp223 :buildBlockFromCfg*retval
-    * write *tmp223 .controller ".unloader6"
+  450 write :buildBlockFromCfg*retval .controller ".unloader6"
   451 set :buildBlockFromCfg.1:cfg "X+''%######"
   452 setaddr :buildBlockFromCfg.1*retaddr *label131 (h:*label131)
   453 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label131) (h:*label131)
 
   496 label *label143
   497 label *label144
   498 jump *label146 equal true false
-    * op sub *tmp231 @thisy 6
-    * set :lineUpUnits:y *tmp231
+  499 op sub :lineUpUnits:y @thisy 6
   500 set :lineUpUnits:unit @mega
   501 setaddr :lineUpUnits*retaddr *label147 (h:*label147)
   502 call *label42 *invalid :lineUpUnits*retval (m:*label147) (h:*label147)
   503 label *label147
-    * op sub *tmp232 @thisy 10
-    * set :lineUpUnits:y *tmp232
+  504 op sub :lineUpUnits:y @thisy 10
   505 set :lineUpUnits:unit @poly
   506 setaddr :lineUpUnits*retaddr *label148 (h:*label148)
   507 call *label42 *invalid :lineUpUnits*retval (m:*label148) (h:*label148)
   508 label *label148
-    * op sub *tmp233 @thisy 14
-    * set :lineUpUnits:y *tmp233
+  509 op sub :lineUpUnits:y @thisy 14
   510 set :lineUpUnits:unit @mono
   511 setaddr :lineUpUnits*retaddr *label149 (h:*label149)
   512 call *label42 *invalid :lineUpUnits*retval (m:*label149) (h:*label149)
   513 label *label149
-    * op sub *tmp234 @thisy 18
-    * set :lineUpUnits:y *tmp234
+  514 op sub :lineUpUnits:y @thisy 18
   515 set :lineUpUnits:unit @flare
   516 setaddr :lineUpUnits*retaddr *label150 (h:*label150)
   517 call *label42 *invalid :lineUpUnits*retval (m:*label150) (h:*label150)
 
   626 setaddr :moveToBlock*retaddr *label180 (h:*label180)
   627 call *label18 *invalid :moveToBlock*retval (m:*label180) (h:*label180)
   628 label *label180
-    * sensor *tmp252 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp252
+  629 sensor :depositItems:cap :depositItems:block @itemCapacity
   630 label *label181
   631 ucontrol itemDrop :depositItems:block 30
   632 label *label182
 
   656 return :depositItems*retaddr
   657 end
   658 label *label20
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp259 *tmp260
+  659 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp259 0
   660 op equal *tmp261 *tmp259 false
   661 jump *label189 equal *tmp261 false
   662 set :error:error "Cannot locate ore"
 
   670 return :locateOre*retaddr
   671 end
   672 label *label21
-    * op min *tmp263 :mineOre:amount 30
-    * set :mineOre:amount *tmp263
+  673 op min :mineOre:amount :mineOre:amount 30
   674 set :transportStatus:target :mineOre:amount
   675 set :transportStatus:item :mineOre:ore
   676 setaddr :transportStatus*retaddr *label193 (h:*label193)
 
   700 setaddr :status3*retaddr *label199 (h:*label199)
   701 call *label11 *invalid :status3*retval (m:*label199) (h:*label199)
   702 label *label199
-    * op add *tmp267 @second 10
-    * set :mineOre:stop *tmp267
+  703 op add :mineOre:stop @second 10
   704 label *label200
-    * sensor *tmp268 @unit @firstItem
-    * set :mineOre:item *tmp268
+  705 sensor :mineOre:item @unit @firstItem
   706 op notEqual *tmp269 :mineOre:item null
   707 op notEqual *tmp270 :mineOre:item :mineOre:ore
   708 op land *tmp271 *tmp269 *tmp270
 
   739 setaddr :status2*retaddr *label209 (h:*label209)
   740 call *label10 *invalid :status2*retval (m:*label209) (h:*label209)
   741 label *label209
-    * set *tmp277 :mineOre.1:ore
-    * set :mineOre:ore *tmp277
+  742 set :mineOre:ore :mineOre.1:ore
   743 set :mineOre:amount 30
   744 set :mineOre:block .core
   745 setaddr :mineOre*retaddr *label210 (h:*label210)
 
   750 end
   751 label *label23
   752 sensor *tmp278 :fetchBlock:block @itemCapacity
-    * op min *tmp279 *tmp278 30
-    * set :transportStatus:target *tmp279
+  753 op min :transportStatus:target *tmp278 30
   754 set :transportStatus:item :fetchBlock:item
   755 setaddr :transportStatus*retaddr *label212 (h:*label212)
   756 call *label12 *invalid :transportStatus*retval (m:*label212) (h:*label212)
 
   773 label *label215
   774 label *label216
   775 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp282 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp282
+  776 sensor :fetchBlock:unitItem @unit @firstItem
   777 op notEqual *tmp283 :fetchBlock:unitItem null
   778 op notEqual *tmp284 :fetchBlock:unitItem :fetchBlock:item
   779 op land *tmp285 *tmp283 *tmp284
 
   804 setaddr :status2*retaddr *label223 (h:*label223)
   805 call *label10 *invalid :status2*retval (m:*label223) (h:*label223)
   806 label *label223
-    * sensor *tmp291 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp291
+  807 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   808 sensor *tmp292 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp293 :supplyBlock:blockCapacity *tmp292
-    * set :supplyBlock:missing *tmp293
+  809 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp292
   810 op greaterThan *tmp294 :supplyBlock:missing 0
   811 jump *label224 equal *tmp294 false
   812 set :mineOre:ore :supplyBlock:ore
 
   823 end
   824 label *label25
   825 sensor *tmp296 :supplyBlockFromCore:target @itemCapacity
-    * op min *tmp297 *tmp296 30
-    * set :transportStatus:target *tmp297
+  826 op min :transportStatus:target *tmp296 30
   827 set :transportStatus:item :supplyBlockFromCore:item
   828 setaddr :transportStatus*retaddr *label228 (h:*label228)
   829 call *label12 *invalid :transportStatus*retval (m:*label228) (h:*label228)
 
   844 label *label231
   845 label *label232
   846 ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor *tmp298 @unit @firstItem
-    * set :supplyBlockFromCore:unitItem *tmp298
+  847 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   848 op notEqual *tmp299 :supplyBlockFromCore:unitItem null
   849 op notEqual *tmp300 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
   850 op land *tmp301 *tmp299 *tmp300
 
   874 op add :unpackCfg:index :unpackCfg:index 1
   875 read *tmp308 :unpackCfg:cfg *tmp307
   876 op sub *tmp309 *tmp308 35
-    * lookup block *tmp310 *tmp309
-    * set :unpackCfg:type *tmp310
+  877 lookup block :unpackCfg:type *tmp309
   878 set *tmp311 :unpackCfg:index
   879 op add :unpackCfg:index :unpackCfg:index 1
   880 read *tmp312 :unpackCfg:cfg *tmp311
   881 op sub *tmp313 *tmp312 35
-    * op sub *tmp314 *tmp313 7
-    * set :unpackCfg:x *tmp314
+  882 op sub :unpackCfg:x *tmp313 7
   883 set *tmp315 :unpackCfg:index
   884 op add :unpackCfg:index :unpackCfg:index 1
   885 read *tmp316 :unpackCfg:cfg *tmp315
   886 op sub *tmp317 *tmp316 35
-    * op sub *tmp318 *tmp317 7
-    * set :unpackCfg:y *tmp318
+  887 op sub :unpackCfg:y *tmp317 7
   888 set *tmp319 :unpackCfg:index
   889 op add :unpackCfg:index :unpackCfg:index 1
   890 read *tmp320 :unpackCfg:cfg *tmp319
-    * op sub *tmp321 *tmp320 35
-    * set :unpackCfg:cu *tmp321
+  891 op sub :unpackCfg:cu *tmp320 35
   892 set *tmp322 :unpackCfg:index
   893 op add :unpackCfg:index :unpackCfg:index 1
   894 read *tmp323 :unpackCfg:cfg *tmp322
-    * op sub *tmp324 *tmp323 35
-    * set :unpackCfg:pb *tmp324
+  895 op sub :unpackCfg:pb *tmp323 35
   896 set *tmp325 :unpackCfg:index
   897 op add :unpackCfg:index :unpackCfg:index 1
   898 read *tmp326 :unpackCfg:cfg *tmp325
-    * op sub *tmp327 *tmp326 35
-    * set :unpackCfg:gr *tmp327
+  899 op sub :unpackCfg:gr *tmp326 35
   900 set *tmp328 :unpackCfg:index
   901 op add :unpackCfg:index :unpackCfg:index 1
   902 read *tmp329 :unpackCfg:cfg *tmp328
-    * op sub *tmp330 *tmp329 35
-    * set :unpackCfg:si *tmp330
+  903 op sub :unpackCfg:si *tmp329 35
   904 set *tmp331 :unpackCfg:index
   905 op add :unpackCfg:index :unpackCfg:index 1
   906 read *tmp332 :unpackCfg:cfg *tmp331
-    * op sub *tmp333 *tmp332 35
-    * set :unpackCfg:ti *tmp333
+  907 op sub :unpackCfg:ti *tmp332 35
   908 set *tmp334 :unpackCfg:index
   909 op add :unpackCfg:index :unpackCfg:index 1
   910 read *tmp335 :unpackCfg:cfg *tmp334
-    * op sub *tmp336 *tmp335 35
-    * set :unpackCfg:mg *tmp336
+  911 op sub :unpackCfg:mg *tmp335 35
   912 set *tmp337 :unpackCfg:index
   913 op add :unpackCfg:index :unpackCfg:index 1
   914 read *tmp338 :unpackCfg:cfg *tmp337
-    * op sub *tmp339 *tmp338 35
-    * set :unpackCfg:th *tmp339
+  915 op sub :unpackCfg:th *tmp338 35
   916 set *tmp340 :unpackCfg:index
   917 op add :unpackCfg:index :unpackCfg:index 1
   918 read *tmp341 :unpackCfg:cfg *tmp340
-    * op sub *tmp342 *tmp341 35
-    * set :unpackCfg:rotation *tmp342
+  919 op sub :unpackCfg:rotation *tmp341 35
   920 label *label238
   921 return :unpackCfg*retaddr
   922 end
 
  1061 jump *label279 equal *tmp376 false
  1062 sensor *tmp378 .core @titanium
  1063 op sub *tmp379 .targetTitanium *tmp378
-    * op min *tmp380 7 *tmp379
-    * set *tmp377 *tmp380
+ 1064 op min *tmp377 7 *tmp379
  1065 jump *label280 always
  1066 label *label279
  1067 set *tmp377 100
 
  1093 setaddr :status1*retaddr *label291 (h:*label291)
  1094 call *label9 *invalid :status1*retval (m:*label291) (h:*label291)
  1095 label *label291
-    * sensor *tmp393 .core @coal
-    * set :supplyBase0:coal *tmp393
-    * sensor *tmp394 .core @sand
-    * set :supplyBase0:sand *tmp394
+ 1096 sensor :supplyBase0:coal .core @coal
+ 1097 sensor :supplyBase0:sand .core @sand
  1098 op lessThan *tmp395 :supplyBase0:coal :supplyBase0:sand
  1099 jump *label292 equal *tmp395 false
  1100 set *tmp396 @coal
 
  1152 setaddr :status1*retaddr *label307 (h:*label307)
  1153 call *label9 *invalid :status1*retval (m:*label307) (h:*label307)
  1154 label *label307
-    * sensor *tmp406 .core @coal
-    * set :supplyBase0:coal.1 *tmp406
-    * sensor *tmp407 .core @sand
-    * set :supplyBase0:sand.1 *tmp407
+ 1155 sensor :supplyBase0:coal.1 .core @coal
+ 1156 sensor :supplyBase0:sand.1 .core @sand
  1157 op lessThanEq *tmp408 :supplyBase0:coal.1 :supplyBase0:sand.1
  1158 jump *label308 equal *tmp408 false
  1159 set *tmp409 @coal
 
  1238 write :meetTarget:thorium .display ".targetThorium"
  1239 set .targetCopper :meetTarget:copper
  1240 op add *tmp412 :meetTarget:lead .leadSurplus
-    * op add *tmp413 *tmp412 1
-    * set .targetLead *tmp413
+ 1241 op add .targetLead *tmp412 1
  1242 set .targetGraphite :meetTarget:graphite
  1243 set .targetSilicon :meetTarget:silicon
  1244 set .targetTitanium :meetTarget:titanium
 
  1357 wait 1e-15
  1358 read *tmp467 .blockBuilder ":buildBlockAt*finished"
  1359 jump *label348 equal *tmp467 false
-    * read *tmp468 .blockBuilder ":buildBlockAt*retval"
-    * set :buildBlock*retval *tmp468
+ 1360 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1361 jump *label346 always
  1362 set :buildBlock*retval null
  1363 label *label346
 
  1446 return :buildBlockFromCfg*retaddr
  1447 end
  1448 label *label37
-    * set *tmp474 :buildBlockFromCfg.1:cfg
-    * set :buildBlockFromCfg:cfg *tmp474
+ 1449 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
  1450 set :buildBlockFromCfg:config null
  1451 setaddr :buildBlockFromCfg*retaddr *label358 (h:*label358)
  1452 call *label36 *invalid :buildBlockFromCfg*retval (m:*label358) (h:*label358)
 
  1505 label *label41
  1506 label *label368
  1507 ubind :flagUnits:unit
-    * set *tmp482 @unit
-    * set :flagUnits:firstUnit *tmp482
+ 1508 set :flagUnits:firstUnit @unit
  1509 label *label369
  1510 op equal *tmp483 :flagUnits:firstUnit null
  1511 jump *label368 notEqual *tmp483 false
 
  1526 ubind :lineUpUnits:unit
  1527 set :lineUpUnits:firstUnit @unit
  1528 label *label375
-    * sensor *tmp485 @unit @flag
-    * set :lineUpUnits:x *tmp485
+ 1529 sensor :lineUpUnits:x @unit @flag
  1530 ucontrol itemDrop @air 1000
  1531 ucontrol move :lineUpUnits:x :lineUpUnits:y
  1532 sensor *tmp486 @unit @mining

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   495 call *label41 *invalid :flagUnits*retval (m:*label143) (h:*label143)
   496 label *label143
   497 label *label144
-    * jump *label146 equal true false
   498 op sub :lineUpUnits:y @thisy 6
   499 set :lineUpUnits:unit @mega
   500 setaddr :lineUpUnits*retaddr *label147 (h:*label147)

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-54 instructions):
 
    22 set .builder @unit
    23 ulocate building core false @copper .coreX .coreY 0 .core
    24 label *label44
-    * op equal *tmp125 .core null
-    * jump *label43 notEqual *tmp125 false
+   25 jump *label43 equal .core null
    26 label *label45
    27 set :buildBlockFromCfg.1:cfg "#'+nA######"
    28 setaddr :buildBlockFromCfg.1*retaddr *label46 (h:*label46)
 
    75 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
    76 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
    77 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp145 :buildFirstTitaniumDrill:result false
-    * jump *label55 equal *tmp145 false
+   78 jump *label55 notEqual :buildFirstTitaniumDrill:result false
    79 set :error:error "Cannot locate spot for titanium drill"
    80 setaddr :error*retaddr *label57 (h:*label57)
    81 call *label13 *invalid :error*retval (m:*label57) (h:*label57)
 
   164 call *label32 *invalid :supplyBase*retval (m:*label72) (h:*label72)
   165 label *label72
   166 sensor *tmp158 .battery @totalPower
-    * op lessThan *tmp159 *tmp158 300
-    * jump *label73 equal *tmp159 false
+  167 jump *label73 greaterThanEq *tmp158 300
   168 jump *label71 always
   169 jump *label74 always
   170 label *label73
   171 label *label74
   172 label *label70
   173 read *tmp97 .controller ".monos"
-    * op lessThan *tmp161 *tmp97 3
-    * jump *label69 notEqual *tmp161 false
+  174 jump *label69 lessThan *tmp97 3
   175 label *label71
   176 set .siliconSurplus 65
   177 set :buildBlockFromCfg.1:cfg ",)###A<###"
 
   268 label *label94
   269 label *label95
   270 read *tmp98 .controller ".polys"
-    * op lessThan *tmp179 *tmp98 3
-    * jump *label97 equal *tmp179 false
+  271 jump *label97 greaterThanEq *tmp98 3
   272 setaddr :supplyBase*retaddr *label98 (h:*label98)
   273 call *label32 *invalid :supplyBase*retval (m:*label98) (h:*label98)
   274 label *label98
 
   281 label *label99
   282 label *label100
   283 read *tmp96 .controller ".flares"
-    * op lessThan *tmp180 *tmp96 2
-    * jump *label102 equal *tmp180 false
+  284 jump *label102 greaterThanEq *tmp96 2
   285 setaddr :supplyBase*retaddr *label103 (h:*label103)
   286 call *label32 *invalid :supplyBase*retval (m:*label103) (h:*label103)
   287 label *label103
 
   338 read *tmp200 .oreLocator ":layoutThoriumDrill*finished"
   339 jump *label110 equal *tmp200 false
   340 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp202 :buildThoriumDrill:result false
-    * jump *label111 equal *tmp202 false
+  341 jump *label111 notEqual :buildThoriumDrill:result false
   342 set :error:error "Cannot locate spot for thorium drill"
   343 setaddr :error*retaddr *label113 (h:*label113)
   344 call *label13 *invalid :error*retval (m:*label113) (h:*label113)
 
   404 call *label35 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   405 label *label121
   406 set .thoriumContainer :buildRemoteBlock*retval
-    * op equal *tmp218 .thoriumContainer null
-    * jump *label122 equal *tmp218 false
+  407 jump *label122 notEqual .thoriumContainer null
   408 set .thoriumContainer .thoriumDrill
   409 jump *label123 always
   410 label *label122
 
   426 label *label125
   427 label *label126
   428 read *tmp98 .controller ".polys"
-    * op lessThan *tmp222 *tmp98 5
-    * jump *label128 equal *tmp222 false
+  429 jump *label128 greaterThanEq *tmp98 5
   430 setaddr :supplyBase*retaddr *label129 (h:*label129)
   431 call *label32 *invalid :supplyBase*retval (m:*label129) (h:*label129)
   432 label *label129
 
   456 label *label134
   457 label *label135
   458 read *tmp99 .controller ".megas"
-    * op lessThan *tmp225 *tmp99 1
-    * jump *label137 equal *tmp225 false
+  459 jump *label137 greaterThanEq *tmp99 1
   460 setaddr :supplyBase*retaddr *label138 (h:*label138)
   461 call *label32 *invalid :supplyBase*retval (m:*label138) (h:*label138)
   462 label *label138
 
   546 label *label157
   547 label *label158
   548 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp235
-    * op equal *tmp236 *tmp235 false
-    * jump *label160 equal *tmp236 false
+  549 jump *label160 notEqual *tmp235 false
   550 op sub *tmp237 :moveTo:radius 0.5
   551 ucontrol approach :moveTo:x :moveTo:y *tmp237
   552 label *label159
 
   562 label *label164
   563 label *label165
   564 sensor *tmp240 @unit @firstItem
-    * op notEqual *tmp241 *tmp240 null
-    * jump *label168 equal *tmp241 false
+  565 jump *label168 equal *tmp240 null
   566 ucontrol itemDrop @air 1000
   567 jump *label169 always
   568 label *label168
 
   570 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   571 label *label166
   572 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp243
-    * op equal *tmp244 *tmp243 false
-    * jump *label165 notEqual *tmp244 false
+  573 jump *label165 equal *tmp243 false
   574 label *label167
   575 label *label163
   576 return :moveToEmpty*retaddr
 
   578 label *label17
   579 label *label171
   580 sensor *tmp245 @unit @firstItem
-    * op notEqual *tmp246 *tmp245 null
-    * jump *label173 equal *tmp246 false
+  581 jump *label173 equal *tmp245 null
   582 ucontrol itemDrop @air 1000
   583 label *label172
   584 jump *label171 always
 
   604 call *label11 *invalid :status3*retval (m:*label177) (h:*label177)
   605 label *label177
   606 sensor *tmp249 @unit @firstItem
-    * op equal *tmp250 *tmp249 :depositItems:item
-    * jump *label178 equal *tmp250 false
+  607 jump *label178 notEqual *tmp249 :depositItems:item
   608 set :moveToBlock:block :depositItems:block
   609 set :moveToBlock:radius 6
   610 setaddr :moveToBlock*retaddr *label180 (h:*label180)
 
   617 sensor *tmp253 @unit @firstItem
   618 op mul *tmp254 *tmp253 :depositItems:cap
   619 sensor *tmp255 :depositItems:block :depositItems:item
-    * op greaterThan *tmp256 *tmp254 *tmp255
-    * jump *label181 notEqual *tmp256 false
+  620 jump *label181 greaterThan *tmp254 *tmp255
   621 label *label183
   622 jump *label179 always
   623 label *label178
   624 label *label184
   625 sensor *tmp257 @unit @firstItem
-    * op notEqual *tmp258 *tmp257 null
-    * jump *label186 equal *tmp258 false
+  626 jump *label186 equal *tmp257 null
   627 ucontrol itemDrop @air 1000
   628 label *label185
   629 jump *label184 always
 
   639 end
   640 label *label20
   641 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp259 0
-    * op equal *tmp261 *tmp259 false
-    * jump *label189 equal *tmp261 false
+  642 jump *label189 notEqual *tmp259 false
   643 set :error:error "Cannot locate ore"
   644 setaddr :error*retaddr *label191 (h:*label191)
   645 call *label13 *invalid :error*retval (m:*label191) (h:*label191)
 
   669 call *label16 *invalid :moveToEmpty*retval (m:*label195) (h:*label195)
   670 label *label195
   671 sensor *tmp264 @unit @firstItem
-    * op notEqual *tmp265 *tmp264 :mineOre:ore
-    * jump *label196 equal *tmp265 false
+  672 jump *label196 equal *tmp264 :mineOre:ore
   673 setaddr :dropAll*retaddr *label198 (h:*label198)
   674 call *label17 *invalid :dropAll*retval (m:*label198) (h:*label198)
   675 label *label198
 
   692 label *label203
   693 label *label204
   694 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp273 @second :mineOre:stop
-    * jump *label205 equal *tmp273 false
+  695 jump *label205 lessThanEq @second :mineOre:stop
   696 jump *label202 always
   697 jump *label206 always
   698 label *label205
   699 label *label206
   700 label *label201
   701 sensor *tmp275 @unit @totalItems
-    * op lessThan *tmp276 *tmp275 :mineOre:amount
-    * jump *label200 notEqual *tmp276 false
+  702 jump *label200 lessThan *tmp275 :mineOre:amount
   703 label *label202
   704 ucontrol unbind
   705 set :depositItems:block :mineOre:block
 
   785 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   786 sensor *tmp292 :supplyBlock:block :supplyBlock:ore
   787 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp292
-    * op greaterThan *tmp294 :supplyBlock:missing 0
-    * jump *label224 equal *tmp294 false
+  788 jump *label224 lessThanEq :supplyBlock:missing 0
   789 set :mineOre:ore :supplyBlock:ore
   790 set :mineOre:amount :supplyBlock:blockCapacity
   791 set :mineOre:block :supplyBlock:block
 
   908 call *label9 *invalid :status1*retval (m:*label243) (h:*label243)
   909 label *label243
   910 sensor *tmp347 .core @coal
-    * op lessThan *tmp348 *tmp347 50
-    * jump *label244 equal *tmp348 false
+  911 jump *label244 greaterThanEq *tmp347 50
   912 set :supplyBlock:block .thoriumGenerator
   913 set :supplyBlock:ore @coal
   914 setaddr :supplyBlock*retaddr *label246 (h:*label246)
 
   931 jump *label241 always
   932 label *label240
   933 read *tmp97 .controller ".monos"
-    * op greaterThan *tmp350 *tmp97 3
-    * jump *label249 equal *tmp350 false
+  934 jump *label249 lessThanEq *tmp97 3
   935 set :status1:text "Phase 1: supplying base"
   936 setaddr :status1*retaddr *label252 (h:*label252)
   937 call *label9 *invalid :status1*retval (m:*label252) (h:*label252)
 
   944 jump *label250 always
   945 label *label249
   946 set :supplyBase0:supplied false
-    * op equal *tmp352 .unloader1 null
-    * jump *label255 equal *tmp352 false
+  947 jump *label255 notEqual .unloader1 null
   948 sensor *tmp354 .core @graphite
-    * op lessThan *tmp355 *tmp354 .targetGraphite
-    * jump *label257 equal *tmp355 false
+  949 jump *label257 greaterThanEq *tmp354 .targetGraphite
   950 sensor *tmp357 .press @coal
-    * op lessThan *tmp358 *tmp357 5
-    * jump *label259 equal *tmp358 false
+  951 jump *label259 greaterThanEq *tmp357 5
   952 set :status1:text "Goal 1: graphite requirement"
   953 setaddr :status1*retaddr *label261 (h:*label261)
   954 call *label9 *invalid :status1*retval (m:*label261) (h:*label261)
 
   966 label *label257
   967 label *label258
   968 sensor *tmp360 .core @silicon
-    * op lessThan *tmp361 *tmp360 .targetSilicon
-    * jump *label263 equal *tmp361 false
+  969 jump *label263 greaterThanEq *tmp360 .targetSilicon
   970 sensor *tmp363 .smelter @coal
-    * op lessThan *tmp364 *tmp363 5
-    * jump *label265 equal *tmp364 false
+  971 jump *label265 greaterThanEq *tmp363 5
   972 set :status1:text "Goal 2: coal for silicon requirement"
   973 setaddr :status1*retaddr *label267 (h:*label267)
   974 call *label9 *invalid :status1*retval (m:*label267) (h:*label267)
 
   982 jump *label266 always
   983 label *label265
   984 sensor *tmp366 .smelter @sand
-    * op lessThan *tmp367 *tmp366 5
-    * jump *label269 equal *tmp367 false
+  985 jump *label269 greaterThanEq *tmp366 5
   986 set :status1:text "Goal 3: sand for silicon requirement"
   987 setaddr :status1*retaddr *label271 (h:*label271)
   988 call *label9 *invalid :status1*retval (m:*label271) (h:*label271)
 
  1001 label *label263
  1002 label *label264
  1003 sensor *tmp369 .battery @totalPower
-    * op lessThan *tmp370 *tmp369 .powerTarget
-    * jump *label273 equal *tmp370 false
+ 1004 jump *label273 greaterThanEq *tmp369 .powerTarget
  1005 sensor *tmp372 .generator @coal
-    * op lessThan *tmp373 *tmp372 2
-    * jump *label275 equal *tmp373 false
+ 1006 jump *label275 greaterThanEq *tmp372 2
  1007 set :status1:text "Goal 4: supplying generator"
  1008 setaddr :status1*retaddr *label277 (h:*label277)
  1009 call *label9 *invalid :status1*retval (m:*label277) (h:*label277)
 
  1024 label *label255
  1025 label *label256
  1026 sensor *tmp375 .core @titanium
-    * op lessThan *tmp376 *tmp375 .targetTitanium
-    * jump *label279 equal *tmp376 false
+ 1027 jump *label279 greaterThanEq *tmp375 .targetTitanium
  1028 sensor *tmp378 .core @titanium
  1029 op sub *tmp379 .targetTitanium *tmp378
  1030 op min *tmp377 7 *tmp379
 
  1034 label *label280
  1035 set :supplyBase0:titaniumTrigger *tmp377
  1036 sensor *tmp381 .titaniumDrill @titanium
-    * op lessThan *tmp382 *tmp381 :supplyBase0:titaniumTrigger
-    * jump *label281 equal *tmp382 false
-    * op equal *tmp384 :supplyBase0:supplied false
-    * jump *label283 equal *tmp384 false
+ 1037 jump *label281 greaterThanEq *tmp381 :supplyBase0:titaniumTrigger
+ 1038 jump *label283 notEqual :supplyBase0:supplied false
  1039 sensor *tmp386 .battery @totalPower
  1040 op mul *tmp387 .unloader1 .powerTarget
-    * op lessThan *tmp388 *tmp386 *tmp387
-    * jump *label285 equal *tmp388 false
+ 1041 jump *label285 greaterThanEq *tmp386 *tmp387
  1042 set :status1:text "Goal 5: supplying generator"
  1043 setaddr :status1*retaddr *label287 (h:*label287)
  1044 call *label9 *invalid :status1*retval (m:*label287) (h:*label287)
 
  1050 jump *label286 always
  1051 label *label285
  1052 sensor *tmp390 .core @silicon
-    * op lessThan *tmp391 *tmp390 .targetSilicon
-    * jump *label289 equal *tmp391 false
+ 1053 jump *label289 greaterThanEq *tmp390 .targetSilicon
  1054 set :status1:text "Goal 6: silicon requirement"
  1055 setaddr :status1*retaddr *label291 (h:*label291)
  1056 call *label9 *invalid :status1*retval (m:*label291) (h:*label291)
  1057 label *label291
  1058 sensor :supplyBase0:coal .core @coal
  1059 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp395 :supplyBase0:coal :supplyBase0:sand
-    * jump *label292 equal *tmp395 false
+ 1060 jump *label292 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1061 set *tmp396 @coal
  1062 jump *label293 always
  1063 label *label292
 
  1071 jump *label290 always
  1072 label *label289
  1073 sensor *tmp397 .core @copper
-    * op lessThan *tmp398 *tmp397 .targetCopper
-    * jump *label295 equal *tmp398 false
+ 1074 jump *label295 greaterThanEq *tmp397 .targetCopper
  1075 set :status1:text "Goal 7: copper requirement"
  1076 setaddr :status1*retaddr *label297 (h:*label297)
  1077 call *label9 *invalid :status1*retval (m:*label297) (h:*label297)
 
  1083 jump *label296 always
  1084 label *label295
  1085 sensor *tmp400 .core @lead
-    * op lessThan *tmp401 *tmp400 .targetLead
-    * jump *label299 equal *tmp401 false
+ 1086 jump *label299 greaterThanEq *tmp400 .targetLead
  1087 set :status1:text "Goal 8: lead requirement"
  1088 setaddr :status1*retaddr *label301 (h:*label301)
  1089 call *label9 *invalid :status1*retval (m:*label301) (h:*label301)
 
  1095 jump *label300 always
  1096 label *label299
  1097 sensor *tmp403 .core @metaglass
-    * op lessThan *tmp404 *tmp403 .targetMetaglass
-    * jump *label303 equal *tmp404 false
+ 1098 jump *label303 greaterThanEq *tmp403 .targetMetaglass
  1099 set :status1:text "Goal 9: metaglass requirement"
  1100 setaddr :status1*retaddr *label305 (h:*label305)
  1101 call *label9 *invalid :status1*retval (m:*label305) (h:*label305)
 
  1112 label *label307
  1113 sensor :supplyBase0:coal.1 .core @coal
  1114 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp408 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label308 equal *tmp408 false
+ 1115 jump *label308 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1116 set *tmp409 @coal
  1117 jump *label309 always
  1118 label *label308
 
  1221 write .targetCopper processor8 ".monoCopperTarget"
  1222 label *label324
  1223 sensor *tmp425 .core @copper
-    * op lessThan *tmp426 *tmp425 .targetCopper
-    * jump *label328 equal *tmp426 false
+ 1224 jump *label328 greaterThanEq *tmp425 .targetCopper
  1225 set *tmp424 false
  1226 jump *label327 always
  1227 jump *label329 always
  1228 label *label328
  1229 label *label329
  1230 sensor *tmp428 .core @lead
-    * op lessThan *tmp429 *tmp428 .targetLead
-    * jump *label330 equal *tmp429 false
+ 1231 jump *label330 greaterThanEq *tmp428 .targetLead
  1232 set *tmp424 false
  1233 jump *label327 always
  1234 jump *label331 always
  1235 label *label330
  1236 label *label331
  1237 sensor *tmp431 .core @graphite
-    * op lessThan *tmp432 *tmp431 .targetGraphite
-    * jump *label332 equal *tmp432 false
+ 1238 jump *label332 greaterThanEq *tmp431 .targetGraphite
  1239 set *tmp424 false
  1240 jump *label327 always
  1241 jump *label333 always
  1242 label *label332
  1243 label *label333
  1244 sensor *tmp434 .core @silicon
-    * op lessThan *tmp435 *tmp434 .targetSilicon
-    * jump *label334 equal *tmp435 false
+ 1245 jump *label334 greaterThanEq *tmp434 .targetSilicon
  1246 set *tmp424 false
  1247 jump *label327 always
  1248 jump *label335 always
  1249 label *label334
  1250 label *label335
  1251 sensor *tmp437 .core @titanium
-    * op lessThan *tmp438 *tmp437 .targetTitanium
-    * jump *label336 equal *tmp438 false
+ 1252 jump *label336 greaterThanEq *tmp437 .targetTitanium
  1253 set *tmp424 false
  1254 jump *label327 always
  1255 jump *label337 always
  1256 label *label336
  1257 label *label337
  1258 sensor *tmp440 .core @metaglass
-    * op lessThan *tmp441 *tmp440 .targetMetaglass
-    * jump *label338 equal *tmp441 false
+ 1259 jump *label338 greaterThanEq *tmp440 .targetMetaglass
  1260 set *tmp424 false
  1261 jump *label327 always
  1262 jump *label339 always
  1263 label *label338
  1264 label *label339
  1265 sensor *tmp443 .core @thorium
-    * op lessThan *tmp444 *tmp443 .targetThorium
-    * jump *label340 equal *tmp444 false
+ 1266 jump *label340 greaterThanEq *tmp443 .targetThorium
  1267 set *tmp424 false
  1268 jump *label327 always
  1269 jump *label341 always
 
  1273 jump *label327 always
  1274 set *tmp424 null
  1275 label *label327
-    * op equal *tmp446 *tmp424 false
-    * jump *label326 equal *tmp446 false
+ 1276 jump *label326 notEqual *tmp424 false
  1277 setaddr :supplyBase*retaddr *label342 (h:*label342)
  1278 call *label32 *invalid :supplyBase*retval (m:*label342) (h:*label342)
  1279 label *label342
 
  1314 end
  1315 label *label35
  1316 op add *tmp469 :buildRemoteBlock:x :buildRemoteBlock:y
-    * op greaterThan *tmp470 *tmp469 0
-    * jump *label350 equal *tmp470 false
+ 1317 jump *label350 lessThanEq *tmp469 0
  1318 set :unpackCfg:cfg :buildRemoteBlock:cfg
  1319 setaddr :unpackCfg*retaddr *label352 (h:*label352)
  1320 call *label31 *invalid :unpackCfg*retval (m:*label352) (h:*label352)
 
  1455 ubind :flagUnits:unit
  1456 set :flagUnits:firstUnit @unit
  1457 label *label369
-    * op equal *tmp483 :flagUnits:firstUnit null
-    * jump *label368 notEqual *tmp483 false
+ 1458 jump *label368 equal :flagUnits:firstUnit null
  1459 label *label370
  1460 set :flagUnits:x @thisx
  1461 label *label371
 
  1463 op add :flagUnits:x :flagUnits:x 4
  1464 ubind :flagUnits:unit
  1465 label *label372
-    * op notEqual *tmp484 @unit :flagUnits:firstUnit
-    * jump *label371 notEqual *tmp484 false
+ 1466 jump *label371 notEqual @unit :flagUnits:firstUnit
  1467 label *label373
  1468 label *label367
  1469 return :flagUnits*retaddr
 
  1483 label *label379
  1484 ubind :lineUpUnits:unit
  1485 label *label376
-    * op notEqual *tmp488 @unit :lineUpUnits:firstUnit
-    * jump *label375 notEqual *tmp488 false
+ 1486 jump *label375 notEqual @unit :lineUpUnits:firstUnit
  1487 label *label377
  1488 label *label374
  1489 return :lineUpUnits*retaddr

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-29 instructions):
 
    80 setaddr :error*retaddr *label57 (h:*label57)
    81 call *label13 *invalid :error*retval (m:*label57) (h:*label57)
    82 label *label57
-    * jump *label56 always
    83 label *label55
    84 label *label56
    85 write @pneumatic-drill .display ".nextBlock"
 
   165 sensor *tmp158 .battery @totalPower
   166 jump *label73 greaterThanEq *tmp158 300
   167 jump *label71 always
-    * jump *label74 always
   168 label *label73
   169 label *label74
   170 label *label70
 
   341 setaddr :error*retaddr *label113 (h:*label113)
   342 call *label13 *invalid :error*retval (m:*label113) (h:*label113)
   343 label *label113
-    * jump *label112 always
   344 label *label111
   345 label *label112
   346 write @laser-drill .blockBuilder ":buildBlockAt:block"
 
   403 set .thoriumContainer :buildRemoteBlock*retval
   404 jump *label122 notEqual .thoriumContainer null
   405 set .thoriumContainer .thoriumDrill
-    * jump *label123 always
   406 label *label122
   407 label *label123
   408 write .thoriumDrill .display ".thoriumDrill"
 
   560 sensor *tmp240 @unit @firstItem
   561 jump *label168 equal *tmp240 null
   562 ucontrol itemDrop @air 1000
-    * jump *label169 always
   563 label *label168
   564 label *label169
   565 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
   639 setaddr :error*retaddr *label191 (h:*label191)
   640 call *label13 *invalid :error*retval (m:*label191) (h:*label191)
   641 label *label191
-    * jump *label190 always
   642 label *label189
   643 label *label190
   644 label *label188
 
   667 setaddr :dropAll*retaddr *label198 (h:*label198)
   668 call *label17 *invalid :dropAll*retval (m:*label198) (h:*label198)
   669 label *label198
-    * jump *label197 always
   670 label *label196
   671 label *label197
   672 set :status3:text "Mining..."
 
   681 op land *tmp271 *tmp269 *tmp270
   682 jump *label203 equal *tmp271 false
   683 jump *label202 always
-    * jump *label204 always
   684 label *label203
   685 label *label204
   686 ucontrol mine :mineOre:x :mineOre:y
   687 jump *label205 lessThanEq @second :mineOre:stop
   688 jump *label202 always
-    * jump *label206 always
   689 label *label205
   690 label *label206
   691 label *label201
 
   748 op land *tmp285 *tmp283 *tmp284
   749 jump *label219 equal *tmp285 false
   750 ucontrol itemDrop @air 1000
-    * jump *label220 always
   751 label *label219
   752 label *label220
   753 label *label217
 
   782 setaddr :mineOre*retaddr *label226 (h:*label226)
   783 call *label21 *invalid :mineOre*retval (m:*label226) (h:*label226)
   784 label *label226
-    * jump *label225 always
   785 label *label224
   786 label *label225
   787 label *label222
 
   816 op land *tmp301 *tmp299 *tmp300
   817 jump *label235 equal *tmp301 false
   818 ucontrol itemDrop @air 1000
-    * jump *label236 always
   819 label *label235
   820 label *label236
   821 label *label233
 
   947 call *label24 *invalid :supplyBlock*retval (m:*label262) (h:*label262)
   948 label *label262
   949 set :supplyBase0:supplied true
-    * jump *label260 always
   950 label *label259
   951 label *label260
-    * jump *label258 always
   952 label *label257
   953 label *label258
   954 sensor *tmp360 .core @silicon
 
   979 call *label24 *invalid :supplyBlock*retval (m:*label272) (h:*label272)
   980 label *label272
   981 set :supplyBase0:supplied true
-    * jump *label270 always
   982 label *label269
   983 label *label270
   984 label *label266
-    * jump *label264 always
   985 label *label263
   986 label *label264
   987 sensor *tmp369 .battery @totalPower
 
   998 call *label24 *invalid :supplyBlock*retval (m:*label278) (h:*label278)
   999 label *label278
  1000 set :supplyBase0:supplied true
-    * jump *label276 always
  1001 label *label275
  1002 label *label276
-    * jump *label274 always
  1003 label *label273
  1004 label *label274
-    * jump *label256 always
  1005 label *label255
  1006 label *label256
  1007 sensor *tmp375 .core @titanium
 
  1109 label *label296
  1110 label *label290
  1111 label *label286
-    * jump *label284 always
  1112 label *label283
  1113 label *label284
  1114 jump *label282 always
 
  1204 jump *label328 greaterThanEq *tmp425 .targetCopper
  1205 set *tmp424 false
  1206 jump *label327 always
-    * jump *label329 always
  1207 label *label328
  1208 label *label329
  1209 sensor *tmp428 .core @lead
  1210 jump *label330 greaterThanEq *tmp428 .targetLead
  1211 set *tmp424 false
  1212 jump *label327 always
-    * jump *label331 always
  1213 label *label330
  1214 label *label331
  1215 sensor *tmp431 .core @graphite
  1216 jump *label332 greaterThanEq *tmp431 .targetGraphite
  1217 set *tmp424 false
  1218 jump *label327 always
-    * jump *label333 always
  1219 label *label332
  1220 label *label333
  1221 sensor *tmp434 .core @silicon
  1222 jump *label334 greaterThanEq *tmp434 .targetSilicon
  1223 set *tmp424 false
  1224 jump *label327 always
-    * jump *label335 always
  1225 label *label334
  1226 label *label335
  1227 sensor *tmp437 .core @titanium
  1228 jump *label336 greaterThanEq *tmp437 .targetTitanium
  1229 set *tmp424 false
  1230 jump *label327 always
-    * jump *label337 always
  1231 label *label336
  1232 label *label337
  1233 sensor *tmp440 .core @metaglass
  1234 jump *label338 greaterThanEq *tmp440 .targetMetaglass
  1235 set *tmp424 false
  1236 jump *label327 always
-    * jump *label339 always
  1237 label *label338
  1238 label *label339
  1239 sensor *tmp443 .core @thorium
  1240 jump *label340 greaterThanEq *tmp443 .targetThorium
  1241 set *tmp424 false
  1242 jump *label327 always
-    * jump *label341 always
  1243 label *label340
  1244 label *label341
  1245 set *tmp424 true
 
  1318 label *label353
  1319 set :buildRemoteBlock*retval :buildBlock*retval
  1320 jump *label349 always
-    * jump *label351 always
  1321 label *label350
  1322 label *label351
  1323 set :buildRemoteBlock*retval false
 
  1450 sensor *tmp486 @unit @mining
  1451 jump *label378 equal *tmp486 false
  1452 ucontrol stop
-    * jump *label379 always
  1453 label *label378
  1454 label *label379
  1455 ubind :lineUpUnits:unit

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-8 instructions):
 
     8 set .smelter null
     9 set .titaniumDrill null
    10 set .unloader1 null
-    * set .kiln null
-    * set .thoriumDrill null
    11 set .thoriumContainer null
    12 set .thoriumGenerator null
    13 set .leadSurplus 0
 
    52 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label51) (h:*label51)
    53 label *label51
    54 set :buildFirstTitaniumDrill:cfg "w**5#-#####"
-    * set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
+   55 set :meetTarget.1:cfg "w**5#-#####"
    56 setaddr :meetTarget.1*retaddr *label53 (h:*label53)
    57 call *label38 *invalid :meetTarget.1*retval (m:*label53) (h:*label53)
    58 label *label53
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 2 .oreLocator ":findDrillLocation:size"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+   59 write @titanium processor1 ".nextBlock"
+   60 write .coreX processor4 ":findDrillLocation:x"
+   61 write .coreY processor4 ":findDrillLocation:y"
+   62 write @unit processor4 ":findDrillLocation:unit"
+   63 write @titanium processor4 ":findDrillLocation:item"
+   64 write @ore-titanium processor4 ":findDrillLocation:ore"
+   65 write 2 processor4 ":findDrillLocation:size"
+   66 write 4 processor4 ":findDrillLocation:limit"
+   67 write false processor4 ":findDrillLocation*finished"
+   68 write 1 processor4 "@counter"
    69 label *label54
    70 wait 1e-15
-    * read *tmp143 .oreLocator ":findDrillLocation*finished"
+   71 read *tmp143 processor4 ":findDrillLocation*finished"
    72 jump *label54 equal *tmp143 false
-    * read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+   73 read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+   74 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+   75 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    76 jump *label55 notEqual :buildFirstTitaniumDrill:result false
    77 set :error:error "Cannot locate spot for titanium drill"
    78 setaddr :error*retaddr *label57 (h:*label57)
 
    80 label *label57
    81 label *label55
    82 label *label56
-    * write @pneumatic-drill .display ".nextBlock"
-    * write :buildFirstTitaniumDrill:dx .blockBuilder ":buildFirstTitaniumDrillAt:x"
-    * write :buildFirstTitaniumDrill:dy .blockBuilder ":buildFirstTitaniumDrillAt:y"
-    * write false .blockBuilder ":buildFirstTitaniumDrillAt*finished"
-    * write 2 .blockBuilder "@counter"
+   83 write @pneumatic-drill processor1 ".nextBlock"
+   84 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
+   85 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
+   86 write false processor5 ":buildFirstTitaniumDrillAt*finished"
+   87 write 2 processor5 "@counter"
    88 label *label58
    89 wait 1e-15
-    * read *tmp149 .blockBuilder ":buildFirstTitaniumDrillAt*finished"
+   90 read *tmp149 processor5 ":buildFirstTitaniumDrillAt*finished"
    91 jump *label58 equal *tmp149 false
-    * read *tmp132 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
+   92 read *tmp132 processor5 ":buildFirstTitaniumDrillAt*retval"
    93 jump *label52 always
-    * set *tmp132 null
    94 label *label52
    95 set .titaniumDrill *tmp132
-    * write .titaniumDrill .display ".titaniumDrill"
+   96 write *tmp132 processor1 ".titaniumDrill"
    97 set :buildBlockFromCfg.1:cfg "*,###A<###"
    98 setaddr :buildBlockFromCfg.1*retaddr *label59 (h:*label59)
    99 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label59) (h:*label59)
 
   114 call *label36 *invalid :buildBlockFromCfg*retval (m:*label62) (h:*label62)
   115 label *label62
   116 set .controller :buildBlockFromCfg*retval
-    * write processor6 .controller ".timer"
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write .unloader1 .controller ".unloader1"
+  117 write processor6 :buildBlockFromCfg*retval ".timer"
+  118 write processor1 :buildBlockFromCfg*retval ".display"
+  119 write .core :buildBlockFromCfg*retval ".core"
+  120 write bank1 :buildBlockFromCfg*retval ".bank"
+  121 write .battery :buildBlockFromCfg*retval ".battery"
+  122 write .generator :buildBlockFromCfg*retval ".generator"
+  123 write .smelter :buildBlockFromCfg*retval ".smelter"
+  124 write .press :buildBlockFromCfg*retval ".press"
+  125 write .unloader1 :buildBlockFromCfg*retval ".unloader1"
   126 set :buildBlockFromCfg.1:cfg "g)'%)######"
   127 setaddr :buildBlockFromCfg.1*retaddr *label63 (h:*label63)
   128 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label63) (h:*label63)
 
   137 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label65) (h:*label65)
   138 label *label65
   139 set :factory :buildBlockFromCfg.1*retval
-    * write :factory .controller ".factory"
-    * write :factory .display ".airFactory"
+  140 write :buildBlockFromCfg.1*retval .controller ".factory"
+  141 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
   142 set :setFlareTarget:target 1
-    * write :setFlareTarget:target .controller ".flareTarget"
-    * write :setFlareTarget:target .display ".flareTarget"
+  143 write 1 .controller ".flareTarget"
+  144 write 1 processor1 ".flareTarget"
   145 label *label66
   146 set :setMonoTarget:target 3
-    * write :setMonoTarget:target .controller ".monoTarget"
-    * write :setMonoTarget:target .display ".monoTarget"
+  147 write 3 .controller ".monoTarget"
+  148 write 3 processor1 ".monoTarget"
   149 label *label67
   150 write 85 .controller ".pressTarget"
   151 write 150 .controller ".smelterTarget"
   152 write 30 .controller ".kilnTarget"
   153 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  154 set .siliconSurplus 20
   155 setaddr :buildUnits*retaddr *label68 (h:*label68)
   156 call *label40 *invalid :buildUnits*retval (m:*label68) (h:*label68)
   157 label *label68
 
   182 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
   183 label *label77
   184 set .kiln :buildBlockFromCfg.1*retval
-    * write .kiln .controller ".kiln"
+  185 write :buildBlockFromCfg.1*retval .controller ".kiln"
   186 set :buildBlockFromCfg.1:cfg "z%-AAA##A##"
   187 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   188 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
 
   225 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
   226 label *label86
   227 set :reconstructor :buildBlockFromCfg.1*retval
-    * write :reconstructor .controller ".reconstructor"
-    * write :reconstructor .display ".reconstructor"
+  228 write :buildBlockFromCfg.1*retval .controller ".reconstructor"
+  229 write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
   230 set :buildBlockFromCfg.1:cfg "l/,#U#A7###"
   231 setaddr :buildBlockFromCfg.1*retaddr *label87 (h:*label87)
   232 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label87) (h:*label87)
 
   237 set .siliconSurplus 1000
   238 set .metaglassSurplus 200
   239 set :setPolyTarget:target 6
-    * write :setPolyTarget:target .controller ".polyTarget"
-    * write :setPolyTarget:target .display ".polyTarget"
+  240 write 6 .controller ".polyTarget"
+  241 write 6 processor1 ".polyTarget"
   242 label *label89
   243 set :buildBlockFromCfg.1:cfg "%.)A<######"
   244 setaddr :buildBlockFromCfg.1*retaddr *label90 (h:*label90)
 
   271 jump *label95 always
   272 label *label97
   273 set :setFlareTarget.1:target 3
-    * write :setFlareTarget.1:target .controller ".flareTarget"
-    * write :setFlareTarget.1:target .display ".flareTarget"
+  274 write 3 .controller ".flareTarget"
+  275 write 3 processor1 ".flareTarget"
   276 label *label99
   277 label *label100
   278 read *tmp96 .controller ".flares"
 
   285 label *label102
   286 set .graphiteSurplus 100
   287 set :setMonoTarget.1:target 5
-    * write :setMonoTarget.1:target .controller ".monoTarget"
-    * write :setMonoTarget.1:target .display ".monoTarget"
+  288 write 5 .controller ".monoTarget"
+  289 write 5 processor1 ".monoTarget"
   290 label *label104
-    * write @ore-titanium .display ".nextBlock"
+  291 write @ore-titanium processor1 ".nextBlock"
   292 wait 0.000000001
   293 ubind @flare
-    * read :blocksBuildTitaniumDrills:current .oreLocator ".locations"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 4 .oreLocator ":findDrillLocation:size"
-    * write 1000000000 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  294 read :blocksBuildTitaniumDrills:current processor4 ".locations"
+  295 write .coreX processor4 ":findDrillLocation:x"
+  296 write .coreY processor4 ":findDrillLocation:y"
+  297 write @unit processor4 ":findDrillLocation:unit"
+  298 write @titanium processor4 ":findDrillLocation:item"
+  299 write @ore-titanium processor4 ":findDrillLocation:ore"
+  300 write 4 processor4 ":findDrillLocation:size"
+  301 write 1000000000 processor4 ":findDrillLocation:limit"
+  302 write false processor4 ":findDrillLocation*finished"
+  303 write 1 processor4 "@counter"
   304 ubind .builder
-    * write .controller .blockBuilder ":buildTitaniumDrills:aController"
-    * write :blocksBuildTitaniumDrills:current .blockBuilder ":buildTitaniumDrills:current"
-    * write false .blockBuilder ":buildTitaniumDrills*finished"
-    * write 3 .blockBuilder "@counter"
+  305 write .controller processor5 ":buildTitaniumDrills:aController"
+  306 write :blocksBuildTitaniumDrills:current processor5 ":buildTitaniumDrills:current"
+  307 write false processor5 ":buildTitaniumDrills*finished"
+  308 write 3 processor5 "@counter"
   309 label *label106
   310 wait 1e-15
-    * read *tmp193 .blockBuilder ":buildTitaniumDrills*finished"
+  311 read *tmp193 processor5 ":buildTitaniumDrills*finished"
   312 jump *label106 equal *tmp193 false
-    * write false .oreLocator ":stopLocation*finished"
-    * write 3 .oreLocator "@counter"
+  313 write false processor4 ":stopLocation*finished"
+  314 write 3 processor4 "@counter"
   315 label *label105
-    * write null .display ".nextBlock"
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  316 write null processor1 ".nextBlock"
+  317 write .coreX processor4 ":layoutThoriumDrill:x"
+  318 write .coreY processor4 ":layoutThoriumDrill:y"
+  319 write @unit processor4 ":layoutThoriumDrill:unit"
+  320 write 7 processor4 ":layoutThoriumDrill:limit"
+  321 write false processor4 ":layoutThoriumDrill*finished"
+  322 write 2 processor4 "@counter"
   323 label *label108
   324 wait 1e-15
-    * read *tmp198 .oreLocator ":layoutThoriumDrill*finished"
+  325 read *tmp198 processor4 ":layoutThoriumDrill*finished"
   326 jump *label108 equal *tmp198 false
   327 set :meetTarget.1:cfg "x**F#AA7###"
   328 setaddr :meetTarget.1*retaddr *label109 (h:*label109)
 
   330 label *label109
   331 label *label110
   332 wait 1e-15
-    * read *tmp200 .oreLocator ":layoutThoriumDrill*finished"
+  333 read *tmp200 processor4 ":layoutThoriumDrill*finished"
   334 jump *label110 equal *tmp200 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  335 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   336 jump *label111 notEqual :buildThoriumDrill:result false
   337 set :error:error "Cannot locate spot for thorium drill"
   338 setaddr :error*retaddr *label113 (h:*label113)
 
   340 label *label113
   341 label *label111
   342 label *label112
-    * write @laser-drill .blockBuilder ":buildBlockAt:block"
-    * read *tmp54 .oreLocator ".drillX"
-    * write *tmp54 .blockBuilder ":buildBlockAt:x"
-    * read *tmp55 .oreLocator ".drillY"
-    * write *tmp55 .blockBuilder ":buildBlockAt:y"
-    * write null .blockBuilder ":buildBlockAt:rotation"
-    * write 0 .blockBuilder ":buildBlockAt:config"
-    * write false .blockBuilder ":buildBlockAt*finished"
-    * write 1 .blockBuilder "@counter"
+  343 write @laser-drill processor5 ":buildBlockAt:block"
+  344 read *tmp54 processor4 ".drillX"
+  345 write *tmp54 processor5 ":buildBlockAt:x"
+  346 read *tmp55 processor4 ".drillY"
+  347 write *tmp55 processor5 ":buildBlockAt:y"
+  348 write null processor5 ":buildBlockAt:rotation"
+  349 write 0 processor5 ":buildBlockAt:config"
+  350 write false processor5 ":buildBlockAt*finished"
+  351 write 1 processor5 "@counter"
   352 label *label114
   353 wait 1e-15
-    * read *tmp209 .blockBuilder ":buildBlockAt*finished"
+  354 read *tmp209 processor5 ":buildBlockAt*finished"
   355 jump *label114 equal *tmp209 false
-    * read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
+  356 read .thoriumDrill processor5 ":buildBlockAt*retval"
   357 set :buildRemoteBlock:cfg "z%-AAA##A##"
-    * read :buildRemoteBlock:x .oreLocator ".water1X"
-    * read :buildRemoteBlock:y .oreLocator ".water1Y"
+  358 read :buildRemoteBlock:x processor4 ".water1X"
+  359 read :buildRemoteBlock:y processor4 ".water1Y"
   360 setaddr :buildRemoteBlock*retaddr *label115 (h:*label115)
   361 call *label35 *invalid :buildRemoteBlock*retval (m:*label115) (h:*label115)
   362 label *label115
-    * set :buildRemoteBlock:cfg "z%-AAA##A##"
-    * read :buildRemoteBlock:x .oreLocator ".water2X"
-    * read :buildRemoteBlock:y .oreLocator ".water2Y"
+  363 read :buildRemoteBlock:x processor4 ".water2X"
+  364 read :buildRemoteBlock:y processor4 ".water2Y"
   365 setaddr :buildRemoteBlock*retaddr *label116 (h:*label116)
   366 call *label35 *invalid :buildRemoteBlock*retval (m:*label116) (h:*label116)
   367 label *label116
   368 set :buildRemoteBlock:cfg "o%+FK<A####"
-    * read :buildRemoteBlock:x .oreLocator ".generatorX"
-    * read :buildRemoteBlock:y .oreLocator ".generatorY"
+  369 read :buildRemoteBlock:x processor4 ".generatorX"
+  370 read :buildRemoteBlock:y processor4 ".generatorY"
   371 setaddr :buildRemoteBlock*retaddr *label117 (h:*label117)
   372 call *label35 *invalid :buildRemoteBlock*retval (m:*label117) (h:*label117)
   373 label *label117
   374 set .thoriumGenerator :buildRemoteBlock*retval
   375 set :buildRemoteBlock:cfg "g)'%)######"
-    * read :buildRemoteBlock:x .oreLocator ".nodeX"
-    * read :buildRemoteBlock:y .oreLocator ".nodeY"
+  376 read :buildRemoteBlock:x processor4 ".nodeX"
+  377 read :buildRemoteBlock:y processor4 ".nodeY"
   378 setaddr :buildRemoteBlock*retaddr *label118 (h:*label118)
   379 call *label35 *invalid :buildRemoteBlock*retval (m:*label118) (h:*label118)
   380 label *label118
   381 set :buildRemoteBlock:cfg "r**#-#+####"
-    * read :buildRemoteBlock:x .oreLocator ".panelX"
-    * read :buildRemoteBlock:y .oreLocator ".panelY"
+  382 read :buildRemoteBlock:x processor4 ".panelX"
+  383 read :buildRemoteBlock:y processor4 ".panelY"
   384 setaddr :buildRemoteBlock*retaddr *label119 (h:*label119)
   385 call *label35 *invalid :buildRemoteBlock*retval (m:*label119) (h:*label119)
   386 label *label119
   387 set :buildRemoteBlock:cfg "k*/(7######"
-    * read :buildRemoteBlock:x .oreLocator ".batteryX"
-    * read :buildRemoteBlock:y .oreLocator ".batteryY"
+  388 read :buildRemoteBlock:x processor4 ".batteryX"
+  389 read :buildRemoteBlock:y processor4 ".batteryY"
   390 setaddr :buildRemoteBlock*retaddr *label120 (h:*label120)
   391 call *label35 *invalid :buildRemoteBlock*retval (m:*label120) (h:*label120)
   392 label *label120
   393 set :buildRemoteBlock:cfg "**#######"
-    * read :buildRemoteBlock:x .oreLocator ".containerX"
-    * read :buildRemoteBlock:y .oreLocator ".containerY"
+  394 read :buildRemoteBlock:x processor4 ".containerX"
+  395 read :buildRemoteBlock:y processor4 ".containerY"
   396 setaddr :buildRemoteBlock*retaddr *label121 (h:*label121)
   397 call *label35 *invalid :buildRemoteBlock*retval (m:*label121) (h:*label121)
   398 label *label121
   399 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label122 notEqual .thoriumContainer null
+  400 jump *label122 notEqual :buildRemoteBlock*retval null
   401 set .thoriumContainer .thoriumDrill
   402 label *label122
   403 label *label123
-    * write .thoriumDrill .display ".thoriumDrill"
-    * write .thoriumContainer .display ".thoriumContainer"
-    * write .thoriumContainer .polyController ":setThoriumContainer:container"
-    * write false .polyController ":setThoriumContainer*finished"
-    * write 3 .polyController "@counter"
+  404 write .thoriumDrill processor1 ".thoriumDrill"
+  405 write .thoriumContainer processor1 ".thoriumContainer"
+  406 write .thoriumContainer processor3 ":setThoriumContainer:container"
+  407 write false processor3 ":setThoriumContainer*finished"
+  408 write 3 processor3 "@counter"
   409 label *label124
   410 wait 1e-15
-    * read *tmp221 .polyController ":setThoriumContainer*finished"
+  411 read *tmp221 processor3 ":setThoriumContainer*finished"
   412 jump *label124 equal *tmp221 false
   413 label *label107
-    * write null .display ".nextBlock"
+  414 write null processor1 ".nextBlock"
   415 set :setMegaTarget:target 1
-    * write :setMegaTarget:target .controller ".megaTarget"
-    * write :setMegaTarget:target .display ".megaTarget"
+  416 write 1 .controller ".megaTarget"
+  417 write 1 processor1 ".megaTarget"
   418 label *label125
   419 label *label126
   420 read *tmp98 .controller ".polys"
 
   440 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label133) (h:*label133)
   441 label *label133
   442 set :buildMultiplicativeReconstructor:multiReconstructor :buildBlockFromCfg.1*retval
-    * write :buildMultiplicativeReconstructor:multiReconstructor .controller ".multiReconstructor"
-    * write :buildMultiplicativeReconstructor:multiReconstructor .display ".multiReconstructor"
+  443 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
+  444 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
   445 label *label132
   446 setaddr :buildUnits*retaddr *label134 (h:*label134)
   447 call *label40 *invalid :buildUnits*retval (m:*label134) (h:*label134)
 
   653 label *label194
   654 set :mineOre:x :locateOre:x
   655 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+  656 set :moveToEmpty:x :locateOre:x
+  657 set :moveToEmpty:y :locateOre:y
   658 setaddr :moveToEmpty*retaddr *label195 (h:*label195)
   659 call *label16 *invalid :moveToEmpty*retval (m:*label195) (h:*label195)
   660 label *label195
 
   831 end
   832 label *label31
   833 set :unpackCfg:index 0
-    * set *tmp307 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  834 set *tmp307 0
+  835 op add :unpackCfg:index 0 1
   836 read *tmp308 :unpackCfg:cfg *tmp307
   837 op sub *tmp309 *tmp308 35
   838 lookup block :unpackCfg:type *tmp309
-    * set *tmp311 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  839 set *tmp311 1
+  840 op add :unpackCfg:index 1 1
   841 read *tmp312 :unpackCfg:cfg *tmp311
   842 op sub *tmp313 *tmp312 35
-    * op sub :unpackCfg:x *tmp313 7
-    * set *tmp315 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  843 op sub :unpackCfg:x *tmp312 42
+  844 set *tmp315 2
+  845 op add :unpackCfg:index 2 1
   846 read *tmp316 :unpackCfg:cfg *tmp315
   847 op sub *tmp317 *tmp316 35
-    * op sub :unpackCfg:y *tmp317 7
-    * set *tmp319 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  848 op sub :unpackCfg:y *tmp316 42
+  849 set *tmp319 3
+  850 op add :unpackCfg:index 3 1
   851 read *tmp320 :unpackCfg:cfg *tmp319
   852 op sub :unpackCfg:cu *tmp320 35
-    * set *tmp322 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  853 set *tmp322 4
+  854 op add :unpackCfg:index 4 1
   855 read *tmp323 :unpackCfg:cfg *tmp322
   856 op sub :unpackCfg:pb *tmp323 35
-    * set *tmp325 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  857 set *tmp325 5
+  858 op add :unpackCfg:index 5 1
   859 read *tmp326 :unpackCfg:cfg *tmp325
   860 op sub :unpackCfg:gr *tmp326 35
-    * set *tmp328 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  861 set *tmp328 6
+  862 op add :unpackCfg:index 6 1
   863 read *tmp329 :unpackCfg:cfg *tmp328
   864 op sub :unpackCfg:si *tmp329 35
-    * set *tmp331 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  865 set *tmp331 7
+  866 op add :unpackCfg:index 7 1
   867 read *tmp332 :unpackCfg:cfg *tmp331
   868 op sub :unpackCfg:ti *tmp332 35
-    * set *tmp334 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  869 set *tmp334 8
+  870 op add :unpackCfg:index 8 1
   871 read *tmp335 :unpackCfg:cfg *tmp334
   872 op sub :unpackCfg:mg *tmp335 35
-    * set *tmp337 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  873 set *tmp337 9
+  874 op add :unpackCfg:index 9 1
   875 read *tmp338 :unpackCfg:cfg *tmp337
   876 op sub :unpackCfg:th *tmp338 35
-    * set *tmp340 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  877 set *tmp340 10
+  878 op add :unpackCfg:index 10 1
   879 read *tmp341 :unpackCfg:cfg *tmp340
   880 op sub :unpackCfg:rotation *tmp341 35
   881 label *label238
 
  1011 label *label280
  1012 set :supplyBase0:titaniumTrigger *tmp377
  1013 sensor *tmp381 .titaniumDrill @titanium
-    * jump *label281 greaterThanEq *tmp381 :supplyBase0:titaniumTrigger
+ 1014 jump *label281 greaterThanEq *tmp381 *tmp377
  1015 jump *label283 notEqual :supplyBase0:supplied false
  1016 sensor *tmp386 .battery @totalPower
  1017 op mul *tmp387 .unloader1 .powerTarget
 
  1041 set *tmp396 @sand
  1042 label *label293
  1043 set :supplyBase0:ore *tmp396
-    * set :mineOre.1:ore :supplyBase0:ore
+ 1044 set :mineOre.1:ore *tmp396
  1045 setaddr :mineOre.1*retaddr *label294 (h:*label294)
  1046 call *label22 *invalid :mineOre.1*retval (m:*label294) (h:*label294)
  1047 label *label294
 
  1096 set *tmp409 @sand
  1097 label *label309
  1098 set :supplyBase0:ore.1 *tmp409
-    * set :mineOre.1:ore :supplyBase0:ore.1
+ 1099 set :mineOre.1:ore *tmp409
  1100 setaddr :mineOre.1*retaddr *label310 (h:*label310)
  1101 call *label22 *invalid :mineOre.1*retval (m:*label310) (h:*label310)
  1102 label *label310
 
  1184 op add *tmp416 :meetTarget:metaglass .metaglassSurplus
  1185 write *tmp416 .controller ".kilnTarget"
  1186 op add *tmp417 :meetTarget:lead .leadSurplus
-    * write *tmp417 .controller ".leadReserve"
+ 1187 write *tmp412 .controller ".leadReserve"
  1188 op sign *tmp418 :meetTarget:silicon
  1189 op mul *tmp419 *tmp418 20
  1190 op add *tmp420 :meetTarget:silicon *tmp419
 
  1194 op add *tmp423 :meetTarget:graphite *tmp422
  1195 write *tmp423 .controller ".graphiteReserve"
  1196 write .targetLead processor8 ".monoLeadTarget"
-    * write .targetCopper processor8 ".monoCopperTarget"
+ 1197 write :meetTarget:copper processor8 ".monoCopperTarget"
  1198 label *label324
  1199 sensor *tmp425 .core @copper
  1200 jump *label328 greaterThanEq *tmp425 .targetCopper
 
  1240 label *label341
  1241 set *tmp424 true
  1242 jump *label327 always
-    * set *tmp424 null
  1243 label *label327
  1244 jump *label326 notEqual *tmp424 false
  1245 setaddr :supplyBase*retaddr *label342 (h:*label342)
 
  1276 jump *label348 equal *tmp467 false
  1277 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1278 jump *label346 always
-    * set :buildBlock*retval null
  1279 label *label346
  1280 return :buildBlock*retaddr
  1281 end
 
  1295 set :buildRemoteBlock:mg :unpackCfg:mg
  1296 set :buildRemoteBlock:th :unpackCfg:th
  1297 set :buildRemoteBlock:rotation :unpackCfg:rotation
-    * set :buildBlock:block :buildRemoteBlock:type
+ 1298 set :buildBlock:block :unpackCfg:type
  1299 set :buildBlock:x :buildRemoteBlock:x
  1300 set :buildBlock:y :buildRemoteBlock:y
-    * set :buildBlock:copper :buildRemoteBlock:cu
-    * set :buildBlock:lead :buildRemoteBlock:pb
-    * set :buildBlock:graphite :buildRemoteBlock:gr
-    * set :buildBlock:silicon :buildRemoteBlock:si
-    * set :buildBlock:titanium :buildRemoteBlock:ti
-    * set :buildBlock:metaglass :buildRemoteBlock:mg
-    * set :buildBlock:thorium :buildRemoteBlock:th
-    * set :buildBlock:rotation :buildRemoteBlock:rotation
+ 1301 set :buildBlock:copper :unpackCfg:cu
+ 1302 set :buildBlock:lead :unpackCfg:pb
+ 1303 set :buildBlock:graphite :unpackCfg:gr
+ 1304 set :buildBlock:silicon :unpackCfg:si
+ 1305 set :buildBlock:titanium :unpackCfg:ti
+ 1306 set :buildBlock:metaglass :unpackCfg:mg
+ 1307 set :buildBlock:thorium :unpackCfg:th
+ 1308 set :buildBlock:rotation :unpackCfg:rotation
  1309 set :buildBlock:config null
  1310 setaddr :buildBlock*retaddr *label353 (h:*label353)
  1311 call *label34 *invalid :buildBlock*retval (m:*label353) (h:*label353)
 
  1316 label *label351
  1317 set :buildRemoteBlock*retval false
  1318 jump *label349 always
-    * set :buildRemoteBlock*retval null
  1319 label *label349
  1320 return :buildRemoteBlock*retaddr
  1321 end
 
  1335 set :buildBlockFromCfg:mg :unpackCfg:mg
  1336 set :buildBlockFromCfg:th :unpackCfg:th
  1337 set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * op add *tmp472 .coreX :buildBlockFromCfg:x
-    * op add *tmp473 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+ 1338 op add *tmp472 .coreX :unpackCfg:x
+ 1339 op add *tmp473 .coreY :unpackCfg:y
+ 1340 set :buildBlock:block :unpackCfg:type
  1341 set :buildBlock:x *tmp472
  1342 set :buildBlock:y *tmp473
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:thorium :buildBlockFromCfg:th
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+ 1343 set :buildBlock:copper :unpackCfg:cu
+ 1344 set :buildBlock:lead :unpackCfg:pb
+ 1345 set :buildBlock:graphite :unpackCfg:gr
+ 1346 set :buildBlock:silicon :unpackCfg:si
+ 1347 set :buildBlock:titanium :unpackCfg:ti
+ 1348 set :buildBlock:metaglass :unpackCfg:mg
+ 1349 set :buildBlock:thorium :unpackCfg:th
+ 1350 set :buildBlock:rotation :unpackCfg:rotation
  1351 set :buildBlock:config :buildBlockFromCfg:config
  1352 setaddr :buildBlock*retaddr *label356 (h:*label356)
  1353 call *label34 *invalid :buildBlock*retval (m:*label356) (h:*label356)
  1354 label *label356
  1355 set :buildBlockFromCfg*retval :buildBlock*retval
  1356 jump *label354 always
-    * set :buildBlockFromCfg*retval null
  1357 label *label354
  1358 return :buildBlockFromCfg*retaddr
  1359 end
 
  1380 set :meetTarget.1:ti :unpackCfg:ti
  1381 set :meetTarget.1:mg :unpackCfg:mg
  1382 set :meetTarget.1:th :unpackCfg:th
-    * set :meetTarget:block :meetTarget.1:type
-    * set :meetTarget:copper :meetTarget.1:cu
-    * set :meetTarget:lead :meetTarget.1:pb
-    * set :meetTarget:graphite :meetTarget.1:gr
-    * set :meetTarget:silicon :meetTarget.1:si
-    * set :meetTarget:titanium :meetTarget.1:ti
-    * set :meetTarget:metaglass :meetTarget.1:mg
-    * set :meetTarget:thorium :meetTarget.1:th
+ 1383 set :meetTarget:block :unpackCfg:type
+ 1384 set :meetTarget:copper :unpackCfg:cu
+ 1385 set :meetTarget:lead :unpackCfg:pb
+ 1386 set :meetTarget:graphite :unpackCfg:gr
+ 1387 set :meetTarget:silicon :unpackCfg:si
+ 1388 set :meetTarget:titanium :unpackCfg:ti
+ 1389 set :meetTarget:metaglass :unpackCfg:mg
+ 1390 set :meetTarget:thorium :unpackCfg:th
  1391 setaddr :meetTarget*retaddr *label361 (h:*label361)
  1392 call *label33 *invalid :meetTarget*retval (m:*label361) (h:*label361)
  1393 label *label361

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-59 instructions):
     0 set .ERROR ""
     1 set .display processor1
-    * set .polyController processor3
     2 set .blockBuilder processor5
-    * set .oreLocator processor4
     3 set .press null
     4 set .generator null
     5 set .battery null
 
    49 setaddr :buildBlockFromCfg.1*retaddr *label51 (h:*label51)
    50 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label51) (h:*label51)
    51 label *label51
-    * set :buildFirstTitaniumDrill:cfg "w**5#-#####"
    52 set :meetTarget.1:cfg "w**5#-#####"
    53 setaddr :meetTarget.1*retaddr *label53 (h:*label53)
    54 call *label38 *invalid :meetTarget.1*retval (m:*label53) (h:*label53)
 
   133 setaddr :buildBlockFromCfg.1*retaddr *label65 (h:*label65)
   134 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label65) (h:*label65)
   135 label *label65
-    * set :factory :buildBlockFromCfg.1*retval
   136 write :buildBlockFromCfg.1*retval .controller ".factory"
   137 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
-    * set :setFlareTarget:target 1
   138 write 1 .controller ".flareTarget"
   139 write 1 processor1 ".flareTarget"
   140 label *label66
-    * set :setMonoTarget:target 3
   141 write 3 .controller ".monoTarget"
   142 write 3 processor1 ".monoTarget"
   143 label *label67
 
   175 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   176 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
   177 label *label77
-    * set .kiln :buildBlockFromCfg.1*retval
   178 write :buildBlockFromCfg.1*retval .controller ".kiln"
   179 set :buildBlockFromCfg.1:cfg "z%-AAA##A##"
   180 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
 
   217 setaddr :buildBlockFromCfg.1*retaddr *label86 (h:*label86)
   218 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
   219 label *label86
-    * set :reconstructor :buildBlockFromCfg.1*retval
   220 write :buildBlockFromCfg.1*retval .controller ".reconstructor"
   221 write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
   222 set :buildBlockFromCfg.1:cfg "l/,#U#A7###"
 
   228 label *label88
   229 set .siliconSurplus 1000
   230 set .metaglassSurplus 200
-    * set :setPolyTarget:target 6
   231 write 6 .controller ".polyTarget"
   232 write 6 processor1 ".polyTarget"
   233 label *label89
 
   261 label *label96
   262 jump *label95 always
   263 label *label97
-    * set :setFlareTarget.1:target 3
   264 write 3 .controller ".flareTarget"
   265 write 3 processor1 ".flareTarget"
   266 label *label99
 
   274 jump *label100 always
   275 label *label102
   276 set .graphiteSurplus 100
-    * set :setMonoTarget.1:target 5
   277 write 5 .controller ".monoTarget"
   278 write 5 processor1 ".monoTarget"
   279 label *label104
 
   401 jump *label124 equal *tmp221 false
   402 label *label107
   403 write null processor1 ".nextBlock"
-    * set :setMegaTarget:target 1
   404 write 1 .controller ".megaTarget"
   405 write 1 processor1 ".megaTarget"
   406 label *label125
 
   427 setaddr :buildBlockFromCfg.1*retaddr *label133 (h:*label133)
   428 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label133) (h:*label133)
   429 label *label133
-    * set :buildMultiplicativeReconstructor:multiReconstructor :buildBlockFromCfg.1*retval
   430 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
   431 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
   432 label *label132
 
   817 return :supplyBlockFromCore*retaddr
   818 end
   819 label *label31
-    * set :unpackCfg:index 0
   820 set *tmp307 0
-    * op add :unpackCfg:index 0 1
-    * read *tmp308 :unpackCfg:cfg *tmp307
+  821 read *tmp308 :unpackCfg:cfg 0
   822 op sub *tmp309 *tmp308 35
   823 lookup block :unpackCfg:type *tmp309
   824 set *tmp311 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp312 :unpackCfg:cfg *tmp311
-    * op sub *tmp313 *tmp312 35
+  825 read *tmp312 :unpackCfg:cfg 1
   826 op sub :unpackCfg:x *tmp312 42
   827 set *tmp315 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp316 :unpackCfg:cfg *tmp315
-    * op sub *tmp317 *tmp316 35
+  828 read *tmp316 :unpackCfg:cfg 2
   829 op sub :unpackCfg:y *tmp316 42
   830 set *tmp319 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp320 :unpackCfg:cfg *tmp319
+  831 read *tmp320 :unpackCfg:cfg 3
   832 op sub :unpackCfg:cu *tmp320 35
   833 set *tmp322 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp323 :unpackCfg:cfg *tmp322
+  834 read *tmp323 :unpackCfg:cfg 4
   835 op sub :unpackCfg:pb *tmp323 35
   836 set *tmp325 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp326 :unpackCfg:cfg *tmp325
+  837 read *tmp326 :unpackCfg:cfg 5
   838 op sub :unpackCfg:gr *tmp326 35
   839 set *tmp328 6
-    * op add :unpackCfg:index 6 1
-    * read *tmp329 :unpackCfg:cfg *tmp328
+  840 read *tmp329 :unpackCfg:cfg 6
   841 op sub :unpackCfg:si *tmp329 35
   842 set *tmp331 7
-    * op add :unpackCfg:index 7 1
-    * read *tmp332 :unpackCfg:cfg *tmp331
+  843 read *tmp332 :unpackCfg:cfg 7
   844 op sub :unpackCfg:ti *tmp332 35
   845 set *tmp334 8
-    * op add :unpackCfg:index 8 1
-    * read *tmp335 :unpackCfg:cfg *tmp334
+  846 read *tmp335 :unpackCfg:cfg 8
   847 op sub :unpackCfg:mg *tmp335 35
   848 set *tmp337 9
-    * op add :unpackCfg:index 9 1
-    * read *tmp338 :unpackCfg:cfg *tmp337
+  849 read *tmp338 :unpackCfg:cfg 9
   850 op sub :unpackCfg:th *tmp338 35
   851 set *tmp340 10
-    * op add :unpackCfg:index 10 1
-    * read *tmp341 :unpackCfg:cfg *tmp340
+  852 read *tmp341 :unpackCfg:cfg 10
   853 op sub :unpackCfg:rotation *tmp341 35
   854 label *label238
   855 return :unpackCfg*retaddr
 
   982 label *label279
   983 set *tmp377 100
   984 label *label280
-    * set :supplyBase0:titaniumTrigger *tmp377
   985 sensor *tmp381 .titaniumDrill @titanium
   986 jump *label281 greaterThanEq *tmp381 *tmp377
   987 jump *label283 notEqual :supplyBase0:supplied false
 
  1012 label *label292
  1013 set *tmp396 @sand
  1014 label *label293
-    * set :supplyBase0:ore *tmp396
  1015 set :mineOre.1:ore *tmp396
  1016 setaddr :mineOre.1*retaddr *label294 (h:*label294)
  1017 call *label22 *invalid :mineOre.1*retval (m:*label294) (h:*label294)
 
  1066 label *label308
  1067 set *tmp409 @sand
  1068 label *label309
-    * set :supplyBase0:ore.1 *tmp409
  1069 set :mineOre.1:ore *tmp409
  1070 setaddr :mineOre.1*retaddr *label310 (h:*label310)
  1071 call *label22 *invalid :mineOre.1*retval (m:*label310) (h:*label310)
 
  1153 write *tmp415 .controller ".smelterTarget"
  1154 op add *tmp416 :meetTarget:metaglass .metaglassSurplus
  1155 write *tmp416 .controller ".kilnTarget"
-    * op add *tmp417 :meetTarget:lead .leadSurplus
  1156 write *tmp412 .controller ".leadReserve"
  1157 op sign *tmp418 :meetTarget:silicon
  1158 op mul *tmp419 *tmp418 20
 
  1255 setaddr :unpackCfg*retaddr *label352 (h:*label352)
  1256 call *label31 *invalid :unpackCfg*retval (m:*label352) (h:*label352)
  1257 label *label352
-    * set :buildRemoteBlock:type :unpackCfg:type
-    * set :buildRemoteBlock:cu :unpackCfg:cu
-    * set :buildRemoteBlock:pb :unpackCfg:pb
-    * set :buildRemoteBlock:gr :unpackCfg:gr
-    * set :buildRemoteBlock:si :unpackCfg:si
-    * set :buildRemoteBlock:ti :unpackCfg:ti
-    * set :buildRemoteBlock:mg :unpackCfg:mg
-    * set :buildRemoteBlock:th :unpackCfg:th
-    * set :buildRemoteBlock:rotation :unpackCfg:rotation
  1258 set :buildBlock:block :unpackCfg:type
  1259 set :buildBlock:x :buildRemoteBlock:x
  1260 set :buildBlock:y :buildRemoteBlock:y
 
  1284 setaddr :unpackCfg*retaddr *label355 (h:*label355)
  1285 call *label31 *invalid :unpackCfg*retval (m:*label355) (h:*label355)
  1286 label *label355
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:th :unpackCfg:th
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
  1287 op add *tmp472 .coreX :unpackCfg:x
  1288 op add *tmp473 .coreY :unpackCfg:y
  1289 set :buildBlock:block :unpackCfg:type
 
  1321 setaddr :unpackCfg*retaddr *label360 (h:*label360)
  1322 call *label31 *invalid :unpackCfg*retval (m:*label360) (h:*label360)
  1323 label *label360
-    * set :meetTarget.1:type :unpackCfg:type
-    * set :meetTarget.1:cu :unpackCfg:cu
-    * set :meetTarget.1:pb :unpackCfg:pb
-    * set :meetTarget.1:gr :unpackCfg:gr
-    * set :meetTarget.1:si :unpackCfg:si
-    * set :meetTarget.1:ti :unpackCfg:ti
-    * set :meetTarget.1:mg :unpackCfg:mg
-    * set :meetTarget.1:th :unpackCfg:th
  1324 set :meetTarget:block :unpackCfg:type
  1325 set :meetTarget:copper :unpackCfg:cu
  1326 set :meetTarget:lead :unpackCfg:pb

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-11 instructions):
 
   817 return :supplyBlockFromCore*retaddr
   818 end
   819 label *label31
-    * set *tmp307 0
   820 read *tmp308 :unpackCfg:cfg 0
   821 op sub *tmp309 *tmp308 35
   822 lookup block :unpackCfg:type *tmp309
-    * set *tmp311 1
   823 read *tmp312 :unpackCfg:cfg 1
   824 op sub :unpackCfg:x *tmp312 42
-    * set *tmp315 2
   825 read *tmp316 :unpackCfg:cfg 2
   826 op sub :unpackCfg:y *tmp316 42
-    * set *tmp319 3
   827 read *tmp320 :unpackCfg:cfg 3
   828 op sub :unpackCfg:cu *tmp320 35
-    * set *tmp322 4
   829 read *tmp323 :unpackCfg:cfg 4
   830 op sub :unpackCfg:pb *tmp323 35
-    * set *tmp325 5
   831 read *tmp326 :unpackCfg:cfg 5
   832 op sub :unpackCfg:gr *tmp326 35
-    * set *tmp328 6
   833 read *tmp329 :unpackCfg:cfg 6
   834 op sub :unpackCfg:si *tmp329 35
-    * set *tmp331 7
   835 read *tmp332 :unpackCfg:cfg 7
   836 op sub :unpackCfg:ti *tmp332 35
-    * set *tmp334 8
   837 read *tmp335 :unpackCfg:cfg 8
   838 op sub :unpackCfg:mg *tmp335 35
-    * set *tmp337 9
   839 read *tmp338 :unpackCfg:cfg 9
   840 op sub :unpackCfg:th *tmp338 35
-    * set *tmp340 10
   841 read *tmp341 :unpackCfg:cfg 10
   842 op sub :unpackCfg:rotation *tmp341 35
   843 label *label238

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
   523 setaddr :status3*retaddr *label157 (h:*label157)
   524 call *label11 *invalid :status3*retval (m:*label157) (h:*label157)
   525 label *label157
+  526 op sub *tmp237 :moveTo:radius 0.5
   527 label *label158
   528 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp235
   529 jump *label160 notEqual *tmp235 false
-    * op sub *tmp237 :moveTo:radius 0.5
   530 ucontrol approach :moveTo:x :moveTo:y *tmp237
   531 label *label159
   532 jump *label158 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
   962 label *label274
   963 label *label255
   964 label *label256
+  965 set *tmp377 100
   966 sensor *tmp375 .core @titanium
-    * jump *label279 greaterThanEq *tmp375 .targetTitanium
+  967 jump *label280 greaterThanEq *tmp375 .targetTitanium
   968 sensor *tmp378 .core @titanium
   969 op sub *tmp379 .targetTitanium *tmp378
   970 op min *tmp377 7 *tmp379
   971 jump *label280 always
-    * label *label279
-    * set *tmp377 100
   972 label *label280
   973 sensor *tmp381 .titaniumDrill @titanium
   974 jump *label281 greaterThanEq *tmp381 *tmp377
 
   994 label *label291
   995 sensor :supplyBase0:coal .core @coal
   996 sensor :supplyBase0:sand .core @sand
-    * jump *label292 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp396 @coal
+  997 set :mineOre.1:ore @sand
+  998 jump *label293 greaterThanEq :supplyBase0:coal :supplyBase0:sand
+  999 set :mineOre.1:ore @coal
  1000 jump *label293 always
-    * label *label292
-    * set *tmp396 @sand
  1001 label *label293
-    * set :mineOre.1:ore *tmp396
  1002 setaddr :mineOre.1*retaddr *label294 (h:*label294)
  1003 call *label22 *invalid :mineOre.1*retval (m:*label294) (h:*label294)
  1004 label *label294
 
  1046 label *label307
  1047 sensor :supplyBase0:coal.1 .core @coal
  1048 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label308 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp409 @coal
+ 1049 set :mineOre.1:ore @sand
+ 1050 jump *label309 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
+ 1051 set :mineOre.1:ore @coal
  1052 jump *label309 always
-    * label *label308
-    * set *tmp409 @sand
  1053 label *label309
-    * set :mineOre.1:ore *tmp409
  1054 setaddr :mineOre.1*retaddr *label310 (h:*label310)
  1055 call *label22 *invalid :mineOre.1*retval (m:*label310) (h:*label310)
  1056 label *label310

Modifications by Unroll iteration loop at CoreBuilder.mnd:239:5 (-2 instructions):
 
  1081 end
  1082 label *label33
  1083 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp410 *label317
-    * jump *label314 always
-    * multilabel *label317 (m:marker0)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp410 *label318
-    * jump *label314 always
-    * multilabel *label318 (m:marker0)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp410 *label319
-    * jump *label314 always
-    * multilabel *label319 (m:marker0)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp410 *label320
-    * jump *label314 always
-    * multilabel *label320 (m:marker0)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp410 *label321
-    * jump *label314 always
-    * multilabel *label321 (m:marker0)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp410 *label322
-    * jump *label314 always
-    * multilabel *label322 (m:marker0)
-    * set :meetTarget:t :meetTarget:thorium
-    * setaddr *tmp410 *label323
-    * label *label314
-    * op sign *tmp411 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp411
-    * label *label315
-    * multijump *tmp410 0 0 (m:marker0)
-    * multilabel *label323 (m:marker0)
-    * label *label316
+ 1084 set :meetTarget:t :meetTarget:copper
+ 1085 label *label380
+ 1086 op sign *tmp411 :meetTarget:t
+ 1087 op add :meetTarget:count :meetTarget:count *tmp411
+ 1088 label *label381
+ 1089 set :meetTarget:t :meetTarget:lead
+ 1090 label *label384
+ 1091 op sign *tmp411 :meetTarget:t
+ 1092 op add :meetTarget:count :meetTarget:count *tmp411
+ 1093 label *label385
+ 1094 set :meetTarget:t :meetTarget:graphite
+ 1095 label *label388
+ 1096 op sign *tmp411 :meetTarget:t
+ 1097 op add :meetTarget:count :meetTarget:count *tmp411
+ 1098 label *label389
+ 1099 set :meetTarget:t :meetTarget:silicon
+ 1100 label *label392
+ 1101 op sign *tmp411 :meetTarget:t
+ 1102 op add :meetTarget:count :meetTarget:count *tmp411
+ 1103 label *label393
+ 1104 set :meetTarget:t :meetTarget:titanium
+ 1105 label *label396
+ 1106 op sign *tmp411 :meetTarget:t
+ 1107 op add :meetTarget:count :meetTarget:count *tmp411
+ 1108 label *label397
+ 1109 set :meetTarget:t :meetTarget:metaglass
+ 1110 label *label400
+ 1111 op sign *tmp411 :meetTarget:t
+ 1112 op add :meetTarget:count :meetTarget:count *tmp411
+ 1113 label *label401
+ 1114 set :meetTarget:t :meetTarget:thorium
+ 1115 label *label404
+ 1116 op sign *tmp411 :meetTarget:t
+ 1117 op add :meetTarget:count :meetTarget:count *tmp411
+ 1118 label *label405
+ 1119 label *label316
  1120 write :meetTarget:count .display ".totalTargets"
  1121 write :meetTarget:block .display ".nextBlock"
  1122 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1083 set :meetTarget:count 0
  1084 set :meetTarget:t :meetTarget:copper
  1085 label *label380
-    * op sign *tmp411 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp411
+ 1086 op sign *tmp411 :meetTarget:copper
+ 1087 op add :meetTarget:count 0 *tmp411
  1088 label *label381
  1089 set :meetTarget:t :meetTarget:lead
  1090 label *label384
-    * op sign *tmp411 :meetTarget:t
+ 1091 op sign *tmp411 :meetTarget:lead
  1092 op add :meetTarget:count :meetTarget:count *tmp411
  1093 label *label385
  1094 set :meetTarget:t :meetTarget:graphite
  1095 label *label388
-    * op sign *tmp411 :meetTarget:t
+ 1096 op sign *tmp411 :meetTarget:graphite
  1097 op add :meetTarget:count :meetTarget:count *tmp411
  1098 label *label389
  1099 set :meetTarget:t :meetTarget:silicon
  1100 label *label392
-    * op sign *tmp411 :meetTarget:t
+ 1101 op sign *tmp411 :meetTarget:silicon
  1102 op add :meetTarget:count :meetTarget:count *tmp411
  1103 label *label393
  1104 set :meetTarget:t :meetTarget:titanium
  1105 label *label396
-    * op sign *tmp411 :meetTarget:t
+ 1106 op sign *tmp411 :meetTarget:titanium
  1107 op add :meetTarget:count :meetTarget:count *tmp411
  1108 label *label397
  1109 set :meetTarget:t :meetTarget:metaglass
  1110 label *label400
-    * op sign *tmp411 :meetTarget:t
+ 1111 op sign *tmp411 :meetTarget:metaglass
  1112 op add :meetTarget:count :meetTarget:count *tmp411
  1113 label *label401
  1114 set :meetTarget:t :meetTarget:thorium
  1115 label *label404
-    * op sign *tmp411 :meetTarget:t
+ 1116 op sign *tmp411 :meetTarget:thorium
  1117 op add :meetTarget:count :meetTarget:count *tmp411
  1118 label *label405
  1119 label *label316

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
  1080 return :supplyBase*retaddr
  1081 end
  1082 label *label33
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1083 label *label380
  1084 op sign *tmp411 :meetTarget:copper
  1085 op add :meetTarget:count 0 *tmp411
  1086 label *label381
-    * set :meetTarget:t :meetTarget:lead
  1087 label *label384
  1088 op sign *tmp411 :meetTarget:lead
  1089 op add :meetTarget:count :meetTarget:count *tmp411
  1090 label *label385
-    * set :meetTarget:t :meetTarget:graphite
  1091 label *label388
  1092 op sign *tmp411 :meetTarget:graphite
  1093 op add :meetTarget:count :meetTarget:count *tmp411
  1094 label *label389
-    * set :meetTarget:t :meetTarget:silicon
  1095 label *label392
  1096 op sign *tmp411 :meetTarget:silicon
  1097 op add :meetTarget:count :meetTarget:count *tmp411
  1098 label *label393
-    * set :meetTarget:t :meetTarget:titanium
  1099 label *label396
  1100 op sign *tmp411 :meetTarget:titanium
  1101 op add :meetTarget:count :meetTarget:count *tmp411
  1102 label *label397
-    * set :meetTarget:t :meetTarget:metaglass
  1103 label *label400
  1104 op sign *tmp411 :meetTarget:metaglass
  1105 op add :meetTarget:count :meetTarget:count *tmp411
  1106 label *label401
-    * set :meetTarget:t :meetTarget:thorium
  1107 label *label404
  1108 op sign *tmp411 :meetTarget:thorium
  1109 op add :meetTarget:count :meetTarget:count *tmp411

Modifications by Inline function 'status1' defined at Actions.mnd:7:1 (-16 instructions):
 
   489 label *label146
   490 label *label139
   491 end
-    * label *label9
-    * write :status1:text .display ".status1"
-    * label *label151
-    * return :status1*retaddr
-    * end
   492 label *label10
   493 write :status2:text .display ".status2"
   494 write :status2:item .display ".item2"
 
   845 write *tmp345 processor8 ".monoSandTarget"
   846 jump *label240 equal .thoriumContainer false
   847 set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label243 (h:*label243)
-    * call *label9 *invalid :status1*retval (m:*label243) (h:*label243)
-    * label *label243
+  848 label *label409
+  849 write :status1:text .display ".status1"
+  850 label *label410
   851 sensor *tmp347 .core @coal
   852 jump *label244 greaterThanEq *tmp347 50
   853 set :supplyBlock:block .thoriumGenerator
 
   874 read *tmp97 .controller ".monos"
   875 jump *label249 lessThanEq *tmp97 3
   876 set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label252 (h:*label252)
-    * call *label9 *invalid :status1*retval (m:*label252) (h:*label252)
-    * label *label252
+  877 label *label411
+  878 write :status1:text .display ".status1"
+  879 label *label412
   880 set :mineOre.1:ore @coal
   881 setaddr :mineOre.1*retaddr *label253 (h:*label253)
   882 call *label22 *invalid :mineOre.1*retval (m:*label253) (h:*label253)
 
   891 sensor *tmp357 .press @coal
   892 jump *label259 greaterThanEq *tmp357 5
   893 set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label261 (h:*label261)
-    * call *label9 *invalid :status1*retval (m:*label261) (h:*label261)
-    * label *label261
+  894 label *label413
+  895 write :status1:text .display ".status1"
+  896 label *label414
   897 set :supplyBlock:block .press
   898 set :supplyBlock:ore @coal
   899 setaddr :supplyBlock*retaddr *label262 (h:*label262)
 
   909 sensor *tmp363 .smelter @coal
   910 jump *label265 greaterThanEq *tmp363 5
   911 set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label267 (h:*label267)
-    * call *label9 *invalid :status1*retval (m:*label267) (h:*label267)
-    * label *label267
+  912 label *label415
+  913 write :status1:text .display ".status1"
+  914 label *label416
   915 set :supplyBlock:block .smelter
   916 set :supplyBlock:ore @coal
   917 setaddr :supplyBlock*retaddr *label268 (h:*label268)
 
   923 sensor *tmp366 .smelter @sand
   924 jump *label269 greaterThanEq *tmp366 5
   925 set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label271 (h:*label271)
-    * call *label9 *invalid :status1*retval (m:*label271) (h:*label271)
-    * label *label271
+  926 label *label417
+  927 write :status1:text .display ".status1"
+  928 label *label418
   929 set :supplyBlock:block .smelter
   930 set :supplyBlock:ore @sand
   931 setaddr :supplyBlock*retaddr *label272 (h:*label272)
 
   942 sensor *tmp372 .generator @coal
   943 jump *label275 greaterThanEq *tmp372 2
   944 set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label277 (h:*label277)
-    * call *label9 *invalid :status1*retval (m:*label277) (h:*label277)
-    * label *label277
+  945 label *label419
+  946 write :status1:text .display ".status1"
+  947 label *label420
   948 set :supplyBlock:block .generator
   949 set :supplyBlock:ore @coal
   950 setaddr :supplyBlock*retaddr *label278 (h:*label278)
 
   972 op mul *tmp387 .unloader1 .powerTarget
   973 jump *label285 greaterThanEq *tmp386 *tmp387
   974 set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label287 (h:*label287)
-    * call *label9 *invalid :status1*retval (m:*label287) (h:*label287)
-    * label *label287
+  975 label *label421
+  976 write :status1:text .display ".status1"
+  977 label *label422
   978 set :mineOre.1:ore @coal
   979 setaddr :mineOre.1*retaddr *label288 (h:*label288)
   980 call *label22 *invalid :mineOre.1*retval (m:*label288) (h:*label288)
 
   984 sensor *tmp390 .core @silicon
   985 jump *label289 greaterThanEq *tmp390 .targetSilicon
   986 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label291 (h:*label291)
-    * call *label9 *invalid :status1*retval (m:*label291) (h:*label291)
-    * label *label291
+  987 label *label423
+  988 write :status1:text .display ".status1"
+  989 label *label424
   990 sensor :supplyBase0:coal .core @coal
   991 sensor :supplyBase0:sand .core @sand
   992 set :mineOre.1:ore @sand
 
  1002 sensor *tmp397 .core @copper
  1003 jump *label295 greaterThanEq *tmp397 .targetCopper
  1004 set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label297 (h:*label297)
-    * call *label9 *invalid :status1*retval (m:*label297) (h:*label297)
-    * label *label297
+ 1005 label *label425
+ 1006 write :status1:text .display ".status1"
+ 1007 label *label426
  1008 set :mineOre.1:ore @copper
  1009 setaddr :mineOre.1*retaddr *label298 (h:*label298)
  1010 call *label22 *invalid :mineOre.1*retval (m:*label298) (h:*label298)
 
  1014 sensor *tmp400 .core @lead
  1015 jump *label299 greaterThanEq *tmp400 .targetLead
  1016 set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label301 (h:*label301)
-    * call *label9 *invalid :status1*retval (m:*label301) (h:*label301)
-    * label *label301
+ 1017 label *label427
+ 1018 write :status1:text .display ".status1"
+ 1019 label *label428
  1020 set :mineOre.1:ore @lead
  1021 setaddr :mineOre.1*retaddr *label302 (h:*label302)
  1022 call *label22 *invalid :mineOre.1*retval (m:*label302) (h:*label302)
 
  1026 sensor *tmp403 .core @metaglass
  1027 jump *label303 greaterThanEq *tmp403 .targetMetaglass
  1028 set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label305 (h:*label305)
-    * call *label9 *invalid :status1*retval (m:*label305) (h:*label305)
-    * label *label305
+ 1029 label *label429
+ 1030 write :status1:text .display ".status1"
+ 1031 label *label430
  1032 set :mineOre.1:ore @sand
  1033 setaddr :mineOre.1*retaddr *label306 (h:*label306)
  1034 call *label22 *invalid :mineOre.1*retval (m:*label306) (h:*label306)
 
  1036 jump *label304 always
  1037 label *label303
  1038 set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label307 (h:*label307)
-    * call *label9 *invalid :status1*retval (m:*label307) (h:*label307)
-    * label *label307
+ 1039 label *label431
+ 1040 write :status1:text .display ".status1"
+ 1041 label *label432
  1042 sensor :supplyBase0:coal.1 .core @coal
  1043 sensor :supplyBase0:sand.1 .core @sand
  1044 set :mineOre.1:ore @sand
 
  1059 jump *label282 always
  1060 label *label281
  1061 set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label311 (h:*label311)
-    * call *label9 *invalid :status1*retval (m:*label311) (h:*label311)
-    * label *label311
+ 1062 label *label433
+ 1063 write :status1:text .display ".status1"
+ 1064 label *label434
  1065 set :fetchBlock:block .titaniumDrill
  1066 set :fetchBlock:item @titanium
  1067 setaddr :fetchBlock*retaddr *label312 (h:*label312)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   846 jump *label240 equal .thoriumContainer false
   847 set :status1:text "Phase 2: servicing thorium drill"
   848 label *label409
-    * write :status1:text .display ".status1"
+  849 write "Phase 2: servicing thorium drill" .display ".status1"
   850 label *label410
   851 sensor *tmp347 .core @coal
   852 jump *label244 greaterThanEq *tmp347 50
 
   875 jump *label249 lessThanEq *tmp97 3
   876 set :status1:text "Phase 1: supplying base"
   877 label *label411
-    * write :status1:text .display ".status1"
+  878 write "Phase 1: supplying base" .display ".status1"
   879 label *label412
   880 set :mineOre.1:ore @coal
   881 setaddr :mineOre.1*retaddr *label253 (h:*label253)
 
   892 jump *label259 greaterThanEq *tmp357 5
   893 set :status1:text "Goal 1: graphite requirement"
   894 label *label413
-    * write :status1:text .display ".status1"
+  895 write "Goal 1: graphite requirement" .display ".status1"
   896 label *label414
   897 set :supplyBlock:block .press
   898 set :supplyBlock:ore @coal
 
   910 jump *label265 greaterThanEq *tmp363 5
   911 set :status1:text "Goal 2: coal for silicon requirement"
   912 label *label415
-    * write :status1:text .display ".status1"
+  913 write "Goal 2: coal for silicon requirement" .display ".status1"
   914 label *label416
   915 set :supplyBlock:block .smelter
   916 set :supplyBlock:ore @coal
 
   924 jump *label269 greaterThanEq *tmp366 5
   925 set :status1:text "Goal 3: sand for silicon requirement"
   926 label *label417
-    * write :status1:text .display ".status1"
+  927 write "Goal 3: sand for silicon requirement" .display ".status1"
   928 label *label418
   929 set :supplyBlock:block .smelter
   930 set :supplyBlock:ore @sand
 
   943 jump *label275 greaterThanEq *tmp372 2
   944 set :status1:text "Goal 4: supplying generator"
   945 label *label419
-    * write :status1:text .display ".status1"
+  946 write "Goal 4: supplying generator" .display ".status1"
   947 label *label420
   948 set :supplyBlock:block .generator
   949 set :supplyBlock:ore @coal
 
   973 jump *label285 greaterThanEq *tmp386 *tmp387
   974 set :status1:text "Goal 5: supplying generator"
   975 label *label421
-    * write :status1:text .display ".status1"
+  976 write "Goal 5: supplying generator" .display ".status1"
   977 label *label422
   978 set :mineOre.1:ore @coal
   979 setaddr :mineOre.1*retaddr *label288 (h:*label288)
 
   985 jump *label289 greaterThanEq *tmp390 .targetSilicon
   986 set :status1:text "Goal 6: silicon requirement"
   987 label *label423
-    * write :status1:text .display ".status1"
+  988 write "Goal 6: silicon requirement" .display ".status1"
   989 label *label424
   990 sensor :supplyBase0:coal .core @coal
   991 sensor :supplyBase0:sand .core @sand
 
  1003 jump *label295 greaterThanEq *tmp397 .targetCopper
  1004 set :status1:text "Goal 7: copper requirement"
  1005 label *label425
-    * write :status1:text .display ".status1"
+ 1006 write "Goal 7: copper requirement" .display ".status1"
  1007 label *label426
  1008 set :mineOre.1:ore @copper
  1009 setaddr :mineOre.1*retaddr *label298 (h:*label298)
 
  1015 jump *label299 greaterThanEq *tmp400 .targetLead
  1016 set :status1:text "Goal 8: lead requirement"
  1017 label *label427
-    * write :status1:text .display ".status1"
+ 1018 write "Goal 8: lead requirement" .display ".status1"
  1019 label *label428
  1020 set :mineOre.1:ore @lead
  1021 setaddr :mineOre.1*retaddr *label302 (h:*label302)
 
  1027 jump *label303 greaterThanEq *tmp403 .targetMetaglass
  1028 set :status1:text "Goal 9: metaglass requirement"
  1029 label *label429
-    * write :status1:text .display ".status1"
+ 1030 write "Goal 9: metaglass requirement" .display ".status1"
  1031 label *label430
  1032 set :mineOre.1:ore @sand
  1033 setaddr :mineOre.1*retaddr *label306 (h:*label306)
 
  1037 label *label303
  1038 set :status1:text "Goal 10: supplying base"
  1039 label *label431
-    * write :status1:text .display ".status1"
+ 1040 write "Goal 10: supplying base" .display ".status1"
  1041 label *label432
  1042 sensor :supplyBase0:coal.1 .core @coal
  1043 sensor :supplyBase0:sand.1 .core @sand
 
  1060 label *label281
  1061 set :status1:text "Goal 11: Fetching titanium"
  1062 label *label433
-    * write :status1:text .display ".status1"
+ 1063 write "Goal 11: Fetching titanium" .display ".status1"
  1064 label *label434
  1065 set :fetchBlock:block .titaniumDrill
  1066 set :fetchBlock:item @titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
   844 op max *tmp345 0 *tmp344
   845 write *tmp345 processor8 ".monoSandTarget"
   846 jump *label240 equal .thoriumContainer false
-    * set :status1:text "Phase 2: servicing thorium drill"
   847 label *label409
   848 write "Phase 2: servicing thorium drill" .display ".status1"
   849 label *label410
 
   872 label *label240
   873 read *tmp97 .controller ".monos"
   874 jump *label249 lessThanEq *tmp97 3
-    * set :status1:text "Phase 1: supplying base"
   875 label *label411
   876 write "Phase 1: supplying base" .display ".status1"
   877 label *label412
 
   888 jump *label257 greaterThanEq *tmp354 .targetGraphite
   889 sensor *tmp357 .press @coal
   890 jump *label259 greaterThanEq *tmp357 5
-    * set :status1:text "Goal 1: graphite requirement"
   891 label *label413
   892 write "Goal 1: graphite requirement" .display ".status1"
   893 label *label414
 
   905 jump *label263 greaterThanEq *tmp360 .targetSilicon
   906 sensor *tmp363 .smelter @coal
   907 jump *label265 greaterThanEq *tmp363 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
   908 label *label415
   909 write "Goal 2: coal for silicon requirement" .display ".status1"
   910 label *label416
 
   918 label *label265
   919 sensor *tmp366 .smelter @sand
   920 jump *label269 greaterThanEq *tmp366 5
-    * set :status1:text "Goal 3: sand for silicon requirement"
   921 label *label417
   922 write "Goal 3: sand for silicon requirement" .display ".status1"
   923 label *label418
 
   936 jump *label273 greaterThanEq *tmp369 .powerTarget
   937 sensor *tmp372 .generator @coal
   938 jump *label275 greaterThanEq *tmp372 2
-    * set :status1:text "Goal 4: supplying generator"
   939 label *label419
   940 write "Goal 4: supplying generator" .display ".status1"
   941 label *label420
 
   965 sensor *tmp386 .battery @totalPower
   966 op mul *tmp387 .unloader1 .powerTarget
   967 jump *label285 greaterThanEq *tmp386 *tmp387
-    * set :status1:text "Goal 5: supplying generator"
   968 label *label421
   969 write "Goal 5: supplying generator" .display ".status1"
   970 label *label422
 
   976 label *label285
   977 sensor *tmp390 .core @silicon
   978 jump *label289 greaterThanEq *tmp390 .targetSilicon
-    * set :status1:text "Goal 6: silicon requirement"
   979 label *label423
   980 write "Goal 6: silicon requirement" .display ".status1"
   981 label *label424
 
   993 label *label289
   994 sensor *tmp397 .core @copper
   995 jump *label295 greaterThanEq *tmp397 .targetCopper
-    * set :status1:text "Goal 7: copper requirement"
   996 label *label425
   997 write "Goal 7: copper requirement" .display ".status1"
   998 label *label426
 
  1004 label *label295
  1005 sensor *tmp400 .core @lead
  1006 jump *label299 greaterThanEq *tmp400 .targetLead
-    * set :status1:text "Goal 8: lead requirement"
  1007 label *label427
  1008 write "Goal 8: lead requirement" .display ".status1"
  1009 label *label428
 
  1015 label *label299
  1016 sensor *tmp403 .core @metaglass
  1017 jump *label303 greaterThanEq *tmp403 .targetMetaglass
-    * set :status1:text "Goal 9: metaglass requirement"
  1018 label *label429
  1019 write "Goal 9: metaglass requirement" .display ".status1"
  1020 label *label430
 
  1024 label *label306
  1025 jump *label304 always
  1026 label *label303
-    * set :status1:text "Goal 10: supplying base"
  1027 label *label431
  1028 write "Goal 10: supplying base" .display ".status1"
  1029 label *label432
 
  1046 label *label284
  1047 jump *label282 always
  1048 label *label281
-    * set :status1:text "Goal 11: Fetching titanium"
  1049 label *label433
  1050 write "Goal 11: Fetching titanium" .display ".status1"
  1051 label *label434

Modifications by Inline function 'status3' defined at Actions.mnd:17:1 (-7 instructions):
 
   496 label *label152
   497 return :status2*retaddr
   498 end
-    * label *label11
-    * write :status3:text .display ".status3"
-    * label *label153
-    * return :status3*retaddr
-    * end
   499 label *label12
   500 write :transportStatus:target .display ".transportTarget"
   501 write :transportStatus:item .display ".transportItem"
 
   510 end
   511 label *label14
   512 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label157 (h:*label157)
-    * call *label11 *invalid :status3*retval (m:*label157) (h:*label157)
-    * label *label157
+  513 label *label435
+  514 write :status3:text .display ".status3"
+  515 label *label436
   516 op sub *tmp237 :moveTo:radius 0.5
   517 label *label158
   518 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp235
 
   526 end
   527 label *label16
   528 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label164 (h:*label164)
-    * call *label11 *invalid :status3*retval (m:*label164) (h:*label164)
-    * label *label164
+  529 label *label437
+  530 write :status3:text .display ".status3"
+  531 label *label438
   532 label *label165
   533 sensor *tmp240 @unit @firstItem
   534 jump *label168 equal *tmp240 null
 
   568 end
   569 label *label19
   570 set :status3:text "Depositing..."
-    * setaddr :status3*retaddr *label177 (h:*label177)
-    * call *label11 *invalid :status3*retval (m:*label177) (h:*label177)
-    * label *label177
+  571 label *label439
+  572 write :status3:text .display ".status3"
+  573 label *label440
   574 sensor *tmp249 @unit @firstItem
   575 jump *label178 notEqual *tmp249 :depositItems:item
   576 set :moveToBlock:block :depositItems:block
 
   643 label *label196
   644 label *label197
   645 set :status3:text "Mining..."
-    * setaddr :status3*retaddr *label199 (h:*label199)
-    * call *label11 *invalid :status3*retval (m:*label199) (h:*label199)
-    * label *label199
+  646 label *label441
+  647 write :status3:text .display ".status3"
+  648 label *label442
   649 op add :mineOre:stop @second 10
   650 label *label200
   651 sensor :mineOre:item @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   511 label *label14
   512 set :status3:text "Moving..."
   513 label *label435
-    * write :status3:text .display ".status3"
+  514 write "Moving..." .display ".status3"
   515 label *label436
   516 op sub *tmp237 :moveTo:radius 0.5
   517 label *label158
 
   527 label *label16
   528 set :status3:text "Moving..."
   529 label *label437
-    * write :status3:text .display ".status3"
+  530 write "Moving..." .display ".status3"
   531 label *label438
   532 label *label165
   533 sensor *tmp240 @unit @firstItem
 
   569 label *label19
   570 set :status3:text "Depositing..."
   571 label *label439
-    * write :status3:text .display ".status3"
+  572 write "Depositing..." .display ".status3"
   573 label *label440
   574 sensor *tmp249 @unit @firstItem
   575 jump *label178 notEqual *tmp249 :depositItems:item
 
   644 label *label197
   645 set :status3:text "Mining..."
   646 label *label441
-    * write :status3:text .display ".status3"
+  647 write "Mining..." .display ".status3"
   648 label *label442
   649 op add :mineOre:stop @second 10
   650 label *label200

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   509 return :error*retaddr
   510 end
   511 label *label14
-    * set :status3:text "Moving..."
   512 label *label435
   513 write "Moving..." .display ".status3"
   514 label *label436
 
   524 return :moveTo*retaddr
   525 end
   526 label *label16
-    * set :status3:text "Moving..."
   527 label *label437
   528 write "Moving..." .display ".status3"
   529 label *label438
 
   565 return :moveToBlock*retaddr
   566 end
   567 label *label19
-    * set :status3:text "Depositing..."
   568 label *label439
   569 write "Depositing..." .display ".status3"
   570 label *label440
 
   639 label *label198
   640 label *label196
   641 label *label197
-    * set :status3:text "Mining..."
   642 label *label441
   643 write "Mining..." .display ".status3"
   644 label *label442

Modifications by Inline function 'moveTo' defined at Actions.mnd:37:1 (-4 instructions):
 
   508 label *label155
   509 return :error*retaddr
   510 end
-    * label *label14
-    * label *label435
-    * write "Moving..." .display ".status3"
-    * label *label436
-    * op sub *tmp237 :moveTo:radius 0.5
-    * label *label158
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp235
-    * jump *label160 notEqual *tmp235 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp237
-    * label *label159
-    * jump *label158 always
-    * label *label160
-    * label *label156
-    * return :moveTo*retaddr
-    * end
   511 label *label16
   512 label *label437
   513 write "Moving..." .display ".status3"
 
   543 set :moveTo:x *tmp247
   544 set :moveTo:y *tmp248
   545 set :moveTo:radius :moveToBlock:radius
-    * setaddr :moveTo*retaddr *label175 (h:*label175)
-    * call *label14 *invalid :moveTo*retval (m:*label175) (h:*label175)
-    * label *label175
+  546 label *label443
+  547 label *label444
+  548 write "Moving..." .display ".status3"
+  549 label *label445
+  550 op sub *tmp237 :moveTo:radius 0.5
+  551 label *label446
+  552 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp235
+  553 jump *label448 notEqual *tmp235 false
+  554 ucontrol approach :moveTo:x :moveTo:y *tmp237
+  555 label *label447
+  556 jump *label446 always
+  557 label *label448
+  558 label *label449
   559 label *label174
   560 return :moveToBlock*retaddr
   561 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   547 label *label444
   548 write "Moving..." .display ".status3"
   549 label *label445
-    * op sub *tmp237 :moveTo:radius 0.5
+  550 op sub *tmp237 :moveToBlock:radius 0.5
   551 label *label446
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp235
+  552 ucontrol within *tmp247 *tmp248 :moveToBlock:radius *tmp235
   553 jump *label448 notEqual *tmp235 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp237
+  554 ucontrol approach *tmp247 *tmp248 *tmp237
   555 label *label447
   556 jump *label446 always
   557 label *label448

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   540 label *label18
   541 sensor *tmp247 :moveToBlock:block @x
   542 sensor *tmp248 :moveToBlock:block @y
-    * set :moveTo:x *tmp247
-    * set :moveTo:y *tmp248
-    * set :moveTo:radius :moveToBlock:radius
   543 label *label443
   544 label *label444
   545 write "Moving..." .display ".status3"

Modifications by Inline function 'moveToBlock' defined at Actions.mnd:67:1 (-4 instructions):
 
   537 label *label170
   538 return :dropAll*retaddr
   539 end
-    * label *label18
-    * sensor *tmp247 :moveToBlock:block @x
-    * sensor *tmp248 :moveToBlock:block @y
-    * label *label443
-    * label *label444
-    * write "Moving..." .display ".status3"
-    * label *label445
-    * op sub *tmp237 :moveToBlock:radius 0.5
-    * label *label446
-    * ucontrol within *tmp247 *tmp248 :moveToBlock:radius *tmp235
-    * jump *label448 notEqual *tmp235 false
-    * ucontrol approach *tmp247 *tmp248 *tmp237
-    * label *label447
-    * jump *label446 always
-    * label *label448
-    * label *label449
-    * label *label174
-    * return :moveToBlock*retaddr
-    * end
   540 label *label19
   541 label *label439
   542 write "Depositing..." .display ".status3"
 
   545 jump *label178 notEqual *tmp249 :depositItems:item
   546 set :moveToBlock:block :depositItems:block
   547 set :moveToBlock:radius 6
-    * setaddr :moveToBlock*retaddr *label180 (h:*label180)
-    * call *label18 *invalid :moveToBlock*retval (m:*label180) (h:*label180)
-    * label *label180
+  548 label *label450
+  549 sensor *tmp247 :moveToBlock:block @x
+  550 sensor *tmp248 :moveToBlock:block @y
+  551 label *label451
+  552 label *label452
+  553 write "Moving..." .display ".status3"
+  554 label *label453
+  555 op sub *tmp237 :moveToBlock:radius 0.5
+  556 label *label454
+  557 ucontrol within *tmp247 *tmp248 :moveToBlock:radius *tmp235
+  558 jump *label456 notEqual *tmp235 false
+  559 ucontrol approach *tmp247 *tmp248 *tmp237
+  560 label *label455
+  561 jump *label454 always
+  562 label *label456
+  563 label *label457
+  564 label *label458
   565 sensor :depositItems:cap :depositItems:block @itemCapacity
   566 label *label181
   567 ucontrol itemDrop :depositItems:block 30

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   546 set :moveToBlock:block :depositItems:block
   547 set :moveToBlock:radius 6
   548 label *label450
-    * sensor *tmp247 :moveToBlock:block @x
-    * sensor *tmp248 :moveToBlock:block @y
+  549 sensor *tmp247 :depositItems:block @x
+  550 sensor *tmp248 :depositItems:block @y
   551 label *label451
   552 label *label452
   553 write "Moving..." .display ".status3"
   554 label *label453
-    * op sub *tmp237 :moveToBlock:radius 0.5
+  555 op sub *tmp237 6 0.5
   556 label *label454
-    * ucontrol within *tmp247 *tmp248 :moveToBlock:radius *tmp235
+  557 ucontrol within *tmp247 *tmp248 6 *tmp235
   558 jump *label456 notEqual *tmp235 false
-    * ucontrol approach *tmp247 *tmp248 *tmp237
+  559 ucontrol approach *tmp247 *tmp248 5.5
   560 label *label455
   561 jump *label454 always
   562 label *label456

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   543 label *label440
   544 sensor *tmp249 @unit @firstItem
   545 jump *label178 notEqual *tmp249 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
-    * set :moveToBlock:radius 6
   546 label *label450
   547 sensor *tmp247 :depositItems:block @x
   548 sensor *tmp248 :depositItems:block @y
 
   550 label *label452
   551 write "Moving..." .display ".status3"
   552 label *label453
-    * op sub *tmp237 6 0.5
   553 label *label454
   554 ucontrol within *tmp247 *tmp248 6 *tmp235
   555 jump *label456 notEqual *tmp235 false

Modifications by Inline function 'locateOre' defined at Actions.mnd:92:1 (-4 instructions):
 
   586 label *label176
   587 return :depositItems*retaddr
   588 end
-    * label *label20
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp259 0
-    * jump *label189 notEqual *tmp259 false
-    * set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label191 (h:*label191)
-    * call *label13 *invalid :error*retval (m:*label191) (h:*label191)
-    * label *label191
-    * label *label189
-    * label *label190
-    * label *label188
-    * return :locateOre*retaddr
-    * end
   589 label *label21
   590 op min :mineOre:amount :mineOre:amount 30
   591 set :transportStatus:target :mineOre:amount
 
   594 call *label12 *invalid :transportStatus*retval (m:*label193) (h:*label193)
   595 label *label193
   596 set :locateOre:ore :mineOre:ore
-    * setaddr :locateOre*retaddr *label194 (h:*label194)
-    * call *label20 *invalid :locateOre*retval (m:*label194) (h:*label194)
-    * label *label194
+  597 label *label459
+  598 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp259 0
+  599 jump *label461 notEqual *tmp259 false
+  600 set :error:error "Cannot locate ore"
+  601 setaddr :error*retaddr *label460 (h:*label460)
+  602 call *label13 *invalid :error*retval (m:*label460) (h:*label460)
+  603 label *label460
+  604 label *label461
+  605 label *label462
+  606 label *label463
   607 set :mineOre:x :locateOre:x
   608 set :mineOre:y :locateOre:y
   609 set :moveToEmpty:x :locateOre:x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   595 label *label193
   596 set :locateOre:ore :mineOre:ore
   597 label *label459
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp259 0
+  598 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp259 0
   599 jump *label461 notEqual *tmp259 false
   600 set :error:error "Cannot locate ore"
   601 setaddr :error*retaddr *label460 (h:*label460)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   593 setaddr :transportStatus*retaddr *label193 (h:*label193)
   594 call *label12 *invalid :transportStatus*retval (m:*label193) (h:*label193)
   595 label *label193
-    * set :locateOre:ore :mineOre:ore
   596 label *label459
   597 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp259 0
   598 jump *label461 notEqual *tmp259 false

Modifications by Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 (-4 instructions):
 
   734 label *label222
   735 return :supplyBlock*retaddr
   736 end
-    * label *label25
-    * sensor *tmp296 :supplyBlockFromCore:target @itemCapacity
-    * op min :transportStatus:target *tmp296 30
-    * set :transportStatus:item :supplyBlockFromCore:item
-    * setaddr :transportStatus*retaddr *label228 (h:*label228)
-    * call *label12 *invalid :transportStatus*retval (m:*label228) (h:*label228)
-    * label *label228
-    * set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label229 (h:*label229)
-    * call *label10 *invalid :status2*retval (m:*label229) (h:*label229)
-    * label *label229
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label230 (h:*label230)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label230) (h:*label230)
-    * label *label230
-    * setaddr :dropAll*retaddr *label231 (h:*label231)
-    * call *label17 *invalid :dropAll*retval (m:*label231) (h:*label231)
-    * label *label231
-    * label *label232
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor :supplyBlockFromCore:unitItem @unit @firstItem
-    * op notEqual *tmp299 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp300 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
-    * op land *tmp301 *tmp299 *tmp300
-    * jump *label235 equal *tmp301 false
-    * ucontrol itemDrop @air 1000
-    * label *label235
-    * label *label236
-    * label *label233
-    * sensor *tmp303 @unit :supplyBlockFromCore:item
-    * op lessThan *tmp304 *tmp303 30
-    * sensor *tmp305 .core :supplyBlockFromCore:item
-    * op land *tmp306 *tmp304 *tmp305
-    * jump *label232 notEqual *tmp306 false
-    * label *label234
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
-    * setaddr :depositItems*retaddr *label237 (h:*label237)
-    * call *label19 *invalid :depositItems*retval (m:*label237) (h:*label237)
-    * label *label237
-    * label *label227
-    * return :supplyBlockFromCore*retaddr
-    * end
   737 label *label31
   738 read *tmp308 :unpackCfg:cfg 0
   739 op sub *tmp309 *tmp308 35
 
   781 label *label244
   782 set :supplyBlockFromCore:target .thoriumGenerator
   783 set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label247 (h:*label247)
-    * call *label25 *invalid :supplyBlockFromCore*retval (m:*label247) (h:*label247)
-    * label *label247
+  784 label *label464
+  785 sensor *tmp296 :supplyBlockFromCore:target @itemCapacity
+  786 op min :transportStatus:target *tmp296 30
+  787 set :transportStatus:item :supplyBlockFromCore:item
+  788 setaddr :transportStatus*retaddr *label465 (h:*label465)
+  789 call *label12 *invalid :transportStatus*retval (m:*label465) (h:*label465)
+  790 label *label465
+  791 set :status2:text "Transferring "
+  792 set :status2:item :supplyBlockFromCore:item
+  793 set :status2:block :supplyBlockFromCore:target
+  794 setaddr :status2*retaddr *label466 (h:*label466)
+  795 call *label10 *invalid :status2*retval (m:*label466) (h:*label466)
+  796 label *label466
+  797 set :moveToEmpty:x .coreX
+  798 set :moveToEmpty:y .coreY
+  799 setaddr :moveToEmpty*retaddr *label467 (h:*label467)
+  800 call *label16 *invalid :moveToEmpty*retval (m:*label467) (h:*label467)
+  801 label *label467
+  802 setaddr :dropAll*retaddr *label468 (h:*label468)
+  803 call *label17 *invalid :dropAll*retval (m:*label468) (h:*label468)
+  804 label *label468
+  805 label *label469
+  806 ucontrol itemTake .core :supplyBlockFromCore:item 30
+  807 sensor :supplyBlockFromCore:unitItem @unit @firstItem
+  808 op notEqual *tmp299 :supplyBlockFromCore:unitItem null
+  809 op notEqual *tmp300 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  810 op land *tmp301 *tmp299 *tmp300
+  811 jump *label470 equal *tmp301 false
+  812 ucontrol itemDrop @air 1000
+  813 label *label470
+  814 label *label471
+  815 label *label472
+  816 sensor *tmp303 @unit :supplyBlockFromCore:item
+  817 op lessThan *tmp304 *tmp303 30
+  818 sensor *tmp305 .core :supplyBlockFromCore:item
+  819 op land *tmp306 *tmp304 *tmp305
+  820 jump *label469 notEqual *tmp306 false
+  821 label *label473
+  822 set :depositItems:block :supplyBlockFromCore:target
+  823 set :depositItems:item :supplyBlockFromCore:item
+  824 setaddr :depositItems*retaddr *label474 (h:*label474)
+  825 call *label19 *invalid :depositItems*retval (m:*label474) (h:*label474)
+  826 label *label474
+  827 label *label475
   828 label *label245
   829 set :fetchBlock:block .thoriumContainer
   830 set :fetchBlock:item @thorium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   782 set :supplyBlockFromCore:target .thoriumGenerator
   783 set :supplyBlockFromCore:item @coal
   784 label *label464
-    * sensor *tmp296 :supplyBlockFromCore:target @itemCapacity
+  785 sensor *tmp296 .thoriumGenerator @itemCapacity
   786 op min :transportStatus:target *tmp296 30
-    * set :transportStatus:item :supplyBlockFromCore:item
+  787 set :transportStatus:item @coal
   788 setaddr :transportStatus*retaddr *label465 (h:*label465)
   789 call *label12 *invalid :transportStatus*retval (m:*label465) (h:*label465)
   790 label *label465

Modifications by Replicate loop condition at Actions.mnd:61:5 (+1 instructions):
 
   530 label *label171
   531 sensor *tmp245 @unit @firstItem
   532 jump *label173 equal *tmp245 null
+  533 label *label476
   534 ucontrol itemDrop @air 1000
   535 label *label172
-    * jump *label171 always
+  536 sensor *tmp245 @unit @firstItem
+  537 jump *label476 notEqual *tmp245 null
   538 label *label173
   539 label *label170
   540 return :dropAll*retaddr

Modifications by Replicate loop condition at Actions.mnd:39:5 (+1 instructions):
 
   555 label *label454
   556 ucontrol within *tmp247 *tmp248 6 *tmp235
   557 jump *label456 notEqual *tmp235 false
+  558 label *label477
   559 ucontrol approach *tmp247 *tmp248 5.5
   560 label *label455
-    * jump *label454 always
+  561 ucontrol within *tmp247 *tmp248 6 *tmp235
+  562 jump *label477 equal *tmp235 false
   563 label *label456
   564 label *label457
   565 label *label458

Modifications by Replicate loop condition at Actions.mnd:84:9 (+1 instructions):
 
   577 label *label184
   578 sensor *tmp257 @unit @firstItem
   579 jump *label186 equal *tmp257 null
+  580 label *label478
   581 ucontrol itemDrop @air 1000
   582 label *label185
-    * jump *label184 always
+  583 sensor *tmp257 @unit @firstItem
+  584 jump *label478 notEqual *tmp257 null
   585 label *label186
   586 label *label179
   587 set :transportStatus:target 0

Modifications by Inline function call at Actions.mnd:88:5:
 
   586 label *label179
   587 set :transportStatus:target 0
   588 set :transportStatus:item null
-    * setaddr :transportStatus*retaddr *label187 (h:*label187)
-    * call *label12 *invalid :transportStatus*retval (m:*label187) (h:*label187)
-    * label *label187
+  589 label *label479
+  590 write :transportStatus:target .display ".transportTarget"
+  591 write :transportStatus:item .display ".transportItem"
+  592 label *label480
   593 label *label176
   594 return :depositItems*retaddr
   595 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   587 set :transportStatus:target 0
   588 set :transportStatus:item null
   589 label *label479
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  590 write 0 .display ".transportTarget"
+  591 write null .display ".transportItem"
   592 label *label480
   593 label *label176
   594 return :depositItems*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   584 jump *label478 notEqual *tmp257 null
   585 label *label186
   586 label *label179
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   587 label *label479
   588 write 0 .display ".transportTarget"
   589 write null .display ".transportItem"

Modifications by Inline function 'transportStatus' defined at Actions.mnd:21:1 (-4 instructions):
 
   496 label *label152
   497 return :status2*retaddr
   498 end
-    * label *label12
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
-    * label *label154
-    * return :transportStatus*retaddr
-    * end
   499 label *label13
   500 set .ERROR :error:error
   501 stop
 
   589 op min :mineOre:amount :mineOre:amount 30
   590 set :transportStatus:target :mineOre:amount
   591 set :transportStatus:item :mineOre:ore
-    * setaddr :transportStatus*retaddr *label193 (h:*label193)
-    * call *label12 *invalid :transportStatus*retval (m:*label193) (h:*label193)
-    * label *label193
+  592 label *label481
+  593 write :transportStatus:target .display ".transportTarget"
+  594 write :transportStatus:item .display ".transportItem"
+  595 label *label482
   596 label *label459
   597 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp259 0
   598 jump *label461 notEqual *tmp259 false
 
   668 sensor *tmp278 :fetchBlock:block @itemCapacity
   669 op min :transportStatus:target *tmp278 30
   670 set :transportStatus:item :fetchBlock:item
-    * setaddr :transportStatus*retaddr *label212 (h:*label212)
-    * call *label12 *invalid :transportStatus*retval (m:*label212) (h:*label212)
-    * label *label212
+  671 label *label483
+  672 write :transportStatus:target .display ".transportTarget"
+  673 write :transportStatus:item .display ".transportItem"
+  674 label *label484
   675 set :status2:text "Fetching "
   676 set :status2:item :fetchBlock:item
   677 set :status2:block :fetchBlock:block
 
   786 sensor *tmp296 .thoriumGenerator @itemCapacity
   787 op min :transportStatus:target *tmp296 30
   788 set :transportStatus:item @coal
-    * setaddr :transportStatus*retaddr *label465 (h:*label465)
-    * call *label12 *invalid :transportStatus*retval (m:*label465) (h:*label465)
-    * label *label465
+  789 label *label485
+  790 write :transportStatus:target .display ".transportTarget"
+  791 write :transportStatus:item .display ".transportItem"
+  792 label *label486
   793 set :status2:text "Transferring "
   794 set :status2:item :supplyBlockFromCore:item
   795 set :status2:block :supplyBlockFromCore:target

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   590 set :transportStatus:target :mineOre:amount
   591 set :transportStatus:item :mineOre:ore
   592 label *label481
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  593 write :mineOre:amount .display ".transportTarget"
+  594 write :mineOre:ore .display ".transportItem"
   595 label *label482
   596 label *label459
   597 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp259 0
 
   670 set :transportStatus:item :fetchBlock:item
   671 label *label483
   672 write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  673 write :fetchBlock:item .display ".transportItem"
   674 label *label484
   675 set :status2:text "Fetching "
   676 set :status2:item :fetchBlock:item
 
   788 set :transportStatus:item @coal
   789 label *label485
   790 write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  791 write @coal .display ".transportItem"
   792 label *label486
   793 set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
+  794 set :status2:item @coal
+  795 set :status2:block .thoriumGenerator
   796 setaddr :status2*retaddr *label466 (h:*label466)
   797 call *label10 *invalid :status2*retval (m:*label466) (h:*label466)
   798 label *label466

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   588 label *label21
   589 op min :mineOre:amount :mineOre:amount 30
   590 set :transportStatus:target :mineOre:amount
-    * set :transportStatus:item :mineOre:ore
   591 label *label481
   592 write :mineOre:amount .display ".transportTarget"
   593 write :mineOre:ore .display ".transportItem"
 
   666 label *label23
   667 sensor *tmp278 :fetchBlock:block @itemCapacity
   668 op min :transportStatus:target *tmp278 30
-    * set :transportStatus:item :fetchBlock:item
   669 label *label483
   670 write :transportStatus:target .display ".transportTarget"
   671 write :fetchBlock:item .display ".transportItem"
 
   783 label *label464
   784 sensor *tmp296 .thoriumGenerator @itemCapacity
   785 op min :transportStatus:target *tmp296 30
-    * set :transportStatus:item @coal
   786 label *label485
   787 write :transportStatus:target .display ".transportTarget"
   788 write @coal .display ".transportItem"

Modifications by Inline function call at Actions.mnd:135:5 (+1 instructions):
 
   673 set :status2:text "Fetching "
   674 set :status2:item :fetchBlock:item
   675 set :status2:block :fetchBlock:block
-    * setaddr :status2*retaddr *label213 (h:*label213)
-    * call *label10 *invalid :status2*retval (m:*label213) (h:*label213)
-    * label *label213
+  676 label *label487
+  677 write :status2:text .display ".status2"
+  678 write :status2:item .display ".item2"
+  679 write :status2:block .display ".block2"
+  680 label *label488
   681 sensor *tmp280 :fetchBlock:block @x
   682 sensor *tmp281 :fetchBlock:block @y
   683 set :moveToEmpty:x *tmp280

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   674 set :status2:item :fetchBlock:item
   675 set :status2:block :fetchBlock:block
   676 label *label487
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  677 write "Fetching " .display ".status2"
+  678 write :fetchBlock:item .display ".item2"
+  679 write :fetchBlock:block .display ".block2"
   680 label *label488
   681 sensor *tmp280 :fetchBlock:block @x
   682 sensor *tmp281 :fetchBlock:block @y

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   670 write :transportStatus:target .display ".transportTarget"
   671 write :fetchBlock:item .display ".transportItem"
   672 label *label484
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
   673 label *label487
   674 write "Fetching " .display ".status2"
   675 write :fetchBlock:item .display ".item2"

Modifications by Inline function 'status2' defined at Actions.mnd:11:1 (-2 instructions):
 
   489 label *label146
   490 label *label139
   491 end
-    * label *label10
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
-    * label *label152
-    * return :status2*retaddr
-    * end
   492 label *label13
   493 set .ERROR :error:error
   494 stop
 
   644 set :status2:text "Mining "
   645 set :status2:item :mineOre.1:ore
   646 set :status2:block "core"
-    * setaddr :status2*retaddr *label209 (h:*label209)
-    * call *label10 *invalid :status2*retval (m:*label209) (h:*label209)
-    * label *label209
+  647 label *label489
+  648 write :status2:text .display ".status2"
+  649 write :status2:item .display ".item2"
+  650 write :status2:block .display ".block2"
+  651 label *label490
   652 set :mineOre:ore :mineOre.1:ore
   653 set :mineOre:amount 30
   654 set :mineOre:block .core
 
   709 set :status2:text "Supplying "
   710 set :status2:item :supplyBlock:ore
   711 set :status2:block :supplyBlock:block
-    * setaddr :status2*retaddr *label223 (h:*label223)
-    * call *label10 *invalid :status2*retval (m:*label223) (h:*label223)
-    * label *label223
+  712 label *label491
+  713 write :status2:text .display ".status2"
+  714 write :status2:item .display ".item2"
+  715 write :status2:block .display ".block2"
+  716 label *label492
   717 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   718 sensor *tmp292 :supplyBlock:block :supplyBlock:ore
   719 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp292
 
   786 set :status2:text "Transferring "
   787 set :status2:item @coal
   788 set :status2:block .thoriumGenerator
-    * setaddr :status2*retaddr *label466 (h:*label466)
-    * call *label10 *invalid :status2*retval (m:*label466) (h:*label466)
-    * label *label466
+  789 label *label493
+  790 write :status2:text .display ".status2"
+  791 write :status2:item .display ".item2"
+  792 write :status2:block .display ".block2"
+  793 label *label494
   794 set :moveToEmpty:x .coreX
   795 set :moveToEmpty:y .coreY
   796 setaddr :moveToEmpty*retaddr *label467 (h:*label467)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   645 set :status2:item :mineOre.1:ore
   646 set :status2:block "core"
   647 label *label489
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  648 write "Mining " .display ".status2"
+  649 write :mineOre.1:ore .display ".item2"
+  650 write "core" .display ".block2"
   651 label *label490
   652 set :mineOre:ore :mineOre.1:ore
   653 set :mineOre:amount 30
 
   710 set :status2:item :supplyBlock:ore
   711 set :status2:block :supplyBlock:block
   712 label *label491
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  713 write "Supplying " .display ".status2"
+  714 write :supplyBlock:ore .display ".item2"
+  715 write :supplyBlock:block .display ".block2"
   716 label *label492
   717 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   718 sensor *tmp292 :supplyBlock:block :supplyBlock:ore
 
   787 set :status2:item @coal
   788 set :status2:block .thoriumGenerator
   789 label *label493
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  790 write "Transferring " .display ".status2"
+  791 write @coal .display ".item2"
+  792 write .thoriumGenerator .display ".block2"
   793 label *label494
   794 set :moveToEmpty:x .coreX
   795 set :moveToEmpty:y .coreY

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   641 return :mineOre*retaddr
   642 end
   643 label *label22
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
   644 label *label489
   645 write "Mining " .display ".status2"
   646 write :mineOre.1:ore .display ".item2"
 
   703 return :fetchBlock*retaddr
   704 end
   705 label *label24
-    * set :status2:text "Supplying "
-    * set :status2:item :supplyBlock:ore
-    * set :status2:block :supplyBlock:block
   706 label *label491
   707 write "Supplying " .display ".status2"
   708 write :supplyBlock:ore .display ".item2"
 
   777 write :transportStatus:target .display ".transportTarget"
   778 write @coal .display ".transportItem"
   779 label *label486
-    * set :status2:text "Transferring "
-    * set :status2:item @coal
-    * set :status2:block .thoriumGenerator
   780 label *label493
   781 write "Transferring " .display ".status2"
   782 write @coal .display ".item2"

Modifications by Inline function 'error' defined at Actions.mnd:31:1 (-4 instructions):
 
    72 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    73 jump *label55 notEqual :buildFirstTitaniumDrill:result false
    74 set :error:error "Cannot locate spot for titanium drill"
-    * setaddr :error*retaddr *label57 (h:*label57)
-    * call *label13 *invalid :error*retval (m:*label57) (h:*label57)
-    * label *label57
+   75 label *label495
+   76 set .ERROR :error:error
+   77 stop
+   78 label *label496
    79 label *label55
    80 label *label56
    81 write @pneumatic-drill processor1 ".nextBlock"
 
   325 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   326 jump *label111 notEqual :buildThoriumDrill:result false
   327 set :error:error "Cannot locate spot for thorium drill"
-    * setaddr :error*retaddr *label113 (h:*label113)
-    * call *label13 *invalid :error*retval (m:*label113) (h:*label113)
-    * label *label113
+  328 label *label497
+  329 set .ERROR :error:error
+  330 stop
+  331 label *label498
   332 label *label111
   333 label *label112
   334 write @laser-drill processor5 ":buildBlockAt:block"
 
   491 label *label146
   492 label *label139
   493 end
-    * label *label13
-    * set .ERROR :error:error
-    * stop
-    * label *label155
-    * return :error*retaddr
-    * end
   494 label *label16
   495 label *label437
   496 write "Moving..." .display ".status3"
 
   585 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp259 0
   586 jump *label461 notEqual *tmp259 false
   587 set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label460 (h:*label460)
-    * call *label13 *invalid :error*retval (m:*label460) (h:*label460)
-    * label *label460
+  588 label *label499
+  589 set .ERROR :error:error
+  590 stop
+  591 label *label500
   592 label *label461
   593 label *label462
   594 label *label463

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    73 jump *label55 notEqual :buildFirstTitaniumDrill:result false
    74 set :error:error "Cannot locate spot for titanium drill"
    75 label *label495
-    * set .ERROR :error:error
+   76 set .ERROR "Cannot locate spot for titanium drill"
    77 stop
    78 label *label496
    79 label *label55
 
   326 jump *label111 notEqual :buildThoriumDrill:result false
   327 set :error:error "Cannot locate spot for thorium drill"
   328 label *label497
-    * set .ERROR :error:error
+  329 set .ERROR "Cannot locate spot for thorium drill"
   330 stop
   331 label *label498
   332 label *label111
 
   586 jump *label461 notEqual *tmp259 false
   587 set :error:error "Cannot locate ore"
   588 label *label499
-    * set .ERROR :error:error
+  589 set .ERROR "Cannot locate ore"
   590 stop
   591 label *label500
   592 label *label461

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
    71 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
    72 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    73 jump *label55 notEqual :buildFirstTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
    74 label *label495
    75 set .ERROR "Cannot locate spot for titanium drill"
    76 stop
 
   323 jump *label110 equal *tmp200 false
   324 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   325 jump *label111 notEqual :buildThoriumDrill:result false
-    * set :error:error "Cannot locate spot for thorium drill"
   326 label *label497
   327 set .ERROR "Cannot locate spot for thorium drill"
   328 stop
 
   582 label *label459
   583 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp259 0
   584 jump *label461 notEqual *tmp259 false
-    * set :error:error "Cannot locate ore"
   585 label *label499
   586 set .ERROR "Cannot locate ore"
   587 stop

Modifications by Inline function 'moveToEmpty' defined at Actions.mnd:50:1 (+6 instructions):
 
   489 label *label146
   490 label *label139
   491 end
-    * label *label16
-    * label *label437
-    * write "Moving..." .display ".status3"
-    * label *label438
-    * label *label165
-    * sensor *tmp240 @unit @firstItem
-    * jump *label168 equal *tmp240 null
-    * ucontrol itemDrop @air 1000
-    * label *label168
-    * label *label169
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label166
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp243
-    * jump *label165 equal *tmp243 false
-    * label *label167
-    * label *label163
-    * return :moveToEmpty*retaddr
-    * end
   492 label *label17
   493 label *label171
   494 sensor *tmp245 @unit @firstItem
 
   575 set :mineOre:y :locateOre:y
   576 set :moveToEmpty:x :locateOre:x
   577 set :moveToEmpty:y :locateOre:y
-    * setaddr :moveToEmpty*retaddr *label195 (h:*label195)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label195) (h:*label195)
-    * label *label195
+  578 label *label501
+  579 label *label502
+  580 write "Moving..." .display ".status3"
+  581 label *label503
+  582 label *label504
+  583 sensor *tmp240 @unit @firstItem
+  584 jump *label505 equal *tmp240 null
+  585 ucontrol itemDrop @air 1000
+  586 label *label505
+  587 label *label506
+  588 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  589 label *label507
+  590 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp243
+  591 jump *label504 equal *tmp243 false
+  592 label *label508
+  593 label *label509
   594 sensor *tmp264 @unit @firstItem
   595 jump *label196 equal *tmp264 :mineOre:ore
   596 setaddr :dropAll*retaddr *label198 (h:*label198)
 
   660 sensor *tmp281 :fetchBlock:block @y
   661 set :moveToEmpty:x *tmp280
   662 set :moveToEmpty:y *tmp281
-    * setaddr :moveToEmpty*retaddr *label214 (h:*label214)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label214) (h:*label214)
-    * label *label214
+  663 label *label510
+  664 label *label511
+  665 write "Moving..." .display ".status3"
+  666 label *label512
+  667 label *label513
+  668 sensor *tmp240 @unit @firstItem
+  669 jump *label514 equal *tmp240 null
+  670 ucontrol itemDrop @air 1000
+  671 label *label514
+  672 label *label515
+  673 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  674 label *label516
+  675 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp243
+  676 jump *label513 equal *tmp243 false
+  677 label *label517
+  678 label *label518
   679 setaddr :dropAll*retaddr *label215 (h:*label215)
   680 call *label17 *invalid :dropAll*retval (m:*label215) (h:*label215)
   681 label *label215
 
   786 label *label494
   787 set :moveToEmpty:x .coreX
   788 set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label467 (h:*label467)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label467) (h:*label467)
-    * label *label467
+  789 label *label519
+  790 label *label520
+  791 write "Moving..." .display ".status3"
+  792 label *label521
+  793 label *label522
+  794 sensor *tmp240 @unit @firstItem
+  795 jump *label523 equal *tmp240 null
+  796 ucontrol itemDrop @air 1000
+  797 label *label523
+  798 label *label524
+  799 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  800 label *label525
+  801 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp243
+  802 jump *label522 equal *tmp243 false
+  803 label *label526
+  804 label *label527
   805 setaddr :dropAll*retaddr *label468 (h:*label468)
   806 call *label17 *invalid :dropAll*retval (m:*label468) (h:*label468)
   807 label *label468

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   585 ucontrol itemDrop @air 1000
   586 label *label505
   587 label *label506
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  588 ucontrol approach :locateOre:x :locateOre:y 5.5
   589 label *label507
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp243
+  590 ucontrol within :locateOre:x :locateOre:y 6 *tmp243
   591 jump *label504 equal *tmp243 false
   592 label *label508
   593 label *label509
 
   670 ucontrol itemDrop @air 1000
   671 label *label514
   672 label *label515
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  673 ucontrol approach *tmp280 *tmp281 5.5
   674 label *label516
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp243
+  675 ucontrol within *tmp280 *tmp281 6 *tmp243
   676 jump *label513 equal *tmp243 false
   677 label *label517
   678 label *label518
 
   796 ucontrol itemDrop @air 1000
   797 label *label523
   798 label *label524
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  799 ucontrol approach .coreX .coreY 5.5
   800 label *label525
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp243
+  801 ucontrol within .coreX .coreY 6 *tmp243
   802 jump *label522 equal *tmp243 false
   803 label *label526
   804 label *label527

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   573 label *label463
   574 set :mineOre:x :locateOre:x
   575 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :locateOre:x
-    * set :moveToEmpty:y :locateOre:y
   576 label *label501
   577 label *label502
   578 write "Moving..." .display ".status3"
 
   656 label *label488
   657 sensor *tmp280 :fetchBlock:block @x
   658 sensor *tmp281 :fetchBlock:block @y
-    * set :moveToEmpty:x *tmp280
-    * set :moveToEmpty:y *tmp281
   659 label *label510
   660 label *label511
   661 write "Moving..." .display ".status3"
 
   780 write @coal .display ".item2"
   781 write .thoriumGenerator .display ".block2"
   782 label *label494
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
   783 label *label519
   784 label *label520
   785 write "Moving..." .display ".status3"

Modifications by Inline function 'dropAll' defined at Actions.mnd:59:1 (+2 instructions):
 
   489 label *label146
   490 label *label139
   491 end
-    * label *label17
-    * label *label171
-    * sensor *tmp245 @unit @firstItem
-    * jump *label173 equal *tmp245 null
-    * label *label476
-    * ucontrol itemDrop @air 1000
-    * label *label172
-    * sensor *tmp245 @unit @firstItem
-    * jump *label476 notEqual *tmp245 null
-    * label *label173
-    * label *label170
-    * return :dropAll*retaddr
-    * end
   492 label *label19
   493 label *label439
   494 write "Depositing..." .display ".status3"
 
   578 label *label509
   579 sensor *tmp264 @unit @firstItem
   580 jump *label196 equal *tmp264 :mineOre:ore
-    * setaddr :dropAll*retaddr *label198 (h:*label198)
-    * call *label17 *invalid :dropAll*retval (m:*label198) (h:*label198)
-    * label *label198
+  581 label *label528
+  582 label *label529
+  583 sensor *tmp245 @unit @firstItem
+  584 jump *label532 equal *tmp245 null
+  585 label *label530
+  586 ucontrol itemDrop @air 1000
+  587 label *label531
+  588 sensor *tmp245 @unit @firstItem
+  589 jump *label530 notEqual *tmp245 null
+  590 label *label532
+  591 label *label533
   592 label *label196
   593 label *label197
   594 label *label441
 
   667 jump *label513 equal *tmp243 false
   668 label *label517
   669 label *label518
-    * setaddr :dropAll*retaddr *label215 (h:*label215)
-    * call *label17 *invalid :dropAll*retval (m:*label215) (h:*label215)
-    * label *label215
+  670 label *label534
+  671 label *label535
+  672 sensor *tmp245 @unit @firstItem
+  673 jump *label538 equal *tmp245 null
+  674 label *label536
+  675 ucontrol itemDrop @air 1000
+  676 label *label537
+  677 sensor *tmp245 @unit @firstItem
+  678 jump *label536 notEqual *tmp245 null
+  679 label *label538
+  680 label *label539
   681 label *label216
   682 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   683 sensor :fetchBlock:unitItem @unit @firstItem
 
   799 jump *label522 equal *tmp243 false
   800 label *label526
   801 label *label527
-    * setaddr :dropAll*retaddr *label468 (h:*label468)
-    * call *label17 *invalid :dropAll*retval (m:*label468) (h:*label468)
-    * label *label468
+  802 label *label540
+  803 label *label541
+  804 sensor *tmp245 @unit @firstItem
+  805 jump *label544 equal *tmp245 null
+  806 label *label542
+  807 ucontrol itemDrop @air 1000
+  808 label *label543
+  809 sensor *tmp245 @unit @firstItem
+  810 jump *label542 notEqual *tmp245 null
+  811 label *label544
+  812 label *label545
   813 label *label469
   814 ucontrol itemTake .core :supplyBlockFromCore:item 30
   815 sensor :supplyBlockFromCore:unitItem @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   604 jump *label202 always
   605 label *label203
   606 label *label204
-    * ucontrol mine :mineOre:x :mineOre:y
+  607 ucontrol mine :locateOre:x :locateOre:y
   608 jump *label205 lessThanEq @second :mineOre:stop
   609 jump *label202 always
   610 label *label205
 
   811 label *label544
   812 label *label545
   813 label *label469
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
+  814 ucontrol itemTake .core @coal 30
   815 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   816 op notEqual *tmp299 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp300 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  817 op notEqual *tmp300 :supplyBlockFromCore:unitItem @coal
   818 op land *tmp301 *tmp299 *tmp300
   819 jump *label470 equal *tmp301 false
   820 ucontrol itemDrop @air 1000
   821 label *label470
   822 label *label471
   823 label *label472
-    * sensor *tmp303 @unit :supplyBlockFromCore:item
+  824 sensor *tmp303 @unit @coal
   825 op lessThan *tmp304 *tmp303 30
-    * sensor *tmp305 .core :supplyBlockFromCore:item
+  826 sensor *tmp305 .core @coal
   827 op land *tmp306 *tmp304 *tmp305
   828 jump *label469 notEqual *tmp306 false
   829 label *label473
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
+  830 set :depositItems:block .thoriumGenerator
+  831 set :depositItems:item @coal
   832 setaddr :depositItems*retaddr *label474 (h:*label474)
   833 call *label19 *invalid :depositItems*retval (m:*label474) (h:*label474)
   834 label *label474

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   558 label *label461
   559 label *label462
   560 label *label463
-    * set :mineOre:x :locateOre:x
-    * set :mineOre:y :locateOre:y
   561 label *label501
   562 label *label502
   563 write "Moving..." .display ".status3"
 
   767 label *label246
   768 jump *label245 always
   769 label *label244
-    * set :supplyBlockFromCore:target .thoriumGenerator
-    * set :supplyBlockFromCore:item @coal
   770 label *label464
   771 sensor *tmp296 .thoriumGenerator @itemCapacity
   772 op min :transportStatus:target *tmp296 30

Modifications by Inline function call at CoreBuilder.mnd:198:5 (+6 instructions):
 
   844 write "Phase 1: supplying base" .display ".status1"
   845 label *label412
   846 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label253 (h:*label253)
-    * call *label22 *invalid :mineOre.1*retval (m:*label253) (h:*label253)
-    * label *label253
+  847 label *label546
+  848 label *label547
+  849 write "Mining " .display ".status2"
+  850 write :mineOre.1:ore .display ".item2"
+  851 write "core" .display ".block2"
+  852 label *label548
+  853 set :mineOre:ore :mineOre.1:ore
+  854 set :mineOre:amount 30
+  855 set :mineOre:block .core
+  856 setaddr :mineOre*retaddr *label549 (h:*label549)
+  857 call *label21 *invalid :mineOre*retval (m:*label549) (h:*label549)
+  858 label *label549
+  859 label *label550
   860 label *label251
   861 jump *label250 always
   862 label *label249

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   847 label *label546
   848 label *label547
   849 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+  850 write @coal .display ".item2"
   851 write "core" .display ".block2"
   852 label *label548
-    * set :mineOre:ore :mineOre.1:ore
+  853 set :mineOre:ore @coal
   854 set :mineOre:amount 30
   855 set :mineOre:block .core
   856 setaddr :mineOre*retaddr *label549 (h:*label549)

Modifications by Inline function 'depositItems' defined at Actions.mnd:74:1 (+42 instructions):
 
   489 label *label146
   490 label *label139
   491 end
-    * label *label19
-    * label *label439
-    * write "Depositing..." .display ".status3"
-    * label *label440
-    * sensor *tmp249 @unit @firstItem
-    * jump *label178 notEqual *tmp249 :depositItems:item
-    * label *label450
-    * sensor *tmp247 :depositItems:block @x
-    * sensor *tmp248 :depositItems:block @y
-    * label *label451
-    * label *label452
-    * write "Moving..." .display ".status3"
-    * label *label453
-    * label *label454
-    * ucontrol within *tmp247 *tmp248 6 *tmp235
-    * jump *label456 notEqual *tmp235 false
-    * label *label477
-    * ucontrol approach *tmp247 *tmp248 5.5
-    * label *label455
-    * ucontrol within *tmp247 *tmp248 6 *tmp235
-    * jump *label477 equal *tmp235 false
-    * label *label456
-    * label *label457
-    * label *label458
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
-    * label *label181
-    * ucontrol itemDrop :depositItems:block 30
-    * label *label182
-    * sensor *tmp253 @unit @firstItem
-    * op mul *tmp254 *tmp253 :depositItems:cap
-    * sensor *tmp255 :depositItems:block :depositItems:item
-    * jump *label181 greaterThan *tmp254 *tmp255
-    * label *label183
-    * jump *label179 always
-    * label *label178
-    * label *label184
-    * sensor *tmp257 @unit @firstItem
-    * jump *label186 equal *tmp257 null
-    * label *label478
-    * ucontrol itemDrop @air 1000
-    * label *label185
-    * sensor *tmp257 @unit @firstItem
-    * jump *label478 notEqual *tmp257 null
-    * label *label186
-    * label *label179
-    * label *label479
-    * write 0 .display ".transportTarget"
-    * write null .display ".transportItem"
-    * label *label480
-    * label *label176
-    * return :depositItems*retaddr
-    * end
   492 label *label21
   493 op min :mineOre:amount :mineOre:amount 30
   494 set :transportStatus:target :mineOre:amount
 
   562 ucontrol unbind
   563 set :depositItems:block :mineOre:block
   564 set :depositItems:item :mineOre:ore
-    * setaddr :depositItems*retaddr *label207 (h:*label207)
-    * call *label19 *invalid :depositItems*retval (m:*label207) (h:*label207)
-    * label *label207
+  565 label *label551
+  566 label *label552
+  567 write "Depositing..." .display ".status3"
+  568 label *label553
+  569 sensor *tmp249 @unit @firstItem
+  570 jump *label567 notEqual *tmp249 :depositItems:item
+  571 label *label554
+  572 sensor *tmp247 :depositItems:block @x
+  573 sensor *tmp248 :depositItems:block @y
+  574 label *label555
+  575 label *label556
+  576 write "Moving..." .display ".status3"
+  577 label *label557
+  578 label *label558
+  579 ucontrol within *tmp247 *tmp248 6 *tmp235
+  580 jump *label561 notEqual *tmp235 false
+  581 label *label559
+  582 ucontrol approach *tmp247 *tmp248 5.5
+  583 label *label560
+  584 ucontrol within *tmp247 *tmp248 6 *tmp235
+  585 jump *label559 equal *tmp235 false
+  586 label *label561
+  587 label *label562
+  588 label *label563
+  589 sensor :depositItems:cap :depositItems:block @itemCapacity
+  590 label *label564
+  591 ucontrol itemDrop :depositItems:block 30
+  592 label *label565
+  593 sensor *tmp253 @unit @firstItem
+  594 op mul *tmp254 *tmp253 :depositItems:cap
+  595 sensor *tmp255 :depositItems:block :depositItems:item
+  596 jump *label564 greaterThan *tmp254 *tmp255
+  597 label *label566
+  598 jump *label572 always
+  599 label *label567
+  600 label *label568
+  601 sensor *tmp257 @unit @firstItem
+  602 jump *label571 equal *tmp257 null
+  603 label *label569
+  604 ucontrol itemDrop @air 1000
+  605 label *label570
+  606 sensor *tmp257 @unit @firstItem
+  607 jump *label569 notEqual *tmp257 null
+  608 label *label571
+  609 label *label572
+  610 label *label573
+  611 write 0 .display ".transportTarget"
+  612 write null .display ".transportItem"
+  613 label *label574
+  614 label *label575
   615 label *label192
   616 return :mineOre*retaddr
   617 end
 
   690 label *label218
   691 set :depositItems:block .core
   692 set :depositItems:item :fetchBlock:item
-    * setaddr :depositItems*retaddr *label221 (h:*label221)
-    * call *label19 *invalid :depositItems*retval (m:*label221) (h:*label221)
-    * label *label221
+  693 label *label576
+  694 label *label577
+  695 write "Depositing..." .display ".status3"
+  696 label *label578
+  697 sensor *tmp249 @unit @firstItem
+  698 jump *label592 notEqual *tmp249 :depositItems:item
+  699 label *label579
+  700 sensor *tmp247 :depositItems:block @x
+  701 sensor *tmp248 :depositItems:block @y
+  702 label *label580
+  703 label *label581
+  704 write "Moving..." .display ".status3"
+  705 label *label582
+  706 label *label583
+  707 ucontrol within *tmp247 *tmp248 6 *tmp235
+  708 jump *label586 notEqual *tmp235 false
+  709 label *label584
+  710 ucontrol approach *tmp247 *tmp248 5.5
+  711 label *label585
+  712 ucontrol within *tmp247 *tmp248 6 *tmp235
+  713 jump *label584 equal *tmp235 false
+  714 label *label586
+  715 label *label587
+  716 label *label588
+  717 sensor :depositItems:cap :depositItems:block @itemCapacity
+  718 label *label589
+  719 ucontrol itemDrop :depositItems:block 30
+  720 label *label590
+  721 sensor *tmp253 @unit @firstItem
+  722 op mul *tmp254 *tmp253 :depositItems:cap
+  723 sensor *tmp255 :depositItems:block :depositItems:item
+  724 jump *label589 greaterThan *tmp254 *tmp255
+  725 label *label591
+  726 jump *label597 always
+  727 label *label592
+  728 label *label593
+  729 sensor *tmp257 @unit @firstItem
+  730 jump *label596 equal *tmp257 null
+  731 label *label594
+  732 ucontrol itemDrop @air 1000
+  733 label *label595
+  734 sensor *tmp257 @unit @firstItem
+  735 jump *label594 notEqual *tmp257 null
+  736 label *label596
+  737 label *label597
+  738 label *label598
+  739 write 0 .display ".transportTarget"
+  740 write null .display ".transportItem"
+  741 label *label599
+  742 label *label600
   743 label *label211
   744 return :fetchBlock*retaddr
   745 end
 
   867 label *label473
   868 set :depositItems:block .thoriumGenerator
   869 set :depositItems:item @coal
-    * setaddr :depositItems*retaddr *label474 (h:*label474)
-    * call *label19 *invalid :depositItems*retval (m:*label474) (h:*label474)
-    * label *label474
+  870 label *label601
+  871 label *label602
+  872 write "Depositing..." .display ".status3"
+  873 label *label603
+  874 sensor *tmp249 @unit @firstItem
+  875 jump *label617 notEqual *tmp249 :depositItems:item
+  876 label *label604
+  877 sensor *tmp247 :depositItems:block @x
+  878 sensor *tmp248 :depositItems:block @y
+  879 label *label605
+  880 label *label606
+  881 write "Moving..." .display ".status3"
+  882 label *label607
+  883 label *label608
+  884 ucontrol within *tmp247 *tmp248 6 *tmp235
+  885 jump *label611 notEqual *tmp235 false
+  886 label *label609
+  887 ucontrol approach *tmp247 *tmp248 5.5
+  888 label *label610
+  889 ucontrol within *tmp247 *tmp248 6 *tmp235
+  890 jump *label609 equal *tmp235 false
+  891 label *label611
+  892 label *label612
+  893 label *label613
+  894 sensor :depositItems:cap :depositItems:block @itemCapacity
+  895 label *label614
+  896 ucontrol itemDrop :depositItems:block 30
+  897 label *label615
+  898 sensor *tmp253 @unit @firstItem
+  899 op mul *tmp254 *tmp253 :depositItems:cap
+  900 sensor *tmp255 :depositItems:block :depositItems:item
+  901 jump *label614 greaterThan *tmp254 *tmp255
+  902 label *label616
+  903 jump *label622 always
+  904 label *label617
+  905 label *label618
+  906 sensor *tmp257 @unit @firstItem
+  907 jump *label621 equal *tmp257 null
+  908 label *label619
+  909 ucontrol itemDrop @air 1000
+  910 label *label620
+  911 sensor *tmp257 @unit @firstItem
+  912 jump *label619 notEqual *tmp257 null
+  913 label *label621
+  914 label *label622
+  915 label *label623
+  916 write 0 .display ".transportTarget"
+  917 write null .display ".transportItem"
+  918 label *label624
+  919 label *label625
   920 label *label475
   921 label *label245
   922 set :fetchBlock:block .thoriumContainer

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   491 end
   492 label *label21
   493 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus:target :mineOre:amount
   494 label *label481
   495 write :mineOre:amount .display ".transportTarget"
   496 write :mineOre:ore .display ".transportItem"
 
   566 write "Depositing..." .display ".status3"
   567 label *label553
   568 sensor *tmp249 @unit @firstItem
-    * jump *label567 notEqual *tmp249 :depositItems:item
+  569 jump *label567 notEqual *tmp249 :mineOre:ore
   570 label *label554
-    * sensor *tmp247 :depositItems:block @x
-    * sensor *tmp248 :depositItems:block @y
+  571 sensor *tmp247 :mineOre:block @x
+  572 sensor *tmp248 :mineOre:block @y
   573 label *label555
   574 label *label556
   575 write "Moving..." .display ".status3"
 
   585 label *label561
   586 label *label562
   587 label *label563
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  588 sensor :depositItems:cap :mineOre:block @itemCapacity
   589 label *label564
-    * ucontrol itemDrop :depositItems:block 30
+  590 ucontrol itemDrop :mineOre:block 30
   591 label *label565
   592 sensor *tmp253 @unit @firstItem
   593 op mul *tmp254 *tmp253 :depositItems:cap
-    * sensor *tmp255 :depositItems:block :depositItems:item
+  594 sensor *tmp255 :mineOre:block :mineOre:ore
   595 jump *label564 greaterThan *tmp254 *tmp255
   596 label *label566
   597 jump *label572 always
 
   694 write "Depositing..." .display ".status3"
   695 label *label578
   696 sensor *tmp249 @unit @firstItem
-    * jump *label592 notEqual *tmp249 :depositItems:item
+  697 jump *label592 notEqual *tmp249 :fetchBlock:item
   698 label *label579
-    * sensor *tmp247 :depositItems:block @x
-    * sensor *tmp248 :depositItems:block @y
+  699 sensor *tmp247 .core @x
+  700 sensor *tmp248 .core @y
   701 label *label580
   702 label *label581
   703 write "Moving..." .display ".status3"
 
   713 label *label586
   714 label *label587
   715 label *label588
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  716 sensor :depositItems:cap .core @itemCapacity
   717 label *label589
-    * ucontrol itemDrop :depositItems:block 30
+  718 ucontrol itemDrop .core 30
   719 label *label590
   720 sensor *tmp253 @unit @firstItem
   721 op mul *tmp254 *tmp253 :depositItems:cap
-    * sensor *tmp255 :depositItems:block :depositItems:item
+  722 sensor *tmp255 .core :fetchBlock:item
   723 jump *label589 greaterThan *tmp254 *tmp255
   724 label *label591
   725 jump *label597 always
 
   871 write "Depositing..." .display ".status3"
   872 label *label603
   873 sensor *tmp249 @unit @firstItem
-    * jump *label617 notEqual *tmp249 :depositItems:item
+  874 jump *label617 notEqual *tmp249 @coal
   875 label *label604
-    * sensor *tmp247 :depositItems:block @x
-    * sensor *tmp248 :depositItems:block @y
+  876 sensor *tmp247 .thoriumGenerator @x
+  877 sensor *tmp248 .thoriumGenerator @y
   878 label *label605
   879 label *label606
   880 write "Moving..." .display ".status3"
 
   890 label *label611
   891 label *label612
   892 label *label613
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  893 sensor :depositItems:cap .thoriumGenerator @itemCapacity
   894 label *label614
-    * ucontrol itemDrop :depositItems:block 30
+  895 ucontrol itemDrop .thoriumGenerator 30
   896 label *label615
   897 sensor *tmp253 @unit @firstItem
   898 op mul *tmp254 *tmp253 :depositItems:cap
-    * sensor *tmp255 :depositItems:block :depositItems:item
+  899 sensor *tmp255 .thoriumGenerator @coal
   900 jump *label614 greaterThan *tmp254 *tmp255
   901 label *label616
   902 jump *label622 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   559 jump *label200 lessThan *tmp275 :mineOre:amount
   560 label *label202
   561 ucontrol unbind
-    * set :depositItems:block :mineOre:block
-    * set :depositItems:item :mineOre:ore
   562 label *label551
   563 label *label552
   564 write "Depositing..." .display ".status3"
 
   685 op land *tmp290 *tmp288 *tmp289
   686 jump *label216 notEqual *tmp290 false
   687 label *label218
-    * set :depositItems:block .core
-    * set :depositItems:item :fetchBlock:item
   688 label *label576
   689 label *label577
   690 write "Depositing..." .display ".status3"
 
   860 op land *tmp306 *tmp304 *tmp305
   861 jump *label469 notEqual *tmp306 false
   862 label *label473
-    * set :depositItems:block .thoriumGenerator
-    * set :depositItems:item @coal
   863 label *label601
   864 label *label602
   865 write "Depositing..." .display ".status3"

Modifications by Inline function call at CoreBuilder.mnd:205:9 (+10 instructions):
 
   799 jump *label244 greaterThanEq *tmp347 50
   800 set :supplyBlock:block .thoriumGenerator
   801 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label246 (h:*label246)
-    * call *label24 *invalid :supplyBlock*retval (m:*label246) (h:*label246)
-    * label *label246
+  802 label *label626
+  803 label *label627
+  804 write "Supplying " .display ".status2"
+  805 write :supplyBlock:ore .display ".item2"
+  806 write :supplyBlock:block .display ".block2"
+  807 label *label628
+  808 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  809 sensor *tmp292 :supplyBlock:block :supplyBlock:ore
+  810 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp292
+  811 jump *label630 lessThanEq :supplyBlock:missing 0
+  812 set :mineOre:ore :supplyBlock:ore
+  813 set :mineOre:amount :supplyBlock:blockCapacity
+  814 set :mineOre:block :supplyBlock:block
+  815 setaddr :mineOre*retaddr *label629 (h:*label629)
+  816 call *label21 *invalid :mineOre*retval (m:*label629) (h:*label629)
+  817 label *label629
+  818 label *label630
+  819 label *label631
+  820 label *label632
   821 jump *label245 always
   822 label *label244
   823 label *label464

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   802 label *label626
   803 label *label627
   804 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+  805 write @coal .display ".item2"
+  806 write .thoriumGenerator .display ".block2"
   807 label *label628
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp292 :supplyBlock:block :supplyBlock:ore
+  808 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
+  809 sensor *tmp292 .thoriumGenerator @coal
   810 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp292
   811 jump *label630 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  812 set :mineOre:ore @coal
   813 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+  814 set :mineOre:block .thoriumGenerator
   815 setaddr :mineOre*retaddr *label629 (h:*label629)
   816 call *label21 *invalid :mineOre*retval (m:*label629) (h:*label629)
   817 label *label629

Modifications by Replicate loop condition at CoreBuilder.mnd:508:5 (+1 instructions):
 
   255 label *label95
   256 read *tmp98 .controller ".polys"
   257 jump *label97 greaterThanEq *tmp98 3
+  258 label *label633
   259 setaddr :supplyBase*retaddr *label98 (h:*label98)
   260 call *label32 *invalid :supplyBase*retval (m:*label98) (h:*label98)
   261 label *label98
   262 label *label96
-    * jump *label95 always
+  263 read *tmp98 .controller ".polys"
+  264 jump *label633 lessThan *tmp98 3
   265 label *label97
   266 write 3 .controller ".flareTarget"
   267 write 3 processor1 ".flareTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:513:5 (+1 instructions):
 
   269 label *label100
   270 read *tmp96 .controller ".flares"
   271 jump *label102 greaterThanEq *tmp96 2
+  272 label *label634
   273 setaddr :supplyBase*retaddr *label103 (h:*label103)
   274 call *label32 *invalid :supplyBase*retval (m:*label103) (h:*label103)
   275 label *label103
   276 label *label101
-    * jump *label100 always
+  277 read *tmp96 .controller ".flares"
+  278 jump *label634 lessThan *tmp96 2
   279 label *label102
   280 set .graphiteSurplus 100
   281 write 5 .controller ".monoTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:532:5 (+1 instructions):
 
   411 label *label126
   412 read *tmp98 .controller ".polys"
   413 jump *label128 greaterThanEq *tmp98 5
+  414 label *label635
   415 setaddr :supplyBase*retaddr *label129 (h:*label129)
   416 call *label32 *invalid :supplyBase*retval (m:*label129) (h:*label129)
   417 label *label129
   418 label *label127
-    * jump *label126 always
+  419 read *tmp98 .controller ".polys"
+  420 jump *label635 lessThan *tmp98 5
   421 label *label128
   422 set :buildBlockFromCfg:cfg "+(###A<###"
   423 set :buildBlockFromCfg:config @silicon

Modifications by Replicate loop condition at CoreBuilder.mnd:542:5 (+1 instructions):
 
   442 label *label135
   443 read *tmp99 .controller ".megas"
   444 jump *label137 greaterThanEq *tmp99 1
+  445 label *label636
   446 setaddr :supplyBase*retaddr *label138 (h:*label138)
   447 call *label32 *invalid :supplyBase*retval (m:*label138) (h:*label138)
   448 label *label138
   449 label *label136
-    * jump *label135 always
+  450 read *tmp99 .controller ".megas"
+  451 jump *label636 lessThan *tmp99 1
   452 label *label137
   453 control enabled processor7 false
   454 control enabled processor8 false

Modifications by Inline function call at CoreBuilder.mnd:166:17 (+6 instructions):
 
  1053 write "Goal 5: supplying generator" .display ".status1"
  1054 label *label422
  1055 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label288 (h:*label288)
-    * call *label22 *invalid :mineOre.1*retval (m:*label288) (h:*label288)
-    * label *label288
+ 1056 label *label637
+ 1057 label *label638
+ 1058 write "Mining " .display ".status2"
+ 1059 write :mineOre.1:ore .display ".item2"
+ 1060 write "core" .display ".block2"
+ 1061 label *label639
+ 1062 set :mineOre:ore :mineOre.1:ore
+ 1063 set :mineOre:amount 30
+ 1064 set :mineOre:block .core
+ 1065 setaddr :mineOre*retaddr *label640 (h:*label640)
+ 1066 call *label21 *invalid :mineOre*retval (m:*label640) (h:*label640)
+ 1067 label *label640
+ 1068 label *label641
  1069 jump *label286 always
  1070 label *label285
  1071 sensor *tmp390 .core @silicon

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1056 label *label637
  1057 label *label638
  1058 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+ 1059 write @coal .display ".item2"
  1060 write "core" .display ".block2"
  1061 label *label639
-    * set :mineOre:ore :mineOre.1:ore
+ 1062 set :mineOre:ore @coal
  1063 set :mineOre:amount 30
  1064 set :mineOre:block .core
  1065 setaddr :mineOre*retaddr *label640 (h:*label640)

Modifications by Inline function call at CoreBuilder.mnd:135:17 (+10 instructions):
 
   977 label *label414
   978 set :supplyBlock:block .press
   979 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label262 (h:*label262)
-    * call *label24 *invalid :supplyBlock*retval (m:*label262) (h:*label262)
-    * label *label262
+  980 label *label642
+  981 label *label643
+  982 write "Supplying " .display ".status2"
+  983 write :supplyBlock:ore .display ".item2"
+  984 write :supplyBlock:block .display ".block2"
+  985 label *label644
+  986 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  987 sensor *tmp292 :supplyBlock:block :supplyBlock:ore
+  988 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp292
+  989 jump *label646 lessThanEq :supplyBlock:missing 0
+  990 set :mineOre:ore :supplyBlock:ore
+  991 set :mineOre:amount :supplyBlock:blockCapacity
+  992 set :mineOre:block :supplyBlock:block
+  993 setaddr :mineOre*retaddr *label645 (h:*label645)
+  994 call *label21 *invalid :mineOre*retval (m:*label645) (h:*label645)
+  995 label *label645
+  996 label *label646
+  997 label *label647
+  998 label *label648
   999 set :supplyBase0:supplied true
  1000 label *label259
  1001 label *label260

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   980 label *label642
   981 label *label643
   982 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+  983 write @coal .display ".item2"
+  984 write .press .display ".block2"
   985 label *label644
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp292 :supplyBlock:block :supplyBlock:ore
+  986 sensor :supplyBlock:blockCapacity .press @itemCapacity
+  987 sensor *tmp292 .press @coal
   988 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp292
   989 jump *label646 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  990 set :mineOre:ore @coal
   991 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+  992 set :mineOre:block .press
   993 setaddr :mineOre*retaddr *label645 (h:*label645)
   994 call *label21 *invalid :mineOre*retval (m:*label645) (h:*label645)
   995 label *label645

Modifications by Inline function call at CoreBuilder.mnd:411:13 (+3 instructions):
 
    21 jump *label43 equal .core null
    22 label *label45
    23 set :buildBlockFromCfg.1:cfg "#'+nA######"
-    * setaddr :buildBlockFromCfg.1*retaddr *label46 (h:*label46)
-    * call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label46) (h:*label46)
-    * label *label46
+   24 label *label649
+   25 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
+   26 set :buildBlockFromCfg:config null
+   27 setaddr :buildBlockFromCfg*retaddr *label650 (h:*label650)
+   28 call *label36 *invalid :buildBlockFromCfg*retval (m:*label650) (h:*label650)
+   29 label *label650
+   30 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
+   31 label *label651
    32 set .press :buildBlockFromCfg.1*retval
    33 set :buildBlockFromCfg.1:cfg "k*/(7######"
    34 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
    22 label *label45
    23 set :buildBlockFromCfg.1:cfg "#'+nA######"
    24 label *label649
-    * set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
+   25 set :buildBlockFromCfg:cfg "#'+nA######"
    26 set :buildBlockFromCfg:config null
    27 setaddr :buildBlockFromCfg*retaddr *label650 (h:*label650)
    28 call *label36 *invalid :buildBlockFromCfg*retval (m:*label650) (h:*label650)
    29 label *label650
    30 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
    31 label *label651
-    * set .press :buildBlockFromCfg.1*retval
+   32 set .press :buildBlockFromCfg*retval
    33 set :buildBlockFromCfg.1:cfg "k*/(7######"
    34 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    35 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
    27 setaddr :buildBlockFromCfg*retaddr *label650 (h:*label650)
    28 call *label36 *invalid :buildBlockFromCfg*retval (m:*label650) (h:*label650)
    29 label *label650
-    * set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
    30 label *label651
    31 set .press :buildBlockFromCfg*retval
    32 set :buildBlockFromCfg.1:cfg "k*/(7######"

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
    91 read *tmp149 processor5 ":buildFirstTitaniumDrillAt*finished"
    92 jump *label58 equal *tmp149 false
    93 read *tmp132 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * jump *label52 always
    94 label *label52
    95 set .titaniumDrill *tmp132
    96 write *tmp132 processor1 ".titaniumDrill"
 
  1060 sensor *tmp378 .core @titanium
  1061 op sub *tmp379 .targetTitanium *tmp378
  1062 op min *tmp377 7 *tmp379
-    * jump *label280 always
  1063 label *label280
  1064 sensor *tmp381 .titaniumDrill @titanium
  1065 jump *label281 greaterThanEq *tmp381 *tmp377
 
  1096 set :mineOre.1:ore @sand
  1097 jump *label293 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1098 set :mineOre.1:ore @coal
-    * jump *label293 always
  1099 label *label293
  1100 setaddr :mineOre.1*retaddr *label294 (h:*label294)
  1101 call *label22 *invalid :mineOre.1*retval (m:*label294) (h:*label294)
 
  1143 set :mineOre.1:ore @sand
  1144 jump *label309 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1145 set :mineOre.1:ore @coal
-    * jump *label309 always
  1146 label *label309
  1147 setaddr :mineOre.1*retaddr *label310 (h:*label310)
  1148 call *label22 *invalid :mineOre.1*retval (m:*label310) (h:*label310)
 
  1315 read *tmp467 .blockBuilder ":buildBlockAt*finished"
  1316 jump *label348 equal *tmp467 false
  1317 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * jump *label346 always
  1318 label *label346
  1319 return :buildBlock*retaddr
  1320 end
 
  1372 call *label34 *invalid :buildBlock*retval (m:*label356) (h:*label356)
  1373 label *label356
  1374 set :buildBlockFromCfg*retval :buildBlock*retval
-    * jump *label354 always
  1375 label *label354
  1376 return :buildBlockFromCfg*retaddr
  1377 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
  1174 label *label33
  1175 label *label380
  1176 op sign *tmp411 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp411
+ 1177 set :meetTarget:count *tmp411
  1178 label *label381
  1179 label *label384
  1180 op sign *tmp411 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1173 end
  1174 label *label33
  1175 label *label380
-    * op sign *tmp411 :meetTarget:copper
-    * set :meetTarget:count *tmp411
+ 1176 op sign :meetTarget:count :meetTarget:copper
  1177 label *label381
  1178 label *label384
  1179 op sign *tmp411 :meetTarget:lead

Modifications by Inline function call at CoreBuilder.mnd:582:9 (+8 instructions):
 
   477 label *label144
   478 op sub :lineUpUnits:y @thisy 6
   479 set :lineUpUnits:unit @mega
-    * setaddr :lineUpUnits*retaddr *label147 (h:*label147)
-    * call *label42 *invalid :lineUpUnits*retval (m:*label147) (h:*label147)
-    * label *label147
+  480 label *label652
+  481 ubind :lineUpUnits:unit
+  482 set :lineUpUnits:firstUnit @unit
+  483 label *label653
+  484 sensor :lineUpUnits:x @unit @flag
+  485 ucontrol itemDrop @air 1000
+  486 ucontrol move :lineUpUnits:x :lineUpUnits:y
+  487 sensor *tmp486 @unit @mining
+  488 jump *label654 equal *tmp486 false
+  489 ucontrol stop
+  490 label *label654
+  491 label *label655
+  492 ubind :lineUpUnits:unit
+  493 label *label656
+  494 jump *label653 notEqual @unit :lineUpUnits:firstUnit
+  495 label *label657
+  496 label *label658
   497 op sub :lineUpUnits:y @thisy 10
   498 set :lineUpUnits:unit @poly
   499 setaddr :lineUpUnits*retaddr *label148 (h:*label148)

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   478 op sub :lineUpUnits:y @thisy 6
   479 set :lineUpUnits:unit @mega
   480 label *label652
-    * ubind :lineUpUnits:unit
+  481 ubind @mega
   482 set :lineUpUnits:firstUnit @unit
   483 label *label653
   484 sensor :lineUpUnits:x @unit @flag
 
   489 ucontrol stop
   490 label *label654
   491 label *label655
-    * ubind :lineUpUnits:unit
+  492 ubind @mega
   493 label *label656
   494 jump *label653 notEqual @unit :lineUpUnits:firstUnit
   495 label *label657

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-1 instructions):
 
   476 label *label143
   477 label *label144
   478 op sub :lineUpUnits:y @thisy 6
-    * set :lineUpUnits:unit @mega
   479 label *label652
   480 ubind @mega
   481 set :lineUpUnits:firstUnit @unit

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    17 ubind @poly
    18 set .builder @unit
    19 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label44
    20 jump *label43 equal .core null
-    * label *label45
    21 set :buildBlockFromCfg.1:cfg "#'+nA######"
-    * label *label649
    22 set :buildBlockFromCfg:cfg "#'+nA######"
    23 set :buildBlockFromCfg:config null
    24 setaddr :buildBlockFromCfg*retaddr *label650 (h:*label650)
    25 call *label36 *invalid :buildBlockFromCfg*retval (m:*label650) (h:*label650)
    26 label *label650
-    * label *label651
    27 set .press :buildBlockFromCfg*retval
    28 set :buildBlockFromCfg.1:cfg "k*/(7######"
    29 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
 
    71 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
    72 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    73 jump *label55 notEqual :buildFirstTitaniumDrill:result false
-    * label *label495
    74 set .ERROR "Cannot locate spot for titanium drill"
    75 stop
-    * label *label496
    76 label *label55
-    * label *label56
    77 write @pneumatic-drill processor1 ".nextBlock"
    78 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
    79 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
 
    84 read *tmp149 processor5 ":buildFirstTitaniumDrillAt*finished"
    85 jump *label58 equal *tmp149 false
    86 read *tmp132 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * label *label52
    87 set .titaniumDrill *tmp132
    88 write *tmp132 processor1 ".titaniumDrill"
    89 set :buildBlockFromCfg.1:cfg "*,###A<###"
 
   132 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
   133 write 1 .controller ".flareTarget"
   134 write 1 processor1 ".flareTarget"
-    * label *label66
   135 write 3 .controller ".monoTarget"
   136 write 3 processor1 ".monoTarget"
-    * label *label67
   137 write 85 .controller ".pressTarget"
   138 write 150 .controller ".smelterTarget"
   139 write 30 .controller ".kilnTarget"
 
   150 jump *label73 greaterThanEq *tmp158 300
   151 jump *label71 always
   152 label *label73
-    * label *label74
-    * label *label70
   153 read *tmp97 .controller ".monos"
   154 jump *label69 lessThan *tmp97 3
   155 label *label71
 
   221 set .metaglassSurplus 200
   222 write 6 .controller ".polyTarget"
   223 write 6 processor1 ".polyTarget"
-    * label *label89
   224 set :buildBlockFromCfg.1:cfg "%.)A<######"
   225 setaddr :buildBlockFromCfg.1*retaddr *label90 (h:*label90)
   226 call *label37 *invalid :buildBlockFromCfg.1*retval (m:*label90) (h:*label90)
 
   242 setaddr :buildUnits*retaddr *label94 (h:*label94)
   243 call *label40 *invalid :buildUnits*retval (m:*label94) (h:*label94)
   244 label *label94
-    * label *label95
   245 read *tmp98 .controller ".polys"
   246 jump *label97 greaterThanEq *tmp98 3
   247 label *label633
   248 setaddr :supplyBase*retaddr *label98 (h:*label98)
   249 call *label32 *invalid :supplyBase*retval (m:*label98) (h:*label98)
   250 label *label98
-    * label *label96
   251 read *tmp98 .controller ".polys"
   252 jump *label633 lessThan *tmp98 3
   253 label *label97
   254 write 3 .controller ".flareTarget"
   255 write 3 processor1 ".flareTarget"
-    * label *label99
-    * label *label100
   256 read *tmp96 .controller ".flares"
   257 jump *label102 greaterThanEq *tmp96 2
   258 label *label634
   259 setaddr :supplyBase*retaddr *label103 (h:*label103)
   260 call *label32 *invalid :supplyBase*retval (m:*label103) (h:*label103)
   261 label *label103
-    * label *label101
   262 read *tmp96 .controller ".flares"
   263 jump *label634 lessThan *tmp96 2
   264 label *label102
   265 set .graphiteSurplus 100
   266 write 5 .controller ".monoTarget"
   267 write 5 processor1 ".monoTarget"
-    * label *label104
   268 write @ore-titanium processor1 ".nextBlock"
   269 wait 0.000000001
   270 ubind @flare
 
   289 jump *label106 equal *tmp193 false
   290 write false processor4 ":stopLocation*finished"
   291 write 3 processor4 "@counter"
-    * label *label105
   292 write null processor1 ".nextBlock"
   293 write .coreX processor4 ":layoutThoriumDrill:x"
   294 write .coreY processor4 ":layoutThoriumDrill:y"
 
   310 jump *label110 equal *tmp200 false
   311 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   312 jump *label111 notEqual :buildThoriumDrill:result false
-    * label *label497
   313 set .ERROR "Cannot locate spot for thorium drill"
   314 stop
-    * label *label498
   315 label *label111
-    * label *label112
   316 write @laser-drill processor5 ":buildBlockAt:block"
   317 read *tmp54 processor4 ".drillX"
   318 write *tmp54 processor5 ":buildBlockAt:x"
 
   373 jump *label122 notEqual :buildRemoteBlock*retval null
   374 set .thoriumContainer .thoriumDrill
   375 label *label122
-    * label *label123
   376 write .thoriumDrill processor1 ".thoriumDrill"
   377 write .thoriumContainer processor1 ".thoriumContainer"
   378 write .thoriumContainer processor3 ":setThoriumContainer:container"
 
   382 wait 1e-15
   383 read *tmp221 processor3 ":setThoriumContainer*finished"
   384 jump *label124 equal *tmp221 false
-    * label *label107
   385 write null processor1 ".nextBlock"
   386 write 1 .controller ".megaTarget"
   387 write 1 processor1 ".megaTarget"
-    * label *label125
-    * label *label126
   388 read *tmp98 .controller ".polys"
   389 jump *label128 greaterThanEq *tmp98 5
   390 label *label635
   391 setaddr :supplyBase*retaddr *label129 (h:*label129)
   392 call *label32 *invalid :supplyBase*retval (m:*label129) (h:*label129)
   393 label *label129
-    * label *label127
   394 read *tmp98 .controller ".polys"
   395 jump *label635 lessThan *tmp98 5
   396 label *label128
 
   410 label *label133
   411 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
   412 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
-    * label *label132
   413 setaddr :buildUnits*retaddr *label134 (h:*label134)
   414 call *label40 *invalid :buildUnits*retval (m:*label134) (h:*label134)
   415 label *label134
-    * label *label135
   416 read *tmp99 .controller ".megas"
   417 jump *label137 greaterThanEq *tmp99 1
   418 label *label636
   419 setaddr :supplyBase*retaddr *label138 (h:*label138)
   420 call *label32 *invalid :supplyBase*retval (m:*label138) (h:*label138)
   421 label *label138
-    * label *label136
   422 read *tmp99 .controller ".megas"
   423 jump *label636 lessThan *tmp99 1
   424 label *label137
 
   445 label *label143
   446 label *label144
   447 op sub :lineUpUnits:y @thisy 6
-    * label *label652
   448 ubind @mega
   449 set :lineUpUnits:firstUnit @unit
   450 label *label653
 
   455 jump *label654 equal *tmp486 false
   456 ucontrol stop
   457 label *label654
-    * label *label655
   458 ubind @mega
-    * label *label656
   459 jump *label653 notEqual @unit :lineUpUnits:firstUnit
-    * label *label657
-    * label *label658
   460 op sub :lineUpUnits:y @thisy 10
   461 set :lineUpUnits:unit @poly
   462 setaddr :lineUpUnits*retaddr *label148 (h:*label148)
 
   472 setaddr :lineUpUnits*retaddr *label150 (h:*label150)
   473 call *label42 *invalid :lineUpUnits*retval (m:*label150) (h:*label150)
   474 label *label150
-    * label *label145
   475 jump *label144 always
-    * label *label146
-    * label *label139
   476 end
   477 label *label21
   478 op min :mineOre:amount :mineOre:amount 30
-    * label *label481
   479 write :mineOre:amount .display ".transportTarget"
   480 write :mineOre:ore .display ".transportItem"
-    * label *label482
-    * label *label459
   481 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp259 0
   482 jump *label461 notEqual *tmp259 false
-    * label *label499
   483 set .ERROR "Cannot locate ore"
   484 stop
-    * label *label500
   485 label *label461
-    * label *label462
-    * label *label463
-    * label *label501
-    * label *label502
   486 write "Moving..." .display ".status3"
-    * label *label503
   487 label *label504
   488 sensor *tmp240 @unit @firstItem
   489 jump *label505 equal *tmp240 null
   490 ucontrol itemDrop @air 1000
   491 label *label505
-    * label *label506
   492 ucontrol approach :locateOre:x :locateOre:y 5.5
-    * label *label507
   493 ucontrol within :locateOre:x :locateOre:y 6 *tmp243
   494 jump *label504 equal *tmp243 false
-    * label *label508
-    * label *label509
   495 sensor *tmp264 @unit @firstItem
   496 jump *label196 equal *tmp264 :mineOre:ore
-    * label *label528
-    * label *label529
   497 sensor *tmp245 @unit @firstItem
   498 jump *label532 equal *tmp245 null
   499 label *label530
   500 ucontrol itemDrop @air 1000
-    * label *label531
   501 sensor *tmp245 @unit @firstItem
   502 jump *label530 notEqual *tmp245 null
   503 label *label532
-    * label *label533
   504 label *label196
-    * label *label197
-    * label *label441
   505 write "Mining..." .display ".status3"
-    * label *label442
   506 op add :mineOre:stop @second 10
   507 label *label200
   508 sensor :mineOre:item @unit @firstItem
 
   512 jump *label203 equal *tmp271 false
   513 jump *label202 always
   514 label *label203
-    * label *label204
   515 ucontrol mine :locateOre:x :locateOre:y
   516 jump *label205 lessThanEq @second :mineOre:stop
   517 jump *label202 always
   518 label *label205
-    * label *label206
-    * label *label201
   519 sensor *tmp275 @unit @totalItems
   520 jump *label200 lessThan *tmp275 :mineOre:amount
   521 label *label202
   522 ucontrol unbind
-    * label *label551
-    * label *label552
   523 write "Depositing..." .display ".status3"
-    * label *label553
   524 sensor *tmp249 @unit @firstItem
   525 jump *label567 notEqual *tmp249 :mineOre:ore
-    * label *label554
   526 sensor *tmp247 :mineOre:block @x
   527 sensor *tmp248 :mineOre:block @y
-    * label *label555
-    * label *label556
   528 write "Moving..." .display ".status3"
-    * label *label557
-    * label *label558
   529 ucontrol within *tmp247 *tmp248 6 *tmp235
   530 jump *label561 notEqual *tmp235 false
   531 label *label559
   532 ucontrol approach *tmp247 *tmp248 5.5
-    * label *label560
   533 ucontrol within *tmp247 *tmp248 6 *tmp235
   534 jump *label559 equal *tmp235 false
   535 label *label561
-    * label *label562
-    * label *label563
   536 sensor :depositItems:cap :mineOre:block @itemCapacity
   537 label *label564
   538 ucontrol itemDrop :mineOre:block 30
-    * label *label565
   539 sensor *tmp253 @unit @firstItem
   540 op mul *tmp254 *tmp253 :depositItems:cap
   541 sensor *tmp255 :mineOre:block :mineOre:ore
   542 jump *label564 greaterThan *tmp254 *tmp255
-    * label *label566
   543 jump *label572 always
   544 label *label567
-    * label *label568
   545 sensor *tmp257 @unit @firstItem
   546 jump *label571 equal *tmp257 null
   547 label *label569
   548 ucontrol itemDrop @air 1000
-    * label *label570
   549 sensor *tmp257 @unit @firstItem
   550 jump *label569 notEqual *tmp257 null
   551 label *label571
   552 label *label572
-    * label *label573
   553 write 0 .display ".transportTarget"
   554 write null .display ".transportItem"
-    * label *label574
-    * label *label575
-    * label *label192
   555 return :mineOre*retaddr
   556 end
   557 label *label22
-    * label *label489
   558 write "Mining " .display ".status2"
   559 write :mineOre.1:ore .display ".item2"
   560 write "core" .display ".block2"
-    * label *label490
   561 set :mineOre:ore :mineOre.1:ore
   562 set :mineOre:amount 30
   563 set :mineOre:block .core
   564 setaddr :mineOre*retaddr *label210 (h:*label210)
   565 call *label21 *invalid :mineOre*retval (m:*label210) (h:*label210)
   566 label *label210
-    * label *label208
   567 return :mineOre.1*retaddr
   568 end
   569 label *label23
   570 sensor *tmp278 :fetchBlock:block @itemCapacity
   571 op min :transportStatus:target *tmp278 30
-    * label *label483
   572 write :transportStatus:target .display ".transportTarget"
   573 write :fetchBlock:item .display ".transportItem"
-    * label *label484
-    * label *label487
   574 write "Fetching " .display ".status2"
   575 write :fetchBlock:item .display ".item2"
   576 write :fetchBlock:block .display ".block2"
-    * label *label488
   577 sensor *tmp280 :fetchBlock:block @x
   578 sensor *tmp281 :fetchBlock:block @y
-    * label *label510
-    * label *label511
   579 write "Moving..." .display ".status3"
-    * label *label512
   580 label *label513
   581 sensor *tmp240 @unit @firstItem
   582 jump *label514 equal *tmp240 null
   583 ucontrol itemDrop @air 1000
   584 label *label514
-    * label *label515
   585 ucontrol approach *tmp280 *tmp281 5.5
-    * label *label516
   586 ucontrol within *tmp280 *tmp281 6 *tmp243
   587 jump *label513 equal *tmp243 false
-    * label *label517
-    * label *label518
-    * label *label534
-    * label *label535
   588 sensor *tmp245 @unit @firstItem
   589 jump *label538 equal *tmp245 null
   590 label *label536
   591 ucontrol itemDrop @air 1000
-    * label *label537
   592 sensor *tmp245 @unit @firstItem
   593 jump *label536 notEqual *tmp245 null
   594 label *label538
-    * label *label539
   595 label *label216
   596 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   597 sensor :fetchBlock:unitItem @unit @firstItem
 
   601 jump *label219 equal *tmp285 false
   602 ucontrol itemDrop @air 1000
   603 label *label219
-    * label *label220
-    * label *label217
   604 sensor *tmp287 @unit :fetchBlock:item
   605 op lessThan *tmp288 *tmp287 30
   606 sensor *tmp289 :fetchBlock:block :fetchBlock:item
   607 op land *tmp290 *tmp288 *tmp289
   608 jump *label216 notEqual *tmp290 false
-    * label *label218
-    * label *label576
-    * label *label577
   609 write "Depositing..." .display ".status3"
-    * label *label578
   610 sensor *tmp249 @unit @firstItem
   611 jump *label592 notEqual *tmp249 :fetchBlock:item
-    * label *label579
   612 sensor *tmp247 .core @x
   613 sensor *tmp248 .core @y
-    * label *label580
-    * label *label581
   614 write "Moving..." .display ".status3"
-    * label *label582
-    * label *label583
   615 ucontrol within *tmp247 *tmp248 6 *tmp235
   616 jump *label586 notEqual *tmp235 false
   617 label *label584
   618 ucontrol approach *tmp247 *tmp248 5.5
-    * label *label585
   619 ucontrol within *tmp247 *tmp248 6 *tmp235
   620 jump *label584 equal *tmp235 false
   621 label *label586
-    * label *label587
-    * label *label588
   622 sensor :depositItems:cap .core @itemCapacity
   623 label *label589
   624 ucontrol itemDrop .core 30
-    * label *label590
   625 sensor *tmp253 @unit @firstItem
   626 op mul *tmp254 *tmp253 :depositItems:cap
   627 sensor *tmp255 .core :fetchBlock:item
   628 jump *label589 greaterThan *tmp254 *tmp255
-    * label *label591
   629 jump *label597 always
   630 label *label592
-    * label *label593
   631 sensor *tmp257 @unit @firstItem
   632 jump *label596 equal *tmp257 null
   633 label *label594
   634 ucontrol itemDrop @air 1000
-    * label *label595
   635 sensor *tmp257 @unit @firstItem
   636 jump *label594 notEqual *tmp257 null
   637 label *label596
   638 label *label597
-    * label *label598
   639 write 0 .display ".transportTarget"
   640 write null .display ".transportItem"
-    * label *label599
-    * label *label600
-    * label *label211
   641 return :fetchBlock*retaddr
   642 end
   643 label *label24
-    * label *label491
   644 write "Supplying " .display ".status2"
   645 write :supplyBlock:ore .display ".item2"
   646 write :supplyBlock:block .display ".block2"
-    * label *label492
   647 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   648 sensor *tmp292 :supplyBlock:block :supplyBlock:ore
   649 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp292
 
   655 call *label21 *invalid :mineOre*retval (m:*label226) (h:*label226)
   656 label *label226
   657 label *label224
-    * label *label225
-    * label *label222
   658 return :supplyBlock*retaddr
   659 end
   660 label *label31
 
   681 op sub :unpackCfg:th *tmp338 35
   682 read *tmp341 :unpackCfg:cfg 10
   683 op sub :unpackCfg:rotation *tmp341 35
-    * label *label238
   684 return :unpackCfg*retaddr
   685 end
   686 label *label32
 
   689 op max *tmp345 0 *tmp344
   690 write *tmp345 processor8 ".monoSandTarget"
   691 jump *label240 equal .thoriumContainer false
-    * label *label409
   692 write "Phase 2: servicing thorium drill" .display ".status1"
-    * label *label410
   693 sensor *tmp347 .core @coal
   694 jump *label244 greaterThanEq *tmp347 50
   695 set :supplyBlock:block .thoriumGenerator
   696 set :supplyBlock:ore @coal
-    * label *label626
-    * label *label627
   697 write "Supplying " .display ".status2"
   698 write @coal .display ".item2"
   699 write .thoriumGenerator .display ".block2"
-    * label *label628
   700 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   701 sensor *tmp292 .thoriumGenerator @coal
   702 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp292
 
   708 call *label21 *invalid :mineOre*retval (m:*label629) (h:*label629)
   709 label *label629
   710 label *label630
-    * label *label631
-    * label *label632
   711 jump *label245 always
   712 label *label244
-    * label *label464
   713 sensor *tmp296 .thoriumGenerator @itemCapacity
   714 op min :transportStatus:target *tmp296 30
-    * label *label485
   715 write :transportStatus:target .display ".transportTarget"
   716 write @coal .display ".transportItem"
-    * label *label486
-    * label *label493
   717 write "Transferring " .display ".status2"
   718 write @coal .display ".item2"
   719 write .thoriumGenerator .display ".block2"
-    * label *label494
-    * label *label519
-    * label *label520
   720 write "Moving..." .display ".status3"
-    * label *label521
   721 label *label522
   722 sensor *tmp240 @unit @firstItem
   723 jump *label523 equal *tmp240 null
   724 ucontrol itemDrop @air 1000
   725 label *label523
-    * label *label524
   726 ucontrol approach .coreX .coreY 5.5
-    * label *label525
   727 ucontrol within .coreX .coreY 6 *tmp243
   728 jump *label522 equal *tmp243 false
-    * label *label526
-    * label *label527
-    * label *label540
-    * label *label541
   729 sensor *tmp245 @unit @firstItem
   730 jump *label544 equal *tmp245 null
   731 label *label542
   732 ucontrol itemDrop @air 1000
-    * label *label543
   733 sensor *tmp245 @unit @firstItem
   734 jump *label542 notEqual *tmp245 null
   735 label *label544
-    * label *label545
   736 label *label469
   737 ucontrol itemTake .core @coal 30
   738 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
   742 jump *label470 equal *tmp301 false
   743 ucontrol itemDrop @air 1000
   744 label *label470
-    * label *label471
-    * label *label472
   745 sensor *tmp303 @unit @coal
   746 op lessThan *tmp304 *tmp303 30
   747 sensor *tmp305 .core @coal
   748 op land *tmp306 *tmp304 *tmp305
   749 jump *label469 notEqual *tmp306 false
-    * label *label473
-    * label *label601
-    * label *label602
   750 write "Depositing..." .display ".status3"
-    * label *label603
   751 sensor *tmp249 @unit @firstItem
   752 jump *label617 notEqual *tmp249 @coal
-    * label *label604
   753 sensor *tmp247 .thoriumGenerator @x
   754 sensor *tmp248 .thoriumGenerator @y
-    * label *label605
-    * label *label606
   755 write "Moving..." .display ".status3"
-    * label *label607
-    * label *label608
   756 ucontrol within *tmp247 *tmp248 6 *tmp235
   757 jump *label611 notEqual *tmp235 false
   758 label *label609
   759 ucontrol approach *tmp247 *tmp248 5.5
-    * label *label610
   760 ucontrol within *tmp247 *tmp248 6 *tmp235
   761 jump *label609 equal *tmp235 false
   762 label *label611
-    * label *label612
-    * label *label613
   763 sensor :depositItems:cap .thoriumGenerator @itemCapacity
   764 label *label614
   765 ucontrol itemDrop .thoriumGenerator 30
-    * label *label615
   766 sensor *tmp253 @unit @firstItem
   767 op mul *tmp254 *tmp253 :depositItems:cap
   768 sensor *tmp255 .thoriumGenerator @coal
   769 jump *label614 greaterThan *tmp254 *tmp255
-    * label *label616
   770 jump *label622 always
   771 label *label617
-    * label *label618
   772 sensor *tmp257 @unit @firstItem
   773 jump *label621 equal *tmp257 null
   774 label *label619
   775 ucontrol itemDrop @air 1000
-    * label *label620
   776 sensor *tmp257 @unit @firstItem
   777 jump *label619 notEqual *tmp257 null
   778 label *label621
   779 label *label622
-    * label *label623
   780 write 0 .display ".transportTarget"
   781 write null .display ".transportItem"
-    * label *label624
-    * label *label625
-    * label *label475
   782 label *label245
   783 set :fetchBlock:block .thoriumContainer
   784 set :fetchBlock:item @thorium
   785 setaddr :fetchBlock*retaddr *label248 (h:*label248)
   786 call *label23 *invalid :fetchBlock*retval (m:*label248) (h:*label248)
   787 label *label248
-    * label *label242
   788 jump *label241 always
   789 label *label240
   790 read *tmp97 .controller ".monos"
   791 jump *label249 lessThanEq *tmp97 3
-    * label *label411
   792 write "Phase 1: supplying base" .display ".status1"
-    * label *label412
   793 set :mineOre.1:ore @coal
-    * label *label546
-    * label *label547
   794 write "Mining " .display ".status2"
   795 write @coal .display ".item2"
   796 write "core" .display ".block2"
-    * label *label548
   797 set :mineOre:ore @coal
   798 set :mineOre:amount 30
   799 set :mineOre:block .core
   800 setaddr :mineOre*retaddr *label549 (h:*label549)
   801 call *label21 *invalid :mineOre*retval (m:*label549) (h:*label549)
   802 label *label549
-    * label *label550
-    * label *label251
   803 jump *label250 always
   804 label *label249
   805 set :supplyBase0:supplied false
 
   808 jump *label257 greaterThanEq *tmp354 .targetGraphite
   809 sensor *tmp357 .press @coal
   810 jump *label259 greaterThanEq *tmp357 5
-    * label *label413
   811 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label414
   812 set :supplyBlock:block .press
   813 set :supplyBlock:ore @coal
-    * label *label642
-    * label *label643
   814 write "Supplying " .display ".status2"
   815 write @coal .display ".item2"
   816 write .press .display ".block2"
-    * label *label644
   817 sensor :supplyBlock:blockCapacity .press @itemCapacity
   818 sensor *tmp292 .press @coal
   819 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp292
 
   825 call *label21 *invalid :mineOre*retval (m:*label645) (h:*label645)
   826 label *label645
   827 label *label646
-    * label *label647
-    * label *label648
   828 set :supplyBase0:supplied true
   829 label *label259
-    * label *label260
   830 label *label257
-    * label *label258
   831 sensor *tmp360 .core @silicon
   832 jump *label263 greaterThanEq *tmp360 .targetSilicon
   833 sensor *tmp363 .smelter @coal
   834 jump *label265 greaterThanEq *tmp363 5
-    * label *label415
   835 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label416
   836 set :supplyBlock:block .smelter
   837 set :supplyBlock:ore @coal
   838 setaddr :supplyBlock*retaddr *label268 (h:*label268)
 
   843 label *label265
   844 sensor *tmp366 .smelter @sand
   845 jump *label269 greaterThanEq *tmp366 5
-    * label *label417
   846 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label418
   847 set :supplyBlock:block .smelter
   848 set :supplyBlock:ore @sand
   849 setaddr :supplyBlock*retaddr *label272 (h:*label272)
 
   851 label *label272
   852 set :supplyBase0:supplied true
   853 label *label269
-    * label *label270
   854 label *label266
   855 label *label263
-    * label *label264
   856 sensor *tmp369 .battery @totalPower
   857 jump *label273 greaterThanEq *tmp369 .powerTarget
   858 sensor *tmp372 .generator @coal
   859 jump *label275 greaterThanEq *tmp372 2
-    * label *label419
   860 write "Goal 4: supplying generator" .display ".status1"
-    * label *label420
   861 set :supplyBlock:block .generator
   862 set :supplyBlock:ore @coal
   863 setaddr :supplyBlock*retaddr *label278 (h:*label278)
 
   865 label *label278
   866 set :supplyBase0:supplied true
   867 label *label275
-    * label *label276
   868 label *label273
-    * label *label274
   869 label *label255
-    * label *label256
   870 set *tmp377 100
   871 sensor *tmp375 .core @titanium
   872 jump *label280 greaterThanEq *tmp375 .targetTitanium
 
   880 sensor *tmp386 .battery @totalPower
   881 op mul *tmp387 .unloader1 .powerTarget
   882 jump *label285 greaterThanEq *tmp386 *tmp387
-    * label *label421
   883 write "Goal 5: supplying generator" .display ".status1"
-    * label *label422
   884 set :mineOre.1:ore @coal
-    * label *label637
-    * label *label638
   885 write "Mining " .display ".status2"
   886 write @coal .display ".item2"
   887 write "core" .display ".block2"
-    * label *label639
   888 set :mineOre:ore @coal
   889 set :mineOre:amount 30
   890 set :mineOre:block .core
   891 setaddr :mineOre*retaddr *label640 (h:*label640)
   892 call *label21 *invalid :mineOre*retval (m:*label640) (h:*label640)
   893 label *label640
-    * label *label641
   894 jump *label286 always
   895 label *label285
   896 sensor *tmp390 .core @silicon
   897 jump *label289 greaterThanEq *tmp390 .targetSilicon
-    * label *label423
   898 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label424
   899 sensor :supplyBase0:coal .core @coal
   900 sensor :supplyBase0:sand .core @sand
   901 set :mineOre.1:ore @sand
 
   909 label *label289
   910 sensor *tmp397 .core @copper
   911 jump *label295 greaterThanEq *tmp397 .targetCopper
-    * label *label425
   912 write "Goal 7: copper requirement" .display ".status1"
-    * label *label426
   913 set :mineOre.1:ore @copper
   914 setaddr :mineOre.1*retaddr *label298 (h:*label298)
   915 call *label22 *invalid :mineOre.1*retval (m:*label298) (h:*label298)
 
   918 label *label295
   919 sensor *tmp400 .core @lead
   920 jump *label299 greaterThanEq *tmp400 .targetLead
-    * label *label427
   921 write "Goal 8: lead requirement" .display ".status1"
-    * label *label428
   922 set :mineOre.1:ore @lead
   923 setaddr :mineOre.1*retaddr *label302 (h:*label302)
   924 call *label22 *invalid :mineOre.1*retval (m:*label302) (h:*label302)
 
   927 label *label299
   928 sensor *tmp403 .core @metaglass
   929 jump *label303 greaterThanEq *tmp403 .targetMetaglass
-    * label *label429
   930 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label430
   931 set :mineOre.1:ore @sand
   932 setaddr :mineOre.1*retaddr *label306 (h:*label306)
   933 call *label22 *invalid :mineOre.1*retval (m:*label306) (h:*label306)
   934 label *label306
   935 jump *label304 always
   936 label *label303
-    * label *label431
   937 write "Goal 10: supplying base" .display ".status1"
-    * label *label432
   938 sensor :supplyBase0:coal.1 .core @coal
   939 sensor :supplyBase0:sand.1 .core @sand
   940 set :mineOre.1:ore @sand
 
   950 label *label290
   951 label *label286
   952 label *label283
-    * label *label284
   953 jump *label282 always
   954 label *label281
-    * label *label433
   955 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label434
   956 set :fetchBlock:block .titaniumDrill
   957 set :fetchBlock:item @titanium
   958 setaddr :fetchBlock*retaddr *label312 (h:*label312)
   959 call *label23 *invalid :fetchBlock*retval (m:*label312) (h:*label312)
   960 label *label312
   961 label *label282
-    * label *label254
   962 label *label250
   963 label *label241
-    * label *label239
   964 return :supplyBase*retaddr
   965 end
   966 label *label33
-    * label *label380
   967 op sign :meetTarget:count :meetTarget:copper
-    * label *label381
-    * label *label384
   968 op sign *tmp411 :meetTarget:lead
   969 op add :meetTarget:count :meetTarget:count *tmp411
-    * label *label385
-    * label *label388
   970 op sign *tmp411 :meetTarget:graphite
   971 op add :meetTarget:count :meetTarget:count *tmp411
-    * label *label389
-    * label *label392
   972 op sign *tmp411 :meetTarget:silicon
   973 op add :meetTarget:count :meetTarget:count *tmp411
-    * label *label393
-    * label *label396
   974 op sign *tmp411 :meetTarget:titanium
   975 op add :meetTarget:count :meetTarget:count *tmp411
-    * label *label397
-    * label *label400
   976 op sign *tmp411 :meetTarget:metaglass
   977 op add :meetTarget:count :meetTarget:count *tmp411
-    * label *label401
-    * label *label404
   978 op sign *tmp411 :meetTarget:thorium
   979 op add :meetTarget:count :meetTarget:count *tmp411
-    * label *label405
-    * label *label316
   980 write :meetTarget:count .display ".totalTargets"
   981 write :meetTarget:block .display ".nextBlock"
   982 write :meetTarget:copper .display ".targetCopper"
 
  1017 set *tmp424 false
  1018 jump *label327 always
  1019 label *label328
-    * label *label329
  1020 sensor *tmp428 .core @lead
  1021 jump *label330 greaterThanEq *tmp428 .targetLead
  1022 set *tmp424 false
  1023 jump *label327 always
  1024 label *label330
-    * label *label331
  1025 sensor *tmp431 .core @graphite
  1026 jump *label332 greaterThanEq *tmp431 .targetGraphite
  1027 set *tmp424 false
  1028 jump *label327 always
  1029 label *label332
-    * label *label333
  1030 sensor *tmp434 .core @silicon
  1031 jump *label334 greaterThanEq *tmp434 .targetSilicon
  1032 set *tmp424 false
  1033 jump *label327 always
  1034 label *label334
-    * label *label335
  1035 sensor *tmp437 .core @titanium
  1036 jump *label336 greaterThanEq *tmp437 .targetTitanium
  1037 set *tmp424 false
  1038 jump *label327 always
  1039 label *label336
-    * label *label337
  1040 sensor *tmp440 .core @metaglass
  1041 jump *label338 greaterThanEq *tmp440 .targetMetaglass
  1042 set *tmp424 false
  1043 jump *label327 always
  1044 label *label338
-    * label *label339
  1045 sensor *tmp443 .core @thorium
  1046 jump *label340 greaterThanEq *tmp443 .targetThorium
  1047 set *tmp424 false
  1048 jump *label327 always
  1049 label *label340
-    * label *label341
  1050 set *tmp424 true
  1051 jump *label327 always
  1052 label *label327
 
  1054 setaddr :supplyBase*retaddr *label342 (h:*label342)
  1055 call *label32 *invalid :supplyBase*retval (m:*label342) (h:*label342)
  1056 label *label342
-    * label *label325
  1057 jump *label324 always
  1058 label *label326
-    * label *label313
  1059 return :meetTarget*retaddr
  1060 end
  1061 label *label34
 
  1082 read *tmp467 .blockBuilder ":buildBlockAt*finished"
  1083 jump *label348 equal *tmp467 false
  1084 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * label *label346
  1085 return :buildBlock*retaddr
  1086 end
  1087 label *label35
 
  1109 set :buildRemoteBlock*retval :buildBlock*retval
  1110 jump *label349 always
  1111 label *label350
-    * label *label351
  1112 set :buildRemoteBlock*retval false
  1113 jump *label349 always
  1114 label *label349
 
  1137 call *label34 *invalid :buildBlock*retval (m:*label356) (h:*label356)
  1138 label *label356
  1139 set :buildBlockFromCfg*retval :buildBlock*retval
-    * label *label354
  1140 return :buildBlockFromCfg*retaddr
  1141 end
  1142 label *label37
 
  1146 call *label36 *invalid :buildBlockFromCfg*retval (m:*label358) (h:*label358)
  1147 label *label358
  1148 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
-    * label *label357
  1149 return :buildBlockFromCfg.1*retaddr
  1150 end
  1151 label *label38
 
  1164 setaddr :meetTarget*retaddr *label361 (h:*label361)
  1165 call *label33 *invalid :meetTarget*retval (m:*label361) (h:*label361)
  1166 label *label361
-    * label *label359
  1167 return :meetTarget.1*retaddr
  1168 end
  1169 label *label40
 
  1183 write 0 .controller ".leadReserve"
  1184 write 0 .controller ".siliconReserve"
  1185 write 0 .controller ".graphiteReserve"
-    * label *label365
  1186 return :buildUnits*retaddr
  1187 end
  1188 label *label41
  1189 label *label368
  1190 ubind :flagUnits:unit
  1191 set :flagUnits:firstUnit @unit
-    * label *label369
  1192 jump *label368 equal :flagUnits:firstUnit null
-    * label *label370
  1193 set :flagUnits:x @thisx
  1194 label *label371
  1195 ucontrol flag :flagUnits:x
  1196 op add :flagUnits:x :flagUnits:x 4
  1197 ubind :flagUnits:unit
-    * label *label372
  1198 jump *label371 notEqual @unit :flagUnits:firstUnit
-    * label *label373
-    * label *label367
  1199 return :flagUnits*retaddr
  1200 end
  1201 label *label42
 
  1209 jump *label378 equal *tmp486 false
  1210 ucontrol stop
  1211 label *label378
-    * label *label379
  1212 ubind :lineUpUnits:unit
-    * label *label376
  1213 jump *label375 notEqual @unit :lineUpUnits:firstUnit
-    * label *label377
-    * label *label374
  1214 return :lineUpUnits*retaddr
  1215 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-3 instructions):
 
   147 call *label32 *invalid :supplyBase*retval (m:*label72) (h:*label72)
   148 label *label72
   149 sensor *tmp158 .battery @totalPower
-    * jump *label73 greaterThanEq *tmp158 300
-    * jump *label71 always
+  150 jump *label71 lessThan *tmp158 300
   151 label *label73
   152 read *tmp97 .controller ".monos"
   153 jump *label69 lessThan *tmp97 3
 
   508 op notEqual *tmp269 :mineOre:item null
   509 op notEqual *tmp270 :mineOre:item :mineOre:ore
   510 op land *tmp271 *tmp269 *tmp270
-    * jump *label203 equal *tmp271 false
-    * jump *label202 always
+  511 jump *label202 notEqual *tmp271 false
   512 label *label203
   513 ucontrol mine :locateOre:x :locateOre:y
-    * jump *label205 lessThanEq @second :mineOre:stop
-    * jump *label202 always
+  514 jump *label202 greaterThan @second :mineOre:stop
   515 label *label205
   516 sensor *tmp275 @unit @totalItems
   517 jump *label200 lessThan *tmp275 :mineOre:amount

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   148 label *label72
   149 sensor *tmp158 .battery @totalPower
   150 jump *label71 lessThan *tmp158 300
-    * label *label73
   151 read *tmp97 .controller ".monos"
   152 jump *label69 lessThan *tmp97 3
   153 label *label71
 
   508 op notEqual *tmp270 :mineOre:item :mineOre:ore
   509 op land *tmp271 *tmp269 *tmp270
   510 jump *label202 notEqual *tmp271 false
-    * label *label203
   511 ucontrol mine :locateOre:x :locateOre:y
   512 jump *label202 greaterThan @second :mineOre:stop
-    * label *label205
   513 sensor *tmp275 @unit @totalItems
   514 jump *label200 lessThan *tmp275 :mineOre:amount
   515 label *label202

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   694 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   695 sensor *tmp292 .thoriumGenerator @coal
   696 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp292
-    * jump *label630 lessThanEq :supplyBlock:missing 0
+  697 jump *label245 lessThanEq :supplyBlock:missing 0
   698 set :mineOre:ore @coal
   699 set :mineOre:amount :supplyBlock:blockCapacity
   700 set :mineOre:block .thoriumGenerator
 
   779 setaddr :fetchBlock*retaddr *label248 (h:*label248)
   780 call *label23 *invalid :fetchBlock*retval (m:*label248) (h:*label248)
   781 label *label248
-    * jump *label241 always
+  782 return :supplyBase*retaddr
   783 label *label240
   784 read *tmp97 .controller ".monos"
   785 jump *label249 lessThanEq *tmp97 3
 
   794 setaddr :mineOre*retaddr *label549 (h:*label549)
   795 call *label21 *invalid :mineOre*retval (m:*label549) (h:*label549)
   796 label *label549
-    * jump *label250 always
+  797 return :supplyBase*retaddr
   798 label *label249
   799 set :supplyBase0:supplied false
   800 jump *label255 notEqual .unloader1 null
 
   870 label *label280
   871 sensor *tmp381 .titaniumDrill @titanium
   872 jump *label281 greaterThanEq *tmp381 *tmp377
-    * jump *label283 notEqual :supplyBase0:supplied false
+  873 jump *label282 notEqual :supplyBase0:supplied false
   874 sensor *tmp386 .battery @totalPower
   875 op mul *tmp387 .unloader1 .powerTarget
   876 jump *label285 greaterThanEq *tmp386 *tmp387
 
   885 setaddr :mineOre*retaddr *label640 (h:*label640)
   886 call *label21 *invalid :mineOre*retval (m:*label640) (h:*label640)
   887 label *label640
-    * jump *label286 always
+  888 return :supplyBase*retaddr
   889 label *label285
   890 sensor *tmp390 .core @silicon
   891 jump *label289 greaterThanEq *tmp390 .targetSilicon
 
   899 setaddr :mineOre.1*retaddr *label294 (h:*label294)
   900 call *label22 *invalid :mineOre.1*retval (m:*label294) (h:*label294)
   901 label *label294
-    * jump *label290 always
+  902 return :supplyBase*retaddr
   903 label *label289
   904 sensor *tmp397 .core @copper
   905 jump *label295 greaterThanEq *tmp397 .targetCopper
 
   908 setaddr :mineOre.1*retaddr *label298 (h:*label298)
   909 call *label22 *invalid :mineOre.1*retval (m:*label298) (h:*label298)
   910 label *label298
-    * jump *label296 always
+  911 return :supplyBase*retaddr
   912 label *label295
   913 sensor *tmp400 .core @lead
   914 jump *label299 greaterThanEq *tmp400 .targetLead
 
   917 setaddr :mineOre.1*retaddr *label302 (h:*label302)
   918 call *label22 *invalid :mineOre.1*retval (m:*label302) (h:*label302)
   919 label *label302
-    * jump *label300 always
+  920 return :supplyBase*retaddr
   921 label *label299
   922 sensor *tmp403 .core @metaglass
   923 jump *label303 greaterThanEq *tmp403 .targetMetaglass
 
   926 setaddr :mineOre.1*retaddr *label306 (h:*label306)
   927 call *label22 *invalid :mineOre.1*retval (m:*label306) (h:*label306)
   928 label *label306
-    * jump *label304 always
+  929 return :supplyBase*retaddr
   930 label *label303
   931 write "Goal 10: supplying base" .display ".status1"
   932 sensor :supplyBase0:coal.1 .core @coal
 
   944 label *label290
   945 label *label286
   946 label *label283
-    * jump *label282 always
+  947 return :supplyBase*retaddr
   948 label *label281
   949 write "Goal 11: Fetching titanium" .display ".status1"
   950 set :fetchBlock:block .titaniumDrill
 
  1101 call *label34 *invalid :buildBlock*retval (m:*label353) (h:*label353)
  1102 label *label353
  1103 set :buildRemoteBlock*retval :buildBlock*retval
-    * jump *label349 always
+ 1104 return :buildRemoteBlock*retaddr
  1105 label *label350
  1106 set :buildRemoteBlock*retval false
-    * jump *label349 always
+ 1107 return :buildRemoteBlock*retaddr
  1108 label *label349
  1109 return :buildRemoteBlock*retaddr
  1110 end

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-17 instructions):
 
   471 call *label42 *invalid :lineUpUnits*retval (m:*label150) (h:*label150)
   472 label *label150
   473 jump *label144 always
-    * end
   474 label *label21
   475 op min :mineOre:amount :mineOre:amount 30
   476 write :mineOre:amount .display ".transportTarget"
 
   546 write 0 .display ".transportTarget"
   547 write null .display ".transportItem"
   548 return :mineOre*retaddr
-    * end
   549 label *label22
   550 write "Mining " .display ".status2"
   551 write :mineOre.1:ore .display ".item2"
 
   557 call *label21 *invalid :mineOre*retval (m:*label210) (h:*label210)
   558 label *label210
   559 return :mineOre.1*retaddr
-    * end
   560 label *label23
   561 sensor *tmp278 :fetchBlock:block @itemCapacity
   562 op min :transportStatus:target *tmp278 30
 
   630 write 0 .display ".transportTarget"
   631 write null .display ".transportItem"
   632 return :fetchBlock*retaddr
-    * end
   633 label *label24
   634 write "Supplying " .display ".status2"
   635 write :supplyBlock:ore .display ".item2"
 
   646 label *label226
   647 label *label224
   648 return :supplyBlock*retaddr
-    * end
   649 label *label31
   650 read *tmp308 :unpackCfg:cfg 0
   651 op sub *tmp309 *tmp308 35
 
   671 read *tmp341 :unpackCfg:cfg 10
   672 op sub :unpackCfg:rotation *tmp341 35
   673 return :unpackCfg*retaddr
-    * end
   674 label *label32
   675 sensor *tmp343 .core @silicon
   676 op sub *tmp344 .targetSilicon *tmp343
 
   695 setaddr :mineOre*retaddr *label629 (h:*label629)
   696 call *label21 *invalid :mineOre*retval (m:*label629) (h:*label629)
   697 label *label629
-    * label *label630
   698 jump *label245 always
   699 label *label244
   700 sensor *tmp296 .thoriumGenerator @itemCapacity
 
   931 setaddr :mineOre.1*retaddr *label310 (h:*label310)
   932 call *label22 *invalid :mineOre.1*retval (m:*label310) (h:*label310)
   933 label *label310
-    * label *label304
-    * label *label300
-    * label *label296
-    * label *label290
-    * label *label286
-    * label *label283
   934 return :supplyBase*retaddr
   935 label *label281
   936 write "Goal 11: Fetching titanium" .display ".status1"
 
   940 call *label23 *invalid :fetchBlock*retval (m:*label312) (h:*label312)
   941 label *label312
   942 label *label282
-    * label *label250
-    * label *label241
   943 return :supplyBase*retaddr
-    * end
   944 label *label33
   945 op sign :meetTarget:count :meetTarget:copper
   946 op sign *tmp411 :meetTarget:lead
 
  1035 jump *label324 always
  1036 label *label326
  1037 return :meetTarget*retaddr
-    * end
  1038 label *label34
  1039 set :meetTarget:block :buildBlock:block
  1040 set :meetTarget:copper :buildBlock:copper
 
  1060 jump *label348 equal *tmp467 false
  1061 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1062 return :buildBlock*retaddr
-    * end
  1063 label *label35
  1064 op add *tmp469 :buildRemoteBlock:x :buildRemoteBlock:y
  1065 jump *label350 lessThanEq *tmp469 0
 
  1087 label *label350
  1088 set :buildRemoteBlock*retval false
  1089 return :buildRemoteBlock*retaddr
-    * label *label349
-    * return :buildRemoteBlock*retaddr
-    * end
  1090 label *label36
  1091 set :unpackCfg:cfg :buildBlockFromCfg:cfg
  1092 setaddr :unpackCfg*retaddr *label355 (h:*label355)
 
  1111 label *label356
  1112 set :buildBlockFromCfg*retval :buildBlock*retval
  1113 return :buildBlockFromCfg*retaddr
-    * end
  1114 label *label37
  1115 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
  1116 set :buildBlockFromCfg:config null
 
  1119 label *label358
  1120 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
  1121 return :buildBlockFromCfg.1*retaddr
-    * end
  1122 label *label38
  1123 set :unpackCfg:cfg :meetTarget.1:cfg
  1124 setaddr :unpackCfg*retaddr *label360 (h:*label360)
 
  1136 call *label33 *invalid :meetTarget*retval (m:*label361) (h:*label361)
  1137 label *label361
  1138 return :meetTarget.1*retaddr
-    * end
  1139 label *label40
  1140 set :meetTarget:block 0
  1141 set :meetTarget:copper 0
 
  1154 write 0 .controller ".siliconReserve"
  1155 write 0 .controller ".graphiteReserve"
  1156 return :buildUnits*retaddr
-    * end
  1157 label *label41
  1158 label *label368
  1159 ubind :flagUnits:unit
 
  1166 ubind :flagUnits:unit
  1167 jump *label371 notEqual @unit :flagUnits:firstUnit
  1168 return :flagUnits*retaddr
-    * end
  1169 label *label42
  1170 ubind :lineUpUnits:unit
  1171 set :lineUpUnits:firstUnit @unit
 
  1180 ubind :lineUpUnits:unit
  1181 jump *label375 notEqual @unit :lineUpUnits:firstUnit
  1182 return :lineUpUnits*retaddr
-    * end

Final code before resolving virtual instructions:

    0:  set .ERROR ""                                                Actions.mnd: volatile var ERROR = "";
    1:  set .display processor1                                      CoreBuilder.mnd: var display = processor1,
    2:  set .blockBuilder processor5                                 ...
    3:  set .press null                                              CoreBuilder.mnd: var
    4:  set .generator null                                          ...
    5:  set .battery null                                            ...
    6:  set .smelter null                                            ...
    7:  set .titaniumDrill null                                      ...
    8:  set .unloader1 null                                          ...
    9:  set .thoriumContainer null                                   ...
   10:  set .thoriumGenerator null                                   ...
   11:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   12:  set .graphiteSurplus 20                                      ...
   13:  set .siliconSurplus 20                                       ...
   14:  set .metaglassSurplus 20                                     ...
   15:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label43                                               CoreBuilder.mnd: do
   16:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   17:  set .builder @unit                                           ...
   18:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   19:  jump *label43 equal .core null                               CoreBuilder.mnd: do
   20:  set :buildBlockFromCfg.1:cfg "#'+nA######"                   CoreBuilder.mnd: press = buildBlockFromCfg(PRESS);
   21:  set :buildBlockFromCfg:cfg "#'+nA######"                     CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
   22:  set :buildBlockFromCfg:config null                           ...
   23:  setaddr :buildBlockFromCfg*retaddr *label650                 ...
   24:  call *label36 *invalid :buildBlockFromCfg*retval             ...
        label *label650                                              ...
   25:  set .press :buildBlockFromCfg*retval                         CoreBuilder.mnd: press = buildBlockFromCfg(PRESS);
   26:  set :buildBlockFromCfg.1:cfg "k*/(7######"                   CoreBuilder.mnd: battery = buildBlockFromCfg(BATTERY1);
   27:  setaddr :buildBlockFromCfg.1*retaddr *label47                ...
   28:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label47                                               ...
   29:  set .battery :buildBlockFromCfg.1*retval                     ...
   30:  set :buildBlockFromCfg.1:cfg "k+/(7######"                   CoreBuilder.mnd: buildBlockFromCfg(BATTERY2);
   31:  setaddr :buildBlockFromCfg.1*retaddr *label48                ...
   32:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label48                                               ...
   33:  set :buildBlockFromCfg.1:cfg "m*.<2######"                   CoreBuilder.mnd: generator = buildBlockFromCfg(GENERATOR);
   34:  setaddr :buildBlockFromCfg.1*retaddr *label49                ...
   35:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label49                                               ...
   36:  set .generator :buildBlockFromCfg.1*retval                   ...
   37:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
   38:  set :buildBlockFromCfg.1:cfg "%+-A<######"                   CoreBuilder.mnd: smelter = buildBlockFromCfg(SMELTER);
   39:  setaddr :buildBlockFromCfg.1*retaddr *label50                ...
   40:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label50                                               ...
   41:  set .smelter :buildBlockFromCfg.1*retval                     ...
   42:  set :buildBlockFromCfg.1:cfg "T+,%%######"                   CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT1);
   43:  setaddr :buildBlockFromCfg.1*retaddr *label51                ...
   44:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label51                                               ...
   45:  set :meetTarget.1:cfg "w**5#-#####"                          CoreBuilder.mnd: meetTarget(cfg);
   46:  setaddr :meetTarget.1*retaddr *label53                       ...
   47:  call *label38 *invalid :meetTarget.1*retval                  ...
        label *label53                                               ...
   48:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
   49:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   50:  write .coreY processor4 ":findDrillLocation:y"               ...
   51:  write @unit processor4 ":findDrillLocation:unit"             ...
   52:  write @titanium processor4 ":findDrillLocation:item"         ...
   53:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
   54:  write 2 processor4 ":findDrillLocation:size"                 ...
   55:  write 4 processor4 ":findDrillLocation:limit"                ...
   56:  write false processor4 ":findDrillLocation*finished"         ...
   57:  write 1 processor4 "@counter"                                ...
        label *label54                                               ...
   58:  wait 1e-15                                                   ...
   59:  read *tmp143 processor4 ":findDrillLocation*finished"        ...
   60:  jump *label54 equal *tmp143 false                            ...
   61:  read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocat ...
   62:  read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocat ...
   63:  read :buildFirstTitaniumDrill:result processor4 ":findDrillL ...
   64:  jump *label55 notEqual :buildFirstTitaniumDrill:result false CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   65:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
   66:  stop                                                         Actions.mnd: stopProcessor();
        label *label55                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   67:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
   68:  write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTit CoreBuilder.mnd: return blockBuilder.buildFirstTitaniumDrillAt(dx, dy);
   69:  write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTit ...
   70:  write false processor5 ":buildFirstTitaniumDrillAt*finished" ...
   71:  write 2 processor5 "@counter"                                ...
        label *label58                                               ...
   72:  wait 1e-15                                                   ...
   73:  read *tmp149 processor5 ":buildFirstTitaniumDrillAt*finished ...
   74:  jump *label58 equal *tmp149 false                            ...
   75:  read *tmp132 processor5 ":buildFirstTitaniumDrillAt*retval"  ...
   76:  set .titaniumDrill *tmp132                                   CoreBuilder.mnd: titaniumDrill = buildFirstTitaniumDrill(PNEUMATIC_DRILL);
   77:  write *tmp132 processor1 ".titaniumDrill"                    CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
   78:  set :buildBlockFromCfg.1:cfg "*,###A<###"                   CoreBuilder.mnd: unloader1 = buildBlockFromCfg(UNLOADER1);
   79:  setaddr :buildBlockFromCfg.1*retaddr *label59                ...
   80:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label59                                               ...
   81:  set .unloader1 :buildBlockFromCfg.1*retval                   ...
   82:  set :buildBlockFromCfg.1:cfg "T),%%######"                   CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT2);
   83:  setaddr :buildBlockFromCfg.1*retaddr *label60                ...
   84:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label60                                               ...
   85:  set :buildBlockFromCfg.1:cfg "W*-'%######"                   CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE1);
   86:  setaddr :buildBlockFromCfg.1*retaddr *label61                ...
   87:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label61                                               ...
   88:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
   89:  set :buildBlockFromCfg:cfg "®-.}U#U####"                     CoreBuilder.mnd: controller = buildBlockFromCfg(PROCESSOR, processor2);
   90:  set :buildBlockFromCfg:config processor2                     ...
   91:  setaddr :buildBlockFromCfg*retaddr *label62                  ...
   92:  call *label36 *invalid :buildBlockFromCfg*retval             ...
        label *label62                                               ...
   93:  set .controller :buildBlockFromCfg*retval                    ...
   94:  write processor6 :buildBlockFromCfg*retval ".timer"          CoreBuilder.mnd: controller.timer = timer;
   95:  write processor1 :buildBlockFromCfg*retval ".display"        CoreBuilder.mnd: controller.display = display;
   96:  write .core :buildBlockFromCfg*retval ".core"                CoreBuilder.mnd: controller.core = core;
   97:  write bank1 :buildBlockFromCfg*retval ".bank"                CoreBuilder.mnd: controller.bank = bank1;
   98:  write .battery :buildBlockFromCfg*retval ".battery"          CoreBuilder.mnd: controller.battery = battery;
   99:  write .generator :buildBlockFromCfg*retval ".generator"      CoreBuilder.mnd: controller.generator = generator;
  100:  write .smelter :buildBlockFromCfg*retval ".smelter"          CoreBuilder.mnd: controller.smelter = smelter;
  101:  write .press :buildBlockFromCfg*retval ".press"              CoreBuilder.mnd: controller.press = press;
  102:  write .unloader1 :buildBlockFromCfg*retval ".unloader1"      CoreBuilder.mnd: controller.unloader1 = unloader1;
  103:  set :buildBlockFromCfg.1:cfg "g)'%)######"                   CoreBuilder.mnd: buildBlockFromCfg(POWER_NODE);
  104:  setaddr :buildBlockFromCfg.1*retaddr *label63                ...
  105:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label63                                               ...
  106:  set :buildBlockFromCfg.1:cfg "(*###A<###"                   CoreBuilder.mnd: controller.unloader2 = buildBlockFromCfg(UNLOADER2);
  107:  setaddr :buildBlockFromCfg.1*retaddr *label64                ...
  108:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label64                                               ...
  109:  write :buildBlockFromCfg.1*retval .controller ".unloader2"   ...
  110:  set :buildBlockFromCfg.1:cfg "'(_i#####&"                   CoreBuilder.mnd: var factory = buildBlockFromCfg(AIR_FACTORY);
  111:  setaddr :buildBlockFromCfg.1*retaddr *label65                ...
  112:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label65                                               ...
  113:  write :buildBlockFromCfg.1*retval .controller ".factory"     CoreBuilder.mnd: controller.factory = factory;
  114:  write :buildBlockFromCfg.1*retval processor1 ".airFactory"   CoreBuilder.mnd: display.airFactory = factory;
  115:  write 1 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  116:  write 1 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  117:  write 3 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  118:  write 3 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  119:  write 85 .controller ".pressTarget"                          CoreBuilder.mnd: controller.pressTarget = 85;
  120:  write 150 .controller ".smelterTarget"                       CoreBuilder.mnd: controller.smelterTarget = 150;
  121:  write 30 .controller ".kilnTarget"                           CoreBuilder.mnd: controller.kilnTarget = 30;
  122:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  123:  set .siliconSurplus 20                                       ...
  124:  setaddr :buildUnits*retaddr *label68                         CoreBuilder.mnd: buildUnits();
  125:  call *label40 *invalid :buildUnits*retval                    ...
        label *label68                                               ...
        label *label69                                               CoreBuilder.mnd: do
  126:  setaddr :supplyBase*retaddr *label72                         CoreBuilder.mnd: supplyBase();
  127:  call *label32 *invalid :supplyBase*retval                    ...
        label *label72                                               ...
  128:  sensor *tmp158 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  129:  jump *label71 lessThan *tmp158 300                           ...
  130:  read *tmp97 .controller ".monos"                             CoreBuilder.mnd: while controller.monos < 3;
  131:  jump *label69 lessThan *tmp97 3                              CoreBuilder.mnd: do
        label *label71                                               ...
  132:  set .siliconSurplus 65                                       CoreBuilder.mnd: siliconSurplus = 65;
  133:  set :buildBlockFromCfg.1:cfg ",)###A<###"                   CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3);
  134:  setaddr :buildBlockFromCfg.1*retaddr *label75                ...
  135:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label75                                               ...
  136:  set :buildBlockFromCfg.1:cfg "T,*%%######"                   CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT3);
  137:  setaddr :buildBlockFromCfg.1*retaddr *label76                ...
  138:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label76                                               ...
  139:  set :buildBlockFromCfg.1:cfg "',+_AA#####"                   CoreBuilder.mnd: kiln = buildBlockFromCfg(KILN);
  140:  setaddr :buildBlockFromCfg.1*retaddr *label77                ...
  141:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label77                                               ...
  142:  write :buildBlockFromCfg.1*retval .controller ".kiln"        CoreBuilder.mnd: controller.kiln = kiln;
  143:  set :buildBlockFromCfg.1:cfg "z%-AAA##A##"                   CoreBuilder.mnd: buildBlockFromCfg(WATER_EXT);
  144:  setaddr :buildBlockFromCfg.1*retaddr *label78                ...
  145:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label78                                               ...
  146:  set :buildBlockFromCfg.1:cfg "W'*'%######"                   CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE2);
  147:  setaddr :buildBlockFromCfg.1*retaddr *label79                ...
  148:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label79                                               ...
  149:  set :buildBlockFromCfg.1:cfg "W&*'%######"                   CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE3);
  150:  setaddr :buildBlockFromCfg.1*retaddr *label80                ...
  151:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label80                                               ...
  152:  set :buildBlockFromCfg.1:cfg "o%+FK<A####"                   CoreBuilder.mnd: controller.generator2 = buildBlockFromCfg(STEAM_GEN);
  153:  setaddr :buildBlockFromCfg.1*retaddr *label81                ...
  154:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label81                                               ...
  155:  write :buildBlockFromCfg.1*retval .controller ".generator2"  ...
  156:  set :buildBlockFromCfg.1:cfg "$(.#U<###"                   CoreBuilder.mnd: controller.multipress = buildBlockFromCfg(MULTIPRESS);
  157:  setaddr :buildBlockFromCfg.1*retaddr *label82                ...
  158:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label82                                               ...
  159:  write :buildBlockFromCfg.1*retval .controller ".multipress"  ...
  160:  set .graphiteSurplus 150                                     CoreBuilder.mnd: graphiteSurplus = 150;
  161:  set :buildBlockFromCfg.1:cfg " '%-#2#####"                   CoreBuilder.mnd: controller.payloadRouter = buildBlockFromCfg(PAYLOAD_ROUTER);
  162:  setaddr :buildBlockFromCfg.1*retaddr *label83                ...
  163:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label83                                               ...
  164:  write :buildBlockFromCfg.1*retval .controller ".payloadRoute ...
  165:  set :buildBlockFromCfg.1:cfg "*(###A<###"                   CoreBuilder.mnd: controller.unloader4 = buildBlockFromCfg(UNLOADER4);
  166:  setaddr :buildBlockFromCfg.1*retaddr *label84                ...
  167:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label84                                               ...
  168:  write :buildBlockFromCfg.1*retval .controller ".unloader4"   ...
  169:  set :buildBlockFromCfg.1:cfg "X*''%######"                   CoreBuilder.mnd: buildBlockFromCfg(UNDERFLOW_GATE);
  170:  setaddr :buildBlockFromCfg.1*retaddr *label85                ...
  171:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label85                                               ...
  172:  set :buildBlockFromCfg.1:cfg "*%ë#}####"                   CoreBuilder.mnd: var reconstructor = buildBlockFromCfg(ADDITIVE_REC);
  173:  setaddr :buildBlockFromCfg.1*retaddr *label86                ...
  174:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label86                                               ...
  175:  write :buildBlockFromCfg.1*retval .controller ".reconstructo CoreBuilder.mnd: controller.reconstructor = reconstructor;
  176:  write :buildBlockFromCfg.1*retval processor1 ".reconstructor CoreBuilder.mnd: display.reconstructor = reconstructor;
  177:  set :buildBlockFromCfg.1:cfg "l/,#U#A7###"                   CoreBuilder.mnd: buildBlockFromCfg(BATTERY_LARGE);
  178:  setaddr :buildBlockFromCfg.1*retaddr *label87                ...
  179:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label87                                               ...
  180:  setaddr :buildUnits*retaddr *label88                         CoreBuilder.mnd: buildUnits();
  181:  call *label40 *invalid :buildUnits*retval                    ...
        label *label88                                               ...
  182:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  183:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  184:  write 6 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = target;
  185:  write 6 processor1 ".polyTarget"                             CoreBuilder.mnd: display.polyTarget = target;
  186:  set :buildBlockFromCfg.1:cfg "%.)A<######"                   CoreBuilder.mnd: controller.smelter2 = buildBlockFromCfg(SMELTER2);
  187:  setaddr :buildBlockFromCfg.1*retaddr *label90                ...
  188:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label90                                               ...
  189:  write :buildBlockFromCfg.1*retval .controller ".smelter2"    ...
  190:  set :buildBlockFromCfg.1:cfg "T-*%%######"                   CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT4);
  191:  setaddr :buildBlockFromCfg.1*retaddr *label91                ...
  192:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label91                                               ...
  193:  set :buildBlockFromCfg.1:cfg "T-)%%######"                   CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT5);
  194:  setaddr :buildBlockFromCfg.1*retaddr *label92                ...
  195:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label92                                               ...
  196:  set :buildBlockFromCfg:cfg "--###A<###"                     CoreBuilder.mnd: buildBlockFromCfg(UNLOADER5, @sand);
  197:  set :buildBlockFromCfg:config @sand                          ...
  198:  setaddr :buildBlockFromCfg*retaddr *label93                  ...
  199:  call *label36 *invalid :buildBlockFromCfg*retval             ...
        label *label93                                               ...
  200:  setaddr :buildUnits*retaddr *label94                         CoreBuilder.mnd: buildUnits();
  201:  call *label40 *invalid :buildUnits*retval                    ...
        label *label94                                               ...
  202:  read *tmp98 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 3 do
  203:  jump *label97 greaterThanEq *tmp98 3                         ...
        label *label633                                              ...
  204:  setaddr :supplyBase*retaddr *label98                         CoreBuilder.mnd: supplyBase();
  205:  call *label32 *invalid :supplyBase*retval                    ...
        label *label98                                               ...
  206:  read *tmp98 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 3 do
  207:  jump *label633 lessThan *tmp98 3                             ...
        label *label97                                               ...
  208:  write 3 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  209:  write 3 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  210:  read *tmp96 .controller ".flares"                            CoreBuilder.mnd: while controller.flares < 2 do
  211:  jump *label102 greaterThanEq *tmp96 2                        ...
        label *label634                                              ...
  212:  setaddr :supplyBase*retaddr *label103                        CoreBuilder.mnd: supplyBase();
  213:  call *label32 *invalid :supplyBase*retval                    ...
        label *label103                                              ...
  214:  read *tmp96 .controller ".flares"                            CoreBuilder.mnd: while controller.flares < 2 do
  215:  jump *label634 lessThan *tmp96 2                             ...
        label *label102                                              ...
  216:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
  217:  write 5 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  218:  write 5 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  219:  write @ore-titanium processor1 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
  220:  wait 0.000000001                                             CoreBuilder.mnd: wait(1e-9);
  221:  ubind @flare                                                 CoreBuilder.mnd: ubind(@flare);
  222:  read :blocksBuildTitaniumDrills:current processor4 ".locatio CoreBuilder.mnd: var current = oreLocator.locations;
  223:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: async(oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9));
  224:  write .coreY processor4 ":findDrillLocation:y"               ...
  225:  write @unit processor4 ":findDrillLocation:unit"             ...
  226:  write @titanium processor4 ":findDrillLocation:item"         ...
  227:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  228:  write 4 processor4 ":findDrillLocation:size"                 ...
  229:  write 1000000000 processor4 ":findDrillLocation:limit"       ...
  230:  write false processor4 ":findDrillLocation*finished"         ...
  231:  write 1 processor4 "@counter"                                ...
  232:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  233:  write .controller processor5 ":buildTitaniumDrills:aControll CoreBuilder.mnd: blockBuilder.buildTitaniumDrills(controller, current);
  234:  write :blocksBuildTitaniumDrills:current processor5 ":buildT ...
  235:  write false processor5 ":buildTitaniumDrills*finished"       ...
  236:  write 3 processor5 "@counter"                                ...
        label *label106                                              ...
  237:  wait 1e-15                                                   ...
  238:  read *tmp193 processor5 ":buildTitaniumDrills*finished"      ...
  239:  jump *label106 equal *tmp193 false                           ...
  240:  write false processor4 ":stopLocation*finished"              CoreBuilder.mnd: async(oreLocator.stopLocation());
  241:  write 3 processor4 "@counter"                                ...
  242:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  243:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7);
  244:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  245:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  246:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  247:  write false processor4 ":layoutThoriumDrill*finished"        ...
  248:  write 2 processor4 "@counter"                                ...
        label *label108                                              ...
  249:  wait 1e-15                                                   ...
  250:  read *tmp198 processor4 ":layoutThoriumDrill*finished"       ...
  251:  jump *label108 equal *tmp198 false                           ...
  252:  set :meetTarget.1:cfg "x**F#AA7###"                          CoreBuilder.mnd: meetTarget(LASER_DRILL);
  253:  setaddr :meetTarget.1*retaddr *label109                      ...
  254:  call *label38 *invalid :meetTarget.1*retval                  ...
        label *label109                                              ...
        label *label110                                              CoreBuilder.mnd: var result = await(oreLocator.layoutThoriumDrill);
  255:  wait 1e-15                                                   ...
  256:  read *tmp200 processor4 ":layoutThoriumDrill*finished"       ...
  257:  jump *label110 equal *tmp200 false                           ...
  258:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  259:  jump *label111 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  260:  set .ERROR "Cannot locate spot for thorium drill"            Actions.mnd: ERROR = error;
  261:  stop                                                         Actions.mnd: stopProcessor();
        label *label111                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  262:  write @laser-drill processor5 ":buildBlockAt:block"          CoreBuilder.mnd: thoriumDrill = blockBuilder.buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0);
  263:  read *tmp54 processor4 ".drillX"                             ...
  264:  write *tmp54 processor5 ":buildBlockAt:x"                    ...
  265:  read *tmp55 processor4 ".drillY"                             ...
  266:  write *tmp55 processor5 ":buildBlockAt:y"                    ...
  267:  write null processor5 ":buildBlockAt:rotation"               ...
  268:  write 0 processor5 ":buildBlockAt:config"                    ...
  269:  write false processor5 ":buildBlockAt*finished"              ...
  270:  write 1 processor5 "@counter"                                ...
        label *label114                                              ...
  271:  wait 1e-15                                                   ...
  272:  read *tmp209 processor5 ":buildBlockAt*finished"             ...
  273:  jump *label114 equal *tmp209 false                           ...
  274:  read .thoriumDrill processor5 ":buildBlockAt*retval"         ...
  275:  set :buildRemoteBlock:cfg "z%-AAA##A##"                      CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water1X, oreLocator.water1Y);
  276:  read :buildRemoteBlock:x processor4 ".water1X"               ...
  277:  read :buildRemoteBlock:y processor4 ".water1Y"               ...
  278:  setaddr :buildRemoteBlock*retaddr *label115                  ...
  279:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label115                                              ...
  280:  read :buildRemoteBlock:x processor4 ".water2X"               CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water2X, oreLocator.water2Y);
  281:  read :buildRemoteBlock:y processor4 ".water2Y"               ...
  282:  setaddr :buildRemoteBlock*retaddr *label116                  ...
  283:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label116                                              ...
  284:  set :buildRemoteBlock:cfg "o%+FK<A####"                      CoreBuilder.mnd: thoriumGenerator = buildRemoteBlock(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  285:  read :buildRemoteBlock:x processor4 ".generatorX"            ...
  286:  read :buildRemoteBlock:y processor4 ".generatorY"            ...
  287:  setaddr :buildRemoteBlock*retaddr *label117                  ...
  288:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label117                                              ...
  289:  set .thoriumGenerator :buildRemoteBlock*retval               ...
  290:  set :buildRemoteBlock:cfg "g)'%)######"                      CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.nodeX, oreLocator.nodeY);
  291:  read :buildRemoteBlock:x processor4 ".nodeX"                 ...
  292:  read :buildRemoteBlock:y processor4 ".nodeY"                 ...
  293:  setaddr :buildRemoteBlock*retaddr *label118                  ...
  294:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label118                                              ...
  295:  set :buildRemoteBlock:cfg "r**#-#+####"                      CoreBuilder.mnd: buildRemoteBlock(SOLAR_PANEL, oreLocator.panelX, oreLocator.panelY);
  296:  read :buildRemoteBlock:x processor4 ".panelX"                ...
  297:  read :buildRemoteBlock:y processor4 ".panelY"                ...
  298:  setaddr :buildRemoteBlock*retaddr *label119                  ...
  299:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label119                                              ...
  300:  set :buildRemoteBlock:cfg "k*/(7######"                      CoreBuilder.mnd: buildRemoteBlock(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  301:  read :buildRemoteBlock:x processor4 ".batteryX"              ...
  302:  read :buildRemoteBlock:y processor4 ".batteryY"              ...
  303:  setaddr :buildRemoteBlock*retaddr *label120                  ...
  304:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label120                                              ...
  305:  set :buildRemoteBlock:cfg "**#######"                      CoreBuilder.mnd: thoriumContainer = buildRemoteBlock(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  306:  read :buildRemoteBlock:x processor4 ".containerX"            ...
  307:  read :buildRemoteBlock:y processor4 ".containerY"            ...
  308:  setaddr :buildRemoteBlock*retaddr *label121                  ...
  309:  call *label35 *invalid :buildRemoteBlock*retval              ...
        label *label121                                              ...
  310:  set .thoriumContainer :buildRemoteBlock*retval               ...
  311:  jump *label122 notEqual :buildRemoteBlock*retval null        CoreBuilder.mnd: if thoriumContainer == null then thoriumContainer = thoriumDrill; end;
  312:  set .thoriumContainer .thoriumDrill                          ...
        label *label122                                              ...
  313:  write .thoriumDrill processor1 ".thoriumDrill"               CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  314:  write .thoriumContainer processor1 ".thoriumContainer"       CoreBuilder.mnd: display.thoriumContainer = thoriumContainer;
  315:  write .thoriumContainer processor3 ":setThoriumContainer:con CoreBuilder.mnd: polyController.setThoriumContainer(thoriumContainer);
  316:  write false processor3 ":setThoriumContainer*finished"       ...
  317:  write 3 processor3 "@counter"                                ...
        label *label124                                              ...
  318:  wait 1e-15                                                   ...
  319:  read *tmp221 processor3 ":setThoriumContainer*finished"      ...
  320:  jump *label124 equal *tmp221 false                           ...
  321:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  322:  write 1 .controller ".megaTarget"                            CoreBuilder.mnd: controller.megaTarget = target;
  323:  write 1 processor1 ".megaTarget"                             CoreBuilder.mnd: display.megaTarget = target;
  324:  read *tmp98 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 5 do
  325:  jump *label128 greaterThanEq *tmp98 5                        ...
        label *label635                                              ...
  326:  setaddr :supplyBase*retaddr *label129                        CoreBuilder.mnd: supplyBase();
  327:  call *label32 *invalid :supplyBase*retval                    ...
        label *label129                                              ...
  328:  read *tmp98 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 5 do
  329:  jump *label635 lessThan *tmp98 5                             ...
        label *label128                                              ...
  330:  set :buildBlockFromCfg:cfg "+(###A<###"                     CoreBuilder.mnd: controller.unloader6 = buildBlockFromCfg(UNLOADER6, @silicon);
  331:  set :buildBlockFromCfg:config @silicon                       ...
  332:  setaddr :buildBlockFromCfg*retaddr *label130                 ...
  333:  call *label36 *invalid :buildBlockFromCfg*retval             ...
        label *label130                                              ...
  334:  write :buildBlockFromCfg*retval .controller ".unloader6"     ...
  335:  set :buildBlockFromCfg.1:cfg "X+''%######"                   CoreBuilder.mnd: buildBlockFromCfg(UNDERFLOW_GATE2);
  336:  setaddr :buildBlockFromCfg.1*retaddr *label131               ...
  337:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label131                                              ...
  338:  set :buildBlockFromCfg.1:cfg ".&#ʭ#ǥƁ#ʭ#"                   CoreBuilder.mnd: var multiReconstructor = buildBlockFromCfg(MULTIPLICATIVE_REC);
  339:  setaddr :buildBlockFromCfg.1*retaddr *label133               ...
  340:  call *label37 *invalid :buildBlockFromCfg.1*retval           ...
        label *label133                                              ...
  341:  write :buildBlockFromCfg.1*retval .controller ".multiReconst CoreBuilder.mnd: controller.multiReconstructor = multiReconstructor;
  342:  write :buildBlockFromCfg.1*retval processor1 ".multiReconstr CoreBuilder.mnd: display.multiReconstructor = multiReconstructor;
  343:  setaddr :buildUnits*retaddr *label134                        CoreBuilder.mnd: buildUnits();
  344:  call *label40 *invalid :buildUnits*retval                    ...
        label *label134                                              ...
  345:  read *tmp99 .controller ".megas"                             CoreBuilder.mnd: while controller.megas < 1 do
  346:  jump *label137 greaterThanEq *tmp99 1                        ...
        label *label636                                              ...
  347:  setaddr :supplyBase*retaddr *label138                        CoreBuilder.mnd: supplyBase();
  348:  call *label32 *invalid :supplyBase*retval                    ...
        label *label138                                              ...
  349:  read *tmp99 .controller ".megas"                             CoreBuilder.mnd: while controller.megas < 1 do
  350:  jump *label636 lessThan *tmp99 1                             ...
        label *label137                                              ...
  351:  control enabled processor7 false 0 0 0                       CoreBuilder.mnd: flareController.enabled = false;
  352:  control enabled processor8 false 0 0 0                       CoreBuilder.mnd: monoController.enabled = false;
  353:  control enabled processor3 false 0 0 0                       CoreBuilder.mnd: processor3.enabled = false;
  354:  control enabled processor4 false 0 0 0                       CoreBuilder.mnd: processor4.enabled = false;
  355:  control enabled processor5 false 0 0 0                       CoreBuilder.mnd: processor5.enabled = false;
  356:  set :flagUnits:unit @mega                                    CoreBuilder.mnd: flagUnits(@mega);
  357:  setaddr :flagUnits*retaddr *label140                         ...
  358:  call *label41 *invalid :flagUnits*retval                     ...
        label *label140                                              ...
  359:  set :flagUnits:unit @poly                                    CoreBuilder.mnd: flagUnits(@poly);
  360:  setaddr :flagUnits*retaddr *label141                         ...
  361:  call *label41 *invalid :flagUnits*retval                     ...
        label *label141                                              ...
  362:  set :flagUnits:unit @mono                                    CoreBuilder.mnd: flagUnits(@mono);
  363:  setaddr :flagUnits*retaddr *label142                         ...
  364:  call *label41 *invalid :flagUnits*retval                     ...
        label *label142                                              ...
  365:  set :flagUnits:unit @flare                                   CoreBuilder.mnd: flagUnits(@flare);
  366:  setaddr :flagUnits*retaddr *label143                         ...
  367:  call *label41 *invalid :flagUnits*retval                     ...
        label *label143                                              ...
        label *label144                                              CoreBuilder.mnd: while true do
  368:  op sub :lineUpUnits:y @thisy 6                               CoreBuilder.mnd: lineUpUnits(@thisy -  6, @mega);
  369:  ubind @mega                                                  CoreBuilder.mnd: var firstUnit = ubind(unit);
  370:  set :lineUpUnits:firstUnit @unit                             ...
        label *label653                                              CoreBuilder.mnd: do
  371:  sensor :lineUpUnits:x @unit @flag                            CoreBuilder.mnd: var x = @unit.@flag;
  372:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  373:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            CoreBuilder.mnd: move(x, y);
  374:  sensor *tmp486 @unit @mining                                 CoreBuilder.mnd: if @unit.@mining then stop(); end;
  375:  jump *label654 equal *tmp486 false                           ...
  376:  ucontrol stop 0 0 0 0 0                                      ...
        label *label654                                              ...
  377:  ubind @mega                                                  CoreBuilder.mnd: ubind(unit);
  378:  jump *label653 notEqual @unit :lineUpUnits:firstUnit         CoreBuilder.mnd: do
  379:  op sub :lineUpUnits:y @thisy 10                              CoreBuilder.mnd: lineUpUnits(@thisy - 10, @poly);
  380:  set :lineUpUnits:unit @poly                                  ...
  381:  setaddr :lineUpUnits*retaddr *label148                       ...
  382:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label148                                              ...
  383:  op sub :lineUpUnits:y @thisy 14                              CoreBuilder.mnd: lineUpUnits(@thisy - 14, @mono);
  384:  set :lineUpUnits:unit @mono                                  ...
  385:  setaddr :lineUpUnits*retaddr *label149                       ...
  386:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label149                                              ...
  387:  op sub :lineUpUnits:y @thisy 18                              CoreBuilder.mnd: lineUpUnits(@thisy - 18, @flare);
  388:  set :lineUpUnits:unit @flare                                 ...
  389:  setaddr :lineUpUnits*retaddr *label150                       ...
  390:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label150                                              ...
  391:  jump *label144 always 0 0                                    CoreBuilder.mnd: while true do
        label *label21                                               Actions.mnd: void mineOre(ore, amount, block)
  392:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  393:  write :mineOre:amount .display ".transportTarget"            Actions.mnd: display.transportTarget = target;
  394:  write :mineOre:ore .display ".transportItem"                 Actions.mnd: display.transportItem = item;
  395:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  396:  jump *label461 notEqual *tmp259 false                        ...
  397:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  398:  stop                                                         Actions.mnd: stopProcessor();
        label *label461                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  399:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label504                                              Actions.mnd: do
  400:  sensor *tmp240 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  401:  jump *label505 equal *tmp240 null                            ...
  402:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label505                                              ...
  403:  ucontrol approach :locateOre:x :locateOre:y 5.5 0 0          Actions.mnd: approach(x, y, RADIUS - 0.5);
  404:  ucontrol within :locateOre:x :locateOre:y 6 *tmp243 0        Actions.mnd: while !within(x, y, RADIUS);
  405:  jump *label504 equal *tmp243 false                           Actions.mnd: do
  406:  sensor *tmp264 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  407:  jump *label196 equal *tmp264 :mineOre:ore                    ...
  408:  sensor *tmp245 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  409:  jump *label532 equal *tmp245 null                            ...
        label *label530                                              ...
  410:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  411:  sensor *tmp245 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  412:  jump *label530 notEqual *tmp245 null                         ...
        label *label532                                              ...
        label *label196                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  413:  write "Mining..." .display ".status3"                        Actions.mnd: display.status3 = text;
  414:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label200                                              Actions.mnd: do
  415:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  416:  op notEqual *tmp269 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  417:  op notEqual *tmp270 :mineOre:item :mineOre:ore               ...
  418:  op land *tmp271 *tmp269 *tmp270                              ...
  419:  jump *label202 notEqual *tmp271 false                        ...
  420:  ucontrol mine :locateOre:x :locateOre:y 0 0 0                Actions.mnd: mine(x, y);
  421:  jump *label202 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  422:  sensor *tmp275 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  423:  jump *label200 lessThan *tmp275 :mineOre:amount              Actions.mnd: do
        label *label202                                              ...
  424:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  425:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  426:  sensor *tmp249 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  427:  jump *label567 notEqual *tmp249 :mineOre:ore                 ...
  428:  sensor *tmp247 :mineOre:block @x                             Actions.mnd: moveTo(block.@x, block.@y, radius);
  429:  sensor *tmp248 :mineOre:block @y                             ...
  430:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  431:  ucontrol within *tmp247 *tmp248 6 *tmp235 0                  Actions.mnd: while !within(x, y, radius) do
  432:  jump *label561 notEqual *tmp235 false                        ...
        label *label559                                              ...
  433:  ucontrol approach *tmp247 *tmp248 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  434:  ucontrol within *tmp247 *tmp248 6 *tmp235 0                  Actions.mnd: while !within(x, y, radius) do
  435:  jump *label559 equal *tmp235 false                           ...
        label *label561                                              ...
  436:  sensor :depositItems:cap :mineOre:block @itemCapacity        Actions.mnd: var cap = block.@itemCapacity;
        label *label564                                              Actions.mnd: do
  437:  ucontrol itemDrop :mineOre:block 30 0 0 0                    Actions.mnd: itemDrop(block, capacity);
  438:  sensor *tmp253 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  439:  op mul *tmp254 *tmp253 :depositItems:cap                     ...
  440:  sensor *tmp255 :mineOre:block :mineOre:ore                   ...
  441:  jump *label564 greaterThan *tmp254 *tmp255                   Actions.mnd: do
  442:  jump *label572 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label567                                              ...
  443:  sensor *tmp257 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  444:  jump *label571 equal *tmp257 null                            ...
        label *label569                                              ...
  445:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  446:  sensor *tmp257 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  447:  jump *label569 notEqual *tmp257 null                         ...
        label *label571                                              ...
        label *label572                                              Actions.mnd: if @unit.@firstItem == item then
  448:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  449:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  450:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label22                                               Actions.mnd: void mineOre(ore)
  451:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  452:  write :mineOre.1:ore .display ".item2"                       Actions.mnd: display.item2 = item;
  453:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  454:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  455:  set :mineOre:amount 30                                       ...
  456:  set :mineOre:block .core                                     ...
  457:  setaddr :mineOre*retaddr *label210                           ...
  458:  call *label21 *invalid :mineOre*retval                       ...
        label *label210                                              ...
  459:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label23                                               Actions.mnd: void fetchBlock(block, item)
  460:  sensor *tmp278 :fetchBlock:block @itemCapacity               Actions.mnd: transportStatus(min(block.@itemCapacity, capacity), item);
  461:  op min :transportStatus:target *tmp278 30                    ...
  462:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  463:  write :fetchBlock:item .display ".transportItem"             Actions.mnd: display.transportItem = item;
  464:  write "Fetching " .display ".status2"                        Actions.mnd: display.status2 = text;
  465:  write :fetchBlock:item .display ".item2"                     Actions.mnd: display.item2 = item;
  466:  write :fetchBlock:block .display ".block2"                   Actions.mnd: display.block2 = block;
  467:  sensor *tmp280 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  468:  sensor *tmp281 :fetchBlock:block @y                          ...
  469:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label513                                              Actions.mnd: do
  470:  sensor *tmp240 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  471:  jump *label514 equal *tmp240 null                            ...
  472:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label514                                              ...
  473:  ucontrol approach *tmp280 *tmp281 5.5 0 0                    Actions.mnd: approach(x, y, RADIUS - 0.5);
  474:  ucontrol within *tmp280 *tmp281 6 *tmp243 0                  Actions.mnd: while !within(x, y, RADIUS);
  475:  jump *label513 equal *tmp243 false                           Actions.mnd: do
  476:  sensor *tmp245 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  477:  jump *label538 equal *tmp245 null                            ...
        label *label536                                              ...
  478:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  479:  sensor *tmp245 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  480:  jump *label536 notEqual *tmp245 null                         ...
        label *label538                                              ...
        label *label216                                              Actions.mnd: do
  481:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  482:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  483:  op notEqual *tmp283 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  484:  op notEqual *tmp284 :fetchBlock:unitItem :fetchBlock:item    ...
  485:  op land *tmp285 *tmp283 *tmp284                              ...
  486:  jump *label219 equal *tmp285 false                           ...
  487:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label219                                              Actions.mnd: if unitItem != null and unitItem != item then
  488:  sensor *tmp287 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  489:  op lessThan *tmp288 *tmp287 30                               ...
  490:  sensor *tmp289 :fetchBlock:block :fetchBlock:item            ...
  491:  op land *tmp290 *tmp288 *tmp289                              ...
  492:  jump *label216 notEqual *tmp290 false                        Actions.mnd: do
  493:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  494:  sensor *tmp249 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  495:  jump *label592 notEqual *tmp249 :fetchBlock:item             ...
  496:  sensor *tmp247 .core @x                                      Actions.mnd: moveTo(block.@x, block.@y, radius);
  497:  sensor *tmp248 .core @y                                      ...
  498:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  499:  ucontrol within *tmp247 *tmp248 6 *tmp235 0                  Actions.mnd: while !within(x, y, radius) do
  500:  jump *label586 notEqual *tmp235 false                        ...
        label *label584                                              ...
  501:  ucontrol approach *tmp247 *tmp248 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  502:  ucontrol within *tmp247 *tmp248 6 *tmp235 0                  Actions.mnd: while !within(x, y, radius) do
  503:  jump *label584 equal *tmp235 false                           ...
        label *label586                                              ...
  504:  sensor :depositItems:cap .core @itemCapacity                 Actions.mnd: var cap = block.@itemCapacity;
        label *label589                                              Actions.mnd: do
  505:  ucontrol itemDrop .core 30 0 0 0                             Actions.mnd: itemDrop(block, capacity);
  506:  sensor *tmp253 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  507:  op mul *tmp254 *tmp253 :depositItems:cap                     ...
  508:  sensor *tmp255 .core :fetchBlock:item                        ...
  509:  jump *label589 greaterThan *tmp254 *tmp255                   Actions.mnd: do
  510:  jump *label597 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label592                                              ...
  511:  sensor *tmp257 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  512:  jump *label596 equal *tmp257 null                            ...
        label *label594                                              ...
  513:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  514:  sensor *tmp257 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  515:  jump *label594 notEqual *tmp257 null                         ...
        label *label596                                              ...
        label *label597                                              Actions.mnd: if @unit.@firstItem == item then
  516:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  517:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  518:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label24                                               Actions.mnd: void supplyBlock(block, ore)
  519:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2 = text;
  520:  write :supplyBlock:ore .display ".item2"                     Actions.mnd: display.item2 = item;
  521:  write :supplyBlock:block .display ".block2"                  Actions.mnd: display.block2 = block;
  522:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  523:  sensor *tmp292 :supplyBlock:block :supplyBlock:ore           Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  524:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  525:  jump *label224 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  526:  set :mineOre:ore :supplyBlock:ore                            Actions.mnd: mineOre(ore, blockCapacity, block);
  527:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  528:  set :mineOre:block :supplyBlock:block                        ...
  529:  setaddr :mineOre*retaddr *label226                           ...
  530:  call *label21 *invalid :mineOre*retval                       ...
        label *label226                                              ...
        label *label224                                              Actions.mnd: if missing > 0 then
  531:  return :supplyBlock*retaddr                                  Actions.mnd: void supplyBlock(block, ore)
        label *label31                                               CoreBuilder.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation)
  532:  read *tmp308 :unpackCfg:cfg 0                                CoreBuilder.mnd: type = lookup(:block, char(cfg, index++) - 35);
  533:  op sub *tmp309 *tmp308 35                                    ...
  534:  lookup block :unpackCfg:type *tmp309                         ...
  535:  read *tmp312 :unpackCfg:cfg 1                                CoreBuilder.mnd: x = char(cfg, index++) - 35 - 7;
  536:  op sub :unpackCfg:x *tmp312 42                               ...
  537:  read *tmp316 :unpackCfg:cfg 2                                CoreBuilder.mnd: y = char(cfg, index++) - 35 - 7;
  538:  op sub :unpackCfg:y *tmp316 42                               ...
  539:  read *tmp320 :unpackCfg:cfg 3                                CoreBuilder.mnd: cu = char(cfg, index++) - 35;
  540:  op sub :unpackCfg:cu *tmp320 35                              ...
  541:  read *tmp323 :unpackCfg:cfg 4                                CoreBuilder.mnd: pb = char(cfg, index++) - 35;
  542:  op sub :unpackCfg:pb *tmp323 35                              ...
  543:  read *tmp326 :unpackCfg:cfg 5                                CoreBuilder.mnd: gr = char(cfg, index++) - 35;
  544:  op sub :unpackCfg:gr *tmp326 35                              ...
  545:  read *tmp329 :unpackCfg:cfg 6                                CoreBuilder.mnd: si = char(cfg, index++) - 35;
  546:  op sub :unpackCfg:si *tmp329 35                              ...
  547:  read *tmp332 :unpackCfg:cfg 7                                CoreBuilder.mnd: ti = char(cfg, index++) - 35;
  548:  op sub :unpackCfg:ti *tmp332 35                              ...
  549:  read *tmp335 :unpackCfg:cfg 8                                CoreBuilder.mnd: mg = char(cfg, index++) - 35;
  550:  op sub :unpackCfg:mg *tmp335 35                              ...
  551:  read *tmp338 :unpackCfg:cfg 9                                CoreBuilder.mnd: th = char(cfg, index++) - 35;
  552:  op sub :unpackCfg:th *tmp338 35                              ...
  553:  read *tmp341 :unpackCfg:cfg 10                               CoreBuilder.mnd: rotation = char(cfg, index++) - 35;
  554:  op sub :unpackCfg:rotation *tmp341 35                        ...
  555:  return :unpackCfg*retaddr                                    CoreBuilder.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation)
        label *label32                                               CoreBuilder.mnd: void supplyBase()
  556:  sensor *tmp343 .core @silicon                                CoreBuilder.mnd: monoSandTarget = max(0, targetSilicon - core.@silicon);
  557:  op sub *tmp344 .targetSilicon *tmp343                        ...
  558:  op max *tmp345 0 *tmp344                                     ...
  559:  write *tmp345 processor8 ".monoSandTarget"                   ...
  560:  jump *label240 equal .thoriumContainer false                 CoreBuilder.mnd: if thoriumContainer then
  561:  write "Phase 2: servicing thorium drill" .display ".status1" Actions.mnd: display.status1 = text;
  562:  sensor *tmp347 .core @coal                                   CoreBuilder.mnd: if core.@coal < 50 then
  563:  jump *label244 greaterThanEq *tmp347 50                      ...
  564:  set :supplyBlock:block .thoriumGenerator                     CoreBuilder.mnd: supplyBlock(thoriumGenerator, @coal);
  565:  set :supplyBlock:ore @coal                                   ...
  566:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2 = text;
  567:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  568:  write .thoriumGenerator .display ".block2"                   Actions.mnd: display.block2 = block;
  569:  sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCap Actions.mnd: var blockCapacity = block.@itemCapacity;
  570:  sensor *tmp292 .thoriumGenerator @coal                       Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  571:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  572:  jump *label245 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  573:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  574:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  575:  set :mineOre:block .thoriumGenerator                         ...
  576:  setaddr :mineOre*retaddr *label629                           ...
  577:  call *label21 *invalid :mineOre*retval                       ...
        label *label629                                              ...
  578:  jump *label245 always 0 0                                    CoreBuilder.mnd: if core.@coal < 50 then
        label *label244                                              ...
  579:  sensor *tmp296 .thoriumGenerator @itemCapacity               Actions.mnd: transportStatus(min(target.@itemCapacity, capacity), item);
  580:  op min :transportStatus:target *tmp296 30                    ...
  581:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  582:  write @coal .display ".transportItem"                        Actions.mnd: display.transportItem = item;
  583:  write "Transferring " .display ".status2"                    Actions.mnd: display.status2 = text;
  584:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  585:  write .thoriumGenerator .display ".block2"                   Actions.mnd: display.block2 = block;
  586:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label522                                              Actions.mnd: do
  587:  sensor *tmp240 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  588:  jump *label523 equal *tmp240 null                            ...
  589:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label523                                              ...
  590:  ucontrol approach .coreX .coreY 5.5 0 0                      Actions.mnd: approach(x, y, RADIUS - 0.5);
  591:  ucontrol within .coreX .coreY 6 *tmp243 0                    Actions.mnd: while !within(x, y, RADIUS);
  592:  jump *label522 equal *tmp243 false                           Actions.mnd: do
  593:  sensor *tmp245 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  594:  jump *label544 equal *tmp245 null                            ...
        label *label542                                              ...
  595:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  596:  sensor *tmp245 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  597:  jump *label542 notEqual *tmp245 null                         ...
        label *label544                                              ...
        label *label469                                              Actions.mnd: do
  598:  ucontrol itemTake .core @coal 30 0 0                         Actions.mnd: itemTake(core, item, capacity);
  599:  sensor :supplyBlockFromCore:unitItem @unit @firstItem        Actions.mnd: var unitItem = @unit.@firstItem;
  600:  op notEqual *tmp299 :supplyBlockFromCore:unitItem null       Actions.mnd: if unitItem != null and unitItem != item then
  601:  op notEqual *tmp300 :supplyBlockFromCore:unitItem @coal      ...
  602:  op land *tmp301 *tmp299 *tmp300                              ...
  603:  jump *label470 equal *tmp301 false                           ...
  604:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label470                                              Actions.mnd: if unitItem != null and unitItem != item then
  605:  sensor *tmp303 @unit @coal                                   Actions.mnd: while @unit.sensor(item) < capacity and core.sensor(item);
  606:  op lessThan *tmp304 *tmp303 30                               ...
  607:  sensor *tmp305 .core @coal                                   ...
  608:  op land *tmp306 *tmp304 *tmp305                              ...
  609:  jump *label469 notEqual *tmp306 false                        Actions.mnd: do
  610:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  611:  sensor *tmp249 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  612:  jump *label617 notEqual *tmp249 @coal                        ...
  613:  sensor *tmp247 .thoriumGenerator @x                          Actions.mnd: moveTo(block.@x, block.@y, radius);
  614:  sensor *tmp248 .thoriumGenerator @y                          ...
  615:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  616:  ucontrol within *tmp247 *tmp248 6 *tmp235 0                  Actions.mnd: while !within(x, y, radius) do
  617:  jump *label611 notEqual *tmp235 false                        ...
        label *label609                                              ...
  618:  ucontrol approach *tmp247 *tmp248 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  619:  ucontrol within *tmp247 *tmp248 6 *tmp235 0                  Actions.mnd: while !within(x, y, radius) do
  620:  jump *label609 equal *tmp235 false                           ...
        label *label611                                              ...
  621:  sensor :depositItems:cap .thoriumGenerator @itemCapacity     Actions.mnd: var cap = block.@itemCapacity;
        label *label614                                              Actions.mnd: do
  622:  ucontrol itemDrop .thoriumGenerator 30 0 0 0                 Actions.mnd: itemDrop(block, capacity);
  623:  sensor *tmp253 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  624:  op mul *tmp254 *tmp253 :depositItems:cap                     ...
  625:  sensor *tmp255 .thoriumGenerator @coal                       ...
  626:  jump *label614 greaterThan *tmp254 *tmp255                   Actions.mnd: do
  627:  jump *label622 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label617                                              ...
  628:  sensor *tmp257 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  629:  jump *label621 equal *tmp257 null                            ...
        label *label619                                              ...
  630:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  631:  sensor *tmp257 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  632:  jump *label619 notEqual *tmp257 null                         ...
        label *label621                                              ...
        label *label622                                              Actions.mnd: if @unit.@firstItem == item then
  633:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  634:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
        label *label245                                              CoreBuilder.mnd: if core.@coal < 50 then
  635:  set :fetchBlock:block .thoriumContainer                      CoreBuilder.mnd: fetchBlock(thoriumContainer, @thorium);
  636:  set :fetchBlock:item @thorium                                ...
  637:  setaddr :fetchBlock*retaddr *label248                        ...
  638:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label248                                              ...
  639:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if thoriumContainer then
        label *label240                                              ...
  640:  read *tmp97 .controller ".monos"                             CoreBuilder.mnd: elsif controller.monos > 3 then
  641:  jump *label249 lessThanEq *tmp97 3                           ...
  642:  write "Phase 1: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  643:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  644:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  645:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  646:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  647:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  648:  set :mineOre:amount 30                                       ...
  649:  set :mineOre:block .core                                     ...
  650:  setaddr :mineOre*retaddr *label549                           ...
  651:  call *label21 *invalid :mineOre*retval                       ...
        label *label549                                              ...
  652:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif controller.monos > 3 then
        label *label249                                              ...
  653:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  654:  jump *label255 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  655:  sensor *tmp354 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  656:  jump *label257 greaterThanEq *tmp354 .targetGraphite         ...
  657:  sensor *tmp357 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  658:  jump *label259 greaterThanEq *tmp357 5                       ...
  659:  write "Goal 1: graphite requirement" .display ".status1"     Actions.mnd: display.status1 = text;
  660:  set :supplyBlock:block .press                                CoreBuilder.mnd: supplyBlock(press, @coal);
  661:  set :supplyBlock:ore @coal                                   ...
  662:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2 = text;
  663:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  664:  write .press .display ".block2"                              Actions.mnd: display.block2 = block;
  665:  sensor :supplyBlock:blockCapacity .press @itemCapacity       Actions.mnd: var blockCapacity = block.@itemCapacity;
  666:  sensor *tmp292 .press @coal                                  Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  667:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  668:  jump *label646 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  669:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  670:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  671:  set :mineOre:block .press                                    ...
  672:  setaddr :mineOre*retaddr *label645                           ...
  673:  call *label21 *invalid :mineOre*retval                       ...
        label *label645                                              ...
        label *label646                                              Actions.mnd: if missing > 0 then
  674:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label259                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label257                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  675:  sensor *tmp360 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  676:  jump *label263 greaterThanEq *tmp360 .targetSilicon          ...
  677:  sensor *tmp363 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  678:  jump *label265 greaterThanEq *tmp363 5                       ...
  679:  write "Goal 2: coal for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  680:  set :supplyBlock:block .smelter                              CoreBuilder.mnd: supplyBlock(smelter, @coal);
  681:  set :supplyBlock:ore @coal                                   ...
  682:  setaddr :supplyBlock*retaddr *label268                       ...
  683:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label268                                              ...
  684:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  685:  jump *label266 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label265                                              ...
  686:  sensor *tmp366 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  687:  jump *label269 greaterThanEq *tmp366 5                       ...
  688:  write "Goal 3: sand for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  689:  set :supplyBlock:block .smelter                              CoreBuilder.mnd: supplyBlock(smelter, @sand);
  690:  set :supplyBlock:ore @sand                                   ...
  691:  setaddr :supplyBlock*retaddr *label272                       ...
  692:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label272                                              ...
  693:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label269                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label266                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label263                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  694:  sensor *tmp369 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  695:  jump *label273 greaterThanEq *tmp369 .powerTarget            ...
  696:  sensor *tmp372 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  697:  jump *label275 greaterThanEq *tmp372 2                       ...
  698:  write "Goal 4: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  699:  set :supplyBlock:block .generator                            CoreBuilder.mnd: supplyBlock(generator, @coal);
  700:  set :supplyBlock:ore @coal                                   ...
  701:  setaddr :supplyBlock*retaddr *label278                       ...
  702:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label278                                              ...
  703:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label275                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label273                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label255                                              CoreBuilder.mnd: if unloader1 == null then
  704:  set *tmp377 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  705:  sensor *tmp375 .core @titanium                               ...
  706:  jump *label280 greaterThanEq *tmp375 .targetTitanium         ...
  707:  sensor *tmp378 .core @titanium                               ...
  708:  op sub *tmp379 .targetTitanium *tmp378                       ...
  709:  op min *tmp377 7 *tmp379                                     ...
        label *label280                                              ...
  710:  sensor *tmp381 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  711:  jump *label281 greaterThanEq *tmp381 *tmp377                 ...
  712:  jump *label282 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  713:  sensor *tmp386 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  714:  op mul *tmp387 .unloader1 .powerTarget                       ...
  715:  jump *label285 greaterThanEq *tmp386 *tmp387                 ...
  716:  write "Goal 5: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  717:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  718:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  719:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  720:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  721:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  722:  set :mineOre:amount 30                                       ...
  723:  set :mineOre:block .core                                     ...
  724:  setaddr :mineOre*retaddr *label640                           ...
  725:  call *label21 *invalid :mineOre*retval                       ...
        label *label640                                              ...
  726:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label285                                              ...
  727:  sensor *tmp390 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  728:  jump *label289 greaterThanEq *tmp390 .targetSilicon          ...
  729:  write "Goal 6: silicon requirement" .display ".status1"      Actions.mnd: display.status1 = text;
  730:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  731:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  732:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  733:  jump *label293 greaterThanEq :supplyBase0:coal :supplyBase0: ...
  734:  set :mineOre.1:ore @coal                                     ...
        label *label293                                              ...
  735:  setaddr :mineOre.1*retaddr *label294                         CoreBuilder.mnd: mineOre(ore);
  736:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label294                                              ...
  737:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label289                                              ...
  738:  sensor *tmp397 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  739:  jump *label295 greaterThanEq *tmp397 .targetCopper           ...
  740:  write "Goal 7: copper requirement" .display ".status1"       Actions.mnd: display.status1 = text;
  741:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  742:  setaddr :mineOre.1*retaddr *label298                         ...
  743:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label298                                              ...
  744:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label295                                              ...
  745:  sensor *tmp400 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  746:  jump *label299 greaterThanEq *tmp400 .targetLead             ...
  747:  write "Goal 8: lead requirement" .display ".status1"         Actions.mnd: display.status1 = text;
  748:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  749:  setaddr :mineOre.1*retaddr *label302                         ...
  750:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label302                                              ...
  751:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label299                                              ...
  752:  sensor *tmp403 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  753:  jump *label303 greaterThanEq *tmp403 .targetMetaglass        ...
  754:  write "Goal 9: metaglass requirement" .display ".status1"    Actions.mnd: display.status1 = text;
  755:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  756:  setaddr :mineOre.1*retaddr *label306                         ...
  757:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label306                                              ...
  758:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label303                                              ...
  759:  write "Goal 10: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  760:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  761:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  762:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  763:  jump *label309 greaterThan :supplyBase0:coal.1 :supplyBase0: ...
  764:  set :mineOre.1:ore @coal                                     ...
        label *label309                                              ...
  765:  setaddr :mineOre.1*retaddr *label310                         CoreBuilder.mnd: mineOre(ore);
  766:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label310                                              ...
  767:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label281                                              ...
  768:  write "Goal 11: Fetching titanium" .display ".status1"       Actions.mnd: display.status1 = text;
  769:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  770:  set :fetchBlock:item @titanium                               ...
  771:  setaddr :fetchBlock*retaddr *label312                        ...
  772:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label312                                              ...
        label *label282                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  773:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label33                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
  774:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, thorium do count += sign(t); end;
  775:  op sign *tmp411 :meetTarget:lead 0                           ...
  776:  op add :meetTarget:count :meetTarget:count *tmp411           ...
  777:  op sign *tmp411 :meetTarget:graphite 0                       ...
  778:  op add :meetTarget:count :meetTarget:count *tmp411           ...
  779:  op sign *tmp411 :meetTarget:silicon 0                        ...
  780:  op add :meetTarget:count :meetTarget:count *tmp411           ...
  781:  op sign *tmp411 :meetTarget:titanium 0                       ...
  782:  op add :meetTarget:count :meetTarget:count *tmp411           ...
  783:  op sign *tmp411 :meetTarget:metaglass 0                      ...
  784:  op add :meetTarget:count :meetTarget:count *tmp411           ...
  785:  op sign *tmp411 :meetTarget:thorium 0                        ...
  786:  op add :meetTarget:count :meetTarget:count *tmp411           ...
  787:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  788:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  789:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  790:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  791:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  792:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  793:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  794:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  795:  write :meetTarget:thorium .display ".targetThorium"          CoreBuilder.mnd: display.targetThorium = thorium;
  796:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  797:  op add *tmp412 :meetTarget:lead .leadSurplus                 CoreBuilder.mnd: targetLead = lead + leadSurplus + 1;
  798:  op add .targetLead *tmp412 1                                 ...
  799:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  800:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  801:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  802:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  803:  set .targetThorium :meetTarget:thorium                       CoreBuilder.mnd: targetThorium = thorium;
  804:  op add *tmp414 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  805:  write *tmp414 .controller ".pressTarget"                     ...
  806:  op add *tmp415 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  807:  write *tmp415 .controller ".smelterTarget"                   ...
  808:  op add *tmp416 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  809:  write *tmp416 .controller ".kilnTarget"                      ...
  810:  write *tmp412 .controller ".leadReserve"                     CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  811:  op sign *tmp418 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  812:  op mul *tmp419 *tmp418 20                                    ...
  813:  op add *tmp420 :meetTarget:silicon *tmp419                   ...
  814:  write *tmp420 .controller ".siliconReserve"                  ...
  815:  op sign *tmp421 :meetTarget:graphite 0                       CoreBuilder.mnd: controller.graphiteReserve = graphite + sign(graphite) * 20;
  816:  op mul *tmp422 *tmp421 20                                    ...
  817:  op add *tmp423 :meetTarget:graphite *tmp422                  ...
  818:  write *tmp423 .controller ".graphiteReserve"                 ...
  819:  write .targetLead processor8 ".monoLeadTarget"               CoreBuilder.mnd: monoLeadTarget = targetLead;
  820:  write :meetTarget:copper processor8 ".monoCopperTarget"      CoreBuilder.mnd: monoCopperTarget = targetCopper;
        label *label324                                              CoreBuilder.mnd: while !targetMet() do
  821:  sensor *tmp425 .core @copper                                 CoreBuilder.mnd: if core.@copper < targetCopper then return false; end;
  822:  jump *label328 greaterThanEq *tmp425 .targetCopper           ...
  823:  set *tmp424 false                                            ...
  824:  jump *label327 always 0 0                                    ...
        label *label328                                              ...
  825:  sensor *tmp428 .core @lead                                   CoreBuilder.mnd: if core.@lead < targetLead then return false; end;
  826:  jump *label330 greaterThanEq *tmp428 .targetLead             ...
  827:  set *tmp424 false                                            ...
  828:  jump *label327 always 0 0                                    ...
        label *label330                                              ...
  829:  sensor *tmp431 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  830:  jump *label332 greaterThanEq *tmp431 .targetGraphite         ...
  831:  set *tmp424 false                                            ...
  832:  jump *label327 always 0 0                                    ...
        label *label332                                              ...
  833:  sensor *tmp434 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  834:  jump *label334 greaterThanEq *tmp434 .targetSilicon          ...
  835:  set *tmp424 false                                            ...
  836:  jump *label327 always 0 0                                    ...
        label *label334                                              ...
  837:  sensor *tmp437 .core @titanium                               CoreBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  838:  jump *label336 greaterThanEq *tmp437 .targetTitanium         ...
  839:  set *tmp424 false                                            ...
  840:  jump *label327 always 0 0                                    ...
        label *label336                                              ...
  841:  sensor *tmp440 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  842:  jump *label338 greaterThanEq *tmp440 .targetMetaglass        ...
  843:  set *tmp424 false                                            ...
  844:  jump *label327 always 0 0                                    ...
        label *label338                                              ...
  845:  sensor *tmp443 .core @thorium                                CoreBuilder.mnd: if core.@thorium < targetThorium then return false; end;
  846:  jump *label340 greaterThanEq *tmp443 .targetThorium          ...
  847:  set *tmp424 false                                            ...
  848:  jump *label327 always 0 0                                    ...
        label *label340                                              ...
  849:  set *tmp424 true                                             CoreBuilder.mnd: return true;
  850:  jump *label327 always 0 0                                    ...
        label *label327                                              CoreBuilder.mnd: while !targetMet() do
  851:  jump *label326 notEqual *tmp424 false                        ...
  852:  setaddr :supplyBase*retaddr *label342                        CoreBuilder.mnd: supplyBase();
  853:  call *label32 *invalid :supplyBase*retval                    ...
        label *label342                                              ...
  854:  jump *label324 always 0 0                                    CoreBuilder.mnd: while !targetMet() do
        label *label326                                              ...
  855:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
        label *label34                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config)
  856:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium);
  857:  set :meetTarget:copper :buildBlock:copper                    ...
  858:  set :meetTarget:lead :buildBlock:lead                        ...
  859:  set :meetTarget:graphite :buildBlock:graphite                ...
  860:  set :meetTarget:silicon :buildBlock:silicon                  ...
  861:  set :meetTarget:titanium :buildBlock:titanium                ...
  862:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  863:  set :meetTarget:thorium :buildBlock:thorium                  ...
  864:  setaddr :meetTarget*retaddr *label347                        ...
  865:  call *label33 *invalid :meetTarget*retval                    ...
        label *label347                                              ...
  866:  write :buildBlock:block .blockBuilder ":buildBlockAt:block"  CoreBuilder.mnd: return blockBuilder.buildBlockAt(block, x, y, rotation, config);
  867:  write :buildBlock:x .blockBuilder ":buildBlockAt:x"          ...
  868:  write :buildBlock:y .blockBuilder ":buildBlockAt:y"          ...
  869:  write :buildBlock:rotation .blockBuilder ":buildBlockAt:rota ...
  870:  write :buildBlock:config .blockBuilder ":buildBlockAt:config ...
  871:  write false .blockBuilder ":buildBlockAt*finished"           ...
  872:  write 1 .blockBuilder "@counter"                             ...
        label *label348                                              ...
  873:  wait 1e-15                                                   ...
  874:  read *tmp467 .blockBuilder ":buildBlockAt*finished"          ...
  875:  jump *label348 equal *tmp467 false                           ...
  876:  read :buildBlock*retval .blockBuilder ":buildBlockAt*retval" ...
  877:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config)
        label *label35                                               CoreBuilder.mnd: def buildRemoteBlock(cfg, x, y)
  878:  op add *tmp469 :buildRemoteBlock:x :buildRemoteBlock:y       CoreBuilder.mnd: if x + y > 0 then
  879:  jump *label350 lessThanEq *tmp469 0                          ...
  880:  set :unpackCfg:cfg :buildRemoteBlock:cfg                     CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation);
  881:  setaddr :unpackCfg*retaddr *label352                         ...
  882:  call *label31 *invalid :unpackCfg*retval                     ...
        label *label352                                              ...
  883:  set :buildBlock:block :unpackCfg:type                        CoreBuilder.mnd: return buildBlock(type, x, y, cu, pb, gr, si, ti, mg, th, rotation, null);
  884:  set :buildBlock:x :buildRemoteBlock:x                        ...
  885:  set :buildBlock:y :buildRemoteBlock:y                        ...
  886:  set :buildBlock:copper :unpackCfg:cu                         ...
  887:  set :buildBlock:lead :unpackCfg:pb                           ...
  888:  set :buildBlock:graphite :unpackCfg:gr                       ...
  889:  set :buildBlock:silicon :unpackCfg:si                        ...
  890:  set :buildBlock:titanium :unpackCfg:ti                       ...
  891:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  892:  set :buildBlock:thorium :unpackCfg:th                        ...
  893:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  894:  set :buildBlock:config null                                  ...
  895:  setaddr :buildBlock*retaddr *label353                        ...
  896:  call *label34 *invalid :buildBlock*retval                    ...
        label *label353                                              ...
  897:  set :buildRemoteBlock*retval :buildBlock*retval              ...
  898:  return :buildRemoteBlock*retaddr                             ...
        label *label350                                              CoreBuilder.mnd: if x + y > 0 then
  899:  set :buildRemoteBlock*retval false                           CoreBuilder.mnd: return false;
  900:  return :buildRemoteBlock*retaddr                             ...
        label *label36                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
  901:  set :unpackCfg:cfg :buildBlockFromCfg:cfg                    CoreBuilder.mnd: unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation);
  902:  setaddr :unpackCfg*retaddr *label355                         ...
  903:  call *label31 *invalid :unpackCfg*retval                     ...
        label *label355                                              ...
  904:  op add *tmp472 .coreX :unpackCfg:x                           CoreBuilder.mnd: return buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, th, rotation, config);
  905:  op add *tmp473 .coreY :unpackCfg:y                           ...
  906:  set :buildBlock:block :unpackCfg:type                        ...
  907:  set :buildBlock:x *tmp472                                    ...
  908:  set :buildBlock:y *tmp473                                    ...
  909:  set :buildBlock:copper :unpackCfg:cu                         ...
  910:  set :buildBlock:lead :unpackCfg:pb                           ...
  911:  set :buildBlock:graphite :unpackCfg:gr                       ...
  912:  set :buildBlock:silicon :unpackCfg:si                        ...
  913:  set :buildBlock:titanium :unpackCfg:ti                       ...
  914:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  915:  set :buildBlock:thorium :unpackCfg:th                        ...
  916:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  917:  set :buildBlock:config :buildBlockFromCfg:config             ...
  918:  setaddr :buildBlock*retaddr *label356                        ...
  919:  call *label34 *invalid :buildBlock*retval                    ...
        label *label356                                              ...
  920:  set :buildBlockFromCfg*retval :buildBlock*retval             ...
  921:  return :buildBlockFromCfg*retaddr                            CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
        label *label37                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  922:  set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg          CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
  923:  set :buildBlockFromCfg:config null                           ...
  924:  setaddr :buildBlockFromCfg*retaddr *label358                 ...
  925:  call *label36 *invalid :buildBlockFromCfg*retval             ...
        label *label358                                              ...
  926:  set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval    CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  927:  return :buildBlockFromCfg.1*retaddr                          ...
        label *label38                                               CoreBuilder.mnd: void meetTarget(cfg)
  928:  set :unpackCfg:cfg :meetTarget.1:cfg                         CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th);
  929:  setaddr :unpackCfg*retaddr *label360                         ...
  930:  call *label31 *invalid :unpackCfg*retval                     ...
        label *label360                                              ...
  931:  set :meetTarget:block :unpackCfg:type                        CoreBuilder.mnd: meetTarget(type, cu, pb, gr, si, ti, mg, th);
  932:  set :meetTarget:copper :unpackCfg:cu                         ...
  933:  set :meetTarget:lead :unpackCfg:pb                           ...
  934:  set :meetTarget:graphite :unpackCfg:gr                       ...
  935:  set :meetTarget:silicon :unpackCfg:si                        ...
  936:  set :meetTarget:titanium :unpackCfg:ti                       ...
  937:  set :meetTarget:metaglass :unpackCfg:mg                      ...
  938:  set :meetTarget:thorium :unpackCfg:th                        ...
  939:  setaddr :meetTarget*retaddr *label361                        ...
  940:  call *label33 *invalid :meetTarget*retval                    ...
        label *label361                                              ...
  941:  return :meetTarget.1*retaddr                                 CoreBuilder.mnd: void meetTarget(cfg)
        label *label40                                               CoreBuilder.mnd: void buildUnits()
  942:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0, 0);
  943:  set :meetTarget:copper 0                                     ...
  944:  set :meetTarget:lead 0                                       ...
  945:  set :meetTarget:graphite 0                                   ...
  946:  set :meetTarget:silicon 0                                    ...
  947:  set :meetTarget:titanium 0                                   ...
  948:  set :meetTarget:metaglass 0                                  ...
  949:  set :meetTarget:thorium 0                                    ...
  950:  setaddr :meetTarget*retaddr *label366                        ...
  951:  call *label33 *invalid :meetTarget*retval                    ...
        label *label366                                              ...
  952:  write 0 .display ".totalTargets"                             CoreBuilder.mnd: display.totalTargets = 0;
  953:  write null .display ".nextBlock"                             CoreBuilder.mnd: display.nextBlock = null;
  954:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  955:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
  956:  write 0 .controller ".graphiteReserve"                       CoreBuilder.mnd: controller.graphiteReserve = 0;
  957:  return :buildUnits*retaddr                                   CoreBuilder.mnd: void buildUnits()
        label *label41                                               CoreBuilder.mnd: void flagUnits(unit)
        label *label368                                              CoreBuilder.mnd: do
  958:  ubind :flagUnits:unit                                        CoreBuilder.mnd: firstUnit = ubind(unit);
  959:  set :flagUnits:firstUnit @unit                               ...
  960:  jump *label368 equal :flagUnits:firstUnit null               CoreBuilder.mnd: do
  961:  set :flagUnits:x @thisx                                      CoreBuilder.mnd: var x = @thisx;
        label *label371                                              CoreBuilder.mnd: do
  962:  ucontrol flag :flagUnits:x 0 0 0 0                           CoreBuilder.mnd: flag(x);
  963:  op add :flagUnits:x :flagUnits:x 4                           CoreBuilder.mnd: x += 4;
  964:  ubind :flagUnits:unit                                        CoreBuilder.mnd: ubind(unit);
  965:  jump *label371 notEqual @unit :flagUnits:firstUnit           CoreBuilder.mnd: do
  966:  return :flagUnits*retaddr                                    CoreBuilder.mnd: void flagUnits(unit)
        label *label42                                               CoreBuilder.mnd: void lineUpUnits(y, unit)
  967:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: var firstUnit = ubind(unit);
  968:  set :lineUpUnits:firstUnit @unit                             ...
        label *label375                                              CoreBuilder.mnd: do
  969:  sensor :lineUpUnits:x @unit @flag                            CoreBuilder.mnd: var x = @unit.@flag;
  970:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  971:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            CoreBuilder.mnd: move(x, y);
  972:  sensor *tmp486 @unit @mining                                 CoreBuilder.mnd: if @unit.@mining then stop(); end;
  973:  jump *label378 equal *tmp486 false                           ...
  974:  ucontrol stop 0 0 0 0 0                                      ...
        label *label378                                              ...
  975:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: ubind(unit);
  976:  jump *label375 notEqual @unit :lineUpUnits:firstUnit         CoreBuilder.mnd: do
  977:  return :lineUpUnits*retaddr                                  CoreBuilder.mnd: void lineUpUnits(y, unit)


Performance: parsed in 840 ms, compiled in 418 ms, optimized in 3,780 ms, run in 6 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (17 steps):
The program didn't generate any output.
Execution exception at instruction 16: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
