  1370 instructions before optimizations.
    66 instructions eliminated by Temp Variables Elimination (2 passes, 6 iterations).
   119 instructions eliminated by Dead Code Elimination (10 iterations).
     1 instructions eliminated by Jump Normalization (5 iterations).
    55 instructions eliminated by Jump Optimization (5 iterations).
    34 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
    11 instructions modified by Expression Optimization (3 iterations).
     7 instructions eliminated by If Expression Optimization (4 iterations).
   148 instructions eliminated by Data Flow Optimization (24 passes, 78 iterations).
     1 loops improved by Loop Hoisting.
    37 instructions added by Loop Optimization (3 iterations).
     8 loops improved by Loop Optimization.
     4 instructions eliminated by Loop Unrolling (33 iterations).
     2 loops unrolled by Loop Unrolling.
    26 instructions added by Function Inlining (33 iterations).
    45 function calls inlined by Function Inlining.
     3 instructions eliminated by Jump Straightening (5 iterations).
    12 instructions updated by Jump Threading.
     2 calls threaded by Jump Threading.
    19 instructions eliminated by Unreachable Code Elimination (2 iterations).
   977 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
  * Unroll iteration loop at CoreBuilder.mnd:344:5               size   -19, benefit       39.0, efficiency   Infinity (-13 instructions)
    Unroll iteration loop at CoreBuilder.mnd:176:5               size   -13, benefit     1080.0, efficiency   Infinity
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4122.1, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      562.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +181, benefit      280.0, efficiency      1.547
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5308.6, efficiency    353.906
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5308.6, efficiency    117.969
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    13304.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:414:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:137:5                size    +0, benefit     1968.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
  ! Inline function call at CoreBuilder.mnd:143:13               size   +31, benefit      562.5, efficiency     18.145
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:132:5                size    +0, benefit      984.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:69:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:77:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:81:17                size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:89:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:100:17               size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:103:17               size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:109:17               size    +0, benefit       30.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:112:17               size    +0, benefit       15.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:115:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:126:9                size    +0, benefit      492.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +91, benefit       14.0, efficiency      0.154
  ! Inline function call at CoreBuilder.mnd:301:5                size   +91, benefit       28.0, efficiency      0.308
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2812.5, efficiency    351.563
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2812.5, efficiency    122.283
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      562.5, efficiency     70.313
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      562.5, efficiency     24.457
  ! Inline function call at CoreBuilder.mnd:206:9                size  +159, benefit     3000.0, efficiency     18.868
  ! Inline function call at CoreBuilder.mnd:213:5                size   +91, benefit      238.0, efficiency      2.615
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4645.0, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     1933.6, efficiency    241.699
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1691.9, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     1933.6, efficiency     84.069
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     2986.1, efficiency    426.583
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2322.5, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
  * Unroll iteration loop at CoreBuilder.mnd:176:5               size   -13, benefit     1080.0, efficiency   Infinity (-10 instructions)
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4122.1, efficiency   Infinity
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      562.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +181, benefit      280.0, efficiency      1.547
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5308.6, efficiency    353.906
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5308.6, efficiency    117.969
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    13304.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:414:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:137:5                size    +0, benefit     1968.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
  ! Inline function call at CoreBuilder.mnd:143:13               size   +31, benefit      562.5, efficiency     18.145
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:132:5                size    +0, benefit      984.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:69:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:77:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:81:17                size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:89:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:100:17               size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:103:17               size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:109:17               size    +0, benefit       30.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:112:17               size    +0, benefit       15.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:115:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:126:9                size    +0, benefit      492.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +91, benefit       14.0, efficiency      0.154
  ! Inline function call at CoreBuilder.mnd:301:5                size   +91, benefit       28.0, efficiency      0.308
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2812.5, efficiency    351.563
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2812.5, efficiency    122.283
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      562.5, efficiency     70.313
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      562.5, efficiency     24.457
  ! Inline function call at CoreBuilder.mnd:206:9                size  +159, benefit     3000.0, efficiency     18.868
  ! Inline function call at CoreBuilder.mnd:213:5                size   +91, benefit      238.0, efficiency      2.615
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4645.0, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     1933.6, efficiency    241.699
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1691.9, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     1933.6, efficiency     84.069
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     2986.1, efficiency    426.583
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2322.5, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
  ! Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
  ! Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
  * Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4122.1, efficiency   Infinity (-29 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      562.5, efficiency   Infinity
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
  ! Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
  ! Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5308.6, efficiency    353.906
  ! Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5308.6, efficiency    117.969
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    13304.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:414:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +159, benefit       75.0, efficiency      0.472
  ! Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:137:5                size    +0, benefit     1968.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
  ! Inline function call at CoreBuilder.mnd:143:13               size   +31, benefit      562.5, efficiency     18.145
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:132:5                size    +0, benefit      984.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:69:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:77:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:81:17                size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:89:17                size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:100:17               size    +0, benefit      123.0, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:103:17               size    +0, benefit       61.5, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:109:17               size    +0, benefit       30.8, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:112:17               size    +0, benefit       15.4, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:115:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:118:17               size    +0, benefit        7.7, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:126:9                size    +0, benefit      492.2, efficiency   Infinity
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
  ! Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
  ! Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
  ! Inline function call at Actions.mnd:136:5                    size    +8, benefit     2812.5, efficiency    351.563
  ! Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
  ! Inline function call at Actions.mnd:147:5                    size   +23, benefit     2812.5, efficiency    122.283
  ! Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
  ! Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
  ! Inline function call at Actions.mnd:163:5                    size    +8, benefit      562.5, efficiency     70.313
  ! Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
  ! Inline function call at Actions.mnd:174:5                    size   +23, benefit      562.5, efficiency     24.457
  ! Inline function call at CoreBuilder.mnd:206:9                size  +159, benefit     3000.0, efficiency     18.868
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4645.0, efficiency   Infinity
  ! Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
  ! Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
  ! Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
  ! Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
  ! Inline function call at Actions.mnd:105:5                    size    +8, benefit     1933.6, efficiency    241.699
  ! Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1691.9, efficiency   Infinity
  ! Inline function call at Actions.mnd:124:5                    size   +23, benefit     1933.6, efficiency     84.069
  ! Inline function call at Actions.mnd:68:5                     size    +7, benefit     2986.1, efficiency    426.583
  ! Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2322.5, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 23):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  * Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 size    -1, benefit      562.5, efficiency   Infinity (-6 instructions)
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5308.6, efficiency    353.906
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5308.6, efficiency    117.969
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    13304.4, efficiency   Infinity
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +133, benefit       75.0, efficiency      0.564
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +133, benefit       75.0, efficiency      0.564
  ! Inline function call at CoreBuilder.mnd:414:9                size  +133, benefit       75.0, efficiency      0.564
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +133, benefit       75.0, efficiency      0.564
  ! Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +133, benefit       75.0, efficiency      0.564
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
  ! Inline function call at CoreBuilder.mnd:143:13               size   +31, benefit      562.5, efficiency     18.145
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +8, benefit     2812.5, efficiency    351.563
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
    Inline function call at Actions.mnd:147:5                    size   +23, benefit     2812.5, efficiency    122.283
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +8, benefit      562.5, efficiency     70.313
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
    Inline function call at Actions.mnd:174:5                    size   +23, benefit      562.5, efficiency     24.457
  ! Inline function call at CoreBuilder.mnd:206:9                size  +133, benefit     3000.0, efficiency     22.556
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
    Inline function call at Actions.mnd:105:5                    size    +8, benefit     1933.6, efficiency    241.699
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1691.9, efficiency   Infinity
    Inline function call at Actions.mnd:124:5                    size   +23, benefit     1933.6, efficiency     84.069
    Inline function call at Actions.mnd:68:5                     size    +7, benefit     2986.1, efficiency    426.583
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2322.5, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 29):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +15, benefit     5308.6, efficiency    353.906
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +45, benefit     5308.6, efficiency    117.969
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
  * Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    13304.4, efficiency   Infinity (-11 instructions)
    Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:414:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +8, benefit      562.5, efficiency     70.313
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
    Inline function call at Actions.mnd:174:5                    size   +23, benefit      562.5, efficiency     24.457
  ! Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
  ! Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
  ! Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +8, benefit     2812.5, efficiency    351.563
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
    Inline function call at Actions.mnd:147:5                    size   +23, benefit     2812.5, efficiency    122.283
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
  ! Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:51:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:75:5                     size    +0, benefit     4645.0, efficiency   Infinity
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
    Inline function call at Actions.mnd:105:5                    size    +8, benefit     1933.6, efficiency    241.699
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:108:5                    size    +0, benefit     1691.9, efficiency   Infinity
    Inline function call at Actions.mnd:124:5                    size   +23, benefit     1933.6, efficiency     84.069
    Inline function call at Actions.mnd:68:5                     size    +7, benefit     2986.1, efficiency    426.583
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:38:5                     size    +0, benefit     2322.5, efficiency   Infinity

Pass 1: speed optimization selection (cost limit 40):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +41, benefit     5308.6, efficiency    129.478
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2175.3, efficiency     63.979
  * Inline function 'moveToBlock' defined at Actions.mnd:67:1    size    -1, benefit     2654.3, efficiency   Infinity (-6 instructions)
    Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:414:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
    Inline function call at Actions.mnd:174:5                    size   +21, benefit      562.5, efficiency     26.786
    Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +35, benefit     1582.0, efficiency     45.201
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
    Inline function call at Actions.mnd:147:5                    size   +21, benefit     2812.5, efficiency    133.929
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +35, benefit      593.3, efficiency     16.950
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:77:9                     size    +6, benefit     2654.3, efficiency    442.383
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:124:5                    size   +21, benefit     1933.6, efficiency     92.076
    Inline function call at Actions.mnd:68:5                     size    +5, benefit     2986.1, efficiency    597.217
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947

Pass 1: speed optimization selection (cost limit 46):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
  ! Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +34, benefit     2175.3, efficiency     63.979
  * Inline function 'locateOre' defined at Actions.mnd:92:1      size    -1, benefit     2175.3, efficiency   Infinity (-5 instructions)
    Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:414:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +35, benefit     1582.0, efficiency     45.201
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +35, benefit      593.3, efficiency     16.950
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:68:5                     size    +5, benefit     2986.1, efficiency    597.217
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:103:5                    size    +4, benefit     2175.3, efficiency    543.823
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947

Pass 1: speed optimization selection (cost limit 51):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
    Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
  * Inline function 'moveTo' defined at Actions.mnd:37:1         size    -1, benefit     2986.1, efficiency   Infinity (-8 instructions)
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:414:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:68:5                     size    +5, benefit     2986.1, efficiency    597.217
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 59):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  * Replicate loop condition at Actions.mnd:61:5                 size    +1, benefit    27136.2, efficiency  27136.230 (+1 instructions)
    Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +5, benefit     3256.3, efficiency    651.270
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:414:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +3, benefit      421.9, efficiency    140.625
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +3, benefit     2109.4, efficiency    703.125
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +3, benefit      725.1, efficiency    241.699
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 58):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  * Replicate loop condition at Actions.mnd:39:5                 size    +1, benefit    16589.4, efficiency  16589.355 (+1 instructions)
    Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:414:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 57):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  * Replicate loop condition at Actions.mnd:84:9                 size    +1, benefit    16589.4, efficiency  16589.355 (+1 instructions)
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +49, benefit     5308.6, efficiency    108.339
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:414:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +25, benefit      562.5, efficiency     22.500
    Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
    Inline function call at Actions.mnd:147:5                    size   +25, benefit     2812.5, efficiency    112.500
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +25, benefit     1933.6, efficiency     77.344

Pass 1: speed optimization selection (cost limit 56):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +2, benefit    10617.2, efficiency   5308.594
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +51, benefit     5308.6, efficiency    104.090
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:414:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +26, benefit      562.5, efficiency     21.635
    Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
    Inline function call at Actions.mnd:147:5                    size   +26, benefit     2812.5, efficiency    108.173
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
  * Inline function call at Actions.mnd:88:5                     size    +1, benefit     5308.6, efficiency   5308.594 (-2 instructions)
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +26, benefit     1933.6, efficiency     74.369

Pass 1: speed optimization selection (cost limit 58):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
  * Inline function 'transportStatus' defined at Actions.mnd:21:1 size    +1, benefit     5308.6, efficiency   5308.594 (-7 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:414:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:161:5                    size    +1, benefit      562.5, efficiency    562.500
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:134:5                    size    +1, benefit     2812.5, efficiency   2812.500
    Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:101:5                    size    +1, benefit     1933.6, efficiency   1933.594
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 65):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +31, benefit     2812.5, efficiency     90.726
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'status2' defined at Actions.mnd:11:1        size    +5, benefit     6565.4, efficiency   1313.086
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2175.3, efficiency     62.151
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +160, benefit       75.0, efficiency      0.469
  ! Inline function call at CoreBuilder.mnd:414:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +32, benefit     2250.0, efficiency     70.313
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:127:9                size   +32, benefit      562.5, efficiency     17.578
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1582.0, efficiency     43.945
  * Inline function call at Actions.mnd:135:5                    size    +2, benefit     3164.1, efficiency   1582.031 (-2 instructions)
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      593.3, efficiency     16.479
  ! Inline function call at CoreBuilder.mnd:206:9                size  +160, benefit     3000.0, efficiency     18.750
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 67):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
    Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +53, benefit     1230.5, efficiency     23.216
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2812.5, efficiency     96.983
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +51, benefit     1054.7, efficiency     20.680
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  * Inline function 'status2' defined at Actions.mnd:11:1        size    +3, benefit     3401.4, efficiency   1133.789 (-11 instructions)
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2175.3, efficiency     62.151
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +160, benefit       75.0, efficiency      0.469
  ! Inline function call at CoreBuilder.mnd:414:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +160, benefit       75.0, efficiency      0.469
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +13, benefit      562.5, efficiency     43.269
    Inline function call at Actions.mnd:162:5                    size    +2, benefit      632.8, efficiency    316.406
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +30, benefit     2250.0, efficiency     75.000
    Inline function call at CoreBuilder.mnd:133:5                size    +9, benefit      984.4, efficiency    109.375
    Inline function call at CoreBuilder.mnd:70:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:78:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:82:17                size   +13, benefit       70.3, efficiency      5.409
    Inline function call at CoreBuilder.mnd:90:17                size   +13, benefit      140.6, efficiency     10.817
    Inline function call at CoreBuilder.mnd:101:17               size    +9, benefit      123.0, efficiency     13.672
    Inline function call at CoreBuilder.mnd:107:17               size    +9, benefit       61.5, efficiency      6.836
    Inline function call at CoreBuilder.mnd:110:17               size    +9, benefit       30.8, efficiency      3.418
    Inline function call at CoreBuilder.mnd:113:17               size    +9, benefit       15.4, efficiency      1.709
    Inline function call at CoreBuilder.mnd:116:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:122:17               size    +9, benefit        7.7, efficiency      0.854
    Inline function call at CoreBuilder.mnd:127:9                size   +30, benefit      562.5, efficiency     18.750
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:129:5                    size    +2, benefit     1582.0, efficiency    791.016
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1582.0, efficiency     43.945
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:152:5                    size    +2, benefit     1186.5, efficiency    593.262
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      593.3, efficiency     16.479
  ! Inline function call at CoreBuilder.mnd:206:9                size  +160, benefit     3000.0, efficiency     18.750
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 78):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  * Inline function 'error' defined at Actions.mnd:31:1          size    +1, benefit      849.4, efficiency    849.447 (-8 instructions)
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1230.5, efficiency     30.011
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2812.5, efficiency     96.983
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +35, benefit     2175.3, efficiency     62.151
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:253:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:414:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:280:21               size    +1, benefit        1.8, efficiency      1.750
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +30, benefit     2250.0, efficiency     75.000
    Inline function call at CoreBuilder.mnd:133:5                size    +7, benefit      984.4, efficiency    140.625
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:127:9                size   +30, benefit      562.5, efficiency     18.750
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +36, benefit     1582.0, efficiency     43.945
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:156:9                    size   +36, benefit      593.3, efficiency     16.479
  ! Inline function call at CoreBuilder.mnd:206:9                size  +158, benefit     3000.0, efficiency     18.987
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:94:9                     size    +1, benefit      845.9, efficiency    845.947
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 86):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1230.5, efficiency     30.011
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +29, benefit     2812.5, efficiency     96.983
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +7, benefit     3256.3, efficiency    465.193
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +33, benefit     2175.3, efficiency     65.918
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:414:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +30, benefit     2250.0, efficiency     75.000
    Inline function call at CoreBuilder.mnd:133:5                size    +7, benefit      984.4, efficiency    140.625
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:127:9                size   +30, benefit      562.5, efficiency     18.750
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
    Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
    Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +34, benefit     1582.0, efficiency     46.530
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
  * Inline function call at Actions.mnd:137:5                    size    +4, benefit     2109.4, efficiency    527.344 (+3 instructions)
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:156:9                    size   +34, benefit      593.3, efficiency     17.449
  ! Inline function call at CoreBuilder.mnd:206:9                size  +158, benefit     3000.0, efficiency     18.987
    Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 83):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1230.5, efficiency     30.011
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +32, benefit     2812.5, efficiency     87.891
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  * Inline function 'moveToEmpty' defined at Actions.mnd:50:1    size   +11, benefit     5308.6, efficiency    482.599 (+0 instructions)
    Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     1147.0, efficiency    382.324
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +33, benefit     2175.3, efficiency     65.918
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +158, benefit       75.0, efficiency      0.475
  ! Inline function call at CoreBuilder.mnd:414:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +158, benefit       75.0, efficiency      0.475
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:163:5                    size    +6, benefit      562.5, efficiency     93.750
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +33, benefit     2250.0, efficiency     68.182
    Inline function call at CoreBuilder.mnd:133:5                size    +7, benefit      984.4, efficiency    140.625
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:127:9                size   +33, benefit      562.5, efficiency     17.045
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
    Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
    Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +34, benefit     1582.0, efficiency     46.530
    Inline function call at Actions.mnd:136:5                    size    +6, benefit     2812.5, efficiency    468.750
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:156:9                    size   +34, benefit      593.3, efficiency     17.449
  ! Inline function call at CoreBuilder.mnd:206:9                size  +158, benefit     3000.0, efficiency     18.987
    Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:105:5                    size    +6, benefit     1933.6, efficiency    322.266
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 83):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1230.5, efficiency     30.011
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2812.5, efficiency     80.357
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  * Inline function 'dropAll' defined at Actions.mnd:59:1        size    +3, benefit     1147.0, efficiency    382.324 (-3 instructions)
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +36, benefit     2175.3, efficiency     60.425
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +161, benefit       75.0, efficiency      0.466
  ! Inline function call at CoreBuilder.mnd:414:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +161, benefit       75.0, efficiency      0.466
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:164:5                    size    +4, benefit      421.9, efficiency    105.469
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +36, benefit     2250.0, efficiency     62.500
    Inline function call at CoreBuilder.mnd:133:5                size    +7, benefit      984.4, efficiency    140.625
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:127:9                size   +36, benefit      562.5, efficiency     15.625
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
    Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
    Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +37, benefit     1582.0, efficiency     42.758
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:156:9                    size   +37, benefit      593.3, efficiency     16.034
  ! Inline function call at CoreBuilder.mnd:206:9                size  +161, benefit     3000.0, efficiency     18.634
    Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:106:37                   size    +4, benefit      725.1, efficiency    181.274
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 86):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +41, benefit     1230.5, efficiency     30.011
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2812.5, efficiency     80.357
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +37, benefit     2175.3, efficiency     58.792
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +164, benefit       75.0, efficiency      0.457
  ! Inline function call at CoreBuilder.mnd:414:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +164, benefit       75.0, efficiency      0.457
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +36, benefit     2250.0, efficiency     62.500
  * Inline function call at CoreBuilder.mnd:133:5                size    +7, benefit      984.4, efficiency    140.625 (+5 instructions)
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:127:9                size   +36, benefit      562.5, efficiency     15.625
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
    Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
    Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
    Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188
    Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:206:9                size  +164, benefit     3000.0, efficiency     18.293
    Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 81):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
    Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +35, benefit     2812.5, efficiency     80.357
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
    Inline function 'depositItems' defined at Actions.mnd:74:1   size   +47, benefit     5308.6, efficiency    112.949
    Inline function 'mineOre' defined at Actions.mnd:99:1        size   +75, benefit     3440.9, efficiency     45.879
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +169, benefit       75.0, efficiency      0.444
  ! Inline function call at CoreBuilder.mnd:414:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +36, benefit     2250.0, efficiency     62.500
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1265.6, efficiency     33.306
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:127:9                size   +36, benefit      562.5, efficiency     15.625
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
    Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
    Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
  * Inline function call at Actions.mnd:147:5                    size   +24, benefit     2812.5, efficiency    117.188 (+21 instructions)
    Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:206:9                size  +169, benefit     3000.0, efficiency     17.751
    Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 60):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
    Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  * Inline function 'depositItems' defined at Actions.mnd:74:1   size   +23, benefit     2496.1, efficiency    108.526 (+15 instructions)
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size   +75, benefit     3440.9, efficiency     45.879
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +169, benefit       75.0, efficiency      0.444
  ! Inline function call at CoreBuilder.mnd:414:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +169, benefit       75.0, efficiency      0.444
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:141:13               size   +11, benefit      562.5, efficiency     51.136
    Inline function call at Actions.mnd:174:5                    size   +24, benefit      562.5, efficiency     23.438
    Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1265.6, efficiency     33.306
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
    Inline function call at Actions.mnd:130:5                    size   +38, benefit     1582.0, efficiency     41.632
    Inline function call at Actions.mnd:156:9                    size   +38, benefit      593.3, efficiency     15.612
  ! Inline function call at CoreBuilder.mnd:206:9                size  +169, benefit     3000.0, efficiency     17.751
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938
    Inline function call at Actions.mnd:124:5                    size   +24, benefit     1933.6, efficiency     80.566

Pass 1: speed optimization selection (cost limit 45):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
    Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +43, benefit     1054.7, efficiency     24.528
    Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +117, benefit     3440.9, efficiency     29.410
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +190, benefit       75.0, efficiency      0.395
  ! Inline function call at CoreBuilder.mnd:414:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +190, benefit       75.0, efficiency      0.395
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  * Inline function call at CoreBuilder.mnd:141:13               size   +11, benefit      562.5, efficiency     51.136 (+10 instructions)
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:206:9                size  +190, benefit     3000.0, efficiency     15.789
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938

Pass 1: speed optimization selection (cost limit 35):
    Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
  * Replicate loop condition at CoreBuilder.mnd:205:5            size   +30, benefit     1000.0, efficiency     33.333 (+30 instructions)
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
    Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
    Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
    Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
    Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
    Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +161, benefit      280.0, efficiency      1.739
    Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3757.3, efficiency     21.348
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:414:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
    Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
    Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
    Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
    Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
    Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
    Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
    Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
    Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
    Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
    Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
    Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size   +81, benefit       14.0, efficiency      0.173
  ! Inline function call at CoreBuilder.mnd:301:5                size   +81, benefit       28.0, efficiency      0.346
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:206:9                size  +200, benefit     3000.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:213:5                size   +81, benefit      238.0, efficiency      2.938

Pass 1: speed optimization selection (cost limit 5):
  * Replicate loop condition at CoreBuilder.mnd:408:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +221, benefit      280.0, efficiency      1.267
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3757.3, efficiency     21.348
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:414:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size  +111, benefit       14.0, efficiency      0.126
  ! Inline function call at CoreBuilder.mnd:301:5                size  +111, benefit       28.0, efficiency      0.252
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:206:9                size  +200, benefit     3000.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:213:5                size  +111, benefit      238.0, efficiency      2.144

Pass 1: speed optimization selection (cost limit 4):
  * Replicate loop condition at CoreBuilder.mnd:413:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +221, benefit      280.0, efficiency      1.267
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3757.3, efficiency     21.348
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:414:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size  +111, benefit       14.0, efficiency      0.126
  ! Inline function call at CoreBuilder.mnd:301:5                size  +111, benefit       28.0, efficiency      0.252
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:206:9                size  +200, benefit     3000.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:213:5                size  +111, benefit      238.0, efficiency      2.144

Pass 1: speed optimization selection (cost limit 3):
  * Replicate loop condition at CoreBuilder.mnd:432:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +221, benefit      280.0, efficiency      1.267
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3757.3, efficiency     21.348
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +200, benefit       75.0, efficiency      0.375
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:414:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size  +111, benefit       14.0, efficiency      0.126
  ! Inline function call at CoreBuilder.mnd:301:5                size  +111, benefit       28.0, efficiency      0.252
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:206:9                size  +200, benefit     3000.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:213:5                size  +111, benefit      238.0, efficiency      2.144

Pass 1: speed optimization selection (cost limit 2):
  * Replicate loop condition at CoreBuilder.mnd:442:5            size    +1, benefit       25.0, efficiency     25.000 (+1 instructions)
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +221, benefit      280.0, efficiency      1.267
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3757.3, efficiency     21.348
  ! Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:414:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size  +111, benefit       14.0, efficiency      0.126
  ! Inline function call at CoreBuilder.mnd:301:5                size  +111, benefit       28.0, efficiency      0.252
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:206:9                size  +200, benefit     3000.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:213:5                size  +111, benefit      238.0, efficiency      2.144

Pass 1: speed optimization selection (cost limit 1):
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +95, benefit      120.0, efficiency      1.263
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +221, benefit      280.0, efficiency      1.267
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +21, benefit      323.0, efficiency     15.381
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3757.3, efficiency     21.348
  ! Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:414:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:436:5                size   +24, benefit        4.0, efficiency      0.167
  ! Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +200, benefit       75.0, efficiency      0.375
  ! Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +22, benefit       38.0, efficiency      1.727
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +22, benefit      285.0, efficiency     12.955
  ! Inline function call at CoreBuilder.mnd:238:5                size   +24, benefit      104.0, efficiency      4.333
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size  +111, benefit       14.0, efficiency      0.126
  ! Inline function call at CoreBuilder.mnd:301:5                size  +111, benefit       28.0, efficiency      0.252
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:206:9                size  +200, benefit     3000.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:213:5                size  +111, benefit      238.0, efficiency      2.144

Pass 2: speed optimization selection (cost limit 8):
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +91, benefit      120.0, efficiency      1.319
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +34, benefit      246.1, efficiency      7.238
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +219, benefit      280.0, efficiency      1.279
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +20, benefit      323.0, efficiency     16.150
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +176, benefit     3757.3, efficiency     21.348
    Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +197, benefit       75.0, efficiency      0.381
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +197, benefit       75.0, efficiency      0.381
  ! Inline function call at CoreBuilder.mnd:414:9                size  +197, benefit       75.0, efficiency      0.381
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +197, benefit       75.0, efficiency      0.381
  ! Inline function call at CoreBuilder.mnd:436:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +197, benefit       75.0, efficiency      0.381
    Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
    Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  * Inline function call at CoreBuilder.mnd:101:17               size    +7, benefit      123.0, efficiency     17.578 (+5 instructions)
    Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
    Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
    Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
    Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
    Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +21, benefit      285.0, efficiency     13.571
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit      104.0, efficiency      4.522
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size  +110, benefit       14.0, efficiency      0.127
  ! Inline function call at CoreBuilder.mnd:301:5                size  +110, benefit       28.0, efficiency      0.255
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:206:9                size  +197, benefit     3000.0, efficiency     15.228
  ! Inline function call at CoreBuilder.mnd:213:5                size  +110, benefit      238.0, efficiency      2.164

Pass 2: speed optimization selection (cost limit 3):
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size   +91, benefit      120.0, efficiency      1.319
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +74, benefit       91.0, efficiency      1.230
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      123.0, efficiency      4.557
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +219, benefit      280.0, efficiency      1.279
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +20, benefit      323.0, efficiency     16.150
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     3915.5, efficiency     16.662
  * Inline function call at CoreBuilder.mnd:319:5                size    +3, benefit        3.5, efficiency      1.167 (+2 instructions)
    Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
    Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +202, benefit       75.0, efficiency      0.371
    Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
    Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
    Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:414:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:436:5                size   +23, benefit        4.0, efficiency      0.174
    Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      158.2, efficiency      2.681
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +21, benefit      285.0, efficiency     13.571
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit      104.0, efficiency      4.522
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size  +110, benefit       14.0, efficiency      0.127
  ! Inline function call at CoreBuilder.mnd:301:5                size  +110, benefit       28.0, efficiency      0.255
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:206:9                size  +202, benefit     3000.0, efficiency     14.851
  ! Inline function call at CoreBuilder.mnd:213:5                size  +110, benefit      238.0, efficiency      2.164

Pass 2: speed optimization selection (cost limit 1):
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size  +114, benefit      124.0, efficiency      1.088
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +71, benefit       87.5, efficiency      1.232
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      123.0, efficiency      4.557
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +219, benefit      280.0, efficiency      1.279
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +20, benefit      323.0, efficiency     16.150
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     3915.5, efficiency     16.662
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:414:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:436:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      158.2, efficiency      2.681
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +21, benefit      285.0, efficiency     13.571
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit      104.0, efficiency      4.522
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size  +110, benefit       14.0, efficiency      0.127
  ! Inline function call at CoreBuilder.mnd:301:5                size  +110, benefit       28.0, efficiency      0.255
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:206:9                size  +202, benefit     3000.0, efficiency     14.851
  ! Inline function call at CoreBuilder.mnd:213:5                size  +110, benefit      238.0, efficiency      2.164

Pass 3: speed optimization selection (cost limit 1):
  ! Inline function 'buildRemoteBlock' defined at CoreBuilder.mnd:217:1 size  +160, benefit       36.0, efficiency      0.225
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:227:1 size  +114, benefit      124.0, efficiency      1.088
  ! Inline function 'buildBlockFromCfg' defined at CoreBuilder.mnd:237:1 size   +71, benefit       87.5, efficiency      1.232
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:241:1 size   +11, benefit        7.0, efficiency      0.636
  ! Inline function 'buildUnits' defined at CoreBuilder.mnd:300:1 size   +41, benefit       12.0, efficiency      0.293
  ! Inline function 'flagUnits' defined at CoreBuilder.mnd:489:1 size   +20, benefit       14.0, efficiency      0.700
  ! Inline function 'lineUpUnits' defined at CoreBuilder.mnd:503:1 size   +26, benefit      400.0, efficiency     15.385
  ! Inline function 'mineOre' defined at Actions.mnd:128:1       size   +27, benefit      123.0, efficiency      4.557
  ! Inline function 'fetchBlock' defined at Actions.mnd:133:1    size   +56, benefit     2812.5, efficiency     50.223
  ! Inline function 'supplyBlock' defined at Actions.mnd:151:1   size   +32, benefit      492.2, efficiency     15.381
  ! Inline function 'unpackCfg' defined at Common.mnd:9:1        size   +37, benefit      334.0, efficiency      9.027
  ! Inline function 'meetTarget' defined at CoreBuilder.mnd:173:1 size  +219, benefit      280.0, efficiency      1.279
  ! Inline function 'buildBlock' defined at CoreBuilder.mnd:212:1 size   +20, benefit      323.0, efficiency     16.150
  ! Inline function 'mineOre' defined at Actions.mnd:99:1        size  +235, benefit     3915.5, efficiency     16.662
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:320:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:321:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:322:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:326:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:327:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:248:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:330:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:331:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:332:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:337:18               size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:348:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:349:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:351:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:362:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:364:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:375:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:376:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:377:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:380:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:381:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:382:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:384:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:390:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:391:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:392:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:393:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:395:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:402:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:403:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:404:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:405:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:406:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:409:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:414:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:277:5                size   +12, benefit        3.5, efficiency      0.292
  ! Inline function call at CoreBuilder.mnd:283:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:284:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:285:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:286:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:287:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:288:5                size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:289:22               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:290:24               size   +23, benefit        4.5, efficiency      0.196
  ! Inline function call at CoreBuilder.mnd:433:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:436:5                size   +23, benefit        4.0, efficiency      0.174
  ! Inline function call at CoreBuilder.mnd:437:5                size    +3, benefit        3.5, efficiency      1.167
  ! Inline function call at CoreBuilder.mnd:440:5                size   +14, benefit        3.0, efficiency      0.214
  ! Inline function call at CoreBuilder.mnd:443:9                size  +202, benefit       75.0, efficiency      0.371
  ! Inline function call at CoreBuilder.mnd:476:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:477:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:478:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:479:5                size    +7, benefit        3.5, efficiency      0.500
  ! Inline function call at CoreBuilder.mnd:482:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:483:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:484:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at CoreBuilder.mnd:485:9                size    +9, benefit      100.0, efficiency     11.111
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      316.4, efficiency      5.363
  ! Inline function call at CoreBuilder.mnd:146:5                size   +57, benefit     2250.0, efficiency     39.474
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1265.6, efficiency     21.451
  ! Inline function call at CoreBuilder.mnd:70:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:78:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at CoreBuilder.mnd:82:17                size   +11, benefit       70.3, efficiency      6.392
  ! Inline function call at CoreBuilder.mnd:90:17                size   +11, benefit      140.6, efficiency     12.784
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit      158.2, efficiency      2.681
  ! Inline function call at CoreBuilder.mnd:107:17               size    +7, benefit       61.5, efficiency      8.789
  ! Inline function call at CoreBuilder.mnd:110:17               size    +7, benefit       30.8, efficiency      4.395
  ! Inline function call at CoreBuilder.mnd:113:17               size    +7, benefit       15.4, efficiency      2.197
  ! Inline function call at CoreBuilder.mnd:116:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:122:17               size    +7, benefit        7.7, efficiency      1.099
  ! Inline function call at CoreBuilder.mnd:127:9                size   +57, benefit      562.5, efficiency      9.868
  ! Inline function call at CoreBuilder.mnd:220:9                size   +19, benefit       34.0, efficiency      1.789
  ! Inline function call at CoreBuilder.mnd:221:16               size   +21, benefit       38.0, efficiency      1.810
  ! Inline function call at CoreBuilder.mnd:229:5                size   +19, benefit      285.0, efficiency     15.000
  ! Inline function call at CoreBuilder.mnd:230:20               size   +21, benefit      285.0, efficiency     13.571
  ! Inline function call at CoreBuilder.mnd:238:5                size   +23, benefit      104.0, efficiency      4.522
  ! Inline function call at CoreBuilder.mnd:243:5                size   +19, benefit       15.0, efficiency      0.789
  ! Inline function call at CoreBuilder.mnd:244:5                size  +110, benefit       14.0, efficiency      0.127
  ! Inline function call at CoreBuilder.mnd:301:5                size  +110, benefit       28.0, efficiency      0.255
  ! Inline function call at Actions.mnd:130:5                    size   +59, benefit     1582.0, efficiency     26.814
  ! Inline function call at Actions.mnd:156:9                    size   +59, benefit      593.3, efficiency     10.055
  ! Inline function call at CoreBuilder.mnd:206:9                size  +202, benefit     3000.0, efficiency     14.851
  ! Inline function call at CoreBuilder.mnd:213:5                size  +110, benefit      238.0, efficiency      2.164

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-91 instructions):
 
    29 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    30 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
    31 label *label47
-    * set *tmp117 :buildBlockFromCfg.1*retval
    32 set :buildBlockFromCfg.1:cfg "AJTJK-battery1"
    33 setaddr :buildBlockFromCfg.1*retaddr *label48 (h:*label48)
    34 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label48) (h:*label48)
    35 label *label48
-    * set *tmp118 :buildBlockFromCfg.1*retval
    36 set :buildBlockFromCfg.1:cfg "ALTJL-battery2"
    37 setaddr :buildBlockFromCfg.1*retaddr *label49 (h:*label49)
    38 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label49) (h:*label49)
    39 label *label49
-    * set *tmp119 :buildBlockFromCfg.1*retval
    40 set :buildBlockFromCfg.1:cfg "AJRJM-combustion-generator3"
    41 setaddr :buildBlockFromCfg.1*retaddr *label50 (h:*label50)
    42 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label50) (h:*label50)
    43 label *label50
-    * set *tmp120 :buildBlockFromCfg.1*retval
    44 set .powerTarget 400
    45 set :buildBlockFromCfg.1:cfg "ALMQJN-silicon-smelter4"
    46 setaddr :buildBlockFromCfg.1*retaddr *label51 (h:*label51)
    47 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label51) (h:*label51)
    48 label *label51
-    * set *tmp121 :buildBlockFromCfg.1*retval
    49 set :buildBlockFromCfg.1:cfg "A{LNJO-inverted-sorter5"
    50 setaddr :buildBlockFromCfg.1*retaddr *label52 (h:*label52)
    51 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
    52 label *label52
-    * set *tmp122 :buildBlockFromCfg.1*retval
    53 set :buildFirstTitaniumDrill:cfg "AJJJP-pneumatic-drill6"
    54 set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
    55 setaddr :meetTarget.1*retaddr *label54 (h:*label54)
 
    81 setaddr :error*retaddr *label58 (h:*label58)
    82 call *label13 *invalid :error*retval (m:*label58) (h:*label58)
    83 label *label58
-    * set *tmp137 null
    84 jump *label57 always
    85 label *label56
-    * set *tmp137 null
    86 label *label57
    87 write @pneumatic-drill .display ".nextBlock"
    88 write :buildFirstTitaniumDrill:dx .blockBuilder ":buildFirstTitaniumDrillAt:x"
 
   104 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
   105 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
   106 label *label60
-    * set *tmp142 :buildBlockFromCfg.1*retval
   107 set :buildBlockFromCfg.1:cfg "A{HNJR-inverted-sorter8"
   108 setaddr :buildBlockFromCfg.1*retaddr *label61 (h:*label61)
   109 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
   110 label *label61
-    * set *tmp143 :buildBlockFromCfg.1*retval
   111 set :buildBlockFromCfg.1:cfg "A~JPJS-overflow-gate9"
   112 setaddr :buildBlockFromCfg.1*retaddr *label62 (h:*label62)
   113 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label62) (h:*label62)
   114 label *label62
-    * set *tmp144 :buildBlockFromCfg.1*retval
   115 set .graphiteSurplus 100
   116 set :buildBlockFromCfg:cfg "AÕFFJT-micro-processor10"
   117 set :buildBlockFromCfg:config processor2
 
   173 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   174 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
   175 label *label77
-    * set *tmp148 :buildBlockFromCfg.1*retval
   176 set :buildBlockFromCfg.1:cfg "A©FHJV-unloader12"
   177 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   178 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
   179 label *label78
-    * set *tmp149 :buildBlockFromCfg.1*retval
   180 set :buildBlockFromCfg.1:cfg "A¾BHMW-air-factory13"
   181 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
   182 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label79) (h:*label79)
   183 label *label79
-    * set *tmp150 :buildBlockFromCfg.1*retval
   184 set :setFlareTarget:target 1
   185 write :setFlareTarget:target .controller ".flareTarget"
   186 write :setFlareTarget:target .display ".flareTarget"
 
   205 op lessThan *tmp152 *tmp151 300
   206 jump *label87 equal *tmp152 false
   207 jump *label85 always
-    * set *tmp153 null
   208 jump *label88 always
   209 label *label87
-    * set *tmp153 null
   210 label *label88
   211 label *label84
   212 read *tmp82 .controller ".monos"
 
   218 setaddr :buildBlockFromCfg.1*retaddr *label89 (h:*label89)
   219 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label89) (h:*label89)
   220 label *label89
-    * set *tmp155 :buildBlockFromCfg.1*retval
   221 set :buildBlockFromCfg.1:cfg "A{NJJY-inverted-sorter15"
   222 setaddr :buildBlockFromCfg.1*retaddr *label90 (h:*label90)
   223 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label90) (h:*label90)
   224 label *label90
-    * set *tmp156 :buildBlockFromCfg.1*retval
   225 set :buildBlockFromCfg.1:cfg "ANOMJZ-kiln16"
   226 setaddr :buildBlockFromCfg.1*retaddr *label91 (h:*label91)
   227 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label91) (h:*label91)
   228 label *label91
-    * set *tmp157 :buildBlockFromCfg.1*retval
   229 set :buildBlockFromCfg.1:cfg "A¡ASJ[-water-extractor17"
   230 setaddr :buildBlockFromCfg.1*retaddr *label92 (h:*label92)
   231 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label92) (h:*label92)
   232 label *label92
-    * set *tmp158 :buildBlockFromCfg.1*retval
   233 set :buildBlockFromCfg:cfg "A©BLJ\-unloader18"
   234 set :buildBlockFromCfg:config @coal
   235 setaddr :buildBlockFromCfg*retaddr *label93 (h:*label93)
   236 call *label37 *invalid :buildBlockFromCfg*retval (m:*label93) (h:*label93)
   237 label *label93
-    * set *tmp159 :buildBlockFromCfg*retval
   238 set :buildBlockFromCfg.1:cfg "AAOJ]-steam-generator19"
   239 setaddr :buildBlockFromCfg.1*retaddr *label94 (h:*label94)
   240 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label94) (h:*label94)
   241 label *label94
-    * set *tmp160 :buildBlockFromCfg.1*retval
   242 set :buildBlockFromCfg.1:cfg "AKFRJ^-multi-press20"
   243 setaddr :buildBlockFromCfg.1*retaddr *label95 (h:*label95)
   244 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label95) (h:*label95)
   245 label *label95
-    * set *tmp161 :buildBlockFromCfg.1*retval
   246 set .graphiteSurplus 150
   247 set :buildBlockFromCfg.1:cfg "AÇBBJ_-payload-router21"
   248 setaddr :buildBlockFromCfg.1*retaddr *label96 (h:*label96)
   249 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label96) (h:*label96)
   250 label *label96
-    * set *tmp162 :buildBlockFromCfg.1*retval
   251 set :buildBlockFromCfg.1:cfg "A©HFJ`-unloader22"
   252 setaddr :buildBlockFromCfg.1*retaddr *label97 (h:*label97)
   253 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label97) (h:*label97)
   254 label *label97
-    * set *tmp163 :buildBlockFromCfg.1*retval
   255 set :buildBlockFromCfg.1:cfg "AÀHBJa-additive-reconstructor23"
   256 setaddr :buildBlockFromCfg.1*retaddr *label98 (h:*label98)
   257 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label98) (h:*label98)
   258 label *label98
-    * set *tmp164 :buildBlockFromCfg.1*retval
   259 set :buildBlockFromCfg.1:cfg "ATNJb-battery-large24"
   260 setaddr :buildBlockFromCfg.1*retaddr *label99 (h:*label99)
   261 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label99) (h:*label99)
   262 label *label99
-    * set *tmp165 :buildBlockFromCfg.1*retval
   263 setaddr :buildUnits*retaddr *label100 (h:*label100)
   264 call *label40 *invalid :buildUnits*retval (m:*label100) (h:*label100)
   265 label *label100
 
   273 setaddr :buildBlockFromCfg.1*retaddr *label102 (h:*label102)
   274 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label102) (h:*label102)
   275 label *label102
-    * set *tmp166 :buildBlockFromCfg.1*retval
   276 set :buildBlockFromCfg.1:cfg "A{PJJg-inverted-sorter29"
   277 setaddr :buildBlockFromCfg.1*retaddr *label103 (h:*label103)
   278 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label103) (h:*label103)
   279 label *label103
-    * set *tmp167 :buildBlockFromCfg.1*retval
   280 set :buildBlockFromCfg.1:cfg "A{PHJh-inverted-sorter30"
   281 setaddr :buildBlockFromCfg.1*retaddr *label104 (h:*label104)
   282 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label104) (h:*label104)
   283 label *label104
-    * set *tmp168 :buildBlockFromCfg.1*retval
   284 set :buildBlockFromCfg:cfg "A©PPJi-unloader31"
   285 set :buildBlockFromCfg:config @sand
   286 setaddr :buildBlockFromCfg*retaddr *label105 (h:*label105)
   287 call *label37 *invalid :buildBlockFromCfg*retval (m:*label105) (h:*label105)
   288 label *label105
-    * set *tmp169 :buildBlockFromCfg*retval
   289 setaddr :buildUnits*retaddr *label106 (h:*label106)
   290 call *label40 *invalid :buildUnits*retval (m:*label106) (h:*label106)
   291 label *label106
 
   370 setaddr :error*retaddr *label125 (h:*label125)
   371 call *label13 *invalid :error*retval (m:*label125) (h:*label125)
   372 label *label125
-    * set *tmp194 null
   373 jump *label124 always
   374 label *label123
-    * set *tmp194 null
   375 label *label124
   376 write @laser-drill .blockBuilder ":buildBlockAt:block"
   377 read *tmp53 .oreLocator ".drillX"
 
   397 setaddr :buildRemoteBlock*retaddr *label127 (h:*label127)
   398 call *label36 *invalid :buildRemoteBlock*retval (m:*label127) (h:*label127)
   399 label *label127
-    * set *tmp203 :buildRemoteBlock*retval
   400 set :buildRemoteBlock:cfg "A¡ASJ[-water-extractor17"
   401 read *tmp59 .oreLocator ".water2X"
   402 set :buildRemoteBlock:x *tmp59
 
   405 setaddr :buildRemoteBlock*retaddr *label128 (h:*label128)
   406 call *label36 *invalid :buildRemoteBlock*retval (m:*label128) (h:*label128)
   407 label *label128
-    * set *tmp204 :buildRemoteBlock*retval
   408 set :buildRemoteBlock:cfg "AAOJ]-steam-generator19"
   409 read *tmp61 .oreLocator ".generatorX"
   410 set :buildRemoteBlock:x *tmp61
 
   423 setaddr :buildRemoteBlock*retaddr *label130 (h:*label130)
   424 call *label36 *invalid :buildRemoteBlock*retval (m:*label130) (h:*label130)
   425 label *label130
-    * set *tmp206 :buildRemoteBlock*retval
   426 set :buildRemoteBlock:cfg "AFJJU-power-node11"
   427 read *tmp65 .oreLocator ".node2X"
   428 set :buildRemoteBlock:x *tmp65
 
   431 setaddr :buildRemoteBlock*retaddr *label131 (h:*label131)
   432 call *label36 *invalid :buildRemoteBlock*retval (m:*label131) (h:*label131)
   433 label *label131
-    * set *tmp207 :buildRemoteBlock*retval
   434 set :buildRemoteBlock:cfg "AJJJd-solar-panel26"
   435 read *tmp67 .oreLocator ".panelX"
   436 set :buildRemoteBlock:x *tmp67
 
   439 setaddr :buildRemoteBlock*retaddr *label132 (h:*label132)
   440 call *label36 *invalid :buildRemoteBlock*retval (m:*label132) (h:*label132)
   441 label *label132
-    * set *tmp208 :buildRemoteBlock*retval
   442 set :buildRemoteBlock:cfg "AJTJK-battery1"
   443 read *tmp69 .oreLocator ".batteryX"
   444 set :buildRemoteBlock:x *tmp69
 
   462 op equal *tmp211 .thoriumContainer null
   463 jump *label135 equal *tmp211 false
   464 set .thoriumContainer .thoriumDrill
-    * set *tmp212 .thoriumContainer
   465 jump *label136 always
   466 label *label135
-    * set *tmp212 null
   467 label *label136
   468 write .thoriumDrill .display ".thoriumDrill"
   469 write .thoriumContainer .display ".thoriumContainer"
 
   495 setaddr :buildBlockFromCfg*retaddr *label143 (h:*label143)
   496 call *label37 *invalid :buildBlockFromCfg*retval (m:*label143) (h:*label143)
   497 label *label143
-    * set *tmp216 :buildBlockFromCfg*retval
   498 set :buildBlockFromCfg.1:cfg "AÁPBJk-multiplicative-reconstructor33"
   499 setaddr :buildBlockFromCfg.1*retaddr *label144 (h:*label144)
   500 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label144) (h:*label144)
   501 label *label144
-    * set *tmp217 :buildBlockFromCfg.1*retval
   502 set .metaglassSurplus 50
   503 setaddr :buildUnits*retaddr *label145 (h:*label145)
   504 call *label40 *invalid :buildUnits*retval (m:*label145) (h:*label145)
 
   602 label *label173
   603 set *tmp237 null
   604 label *label171
-    * set *tmp234 *tmp237
   605 jump *label169 always
   606 label *label168
-    * set *tmp234 null
   607 label *label169
   608 set :fetchBlock:block .thoriumContainer
   609 set :fetchBlock:item @thorium
 
   611 call *label23 *invalid :fetchBlock*retval (m:*label174) (h:*label174)
   612 label *label174
   613 label *label166
-    * set *tmp231 null
   614 jump *label165 always
   615 label *label164
   616 read *tmp82 .controller ".monos"
 
   652 label *label185
   653 set *tmp247 null
   654 label *label186
-    * set *tmp244 *tmp247
   655 jump *label184 always
   656 label *label183
-    * set *tmp244 null
   657 label *label184
   658 sensor *tmp248 .core @silicon
   659 op lessThan *tmp249 *tmp248 .targetSilicon
 
   694 label *label196
   695 set *tmp253 *tmp256
   696 label *label192
-    * set *tmp250 *tmp253
   697 jump *label190 always
   698 label *label189
-    * set *tmp250 null
   699 label *label190
   700 sensor *tmp257 AJTJK-battery1 @totalPower
   701 op lessThan *tmp258 *tmp257 .powerTarget
 
   723 label *label199
   724 set *tmp259 null
   725 label *label200
-    * set *tmp241 *tmp259
   726 jump *label182 always
   727 label *label181
-    * set *tmp241 null
   728 label *label182
   729 sensor *tmp263 .core @titanium
   730 op lessThan *tmp264 *tmp263 .targetTitanium
 
   861 label *label209
   862 set *tmp273 null
   863 label *label210
-    * set *tmp271 *tmp273
   864 jump *label208 always
   865 label *label207
   866 set :status1:text "Goal 11: Fetching titanium"
 
   872 setaddr :fetchBlock*retaddr *label238 (h:*label238)
   873 call *label23 *invalid :fetchBlock*retval (m:*label238) (h:*label238)
   874 label *label238
-    * set *tmp271 null
   875 label *label208
   876 label *label180
   877 set *tmp239 null
   878 label *label176
-    * set *tmp231 *tmp239
   879 label *label165
   880 label *label163
   881 return :supplyBase*retaddr
 
   916 label *label243
   917 set :buildRemoteBlock*retval :buildBlock*retval
   918 jump *label239 always
-    * set *tmp300 null
   919 jump *label241 always
   920 label *label240
-    * set *tmp300 null
   921 label *label241
   922 set :buildRemoteBlock*retval false
   923 jump *label239 always
 
  1060 sensor *tmp308 @unit @mining
  1061 jump *label265 equal *tmp308 false
  1062 ucontrol stop
-    * set *tmp309 null
  1063 jump *label266 always
  1064 label *label265
-    * set *tmp309 null
  1065 label *label266
  1066 ubind :lineUpUnits:unit
  1067 label *label263
 
  1126 op land *tmp319 *tmp317 *tmp318
  1127 jump *label279 equal *tmp319 false
  1128 ucontrol itemDrop @air 1000
-    * set *tmp320 null
  1129 jump *label280 always
  1130 label *label279
-    * set *tmp320 null
  1131 label *label280
  1132 label *label277
  1133 sensor *tmp321 @unit :fetchBlock:item
 
  1164 setaddr :mineOre*retaddr *label286 (h:*label286)
  1165 call *label21 *invalid :mineOre*retval (m:*label286) (h:*label286)
  1166 label *label286
-    * set *tmp329 null
  1167 jump *label285 always
  1168 label *label284
-    * set *tmp329 null
  1169 label *label285
  1170 label *label282
  1171 return :supplyBlock*retaddr
 
  1201 op land *tmp335 *tmp333 *tmp334
  1202 jump *label295 equal *tmp335 false
  1203 ucontrol itemDrop @air 1000
-    * set *tmp336 null
  1204 jump *label296 always
  1205 label *label295
-    * set *tmp336 null
  1206 label *label296
  1207 label *label293
  1208 sensor *tmp337 @unit :supplyBlockFromCore:item
 
  1264 sensor *tmp365 :unpackCfg:type @thorium
  1265 set :unpackCfg:th *tmp365
  1266 sensor *tmp366 :unpackCfg:type @size
-    * set :unpackCfg:size *tmp366
  1267 label *label298
  1268 return :unpackCfg*retaddr
  1269 end
 
  1344 jump *label314 equal *tmp383 false
  1345 set *tmp381 false
  1346 jump *label313 always
-    * set *tmp384 null
  1347 jump *label315 always
  1348 label *label314
-    * set *tmp384 null
  1349 label *label315
  1350 sensor *tmp385 .core @lead
  1351 op lessThan *tmp386 *tmp385 .targetLead
  1352 jump *label316 equal *tmp386 false
  1353 set *tmp381 false
  1354 jump *label313 always
-    * set *tmp387 null
  1355 jump *label317 always
  1356 label *label316
-    * set *tmp387 null
  1357 label *label317
  1358 sensor *tmp388 .core @graphite
  1359 op lessThan *tmp389 *tmp388 .targetGraphite
  1360 jump *label318 equal *tmp389 false
  1361 set *tmp381 false
  1362 jump *label313 always
-    * set *tmp390 null
  1363 jump *label319 always
  1364 label *label318
-    * set *tmp390 null
  1365 label *label319
  1366 sensor *tmp391 .core @silicon
  1367 op lessThan *tmp392 *tmp391 .targetSilicon
  1368 jump *label320 equal *tmp392 false
  1369 set *tmp381 false
  1370 jump *label313 always
-    * set *tmp393 null
  1371 jump *label321 always
  1372 label *label320
-    * set *tmp393 null
  1373 label *label321
  1374 sensor *tmp394 .core @titanium
  1375 op lessThan *tmp395 *tmp394 .targetTitanium
  1376 jump *label322 equal *tmp395 false
  1377 set *tmp381 false
  1378 jump *label313 always
-    * set *tmp396 null
  1379 jump *label323 always
  1380 label *label322
-    * set *tmp396 null
  1381 label *label323
  1382 sensor *tmp397 .core @metaglass
  1383 op lessThan *tmp398 *tmp397 .targetMetaglass
  1384 jump *label324 equal *tmp398 false
  1385 set *tmp381 false
  1386 jump *label313 always
-    * set *tmp399 null
  1387 jump *label325 always
  1388 label *label324
-    * set *tmp399 null
  1389 label *label325
  1390 sensor *tmp400 .core @thorium
  1391 op lessThan *tmp401 *tmp400 .targetThorium
  1392 jump *label326 equal *tmp401 false
  1393 set *tmp381 false
  1394 jump *label313 always
-    * set *tmp402 null
  1395 jump *label327 always
  1396 label *label326
-    * set *tmp402 null
  1397 label *label327
  1398 set *tmp381 true
  1399 jump *label313 always
 
  1464 op notEqual *tmp413 *tmp412 null
  1465 jump *label339 equal *tmp413 false
  1466 ucontrol itemDrop @air 1000
-    * set *tmp414 null
  1467 jump *label340 always
  1468 label *label339
-    * set *tmp414 null
  1469 label *label340
  1470 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1471 label *label337
 
  1512 op greaterThan *tmp426 *tmp424 *tmp425
  1513 jump *label350 notEqual *tmp426 false
  1514 label *label352
-    * set *tmp421 null
  1515 jump *label348 always
  1516 label *label347
  1517 label *label353
 
  1522 label *label354
  1523 jump *label353 always
  1524 label *label355
-    * set *tmp421 null
  1525 label *label348
  1526 set :transportStatus:target 0
  1527 set :transportStatus:item null
 
  1556 setaddr :dropAll*retaddr *label363 (h:*label363)
  1557 call *label17 *invalid :dropAll*retval (m:*label363) (h:*label363)
  1558 label *label363
-    * set *tmp432 null
  1559 jump *label362 always
  1560 label *label361
-    * set *tmp432 null
  1561 label *label362
  1562 set :status3:text "Mining..."
  1563 setaddr :status3*retaddr *label364 (h:*label364)
 
  1573 op land *tmp437 *tmp435 *tmp436
  1574 jump *label368 equal *tmp437 false
  1575 jump *label367 always
-    * set *tmp438 null
  1576 jump *label369 always
  1577 label *label368
-    * set *tmp438 null
  1578 label *label369
  1579 ucontrol mine :mineOre:x :mineOre:y
  1580 op greaterThan *tmp439 @second :mineOre:stop
  1581 jump *label370 equal *tmp439 false
  1582 jump *label367 always
-    * set *tmp440 null
  1583 jump *label371 always
  1584 label *label370
-    * set *tmp440 null
  1585 label *label371
  1586 label *label366
  1587 sensor *tmp441 @unit @totalItems
 
  1622 setaddr :error*retaddr *label379 (h:*label379)
  1623 call *label13 *invalid :error*retval (m:*label379) (h:*label379)
  1624 label *label379
-    * set *tmp448 null
  1625 jump *label378 always
  1626 label *label377
-    * set *tmp448 null
  1627 label *label378
  1628 label *label376
  1629 return :locateOre*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-14 instructions):
 
   592 setaddr :supplyBlock*retaddr *label172 (h:*label172)
   593 call *label24 *invalid :supplyBlock*retval (m:*label172) (h:*label172)
   594 label *label172
-    * set *tmp237 null
   595 jump *label171 always
   596 label *label170
   597 set :supplyBlockFromCore:target .thoriumGenerator
 
   599 setaddr :supplyBlockFromCore*retaddr *label173 (h:*label173)
   600 call *label25 *invalid :supplyBlockFromCore*retval (m:*label173) (h:*label173)
   601 label *label173
-    * set *tmp237 null
   602 label *label171
   603 jump *label169 always
   604 label *label168
 
   623 call *label22 *invalid :mineOre.1*retval (m:*label179) (h:*label179)
   624 label *label179
   625 label *label177
-    * set *tmp239 null
   626 jump *label176 always
   627 label *label175
   628 set :supplyBase0:supplied false
 
   644 call *label24 *invalid :supplyBlock*retval (m:*label188) (h:*label188)
   645 label *label188
   646 set :supplyBase0:supplied true
-    * set *tmp247 :supplyBase0:supplied
   647 jump *label186 always
   648 label *label185
-    * set *tmp247 null
   649 label *label186
   650 jump *label184 always
   651 label *label183
 
   666 call *label24 *invalid :supplyBlock*retval (m:*label194) (h:*label194)
   667 label *label194
   668 set :supplyBase0:supplied true
-    * set *tmp253 :supplyBase0:supplied
   669 jump *label192 always
   670 label *label191
   671 sensor *tmp254 ALMQJN-silicon-smelter4 @sand
 
   686 label *label195
   687 set *tmp256 null
   688 label *label196
-    * set *tmp253 *tmp256
   689 label *label192
   690 jump *label190 always
   691 label *label189
 
   711 label *label201
   712 set *tmp262 null
   713 label *label202
-    * set *tmp259 *tmp262
   714 jump *label200 always
   715 label *label199
-    * set *tmp259 null
   716 label *label200
   717 jump *label182 always
   718 label *label181
 
   847 label *label216
   848 set *tmp277 *tmp280
   849 label *label212
-    * set *tmp273 *tmp277
   850 jump *label210 always
   851 label *label209
-    * set *tmp273 null
   852 label *label210
   853 jump *label208 always
   854 label *label207
 
   863 label *label238
   864 label *label208
   865 label *label180
-    * set *tmp239 null
   866 label *label176
   867 label *label165
   868 label *label163
 
   965 setaddr :buildBlockFromCfg*retaddr *label248 (h:*label248)
   966 call *label37 *invalid :buildBlockFromCfg*retval (m:*label248) (h:*label248)
   967 label *label248
-    * set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
   968 label *label247
   969 return :buildBlockFromCfg.1*retaddr
   970 end
 
  1250 set :unpackCfg:mg *tmp364
  1251 sensor *tmp365 :unpackCfg:type @thorium
  1252 set :unpackCfg:th *tmp365
-    * sensor *tmp366 :unpackCfg:type @size
  1253 label *label298
  1254 return :unpackCfg*retaddr
  1255 end

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-6 instructions):
 
   681 call *label24 *invalid :supplyBlock*retval (m:*label198) (h:*label198)
   682 label *label198
   683 set :supplyBase0:supplied true
-    * set *tmp256 :supplyBase0:supplied
   684 jump *label196 always
   685 label *label195
-    * set *tmp256 null
   686 label *label196
   687 label *label192
   688 jump *label190 always
 
   704 call *label24 *invalid :supplyBlock*retval (m:*label204) (h:*label204)
   705 label *label204
   706 set :supplyBase0:supplied true
-    * set *tmp262 :supplyBase0:supplied
   707 jump *label202 always
   708 label *label201
-    * set *tmp262 null
   709 label *label202
   710 jump *label200 always
   711 label *label199
 
   742 setaddr :mineOre.1*retaddr *label214 (h:*label214)
   743 call *label22 *invalid :mineOre.1*retval (m:*label214) (h:*label214)
   744 label *label214
-    * set *tmp277 null
   745 jump *label212 always
   746 label *label211
   747 sensor *tmp278 .core @silicon
 
   840 label *label222
   841 set *tmp280 *tmp287
   842 label *label216
-    * set *tmp277 *tmp280
   843 label *label212
   844 jump *label210 always
   845 label *label209

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   767 setaddr :mineOre.1*retaddr *label220 (h:*label220)
   768 call *label22 *invalid :mineOre.1*retval (m:*label220) (h:*label220)
   769 label *label220
-    * set *tmp280 null
   770 jump *label216 always
   771 label *label215
   772 sensor *tmp285 .core @copper
 
   837 label *label226
   838 set *tmp287 *tmp290
   839 label *label222
-    * set *tmp280 *tmp287
   840 label *label216
   841 label *label212
   842 jump *label210 always

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-2 instructions):
 
   780 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   781 call *label22 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
   782 label *label224
-    * set *tmp287 null
   783 jump *label222 always
   784 label *label221
   785 sensor *tmp288 .core @lead
 
   834 label *label230
   835 set *tmp290 *tmp293
   836 label *label226
-    * set *tmp287 *tmp290
   837 label *label222
   838 label *label216
   839 label *label212

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
   793 setaddr :mineOre.1*retaddr *label228 (h:*label228)
   794 call *label22 *invalid :mineOre.1*retval (m:*label228) (h:*label228)
   795 label *label228
-    * set *tmp290 null
   796 jump *label226 always
   797 label *label225
   798 sensor *tmp291 .core @metaglass
 
   831 label *label236
   832 set *tmp293 null
   833 label *label230
-    * set *tmp290 *tmp293
   834 label *label226
   835 label *label222
   836 label *label216

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
   806 setaddr :mineOre.1*retaddr *label232 (h:*label232)
   807 call *label22 *invalid :mineOre.1*retval (m:*label232) (h:*label232)
   808 label *label232
-    * set *tmp293 null
   809 jump *label230 always
   810 label *label229
   811 set :status1:text "Goal 10: supplying base"
 
   828 setaddr :mineOre.1*retaddr *label236 (h:*label236)
   829 call *label22 *invalid :mineOre.1*retval (m:*label236) (h:*label236)
   830 label *label236
-    * set *tmp293 null
   831 label *label230
   832 label *label226
   833 label *label222

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-66 instructions):
 
    17 write 511 bank1 511
    18 label *label44
    19 ubind @poly
-    * set *tmp113 @unit
-    * set .builder *tmp113
-    * ulocate building core false @copper .coreX .coreY *tmp115 *tmp114
-    * set .core *tmp114
+   20 set .builder @unit
+   21 ulocate building core false @copper .coreX .coreY *tmp115 .core
    22 label *label45
    23 op equal *tmp116 .core null
    24 jump *label44 notEqual *tmp116 false
 
    67 wait 1e-15
    68 read *tmp134 .oreLocator ":findDrillLocation*finished"
    69 jump *label55 equal *tmp134 false
-    * read *tmp131 .oreLocator ":findDrillLocation:dx"
-    * set :buildFirstTitaniumDrill:dx *tmp131
-    * read *tmp132 .oreLocator ":findDrillLocation:dy"
-    * set :buildFirstTitaniumDrill:dy *tmp132
-    * read *tmp135 .oreLocator ":findDrillLocation*retval"
-    * set :buildFirstTitaniumDrill:result *tmp135
+   70 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+   71 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+   72 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
    73 op equal *tmp136 :buildFirstTitaniumDrill:result false
    74 jump *label56 equal *tmp136 false
    75 set :error:error "Cannot locate spot for titanium drill"
 
    88 wait 1e-15
    89 read *tmp140 .blockBuilder ":buildFirstTitaniumDrillAt*finished"
    90 jump *label59 equal *tmp140 false
-    * read *tmp141 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
-    * set *tmp123 *tmp141
+   91 read *tmp123 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
    92 jump *label53 always
    93 set *tmp123 null
    94 label *label53
 
   112 setaddr :buildBlockFromCfg*retaddr *label63 (h:*label63)
   113 call *label37 *invalid :buildBlockFromCfg*retval (m:*label63) (h:*label63)
   114 label *label63
-    * set *tmp145 :buildBlockFromCfg*retval
-    * set .controller *tmp145
+  115 set .controller :buildBlockFromCfg*retval
   116 write processor6 .controller ".timer"
   117 write .display .controller ".display"
   118 write .core .controller ".core"
 
   313 label *label116
   314 write @ore-titanium .display ".nextBlock"
   315 ubind @flare
-    * read *tmp51 .oreLocator ".locations"
-    * set :blocksBuildTitaniumDrills:current *tmp51
+  316 read :blocksBuildTitaniumDrills:current .oreLocator ".locations"
   317 write .coreX .oreLocator ":findDrillLocation:x"
   318 write .coreY .oreLocator ":findDrillLocation:y"
   319 write @unit .oreLocator ":findDrillLocation:unit"
 
   354 wait 1e-15
   355 read *tmp191 .oreLocator ":layoutThoriumDrill*finished"
   356 jump *label122 equal *tmp191 false
-    * read *tmp192 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp192
+  357 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
   358 op equal *tmp193 :buildThoriumDrill:result false
   359 jump *label123 equal *tmp193 false
   360 set :error:error "Cannot locate spot for thorium drill"
 
   378 wait 1e-15
   379 read *tmp201 .blockBuilder ":buildBlockAt*finished"
   380 jump *label126 equal *tmp201 false
-    * read *tmp202 .blockBuilder ":buildBlockAt*retval"
-    * set .thoriumDrill *tmp202
+  381 read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
   382 set :buildRemoteBlock:cfg "A¡ASJ[-water-extractor17"
-    * read *tmp55 .oreLocator ".water1X"
-    * set :buildRemoteBlock:x *tmp55
-    * read *tmp56 .oreLocator ".water1Y"
-    * set :buildRemoteBlock:y *tmp56
+  383 read :buildRemoteBlock:x .oreLocator ".water1X"
+  384 read :buildRemoteBlock:y .oreLocator ".water1Y"
   385 setaddr :buildRemoteBlock*retaddr *label127 (h:*label127)
   386 call *label36 *invalid :buildRemoteBlock*retval (m:*label127) (h:*label127)
   387 label *label127
   388 set :buildRemoteBlock:cfg "A¡ASJ[-water-extractor17"
-    * read *tmp59 .oreLocator ".water2X"
-    * set :buildRemoteBlock:x *tmp59
-    * read *tmp60 .oreLocator ".water2Y"
-    * set :buildRemoteBlock:y *tmp60
+  389 read :buildRemoteBlock:x .oreLocator ".water2X"
+  390 read :buildRemoteBlock:y .oreLocator ".water2Y"
   391 setaddr :buildRemoteBlock*retaddr *label128 (h:*label128)
   392 call *label36 *invalid :buildRemoteBlock*retval (m:*label128) (h:*label128)
   393 label *label128
   394 set :buildRemoteBlock:cfg "AAOJ]-steam-generator19"
-    * read *tmp61 .oreLocator ".generatorX"
-    * set :buildRemoteBlock:x *tmp61
-    * read *tmp62 .oreLocator ".generatorY"
-    * set :buildRemoteBlock:y *tmp62
+  395 read :buildRemoteBlock:x .oreLocator ".generatorX"
+  396 read :buildRemoteBlock:y .oreLocator ".generatorY"
   397 setaddr :buildRemoteBlock*retaddr *label129 (h:*label129)
   398 call *label36 *invalid :buildRemoteBlock*retval (m:*label129) (h:*label129)
   399 label *label129
-    * set *tmp205 :buildRemoteBlock*retval
-    * set .thoriumGenerator *tmp205
+  400 set .thoriumGenerator :buildRemoteBlock*retval
   401 set :buildRemoteBlock:cfg "AFJJU-power-node11"
-    * read *tmp63 .oreLocator ".node1X"
-    * set :buildRemoteBlock:x *tmp63
-    * read *tmp64 .oreLocator ".node1Y"
-    * set :buildRemoteBlock:y *tmp64
+  402 read :buildRemoteBlock:x .oreLocator ".node1X"
+  403 read :buildRemoteBlock:y .oreLocator ".node1Y"
   404 setaddr :buildRemoteBlock*retaddr *label130 (h:*label130)
   405 call *label36 *invalid :buildRemoteBlock*retval (m:*label130) (h:*label130)
   406 label *label130
   407 set :buildRemoteBlock:cfg "AFJJU-power-node11"
-    * read *tmp65 .oreLocator ".node2X"
-    * set :buildRemoteBlock:x *tmp65
-    * read *tmp66 .oreLocator ".node2Y"
-    * set :buildRemoteBlock:y *tmp66
+  408 read :buildRemoteBlock:x .oreLocator ".node2X"
+  409 read :buildRemoteBlock:y .oreLocator ".node2Y"
   410 setaddr :buildRemoteBlock*retaddr *label131 (h:*label131)
   411 call *label36 *invalid :buildRemoteBlock*retval (m:*label131) (h:*label131)
   412 label *label131
   413 set :buildRemoteBlock:cfg "AJJJd-solar-panel26"
-    * read *tmp67 .oreLocator ".panelX"
-    * set :buildRemoteBlock:x *tmp67
-    * read *tmp68 .oreLocator ".panelY"
-    * set :buildRemoteBlock:y *tmp68
+  414 read :buildRemoteBlock:x .oreLocator ".panelX"
+  415 read :buildRemoteBlock:y .oreLocator ".panelY"
   416 setaddr :buildRemoteBlock*retaddr *label132 (h:*label132)
   417 call *label36 *invalid :buildRemoteBlock*retval (m:*label132) (h:*label132)
   418 label *label132
   419 set :buildRemoteBlock:cfg "AJTJK-battery1"
-    * read *tmp69 .oreLocator ".batteryX"
-    * set :buildRemoteBlock:x *tmp69
-    * read *tmp70 .oreLocator ".batteryY"
-    * set :buildRemoteBlock:y *tmp70
+  420 read :buildRemoteBlock:x .oreLocator ".batteryX"
+  421 read :buildRemoteBlock:y .oreLocator ".batteryY"
   422 setaddr :buildRemoteBlock*retaddr *label133 (h:*label133)
   423 call *label36 *invalid :buildRemoteBlock*retval (m:*label133) (h:*label133)
   424 label *label133
-    * set *tmp209 :buildRemoteBlock*retval
-    * set .thoriumBattery *tmp209
+  425 set .thoriumBattery :buildRemoteBlock*retval
   426 set :buildRemoteBlock:cfg "A¨JJJe-container27"
-    * read *tmp57 .oreLocator ".containerX"
-    * set :buildRemoteBlock:x *tmp57
-    * read *tmp58 .oreLocator ".containerY"
-    * set :buildRemoteBlock:y *tmp58
+  427 read :buildRemoteBlock:x .oreLocator ".containerX"
+  428 read :buildRemoteBlock:y .oreLocator ".containerY"
   429 setaddr :buildRemoteBlock*retaddr *label134 (h:*label134)
   430 call *label36 *invalid :buildRemoteBlock*retval (m:*label134) (h:*label134)
   431 label *label134
-    * set *tmp210 :buildRemoteBlock*retval
-    * set .thoriumContainer *tmp210
+  432 set .thoriumContainer :buildRemoteBlock*retval
   433 op equal *tmp211 .thoriumContainer null
   434 jump *label135 equal *tmp211 false
   435 set .thoriumContainer .thoriumDrill
 
   507 label *label154
   508 label *label155
   509 jump *label157 equal true false
-    * op sub *tmp224 @thisy 6
-    * set :lineUpUnits:y *tmp224
+  510 op sub :lineUpUnits:y @thisy 6
   511 set :lineUpUnits:unit @mega
   512 setaddr :lineUpUnits*retaddr *label158 (h:*label158)
   513 call *label42 *invalid :lineUpUnits*retval (m:*label158) (h:*label158)
   514 label *label158
-    * op sub *tmp225 @thisy 10
-    * set :lineUpUnits:y *tmp225
+  515 op sub :lineUpUnits:y @thisy 10
   516 set :lineUpUnits:unit @poly
   517 setaddr :lineUpUnits*retaddr *label159 (h:*label159)
   518 call *label42 *invalid :lineUpUnits*retval (m:*label159) (h:*label159)
   519 label *label159
-    * op sub *tmp226 @thisy 14
-    * set :lineUpUnits:y *tmp226
+  520 op sub :lineUpUnits:y @thisy 14
   521 set :lineUpUnits:unit @mono
   522 setaddr :lineUpUnits*retaddr *label160 (h:*label160)
   523 call *label42 *invalid :lineUpUnits*retval (m:*label160) (h:*label160)
   524 label *label160
-    * op sub *tmp227 @thisy 18
-    * set :lineUpUnits:y *tmp227
+  525 op sub :lineUpUnits:y @thisy 18
   526 set :lineUpUnits:unit @flare
   527 setaddr :lineUpUnits*retaddr *label161 (h:*label161)
   528 call *label42 *invalid :lineUpUnits*retval (m:*label161) (h:*label161)
 
   685 jump *label205 equal *tmp264 false
   686 sensor *tmp266 .core @titanium
   687 op sub *tmp267 .targetTitanium *tmp266
-    * op min *tmp268 7 *tmp267
-    * set *tmp265 *tmp268
+  688 op min *tmp265 7 *tmp267
   689 jump *label206 always
   690 label *label205
   691 set *tmp265 100
 
   717 setaddr :status1*retaddr *label217 (h:*label217)
   718 call *label9 *invalid :status1*retval (m:*label217) (h:*label217)
   719 label *label217
-    * sensor *tmp281 .core @coal
-    * set :supplyBase0:coal *tmp281
-    * sensor *tmp282 .core @sand
-    * set :supplyBase0:sand *tmp282
+  720 sensor :supplyBase0:coal .core @coal
+  721 sensor :supplyBase0:sand .core @sand
   722 op lessThan *tmp283 :supplyBase0:coal :supplyBase0:sand
   723 jump *label218 equal *tmp283 false
   724 set *tmp284 @coal
 
   776 setaddr :status1*retaddr *label233 (h:*label233)
   777 call *label9 *invalid :status1*retval (m:*label233) (h:*label233)
   778 label *label233
-    * sensor *tmp294 .core @coal
-    * set :supplyBase0:coal.1 *tmp294
-    * sensor *tmp295 .core @sand
-    * set :supplyBase0:sand.1 *tmp295
+  779 sensor :supplyBase0:coal.1 .core @coal
+  780 sensor :supplyBase0:sand.1 .core @sand
   781 op lessThanEq *tmp296 :supplyBase0:coal.1 :supplyBase0:sand.1
   782 jump *label234 equal *tmp296 false
   783 set *tmp297 @coal
 
   907 return :buildBlockFromCfg*retaddr
   908 end
   909 label *label38
-    * set *tmp303 :buildBlockFromCfg.1:cfg
-    * set :buildBlockFromCfg:cfg *tmp303
+  910 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
   911 set :buildBlockFromCfg:config null
   912 setaddr :buildBlockFromCfg*retaddr *label248 (h:*label248)
   913 call *label37 *invalid :buildBlockFromCfg*retval (m:*label248) (h:*label248)
 
   965 label *label41
   966 label *label255
   967 ubind :flagUnits:unit
-    * set *tmp304 @unit
-    * set :flagUnits:firstUnit *tmp304
+  968 set :flagUnits:firstUnit @unit
   969 label *label256
   970 op equal *tmp305 :flagUnits:firstUnit null
   971 jump *label255 notEqual *tmp305 false
 
   986 ubind :lineUpUnits:unit
   987 set :lineUpUnits:firstUnit @unit
   988 label *label262
-    * sensor *tmp307 @unit @flag
-    * set :lineUpUnits:x *tmp307
+  989 sensor :lineUpUnits:x @unit @flag
   990 ucontrol itemDrop @air 1000
   991 ucontrol move :lineUpUnits:x :lineUpUnits:y
   992 sensor *tmp308 @unit @mining
 
  1015 setaddr :status2*retaddr *label269 (h:*label269)
  1016 call *label10 *invalid :status2*retval (m:*label269) (h:*label269)
  1017 label *label269
-    * set *tmp311 :mineOre.1:ore
-    * set :mineOre:ore *tmp311
+ 1018 set :mineOre:ore :mineOre.1:ore
  1019 set :mineOre:amount 30
  1020 set :mineOre:block .core
  1021 setaddr :mineOre*retaddr *label270 (h:*label270)
 
  1026 end
  1027 label *label23
  1028 sensor *tmp312 :fetchBlock:block @itemCapacity
-    * op min *tmp313 *tmp312 30
-    * set :transportStatus:target *tmp313
+ 1029 op min :transportStatus:target *tmp312 30
  1030 set :transportStatus:item :fetchBlock:item
  1031 setaddr :transportStatus*retaddr *label272 (h:*label272)
  1032 call *label12 *invalid :transportStatus*retval (m:*label272) (h:*label272)
 
  1049 label *label275
  1050 label *label276
  1051 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp316 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp316
+ 1052 sensor :fetchBlock:unitItem @unit @firstItem
  1053 op notEqual *tmp317 :fetchBlock:unitItem null
  1054 op notEqual *tmp318 :fetchBlock:unitItem :fetchBlock:item
  1055 op land *tmp319 *tmp317 *tmp318
 
  1080 setaddr :status2*retaddr *label283 (h:*label283)
  1081 call *label10 *invalid :status2*retval (m:*label283) (h:*label283)
  1082 label *label283
-    * sensor *tmp325 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp325
+ 1083 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1084 sensor *tmp326 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp327 :supplyBlock:blockCapacity *tmp326
-    * set :supplyBlock:missing *tmp327
+ 1085 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
  1086 op greaterThan *tmp328 :supplyBlock:missing 0
  1087 jump *label284 equal *tmp328 false
  1088 set :mineOre:ore :supplyBlock:ore
 
  1099 end
  1100 label *label25
  1101 sensor *tmp330 :supplyBlockFromCore:target @itemCapacity
-    * op min *tmp331 *tmp330 30
-    * set :transportStatus:target *tmp331
+ 1102 op min :transportStatus:target *tmp330 30
  1103 set :transportStatus:item :supplyBlockFromCore:item
  1104 setaddr :transportStatus*retaddr *label288 (h:*label288)
  1105 call *label12 *invalid :transportStatus*retval (m:*label288) (h:*label288)
 
  1120 label *label291
  1121 label *label292
  1122 ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor *tmp332 @unit @firstItem
-    * set :supplyBlockFromCore:unitItem *tmp332
+ 1123 sensor :supplyBlockFromCore:unitItem @unit @firstItem
  1124 op notEqual *tmp333 :supplyBlockFromCore:unitItem null
  1125 op notEqual *tmp334 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
  1126 op land *tmp335 *tmp333 *tmp334
 
  1150 op add :unpackCfg:index :unpackCfg:index 1
  1151 read *tmp342 :unpackCfg:cfg *tmp341
  1152 op sub *tmp343 *tmp342 74
-    * lookup block *tmp344 *tmp343
-    * set :unpackCfg:type *tmp344
+ 1153 lookup block :unpackCfg:type *tmp343
  1154 set *tmp345 :unpackCfg:index
  1155 op add :unpackCfg:index :unpackCfg:index 1
  1156 read *tmp346 :unpackCfg:cfg *tmp345
  1157 op sub *tmp347 *tmp346 74
-    * op div *tmp348 *tmp347 2
-    * set :unpackCfg:x *tmp348
+ 1158 op div :unpackCfg:x *tmp347 2
  1159 set *tmp349 :unpackCfg:index
  1160 op add :unpackCfg:index :unpackCfg:index 1
  1161 read *tmp350 :unpackCfg:cfg *tmp349
  1162 op sub *tmp351 *tmp350 74
-    * op div *tmp352 *tmp351 2
-    * set :unpackCfg:y *tmp352
+ 1163 op div :unpackCfg:y *tmp351 2
  1164 set *tmp353 :unpackCfg:index
  1165 op add :unpackCfg:index :unpackCfg:index 1
  1166 read *tmp354 :unpackCfg:cfg *tmp353
-    * op sub *tmp355 *tmp354 74
-    * set :unpackCfg:rotation *tmp355
+ 1167 op sub :unpackCfg:rotation *tmp354 74
  1168 set *tmp356 :unpackCfg:index
  1169 op add :unpackCfg:index :unpackCfg:index 1
  1170 read *tmp357 :unpackCfg:cfg *tmp356
-    * op sub *tmp358 *tmp357 74
-    * set :unpackCfg:ind *tmp358
-    * sensor *tmp359 :unpackCfg:type @copper
-    * set :unpackCfg:cu *tmp359
-    * sensor *tmp360 :unpackCfg:type @lead
-    * set :unpackCfg:pb *tmp360
-    * sensor *tmp361 :unpackCfg:type @graphite
-    * set :unpackCfg:gr *tmp361
-    * sensor *tmp362 :unpackCfg:type @silicon
-    * set :unpackCfg:si *tmp362
-    * sensor *tmp363 :unpackCfg:type @titanium
-    * set :unpackCfg:ti *tmp363
-    * sensor *tmp364 :unpackCfg:type @metaglass
-    * set :unpackCfg:mg *tmp364
-    * sensor *tmp365 :unpackCfg:type @thorium
-    * set :unpackCfg:th *tmp365
+ 1171 op sub :unpackCfg:ind *tmp357 74
+ 1172 sensor :unpackCfg:cu :unpackCfg:type @copper
+ 1173 sensor :unpackCfg:pb :unpackCfg:type @lead
+ 1174 sensor :unpackCfg:gr :unpackCfg:type @graphite
+ 1175 sensor :unpackCfg:si :unpackCfg:type @silicon
+ 1176 sensor :unpackCfg:ti :unpackCfg:type @titanium
+ 1177 sensor :unpackCfg:mg :unpackCfg:type @metaglass
+ 1178 sensor :unpackCfg:th :unpackCfg:type @thorium
  1179 label *label298
  1180 return :unpackCfg*retaddr
  1181 end
 
  1225 write :meetTarget:thorium .display ".targetThorium"
  1226 set .targetCopper :meetTarget:copper
  1227 op add *tmp369 :meetTarget:lead .leadSurplus
-    * op add *tmp370 *tmp369 1
-    * set .targetLead *tmp370
+ 1228 op add .targetLead *tmp369 1
  1229 set .targetGraphite :meetTarget:graphite
  1230 set .targetSilicon :meetTarget:silicon
  1231 set .targetTitanium :meetTarget:titanium
 
  1345 wait 1e-15
  1346 read *tmp410 .blockBuilder ":buildBlockAt*finished"
  1347 jump *label331 equal *tmp410 false
-    * read *tmp411 .blockBuilder ":buildBlockAt*retval"
-    * set :buildBlock*retval *tmp411
+ 1348 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1349 jump *label329 always
  1350 set :buildBlock*retval null
  1351 label *label329
 
  1411 setaddr :moveToBlock*retaddr *label349 (h:*label349)
  1412 call *label18 *invalid :moveToBlock*retval (m:*label349) (h:*label349)
  1413 label *label349
-    * sensor *tmp422 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp422
+ 1414 sensor :depositItems:cap :depositItems:block @itemCapacity
  1415 label *label350
  1416 ucontrol itemDrop :depositItems:block 30
  1417 label *label351
 
  1441 return :depositItems*retaddr
  1442 end
  1443 label *label21
-    * op min *tmp429 :mineOre:amount 30
-    * set :mineOre:amount *tmp429
+ 1444 op min :mineOre:amount :mineOre:amount 30
  1445 set :transportStatus:target :mineOre:amount
  1446 set :transportStatus:item :mineOre:ore
  1447 setaddr :transportStatus*retaddr *label358 (h:*label358)
 
  1471 setaddr :status3*retaddr *label364 (h:*label364)
  1472 call *label11 *invalid :status3*retval (m:*label364) (h:*label364)
  1473 label *label364
-    * op add *tmp433 @second 10
-    * set :mineOre:stop *tmp433
+ 1474 op add :mineOre:stop @second 10
  1475 label *label365
-    * sensor *tmp434 @unit @firstItem
-    * set :mineOre:item *tmp434
+ 1476 sensor :mineOre:item @unit @firstItem
  1477 op notEqual *tmp435 :mineOre:item null
  1478 op notEqual *tmp436 :mineOre:item :mineOre:ore
  1479 op land *tmp437 *tmp435 *tmp436

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   506 call *label41 *invalid :flagUnits*retval (m:*label154) (h:*label154)
   507 label *label154
   508 label *label155
-    * jump *label157 equal true false
   509 op sub :lineUpUnits:y @thisy 6
   510 set :lineUpUnits:unit @mega
   511 setaddr :lineUpUnits*retaddr *label158 (h:*label158)

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-55 instructions):
 
    20 set .builder @unit
    21 ulocate building core false @copper .coreX .coreY *tmp115 .core
    22 label *label45
-    * op equal *tmp116 .core null
-    * jump *label44 notEqual *tmp116 false
+   23 jump *label44 equal .core null
    24 label *label46
    25 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
    26 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
 
    69 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
    70 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
    71 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp136 :buildFirstTitaniumDrill:result false
-    * jump *label56 equal *tmp136 false
+   72 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    73 set :error:error "Cannot locate spot for titanium drill"
    74 setaddr :error*retaddr *label58 (h:*label58)
    75 call *label13 *invalid :error*retval (m:*label58) (h:*label58)
 
   193 call *label33 *invalid :supplyBase*retval (m:*label86) (h:*label86)
   194 label *label86
   195 sensor *tmp151 AJTJK-battery1 @totalPower
-    * op lessThan *tmp152 *tmp151 300
-    * jump *label87 equal *tmp152 false
+  196 jump *label87 greaterThanEq *tmp151 300
   197 jump *label85 always
   198 jump *label88 always
   199 label *label87
   200 label *label88
   201 label *label84
   202 read *tmp82 .controller ".monos"
-    * op lessThan *tmp154 *tmp82 3
-    * jump *label83 notEqual *tmp154 false
+  203 jump *label83 lessThan *tmp82 3
   204 label *label85
   205 set .siliconSurplus 65
   206 set :buildBlockFromCfg.1:cfg "A©NHJX-unloader14"
 
   280 label *label106
   281 label *label107
   282 read *tmp83 .controller ".polys"
-    * op lessThan *tmp170 *tmp83 3
-    * jump *label109 equal *tmp170 false
+  283 jump *label109 greaterThanEq *tmp83 3
   284 setaddr :supplyBase*retaddr *label110 (h:*label110)
   285 call *label33 *invalid :supplyBase*retval (m:*label110) (h:*label110)
   286 label *label110
 
   293 label *label111
   294 label *label112
   295 read *tmp81 .controller ".flares"
-    * op lessThan *tmp171 *tmp81 2
-    * jump *label114 equal *tmp171 false
+  296 jump *label114 greaterThanEq *tmp81 2
   297 setaddr :supplyBase*retaddr *label115 (h:*label115)
   298 call *label33 *invalid :supplyBase*retval (m:*label115) (h:*label115)
   299 label *label115
 
   349 read *tmp191 .oreLocator ":layoutThoriumDrill*finished"
   350 jump *label122 equal *tmp191 false
   351 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp193 :buildThoriumDrill:result false
-    * jump *label123 equal *tmp193 false
+  352 jump *label123 notEqual :buildThoriumDrill:result false
   353 set :error:error "Cannot locate spot for thorium drill"
   354 setaddr :error*retaddr *label125 (h:*label125)
   355 call *label13 *invalid :error*retval (m:*label125) (h:*label125)
 
   423 call *label36 *invalid :buildRemoteBlock*retval (m:*label134) (h:*label134)
   424 label *label134
   425 set .thoriumContainer :buildRemoteBlock*retval
-    * op equal *tmp211 .thoriumContainer null
-    * jump *label135 equal *tmp211 false
+  426 jump *label135 notEqual .thoriumContainer null
   427 set .thoriumContainer .thoriumDrill
   428 jump *label136 always
   429 label *label135
 
   445 label *label138
   446 label *label139
   447 read *tmp83 .controller ".polys"
-    * op lessThan *tmp215 *tmp83 5
-    * jump *label141 equal *tmp215 false
+  448 jump *label141 greaterThanEq *tmp83 5
   449 setaddr :supplyBase*retaddr *label142 (h:*label142)
   450 call *label33 *invalid :supplyBase*retval (m:*label142) (h:*label142)
   451 label *label142
 
   467 label *label145
   468 label *label146
   469 read *tmp84 .controller ".megas"
-    * op lessThan *tmp218 *tmp84 1
-    * jump *label148 equal *tmp218 false
+  470 jump *label148 greaterThanEq *tmp84 1
   471 setaddr :supplyBase*retaddr *label149 (h:*label149)
   472 call *label33 *invalid :supplyBase*retval (m:*label149) (h:*label149)
   473 label *label149
 
   538 call *label9 *invalid :status1*retval (m:*label167) (h:*label167)
   539 label *label167
   540 sensor *tmp232 .thoriumBattery @totalPower
-    * op lessThan *tmp233 *tmp232 2000
-    * jump *label168 equal *tmp233 false
+  541 jump *label168 greaterThanEq *tmp232 2000
   542 sensor *tmp235 .core @coal
-    * op lessThan *tmp236 *tmp235 50
-    * jump *label170 equal *tmp236 false
+  543 jump *label170 greaterThanEq *tmp235 50
   544 set :supplyBlock:block .thoriumGenerator
   545 set :supplyBlock:ore @coal
   546 setaddr :supplyBlock*retaddr *label172 (h:*label172)
 
   566 jump *label165 always
   567 label *label164
   568 read *tmp82 .controller ".monos"
-    * op greaterThan *tmp238 *tmp82 3
-    * jump *label175 equal *tmp238 false
+  569 jump *label175 lessThanEq *tmp82 3
   570 set :status1:text "Phase 1: supplying base"
   571 setaddr :status1*retaddr *label178 (h:*label178)
   572 call *label9 *invalid :status1*retval (m:*label178) (h:*label178)
 
   579 jump *label176 always
   580 label *label175
   581 set :supplyBase0:supplied false
-    * op equal *tmp240 A©JNJQ-unloader7 null
-    * jump *label181 equal *tmp240 false
+  582 jump *label181 notEqual A©JNJQ-unloader7 null
   583 sensor *tmp242 .core @graphite
-    * op lessThan *tmp243 *tmp242 .targetGraphite
-    * jump *label183 equal *tmp243 false
+  584 jump *label183 greaterThanEq *tmp242 .targetGraphite
   585 sensor *tmp245 AJEMJJ-graphite-press0 @coal
-    * op lessThan *tmp246 *tmp245 5
-    * jump *label185 equal *tmp246 false
+  586 jump *label185 greaterThanEq *tmp245 5
   587 set :status1:text "Goal 1: graphite requirement"
   588 setaddr :status1*retaddr *label187 (h:*label187)
   589 call *label9 *invalid :status1*retval (m:*label187) (h:*label187)
 
   601 label *label183
   602 label *label184
   603 sensor *tmp248 .core @silicon
-    * op lessThan *tmp249 *tmp248 .targetSilicon
-    * jump *label189 equal *tmp249 false
+  604 jump *label189 greaterThanEq *tmp248 .targetSilicon
   605 sensor *tmp251 ALMQJN-silicon-smelter4 @coal
-    * op lessThan *tmp252 *tmp251 5
-    * jump *label191 equal *tmp252 false
+  606 jump *label191 greaterThanEq *tmp251 5
   607 set :status1:text "Goal 2: coal for silicon requirement"
   608 setaddr :status1*retaddr *label193 (h:*label193)
   609 call *label9 *invalid :status1*retval (m:*label193) (h:*label193)
 
   617 jump *label192 always
   618 label *label191
   619 sensor *tmp254 ALMQJN-silicon-smelter4 @sand
-    * op lessThan *tmp255 *tmp254 5
-    * jump *label195 equal *tmp255 false
+  620 jump *label195 greaterThanEq *tmp254 5
   621 set :status1:text "Goal 3: sand for silicon requirement"
   622 setaddr :status1*retaddr *label197 (h:*label197)
   623 call *label9 *invalid :status1*retval (m:*label197) (h:*label197)
 
   636 label *label189
   637 label *label190
   638 sensor *tmp257 AJTJK-battery1 @totalPower
-    * op lessThan *tmp258 *tmp257 .powerTarget
-    * jump *label199 equal *tmp258 false
+  639 jump *label199 greaterThanEq *tmp257 .powerTarget
   640 sensor *tmp260 AJRJM-combustion-generator3 @coal
-    * op lessThan *tmp261 *tmp260 2
-    * jump *label201 equal *tmp261 false
+  641 jump *label201 greaterThanEq *tmp260 2
   642 set :status1:text "Goal 4: supplying generator"
   643 setaddr :status1*retaddr *label203 (h:*label203)
   644 call *label9 *invalid :status1*retval (m:*label203) (h:*label203)
 
   659 label *label181
   660 label *label182
   661 sensor *tmp263 .core @titanium
-    * op lessThan *tmp264 *tmp263 .targetTitanium
-    * jump *label205 equal *tmp264 false
+  662 jump *label205 greaterThanEq *tmp263 .targetTitanium
   663 sensor *tmp266 .core @titanium
   664 op sub *tmp267 .targetTitanium *tmp266
   665 op min *tmp265 7 *tmp267
 
   669 label *label206
   670 set :supplyBase0:titaniumTrigger *tmp265
   671 sensor *tmp269 .titaniumDrill @titanium
-    * op lessThan *tmp270 *tmp269 :supplyBase0:titaniumTrigger
-    * jump *label207 equal *tmp270 false
-    * op equal *tmp272 :supplyBase0:supplied false
-    * jump *label209 equal *tmp272 false
+  672 jump *label207 greaterThanEq *tmp269 :supplyBase0:titaniumTrigger
+  673 jump *label209 notEqual :supplyBase0:supplied false
   674 sensor *tmp274 AJTJK-battery1 @totalPower
   675 op mul *tmp275 A©JNJQ-unloader7 .powerTarget
-    * op lessThan *tmp276 *tmp274 *tmp275
-    * jump *label211 equal *tmp276 false
+  676 jump *label211 greaterThanEq *tmp274 *tmp275
   677 set :status1:text "Goal 5: supplying generator"
   678 setaddr :status1*retaddr *label213 (h:*label213)
   679 call *label9 *invalid :status1*retval (m:*label213) (h:*label213)
 
   685 jump *label212 always
   686 label *label211
   687 sensor *tmp278 .core @silicon
-    * op lessThan *tmp279 *tmp278 .targetSilicon
-    * jump *label215 equal *tmp279 false
+  688 jump *label215 greaterThanEq *tmp278 .targetSilicon
   689 set :status1:text "Goal 6: silicon requirement"
   690 setaddr :status1*retaddr *label217 (h:*label217)
   691 call *label9 *invalid :status1*retval (m:*label217) (h:*label217)
   692 label *label217
   693 sensor :supplyBase0:coal .core @coal
   694 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp283 :supplyBase0:coal :supplyBase0:sand
-    * jump *label218 equal *tmp283 false
+  695 jump *label218 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   696 set *tmp284 @coal
   697 jump *label219 always
   698 label *label218
 
   706 jump *label216 always
   707 label *label215
   708 sensor *tmp285 .core @copper
-    * op lessThan *tmp286 *tmp285 .targetCopper
-    * jump *label221 equal *tmp286 false
+  709 jump *label221 greaterThanEq *tmp285 .targetCopper
   710 set :status1:text "Goal 7: copper requirement"
   711 setaddr :status1*retaddr *label223 (h:*label223)
   712 call *label9 *invalid :status1*retval (m:*label223) (h:*label223)
 
   718 jump *label222 always
   719 label *label221
   720 sensor *tmp288 .core @lead
-    * op lessThan *tmp289 *tmp288 .targetLead
-    * jump *label225 equal *tmp289 false
+  721 jump *label225 greaterThanEq *tmp288 .targetLead
   722 set :status1:text "Goal 8: lead requirement"
   723 setaddr :status1*retaddr *label227 (h:*label227)
   724 call *label9 *invalid :status1*retval (m:*label227) (h:*label227)
 
   730 jump *label226 always
   731 label *label225
   732 sensor *tmp291 .core @metaglass
-    * op lessThan *tmp292 *tmp291 .targetMetaglass
-    * jump *label229 equal *tmp292 false
+  733 jump *label229 greaterThanEq *tmp291 .targetMetaglass
   734 set :status1:text "Goal 9: metaglass requirement"
   735 setaddr :status1*retaddr *label231 (h:*label231)
   736 call *label9 *invalid :status1*retval (m:*label231) (h:*label231)
 
   747 label *label233
   748 sensor :supplyBase0:coal.1 .core @coal
   749 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp296 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label234 equal *tmp296 false
+  750 jump *label234 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
   751 set *tmp297 @coal
   752 jump *label235 always
   753 label *label234
 
   786 end
   787 label *label36
   788 op add *tmp298 :buildRemoteBlock:x :buildRemoteBlock:y
-    * op greaterThan *tmp299 *tmp298 0
-    * jump *label240 equal *tmp299 false
+  789 jump *label240 lessThanEq *tmp298 0
   790 set :unpackCfg:cfg :buildRemoteBlock:cfg
   791 setaddr :unpackCfg*retaddr *label242 (h:*label242)
   792 call *label27 *invalid :unpackCfg*retval (m:*label242) (h:*label242)
 
   934 ubind :flagUnits:unit
   935 set :flagUnits:firstUnit @unit
   936 label *label256
-    * op equal *tmp305 :flagUnits:firstUnit null
-    * jump *label255 notEqual *tmp305 false
+  937 jump *label255 equal :flagUnits:firstUnit null
   938 label *label257
   939 set :flagUnits:x @thisx
   940 label *label258
 
   942 op add :flagUnits:x :flagUnits:x 4
   943 ubind :flagUnits:unit
   944 label *label259
-    * op notEqual *tmp306 @unit :flagUnits:firstUnit
-    * jump *label258 notEqual *tmp306 false
+  945 jump *label258 notEqual @unit :flagUnits:firstUnit
   946 label *label260
   947 label *label254
   948 return :flagUnits*retaddr
 
   962 label *label266
   963 ubind :lineUpUnits:unit
   964 label *label263
-    * op notEqual *tmp310 @unit :lineUpUnits:firstUnit
-    * jump *label262 notEqual *tmp310 false
+  965 jump *label262 notEqual @unit :lineUpUnits:firstUnit
   966 label *label264
   967 label *label261
   968 return :lineUpUnits*retaddr
 
  1047 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1048 sensor *tmp326 :supplyBlock:block :supplyBlock:ore
  1049 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
-    * op greaterThan *tmp328 :supplyBlock:missing 0
-    * jump *label284 equal *tmp328 false
+ 1050 jump *label284 lessThanEq :supplyBlock:missing 0
  1051 set :mineOre:ore :supplyBlock:ore
  1052 set :mineOre:amount :supplyBlock:blockCapacity
  1053 set :mineOre:block :supplyBlock:block
 
  1214 write .targetCopper processor8 ".copperTarget"
  1215 label *label310
  1216 sensor *tmp382 .core @copper
-    * op lessThan *tmp383 *tmp382 .targetCopper
-    * jump *label314 equal *tmp383 false
+ 1217 jump *label314 greaterThanEq *tmp382 .targetCopper
  1218 set *tmp381 false
  1219 jump *label313 always
  1220 jump *label315 always
  1221 label *label314
  1222 label *label315
  1223 sensor *tmp385 .core @lead
-    * op lessThan *tmp386 *tmp385 .targetLead
-    * jump *label316 equal *tmp386 false
+ 1224 jump *label316 greaterThanEq *tmp385 .targetLead
  1225 set *tmp381 false
  1226 jump *label313 always
  1227 jump *label317 always
  1228 label *label316
  1229 label *label317
  1230 sensor *tmp388 .core @graphite
-    * op lessThan *tmp389 *tmp388 .targetGraphite
-    * jump *label318 equal *tmp389 false
+ 1231 jump *label318 greaterThanEq *tmp388 .targetGraphite
  1232 set *tmp381 false
  1233 jump *label313 always
  1234 jump *label319 always
  1235 label *label318
  1236 label *label319
  1237 sensor *tmp391 .core @silicon
-    * op lessThan *tmp392 *tmp391 .targetSilicon
-    * jump *label320 equal *tmp392 false
+ 1238 jump *label320 greaterThanEq *tmp391 .targetSilicon
  1239 set *tmp381 false
  1240 jump *label313 always
  1241 jump *label321 always
  1242 label *label320
  1243 label *label321
  1244 sensor *tmp394 .core @titanium
-    * op lessThan *tmp395 *tmp394 .targetTitanium
-    * jump *label322 equal *tmp395 false
+ 1245 jump *label322 greaterThanEq *tmp394 .targetTitanium
  1246 set *tmp381 false
  1247 jump *label313 always
  1248 jump *label323 always
  1249 label *label322
  1250 label *label323
  1251 sensor *tmp397 .core @metaglass
-    * op lessThan *tmp398 *tmp397 .targetMetaglass
-    * jump *label324 equal *tmp398 false
+ 1252 jump *label324 greaterThanEq *tmp397 .targetMetaglass
  1253 set *tmp381 false
  1254 jump *label313 always
  1255 jump *label325 always
  1256 label *label324
  1257 label *label325
  1258 sensor *tmp400 .core @thorium
-    * op lessThan *tmp401 *tmp400 .targetThorium
-    * jump *label326 equal *tmp401 false
+ 1259 jump *label326 greaterThanEq *tmp400 .targetThorium
  1260 set *tmp381 false
  1261 jump *label313 always
  1262 jump *label327 always
 
  1266 jump *label313 always
  1267 set *tmp381 null
  1268 label *label313
-    * op equal *tmp403 *tmp381 false
-    * jump *label312 equal *tmp403 false
+ 1269 jump *label312 notEqual *tmp381 false
  1270 setaddr :supplyBase*retaddr *label328 (h:*label328)
  1271 call *label33 *invalid :supplyBase*retval (m:*label328) (h:*label328)
  1272 label *label328
 
  1326 label *label335
  1327 label *label336
  1328 sensor *tmp412 @unit @firstItem
-    * op notEqual *tmp413 *tmp412 null
-    * jump *label339 equal *tmp413 false
+ 1329 jump *label339 equal *tmp412 null
  1330 ucontrol itemDrop @air 1000
  1331 jump *label340 always
  1332 label *label339
 
  1334 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1335 label *label337
  1336 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
-    * op equal *tmp416 *tmp415 false
-    * jump *label336 notEqual *tmp416 false
+ 1337 jump *label336 equal *tmp415 false
  1338 label *label338
  1339 label *label334
  1340 return :moveToEmpty*retaddr
 
  1342 label *label17
  1343 label *label342
  1344 sensor *tmp417 @unit @firstItem
-    * op notEqual *tmp418 *tmp417 null
-    * jump *label344 equal *tmp418 false
+ 1345 jump *label344 equal *tmp417 null
  1346 ucontrol itemDrop @air 1000
  1347 label *label343
  1348 jump *label342 always
 
  1356 call *label11 *invalid :status3*retval (m:*label346) (h:*label346)
  1357 label *label346
  1358 sensor *tmp419 @unit @firstItem
-    * op equal *tmp420 *tmp419 :depositItems:item
-    * jump *label347 equal *tmp420 false
+ 1359 jump *label347 notEqual *tmp419 :depositItems:item
  1360 set :moveToBlock:block :depositItems:block
  1361 set :moveToBlock:radius 6
  1362 setaddr :moveToBlock*retaddr *label349 (h:*label349)
 
  1369 sensor *tmp423 @unit @firstItem
  1370 op mul *tmp424 *tmp423 :depositItems:cap
  1371 sensor *tmp425 :depositItems:block :depositItems:item
-    * op greaterThan *tmp426 *tmp424 *tmp425
-    * jump *label350 notEqual *tmp426 false
+ 1372 jump *label350 greaterThan *tmp424 *tmp425
  1373 label *label352
  1374 jump *label348 always
  1375 label *label347
  1376 label *label353
  1377 sensor *tmp427 @unit @firstItem
-    * op notEqual *tmp428 *tmp427 null
-    * jump *label355 equal *tmp428 false
+ 1378 jump *label355 equal *tmp427 null
  1379 ucontrol itemDrop @air 1000
  1380 label *label354
  1381 jump *label353 always
 
  1408 call *label16 *invalid :moveToEmpty*retval (m:*label360) (h:*label360)
  1409 label *label360
  1410 sensor *tmp430 @unit @firstItem
-    * op notEqual *tmp431 *tmp430 :mineOre:ore
-    * jump *label361 equal *tmp431 false
+ 1411 jump *label361 equal *tmp430 :mineOre:ore
  1412 setaddr :dropAll*retaddr *label363 (h:*label363)
  1413 call *label17 *invalid :dropAll*retval (m:*label363) (h:*label363)
  1414 label *label363
 
  1431 label *label368
  1432 label *label369
  1433 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp439 @second :mineOre:stop
-    * jump *label370 equal *tmp439 false
+ 1434 jump *label370 lessThanEq @second :mineOre:stop
  1435 jump *label367 always
  1436 jump *label371 always
  1437 label *label370
  1438 label *label371
  1439 label *label366
  1440 sensor *tmp441 @unit @totalItems
-    * op lessThan *tmp442 *tmp441 :mineOre:amount
-    * jump *label365 notEqual *tmp442 false
+ 1441 jump *label365 lessThan *tmp441 :mineOre:amount
  1442 label *label367
  1443 ucontrol unbind
  1444 set :depositItems:block :mineOre:block
 
  1468 end
  1469 label *label20
  1470 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
-    * op equal *tmp447 *tmp445 false
-    * jump *label377 equal *tmp447 false
+ 1471 jump *label377 notEqual *tmp445 false
  1472 set :error:error "Cannot locate ore"
  1473 setaddr :error*retaddr *label379 (h:*label379)
  1474 call *label13 *invalid :error*retval (m:*label379) (h:*label379)
 
  1486 label *label381
  1487 label *label382
  1488 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp449
-    * op equal *tmp450 *tmp449 false
-    * jump *label384 equal *tmp450 false
+ 1489 jump *label384 notEqual *tmp449 false
  1490 op sub *tmp451 :moveTo:radius 0.5
  1491 ucontrol approach :moveTo:x :moveTo:y *tmp451
  1492 label *label383

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-30 instructions):
 
    74 setaddr :error*retaddr *label58 (h:*label58)
    75 call *label13 *invalid :error*retval (m:*label58) (h:*label58)
    76 label *label58
-    * jump *label57 always
    77 label *label56
    78 label *label57
    79 write @pneumatic-drill .display ".nextBlock"
 
   194 sensor *tmp151 AJTJK-battery1 @totalPower
   195 jump *label87 greaterThanEq *tmp151 300
   196 jump *label85 always
-    * jump *label88 always
   197 label *label87
   198 label *label88
   199 label *label84
 
   352 setaddr :error*retaddr *label125 (h:*label125)
   353 call *label13 *invalid :error*retval (m:*label125) (h:*label125)
   354 label *label125
-    * jump *label124 always
   355 label *label123
   356 label *label124
   357 write @laser-drill .blockBuilder ":buildBlockAt:block"
 
   422 set .thoriumContainer :buildRemoteBlock*retval
   423 jump *label135 notEqual .thoriumContainer null
   424 set .thoriumContainer .thoriumDrill
-    * jump *label136 always
   425 label *label135
   426 label *label136
   427 write .thoriumDrill .display ".thoriumDrill"
 
   550 call *label25 *invalid :supplyBlockFromCore*retval (m:*label173) (h:*label173)
   551 label *label173
   552 label *label171
-    * jump *label169 always
   553 label *label168
   554 label *label169
   555 set :fetchBlock:block .thoriumContainer
 
   589 call *label24 *invalid :supplyBlock*retval (m:*label188) (h:*label188)
   590 label *label188
   591 set :supplyBase0:supplied true
-    * jump *label186 always
   592 label *label185
   593 label *label186
-    * jump *label184 always
   594 label *label183
   595 label *label184
   596 sensor *tmp248 .core @silicon
 
   621 call *label24 *invalid :supplyBlock*retval (m:*label198) (h:*label198)
   622 label *label198
   623 set :supplyBase0:supplied true
-    * jump *label196 always
   624 label *label195
   625 label *label196
   626 label *label192
-    * jump *label190 always
   627 label *label189
   628 label *label190
   629 sensor *tmp257 AJTJK-battery1 @totalPower
 
   640 call *label24 *invalid :supplyBlock*retval (m:*label204) (h:*label204)
   641 label *label204
   642 set :supplyBase0:supplied true
-    * jump *label202 always
   643 label *label201
   644 label *label202
-    * jump *label200 always
   645 label *label199
   646 label *label200
-    * jump *label182 always
   647 label *label181
   648 label *label182
   649 sensor *tmp263 .core @titanium
 
   751 label *label222
   752 label *label216
   753 label *label212
-    * jump *label210 always
   754 label *label209
   755 label *label210
   756 jump *label208 always
 
   806 label *label243
   807 set :buildRemoteBlock*retval :buildBlock*retval
   808 jump *label239 always
-    * jump *label241 always
   809 label *label240
   810 label *label241
   811 set :buildRemoteBlock*retval false
 
   943 sensor *tmp308 @unit @mining
   944 jump *label265 equal *tmp308 false
   945 ucontrol stop
-    * jump *label266 always
   946 label *label265
   947 label *label266
   948 ubind :lineUpUnits:unit
 
  1004 op land *tmp319 *tmp317 *tmp318
  1005 jump *label279 equal *tmp319 false
  1006 ucontrol itemDrop @air 1000
-    * jump *label280 always
  1007 label *label279
  1008 label *label280
  1009 label *label277
 
  1038 setaddr :mineOre*retaddr *label286 (h:*label286)
  1039 call *label21 *invalid :mineOre*retval (m:*label286) (h:*label286)
  1040 label *label286
-    * jump *label285 always
  1041 label *label284
  1042 label *label285
  1043 label *label282
 
  1072 op land *tmp335 *tmp333 *tmp334
  1073 jump *label295 equal *tmp335 false
  1074 ucontrol itemDrop @air 1000
-    * jump *label296 always
  1075 label *label295
  1076 label *label296
  1077 label *label293
 
  1199 jump *label314 greaterThanEq *tmp382 .targetCopper
  1200 set *tmp381 false
  1201 jump *label313 always
-    * jump *label315 always
  1202 label *label314
  1203 label *label315
  1204 sensor *tmp385 .core @lead
  1205 jump *label316 greaterThanEq *tmp385 .targetLead
  1206 set *tmp381 false
  1207 jump *label313 always
-    * jump *label317 always
  1208 label *label316
  1209 label *label317
  1210 sensor *tmp388 .core @graphite
  1211 jump *label318 greaterThanEq *tmp388 .targetGraphite
  1212 set *tmp381 false
  1213 jump *label313 always
-    * jump *label319 always
  1214 label *label318
  1215 label *label319
  1216 sensor *tmp391 .core @silicon
  1217 jump *label320 greaterThanEq *tmp391 .targetSilicon
  1218 set *tmp381 false
  1219 jump *label313 always
-    * jump *label321 always
  1220 label *label320
  1221 label *label321
  1222 sensor *tmp394 .core @titanium
  1223 jump *label322 greaterThanEq *tmp394 .targetTitanium
  1224 set *tmp381 false
  1225 jump *label313 always
-    * jump *label323 always
  1226 label *label322
  1227 label *label323
  1228 sensor *tmp397 .core @metaglass
  1229 jump *label324 greaterThanEq *tmp397 .targetMetaglass
  1230 set *tmp381 false
  1231 jump *label313 always
-    * jump *label325 always
  1232 label *label324
  1233 label *label325
  1234 sensor *tmp400 .core @thorium
  1235 jump *label326 greaterThanEq *tmp400 .targetThorium
  1236 set *tmp381 false
  1237 jump *label313 always
-    * jump *label327 always
  1238 label *label326
  1239 label *label327
  1240 set *tmp381 true
 
  1303 sensor *tmp412 @unit @firstItem
  1304 jump *label339 equal *tmp412 null
  1305 ucontrol itemDrop @air 1000
-    * jump *label340 always
  1306 label *label339
  1307 label *label340
  1308 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
  1386 setaddr :dropAll*retaddr *label363 (h:*label363)
  1387 call *label17 *invalid :dropAll*retval (m:*label363) (h:*label363)
  1388 label *label363
-    * jump *label362 always
  1389 label *label361
  1390 label *label362
  1391 set :status3:text "Mining..."
 
  1400 op land *tmp437 *tmp435 *tmp436
  1401 jump *label368 equal *tmp437 false
  1402 jump *label367 always
-    * jump *label369 always
  1403 label *label368
  1404 label *label369
  1405 ucontrol mine :mineOre:x :mineOre:y
  1406 jump *label370 lessThanEq @second :mineOre:stop
  1407 jump *label367 always
-    * jump *label371 always
  1408 label *label370
  1409 label *label371
  1410 label *label366
 
  1444 setaddr :error*retaddr *label379 (h:*label379)
  1445 call *label13 *invalid :error*retval (m:*label379) (h:*label379)
  1446 label *label379
-    * jump *label378 always
  1447 label *label377
  1448 label *label378
  1449 label *label376

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-7 instructions):
 
     6 read *tmp95 processor8 "*signature"
     7 jump *label43 notEqual *tmp95 "0:v1"
     8 set .titaniumDrill null
-    * set .thoriumDrill null
     9 set .thoriumBattery null
    10 set .thoriumContainer null
    11 set .thoriumGenerator null
 
    47 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
    48 label *label52
    49 set :buildFirstTitaniumDrill:cfg "AJJJP-pneumatic-drill6"
-    * set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
+   50 set :meetTarget.1:cfg "AJJJP-pneumatic-drill6"
    51 setaddr :meetTarget.1*retaddr *label54 (h:*label54)
    52 call *label39 *invalid :meetTarget.1*retval (m:*label54) (h:*label54)
    53 label *label54
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 2 .oreLocator ":findDrillLocation:size"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+   54 write @titanium processor1 ".nextBlock"
+   55 write .coreX processor4 ":findDrillLocation:x"
+   56 write .coreY processor4 ":findDrillLocation:y"
+   57 write @unit processor4 ":findDrillLocation:unit"
+   58 write @titanium processor4 ":findDrillLocation:item"
+   59 write @ore-titanium processor4 ":findDrillLocation:ore"
+   60 write 2 processor4 ":findDrillLocation:size"
+   61 write 4 processor4 ":findDrillLocation:limit"
+   62 write false processor4 ":findDrillLocation*finished"
+   63 write 1 processor4 "@counter"
    64 label *label55
    65 wait 1e-15
-    * read *tmp134 .oreLocator ":findDrillLocation*finished"
+   66 read *tmp134 processor4 ":findDrillLocation*finished"
    67 jump *label55 equal *tmp134 false
-    * read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+   68 read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+   69 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+   70 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    71 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    72 set :error:error "Cannot locate spot for titanium drill"
    73 setaddr :error*retaddr *label58 (h:*label58)
 
    75 label *label58
    76 label *label56
    77 label *label57
-    * write @pneumatic-drill .display ".nextBlock"
-    * write :buildFirstTitaniumDrill:dx .blockBuilder ":buildFirstTitaniumDrillAt:x"
-    * write :buildFirstTitaniumDrill:dy .blockBuilder ":buildFirstTitaniumDrillAt:y"
-    * write false .blockBuilder ":buildFirstTitaniumDrillAt*finished"
-    * write 2 .blockBuilder "@counter"
+   78 write @pneumatic-drill processor1 ".nextBlock"
+   79 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
+   80 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
+   81 write false processor5 ":buildFirstTitaniumDrillAt*finished"
+   82 write 2 processor5 "@counter"
    83 label *label59
    84 wait 1e-15
-    * read *tmp140 .blockBuilder ":buildFirstTitaniumDrillAt*finished"
+   85 read *tmp140 processor5 ":buildFirstTitaniumDrillAt*finished"
    86 jump *label59 equal *tmp140 false
-    * read *tmp123 .blockBuilder ":buildFirstTitaniumDrillAt*retval"
+   87 read *tmp123 processor5 ":buildFirstTitaniumDrillAt*retval"
    88 jump *label53 always
-    * set *tmp123 null
    89 label *label53
    90 set .titaniumDrill *tmp123
-    * write .titaniumDrill .display ".titaniumDrill"
+   91 write *tmp123 processor1 ".titaniumDrill"
    92 set :buildBlockFromCfg.1:cfg "A©JNJQ-unloader7"
    93 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
    94 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
 
   108 call *label37 *invalid :buildBlockFromCfg*retval (m:*label63) (h:*label63)
   109 label *label63
   110 set .controller :buildBlockFromCfg*retval
-    * write processor6 .controller ".timer"
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
+  111 write processor6 :buildBlockFromCfg*retval ".timer"
+  112 write processor1 :buildBlockFromCfg*retval ".display"
+  113 write .core :buildBlockFromCfg*retval ".core"
+  114 write bank1 :buildBlockFromCfg*retval ".bank"
   115 set :block "AJEMJJ-graphite-press0"
   116 setaddr *tmp146 *label67
   117 jump *label64 always
 
   152 setaddr *tmp146 *label76
   153 label *label64
   154 read *tmp147 @this :block
-    * write *tmp147 .controller :block
+  155 write *tmp147 :buildBlockFromCfg*retval :block
   156 label *label65
   157 multijump *tmp146 0 0 (m:marker0)
   158 multilabel *label76 (m:marker0)
 
   170 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label79) (h:*label79)
   171 label *label79
   172 set :setFlareTarget:target 1
-    * write :setFlareTarget:target .controller ".flareTarget"
-    * write :setFlareTarget:target .display ".flareTarget"
+  173 write 1 .controller ".flareTarget"
+  174 write 1 processor1 ".flareTarget"
   175 label *label80
   176 set :setMonoTarget:target 3
-    * write :setMonoTarget:target .controller ".monoTarget"
-    * write :setMonoTarget:target .display ".monoTarget"
+  177 write 3 .controller ".monoTarget"
+  178 write 3 processor1 ".monoTarget"
   179 label *label81
   180 write 85 .controller ".pressTarget"
   181 write 150 .controller ".smelterTarget"
   182 write 30 .controller ".kilnTarget"
   183 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  184 set .siliconSurplus 20
   185 setaddr :buildUnits*retaddr *label82 (h:*label82)
   186 call *label40 *invalid :buildUnits*retval (m:*label82) (h:*label82)
   187 label *label82
 
   251 set .siliconSurplus 1000
   252 set .metaglassSurplus 200
   253 set :setPolyTarget:target 5
-    * write :setPolyTarget:target .controller ".polyTarget"
-    * write :setPolyTarget:target .display ".polyTarget"
+  254 write 5 .controller ".polyTarget"
+  255 write 5 processor1 ".polyTarget"
   256 label *label101
   257 set :buildBlockFromCfg.1:cfg "ALSIJf-silicon-smelter28"
   258 setaddr :buildBlockFromCfg.1*retaddr *label102 (h:*label102)
 
   284 jump *label107 always
   285 label *label109
   286 set :setFlareTarget.1:target 3
-    * write :setFlareTarget.1:target .controller ".flareTarget"
-    * write :setFlareTarget.1:target .display ".flareTarget"
+  287 write 3 .controller ".flareTarget"
+  288 write 3 processor1 ".flareTarget"
   289 label *label111
   290 label *label112
   291 read *tmp81 .controller ".flares"
 
   298 label *label114
   299 set .graphiteSurplus 100
   300 set :setMonoTarget.1:target 5
-    * write :setMonoTarget.1:target .controller ".monoTarget"
-    * write :setMonoTarget.1:target .display ".monoTarget"
+  301 write 5 .controller ".monoTarget"
+  302 write 5 processor1 ".monoTarget"
   303 label *label116
-    * write @ore-titanium .display ".nextBlock"
+  304 write @ore-titanium processor1 ".nextBlock"
   305 ubind @flare
-    * read :blocksBuildTitaniumDrills:current .oreLocator ".locations"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 4 .oreLocator ":findDrillLocation:size"
-    * write 1000000000 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  306 read :blocksBuildTitaniumDrills:current processor4 ".locations"
+  307 write .coreX processor4 ":findDrillLocation:x"
+  308 write .coreY processor4 ":findDrillLocation:y"
+  309 write @unit processor4 ":findDrillLocation:unit"
+  310 write @titanium processor4 ":findDrillLocation:item"
+  311 write @ore-titanium processor4 ":findDrillLocation:ore"
+  312 write 4 processor4 ":findDrillLocation:size"
+  313 write 1000000000 processor4 ":findDrillLocation:limit"
+  314 write false processor4 ":findDrillLocation*finished"
+  315 write 1 processor4 "@counter"
   316 ubind .builder
-    * write .controller .blockBuilder ":buildTitaniumDrills:aController"
-    * write :blocksBuildTitaniumDrills:current .blockBuilder ":buildTitaniumDrills:current"
-    * write false .blockBuilder ":buildTitaniumDrills*finished"
-    * write 3 .blockBuilder "@counter"
+  317 write .controller processor5 ":buildTitaniumDrills:aController"
+  318 write :blocksBuildTitaniumDrills:current processor5 ":buildTitaniumDrills:current"
+  319 write false processor5 ":buildTitaniumDrills*finished"
+  320 write 3 processor5 "@counter"
   321 label *label118
   322 wait 1e-15
-    * read *tmp184 .blockBuilder ":buildTitaniumDrills*finished"
+  323 read *tmp184 processor5 ":buildTitaniumDrills*finished"
   324 jump *label118 equal *tmp184 false
-    * write false .oreLocator ":stopLocation*finished"
-    * write 3 .oreLocator "@counter"
+  325 write false processor4 ":stopLocation*finished"
+  326 write 3 processor4 "@counter"
   327 label *label117
-    * write null .display ".nextBlock"
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  328 write null processor1 ".nextBlock"
+  329 write .coreX processor4 ":layoutThoriumDrill:x"
+  330 write .coreY processor4 ":layoutThoriumDrill:y"
+  331 write @unit processor4 ":layoutThoriumDrill:unit"
+  332 write 7 processor4 ":layoutThoriumDrill:limit"
+  333 write false processor4 ":layoutThoriumDrill*finished"
+  334 write 2 processor4 "@counter"
   335 label *label120
   336 wait 1e-15
-    * read *tmp189 .oreLocator ":layoutThoriumDrill*finished"
+  337 read *tmp189 processor4 ":layoutThoriumDrill*finished"
   338 jump *label120 equal *tmp189 false
   339 set :meetTarget.1:cfg "AJJJc-laser-drill25"
   340 setaddr :meetTarget.1*retaddr *label121 (h:*label121)
 
   342 label *label121
   343 label *label122
   344 wait 1e-15
-    * read *tmp191 .oreLocator ":layoutThoriumDrill*finished"
+  345 read *tmp191 processor4 ":layoutThoriumDrill*finished"
   346 jump *label122 equal *tmp191 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  347 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   348 jump *label123 notEqual :buildThoriumDrill:result false
   349 set :error:error "Cannot locate spot for thorium drill"
   350 setaddr :error*retaddr *label125 (h:*label125)
 
   352 label *label125
   353 label *label123
   354 label *label124
-    * write @laser-drill .blockBuilder ":buildBlockAt:block"
-    * read *tmp53 .oreLocator ".drillX"
-    * write *tmp53 .blockBuilder ":buildBlockAt:x"
-    * read *tmp54 .oreLocator ".drillY"
-    * write *tmp54 .blockBuilder ":buildBlockAt:y"
-    * write null .blockBuilder ":buildBlockAt:rotation"
-    * write 0 .blockBuilder ":buildBlockAt:config"
-    * write -1 .blockBuilder ":buildBlockAt:index"
-    * write false .blockBuilder ":buildBlockAt*finished"
-    * write 1 .blockBuilder "@counter"
+  355 write @laser-drill processor5 ":buildBlockAt:block"
+  356 read *tmp53 processor4 ".drillX"
+  357 write *tmp53 processor5 ":buildBlockAt:x"
+  358 read *tmp54 processor4 ".drillY"
+  359 write *tmp54 processor5 ":buildBlockAt:y"
+  360 write null processor5 ":buildBlockAt:rotation"
+  361 write 0 processor5 ":buildBlockAt:config"
+  362 write -1 processor5 ":buildBlockAt:index"
+  363 write false processor5 ":buildBlockAt*finished"
+  364 write 1 processor5 "@counter"
   365 label *label126
   366 wait 1e-15
-    * read *tmp201 .blockBuilder ":buildBlockAt*finished"
+  367 read *tmp201 processor5 ":buildBlockAt*finished"
   368 jump *label126 equal *tmp201 false
-    * read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
+  369 read .thoriumDrill processor5 ":buildBlockAt*retval"
   370 set :buildRemoteBlock:cfg "A¡ASJ[-water-extractor17"
-    * read :buildRemoteBlock:x .oreLocator ".water1X"
-    * read :buildRemoteBlock:y .oreLocator ".water1Y"
+  371 read :buildRemoteBlock:x processor4 ".water1X"
+  372 read :buildRemoteBlock:y processor4 ".water1Y"
   373 setaddr :buildRemoteBlock*retaddr *label127 (h:*label127)
   374 call *label36 *invalid :buildRemoteBlock*retval (m:*label127) (h:*label127)
   375 label *label127
   376 set :buildRemoteBlock:cfg "A¡ASJ[-water-extractor17"
-    * read :buildRemoteBlock:x .oreLocator ".water2X"
-    * read :buildRemoteBlock:y .oreLocator ".water2Y"
+  377 read :buildRemoteBlock:x processor4 ".water2X"
+  378 read :buildRemoteBlock:y processor4 ".water2Y"
   379 setaddr :buildRemoteBlock*retaddr *label128 (h:*label128)
   380 call *label36 *invalid :buildRemoteBlock*retval (m:*label128) (h:*label128)
   381 label *label128
   382 set :buildRemoteBlock:cfg "AAOJ]-steam-generator19"
-    * read :buildRemoteBlock:x .oreLocator ".generatorX"
-    * read :buildRemoteBlock:y .oreLocator ".generatorY"
+  383 read :buildRemoteBlock:x processor4 ".generatorX"
+  384 read :buildRemoteBlock:y processor4 ".generatorY"
   385 setaddr :buildRemoteBlock*retaddr *label129 (h:*label129)
   386 call *label36 *invalid :buildRemoteBlock*retval (m:*label129) (h:*label129)
   387 label *label129
   388 set .thoriumGenerator :buildRemoteBlock*retval
   389 set :buildRemoteBlock:cfg "AFJJU-power-node11"
-    * read :buildRemoteBlock:x .oreLocator ".node1X"
-    * read :buildRemoteBlock:y .oreLocator ".node1Y"
+  390 read :buildRemoteBlock:x processor4 ".node1X"
+  391 read :buildRemoteBlock:y processor4 ".node1Y"
   392 setaddr :buildRemoteBlock*retaddr *label130 (h:*label130)
   393 call *label36 *invalid :buildRemoteBlock*retval (m:*label130) (h:*label130)
   394 label *label130
-    * set :buildRemoteBlock:cfg "AFJJU-power-node11"
-    * read :buildRemoteBlock:x .oreLocator ".node2X"
-    * read :buildRemoteBlock:y .oreLocator ".node2Y"
+  395 read :buildRemoteBlock:x processor4 ".node2X"
+  396 read :buildRemoteBlock:y processor4 ".node2Y"
   397 setaddr :buildRemoteBlock*retaddr *label131 (h:*label131)
   398 call *label36 *invalid :buildRemoteBlock*retval (m:*label131) (h:*label131)
   399 label *label131
   400 set :buildRemoteBlock:cfg "AJJJd-solar-panel26"
-    * read :buildRemoteBlock:x .oreLocator ".panelX"
-    * read :buildRemoteBlock:y .oreLocator ".panelY"
+  401 read :buildRemoteBlock:x processor4 ".panelX"
+  402 read :buildRemoteBlock:y processor4 ".panelY"
   403 setaddr :buildRemoteBlock*retaddr *label132 (h:*label132)
   404 call *label36 *invalid :buildRemoteBlock*retval (m:*label132) (h:*label132)
   405 label *label132
   406 set :buildRemoteBlock:cfg "AJTJK-battery1"
-    * read :buildRemoteBlock:x .oreLocator ".batteryX"
-    * read :buildRemoteBlock:y .oreLocator ".batteryY"
+  407 read :buildRemoteBlock:x processor4 ".batteryX"
+  408 read :buildRemoteBlock:y processor4 ".batteryY"
   409 setaddr :buildRemoteBlock*retaddr *label133 (h:*label133)
   410 call *label36 *invalid :buildRemoteBlock*retval (m:*label133) (h:*label133)
   411 label *label133
   412 set .thoriumBattery :buildRemoteBlock*retval
   413 set :buildRemoteBlock:cfg "A¨JJJe-container27"
-    * read :buildRemoteBlock:x .oreLocator ".containerX"
-    * read :buildRemoteBlock:y .oreLocator ".containerY"
+  414 read :buildRemoteBlock:x processor4 ".containerX"
+  415 read :buildRemoteBlock:y processor4 ".containerY"
   416 setaddr :buildRemoteBlock*retaddr *label134 (h:*label134)
   417 call *label36 *invalid :buildRemoteBlock*retval (m:*label134) (h:*label134)
   418 label *label134
   419 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label135 notEqual .thoriumContainer null
+  420 jump *label135 notEqual :buildRemoteBlock*retval null
   421 set .thoriumContainer .thoriumDrill
   422 label *label135
   423 label *label136
-    * write .thoriumDrill .display ".thoriumDrill"
-    * write .thoriumContainer .display ".thoriumContainer"
-    * write .thoriumContainer .polyController ":setThoriumContainer:container"
-    * write false .polyController ":setThoriumContainer*finished"
-    * write 3 .polyController "@counter"
+  424 write .thoriumDrill processor1 ".thoriumDrill"
+  425 write .thoriumContainer processor1 ".thoriumContainer"
+  426 write .thoriumContainer processor3 ":setThoriumContainer:container"
+  427 write false processor3 ":setThoriumContainer*finished"
+  428 write 3 processor3 "@counter"
   429 label *label137
   430 wait 1e-15
-    * read *tmp214 .polyController ":setThoriumContainer*finished"
+  431 read *tmp214 processor3 ":setThoriumContainer*finished"
   432 jump *label137 equal *tmp214 false
   433 label *label119
-    * write null .display ".nextBlock"
+  434 write null processor1 ".nextBlock"
   435 set :setMegaTarget:target 1
-    * write :setMegaTarget:target .controller ".megaTarget"
-    * write :setMegaTarget:target .display ".megaTarget"
+  436 write 1 .controller ".megaTarget"
+  437 write 1 processor1 ".megaTarget"
   438 label *label138
   439 label *label139
   440 read *tmp83 .controller ".polys"
 
   654 label *label206
   655 set :supplyBase0:titaniumTrigger *tmp265
   656 sensor *tmp269 .titaniumDrill @titanium
-    * jump *label207 greaterThanEq *tmp269 :supplyBase0:titaniumTrigger
+  657 jump *label207 greaterThanEq *tmp269 *tmp265
   658 jump *label209 notEqual :supplyBase0:supplied false
   659 sensor *tmp274 AJTJK-battery1 @totalPower
   660 op mul *tmp275 A©JNJQ-unloader7 .powerTarget
 
   684 set *tmp284 @sand
   685 label *label219
   686 set :supplyBase0:ore *tmp284
-    * set :mineOre.1:ore :supplyBase0:ore
+  687 set :mineOre.1:ore *tmp284
   688 setaddr :mineOre.1*retaddr *label220 (h:*label220)
   689 call *label22 *invalid :mineOre.1*retval (m:*label220) (h:*label220)
   690 label *label220
 
   739 set *tmp297 @sand
   740 label *label235
   741 set :supplyBase0:ore.1 *tmp297
-    * set :mineOre.1:ore :supplyBase0:ore.1
+  742 set :mineOre.1:ore *tmp297
   743 setaddr :mineOre.1*retaddr *label236 (h:*label236)
   744 call *label22 *invalid :mineOre.1*retval (m:*label236) (h:*label236)
   745 label *label236
 
   785 set :buildRemoteBlock:th :unpackCfg:th
   786 set :buildRemoteBlock:rotation :unpackCfg:rotation
   787 set :buildRemoteBlock:index :unpackCfg:ind
-    * set :buildBlock:block :buildRemoteBlock:type
+  788 set :buildBlock:block :unpackCfg:type
   789 set :buildBlock:x :buildRemoteBlock:x
   790 set :buildBlock:y :buildRemoteBlock:y
-    * set :buildBlock:copper :buildRemoteBlock:cu
-    * set :buildBlock:lead :buildRemoteBlock:pb
-    * set :buildBlock:graphite :buildRemoteBlock:gr
-    * set :buildBlock:silicon :buildRemoteBlock:si
-    * set :buildBlock:titanium :buildRemoteBlock:ti
-    * set :buildBlock:metaglass :buildRemoteBlock:mg
-    * set :buildBlock:thorium :buildRemoteBlock:th
-    * set :buildBlock:rotation :buildRemoteBlock:rotation
+  791 set :buildBlock:copper :unpackCfg:cu
+  792 set :buildBlock:lead :unpackCfg:pb
+  793 set :buildBlock:graphite :unpackCfg:gr
+  794 set :buildBlock:silicon :unpackCfg:si
+  795 set :buildBlock:titanium :unpackCfg:ti
+  796 set :buildBlock:metaglass :unpackCfg:mg
+  797 set :buildBlock:thorium :unpackCfg:th
+  798 set :buildBlock:rotation :unpackCfg:rotation
   799 set :buildBlock:config null
-    * set :buildBlock:index :buildRemoteBlock:index
+  800 set :buildBlock:index :unpackCfg:ind
   801 setaddr :buildBlock*retaddr *label243 (h:*label243)
   802 call *label35 *invalid :buildBlock*retval (m:*label243) (h:*label243)
   803 label *label243
 
   807 label *label241
   808 set :buildRemoteBlock*retval false
   809 jump *label239 always
-    * set :buildRemoteBlock*retval null
   810 label *label239
   811 return :buildRemoteBlock*retaddr
   812 end
 
   827 set :buildBlockFromCfg:th :unpackCfg:th
   828 set :buildBlockFromCfg:rotation :unpackCfg:rotation
   829 set :buildBlockFromCfg:index :unpackCfg:ind
-    * op add *tmp301 .coreX :buildBlockFromCfg:x
-    * op add *tmp302 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+  830 op add *tmp301 .coreX :unpackCfg:x
+  831 op add *tmp302 .coreY :unpackCfg:y
+  832 set :buildBlock:block :unpackCfg:type
   833 set :buildBlock:x *tmp301
   834 set :buildBlock:y *tmp302
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:thorium :buildBlockFromCfg:th
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+  835 set :buildBlock:copper :unpackCfg:cu
+  836 set :buildBlock:lead :unpackCfg:pb
+  837 set :buildBlock:graphite :unpackCfg:gr
+  838 set :buildBlock:silicon :unpackCfg:si
+  839 set :buildBlock:titanium :unpackCfg:ti
+  840 set :buildBlock:metaglass :unpackCfg:mg
+  841 set :buildBlock:thorium :unpackCfg:th
+  842 set :buildBlock:rotation :unpackCfg:rotation
   843 set :buildBlock:config :buildBlockFromCfg:config
-    * set :buildBlock:index :buildBlockFromCfg:index
+  844 set :buildBlock:index :unpackCfg:ind
   845 setaddr :buildBlock*retaddr *label246 (h:*label246)
   846 call *label35 *invalid :buildBlock*retval (m:*label246) (h:*label246)
   847 label *label246
   848 set :buildBlockFromCfg:building :buildBlock*retval
-    * write :buildBlockFromCfg:building @this :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building .display :buildBlockFromCfg:cfg
-    * write :buildBlockFromCfg:building .controller :buildBlockFromCfg:cfg
-    * set :buildBlockFromCfg*retval :buildBlockFromCfg:building
+  849 write :buildBlock*retval @this :buildBlockFromCfg:cfg
+  850 write :buildBlock*retval .display :buildBlockFromCfg:cfg
+  851 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
+  852 set :buildBlockFromCfg*retval :buildBlock*retval
   853 jump *label244 always
-    * set :buildBlockFromCfg*retval null
   854 label *label244
   855 return :buildBlockFromCfg*retaddr
   856 end
 
   876 set :meetTarget.1:ti :unpackCfg:ti
   877 set :meetTarget.1:mg :unpackCfg:mg
   878 set :meetTarget.1:th :unpackCfg:th
-    * set :meetTarget:block :meetTarget.1:type
-    * set :meetTarget:copper :meetTarget.1:cu
-    * set :meetTarget:lead :meetTarget.1:pb
-    * set :meetTarget:graphite :meetTarget.1:gr
-    * set :meetTarget:silicon :meetTarget.1:si
-    * set :meetTarget:titanium :meetTarget.1:ti
-    * set :meetTarget:metaglass :meetTarget.1:mg
-    * set :meetTarget:thorium :meetTarget.1:th
+  879 set :meetTarget:block :unpackCfg:type
+  880 set :meetTarget:copper :unpackCfg:cu
+  881 set :meetTarget:lead :unpackCfg:pb
+  882 set :meetTarget:graphite :unpackCfg:gr
+  883 set :meetTarget:silicon :unpackCfg:si
+  884 set :meetTarget:titanium :unpackCfg:ti
+  885 set :meetTarget:metaglass :unpackCfg:mg
+  886 set :meetTarget:thorium :unpackCfg:th
   887 setaddr :meetTarget*retaddr *label251 (h:*label251)
   888 call *label34 *invalid :meetTarget*retval (m:*label251) (h:*label251)
   889 label *label251
 
  1086 end
  1087 label *label27
  1088 set :unpackCfg:index 1
-    * set *tmp341 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1089 set *tmp341 1
+ 1090 op add :unpackCfg:index 1 1
  1091 read *tmp342 :unpackCfg:cfg *tmp341
  1092 op sub *tmp343 *tmp342 74
  1093 lookup block :unpackCfg:type *tmp343
-    * set *tmp345 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1094 set *tmp345 2
+ 1095 op add :unpackCfg:index 2 1
  1096 read *tmp346 :unpackCfg:cfg *tmp345
  1097 op sub *tmp347 *tmp346 74
  1098 op div :unpackCfg:x *tmp347 2
-    * set *tmp349 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1099 set *tmp349 3
+ 1100 op add :unpackCfg:index 3 1
  1101 read *tmp350 :unpackCfg:cfg *tmp349
  1102 op sub *tmp351 *tmp350 74
  1103 op div :unpackCfg:y *tmp351 2
-    * set *tmp353 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1104 set *tmp353 4
+ 1105 op add :unpackCfg:index 4 1
  1106 read *tmp354 :unpackCfg:cfg *tmp353
  1107 op sub :unpackCfg:rotation *tmp354 74
-    * set *tmp356 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+ 1108 set *tmp356 5
+ 1109 op add :unpackCfg:index 5 1
  1110 read *tmp357 :unpackCfg:cfg *tmp356
  1111 op sub :unpackCfg:ind *tmp357 74
  1112 sensor :unpackCfg:cu :unpackCfg:type @copper
 
  1178 op add *tmp373 :meetTarget:metaglass .metaglassSurplus
  1179 write *tmp373 .controller ".kilnTarget"
  1180 op add *tmp374 :meetTarget:lead .leadSurplus
-    * write *tmp374 .controller ".leadReserve"
+ 1181 write *tmp369 .controller ".leadReserve"
  1182 op sign *tmp375 :meetTarget:silicon
  1183 op mul *tmp376 *tmp375 20
  1184 op add *tmp377 :meetTarget:silicon *tmp376
 
  1188 op add *tmp380 :meetTarget:graphite *tmp379
  1189 write *tmp380 .controller ".graphiteReserve"
  1190 write .targetLead processor8 ".leadTarget"
-    * write .targetCopper processor8 ".copperTarget"
+ 1191 write :meetTarget:copper processor8 ".copperTarget"
  1192 label *label310
  1193 sensor *tmp382 .core @copper
  1194 jump *label314 greaterThanEq *tmp382 .targetCopper
 
  1234 label *label327
  1235 set *tmp381 true
  1236 jump *label313 always
-    * set *tmp381 null
  1237 label *label313
  1238 jump *label312 notEqual *tmp381 false
  1239 setaddr :supplyBase*retaddr *label328 (h:*label328)
 
  1271 jump *label331 equal *tmp410 false
  1272 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1273 jump *label329 always
-    * set :buildBlock*retval null
  1274 label *label329
  1275 return :buildBlock*retaddr
  1276 end
 
  1369 label *label359
  1370 set :mineOre:x :locateOre:x
  1371 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1372 set :moveToEmpty:x :locateOre:x
+ 1373 set :moveToEmpty:y :locateOre:y
  1374 setaddr :moveToEmpty*retaddr *label360 (h:*label360)
  1375 call *label16 *invalid :moveToEmpty*retval (m:*label360) (h:*label360)
  1376 label *label360

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-51 instructions):
     0 set .ERROR ""
     1 set .display processor1
-    * set .polyController processor3
     2 set .blockBuilder processor5
-    * set .oreLocator processor4
     3 label *label43
     4 read *tmp95 processor8 "*signature"
     5 jump *label43 notEqual *tmp95 "0:v1"
 
    44 setaddr :buildBlockFromCfg.1*retaddr *label52 (h:*label52)
    45 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label52) (h:*label52)
    46 label *label52
-    * set :buildFirstTitaniumDrill:cfg "AJJJP-pneumatic-drill6"
    47 set :meetTarget.1:cfg "AJJJP-pneumatic-drill6"
    48 setaddr :meetTarget.1*retaddr *label54 (h:*label54)
    49 call *label39 *invalid :meetTarget.1*retval (m:*label54) (h:*label54)
 
   166 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
   167 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label79) (h:*label79)
   168 label *label79
-    * set :setFlareTarget:target 1
   169 write 1 .controller ".flareTarget"
   170 write 1 processor1 ".flareTarget"
   171 label *label80
-    * set :setMonoTarget:target 3
   172 write 3 .controller ".monoTarget"
   173 write 3 processor1 ".monoTarget"
   174 label *label81
 
   245 label *label100
   246 set .siliconSurplus 1000
   247 set .metaglassSurplus 200
-    * set :setPolyTarget:target 5
   248 write 5 .controller ".polyTarget"
   249 write 5 processor1 ".polyTarget"
   250 label *label101
 
   277 label *label108
   278 jump *label107 always
   279 label *label109
-    * set :setFlareTarget.1:target 3
   280 write 3 .controller ".flareTarget"
   281 write 3 processor1 ".flareTarget"
   282 label *label111
 
   290 jump *label112 always
   291 label *label114
   292 set .graphiteSurplus 100
-    * set :setMonoTarget.1:target 5
   293 write 5 .controller ".monoTarget"
   294 write 5 processor1 ".monoTarget"
   295 label *label116
 
   365 setaddr :buildRemoteBlock*retaddr *label127 (h:*label127)
   366 call *label36 *invalid :buildRemoteBlock*retval (m:*label127) (h:*label127)
   367 label *label127
-    * set :buildRemoteBlock:cfg "A¡ASJ[-water-extractor17"
   368 read :buildRemoteBlock:x processor4 ".water2X"
   369 read :buildRemoteBlock:y processor4 ".water2Y"
   370 setaddr :buildRemoteBlock*retaddr *label128 (h:*label128)
 
   423 jump *label137 equal *tmp214 false
   424 label *label119
   425 write null processor1 ".nextBlock"
-    * set :setMegaTarget:target 1
   426 write 1 .controller ".megaTarget"
   427 write 1 processor1 ".megaTarget"
   428 label *label138
 
   642 label *label205
   643 set *tmp265 100
   644 label *label206
-    * set :supplyBase0:titaniumTrigger *tmp265
   645 sensor *tmp269 .titaniumDrill @titanium
   646 jump *label207 greaterThanEq *tmp269 *tmp265
   647 jump *label209 notEqual :supplyBase0:supplied false
 
   672 label *label218
   673 set *tmp284 @sand
   674 label *label219
-    * set :supplyBase0:ore *tmp284
   675 set :mineOre.1:ore *tmp284
   676 setaddr :mineOre.1*retaddr *label220 (h:*label220)
   677 call *label22 *invalid :mineOre.1*retval (m:*label220) (h:*label220)
 
   726 label *label234
   727 set *tmp297 @sand
   728 label *label235
-    * set :supplyBase0:ore.1 *tmp297
   729 set :mineOre.1:ore *tmp297
   730 setaddr :mineOre.1*retaddr *label236 (h:*label236)
   731 call *label22 *invalid :mineOre.1*retval (m:*label236) (h:*label236)
 
   762 setaddr :unpackCfg*retaddr *label242 (h:*label242)
   763 call *label27 *invalid :unpackCfg*retval (m:*label242) (h:*label242)
   764 label *label242
-    * set :buildRemoteBlock:type :unpackCfg:type
-    * set :buildRemoteBlock:cu :unpackCfg:cu
-    * set :buildRemoteBlock:pb :unpackCfg:pb
-    * set :buildRemoteBlock:gr :unpackCfg:gr
-    * set :buildRemoteBlock:si :unpackCfg:si
-    * set :buildRemoteBlock:ti :unpackCfg:ti
-    * set :buildRemoteBlock:mg :unpackCfg:mg
-    * set :buildRemoteBlock:th :unpackCfg:th
-    * set :buildRemoteBlock:rotation :unpackCfg:rotation
-    * set :buildRemoteBlock:index :unpackCfg:ind
   765 set :buildBlock:block :unpackCfg:type
   766 set :buildBlock:x :buildRemoteBlock:x
   767 set :buildBlock:y :buildRemoteBlock:y
 
   792 setaddr :unpackCfg*retaddr *label245 (h:*label245)
   793 call *label27 *invalid :unpackCfg*retval (m:*label245) (h:*label245)
   794 label *label245
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:th :unpackCfg:th
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * set :buildBlockFromCfg:index :unpackCfg:ind
   795 op add *tmp301 .coreX :unpackCfg:x
   796 op add *tmp302 .coreY :unpackCfg:y
   797 set :buildBlock:block :unpackCfg:type
 
   810 setaddr :buildBlock*retaddr *label246 (h:*label246)
   811 call *label35 *invalid :buildBlock*retval (m:*label246) (h:*label246)
   812 label *label246
-    * set :buildBlockFromCfg:building :buildBlock*retval
   813 write :buildBlock*retval @this :buildBlockFromCfg:cfg
   814 write :buildBlock*retval .display :buildBlockFromCfg:cfg
   815 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
 
   832 setaddr :unpackCfg*retaddr *label250 (h:*label250)
   833 call *label27 *invalid :unpackCfg*retval (m:*label250) (h:*label250)
   834 label *label250
-    * set :meetTarget.1:type :unpackCfg:type
-    * set :meetTarget.1:cu :unpackCfg:cu
-    * set :meetTarget.1:pb :unpackCfg:pb
-    * set :meetTarget.1:gr :unpackCfg:gr
-    * set :meetTarget.1:si :unpackCfg:si
-    * set :meetTarget.1:ti :unpackCfg:ti
-    * set :meetTarget.1:mg :unpackCfg:mg
-    * set :meetTarget.1:th :unpackCfg:th
   835 set :meetTarget:block :unpackCfg:type
   836 set :meetTarget:copper :unpackCfg:cu
   837 set :meetTarget:lead :unpackCfg:pb
 
  1041 return :supplyBlockFromCore*retaddr
  1042 end
  1043 label *label27
-    * set :unpackCfg:index 1
  1044 set *tmp341 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp342 :unpackCfg:cfg *tmp341
+ 1045 read *tmp342 :unpackCfg:cfg 1
  1046 op sub *tmp343 *tmp342 74
  1047 lookup block :unpackCfg:type *tmp343
  1048 set *tmp345 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp346 :unpackCfg:cfg *tmp345
+ 1049 read *tmp346 :unpackCfg:cfg 2
  1050 op sub *tmp347 *tmp346 74
  1051 op div :unpackCfg:x *tmp347 2
  1052 set *tmp349 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp350 :unpackCfg:cfg *tmp349
+ 1053 read *tmp350 :unpackCfg:cfg 3
  1054 op sub *tmp351 *tmp350 74
  1055 op div :unpackCfg:y *tmp351 2
  1056 set *tmp353 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp354 :unpackCfg:cfg *tmp353
+ 1057 read *tmp354 :unpackCfg:cfg 4
  1058 op sub :unpackCfg:rotation *tmp354 74
  1059 set *tmp356 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp357 :unpackCfg:cfg *tmp356
+ 1060 read *tmp357 :unpackCfg:cfg 5
  1061 op sub :unpackCfg:ind *tmp357 74
  1062 sensor :unpackCfg:cu :unpackCfg:type @copper
  1063 sensor :unpackCfg:pb :unpackCfg:type @lead
 
  1127 write *tmp372 .controller ".smelterTarget"
  1128 op add *tmp373 :meetTarget:metaglass .metaglassSurplus
  1129 write *tmp373 .controller ".kilnTarget"
-    * op add *tmp374 :meetTarget:lead .leadSurplus
  1130 write *tmp369 .controller ".leadReserve"
  1131 op sign *tmp375 :meetTarget:silicon
  1132 op mul *tmp376 *tmp375 20

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-5 instructions):
 
  1041 return :supplyBlockFromCore*retaddr
  1042 end
  1043 label *label27
-    * set *tmp341 1
  1044 read *tmp342 :unpackCfg:cfg 1
  1045 op sub *tmp343 *tmp342 74
  1046 lookup block :unpackCfg:type *tmp343
-    * set *tmp345 2
  1047 read *tmp346 :unpackCfg:cfg 2
  1048 op sub *tmp347 *tmp346 74
  1049 op div :unpackCfg:x *tmp347 2
-    * set *tmp349 3
  1050 read *tmp350 :unpackCfg:cfg 3
  1051 op sub *tmp351 *tmp350 74
  1052 op div :unpackCfg:y *tmp351 2
-    * set *tmp353 4
  1053 read *tmp354 :unpackCfg:cfg 4
  1054 op sub :unpackCfg:rotation *tmp354 74
-    * set *tmp356 5
  1055 read *tmp357 :unpackCfg:cfg 5
  1056 op sub :unpackCfg:ind *tmp357 74
  1057 sensor :unpackCfg:cu :unpackCfg:type @copper

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
  1391 setaddr :status3*retaddr *label381 (h:*label381)
  1392 call *label11 *invalid :status3*retval (m:*label381) (h:*label381)
  1393 label *label381
+ 1394 op sub *tmp451 :moveTo:radius 0.5
  1395 label *label382
  1396 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp449
  1397 jump *label384 notEqual *tmp449 false
-    * op sub *tmp451 :moveTo:radius 0.5
  1398 ucontrol approach :moveTo:x :moveTo:y *tmp451
  1399 label *label383
  1400 jump *label382 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-7 instructions):
 
   408 call *label36 *invalid :buildRemoteBlock*retval (m:*label134) (h:*label134)
   409 label *label134
   410 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label135 notEqual :buildRemoteBlock*retval null
-    * set .thoriumContainer .thoriumDrill
-    * label *label135
-    * label *label136
+  411 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill .thoriumContainer
   412 write .thoriumDrill processor1 ".thoriumDrill"
   413 write .thoriumContainer processor1 ".thoriumContainer"
   414 write .thoriumContainer processor3 ":setThoriumContainer:container"
 
   663 label *label217
   664 sensor :supplyBase0:coal .core @coal
   665 sensor :supplyBase0:sand .core @sand
-    * jump *label218 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp284 @coal
-    * jump *label219 always
-    * label *label218
-    * set *tmp284 @sand
-    * label *label219
+  666 select *tmp284 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
   667 set :mineOre.1:ore *tmp284
   668 setaddr :mineOre.1*retaddr *label220 (h:*label220)
   669 call *label22 *invalid :mineOre.1*retval (m:*label220) (h:*label220)
 
   712 label *label233
   713 sensor :supplyBase0:coal.1 .core @coal
   714 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label234 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp297 @coal
-    * jump *label235 always
-    * label *label234
-    * set *tmp297 @sand
-    * label *label235
+  715 select *tmp297 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   716 set :mineOre.1:ore *tmp297
   717 setaddr :mineOre.1*retaddr *label236 (h:*label236)
   718 call *label22 *invalid :mineOre.1*retval (m:*label236) (h:*label236)

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 2:
 
   630 label *label200
   631 label *label181
   632 label *label182
+  633 set *tmp265 100
   634 sensor *tmp263 .core @titanium
-    * jump *label205 greaterThanEq *tmp263 .targetTitanium
+  635 jump *label206 greaterThanEq *tmp263 .targetTitanium
   636 sensor *tmp266 .core @titanium
   637 op sub *tmp267 .targetTitanium *tmp266
   638 op min *tmp265 7 *tmp267
   639 jump *label206 always
-    * label *label205
-    * set *tmp265 100
   640 label *label206
   641 sensor *tmp269 .titaniumDrill @titanium
   642 jump *label207 greaterThanEq *tmp269 *tmp265

Modifications by Unroll iteration loop at CoreBuilder.mnd:344:5 (-2 instructions):
 
   109 write processor1 :buildBlockFromCfg*retval ".display"
   110 write .core :buildBlockFromCfg*retval ".core"
   111 write bank1 :buildBlockFromCfg*retval ".bank"
-    * set :block "AJEMJJ-graphite-press0"
-    * setaddr *tmp146 *label67
-    * jump *label64 always
-    * multilabel *label67 (m:marker0)
-    * set :block "AJTJK-battery1"
-    * setaddr *tmp146 *label68
-    * jump *label64 always
-    * multilabel *label68 (m:marker0)
-    * set :block "ALTJL-battery2"
-    * setaddr *tmp146 *label69
-    * jump *label64 always
-    * multilabel *label69 (m:marker0)
-    * set :block "AJRJM-combustion-generator3"
-    * setaddr *tmp146 *label70
-    * jump *label64 always
-    * multilabel *label70 (m:marker0)
-    * set :block "ALMQJN-silicon-smelter4"
-    * setaddr *tmp146 *label71
-    * jump *label64 always
-    * multilabel *label71 (m:marker0)
-    * set :block "A{LNJO-inverted-sorter5"
-    * setaddr *tmp146 *label72
-    * jump *label64 always
-    * multilabel *label72 (m:marker0)
-    * set :block "AJJJP-pneumatic-drill6"
-    * setaddr *tmp146 *label73
-    * jump *label64 always
-    * multilabel *label73 (m:marker0)
-    * set :block "A©JNJQ-unloader7"
-    * setaddr *tmp146 *label74
-    * jump *label64 always
-    * multilabel *label74 (m:marker0)
-    * set :block "A{HNJR-inverted-sorter8"
-    * setaddr *tmp146 *label75
-    * jump *label64 always
-    * multilabel *label75 (m:marker0)
-    * set :block "A~JPJS-overflow-gate9"
-    * setaddr *tmp146 *label76
-    * label *label64
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
-    * label *label65
-    * multijump *tmp146 0 0 (m:marker0)
-    * multilabel *label76 (m:marker0)
-    * label *label66
+  112 set :block "AJEMJJ-graphite-press0"
+  113 label *label387
+  114 read *tmp147 @this :block
+  115 write *tmp147 :buildBlockFromCfg*retval :block
+  116 label *label388
+  117 set :block "AJTJK-battery1"
+  118 label *label391
+  119 read *tmp147 @this :block
+  120 write *tmp147 :buildBlockFromCfg*retval :block
+  121 label *label392
+  122 set :block "ALTJL-battery2"
+  123 label *label395
+  124 read *tmp147 @this :block
+  125 write *tmp147 :buildBlockFromCfg*retval :block
+  126 label *label396
+  127 set :block "AJRJM-combustion-generator3"
+  128 label *label399
+  129 read *tmp147 @this :block
+  130 write *tmp147 :buildBlockFromCfg*retval :block
+  131 label *label400
+  132 set :block "ALMQJN-silicon-smelter4"
+  133 label *label403
+  134 read *tmp147 @this :block
+  135 write *tmp147 :buildBlockFromCfg*retval :block
+  136 label *label404
+  137 set :block "A{LNJO-inverted-sorter5"
+  138 label *label407
+  139 read *tmp147 @this :block
+  140 write *tmp147 :buildBlockFromCfg*retval :block
+  141 label *label408
+  142 set :block "AJJJP-pneumatic-drill6"
+  143 label *label411
+  144 read *tmp147 @this :block
+  145 write *tmp147 :buildBlockFromCfg*retval :block
+  146 label *label412
+  147 set :block "A©JNJQ-unloader7"
+  148 label *label415
+  149 read *tmp147 @this :block
+  150 write *tmp147 :buildBlockFromCfg*retval :block
+  151 label *label416
+  152 set :block "A{HNJR-inverted-sorter8"
+  153 label *label419
+  154 read *tmp147 @this :block
+  155 write *tmp147 :buildBlockFromCfg*retval :block
+  156 label *label420
+  157 set :block "A~JPJS-overflow-gate9"
+  158 label *label423
+  159 read *tmp147 @this :block
+  160 write *tmp147 :buildBlockFromCfg*retval :block
+  161 label *label424
+  162 label *label66
   163 set :buildBlockFromCfg.1:cfg "AFJJU-power-node11"
   164 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   165 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   111 write bank1 :buildBlockFromCfg*retval ".bank"
   112 set :block "AJEMJJ-graphite-press0"
   113 label *label387
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  114 read *tmp147 @this "AJEMJJ-graphite-press0"
+  115 write *tmp147 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
   116 label *label388
   117 set :block "AJTJK-battery1"
   118 label *label391
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  119 read *tmp147 @this "AJTJK-battery1"
+  120 write *tmp147 :buildBlockFromCfg*retval "AJTJK-battery1"
   121 label *label392
   122 set :block "ALTJL-battery2"
   123 label *label395
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  124 read *tmp147 @this "ALTJL-battery2"
+  125 write *tmp147 :buildBlockFromCfg*retval "ALTJL-battery2"
   126 label *label396
   127 set :block "AJRJM-combustion-generator3"
   128 label *label399
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  129 read *tmp147 @this "AJRJM-combustion-generator3"
+  130 write *tmp147 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
   131 label *label400
   132 set :block "ALMQJN-silicon-smelter4"
   133 label *label403
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  134 read *tmp147 @this "ALMQJN-silicon-smelter4"
+  135 write *tmp147 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
   136 label *label404
   137 set :block "A{LNJO-inverted-sorter5"
   138 label *label407
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  139 read *tmp147 @this "A{LNJO-inverted-sorter5"
+  140 write *tmp147 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
   141 label *label408
   142 set :block "AJJJP-pneumatic-drill6"
   143 label *label411
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  144 read *tmp147 @this "AJJJP-pneumatic-drill6"
+  145 write *tmp147 :buildBlockFromCfg*retval "AJJJP-pneumatic-drill6"
   146 label *label412
   147 set :block "A©JNJQ-unloader7"
   148 label *label415
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  149 read *tmp147 @this "A©JNJQ-unloader7"
+  150 write *tmp147 :buildBlockFromCfg*retval "A©JNJQ-unloader7"
   151 label *label416
   152 set :block "A{HNJR-inverted-sorter8"
   153 label *label419
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  154 read *tmp147 @this "A{HNJR-inverted-sorter8"
+  155 write *tmp147 :buildBlockFromCfg*retval "A{HNJR-inverted-sorter8"
   156 label *label420
   157 set :block "A~JPJS-overflow-gate9"
   158 label *label423
-    * read *tmp147 @this :block
-    * write *tmp147 :buildBlockFromCfg*retval :block
+  159 read *tmp147 @this "A~JPJS-overflow-gate9"
+  160 write *tmp147 :buildBlockFromCfg*retval "A~JPJS-overflow-gate9"
   161 label *label424
   162 label *label66
   163 set :buildBlockFromCfg.1:cfg "AFJJU-power-node11"
 
   414 call *label36 *invalid :buildRemoteBlock*retval (m:*label134) (h:*label134)
   415 label *label134
   416 set .thoriumContainer :buildRemoteBlock*retval
-    * select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill .thoriumContainer
+  417 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
   418 write .thoriumDrill processor1 ".thoriumDrill"
   419 write .thoriumContainer processor1 ".thoriumContainer"
   420 write .thoriumContainer processor3 ":setThoriumContainer:container"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-11 instructions):
 
   109 write processor1 :buildBlockFromCfg*retval ".display"
   110 write .core :buildBlockFromCfg*retval ".core"
   111 write bank1 :buildBlockFromCfg*retval ".bank"
-    * set :block "AJEMJJ-graphite-press0"
   112 label *label387
   113 read *tmp147 @this "AJEMJJ-graphite-press0"
   114 write *tmp147 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
   115 label *label388
-    * set :block "AJTJK-battery1"
   116 label *label391
   117 read *tmp147 @this "AJTJK-battery1"
   118 write *tmp147 :buildBlockFromCfg*retval "AJTJK-battery1"
   119 label *label392
-    * set :block "ALTJL-battery2"
   120 label *label395
   121 read *tmp147 @this "ALTJL-battery2"
   122 write *tmp147 :buildBlockFromCfg*retval "ALTJL-battery2"
   123 label *label396
-    * set :block "AJRJM-combustion-generator3"
   124 label *label399
   125 read *tmp147 @this "AJRJM-combustion-generator3"
   126 write *tmp147 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
   127 label *label400
-    * set :block "ALMQJN-silicon-smelter4"
   128 label *label403
   129 read *tmp147 @this "ALMQJN-silicon-smelter4"
   130 write *tmp147 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
   131 label *label404
-    * set :block "A{LNJO-inverted-sorter5"
   132 label *label407
   133 read *tmp147 @this "A{LNJO-inverted-sorter5"
   134 write *tmp147 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
   135 label *label408
-    * set :block "AJJJP-pneumatic-drill6"
   136 label *label411
   137 read *tmp147 @this "AJJJP-pneumatic-drill6"
   138 write *tmp147 :buildBlockFromCfg*retval "AJJJP-pneumatic-drill6"
   139 label *label412
-    * set :block "A©JNJQ-unloader7"
   140 label *label415
   141 read *tmp147 @this "A©JNJQ-unloader7"
   142 write *tmp147 :buildBlockFromCfg*retval "A©JNJQ-unloader7"
   143 label *label416
-    * set :block "A{HNJR-inverted-sorter8"
   144 label *label419
   145 read *tmp147 @this "A{HNJR-inverted-sorter8"
   146 write *tmp147 :buildBlockFromCfg*retval "A{HNJR-inverted-sorter8"
   147 label *label420
-    * set :block "A~JPJS-overflow-gate9"
   148 label *label423
   149 read *tmp147 @this "A~JPJS-overflow-gate9"
   150 write *tmp147 :buildBlockFromCfg*retval "A~JPJS-overflow-gate9"
 
   403 setaddr :buildRemoteBlock*retaddr *label134 (h:*label134)
   404 call *label36 *invalid :buildRemoteBlock*retval (m:*label134) (h:*label134)
   405 label *label134
-    * set .thoriumContainer :buildRemoteBlock*retval
   406 select .thoriumContainer equal :buildRemoteBlock*retval null .thoriumDrill :buildRemoteBlock*retval
   407 write .thoriumDrill processor1 ".thoriumDrill"
   408 write .thoriumContainer processor1 ".thoriumContainer"

Modifications by Unroll iteration loop at CoreBuilder.mnd:176:5 (-2 instructions):
 
  1047 end
  1048 label *label34
  1049 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp367 *label303
-    * jump *label300 always
-    * multilabel *label303 (m:marker1)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp367 *label304
-    * jump *label300 always
-    * multilabel *label304 (m:marker1)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp367 *label305
-    * jump *label300 always
-    * multilabel *label305 (m:marker1)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp367 *label306
-    * jump *label300 always
-    * multilabel *label306 (m:marker1)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp367 *label307
-    * jump *label300 always
-    * multilabel *label307 (m:marker1)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp367 *label308
-    * jump *label300 always
-    * multilabel *label308 (m:marker1)
-    * set :meetTarget:t :meetTarget:thorium
-    * setaddr *tmp367 *label309
-    * label *label300
-    * op sign *tmp368 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label301
-    * multijump *tmp367 0 0 (m:marker1)
-    * multilabel *label309 (m:marker1)
-    * label *label302
+ 1050 set :meetTarget:t :meetTarget:copper
+ 1051 label *label428
+ 1052 op sign *tmp368 :meetTarget:t
+ 1053 op add :meetTarget:count :meetTarget:count *tmp368
+ 1054 label *label429
+ 1055 set :meetTarget:t :meetTarget:lead
+ 1056 label *label432
+ 1057 op sign *tmp368 :meetTarget:t
+ 1058 op add :meetTarget:count :meetTarget:count *tmp368
+ 1059 label *label433
+ 1060 set :meetTarget:t :meetTarget:graphite
+ 1061 label *label436
+ 1062 op sign *tmp368 :meetTarget:t
+ 1063 op add :meetTarget:count :meetTarget:count *tmp368
+ 1064 label *label437
+ 1065 set :meetTarget:t :meetTarget:silicon
+ 1066 label *label440
+ 1067 op sign *tmp368 :meetTarget:t
+ 1068 op add :meetTarget:count :meetTarget:count *tmp368
+ 1069 label *label441
+ 1070 set :meetTarget:t :meetTarget:titanium
+ 1071 label *label444
+ 1072 op sign *tmp368 :meetTarget:t
+ 1073 op add :meetTarget:count :meetTarget:count *tmp368
+ 1074 label *label445
+ 1075 set :meetTarget:t :meetTarget:metaglass
+ 1076 label *label448
+ 1077 op sign *tmp368 :meetTarget:t
+ 1078 op add :meetTarget:count :meetTarget:count *tmp368
+ 1079 label *label449
+ 1080 set :meetTarget:t :meetTarget:thorium
+ 1081 label *label452
+ 1082 op sign *tmp368 :meetTarget:t
+ 1083 op add :meetTarget:count :meetTarget:count *tmp368
+ 1084 label *label453
+ 1085 label *label302
  1086 write :meetTarget:count .display ".totalTargets"
  1087 write :meetTarget:block .display ".nextBlock"
  1088 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1049 set :meetTarget:count 0
  1050 set :meetTarget:t :meetTarget:copper
  1051 label *label428
-    * op sign *tmp368 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp368
+ 1052 op sign *tmp368 :meetTarget:copper
+ 1053 op add :meetTarget:count 0 *tmp368
  1054 label *label429
  1055 set :meetTarget:t :meetTarget:lead
  1056 label *label432
-    * op sign *tmp368 :meetTarget:t
+ 1057 op sign *tmp368 :meetTarget:lead
  1058 op add :meetTarget:count :meetTarget:count *tmp368
  1059 label *label433
  1060 set :meetTarget:t :meetTarget:graphite
  1061 label *label436
-    * op sign *tmp368 :meetTarget:t
+ 1062 op sign *tmp368 :meetTarget:graphite
  1063 op add :meetTarget:count :meetTarget:count *tmp368
  1064 label *label437
  1065 set :meetTarget:t :meetTarget:silicon
  1066 label *label440
-    * op sign *tmp368 :meetTarget:t
+ 1067 op sign *tmp368 :meetTarget:silicon
  1068 op add :meetTarget:count :meetTarget:count *tmp368
  1069 label *label441
  1070 set :meetTarget:t :meetTarget:titanium
  1071 label *label444
-    * op sign *tmp368 :meetTarget:t
+ 1072 op sign *tmp368 :meetTarget:titanium
  1073 op add :meetTarget:count :meetTarget:count *tmp368
  1074 label *label445
  1075 set :meetTarget:t :meetTarget:metaglass
  1076 label *label448
-    * op sign *tmp368 :meetTarget:t
+ 1077 op sign *tmp368 :meetTarget:metaglass
  1078 op add :meetTarget:count :meetTarget:count *tmp368
  1079 label *label449
  1080 set :meetTarget:t :meetTarget:thorium
  1081 label *label452
-    * op sign *tmp368 :meetTarget:t
+ 1082 op sign *tmp368 :meetTarget:thorium
  1083 op add :meetTarget:count :meetTarget:count *tmp368
  1084 label *label453
  1085 label *label302

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
  1046 return :unpackCfg*retaddr
  1047 end
  1048 label *label34
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1049 label *label428
  1050 op sign *tmp368 :meetTarget:copper
  1051 op add :meetTarget:count 0 *tmp368
  1052 label *label429
-    * set :meetTarget:t :meetTarget:lead
  1053 label *label432
  1054 op sign *tmp368 :meetTarget:lead
  1055 op add :meetTarget:count :meetTarget:count *tmp368
  1056 label *label433
-    * set :meetTarget:t :meetTarget:graphite
  1057 label *label436
  1058 op sign *tmp368 :meetTarget:graphite
  1059 op add :meetTarget:count :meetTarget:count *tmp368
  1060 label *label437
-    * set :meetTarget:t :meetTarget:silicon
  1061 label *label440
  1062 op sign *tmp368 :meetTarget:silicon
  1063 op add :meetTarget:count :meetTarget:count *tmp368
  1064 label *label441
-    * set :meetTarget:t :meetTarget:titanium
  1065 label *label444
  1066 op sign *tmp368 :meetTarget:titanium
  1067 op add :meetTarget:count :meetTarget:count *tmp368
  1068 label *label445
-    * set :meetTarget:t :meetTarget:metaglass
  1069 label *label448
  1070 op sign *tmp368 :meetTarget:metaglass
  1071 op add :meetTarget:count :meetTarget:count *tmp368
  1072 label *label449
-    * set :meetTarget:t :meetTarget:thorium
  1073 label *label452
  1074 op sign *tmp368 :meetTarget:thorium
  1075 op add :meetTarget:count :meetTarget:count *tmp368

Modifications by Inline function 'status1' defined at Actions.mnd:7:1 (-16 instructions):
 
   509 write *tmp230 processor8 ".sandTarget"
   510 jump *label164 equal .thoriumContainer false
   511 set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label167 (h:*label167)
-    * call *label9 *invalid :status1*retval (m:*label167) (h:*label167)
-    * label *label167
+  512 label *label457
+  513 write :status1:text .display ".status1"
+  514 label *label458
   515 sensor *tmp232 .thoriumBattery @totalPower
   516 jump *label168 greaterThanEq *tmp232 2000
   517 sensor *tmp235 .core @coal
 
   542 read *tmp82 .controller ".monos"
   543 jump *label175 lessThanEq *tmp82 3
   544 set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label178 (h:*label178)
-    * call *label9 *invalid :status1*retval (m:*label178) (h:*label178)
-    * label *label178
+  545 label *label459
+  546 write :status1:text .display ".status1"
+  547 label *label460
   548 set :mineOre.1:ore @coal
   549 setaddr :mineOre.1*retaddr *label179 (h:*label179)
   550 call *label22 *invalid :mineOre.1*retval (m:*label179) (h:*label179)
 
   559 sensor *tmp245 AJEMJJ-graphite-press0 @coal
   560 jump *label185 greaterThanEq *tmp245 5
   561 set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label187 (h:*label187)
-    * call *label9 *invalid :status1*retval (m:*label187) (h:*label187)
-    * label *label187
+  562 label *label461
+  563 write :status1:text .display ".status1"
+  564 label *label462
   565 set :supplyBlock:block AJEMJJ-graphite-press0
   566 set :supplyBlock:ore @coal
   567 setaddr :supplyBlock*retaddr *label188 (h:*label188)
 
   577 sensor *tmp251 ALMQJN-silicon-smelter4 @coal
   578 jump *label191 greaterThanEq *tmp251 5
   579 set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label193 (h:*label193)
-    * call *label9 *invalid :status1*retval (m:*label193) (h:*label193)
-    * label *label193
+  580 label *label463
+  581 write :status1:text .display ".status1"
+  582 label *label464
   583 set :supplyBlock:block ALMQJN-silicon-smelter4
   584 set :supplyBlock:ore @coal
   585 setaddr :supplyBlock*retaddr *label194 (h:*label194)
 
   591 sensor *tmp254 ALMQJN-silicon-smelter4 @sand
   592 jump *label195 greaterThanEq *tmp254 5
   593 set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label197 (h:*label197)
-    * call *label9 *invalid :status1*retval (m:*label197) (h:*label197)
-    * label *label197
+  594 label *label465
+  595 write :status1:text .display ".status1"
+  596 label *label466
   597 set :supplyBlock:block ALMQJN-silicon-smelter4
   598 set :supplyBlock:ore @sand
   599 setaddr :supplyBlock*retaddr *label198 (h:*label198)
 
   610 sensor *tmp260 AJRJM-combustion-generator3 @coal
   611 jump *label201 greaterThanEq *tmp260 2
   612 set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label203 (h:*label203)
-    * call *label9 *invalid :status1*retval (m:*label203) (h:*label203)
-    * label *label203
+  613 label *label467
+  614 write :status1:text .display ".status1"
+  615 label *label468
   616 set :supplyBlock:block AJRJM-combustion-generator3
   617 set :supplyBlock:ore @coal
   618 setaddr :supplyBlock*retaddr *label204 (h:*label204)
 
   640 op mul *tmp275 A©JNJQ-unloader7 .powerTarget
   641 jump *label211 greaterThanEq *tmp274 *tmp275
   642 set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label213 (h:*label213)
-    * call *label9 *invalid :status1*retval (m:*label213) (h:*label213)
-    * label *label213
+  643 label *label469
+  644 write :status1:text .display ".status1"
+  645 label *label470
   646 set :mineOre.1:ore @coal
   647 setaddr :mineOre.1*retaddr *label214 (h:*label214)
   648 call *label22 *invalid :mineOre.1*retval (m:*label214) (h:*label214)
 
   652 sensor *tmp278 .core @silicon
   653 jump *label215 greaterThanEq *tmp278 .targetSilicon
   654 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label217 (h:*label217)
-    * call *label9 *invalid :status1*retval (m:*label217) (h:*label217)
-    * label *label217
+  655 label *label471
+  656 write :status1:text .display ".status1"
+  657 label *label472
   658 sensor :supplyBase0:coal .core @coal
   659 sensor :supplyBase0:sand .core @sand
   660 select *tmp284 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
 
   667 sensor *tmp285 .core @copper
   668 jump *label221 greaterThanEq *tmp285 .targetCopper
   669 set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label223 (h:*label223)
-    * call *label9 *invalid :status1*retval (m:*label223) (h:*label223)
-    * label *label223
+  670 label *label473
+  671 write :status1:text .display ".status1"
+  672 label *label474
   673 set :mineOre.1:ore @copper
   674 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   675 call *label22 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
 
   679 sensor *tmp288 .core @lead
   680 jump *label225 greaterThanEq *tmp288 .targetLead
   681 set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label227 (h:*label227)
-    * call *label9 *invalid :status1*retval (m:*label227) (h:*label227)
-    * label *label227
+  682 label *label475
+  683 write :status1:text .display ".status1"
+  684 label *label476
   685 set :mineOre.1:ore @lead
   686 setaddr :mineOre.1*retaddr *label228 (h:*label228)
   687 call *label22 *invalid :mineOre.1*retval (m:*label228) (h:*label228)
 
   691 sensor *tmp291 .core @metaglass
   692 jump *label229 greaterThanEq *tmp291 .targetMetaglass
   693 set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label231 (h:*label231)
-    * call *label9 *invalid :status1*retval (m:*label231) (h:*label231)
-    * label *label231
+  694 label *label477
+  695 write :status1:text .display ".status1"
+  696 label *label478
   697 set :mineOre.1:ore @sand
   698 setaddr :mineOre.1*retaddr *label232 (h:*label232)
   699 call *label22 *invalid :mineOre.1*retval (m:*label232) (h:*label232)
 
   701 jump *label230 always
   702 label *label229
   703 set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label233 (h:*label233)
-    * call *label9 *invalid :status1*retval (m:*label233) (h:*label233)
-    * label *label233
+  704 label *label479
+  705 write :status1:text .display ".status1"
+  706 label *label480
   707 sensor :supplyBase0:coal.1 .core @coal
   708 sensor :supplyBase0:sand.1 .core @sand
   709 select *tmp297 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   721 jump *label208 always
   722 label *label207
   723 set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label237 (h:*label237)
-    * call *label9 *invalid :status1*retval (m:*label237) (h:*label237)
-    * label *label237
+  724 label *label481
+  725 write :status1:text .display ".status1"
+  726 label *label482
   727 set :fetchBlock:block .titaniumDrill
   728 set :fetchBlock:item @titanium
   729 setaddr :fetchBlock*retaddr *label238 (h:*label238)
 
   884 label *label261
   885 return :lineUpUnits*retaddr
   886 end
-    * label *label9
-    * write :status1:text .display ".status1"
-    * label *label267
-    * return :status1*retaddr
-    * end
   887 label *label22
   888 set :status2:text "Mining "
   889 set :status2:item :mineOre.1:ore

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   510 jump *label164 equal .thoriumContainer false
   511 set :status1:text "Phase 2: servicing thorium drill"
   512 label *label457
-    * write :status1:text .display ".status1"
+  513 write "Phase 2: servicing thorium drill" .display ".status1"
   514 label *label458
   515 sensor *tmp232 .thoriumBattery @totalPower
   516 jump *label168 greaterThanEq *tmp232 2000
 
   543 jump *label175 lessThanEq *tmp82 3
   544 set :status1:text "Phase 1: supplying base"
   545 label *label459
-    * write :status1:text .display ".status1"
+  546 write "Phase 1: supplying base" .display ".status1"
   547 label *label460
   548 set :mineOre.1:ore @coal
   549 setaddr :mineOre.1*retaddr *label179 (h:*label179)
 
   560 jump *label185 greaterThanEq *tmp245 5
   561 set :status1:text "Goal 1: graphite requirement"
   562 label *label461
-    * write :status1:text .display ".status1"
+  563 write "Goal 1: graphite requirement" .display ".status1"
   564 label *label462
   565 set :supplyBlock:block AJEMJJ-graphite-press0
   566 set :supplyBlock:ore @coal
 
   578 jump *label191 greaterThanEq *tmp251 5
   579 set :status1:text "Goal 2: coal for silicon requirement"
   580 label *label463
-    * write :status1:text .display ".status1"
+  581 write "Goal 2: coal for silicon requirement" .display ".status1"
   582 label *label464
   583 set :supplyBlock:block ALMQJN-silicon-smelter4
   584 set :supplyBlock:ore @coal
 
   592 jump *label195 greaterThanEq *tmp254 5
   593 set :status1:text "Goal 3: sand for silicon requirement"
   594 label *label465
-    * write :status1:text .display ".status1"
+  595 write "Goal 3: sand for silicon requirement" .display ".status1"
   596 label *label466
   597 set :supplyBlock:block ALMQJN-silicon-smelter4
   598 set :supplyBlock:ore @sand
 
   611 jump *label201 greaterThanEq *tmp260 2
   612 set :status1:text "Goal 4: supplying generator"
   613 label *label467
-    * write :status1:text .display ".status1"
+  614 write "Goal 4: supplying generator" .display ".status1"
   615 label *label468
   616 set :supplyBlock:block AJRJM-combustion-generator3
   617 set :supplyBlock:ore @coal
 
   641 jump *label211 greaterThanEq *tmp274 *tmp275
   642 set :status1:text "Goal 5: supplying generator"
   643 label *label469
-    * write :status1:text .display ".status1"
+  644 write "Goal 5: supplying generator" .display ".status1"
   645 label *label470
   646 set :mineOre.1:ore @coal
   647 setaddr :mineOre.1*retaddr *label214 (h:*label214)
 
   653 jump *label215 greaterThanEq *tmp278 .targetSilicon
   654 set :status1:text "Goal 6: silicon requirement"
   655 label *label471
-    * write :status1:text .display ".status1"
+  656 write "Goal 6: silicon requirement" .display ".status1"
   657 label *label472
   658 sensor :supplyBase0:coal .core @coal
   659 sensor :supplyBase0:sand .core @sand
 
   668 jump *label221 greaterThanEq *tmp285 .targetCopper
   669 set :status1:text "Goal 7: copper requirement"
   670 label *label473
-    * write :status1:text .display ".status1"
+  671 write "Goal 7: copper requirement" .display ".status1"
   672 label *label474
   673 set :mineOre.1:ore @copper
   674 setaddr :mineOre.1*retaddr *label224 (h:*label224)
 
   680 jump *label225 greaterThanEq *tmp288 .targetLead
   681 set :status1:text "Goal 8: lead requirement"
   682 label *label475
-    * write :status1:text .display ".status1"
+  683 write "Goal 8: lead requirement" .display ".status1"
   684 label *label476
   685 set :mineOre.1:ore @lead
   686 setaddr :mineOre.1*retaddr *label228 (h:*label228)
 
   692 jump *label229 greaterThanEq *tmp291 .targetMetaglass
   693 set :status1:text "Goal 9: metaglass requirement"
   694 label *label477
-    * write :status1:text .display ".status1"
+  695 write "Goal 9: metaglass requirement" .display ".status1"
   696 label *label478
   697 set :mineOre.1:ore @sand
   698 setaddr :mineOre.1*retaddr *label232 (h:*label232)
 
   702 label *label229
   703 set :status1:text "Goal 10: supplying base"
   704 label *label479
-    * write :status1:text .display ".status1"
+  705 write "Goal 10: supplying base" .display ".status1"
   706 label *label480
   707 sensor :supplyBase0:coal.1 .core @coal
   708 sensor :supplyBase0:sand.1 .core @sand
 
   722 label *label207
   723 set :status1:text "Goal 11: Fetching titanium"
   724 label *label481
-    * write :status1:text .display ".status1"
+  725 write "Goal 11: Fetching titanium" .display ".status1"
   726 label *label482
   727 set :fetchBlock:block .titaniumDrill
   728 set :fetchBlock:item @titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
   508 op max *tmp230 0 *tmp229
   509 write *tmp230 processor8 ".sandTarget"
   510 jump *label164 equal .thoriumContainer false
-    * set :status1:text "Phase 2: servicing thorium drill"
   511 label *label457
   512 write "Phase 2: servicing thorium drill" .display ".status1"
   513 label *label458
 
   540 label *label164
   541 read *tmp82 .controller ".monos"
   542 jump *label175 lessThanEq *tmp82 3
-    * set :status1:text "Phase 1: supplying base"
   543 label *label459
   544 write "Phase 1: supplying base" .display ".status1"
   545 label *label460
 
   556 jump *label183 greaterThanEq *tmp242 .targetGraphite
   557 sensor *tmp245 AJEMJJ-graphite-press0 @coal
   558 jump *label185 greaterThanEq *tmp245 5
-    * set :status1:text "Goal 1: graphite requirement"
   559 label *label461
   560 write "Goal 1: graphite requirement" .display ".status1"
   561 label *label462
 
   573 jump *label189 greaterThanEq *tmp248 .targetSilicon
   574 sensor *tmp251 ALMQJN-silicon-smelter4 @coal
   575 jump *label191 greaterThanEq *tmp251 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
   576 label *label463
   577 write "Goal 2: coal for silicon requirement" .display ".status1"
   578 label *label464
 
   586 label *label191
   587 sensor *tmp254 ALMQJN-silicon-smelter4 @sand
   588 jump *label195 greaterThanEq *tmp254 5
-    * set :status1:text "Goal 3: sand for silicon requirement"
   589 label *label465
   590 write "Goal 3: sand for silicon requirement" .display ".status1"
   591 label *label466
 
   604 jump *label199 greaterThanEq *tmp257 .powerTarget
   605 sensor *tmp260 AJRJM-combustion-generator3 @coal
   606 jump *label201 greaterThanEq *tmp260 2
-    * set :status1:text "Goal 4: supplying generator"
   607 label *label467
   608 write "Goal 4: supplying generator" .display ".status1"
   609 label *label468
 
   633 sensor *tmp274 AJTJK-battery1 @totalPower
   634 op mul *tmp275 A©JNJQ-unloader7 .powerTarget
   635 jump *label211 greaterThanEq *tmp274 *tmp275
-    * set :status1:text "Goal 5: supplying generator"
   636 label *label469
   637 write "Goal 5: supplying generator" .display ".status1"
   638 label *label470
 
   644 label *label211
   645 sensor *tmp278 .core @silicon
   646 jump *label215 greaterThanEq *tmp278 .targetSilicon
-    * set :status1:text "Goal 6: silicon requirement"
   647 label *label471
   648 write "Goal 6: silicon requirement" .display ".status1"
   649 label *label472
 
   658 label *label215
   659 sensor *tmp285 .core @copper
   660 jump *label221 greaterThanEq *tmp285 .targetCopper
-    * set :status1:text "Goal 7: copper requirement"
   661 label *label473
   662 write "Goal 7: copper requirement" .display ".status1"
   663 label *label474
 
   669 label *label221
   670 sensor *tmp288 .core @lead
   671 jump *label225 greaterThanEq *tmp288 .targetLead
-    * set :status1:text "Goal 8: lead requirement"
   672 label *label475
   673 write "Goal 8: lead requirement" .display ".status1"
   674 label *label476
 
   680 label *label225
   681 sensor *tmp291 .core @metaglass
   682 jump *label229 greaterThanEq *tmp291 .targetMetaglass
-    * set :status1:text "Goal 9: metaglass requirement"
   683 label *label477
   684 write "Goal 9: metaglass requirement" .display ".status1"
   685 label *label478
 
   689 label *label232
   690 jump *label230 always
   691 label *label229
-    * set :status1:text "Goal 10: supplying base"
   692 label *label479
   693 write "Goal 10: supplying base" .display ".status1"
   694 label *label480
 
   708 label *label210
   709 jump *label208 always
   710 label *label207
-    * set :status1:text "Goal 11: Fetching titanium"
   711 label *label481
   712 write "Goal 11: Fetching titanium" .display ".status1"
   713 label *label482

Modifications by Inline function 'supplyBlockFromCore' defined at Actions.mnd:160:1 (-4 instructions):
 
   524 label *label170
   525 set :supplyBlockFromCore:target .thoriumGenerator
   526 set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label173 (h:*label173)
-    * call *label25 *invalid :supplyBlockFromCore*retval (m:*label173) (h:*label173)
-    * label *label173
+  527 label *label483
+  528 sensor *tmp330 :supplyBlockFromCore:target @itemCapacity
+  529 op min :transportStatus:target *tmp330 30
+  530 set :transportStatus:item :supplyBlockFromCore:item
+  531 setaddr :transportStatus*retaddr *label484 (h:*label484)
+  532 call *label12 *invalid :transportStatus*retval (m:*label484) (h:*label484)
+  533 label *label484
+  534 set :status2:text "Transferring "
+  535 set :status2:item :supplyBlockFromCore:item
+  536 set :status2:block :supplyBlockFromCore:target
+  537 setaddr :status2*retaddr *label485 (h:*label485)
+  538 call *label10 *invalid :status2*retval (m:*label485) (h:*label485)
+  539 label *label485
+  540 set :moveToEmpty:x .coreX
+  541 set :moveToEmpty:y .coreY
+  542 setaddr :moveToEmpty*retaddr *label486 (h:*label486)
+  543 call *label16 *invalid :moveToEmpty*retval (m:*label486) (h:*label486)
+  544 label *label486
+  545 setaddr :dropAll*retaddr *label487 (h:*label487)
+  546 call *label17 *invalid :dropAll*retval (m:*label487) (h:*label487)
+  547 label *label487
+  548 label *label488
+  549 ucontrol itemTake .core :supplyBlockFromCore:item 30
+  550 sensor :supplyBlockFromCore:unitItem @unit @firstItem
+  551 op notEqual *tmp333 :supplyBlockFromCore:unitItem null
+  552 op notEqual *tmp334 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  553 op land *tmp335 *tmp333 *tmp334
+  554 jump *label489 equal *tmp335 false
+  555 ucontrol itemDrop @air 1000
+  556 label *label489
+  557 label *label490
+  558 label *label491
+  559 sensor *tmp337 @unit :supplyBlockFromCore:item
+  560 op lessThan *tmp338 *tmp337 30
+  561 sensor *tmp339 .core :supplyBlockFromCore:item
+  562 op land *tmp340 *tmp338 *tmp339
+  563 jump *label488 notEqual *tmp340 false
+  564 label *label492
+  565 set :depositItems:block :supplyBlockFromCore:target
+  566 set :depositItems:item :supplyBlockFromCore:item
+  567 setaddr :depositItems*retaddr *label493 (h:*label493)
+  568 call *label19 *invalid :depositItems*retval (m:*label493) (h:*label493)
+  569 label *label493
+  570 label *label494
   571 label *label171
   572 label *label168
   573 label *label169
 
   998 label *label282
   999 return :supplyBlock*retaddr
  1000 end
-    * label *label25
-    * sensor *tmp330 :supplyBlockFromCore:target @itemCapacity
-    * op min :transportStatus:target *tmp330 30
-    * set :transportStatus:item :supplyBlockFromCore:item
-    * setaddr :transportStatus*retaddr *label288 (h:*label288)
-    * call *label12 *invalid :transportStatus*retval (m:*label288) (h:*label288)
-    * label *label288
-    * set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label289 (h:*label289)
-    * call *label10 *invalid :status2*retval (m:*label289) (h:*label289)
-    * label *label289
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label290 (h:*label290)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label290) (h:*label290)
-    * label *label290
-    * setaddr :dropAll*retaddr *label291 (h:*label291)
-    * call *label17 *invalid :dropAll*retval (m:*label291) (h:*label291)
-    * label *label291
-    * label *label292
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor :supplyBlockFromCore:unitItem @unit @firstItem
-    * op notEqual *tmp333 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp334 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
-    * op land *tmp335 *tmp333 *tmp334
-    * jump *label295 equal *tmp335 false
-    * ucontrol itemDrop @air 1000
-    * label *label295
-    * label *label296
-    * label *label293
-    * sensor *tmp337 @unit :supplyBlockFromCore:item
-    * op lessThan *tmp338 *tmp337 30
-    * sensor *tmp339 .core :supplyBlockFromCore:item
-    * op land *tmp340 *tmp338 *tmp339
-    * jump *label292 notEqual *tmp340 false
-    * label *label294
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
-    * setaddr :depositItems*retaddr *label297 (h:*label297)
-    * call *label19 *invalid :depositItems*retval (m:*label297) (h:*label297)
-    * label *label297
-    * label *label287
-    * return :supplyBlockFromCore*retaddr
-    * end
  1001 label *label27
  1002 read *tmp342 :unpackCfg:cfg 1
  1003 op sub *tmp343 *tmp342 74

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   525 set :supplyBlockFromCore:target .thoriumGenerator
   526 set :supplyBlockFromCore:item @coal
   527 label *label483
-    * sensor *tmp330 :supplyBlockFromCore:target @itemCapacity
+  528 sensor *tmp330 .thoriumGenerator @itemCapacity
   529 op min :transportStatus:target *tmp330 30
-    * set :transportStatus:item :supplyBlockFromCore:item
+  530 set :transportStatus:item @coal
   531 setaddr :transportStatus*retaddr *label484 (h:*label484)
   532 call *label12 *invalid :transportStatus*retval (m:*label484) (h:*label484)
   533 label *label484
   534 set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
+  535 set :status2:item @coal
+  536 set :status2:block .thoriumGenerator
   537 setaddr :status2*retaddr *label485 (h:*label485)
   538 call *label10 *invalid :status2*retval (m:*label485) (h:*label485)
   539 label *label485
 
   546 call *label17 *invalid :dropAll*retval (m:*label487) (h:*label487)
   547 label *label487
   548 label *label488
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
+  549 ucontrol itemTake .core @coal 30
   550 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   551 op notEqual *tmp333 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp334 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  552 op notEqual *tmp334 :supplyBlockFromCore:unitItem @coal
   553 op land *tmp335 *tmp333 *tmp334
   554 jump *label489 equal *tmp335 false
   555 ucontrol itemDrop @air 1000
   556 label *label489
   557 label *label490
   558 label *label491
-    * sensor *tmp337 @unit :supplyBlockFromCore:item
+  559 sensor *tmp337 @unit @coal
   560 op lessThan *tmp338 *tmp337 30
-    * sensor *tmp339 .core :supplyBlockFromCore:item
+  561 sensor *tmp339 .core @coal
   562 op land *tmp340 *tmp338 *tmp339
   563 jump *label488 notEqual *tmp340 false
   564 label *label492
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
+  565 set :depositItems:block .thoriumGenerator
+  566 set :depositItems:item @coal
   567 setaddr :depositItems*retaddr *label493 (h:*label493)
   568 call *label19 *invalid :depositItems*retval (m:*label493) (h:*label493)
   569 label *label493

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   522 label *label172
   523 jump *label171 always
   524 label *label170
-    * set :supplyBlockFromCore:target .thoriumGenerator
-    * set :supplyBlockFromCore:item @coal
   525 label *label483
   526 sensor *tmp330 .thoriumGenerator @itemCapacity
   527 op min :transportStatus:target *tmp330 30

Modifications by Inline function 'status3' defined at Actions.mnd:17:1 (-7 instructions):
 
  1184 end
  1185 label *label16
  1186 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label335 (h:*label335)
-    * call *label11 *invalid :status3*retval (m:*label335) (h:*label335)
-    * label *label335
+ 1187 label *label495
+ 1188 write :status3:text .display ".status3"
+ 1189 label *label496
  1190 label *label336
  1191 sensor *tmp412 @unit @firstItem
  1192 jump *label339 equal *tmp412 null
 
  1214 end
  1215 label *label19
  1216 set :status3:text "Depositing..."
-    * setaddr :status3*retaddr *label346 (h:*label346)
-    * call *label11 *invalid :status3*retval (m:*label346) (h:*label346)
-    * label *label346
+ 1217 label *label497
+ 1218 write :status3:text .display ".status3"
+ 1219 label *label498
  1220 sensor *tmp419 @unit @firstItem
  1221 jump *label347 notEqual *tmp419 :depositItems:item
  1222 set :moveToBlock:block :depositItems:block
 
  1277 label *label361
  1278 label *label362
  1279 set :status3:text "Mining..."
-    * setaddr :status3*retaddr *label364 (h:*label364)
-    * call *label11 *invalid :status3*retval (m:*label364) (h:*label364)
-    * label *label364
+ 1280 label *label499
+ 1281 write :status3:text .display ".status3"
+ 1282 label *label500
  1283 op add :mineOre:stop @second 10
  1284 label *label365
  1285 sensor :mineOre:item @unit @firstItem
 
  1308 label *label357
  1309 return :mineOre*retaddr
  1310 end
-    * label *label11
-    * write :status3:text .display ".status3"
-    * label *label373
-    * return :status3*retaddr
-    * end
  1311 label *label18
  1312 sensor *tmp443 :moveToBlock:block @x
  1313 sensor *tmp444 :moveToBlock:block @y
 
  1334 end
  1335 label *label14
  1336 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label381 (h:*label381)
-    * call *label11 *invalid :status3*retval (m:*label381) (h:*label381)
-    * label *label381
+ 1337 label *label501
+ 1338 write :status3:text .display ".status3"
+ 1339 label *label502
  1340 op sub *tmp451 :moveTo:radius 0.5
  1341 label *label382
  1342 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp449

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1185 label *label16
  1186 set :status3:text "Moving..."
  1187 label *label495
-    * write :status3:text .display ".status3"
+ 1188 write "Moving..." .display ".status3"
  1189 label *label496
  1190 label *label336
  1191 sensor *tmp412 @unit @firstItem
 
  1215 label *label19
  1216 set :status3:text "Depositing..."
  1217 label *label497
-    * write :status3:text .display ".status3"
+ 1218 write "Depositing..." .display ".status3"
  1219 label *label498
  1220 sensor *tmp419 @unit @firstItem
  1221 jump *label347 notEqual *tmp419 :depositItems:item
 
  1278 label *label362
  1279 set :status3:text "Mining..."
  1280 label *label499
-    * write :status3:text .display ".status3"
+ 1281 write "Mining..." .display ".status3"
  1282 label *label500
  1283 op add :mineOre:stop @second 10
  1284 label *label365
 
  1335 label *label14
  1336 set :status3:text "Moving..."
  1337 label *label501
-    * write :status3:text .display ".status3"
+ 1338 write "Moving..." .display ".status3"
  1339 label *label502
  1340 op sub *tmp451 :moveTo:radius 0.5
  1341 label *label382

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1183 return :transportStatus*retaddr
  1184 end
  1185 label *label16
-    * set :status3:text "Moving..."
  1186 label *label495
  1187 write "Moving..." .display ".status3"
  1188 label *label496
 
  1212 return :dropAll*retaddr
  1213 end
  1214 label *label19
-    * set :status3:text "Depositing..."
  1215 label *label497
  1216 write "Depositing..." .display ".status3"
  1217 label *label498
 
  1274 label *label363
  1275 label *label361
  1276 label *label362
-    * set :status3:text "Mining..."
  1277 label *label499
  1278 write "Mining..." .display ".status3"
  1279 label *label500
 
  1330 return :locateOre*retaddr
  1331 end
  1332 label *label14
-    * set :status3:text "Moving..."
  1333 label *label501
  1334 write "Moving..." .display ".status3"
  1335 label *label502

Modifications by Inline function 'moveToBlock' defined at Actions.mnd:67:1 (-4 instructions):
 
  1219 jump *label347 notEqual *tmp419 :depositItems:item
  1220 set :moveToBlock:block :depositItems:block
  1221 set :moveToBlock:radius 6
-    * setaddr :moveToBlock*retaddr *label349 (h:*label349)
-    * call *label18 *invalid :moveToBlock*retval (m:*label349) (h:*label349)
-    * label *label349
+ 1222 label *label503
+ 1223 sensor *tmp443 :moveToBlock:block @x
+ 1224 sensor *tmp444 :moveToBlock:block @y
+ 1225 set :moveTo:x *tmp443
+ 1226 set :moveTo:y *tmp444
+ 1227 set :moveTo:radius :moveToBlock:radius
+ 1228 setaddr :moveTo*retaddr *label504 (h:*label504)
+ 1229 call *label14 *invalid :moveTo*retval (m:*label504) (h:*label504)
+ 1230 label *label504
+ 1231 label *label505
  1232 sensor :depositItems:cap :depositItems:block @itemCapacity
  1233 label *label350
  1234 ucontrol itemDrop :depositItems:block 30
 
  1312 label *label357
  1313 return :mineOre*retaddr
  1314 end
-    * label *label18
-    * sensor *tmp443 :moveToBlock:block @x
-    * sensor *tmp444 :moveToBlock:block @y
-    * set :moveTo:x *tmp443
-    * set :moveTo:y *tmp444
-    * set :moveTo:radius :moveToBlock:radius
-    * setaddr :moveTo*retaddr *label375 (h:*label375)
-    * call *label14 *invalid :moveTo*retval (m:*label375) (h:*label375)
-    * label *label375
-    * label *label374
-    * return :moveToBlock*retaddr
-    * end
  1315 label *label20
  1316 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
  1317 jump *label377 notEqual *tmp445 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1220 set :moveToBlock:block :depositItems:block
  1221 set :moveToBlock:radius 6
  1222 label *label503
-    * sensor *tmp443 :moveToBlock:block @x
-    * sensor *tmp444 :moveToBlock:block @y
+ 1223 sensor *tmp443 :depositItems:block @x
+ 1224 sensor *tmp444 :depositItems:block @y
  1225 set :moveTo:x *tmp443
  1226 set :moveTo:y *tmp444
-    * set :moveTo:radius :moveToBlock:radius
+ 1227 set :moveTo:radius 6
  1228 setaddr :moveTo*retaddr *label504 (h:*label504)
  1229 call *label14 *invalid :moveTo*retval (m:*label504) (h:*label504)
  1230 label *label504

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1217 label *label498
  1218 sensor *tmp419 @unit @firstItem
  1219 jump *label347 notEqual *tmp419 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
-    * set :moveToBlock:radius 6
  1220 label *label503
  1221 sensor *tmp443 :depositItems:block @x
  1222 sensor *tmp444 :depositItems:block @y

Modifications by Inline function 'locateOre' defined at Actions.mnd:92:1 (-4 instructions):
 
  1262 call *label12 *invalid :transportStatus*retval (m:*label358) (h:*label358)
  1263 label *label358
  1264 set :locateOre:ore :mineOre:ore
-    * setaddr :locateOre*retaddr *label359 (h:*label359)
-    * call *label20 *invalid :locateOre*retval (m:*label359) (h:*label359)
-    * label *label359
+ 1265 label *label506
+ 1266 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
+ 1267 jump *label508 notEqual *tmp445 false
+ 1268 set :error:error "Cannot locate ore"
+ 1269 setaddr :error*retaddr *label507 (h:*label507)
+ 1270 call *label13 *invalid :error*retval (m:*label507) (h:*label507)
+ 1271 label *label507
+ 1272 label *label508
+ 1273 label *label509
+ 1274 label *label510
  1275 set :mineOre:x :locateOre:x
  1276 set :mineOre:y :locateOre:y
  1277 set :moveToEmpty:x :locateOre:x
 
  1317 label *label357
  1318 return :mineOre*retaddr
  1319 end
-    * label *label20
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
-    * jump *label377 notEqual *tmp445 false
-    * set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label379 (h:*label379)
-    * call *label13 *invalid :error*retval (m:*label379) (h:*label379)
-    * label *label379
-    * label *label377
-    * label *label378
-    * label *label376
-    * return :locateOre*retaddr
-    * end
  1320 label *label14
  1321 label *label501
  1322 write "Moving..." .display ".status3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1263 label *label358
  1264 set :locateOre:ore :mineOre:ore
  1265 label *label506
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
+ 1266 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
  1267 jump *label508 notEqual *tmp445 false
  1268 set :error:error "Cannot locate ore"
  1269 setaddr :error*retaddr *label507 (h:*label507)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
  1261 setaddr :transportStatus*retaddr *label358 (h:*label358)
  1262 call *label12 *invalid :transportStatus*retval (m:*label358) (h:*label358)
  1263 label *label358
-    * set :locateOre:ore :mineOre:ore
  1264 label *label506
  1265 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
  1266 jump *label508 notEqual *tmp445 false

Modifications by Inline function 'moveTo' defined at Actions.mnd:37:1 (-4 instructions):
 
  1223 set :moveTo:x *tmp443
  1224 set :moveTo:y *tmp444
  1225 set :moveTo:radius 6
-    * setaddr :moveTo*retaddr *label504 (h:*label504)
-    * call *label14 *invalid :moveTo*retval (m:*label504) (h:*label504)
-    * label *label504
+ 1226 label *label511
+ 1227 label *label512
+ 1228 write "Moving..." .display ".status3"
+ 1229 label *label513
+ 1230 op sub *tmp451 :moveTo:radius 0.5
+ 1231 label *label514
+ 1232 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp449
+ 1233 jump *label516 notEqual *tmp449 false
+ 1234 ucontrol approach :moveTo:x :moveTo:y *tmp451
+ 1235 label *label515
+ 1236 jump *label514 always
+ 1237 label *label516
+ 1238 label *label517
  1239 label *label505
  1240 sensor :depositItems:cap :depositItems:block @itemCapacity
  1241 label *label350
 
  1326 label *label357
  1327 return :mineOre*retaddr
  1328 end
-    * label *label14
-    * label *label501
-    * write "Moving..." .display ".status3"
-    * label *label502
-    * op sub *tmp451 :moveTo:radius 0.5
-    * label *label382
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp449
-    * jump *label384 notEqual *tmp449 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp451
-    * label *label383
-    * jump *label382 always
-    * label *label384
-    * label *label380
-    * return :moveTo*retaddr
-    * end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1227 label *label512
  1228 write "Moving..." .display ".status3"
  1229 label *label513
-    * op sub *tmp451 :moveTo:radius 0.5
+ 1230 op sub *tmp451 6 0.5
  1231 label *label514
-    * ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp449
+ 1232 ucontrol within *tmp443 *tmp444 6 *tmp449
  1233 jump *label516 notEqual *tmp449 false
-    * ucontrol approach :moveTo:x :moveTo:y *tmp451
+ 1234 ucontrol approach *tmp443 *tmp444 5.5
  1235 label *label515
  1236 jump *label514 always
  1237 label *label516

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
  1220 label *label503
  1221 sensor *tmp443 :depositItems:block @x
  1222 sensor *tmp444 :depositItems:block @y
-    * set :moveTo:x *tmp443
-    * set :moveTo:y *tmp444
-    * set :moveTo:radius 6
  1223 label *label511
  1224 label *label512
  1225 write "Moving..." .display ".status3"
  1226 label *label513
-    * op sub *tmp451 6 0.5
  1227 label *label514
  1228 ucontrol within *tmp443 *tmp444 6 *tmp449
  1229 jump *label516 notEqual *tmp449 false

Modifications by Replicate loop condition at Actions.mnd:61:5 (+1 instructions):
 
  1204 label *label342
  1205 sensor *tmp417 @unit @firstItem
  1206 jump *label344 equal *tmp417 null
+ 1207 label *label518
  1208 ucontrol itemDrop @air 1000
  1209 label *label343
-    * jump *label342 always
+ 1210 sensor *tmp417 @unit @firstItem
+ 1211 jump *label518 notEqual *tmp417 null
  1212 label *label344
  1213 label *label341
  1214 return :dropAll*retaddr

Modifications by Replicate loop condition at Actions.mnd:39:5 (+1 instructions):
 
  1229 label *label514
  1230 ucontrol within *tmp443 *tmp444 6 *tmp449
  1231 jump *label516 notEqual *tmp449 false
+ 1232 label *label519
  1233 ucontrol approach *tmp443 *tmp444 5.5
  1234 label *label515
-    * jump *label514 always
+ 1235 ucontrol within *tmp443 *tmp444 6 *tmp449
+ 1236 jump *label519 equal *tmp449 false
  1237 label *label516
  1238 label *label517
  1239 label *label505

Modifications by Replicate loop condition at Actions.mnd:84:9 (+1 instructions):
 
  1251 label *label353
  1252 sensor *tmp427 @unit @firstItem
  1253 jump *label355 equal *tmp427 null
+ 1254 label *label520
  1255 ucontrol itemDrop @air 1000
  1256 label *label354
-    * jump *label353 always
+ 1257 sensor *tmp427 @unit @firstItem
+ 1258 jump *label520 notEqual *tmp427 null
  1259 label *label355
  1260 label *label348
  1261 set :transportStatus:target 0

Modifications by Inline function call at Actions.mnd:88:5:
 
  1260 label *label348
  1261 set :transportStatus:target 0
  1262 set :transportStatus:item null
-    * setaddr :transportStatus*retaddr *label356 (h:*label356)
-    * call *label12 *invalid :transportStatus*retval (m:*label356) (h:*label356)
-    * label *label356
+ 1263 label *label521
+ 1264 write :transportStatus:target .display ".transportTarget"
+ 1265 write :transportStatus:item .display ".transportItem"
+ 1266 label *label522
  1267 label *label345
  1268 return :depositItems*retaddr
  1269 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1261 set :transportStatus:target 0
  1262 set :transportStatus:item null
  1263 label *label521
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1264 write 0 .display ".transportTarget"
+ 1265 write null .display ".transportItem"
  1266 label *label522
  1267 label *label345
  1268 return :depositItems*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1258 jump *label520 notEqual *tmp427 null
  1259 label *label355
  1260 label *label348
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
  1261 label *label521
  1262 write 0 .display ".transportTarget"
  1263 write null .display ".transportItem"

Modifications by Inline function 'transportStatus' defined at Actions.mnd:21:1 (-4 instructions):
 
   526 sensor *tmp330 .thoriumGenerator @itemCapacity
   527 op min :transportStatus:target *tmp330 30
   528 set :transportStatus:item @coal
-    * setaddr :transportStatus*retaddr *label484 (h:*label484)
-    * call *label12 *invalid :transportStatus*retval (m:*label484) (h:*label484)
-    * label *label484
+  529 label *label523
+  530 write :transportStatus:target .display ".transportTarget"
+  531 write :transportStatus:item .display ".transportItem"
+  532 label *label524
   533 set :status2:text "Transferring "
   534 set :status2:item @coal
   535 set :status2:block .thoriumGenerator
 
   931 sensor *tmp312 :fetchBlock:block @itemCapacity
   932 op min :transportStatus:target *tmp312 30
   933 set :transportStatus:item :fetchBlock:item
-    * setaddr :transportStatus*retaddr *label272 (h:*label272)
-    * call *label12 *invalid :transportStatus*retval (m:*label272) (h:*label272)
-    * label *label272
+  934 label *label525
+  935 write :transportStatus:target .display ".transportTarget"
+  936 write :transportStatus:item .display ".transportItem"
+  937 label *label526
   938 set :status2:text "Fetching "
   939 set :status2:item :fetchBlock:item
   940 set :status2:block :fetchBlock:block
 
  1178 label *label332
  1179 return :status2*retaddr
  1180 end
-    * label *label12
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
-    * label *label333
-    * return :transportStatus*retaddr
-    * end
  1181 label *label16
  1182 label *label495
  1183 write "Moving..." .display ".status3"
 
  1265 op min :mineOre:amount :mineOre:amount 30
  1266 set :transportStatus:target :mineOre:amount
  1267 set :transportStatus:item :mineOre:ore
-    * setaddr :transportStatus*retaddr *label358 (h:*label358)
-    * call *label12 *invalid :transportStatus*retval (m:*label358) (h:*label358)
-    * label *label358
+ 1268 label *label527
+ 1269 write :transportStatus:target .display ".transportTarget"
+ 1270 write :transportStatus:item .display ".transportItem"
+ 1271 label *label528
  1272 label *label506
  1273 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
  1274 jump *label508 notEqual *tmp445 false

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   528 set :transportStatus:item @coal
   529 label *label523
   530 write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  531 write @coal .display ".transportItem"
   532 label *label524
   533 set :status2:text "Transferring "
   534 set :status2:item @coal
 
   933 set :transportStatus:item :fetchBlock:item
   934 label *label525
   935 write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+  936 write :fetchBlock:item .display ".transportItem"
   937 label *label526
   938 set :status2:text "Fetching "
   939 set :status2:item :fetchBlock:item
 
  1266 set :transportStatus:target :mineOre:amount
  1267 set :transportStatus:item :mineOre:ore
  1268 label *label527
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1269 write :mineOre:amount .display ".transportTarget"
+ 1270 write :mineOre:ore .display ".transportItem"
  1271 label *label528
  1272 label *label506
  1273 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   525 label *label483
   526 sensor *tmp330 .thoriumGenerator @itemCapacity
   527 op min :transportStatus:target *tmp330 30
-    * set :transportStatus:item @coal
   528 label *label523
   529 write :transportStatus:target .display ".transportTarget"
   530 write @coal .display ".transportItem"
 
   929 label *label23
   930 sensor *tmp312 :fetchBlock:block @itemCapacity
   931 op min :transportStatus:target *tmp312 30
-    * set :transportStatus:item :fetchBlock:item
   932 label *label525
   933 write :transportStatus:target .display ".transportTarget"
   934 write :fetchBlock:item .display ".transportItem"
 
  1262 label *label21
  1263 op min :mineOre:amount :mineOre:amount 30
  1264 set :transportStatus:target :mineOre:amount
-    * set :transportStatus:item :mineOre:ore
  1265 label *label527
  1266 write :mineOre:amount .display ".transportTarget"
  1267 write :mineOre:ore .display ".transportItem"

Modifications by Inline function call at Actions.mnd:135:5 (+1 instructions):
 
   936 set :status2:text "Fetching "
   937 set :status2:item :fetchBlock:item
   938 set :status2:block :fetchBlock:block
-    * setaddr :status2*retaddr *label273 (h:*label273)
-    * call *label10 *invalid :status2*retval (m:*label273) (h:*label273)
-    * label *label273
+  939 label *label529
+  940 write :status2:text .display ".status2"
+  941 write :status2:item .display ".item2"
+  942 write :status2:block .display ".block2"
+  943 label *label530
   944 sensor *tmp314 :fetchBlock:block @x
   945 sensor *tmp315 :fetchBlock:block @y
   946 set :moveToEmpty:x *tmp314

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   937 set :status2:item :fetchBlock:item
   938 set :status2:block :fetchBlock:block
   939 label *label529
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  940 write "Fetching " .display ".status2"
+  941 write :fetchBlock:item .display ".item2"
+  942 write :fetchBlock:block .display ".block2"
   943 label *label530
   944 sensor *tmp314 :fetchBlock:block @x
   945 sensor *tmp315 :fetchBlock:block @y

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
   933 write :transportStatus:target .display ".transportTarget"
   934 write :fetchBlock:item .display ".transportItem"
   935 label *label526
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
   936 label *label529
   937 write "Fetching " .display ".status2"
   938 write :fetchBlock:item .display ".item2"

Modifications by Inline function 'status2' defined at Actions.mnd:11:1 (-2 instructions):
 
   532 set :status2:text "Transferring "
   533 set :status2:item @coal
   534 set :status2:block .thoriumGenerator
-    * setaddr :status2*retaddr *label485 (h:*label485)
-    * call *label10 *invalid :status2*retval (m:*label485) (h:*label485)
-    * label *label485
+  535 label *label531
+  536 write :status2:text .display ".status2"
+  537 write :status2:item .display ".item2"
+  538 write :status2:block .display ".block2"
+  539 label *label532
   540 set :moveToEmpty:x .coreX
   541 set :moveToEmpty:y .coreY
   542 setaddr :moveToEmpty*retaddr *label486 (h:*label486)
 
   916 set :status2:text "Mining "
   917 set :status2:item :mineOre.1:ore
   918 set :status2:block "core"
-    * setaddr :status2*retaddr *label269 (h:*label269)
-    * call *label10 *invalid :status2*retval (m:*label269) (h:*label269)
-    * label *label269
+  919 label *label533
+  920 write :status2:text .display ".status2"
+  921 write :status2:item .display ".item2"
+  922 write :status2:block .display ".block2"
+  923 label *label534
   924 set :mineOre:ore :mineOre.1:ore
   925 set :mineOre:amount 30
   926 set :mineOre:block .core
 
   981 set :status2:text "Supplying "
   982 set :status2:item :supplyBlock:ore
   983 set :status2:block :supplyBlock:block
-    * setaddr :status2*retaddr *label283 (h:*label283)
-    * call *label10 *invalid :status2*retval (m:*label283) (h:*label283)
-    * label *label283
+  984 label *label535
+  985 write :status2:text .display ".status2"
+  986 write :status2:item .display ".item2"
+  987 write :status2:block .display ".block2"
+  988 label *label536
   989 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   990 sensor *tmp326 :supplyBlock:block :supplyBlock:ore
   991 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
 
  1174 label *label329
  1175 return :buildBlock*retaddr
  1176 end
-    * label *label10
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
-    * label *label332
-    * return :status2*retaddr
-    * end
  1177 label *label16
  1178 label *label495
  1179 write "Moving..." .display ".status3"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   533 set :status2:item @coal
   534 set :status2:block .thoriumGenerator
   535 label *label531
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  536 write "Transferring " .display ".status2"
+  537 write @coal .display ".item2"
+  538 write .thoriumGenerator .display ".block2"
   539 label *label532
   540 set :moveToEmpty:x .coreX
   541 set :moveToEmpty:y .coreY
 
   917 set :status2:item :mineOre.1:ore
   918 set :status2:block "core"
   919 label *label533
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  920 write "Mining " .display ".status2"
+  921 write :mineOre.1:ore .display ".item2"
+  922 write "core" .display ".block2"
   923 label *label534
   924 set :mineOre:ore :mineOre.1:ore
   925 set :mineOre:amount 30
 
   982 set :status2:item :supplyBlock:ore
   983 set :status2:block :supplyBlock:block
   984 label *label535
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+  985 write "Supplying " .display ".status2"
+  986 write :supplyBlock:ore .display ".item2"
+  987 write :supplyBlock:block .display ".block2"
   988 label *label536
   989 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   990 sensor *tmp326 :supplyBlock:block :supplyBlock:ore

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-9 instructions):
 
   529 write :transportStatus:target .display ".transportTarget"
   530 write @coal .display ".transportItem"
   531 label *label524
-    * set :status2:text "Transferring "
-    * set :status2:item @coal
-    * set :status2:block .thoriumGenerator
   532 label *label531
   533 write "Transferring " .display ".status2"
   534 write @coal .display ".item2"
 
   910 return :lineUpUnits*retaddr
   911 end
   912 label *label22
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
   913 label *label533
   914 write "Mining " .display ".status2"
   915 write :mineOre.1:ore .display ".item2"
 
   972 return :fetchBlock*retaddr
   973 end
   974 label *label24
-    * set :status2:text "Supplying "
-    * set :status2:item :supplyBlock:ore
-    * set :status2:block :supplyBlock:block
   975 label *label535
   976 write "Supplying " .display ".status2"
   977 write :supplyBlock:ore .display ".item2"

Modifications by Inline function 'error' defined at Actions.mnd:31:1 (-4 instructions):
 
    67 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    68 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    69 set :error:error "Cannot locate spot for titanium drill"
-    * setaddr :error*retaddr *label58 (h:*label58)
-    * call *label13 *invalid :error*retval (m:*label58) (h:*label58)
-    * label *label58
+   70 label *label537
+   71 set .ERROR :error:error
+   72 stop
+   73 label *label538
    74 label *label56
    75 label *label57
    76 write @pneumatic-drill processor1 ".nextBlock"
 
   336 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   337 jump *label123 notEqual :buildThoriumDrill:result false
   338 set :error:error "Cannot locate spot for thorium drill"
-    * setaddr :error*retaddr *label125 (h:*label125)
-    * call *label13 *invalid :error*retval (m:*label125) (h:*label125)
-    * label *label125
+  339 label *label539
+  340 set .ERROR :error:error
+  341 stop
+  342 label *label540
   343 label *label123
   344 label *label124
   345 write @laser-drill processor5 ":buildBlockAt:block"
 
   498 label *label157
   499 label *label150
   500 end
-    * label *label13
-    * set .ERROR :error:error
-    * stop
-    * label *label162
-    * return :error*retaddr
-    * end
   501 label *label33
   502 sensor *tmp228 .core @silicon
   503 op sub *tmp229 .targetSilicon *tmp228
 
  1255 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
  1256 jump *label508 notEqual *tmp445 false
  1257 set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label507 (h:*label507)
-    * call *label13 *invalid :error*retval (m:*label507) (h:*label507)
-    * label *label507
+ 1258 label *label541
+ 1259 set .ERROR :error:error
+ 1260 stop
+ 1261 label *label542
  1262 label *label508
  1263 label *label509
  1264 label *label510

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
    68 jump *label56 notEqual :buildFirstTitaniumDrill:result false
    69 set :error:error "Cannot locate spot for titanium drill"
    70 label *label537
-    * set .ERROR :error:error
+   71 set .ERROR "Cannot locate spot for titanium drill"
    72 stop
    73 label *label538
    74 label *label56
 
   337 jump *label123 notEqual :buildThoriumDrill:result false
   338 set :error:error "Cannot locate spot for thorium drill"
   339 label *label539
-    * set .ERROR :error:error
+  340 set .ERROR "Cannot locate spot for thorium drill"
   341 stop
   342 label *label540
   343 label *label123
 
  1246 end
  1247 label *label21
  1248 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus:target :mineOre:amount
  1249 label *label527
  1250 write :mineOre:amount .display ".transportTarget"
  1251 write :mineOre:ore .display ".transportItem"
 
  1255 jump *label508 notEqual *tmp445 false
  1256 set :error:error "Cannot locate ore"
  1257 label *label541
-    * set .ERROR :error:error
+ 1258 set .ERROR "Cannot locate ore"
  1259 stop
  1260 label *label542
  1261 label *label508

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-3 instructions):
 
    66 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
    67 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    68 jump *label56 notEqual :buildFirstTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
    69 label *label537
    70 set .ERROR "Cannot locate spot for titanium drill"
    71 stop
 
   334 jump *label122 equal *tmp191 false
   335 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   336 jump *label123 notEqual :buildThoriumDrill:result false
-    * set :error:error "Cannot locate spot for thorium drill"
   337 label *label539
   338 set .ERROR "Cannot locate spot for thorium drill"
   339 stop
 
  1251 label *label506
  1252 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
  1253 jump *label508 notEqual *tmp445 false
-    * set :error:error "Cannot locate ore"
  1254 label *label541
  1255 set .ERROR "Cannot locate ore"
  1256 stop

Modifications by Inline function call at Actions.mnd:137:5 (+3 instructions):
 
   937 setaddr :moveToEmpty*retaddr *label274 (h:*label274)
   938 call *label16 *invalid :moveToEmpty*retval (m:*label274) (h:*label274)
   939 label *label274
-    * setaddr :dropAll*retaddr *label275 (h:*label275)
-    * call *label17 *invalid :dropAll*retval (m:*label275) (h:*label275)
-    * label *label275
+  940 label *label543
+  941 label *label544
+  942 sensor *tmp417 @unit @firstItem
+  943 jump *label547 equal *tmp417 null
+  944 label *label545
+  945 ucontrol itemDrop @air 1000
+  946 label *label546
+  947 sensor *tmp417 @unit @firstItem
+  948 jump *label545 notEqual *tmp417 null
+  949 label *label547
+  950 label *label548
   951 label *label276
   952 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   953 sensor :fetchBlock:unitItem @unit @firstItem

Modifications by Inline function 'moveToEmpty' defined at Actions.mnd:50:1 (+6 instructions):
 
   530 label *label532
   531 set :moveToEmpty:x .coreX
   532 set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label486 (h:*label486)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label486) (h:*label486)
-    * label *label486
+  533 label *label549
+  534 label *label550
+  535 write "Moving..." .display ".status3"
+  536 label *label551
+  537 label *label552
+  538 sensor *tmp412 @unit @firstItem
+  539 jump *label553 equal *tmp412 null
+  540 ucontrol itemDrop @air 1000
+  541 label *label553
+  542 label *label554
+  543 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  544 label *label555
+  545 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
+  546 jump *label552 equal *tmp415 false
+  547 label *label556
+  548 label *label557
   549 setaddr :dropAll*retaddr *label487 (h:*label487)
   550 call *label17 *invalid :dropAll*retval (m:*label487) (h:*label487)
   551 label *label487
 
   947 sensor *tmp315 :fetchBlock:block @y
   948 set :moveToEmpty:x *tmp314
   949 set :moveToEmpty:y *tmp315
-    * setaddr :moveToEmpty*retaddr *label274 (h:*label274)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label274) (h:*label274)
-    * label *label274
+  950 label *label558
+  951 label *label559
+  952 write "Moving..." .display ".status3"
+  953 label *label560
+  954 label *label561
+  955 sensor *tmp412 @unit @firstItem
+  956 jump *label562 equal *tmp412 null
+  957 ucontrol itemDrop @air 1000
+  958 label *label562
+  959 label *label563
+  960 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  961 label *label564
+  962 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
+  963 jump *label561 equal *tmp415 false
+  964 label *label565
+  965 label *label566
   966 label *label543
   967 label *label544
   968 sensor *tmp417 @unit @firstItem
 
  1193 label *label329
  1194 return :buildBlock*retaddr
  1195 end
-    * label *label16
-    * label *label495
-    * write "Moving..." .display ".status3"
-    * label *label496
-    * label *label336
-    * sensor *tmp412 @unit @firstItem
-    * jump *label339 equal *tmp412 null
-    * ucontrol itemDrop @air 1000
-    * label *label339
-    * label *label340
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label337
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
-    * jump *label336 equal *tmp415 false
-    * label *label338
-    * label *label334
-    * return :moveToEmpty*retaddr
-    * end
  1196 label *label17
  1197 label *label342
  1198 sensor *tmp417 @unit @firstItem
 
  1278 set :mineOre:y :locateOre:y
  1279 set :moveToEmpty:x :locateOre:x
  1280 set :moveToEmpty:y :locateOre:y
-    * setaddr :moveToEmpty*retaddr *label360 (h:*label360)
-    * call *label16 *invalid :moveToEmpty*retval (m:*label360) (h:*label360)
-    * label *label360
+ 1281 label *label567
+ 1282 label *label568
+ 1283 write "Moving..." .display ".status3"
+ 1284 label *label569
+ 1285 label *label570
+ 1286 sensor *tmp412 @unit @firstItem
+ 1287 jump *label571 equal *tmp412 null
+ 1288 ucontrol itemDrop @air 1000
+ 1289 label *label571
+ 1290 label *label572
+ 1291 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+ 1292 label *label573
+ 1293 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
+ 1294 jump *label570 equal *tmp415 false
+ 1295 label *label574
+ 1296 label *label575
  1297 sensor *tmp430 @unit @firstItem
  1298 jump *label361 equal *tmp430 :mineOre:ore
  1299 setaddr :dropAll*retaddr *label363 (h:*label363)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   540 ucontrol itemDrop @air 1000
   541 label *label553
   542 label *label554
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  543 ucontrol approach .coreX .coreY 5.5
   544 label *label555
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
+  545 ucontrol within .coreX .coreY 6 *tmp415
   546 jump *label552 equal *tmp415 false
   547 label *label556
   548 label *label557
 
   957 ucontrol itemDrop @air 1000
   958 label *label562
   959 label *label563
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+  960 ucontrol approach *tmp314 *tmp315 5.5
   961 label *label564
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
+  962 ucontrol within *tmp314 *tmp315 6 *tmp415
   963 jump *label561 equal *tmp415 false
   964 label *label565
   965 label *label566
 
  1288 ucontrol itemDrop @air 1000
  1289 label *label571
  1290 label *label572
-    * ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
+ 1291 ucontrol approach :locateOre:x :locateOre:y 5.5
  1292 label *label573
-    * ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp415
+ 1293 ucontrol within :locateOre:x :locateOre:y 6 *tmp415
  1294 jump *label570 equal *tmp415 false
  1295 label *label574
  1296 label *label575

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-6 instructions):
 
   528 write @coal .display ".item2"
   529 write .thoriumGenerator .display ".block2"
   530 label *label532
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
   531 label *label549
   532 label *label550
   533 write "Moving..." .display ".status3"
 
   943 label *label530
   944 sensor *tmp314 :fetchBlock:block @x
   945 sensor *tmp315 :fetchBlock:block @y
-    * set :moveToEmpty:x *tmp314
-    * set :moveToEmpty:y *tmp315
   946 label *label558
   947 label *label559
   948 write "Moving..." .display ".status3"
 
  1272 label *label510
  1273 set :mineOre:x :locateOre:x
  1274 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :locateOre:x
-    * set :moveToEmpty:y :locateOre:y
  1275 label *label567
  1276 label *label568
  1277 write "Moving..." .display ".status3"

Modifications by Inline function 'dropAll' defined at Actions.mnd:59:1 (-1 instructions):
 
   544 jump *label552 equal *tmp415 false
   545 label *label556
   546 label *label557
-    * setaddr :dropAll*retaddr *label487 (h:*label487)
-    * call *label17 *invalid :dropAll*retval (m:*label487) (h:*label487)
-    * label *label487
+  547 label *label576
+  548 label *label577
+  549 sensor *tmp417 @unit @firstItem
+  550 jump *label580 equal *tmp417 null
+  551 label *label578
+  552 ucontrol itemDrop @air 1000
+  553 label *label579
+  554 sensor *tmp417 @unit @firstItem
+  555 jump *label578 notEqual *tmp417 null
+  556 label *label580
+  557 label *label581
   558 label *label488
   559 ucontrol itemTake .core @coal 30
   560 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
  1197 label *label329
  1198 return :buildBlock*retaddr
  1199 end
-    * label *label17
-    * label *label342
-    * sensor *tmp417 @unit @firstItem
-    * jump *label344 equal *tmp417 null
-    * label *label518
-    * ucontrol itemDrop @air 1000
-    * label *label343
-    * sensor *tmp417 @unit @firstItem
-    * jump *label518 notEqual *tmp417 null
-    * label *label344
-    * label *label341
-    * return :dropAll*retaddr
-    * end
  1200 label *label19
  1201 label *label497
  1202 write "Depositing..." .display ".status3"
 
  1285 label *label575
  1286 sensor *tmp430 @unit @firstItem
  1287 jump *label361 equal *tmp430 :mineOre:ore
-    * setaddr :dropAll*retaddr *label363 (h:*label363)
-    * call *label17 *invalid :dropAll*retval (m:*label363) (h:*label363)
-    * label *label363
+ 1288 label *label582
+ 1289 label *label583
+ 1290 sensor *tmp417 @unit @firstItem
+ 1291 jump *label586 equal *tmp417 null
+ 1292 label *label584
+ 1293 ucontrol itemDrop @air 1000
+ 1294 label *label585
+ 1295 sensor *tmp417 @unit @firstItem
+ 1296 jump *label584 notEqual *tmp417 null
+ 1297 label *label586
+ 1298 label *label587
  1299 label *label361
  1300 label *label362
  1301 label *label499

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1311 jump *label367 always
  1312 label *label368
  1313 label *label369
-    * ucontrol mine :mineOre:x :mineOre:y
+ 1314 ucontrol mine :locateOre:x :locateOre:y
  1315 jump *label370 lessThanEq @second :mineOre:stop
  1316 jump *label367 always
  1317 label *label370

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1265 label *label508
  1266 label *label509
  1267 label *label510
-    * set :mineOre:x :locateOre:x
-    * set :mineOre:y :locateOre:y
  1268 label *label567
  1269 label *label568
  1270 write "Moving..." .display ".status3"

Modifications by Inline function call at CoreBuilder.mnd:133:5 (+6 instructions):
 
   595 write "Phase 1: supplying base" .display ".status1"
   596 label *label460
   597 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label179 (h:*label179)
-    * call *label22 *invalid :mineOre.1*retval (m:*label179) (h:*label179)
-    * label *label179
+  598 label *label588
+  599 label *label589
+  600 write "Mining " .display ".status2"
+  601 write :mineOre.1:ore .display ".item2"
+  602 write "core" .display ".block2"
+  603 label *label590
+  604 set :mineOre:ore :mineOre.1:ore
+  605 set :mineOre:amount 30
+  606 set :mineOre:block .core
+  607 setaddr :mineOre*retaddr *label591 (h:*label591)
+  608 call *label21 *invalid :mineOre*retval (m:*label591) (h:*label591)
+  609 label *label591
+  610 label *label592
   611 label *label177
   612 jump *label176 always
   613 label *label175

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   598 label *label588
   599 label *label589
   600 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+  601 write @coal .display ".item2"
   602 write "core" .display ".block2"
   603 label *label590
-    * set :mineOre:ore :mineOre.1:ore
+  604 set :mineOre:ore @coal
   605 set :mineOre:amount 30
   606 set :mineOre:block .core
   607 setaddr :mineOre*retaddr *label591 (h:*label591)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   594 label *label459
   595 write "Phase 1: supplying base" .display ".status1"
   596 label *label460
-    * set :mineOre.1:ore @coal
   597 label *label588
   598 label *label589
   599 write "Mining " .display ".status2"

Modifications by Inline function call at Actions.mnd:147:5 (+23 instructions):
 
  1006 label *label278
  1007 set :depositItems:block .core
  1008 set :depositItems:item :fetchBlock:item
-    * setaddr :depositItems*retaddr *label281 (h:*label281)
-    * call *label19 *invalid :depositItems*retval (m:*label281) (h:*label281)
-    * label *label281
+ 1009 label *label593
+ 1010 label *label594
+ 1011 write "Depositing..." .display ".status3"
+ 1012 label *label595
+ 1013 sensor *tmp419 @unit @firstItem
+ 1014 jump *label609 notEqual *tmp419 :depositItems:item
+ 1015 label *label596
+ 1016 sensor *tmp443 :depositItems:block @x
+ 1017 sensor *tmp444 :depositItems:block @y
+ 1018 label *label597
+ 1019 label *label598
+ 1020 write "Moving..." .display ".status3"
+ 1021 label *label599
+ 1022 label *label600
+ 1023 ucontrol within *tmp443 *tmp444 6 *tmp449
+ 1024 jump *label603 notEqual *tmp449 false
+ 1025 label *label601
+ 1026 ucontrol approach *tmp443 *tmp444 5.5
+ 1027 label *label602
+ 1028 ucontrol within *tmp443 *tmp444 6 *tmp449
+ 1029 jump *label601 equal *tmp449 false
+ 1030 label *label603
+ 1031 label *label604
+ 1032 label *label605
+ 1033 sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1034 label *label606
+ 1035 ucontrol itemDrop :depositItems:block 30
+ 1036 label *label607
+ 1037 sensor *tmp423 @unit @firstItem
+ 1038 op mul *tmp424 *tmp423 :depositItems:cap
+ 1039 sensor *tmp425 :depositItems:block :depositItems:item
+ 1040 jump *label606 greaterThan *tmp424 *tmp425
+ 1041 label *label608
+ 1042 jump *label614 always
+ 1043 label *label609
+ 1044 label *label610
+ 1045 sensor *tmp427 @unit @firstItem
+ 1046 jump *label613 equal *tmp427 null
+ 1047 label *label611
+ 1048 ucontrol itemDrop @air 1000
+ 1049 label *label612
+ 1050 sensor *tmp427 @unit @firstItem
+ 1051 jump *label611 notEqual *tmp427 null
+ 1052 label *label613
+ 1053 label *label614
+ 1054 label *label615
+ 1055 write 0 .display ".transportTarget"
+ 1056 write null .display ".transportItem"
+ 1057 label *label616
+ 1058 label *label617
  1059 label *label271
  1060 return :fetchBlock*retaddr
  1061 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1011 write "Depositing..." .display ".status3"
  1012 label *label595
  1013 sensor *tmp419 @unit @firstItem
-    * jump *label609 notEqual *tmp419 :depositItems:item
+ 1014 jump *label609 notEqual *tmp419 :fetchBlock:item
  1015 label *label596
-    * sensor *tmp443 :depositItems:block @x
-    * sensor *tmp444 :depositItems:block @y
+ 1016 sensor *tmp443 .core @x
+ 1017 sensor *tmp444 .core @y
  1018 label *label597
  1019 label *label598
  1020 write "Moving..." .display ".status3"
 
  1030 label *label603
  1031 label *label604
  1032 label *label605
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1033 sensor :depositItems:cap .core @itemCapacity
  1034 label *label606
-    * ucontrol itemDrop :depositItems:block 30
+ 1035 ucontrol itemDrop .core 30
  1036 label *label607
  1037 sensor *tmp423 @unit @firstItem
  1038 op mul *tmp424 *tmp423 :depositItems:cap
-    * sensor *tmp425 :depositItems:block :depositItems:item
+ 1039 sensor *tmp425 .core :fetchBlock:item
  1040 jump *label606 greaterThan *tmp424 *tmp425
  1041 label *label608
  1042 jump *label614 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
  1004 op land *tmp324 *tmp322 *tmp323
  1005 jump *label276 notEqual *tmp324 false
  1006 label *label278
-    * set :depositItems:block .core
-    * set :depositItems:item :fetchBlock:item
  1007 label *label593
  1008 label *label594
  1009 write "Depositing..." .display ".status3"

Modifications by Inline function 'depositItems' defined at Actions.mnd:74:1 (+19 instructions):
 
   574 label *label492
   575 set :depositItems:block .thoriumGenerator
   576 set :depositItems:item @coal
-    * setaddr :depositItems*retaddr *label493 (h:*label493)
-    * call *label19 *invalid :depositItems*retval (m:*label493) (h:*label493)
-    * label *label493
+  577 label *label618
+  578 label *label619
+  579 write "Depositing..." .display ".status3"
+  580 label *label620
+  581 sensor *tmp419 @unit @firstItem
+  582 jump *label634 notEqual *tmp419 :depositItems:item
+  583 label *label621
+  584 sensor *tmp443 :depositItems:block @x
+  585 sensor *tmp444 :depositItems:block @y
+  586 label *label622
+  587 label *label623
+  588 write "Moving..." .display ".status3"
+  589 label *label624
+  590 label *label625
+  591 ucontrol within *tmp443 *tmp444 6 *tmp449
+  592 jump *label628 notEqual *tmp449 false
+  593 label *label626
+  594 ucontrol approach *tmp443 *tmp444 5.5
+  595 label *label627
+  596 ucontrol within *tmp443 *tmp444 6 *tmp449
+  597 jump *label626 equal *tmp449 false
+  598 label *label628
+  599 label *label629
+  600 label *label630
+  601 sensor :depositItems:cap :depositItems:block @itemCapacity
+  602 label *label631
+  603 ucontrol itemDrop :depositItems:block 30
+  604 label *label632
+  605 sensor *tmp423 @unit @firstItem
+  606 op mul *tmp424 *tmp423 :depositItems:cap
+  607 sensor *tmp425 :depositItems:block :depositItems:item
+  608 jump *label631 greaterThan *tmp424 *tmp425
+  609 label *label633
+  610 jump *label639 always
+  611 label *label634
+  612 label *label635
+  613 sensor *tmp427 @unit @firstItem
+  614 jump *label638 equal *tmp427 null
+  615 label *label636
+  616 ucontrol itemDrop @air 1000
+  617 label *label637
+  618 sensor *tmp427 @unit @firstItem
+  619 jump *label636 notEqual *tmp427 null
+  620 label *label638
+  621 label *label639
+  622 label *label640
+  623 write 0 .display ".transportTarget"
+  624 write null .display ".transportItem"
+  625 label *label641
+  626 label *label642
   627 label *label494
   628 label *label171
   629 label *label168
 
  1298 label *label329
  1299 return :buildBlock*retaddr
  1300 end
-    * label *label19
-    * label *label497
-    * write "Depositing..." .display ".status3"
-    * label *label498
-    * sensor *tmp419 @unit @firstItem
-    * jump *label347 notEqual *tmp419 :depositItems:item
-    * label *label503
-    * sensor *tmp443 :depositItems:block @x
-    * sensor *tmp444 :depositItems:block @y
-    * label *label511
-    * label *label512
-    * write "Moving..." .display ".status3"
-    * label *label513
-    * label *label514
-    * ucontrol within *tmp443 *tmp444 6 *tmp449
-    * jump *label516 notEqual *tmp449 false
-    * label *label519
-    * ucontrol approach *tmp443 *tmp444 5.5
-    * label *label515
-    * ucontrol within *tmp443 *tmp444 6 *tmp449
-    * jump *label519 equal *tmp449 false
-    * label *label516
-    * label *label517
-    * label *label505
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
-    * label *label350
-    * ucontrol itemDrop :depositItems:block 30
-    * label *label351
-    * sensor *tmp423 @unit @firstItem
-    * op mul *tmp424 *tmp423 :depositItems:cap
-    * sensor *tmp425 :depositItems:block :depositItems:item
-    * jump *label350 greaterThan *tmp424 *tmp425
-    * label *label352
-    * jump *label348 always
-    * label *label347
-    * label *label353
-    * sensor *tmp427 @unit @firstItem
-    * jump *label355 equal *tmp427 null
-    * label *label520
-    * ucontrol itemDrop @air 1000
-    * label *label354
-    * sensor *tmp427 @unit @firstItem
-    * jump *label520 notEqual *tmp427 null
-    * label *label355
-    * label *label348
-    * label *label521
-    * write 0 .display ".transportTarget"
-    * write null .display ".transportItem"
-    * label *label522
-    * label *label345
-    * return :depositItems*retaddr
-    * end
  1301 label *label21
  1302 op min :mineOre:amount :mineOre:amount 30
  1303 label *label527
 
  1370 ucontrol unbind
  1371 set :depositItems:block :mineOre:block
  1372 set :depositItems:item :mineOre:ore
-    * setaddr :depositItems*retaddr *label372 (h:*label372)
-    * call *label19 *invalid :depositItems*retval (m:*label372) (h:*label372)
-    * label *label372
+ 1373 label *label643
+ 1374 label *label644
+ 1375 write "Depositing..." .display ".status3"
+ 1376 label *label645
+ 1377 sensor *tmp419 @unit @firstItem
+ 1378 jump *label659 notEqual *tmp419 :depositItems:item
+ 1379 label *label646
+ 1380 sensor *tmp443 :depositItems:block @x
+ 1381 sensor *tmp444 :depositItems:block @y
+ 1382 label *label647
+ 1383 label *label648
+ 1384 write "Moving..." .display ".status3"
+ 1385 label *label649
+ 1386 label *label650
+ 1387 ucontrol within *tmp443 *tmp444 6 *tmp449
+ 1388 jump *label653 notEqual *tmp449 false
+ 1389 label *label651
+ 1390 ucontrol approach *tmp443 *tmp444 5.5
+ 1391 label *label652
+ 1392 ucontrol within *tmp443 *tmp444 6 *tmp449
+ 1393 jump *label651 equal *tmp449 false
+ 1394 label *label653
+ 1395 label *label654
+ 1396 label *label655
+ 1397 sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1398 label *label656
+ 1399 ucontrol itemDrop :depositItems:block 30
+ 1400 label *label657
+ 1401 sensor *tmp423 @unit @firstItem
+ 1402 op mul *tmp424 *tmp423 :depositItems:cap
+ 1403 sensor *tmp425 :depositItems:block :depositItems:item
+ 1404 jump *label656 greaterThan *tmp424 *tmp425
+ 1405 label *label658
+ 1406 jump *label664 always
+ 1407 label *label659
+ 1408 label *label660
+ 1409 sensor *tmp427 @unit @firstItem
+ 1410 jump *label663 equal *tmp427 null
+ 1411 label *label661
+ 1412 ucontrol itemDrop @air 1000
+ 1413 label *label662
+ 1414 sensor *tmp427 @unit @firstItem
+ 1415 jump *label661 notEqual *tmp427 null
+ 1416 label *label663
+ 1417 label *label664
+ 1418 label *label665
+ 1419 write 0 .display ".transportTarget"
+ 1420 write null .display ".transportItem"
+ 1421 label *label666
+ 1422 label *label667
  1423 label *label357
  1424 return :mineOre*retaddr
  1425 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   579 write "Depositing..." .display ".status3"
   580 label *label620
   581 sensor *tmp419 @unit @firstItem
-    * jump *label634 notEqual *tmp419 :depositItems:item
+  582 jump *label634 notEqual *tmp419 @coal
   583 label *label621
-    * sensor *tmp443 :depositItems:block @x
-    * sensor *tmp444 :depositItems:block @y
+  584 sensor *tmp443 .thoriumGenerator @x
+  585 sensor *tmp444 .thoriumGenerator @y
   586 label *label622
   587 label *label623
   588 write "Moving..." .display ".status3"
 
   598 label *label628
   599 label *label629
   600 label *label630
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+  601 sensor :depositItems:cap .thoriumGenerator @itemCapacity
   602 label *label631
-    * ucontrol itemDrop :depositItems:block 30
+  603 ucontrol itemDrop .thoriumGenerator 30
   604 label *label632
   605 sensor *tmp423 @unit @firstItem
   606 op mul *tmp424 *tmp423 :depositItems:cap
-    * sensor *tmp425 :depositItems:block :depositItems:item
+  607 sensor *tmp425 .thoriumGenerator @coal
   608 jump *label631 greaterThan *tmp424 *tmp425
   609 label *label633
   610 jump *label639 always
 
  1375 write "Depositing..." .display ".status3"
  1376 label *label645
  1377 sensor *tmp419 @unit @firstItem
-    * jump *label659 notEqual *tmp419 :depositItems:item
+ 1378 jump *label659 notEqual *tmp419 :mineOre:ore
  1379 label *label646
-    * sensor *tmp443 :depositItems:block @x
-    * sensor *tmp444 :depositItems:block @y
+ 1380 sensor *tmp443 :mineOre:block @x
+ 1381 sensor *tmp444 :mineOre:block @y
  1382 label *label647
  1383 label *label648
  1384 write "Moving..." .display ".status3"
 
  1394 label *label653
  1395 label *label654
  1396 label *label655
-    * sensor :depositItems:cap :depositItems:block @itemCapacity
+ 1397 sensor :depositItems:cap :mineOre:block @itemCapacity
  1398 label *label656
-    * ucontrol itemDrop :depositItems:block 30
+ 1399 ucontrol itemDrop :mineOre:block 30
  1400 label *label657
  1401 sensor *tmp423 @unit @firstItem
  1402 op mul *tmp424 *tmp423 :depositItems:cap
-    * sensor *tmp425 :depositItems:block :depositItems:item
+ 1403 sensor *tmp425 :mineOre:block :mineOre:ore
  1404 jump *label656 greaterThan *tmp424 *tmp425
  1405 label *label658
  1406 jump *label664 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   572 op land *tmp340 *tmp338 *tmp339
   573 jump *label488 notEqual *tmp340 false
   574 label *label492
-    * set :depositItems:block .thoriumGenerator
-    * set :depositItems:item @coal
   575 label *label618
   576 label *label619
   577 write "Depositing..." .display ".status3"
 
  1366 jump *label365 lessThan *tmp441 :mineOre:amount
  1367 label *label367
  1368 ucontrol unbind
-    * set :depositItems:block :mineOre:block
-    * set :depositItems:item :mineOre:ore
  1369 label *label643
  1370 label *label644
  1371 write "Depositing..." .display ".status3"

Modifications by Inline function call at CoreBuilder.mnd:141:13 (+10 instructions):
 
   511 jump *label170 greaterThanEq *tmp235 50
   512 set :supplyBlock:block .thoriumGenerator
   513 set :supplyBlock:ore @coal
-    * setaddr :supplyBlock*retaddr *label172 (h:*label172)
-    * call *label24 *invalid :supplyBlock*retval (m:*label172) (h:*label172)
-    * label *label172
+  514 label *label668
+  515 label *label669
+  516 write "Supplying " .display ".status2"
+  517 write :supplyBlock:ore .display ".item2"
+  518 write :supplyBlock:block .display ".block2"
+  519 label *label670
+  520 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
+  521 sensor *tmp326 :supplyBlock:block :supplyBlock:ore
+  522 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
+  523 jump *label672 lessThanEq :supplyBlock:missing 0
+  524 set :mineOre:ore :supplyBlock:ore
+  525 set :mineOre:amount :supplyBlock:blockCapacity
+  526 set :mineOre:block :supplyBlock:block
+  527 setaddr :mineOre*retaddr *label671 (h:*label671)
+  528 call *label21 *invalid :mineOre*retval (m:*label671) (h:*label671)
+  529 label *label671
+  530 label *label672
+  531 label *label673
+  532 label *label674
   533 jump *label171 always
   534 label *label170
   535 label *label483

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   514 label *label668
   515 label *label669
   516 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+  517 write @coal .display ".item2"
+  518 write .thoriumGenerator .display ".block2"
   519 label *label670
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp326 :supplyBlock:block :supplyBlock:ore
+  520 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
+  521 sensor *tmp326 .thoriumGenerator @coal
   522 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
   523 jump *label672 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  524 set :mineOre:ore @coal
   525 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+  526 set :mineOre:block .thoriumGenerator
   527 setaddr :mineOre*retaddr *label671 (h:*label671)
   528 call *label21 *invalid :mineOre*retval (m:*label671) (h:*label671)
   529 label *label671

Modifications by Replicate loop condition at CoreBuilder.mnd:205:5 (+30 instructions):
 
  1274 jump *label313 always
  1275 label *label313
  1276 jump *label312 notEqual *tmp381 false
+ 1277 label *label675
  1278 setaddr :supplyBase*retaddr *label328 (h:*label328)
  1279 call *label33 *invalid :supplyBase*retval (m:*label328) (h:*label328)
  1280 label *label328
  1281 label *label311
-    * jump *label310 always
+ 1282 sensor *tmp382 .core @copper
+ 1283 jump *label676 greaterThanEq *tmp382 .targetCopper
+ 1284 set *tmp381 false
+ 1285 jump *label690 always
+ 1286 label *label676
+ 1287 label *label677
+ 1288 sensor *tmp385 .core @lead
+ 1289 jump *label678 greaterThanEq *tmp385 .targetLead
+ 1290 set *tmp381 false
+ 1291 jump *label690 always
+ 1292 label *label678
+ 1293 label *label679
+ 1294 sensor *tmp388 .core @graphite
+ 1295 jump *label680 greaterThanEq *tmp388 .targetGraphite
+ 1296 set *tmp381 false
+ 1297 jump *label690 always
+ 1298 label *label680
+ 1299 label *label681
+ 1300 sensor *tmp391 .core @silicon
+ 1301 jump *label682 greaterThanEq *tmp391 .targetSilicon
+ 1302 set *tmp381 false
+ 1303 jump *label690 always
+ 1304 label *label682
+ 1305 label *label683
+ 1306 sensor *tmp394 .core @titanium
+ 1307 jump *label684 greaterThanEq *tmp394 .targetTitanium
+ 1308 set *tmp381 false
+ 1309 jump *label690 always
+ 1310 label *label684
+ 1311 label *label685
+ 1312 sensor *tmp397 .core @metaglass
+ 1313 jump *label686 greaterThanEq *tmp397 .targetMetaglass
+ 1314 set *tmp381 false
+ 1315 jump *label690 always
+ 1316 label *label686
+ 1317 label *label687
+ 1318 sensor *tmp400 .core @thorium
+ 1319 jump *label688 greaterThanEq *tmp400 .targetThorium
+ 1320 set *tmp381 false
+ 1321 jump *label690 always
+ 1322 label *label688
+ 1323 label *label689
+ 1324 set *tmp381 true
+ 1325 jump *label690 always
+ 1326 label *label690
+ 1327 jump *label675 equal *tmp381 false
  1328 label *label312
  1329 label *label299
  1330 return :meetTarget*retaddr

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1229 write :meetTarget:copper processor8 ".copperTarget"
  1230 label *label310
  1231 sensor *tmp382 .core @copper
-    * jump *label314 greaterThanEq *tmp382 .targetCopper
+ 1232 jump *label314 greaterThanEq *tmp382 :meetTarget:copper
  1233 set *tmp381 false
  1234 jump *label313 always
  1235 label *label314
 
  1241 label *label316
  1242 label *label317
  1243 sensor *tmp388 .core @graphite
-    * jump *label318 greaterThanEq *tmp388 .targetGraphite
+ 1244 jump *label318 greaterThanEq *tmp388 :meetTarget:graphite
  1245 set *tmp381 false
  1246 jump *label313 always
  1247 label *label318
  1248 label *label319
  1249 sensor *tmp391 .core @silicon
-    * jump *label320 greaterThanEq *tmp391 .targetSilicon
+ 1250 jump *label320 greaterThanEq *tmp391 :meetTarget:silicon
  1251 set *tmp381 false
  1252 jump *label313 always
  1253 label *label320
  1254 label *label321
  1255 sensor *tmp394 .core @titanium
-    * jump *label322 greaterThanEq *tmp394 .targetTitanium
+ 1256 jump *label322 greaterThanEq *tmp394 :meetTarget:titanium
  1257 set *tmp381 false
  1258 jump *label313 always
  1259 label *label322
  1260 label *label323
  1261 sensor *tmp397 .core @metaglass
-    * jump *label324 greaterThanEq *tmp397 .targetMetaglass
+ 1262 jump *label324 greaterThanEq *tmp397 :meetTarget:metaglass
  1263 set *tmp381 false
  1264 jump *label313 always
  1265 label *label324
  1266 label *label325
  1267 sensor *tmp400 .core @thorium
-    * jump *label326 greaterThanEq *tmp400 .targetThorium
+ 1268 jump *label326 greaterThanEq *tmp400 :meetTarget:thorium
  1269 set *tmp381 false
  1270 jump *label313 always
  1271 label *label326

Modifications by Replicate loop condition at CoreBuilder.mnd:408:5 (+1 instructions):
 
   267 label *label107
   268 read *tmp83 .controller ".polys"
   269 jump *label109 greaterThanEq *tmp83 3
+  270 label *label691
   271 setaddr :supplyBase*retaddr *label110 (h:*label110)
   272 call *label33 *invalid :supplyBase*retval (m:*label110) (h:*label110)
   273 label *label110
   274 label *label108
-    * jump *label107 always
+  275 read *tmp83 .controller ".polys"
+  276 jump *label691 lessThan *tmp83 3
   277 label *label109
   278 write 3 .controller ".flareTarget"
   279 write 3 processor1 ".flareTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:413:5 (+1 instructions):
 
   281 label *label112
   282 read *tmp81 .controller ".flares"
   283 jump *label114 greaterThanEq *tmp81 2
+  284 label *label692
   285 setaddr :supplyBase*retaddr *label115 (h:*label115)
   286 call *label33 *invalid :supplyBase*retval (m:*label115) (h:*label115)
   287 label *label115
   288 label *label113
-    * jump *label112 always
+  289 read *tmp81 .controller ".flares"
+  290 jump *label692 lessThan *tmp81 2
   291 label *label114
   292 set .graphiteSurplus 100
   293 write 5 .controller ".monoTarget"

Modifications by Replicate loop condition at CoreBuilder.mnd:432:5 (+1 instructions):
 
   425 label *label139
   426 read *tmp83 .controller ".polys"
   427 jump *label141 greaterThanEq *tmp83 5
+  428 label *label693
   429 setaddr :supplyBase*retaddr *label142 (h:*label142)
   430 call *label33 *invalid :supplyBase*retval (m:*label142) (h:*label142)
   431 label *label142
   432 label *label140
-    * jump *label139 always
+  433 read *tmp83 .controller ".polys"
+  434 jump *label693 lessThan *tmp83 5
   435 label *label141
   436 set :buildBlockFromCfg:cfg "A©JFJj-unloader32"
   437 set :buildBlockFromCfg:config @silicon

Modifications by Replicate loop condition at CoreBuilder.mnd:442:5 (+1 instructions):
 
   449 label *label146
   450 read *tmp84 .controller ".megas"
   451 jump *label148 greaterThanEq *tmp84 1
+  452 label *label694
   453 setaddr :supplyBase*retaddr *label149 (h:*label149)
   454 call *label33 *invalid :supplyBase*retval (m:*label149) (h:*label149)
   455 label *label149
   456 label *label147
-    * jump *label146 always
+  457 read *tmp84 .controller ".megas"
+  458 jump *label694 lessThan *tmp84 1
   459 label *label148
   460 control enabled processor7 false
   461 control enabled processor8 false

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-4 instructions):
 
    82 read *tmp140 processor5 ":buildFirstTitaniumDrillAt*finished"
    83 jump *label59 equal *tmp140 false
    84 read *tmp123 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * jump *label53 always
    85 label *label53
    86 set .titaniumDrill *tmp123
    87 write *tmp123 processor1 ".titaniumDrill"
 
   753 sensor *tmp266 .core @titanium
   754 op sub *tmp267 .targetTitanium *tmp266
   755 op min *tmp265 7 *tmp267
-    * jump *label206 always
   756 label *label206
   757 sensor *tmp269 .titaniumDrill @titanium
   758 jump *label207 greaterThanEq *tmp269 *tmp265
 
   909 write :buildBlock*retval .display :buildBlockFromCfg:cfg
   910 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
   911 set :buildBlockFromCfg*retval :buildBlock*retval
-    * jump *label244 always
   912 label *label244
   913 return :buildBlockFromCfg*retaddr
   914 end
 
  1359 read *tmp410 .blockBuilder ":buildBlockAt*finished"
  1360 jump *label331 equal *tmp410 false
  1361 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * jump *label329 always
  1362 label *label329
  1363 return :buildBlock*retaddr
  1364 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   109 write .core :buildBlockFromCfg*retval ".core"
   110 write bank1 :buildBlockFromCfg*retval ".bank"
   111 label *label387
-    * read *tmp147 @this "AJEMJJ-graphite-press0"
+  112 set *tmp147 AJEMJJ-graphite-press0
   113 write *tmp147 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
   114 label *label388
   115 label *label391
-    * read *tmp147 @this "AJTJK-battery1"
+  116 set *tmp147 AJTJK-battery1
   117 write *tmp147 :buildBlockFromCfg*retval "AJTJK-battery1"
   118 label *label392
   119 label *label395
-    * read *tmp147 @this "ALTJL-battery2"
+  120 set *tmp147 ALTJL-battery2
   121 write *tmp147 :buildBlockFromCfg*retval "ALTJL-battery2"
   122 label *label396
   123 label *label399
-    * read *tmp147 @this "AJRJM-combustion-generator3"
+  124 set *tmp147 AJRJM-combustion-generator3
   125 write *tmp147 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
   126 label *label400
   127 label *label403
-    * read *tmp147 @this "ALMQJN-silicon-smelter4"
+  128 set *tmp147 ALMQJN-silicon-smelter4
   129 write *tmp147 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
   130 label *label404
   131 label *label407
-    * read *tmp147 @this "A{LNJO-inverted-sorter5"
+  132 set *tmp147 A{LNJO-inverted-sorter5
   133 write *tmp147 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
   134 label *label408
   135 label *label411
-    * read *tmp147 @this "AJJJP-pneumatic-drill6"
+  136 set *tmp147 AJJJP-pneumatic-drill6
   137 write *tmp147 :buildBlockFromCfg*retval "AJJJP-pneumatic-drill6"
   138 label *label412
   139 label *label415
-    * read *tmp147 @this "A©JNJQ-unloader7"
+  140 set *tmp147 A©JNJQ-unloader7
   141 write *tmp147 :buildBlockFromCfg*retval "A©JNJQ-unloader7"
   142 label *label416
   143 label *label419
-    * read *tmp147 @this "A{HNJR-inverted-sorter8"
+  144 set *tmp147 A{HNJR-inverted-sorter8
   145 write *tmp147 :buildBlockFromCfg*retval "A{HNJR-inverted-sorter8"
   146 label *label420
   147 label *label423
-    * read *tmp147 @this "A~JPJS-overflow-gate9"
+  148 set *tmp147 A~JPJS-overflow-gate9
   149 write *tmp147 :buildBlockFromCfg*retval "A~JPJS-overflow-gate9"
   150 label *label424
   151 label *label66
 
  1171 label *label34
  1172 label *label428
  1173 op sign *tmp368 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp368
+ 1174 set :meetTarget:count *tmp368
  1175 label *label429
  1176 label *label432
  1177 op sign *tmp368 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-3 instructions):
 
   776 label *label472
   777 sensor :supplyBase0:coal .core @coal
   778 sensor :supplyBase0:sand .core @sand
-    * select *tmp284 lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
-    * set :mineOre.1:ore *tmp284
+  779 select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
   780 setaddr :mineOre.1*retaddr *label220 (h:*label220)
   781 call *label22 *invalid :mineOre.1*retval (m:*label220) (h:*label220)
   782 label *label220
 
   820 label *label480
   821 sensor :supplyBase0:coal.1 .core @coal
   822 sensor :supplyBase0:sand.1 .core @sand
-    * select *tmp297 lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
-    * set :mineOre.1:ore *tmp297
+  823 select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
   824 setaddr :mineOre.1*retaddr *label236 (h:*label236)
   825 call *label22 *invalid :mineOre.1*retval (m:*label236) (h:*label236)
   826 label *label236
 
  1168 end
  1169 label *label34
  1170 label *label428
-    * op sign *tmp368 :meetTarget:copper
-    * set :meetTarget:count *tmp368
+ 1171 op sign :meetTarget:count :meetTarget:copper
  1172 label *label429
  1173 label *label432
  1174 op sign *tmp368 :meetTarget:lead

Modifications by Inline function call at CoreBuilder.mnd:101:17 (+6 instructions):
 
   764 write "Goal 5: supplying generator" .display ".status1"
   765 label *label470
   766 set :mineOre.1:ore @coal
-    * setaddr :mineOre.1*retaddr *label214 (h:*label214)
-    * call *label22 *invalid :mineOre.1*retval (m:*label214) (h:*label214)
-    * label *label214
+  767 label *label695
+  768 label *label696
+  769 write "Mining " .display ".status2"
+  770 write :mineOre.1:ore .display ".item2"
+  771 write "core" .display ".block2"
+  772 label *label697
+  773 set :mineOre:ore :mineOre.1:ore
+  774 set :mineOre:amount 30
+  775 set :mineOre:block .core
+  776 setaddr :mineOre*retaddr *label698 (h:*label698)
+  777 call *label21 *invalid :mineOre*retval (m:*label698) (h:*label698)
+  778 label *label698
+  779 label *label699
   780 jump *label212 always
   781 label *label211
   782 sensor *tmp278 .core @silicon

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
   767 label *label695
   768 label *label696
   769 write "Mining " .display ".status2"
-    * write :mineOre.1:ore .display ".item2"
+  770 write @coal .display ".item2"
   771 write "core" .display ".block2"
   772 label *label697
-    * set :mineOre:ore :mineOre.1:ore
+  773 set :mineOre:ore @coal
   774 set :mineOre:amount 30
   775 set :mineOre:block .core
   776 setaddr :mineOre*retaddr *label698 (h:*label698)

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2 (-1 instructions):
 
   763 label *label469
   764 write "Goal 5: supplying generator" .display ".status1"
   765 label *label470
-    * set :mineOre.1:ore @coal
   766 label *label695
   767 label *label696
   768 write "Mining " .display ".status2"

Modifications by Inline function call at CoreBuilder.mnd:319:5 (+2 instructions):
 
    20 jump *label44 equal .core null
    21 label *label46
    22 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
-    * setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
-    * call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
-    * label *label47
+   23 label *label700
+   24 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
+   25 set :buildBlockFromCfg:config null
+   26 setaddr :buildBlockFromCfg*retaddr *label701 (h:*label701)
+   27 call *label37 *invalid :buildBlockFromCfg*retval (m:*label701) (h:*label701)
+   28 label *label701
+   29 label *label702
    30 set :buildBlockFromCfg.1:cfg "AJTJK-battery1"
    31 setaddr :buildBlockFromCfg.1*retaddr *label48 (h:*label48)
    32 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label48) (h:*label48)

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1:
 
    21 label *label46
    22 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
    23 label *label700
-    * set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
+   24 set :buildBlockFromCfg:cfg "AJEMJJ-graphite-press0"
    25 set :buildBlockFromCfg:config null
    26 setaddr :buildBlockFromCfg*retaddr *label701 (h:*label701)
    27 call *label37 *invalid :buildBlockFromCfg*retval (m:*label701) (h:*label701)

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    16 ubind @poly
    17 set .builder @unit
    18 ulocate building core false @copper .coreX .coreY *tmp115 .core
-    * label *label45
    19 jump *label44 equal .core null
-    * label *label46
    20 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
-    * label *label700
    21 set :buildBlockFromCfg:cfg "AJEMJJ-graphite-press0"
    22 set :buildBlockFromCfg:config null
    23 setaddr :buildBlockFromCfg*retaddr *label701 (h:*label701)
    24 call *label37 *invalid :buildBlockFromCfg*retval (m:*label701) (h:*label701)
    25 label *label701
-    * label *label702
    26 set :buildBlockFromCfg.1:cfg "AJTJK-battery1"
    27 setaddr :buildBlockFromCfg.1*retaddr *label48 (h:*label48)
    28 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label48) (h:*label48)
 
    66 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
    67 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    68 jump *label56 notEqual :buildFirstTitaniumDrill:result false
-    * label *label537
    69 set .ERROR "Cannot locate spot for titanium drill"
    70 stop
-    * label *label538
    71 label *label56
-    * label *label57
    72 write @pneumatic-drill processor1 ".nextBlock"
    73 write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTitaniumDrillAt:x"
    74 write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTitaniumDrillAt:y"
 
    79 read *tmp140 processor5 ":buildFirstTitaniumDrillAt*finished"
    80 jump *label59 equal *tmp140 false
    81 read *tmp123 processor5 ":buildFirstTitaniumDrillAt*retval"
-    * label *label53
    82 set .titaniumDrill *tmp123
    83 write *tmp123 processor1 ".titaniumDrill"
    84 set :buildBlockFromCfg.1:cfg "A©JNJQ-unloader7"
 
   104 write processor1 :buildBlockFromCfg*retval ".display"
   105 write .core :buildBlockFromCfg*retval ".core"
   106 write bank1 :buildBlockFromCfg*retval ".bank"
-    * label *label387
   107 set *tmp147 AJEMJJ-graphite-press0
   108 write *tmp147 :buildBlockFromCfg*retval "AJEMJJ-graphite-press0"
-    * label *label388
-    * label *label391
   109 set *tmp147 AJTJK-battery1
   110 write *tmp147 :buildBlockFromCfg*retval "AJTJK-battery1"
-    * label *label392
-    * label *label395
   111 set *tmp147 ALTJL-battery2
   112 write *tmp147 :buildBlockFromCfg*retval "ALTJL-battery2"
-    * label *label396
-    * label *label399
   113 set *tmp147 AJRJM-combustion-generator3
   114 write *tmp147 :buildBlockFromCfg*retval "AJRJM-combustion-generator3"
-    * label *label400
-    * label *label403
   115 set *tmp147 ALMQJN-silicon-smelter4
   116 write *tmp147 :buildBlockFromCfg*retval "ALMQJN-silicon-smelter4"
-    * label *label404
-    * label *label407
   117 set *tmp147 A{LNJO-inverted-sorter5
   118 write *tmp147 :buildBlockFromCfg*retval "A{LNJO-inverted-sorter5"
-    * label *label408
-    * label *label411
   119 set *tmp147 AJJJP-pneumatic-drill6
   120 write *tmp147 :buildBlockFromCfg*retval "AJJJP-pneumatic-drill6"
-    * label *label412
-    * label *label415
   121 set *tmp147 A©JNJQ-unloader7
   122 write *tmp147 :buildBlockFromCfg*retval "A©JNJQ-unloader7"
-    * label *label416
-    * label *label419
   123 set *tmp147 A{HNJR-inverted-sorter8
   124 write *tmp147 :buildBlockFromCfg*retval "A{HNJR-inverted-sorter8"
-    * label *label420
-    * label *label423
   125 set *tmp147 A~JPJS-overflow-gate9
   126 write *tmp147 :buildBlockFromCfg*retval "A~JPJS-overflow-gate9"
-    * label *label424
-    * label *label66
   127 set :buildBlockFromCfg.1:cfg "AFJJU-power-node11"
   128 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   129 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
 
   138 label *label79
   139 write 1 .controller ".flareTarget"
   140 write 1 processor1 ".flareTarget"
-    * label *label80
   141 write 3 .controller ".monoTarget"
   142 write 3 processor1 ".monoTarget"
-    * label *label81
   143 write 85 .controller ".pressTarget"
   144 write 150 .controller ".smelterTarget"
   145 write 30 .controller ".kilnTarget"
 
   156 jump *label87 greaterThanEq *tmp151 300
   157 jump *label85 always
   158 label *label87
-    * label *label88
-    * label *label84
   159 read *tmp82 .controller ".monos"
   160 jump *label83 lessThan *tmp82 3
   161 label *label85
 
   213 set .metaglassSurplus 200
   214 write 5 .controller ".polyTarget"
   215 write 5 processor1 ".polyTarget"
-    * label *label101
   216 set :buildBlockFromCfg.1:cfg "ALSIJf-silicon-smelter28"
   217 setaddr :buildBlockFromCfg.1*retaddr *label102 (h:*label102)
   218 call *label38 *invalid :buildBlockFromCfg.1*retval (m:*label102) (h:*label102)
 
   233 setaddr :buildUnits*retaddr *label106 (h:*label106)
   234 call *label40 *invalid :buildUnits*retval (m:*label106) (h:*label106)
   235 label *label106
-    * label *label107
   236 read *tmp83 .controller ".polys"
   237 jump *label109 greaterThanEq *tmp83 3
   238 label *label691
   239 setaddr :supplyBase*retaddr *label110 (h:*label110)
   240 call *label33 *invalid :supplyBase*retval (m:*label110) (h:*label110)
   241 label *label110
-    * label *label108
   242 read *tmp83 .controller ".polys"
   243 jump *label691 lessThan *tmp83 3
   244 label *label109
   245 write 3 .controller ".flareTarget"
   246 write 3 processor1 ".flareTarget"
-    * label *label111
-    * label *label112
   247 read *tmp81 .controller ".flares"
   248 jump *label114 greaterThanEq *tmp81 2
   249 label *label692
   250 setaddr :supplyBase*retaddr *label115 (h:*label115)
   251 call *label33 *invalid :supplyBase*retval (m:*label115) (h:*label115)
   252 label *label115
-    * label *label113
   253 read *tmp81 .controller ".flares"
   254 jump *label692 lessThan *tmp81 2
   255 label *label114
   256 set .graphiteSurplus 100
   257 write 5 .controller ".monoTarget"
   258 write 5 processor1 ".monoTarget"
-    * label *label116
   259 write @ore-titanium processor1 ".nextBlock"
   260 ubind @flare
   261 read :blocksBuildTitaniumDrills:current processor4 ".locations"
 
   279 jump *label118 equal *tmp184 false
   280 write false processor4 ":stopLocation*finished"
   281 write 3 processor4 "@counter"
-    * label *label117
   282 write null processor1 ".nextBlock"
   283 write .coreX processor4 ":layoutThoriumDrill:x"
   284 write .coreY processor4 ":layoutThoriumDrill:y"
 
   300 jump *label122 equal *tmp191 false
   301 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   302 jump *label123 notEqual :buildThoriumDrill:result false
-    * label *label539
   303 set .ERROR "Cannot locate spot for thorium drill"
   304 stop
-    * label *label540
   305 label *label123
-    * label *label124
   306 write @laser-drill processor5 ":buildBlockAt:block"
   307 read *tmp53 processor4 ".drillX"
   308 write *tmp53 processor5 ":buildBlockAt:x"
 
   376 wait 1e-15
   377 read *tmp214 processor3 ":setThoriumContainer*finished"
   378 jump *label137 equal *tmp214 false
-    * label *label119
   379 write null processor1 ".nextBlock"
   380 write 1 .controller ".megaTarget"
   381 write 1 processor1 ".megaTarget"
-    * label *label138
-    * label *label139
   382 read *tmp83 .controller ".polys"
   383 jump *label141 greaterThanEq *tmp83 5
   384 label *label693
   385 setaddr :supplyBase*retaddr *label142 (h:*label142)
   386 call *label33 *invalid :supplyBase*retval (m:*label142) (h:*label142)
   387 label *label142
-    * label *label140
   388 read *tmp83 .controller ".polys"
   389 jump *label693 lessThan *tmp83 5
   390 label *label141
 
   401 setaddr :buildUnits*retaddr *label145 (h:*label145)
   402 call *label40 *invalid :buildUnits*retval (m:*label145) (h:*label145)
   403 label *label145
-    * label *label146
   404 read *tmp84 .controller ".megas"
   405 jump *label148 greaterThanEq *tmp84 1
   406 label *label694
   407 setaddr :supplyBase*retaddr *label149 (h:*label149)
   408 call *label33 *invalid :supplyBase*retval (m:*label149) (h:*label149)
   409 label *label149
-    * label *label147
   410 read *tmp84 .controller ".megas"
   411 jump *label694 lessThan *tmp84 1
   412 label *label148
 
   452 setaddr :lineUpUnits*retaddr *label161 (h:*label161)
   453 call *label42 *invalid :lineUpUnits*retval (m:*label161) (h:*label161)
   454 label *label161
-    * label *label156
   455 jump *label155 always
-    * label *label157
-    * label *label150
   456 end
   457 label *label33
   458 sensor *tmp228 .core @silicon
 
   460 op max *tmp230 0 *tmp229
   461 write *tmp230 processor8 ".sandTarget"
   462 jump *label164 equal .thoriumContainer false
-    * label *label457
   463 write "Phase 2: servicing thorium drill" .display ".status1"
-    * label *label458
   464 sensor *tmp232 .thoriumBattery @totalPower
   465 jump *label168 greaterThanEq *tmp232 2000
   466 sensor *tmp235 .core @coal
   467 jump *label170 greaterThanEq *tmp235 50
   468 set :supplyBlock:block .thoriumGenerator
   469 set :supplyBlock:ore @coal
-    * label *label668
-    * label *label669
   470 write "Supplying " .display ".status2"
   471 write @coal .display ".item2"
   472 write .thoriumGenerator .display ".block2"
-    * label *label670
   473 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   474 sensor *tmp326 .thoriumGenerator @coal
   475 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
 
   481 call *label21 *invalid :mineOre*retval (m:*label671) (h:*label671)
   482 label *label671
   483 label *label672
-    * label *label673
-    * label *label674
   484 jump *label171 always
   485 label *label170
-    * label *label483
   486 sensor *tmp330 .thoriumGenerator @itemCapacity
   487 op min :transportStatus:target *tmp330 30
-    * label *label523
   488 write :transportStatus:target .display ".transportTarget"
   489 write @coal .display ".transportItem"
-    * label *label524
-    * label *label531
   490 write "Transferring " .display ".status2"
   491 write @coal .display ".item2"
   492 write .thoriumGenerator .display ".block2"
-    * label *label532
-    * label *label549
-    * label *label550
   493 write "Moving..." .display ".status3"
-    * label *label551
   494 label *label552
   495 sensor *tmp412 @unit @firstItem
   496 jump *label553 equal *tmp412 null
   497 ucontrol itemDrop @air 1000
   498 label *label553
-    * label *label554
   499 ucontrol approach .coreX .coreY 5.5
-    * label *label555
   500 ucontrol within .coreX .coreY 6 *tmp415
   501 jump *label552 equal *tmp415 false
-    * label *label556
-    * label *label557
-    * label *label576
-    * label *label577
   502 sensor *tmp417 @unit @firstItem
   503 jump *label580 equal *tmp417 null
   504 label *label578
   505 ucontrol itemDrop @air 1000
-    * label *label579
   506 sensor *tmp417 @unit @firstItem
   507 jump *label578 notEqual *tmp417 null
   508 label *label580
-    * label *label581
   509 label *label488
   510 ucontrol itemTake .core @coal 30
   511 sensor :supplyBlockFromCore:unitItem @unit @firstItem
 
   515 jump *label489 equal *tmp335 false
   516 ucontrol itemDrop @air 1000
   517 label *label489
-    * label *label490
-    * label *label491
   518 sensor *tmp337 @unit @coal
   519 op lessThan *tmp338 *tmp337 30
   520 sensor *tmp339 .core @coal
   521 op land *tmp340 *tmp338 *tmp339
   522 jump *label488 notEqual *tmp340 false
-    * label *label492
-    * label *label618
-    * label *label619
   523 write "Depositing..." .display ".status3"
-    * label *label620
   524 sensor *tmp419 @unit @firstItem
   525 jump *label634 notEqual *tmp419 @coal
-    * label *label621
   526 sensor *tmp443 .thoriumGenerator @x
   527 sensor *tmp444 .thoriumGenerator @y
-    * label *label622
-    * label *label623
   528 write "Moving..." .display ".status3"
-    * label *label624
-    * label *label625
   529 ucontrol within *tmp443 *tmp444 6 *tmp449
   530 jump *label628 notEqual *tmp449 false
   531 label *label626
   532 ucontrol approach *tmp443 *tmp444 5.5
-    * label *label627
   533 ucontrol within *tmp443 *tmp444 6 *tmp449
   534 jump *label626 equal *tmp449 false
   535 label *label628
-    * label *label629
-    * label *label630
   536 sensor :depositItems:cap .thoriumGenerator @itemCapacity
   537 label *label631
   538 ucontrol itemDrop .thoriumGenerator 30
-    * label *label632
   539 sensor *tmp423 @unit @firstItem
   540 op mul *tmp424 *tmp423 :depositItems:cap
   541 sensor *tmp425 .thoriumGenerator @coal
   542 jump *label631 greaterThan *tmp424 *tmp425
-    * label *label633
   543 jump *label639 always
   544 label *label634
-    * label *label635
   545 sensor *tmp427 @unit @firstItem
   546 jump *label638 equal *tmp427 null
   547 label *label636
   548 ucontrol itemDrop @air 1000
-    * label *label637
   549 sensor *tmp427 @unit @firstItem
   550 jump *label636 notEqual *tmp427 null
   551 label *label638
   552 label *label639
-    * label *label640
   553 write 0 .display ".transportTarget"
   554 write null .display ".transportItem"
-    * label *label641
-    * label *label642
-    * label *label494
   555 label *label171
   556 label *label168
-    * label *label169
   557 set :fetchBlock:block .thoriumContainer
   558 set :fetchBlock:item @thorium
   559 setaddr :fetchBlock*retaddr *label174 (h:*label174)
   560 call *label23 *invalid :fetchBlock*retval (m:*label174) (h:*label174)
   561 label *label174
-    * label *label166
   562 jump *label165 always
   563 label *label164
   564 read *tmp82 .controller ".monos"
   565 jump *label175 lessThanEq *tmp82 3
-    * label *label459
   566 write "Phase 1: supplying base" .display ".status1"
-    * label *label460
-    * label *label588
-    * label *label589
   567 write "Mining " .display ".status2"
   568 write @coal .display ".item2"
   569 write "core" .display ".block2"
-    * label *label590
   570 set :mineOre:ore @coal
   571 set :mineOre:amount 30
   572 set :mineOre:block .core
   573 setaddr :mineOre*retaddr *label591 (h:*label591)
   574 call *label21 *invalid :mineOre*retval (m:*label591) (h:*label591)
   575 label *label591
-    * label *label592
-    * label *label177
   576 jump *label176 always
   577 label *label175
   578 set :supplyBase0:supplied false
 
   581 jump *label183 greaterThanEq *tmp242 .targetGraphite
   582 sensor *tmp245 AJEMJJ-graphite-press0 @coal
   583 jump *label185 greaterThanEq *tmp245 5
-    * label *label461
   584 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label462
   585 set :supplyBlock:block AJEMJJ-graphite-press0
   586 set :supplyBlock:ore @coal
   587 setaddr :supplyBlock*retaddr *label188 (h:*label188)
 
   589 label *label188
   590 set :supplyBase0:supplied true
   591 label *label185
-    * label *label186
   592 label *label183
-    * label *label184
   593 sensor *tmp248 .core @silicon
   594 jump *label189 greaterThanEq *tmp248 .targetSilicon
   595 sensor *tmp251 ALMQJN-silicon-smelter4 @coal
   596 jump *label191 greaterThanEq *tmp251 5
-    * label *label463
   597 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label464
   598 set :supplyBlock:block ALMQJN-silicon-smelter4
   599 set :supplyBlock:ore @coal
   600 setaddr :supplyBlock*retaddr *label194 (h:*label194)
 
   605 label *label191
   606 sensor *tmp254 ALMQJN-silicon-smelter4 @sand
   607 jump *label195 greaterThanEq *tmp254 5
-    * label *label465
   608 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label466
   609 set :supplyBlock:block ALMQJN-silicon-smelter4
   610 set :supplyBlock:ore @sand
   611 setaddr :supplyBlock*retaddr *label198 (h:*label198)
 
   613 label *label198
   614 set :supplyBase0:supplied true
   615 label *label195
-    * label *label196
   616 label *label192
   617 label *label189
-    * label *label190
   618 sensor *tmp257 AJTJK-battery1 @totalPower
   619 jump *label199 greaterThanEq *tmp257 .powerTarget
   620 sensor *tmp260 AJRJM-combustion-generator3 @coal
   621 jump *label201 greaterThanEq *tmp260 2
-    * label *label467
   622 write "Goal 4: supplying generator" .display ".status1"
-    * label *label468
   623 set :supplyBlock:block AJRJM-combustion-generator3
   624 set :supplyBlock:ore @coal
   625 setaddr :supplyBlock*retaddr *label204 (h:*label204)
 
   627 label *label204
   628 set :supplyBase0:supplied true
   629 label *label201
-    * label *label202
   630 label *label199
-    * label *label200
   631 label *label181
-    * label *label182
   632 set *tmp265 100
   633 sensor *tmp263 .core @titanium
   634 jump *label206 greaterThanEq *tmp263 .targetTitanium
 
   642 sensor *tmp274 AJTJK-battery1 @totalPower
   643 op mul *tmp275 A©JNJQ-unloader7 .powerTarget
   644 jump *label211 greaterThanEq *tmp274 *tmp275
-    * label *label469
   645 write "Goal 5: supplying generator" .display ".status1"
-    * label *label470
-    * label *label695
-    * label *label696
   646 write "Mining " .display ".status2"
   647 write @coal .display ".item2"
   648 write "core" .display ".block2"
-    * label *label697
   649 set :mineOre:ore @coal
   650 set :mineOre:amount 30
   651 set :mineOre:block .core
   652 setaddr :mineOre*retaddr *label698 (h:*label698)
   653 call *label21 *invalid :mineOre*retval (m:*label698) (h:*label698)
   654 label *label698
-    * label *label699
   655 jump *label212 always
   656 label *label211
   657 sensor *tmp278 .core @silicon
   658 jump *label215 greaterThanEq *tmp278 .targetSilicon
-    * label *label471
   659 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label472
   660 sensor :supplyBase0:coal .core @coal
   661 sensor :supplyBase0:sand .core @sand
   662 select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase0:sand @coal @sand
 
   667 label *label215
   668 sensor *tmp285 .core @copper
   669 jump *label221 greaterThanEq *tmp285 .targetCopper
-    * label *label473
   670 write "Goal 7: copper requirement" .display ".status1"
-    * label *label474
   671 set :mineOre.1:ore @copper
   672 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   673 call *label22 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
 
   676 label *label221
   677 sensor *tmp288 .core @lead
   678 jump *label225 greaterThanEq *tmp288 .targetLead
-    * label *label475
   679 write "Goal 8: lead requirement" .display ".status1"
-    * label *label476
   680 set :mineOre.1:ore @lead
   681 setaddr :mineOre.1*retaddr *label228 (h:*label228)
   682 call *label22 *invalid :mineOre.1*retval (m:*label228) (h:*label228)
 
   685 label *label225
   686 sensor *tmp291 .core @metaglass
   687 jump *label229 greaterThanEq *tmp291 .targetMetaglass
-    * label *label477
   688 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label478
   689 set :mineOre.1:ore @sand
   690 setaddr :mineOre.1*retaddr *label232 (h:*label232)
   691 call *label22 *invalid :mineOre.1*retval (m:*label232) (h:*label232)
   692 label *label232
   693 jump *label230 always
   694 label *label229
-    * label *label479
   695 write "Goal 10: supplying base" .display ".status1"
-    * label *label480
   696 sensor :supplyBase0:coal.1 .core @coal
   697 sensor :supplyBase0:sand.1 .core @sand
   698 select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supplyBase0:sand.1 @coal @sand
 
   705 label *label216
   706 label *label212
   707 label *label209
-    * label *label210
   708 jump *label208 always
   709 label *label207
-    * label *label481
   710 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label482
   711 set :fetchBlock:block .titaniumDrill
   712 set :fetchBlock:item @titanium
   713 setaddr :fetchBlock*retaddr *label238 (h:*label238)
   714 call *label23 *invalid :fetchBlock*retval (m:*label238) (h:*label238)
   715 label *label238
   716 label *label208
-    * label *label180
   717 label *label176
   718 label *label165
-    * label *label163
   719 return :supplyBase*retaddr
   720 end
   721 label *label36
 
   744 set :buildRemoteBlock*retval :buildBlock*retval
   745 jump *label239 always
   746 label *label240
-    * label *label241
   747 set :buildRemoteBlock*retval false
   748 jump *label239 always
   749 label *label239
 
   776 write :buildBlock*retval .display :buildBlockFromCfg:cfg
   777 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
   778 set :buildBlockFromCfg*retval :buildBlock*retval
-    * label *label244
   779 return :buildBlockFromCfg*retaddr
   780 end
   781 label *label38
 
   784 setaddr :buildBlockFromCfg*retaddr *label248 (h:*label248)
   785 call *label37 *invalid :buildBlockFromCfg*retval (m:*label248) (h:*label248)
   786 label *label248
-    * label *label247
   787 return :buildBlockFromCfg.1*retaddr
   788 end
   789 label *label39
 
   802 setaddr :meetTarget*retaddr *label251 (h:*label251)
   803 call *label34 *invalid :meetTarget*retval (m:*label251) (h:*label251)
   804 label *label251
-    * label *label249
   805 return :meetTarget.1*retaddr
   806 end
   807 label *label40
 
   821 write 0 .controller ".leadReserve"
   822 write 0 .controller ".siliconReserve"
   823 write 0 .controller ".graphiteReserve"
-    * label *label252
   824 return :buildUnits*retaddr
   825 end
   826 label *label41
   827 label *label255
   828 ubind :flagUnits:unit
   829 set :flagUnits:firstUnit @unit
-    * label *label256
   830 jump *label255 equal :flagUnits:firstUnit null
-    * label *label257
   831 set :flagUnits:x @thisx
   832 label *label258
   833 ucontrol flag :flagUnits:x
   834 op add :flagUnits:x :flagUnits:x 4
   835 ubind :flagUnits:unit
-    * label *label259
   836 jump *label258 notEqual @unit :flagUnits:firstUnit
-    * label *label260
-    * label *label254
   837 return :flagUnits*retaddr
   838 end
   839 label *label42
 
   847 jump *label265 equal *tmp308 false
   848 ucontrol stop
   849 label *label265
-    * label *label266
   850 ubind :lineUpUnits:unit
-    * label *label263
   851 jump *label262 notEqual @unit :lineUpUnits:firstUnit
-    * label *label264
-    * label *label261
   852 return :lineUpUnits*retaddr
   853 end
   854 label *label22
-    * label *label533
   855 write "Mining " .display ".status2"
   856 write :mineOre.1:ore .display ".item2"
   857 write "core" .display ".block2"
-    * label *label534
   858 set :mineOre:ore :mineOre.1:ore
   859 set :mineOre:amount 30
   860 set :mineOre:block .core
   861 setaddr :mineOre*retaddr *label270 (h:*label270)
   862 call *label21 *invalid :mineOre*retval (m:*label270) (h:*label270)
   863 label *label270
-    * label *label268
   864 return :mineOre.1*retaddr
   865 end
   866 label *label23
   867 sensor *tmp312 :fetchBlock:block @itemCapacity
   868 op min :transportStatus:target *tmp312 30
-    * label *label525
   869 write :transportStatus:target .display ".transportTarget"
   870 write :fetchBlock:item .display ".transportItem"
-    * label *label526
-    * label *label529
   871 write "Fetching " .display ".status2"
   872 write :fetchBlock:item .display ".item2"
   873 write :fetchBlock:block .display ".block2"
-    * label *label530
   874 sensor *tmp314 :fetchBlock:block @x
   875 sensor *tmp315 :fetchBlock:block @y
-    * label *label558
-    * label *label559
   876 write "Moving..." .display ".status3"
-    * label *label560
   877 label *label561
   878 sensor *tmp412 @unit @firstItem
   879 jump *label562 equal *tmp412 null
   880 ucontrol itemDrop @air 1000
   881 label *label562
-    * label *label563
   882 ucontrol approach *tmp314 *tmp315 5.5
-    * label *label564
   883 ucontrol within *tmp314 *tmp315 6 *tmp415
   884 jump *label561 equal *tmp415 false
-    * label *label565
-    * label *label566
-    * label *label543
-    * label *label544
   885 sensor *tmp417 @unit @firstItem
   886 jump *label547 equal *tmp417 null
   887 label *label545
   888 ucontrol itemDrop @air 1000
-    * label *label546
   889 sensor *tmp417 @unit @firstItem
   890 jump *label545 notEqual *tmp417 null
   891 label *label547
-    * label *label548
   892 label *label276
   893 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   894 sensor :fetchBlock:unitItem @unit @firstItem
 
   898 jump *label279 equal *tmp319 false
   899 ucontrol itemDrop @air 1000
   900 label *label279
-    * label *label280
-    * label *label277
   901 sensor *tmp321 @unit :fetchBlock:item
   902 op lessThan *tmp322 *tmp321 30
   903 sensor *tmp323 :fetchBlock:block :fetchBlock:item
   904 op land *tmp324 *tmp322 *tmp323
   905 jump *label276 notEqual *tmp324 false
-    * label *label278
-    * label *label593
-    * label *label594
   906 write "Depositing..." .display ".status3"
-    * label *label595
   907 sensor *tmp419 @unit @firstItem
   908 jump *label609 notEqual *tmp419 :fetchBlock:item
-    * label *label596
   909 sensor *tmp443 .core @x
   910 sensor *tmp444 .core @y
-    * label *label597
-    * label *label598
   911 write "Moving..." .display ".status3"
-    * label *label599
-    * label *label600
   912 ucontrol within *tmp443 *tmp444 6 *tmp449
   913 jump *label603 notEqual *tmp449 false
   914 label *label601
   915 ucontrol approach *tmp443 *tmp444 5.5
-    * label *label602
   916 ucontrol within *tmp443 *tmp444 6 *tmp449
   917 jump *label601 equal *tmp449 false
   918 label *label603
-    * label *label604
-    * label *label605
   919 sensor :depositItems:cap .core @itemCapacity
   920 label *label606
   921 ucontrol itemDrop .core 30
-    * label *label607
   922 sensor *tmp423 @unit @firstItem
   923 op mul *tmp424 *tmp423 :depositItems:cap
   924 sensor *tmp425 .core :fetchBlock:item
   925 jump *label606 greaterThan *tmp424 *tmp425
-    * label *label608
   926 jump *label614 always
   927 label *label609
-    * label *label610
   928 sensor *tmp427 @unit @firstItem
   929 jump *label613 equal *tmp427 null
   930 label *label611
   931 ucontrol itemDrop @air 1000
-    * label *label612
   932 sensor *tmp427 @unit @firstItem
   933 jump *label611 notEqual *tmp427 null
   934 label *label613
   935 label *label614
-    * label *label615
   936 write 0 .display ".transportTarget"
   937 write null .display ".transportItem"
-    * label *label616
-    * label *label617
-    * label *label271
   938 return :fetchBlock*retaddr
   939 end
   940 label *label24
-    * label *label535
   941 write "Supplying " .display ".status2"
   942 write :supplyBlock:ore .display ".item2"
   943 write :supplyBlock:block .display ".block2"
-    * label *label536
   944 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   945 sensor *tmp326 :supplyBlock:block :supplyBlock:ore
   946 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
 
   952 call *label21 *invalid :mineOre*retval (m:*label286) (h:*label286)
   953 label *label286
   954 label *label284
-    * label *label285
-    * label *label282
   955 return :supplyBlock*retaddr
   956 end
   957 label *label27
 
   975 sensor :unpackCfg:ti :unpackCfg:type @titanium
   976 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   977 sensor :unpackCfg:th :unpackCfg:type @thorium
-    * label *label298
   978 return :unpackCfg*retaddr
   979 end
   980 label *label34
-    * label *label428
   981 op sign :meetTarget:count :meetTarget:copper
-    * label *label429
-    * label *label432
   982 op sign *tmp368 :meetTarget:lead
   983 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label433
-    * label *label436
   984 op sign *tmp368 :meetTarget:graphite
   985 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label437
-    * label *label440
   986 op sign *tmp368 :meetTarget:silicon
   987 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label441
-    * label *label444
   988 op sign *tmp368 :meetTarget:titanium
   989 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label445
-    * label *label448
   990 op sign *tmp368 :meetTarget:metaglass
   991 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label449
-    * label *label452
   992 op sign *tmp368 :meetTarget:thorium
   993 op add :meetTarget:count :meetTarget:count *tmp368
-    * label *label453
-    * label *label302
   994 write :meetTarget:count .display ".totalTargets"
   995 write :meetTarget:block .display ".nextBlock"
   996 write :meetTarget:copper .display ".targetCopper"
 
  1025 write *tmp380 .controller ".graphiteReserve"
  1026 write .targetLead processor8 ".leadTarget"
  1027 write :meetTarget:copper processor8 ".copperTarget"
-    * label *label310
  1028 sensor *tmp382 .core @copper
  1029 jump *label314 greaterThanEq *tmp382 :meetTarget:copper
  1030 set *tmp381 false
  1031 jump *label313 always
  1032 label *label314
-    * label *label315
  1033 sensor *tmp385 .core @lead
  1034 jump *label316 greaterThanEq *tmp385 .targetLead
  1035 set *tmp381 false
  1036 jump *label313 always
  1037 label *label316
-    * label *label317
  1038 sensor *tmp388 .core @graphite
  1039 jump *label318 greaterThanEq *tmp388 :meetTarget:graphite
  1040 set *tmp381 false
  1041 jump *label313 always
  1042 label *label318
-    * label *label319
  1043 sensor *tmp391 .core @silicon
  1044 jump *label320 greaterThanEq *tmp391 :meetTarget:silicon
  1045 set *tmp381 false
  1046 jump *label313 always
  1047 label *label320
-    * label *label321
  1048 sensor *tmp394 .core @titanium
  1049 jump *label322 greaterThanEq *tmp394 :meetTarget:titanium
  1050 set *tmp381 false
  1051 jump *label313 always
  1052 label *label322
-    * label *label323
  1053 sensor *tmp397 .core @metaglass
  1054 jump *label324 greaterThanEq *tmp397 :meetTarget:metaglass
  1055 set *tmp381 false
  1056 jump *label313 always
  1057 label *label324
-    * label *label325
  1058 sensor *tmp400 .core @thorium
  1059 jump *label326 greaterThanEq *tmp400 :meetTarget:thorium
  1060 set *tmp381 false
  1061 jump *label313 always
  1062 label *label326
-    * label *label327
  1063 set *tmp381 true
  1064 jump *label313 always
  1065 label *label313
 
  1068 setaddr :supplyBase*retaddr *label328 (h:*label328)
  1069 call *label33 *invalid :supplyBase*retval (m:*label328) (h:*label328)
  1070 label *label328
-    * label *label311
  1071 sensor *tmp382 .core @copper
  1072 jump *label676 greaterThanEq *tmp382 .targetCopper
  1073 set *tmp381 false
  1074 jump *label690 always
  1075 label *label676
-    * label *label677
  1076 sensor *tmp385 .core @lead
  1077 jump *label678 greaterThanEq *tmp385 .targetLead
  1078 set *tmp381 false
  1079 jump *label690 always
  1080 label *label678
-    * label *label679
  1081 sensor *tmp388 .core @graphite
  1082 jump *label680 greaterThanEq *tmp388 .targetGraphite
  1083 set *tmp381 false
  1084 jump *label690 always
  1085 label *label680
-    * label *label681
  1086 sensor *tmp391 .core @silicon
  1087 jump *label682 greaterThanEq *tmp391 .targetSilicon
  1088 set *tmp381 false
  1089 jump *label690 always
  1090 label *label682
-    * label *label683
  1091 sensor *tmp394 .core @titanium
  1092 jump *label684 greaterThanEq *tmp394 .targetTitanium
  1093 set *tmp381 false
  1094 jump *label690 always
  1095 label *label684
-    * label *label685
  1096 sensor *tmp397 .core @metaglass
  1097 jump *label686 greaterThanEq *tmp397 .targetMetaglass
  1098 set *tmp381 false
  1099 jump *label690 always
  1100 label *label686
-    * label *label687
  1101 sensor *tmp400 .core @thorium
  1102 jump *label688 greaterThanEq *tmp400 .targetThorium
  1103 set *tmp381 false
  1104 jump *label690 always
  1105 label *label688
-    * label *label689
  1106 set *tmp381 true
  1107 jump *label690 always
  1108 label *label690
  1109 jump *label675 equal *tmp381 false
  1110 label *label312
-    * label *label299
  1111 return :meetTarget*retaddr
  1112 end
  1113 label *label35
 
  1135 read *tmp410 .blockBuilder ":buildBlockAt*finished"
  1136 jump *label331 equal *tmp410 false
  1137 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * label *label329
  1138 return :buildBlock*retaddr
  1139 end
  1140 label *label21
  1141 op min :mineOre:amount :mineOre:amount 30
-    * label *label527
  1142 write :mineOre:amount .display ".transportTarget"
  1143 write :mineOre:ore .display ".transportItem"
-    * label *label528
-    * label *label506
  1144 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
  1145 jump *label508 notEqual *tmp445 false
-    * label *label541
  1146 set .ERROR "Cannot locate ore"
  1147 stop
-    * label *label542
  1148 label *label508
-    * label *label509
-    * label *label510
-    * label *label567
-    * label *label568
  1149 write "Moving..." .display ".status3"
-    * label *label569
  1150 label *label570
  1151 sensor *tmp412 @unit @firstItem
  1152 jump *label571 equal *tmp412 null
  1153 ucontrol itemDrop @air 1000
  1154 label *label571
-    * label *label572
  1155 ucontrol approach :locateOre:x :locateOre:y 5.5
-    * label *label573
  1156 ucontrol within :locateOre:x :locateOre:y 6 *tmp415
  1157 jump *label570 equal *tmp415 false
-    * label *label574
-    * label *label575
  1158 sensor *tmp430 @unit @firstItem
  1159 jump *label361 equal *tmp430 :mineOre:ore
-    * label *label582
-    * label *label583
  1160 sensor *tmp417 @unit @firstItem
  1161 jump *label586 equal *tmp417 null
  1162 label *label584
  1163 ucontrol itemDrop @air 1000
-    * label *label585
  1164 sensor *tmp417 @unit @firstItem
  1165 jump *label584 notEqual *tmp417 null
  1166 label *label586
-    * label *label587
  1167 label *label361
-    * label *label362
-    * label *label499
  1168 write "Mining..." .display ".status3"
-    * label *label500
  1169 op add :mineOre:stop @second 10
  1170 label *label365
  1171 sensor :mineOre:item @unit @firstItem
 
  1175 jump *label368 equal *tmp437 false
  1176 jump *label367 always
  1177 label *label368
-    * label *label369
  1178 ucontrol mine :locateOre:x :locateOre:y
  1179 jump *label370 lessThanEq @second :mineOre:stop
  1180 jump *label367 always
  1181 label *label370
-    * label *label371
-    * label *label366
  1182 sensor *tmp441 @unit @totalItems
  1183 jump *label365 lessThan *tmp441 :mineOre:amount
  1184 label *label367
  1185 ucontrol unbind
-    * label *label643
-    * label *label644
  1186 write "Depositing..." .display ".status3"
-    * label *label645
  1187 sensor *tmp419 @unit @firstItem
  1188 jump *label659 notEqual *tmp419 :mineOre:ore
-    * label *label646
  1189 sensor *tmp443 :mineOre:block @x
  1190 sensor *tmp444 :mineOre:block @y
-    * label *label647
-    * label *label648
  1191 write "Moving..." .display ".status3"
-    * label *label649
-    * label *label650
  1192 ucontrol within *tmp443 *tmp444 6 *tmp449
  1193 jump *label653 notEqual *tmp449 false
  1194 label *label651
  1195 ucontrol approach *tmp443 *tmp444 5.5
-    * label *label652
  1196 ucontrol within *tmp443 *tmp444 6 *tmp449
  1197 jump *label651 equal *tmp449 false
  1198 label *label653
-    * label *label654
-    * label *label655
  1199 sensor :depositItems:cap :mineOre:block @itemCapacity
  1200 label *label656
  1201 ucontrol itemDrop :mineOre:block 30
-    * label *label657
  1202 sensor *tmp423 @unit @firstItem
  1203 op mul *tmp424 *tmp423 :depositItems:cap
  1204 sensor *tmp425 :mineOre:block :mineOre:ore
  1205 jump *label656 greaterThan *tmp424 *tmp425
-    * label *label658
  1206 jump *label664 always
  1207 label *label659
-    * label *label660
  1208 sensor *tmp427 @unit @firstItem
  1209 jump *label663 equal *tmp427 null
  1210 label *label661
  1211 ucontrol itemDrop @air 1000
-    * label *label662
  1212 sensor *tmp427 @unit @firstItem
  1213 jump *label661 notEqual *tmp427 null
  1214 label *label663
  1215 label *label664
-    * label *label665
  1216 write 0 .display ".transportTarget"
  1217 write null .display ".transportItem"
-    * label *label666
-    * label *label667
-    * label *label357
  1218 return :mineOre*retaddr
  1219 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-3 instructions):
 
   153 call *label33 *invalid :supplyBase*retval (m:*label86) (h:*label86)
   154 label *label86
   155 sensor *tmp151 AJTJK-battery1 @totalPower
-    * jump *label87 greaterThanEq *tmp151 300
-    * jump *label85 always
+  156 jump *label85 lessThan *tmp151 300
   157 label *label87
   158 read *tmp82 .controller ".monos"
   159 jump *label83 lessThan *tmp82 3
 
  1171 op notEqual *tmp435 :mineOre:item null
  1172 op notEqual *tmp436 :mineOre:item :mineOre:ore
  1173 op land *tmp437 *tmp435 *tmp436
-    * jump *label368 equal *tmp437 false
-    * jump *label367 always
+ 1174 jump *label367 notEqual *tmp437 false
  1175 label *label368
  1176 ucontrol mine :locateOre:x :locateOre:y
-    * jump *label370 lessThanEq @second :mineOre:stop
-    * jump *label367 always
+ 1177 jump *label367 greaterThan @second :mineOre:stop
  1178 label *label370
  1179 sensor *tmp441 @unit @totalItems
  1180 jump *label365 lessThan *tmp441 :mineOre:amount

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   154 label *label86
   155 sensor *tmp151 AJTJK-battery1 @totalPower
   156 jump *label85 lessThan *tmp151 300
-    * label *label87
   157 read *tmp82 .controller ".monos"
   158 jump *label83 lessThan *tmp82 3
   159 label *label85
 
  1171 op notEqual *tmp436 :mineOre:item :mineOre:ore
  1172 op land *tmp437 *tmp435 *tmp436
  1173 jump *label367 notEqual *tmp437 false
-    * label *label368
  1174 ucontrol mine :locateOre:x :locateOre:y
  1175 jump *label367 greaterThan @second :mineOre:stop
-    * label *label370
  1176 sensor *tmp441 @unit @totalItems
  1177 jump *label365 lessThan *tmp441 :mineOre:amount
  1178 label *label367

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   447 label *label160
   448 op sub :lineUpUnits:y @thisy 18
   449 set :lineUpUnits:unit @flare
-    * setaddr :lineUpUnits*retaddr *label161 (h:*label161)
+  450 setaddr :lineUpUnits*retaddr *label155 (h:*label161)
   451 call *label42 *invalid :lineUpUnits*retval (m:*label161) (h:*label161)
   452 label *label161
   453 jump *label155 always
 
   471 sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCapacity
   472 sensor *tmp326 .thoriumGenerator @coal
   473 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp326
-    * jump *label672 lessThanEq :supplyBlock:missing 0
+  474 jump *label171 lessThanEq :supplyBlock:missing 0
   475 set :mineOre:ore @coal
   476 set :mineOre:amount :supplyBlock:blockCapacity
   477 set :mineOre:block .thoriumGenerator
-    * setaddr :mineOre*retaddr *label671 (h:*label671)
+  478 setaddr :mineOre*retaddr *label171 (h:*label671)
   479 call *label21 *invalid :mineOre*retval (m:*label671) (h:*label671)
   480 label *label671
   481 label *label672
 
   557 setaddr :fetchBlock*retaddr *label174 (h:*label174)
   558 call *label23 *invalid :fetchBlock*retval (m:*label174) (h:*label174)
   559 label *label174
-    * jump *label165 always
+  560 return :supplyBase*retaddr
   561 label *label164
   562 read *tmp82 .controller ".monos"
   563 jump *label175 lessThanEq *tmp82 3
 
   571 setaddr :mineOre*retaddr *label591 (h:*label591)
   572 call *label21 *invalid :mineOre*retval (m:*label591) (h:*label591)
   573 label *label591
-    * jump *label176 always
+  574 return :supplyBase*retaddr
   575 label *label175
   576 set :supplyBase0:supplied false
   577 jump *label181 notEqual A©JNJQ-unloader7 null
 
   636 label *label206
   637 sensor *tmp269 .titaniumDrill @titanium
   638 jump *label207 greaterThanEq *tmp269 *tmp265
-    * jump *label209 notEqual :supplyBase0:supplied false
+  639 jump *label208 notEqual :supplyBase0:supplied false
   640 sensor *tmp274 AJTJK-battery1 @totalPower
   641 op mul *tmp275 A©JNJQ-unloader7 .powerTarget
   642 jump *label211 greaterThanEq *tmp274 *tmp275
 
   650 setaddr :mineOre*retaddr *label698 (h:*label698)
   651 call *label21 *invalid :mineOre*retval (m:*label698) (h:*label698)
   652 label *label698
-    * jump *label212 always
+  653 return :supplyBase*retaddr
   654 label *label211
   655 sensor *tmp278 .core @silicon
   656 jump *label215 greaterThanEq *tmp278 .targetSilicon
 
   661 setaddr :mineOre.1*retaddr *label220 (h:*label220)
   662 call *label22 *invalid :mineOre.1*retval (m:*label220) (h:*label220)
   663 label *label220
-    * jump *label216 always
+  664 return :supplyBase*retaddr
   665 label *label215
   666 sensor *tmp285 .core @copper
   667 jump *label221 greaterThanEq *tmp285 .targetCopper
 
   670 setaddr :mineOre.1*retaddr *label224 (h:*label224)
   671 call *label22 *invalid :mineOre.1*retval (m:*label224) (h:*label224)
   672 label *label224
-    * jump *label222 always
+  673 return :supplyBase*retaddr
   674 label *label221
   675 sensor *tmp288 .core @lead
   676 jump *label225 greaterThanEq *tmp288 .targetLead
 
   679 setaddr :mineOre.1*retaddr *label228 (h:*label228)
   680 call *label22 *invalid :mineOre.1*retval (m:*label228) (h:*label228)
   681 label *label228
-    * jump *label226 always
+  682 return :supplyBase*retaddr
   683 label *label225
   684 sensor *tmp291 .core @metaglass
   685 jump *label229 greaterThanEq *tmp291 .targetMetaglass
 
   688 setaddr :mineOre.1*retaddr *label232 (h:*label232)
   689 call *label22 *invalid :mineOre.1*retval (m:*label232) (h:*label232)
   690 label *label232
-    * jump *label230 always
+  691 return :supplyBase*retaddr
   692 label *label229
   693 write "Goal 10: supplying base" .display ".status1"
   694 sensor :supplyBase0:coal.1 .core @coal
 
   703 label *label216
   704 label *label212
   705 label *label209
-    * jump *label208 always
+  706 return :supplyBase*retaddr
   707 label *label207
   708 write "Goal 11: Fetching titanium" .display ".status1"
   709 set :fetchBlock:block .titaniumDrill
 
   740 call *label35 *invalid :buildBlock*retval (m:*label243) (h:*label243)
   741 label *label243
   742 set :buildRemoteBlock*retval :buildBlock*retval
-    * jump *label239 always
+  743 return :buildRemoteBlock*retaddr
   744 label *label240
   745 set :buildRemoteBlock*retval false
-    * jump *label239 always
+  746 return :buildRemoteBlock*retaddr
   747 label *label239
   748 return :buildRemoteBlock*retaddr
   749 end

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-19 instructions):
 
   449 set :lineUpUnits:unit @flare
   450 setaddr :lineUpUnits*retaddr *label155 (h:*label161)
   451 call *label42 *invalid :lineUpUnits*retval (m:*label161) (h:*label161)
-    * label *label161
-    * jump *label155 always
-    * end
   452 label *label33
   453 sensor *tmp228 .core @silicon
   454 op sub *tmp229 .targetSilicon *tmp228
 
   474 set :mineOre:block .thoriumGenerator
   475 setaddr :mineOre*retaddr *label171 (h:*label671)
   476 call *label21 *invalid :mineOre*retval (m:*label671) (h:*label671)
-    * label *label671
-    * label *label672
-    * jump *label171 always
   477 label *label170
   478 sensor *tmp330 .thoriumGenerator @itemCapacity
   479 op min :transportStatus:target *tmp330 30
 
   691 setaddr :mineOre.1*retaddr *label236 (h:*label236)
   692 call *label22 *invalid :mineOre.1*retval (m:*label236) (h:*label236)
   693 label *label236
-    * label *label230
-    * label *label226
-    * label *label222
-    * label *label216
-    * label *label212
-    * label *label209
   694 return :supplyBase*retaddr
   695 label *label207
   696 write "Goal 11: Fetching titanium" .display ".status1"
 
   700 call *label23 *invalid :fetchBlock*retval (m:*label238) (h:*label238)
   701 label *label238
   702 label *label208
-    * label *label176
-    * label *label165
   703 return :supplyBase*retaddr
-    * end
   704 label *label36
   705 op add *tmp298 :buildRemoteBlock:x :buildRemoteBlock:y
   706 jump *label240 lessThanEq *tmp298 0
 
   729 label *label240
   730 set :buildRemoteBlock*retval false
   731 return :buildRemoteBlock*retaddr
-    * label *label239
-    * return :buildRemoteBlock*retaddr
-    * end
   732 label *label37
   733 set :unpackCfg:cfg :buildBlockFromCfg:cfg
   734 setaddr :unpackCfg*retaddr *label245 (h:*label245)
 
   757 write :buildBlock*retval .controller :buildBlockFromCfg:cfg
   758 set :buildBlockFromCfg*retval :buildBlock*retval
   759 return :buildBlockFromCfg*retaddr
-    * end
   760 label *label38
   761 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
   762 set :buildBlockFromCfg:config null
 
   764 call *label37 *invalid :buildBlockFromCfg*retval (m:*label248) (h:*label248)
   765 label *label248
   766 return :buildBlockFromCfg.1*retaddr
-    * end
   767 label *label39
   768 set :unpackCfg:cfg :meetTarget.1:cfg
   769 setaddr :unpackCfg*retaddr *label250 (h:*label250)
 
   781 call *label34 *invalid :meetTarget*retval (m:*label251) (h:*label251)
   782 label *label251
   783 return :meetTarget.1*retaddr
-    * end
   784 label *label40
   785 set :meetTarget:block 0
   786 set :meetTarget:copper 0
 
   799 write 0 .controller ".siliconReserve"
   800 write 0 .controller ".graphiteReserve"
   801 return :buildUnits*retaddr
-    * end
   802 label *label41
   803 label *label255
   804 ubind :flagUnits:unit
 
   811 ubind :flagUnits:unit
   812 jump *label258 notEqual @unit :flagUnits:firstUnit
   813 return :flagUnits*retaddr
-    * end
   814 label *label42
   815 ubind :lineUpUnits:unit
   816 set :lineUpUnits:firstUnit @unit
 
   825 ubind :lineUpUnits:unit
   826 jump *label262 notEqual @unit :lineUpUnits:firstUnit
   827 return :lineUpUnits*retaddr
-    * end
   828 label *label22
   829 write "Mining " .display ".status2"
   830 write :mineOre.1:ore .display ".item2"
 
   836 call *label21 *invalid :mineOre*retval (m:*label270) (h:*label270)
   837 label *label270
   838 return :mineOre.1*retaddr
-    * end
   839 label *label23
   840 sensor *tmp312 :fetchBlock:block @itemCapacity
   841 op min :transportStatus:target *tmp312 30
 
   909 write 0 .display ".transportTarget"
   910 write null .display ".transportItem"
   911 return :fetchBlock*retaddr
-    * end
   912 label *label24
   913 write "Supplying " .display ".status2"
   914 write :supplyBlock:ore .display ".item2"
 
   925 label *label286
   926 label *label284
   927 return :supplyBlock*retaddr
-    * end
   928 label *label27
   929 read *tmp342 :unpackCfg:cfg 1
   930 op sub *tmp343 *tmp342 74
 
   947 sensor :unpackCfg:mg :unpackCfg:type @metaglass
   948 sensor :unpackCfg:th :unpackCfg:type @thorium
   949 return :unpackCfg*retaddr
-    * end
   950 label *label34
   951 op sign :meetTarget:count :meetTarget:copper
   952 op sign *tmp368 :meetTarget:lead
 
  1079 jump *label675 equal *tmp381 false
  1080 label *label312
  1081 return :meetTarget*retaddr
-    * end
  1082 label *label35
  1083 set :meetTarget:block :buildBlock:block
  1084 set :meetTarget:copper :buildBlock:copper
 
  1105 jump *label331 equal *tmp410 false
  1106 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1107 return :buildBlock*retaddr
-    * end
  1108 label *label21
  1109 op min :mineOre:amount :mineOre:amount 30
  1110 write :mineOre:amount .display ".transportTarget"
 
  1180 write 0 .display ".transportTarget"
  1181 write null .display ".transportItem"
  1182 return :mineOre*retaddr
-    * end

Modifications by Final phase, Temp Variables Elimination, iteration 1:
 
    15 label *label44
    16 ubind @poly
    17 set .builder @unit
-    * ulocate building core false @copper .coreX .coreY *tmp115 .core
+   18 ulocate building core false @copper .coreX .coreY 0 .core
    19 jump *label44 equal .core null
    20 set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"
    21 set :buildBlockFromCfg:cfg "AJEMJJ-graphite-press0"
 
  1109 op min :mineOre:amount :mineOre:amount 30
  1110 write :mineOre:amount .display ".transportTarget"
  1111 write :mineOre:ore .display ".transportItem"
-    * ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 *tmp446
+ 1112 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp445 0
  1113 jump *label508 notEqual *tmp445 false
  1114 set .ERROR "Cannot locate ore"
  1115 stop

Final code before resolving virtual instructions:

    0:  set .ERROR ""                                                Actions.mnd: remote var ERROR = "";
    1:  set .display processor1                                      CoreBuilder.mnd: var display = processor1,
    2:  set .blockBuilder processor5                                 ...
        label *label43                                               CoreBuilder.mnd: require "MonoController.mnd" remote monoController;
    3:  read *tmp95 processor8 "*signature"                          ...
    4:  jump *label43 notEqual *tmp95 "0:v1"                         ...
    5:  set .titaniumDrill null                                      CoreBuilder.mnd: var
    6:  set .thoriumBattery null                                     ...
    7:  set .thoriumContainer null                                   ...
    8:  set .thoriumGenerator null                                   ...
    9:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   10:  set .graphiteSurplus 20                                      ...
   11:  set .siliconSurplus 20                                       ...
   12:  set .metaglassSurplus 20                                     ...
   13:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label44                                               CoreBuilder.mnd: do
   14:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   15:  set .builder @unit                                           ...
   16:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   17:  jump *label44 equal .core null                               CoreBuilder.mnd: do
   18:  set :buildBlockFromCfg.1:cfg "AJEMJJ-graphite-press0"        CoreBuilder.mnd: buildBlockFromCfg(PRESS);
   19:  set :buildBlockFromCfg:cfg "AJEMJJ-graphite-press0"          CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
   20:  set :buildBlockFromCfg:config null                           ...
   21:  setaddr :buildBlockFromCfg*retaddr *label701                 ...
   22:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label701                                              ...
   23:  set :buildBlockFromCfg.1:cfg "AJTJK-battery1"               CoreBuilder.mnd: buildBlockFromCfg(BATTERY1);
   24:  setaddr :buildBlockFromCfg.1*retaddr *label48                ...
   25:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label48                                               ...
   26:  set :buildBlockFromCfg.1:cfg "ALTJL-battery2"               CoreBuilder.mnd: buildBlockFromCfg(BATTERY2);
   27:  setaddr :buildBlockFromCfg.1*retaddr *label49                ...
   28:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label49                                               ...
   29:  set :buildBlockFromCfg.1:cfg "AJRJM-combustion-generator3"  CoreBuilder.mnd: buildBlockFromCfg(GENERATOR);
   30:  setaddr :buildBlockFromCfg.1*retaddr *label50                ...
   31:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label50                                               ...
   32:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
   33:  set :buildBlockFromCfg.1:cfg "ALMQJN-silicon-smelter4"       CoreBuilder.mnd: buildBlockFromCfg(SMELTER);
   34:  setaddr :buildBlockFromCfg.1*retaddr *label51                ...
   35:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label51                                               ...
   36:  set :buildBlockFromCfg.1:cfg "A{LNJO-inverted-sorter5"       CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT1);
   37:  setaddr :buildBlockFromCfg.1*retaddr *label52                ...
   38:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label52                                               ...
   39:  set :meetTarget.1:cfg "AJJJP-pneumatic-drill6"              CoreBuilder.mnd: meetTarget(cfg);
   40:  setaddr :meetTarget.1*retaddr *label54                       ...
   41:  call *label39 *invalid :meetTarget.1*retval                  ...
        label *label54                                               ...
   42:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
   43:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   44:  write .coreY processor4 ":findDrillLocation:y"               ...
   45:  write @unit processor4 ":findDrillLocation:unit"             ...
   46:  write @titanium processor4 ":findDrillLocation:item"         ...
   47:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
   48:  write 2 processor4 ":findDrillLocation:size"                 ...
   49:  write 4 processor4 ":findDrillLocation:limit"                ...
   50:  write false processor4 ":findDrillLocation*finished"         ...
   51:  write 1 processor4 "@counter"                                ...
        label *label55                                               ...
   52:  wait 1e-15                                                   ...
   53:  read *tmp134 processor4 ":findDrillLocation*finished"        ...
   54:  jump *label55 equal *tmp134 false                            ...
   55:  read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocat ...
   56:  read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocat ...
   57:  read :buildFirstTitaniumDrill:result processor4 ":findDrillL ...
   58:  jump *label56 notEqual :buildFirstTitaniumDrill:result false CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   59:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
   60:  stop                                                         Actions.mnd: stopProcessor();
        label *label56                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   61:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
   62:  write :buildFirstTitaniumDrill:dx processor5 ":buildFirstTit CoreBuilder.mnd: return blockBuilder.buildFirstTitaniumDrillAt(dx, dy);
   63:  write :buildFirstTitaniumDrill:dy processor5 ":buildFirstTit ...
   64:  write false processor5 ":buildFirstTitaniumDrillAt*finished" ...
   65:  write 2 processor5 "@counter"                                ...
        label *label59                                               ...
   66:  wait 1e-15                                                   ...
   67:  read *tmp140 processor5 ":buildFirstTitaniumDrillAt*finished ...
   68:  jump *label59 equal *tmp140 false                            ...
   69:  read *tmp123 processor5 ":buildFirstTitaniumDrillAt*retval"  ...
   70:  set .titaniumDrill *tmp123                                   CoreBuilder.mnd: titaniumDrill = buildFirstTitaniumDrill(PNEUMATIC_DRILL);
   71:  write *tmp123 processor1 ".titaniumDrill"                    CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
   72:  set :buildBlockFromCfg.1:cfg "A©JNJQ-unloader7"              CoreBuilder.mnd: buildBlockFromCfg(UNLOADER1);
   73:  setaddr :buildBlockFromCfg.1*retaddr *label60                ...
   74:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label60                                               ...
   75:  set :buildBlockFromCfg.1:cfg "A{HNJR-inverted-sorter8"       CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT2);
   76:  setaddr :buildBlockFromCfg.1*retaddr *label61                ...
   77:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label61                                               ...
   78:  set :buildBlockFromCfg.1:cfg "A~JPJS-overflow-gate9"         CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE1);
   79:  setaddr :buildBlockFromCfg.1*retaddr *label62                ...
   80:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label62                                               ...
   81:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
   82:  set :buildBlockFromCfg:cfg "AÕFFJT-micro-processor10"        CoreBuilder.mnd: controller = buildBlockFromCfg(PROCESSOR, processor2);
   83:  set :buildBlockFromCfg:config processor2                     ...
   84:  setaddr :buildBlockFromCfg*retaddr *label63                  ...
   85:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label63                                               ...
   86:  set .controller :buildBlockFromCfg*retval                    ...
   87:  write processor6 :buildBlockFromCfg*retval ".timer"          CoreBuilder.mnd: controller.timer = timer;
   88:  write processor1 :buildBlockFromCfg*retval ".display"        CoreBuilder.mnd: controller.display = display;
   89:  write .core :buildBlockFromCfg*retval ".core"                CoreBuilder.mnd: controller.core = core;
   90:  write bank1 :buildBlockFromCfg*retval ".bank"                CoreBuilder.mnd: controller.bank = bank1;
   91:  set *tmp147 AJEMJJ-graphite-press0                           CoreBuilder.mnd: controller.write(@this.read(block), block);
   92:  write *tmp147 :buildBlockFromCfg*retval "AJEMJJ-graphite-pre ...
   93:  set *tmp147 AJTJK-battery1                                  ...
   94:  write *tmp147 :buildBlockFromCfg*retval "AJTJK-battery1"    ...
   95:  set *tmp147 ALTJL-battery2                                  ...
   96:  write *tmp147 :buildBlockFromCfg*retval "ALTJL-battery2"    ...
   97:  set *tmp147 AJRJM-combustion-generator3                     ...
   98:  write *tmp147 :buildBlockFromCfg*retval "AJRJM-combustion-g ...
   99:  set *tmp147 ALMQJN-silicon-smelter4                          ...
  100:  write *tmp147 :buildBlockFromCfg*retval "ALMQJN-silicon-smel ...
  101:  set *tmp147 A{LNJO-inverted-sorter5                          ...
  102:  write *tmp147 :buildBlockFromCfg*retval "A{LNJO-inverted-sor ...
  103:  set *tmp147 AJJJP-pneumatic-drill6                          ...
  104:  write *tmp147 :buildBlockFromCfg*retval "AJJJP-pneumatic-dr ...
  105:  set *tmp147 A©JNJQ-unloader7                                 ...
  106:  write *tmp147 :buildBlockFromCfg*retval "A©JNJQ-unloader7"   ...
  107:  set *tmp147 A{HNJR-inverted-sorter8                          ...
  108:  write *tmp147 :buildBlockFromCfg*retval "A{HNJR-inverted-sor ...
  109:  set *tmp147 A~JPJS-overflow-gate9                            ...
  110:  write *tmp147 :buildBlockFromCfg*retval "A~JPJS-overflow-gat ...
  111:  set :buildBlockFromCfg.1:cfg "AFJJU-power-node11"           CoreBuilder.mnd: buildBlockFromCfg(POWER_NODE);
  112:  setaddr :buildBlockFromCfg.1*retaddr *label77                ...
  113:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label77                                               ...
  114:  set :buildBlockFromCfg.1:cfg "A©FHJV-unloader12"             CoreBuilder.mnd: buildBlockFromCfg(UNLOADER2);
  115:  setaddr :buildBlockFromCfg.1*retaddr *label78                ...
  116:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label78                                               ...
  117:  set :buildBlockFromCfg.1:cfg "A¾BHMW-air-factory13"          CoreBuilder.mnd: buildBlockFromCfg(AIR_FACTORY);
  118:  setaddr :buildBlockFromCfg.1*retaddr *label79                ...
  119:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label79                                               ...
  120:  write 1 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  121:  write 1 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  122:  write 3 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  123:  write 3 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  124:  write 85 .controller ".pressTarget"                          CoreBuilder.mnd: controller.pressTarget = 85;
  125:  write 150 .controller ".smelterTarget"                       CoreBuilder.mnd: controller.smelterTarget = 150;
  126:  write 30 .controller ".kilnTarget"                           CoreBuilder.mnd: controller.kilnTarget = 30;
  127:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  128:  set .siliconSurplus 20                                       ...
  129:  setaddr :buildUnits*retaddr *label82                         CoreBuilder.mnd: buildUnits();
  130:  call *label40 *invalid :buildUnits*retval                    ...
        label *label82                                               ...
        label *label83                                               CoreBuilder.mnd: do
  131:  setaddr :supplyBase*retaddr *label86                         CoreBuilder.mnd: supplyBase();
  132:  call *label33 *invalid :supplyBase*retval                    ...
        label *label86                                               ...
  133:  sensor *tmp151 AJTJK-battery1 @totalPower                   CoreBuilder.mnd: if battery1.@totalPower < 300 then break; end;
  134:  jump *label85 lessThan *tmp151 300                           ...
  135:  read *tmp82 .controller ".monos"                             CoreBuilder.mnd: while controller.monos < 3;
  136:  jump *label83 lessThan *tmp82 3                              CoreBuilder.mnd: do
        label *label85                                               ...
  137:  set .siliconSurplus 65                                       CoreBuilder.mnd: siliconSurplus = 65;
  138:  set :buildBlockFromCfg.1:cfg "A©NHJX-unloader14"             CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3);
  139:  setaddr :buildBlockFromCfg.1*retaddr *label89                ...
  140:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label89                                               ...
  141:  set :buildBlockFromCfg.1:cfg "A{NJJY-inverted-sorter15"      CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT3);
  142:  setaddr :buildBlockFromCfg.1*retaddr *label90                ...
  143:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label90                                               ...
  144:  set :buildBlockFromCfg.1:cfg "ANOMJZ-kiln16"                 CoreBuilder.mnd: buildBlockFromCfg(KILN);
  145:  setaddr :buildBlockFromCfg.1*retaddr *label91                ...
  146:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label91                                               ...
  147:  set :buildBlockFromCfg.1:cfg "A¡ASJ[-water-extractor17"      CoreBuilder.mnd: buildBlockFromCfg(WATER_EXT);
  148:  setaddr :buildBlockFromCfg.1*retaddr *label92                ...
  149:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label92                                               ...
  150:  set :buildBlockFromCfg:cfg "A©BLJ\-unloader18"               CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3A, @coal);
  151:  set :buildBlockFromCfg:config @coal                          ...
  152:  setaddr :buildBlockFromCfg*retaddr *label93                  ...
  153:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label93                                               ...
  154:  set :buildBlockFromCfg.1:cfg "AAOJ]-steam-generator19"      CoreBuilder.mnd: buildBlockFromCfg(STEAM_GEN);
  155:  setaddr :buildBlockFromCfg.1*retaddr *label94                ...
  156:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label94                                               ...
  157:  set :buildBlockFromCfg.1:cfg "AKFRJ^-multi-press20"          CoreBuilder.mnd: buildBlockFromCfg(MULTIPRESS);
  158:  setaddr :buildBlockFromCfg.1*retaddr *label95                ...
  159:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label95                                               ...
  160:  set .graphiteSurplus 150                                     CoreBuilder.mnd: graphiteSurplus = 150;
  161:  set :buildBlockFromCfg.1:cfg "AÇBBJ_-payload-router21"       CoreBuilder.mnd: buildBlockFromCfg(PAYLOAD_ROUTER);
  162:  setaddr :buildBlockFromCfg.1*retaddr *label96                ...
  163:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label96                                               ...
  164:  set :buildBlockFromCfg.1:cfg "A©HFJ`-unloader22"             CoreBuilder.mnd: buildBlockFromCfg(UNLOADER4);
  165:  setaddr :buildBlockFromCfg.1*retaddr *label97                ...
  166:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label97                                               ...
  167:  set :buildBlockFromCfg.1:cfg "AÀHBJa-additive-reconstructor2 CoreBuilder.mnd: buildBlockFromCfg(ADDITIVE_REC);
  168:  setaddr :buildBlockFromCfg.1*retaddr *label98                ...
  169:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label98                                               ...
  170:  set :buildBlockFromCfg.1:cfg "ATNJb-battery-large24"        CoreBuilder.mnd: buildBlockFromCfg(BATTERY_LARGE);
  171:  setaddr :buildBlockFromCfg.1*retaddr *label99                ...
  172:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label99                                               ...
  173:  setaddr :buildUnits*retaddr *label100                        CoreBuilder.mnd: buildUnits();
  174:  call *label40 *invalid :buildUnits*retval                    ...
        label *label100                                              ...
  175:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  176:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  177:  write 5 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = target;
  178:  write 5 processor1 ".polyTarget"                             CoreBuilder.mnd: display.polyTarget = target;
  179:  set :buildBlockFromCfg.1:cfg "ALSIJf-silicon-smelter28"      CoreBuilder.mnd: buildBlockFromCfg(SMELTER2);
  180:  setaddr :buildBlockFromCfg.1*retaddr *label102               ...
  181:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label102                                              ...
  182:  set :buildBlockFromCfg.1:cfg "A{PJJg-inverted-sorter29"      CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT4);
  183:  setaddr :buildBlockFromCfg.1*retaddr *label103               ...
  184:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label103                                              ...
  185:  set :buildBlockFromCfg.1:cfg "A{PHJh-inverted-sorter30"      CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT5);
  186:  setaddr :buildBlockFromCfg.1*retaddr *label104               ...
  187:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label104                                              ...
  188:  set :buildBlockFromCfg:cfg "A©PPJi-unloader31"               CoreBuilder.mnd: buildBlockFromCfg(UNLOADER5, @sand);
  189:  set :buildBlockFromCfg:config @sand                          ...
  190:  setaddr :buildBlockFromCfg*retaddr *label105                 ...
  191:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label105                                              ...
  192:  setaddr :buildUnits*retaddr *label106                        CoreBuilder.mnd: buildUnits();
  193:  call *label40 *invalid :buildUnits*retval                    ...
        label *label106                                              ...
  194:  read *tmp83 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 3 do
  195:  jump *label109 greaterThanEq *tmp83 3                        ...
        label *label691                                              ...
  196:  setaddr :supplyBase*retaddr *label110                        CoreBuilder.mnd: supplyBase();
  197:  call *label33 *invalid :supplyBase*retval                    ...
        label *label110                                              ...
  198:  read *tmp83 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 3 do
  199:  jump *label691 lessThan *tmp83 3                             ...
        label *label109                                              ...
  200:  write 3 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  201:  write 3 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  202:  read *tmp81 .controller ".flares"                            CoreBuilder.mnd: while controller.flares < 2 do
  203:  jump *label114 greaterThanEq *tmp81 2                        ...
        label *label692                                              ...
  204:  setaddr :supplyBase*retaddr *label115                        CoreBuilder.mnd: supplyBase();
  205:  call *label33 *invalid :supplyBase*retval                    ...
        label *label115                                              ...
  206:  read *tmp81 .controller ".flares"                            CoreBuilder.mnd: while controller.flares < 2 do
  207:  jump *label692 lessThan *tmp81 2                             ...
        label *label114                                              ...
  208:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
  209:  write 5 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  210:  write 5 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  211:  write @ore-titanium processor1 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
  212:  ubind @flare                                                 CoreBuilder.mnd: ubind(@flare);
  213:  read :blocksBuildTitaniumDrills:current processor4 ".locatio CoreBuilder.mnd: var current = oreLocator.locations;
  214:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: async(oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9));
  215:  write .coreY processor4 ":findDrillLocation:y"               ...
  216:  write @unit processor4 ":findDrillLocation:unit"             ...
  217:  write @titanium processor4 ":findDrillLocation:item"         ...
  218:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  219:  write 4 processor4 ":findDrillLocation:size"                 ...
  220:  write 1000000000 processor4 ":findDrillLocation:limit"       ...
  221:  write false processor4 ":findDrillLocation*finished"         ...
  222:  write 1 processor4 "@counter"                                ...
  223:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  224:  write .controller processor5 ":buildTitaniumDrills:aControll CoreBuilder.mnd: blockBuilder.buildTitaniumDrills(controller, current);
  225:  write :blocksBuildTitaniumDrills:current processor5 ":buildT ...
  226:  write false processor5 ":buildTitaniumDrills*finished"       ...
  227:  write 3 processor5 "@counter"                                ...
        label *label118                                              ...
  228:  wait 1e-15                                                   ...
  229:  read *tmp184 processor5 ":buildTitaniumDrills*finished"      ...
  230:  jump *label118 equal *tmp184 false                           ...
  231:  write false processor4 ":stopLocation*finished"              CoreBuilder.mnd: async(oreLocator.stopLocation());
  232:  write 3 processor4 "@counter"                                ...
  233:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  234:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7);
  235:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  236:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  237:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  238:  write false processor4 ":layoutThoriumDrill*finished"        ...
  239:  write 2 processor4 "@counter"                                ...
        label *label120                                              ...
  240:  wait 1e-15                                                   ...
  241:  read *tmp189 processor4 ":layoutThoriumDrill*finished"       ...
  242:  jump *label120 equal *tmp189 false                           ...
  243:  set :meetTarget.1:cfg "AJJJc-laser-drill25"                 CoreBuilder.mnd: meetTarget(LASER_DRILL);
  244:  setaddr :meetTarget.1*retaddr *label121                      ...
  245:  call *label39 *invalid :meetTarget.1*retval                  ...
        label *label121                                              ...
        label *label122                                              CoreBuilder.mnd: var result = await(oreLocator.layoutThoriumDrill);
  246:  wait 1e-15                                                   ...
  247:  read *tmp191 processor4 ":layoutThoriumDrill*finished"       ...
  248:  jump *label122 equal *tmp191 false                           ...
  249:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  250:  jump *label123 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  251:  set .ERROR "Cannot locate spot for thorium drill"            Actions.mnd: ERROR = error;
  252:  stop                                                         Actions.mnd: stopProcessor();
        label *label123                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  253:  write @laser-drill processor5 ":buildBlockAt:block"          CoreBuilder.mnd: thoriumDrill = blockBuilder.buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, -1);
  254:  read *tmp53 processor4 ".drillX"                             ...
  255:  write *tmp53 processor5 ":buildBlockAt:x"                    ...
  256:  read *tmp54 processor4 ".drillY"                             ...
  257:  write *tmp54 processor5 ":buildBlockAt:y"                    ...
  258:  write null processor5 ":buildBlockAt:rotation"               ...
  259:  write 0 processor5 ":buildBlockAt:config"                    ...
  260:  write -1 processor5 ":buildBlockAt:index"                    ...
  261:  write false processor5 ":buildBlockAt*finished"              ...
  262:  write 1 processor5 "@counter"                                ...
        label *label126                                              ...
  263:  wait 1e-15                                                   ...
  264:  read *tmp201 processor5 ":buildBlockAt*finished"             ...
  265:  jump *label126 equal *tmp201 false                           ...
  266:  read .thoriumDrill processor5 ":buildBlockAt*retval"         ...
  267:  set :buildRemoteBlock:cfg "A¡ASJ[-water-extractor17"         CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water1X, oreLocator.water1Y);
  268:  read :buildRemoteBlock:x processor4 ".water1X"               ...
  269:  read :buildRemoteBlock:y processor4 ".water1Y"               ...
  270:  setaddr :buildRemoteBlock*retaddr *label127                  ...
  271:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label127                                              ...
  272:  read :buildRemoteBlock:x processor4 ".water2X"               CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water2X, oreLocator.water2Y);
  273:  read :buildRemoteBlock:y processor4 ".water2Y"               ...
  274:  setaddr :buildRemoteBlock*retaddr *label128                  ...
  275:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label128                                              ...
  276:  set :buildRemoteBlock:cfg "AAOJ]-steam-generator19"         CoreBuilder.mnd: thoriumGenerator = buildRemoteBlock(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  277:  read :buildRemoteBlock:x processor4 ".generatorX"            ...
  278:  read :buildRemoteBlock:y processor4 ".generatorY"            ...
  279:  setaddr :buildRemoteBlock*retaddr *label129                  ...
  280:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label129                                              ...
  281:  set .thoriumGenerator :buildRemoteBlock*retval               ...
  282:  set :buildRemoteBlock:cfg "AFJJU-power-node11"              CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.node1X, oreLocator.node1Y);
  283:  read :buildRemoteBlock:x processor4 ".node1X"                ...
  284:  read :buildRemoteBlock:y processor4 ".node1Y"                ...
  285:  setaddr :buildRemoteBlock*retaddr *label130                  ...
  286:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label130                                              ...
  287:  read :buildRemoteBlock:x processor4 ".node2X"                CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.node2X, oreLocator.node2Y);
  288:  read :buildRemoteBlock:y processor4 ".node2Y"                ...
  289:  setaddr :buildRemoteBlock*retaddr *label131                  ...
  290:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label131                                              ...
  291:  set :buildRemoteBlock:cfg "AJJJd-solar-panel26"             CoreBuilder.mnd: buildRemoteBlock(SOLAR_PANEL, oreLocator.panelX, oreLocator.panelY);
  292:  read :buildRemoteBlock:x processor4 ".panelX"                ...
  293:  read :buildRemoteBlock:y processor4 ".panelY"                ...
  294:  setaddr :buildRemoteBlock*retaddr *label132                  ...
  295:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label132                                              ...
  296:  set :buildRemoteBlock:cfg "AJTJK-battery1"                  CoreBuilder.mnd: thoriumBattery = buildRemoteBlock(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  297:  read :buildRemoteBlock:x processor4 ".batteryX"              ...
  298:  read :buildRemoteBlock:y processor4 ".batteryY"              ...
  299:  setaddr :buildRemoteBlock*retaddr *label133                  ...
  300:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label133                                              ...
  301:  set .thoriumBattery :buildRemoteBlock*retval                 ...
  302:  set :buildRemoteBlock:cfg "A¨JJJe-container27"               CoreBuilder.mnd: thoriumContainer = buildRemoteBlock(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  303:  read :buildRemoteBlock:x processor4 ".containerX"            ...
  304:  read :buildRemoteBlock:y processor4 ".containerY"            ...
  305:  setaddr :buildRemoteBlock*retaddr *label134                  ...
  306:  call *label36 *invalid :buildRemoteBlock*retval              ...
        label *label134                                              ...
  307:  select .thoriumContainer equal :buildRemoteBlock*retval null CoreBuilder.mnd: if thoriumContainer == null then thoriumContainer = thoriumDrill; end;
  308:  write .thoriumDrill processor1 ".thoriumDrill"               CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  309:  write .thoriumContainer processor1 ".thoriumContainer"       CoreBuilder.mnd: display.thoriumContainer = thoriumContainer;
  310:  write .thoriumContainer processor3 ":setThoriumContainer:con CoreBuilder.mnd: polyController.setThoriumContainer(thoriumContainer);
  311:  write false processor3 ":setThoriumContainer*finished"       ...
  312:  write 3 processor3 "@counter"                                ...
        label *label137                                              ...
  313:  wait 1e-15                                                   ...
  314:  read *tmp214 processor3 ":setThoriumContainer*finished"      ...
  315:  jump *label137 equal *tmp214 false                           ...
  316:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  317:  write 1 .controller ".megaTarget"                            CoreBuilder.mnd: controller.megaTarget = target;
  318:  write 1 processor1 ".megaTarget"                             CoreBuilder.mnd: display.megaTarget = target;
  319:  read *tmp83 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 5 do
  320:  jump *label141 greaterThanEq *tmp83 5                        ...
        label *label693                                              ...
  321:  setaddr :supplyBase*retaddr *label142                        CoreBuilder.mnd: supplyBase();
  322:  call *label33 *invalid :supplyBase*retval                    ...
        label *label142                                              ...
  323:  read *tmp83 .controller ".polys"                             CoreBuilder.mnd: while controller.polys < 5 do
  324:  jump *label693 lessThan *tmp83 5                             ...
        label *label141                                              ...
  325:  set :buildBlockFromCfg:cfg "A©JFJj-unloader32"               CoreBuilder.mnd: buildBlockFromCfg(UNLOADER6, @silicon);
  326:  set :buildBlockFromCfg:config @silicon                       ...
  327:  setaddr :buildBlockFromCfg*retaddr *label143                 ...
  328:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label143                                              ...
  329:  set :buildBlockFromCfg.1:cfg "AÁPBJk-multiplicative-reconstr CoreBuilder.mnd: buildBlockFromCfg(MULTIPLICATIVE_REC);
  330:  setaddr :buildBlockFromCfg.1*retaddr *label144               ...
  331:  call *label38 *invalid :buildBlockFromCfg.1*retval           ...
        label *label144                                              ...
  332:  set .metaglassSurplus 50                                     CoreBuilder.mnd: metaglassSurplus = 50;
  333:  setaddr :buildUnits*retaddr *label145                        CoreBuilder.mnd: buildUnits();
  334:  call *label40 *invalid :buildUnits*retval                    ...
        label *label145                                              ...
  335:  read *tmp84 .controller ".megas"                             CoreBuilder.mnd: while controller.megas < 1 do
  336:  jump *label148 greaterThanEq *tmp84 1                        ...
        label *label694                                              ...
  337:  setaddr :supplyBase*retaddr *label149                        CoreBuilder.mnd: supplyBase();
  338:  call *label33 *invalid :supplyBase*retval                    ...
        label *label149                                              ...
  339:  read *tmp84 .controller ".megas"                             CoreBuilder.mnd: while controller.megas < 1 do
  340:  jump *label694 lessThan *tmp84 1                             ...
        label *label148                                              ...
  341:  control enabled processor7 false 0 0 0                       CoreBuilder.mnd: flareController.enabled = false;
  342:  control enabled processor8 false 0 0 0                       CoreBuilder.mnd: monoController.enabled = false;
  343:  control enabled processor3 false 0 0 0                       CoreBuilder.mnd: processor3.enabled = false;
  344:  control enabled processor4 false 0 0 0                       CoreBuilder.mnd: processor4.enabled = false;
  345:  control enabled processor5 false 0 0 0                       CoreBuilder.mnd: processor5.enabled = false;
  346:  set :flagUnits:unit @mega                                    CoreBuilder.mnd: flagUnits(@mega);
  347:  setaddr :flagUnits*retaddr *label151                         ...
  348:  call *label41 *invalid :flagUnits*retval                     ...
        label *label151                                              ...
  349:  set :flagUnits:unit @poly                                    CoreBuilder.mnd: flagUnits(@poly);
  350:  setaddr :flagUnits*retaddr *label152                         ...
  351:  call *label41 *invalid :flagUnits*retval                     ...
        label *label152                                              ...
  352:  set :flagUnits:unit @mono                                    CoreBuilder.mnd: flagUnits(@mono);
  353:  setaddr :flagUnits*retaddr *label153                         ...
  354:  call *label41 *invalid :flagUnits*retval                     ...
        label *label153                                              ...
  355:  set :flagUnits:unit @flare                                   CoreBuilder.mnd: flagUnits(@flare);
  356:  setaddr :flagUnits*retaddr *label154                         ...
  357:  call *label41 *invalid :flagUnits*retval                     ...
        label *label154                                              ...
        label *label155                                              CoreBuilder.mnd: while true do
  358:  op sub :lineUpUnits:y @thisy 6                               CoreBuilder.mnd: lineUpUnits(@thisy -  6, @mega);
  359:  set :lineUpUnits:unit @mega                                  ...
  360:  setaddr :lineUpUnits*retaddr *label158                       ...
  361:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label158                                              ...
  362:  op sub :lineUpUnits:y @thisy 10                              CoreBuilder.mnd: lineUpUnits(@thisy - 10, @poly);
  363:  set :lineUpUnits:unit @poly                                  ...
  364:  setaddr :lineUpUnits*retaddr *label159                       ...
  365:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label159                                              ...
  366:  op sub :lineUpUnits:y @thisy 14                              CoreBuilder.mnd: lineUpUnits(@thisy - 14, @mono);
  367:  set :lineUpUnits:unit @mono                                  ...
  368:  setaddr :lineUpUnits*retaddr *label160                       ...
  369:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label160                                              ...
  370:  op sub :lineUpUnits:y @thisy 18                              CoreBuilder.mnd: lineUpUnits(@thisy - 18, @flare);
  371:  set :lineUpUnits:unit @flare                                 ...
  372:  setaddr :lineUpUnits*retaddr *label155                       ...
  373:  call *label42 *invalid :lineUpUnits*retval                   ...
        label *label33                                               CoreBuilder.mnd: void supplyBase()
  374:  sensor *tmp228 .core @silicon                                CoreBuilder.mnd: monoController.sandTarget = max(0, targetSilicon - core.@silicon);
  375:  op sub *tmp229 .targetSilicon *tmp228                        ...
  376:  op max *tmp230 0 *tmp229                                     ...
  377:  write *tmp230 processor8 ".sandTarget"                       ...
  378:  jump *label164 equal .thoriumContainer false                 CoreBuilder.mnd: if thoriumContainer then
  379:  write "Phase 2: servicing thorium drill" .display ".status1" Actions.mnd: display.status1 = text;
  380:  sensor *tmp232 .thoriumBattery @totalPower                   CoreBuilder.mnd: if thoriumBattery.@totalPower < 2000 then
  381:  jump *label168 greaterThanEq *tmp232 2000                    ...
  382:  sensor *tmp235 .core @coal                                   CoreBuilder.mnd: if core.@coal < 50 then
  383:  jump *label170 greaterThanEq *tmp235 50                      ...
  384:  set :supplyBlock:block .thoriumGenerator                     CoreBuilder.mnd: supplyBlock(thoriumGenerator, @coal);
  385:  set :supplyBlock:ore @coal                                   ...
  386:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2 = text;
  387:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  388:  write .thoriumGenerator .display ".block2"                   Actions.mnd: display.block2 = block;
  389:  sensor :supplyBlock:blockCapacity .thoriumGenerator @itemCap Actions.mnd: var blockCapacity = block.@itemCapacity;
  390:  sensor *tmp326 .thoriumGenerator @coal                       Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  391:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp3 ...
  392:  jump *label171 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  393:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, blockCapacity, block);
  394:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  395:  set :mineOre:block .thoriumGenerator                         ...
  396:  setaddr :mineOre*retaddr *label171                           ...
  397:  call *label21 *invalid :mineOre*retval                       ...
        label *label170                                              CoreBuilder.mnd: if core.@coal < 50 then
  398:  sensor *tmp330 .thoriumGenerator @itemCapacity               Actions.mnd: transportStatus(min(target.@itemCapacity, capacity), item);
  399:  op min :transportStatus:target *tmp330 30                    ...
  400:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  401:  write @coal .display ".transportItem"                        Actions.mnd: display.transportItem = item;
  402:  write "Transferring " .display ".status2"                    Actions.mnd: display.status2 = text;
  403:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  404:  write .thoriumGenerator .display ".block2"                   Actions.mnd: display.block2 = block;
  405:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label552                                              Actions.mnd: do
  406:  sensor *tmp412 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  407:  jump *label553 equal *tmp412 null                            ...
  408:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label553                                              ...
  409:  ucontrol approach .coreX .coreY 5.5 0 0                      Actions.mnd: approach(x, y, RADIUS - 0.5);
  410:  ucontrol within .coreX .coreY 6 *tmp415 0                    Actions.mnd: while !within(x, y, RADIUS);
  411:  jump *label552 equal *tmp415 false                           Actions.mnd: do
  412:  sensor *tmp417 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  413:  jump *label580 equal *tmp417 null                            ...
        label *label578                                              ...
  414:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  415:  sensor *tmp417 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  416:  jump *label578 notEqual *tmp417 null                         ...
        label *label580                                              ...
        label *label488                                              Actions.mnd: do
  417:  ucontrol itemTake .core @coal 30 0 0                         Actions.mnd: itemTake(core, item, capacity);
  418:  sensor :supplyBlockFromCore:unitItem @unit @firstItem        Actions.mnd: var unitItem = @unit.@firstItem;
  419:  op notEqual *tmp333 :supplyBlockFromCore:unitItem null       Actions.mnd: if unitItem != null and unitItem != item then
  420:  op notEqual *tmp334 :supplyBlockFromCore:unitItem @coal      ...
  421:  op land *tmp335 *tmp333 *tmp334                              ...
  422:  jump *label489 equal *tmp335 false                           ...
  423:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label489                                              Actions.mnd: if unitItem != null and unitItem != item then
  424:  sensor *tmp337 @unit @coal                                   Actions.mnd: while @unit.sensor(item) < capacity and core.sensor(item);
  425:  op lessThan *tmp338 *tmp337 30                               ...
  426:  sensor *tmp339 .core @coal                                   ...
  427:  op land *tmp340 *tmp338 *tmp339                              ...
  428:  jump *label488 notEqual *tmp340 false                        Actions.mnd: do
  429:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  430:  sensor *tmp419 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  431:  jump *label634 notEqual *tmp419 @coal                        ...
  432:  sensor *tmp443 .thoriumGenerator @x                          Actions.mnd: moveTo(block.@x, block.@y, radius);
  433:  sensor *tmp444 .thoriumGenerator @y                          ...
  434:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  435:  ucontrol within *tmp443 *tmp444 6 *tmp449 0                  Actions.mnd: while !within(x, y, radius) do
  436:  jump *label628 notEqual *tmp449 false                        ...
        label *label626                                              ...
  437:  ucontrol approach *tmp443 *tmp444 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  438:  ucontrol within *tmp443 *tmp444 6 *tmp449 0                  Actions.mnd: while !within(x, y, radius) do
  439:  jump *label626 equal *tmp449 false                           ...
        label *label628                                              ...
  440:  sensor :depositItems:cap .thoriumGenerator @itemCapacity     Actions.mnd: var cap = block.@itemCapacity;
        label *label631                                              Actions.mnd: do
  441:  ucontrol itemDrop .thoriumGenerator 30 0 0 0                 Actions.mnd: itemDrop(block, capacity);
  442:  sensor *tmp423 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  443:  op mul *tmp424 *tmp423 :depositItems:cap                     ...
  444:  sensor *tmp425 .thoriumGenerator @coal                       ...
  445:  jump *label631 greaterThan *tmp424 *tmp425                   Actions.mnd: do
  446:  jump *label639 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label634                                              ...
  447:  sensor *tmp427 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  448:  jump *label638 equal *tmp427 null                            ...
        label *label636                                              ...
  449:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  450:  sensor *tmp427 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  451:  jump *label636 notEqual *tmp427 null                         ...
        label *label638                                              ...
        label *label639                                              Actions.mnd: if @unit.@firstItem == item then
  452:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  453:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
        label *label171                                              CoreBuilder.mnd: if core.@coal < 50 then
        label *label168                                              CoreBuilder.mnd: if thoriumBattery.@totalPower < 2000 then
  454:  set :fetchBlock:block .thoriumContainer                      CoreBuilder.mnd: fetchBlock(thoriumContainer, @thorium);
  455:  set :fetchBlock:item @thorium                                ...
  456:  setaddr :fetchBlock*retaddr *label174                        ...
  457:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label174                                              ...
  458:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if thoriumContainer then
        label *label164                                              ...
  459:  read *tmp82 .controller ".monos"                             CoreBuilder.mnd: elsif controller.monos > 3 then
  460:  jump *label175 lessThanEq *tmp82 3                           ...
  461:  write "Phase 1: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  462:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  463:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  464:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  465:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  466:  set :mineOre:amount 30                                       ...
  467:  set :mineOre:block .core                                     ...
  468:  setaddr :mineOre*retaddr *label591                           ...
  469:  call *label21 *invalid :mineOre*retval                       ...
        label *label591                                              ...
  470:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif controller.monos > 3 then
        label *label175                                              ...
  471:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  472:  jump *label181 notEqual A©JNJQ-unloader7 null                CoreBuilder.mnd: if unloader1 == null then
  473:  sensor *tmp242 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  474:  jump *label183 greaterThanEq *tmp242 .targetGraphite         ...
  475:  sensor *tmp245 AJEMJJ-graphite-press0 @coal                  CoreBuilder.mnd: if press.@coal < 5 then
  476:  jump *label185 greaterThanEq *tmp245 5                       ...
  477:  write "Goal 1: graphite requirement" .display ".status1"     Actions.mnd: display.status1 = text;
  478:  set :supplyBlock:block AJEMJJ-graphite-press0                CoreBuilder.mnd: supplyBlock(press, @coal);
  479:  set :supplyBlock:ore @coal                                   ...
  480:  setaddr :supplyBlock*retaddr *label188                       ...
  481:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label188                                              ...
  482:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label185                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label183                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  483:  sensor *tmp248 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  484:  jump *label189 greaterThanEq *tmp248 .targetSilicon          ...
  485:  sensor *tmp251 ALMQJN-silicon-smelter4 @coal                 CoreBuilder.mnd: if smelter.@coal < 5 then
  486:  jump *label191 greaterThanEq *tmp251 5                       ...
  487:  write "Goal 2: coal for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  488:  set :supplyBlock:block ALMQJN-silicon-smelter4               CoreBuilder.mnd: supplyBlock(smelter, @coal);
  489:  set :supplyBlock:ore @coal                                   ...
  490:  setaddr :supplyBlock*retaddr *label194                       ...
  491:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label194                                              ...
  492:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  493:  jump *label192 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label191                                              ...
  494:  sensor *tmp254 ALMQJN-silicon-smelter4 @sand                 CoreBuilder.mnd: elsif smelter.@sand < 5 then
  495:  jump *label195 greaterThanEq *tmp254 5                       ...
  496:  write "Goal 3: sand for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  497:  set :supplyBlock:block ALMQJN-silicon-smelter4               CoreBuilder.mnd: supplyBlock(smelter, @sand);
  498:  set :supplyBlock:ore @sand                                   ...
  499:  setaddr :supplyBlock*retaddr *label198                       ...
  500:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label198                                              ...
  501:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label195                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label192                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label189                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  502:  sensor *tmp257 AJTJK-battery1 @totalPower                   CoreBuilder.mnd: if battery1.@totalPower < powerTarget then
  503:  jump *label199 greaterThanEq *tmp257 .powerTarget            ...
  504:  sensor *tmp260 AJRJM-combustion-generator3 @coal            CoreBuilder.mnd: if generator.@coal < 2 then
  505:  jump *label201 greaterThanEq *tmp260 2                       ...
  506:  write "Goal 4: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  507:  set :supplyBlock:block AJRJM-combustion-generator3          CoreBuilder.mnd: supplyBlock(generator, @coal);
  508:  set :supplyBlock:ore @coal                                   ...
  509:  setaddr :supplyBlock*retaddr *label204                       ...
  510:  call *label24 *invalid :supplyBlock*retval                   ...
        label *label204                                              ...
  511:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label201                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label199                                              CoreBuilder.mnd: if battery1.@totalPower < powerTarget then
        label *label181                                              CoreBuilder.mnd: if unloader1 == null then
  512:  set *tmp265 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  513:  sensor *tmp263 .core @titanium                               ...
  514:  jump *label206 greaterThanEq *tmp263 .targetTitanium         ...
  515:  sensor *tmp266 .core @titanium                               ...
  516:  op sub *tmp267 .targetTitanium *tmp266                       ...
  517:  op min *tmp265 7 *tmp267                                     ...
        label *label206                                              ...
  518:  sensor *tmp269 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  519:  jump *label207 greaterThanEq *tmp269 *tmp265                 ...
  520:  jump *label208 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  521:  sensor *tmp274 AJTJK-battery1 @totalPower                   CoreBuilder.mnd: if battery1.@totalPower < unloader1 * powerTarget then
  522:  op mul *tmp275 A©JNJQ-unloader7 .powerTarget                 ...
  523:  jump *label211 greaterThanEq *tmp274 *tmp275                 ...
  524:  write "Goal 5: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  525:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  526:  write @coal .display ".item2"                                Actions.mnd: display.item2 = item;
  527:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  528:  set :mineOre:ore @coal                                       Actions.mnd: mineOre(ore, capacity, core);
  529:  set :mineOre:amount 30                                       ...
  530:  set :mineOre:block .core                                     ...
  531:  setaddr :mineOre*retaddr *label698                           ...
  532:  call *label21 *invalid :mineOre*retval                       ...
        label *label698                                              ...
  533:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if battery1.@totalPower < unloader1 * powerTarget then
        label *label211                                              ...
  534:  sensor *tmp278 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  535:  jump *label215 greaterThanEq *tmp278 .targetSilicon          ...
  536:  write "Goal 6: silicon requirement" .display ".status1"      Actions.mnd: display.status1 = text;
  537:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  538:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  539:  select :mineOre.1:ore lessThan :supplyBase0:coal :supplyBase CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  540:  setaddr :mineOre.1*retaddr *label220                         CoreBuilder.mnd: mineOre(ore);
  541:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label220                                              ...
  542:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label215                                              ...
  543:  sensor *tmp285 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  544:  jump *label221 greaterThanEq *tmp285 .targetCopper           ...
  545:  write "Goal 7: copper requirement" .display ".status1"       Actions.mnd: display.status1 = text;
  546:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  547:  setaddr :mineOre.1*retaddr *label224                         ...
  548:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label224                                              ...
  549:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label221                                              ...
  550:  sensor *tmp288 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  551:  jump *label225 greaterThanEq *tmp288 .targetLead             ...
  552:  write "Goal 8: lead requirement" .display ".status1"         Actions.mnd: display.status1 = text;
  553:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  554:  setaddr :mineOre.1*retaddr *label228                         ...
  555:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label228                                              ...
  556:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label225                                              ...
  557:  sensor *tmp291 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  558:  jump *label229 greaterThanEq *tmp291 .targetMetaglass        ...
  559:  write "Goal 9: metaglass requirement" .display ".status1"    Actions.mnd: display.status1 = text;
  560:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  561:  setaddr :mineOre.1*retaddr *label232                         ...
  562:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label232                                              ...
  563:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label229                                              ...
  564:  write "Goal 10: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  565:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  566:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  567:  select :mineOre.1:ore lessThanEq :supplyBase0:coal.1 :supply CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  568:  setaddr :mineOre.1*retaddr *label236                         CoreBuilder.mnd: mineOre(ore);
  569:  call *label22 *invalid :mineOre.1*retval                     ...
        label *label236                                              ...
  570:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label207                                              ...
  571:  write "Goal 11: Fetching titanium" .display ".status1"       Actions.mnd: display.status1 = text;
  572:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  573:  set :fetchBlock:item @titanium                               ...
  574:  setaddr :fetchBlock*retaddr *label238                        ...
  575:  call *label23 *invalid :fetchBlock*retval                    ...
        label *label238                                              ...
        label *label208                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  576:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label36                                               CoreBuilder.mnd: def buildRemoteBlock(cfg, x, y)
  577:  op add *tmp298 :buildRemoteBlock:x :buildRemoteBlock:y       CoreBuilder.mnd: if x + y > 0 then
  578:  jump *label240 lessThanEq *tmp298 0                          ...
  579:  set :unpackCfg:cfg :buildRemoteBlock:cfg                     CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  580:  setaddr :unpackCfg*retaddr *label242                         ...
  581:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label242                                              ...
  582:  set :buildBlock:block :unpackCfg:type                        CoreBuilder.mnd: return buildBlock(type, x, y, cu, pb, gr, si, ti, mg, th, rotation, null, index);
  583:  set :buildBlock:x :buildRemoteBlock:x                        ...
  584:  set :buildBlock:y :buildRemoteBlock:y                        ...
  585:  set :buildBlock:copper :unpackCfg:cu                         ...
  586:  set :buildBlock:lead :unpackCfg:pb                           ...
  587:  set :buildBlock:graphite :unpackCfg:gr                       ...
  588:  set :buildBlock:silicon :unpackCfg:si                        ...
  589:  set :buildBlock:titanium :unpackCfg:ti                       ...
  590:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  591:  set :buildBlock:thorium :unpackCfg:th                        ...
  592:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  593:  set :buildBlock:config null                                  ...
  594:  set :buildBlock:index :unpackCfg:ind                         ...
  595:  setaddr :buildBlock*retaddr *label243                        ...
  596:  call *label35 *invalid :buildBlock*retval                    ...
        label *label243                                              ...
  597:  set :buildRemoteBlock*retval :buildBlock*retval              ...
  598:  return :buildRemoteBlock*retaddr                             ...
        label *label240                                              CoreBuilder.mnd: if x + y > 0 then
  599:  set :buildRemoteBlock*retval false                           CoreBuilder.mnd: return false;
  600:  return :buildRemoteBlock*retaddr                             ...
        label *label37                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
  601:  set :unpackCfg:cfg :buildBlockFromCfg:cfg                    CoreBuilder.mnd: unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, , out index);
  602:  setaddr :unpackCfg*retaddr *label245                         ...
  603:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label245                                              ...
  604:  op add *tmp301 .coreX :unpackCfg:x                           CoreBuilder.mnd: var building = buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, th, rotation, config, index);
  605:  op add *tmp302 .coreY :unpackCfg:y                           ...
  606:  set :buildBlock:block :unpackCfg:type                        ...
  607:  set :buildBlock:x *tmp301                                    ...
  608:  set :buildBlock:y *tmp302                                    ...
  609:  set :buildBlock:copper :unpackCfg:cu                         ...
  610:  set :buildBlock:lead :unpackCfg:pb                           ...
  611:  set :buildBlock:graphite :unpackCfg:gr                       ...
  612:  set :buildBlock:silicon :unpackCfg:si                        ...
  613:  set :buildBlock:titanium :unpackCfg:ti                       ...
  614:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  615:  set :buildBlock:thorium :unpackCfg:th                        ...
  616:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  617:  set :buildBlock:config :buildBlockFromCfg:config             ...
  618:  set :buildBlock:index :unpackCfg:ind                         ...
  619:  setaddr :buildBlock*retaddr *label246                        ...
  620:  call *label35 *invalid :buildBlock*retval                    ...
        label *label246                                              ...
  621:  write :buildBlock*retval @this :buildBlockFromCfg:cfg        CoreBuilder.mnd: @this.write(building, cfg);
  622:  write :buildBlock*retval .display :buildBlockFromCfg:cfg     CoreBuilder.mnd: display.write(building, cfg);
  623:  write :buildBlock*retval .controller :buildBlockFromCfg:cfg  CoreBuilder.mnd: controller.write(building, cfg);
  624:  set :buildBlockFromCfg*retval :buildBlock*retval             CoreBuilder.mnd: return building;
  625:  return :buildBlockFromCfg*retaddr                            CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
        label *label38                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  626:  set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg          CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
  627:  set :buildBlockFromCfg:config null                           ...
  628:  setaddr :buildBlockFromCfg*retaddr *label248                 ...
  629:  call *label37 *invalid :buildBlockFromCfg*retval             ...
        label *label248                                              ...
  630:  return :buildBlockFromCfg.1*retaddr                          CoreBuilder.mnd: def buildBlockFromCfg(cfg)
        label *label39                                               CoreBuilder.mnd: void meetTarget(cfg)
  631:  set :unpackCfg:cfg :meetTarget.1:cfg                         CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th);
  632:  setaddr :unpackCfg*retaddr *label250                         ...
  633:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label250                                              ...
  634:  set :meetTarget:block :unpackCfg:type                        CoreBuilder.mnd: meetTarget(type, cu, pb, gr, si, ti, mg, th);
  635:  set :meetTarget:copper :unpackCfg:cu                         ...
  636:  set :meetTarget:lead :unpackCfg:pb                           ...
  637:  set :meetTarget:graphite :unpackCfg:gr                       ...
  638:  set :meetTarget:silicon :unpackCfg:si                        ...
  639:  set :meetTarget:titanium :unpackCfg:ti                       ...
  640:  set :meetTarget:metaglass :unpackCfg:mg                      ...
  641:  set :meetTarget:thorium :unpackCfg:th                        ...
  642:  setaddr :meetTarget*retaddr *label251                        ...
  643:  call *label34 *invalid :meetTarget*retval                    ...
        label *label251                                              ...
  644:  return :meetTarget.1*retaddr                                 CoreBuilder.mnd: void meetTarget(cfg)
        label *label40                                               CoreBuilder.mnd: void buildUnits()
  645:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0, 0);
  646:  set :meetTarget:copper 0                                     ...
  647:  set :meetTarget:lead 0                                       ...
  648:  set :meetTarget:graphite 0                                   ...
  649:  set :meetTarget:silicon 0                                    ...
  650:  set :meetTarget:titanium 0                                   ...
  651:  set :meetTarget:metaglass 0                                  ...
  652:  set :meetTarget:thorium 0                                    ...
  653:  setaddr :meetTarget*retaddr *label253                        ...
  654:  call *label34 *invalid :meetTarget*retval                    ...
        label *label253                                              ...
  655:  write 0 .display ".totalTargets"                             CoreBuilder.mnd: display.totalTargets = 0;
  656:  write null .display ".nextBlock"                             CoreBuilder.mnd: display.nextBlock = null;
  657:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  658:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
  659:  write 0 .controller ".graphiteReserve"                       CoreBuilder.mnd: controller.graphiteReserve = 0;
  660:  return :buildUnits*retaddr                                   CoreBuilder.mnd: void buildUnits()
        label *label41                                               CoreBuilder.mnd: void flagUnits(unit)
        label *label255                                              CoreBuilder.mnd: do
  661:  ubind :flagUnits:unit                                        CoreBuilder.mnd: firstUnit = ubind(unit);
  662:  set :flagUnits:firstUnit @unit                               ...
  663:  jump *label255 equal :flagUnits:firstUnit null               CoreBuilder.mnd: do
  664:  set :flagUnits:x @thisx                                      CoreBuilder.mnd: var x = @thisx;
        label *label258                                              CoreBuilder.mnd: do
  665:  ucontrol flag :flagUnits:x 0 0 0 0                           CoreBuilder.mnd: flag(x);
  666:  op add :flagUnits:x :flagUnits:x 4                           CoreBuilder.mnd: x += 4;
  667:  ubind :flagUnits:unit                                        CoreBuilder.mnd: ubind(unit);
  668:  jump *label258 notEqual @unit :flagUnits:firstUnit           CoreBuilder.mnd: do
  669:  return :flagUnits*retaddr                                    CoreBuilder.mnd: void flagUnits(unit)
        label *label42                                               CoreBuilder.mnd: void lineUpUnits(y, unit)
  670:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: var firstUnit = ubind(unit);
  671:  set :lineUpUnits:firstUnit @unit                             ...
        label *label262                                              CoreBuilder.mnd: do
  672:  sensor :lineUpUnits:x @unit @flag                            CoreBuilder.mnd: var x = @unit.@flag;
  673:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
  674:  ucontrol move :lineUpUnits:x :lineUpUnits:y 0 0 0            CoreBuilder.mnd: move(x, y);
  675:  sensor *tmp308 @unit @mining                                 CoreBuilder.mnd: if @unit.@mining then stop(); end;
  676:  jump *label265 equal *tmp308 false                           ...
  677:  ucontrol stop 0 0 0 0 0                                      ...
        label *label265                                              ...
  678:  ubind :lineUpUnits:unit                                      CoreBuilder.mnd: ubind(unit);
  679:  jump *label262 notEqual @unit :lineUpUnits:firstUnit         CoreBuilder.mnd: do
  680:  return :lineUpUnits*retaddr                                  CoreBuilder.mnd: void lineUpUnits(y, unit)
        label *label22                                               Actions.mnd: void mineOre(ore)
  681:  write "Mining " .display ".status2"                          Actions.mnd: display.status2 = text;
  682:  write :mineOre.1:ore .display ".item2"                       Actions.mnd: display.item2 = item;
  683:  write "core" .display ".block2"                              Actions.mnd: display.block2 = block;
  684:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  685:  set :mineOre:amount 30                                       ...
  686:  set :mineOre:block .core                                     ...
  687:  setaddr :mineOre*retaddr *label270                           ...
  688:  call *label21 *invalid :mineOre*retval                       ...
        label *label270                                              ...
  689:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label23                                               Actions.mnd: void fetchBlock(block, item)
  690:  sensor *tmp312 :fetchBlock:block @itemCapacity               Actions.mnd: transportStatus(min(block.@itemCapacity, capacity), item);
  691:  op min :transportStatus:target *tmp312 30                    ...
  692:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  693:  write :fetchBlock:item .display ".transportItem"             Actions.mnd: display.transportItem = item;
  694:  write "Fetching " .display ".status2"                        Actions.mnd: display.status2 = text;
  695:  write :fetchBlock:item .display ".item2"                     Actions.mnd: display.item2 = item;
  696:  write :fetchBlock:block .display ".block2"                   Actions.mnd: display.block2 = block;
  697:  sensor *tmp314 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  698:  sensor *tmp315 :fetchBlock:block @y                          ...
  699:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label561                                              Actions.mnd: do
  700:  sensor *tmp412 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  701:  jump *label562 equal *tmp412 null                            ...
  702:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label562                                              ...
  703:  ucontrol approach *tmp314 *tmp315 5.5 0 0                    Actions.mnd: approach(x, y, RADIUS - 0.5);
  704:  ucontrol within *tmp314 *tmp315 6 *tmp415 0                  Actions.mnd: while !within(x, y, RADIUS);
  705:  jump *label561 equal *tmp415 false                           Actions.mnd: do
  706:  sensor *tmp417 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  707:  jump *label547 equal *tmp417 null                            ...
        label *label545                                              ...
  708:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  709:  sensor *tmp417 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  710:  jump *label545 notEqual *tmp417 null                         ...
        label *label547                                              ...
        label *label276                                              Actions.mnd: do
  711:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  712:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  713:  op notEqual *tmp317 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  714:  op notEqual *tmp318 :fetchBlock:unitItem :fetchBlock:item    ...
  715:  op land *tmp319 *tmp317 *tmp318                              ...
  716:  jump *label279 equal *tmp319 false                           ...
  717:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label279                                              Actions.mnd: if unitItem != null and unitItem != item then
  718:  sensor *tmp321 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  719:  op lessThan *tmp322 *tmp321 30                               ...
  720:  sensor *tmp323 :fetchBlock:block :fetchBlock:item            ...
  721:  op land *tmp324 *tmp322 *tmp323                              ...
  722:  jump *label276 notEqual *tmp324 false                        Actions.mnd: do
  723:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  724:  sensor *tmp419 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  725:  jump *label609 notEqual *tmp419 :fetchBlock:item             ...
  726:  sensor *tmp443 .core @x                                      Actions.mnd: moveTo(block.@x, block.@y, radius);
  727:  sensor *tmp444 .core @y                                      ...
  728:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  729:  ucontrol within *tmp443 *tmp444 6 *tmp449 0                  Actions.mnd: while !within(x, y, radius) do
  730:  jump *label603 notEqual *tmp449 false                        ...
        label *label601                                              ...
  731:  ucontrol approach *tmp443 *tmp444 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  732:  ucontrol within *tmp443 *tmp444 6 *tmp449 0                  Actions.mnd: while !within(x, y, radius) do
  733:  jump *label601 equal *tmp449 false                           ...
        label *label603                                              ...
  734:  sensor :depositItems:cap .core @itemCapacity                 Actions.mnd: var cap = block.@itemCapacity;
        label *label606                                              Actions.mnd: do
  735:  ucontrol itemDrop .core 30 0 0 0                             Actions.mnd: itemDrop(block, capacity);
  736:  sensor *tmp423 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  737:  op mul *tmp424 *tmp423 :depositItems:cap                     ...
  738:  sensor *tmp425 .core :fetchBlock:item                        ...
  739:  jump *label606 greaterThan *tmp424 *tmp425                   Actions.mnd: do
  740:  jump *label614 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label609                                              ...
  741:  sensor *tmp427 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  742:  jump *label613 equal *tmp427 null                            ...
        label *label611                                              ...
  743:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  744:  sensor *tmp427 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  745:  jump *label611 notEqual *tmp427 null                         ...
        label *label613                                              ...
        label *label614                                              Actions.mnd: if @unit.@firstItem == item then
  746:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  747:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  748:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label24                                               Actions.mnd: void supplyBlock(block, ore)
  749:  write "Supplying " .display ".status2"                       Actions.mnd: display.status2 = text;
  750:  write :supplyBlock:ore .display ".item2"                     Actions.mnd: display.item2 = item;
  751:  write :supplyBlock:block .display ".block2"                  Actions.mnd: display.block2 = block;
  752:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  753:  sensor *tmp326 :supplyBlock:block :supplyBlock:ore           Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  754:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp3 ...
  755:  jump *label284 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  756:  set :mineOre:ore :supplyBlock:ore                            Actions.mnd: mineOre(ore, blockCapacity, block);
  757:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  758:  set :mineOre:block :supplyBlock:block                        ...
  759:  setaddr :mineOre*retaddr *label286                           ...
  760:  call *label21 *invalid :mineOre*retval                       ...
        label *label286                                              ...
        label *label284                                              Actions.mnd: if missing > 0 then
  761:  return :supplyBlock*retaddr                                  Actions.mnd: void supplyBlock(block, ore)
        label *label27                                               Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
  762:  read *tmp342 :unpackCfg:cfg 1                                Common.mnd: type = lookup(:block, char(cfg, index++) - _Common_offset);
  763:  op sub *tmp343 *tmp342 74                                    ...
  764:  lookup block :unpackCfg:type *tmp343                         ...
  765:  read *tmp346 :unpackCfg:cfg 2                                Common.mnd: x = (char(cfg, index++) - _Common_offset) / 2;
  766:  op sub *tmp347 *tmp346 74                                    ...
  767:  op div :unpackCfg:x *tmp347 2                                ...
  768:  read *tmp350 :unpackCfg:cfg 3                                Common.mnd: y = (char(cfg, index++) - _Common_offset) / 2;
  769:  op sub *tmp351 *tmp350 74                                    ...
  770:  op div :unpackCfg:y *tmp351 2                                ...
  771:  read *tmp354 :unpackCfg:cfg 4                                Common.mnd: rotation = char(cfg, index++) - _Common_offset;
  772:  op sub :unpackCfg:rotation *tmp354 74                        ...
  773:  read *tmp357 :unpackCfg:cfg 5                                Common.mnd: ind = char(cfg, index++) - _Common_offset;
  774:  op sub :unpackCfg:ind *tmp357 74                             ...
  775:  sensor :unpackCfg:cu :unpackCfg:type @copper                 Common.mnd: cu = type.@copper;
  776:  sensor :unpackCfg:pb :unpackCfg:type @lead                   Common.mnd: pb = type.@lead;
  777:  sensor :unpackCfg:gr :unpackCfg:type @graphite               Common.mnd: gr = type.@graphite;
  778:  sensor :unpackCfg:si :unpackCfg:type @silicon                Common.mnd: si = type.@silicon;
  779:  sensor :unpackCfg:ti :unpackCfg:type @titanium               Common.mnd: ti = type.@titanium;
  780:  sensor :unpackCfg:mg :unpackCfg:type @metaglass              Common.mnd: mg = type.@metaglass;
  781:  sensor :unpackCfg:th :unpackCfg:type @thorium                Common.mnd: th = type.@thorium;
  782:  return :unpackCfg*retaddr                                    Common.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation, out size, out ind)
        label *label34                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
  783:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, thorium do count += sign(t); end;
  784:  op sign *tmp368 :meetTarget:lead 0                           ...
  785:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  786:  op sign *tmp368 :meetTarget:graphite 0                       ...
  787:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  788:  op sign *tmp368 :meetTarget:silicon 0                        ...
  789:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  790:  op sign *tmp368 :meetTarget:titanium 0                       ...
  791:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  792:  op sign *tmp368 :meetTarget:metaglass 0                      ...
  793:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  794:  op sign *tmp368 :meetTarget:thorium 0                        ...
  795:  op add :meetTarget:count :meetTarget:count *tmp368           ...
  796:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  797:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  798:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  799:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  800:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  801:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  802:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  803:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  804:  write :meetTarget:thorium .display ".targetThorium"          CoreBuilder.mnd: display.targetThorium = thorium;
  805:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  806:  op add *tmp369 :meetTarget:lead .leadSurplus                 CoreBuilder.mnd: targetLead = lead + leadSurplus + 1;
  807:  op add .targetLead *tmp369 1                                 ...
  808:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  809:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  810:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  811:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  812:  set .targetThorium :meetTarget:thorium                       CoreBuilder.mnd: targetThorium = thorium;
  813:  op add *tmp371 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  814:  write *tmp371 .controller ".pressTarget"                     ...
  815:  op add *tmp372 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  816:  write *tmp372 .controller ".smelterTarget"                   ...
  817:  op add *tmp373 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  818:  write *tmp373 .controller ".kilnTarget"                      ...
  819:  write *tmp369 .controller ".leadReserve"                     CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  820:  op sign *tmp375 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  821:  op mul *tmp376 *tmp375 20                                    ...
  822:  op add *tmp377 :meetTarget:silicon *tmp376                   ...
  823:  write *tmp377 .controller ".siliconReserve"                  ...
  824:  op sign *tmp378 :meetTarget:graphite 0                       CoreBuilder.mnd: controller.graphiteReserve = graphite + sign(graphite) * 20;
  825:  op mul *tmp379 *tmp378 20                                    ...
  826:  op add *tmp380 :meetTarget:graphite *tmp379                  ...
  827:  write *tmp380 .controller ".graphiteReserve"                 ...
  828:  write .targetLead processor8 ".leadTarget"                   CoreBuilder.mnd: monoController.leadTarget = targetLead;
  829:  write :meetTarget:copper processor8 ".copperTarget"          CoreBuilder.mnd: monoController.copperTarget = targetCopper;
  830:  sensor *tmp382 .core @copper                                 CoreBuilder.mnd: if core.@copper < targetCopper then return false; end;
  831:  jump *label314 greaterThanEq *tmp382 :meetTarget:copper      ...
  832:  set *tmp381 false                                            ...
  833:  jump *label313 always 0 0                                    ...
        label *label314                                              ...
  834:  sensor *tmp385 .core @lead                                   CoreBuilder.mnd: if core.@lead < targetLead then return false; end;
  835:  jump *label316 greaterThanEq *tmp385 .targetLead             ...
  836:  set *tmp381 false                                            ...
  837:  jump *label313 always 0 0                                    ...
        label *label316                                              ...
  838:  sensor *tmp388 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  839:  jump *label318 greaterThanEq *tmp388 :meetTarget:graphite    ...
  840:  set *tmp381 false                                            ...
  841:  jump *label313 always 0 0                                    ...
        label *label318                                              ...
  842:  sensor *tmp391 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  843:  jump *label320 greaterThanEq *tmp391 :meetTarget:silicon     ...
  844:  set *tmp381 false                                            ...
  845:  jump *label313 always 0 0                                    ...
        label *label320                                              ...
  846:  sensor *tmp394 .core @titanium                               CoreBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  847:  jump *label322 greaterThanEq *tmp394 :meetTarget:titanium    ...
  848:  set *tmp381 false                                            ...
  849:  jump *label313 always 0 0                                    ...
        label *label322                                              ...
  850:  sensor *tmp397 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  851:  jump *label324 greaterThanEq *tmp397 :meetTarget:metaglass   ...
  852:  set *tmp381 false                                            ...
  853:  jump *label313 always 0 0                                    ...
        label *label324                                              ...
  854:  sensor *tmp400 .core @thorium                                CoreBuilder.mnd: if core.@thorium < targetThorium then return false; end;
  855:  jump *label326 greaterThanEq *tmp400 :meetTarget:thorium     ...
  856:  set *tmp381 false                                            ...
  857:  jump *label313 always 0 0                                    ...
        label *label326                                              ...
  858:  set *tmp381 true                                             CoreBuilder.mnd: return true;
  859:  jump *label313 always 0 0                                    ...
        label *label313                                              CoreBuilder.mnd: while !targetMet() do
  860:  jump *label312 notEqual *tmp381 false                        ...
        label *label675                                              ...
  861:  setaddr :supplyBase*retaddr *label328                        CoreBuilder.mnd: supplyBase();
  862:  call *label33 *invalid :supplyBase*retval                    ...
        label *label328                                              ...
  863:  sensor *tmp382 .core @copper                                 CoreBuilder.mnd: if core.@copper < targetCopper then return false; end;
  864:  jump *label676 greaterThanEq *tmp382 .targetCopper           ...
  865:  set *tmp381 false                                            ...
  866:  jump *label690 always 0 0                                    ...
        label *label676                                              ...
  867:  sensor *tmp385 .core @lead                                   CoreBuilder.mnd: if core.@lead < targetLead then return false; end;
  868:  jump *label678 greaterThanEq *tmp385 .targetLead             ...
  869:  set *tmp381 false                                            ...
  870:  jump *label690 always 0 0                                    ...
        label *label678                                              ...
  871:  sensor *tmp388 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  872:  jump *label680 greaterThanEq *tmp388 .targetGraphite         ...
  873:  set *tmp381 false                                            ...
  874:  jump *label690 always 0 0                                    ...
        label *label680                                              ...
  875:  sensor *tmp391 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  876:  jump *label682 greaterThanEq *tmp391 .targetSilicon          ...
  877:  set *tmp381 false                                            ...
  878:  jump *label690 always 0 0                                    ...
        label *label682                                              ...
  879:  sensor *tmp394 .core @titanium                               CoreBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  880:  jump *label684 greaterThanEq *tmp394 .targetTitanium         ...
  881:  set *tmp381 false                                            ...
  882:  jump *label690 always 0 0                                    ...
        label *label684                                              ...
  883:  sensor *tmp397 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  884:  jump *label686 greaterThanEq *tmp397 .targetMetaglass        ...
  885:  set *tmp381 false                                            ...
  886:  jump *label690 always 0 0                                    ...
        label *label686                                              ...
  887:  sensor *tmp400 .core @thorium                                CoreBuilder.mnd: if core.@thorium < targetThorium then return false; end;
  888:  jump *label688 greaterThanEq *tmp400 .targetThorium          ...
  889:  set *tmp381 false                                            ...
  890:  jump *label690 always 0 0                                    ...
        label *label688                                              ...
  891:  set *tmp381 true                                             CoreBuilder.mnd: return true;
  892:  jump *label690 always 0 0                                    ...
        label *label690                                              CoreBuilder.mnd: while !targetMet() do
  893:  jump *label675 equal *tmp381 false                           ...
        label *label312                                              ...
  894:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
        label *label35                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
  895:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium);
  896:  set :meetTarget:copper :buildBlock:copper                    ...
  897:  set :meetTarget:lead :buildBlock:lead                        ...
  898:  set :meetTarget:graphite :buildBlock:graphite                ...
  899:  set :meetTarget:silicon :buildBlock:silicon                  ...
  900:  set :meetTarget:titanium :buildBlock:titanium                ...
  901:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  902:  set :meetTarget:thorium :buildBlock:thorium                  ...
  903:  setaddr :meetTarget*retaddr *label330                        ...
  904:  call *label34 *invalid :meetTarget*retval                    ...
        label *label330                                              ...
  905:  write :buildBlock:block .blockBuilder ":buildBlockAt:block"  CoreBuilder.mnd: return blockBuilder.buildBlockAt(block, x, y, rotation, config, index);
  906:  write :buildBlock:x .blockBuilder ":buildBlockAt:x"          ...
  907:  write :buildBlock:y .blockBuilder ":buildBlockAt:y"          ...
  908:  write :buildBlock:rotation .blockBuilder ":buildBlockAt:rota ...
  909:  write :buildBlock:config .blockBuilder ":buildBlockAt:config ...
  910:  write :buildBlock:index .blockBuilder ":buildBlockAt:index"  ...
  911:  write false .blockBuilder ":buildBlockAt*finished"           ...
  912:  write 1 .blockBuilder "@counter"                             ...
        label *label331                                              ...
  913:  wait 1e-15                                                   ...
  914:  read *tmp410 .blockBuilder ":buildBlockAt*finished"          ...
  915:  jump *label331 equal *tmp410 false                           ...
  916:  read :buildBlock*retval .blockBuilder ":buildBlockAt*retval" ...
  917:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config, index)
        label *label21                                               Actions.mnd: void mineOre(ore, amount, block)
  918:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  919:  write :mineOre:amount .display ".transportTarget"            Actions.mnd: display.transportTarget = target;
  920:  write :mineOre:ore .display ".transportItem"                 Actions.mnd: display.transportItem = item;
  921:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  922:  jump *label508 notEqual *tmp445 false                        ...
  923:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  924:  stop                                                         Actions.mnd: stopProcessor();
        label *label508                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  925:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label570                                              Actions.mnd: do
  926:  sensor *tmp412 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  927:  jump *label571 equal *tmp412 null                            ...
  928:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label571                                              ...
  929:  ucontrol approach :locateOre:x :locateOre:y 5.5 0 0          Actions.mnd: approach(x, y, RADIUS - 0.5);
  930:  ucontrol within :locateOre:x :locateOre:y 6 *tmp415 0        Actions.mnd: while !within(x, y, RADIUS);
  931:  jump *label570 equal *tmp415 false                           Actions.mnd: do
  932:  sensor *tmp430 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  933:  jump *label361 equal *tmp430 :mineOre:ore                    ...
  934:  sensor *tmp417 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  935:  jump *label586 equal *tmp417 null                            ...
        label *label584                                              ...
  936:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  937:  sensor *tmp417 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  938:  jump *label584 notEqual *tmp417 null                         ...
        label *label586                                              ...
        label *label361                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  939:  write "Mining..." .display ".status3"                        Actions.mnd: display.status3 = text;
  940:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label365                                              Actions.mnd: do
  941:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  942:  op notEqual *tmp435 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  943:  op notEqual *tmp436 :mineOre:item :mineOre:ore               ...
  944:  op land *tmp437 *tmp435 *tmp436                              ...
  945:  jump *label367 notEqual *tmp437 false                        ...
  946:  ucontrol mine :locateOre:x :locateOre:y 0 0 0                Actions.mnd: mine(x, y);
  947:  jump *label367 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  948:  sensor *tmp441 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  949:  jump *label365 lessThan *tmp441 :mineOre:amount              Actions.mnd: do
        label *label367                                              ...
  950:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  951:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  952:  sensor *tmp419 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  953:  jump *label659 notEqual *tmp419 :mineOre:ore                 ...
  954:  sensor *tmp443 :mineOre:block @x                             Actions.mnd: moveTo(block.@x, block.@y, radius);
  955:  sensor *tmp444 :mineOre:block @y                             ...
  956:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  957:  ucontrol within *tmp443 *tmp444 6 *tmp449 0                  Actions.mnd: while !within(x, y, radius) do
  958:  jump *label653 notEqual *tmp449 false                        ...
        label *label651                                              ...
  959:  ucontrol approach *tmp443 *tmp444 5.5 0 0                    Actions.mnd: approach(x, y, radius - 0.5);
  960:  ucontrol within *tmp443 *tmp444 6 *tmp449 0                  Actions.mnd: while !within(x, y, radius) do
  961:  jump *label651 equal *tmp449 false                           ...
        label *label653                                              ...
  962:  sensor :depositItems:cap :mineOre:block @itemCapacity        Actions.mnd: var cap = block.@itemCapacity;
        label *label656                                              Actions.mnd: do
  963:  ucontrol itemDrop :mineOre:block 30 0 0 0                    Actions.mnd: itemDrop(block, capacity);
  964:  sensor *tmp423 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  965:  op mul *tmp424 *tmp423 :depositItems:cap                     ...
  966:  sensor *tmp425 :mineOre:block :mineOre:ore                   ...
  967:  jump *label656 greaterThan *tmp424 *tmp425                   Actions.mnd: do
  968:  jump *label664 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label659                                              ...
  969:  sensor *tmp427 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  970:  jump *label663 equal *tmp427 null                            ...
        label *label661                                              ...
  971:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  972:  sensor *tmp427 @unit @firstItem                              Actions.mnd: while @unit.@firstItem != null do
  973:  jump *label661 notEqual *tmp427 null                         ...
        label *label663                                              ...
        label *label664                                              Actions.mnd: if @unit.@firstItem == item then
  974:  write 0 .display ".transportTarget"                          Actions.mnd: display.transportTarget = target;
  975:  write null .display ".transportItem"                         Actions.mnd: display.transportItem = item;
  976:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)


Performance: parsed in 966 ms, compiled in 457 ms, optimized in 5,525 ms, run in 3 ms.
Error connecting to Mlog Watcher: Connection refused: connect
  - make sure Mindustry with active Mlog Watcher mod is running
  - verify Mlog Watcher listens on port 9992

Program output (4 steps):
The program didn't generate any output.
Execution exception at instruction 3: read *tmp95 processor8 "*signature":
Variable 'processor8' is not an object.
(Use the '#set err-not-an-object = false;' directive or the '--err-not-an-object false' command line option to ignore this exception.)
