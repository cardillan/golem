  1795 instructions before optimizations.
    90 instructions eliminated by Temp Variables Elimination (2 iterations).
   120 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\Actions.mnd:10:14 Variable 'ERROR' is not used.
     1 instructions eliminated by Jump Normalization (5 iterations).
    63 instructions eliminated by Jump Optimization (5 iterations).
    64 instructions eliminated by Single Step Elimination (3 passes, 8 iterations).
     3 instructions modified by Expression Optimization (3 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
   459 instructions eliminated by Data Flow Optimization (3 passes, 28 iterations).
    22 loops improved by Loop Hoisting.
     2 instructions eliminated by Loop Unrolling (4 iterations).
     1 loops unrolled by Loop Unrolling.
     6 instructions eliminated by Jump Straightening (5 iterations).
    13 instructions updated by JumpThreading.
    46 instructions eliminated by Unreachable Code Elimination (2 iterations).
   942 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:514:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:518:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:25:5                 size    +1, benefit   179438.3, efficiency 179438.281
  ! Replicate loop condition at Actions.mnd:70:9                 size    +1, benefit   166113.3, efficiency 166113.281
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   123925.8, efficiency 123925.781
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    84375.0, efficiency  84375.000
  ! Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    13350.0, efficiency   6675.000
  * Unroll iteration loop at CoreBuilder.mnd:254:5               size   -11, benefit    12282.0, efficiency   Infinity (-9 instructions)

Pass 1: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:514:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:518:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:25:5                 size    +1, benefit   179438.3, efficiency 179438.281
  ! Replicate loop condition at Actions.mnd:70:9                 size    +1, benefit   166113.3, efficiency 166113.281
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   123925.8, efficiency 123925.781
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    84375.0, efficiency  84375.000
  ! Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    13350.0, efficiency   6675.000

Pass 2: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:514:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:518:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:25:5                 size    +1, benefit   179438.3, efficiency 179438.281
  ! Replicate loop condition at Actions.mnd:70:9                 size    +1, benefit   166113.3, efficiency 166113.281
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   123925.8, efficiency 123925.781
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    84375.0, efficiency  84375.000
  ! Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    13350.0, efficiency   6675.000

Pass 3: speed optimization selection (cost limit 0):
  ! Replicate loop condition at CoreBuilder.mnd:514:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at CoreBuilder.mnd:518:5            size    +1, benefit       25.0, efficiency     25.000
  ! Replicate loop condition at Actions.mnd:25:5                 size    +1, benefit   179438.3, efficiency 179438.281
  ! Replicate loop condition at Actions.mnd:70:9                 size    +1, benefit   166113.3, efficiency 166113.281
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit   123925.8, efficiency 123925.781
  ! Replicate loop condition at Actions.mnd:47:5                 size    +1, benefit    84375.0, efficiency  84375.000
  ! Replicate loop condition at CoreBuilder.mnd:277:5            size    +2, benefit    13350.0, efficiency   6675.000

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-86 instructions):
 
   156 setaddr :buildBlock*retaddr *label51 (h:*label51)
   157 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
   158 label *label51
-    * set *tmp105 :buildBlock*retval
   159 jump *label46 always
   160 label *label48
   161 multijump *tmp106 0 0 (m:marker2)
   162 multilabel *label50 (m:marker2)
   163 label *label49
-    * set *tmp105 null
   164 label *label46
   165 set :buildBlockFromCfg.3:block @combustion-generator
   166 set :buildBlockFromCfg.3:offsetX 0
 
   280 set .ERROR :error:error
   281 stop
   282 label *label70
-    * set *tmp131 null
   283 jump *label69 always
   284 label *label68
-    * set *tmp131 null
   285 label *label69
   286 write @pneumatic-drill .display ".nextBlock"
   287 set :buildBlockAt:block @pneumatic-drill
 
   420 setaddr :buildBlock*retaddr *label89 (h:*label89)
   421 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)
   422 label *label89
-    * set *tmp140 :buildBlock*retval
   423 jump *label84 always
   424 label *label86
   425 multijump *tmp141 0 0 (m:marker7)
   426 multilabel *label88 (m:marker7)
   427 label *label87
-    * set *tmp140 null
   428 label *label84
   429 set :buildBlockFromCfg.8:block @unloader
   430 set :buildBlockFromCfg.8:offsetX -2
 
   539 op lessThan *tmp153 *tmp152 300
   540 jump *label108 equal *tmp153 false
   541 jump *label106 always
-    * set *tmp154 null
   542 jump *label109 always
   543 label *label108
-    * set *tmp154 null
   544 label *label109
   545 label *label105
   546 read *tmp39 .controller ".monos"
 
   581 setaddr :buildBlock*retaddr *label115 (h:*label115)
   582 call *label26 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   583 label *label115
-    * set *tmp156 :buildBlock*retval
   584 jump *label110 always
   585 label *label112
   586 multijump *tmp157 0 0 (m:marker10)
   587 multilabel *label114 (m:marker10)
   588 label *label113
-    * set *tmp156 null
   589 label *label110
   590 set :buildBlockFromCfg.11:block @junction
   591 set :buildBlockFromCfg.11:offsetX 2
 
   618 setaddr :buildBlock*retaddr *label121 (h:*label121)
   619 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   620 label *label121
-    * set *tmp160 :buildBlock*retval
   621 jump *label116 always
   622 label *label118
   623 multijump *tmp161 0 0 (m:marker11)
   624 multilabel *label120 (m:marker11)
   625 label *label119
-    * set *tmp160 null
   626 label *label116
   627 set :buildBlockFromCfg.12:block @inverted-sorter
   628 set :buildBlockFromCfg.12:offsetX 3
 
   655 setaddr :buildBlock*retaddr *label127 (h:*label127)
   656 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   657 label *label127
-    * set *tmp164 :buildBlock*retval
   658 jump *label122 always
   659 label *label124
   660 multijump *tmp165 0 0 (m:marker12)
   661 multilabel *label126 (m:marker12)
   662 label *label125
-    * set *tmp164 null
   663 label *label122
   664 set :buildBlockFromCfg.13:block @kiln
   665 set :buildBlockFromCfg.13:offsetX 3.5
 
   733 setaddr :buildBlock*retaddr *label139 (h:*label139)
   734 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   735 label *label139
-    * set *tmp172 :buildBlock*retval
   736 jump *label134 always
   737 label *label136
   738 multijump *tmp173 0 0 (m:marker14)
   739 multilabel *label138 (m:marker14)
   740 label *label137
-    * set *tmp172 null
   741 label *label134
   742 set :buildBlockFromCfg.15:block @overflow-gate
   743 set :buildBlockFromCfg.15:offsetX -3
 
   770 setaddr :buildBlock*retaddr *label145 (h:*label145)
   771 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   772 label *label145
-    * set *tmp176 :buildBlock*retval
   773 jump *label140 always
   774 label *label142
   775 multijump *tmp177 0 0 (m:marker15)
   776 multilabel *label144 (m:marker15)
   777 label *label143
-    * set *tmp176 null
   778 label *label140
   779 set :buildBlockFromCfg.16:block @steam-generator
   780 set :buildBlockFromCfg.16:offsetX -3.5
 
   887 setaddr :buildBlock*retaddr *label163 (h:*label163)
   888 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   889 label *label163
-    * set *tmp188 :buildBlock*retval
   890 jump *label158 always
   891 label *label160
   892 multijump *tmp189 0 0 (m:marker18)
   893 multilabel *label162 (m:marker18)
   894 label *label161
-    * set *tmp188 null
   895 label *label158
   896 set :buildBlockFromCfg.19:block @underflow-gate
   897 set :buildBlockFromCfg.19:offsetX 0
 
   924 setaddr :buildBlock*retaddr *label169 (h:*label169)
   925 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   926 label *label169
-    * set *tmp192 :buildBlock*retval
   927 jump *label164 always
   928 label *label166
   929 multijump *tmp193 0 0 (m:marker19)
   930 multilabel *label168 (m:marker19)
   931 label *label167
-    * set *tmp192 null
   932 label *label164
   933 set :buildBlockFromCfg.20:block @additive-reconstructor
   934 set :buildBlockFromCfg.20:offsetX 0
 
  1001 ubind :findFreeUnit:unit_type
  1002 op equal *tmp203 @unit null
  1003 jump *label185 equal *tmp203 false
-    * set *tmp202 null
  1004 jump *label184 always
-    * set *tmp204 null
  1005 jump *label186 always
  1006 label *label185
-    * set *tmp204 null
  1007 label *label186
  1008 set :findFreeUnit:first_unit @unit
  1009 label *label187
 
  1011 op equal *tmp206 *tmp205 0
  1012 jump *label190 equal *tmp206 false
  1013 ucontrol flag :findFreeUnit:initial_flag
-    * set *tmp202 @unit
  1014 jump *label184 always
-    * set *tmp207 null
  1015 jump *label191 always
  1016 label *label190
  1017 sensor *tmp208 :findFreeUnit:first_unit @dead
 
  1024 label *label192
  1025 set *tmp210 null
  1026 label *label193
-    * set *tmp207 *tmp210
  1027 label *label191
  1028 ubind :findFreeUnit:unit_type
  1029 label *label188
  1030 op notEqual *tmp212 :findFreeUnit:first_unit @unit
  1031 jump *label187 notEqual *tmp212 false
  1032 label *label189
-    * set *tmp202 null
  1033 jump *label184 always
-    * set *tmp202 null
  1034 label *label184
  1035 write .coreX .oreLocator ":layoutThoriumDrill:x"
  1036 write .coreY .oreLocator ":layoutThoriumDrill:y"
 
  1071 set .ERROR :error.1:error
  1072 stop
  1073 label *label204
-    * set *tmp222 null
  1074 jump *label203 always
  1075 label *label202
-    * set *tmp222 null
  1076 label *label203
  1077 set :buildBlockAt:block @laser-drill
  1078 read *tmp72 .oreLocator ".drillX"
 
  1091 op lessThan *tmp224 *tmp74 0
  1092 jump *label206 equal *tmp224 false
  1093 jump *label198 always
-    * set *tmp225 null
  1094 jump *label207 always
  1095 label *label206
-    * set *tmp225 null
  1096 label *label207
  1097 set :meetTarget:block @water-extractor
  1098 set :meetTarget:copper 30
 
  1116 setaddr :buildBlockAt*retaddr *label210 (h:*label210)
  1117 call *label25 *invalid :buildBlockAt*retval (m:*label210) (h:*label210)
  1118 label *label210
-    * set *tmp226 :buildBlockAt*retval
  1119 read *tmp76 .oreLocator ".water2X"
  1120 op lessThan *tmp227 *tmp76 0
  1121 jump *label211 equal *tmp227 false
  1122 jump *label198 always
-    * set *tmp228 null
  1123 jump *label212 always
  1124 label *label211
-    * set *tmp228 null
  1125 label *label212
  1126 set :meetTarget:block @water-extractor
  1127 set :meetTarget:copper 30
 
  1145 setaddr :buildBlockAt*retaddr *label215 (h:*label215)
  1146 call *label25 *invalid :buildBlockAt*retval (m:*label215) (h:*label215)
  1147 label *label215
-    * set *tmp229 :buildBlockAt*retval
  1148 set :meetTarget:block @water-extractor
  1149 set :meetTarget:copper 30
  1150 set :meetTarget:lead 30
 
  1191 setaddr :buildBlockAt*retaddr *label221 (h:*label221)
  1192 call *label25 *invalid :buildBlockAt*retval (m:*label221) (h:*label221)
  1193 label *label221
-    * set *tmp231 :buildBlockAt*retval
  1194 set :meetTarget:block @solar-panel
  1195 set :meetTarget:copper 0
  1196 set :meetTarget:lead 10
 
  1213 setaddr :buildBlockAt*retaddr *label224 (h:*label224)
  1214 call *label25 *invalid :buildBlockAt*retval (m:*label224) (h:*label224)
  1215 label *label224
-    * set *tmp232 :buildBlockAt*retval
  1216 set :meetTarget:block @battery
  1217 set :meetTarget:copper 5
  1218 set :meetTarget:lead 20
 
  1235 setaddr :buildBlockAt*retaddr *label227 (h:*label227)
  1236 call *label25 *invalid :buildBlockAt*retval (m:*label227) (h:*label227)
  1237 label *label227
-    * set *tmp233 :buildBlockAt*retval
  1238 write :buildThoriumDrill:thoriumDrill .display ".thoriumDrill"
  1239 write :buildThoriumDrill:thoriumDrill .flareController ":addThoriumDrill:drill"
  1240 write :buildThoriumDrill:thoriumGenerator .flareController ":addThoriumDrill:generator"
 
  1309 op notEqual *tmp245 *tmp244 null
  1310 jump *label251 equal *tmp245 false
  1311 ucontrol itemDrop @air 1000
-    * set *tmp246 null
  1312 jump *label252 always
  1313 label *label251
-    * set *tmp246 null
  1314 label *label252
  1315 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1316 label *label249
 
  1356 op greaterThan *tmp258 *tmp256 *tmp257
  1357 jump *label260 notEqual *tmp258 false
  1358 label *label262
-    * set *tmp253 null
  1359 jump *label258 always
  1360 label *label257
  1361 label *label263
 
  1366 label *label264
  1367 jump *label263 always
  1368 label *label265
-    * set *tmp253 null
  1369 label *label258
  1370 set :transportStatus:target 0
  1371 set :transportStatus:item null
 
  1383 set .ERROR :error.3:error
  1384 stop
  1385 label *label270
-    * set *tmp264 null
  1386 jump *label269 always
  1387 label *label268
-    * set *tmp264 null
  1388 label *label269
  1389 label *label267
  1390 return :locateOre*retaddr
 
  1420 jump *label278 always
  1421 label *label280
  1422 label *label277
-    * set *tmp268 null
  1423 jump *label276 always
  1424 label *label275
-    * set *tmp268 null
  1425 label *label276
  1426 set :status3.3:text "Mining..."
  1427 write :status3.3:text .display ".status3"
 
  1436 op land *tmp275 *tmp273 *tmp274
  1437 jump *label285 equal *tmp275 false
  1438 jump *label284 always
-    * set *tmp276 null
  1439 jump *label286 always
  1440 label *label285
-    * set *tmp276 null
  1441 label *label286
  1442 ucontrol mine :mineOre:x :mineOre:y
  1443 op greaterThan *tmp277 @second :mineOre:stop
  1444 jump *label287 equal *tmp277 false
  1445 jump *label284 always
-    * set *tmp278 null
  1446 jump *label288 always
  1447 label *label287
-    * set *tmp278 null
  1448 label *label288
  1449 label *label283
  1450 sensor *tmp279 @unit @totalItems
 
  1517 op land *tmp290 *tmp288 *tmp289
  1518 jump *label304 equal *tmp290 false
  1519 ucontrol itemDrop @air 1000
-    * set *tmp291 null
  1520 jump *label305 always
  1521 label *label304
-    * set *tmp291 null
  1522 label *label305
  1523 label *label302
  1524 sensor *tmp292 @unit :fetchBlock:item
 
  1570 setaddr :mineOre*retaddr *label319 (h:*label319)
  1571 call *label11 *invalid :mineOre*retval (m:*label319) (h:*label319)
  1572 label *label319
-    * set *tmp308 null
  1573 jump *label318 always
  1574 label *label317
-    * set *tmp308 null
  1575 label *label318
  1576 label *label315
  1577 set :supplyBase0:supplied true
 
  1580 label *label312
  1581 set *tmp303 null
  1582 label *label313
-    * set *tmp300 *tmp303
  1583 jump *label311 always
  1584 label *label310
-    * set *tmp300 null
  1585 label *label311
  1586 sensor *tmp309 .core @silicon
  1587 op lessThan *tmp310 *tmp309 .targetSilicon
 
  1614 setaddr :mineOre*retaddr *label329 (h:*label329)
  1615 call *label11 *invalid :mineOre*retval (m:*label329) (h:*label329)
  1616 label *label329
-    * set *tmp319 null
  1617 jump *label328 always
  1618 label *label327
-    * set *tmp319 null
  1619 label *label328
  1620 label *label325
  1621 set :supplyBase0:supplied true
 
  1650 setaddr :mineOre*retaddr *label337 (h:*label337)
  1651 call *label11 *invalid :mineOre*retval (m:*label337) (h:*label337)
  1652 label *label337
-    * set *tmp327 null
  1653 jump *label336 always
  1654 label *label335
-    * set *tmp327 null
  1655 label *label336
  1656 label *label333
  1657 set :supplyBase0:supplied true
 
  1662 label *label331
  1663 set *tmp314 *tmp322
  1664 label *label323
-    * set *tmp311 *tmp314
  1665 jump *label321 always
  1666 label *label320
-    * set *tmp311 null
  1667 label *label321
  1668 sensor *tmp328 .battery @totalPower
  1669 op lessThan *tmp329 *tmp328 .powerTarget
 
  1696 setaddr :mineOre*retaddr *label347 (h:*label347)
  1697 call *label11 *invalid :mineOre*retval (m:*label347) (h:*label347)
  1698 label *label347
-    * set *tmp338 null
  1699 jump *label346 always
  1700 label *label345
-    * set *tmp338 null
  1701 label *label346
  1702 label *label343
  1703 set :supplyBase0:supplied true
 
  1711 label *label338
  1712 set *tmp330 null
  1713 label *label339
-    * set *tmp297 *tmp330
  1714 jump *label309 always
  1715 label *label308
-    * set *tmp297 null
  1716 label *label309
  1717 sensor *tmp339 .core @titanium
  1718 op lessThan *tmp340 *tmp339 .targetTitanium
 
  1844 label *label352
  1845 set *tmp349 null
  1846 label *label353
-    * set *tmp347 *tmp349
  1847 jump *label351 always
  1848 label *label350
  1849 set :status1.10:text "Goal 11: Fetching titanium"
 
  1854 setaddr :fetchBlock*retaddr *label381 (h:*label381)
  1855 call *label13 *invalid :fetchBlock*retval (m:*label381) (h:*label381)
  1856 label *label381
-    * set *tmp347 null
  1857 label *label351
  1858 label *label307
  1859 return :supplyBase0*retaddr
 
  1876 setaddr :supplyBase1*retaddr *label388 (h:*label388)
  1877 call *label19 *invalid :supplyBase1*retval (m:*label388) (h:*label388)
  1878 label *label388
-    * set *tmp376 null
  1879 jump *label387 always
  1880 label *label386
  1881 setaddr :supplyBase0*retaddr *label389 (h:*label389)
  1882 call *label18 *invalid :supplyBase0*retval (m:*label389) (h:*label389)
  1883 label *label389
-    * set *tmp376 null
  1884 label *label387
  1885 label *label385
  1886 return :supplyBase*retaddr
 
  1931 label *label393
  1932 set *tmp382 null
  1933 label *label394
-    * set *tmp379 *tmp382
  1934 jump *label392 always
  1935 label *label391
-    * set *tmp379 null
  1936 label *label392
  1937 set :targetMet*retval false
  1938 jump *label390 always
 
  2055 jump *label427 equal *tmp419 false
  2056 set :buildBlockAt*retval :buildBlockAt:building
  2057 jump *label422 always
-    * set *tmp420 null
  2058 jump *label428 always
  2059 label *label427
-    * set *tmp420 null
  2060 label *label428
  2061 jump *label429 equal :buildBlockAt:skipError false
  2062 set :buildBlockAt*retval null
  2063 jump *label422 always
-    * set *tmp421 null
  2064 jump *label430 always
  2065 label *label429
-    * set *tmp421 null
  2066 label *label430
  2067 set :error.4:error "Cannot build at ("
  2068 set .ERROR :error.4:error
  2069 stop
  2070 label *label431
-    * set *tmp418 null
  2071 jump *label426 always
  2072 label *label425
-    * set *tmp418 null
  2073 label *label426
  2074 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  2075 wait 0.25
 
  2080 jump *label435 equal *tmp424 false
  2081 set :buildBlockAt*retval null
  2082 jump *label422 always
-    * set *tmp425 null
  2083 jump *label436 always
  2084 label *label435
-    * set *tmp425 null
  2085 label *label436
  2086 label *label433
  2087 op notEqual *tmp426 :buildBlockAt:type :buildBlockAt:block
 
  2130 op notEqual *tmp427 :findUnits:firstUnit null
  2131 jump *label442 equal *tmp427 false
  2132 label *label444
-    * set *tmp429 :findUnits:count
  2133 op add :findUnits:count :findUnits:count 1
  2134 ubind :findUnits:type
  2135 label *label445
  2136 op notEqual *tmp430 @unit :findUnits:firstUnit
  2137 jump *label444 notEqual *tmp430 false
  2138 label *label446
-    * set *tmp428 null
  2139 jump *label443 always
  2140 label *label442
-    * set *tmp428 null
  2141 label *label443
  2142 set :findUnits*retval :findUnits:count
  2143 label *label441

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-12 instructions):
 
  1019 jump *label192 equal *tmp209 false
  1020 set *tmp211 @unit
  1021 set :findFreeUnit:first_unit *tmp211
-    * set *tmp210 :findFreeUnit:first_unit
  1022 jump *label193 always
  1023 label *label192
-    * set *tmp210 null
  1024 label *label193
  1025 label *label191
  1026 ubind :findFreeUnit:unit_type
 
  1573 label *label318
  1574 label *label315
  1575 set :supplyBase0:supplied true
-    * set *tmp303 :supplyBase0:supplied
  1576 jump *label313 always
  1577 label *label312
-    * set *tmp303 null
  1578 label *label313
  1579 jump *label311 always
  1580 label *label310
 
  1615 label *label328
  1616 label *label325
  1617 set :supplyBase0:supplied true
-    * set *tmp314 :supplyBase0:supplied
  1618 jump *label323 always
  1619 label *label322
  1620 sensor *tmp320 .smelter @sand
 
  1655 label *label330
  1656 set *tmp322 null
  1657 label *label331
-    * set *tmp314 *tmp322
  1658 label *label323
  1659 jump *label321 always
  1660 label *label320
 
  1700 label *label340
  1701 set *tmp333 null
  1702 label *label341
-    * set *tmp330 *tmp333
  1703 jump *label339 always
  1704 label *label338
-    * set *tmp330 null
  1705 label *label339
  1706 jump *label309 always
  1707 label *label308
 
  1831 label *label359
  1832 set *tmp353 *tmp356
  1833 label *label355
-    * set *tmp349 *tmp353
  1834 jump *label353 always
  1835 label *label352
-    * set *tmp349 null
  1836 label *label353
  1837 jump *label351 always
  1838 label *label350
 
  1916 label *label395
  1917 set *tmp385 null
  1918 label *label396
-    * set *tmp382 *tmp385
  1919 jump *label394 always
  1920 label *label393
-    * set *tmp382 null
  1921 label *label394
  1922 jump *label392 always
  1923 label *label391

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-8 instructions):
 
  1650 label *label336
  1651 label *label333
  1652 set :supplyBase0:supplied true
-    * set *tmp322 :supplyBase0:supplied
  1653 jump *label331 always
  1654 label *label330
-    * set *tmp322 null
  1655 label *label331
  1656 label *label323
  1657 jump *label321 always
 
  1693 label *label346
  1694 label *label343
  1695 set :supplyBase0:supplied true
-    * set *tmp333 :supplyBase0:supplied
  1696 jump *label341 always
  1697 label *label340
-    * set *tmp333 null
  1698 label *label341
  1699 jump *label339 always
  1700 label *label338
 
  1730 setaddr :mineOre.1*retaddr *label357 (h:*label357)
  1731 call *label12 *invalid :mineOre.1*retval (m:*label357) (h:*label357)
  1732 label *label357
-    * set *tmp353 null
  1733 jump *label355 always
  1734 label *label354
  1735 sensor *tmp354 .core @silicon
 
  1824 label *label365
  1825 set *tmp356 *tmp363
  1826 label *label359
-    * set *tmp353 *tmp356
  1827 label *label355
  1828 jump *label353 always
  1829 label *label352
 
  1905 label *label397
  1906 set *tmp388 null
  1907 label *label398
-    * set *tmp385 *tmp388
  1908 jump *label396 always
  1909 label *label395
-    * set *tmp385 null
  1910 label *label396
  1911 jump *label394 always
  1912 label *label393

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
  1754 setaddr :mineOre.1*retaddr *label363 (h:*label363)
  1755 call *label12 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
  1756 label *label363
-    * set *tmp356 null
  1757 jump *label359 always
  1758 label *label358
  1759 sensor *tmp361 .core @copper
 
  1821 label *label369
  1822 set *tmp363 *tmp367
  1823 label *label365
-    * set *tmp356 *tmp363
  1824 label *label359
  1825 label *label355
  1826 jump *label353 always
 
  1898 label *label399
  1899 set *tmp391 null
  1900 label *label400
-    * set *tmp388 *tmp391
  1901 jump *label398 always
  1902 label *label397
-    * set *tmp388 null
  1903 label *label398
  1904 jump *label396 always
  1905 label *label395

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-4 instructions):
 
  1766 setaddr :mineOre.1*retaddr *label367 (h:*label367)
  1767 call *label12 *invalid :mineOre.1*retval (m:*label367) (h:*label367)
  1768 label *label367
-    * set *tmp363 null
  1769 jump *label365 always
  1770 label *label364
  1771 sensor *tmp364 .core @lead
 
  1818 label *label373
  1819 set *tmp367 *tmp370
  1820 label *label369
-    * set *tmp363 *tmp367
  1821 label *label365
  1822 label *label359
  1823 label *label355
 
  1891 label *label401
  1892 set *tmp394 null
  1893 label *label402
-    * set *tmp391 *tmp394
  1894 jump *label400 always
  1895 label *label399
-    * set *tmp391 null
  1896 label *label400
  1897 jump *label398 always
  1898 label *label397

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-4 instructions):
 
  1779 setaddr :mineOre.1*retaddr *label371 (h:*label371)
  1780 call *label12 *invalid :mineOre.1*retval (m:*label371) (h:*label371)
  1781 label *label371
-    * set *tmp367 null
  1782 jump *label369 always
  1783 label *label368
  1784 sensor *tmp368 .core @metaglass
 
  1815 label *label379
  1816 set *tmp370 null
  1817 label *label373
-    * set *tmp367 *tmp370
  1818 label *label369
  1819 label *label365
  1820 label *label359
 
  1884 jump *label401 equal *tmp393 false
  1885 set :targetMet*retval true
  1886 jump *label390 always
-    * set *tmp394 null
  1887 jump *label402 always
  1888 label *label401
-    * set *tmp394 null
  1889 label *label402
  1890 jump *label400 always
  1891 label *label399

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1791 setaddr :mineOre.1*retaddr *label375 (h:*label375)
  1792 call *label12 *invalid :mineOre.1*retval (m:*label375) (h:*label375)
  1793 label *label375
-    * set *tmp370 null
  1794 jump *label373 always
  1795 label *label372
  1796 set :status1.9:text "Goal 10: supplying base"
 
  1812 setaddr :mineOre.1*retaddr *label379 (h:*label379)
  1813 call *label12 *invalid :mineOre.1*retval (m:*label379) (h:*label379)
  1814 label *label379
-    * set *tmp370 null
  1815 label *label373
  1816 label *label369
  1817 label *label365

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-90 instructions):
 
    13 write 511 bank1 511
    14 label *label28
    15 ubind @poly
-    * set *tmp87 @unit
-    * set .builder *tmp87
-    * ulocate building core false @copper .coreX .coreY *tmp89 *tmp88
-    * set .core *tmp88
+   16 set .builder @unit
+   17 ulocate building core false @copper .coreX .coreY 0 .core
    18 label *label29
    19 op equal *tmp90 .core null
    20 jump *label28 notEqual *tmp90 false
 
    27 call *label27 *invalid :findUnits*retval (m:*label31) (h:*label31)
    28 label *label31
    29 write :findUnits:count .display ".displayFlares"
-    * set *tmp92 :findUnits*retval
-    * set :flares *tmp92
+   30 set :flares :findUnits*retval
    31 set :findUnits:type @mono
    32 setaddr :findUnits*retaddr *label32 (h:*label32)
    33 call *label27 *invalid :findUnits*retval (m:*label32) (h:*label32)
    34 label *label32
    35 write :findUnits:count .display ".displayMonos"
-    * set *tmp94 :findUnits*retval
-    * set :monos *tmp94
+   36 set :monos :findUnits*retval
    37 set :findUnits:type @poly
    38 setaddr :findUnits*retaddr *label33 (h:*label33)
    39 call *label27 *invalid :findUnits*retval (m:*label33) (h:*label33)
    40 label *label33
    41 write :findUnits:count .display ".displayPolys"
-    * set *tmp96 :findUnits*retval
-    * set :polys *tmp96
+   42 set :polys :findUnits*retval
    43 set :buildBlockFromCfg:block @graphite-press
    44 set :buildBlockFromCfg:offsetX -1.5
    45 set :buildBlockFromCfg:offsetY 2.5
 
    53 set :buildBlockFromCfg:config null
    54 setaddr *tmp98 *label38
    55 label *label35
-    * op add *tmp99 .coreX :buildBlockFromCfg:offsetX
-    * set :buildBlockFromCfg:x *tmp99
-    * op add *tmp100 .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlockFromCfg:y *tmp100
+   56 op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
+   57 op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
    58 set :buildBlock:block :buildBlockFromCfg:block
    59 set :buildBlock:x :buildBlockFromCfg:x
    60 set :buildBlock:y :buildBlockFromCfg:y
 
    91 set :buildBlockFromCfg.1:config null
    92 setaddr *tmp102 *label44
    93 label *label41
-    * op add *tmp103 .coreX :buildBlockFromCfg.1:offsetX
-    * set :buildBlockFromCfg.1:x *tmp103
-    * op add *tmp104 .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlockFromCfg.1:y *tmp104
+   94 op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
+   95 op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
    96 set :buildBlock:block :buildBlockFromCfg.1:block
    97 set :buildBlock:x :buildBlockFromCfg.1:x
    98 set :buildBlock:y :buildBlockFromCfg.1:y
 
   129 set :buildBlockFromCfg.2:config null
   130 setaddr *tmp106 *label50
   131 label *label47
-    * op add *tmp107 .coreX :buildBlockFromCfg.2:offsetX
-    * set :buildBlockFromCfg.2:x *tmp107
-    * op add *tmp108 .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlockFromCfg.2:y *tmp108
+  132 op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
+  133 op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
   134 set :buildBlock:block :buildBlockFromCfg.2:block
   135 set :buildBlock:x :buildBlockFromCfg.2:x
   136 set :buildBlock:y :buildBlockFromCfg.2:y
 
   164 set :buildBlockFromCfg.3:config null
   165 setaddr *tmp110 *label56
   166 label *label53
-    * op add *tmp111 .coreX :buildBlockFromCfg.3:offsetX
-    * set :buildBlockFromCfg.3:x *tmp111
-    * op add *tmp112 .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlockFromCfg.3:y *tmp112
+  167 op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
+  168 op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
   169 set :buildBlock:block :buildBlockFromCfg.3:block
   170 set :buildBlock:x :buildBlockFromCfg.3:x
   171 set :buildBlock:y :buildBlockFromCfg.3:y
 
   203 set :buildBlockFromCfg.4:config null
   204 setaddr *tmp114 *label62
   205 label *label59
-    * op add *tmp115 .coreX :buildBlockFromCfg.4:offsetX
-    * set :buildBlockFromCfg.4:x *tmp115
-    * op add *tmp116 .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlockFromCfg.4:y *tmp116
+  206 op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
+  207 op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
   208 set :buildBlock:block :buildBlockFromCfg.4:block
   209 set :buildBlock:x :buildBlockFromCfg.4:x
   210 set :buildBlock:y :buildBlockFromCfg.4:y
 
   253 wait 1e-15
   254 read *tmp128 .oreLocator ":findDrillLocation*finished"
   255 jump *label67 equal *tmp128 false
-    * read *tmp125 .oreLocator ":findDrillLocation:dx"
-    * set :buildTitaniumDrill:dx *tmp125
-    * read *tmp126 .oreLocator ":findDrillLocation:dy"
-    * set :buildTitaniumDrill:dy *tmp126
-    * read *tmp129 .oreLocator ":findDrillLocation*retval"
-    * set :buildTitaniumDrill:result *tmp129
+  256 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+  257 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+  258 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
   259 op equal *tmp130 :buildTitaniumDrill:result false
   260 jump *label68 equal *tmp130 false
   261 set :error:error "Cannot locate spot for titanium drill"
 
   294 set :buildBlockFromCfg.5:config null
   295 setaddr *tmp133 *label76
   296 label *label73
-    * op add *tmp134 .coreX :buildBlockFromCfg.5:offsetX
-    * set :buildBlockFromCfg.5:x *tmp134
-    * op add *tmp135 .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlockFromCfg.5:y *tmp135
+  297 op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
+  298 op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
   299 set :buildBlock:block :buildBlockFromCfg.5:block
   300 set :buildBlock:x :buildBlockFromCfg.5:x
   301 set :buildBlock:y :buildBlockFromCfg.5:y
 
   332 set :buildBlockFromCfg.6:config processor2
   333 setaddr *tmp137 *label82
   334 label *label79
-    * op add *tmp138 .coreX :buildBlockFromCfg.6:offsetX
-    * set :buildBlockFromCfg.6:x *tmp138
-    * op add *tmp139 .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlockFromCfg.6:y *tmp139
+  335 op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
+  336 op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
   337 set :buildBlock:block :buildBlockFromCfg.6:block
   338 set :buildBlock:x :buildBlockFromCfg.6:x
   339 set :buildBlock:y :buildBlockFromCfg.6:y
 
   380 set :buildBlockFromCfg.7:config null
   381 setaddr *tmp141 *label88
   382 label *label85
-    * op add *tmp142 .coreX :buildBlockFromCfg.7:offsetX
-    * set :buildBlockFromCfg.7:x *tmp142
-    * op add *tmp143 .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlockFromCfg.7:y *tmp143
+  383 op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
+  384 op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
   385 set :buildBlock:block :buildBlockFromCfg.7:block
   386 set :buildBlock:x :buildBlockFromCfg.7:x
   387 set :buildBlock:y :buildBlockFromCfg.7:y
 
   415 set :buildBlockFromCfg.8:config null
   416 setaddr *tmp145 *label94
   417 label *label91
-    * op add *tmp146 .coreX :buildBlockFromCfg.8:offsetX
-    * set :buildBlockFromCfg.8:x *tmp146
-    * op add *tmp147 .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlockFromCfg.8:y *tmp147
+  418 op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
+  419 op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
   420 set :buildBlock:block :buildBlockFromCfg.8:block
   421 set :buildBlock:x :buildBlockFromCfg.8:x
   422 set :buildBlock:y :buildBlockFromCfg.8:y
 
   453 set :buildBlockFromCfg.9:config @mono
   454 setaddr *tmp149 *label100
   455 label *label97
-    * op add *tmp150 .coreX :buildBlockFromCfg.9:offsetX
-    * set :buildBlockFromCfg.9:x *tmp150
-    * op add *tmp151 .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlockFromCfg.9:y *tmp151
+  456 op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
+  457 op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
   458 set :buildBlock:block :buildBlockFromCfg.9:block
   459 set :buildBlock:x :buildBlockFromCfg.9:x
   460 set :buildBlock:y :buildBlockFromCfg.9:y
 
   535 set :buildBlockFromCfg.10:config null
   536 setaddr *tmp157 *label114
   537 label *label111
-    * op add *tmp158 .coreX :buildBlockFromCfg.10:offsetX
-    * set :buildBlockFromCfg.10:x *tmp158
-    * op add *tmp159 .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlockFromCfg.10:y *tmp159
+  538 op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
+  539 op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
   540 set :buildBlock:block :buildBlockFromCfg.10:block
   541 set :buildBlock:x :buildBlockFromCfg.10:x
   542 set :buildBlock:y :buildBlockFromCfg.10:y
 
   570 set :buildBlockFromCfg.11:config null
   571 setaddr *tmp161 *label120
   572 label *label117
-    * op add *tmp162 .coreX :buildBlockFromCfg.11:offsetX
-    * set :buildBlockFromCfg.11:x *tmp162
-    * op add *tmp163 .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlockFromCfg.11:y *tmp163
+  573 op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
+  574 op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
   575 set :buildBlock:block :buildBlockFromCfg.11:block
   576 set :buildBlock:x :buildBlockFromCfg.11:x
   577 set :buildBlock:y :buildBlockFromCfg.11:y
 
   605 set :buildBlockFromCfg.12:config @metaglass
   606 setaddr *tmp165 *label126
   607 label *label123
-    * op add *tmp166 .coreX :buildBlockFromCfg.12:offsetX
-    * set :buildBlockFromCfg.12:x *tmp166
-    * op add *tmp167 .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlockFromCfg.12:y *tmp167
+  608 op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
+  609 op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
   610 set :buildBlock:block :buildBlockFromCfg.12:block
   611 set :buildBlock:x :buildBlockFromCfg.12:x
   612 set :buildBlock:y :buildBlockFromCfg.12:y
 
   640 set :buildBlockFromCfg.13:config null
   641 setaddr *tmp169 *label132
   642 label *label129
-    * op add *tmp170 .coreX :buildBlockFromCfg.13:offsetX
-    * set :buildBlockFromCfg.13:x *tmp170
-    * op add *tmp171 .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlockFromCfg.13:y *tmp171
+  643 op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
+  644 op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
   645 set :buildBlock:block :buildBlockFromCfg.13:block
   646 set :buildBlock:x :buildBlockFromCfg.13:x
   647 set :buildBlock:y :buildBlockFromCfg.13:y
 
   679 set :buildBlockFromCfg.14:config null
   680 setaddr *tmp173 *label138
   681 label *label135
-    * op add *tmp174 .coreX :buildBlockFromCfg.14:offsetX
-    * set :buildBlockFromCfg.14:x *tmp174
-    * op add *tmp175 .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlockFromCfg.14:y *tmp175
+  682 op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
+  683 op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
   684 set :buildBlock:block :buildBlockFromCfg.14:block
   685 set :buildBlock:x :buildBlockFromCfg.14:x
   686 set :buildBlock:y :buildBlockFromCfg.14:y
 
   714 set :buildBlockFromCfg.15:config null
   715 setaddr *tmp177 *label144
   716 label *label141
-    * op add *tmp178 .coreX :buildBlockFromCfg.15:offsetX
-    * set :buildBlockFromCfg.15:x *tmp178
-    * op add *tmp179 .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlockFromCfg.15:y *tmp179
+  717 op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
+  718 op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
   719 set :buildBlock:block :buildBlockFromCfg.15:block
   720 set :buildBlock:x :buildBlockFromCfg.15:x
   721 set :buildBlock:y :buildBlockFromCfg.15:y
 
   749 set :buildBlockFromCfg.16:config null
   750 setaddr *tmp181 *label150
   751 label *label147
-    * op add *tmp182 .coreX :buildBlockFromCfg.16:offsetX
-    * set :buildBlockFromCfg.16:x *tmp182
-    * op add *tmp183 .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlockFromCfg.16:y *tmp183
+  752 op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
+  753 op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
   754 set :buildBlock:block :buildBlockFromCfg.16:block
   755 set :buildBlock:x :buildBlockFromCfg.16:x
   756 set :buildBlock:y :buildBlockFromCfg.16:y
 
   787 set :buildBlockFromCfg.17:config null
   788 setaddr *tmp185 *label156
   789 label *label153
-    * op add *tmp186 .coreX :buildBlockFromCfg.17:offsetX
-    * set :buildBlockFromCfg.17:x *tmp186
-    * op add *tmp187 .coreY :buildBlockFromCfg.17:offsetY
-    * set :buildBlockFromCfg.17:y *tmp187
+  790 op add :buildBlockFromCfg.17:x .coreX :buildBlockFromCfg.17:offsetX
+  791 op add :buildBlockFromCfg.17:y .coreY :buildBlockFromCfg.17:offsetY
   792 set :buildBlock:block :buildBlockFromCfg.17:block
   793 set :buildBlock:x :buildBlockFromCfg.17:x
   794 set :buildBlock:y :buildBlockFromCfg.17:y
 
   825 set :buildBlockFromCfg.18:config null
   826 setaddr *tmp189 *label162
   827 label *label159
-    * op add *tmp190 .coreX :buildBlockFromCfg.18:offsetX
-    * set :buildBlockFromCfg.18:x *tmp190
-    * op add *tmp191 .coreY :buildBlockFromCfg.18:offsetY
-    * set :buildBlockFromCfg.18:y *tmp191
+  828 op add :buildBlockFromCfg.18:x .coreX :buildBlockFromCfg.18:offsetX
+  829 op add :buildBlockFromCfg.18:y .coreY :buildBlockFromCfg.18:offsetY
   830 set :buildBlock:block :buildBlockFromCfg.18:block
   831 set :buildBlock:x :buildBlockFromCfg.18:x
   832 set :buildBlock:y :buildBlockFromCfg.18:y
 
   860 set :buildBlockFromCfg.19:config null
   861 setaddr *tmp193 *label168
   862 label *label165
-    * op add *tmp194 .coreX :buildBlockFromCfg.19:offsetX
-    * set :buildBlockFromCfg.19:x *tmp194
-    * op add *tmp195 .coreY :buildBlockFromCfg.19:offsetY
-    * set :buildBlockFromCfg.19:y *tmp195
+  863 op add :buildBlockFromCfg.19:x .coreX :buildBlockFromCfg.19:offsetX
+  864 op add :buildBlockFromCfg.19:y .coreY :buildBlockFromCfg.19:offsetY
   865 set :buildBlock:block :buildBlockFromCfg.19:block
   866 set :buildBlock:x :buildBlockFromCfg.19:x
   867 set :buildBlock:y :buildBlockFromCfg.19:y
 
   895 set :buildBlockFromCfg.20:config null
   896 setaddr *tmp197 *label174
   897 label *label171
-    * op add *tmp198 .coreX :buildBlockFromCfg.20:offsetX
-    * set :buildBlockFromCfg.20:x *tmp198
-    * op add *tmp199 .coreY :buildBlockFromCfg.20:offsetY
-    * set :buildBlockFromCfg.20:y *tmp199
+  898 op add :buildBlockFromCfg.20:x .coreX :buildBlockFromCfg.20:offsetX
+  899 op add :buildBlockFromCfg.20:y .coreY :buildBlockFromCfg.20:offsetY
   900 set :buildBlock:block :buildBlockFromCfg.20:block
   901 set :buildBlock:x :buildBlockFromCfg.20:x
   902 set :buildBlock:y :buildBlockFromCfg.20:y
 
   967 sensor *tmp208 :findFreeUnit:first_unit @dead
   968 op equal *tmp209 *tmp208 1
   969 jump *label192 equal *tmp209 false
-    * set *tmp211 @unit
-    * set :findFreeUnit:first_unit *tmp211
+  970 set :findFreeUnit:first_unit @unit
   971 jump *label193 always
   972 label *label192
   973 label *label193
 
  1010 wait 1e-15
  1011 read *tmp219 .oreLocator ":layoutThoriumDrill*finished"
  1012 jump *label201 equal *tmp219 false
-    * read *tmp220 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp220
+ 1013 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
  1014 op equal *tmp221 :buildThoriumDrill:result false
  1015 jump *label202 equal *tmp221 false
  1016 set :error.1:error "Cannot locate spot for thorium drill"
 
  1021 label *label202
  1022 label *label203
  1023 set :buildBlockAt:block @laser-drill
-    * read *tmp72 .oreLocator ".drillX"
-    * set :buildBlockAt:x *tmp72
-    * read *tmp73 .oreLocator ".drillY"
-    * set :buildBlockAt:y *tmp73
+ 1024 read :buildBlockAt:x .oreLocator ".drillX"
+ 1025 read :buildBlockAt:y .oreLocator ".drillY"
  1026 set :buildBlockAt:rotation null
  1027 set :buildBlockAt:config 0
  1028 set :buildBlockAt:skipError false
  1029 setaddr :buildBlockAt*retaddr *label205 (h:*label205)
  1030 call *label25 *invalid :buildBlockAt*retval (m:*label205) (h:*label205)
  1031 label *label205
-    * set *tmp223 :buildBlockAt*retval
-    * set :buildThoriumDrill:thoriumDrill *tmp223
+ 1032 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
  1033 read *tmp74 .oreLocator ".water1X"
  1034 op lessThan *tmp224 *tmp74 0
  1035 jump *label206 equal *tmp224 false
 
  1051 set :buildBlockAt:block @water-extractor
  1052 read *tmp74 .oreLocator ".water1X"
  1053 set :buildBlockAt:x *tmp74
-    * read *tmp75 .oreLocator ".water1Y"
-    * set :buildBlockAt:y *tmp75
+ 1054 read :buildBlockAt:y .oreLocator ".water1Y"
  1055 set :buildBlockAt:rotation null
  1056 set :buildBlockAt:config 0
  1057 set :buildBlockAt:skipError false
 
  1079 set :buildBlockAt:block @water-extractor
  1080 read *tmp76 .oreLocator ".water2X"
  1081 set :buildBlockAt:x *tmp76
-    * read *tmp77 .oreLocator ".water2Y"
-    * set :buildBlockAt:y *tmp77
+ 1082 read :buildBlockAt:y .oreLocator ".water2Y"
  1083 set :buildBlockAt:rotation null
  1084 set :buildBlockAt:config 0
  1085 set :buildBlockAt:skipError false
 
  1098 label *label217
  1099 label *label216
  1100 set :buildBlockAt:block @steam-generator
-    * read *tmp78 .oreLocator ".generatorX"
-    * set :buildBlockAt:x *tmp78
-    * read *tmp79 .oreLocator ".generatorY"
-    * set :buildBlockAt:y *tmp79
+ 1101 read :buildBlockAt:x .oreLocator ".generatorX"
+ 1102 read :buildBlockAt:y .oreLocator ".generatorY"
  1103 set :buildBlockAt:rotation null
  1104 set :buildBlockAt:config 0
  1105 set :buildBlockAt:skipError false
  1106 setaddr :buildBlockAt*retaddr *label218 (h:*label218)
  1107 call *label25 *invalid :buildBlockAt*retval (m:*label218) (h:*label218)
  1108 label *label218
-    * set *tmp230 :buildBlockAt*retval
-    * set :buildThoriumDrill:thoriumGenerator *tmp230
+ 1109 set :buildThoriumDrill:thoriumGenerator :buildBlockAt*retval
  1110 set :meetTarget:block @power-node
  1111 set :meetTarget:copper 2
  1112 set :meetTarget:lead 6
 
  1119 label *label220
  1120 label *label219
  1121 set :buildBlockAt:block @power-node
-    * read *tmp80 .oreLocator ".nodeX"
-    * set :buildBlockAt:x *tmp80
-    * read *tmp81 .oreLocator ".nodeY"
-    * set :buildBlockAt:y *tmp81
+ 1122 read :buildBlockAt:x .oreLocator ".nodeX"
+ 1123 read :buildBlockAt:y .oreLocator ".nodeY"
  1124 set :buildBlockAt:rotation null
  1125 set :buildBlockAt:config 0
  1126 set :buildBlockAt:skipError false
 
  1139 label *label223
  1140 label *label222
  1141 set :buildBlockAt:block @solar-panel
-    * read *tmp82 .oreLocator ".panelX"
-    * set :buildBlockAt:x *tmp82
-    * read *tmp83 .oreLocator ".panelY"
-    * set :buildBlockAt:y *tmp83
+ 1142 read :buildBlockAt:x .oreLocator ".panelX"
+ 1143 read :buildBlockAt:y .oreLocator ".panelY"
  1144 set :buildBlockAt:rotation null
  1145 set :buildBlockAt:config 0
  1146 set :buildBlockAt:skipError false
 
  1159 label *label226
  1160 label *label225
  1161 set :buildBlockAt:block @battery
-    * read *tmp84 .oreLocator ".batteryX"
-    * set :buildBlockAt:x *tmp84
-    * read *tmp85 .oreLocator ".batteryY"
-    * set :buildBlockAt:y *tmp85
+ 1162 read :buildBlockAt:x .oreLocator ".batteryX"
+ 1163 read :buildBlockAt:y .oreLocator ".batteryY"
  1164 set :buildBlockAt:rotation null
  1165 set :buildBlockAt:config 0
  1166 set :buildBlockAt:skipError false
 
  1277 setaddr :moveToBlock*retaddr *label259 (h:*label259)
  1278 call *label8 *invalid :moveToBlock*retval (m:*label259) (h:*label259)
  1279 label *label259
-    * sensor *tmp254 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp254
+ 1280 sensor :depositItems:cap :depositItems:block @itemCapacity
  1281 label *label260
  1282 ucontrol itemDrop :depositItems:block 30
  1283 label *label261
 
  1307 return :depositItems*retaddr
  1308 end
  1309 label *label10
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp261 *tmp262
+ 1310 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp261 0
  1311 op equal *tmp263 *tmp261 false
  1312 jump *label268 equal *tmp263 false
  1313 set :error.3:error "Cannot locate ore"
 
  1321 return :locateOre*retaddr
  1322 end
  1323 label *label11
-    * op min *tmp265 :mineOre:amount 30
-    * set :mineOre:amount *tmp265
+ 1324 op min :mineOre:amount :mineOre:amount 30
  1325 set :transportStatus.1:target :mineOre:amount
  1326 set :transportStatus.1:item :mineOre:ore
  1327 write :transportStatus.1:target .display ".transportTarget"
 
  1356 set :status3.3:text "Mining..."
  1357 write :status3.3:text .display ".status3"
  1358 label *label281
-    * op add *tmp271 @second 10
-    * set :mineOre:stop *tmp271
+ 1359 op add :mineOre:stop @second 10
  1360 label *label282
-    * sensor *tmp272 @unit @firstItem
-    * set :mineOre:item *tmp272
+ 1361 sensor :mineOre:item @unit @firstItem
  1362 op notEqual *tmp273 :mineOre:item null
  1363 op notEqual *tmp274 :mineOre:item :mineOre:ore
  1364 op land *tmp275 *tmp273 *tmp274
 
  1396 write :status2:item .display ".item2"
  1397 write :status2:block .display ".block2"
  1398 label *label291
-    * set *tmp281 :mineOre.1:ore
-    * set :mineOre:ore *tmp281
+ 1399 set :mineOre:ore :mineOre.1:ore
  1400 set :mineOre:amount 30
  1401 set :mineOre:block .core
  1402 setaddr :mineOre*retaddr *label292 (h:*label292)
 
  1406 return :mineOre.1*retaddr
  1407 end
  1408 label *label13
-    * sensor *tmp282 :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:target *tmp282
+ 1409 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1410 set :transportStatus.2:item :fetchBlock:item
  1411 write :transportStatus.2:target .display ".transportTarget"
  1412 write :transportStatus.2:item .display ".transportItem"
 
  1436 label *label297
  1437 label *label301
  1438 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp287 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp287
+ 1439 sensor :fetchBlock:unitItem @unit @firstItem
  1440 op notEqual *tmp288 :fetchBlock:unitItem null
  1441 op notEqual *tmp289 :fetchBlock:unitItem :fetchBlock:item
  1442 op land *tmp290 *tmp288 *tmp289
 
  1482 write :status2.2:item .display ".item2"
  1483 write :status2.2:block .display ".block2"
  1484 label *label316
-    * sensor *tmp304 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp304
+ 1485 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1486 sensor *tmp305 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp306 :supplyBlock:blockCapacity *tmp305
-    * set :supplyBlock:missing *tmp306
+ 1487 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp305
  1488 op greaterThan *tmp307 :supplyBlock:missing 0
  1489 jump *label317 equal *tmp307 false
  1490 set :mineOre:ore :supplyBlock:ore
 
  1522 write :status2.3:item .display ".item2"
  1523 write :status2.3:block .display ".block2"
  1524 label *label326
-    * sensor *tmp315 :supplyBlock.1:block @itemCapacity
-    * set :supplyBlock.1:blockCapacity *tmp315
+ 1525 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1526 sensor *tmp316 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp317 :supplyBlock.1:blockCapacity *tmp316
-    * set :supplyBlock.1:missing *tmp317
+ 1527 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp316
  1528 op greaterThan *tmp318 :supplyBlock.1:missing 0
  1529 jump *label327 equal *tmp318 false
  1530 set :mineOre:ore :supplyBlock.1:ore
 
  1555 write :status2.4:item .display ".item2"
  1556 write :status2.4:block .display ".block2"
  1557 label *label334
-    * sensor *tmp323 :supplyBlock.2:block @itemCapacity
-    * set :supplyBlock.2:blockCapacity *tmp323
+ 1558 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1559 sensor *tmp324 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp325 :supplyBlock.2:blockCapacity *tmp324
-    * set :supplyBlock.2:missing *tmp325
+ 1560 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp324
  1561 op greaterThan *tmp326 :supplyBlock.2:missing 0
  1562 jump *label335 equal *tmp326 false
  1563 set :mineOre:ore :supplyBlock.2:ore
 
  1596 write :status2.5:item .display ".item2"
  1597 write :status2.5:block .display ".block2"
  1598 label *label344
-    * sensor *tmp334 :supplyBlock.3:block @itemCapacity
-    * set :supplyBlock.3:blockCapacity *tmp334
+ 1599 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1600 sensor *tmp335 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp336 :supplyBlock.3:blockCapacity *tmp335
-    * set :supplyBlock.3:missing *tmp336
+ 1601 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp335
  1602 op greaterThan *tmp337 :supplyBlock.3:missing 0
  1603 jump *label345 equal *tmp337 false
  1604 set :mineOre:ore :supplyBlock.3:ore
 
  1626 jump *label348 equal *tmp340 false
  1627 sensor *tmp342 .core @titanium
  1628 op sub *tmp343 .targetTitanium *tmp342
-    * op min *tmp344 7 *tmp343
-    * set *tmp341 *tmp344
+ 1629 op min *tmp341 7 *tmp343
  1630 jump *label349 always
  1631 label *label348
  1632 set *tmp341 100
 
  1656 set :status1.5:text "Goal 6: silicon requirement"
  1657 write :status1.5:text .display ".status1"
  1658 label *label360
-    * sensor *tmp357 .core @coal
-    * set :supplyBase0:coal *tmp357
-    * sensor *tmp358 .core @sand
-    * set :supplyBase0:sand *tmp358
+ 1659 sensor :supplyBase0:coal .core @coal
+ 1660 sensor :supplyBase0:sand .core @sand
  1661 op lessThan *tmp359 :supplyBase0:coal :supplyBase0:sand
  1662 jump *label361 equal *tmp359 false
  1663 set *tmp360 @coal
 
  1712 set :status1.9:text "Goal 10: supplying base"
  1713 write :status1.9:text .display ".status1"
  1714 label *label376
-    * sensor *tmp371 .core @coal
-    * set :supplyBase0:coal.1 *tmp371
-    * sensor *tmp372 .core @sand
-    * set :supplyBase0:sand.1 *tmp372
+ 1715 sensor :supplyBase0:coal.1 .core @coal
+ 1716 sensor :supplyBase0:sand.1 .core @sand
  1717 op lessThanEq *tmp373 :supplyBase0:coal.1 :supplyBase0:sand.1
  1718 jump *label377 equal *tmp373 false
  1719 set *tmp374 @coal
 
  1861 write :meetTarget:metaglass .display ".targetMetaglass"
  1862 set .targetCopper :meetTarget:copper
  1863 op add *tmp397 :meetTarget:lead .leadSurplus
-    * op add *tmp398 *tmp397 1
-    * set .targetLead *tmp398
+ 1864 op add .targetLead *tmp397 1
  1865 set .targetGraphite :meetTarget:graphite
  1866 set .targetSilicon :meetTarget:silicon
  1867 set .targetTitanium :meetTarget:titanium
 
  1909 return :log*retaddr
  1910 end
  1911 label *label24
-    * sensor *tmp414 :logBlock:block @id
-    * set :log:encodedId *tmp414
+ 1912 sensor :log:encodedId :logBlock:block @id
  1913 setaddr :log*retaddr *label421 (h:*label421)
  1914 call *label23 *invalid :log*retval (m:*label421) (h:*label421)
  1915 label *label421
 
  1925 set :status3.4:text "Building..."
  1926 write :status3.4:text .display ".status3"
  1927 label *label424
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp415 *tmp416
-    * set :buildBlockAt:building *tmp415
+ 1928 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1929 op notEqual *tmp417 :buildBlockAt:building null
  1930 jump *label425 equal *tmp417 false
  1931 op equal *tmp419 :buildBlockAt:type :buildBlockAt:block
 
  1951 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1952 wait 0.25
  1953 label *label432
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp422 *tmp423
-    * set :buildBlockAt:building *tmp422
+ 1954 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1955 op equal *tmp424 :buildBlockAt:building null
  1956 jump *label435 equal *tmp424 false
  1957 set :buildBlockAt*retval null

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
  1191 jump *label229 notEqual *tmp238 false
  1192 label *label231
  1193 label *label233
-    * jump *label235 equal true false
  1194 setaddr :supplyBase*retaddr *label236 (h:*label236)
  1195 call *label20 *invalid :supplyBase*retval (m:*label236) (h:*label236)
  1196 label *label236

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-63 instructions):
 
    16 set .builder @unit
    17 ulocate building core false @copper .coreX .coreY 0 .core
    18 label *label29
-    * op equal *tmp90 .core null
-    * jump *label28 notEqual *tmp90 false
+   19 jump *label28 equal .core null
    20 label *label30
    21 set .display processor1
    22 set .flareController processor3
 
   255 read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
   256 read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
   257 read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp130 :buildTitaniumDrill:result false
-    * jump *label68 equal *tmp130 false
+  258 jump *label68 notEqual :buildTitaniumDrill:result false
   259 set :error:error "Cannot locate spot for titanium drill"
   260 set .ERROR :error:error
   261 stop
 
   506 call *label20 *invalid :supplyBase*retval (m:*label107) (h:*label107)
   507 label *label107
   508 sensor *tmp152 .battery @totalPower
-    * op lessThan *tmp153 *tmp152 300
-    * jump *label108 equal *tmp153 false
+  509 jump *label108 greaterThanEq *tmp152 300
   510 jump *label106 always
   511 jump *label109 always
   512 label *label108
   513 label *label109
   514 label *label105
   515 read *tmp39 .controller ".monos"
-    * op lessThan *tmp155 *tmp39 3
-    * jump *label104 notEqual *tmp155 false
+  516 jump *label104 lessThan *tmp39 3
   517 label *label106
   518 set .graphiteSurplus 60
   519 set .siliconSurplus 100
 
   924 write 4 .controller ".polyTarget"
   925 label *label176
   926 read *tmp40 .controller ".polys"
-    * op lessThan *tmp200 *tmp40 4
-    * jump *label178 equal *tmp200 false
+  927 jump *label178 greaterThanEq *tmp40 4
   928 setaddr :supplyBase*retaddr *label179 (h:*label179)
   929 call *label20 *invalid :supplyBase*retval (m:*label179) (h:*label179)
   930 label *label179
 
   933 label *label178
   934 label *label180
   935 read *tmp38 .controller ".flares"
-    * op lessThan *tmp201 *tmp38 1
-    * jump *label182 equal *tmp201 false
+  936 jump *label182 greaterThanEq *tmp38 1
   937 setaddr :supplyBase*retaddr *label183 (h:*label183)
   938 call *label20 *invalid :supplyBase*retval (m:*label183) (h:*label183)
   939 label *label183
 
   943 set :findFreeUnit:unit_type @flare
   944 set :findFreeUnit:initial_flag 0
   945 ubind :findFreeUnit:unit_type
-    * op equal *tmp203 @unit null
-    * jump *label185 equal *tmp203 false
+  946 jump *label185 notEqual @unit null
   947 jump *label184 always
   948 jump *label186 always
   949 label *label185
 
   951 set :findFreeUnit:first_unit @unit
   952 label *label187
   953 sensor *tmp205 @unit @controlled
-    * op equal *tmp206 *tmp205 0
-    * jump *label190 equal *tmp206 false
+  954 jump *label190 notEqual *tmp205 0
   955 ucontrol flag :findFreeUnit:initial_flag
   956 jump *label184 always
   957 jump *label191 always
   958 label *label190
   959 sensor *tmp208 :findFreeUnit:first_unit @dead
-    * op equal *tmp209 *tmp208 1
-    * jump *label192 equal *tmp209 false
+  960 jump *label192 notEqual *tmp208 1
   961 set :findFreeUnit:first_unit @unit
   962 jump *label193 always
   963 label *label192
 
   965 label *label191
   966 ubind :findFreeUnit:unit_type
   967 label *label188
-    * op notEqual *tmp212 :findFreeUnit:first_unit @unit
-    * jump *label187 notEqual *tmp212 false
+  968 jump *label187 notEqual :findFreeUnit:first_unit @unit
   969 label *label189
   970 jump *label184 always
   971 label *label184
 
   982 label *label197
   983 label *label195
   984 read *tmp217 .oreLocator ":layoutThoriumDrill*finished"
-    * op equal *tmp218 *tmp217 false
-    * jump *label194 notEqual *tmp218 false
+  985 jump *label194 equal *tmp217 false
   986 label *label196
   987 set :meetTarget:block @laser-drill
   988 set :meetTarget:copper 35
 
  1000 read *tmp219 .oreLocator ":layoutThoriumDrill*finished"
  1001 jump *label201 equal *tmp219 false
  1002 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp221 :buildThoriumDrill:result false
-    * jump *label202 equal *tmp221 false
+ 1003 jump *label202 notEqual :buildThoriumDrill:result false
  1004 set :error.1:error "Cannot locate spot for thorium drill"
  1005 set .ERROR :error.1:error
  1006 stop
 
  1019 label *label205
  1020 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
  1021 read *tmp74 .oreLocator ".water1X"
-    * op lessThan *tmp224 *tmp74 0
-    * jump *label206 equal *tmp224 false
+ 1022 jump *label206 greaterThanEq *tmp74 0
  1023 jump *label198 always
  1024 jump *label207 always
  1025 label *label206
 
  1046 call *label25 *invalid :buildBlockAt*retval (m:*label210) (h:*label210)
  1047 label *label210
  1048 read *tmp76 .oreLocator ".water2X"
-    * op lessThan *tmp227 *tmp76 0
-    * jump *label211 equal *tmp227 false
+ 1049 jump *label211 greaterThanEq *tmp76 0
  1050 jump *label198 always
  1051 jump *label212 always
  1052 label *label211
 
  1173 read *tmp38 .controller ".flares"
  1174 read *tmp39 .controller ".monos"
  1175 op add *tmp237 *tmp38 *tmp39
-    * op lessThan *tmp238 *tmp237 16
-    * jump *label229 notEqual *tmp238 false
+ 1176 jump *label229 lessThan *tmp237 16
  1177 label *label231
  1178 label *label233
  1179 setaddr :supplyBase*retaddr *label236 (h:*label236)
 
  1194 label *label240
  1195 label *label241
  1196 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239
-    * op equal *tmp240 *tmp239 false
-    * jump *label243 equal *tmp240 false
+ 1197 jump *label243 notEqual *tmp239 false
  1198 op sub *tmp241 :moveTo:radius 0.5
  1199 ucontrol approach :moveTo:x :moveTo:y *tmp241
  1200 label *label242
 
  1221 label *label247
  1222 label *label248
  1223 sensor *tmp244 @unit @firstItem
-    * op notEqual *tmp245 *tmp244 null
-    * jump *label251 equal *tmp245 false
+ 1224 jump *label251 equal *tmp244 null
  1225 ucontrol itemDrop @air 1000
  1226 jump *label252 always
  1227 label *label251
 
  1229 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
  1230 label *label249
  1231 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247
-    * op equal *tmp248 *tmp247 false
-    * jump *label248 notEqual *tmp248 false
+ 1232 jump *label248 equal *tmp247 false
  1233 label *label250
  1234 label *label246
  1235 return :moveToEmpty*retaddr
 
  1251 write :status3.2:text .display ".status3"
  1252 label *label256
  1253 sensor *tmp251 @unit @firstItem
-    * op equal *tmp252 *tmp251 :depositItems:item
-    * jump *label257 equal *tmp252 false
+ 1254 jump *label257 notEqual *tmp251 :depositItems:item
  1255 set :moveToBlock:block :depositItems:block
  1256 set :moveToBlock:radius 6
  1257 setaddr :moveToBlock*retaddr *label259 (h:*label259)
 
  1264 sensor *tmp255 @unit @firstItem
  1265 op mul *tmp256 *tmp255 :depositItems:cap
  1266 sensor *tmp257 :depositItems:block :depositItems:item
-    * op greaterThan *tmp258 *tmp256 *tmp257
-    * jump *label260 notEqual *tmp258 false
+ 1267 jump *label260 greaterThan *tmp256 *tmp257
  1268 label *label262
  1269 jump *label258 always
  1270 label *label257
  1271 label *label263
  1272 sensor *tmp259 @unit @firstItem
-    * op notEqual *tmp260 *tmp259 null
-    * jump *label265 equal *tmp260 false
+ 1273 jump *label265 equal *tmp259 null
  1274 ucontrol itemDrop @air 1000
  1275 label *label264
  1276 jump *label263 always
 
  1286 end
  1287 label *label10
  1288 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp261 0
-    * op equal *tmp263 *tmp261 false
-    * jump *label268 equal *tmp263 false
+ 1289 jump *label268 notEqual *tmp261 false
  1290 set :error.3:error "Cannot locate ore"
  1291 set .ERROR :error.3:error
  1292 stop
 
  1316 call *label7 *invalid :moveToEmpty*retval (m:*label274) (h:*label274)
  1317 label *label274
  1318 sensor *tmp266 @unit @firstItem
-    * op notEqual *tmp267 *tmp266 :mineOre:ore
-    * jump *label275 equal *tmp267 false
+ 1319 jump *label275 equal *tmp266 :mineOre:ore
  1320 label *label278
  1321 sensor *tmp269 @unit @firstItem
-    * op notEqual *tmp270 *tmp269 null
-    * jump *label280 equal *tmp270 false
+ 1322 jump *label280 equal *tmp269 null
  1323 ucontrol itemDrop @air 1000
  1324 label *label279
  1325 jump *label278 always
 
  1343 label *label285
  1344 label *label286
  1345 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp277 @second :mineOre:stop
-    * jump *label287 equal *tmp277 false
+ 1346 jump *label287 lessThanEq @second :mineOre:stop
  1347 jump *label284 always
  1348 jump *label288 always
  1349 label *label287
  1350 label *label288
  1351 label *label283
  1352 sensor *tmp279 @unit @totalItems
-    * op lessThan *tmp280 *tmp279 :mineOre:amount
-    * jump *label282 notEqual *tmp280 false
+ 1353 jump *label282 lessThan *tmp279 :mineOre:amount
  1354 label *label284
  1355 ucontrol unbind
  1356 set :depositItems:block :mineOre:block
 
  1400 label *label296
  1401 label *label298
  1402 sensor *tmp285 @unit @firstItem
-    * op notEqual *tmp286 *tmp285 null
-    * jump *label300 equal *tmp286 false
+ 1403 jump *label300 equal *tmp285 null
  1404 ucontrol itemDrop @air 1000
  1405 label *label299
  1406 jump *label298 always
 
  1434 end
  1435 label *label18
  1436 set :supplyBase0:supplied false
-    * op equal *tmp296 .unloader1 null
-    * jump *label308 equal *tmp296 false
+ 1437 jump *label308 notEqual .unloader1 null
  1438 sensor *tmp298 .core @graphite
-    * op lessThan *tmp299 *tmp298 .targetGraphite
-    * jump *label310 equal *tmp299 false
+ 1439 jump *label310 greaterThanEq *tmp298 .targetGraphite
  1440 sensor *tmp301 .press @coal
-    * op lessThan *tmp302 *tmp301 5
-    * jump *label312 equal *tmp302 false
+ 1441 jump *label312 greaterThanEq *tmp301 5
  1442 set :status1:text "Goal 1: graphite requirement"
  1443 write :status1:text .display ".status1"
  1444 label *label314
 
  1454 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
  1455 sensor *tmp305 :supplyBlock:block :supplyBlock:ore
  1456 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp305
-    * op greaterThan *tmp307 :supplyBlock:missing 0
-    * jump *label317 equal *tmp307 false
+ 1457 jump *label317 lessThanEq :supplyBlock:missing 0
  1458 set :mineOre:ore :supplyBlock:ore
  1459 set :mineOre:amount :supplyBlock:blockCapacity
  1460 set :mineOre:block :supplyBlock:block
 
  1473 label *label310
  1474 label *label311
  1475 sensor *tmp309 .core @silicon
-    * op lessThan *tmp310 *tmp309 .targetSilicon
-    * jump *label320 equal *tmp310 false
+ 1476 jump *label320 greaterThanEq *tmp309 .targetSilicon
  1477 sensor *tmp312 .smelter @coal
-    * op lessThan *tmp313 *tmp312 5
-    * jump *label322 equal *tmp313 false
+ 1478 jump *label322 greaterThanEq *tmp312 5
  1479 set :status1.1:text "Goal 2: coal for silicon requirement"
  1480 write :status1.1:text .display ".status1"
  1481 label *label324
 
  1491 sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
  1492 sensor *tmp316 :supplyBlock.1:block :supplyBlock.1:ore
  1493 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp316
-    * op greaterThan *tmp318 :supplyBlock.1:missing 0
-    * jump *label327 equal *tmp318 false
+ 1494 jump *label327 lessThanEq :supplyBlock.1:missing 0
  1495 set :mineOre:ore :supplyBlock.1:ore
  1496 set :mineOre:amount :supplyBlock.1:blockCapacity
  1497 set :mineOre:block :supplyBlock.1:block
 
  1506 jump *label323 always
  1507 label *label322
  1508 sensor *tmp320 .smelter @sand
-    * op lessThan *tmp321 *tmp320 5
-    * jump *label330 equal *tmp321 false
+ 1509 jump *label330 greaterThanEq *tmp320 5
  1510 set :status1.2:text "Goal 3: sand for silicon requirement"
  1511 write :status1.2:text .display ".status1"
  1512 label *label332
 
  1522 sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
  1523 sensor *tmp324 :supplyBlock.2:block :supplyBlock.2:ore
  1524 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp324
-    * op greaterThan *tmp326 :supplyBlock.2:missing 0
-    * jump *label335 equal *tmp326 false
+ 1525 jump *label335 lessThanEq :supplyBlock.2:missing 0
  1526 set :mineOre:ore :supplyBlock.2:ore
  1527 set :mineOre:amount :supplyBlock.2:blockCapacity
  1528 set :mineOre:block :supplyBlock.2:block
 
  1542 label *label320
  1543 label *label321
  1544 sensor *tmp328 .battery @totalPower
-    * op lessThan *tmp329 *tmp328 .powerTarget
-    * jump *label338 equal *tmp329 false
+ 1545 jump *label338 greaterThanEq *tmp328 .powerTarget
  1546 sensor *tmp331 .generator @coal
-    * op lessThan *tmp332 *tmp331 2
-    * jump *label340 equal *tmp332 false
+ 1547 jump *label340 greaterThanEq *tmp331 2
  1548 set :status1.3:text "Goal 4: supplying generator"
  1549 write :status1.3:text .display ".status1"
  1550 label *label342
 
  1560 sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
  1561 sensor *tmp335 :supplyBlock.3:block :supplyBlock.3:ore
  1562 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp335
-    * op greaterThan *tmp337 :supplyBlock.3:missing 0
-    * jump *label345 equal *tmp337 false
+ 1563 jump *label345 lessThanEq :supplyBlock.3:missing 0
  1564 set :mineOre:ore :supplyBlock.3:ore
  1565 set :mineOre:amount :supplyBlock.3:blockCapacity
  1566 set :mineOre:block :supplyBlock.3:block
 
  1582 label *label308
  1583 label *label309
  1584 sensor *tmp339 .core @titanium
-    * op lessThan *tmp340 *tmp339 .targetTitanium
-    * jump *label348 equal *tmp340 false
+ 1585 jump *label348 greaterThanEq *tmp339 .targetTitanium
  1586 sensor *tmp342 .core @titanium
  1587 op sub *tmp343 .targetTitanium *tmp342
  1588 op min *tmp341 7 *tmp343
 
  1592 label *label349
  1593 set :supplyBase0:titaniumTrigger *tmp341
  1594 sensor *tmp345 .titaniumDrill @titanium
-    * op lessThan *tmp346 *tmp345 :supplyBase0:titaniumTrigger
-    * jump *label350 equal *tmp346 false
-    * op equal *tmp348 :supplyBase0:supplied false
-    * jump *label352 equal *tmp348 false
+ 1595 jump *label350 greaterThanEq *tmp345 :supplyBase0:titaniumTrigger
+ 1596 jump *label352 notEqual :supplyBase0:supplied false
  1597 sensor *tmp350 .battery @totalPower
  1598 op mul *tmp351 .unloader1 .powerTarget
-    * op lessThan *tmp352 *tmp350 *tmp351
-    * jump *label354 equal *tmp352 false
+ 1599 jump *label354 greaterThanEq *tmp350 *tmp351
  1600 set :status1.4:text "Goal 5: supplying generator"
  1601 write :status1.4:text .display ".status1"
  1602 label *label356
 
  1607 jump *label355 always
  1608 label *label354
  1609 sensor *tmp354 .core @silicon
-    * op lessThan *tmp355 *tmp354 .targetSilicon
-    * jump *label358 equal *tmp355 false
+ 1610 jump *label358 greaterThanEq *tmp354 .targetSilicon
  1611 set :status1.5:text "Goal 6: silicon requirement"
  1612 write :status1.5:text .display ".status1"
  1613 label *label360
  1614 sensor :supplyBase0:coal .core @coal
  1615 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp359 :supplyBase0:coal :supplyBase0:sand
-    * jump *label361 equal *tmp359 false
+ 1616 jump *label361 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1617 set *tmp360 @coal
  1618 jump *label362 always
  1619 label *label361
 
  1627 jump *label359 always
  1628 label *label358
  1629 sensor *tmp361 .core @copper
-    * op lessThan *tmp362 *tmp361 .targetCopper
-    * jump *label364 equal *tmp362 false
+ 1630 jump *label364 greaterThanEq *tmp361 .targetCopper
  1631 set :status1.6:text "Goal 7: copper requirement"
  1632 write :status1.6:text .display ".status1"
  1633 label *label366
 
  1639 label *label364
  1640 sensor *tmp364 .core @lead
  1641 op add *tmp365 .targetLead 20
-    * op lessThan *tmp366 *tmp364 *tmp365
-    * jump *label368 equal *tmp366 false
+ 1642 jump *label368 greaterThanEq *tmp364 *tmp365
  1643 set :status1.7:text "Goal 8: lead requirement"
  1644 write :status1.7:text .display ".status1"
  1645 label *label370
 
  1650 jump *label369 always
  1651 label *label368
  1652 sensor *tmp368 .core @metaglass
-    * op lessThan *tmp369 *tmp368 .targetMetaglass
-    * jump *label372 equal *tmp369 false
+ 1653 jump *label372 greaterThanEq *tmp368 .targetMetaglass
  1654 set :status1.8:text "Goal 9: metaglass requirement"
  1655 write :status1.8:text .display ".status1"
  1656 label *label374
 
  1665 label *label376
  1666 sensor :supplyBase0:coal.1 .core @coal
  1667 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp373 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label377 equal *tmp373 false
+ 1668 jump *label377 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1669 set *tmp374 @coal
  1670 jump *label378 always
  1671 label *label377
 
  1711 end
  1712 label *label20
  1713 read *tmp39 .controller ".monos"
-    * op greaterThan *tmp375 *tmp39 3
-    * jump *label386 equal *tmp375 false
+ 1714 jump *label386 lessThanEq *tmp39 3
  1715 setaddr :supplyBase1*retaddr *label388 (h:*label388)
  1716 call *label19 *invalid :supplyBase1*retval (m:*label388) (h:*label388)
  1717 label *label388
 
  1726 end
  1727 label *label21
  1728 sensor *tmp377 .core @copper
-    * op greaterThanEq *tmp378 *tmp377 .targetCopper
-    * jump *label391 equal *tmp378 false
+ 1729 jump *label391 lessThan *tmp377 .targetCopper
  1730 sensor *tmp380 .core @lead
-    * op greaterThanEq *tmp381 *tmp380 .targetLead
-    * jump *label393 equal *tmp381 false
+ 1731 jump *label393 lessThan *tmp380 .targetLead
  1732 sensor *tmp383 .core @graphite
-    * op greaterThanEq *tmp384 *tmp383 .targetGraphite
-    * jump *label395 equal *tmp384 false
+ 1733 jump *label395 lessThan *tmp383 .targetGraphite
  1734 sensor *tmp386 .core @silicon
-    * op greaterThanEq *tmp387 *tmp386 .targetSilicon
-    * jump *label397 equal *tmp387 false
+ 1735 jump *label397 lessThan *tmp386 .targetSilicon
  1736 sensor *tmp389 .core @titanium
-    * op greaterThanEq *tmp390 *tmp389 .targetTitanium
-    * jump *label399 equal *tmp390 false
+ 1737 jump *label399 lessThan *tmp389 .targetTitanium
  1738 sensor *tmp392 .core @metaglass
-    * op greaterThanEq *tmp393 *tmp392 .targetMetaglass
-    * jump *label401 equal *tmp393 false
+ 1739 jump *label401 lessThan *tmp392 .targetMetaglass
  1740 set :targetMet*retval true
  1741 jump *label390 always
  1742 jump *label402 always
 
  1825 setaddr :targetMet*retaddr *label416 (h:*label416)
  1826 call *label21 *invalid :targetMet*retval (m:*label416) (h:*label416)
  1827 label *label416
-    * op equal *tmp406 :targetMet*retval false
-    * jump *label415 equal *tmp406 false
+ 1828 jump *label415 notEqual :targetMet*retval false
  1829 setaddr :supplyBase*retaddr *label417 (h:*label417)
  1830 call *label20 *invalid :supplyBase*retval (m:*label417) (h:*label417)
  1831 label *label417
 
  1868 write :status3.4:text .display ".status3"
  1869 label *label424
  1870 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp417 :buildBlockAt:building null
-    * jump *label425 equal *tmp417 false
-    * op equal *tmp419 :buildBlockAt:type :buildBlockAt:block
-    * jump *label427 equal *tmp419 false
+ 1871 jump *label425 equal :buildBlockAt:building null
+ 1872 jump *label427 notEqual :buildBlockAt:type :buildBlockAt:block
  1873 set :buildBlockAt*retval :buildBlockAt:building
  1874 jump *label422 always
  1875 jump *label428 always
 
  1892 wait 0.25
  1893 label *label432
  1894 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op equal *tmp424 :buildBlockAt:building null
-    * jump *label435 equal *tmp424 false
+ 1895 jump *label435 notEqual :buildBlockAt:building null
  1896 set :buildBlockAt*retval null
  1897 jump *label422 always
  1898 jump *label436 always
  1899 label *label435
  1900 label *label436
  1901 label *label433
-    * op notEqual *tmp426 :buildBlockAt:type :buildBlockAt:block
-    * jump *label432 notEqual *tmp426 false
+ 1902 jump *label432 notEqual :buildBlockAt:type :buildBlockAt:block
  1903 label *label434
  1904 set :logBlock:block :buildBlockAt:block
  1905 setaddr :logBlock*retaddr *label437 (h:*label437)
 
  1941 set :findUnits:count 0
  1942 ubind :findUnits:type
  1943 set :findUnits:firstUnit @unit
-    * op notEqual *tmp427 :findUnits:firstUnit null
-    * jump *label442 equal *tmp427 false
+ 1944 jump *label442 equal :findUnits:firstUnit null
  1945 label *label444
  1946 op add :findUnits:count :findUnits:count 1
  1947 ubind :findUnits:type
  1948 label *label445
-    * op notEqual *tmp430 @unit :findUnits:firstUnit
-    * jump *label444 notEqual *tmp430 false
+ 1949 jump *label444 notEqual @unit :findUnits:firstUnit
  1950 label *label446
  1951 jump *label443 always
  1952 label *label442

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-37 instructions):
 
   260 set .ERROR :error:error
   261 stop
   262 label *label70
-    * jump *label69 always
   263 label *label68
   264 label *label69
   265 write @pneumatic-drill .display ".nextBlock"
 
   507 sensor *tmp152 .battery @totalPower
   508 jump *label108 greaterThanEq *tmp152 300
   509 jump *label106 always
-    * jump *label109 always
   510 label *label108
   511 label *label109
   512 label *label105
 
   943 ubind :findFreeUnit:unit_type
   944 jump *label185 notEqual @unit null
   945 jump *label184 always
-    * jump *label186 always
   946 label *label185
   947 label *label186
   948 set :findFreeUnit:first_unit @unit
 
   956 sensor *tmp208 :findFreeUnit:first_unit @dead
   957 jump *label192 notEqual *tmp208 1
   958 set :findFreeUnit:first_unit @unit
-    * jump *label193 always
   959 label *label192
   960 label *label193
   961 label *label191
 
   963 label *label188
   964 jump *label187 notEqual :findFreeUnit:first_unit @unit
   965 label *label189
-    * jump *label184 always
   966 label *label184
   967 write .coreX .oreLocator ":layoutThoriumDrill:x"
   968 write .coreY .oreLocator ":layoutThoriumDrill:y"
 
  1000 set .ERROR :error.1:error
  1001 stop
  1002 label *label204
-    * jump *label203 always
  1003 label *label202
  1004 label *label203
  1005 set :buildBlockAt:block @laser-drill
 
  1015 read *tmp74 .oreLocator ".water1X"
  1016 jump *label206 greaterThanEq *tmp74 0
  1017 jump *label198 always
-    * jump *label207 always
  1018 label *label206
  1019 label *label207
  1020 set :meetTarget:block @water-extractor
 
  1041 read *tmp76 .oreLocator ".water2X"
  1042 jump *label211 greaterThanEq *tmp76 0
  1043 jump *label198 always
-    * jump *label212 always
  1044 label *label211
  1045 label *label212
  1046 set :meetTarget:block @water-extractor
 
  1215 sensor *tmp244 @unit @firstItem
  1216 jump *label251 equal *tmp244 null
  1217 ucontrol itemDrop @air 1000
-    * jump *label252 always
  1218 label *label251
  1219 label *label252
  1220 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
  1282 set .ERROR :error.3:error
  1283 stop
  1284 label *label270
-    * jump *label269 always
  1285 label *label268
  1286 label *label269
  1287 label *label267
 
  1315 jump *label278 always
  1316 label *label280
  1317 label *label277
-    * jump *label276 always
  1318 label *label275
  1319 label *label276
  1320 set :status3.3:text "Mining..."
 
  1328 op land *tmp275 *tmp273 *tmp274
  1329 jump *label285 equal *tmp275 false
  1330 jump *label284 always
-    * jump *label286 always
  1331 label *label285
  1332 label *label286
  1333 ucontrol mine :mineOre:x :mineOre:y
  1334 jump *label287 lessThanEq @second :mineOre:stop
  1335 jump *label284 always
-    * jump *label288 always
  1336 label *label287
  1337 label *label288
  1338 label *label283
 
  1401 op land *tmp290 *tmp288 *tmp289
  1402 jump *label304 equal *tmp290 false
  1403 ucontrol itemDrop @air 1000
-    * jump *label305 always
  1404 label *label304
  1405 label *label305
  1406 label *label302
 
  1447 setaddr :mineOre*retaddr *label319 (h:*label319)
  1448 call *label11 *invalid :mineOre*retval (m:*label319) (h:*label319)
  1449 label *label319
-    * jump *label318 always
  1450 label *label317
  1451 label *label318
  1452 label *label315
  1453 set :supplyBase0:supplied true
-    * jump *label313 always
  1454 label *label312
  1455 label *label313
-    * jump *label311 always
  1456 label *label310
  1457 label *label311
  1458 sensor *tmp309 .core @silicon
 
  1481 setaddr :mineOre*retaddr *label329 (h:*label329)
  1482 call *label11 *invalid :mineOre*retval (m:*label329) (h:*label329)
  1483 label *label329
-    * jump *label328 always
  1484 label *label327
  1485 label *label328
  1486 label *label325
 
  1511 setaddr :mineOre*retaddr *label337 (h:*label337)
  1512 call *label11 *invalid :mineOre*retval (m:*label337) (h:*label337)
  1513 label *label337
-    * jump *label336 always
  1514 label *label335
  1515 label *label336
  1516 label *label333
  1517 set :supplyBase0:supplied true
-    * jump *label331 always
  1518 label *label330
  1519 label *label331
  1520 label *label323
-    * jump *label321 always
  1521 label *label320
  1522 label *label321
  1523 sensor *tmp328 .battery @totalPower
 
  1546 setaddr :mineOre*retaddr *label347 (h:*label347)
  1547 call *label11 *invalid :mineOre*retval (m:*label347) (h:*label347)
  1548 label *label347
-    * jump *label346 always
  1549 label *label345
  1550 label *label346
  1551 label *label343
  1552 set :supplyBase0:supplied true
-    * jump *label341 always
  1553 label *label340
  1554 label *label341
-    * jump *label339 always
  1555 label *label338
  1556 label *label339
-    * jump *label309 always
  1557 label *label308
  1558 label *label309
  1559 sensor *tmp339 .core @titanium
 
  1656 label *label365
  1657 label *label359
  1658 label *label355
-    * jump *label353 always
  1659 label *label352
  1660 label *label353
  1661 jump *label351 always
 
  1713 jump *label401 lessThan *tmp392 .targetMetaglass
  1714 set :targetMet*retval true
  1715 jump *label390 always
-    * jump *label402 always
  1716 label *label401
  1717 label *label402
-    * jump *label400 always
  1718 label *label399
  1719 label *label400
-    * jump *label398 always
  1720 label *label397
  1721 label *label398
-    * jump *label396 always
  1722 label *label395
  1723 label *label396
-    * jump *label394 always
  1724 label *label393
  1725 label *label394
-    * jump *label392 always
  1726 label *label391
  1727 label *label392
  1728 set :targetMet*retval false
 
  1840 jump *label427 notEqual :buildBlockAt:type :buildBlockAt:block
  1841 set :buildBlockAt*retval :buildBlockAt:building
  1842 jump *label422 always
-    * jump *label428 always
  1843 label *label427
  1844 label *label428
  1845 jump *label429 equal :buildBlockAt:skipError false
  1846 set :buildBlockAt*retval null
  1847 jump *label422 always
-    * jump *label430 always
  1848 label *label429
  1849 label *label430
  1850 set :error.4:error "Cannot build at ("
  1851 set .ERROR :error.4:error
  1852 stop
  1853 label *label431
-    * jump *label426 always
  1854 label *label425
  1855 label *label426
  1856 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
  1860 jump *label435 notEqual :buildBlockAt:building null
  1861 set :buildBlockAt*retval null
  1862 jump *label422 always
-    * jump *label436 always
  1863 label *label435
  1864 label *label436
  1865 label *label433
 
  1912 label *label445
  1913 jump *label444 notEqual @unit :findUnits:firstUnit
  1914 label *label446
-    * jump *label443 always
  1915 label *label442
  1916 label *label443
  1917 set :findUnits*retval :findUnits:count

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-39 instructions):
 
     5 set .smelter null
     6 set .titaniumDrill null
     7 set .unloader1 null
-    * set .kiln null
     8 set .leadSurplus 0
     9 set .graphiteSurplus 20
    10 set .siliconSurplus 20
 
    24 setaddr :findUnits*retaddr *label31 (h:*label31)
    25 call *label27 *invalid :findUnits*retval (m:*label31) (h:*label31)
    26 label *label31
-    * write :findUnits:count .display ".displayFlares"
+   27 write :findUnits:count processor1 ".displayFlares"
    28 set :flares :findUnits*retval
    29 set :findUnits:type @mono
    30 setaddr :findUnits*retaddr *label32 (h:*label32)
    31 call *label27 *invalid :findUnits*retval (m:*label32) (h:*label32)
    32 label *label32
-    * write :findUnits:count .display ".displayMonos"
+   33 write :findUnits:count processor1 ".displayMonos"
    34 set :monos :findUnits*retval
    35 set :findUnits:type @poly
    36 setaddr :findUnits*retaddr *label33 (h:*label33)
    37 call *label27 *invalid :findUnits*retval (m:*label33) (h:*label33)
    38 label *label33
-    * write :findUnits:count .display ".displayPolys"
+   39 write :findUnits:count processor1 ".displayPolys"
    40 set :polys :findUnits*retval
    41 set :buildBlockFromCfg:block @graphite-press
    42 set :buildBlockFromCfg:offsetX -1.5
 
    49 set :buildBlockFromCfg:metaglass 0
    50 set :buildBlockFromCfg:rotation 0
    51 set :buildBlockFromCfg:config null
-    * setaddr *tmp98 *label38
    52 label *label35
-    * op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
-    * op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlock:block :buildBlockFromCfg:block
+   53 op add :buildBlockFromCfg:x .coreX -1.5
+   54 op add :buildBlockFromCfg:y .coreY 2.5
+   55 set :buildBlock:block @graphite-press
    56 set :buildBlock:x :buildBlockFromCfg:x
    57 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper :buildBlockFromCfg:copper
-    * set :buildBlock:lead :buildBlockFromCfg:lead
-    * set :buildBlock:graphite :buildBlockFromCfg:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
-    * set :buildBlock:config :buildBlockFromCfg:config
+   58 set :buildBlock:copper 75
+   59 set :buildBlock:lead 30
+   60 set :buildBlock:graphite 0
+   61 set :buildBlock:silicon 0
+   62 set :buildBlock:titanium 0
+   63 set :buildBlock:metaglass 0
+   64 set :buildBlock:rotation 0
+   65 set :buildBlock:config null
    66 setaddr :buildBlock*retaddr *label39 (h:*label39)
    67 call *label26 *invalid :buildBlock*retval (m:*label39) (h:*label39)
    68 label *label39
 
    72 multijump *tmp98 0 0 (m:marker0)
    73 multilabel *label38 (m:marker0)
    74 label *label37
-    * set *tmp97 null
    75 label *label34
    76 set .press *tmp97
    77 set :buildBlockFromCfg.1:block @battery
 
    85 set :buildBlockFromCfg.1:metaglass 0
    86 set :buildBlockFromCfg.1:rotation 0
    87 set :buildBlockFromCfg.1:config null
-    * setaddr *tmp102 *label44
    88 label *label41
-    * op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
-    * op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.1:block
+   89 op add :buildBlockFromCfg.1:x .coreX 0
+   90 op add :buildBlockFromCfg.1:y .coreY 4
+   91 set :buildBlock:block @battery
    92 set :buildBlock:x :buildBlockFromCfg.1:x
    93 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper :buildBlockFromCfg.1:copper
-    * set :buildBlock:lead :buildBlockFromCfg.1:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.1:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.1:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.1:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.1:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.1:rotation
-    * set :buildBlock:config :buildBlockFromCfg.1:config
+   94 set :buildBlock:copper 5
+   95 set :buildBlock:lead 20
+   96 set :buildBlock:graphite 0
+   97 set :buildBlock:silicon 0
+   98 set :buildBlock:titanium 0
+   99 set :buildBlock:metaglass 0
+  100 set :buildBlock:rotation 0
+  101 set :buildBlock:config null
   102 setaddr :buildBlock*retaddr *label45 (h:*label45)
   103 call *label26 *invalid :buildBlock*retval (m:*label45) (h:*label45)
   104 label *label45
 
   108 multijump *tmp102 0 0 (m:marker1)
   109 multilabel *label44 (m:marker1)
   110 label *label43
-    * set *tmp101 null
   111 label *label40
   112 set .battery *tmp101
   113 set :buildBlockFromCfg.2:block @battery
 
   121 set :buildBlockFromCfg.2:metaglass 0
   122 set :buildBlockFromCfg.2:rotation 0
   123 set :buildBlockFromCfg.2:config null
-    * setaddr *tmp106 *label50
   124 label *label47
-    * op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
-    * op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.2:block
+  125 op add :buildBlockFromCfg.2:x .coreX -1
+  126 op add :buildBlockFromCfg.2:y .coreY 4
+  127 set :buildBlock:block @battery
   128 set :buildBlock:x :buildBlockFromCfg.2:x
   129 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper :buildBlockFromCfg.2:copper
-    * set :buildBlock:lead :buildBlockFromCfg.2:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.2:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.2:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.2:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.2:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.2:rotation
-    * set :buildBlock:config :buildBlockFromCfg.2:config
+  130 set :buildBlock:copper 5
+  131 set :buildBlock:lead 20
+  132 set :buildBlock:graphite 0
+  133 set :buildBlock:silicon 0
+  134 set :buildBlock:titanium 0
+  135 set :buildBlock:metaglass 0
+  136 set :buildBlock:rotation 0
+  137 set :buildBlock:config null
   138 setaddr :buildBlock*retaddr *label51 (h:*label51)
   139 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
   140 label *label51
 
   155 set :buildBlockFromCfg.3:metaglass 0
   156 set :buildBlockFromCfg.3:rotation 0
   157 set :buildBlockFromCfg.3:config null
-    * setaddr *tmp110 *label56
   158 label *label53
-    * op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
-    * op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.3:block
+  159 op add :buildBlockFromCfg.3:x .coreX 0
+  160 op add :buildBlockFromCfg.3:y .coreY 3
+  161 set :buildBlock:block @combustion-generator
   162 set :buildBlock:x :buildBlockFromCfg.3:x
   163 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper :buildBlockFromCfg.3:copper
-    * set :buildBlock:lead :buildBlockFromCfg.3:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.3:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.3:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.3:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.3:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.3:rotation
-    * set :buildBlock:config :buildBlockFromCfg.3:config
+  164 set :buildBlock:copper 25
+  165 set :buildBlock:lead 15
+  166 set :buildBlock:graphite 0
+  167 set :buildBlock:silicon 0
+  168 set :buildBlock:titanium 0
+  169 set :buildBlock:metaglass 0
+  170 set :buildBlock:rotation 0
+  171 set :buildBlock:config null
   172 setaddr :buildBlock*retaddr *label57 (h:*label57)
   173 call *label26 *invalid :buildBlock*retval (m:*label57) (h:*label57)
   174 label *label57
 
   178 multijump *tmp110 0 0 (m:marker3)
   179 multilabel *label56 (m:marker3)
   180 label *label55
-    * set *tmp109 null
   181 label *label52
   182 set .generator *tmp109
   183 set .powerTarget 400
 
   192 set :buildBlockFromCfg.4:metaglass 0
   193 set :buildBlockFromCfg.4:rotation 0
   194 set :buildBlockFromCfg.4:config null
-    * setaddr *tmp114 *label62
   195 label *label59
-    * op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
-    * op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.4:block
+  196 op add :buildBlockFromCfg.4:x .coreX 1.5
+  197 op add :buildBlockFromCfg.4:y .coreY 2.5
+  198 set :buildBlock:block @silicon-smelter
   199 set :buildBlock:x :buildBlockFromCfg.4:x
   200 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper :buildBlockFromCfg.4:copper
-    * set :buildBlock:lead :buildBlockFromCfg.4:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.4:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.4:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.4:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.4:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.4:rotation
-    * set :buildBlock:config :buildBlockFromCfg.4:config
+  201 set :buildBlock:copper 30
+  202 set :buildBlock:lead 25
+  203 set :buildBlock:graphite 0
+  204 set :buildBlock:silicon 0
+  205 set :buildBlock:titanium 0
+  206 set :buildBlock:metaglass 0
+  207 set :buildBlock:rotation 0
+  208 set :buildBlock:config null
   209 setaddr :buildBlock*retaddr *label63 (h:*label63)
   210 call *label26 *invalid :buildBlock*retval (m:*label63) (h:*label63)
   211 label *label63
 
   215 multijump *tmp114 0 0 (m:marker4)
   216 multilabel *label62 (m:marker4)
   217 label *label61
-    * set *tmp113 null
   218 label *label58
   219 set .smelter *tmp113
   220 set :meetTarget:block @pneumatic-drill
 
   228 call *label22 *invalid :meetTarget*retval (m:*label66) (h:*label66)
   229 label *label66
   230 label *label65
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write false .oreLocator ":findDrillLocation:large"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  231 write @titanium processor1 ".nextBlock"
+  232 write .coreX processor4 ":findDrillLocation:x"
+  233 write .coreY processor4 ":findDrillLocation:y"
+  234 write @unit processor4 ":findDrillLocation:unit"
+  235 write @titanium processor4 ":findDrillLocation:item"
+  236 write @ore-titanium processor4 ":findDrillLocation:ore"
+  237 write false processor4 ":findDrillLocation:large"
+  238 write 4 processor4 ":findDrillLocation:limit"
+  239 write false processor4 ":findDrillLocation*finished"
+  240 write 1 processor4 "@counter"
   241 label *label67
   242 wait 1e-15
-    * read *tmp128 .oreLocator ":findDrillLocation*finished"
+  243 read *tmp128 processor4 ":findDrillLocation*finished"
   244 jump *label67 equal *tmp128 false
-    * read :buildTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+  245 read :buildTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+  246 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+  247 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   248 jump *label68 notEqual :buildTitaniumDrill:result false
   249 set :error:error "Cannot locate spot for titanium drill"
-    * set .ERROR :error:error
+  250 set .ERROR "Cannot locate spot for titanium drill"
   251 stop
   252 label *label70
   253 label *label68
   254 label *label69
-    * write @pneumatic-drill .display ".nextBlock"
+  255 write @pneumatic-drill processor1 ".nextBlock"
   256 set :buildBlockAt:block @pneumatic-drill
   257 set :buildBlockAt:x :buildTitaniumDrill:dx
   258 set :buildBlockAt:y :buildTitaniumDrill:dy
 
   264 label *label71
   265 set *tmp117 :buildBlockAt*retval
   266 jump *label64 always
-    * set *tmp117 null
   267 label *label64
-    * set .titaniumDrill *tmp117
-    * write .titaniumDrill .display ".titaniumDrill"
+  268 set .titaniumDrill :buildBlockAt*retval
+  269 write *tmp117 processor1 ".titaniumDrill"
   270 set :buildBlockFromCfg.5:block @unloader
   271 set :buildBlockFromCfg.5:offsetX 0
   272 set :buildBlockFromCfg.5:offsetY 2
 
   278 set :buildBlockFromCfg.5:metaglass 0
   279 set :buildBlockFromCfg.5:rotation 0
   280 set :buildBlockFromCfg.5:config null
-    * setaddr *tmp133 *label76
   281 label *label73
-    * op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
-    * op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.5:block
+  282 op add :buildBlockFromCfg.5:x .coreX 0
+  283 op add :buildBlockFromCfg.5:y .coreY 2
+  284 set :buildBlock:block @unloader
   285 set :buildBlock:x :buildBlockFromCfg.5:x
   286 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper :buildBlockFromCfg.5:copper
-    * set :buildBlock:lead :buildBlockFromCfg.5:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.5:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.5:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.5:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.5:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.5:rotation
-    * set :buildBlock:config :buildBlockFromCfg.5:config
+  287 set :buildBlock:copper 0
+  288 set :buildBlock:lead 0
+  289 set :buildBlock:graphite 0
+  290 set :buildBlock:silicon 30
+  291 set :buildBlock:titanium 25
+  292 set :buildBlock:metaglass 0
+  293 set :buildBlock:rotation 0
+  294 set :buildBlock:config null
   295 setaddr :buildBlock*retaddr *label77 (h:*label77)
   296 call *label26 *invalid :buildBlock*retval (m:*label77) (h:*label77)
   297 label *label77
 
   301 multijump *tmp133 0 0 (m:marker5)
   302 multilabel *label76 (m:marker5)
   303 label *label75
-    * set *tmp132 null
   304 label *label72
   305 set .unloader1 *tmp132
   306 set :buildBlockFromCfg.6:block @micro-processor
 
   314 set :buildBlockFromCfg.6:metaglass 0
   315 set :buildBlockFromCfg.6:rotation 0
   316 set :buildBlockFromCfg.6:config processor2
-    * setaddr *tmp137 *label82
   317 label *label79
-    * op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
-    * op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.6:block
+  318 op add :buildBlockFromCfg.6:x .coreX 1
+  319 op add :buildBlockFromCfg.6:y .coreY 4
+  320 set :buildBlock:block @micro-processor
   321 set :buildBlock:x :buildBlockFromCfg.6:x
   322 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper :buildBlockFromCfg.6:copper
-    * set :buildBlock:lead :buildBlockFromCfg.6:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.6:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.6:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.6:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.6:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.6:rotation
-    * set :buildBlock:config :buildBlockFromCfg.6:config
+  323 set :buildBlock:copper 90
+  324 set :buildBlock:lead 50
+  325 set :buildBlock:graphite 0
+  326 set :buildBlock:silicon 50
+  327 set :buildBlock:titanium 0
+  328 set :buildBlock:metaglass 0
+  329 set :buildBlock:rotation 0
+  330 set :buildBlock:config processor2
   331 setaddr :buildBlock*retaddr *label83 (h:*label83)
   332 call *label26 *invalid :buildBlock*retval (m:*label83) (h:*label83)
   333 label *label83
 
   337 multijump *tmp137 0 0 (m:marker6)
   338 multilabel *label82 (m:marker6)
   339 label *label81
-    * set *tmp136 null
   340 label *label78
   341 set .controller *tmp136
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write :monos .controller ".monos"
-    * write :flares .controller ".flares"
-    * write :polys .controller ".polys"
+  342 write processor1 *tmp136 ".display"
+  343 write .core *tmp136 ".core"
+  344 write bank1 *tmp136 ".bank"
+  345 write *tmp101 *tmp136 ".battery"
+  346 write *tmp109 *tmp136 ".generator"
+  347 write *tmp113 *tmp136 ".smelter"
+  348 write *tmp97 *tmp136 ".press"
+  349 write :monos *tmp136 ".monos"
+  350 write :flares *tmp136 ".flares"
+  351 write :polys *tmp136 ".polys"
   352 set :buildBlockFromCfg.7:block @power-node
   353 set :buildBlockFromCfg.7:offsetX -2
   354 set :buildBlockFromCfg.7:offsetY 1
 
   360 set :buildBlockFromCfg.7:metaglass 0
   361 set :buildBlockFromCfg.7:rotation 0
   362 set :buildBlockFromCfg.7:config null
-    * setaddr *tmp141 *label88
   363 label *label85
-    * op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
-    * op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.7:block
+  364 op add :buildBlockFromCfg.7:x .coreX -2
+  365 op add :buildBlockFromCfg.7:y .coreY 1
+  366 set :buildBlock:block @power-node
   367 set :buildBlock:x :buildBlockFromCfg.7:x
   368 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper :buildBlockFromCfg.7:copper
-    * set :buildBlock:lead :buildBlockFromCfg.7:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.7:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.7:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.7:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.7:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.7:rotation
-    * set :buildBlock:config :buildBlockFromCfg.7:config
+  369 set :buildBlock:copper 2
+  370 set :buildBlock:lead 6
+  371 set :buildBlock:graphite 0
+  372 set :buildBlock:silicon 0
+  373 set :buildBlock:titanium 0
+  374 set :buildBlock:metaglass 0
+  375 set :buildBlock:rotation 0
+  376 set :buildBlock:config null
   377 setaddr :buildBlock*retaddr *label89 (h:*label89)
   378 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)
   379 label *label89
 
   394 set :buildBlockFromCfg.8:metaglass 0
   395 set :buildBlockFromCfg.8:rotation 0
   396 set :buildBlockFromCfg.8:config null
-    * setaddr *tmp145 *label94
   397 label *label91
-    * op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
-    * op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.8:block
+  398 op add :buildBlockFromCfg.8:x .coreX -2
+  399 op add :buildBlockFromCfg.8:y .coreY 0
+  400 set :buildBlock:block @unloader
   401 set :buildBlock:x :buildBlockFromCfg.8:x
   402 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper :buildBlockFromCfg.8:copper
-    * set :buildBlock:lead :buildBlockFromCfg.8:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.8:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.8:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.8:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.8:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.8:rotation
-    * set :buildBlock:config :buildBlockFromCfg.8:config
+  403 set :buildBlock:copper 0
+  404 set :buildBlock:lead 0
+  405 set :buildBlock:graphite 0
+  406 set :buildBlock:silicon 30
+  407 set :buildBlock:titanium 25
+  408 set :buildBlock:metaglass 0
+  409 set :buildBlock:rotation 0
+  410 set :buildBlock:config null
   411 setaddr :buildBlock*retaddr *label95 (h:*label95)
   412 call *label26 *invalid :buildBlock*retval (m:*label95) (h:*label95)
   413 label *label95
 
   417 multijump *tmp145 0 0 (m:marker8)
   418 multilabel *label94 (m:marker8)
   419 label *label93
-    * set *tmp144 null
   420 label *label90
-    * write *tmp144 .controller ".unloader2"
+  421 write *tmp144 *tmp136 ".unloader2"
   422 set :buildBlockFromCfg.9:block @air-factory
   423 set :buildBlockFromCfg.9:offsetX -3
   424 set :buildBlockFromCfg.9:offsetY -2
 
   430 set :buildBlockFromCfg.9:metaglass 0
   431 set :buildBlockFromCfg.9:rotation 3
   432 set :buildBlockFromCfg.9:config @mono
-    * setaddr *tmp149 *label100
   433 label *label97
-    * op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
-    * op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.9:block
+  434 op add :buildBlockFromCfg.9:x .coreX -3
+  435 op add :buildBlockFromCfg.9:y .coreY -2
+  436 set :buildBlock:block @air-factory
   437 set :buildBlock:x :buildBlockFromCfg.9:x
   438 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper :buildBlockFromCfg.9:copper
-    * set :buildBlock:lead :buildBlockFromCfg.9:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.9:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.9:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.9:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.9:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.9:rotation
-    * set :buildBlock:config :buildBlockFromCfg.9:config
+  439 set :buildBlock:copper 60
+  440 set :buildBlock:lead 70
+  441 set :buildBlock:graphite 0
+  442 set :buildBlock:silicon 0
+  443 set :buildBlock:titanium 0
+  444 set :buildBlock:metaglass 0
+  445 set :buildBlock:rotation 3
+  446 set :buildBlock:config @mono
   447 setaddr :buildBlock*retaddr *label101 (h:*label101)
   448 call *label26 *invalid :buildBlock*retval (m:*label101) (h:*label101)
   449 label *label101
 
   453 multijump *tmp149 0 0 (m:marker9)
   454 multilabel *label100 (m:marker9)
   455 label *label99
-    * set *tmp148 null
   456 label *label96
   457 set :factory *tmp148
-    * write :factory .controller ".factory"
-    * write :factory .display ".factory"
-    * write 1 .controller ".flareTarget"
-    * write 3 .controller ".monoTarget"
-    * write 0 .controller ".polyTarget"
-    * write 85 .controller ".pressTarget"
-    * write 150 .controller ".smelterTarget"
-    * write 30 .controller ".kilnTarget"
+  458 write *tmp148 *tmp136 ".factory"
+  459 write *tmp148 processor1 ".factory"
+  460 write 1 *tmp136 ".flareTarget"
+  461 write 3 *tmp136 ".monoTarget"
+  462 write 0 *tmp136 ".polyTarget"
+  463 write 85 *tmp136 ".pressTarget"
+  464 write 150 *tmp136 ".smelterTarget"
+  465 write 30 *tmp136 ".kilnTarget"
   466 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  467 set .siliconSurplus 20
   468 set :meetTarget:block 0
   469 set :meetTarget:copper 0
   470 set :meetTarget:lead 0
 
   475 setaddr :meetTarget*retaddr *label103 (h:*label103)
   476 call *label22 *invalid :meetTarget*retval (m:*label103) (h:*label103)
   477 label *label103
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
-    * write 0 .controller ".leadReserve"
-    * write 0 .controller ".siliconReserve"
+  478 write 0 processor1 ".totalTargets"
+  479 write null processor1 ".nextBlock"
+  480 write 0 *tmp136 ".leadReserve"
+  481 write 0 *tmp136 ".siliconReserve"
   482 label *label102
   483 label *label104
   484 setaddr :supplyBase*retaddr *label107 (h:*label107)
   485 call *label20 *invalid :supplyBase*retval (m:*label107) (h:*label107)
   486 label *label107
-    * sensor *tmp152 .battery @totalPower
+  487 sensor *tmp152 *tmp101 @totalPower
   488 jump *label108 greaterThanEq *tmp152 300
   489 jump *label106 always
   490 label *label108
   491 label *label109
   492 label *label105
-    * read *tmp39 .controller ".monos"
+  493 read *tmp39 *tmp136 ".monos"
   494 jump *label104 lessThan *tmp39 3
   495 label *label106
   496 set .graphiteSurplus 60
 
   507 set :buildBlockFromCfg.10:metaglass 0
   508 set :buildBlockFromCfg.10:rotation 0
   509 set :buildBlockFromCfg.10:config null
-    * setaddr *tmp157 *label114
   510 label *label111
-    * op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
-    * op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.10:block
+  511 op add :buildBlockFromCfg.10:x .coreX 2
+  512 op add :buildBlockFromCfg.10:y .coreY 1
+  513 set :buildBlock:block @unloader
   514 set :buildBlock:x :buildBlockFromCfg.10:x
   515 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper :buildBlockFromCfg.10:copper
-    * set :buildBlock:lead :buildBlockFromCfg.10:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.10:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.10:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.10:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.10:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.10:rotation
-    * set :buildBlock:config :buildBlockFromCfg.10:config
+  516 set :buildBlock:copper 0
+  517 set :buildBlock:lead 0
+  518 set :buildBlock:graphite 0
+  519 set :buildBlock:silicon 30
+  520 set :buildBlock:titanium 25
+  521 set :buildBlock:metaglass 0
+  522 set :buildBlock:rotation 0
+  523 set :buildBlock:config null
   524 setaddr :buildBlock*retaddr *label115 (h:*label115)
   525 call *label26 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   526 label *label115
 
   541 set :buildBlockFromCfg.11:metaglass 0
   542 set :buildBlockFromCfg.11:rotation 0
   543 set :buildBlockFromCfg.11:config null
-    * setaddr *tmp161 *label120
   544 label *label117
-    * op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
-    * op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.11:block
+  545 op add :buildBlockFromCfg.11:x .coreX 2
+  546 op add :buildBlockFromCfg.11:y .coreY 0
+  547 set :buildBlock:block @junction
   548 set :buildBlock:x :buildBlockFromCfg.11:x
   549 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper :buildBlockFromCfg.11:copper
-    * set :buildBlock:lead :buildBlockFromCfg.11:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.11:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.11:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.11:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.11:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.11:rotation
-    * set :buildBlock:config :buildBlockFromCfg.11:config
+  550 set :buildBlock:copper 3
+  551 set :buildBlock:lead 0
+  552 set :buildBlock:graphite 0
+  553 set :buildBlock:silicon 0
+  554 set :buildBlock:titanium 0
+  555 set :buildBlock:metaglass 0
+  556 set :buildBlock:rotation 0
+  557 set :buildBlock:config null
   558 setaddr :buildBlock*retaddr *label121 (h:*label121)
   559 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   560 label *label121
 
   575 set :buildBlockFromCfg.12:metaglass 0
   576 set :buildBlockFromCfg.12:rotation 0
   577 set :buildBlockFromCfg.12:config @metaglass
-    * setaddr *tmp165 *label126
   578 label *label123
-    * op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
-    * op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.12:block
+  579 op add :buildBlockFromCfg.12:x .coreX 3
+  580 op add :buildBlockFromCfg.12:y .coreY 0
+  581 set :buildBlock:block @inverted-sorter
   582 set :buildBlock:x :buildBlockFromCfg.12:x
   583 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper :buildBlockFromCfg.12:copper
-    * set :buildBlock:lead :buildBlockFromCfg.12:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.12:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.12:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.12:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.12:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.12:rotation
-    * set :buildBlock:config :buildBlockFromCfg.12:config
+  584 set :buildBlock:copper 2
+  585 set :buildBlock:lead 2
+  586 set :buildBlock:graphite 0
+  587 set :buildBlock:silicon 0
+  588 set :buildBlock:titanium 0
+  589 set :buildBlock:metaglass 0
+  590 set :buildBlock:rotation 0
+  591 set :buildBlock:config @metaglass
   592 setaddr :buildBlock*retaddr *label127 (h:*label127)
   593 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   594 label *label127
 
   609 set :buildBlockFromCfg.13:metaglass 0
   610 set :buildBlockFromCfg.13:rotation 0
   611 set :buildBlockFromCfg.13:config null
-    * setaddr *tmp169 *label132
   612 label *label129
-    * op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
-    * op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.13:block
+  613 op add :buildBlockFromCfg.13:x .coreX 3.5
+  614 op add :buildBlockFromCfg.13:y .coreY 1.5
+  615 set :buildBlock:block @kiln
   616 set :buildBlock:x :buildBlockFromCfg.13:x
   617 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper :buildBlockFromCfg.13:copper
-    * set :buildBlock:lead :buildBlockFromCfg.13:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.13:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.13:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.13:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.13:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.13:rotation
-    * set :buildBlock:config :buildBlockFromCfg.13:config
+  618 set :buildBlock:copper 60
+  619 set :buildBlock:lead 30
+  620 set :buildBlock:graphite 30
+  621 set :buildBlock:silicon 0
+  622 set :buildBlock:titanium 0
+  623 set :buildBlock:metaglass 0
+  624 set :buildBlock:rotation 0
+  625 set :buildBlock:config null
   626 setaddr :buildBlock*retaddr *label133 (h:*label133)
   627 call *label26 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   628 label *label133
 
   632 multijump *tmp169 0 0 (m:marker13)
   633 multilabel *label132 (m:marker13)
   634 label *label131
-    * set *tmp168 null
   635 label *label128
   636 set .kiln *tmp168
-    * write .kiln .controller ".kiln"
+  637 write *tmp168 *tmp136 ".kiln"
   638 set :buildBlockFromCfg.14:block @water-extractor
   639 set :buildBlockFromCfg.14:offsetX -3.5
   640 set :buildBlockFromCfg.14:offsetY 3.5
 
   646 set :buildBlockFromCfg.14:metaglass 30
   647 set :buildBlockFromCfg.14:rotation 0
   648 set :buildBlockFromCfg.14:config null
-    * setaddr *tmp173 *label138
   649 label *label135
-    * op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
-    * op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.14:block
+  650 op add :buildBlockFromCfg.14:x .coreX -3.5
+  651 op add :buildBlockFromCfg.14:y .coreY 3.5
+  652 set :buildBlock:block @water-extractor
   653 set :buildBlock:x :buildBlockFromCfg.14:x
   654 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper :buildBlockFromCfg.14:copper
-    * set :buildBlock:lead :buildBlockFromCfg.14:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.14:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.14:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.14:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.14:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.14:rotation
-    * set :buildBlock:config :buildBlockFromCfg.14:config
+  655 set :buildBlock:copper 30
+  656 set :buildBlock:lead 30
+  657 set :buildBlock:graphite 30
+  658 set :buildBlock:silicon 0
+  659 set :buildBlock:titanium 0
+  660 set :buildBlock:metaglass 30
+  661 set :buildBlock:rotation 0
+  662 set :buildBlock:config null
   663 setaddr :buildBlock*retaddr *label139 (h:*label139)
   664 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   665 label *label139
 
   680 set :buildBlockFromCfg.15:metaglass 0
   681 set :buildBlockFromCfg.15:rotation 0
   682 set :buildBlockFromCfg.15:config null
-    * setaddr *tmp177 *label144
   683 label *label141
-    * op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
-    * op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.15:block
+  684 op add :buildBlockFromCfg.15:x .coreX -3
+  685 op add :buildBlockFromCfg.15:y .coreY 0
+  686 set :buildBlock:block @overflow-gate
   687 set :buildBlock:x :buildBlockFromCfg.15:x
   688 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper :buildBlockFromCfg.15:copper
-    * set :buildBlock:lead :buildBlockFromCfg.15:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.15:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.15:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.15:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.15:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.15:rotation
-    * set :buildBlock:config :buildBlockFromCfg.15:config
+  689 set :buildBlock:copper 4
+  690 set :buildBlock:lead 2
+  691 set :buildBlock:graphite 0
+  692 set :buildBlock:silicon 0
+  693 set :buildBlock:titanium 0
+  694 set :buildBlock:metaglass 0
+  695 set :buildBlock:rotation 0
+  696 set :buildBlock:config null
   697 setaddr :buildBlock*retaddr *label145 (h:*label145)
   698 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   699 label *label145
 
   714 set :buildBlockFromCfg.16:metaglass 0
   715 set :buildBlockFromCfg.16:rotation 0
   716 set :buildBlockFromCfg.16:config null
-    * setaddr *tmp181 *label150
   717 label *label147
-    * op add :buildBlockFromCfg.16:x .coreX :buildBlockFromCfg.16:offsetX
-    * op add :buildBlockFromCfg.16:y .coreY :buildBlockFromCfg.16:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.16:block
+  718 op add :buildBlockFromCfg.16:x .coreX -3.5
+  719 op add :buildBlockFromCfg.16:y .coreY 1.5
+  720 set :buildBlock:block @steam-generator
   721 set :buildBlock:x :buildBlockFromCfg.16:x
   722 set :buildBlock:y :buildBlockFromCfg.16:y
-    * set :buildBlock:copper :buildBlockFromCfg.16:copper
-    * set :buildBlock:lead :buildBlockFromCfg.16:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.16:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.16:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.16:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.16:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.16:rotation
-    * set :buildBlock:config :buildBlockFromCfg.16:config
+  723 set :buildBlock:copper 35
+  724 set :buildBlock:lead 40
+  725 set :buildBlock:graphite 25
+  726 set :buildBlock:silicon 30
+  727 set :buildBlock:titanium 0
+  728 set :buildBlock:metaglass 0
+  729 set :buildBlock:rotation 0
+  730 set :buildBlock:config null
   731 setaddr :buildBlock*retaddr *label151 (h:*label151)
   732 call *label26 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   733 label *label151
 
   737 multijump *tmp181 0 0 (m:marker16)
   738 multilabel *label150 (m:marker16)
   739 label *label149
-    * set *tmp180 null
   740 label *label146
-    * write *tmp180 .controller ".generator2"
+  741 write *tmp180 *tmp136 ".generator2"
   742 set :buildBlockFromCfg.17:block @payload-router
   743 set :buildBlockFromCfg.17:offsetX -3
   744 set :buildBlockFromCfg.17:offsetY -5
 
   750 set :buildBlockFromCfg.17:metaglass 0
   751 set :buildBlockFromCfg.17:rotation 0
   752 set :buildBlockFromCfg.17:config null
-    * setaddr *tmp185 *label156
   753 label *label153
-    * op add :buildBlockFromCfg.17:x .coreX :buildBlockFromCfg.17:offsetX
-    * op add :buildBlockFromCfg.17:y .coreY :buildBlockFromCfg.17:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.17:block
+  754 op add :buildBlockFromCfg.17:x .coreX -3
+  755 op add :buildBlockFromCfg.17:y .coreY -5
+  756 set :buildBlock:block @payload-router
   757 set :buildBlock:x :buildBlockFromCfg.17:x
   758 set :buildBlock:y :buildBlockFromCfg.17:y
-    * set :buildBlock:copper :buildBlockFromCfg.17:copper
-    * set :buildBlock:lead :buildBlockFromCfg.17:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.17:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.17:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.17:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.17:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.17:rotation
-    * set :buildBlock:config :buildBlockFromCfg.17:config
+  759 set :buildBlock:copper 10
+  760 set :buildBlock:lead 0
+  761 set :buildBlock:graphite 15
+  762 set :buildBlock:silicon 0
+  763 set :buildBlock:titanium 0
+  764 set :buildBlock:metaglass 0
+  765 set :buildBlock:rotation 0
+  766 set :buildBlock:config null
   767 setaddr :buildBlock*retaddr *label157 (h:*label157)
   768 call *label26 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   769 label *label157
 
   773 multijump *tmp185 0 0 (m:marker17)
   774 multilabel *label156 (m:marker17)
   775 label *label155
-    * set *tmp184 null
   776 label *label152
-    * write *tmp184 .controller ".payloadRouter"
+  777 write *tmp184 *tmp136 ".payloadRouter"
   778 set :buildBlockFromCfg.18:block @unloader
   779 set :buildBlockFromCfg.18:offsetX 0
   780 set :buildBlockFromCfg.18:offsetY -2
 
   786 set :buildBlockFromCfg.18:metaglass 0
   787 set :buildBlockFromCfg.18:rotation 0
   788 set :buildBlockFromCfg.18:config null
-    * setaddr *tmp189 *label162
   789 label *label159
-    * op add :buildBlockFromCfg.18:x .coreX :buildBlockFromCfg.18:offsetX
-    * op add :buildBlockFromCfg.18:y .coreY :buildBlockFromCfg.18:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.18:block
+  790 op add :buildBlockFromCfg.18:x .coreX 0
+  791 op add :buildBlockFromCfg.18:y .coreY -2
+  792 set :buildBlock:block @unloader
   793 set :buildBlock:x :buildBlockFromCfg.18:x
   794 set :buildBlock:y :buildBlockFromCfg.18:y
-    * set :buildBlock:copper :buildBlockFromCfg.18:copper
-    * set :buildBlock:lead :buildBlockFromCfg.18:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.18:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.18:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.18:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.18:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.18:rotation
-    * set :buildBlock:config :buildBlockFromCfg.18:config
+  795 set :buildBlock:copper 0
+  796 set :buildBlock:lead 0
+  797 set :buildBlock:graphite 0
+  798 set :buildBlock:silicon 30
+  799 set :buildBlock:titanium 25
+  800 set :buildBlock:metaglass 0
+  801 set :buildBlock:rotation 0
+  802 set :buildBlock:config null
   803 setaddr :buildBlock*retaddr *label163 (h:*label163)
   804 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   805 label *label163
 
   820 set :buildBlockFromCfg.19:metaglass 0
   821 set :buildBlockFromCfg.19:rotation 0
   822 set :buildBlockFromCfg.19:config null
-    * setaddr *tmp193 *label168
   823 label *label165
-    * op add :buildBlockFromCfg.19:x .coreX :buildBlockFromCfg.19:offsetX
-    * op add :buildBlockFromCfg.19:y .coreY :buildBlockFromCfg.19:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.19:block
+  824 op add :buildBlockFromCfg.19:x .coreX 0
+  825 op add :buildBlockFromCfg.19:y .coreY -3
+  826 set :buildBlock:block @underflow-gate
   827 set :buildBlock:x :buildBlockFromCfg.19:x
   828 set :buildBlock:y :buildBlockFromCfg.19:y
-    * set :buildBlock:copper :buildBlockFromCfg.19:copper
-    * set :buildBlock:lead :buildBlockFromCfg.19:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.19:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.19:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.19:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.19:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.19:rotation
-    * set :buildBlock:config :buildBlockFromCfg.19:config
+  829 set :buildBlock:copper 4
+  830 set :buildBlock:lead 2
+  831 set :buildBlock:graphite 0
+  832 set :buildBlock:silicon 0
+  833 set :buildBlock:titanium 0
+  834 set :buildBlock:metaglass 0
+  835 set :buildBlock:rotation 0
+  836 set :buildBlock:config null
   837 setaddr :buildBlock*retaddr *label169 (h:*label169)
   838 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   839 label *label169
 
   854 set :buildBlockFromCfg.20:metaglass 0
   855 set :buildBlockFromCfg.20:rotation 0
   856 set :buildBlockFromCfg.20:config null
-    * setaddr *tmp197 *label174
   857 label *label171
-    * op add :buildBlockFromCfg.20:x .coreX :buildBlockFromCfg.20:offsetX
-    * op add :buildBlockFromCfg.20:y .coreY :buildBlockFromCfg.20:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.20:block
+  858 op add :buildBlockFromCfg.20:x .coreX 0
+  859 op add :buildBlockFromCfg.20:y .coreY -5
+  860 set :buildBlock:block @additive-reconstructor
   861 set :buildBlock:x :buildBlockFromCfg.20:x
   862 set :buildBlock:y :buildBlockFromCfg.20:y
-    * set :buildBlock:copper :buildBlockFromCfg.20:copper
-    * set :buildBlock:lead :buildBlockFromCfg.20:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.20:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.20:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.20:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.20:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.20:rotation
-    * set :buildBlock:config :buildBlockFromCfg.20:config
+  863 set :buildBlock:copper 200
+  864 set :buildBlock:lead 120
+  865 set :buildBlock:graphite 0
+  866 set :buildBlock:silicon 90
+  867 set :buildBlock:titanium 0
+  868 set :buildBlock:metaglass 0
+  869 set :buildBlock:rotation 0
+  870 set :buildBlock:config null
   871 setaddr :buildBlock*retaddr *label175 (h:*label175)
   872 call *label26 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   873 label *label175
 
   877 multijump *tmp197 0 0 (m:marker20)
   878 multilabel *label174 (m:marker20)
   879 label *label173
-    * set *tmp196 null
   880 label *label170
   881 set :reconstructor *tmp196
-    * write :reconstructor .controller ".reconstructor"
-    * write :reconstructor .display ".reconstructor"
+  882 write *tmp196 *tmp136 ".reconstructor"
+  883 write *tmp196 processor1 ".reconstructor"
   884 set .graphiteSurplus 200
   885 set .siliconSurplus 1000
   886 set .metaglassSurplus 200
-    * write 4 .controller ".polyTarget"
+  887 write 4 *tmp136 ".polyTarget"
   888 label *label176
-    * read *tmp40 .controller ".polys"
+  889 read *tmp40 *tmp136 ".polys"
   890 jump *label178 greaterThanEq *tmp40 4
   891 setaddr :supplyBase*retaddr *label179 (h:*label179)
   892 call *label20 *invalid :supplyBase*retval (m:*label179) (h:*label179)
 
   895 jump *label176 always
   896 label *label178
   897 label *label180
-    * read *tmp38 .controller ".flares"
+  898 read *tmp38 *tmp136 ".flares"
   899 jump *label182 greaterThanEq *tmp38 1
   900 setaddr :supplyBase*retaddr *label183 (h:*label183)
   901 call *label20 *invalid :supplyBase*retval (m:*label183) (h:*label183)
 
   905 label *label182
   906 set :findFreeUnit:unit_type @flare
   907 set :findFreeUnit:initial_flag 0
-    * ubind :findFreeUnit:unit_type
+  908 ubind @flare
   909 jump *label185 notEqual @unit null
   910 jump *label184 always
   911 label *label185
 
   914 label *label187
   915 sensor *tmp205 @unit @controlled
   916 jump *label190 notEqual *tmp205 0
-    * ucontrol flag :findFreeUnit:initial_flag
+  917 ucontrol flag 0
   918 jump *label184 always
   919 jump *label191 always
   920 label *label190
 
   924 label *label192
   925 label *label193
   926 label *label191
-    * ubind :findFreeUnit:unit_type
+  927 ubind @flare
   928 label *label188
   929 jump *label187 notEqual :findFreeUnit:first_unit @unit
   930 label *label189
   931 label *label184
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  932 write .coreX processor4 ":layoutThoriumDrill:x"
+  933 write .coreY processor4 ":layoutThoriumDrill:y"
+  934 write @unit processor4 ":layoutThoriumDrill:unit"
+  935 write 7 processor4 ":layoutThoriumDrill:limit"
+  936 write false processor4 ":layoutThoriumDrill*finished"
+  937 write 2 processor4 "@counter"
   938 ubind .builder
   939 label *label194
   940 setaddr :supplyBase*retaddr *label197 (h:*label197)
   941 call *label20 *invalid :supplyBase*retval (m:*label197) (h:*label197)
   942 label *label197
   943 label *label195
-    * read *tmp217 .oreLocator ":layoutThoriumDrill*finished"
+  944 read *tmp217 processor4 ":layoutThoriumDrill*finished"
   945 jump *label194 equal *tmp217 false
   946 label *label196
   947 set :meetTarget:block @laser-drill
 
   957 label *label199
   958 label *label201
   959 wait 1e-15
-    * read *tmp219 .oreLocator ":layoutThoriumDrill*finished"
+  960 read *tmp219 processor4 ":layoutThoriumDrill*finished"
   961 jump *label201 equal *tmp219 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  962 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   963 jump *label202 notEqual :buildThoriumDrill:result false
   964 set :error.1:error "Cannot locate spot for thorium drill"
-    * set .ERROR :error.1:error
+  965 set .ERROR "Cannot locate spot for thorium drill"
   966 stop
   967 label *label204
   968 label *label202
   969 label *label203
   970 set :buildBlockAt:block @laser-drill
-    * read :buildBlockAt:x .oreLocator ".drillX"
-    * read :buildBlockAt:y .oreLocator ".drillY"
+  971 read :buildBlockAt:x processor4 ".drillX"
+  972 read :buildBlockAt:y processor4 ".drillY"
   973 set :buildBlockAt:rotation null
   974 set :buildBlockAt:config 0
   975 set :buildBlockAt:skipError false
 
   977 call *label25 *invalid :buildBlockAt*retval (m:*label205) (h:*label205)
   978 label *label205
   979 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
-    * read *tmp74 .oreLocator ".water1X"
+  980 read *tmp74 processor4 ".water1X"
   981 jump *label206 greaterThanEq *tmp74 0
   982 jump *label198 always
   983 label *label206
 
   994 label *label209
   995 label *label208
   996 set :buildBlockAt:block @water-extractor
-    * read *tmp74 .oreLocator ".water1X"
+  997 read *tmp74 processor4 ".water1X"
   998 set :buildBlockAt:x *tmp74
-    * read :buildBlockAt:y .oreLocator ".water1Y"
+  999 read :buildBlockAt:y processor4 ".water1Y"
  1000 set :buildBlockAt:rotation null
  1001 set :buildBlockAt:config 0
  1002 set :buildBlockAt:skipError false
  1003 setaddr :buildBlockAt*retaddr *label210 (h:*label210)
  1004 call *label25 *invalid :buildBlockAt*retval (m:*label210) (h:*label210)
  1005 label *label210
-    * read *tmp76 .oreLocator ".water2X"
+ 1006 read *tmp76 processor4 ".water2X"
  1007 jump *label211 greaterThanEq *tmp76 0
  1008 jump *label198 always
  1009 label *label211
 
  1020 label *label214
  1021 label *label213
  1022 set :buildBlockAt:block @water-extractor
-    * read *tmp76 .oreLocator ".water2X"
+ 1023 read *tmp76 processor4 ".water2X"
  1024 set :buildBlockAt:x *tmp76
-    * read :buildBlockAt:y .oreLocator ".water2Y"
+ 1025 read :buildBlockAt:y processor4 ".water2Y"
  1026 set :buildBlockAt:rotation null
  1027 set :buildBlockAt:config 0
  1028 set :buildBlockAt:skipError false
 
  1041 label *label217
  1042 label *label216
  1043 set :buildBlockAt:block @steam-generator
-    * read :buildBlockAt:x .oreLocator ".generatorX"
-    * read :buildBlockAt:y .oreLocator ".generatorY"
+ 1044 read :buildBlockAt:x processor4 ".generatorX"
+ 1045 read :buildBlockAt:y processor4 ".generatorY"
  1046 set :buildBlockAt:rotation null
  1047 set :buildBlockAt:config 0
  1048 set :buildBlockAt:skipError false
 
  1062 label *label220
  1063 label *label219
  1064 set :buildBlockAt:block @power-node
-    * read :buildBlockAt:x .oreLocator ".nodeX"
-    * read :buildBlockAt:y .oreLocator ".nodeY"
+ 1065 read :buildBlockAt:x processor4 ".nodeX"
+ 1066 read :buildBlockAt:y processor4 ".nodeY"
  1067 set :buildBlockAt:rotation null
  1068 set :buildBlockAt:config 0
  1069 set :buildBlockAt:skipError false
 
  1082 label *label223
  1083 label *label222
  1084 set :buildBlockAt:block @solar-panel
-    * read :buildBlockAt:x .oreLocator ".panelX"
-    * read :buildBlockAt:y .oreLocator ".panelY"
+ 1085 read :buildBlockAt:x processor4 ".panelX"
+ 1086 read :buildBlockAt:y processor4 ".panelY"
  1087 set :buildBlockAt:rotation null
  1088 set :buildBlockAt:config 0
  1089 set :buildBlockAt:skipError false
 
  1102 label *label226
  1103 label *label225
  1104 set :buildBlockAt:block @battery
-    * read :buildBlockAt:x .oreLocator ".batteryX"
-    * read :buildBlockAt:y .oreLocator ".batteryY"
+ 1105 read :buildBlockAt:x processor4 ".batteryX"
+ 1106 read :buildBlockAt:y processor4 ".batteryY"
  1107 set :buildBlockAt:rotation null
  1108 set :buildBlockAt:config 0
  1109 set :buildBlockAt:skipError false
  1110 setaddr :buildBlockAt*retaddr *label227 (h:*label227)
  1111 call *label25 *invalid :buildBlockAt*retval (m:*label227) (h:*label227)
  1112 label *label227
-    * write :buildThoriumDrill:thoriumDrill .display ".thoriumDrill"
-    * write :buildThoriumDrill:thoriumDrill .flareController ":addThoriumDrill:drill"
-    * write :buildThoriumDrill:thoriumGenerator .flareController ":addThoriumDrill:generator"
-    * write false .flareController ":addThoriumDrill*finished"
-    * write 1 .flareController "@counter"
+ 1113 write :buildThoriumDrill:thoriumDrill processor1 ".thoriumDrill"
+ 1114 write :buildThoriumDrill:thoriumDrill processor3 ":addThoriumDrill:drill"
+ 1115 write :buildThoriumDrill:thoriumGenerator processor3 ":addThoriumDrill:generator"
+ 1116 write false processor3 ":addThoriumDrill*finished"
+ 1117 write 1 processor3 "@counter"
  1118 label *label228
  1119 wait 1e-15
-    * read *tmp236 .flareController ":addThoriumDrill*finished"
+ 1120 read *tmp236 processor3 ":addThoriumDrill*finished"
  1121 jump *label228 equal *tmp236 false
  1122 label *label198
-    * write 0 .display ".totalTargets"
-    * write null .display ".nextBlock"
+ 1123 write 0 processor1 ".totalTargets"
+ 1124 write null processor1 ".nextBlock"
  1125 label *label229
  1126 setaddr :supplyBase*retaddr *label232 (h:*label232)
  1127 call *label20 *invalid :supplyBase*retval (m:*label232) (h:*label232)
  1128 label *label232
  1129 label *label230
-    * read *tmp38 .controller ".flares"
-    * read *tmp39 .controller ".monos"
+ 1130 read *tmp38 *tmp136 ".flares"
+ 1131 read *tmp39 *tmp136 ".monos"
  1132 op add *tmp237 *tmp38 *tmp39
  1133 jump *label229 lessThan *tmp237 16
  1134 label *label231
 
  1140 jump *label233 always
  1141 label *label235
  1142 ucontrol stop
-    * set :error.2:error "Done"
-    * set .ERROR :error.2:error
+ 1143 set .ERROR "Done"
  1144 stop
  1145 label *label237
  1146 end
  1147 label *label5
  1148 set :status3:text "Moving..."
-    * write :status3:text .display ".status3"
+ 1149 write "Moving..." .display ".status3"
  1150 label *label240
  1151 label *label241
  1152 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239
 
  1162 label *label6
  1163 set *tmp242 :moveTo.1:x
  1164 set *tmp243 :moveTo.1:y
-    * set :moveTo:x *tmp242
-    * set :moveTo:y *tmp243
+ 1165 set :moveTo:x :moveTo.1:x
+ 1166 set :moveTo:y :moveTo.1:y
  1167 set :moveTo:radius 6
  1168 setaddr :moveTo*retaddr *label245 (h:*label245)
  1169 call *label5 *invalid :moveTo*retval (m:*label245) (h:*label245)
 
  1173 end
  1174 label *label7
  1175 set :status3.1:text "Moving..."
-    * write :status3.1:text .display ".status3"
+ 1176 write "Moving..." .display ".status3"
  1177 label *label247
  1178 label *label248
  1179 sensor *tmp244 @unit @firstItem
 
  1203 end
  1204 label *label9
  1205 set :status3.2:text "Depositing..."
-    * write :status3.2:text .display ".status3"
+ 1206 write "Depositing..." .display ".status3"
  1207 label *label256
  1208 sensor *tmp251 @unit @firstItem
  1209 jump *label257 notEqual *tmp251 :depositItems:item
 
  1233 label *label258
  1234 set :transportStatus:target 0
  1235 set :transportStatus:item null
-    * write :transportStatus:target .display ".transportTarget"
-    * write :transportStatus:item .display ".transportItem"
+ 1236 write 0 .display ".transportTarget"
+ 1237 write null .display ".transportItem"
  1238 label *label266
  1239 label *label255
  1240 return :depositItems*retaddr
 
  1243 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp261 0
  1244 jump *label268 notEqual *tmp261 false
  1245 set :error.3:error "Cannot locate ore"
-    * set .ERROR :error.3:error
+ 1246 set .ERROR "Cannot locate ore"
  1247 stop
  1248 label *label270
  1249 label *label268
 
  1255 op min :mineOre:amount :mineOre:amount 30
  1256 set :transportStatus.1:target :mineOre:amount
  1257 set :transportStatus.1:item :mineOre:ore
-    * write :transportStatus.1:target .display ".transportTarget"
-    * write :transportStatus.1:item .display ".transportItem"
+ 1258 write :mineOre:amount .display ".transportTarget"
+ 1259 write :mineOre:ore .display ".transportItem"
  1260 label *label272
  1261 set :locateOre:ore :mineOre:ore
  1262 setaddr :locateOre*retaddr *label273 (h:*label273)
 
  1264 label *label273
  1265 set :mineOre:x :locateOre:x
  1266 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+ 1267 set :moveToEmpty:x :locateOre:x
+ 1268 set :moveToEmpty:y :locateOre:y
  1269 setaddr :moveToEmpty*retaddr *label274 (h:*label274)
  1270 call *label7 *invalid :moveToEmpty*retval (m:*label274) (h:*label274)
  1271 label *label274
 
  1282 label *label275
  1283 label *label276
  1284 set :status3.3:text "Mining..."
-    * write :status3.3:text .display ".status3"
+ 1285 write "Mining..." .display ".status3"
  1286 label *label281
  1287 op add :mineOre:stop @second 10
  1288 label *label282
 
  1316 set :status2:text "Mining "
  1317 set :status2:item :mineOre.1:ore
  1318 set :status2:block "core"
-    * write :status2:text .display ".status2"
-    * write :status2:item .display ".item2"
-    * write :status2:block .display ".block2"
+ 1319 write "Mining " .display ".status2"
+ 1320 write :mineOre.1:ore .display ".item2"
+ 1321 write "core" .display ".block2"
  1322 label *label291
  1323 set :mineOre:ore :mineOre.1:ore
  1324 set :mineOre:amount 30
 
  1333 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
  1334 set :transportStatus.2:item :fetchBlock:item
  1335 write :transportStatus.2:target .display ".transportTarget"
-    * write :transportStatus.2:item .display ".transportItem"
+ 1336 write :fetchBlock:item .display ".transportItem"
  1337 label *label294
  1338 set :status2.1:text "Fetching "
  1339 set :status2.1:item :fetchBlock:item
  1340 set :status2.1:block :fetchBlock:block
-    * write :status2.1:text .display ".status2"
-    * write :status2.1:item .display ".item2"
-    * write :status2.1:block .display ".block2"
+ 1341 write "Fetching " .display ".status2"
+ 1342 write :fetchBlock:item .display ".item2"
+ 1343 write :fetchBlock:block .display ".block2"
  1344 label *label295
  1345 sensor *tmp283 :fetchBlock:block @x
  1346 sensor *tmp284 :fetchBlock:block @y
 
  1390 sensor *tmp301 .press @coal
  1391 jump *label312 greaterThanEq *tmp301 5
  1392 set :status1:text "Goal 1: graphite requirement"
-    * write :status1:text .display ".status1"
+ 1393 write "Goal 1: graphite requirement" .display ".status1"
  1394 label *label314
  1395 set :supplyBlock:block .press
  1396 set :supplyBlock:ore @coal
  1397 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock:ore
-    * set :status2.2:block :supplyBlock:block
-    * write :status2.2:text .display ".status2"
-    * write :status2.2:item .display ".item2"
-    * write :status2.2:block .display ".block2"
+ 1398 set :status2.2:item @coal
+ 1399 set :status2.2:block .press
+ 1400 write "Supplying " .display ".status2"
+ 1401 write :supplyBlock:ore .display ".item2"
+ 1402 write :supplyBlock:block .display ".block2"
  1403 label *label316
-    * sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
-    * sensor *tmp305 :supplyBlock:block :supplyBlock:ore
+ 1404 sensor :supplyBlock:blockCapacity .press @itemCapacity
+ 1405 sensor *tmp305 .press @coal
  1406 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp305
  1407 jump *label317 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+ 1408 set :mineOre:ore @coal
  1409 set :mineOre:amount :supplyBlock:blockCapacity
-    * set :mineOre:block :supplyBlock:block
+ 1410 set :mineOre:block .press
  1411 setaddr :mineOre*retaddr *label319 (h:*label319)
  1412 call *label11 *invalid :mineOre*retval (m:*label319) (h:*label319)
  1413 label *label319
 
  1424 sensor *tmp312 .smelter @coal
  1425 jump *label322 greaterThanEq *tmp312 5
  1426 set :status1.1:text "Goal 2: coal for silicon requirement"
-    * write :status1.1:text .display ".status1"
+ 1427 write "Goal 2: coal for silicon requirement" .display ".status1"
  1428 label *label324
  1429 set :supplyBlock.1:block .smelter
  1430 set :supplyBlock.1:ore @coal
  1431 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.1:ore
-    * set :status2.3:block :supplyBlock.1:block
-    * write :status2.3:text .display ".status2"
-    * write :status2.3:item .display ".item2"
-    * write :status2.3:block .display ".block2"
+ 1432 set :status2.3:item @coal
+ 1433 set :status2.3:block .smelter
+ 1434 write "Supplying " .display ".status2"
+ 1435 write :supplyBlock.1:ore .display ".item2"
+ 1436 write :supplyBlock.1:block .display ".block2"
  1437 label *label326
-    * sensor :supplyBlock.1:blockCapacity :supplyBlock.1:block @itemCapacity
-    * sensor *tmp316 :supplyBlock.1:block :supplyBlock.1:ore
+ 1438 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
+ 1439 sensor *tmp316 .smelter @coal
  1440 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp316
  1441 jump *label327 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+ 1442 set :mineOre:ore @coal
  1443 set :mineOre:amount :supplyBlock.1:blockCapacity
-    * set :mineOre:block :supplyBlock.1:block
+ 1444 set :mineOre:block .smelter
  1445 setaddr :mineOre*retaddr *label329 (h:*label329)
  1446 call *label11 *invalid :mineOre*retval (m:*label329) (h:*label329)
  1447 label *label329
 
  1454 sensor *tmp320 .smelter @sand
  1455 jump *label330 greaterThanEq *tmp320 5
  1456 set :status1.2:text "Goal 3: sand for silicon requirement"
-    * write :status1.2:text .display ".status1"
+ 1457 write "Goal 3: sand for silicon requirement" .display ".status1"
  1458 label *label332
  1459 set :supplyBlock.2:block .smelter
  1460 set :supplyBlock.2:ore @sand
  1461 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.2:ore
-    * set :status2.4:block :supplyBlock.2:block
-    * write :status2.4:text .display ".status2"
-    * write :status2.4:item .display ".item2"
-    * write :status2.4:block .display ".block2"
+ 1462 set :status2.4:item @sand
+ 1463 set :status2.4:block .smelter
+ 1464 write "Supplying " .display ".status2"
+ 1465 write :supplyBlock.2:ore .display ".item2"
+ 1466 write :supplyBlock.2:block .display ".block2"
  1467 label *label334
-    * sensor :supplyBlock.2:blockCapacity :supplyBlock.2:block @itemCapacity
-    * sensor *tmp324 :supplyBlock.2:block :supplyBlock.2:ore
+ 1468 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
+ 1469 sensor *tmp324 .smelter @sand
  1470 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp324
  1471 jump *label335 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+ 1472 set :mineOre:ore @sand
  1473 set :mineOre:amount :supplyBlock.2:blockCapacity
-    * set :mineOre:block :supplyBlock.2:block
+ 1474 set :mineOre:block .smelter
  1475 setaddr :mineOre*retaddr *label337 (h:*label337)
  1476 call *label11 *invalid :mineOre*retval (m:*label337) (h:*label337)
  1477 label *label337
 
  1489 sensor *tmp331 .generator @coal
  1490 jump *label340 greaterThanEq *tmp331 2
  1491 set :status1.3:text "Goal 4: supplying generator"
-    * write :status1.3:text .display ".status1"
+ 1492 write "Goal 4: supplying generator" .display ".status1"
  1493 label *label342
  1494 set :supplyBlock.3:block .generator
  1495 set :supplyBlock.3:ore @coal
  1496 set :status2.5:text "Supplying "
-    * set :status2.5:item :supplyBlock.3:ore
-    * set :status2.5:block :supplyBlock.3:block
-    * write :status2.5:text .display ".status2"
-    * write :status2.5:item .display ".item2"
-    * write :status2.5:block .display ".block2"
+ 1497 set :status2.5:item @coal
+ 1498 set :status2.5:block .generator
+ 1499 write "Supplying " .display ".status2"
+ 1500 write :supplyBlock.3:ore .display ".item2"
+ 1501 write :supplyBlock.3:block .display ".block2"
  1502 label *label344
-    * sensor :supplyBlock.3:blockCapacity :supplyBlock.3:block @itemCapacity
-    * sensor *tmp335 :supplyBlock.3:block :supplyBlock.3:ore
+ 1503 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
+ 1504 sensor *tmp335 .generator @coal
  1505 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp335
  1506 jump *label345 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+ 1507 set :mineOre:ore @coal
  1508 set :mineOre:amount :supplyBlock.3:blockCapacity
-    * set :mineOre:block :supplyBlock.3:block
+ 1509 set :mineOre:block .generator
  1510 setaddr :mineOre*retaddr *label347 (h:*label347)
  1511 call *label11 *invalid :mineOre*retval (m:*label347) (h:*label347)
  1512 label *label347
 
  1531 label *label349
  1532 set :supplyBase0:titaniumTrigger *tmp341
  1533 sensor *tmp345 .titaniumDrill @titanium
-    * jump *label350 greaterThanEq *tmp345 :supplyBase0:titaniumTrigger
+ 1534 jump *label350 greaterThanEq *tmp345 *tmp341
  1535 jump *label352 notEqual :supplyBase0:supplied false
  1536 sensor *tmp350 .battery @totalPower
  1537 op mul *tmp351 .unloader1 .powerTarget
  1538 jump *label354 greaterThanEq *tmp350 *tmp351
  1539 set :status1.4:text "Goal 5: supplying generator"
-    * write :status1.4:text .display ".status1"
+ 1540 write "Goal 5: supplying generator" .display ".status1"
  1541 label *label356
  1542 set :mineOre.1:ore @coal
  1543 setaddr :mineOre.1*retaddr *label357 (h:*label357)
 
  1548 sensor *tmp354 .core @silicon
  1549 jump *label358 greaterThanEq *tmp354 .targetSilicon
  1550 set :status1.5:text "Goal 6: silicon requirement"
-    * write :status1.5:text .display ".status1"
+ 1551 write "Goal 6: silicon requirement" .display ".status1"
  1552 label *label360
  1553 sensor :supplyBase0:coal .core @coal
  1554 sensor :supplyBase0:sand .core @sand
 
  1559 set *tmp360 @sand
  1560 label *label362
  1561 set :supplyBase0:ore *tmp360
-    * set :mineOre.1:ore :supplyBase0:ore
+ 1562 set :mineOre.1:ore *tmp360
  1563 setaddr :mineOre.1*retaddr *label363 (h:*label363)
  1564 call *label12 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
  1565 label *label363
 
  1568 sensor *tmp361 .core @copper
  1569 jump *label364 greaterThanEq *tmp361 .targetCopper
  1570 set :status1.6:text "Goal 7: copper requirement"
-    * write :status1.6:text .display ".status1"
+ 1571 write "Goal 7: copper requirement" .display ".status1"
  1572 label *label366
  1573 set :mineOre.1:ore @copper
  1574 setaddr :mineOre.1*retaddr *label367 (h:*label367)
 
  1580 op add *tmp365 .targetLead 20
  1581 jump *label368 greaterThanEq *tmp364 *tmp365
  1582 set :status1.7:text "Goal 8: lead requirement"
-    * write :status1.7:text .display ".status1"
+ 1583 write "Goal 8: lead requirement" .display ".status1"
  1584 label *label370
  1585 set :mineOre.1:ore @lead
  1586 setaddr :mineOre.1*retaddr *label371 (h:*label371)
 
  1591 sensor *tmp368 .core @metaglass
  1592 jump *label372 greaterThanEq *tmp368 .targetMetaglass
  1593 set :status1.8:text "Goal 9: metaglass requirement"
-    * write :status1.8:text .display ".status1"
+ 1594 write "Goal 9: metaglass requirement" .display ".status1"
  1595 label *label374
  1596 set :mineOre.1:ore @sand
  1597 setaddr :mineOre.1*retaddr *label375 (h:*label375)
 
  1600 jump *label373 always
  1601 label *label372
  1602 set :status1.9:text "Goal 10: supplying base"
-    * write :status1.9:text .display ".status1"
+ 1603 write "Goal 10: supplying base" .display ".status1"
  1604 label *label376
  1605 sensor :supplyBase0:coal.1 .core @coal
  1606 sensor :supplyBase0:sand.1 .core @sand
 
  1611 set *tmp374 @sand
  1612 label *label378
  1613 set :supplyBase0:ore.1 *tmp374
-    * set :mineOre.1:ore :supplyBase0:ore.1
+ 1614 set :mineOre.1:ore *tmp374
  1615 setaddr :mineOre.1*retaddr *label379 (h:*label379)
  1616 call *label12 *invalid :mineOre.1*retval (m:*label379) (h:*label379)
  1617 label *label379
 
  1625 jump *label351 always
  1626 label *label350
  1627 set :status1.10:text "Goal 11: Fetching titanium"
-    * write :status1.10:text .display ".status1"
+ 1628 write "Goal 11: Fetching titanium" .display ".status1"
  1629 label *label380
  1630 set :fetchBlock:block .titaniumDrill
  1631 set :fetchBlock:item @titanium
 
  1638 end
  1639 label *label19
  1640 set :status1.11:text "Phase 1: supplying base"
-    * write :status1.11:text .display ".status1"
+ 1641 write "Phase 1: supplying base" .display ".status1"
  1642 label *label383
  1643 set :mineOre.1:ore @coal
  1644 setaddr :mineOre.1*retaddr *label384 (h:*label384)
 
  1691 label *label392
  1692 set :targetMet*retval false
  1693 jump *label390 always
-    * set :targetMet*retval null
  1694 label *label390
  1695 return :targetMet*retaddr
  1696 end
 
  1747 op add *tmp401 :meetTarget:metaglass .metaglassSurplus
  1748 write *tmp401 .controller ".kilnTarget"
  1749 op add *tmp402 :meetTarget:lead .leadSurplus
-    * write *tmp402 .controller ".leadReserve"
+ 1750 write *tmp397 .controller ".leadReserve"
  1751 op sign *tmp403 :meetTarget:silicon
  1752 op mul *tmp404 *tmp403 20
  1753 op add *tmp405 :meetTarget:silicon *tmp404
 
  1774 op mul :second:result @second TIME_COMPRESS
  1775 set *tmp410 :second:result
  1776 label *label419
-    * op floor *tmp411 *tmp410
+ 1777 op floor *tmp411 :second:result
  1778 op mul *tmp412 *tmp411 1000
  1779 op add *tmp413 :log:encodedId *tmp412
-    * write *tmp413 bank1 *tmp408
+ 1780 write *tmp413 bank1 *tmp407
  1781 label *label418
  1782 return :log*retaddr
  1783 end
 
  1796 call *label6 *invalid :moveTo.1*retval (m:*label423) (h:*label423)
  1797 label *label423
  1798 set :status3.4:text "Building..."
-    * write :status3.4:text .display ".status3"
+ 1799 write "Building..." .display ".status3"
  1800 label *label424
  1801 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1802 jump *label425 equal :buildBlockAt:building null
 
  1811 label *label429
  1812 label *label430
  1813 set :error.4:error "Cannot build at ("
-    * set .ERROR :error.4:error
+ 1814 set .ERROR "Cannot build at ("
  1815 stop
  1816 label *label431
  1817 label *label425
 
  1834 label *label437
  1835 set :buildBlockAt*retval :buildBlockAt:building
  1836 jump *label422 always
-    * set :buildBlockAt*retval null
  1837 label *label422
  1838 return :buildBlockAt*retaddr
  1839 end
 
  1859 label *label440
  1860 set :buildBlock*retval :buildBlockAt*retval
  1861 jump *label438 always
-    * set :buildBlock*retval null
  1862 label *label438
  1863 return :buildBlock*retaddr
  1864 end

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-299 instructions):
 
    18 jump *label28 equal .core null
    19 label *label30
    20 set .display processor1
-    * set .flareController processor3
-    * set .oreLocator processor4
    21 set :findUnits:type @flare
    22 setaddr :findUnits*retaddr *label31 (h:*label31)
    23 call *label27 *invalid :findUnits*retval (m:*label31) (h:*label31)
 
    36 label *label33
    37 write :findUnits:count processor1 ".displayPolys"
    38 set :polys :findUnits*retval
-    * set :buildBlockFromCfg:block @graphite-press
-    * set :buildBlockFromCfg:offsetX -1.5
-    * set :buildBlockFromCfg:offsetY 2.5
-    * set :buildBlockFromCfg:copper 75
-    * set :buildBlockFromCfg:lead 30
-    * set :buildBlockFromCfg:graphite 0
-    * set :buildBlockFromCfg:silicon 0
-    * set :buildBlockFromCfg:titanium 0
-    * set :buildBlockFromCfg:metaglass 0
-    * set :buildBlockFromCfg:rotation 0
-    * set :buildBlockFromCfg:config null
    39 label *label35
    40 op add :buildBlockFromCfg:x .coreX -1.5
    41 op add :buildBlockFromCfg:y .coreY 2.5
 
    61 label *label37
    62 label *label34
    63 set .press *tmp97
-    * set :buildBlockFromCfg.1:block @battery
-    * set :buildBlockFromCfg.1:offsetX 0
-    * set :buildBlockFromCfg.1:offsetY 4
-    * set :buildBlockFromCfg.1:copper 5
-    * set :buildBlockFromCfg.1:lead 20
-    * set :buildBlockFromCfg.1:graphite 0
-    * set :buildBlockFromCfg.1:silicon 0
-    * set :buildBlockFromCfg.1:titanium 0
-    * set :buildBlockFromCfg.1:metaglass 0
-    * set :buildBlockFromCfg.1:rotation 0
-    * set :buildBlockFromCfg.1:config null
    64 label *label41
    65 op add :buildBlockFromCfg.1:x .coreX 0
    66 op add :buildBlockFromCfg.1:y .coreY 4
 
    86 label *label43
    87 label *label40
    88 set .battery *tmp101
-    * set :buildBlockFromCfg.2:block @battery
-    * set :buildBlockFromCfg.2:offsetX -1
-    * set :buildBlockFromCfg.2:offsetY 4
-    * set :buildBlockFromCfg.2:copper 5
-    * set :buildBlockFromCfg.2:lead 20
-    * set :buildBlockFromCfg.2:graphite 0
-    * set :buildBlockFromCfg.2:silicon 0
-    * set :buildBlockFromCfg.2:titanium 0
-    * set :buildBlockFromCfg.2:metaglass 0
-    * set :buildBlockFromCfg.2:rotation 0
-    * set :buildBlockFromCfg.2:config null
    89 label *label47
    90 op add :buildBlockFromCfg.2:x .coreX -1
    91 op add :buildBlockFromCfg.2:y .coreY 4
-    * set :buildBlock:block @battery
    92 set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper 5
+   93 set :buildBlock:y :buildBlockFromCfg.1:y
    94 set :buildBlock:lead 20
    95 set :buildBlock:graphite 0
    96 set :buildBlock:silicon 0
 
   107 multilabel *label50 (m:marker2)
   108 label *label49
   109 label *label46
-    * set :buildBlockFromCfg.3:block @combustion-generator
-    * set :buildBlockFromCfg.3:offsetX 0
-    * set :buildBlockFromCfg.3:offsetY 3
-    * set :buildBlockFromCfg.3:copper 25
-    * set :buildBlockFromCfg.3:lead 15
-    * set :buildBlockFromCfg.3:graphite 0
-    * set :buildBlockFromCfg.3:silicon 0
-    * set :buildBlockFromCfg.3:titanium 0
-    * set :buildBlockFromCfg.3:metaglass 0
-    * set :buildBlockFromCfg.3:rotation 0
-    * set :buildBlockFromCfg.3:config null
   110 label *label53
   111 op add :buildBlockFromCfg.3:x .coreX 0
   112 op add :buildBlockFromCfg.3:y .coreY 3
   113 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.3:x
+  114 set :buildBlock:x :buildBlockFromCfg.1:x
   115 set :buildBlock:y :buildBlockFromCfg.3:y
   116 set :buildBlock:copper 25
   117 set :buildBlock:lead 15
 
   133 label *label52
   134 set .generator *tmp109
   135 set .powerTarget 400
-    * set :buildBlockFromCfg.4:block @silicon-smelter
-    * set :buildBlockFromCfg.4:offsetX 1.5
-    * set :buildBlockFromCfg.4:offsetY 2.5
-    * set :buildBlockFromCfg.4:copper 30
-    * set :buildBlockFromCfg.4:lead 25
-    * set :buildBlockFromCfg.4:graphite 0
-    * set :buildBlockFromCfg.4:silicon 0
-    * set :buildBlockFromCfg.4:titanium 0
-    * set :buildBlockFromCfg.4:metaglass 0
-    * set :buildBlockFromCfg.4:rotation 0
-    * set :buildBlockFromCfg.4:config null
   136 label *label59
   137 op add :buildBlockFromCfg.4:x .coreX 1.5
   138 op add :buildBlockFromCfg.4:y .coreY 2.5
   139 set :buildBlock:block @silicon-smelter
   140 set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg.4:y
+  141 set :buildBlock:y :buildBlockFromCfg:y
   142 set :buildBlock:copper 30
   143 set :buildBlock:lead 25
   144 set :buildBlock:graphite 0
 
   187 read :buildTitaniumDrill:dy processor4 ":findDrillLocation:dy"
   188 read :buildTitaniumDrill:result processor4 ":findDrillLocation*retval"
   189 jump *label68 notEqual :buildTitaniumDrill:result false
-    * set :error:error "Cannot locate spot for titanium drill"
   190 set .ERROR "Cannot locate spot for titanium drill"
   191 stop
   192 label *label70
 
   206 jump *label64 always
   207 label *label64
   208 set .titaniumDrill :buildBlockAt*retval
-    * write *tmp117 processor1 ".titaniumDrill"
-    * set :buildBlockFromCfg.5:block @unloader
-    * set :buildBlockFromCfg.5:offsetX 0
-    * set :buildBlockFromCfg.5:offsetY 2
-    * set :buildBlockFromCfg.5:copper 0
-    * set :buildBlockFromCfg.5:lead 0
-    * set :buildBlockFromCfg.5:graphite 0
-    * set :buildBlockFromCfg.5:silicon 30
-    * set :buildBlockFromCfg.5:titanium 25
-    * set :buildBlockFromCfg.5:metaglass 0
-    * set :buildBlockFromCfg.5:rotation 0
-    * set :buildBlockFromCfg.5:config null
+  209 write :buildBlockAt*retval processor1 ".titaniumDrill"
   210 label *label73
   211 op add :buildBlockFromCfg.5:x .coreX 0
   212 op add :buildBlockFromCfg.5:y .coreY 2
   213 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.5:x
+  214 set :buildBlock:x :buildBlockFromCfg.1:x
   215 set :buildBlock:y :buildBlockFromCfg.5:y
   216 set :buildBlock:copper 0
   217 set :buildBlock:lead 0
 
   232 label *label75
   233 label *label72
   234 set .unloader1 *tmp132
-    * set :buildBlockFromCfg.6:block @micro-processor
-    * set :buildBlockFromCfg.6:offsetX 1
-    * set :buildBlockFromCfg.6:offsetY 4
-    * set :buildBlockFromCfg.6:copper 90
-    * set :buildBlockFromCfg.6:lead 50
-    * set :buildBlockFromCfg.6:graphite 0
-    * set :buildBlockFromCfg.6:silicon 50
-    * set :buildBlockFromCfg.6:titanium 0
-    * set :buildBlockFromCfg.6:metaglass 0
-    * set :buildBlockFromCfg.6:rotation 0
-    * set :buildBlockFromCfg.6:config processor2
   235 label *label79
   236 op add :buildBlockFromCfg.6:x .coreX 1
   237 op add :buildBlockFromCfg.6:y .coreY 4
   238 set :buildBlock:block @micro-processor
   239 set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.6:y
+  240 set :buildBlock:y :buildBlockFromCfg.1:y
   241 set :buildBlock:copper 90
   242 set :buildBlock:lead 50
   243 set :buildBlock:graphite 0
 
   267 write :monos *tmp136 ".monos"
   268 write :flares *tmp136 ".flares"
   269 write :polys *tmp136 ".polys"
-    * set :buildBlockFromCfg.7:block @power-node
-    * set :buildBlockFromCfg.7:offsetX -2
-    * set :buildBlockFromCfg.7:offsetY 1
-    * set :buildBlockFromCfg.7:copper 2
-    * set :buildBlockFromCfg.7:lead 6
-    * set :buildBlockFromCfg.7:graphite 0
-    * set :buildBlockFromCfg.7:silicon 0
-    * set :buildBlockFromCfg.7:titanium 0
-    * set :buildBlockFromCfg.7:metaglass 0
-    * set :buildBlockFromCfg.7:rotation 0
-    * set :buildBlockFromCfg.7:config null
   270 label *label85
   271 op add :buildBlockFromCfg.7:x .coreX -2
   272 op add :buildBlockFromCfg.7:y .coreY 1
 
   290 multilabel *label88 (m:marker7)
   291 label *label87
   292 label *label84
-    * set :buildBlockFromCfg.8:block @unloader
-    * set :buildBlockFromCfg.8:offsetX -2
-    * set :buildBlockFromCfg.8:offsetY 0
-    * set :buildBlockFromCfg.8:copper 0
-    * set :buildBlockFromCfg.8:lead 0
-    * set :buildBlockFromCfg.8:graphite 0
-    * set :buildBlockFromCfg.8:silicon 30
-    * set :buildBlockFromCfg.8:titanium 25
-    * set :buildBlockFromCfg.8:metaglass 0
-    * set :buildBlockFromCfg.8:rotation 0
-    * set :buildBlockFromCfg.8:config null
   293 label *label91
   294 op add :buildBlockFromCfg.8:x .coreX -2
   295 op add :buildBlockFromCfg.8:y .coreY 0
   296 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.8:x
+  297 set :buildBlock:x :buildBlockFromCfg.7:x
   298 set :buildBlock:y :buildBlockFromCfg.8:y
   299 set :buildBlock:copper 0
   300 set :buildBlock:lead 0
 
   315 label *label93
   316 label *label90
   317 write *tmp144 *tmp136 ".unloader2"
-    * set :buildBlockFromCfg.9:block @air-factory
-    * set :buildBlockFromCfg.9:offsetX -3
-    * set :buildBlockFromCfg.9:offsetY -2
-    * set :buildBlockFromCfg.9:copper 60
-    * set :buildBlockFromCfg.9:lead 70
-    * set :buildBlockFromCfg.9:graphite 0
-    * set :buildBlockFromCfg.9:silicon 0
-    * set :buildBlockFromCfg.9:titanium 0
-    * set :buildBlockFromCfg.9:metaglass 0
-    * set :buildBlockFromCfg.9:rotation 3
-    * set :buildBlockFromCfg.9:config @mono
   318 label *label97
   319 op add :buildBlockFromCfg.9:x .coreX -3
   320 op add :buildBlockFromCfg.9:y .coreY -2
 
   339 multilabel *label100 (m:marker9)
   340 label *label99
   341 label *label96
-    * set :factory *tmp148
   342 write *tmp148 *tmp136 ".factory"
   343 write *tmp148 processor1 ".factory"
   344 write 1 *tmp136 ".flareTarget"
 
   380 set .graphiteSurplus 60
   381 set .siliconSurplus 100
   382 set .metaglassSurplus 60
-    * set :buildBlockFromCfg.10:block @unloader
-    * set :buildBlockFromCfg.10:offsetX 2
-    * set :buildBlockFromCfg.10:offsetY 1
-    * set :buildBlockFromCfg.10:copper 0
-    * set :buildBlockFromCfg.10:lead 0
-    * set :buildBlockFromCfg.10:graphite 0
-    * set :buildBlockFromCfg.10:silicon 30
-    * set :buildBlockFromCfg.10:titanium 25
-    * set :buildBlockFromCfg.10:metaglass 0
-    * set :buildBlockFromCfg.10:rotation 0
-    * set :buildBlockFromCfg.10:config null
   383 label *label111
   384 op add :buildBlockFromCfg.10:x .coreX 2
   385 op add :buildBlockFromCfg.10:y .coreY 1
   386 set :buildBlock:block @unloader
   387 set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.10:y
+  388 set :buildBlock:y :buildBlockFromCfg.7:y
   389 set :buildBlock:copper 0
   390 set :buildBlock:lead 0
   391 set :buildBlock:graphite 0
 
   403 multilabel *label114 (m:marker10)
   404 label *label113
   405 label *label110
-    * set :buildBlockFromCfg.11:block @junction
-    * set :buildBlockFromCfg.11:offsetX 2
-    * set :buildBlockFromCfg.11:offsetY 0
-    * set :buildBlockFromCfg.11:copper 3
-    * set :buildBlockFromCfg.11:lead 0
-    * set :buildBlockFromCfg.11:graphite 0
-    * set :buildBlockFromCfg.11:silicon 0
-    * set :buildBlockFromCfg.11:titanium 0
-    * set :buildBlockFromCfg.11:metaglass 0
-    * set :buildBlockFromCfg.11:rotation 0
-    * set :buildBlockFromCfg.11:config null
   406 label *label117
   407 op add :buildBlockFromCfg.11:x .coreX 2
   408 op add :buildBlockFromCfg.11:y .coreY 0
   409 set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
+  410 set :buildBlock:x :buildBlockFromCfg.10:x
+  411 set :buildBlock:y :buildBlockFromCfg.8:y
   412 set :buildBlock:copper 3
   413 set :buildBlock:lead 0
   414 set :buildBlock:graphite 0
 
   426 multilabel *label120 (m:marker11)
   427 label *label119
   428 label *label116
-    * set :buildBlockFromCfg.12:block @inverted-sorter
-    * set :buildBlockFromCfg.12:offsetX 3
-    * set :buildBlockFromCfg.12:offsetY 0
-    * set :buildBlockFromCfg.12:copper 2
-    * set :buildBlockFromCfg.12:lead 2
-    * set :buildBlockFromCfg.12:graphite 0
-    * set :buildBlockFromCfg.12:silicon 0
-    * set :buildBlockFromCfg.12:titanium 0
-    * set :buildBlockFromCfg.12:metaglass 0
-    * set :buildBlockFromCfg.12:rotation 0
-    * set :buildBlockFromCfg.12:config @metaglass
   429 label *label123
   430 op add :buildBlockFromCfg.12:x .coreX 3
   431 op add :buildBlockFromCfg.12:y .coreY 0
   432 set :buildBlock:block @inverted-sorter
   433 set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
+  434 set :buildBlock:y :buildBlockFromCfg.8:y
   435 set :buildBlock:copper 2
   436 set :buildBlock:lead 2
   437 set :buildBlock:graphite 0
 
   449 multilabel *label126 (m:marker12)
   450 label *label125
   451 label *label122
-    * set :buildBlockFromCfg.13:block @kiln
-    * set :buildBlockFromCfg.13:offsetX 3.5
-    * set :buildBlockFromCfg.13:offsetY 1.5
-    * set :buildBlockFromCfg.13:copper 60
-    * set :buildBlockFromCfg.13:lead 30
-    * set :buildBlockFromCfg.13:graphite 30
-    * set :buildBlockFromCfg.13:silicon 0
-    * set :buildBlockFromCfg.13:titanium 0
-    * set :buildBlockFromCfg.13:metaglass 0
-    * set :buildBlockFromCfg.13:rotation 0
-    * set :buildBlockFromCfg.13:config null
   452 label *label129
   453 op add :buildBlockFromCfg.13:x .coreX 3.5
   454 op add :buildBlockFromCfg.13:y .coreY 1.5
 
   473 multilabel *label132 (m:marker13)
   474 label *label131
   475 label *label128
-    * set .kiln *tmp168
   476 write *tmp168 *tmp136 ".kiln"
-    * set :buildBlockFromCfg.14:block @water-extractor
-    * set :buildBlockFromCfg.14:offsetX -3.5
-    * set :buildBlockFromCfg.14:offsetY 3.5
-    * set :buildBlockFromCfg.14:copper 30
-    * set :buildBlockFromCfg.14:lead 30
-    * set :buildBlockFromCfg.14:graphite 30
-    * set :buildBlockFromCfg.14:silicon 0
-    * set :buildBlockFromCfg.14:titanium 0
-    * set :buildBlockFromCfg.14:metaglass 30
-    * set :buildBlockFromCfg.14:rotation 0
-    * set :buildBlockFromCfg.14:config null
   477 label *label135
   478 op add :buildBlockFromCfg.14:x .coreX -3.5
   479 op add :buildBlockFromCfg.14:y .coreY 3.5
 
   497 multilabel *label138 (m:marker14)
   498 label *label137
   499 label *label134
-    * set :buildBlockFromCfg.15:block @overflow-gate
-    * set :buildBlockFromCfg.15:offsetX -3
-    * set :buildBlockFromCfg.15:offsetY 0
-    * set :buildBlockFromCfg.15:copper 4
-    * set :buildBlockFromCfg.15:lead 2
-    * set :buildBlockFromCfg.15:graphite 0
-    * set :buildBlockFromCfg.15:silicon 0
-    * set :buildBlockFromCfg.15:titanium 0
-    * set :buildBlockFromCfg.15:metaglass 0
-    * set :buildBlockFromCfg.15:rotation 0
-    * set :buildBlockFromCfg.15:config null
   500 label *label141
   501 op add :buildBlockFromCfg.15:x .coreX -3
   502 op add :buildBlockFromCfg.15:y .coreY 0
   503 set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.15:x
-    * set :buildBlock:y :buildBlockFromCfg.15:y
+  504 set :buildBlock:x :buildBlockFromCfg.9:x
+  505 set :buildBlock:y :buildBlockFromCfg.8:y
   506 set :buildBlock:copper 4
   507 set :buildBlock:lead 2
   508 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   509 set :buildBlock:titanium 0
   510 set :buildBlock:metaglass 0
   511 set :buildBlock:rotation 0
 
   519 multilabel *label144 (m:marker15)
   520 label *label143
   521 label *label140
-    * set :buildBlockFromCfg.16:block @steam-generator
-    * set :buildBlockFromCfg.16:offsetX -3.5
-    * set :buildBlockFromCfg.16:offsetY 1.5
-    * set :buildBlockFromCfg.16:copper 35
-    * set :buildBlockFromCfg.16:lead 40
-    * set :buildBlockFromCfg.16:graphite 25
-    * set :buildBlockFromCfg.16:silicon 30
-    * set :buildBlockFromCfg.16:titanium 0
-    * set :buildBlockFromCfg.16:metaglass 0
-    * set :buildBlockFromCfg.16:rotation 0
-    * set :buildBlockFromCfg.16:config null
   522 label *label147
   523 op add :buildBlockFromCfg.16:x .coreX -3.5
   524 op add :buildBlockFromCfg.16:y .coreY 1.5
   525 set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.16:x
-    * set :buildBlock:y :buildBlockFromCfg.16:y
+  526 set :buildBlock:x :buildBlockFromCfg.14:x
+  527 set :buildBlock:y :buildBlockFromCfg.13:y
   528 set :buildBlock:copper 35
   529 set :buildBlock:lead 40
   530 set :buildBlock:graphite 25
 
   544 label *label149
   545 label *label146
   546 write *tmp180 *tmp136 ".generator2"
-    * set :buildBlockFromCfg.17:block @payload-router
-    * set :buildBlockFromCfg.17:offsetX -3
-    * set :buildBlockFromCfg.17:offsetY -5
-    * set :buildBlockFromCfg.17:copper 10
-    * set :buildBlockFromCfg.17:lead 0
-    * set :buildBlockFromCfg.17:graphite 15
-    * set :buildBlockFromCfg.17:silicon 0
-    * set :buildBlockFromCfg.17:titanium 0
-    * set :buildBlockFromCfg.17:metaglass 0
-    * set :buildBlockFromCfg.17:rotation 0
-    * set :buildBlockFromCfg.17:config null
   547 label *label153
   548 op add :buildBlockFromCfg.17:x .coreX -3
   549 op add :buildBlockFromCfg.17:y .coreY -5
   550 set :buildBlock:block @payload-router
-    * set :buildBlock:x :buildBlockFromCfg.17:x
+  551 set :buildBlock:x :buildBlockFromCfg.9:x
   552 set :buildBlock:y :buildBlockFromCfg.17:y
   553 set :buildBlock:copper 10
   554 set :buildBlock:lead 0
 
   569 label *label155
   570 label *label152
   571 write *tmp184 *tmp136 ".payloadRouter"
-    * set :buildBlockFromCfg.18:block @unloader
-    * set :buildBlockFromCfg.18:offsetX 0
-    * set :buildBlockFromCfg.18:offsetY -2
-    * set :buildBlockFromCfg.18:copper 0
-    * set :buildBlockFromCfg.18:lead 0
-    * set :buildBlockFromCfg.18:graphite 0
-    * set :buildBlockFromCfg.18:silicon 30
-    * set :buildBlockFromCfg.18:titanium 25
-    * set :buildBlockFromCfg.18:metaglass 0
-    * set :buildBlockFromCfg.18:rotation 0
-    * set :buildBlockFromCfg.18:config null
   572 label *label159
   573 op add :buildBlockFromCfg.18:x .coreX 0
   574 op add :buildBlockFromCfg.18:y .coreY -2
   575 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.18:x
-    * set :buildBlock:y :buildBlockFromCfg.18:y
+  576 set :buildBlock:x :buildBlockFromCfg.1:x
+  577 set :buildBlock:y :buildBlockFromCfg.9:y
   578 set :buildBlock:copper 0
-    * set :buildBlock:lead 0
   579 set :buildBlock:graphite 0
   580 set :buildBlock:silicon 30
   581 set :buildBlock:titanium 25
 
   591 multilabel *label162 (m:marker18)
   592 label *label161
   593 label *label158
-    * set :buildBlockFromCfg.19:block @underflow-gate
-    * set :buildBlockFromCfg.19:offsetX 0
-    * set :buildBlockFromCfg.19:offsetY -3
-    * set :buildBlockFromCfg.19:copper 4
-    * set :buildBlockFromCfg.19:lead 2
-    * set :buildBlockFromCfg.19:graphite 0
-    * set :buildBlockFromCfg.19:silicon 0
-    * set :buildBlockFromCfg.19:titanium 0
-    * set :buildBlockFromCfg.19:metaglass 0
-    * set :buildBlockFromCfg.19:rotation 0
-    * set :buildBlockFromCfg.19:config null
   594 label *label165
   595 op add :buildBlockFromCfg.19:x .coreX 0
   596 op add :buildBlockFromCfg.19:y .coreY -3
   597 set :buildBlock:block @underflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.19:x
+  598 set :buildBlock:x :buildBlockFromCfg.1:x
   599 set :buildBlock:y :buildBlockFromCfg.19:y
   600 set :buildBlock:copper 4
   601 set :buildBlock:lead 2
 
   614 multilabel *label168 (m:marker19)
   615 label *label167
   616 label *label164
-    * set :buildBlockFromCfg.20:block @additive-reconstructor
-    * set :buildBlockFromCfg.20:offsetX 0
-    * set :buildBlockFromCfg.20:offsetY -5
-    * set :buildBlockFromCfg.20:copper 200
-    * set :buildBlockFromCfg.20:lead 120
-    * set :buildBlockFromCfg.20:graphite 0
-    * set :buildBlockFromCfg.20:silicon 90
-    * set :buildBlockFromCfg.20:titanium 0
-    * set :buildBlockFromCfg.20:metaglass 0
-    * set :buildBlockFromCfg.20:rotation 0
-    * set :buildBlockFromCfg.20:config null
   617 label *label171
   618 op add :buildBlockFromCfg.20:x .coreX 0
   619 op add :buildBlockFromCfg.20:y .coreY -5
   620 set :buildBlock:block @additive-reconstructor
-    * set :buildBlock:x :buildBlockFromCfg.20:x
-    * set :buildBlock:y :buildBlockFromCfg.20:y
+  621 set :buildBlock:x :buildBlockFromCfg.1:x
+  622 set :buildBlock:y :buildBlockFromCfg.17:y
   623 set :buildBlock:copper 200
   624 set :buildBlock:lead 120
-    * set :buildBlock:graphite 0
   625 set :buildBlock:silicon 90
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   626 setaddr :buildBlock*retaddr *label175 (h:*label175)
   627 call *label26 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   628 label *label175
 
   633 multilabel *label174 (m:marker20)
   634 label *label173
   635 label *label170
-    * set :reconstructor *tmp196
   636 write *tmp196 *tmp136 ".reconstructor"
   637 write *tmp196 processor1 ".reconstructor"
   638 set .graphiteSurplus 200
 
   657 label *label181
   658 jump *label180 always
   659 label *label182
-    * set :findFreeUnit:unit_type @flare
-    * set :findFreeUnit:initial_flag 0
   660 ubind @flare
   661 jump *label185 notEqual @unit null
   662 jump *label184 always
 
   713 jump *label201 equal *tmp219 false
   714 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   715 jump *label202 notEqual :buildThoriumDrill:result false
-    * set :error.1:error "Cannot locate spot for thorium drill"
   716 set .ERROR "Cannot locate spot for thorium drill"
   717 stop
   718 label *label204
 
   896 label *label237
   897 end
   898 label *label5
-    * set :status3:text "Moving..."
   899 write "Moving..." .display ".status3"
   900 label *label240
   901 label *label241
 
   910 return :moveTo*retaddr
   911 end
   912 label *label6
-    * set *tmp242 :moveTo.1:x
-    * set *tmp243 :moveTo.1:y
   913 set :moveTo:x :moveTo.1:x
   914 set :moveTo:y :moveTo.1:y
   915 set :moveTo:radius 6
 
   920 return :moveTo.1*retaddr
   921 end
   922 label *label7
-    * set :status3.1:text "Moving..."
   923 write "Moving..." .display ".status3"
   924 label *label247
   925 label *label248
 
   949 return :moveToBlock*retaddr
   950 end
   951 label *label9
-    * set :status3.2:text "Depositing..."
   952 write "Depositing..." .display ".status3"
   953 label *label256
   954 sensor *tmp251 @unit @firstItem
 
   977 jump *label263 always
   978 label *label265
   979 label *label258
-    * set :transportStatus:target 0
-    * set :transportStatus:item null
   980 write 0 .display ".transportTarget"
   981 write null .display ".transportItem"
   982 label *label266
 
   986 label *label10
   987 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp261 0
   988 jump *label268 notEqual *tmp261 false
-    * set :error.3:error "Cannot locate ore"
   989 set .ERROR "Cannot locate ore"
   990 stop
   991 label *label270
 
   996 end
   997 label *label11
   998 op min :mineOre:amount :mineOre:amount 30
-    * set :transportStatus.1:target :mineOre:amount
-    * set :transportStatus.1:item :mineOre:ore
   999 write :mineOre:amount .display ".transportTarget"
  1000 write :mineOre:ore .display ".transportItem"
  1001 label *label272
 
  1022 label *label277
  1023 label *label275
  1024 label *label276
-    * set :status3.3:text "Mining..."
  1025 write "Mining..." .display ".status3"
  1026 label *label281
  1027 op add :mineOre:stop @second 10
 
  1053 return :mineOre*retaddr
  1054 end
  1055 label *label12
-    * set :status2:text "Mining "
-    * set :status2:item :mineOre.1:ore
-    * set :status2:block "core"
  1056 write "Mining " .display ".status2"
  1057 write :mineOre.1:ore .display ".item2"
  1058 write "core" .display ".block2"
 
  1068 end
  1069 label *label13
  1070 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
-    * set :transportStatus.2:item :fetchBlock:item
  1071 write :transportStatus.2:target .display ".transportTarget"
  1072 write :fetchBlock:item .display ".transportItem"
  1073 label *label294
-    * set :status2.1:text "Fetching "
-    * set :status2.1:item :fetchBlock:item
-    * set :status2.1:block :fetchBlock:block
  1074 write "Fetching " .display ".status2"
  1075 write :fetchBlock:item .display ".item2"
  1076 write :fetchBlock:block .display ".block2"
 
  1122 jump *label310 greaterThanEq *tmp298 .targetGraphite
  1123 sensor *tmp301 .press @coal
  1124 jump *label312 greaterThanEq *tmp301 5
-    * set :status1:text "Goal 1: graphite requirement"
  1125 write "Goal 1: graphite requirement" .display ".status1"
  1126 label *label314
  1127 set :supplyBlock:block .press
  1128 set :supplyBlock:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .press
  1129 write "Supplying " .display ".status2"
-    * write :supplyBlock:ore .display ".item2"
-    * write :supplyBlock:block .display ".block2"
+ 1130 write @coal .display ".item2"
+ 1131 write .press .display ".block2"
  1132 label *label316
  1133 sensor :supplyBlock:blockCapacity .press @itemCapacity
  1134 sensor *tmp305 .press @coal
 
  1152 jump *label320 greaterThanEq *tmp309 .targetSilicon
  1153 sensor *tmp312 .smelter @coal
  1154 jump *label322 greaterThanEq *tmp312 5
-    * set :status1.1:text "Goal 2: coal for silicon requirement"
  1155 write "Goal 2: coal for silicon requirement" .display ".status1"
  1156 label *label324
  1157 set :supplyBlock.1:block .smelter
  1158 set :supplyBlock.1:ore @coal
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @coal
-    * set :status2.3:block .smelter
  1159 write "Supplying " .display ".status2"
-    * write :supplyBlock.1:ore .display ".item2"
-    * write :supplyBlock.1:block .display ".block2"
+ 1160 write @coal .display ".item2"
+ 1161 write .smelter .display ".block2"
  1162 label *label326
  1163 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
  1164 sensor *tmp316 .smelter @coal
 
  1178 label *label322
  1179 sensor *tmp320 .smelter @sand
  1180 jump *label330 greaterThanEq *tmp320 5
-    * set :status1.2:text "Goal 3: sand for silicon requirement"
  1181 write "Goal 3: sand for silicon requirement" .display ".status1"
  1182 label *label332
  1183 set :supplyBlock.2:block .smelter
  1184 set :supplyBlock.2:ore @sand
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @sand
-    * set :status2.4:block .smelter
  1185 write "Supplying " .display ".status2"
-    * write :supplyBlock.2:ore .display ".item2"
-    * write :supplyBlock.2:block .display ".block2"
+ 1186 write @sand .display ".item2"
+ 1187 write .smelter .display ".block2"
  1188 label *label334
  1189 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
  1190 sensor *tmp324 .smelter @sand
 
  1209 jump *label338 greaterThanEq *tmp328 .powerTarget
  1210 sensor *tmp331 .generator @coal
  1211 jump *label340 greaterThanEq *tmp331 2
-    * set :status1.3:text "Goal 4: supplying generator"
  1212 write "Goal 4: supplying generator" .display ".status1"
  1213 label *label342
  1214 set :supplyBlock.3:block .generator
  1215 set :supplyBlock.3:ore @coal
-    * set :status2.5:text "Supplying "
-    * set :status2.5:item @coal
-    * set :status2.5:block .generator
  1216 write "Supplying " .display ".status2"
-    * write :supplyBlock.3:ore .display ".item2"
-    * write :supplyBlock.3:block .display ".block2"
+ 1217 write @coal .display ".item2"
+ 1218 write .generator .display ".block2"
  1219 label *label344
  1220 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
  1221 sensor *tmp335 .generator @coal
 
  1246 label *label348
  1247 set *tmp341 100
  1248 label *label349
-    * set :supplyBase0:titaniumTrigger *tmp341
  1249 sensor *tmp345 .titaniumDrill @titanium
  1250 jump *label350 greaterThanEq *tmp345 *tmp341
  1251 jump *label352 notEqual :supplyBase0:supplied false
  1252 sensor *tmp350 .battery @totalPower
  1253 op mul *tmp351 .unloader1 .powerTarget
  1254 jump *label354 greaterThanEq *tmp350 *tmp351
-    * set :status1.4:text "Goal 5: supplying generator"
  1255 write "Goal 5: supplying generator" .display ".status1"
  1256 label *label356
  1257 set :mineOre.1:ore @coal
 
  1262 label *label354
  1263 sensor *tmp354 .core @silicon
  1264 jump *label358 greaterThanEq *tmp354 .targetSilicon
-    * set :status1.5:text "Goal 6: silicon requirement"
  1265 write "Goal 6: silicon requirement" .display ".status1"
  1266 label *label360
  1267 sensor :supplyBase0:coal .core @coal
 
  1272 label *label361
  1273 set *tmp360 @sand
  1274 label *label362
-    * set :supplyBase0:ore *tmp360
  1275 set :mineOre.1:ore *tmp360
  1276 setaddr :mineOre.1*retaddr *label363 (h:*label363)
  1277 call *label12 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
 
  1280 label *label358
  1281 sensor *tmp361 .core @copper
  1282 jump *label364 greaterThanEq *tmp361 .targetCopper
-    * set :status1.6:text "Goal 7: copper requirement"
  1283 write "Goal 7: copper requirement" .display ".status1"
  1284 label *label366
  1285 set :mineOre.1:ore @copper
 
  1291 sensor *tmp364 .core @lead
  1292 op add *tmp365 .targetLead 20
  1293 jump *label368 greaterThanEq *tmp364 *tmp365
-    * set :status1.7:text "Goal 8: lead requirement"
  1294 write "Goal 8: lead requirement" .display ".status1"
  1295 label *label370
  1296 set :mineOre.1:ore @lead
 
  1301 label *label368
  1302 sensor *tmp368 .core @metaglass
  1303 jump *label372 greaterThanEq *tmp368 .targetMetaglass
-    * set :status1.8:text "Goal 9: metaglass requirement"
  1304 write "Goal 9: metaglass requirement" .display ".status1"
  1305 label *label374
  1306 set :mineOre.1:ore @sand
 
  1309 label *label375
  1310 jump *label373 always
  1311 label *label372
-    * set :status1.9:text "Goal 10: supplying base"
  1312 write "Goal 10: supplying base" .display ".status1"
  1313 label *label376
  1314 sensor :supplyBase0:coal.1 .core @coal
 
  1319 label *label377
  1320 set *tmp374 @sand
  1321 label *label378
-    * set :supplyBase0:ore.1 *tmp374
  1322 set :mineOre.1:ore *tmp374
  1323 setaddr :mineOre.1*retaddr *label379 (h:*label379)
  1324 call *label12 *invalid :mineOre.1*retval (m:*label379) (h:*label379)
 
  1332 label *label353
  1333 jump *label351 always
  1334 label *label350
-    * set :status1.10:text "Goal 11: Fetching titanium"
  1335 write "Goal 11: Fetching titanium" .display ".status1"
  1336 label *label380
  1337 set :fetchBlock:block .titaniumDrill
 
  1344 return :supplyBase0*retaddr
  1345 end
  1346 label *label19
-    * set :status1.11:text "Phase 1: supplying base"
  1347 write "Phase 1: supplying base" .display ".status1"
  1348 label *label383
  1349 set :mineOre.1:ore @coal
 
  1452 write *tmp400 .controller ".smelterTarget"
  1453 op add *tmp401 :meetTarget:metaglass .metaglassSurplus
  1454 write *tmp401 .controller ".kilnTarget"
-    * op add *tmp402 :meetTarget:lead .leadSurplus
  1455 write *tmp397 .controller ".leadReserve"
  1456 op sign *tmp403 :meetTarget:silicon
  1457 op mul *tmp404 *tmp403 20
 
  1475 read *tmp86 bank1 511
  1476 op sub *tmp407 *tmp86 1
  1477 write *tmp407 bank1 511
-    * set *tmp408 *tmp407
  1478 op mul :second:result @second TIME_COMPRESS
-    * set *tmp410 :second:result
  1479 label *label419
  1480 op floor *tmp411 :second:result
  1481 op mul *tmp412 *tmp411 1000
 
  1498 setaddr :moveTo.1*retaddr *label423 (h:*label423)
  1499 call *label6 *invalid :moveTo.1*retval (m:*label423) (h:*label423)
  1500 label *label423
-    * set :status3.4:text "Building..."
  1501 write "Building..." .display ".status3"
  1502 label *label424
  1503 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
 
  1512 jump *label422 always
  1513 label *label429
  1514 label *label430
-    * set :error.4:error "Cannot build at ("
  1515 set .ERROR "Cannot build at ("
  1516 stop
  1517 label *label431

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-36 instructions):
 
    88 set .battery *tmp101
    89 label *label47
    90 op add :buildBlockFromCfg.2:x .coreX -1
-    * op add :buildBlockFromCfg.2:y .coreY 4
    91 set :buildBlock:x :buildBlockFromCfg.2:x
    92 set :buildBlock:y :buildBlockFromCfg.1:y
    93 set :buildBlock:lead 20
 
   107 label *label49
   108 label *label46
   109 label *label53
-    * op add :buildBlockFromCfg.3:x .coreX 0
   110 op add :buildBlockFromCfg.3:y .coreY 3
   111 set :buildBlock:block @combustion-generator
   112 set :buildBlock:x :buildBlockFromCfg.1:x
 
   133 set .powerTarget 400
   134 label *label59
   135 op add :buildBlockFromCfg.4:x .coreX 1.5
-    * op add :buildBlockFromCfg.4:y .coreY 2.5
   136 set :buildBlock:block @silicon-smelter
   137 set :buildBlock:x :buildBlockFromCfg.4:x
   138 set :buildBlock:y :buildBlockFromCfg:y
 
   199 setaddr :buildBlockAt*retaddr *label71 (h:*label71)
   200 call *label25 *invalid :buildBlockAt*retval (m:*label71) (h:*label71)
   201 label *label71
-    * set *tmp117 :buildBlockAt*retval
   202 jump *label64 always
   203 label *label64
   204 set .titaniumDrill :buildBlockAt*retval
   205 write :buildBlockAt*retval processor1 ".titaniumDrill"
   206 label *label73
-    * op add :buildBlockFromCfg.5:x .coreX 0
   207 op add :buildBlockFromCfg.5:y .coreY 2
   208 set :buildBlock:block @unloader
   209 set :buildBlock:x :buildBlockFromCfg.1:x
 
   229 set .unloader1 *tmp132
   230 label *label79
   231 op add :buildBlockFromCfg.6:x .coreX 1
-    * op add :buildBlockFromCfg.6:y .coreY 4
   232 set :buildBlock:block @micro-processor
   233 set :buildBlock:x :buildBlockFromCfg.6:x
   234 set :buildBlock:y :buildBlockFromCfg.1:y
 
   285 label *label87
   286 label *label84
   287 label *label91
-    * op add :buildBlockFromCfg.8:x .coreX -2
   288 op add :buildBlockFromCfg.8:y .coreY 0
   289 set :buildBlock:block @unloader
   290 set :buildBlock:x :buildBlockFromCfg.7:x
 
   375 set .metaglassSurplus 60
   376 label *label111
   377 op add :buildBlockFromCfg.10:x .coreX 2
-    * op add :buildBlockFromCfg.10:y .coreY 1
   378 set :buildBlock:block @unloader
   379 set :buildBlock:x :buildBlockFromCfg.10:x
   380 set :buildBlock:y :buildBlockFromCfg.7:y
 
   396 label *label113
   397 label *label110
   398 label *label117
-    * op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
   399 set :buildBlock:block @junction
   400 set :buildBlock:x :buildBlockFromCfg.10:x
   401 set :buildBlock:y :buildBlockFromCfg.8:y
 
   418 label *label116
   419 label *label123
   420 op add :buildBlockFromCfg.12:x .coreX 3
-    * op add :buildBlockFromCfg.12:y .coreY 0
   421 set :buildBlock:block @inverted-sorter
   422 set :buildBlock:x :buildBlockFromCfg.12:x
   423 set :buildBlock:y :buildBlockFromCfg.8:y
 
   470 set :buildBlock:x :buildBlockFromCfg.14:x
   471 set :buildBlock:y :buildBlockFromCfg.14:y
   472 set :buildBlock:copper 30
-    * set :buildBlock:lead 30
   473 set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
   474 set :buildBlock:titanium 0
   475 set :buildBlock:metaglass 30
   476 set :buildBlock:rotation 0
 
   485 label *label137
   486 label *label134
   487 label *label141
-    * op add :buildBlockFromCfg.15:x .coreX -3
-    * op add :buildBlockFromCfg.15:y .coreY 0
   488 set :buildBlock:block @overflow-gate
   489 set :buildBlock:x :buildBlockFromCfg.9:x
   490 set :buildBlock:y :buildBlockFromCfg.8:y
 
   505 label *label143
   506 label *label140
   507 label *label147
-    * op add :buildBlockFromCfg.16:x .coreX -3.5
-    * op add :buildBlockFromCfg.16:y .coreY 1.5
   508 set :buildBlock:block @steam-generator
   509 set :buildBlock:x :buildBlockFromCfg.14:x
   510 set :buildBlock:y :buildBlockFromCfg.13:y
 
   528 label *label146
   529 write *tmp180 *tmp136 ".generator2"
   530 label *label153
-    * op add :buildBlockFromCfg.17:x .coreX -3
   531 op add :buildBlockFromCfg.17:y .coreY -5
   532 set :buildBlock:block @payload-router
   533 set :buildBlock:x :buildBlockFromCfg.9:x
 
   536 set :buildBlock:lead 0
   537 set :buildBlock:graphite 15
   538 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   539 set :buildBlock:metaglass 0
   540 set :buildBlock:rotation 0
   541 set :buildBlock:config null
 
   551 label *label152
   552 write *tmp184 *tmp136 ".payloadRouter"
   553 label *label159
-    * op add :buildBlockFromCfg.18:x .coreX 0
-    * op add :buildBlockFromCfg.18:y .coreY -2
   554 set :buildBlock:block @unloader
   555 set :buildBlock:x :buildBlockFromCfg.1:x
   556 set :buildBlock:y :buildBlockFromCfg.9:y
 
   571 label *label161
   572 label *label158
   573 label *label165
-    * op add :buildBlockFromCfg.19:x .coreX 0
   574 op add :buildBlockFromCfg.19:y .coreY -3
   575 set :buildBlock:block @underflow-gate
   576 set :buildBlock:x :buildBlockFromCfg.1:x
   577 set :buildBlock:y :buildBlockFromCfg.19:y
   578 set :buildBlock:copper 4
   579 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
   580 set :buildBlock:silicon 0
   581 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   582 setaddr :buildBlock*retaddr *label169 (h:*label169)
   583 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   584 label *label169
 
   589 label *label167
   590 label *label164
   591 label *label171
-    * op add :buildBlockFromCfg.20:x .coreX 0
-    * op add :buildBlockFromCfg.20:y .coreY -5
   592 set :buildBlock:block @additive-reconstructor
   593 set :buildBlock:x :buildBlockFromCfg.1:x
   594 set :buildBlock:y :buildBlockFromCfg.17:y
 
  1096 jump *label312 greaterThanEq *tmp301 5
  1097 write "Goal 1: graphite requirement" .display ".status1"
  1098 label *label314
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
  1099 write "Supplying " .display ".status2"
  1100 write @coal .display ".item2"
  1101 write .press .display ".block2"
 
  1124 jump *label322 greaterThanEq *tmp312 5
  1125 write "Goal 2: coal for silicon requirement" .display ".status1"
  1126 label *label324
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
  1127 write "Supplying " .display ".status2"
  1128 write @coal .display ".item2"
  1129 write .smelter .display ".block2"
 
  1148 jump *label330 greaterThanEq *tmp320 5
  1149 write "Goal 3: sand for silicon requirement" .display ".status1"
  1150 label *label332
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
  1151 write "Supplying " .display ".status2"
  1152 write @sand .display ".item2"
  1153 write .smelter .display ".block2"
 
  1177 jump *label340 greaterThanEq *tmp331 2
  1178 write "Goal 4: supplying generator" .display ".status1"
  1179 label *label342
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
  1180 write "Supplying " .display ".status2"
  1181 write @coal .display ".item2"
  1182 write .generator .display ".block2"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 4 (-7 instructions):
 
   400 set :buildBlock:x :buildBlockFromCfg.10:x
   401 set :buildBlock:y :buildBlockFromCfg.8:y
   402 set :buildBlock:copper 3
-    * set :buildBlock:lead 0
   403 set :buildBlock:graphite 0
   404 set :buildBlock:silicon 0
   405 set :buildBlock:titanium 0
 
   446 set :buildBlock:copper 60
   447 set :buildBlock:lead 30
   448 set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
   449 set :buildBlock:titanium 0
   450 set :buildBlock:metaglass 0
   451 set :buildBlock:rotation 0
 
   468 set :buildBlock:x :buildBlockFromCfg.14:x
   469 set :buildBlock:y :buildBlockFromCfg.14:y
   470 set :buildBlock:copper 30
-    * set :buildBlock:graphite 30
   471 set :buildBlock:titanium 0
   472 set :buildBlock:metaglass 30
   473 set :buildBlock:rotation 0
 
   509 set :buildBlock:lead 40
   510 set :buildBlock:graphite 25
   511 set :buildBlock:silicon 30
-    * set :buildBlock:titanium 0
   512 set :buildBlock:metaglass 0
   513 set :buildBlock:rotation 0
   514 set :buildBlock:config null
 
   554 set :buildBlock:graphite 0
   555 set :buildBlock:silicon 30
   556 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   557 setaddr :buildBlock*retaddr *label163 (h:*label163)
   558 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   559 label *label163

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 5 (-7 instructions):
 
    90 op add :buildBlockFromCfg.2:x .coreX -1
    91 set :buildBlock:x :buildBlockFromCfg.2:x
    92 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:lead 20
    93 set :buildBlock:graphite 0
    94 set :buildBlock:silicon 0
    95 set :buildBlock:titanium 0
 
   421 set :buildBlock:y :buildBlockFromCfg.8:y
   422 set :buildBlock:copper 2
   423 set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   424 set :buildBlock:titanium 0
   425 set :buildBlock:metaglass 0
   426 set :buildBlock:rotation 0
 
   485 set :buildBlock:copper 4
   486 set :buildBlock:lead 2
   487 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   488 set :buildBlock:metaglass 0
   489 set :buildBlock:rotation 0
   490 set :buildBlock:config null
 
   528 set :buildBlock:lead 0
   529 set :buildBlock:graphite 15
   530 set :buildBlock:silicon 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   531 setaddr :buildBlock*retaddr *label157 (h:*label157)
   532 call *label26 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   533 label *label157

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 6 (-6 instructions):
 
   138 set :buildBlock:copper 30
   139 set :buildBlock:lead 25
   140 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   141 set :buildBlock:titanium 0
   142 set :buildBlock:metaglass 0
   143 set :buildBlock:rotation 0
 
   398 set :buildBlock:x :buildBlockFromCfg.10:x
   399 set :buildBlock:y :buildBlockFromCfg.8:y
   400 set :buildBlock:copper 3
-    * set :buildBlock:graphite 0
   401 set :buildBlock:silicon 0
   402 set :buildBlock:titanium 0
   403 set :buildBlock:metaglass 0
 
   463 set :buildBlock:x :buildBlockFromCfg.14:x
   464 set :buildBlock:y :buildBlockFromCfg.14:y
   465 set :buildBlock:copper 30
-    * set :buildBlock:titanium 0
   466 set :buildBlock:metaglass 30
   467 set :buildBlock:rotation 0
   468 set :buildBlock:config null
 
   502 set :buildBlock:lead 40
   503 set :buildBlock:graphite 25
   504 set :buildBlock:silicon 30
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   505 setaddr :buildBlock*retaddr *label151 (h:*label151)
   506 call *label26 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   507 label *label151

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 7 (-6 instructions):
 
   113 set :buildBlock:copper 25
   114 set :buildBlock:lead 15
   115 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
   116 set :buildBlock:titanium 0
   117 set :buildBlock:metaglass 0
   118 set :buildBlock:rotation 0
 
   377 set :buildBlock:y :buildBlockFromCfg.7:y
   378 set :buildBlock:copper 0
   379 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   380 set :buildBlock:silicon 30
   381 set :buildBlock:titanium 25
   382 set :buildBlock:metaglass 0
 
   439 set :buildBlock:copper 60
   440 set :buildBlock:lead 30
   441 set :buildBlock:graphite 30
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   442 set :buildBlock:rotation 0
   443 set :buildBlock:config null
   444 setaddr :buildBlock*retaddr *label133 (h:*label133)
 
   479 set :buildBlock:lead 2
   480 set :buildBlock:graphite 0
   481 set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   482 setaddr :buildBlock*retaddr *label145 (h:*label145)
   483 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   484 label *label145

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 8 (-6 instructions):
 
    91 set :buildBlock:x :buildBlockFromCfg.2:x
    92 set :buildBlock:y :buildBlockFromCfg.1:y
    93 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    94 set :buildBlock:titanium 0
    95 set :buildBlock:metaglass 0
    96 set :buildBlock:rotation 0
 
   312 set :buildBlock:y :buildBlockFromCfg.9:y
   313 set :buildBlock:copper 60
   314 set :buildBlock:lead 70
-    * set :buildBlock:graphite 0
   315 set :buildBlock:silicon 0
   316 set :buildBlock:titanium 0
   317 set :buildBlock:metaglass 0
 
   415 set :buildBlock:y :buildBlockFromCfg.8:y
   416 set :buildBlock:copper 2
   417 set :buildBlock:lead 2
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   418 set :buildBlock:rotation 0
   419 set :buildBlock:config @metaglass
   420 setaddr :buildBlock*retaddr *label127 (h:*label127)
 
   456 set :buildBlock:y :buildBlockFromCfg.14:y
   457 set :buildBlock:copper 30
   458 set :buildBlock:metaglass 30
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
   459 setaddr :buildBlock*retaddr *label139 (h:*label139)
   460 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   461 label *label139

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 9 (-6 instructions):
 
    70 set :buildBlock:copper 5
    71 set :buildBlock:lead 20
    72 set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
    73 set :buildBlock:titanium 0
    74 set :buildBlock:metaglass 0
    75 set :buildBlock:rotation 0
 
   266 set :buildBlock:lead 6
   267 set :buildBlock:graphite 0
   268 set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
   269 set :buildBlock:metaglass 0
   270 set :buildBlock:rotation 0
   271 set :buildBlock:config null
 
   285 set :buildBlock:y :buildBlockFromCfg.8:y
   286 set :buildBlock:copper 0
   287 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   288 set :buildBlock:silicon 30
   289 set :buildBlock:titanium 25
   290 set :buildBlock:metaglass 0
 
   393 set :buildBlock:copper 3
   394 set :buildBlock:silicon 0
   395 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   396 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   397 setaddr :buildBlock*retaddr *label121 (h:*label121)
   398 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   399 label *label121
 
   430 set :buildBlock:copper 60
   431 set :buildBlock:lead 30
   432 set :buildBlock:graphite 30
-    * set :buildBlock:rotation 0
   433 set :buildBlock:config null
   434 setaddr :buildBlock*retaddr *label133 (h:*label133)
   435 call *label26 *invalid :buildBlock*retval (m:*label133) (h:*label133)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 10 (-5 instructions):
 
   135 set :buildBlock:copper 30
   136 set :buildBlock:lead 25
   137 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   138 set :buildBlock:metaglass 0
   139 set :buildBlock:rotation 0
   140 set :buildBlock:config null
 
   263 set :buildBlock:y :buildBlockFromCfg.7:y
   264 set :buildBlock:copper 2
   265 set :buildBlock:lead 6
-    * set :buildBlock:graphite 0
   266 set :buildBlock:silicon 0
   267 set :buildBlock:metaglass 0
   268 set :buildBlock:rotation 0
 
   287 set :buildBlock:titanium 25
   288 set :buildBlock:metaglass 0
   289 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   290 setaddr :buildBlock*retaddr *label95 (h:*label95)
   291 call *label26 *invalid :buildBlock*retval (m:*label95) (h:*label95)
   292 label *label95
 
   371 set :buildBlock:lead 0
   372 set :buildBlock:silicon 30
   373 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
   374 set :buildBlock:rotation 0
   375 set :buildBlock:config null
   376 setaddr :buildBlock*retaddr *label115 (h:*label115)
 
   406 set :buildBlock:y :buildBlockFromCfg.8:y
   407 set :buildBlock:copper 2
   408 set :buildBlock:lead 2
-    * set :buildBlock:rotation 0
   409 set :buildBlock:config @metaglass
   410 setaddr :buildBlock*retaddr *label127 (h:*label127)
   411 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 11 (-5 instructions):
 
   111 set :buildBlock:copper 25
   112 set :buildBlock:lead 15
   113 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
   114 set :buildBlock:metaglass 0
   115 set :buildBlock:rotation 0
   116 set :buildBlock:config null
 
   208 set :buildBlock:titanium 25
   209 set :buildBlock:metaglass 0
   210 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   211 setaddr :buildBlock*retaddr *label77 (h:*label77)
   212 call *label26 *invalid :buildBlock*retval (m:*label77) (h:*label77)
   213 label *label77
 
   226 set :buildBlock:y :buildBlockFromCfg.1:y
   227 set :buildBlock:copper 90
   228 set :buildBlock:lead 50
-    * set :buildBlock:graphite 0
   229 set :buildBlock:silicon 50
   230 set :buildBlock:titanium 0
   231 set :buildBlock:metaglass 0
 
   305 set :buildBlock:lead 70
   306 set :buildBlock:silicon 0
   307 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
   308 set :buildBlock:rotation 3
   309 set :buildBlock:config @mono
   310 setaddr :buildBlock*retaddr *label101 (h:*label101)
 
   385 set :buildBlock:copper 3
   386 set :buildBlock:silicon 0
   387 set :buildBlock:titanium 0
-    * set :buildBlock:rotation 0
   388 setaddr :buildBlock*retaddr *label121 (h:*label121)
   389 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   390 label *label121

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 12 (-5 instructions):
 
    90 set :buildBlock:x :buildBlockFromCfg.2:x
    91 set :buildBlock:y :buildBlockFromCfg.1:y
    92 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    93 set :buildBlock:metaglass 0
    94 set :buildBlock:rotation 0
    95 set :buildBlock:config null
 
   135 set :buildBlock:graphite 0
   136 set :buildBlock:metaglass 0
   137 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   138 setaddr :buildBlock*retaddr *label63 (h:*label63)
   139 call *label26 *invalid :buildBlock*retval (m:*label63) (h:*label63)
   140 label *label63
 
   201 set :buildBlock:y :buildBlockFromCfg.5:y
   202 set :buildBlock:copper 0
   203 set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
   204 set :buildBlock:silicon 30
   205 set :buildBlock:titanium 25
   206 set :buildBlock:metaglass 0
 
   279 set :buildBlock:lead 0
   280 set :buildBlock:silicon 30
   281 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   282 setaddr :buildBlock*retaddr *label95 (h:*label95)
   283 call *label26 *invalid :buildBlock*retval (m:*label95) (h:*label95)
   284 label *label95

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 13 (-5 instructions):
 
    70 set :buildBlock:copper 5
    71 set :buildBlock:lead 20
    72 set :buildBlock:graphite 0
-    * set :buildBlock:titanium 0
    73 set :buildBlock:metaglass 0
    74 set :buildBlock:rotation 0
    75 set :buildBlock:config null
 
   111 set :buildBlock:graphite 0
   112 set :buildBlock:metaglass 0
   113 set :buildBlock:rotation 0
-    * set :buildBlock:config null
   114 setaddr :buildBlock*retaddr *label57 (h:*label57)
   115 call *label26 *invalid :buildBlock*retval (m:*label57) (h:*label57)
   116 label *label57
 
   130 set :buildBlock:y :buildBlockFromCfg:y
   131 set :buildBlock:copper 30
   132 set :buildBlock:lead 25
-    * set :buildBlock:graphite 0
   133 set :buildBlock:metaglass 0
   134 set :buildBlock:rotation 0
   135 setaddr :buildBlock*retaddr *label63 (h:*label63)
 
   255 set :buildBlock:copper 2
   256 set :buildBlock:lead 6
   257 set :buildBlock:silicon 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   258 set :buildBlock:config null
   259 setaddr :buildBlock*retaddr *label89 (h:*label89)
   260 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 14 (-4 instructions):
 
    91 set :buildBlock:graphite 0
    92 set :buildBlock:metaglass 0
    93 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    94 setaddr :buildBlock*retaddr *label51 (h:*label51)
    95 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
    96 label *label51
 
   107 set :buildBlock:y :buildBlockFromCfg.3:y
   108 set :buildBlock:copper 25
   109 set :buildBlock:lead 15
-    * set :buildBlock:graphite 0
   110 set :buildBlock:metaglass 0
   111 set :buildBlock:rotation 0
   112 setaddr :buildBlock*retaddr *label57 (h:*label57)
 
   220 set :buildBlock:lead 50
   221 set :buildBlock:silicon 50
   222 set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   223 set :buildBlock:config processor2
   224 setaddr :buildBlock*retaddr *label83 (h:*label83)
   225 call *label26 *invalid :buildBlock*retval (m:*label83) (h:*label83)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 15 (-4 instructions):
 
    72 set :buildBlock:graphite 0
    73 set :buildBlock:metaglass 0
    74 set :buildBlock:rotation 0
-    * set :buildBlock:config null
    75 setaddr :buildBlock*retaddr *label45 (h:*label45)
    76 call *label26 *invalid :buildBlock*retval (m:*label45) (h:*label45)
    77 label *label45
 
    87 op add :buildBlockFromCfg.2:x .coreX -1
    88 set :buildBlock:x :buildBlockFromCfg.2:x
    89 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:graphite 0
    90 set :buildBlock:metaglass 0
    91 set :buildBlock:rotation 0
    92 setaddr :buildBlock*retaddr *label51 (h:*label51)
 
   196 set :buildBlock:lead 0
   197 set :buildBlock:silicon 30
   198 set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   199 setaddr :buildBlock*retaddr *label77 (h:*label77)
   200 call *label26 *invalid :buildBlock*retval (m:*label77) (h:*label77)
   201 label *label77

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 16 (-3 instructions):
 
    69 set :buildBlock:y :buildBlockFromCfg.1:y
    70 set :buildBlock:copper 5
    71 set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
    72 set :buildBlock:metaglass 0
    73 set :buildBlock:rotation 0
    74 setaddr :buildBlock*retaddr *label45 (h:*label45)
 
   125 set :buildBlock:y :buildBlockFromCfg:y
   126 set :buildBlock:copper 30
   127 set :buildBlock:lead 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   128 setaddr :buildBlock*retaddr *label63 (h:*label63)
   129 call *label26 *invalid :buildBlock*retval (m:*label63) (h:*label63)
   130 label *label63

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 17 (-2 instructions):
 
   104 set :buildBlock:y :buildBlockFromCfg.3:y
   105 set :buildBlock:copper 25
   106 set :buildBlock:lead 15
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
   107 setaddr :buildBlock*retaddr *label57 (h:*label57)
   108 call *label26 *invalid :buildBlock*retval (m:*label57) (h:*label57)
   109 label *label57

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 18 (-2 instructions):
 
    86 op add :buildBlockFromCfg.2:x .coreX -1
    87 set :buildBlock:x :buildBlockFromCfg.2:x
    88 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    89 setaddr :buildBlock*retaddr *label51 (h:*label51)
    90 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
    91 label *label51

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 19 (-2 instructions):
 
    69 set :buildBlock:y :buildBlockFromCfg.1:y
    70 set :buildBlock:copper 5
    71 set :buildBlock:lead 20
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
    72 setaddr :buildBlock*retaddr *label45 (h:*label45)
    73 call *label26 *invalid :buildBlock*retval (m:*label45) (h:*label45)
    74 label *label45

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    36 label *label33
    37 write :findUnits:count processor1 ".displayPolys"
    38 set :polys :findUnits*retval
+   39 op add :buildBlockFromCfg:x .coreX -1.5
+   40 op add :buildBlockFromCfg:y .coreY 2.5
+   41 set :buildBlock:block @graphite-press
+   42 set :buildBlock:x :buildBlockFromCfg:x
+   43 set :buildBlock:y :buildBlockFromCfg:y
+   44 set :buildBlock:copper 75
+   45 set :buildBlock:lead 30
+   46 set :buildBlock:graphite 0
+   47 set :buildBlock:silicon 0
+   48 set :buildBlock:titanium 0
+   49 set :buildBlock:metaglass 0
+   50 set :buildBlock:rotation 0
+   51 set :buildBlock:config null
+   52 setaddr :buildBlock*retaddr *label39 (h:*label39)
    53 label *label35
-    * op add :buildBlockFromCfg:x .coreX -1.5
-    * op add :buildBlockFromCfg:y .coreY 2.5
-    * set :buildBlock:block @graphite-press
-    * set :buildBlock:x :buildBlockFromCfg:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 75
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label39 (h:*label39)
    54 call *label26 *invalid :buildBlock*retval (m:*label39) (h:*label39)
    55 label *label39
    56 set *tmp97 :buildBlock*retval
 
    61 label *label37
    62 label *label34
    63 set .press *tmp97
+   64 op add :buildBlockFromCfg.1:x .coreX 0
+   65 op add :buildBlockFromCfg.1:y .coreY 4
+   66 set :buildBlock:block @battery
+   67 set :buildBlock:x :buildBlockFromCfg.1:x
+   68 set :buildBlock:y :buildBlockFromCfg.1:y
+   69 set :buildBlock:copper 5
+   70 set :buildBlock:lead 20
+   71 setaddr :buildBlock*retaddr *label45 (h:*label45)
    72 label *label41
-    * op add :buildBlockFromCfg.1:x .coreX 0
-    * op add :buildBlockFromCfg.1:y .coreY 4
-    * set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * setaddr :buildBlock*retaddr *label45 (h:*label45)
    73 call *label26 *invalid :buildBlock*retval (m:*label45) (h:*label45)
    74 label *label45
    75 set *tmp101 :buildBlock*retval
 
    80 label *label43
    81 label *label40
    82 set .battery *tmp101
+   83 op add :buildBlockFromCfg.2:x .coreX -1
+   84 set :buildBlock:x :buildBlockFromCfg.2:x
+   85 set :buildBlock:y :buildBlockFromCfg.1:y
+   86 setaddr :buildBlock*retaddr *label51 (h:*label51)
    87 label *label47
-    * op add :buildBlockFromCfg.2:x .coreX -1
-    * set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * setaddr :buildBlock*retaddr *label51 (h:*label51)
    88 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
    89 label *label51
    90 jump *label46 always
 
    93 multilabel *label50 (m:marker2)
    94 label *label49
    95 label *label46
+   96 op add :buildBlockFromCfg.3:y .coreY 3
+   97 set :buildBlock:block @combustion-generator
+   98 set :buildBlock:x :buildBlockFromCfg.1:x
+   99 set :buildBlock:y :buildBlockFromCfg.3:y
+  100 set :buildBlock:copper 25
+  101 set :buildBlock:lead 15
+  102 setaddr :buildBlock*retaddr *label57 (h:*label57)
   103 label *label53
-    * op add :buildBlockFromCfg.3:y .coreY 3
-    * set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 25
-    * set :buildBlock:lead 15
-    * setaddr :buildBlock*retaddr *label57 (h:*label57)
   104 call *label26 *invalid :buildBlock*retval (m:*label57) (h:*label57)
   105 label *label57
   106 set *tmp109 :buildBlock*retval
 
   112 label *label52
   113 set .generator *tmp109
   114 set .powerTarget 400
+  115 op add :buildBlockFromCfg.4:x .coreX 1.5
+  116 set :buildBlock:block @silicon-smelter
+  117 set :buildBlock:x :buildBlockFromCfg.4:x
+  118 set :buildBlock:y :buildBlockFromCfg:y
+  119 set :buildBlock:copper 30
+  120 set :buildBlock:lead 25
+  121 setaddr :buildBlock*retaddr *label63 (h:*label63)
   122 label *label59
-    * op add :buildBlockFromCfg.4:x .coreX 1.5
-    * set :buildBlock:block @silicon-smelter
-    * set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 25
-    * setaddr :buildBlock*retaddr *label63 (h:*label63)
   123 call *label26 *invalid :buildBlock*retval (m:*label63) (h:*label63)
   124 label *label63
   125 set *tmp113 :buildBlock*retval
 
   178 label *label64
   179 set .titaniumDrill :buildBlockAt*retval
   180 write :buildBlockAt*retval processor1 ".titaniumDrill"
+  181 op add :buildBlockFromCfg.5:y .coreY 2
+  182 set :buildBlock:block @unloader
+  183 set :buildBlock:x :buildBlockFromCfg.1:x
+  184 set :buildBlock:y :buildBlockFromCfg.5:y
+  185 set :buildBlock:copper 0
+  186 set :buildBlock:lead 0
+  187 set :buildBlock:silicon 30
+  188 set :buildBlock:titanium 25
+  189 setaddr :buildBlock*retaddr *label77 (h:*label77)
   190 label *label73
-    * op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label77 (h:*label77)
   191 call *label26 *invalid :buildBlock*retval (m:*label77) (h:*label77)
   192 label *label77
   193 set *tmp132 :buildBlock*retval
 
   198 label *label75
   199 label *label72
   200 set .unloader1 *tmp132
+  201 op add :buildBlockFromCfg.6:x .coreX 1
+  202 set :buildBlock:block @micro-processor
+  203 set :buildBlock:x :buildBlockFromCfg.6:x
+  204 set :buildBlock:y :buildBlockFromCfg.1:y
+  205 set :buildBlock:copper 90
+  206 set :buildBlock:lead 50
+  207 set :buildBlock:silicon 50
+  208 set :buildBlock:titanium 0
+  209 setaddr :buildBlock*retaddr *label83 (h:*label83)
   210 label *label79
-    * op add :buildBlockFromCfg.6:x .coreX 1
-    * set :buildBlock:block @micro-processor
-    * set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 90
-    * set :buildBlock:lead 50
-    * set :buildBlock:silicon 50
-    * set :buildBlock:titanium 0
   211 set :buildBlock:config processor2
-    * setaddr :buildBlock*retaddr *label83 (h:*label83)
   212 call *label26 *invalid :buildBlock*retval (m:*label83) (h:*label83)
   213 label *label83
   214 set *tmp136 :buildBlock*retval
 
   229 write :monos *tmp136 ".monos"
   230 write :flares *tmp136 ".flares"
   231 write :polys *tmp136 ".polys"
+  232 op add :buildBlockFromCfg.7:x .coreX -2
+  233 op add :buildBlockFromCfg.7:y .coreY 1
+  234 set :buildBlock:block @power-node
+  235 set :buildBlock:x :buildBlockFromCfg.7:x
+  236 set :buildBlock:y :buildBlockFromCfg.7:y
+  237 set :buildBlock:copper 2
+  238 set :buildBlock:lead 6
+  239 set :buildBlock:silicon 0
+  240 set :buildBlock:config null
+  241 setaddr :buildBlock*retaddr *label89 (h:*label89)
   242 label *label85
-    * op add :buildBlockFromCfg.7:x .coreX -2
-    * op add :buildBlockFromCfg.7:y .coreY 1
-    * set :buildBlock:block @power-node
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 6
-    * set :buildBlock:silicon 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label89 (h:*label89)
   243 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)
   244 label *label89
   245 jump *label84 always
 
   248 multilabel *label88 (m:marker7)
   249 label *label87
   250 label *label84
+  251 op add :buildBlockFromCfg.8:y .coreY 0
+  252 set :buildBlock:block @unloader
+  253 set :buildBlock:x :buildBlockFromCfg.7:x
+  254 set :buildBlock:y :buildBlockFromCfg.8:y
+  255 set :buildBlock:copper 0
+  256 set :buildBlock:lead 0
+  257 set :buildBlock:silicon 30
+  258 set :buildBlock:titanium 25
+  259 setaddr :buildBlock*retaddr *label95 (h:*label95)
   260 label *label91
-    * op add :buildBlockFromCfg.8:y .coreY 0
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label95 (h:*label95)
   261 call *label26 *invalid :buildBlock*retval (m:*label95) (h:*label95)
   262 label *label95
   263 set *tmp144 :buildBlock*retval
 
   268 label *label93
   269 label *label90
   270 write *tmp144 *tmp136 ".unloader2"
+  271 op add :buildBlockFromCfg.9:x .coreX -3
+  272 op add :buildBlockFromCfg.9:y .coreY -2
+  273 set :buildBlock:block @air-factory
+  274 set :buildBlock:x :buildBlockFromCfg.9:x
+  275 set :buildBlock:y :buildBlockFromCfg.9:y
+  276 set :buildBlock:copper 60
+  277 set :buildBlock:lead 70
+  278 set :buildBlock:silicon 0
+  279 set :buildBlock:titanium 0
+  280 set :buildBlock:rotation 3
+  281 set :buildBlock:config @mono
+  282 setaddr :buildBlock*retaddr *label101 (h:*label101)
   283 label *label97
-    * op add :buildBlockFromCfg.9:x .coreX -3
-    * op add :buildBlockFromCfg.9:y .coreY -2
-    * set :buildBlock:block @air-factory
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 70
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:rotation 3
-    * set :buildBlock:config @mono
-    * setaddr :buildBlock*retaddr *label101 (h:*label101)
   284 call *label26 *invalid :buildBlock*retval (m:*label101) (h:*label101)
   285 label *label101
   286 set *tmp148 :buildBlock*retval
 
   331 set .graphiteSurplus 60
   332 set .siliconSurplus 100
   333 set .metaglassSurplus 60
+  334 op add :buildBlockFromCfg.10:x .coreX 2
+  335 set :buildBlock:block @unloader
+  336 set :buildBlock:x :buildBlockFromCfg.10:x
+  337 set :buildBlock:y :buildBlockFromCfg.7:y
+  338 set :buildBlock:copper 0
+  339 set :buildBlock:lead 0
+  340 set :buildBlock:silicon 30
+  341 set :buildBlock:titanium 25
+  342 set :buildBlock:rotation 0
+  343 set :buildBlock:config null
+  344 setaddr :buildBlock*retaddr *label115 (h:*label115)
   345 label *label111
-    * op add :buildBlockFromCfg.10:x .coreX 2
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label115 (h:*label115)
   346 call *label26 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   347 label *label115
   348 jump *label110 always
 
   351 multilabel *label114 (m:marker10)
   352 label *label113
   353 label *label110
+  354 set :buildBlock:block @junction
+  355 set :buildBlock:x :buildBlockFromCfg.10:x
+  356 set :buildBlock:y :buildBlockFromCfg.8:y
+  357 set :buildBlock:copper 3
+  358 set :buildBlock:silicon 0
+  359 set :buildBlock:titanium 0
+  360 setaddr :buildBlock*retaddr *label121 (h:*label121)
   361 label *label117
-    * set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 3
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label121 (h:*label121)
   362 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   363 label *label121
   364 jump *label116 always
 
   367 multilabel *label120 (m:marker11)
   368 label *label119
   369 label *label116
+  370 op add :buildBlockFromCfg.12:x .coreX 3
+  371 set :buildBlock:block @inverted-sorter
+  372 set :buildBlock:x :buildBlockFromCfg.12:x
+  373 set :buildBlock:y :buildBlockFromCfg.8:y
+  374 set :buildBlock:copper 2
+  375 set :buildBlock:lead 2
+  376 set :buildBlock:config @metaglass
+  377 setaddr :buildBlock*retaddr *label127 (h:*label127)
   378 label *label123
-    * op add :buildBlockFromCfg.12:x .coreX 3
-    * set :buildBlock:block @inverted-sorter
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * set :buildBlock:config @metaglass
-    * setaddr :buildBlock*retaddr *label127 (h:*label127)
   379 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   380 label *label127
   381 jump *label122 always
 
   384 multilabel *label126 (m:marker12)
   385 label *label125
   386 label *label122
+  387 op add :buildBlockFromCfg.13:x .coreX 3.5
+  388 op add :buildBlockFromCfg.13:y .coreY 1.5
+  389 set :buildBlock:block @kiln
+  390 set :buildBlock:x :buildBlockFromCfg.13:x
+  391 set :buildBlock:y :buildBlockFromCfg.13:y
+  392 set :buildBlock:copper 60
+  393 set :buildBlock:lead 30
+  394 set :buildBlock:graphite 30
+  395 set :buildBlock:config null
+  396 setaddr :buildBlock*retaddr *label133 (h:*label133)
   397 label *label129
-    * op add :buildBlockFromCfg.13:x .coreX 3.5
-    * op add :buildBlockFromCfg.13:y .coreY 1.5
-    * set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label133 (h:*label133)
   398 call *label26 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   399 label *label133
   400 set *tmp168 :buildBlock*retval
 
   405 label *label131
   406 label *label128
   407 write *tmp168 *tmp136 ".kiln"
+  408 op add :buildBlockFromCfg.14:x .coreX -3.5
+  409 op add :buildBlockFromCfg.14:y .coreY 3.5
+  410 set :buildBlock:block @water-extractor
+  411 set :buildBlock:x :buildBlockFromCfg.14:x
+  412 set :buildBlock:y :buildBlockFromCfg.14:y
+  413 set :buildBlock:copper 30
+  414 set :buildBlock:metaglass 30
+  415 setaddr :buildBlock*retaddr *label139 (h:*label139)
   416 label *label135
-    * op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 3.5
-    * set :buildBlock:block @water-extractor
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:metaglass 30
-    * setaddr :buildBlock*retaddr *label139 (h:*label139)
   417 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   418 label *label139
   419 jump *label134 always
 
   422 multilabel *label138 (m:marker14)
   423 label *label137
   424 label *label134
+  425 set :buildBlock:block @overflow-gate
+  426 set :buildBlock:x :buildBlockFromCfg.9:x
+  427 set :buildBlock:y :buildBlockFromCfg.8:y
+  428 set :buildBlock:copper 4
+  429 set :buildBlock:lead 2
+  430 set :buildBlock:graphite 0
+  431 set :buildBlock:metaglass 0
+  432 setaddr :buildBlock*retaddr *label145 (h:*label145)
   433 label *label141
-    * set :buildBlock:block @overflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:metaglass 0
-    * setaddr :buildBlock*retaddr *label145 (h:*label145)
   434 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   435 label *label145
   436 jump *label140 always
 
   439 multilabel *label144 (m:marker15)
   440 label *label143
   441 label *label140
+  442 set :buildBlock:block @steam-generator
+  443 set :buildBlock:x :buildBlockFromCfg.14:x
+  444 set :buildBlock:y :buildBlockFromCfg.13:y
+  445 set :buildBlock:copper 35
+  446 set :buildBlock:lead 40
+  447 set :buildBlock:graphite 25
+  448 set :buildBlock:silicon 30
+  449 setaddr :buildBlock*retaddr *label151 (h:*label151)
   450 label *label147
-    * set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper 35
-    * set :buildBlock:lead 40
-    * set :buildBlock:graphite 25
-    * set :buildBlock:silicon 30
-    * setaddr :buildBlock*retaddr *label151 (h:*label151)
   451 call *label26 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   452 label *label151
   453 set *tmp180 :buildBlock*retval
 
   458 label *label149
   459 label *label146
   460 write *tmp180 *tmp136 ".generator2"
+  461 op add :buildBlockFromCfg.17:y .coreY -5
+  462 set :buildBlock:block @payload-router
+  463 set :buildBlock:x :buildBlockFromCfg.9:x
+  464 set :buildBlock:y :buildBlockFromCfg.17:y
+  465 set :buildBlock:copper 10
+  466 set :buildBlock:lead 0
+  467 set :buildBlock:graphite 15
+  468 set :buildBlock:silicon 0
+  469 setaddr :buildBlock*retaddr *label157 (h:*label157)
   470 label *label153
-    * op add :buildBlockFromCfg.17:y .coreY -5
-    * set :buildBlock:block @payload-router
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.17:y
-    * set :buildBlock:copper 10
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 15
-    * set :buildBlock:silicon 0
-    * setaddr :buildBlock*retaddr *label157 (h:*label157)
   471 call *label26 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   472 label *label157
   473 set *tmp184 :buildBlock*retval
 
   478 label *label155
   479 label *label152
   480 write *tmp184 *tmp136 ".payloadRouter"
+  481 set :buildBlock:block @unloader
+  482 set :buildBlock:x :buildBlockFromCfg.1:x
+  483 set :buildBlock:y :buildBlockFromCfg.9:y
+  484 set :buildBlock:copper 0
+  485 set :buildBlock:graphite 0
+  486 set :buildBlock:silicon 30
+  487 set :buildBlock:titanium 25
+  488 setaddr :buildBlock*retaddr *label163 (h:*label163)
   489 label *label159
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * setaddr :buildBlock*retaddr *label163 (h:*label163)
   490 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   491 label *label163
   492 jump *label158 always
 
   495 multilabel *label162 (m:marker18)
   496 label *label161
   497 label *label158
+  498 op add :buildBlockFromCfg.19:y .coreY -3
+  499 set :buildBlock:block @underflow-gate
+  500 set :buildBlock:x :buildBlockFromCfg.1:x
+  501 set :buildBlock:y :buildBlockFromCfg.19:y
+  502 set :buildBlock:copper 4
+  503 set :buildBlock:lead 2
+  504 set :buildBlock:silicon 0
+  505 set :buildBlock:titanium 0
+  506 setaddr :buildBlock*retaddr *label169 (h:*label169)
   507 label *label165
-    * op add :buildBlockFromCfg.19:y .coreY -3
-    * set :buildBlock:block @underflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.19:y
-    * set :buildBlock:copper 4
-    * set :buildBlock:lead 2
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * setaddr :buildBlock*retaddr *label169 (h:*label169)
   508 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   509 label *label169
   510 jump *label164 always
 
   513 multilabel *label168 (m:marker19)
   514 label *label167
   515 label *label164
+  516 set :buildBlock:block @additive-reconstructor
+  517 set :buildBlock:x :buildBlockFromCfg.1:x
+  518 set :buildBlock:y :buildBlockFromCfg.17:y
+  519 set :buildBlock:copper 200
+  520 set :buildBlock:lead 120
+  521 set :buildBlock:silicon 90
+  522 setaddr :buildBlock*retaddr *label175 (h:*label175)
   523 label *label171
-    * set :buildBlock:block @additive-reconstructor
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.17:y
-    * set :buildBlock:copper 200
-    * set :buildBlock:lead 120
-    * set :buildBlock:silicon 90
-    * setaddr :buildBlock*retaddr *label175 (h:*label175)
   524 call *label26 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   525 label *label175
   526 set *tmp196 :buildBlock*retval
 
   795 label *label5
   796 write "Moving..." .display ".status3"
   797 label *label240
+  798 op sub *tmp241 :moveTo:radius 0.5
   799 label *label241
   800 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239
   801 jump *label243 notEqual *tmp239 false
-    * op sub *tmp241 :moveTo:radius 0.5
   802 ucontrol approach :moveTo:x :moveTo:y *tmp241
   803 label *label242
   804 jump *label241 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
  1126 label *label339
  1127 label *label308
  1128 label *label309
+ 1129 set *tmp341 100
  1130 sensor *tmp339 .core @titanium
-    * jump *label348 greaterThanEq *tmp339 .targetTitanium
+ 1131 jump *label349 greaterThanEq *tmp339 .targetTitanium
  1132 sensor *tmp342 .core @titanium
  1133 op sub *tmp343 .targetTitanium *tmp342
  1134 op min *tmp341 7 *tmp343
  1135 jump *label349 always
-    * label *label348
-    * set *tmp341 100
  1136 label *label349
  1137 sensor *tmp345 .titaniumDrill @titanium
  1138 jump *label350 greaterThanEq *tmp345 *tmp341
 
  1154 label *label360
  1155 sensor :supplyBase0:coal .core @coal
  1156 sensor :supplyBase0:sand .core @sand
-    * jump *label361 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp360 @coal
+ 1157 set :mineOre.1:ore @sand
+ 1158 jump *label362 greaterThanEq :supplyBase0:coal :supplyBase0:sand
+ 1159 set :mineOre.1:ore @coal
  1160 jump *label362 always
-    * label *label361
-    * set *tmp360 @sand
  1161 label *label362
-    * set :mineOre.1:ore *tmp360
  1162 setaddr :mineOre.1*retaddr *label363 (h:*label363)
  1163 call *label12 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
  1164 label *label363
 
  1199 label *label376
  1200 sensor :supplyBase0:coal.1 .core @coal
  1201 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label377 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp374 @coal
+ 1202 set :mineOre.1:ore @sand
+ 1203 jump *label378 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
+ 1204 set :mineOre.1:ore @coal
  1205 jump *label378 always
-    * label *label377
-    * set *tmp374 @sand
  1206 label *label378
-    * set :mineOre.1:ore *tmp374
  1207 setaddr :mineOre.1*retaddr *label379 (h:*label379)
  1208 call *label12 *invalid :mineOre.1*retval (m:*label379) (h:*label379)
  1209 label *label379

Modifications by Unroll iteration loop at CoreBuilder.mnd:254:5 (-2 instructions):
 
  1286 end
  1287 label *label22
  1288 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp395 *label407
-    * jump *label404 always
-    * multilabel *label407 (m:marker21)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp395 *label408
-    * jump *label404 always
-    * multilabel *label408 (m:marker21)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp395 *label409
-    * jump *label404 always
-    * multilabel *label409 (m:marker21)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp395 *label410
-    * jump *label404 always
-    * multilabel *label410 (m:marker21)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp395 *label411
-    * jump *label404 always
-    * multilabel *label411 (m:marker21)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp395 *label412
-    * label *label404
-    * op sign *tmp396 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp396
-    * label *label405
-    * multijump *tmp395 0 0 (m:marker21)
-    * multilabel *label412 (m:marker21)
-    * label *label406
+ 1289 set :meetTarget:t :meetTarget:copper
+ 1290 label *label447
+ 1291 op sign *tmp396 :meetTarget:t
+ 1292 op add :meetTarget:count :meetTarget:count *tmp396
+ 1293 label *label448
+ 1294 set :meetTarget:t :meetTarget:lead
+ 1295 label *label451
+ 1296 op sign *tmp396 :meetTarget:t
+ 1297 op add :meetTarget:count :meetTarget:count *tmp396
+ 1298 label *label452
+ 1299 set :meetTarget:t :meetTarget:graphite
+ 1300 label *label455
+ 1301 op sign *tmp396 :meetTarget:t
+ 1302 op add :meetTarget:count :meetTarget:count *tmp396
+ 1303 label *label456
+ 1304 set :meetTarget:t :meetTarget:silicon
+ 1305 label *label459
+ 1306 op sign *tmp396 :meetTarget:t
+ 1307 op add :meetTarget:count :meetTarget:count *tmp396
+ 1308 label *label460
+ 1309 set :meetTarget:t :meetTarget:titanium
+ 1310 label *label463
+ 1311 op sign *tmp396 :meetTarget:t
+ 1312 op add :meetTarget:count :meetTarget:count *tmp396
+ 1313 label *label464
+ 1314 set :meetTarget:t :meetTarget:metaglass
+ 1315 label *label467
+ 1316 op sign *tmp396 :meetTarget:t
+ 1317 op add :meetTarget:count :meetTarget:count *tmp396
+ 1318 label *label468
+ 1319 label *label406
  1320 write :meetTarget:count .display ".totalTargets"
  1321 write :meetTarget:block .display ".nextBlock"
  1322 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1288 set :meetTarget:count 0
  1289 set :meetTarget:t :meetTarget:copper
  1290 label *label447
-    * op sign *tmp396 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp396
+ 1291 op sign *tmp396 :meetTarget:copper
+ 1292 op add :meetTarget:count 0 *tmp396
  1293 label *label448
  1294 set :meetTarget:t :meetTarget:lead
  1295 label *label451
-    * op sign *tmp396 :meetTarget:t
+ 1296 op sign *tmp396 :meetTarget:lead
  1297 op add :meetTarget:count :meetTarget:count *tmp396
  1298 label *label452
  1299 set :meetTarget:t :meetTarget:graphite
  1300 label *label455
-    * op sign *tmp396 :meetTarget:t
+ 1301 op sign *tmp396 :meetTarget:graphite
  1302 op add :meetTarget:count :meetTarget:count *tmp396
  1303 label *label456
  1304 set :meetTarget:t :meetTarget:silicon
  1305 label *label459
-    * op sign *tmp396 :meetTarget:t
+ 1306 op sign *tmp396 :meetTarget:silicon
  1307 op add :meetTarget:count :meetTarget:count *tmp396
  1308 label *label460
  1309 set :meetTarget:t :meetTarget:titanium
  1310 label *label463
-    * op sign *tmp396 :meetTarget:t
+ 1311 op sign *tmp396 :meetTarget:titanium
  1312 op add :meetTarget:count :meetTarget:count *tmp396
  1313 label *label464
  1314 set :meetTarget:t :meetTarget:metaglass
  1315 label *label467
-    * op sign *tmp396 :meetTarget:t
+ 1316 op sign *tmp396 :meetTarget:metaglass
  1317 op add :meetTarget:count :meetTarget:count *tmp396
  1318 label *label468
  1319 label *label406

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
  1285 return :targetMet*retaddr
  1286 end
  1287 label *label22
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1288 label *label447
  1289 op sign *tmp396 :meetTarget:copper
  1290 op add :meetTarget:count 0 *tmp396
  1291 label *label448
-    * set :meetTarget:t :meetTarget:lead
  1292 label *label451
  1293 op sign *tmp396 :meetTarget:lead
  1294 op add :meetTarget:count :meetTarget:count *tmp396
  1295 label *label452
-    * set :meetTarget:t :meetTarget:graphite
  1296 label *label455
  1297 op sign *tmp396 :meetTarget:graphite
  1298 op add :meetTarget:count :meetTarget:count *tmp396
  1299 label *label456
-    * set :meetTarget:t :meetTarget:silicon
  1300 label *label459
  1301 op sign *tmp396 :meetTarget:silicon
  1302 op add :meetTarget:count :meetTarget:count *tmp396
  1303 label *label460
-    * set :meetTarget:t :meetTarget:titanium
  1304 label *label463
  1305 op sign *tmp396 :meetTarget:titanium
  1306 op add :meetTarget:count :meetTarget:count *tmp396
  1307 label *label464
-    * set :meetTarget:t :meetTarget:metaglass
  1308 label *label467
  1309 op sign *tmp396 :meetTarget:metaglass
  1310 op add :meetTarget:count :meetTarget:count *tmp396

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-6 instructions):
 
   174 setaddr :buildBlockAt*retaddr *label71 (h:*label71)
   175 call *label25 *invalid :buildBlockAt*retval (m:*label71) (h:*label71)
   176 label *label71
-    * jump *label64 always
   177 label *label64
   178 set .titaniumDrill :buildBlockAt*retval
   179 write :buildBlockAt*retval processor1 ".titaniumDrill"
 
  1131 sensor *tmp342 .core @titanium
  1132 op sub *tmp343 .targetTitanium *tmp342
  1133 op min *tmp341 7 *tmp343
-    * jump *label349 always
  1134 label *label349
  1135 sensor *tmp345 .titaniumDrill @titanium
  1136 jump *label350 greaterThanEq *tmp345 *tmp341
 
  1155 set :mineOre.1:ore @sand
  1156 jump *label362 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1157 set :mineOre.1:ore @coal
-    * jump *label362 always
  1158 label *label362
  1159 setaddr :mineOre.1*retaddr *label363 (h:*label363)
  1160 call *label12 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
 
  1199 set :mineOre.1:ore @sand
  1200 jump *label378 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1201 set :mineOre.1:ore @coal
-    * jump *label378 always
  1202 label *label378
  1203 setaddr :mineOre.1*retaddr *label379 (h:*label379)
  1204 call *label12 *invalid :mineOre.1*retval (m:*label379) (h:*label379)
 
  1409 call *label24 *invalid :logBlock*retval (m:*label437) (h:*label437)
  1410 label *label437
  1411 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label422 always
  1412 label *label422
  1413 return :buildBlockAt*retaddr
  1414 end
 
  1433 call *label25 *invalid :buildBlockAt*retval (m:*label440) (h:*label440)
  1434 label *label440
  1435 set :buildBlock*retval :buildBlockAt*retval
-    * jump *label438 always
  1436 label *label438
  1437 return :buildBlock*retaddr
  1438 end

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
    61 label *label37
    62 label *label34
    63 set .press *tmp97
-    * op add :buildBlockFromCfg.1:x .coreX 0
+   64 set :buildBlockFromCfg.1:x .coreX
    65 op add :buildBlockFromCfg.1:y .coreY 4
    66 set :buildBlock:block @battery
    67 set :buildBlock:x :buildBlockFromCfg.1:x
 
   247 multilabel *label88 (m:marker7)
   248 label *label87
   249 label *label84
-    * op add :buildBlockFromCfg.8:y .coreY 0
+  250 set :buildBlockFromCfg.8:y .coreY
   251 set :buildBlock:block @unloader
   252 set :buildBlock:x :buildBlockFromCfg.7:x
   253 set :buildBlock:y :buildBlockFromCfg.8:y
 
  1283 label *label22
  1284 label *label447
  1285 op sign *tmp396 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp396
+ 1286 set :meetTarget:count *tmp396
  1287 label *label448
  1288 label *label451
  1289 op sign *tmp396 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1282 end
  1283 label *label22
  1284 label *label447
-    * op sign *tmp396 :meetTarget:copper
-    * set :meetTarget:count *tmp396
+ 1285 op sign :meetTarget:count :meetTarget:copper
  1286 label *label448
  1287 label *label451
  1288 op sign *tmp396 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 2:
 
    64 set :buildBlockFromCfg.1:x .coreX
    65 op add :buildBlockFromCfg.1:y .coreY 4
    66 set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   67 set :buildBlock:x .coreX
    68 set :buildBlock:y :buildBlockFromCfg.1:y
    69 set :buildBlock:copper 5
    70 set :buildBlock:lead 20
 
    95 label *label46
    96 op add :buildBlockFromCfg.3:y .coreY 3
    97 set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+   98 set :buildBlock:x .coreX
    99 set :buildBlock:y :buildBlockFromCfg.3:y
   100 set :buildBlock:copper 25
   101 set :buildBlock:lead 15
 
   179 write :buildBlockAt*retval processor1 ".titaniumDrill"
   180 op add :buildBlockFromCfg.5:y .coreY 2
   181 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  182 set :buildBlock:x .coreX
   183 set :buildBlock:y :buildBlockFromCfg.5:y
   184 set :buildBlock:copper 0
   185 set :buildBlock:lead 0
 
   250 set :buildBlockFromCfg.8:y .coreY
   251 set :buildBlock:block @unloader
   252 set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  253 set :buildBlock:y .coreY
   254 set :buildBlock:copper 0
   255 set :buildBlock:lead 0
   256 set :buildBlock:silicon 30
 
   352 label *label110
   353 set :buildBlock:block @junction
   354 set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  355 set :buildBlock:y .coreY
   356 set :buildBlock:copper 3
   357 set :buildBlock:silicon 0
   358 set :buildBlock:titanium 0
 
   369 op add :buildBlockFromCfg.12:x .coreX 3
   370 set :buildBlock:block @inverted-sorter
   371 set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  372 set :buildBlock:y .coreY
   373 set :buildBlock:copper 2
   374 set :buildBlock:lead 2
   375 set :buildBlock:config @metaglass
 
   423 label *label134
   424 set :buildBlock:block @overflow-gate
   425 set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
+  426 set :buildBlock:y .coreY
   427 set :buildBlock:copper 4
   428 set :buildBlock:lead 2
   429 set :buildBlock:graphite 0
 
   478 label *label152
   479 write *tmp184 *tmp136 ".payloadRouter"
   480 set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  481 set :buildBlock:x .coreX
   482 set :buildBlock:y :buildBlockFromCfg.9:y
   483 set :buildBlock:copper 0
   484 set :buildBlock:graphite 0
 
   496 label *label158
   497 op add :buildBlockFromCfg.19:y .coreY -3
   498 set :buildBlock:block @underflow-gate
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  499 set :buildBlock:x .coreX
   500 set :buildBlock:y :buildBlockFromCfg.19:y
   501 set :buildBlock:copper 4
   502 set :buildBlock:lead 2
 
   513 label *label167
   514 label *label164
   515 set :buildBlock:block @additive-reconstructor
-    * set :buildBlock:x :buildBlockFromCfg.1:x
+  516 set :buildBlock:x .coreX
   517 set :buildBlock:y :buildBlockFromCfg.17:y
   518 set :buildBlock:copper 200
   519 set :buildBlock:lead 120

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 3 (-2 instructions):
 
    61 label *label37
    62 label *label34
    63 set .press *tmp97
-    * set :buildBlockFromCfg.1:x .coreX
    64 op add :buildBlockFromCfg.1:y .coreY 4
    65 set :buildBlock:block @battery
    66 set :buildBlock:x .coreX
 
   246 multilabel *label88 (m:marker7)
   247 label *label87
   248 label *label84
-    * set :buildBlockFromCfg.8:y .coreY
   249 set :buildBlock:block @unloader
   250 set :buildBlock:x :buildBlockFromCfg.7:x
   251 set :buildBlock:y .coreY

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    14 ubind @poly
    15 set .builder @unit
    16 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label29
    17 jump *label28 equal .core null
-    * label *label30
    18 set .display processor1
    19 set :findUnits:type @flare
    20 setaddr :findUnits*retaddr *label31 (h:*label31)
 
    48 set :buildBlock:rotation 0
    49 set :buildBlock:config null
    50 setaddr :buildBlock*retaddr *label39 (h:*label39)
-    * label *label35
    51 call *label26 *invalid :buildBlock*retval (m:*label39) (h:*label39)
    52 label *label39
    53 set *tmp97 :buildBlock*retval
    54 jump *label34 always
-    * label *label36
    55 multijump *tmp98 0 0 (m:marker0)
    56 multilabel *label38 (m:marker0)
-    * label *label37
    57 label *label34
    58 set .press *tmp97
    59 op add :buildBlockFromCfg.1:y .coreY 4
 
    63 set :buildBlock:copper 5
    64 set :buildBlock:lead 20
    65 setaddr :buildBlock*retaddr *label45 (h:*label45)
-    * label *label41
    66 call *label26 *invalid :buildBlock*retval (m:*label45) (h:*label45)
    67 label *label45
    68 set *tmp101 :buildBlock*retval
    69 jump *label40 always
-    * label *label42
    70 multijump *tmp102 0 0 (m:marker1)
    71 multilabel *label44 (m:marker1)
-    * label *label43
    72 label *label40
    73 set .battery *tmp101
    74 op add :buildBlockFromCfg.2:x .coreX -1
    75 set :buildBlock:x :buildBlockFromCfg.2:x
    76 set :buildBlock:y :buildBlockFromCfg.1:y
    77 setaddr :buildBlock*retaddr *label51 (h:*label51)
-    * label *label47
    78 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
    79 label *label51
    80 jump *label46 always
-    * label *label48
    81 multijump *tmp106 0 0 (m:marker2)
    82 multilabel *label50 (m:marker2)
-    * label *label49
    83 label *label46
    84 op add :buildBlockFromCfg.3:y .coreY 3
    85 set :buildBlock:block @combustion-generator
 
    88 set :buildBlock:copper 25
    89 set :buildBlock:lead 15
    90 setaddr :buildBlock*retaddr *label57 (h:*label57)
-    * label *label53
    91 call *label26 *invalid :buildBlock*retval (m:*label57) (h:*label57)
    92 label *label57
    93 set *tmp109 :buildBlock*retval
    94 jump *label52 always
-    * label *label54
    95 multijump *tmp110 0 0 (m:marker3)
    96 multilabel *label56 (m:marker3)
-    * label *label55
    97 label *label52
    98 set .generator *tmp109
    99 set .powerTarget 400
 
   104 set :buildBlock:copper 30
   105 set :buildBlock:lead 25
   106 setaddr :buildBlock*retaddr *label63 (h:*label63)
-    * label *label59
   107 call *label26 *invalid :buildBlock*retval (m:*label63) (h:*label63)
   108 label *label63
   109 set *tmp113 :buildBlock*retval
   110 jump *label58 always
-    * label *label60
   111 multijump *tmp114 0 0 (m:marker4)
   112 multilabel *label62 (m:marker4)
-    * label *label61
   113 label *label58
   114 set .smelter *tmp113
   115 set :meetTarget:block @pneumatic-drill
 
   122 setaddr :meetTarget*retaddr *label66 (h:*label66)
   123 call *label22 *invalid :meetTarget*retval (m:*label66) (h:*label66)
   124 label *label66
-    * label *label65
   125 write @titanium processor1 ".nextBlock"
   126 write .coreX processor4 ":findDrillLocation:x"
   127 write .coreY processor4 ":findDrillLocation:y"
 
   142 jump *label68 notEqual :buildTitaniumDrill:result false
   143 set .ERROR "Cannot locate spot for titanium drill"
   144 stop
-    * label *label70
   145 label *label68
-    * label *label69
   146 write @pneumatic-drill processor1 ".nextBlock"
   147 set :buildBlockAt:block @pneumatic-drill
   148 set :buildBlockAt:x :buildTitaniumDrill:dx
 
   153 setaddr :buildBlockAt*retaddr *label71 (h:*label71)
   154 call *label25 *invalid :buildBlockAt*retval (m:*label71) (h:*label71)
   155 label *label71
-    * label *label64
   156 set .titaniumDrill :buildBlockAt*retval
   157 write :buildBlockAt*retval processor1 ".titaniumDrill"
   158 op add :buildBlockFromCfg.5:y .coreY 2
 
   164 set :buildBlock:silicon 30
   165 set :buildBlock:titanium 25
   166 setaddr :buildBlock*retaddr *label77 (h:*label77)
-    * label *label73
   167 call *label26 *invalid :buildBlock*retval (m:*label77) (h:*label77)
   168 label *label77
   169 set *tmp132 :buildBlock*retval
   170 jump *label72 always
-    * label *label74
   171 multijump *tmp133 0 0 (m:marker5)
   172 multilabel *label76 (m:marker5)
-    * label *label75
   173 label *label72
   174 set .unloader1 *tmp132
   175 op add :buildBlockFromCfg.6:x .coreX 1
 
   181 set :buildBlock:silicon 50
   182 set :buildBlock:titanium 0
   183 setaddr :buildBlock*retaddr *label83 (h:*label83)
-    * label *label79
   184 set :buildBlock:config processor2
   185 call *label26 *invalid :buildBlock*retval (m:*label83) (h:*label83)
   186 label *label83
   187 set *tmp136 :buildBlock*retval
   188 jump *label78 always
-    * label *label80
   189 multijump *tmp137 0 0 (m:marker6)
   190 multilabel *label82 (m:marker6)
-    * label *label81
   191 label *label78
   192 set .controller *tmp136
   193 write processor1 *tmp136 ".display"
 
   210 set :buildBlock:silicon 0
   211 set :buildBlock:config null
   212 setaddr :buildBlock*retaddr *label89 (h:*label89)
-    * label *label85
   213 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)
   214 label *label89
   215 jump *label84 always
-    * label *label86
   216 multijump *tmp141 0 0 (m:marker7)
   217 multilabel *label88 (m:marker7)
-    * label *label87
   218 label *label84
   219 set :buildBlock:block @unloader
   220 set :buildBlock:x :buildBlockFromCfg.7:x
 
   224 set :buildBlock:silicon 30
   225 set :buildBlock:titanium 25
   226 setaddr :buildBlock*retaddr *label95 (h:*label95)
-    * label *label91
   227 call *label26 *invalid :buildBlock*retval (m:*label95) (h:*label95)
   228 label *label95
   229 set *tmp144 :buildBlock*retval
   230 jump *label90 always
-    * label *label92
   231 multijump *tmp145 0 0 (m:marker8)
   232 multilabel *label94 (m:marker8)
-    * label *label93
   233 label *label90
   234 write *tmp144 *tmp136 ".unloader2"
   235 op add :buildBlockFromCfg.9:x .coreX -3
 
   244 set :buildBlock:rotation 3
   245 set :buildBlock:config @mono
   246 setaddr :buildBlock*retaddr *label101 (h:*label101)
-    * label *label97
   247 call *label26 *invalid :buildBlock*retval (m:*label101) (h:*label101)
   248 label *label101
   249 set *tmp148 :buildBlock*retval
   250 jump *label96 always
-    * label *label98
   251 multijump *tmp149 0 0 (m:marker9)
   252 multilabel *label100 (m:marker9)
-    * label *label99
   253 label *label96
   254 write *tmp148 *tmp136 ".factory"
   255 write *tmp148 processor1 ".factory"
 
   275 write null processor1 ".nextBlock"
   276 write 0 *tmp136 ".leadReserve"
   277 write 0 *tmp136 ".siliconReserve"
-    * label *label102
   278 label *label104
   279 setaddr :supplyBase*retaddr *label107 (h:*label107)
   280 call *label20 *invalid :supplyBase*retval (m:*label107) (h:*label107)
 
   283 jump *label108 greaterThanEq *tmp152 300
   284 jump *label106 always
   285 label *label108
-    * label *label109
-    * label *label105
   286 read *tmp39 *tmp136 ".monos"
   287 jump *label104 lessThan *tmp39 3
   288 label *label106
 
   300 set :buildBlock:rotation 0
   301 set :buildBlock:config null
   302 setaddr :buildBlock*retaddr *label115 (h:*label115)
-    * label *label111
   303 call *label26 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   304 label *label115
   305 jump *label110 always
-    * label *label112
   306 multijump *tmp157 0 0 (m:marker10)
   307 multilabel *label114 (m:marker10)
-    * label *label113
   308 label *label110
   309 set :buildBlock:block @junction
   310 set :buildBlock:x :buildBlockFromCfg.10:x
 
   313 set :buildBlock:silicon 0
   314 set :buildBlock:titanium 0
   315 setaddr :buildBlock*retaddr *label121 (h:*label121)
-    * label *label117
   316 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   317 label *label121
   318 jump *label116 always
-    * label *label118
   319 multijump *tmp161 0 0 (m:marker11)
   320 multilabel *label120 (m:marker11)
-    * label *label119
   321 label *label116
   322 op add :buildBlockFromCfg.12:x .coreX 3
   323 set :buildBlock:block @inverted-sorter
 
   327 set :buildBlock:lead 2
   328 set :buildBlock:config @metaglass
   329 setaddr :buildBlock*retaddr *label127 (h:*label127)
-    * label *label123
   330 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   331 label *label127
   332 jump *label122 always
-    * label *label124
   333 multijump *tmp165 0 0 (m:marker12)
   334 multilabel *label126 (m:marker12)
-    * label *label125
   335 label *label122
   336 op add :buildBlockFromCfg.13:x .coreX 3.5
   337 op add :buildBlockFromCfg.13:y .coreY 1.5
 
   343 set :buildBlock:graphite 30
   344 set :buildBlock:config null
   345 setaddr :buildBlock*retaddr *label133 (h:*label133)
-    * label *label129
   346 call *label26 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   347 label *label133
   348 set *tmp168 :buildBlock*retval
   349 jump *label128 always
-    * label *label130
   350 multijump *tmp169 0 0 (m:marker13)
   351 multilabel *label132 (m:marker13)
-    * label *label131
   352 label *label128
   353 write *tmp168 *tmp136 ".kiln"
   354 op add :buildBlockFromCfg.14:x .coreX -3.5
 
   359 set :buildBlock:copper 30
   360 set :buildBlock:metaglass 30
   361 setaddr :buildBlock*retaddr *label139 (h:*label139)
-    * label *label135
   362 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   363 label *label139
   364 jump *label134 always
-    * label *label136
   365 multijump *tmp173 0 0 (m:marker14)
   366 multilabel *label138 (m:marker14)
-    * label *label137
   367 label *label134
   368 set :buildBlock:block @overflow-gate
   369 set :buildBlock:x :buildBlockFromCfg.9:x
 
   373 set :buildBlock:graphite 0
   374 set :buildBlock:metaglass 0
   375 setaddr :buildBlock*retaddr *label145 (h:*label145)
-    * label *label141
   376 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   377 label *label145
   378 jump *label140 always
-    * label *label142
   379 multijump *tmp177 0 0 (m:marker15)
   380 multilabel *label144 (m:marker15)
-    * label *label143
   381 label *label140
   382 set :buildBlock:block @steam-generator
   383 set :buildBlock:x :buildBlockFromCfg.14:x
 
   387 set :buildBlock:graphite 25
   388 set :buildBlock:silicon 30
   389 setaddr :buildBlock*retaddr *label151 (h:*label151)
-    * label *label147
   390 call *label26 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   391 label *label151
   392 set *tmp180 :buildBlock*retval
   393 jump *label146 always
-    * label *label148
   394 multijump *tmp181 0 0 (m:marker16)
   395 multilabel *label150 (m:marker16)
-    * label *label149
   396 label *label146
   397 write *tmp180 *tmp136 ".generator2"
   398 op add :buildBlockFromCfg.17:y .coreY -5
 
   404 set :buildBlock:graphite 15
   405 set :buildBlock:silicon 0
   406 setaddr :buildBlock*retaddr *label157 (h:*label157)
-    * label *label153
   407 call *label26 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   408 label *label157
   409 set *tmp184 :buildBlock*retval
   410 jump *label152 always
-    * label *label154
   411 multijump *tmp185 0 0 (m:marker17)
   412 multilabel *label156 (m:marker17)
-    * label *label155
   413 label *label152
   414 write *tmp184 *tmp136 ".payloadRouter"
   415 set :buildBlock:block @unloader
 
   420 set :buildBlock:silicon 30
   421 set :buildBlock:titanium 25
   422 setaddr :buildBlock*retaddr *label163 (h:*label163)
-    * label *label159
   423 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   424 label *label163
   425 jump *label158 always
-    * label *label160
   426 multijump *tmp189 0 0 (m:marker18)
   427 multilabel *label162 (m:marker18)
-    * label *label161
   428 label *label158
   429 op add :buildBlockFromCfg.19:y .coreY -3
   430 set :buildBlock:block @underflow-gate
 
   435 set :buildBlock:silicon 0
   436 set :buildBlock:titanium 0
   437 setaddr :buildBlock*retaddr *label169 (h:*label169)
-    * label *label165
   438 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   439 label *label169
   440 jump *label164 always
-    * label *label166
   441 multijump *tmp193 0 0 (m:marker19)
   442 multilabel *label168 (m:marker19)
-    * label *label167
   443 label *label164
   444 set :buildBlock:block @additive-reconstructor
   445 set :buildBlock:x .coreX
 
   448 set :buildBlock:lead 120
   449 set :buildBlock:silicon 90
   450 setaddr :buildBlock*retaddr *label175 (h:*label175)
-    * label *label171
   451 call *label26 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   452 label *label175
   453 set *tmp196 :buildBlock*retval
   454 jump *label170 always
-    * label *label172
   455 multijump *tmp197 0 0 (m:marker20)
   456 multilabel *label174 (m:marker20)
-    * label *label173
   457 label *label170
   458 write *tmp196 *tmp136 ".reconstructor"
   459 write *tmp196 processor1 ".reconstructor"
 
   467 setaddr :supplyBase*retaddr *label179 (h:*label179)
   468 call *label20 *invalid :supplyBase*retval (m:*label179) (h:*label179)
   469 label *label179
-    * label *label177
   470 jump *label176 always
   471 label *label178
   472 label *label180
 
   475 setaddr :supplyBase*retaddr *label183 (h:*label183)
   476 call *label20 *invalid :supplyBase*retval (m:*label183) (h:*label183)
   477 label *label183
-    * label *label181
   478 jump *label180 always
   479 label *label182
   480 ubind @flare
   481 jump *label185 notEqual @unit null
   482 jump *label184 always
   483 label *label185
-    * label *label186
   484 set :findFreeUnit:first_unit @unit
   485 label *label187
   486 sensor *tmp205 @unit @controlled
 
   493 jump *label192 notEqual *tmp208 1
   494 set :findFreeUnit:first_unit @unit
   495 label *label192
-    * label *label193
   496 label *label191
   497 ubind @flare
-    * label *label188
   498 jump *label187 notEqual :findFreeUnit:first_unit @unit
-    * label *label189
   499 label *label184
   500 write .coreX processor4 ":layoutThoriumDrill:x"
   501 write .coreY processor4 ":layoutThoriumDrill:y"
 
   508 setaddr :supplyBase*retaddr *label197 (h:*label197)
   509 call *label20 *invalid :supplyBase*retval (m:*label197) (h:*label197)
   510 label *label197
-    * label *label195
   511 read *tmp217 processor4 ":layoutThoriumDrill*finished"
   512 jump *label194 equal *tmp217 false
-    * label *label196
   513 set :meetTarget:block @laser-drill
   514 set :meetTarget:copper 35
   515 set :meetTarget:lead 0
 
   520 setaddr :meetTarget*retaddr *label200 (h:*label200)
   521 call *label22 *invalid :meetTarget*retval (m:*label200) (h:*label200)
   522 label *label200
-    * label *label199
   523 label *label201
   524 wait 1e-15
   525 read *tmp219 processor4 ":layoutThoriumDrill*finished"
 
   528 jump *label202 notEqual :buildThoriumDrill:result false
   529 set .ERROR "Cannot locate spot for thorium drill"
   530 stop
-    * label *label204
   531 label *label202
-    * label *label203
   532 set :buildBlockAt:block @laser-drill
   533 read :buildBlockAt:x processor4 ".drillX"
   534 read :buildBlockAt:y processor4 ".drillY"
 
   543 jump *label206 greaterThanEq *tmp74 0
   544 jump *label198 always
   545 label *label206
-    * label *label207
   546 set :meetTarget:block @water-extractor
   547 set :meetTarget:copper 30
   548 set :meetTarget:lead 30
 
   553 setaddr :meetTarget*retaddr *label209 (h:*label209)
   554 call *label22 *invalid :meetTarget*retval (m:*label209) (h:*label209)
   555 label *label209
-    * label *label208
   556 set :buildBlockAt:block @water-extractor
   557 read *tmp74 processor4 ".water1X"
   558 set :buildBlockAt:x *tmp74
 
   567 jump *label211 greaterThanEq *tmp76 0
   568 jump *label198 always
   569 label *label211
-    * label *label212
   570 set :meetTarget:block @water-extractor
   571 set :meetTarget:copper 30
   572 set :meetTarget:lead 30
 
   577 setaddr :meetTarget*retaddr *label214 (h:*label214)
   578 call *label22 *invalid :meetTarget*retval (m:*label214) (h:*label214)
   579 label *label214
-    * label *label213
   580 set :buildBlockAt:block @water-extractor
   581 read *tmp76 processor4 ".water2X"
   582 set :buildBlockAt:x *tmp76
 
   597 setaddr :meetTarget*retaddr *label217 (h:*label217)
   598 call *label22 *invalid :meetTarget*retval (m:*label217) (h:*label217)
   599 label *label217
-    * label *label216
   600 set :buildBlockAt:block @steam-generator
   601 read :buildBlockAt:x processor4 ".generatorX"
   602 read :buildBlockAt:y processor4 ".generatorY"
 
   617 setaddr :meetTarget*retaddr *label220 (h:*label220)
   618 call *label22 *invalid :meetTarget*retval (m:*label220) (h:*label220)
   619 label *label220
-    * label *label219
   620 set :buildBlockAt:block @power-node
   621 read :buildBlockAt:x processor4 ".nodeX"
   622 read :buildBlockAt:y processor4 ".nodeY"
 
   636 setaddr :meetTarget*retaddr *label223 (h:*label223)
   637 call *label22 *invalid :meetTarget*retval (m:*label223) (h:*label223)
   638 label *label223
-    * label *label222
   639 set :buildBlockAt:block @solar-panel
   640 read :buildBlockAt:x processor4 ".panelX"
   641 read :buildBlockAt:y processor4 ".panelY"
 
   655 setaddr :meetTarget*retaddr *label226 (h:*label226)
   656 call *label22 *invalid :meetTarget*retval (m:*label226) (h:*label226)
   657 label *label226
-    * label *label225
   658 set :buildBlockAt:block @battery
   659 read :buildBlockAt:x processor4 ".batteryX"
   660 read :buildBlockAt:y processor4 ".batteryY"
 
   680 setaddr :supplyBase*retaddr *label232 (h:*label232)
   681 call *label20 *invalid :supplyBase*retval (m:*label232) (h:*label232)
   682 label *label232
-    * label *label230
   683 read *tmp38 *tmp136 ".flares"
   684 read *tmp39 *tmp136 ".monos"
   685 op add *tmp237 *tmp38 *tmp39
   686 jump *label229 lessThan *tmp237 16
-    * label *label231
   687 label *label233
   688 setaddr :supplyBase*retaddr *label236 (h:*label236)
   689 call *label20 *invalid :supplyBase*retval (m:*label236) (h:*label236)
   690 label *label236
-    * label *label234
   691 jump *label233 always
-    * label *label235
   692 ucontrol stop
   693 set .ERROR "Done"
   694 stop
-    * label *label237
   695 end
   696 label *label5
   697 write "Moving..." .display ".status3"
-    * label *label240
   698 op sub *tmp241 :moveTo:radius 0.5
   699 label *label241
   700 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239
   701 jump *label243 notEqual *tmp239 false
   702 ucontrol approach :moveTo:x :moveTo:y *tmp241
-    * label *label242
   703 jump *label241 always
   704 label *label243
-    * label *label239
   705 return :moveTo*retaddr
   706 end
   707 label *label6
 
   711 setaddr :moveTo*retaddr *label245 (h:*label245)
   712 call *label5 *invalid :moveTo*retval (m:*label245) (h:*label245)
   713 label *label245
-    * label *label244
   714 return :moveTo.1*retaddr
   715 end
   716 label *label7
   717 write "Moving..." .display ".status3"
-    * label *label247
   718 label *label248
   719 sensor *tmp244 @unit @firstItem
   720 jump *label251 equal *tmp244 null
   721 ucontrol itemDrop @air 1000
   722 label *label251
-    * label *label252
   723 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label249
   724 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247
   725 jump *label248 equal *tmp247 false
-    * label *label250
-    * label *label246
   726 return :moveToEmpty*retaddr
   727 end
   728 label *label8
 
   734 setaddr :moveTo*retaddr *label254 (h:*label254)
   735 call *label5 *invalid :moveTo*retval (m:*label254) (h:*label254)
   736 label *label254
-    * label *label253
   737 return :moveToBlock*retaddr
   738 end
   739 label *label9
   740 write "Depositing..." .display ".status3"
-    * label *label256
   741 sensor *tmp251 @unit @firstItem
   742 jump *label257 notEqual *tmp251 :depositItems:item
   743 set :moveToBlock:block :depositItems:block
 
   748 sensor :depositItems:cap :depositItems:block @itemCapacity
   749 label *label260
   750 ucontrol itemDrop :depositItems:block 30
-    * label *label261
   751 sensor *tmp255 @unit @firstItem
   752 op mul *tmp256 *tmp255 :depositItems:cap
   753 sensor *tmp257 :depositItems:block :depositItems:item
   754 jump *label260 greaterThan *tmp256 *tmp257
-    * label *label262
   755 jump *label258 always
   756 label *label257
   757 label *label263
   758 sensor *tmp259 @unit @firstItem
   759 jump *label265 equal *tmp259 null
   760 ucontrol itemDrop @air 1000
-    * label *label264
   761 jump *label263 always
   762 label *label265
   763 label *label258
   764 write 0 .display ".transportTarget"
   765 write null .display ".transportItem"
-    * label *label266
-    * label *label255
   766 return :depositItems*retaddr
   767 end
   768 label *label10
 
   770 jump *label268 notEqual *tmp261 false
   771 set .ERROR "Cannot locate ore"
   772 stop
-    * label *label270
   773 label *label268
-    * label *label269
-    * label *label267
   774 return :locateOre*retaddr
   775 end
   776 label *label11
   777 op min :mineOre:amount :mineOre:amount 30
   778 write :mineOre:amount .display ".transportTarget"
   779 write :mineOre:ore .display ".transportItem"
-    * label *label272
   780 set :locateOre:ore :mineOre:ore
   781 setaddr :locateOre*retaddr *label273 (h:*label273)
   782 call *label10 *invalid :locateOre*retval (m:*label273) (h:*label273)
 
   794 sensor *tmp269 @unit @firstItem
   795 jump *label280 equal *tmp269 null
   796 ucontrol itemDrop @air 1000
-    * label *label279
   797 jump *label278 always
   798 label *label280
-    * label *label277
   799 label *label275
-    * label *label276
   800 write "Mining..." .display ".status3"
-    * label *label281
   801 op add :mineOre:stop @second 10
   802 label *label282
   803 sensor :mineOre:item @unit @firstItem
 
   807 jump *label285 equal *tmp275 false
   808 jump *label284 always
   809 label *label285
-    * label *label286
   810 ucontrol mine :mineOre:x :mineOre:y
   811 jump *label287 lessThanEq @second :mineOre:stop
   812 jump *label284 always
   813 label *label287
-    * label *label288
-    * label *label283
   814 sensor *tmp279 @unit @totalItems
   815 jump *label282 lessThan *tmp279 :mineOre:amount
   816 label *label284
 
   820 setaddr :depositItems*retaddr *label289 (h:*label289)
   821 call *label9 *invalid :depositItems*retval (m:*label289) (h:*label289)
   822 label *label289
-    * label *label271
   823 return :mineOre*retaddr
   824 end
   825 label *label12
   826 write "Mining " .display ".status2"
   827 write :mineOre.1:ore .display ".item2"
   828 write "core" .display ".block2"
-    * label *label291
   829 set :mineOre:ore :mineOre.1:ore
   830 set :mineOre:amount 30
   831 set :mineOre:block .core
   832 setaddr :mineOre*retaddr *label292 (h:*label292)
   833 call *label11 *invalid :mineOre*retval (m:*label292) (h:*label292)
   834 label *label292
-    * label *label290
   835 return :mineOre.1*retaddr
   836 end
   837 label *label13
   838 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   839 write :transportStatus.2:target .display ".transportTarget"
   840 write :fetchBlock:item .display ".transportItem"
-    * label *label294
   841 write "Fetching " .display ".status2"
   842 write :fetchBlock:item .display ".item2"
   843 write :fetchBlock:block .display ".block2"
-    * label *label295
   844 sensor *tmp283 :fetchBlock:block @x
   845 sensor *tmp284 :fetchBlock:block @y
   846 set :moveToEmpty:x *tmp283
 
   852 sensor *tmp285 @unit @firstItem
   853 jump *label300 equal *tmp285 null
   854 ucontrol itemDrop @air 1000
-    * label *label299
   855 jump *label298 always
   856 label *label300
-    * label *label297
   857 label *label301
   858 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
   859 sensor :fetchBlock:unitItem @unit @firstItem
 
   863 jump *label304 equal *tmp290 false
   864 ucontrol itemDrop @air 1000
   865 label *label304
-    * label *label305
-    * label *label302
   866 sensor *tmp292 @unit :fetchBlock:item
   867 op lessThan *tmp293 *tmp292 30
   868 sensor *tmp294 :fetchBlock:block :fetchBlock:item
   869 op land *tmp295 *tmp293 *tmp294
   870 jump *label301 notEqual *tmp295 false
-    * label *label303
   871 set :depositItems:block .core
   872 set :depositItems:item :fetchBlock:item
   873 setaddr :depositItems*retaddr *label306 (h:*label306)
   874 call *label9 *invalid :depositItems*retval (m:*label306) (h:*label306)
   875 label *label306
-    * label *label293
   876 return :fetchBlock*retaddr
   877 end
   878 label *label18
 
   883 sensor *tmp301 .press @coal
   884 jump *label312 greaterThanEq *tmp301 5
   885 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label314
   886 write "Supplying " .display ".status2"
   887 write @coal .display ".item2"
   888 write .press .display ".block2"
-    * label *label316
   889 sensor :supplyBlock:blockCapacity .press @itemCapacity
   890 sensor *tmp305 .press @coal
   891 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp305
 
   897 call *label11 *invalid :mineOre*retval (m:*label319) (h:*label319)
   898 label *label319
   899 label *label317
-    * label *label318
-    * label *label315
   900 set :supplyBase0:supplied true
   901 label *label312
-    * label *label313
   902 label *label310
-    * label *label311
   903 sensor *tmp309 .core @silicon
   904 jump *label320 greaterThanEq *tmp309 .targetSilicon
   905 sensor *tmp312 .smelter @coal
   906 jump *label322 greaterThanEq *tmp312 5
   907 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label324
   908 write "Supplying " .display ".status2"
   909 write @coal .display ".item2"
   910 write .smelter .display ".block2"
-    * label *label326
   911 sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity
   912 sensor *tmp316 .smelter @coal
   913 op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity *tmp316
 
   919 call *label11 *invalid :mineOre*retval (m:*label329) (h:*label329)
   920 label *label329
   921 label *label327
-    * label *label328
-    * label *label325
   922 set :supplyBase0:supplied true
   923 jump *label323 always
   924 label *label322
   925 sensor *tmp320 .smelter @sand
   926 jump *label330 greaterThanEq *tmp320 5
   927 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label332
   928 write "Supplying " .display ".status2"
   929 write @sand .display ".item2"
   930 write .smelter .display ".block2"
-    * label *label334
   931 sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity
   932 sensor *tmp324 .smelter @sand
   933 op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity *tmp324
 
   939 call *label11 *invalid :mineOre*retval (m:*label337) (h:*label337)
   940 label *label337
   941 label *label335
-    * label *label336
-    * label *label333
   942 set :supplyBase0:supplied true
   943 label *label330
-    * label *label331
   944 label *label323
   945 label *label320
-    * label *label321
   946 sensor *tmp328 .battery @totalPower
   947 jump *label338 greaterThanEq *tmp328 .powerTarget
   948 sensor *tmp331 .generator @coal
   949 jump *label340 greaterThanEq *tmp331 2
   950 write "Goal 4: supplying generator" .display ".status1"
-    * label *label342
   951 write "Supplying " .display ".status2"
   952 write @coal .display ".item2"
   953 write .generator .display ".block2"
-    * label *label344
   954 sensor :supplyBlock.3:blockCapacity .generator @itemCapacity
   955 sensor *tmp335 .generator @coal
   956 op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity *tmp335
 
   962 call *label11 *invalid :mineOre*retval (m:*label347) (h:*label347)
   963 label *label347
   964 label *label345
-    * label *label346
-    * label *label343
   965 set :supplyBase0:supplied true
   966 label *label340
-    * label *label341
   967 label *label338
-    * label *label339
   968 label *label308
-    * label *label309
   969 set *tmp341 100
   970 sensor *tmp339 .core @titanium
   971 jump *label349 greaterThanEq *tmp339 .targetTitanium
 
   980 op mul *tmp351 .unloader1 .powerTarget
   981 jump *label354 greaterThanEq *tmp350 *tmp351
   982 write "Goal 5: supplying generator" .display ".status1"
-    * label *label356
   983 set :mineOre.1:ore @coal
   984 setaddr :mineOre.1*retaddr *label357 (h:*label357)
   985 call *label12 *invalid :mineOre.1*retval (m:*label357) (h:*label357)
 
   989 sensor *tmp354 .core @silicon
   990 jump *label358 greaterThanEq *tmp354 .targetSilicon
   991 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label360
   992 sensor :supplyBase0:coal .core @coal
   993 sensor :supplyBase0:sand .core @sand
   994 set :mineOre.1:ore @sand
 
  1003 sensor *tmp361 .core @copper
  1004 jump *label364 greaterThanEq *tmp361 .targetCopper
  1005 write "Goal 7: copper requirement" .display ".status1"
-    * label *label366
  1006 set :mineOre.1:ore @copper
  1007 setaddr :mineOre.1*retaddr *label367 (h:*label367)
  1008 call *label12 *invalid :mineOre.1*retval (m:*label367) (h:*label367)
 
  1013 op add *tmp365 .targetLead 20
  1014 jump *label368 greaterThanEq *tmp364 *tmp365
  1015 write "Goal 8: lead requirement" .display ".status1"
-    * label *label370
  1016 set :mineOre.1:ore @lead
  1017 setaddr :mineOre.1*retaddr *label371 (h:*label371)
  1018 call *label12 *invalid :mineOre.1*retval (m:*label371) (h:*label371)
 
  1022 sensor *tmp368 .core @metaglass
  1023 jump *label372 greaterThanEq *tmp368 .targetMetaglass
  1024 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label374
  1025 set :mineOre.1:ore @sand
  1026 setaddr :mineOre.1*retaddr *label375 (h:*label375)
  1027 call *label12 *invalid :mineOre.1*retval (m:*label375) (h:*label375)
 
  1029 jump *label373 always
  1030 label *label372
  1031 write "Goal 10: supplying base" .display ".status1"
-    * label *label376
  1032 sensor :supplyBase0:coal.1 .core @coal
  1033 sensor :supplyBase0:sand.1 .core @sand
  1034 set :mineOre.1:ore @sand
 
  1044 label *label359
  1045 label *label355
  1046 label *label352
-    * label *label353
  1047 jump *label351 always
  1048 label *label350
  1049 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label380
  1050 set :fetchBlock:block .titaniumDrill
  1051 set :fetchBlock:item @titanium
  1052 setaddr :fetchBlock*retaddr *label381 (h:*label381)
  1053 call *label13 *invalid :fetchBlock*retval (m:*label381) (h:*label381)
  1054 label *label381
  1055 label *label351
-    * label *label307
  1056 return :supplyBase0*retaddr
  1057 end
  1058 label *label19
  1059 write "Phase 1: supplying base" .display ".status1"
-    * label *label383
  1060 set :mineOre.1:ore @coal
  1061 setaddr :mineOre.1*retaddr *label384 (h:*label384)
  1062 call *label12 *invalid :mineOre.1*retval (m:*label384) (h:*label384)
  1063 label *label384
-    * label *label382
  1064 return :supplyBase1*retaddr
  1065 end
  1066 label *label20
 
  1075 call *label18 *invalid :supplyBase0*retval (m:*label389) (h:*label389)
  1076 label *label389
  1077 label *label387
-    * label *label385
  1078 return :supplyBase*retaddr
  1079 end
  1080 label *label21
 
  1093 set :targetMet*retval true
  1094 jump *label390 always
  1095 label *label401
-    * label *label402
  1096 label *label399
-    * label *label400
  1097 label *label397
-    * label *label398
  1098 label *label395
-    * label *label396
  1099 label *label393
-    * label *label394
  1100 label *label391
-    * label *label392
  1101 set :targetMet*retval false
  1102 jump *label390 always
  1103 label *label390
  1104 return :targetMet*retaddr
  1105 end
  1106 label *label22
-    * label *label447
  1107 op sign :meetTarget:count :meetTarget:copper
-    * label *label448
-    * label *label451
  1108 op sign *tmp396 :meetTarget:lead
  1109 op add :meetTarget:count :meetTarget:count *tmp396
-    * label *label452
-    * label *label455
  1110 op sign *tmp396 :meetTarget:graphite
  1111 op add :meetTarget:count :meetTarget:count *tmp396
-    * label *label456
-    * label *label459
  1112 op sign *tmp396 :meetTarget:silicon
  1113 op add :meetTarget:count :meetTarget:count *tmp396
-    * label *label460
-    * label *label463
  1114 op sign *tmp396 :meetTarget:titanium
  1115 op add :meetTarget:count :meetTarget:count *tmp396
-    * label *label464
-    * label *label467
  1116 op sign *tmp396 :meetTarget:metaglass
  1117 op add :meetTarget:count :meetTarget:count *tmp396
-    * label *label468
-    * label *label406
  1118 write :meetTarget:count .display ".totalTargets"
  1119 write :meetTarget:block .display ".nextBlock"
  1120 write :meetTarget:copper .display ".targetCopper"
 
  1149 setaddr :supplyBase*retaddr *label417 (h:*label417)
  1150 call *label20 *invalid :supplyBase*retval (m:*label417) (h:*label417)
  1151 label *label417
-    * label *label414
  1152 jump *label413 always
  1153 label *label415
-    * label *label403
  1154 return :meetTarget*retaddr
  1155 end
  1156 label *label23
 
  1158 op sub *tmp407 *tmp86 1
  1159 write *tmp407 bank1 511
  1160 op mul :second:result @second TIME_COMPRESS
-    * label *label419
  1161 op floor *tmp411 :second:result
  1162 op mul *tmp412 *tmp411 1000
  1163 op add *tmp413 :log:encodedId *tmp412
  1164 write *tmp413 bank1 *tmp407
-    * label *label418
  1165 return :log*retaddr
  1166 end
  1167 label *label24
 
  1169 setaddr :log*retaddr *label421 (h:*label421)
  1170 call *label23 *invalid :log*retval (m:*label421) (h:*label421)
  1171 label *label421
-    * label *label420
  1172 return :logBlock*retaddr
  1173 end
  1174 label *label25
 
  1178 call *label6 *invalid :moveTo.1*retval (m:*label423) (h:*label423)
  1179 label *label423
  1180 write "Building..." .display ".status3"
-    * label *label424
  1181 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1182 jump *label425 equal :buildBlockAt:building null
  1183 jump *label427 notEqual :buildBlockAt:type :buildBlockAt:block
  1184 set :buildBlockAt*retval :buildBlockAt:building
  1185 jump *label422 always
  1186 label *label427
-    * label *label428
  1187 jump *label429 equal :buildBlockAt:skipError false
  1188 set :buildBlockAt*retval null
  1189 jump *label422 always
  1190 label *label429
-    * label *label430
  1191 set .ERROR "Cannot build at ("
  1192 stop
-    * label *label431
  1193 label *label425
-    * label *label426
  1194 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
  1195 wait 0.25
  1196 label *label432
 
  1199 set :buildBlockAt*retval null
  1200 jump *label422 always
  1201 label *label435
-    * label *label436
-    * label *label433
  1202 jump *label432 notEqual :buildBlockAt:type :buildBlockAt:block
-    * label *label434
  1203 set :logBlock:block :buildBlockAt:block
  1204 setaddr :logBlock*retaddr *label437 (h:*label437)
  1205 call *label24 *invalid :logBlock*retval (m:*label437) (h:*label437)
 
  1229 call *label25 *invalid :buildBlockAt*retval (m:*label440) (h:*label440)
  1230 label *label440
  1231 set :buildBlock*retval :buildBlockAt*retval
-    * label *label438
  1232 return :buildBlock*retaddr
  1233 end
  1234 label *label27
 
  1239 label *label444
  1240 op add :findUnits:count :findUnits:count 1
  1241 ubind :findUnits:type
-    * label *label445
  1242 jump *label444 notEqual @unit :findUnits:firstUnit
-    * label *label446
  1243 label *label442
-    * label *label443
  1244 set :findUnits*retval :findUnits:count
-    * label *label441
  1245 return :findUnits*retaddr
  1246 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-6 instructions):
 
   280 call *label20 *invalid :supplyBase*retval (m:*label107) (h:*label107)
   281 label *label107
   282 sensor *tmp152 *tmp101 @totalPower
-    * jump *label108 greaterThanEq *tmp152 300
-    * jump *label106 always
+  283 jump *label106 lessThan *tmp152 300
   284 label *label108
   285 read *tmp39 *tmp136 ".monos"
   286 jump *label104 lessThan *tmp39 3
 
   477 jump *label180 always
   478 label *label182
   479 ubind @flare
-    * jump *label185 notEqual @unit null
-    * jump *label184 always
+  480 jump *label184 equal @unit null
   481 label *label185
   482 set :findFreeUnit:first_unit @unit
   483 label *label187
 
   538 label *label205
   539 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
   540 read *tmp74 processor4 ".water1X"
-    * jump *label206 greaterThanEq *tmp74 0
-    * jump *label198 always
+  541 jump *label198 lessThan *tmp74 0
   542 label *label206
   543 set :meetTarget:block @water-extractor
   544 set :meetTarget:copper 30
 
   561 call *label25 *invalid :buildBlockAt*retval (m:*label210) (h:*label210)
   562 label *label210
   563 read *tmp76 processor4 ".water2X"
-    * jump *label211 greaterThanEq *tmp76 0
-    * jump *label198 always
+  564 jump *label198 lessThan *tmp76 0
   565 label *label211
   566 set :meetTarget:block @water-extractor
   567 set :meetTarget:copper 30
 
   800 op notEqual *tmp273 :mineOre:item null
   801 op notEqual *tmp274 :mineOre:item :mineOre:ore
   802 op land *tmp275 *tmp273 *tmp274
-    * jump *label285 equal *tmp275 false
-    * jump *label284 always
+  803 jump *label284 notEqual *tmp275 false
   804 label *label285
   805 ucontrol mine :mineOre:x :mineOre:y
-    * jump *label287 lessThanEq @second :mineOre:stop
-    * jump *label284 always
+  806 jump *label284 greaterThan @second :mineOre:stop
   807 label *label287
   808 sensor *tmp279 @unit @totalItems
   809 jump *label282 lessThan *tmp279 :mineOre:amount

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   281 label *label107
   282 sensor *tmp152 *tmp101 @totalPower
   283 jump *label106 lessThan *tmp152 300
-    * label *label108
   284 read *tmp39 *tmp136 ".monos"
   285 jump *label104 lessThan *tmp39 3
   286 label *label106
 
   477 label *label182
   478 ubind @flare
   479 jump *label184 equal @unit null
-    * label *label185
   480 set :findFreeUnit:first_unit @unit
   481 label *label187
   482 sensor *tmp205 @unit @controlled
 
   537 set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval
   538 read *tmp74 processor4 ".water1X"
   539 jump *label198 lessThan *tmp74 0
-    * label *label206
   540 set :meetTarget:block @water-extractor
   541 set :meetTarget:copper 30
   542 set :meetTarget:lead 30
 
   559 label *label210
   560 read *tmp76 processor4 ".water2X"
   561 jump *label198 lessThan *tmp76 0
-    * label *label211
   562 set :meetTarget:block @water-extractor
   563 set :meetTarget:copper 30
   564 set :meetTarget:lead 30
 
   797 op notEqual *tmp274 :mineOre:item :mineOre:ore
   798 op land *tmp275 *tmp273 *tmp274
   799 jump *label284 notEqual *tmp275 false
-    * label *label285
   800 ucontrol mine :mineOre:x :mineOre:y
   801 jump *label284 greaterThan @second :mineOre:stop
-    * label *label287
   802 sensor *tmp279 @unit @totalItems
   803 jump *label282 lessThan *tmp279 :mineOre:amount
   804 label *label284

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   963 label *label349
   964 sensor *tmp345 .titaniumDrill @titanium
   965 jump *label350 greaterThanEq *tmp345 *tmp341
-    * jump *label352 notEqual :supplyBase0:supplied false
+  966 jump *label351 notEqual :supplyBase0:supplied false
   967 sensor *tmp350 .battery @totalPower
   968 op mul *tmp351 .unloader1 .powerTarget
   969 jump *label354 greaterThanEq *tmp350 *tmp351
 
   972 setaddr :mineOre.1*retaddr *label357 (h:*label357)
   973 call *label12 *invalid :mineOre.1*retval (m:*label357) (h:*label357)
   974 label *label357
-    * jump *label355 always
+  975 return :supplyBase0*retaddr
   976 label *label354
   977 sensor *tmp354 .core @silicon
   978 jump *label358 greaterThanEq *tmp354 .targetSilicon
 
   986 setaddr :mineOre.1*retaddr *label363 (h:*label363)
   987 call *label12 *invalid :mineOre.1*retval (m:*label363) (h:*label363)
   988 label *label363
-    * jump *label359 always
+  989 return :supplyBase0*retaddr
   990 label *label358
   991 sensor *tmp361 .core @copper
   992 jump *label364 greaterThanEq *tmp361 .targetCopper
 
   995 setaddr :mineOre.1*retaddr *label367 (h:*label367)
   996 call *label12 *invalid :mineOre.1*retval (m:*label367) (h:*label367)
   997 label *label367
-    * jump *label365 always
+  998 return :supplyBase0*retaddr
   999 label *label364
  1000 sensor *tmp364 .core @lead
  1001 op add *tmp365 .targetLead 20
 
  1005 setaddr :mineOre.1*retaddr *label371 (h:*label371)
  1006 call *label12 *invalid :mineOre.1*retval (m:*label371) (h:*label371)
  1007 label *label371
-    * jump *label369 always
+ 1008 return :supplyBase0*retaddr
  1009 label *label368
  1010 sensor *tmp368 .core @metaglass
  1011 jump *label372 greaterThanEq *tmp368 .targetMetaglass
 
  1014 setaddr :mineOre.1*retaddr *label375 (h:*label375)
  1015 call *label12 *invalid :mineOre.1*retval (m:*label375) (h:*label375)
  1016 label *label375
-    * jump *label373 always
+ 1017 return :supplyBase0*retaddr
  1018 label *label372
  1019 write "Goal 10: supplying base" .display ".status1"
  1020 sensor :supplyBase0:coal.1 .core @coal
 
  1032 label *label359
  1033 label *label355
  1034 label *label352
-    * jump *label351 always
+ 1035 return :supplyBase0*retaddr
  1036 label *label350
  1037 write "Goal 11: Fetching titanium" .display ".status1"
  1038 set :fetchBlock:block .titaniumDrill
 
  1057 setaddr :supplyBase1*retaddr *label388 (h:*label388)
  1058 call *label19 *invalid :supplyBase1*retval (m:*label388) (h:*label388)
  1059 label *label388
-    * jump *label387 always
+ 1060 return :supplyBase*retaddr
  1061 label *label386
  1062 setaddr :supplyBase0*retaddr *label389 (h:*label389)
  1063 call *label18 *invalid :supplyBase0*retval (m:*label389) (h:*label389)
 
  1079 sensor *tmp392 .core @metaglass
  1080 jump *label401 lessThan *tmp392 .targetMetaglass
  1081 set :targetMet*retval true
-    * jump *label390 always
+ 1082 return :targetMet*retaddr
  1083 label *label401
  1084 label *label399
  1085 label *label397
 
  1087 label *label393
  1088 label *label391
  1089 set :targetMet*retval false
-    * jump *label390 always
+ 1090 return :targetMet*retaddr
  1091 label *label390
  1092 return :targetMet*retaddr
  1093 end
 
  1170 jump *label425 equal :buildBlockAt:building null
  1171 jump *label427 notEqual :buildBlockAt:type :buildBlockAt:block
  1172 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label422 always
+ 1173 return :buildBlockAt*retaddr
  1174 label *label427
  1175 jump *label429 equal :buildBlockAt:skipError false
  1176 set :buildBlockAt*retval null
-    * jump *label422 always
+ 1177 return :buildBlockAt*retaddr
  1178 label *label429
  1179 set .ERROR "Cannot build at ("
  1180 stop
 
  1185 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
  1186 jump *label435 notEqual :buildBlockAt:building null
  1187 set :buildBlockAt*retval null
-    * jump *label422 always
+ 1188 return :buildBlockAt*retaddr
  1189 label *label435
  1190 jump *label432 notEqual :buildBlockAt:type :buildBlockAt:block
  1191 set :logBlock:block :buildBlockAt:block

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-46 instructions):
 
    52 label *label39
    53 set *tmp97 :buildBlock*retval
    54 jump *label34 always
-    * multijump *tmp98 0 0 (m:marker0)
-    * multilabel *label38 (m:marker0)
    55 label *label34
    56 set .press *tmp97
    57 op add :buildBlockFromCfg.1:y .coreY 4
 
    65 label *label45
    66 set *tmp101 :buildBlock*retval
    67 jump *label40 always
-    * multijump *tmp102 0 0 (m:marker1)
-    * multilabel *label44 (m:marker1)
    68 label *label40
    69 set .battery *tmp101
    70 op add :buildBlockFromCfg.2:x .coreX -1
 
    74 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
    75 label *label51
    76 jump *label46 always
-    * multijump *tmp106 0 0 (m:marker2)
-    * multilabel *label50 (m:marker2)
    77 label *label46
    78 op add :buildBlockFromCfg.3:y .coreY 3
    79 set :buildBlock:block @combustion-generator
 
    86 label *label57
    87 set *tmp109 :buildBlock*retval
    88 jump *label52 always
-    * multijump *tmp110 0 0 (m:marker3)
-    * multilabel *label56 (m:marker3)
    89 label *label52
    90 set .generator *tmp109
    91 set .powerTarget 400
 
   100 label *label63
   101 set *tmp113 :buildBlock*retval
   102 jump *label58 always
-    * multijump *tmp114 0 0 (m:marker4)
-    * multilabel *label62 (m:marker4)
   103 label *label58
   104 set .smelter *tmp113
   105 set :meetTarget:block @pneumatic-drill
 
   158 label *label77
   159 set *tmp132 :buildBlock*retval
   160 jump *label72 always
-    * multijump *tmp133 0 0 (m:marker5)
-    * multilabel *label76 (m:marker5)
   161 label *label72
   162 set .unloader1 *tmp132
   163 op add :buildBlockFromCfg.6:x .coreX 1
 
   174 label *label83
   175 set *tmp136 :buildBlock*retval
   176 jump *label78 always
-    * multijump *tmp137 0 0 (m:marker6)
-    * multilabel *label82 (m:marker6)
   177 label *label78
   178 set .controller *tmp136
   179 write processor1 *tmp136 ".display"
 
   199 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)
   200 label *label89
   201 jump *label84 always
-    * multijump *tmp141 0 0 (m:marker7)
-    * multilabel *label88 (m:marker7)
   202 label *label84
   203 set :buildBlock:block @unloader
   204 set :buildBlock:x :buildBlockFromCfg.7:x
 
   212 label *label95
   213 set *tmp144 :buildBlock*retval
   214 jump *label90 always
-    * multijump *tmp145 0 0 (m:marker8)
-    * multilabel *label94 (m:marker8)
   215 label *label90
   216 write *tmp144 *tmp136 ".unloader2"
   217 op add :buildBlockFromCfg.9:x .coreX -3
 
   230 label *label101
   231 set *tmp148 :buildBlock*retval
   232 jump *label96 always
-    * multijump *tmp149 0 0 (m:marker9)
-    * multilabel *label100 (m:marker9)
   233 label *label96
   234 write *tmp148 *tmp136 ".factory"
   235 write *tmp148 processor1 ".factory"
 
   281 call *label26 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   282 label *label115
   283 jump *label110 always
-    * multijump *tmp157 0 0 (m:marker10)
-    * multilabel *label114 (m:marker10)
   284 label *label110
   285 set :buildBlock:block @junction
   286 set :buildBlock:x :buildBlockFromCfg.10:x
 
   292 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   293 label *label121
   294 jump *label116 always
-    * multijump *tmp161 0 0 (m:marker11)
-    * multilabel *label120 (m:marker11)
   295 label *label116
   296 op add :buildBlockFromCfg.12:x .coreX 3
   297 set :buildBlock:block @inverted-sorter
 
   304 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   305 label *label127
   306 jump *label122 always
-    * multijump *tmp165 0 0 (m:marker12)
-    * multilabel *label126 (m:marker12)
   307 label *label122
   308 op add :buildBlockFromCfg.13:x .coreX 3.5
   309 op add :buildBlockFromCfg.13:y .coreY 1.5
 
   319 label *label133
   320 set *tmp168 :buildBlock*retval
   321 jump *label128 always
-    * multijump *tmp169 0 0 (m:marker13)
-    * multilabel *label132 (m:marker13)
   322 label *label128
   323 write *tmp168 *tmp136 ".kiln"
   324 op add :buildBlockFromCfg.14:x .coreX -3.5
 
   332 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   333 label *label139
   334 jump *label134 always
-    * multijump *tmp173 0 0 (m:marker14)
-    * multilabel *label138 (m:marker14)
   335 label *label134
   336 set :buildBlock:block @overflow-gate
   337 set :buildBlock:x :buildBlockFromCfg.9:x
 
   344 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   345 label *label145
   346 jump *label140 always
-    * multijump *tmp177 0 0 (m:marker15)
-    * multilabel *label144 (m:marker15)
   347 label *label140
   348 set :buildBlock:block @steam-generator
   349 set :buildBlock:x :buildBlockFromCfg.14:x
 
   357 label *label151
   358 set *tmp180 :buildBlock*retval
   359 jump *label146 always
-    * multijump *tmp181 0 0 (m:marker16)
-    * multilabel *label150 (m:marker16)
   360 label *label146
   361 write *tmp180 *tmp136 ".generator2"
   362 op add :buildBlockFromCfg.17:y .coreY -5
 
   372 label *label157
   373 set *tmp184 :buildBlock*retval
   374 jump *label152 always
-    * multijump *tmp185 0 0 (m:marker17)
-    * multilabel *label156 (m:marker17)
   375 label *label152
   376 write *tmp184 *tmp136 ".payloadRouter"
   377 set :buildBlock:block @unloader
 
   385 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   386 label *label163
   387 jump *label158 always
-    * multijump *tmp189 0 0 (m:marker18)
-    * multilabel *label162 (m:marker18)
   388 label *label158
   389 op add :buildBlockFromCfg.19:y .coreY -3
   390 set :buildBlock:block @underflow-gate
 
   398 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   399 label *label169
   400 jump *label164 always
-    * multijump *tmp193 0 0 (m:marker19)
-    * multilabel *label168 (m:marker19)
   401 label *label164
   402 set :buildBlock:block @additive-reconstructor
   403 set :buildBlock:x .coreX
 
   410 label *label175
   411 set *tmp196 :buildBlock*retval
   412 jump *label170 always
-    * multijump *tmp197 0 0 (m:marker20)
-    * multilabel *label174 (m:marker20)
   413 label *label170
   414 write *tmp196 *tmp136 ".reconstructor"
   415 write *tmp196 processor1 ".reconstructor"
 
   441 jump *label190 notEqual *tmp205 0
   442 ucontrol flag 0
   443 jump *label184 always
-    * jump *label191 always
   444 label *label190
   445 sensor *tmp208 :findFreeUnit:first_unit @dead
   446 jump *label192 notEqual *tmp208 1
 
   638 call *label20 *invalid :supplyBase*retval (m:*label236) (h:*label236)
   639 label *label236
   640 jump *label233 always
-    * ucontrol stop
-    * set .ERROR "Done"
-    * stop
-    * end
   641 label *label5
   642 write "Moving..." .display ".status3"
   643 op sub *tmp241 :moveTo:radius 0.5
 
   648 jump *label241 always
   649 label *label243
   650 return :moveTo*retaddr
-    * end
   651 label *label6
   652 set :moveTo:x :moveTo.1:x
   653 set :moveTo:y :moveTo.1:y
 
   656 call *label5 *invalid :moveTo*retval (m:*label245) (h:*label245)
   657 label *label245
   658 return :moveTo.1*retaddr
-    * end
   659 label *label7
   660 write "Moving..." .display ".status3"
   661 label *label248
 
   667 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247
   668 jump *label248 equal *tmp247 false
   669 return :moveToEmpty*retaddr
-    * end
   670 label *label8
   671 sensor *tmp249 :moveToBlock:block @x
   672 sensor *tmp250 :moveToBlock:block @y
 
   677 call *label5 *invalid :moveTo*retval (m:*label254) (h:*label254)
   678 label *label254
   679 return :moveToBlock*retaddr
-    * end
   680 label *label9
   681 write "Depositing..." .display ".status3"
   682 sensor *tmp251 @unit @firstItem
 
   705 write 0 .display ".transportTarget"
   706 write null .display ".transportItem"
   707 return :depositItems*retaddr
-    * end
   708 label *label10
   709 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp261 0
   710 jump *label268 notEqual *tmp261 false
 
   712 stop
   713 label *label268
   714 return :locateOre*retaddr
-    * end
   715 label *label11
   716 op min :mineOre:amount :mineOre:amount 30
   717 write :mineOre:amount .display ".transportTarget"
 
   756 call *label9 *invalid :depositItems*retval (m:*label289) (h:*label289)
   757 label *label289
   758 return :mineOre*retaddr
-    * end
   759 label *label12
   760 write "Mining " .display ".status2"
   761 write :mineOre.1:ore .display ".item2"
 
   767 call *label11 *invalid :mineOre*retval (m:*label292) (h:*label292)
   768 label *label292
   769 return :mineOre.1*retaddr
-    * end
   770 label *label13
   771 sensor :transportStatus.2:target :fetchBlock:block @itemCapacity
   772 write :transportStatus.2:target .display ".transportTarget"
 
   807 call *label9 *invalid :depositItems*retval (m:*label306) (h:*label306)
   808 label *label306
   809 return :fetchBlock*retaddr
-    * end
   810 label *label18
   811 set :supplyBase0:supplied false
   812 jump *label308 notEqual .unloader1 null
 
   970 setaddr :mineOre.1*retaddr *label379 (h:*label379)
   971 call *label12 *invalid :mineOre.1*retval (m:*label379) (h:*label379)
   972 label *label379
-    * label *label373
-    * label *label369
-    * label *label365
-    * label *label359
-    * label *label355
-    * label *label352
   973 return :supplyBase0*retaddr
   974 label *label350
   975 write "Goal 11: Fetching titanium" .display ".status1"
 
   980 label *label381
   981 label *label351
   982 return :supplyBase0*retaddr
-    * end
   983 label *label19
   984 write "Phase 1: supplying base" .display ".status1"
   985 set :mineOre.1:ore @coal
 
   987 call *label12 *invalid :mineOre.1*retval (m:*label384) (h:*label384)
   988 label *label384
   989 return :supplyBase1*retaddr
-    * end
   990 label *label20
   991 read *tmp39 .controller ".monos"
   992 jump *label386 lessThanEq *tmp39 3
 
   998 setaddr :supplyBase0*retaddr *label389 (h:*label389)
   999 call *label18 *invalid :supplyBase0*retval (m:*label389) (h:*label389)
  1000 label *label389
-    * label *label387
  1001 return :supplyBase*retaddr
-    * end
  1002 label *label21
  1003 sensor *tmp377 .core @copper
  1004 jump *label391 lessThan *tmp377 .targetCopper
 
  1022 label *label391
  1023 set :targetMet*retval false
  1024 return :targetMet*retaddr
-    * label *label390
-    * return :targetMet*retaddr
-    * end
  1025 label *label22
  1026 op sign :meetTarget:count :meetTarget:copper
  1027 op sign *tmp396 :meetTarget:lead
 
  1071 jump *label413 always
  1072 label *label415
  1073 return :meetTarget*retaddr
-    * end
  1074 label *label23
  1075 read *tmp86 bank1 511
  1076 op sub *tmp407 *tmp86 1
 
  1081 op add *tmp413 :log:encodedId *tmp412
  1082 write *tmp413 bank1 *tmp407
  1083 return :log*retaddr
-    * end
  1084 label *label24
  1085 sensor :log:encodedId :logBlock:block @id
  1086 setaddr :log*retaddr *label421 (h:*label421)
  1087 call *label23 *invalid :log*retval (m:*label421) (h:*label421)
  1088 label *label421
  1089 return :logBlock*retaddr
-    * end
  1090 label *label25
  1091 set :moveTo.1:x :buildBlockAt:x
  1092 set :moveTo.1:y :buildBlockAt:y
 
  1121 call *label24 *invalid :logBlock*retval (m:*label437) (h:*label437)
  1122 label *label437
  1123 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label422
  1124 return :buildBlockAt*retaddr
-    * end
  1125 label *label26
  1126 set :meetTarget:block :buildBlock:block
  1127 set :meetTarget:copper :buildBlock:copper
 
  1144 label *label440
  1145 set :buildBlock*retval :buildBlockAt*retval
  1146 return :buildBlock*retaddr
-    * end
  1147 label *label27
  1148 set :findUnits:count 0
  1149 ubind :findUnits:type
 
  1156 label *label442
  1157 set :findUnits*retval :findUnits:count
  1158 return :findUnits*retaddr
-    * end

Modifications by Jumps phase, Dead Code Elimination, pass 4, iteration 1:
 
   446 jump *label192 notEqual *tmp208 1
   447 set :findFreeUnit:first_unit @unit
   448 label *label192
-    * label *label191
   449 ubind @flare
   450 jump *label187 notEqual :findFreeUnit:first_unit @unit
   451 label *label184

Modifications by Jumps phase, Single Step Elimination, pass 4, iteration 1 (-21 instructions):
 
    51 call *label26 *invalid :buildBlock*retval (m:*label39) (h:*label39)
    52 label *label39
    53 set *tmp97 :buildBlock*retval
-    * jump *label34 always
    54 label *label34
    55 set .press *tmp97
    56 op add :buildBlockFromCfg.1:y .coreY 4
 
    63 call *label26 *invalid :buildBlock*retval (m:*label45) (h:*label45)
    64 label *label45
    65 set *tmp101 :buildBlock*retval
-    * jump *label40 always
    66 label *label40
    67 set .battery *tmp101
    68 op add :buildBlockFromCfg.2:x .coreX -1
 
    71 setaddr :buildBlock*retaddr *label51 (h:*label51)
    72 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
    73 label *label51
-    * jump *label46 always
    74 label *label46
    75 op add :buildBlockFromCfg.3:y .coreY 3
    76 set :buildBlock:block @combustion-generator
 
    82 call *label26 *invalid :buildBlock*retval (m:*label57) (h:*label57)
    83 label *label57
    84 set *tmp109 :buildBlock*retval
-    * jump *label52 always
    85 label *label52
    86 set .generator *tmp109
    87 set .powerTarget 400
 
    95 call *label26 *invalid :buildBlock*retval (m:*label63) (h:*label63)
    96 label *label63
    97 set *tmp113 :buildBlock*retval
-    * jump *label58 always
    98 label *label58
    99 set .smelter *tmp113
   100 set :meetTarget:block @pneumatic-drill
 
   152 call *label26 *invalid :buildBlock*retval (m:*label77) (h:*label77)
   153 label *label77
   154 set *tmp132 :buildBlock*retval
-    * jump *label72 always
   155 label *label72
   156 set .unloader1 *tmp132
   157 op add :buildBlockFromCfg.6:x .coreX 1
 
   167 call *label26 *invalid :buildBlock*retval (m:*label83) (h:*label83)
   168 label *label83
   169 set *tmp136 :buildBlock*retval
-    * jump *label78 always
   170 label *label78
   171 set .controller *tmp136
   172 write processor1 *tmp136 ".display"
 
   191 setaddr :buildBlock*retaddr *label89 (h:*label89)
   192 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)
   193 label *label89
-    * jump *label84 always
   194 label *label84
   195 set :buildBlock:block @unloader
   196 set :buildBlock:x :buildBlockFromCfg.7:x
 
   203 call *label26 *invalid :buildBlock*retval (m:*label95) (h:*label95)
   204 label *label95
   205 set *tmp144 :buildBlock*retval
-    * jump *label90 always
   206 label *label90
   207 write *tmp144 *tmp136 ".unloader2"
   208 op add :buildBlockFromCfg.9:x .coreX -3
 
   220 call *label26 *invalid :buildBlock*retval (m:*label101) (h:*label101)
   221 label *label101
   222 set *tmp148 :buildBlock*retval
-    * jump *label96 always
   223 label *label96
   224 write *tmp148 *tmp136 ".factory"
   225 write *tmp148 processor1 ".factory"
 
   270 setaddr :buildBlock*retaddr *label115 (h:*label115)
   271 call *label26 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   272 label *label115
-    * jump *label110 always
   273 label *label110
   274 set :buildBlock:block @junction
   275 set :buildBlock:x :buildBlockFromCfg.10:x
 
   280 setaddr :buildBlock*retaddr *label121 (h:*label121)
   281 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   282 label *label121
-    * jump *label116 always
   283 label *label116
   284 op add :buildBlockFromCfg.12:x .coreX 3
   285 set :buildBlock:block @inverted-sorter
 
   291 setaddr :buildBlock*retaddr *label127 (h:*label127)
   292 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   293 label *label127
-    * jump *label122 always
   294 label *label122
   295 op add :buildBlockFromCfg.13:x .coreX 3.5
   296 op add :buildBlockFromCfg.13:y .coreY 1.5
 
   305 call *label26 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   306 label *label133
   307 set *tmp168 :buildBlock*retval
-    * jump *label128 always
   308 label *label128
   309 write *tmp168 *tmp136 ".kiln"
   310 op add :buildBlockFromCfg.14:x .coreX -3.5
 
   317 setaddr :buildBlock*retaddr *label139 (h:*label139)
   318 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   319 label *label139
-    * jump *label134 always
   320 label *label134
   321 set :buildBlock:block @overflow-gate
   322 set :buildBlock:x :buildBlockFromCfg.9:x
 
   328 setaddr :buildBlock*retaddr *label145 (h:*label145)
   329 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   330 label *label145
-    * jump *label140 always
   331 label *label140
   332 set :buildBlock:block @steam-generator
   333 set :buildBlock:x :buildBlockFromCfg.14:x
 
   340 call *label26 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   341 label *label151
   342 set *tmp180 :buildBlock*retval
-    * jump *label146 always
   343 label *label146
   344 write *tmp180 *tmp136 ".generator2"
   345 op add :buildBlockFromCfg.17:y .coreY -5
 
   354 call *label26 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   355 label *label157
   356 set *tmp184 :buildBlock*retval
-    * jump *label152 always
   357 label *label152
   358 write *tmp184 *tmp136 ".payloadRouter"
   359 set :buildBlock:block @unloader
 
   366 setaddr :buildBlock*retaddr *label163 (h:*label163)
   367 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   368 label *label163
-    * jump *label158 always
   369 label *label158
   370 op add :buildBlockFromCfg.19:y .coreY -3
   371 set :buildBlock:block @underflow-gate
 
   378 setaddr :buildBlock*retaddr *label169 (h:*label169)
   379 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   380 label *label169
-    * jump *label164 always
   381 label *label164
   382 set :buildBlock:block @additive-reconstructor
   383 set :buildBlock:x .coreX
 
   389 call *label26 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   390 label *label175
   391 set *tmp196 :buildBlock*retval
-    * jump *label170 always
   392 label *label170
   393 write *tmp196 *tmp136 ".reconstructor"
   394 write *tmp196 processor1 ".reconstructor"

Modifications by Jumps phase, Jump Normalization, pass 5, iteration 1:
 
    51 call *label26 *invalid :buildBlock*retval (m:*label39) (h:*label39)
    52 label *label39
    53 set *tmp97 :buildBlock*retval
-    * label *label34
    54 set .press *tmp97
    55 op add :buildBlockFromCfg.1:y .coreY 4
    56 set :buildBlock:block @battery
 
    62 call *label26 *invalid :buildBlock*retval (m:*label45) (h:*label45)
    63 label *label45
    64 set *tmp101 :buildBlock*retval
-    * label *label40
    65 set .battery *tmp101
    66 op add :buildBlockFromCfg.2:x .coreX -1
    67 set :buildBlock:x :buildBlockFromCfg.2:x
 
    69 setaddr :buildBlock*retaddr *label51 (h:*label51)
    70 call *label26 *invalid :buildBlock*retval (m:*label51) (h:*label51)
    71 label *label51
-    * label *label46
    72 op add :buildBlockFromCfg.3:y .coreY 3
    73 set :buildBlock:block @combustion-generator
    74 set :buildBlock:x .coreX
 
    79 call *label26 *invalid :buildBlock*retval (m:*label57) (h:*label57)
    80 label *label57
    81 set *tmp109 :buildBlock*retval
-    * label *label52
    82 set .generator *tmp109
    83 set .powerTarget 400
    84 op add :buildBlockFromCfg.4:x .coreX 1.5
 
    91 call *label26 *invalid :buildBlock*retval (m:*label63) (h:*label63)
    92 label *label63
    93 set *tmp113 :buildBlock*retval
-    * label *label58
    94 set .smelter *tmp113
    95 set :meetTarget:block @pneumatic-drill
    96 set :meetTarget:copper 18
 
   147 call *label26 *invalid :buildBlock*retval (m:*label77) (h:*label77)
   148 label *label77
   149 set *tmp132 :buildBlock*retval
-    * label *label72
   150 set .unloader1 *tmp132
   151 op add :buildBlockFromCfg.6:x .coreX 1
   152 set :buildBlock:block @micro-processor
 
   161 call *label26 *invalid :buildBlock*retval (m:*label83) (h:*label83)
   162 label *label83
   163 set *tmp136 :buildBlock*retval
-    * label *label78
   164 set .controller *tmp136
   165 write processor1 *tmp136 ".display"
   166 write .core *tmp136 ".core"
 
   184 setaddr :buildBlock*retaddr *label89 (h:*label89)
   185 call *label26 *invalid :buildBlock*retval (m:*label89) (h:*label89)
   186 label *label89
-    * label *label84
   187 set :buildBlock:block @unloader
   188 set :buildBlock:x :buildBlockFromCfg.7:x
   189 set :buildBlock:y .coreY
 
   195 call *label26 *invalid :buildBlock*retval (m:*label95) (h:*label95)
   196 label *label95
   197 set *tmp144 :buildBlock*retval
-    * label *label90
   198 write *tmp144 *tmp136 ".unloader2"
   199 op add :buildBlockFromCfg.9:x .coreX -3
   200 op add :buildBlockFromCfg.9:y .coreY -2
 
   211 call *label26 *invalid :buildBlock*retval (m:*label101) (h:*label101)
   212 label *label101
   213 set *tmp148 :buildBlock*retval
-    * label *label96
   214 write *tmp148 *tmp136 ".factory"
   215 write *tmp148 processor1 ".factory"
   216 write 1 *tmp136 ".flareTarget"
 
   260 setaddr :buildBlock*retaddr *label115 (h:*label115)
   261 call *label26 *invalid :buildBlock*retval (m:*label115) (h:*label115)
   262 label *label115
-    * label *label110
   263 set :buildBlock:block @junction
   264 set :buildBlock:x :buildBlockFromCfg.10:x
   265 set :buildBlock:y .coreY
 
   269 setaddr :buildBlock*retaddr *label121 (h:*label121)
   270 call *label26 *invalid :buildBlock*retval (m:*label121) (h:*label121)
   271 label *label121
-    * label *label116
   272 op add :buildBlockFromCfg.12:x .coreX 3
   273 set :buildBlock:block @inverted-sorter
   274 set :buildBlock:x :buildBlockFromCfg.12:x
 
   279 setaddr :buildBlock*retaddr *label127 (h:*label127)
   280 call *label26 *invalid :buildBlock*retval (m:*label127) (h:*label127)
   281 label *label127
-    * label *label122
   282 op add :buildBlockFromCfg.13:x .coreX 3.5
   283 op add :buildBlockFromCfg.13:y .coreY 1.5
   284 set :buildBlock:block @kiln
 
   292 call *label26 *invalid :buildBlock*retval (m:*label133) (h:*label133)
   293 label *label133
   294 set *tmp168 :buildBlock*retval
-    * label *label128
   295 write *tmp168 *tmp136 ".kiln"
   296 op add :buildBlockFromCfg.14:x .coreX -3.5
   297 op add :buildBlockFromCfg.14:y .coreY 3.5
 
   303 setaddr :buildBlock*retaddr *label139 (h:*label139)
   304 call *label26 *invalid :buildBlock*retval (m:*label139) (h:*label139)
   305 label *label139
-    * label *label134
   306 set :buildBlock:block @overflow-gate
   307 set :buildBlock:x :buildBlockFromCfg.9:x
   308 set :buildBlock:y .coreY
 
   313 setaddr :buildBlock*retaddr *label145 (h:*label145)
   314 call *label26 *invalid :buildBlock*retval (m:*label145) (h:*label145)
   315 label *label145
-    * label *label140
   316 set :buildBlock:block @steam-generator
   317 set :buildBlock:x :buildBlockFromCfg.14:x
   318 set :buildBlock:y :buildBlockFromCfg.13:y
 
   324 call *label26 *invalid :buildBlock*retval (m:*label151) (h:*label151)
   325 label *label151
   326 set *tmp180 :buildBlock*retval
-    * label *label146
   327 write *tmp180 *tmp136 ".generator2"
   328 op add :buildBlockFromCfg.17:y .coreY -5
   329 set :buildBlock:block @payload-router
 
   337 call *label26 *invalid :buildBlock*retval (m:*label157) (h:*label157)
   338 label *label157
   339 set *tmp184 :buildBlock*retval
-    * label *label152
   340 write *tmp184 *tmp136 ".payloadRouter"
   341 set :buildBlock:block @unloader
   342 set :buildBlock:x .coreX
 
   348 setaddr :buildBlock*retaddr *label163 (h:*label163)
   349 call *label26 *invalid :buildBlock*retval (m:*label163) (h:*label163)
   350 label *label163
-    * label *label158
   351 op add :buildBlockFromCfg.19:y .coreY -3
   352 set :buildBlock:block @underflow-gate
   353 set :buildBlock:x .coreX
 
   359 setaddr :buildBlock*retaddr *label169 (h:*label169)
   360 call *label26 *invalid :buildBlock*retval (m:*label169) (h:*label169)
   361 label *label169
-    * label *label164
   362 set :buildBlock:block @additive-reconstructor
   363 set :buildBlock:x .coreX
   364 set :buildBlock:y :buildBlockFromCfg.17:y
 
   369 call *label26 *invalid :buildBlock*retval (m:*label175) (h:*label175)
   370 label *label175
   371 set *tmp196 :buildBlock*retval
-    * label *label170
   372 write *tmp196 *tmp136 ".reconstructor"
   373 write *tmp196 processor1 ".reconstructor"
   374 set .graphiteSurplus 200

Final code before resolving virtual instructions:

    0:  jump *label472 always 0 0
    1:  draw triangle bank1 processor1 processor2 processor3 processor4 TIME_COMPRESS
    2:  draw triangle .ERROR .battery .builder .controller .core .coreX
    3:  draw triangle .coreY .display .generator .graphiteSurplus .leadSurplus .metaglassSurplus
    4:  draw triangle .powerTarget .press .siliconSurplus .smelter .targetCopper .targetGraphite
    5:  draw triangle .targetLead .targetMetaglass .targetSilicon .targetTitanium .titaniumDrill .unloader1
    6:  draw triangle :flares :monos :polys :buildBlock:block :buildBlock:config :buildBlock:copper
    7:  draw triangle :buildBlock:graphite :buildBlock:lead :buildBlock:metaglass :buildBlock:rotation :buildBlock:silicon :buildBlock:titanium
    8:  draw triangle :buildBlock:x :buildBlock:y :buildBlockAt:block :buildBlockAt:building :buildBlockAt:config :buildBlockAt:rotation
    9:  draw triangle :buildBlockAt:skipError :buildBlockAt:type :buildBlockAt:x :buildBlockAt:y :buildBlockFromCfg.10:x :buildBlockFromCfg.14:x
   10:  draw triangle :buildBlockFromCfg:x :buildBlockFromCfg.9:x :buildBlockFromCfg.13:x :buildBlockFromCfg.4:x :buildBlockFromCfg.12:x :buildBlockFromCfg.7:x
   11:  draw triangle :buildBlockFromCfg.6:x :buildBlockFromCfg.2:x :buildBlockFromCfg.14:y :buildBlockFromCfg.5:y :buildBlockFromCfg.1:y :buildBlockFromCfg.9:y
   12:  draw triangle :buildBlockFromCfg:y :buildBlockFromCfg.13:y :buildBlockFromCfg.17:y :buildBlockFromCfg.3:y :buildBlockFromCfg.7:y :buildBlockFromCfg.19:y
   13:  draw triangle :buildThoriumDrill:result :buildThoriumDrill:thoriumDrill :buildThoriumDrill:thoriumGenerator :buildTitaniumDrill:dx :buildTitaniumDrill:dy :buildTitaniumDrill:result
   14:  draw triangle :depositItems:block :depositItems:cap :depositItems:item :fetchBlock:block :fetchBlock:item :fetchBlock:unitItem
   15:  draw triangle :findFreeUnit:first_unit :findUnits:count :findUnits:firstUnit :findUnits:type :locateOre:ore :locateOre:x
   16:  draw triangle :locateOre:y :log:encodedId :logBlock:block :meetTarget:block :meetTarget:copper :meetTarget:count
   17:  draw triangle :meetTarget:graphite :meetTarget:lead :meetTarget:metaglass :meetTarget:silicon :meetTarget:titanium :mineOre:amount
   18:  draw triangle :mineOre:block :mineOre:item :mineOre.1:ore :mineOre:ore :mineOre:stop :mineOre:x
   19:  draw triangle :mineOre:y :moveTo:radius :moveTo.1:x :moveTo:x :moveTo.1:y :moveTo:y
   20:  draw triangle :moveToBlock:block :moveToBlock:radius :moveToEmpty:x :moveToEmpty:y :second:result :supplyBase0:coal.1
   21:  draw triangle :supplyBase0:coal :supplyBase0:sand.1 :supplyBase0:sand :supplyBase0:supplied :supplyBlock.3:blockCapacity :supplyBlock:blockCapacity
   22:  draw triangle :supplyBlock.1:blockCapacity :supplyBlock.2:blockCapacity :supplyBlock.1:missing :supplyBlock:missing :supplyBlock.2:missing :supplyBlock.3:missing
   23:  draw triangle :transportStatus.2:target 0 0 0 0 0
        label *label472
   24:  set TIME_COMPRESS 8                                          common.mnd: param TIME_COMPRESS = 8;
   25:  set .ERROR ""                                                Actions.mnd: volatile var ERROR = "";
   26:  set .press null                                              CoreBuilder.mnd: var
   27:  set .generator null                                          ...
   28:  set .battery null                                            ...
   29:  set .smelter null                                            ...
   30:  set .titaniumDrill null                                      ...
   31:  set .unloader1 null                                          ...
   32:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   33:  set .graphiteSurplus 20                                      ...
   34:  set .siliconSurplus 20                                       ...
   35:  set .metaglassSurplus 20                                     ...
   36:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
        label *label28                                               CoreBuilder.mnd: do
   37:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   38:  set .builder @unit                                           ...
   39:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   40:  jump *label28 equal .core null                               CoreBuilder.mnd: do
   41:  set .display processor1                                      CoreBuilder.mnd: display = processor1;
   42:  set :findUnits:type @flare                                   CoreBuilder.mnd: var flares = findUnits(@flare, out display.displayFlares);
   43:  setaddr :findUnits*retaddr *label31                          ...
   44:  call *label27 *invalid :findUnits*retval                     ...
        label *label31                                               ...
   45:  write :findUnits:count processor1 ".displayFlares"           ...
   46:  set :flares :findUnits*retval                                ...
   47:  set :findUnits:type @mono                                    CoreBuilder.mnd: var monos = findUnits(@mono, out display.displayMonos);
   48:  setaddr :findUnits*retaddr *label32                          ...
   49:  call *label27 *invalid :findUnits*retval                     ...
        label *label32                                               ...
   50:  write :findUnits:count processor1 ".displayMonos"            ...
   51:  set :monos :findUnits*retval                                 ...
   52:  set :findUnits:type @poly                                    CoreBuilder.mnd: var polys = findUnits(@poly, out display.displayPolys);
   53:  setaddr :findUnits*retaddr *label33                          ...
   54:  call *label27 *invalid :findUnits*retval                     ...
        label *label33                                               ...
   55:  write :findUnits:count processor1 ".displayPolys"            ...
   56:  set :polys :findUnits*retval                                 ...
   57:  op add :buildBlockFromCfg:x .coreX -1.5                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   58:  op add :buildBlockFromCfg:y .coreY 2.5                       ...
   59:  set :buildBlock:block @graphite-press                        ...
   60:  set :buildBlock:x :buildBlockFromCfg:x                       ...
   61:  set :buildBlock:y :buildBlockFromCfg:y                       ...
   62:  set :buildBlock:copper 75                                    ...
   63:  set :buildBlock:lead 30                                      ...
   64:  set :buildBlock:graphite 0                                   ...
   65:  set :buildBlock:silicon 0                                    ...
   66:  set :buildBlock:titanium 0                                   ...
   67:  set :buildBlock:metaglass 0                                  ...
   68:  set :buildBlock:rotation 0                                   ...
   69:  set :buildBlock:config null                                  ...
   70:  setaddr :buildBlock*retaddr *label39                         ...
   71:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label39                                               ...
   72:  set *tmp97 :buildBlock*retval                                ...
   73:  set .press *tmp97                                            CoreBuilder.mnd: press = buildBlockFromCfg(ref PRESS);
   74:  op add :buildBlockFromCfg.1:y .coreY 4                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   75:  set :buildBlock:block @battery                               ...
   76:  set :buildBlock:x .coreX                                     ...
   77:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   78:  set :buildBlock:copper 5                                     ...
   79:  set :buildBlock:lead 20                                      ...
   80:  setaddr :buildBlock*retaddr *label45                         ...
   81:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label45                                               ...
   82:  set *tmp101 :buildBlock*retval                               ...
   83:  set .battery *tmp101                                         CoreBuilder.mnd: battery = buildBlockFromCfg(ref BATTERY1);
   84:  op add :buildBlockFromCfg.2:x .coreX -1                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   85:  set :buildBlock:x :buildBlockFromCfg.2:x                     ...
   86:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
   87:  setaddr :buildBlock*retaddr *label51                         ...
   88:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label51                                               ...
   89:  op add :buildBlockFromCfg.3:y .coreY 3                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
   90:  set :buildBlock:block @combustion-generator                  ...
   91:  set :buildBlock:x .coreX                                     ...
   92:  set :buildBlock:y :buildBlockFromCfg.3:y                     ...
   93:  set :buildBlock:copper 25                                    ...
   94:  set :buildBlock:lead 15                                      ...
   95:  setaddr :buildBlock*retaddr *label57                         ...
   96:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label57                                               ...
   97:  set *tmp109 :buildBlock*retval                               ...
   98:  set .generator *tmp109                                       CoreBuilder.mnd: generator = buildBlockFromCfg(ref GENERATOR);
   99:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
  100:  op add :buildBlockFromCfg.4:x .coreX 1.5                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  101:  set :buildBlock:block @silicon-smelter                       ...
  102:  set :buildBlock:x :buildBlockFromCfg.4:x                     ...
  103:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  104:  set :buildBlock:copper 30                                    ...
  105:  set :buildBlock:lead 25                                      ...
  106:  setaddr :buildBlock*retaddr *label63                         ...
  107:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label63                                               ...
  108:  set *tmp113 :buildBlock*retval                               ...
  109:  set .smelter *tmp113                                         CoreBuilder.mnd: smelter = buildBlockFromCfg(ref SMELTER);
  110:  set :meetTarget:block @pneumatic-drill                       CoreBuilder.mnd: meetTarget(
  111:  set :meetTarget:copper 18                                    ...
  112:  set :meetTarget:lead 0                                       ...
  113:  set :meetTarget:graphite 10                                  ...
  114:  set :meetTarget:silicon 0                                    ...
  115:  set :meetTarget:titanium 0                                   ...
  116:  set :meetTarget:metaglass 0                                  ...
  117:  setaddr :meetTarget*retaddr *label66                         ...
  118:  call *label22 *invalid :meetTarget*retval                    ...
        label *label66                                               ...
  119:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
  120:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, false, 4, out dx, out dy);
  121:  write .coreY processor4 ":findDrillLocation:y"               ...
  122:  write @unit processor4 ":findDrillLocation:unit"             ...
  123:  write @titanium processor4 ":findDrillLocation:item"         ...
  124:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  125:  write false processor4 ":findDrillLocation:large"            ...
  126:  write 4 processor4 ":findDrillLocation:limit"                ...
  127:  write false processor4 ":findDrillLocation*finished"         ...
  128:  write 1 processor4 "@counter"                                ...
        label *label67                                               ...
  129:  wait 1e-15                                                   ...
  130:  read *tmp128 processor4 ":findDrillLocation*finished"        ...
  131:  jump *label67 equal *tmp128 false                            ...
  132:  read :buildTitaniumDrill:dx processor4 ":findDrillLocation:d ...
  133:  read :buildTitaniumDrill:dy processor4 ":findDrillLocation:d ...
  134:  read :buildTitaniumDrill:result processor4 ":findDrillLocati ...
  135:  jump *label68 notEqual :buildTitaniumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  136:  set .ERROR "Cannot locate spot for titanium drill"           Actions.mnd: ERROR = error;
  137:  stop                                                         Actions.mnd: stopProcessor();
        label *label68                                               CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
  138:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
  139:  set :buildBlockAt:block @pneumatic-drill                     CoreBuilder.mnd: return buildBlockAt(@pneumatic-drill, dx, dy, null, 0, false);
  140:  set :buildBlockAt:x :buildTitaniumDrill:dx                   ...
  141:  set :buildBlockAt:y :buildTitaniumDrill:dy                   ...
  142:  set :buildBlockAt:rotation null                              ...
  143:  set :buildBlockAt:config 0                                   ...
  144:  set :buildBlockAt:skipError false                            ...
  145:  setaddr :buildBlockAt*retaddr *label71                       ...
  146:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label71                                               ...
  147:  set .titaniumDrill :buildBlockAt*retval                      CoreBuilder.mnd: titaniumDrill = buildTitaniumDrill(ref PNEUMATIC_DRILL);
  148:  write :buildBlockAt*retval processor1 ".titaniumDrill"       CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
  149:  op add :buildBlockFromCfg.5:y .coreY 2                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  150:  set :buildBlock:block @unloader                              ...
  151:  set :buildBlock:x .coreX                                     ...
  152:  set :buildBlock:y :buildBlockFromCfg.5:y                     ...
  153:  set :buildBlock:copper 0                                     ...
  154:  set :buildBlock:lead 0                                       ...
  155:  set :buildBlock:silicon 30                                   ...
  156:  set :buildBlock:titanium 25                                  ...
  157:  setaddr :buildBlock*retaddr *label77                         ...
  158:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label77                                               ...
  159:  set *tmp132 :buildBlock*retval                               ...
  160:  set .unloader1 *tmp132                                       CoreBuilder.mnd: unloader1 = buildBlockFromCfg(ref UNLOADER1);
  161:  op add :buildBlockFromCfg.6:x .coreX 1                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  162:  set :buildBlock:block @micro-processor                       ...
  163:  set :buildBlock:x :buildBlockFromCfg.6:x                     ...
  164:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
  165:  set :buildBlock:copper 90                                    ...
  166:  set :buildBlock:lead 50                                      ...
  167:  set :buildBlock:silicon 50                                   ...
  168:  set :buildBlock:titanium 0                                   ...
  169:  setaddr :buildBlock*retaddr *label83                         ...
  170:  set :buildBlock:config processor2                            CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  171:  call *label26 *invalid :buildBlock*retval                    ...
        label *label83                                               ...
  172:  set *tmp136 :buildBlock*retval                               ...
  173:  set .controller *tmp136                                      CoreBuilder.mnd: controller = buildBlockFromCfg(ref PROCESSOR);
  174:  write processor1 *tmp136 ".display"                          CoreBuilder.mnd: controller.display = display;
  175:  write .core *tmp136 ".core"                                  CoreBuilder.mnd: controller.core = core;
  176:  write bank1 *tmp136 ".bank"                                  CoreBuilder.mnd: controller.bank = bank1;
  177:  write *tmp101 *tmp136 ".battery"                             CoreBuilder.mnd: controller.battery = battery;
  178:  write *tmp109 *tmp136 ".generator"                           CoreBuilder.mnd: controller.generator = generator;
  179:  write *tmp113 *tmp136 ".smelter"                             CoreBuilder.mnd: controller.smelter = smelter;
  180:  write *tmp97 *tmp136 ".press"                                CoreBuilder.mnd: controller.press = press;
  181:  write :monos *tmp136 ".monos"                                CoreBuilder.mnd: controller.monos = monos;
  182:  write :flares *tmp136 ".flares"                              CoreBuilder.mnd: controller.flares = flares;
  183:  write :polys *tmp136 ".polys"                                CoreBuilder.mnd: controller.polys = polys;
  184:  op add :buildBlockFromCfg.7:x .coreX -2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  185:  op add :buildBlockFromCfg.7:y .coreY 1                       ...
  186:  set :buildBlock:block @power-node                            ...
  187:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  188:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  189:  set :buildBlock:copper 2                                     ...
  190:  set :buildBlock:lead 6                                       ...
  191:  set :buildBlock:silicon 0                                    ...
  192:  set :buildBlock:config null                                  ...
  193:  setaddr :buildBlock*retaddr *label89                         ...
  194:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label89                                               ...
  195:  set :buildBlock:block @unloader                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  196:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  197:  set :buildBlock:y .coreY                                     ...
  198:  set :buildBlock:copper 0                                     ...
  199:  set :buildBlock:lead 0                                       ...
  200:  set :buildBlock:silicon 30                                   ...
  201:  set :buildBlock:titanium 25                                  ...
  202:  setaddr :buildBlock*retaddr *label95                         ...
  203:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label95                                               ...
  204:  set *tmp144 :buildBlock*retval                               ...
  205:  write *tmp144 *tmp136 ".unloader2"                           CoreBuilder.mnd: controller.unloader2 = buildBlockFromCfg(ref UNLOADER2);
  206:  op add :buildBlockFromCfg.9:x .coreX -3                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  207:  op add :buildBlockFromCfg.9:y .coreY -2                      ...
  208:  set :buildBlock:block @air-factory                           ...
  209:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  210:  set :buildBlock:y :buildBlockFromCfg.9:y                     ...
  211:  set :buildBlock:copper 60                                    ...
  212:  set :buildBlock:lead 70                                      ...
  213:  set :buildBlock:silicon 0                                    ...
  214:  set :buildBlock:titanium 0                                   ...
  215:  set :buildBlock:rotation 3                                   ...
  216:  set :buildBlock:config @mono                                 ...
  217:  setaddr :buildBlock*retaddr *label101                        ...
  218:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label101                                              ...
  219:  set *tmp148 :buildBlock*retval                               ...
  220:  write *tmp148 *tmp136 ".factory"                             CoreBuilder.mnd: controller.factory = factory;
  221:  write *tmp148 processor1 ".factory"                          CoreBuilder.mnd: display.factory = factory;
  222:  write 1 *tmp136 ".flareTarget"                               CoreBuilder.mnd: controller.flareTarget = 1;
  223:  write 3 *tmp136 ".monoTarget"                                CoreBuilder.mnd: controller.monoTarget = 3;
  224:  write 0 *tmp136 ".polyTarget"                                CoreBuilder.mnd: controller.polyTarget = 0;
  225:  write 85 *tmp136 ".pressTarget"                              CoreBuilder.mnd: controller.pressTarget = 85;
  226:  write 150 *tmp136 ".smelterTarget"                           CoreBuilder.mnd: controller.smelterTarget = 150;
  227:  write 30 *tmp136 ".kilnTarget"                               CoreBuilder.mnd: controller.kilnTarget = 30;
  228:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  229:  set .siliconSurplus 20                                       ...
  230:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0);
  231:  set :meetTarget:copper 0                                     ...
  232:  set :meetTarget:lead 0                                       ...
  233:  set :meetTarget:graphite 0                                   ...
  234:  set :meetTarget:silicon 0                                    ...
  235:  set :meetTarget:titanium 0                                   ...
  236:  set :meetTarget:metaglass 0                                  ...
  237:  setaddr :meetTarget*retaddr *label103                        ...
  238:  call *label22 *invalid :meetTarget*retval                    ...
        label *label103                                              ...
  239:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  240:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  241:  write 0 *tmp136 ".leadReserve"                               CoreBuilder.mnd: controller.leadReserve = 0;
  242:  write 0 *tmp136 ".siliconReserve"                            CoreBuilder.mnd: controller.siliconReserve = 0;
        label *label104                                              CoreBuilder.mnd: do
  243:  setaddr :supplyBase*retaddr *label107                        CoreBuilder.mnd: supplyBase();
  244:  call *label20 *invalid :supplyBase*retval                    ...
        label *label107                                              ...
  245:  sensor *tmp152 *tmp101 @totalPower                           CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  246:  jump *label106 lessThan *tmp152 300                          ...
  247:  read *tmp39 *tmp136 ".monos"                                 CoreBuilder.mnd: while controller.monos < 3;
  248:  jump *label104 lessThan *tmp39 3                             CoreBuilder.mnd: do
        label *label106                                              ...
  249:  set .graphiteSurplus 60                                      CoreBuilder.mnd: graphiteSurplus = 60;
  250:  set .siliconSurplus 100                                      CoreBuilder.mnd: siliconSurplus = 100;
  251:  set .metaglassSurplus 60                                     CoreBuilder.mnd: metaglassSurplus = 60;
  252:  op add :buildBlockFromCfg.10:x .coreX 2                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  253:  set :buildBlock:block @unloader                              ...
  254:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  255:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  256:  set :buildBlock:copper 0                                     ...
  257:  set :buildBlock:lead 0                                       ...
  258:  set :buildBlock:silicon 30                                   ...
  259:  set :buildBlock:titanium 25                                  ...
  260:  set :buildBlock:rotation 0                                   ...
  261:  set :buildBlock:config null                                  ...
  262:  setaddr :buildBlock*retaddr *label115                        ...
  263:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label115                                              ...
  264:  set :buildBlock:block @junction                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  265:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  266:  set :buildBlock:y .coreY                                     ...
  267:  set :buildBlock:copper 3                                     ...
  268:  set :buildBlock:silicon 0                                    ...
  269:  set :buildBlock:titanium 0                                   ...
  270:  setaddr :buildBlock*retaddr *label121                        ...
  271:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label121                                              ...
  272:  op add :buildBlockFromCfg.12:x .coreX 3                      CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  273:  set :buildBlock:block @inverted-sorter                       ...
  274:  set :buildBlock:x :buildBlockFromCfg.12:x                    ...
  275:  set :buildBlock:y .coreY                                     ...
  276:  set :buildBlock:copper 2                                     ...
  277:  set :buildBlock:lead 2                                       ...
  278:  set :buildBlock:config @metaglass                            ...
  279:  setaddr :buildBlock*retaddr *label127                        ...
  280:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label127                                              ...
  281:  op add :buildBlockFromCfg.13:x .coreX 3.5                    CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  282:  op add :buildBlockFromCfg.13:y .coreY 1.5                    ...
  283:  set :buildBlock:block @kiln                                  ...
  284:  set :buildBlock:x :buildBlockFromCfg.13:x                    ...
  285:  set :buildBlock:y :buildBlockFromCfg.13:y                    ...
  286:  set :buildBlock:copper 60                                    ...
  287:  set :buildBlock:lead 30                                      ...
  288:  set :buildBlock:graphite 30                                  ...
  289:  set :buildBlock:config null                                  ...
  290:  setaddr :buildBlock*retaddr *label133                        ...
  291:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label133                                              ...
  292:  set *tmp168 :buildBlock*retval                               ...
  293:  write *tmp168 *tmp136 ".kiln"                                CoreBuilder.mnd: controller.kiln = kiln;
  294:  op add :buildBlockFromCfg.14:x .coreX -3.5                   CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  295:  op add :buildBlockFromCfg.14:y .coreY 3.5                    ...
  296:  set :buildBlock:block @water-extractor                       ...
  297:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  298:  set :buildBlock:y :buildBlockFromCfg.14:y                    ...
  299:  set :buildBlock:copper 30                                    ...
  300:  set :buildBlock:metaglass 30                                 ...
  301:  setaddr :buildBlock*retaddr *label139                        ...
  302:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label139                                              ...
  303:  set :buildBlock:block @overflow-gate                         CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  304:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  305:  set :buildBlock:y .coreY                                     ...
  306:  set :buildBlock:copper 4                                     ...
  307:  set :buildBlock:lead 2                                       ...
  308:  set :buildBlock:graphite 0                                   ...
  309:  set :buildBlock:metaglass 0                                  ...
  310:  setaddr :buildBlock*retaddr *label145                        ...
  311:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label145                                              ...
  312:  set :buildBlock:block @steam-generator                       CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  313:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  314:  set :buildBlock:y :buildBlockFromCfg.13:y                    ...
  315:  set :buildBlock:copper 35                                    ...
  316:  set :buildBlock:lead 40                                      ...
  317:  set :buildBlock:graphite 25                                  ...
  318:  set :buildBlock:silicon 30                                   ...
  319:  setaddr :buildBlock*retaddr *label151                        ...
  320:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label151                                              ...
  321:  set *tmp180 :buildBlock*retval                               ...
  322:  write *tmp180 *tmp136 ".generator2"                          CoreBuilder.mnd: controller.generator2 = buildBlockFromCfg(ref STEAM_GEN);
  323:  op add :buildBlockFromCfg.17:y .coreY -5                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  324:  set :buildBlock:block @payload-router                        ...
  325:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  326:  set :buildBlock:y :buildBlockFromCfg.17:y                    ...
  327:  set :buildBlock:copper 10                                    ...
  328:  set :buildBlock:lead 0                                       ...
  329:  set :buildBlock:graphite 15                                  ...
  330:  set :buildBlock:silicon 0                                    ...
  331:  setaddr :buildBlock*retaddr *label157                        ...
  332:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label157                                              ...
  333:  set *tmp184 :buildBlock*retval                               ...
  334:  write *tmp184 *tmp136 ".payloadRouter"                       CoreBuilder.mnd: controller.payloadRouter = buildBlockFromCfg(ref PAYLOAD_ROUTER);
  335:  set :buildBlock:block @unloader                              CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  336:  set :buildBlock:x .coreX                                     ...
  337:  set :buildBlock:y :buildBlockFromCfg.9:y                     ...
  338:  set :buildBlock:copper 0                                     ...
  339:  set :buildBlock:graphite 0                                   ...
  340:  set :buildBlock:silicon 30                                   ...
  341:  set :buildBlock:titanium 25                                  ...
  342:  setaddr :buildBlock*retaddr *label163                        ...
  343:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label163                                              ...
  344:  op add :buildBlockFromCfg.19:y .coreY -3                     CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  345:  set :buildBlock:block @underflow-gate                        ...
  346:  set :buildBlock:x .coreX                                     ...
  347:  set :buildBlock:y :buildBlockFromCfg.19:y                    ...
  348:  set :buildBlock:copper 4                                     ...
  349:  set :buildBlock:lead 2                                       ...
  350:  set :buildBlock:silicon 0                                    ...
  351:  set :buildBlock:titanium 0                                   ...
  352:  setaddr :buildBlock*retaddr *label169                        ...
  353:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label169                                              ...
  354:  set :buildBlock:block @additive-reconstructor                CoreBuilder.mnd: for var block, offsetX, offsetY, copper, lead, graphite, silicon, titanium, metaglass, rotation, config in cfg do
  355:  set :buildBlock:x .coreX                                     ...
  356:  set :buildBlock:y :buildBlockFromCfg.17:y                    ...
  357:  set :buildBlock:copper 200                                   ...
  358:  set :buildBlock:lead 120                                     ...
  359:  set :buildBlock:silicon 90                                   ...
  360:  setaddr :buildBlock*retaddr *label175                        ...
  361:  call *label26 *invalid :buildBlock*retval                    CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
        label *label175                                              ...
  362:  set *tmp196 :buildBlock*retval                               ...
  363:  write *tmp196 *tmp136 ".reconstructor"                       CoreBuilder.mnd: controller.reconstructor = reconstructor;
  364:  write *tmp196 processor1 ".reconstructor"                    CoreBuilder.mnd: display.reconstructor = reconstructor;
  365:  set .graphiteSurplus 200                                     CoreBuilder.mnd: graphiteSurplus = 200;
  366:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  367:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  368:  write 4 *tmp136 ".polyTarget"                                CoreBuilder.mnd: controller.polyTarget = 4;
        label *label176                                              CoreBuilder.mnd: while controller.polys < 4 do
  369:  read *tmp40 *tmp136 ".polys"                                 ...
  370:  jump *label178 greaterThanEq *tmp40 4                        ...
  371:  setaddr :supplyBase*retaddr *label179                        CoreBuilder.mnd: supplyBase();
  372:  call *label20 *invalid :supplyBase*retval                    ...
        label *label179                                              ...
  373:  jump *label176 always 0 0                                    CoreBuilder.mnd: while controller.polys < 4 do
        label *label178                                              ...
        label *label180                                              CoreBuilder.mnd: while controller.flares < 1 do
  374:  read *tmp38 *tmp136 ".flares"                                ...
  375:  jump *label182 greaterThanEq *tmp38 1                        ...
  376:  setaddr :supplyBase*retaddr *label183                        CoreBuilder.mnd: supplyBase();
  377:  call *label20 *invalid :supplyBase*retval                    ...
        label *label183                                              ...
  378:  jump *label180 always 0 0                                    CoreBuilder.mnd: while controller.flares < 1 do
        label *label182                                              ...
  379:  ubind @flare                                                 *units: ubind(unit_type);
  380:  jump *label184 equal @unit null                              *units: if @unit == null then return null; end;
  381:  set :findFreeUnit:first_unit @unit                           *units: var first_unit = @unit;
        label *label187                                              *units: do
  382:  sensor *tmp205 @unit @controlled                             *units: if @unit.@controlled == 0 then
  383:  jump *label190 notEqual *tmp205 0                            ...
  384:  ucontrol flag 0 0 0 0 0                                      *units: flag(initial_flag);        // Mark unit as active
  385:  jump *label184 always 0 0                                    *units: return @unit;
        label *label190                                              *units: if @unit.@controlled == 0 then
  386:  sensor *tmp208 :findFreeUnit:first_unit @dead                *units: elsif first_unit.@dead == 1 then
  387:  jump *label192 notEqual *tmp208 1                            ...
  388:  set :findFreeUnit:first_unit @unit                           *units: first_unit = @unit;
        label *label192                                              *units: elsif first_unit.@dead == 1 then
  389:  ubind @flare                                                 *units: ubind(unit_type);
  390:  jump *label187 notEqual :findFreeUnit:first_unit @unit       *units: do
        label *label184                                              CoreBuilder.mnd: findFreeUnit(@flare, 0);
  391:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: async(oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7));
  392:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  393:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  394:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  395:  write false processor4 ":layoutThoriumDrill*finished"        ...
  396:  write 2 processor4 "@counter"                                ...
  397:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
        label *label194                                              CoreBuilder.mnd: do
  398:  setaddr :supplyBase*retaddr *label197                        CoreBuilder.mnd: supplyBase();
  399:  call *label20 *invalid :supplyBase*retval                    ...
        label *label197                                              ...
  400:  read *tmp217 processor4 ":layoutThoriumDrill*finished"       CoreBuilder.mnd: while !finished(layoutThoriumDrill);
  401:  jump *label194 equal *tmp217 false                           CoreBuilder.mnd: do
  402:  set :meetTarget:block @laser-drill                           CoreBuilder.mnd: meetTarget(
  403:  set :meetTarget:copper 35                                    ...
  404:  set :meetTarget:lead 0                                       ...
  405:  set :meetTarget:graphite 30                                  ...
  406:  set :meetTarget:silicon 30                                   ...
  407:  set :meetTarget:titanium 20                                  ...
  408:  set :meetTarget:metaglass 0                                  ...
  409:  setaddr :meetTarget*retaddr *label200                        ...
  410:  call *label22 *invalid :meetTarget*retval                    ...
        label *label200                                              ...
        label *label201                                              CoreBuilder.mnd: var result = await(layoutThoriumDrill);
  411:  wait 1e-15                                                   ...
  412:  read *tmp219 processor4 ":layoutThoriumDrill*finished"       ...
  413:  jump *label201 equal *tmp219 false                           ...
  414:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  415:  jump *label202 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  416:  set .ERROR "Cannot locate spot for thorium drill"            Actions.mnd: ERROR = error;
  417:  stop                                                         Actions.mnd: stopProcessor();
        label *label202                                              CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  418:  set :buildBlockAt:block @laser-drill                         CoreBuilder.mnd: var thoriumDrill = buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0, false);
  419:  read :buildBlockAt:x processor4 ".drillX"                    ...
  420:  read :buildBlockAt:y processor4 ".drillY"                    ...
  421:  set :buildBlockAt:rotation null                              ...
  422:  set :buildBlockAt:config 0                                   ...
  423:  set :buildBlockAt:skipError false                            ...
  424:  setaddr :buildBlockAt*retaddr *label205                      ...
  425:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label205                                              ...
  426:  set :buildThoriumDrill:thoriumDrill :buildBlockAt*retval     ...
  427:  read *tmp74 processor4 ".water1X"                            CoreBuilder.mnd: if oreLocator.water1X < 0 then return; end;
  428:  jump *label198 lessThan *tmp74 0                             ...
  429:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  430:  set :meetTarget:copper 30                                    ...
  431:  set :meetTarget:lead 30                                      ...
  432:  set :meetTarget:graphite 30                                  ...
  433:  set :meetTarget:silicon 0                                    ...
  434:  set :meetTarget:titanium 0                                   ...
  435:  set :meetTarget:metaglass 30                                 ...
  436:  setaddr :meetTarget*retaddr *label209                        ...
  437:  call *label22 *invalid :meetTarget*retval                    ...
        label *label209                                              ...
  438:  set :buildBlockAt:block @water-extractor                     CoreBuilder.mnd: buildBlockAt(@water-extractor, oreLocator.water1X, oreLocator.water1Y, null, 0, false);
  439:  read *tmp74 processor4 ".water1X"                            ...
  440:  set :buildBlockAt:x *tmp74                                   ...
  441:  read :buildBlockAt:y processor4 ".water1Y"                   ...
  442:  set :buildBlockAt:rotation null                              ...
  443:  set :buildBlockAt:config 0                                   ...
  444:  set :buildBlockAt:skipError false                            ...
  445:  setaddr :buildBlockAt*retaddr *label210                      ...
  446:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label210                                              ...
  447:  read *tmp76 processor4 ".water2X"                            CoreBuilder.mnd: if oreLocator.water2X < 0 then return; end;
  448:  jump *label198 lessThan *tmp76 0                             ...
  449:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  450:  set :meetTarget:copper 30                                    ...
  451:  set :meetTarget:lead 30                                      ...
  452:  set :meetTarget:graphite 30                                  ...
  453:  set :meetTarget:silicon 0                                    ...
  454:  set :meetTarget:titanium 0                                   ...
  455:  set :meetTarget:metaglass 30                                 ...
  456:  setaddr :meetTarget*retaddr *label214                        ...
  457:  call *label22 *invalid :meetTarget*retval                    ...
        label *label214                                              ...
  458:  set :buildBlockAt:block @water-extractor                     CoreBuilder.mnd: buildBlockAt(@water-extractor, oreLocator.water2X, oreLocator.water2Y, null, 0, false);
  459:  read *tmp76 processor4 ".water2X"                            ...
  460:  set :buildBlockAt:x *tmp76                                   ...
  461:  read :buildBlockAt:y processor4 ".water2Y"                   ...
  462:  set :buildBlockAt:rotation null                              ...
  463:  set :buildBlockAt:config 0                                   ...
  464:  set :buildBlockAt:skipError false                            ...
  465:  setaddr :buildBlockAt*retaddr *label215                      ...
  466:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label215                                              ...
  467:  set :meetTarget:block @water-extractor                       CoreBuilder.mnd: meetTarget(
  468:  set :meetTarget:copper 30                                    ...
  469:  set :meetTarget:lead 30                                      ...
  470:  set :meetTarget:graphite 30                                  ...
  471:  set :meetTarget:silicon 0                                    ...
  472:  set :meetTarget:titanium 0                                   ...
  473:  set :meetTarget:metaglass 30                                 ...
  474:  setaddr :meetTarget*retaddr *label217                        ...
  475:  call *label22 *invalid :meetTarget*retval                    ...
        label *label217                                              ...
  476:  set :buildBlockAt:block @steam-generator                     CoreBuilder.mnd: var thoriumGenerator = buildBlockAt(@steam-generator, oreLocator.generatorX, oreLocator.generatorY, null, 0, false);
  477:  read :buildBlockAt:x processor4 ".generatorX"                ...
  478:  read :buildBlockAt:y processor4 ".generatorY"                ...
  479:  set :buildBlockAt:rotation null                              ...
  480:  set :buildBlockAt:config 0                                   ...
  481:  set :buildBlockAt:skipError false                            ...
  482:  setaddr :buildBlockAt*retaddr *label218                      ...
  483:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label218                                              ...
  484:  set :buildThoriumDrill:thoriumGenerator :buildBlockAt*retval ...
  485:  set :meetTarget:block @power-node                            CoreBuilder.mnd: meetTarget(
  486:  set :meetTarget:copper 2                                     ...
  487:  set :meetTarget:lead 6                                       ...
  488:  set :meetTarget:graphite 0                                   ...
  489:  set :meetTarget:silicon 0                                    ...
  490:  set :meetTarget:titanium 0                                   ...
  491:  set :meetTarget:metaglass 0                                  ...
  492:  setaddr :meetTarget*retaddr *label220                        ...
  493:  call *label22 *invalid :meetTarget*retval                    ...
        label *label220                                              ...
  494:  set :buildBlockAt:block @power-node                          CoreBuilder.mnd: buildBlockAt(@power-node, oreLocator.nodeX, oreLocator.nodeY, null, 0, false);
  495:  read :buildBlockAt:x processor4 ".nodeX"                     ...
  496:  read :buildBlockAt:y processor4 ".nodeY"                     ...
  497:  set :buildBlockAt:rotation null                              ...
  498:  set :buildBlockAt:config 0                                   ...
  499:  set :buildBlockAt:skipError false                            ...
  500:  setaddr :buildBlockAt*retaddr *label221                      ...
  501:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label221                                              ...
  502:  set :meetTarget:block @solar-panel                           CoreBuilder.mnd: meetTarget(
  503:  set :meetTarget:copper 0                                     ...
  504:  set :meetTarget:lead 10                                      ...
  505:  set :meetTarget:graphite 0                                   ...
  506:  set :meetTarget:silicon 8                                    ...
  507:  set :meetTarget:titanium 0                                   ...
  508:  set :meetTarget:metaglass 0                                  ...
  509:  setaddr :meetTarget*retaddr *label223                        ...
  510:  call *label22 *invalid :meetTarget*retval                    ...
        label *label223                                              ...
  511:  set :buildBlockAt:block @solar-panel                         CoreBuilder.mnd: buildBlockAt(@solar-panel, oreLocator.panelX, oreLocator.panelY, null, 0, false);
  512:  read :buildBlockAt:x processor4 ".panelX"                    ...
  513:  read :buildBlockAt:y processor4 ".panelY"                    ...
  514:  set :buildBlockAt:rotation null                              ...
  515:  set :buildBlockAt:config 0                                   ...
  516:  set :buildBlockAt:skipError false                            ...
  517:  setaddr :buildBlockAt*retaddr *label224                      ...
  518:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label224                                              ...
  519:  set :meetTarget:block @battery                               CoreBuilder.mnd: meetTarget(
  520:  set :meetTarget:copper 5                                     ...
  521:  set :meetTarget:lead 20                                      ...
  522:  set :meetTarget:graphite 0                                   ...
  523:  set :meetTarget:silicon 0                                    ...
  524:  set :meetTarget:titanium 0                                   ...
  525:  set :meetTarget:metaglass 0                                  ...
  526:  setaddr :meetTarget*retaddr *label226                        ...
  527:  call *label22 *invalid :meetTarget*retval                    ...
        label *label226                                              ...
  528:  set :buildBlockAt:block @battery                             CoreBuilder.mnd: buildBlockAt(@battery, oreLocator.batteryX, oreLocator.batteryY, null, 0, false);
  529:  read :buildBlockAt:x processor4 ".batteryX"                  ...
  530:  read :buildBlockAt:y processor4 ".batteryY"                  ...
  531:  set :buildBlockAt:rotation null                              ...
  532:  set :buildBlockAt:config 0                                   ...
  533:  set :buildBlockAt:skipError false                            ...
  534:  setaddr :buildBlockAt*retaddr *label227                      ...
  535:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label227                                              ...
  536:  write :buildThoriumDrill:thoriumDrill processor1 ".thoriumDr CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  537:  write :buildThoriumDrill:thoriumDrill processor3 ":addThoriu CoreBuilder.mnd: flareController.addThoriumDrill(thoriumDrill, thoriumGenerator);
  538:  write :buildThoriumDrill:thoriumGenerator processor3 ":addTh ...
  539:  write false processor3 ":addThoriumDrill*finished"           ...
  540:  write 1 processor3 "@counter"                                ...
        label *label228                                              ...
  541:  wait 1e-15                                                   ...
  542:  read *tmp236 processor3 ":addThoriumDrill*finished"          ...
  543:  jump *label228 equal *tmp236 false                           ...
        label *label198                                              CoreBuilder.mnd: buildThoriumDrill();
  544:  write 0 processor1 ".totalTargets"                           CoreBuilder.mnd: display.totalTargets = 0;
  545:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
        label *label229                                              CoreBuilder.mnd: do
  546:  setaddr :supplyBase*retaddr *label232                        CoreBuilder.mnd: supplyBase();
  547:  call *label20 *invalid :supplyBase*retval                    ...
        label *label232                                              ...
  548:  read *tmp38 *tmp136 ".flares"                                CoreBuilder.mnd: while controller.flares + controller.monos < 16;
  549:  read *tmp39 *tmp136 ".monos"                                 ...
  550:  op add *tmp237 *tmp38 *tmp39                                 ...
  551:  jump *label229 lessThan *tmp237 16                           CoreBuilder.mnd: do
        label *label233                                              CoreBuilder.mnd: while true do
  552:  setaddr :supplyBase*retaddr *label236                        CoreBuilder.mnd: supplyBase();
  553:  call *label20 *invalid :supplyBase*retval                    ...
        label *label236                                              ...
  554:  jump *label233 always 0 0                                    CoreBuilder.mnd: while true do
        label *label5                                                Actions.mnd: void moveTo(x, y, radius)
  555:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  556:  op sub *tmp241 :moveTo:radius 0.5                            Actions.mnd: while !within(x, y, radius) do
        label *label241                                              ...
  557:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp239 0 ...
  558:  jump *label243 notEqual *tmp239 false                        ...
  559:  ucontrol approach :moveTo:x :moveTo:y *tmp241 0 0            Actions.mnd: approach(x, y, radius - 0.5);
  560:  jump *label241 always 0 0                                    Actions.mnd: while !within(x, y, radius) do
        label *label243                                              ...
  561:  return :moveTo*retaddr                                       Actions.mnd: void moveTo(x, y, radius)
        label *label6                                                Actions.mnd: void moveTo(x, y)
  562:  set :moveTo:x :moveTo.1:x                                    Actions.mnd: moveTo(x, y, RADIUS);
  563:  set :moveTo:y :moveTo.1:y                                    ...
  564:  set :moveTo:radius 6                                         ...
  565:  setaddr :moveTo*retaddr *label245                            ...
  566:  call *label5 *invalid :moveTo*retval                         ...
        label *label245                                              ...
  567:  return :moveTo.1*retaddr                                     Actions.mnd: void moveTo(x, y)
        label *label7                                                Actions.mnd: void moveToEmpty(x, y)
  568:  write "Moving..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
        label *label248                                              Actions.mnd: do
  569:  sensor *tmp244 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  570:  jump *label251 equal *tmp244 null                            ...
  571:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label251                                              ...
  572:  ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5 0 0      Actions.mnd: approach(x, y, RADIUS - 0.5);
  573:  ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp247 0    Actions.mnd: while !within(x, y, RADIUS);
  574:  jump *label248 equal *tmp247 false                           Actions.mnd: do
  575:  return :moveToEmpty*retaddr                                  Actions.mnd: void moveToEmpty(x, y)
        label *label8                                                Actions.mnd: void moveToBlock(block, radius)
  576:  sensor *tmp249 :moveToBlock:block @x                         Actions.mnd: moveTo(block.@x, block.@y, radius);
  577:  sensor *tmp250 :moveToBlock:block @y                         ...
  578:  set :moveTo:x *tmp249                                        ...
  579:  set :moveTo:y *tmp250                                        ...
  580:  set :moveTo:radius :moveToBlock:radius                       ...
  581:  setaddr :moveTo*retaddr *label254                            ...
  582:  call *label5 *invalid :moveTo*retval                         ...
        label *label254                                              ...
  583:  return :moveToBlock*retaddr                                  Actions.mnd: void moveToBlock(block, radius)
        label *label9                                                Actions.mnd: void depositItems(block, item)
  584:  write "Depositing..." .display ".status3"                    CoreBuilder.mnd: display.status3 = text;
  585:  sensor *tmp251 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  586:  jump *label257 notEqual *tmp251 :depositItems:item           ...
  587:  set :moveToBlock:block :depositItems:block                   Actions.mnd: moveToBlock(block, RADIUS);
  588:  set :moveToBlock:radius 6                                    ...
  589:  setaddr :moveToBlock*retaddr *label259                       ...
  590:  call *label8 *invalid :moveToBlock*retval                    ...
        label *label259                                              ...
  591:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label260                                              Actions.mnd: do
  592:  ucontrol itemDrop :depositItems:block 30 0 0 0               Actions.mnd: itemDrop(block, capacity);
  593:  sensor *tmp255 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  594:  op mul *tmp256 *tmp255 :depositItems:cap                     ...
  595:  sensor *tmp257 :depositItems:block :depositItems:item        ...
  596:  jump *label260 greaterThan *tmp256 *tmp257                   Actions.mnd: do
  597:  jump *label258 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label257                                              ...
        label *label263                                              Actions.mnd: while @unit.@firstItem != null do
  598:  sensor *tmp259 @unit @firstItem                              ...
  599:  jump *label265 equal *tmp259 null                            ...
  600:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  601:  jump *label263 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label265                                              ...
        label *label258                                              Actions.mnd: if @unit.@firstItem == item then
  602:  write 0 .display ".transportTarget"                          CoreBuilder.mnd: display.transportTarget = target;
  603:  write null .display ".transportItem"                         CoreBuilder.mnd: display.transportItem = item;
  604:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item)
        label *label10                                               Actions.mnd: void locateOre(ore, out x, out y)
  605:  ulocate ore core true :locateOre:ore :locateOre:x :locateOre Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  606:  jump *label268 notEqual *tmp261 false                        ...
  607:  set .ERROR "Cannot locate ore"                               Actions.mnd: ERROR = error;
  608:  stop                                                         Actions.mnd: stopProcessor();
        label *label268                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  609:  return :locateOre*retaddr                                    Actions.mnd: void locateOre(ore, out x, out y)
        label *label11                                               Actions.mnd: void mineOre(ore, amount, block)
  610:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  611:  write :mineOre:amount .display ".transportTarget"            CoreBuilder.mnd: display.transportTarget = target;
  612:  write :mineOre:ore .display ".transportItem"                 CoreBuilder.mnd: display.transportItem = item;
  613:  set :locateOre:ore :mineOre:ore                              Actions.mnd: locateOre(ore, out x, out y);
  614:  setaddr :locateOre*retaddr *label273                         ...
  615:  call *label10 *invalid :locateOre*retval                     ...
        label *label273                                              ...
  616:  set :mineOre:x :locateOre:x                                  ...
  617:  set :mineOre:y :locateOre:y                                  ...
  618:  set :moveToEmpty:x :locateOre:x                              Actions.mnd: moveToEmpty(x, y);
  619:  set :moveToEmpty:y :locateOre:y                              ...
  620:  setaddr :moveToEmpty*retaddr *label274                       ...
  621:  call *label7 *invalid :moveToEmpty*retval                    ...
        label *label274                                              ...
  622:  sensor *tmp266 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  623:  jump *label275 equal *tmp266 :mineOre:ore                    ...
        label *label278                                              Actions.mnd: while @unit.@firstItem != null do
  624:  sensor *tmp269 @unit @firstItem                              ...
  625:  jump *label280 equal *tmp269 null                            ...
  626:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  627:  jump *label278 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label280                                              ...
        label *label275                                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  628:  write "Mining..." .display ".status3"                        CoreBuilder.mnd: display.status3 = text;
  629:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label282                                              Actions.mnd: do
  630:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  631:  op notEqual *tmp273 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  632:  op notEqual *tmp274 :mineOre:item :mineOre:ore               ...
  633:  op land *tmp275 *tmp273 *tmp274                              ...
  634:  jump *label284 notEqual *tmp275 false                        ...
  635:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    Actions.mnd: mine(x, y);
  636:  jump *label284 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  637:  sensor *tmp279 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  638:  jump *label282 lessThan *tmp279 :mineOre:amount              Actions.mnd: do
        label *label284                                              ...
  639:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  640:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore);
  641:  set :depositItems:item :mineOre:ore                          ...
  642:  setaddr :depositItems*retaddr *label289                      ...
  643:  call *label9 *invalid :depositItems*retval                   ...
        label *label289                                              ...
  644:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label12                                               Actions.mnd: void mineOre(ore)
  645:  write "Mining " .display ".status2"                          CoreBuilder.mnd: display.status2  = text;
  646:  write :mineOre.1:ore .display ".item2"                       CoreBuilder.mnd: display.item2  = item;
  647:  write "core" .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  648:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  649:  set :mineOre:amount 30                                       ...
  650:  set :mineOre:block .core                                     ...
  651:  setaddr :mineOre*retaddr *label292                           ...
  652:  call *label11 *invalid :mineOre*retval                       ...
        label *label292                                              ...
  653:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label13                                               Actions.mnd: void fetchBlock(block, item)
  654:  sensor :transportStatus.2:target :fetchBlock:block @itemCapa Actions.mnd: transportStatus(block.@itemCapacity, item);
  655:  write :transportStatus.2:target .display ".transportTarget"  ...
  656:  write :fetchBlock:item .display ".transportItem"             CoreBuilder.mnd: display.transportItem = item;
  657:  write "Fetching " .display ".status2"                        CoreBuilder.mnd: display.status2  = text;
  658:  write :fetchBlock:item .display ".item2"                     CoreBuilder.mnd: display.item2  = item;
  659:  write :fetchBlock:block .display ".block2"                   CoreBuilder.mnd: display.block2 = block;
  660:  sensor *tmp283 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  661:  sensor *tmp284 :fetchBlock:block @y                          ...
  662:  set :moveToEmpty:x *tmp283                                   ...
  663:  set :moveToEmpty:y *tmp284                                   ...
  664:  setaddr :moveToEmpty*retaddr *label296                       ...
  665:  call *label7 *invalid :moveToEmpty*retval                    ...
        label *label296                                              ...
        label *label298                                              Actions.mnd: while @unit.@firstItem != null do
  666:  sensor *tmp285 @unit @firstItem                              ...
  667:  jump *label300 equal *tmp285 null                            ...
  668:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  669:  jump *label298 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label300                                              ...
        label *label301                                              Actions.mnd: do
  670:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  671:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  672:  op notEqual *tmp288 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  673:  op notEqual *tmp289 :fetchBlock:unitItem :fetchBlock:item    ...
  674:  op land *tmp290 *tmp288 *tmp289                              ...
  675:  jump *label304 equal *tmp290 false                           ...
  676:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label304                                              Actions.mnd: if unitItem != null and unitItem != item then
  677:  sensor *tmp292 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  678:  op lessThan *tmp293 *tmp292 30                               ...
  679:  sensor *tmp294 :fetchBlock:block :fetchBlock:item            ...
  680:  op land *tmp295 *tmp293 *tmp294                              ...
  681:  jump *label301 notEqual *tmp295 false                        Actions.mnd: do
  682:  set :depositItems:block .core                                Actions.mnd: depositItems(core, item);
  683:  set :depositItems:item :fetchBlock:item                      ...
  684:  setaddr :depositItems*retaddr *label306                      ...
  685:  call *label9 *invalid :depositItems*retval                   ...
        label *label306                                              ...
  686:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label18                                               CoreBuilder.mnd: void supplyBase0()
  687:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  688:  jump *label308 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  689:  sensor *tmp298 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  690:  jump *label310 greaterThanEq *tmp298 .targetGraphite         ...
  691:  sensor *tmp301 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  692:  jump *label312 greaterThanEq *tmp301 5                       ...
  693:  write "Goal 1: graphite requirement" .display ".status1"     CoreBuilder.mnd: display.status1 = text;
  694:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  695:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  696:  write .press .display ".block2"                              CoreBuilder.mnd: display.block2 = block;
  697:  sensor :supplyBlock:blockCapacity .press @itemCapacity       CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  698:  sensor *tmp305 .press @coal                                  CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  699:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp3 ...
  700:  jump *label317 lessThanEq :supplyBlock:missing 0             CoreBuilder.mnd: if missing > 0 then
  701:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  702:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  703:  set :mineOre:block .press                                    ...
  704:  setaddr :mineOre*retaddr *label319                           ...
  705:  call *label11 *invalid :mineOre*retval                       ...
        label *label319                                              ...
        label *label317                                              CoreBuilder.mnd: if missing > 0 then
  706:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label312                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label310                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  707:  sensor *tmp309 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  708:  jump *label320 greaterThanEq *tmp309 .targetSilicon          ...
  709:  sensor *tmp312 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  710:  jump *label322 greaterThanEq *tmp312 5                       ...
  711:  write "Goal 2: coal for silicon requirement" .display ".stat CoreBuilder.mnd: display.status1 = text;
  712:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  713:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  714:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  715:  sensor :supplyBlock.1:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  716:  sensor *tmp316 .smelter @coal                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  717:  op sub :supplyBlock.1:missing :supplyBlock.1:blockCapacity * ...
  718:  jump *label327 lessThanEq :supplyBlock.1:missing 0           CoreBuilder.mnd: if missing > 0 then
  719:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  720:  set :mineOre:amount :supplyBlock.1:blockCapacity             ...
  721:  set :mineOre:block .smelter                                  ...
  722:  setaddr :mineOre*retaddr *label329                           ...
  723:  call *label11 *invalid :mineOre*retval                       ...
        label *label329                                              ...
        label *label327                                              CoreBuilder.mnd: if missing > 0 then
  724:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  725:  jump *label323 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label322                                              ...
  726:  sensor *tmp320 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  727:  jump *label330 greaterThanEq *tmp320 5                       ...
  728:  write "Goal 3: sand for silicon requirement" .display ".stat CoreBuilder.mnd: display.status1 = text;
  729:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  730:  write @sand .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  731:  write .smelter .display ".block2"                            CoreBuilder.mnd: display.block2 = block;
  732:  sensor :supplyBlock.2:blockCapacity .smelter @itemCapacity   CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  733:  sensor *tmp324 .smelter @sand                                CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  734:  op sub :supplyBlock.2:missing :supplyBlock.2:blockCapacity * ...
  735:  jump *label335 lessThanEq :supplyBlock.2:missing 0           CoreBuilder.mnd: if missing > 0 then
  736:  set :mineOre:ore @sand                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  737:  set :mineOre:amount :supplyBlock.2:blockCapacity             ...
  738:  set :mineOre:block .smelter                                  ...
  739:  setaddr :mineOre*retaddr *label337                           ...
  740:  call *label11 *invalid :mineOre*retval                       ...
        label *label337                                              ...
        label *label335                                              CoreBuilder.mnd: if missing > 0 then
  741:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label330                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label323                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label320                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  742:  sensor *tmp328 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  743:  jump *label338 greaterThanEq *tmp328 .powerTarget            ...
  744:  sensor *tmp331 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  745:  jump *label340 greaterThanEq *tmp331 2                       ...
  746:  write "Goal 4: supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  747:  write "Supplying " .display ".status2"                       CoreBuilder.mnd: display.status2  = text;
  748:  write @coal .display ".item2"                                CoreBuilder.mnd: display.item2  = item;
  749:  write .generator .display ".block2"                          CoreBuilder.mnd: display.block2 = block;
  750:  sensor :supplyBlock.3:blockCapacity .generator @itemCapacity CoreBuilder.mnd: var blockCapacity = block.@itemCapacity;
  751:  sensor *tmp335 .generator @coal                              CoreBuilder.mnd: var missing = blockCapacity - block.sensor(ore);
  752:  op sub :supplyBlock.3:missing :supplyBlock.3:blockCapacity * ...
  753:  jump *label345 lessThanEq :supplyBlock.3:missing 0           CoreBuilder.mnd: if missing > 0 then
  754:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, blockCapacity, block);
  755:  set :mineOre:amount :supplyBlock.3:blockCapacity             ...
  756:  set :mineOre:block .generator                                ...
  757:  setaddr :mineOre*retaddr *label347                           ...
  758:  call *label11 *invalid :mineOre*retval                       ...
        label *label347                                              ...
        label *label345                                              CoreBuilder.mnd: if missing > 0 then
  759:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label340                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label338                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label308                                              CoreBuilder.mnd: if unloader1 == null then
  760:  set *tmp341 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  761:  sensor *tmp339 .core @titanium                               ...
  762:  jump *label349 greaterThanEq *tmp339 .targetTitanium         ...
  763:  sensor *tmp342 .core @titanium                               ...
  764:  op sub *tmp343 .targetTitanium *tmp342                       ...
  765:  op min *tmp341 7 *tmp343                                     ...
        label *label349                                              ...
  766:  sensor *tmp345 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  767:  jump *label350 greaterThanEq *tmp345 *tmp341                 ...
  768:  jump *label351 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  769:  sensor *tmp350 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  770:  op mul *tmp351 .unloader1 .powerTarget                       ...
  771:  jump *label354 greaterThanEq *tmp350 *tmp351                 ...
  772:  write "Goal 5: supplying generator" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  773:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  774:  setaddr :mineOre.1*retaddr *label357                         ...
  775:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label357                                              ...
  776:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label354                                              ...
  777:  sensor *tmp354 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  778:  jump *label358 greaterThanEq *tmp354 .targetSilicon          ...
  779:  write "Goal 6: silicon requirement" .display ".status1"      CoreBuilder.mnd: display.status1 = text;
  780:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  781:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  782:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  783:  jump *label362 greaterThanEq :supplyBase0:coal :supplyBase0: ...
  784:  set :mineOre.1:ore @coal                                     ...
        label *label362                                              ...
  785:  setaddr :mineOre.1*retaddr *label363                         CoreBuilder.mnd: mineOre(ore);
  786:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label363                                              ...
  787:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label358                                              ...
  788:  sensor *tmp361 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  789:  jump *label364 greaterThanEq *tmp361 .targetCopper           ...
  790:  write "Goal 7: copper requirement" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  791:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  792:  setaddr :mineOre.1*retaddr *label367                         ...
  793:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label367                                              ...
  794:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label364                                              ...
  795:  sensor *tmp364 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead + 20 then
  796:  op add *tmp365 .targetLead 20                                ...
  797:  jump *label368 greaterThanEq *tmp364 *tmp365                 ...
  798:  write "Goal 8: lead requirement" .display ".status1"         CoreBuilder.mnd: display.status1 = text;
  799:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  800:  setaddr :mineOre.1*retaddr *label371                         ...
  801:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label371                                              ...
  802:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@lead < targetLead + 20 then
        label *label368                                              ...
  803:  sensor *tmp368 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  804:  jump *label372 greaterThanEq *tmp368 .targetMetaglass        ...
  805:  write "Goal 9: metaglass requirement" .display ".status1"    CoreBuilder.mnd: display.status1 = text;
  806:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  807:  setaddr :mineOre.1*retaddr *label375                         ...
  808:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label375                                              ...
  809:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label372                                              ...
  810:  write "Goal 10: supplying base" .display ".status1"          CoreBuilder.mnd: display.status1 = text;
  811:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  812:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  813:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  814:  jump *label378 greaterThan :supplyBase0:coal.1 :supplyBase0: ...
  815:  set :mineOre.1:ore @coal                                     ...
        label *label378                                              ...
  816:  setaddr :mineOre.1*retaddr *label379                         CoreBuilder.mnd: mineOre(ore);
  817:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label379                                              ...
  818:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label350                                              ...
  819:  write "Goal 11: Fetching titanium" .display ".status1"       CoreBuilder.mnd: display.status1 = text;
  820:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  821:  set :fetchBlock:item @titanium                               ...
  822:  setaddr :fetchBlock*retaddr *label381                        ...
  823:  call *label13 *invalid :fetchBlock*retval                    ...
        label *label381                                              ...
        label *label351                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  824:  return :supplyBase0*retaddr                                  CoreBuilder.mnd: void supplyBase0()
        label *label19                                               CoreBuilder.mnd: void supplyBase1()
  825:  write "Phase 1: supplying base" .display ".status1"          CoreBuilder.mnd: display.status1 = text;
  826:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  827:  setaddr :mineOre.1*retaddr *label384                         ...
  828:  call *label12 *invalid :mineOre.1*retval                     ...
        label *label384                                              ...
  829:  return :supplyBase1*retaddr                                  CoreBuilder.mnd: void supplyBase1()
        label *label20                                               CoreBuilder.mnd: void supplyBase()
  830:  read *tmp39 .controller ".monos"                             CoreBuilder.mnd: if controller.monos > 3 then
  831:  jump *label386 lessThanEq *tmp39 3                           ...
  832:  setaddr :supplyBase1*retaddr *label388                       CoreBuilder.mnd: supplyBase1();
  833:  call *label19 *invalid :supplyBase1*retval                   ...
        label *label388                                              ...
  834:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if controller.monos > 3 then
        label *label386                                              ...
  835:  setaddr :supplyBase0*retaddr *label389                       CoreBuilder.mnd: supplyBase0();
  836:  call *label18 *invalid :supplyBase0*retval                   ...
        label *label389                                              ...
  837:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label21                                               CoreBuilder.mnd: def targetMet()
  838:  sensor *tmp377 .core @copper                                 CoreBuilder.mnd: if core.@copper >= targetCopper then
  839:  jump *label391 lessThan *tmp377 .targetCopper                ...
  840:  sensor *tmp380 .core @lead                                   CoreBuilder.mnd: if core.@lead >= targetLead then
  841:  jump *label393 lessThan *tmp380 .targetLead                  ...
  842:  sensor *tmp383 .core @graphite                               CoreBuilder.mnd: if core.@graphite >= targetGraphite then
  843:  jump *label395 lessThan *tmp383 .targetGraphite              ...
  844:  sensor *tmp386 .core @silicon                                CoreBuilder.mnd: if core.@silicon >= targetSilicon then
  845:  jump *label397 lessThan *tmp386 .targetSilicon               ...
  846:  sensor *tmp389 .core @titanium                               CoreBuilder.mnd: if core.@titanium >= targetTitanium then
  847:  jump *label399 lessThan *tmp389 .targetTitanium              ...
  848:  sensor *tmp392 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
  849:  jump *label401 lessThan *tmp392 .targetMetaglass             ...
  850:  set :targetMet*retval true                                   CoreBuilder.mnd: return true;
  851:  return :targetMet*retaddr                                    ...
        label *label401                                              CoreBuilder.mnd: if core.@metaglass >= targetMetaglass then
        label *label399                                              CoreBuilder.mnd: if core.@titanium >= targetTitanium then
        label *label397                                              CoreBuilder.mnd: if core.@silicon >= targetSilicon then
        label *label395                                              CoreBuilder.mnd: if core.@graphite >= targetGraphite then
        label *label393                                              CoreBuilder.mnd: if core.@lead >= targetLead then
        label *label391                                              CoreBuilder.mnd: if core.@copper >= targetCopper then
  852:  set :targetMet*retval false                                  CoreBuilder.mnd: return false;
  853:  return :targetMet*retaddr                                    ...
        label *label22                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
  854:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass do count += sign(t); end;
  855:  op sign *tmp396 :meetTarget:lead 0                           ...
  856:  op add :meetTarget:count :meetTarget:count *tmp396           ...
  857:  op sign *tmp396 :meetTarget:graphite 0                       ...
  858:  op add :meetTarget:count :meetTarget:count *tmp396           ...
  859:  op sign *tmp396 :meetTarget:silicon 0                        ...
  860:  op add :meetTarget:count :meetTarget:count *tmp396           ...
  861:  op sign *tmp396 :meetTarget:titanium 0                       ...
  862:  op add :meetTarget:count :meetTarget:count *tmp396           ...
  863:  op sign *tmp396 :meetTarget:metaglass 0                      ...
  864:  op add :meetTarget:count :meetTarget:count *tmp396           ...
  865:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  866:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  867:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  868:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  869:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  870:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  871:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  872:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  873:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  874:  op add *tmp397 :meetTarget:lead .leadSurplus                 CoreBuilder.mnd: targetLead = lead + leadSurplus + 1;
  875:  op add .targetLead *tmp397 1                                 ...
  876:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  877:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  878:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  879:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  880:  op add *tmp399 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  881:  write *tmp399 .controller ".pressTarget"                     ...
  882:  op add *tmp400 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  883:  write *tmp400 .controller ".smelterTarget"                   ...
  884:  op add *tmp401 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  885:  write *tmp401 .controller ".kilnTarget"                      ...
  886:  write *tmp397 .controller ".leadReserve"                     CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  887:  op sign *tmp403 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  888:  op mul *tmp404 *tmp403 20                                    ...
  889:  op add *tmp405 :meetTarget:silicon *tmp404                   ...
  890:  write *tmp405 .controller ".siliconReserve"                  ...
        label *label413                                              CoreBuilder.mnd: while !targetMet() do
  891:  setaddr :targetMet*retaddr *label416                         ...
  892:  call *label21 *invalid :targetMet*retval                     ...
        label *label416                                              ...
  893:  jump *label415 notEqual :targetMet*retval false              ...
  894:  setaddr :supplyBase*retaddr *label417                        CoreBuilder.mnd: supplyBase();
  895:  call *label20 *invalid :supplyBase*retval                    ...
        label *label417                                              ...
  896:  jump *label413 always 0 0                                    CoreBuilder.mnd: while !targetMet() do
        label *label415                                              ...
  897:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
        label *label23                                               CoreBuilder.mnd: void log(encodedId)
  898:  read *tmp86 bank1 511                                        CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(second()) * 1000;
  899:  op sub *tmp407 *tmp86 1                                      ...
  900:  write *tmp407 bank1 511                                      ...
  901:  op mul :second:result @second TIME_COMPRESS                  common.mnd: mlog (out result) {
  902:  op floor *tmp411 :second:result 0                            CoreBuilder.mnd: bank1[--logPosition] = encodedId + floor(second()) * 1000;
  903:  op mul *tmp412 *tmp411 1000                                  ...
  904:  op add *tmp413 :log:encodedId *tmp412                        ...
  905:  write *tmp413 bank1 *tmp407                                  ...
  906:  return :log*retaddr                                          CoreBuilder.mnd: void log(encodedId)
        label *label24                                               CoreBuilder.mnd: void logBlock(block)
  907:  sensor :log:encodedId :logBlock:block @id                    CoreBuilder.mnd: log(block.@id);
  908:  setaddr :log*retaddr *label421                               ...
  909:  call *label23 *invalid :log*retval                           ...
        label *label421                                              ...
  910:  return :logBlock*retaddr                                     CoreBuilder.mnd: void logBlock(block)
        label *label25                                               CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
  911:  set :moveTo.1:x :buildBlockAt:x                              CoreBuilder.mnd: moveTo(x, y);
  912:  set :moveTo.1:y :buildBlockAt:y                              ...
  913:  setaddr :moveTo.1*retaddr *label423                          ...
  914:  call *label6 *invalid :moveTo.1*retval                       ...
        label *label423                                              ...
  915:  write "Building..." .display ".status3"                      CoreBuilder.mnd: display.status3 = text;
  916:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: var building = getBlock(x, y, out type);
  917:  jump *label425 equal :buildBlockAt:building null             CoreBuilder.mnd: if building != null then
  918:  jump *label427 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: if type == block then return building; end;
  919:  set :buildBlockAt*retval :buildBlockAt:building              ...
  920:  return :buildBlockAt*retaddr                                 ...
        label *label427                                              ...
  921:  jump *label429 equal :buildBlockAt:skipError false           CoreBuilder.mnd: if skipError then return null; end;
  922:  set :buildBlockAt*retval null                                ...
  923:  return :buildBlockAt*retaddr                                 ...
        label *label429                                              ...
  924:  set .ERROR "Cannot build at ("                               Actions.mnd: ERROR = error;
  925:  stop                                                         Actions.mnd: stopProcessor();
        label *label425                                              CoreBuilder.mnd: if building != null then
  926:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt CoreBuilder.mnd: build(x, y, block, rotation, config);
  927:  wait 0.25                                                    CoreBuilder.mnd: wait(0.25);
        label *label432                                              CoreBuilder.mnd: do
  928:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: building = getBlock(x, y, out type);
  929:  jump *label435 notEqual :buildBlockAt:building null          CoreBuilder.mnd: if building == null then return null; end;
  930:  set :buildBlockAt*retval null                                ...
  931:  return :buildBlockAt*retaddr                                 ...
        label *label435                                              ...
  932:  jump *label432 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: do
  933:  set :logBlock:block :buildBlockAt:block                      CoreBuilder.mnd: logBlock(block);
  934:  setaddr :logBlock*retaddr *label437                          ...
  935:  call *label24 *invalid :logBlock*retval                      ...
        label *label437                                              ...
  936:  set :buildBlockAt*retval :buildBlockAt:building              CoreBuilder.mnd: return building;
  937:  return :buildBlockAt*retaddr                                 CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
        label *label26                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
  938:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass);
  939:  set :meetTarget:copper :buildBlock:copper                    ...
  940:  set :meetTarget:lead :buildBlock:lead                        ...
  941:  set :meetTarget:graphite :buildBlock:graphite                ...
  942:  set :meetTarget:silicon :buildBlock:silicon                  ...
  943:  set :meetTarget:titanium :buildBlock:titanium                ...
  944:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  945:  setaddr :meetTarget*retaddr *label439                        ...
  946:  call *label22 *invalid :meetTarget*retval                    ...
        label *label439                                              ...
  947:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  948:  set :buildBlockAt:x :buildBlock:x                            ...
  949:  set :buildBlockAt:y :buildBlock:y                            ...
  950:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  951:  set :buildBlockAt:config :buildBlock:config                  ...
  952:  set :buildBlockAt:skipError false                            ...
  953:  setaddr :buildBlockAt*retaddr *label440                      ...
  954:  call *label25 *invalid :buildBlockAt*retval                  ...
        label *label440                                              ...
  955:  set :buildBlock*retval :buildBlockAt*retval                  ...
  956:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
        label *label27                                               CoreBuilder.mnd: def findUnits(type, out count)
  957:  set :findUnits:count 0                                       CoreBuilder.mnd: count = 0;
  958:  ubind :findUnits:type                                        CoreBuilder.mnd: var firstUnit = ubind(type);
  959:  set :findUnits:firstUnit @unit                               ...
  960:  jump *label442 equal :findUnits:firstUnit null               CoreBuilder.mnd: if firstUnit != null then
        label *label444                                              CoreBuilder.mnd: do
  961:  op add :findUnits:count :findUnits:count 1                   ...
  962:  ubind :findUnits:type                                        CoreBuilder.mnd: ubind(type);
  963:  jump *label444 notEqual @unit :findUnits:firstUnit           CoreBuilder.mnd: do
        label *label442                                              CoreBuilder.mnd: if firstUnit != null then
  964:  set :findUnits*retval :findUnits:count                       CoreBuilder.mnd: def findUnits(type, out count)
  965:  return :findUnits*retaddr                                    ...


Performance: parsed in 910 ms, compiled in 605 ms, optimized in 3,270 ms, run in 6 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (15 steps):
The program didn't generate any output.
Execution exception at instruction 37: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
