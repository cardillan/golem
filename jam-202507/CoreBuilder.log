  1464 instructions before optimizations.
    79 instructions eliminated by Temp Variables Elimination (2 iterations).
     1 instructions eliminated by Case Expression Optimization.
   122 instructions eliminated by Dead Code Elimination (10 iterations).
C:\Home\golem\jam-202507\Actions.mnd:35:14 Variable 'ERROR' is not used.
     1 instructions eliminated by Jump Normalization (5 iterations).
    56 instructions eliminated by Jump Optimization (5 iterations).
    43 instructions eliminated by Single Step Elimination (2 passes, 7 iterations).
     3 instructions eliminated by Expression Optimization (3 iterations).
     2 instructions eliminated by If Expression Optimization (3 iterations).
   124 instructions eliminated by Data Flow Optimization (8 passes, 24 iterations).
     1 loops improved by Loop Hoisting.
     1 instructions eliminated by Loop Optimization (3 iterations).
     1 loops improved by Loop Optimization.
     2 instructions eliminated by Loop Unrolling (9 iterations).
     1 loops unrolled by Loop Unrolling.
    35 instructions eliminated by Function Inlining (9 iterations).
    20 function calls inlined by Function Inlining.
     6 instructions eliminated by Jump Straightening (2 passes, 5 iterations).
    12 instructions updated by JumpThreading.
    24 instructions eliminated by Unreachable Code Elimination (2 iterations).
   965 instructions after optimizations.

Pass 1: size optimization selection (cost limit 0):
  * Unroll iteration loop at CoreBuilder.mnd:230:5               size   -13, benefit     1093.5, efficiency     13.000 (-11 instructions)
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4167.9, efficiency      1.000
    Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    18501.3, efficiency      1.000
    Inline function 'moveToBlock' defined at Actions.mnd:73:1    size    -1, benefit     3394.7, efficiency      1.000
    Inline function 'locateOre' defined at Actions.mnd:98:1      size    -1, benefit     1879.5, efficiency      1.000
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:166:1 size    -1, benefit     2275.0, efficiency      1.000

Pass 1: size optimization selection (cost limit 0):
    Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4167.9, efficiency      1.000
  * Inline function 'status3' defined at Actions.mnd:17:1        size    -1, benefit    18501.3, efficiency      1.000 (-11 instructions)
    Inline function 'moveToBlock' defined at Actions.mnd:73:1    size    -1, benefit     3394.7, efficiency      1.000
    Inline function 'locateOre' defined at Actions.mnd:98:1      size    -1, benefit     1879.5, efficiency      1.000
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:166:1 size    -1, benefit     2275.0, efficiency      1.000

Pass 1: size optimization selection (cost limit 0):
  * Inline function 'status1' defined at Actions.mnd:7:1         size    -1, benefit     4167.9, efficiency      1.000 (-29 instructions)
    Inline function 'moveToBlock' defined at Actions.mnd:73:1    size    -1, benefit     3394.7, efficiency      1.000
    Inline function 'locateOre' defined at Actions.mnd:98:1      size    -1, benefit     1879.5, efficiency      1.000
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:166:1 size    -1, benefit     2275.0, efficiency      1.000

Pass 1: size optimization selection (cost limit 0):
  * Inline function 'moveToBlock' defined at Actions.mnd:73:1    size    -1, benefit     3394.7, efficiency      1.000 (-6 instructions)
    Inline function 'locateOre' defined at Actions.mnd:98:1      size    -1, benefit     1879.5, efficiency      1.000
    Inline function 'supplyBlockFromCore' defined at Actions.mnd:166:1 size    -1, benefit     2275.0, efficiency      1.000

Pass 1: size optimization selection (cost limit 0):
    Inline function 'locateOre' defined at Actions.mnd:98:1      size    -1, benefit     1879.5, efficiency      1.000
  * Inline function 'supplyBlockFromCore' defined at Actions.mnd:166:1 size    -1, benefit     2275.0, efficiency      1.000 (-4 instructions)

Pass 1: size optimization selection (cost limit 0):
  * Inline function 'locateOre' defined at Actions.mnd:98:1      size    -1, benefit     1879.5, efficiency      1.000 (-5 instructions)

Modifications by Initial phase, Case Expression Optimization, iteration 1 (-1 instructions):
 
  1672 jump *label360 always
  1673 set *tmp477 null
  1674 label *label360
-    * set *tmp480 *tmp477
-    * jump *label362 equal *tmp480 @ore-titanium
+ 1675 jump *label362 equal *tmp477 @ore-titanium
  1676 jump *label361 always
  1677 label *label362
  1678 set *tmp481 :titaniumDrillScore:positive
 
  1680 set *tmp476 *tmp481
  1681 jump *label359 always
  1682 label *label361
-    * jump *label364 equal *tmp480 @ore-copper
-    * jump *label364 equal *tmp480 @ore-lead
-    * jump *label364 equal *tmp480 @ore-scrap
-    * jump *label364 equal *tmp480 @ore-coal
+ 1683 jump *label364 equal *tmp477 @ore-copper
+ 1684 jump *label364 equal *tmp477 @ore-lead
+ 1685 jump *label364 equal *tmp477 @ore-scrap
+ 1686 jump *label364 equal *tmp477 @ore-coal
  1687 jump *label363 always
  1688 label *label364
  1689 set *tmp482 :titaniumDrillScore:negative

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-86 instructions):
 
    46 setaddr :buildBlockFromCfg.1*retaddr *label44 (h:*label44)
    47 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label44) (h:*label44)
    48 label *label44
-    * set *tmp115 :buildBlockFromCfg.1*retval
    49 set :buildBlockFromCfg.1:cfg "m*.<2######"
    50 setaddr :buildBlockFromCfg.1*retaddr *label45 (h:*label45)
    51 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label45) (h:*label45)
 
    63 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    64 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
    65 label *label47
-    * set *tmp118 :buildBlockFromCfg.1*retval
    66 set :buildFirstTitaniumDrill:cfg "w**5#-#####"
    67 set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
    68 setaddr :meetTarget.1*retaddr *label49 (h:*label49)
 
    94 setaddr :error*retaddr *label53 (h:*label53)
    95 call *label10 *invalid :error*retval (m:*label53) (h:*label53)
    96 label *label53
-    * set *tmp133 null
    97 jump *label52 always
    98 label *label51
-    * set *tmp133 null
    99 label *label52
   100 write @pneumatic-drill .display ".nextBlock"
   101 write @pneumatic-drill .blockBuilder ":buildBlockAt:block"
 
   126 setaddr :buildBlockFromCfg.1*retaddr *label56 (h:*label56)
   127 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label56) (h:*label56)
   128 label *label56
-    * set *tmp142 :buildBlockFromCfg.1*retval
   129 set :buildBlockFromCfg.1:cfg "W*-'%######"
   130 setaddr :buildBlockFromCfg.1*retaddr *label57 (h:*label57)
   131 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label57) (h:*label57)
   132 label *label57
-    * set *tmp143 :buildBlockFromCfg.1*retval
   133 set .graphiteSurplus 100
   134 set :buildBlockFromCfg:cfg "®-.}U#U####"
   135 set :buildBlockFromCfg:config processor2
 
   150 setaddr :buildBlockFromCfg.1*retaddr *label59 (h:*label59)
   151 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label59) (h:*label59)
   152 label *label59
-    * set *tmp145 :buildBlockFromCfg.1*retval
   153 set :buildBlockFromCfg.1:cfg "(*###A<###"
   154 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
   155 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
 
   188 op lessThan *tmp149 *tmp148 300
   189 jump *label69 equal *tmp149 false
   190 jump *label67 always
-    * set *tmp150 null
   191 jump *label70 always
   192 label *label69
-    * set *tmp150 null
   193 label *label70
   194 label *label66
   195 read *tmp90 .controller ".monos"
 
   201 setaddr :buildBlockFromCfg.1*retaddr *label71 (h:*label71)
   202 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label71) (h:*label71)
   203 label *label71
-    * set *tmp152 :buildBlockFromCfg.1*retval
   204 set :buildBlockFromCfg.1:cfg "T,*%%######"
   205 setaddr :buildBlockFromCfg.1*retaddr *label72 (h:*label72)
   206 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label72) (h:*label72)
   207 label *label72
-    * set *tmp153 :buildBlockFromCfg.1*retval
   208 set :buildBlockFromCfg.1:cfg "',+_AA#####"
   209 setaddr :buildBlockFromCfg.1*retaddr *label73 (h:*label73)
   210 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label73) (h:*label73)
 
   216 setaddr :buildBlockFromCfg.1*retaddr *label74 (h:*label74)
   217 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label74) (h:*label74)
   218 label *label74
-    * set *tmp155 :buildBlockFromCfg.1*retval
   219 set :buildBlockFromCfg.1:cfg "W'*'%######"
   220 setaddr :buildBlockFromCfg.1*retaddr *label75 (h:*label75)
   221 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label75) (h:*label75)
   222 label *label75
-    * set *tmp156 :buildBlockFromCfg.1*retval
   223 set :buildBlockFromCfg.1:cfg "W&*'%######"
   224 setaddr :buildBlockFromCfg.1*retaddr *label76 (h:*label76)
   225 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label76) (h:*label76)
   226 label *label76
-    * set *tmp157 :buildBlockFromCfg.1*retval
   227 set :buildBlockFromCfg.1:cfg "o%+FK<A####"
   228 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   229 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
 
   247 setaddr :buildBlockFromCfg.1*retaddr *label80 (h:*label80)
   248 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label80) (h:*label80)
   249 label *label80
-    * set *tmp161 :buildBlockFromCfg.1*retval
   250 set :buildBlockFromCfg.1:cfg "X*''%######"
   251 setaddr :buildBlockFromCfg.1*retaddr *label81 (h:*label81)
   252 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label81) (h:*label81)
   253 label *label81
-    * set *tmp162 :buildBlockFromCfg.1*retval
   254 set :buildBlockFromCfg.1:cfg "*%ë#}####"
   255 setaddr :buildBlockFromCfg.1*retaddr *label82 (h:*label82)
   256 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label82) (h:*label82)
 
   263 setaddr :buildBlockFromCfg.1*retaddr *label83 (h:*label83)
   264 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label83) (h:*label83)
   265 label *label83
-    * set *tmp164 :buildBlockFromCfg.1*retval
   266 setaddr :buildUnits*retaddr *label84 (h:*label84)
   267 call *label38 *invalid :buildUnits*retval (m:*label84) (h:*label84)
   268 label *label84
 
   283 setaddr :buildBlockFromCfg*retaddr *label87 (h:*label87)
   284 call *label32 *invalid :buildBlockFromCfg*retval (m:*label87) (h:*label87)
   285 label *label87
-    * set *tmp166 :buildBlockFromCfg*retval
   286 setaddr :buildUnits*retaddr *label88 (h:*label88)
   287 call *label38 *invalid :buildUnits*retval (m:*label88) (h:*label88)
   288 label *label88
 
   396 call *label37 *invalid :buildTitaniumDrill*retval (m:*label112) (h:*label112)
   397 label *label112
   398 set :buildTitaniumDrills:count :buildTitaniumDrill:count
-    * set *tmp187 null
   399 jump *label108 always
   400 label *label107
-    * set *tmp187 null
   401 label *label108
-    * set *tmp202 :buildTitaniumDrills:current
   402 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
   403 label *label105
   404 jump *label104 always
 
   406 op greaterThanEq *tmp203 :buildTitaniumDrills:count 8
   407 jump *label113 equal *tmp203 false
   408 jump *label103 always
-    * set *tmp204 null
   409 jump *label114 always
   410 label *label113
-    * set *tmp204 null
   411 label *label114
   412 label *label102
   413 jump *label101 always
 
   442 setaddr :error*retaddr *label121 (h:*label121)
   443 call *label10 *invalid :error*retval (m:*label121) (h:*label121)
   444 label *label121
-    * set *tmp214 null
   445 jump *label120 always
   446 label *label119
-    * set *tmp214 null
   447 label *label120
   448 write @laser-drill .blockBuilder ":buildBlockAt:block"
   449 read *tmp52 .oreLocator ".drillX"
 
   468 setaddr :buildRemoteBlock*retaddr *label123 (h:*label123)
   469 call *label31 *invalid :buildRemoteBlock*retval (m:*label123) (h:*label123)
   470 label *label123
-    * set *tmp222 :buildRemoteBlock*retval
   471 set :buildRemoteBlock:cfg "z%-AAA##A##"
   472 read *tmp58 .oreLocator ".water2X"
   473 set :buildRemoteBlock:x *tmp58
 
   476 setaddr :buildRemoteBlock*retaddr *label124 (h:*label124)
   477 call *label31 *invalid :buildRemoteBlock*retval (m:*label124) (h:*label124)
   478 label *label124
-    * set *tmp223 :buildRemoteBlock*retval
   479 set :buildRemoteBlock:cfg "o%+FK<A####"
   480 read *tmp60 .oreLocator ".generatorX"
   481 set :buildRemoteBlock:x *tmp60
 
   494 setaddr :buildRemoteBlock*retaddr *label126 (h:*label126)
   495 call *label31 *invalid :buildRemoteBlock*retval (m:*label126) (h:*label126)
   496 label *label126
-    * set *tmp225 :buildRemoteBlock*retval
   497 set :buildRemoteBlock:cfg "r**#-#+####"
   498 read *tmp64 .oreLocator ".panelX"
   499 set :buildRemoteBlock:x *tmp64
 
   502 setaddr :buildRemoteBlock*retaddr *label127 (h:*label127)
   503 call *label31 *invalid :buildRemoteBlock*retval (m:*label127) (h:*label127)
   504 label *label127
-    * set *tmp226 :buildRemoteBlock*retval
   505 set :buildRemoteBlock:cfg "k*/(7######"
   506 read *tmp66 .oreLocator ".batteryX"
   507 set :buildRemoteBlock:x *tmp66
 
   510 setaddr :buildRemoteBlock*retaddr *label128 (h:*label128)
   511 call *label31 *invalid :buildRemoteBlock*retval (m:*label128) (h:*label128)
   512 label *label128
-    * set *tmp227 :buildRemoteBlock*retval
   513 set :buildRemoteBlock:cfg "**#######"
   514 read *tmp56 .oreLocator ".containerX"
   515 set :buildRemoteBlock:x *tmp56
 
   523 op equal *tmp229 .thoriumContainer null
   524 jump *label130 equal *tmp229 false
   525 set .thoriumContainer .thoriumDrill
-    * set *tmp230 .thoriumContainer
   526 jump *label131 always
   527 label *label130
-    * set *tmp230 null
   528 label *label131
   529 write .thoriumDrill .display ".thoriumDrill"
   530 write .thoriumContainer .display ".thoriumContainer"
 
   549 setaddr :buildBlockFromCfg*retaddr *label137 (h:*label137)
   550 call *label32 *invalid :buildBlockFromCfg*retval (m:*label137) (h:*label137)
   551 label *label137
-    * set *tmp232 :buildBlockFromCfg*retval
   552 set :buildBlockFromCfg.1:cfg "X+''%######"
   553 setaddr :buildBlockFromCfg.1*retaddr *label138 (h:*label138)
   554 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label138) (h:*label138)
   555 label *label138
-    * set *tmp233 :buildBlockFromCfg.1*retval
   556 set :buildBlockFromCfg.1:cfg ".&#ʭ#ǥƁ#ʭ#"
   557 setaddr :buildBlockFromCfg.1*retaddr *label139 (h:*label139)
   558 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label139) (h:*label139)
 
   629 op notEqual *tmp239 *tmp238 null
   630 jump *label160 equal *tmp239 false
   631 ucontrol itemDrop @air 1000
-    * set *tmp240 null
   632 jump *label161 always
   633 label *label160
-    * set *tmp240 null
   634 label *label161
   635 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   636 label *label158
 
   689 op greaterThan *tmp254 *tmp252 *tmp253
   690 jump *label173 notEqual *tmp254 false
   691 label *label175
-    * set *tmp249 null
   692 jump *label171 always
   693 label *label170
   694 label *label176
 
   699 label *label177
   700 jump *label176 always
   701 label *label178
-    * set *tmp249 null
   702 label *label171
   703 set :transportStatus:target 0
   704 set :transportStatus:item null
 
   716 setaddr :error*retaddr *label183 (h:*label183)
   717 call *label10 *invalid :error*retval (m:*label183) (h:*label183)
   718 label *label183
-    * set *tmp260 null
   719 jump *label182 always
   720 label *label181
-    * set *tmp260 null
   721 label *label182
   722 label *label180
   723 return :locateOre*retaddr
 
   747 setaddr :dropAll*retaddr *label190 (h:*label190)
   748 call *label13 *invalid :dropAll*retval (m:*label190) (h:*label190)
   749 label *label190
-    * set *tmp264 null
   750 jump *label189 always
   751 label *label188
-    * set *tmp264 null
   752 label *label189
   753 set :status3:text "Mining..."
   754 setaddr :status3*retaddr *label191 (h:*label191)
 
   764 op land *tmp269 *tmp267 *tmp268
   765 jump *label195 equal *tmp269 false
   766 jump *label194 always
-    * set *tmp270 null
   767 jump *label196 always
   768 label *label195
-    * set *tmp270 null
   769 label *label196
   770 ucontrol mine :mineOre:x :mineOre:y
   771 op greaterThan *tmp271 @second :mineOre:stop
   772 jump *label197 equal *tmp271 false
   773 jump *label194 always
-    * set *tmp272 null
   774 jump *label198 always
   775 label *label197
-    * set *tmp272 null
   776 label *label198
   777 label *label193
   778 sensor *tmp273 @unit @totalItems
 
   838 op land *tmp283 *tmp281 *tmp282
   839 jump *label211 equal *tmp283 false
   840 ucontrol itemDrop @air 1000
-    * set *tmp284 null
   841 jump *label212 always
   842 label *label211
-    * set *tmp284 null
   843 label *label212
   844 label *label209
   845 sensor *tmp285 @unit :fetchBlock:item
 
   876 setaddr :mineOre*retaddr *label218 (h:*label218)
   877 call *label17 *invalid :mineOre*retval (m:*label218) (h:*label218)
   878 label *label218
-    * set *tmp293 null
   879 jump *label217 always
   880 label *label216
-    * set *tmp293 null
   881 label *label217
   882 label *label214
   883 return :supplyBlock*retaddr
 
   913 op land *tmp299 *tmp297 *tmp298
   914 jump *label227 equal *tmp299 false
   915 ucontrol itemDrop @air 1000
-    * set *tmp300 null
   916 jump *label228 always
   917 label *label227
-    * set *tmp300 null
   918 label *label228
   919 label *label225
   920 sensor *tmp301 @unit :supplyBlockFromCore:item
 
  1010 label *label234
  1011 set *tmp344 null
  1012 label *label235
-    * set *tmp342 *tmp344
  1013 jump *label233 always
  1014 label *label232
-    * set *tmp342 null
  1015 label *label233
  1016 jump *label236 equal .thoriumContainer false
  1017 set :status1:text "Phase 2: servicing thorium drill"
 
  1029 call *label19 *invalid :fetchBlock*retval (m:*label241) (h:*label241)
  1030 label *label241
  1031 label *label238
-    * set *tmp347 null
  1032 jump *label237 always
  1033 label *label236
  1034 read *tmp90 .controller ".monos"
 
  1070 label *label252
  1071 set *tmp357 null
  1072 label *label253
-    * set *tmp354 *tmp357
  1073 jump *label251 always
  1074 label *label250
-    * set *tmp354 null
  1075 label *label251
  1076 sensor *tmp358 .core @silicon
  1077 op lessThan *tmp359 *tmp358 .targetSilicon
 
  1112 label *label263
  1113 set *tmp363 *tmp366
  1114 label *label259
-    * set *tmp360 *tmp363
  1115 jump *label257 always
  1116 label *label256
-    * set *tmp360 null
  1117 label *label257
  1118 sensor *tmp367 .battery @totalPower
  1119 op lessThan *tmp368 *tmp367 .powerTarget
 
  1141 label *label266
  1142 set *tmp369 null
  1143 label *label267
-    * set *tmp351 *tmp369
  1144 jump *label249 always
  1145 label *label248
-    * set *tmp351 null
  1146 label *label249
  1147 sensor *tmp373 .core @titanium
  1148 op lessThan *tmp374 *tmp373 .targetTitanium
 
  1279 label *label276
  1280 set *tmp383 null
  1281 label *label277
-    * set *tmp381 *tmp383
  1282 jump *label275 always
  1283 label *label274
  1284 set :status1:text "Goal 11: Fetching titanium"
 
  1290 setaddr :fetchBlock*retaddr *label305 (h:*label305)
  1291 call *label19 *invalid :fetchBlock*retval (m:*label305) (h:*label305)
  1292 label *label305
-    * set *tmp381 null
  1293 label *label275
  1294 label *label247
  1295 set *tmp349 null
  1296 label *label243
-    * set *tmp347 *tmp349
  1297 label *label237
  1298 label *label231
  1299 return :supplyBase*retaddr
 
  1369 jump *label321 equal *tmp421 false
  1370 set *tmp419 false
  1371 jump *label320 always
-    * set *tmp422 null
  1372 jump *label322 always
  1373 label *label321
-    * set *tmp422 null
  1374 label *label322
  1375 sensor *tmp423 .core @lead
  1376 op lessThan *tmp424 *tmp423 .targetLead
  1377 jump *label323 equal *tmp424 false
  1378 set *tmp419 false
  1379 jump *label320 always
-    * set *tmp425 null
  1380 jump *label324 always
  1381 label *label323
-    * set *tmp425 null
  1382 label *label324
  1383 sensor *tmp426 .core @graphite
  1384 op lessThan *tmp427 *tmp426 .targetGraphite
  1385 jump *label325 equal *tmp427 false
  1386 set *tmp419 false
  1387 jump *label320 always
-    * set *tmp428 null
  1388 jump *label326 always
  1389 label *label325
-    * set *tmp428 null
  1390 label *label326
  1391 sensor *tmp429 .core @silicon
  1392 op lessThan *tmp430 *tmp429 .targetSilicon
  1393 jump *label327 equal *tmp430 false
  1394 set *tmp419 false
  1395 jump *label320 always
-    * set *tmp431 null
  1396 jump *label328 always
  1397 label *label327
-    * set *tmp431 null
  1398 label *label328
  1399 sensor *tmp432 .core @titanium
  1400 op lessThan *tmp433 *tmp432 .targetTitanium
  1401 jump *label329 equal *tmp433 false
  1402 set *tmp419 false
  1403 jump *label320 always
-    * set *tmp434 null
  1404 jump *label330 always
  1405 label *label329
-    * set *tmp434 null
  1406 label *label330
  1407 sensor *tmp435 .core @metaglass
  1408 op lessThan *tmp436 *tmp435 .targetMetaglass
  1409 jump *label331 equal *tmp436 false
  1410 set *tmp419 false
  1411 jump *label320 always
-    * set *tmp437 null
  1412 jump *label332 always
  1413 label *label331
-    * set *tmp437 null
  1414 label *label332
  1415 sensor *tmp438 .core @thorium
  1416 op lessThan *tmp439 *tmp438 .targetThorium
  1417 jump *label333 equal *tmp439 false
  1418 set *tmp419 false
  1419 jump *label320 always
-    * set *tmp440 null
  1420 jump *label334 always
  1421 label *label333
-    * set *tmp440 null
  1422 label *label334
  1423 set *tmp419 true
  1424 jump *label320 always
 
  1498 label *label346
  1499 set :buildRemoteBlock*retval :buildBlock*retval
  1500 jump *label342 always
-    * set *tmp465 null
  1501 jump *label344 always
  1502 label *label343
-    * set *tmp465 null
  1503 label *label344
  1504 set :buildRemoteBlock*retval false
  1505 jump *label342 always
 
  1642 label *label370
  1643 set .positive :titaniumDrillScore:positive
  1644 set .negative :titaniumDrillScore:negative
-    * set *tmp487 :titaniumDrillScore*retval
  1645 op add *tmp488 :buildTitaniumDrill:y 0.5
  1646 set :titaniumDrillScore:x :buildTitaniumDrill:x
  1647 set :titaniumDrillScore:y *tmp488
 
  1652 label *label371
  1653 set .positive :titaniumDrillScore:positive
  1654 set .negative :titaniumDrillScore:negative
-    * set *tmp489 :titaniumDrillScore*retval
  1655 op add *tmp490 :buildTitaniumDrill:x 0.5
  1656 set :titaniumDrillScore:x *tmp490
  1657 set :titaniumDrillScore:y :buildTitaniumDrill:y
 
  1662 label *label372
  1663 set .positive :titaniumDrillScore:positive
  1664 set .negative :titaniumDrillScore:negative
-    * set *tmp491 :titaniumDrillScore*retval
  1665 op add *tmp492 :buildTitaniumDrill:x 0.5
  1666 op add *tmp493 :buildTitaniumDrill:y 0.5
  1667 set :titaniumDrillScore:x *tmp492
 
  1673 label *label373
  1674 set .positive :titaniumDrillScore:positive
  1675 set .negative :titaniumDrillScore:negative
-    * set *tmp494 :titaniumDrillScore*retval
  1676 op greaterThan *tmp495 .positive .negative
  1677 op greaterThanEq *tmp496 .positive 2
  1678 op land *tmp497 *tmp495 *tmp496
 
  1714 label *label374
  1715 set *tmp498 null
  1716 label *label375
-    * set *tmp484 *tmp498
  1717 jump *label367 always
  1718 label *label366
-    * set *tmp484 null
  1719 label *label367
  1720 label *label365
  1721 return :buildTitaniumDrill*retaddr

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-15 instructions):
 
  1005 write .titaniumDrill .flareController ":start:drill"
  1006 write false .flareController ":start*finished"
  1007 write 2 .flareController "@counter"
-    * set *tmp344 null
  1008 jump *label235 always
  1009 label *label234
-    * set *tmp344 null
  1010 label *label235
  1011 jump *label233 always
  1012 label *label232
 
  1041 call *label18 *invalid :mineOre.1*retval (m:*label246) (h:*label246)
  1042 label *label246
  1043 label *label244
-    * set *tmp349 null
  1044 jump *label243 always
  1045 label *label242
  1046 set :supplyBase0:supplied false
 
  1062 call *label20 *invalid :supplyBlock*retval (m:*label255) (h:*label255)
  1063 label *label255
  1064 set :supplyBase0:supplied true
-    * set *tmp357 :supplyBase0:supplied
  1065 jump *label253 always
  1066 label *label252
-    * set *tmp357 null
  1067 label *label253
  1068 jump *label251 always
  1069 label *label250
 
  1084 call *label20 *invalid :supplyBlock*retval (m:*label261) (h:*label261)
  1085 label *label261
  1086 set :supplyBase0:supplied true
-    * set *tmp363 :supplyBase0:supplied
  1087 jump *label259 always
  1088 label *label258
  1089 sensor *tmp364 .smelter @sand
 
  1104 label *label262
  1105 set *tmp366 null
  1106 label *label263
-    * set *tmp363 *tmp366
  1107 label *label259
  1108 jump *label257 always
  1109 label *label256
 
  1129 label *label268
  1130 set *tmp372 null
  1131 label *label269
-    * set *tmp369 *tmp372
  1132 jump *label267 always
  1133 label *label266
-    * set *tmp369 null
  1134 label *label267
  1135 jump *label249 always
  1136 label *label248
 
  1265 label *label283
  1266 set *tmp387 *tmp390
  1267 label *label279
-    * set *tmp383 *tmp387
  1268 jump *label277 always
  1269 label *label276
-    * set *tmp383 null
  1270 label *label277
  1271 jump *label275 always
  1272 label *label274
 
  1281 label *label305
  1282 label *label275
  1283 label *label247
-    * set *tmp349 null
  1284 label *label243
  1285 label *label237
  1286 label *label231
 
  1601 label *label363
  1602 set *tmp476 null
  1603 label *label359
-    * set :titaniumDrillScore*retval *tmp476
  1604 label *label358
  1605 return :titaniumDrillScore*retaddr
  1606 end
 
  1696 label *label377
  1697 set *tmp507 null
  1698 label *label378
-    * set *tmp498 *tmp507
  1699 jump *label375 always
  1700 label *label374
-    * set *tmp498 null
  1701 label *label375
  1702 jump *label367 always
  1703 label *label366

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-11 instructions):
 
  1099 call *label20 *invalid :supplyBlock*retval (m:*label265) (h:*label265)
  1100 label *label265
  1101 set :supplyBase0:supplied true
-    * set *tmp366 :supplyBase0:supplied
  1102 jump *label263 always
  1103 label *label262
-    * set *tmp366 null
  1104 label *label263
  1105 label *label259
  1106 jump *label257 always
 
  1122 call *label20 *invalid :supplyBlock*retval (m:*label271) (h:*label271)
  1123 label *label271
  1124 set :supplyBase0:supplied true
-    * set *tmp372 :supplyBase0:supplied
  1125 jump *label269 always
  1126 label *label268
-    * set *tmp372 null
  1127 label *label269
  1128 jump *label267 always
  1129 label *label266
 
  1160 setaddr :mineOre.1*retaddr *label281 (h:*label281)
  1161 call *label18 *invalid :mineOre.1*retval (m:*label281) (h:*label281)
  1162 label *label281
-    * set *tmp387 null
  1163 jump *label279 always
  1164 label *label278
  1165 sensor *tmp388 .core @silicon
 
  1258 label *label289
  1259 set *tmp390 *tmp397
  1260 label *label283
-    * set *tmp387 *tmp390
  1261 label *label279
  1262 jump *label277 always
  1263 label *label276
 
  1579 label *label362
  1580 set *tmp481 :titaniumDrillScore:positive
  1581 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
-    * set *tmp476 *tmp481
  1582 jump *label359 always
  1583 label *label361
  1584 jump *label364 equal *tmp477 @ore-copper
 
  1589 label *label364
  1590 set *tmp482 :titaniumDrillScore:negative
  1591 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * set *tmp476 *tmp482
  1592 jump *label359 always
  1593 label *label363
-    * set *tmp476 null
  1594 label *label359
  1595 label *label358
  1596 return :titaniumDrillScore*retaddr
 
  1682 write :setFlareTarget.2:target .controller ".flareTarget"
  1683 write :setFlareTarget.2:target .display ".flareTarget"
  1684 label *label380
-    * set *tmp507 null
  1685 jump *label378 always
  1686 label *label377
-    * set *tmp507 null
  1687 label *label378
  1688 jump *label375 always
  1689 label *label374

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-4 instructions):
 
  1185 setaddr :mineOre.1*retaddr *label287 (h:*label287)
  1186 call *label18 *invalid :mineOre.1*retval (m:*label287) (h:*label287)
  1187 label *label287
-    * set *tmp390 null
  1188 jump *label283 always
  1189 label *label282
  1190 sensor *tmp395 .core @copper
 
  1255 label *label293
  1256 set *tmp397 *tmp400
  1257 label *label289
-    * set *tmp390 *tmp397
  1258 label *label283
  1259 label *label279
  1260 jump *label277 always
 
  1575 jump *label362 equal *tmp477 @ore-titanium
  1576 jump *label361 always
  1577 label *label362
-    * set *tmp481 :titaniumDrillScore:positive
  1578 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1579 jump *label359 always
  1580 label *label361
 
  1584 jump *label364 equal *tmp477 @ore-coal
  1585 jump *label363 always
  1586 label *label364
-    * set *tmp482 :titaniumDrillScore:negative
  1587 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1588 jump *label359 always
  1589 label *label363

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-2 instructions):
 
  1198 setaddr :mineOre.1*retaddr *label291 (h:*label291)
  1199 call *label18 *invalid :mineOre.1*retval (m:*label291) (h:*label291)
  1200 label *label291
-    * set *tmp397 null
  1201 jump *label289 always
  1202 label *label288
  1203 sensor *tmp398 .core @lead
 
  1252 label *label297
  1253 set *tmp400 *tmp403
  1254 label *label293
-    * set *tmp397 *tmp400
  1255 label *label289
  1256 label *label283
  1257 label *label279

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
  1211 setaddr :mineOre.1*retaddr *label295 (h:*label295)
  1212 call *label18 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
  1213 label *label295
-    * set *tmp400 null
  1214 jump *label293 always
  1215 label *label292
  1216 sensor *tmp401 .core @metaglass
 
  1249 label *label303
  1250 set *tmp403 null
  1251 label *label297
-    * set *tmp400 *tmp403
  1252 label *label293
  1253 label *label289
  1254 label *label283

Modifications by Initial phase, Dead Code Elimination, iteration 7 (-2 instructions):
 
  1224 setaddr :mineOre.1*retaddr *label299 (h:*label299)
  1225 call *label18 *invalid :mineOre.1*retval (m:*label299) (h:*label299)
  1226 label *label299
-    * set *tmp403 null
  1227 jump *label297 always
  1228 label *label296
  1229 set :status1:text "Goal 10: supplying base"
 
  1246 setaddr :mineOre.1*retaddr *label303 (h:*label303)
  1247 call *label18 *invalid :mineOre.1*retval (m:*label303) (h:*label303)
  1248 label *label303
-    * set *tmp403 null
  1249 label *label297
  1250 label *label293
  1251 label *label289

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-79 instructions):
 
    18 set .negative 0
    19 label *label39
    20 ubind @poly
-    * set *tmp109 @unit
-    * set .builder *tmp109
-    * ulocate building core false @copper .coreX .coreY *tmp111 *tmp110
-    * set .core *tmp110
+   21 set .builder @unit
+   22 ulocate building core false @copper .coreX .coreY 0 .core
    23 label *label40
    24 op equal *tmp112 .core null
    25 jump *label39 notEqual *tmp112 false
 
    32 setaddr :buildBlockFromCfg.1*retaddr *label42 (h:*label42)
    33 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label42) (h:*label42)
    34 label *label42
-    * set *tmp113 :buildBlockFromCfg.1*retval
-    * set .press *tmp113
+   35 set .press :buildBlockFromCfg.1*retval
    36 set :buildBlockFromCfg.1:cfg "k*/(7######"
    37 setaddr :buildBlockFromCfg.1*retaddr *label43 (h:*label43)
    38 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label43) (h:*label43)
    39 label *label43
-    * set *tmp114 :buildBlockFromCfg.1*retval
-    * set .battery *tmp114
+   40 set .battery :buildBlockFromCfg.1*retval
    41 set :buildBlockFromCfg.1:cfg "k+/(7######"
    42 setaddr :buildBlockFromCfg.1*retaddr *label44 (h:*label44)
    43 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label44) (h:*label44)
 
    46 setaddr :buildBlockFromCfg.1*retaddr *label45 (h:*label45)
    47 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label45) (h:*label45)
    48 label *label45
-    * set *tmp116 :buildBlockFromCfg.1*retval
-    * set .generator *tmp116
+   49 set .generator :buildBlockFromCfg.1*retval
    50 set .powerTarget 400
    51 set :buildBlockFromCfg.1:cfg "%+-A<######"
    52 setaddr :buildBlockFromCfg.1*retaddr *label46 (h:*label46)
    53 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label46) (h:*label46)
    54 label *label46
-    * set *tmp117 :buildBlockFromCfg.1*retval
-    * set .smelter *tmp117
+   55 set .smelter :buildBlockFromCfg.1*retval
    56 set :buildBlockFromCfg.1:cfg "T+,%%######"
    57 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    58 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
 
    76 wait 1e-15
    77 read *tmp130 .oreLocator ":findDrillLocation*finished"
    78 jump *label50 equal *tmp130 false
-    * read *tmp127 .oreLocator ":findDrillLocation:dx"
-    * set :buildFirstTitaniumDrill:dx *tmp127
-    * read *tmp128 .oreLocator ":findDrillLocation:dy"
-    * set :buildFirstTitaniumDrill:dy *tmp128
-    * read *tmp131 .oreLocator ":findDrillLocation*retval"
-    * set :buildFirstTitaniumDrill:result *tmp131
+   79 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
+   80 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
+   81 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
    82 op equal *tmp132 :buildFirstTitaniumDrill:result false
    83 jump *label51 equal *tmp132 false
    84 set :error:error "Cannot locate spot for titanium drill"
 
   100 wait 1e-15
   101 read *tmp139 .blockBuilder ":buildBlockAt*finished"
   102 jump *label54 equal *tmp139 false
-    * read *tmp140 .blockBuilder ":buildBlockAt*retval"
-    * set *tmp119 *tmp140
+  103 read *tmp119 .blockBuilder ":buildBlockAt*retval"
   104 jump *label48 always
   105 set *tmp119 null
   106 label *label48
 
   110 setaddr :buildBlockFromCfg.1*retaddr *label55 (h:*label55)
   111 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label55) (h:*label55)
   112 label *label55
-    * set *tmp141 :buildBlockFromCfg.1*retval
-    * set .unloader1 *tmp141
+  113 set .unloader1 :buildBlockFromCfg.1*retval
   114 set :buildBlockFromCfg.1:cfg "T),%%######"
   115 setaddr :buildBlockFromCfg.1*retaddr *label56 (h:*label56)
   116 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label56) (h:*label56)
 
   125 setaddr :buildBlockFromCfg*retaddr *label58 (h:*label58)
   126 call *label32 *invalid :buildBlockFromCfg*retval (m:*label58) (h:*label58)
   127 label *label58
-    * set *tmp144 :buildBlockFromCfg*retval
-    * set .controller *tmp144
+  128 set .controller :buildBlockFromCfg*retval
   129 write .display .controller ".display"
   130 write .core .controller ".core"
   131 write bank1 .controller ".bank"
 
   142 setaddr :buildBlockFromCfg.1*retaddr *label60 (h:*label60)
   143 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label60) (h:*label60)
   144 label *label60
-    * set *tmp146 :buildBlockFromCfg.1*retval
-    * write *tmp146 .controller ".unloader2"
+  145 write :buildBlockFromCfg.1*retval .controller ".unloader2"
   146 set :buildBlockFromCfg.1:cfg "'(_i#####&"
   147 setaddr :buildBlockFromCfg.1*retaddr *label61 (h:*label61)
   148 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
   149 label *label61
-    * set *tmp147 :buildBlockFromCfg.1*retval
-    * set :factory *tmp147
+  150 set :factory :buildBlockFromCfg.1*retval
   151 write :factory .controller ".factory"
   152 write :factory .display ".airFactory"
   153 set :setFlareTarget:target 1
 
   195 setaddr :buildBlockFromCfg.1*retaddr *label73 (h:*label73)
   196 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label73) (h:*label73)
   197 label *label73
-    * set *tmp154 :buildBlockFromCfg.1*retval
-    * set .kiln *tmp154
+  198 set .kiln :buildBlockFromCfg.1*retval
   199 write .kiln .controller ".kiln"
   200 set :buildBlockFromCfg.1:cfg "z%-AAA##A##"
   201 setaddr :buildBlockFromCfg.1*retaddr *label74 (h:*label74)
 
   213 setaddr :buildBlockFromCfg.1*retaddr *label77 (h:*label77)
   214 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label77) (h:*label77)
   215 label *label77
-    * set *tmp158 :buildBlockFromCfg.1*retval
-    * write *tmp158 .controller ".generator2"
+  216 write :buildBlockFromCfg.1*retval .controller ".generator2"
   217 set :buildBlockFromCfg.1:cfg "$(.#U<###"
   218 setaddr :buildBlockFromCfg.1*retaddr *label78 (h:*label78)
   219 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label78) (h:*label78)
   220 label *label78
-    * set *tmp159 :buildBlockFromCfg.1*retval
-    * write *tmp159 .controller ".multipress"
+  221 write :buildBlockFromCfg.1*retval .controller ".multipress"
   222 set .graphiteSurplus 200
   223 set :buildBlockFromCfg.1:cfg " '%-#2#####"
   224 setaddr :buildBlockFromCfg.1*retaddr *label79 (h:*label79)
   225 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label79) (h:*label79)
   226 label *label79
-    * set *tmp160 :buildBlockFromCfg.1*retval
-    * write *tmp160 .controller ".payloadRouter"
+  227 write :buildBlockFromCfg.1*retval .controller ".payloadRouter"
   228 set :buildBlockFromCfg.1:cfg "*(###A<###"
   229 setaddr :buildBlockFromCfg.1*retaddr *label80 (h:*label80)
   230 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label80) (h:*label80)
 
   237 setaddr :buildBlockFromCfg.1*retaddr *label82 (h:*label82)
   238 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label82) (h:*label82)
   239 label *label82
-    * set *tmp163 :buildBlockFromCfg.1*retval
-    * set :reconstructor *tmp163
+  240 set :reconstructor :buildBlockFromCfg.1*retval
   241 write :reconstructor .controller ".reconstructor"
   242 write :reconstructor .display ".reconstructor"
   243 set :buildBlockFromCfg.1:cfg "l/-#U#A7###"
 
   257 setaddr :buildBlockFromCfg.1*retaddr *label86 (h:*label86)
   258 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
   259 label *label86
-    * set *tmp165 :buildBlockFromCfg.1*retval
-    * write *tmp165 .controller ".smelter2"
+  260 write :buildBlockFromCfg.1*retval .controller ".smelter2"
   261 set :buildBlockFromCfg:cfg "--###A<###"
   262 set :buildBlockFromCfg:config @sand
   263 setaddr :buildBlockFromCfg*retaddr *label87 (h:*label87)
 
   318 label *label101
   319 jump *label103 equal :buildTitaniumDrills:searching false
   320 read *tmp179 .oreLocator ":findDrillLocation*finished"
-    * op equal *tmp180 *tmp179 false
-    * set :buildTitaniumDrills:searching *tmp180
+  321 op equal :buildTitaniumDrills:searching *tmp179 false
   322 label *label104
   323 read *tmp51 .oreLocator ".locations"
   324 op lessThan *tmp181 :buildTitaniumDrills:current *tmp51
   325 jump *label106 equal *tmp181 false
-    * op mul *tmp182 :buildTitaniumDrills:current 4
-    * set :buildTitaniumDrills:index *tmp182
+  326 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
   327 op add *tmp183 :buildTitaniumDrills:index 1
-    * set *tmp184 *tmp183
-    * read *tmp185 bank1 *tmp184
-    * set :buildTitaniumDrills:size *tmp185
+  328 read :buildTitaniumDrills:size bank1 *tmp183
   329 op greaterThanEq *tmp186 :buildTitaniumDrills:size 3
   330 jump *label107 equal *tmp186 false
   331 op add *tmp188 :buildTitaniumDrills:index 2
-    * set *tmp189 *tmp188
-    * read *tmp190 bank1 *tmp189
-    * set :buildTitaniumDrills:x *tmp190
+  332 read :buildTitaniumDrills:x bank1 *tmp188
   333 op add *tmp191 :buildTitaniumDrills:index 3
-    * set *tmp192 *tmp191
-    * read *tmp193 bank1 *tmp192
-    * set :buildTitaniumDrills:y *tmp193
+  334 read :buildTitaniumDrills:y bank1 *tmp191
   335 op sub *tmp194 :buildTitaniumDrills:x 1
   336 op sub *tmp195 :buildTitaniumDrills:y 1
   337 set :buildTitaniumDrill:x *tmp194
 
   406 wait 1e-15
   407 read *tmp211 .oreLocator ":layoutThoriumDrill*finished"
   408 jump *label118 equal *tmp211 false
-    * read *tmp212 .oreLocator ":layoutThoriumDrill*retval"
-    * set :buildThoriumDrill:result *tmp212
+  409 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
   410 op equal *tmp213 :buildThoriumDrill:result false
   411 jump *label119 equal *tmp213 false
   412 set :error:error "Cannot locate spot for thorium drill"
 
   429 wait 1e-15
   430 read *tmp220 .blockBuilder ":buildBlockAt*finished"
   431 jump *label122 equal *tmp220 false
-    * read *tmp221 .blockBuilder ":buildBlockAt*retval"
-    * set .thoriumDrill *tmp221
+  432 read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
   433 set :buildRemoteBlock:cfg "z%-AAA##A##"
-    * read *tmp54 .oreLocator ".water1X"
-    * set :buildRemoteBlock:x *tmp54
-    * read *tmp55 .oreLocator ".water1Y"
-    * set :buildRemoteBlock:y *tmp55
+  434 read :buildRemoteBlock:x .oreLocator ".water1X"
+  435 read :buildRemoteBlock:y .oreLocator ".water1Y"
   436 setaddr :buildRemoteBlock*retaddr *label123 (h:*label123)
   437 call *label31 *invalid :buildRemoteBlock*retval (m:*label123) (h:*label123)
   438 label *label123
   439 set :buildRemoteBlock:cfg "z%-AAA##A##"
-    * read *tmp58 .oreLocator ".water2X"
-    * set :buildRemoteBlock:x *tmp58
-    * read *tmp59 .oreLocator ".water2Y"
-    * set :buildRemoteBlock:y *tmp59
+  440 read :buildRemoteBlock:x .oreLocator ".water2X"
+  441 read :buildRemoteBlock:y .oreLocator ".water2Y"
   442 setaddr :buildRemoteBlock*retaddr *label124 (h:*label124)
   443 call *label31 *invalid :buildRemoteBlock*retval (m:*label124) (h:*label124)
   444 label *label124
   445 set :buildRemoteBlock:cfg "o%+FK<A####"
-    * read *tmp60 .oreLocator ".generatorX"
-    * set :buildRemoteBlock:x *tmp60
-    * read *tmp61 .oreLocator ".generatorY"
-    * set :buildRemoteBlock:y *tmp61
+  446 read :buildRemoteBlock:x .oreLocator ".generatorX"
+  447 read :buildRemoteBlock:y .oreLocator ".generatorY"
   448 setaddr :buildRemoteBlock*retaddr *label125 (h:*label125)
   449 call *label31 *invalid :buildRemoteBlock*retval (m:*label125) (h:*label125)
   450 label *label125
-    * set *tmp224 :buildRemoteBlock*retval
-    * set .thoriumGenerator *tmp224
+  451 set .thoriumGenerator :buildRemoteBlock*retval
   452 set :buildRemoteBlock:cfg "g)'%)######"
-    * read *tmp62 .oreLocator ".nodeX"
-    * set :buildRemoteBlock:x *tmp62
-    * read *tmp63 .oreLocator ".nodeY"
-    * set :buildRemoteBlock:y *tmp63
+  453 read :buildRemoteBlock:x .oreLocator ".nodeX"
+  454 read :buildRemoteBlock:y .oreLocator ".nodeY"
   455 setaddr :buildRemoteBlock*retaddr *label126 (h:*label126)
   456 call *label31 *invalid :buildRemoteBlock*retval (m:*label126) (h:*label126)
   457 label *label126
   458 set :buildRemoteBlock:cfg "r**#-#+####"
-    * read *tmp64 .oreLocator ".panelX"
-    * set :buildRemoteBlock:x *tmp64
-    * read *tmp65 .oreLocator ".panelY"
-    * set :buildRemoteBlock:y *tmp65
+  459 read :buildRemoteBlock:x .oreLocator ".panelX"
+  460 read :buildRemoteBlock:y .oreLocator ".panelY"
   461 setaddr :buildRemoteBlock*retaddr *label127 (h:*label127)
   462 call *label31 *invalid :buildRemoteBlock*retval (m:*label127) (h:*label127)
   463 label *label127
   464 set :buildRemoteBlock:cfg "k*/(7######"
-    * read *tmp66 .oreLocator ".batteryX"
-    * set :buildRemoteBlock:x *tmp66
-    * read *tmp67 .oreLocator ".batteryY"
-    * set :buildRemoteBlock:y *tmp67
+  465 read :buildRemoteBlock:x .oreLocator ".batteryX"
+  466 read :buildRemoteBlock:y .oreLocator ".batteryY"
   467 setaddr :buildRemoteBlock*retaddr *label128 (h:*label128)
   468 call *label31 *invalid :buildRemoteBlock*retval (m:*label128) (h:*label128)
   469 label *label128
   470 set :buildRemoteBlock:cfg "**#######"
-    * read *tmp56 .oreLocator ".containerX"
-    * set :buildRemoteBlock:x *tmp56
-    * read *tmp57 .oreLocator ".containerY"
-    * set :buildRemoteBlock:y *tmp57
+  471 read :buildRemoteBlock:x .oreLocator ".containerX"
+  472 read :buildRemoteBlock:y .oreLocator ".containerY"
   473 setaddr :buildRemoteBlock*retaddr *label129 (h:*label129)
   474 call *label31 *invalid :buildRemoteBlock*retval (m:*label129) (h:*label129)
   475 label *label129
-    * set *tmp228 :buildRemoteBlock*retval
-    * set .thoriumContainer *tmp228
+  476 set .thoriumContainer :buildRemoteBlock*retval
   477 op equal *tmp229 .thoriumContainer null
   478 jump *label130 equal *tmp229 false
   479 set .thoriumContainer .thoriumDrill
 
   511 setaddr :buildBlockFromCfg.1*retaddr *label139 (h:*label139)
   512 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label139) (h:*label139)
   513 label *label139
-    * set *tmp234 :buildBlockFromCfg.1*retval
-    * set :multiReconstructor *tmp234
+  514 set :multiReconstructor :buildBlockFromCfg.1*retval
   515 write :multiReconstructor .controller ".multiReconstructor"
   516 write :multiReconstructor .display ".multiReconstructor"
   517 setaddr :buildUnits*retaddr *label140 (h:*label140)
 
   631 setaddr :moveToBlock*retaddr *label172 (h:*label172)
   632 call *label14 *invalid :moveToBlock*retval (m:*label172) (h:*label172)
   633 label *label172
-    * sensor *tmp250 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp250
+  634 sensor :depositItems:cap :depositItems:block @itemCapacity
   635 label *label173
   636 ucontrol itemDrop :depositItems:block 30
   637 label *label174
 
   661 return :depositItems*retaddr
   662 end
   663 label *label16
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp257 *tmp258
+  664 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp257 0
   665 op equal *tmp259 *tmp257 false
   666 jump *label181 equal *tmp259 false
   667 set :error:error "Cannot locate ore"
 
   675 return :locateOre*retaddr
   676 end
   677 label *label17
-    * op min *tmp261 :mineOre:amount 30
-    * set :mineOre:amount *tmp261
+  678 op min :mineOre:amount :mineOre:amount 30
   679 set :transportStatus:target :mineOre:amount
   680 set :transportStatus:item :mineOre:ore
   681 setaddr :transportStatus*retaddr *label185 (h:*label185)
 
   705 setaddr :status3*retaddr *label191 (h:*label191)
   706 call *label8 *invalid :status3*retval (m:*label191) (h:*label191)
   707 label *label191
-    * op add *tmp265 @second 10
-    * set :mineOre:stop *tmp265
+  708 op add :mineOre:stop @second 10
   709 label *label192
-    * sensor *tmp266 @unit @firstItem
-    * set :mineOre:item *tmp266
+  710 sensor :mineOre:item @unit @firstItem
   711 op notEqual *tmp267 :mineOre:item null
   712 op notEqual *tmp268 :mineOre:item :mineOre:ore
   713 op land *tmp269 *tmp267 *tmp268
 
   744 setaddr :status2*retaddr *label201 (h:*label201)
   745 call *label7 *invalid :status2*retval (m:*label201) (h:*label201)
   746 label *label201
-    * set *tmp275 :mineOre.1:ore
-    * set :mineOre:ore *tmp275
+  747 set :mineOre:ore :mineOre.1:ore
   748 set :mineOre:amount 30
   749 set :mineOre:block .core
   750 setaddr :mineOre*retaddr *label202 (h:*label202)
 
   755 end
   756 label *label19
   757 sensor *tmp276 :fetchBlock:block @itemCapacity
-    * op min *tmp277 *tmp276 30
-    * set :transportStatus:target *tmp277
+  758 op min :transportStatus:target *tmp276 30
   759 set :transportStatus:item :fetchBlock:item
   760 setaddr :transportStatus*retaddr *label204 (h:*label204)
   761 call *label9 *invalid :transportStatus*retval (m:*label204) (h:*label204)
 
   778 label *label207
   779 label *label208
   780 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp280 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp280
+  781 sensor :fetchBlock:unitItem @unit @firstItem
   782 op notEqual *tmp281 :fetchBlock:unitItem null
   783 op notEqual *tmp282 :fetchBlock:unitItem :fetchBlock:item
   784 op land *tmp283 *tmp281 *tmp282
 
   809 setaddr :status2*retaddr *label215 (h:*label215)
   810 call *label7 *invalid :status2*retval (m:*label215) (h:*label215)
   811 label *label215
-    * sensor *tmp289 :supplyBlock:block @itemCapacity
-    * set :supplyBlock:blockCapacity *tmp289
+  812 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   813 sensor *tmp290 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp291 :supplyBlock:blockCapacity *tmp290
-    * set :supplyBlock:missing *tmp291
+  814 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp290
   815 op greaterThan *tmp292 :supplyBlock:missing 0
   816 jump *label216 equal *tmp292 false
   817 set :mineOre:ore :supplyBlock:ore
 
   828 end
   829 label *label21
   830 sensor *tmp294 :supplyBlockFromCore:target @itemCapacity
-    * op min *tmp295 *tmp294 30
-    * set :transportStatus:target *tmp295
+  831 op min :transportStatus:target *tmp294 30
   832 set :transportStatus:item :supplyBlockFromCore:item
   833 setaddr :transportStatus*retaddr *label220 (h:*label220)
   834 call *label9 *invalid :transportStatus*retval (m:*label220) (h:*label220)
 
   849 label *label223
   850 label *label224
   851 ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor *tmp296 @unit @firstItem
-    * set :supplyBlockFromCore:unitItem *tmp296
+  852 sensor :supplyBlockFromCore:unitItem @unit @firstItem
   853 op notEqual *tmp297 :supplyBlockFromCore:unitItem null
   854 op notEqual *tmp298 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
   855 op land *tmp299 *tmp297 *tmp298
 
   879 op add :unpackCfg:index :unpackCfg:index 1
   880 read *tmp306 :unpackCfg:cfg *tmp305
   881 op sub *tmp307 *tmp306 35
-    * lookup block *tmp308 *tmp307
-    * set :unpackCfg:type *tmp308
+  882 lookup block :unpackCfg:type *tmp307
   883 set *tmp309 :unpackCfg:index
   884 op add :unpackCfg:index :unpackCfg:index 1
   885 read *tmp310 :unpackCfg:cfg *tmp309
   886 op sub *tmp311 *tmp310 35
-    * op sub *tmp312 *tmp311 7
-    * set :unpackCfg:x *tmp312
+  887 op sub :unpackCfg:x *tmp311 7
   888 set *tmp313 :unpackCfg:index
   889 op add :unpackCfg:index :unpackCfg:index 1
   890 read *tmp314 :unpackCfg:cfg *tmp313
   891 op sub *tmp315 *tmp314 35
-    * op sub *tmp316 *tmp315 7
-    * set :unpackCfg:y *tmp316
+  892 op sub :unpackCfg:y *tmp315 7
   893 set *tmp317 :unpackCfg:index
   894 op add :unpackCfg:index :unpackCfg:index 1
   895 read *tmp318 :unpackCfg:cfg *tmp317
-    * op sub *tmp319 *tmp318 35
-    * set :unpackCfg:cu *tmp319
+  896 op sub :unpackCfg:cu *tmp318 35
   897 set *tmp320 :unpackCfg:index
   898 op add :unpackCfg:index :unpackCfg:index 1
   899 read *tmp321 :unpackCfg:cfg *tmp320
-    * op sub *tmp322 *tmp321 35
-    * set :unpackCfg:pb *tmp322
+  900 op sub :unpackCfg:pb *tmp321 35
   901 set *tmp323 :unpackCfg:index
   902 op add :unpackCfg:index :unpackCfg:index 1
   903 read *tmp324 :unpackCfg:cfg *tmp323
-    * op sub *tmp325 *tmp324 35
-    * set :unpackCfg:gr *tmp325
+  904 op sub :unpackCfg:gr *tmp324 35
   905 set *tmp326 :unpackCfg:index
   906 op add :unpackCfg:index :unpackCfg:index 1
   907 read *tmp327 :unpackCfg:cfg *tmp326
-    * op sub *tmp328 *tmp327 35
-    * set :unpackCfg:si *tmp328
+  908 op sub :unpackCfg:si *tmp327 35
   909 set *tmp329 :unpackCfg:index
   910 op add :unpackCfg:index :unpackCfg:index 1
   911 read *tmp330 :unpackCfg:cfg *tmp329
-    * op sub *tmp331 *tmp330 35
-    * set :unpackCfg:ti *tmp331
+  912 op sub :unpackCfg:ti *tmp330 35
   913 set *tmp332 :unpackCfg:index
   914 op add :unpackCfg:index :unpackCfg:index 1
   915 read *tmp333 :unpackCfg:cfg *tmp332
-    * op sub *tmp334 *tmp333 35
-    * set :unpackCfg:mg *tmp334
+  916 op sub :unpackCfg:mg *tmp333 35
   917 set *tmp335 :unpackCfg:index
   918 op add :unpackCfg:index :unpackCfg:index 1
   919 read *tmp336 :unpackCfg:cfg *tmp335
-    * op sub *tmp337 *tmp336 35
-    * set :unpackCfg:th *tmp337
+  920 op sub :unpackCfg:th *tmp336 35
   921 set *tmp338 :unpackCfg:index
   922 op add :unpackCfg:index :unpackCfg:index 1
   923 read *tmp339 :unpackCfg:cfg *tmp338
-    * op sub *tmp340 *tmp339 35
-    * set :unpackCfg:rotation *tmp340
+  924 op sub :unpackCfg:rotation *tmp339 35
   925 label *label230
   926 return :unpackCfg*retaddr
   927 end
 
  1067 jump *label272 equal *tmp374 false
  1068 sensor *tmp376 .core @titanium
  1069 op sub *tmp377 .targetTitanium *tmp376
-    * op min *tmp378 7 *tmp377
-    * set *tmp375 *tmp378
+ 1070 op min *tmp375 7 *tmp377
  1071 jump *label273 always
  1072 label *label272
  1073 set *tmp375 100
 
  1099 setaddr :status1*retaddr *label284 (h:*label284)
  1100 call *label6 *invalid :status1*retval (m:*label284) (h:*label284)
  1101 label *label284
-    * sensor *tmp391 .core @coal
-    * set :supplyBase0:coal *tmp391
-    * sensor *tmp392 .core @sand
-    * set :supplyBase0:sand *tmp392
+ 1102 sensor :supplyBase0:coal .core @coal
+ 1103 sensor :supplyBase0:sand .core @sand
  1104 op lessThan *tmp393 :supplyBase0:coal :supplyBase0:sand
  1105 jump *label285 equal *tmp393 false
  1106 set *tmp394 @coal
 
  1158 setaddr :status1*retaddr *label300 (h:*label300)
  1159 call *label6 *invalid :status1*retval (m:*label300) (h:*label300)
  1160 label *label300
-    * sensor *tmp404 .core @coal
-    * set :supplyBase0:coal.1 *tmp404
-    * sensor *tmp405 .core @sand
-    * set :supplyBase0:sand.1 *tmp405
+ 1161 sensor :supplyBase0:coal.1 .core @coal
+ 1162 sensor :supplyBase0:sand.1 .core @sand
  1163 op lessThanEq *tmp406 :supplyBase0:coal.1 :supplyBase0:sand.1
  1164 jump *label301 equal *tmp406 false
  1165 set *tmp407 @coal
 
  1244 write :meetTarget:thorium .display ".targetThorium"
  1245 set .targetCopper :meetTarget:copper
  1246 op add *tmp410 :meetTarget:lead .leadSurplus
-    * op add *tmp411 *tmp410 1
-    * set .targetLead *tmp411
+ 1247 op add .targetLead *tmp410 1
  1248 set .targetGraphite :meetTarget:graphite
  1249 set .targetSilicon :meetTarget:silicon
  1250 set .targetTitanium :meetTarget:titanium
 
  1357 wait 1e-15
  1358 read *tmp462 .blockBuilder ":buildBlockAt*finished"
  1359 jump *label341 equal *tmp462 false
-    * read *tmp463 .blockBuilder ":buildBlockAt*retval"
-    * set :buildBlock*retval *tmp463
+ 1360 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1361 jump *label339 always
  1362 set :buildBlock*retval null
  1363 label *label339
 
  1445 return :buildBlockFromCfg*retaddr
  1446 end
  1447 label *label33
-    * set *tmp468 :buildBlockFromCfg.1:cfg
-    * set :buildBlockFromCfg:cfg *tmp468
+ 1448 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
  1449 set :buildBlockFromCfg:config null
  1450 setaddr :buildBlockFromCfg*retaddr *label351 (h:*label351)
  1451 call *label32 *invalid :buildBlockFromCfg*retval (m:*label351) (h:*label351)
 
  1484 label *label36
  1485 set :getFloor:x :titaniumDrillScore:x
  1486 set :getFloor:y :titaniumDrillScore:y
-    * ucontrol getBlock :getFloor:x :getFloor:y *tmp479 *tmp478 :getFloor:floor
+ 1487 ucontrol getBlock :getFloor:x :getFloor:y 0 0 :getFloor:floor
  1488 set *tmp477 :getFloor:floor
  1489 jump *label360 always
  1490 set *tmp477 null
 
  1543 label *label371
  1544 set .positive :titaniumDrillScore:positive
  1545 set .negative :titaniumDrillScore:negative
-    * op add *tmp490 :buildTitaniumDrill:x 0.5
-    * set :titaniumDrillScore:x *tmp490
+ 1546 op add :titaniumDrillScore:x :buildTitaniumDrill:x 0.5
  1547 set :titaniumDrillScore:y :buildTitaniumDrill:y
  1548 set :titaniumDrillScore:positive .positive
  1549 set :titaniumDrillScore:negative .negative
 
  1578 wait 1e-15
  1579 read *tmp504 .blockBuilder ":buildBlockAt*finished"
  1580 jump *label376 equal *tmp504 false
-    * read *tmp505 .blockBuilder ":buildBlockAt*retval"
-    * set :buildTitaniumDrill:drill *tmp505
+ 1581 read :buildTitaniumDrill:drill .blockBuilder ":buildBlockAt*retval"
  1582 op notEqual *tmp506 :buildTitaniumDrill:drill null
  1583 jump *label377 equal *tmp506 false
  1584 write :buildTitaniumDrill:drill .flareController ":addTitaniumDrill:drill"

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-1 instructions):
 
   518 call *label38 *invalid :buildUnits*retval (m:*label140) (h:*label140)
   519 label *label140
   520 label *label141
-    * jump *label143 equal true false
   521 setaddr :supplyBase*retaddr *label144 (h:*label144)
   522 call *label28 *invalid :supplyBase*retval (m:*label144) (h:*label144)
   523 label *label144

Modifications by Iterated phase, Jump Straightening, pass 1, iteration 1 (-2 instructions):
 
  1488 jump *label360 always
  1489 set *tmp477 null
  1490 label *label360
-    * jump *label362 equal *tmp477 @ore-titanium
-    * jump *label361 always
+ 1491 jump *label361 notEqual *tmp477 @ore-titanium
  1492 label *label362
  1493 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1494 jump *label359 always
 
  1496 jump *label364 equal *tmp477 @ore-copper
  1497 jump *label364 equal *tmp477 @ore-lead
  1498 jump *label364 equal *tmp477 @ore-scrap
-    * jump *label364 equal *tmp477 @ore-coal
-    * jump *label363 always
+ 1499 jump *label363 notEqual *tmp477 @ore-coal
  1500 label *label364
  1501 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1502 jump *label359 always

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-56 instructions):
 
    21 set .builder @unit
    22 ulocate building core false @copper .coreX .coreY 0 .core
    23 label *label40
-    * op equal *tmp112 .core null
-    * jump *label39 notEqual *tmp112 false
+   24 jump *label39 equal .core null
    25 label *label41
    26 set .display processor1
    27 set .flareController processor3
 
    78 read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
    79 read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
    80 read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
-    * op equal *tmp132 :buildFirstTitaniumDrill:result false
-    * jump *label51 equal *tmp132 false
+   81 jump *label51 notEqual :buildFirstTitaniumDrill:result false
    82 set :error:error "Cannot locate spot for titanium drill"
    83 setaddr :error*retaddr *label53 (h:*label53)
    84 call *label10 *invalid :error*retval (m:*label53) (h:*label53)
 
   169 call *label28 *invalid :supplyBase*retval (m:*label68) (h:*label68)
   170 label *label68
   171 sensor *tmp148 .battery @totalPower
-    * op lessThan *tmp149 *tmp148 300
-    * jump *label69 equal *tmp149 false
+  172 jump *label69 greaterThanEq *tmp148 300
   173 jump *label67 always
   174 jump *label70 always
   175 label *label69
   176 label *label70
   177 label *label66
   178 read *tmp90 .controller ".monos"
-    * op lessThan *tmp151 *tmp90 3
-    * jump *label65 notEqual *tmp151 false
+  179 jump *label65 lessThan *tmp90 3
   180 label *label67
   181 set .siliconSurplus 65
   182 set :buildBlockFromCfg.1:cfg ",)###A<###"
 
   264 label *label88
   265 label *label89
   266 read *tmp91 .controller ".polys"
-    * op lessThan *tmp167 *tmp91 2
-    * jump *label91 equal *tmp167 false
+  267 jump *label91 greaterThanEq *tmp91 2
   268 setaddr :supplyBase*retaddr *label92 (h:*label92)
   269 call *label28 *invalid :supplyBase*retval (m:*label92) (h:*label92)
   270 label *label92
 
   277 label *label93
   278 label *label94
   279 read *tmp89 .controller ".flares"
-    * op lessThan *tmp168 *tmp89 2
-    * jump *label96 equal *tmp168 false
+  280 jump *label96 greaterThanEq *tmp89 2
   281 setaddr :supplyBase*retaddr *label97 (h:*label97)
   282 call *label28 *invalid :supplyBase*retval (m:*label97) (h:*label97)
   283 label *label97
 
   315 op equal :buildTitaniumDrills:searching *tmp179 false
   316 label *label104
   317 read *tmp51 .oreLocator ".locations"
-    * op lessThan *tmp181 :buildTitaniumDrills:current *tmp51
-    * jump *label106 equal *tmp181 false
+  318 jump *label106 greaterThanEq :buildTitaniumDrills:current *tmp51
   319 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
   320 op add *tmp183 :buildTitaniumDrills:index 1
   321 read :buildTitaniumDrills:size bank1 *tmp183
-    * op greaterThanEq *tmp186 :buildTitaniumDrills:size 3
-    * jump *label107 equal *tmp186 false
+  322 jump *label107 lessThan :buildTitaniumDrills:size 3
   323 op add *tmp188 :buildTitaniumDrills:index 2
   324 read :buildTitaniumDrills:x bank1 *tmp188
   325 op add *tmp191 :buildTitaniumDrills:index 3
 
   367 label *label105
   368 jump *label104 always
   369 label *label106
-    * op greaterThanEq *tmp203 :buildTitaniumDrills:count 8
-    * jump *label113 equal *tmp203 false
+  370 jump *label113 lessThan :buildTitaniumDrills:count 8
   371 jump *label103 always
   372 jump *label114 always
   373 label *label113
 
   398 read *tmp211 .oreLocator ":layoutThoriumDrill*finished"
   399 jump *label118 equal *tmp211 false
   400 read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
-    * op equal *tmp213 :buildThoriumDrill:result false
-    * jump *label119 equal *tmp213 false
+  401 jump *label119 notEqual :buildThoriumDrill:result false
   402 set :error:error "Cannot locate spot for thorium drill"
   403 setaddr :error*retaddr *label121 (h:*label121)
   404 call *label10 *invalid :error*retval (m:*label121) (h:*label121)
 
   464 call *label31 *invalid :buildRemoteBlock*retval (m:*label129) (h:*label129)
   465 label *label129
   466 set .thoriumContainer :buildRemoteBlock*retval
-    * op equal *tmp229 .thoriumContainer null
-    * jump *label130 equal *tmp229 false
+  467 jump *label130 notEqual .thoriumContainer null
   468 set .thoriumContainer .thoriumDrill
   469 jump *label131 always
   470 label *label130
 
   479 label *label132
   480 label *label133
   481 read *tmp91 .controller ".polys"
-    * op lessThan *tmp231 *tmp91 6
-    * jump *label135 equal *tmp231 false
+  482 jump *label135 greaterThanEq *tmp91 6
   483 setaddr :supplyBase*retaddr *label136 (h:*label136)
   484 call *label28 *invalid :supplyBase*retval (m:*label136) (h:*label136)
   485 label *label136
 
   549 label *label151
   550 label *label152
   551 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp235
-    * op equal *tmp236 *tmp235 false
-    * jump *label154 equal *tmp236 false
+  552 jump *label154 notEqual *tmp235 false
   553 op sub *tmp237 :moveTo:radius 0.5
   554 ucontrol approach :moveTo:x :moveTo:y *tmp237
   555 label *label153
 
   565 label *label156
   566 label *label157
   567 sensor *tmp238 @unit @firstItem
-    * op notEqual *tmp239 *tmp238 null
-    * jump *label160 equal *tmp239 false
+  568 jump *label160 equal *tmp238 null
   569 ucontrol itemDrop @air 1000
   570 jump *label161 always
   571 label *label160
 
   573 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
   574 label *label158
   575 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp241
-    * op equal *tmp242 *tmp241 false
-    * jump *label157 notEqual *tmp242 false
+  576 jump *label157 equal *tmp241 false
   577 label *label159
   578 label *label155
   579 return :moveToEmpty*retaddr
 
   581 label *label13
   582 label *label163
   583 sensor *tmp243 @unit @firstItem
-    * op notEqual *tmp244 *tmp243 null
-    * jump *label165 equal *tmp244 false
+  584 jump *label165 equal *tmp243 null
   585 ucontrol itemDrop @air 1000
   586 label *label164
   587 jump *label163 always
 
   607 call *label8 *invalid :status3*retval (m:*label169) (h:*label169)
   608 label *label169
   609 sensor *tmp247 @unit @firstItem
-    * op equal *tmp248 *tmp247 :depositItems:item
-    * jump *label170 equal *tmp248 false
+  610 jump *label170 notEqual *tmp247 :depositItems:item
   611 set :moveToBlock:block :depositItems:block
   612 set :moveToBlock:radius 6
   613 setaddr :moveToBlock*retaddr *label172 (h:*label172)
 
   620 sensor *tmp251 @unit @firstItem
   621 op mul *tmp252 *tmp251 :depositItems:cap
   622 sensor *tmp253 :depositItems:block :depositItems:item
-    * op greaterThan *tmp254 *tmp252 *tmp253
-    * jump *label173 notEqual *tmp254 false
+  623 jump *label173 greaterThan *tmp252 *tmp253
   624 label *label175
   625 jump *label171 always
   626 label *label170
   627 label *label176
   628 sensor *tmp255 @unit @firstItem
-    * op notEqual *tmp256 *tmp255 null
-    * jump *label178 equal *tmp256 false
+  629 jump *label178 equal *tmp255 null
   630 ucontrol itemDrop @air 1000
   631 label *label177
   632 jump *label176 always
 
   642 end
   643 label *label16
   644 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp257 0
-    * op equal *tmp259 *tmp257 false
-    * jump *label181 equal *tmp259 false
+  645 jump *label181 notEqual *tmp257 false
   646 set :error:error "Cannot locate ore"
   647 setaddr :error*retaddr *label183 (h:*label183)
   648 call *label10 *invalid :error*retval (m:*label183) (h:*label183)
 
   672 call *label12 *invalid :moveToEmpty*retval (m:*label187) (h:*label187)
   673 label *label187
   674 sensor *tmp262 @unit @firstItem
-    * op notEqual *tmp263 *tmp262 :mineOre:ore
-    * jump *label188 equal *tmp263 false
+  675 jump *label188 equal *tmp262 :mineOre:ore
   676 setaddr :dropAll*retaddr *label190 (h:*label190)
   677 call *label13 *invalid :dropAll*retval (m:*label190) (h:*label190)
   678 label *label190
 
   695 label *label195
   696 label *label196
   697 ucontrol mine :mineOre:x :mineOre:y
-    * op greaterThan *tmp271 @second :mineOre:stop
-    * jump *label197 equal *tmp271 false
+  698 jump *label197 lessThanEq @second :mineOre:stop
   699 jump *label194 always
   700 jump *label198 always
   701 label *label197
   702 label *label198
   703 label *label193
   704 sensor *tmp273 @unit @totalItems
-    * op lessThan *tmp274 *tmp273 :mineOre:amount
-    * jump *label192 notEqual *tmp274 false
+  705 jump *label192 lessThan *tmp273 :mineOre:amount
   706 label *label194
   707 ucontrol unbind
   708 set :depositItems:block :mineOre:block
 
   788 sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCapacity
   789 sensor *tmp290 :supplyBlock:block :supplyBlock:ore
   790 op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp290
-    * op greaterThan *tmp292 :supplyBlock:missing 0
-    * jump *label216 equal *tmp292 false
+  791 jump *label216 lessThanEq :supplyBlock:missing 0
   792 set :mineOre:ore :supplyBlock:ore
   793 set :mineOre:amount :supplyBlock:blockCapacity
   794 set :mineOre:block :supplyBlock:block
 
   901 return :unpackCfg*retaddr
   902 end
   903 label *label28
-    * op equal *tmp341 .flareControllerStarted false
-    * jump *label232 equal *tmp341 false
+  904 jump *label232 notEqual .flareControllerStarted false
   905 read *tmp89 .controller ".flares"
-    * op greaterThan *tmp343 *tmp89 0
-    * jump *label234 equal *tmp343 false
+  906 jump *label234 lessThanEq *tmp89 0
   907 set .flareControllerStarted true
   908 write .core .flareController ":start:aCore"
   909 write .titaniumDrill .flareController ":start:drill"
 
   934 jump *label237 always
   935 label *label236
   936 read *tmp90 .controller ".monos"
-    * op greaterThan *tmp348 *tmp90 3
-    * jump *label242 equal *tmp348 false
+  937 jump *label242 lessThanEq *tmp90 3
   938 set :status1:text "Phase 1: supplying base"
   939 setaddr :status1*retaddr *label245 (h:*label245)
   940 call *label6 *invalid :status1*retval (m:*label245) (h:*label245)
 
   947 jump *label243 always
   948 label *label242
   949 set :supplyBase0:supplied false
-    * op equal *tmp350 .unloader1 null
-    * jump *label248 equal *tmp350 false
+  950 jump *label248 notEqual .unloader1 null
   951 sensor *tmp352 .core @graphite
-    * op lessThan *tmp353 *tmp352 .targetGraphite
-    * jump *label250 equal *tmp353 false
+  952 jump *label250 greaterThanEq *tmp352 .targetGraphite
   953 sensor *tmp355 .press @coal
-    * op lessThan *tmp356 *tmp355 5
-    * jump *label252 equal *tmp356 false
+  954 jump *label252 greaterThanEq *tmp355 5
   955 set :status1:text "Goal 1: graphite requirement"
   956 setaddr :status1*retaddr *label254 (h:*label254)
   957 call *label6 *invalid :status1*retval (m:*label254) (h:*label254)
 
   969 label *label250
   970 label *label251
   971 sensor *tmp358 .core @silicon
-    * op lessThan *tmp359 *tmp358 .targetSilicon
-    * jump *label256 equal *tmp359 false
+  972 jump *label256 greaterThanEq *tmp358 .targetSilicon
   973 sensor *tmp361 .smelter @coal
-    * op lessThan *tmp362 *tmp361 5
-    * jump *label258 equal *tmp362 false
+  974 jump *label258 greaterThanEq *tmp361 5
   975 set :status1:text "Goal 2: coal for silicon requirement"
   976 setaddr :status1*retaddr *label260 (h:*label260)
   977 call *label6 *invalid :status1*retval (m:*label260) (h:*label260)
 
   985 jump *label259 always
   986 label *label258
   987 sensor *tmp364 .smelter @sand
-    * op lessThan *tmp365 *tmp364 5
-    * jump *label262 equal *tmp365 false
+  988 jump *label262 greaterThanEq *tmp364 5
   989 set :status1:text "Goal 3: sand for silicon requirement"
   990 setaddr :status1*retaddr *label264 (h:*label264)
   991 call *label6 *invalid :status1*retval (m:*label264) (h:*label264)
 
  1004 label *label256
  1005 label *label257
  1006 sensor *tmp367 .battery @totalPower
-    * op lessThan *tmp368 *tmp367 .powerTarget
-    * jump *label266 equal *tmp368 false
+ 1007 jump *label266 greaterThanEq *tmp367 .powerTarget
  1008 sensor *tmp370 .generator @coal
-    * op lessThan *tmp371 *tmp370 2
-    * jump *label268 equal *tmp371 false
+ 1009 jump *label268 greaterThanEq *tmp370 2
  1010 set :status1:text "Goal 4: supplying generator"
  1011 setaddr :status1*retaddr *label270 (h:*label270)
  1012 call *label6 *invalid :status1*retval (m:*label270) (h:*label270)
 
  1027 label *label248
  1028 label *label249
  1029 sensor *tmp373 .core @titanium
-    * op lessThan *tmp374 *tmp373 .targetTitanium
-    * jump *label272 equal *tmp374 false
+ 1030 jump *label272 greaterThanEq *tmp373 .targetTitanium
  1031 sensor *tmp376 .core @titanium
  1032 op sub *tmp377 .targetTitanium *tmp376
  1033 op min *tmp375 7 *tmp377
 
  1037 label *label273
  1038 set :supplyBase0:titaniumTrigger *tmp375
  1039 sensor *tmp379 .titaniumDrill @titanium
-    * op lessThan *tmp380 *tmp379 :supplyBase0:titaniumTrigger
-    * jump *label274 equal *tmp380 false
-    * op equal *tmp382 :supplyBase0:supplied false
-    * jump *label276 equal *tmp382 false
+ 1040 jump *label274 greaterThanEq *tmp379 :supplyBase0:titaniumTrigger
+ 1041 jump *label276 notEqual :supplyBase0:supplied false
  1042 sensor *tmp384 .battery @totalPower
  1043 op mul *tmp385 .unloader1 .powerTarget
-    * op lessThan *tmp386 *tmp384 *tmp385
-    * jump *label278 equal *tmp386 false
+ 1044 jump *label278 greaterThanEq *tmp384 *tmp385
  1045 set :status1:text "Goal 5: supplying generator"
  1046 setaddr :status1*retaddr *label280 (h:*label280)
  1047 call *label6 *invalid :status1*retval (m:*label280) (h:*label280)
 
  1053 jump *label279 always
  1054 label *label278
  1055 sensor *tmp388 .core @silicon
-    * op lessThan *tmp389 *tmp388 .targetSilicon
-    * jump *label282 equal *tmp389 false
+ 1056 jump *label282 greaterThanEq *tmp388 .targetSilicon
  1057 set :status1:text "Goal 6: silicon requirement"
  1058 setaddr :status1*retaddr *label284 (h:*label284)
  1059 call *label6 *invalid :status1*retval (m:*label284) (h:*label284)
  1060 label *label284
  1061 sensor :supplyBase0:coal .core @coal
  1062 sensor :supplyBase0:sand .core @sand
-    * op lessThan *tmp393 :supplyBase0:coal :supplyBase0:sand
-    * jump *label285 equal *tmp393 false
+ 1063 jump *label285 greaterThanEq :supplyBase0:coal :supplyBase0:sand
  1064 set *tmp394 @coal
  1065 jump *label286 always
  1066 label *label285
 
  1074 jump *label283 always
  1075 label *label282
  1076 sensor *tmp395 .core @copper
-    * op lessThan *tmp396 *tmp395 .targetCopper
-    * jump *label288 equal *tmp396 false
+ 1077 jump *label288 greaterThanEq *tmp395 .targetCopper
  1078 set :status1:text "Goal 7: copper requirement"
  1079 setaddr :status1*retaddr *label290 (h:*label290)
  1080 call *label6 *invalid :status1*retval (m:*label290) (h:*label290)
 
  1086 jump *label289 always
  1087 label *label288
  1088 sensor *tmp398 .core @lead
-    * op lessThan *tmp399 *tmp398 .targetLead
-    * jump *label292 equal *tmp399 false
+ 1089 jump *label292 greaterThanEq *tmp398 .targetLead
  1090 set :status1:text "Goal 8: lead requirement"
  1091 setaddr :status1*retaddr *label294 (h:*label294)
  1092 call *label6 *invalid :status1*retval (m:*label294) (h:*label294)
 
  1098 jump *label293 always
  1099 label *label292
  1100 sensor *tmp401 .core @metaglass
-    * op lessThan *tmp402 *tmp401 .targetMetaglass
-    * jump *label296 equal *tmp402 false
+ 1101 jump *label296 greaterThanEq *tmp401 .targetMetaglass
  1102 set :status1:text "Goal 9: metaglass requirement"
  1103 setaddr :status1*retaddr *label298 (h:*label298)
  1104 call *label6 *invalid :status1*retval (m:*label298) (h:*label298)
 
  1115 label *label300
  1116 sensor :supplyBase0:coal.1 .core @coal
  1117 sensor :supplyBase0:sand.1 .core @sand
-    * op lessThanEq *tmp406 :supplyBase0:coal.1 :supplyBase0:sand.1
-    * jump *label301 equal *tmp406 false
+ 1118 jump *label301 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
  1119 set *tmp407 @coal
  1120 jump *label302 always
  1121 label *label301
 
  1218 write *tmp418 .controller ".siliconReserve"
  1219 label *label317
  1220 sensor *tmp420 .core @copper
-    * op lessThan *tmp421 *tmp420 .targetCopper
-    * jump *label321 equal *tmp421 false
+ 1221 jump *label321 greaterThanEq *tmp420 .targetCopper
  1222 set *tmp419 false
  1223 jump *label320 always
  1224 jump *label322 always
  1225 label *label321
  1226 label *label322
  1227 sensor *tmp423 .core @lead
-    * op lessThan *tmp424 *tmp423 .targetLead
-    * jump *label323 equal *tmp424 false
+ 1228 jump *label323 greaterThanEq *tmp423 .targetLead
  1229 set *tmp419 false
  1230 jump *label320 always
  1231 jump *label324 always
  1232 label *label323
  1233 label *label324
  1234 sensor *tmp426 .core @graphite
-    * op lessThan *tmp427 *tmp426 .targetGraphite
-    * jump *label325 equal *tmp427 false
+ 1235 jump *label325 greaterThanEq *tmp426 .targetGraphite
  1236 set *tmp419 false
  1237 jump *label320 always
  1238 jump *label326 always
  1239 label *label325
  1240 label *label326
  1241 sensor *tmp429 .core @silicon
-    * op lessThan *tmp430 *tmp429 .targetSilicon
-    * jump *label327 equal *tmp430 false
+ 1242 jump *label327 greaterThanEq *tmp429 .targetSilicon
  1243 set *tmp419 false
  1244 jump *label320 always
  1245 jump *label328 always
  1246 label *label327
  1247 label *label328
  1248 sensor *tmp432 .core @titanium
-    * op lessThan *tmp433 *tmp432 .targetTitanium
-    * jump *label329 equal *tmp433 false
+ 1249 jump *label329 greaterThanEq *tmp432 .targetTitanium
  1250 set *tmp419 false
  1251 jump *label320 always
  1252 jump *label330 always
  1253 label *label329
  1254 label *label330
  1255 sensor *tmp435 .core @metaglass
-    * op lessThan *tmp436 *tmp435 .targetMetaglass
-    * jump *label331 equal *tmp436 false
+ 1256 jump *label331 greaterThanEq *tmp435 .targetMetaglass
  1257 set *tmp419 false
  1258 jump *label320 always
  1259 jump *label332 always
  1260 label *label331
  1261 label *label332
  1262 sensor *tmp438 .core @thorium
-    * op lessThan *tmp439 *tmp438 .targetThorium
-    * jump *label333 equal *tmp439 false
+ 1263 jump *label333 greaterThanEq *tmp438 .targetThorium
  1264 set *tmp419 false
  1265 jump *label320 always
  1266 jump *label334 always
 
  1270 jump *label320 always
  1271 set *tmp419 null
  1272 label *label320
-    * op equal *tmp441 *tmp419 false
-    * jump *label319 equal *tmp441 false
+ 1273 jump *label319 notEqual *tmp419 false
  1274 setaddr :supplyBase*retaddr *label335 (h:*label335)
  1275 call *label28 *invalid :supplyBase*retval (m:*label335) (h:*label335)
  1276 label *label335
 
  1310 return :buildBlock*retaddr
  1311 end
  1312 label *label31
-    * op greaterThanEq *tmp464 :buildRemoteBlock:x 0
-    * jump *label343 equal *tmp464 false
+ 1313 jump *label343 lessThan :buildRemoteBlock:x 0
  1314 set :unpackCfg:cfg :buildRemoteBlock:cfg
  1315 setaddr :unpackCfg*retaddr *label345 (h:*label345)
  1316 call *label27 *invalid :unpackCfg*retval (m:*label345) (h:*label345)
 
  1452 return :titaniumDrillScore*retaddr
  1453 end
  1454 label *label37
-    * op lessThan *tmp483 :buildTitaniumDrill:count 8
-    * jump *label366 equal *tmp483 false
+ 1455 jump *label366 greaterThanEq :buildTitaniumDrill:count 8
  1456 set :moveTo.1:x :buildTitaniumDrill:x
  1457 set :moveTo.1:y :buildTitaniumDrill:y
  1458 set *tmp485 :moveTo.1:x
 
  1521 read *tmp504 .blockBuilder ":buildBlockAt*finished"
  1522 jump *label376 equal *tmp504 false
  1523 read :buildTitaniumDrill:drill .blockBuilder ":buildBlockAt*retval"
-    * op notEqual *tmp506 :buildTitaniumDrill:drill null
-    * jump *label377 equal *tmp506 false
+ 1524 jump *label377 equal :buildTitaniumDrill:drill null
  1525 write :buildTitaniumDrill:drill .flareController ":addTitaniumDrill:drill"
  1526 write false .flareController ":addTitaniumDrill*finished"
  1527 write 1 .flareController "@counter"

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-36 instructions):
 
    83 setaddr :error*retaddr *label53 (h:*label53)
    84 call *label10 *invalid :error*retval (m:*label53) (h:*label53)
    85 label *label53
-    * jump *label52 always
    86 label *label51
    87 label *label52
    88 write @pneumatic-drill .display ".nextBlock"
 
   170 sensor *tmp148 .battery @totalPower
   171 jump *label69 greaterThanEq *tmp148 300
   172 jump *label67 always
-    * jump *label70 always
   173 label *label69
   174 label *label70
   175 label *label66
 
   358 call *label37 *invalid :buildTitaniumDrill*retval (m:*label112) (h:*label112)
   359 label *label112
   360 set :buildTitaniumDrills:count :buildTitaniumDrill:count
-    * jump *label108 always
   361 label *label107
   362 label *label108
   363 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
 
   366 label *label106
   367 jump *label113 lessThan :buildTitaniumDrills:count 8
   368 jump *label103 always
-    * jump *label114 always
   369 label *label113
   370 label *label114
   371 label *label102
 
   399 setaddr :error*retaddr *label121 (h:*label121)
   400 call *label10 *invalid :error*retval (m:*label121) (h:*label121)
   401 label *label121
-    * jump *label120 always
   402 label *label119
   403 label *label120
   404 write @laser-drill .blockBuilder ":buildBlockAt:block"
 
   461 set .thoriumContainer :buildRemoteBlock*retval
   462 jump *label130 notEqual .thoriumContainer null
   463 set .thoriumContainer .thoriumDrill
-    * jump *label131 always
   464 label *label130
   465 label *label131
   466 write .thoriumDrill .display ".thoriumDrill"
 
   561 sensor *tmp238 @unit @firstItem
   562 jump *label160 equal *tmp238 null
   563 ucontrol itemDrop @air 1000
-    * jump *label161 always
   564 label *label160
   565 label *label161
   566 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
 
   640 setaddr :error*retaddr *label183 (h:*label183)
   641 call *label10 *invalid :error*retval (m:*label183) (h:*label183)
   642 label *label183
-    * jump *label182 always
   643 label *label181
   644 label *label182
   645 label *label180
 
   668 setaddr :dropAll*retaddr *label190 (h:*label190)
   669 call *label13 *invalid :dropAll*retval (m:*label190) (h:*label190)
   670 label *label190
-    * jump *label189 always
   671 label *label188
   672 label *label189
   673 set :status3:text "Mining..."
 
   682 op land *tmp269 *tmp267 *tmp268
   683 jump *label195 equal *tmp269 false
   684 jump *label194 always
-    * jump *label196 always
   685 label *label195
   686 label *label196
   687 ucontrol mine :mineOre:x :mineOre:y
   688 jump *label197 lessThanEq @second :mineOre:stop
   689 jump *label194 always
-    * jump *label198 always
   690 label *label197
   691 label *label198
   692 label *label193
 
   749 op land *tmp283 *tmp281 *tmp282
   750 jump *label211 equal *tmp283 false
   751 ucontrol itemDrop @air 1000
-    * jump *label212 always
   752 label *label211
   753 label *label212
   754 label *label209
 
   783 setaddr :mineOre*retaddr *label218 (h:*label218)
   784 call *label17 *invalid :mineOre*retval (m:*label218) (h:*label218)
   785 label *label218
-    * jump *label217 always
   786 label *label216
   787 label *label217
   788 label *label214
 
   817 op land *tmp299 *tmp297 *tmp298
   818 jump *label227 equal *tmp299 false
   819 ucontrol itemDrop @air 1000
-    * jump *label228 always
   820 label *label227
   821 label *label228
   822 label *label225
 
   895 write .titaniumDrill .flareController ":start:drill"
   896 write false .flareController ":start*finished"
   897 write 2 .flareController "@counter"
-    * jump *label235 always
   898 label *label234
   899 label *label235
-    * jump *label233 always
   900 label *label232
   901 label *label233
   902 jump *label236 equal .thoriumContainer false
 
   946 call *label20 *invalid :supplyBlock*retval (m:*label255) (h:*label255)
   947 label *label255
   948 set :supplyBase0:supplied true
-    * jump *label253 always
   949 label *label252
   950 label *label253
-    * jump *label251 always
   951 label *label250
   952 label *label251
   953 sensor *tmp358 .core @silicon
 
   978 call *label20 *invalid :supplyBlock*retval (m:*label265) (h:*label265)
   979 label *label265
   980 set :supplyBase0:supplied true
-    * jump *label263 always
   981 label *label262
   982 label *label263
   983 label *label259
-    * jump *label257 always
   984 label *label256
   985 label *label257
   986 sensor *tmp367 .battery @totalPower
 
   997 call *label20 *invalid :supplyBlock*retval (m:*label271) (h:*label271)
   998 label *label271
   999 set :supplyBase0:supplied true
-    * jump *label269 always
  1000 label *label268
  1001 label *label269
-    * jump *label267 always
  1002 label *label266
  1003 label *label267
-    * jump *label249 always
  1004 label *label248
  1005 label *label249
  1006 sensor *tmp373 .core @titanium
 
  1108 label *label289
  1109 label *label283
  1110 label *label279
-    * jump *label277 always
  1111 label *label276
  1112 label *label277
  1113 jump *label275 always
 
  1197 jump *label321 greaterThanEq *tmp420 .targetCopper
  1198 set *tmp419 false
  1199 jump *label320 always
-    * jump *label322 always
  1200 label *label321
  1201 label *label322
  1202 sensor *tmp423 .core @lead
  1203 jump *label323 greaterThanEq *tmp423 .targetLead
  1204 set *tmp419 false
  1205 jump *label320 always
-    * jump *label324 always
  1206 label *label323
  1207 label *label324
  1208 sensor *tmp426 .core @graphite
  1209 jump *label325 greaterThanEq *tmp426 .targetGraphite
  1210 set *tmp419 false
  1211 jump *label320 always
-    * jump *label326 always
  1212 label *label325
  1213 label *label326
  1214 sensor *tmp429 .core @silicon
  1215 jump *label327 greaterThanEq *tmp429 .targetSilicon
  1216 set *tmp419 false
  1217 jump *label320 always
-    * jump *label328 always
  1218 label *label327
  1219 label *label328
  1220 sensor *tmp432 .core @titanium
  1221 jump *label329 greaterThanEq *tmp432 .targetTitanium
  1222 set *tmp419 false
  1223 jump *label320 always
-    * jump *label330 always
  1224 label *label329
  1225 label *label330
  1226 sensor *tmp435 .core @metaglass
  1227 jump *label331 greaterThanEq *tmp435 .targetMetaglass
  1228 set *tmp419 false
  1229 jump *label320 always
-    * jump *label332 always
  1230 label *label331
  1231 label *label332
  1232 sensor *tmp438 .core @thorium
  1233 jump *label333 greaterThanEq *tmp438 .targetThorium
  1234 set *tmp419 false
  1235 jump *label320 always
-    * jump *label334 always
  1236 label *label333
  1237 label *label334
  1238 set *tmp419 true
 
  1310 label *label346
  1311 set :buildRemoteBlock*retval :buildBlock*retval
  1312 jump *label342 always
-    * jump *label344 always
  1313 label *label343
  1314 label *label344
  1315 set :buildRemoteBlock*retval false
 
  1413 jump *label363 notEqual *tmp477 @ore-coal
  1414 label *label364
  1415 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
-    * jump *label359 always
  1416 label *label363
  1417 label *label359
  1418 label *label358
 
  1501 write :setFlareTarget.2:target .controller ".flareTarget"
  1502 write :setFlareTarget.2:target .display ".flareTarget"
  1503 label *label380
-    * jump *label378 always
  1504 label *label377
  1505 label *label378
-    * jump *label375 always
  1506 label *label374
  1507 label *label375
-    * jump *label367 always
  1508 label *label366
  1509 label *label367
  1510 label *label365

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-9 instructions):
 
     4 set .smelter null
     5 set .titaniumDrill null
     6 set .unloader1 null
-    * set .kiln null
-    * set .thoriumDrill null
     7 set .thoriumContainer null
     8 set .thoriumGenerator null
     9 set .leadSurplus 0
 
    55 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
    56 label *label47
    57 set :buildFirstTitaniumDrill:cfg "w**5#-#####"
-    * set :meetTarget.1:cfg :buildFirstTitaniumDrill:cfg
+   58 set :meetTarget.1:cfg "w**5#-#####"
    59 setaddr :meetTarget.1*retaddr *label49 (h:*label49)
    60 call *label34 *invalid :meetTarget.1*retval (m:*label49) (h:*label49)
    61 label *label49
-    * write @titanium .display ".nextBlock"
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 2 .oreLocator ":findDrillLocation:size"
-    * write 4 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+   62 write @titanium processor1 ".nextBlock"
+   63 write .coreX processor4 ":findDrillLocation:x"
+   64 write .coreY processor4 ":findDrillLocation:y"
+   65 write @unit processor4 ":findDrillLocation:unit"
+   66 write @titanium processor4 ":findDrillLocation:item"
+   67 write @ore-titanium processor4 ":findDrillLocation:ore"
+   68 write 2 processor4 ":findDrillLocation:size"
+   69 write 4 processor4 ":findDrillLocation:limit"
+   70 write false processor4 ":findDrillLocation*finished"
+   71 write 1 processor4 "@counter"
    72 label *label50
    73 wait 1e-15
-    * read *tmp130 .oreLocator ":findDrillLocation*finished"
+   74 read *tmp130 processor4 ":findDrillLocation*finished"
    75 jump *label50 equal *tmp130 false
-    * read :buildFirstTitaniumDrill:dx .oreLocator ":findDrillLocation:dx"
-    * read :buildFirstTitaniumDrill:dy .oreLocator ":findDrillLocation:dy"
-    * read :buildFirstTitaniumDrill:result .oreLocator ":findDrillLocation*retval"
+   76 read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocation:dx"
+   77 read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocation:dy"
+   78 read :buildFirstTitaniumDrill:result processor4 ":findDrillLocation*retval"
    79 jump *label51 notEqual :buildFirstTitaniumDrill:result false
    80 set :error:error "Cannot locate spot for titanium drill"
    81 setaddr :error*retaddr *label53 (h:*label53)
 
    83 label *label53
    84 label *label51
    85 label *label52
-    * write @pneumatic-drill .display ".nextBlock"
-    * write @pneumatic-drill .blockBuilder ":buildBlockAt:block"
-    * write :buildFirstTitaniumDrill:dx .blockBuilder ":buildBlockAt:x"
-    * write :buildFirstTitaniumDrill:dy .blockBuilder ":buildBlockAt:y"
-    * write null .blockBuilder ":buildBlockAt:rotation"
-    * write 0 .blockBuilder ":buildBlockAt:config"
-    * write false .blockBuilder ":buildBlockAt*finished"
-    * write 1 .blockBuilder "@counter"
+   86 write @pneumatic-drill processor1 ".nextBlock"
+   87 write @pneumatic-drill processor5 ":buildBlockAt:block"
+   88 write :buildFirstTitaniumDrill:dx processor5 ":buildBlockAt:x"
+   89 write :buildFirstTitaniumDrill:dy processor5 ":buildBlockAt:y"
+   90 write null processor5 ":buildBlockAt:rotation"
+   91 write 0 processor5 ":buildBlockAt:config"
+   92 write false processor5 ":buildBlockAt*finished"
+   93 write 1 processor5 "@counter"
    94 label *label54
    95 wait 1e-15
-    * read *tmp139 .blockBuilder ":buildBlockAt*finished"
+   96 read *tmp139 processor5 ":buildBlockAt*finished"
    97 jump *label54 equal *tmp139 false
-    * read *tmp119 .blockBuilder ":buildBlockAt*retval"
+   98 read *tmp119 processor5 ":buildBlockAt*retval"
    99 jump *label48 always
-    * set *tmp119 null
   100 label *label48
   101 set .titaniumDrill *tmp119
-    * write .titaniumDrill .display ".titaniumDrill"
+  102 write *tmp119 processor1 ".titaniumDrill"
   103 set :buildBlockFromCfg.1:cfg "*,###A<###"
   104 setaddr :buildBlockFromCfg.1*retaddr *label55 (h:*label55)
   105 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label55) (h:*label55)
 
   120 call *label32 *invalid :buildBlockFromCfg*retval (m:*label58) (h:*label58)
   121 label *label58
   122 set .controller :buildBlockFromCfg*retval
-    * write .display .controller ".display"
-    * write .core .controller ".core"
-    * write bank1 .controller ".bank"
-    * write .battery .controller ".battery"
-    * write .generator .controller ".generator"
-    * write .smelter .controller ".smelter"
-    * write .press .controller ".press"
-    * write .unloader1 .controller ".unloader1"
+  123 write processor1 :buildBlockFromCfg*retval ".display"
+  124 write .core :buildBlockFromCfg*retval ".core"
+  125 write bank1 :buildBlockFromCfg*retval ".bank"
+  126 write .battery :buildBlockFromCfg*retval ".battery"
+  127 write .generator :buildBlockFromCfg*retval ".generator"
+  128 write .smelter :buildBlockFromCfg*retval ".smelter"
+  129 write .press :buildBlockFromCfg*retval ".press"
+  130 write .unloader1 :buildBlockFromCfg*retval ".unloader1"
   131 set :buildBlockFromCfg.1:cfg "g)'%)######"
   132 setaddr :buildBlockFromCfg.1*retaddr *label59 (h:*label59)
   133 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label59) (h:*label59)
 
   142 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
   143 label *label61
   144 set :factory :buildBlockFromCfg.1*retval
-    * write :factory .controller ".factory"
-    * write :factory .display ".airFactory"
+  145 write :buildBlockFromCfg.1*retval .controller ".factory"
+  146 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
   147 set :setFlareTarget:target 1
-    * write :setFlareTarget:target .controller ".flareTarget"
-    * write :setFlareTarget:target .display ".flareTarget"
+  148 write 1 .controller ".flareTarget"
+  149 write 1 processor1 ".flareTarget"
   150 label *label62
   151 set :setMonoTarget:target 3
-    * write :setMonoTarget:target .controller ".monoTarget"
-    * write :setMonoTarget:target .display ".monoTarget"
+  152 write 3 .controller ".monoTarget"
+  153 write 3 processor1 ".monoTarget"
   154 label *label63
   155 write 85 .controller ".pressTarget"
   156 write 150 .controller ".smelterTarget"
   157 write 30 .controller ".kilnTarget"
   158 set .leadSurplus 20
-    * set .siliconSurplus .leadSurplus
+  159 set .siliconSurplus 20
   160 setaddr :buildUnits*retaddr *label64 (h:*label64)
   161 call *label38 *invalid :buildUnits*retval (m:*label64) (h:*label64)
   162 label *label64
 
   187 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label73) (h:*label73)
   188 label *label73
   189 set .kiln :buildBlockFromCfg.1*retval
-    * write .kiln .controller ".kiln"
+  190 write :buildBlockFromCfg.1*retval .controller ".kiln"
   191 set :buildBlockFromCfg.1:cfg "z%-AAA##A##"
   192 setaddr :buildBlockFromCfg.1*retaddr *label74 (h:*label74)
   193 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label74) (h:*label74)
 
   229 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label82) (h:*label82)
   230 label *label82
   231 set :reconstructor :buildBlockFromCfg.1*retval
-    * write :reconstructor .controller ".reconstructor"
-    * write :reconstructor .display ".reconstructor"
+  232 write :buildBlockFromCfg.1*retval .controller ".reconstructor"
+  233 write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
   234 set :buildBlockFromCfg.1:cfg "l/-#U#A7###"
   235 setaddr :buildBlockFromCfg.1*retaddr *label83 (h:*label83)
   236 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label83) (h:*label83)
 
   241 set .siliconSurplus 1000
   242 set .metaglassSurplus 200
   243 set :setPolyTarget:target 4
-    * write :setPolyTarget:target .controller ".polyTarget"
-    * write :setPolyTarget:target .display ".polyTarget"
+  244 write 4 .controller ".polyTarget"
+  245 write 4 processor1 ".polyTarget"
   246 label *label85
   247 set :buildBlockFromCfg.1:cfg "%-)A<######"
   248 setaddr :buildBlockFromCfg.1*retaddr *label86 (h:*label86)
 
   267 jump *label89 always
   268 label *label91
   269 set :setFlareTarget.1:target 3
-    * write :setFlareTarget.1:target .controller ".flareTarget"
-    * write :setFlareTarget.1:target .display ".flareTarget"
+  270 write 3 .controller ".flareTarget"
+  271 write 3 processor1 ".flareTarget"
   272 label *label93
   273 label *label94
   274 read *tmp89 .controller ".flares"
 
   280 jump *label94 always
   281 label *label96
   282 set :setMonoTarget.1:target 8
-    * write :setMonoTarget.1:target .controller ".monoTarget"
-    * write :setMonoTarget.1:target .display ".monoTarget"
+  283 write 8 .controller ".monoTarget"
+  284 write 8 processor1 ".monoTarget"
   285 label *label98
   286 set :setPolyTarget.1:target 6
-    * write :setPolyTarget.1:target .controller ".polyTarget"
-    * write :setPolyTarget.1:target .display ".polyTarget"
+  287 write 6 .controller ".polyTarget"
+  288 write 6 processor1 ".polyTarget"
   289 label *label99
-    * write @ore-titanium .display ".nextBlock"
+  290 write @ore-titanium processor1 ".nextBlock"
   291 wait 0.000000001
   292 ubind @flare
-    * read *tmp51 .oreLocator ".locations"
+  293 read *tmp51 processor4 ".locations"
   294 set :buildTitaniumDrills:current *tmp51
-    * write .coreX .oreLocator ":findDrillLocation:x"
-    * write .coreY .oreLocator ":findDrillLocation:y"
-    * write @unit .oreLocator ":findDrillLocation:unit"
-    * write @titanium .oreLocator ":findDrillLocation:item"
-    * write @ore-titanium .oreLocator ":findDrillLocation:ore"
-    * write 4 .oreLocator ":findDrillLocation:size"
-    * write 1000000000 .oreLocator ":findDrillLocation:limit"
-    * write false .oreLocator ":findDrillLocation*finished"
-    * write 1 .oreLocator "@counter"
+  295 write .coreX processor4 ":findDrillLocation:x"
+  296 write .coreY processor4 ":findDrillLocation:y"
+  297 write @unit processor4 ":findDrillLocation:unit"
+  298 write @titanium processor4 ":findDrillLocation:item"
+  299 write @ore-titanium processor4 ":findDrillLocation:ore"
+  300 write 4 processor4 ":findDrillLocation:size"
+  301 write 1000000000 processor4 ":findDrillLocation:limit"
+  302 write false processor4 ":findDrillLocation*finished"
+  303 write 1 processor4 "@counter"
   304 ubind .builder
   305 set :buildTitaniumDrills:count 1
   306 set :buildTitaniumDrills:searching true
   307 label *label101
   308 jump *label103 equal :buildTitaniumDrills:searching false
-    * read *tmp179 .oreLocator ":findDrillLocation*finished"
+  309 read *tmp179 processor4 ":findDrillLocation*finished"
   310 op equal :buildTitaniumDrills:searching *tmp179 false
   311 label *label104
-    * read *tmp51 .oreLocator ".locations"
+  312 read *tmp51 processor4 ".locations"
   313 jump *label106 greaterThanEq :buildTitaniumDrills:current *tmp51
   314 op mul :buildTitaniumDrills:index :buildTitaniumDrills:current 4
   315 op add *tmp183 :buildTitaniumDrills:index 1
 
   331 op add *tmp196 :buildTitaniumDrills:x 1
   332 op sub *tmp197 :buildTitaniumDrills:y 1
   333 set :buildTitaniumDrill:x *tmp196
-    * set :buildTitaniumDrill:y *tmp197
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
+  334 set :buildTitaniumDrill:y *tmp195
+  335 set :buildTitaniumDrill:count :buildTitaniumDrill:count
   336 setaddr :buildTitaniumDrill*retaddr *label110 (h:*label110)
   337 call *label37 *invalid :buildTitaniumDrill*retval (m:*label110) (h:*label110)
   338 label *label110
   339 set :buildTitaniumDrills:count :buildTitaniumDrill:count
   340 op sub *tmp198 :buildTitaniumDrills:x 1
   341 op add *tmp199 :buildTitaniumDrills:y 1
-    * set :buildTitaniumDrill:x *tmp198
+  342 set :buildTitaniumDrill:x *tmp194
   343 set :buildTitaniumDrill:y *tmp199
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
+  344 set :buildTitaniumDrill:count :buildTitaniumDrill:count
   345 setaddr :buildTitaniumDrill*retaddr *label111 (h:*label111)
   346 call *label37 *invalid :buildTitaniumDrill*retval (m:*label111) (h:*label111)
   347 label *label111
   348 set :buildTitaniumDrills:count :buildTitaniumDrill:count
   349 op add *tmp200 :buildTitaniumDrills:x 1
   350 op add *tmp201 :buildTitaniumDrills:y 1
-    * set :buildTitaniumDrill:x *tmp200
-    * set :buildTitaniumDrill:y *tmp201
-    * set :buildTitaniumDrill:count :buildTitaniumDrills:count
+  351 set :buildTitaniumDrill:x *tmp196
+  352 set :buildTitaniumDrill:y *tmp199
+  353 set :buildTitaniumDrill:count :buildTitaniumDrill:count
   354 setaddr :buildTitaniumDrill*retaddr *label112 (h:*label112)
   355 call *label37 *invalid :buildTitaniumDrill*retval (m:*label112) (h:*label112)
   356 label *label112
 
   368 label *label102
   369 jump *label101 always
   370 label *label103
-    * write false .oreLocator ":stopLocation*finished"
-    * write 3 .oreLocator "@counter"
+  371 write false processor4 ":stopLocation*finished"
+  372 write 3 processor4 "@counter"
   373 label *label100
-    * write null .display ".nextBlock"
-    * write .coreX .oreLocator ":layoutThoriumDrill:x"
-    * write .coreY .oreLocator ":layoutThoriumDrill:y"
-    * write @unit .oreLocator ":layoutThoriumDrill:unit"
-    * write 7 .oreLocator ":layoutThoriumDrill:limit"
-    * write false .oreLocator ":layoutThoriumDrill*finished"
-    * write 2 .oreLocator "@counter"
+  374 write null processor1 ".nextBlock"
+  375 write .coreX processor4 ":layoutThoriumDrill:x"
+  376 write .coreY processor4 ":layoutThoriumDrill:y"
+  377 write @unit processor4 ":layoutThoriumDrill:unit"
+  378 write 7 processor4 ":layoutThoriumDrill:limit"
+  379 write false processor4 ":layoutThoriumDrill*finished"
+  380 write 2 processor4 "@counter"
   381 label *label116
   382 wait 1e-15
-    * read *tmp209 .oreLocator ":layoutThoriumDrill*finished"
+  383 read *tmp209 processor4 ":layoutThoriumDrill*finished"
   384 jump *label116 equal *tmp209 false
   385 set :meetTarget.1:cfg "x**F#AA7###"
   386 setaddr :meetTarget.1*retaddr *label117 (h:*label117)
 
   388 label *label117
   389 label *label118
   390 wait 1e-15
-    * read *tmp211 .oreLocator ":layoutThoriumDrill*finished"
+  391 read *tmp211 processor4 ":layoutThoriumDrill*finished"
   392 jump *label118 equal *tmp211 false
-    * read :buildThoriumDrill:result .oreLocator ":layoutThoriumDrill*retval"
+  393 read :buildThoriumDrill:result processor4 ":layoutThoriumDrill*retval"
   394 jump *label119 notEqual :buildThoriumDrill:result false
   395 set :error:error "Cannot locate spot for thorium drill"
   396 setaddr :error*retaddr *label121 (h:*label121)
 
   398 label *label121
   399 label *label119
   400 label *label120
-    * write @laser-drill .blockBuilder ":buildBlockAt:block"
-    * read *tmp52 .oreLocator ".drillX"
-    * write *tmp52 .blockBuilder ":buildBlockAt:x"
-    * read *tmp53 .oreLocator ".drillY"
-    * write *tmp53 .blockBuilder ":buildBlockAt:y"
-    * write null .blockBuilder ":buildBlockAt:rotation"
-    * write 0 .blockBuilder ":buildBlockAt:config"
-    * write false .blockBuilder ":buildBlockAt*finished"
-    * write 1 .blockBuilder "@counter"
+  401 write @laser-drill processor5 ":buildBlockAt:block"
+  402 read *tmp52 processor4 ".drillX"
+  403 write *tmp52 processor5 ":buildBlockAt:x"
+  404 read *tmp53 processor4 ".drillY"
+  405 write *tmp53 processor5 ":buildBlockAt:y"
+  406 write null processor5 ":buildBlockAt:rotation"
+  407 write 0 processor5 ":buildBlockAt:config"
+  408 write false processor5 ":buildBlockAt*finished"
+  409 write 1 processor5 "@counter"
   410 label *label122
   411 wait 1e-15
-    * read *tmp220 .blockBuilder ":buildBlockAt*finished"
+  412 read *tmp220 processor5 ":buildBlockAt*finished"
   413 jump *label122 equal *tmp220 false
-    * read .thoriumDrill .blockBuilder ":buildBlockAt*retval"
+  414 read .thoriumDrill processor5 ":buildBlockAt*retval"
   415 set :buildRemoteBlock:cfg "z%-AAA##A##"
-    * read :buildRemoteBlock:x .oreLocator ".water1X"
-    * read :buildRemoteBlock:y .oreLocator ".water1Y"
+  416 read :buildRemoteBlock:x processor4 ".water1X"
+  417 read :buildRemoteBlock:y processor4 ".water1Y"
   418 setaddr :buildRemoteBlock*retaddr *label123 (h:*label123)
   419 call *label31 *invalid :buildRemoteBlock*retval (m:*label123) (h:*label123)
   420 label *label123
-    * set :buildRemoteBlock:cfg "z%-AAA##A##"
-    * read :buildRemoteBlock:x .oreLocator ".water2X"
-    * read :buildRemoteBlock:y .oreLocator ".water2Y"
+  421 read :buildRemoteBlock:x processor4 ".water2X"
+  422 read :buildRemoteBlock:y processor4 ".water2Y"
   423 setaddr :buildRemoteBlock*retaddr *label124 (h:*label124)
   424 call *label31 *invalid :buildRemoteBlock*retval (m:*label124) (h:*label124)
   425 label *label124
   426 set :buildRemoteBlock:cfg "o%+FK<A####"
-    * read :buildRemoteBlock:x .oreLocator ".generatorX"
-    * read :buildRemoteBlock:y .oreLocator ".generatorY"
+  427 read :buildRemoteBlock:x processor4 ".generatorX"
+  428 read :buildRemoteBlock:y processor4 ".generatorY"
   429 setaddr :buildRemoteBlock*retaddr *label125 (h:*label125)
   430 call *label31 *invalid :buildRemoteBlock*retval (m:*label125) (h:*label125)
   431 label *label125
   432 set .thoriumGenerator :buildRemoteBlock*retval
   433 set :buildRemoteBlock:cfg "g)'%)######"
-    * read :buildRemoteBlock:x .oreLocator ".nodeX"
-    * read :buildRemoteBlock:y .oreLocator ".nodeY"
+  434 read :buildRemoteBlock:x processor4 ".nodeX"
+  435 read :buildRemoteBlock:y processor4 ".nodeY"
   436 setaddr :buildRemoteBlock*retaddr *label126 (h:*label126)
   437 call *label31 *invalid :buildRemoteBlock*retval (m:*label126) (h:*label126)
   438 label *label126
   439 set :buildRemoteBlock:cfg "r**#-#+####"
-    * read :buildRemoteBlock:x .oreLocator ".panelX"
-    * read :buildRemoteBlock:y .oreLocator ".panelY"
+  440 read :buildRemoteBlock:x processor4 ".panelX"
+  441 read :buildRemoteBlock:y processor4 ".panelY"
   442 setaddr :buildRemoteBlock*retaddr *label127 (h:*label127)
   443 call *label31 *invalid :buildRemoteBlock*retval (m:*label127) (h:*label127)
   444 label *label127
   445 set :buildRemoteBlock:cfg "k*/(7######"
-    * read :buildRemoteBlock:x .oreLocator ".batteryX"
-    * read :buildRemoteBlock:y .oreLocator ".batteryY"
+  446 read :buildRemoteBlock:x processor4 ".batteryX"
+  447 read :buildRemoteBlock:y processor4 ".batteryY"
   448 setaddr :buildRemoteBlock*retaddr *label128 (h:*label128)
   449 call *label31 *invalid :buildRemoteBlock*retval (m:*label128) (h:*label128)
   450 label *label128
   451 set :buildRemoteBlock:cfg "**#######"
-    * read :buildRemoteBlock:x .oreLocator ".containerX"
-    * read :buildRemoteBlock:y .oreLocator ".containerY"
+  452 read :buildRemoteBlock:x processor4 ".containerX"
+  453 read :buildRemoteBlock:y processor4 ".containerY"
   454 setaddr :buildRemoteBlock*retaddr *label129 (h:*label129)
   455 call *label31 *invalid :buildRemoteBlock*retval (m:*label129) (h:*label129)
   456 label *label129
   457 set .thoriumContainer :buildRemoteBlock*retval
-    * jump *label130 notEqual .thoriumContainer null
+  458 jump *label130 notEqual :buildRemoteBlock*retval null
   459 set .thoriumContainer .thoriumDrill
   460 label *label130
   461 label *label131
-    * write .thoriumDrill .display ".thoriumDrill"
-    * write .thoriumContainer .display ".thoriumContainer"
+  462 write .thoriumDrill processor1 ".thoriumDrill"
+  463 write .thoriumContainer processor1 ".thoriumContainer"
   464 label *label115
-    * write null .display ".nextBlock"
+  465 write null processor1 ".nextBlock"
   466 set :setMegaTarget:target 1
-    * write :setMegaTarget:target .controller ".megaTarget"
-    * write :setMegaTarget:target .display ".megaTarget"
+  467 write 1 .controller ".megaTarget"
+  468 write 1 processor1 ".megaTarget"
   469 label *label132
   470 label *label133
   471 read *tmp91 .controller ".polys"
 
   490 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label139) (h:*label139)
   491 label *label139
   492 set :multiReconstructor :buildBlockFromCfg.1*retval
-    * write :multiReconstructor .controller ".multiReconstructor"
-    * write :multiReconstructor .display ".multiReconstructor"
+  493 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
+  494 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
   495 setaddr :buildUnits*retaddr *label140 (h:*label140)
   496 call *label38 *invalid :buildUnits*retval (m:*label140) (h:*label140)
   497 label *label140
 
   654 label *label186
   655 set :mineOre:x :locateOre:x
   656 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+  657 set :moveToEmpty:x :locateOre:x
+  658 set :moveToEmpty:y :locateOre:y
   659 setaddr :moveToEmpty*retaddr *label187 (h:*label187)
   660 call *label12 *invalid :moveToEmpty*retval (m:*label187) (h:*label187)
   661 label *label187
 
   832 end
   833 label *label27
   834 set :unpackCfg:index 0
-    * set *tmp305 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  835 set *tmp305 0
+  836 op add :unpackCfg:index 0 1
   837 read *tmp306 :unpackCfg:cfg *tmp305
   838 op sub *tmp307 *tmp306 35
   839 lookup block :unpackCfg:type *tmp307
-    * set *tmp309 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  840 set *tmp309 1
+  841 op add :unpackCfg:index 1 1
   842 read *tmp310 :unpackCfg:cfg *tmp309
   843 op sub *tmp311 *tmp310 35
-    * op sub :unpackCfg:x *tmp311 7
-    * set *tmp313 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  844 op sub :unpackCfg:x *tmp310 42
+  845 set *tmp313 2
+  846 op add :unpackCfg:index 2 1
   847 read *tmp314 :unpackCfg:cfg *tmp313
   848 op sub *tmp315 *tmp314 35
-    * op sub :unpackCfg:y *tmp315 7
-    * set *tmp317 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  849 op sub :unpackCfg:y *tmp314 42
+  850 set *tmp317 3
+  851 op add :unpackCfg:index 3 1
   852 read *tmp318 :unpackCfg:cfg *tmp317
   853 op sub :unpackCfg:cu *tmp318 35
-    * set *tmp320 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  854 set *tmp320 4
+  855 op add :unpackCfg:index 4 1
   856 read *tmp321 :unpackCfg:cfg *tmp320
   857 op sub :unpackCfg:pb *tmp321 35
-    * set *tmp323 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  858 set *tmp323 5
+  859 op add :unpackCfg:index 5 1
   860 read *tmp324 :unpackCfg:cfg *tmp323
   861 op sub :unpackCfg:gr *tmp324 35
-    * set *tmp326 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  862 set *tmp326 6
+  863 op add :unpackCfg:index 6 1
   864 read *tmp327 :unpackCfg:cfg *tmp326
   865 op sub :unpackCfg:si *tmp327 35
-    * set *tmp329 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  866 set *tmp329 7
+  867 op add :unpackCfg:index 7 1
   868 read *tmp330 :unpackCfg:cfg *tmp329
   869 op sub :unpackCfg:ti *tmp330 35
-    * set *tmp332 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  870 set *tmp332 8
+  871 op add :unpackCfg:index 8 1
   872 read *tmp333 :unpackCfg:cfg *tmp332
   873 op sub :unpackCfg:mg *tmp333 35
-    * set *tmp335 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  874 set *tmp335 9
+  875 op add :unpackCfg:index 9 1
   876 read *tmp336 :unpackCfg:cfg *tmp335
   877 op sub :unpackCfg:th *tmp336 35
-    * set *tmp338 :unpackCfg:index
-    * op add :unpackCfg:index :unpackCfg:index 1
+  878 set *tmp338 10
+  879 op add :unpackCfg:index 10 1
   880 read *tmp339 :unpackCfg:cfg *tmp338
   881 op sub :unpackCfg:rotation *tmp339 35
   882 label *label230
 
  1010 label *label273
  1011 set :supplyBase0:titaniumTrigger *tmp375
  1012 sensor *tmp379 .titaniumDrill @titanium
-    * jump *label274 greaterThanEq *tmp379 :supplyBase0:titaniumTrigger
+ 1013 jump *label274 greaterThanEq *tmp379 *tmp375
  1014 jump *label276 notEqual :supplyBase0:supplied false
  1015 sensor *tmp384 .battery @totalPower
  1016 op mul *tmp385 .unloader1 .powerTarget
 
  1040 set *tmp394 @sand
  1041 label *label286
  1042 set :supplyBase0:ore *tmp394
-    * set :mineOre.1:ore :supplyBase0:ore
+ 1043 set :mineOre.1:ore *tmp394
  1044 setaddr :mineOre.1*retaddr *label287 (h:*label287)
  1045 call *label18 *invalid :mineOre.1*retval (m:*label287) (h:*label287)
  1046 label *label287
 
  1095 set *tmp407 @sand
  1096 label *label302
  1097 set :supplyBase0:ore.1 *tmp407
-    * set :mineOre.1:ore :supplyBase0:ore.1
+ 1098 set :mineOre.1:ore *tmp407
  1099 setaddr :mineOre.1*retaddr *label303 (h:*label303)
  1100 call *label18 *invalid :mineOre.1*retval (m:*label303) (h:*label303)
  1101 label *label303
 
  1183 op add *tmp414 :meetTarget:metaglass .metaglassSurplus
  1184 write *tmp414 .controller ".kilnTarget"
  1185 op add *tmp415 :meetTarget:lead .leadSurplus
-    * write *tmp415 .controller ".leadReserve"
+ 1186 write *tmp410 .controller ".leadReserve"
  1187 op sign *tmp416 :meetTarget:silicon
  1188 op mul *tmp417 *tmp416 20
  1189 op add *tmp418 :meetTarget:silicon *tmp417
 
  1233 label *label334
  1234 set *tmp419 true
  1235 jump *label320 always
-    * set *tmp419 null
  1236 label *label320
  1237 jump *label319 notEqual *tmp419 false
  1238 setaddr :supplyBase*retaddr *label335 (h:*label335)
 
  1269 jump *label341 equal *tmp462 false
  1270 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
  1271 jump *label339 always
-    * set :buildBlock*retval null
  1272 label *label339
  1273 return :buildBlock*retaddr
  1274 end
 
  1287 set :buildRemoteBlock:mg :unpackCfg:mg
  1288 set :buildRemoteBlock:th :unpackCfg:th
  1289 set :buildRemoteBlock:rotation :unpackCfg:rotation
-    * set :buildBlock:block :buildRemoteBlock:type
+ 1290 set :buildBlock:block :unpackCfg:type
  1291 set :buildBlock:x :buildRemoteBlock:x
  1292 set :buildBlock:y :buildRemoteBlock:y
-    * set :buildBlock:copper :buildRemoteBlock:cu
-    * set :buildBlock:lead :buildRemoteBlock:pb
-    * set :buildBlock:graphite :buildRemoteBlock:gr
-    * set :buildBlock:silicon :buildRemoteBlock:si
-    * set :buildBlock:titanium :buildRemoteBlock:ti
-    * set :buildBlock:metaglass :buildRemoteBlock:mg
-    * set :buildBlock:thorium :buildRemoteBlock:th
-    * set :buildBlock:rotation :buildRemoteBlock:rotation
+ 1293 set :buildBlock:copper :unpackCfg:cu
+ 1294 set :buildBlock:lead :unpackCfg:pb
+ 1295 set :buildBlock:graphite :unpackCfg:gr
+ 1296 set :buildBlock:silicon :unpackCfg:si
+ 1297 set :buildBlock:titanium :unpackCfg:ti
+ 1298 set :buildBlock:metaglass :unpackCfg:mg
+ 1299 set :buildBlock:thorium :unpackCfg:th
+ 1300 set :buildBlock:rotation :unpackCfg:rotation
  1301 set :buildBlock:config null
  1302 setaddr :buildBlock*retaddr *label346 (h:*label346)
  1303 call *label30 *invalid :buildBlock*retval (m:*label346) (h:*label346)
 
  1308 label *label344
  1309 set :buildRemoteBlock*retval false
  1310 jump *label342 always
-    * set :buildRemoteBlock*retval null
  1311 label *label342
  1312 return :buildRemoteBlock*retaddr
  1313 end
 
  1327 set :buildBlockFromCfg:mg :unpackCfg:mg
  1328 set :buildBlockFromCfg:th :unpackCfg:th
  1329 set :buildBlockFromCfg:rotation :unpackCfg:rotation
-    * op add *tmp466 .coreX :buildBlockFromCfg:x
-    * op add *tmp467 .coreY :buildBlockFromCfg:y
-    * set :buildBlock:block :buildBlockFromCfg:type
+ 1330 op add *tmp466 .coreX :unpackCfg:x
+ 1331 op add *tmp467 .coreY :unpackCfg:y
+ 1332 set :buildBlock:block :unpackCfg:type
  1333 set :buildBlock:x *tmp466
  1334 set :buildBlock:y *tmp467
-    * set :buildBlock:copper :buildBlockFromCfg:cu
-    * set :buildBlock:lead :buildBlockFromCfg:pb
-    * set :buildBlock:graphite :buildBlockFromCfg:gr
-    * set :buildBlock:silicon :buildBlockFromCfg:si
-    * set :buildBlock:titanium :buildBlockFromCfg:ti
-    * set :buildBlock:metaglass :buildBlockFromCfg:mg
-    * set :buildBlock:thorium :buildBlockFromCfg:th
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
+ 1335 set :buildBlock:copper :unpackCfg:cu
+ 1336 set :buildBlock:lead :unpackCfg:pb
+ 1337 set :buildBlock:graphite :unpackCfg:gr
+ 1338 set :buildBlock:silicon :unpackCfg:si
+ 1339 set :buildBlock:titanium :unpackCfg:ti
+ 1340 set :buildBlock:metaglass :unpackCfg:mg
+ 1341 set :buildBlock:thorium :unpackCfg:th
+ 1342 set :buildBlock:rotation :unpackCfg:rotation
  1343 set :buildBlock:config :buildBlockFromCfg:config
  1344 setaddr :buildBlock*retaddr *label349 (h:*label349)
  1345 call *label30 *invalid :buildBlock*retval (m:*label349) (h:*label349)
  1346 label *label349
  1347 set :buildBlockFromCfg*retval :buildBlock*retval
  1348 jump *label347 always
-    * set :buildBlockFromCfg*retval null
  1349 label *label347
  1350 return :buildBlockFromCfg*retaddr
  1351 end
 
  1372 set :meetTarget.1:ti :unpackCfg:ti
  1373 set :meetTarget.1:mg :unpackCfg:mg
  1374 set :meetTarget.1:th :unpackCfg:th
-    * set :meetTarget:block :meetTarget.1:type
-    * set :meetTarget:copper :meetTarget.1:cu
-    * set :meetTarget:lead :meetTarget.1:pb
-    * set :meetTarget:graphite :meetTarget.1:gr
-    * set :meetTarget:silicon :meetTarget.1:si
-    * set :meetTarget:titanium :meetTarget.1:ti
-    * set :meetTarget:metaglass :meetTarget.1:mg
-    * set :meetTarget:thorium :meetTarget.1:th
+ 1375 set :meetTarget:block :unpackCfg:type
+ 1376 set :meetTarget:copper :unpackCfg:cu
+ 1377 set :meetTarget:lead :unpackCfg:pb
+ 1378 set :meetTarget:graphite :unpackCfg:gr
+ 1379 set :meetTarget:silicon :unpackCfg:si
+ 1380 set :meetTarget:titanium :unpackCfg:ti
+ 1381 set :meetTarget:metaglass :unpackCfg:mg
+ 1382 set :meetTarget:thorium :unpackCfg:th
  1383 setaddr :meetTarget*retaddr *label354 (h:*label354)
  1384 call *label29 *invalid :meetTarget*retval (m:*label354) (h:*label354)
  1385 label *label354
 
  1389 label *label36
  1390 set :getFloor:x :titaniumDrillScore:x
  1391 set :getFloor:y :titaniumDrillScore:y
-    * ucontrol getBlock :getFloor:x :getFloor:y 0 0 :getFloor:floor
+ 1392 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y 0 0 :getFloor:floor
  1393 set *tmp477 :getFloor:floor
  1394 jump *label360 always
-    * set *tmp477 null
  1395 label *label360
-    * jump *label361 notEqual *tmp477 @ore-titanium
+ 1396 jump *label361 notEqual :getFloor:floor @ore-titanium
  1397 label *label362
  1398 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1399 jump *label359 always
  1400 label *label361
-    * jump *label364 equal *tmp477 @ore-copper
-    * jump *label364 equal *tmp477 @ore-lead
-    * jump *label364 equal *tmp477 @ore-scrap
-    * jump *label363 notEqual *tmp477 @ore-coal
+ 1401 jump *label364 equal :getFloor:floor @ore-copper
+ 1402 jump *label364 equal :getFloor:floor @ore-lead
+ 1403 jump *label364 equal :getFloor:floor @ore-scrap
+ 1404 jump *label363 notEqual :getFloor:floor @ore-coal
  1405 label *label364
  1406 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1407 label *label363
 
  1413 jump *label366 greaterThanEq :buildTitaniumDrill:count 8
  1414 set :moveTo.1:x :buildTitaniumDrill:x
  1415 set :moveTo.1:y :buildTitaniumDrill:y
-    * set *tmp485 :moveTo.1:x
-    * set *tmp486 :moveTo.1:y
-    * set :moveTo:x *tmp485
-    * set :moveTo:y *tmp486
+ 1416 set *tmp485 :buildTitaniumDrill:x
+ 1417 set *tmp486 :buildTitaniumDrill:y
+ 1418 set :moveTo:x :moveTo.1:x
+ 1419 set :moveTo:y :moveTo.1:y
  1420 set :moveTo:radius 6
  1421 setaddr :moveTo*retaddr *label369 (h:*label369)
  1422 call *label11 *invalid :moveTo*retval (m:*label369) (h:*label369)
 
  1489 jump *label379 equal *tmp509 false
  1490 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
  1491 set :setFlareTarget.2:target :buildTitaniumDrill:count
-    * write :setFlareTarget.2:target .controller ".flareTarget"
-    * write :setFlareTarget.2:target .display ".flareTarget"
+ 1492 write :buildTitaniumDrill:count .controller ".flareTarget"
+ 1493 write :buildTitaniumDrill:count .display ".flareTarget"
  1494 label *label380
  1495 label *label377
  1496 label *label378

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-72 instructions):
 
    23 label *label41
    24 set .display processor1
    25 set .flareController processor3
-    * set .oreLocator processor4
    26 set .blockBuilder processor5
    27 set :buildBlockFromCfg.1:cfg "#'+nA######"
    28 setaddr :buildBlockFromCfg.1*retaddr *label42 (h:*label42)
 
    53 setaddr :buildBlockFromCfg.1*retaddr *label47 (h:*label47)
    54 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label47) (h:*label47)
    55 label *label47
-    * set :buildFirstTitaniumDrill:cfg "w**5#-#####"
    56 set :meetTarget.1:cfg "w**5#-#####"
    57 setaddr :meetTarget.1*retaddr *label49 (h:*label49)
    58 call *label34 *invalid :meetTarget.1*retval (m:*label49) (h:*label49)
 
   139 setaddr :buildBlockFromCfg.1*retaddr *label61 (h:*label61)
   140 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label61) (h:*label61)
   141 label *label61
-    * set :factory :buildBlockFromCfg.1*retval
   142 write :buildBlockFromCfg.1*retval .controller ".factory"
   143 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
-    * set :setFlareTarget:target 1
   144 write 1 .controller ".flareTarget"
   145 write 1 processor1 ".flareTarget"
   146 label *label62
-    * set :setMonoTarget:target 3
   147 write 3 .controller ".monoTarget"
   148 write 3 processor1 ".monoTarget"
   149 label *label63
 
   181 setaddr :buildBlockFromCfg.1*retaddr *label73 (h:*label73)
   182 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label73) (h:*label73)
   183 label *label73
-    * set .kiln :buildBlockFromCfg.1*retval
   184 write :buildBlockFromCfg.1*retval .controller ".kiln"
   185 set :buildBlockFromCfg.1:cfg "z%-AAA##A##"
   186 setaddr :buildBlockFromCfg.1*retaddr *label74 (h:*label74)
 
   222 setaddr :buildBlockFromCfg.1*retaddr *label82 (h:*label82)
   223 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label82) (h:*label82)
   224 label *label82
-    * set :reconstructor :buildBlockFromCfg.1*retval
   225 write :buildBlockFromCfg.1*retval .controller ".reconstructor"
   226 write :buildBlockFromCfg.1*retval processor1 ".reconstructor"
   227 set :buildBlockFromCfg.1:cfg "l/-#U#A7###"
 
   233 label *label84
   234 set .siliconSurplus 1000
   235 set .metaglassSurplus 200
-    * set :setPolyTarget:target 4
   236 write 4 .controller ".polyTarget"
   237 write 4 processor1 ".polyTarget"
   238 label *label85
 
   258 label *label90
   259 jump *label89 always
   260 label *label91
-    * set :setFlareTarget.1:target 3
   261 write 3 .controller ".flareTarget"
   262 write 3 processor1 ".flareTarget"
   263 label *label93
 
   270 label *label95
   271 jump *label94 always
   272 label *label96
-    * set :setMonoTarget.1:target 8
   273 write 8 .controller ".monoTarget"
   274 write 8 processor1 ".monoTarget"
   275 label *label98
-    * set :setPolyTarget.1:target 6
   276 write 6 .controller ".polyTarget"
   277 write 6 processor1 ".polyTarget"
   278 label *label99
 
   316 setaddr :buildTitaniumDrill*retaddr *label109 (h:*label109)
   317 call *label37 *invalid :buildTitaniumDrill*retval (m:*label109) (h:*label109)
   318 label *label109
-    * set :buildTitaniumDrills:count :buildTitaniumDrill:count
   319 op add *tmp196 :buildTitaniumDrills:x 1
-    * op sub *tmp197 :buildTitaniumDrills:y 1
   320 set :buildTitaniumDrill:x *tmp196
   321 set :buildTitaniumDrill:y *tmp195
   322 set :buildTitaniumDrill:count :buildTitaniumDrill:count
   323 setaddr :buildTitaniumDrill*retaddr *label110 (h:*label110)
   324 call *label37 *invalid :buildTitaniumDrill*retval (m:*label110) (h:*label110)
   325 label *label110
-    * set :buildTitaniumDrills:count :buildTitaniumDrill:count
-    * op sub *tmp198 :buildTitaniumDrills:x 1
   326 op add *tmp199 :buildTitaniumDrills:y 1
   327 set :buildTitaniumDrill:x *tmp194
   328 set :buildTitaniumDrill:y *tmp199
 
   330 setaddr :buildTitaniumDrill*retaddr *label111 (h:*label111)
   331 call *label37 *invalid :buildTitaniumDrill*retval (m:*label111) (h:*label111)
   332 label *label111
-    * set :buildTitaniumDrills:count :buildTitaniumDrill:count
-    * op add *tmp200 :buildTitaniumDrills:x 1
-    * op add *tmp201 :buildTitaniumDrills:y 1
   333 set :buildTitaniumDrill:x *tmp196
   334 set :buildTitaniumDrill:y *tmp199
   335 set :buildTitaniumDrill:count :buildTitaniumDrill:count
 
   445 write .thoriumContainer processor1 ".thoriumContainer"
   446 label *label115
   447 write null processor1 ".nextBlock"
-    * set :setMegaTarget:target 1
   448 write 1 .controller ".megaTarget"
   449 write 1 processor1 ".megaTarget"
   450 label *label132
 
   470 setaddr :buildBlockFromCfg.1*retaddr *label139 (h:*label139)
   471 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label139) (h:*label139)
   472 label *label139
-    * set :multiReconstructor :buildBlockFromCfg.1*retval
   473 write :buildBlockFromCfg.1*retval .controller ".multiReconstructor"
   474 write :buildBlockFromCfg.1*retval processor1 ".multiReconstructor"
   475 setaddr :buildUnits*retaddr *label140 (h:*label140)
 
   811 return :supplyBlockFromCore*retaddr
   812 end
   813 label *label27
-    * set :unpackCfg:index 0
   814 set *tmp305 0
-    * op add :unpackCfg:index 0 1
-    * read *tmp306 :unpackCfg:cfg *tmp305
+  815 read *tmp306 :unpackCfg:cfg 0
   816 op sub *tmp307 *tmp306 35
   817 lookup block :unpackCfg:type *tmp307
   818 set *tmp309 1
-    * op add :unpackCfg:index 1 1
-    * read *tmp310 :unpackCfg:cfg *tmp309
-    * op sub *tmp311 *tmp310 35
+  819 read *tmp310 :unpackCfg:cfg 1
   820 op sub :unpackCfg:x *tmp310 42
   821 set *tmp313 2
-    * op add :unpackCfg:index 2 1
-    * read *tmp314 :unpackCfg:cfg *tmp313
-    * op sub *tmp315 *tmp314 35
+  822 read *tmp314 :unpackCfg:cfg 2
   823 op sub :unpackCfg:y *tmp314 42
   824 set *tmp317 3
-    * op add :unpackCfg:index 3 1
-    * read *tmp318 :unpackCfg:cfg *tmp317
+  825 read *tmp318 :unpackCfg:cfg 3
   826 op sub :unpackCfg:cu *tmp318 35
   827 set *tmp320 4
-    * op add :unpackCfg:index 4 1
-    * read *tmp321 :unpackCfg:cfg *tmp320
+  828 read *tmp321 :unpackCfg:cfg 4
   829 op sub :unpackCfg:pb *tmp321 35
   830 set *tmp323 5
-    * op add :unpackCfg:index 5 1
-    * read *tmp324 :unpackCfg:cfg *tmp323
+  831 read *tmp324 :unpackCfg:cfg 5
   832 op sub :unpackCfg:gr *tmp324 35
   833 set *tmp326 6
-    * op add :unpackCfg:index 6 1
-    * read *tmp327 :unpackCfg:cfg *tmp326
+  834 read *tmp327 :unpackCfg:cfg 6
   835 op sub :unpackCfg:si *tmp327 35
   836 set *tmp329 7
-    * op add :unpackCfg:index 7 1
-    * read *tmp330 :unpackCfg:cfg *tmp329
+  837 read *tmp330 :unpackCfg:cfg 7
   838 op sub :unpackCfg:ti *tmp330 35
   839 set *tmp332 8
-    * op add :unpackCfg:index 8 1
-    * read *tmp333 :unpackCfg:cfg *tmp332
+  840 read *tmp333 :unpackCfg:cfg 8
   841 op sub :unpackCfg:mg *tmp333 35
   842 set *tmp335 9
-    * op add :unpackCfg:index 9 1
-    * read *tmp336 :unpackCfg:cfg *tmp335
+  843 read *tmp336 :unpackCfg:cfg 9
   844 op sub :unpackCfg:th *tmp336 35
   845 set *tmp338 10
-    * op add :unpackCfg:index 10 1
-    * read *tmp339 :unpackCfg:cfg *tmp338
+  846 read *tmp339 :unpackCfg:cfg 10
   847 op sub :unpackCfg:rotation *tmp339 35
   848 label *label230
   849 return :unpackCfg*retaddr
 
   974 label *label272
   975 set *tmp375 100
   976 label *label273
-    * set :supplyBase0:titaniumTrigger *tmp375
   977 sensor *tmp379 .titaniumDrill @titanium
   978 jump *label274 greaterThanEq *tmp379 *tmp375
   979 jump *label276 notEqual :supplyBase0:supplied false
 
  1004 label *label285
  1005 set *tmp394 @sand
  1006 label *label286
-    * set :supplyBase0:ore *tmp394
  1007 set :mineOre.1:ore *tmp394
  1008 setaddr :mineOre.1*retaddr *label287 (h:*label287)
  1009 call *label18 *invalid :mineOre.1*retval (m:*label287) (h:*label287)
 
  1058 label *label301
  1059 set *tmp407 @sand
  1060 label *label302
-    * set :supplyBase0:ore.1 *tmp407
  1061 set :mineOre.1:ore *tmp407
  1062 setaddr :mineOre.1*retaddr *label303 (h:*label303)
  1063 call *label18 *invalid :mineOre.1*retval (m:*label303) (h:*label303)
 
  1145 write *tmp413 .controller ".smelterTarget"
  1146 op add *tmp414 :meetTarget:metaglass .metaglassSurplus
  1147 write *tmp414 .controller ".kilnTarget"
-    * op add *tmp415 :meetTarget:lead .leadSurplus
  1148 write *tmp410 .controller ".leadReserve"
  1149 op sign *tmp416 :meetTarget:silicon
  1150 op mul *tmp417 *tmp416 20
 
  1240 setaddr :unpackCfg*retaddr *label345 (h:*label345)
  1241 call *label27 *invalid :unpackCfg*retval (m:*label345) (h:*label345)
  1242 label *label345
-    * set :buildRemoteBlock:type :unpackCfg:type
-    * set :buildRemoteBlock:cu :unpackCfg:cu
-    * set :buildRemoteBlock:pb :unpackCfg:pb
-    * set :buildRemoteBlock:gr :unpackCfg:gr
-    * set :buildRemoteBlock:si :unpackCfg:si
-    * set :buildRemoteBlock:ti :unpackCfg:ti
-    * set :buildRemoteBlock:mg :unpackCfg:mg
-    * set :buildRemoteBlock:th :unpackCfg:th
-    * set :buildRemoteBlock:rotation :unpackCfg:rotation
  1243 set :buildBlock:block :unpackCfg:type
  1244 set :buildBlock:x :buildRemoteBlock:x
  1245 set :buildBlock:y :buildRemoteBlock:y
 
  1269 setaddr :unpackCfg*retaddr *label348 (h:*label348)
  1270 call *label27 *invalid :unpackCfg*retval (m:*label348) (h:*label348)
  1271 label *label348
-    * set :buildBlockFromCfg:type :unpackCfg:type
-    * set :buildBlockFromCfg:x :unpackCfg:x
-    * set :buildBlockFromCfg:y :unpackCfg:y
-    * set :buildBlockFromCfg:cu :unpackCfg:cu
-    * set :buildBlockFromCfg:pb :unpackCfg:pb
-    * set :buildBlockFromCfg:gr :unpackCfg:gr
-    * set :buildBlockFromCfg:si :unpackCfg:si
-    * set :buildBlockFromCfg:ti :unpackCfg:ti
-    * set :buildBlockFromCfg:mg :unpackCfg:mg
-    * set :buildBlockFromCfg:th :unpackCfg:th
-    * set :buildBlockFromCfg:rotation :unpackCfg:rotation
  1272 op add *tmp466 .coreX :unpackCfg:x
  1273 op add *tmp467 .coreY :unpackCfg:y
  1274 set :buildBlock:block :unpackCfg:type
 
  1306 setaddr :unpackCfg*retaddr *label353 (h:*label353)
  1307 call *label27 *invalid :unpackCfg*retval (m:*label353) (h:*label353)
  1308 label *label353
-    * set :meetTarget.1:type :unpackCfg:type
-    * set :meetTarget.1:cu :unpackCfg:cu
-    * set :meetTarget.1:pb :unpackCfg:pb
-    * set :meetTarget.1:gr :unpackCfg:gr
-    * set :meetTarget.1:si :unpackCfg:si
-    * set :meetTarget.1:ti :unpackCfg:ti
-    * set :meetTarget.1:mg :unpackCfg:mg
-    * set :meetTarget.1:th :unpackCfg:th
  1309 set :meetTarget:block :unpackCfg:type
  1310 set :meetTarget:copper :unpackCfg:cu
  1311 set :meetTarget:lead :unpackCfg:pb
 
  1321 return :meetTarget.1*retaddr
  1322 end
  1323 label *label36
-    * set :getFloor:x :titaniumDrillScore:x
-    * set :getFloor:y :titaniumDrillScore:y
  1324 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y 0 0 :getFloor:floor
-    * set *tmp477 :getFloor:floor
  1325 jump *label360 always
  1326 label *label360
  1327 jump *label361 notEqual :getFloor:floor @ore-titanium
 
  1344 jump *label366 greaterThanEq :buildTitaniumDrill:count 8
  1345 set :moveTo.1:x :buildTitaniumDrill:x
  1346 set :moveTo.1:y :buildTitaniumDrill:y
-    * set *tmp485 :buildTitaniumDrill:x
-    * set *tmp486 :buildTitaniumDrill:y
-    * set :moveTo:x :moveTo.1:x
-    * set :moveTo:y :moveTo.1:y
+ 1347 set :moveTo:x :buildTitaniumDrill:x
+ 1348 set :moveTo:y :buildTitaniumDrill:y
  1349 set :moveTo:radius 6
  1350 setaddr :moveTo*retaddr *label369 (h:*label369)
  1351 call *label11 *invalid :moveTo*retval (m:*label369) (h:*label369)
 
  1417 read *tmp509 .flareController ":addTitaniumDrill*finished"
  1418 jump *label379 equal *tmp509 false
  1419 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
-    * set :setFlareTarget.2:target :buildTitaniumDrill:count
  1420 write :buildTitaniumDrill:count .controller ".flareTarget"
  1421 write :buildTitaniumDrill:count .display ".flareTarget"
  1422 label *label380

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-13 instructions):
 
   811 return :supplyBlockFromCore*retaddr
   812 end
   813 label *label27
-    * set *tmp305 0
   814 read *tmp306 :unpackCfg:cfg 0
   815 op sub *tmp307 *tmp306 35
   816 lookup block :unpackCfg:type *tmp307
-    * set *tmp309 1
   817 read *tmp310 :unpackCfg:cfg 1
   818 op sub :unpackCfg:x *tmp310 42
-    * set *tmp313 2
   819 read *tmp314 :unpackCfg:cfg 2
   820 op sub :unpackCfg:y *tmp314 42
-    * set *tmp317 3
   821 read *tmp318 :unpackCfg:cfg 3
   822 op sub :unpackCfg:cu *tmp318 35
-    * set *tmp320 4
   823 read *tmp321 :unpackCfg:cfg 4
   824 op sub :unpackCfg:pb *tmp321 35
-    * set *tmp323 5
   825 read *tmp324 :unpackCfg:cfg 5
   826 op sub :unpackCfg:gr *tmp324 35
-    * set *tmp326 6
   827 read *tmp327 :unpackCfg:cfg 6
   828 op sub :unpackCfg:si *tmp327 35
-    * set *tmp329 7
   829 read *tmp330 :unpackCfg:cfg 7
   830 op sub :unpackCfg:ti *tmp330 35
-    * set *tmp332 8
   831 read *tmp333 :unpackCfg:cfg 8
   832 op sub :unpackCfg:mg *tmp333 35
-    * set *tmp335 9
   833 read *tmp336 :unpackCfg:cfg 9
   834 op sub :unpackCfg:th *tmp336 35
-    * set *tmp338 10
   835 read *tmp339 :unpackCfg:cfg 10
   836 op sub :unpackCfg:rotation *tmp339 35
   837 label *label230
 
  1331 end
  1332 label *label37
  1333 jump *label366 greaterThanEq :buildTitaniumDrill:count 8
-    * set :moveTo.1:x :buildTitaniumDrill:x
-    * set :moveTo.1:y :buildTitaniumDrill:y
  1334 set :moveTo:x :buildTitaniumDrill:x
  1335 set :moveTo:y :buildTitaniumDrill:y
  1336 set :moveTo:radius 6

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
   517 setaddr :status3*retaddr *label151 (h:*label151)
   518 call *label8 *invalid :status3*retval (m:*label151) (h:*label151)
   519 label *label151
+  520 op sub *tmp237 :moveTo:radius 0.5
   521 label *label152
   522 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp235
   523 jump *label154 notEqual *tmp235 false
-    * op sub *tmp237 :moveTo:radius 0.5
   524 ucontrol approach :moveTo:x :moveTo:y *tmp237
   525 label *label153
   526 jump *label152 always

Modifications by Iterated phase, Loop Optimization, pass 1, iteration 1 (-1 instructions):
 
   294 set :buildTitaniumDrills:count 1
   295 set :buildTitaniumDrills:searching true
   296 label *label101
-    * jump *label103 equal :buildTitaniumDrills:searching false
+  297 label *label383
   298 read *tmp179 processor4 ":findDrillLocation*finished"
   299 op equal :buildTitaniumDrills:searching *tmp179 false
   300 label *label104
 
   348 label *label113
   349 label *label114
   350 label *label102
-    * jump *label101 always
+  351 jump *label383 notEqual :buildTitaniumDrills:searching false
   352 label *label103
   353 write false processor4 ":stopLocation*finished"
   354 write 3 processor4 "@counter"

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-2 instructions):
 
   954 label *label267
   955 label *label248
   956 label *label249
+  957 set *tmp375 100
   958 sensor *tmp373 .core @titanium
-    * jump *label272 greaterThanEq *tmp373 .targetTitanium
+  959 jump *label273 greaterThanEq *tmp373 .targetTitanium
   960 sensor *tmp376 .core @titanium
   961 op sub *tmp377 .targetTitanium *tmp376
   962 op min *tmp375 7 *tmp377
   963 jump *label273 always
-    * label *label272
-    * set *tmp375 100
   964 label *label273
   965 sensor *tmp379 .titaniumDrill @titanium
   966 jump *label274 greaterThanEq *tmp379 *tmp375
 
   986 label *label284
   987 sensor :supplyBase0:coal .core @coal
   988 sensor :supplyBase0:sand .core @sand
-    * jump *label285 greaterThanEq :supplyBase0:coal :supplyBase0:sand
-    * set *tmp394 @coal
+  989 set :mineOre.1:ore @sand
+  990 jump *label286 greaterThanEq :supplyBase0:coal :supplyBase0:sand
+  991 set :mineOre.1:ore @coal
   992 jump *label286 always
-    * label *label285
-    * set *tmp394 @sand
   993 label *label286
-    * set :mineOre.1:ore *tmp394
   994 setaddr :mineOre.1*retaddr *label287 (h:*label287)
   995 call *label18 *invalid :mineOre.1*retval (m:*label287) (h:*label287)
   996 label *label287
 
  1038 label *label300
  1039 sensor :supplyBase0:coal.1 .core @coal
  1040 sensor :supplyBase0:sand.1 .core @sand
-    * jump *label301 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
-    * set *tmp407 @coal
+ 1041 set :mineOre.1:ore @sand
+ 1042 jump *label302 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
+ 1043 set :mineOre.1:ore @coal
  1044 jump *label302 always
-    * label *label301
-    * set *tmp407 @sand
  1045 label *label302
-    * set :mineOre.1:ore *tmp407
  1046 setaddr :mineOre.1*retaddr *label303 (h:*label303)
  1047 call *label18 *invalid :mineOre.1*retval (m:*label303) (h:*label303)
  1048 label *label303

Modifications by Unroll iteration loop at CoreBuilder.mnd:230:5 (-2 instructions):
 
  1073 end
  1074 label *label29
  1075 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp408 *label310
-    * jump *label307 always
-    * multilabel *label310 (m:marker0)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp408 *label311
-    * jump *label307 always
-    * multilabel *label311 (m:marker0)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp408 *label312
-    * jump *label307 always
-    * multilabel *label312 (m:marker0)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp408 *label313
-    * jump *label307 always
-    * multilabel *label313 (m:marker0)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp408 *label314
-    * jump *label307 always
-    * multilabel *label314 (m:marker0)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp408 *label315
-    * jump *label307 always
-    * multilabel *label315 (m:marker0)
-    * set :meetTarget:t :meetTarget:thorium
-    * setaddr *tmp408 *label316
-    * label *label307
-    * op sign *tmp409 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp409
-    * label *label308
-    * multijump *tmp408 0 0 (m:marker0)
-    * multilabel *label316 (m:marker0)
-    * label *label309
+ 1076 set :meetTarget:t :meetTarget:copper
+ 1077 label *label384
+ 1078 op sign *tmp409 :meetTarget:t
+ 1079 op add :meetTarget:count :meetTarget:count *tmp409
+ 1080 label *label385
+ 1081 set :meetTarget:t :meetTarget:lead
+ 1082 label *label388
+ 1083 op sign *tmp409 :meetTarget:t
+ 1084 op add :meetTarget:count :meetTarget:count *tmp409
+ 1085 label *label389
+ 1086 set :meetTarget:t :meetTarget:graphite
+ 1087 label *label392
+ 1088 op sign *tmp409 :meetTarget:t
+ 1089 op add :meetTarget:count :meetTarget:count *tmp409
+ 1090 label *label393
+ 1091 set :meetTarget:t :meetTarget:silicon
+ 1092 label *label396
+ 1093 op sign *tmp409 :meetTarget:t
+ 1094 op add :meetTarget:count :meetTarget:count *tmp409
+ 1095 label *label397
+ 1096 set :meetTarget:t :meetTarget:titanium
+ 1097 label *label400
+ 1098 op sign *tmp409 :meetTarget:t
+ 1099 op add :meetTarget:count :meetTarget:count *tmp409
+ 1100 label *label401
+ 1101 set :meetTarget:t :meetTarget:metaglass
+ 1102 label *label404
+ 1103 op sign *tmp409 :meetTarget:t
+ 1104 op add :meetTarget:count :meetTarget:count *tmp409
+ 1105 label *label405
+ 1106 set :meetTarget:t :meetTarget:thorium
+ 1107 label *label408
+ 1108 op sign *tmp409 :meetTarget:t
+ 1109 op add :meetTarget:count :meetTarget:count *tmp409
+ 1110 label *label409
+ 1111 label *label309
  1112 write :meetTarget:count .display ".totalTargets"
  1113 write :meetTarget:block .display ".nextBlock"
  1114 write :meetTarget:copper .display ".targetCopper"

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-1 instructions):
 
   292 write 1 processor4 "@counter"
   293 ubind .builder
   294 set :buildTitaniumDrills:count 1
-    * set :buildTitaniumDrills:searching true
   295 label *label101
   296 label *label383
   297 read *tmp179 processor4 ":findDrillLocation*finished"
 
  1074 set :meetTarget:count 0
  1075 set :meetTarget:t :meetTarget:copper
  1076 label *label384
-    * op sign *tmp409 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp409
+ 1077 op sign *tmp409 :meetTarget:copper
+ 1078 op add :meetTarget:count 0 *tmp409
  1079 label *label385
  1080 set :meetTarget:t :meetTarget:lead
  1081 label *label388
-    * op sign *tmp409 :meetTarget:t
+ 1082 op sign *tmp409 :meetTarget:lead
  1083 op add :meetTarget:count :meetTarget:count *tmp409
  1084 label *label389
  1085 set :meetTarget:t :meetTarget:graphite
  1086 label *label392
-    * op sign *tmp409 :meetTarget:t
+ 1087 op sign *tmp409 :meetTarget:graphite
  1088 op add :meetTarget:count :meetTarget:count *tmp409
  1089 label *label393
  1090 set :meetTarget:t :meetTarget:silicon
  1091 label *label396
-    * op sign *tmp409 :meetTarget:t
+ 1092 op sign *tmp409 :meetTarget:silicon
  1093 op add :meetTarget:count :meetTarget:count *tmp409
  1094 label *label397
  1095 set :meetTarget:t :meetTarget:titanium
  1096 label *label400
-    * op sign *tmp409 :meetTarget:t
+ 1097 op sign *tmp409 :meetTarget:titanium
  1098 op add :meetTarget:count :meetTarget:count *tmp409
  1099 label *label401
  1100 set :meetTarget:t :meetTarget:metaglass
  1101 label *label404
-    * op sign *tmp409 :meetTarget:t
+ 1102 op sign *tmp409 :meetTarget:metaglass
  1103 op add :meetTarget:count :meetTarget:count *tmp409
  1104 label *label405
  1105 set :meetTarget:t :meetTarget:thorium
  1106 label *label408
-    * op sign *tmp409 :meetTarget:t
+ 1107 op sign *tmp409 :meetTarget:thorium
  1108 op add :meetTarget:count :meetTarget:count *tmp409
  1109 label *label409
  1110 label *label309

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
  1071 return :supplyBase*retaddr
  1072 end
  1073 label *label29
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
  1074 label *label384
  1075 op sign *tmp409 :meetTarget:copper
  1076 op add :meetTarget:count 0 *tmp409
  1077 label *label385
-    * set :meetTarget:t :meetTarget:lead
  1078 label *label388
  1079 op sign *tmp409 :meetTarget:lead
  1080 op add :meetTarget:count :meetTarget:count *tmp409
  1081 label *label389
-    * set :meetTarget:t :meetTarget:graphite
  1082 label *label392
  1083 op sign *tmp409 :meetTarget:graphite
  1084 op add :meetTarget:count :meetTarget:count *tmp409
  1085 label *label393
-    * set :meetTarget:t :meetTarget:silicon
  1086 label *label396
  1087 op sign *tmp409 :meetTarget:silicon
  1088 op add :meetTarget:count :meetTarget:count *tmp409
  1089 label *label397
-    * set :meetTarget:t :meetTarget:titanium
  1090 label *label400
  1091 op sign *tmp409 :meetTarget:titanium
  1092 op add :meetTarget:count :meetTarget:count *tmp409
  1093 label *label401
-    * set :meetTarget:t :meetTarget:metaglass
  1094 label *label404
  1095 op sign *tmp409 :meetTarget:metaglass
  1096 op add :meetTarget:count :meetTarget:count *tmp409
  1097 label *label405
-    * set :meetTarget:t :meetTarget:thorium
  1098 label *label408
  1099 op sign *tmp409 :meetTarget:thorium
  1100 op add :meetTarget:count :meetTarget:count *tmp409

Modifications by Inline function 'status3' defined at Actions.mnd:17:1 (-7 instructions):
 
   494 label *label146
   495 return :status2*retaddr
   496 end
-    * label *label8
-    * write :status3:text .display ".status3"
-    * label *label147
-    * return :status3*retaddr
-    * end
   497 label *label9
   498 write :transportStatus:target .display ".transportTarget"
   499 write :transportStatus:item .display ".transportItem"
 
   508 end
   509 label *label11
   510 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label151 (h:*label151)
-    * call *label8 *invalid :status3*retval (m:*label151) (h:*label151)
-    * label *label151
+  511 label *label413
+  512 write :status3:text .display ".status3"
+  513 label *label414
   514 op sub *tmp237 :moveTo:radius 0.5
   515 label *label152
   516 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp235
 
   524 end
   525 label *label12
   526 set :status3:text "Moving..."
-    * setaddr :status3*retaddr *label156 (h:*label156)
-    * call *label8 *invalid :status3*retval (m:*label156) (h:*label156)
-    * label *label156
+  527 label *label415
+  528 write :status3:text .display ".status3"
+  529 label *label416
   530 label *label157
   531 sensor *tmp238 @unit @firstItem
   532 jump *label160 equal *tmp238 null
 
   566 end
   567 label *label15
   568 set :status3:text "Depositing..."
-    * setaddr :status3*retaddr *label169 (h:*label169)
-    * call *label8 *invalid :status3*retval (m:*label169) (h:*label169)
-    * label *label169
+  569 label *label417
+  570 write :status3:text .display ".status3"
+  571 label *label418
   572 sensor *tmp247 @unit @firstItem
   573 jump *label170 notEqual *tmp247 :depositItems:item
   574 set :moveToBlock:block :depositItems:block
 
   641 label *label188
   642 label *label189
   643 set :status3:text "Mining..."
-    * setaddr :status3*retaddr *label191 (h:*label191)
-    * call *label8 *invalid :status3*retval (m:*label191) (h:*label191)
-    * label *label191
+  644 label *label419
+  645 write :status3:text .display ".status3"
+  646 label *label420
   647 op add :mineOre:stop @second 10
   648 label *label192
   649 sensor :mineOre:item @unit @firstItem

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   509 label *label11
   510 set :status3:text "Moving..."
   511 label *label413
-    * write :status3:text .display ".status3"
+  512 write "Moving..." .display ".status3"
   513 label *label414
   514 op sub *tmp237 :moveTo:radius 0.5
   515 label *label152
 
   525 label *label12
   526 set :status3:text "Moving..."
   527 label *label415
-    * write :status3:text .display ".status3"
+  528 write "Moving..." .display ".status3"
   529 label *label416
   530 label *label157
   531 sensor *tmp238 @unit @firstItem
 
   567 label *label15
   568 set :status3:text "Depositing..."
   569 label *label417
-    * write :status3:text .display ".status3"
+  570 write "Depositing..." .display ".status3"
   571 label *label418
   572 sensor *tmp247 @unit @firstItem
   573 jump *label170 notEqual *tmp247 :depositItems:item
 
   642 label *label189
   643 set :status3:text "Mining..."
   644 label *label419
-    * write :status3:text .display ".status3"
+  645 write "Mining..." .display ".status3"
   646 label *label420
   647 op add :mineOre:stop @second 10
   648 label *label192

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-4 instructions):
 
   507 return :error*retaddr
   508 end
   509 label *label11
-    * set :status3:text "Moving..."
   510 label *label413
   511 write "Moving..." .display ".status3"
   512 label *label414
 
   522 return :moveTo*retaddr
   523 end
   524 label *label12
-    * set :status3:text "Moving..."
   525 label *label415
   526 write "Moving..." .display ".status3"
   527 label *label416
 
   563 return :moveToBlock*retaddr
   564 end
   565 label *label15
-    * set :status3:text "Depositing..."
   566 label *label417
   567 write "Depositing..." .display ".status3"
   568 label *label418
 
   637 label *label190
   638 label *label188
   639 label *label189
-    * set :status3:text "Mining..."
   640 label *label419
   641 write "Mining..." .display ".status3"
   642 label *label420

Modifications by Inline function 'status1' defined at Actions.mnd:7:1 (-16 instructions):
 
   482 jump *label141 always
   483 label *label143
   484 end
-    * label *label6
-    * write :status1:text .display ".status1"
-    * label *label145
-    * return :status1*retaddr
-    * end
   485 label *label7
   486 write :status2:text .display ".status2"
   487 write :status2:item .display ".item2"
 
   837 label *label233
   838 jump *label236 equal .thoriumContainer false
   839 set :status1:text "Phase 2: servicing thorium drill"
-    * setaddr :status1*retaddr *label239 (h:*label239)
-    * call *label6 *invalid :status1*retval (m:*label239) (h:*label239)
-    * label *label239
+  840 label *label421
+  841 write :status1:text .display ".status1"
+  842 label *label422
   843 set :supplyBlockFromCore:target .thoriumGenerator
   844 set :supplyBlockFromCore:item @coal
   845 setaddr :supplyBlockFromCore*retaddr *label240 (h:*label240)
 
   856 read *tmp90 .controller ".monos"
   857 jump *label242 lessThanEq *tmp90 3
   858 set :status1:text "Phase 1: supplying base"
-    * setaddr :status1*retaddr *label245 (h:*label245)
-    * call *label6 *invalid :status1*retval (m:*label245) (h:*label245)
-    * label *label245
+  859 label *label423
+  860 write :status1:text .display ".status1"
+  861 label *label424
   862 set :mineOre.1:ore @coal
   863 setaddr :mineOre.1*retaddr *label246 (h:*label246)
   864 call *label18 *invalid :mineOre.1*retval (m:*label246) (h:*label246)
 
   873 sensor *tmp355 .press @coal
   874 jump *label252 greaterThanEq *tmp355 5
   875 set :status1:text "Goal 1: graphite requirement"
-    * setaddr :status1*retaddr *label254 (h:*label254)
-    * call *label6 *invalid :status1*retval (m:*label254) (h:*label254)
-    * label *label254
+  876 label *label425
+  877 write :status1:text .display ".status1"
+  878 label *label426
   879 set :supplyBlock:block .press
   880 set :supplyBlock:ore @coal
   881 setaddr :supplyBlock*retaddr *label255 (h:*label255)
 
   891 sensor *tmp361 .smelter @coal
   892 jump *label258 greaterThanEq *tmp361 5
   893 set :status1:text "Goal 2: coal for silicon requirement"
-    * setaddr :status1*retaddr *label260 (h:*label260)
-    * call *label6 *invalid :status1*retval (m:*label260) (h:*label260)
-    * label *label260
+  894 label *label427
+  895 write :status1:text .display ".status1"
+  896 label *label428
   897 set :supplyBlock:block .smelter
   898 set :supplyBlock:ore @coal
   899 setaddr :supplyBlock*retaddr *label261 (h:*label261)
 
   905 sensor *tmp364 .smelter @sand
   906 jump *label262 greaterThanEq *tmp364 5
   907 set :status1:text "Goal 3: sand for silicon requirement"
-    * setaddr :status1*retaddr *label264 (h:*label264)
-    * call *label6 *invalid :status1*retval (m:*label264) (h:*label264)
-    * label *label264
+  908 label *label429
+  909 write :status1:text .display ".status1"
+  910 label *label430
   911 set :supplyBlock:block .smelter
   912 set :supplyBlock:ore @sand
   913 setaddr :supplyBlock*retaddr *label265 (h:*label265)
 
   924 sensor *tmp370 .generator @coal
   925 jump *label268 greaterThanEq *tmp370 2
   926 set :status1:text "Goal 4: supplying generator"
-    * setaddr :status1*retaddr *label270 (h:*label270)
-    * call *label6 *invalid :status1*retval (m:*label270) (h:*label270)
-    * label *label270
+  927 label *label431
+  928 write :status1:text .display ".status1"
+  929 label *label432
   930 set :supplyBlock:block .generator
   931 set :supplyBlock:ore @coal
   932 setaddr :supplyBlock*retaddr *label271 (h:*label271)
 
   954 op mul *tmp385 .unloader1 .powerTarget
   955 jump *label278 greaterThanEq *tmp384 *tmp385
   956 set :status1:text "Goal 5: supplying generator"
-    * setaddr :status1*retaddr *label280 (h:*label280)
-    * call *label6 *invalid :status1*retval (m:*label280) (h:*label280)
-    * label *label280
+  957 label *label433
+  958 write :status1:text .display ".status1"
+  959 label *label434
   960 set :mineOre.1:ore @coal
   961 setaddr :mineOre.1*retaddr *label281 (h:*label281)
   962 call *label18 *invalid :mineOre.1*retval (m:*label281) (h:*label281)
 
   966 sensor *tmp388 .core @silicon
   967 jump *label282 greaterThanEq *tmp388 .targetSilicon
   968 set :status1:text "Goal 6: silicon requirement"
-    * setaddr :status1*retaddr *label284 (h:*label284)
-    * call *label6 *invalid :status1*retval (m:*label284) (h:*label284)
-    * label *label284
+  969 label *label435
+  970 write :status1:text .display ".status1"
+  971 label *label436
   972 sensor :supplyBase0:coal .core @coal
   973 sensor :supplyBase0:sand .core @sand
   974 set :mineOre.1:ore @sand
 
   984 sensor *tmp395 .core @copper
   985 jump *label288 greaterThanEq *tmp395 .targetCopper
   986 set :status1:text "Goal 7: copper requirement"
-    * setaddr :status1*retaddr *label290 (h:*label290)
-    * call *label6 *invalid :status1*retval (m:*label290) (h:*label290)
-    * label *label290
+  987 label *label437
+  988 write :status1:text .display ".status1"
+  989 label *label438
   990 set :mineOre.1:ore @copper
   991 setaddr :mineOre.1*retaddr *label291 (h:*label291)
   992 call *label18 *invalid :mineOre.1*retval (m:*label291) (h:*label291)
 
   996 sensor *tmp398 .core @lead
   997 jump *label292 greaterThanEq *tmp398 .targetLead
   998 set :status1:text "Goal 8: lead requirement"
-    * setaddr :status1*retaddr *label294 (h:*label294)
-    * call *label6 *invalid :status1*retval (m:*label294) (h:*label294)
-    * label *label294
+  999 label *label439
+ 1000 write :status1:text .display ".status1"
+ 1001 label *label440
  1002 set :mineOre.1:ore @lead
  1003 setaddr :mineOre.1*retaddr *label295 (h:*label295)
  1004 call *label18 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
 
  1008 sensor *tmp401 .core @metaglass
  1009 jump *label296 greaterThanEq *tmp401 .targetMetaglass
  1010 set :status1:text "Goal 9: metaglass requirement"
-    * setaddr :status1*retaddr *label298 (h:*label298)
-    * call *label6 *invalid :status1*retval (m:*label298) (h:*label298)
-    * label *label298
+ 1011 label *label441
+ 1012 write :status1:text .display ".status1"
+ 1013 label *label442
  1014 set :mineOre.1:ore @sand
  1015 setaddr :mineOre.1*retaddr *label299 (h:*label299)
  1016 call *label18 *invalid :mineOre.1*retval (m:*label299) (h:*label299)
 
  1018 jump *label297 always
  1019 label *label296
  1020 set :status1:text "Goal 10: supplying base"
-    * setaddr :status1*retaddr *label300 (h:*label300)
-    * call *label6 *invalid :status1*retval (m:*label300) (h:*label300)
-    * label *label300
+ 1021 label *label443
+ 1022 write :status1:text .display ".status1"
+ 1023 label *label444
  1024 sensor :supplyBase0:coal.1 .core @coal
  1025 sensor :supplyBase0:sand.1 .core @sand
  1026 set :mineOre.1:ore @sand
 
  1041 jump *label275 always
  1042 label *label274
  1043 set :status1:text "Goal 11: Fetching titanium"
-    * setaddr :status1*retaddr *label304 (h:*label304)
-    * call *label6 *invalid :status1*retval (m:*label304) (h:*label304)
-    * label *label304
+ 1044 label *label445
+ 1045 write :status1:text .display ".status1"
+ 1046 label *label446
  1047 set :fetchBlock:block .titaniumDrill
  1048 set :fetchBlock:item @titanium
  1049 setaddr :fetchBlock*retaddr *label305 (h:*label305)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   838 jump *label236 equal .thoriumContainer false
   839 set :status1:text "Phase 2: servicing thorium drill"
   840 label *label421
-    * write :status1:text .display ".status1"
+  841 write "Phase 2: servicing thorium drill" .display ".status1"
   842 label *label422
   843 set :supplyBlockFromCore:target .thoriumGenerator
   844 set :supplyBlockFromCore:item @coal
 
   857 jump *label242 lessThanEq *tmp90 3
   858 set :status1:text "Phase 1: supplying base"
   859 label *label423
-    * write :status1:text .display ".status1"
+  860 write "Phase 1: supplying base" .display ".status1"
   861 label *label424
   862 set :mineOre.1:ore @coal
   863 setaddr :mineOre.1*retaddr *label246 (h:*label246)
 
   874 jump *label252 greaterThanEq *tmp355 5
   875 set :status1:text "Goal 1: graphite requirement"
   876 label *label425
-    * write :status1:text .display ".status1"
+  877 write "Goal 1: graphite requirement" .display ".status1"
   878 label *label426
   879 set :supplyBlock:block .press
   880 set :supplyBlock:ore @coal
 
   892 jump *label258 greaterThanEq *tmp361 5
   893 set :status1:text "Goal 2: coal for silicon requirement"
   894 label *label427
-    * write :status1:text .display ".status1"
+  895 write "Goal 2: coal for silicon requirement" .display ".status1"
   896 label *label428
   897 set :supplyBlock:block .smelter
   898 set :supplyBlock:ore @coal
 
   906 jump *label262 greaterThanEq *tmp364 5
   907 set :status1:text "Goal 3: sand for silicon requirement"
   908 label *label429
-    * write :status1:text .display ".status1"
+  909 write "Goal 3: sand for silicon requirement" .display ".status1"
   910 label *label430
   911 set :supplyBlock:block .smelter
   912 set :supplyBlock:ore @sand
 
   925 jump *label268 greaterThanEq *tmp370 2
   926 set :status1:text "Goal 4: supplying generator"
   927 label *label431
-    * write :status1:text .display ".status1"
+  928 write "Goal 4: supplying generator" .display ".status1"
   929 label *label432
   930 set :supplyBlock:block .generator
   931 set :supplyBlock:ore @coal
 
   955 jump *label278 greaterThanEq *tmp384 *tmp385
   956 set :status1:text "Goal 5: supplying generator"
   957 label *label433
-    * write :status1:text .display ".status1"
+  958 write "Goal 5: supplying generator" .display ".status1"
   959 label *label434
   960 set :mineOre.1:ore @coal
   961 setaddr :mineOre.1*retaddr *label281 (h:*label281)
 
   967 jump *label282 greaterThanEq *tmp388 .targetSilicon
   968 set :status1:text "Goal 6: silicon requirement"
   969 label *label435
-    * write :status1:text .display ".status1"
+  970 write "Goal 6: silicon requirement" .display ".status1"
   971 label *label436
   972 sensor :supplyBase0:coal .core @coal
   973 sensor :supplyBase0:sand .core @sand
 
   985 jump *label288 greaterThanEq *tmp395 .targetCopper
   986 set :status1:text "Goal 7: copper requirement"
   987 label *label437
-    * write :status1:text .display ".status1"
+  988 write "Goal 7: copper requirement" .display ".status1"
   989 label *label438
   990 set :mineOre.1:ore @copper
   991 setaddr :mineOre.1*retaddr *label291 (h:*label291)
 
   997 jump *label292 greaterThanEq *tmp398 .targetLead
   998 set :status1:text "Goal 8: lead requirement"
   999 label *label439
-    * write :status1:text .display ".status1"
+ 1000 write "Goal 8: lead requirement" .display ".status1"
  1001 label *label440
  1002 set :mineOre.1:ore @lead
  1003 setaddr :mineOre.1*retaddr *label295 (h:*label295)
 
  1009 jump *label296 greaterThanEq *tmp401 .targetMetaglass
  1010 set :status1:text "Goal 9: metaglass requirement"
  1011 label *label441
-    * write :status1:text .display ".status1"
+ 1012 write "Goal 9: metaglass requirement" .display ".status1"
  1013 label *label442
  1014 set :mineOre.1:ore @sand
  1015 setaddr :mineOre.1*retaddr *label299 (h:*label299)
 
  1019 label *label296
  1020 set :status1:text "Goal 10: supplying base"
  1021 label *label443
-    * write :status1:text .display ".status1"
+ 1022 write "Goal 10: supplying base" .display ".status1"
  1023 label *label444
  1024 sensor :supplyBase0:coal.1 .core @coal
  1025 sensor :supplyBase0:sand.1 .core @sand
 
  1042 label *label274
  1043 set :status1:text "Goal 11: Fetching titanium"
  1044 label *label445
-    * write :status1:text .display ".status1"
+ 1045 write "Goal 11: Fetching titanium" .display ".status1"
  1046 label *label446
  1047 set :fetchBlock:block .titaniumDrill
  1048 set :fetchBlock:item @titanium

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-13 instructions):
 
   836 label *label232
   837 label *label233
   838 jump *label236 equal .thoriumContainer false
-    * set :status1:text "Phase 2: servicing thorium drill"
   839 label *label421
   840 write "Phase 2: servicing thorium drill" .display ".status1"
   841 label *label422
 
   854 label *label236
   855 read *tmp90 .controller ".monos"
   856 jump *label242 lessThanEq *tmp90 3
-    * set :status1:text "Phase 1: supplying base"
   857 label *label423
   858 write "Phase 1: supplying base" .display ".status1"
   859 label *label424
 
   870 jump *label250 greaterThanEq *tmp352 .targetGraphite
   871 sensor *tmp355 .press @coal
   872 jump *label252 greaterThanEq *tmp355 5
-    * set :status1:text "Goal 1: graphite requirement"
   873 label *label425
   874 write "Goal 1: graphite requirement" .display ".status1"
   875 label *label426
 
   887 jump *label256 greaterThanEq *tmp358 .targetSilicon
   888 sensor *tmp361 .smelter @coal
   889 jump *label258 greaterThanEq *tmp361 5
-    * set :status1:text "Goal 2: coal for silicon requirement"
   890 label *label427
   891 write "Goal 2: coal for silicon requirement" .display ".status1"
   892 label *label428
 
   900 label *label258
   901 sensor *tmp364 .smelter @sand
   902 jump *label262 greaterThanEq *tmp364 5
-    * set :status1:text "Goal 3: sand for silicon requirement"
   903 label *label429
   904 write "Goal 3: sand for silicon requirement" .display ".status1"
   905 label *label430
 
   918 jump *label266 greaterThanEq *tmp367 .powerTarget
   919 sensor *tmp370 .generator @coal
   920 jump *label268 greaterThanEq *tmp370 2
-    * set :status1:text "Goal 4: supplying generator"
   921 label *label431
   922 write "Goal 4: supplying generator" .display ".status1"
   923 label *label432
 
   947 sensor *tmp384 .battery @totalPower
   948 op mul *tmp385 .unloader1 .powerTarget
   949 jump *label278 greaterThanEq *tmp384 *tmp385
-    * set :status1:text "Goal 5: supplying generator"
   950 label *label433
   951 write "Goal 5: supplying generator" .display ".status1"
   952 label *label434
 
   958 label *label278
   959 sensor *tmp388 .core @silicon
   960 jump *label282 greaterThanEq *tmp388 .targetSilicon
-    * set :status1:text "Goal 6: silicon requirement"
   961 label *label435
   962 write "Goal 6: silicon requirement" .display ".status1"
   963 label *label436
 
   975 label *label282
   976 sensor *tmp395 .core @copper
   977 jump *label288 greaterThanEq *tmp395 .targetCopper
-    * set :status1:text "Goal 7: copper requirement"
   978 label *label437
   979 write "Goal 7: copper requirement" .display ".status1"
   980 label *label438
 
   986 label *label288
   987 sensor *tmp398 .core @lead
   988 jump *label292 greaterThanEq *tmp398 .targetLead
-    * set :status1:text "Goal 8: lead requirement"
   989 label *label439
   990 write "Goal 8: lead requirement" .display ".status1"
   991 label *label440
 
   997 label *label292
   998 sensor *tmp401 .core @metaglass
   999 jump *label296 greaterThanEq *tmp401 .targetMetaglass
-    * set :status1:text "Goal 9: metaglass requirement"
  1000 label *label441
  1001 write "Goal 9: metaglass requirement" .display ".status1"
  1002 label *label442
 
  1006 label *label299
  1007 jump *label297 always
  1008 label *label296
-    * set :status1:text "Goal 10: supplying base"
  1009 label *label443
  1010 write "Goal 10: supplying base" .display ".status1"
  1011 label *label444
 
  1028 label *label277
  1029 jump *label275 always
  1030 label *label274
-    * set :status1:text "Goal 11: Fetching titanium"
  1031 label *label445
  1032 write "Goal 11: Fetching titanium" .display ".status1"
  1033 label *label446

Modifications by Inline function 'moveToBlock' defined at Actions.mnd:73:1 (-4 instructions):
 
   545 label *label162
   546 return :dropAll*retaddr
   547 end
-    * label *label14
-    * sensor *tmp245 :moveToBlock:block @x
-    * sensor *tmp246 :moveToBlock:block @y
-    * set :moveTo:x *tmp245
-    * set :moveTo:y *tmp246
-    * set :moveTo:radius :moveToBlock:radius
-    * setaddr :moveTo*retaddr *label167 (h:*label167)
-    * call *label11 *invalid :moveTo*retval (m:*label167) (h:*label167)
-    * label *label167
-    * label *label166
-    * return :moveToBlock*retaddr
-    * end
   548 label *label15
   549 label *label417
   550 write "Depositing..." .display ".status3"
 
   553 jump *label170 notEqual *tmp247 :depositItems:item
   554 set :moveToBlock:block :depositItems:block
   555 set :moveToBlock:radius 6
-    * setaddr :moveToBlock*retaddr *label172 (h:*label172)
-    * call *label14 *invalid :moveToBlock*retval (m:*label172) (h:*label172)
-    * label *label172
+  556 label *label447
+  557 sensor *tmp245 :moveToBlock:block @x
+  558 sensor *tmp246 :moveToBlock:block @y
+  559 set :moveTo:x *tmp245
+  560 set :moveTo:y *tmp246
+  561 set :moveTo:radius :moveToBlock:radius
+  562 setaddr :moveTo*retaddr *label448 (h:*label448)
+  563 call *label11 *invalid :moveTo*retval (m:*label448) (h:*label448)
+  564 label *label448
+  565 label *label449
   566 sensor :depositItems:cap :depositItems:block @itemCapacity
   567 label *label173
   568 ucontrol itemDrop :depositItems:block 30

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   554 set :moveToBlock:block :depositItems:block
   555 set :moveToBlock:radius 6
   556 label *label447
-    * sensor *tmp245 :moveToBlock:block @x
-    * sensor *tmp246 :moveToBlock:block @y
+  557 sensor *tmp245 :depositItems:block @x
+  558 sensor *tmp246 :depositItems:block @y
   559 set :moveTo:x *tmp245
   560 set :moveTo:y *tmp246
-    * set :moveTo:radius :moveToBlock:radius
+  561 set :moveTo:radius 6
   562 setaddr :moveTo*retaddr *label448 (h:*label448)
   563 call *label11 *invalid :moveTo*retval (m:*label448) (h:*label448)
   564 label *label448

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-2 instructions):
 
   551 label *label418
   552 sensor *tmp247 @unit @firstItem
   553 jump *label170 notEqual *tmp247 :depositItems:item
-    * set :moveToBlock:block :depositItems:block
-    * set :moveToBlock:radius 6
   554 label *label447
   555 sensor *tmp245 :depositItems:block @x
   556 sensor *tmp246 :depositItems:block @y

Modifications by Inline function 'supplyBlockFromCore' defined at Actions.mnd:166:1 (-4 instructions):
 
   742 label *label214
   743 return :supplyBlock*retaddr
   744 end
-    * label *label21
-    * sensor *tmp294 :supplyBlockFromCore:target @itemCapacity
-    * op min :transportStatus:target *tmp294 30
-    * set :transportStatus:item :supplyBlockFromCore:item
-    * setaddr :transportStatus*retaddr *label220 (h:*label220)
-    * call *label9 *invalid :transportStatus*retval (m:*label220) (h:*label220)
-    * label *label220
-    * set :status2:text "Transferring "
-    * set :status2:item :supplyBlockFromCore:item
-    * set :status2:block :supplyBlockFromCore:target
-    * setaddr :status2*retaddr *label221 (h:*label221)
-    * call *label7 *invalid :status2*retval (m:*label221) (h:*label221)
-    * label *label221
-    * set :moveToEmpty:x .coreX
-    * set :moveToEmpty:y .coreY
-    * setaddr :moveToEmpty*retaddr *label222 (h:*label222)
-    * call *label12 *invalid :moveToEmpty*retval (m:*label222) (h:*label222)
-    * label *label222
-    * setaddr :dropAll*retaddr *label223 (h:*label223)
-    * call *label13 *invalid :dropAll*retval (m:*label223) (h:*label223)
-    * label *label223
-    * label *label224
-    * ucontrol itemTake .core :supplyBlockFromCore:item 30
-    * sensor :supplyBlockFromCore:unitItem @unit @firstItem
-    * op notEqual *tmp297 :supplyBlockFromCore:unitItem null
-    * op notEqual *tmp298 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
-    * op land *tmp299 *tmp297 *tmp298
-    * jump *label227 equal *tmp299 false
-    * ucontrol itemDrop @air 1000
-    * label *label227
-    * label *label228
-    * label *label225
-    * sensor *tmp301 @unit :supplyBlockFromCore:item
-    * op lessThan *tmp302 *tmp301 30
-    * sensor *tmp303 .core :supplyBlockFromCore:item
-    * op land *tmp304 *tmp302 *tmp303
-    * jump *label224 notEqual *tmp304 false
-    * label *label226
-    * set :depositItems:block :supplyBlockFromCore:target
-    * set :depositItems:item :supplyBlockFromCore:item
-    * setaddr :depositItems*retaddr *label229 (h:*label229)
-    * call *label15 *invalid :depositItems*retval (m:*label229) (h:*label229)
-    * label *label229
-    * label *label219
-    * return :supplyBlockFromCore*retaddr
-    * end
   745 label *label27
   746 read *tmp306 :unpackCfg:cfg 0
   747 op sub *tmp307 *tmp306 35
 
   788 label *label422
   789 set :supplyBlockFromCore:target .thoriumGenerator
   790 set :supplyBlockFromCore:item @coal
-    * setaddr :supplyBlockFromCore*retaddr *label240 (h:*label240)
-    * call *label21 *invalid :supplyBlockFromCore*retval (m:*label240) (h:*label240)
-    * label *label240
+  791 label *label450
+  792 sensor *tmp294 :supplyBlockFromCore:target @itemCapacity
+  793 op min :transportStatus:target *tmp294 30
+  794 set :transportStatus:item :supplyBlockFromCore:item
+  795 setaddr :transportStatus*retaddr *label451 (h:*label451)
+  796 call *label9 *invalid :transportStatus*retval (m:*label451) (h:*label451)
+  797 label *label451
+  798 set :status2:text "Transferring "
+  799 set :status2:item :supplyBlockFromCore:item
+  800 set :status2:block :supplyBlockFromCore:target
+  801 setaddr :status2*retaddr *label452 (h:*label452)
+  802 call *label7 *invalid :status2*retval (m:*label452) (h:*label452)
+  803 label *label452
+  804 set :moveToEmpty:x .coreX
+  805 set :moveToEmpty:y .coreY
+  806 setaddr :moveToEmpty*retaddr *label453 (h:*label453)
+  807 call *label12 *invalid :moveToEmpty*retval (m:*label453) (h:*label453)
+  808 label *label453
+  809 setaddr :dropAll*retaddr *label454 (h:*label454)
+  810 call *label13 *invalid :dropAll*retval (m:*label454) (h:*label454)
+  811 label *label454
+  812 label *label455
+  813 ucontrol itemTake .core :supplyBlockFromCore:item 30
+  814 sensor :supplyBlockFromCore:unitItem @unit @firstItem
+  815 op notEqual *tmp297 :supplyBlockFromCore:unitItem null
+  816 op notEqual *tmp298 :supplyBlockFromCore:unitItem :supplyBlockFromCore:item
+  817 op land *tmp299 *tmp297 *tmp298
+  818 jump *label456 equal *tmp299 false
+  819 ucontrol itemDrop @air 1000
+  820 label *label456
+  821 label *label457
+  822 label *label458
+  823 sensor *tmp301 @unit :supplyBlockFromCore:item
+  824 op lessThan *tmp302 *tmp301 30
+  825 sensor *tmp303 .core :supplyBlockFromCore:item
+  826 op land *tmp304 *tmp302 *tmp303
+  827 jump *label455 notEqual *tmp304 false
+  828 label *label459
+  829 set :depositItems:block :supplyBlockFromCore:target
+  830 set :depositItems:item :supplyBlockFromCore:item
+  831 setaddr :depositItems*retaddr *label460 (h:*label460)
+  832 call *label15 *invalid :depositItems*retval (m:*label460) (h:*label460)
+  833 label *label460
+  834 label *label461
   835 set :fetchBlock:block .thoriumContainer
   836 set :fetchBlock:item @thorium
   837 setaddr :fetchBlock*retaddr *label241 (h:*label241)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   789 set :supplyBlockFromCore:target .thoriumGenerator
   790 set :supplyBlockFromCore:item @coal
   791 label *label450
-    * sensor *tmp294 :supplyBlockFromCore:target @itemCapacity
+  792 sensor *tmp294 .thoriumGenerator @itemCapacity
   793 op min :transportStatus:target *tmp294 30
-    * set :transportStatus:item :supplyBlockFromCore:item
+  794 set :transportStatus:item @coal
   795 setaddr :transportStatus*retaddr *label451 (h:*label451)
   796 call *label9 *invalid :transportStatus*retval (m:*label451) (h:*label451)
   797 label *label451

Modifications by Inline function 'locateOre' defined at Actions.mnd:98:1 (-4 instructions):
 
   588 label *label168
   589 return :depositItems*retaddr
   590 end
-    * label *label16
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp257 0
-    * jump *label181 notEqual *tmp257 false
-    * set :error:error "Cannot locate ore"
-    * setaddr :error*retaddr *label183 (h:*label183)
-    * call *label10 *invalid :error*retval (m:*label183) (h:*label183)
-    * label *label183
-    * label *label181
-    * label *label182
-    * label *label180
-    * return :locateOre*retaddr
-    * end
   591 label *label17
   592 op min :mineOre:amount :mineOre:amount 30
   593 set :transportStatus:target :mineOre:amount
 
   596 call *label9 *invalid :transportStatus*retval (m:*label185) (h:*label185)
   597 label *label185
   598 set :locateOre:ore :mineOre:ore
-    * setaddr :locateOre*retaddr *label186 (h:*label186)
-    * call *label16 *invalid :locateOre*retval (m:*label186) (h:*label186)
-    * label *label186
+  599 label *label462
+  600 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp257 0
+  601 jump *label464 notEqual *tmp257 false
+  602 set :error:error "Cannot locate ore"
+  603 setaddr :error*retaddr *label463 (h:*label463)
+  604 call *label10 *invalid :error*retval (m:*label463) (h:*label463)
+  605 label *label463
+  606 label *label464
+  607 label *label465
+  608 label *label466
   609 set :mineOre:x :locateOre:x
   610 set :mineOre:y :locateOre:y
   611 set :moveToEmpty:x :locateOre:x

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   597 label *label185
   598 set :locateOre:ore :mineOre:ore
   599 label *label462
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp257 0
+  600 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp257 0
   601 jump *label464 notEqual *tmp257 false
   602 set :error:error "Cannot locate ore"
   603 setaddr :error*retaddr *label463 (h:*label463)

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   595 setaddr :transportStatus*retaddr *label185 (h:*label185)
   596 call *label9 *invalid :transportStatus*retval (m:*label185) (h:*label185)
   597 label *label185
-    * set :locateOre:ore :mineOre:ore
   598 label *label462
   599 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp257 0
   600 jump *label464 notEqual *tmp257 false

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-7 instructions):
 
    94 read *tmp139 processor5 ":buildBlockAt*finished"
    95 jump *label54 equal *tmp139 false
    96 read *tmp119 processor5 ":buildBlockAt*retval"
-    * jump *label48 always
    97 label *label48
    98 set .titaniumDrill *tmp119
    99 write *tmp119 processor1 ".titaniumDrill"
 
   920 sensor *tmp376 .core @titanium
   921 op sub *tmp377 .targetTitanium *tmp376
   922 op min *tmp375 7 *tmp377
-    * jump *label273 always
   923 label *label273
   924 sensor *tmp379 .titaniumDrill @titanium
   925 jump *label274 greaterThanEq *tmp379 *tmp375
 
   946 set :mineOre.1:ore @sand
   947 jump *label286 greaterThanEq :supplyBase0:coal :supplyBase0:sand
   948 set :mineOre.1:ore @coal
-    * jump *label286 always
   949 label *label286
   950 setaddr :mineOre.1*retaddr *label287 (h:*label287)
   951 call *label18 *invalid :mineOre.1*retval (m:*label287) (h:*label287)
 
   993 set :mineOre.1:ore @sand
   994 jump *label302 greaterThan :supplyBase0:coal.1 :supplyBase0:sand.1
   995 set :mineOre.1:ore @coal
-    * jump *label302 always
   996 label *label302
   997 setaddr :mineOre.1*retaddr *label303 (h:*label303)
   998 call *label18 *invalid :mineOre.1*retval (m:*label303) (h:*label303)
 
  1159 read *tmp462 .blockBuilder ":buildBlockAt*finished"
  1160 jump *label341 equal *tmp462 false
  1161 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * jump *label339 always
  1162 label *label339
  1163 return :buildBlock*retaddr
  1164 end
 
  1215 call *label30 *invalid :buildBlock*retval (m:*label349) (h:*label349)
  1216 label *label349
  1217 set :buildBlockFromCfg*retval :buildBlock*retval
-    * jump *label347 always
  1218 label *label347
  1219 return :buildBlockFromCfg*retaddr
  1220 end
 
  1249 end
  1250 label *label36
  1251 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y 0 0 :getFloor:floor
-    * jump *label360 always
  1252 label *label360
  1253 jump *label361 notEqual :getFloor:floor @ore-titanium
  1254 label *label362

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1 (-3 instructions):
 
   317 op add *tmp196 :buildTitaniumDrills:x 1
   318 set :buildTitaniumDrill:x *tmp196
   319 set :buildTitaniumDrill:y *tmp195
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
   320 setaddr :buildTitaniumDrill*retaddr *label110 (h:*label110)
   321 call *label37 *invalid :buildTitaniumDrill*retval (m:*label110) (h:*label110)
   322 label *label110
   323 op add *tmp199 :buildTitaniumDrills:y 1
   324 set :buildTitaniumDrill:x *tmp194
   325 set :buildTitaniumDrill:y *tmp199
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
   326 setaddr :buildTitaniumDrill*retaddr *label111 (h:*label111)
   327 call *label37 *invalid :buildTitaniumDrill*retval (m:*label111) (h:*label111)
   328 label *label111
   329 set :buildTitaniumDrill:x *tmp196
   330 set :buildTitaniumDrill:y *tmp199
-    * set :buildTitaniumDrill:count :buildTitaniumDrill:count
   331 setaddr :buildTitaniumDrill*retaddr *label112 (h:*label112)
   332 call *label37 *invalid :buildTitaniumDrill*retval (m:*label112) (h:*label112)
   333 label *label112
 
  1021 label *label29
  1022 label *label384
  1023 op sign *tmp409 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp409
+ 1024 set :meetTarget:count *tmp409
  1025 label *label385
  1026 label *label388
  1027 op sign *tmp409 :meetTarget:lead

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
  1020 end
  1021 label *label29
  1022 label *label384
-    * op sign *tmp409 :meetTarget:copper
-    * set :meetTarget:count *tmp409
+ 1023 op sign :meetTarget:count :meetTarget:copper
  1024 label *label385
  1025 label *label388
  1026 op sign *tmp409 :meetTarget:lead

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    18 ubind @poly
    19 set .builder @unit
    20 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label40
    21 jump *label39 equal .core null
-    * label *label41
    22 set .display processor1
    23 set .flareController processor3
    24 set .blockBuilder processor5
 
    78 call *label10 *invalid :error*retval (m:*label53) (h:*label53)
    79 label *label53
    80 label *label51
-    * label *label52
    81 write @pneumatic-drill processor1 ".nextBlock"
    82 write @pneumatic-drill processor5 ":buildBlockAt:block"
    83 write :buildFirstTitaniumDrill:dx processor5 ":buildBlockAt:x"
 
    91 read *tmp139 processor5 ":buildBlockAt*finished"
    92 jump *label54 equal *tmp139 false
    93 read *tmp119 processor5 ":buildBlockAt*retval"
-    * label *label48
    94 set .titaniumDrill *tmp119
    95 write *tmp119 processor1 ".titaniumDrill"
    96 set :buildBlockFromCfg.1:cfg "*,###A<###"
 
   138 write :buildBlockFromCfg.1*retval processor1 ".airFactory"
   139 write 1 .controller ".flareTarget"
   140 write 1 processor1 ".flareTarget"
-    * label *label62
   141 write 3 .controller ".monoTarget"
   142 write 3 processor1 ".monoTarget"
-    * label *label63
   143 write 85 .controller ".pressTarget"
   144 write 150 .controller ".smelterTarget"
   145 write 30 .controller ".kilnTarget"
 
   156 jump *label69 greaterThanEq *tmp148 300
   157 jump *label67 always
   158 label *label69
-    * label *label70
-    * label *label66
   159 read *tmp90 .controller ".monos"
   160 jump *label65 lessThan *tmp90 3
   161 label *label67
 
   226 set .metaglassSurplus 200
   227 write 4 .controller ".polyTarget"
   228 write 4 processor1 ".polyTarget"
-    * label *label85
   229 set :buildBlockFromCfg.1:cfg "%-)A<######"
   230 setaddr :buildBlockFromCfg.1*retaddr *label86 (h:*label86)
   231 call *label33 *invalid :buildBlockFromCfg.1*retval (m:*label86) (h:*label86)
 
   245 setaddr :supplyBase*retaddr *label92 (h:*label92)
   246 call *label28 *invalid :supplyBase*retval (m:*label92) (h:*label92)
   247 label *label92
-    * label *label90
   248 jump *label89 always
   249 label *label91
   250 write 3 .controller ".flareTarget"
   251 write 3 processor1 ".flareTarget"
-    * label *label93
   252 label *label94
   253 read *tmp89 .controller ".flares"
   254 jump *label96 greaterThanEq *tmp89 2
   255 setaddr :supplyBase*retaddr *label97 (h:*label97)
   256 call *label28 *invalid :supplyBase*retval (m:*label97) (h:*label97)
   257 label *label97
-    * label *label95
   258 jump *label94 always
   259 label *label96
   260 write 8 .controller ".monoTarget"
   261 write 8 processor1 ".monoTarget"
-    * label *label98
   262 write 6 .controller ".polyTarget"
   263 write 6 processor1 ".polyTarget"
-    * label *label99
   264 write @ore-titanium processor1 ".nextBlock"
   265 wait 0.000000001
   266 ubind @flare
 
   277 write 1 processor4 "@counter"
   278 ubind .builder
   279 set :buildTitaniumDrills:count 1
-    * label *label101
   280 label *label383
   281 read *tmp179 processor4 ":findDrillLocation*finished"
   282 op equal :buildTitaniumDrills:searching *tmp179 false
 
   318 label *label112
   319 set :buildTitaniumDrills:count :buildTitaniumDrill:count
   320 label *label107
-    * label *label108
   321 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
-    * label *label105
   322 jump *label104 always
   323 label *label106
   324 jump *label113 lessThan :buildTitaniumDrills:count 8
   325 jump *label103 always
   326 label *label113
-    * label *label114
-    * label *label102
   327 jump *label383 notEqual :buildTitaniumDrills:searching false
   328 label *label103
   329 write false processor4 ":stopLocation*finished"
   330 write 3 processor4 "@counter"
-    * label *label100
   331 write null processor1 ".nextBlock"
   332 write .coreX processor4 ":layoutThoriumDrill:x"
   333 write .coreY processor4 ":layoutThoriumDrill:y"
 
   354 call *label10 *invalid :error*retval (m:*label121) (h:*label121)
   355 label *label121
   356 label *label119
-    * label *label120
   357 write @laser-drill processor5 ":buildBlockAt:block"
   358 read *tmp52 processor4 ".drillX"
   359 write *tmp52 processor5 ":buildBlockAt:x"
 
   414 jump *label130 notEqual :buildRemoteBlock*retval null
   415 set .thoriumContainer .thoriumDrill
   416 label *label130
-    * label *label131
   417 write .thoriumDrill processor1 ".thoriumDrill"
   418 write .thoriumContainer processor1 ".thoriumContainer"
-    * label *label115
   419 write null processor1 ".nextBlock"
   420 write 1 .controller ".megaTarget"
   421 write 1 processor1 ".megaTarget"
-    * label *label132
   422 label *label133
   423 read *tmp91 .controller ".polys"
   424 jump *label135 greaterThanEq *tmp91 6
   425 setaddr :supplyBase*retaddr *label136 (h:*label136)
   426 call *label28 *invalid :supplyBase*retval (m:*label136) (h:*label136)
   427 label *label136
-    * label *label134
   428 jump *label133 always
   429 label *label135
   430 set :buildBlockFromCfg:cfg "+(###A<###"
 
   449 setaddr :supplyBase*retaddr *label144 (h:*label144)
   450 call *label28 *invalid :supplyBase*retval (m:*label144) (h:*label144)
   451 label *label144
-    * label *label142
   452 jump *label141 always
-    * label *label143
   453 end
   454 label *label7
   455 write :status2:text .display ".status2"
   456 write :status2:item .display ".item2"
   457 write :status2:block .display ".block2"
-    * label *label146
   458 return :status2*retaddr
   459 end
   460 label *label9
   461 write :transportStatus:target .display ".transportTarget"
   462 write :transportStatus:item .display ".transportItem"
-    * label *label148
   463 return :transportStatus*retaddr
   464 end
   465 label *label10
   466 set .ERROR :error:error
   467 stop
-    * label *label149
   468 return :error*retaddr
   469 end
   470 label *label11
-    * label *label413
   471 write "Moving..." .display ".status3"
-    * label *label414
   472 op sub *tmp237 :moveTo:radius 0.5
   473 label *label152
   474 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp235
   475 jump *label154 notEqual *tmp235 false
   476 ucontrol approach :moveTo:x :moveTo:y *tmp237
-    * label *label153
   477 jump *label152 always
   478 label *label154
-    * label *label150
   479 return :moveTo*retaddr
   480 end
   481 label *label12
-    * label *label415
   482 write "Moving..." .display ".status3"
-    * label *label416
   483 label *label157
   484 sensor *tmp238 @unit @firstItem
   485 jump *label160 equal *tmp238 null
   486 ucontrol itemDrop @air 1000
   487 label *label160
-    * label *label161
   488 ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5
-    * label *label158
   489 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp241
   490 jump *label157 equal *tmp241 false
-    * label *label159
-    * label *label155
   491 return :moveToEmpty*retaddr
   492 end
   493 label *label13
 
   495 sensor *tmp243 @unit @firstItem
   496 jump *label165 equal *tmp243 null
   497 ucontrol itemDrop @air 1000
-    * label *label164
   498 jump *label163 always
   499 label *label165
-    * label *label162
   500 return :dropAll*retaddr
   501 end
   502 label *label15
-    * label *label417
   503 write "Depositing..." .display ".status3"
-    * label *label418
   504 sensor *tmp247 @unit @firstItem
   505 jump *label170 notEqual *tmp247 :depositItems:item
-    * label *label447
   506 sensor *tmp245 :depositItems:block @x
   507 sensor *tmp246 :depositItems:block @y
   508 set :moveTo:x *tmp245
 
   511 setaddr :moveTo*retaddr *label448 (h:*label448)
   512 call *label11 *invalid :moveTo*retval (m:*label448) (h:*label448)
   513 label *label448
-    * label *label449
   514 sensor :depositItems:cap :depositItems:block @itemCapacity
   515 label *label173
   516 ucontrol itemDrop :depositItems:block 30
-    * label *label174
   517 sensor *tmp251 @unit @firstItem
   518 op mul *tmp252 *tmp251 :depositItems:cap
   519 sensor *tmp253 :depositItems:block :depositItems:item
   520 jump *label173 greaterThan *tmp252 *tmp253
-    * label *label175
   521 jump *label171 always
   522 label *label170
   523 label *label176
   524 sensor *tmp255 @unit @firstItem
   525 jump *label178 equal *tmp255 null
   526 ucontrol itemDrop @air 1000
-    * label *label177
   527 jump *label176 always
   528 label *label178
   529 label *label171
 
   532 setaddr :transportStatus*retaddr *label179 (h:*label179)
   533 call *label9 *invalid :transportStatus*retval (m:*label179) (h:*label179)
   534 label *label179
-    * label *label168
   535 return :depositItems*retaddr
   536 end
   537 label *label17
 
   541 setaddr :transportStatus*retaddr *label185 (h:*label185)
   542 call *label9 *invalid :transportStatus*retval (m:*label185) (h:*label185)
   543 label *label185
-    * label *label462
   544 ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y *tmp257 0
   545 jump *label464 notEqual *tmp257 false
   546 set :error:error "Cannot locate ore"
 
   548 call *label10 *invalid :error*retval (m:*label463) (h:*label463)
   549 label *label463
   550 label *label464
-    * label *label465
-    * label *label466
   551 set :mineOre:x :locateOre:x
   552 set :mineOre:y :locateOre:y
   553 set :moveToEmpty:x :locateOre:x
 
   561 call *label13 *invalid :dropAll*retval (m:*label190) (h:*label190)
   562 label *label190
   563 label *label188
-    * label *label189
-    * label *label419
   564 write "Mining..." .display ".status3"
-    * label *label420
   565 op add :mineOre:stop @second 10
   566 label *label192
   567 sensor :mineOre:item @unit @firstItem
 
   571 jump *label195 equal *tmp269 false
   572 jump *label194 always
   573 label *label195
-    * label *label196
   574 ucontrol mine :mineOre:x :mineOre:y
   575 jump *label197 lessThanEq @second :mineOre:stop
   576 jump *label194 always
   577 label *label197
-    * label *label198
-    * label *label193
   578 sensor *tmp273 @unit @totalItems
   579 jump *label192 lessThan *tmp273 :mineOre:amount
   580 label *label194
 
   584 setaddr :depositItems*retaddr *label199 (h:*label199)
   585 call *label15 *invalid :depositItems*retval (m:*label199) (h:*label199)
   586 label *label199
-    * label *label184
   587 return :mineOre*retaddr
   588 end
   589 label *label18
 
   599 setaddr :mineOre*retaddr *label202 (h:*label202)
   600 call *label17 *invalid :mineOre*retval (m:*label202) (h:*label202)
   601 label *label202
-    * label *label200
   602 return :mineOre.1*retaddr
   603 end
   604 label *label19
 
   633 jump *label211 equal *tmp283 false
   634 ucontrol itemDrop @air 1000
   635 label *label211
-    * label *label212
-    * label *label209
   636 sensor *tmp285 @unit :fetchBlock:item
   637 op lessThan *tmp286 *tmp285 30
   638 sensor *tmp287 :fetchBlock:block :fetchBlock:item
   639 op land *tmp288 *tmp286 *tmp287
   640 jump *label208 notEqual *tmp288 false
-    * label *label210
   641 set :depositItems:block .core
   642 set :depositItems:item :fetchBlock:item
   643 setaddr :depositItems*retaddr *label213 (h:*label213)
   644 call *label15 *invalid :depositItems*retval (m:*label213) (h:*label213)
   645 label *label213
-    * label *label203
   646 return :fetchBlock*retaddr
   647 end
   648 label *label20
 
   663 call *label17 *invalid :mineOre*retval (m:*label218) (h:*label218)
   664 label *label218
   665 label *label216
-    * label *label217
-    * label *label214
   666 return :supplyBlock*retaddr
   667 end
   668 label *label27
 
   689 op sub :unpackCfg:th *tmp336 35
   690 read *tmp339 :unpackCfg:cfg 10
   691 op sub :unpackCfg:rotation *tmp339 35
-    * label *label230
   692 return :unpackCfg*retaddr
   693 end
   694 label *label28
 
   701 write false .flareController ":start*finished"
   702 write 2 .flareController "@counter"
   703 label *label234
-    * label *label235
   704 label *label232
-    * label *label233
   705 jump *label236 equal .thoriumContainer false
-    * label *label421
   706 write "Phase 2: servicing thorium drill" .display ".status1"
-    * label *label422
   707 set :supplyBlockFromCore:target .thoriumGenerator
   708 set :supplyBlockFromCore:item @coal
-    * label *label450
   709 sensor *tmp294 .thoriumGenerator @itemCapacity
   710 op min :transportStatus:target *tmp294 30
   711 set :transportStatus:item @coal
 
   735 jump *label456 equal *tmp299 false
   736 ucontrol itemDrop @air 1000
   737 label *label456
-    * label *label457
-    * label *label458
   738 sensor *tmp301 @unit :supplyBlockFromCore:item
   739 op lessThan *tmp302 *tmp301 30
   740 sensor *tmp303 .core :supplyBlockFromCore:item
   741 op land *tmp304 *tmp302 *tmp303
   742 jump *label455 notEqual *tmp304 false
-    * label *label459
   743 set :depositItems:block :supplyBlockFromCore:target
   744 set :depositItems:item :supplyBlockFromCore:item
   745 setaddr :depositItems*retaddr *label460 (h:*label460)
   746 call *label15 *invalid :depositItems*retval (m:*label460) (h:*label460)
   747 label *label460
-    * label *label461
   748 set :fetchBlock:block .thoriumContainer
   749 set :fetchBlock:item @thorium
   750 setaddr :fetchBlock*retaddr *label241 (h:*label241)
   751 call *label19 *invalid :fetchBlock*retval (m:*label241) (h:*label241)
   752 label *label241
-    * label *label238
   753 jump *label237 always
   754 label *label236
   755 read *tmp90 .controller ".monos"
   756 jump *label242 lessThanEq *tmp90 3
-    * label *label423
   757 write "Phase 1: supplying base" .display ".status1"
-    * label *label424
   758 set :mineOre.1:ore @coal
   759 setaddr :mineOre.1*retaddr *label246 (h:*label246)
   760 call *label18 *invalid :mineOre.1*retval (m:*label246) (h:*label246)
   761 label *label246
-    * label *label244
   762 jump *label243 always
   763 label *label242
   764 set :supplyBase0:supplied false
 
   767 jump *label250 greaterThanEq *tmp352 .targetGraphite
   768 sensor *tmp355 .press @coal
   769 jump *label252 greaterThanEq *tmp355 5
-    * label *label425
   770 write "Goal 1: graphite requirement" .display ".status1"
-    * label *label426
   771 set :supplyBlock:block .press
   772 set :supplyBlock:ore @coal
   773 setaddr :supplyBlock*retaddr *label255 (h:*label255)
 
   775 label *label255
   776 set :supplyBase0:supplied true
   777 label *label252
-    * label *label253
   778 label *label250
-    * label *label251
   779 sensor *tmp358 .core @silicon
   780 jump *label256 greaterThanEq *tmp358 .targetSilicon
   781 sensor *tmp361 .smelter @coal
   782 jump *label258 greaterThanEq *tmp361 5
-    * label *label427
   783 write "Goal 2: coal for silicon requirement" .display ".status1"
-    * label *label428
   784 set :supplyBlock:block .smelter
   785 set :supplyBlock:ore @coal
   786 setaddr :supplyBlock*retaddr *label261 (h:*label261)
 
   791 label *label258
   792 sensor *tmp364 .smelter @sand
   793 jump *label262 greaterThanEq *tmp364 5
-    * label *label429
   794 write "Goal 3: sand for silicon requirement" .display ".status1"
-    * label *label430
   795 set :supplyBlock:block .smelter
   796 set :supplyBlock:ore @sand
   797 setaddr :supplyBlock*retaddr *label265 (h:*label265)
 
   799 label *label265
   800 set :supplyBase0:supplied true
   801 label *label262
-    * label *label263
   802 label *label259
   803 label *label256
-    * label *label257
   804 sensor *tmp367 .battery @totalPower
   805 jump *label266 greaterThanEq *tmp367 .powerTarget
   806 sensor *tmp370 .generator @coal
   807 jump *label268 greaterThanEq *tmp370 2
-    * label *label431
   808 write "Goal 4: supplying generator" .display ".status1"
-    * label *label432
   809 set :supplyBlock:block .generator
   810 set :supplyBlock:ore @coal
   811 setaddr :supplyBlock*retaddr *label271 (h:*label271)
 
   813 label *label271
   814 set :supplyBase0:supplied true
   815 label *label268
-    * label *label269
   816 label *label266
-    * label *label267
   817 label *label248
-    * label *label249
   818 set *tmp375 100
   819 sensor *tmp373 .core @titanium
   820 jump *label273 greaterThanEq *tmp373 .targetTitanium
 
   828 sensor *tmp384 .battery @totalPower
   829 op mul *tmp385 .unloader1 .powerTarget
   830 jump *label278 greaterThanEq *tmp384 *tmp385
-    * label *label433
   831 write "Goal 5: supplying generator" .display ".status1"
-    * label *label434
   832 set :mineOre.1:ore @coal
   833 setaddr :mineOre.1*retaddr *label281 (h:*label281)
   834 call *label18 *invalid :mineOre.1*retval (m:*label281) (h:*label281)
 
   837 label *label278
   838 sensor *tmp388 .core @silicon
   839 jump *label282 greaterThanEq *tmp388 .targetSilicon
-    * label *label435
   840 write "Goal 6: silicon requirement" .display ".status1"
-    * label *label436
   841 sensor :supplyBase0:coal .core @coal
   842 sensor :supplyBase0:sand .core @sand
   843 set :mineOre.1:ore @sand
 
   851 label *label282
   852 sensor *tmp395 .core @copper
   853 jump *label288 greaterThanEq *tmp395 .targetCopper
-    * label *label437
   854 write "Goal 7: copper requirement" .display ".status1"
-    * label *label438
   855 set :mineOre.1:ore @copper
   856 setaddr :mineOre.1*retaddr *label291 (h:*label291)
   857 call *label18 *invalid :mineOre.1*retval (m:*label291) (h:*label291)
 
   860 label *label288
   861 sensor *tmp398 .core @lead
   862 jump *label292 greaterThanEq *tmp398 .targetLead
-    * label *label439
   863 write "Goal 8: lead requirement" .display ".status1"
-    * label *label440
   864 set :mineOre.1:ore @lead
   865 setaddr :mineOre.1*retaddr *label295 (h:*label295)
   866 call *label18 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
 
   869 label *label292
   870 sensor *tmp401 .core @metaglass
   871 jump *label296 greaterThanEq *tmp401 .targetMetaglass
-    * label *label441
   872 write "Goal 9: metaglass requirement" .display ".status1"
-    * label *label442
   873 set :mineOre.1:ore @sand
   874 setaddr :mineOre.1*retaddr *label299 (h:*label299)
   875 call *label18 *invalid :mineOre.1*retval (m:*label299) (h:*label299)
   876 label *label299
   877 jump *label297 always
   878 label *label296
-    * label *label443
   879 write "Goal 10: supplying base" .display ".status1"
-    * label *label444
   880 sensor :supplyBase0:coal.1 .core @coal
   881 sensor :supplyBase0:sand.1 .core @sand
   882 set :mineOre.1:ore @sand
 
   892 label *label283
   893 label *label279
   894 label *label276
-    * label *label277
   895 jump *label275 always
   896 label *label274
-    * label *label445
   897 write "Goal 11: Fetching titanium" .display ".status1"
-    * label *label446
   898 set :fetchBlock:block .titaniumDrill
   899 set :fetchBlock:item @titanium
   900 setaddr :fetchBlock*retaddr *label305 (h:*label305)
   901 call *label19 *invalid :fetchBlock*retval (m:*label305) (h:*label305)
   902 label *label305
   903 label *label275
-    * label *label247
   904 label *label243
   905 label *label237
-    * label *label231
   906 return :supplyBase*retaddr
   907 end
   908 label *label29
-    * label *label384
   909 op sign :meetTarget:count :meetTarget:copper
-    * label *label385
-    * label *label388
   910 op sign *tmp409 :meetTarget:lead
   911 op add :meetTarget:count :meetTarget:count *tmp409
-    * label *label389
-    * label *label392
   912 op sign *tmp409 :meetTarget:graphite
   913 op add :meetTarget:count :meetTarget:count *tmp409
-    * label *label393
-    * label *label396
   914 op sign *tmp409 :meetTarget:silicon
   915 op add :meetTarget:count :meetTarget:count *tmp409
-    * label *label397
-    * label *label400
   916 op sign *tmp409 :meetTarget:titanium
   917 op add :meetTarget:count :meetTarget:count *tmp409
-    * label *label401
-    * label *label404
   918 op sign *tmp409 :meetTarget:metaglass
   919 op add :meetTarget:count :meetTarget:count *tmp409
-    * label *label405
-    * label *label408
   920 op sign *tmp409 :meetTarget:thorium
   921 op add :meetTarget:count :meetTarget:count *tmp409
-    * label *label409
-    * label *label309
   922 write :meetTarget:count .display ".totalTargets"
   923 write :meetTarget:block .display ".nextBlock"
   924 write :meetTarget:copper .display ".targetCopper"
 
   953 set *tmp419 false
   954 jump *label320 always
   955 label *label321
-    * label *label322
   956 sensor *tmp423 .core @lead
   957 jump *label323 greaterThanEq *tmp423 .targetLead
   958 set *tmp419 false
   959 jump *label320 always
   960 label *label323
-    * label *label324
   961 sensor *tmp426 .core @graphite
   962 jump *label325 greaterThanEq *tmp426 .targetGraphite
   963 set *tmp419 false
   964 jump *label320 always
   965 label *label325
-    * label *label326
   966 sensor *tmp429 .core @silicon
   967 jump *label327 greaterThanEq *tmp429 .targetSilicon
   968 set *tmp419 false
   969 jump *label320 always
   970 label *label327
-    * label *label328
   971 sensor *tmp432 .core @titanium
   972 jump *label329 greaterThanEq *tmp432 .targetTitanium
   973 set *tmp419 false
   974 jump *label320 always
   975 label *label329
-    * label *label330
   976 sensor *tmp435 .core @metaglass
   977 jump *label331 greaterThanEq *tmp435 .targetMetaglass
   978 set *tmp419 false
   979 jump *label320 always
   980 label *label331
-    * label *label332
   981 sensor *tmp438 .core @thorium
   982 jump *label333 greaterThanEq *tmp438 .targetThorium
   983 set *tmp419 false
   984 jump *label320 always
   985 label *label333
-    * label *label334
   986 set *tmp419 true
   987 jump *label320 always
   988 label *label320
 
   990 setaddr :supplyBase*retaddr *label335 (h:*label335)
   991 call *label28 *invalid :supplyBase*retval (m:*label335) (h:*label335)
   992 label *label335
-    * label *label318
   993 jump *label317 always
   994 label *label319
-    * label *label306
   995 return :meetTarget*retaddr
   996 end
   997 label *label30
 
  1018 read *tmp462 .blockBuilder ":buildBlockAt*finished"
  1019 jump *label341 equal *tmp462 false
  1020 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
-    * label *label339
  1021 return :buildBlock*retaddr
  1022 end
  1023 label *label31
 
  1044 set :buildRemoteBlock*retval :buildBlock*retval
  1045 jump *label342 always
  1046 label *label343
-    * label *label344
  1047 set :buildRemoteBlock*retval false
  1048 jump *label342 always
  1049 label *label342
 
  1072 call *label30 *invalid :buildBlock*retval (m:*label349) (h:*label349)
  1073 label *label349
  1074 set :buildBlockFromCfg*retval :buildBlock*retval
-    * label *label347
  1075 return :buildBlockFromCfg*retaddr
  1076 end
  1077 label *label33
 
  1081 call *label32 *invalid :buildBlockFromCfg*retval (m:*label351) (h:*label351)
  1082 label *label351
  1083 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
-    * label *label350
  1084 return :buildBlockFromCfg.1*retaddr
  1085 end
  1086 label *label34
 
  1099 setaddr :meetTarget*retaddr *label354 (h:*label354)
  1100 call *label29 *invalid :meetTarget*retval (m:*label354) (h:*label354)
  1101 label *label354
-    * label *label352
  1102 return :meetTarget.1*retaddr
  1103 end
  1104 label *label36
  1105 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y 0 0 :getFloor:floor
-    * label *label360
  1106 jump *label361 notEqual :getFloor:floor @ore-titanium
-    * label *label362
  1107 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
  1108 jump *label359 always
  1109 label *label361
 
  1115 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1116 label *label363
  1117 label *label359
-    * label *label358
  1118 return :titaniumDrillScore*retaddr
  1119 end
  1120 label *label37
 
  1125 setaddr :moveTo*retaddr *label369 (h:*label369)
  1126 call *label11 *invalid :moveTo*retval (m:*label369) (h:*label369)
  1127 label *label369
-    * label *label368
  1128 set .positive 0
  1129 set .negative 0
  1130 set :titaniumDrillScore:x :buildTitaniumDrill:x
 
  1193 op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1
  1194 write :buildTitaniumDrill:count .controller ".flareTarget"
  1195 write :buildTitaniumDrill:count .display ".flareTarget"
-    * label *label380
  1196 label *label377
-    * label *label378
  1197 label *label374
-    * label *label375
  1198 label *label366
-    * label *label367
-    * label *label365
  1199 return :buildTitaniumDrill*retaddr
  1200 end
  1201 label *label38
 
  1214 write null .display ".nextBlock"
  1215 write 0 .controller ".leadReserve"
  1216 write 0 .controller ".siliconReserve"
-    * label *label381
  1217 return :buildUnits*retaddr
  1218 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-4 instructions):
 
   153 call *label28 *invalid :supplyBase*retval (m:*label68) (h:*label68)
   154 label *label68
   155 sensor *tmp148 .battery @totalPower
-    * jump *label69 greaterThanEq *tmp148 300
-    * jump *label67 always
+  156 jump *label67 lessThan *tmp148 300
   157 label *label69
   158 read *tmp90 .controller ".monos"
   159 jump *label65 lessThan *tmp90 3
 
   320 op add :buildTitaniumDrills:current :buildTitaniumDrills:current 1
   321 jump *label104 always
   322 label *label106
-    * jump *label113 lessThan :buildTitaniumDrills:count 8
-    * jump *label103 always
+  323 jump *label103 greaterThanEq :buildTitaniumDrills:count 8
   324 label *label113
   325 jump *label383 notEqual :buildTitaniumDrills:searching false
   326 label *label103
 
   566 op notEqual *tmp267 :mineOre:item null
   567 op notEqual *tmp268 :mineOre:item :mineOre:ore
   568 op land *tmp269 *tmp267 *tmp268
-    * jump *label195 equal *tmp269 false
-    * jump *label194 always
+  569 jump *label194 notEqual *tmp269 false
   570 label *label195
   571 ucontrol mine :mineOre:x :mineOre:y
-    * jump *label197 lessThanEq @second :mineOre:stop
-    * jump *label194 always
+  572 jump *label194 greaterThan @second :mineOre:stop
   573 label *label197
   574 sensor *tmp273 @unit @totalItems
   575 jump *label192 lessThan *tmp273 :mineOre:amount

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
   154 label *label68
   155 sensor *tmp148 .battery @totalPower
   156 jump *label67 lessThan *tmp148 300
-    * label *label69
   157 read *tmp90 .controller ".monos"
   158 jump *label65 lessThan *tmp90 3
   159 label *label67
 
   320 jump *label104 always
   321 label *label106
   322 jump *label103 greaterThanEq :buildTitaniumDrills:count 8
-    * label *label113
   323 jump *label383 notEqual :buildTitaniumDrills:searching false
   324 label *label103
   325 write false processor4 ":stopLocation*finished"
 
   565 op notEqual *tmp268 :mineOre:item :mineOre:ore
   566 op land *tmp269 *tmp267 *tmp268
   567 jump *label194 notEqual *tmp269 false
-    * label *label195
   568 ucontrol mine :mineOre:x :mineOre:y
   569 jump *label194 greaterThan @second :mineOre:stop
-    * label *label197
   570 sensor *tmp273 @unit @totalItems
   571 jump *label192 lessThan *tmp273 :mineOre:amount
   572 label *label194

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
   742 setaddr :fetchBlock*retaddr *label241 (h:*label241)
   743 call *label19 *invalid :fetchBlock*retval (m:*label241) (h:*label241)
   744 label *label241
-    * jump *label237 always
+  745 return :supplyBase*retaddr
   746 label *label236
   747 read *tmp90 .controller ".monos"
   748 jump *label242 lessThanEq *tmp90 3
 
   751 setaddr :mineOre.1*retaddr *label246 (h:*label246)
   752 call *label18 *invalid :mineOre.1*retval (m:*label246) (h:*label246)
   753 label *label246
-    * jump *label243 always
+  754 return :supplyBase*retaddr
   755 label *label242
   756 set :supplyBase0:supplied false
   757 jump *label248 notEqual .unloader1 null
 
   816 label *label273
   817 sensor *tmp379 .titaniumDrill @titanium
   818 jump *label274 greaterThanEq *tmp379 *tmp375
-    * jump *label276 notEqual :supplyBase0:supplied false
+  819 jump *label275 notEqual :supplyBase0:supplied false
   820 sensor *tmp384 .battery @totalPower
   821 op mul *tmp385 .unloader1 .powerTarget
   822 jump *label278 greaterThanEq *tmp384 *tmp385
 
   825 setaddr :mineOre.1*retaddr *label281 (h:*label281)
   826 call *label18 *invalid :mineOre.1*retval (m:*label281) (h:*label281)
   827 label *label281
-    * jump *label279 always
+  828 return :supplyBase*retaddr
   829 label *label278
   830 sensor *tmp388 .core @silicon
   831 jump *label282 greaterThanEq *tmp388 .targetSilicon
 
   839 setaddr :mineOre.1*retaddr *label287 (h:*label287)
   840 call *label18 *invalid :mineOre.1*retval (m:*label287) (h:*label287)
   841 label *label287
-    * jump *label283 always
+  842 return :supplyBase*retaddr
   843 label *label282
   844 sensor *tmp395 .core @copper
   845 jump *label288 greaterThanEq *tmp395 .targetCopper
 
   848 setaddr :mineOre.1*retaddr *label291 (h:*label291)
   849 call *label18 *invalid :mineOre.1*retval (m:*label291) (h:*label291)
   850 label *label291
-    * jump *label289 always
+  851 return :supplyBase*retaddr
   852 label *label288
   853 sensor *tmp398 .core @lead
   854 jump *label292 greaterThanEq *tmp398 .targetLead
 
   857 setaddr :mineOre.1*retaddr *label295 (h:*label295)
   858 call *label18 *invalid :mineOre.1*retval (m:*label295) (h:*label295)
   859 label *label295
-    * jump *label293 always
+  860 return :supplyBase*retaddr
   861 label *label292
   862 sensor *tmp401 .core @metaglass
   863 jump *label296 greaterThanEq *tmp401 .targetMetaglass
 
   866 setaddr :mineOre.1*retaddr *label299 (h:*label299)
   867 call *label18 *invalid :mineOre.1*retval (m:*label299) (h:*label299)
   868 label *label299
-    * jump *label297 always
+  869 return :supplyBase*retaddr
   870 label *label296
   871 write "Goal 10: supplying base" .display ".status1"
   872 sensor :supplyBase0:coal.1 .core @coal
 
   884 label *label283
   885 label *label279
   886 label *label276
-    * jump *label275 always
+  887 return :supplyBase*retaddr
   888 label *label274
   889 write "Goal 11: Fetching titanium" .display ".status1"
   890 set :fetchBlock:block .titaniumDrill
 
  1034 call *label30 *invalid :buildBlock*retval (m:*label346) (h:*label346)
  1035 label *label346
  1036 set :buildRemoteBlock*retval :buildBlock*retval
-    * jump *label342 always
+ 1037 return :buildRemoteBlock*retaddr
  1038 label *label343
  1039 set :buildRemoteBlock*retval false
-    * jump *label342 always
+ 1040 return :buildRemoteBlock*retaddr
  1041 label *label342
  1042 return :buildRemoteBlock*retaddr
  1043 end
 
  1097 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y 0 0 :getFloor:floor
  1098 jump *label361 notEqual :getFloor:floor @ore-titanium
  1099 op add :titaniumDrillScore:positive :titaniumDrillScore:positive 1
-    * jump *label359 always
+ 1100 return :titaniumDrillScore*retaddr
  1101 label *label361
  1102 jump *label364 equal :getFloor:floor @ore-copper
  1103 jump *label364 equal :getFloor:floor @ore-lead

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-24 instructions):
 
   446 call *label28 *invalid :supplyBase*retval (m:*label144) (h:*label144)
   447 label *label144
   448 jump *label141 always
-    * end
   449 label *label7
   450 write :status2:text .display ".status2"
   451 write :status2:item .display ".item2"
   452 write :status2:block .display ".block2"
   453 return :status2*retaddr
-    * end
   454 label *label9
   455 write :transportStatus:target .display ".transportTarget"
   456 write :transportStatus:item .display ".transportItem"
   457 return :transportStatus*retaddr
-    * end
   458 label *label10
   459 set .ERROR :error:error
   460 stop
   461 return :error*retaddr
-    * end
   462 label *label11
   463 write "Moving..." .display ".status3"
   464 op sub *tmp237 :moveTo:radius 0.5
 
   469 jump *label152 always
   470 label *label154
   471 return :moveTo*retaddr
-    * end
   472 label *label12
   473 write "Moving..." .display ".status3"
   474 label *label157
 
   480 ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp241
   481 jump *label157 equal *tmp241 false
   482 return :moveToEmpty*retaddr
-    * end
   483 label *label13
   484 label *label163
   485 sensor *tmp243 @unit @firstItem
 
   488 jump *label163 always
   489 label *label165
   490 return :dropAll*retaddr
-    * end
   491 label *label15
   492 write "Depositing..." .display ".status3"
   493 sensor *tmp247 @unit @firstItem
 
   522 call *label9 *invalid :transportStatus*retval (m:*label179) (h:*label179)
   523 label *label179
   524 return :depositItems*retaddr
-    * end
   525 label *label17
   526 op min :mineOre:amount :mineOre:amount 30
   527 set :transportStatus:target :mineOre:amount
 
   569 call *label15 *invalid :depositItems*retval (m:*label199) (h:*label199)
   570 label *label199
   571 return :mineOre*retaddr
-    * end
   572 label *label18
   573 set :status2:text "Mining "
   574 set :status2:item :mineOre.1:ore
 
   583 call *label17 *invalid :mineOre*retval (m:*label202) (h:*label202)
   584 label *label202
   585 return :mineOre.1*retaddr
-    * end
   586 label *label19
   587 sensor *tmp276 :fetchBlock:block @itemCapacity
   588 op min :transportStatus:target *tmp276 30
 
   626 call *label15 *invalid :depositItems*retval (m:*label213) (h:*label213)
   627 label *label213
   628 return :fetchBlock*retaddr
-    * end
   629 label *label20
   630 set :status2:text "Supplying "
   631 set :status2:item :supplyBlock:ore
 
   645 label *label218
   646 label *label216
   647 return :supplyBlock*retaddr
-    * end
   648 label *label27
   649 read *tmp306 :unpackCfg:cfg 0
   650 op sub *tmp307 *tmp306 35
 
   670 read *tmp339 :unpackCfg:cfg 10
   671 op sub :unpackCfg:rotation *tmp339 35
   672 return :unpackCfg*retaddr
-    * end
   673 label *label28
   674 jump *label232 notEqual .flareControllerStarted false
   675 read *tmp89 .controller ".flares"
 
   865 setaddr :mineOre.1*retaddr *label303 (h:*label303)
   866 call *label18 *invalid :mineOre.1*retval (m:*label303) (h:*label303)
   867 label *label303
-    * label *label297
-    * label *label293
-    * label *label289
-    * label *label283
-    * label *label279
-    * label *label276
   868 return :supplyBase*retaddr
   869 label *label274
   870 write "Goal 11: Fetching titanium" .display ".status1"
 
   874 call *label19 *invalid :fetchBlock*retval (m:*label305) (h:*label305)
   875 label *label305
   876 label *label275
-    * label *label243
-    * label *label237
   877 return :supplyBase*retaddr
-    * end
   878 label *label29
   879 op sign :meetTarget:count :meetTarget:copper
   880 op sign *tmp409 :meetTarget:lead
 
   963 jump *label317 always
   964 label *label319
   965 return :meetTarget*retaddr
-    * end
   966 label *label30
   967 set :meetTarget:block :buildBlock:block
   968 set :meetTarget:copper :buildBlock:copper
 
   988 jump *label341 equal *tmp462 false
   989 read :buildBlock*retval .blockBuilder ":buildBlockAt*retval"
   990 return :buildBlock*retaddr
-    * end
   991 label *label31
   992 jump *label343 lessThan :buildRemoteBlock:x 0
   993 set :unpackCfg:cfg :buildRemoteBlock:cfg
 
  1014 label *label343
  1015 set :buildRemoteBlock*retval false
  1016 return :buildRemoteBlock*retaddr
-    * label *label342
-    * return :buildRemoteBlock*retaddr
-    * end
  1017 label *label32
  1018 set :unpackCfg:cfg :buildBlockFromCfg:cfg
  1019 setaddr :unpackCfg*retaddr *label348 (h:*label348)
 
  1038 label *label349
  1039 set :buildBlockFromCfg*retval :buildBlock*retval
  1040 return :buildBlockFromCfg*retaddr
-    * end
  1041 label *label33
  1042 set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg
  1043 set :buildBlockFromCfg:config null
 
  1046 label *label351
  1047 set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval
  1048 return :buildBlockFromCfg.1*retaddr
-    * end
  1049 label *label34
  1050 set :unpackCfg:cfg :meetTarget.1:cfg
  1051 setaddr :unpackCfg*retaddr *label353 (h:*label353)
 
  1063 call *label29 *invalid :meetTarget*retval (m:*label354) (h:*label354)
  1064 label *label354
  1065 return :meetTarget.1*retaddr
-    * end
  1066 label *label36
  1067 ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore:y 0 0 :getFloor:floor
  1068 jump *label361 notEqual :getFloor:floor @ore-titanium
 
  1076 label *label364
  1077 op add :titaniumDrillScore:negative :titaniumDrillScore:negative 1
  1078 label *label363
-    * label *label359
  1079 return :titaniumDrillScore*retaddr
-    * end
  1080 label *label37
  1081 jump *label366 greaterThanEq :buildTitaniumDrill:count 8
  1082 set :moveTo:x :buildTitaniumDrill:x
 
  1157 label *label374
  1158 label *label366
  1159 return :buildTitaniumDrill*retaddr
-    * end
  1160 label *label38
  1161 set :meetTarget:block 0
  1162 set :meetTarget:copper 0
 
  1174 write 0 .controller ".leadReserve"
  1175 write 0 .controller ".siliconReserve"
  1176 return :buildUnits*retaddr
-    * end

Final code before resolving virtual instructions:

    0:  jump *label467 always 0 0
    1:  draw triangle bank1 processor1 processor2 processor3 processor4 processor5
    2:  draw triangle .ERROR .battery .blockBuilder .builder .controller .core
    3:  draw triangle .coreX .coreY .display .flareController .flareControllerStarted .generator
    4:  draw triangle .graphiteSurplus .leadSurplus .metaglassSurplus .negative .positive .powerTarget
    5:  draw triangle .press .siliconSurplus .smelter .targetCopper .targetGraphite .targetLead
    6:  draw triangle .targetMetaglass .targetSilicon .targetThorium .targetTitanium .thoriumContainer .thoriumDrill
    7:  draw triangle .thoriumGenerator .titaniumDrill .unloader1 :buildBlock:block :buildBlock:config :buildBlock:copper
    8:  draw triangle :buildBlock:graphite :buildBlock:lead :buildBlock:metaglass :buildBlock:rotation :buildBlock:silicon :buildBlock:thorium
    9:  draw triangle :buildBlock:titanium :buildBlock:x :buildBlock:y :buildBlockFromCfg.1:cfg :buildBlockFromCfg:cfg :buildBlockFromCfg:config
   10:  draw triangle :buildFirstTitaniumDrill:dx :buildFirstTitaniumDrill:dy :buildFirstTitaniumDrill:result :buildRemoteBlock:cfg :buildRemoteBlock:x :buildRemoteBlock:y
   11:  draw triangle :buildThoriumDrill:result :buildTitaniumDrill:count :buildTitaniumDrill:drill :buildTitaniumDrill:x :buildTitaniumDrill:y :buildTitaniumDrills:count
   12:  draw triangle :buildTitaniumDrills:current :buildTitaniumDrills:index :buildTitaniumDrills:searching :buildTitaniumDrills:size :buildTitaniumDrills:x :buildTitaniumDrills:y
   13:  draw triangle :depositItems:block :depositItems:cap :depositItems:item :error:error :fetchBlock:block :fetchBlock:item
   14:  draw triangle :fetchBlock:unitItem :getFloor:floor :locateOre:x :locateOre:y :meetTarget:block :meetTarget.1:cfg
   15:  draw triangle :meetTarget:copper :meetTarget:count :meetTarget:graphite :meetTarget:lead :meetTarget:metaglass :meetTarget:silicon
   16:  draw triangle :meetTarget:thorium :meetTarget:titanium :mineOre:amount :mineOre:block :mineOre:item :mineOre.1:ore
   17:  draw triangle :mineOre:ore :mineOre:stop :mineOre:x :mineOre:y :moveTo:radius :moveTo:x
   18:  draw triangle :moveTo:y :moveToEmpty:x :moveToEmpty:y :status2:block :status2:item :status2:text
   19:  draw triangle :supplyBase0:coal.1 :supplyBase0:coal :supplyBase0:sand.1 :supplyBase0:sand :supplyBase0:supplied :supplyBlock:block
   20:  draw triangle :supplyBlock:blockCapacity :supplyBlock:missing :supplyBlock:ore :supplyBlockFromCore:item :supplyBlockFromCore:target :supplyBlockFromCore:unitItem
   21:  draw triangle :titaniumDrillScore:negative :titaniumDrillScore:positive :titaniumDrillScore:x :titaniumDrillScore:y :transportStatus:item :transportStatus:target
   22:  draw triangle :unpackCfg:cfg :unpackCfg:cu :unpackCfg:gr :unpackCfg:mg :unpackCfg:pb :unpackCfg:rotation
   23:  draw triangle :unpackCfg:si :unpackCfg:th :unpackCfg:ti :unpackCfg:type :unpackCfg:x :unpackCfg:y
        label *label467
   24:  set .ERROR ""                                                Actions.mnd: volatile var ERROR = "";
   25:  set .press null                                              CoreBuilder.mnd: var
   26:  set .generator null                                          ...
   27:  set .battery null                                            ...
   28:  set .smelter null                                            ...
   29:  set .titaniumDrill null                                      ...
   30:  set .unloader1 null                                          ...
   31:  set .thoriumContainer null                                   ...
   32:  set .thoriumGenerator null                                   ...
   33:  set .leadSurplus 0                                           CoreBuilder.mnd: var
   34:  set .graphiteSurplus 20                                      ...
   35:  set .siliconSurplus 20                                       ...
   36:  set .metaglassSurplus 20                                     ...
   37:  set .flareControllerStarted false                            CoreBuilder.mnd: var
   38:  write 511 bank1 511                                          CoreBuilder.mnd: external bank1[511] logPosition = 511;
   39:  set .positive 0                                              CoreBuilder.mnd: volatile var positive = 0, negative = 0;
   40:  set .negative 0                                              ...
        label *label39                                               CoreBuilder.mnd: do
   41:  ubind @poly                                                  CoreBuilder.mnd: builder = ubind(@poly);
   42:  set .builder @unit                                           ...
   43:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
   44:  jump *label39 equal .core null                               CoreBuilder.mnd: do
   45:  set .display processor1                                      CoreBuilder.mnd: display = processor1;
   46:  set .flareController processor3                              CoreBuilder.mnd: flareController = processor3;
   47:  set .blockBuilder processor5                                 CoreBuilder.mnd: blockBuilder = processor5;
   48:  set :buildBlockFromCfg.1:cfg "#'+nA######"                   CoreBuilder.mnd: press = buildBlockFromCfg(PRESS);
   49:  setaddr :buildBlockFromCfg.1*retaddr *label42                ...
   50:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label42                                               ...
   51:  set .press :buildBlockFromCfg.1*retval                       ...
   52:  set :buildBlockFromCfg.1:cfg "k*/(7######"                   CoreBuilder.mnd: battery = buildBlockFromCfg(BATTERY1);
   53:  setaddr :buildBlockFromCfg.1*retaddr *label43                ...
   54:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label43                                               ...
   55:  set .battery :buildBlockFromCfg.1*retval                     ...
   56:  set :buildBlockFromCfg.1:cfg "k+/(7######"                   CoreBuilder.mnd: buildBlockFromCfg(BATTERY2);
   57:  setaddr :buildBlockFromCfg.1*retaddr *label44                ...
   58:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label44                                               ...
   59:  set :buildBlockFromCfg.1:cfg "m*.<2######"                   CoreBuilder.mnd: generator = buildBlockFromCfg(GENERATOR);
   60:  setaddr :buildBlockFromCfg.1*retaddr *label45                ...
   61:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label45                                               ...
   62:  set .generator :buildBlockFromCfg.1*retval                   ...
   63:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
   64:  set :buildBlockFromCfg.1:cfg "%+-A<######"                   CoreBuilder.mnd: smelter = buildBlockFromCfg(SMELTER);
   65:  setaddr :buildBlockFromCfg.1*retaddr *label46                ...
   66:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label46                                               ...
   67:  set .smelter :buildBlockFromCfg.1*retval                     ...
   68:  set :buildBlockFromCfg.1:cfg "T+,%%######"                   CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT1);
   69:  setaddr :buildBlockFromCfg.1*retaddr *label47                ...
   70:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label47                                               ...
   71:  set :meetTarget.1:cfg "w**5#-#####"                          CoreBuilder.mnd: meetTarget(cfg);
   72:  setaddr :meetTarget.1*retaddr *label49                       ...
   73:  call *label34 *invalid :meetTarget.1*retval                  ...
        label *label49                                               ...
   74:  write @titanium processor1 ".nextBlock"                      CoreBuilder.mnd: display.nextBlock = @titanium;
   75:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: var result = oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 2, 4, out dx, out dy);
   76:  write .coreY processor4 ":findDrillLocation:y"               ...
   77:  write @unit processor4 ":findDrillLocation:unit"             ...
   78:  write @titanium processor4 ":findDrillLocation:item"         ...
   79:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
   80:  write 2 processor4 ":findDrillLocation:size"                 ...
   81:  write 4 processor4 ":findDrillLocation:limit"                ...
   82:  write false processor4 ":findDrillLocation*finished"         ...
   83:  write 1 processor4 "@counter"                                ...
        label *label50                                               ...
   84:  wait 1e-15                                                   ...
   85:  read *tmp130 processor4 ":findDrillLocation*finished"        ...
   86:  jump *label50 equal *tmp130 false                            ...
   87:  read :buildFirstTitaniumDrill:dx processor4 ":findDrillLocat ...
   88:  read :buildFirstTitaniumDrill:dy processor4 ":findDrillLocat ...
   89:  read :buildFirstTitaniumDrill:result processor4 ":findDrillL ...
   90:  jump *label51 notEqual :buildFirstTitaniumDrill:result false CoreBuilder.mnd: if !result then error("Cannot locate spot for titanium drill"); end;
   91:  set :error:error "Cannot locate spot for titanium drill"     ...
   92:  setaddr :error*retaddr *label53                              ...
   93:  call *label10 *invalid :error*retval                         ...
        label *label53                                               ...
        label *label51                                               ...
   94:  write @pneumatic-drill processor1 ".nextBlock"               CoreBuilder.mnd: display.nextBlock = @pneumatic-drill;
   95:  write @pneumatic-drill processor5 ":buildBlockAt:block"      CoreBuilder.mnd: return blockBuilder.buildBlockAt(@pneumatic-drill, dx, dy, null, 0);
   96:  write :buildFirstTitaniumDrill:dx processor5 ":buildBlockAt: ...
   97:  write :buildFirstTitaniumDrill:dy processor5 ":buildBlockAt: ...
   98:  write null processor5 ":buildBlockAt:rotation"               ...
   99:  write 0 processor5 ":buildBlockAt:config"                    ...
  100:  write false processor5 ":buildBlockAt*finished"              ...
  101:  write 1 processor5 "@counter"                                ...
        label *label54                                               ...
  102:  wait 1e-15                                                   ...
  103:  read *tmp139 processor5 ":buildBlockAt*finished"             ...
  104:  jump *label54 equal *tmp139 false                            ...
  105:  read *tmp119 processor5 ":buildBlockAt*retval"               ...
  106:  set .titaniumDrill *tmp119                                   CoreBuilder.mnd: titaniumDrill = buildFirstTitaniumDrill(PNEUMATIC_DRILL);
  107:  write *tmp119 processor1 ".titaniumDrill"                    CoreBuilder.mnd: display.titaniumDrill = titaniumDrill;
  108:  set :buildBlockFromCfg.1:cfg "*,###A<###"                   CoreBuilder.mnd: unloader1 = buildBlockFromCfg(UNLOADER1);
  109:  setaddr :buildBlockFromCfg.1*retaddr *label55                ...
  110:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label55                                               ...
  111:  set .unloader1 :buildBlockFromCfg.1*retval                   ...
  112:  set :buildBlockFromCfg.1:cfg "T),%%######"                   CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT2);
  113:  setaddr :buildBlockFromCfg.1*retaddr *label56                ...
  114:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label56                                               ...
  115:  set :buildBlockFromCfg.1:cfg "W*-'%######"                   CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE1);
  116:  setaddr :buildBlockFromCfg.1*retaddr *label57                ...
  117:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label57                                               ...
  118:  set .graphiteSurplus 100                                     CoreBuilder.mnd: graphiteSurplus = 100;
  119:  set :buildBlockFromCfg:cfg "®-.}U#U####"                     CoreBuilder.mnd: controller = buildBlockFromCfg(PROCESSOR, processor2);
  120:  set :buildBlockFromCfg:config processor2                     ...
  121:  setaddr :buildBlockFromCfg*retaddr *label58                  ...
  122:  call *label32 *invalid :buildBlockFromCfg*retval             ...
        label *label58                                               ...
  123:  set .controller :buildBlockFromCfg*retval                    ...
  124:  write processor1 :buildBlockFromCfg*retval ".display"        CoreBuilder.mnd: controller.display = display;
  125:  write .core :buildBlockFromCfg*retval ".core"                CoreBuilder.mnd: controller.core = core;
  126:  write bank1 :buildBlockFromCfg*retval ".bank"                CoreBuilder.mnd: controller.bank = bank1;
  127:  write .battery :buildBlockFromCfg*retval ".battery"          CoreBuilder.mnd: controller.battery = battery;
  128:  write .generator :buildBlockFromCfg*retval ".generator"      CoreBuilder.mnd: controller.generator = generator;
  129:  write .smelter :buildBlockFromCfg*retval ".smelter"          CoreBuilder.mnd: controller.smelter = smelter;
  130:  write .press :buildBlockFromCfg*retval ".press"              CoreBuilder.mnd: controller.press = press;
  131:  write .unloader1 :buildBlockFromCfg*retval ".unloader1"      CoreBuilder.mnd: controller.unloader1 = unloader1;
  132:  set :buildBlockFromCfg.1:cfg "g)'%)######"                   CoreBuilder.mnd: buildBlockFromCfg(POWER_NODE);
  133:  setaddr :buildBlockFromCfg.1*retaddr *label59                ...
  134:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label59                                               ...
  135:  set :buildBlockFromCfg.1:cfg "(*###A<###"                   CoreBuilder.mnd: controller.unloader2 = buildBlockFromCfg(UNLOADER2);
  136:  setaddr :buildBlockFromCfg.1*retaddr *label60                ...
  137:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label60                                               ...
  138:  write :buildBlockFromCfg.1*retval .controller ".unloader2"   ...
  139:  set :buildBlockFromCfg.1:cfg "'(_i#####&"                   CoreBuilder.mnd: var factory = buildBlockFromCfg(AIR_FACTORY);
  140:  setaddr :buildBlockFromCfg.1*retaddr *label61                ...
  141:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label61                                               ...
  142:  write :buildBlockFromCfg.1*retval .controller ".factory"     CoreBuilder.mnd: controller.factory = factory;
  143:  write :buildBlockFromCfg.1*retval processor1 ".airFactory"   CoreBuilder.mnd: display.airFactory = factory;
  144:  write 1 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  145:  write 1 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
  146:  write 3 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  147:  write 3 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  148:  write 85 .controller ".pressTarget"                          CoreBuilder.mnd: controller.pressTarget = 85;
  149:  write 150 .controller ".smelterTarget"                       CoreBuilder.mnd: controller.smelterTarget = 150;
  150:  write 30 .controller ".kilnTarget"                           CoreBuilder.mnd: controller.kilnTarget = 30;
  151:  set .leadSurplus 20                                          CoreBuilder.mnd: siliconSurplus = leadSurplus = 20;
  152:  set .siliconSurplus 20                                       ...
  153:  setaddr :buildUnits*retaddr *label64                         CoreBuilder.mnd: buildUnits();
  154:  call *label38 *invalid :buildUnits*retval                    ...
        label *label64                                               ...
        label *label65                                               CoreBuilder.mnd: do
  155:  setaddr :supplyBase*retaddr *label68                         CoreBuilder.mnd: supplyBase();
  156:  call *label28 *invalid :supplyBase*retval                    ...
        label *label68                                               ...
  157:  sensor *tmp148 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < 300 then break; end;
  158:  jump *label67 lessThan *tmp148 300                           ...
  159:  read *tmp90 .controller ".monos"                             CoreBuilder.mnd: while controller.monos < 3;
  160:  jump *label65 lessThan *tmp90 3                              CoreBuilder.mnd: do
        label *label67                                               ...
  161:  set .siliconSurplus 65                                       CoreBuilder.mnd: siliconSurplus = 65;
  162:  set :buildBlockFromCfg.1:cfg ",)###A<###"                   CoreBuilder.mnd: buildBlockFromCfg(UNLOADER3);
  163:  setaddr :buildBlockFromCfg.1*retaddr *label71                ...
  164:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label71                                               ...
  165:  set :buildBlockFromCfg.1:cfg "T,*%%######"                   CoreBuilder.mnd: buildBlockFromCfg(INVERTED_SORT3);
  166:  setaddr :buildBlockFromCfg.1*retaddr *label72                ...
  167:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label72                                               ...
  168:  set :buildBlockFromCfg.1:cfg "',+_AA#####"                   CoreBuilder.mnd: kiln = buildBlockFromCfg(KILN);
  169:  setaddr :buildBlockFromCfg.1*retaddr *label73                ...
  170:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label73                                               ...
  171:  write :buildBlockFromCfg.1*retval .controller ".kiln"        CoreBuilder.mnd: controller.kiln = kiln;
  172:  set :buildBlockFromCfg.1:cfg "z%-AAA##A##"                   CoreBuilder.mnd: buildBlockFromCfg(WATER_EXT);
  173:  setaddr :buildBlockFromCfg.1*retaddr *label74                ...
  174:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label74                                               ...
  175:  set :buildBlockFromCfg.1:cfg "W'*'%######"                   CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE2);
  176:  setaddr :buildBlockFromCfg.1*retaddr *label75                ...
  177:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label75                                               ...
  178:  set :buildBlockFromCfg.1:cfg "W&*'%######"                   CoreBuilder.mnd: buildBlockFromCfg(OVERFLOW_GATE3);
  179:  setaddr :buildBlockFromCfg.1*retaddr *label76                ...
  180:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label76                                               ...
  181:  set :buildBlockFromCfg.1:cfg "o%+FK<A####"                   CoreBuilder.mnd: controller.generator2 = buildBlockFromCfg(STEAM_GEN);
  182:  setaddr :buildBlockFromCfg.1*retaddr *label77                ...
  183:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label77                                               ...
  184:  write :buildBlockFromCfg.1*retval .controller ".generator2"  ...
  185:  set :buildBlockFromCfg.1:cfg "$(.#U<###"                   CoreBuilder.mnd: controller.multipress = buildBlockFromCfg(MULTIPRESS);
  186:  setaddr :buildBlockFromCfg.1*retaddr *label78                ...
  187:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label78                                               ...
  188:  write :buildBlockFromCfg.1*retval .controller ".multipress"  ...
  189:  set .graphiteSurplus 200                                     CoreBuilder.mnd: graphiteSurplus = 200;
  190:  set :buildBlockFromCfg.1:cfg " '%-#2#####"                   CoreBuilder.mnd: controller.payloadRouter = buildBlockFromCfg(PAYLOAD_ROUTER);
  191:  setaddr :buildBlockFromCfg.1*retaddr *label79                ...
  192:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label79                                               ...
  193:  write :buildBlockFromCfg.1*retval .controller ".payloadRoute ...
  194:  set :buildBlockFromCfg.1:cfg "*(###A<###"                   CoreBuilder.mnd: buildBlockFromCfg(UNLOADER4);
  195:  setaddr :buildBlockFromCfg.1*retaddr *label80                ...
  196:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label80                                               ...
  197:  set :buildBlockFromCfg.1:cfg "X*''%######"                   CoreBuilder.mnd: buildBlockFromCfg(UNDERFLOW_GATE);
  198:  setaddr :buildBlockFromCfg.1*retaddr *label81                ...
  199:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label81                                               ...
  200:  set :buildBlockFromCfg.1:cfg "*%ë#}####"                   CoreBuilder.mnd: var reconstructor = buildBlockFromCfg(ADDITIVE_REC);
  201:  setaddr :buildBlockFromCfg.1*retaddr *label82                ...
  202:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label82                                               ...
  203:  write :buildBlockFromCfg.1*retval .controller ".reconstructo CoreBuilder.mnd: controller.reconstructor = reconstructor;
  204:  write :buildBlockFromCfg.1*retval processor1 ".reconstructor CoreBuilder.mnd: display.reconstructor = reconstructor;
  205:  set :buildBlockFromCfg.1:cfg "l/-#U#A7###"                   CoreBuilder.mnd: buildBlockFromCfg(BATTERY_LARGE);
  206:  setaddr :buildBlockFromCfg.1*retaddr *label83                ...
  207:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label83                                               ...
  208:  setaddr :buildUnits*retaddr *label84                         CoreBuilder.mnd: buildUnits();
  209:  call *label38 *invalid :buildUnits*retval                    ...
        label *label84                                               ...
  210:  set .siliconSurplus 1000                                     CoreBuilder.mnd: siliconSurplus = 1000;
  211:  set .metaglassSurplus 200                                    CoreBuilder.mnd: metaglassSurplus = 200;
  212:  write 4 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = target;
  213:  write 4 processor1 ".polyTarget"                             CoreBuilder.mnd: display.polyTarget = target;
  214:  set :buildBlockFromCfg.1:cfg "%-)A<######"                   CoreBuilder.mnd: controller.smelter2 = buildBlockFromCfg(SMELTER2);
  215:  setaddr :buildBlockFromCfg.1*retaddr *label86                ...
  216:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label86                                               ...
  217:  write :buildBlockFromCfg.1*retval .controller ".smelter2"    ...
  218:  set :buildBlockFromCfg:cfg "--###A<###"                     CoreBuilder.mnd: buildBlockFromCfg(UNLOADER5, @sand);
  219:  set :buildBlockFromCfg:config @sand                          ...
  220:  setaddr :buildBlockFromCfg*retaddr *label87                  ...
  221:  call *label32 *invalid :buildBlockFromCfg*retval             ...
        label *label87                                               ...
  222:  setaddr :buildUnits*retaddr *label88                         CoreBuilder.mnd: buildUnits();
  223:  call *label38 *invalid :buildUnits*retval                    ...
        label *label88                                               ...
        label *label89                                               CoreBuilder.mnd: while controller.polys < 2 do
  224:  read *tmp91 .controller ".polys"                             ...
  225:  jump *label91 greaterThanEq *tmp91 2                         ...
  226:  setaddr :supplyBase*retaddr *label92                         CoreBuilder.mnd: supplyBase();
  227:  call *label28 *invalid :supplyBase*retval                    ...
        label *label92                                               ...
  228:  jump *label89 always 0 0                                     CoreBuilder.mnd: while controller.polys < 2 do
        label *label91                                               ...
  229:  write 3 .controller ".flareTarget"                           CoreBuilder.mnd: controller.flareTarget = target;
  230:  write 3 processor1 ".flareTarget"                            CoreBuilder.mnd: display.flareTarget = target;
        label *label94                                               CoreBuilder.mnd: while controller.flares < 2 do
  231:  read *tmp89 .controller ".flares"                            ...
  232:  jump *label96 greaterThanEq *tmp89 2                         ...
  233:  setaddr :supplyBase*retaddr *label97                         CoreBuilder.mnd: supplyBase();
  234:  call *label28 *invalid :supplyBase*retval                    ...
        label *label97                                               ...
  235:  jump *label94 always 0 0                                     CoreBuilder.mnd: while controller.flares < 2 do
        label *label96                                               ...
  236:  write 8 .controller ".monoTarget"                            CoreBuilder.mnd: controller.monoTarget = target;
  237:  write 8 processor1 ".monoTarget"                             CoreBuilder.mnd: display.monoTarget = target;
  238:  write 6 .controller ".polyTarget"                            CoreBuilder.mnd: controller.polyTarget = target;
  239:  write 6 processor1 ".polyTarget"                             CoreBuilder.mnd: display.polyTarget = target;
  240:  write @ore-titanium processor1 ".nextBlock"                  CoreBuilder.mnd: display.nextBlock = @ore-titanium;
  241:  wait 0.000000001                                             CoreBuilder.mnd: wait(1e-9);
  242:  ubind @flare                                                 CoreBuilder.mnd: ubind(@flare);
  243:  read *tmp51 processor4 ".locations"                          CoreBuilder.mnd: var current = oreLocator.locations;
  244:  set :buildTitaniumDrills:current *tmp51                      ...
  245:  write .coreX processor4 ":findDrillLocation:x"               CoreBuilder.mnd: async(oreLocator.findDrillLocation(coreX, coreY, @unit, @titanium, @ore-titanium, 4, 1e9));
  246:  write .coreY processor4 ":findDrillLocation:y"               ...
  247:  write @unit processor4 ":findDrillLocation:unit"             ...
  248:  write @titanium processor4 ":findDrillLocation:item"         ...
  249:  write @ore-titanium processor4 ":findDrillLocation:ore"      ...
  250:  write 4 processor4 ":findDrillLocation:size"                 ...
  251:  write 1000000000 processor4 ":findDrillLocation:limit"       ...
  252:  write false processor4 ":findDrillLocation*finished"         ...
  253:  write 1 processor4 "@counter"                                ...
  254:  ubind .builder                                               CoreBuilder.mnd: ubind(builder);
  255:  set :buildTitaniumDrills:count 1                             CoreBuilder.mnd: var count = 1, searching = true;
        label *label383                                              CoreBuilder.mnd: while searching do
  256:  read *tmp179 processor4 ":findDrillLocation*finished"        CoreBuilder.mnd: searching = !finished(oreLocator.findDrillLocation);
  257:  op equal :buildTitaniumDrills:searching *tmp179 false        ...
        label *label104                                              CoreBuilder.mnd: while current < oreLocator.locations do
  258:  read *tmp51 processor4 ".locations"                          ...
  259:  jump *label106 greaterThanEq :buildTitaniumDrills:current *t ...
  260:  op mul :buildTitaniumDrills:index :buildTitaniumDrills:curre CoreBuilder.mnd: var index = current * 4;
  261:  op add *tmp183 :buildTitaniumDrills:index 1                  CoreBuilder.mnd: var size = bank1[index + 1];
  262:  read :buildTitaniumDrills:size bank1 *tmp183                 ...
  263:  jump *label107 lessThan :buildTitaniumDrills:size 3          CoreBuilder.mnd: if size >= 3 then
  264:  op add *tmp188 :buildTitaniumDrills:index 2                  CoreBuilder.mnd: var x = bank1[index + 2];
  265:  read :buildTitaniumDrills:x bank1 *tmp188                    ...
  266:  op add *tmp191 :buildTitaniumDrills:index 3                  CoreBuilder.mnd: var y = bank1[index + 3];
  267:  read :buildTitaniumDrills:y bank1 *tmp191                    ...
  268:  op sub *tmp194 :buildTitaniumDrills:x 1                      CoreBuilder.mnd: buildTitaniumDrill(x - 1, y - 1, in out count);
  269:  op sub *tmp195 :buildTitaniumDrills:y 1                      ...
  270:  set :buildTitaniumDrill:x *tmp194                            ...
  271:  set :buildTitaniumDrill:y *tmp195                            ...
  272:  set :buildTitaniumDrill:count :buildTitaniumDrills:count     ...
  273:  setaddr :buildTitaniumDrill*retaddr *label109                ...
  274:  call *label37 *invalid :buildTitaniumDrill*retval            ...
        label *label109                                              ...
  275:  op add *tmp196 :buildTitaniumDrills:x 1                      CoreBuilder.mnd: buildTitaniumDrill(x + 1, y - 1, in out count);
  276:  set :buildTitaniumDrill:x *tmp196                            ...
  277:  set :buildTitaniumDrill:y *tmp195                            ...
  278:  setaddr :buildTitaniumDrill*retaddr *label110                ...
  279:  call *label37 *invalid :buildTitaniumDrill*retval            ...
        label *label110                                              ...
  280:  op add *tmp199 :buildTitaniumDrills:y 1                      CoreBuilder.mnd: buildTitaniumDrill(x - 1, y + 1, in out count);
  281:  set :buildTitaniumDrill:x *tmp194                            ...
  282:  set :buildTitaniumDrill:y *tmp199                            ...
  283:  setaddr :buildTitaniumDrill*retaddr *label111                ...
  284:  call *label37 *invalid :buildTitaniumDrill*retval            ...
        label *label111                                              ...
  285:  set :buildTitaniumDrill:x *tmp196                            CoreBuilder.mnd: buildTitaniumDrill(x + 1, y + 1, in out count);
  286:  set :buildTitaniumDrill:y *tmp199                            ...
  287:  setaddr :buildTitaniumDrill*retaddr *label112                ...
  288:  call *label37 *invalid :buildTitaniumDrill*retval            ...
        label *label112                                              ...
  289:  set :buildTitaniumDrills:count :buildTitaniumDrill:count     ...
        label *label107                                              CoreBuilder.mnd: if size >= 3 then
  290:  op add :buildTitaniumDrills:current :buildTitaniumDrills:cur CoreBuilder.mnd: while current < oreLocator.locations do
  291:  jump *label104 always 0 0                                    ...
        label *label106                                              ...
  292:  jump *label103 greaterThanEq :buildTitaniumDrills:count 8    CoreBuilder.mnd: if count >= 8 then break; end;
  293:  jump *label383 notEqual :buildTitaniumDrills:searching false CoreBuilder.mnd: while searching do
        label *label103                                              ...
  294:  write false processor4 ":stopLocation*finished"              CoreBuilder.mnd: async(oreLocator.stopLocation());
  295:  write 3 processor4 "@counter"                                ...
  296:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  297:  write .coreX processor4 ":layoutThoriumDrill:x"              CoreBuilder.mnd: oreLocator.layoutThoriumDrill(coreX, coreY, @unit, 7);
  298:  write .coreY processor4 ":layoutThoriumDrill:y"              ...
  299:  write @unit processor4 ":layoutThoriumDrill:unit"            ...
  300:  write 7 processor4 ":layoutThoriumDrill:limit"               ...
  301:  write false processor4 ":layoutThoriumDrill*finished"        ...
  302:  write 2 processor4 "@counter"                                ...
        label *label116                                              ...
  303:  wait 1e-15                                                   ...
  304:  read *tmp209 processor4 ":layoutThoriumDrill*finished"       ...
  305:  jump *label116 equal *tmp209 false                           ...
  306:  set :meetTarget.1:cfg "x**F#AA7###"                          CoreBuilder.mnd: meetTarget(LASER_DRILL);
  307:  setaddr :meetTarget.1*retaddr *label117                      ...
  308:  call *label34 *invalid :meetTarget.1*retval                  ...
        label *label117                                              ...
        label *label118                                              CoreBuilder.mnd: var result = await(oreLocator.layoutThoriumDrill);
  309:  wait 1e-15                                                   ...
  310:  read *tmp211 processor4 ":layoutThoriumDrill*finished"       ...
  311:  jump *label118 equal *tmp211 false                           ...
  312:  read :buildThoriumDrill:result processor4 ":layoutThoriumDri ...
  313:  jump *label119 notEqual :buildThoriumDrill:result false      CoreBuilder.mnd: if !result then error("Cannot locate spot for thorium drill"); end;
  314:  set :error:error "Cannot locate spot for thorium drill"      ...
  315:  setaddr :error*retaddr *label121                             ...
  316:  call *label10 *invalid :error*retval                         ...
        label *label121                                              ...
        label *label119                                              ...
  317:  write @laser-drill processor5 ":buildBlockAt:block"          CoreBuilder.mnd: thoriumDrill = blockBuilder.buildBlockAt(@laser-drill, oreLocator.drillX, oreLocator.drillY, null, 0);
  318:  read *tmp52 processor4 ".drillX"                             ...
  319:  write *tmp52 processor5 ":buildBlockAt:x"                    ...
  320:  read *tmp53 processor4 ".drillY"                             ...
  321:  write *tmp53 processor5 ":buildBlockAt:y"                    ...
  322:  write null processor5 ":buildBlockAt:rotation"               ...
  323:  write 0 processor5 ":buildBlockAt:config"                    ...
  324:  write false processor5 ":buildBlockAt*finished"              ...
  325:  write 1 processor5 "@counter"                                ...
        label *label122                                              ...
  326:  wait 1e-15                                                   ...
  327:  read *tmp220 processor5 ":buildBlockAt*finished"             ...
  328:  jump *label122 equal *tmp220 false                           ...
  329:  read .thoriumDrill processor5 ":buildBlockAt*retval"         ...
  330:  set :buildRemoteBlock:cfg "z%-AAA##A##"                      CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water1X, oreLocator.water1Y);
  331:  read :buildRemoteBlock:x processor4 ".water1X"               ...
  332:  read :buildRemoteBlock:y processor4 ".water1Y"               ...
  333:  setaddr :buildRemoteBlock*retaddr *label123                  ...
  334:  call *label31 *invalid :buildRemoteBlock*retval              ...
        label *label123                                              ...
  335:  read :buildRemoteBlock:x processor4 ".water2X"               CoreBuilder.mnd: buildRemoteBlock(WATER_EXT, oreLocator.water2X, oreLocator.water2Y);
  336:  read :buildRemoteBlock:y processor4 ".water2Y"               ...
  337:  setaddr :buildRemoteBlock*retaddr *label124                  ...
  338:  call *label31 *invalid :buildRemoteBlock*retval              ...
        label *label124                                              ...
  339:  set :buildRemoteBlock:cfg "o%+FK<A####"                      CoreBuilder.mnd: thoriumGenerator = buildRemoteBlock(STEAM_GEN, oreLocator.generatorX, oreLocator.generatorY);
  340:  read :buildRemoteBlock:x processor4 ".generatorX"            ...
  341:  read :buildRemoteBlock:y processor4 ".generatorY"            ...
  342:  setaddr :buildRemoteBlock*retaddr *label125                  ...
  343:  call *label31 *invalid :buildRemoteBlock*retval              ...
        label *label125                                              ...
  344:  set .thoriumGenerator :buildRemoteBlock*retval               ...
  345:  set :buildRemoteBlock:cfg "g)'%)######"                      CoreBuilder.mnd: buildRemoteBlock(POWER_NODE, oreLocator.nodeX, oreLocator.nodeY);
  346:  read :buildRemoteBlock:x processor4 ".nodeX"                 ...
  347:  read :buildRemoteBlock:y processor4 ".nodeY"                 ...
  348:  setaddr :buildRemoteBlock*retaddr *label126                  ...
  349:  call *label31 *invalid :buildRemoteBlock*retval              ...
        label *label126                                              ...
  350:  set :buildRemoteBlock:cfg "r**#-#+####"                      CoreBuilder.mnd: buildRemoteBlock(SOLAR_PANEL, oreLocator.panelX, oreLocator.panelY);
  351:  read :buildRemoteBlock:x processor4 ".panelX"                ...
  352:  read :buildRemoteBlock:y processor4 ".panelY"                ...
  353:  setaddr :buildRemoteBlock*retaddr *label127                  ...
  354:  call *label31 *invalid :buildRemoteBlock*retval              ...
        label *label127                                              ...
  355:  set :buildRemoteBlock:cfg "k*/(7######"                      CoreBuilder.mnd: buildRemoteBlock(BATTERY1, oreLocator.batteryX, oreLocator.batteryY);
  356:  read :buildRemoteBlock:x processor4 ".batteryX"              ...
  357:  read :buildRemoteBlock:y processor4 ".batteryY"              ...
  358:  setaddr :buildRemoteBlock*retaddr *label128                  ...
  359:  call *label31 *invalid :buildRemoteBlock*retval              ...
        label *label128                                              ...
  360:  set :buildRemoteBlock:cfg "**#######"                      CoreBuilder.mnd: thoriumContainer = buildRemoteBlock(CONTAINER, oreLocator.containerX, oreLocator.containerY);
  361:  read :buildRemoteBlock:x processor4 ".containerX"            ...
  362:  read :buildRemoteBlock:y processor4 ".containerY"            ...
  363:  setaddr :buildRemoteBlock*retaddr *label129                  ...
  364:  call *label31 *invalid :buildRemoteBlock*retval              ...
        label *label129                                              ...
  365:  set .thoriumContainer :buildRemoteBlock*retval               ...
  366:  jump *label130 notEqual :buildRemoteBlock*retval null        CoreBuilder.mnd: if thoriumContainer == null then thoriumContainer = thoriumDrill; end;
  367:  set .thoriumContainer .thoriumDrill                          ...
        label *label130                                              ...
  368:  write .thoriumDrill processor1 ".thoriumDrill"               CoreBuilder.mnd: display.thoriumDrill = thoriumDrill;
  369:  write .thoriumContainer processor1 ".thoriumContainer"       CoreBuilder.mnd: display.thoriumContainer = thoriumContainer;
  370:  write null processor1 ".nextBlock"                           CoreBuilder.mnd: display.nextBlock = null;
  371:  write 1 .controller ".megaTarget"                            CoreBuilder.mnd: controller.megaTarget = target;
  372:  write 1 processor1 ".megaTarget"                             CoreBuilder.mnd: display.megaTarget = target;
        label *label133                                              CoreBuilder.mnd: while controller.polys < 6 do
  373:  read *tmp91 .controller ".polys"                             ...
  374:  jump *label135 greaterThanEq *tmp91 6                        ...
  375:  setaddr :supplyBase*retaddr *label136                        CoreBuilder.mnd: supplyBase();
  376:  call *label28 *invalid :supplyBase*retval                    ...
        label *label136                                              ...
  377:  jump *label133 always 0 0                                    CoreBuilder.mnd: while controller.polys < 6 do
        label *label135                                              ...
  378:  set :buildBlockFromCfg:cfg "+(###A<###"                     CoreBuilder.mnd: buildBlockFromCfg(UNLOADER6, @silicon);
  379:  set :buildBlockFromCfg:config @silicon                       ...
  380:  setaddr :buildBlockFromCfg*retaddr *label137                 ...
  381:  call *label32 *invalid :buildBlockFromCfg*retval             ...
        label *label137                                              ...
  382:  set :buildBlockFromCfg.1:cfg "X+''%######"                   CoreBuilder.mnd: buildBlockFromCfg(UNDERFLOW_GATE2);
  383:  setaddr :buildBlockFromCfg.1*retaddr *label138               ...
  384:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label138                                              ...
  385:  set :buildBlockFromCfg.1:cfg ".&#ʭ#ǥƁ#ʭ#"                   CoreBuilder.mnd: var multiReconstructor = buildBlockFromCfg(MULTIPLICATIVE_REC);
  386:  setaddr :buildBlockFromCfg.1*retaddr *label139               ...
  387:  call *label33 *invalid :buildBlockFromCfg.1*retval           ...
        label *label139                                              ...
  388:  write :buildBlockFromCfg.1*retval .controller ".multiReconst CoreBuilder.mnd: controller.multiReconstructor = multiReconstructor;
  389:  write :buildBlockFromCfg.1*retval processor1 ".multiReconstr CoreBuilder.mnd: display.multiReconstructor = multiReconstructor;
  390:  setaddr :buildUnits*retaddr *label140                        CoreBuilder.mnd: buildUnits();
  391:  call *label38 *invalid :buildUnits*retval                    ...
        label *label140                                              ...
        label *label141                                              CoreBuilder.mnd: while true do
  392:  setaddr :supplyBase*retaddr *label144                        CoreBuilder.mnd: supplyBase();
  393:  call *label28 *invalid :supplyBase*retval                    ...
        label *label144                                              ...
  394:  jump *label141 always 0 0                                    CoreBuilder.mnd: while true do
        label *label7                                                Actions.mnd: void status2(text, item, block)
  395:  write :status2:text .display ".status2"                      Actions.mnd: display.status2  = text;
  396:  write :status2:item .display ".item2"                        Actions.mnd: display.item2  = item;
  397:  write :status2:block .display ".block2"                      Actions.mnd: display.block2 = block;
  398:  return :status2*retaddr                                      Actions.mnd: void status2(text, item, block)
        label *label9                                                Actions.mnd: void transportStatus(target, item)
  399:  write :transportStatus:target .display ".transportTarget"    Actions.mnd: display.transportTarget = target;
  400:  write :transportStatus:item .display ".transportItem"        Actions.mnd: display.transportItem = item;
  401:  return :transportStatus*retaddr                              Actions.mnd: void transportStatus(target, item)
        label *label10                                               Actions.mnd: void error(error)
  402:  set .ERROR :error:error                                      Actions.mnd: ERROR = error;
  403:  stop                                                         Actions.mnd: stopProcessor();
  404:  return :error*retaddr                                        Actions.mnd: void error(error)
        label *label11                                               Actions.mnd: void moveTo(x, y, radius)
  405:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
  406:  op sub *tmp237 :moveTo:radius 0.5                            Actions.mnd: while !within(x, y, radius) do
        label *label152                                              ...
  407:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp235 0 ...
  408:  jump *label154 notEqual *tmp235 false                        ...
  409:  ucontrol approach :moveTo:x :moveTo:y *tmp237 0 0            Actions.mnd: approach(x, y, radius - 0.5);
  410:  jump *label152 always 0 0                                    Actions.mnd: while !within(x, y, radius) do
        label *label154                                              ...
  411:  return :moveTo*retaddr                                       Actions.mnd: void moveTo(x, y, radius)
        label *label12                                               Actions.mnd: void moveToEmpty(x, y)
  412:  write "Moving..." .display ".status3"                        Actions.mnd: display.status3 = text;
        label *label157                                              Actions.mnd: do
  413:  sensor *tmp238 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
  414:  jump *label160 equal *tmp238 null                            ...
  415:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label160                                              ...
  416:  ucontrol approach :moveToEmpty:x :moveToEmpty:y 5.5 0 0      Actions.mnd: approach(x, y, RADIUS - 0.5);
  417:  ucontrol within :moveToEmpty:x :moveToEmpty:y 6 *tmp241 0    Actions.mnd: while !within(x, y, RADIUS);
  418:  jump *label157 equal *tmp241 false                           Actions.mnd: do
  419:  return :moveToEmpty*retaddr                                  Actions.mnd: void moveToEmpty(x, y)
        label *label13                                               Actions.mnd: void dropAll()
        label *label163                                              Actions.mnd: while @unit.@firstItem != null do
  420:  sensor *tmp243 @unit @firstItem                              ...
  421:  jump *label165 equal *tmp243 null                            ...
  422:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  423:  jump *label163 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label165                                              ...
  424:  return :dropAll*retaddr                                      Actions.mnd: void dropAll()
        label *label15                                               Actions.mnd: void depositItems(block, item)
  425:  write "Depositing..." .display ".status3"                    Actions.mnd: display.status3 = text;
  426:  sensor *tmp247 @unit @firstItem                              Actions.mnd: if @unit.@firstItem == item then
  427:  jump *label170 notEqual *tmp247 :depositItems:item           ...
  428:  sensor *tmp245 :depositItems:block @x                        Actions.mnd: moveTo(block.@x, block.@y, radius);
  429:  sensor *tmp246 :depositItems:block @y                        ...
  430:  set :moveTo:x *tmp245                                        ...
  431:  set :moveTo:y *tmp246                                        ...
  432:  set :moveTo:radius 6                                         ...
  433:  setaddr :moveTo*retaddr *label448                            ...
  434:  call *label11 *invalid :moveTo*retval                        ...
        label *label448                                              ...
  435:  sensor :depositItems:cap :depositItems:block @itemCapacity   Actions.mnd: var cap = block.@itemCapacity;
        label *label173                                              Actions.mnd: do
  436:  ucontrol itemDrop :depositItems:block 30 0 0 0               Actions.mnd: itemDrop(block, capacity);
  437:  sensor *tmp251 @unit @firstItem                              Actions.mnd: while @unit.@firstItem * cap > block.sensor(item);
  438:  op mul *tmp252 *tmp251 :depositItems:cap                     ...
  439:  sensor *tmp253 :depositItems:block :depositItems:item        ...
  440:  jump *label173 greaterThan *tmp252 *tmp253                   Actions.mnd: do
  441:  jump *label171 always 0 0                                    Actions.mnd: if @unit.@firstItem == item then
        label *label170                                              ...
        label *label176                                              Actions.mnd: while @unit.@firstItem != null do
  442:  sensor *tmp255 @unit @firstItem                              ...
  443:  jump *label178 equal *tmp255 null                            ...
  444:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
  445:  jump *label176 always 0 0                                    Actions.mnd: while @unit.@firstItem != null do
        label *label178                                              ...
        label *label171                                              Actions.mnd: if @unit.@firstItem == item then
  446:  set :transportStatus:target 0                                Actions.mnd: transportStatus(0, null);
  447:  set :transportStatus:item null                               ...
  448:  setaddr :transportStatus*retaddr *label179                   ...
  449:  call *label9 *invalid :transportStatus*retval                ...
        label *label179                                              ...
  450:  return :depositItems*retaddr                                 Actions.mnd: void depositItems(block, item)
        label *label17                                               Actions.mnd: void mineOre(ore, amount, block)
  451:  op min :mineOre:amount :mineOre:amount 30                    Actions.mnd: amount = min(amount, capacity);
  452:  set :transportStatus:target :mineOre:amount                  Actions.mnd: transportStatus(amount, ore);
  453:  set :transportStatus:item :mineOre:ore                       ...
  454:  setaddr :transportStatus*retaddr *label185                   ...
  455:  call *label9 *invalid :transportStatus*retval                ...
        label *label185                                              ...
  456:  ulocate ore core true :mineOre:ore :locateOre:x :locateOre:y Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  457:  jump *label464 notEqual *tmp257 false                        ...
  458:  set :error:error "Cannot locate ore"                         Actions.mnd: error("Cannot locate ore");
  459:  setaddr :error*retaddr *label463                             ...
  460:  call *label10 *invalid :error*retval                         ...
        label *label463                                              ...
        label *label464                                              Actions.mnd: if !ulocate(:ore, ore, out x, out y) then
  461:  set :mineOre:x :locateOre:x                                  Actions.mnd: locateOre(ore, out x, out y);
  462:  set :mineOre:y :locateOre:y                                  ...
  463:  set :moveToEmpty:x :locateOre:x                              Actions.mnd: moveToEmpty(x, y);
  464:  set :moveToEmpty:y :locateOre:y                              ...
  465:  setaddr :moveToEmpty*retaddr *label187                       ...
  466:  call *label12 *invalid :moveToEmpty*retval                   ...
        label *label187                                              ...
  467:  sensor *tmp262 @unit @firstItem                              Actions.mnd: if @unit.@firstItem != ore then dropAll(); end;
  468:  jump *label188 equal *tmp262 :mineOre:ore                    ...
  469:  setaddr :dropAll*retaddr *label190                           ...
  470:  call *label13 *invalid :dropAll*retval                       ...
        label *label190                                              ...
        label *label188                                              ...
  471:  write "Mining..." .display ".status3"                        Actions.mnd: display.status3 = text;
  472:  op add :mineOre:stop @second 10                              Actions.mnd: var stop = @second + 10;
        label *label192                                              Actions.mnd: do
  473:  sensor :mineOre:item @unit @firstItem                        Actions.mnd: var item = @unit.@firstItem;
  474:  op notEqual *tmp267 :mineOre:item null                       Actions.mnd: if item != null && item != ore then break; end;
  475:  op notEqual *tmp268 :mineOre:item :mineOre:ore               ...
  476:  op land *tmp269 *tmp267 *tmp268                              ...
  477:  jump *label194 notEqual *tmp269 false                        ...
  478:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    Actions.mnd: mine(x, y);
  479:  jump *label194 greaterThan @second :mineOre:stop             Actions.mnd: if @second > stop then break; end;
  480:  sensor *tmp273 @unit @totalItems                             Actions.mnd: while @unit.@totalItems < amount;
  481:  jump *label192 lessThan *tmp273 :mineOre:amount              Actions.mnd: do
        label *label194                                              ...
  482:  ucontrol unbind 0 0 0 0 0                                    Actions.mnd: unbind();
  483:  set :depositItems:block :mineOre:block                       Actions.mnd: depositItems(block, ore);
  484:  set :depositItems:item :mineOre:ore                          ...
  485:  setaddr :depositItems*retaddr *label199                      ...
  486:  call *label15 *invalid :depositItems*retval                  ...
        label *label199                                              ...
  487:  return :mineOre*retaddr                                      Actions.mnd: void mineOre(ore, amount, block)
        label *label18                                               Actions.mnd: void mineOre(ore)
  488:  set :status2:text "Mining "                                  Actions.mnd: status2("Mining ", ore, "core");
  489:  set :status2:item :mineOre.1:ore                             ...
  490:  set :status2:block "core"                                    ...
  491:  setaddr :status2*retaddr *label201                           ...
  492:  call *label7 *invalid :status2*retval                        ...
        label *label201                                              ...
  493:  set :mineOre:ore :mineOre.1:ore                              Actions.mnd: mineOre(ore, capacity, core);
  494:  set :mineOre:amount 30                                       ...
  495:  set :mineOre:block .core                                     ...
  496:  setaddr :mineOre*retaddr *label202                           ...
  497:  call *label17 *invalid :mineOre*retval                       ...
        label *label202                                              ...
  498:  return :mineOre.1*retaddr                                    Actions.mnd: void mineOre(ore)
        label *label19                                               Actions.mnd: void fetchBlock(block, item)
  499:  sensor *tmp276 :fetchBlock:block @itemCapacity               Actions.mnd: transportStatus(min(block.@itemCapacity, capacity), item);
  500:  op min :transportStatus:target *tmp276 30                    ...
  501:  set :transportStatus:item :fetchBlock:item                   ...
  502:  setaddr :transportStatus*retaddr *label204                   ...
  503:  call *label9 *invalid :transportStatus*retval                ...
        label *label204                                              ...
  504:  set :status2:text "Fetching "                                Actions.mnd: status2("Fetching ", item, block);
  505:  set :status2:item :fetchBlock:item                           ...
  506:  set :status2:block :fetchBlock:block                         ...
  507:  setaddr :status2*retaddr *label205                           ...
  508:  call *label7 *invalid :status2*retval                        ...
        label *label205                                              ...
  509:  sensor *tmp278 :fetchBlock:block @x                          Actions.mnd: moveToEmpty(block.@x, block.@y);
  510:  sensor *tmp279 :fetchBlock:block @y                          ...
  511:  set :moveToEmpty:x *tmp278                                   ...
  512:  set :moveToEmpty:y *tmp279                                   ...
  513:  setaddr :moveToEmpty*retaddr *label206                       ...
  514:  call *label12 *invalid :moveToEmpty*retval                   ...
        label *label206                                              ...
  515:  setaddr :dropAll*retaddr *label207                           Actions.mnd: dropAll();
  516:  call *label13 *invalid :dropAll*retval                       ...
        label *label207                                              ...
        label *label208                                              Actions.mnd: do
  517:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  Actions.mnd: itemTake(block, item, capacity);
  518:  sensor :fetchBlock:unitItem @unit @firstItem                 Actions.mnd: var unitItem = @unit.@firstItem;
  519:  op notEqual *tmp281 :fetchBlock:unitItem null                Actions.mnd: if unitItem != null and unitItem != item then
  520:  op notEqual *tmp282 :fetchBlock:unitItem :fetchBlock:item    ...
  521:  op land *tmp283 *tmp281 *tmp282                              ...
  522:  jump *label211 equal *tmp283 false                           ...
  523:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label211                                              Actions.mnd: if unitItem != null and unitItem != item then
  524:  sensor *tmp285 @unit :fetchBlock:item                        Actions.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  525:  op lessThan *tmp286 *tmp285 30                               ...
  526:  sensor *tmp287 :fetchBlock:block :fetchBlock:item            ...
  527:  op land *tmp288 *tmp286 *tmp287                              ...
  528:  jump *label208 notEqual *tmp288 false                        Actions.mnd: do
  529:  set :depositItems:block .core                                Actions.mnd: depositItems(core, item);
  530:  set :depositItems:item :fetchBlock:item                      ...
  531:  setaddr :depositItems*retaddr *label213                      ...
  532:  call *label15 *invalid :depositItems*retval                  ...
        label *label213                                              ...
  533:  return :fetchBlock*retaddr                                   Actions.mnd: void fetchBlock(block, item)
        label *label20                                               Actions.mnd: void supplyBlock(block, ore)
  534:  set :status2:text "Supplying "                               Actions.mnd: status2("Supplying ", ore, block);
  535:  set :status2:item :supplyBlock:ore                           ...
  536:  set :status2:block :supplyBlock:block                        ...
  537:  setaddr :status2*retaddr *label215                           ...
  538:  call *label7 *invalid :status2*retval                        ...
        label *label215                                              ...
  539:  sensor :supplyBlock:blockCapacity :supplyBlock:block @itemCa Actions.mnd: var blockCapacity = block.@itemCapacity;
  540:  sensor *tmp290 :supplyBlock:block :supplyBlock:ore           Actions.mnd: var missing = blockCapacity - block.sensor(ore);
  541:  op sub :supplyBlock:missing :supplyBlock:blockCapacity *tmp2 ...
  542:  jump *label216 lessThanEq :supplyBlock:missing 0             Actions.mnd: if missing > 0 then
  543:  set :mineOre:ore :supplyBlock:ore                            Actions.mnd: mineOre(ore, blockCapacity, block);
  544:  set :mineOre:amount :supplyBlock:blockCapacity               ...
  545:  set :mineOre:block :supplyBlock:block                        ...
  546:  setaddr :mineOre*retaddr *label218                           ...
  547:  call *label17 *invalid :mineOre*retval                       ...
        label *label218                                              ...
        label *label216                                              Actions.mnd: if missing > 0 then
  548:  return :supplyBlock*retaddr                                  Actions.mnd: void supplyBlock(block, ore)
        label *label27                                               CoreBuilder.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation)
  549:  read *tmp306 :unpackCfg:cfg 0                                CoreBuilder.mnd: type = lookup(:block, char(cfg, index++) - 35);
  550:  op sub *tmp307 *tmp306 35                                    ...
  551:  lookup block :unpackCfg:type *tmp307                         ...
  552:  read *tmp310 :unpackCfg:cfg 1                                CoreBuilder.mnd: x = char(cfg, index++) - 35 - 7;
  553:  op sub :unpackCfg:x *tmp310 42                               ...
  554:  read *tmp314 :unpackCfg:cfg 2                                CoreBuilder.mnd: y = char(cfg, index++) - 35 - 7;
  555:  op sub :unpackCfg:y *tmp314 42                               ...
  556:  read *tmp318 :unpackCfg:cfg 3                                CoreBuilder.mnd: cu = char(cfg, index++) - 35;
  557:  op sub :unpackCfg:cu *tmp318 35                              ...
  558:  read *tmp321 :unpackCfg:cfg 4                                CoreBuilder.mnd: pb = char(cfg, index++) - 35;
  559:  op sub :unpackCfg:pb *tmp321 35                              ...
  560:  read *tmp324 :unpackCfg:cfg 5                                CoreBuilder.mnd: gr = char(cfg, index++) - 35;
  561:  op sub :unpackCfg:gr *tmp324 35                              ...
  562:  read *tmp327 :unpackCfg:cfg 6                                CoreBuilder.mnd: si = char(cfg, index++) - 35;
  563:  op sub :unpackCfg:si *tmp327 35                              ...
  564:  read *tmp330 :unpackCfg:cfg 7                                CoreBuilder.mnd: ti = char(cfg, index++) - 35;
  565:  op sub :unpackCfg:ti *tmp330 35                              ...
  566:  read *tmp333 :unpackCfg:cfg 8                                CoreBuilder.mnd: mg = char(cfg, index++) - 35;
  567:  op sub :unpackCfg:mg *tmp333 35                              ...
  568:  read *tmp336 :unpackCfg:cfg 9                                CoreBuilder.mnd: th = char(cfg, index++) - 35;
  569:  op sub :unpackCfg:th *tmp336 35                              ...
  570:  read *tmp339 :unpackCfg:cfg 10                               CoreBuilder.mnd: rotation = char(cfg, index++) - 35;
  571:  op sub :unpackCfg:rotation *tmp339 35                        ...
  572:  return :unpackCfg*retaddr                                    CoreBuilder.mnd: void unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation)
        label *label28                                               CoreBuilder.mnd: void supplyBase()
  573:  jump *label232 notEqual .flareControllerStarted false        CoreBuilder.mnd: if !flareControllerStarted then
  574:  read *tmp89 .controller ".flares"                            CoreBuilder.mnd: if controller.flares > 0 then
  575:  jump *label234 lessThanEq *tmp89 0                           ...
  576:  set .flareControllerStarted true                             CoreBuilder.mnd: flareControllerStarted = true;
  577:  write .core .flareController ":start:aCore"                  CoreBuilder.mnd: async(flareController.start(core, titaniumDrill));
  578:  write .titaniumDrill .flareController ":start:drill"         ...
  579:  write false .flareController ":start*finished"               ...
  580:  write 2 .flareController "@counter"                          ...
        label *label234                                              CoreBuilder.mnd: if controller.flares > 0 then
        label *label232                                              CoreBuilder.mnd: if !flareControllerStarted then
  581:  jump *label236 equal .thoriumContainer false                 CoreBuilder.mnd: if thoriumContainer then
  582:  write "Phase 2: servicing thorium drill" .display ".status1" Actions.mnd: display.status1 = text;
  583:  set :supplyBlockFromCore:target .thoriumGenerator            CoreBuilder.mnd: supplyBlockFromCore(thoriumGenerator, @coal);
  584:  set :supplyBlockFromCore:item @coal                          ...
  585:  sensor *tmp294 .thoriumGenerator @itemCapacity               Actions.mnd: transportStatus(min(target.@itemCapacity, capacity), item);
  586:  op min :transportStatus:target *tmp294 30                    ...
  587:  set :transportStatus:item @coal                              ...
  588:  setaddr :transportStatus*retaddr *label451                   ...
  589:  call *label9 *invalid :transportStatus*retval                ...
        label *label451                                              ...
  590:  set :status2:text "Transferring "                            Actions.mnd: status2("Transferring ", item, target);
  591:  set :status2:item :supplyBlockFromCore:item                  ...
  592:  set :status2:block :supplyBlockFromCore:target               ...
  593:  setaddr :status2*retaddr *label452                           ...
  594:  call *label7 *invalid :status2*retval                        ...
        label *label452                                              ...
  595:  set :moveToEmpty:x .coreX                                    Actions.mnd: moveToEmpty(coreX, coreY);
  596:  set :moveToEmpty:y .coreY                                    ...
  597:  setaddr :moveToEmpty*retaddr *label453                       ...
  598:  call *label12 *invalid :moveToEmpty*retval                   ...
        label *label453                                              ...
  599:  setaddr :dropAll*retaddr *label454                           Actions.mnd: dropAll();
  600:  call *label13 *invalid :dropAll*retval                       ...
        label *label454                                              ...
        label *label455                                              Actions.mnd: do
  601:  ucontrol itemTake .core :supplyBlockFromCore:item 30 0 0     Actions.mnd: itemTake(core, item, capacity);
  602:  sensor :supplyBlockFromCore:unitItem @unit @firstItem        Actions.mnd: var unitItem = @unit.@firstItem;
  603:  op notEqual *tmp297 :supplyBlockFromCore:unitItem null       Actions.mnd: if unitItem != null and unitItem != item then
  604:  op notEqual *tmp298 :supplyBlockFromCore:unitItem :supplyBlo ...
  605:  op land *tmp299 *tmp297 *tmp298                              ...
  606:  jump *label456 equal *tmp299 false                           ...
  607:  ucontrol itemDrop @air 1000 0 0 0                            Actions.mnd: itemDrop(@air, 1000);
        label *label456                                              Actions.mnd: if unitItem != null and unitItem != item then
  608:  sensor *tmp301 @unit :supplyBlockFromCore:item               Actions.mnd: while @unit.sensor(item) < capacity and core.sensor(item);
  609:  op lessThan *tmp302 *tmp301 30                               ...
  610:  sensor *tmp303 .core :supplyBlockFromCore:item               ...
  611:  op land *tmp304 *tmp302 *tmp303                              ...
  612:  jump *label455 notEqual *tmp304 false                        Actions.mnd: do
  613:  set :depositItems:block :supplyBlockFromCore:target          Actions.mnd: depositItems(target, item);
  614:  set :depositItems:item :supplyBlockFromCore:item             ...
  615:  setaddr :depositItems*retaddr *label460                      ...
  616:  call *label15 *invalid :depositItems*retval                  ...
        label *label460                                              ...
  617:  set :fetchBlock:block .thoriumContainer                      CoreBuilder.mnd: fetchBlock(thoriumContainer, @thorium);
  618:  set :fetchBlock:item @thorium                                ...
  619:  setaddr :fetchBlock*retaddr *label241                        ...
  620:  call *label19 *invalid :fetchBlock*retval                    ...
        label *label241                                              ...
  621:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if thoriumContainer then
        label *label236                                              ...
  622:  read *tmp90 .controller ".monos"                             CoreBuilder.mnd: elsif controller.monos > 3 then
  623:  jump *label242 lessThanEq *tmp90 3                           ...
  624:  write "Phase 1: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  625:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  626:  setaddr :mineOre.1*retaddr *label246                         ...
  627:  call *label18 *invalid :mineOre.1*retval                     ...
        label *label246                                              ...
  628:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif controller.monos > 3 then
        label *label242                                              ...
  629:  set :supplyBase0:supplied false                              CoreBuilder.mnd: var supplied = false;
  630:  jump *label248 notEqual .unloader1 null                      CoreBuilder.mnd: if unloader1 == null then
  631:  sensor *tmp352 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then
  632:  jump *label250 greaterThanEq *tmp352 .targetGraphite         ...
  633:  sensor *tmp355 .press @coal                                  CoreBuilder.mnd: if press.@coal < 5 then
  634:  jump *label252 greaterThanEq *tmp355 5                       ...
  635:  write "Goal 1: graphite requirement" .display ".status1"     Actions.mnd: display.status1 = text;
  636:  set :supplyBlock:block .press                                CoreBuilder.mnd: supplyBlock(press, @coal);
  637:  set :supplyBlock:ore @coal                                   ...
  638:  setaddr :supplyBlock*retaddr *label255                       ...
  639:  call *label20 *invalid :supplyBlock*retval                   ...
        label *label255                                              ...
  640:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label252                                              CoreBuilder.mnd: if press.@coal < 5 then
        label *label250                                              CoreBuilder.mnd: if core.@graphite < targetGraphite then
  641:  sensor *tmp358 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then
  642:  jump *label256 greaterThanEq *tmp358 .targetSilicon          ...
  643:  sensor *tmp361 .smelter @coal                                CoreBuilder.mnd: if smelter.@coal < 5 then
  644:  jump *label258 greaterThanEq *tmp361 5                       ...
  645:  write "Goal 2: coal for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  646:  set :supplyBlock:block .smelter                              CoreBuilder.mnd: supplyBlock(smelter, @coal);
  647:  set :supplyBlock:ore @coal                                   ...
  648:  setaddr :supplyBlock*retaddr *label261                       ...
  649:  call *label20 *invalid :supplyBlock*retval                   ...
        label *label261                                              ...
  650:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
  651:  jump *label259 always 0 0                                    CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label258                                              ...
  652:  sensor *tmp364 .smelter @sand                                CoreBuilder.mnd: elsif smelter.@sand < 5 then
  653:  jump *label262 greaterThanEq *tmp364 5                       ...
  654:  write "Goal 3: sand for silicon requirement" .display ".stat Actions.mnd: display.status1 = text;
  655:  set :supplyBlock:block .smelter                              CoreBuilder.mnd: supplyBlock(smelter, @sand);
  656:  set :supplyBlock:ore @sand                                   ...
  657:  setaddr :supplyBlock*retaddr *label265                       ...
  658:  call *label20 *invalid :supplyBlock*retval                   ...
        label *label265                                              ...
  659:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label262                                              CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label259                                              CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label256                                              CoreBuilder.mnd: if core.@silicon < targetSilicon then
  660:  sensor *tmp367 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  661:  jump *label266 greaterThanEq *tmp367 .powerTarget            ...
  662:  sensor *tmp370 .generator @coal                              CoreBuilder.mnd: if generator.@coal < 2 then
  663:  jump *label268 greaterThanEq *tmp370 2                       ...
  664:  write "Goal 4: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  665:  set :supplyBlock:block .generator                            CoreBuilder.mnd: supplyBlock(generator, @coal);
  666:  set :supplyBlock:ore @coal                                   ...
  667:  setaddr :supplyBlock*retaddr *label271                       ...
  668:  call *label20 *invalid :supplyBlock*retval                   ...
        label *label271                                              ...
  669:  set :supplyBase0:supplied true                               CoreBuilder.mnd: supplied = true;
        label *label268                                              CoreBuilder.mnd: if generator.@coal < 2 then
        label *label266                                              CoreBuilder.mnd: if battery.@totalPower < powerTarget then
        label *label248                                              CoreBuilder.mnd: if unloader1 == null then
  670:  set *tmp375 100                                              CoreBuilder.mnd: var titaniumTrigger = core.@titanium < targetTitanium ? min(7, targetTitanium - core.@titanium) : 100;
  671:  sensor *tmp373 .core @titanium                               ...
  672:  jump *label273 greaterThanEq *tmp373 .targetTitanium         ...
  673:  sensor *tmp376 .core @titanium                               ...
  674:  op sub *tmp377 .targetTitanium *tmp376                       ...
  675:  op min *tmp375 7 *tmp377                                     ...
        label *label273                                              ...
  676:  sensor *tmp379 .titaniumDrill @titanium                      CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  677:  jump *label274 greaterThanEq *tmp379 *tmp375                 ...
  678:  jump *label275 notEqual :supplyBase0:supplied false          CoreBuilder.mnd: if !supplied then
  679:  sensor *tmp384 .battery @totalPower                          CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
  680:  op mul *tmp385 .unloader1 .powerTarget                       ...
  681:  jump *label278 greaterThanEq *tmp384 *tmp385                 ...
  682:  write "Goal 5: supplying generator" .display ".status1"      Actions.mnd: display.status1 = text;
  683:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  684:  setaddr :mineOre.1*retaddr *label281                         ...
  685:  call *label18 *invalid :mineOre.1*retval                     ...
        label *label281                                              ...
  686:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if battery.@totalPower < unloader1 * powerTarget then
        label *label278                                              ...
  687:  sensor *tmp388 .core @silicon                                CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
  688:  jump *label282 greaterThanEq *tmp388 .targetSilicon          ...
  689:  write "Goal 6: silicon requirement" .display ".status1"      Actions.mnd: display.status1 = text;
  690:  sensor :supplyBase0:coal .core @coal                         CoreBuilder.mnd: var coal = core.@coal;
  691:  sensor :supplyBase0:sand .core @sand                         CoreBuilder.mnd: var sand = core.@sand;
  692:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  693:  jump *label286 greaterThanEq :supplyBase0:coal :supplyBase0: ...
  694:  set :mineOre.1:ore @coal                                     ...
        label *label286                                              ...
  695:  setaddr :mineOre.1*retaddr *label287                         CoreBuilder.mnd: mineOre(ore);
  696:  call *label18 *invalid :mineOre.1*retval                     ...
        label *label287                                              ...
  697:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@silicon < targetSilicon then
        label *label282                                              ...
  698:  sensor *tmp395 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < targetCopper then
  699:  jump *label288 greaterThanEq *tmp395 .targetCopper           ...
  700:  write "Goal 7: copper requirement" .display ".status1"       Actions.mnd: display.status1 = text;
  701:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  702:  setaddr :mineOre.1*retaddr *label291                         ...
  703:  call *label18 *invalid :mineOre.1*retval                     ...
        label *label291                                              ...
  704:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@copper < targetCopper then
        label *label288                                              ...
  705:  sensor *tmp398 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
  706:  jump *label292 greaterThanEq *tmp398 .targetLead             ...
  707:  write "Goal 8: lead requirement" .display ".status1"         Actions.mnd: display.status1 = text;
  708:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  709:  setaddr :mineOre.1*retaddr *label295                         ...
  710:  call *label18 *invalid :mineOre.1*retval                     ...
        label *label295                                              ...
  711:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@lead < targetLead then
        label *label292                                              ...
  712:  sensor *tmp401 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
  713:  jump *label296 greaterThanEq *tmp401 .targetMetaglass        ...
  714:  write "Goal 9: metaglass requirement" .display ".status1"    Actions.mnd: display.status1 = text;
  715:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  716:  setaddr :mineOre.1*retaddr *label299                         ...
  717:  call *label18 *invalid :mineOre.1*retval                     ...
        label *label299                                              ...
  718:  return :supplyBase*retaddr                                   CoreBuilder.mnd: elsif core.@metaglass < targetMetaglass then
        label *label296                                              ...
  719:  write "Goal 10: supplying base" .display ".status1"          Actions.mnd: display.status1 = text;
  720:  sensor :supplyBase0:coal.1 .core @coal                       CoreBuilder.mnd: var coal = core.@coal;
  721:  sensor :supplyBase0:sand.1 .core @sand                       CoreBuilder.mnd: var sand = core.@sand;
  722:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  723:  jump *label302 greaterThan :supplyBase0:coal.1 :supplyBase0: ...
  724:  set :mineOre.1:ore @coal                                     ...
        label *label302                                              ...
  725:  setaddr :mineOre.1*retaddr *label303                         CoreBuilder.mnd: mineOre(ore);
  726:  call *label18 *invalid :mineOre.1*retval                     ...
        label *label303                                              ...
  727:  return :supplyBase*retaddr                                   CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
        label *label274                                              ...
  728:  write "Goal 11: Fetching titanium" .display ".status1"       Actions.mnd: display.status1 = text;
  729:  set :fetchBlock:block .titaniumDrill                         CoreBuilder.mnd: fetchBlock(titaniumDrill, @titanium);
  730:  set :fetchBlock:item @titanium                               ...
  731:  setaddr :fetchBlock*retaddr *label305                        ...
  732:  call *label19 *invalid :fetchBlock*retval                    ...
        label *label305                                              ...
        label *label275                                              CoreBuilder.mnd: if titaniumDrill.@titanium < titaniumTrigger then
  733:  return :supplyBase*retaddr                                   CoreBuilder.mnd: void supplyBase()
        label *label29                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
  734:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass, thorium do count += sign(t); end;
  735:  op sign *tmp409 :meetTarget:lead 0                           ...
  736:  op add :meetTarget:count :meetTarget:count *tmp409           ...
  737:  op sign *tmp409 :meetTarget:graphite 0                       ...
  738:  op add :meetTarget:count :meetTarget:count *tmp409           ...
  739:  op sign *tmp409 :meetTarget:silicon 0                        ...
  740:  op add :meetTarget:count :meetTarget:count *tmp409           ...
  741:  op sign *tmp409 :meetTarget:titanium 0                       ...
  742:  op add :meetTarget:count :meetTarget:count *tmp409           ...
  743:  op sign *tmp409 :meetTarget:metaglass 0                      ...
  744:  op add :meetTarget:count :meetTarget:count *tmp409           ...
  745:  op sign *tmp409 :meetTarget:thorium 0                        ...
  746:  op add :meetTarget:count :meetTarget:count *tmp409           ...
  747:  write :meetTarget:count .display ".totalTargets"             CoreBuilder.mnd: display.totalTargets = count;
  748:  write :meetTarget:block .display ".nextBlock"                CoreBuilder.mnd: display.nextBlock = block;
  749:  write :meetTarget:copper .display ".targetCopper"            CoreBuilder.mnd: display.targetCopper = copper;
  750:  write :meetTarget:lead .display ".targetLead"                CoreBuilder.mnd: display.targetLead = lead;
  751:  write :meetTarget:graphite .display ".targetGraphite"        CoreBuilder.mnd: display.targetGraphite = graphite;
  752:  write :meetTarget:silicon .display ".targetSilicon"          CoreBuilder.mnd: display.targetSilicon = silicon;
  753:  write :meetTarget:titanium .display ".targetTitanium"        CoreBuilder.mnd: display.targetTitanium = titanium;
  754:  write :meetTarget:metaglass .display ".targetMetaglass"      CoreBuilder.mnd: display.targetMetaglass = metaglass;
  755:  write :meetTarget:thorium .display ".targetThorium"          CoreBuilder.mnd: display.targetThorium = thorium;
  756:  set .targetCopper :meetTarget:copper                         CoreBuilder.mnd: targetCopper = copper;
  757:  op add *tmp410 :meetTarget:lead .leadSurplus                 CoreBuilder.mnd: targetLead = lead + leadSurplus + 1;
  758:  op add .targetLead *tmp410 1                                 ...
  759:  set .targetGraphite :meetTarget:graphite                     CoreBuilder.mnd: targetGraphite = graphite;
  760:  set .targetSilicon :meetTarget:silicon                       CoreBuilder.mnd: targetSilicon = silicon;
  761:  set .targetTitanium :meetTarget:titanium                     CoreBuilder.mnd: targetTitanium = titanium;
  762:  set .targetMetaglass :meetTarget:metaglass                   CoreBuilder.mnd: targetMetaglass = metaglass;
  763:  set .targetThorium :meetTarget:thorium                       CoreBuilder.mnd: targetThorium = thorium;
  764:  op add *tmp412 :meetTarget:graphite .graphiteSurplus         CoreBuilder.mnd: controller.pressTarget = graphite + graphiteSurplus;
  765:  write *tmp412 .controller ".pressTarget"                     ...
  766:  op add *tmp413 :meetTarget:silicon .siliconSurplus           CoreBuilder.mnd: controller.smelterTarget = silicon + siliconSurplus;
  767:  write *tmp413 .controller ".smelterTarget"                   ...
  768:  op add *tmp414 :meetTarget:metaglass .metaglassSurplus       CoreBuilder.mnd: controller.kilnTarget = metaglass + metaglassSurplus;
  769:  write *tmp414 .controller ".kilnTarget"                      ...
  770:  write *tmp410 .controller ".leadReserve"                     CoreBuilder.mnd: controller.leadReserve = lead + leadSurplus;
  771:  op sign *tmp416 :meetTarget:silicon 0                        CoreBuilder.mnd: controller.siliconReserve = silicon + sign(silicon) * 20;
  772:  op mul *tmp417 *tmp416 20                                    ...
  773:  op add *tmp418 :meetTarget:silicon *tmp417                   ...
  774:  write *tmp418 .controller ".siliconReserve"                  ...
        label *label317                                              CoreBuilder.mnd: while !targetMet() do
  775:  sensor *tmp420 .core @copper                                 CoreBuilder.mnd: if core.@copper < targetCopper then return false; end;
  776:  jump *label321 greaterThanEq *tmp420 .targetCopper           ...
  777:  set *tmp419 false                                            ...
  778:  jump *label320 always 0 0                                    ...
        label *label321                                              ...
  779:  sensor *tmp423 .core @lead                                   CoreBuilder.mnd: if core.@lead < targetLead then return false; end;
  780:  jump *label323 greaterThanEq *tmp423 .targetLead             ...
  781:  set *tmp419 false                                            ...
  782:  jump *label320 always 0 0                                    ...
        label *label323                                              ...
  783:  sensor *tmp426 .core @graphite                               CoreBuilder.mnd: if core.@graphite < targetGraphite then return false; end;
  784:  jump *label325 greaterThanEq *tmp426 .targetGraphite         ...
  785:  set *tmp419 false                                            ...
  786:  jump *label320 always 0 0                                    ...
        label *label325                                              ...
  787:  sensor *tmp429 .core @silicon                                CoreBuilder.mnd: if core.@silicon < targetSilicon then return false; end;
  788:  jump *label327 greaterThanEq *tmp429 .targetSilicon          ...
  789:  set *tmp419 false                                            ...
  790:  jump *label320 always 0 0                                    ...
        label *label327                                              ...
  791:  sensor *tmp432 .core @titanium                               CoreBuilder.mnd: if core.@titanium < targetTitanium then return false; end;
  792:  jump *label329 greaterThanEq *tmp432 .targetTitanium         ...
  793:  set *tmp419 false                                            ...
  794:  jump *label320 always 0 0                                    ...
        label *label329                                              ...
  795:  sensor *tmp435 .core @metaglass                              CoreBuilder.mnd: if core.@metaglass < targetMetaglass then return false; end;
  796:  jump *label331 greaterThanEq *tmp435 .targetMetaglass        ...
  797:  set *tmp419 false                                            ...
  798:  jump *label320 always 0 0                                    ...
        label *label331                                              ...
  799:  sensor *tmp438 .core @thorium                                CoreBuilder.mnd: if core.@thorium < targetThorium then return false; end;
  800:  jump *label333 greaterThanEq *tmp438 .targetThorium          ...
  801:  set *tmp419 false                                            ...
  802:  jump *label320 always 0 0                                    ...
        label *label333                                              ...
  803:  set *tmp419 true                                             CoreBuilder.mnd: return true;
  804:  jump *label320 always 0 0                                    ...
        label *label320                                              CoreBuilder.mnd: while !targetMet() do
  805:  jump *label319 notEqual *tmp419 false                        ...
  806:  setaddr :supplyBase*retaddr *label335                        CoreBuilder.mnd: supplyBase();
  807:  call *label28 *invalid :supplyBase*retval                    ...
        label *label335                                              ...
  808:  jump *label317 always 0 0                                    CoreBuilder.mnd: while !targetMet() do
        label *label319                                              ...
  809:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium)
        label *label30                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config)
  810:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass, thorium);
  811:  set :meetTarget:copper :buildBlock:copper                    ...
  812:  set :meetTarget:lead :buildBlock:lead                        ...
  813:  set :meetTarget:graphite :buildBlock:graphite                ...
  814:  set :meetTarget:silicon :buildBlock:silicon                  ...
  815:  set :meetTarget:titanium :buildBlock:titanium                ...
  816:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  817:  set :meetTarget:thorium :buildBlock:thorium                  ...
  818:  setaddr :meetTarget*retaddr *label340                        ...
  819:  call *label29 *invalid :meetTarget*retval                    ...
        label *label340                                              ...
  820:  write :buildBlock:block .blockBuilder ":buildBlockAt:block"  CoreBuilder.mnd: return blockBuilder.buildBlockAt(block, x, y, rotation, config);
  821:  write :buildBlock:x .blockBuilder ":buildBlockAt:x"          ...
  822:  write :buildBlock:y .blockBuilder ":buildBlockAt:y"          ...
  823:  write :buildBlock:rotation .blockBuilder ":buildBlockAt:rota ...
  824:  write :buildBlock:config .blockBuilder ":buildBlockAt:config ...
  825:  write false .blockBuilder ":buildBlockAt*finished"           ...
  826:  write 1 .blockBuilder "@counter"                             ...
        label *label341                                              ...
  827:  wait 1e-15                                                   ...
  828:  read *tmp462 .blockBuilder ":buildBlockAt*finished"          ...
  829:  jump *label341 equal *tmp462 false                           ...
  830:  read :buildBlock*retval .blockBuilder ":buildBlockAt*retval" ...
  831:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, thorium, rotation, config)
        label *label31                                               CoreBuilder.mnd: def buildRemoteBlock(cfg, x, y)
  832:  jump *label343 lessThan :buildRemoteBlock:x 0                CoreBuilder.mnd: if x >= 0 then
  833:  set :unpackCfg:cfg :buildRemoteBlock:cfg                     CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation);
  834:  setaddr :unpackCfg*retaddr *label345                         ...
  835:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label345                                              ...
  836:  set :buildBlock:block :unpackCfg:type                        CoreBuilder.mnd: return buildBlock(type, x, y, cu, pb, gr, si, ti, mg, th, rotation, null);
  837:  set :buildBlock:x :buildRemoteBlock:x                        ...
  838:  set :buildBlock:y :buildRemoteBlock:y                        ...
  839:  set :buildBlock:copper :unpackCfg:cu                         ...
  840:  set :buildBlock:lead :unpackCfg:pb                           ...
  841:  set :buildBlock:graphite :unpackCfg:gr                       ...
  842:  set :buildBlock:silicon :unpackCfg:si                        ...
  843:  set :buildBlock:titanium :unpackCfg:ti                       ...
  844:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  845:  set :buildBlock:thorium :unpackCfg:th                        ...
  846:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  847:  set :buildBlock:config null                                  ...
  848:  setaddr :buildBlock*retaddr *label346                        ...
  849:  call *label30 *invalid :buildBlock*retval                    ...
        label *label346                                              ...
  850:  set :buildRemoteBlock*retval :buildBlock*retval              ...
  851:  return :buildRemoteBlock*retaddr                             ...
        label *label343                                              CoreBuilder.mnd: if x >= 0 then
  852:  set :buildRemoteBlock*retval false                           CoreBuilder.mnd: return false;
  853:  return :buildRemoteBlock*retaddr                             ...
        label *label32                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
  854:  set :unpackCfg:cfg :buildBlockFromCfg:cfg                    CoreBuilder.mnd: unpackCfg(cfg, out type, out x, out y, out cu, out pb, out gr, out si, out ti, out mg, out th, out rotation);
  855:  setaddr :unpackCfg*retaddr *label348                         ...
  856:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label348                                              ...
  857:  op add *tmp466 .coreX :unpackCfg:x                           CoreBuilder.mnd: return buildBlock(type, coreX + x, coreY + y, cu, pb, gr, si, ti, mg, th, rotation, config);
  858:  op add *tmp467 .coreY :unpackCfg:y                           ...
  859:  set :buildBlock:block :unpackCfg:type                        ...
  860:  set :buildBlock:x *tmp466                                    ...
  861:  set :buildBlock:y *tmp467                                    ...
  862:  set :buildBlock:copper :unpackCfg:cu                         ...
  863:  set :buildBlock:lead :unpackCfg:pb                           ...
  864:  set :buildBlock:graphite :unpackCfg:gr                       ...
  865:  set :buildBlock:silicon :unpackCfg:si                        ...
  866:  set :buildBlock:titanium :unpackCfg:ti                       ...
  867:  set :buildBlock:metaglass :unpackCfg:mg                      ...
  868:  set :buildBlock:thorium :unpackCfg:th                        ...
  869:  set :buildBlock:rotation :unpackCfg:rotation                 ...
  870:  set :buildBlock:config :buildBlockFromCfg:config             ...
  871:  setaddr :buildBlock*retaddr *label349                        ...
  872:  call *label30 *invalid :buildBlock*retval                    ...
        label *label349                                              ...
  873:  set :buildBlockFromCfg*retval :buildBlock*retval             ...
  874:  return :buildBlockFromCfg*retaddr                            CoreBuilder.mnd: def buildBlockFromCfg(cfg, config)
        label *label33                                               CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  875:  set :buildBlockFromCfg:cfg :buildBlockFromCfg.1:cfg          CoreBuilder.mnd: buildBlockFromCfg(cfg, null);
  876:  set :buildBlockFromCfg:config null                           ...
  877:  setaddr :buildBlockFromCfg*retaddr *label351                 ...
  878:  call *label32 *invalid :buildBlockFromCfg*retval             ...
        label *label351                                              ...
  879:  set :buildBlockFromCfg.1*retval :buildBlockFromCfg*retval    CoreBuilder.mnd: def buildBlockFromCfg(cfg)
  880:  return :buildBlockFromCfg.1*retaddr                          ...
        label *label34                                               CoreBuilder.mnd: void meetTarget(cfg)
  881:  set :unpackCfg:cfg :meetTarget.1:cfg                         CoreBuilder.mnd: unpackCfg(cfg, out type, , , out cu, out pb, out gr, out si, out ti, out mg, out th);
  882:  setaddr :unpackCfg*retaddr *label353                         ...
  883:  call *label27 *invalid :unpackCfg*retval                     ...
        label *label353                                              ...
  884:  set :meetTarget:block :unpackCfg:type                        CoreBuilder.mnd: meetTarget(type, cu, pb, gr, si, ti, mg, th);
  885:  set :meetTarget:copper :unpackCfg:cu                         ...
  886:  set :meetTarget:lead :unpackCfg:pb                           ...
  887:  set :meetTarget:graphite :unpackCfg:gr                       ...
  888:  set :meetTarget:silicon :unpackCfg:si                        ...
  889:  set :meetTarget:titanium :unpackCfg:ti                       ...
  890:  set :meetTarget:metaglass :unpackCfg:mg                      ...
  891:  set :meetTarget:thorium :unpackCfg:th                        ...
  892:  setaddr :meetTarget*retaddr *label354                        ...
  893:  call *label29 *invalid :meetTarget*retval                    ...
        label *label354                                              ...
  894:  return :meetTarget.1*retaddr                                 CoreBuilder.mnd: void meetTarget(cfg)
        label *label36                                               CoreBuilder.mnd: def titaniumDrillScore(x, y, in out positive, in out negative)
  895:  ucontrol getBlock :titaniumDrillScore:x :titaniumDrillScore: Actions.mnd: getBlock(x, y, , out floor);
  896:  jump *label361 notEqual :getFloor:floor @ore-titanium        CoreBuilder.mnd: case getFloor(x, y)
  897:  op add :titaniumDrillScore:positive :titaniumDrillScore:posi ...
  898:  return :titaniumDrillScore*retaddr                           ...
        label *label361                                              ...
  899:  jump *label364 equal :getFloor:floor @ore-copper             ...
  900:  jump *label364 equal :getFloor:floor @ore-lead               ...
  901:  jump *label364 equal :getFloor:floor @ore-scrap              ...
  902:  jump *label363 notEqual :getFloor:floor @ore-coal            ...
        label *label364                                              ...
  903:  op add :titaniumDrillScore:negative :titaniumDrillScore:nega ...
        label *label363                                              ...
  904:  return :titaniumDrillScore*retaddr                           CoreBuilder.mnd: def titaniumDrillScore(x, y, in out positive, in out negative)
        label *label37                                               CoreBuilder.mnd: void buildTitaniumDrill(x, y, in out count)
  905:  jump *label366 greaterThanEq :buildTitaniumDrill:count 8     CoreBuilder.mnd: if count < 8 then
  906:  set :moveTo:x :buildTitaniumDrill:x                          Actions.mnd: moveTo(x, y, RADIUS);
  907:  set :moveTo:y :buildTitaniumDrill:y                          ...
  908:  set :moveTo:radius 6                                         ...
  909:  setaddr :moveTo*retaddr *label369                            ...
  910:  call *label11 *invalid :moveTo*retval                        ...
        label *label369                                              ...
  911:  set .positive 0                                              CoreBuilder.mnd: positive = 0; negative = 0;
  912:  set .negative 0                                              ...
  913:  set :titaniumDrillScore:x :buildTitaniumDrill:x              CoreBuilder.mnd: titaniumDrillScore(x, y, in out positive, in out negative);
  914:  set :titaniumDrillScore:y :buildTitaniumDrill:y              ...
  915:  set :titaniumDrillScore:positive .positive                   ...
  916:  set :titaniumDrillScore:negative .negative                   ...
  917:  setaddr :titaniumDrillScore*retaddr *label370                ...
  918:  call *label36 *invalid :titaniumDrillScore*retval            ...
        label *label370                                              ...
  919:  set .positive :titaniumDrillScore:positive                   ...
  920:  set .negative :titaniumDrillScore:negative                   ...
  921:  op add *tmp488 :buildTitaniumDrill:y 0.5                     CoreBuilder.mnd: titaniumDrillScore(x, y + 0.5, in out positive, in out negative);
  922:  set :titaniumDrillScore:x :buildTitaniumDrill:x              ...
  923:  set :titaniumDrillScore:y *tmp488                            ...
  924:  set :titaniumDrillScore:positive .positive                   ...
  925:  set :titaniumDrillScore:negative .negative                   ...
  926:  setaddr :titaniumDrillScore*retaddr *label371                ...
  927:  call *label36 *invalid :titaniumDrillScore*retval            ...
        label *label371                                              ...
  928:  set .positive :titaniumDrillScore:positive                   ...
  929:  set .negative :titaniumDrillScore:negative                   ...
  930:  op add :titaniumDrillScore:x :buildTitaniumDrill:x 0.5       CoreBuilder.mnd: titaniumDrillScore(x + 0.5, y, in out positive, in out negative);
  931:  set :titaniumDrillScore:y :buildTitaniumDrill:y              ...
  932:  set :titaniumDrillScore:positive .positive                   ...
  933:  set :titaniumDrillScore:negative .negative                   ...
  934:  setaddr :titaniumDrillScore*retaddr *label372                ...
  935:  call *label36 *invalid :titaniumDrillScore*retval            ...
        label *label372                                              ...
  936:  set .positive :titaniumDrillScore:positive                   ...
  937:  set .negative :titaniumDrillScore:negative                   ...
  938:  op add *tmp492 :buildTitaniumDrill:x 0.5                     CoreBuilder.mnd: titaniumDrillScore(x + 0.5, y + 0.5, in out positive, in out negative);
  939:  op add *tmp493 :buildTitaniumDrill:y 0.5                     ...
  940:  set :titaniumDrillScore:x *tmp492                            ...
  941:  set :titaniumDrillScore:y *tmp493                            ...
  942:  set :titaniumDrillScore:positive .positive                   ...
  943:  set :titaniumDrillScore:negative .negative                   ...
  944:  setaddr :titaniumDrillScore*retaddr *label373                ...
  945:  call *label36 *invalid :titaniumDrillScore*retval            ...
        label *label373                                              ...
  946:  set .positive :titaniumDrillScore:positive                   ...
  947:  set .negative :titaniumDrillScore:negative                   ...
  948:  op greaterThan *tmp495 .positive .negative                   CoreBuilder.mnd: if positive > negative && positive >= 2 then
  949:  op greaterThanEq *tmp496 .positive 2                         ...
  950:  op land *tmp497 *tmp495 *tmp496                              ...
  951:  jump *label374 equal *tmp497 false                           ...
  952:  write @pneumatic-drill .blockBuilder ":buildBlockAt:block"   CoreBuilder.mnd: var drill = blockBuilder.buildBlockAt(@pneumatic-drill, x, y, null, 0);
  953:  write :buildTitaniumDrill:x .blockBuilder ":buildBlockAt:x"  ...
  954:  write :buildTitaniumDrill:y .blockBuilder ":buildBlockAt:y"  ...
  955:  write null .blockBuilder ":buildBlockAt:rotation"            ...
  956:  write 0 .blockBuilder ":buildBlockAt:config"                 ...
  957:  write false .blockBuilder ":buildBlockAt*finished"           ...
  958:  write 1 .blockBuilder "@counter"                             ...
        label *label376                                              ...
  959:  wait 1e-15                                                   ...
  960:  read *tmp504 .blockBuilder ":buildBlockAt*finished"          ...
  961:  jump *label376 equal *tmp504 false                           ...
  962:  read :buildTitaniumDrill:drill .blockBuilder ":buildBlockAt* ...
  963:  jump *label377 equal :buildTitaniumDrill:drill null          CoreBuilder.mnd: if drill != null then
  964:  write :buildTitaniumDrill:drill .flareController ":addTitani CoreBuilder.mnd: flareController.addTitaniumDrill(drill);
  965:  write false .flareController ":addTitaniumDrill*finished"    ...
  966:  write 1 .flareController "@counter"                          ...
        label *label379                                              ...
  967:  wait 1e-15                                                   ...
  968:  read *tmp509 .flareController ":addTitaniumDrill*finished"   ...
  969:  jump *label379 equal *tmp509 false                           ...
  970:  op add :buildTitaniumDrill:count :buildTitaniumDrill:count 1 CoreBuilder.mnd: setFlareTarget(++count);
  971:  write :buildTitaniumDrill:count .controller ".flareTarget"   CoreBuilder.mnd: controller.flareTarget = target;
  972:  write :buildTitaniumDrill:count .display ".flareTarget"      CoreBuilder.mnd: display.flareTarget = target;
        label *label377                                              CoreBuilder.mnd: if drill != null then
        label *label374                                              CoreBuilder.mnd: if positive > negative && positive >= 2 then
        label *label366                                              CoreBuilder.mnd: if count < 8 then
  973:  return :buildTitaniumDrill*retaddr                           CoreBuilder.mnd: void buildTitaniumDrill(x, y, in out count)
        label *label38                                               CoreBuilder.mnd: void buildUnits()
  974:  set :meetTarget:block 0                                      CoreBuilder.mnd: meetTarget(0, 0, 0, 0, 0, 0, 0, 0);
  975:  set :meetTarget:copper 0                                     ...
  976:  set :meetTarget:lead 0                                       ...
  977:  set :meetTarget:graphite 0                                   ...
  978:  set :meetTarget:silicon 0                                    ...
  979:  set :meetTarget:titanium 0                                   ...
  980:  set :meetTarget:metaglass 0                                  ...
  981:  set :meetTarget:thorium 0                                    ...
  982:  setaddr :meetTarget*retaddr *label382                        ...
  983:  call *label29 *invalid :meetTarget*retval                    ...
        label *label382                                              ...
  984:  write 0 .display ".totalTargets"                             CoreBuilder.mnd: display.totalTargets = 0;
  985:  write null .display ".nextBlock"                             CoreBuilder.mnd: display.nextBlock = null;
  986:  write 0 .controller ".leadReserve"                           CoreBuilder.mnd: controller.leadReserve = 0;
  987:  write 0 .controller ".siliconReserve"                        CoreBuilder.mnd: controller.siliconReserve = 0;
  988:  return :buildUnits*retaddr                                   CoreBuilder.mnd: void buildUnits()


Performance: parsed in 717 ms, compiled in 374 ms, optimized in 1,890 ms, run in 5 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: no processor selected.
  (The target processor must be selected in Mindustry to receive the code.)

Program output (19 steps):
The program didn't generate any output.
Execution exception at instruction 41: ubind @poly:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
