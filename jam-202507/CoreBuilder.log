  1373 instructions before optimizations.
    54 instructions eliminated by Temp Variables Elimination (2 iterations).
   110 instructions eliminated by Dead Code Elimination (9 iterations).
C:\Home\golem\jam-202507\CoreBuilder.mnd:31:5 Variable 'unloader2' is not used.
C:\Home\golem\jam-202507\CoreBuilder.mnd:32:5 Variable 'kiln' is not used.
C:\Home\golem\jam-202507\CoreBuilder.mnd:37:5 Variable 'nextBlock' is not used.
C:\Home\golem\jam-202507\CoreBuilder.mnd:44:5 Variable 'totalTargets' is not used.
C:\Home\golem\jam-202507\CoreBuilder.mnd:46:5 Variable 'transportTarget' is not used.
C:\Home\golem\jam-202507\CoreBuilder.mnd:47:5 Variable 'transportItem' is not used.
C:\Home\golem\jam-202507\CoreBuilder.mnd:48:5 Variable 'status1' is not used.
C:\Home\golem\jam-202507\CoreBuilder.mnd:49:5 Variable 'status2' is not used.
C:\Home\golem\jam-202507\CoreBuilder.mnd:49:19 Variable 'item2' is not used.
C:\Home\golem\jam-202507\CoreBuilder.mnd:49:31 Variable 'block2' is not used.
C:\Home\golem\jam-202507\CoreBuilder.mnd:50:5 Variable 'status3' is not used.
     2 instructions eliminated by Jump Normalization (5 iterations).
    46 instructions eliminated by Jump Optimization (5 iterations).
    53 instructions eliminated by Single Step Elimination (2 passes, 8 iterations).
     9 instructions modified by Expression Optimization (3 iterations).
     1 instructions eliminated by If Expression Optimization (3 iterations).
   292 instructions eliminated by Data Flow Optimization (10 passes, 45 iterations).
     1 loops improved by Loop Hoisting.
    24 instructions added by Loop Optimization (3 iterations).
     4 loops improved by Loop Optimization.
    34 instructions added by Loop Unrolling (25 iterations).
    18 loops unrolled by Loop Unrolling.
     6 instructions eliminated by Jump Straightening (5 iterations).
    14 instructions updated by JumpThreading.
    26 instructions eliminated by Unreachable Code Elimination (2 iterations).
     4 instructions eliminated by Print Merging.
   837 instructions after optimizations.

Pass 1: speed optimization selection (cost limit 139):
    Replicate loop condition at CoreBuilder.mnd:121:5            size    +1, benefit   574443.4, efficiency 574443.359
    Replicate loop condition at CoreBuilder.mnd:139:5            size    +1, benefit   370253.9, efficiency 370253.906
    Replicate loop condition at CoreBuilder.mnd:163:9            size    +1, benefit   185127.0, efficiency 185126.953
    Replicate loop condition at CoreBuilder.mnd:331:5            size   +21, benefit    10625.0, efficiency    505.952
  * Unroll iteration loop at CoreBuilder.mnd:318:5               size   -11, benefit     9775.0, efficiency   Infinity (-9 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:424:9               size   +61, benefit      475.0, efficiency      7.787
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333

Pass 1: speed optimization selection (cost limit 148):
  * Replicate loop condition at CoreBuilder.mnd:121:5            size    +1, benefit   574443.4, efficiency 574443.359 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:139:5            size    +1, benefit   370253.9, efficiency 370253.906
    Replicate loop condition at CoreBuilder.mnd:163:9            size    +1, benefit   185127.0, efficiency 185126.953
    Replicate loop condition at CoreBuilder.mnd:331:5            size   +21, benefit    10625.0, efficiency    505.952
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:424:9               size   +61, benefit      475.0, efficiency      7.787
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333

Pass 1: speed optimization selection (cost limit 147):
  * Replicate loop condition at CoreBuilder.mnd:139:5            size    +1, benefit   370253.9, efficiency 370253.906 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:163:9            size    +1, benefit   185127.0, efficiency 185126.953
    Replicate loop condition at CoreBuilder.mnd:331:5            size   +21, benefit    10625.0, efficiency    505.952
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:424:9               size   +61, benefit      475.0, efficiency      7.787
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333

Pass 1: speed optimization selection (cost limit 146):
  * Replicate loop condition at CoreBuilder.mnd:163:9            size    +1, benefit   185127.0, efficiency 185126.953 (+1 instructions)
    Replicate loop condition at CoreBuilder.mnd:331:5            size   +21, benefit    10625.0, efficiency    505.952
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:424:9               size   +61, benefit      475.0, efficiency      7.787
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333

Pass 1: speed optimization selection (cost limit 145):
  * Replicate loop condition at CoreBuilder.mnd:331:5            size   +21, benefit    10625.0, efficiency    505.952 (+21 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:424:9               size   +61, benefit      475.0, efficiency      7.787
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333

Pass 1: speed optimization selection (cost limit 124):
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
  * Unroll iteration loop at CoreBuilder.mnd:424:9               size   +61, benefit      475.0, efficiency      7.787 (+44 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333

Pass 1: speed optimization selection (cost limit 80):
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333 (-1 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333

Pass 1: speed optimization selection (cost limit 81):
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333 (-1 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333

Pass 1: speed optimization selection (cost limit 82):
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333 (-1 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333

Pass 1: speed optimization selection (cost limit 83):
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333 (-1 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333

Pass 1: speed optimization selection (cost limit 84):
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333 (-1 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333

Pass 1: speed optimization selection (cost limit 85):
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333 (-1 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333

Pass 1: speed optimization selection (cost limit 86):
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333 (-1 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333

Pass 1: speed optimization selection (cost limit 87):
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333 (-1 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333

Pass 1: speed optimization selection (cost limit 88):
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333 (-1 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333

Pass 1: speed optimization selection (cost limit 89):
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +3, benefit       13.0, efficiency      4.333 (-1 instructions)

Pass 1: speed optimization selection (cost limit 90):
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250 (-2 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250

Pass 1: speed optimization selection (cost limit 92):
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250 (-2 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250

Pass 1: speed optimization selection (cost limit 94):
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250 (-2 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250

Pass 1: speed optimization selection (cost limit 96):
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250 (-2 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250

Pass 1: speed optimization selection (cost limit 98):
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250 (-2 instructions)
    Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250

Pass 1: speed optimization selection (cost limit 100):
  * Unroll iteration loop at CoreBuilder.mnd:374:5               size    +4, benefit       13.0, efficiency      3.250 (-2 instructions)

Modifications by Initial phase, Dead Code Elimination, iteration 1 (-74 instructions):
 
     6 set .smelter null
     7 set .titanium_drill null
     8 set .unloader1 null
-    * set .unloader2 null
-    * set .kiln null
     9 set .nextBlock ""
    10 set .copperTarget 0
    11 set .leadTarget 0
 
    61 op notEqual *tmp10 *tmp9 null
    62 jump *label25 equal *tmp10 false
    63 ucontrol itemDrop @air 1000
-    * set *tmp11 null
    64 jump *label26 always
    65 label *label25
-    * set *tmp11 null
    66 label *label26
    67 set :moveTo.1:x :moveToEmpty:x
    68 set :moveTo.1:y :moveToEmpty:y
 
   120 op greaterThanEq *tmp24 *tmp23 :depositItems:cap
   121 jump *label43 equal *tmp24 false
   122 jump *label42 always
-    * set *tmp25 null
   123 jump *label44 always
   124 label *label43
-    * set *tmp25 null
   125 label *label44
   126 label *label41
   127 sensor *tmp26 @unit @firstItem
   128 op notEqual *tmp27 *tmp26 null
   129 jump *label40 notEqual *tmp27 false
   130 label *label42
-    * set *tmp18 null
   131 jump *label36 always
   132 label *label35
   133 label *label45
 
   138 label *label46
   139 jump *label45 always
   140 label *label47
-    * set *tmp18 null
   141 label *label36
   142 set .transportTarget 0
   143 label *label33
 
   153 printflush message1
   154 stop
   155 label *label51
-    * set *tmp33 null
   156 jump *label50 always
   157 label *label49
-    * set *tmp33 null
   158 label *label50
   159 label *label48
   160 return :locateOre*retaddr
 
   184 op land *tmp37 *tmp35 *tmp36
   185 jump *label59 equal *tmp37 false
   186 jump *label58 always
-    * set *tmp38 null
   187 jump *label60 always
   188 label *label59
-    * set *tmp38 null
   189 label *label60
   190 ucontrol mine :mineOre:x :mineOre:y
   191 label *label57
 
   241 op land *tmp48 *tmp46 *tmp47
   242 jump *label70 equal *tmp48 false
   243 ucontrol itemDrop @air 1000
-    * set *tmp49 null
   244 jump *label71 always
   245 label *label70
-    * set *tmp49 null
   246 label *label71
   247 label *label68
   248 sensor *tmp50 @unit :fetchBlock:item
 
   294 setaddr :mineOre*retaddr *label85 (h:*label85)
   295 call *label7 *invalid :mineOre*retval (m:*label85) (h:*label85)
   296 label *label85
-    * set *tmp66 null
   297 jump *label84 always
   298 label *label83
-    * set *tmp66 null
   299 label *label84
   300 label *label81
   301 set :supplyBlocks:supplied true
 
   304 label *label78
   305 set *tmp61 null
   306 label *label79
-    * set *tmp58 *tmp61
   307 jump *label77 always
   308 label *label76
-    * set *tmp58 null
   309 label *label77
   310 sensor *tmp67 .core @silicon
   311 op lessThan *tmp68 *tmp67 .updatedSiliconTarget
 
   337 setaddr :mineOre*retaddr *label95 (h:*label95)
   338 call *label7 *invalid :mineOre*retval (m:*label95) (h:*label95)
   339 label *label95
-    * set *tmp77 null
   340 jump *label94 always
   341 label *label93
-    * set *tmp77 null
   342 label *label94
   343 label *label91
   344 set :supplyBlocks:supplied true
 
   372 setaddr :mineOre*retaddr *label103 (h:*label103)
   373 call *label7 *invalid :mineOre*retval (m:*label103) (h:*label103)
   374 label *label103
-    * set *tmp85 null
   375 jump *label102 always
   376 label *label101
-    * set *tmp85 null
   377 label *label102
   378 label *label99
   379 set :supplyBlocks:supplied true
 
   384 label *label97
   385 set *tmp72 *tmp80
   386 label *label89
-    * set *tmp69 *tmp72
   387 jump *label87 always
   388 label *label86
-    * set *tmp69 null
   389 label *label87
   390 sensor *tmp86 .battery @totalPower
   391 op lessThan *tmp87 *tmp86 .powerTarget
 
   414 setaddr :mineOre*retaddr *label111 (h:*label111)
   415 call *label7 *invalid :mineOre*retval (m:*label111) (h:*label111)
   416 label *label111
-    * set *tmp93 null
   417 jump *label110 always
   418 label *label109
-    * set *tmp93 null
   419 label *label110
   420 label *label107
   421 set :supplyBlocks:supplied true
 
   424 label *label104
   425 set *tmp88 null
   426 label *label105
-    * set *tmp55 *tmp88
   427 jump *label75 always
   428 label *label74
   429 op notEqual *tmp94 .processor null
 
   449 label *label112
   450 set *tmp95 null
   451 label *label113
-    * set *tmp55 *tmp95
   452 label *label75
   453 sensor *tmp99 .titanium_drill @titanium
   454 op lessThan *tmp100 *tmp99 .titaniumTrigger
 
   586 label *label128
   587 set *tmp104 *tmp111
   588 label *label121
-    * set *tmp101 *tmp104
   589 jump *label119 always
   590 label *label118
   591 set :status1.10:text "Fetching titanium"
 
   596 setaddr :fetchBlock*retaddr *label150 (h:*label150)
   597 call *label9 *invalid :fetchBlock*retval (m:*label150) (h:*label150)
   598 label *label150
-    * set *tmp101 null
   599 label *label119
   600 label *label73
   601 return :supplyBlocks*retaddr
 
   645 set .updatedGraphiteTarget *tmp128
   646 op max *tmp129 10 .siliconTarget
   647 set .updatedSiliconTarget *tmp129
-    * set *tmp127 .updatedSiliconTarget
   648 jump *label162 always
   649 label *label161
   650 op add *tmp130 .graphiteTarget 30
 
   653 write *tmp131 .processor ".smelterTarget"
   654 op add *tmp132 .metaglassTarget 30
   655 write *tmp132 .processor ".kilnTarget"
-    * set *tmp127 *tmp132
   656 label *label162
   657 sensor *tmp133 .core @titanium
   658 op add *tmp134 .titaniumTarget 10
 
   714 jump *label174 equal *tmp163 false
   715 set :buildBlockAt*retval :buildBlockAt:building
   716 jump *label169 always
-    * set *tmp164 null
   717 jump *label175 always
   718 label *label174
-    * set *tmp164 null
   719 label *label175
   720 jump *label176 equal :buildBlockAt:skipError false
   721 set :buildBlockAt*retval null
   722 jump *label169 always
-    * set *tmp165 null
   723 jump *label177 always
   724 label *label176
-    * set *tmp165 null
   725 label *label177
   726 print "[salmon]"
   727 print "Cannot build at ("
 
   733 printflush message1
   734 stop
   735 label *label178
-    * set *tmp162 null
   736 jump *label173 always
   737 label *label172
-    * set *tmp162 null
   738 label *label173
   739 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
   740 wait 0.25
 
   744 op equal *tmp168 :buildBlockAt:building null
   745 jump *label182 equal *tmp168 false
   746 jump *label181 always
-    * set *tmp169 null
   747 jump *label183 always
   748 label *label182
-    * set *tmp169 null
   749 label *label183
   750 label *label180
   751 op notEqual *tmp170 :buildBlockAt:type :buildBlockAt:block
 
   964 setaddr :buildBlock*retaddr *label216 (h:*label216)
   965 call *label13 *invalid :buildBlock*retval (m:*label216) (h:*label216)
   966 label *label216
-    * set *tmp195 :buildBlock*retval
   967 jump *label211 always
   968 label *label213
   969 multijump *tmp196 0 0 (m:marker4)
   970 multilabel *label215 (m:marker4)
   971 label *label214
-    * set *tmp195 null
   972 label *label211
   973 set :buildBlockFromCfg.4:block @silicon-smelter
   974 set :buildBlockFromCfg.4:offsetX 1.5
 
  1044 setaddr :moveRandom*retaddr *label236 (h:*label236)
  1045 call *label14 *invalid :moveRandom*retval (m:*label236) (h:*label236)
  1046 label *label236
-    * set *tmp213 :moveRandom*retval
  1047 jump *label235 always
  1048 label *label234
  1049 jump *label232 always
-    * set *tmp213 null
  1050 label *label235
  1051 label *label231
  1052 jump *label230 notEqual true false
  1053 label *label232
-    * set *tmp205 null
  1054 label *label229
  1055 set :buildTitaniumDrillCfg:x :locateOreAway:x
  1056 set :buildTitaniumDrillCfg:y :locateOreAway:y
 
  1096 label *label246
  1097 set *tmp220 null
  1098 label *label247
-    * set *tmp216 *tmp220
  1099 label *label245
  1100 set :buildTitaniumDrillCfg:count :checkOre:count
  1101 op add *tmp222 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
 
  1112 label *label249
  1113 set *tmp227 null
  1114 label *label250
-    * set *tmp223 *tmp227
  1115 label *label248
  1116 set :buildTitaniumDrillCfg:count :checkOre.1:count
  1117 op add *tmp229 :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
 
  1129 label *label252
  1130 set *tmp235 null
  1131 label *label253
-    * set *tmp231 *tmp235
  1132 label *label251
  1133 set :buildTitaniumDrillCfg:count :checkOre.2:count
  1134 op greaterThan *tmp237 :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
 
  1144 label *label256
  1145 set *tmp240 null
  1146 label *label257
-    * set *tmp238 *tmp240
  1147 jump *label255 always
  1148 label *label254
-    * set *tmp238 null
  1149 label *label255
  1150 label *label239
  1151 multijump *tmp214 0 0 (m:marker6)
 
  1173 jump *label261 equal *tmp247 false
  1174 set *tmp204 :buildTitaniumDrillCfg:result
  1175 jump *label224 always
-    * set *tmp248 null
  1176 jump *label262 always
  1177 label *label261
-    * set *tmp248 null
  1178 label *label262
  1179 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
-    * set *tmp242 null
  1180 jump *label259 always
  1181 label *label258
-    * set *tmp242 null
  1182 label *label259
  1183 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
  1184 op greaterThan *tmp249 :buildTitaniumDrillCfg:attempts 5
 
  1187 setaddr :moveRandom*retaddr *label265 (h:*label265)
  1188 call *label14 *invalid :moveRandom*retval (m:*label265) (h:*label265)
  1189 label *label265
-    * set *tmp251 :moveRandom*retval
  1190 set :buildTitaniumDrillCfg:attempts 0
-    * set *tmp250 :buildTitaniumDrillCfg:attempts
  1191 jump *label264 always
  1192 label *label263
-    * set *tmp250 null
  1193 label *label264
  1194 label *label226
  1195 jump *label225 always
 
  1270 setaddr :buildBlock*retaddr *label277 (h:*label277)
  1271 call *label13 *invalid :buildBlock*retval (m:*label277) (h:*label277)
  1272 label *label277
-    * set *tmp256 :buildBlock*retval
  1273 jump *label272 always
  1274 label *label274
  1275 multijump *tmp257 0 0 (m:marker8)
  1276 multilabel *label276 (m:marker8)
  1277 label *label275
-    * set *tmp256 null
  1278 label *label272
  1279 set :buildBlockFromCfg.7:block @micro-processor
  1280 set :buildBlockFromCfg.7:offsetX 1
 
  1347 setaddr :buildBlock*retaddr *label289 (h:*label289)
  1348 call *label13 *invalid :buildBlock*retval (m:*label289) (h:*label289)
  1349 label *label289
-    * set *tmp264 :buildBlock*retval
  1350 jump *label284 always
  1351 label *label286
  1352 multijump *tmp265 0 0 (m:marker10)
  1353 multilabel *label288 (m:marker10)
  1354 label *label287
-    * set *tmp264 null
  1355 label *label284
  1356 set :buildBlockFromCfg.9:block @unloader
  1357 set :buildBlockFromCfg.9:offsetX -2
 
  1392 label *label293
  1393 set *tmp268 null
  1394 label *label290
-    * set .unloader2 *tmp268
  1395 set :buildBlockFromCfg.10:block @sorter
  1396 set :buildBlockFromCfg.10:offsetX -3
  1397 set :buildBlockFromCfg.10:offsetY 1
 
  1423 setaddr :buildBlock*retaddr *label301 (h:*label301)
  1424 call *label13 *invalid :buildBlock*retval (m:*label301) (h:*label301)
  1425 label *label301
-    * set *tmp272 :buildBlock*retval
  1426 jump *label296 always
  1427 label *label298
  1428 multijump *tmp273 0 0 (m:marker12)
  1429 multilabel *label300 (m:marker12)
  1430 label *label299
-    * set *tmp272 null
  1431 label *label296
  1432 write @mono .processor ".unitToProduce"
  1433 set :buildBlockFromCfg.11:block @unloader
 
  1461 setaddr :buildBlock*retaddr *label307 (h:*label307)
  1462 call *label13 *invalid :buildBlock*retval (m:*label307) (h:*label307)
  1463 label *label307
-    * set *tmp276 :buildBlock*retval
  1464 jump *label302 always
  1465 label *label304
  1466 multijump *tmp277 0 0 (m:marker13)
  1467 multilabel *label306 (m:marker13)
  1468 label *label305
-    * set *tmp276 null
  1469 label *label302
  1470 set :buildBlockFromCfg.12:block @kiln
  1471 set :buildBlockFromCfg.12:offsetX 3.5
 
  1498 setaddr :buildBlock*retaddr *label313 (h:*label313)
  1499 call *label13 *invalid :buildBlock*retval (m:*label313) (h:*label313)
  1500 label *label313
-    * set *tmp280 :buildBlock*retval
  1501 jump *label308 always
  1502 label *label310
  1503 multijump *tmp281 0 0 (m:marker14)
  1504 multilabel *label312 (m:marker14)
  1505 label *label311
-    * set *tmp280 null
  1506 label *label308
  1507 set :buildBlockFromCfg.13:block @junction
  1508 set :buildBlockFromCfg.13:offsetX 2
 
  1535 setaddr :buildBlock*retaddr *label319 (h:*label319)
  1536 call *label13 *invalid :buildBlock*retval (m:*label319) (h:*label319)
  1537 label *label319
-    * set *tmp284 :buildBlock*retval
  1538 jump *label314 always
  1539 label *label316
  1540 multijump *tmp285 0 0 (m:marker15)
  1541 multilabel *label318 (m:marker15)
  1542 label *label317
-    * set *tmp284 null
  1543 label *label314
  1544 set :buildBlockFromCfg.14:block @water-extractor
  1545 set :buildBlockFromCfg.14:offsetX -3.5
 
  1572 setaddr :buildBlock*retaddr *label325 (h:*label325)
  1573 call *label13 *invalid :buildBlock*retval (m:*label325) (h:*label325)
  1574 label *label325
-    * set *tmp288 :buildBlock*retval
  1575 jump *label320 always
  1576 label *label322
  1577 multijump *tmp289 0 0 (m:marker16)
  1578 multilabel *label324 (m:marker16)
  1579 label *label323
-    * set *tmp288 null
  1580 label *label320
  1581 set :buildBlockFromCfg.15:block @steam-generator
  1582 set :buildBlockFromCfg.15:offsetX -4.5
 
  1609 setaddr :buildBlock*retaddr *label331 (h:*label331)
  1610 call *label13 *invalid :buildBlock*retval (m:*label331) (h:*label331)
  1611 label *label331
-    * set *tmp292 :buildBlock*retval
  1612 jump *label326 always
  1613 label *label328
  1614 multijump *tmp293 0 0 (m:marker17)
  1615 multilabel *label330 (m:marker17)
  1616 label *label329
-    * set *tmp292 null
  1617 label *label326
  1618 label *label332
  1619 jump *label334 equal true false

Modifications by Initial phase, Dead Code Elimination, iteration 2 (-21 instructions):
 
   299 label *label84
   300 label *label81
   301 set :supplyBlocks:supplied true
-    * set *tmp61 :supplyBlocks:supplied
   302 jump *label79 always
   303 label *label78
-    * set *tmp61 null
   304 label *label79
   305 jump *label77 always
   306 label *label76
 
   340 label *label94
   341 label *label91
   342 set :supplyBlocks:supplied true
-    * set *tmp72 :supplyBlocks:supplied
   343 jump *label89 always
   344 label *label88
   345 sensor *tmp78 .smelter @sand
 
   379 label *label96
   380 set *tmp80 null
   381 label *label97
-    * set *tmp72 *tmp80
   382 label *label89
   383 jump *label87 always
   384 label *label86
 
   415 label *label110
   416 label *label107
   417 set :supplyBlocks:supplied true
-    * set *tmp88 :supplyBlocks:supplied
   418 jump *label105 always
   419 label *label104
-    * set *tmp88 null
   420 label *label105
   421 jump *label75 always
   422 label *label74
 
   438 label *label114
   439 set *tmp98 null
   440 label *label115
-    * set *tmp95 *tmp98
   441 jump *label113 always
   442 label *label112
-    * set *tmp95 null
   443 label *label113
   444 label *label75
   445 sensor *tmp99 .titanium_drill @titanium
 
   474 setaddr :mineOre.1*retaddr *label126 (h:*label126)
   475 call *label8 *invalid :mineOre.1*retval (m:*label126) (h:*label126)
   476 label *label126
-    * set *tmp104 null
   477 jump *label121 always
   478 label *label120
   479 sensor *tmp109 .core @copper
 
   575 label *label133
   576 set *tmp111 *tmp114
   577 label *label128
-    * set *tmp104 *tmp111
   578 label *label121
   579 jump *label119 always
   580 label *label118
 
   789 setaddr :moveTo.1*retaddr *label188 (h:*label188)
   790 call *label2 *invalid :moveTo.1*retval (m:*label188) (h:*label188)
   791 label *label188
-    * set :moveRandom*retval null
   792 label *label187
   793 return :moveRandom*retaddr
   794 end
 
  1080 jump *label246 equal *tmp219 false
  1081 set *tmp221 :checkOre:count
  1082 op add :checkOre:count :checkOre:count 1
-    * set *tmp220 *tmp221
  1083 jump *label247 always
  1084 label *label246
-    * set *tmp220 null
  1085 label *label247
  1086 label *label245
  1087 set :buildTitaniumDrillCfg:count :checkOre:count
 
  1094 jump *label249 equal *tmp226 false
  1095 set *tmp228 :checkOre.1:count
  1096 op add :checkOre.1:count :checkOre.1:count 1
-    * set *tmp227 *tmp228
  1097 jump *label250 always
  1098 label *label249
-    * set *tmp227 null
  1099 label *label250
  1100 label *label248
  1101 set :buildTitaniumDrillCfg:count :checkOre.1:count
 
  1109 jump *label252 equal *tmp234 false
  1110 set *tmp236 :checkOre.2:count
  1111 op add :checkOre.2:count :checkOre.2:count 1
-    * set *tmp235 *tmp236
  1112 jump *label253 always
  1113 label *label252
-    * set *tmp235 null
  1114 label *label253
  1115 label *label251
  1116 set :buildTitaniumDrillCfg:count :checkOre.2:count
 
  1122 op greaterThanEq *tmp239 :buildTitaniumDrillCfg:count 4
  1123 jump *label256 equal *tmp239 false
  1124 jump *label240 always
-    * set *tmp240 null
  1125 jump *label257 always
  1126 label *label256
-    * set *tmp240 null
  1127 label *label257
  1128 jump *label255 always
  1129 label *label254
 
  1365 setaddr :buildBlock*retaddr *label295 (h:*label295)
  1366 call *label13 *invalid :buildBlock*retval (m:*label295) (h:*label295)
  1367 label *label295
-    * set *tmp268 :buildBlock*retval
  1368 jump *label290 always
  1369 label *label292
  1370 multijump *tmp269 0 0 (m:marker11)
  1371 multilabel *label294 (m:marker11)
  1372 label *label293
-    * set *tmp268 null
  1373 label *label290
  1374 set :buildBlockFromCfg.10:block @sorter
  1375 set :buildBlockFromCfg.10:offsetX -3

Modifications by Initial phase, Dead Code Elimination, iteration 3 (-9 instructions):
 
   374 label *label102
   375 label *label99
   376 set :supplyBlocks:supplied true
-    * set *tmp80 :supplyBlocks:supplied
   377 jump *label97 always
   378 label *label96
-    * set *tmp80 null
   379 label *label97
   380 label *label89
   381 jump *label87 always
 
   431 call *label8 *invalid :mineOre.1*retval (m:*label117) (h:*label117)
   432 label *label117
   433 jump *label73 always
-    * set *tmp98 null
   434 jump *label115 always
   435 label *label114
-    * set *tmp98 null
   436 label *label115
   437 jump *label113 always
   438 label *label112
 
   489 setaddr :mineOre.1*retaddr *label131 (h:*label131)
   490 call *label8 *invalid :mineOre.1*retval (m:*label131) (h:*label131)
   491 label *label131
-    * set *tmp111 null
   492 jump *label128 always
   493 label *label127
   494 sensor *tmp112 .core @lead
 
   568 label *label138
   569 set *tmp114 *tmp117
   570 label *label133
-    * set *tmp111 *tmp114
   571 label *label128
   572 label *label121
   573 jump *label119 always
 
  1072 ucontrol getBlock :checkOre:x :checkOre:y *tmp218 *tmp217 :checkOre:floor
  1073 op equal *tmp219 :checkOre:floor @ore-titanium
  1074 jump *label246 equal *tmp219 false
-    * set *tmp221 :checkOre:count
  1075 op add :checkOre:count :checkOre:count 1
  1076 jump *label247 always
  1077 label *label246
 
  1085 ucontrol getBlock :checkOre.1:x :checkOre.1:y *tmp225 *tmp224 :checkOre.1:floor
  1086 op equal *tmp226 :checkOre.1:floor @ore-titanium
  1087 jump *label249 equal *tmp226 false
-    * set *tmp228 :checkOre.1:count
  1088 op add :checkOre.1:count :checkOre.1:count 1
  1089 jump *label250 always
  1090 label *label249
 
  1099 ucontrol getBlock :checkOre.2:x :checkOre.2:y *tmp233 *tmp232 :checkOre.2:floor
  1100 op equal *tmp234 :checkOre.2:floor @ore-titanium
  1101 jump *label252 equal *tmp234 false
-    * set *tmp236 :checkOre.2:count
  1102 op add :checkOre.2:count :checkOre.2:count 1
  1103 jump *label253 always
  1104 label *label252

Modifications by Initial phase, Dead Code Elimination, iteration 4 (-2 instructions):
 
   508 setaddr :mineOre.1*retaddr *label136 (h:*label136)
   509 call *label8 *invalid :mineOre.1*retval (m:*label136) (h:*label136)
   510 label *label136
-    * set *tmp114 null
   511 jump *label133 always
   512 label *label132
   513 sensor *tmp115 .core @metaglass
 
   565 label *label143
   566 set *tmp117 *tmp119
   567 label *label138
-    * set *tmp114 *tmp117
   568 label *label133
   569 label *label128
   570 label *label121

Modifications by Initial phase, Dead Code Elimination, iteration 5 (-2 instructions):
 
   527 setaddr :mineOre.1*retaddr *label141 (h:*label141)
   528 call *label8 *invalid :mineOre.1*retval (m:*label141) (h:*label141)
   529 label *label141
-    * set *tmp117 null
   530 jump *label138 always
   531 label *label137
   532 op equal *tmp118 :supplyBlocks:supplied false
 
   562 label *label142
   563 set *tmp119 null
   564 label *label143
-    * set *tmp117 *tmp119
   565 label *label138
   566 label *label133
   567 label *label128

Modifications by Initial phase, Dead Code Elimination, iteration 6 (-2 instructions):
 
   557 setaddr :mineOre.1*retaddr *label148 (h:*label148)
   558 call *label8 *invalid :mineOre.1*retval (m:*label148) (h:*label148)
   559 label *label148
-    * set *tmp119 null
   560 jump *label143 always
   561 label *label142
-    * set *tmp119 null
   562 label *label143
   563 label *label138
   564 label *label133

Modifications by Initial phase, Temp Variables Elimination, iteration 1 (-54 instructions):
 
   112 setaddr :moveToBlock*retaddr *label39 (h:*label39)
   113 call *label4 *invalid :moveToBlock*retval (m:*label39) (h:*label39)
   114 label *label39
-    * sensor *tmp22 :depositItems:block @itemCapacity
-    * set :depositItems:cap *tmp22
+  115 sensor :depositItems:cap :depositItems:block @itemCapacity
   116 label *label40
   117 ucontrol itemDrop :depositItems:block 30
   118 sensor *tmp23 :depositItems:block :depositItems:item
 
   143 return :depositItems*retaddr
   144 end
   145 label *label6
-    * ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp30 *tmp31
+  146 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp30 0
   147 op equal *tmp32 *tmp30 false
   148 jump *label49 equal *tmp32 false
   149 print "[salmon]"
 
   176 set .status3 :status3.2:text
   177 label *label55
   178 label *label56
-    * sensor *tmp34 @unit @firstItem
-    * set :mineOre:item *tmp34
+  179 sensor :mineOre:item @unit @firstItem
   180 op notEqual *tmp35 :mineOre:item null
   181 op notEqual *tmp36 :mineOre:item :mineOre:ore
   182 op land *tmp37 *tmp35 *tmp36
 
   202 return :mineOre*retaddr
   203 end
   204 label *label8
-    * set *tmp41 :mineOre.1:ore
-    * set :mineOre:ore *tmp41
+  205 set :mineOre:ore :mineOre.1:ore
   206 set :mineOre:amount 30
   207 set :mineOre:block .core
   208 setaddr :mineOre*retaddr *label63 (h:*label63)
 
   212 return :mineOre.1*retaddr
   213 end
   214 label *label9
-    * sensor *tmp42 :fetchBlock:block @itemCapacity
-    * set .transportTarget *tmp42
+  215 sensor .transportTarget :fetchBlock:block @itemCapacity
   216 set .transportItem :fetchBlock:item
   217 set :status2:text "Fetching "
   218 set :status2:item :fetchBlock:item
 
   230 label *label66
   231 label *label67
   232 ucontrol itemTake :fetchBlock:block :fetchBlock:item 30
-    * sensor *tmp45 @unit @firstItem
-    * set :fetchBlock:unitItem *tmp45
+  233 sensor :fetchBlock:unitItem @unit @firstItem
   234 op notEqual *tmp46 :fetchBlock:unitItem null
   235 op notEqual *tmp47 :fetchBlock:unitItem :fetchBlock:item
   236 op land *tmp48 *tmp46 *tmp47
 
   279 label *label82
   280 sensor *tmp62 :supplyBlock:block @itemCapacity
   281 sensor *tmp63 :supplyBlock:block :supplyBlock:ore
-    * op sub *tmp64 *tmp62 *tmp63
-    * set :supplyBlock:missing *tmp64
+  282 op sub :supplyBlock:missing *tmp62 *tmp63
   283 op greaterThan *tmp65 :supplyBlock:missing 0
   284 jump *label83 equal *tmp65 false
   285 set :mineOre:ore :supplyBlock:ore
 
   319 label *label92
   320 sensor *tmp73 :supplyBlock.1:block @itemCapacity
   321 sensor *tmp74 :supplyBlock.1:block :supplyBlock.1:ore
-    * op sub *tmp75 *tmp73 *tmp74
-    * set :supplyBlock.1:missing *tmp75
+  322 op sub :supplyBlock.1:missing *tmp73 *tmp74
   323 op greaterThan *tmp76 :supplyBlock.1:missing 0
   324 jump *label93 equal *tmp76 false
   325 set :mineOre:ore :supplyBlock.1:ore
 
   352 label *label100
   353 sensor *tmp81 :supplyBlock.2:block @itemCapacity
   354 sensor *tmp82 :supplyBlock.2:block :supplyBlock.2:ore
-    * op sub *tmp83 *tmp81 *tmp82
-    * set :supplyBlock.2:missing *tmp83
+  355 op sub :supplyBlock.2:missing *tmp81 *tmp82
   356 op greaterThan *tmp84 :supplyBlock.2:missing 0
   357 jump *label101 equal *tmp84 false
   358 set :mineOre:ore :supplyBlock.2:ore
 
   390 label *label108
   391 sensor *tmp89 :supplyBlock.3:block @itemCapacity
   392 sensor *tmp90 :supplyBlock.3:block :supplyBlock.3:ore
-    * op sub *tmp91 *tmp89 *tmp90
-    * set :supplyBlock.3:missing *tmp91
+  393 op sub :supplyBlock.3:missing *tmp89 *tmp90
   394 op greaterThan *tmp92 :supplyBlock.3:missing 0
   395 jump *label109 equal *tmp92 false
   396 set :mineOre:ore :supplyBlock.3:ore
 
   438 set :status1.5:text "Meeting the silicon target"
   439 set .status1 :status1.5:text
   440 label *label122
-    * sensor *tmp105 .core @coal
-    * set :supplyBlocks:coal *tmp105
-    * sensor *tmp106 .core @sand
-    * set :supplyBlocks:sand *tmp106
+  441 sensor :supplyBlocks:coal .core @coal
+  442 sensor :supplyBlocks:sand .core @sand
   443 op lessThan *tmp107 :supplyBlocks:coal :supplyBlocks:sand
   444 jump *label123 equal *tmp107 false
   445 set *tmp108 @coal
 
   523 set :status1.9:text "Supplying base"
   524 set .status1 :status1.9:text
   525 label *label144
-    * sensor *tmp120 .core @coal
-    * set :supplyBlocks:coal.1 *tmp120
-    * sensor *tmp121 .core @sand
-    * set :supplyBlocks:sand.1 *tmp121
+  526 sensor :supplyBlocks:coal.1 .core @coal
+  527 sensor :supplyBlocks:sand.1 .core @sand
   528 op lessThanEq *tmp122 :supplyBlocks:coal.1 :supplyBlocks:sand.1
   529 jump *label145 equal *tmp122 false
   530 set *tmp123 @coal
 
   606 set .totalTargets :meetTarget:count
   607 op equal *tmp126 .processor null
   608 jump *label161 equal *tmp126 false
-    * op max *tmp128 10 .graphiteTarget
-    * set .updatedGraphiteTarget *tmp128
-    * op max *tmp129 10 .siliconTarget
-    * set .updatedSiliconTarget *tmp129
+  609 op max .updatedGraphiteTarget 10 .graphiteTarget
+  610 op max .updatedSiliconTarget 10 .siliconTarget
   611 jump *label162 always
   612 label *label161
   613 op add *tmp130 .graphiteTarget 30
 
   669 set :status3.3:text "Building..."
   670 set .status3 :status3.3:text
   671 label *label171
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp159 *tmp160
-    * set :buildBlockAt:building *tmp159
+  672 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
   673 op notEqual *tmp161 :buildBlockAt:building null
   674 jump *label172 equal *tmp161 false
   675 op equal *tmp163 :buildBlockAt:type :buildBlockAt:block
 
   701 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
   702 wait 0.25
   703 label *label179
-    * ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type *tmp166 *tmp167
-    * set :buildBlockAt:building *tmp166
+  704 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
   705 op equal *tmp168 :buildBlockAt:building null
   706 jump *label182 equal *tmp168 false
   707 jump *label181 always
 
   745 return :buildBlock*retaddr
   746 end
   747 label *label14
-    * op rand *tmp171 360
-    * set :moveRandom:angle *tmp171
+  748 op rand :moveRandom:angle 360
   749 sensor *tmp172 @unit @x
   750 op sin *tmp173 :moveRandom:angle
   751 op mul *tmp174 *tmp173 :moveRandom:distance
 
   765 label *label0
   766 label *label190
   767 ubind @poly
-    * ulocate building core false @copper .coreX .coreY *tmp181 *tmp180
-    * set .core *tmp180
+  768 ulocate building core false @copper .coreX .coreY 0 .core
   769 label *label191
   770 op equal *tmp182 .core null
   771 jump *label190 notEqual *tmp182 false
 
   783 set :buildBlockFromCfg:config null
   784 setaddr *tmp184 *label197
   785 label *label194
-    * op add *tmp185 .coreX :buildBlockFromCfg:offsetX
-    * set :buildBlockFromCfg:x *tmp185
-    * op add *tmp186 .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlockFromCfg:y *tmp186
+  786 op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
+  787 op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
   788 set :buildBlock:block :buildBlockFromCfg:block
   789 set :buildBlock:x :buildBlockFromCfg:x
   790 set :buildBlock:y :buildBlockFromCfg:y
 
   821 set :buildBlockFromCfg.1:config null
   822 setaddr *tmp188 *label203
   823 label *label200
-    * op add *tmp189 .coreX :buildBlockFromCfg.1:offsetX
-    * set :buildBlockFromCfg.1:x *tmp189
-    * op add *tmp190 .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlockFromCfg.1:y *tmp190
+  824 op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
+  825 op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
   826 set :buildBlock:block :buildBlockFromCfg.1:block
   827 set :buildBlock:x :buildBlockFromCfg.1:x
   828 set :buildBlock:y :buildBlockFromCfg.1:y
 
   859 set :buildBlockFromCfg.2:config null
   860 setaddr *tmp192 *label209
   861 label *label206
-    * op add *tmp193 .coreX :buildBlockFromCfg.2:offsetX
-    * set :buildBlockFromCfg.2:x *tmp193
-    * op add *tmp194 .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlockFromCfg.2:y *tmp194
+  862 op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
+  863 op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
   864 set :buildBlock:block :buildBlockFromCfg.2:block
   865 set :buildBlock:x :buildBlockFromCfg.2:x
   866 set :buildBlock:y :buildBlockFromCfg.2:y
 
   898 set :buildBlockFromCfg.3:config null
   899 setaddr *tmp196 *label215
   900 label *label212
-    * op add *tmp197 .coreX :buildBlockFromCfg.3:offsetX
-    * set :buildBlockFromCfg.3:x *tmp197
-    * op add *tmp198 .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlockFromCfg.3:y *tmp198
+  901 op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
+  902 op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
   903 set :buildBlock:block :buildBlockFromCfg.3:block
   904 set :buildBlock:x :buildBlockFromCfg.3:x
   905 set :buildBlock:y :buildBlockFromCfg.3:y
 
   933 set :buildBlockFromCfg.4:config null
   934 setaddr *tmp200 *label221
   935 label *label218
-    * op add *tmp201 .coreX :buildBlockFromCfg.4:offsetX
-    * set :buildBlockFromCfg.4:x *tmp201
-    * op add *tmp202 .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlockFromCfg.4:y *tmp202
+  936 op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
+  937 op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
   938 set :buildBlock:block :buildBlockFromCfg.4:block
   939 set :buildBlock:x :buildBlockFromCfg.4:x
   940 set :buildBlock:y :buildBlockFromCfg.4:y
 
  1030 setaddr *tmp214 *label244
  1031 label *label238
  1032 set :buildTitaniumDrillCfg:count 0
-    * op add *tmp215 :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
-    * set :checkOre:x *tmp215
+ 1033 op add :checkOre:x :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
  1034 set :checkOre:y :buildTitaniumDrillCfg:y
  1035 set :checkOre:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre:x :checkOre:y *tmp218 *tmp217 :checkOre:floor
+ 1036 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
  1037 op equal *tmp219 :checkOre:floor @ore-titanium
  1038 jump *label246 equal *tmp219 false
  1039 op add :checkOre:count :checkOre:count 1
 
  1046 set :checkOre.1:x :buildTitaniumDrillCfg:x
  1047 set :checkOre.1:y *tmp222
  1048 set :checkOre.1:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.1:x :checkOre.1:y *tmp225 *tmp224 :checkOre.1:floor
+ 1049 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
  1050 op equal *tmp226 :checkOre.1:floor @ore-titanium
  1051 jump *label249 equal *tmp226 false
  1052 op add :checkOre.1:count :checkOre.1:count 1
 
  1060 set :checkOre.2:x *tmp229
  1061 set :checkOre.2:y *tmp230
  1062 set :checkOre.2:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.2:x :checkOre.2:y *tmp233 *tmp232 :checkOre.2:floor
+ 1063 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
  1064 op equal *tmp234 :checkOre.2:floor @ore-titanium
  1065 jump *label252 equal *tmp234 false
  1066 op add :checkOre.2:count :checkOre.2:count 1
 
  1090 op greaterThan *tmp241 :buildTitaniumDrillCfg:best 0
  1091 jump *label258 equal *tmp241 false
  1092 op div *tmp243 :buildTitaniumDrillCfg:bx 2
-    * op add *tmp244 :buildTitaniumDrillCfg:x *tmp243
-    * set :buildTitaniumDrillCfg:bx *tmp244
+ 1093 op add :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:x *tmp243
  1094 op div *tmp245 :buildTitaniumDrillCfg:by 2
-    * op add *tmp246 :buildTitaniumDrillCfg:y *tmp245
-    * set :buildTitaniumDrillCfg:by *tmp246
+ 1095 op add :buildTitaniumDrillCfg:by :buildTitaniumDrillCfg:y *tmp245
  1096 set :buildBlockAt:block @pneumatic-drill
  1097 set :buildBlockAt:x :buildTitaniumDrillCfg:bx
  1098 set :buildBlockAt:y :buildTitaniumDrillCfg:by
 
  1146 set :buildBlockFromCfg.5:config null
  1147 setaddr *tmp253 *label270
  1148 label *label267
-    * op add *tmp254 .coreX :buildBlockFromCfg.5:offsetX
-    * set :buildBlockFromCfg.5:x *tmp254
-    * op add *tmp255 .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlockFromCfg.5:y *tmp255
+ 1149 op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
+ 1150 op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
  1151 set :buildBlock:block :buildBlockFromCfg.5:block
  1152 set :buildBlock:x :buildBlockFromCfg.5:x
  1153 set :buildBlock:y :buildBlockFromCfg.5:y
 
  1184 set :buildBlockFromCfg.6:config null
  1185 setaddr *tmp257 *label276
  1186 label *label273
-    * op add *tmp258 .coreX :buildBlockFromCfg.6:offsetX
-    * set :buildBlockFromCfg.6:x *tmp258
-    * op add *tmp259 .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlockFromCfg.6:y *tmp259
+ 1187 op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
+ 1188 op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
  1189 set :buildBlock:block :buildBlockFromCfg.6:block
  1190 set :buildBlock:x :buildBlockFromCfg.6:x
  1191 set :buildBlock:y :buildBlockFromCfg.6:y
 
  1219 set :buildBlockFromCfg.7:config processor1
  1220 setaddr *tmp261 *label282
  1221 label *label279
-    * op add *tmp262 .coreX :buildBlockFromCfg.7:offsetX
-    * set :buildBlockFromCfg.7:x *tmp262
-    * op add *tmp263 .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlockFromCfg.7:y *tmp263
+ 1222 op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
+ 1223 op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
  1224 set :buildBlock:block :buildBlockFromCfg.7:block
  1225 set :buildBlock:x :buildBlockFromCfg.7:x
  1226 set :buildBlock:y :buildBlockFromCfg.7:y
 
  1257 set :buildBlockFromCfg.8:config @mono
  1258 setaddr *tmp265 *label288
  1259 label *label285
-    * op add *tmp266 .coreX :buildBlockFromCfg.8:offsetX
-    * set :buildBlockFromCfg.8:x *tmp266
-    * op add *tmp267 .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlockFromCfg.8:y *tmp267
+ 1260 op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
+ 1261 op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
  1262 set :buildBlock:block :buildBlockFromCfg.8:block
  1263 set :buildBlock:x :buildBlockFromCfg.8:x
  1264 set :buildBlock:y :buildBlockFromCfg.8:y
 
  1292 set :buildBlockFromCfg.9:config null
  1293 setaddr *tmp269 *label294
  1294 label *label291
-    * op add *tmp270 .coreX :buildBlockFromCfg.9:offsetX
-    * set :buildBlockFromCfg.9:x *tmp270
-    * op add *tmp271 .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlockFromCfg.9:y *tmp271
+ 1295 op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
+ 1296 op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
  1297 set :buildBlock:block :buildBlockFromCfg.9:block
  1298 set :buildBlock:x :buildBlockFromCfg.9:x
  1299 set :buildBlock:y :buildBlockFromCfg.9:y
 
  1327 set :buildBlockFromCfg.10:config @coal
  1328 setaddr *tmp273 *label300
  1329 label *label297
-    * op add *tmp274 .coreX :buildBlockFromCfg.10:offsetX
-    * set :buildBlockFromCfg.10:x *tmp274
-    * op add *tmp275 .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlockFromCfg.10:y *tmp275
+ 1330 op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
+ 1331 op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
  1332 set :buildBlock:block :buildBlockFromCfg.10:block
  1333 set :buildBlock:x :buildBlockFromCfg.10:x
  1334 set :buildBlock:y :buildBlockFromCfg.10:y
 
  1363 set :buildBlockFromCfg.11:config null
  1364 setaddr *tmp277 *label306
  1365 label *label303
-    * op add *tmp278 .coreX :buildBlockFromCfg.11:offsetX
-    * set :buildBlockFromCfg.11:x *tmp278
-    * op add *tmp279 .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlockFromCfg.11:y *tmp279
+ 1366 op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
+ 1367 op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
  1368 set :buildBlock:block :buildBlockFromCfg.11:block
  1369 set :buildBlock:x :buildBlockFromCfg.11:x
  1370 set :buildBlock:y :buildBlockFromCfg.11:y
 
  1398 set :buildBlockFromCfg.12:config null
  1399 setaddr *tmp281 *label312
  1400 label *label309
-    * op add *tmp282 .coreX :buildBlockFromCfg.12:offsetX
-    * set :buildBlockFromCfg.12:x *tmp282
-    * op add *tmp283 .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlockFromCfg.12:y *tmp283
+ 1401 op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
+ 1402 op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
  1403 set :buildBlock:block :buildBlockFromCfg.12:block
  1404 set :buildBlock:x :buildBlockFromCfg.12:x
  1405 set :buildBlock:y :buildBlockFromCfg.12:y
 
  1433 set :buildBlockFromCfg.13:config null
  1434 setaddr *tmp285 *label318
  1435 label *label315
-    * op add *tmp286 .coreX :buildBlockFromCfg.13:offsetX
-    * set :buildBlockFromCfg.13:x *tmp286
-    * op add *tmp287 .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlockFromCfg.13:y *tmp287
+ 1436 op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
+ 1437 op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
  1438 set :buildBlock:block :buildBlockFromCfg.13:block
  1439 set :buildBlock:x :buildBlockFromCfg.13:x
  1440 set :buildBlock:y :buildBlockFromCfg.13:y
 
  1468 set :buildBlockFromCfg.14:config null
  1469 setaddr *tmp289 *label324
  1470 label *label321
-    * op add *tmp290 .coreX :buildBlockFromCfg.14:offsetX
-    * set :buildBlockFromCfg.14:x *tmp290
-    * op add *tmp291 .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlockFromCfg.14:y *tmp291
+ 1471 op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
+ 1472 op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
  1473 set :buildBlock:block :buildBlockFromCfg.14:block
  1474 set :buildBlock:x :buildBlockFromCfg.14:x
  1475 set :buildBlock:y :buildBlockFromCfg.14:y
 
  1503 set :buildBlockFromCfg.15:config null
  1504 setaddr *tmp293 *label330
  1505 label *label327
-    * op add *tmp294 .coreX :buildBlockFromCfg.15:offsetX
-    * set :buildBlockFromCfg.15:x *tmp294
-    * op add *tmp295 .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlockFromCfg.15:y *tmp295
+ 1506 op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
+ 1507 op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
  1508 set :buildBlock:block :buildBlockFromCfg.15:block
  1509 set :buildBlock:x :buildBlockFromCfg.15:x
  1510 set :buildBlock:y :buildBlockFromCfg.15:y

Modifications by Iterated phase, Jump Normalization, pass 1, iteration 1 (-2 instructions):
 
   960 set .smelter *tmp199
   961 set :buildTitaniumDrillCfg:attempts 0
   962 label *label225
-    * jump *label227 equal true false
   963 set :meetTarget:block @pneumatic-drill
   964 set :meetTarget:copper 18
   965 set :meetTarget:lead 0
 
   996 jump *label232 always
   997 label *label235
   998 label *label231
-    * jump *label230 notEqual true false
+  999 jump *label230 always
  1000 label *label232
  1001 label *label229
  1002 set :buildTitaniumDrillCfg:x :locateOreAway:x
 
  1525 label *label329
  1526 label *label326
  1527 label *label332
-    * jump *label334 equal true false
  1528 setaddr :supplyBlocks*retaddr *label335 (h:*label335)
  1529 call *label10 *invalid :supplyBlocks*retval (m:*label335) (h:*label335)
  1530 label *label335

Modifications by Iterated phase, Jump Optimization, pass 1, iteration 1 (-46 instructions):
 
    34 label *label18
    35 label *label19
    36 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp4
-    * op equal *tmp5 *tmp4 false
-    * jump *label21 equal *tmp5 false
+   37 jump *label21 notEqual *tmp4 false
    38 op sub *tmp6 :moveTo:radius 0.5
    39 ucontrol approach :moveTo:x :moveTo:y *tmp6
    40 label *label20
 
    57 end
    58 label *label3
    59 sensor *tmp9 @unit @firstItem
-    * op notEqual *tmp10 *tmp9 null
-    * jump *label25 equal *tmp10 false
+   60 jump *label25 equal *tmp9 null
    61 ucontrol itemDrop @air 1000
    62 jump *label26 always
    63 label *label25
 
    69 label *label27
    70 label *label28
    71 sensor *tmp12 @unit @firstItem
-    * op notEqual *tmp13 *tmp12 null
-    * jump *label30 equal *tmp13 false
+   72 jump *label30 equal *tmp12 null
    73 ucontrol itemDrop @air 1000
    74 label *label29
    75 jump *label28 always
 
    94 set .status3 :status3.1:text
    95 label *label34
    96 sensor *tmp16 @unit @firstItem
-    * op equal *tmp17 *tmp16 :depositItems:item
-    * jump *label35 equal *tmp17 false
+   97 jump *label35 notEqual *tmp16 :depositItems:item
    98 op equal *tmp19 :depositItems:block .core
    99 op land *tmp20 :depositItems:fromMining *tmp19
   100 jump *label37 equal *tmp20 false
 
   112 label *label40
   113 ucontrol itemDrop :depositItems:block 30
   114 sensor *tmp23 :depositItems:block :depositItems:item
-    * op greaterThanEq *tmp24 *tmp23 :depositItems:cap
-    * jump *label43 equal *tmp24 false
+  115 jump *label43 lessThan *tmp23 :depositItems:cap
   116 jump *label42 always
   117 jump *label44 always
   118 label *label43
   119 label *label44
   120 label *label41
   121 sensor *tmp26 @unit @firstItem
-    * op notEqual *tmp27 *tmp26 null
-    * jump *label40 notEqual *tmp27 false
+  122 jump *label40 notEqual *tmp26 null
   123 label *label42
   124 jump *label36 always
   125 label *label35
   126 label *label45
   127 sensor *tmp28 @unit @firstItem
-    * op notEqual *tmp29 *tmp28 null
-    * jump *label47 equal *tmp29 false
+  128 jump *label47 equal *tmp28 null
   129 ucontrol itemDrop @air 1000
   130 label *label46
   131 jump *label45 always
 
   137 end
   138 label *label6
   139 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp30 0
-    * op equal *tmp32 *tmp30 false
-    * jump *label49 equal *tmp32 false
+  140 jump *label49 notEqual *tmp30 false
   141 print "[salmon]"
   142 print "Cannot locate "
   143 print :locateOre:ore
 
   180 ucontrol mine :mineOre:x :mineOre:y
   181 label *label57
   182 sensor *tmp39 @unit @totalItems
-    * op lessThan *tmp40 *tmp39 :mineOre:amount
-    * jump *label56 notEqual *tmp40 false
+  183 jump *label56 lessThan *tmp39 :mineOre:amount
   184 label *label58
   185 ucontrol unbind
   186 set :depositItems:block :mineOre:block
 
   248 end
   249 label *label10
   250 set :supplyBlocks:supplied false
-    * op equal *tmp54 .unloader1 null
-    * jump *label74 equal *tmp54 false
+  251 jump *label74 notEqual .unloader1 null
   252 sensor *tmp56 .core @graphite
-    * op lessThan *tmp57 *tmp56 .updatedGraphiteTarget
-    * jump *label76 equal *tmp57 false
+  253 jump *label76 greaterThanEq *tmp56 .updatedGraphiteTarget
   254 sensor *tmp59 .press @coal
-    * op lessThan *tmp60 *tmp59 5
-    * jump *label78 equal *tmp60 false
+  255 jump *label78 greaterThanEq *tmp59 5
   256 set :status1:text "Meeting the graphite target"
   257 set .status1 :status1:text
   258 label *label80
 
   268 sensor *tmp62 :supplyBlock:block @itemCapacity
   269 sensor *tmp63 :supplyBlock:block :supplyBlock:ore
   270 op sub :supplyBlock:missing *tmp62 *tmp63
-    * op greaterThan *tmp65 :supplyBlock:missing 0
-    * jump *label83 equal *tmp65 false
+  271 jump *label83 lessThanEq :supplyBlock:missing 0
   272 set :mineOre:ore :supplyBlock:ore
   273 set :mineOre:amount :supplyBlock:missing
   274 set :mineOre:block :supplyBlock:block
 
   287 label *label76
   288 label *label77
   289 sensor *tmp67 .core @silicon
-    * op lessThan *tmp68 *tmp67 .updatedSiliconTarget
-    * jump *label86 equal *tmp68 false
+  290 jump *label86 greaterThanEq *tmp67 .updatedSiliconTarget
   291 sensor *tmp70 .smelter @coal
-    * op lessThan *tmp71 *tmp70 5
-    * jump *label88 equal *tmp71 false
+  292 jump *label88 greaterThanEq *tmp70 5
   293 set :status1.1:text "Meeting the silicon target (coal)"
   294 set .status1 :status1.1:text
   295 label *label90
 
   305 sensor *tmp73 :supplyBlock.1:block @itemCapacity
   306 sensor *tmp74 :supplyBlock.1:block :supplyBlock.1:ore
   307 op sub :supplyBlock.1:missing *tmp73 *tmp74
-    * op greaterThan *tmp76 :supplyBlock.1:missing 0
-    * jump *label93 equal *tmp76 false
+  308 jump *label93 lessThanEq :supplyBlock.1:missing 0
   309 set :mineOre:ore :supplyBlock.1:ore
   310 set :mineOre:amount :supplyBlock.1:missing
   311 set :mineOre:block :supplyBlock.1:block
 
   320 jump *label89 always
   321 label *label88
   322 sensor *tmp78 .smelter @sand
-    * op lessThan *tmp79 *tmp78 5
-    * jump *label96 equal *tmp79 false
+  323 jump *label96 greaterThanEq *tmp78 5
   324 set :status1.2:text "Meeting the silicon target (sand)"
   325 set .status1 :status1.2:text
   326 label *label98
 
   336 sensor *tmp81 :supplyBlock.2:block @itemCapacity
   337 sensor *tmp82 :supplyBlock.2:block :supplyBlock.2:ore
   338 op sub :supplyBlock.2:missing *tmp81 *tmp82
-    * op greaterThan *tmp84 :supplyBlock.2:missing 0
-    * jump *label101 equal *tmp84 false
+  339 jump *label101 lessThanEq :supplyBlock.2:missing 0
   340 set :mineOre:ore :supplyBlock.2:ore
   341 set :mineOre:amount :supplyBlock.2:missing
   342 set :mineOre:block :supplyBlock.2:block
 
   356 label *label86
   357 label *label87
   358 sensor *tmp86 .battery @totalPower
-    * op lessThan *tmp87 *tmp86 .powerTarget
-    * jump *label104 equal *tmp87 false
+  359 jump *label104 greaterThanEq *tmp86 .powerTarget
   360 set :status1.3:text "Supplying generator"
   361 set .status1 :status1.3:text
   362 label *label106
 
   372 sensor *tmp89 :supplyBlock.3:block @itemCapacity
   373 sensor *tmp90 :supplyBlock.3:block :supplyBlock.3:ore
   374 op sub :supplyBlock.3:missing *tmp89 *tmp90
-    * op greaterThan *tmp92 :supplyBlock.3:missing 0
-    * jump *label109 equal *tmp92 false
+  375 jump *label109 lessThanEq :supplyBlock.3:missing 0
   376 set :mineOre:ore :supplyBlock.3:ore
   377 set :mineOre:amount :supplyBlock.3:missing
   378 set :mineOre:block :supplyBlock.3:block
 
   389 label *label105
   390 jump *label75 always
   391 label *label74
-    * op notEqual *tmp94 .processor null
-    * jump *label112 equal *tmp94 false
+  392 jump *label112 equal .processor null
   393 sensor *tmp96 .core @coal
-    * op lessThan *tmp97 *tmp96 10
-    * jump *label114 equal *tmp97 false
+  394 jump *label114 greaterThanEq *tmp96 10
   395 set :status1.4:text "Supplying base"
   396 set .status1 :status1.4:text
   397 label *label116
 
   408 label *label113
   409 label *label75
   410 sensor *tmp99 .titanium_drill @titanium
-    * op lessThan *tmp100 *tmp99 .titaniumTrigger
-    * jump *label118 equal *tmp100 false
+  411 jump *label118 greaterThanEq *tmp99 .titaniumTrigger
   412 sensor *tmp102 .core @silicon
-    * op lessThan *tmp103 *tmp102 .siliconTarget
-    * jump *label120 equal *tmp103 false
+  413 jump *label120 greaterThanEq *tmp102 .siliconTarget
   414 set :status1.5:text "Meeting the silicon target"
   415 set .status1 :status1.5:text
   416 label *label122
   417 sensor :supplyBlocks:coal .core @coal
   418 sensor :supplyBlocks:sand .core @sand
-    * op lessThan *tmp107 :supplyBlocks:coal :supplyBlocks:sand
-    * jump *label123 equal *tmp107 false
+  419 jump *label123 greaterThanEq :supplyBlocks:coal :supplyBlocks:sand
   420 set *tmp108 @coal
   421 jump *label124 always
   422 label *label123
 
   437 jump *label121 always
   438 label *label120
   439 sensor *tmp109 .core @copper
-    * op lessThan *tmp110 *tmp109 .copperTarget
-    * jump *label127 equal *tmp110 false
+  440 jump *label127 greaterThanEq *tmp109 .copperTarget
   441 set :status1.6:text "Meeting the copper target"
   442 set .status1 :status1.6:text
   443 label *label129
 
   455 jump *label128 always
   456 label *label127
   457 sensor *tmp112 .core @lead
-    * op lessThan *tmp113 *tmp112 .leadTarget
-    * jump *label132 equal *tmp113 false
+  458 jump *label132 greaterThanEq *tmp112 .leadTarget
   459 set :status1.7:text "Meeting the lead target"
   460 set .status1 :status1.7:text
   461 label *label134
 
   473 jump *label133 always
   474 label *label132
   475 sensor *tmp115 .core @metaglass
-    * op lessThan *tmp116 *tmp115 .metaglassTarget
-    * jump *label137 equal *tmp116 false
+  476 jump *label137 greaterThanEq *tmp115 .metaglassTarget
   477 set :status1.8:text "Meeting the metaglass target"
   478 set .status1 :status1.8:text
   479 label *label139
 
   490 label *label141
   491 jump *label138 always
   492 label *label137
-    * op equal *tmp118 :supplyBlocks:supplied false
-    * jump *label142 equal *tmp118 false
+  493 jump *label142 notEqual :supplyBlocks:supplied false
   494 set :status1.9:text "Supplying base"
   495 set .status1 :status1.9:text
   496 label *label144
   497 sensor :supplyBlocks:coal.1 .core @coal
   498 sensor :supplyBlocks:sand.1 .core @sand
-    * op lessThanEq *tmp122 :supplyBlocks:coal.1 :supplyBlocks:sand.1
-    * jump *label145 equal *tmp122 false
+  499 jump *label145 greaterThan :supplyBlocks:coal.1 :supplyBlocks:sand.1
   500 set *tmp123 @coal
   501 jump *label146 always
   502 label *label145
 
   574 multilabel *label160 (m:marker0)
   575 label *label154
   576 set .totalTargets :meetTarget:count
-    * op equal *tmp126 .processor null
-    * jump *label161 equal *tmp126 false
+  577 jump *label161 notEqual .processor null
   578 op max .updatedGraphiteTarget 10 .graphiteTarget
   579 op max .updatedSiliconTarget 10 .siliconTarget
   580 jump *label162 always
 
   588 label *label162
   589 sensor *tmp133 .core @titanium
   590 op add *tmp134 .titaniumTarget 10
-    * op lessThan *tmp135 *tmp133 *tmp134
-    * jump *label163 equal *tmp135 false
+  591 jump *label163 greaterThanEq *tmp133 *tmp134
   592 set *tmp136 7
   593 jump *label164 always
   594 label *label163
 
   617 sensor *tmp155 .core @metaglass
   618 op lessThan *tmp156 *tmp155 .metaglassTarget
   619 op or *tmp158 *tmp153 *tmp156
-    * op notEqual *tmp157 *tmp158 false
-    * jump *label167 equal *tmp157 false
+  620 jump *label167 equal *tmp158 false
   621 setaddr :supplyBlocks*retaddr *label168 (h:*label168)
   622 call *label10 *invalid :supplyBlocks*retval (m:*label168) (h:*label168)
   623 label *label168
 
   637 set .status3 :status3.3:text
   638 label *label171
   639 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op notEqual *tmp161 :buildBlockAt:building null
-    * jump *label172 equal *tmp161 false
-    * op equal *tmp163 :buildBlockAt:type :buildBlockAt:block
-    * jump *label174 equal *tmp163 false
+  640 jump *label172 equal :buildBlockAt:building null
+  641 jump *label174 notEqual :buildBlockAt:type :buildBlockAt:block
   642 set :buildBlockAt*retval :buildBlockAt:building
   643 jump *label169 always
   644 jump *label175 always
 
   667 wait 0.25
   668 label *label179
   669 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * op equal *tmp168 :buildBlockAt:building null
-    * jump *label182 equal *tmp168 false
+  670 jump *label182 notEqual :buildBlockAt:building null
   671 jump *label181 always
   672 jump *label183 always
   673 label *label182
   674 label *label183
   675 label *label180
-    * op notEqual *tmp170 :buildBlockAt:type :buildBlockAt:block
-    * jump *label179 notEqual *tmp170 false
+  676 jump *label179 notEqual :buildBlockAt:type :buildBlockAt:block
   677 label *label181
   678 set :buildBlockAt*retval :buildBlockAt:building
   679 jump *label169 always
 
   730 ubind @poly
   731 ulocate building core false @copper .coreX .coreY 0 .core
   732 label *label191
-    * op equal *tmp182 .core null
-    * jump *label190 notEqual *tmp182 false
+  733 jump *label190 equal .core null
   734 label *label192
   735 set :buildBlockFromCfg:block @graphite-press
   736 set :buildBlockFromCfg:offsetX -1.5
 
   995 set :checkOre:y :buildTitaniumDrillCfg:y
   996 set :checkOre:count :buildTitaniumDrillCfg:count
   997 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
-    * op equal *tmp219 :checkOre:floor @ore-titanium
-    * jump *label246 equal *tmp219 false
+  998 jump *label246 notEqual :checkOre:floor @ore-titanium
   999 op add :checkOre:count :checkOre:count 1
  1000 jump *label247 always
  1001 label *label246
 
  1007 set :checkOre.1:y *tmp222
  1008 set :checkOre.1:count :buildTitaniumDrillCfg:count
  1009 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
-    * op equal *tmp226 :checkOre.1:floor @ore-titanium
-    * jump *label249 equal *tmp226 false
+ 1010 jump *label249 notEqual :checkOre.1:floor @ore-titanium
  1011 op add :checkOre.1:count :checkOre.1:count 1
  1012 jump *label250 always
  1013 label *label249
 
  1020 set :checkOre.2:y *tmp230
  1021 set :checkOre.2:count :buildTitaniumDrillCfg:count
  1022 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
-    * op equal *tmp234 :checkOre.2:floor @ore-titanium
-    * jump *label252 equal *tmp234 false
+ 1023 jump *label252 notEqual :checkOre.2:floor @ore-titanium
  1024 op add :checkOre.2:count :checkOre.2:count 1
  1025 jump *label253 always
  1026 label *label252
  1027 label *label253
  1028 label *label251
  1029 set :buildTitaniumDrillCfg:count :checkOre.2:count
-    * op greaterThan *tmp237 :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
-    * jump *label254 equal *tmp237 false
+ 1030 jump *label254 lessThanEq :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
  1031 set :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:xx
  1032 set :buildTitaniumDrillCfg:by :buildTitaniumDrillCfg:yy
  1033 set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
-    * op greaterThanEq *tmp239 :buildTitaniumDrillCfg:count 4
-    * jump *label256 equal *tmp239 false
+ 1034 jump *label256 lessThan :buildTitaniumDrillCfg:count 4
  1035 jump *label240 always
  1036 jump *label257 always
  1037 label *label256
 
  1043 multijump *tmp214 0 0 (m:marker6)
  1044 multilabel *label244 (m:marker6)
  1045 label *label240
-    * op greaterThan *tmp241 :buildTitaniumDrillCfg:best 0
-    * jump *label258 equal *tmp241 false
+ 1046 jump *label258 lessThanEq :buildTitaniumDrillCfg:best 0
  1047 op div *tmp243 :buildTitaniumDrillCfg:bx 2
  1048 op add :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:x *tmp243
  1049 op div *tmp245 :buildTitaniumDrillCfg:by 2
 
  1058 call *label12 *invalid :buildBlockAt*retval (m:*label260) (h:*label260)
  1059 label *label260
  1060 set :buildTitaniumDrillCfg:result :buildBlockAt*retval
-    * op notEqual *tmp247 :buildTitaniumDrillCfg:result null
-    * jump *label261 equal *tmp247 false
+ 1061 jump *label261 equal :buildTitaniumDrillCfg:result null
  1062 set *tmp204 :buildTitaniumDrillCfg:result
  1063 jump *label224 always
  1064 jump *label262 always
 
  1069 label *label258
  1070 label *label259
  1071 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
-    * op greaterThan *tmp249 :buildTitaniumDrillCfg:attempts 5
-    * jump *label263 equal *tmp249 false
+ 1072 jump *label263 lessThanEq :buildTitaniumDrillCfg:attempts 5
  1073 set :moveRandom:distance 40
  1074 setaddr :moveRandom*retaddr *label265 (h:*label265)
  1075 call *label14 *invalid :moveRandom*retval (m:*label265) (h:*label265)

Modifications by Iterated phase, Single Step Elimination, pass 1, iteration 1 (-29 instructions):
 
    59 sensor *tmp9 @unit @firstItem
    60 jump *label25 equal *tmp9 null
    61 ucontrol itemDrop @air 1000
-    * jump *label26 always
    62 label *label25
    63 label *label26
    64 set :moveTo.1:x :moveToEmpty:x
 
   113 sensor *tmp23 :depositItems:block :depositItems:item
   114 jump *label43 lessThan *tmp23 :depositItems:cap
   115 jump *label42 always
-    * jump *label44 always
   116 label *label43
   117 label *label44
   118 label *label41
 
   142 printflush message1
   143 stop
   144 label *label51
-    * jump *label50 always
   145 label *label49
   146 label *label50
   147 label *label48
 
   171 op land *tmp37 *tmp35 *tmp36
   172 jump *label59 equal *tmp37 false
   173 jump *label58 always
-    * jump *label60 always
   174 label *label59
   175 label *label60
   176 ucontrol mine :mineOre:x :mineOre:y
 
   223 op land *tmp48 *tmp46 *tmp47
   224 jump *label70 equal *tmp48 false
   225 ucontrol itemDrop @air 1000
-    * jump *label71 always
   226 label *label70
   227 label *label71
   228 label *label68
 
   270 setaddr :mineOre*retaddr *label85 (h:*label85)
   271 call *label7 *invalid :mineOre*retval (m:*label85) (h:*label85)
   272 label *label85
-    * jump *label84 always
   273 label *label83
   274 label *label84
   275 label *label81
   276 set :supplyBlocks:supplied true
-    * jump *label79 always
   277 label *label78
   278 label *label79
-    * jump *label77 always
   279 label *label76
   280 label *label77
   281 sensor *tmp67 .core @silicon
 
   304 setaddr :mineOre*retaddr *label95 (h:*label95)
   305 call *label7 *invalid :mineOre*retval (m:*label95) (h:*label95)
   306 label *label95
-    * jump *label94 always
   307 label *label93
   308 label *label94
   309 label *label91
 
   334 setaddr :mineOre*retaddr *label103 (h:*label103)
   335 call *label7 *invalid :mineOre*retval (m:*label103) (h:*label103)
   336 label *label103
-    * jump *label102 always
   337 label *label101
   338 label *label102
   339 label *label99
   340 set :supplyBlocks:supplied true
-    * jump *label97 always
   341 label *label96
   342 label *label97
   343 label *label89
-    * jump *label87 always
   344 label *label86
   345 label *label87
   346 sensor *tmp86 .battery @totalPower
 
   367 setaddr :mineOre*retaddr *label111 (h:*label111)
   368 call *label7 *invalid :mineOre*retval (m:*label111) (h:*label111)
   369 label *label111
-    * jump *label110 always
   370 label *label109
   371 label *label110
   372 label *label107
   373 set :supplyBlocks:supplied true
-    * jump *label105 always
   374 label *label104
   375 label *label105
   376 jump *label75 always
 
   386 call *label8 *invalid :mineOre.1*retval (m:*label117) (h:*label117)
   387 label *label117
   388 jump *label73 always
-    * jump *label115 always
   389 label *label114
   390 label *label115
-    * jump *label113 always
   391 label *label112
   392 label *label113
   393 label *label75
 
   498 setaddr :mineOre.1*retaddr *label148 (h:*label148)
   499 call *label8 *invalid :mineOre.1*retval (m:*label148) (h:*label148)
   500 label *label148
-    * jump *label143 always
   501 label *label142
   502 label *label143
   503 label *label138
 
   624 jump *label174 notEqual :buildBlockAt:type :buildBlockAt:block
   625 set :buildBlockAt*retval :buildBlockAt:building
   626 jump *label169 always
-    * jump *label175 always
   627 label *label174
   628 label *label175
   629 jump *label176 equal :buildBlockAt:skipError false
   630 set :buildBlockAt*retval null
   631 jump *label169 always
-    * jump *label177 always
   632 label *label176
   633 label *label177
   634 print "[salmon]"
 
   641 printflush message1
   642 stop
   643 label *label178
-    * jump *label173 always
   644 label *label172
   645 label *label173
   646 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
 
   649 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
   650 jump *label182 notEqual :buildBlockAt:building null
   651 jump *label181 always
-    * jump *label183 always
   652 label *label182
   653 label *label183
   654 label *label180
 
   976 ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
   977 jump *label246 notEqual :checkOre:floor @ore-titanium
   978 op add :checkOre:count :checkOre:count 1
-    * jump *label247 always
   979 label *label246
   980 label *label247
   981 label *label245
 
   987 ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
   988 jump *label249 notEqual :checkOre.1:floor @ore-titanium
   989 op add :checkOre.1:count :checkOre.1:count 1
-    * jump *label250 always
   990 label *label249
   991 label *label250
   992 label *label248
 
   999 ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
  1000 jump *label252 notEqual :checkOre.2:floor @ore-titanium
  1001 op add :checkOre.2:count :checkOre.2:count 1
-    * jump *label253 always
  1002 label *label252
  1003 label *label253
  1004 label *label251
 
  1009 set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
  1010 jump *label256 lessThan :buildTitaniumDrillCfg:count 4
  1011 jump *label240 always
-    * jump *label257 always
  1012 label *label256
  1013 label *label257
-    * jump *label255 always
  1014 label *label254
  1015 label *label255
  1016 label *label239
 
  1035 jump *label261 equal :buildTitaniumDrillCfg:result null
  1036 set *tmp204 :buildTitaniumDrillCfg:result
  1037 jump *label224 always
-    * jump *label262 always
  1038 label *label261
  1039 label *label262
  1040 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
-    * jump *label259 always
  1041 label *label258
  1042 label *label259
  1043 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
 
  1047 call *label14 *invalid :moveRandom*retval (m:*label265) (h:*label265)
  1048 label *label265
  1049 set :buildTitaniumDrillCfg:attempts 0
-    * jump *label264 always
  1050 label *label263
  1051 label *label264
  1052 label *label226

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1 (-24 instructions):
 
    30 end
    31 label *label1
    32 set :status3:text "Moving..."
-    * set .status3 :status3:text
+   33 set .status3 "Moving..."
    34 label *label18
    35 label *label19
    36 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp4
 
    46 label *label2
    47 set *tmp7 :moveTo.1:x
    48 set *tmp8 :moveTo.1:y
-    * set :moveTo:x *tmp7
-    * set :moveTo:y *tmp8
+   49 set :moveTo:x :moveTo.1:x
+   50 set :moveTo:y :moveTo.1:y
    51 set :moveTo:radius 5
    52 setaddr :moveTo*retaddr *label23 (h:*label23)
    53 call *label1 *invalid :moveTo*retval (m:*label23) (h:*label23)
 
    90 end
    91 label *label5
    92 set :status3.1:text "Depositing..."
-    * set .status3 :status3.1:text
+   93 set .status3 "Depositing..."
    94 label *label34
    95 sensor *tmp16 @unit @firstItem
    96 jump *label35 notEqual *tmp16 :depositItems:item
 
   156 label *label53
   157 set :mineOre:x :locateOre:x
   158 set :mineOre:y :locateOre:y
-    * set :moveToEmpty:x :mineOre:x
-    * set :moveToEmpty:y :mineOre:y
+  159 set :moveToEmpty:x :locateOre:x
+  160 set :moveToEmpty:y :locateOre:y
   161 setaddr :moveToEmpty*retaddr *label54 (h:*label54)
   162 call *label3 *invalid :moveToEmpty*retval (m:*label54) (h:*label54)
   163 label *label54
   164 set :status3.2:text "Mining..."
-    * set .status3 :status3.2:text
+  165 set .status3 "Mining..."
   166 label *label55
   167 label *label56
   168 sensor :mineOre:item @unit @firstItem
 
   204 set :status2:text "Fetching "
   205 set :status2:item :fetchBlock:item
   206 set :status2:block :fetchBlock:block
-    * set .status2 :status2:text
-    * set .item2 :status2:item
-    * set .block2 :status2:block
+  207 set .status2 "Fetching "
+  208 set .item2 :fetchBlock:item
+  209 set .block2 :fetchBlock:block
   210 label *label65
   211 sensor *tmp43 :fetchBlock:block @x
   212 sensor *tmp44 :fetchBlock:block @y
 
   249 sensor *tmp59 .press @coal
   250 jump *label78 greaterThanEq *tmp59 5
   251 set :status1:text "Meeting the graphite target"
-    * set .status1 :status1:text
+  252 set .status1 "Meeting the graphite target"
   253 label *label80
   254 set :supplyBlock:block .press
   255 set :supplyBlock:ore @coal
   256 set :status2.1:text "Supplying "
-    * set :status2.1:item :supplyBlock:ore
-    * set :status2.1:block :supplyBlock:block
-    * set .status2 :status2.1:text
-    * set .item2 :status2.1:item
-    * set .block2 :status2.1:block
+  257 set :status2.1:item @coal
+  258 set :status2.1:block .press
+  259 set .status2 "Supplying "
+  260 set .item2 :supplyBlock:ore
+  261 set .block2 :supplyBlock:block
   262 label *label82
-    * sensor *tmp62 :supplyBlock:block @itemCapacity
-    * sensor *tmp63 :supplyBlock:block :supplyBlock:ore
+  263 sensor *tmp62 .press @itemCapacity
+  264 sensor *tmp63 .press @coal
   265 op sub :supplyBlock:missing *tmp62 *tmp63
   266 jump *label83 lessThanEq :supplyBlock:missing 0
-    * set :mineOre:ore :supplyBlock:ore
+  267 set :mineOre:ore @coal
   268 set :mineOre:amount :supplyBlock:missing
-    * set :mineOre:block :supplyBlock:block
+  269 set :mineOre:block .press
   270 setaddr :mineOre*retaddr *label85 (h:*label85)
   271 call *label7 *invalid :mineOre*retval (m:*label85) (h:*label85)
   272 label *label85
 
   283 sensor *tmp70 .smelter @coal
   284 jump *label88 greaterThanEq *tmp70 5
   285 set :status1.1:text "Meeting the silicon target (coal)"
-    * set .status1 :status1.1:text
+  286 set .status1 "Meeting the silicon target (coal)"
   287 label *label90
   288 set :supplyBlock.1:block .smelter
   289 set :supplyBlock.1:ore @coal
   290 set :status2.2:text "Supplying "
-    * set :status2.2:item :supplyBlock.1:ore
-    * set :status2.2:block :supplyBlock.1:block
-    * set .status2 :status2.2:text
-    * set .item2 :status2.2:item
-    * set .block2 :status2.2:block
+  291 set :status2.2:item @coal
+  292 set :status2.2:block .smelter
+  293 set .status2 "Supplying "
+  294 set .item2 :supplyBlock.1:ore
+  295 set .block2 :supplyBlock.1:block
   296 label *label92
-    * sensor *tmp73 :supplyBlock.1:block @itemCapacity
-    * sensor *tmp74 :supplyBlock.1:block :supplyBlock.1:ore
+  297 sensor *tmp73 .smelter @itemCapacity
+  298 sensor *tmp74 .smelter @coal
   299 op sub :supplyBlock.1:missing *tmp73 *tmp74
   300 jump *label93 lessThanEq :supplyBlock.1:missing 0
-    * set :mineOre:ore :supplyBlock.1:ore
+  301 set :mineOre:ore @coal
   302 set :mineOre:amount :supplyBlock.1:missing
-    * set :mineOre:block :supplyBlock.1:block
+  303 set :mineOre:block .smelter
   304 setaddr :mineOre*retaddr *label95 (h:*label95)
   305 call *label7 *invalid :mineOre*retval (m:*label95) (h:*label95)
   306 label *label95
 
   313 sensor *tmp78 .smelter @sand
   314 jump *label96 greaterThanEq *tmp78 5
   315 set :status1.2:text "Meeting the silicon target (sand)"
-    * set .status1 :status1.2:text
+  316 set .status1 "Meeting the silicon target (sand)"
   317 label *label98
   318 set :supplyBlock.2:block .smelter
   319 set :supplyBlock.2:ore @sand
   320 set :status2.3:text "Supplying "
-    * set :status2.3:item :supplyBlock.2:ore
-    * set :status2.3:block :supplyBlock.2:block
-    * set .status2 :status2.3:text
-    * set .item2 :status2.3:item
-    * set .block2 :status2.3:block
+  321 set :status2.3:item @sand
+  322 set :status2.3:block .smelter
+  323 set .status2 "Supplying "
+  324 set .item2 :supplyBlock.2:ore
+  325 set .block2 :supplyBlock.2:block
   326 label *label100
-    * sensor *tmp81 :supplyBlock.2:block @itemCapacity
-    * sensor *tmp82 :supplyBlock.2:block :supplyBlock.2:ore
+  327 sensor *tmp81 .smelter @itemCapacity
+  328 sensor *tmp82 .smelter @sand
   329 op sub :supplyBlock.2:missing *tmp81 *tmp82
   330 jump *label101 lessThanEq :supplyBlock.2:missing 0
-    * set :mineOre:ore :supplyBlock.2:ore
+  331 set :mineOre:ore @sand
   332 set :mineOre:amount :supplyBlock.2:missing
-    * set :mineOre:block :supplyBlock.2:block
+  333 set :mineOre:block .smelter
   334 setaddr :mineOre*retaddr *label103 (h:*label103)
   335 call *label7 *invalid :mineOre*retval (m:*label103) (h:*label103)
   336 label *label103
 
   346 sensor *tmp86 .battery @totalPower
   347 jump *label104 greaterThanEq *tmp86 .powerTarget
   348 set :status1.3:text "Supplying generator"
-    * set .status1 :status1.3:text
+  349 set .status1 "Supplying generator"
   350 label *label106
   351 set :supplyBlock.3:block .generator
   352 set :supplyBlock.3:ore @coal
   353 set :status2.4:text "Supplying "
-    * set :status2.4:item :supplyBlock.3:ore
-    * set :status2.4:block :supplyBlock.3:block
-    * set .status2 :status2.4:text
-    * set .item2 :status2.4:item
-    * set .block2 :status2.4:block
+  354 set :status2.4:item @coal
+  355 set :status2.4:block .generator
+  356 set .status2 "Supplying "
+  357 set .item2 :supplyBlock.3:ore
+  358 set .block2 :supplyBlock.3:block
   359 label *label108
-    * sensor *tmp89 :supplyBlock.3:block @itemCapacity
-    * sensor *tmp90 :supplyBlock.3:block :supplyBlock.3:ore
+  360 sensor *tmp89 .generator @itemCapacity
+  361 sensor *tmp90 .generator @coal
   362 op sub :supplyBlock.3:missing *tmp89 *tmp90
   363 jump *label109 lessThanEq :supplyBlock.3:missing 0
-    * set :mineOre:ore :supplyBlock.3:ore
+  364 set :mineOre:ore @coal
   365 set :mineOre:amount :supplyBlock.3:missing
-    * set :mineOre:block :supplyBlock.3:block
+  366 set :mineOre:block .generator
   367 setaddr :mineOre*retaddr *label111 (h:*label111)
   368 call *label7 *invalid :mineOre*retval (m:*label111) (h:*label111)
   369 label *label111
 
   379 sensor *tmp96 .core @coal
   380 jump *label114 greaterThanEq *tmp96 10
   381 set :status1.4:text "Supplying base"
-    * set .status1 :status1.4:text
+  382 set .status1 "Supplying base"
   383 label *label116
   384 set :mineOre.1:ore @coal
   385 setaddr :mineOre.1*retaddr *label117 (h:*label117)
 
   396 sensor *tmp102 .core @silicon
   397 jump *label120 greaterThanEq *tmp102 .siliconTarget
   398 set :status1.5:text "Meeting the silicon target"
-    * set .status1 :status1.5:text
+  399 set .status1 "Meeting the silicon target"
   400 label *label122
   401 sensor :supplyBlocks:coal .core @coal
   402 sensor :supplyBlocks:sand .core @sand
 
   408 label *label124
   409 set :supplyBlocks:ore *tmp108
   410 set :status2.5:text "Mining "
-    * set :status2.5:item :supplyBlocks:ore
+  411 set :status2.5:item *tmp108
   412 set :status2.5:block "core"
-    * set .status2 :status2.5:text
-    * set .item2 :status2.5:item
-    * set .block2 :status2.5:block
+  413 set .status2 "Mining "
+  414 set .item2 :supplyBlocks:ore
+  415 set .block2 "core"
   416 label *label125
-    * set :mineOre.1:ore :supplyBlocks:ore
+  417 set :mineOre.1:ore *tmp108
   418 setaddr :mineOre.1*retaddr *label126 (h:*label126)
   419 call *label8 *invalid :mineOre.1*retval (m:*label126) (h:*label126)
   420 label *label126
 
   423 sensor *tmp109 .core @copper
   424 jump *label127 greaterThanEq *tmp109 .copperTarget
   425 set :status1.6:text "Meeting the copper target"
-    * set .status1 :status1.6:text
+  426 set .status1 "Meeting the copper target"
   427 label *label129
   428 set :status2.6:text "Mining "
   429 set :status2.6:item @copper
   430 set :status2.6:block "core"
-    * set .status2 :status2.6:text
-    * set .item2 :status2.6:item
-    * set .block2 :status2.6:block
+  431 set .status2 "Mining "
+  432 set .item2 @copper
+  433 set .block2 "core"
   434 label *label130
   435 set :mineOre.1:ore @copper
   436 setaddr :mineOre.1*retaddr *label131 (h:*label131)
 
   441 sensor *tmp112 .core @lead
   442 jump *label132 greaterThanEq *tmp112 .leadTarget
   443 set :status1.7:text "Meeting the lead target"
-    * set .status1 :status1.7:text
+  444 set .status1 "Meeting the lead target"
   445 label *label134
   446 set :status2.7:text "Mining "
   447 set :status2.7:item @lead
   448 set :status2.7:block "core"
-    * set .status2 :status2.7:text
-    * set .item2 :status2.7:item
-    * set .block2 :status2.7:block
+  449 set .status2 "Mining "
+  450 set .item2 @lead
+  451 set .block2 "core"
   452 label *label135
   453 set :mineOre.1:ore @lead
   454 setaddr :mineOre.1*retaddr *label136 (h:*label136)
 
   459 sensor *tmp115 .core @metaglass
   460 jump *label137 greaterThanEq *tmp115 .metaglassTarget
   461 set :status1.8:text "Meeting the metaglass target"
-    * set .status1 :status1.8:text
+  462 set .status1 "Meeting the metaglass target"
   463 label *label139
   464 set :status2.8:text "Mining "
   465 set :status2.8:item @sand
   466 set :status2.8:block "core"
-    * set .status2 :status2.8:text
-    * set .item2 :status2.8:item
-    * set .block2 :status2.8:block
+  467 set .status2 "Mining "
+  468 set .item2 @sand
+  469 set .block2 "core"
   470 label *label140
   471 set :mineOre.1:ore @sand
   472 setaddr :mineOre.1*retaddr *label141 (h:*label141)
 
   476 label *label137
   477 jump *label142 notEqual :supplyBlocks:supplied false
   478 set :status1.9:text "Supplying base"
-    * set .status1 :status1.9:text
+  479 set .status1 "Supplying base"
   480 label *label144
   481 sensor :supplyBlocks:coal.1 .core @coal
   482 sensor :supplyBlocks:sand.1 .core @sand
 
   488 label *label146
   489 set :supplyBlocks:ore.1 *tmp123
   490 set :status2.9:text "Mining "
-    * set :status2.9:item :supplyBlocks:ore.1
+  491 set :status2.9:item *tmp123
   492 set :status2.9:block "core"
-    * set .status2 :status2.9:text
-    * set .item2 :status2.9:item
-    * set .block2 :status2.9:block
+  493 set .status2 "Mining "
+  494 set .item2 :supplyBlocks:ore.1
+  495 set .block2 "core"
   496 label *label147
-    * set :mineOre.1:ore :supplyBlocks:ore.1
+  497 set :mineOre.1:ore *tmp123
   498 setaddr :mineOre.1*retaddr *label148 (h:*label148)
   499 call *label8 *invalid :mineOre.1*retval (m:*label148) (h:*label148)
   500 label *label148
 
   507 jump *label119 always
   508 label *label118
   509 set :status1.10:text "Fetching titanium"
-    * set .status1 :status1.10:text
+  510 set .status1 "Fetching titanium"
   511 label *label149
   512 set :fetchBlock:block .titanium_drill
   513 set :fetchBlock:item @titanium
 
   617 call *label2 *invalid :moveTo.1*retval (m:*label170) (h:*label170)
   618 label *label170
   619 set :status3.3:text "Building..."
-    * set .status3 :status3.3:text
+  620 set .status3 "Building..."
   621 label *label171
   622 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
   623 jump *label172 equal :buildBlockAt:building null
 
   656 label *label181
   657 set :buildBlockAt*retval :buildBlockAt:building
   658 jump *label169 always
-    * set :buildBlockAt*retval null
   659 label *label169
   660 return :buildBlockAt*retaddr
   661 end
 
   681 label *label186
   682 set :buildBlock*retval :buildBlockAt*retval
   683 jump *label184 always
-    * set :buildBlock*retval null
   684 label *label184
   685 return :buildBlock*retaddr
   686 end
 
   720 set :buildBlockFromCfg:metaglass 0
   721 set :buildBlockFromCfg:rotation 0
   722 set :buildBlockFromCfg:config null
-    * setaddr *tmp184 *label197
   723 label *label194
-    * op add :buildBlockFromCfg:x .coreX :buildBlockFromCfg:offsetX
-    * op add :buildBlockFromCfg:y .coreY :buildBlockFromCfg:offsetY
-    * set :buildBlock:block :buildBlockFromCfg:block
+  724 op add :buildBlockFromCfg:x .coreX -1.5
+  725 op add :buildBlockFromCfg:y .coreY 2.5
+  726 set :buildBlock:block @graphite-press
   727 set :buildBlock:x :buildBlockFromCfg:x
   728 set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper :buildBlockFromCfg:copper
-    * set :buildBlock:lead :buildBlockFromCfg:lead
-    * set :buildBlock:graphite :buildBlockFromCfg:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg:rotation
-    * set :buildBlock:config :buildBlockFromCfg:config
+  729 set :buildBlock:copper 75
+  730 set :buildBlock:lead 30
+  731 set :buildBlock:graphite 0
+  732 set :buildBlock:silicon 0
+  733 set :buildBlock:titanium 0
+  734 set :buildBlock:metaglass 0
+  735 set :buildBlock:rotation 0
+  736 set :buildBlock:config null
   737 setaddr :buildBlock*retaddr *label198 (h:*label198)
   738 call *label13 *invalid :buildBlock*retval (m:*label198) (h:*label198)
   739 label *label198
 
   743 multijump *tmp184 0 0 (m:marker1)
   744 multilabel *label197 (m:marker1)
   745 label *label196
-    * set *tmp183 null
   746 label *label193
   747 set .press *tmp183
   748 set :buildBlockFromCfg.1:block @battery
 
   756 set :buildBlockFromCfg.1:metaglass 0
   757 set :buildBlockFromCfg.1:rotation 0
   758 set :buildBlockFromCfg.1:config null
-    * setaddr *tmp188 *label203
   759 label *label200
-    * op add :buildBlockFromCfg.1:x .coreX :buildBlockFromCfg.1:offsetX
-    * op add :buildBlockFromCfg.1:y .coreY :buildBlockFromCfg.1:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.1:block
+  760 op add :buildBlockFromCfg.1:x .coreX 0
+  761 op add :buildBlockFromCfg.1:y .coreY 4
+  762 set :buildBlock:block @battery
   763 set :buildBlock:x :buildBlockFromCfg.1:x
   764 set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper :buildBlockFromCfg.1:copper
-    * set :buildBlock:lead :buildBlockFromCfg.1:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.1:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.1:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.1:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.1:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.1:rotation
-    * set :buildBlock:config :buildBlockFromCfg.1:config
+  765 set :buildBlock:copper 5
+  766 set :buildBlock:lead 20
+  767 set :buildBlock:graphite 0
+  768 set :buildBlock:silicon 0
+  769 set :buildBlock:titanium 0
+  770 set :buildBlock:metaglass 0
+  771 set :buildBlock:rotation 0
+  772 set :buildBlock:config null
   773 setaddr :buildBlock*retaddr *label204 (h:*label204)
   774 call *label13 *invalid :buildBlock*retval (m:*label204) (h:*label204)
   775 label *label204
 
   779 multijump *tmp188 0 0 (m:marker2)
   780 multilabel *label203 (m:marker2)
   781 label *label202
-    * set *tmp187 null
   782 label *label199
   783 set .battery *tmp187
   784 set :buildBlockFromCfg.2:block @combustion-generator
 
   792 set :buildBlockFromCfg.2:metaglass 0
   793 set :buildBlockFromCfg.2:rotation 0
   794 set :buildBlockFromCfg.2:config null
-    * setaddr *tmp192 *label209
   795 label *label206
-    * op add :buildBlockFromCfg.2:x .coreX :buildBlockFromCfg.2:offsetX
-    * op add :buildBlockFromCfg.2:y .coreY :buildBlockFromCfg.2:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.2:block
+  796 op add :buildBlockFromCfg.2:x .coreX 0
+  797 op add :buildBlockFromCfg.2:y .coreY 3
+  798 set :buildBlock:block @combustion-generator
   799 set :buildBlock:x :buildBlockFromCfg.2:x
   800 set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper :buildBlockFromCfg.2:copper
-    * set :buildBlock:lead :buildBlockFromCfg.2:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.2:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.2:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.2:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.2:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.2:rotation
-    * set :buildBlock:config :buildBlockFromCfg.2:config
+  801 set :buildBlock:copper 25
+  802 set :buildBlock:lead 15
+  803 set :buildBlock:graphite 0
+  804 set :buildBlock:silicon 0
+  805 set :buildBlock:titanium 0
+  806 set :buildBlock:metaglass 0
+  807 set :buildBlock:rotation 0
+  808 set :buildBlock:config null
   809 setaddr :buildBlock*retaddr *label210 (h:*label210)
   810 call *label13 *invalid :buildBlock*retval (m:*label210) (h:*label210)
   811 label *label210
 
   815 multijump *tmp192 0 0 (m:marker3)
   816 multilabel *label209 (m:marker3)
   817 label *label208
-    * set *tmp191 null
   818 label *label205
   819 set .generator *tmp191
   820 set .powerTarget 400
 
   829 set :buildBlockFromCfg.3:metaglass 0
   830 set :buildBlockFromCfg.3:rotation 0
   831 set :buildBlockFromCfg.3:config null
-    * setaddr *tmp196 *label215
   832 label *label212
-    * op add :buildBlockFromCfg.3:x .coreX :buildBlockFromCfg.3:offsetX
-    * op add :buildBlockFromCfg.3:y .coreY :buildBlockFromCfg.3:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.3:block
+  833 op add :buildBlockFromCfg.3:x .coreX -1
+  834 op add :buildBlockFromCfg.3:y .coreY 4
+  835 set :buildBlock:block @battery
   836 set :buildBlock:x :buildBlockFromCfg.3:x
   837 set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper :buildBlockFromCfg.3:copper
-    * set :buildBlock:lead :buildBlockFromCfg.3:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.3:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.3:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.3:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.3:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.3:rotation
-    * set :buildBlock:config :buildBlockFromCfg.3:config
+  838 set :buildBlock:copper 5
+  839 set :buildBlock:lead 20
+  840 set :buildBlock:graphite 0
+  841 set :buildBlock:silicon 0
+  842 set :buildBlock:titanium 0
+  843 set :buildBlock:metaglass 0
+  844 set :buildBlock:rotation 0
+  845 set :buildBlock:config null
   846 setaddr :buildBlock*retaddr *label216 (h:*label216)
   847 call *label13 *invalid :buildBlock*retval (m:*label216) (h:*label216)
   848 label *label216
 
   863 set :buildBlockFromCfg.4:metaglass 0
   864 set :buildBlockFromCfg.4:rotation 0
   865 set :buildBlockFromCfg.4:config null
-    * setaddr *tmp200 *label221
   866 label *label218
-    * op add :buildBlockFromCfg.4:x .coreX :buildBlockFromCfg.4:offsetX
-    * op add :buildBlockFromCfg.4:y .coreY :buildBlockFromCfg.4:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.4:block
+  867 op add :buildBlockFromCfg.4:x .coreX 1.5
+  868 op add :buildBlockFromCfg.4:y .coreY 2.5
+  869 set :buildBlock:block @silicon-smelter
   870 set :buildBlock:x :buildBlockFromCfg.4:x
   871 set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper :buildBlockFromCfg.4:copper
-    * set :buildBlock:lead :buildBlockFromCfg.4:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.4:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.4:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.4:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.4:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.4:rotation
-    * set :buildBlock:config :buildBlockFromCfg.4:config
+  872 set :buildBlock:copper 30
+  873 set :buildBlock:lead 25
+  874 set :buildBlock:graphite 0
+  875 set :buildBlock:silicon 0
+  876 set :buildBlock:titanium 0
+  877 set :buildBlock:metaglass 0
+  878 set :buildBlock:rotation 0
+  879 set :buildBlock:config null
   880 setaddr :buildBlock*retaddr *label222 (h:*label222)
   881 call *label13 *invalid :buildBlock*retval (m:*label222) (h:*label222)
   882 label *label222
 
   886 multijump *tmp200 0 0 (m:marker5)
   887 multilabel *label221 (m:marker5)
   888 label *label220
-    * set *tmp199 null
   889 label *label217
   890 set .smelter *tmp199
   891 set :buildTitaniumDrillCfg:attempts 0
 
   909 label *label233
   910 set :locateOreAway:x :locateOre:x
   911 set :locateOreAway:y :locateOre:y
-    * op sub *tmp206 :locateOreAway:x .coreX
+  912 op sub *tmp206 :locateOre:x .coreX
   913 op abs *tmp207 *tmp206
   914 op lessThan *tmp208 *tmp207 8
-    * op sub *tmp209 :locateOreAway:y .coreY
+  915 op sub *tmp209 :locateOre:y .coreY
   916 op abs *tmp210 *tmp209
   917 op lessThan *tmp211 *tmp210 8
   918 op land *tmp212 *tmp208 *tmp211
 
   931 label *label229
   932 set :buildTitaniumDrillCfg:x :locateOreAway:x
   933 set :buildTitaniumDrillCfg:y :locateOreAway:y
-    * set :moveTo.1:x :buildTitaniumDrillCfg:x
-    * set :moveTo.1:y :buildTitaniumDrillCfg:y
+  934 set :moveTo.1:x :locateOreAway:x
+  935 set :moveTo.1:y :locateOreAway:y
   936 setaddr :moveTo.1*retaddr *label237 (h:*label237)
   937 call *label2 *invalid :moveTo.1*retval (m:*label237) (h:*label237)
   938 label *label237
 
   961 set :buildTitaniumDrillCfg:count 0
   962 op add :checkOre:x :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
   963 set :checkOre:y :buildTitaniumDrillCfg:y
-    * set :checkOre:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre:x :checkOre:y 0 0 :checkOre:floor
+  964 set :checkOre:count 0
+  965 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
   966 jump *label246 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count :checkOre:count 1
+  967 op add :checkOre:count :buildTitaniumDrillCfg:count 1
   968 label *label246
   969 label *label247
   970 label *label245
 
   972 op add *tmp222 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
   973 set :checkOre.1:x :buildTitaniumDrillCfg:x
   974 set :checkOre.1:y *tmp222
-    * set :checkOre.1:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.1:x :checkOre.1:y 0 0 :checkOre.1:floor
+  975 set :checkOre.1:count :checkOre:count
+  976 ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
   977 jump *label249 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :checkOre.1:count 1
+  978 op add :checkOre.1:count :buildTitaniumDrillCfg:count 1
   979 label *label249
   980 label *label250
   981 label *label248
   982 set :buildTitaniumDrillCfg:count :checkOre.1:count
   983 op add *tmp229 :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
   984 op add *tmp230 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
-    * set :checkOre.2:x *tmp229
-    * set :checkOre.2:y *tmp230
-    * set :checkOre.2:count :buildTitaniumDrillCfg:count
-    * ucontrol getBlock :checkOre.2:x :checkOre.2:y 0 0 :checkOre.2:floor
+  985 set :checkOre.2:x :checkOre:x
+  986 set :checkOre.2:y *tmp222
+  987 set :checkOre.2:count :checkOre.1:count
+  988 ucontrol getBlock *tmp229 *tmp230 0 0 :checkOre.2:floor
   989 jump *label252 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :checkOre.2:count 1
+  990 op add :checkOre.2:count :buildTitaniumDrillCfg:count 1
   991 label *label252
   992 label *label253
   993 label *label251
   994 set :buildTitaniumDrillCfg:count :checkOre.2:count
-    * jump *label254 lessThanEq :buildTitaniumDrillCfg:count :buildTitaniumDrillCfg:best
+  995 jump *label254 lessThanEq :checkOre.2:count :buildTitaniumDrillCfg:best
   996 set :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:xx
   997 set :buildTitaniumDrillCfg:by :buildTitaniumDrillCfg:yy
-    * set :buildTitaniumDrillCfg:best :buildTitaniumDrillCfg:count
-    * jump *label256 lessThan :buildTitaniumDrillCfg:count 4
+  998 set :buildTitaniumDrillCfg:best :checkOre.2:count
+  999 jump *label256 lessThan :checkOre.2:count 4
  1000 jump *label240 always
  1001 label *label256
  1002 label *label257
 
  1021 call *label12 *invalid :buildBlockAt*retval (m:*label260) (h:*label260)
  1022 label *label260
  1023 set :buildTitaniumDrillCfg:result :buildBlockAt*retval
-    * jump *label261 equal :buildTitaniumDrillCfg:result null
-    * set *tmp204 :buildTitaniumDrillCfg:result
+ 1024 jump *label261 equal :buildBlockAt*retval null
+ 1025 set *tmp204 :buildBlockAt*retval
  1026 jump *label224 always
  1027 label *label261
  1028 label *label262
 
  1045 label *label224
  1046 set *tmp203 *tmp204
  1047 label *label223
-    * set .titanium_drill *tmp203
+ 1048 set .titanium_drill *tmp204
  1049 set :buildBlockFromCfg.5:block @unloader
  1050 set :buildBlockFromCfg.5:offsetX 0
  1051 set :buildBlockFromCfg.5:offsetY 2
 
  1057 set :buildBlockFromCfg.5:metaglass 0
  1058 set :buildBlockFromCfg.5:rotation 0
  1059 set :buildBlockFromCfg.5:config null
-    * setaddr *tmp253 *label270
  1060 label *label267
-    * op add :buildBlockFromCfg.5:x .coreX :buildBlockFromCfg.5:offsetX
-    * op add :buildBlockFromCfg.5:y .coreY :buildBlockFromCfg.5:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.5:block
+ 1061 op add :buildBlockFromCfg.5:x .coreX 0
+ 1062 op add :buildBlockFromCfg.5:y .coreY 2
+ 1063 set :buildBlock:block @unloader
  1064 set :buildBlock:x :buildBlockFromCfg.5:x
  1065 set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper :buildBlockFromCfg.5:copper
-    * set :buildBlock:lead :buildBlockFromCfg.5:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.5:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.5:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.5:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.5:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.5:rotation
-    * set :buildBlock:config :buildBlockFromCfg.5:config
+ 1066 set :buildBlock:copper 0
+ 1067 set :buildBlock:lead 0
+ 1068 set :buildBlock:graphite 0
+ 1069 set :buildBlock:silicon 30
+ 1070 set :buildBlock:titanium 25
+ 1071 set :buildBlock:metaglass 0
+ 1072 set :buildBlock:rotation 0
+ 1073 set :buildBlock:config null
  1074 setaddr :buildBlock*retaddr *label271 (h:*label271)
  1075 call *label13 *invalid :buildBlock*retval (m:*label271) (h:*label271)
  1076 label *label271
 
  1080 multijump *tmp253 0 0 (m:marker7)
  1081 multilabel *label270 (m:marker7)
  1082 label *label269
-    * set *tmp252 null
  1083 label *label266
  1084 set .unloader1 *tmp252
  1085 set :buildBlockFromCfg.6:block @power-node
 
  1093 set :buildBlockFromCfg.6:metaglass 0
  1094 set :buildBlockFromCfg.6:rotation 0
  1095 set :buildBlockFromCfg.6:config null
-    * setaddr *tmp257 *label276
  1096 label *label273
-    * op add :buildBlockFromCfg.6:x .coreX :buildBlockFromCfg.6:offsetX
-    * op add :buildBlockFromCfg.6:y .coreY :buildBlockFromCfg.6:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.6:block
+ 1097 op add :buildBlockFromCfg.6:x .coreX -1
+ 1098 op add :buildBlockFromCfg.6:y .coreY -2
+ 1099 set :buildBlock:block @power-node
  1100 set :buildBlock:x :buildBlockFromCfg.6:x
  1101 set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper :buildBlockFromCfg.6:copper
-    * set :buildBlock:lead :buildBlockFromCfg.6:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.6:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.6:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.6:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.6:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.6:rotation
-    * set :buildBlock:config :buildBlockFromCfg.6:config
+ 1102 set :buildBlock:copper 2
+ 1103 set :buildBlock:lead 6
+ 1104 set :buildBlock:graphite 0
+ 1105 set :buildBlock:silicon 0
+ 1106 set :buildBlock:titanium 0
+ 1107 set :buildBlock:metaglass 0
+ 1108 set :buildBlock:rotation 0
+ 1109 set :buildBlock:config null
  1110 setaddr :buildBlock*retaddr *label277 (h:*label277)
  1111 call *label13 *invalid :buildBlock*retval (m:*label277) (h:*label277)
  1112 label *label277
 
  1127 set :buildBlockFromCfg.7:metaglass 0
  1128 set :buildBlockFromCfg.7:rotation 0
  1129 set :buildBlockFromCfg.7:config processor1
-    * setaddr *tmp261 *label282
  1130 label *label279
-    * op add :buildBlockFromCfg.7:x .coreX :buildBlockFromCfg.7:offsetX
-    * op add :buildBlockFromCfg.7:y .coreY :buildBlockFromCfg.7:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.7:block
+ 1131 op add :buildBlockFromCfg.7:x .coreX 1
+ 1132 op add :buildBlockFromCfg.7:y .coreY 4
+ 1133 set :buildBlock:block @micro-processor
  1134 set :buildBlock:x :buildBlockFromCfg.7:x
  1135 set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper :buildBlockFromCfg.7:copper
-    * set :buildBlock:lead :buildBlockFromCfg.7:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.7:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.7:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.7:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.7:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.7:rotation
-    * set :buildBlock:config :buildBlockFromCfg.7:config
+ 1136 set :buildBlock:copper 90
+ 1137 set :buildBlock:lead 50
+ 1138 set :buildBlock:graphite 0
+ 1139 set :buildBlock:silicon 50
+ 1140 set :buildBlock:titanium 0
+ 1141 set :buildBlock:metaglass 0
+ 1142 set :buildBlock:rotation 0
+ 1143 set :buildBlock:config processor1
  1144 setaddr :buildBlock*retaddr *label283 (h:*label283)
  1145 call *label13 *invalid :buildBlock*retval (m:*label283) (h:*label283)
  1146 label *label283
 
  1150 multijump *tmp261 0 0 (m:marker9)
  1151 multilabel *label282 (m:marker9)
  1152 label *label281
-    * set *tmp260 null
  1153 label *label278
  1154 set .processor *tmp260
  1155 set :buildBlockFromCfg.8:block @air-factory
 
  1163 set :buildBlockFromCfg.8:metaglass 0
  1164 set :buildBlockFromCfg.8:rotation 3
  1165 set :buildBlockFromCfg.8:config @mono
-    * setaddr *tmp265 *label288
  1166 label *label285
-    * op add :buildBlockFromCfg.8:x .coreX :buildBlockFromCfg.8:offsetX
-    * op add :buildBlockFromCfg.8:y .coreY :buildBlockFromCfg.8:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.8:block
+ 1167 op add :buildBlockFromCfg.8:x .coreX -4
+ 1168 op add :buildBlockFromCfg.8:y .coreY -1
+ 1169 set :buildBlock:block @air-factory
  1170 set :buildBlock:x :buildBlockFromCfg.8:x
  1171 set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper :buildBlockFromCfg.8:copper
-    * set :buildBlock:lead :buildBlockFromCfg.8:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.8:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.8:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.8:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.8:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.8:rotation
-    * set :buildBlock:config :buildBlockFromCfg.8:config
+ 1172 set :buildBlock:copper 60
+ 1173 set :buildBlock:lead 70
+ 1174 set :buildBlock:graphite 0
+ 1175 set :buildBlock:silicon 0
+ 1176 set :buildBlock:titanium 0
+ 1177 set :buildBlock:metaglass 0
+ 1178 set :buildBlock:rotation 3
+ 1179 set :buildBlock:config @mono
  1180 setaddr :buildBlock*retaddr *label289 (h:*label289)
  1181 call *label13 *invalid :buildBlock*retval (m:*label289) (h:*label289)
  1182 label *label289
 
  1197 set :buildBlockFromCfg.9:metaglass 0
  1198 set :buildBlockFromCfg.9:rotation 0
  1199 set :buildBlockFromCfg.9:config null
-    * setaddr *tmp269 *label294
  1200 label *label291
-    * op add :buildBlockFromCfg.9:x .coreX :buildBlockFromCfg.9:offsetX
-    * op add :buildBlockFromCfg.9:y .coreY :buildBlockFromCfg.9:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.9:block
+ 1201 op add :buildBlockFromCfg.9:x .coreX -2
+ 1202 op add :buildBlockFromCfg.9:y .coreY 1
+ 1203 set :buildBlock:block @unloader
  1204 set :buildBlock:x :buildBlockFromCfg.9:x
  1205 set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper :buildBlockFromCfg.9:copper
-    * set :buildBlock:lead :buildBlockFromCfg.9:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.9:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.9:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.9:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.9:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.9:rotation
-    * set :buildBlock:config :buildBlockFromCfg.9:config
+ 1206 set :buildBlock:copper 0
+ 1207 set :buildBlock:lead 0
+ 1208 set :buildBlock:graphite 0
+ 1209 set :buildBlock:silicon 30
+ 1210 set :buildBlock:titanium 25
+ 1211 set :buildBlock:metaglass 0
+ 1212 set :buildBlock:rotation 0
+ 1213 set :buildBlock:config null
  1214 setaddr :buildBlock*retaddr *label295 (h:*label295)
  1215 call *label13 *invalid :buildBlock*retval (m:*label295) (h:*label295)
  1216 label *label295
 
  1231 set :buildBlockFromCfg.10:metaglass 0
  1232 set :buildBlockFromCfg.10:rotation 0
  1233 set :buildBlockFromCfg.10:config @coal
-    * setaddr *tmp273 *label300
  1234 label *label297
-    * op add :buildBlockFromCfg.10:x .coreX :buildBlockFromCfg.10:offsetX
-    * op add :buildBlockFromCfg.10:y .coreY :buildBlockFromCfg.10:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.10:block
+ 1235 op add :buildBlockFromCfg.10:x .coreX -3
+ 1236 op add :buildBlockFromCfg.10:y .coreY 1
+ 1237 set :buildBlock:block @sorter
  1238 set :buildBlock:x :buildBlockFromCfg.10:x
  1239 set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper :buildBlockFromCfg.10:copper
-    * set :buildBlock:lead :buildBlockFromCfg.10:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.10:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.10:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.10:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.10:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.10:rotation
-    * set :buildBlock:config :buildBlockFromCfg.10:config
+ 1240 set :buildBlock:copper 2
+ 1241 set :buildBlock:lead 2
+ 1242 set :buildBlock:graphite 0
+ 1243 set :buildBlock:silicon 0
+ 1244 set :buildBlock:titanium 0
+ 1245 set :buildBlock:metaglass 0
+ 1246 set :buildBlock:rotation 0
+ 1247 set :buildBlock:config @coal
  1248 setaddr :buildBlock*retaddr *label301 (h:*label301)
  1249 call *label13 *invalid :buildBlock*retval (m:*label301) (h:*label301)
  1250 label *label301
 
  1266 set :buildBlockFromCfg.11:metaglass 0
  1267 set :buildBlockFromCfg.11:rotation 0
  1268 set :buildBlockFromCfg.11:config null
-    * setaddr *tmp277 *label306
  1269 label *label303
-    * op add :buildBlockFromCfg.11:x .coreX :buildBlockFromCfg.11:offsetX
-    * op add :buildBlockFromCfg.11:y .coreY :buildBlockFromCfg.11:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.11:block
+ 1270 op add :buildBlockFromCfg.11:x .coreX 2
+ 1271 op add :buildBlockFromCfg.11:y .coreY 0
+ 1272 set :buildBlock:block @unloader
  1273 set :buildBlock:x :buildBlockFromCfg.11:x
  1274 set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper :buildBlockFromCfg.11:copper
-    * set :buildBlock:lead :buildBlockFromCfg.11:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.11:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.11:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.11:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.11:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.11:rotation
-    * set :buildBlock:config :buildBlockFromCfg.11:config
+ 1275 set :buildBlock:copper 0
+ 1276 set :buildBlock:lead 0
+ 1277 set :buildBlock:graphite 0
+ 1278 set :buildBlock:silicon 30
+ 1279 set :buildBlock:titanium 25
+ 1280 set :buildBlock:metaglass 0
+ 1281 set :buildBlock:rotation 0
+ 1282 set :buildBlock:config null
  1283 setaddr :buildBlock*retaddr *label307 (h:*label307)
  1284 call *label13 *invalid :buildBlock*retval (m:*label307) (h:*label307)
  1285 label *label307
 
  1300 set :buildBlockFromCfg.12:metaglass 0
  1301 set :buildBlockFromCfg.12:rotation 0
  1302 set :buildBlockFromCfg.12:config null
-    * setaddr *tmp281 *label312
  1303 label *label309
-    * op add :buildBlockFromCfg.12:x .coreX :buildBlockFromCfg.12:offsetX
-    * op add :buildBlockFromCfg.12:y .coreY :buildBlockFromCfg.12:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.12:block
+ 1304 op add :buildBlockFromCfg.12:x .coreX 3.5
+ 1305 op add :buildBlockFromCfg.12:y .coreY 0.5
+ 1306 set :buildBlock:block @kiln
  1307 set :buildBlock:x :buildBlockFromCfg.12:x
  1308 set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper :buildBlockFromCfg.12:copper
-    * set :buildBlock:lead :buildBlockFromCfg.12:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.12:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.12:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.12:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.12:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.12:rotation
-    * set :buildBlock:config :buildBlockFromCfg.12:config
+ 1309 set :buildBlock:copper 60
+ 1310 set :buildBlock:lead 30
+ 1311 set :buildBlock:graphite 30
+ 1312 set :buildBlock:silicon 0
+ 1313 set :buildBlock:titanium 0
+ 1314 set :buildBlock:metaglass 0
+ 1315 set :buildBlock:rotation 0
+ 1316 set :buildBlock:config null
  1317 setaddr :buildBlock*retaddr *label313 (h:*label313)
  1318 call *label13 *invalid :buildBlock*retval (m:*label313) (h:*label313)
  1319 label *label313
 
  1334 set :buildBlockFromCfg.13:metaglass 0
  1335 set :buildBlockFromCfg.13:rotation 0
  1336 set :buildBlockFromCfg.13:config null
-    * setaddr *tmp285 *label318
  1337 label *label315
-    * op add :buildBlockFromCfg.13:x .coreX :buildBlockFromCfg.13:offsetX
-    * op add :buildBlockFromCfg.13:y .coreY :buildBlockFromCfg.13:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.13:block
+ 1338 op add :buildBlockFromCfg.13:x .coreX 2
+ 1339 op add :buildBlockFromCfg.13:y .coreY 1
+ 1340 set :buildBlock:block @junction
  1341 set :buildBlock:x :buildBlockFromCfg.13:x
  1342 set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper :buildBlockFromCfg.13:copper
-    * set :buildBlock:lead :buildBlockFromCfg.13:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.13:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.13:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.13:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.13:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.13:rotation
-    * set :buildBlock:config :buildBlockFromCfg.13:config
+ 1343 set :buildBlock:copper 3
+ 1344 set :buildBlock:lead 0
+ 1345 set :buildBlock:graphite 0
+ 1346 set :buildBlock:silicon 0
+ 1347 set :buildBlock:titanium 0
+ 1348 set :buildBlock:metaglass 0
+ 1349 set :buildBlock:rotation 0
+ 1350 set :buildBlock:config null
  1351 setaddr :buildBlock*retaddr *label319 (h:*label319)
  1352 call *label13 *invalid :buildBlock*retval (m:*label319) (h:*label319)
  1353 label *label319
 
  1368 set :buildBlockFromCfg.14:metaglass 30
  1369 set :buildBlockFromCfg.14:rotation 0
  1370 set :buildBlockFromCfg.14:config null
-    * setaddr *tmp289 *label324
  1371 label *label321
-    * op add :buildBlockFromCfg.14:x .coreX :buildBlockFromCfg.14:offsetX
-    * op add :buildBlockFromCfg.14:y .coreY :buildBlockFromCfg.14:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.14:block
+ 1372 op add :buildBlockFromCfg.14:x .coreX -3.5
+ 1373 op add :buildBlockFromCfg.14:y .coreY 3.5
+ 1374 set :buildBlock:block @water-extractor
  1375 set :buildBlock:x :buildBlockFromCfg.14:x
  1376 set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper :buildBlockFromCfg.14:copper
-    * set :buildBlock:lead :buildBlockFromCfg.14:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.14:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.14:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.14:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.14:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.14:rotation
-    * set :buildBlock:config :buildBlockFromCfg.14:config
+ 1377 set :buildBlock:copper 30
+ 1378 set :buildBlock:lead 30
+ 1379 set :buildBlock:graphite 30
+ 1380 set :buildBlock:silicon 0
+ 1381 set :buildBlock:titanium 0
+ 1382 set :buildBlock:metaglass 30
+ 1383 set :buildBlock:rotation 0
+ 1384 set :buildBlock:config null
  1385 setaddr :buildBlock*retaddr *label325 (h:*label325)
  1386 call *label13 *invalid :buildBlock*retval (m:*label325) (h:*label325)
  1387 label *label325
 
  1402 set :buildBlockFromCfg.15:metaglass 0
  1403 set :buildBlockFromCfg.15:rotation 0
  1404 set :buildBlockFromCfg.15:config null
-    * setaddr *tmp293 *label330
  1405 label *label327
-    * op add :buildBlockFromCfg.15:x .coreX :buildBlockFromCfg.15:offsetX
-    * op add :buildBlockFromCfg.15:y .coreY :buildBlockFromCfg.15:offsetY
-    * set :buildBlock:block :buildBlockFromCfg.15:block
+ 1406 op add :buildBlockFromCfg.15:x .coreX -4.5
+ 1407 op add :buildBlockFromCfg.15:y .coreY 1.5
+ 1408 set :buildBlock:block @steam-generator
  1409 set :buildBlock:x :buildBlockFromCfg.15:x
  1410 set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper :buildBlockFromCfg.15:copper
-    * set :buildBlock:lead :buildBlockFromCfg.15:lead
-    * set :buildBlock:graphite :buildBlockFromCfg.15:graphite
-    * set :buildBlock:silicon :buildBlockFromCfg.15:silicon
-    * set :buildBlock:titanium :buildBlockFromCfg.15:titanium
-    * set :buildBlock:metaglass :buildBlockFromCfg.15:metaglass
-    * set :buildBlock:rotation :buildBlockFromCfg.15:rotation
-    * set :buildBlock:config :buildBlockFromCfg.15:config
+ 1411 set :buildBlock:copper 35
+ 1412 set :buildBlock:lead 40
+ 1413 set :buildBlock:graphite 25
+ 1414 set :buildBlock:silicon 30
+ 1415 set :buildBlock:titanium 0
+ 1416 set :buildBlock:metaglass 0
+ 1417 set :buildBlock:rotation 0
+ 1418 set :buildBlock:config null
  1419 setaddr :buildBlock*retaddr *label331 (h:*label331)
  1420 call *label13 *invalid :buildBlock*retval (m:*label331) (h:*label331)
  1421 label *label331

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-230 instructions):
 
    29 jump *label16 always
    30 end
    31 label *label1
-    * set :status3:text "Moving..."
    32 set .status3 "Moving..."
    33 label *label18
    34 label *label19
 
    43 return :moveTo*retaddr
    44 end
    45 label *label2
-    * set *tmp7 :moveTo.1:x
-    * set *tmp8 :moveTo.1:y
    46 set :moveTo:x :moveTo.1:x
    47 set :moveTo:y :moveTo.1:y
    48 set :moveTo:radius 5
 
    86 return :moveToBlock*retaddr
    87 end
    88 label *label5
-    * set :status3.1:text "Depositing..."
    89 set .status3 "Depositing..."
    90 label *label34
    91 sensor *tmp16 @unit @firstItem
 
   157 setaddr :moveToEmpty*retaddr *label54 (h:*label54)
   158 call *label3 *invalid :moveToEmpty*retval (m:*label54) (h:*label54)
   159 label *label54
-    * set :status3.2:text "Mining..."
   160 set .status3 "Mining..."
   161 label *label55
   162 label *label56
 
   196 label *label9
   197 sensor .transportTarget :fetchBlock:block @itemCapacity
   198 set .transportItem :fetchBlock:item
-    * set :status2:text "Fetching "
-    * set :status2:item :fetchBlock:item
-    * set :status2:block :fetchBlock:block
   199 set .status2 "Fetching "
   200 set .item2 :fetchBlock:item
   201 set .block2 :fetchBlock:block
 
   240 jump *label76 greaterThanEq *tmp56 .updatedGraphiteTarget
   241 sensor *tmp59 .press @coal
   242 jump *label78 greaterThanEq *tmp59 5
-    * set :status1:text "Meeting the graphite target"
   243 set .status1 "Meeting the graphite target"
   244 label *label80
   245 set :supplyBlock:block .press
   246 set :supplyBlock:ore @coal
-    * set :status2.1:text "Supplying "
-    * set :status2.1:item @coal
-    * set :status2.1:block .press
   247 set .status2 "Supplying "
-    * set .item2 :supplyBlock:ore
-    * set .block2 :supplyBlock:block
+  248 set .item2 @coal
+  249 set .block2 .press
   250 label *label82
   251 sensor *tmp62 .press @itemCapacity
   252 sensor *tmp63 .press @coal
 
   270 jump *label86 greaterThanEq *tmp67 .updatedSiliconTarget
   271 sensor *tmp70 .smelter @coal
   272 jump *label88 greaterThanEq *tmp70 5
-    * set :status1.1:text "Meeting the silicon target (coal)"
   273 set .status1 "Meeting the silicon target (coal)"
   274 label *label90
   275 set :supplyBlock.1:block .smelter
   276 set :supplyBlock.1:ore @coal
-    * set :status2.2:text "Supplying "
-    * set :status2.2:item @coal
-    * set :status2.2:block .smelter
   277 set .status2 "Supplying "
-    * set .item2 :supplyBlock.1:ore
-    * set .block2 :supplyBlock.1:block
+  278 set .item2 @coal
+  279 set .block2 .smelter
   280 label *label92
   281 sensor *tmp73 .smelter @itemCapacity
   282 sensor *tmp74 .smelter @coal
 
   296 label *label88
   297 sensor *tmp78 .smelter @sand
   298 jump *label96 greaterThanEq *tmp78 5
-    * set :status1.2:text "Meeting the silicon target (sand)"
   299 set .status1 "Meeting the silicon target (sand)"
   300 label *label98
   301 set :supplyBlock.2:block .smelter
   302 set :supplyBlock.2:ore @sand
-    * set :status2.3:text "Supplying "
-    * set :status2.3:item @sand
-    * set :status2.3:block .smelter
   303 set .status2 "Supplying "
-    * set .item2 :supplyBlock.2:ore
-    * set .block2 :supplyBlock.2:block
+  304 set .item2 @sand
+  305 set .block2 .smelter
   306 label *label100
   307 sensor *tmp81 .smelter @itemCapacity
   308 sensor *tmp82 .smelter @sand
 
   325 label *label87
   326 sensor *tmp86 .battery @totalPower
   327 jump *label104 greaterThanEq *tmp86 .powerTarget
-    * set :status1.3:text "Supplying generator"
   328 set .status1 "Supplying generator"
   329 label *label106
   330 set :supplyBlock.3:block .generator
   331 set :supplyBlock.3:ore @coal
-    * set :status2.4:text "Supplying "
-    * set :status2.4:item @coal
-    * set :status2.4:block .generator
   332 set .status2 "Supplying "
-    * set .item2 :supplyBlock.3:ore
-    * set .block2 :supplyBlock.3:block
+  333 set .item2 @coal
+  334 set .block2 .generator
   335 label *label108
   336 sensor *tmp89 .generator @itemCapacity
   337 sensor *tmp90 .generator @coal
 
   354 jump *label112 equal .processor null
   355 sensor *tmp96 .core @coal
   356 jump *label114 greaterThanEq *tmp96 10
-    * set :status1.4:text "Supplying base"
   357 set .status1 "Supplying base"
   358 label *label116
   359 set :mineOre.1:ore @coal
 
   370 jump *label118 greaterThanEq *tmp99 .titaniumTrigger
   371 sensor *tmp102 .core @silicon
   372 jump *label120 greaterThanEq *tmp102 .siliconTarget
-    * set :status1.5:text "Meeting the silicon target"
   373 set .status1 "Meeting the silicon target"
   374 label *label122
   375 sensor :supplyBlocks:coal .core @coal
 
   381 set *tmp108 @sand
   382 label *label124
   383 set :supplyBlocks:ore *tmp108
-    * set :status2.5:text "Mining "
-    * set :status2.5:item *tmp108
-    * set :status2.5:block "core"
   384 set .status2 "Mining "
-    * set .item2 :supplyBlocks:ore
+  385 set .item2 *tmp108
   386 set .block2 "core"
   387 label *label125
   388 set :mineOre.1:ore *tmp108
 
   393 label *label120
   394 sensor *tmp109 .core @copper
   395 jump *label127 greaterThanEq *tmp109 .copperTarget
-    * set :status1.6:text "Meeting the copper target"
   396 set .status1 "Meeting the copper target"
   397 label *label129
-    * set :status2.6:text "Mining "
-    * set :status2.6:item @copper
-    * set :status2.6:block "core"
   398 set .status2 "Mining "
   399 set .item2 @copper
   400 set .block2 "core"
 
   407 label *label127
   408 sensor *tmp112 .core @lead
   409 jump *label132 greaterThanEq *tmp112 .leadTarget
-    * set :status1.7:text "Meeting the lead target"
   410 set .status1 "Meeting the lead target"
   411 label *label134
-    * set :status2.7:text "Mining "
-    * set :status2.7:item @lead
-    * set :status2.7:block "core"
   412 set .status2 "Mining "
   413 set .item2 @lead
   414 set .block2 "core"
 
   421 label *label132
   422 sensor *tmp115 .core @metaglass
   423 jump *label137 greaterThanEq *tmp115 .metaglassTarget
-    * set :status1.8:text "Meeting the metaglass target"
   424 set .status1 "Meeting the metaglass target"
   425 label *label139
-    * set :status2.8:text "Mining "
-    * set :status2.8:item @sand
-    * set :status2.8:block "core"
   426 set .status2 "Mining "
   427 set .item2 @sand
   428 set .block2 "core"
 
   434 jump *label138 always
   435 label *label137
   436 jump *label142 notEqual :supplyBlocks:supplied false
-    * set :status1.9:text "Supplying base"
   437 set .status1 "Supplying base"
   438 label *label144
   439 sensor :supplyBlocks:coal.1 .core @coal
 
   445 set *tmp123 @sand
   446 label *label146
   447 set :supplyBlocks:ore.1 *tmp123
-    * set :status2.9:text "Mining "
-    * set :status2.9:item *tmp123
-    * set :status2.9:block "core"
   448 set .status2 "Mining "
-    * set .item2 :supplyBlocks:ore.1
+  449 set .item2 *tmp123
   450 set .block2 "core"
   451 label *label147
   452 set :mineOre.1:ore *tmp123
 
   461 label *label121
   462 jump *label119 always
   463 label *label118
-    * set :status1.10:text "Fetching titanium"
   464 set .status1 "Fetching titanium"
   465 label *label149
   466 set :fetchBlock:block .titanium_drill
 
   570 setaddr :moveTo.1*retaddr *label170 (h:*label170)
   571 call *label2 *invalid :moveTo.1*retval (m:*label170) (h:*label170)
   572 label *label170
-    * set :status3.3:text "Building..."
   573 set .status3 "Building..."
   574 label *label171
   575 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
 
   662 label *label191
   663 jump *label190 equal .core null
   664 label *label192
-    * set :buildBlockFromCfg:block @graphite-press
-    * set :buildBlockFromCfg:offsetX -1.5
-    * set :buildBlockFromCfg:offsetY 2.5
-    * set :buildBlockFromCfg:copper 75
-    * set :buildBlockFromCfg:lead 30
-    * set :buildBlockFromCfg:graphite 0
-    * set :buildBlockFromCfg:silicon 0
-    * set :buildBlockFromCfg:titanium 0
-    * set :buildBlockFromCfg:metaglass 0
-    * set :buildBlockFromCfg:rotation 0
-    * set :buildBlockFromCfg:config null
   665 label *label194
   666 op add :buildBlockFromCfg:x .coreX -1.5
   667 op add :buildBlockFromCfg:y .coreY 2.5
 
   687 label *label196
   688 label *label193
   689 set .press *tmp183
-    * set :buildBlockFromCfg.1:block @battery
-    * set :buildBlockFromCfg.1:offsetX 0
-    * set :buildBlockFromCfg.1:offsetY 4
-    * set :buildBlockFromCfg.1:copper 5
-    * set :buildBlockFromCfg.1:lead 20
-    * set :buildBlockFromCfg.1:graphite 0
-    * set :buildBlockFromCfg.1:silicon 0
-    * set :buildBlockFromCfg.1:titanium 0
-    * set :buildBlockFromCfg.1:metaglass 0
-    * set :buildBlockFromCfg.1:rotation 0
-    * set :buildBlockFromCfg.1:config null
   690 label *label200
   691 op add :buildBlockFromCfg.1:x .coreX 0
   692 op add :buildBlockFromCfg.1:y .coreY 4
 
   712 label *label202
   713 label *label199
   714 set .battery *tmp187
-    * set :buildBlockFromCfg.2:block @combustion-generator
-    * set :buildBlockFromCfg.2:offsetX 0
-    * set :buildBlockFromCfg.2:offsetY 3
-    * set :buildBlockFromCfg.2:copper 25
-    * set :buildBlockFromCfg.2:lead 15
-    * set :buildBlockFromCfg.2:graphite 0
-    * set :buildBlockFromCfg.2:silicon 0
-    * set :buildBlockFromCfg.2:titanium 0
-    * set :buildBlockFromCfg.2:metaglass 0
-    * set :buildBlockFromCfg.2:rotation 0
-    * set :buildBlockFromCfg.2:config null
   715 label *label206
   716 op add :buildBlockFromCfg.2:x .coreX 0
   717 op add :buildBlockFromCfg.2:y .coreY 3
 
   738 label *label205
   739 set .generator *tmp191
   740 set .powerTarget 400
-    * set :buildBlockFromCfg.3:block @battery
-    * set :buildBlockFromCfg.3:offsetX -1
-    * set :buildBlockFromCfg.3:offsetY 4
-    * set :buildBlockFromCfg.3:copper 5
-    * set :buildBlockFromCfg.3:lead 20
-    * set :buildBlockFromCfg.3:graphite 0
-    * set :buildBlockFromCfg.3:silicon 0
-    * set :buildBlockFromCfg.3:titanium 0
-    * set :buildBlockFromCfg.3:metaglass 0
-    * set :buildBlockFromCfg.3:rotation 0
-    * set :buildBlockFromCfg.3:config null
   741 label *label212
   742 op add :buildBlockFromCfg.3:x .coreX -1
   743 op add :buildBlockFromCfg.3:y .coreY 4
 
   761 multilabel *label215 (m:marker4)
   762 label *label214
   763 label *label211
-    * set :buildBlockFromCfg.4:block @silicon-smelter
-    * set :buildBlockFromCfg.4:offsetX 1.5
-    * set :buildBlockFromCfg.4:offsetY 2.5
-    * set :buildBlockFromCfg.4:copper 30
-    * set :buildBlockFromCfg.4:lead 25
-    * set :buildBlockFromCfg.4:graphite 0
-    * set :buildBlockFromCfg.4:silicon 0
-    * set :buildBlockFromCfg.4:titanium 0
-    * set :buildBlockFromCfg.4:metaglass 0
-    * set :buildBlockFromCfg.4:rotation 0
-    * set :buildBlockFromCfg.4:config null
   764 label *label218
   765 op add :buildBlockFromCfg.4:x .coreX 1.5
   766 op add :buildBlockFromCfg.4:y .coreY 2.5
 
   858 label *label238
   859 set :buildTitaniumDrillCfg:count 0
   860 op add :checkOre:x :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
-    * set :checkOre:y :buildTitaniumDrillCfg:y
   861 set :checkOre:count 0
   862 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
   863 jump *label246 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count :buildTitaniumDrillCfg:count 1
+  864 op add :checkOre:count 0 1
   865 label *label246
   866 label *label247
   867 label *label245
   868 set :buildTitaniumDrillCfg:count :checkOre:count
   869 op add *tmp222 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
-    * set :checkOre.1:x :buildTitaniumDrillCfg:x
-    * set :checkOre.1:y *tmp222
   870 set :checkOre.1:count :checkOre:count
   871 ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
   872 jump *label249 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :buildTitaniumDrillCfg:count 1
+  873 op add :checkOre.1:count :checkOre:count 1
   874 label *label249
   875 label *label250
   876 label *label248
   877 set :buildTitaniumDrillCfg:count :checkOre.1:count
   878 op add *tmp229 :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
   879 op add *tmp230 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
-    * set :checkOre.2:x :checkOre:x
-    * set :checkOre.2:y *tmp222
   880 set :checkOre.2:count :checkOre.1:count
-    * ucontrol getBlock *tmp229 *tmp230 0 0 :checkOre.2:floor
+  881 ucontrol getBlock :checkOre:x *tmp222 0 0 :checkOre.2:floor
   882 jump *label252 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :buildTitaniumDrillCfg:count 1
+  883 op add :checkOre.2:count :checkOre.1:count 1
   884 label *label252
   885 label *label253
   886 label *label251
 
   913 setaddr :buildBlockAt*retaddr *label260 (h:*label260)
   914 call *label12 *invalid :buildBlockAt*retval (m:*label260) (h:*label260)
   915 label *label260
-    * set :buildTitaniumDrillCfg:result :buildBlockAt*retval
   916 jump *label261 equal :buildBlockAt*retval null
   917 set *tmp204 :buildBlockAt*retval
   918 jump *label224 always
 
   935 label *label227
   936 set *tmp204 null
   937 label *label224
-    * set *tmp203 *tmp204
   938 label *label223
   939 set .titanium_drill *tmp204
-    * set :buildBlockFromCfg.5:block @unloader
-    * set :buildBlockFromCfg.5:offsetX 0
-    * set :buildBlockFromCfg.5:offsetY 2
-    * set :buildBlockFromCfg.5:copper 0
-    * set :buildBlockFromCfg.5:lead 0
-    * set :buildBlockFromCfg.5:graphite 0
-    * set :buildBlockFromCfg.5:silicon 30
-    * set :buildBlockFromCfg.5:titanium 25
-    * set :buildBlockFromCfg.5:metaglass 0
-    * set :buildBlockFromCfg.5:rotation 0
-    * set :buildBlockFromCfg.5:config null
   940 label *label267
   941 op add :buildBlockFromCfg.5:x .coreX 0
   942 op add :buildBlockFromCfg.5:y .coreY 2
 
   962 label *label269
   963 label *label266
   964 set .unloader1 *tmp252
-    * set :buildBlockFromCfg.6:block @power-node
-    * set :buildBlockFromCfg.6:offsetX -1
-    * set :buildBlockFromCfg.6:offsetY -2
-    * set :buildBlockFromCfg.6:copper 2
-    * set :buildBlockFromCfg.6:lead 6
-    * set :buildBlockFromCfg.6:graphite 0
-    * set :buildBlockFromCfg.6:silicon 0
-    * set :buildBlockFromCfg.6:titanium 0
-    * set :buildBlockFromCfg.6:metaglass 0
-    * set :buildBlockFromCfg.6:rotation 0
-    * set :buildBlockFromCfg.6:config null
   965 label *label273
   966 op add :buildBlockFromCfg.6:x .coreX -1
   967 op add :buildBlockFromCfg.6:y .coreY -2
 
   985 multilabel *label276 (m:marker8)
   986 label *label275
   987 label *label272
-    * set :buildBlockFromCfg.7:block @micro-processor
-    * set :buildBlockFromCfg.7:offsetX 1
-    * set :buildBlockFromCfg.7:offsetY 4
-    * set :buildBlockFromCfg.7:copper 90
-    * set :buildBlockFromCfg.7:lead 50
-    * set :buildBlockFromCfg.7:graphite 0
-    * set :buildBlockFromCfg.7:silicon 50
-    * set :buildBlockFromCfg.7:titanium 0
-    * set :buildBlockFromCfg.7:metaglass 0
-    * set :buildBlockFromCfg.7:rotation 0
-    * set :buildBlockFromCfg.7:config processor1
   988 label *label279
   989 op add :buildBlockFromCfg.7:x .coreX 1
   990 op add :buildBlockFromCfg.7:y .coreY 4
 
  1010 label *label281
  1011 label *label278
  1012 set .processor *tmp260
-    * set :buildBlockFromCfg.8:block @air-factory
-    * set :buildBlockFromCfg.8:offsetX -4
-    * set :buildBlockFromCfg.8:offsetY -1
-    * set :buildBlockFromCfg.8:copper 60
-    * set :buildBlockFromCfg.8:lead 70
-    * set :buildBlockFromCfg.8:graphite 0
-    * set :buildBlockFromCfg.8:silicon 0
-    * set :buildBlockFromCfg.8:titanium 0
-    * set :buildBlockFromCfg.8:metaglass 0
-    * set :buildBlockFromCfg.8:rotation 3
-    * set :buildBlockFromCfg.8:config @mono
  1013 label *label285
  1014 op add :buildBlockFromCfg.8:x .coreX -4
  1015 op add :buildBlockFromCfg.8:y .coreY -1
 
  1033 multilabel *label288 (m:marker10)
  1034 label *label287
  1035 label *label284
-    * set :buildBlockFromCfg.9:block @unloader
-    * set :buildBlockFromCfg.9:offsetX -2
-    * set :buildBlockFromCfg.9:offsetY 1
-    * set :buildBlockFromCfg.9:copper 0
-    * set :buildBlockFromCfg.9:lead 0
-    * set :buildBlockFromCfg.9:graphite 0
-    * set :buildBlockFromCfg.9:silicon 30
-    * set :buildBlockFromCfg.9:titanium 25
-    * set :buildBlockFromCfg.9:metaglass 0
-    * set :buildBlockFromCfg.9:rotation 0
-    * set :buildBlockFromCfg.9:config null
  1036 label *label291
  1037 op add :buildBlockFromCfg.9:x .coreX -2
  1038 op add :buildBlockFromCfg.9:y .coreY 1
 
  1056 multilabel *label294 (m:marker11)
  1057 label *label293
  1058 label *label290
-    * set :buildBlockFromCfg.10:block @sorter
-    * set :buildBlockFromCfg.10:offsetX -3
-    * set :buildBlockFromCfg.10:offsetY 1
-    * set :buildBlockFromCfg.10:copper 2
-    * set :buildBlockFromCfg.10:lead 2
-    * set :buildBlockFromCfg.10:graphite 0
-    * set :buildBlockFromCfg.10:silicon 0
-    * set :buildBlockFromCfg.10:titanium 0
-    * set :buildBlockFromCfg.10:metaglass 0
-    * set :buildBlockFromCfg.10:rotation 0
-    * set :buildBlockFromCfg.10:config @coal
  1059 label *label297
  1060 op add :buildBlockFromCfg.10:x .coreX -3
  1061 op add :buildBlockFromCfg.10:y .coreY 1
 
  1080 label *label299
  1081 label *label296
  1082 write @mono .processor ".unitToProduce"
-    * set :buildBlockFromCfg.11:block @unloader
-    * set :buildBlockFromCfg.11:offsetX 2
-    * set :buildBlockFromCfg.11:offsetY 0
-    * set :buildBlockFromCfg.11:copper 0
-    * set :buildBlockFromCfg.11:lead 0
-    * set :buildBlockFromCfg.11:graphite 0
-    * set :buildBlockFromCfg.11:silicon 30
-    * set :buildBlockFromCfg.11:titanium 25
-    * set :buildBlockFromCfg.11:metaglass 0
-    * set :buildBlockFromCfg.11:rotation 0
-    * set :buildBlockFromCfg.11:config null
  1083 label *label303
  1084 op add :buildBlockFromCfg.11:x .coreX 2
  1085 op add :buildBlockFromCfg.11:y .coreY 0
 
  1103 multilabel *label306 (m:marker13)
  1104 label *label305
  1105 label *label302
-    * set :buildBlockFromCfg.12:block @kiln
-    * set :buildBlockFromCfg.12:offsetX 3.5
-    * set :buildBlockFromCfg.12:offsetY 0.5
-    * set :buildBlockFromCfg.12:copper 60
-    * set :buildBlockFromCfg.12:lead 30
-    * set :buildBlockFromCfg.12:graphite 30
-    * set :buildBlockFromCfg.12:silicon 0
-    * set :buildBlockFromCfg.12:titanium 0
-    * set :buildBlockFromCfg.12:metaglass 0
-    * set :buildBlockFromCfg.12:rotation 0
-    * set :buildBlockFromCfg.12:config null
  1106 label *label309
  1107 op add :buildBlockFromCfg.12:x .coreX 3.5
  1108 op add :buildBlockFromCfg.12:y .coreY 0.5
 
  1126 multilabel *label312 (m:marker14)
  1127 label *label311
  1128 label *label308
-    * set :buildBlockFromCfg.13:block @junction
-    * set :buildBlockFromCfg.13:offsetX 2
-    * set :buildBlockFromCfg.13:offsetY 1
-    * set :buildBlockFromCfg.13:copper 3
-    * set :buildBlockFromCfg.13:lead 0
-    * set :buildBlockFromCfg.13:graphite 0
-    * set :buildBlockFromCfg.13:silicon 0
-    * set :buildBlockFromCfg.13:titanium 0
-    * set :buildBlockFromCfg.13:metaglass 0
-    * set :buildBlockFromCfg.13:rotation 0
-    * set :buildBlockFromCfg.13:config null
  1129 label *label315
  1130 op add :buildBlockFromCfg.13:x .coreX 2
  1131 op add :buildBlockFromCfg.13:y .coreY 1
 
  1149 multilabel *label318 (m:marker15)
  1150 label *label317
  1151 label *label314
-    * set :buildBlockFromCfg.14:block @water-extractor
-    * set :buildBlockFromCfg.14:offsetX -3.5
-    * set :buildBlockFromCfg.14:offsetY 3.5
-    * set :buildBlockFromCfg.14:copper 30
-    * set :buildBlockFromCfg.14:lead 30
-    * set :buildBlockFromCfg.14:graphite 30
-    * set :buildBlockFromCfg.14:silicon 0
-    * set :buildBlockFromCfg.14:titanium 0
-    * set :buildBlockFromCfg.14:metaglass 30
-    * set :buildBlockFromCfg.14:rotation 0
-    * set :buildBlockFromCfg.14:config null
  1152 label *label321
  1153 op add :buildBlockFromCfg.14:x .coreX -3.5
  1154 op add :buildBlockFromCfg.14:y .coreY 3.5
 
  1172 multilabel *label324 (m:marker16)
  1173 label *label323
  1174 label *label320
-    * set :buildBlockFromCfg.15:block @steam-generator
-    * set :buildBlockFromCfg.15:offsetX -4.5
-    * set :buildBlockFromCfg.15:offsetY 1.5
-    * set :buildBlockFromCfg.15:copper 35
-    * set :buildBlockFromCfg.15:lead 40
-    * set :buildBlockFromCfg.15:graphite 25
-    * set :buildBlockFromCfg.15:silicon 30
-    * set :buildBlockFromCfg.15:titanium 0
-    * set :buildBlockFromCfg.15:metaglass 0
-    * set :buildBlockFromCfg.15:rotation 0
-    * set :buildBlockFromCfg.15:config null
  1175 label *label327
  1176 op add :buildBlockFromCfg.15:x .coreX -4.5
  1177 op add :buildBlockFromCfg.15:y .coreY 1.5

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 3 (-16 instructions):
 
   242 jump *label78 greaterThanEq *tmp59 5
   243 set .status1 "Meeting the graphite target"
   244 label *label80
-    * set :supplyBlock:block .press
-    * set :supplyBlock:ore @coal
   245 set .status2 "Supplying "
   246 set .item2 @coal
   247 set .block2 .press
 
   270 jump *label88 greaterThanEq *tmp70 5
   271 set .status1 "Meeting the silicon target (coal)"
   272 label *label90
-    * set :supplyBlock.1:block .smelter
-    * set :supplyBlock.1:ore @coal
   273 set .status2 "Supplying "
   274 set .item2 @coal
   275 set .block2 .smelter
 
   294 jump *label96 greaterThanEq *tmp78 5
   295 set .status1 "Meeting the silicon target (sand)"
   296 label *label98
-    * set :supplyBlock.2:block .smelter
-    * set :supplyBlock.2:ore @sand
   297 set .status2 "Supplying "
   298 set .item2 @sand
   299 set .block2 .smelter
 
   321 jump *label104 greaterThanEq *tmp86 .powerTarget
   322 set .status1 "Supplying generator"
   323 label *label106
-    * set :supplyBlock.3:block .generator
-    * set :supplyBlock.3:ore @coal
   324 set .status2 "Supplying "
   325 set .item2 @coal
   326 set .block2 .generator
 
   372 label *label123
   373 set *tmp108 @sand
   374 label *label124
-    * set :supplyBlocks:ore *tmp108
   375 set .status2 "Mining "
   376 set .item2 *tmp108
   377 set .block2 "core"
 
   435 label *label145
   436 set *tmp123 @sand
   437 label *label146
-    * set :supplyBlocks:ore.1 *tmp123
   438 set .status2 "Mining "
   439 set .item2 *tmp123
   440 set .block2 "core"
 
   846 set :buildTitaniumDrillCfg:yy -1
   847 setaddr *tmp214 *label244
   848 label *label238
-    * set :buildTitaniumDrillCfg:count 0
   849 op add :checkOre:x :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
   850 set :checkOre:count 0
   851 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
 
   854 label *label246
   855 label *label247
   856 label *label245
-    * set :buildTitaniumDrillCfg:count :checkOre:count
   857 op add *tmp222 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
   858 set :checkOre.1:count :checkOre:count
   859 ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
 
   862 label *label249
   863 label *label250
   864 label *label248
-    * set :buildTitaniumDrillCfg:count :checkOre.1:count
-    * op add *tmp229 :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
-    * op add *tmp230 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
   865 set :checkOre.2:count :checkOre.1:count
   866 ucontrol getBlock :checkOre:x *tmp222 0 0 :checkOre.2:floor
   867 jump *label252 notEqual :checkOre.2:floor @ore-titanium
 
   869 label *label252
   870 label *label253
   871 label *label251
-    * set :buildTitaniumDrillCfg:count :checkOre.2:count
   872 jump *label254 lessThanEq :checkOre.2:count :buildTitaniumDrillCfg:best
   873 set :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:xx
   874 set :buildTitaniumDrillCfg:by :buildTitaniumDrillCfg:yy

Modifications by Iterated phase, Loop Hoisting, pass 1, iteration 1:
 
    31 label *label1
    32 set .status3 "Moving..."
    33 label *label18
+   34 op sub *tmp6 :moveTo:radius 0.5
    35 label *label19
    36 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp4
    37 jump *label21 notEqual *tmp4 false
-    * op sub *tmp6 :moveTo:radius 0.5
    38 ucontrol approach :moveTo:x :moveTo:y *tmp6
    39 label *label20
    40 jump *label19 always

Modifications by Iterated phase, If Expression Optimization, pass 1, iteration 1 (-1 instructions):
 
    90 label *label34
    91 sensor *tmp16 @unit @firstItem
    92 jump *label35 notEqual *tmp16 :depositItems:item
+   93 set *tmp21 5
    94 op equal *tmp19 :depositItems:block .core
    95 op land *tmp20 :depositItems:fromMining *tmp19
-    * jump *label37 equal *tmp20 false
+   96 jump *label38 equal *tmp20 false
    97 set *tmp21 7
    98 jump *label38 always
-    * label *label37
-    * set *tmp21 5
    99 label *label38
   100 set :moveToBlock:block :depositItems:block
   101 set :moveToBlock:radius *tmp21
 
   365 label *label122
   366 sensor :supplyBlocks:coal .core @coal
   367 sensor :supplyBlocks:sand .core @sand
-    * jump *label123 greaterThanEq :supplyBlocks:coal :supplyBlocks:sand
+  368 set *tmp108 @sand
+  369 jump *label124 greaterThanEq :supplyBlocks:coal :supplyBlocks:sand
   370 set *tmp108 @coal
   371 jump *label124 always
-    * label *label123
-    * set *tmp108 @sand
   372 label *label124
   373 set .status2 "Mining "
   374 set .item2 *tmp108
 
   427 label *label144
   428 sensor :supplyBlocks:coal.1 .core @coal
   429 sensor :supplyBlocks:sand.1 .core @sand
-    * jump *label145 greaterThan :supplyBlocks:coal.1 :supplyBlocks:sand.1
+  430 set *tmp123 @sand
+  431 jump *label146 greaterThan :supplyBlocks:coal.1 :supplyBlocks:sand.1
   432 set *tmp123 @coal
   433 jump *label146 always
-    * label *label145
-    * set *tmp123 @sand
   434 label *label146
   435 set .status2 "Mining "
   436 set .item2 *tmp123
 
   510 op add *tmp132 .metaglassTarget 30
   511 write *tmp132 .processor ".kilnTarget"
   512 label *label162
+  513 set .titaniumTrigger 100
   514 sensor *tmp133 .core @titanium
   515 op add *tmp134 .titaniumTarget 10
-    * jump *label163 greaterThanEq *tmp133 *tmp134
-    * set *tmp136 7
+  516 jump *label164 greaterThanEq *tmp133 *tmp134
+  517 set .titaniumTrigger 7
   518 jump *label164 always
-    * label *label163
-    * set *tmp136 100
   519 label *label164
-    * set .titaniumTrigger *tmp136
   520 label *label165
   521 sensor *tmp137 .core @copper
   522 op lessThan *tmp138 *tmp137 .copperTarget

Modifications by Unroll iteration loop at CoreBuilder.mnd:318:5 (-2 instructions):
 
   468 set .titaniumTarget :meetTarget:titanium
   469 set .metaglassTarget :meetTarget:metaglass
   470 set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
-    * setaddr *tmp124 *label155
-    * jump *label152 always
-    * multilabel *label155 (m:marker0)
-    * set :meetTarget:t :meetTarget:lead
-    * setaddr *tmp124 *label156
-    * jump *label152 always
-    * multilabel *label156 (m:marker0)
-    * set :meetTarget:t :meetTarget:graphite
-    * setaddr *tmp124 *label157
-    * jump *label152 always
-    * multilabel *label157 (m:marker0)
-    * set :meetTarget:t :meetTarget:silicon
-    * setaddr *tmp124 *label158
-    * jump *label152 always
-    * multilabel *label158 (m:marker0)
-    * set :meetTarget:t :meetTarget:titanium
-    * setaddr *tmp124 *label159
-    * jump *label152 always
-    * multilabel *label159 (m:marker0)
-    * set :meetTarget:t :meetTarget:metaglass
-    * setaddr *tmp124 *label160
-    * label *label152
-    * op sign *tmp125 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp125
-    * label *label153
-    * multijump *tmp124 0 0 (m:marker0)
-    * multilabel *label160 (m:marker0)
-    * label *label154
+  471 set :meetTarget:t :meetTarget:copper
+  472 label *label337
+  473 op sign *tmp125 :meetTarget:t
+  474 op add :meetTarget:count :meetTarget:count *tmp125
+  475 label *label338
+  476 set :meetTarget:t :meetTarget:lead
+  477 label *label341
+  478 op sign *tmp125 :meetTarget:t
+  479 op add :meetTarget:count :meetTarget:count *tmp125
+  480 label *label342
+  481 set :meetTarget:t :meetTarget:graphite
+  482 label *label345
+  483 op sign *tmp125 :meetTarget:t
+  484 op add :meetTarget:count :meetTarget:count *tmp125
+  485 label *label346
+  486 set :meetTarget:t :meetTarget:silicon
+  487 label *label349
+  488 op sign *tmp125 :meetTarget:t
+  489 op add :meetTarget:count :meetTarget:count *tmp125
+  490 label *label350
+  491 set :meetTarget:t :meetTarget:titanium
+  492 label *label353
+  493 op sign *tmp125 :meetTarget:t
+  494 op add :meetTarget:count :meetTarget:count *tmp125
+  495 label *label354
+  496 set :meetTarget:t :meetTarget:metaglass
+  497 label *label357
+  498 op sign *tmp125 :meetTarget:t
+  499 op add :meetTarget:count :meetTarget:count *tmp125
+  500 label *label358
+  501 label *label154
   502 set .totalTargets :meetTarget:count
   503 jump *label161 notEqual .processor null
   504 op max .updatedGraphiteTarget 10 .graphiteTarget

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   470 set :meetTarget:count 0
   471 set :meetTarget:t :meetTarget:copper
   472 label *label337
-    * op sign *tmp125 :meetTarget:t
-    * op add :meetTarget:count :meetTarget:count *tmp125
+  473 op sign *tmp125 :meetTarget:copper
+  474 op add :meetTarget:count 0 *tmp125
   475 label *label338
   476 set :meetTarget:t :meetTarget:lead
   477 label *label341
-    * op sign *tmp125 :meetTarget:t
+  478 op sign *tmp125 :meetTarget:lead
   479 op add :meetTarget:count :meetTarget:count *tmp125
   480 label *label342
   481 set :meetTarget:t :meetTarget:graphite
   482 label *label345
-    * op sign *tmp125 :meetTarget:t
+  483 op sign *tmp125 :meetTarget:graphite
   484 op add :meetTarget:count :meetTarget:count *tmp125
   485 label *label346
   486 set :meetTarget:t :meetTarget:silicon
   487 label *label349
-    * op sign *tmp125 :meetTarget:t
+  488 op sign *tmp125 :meetTarget:silicon
   489 op add :meetTarget:count :meetTarget:count *tmp125
   490 label *label350
   491 set :meetTarget:t :meetTarget:titanium
   492 label *label353
-    * op sign *tmp125 :meetTarget:t
+  493 op sign *tmp125 :meetTarget:titanium
   494 op add :meetTarget:count :meetTarget:count *tmp125
   495 label *label354
   496 set :meetTarget:t :meetTarget:metaglass
   497 label *label357
-    * op sign *tmp125 :meetTarget:t
+  498 op sign *tmp125 :meetTarget:metaglass
   499 op add :meetTarget:count :meetTarget:count *tmp125
   500 label *label358
   501 label *label154

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-7 instructions):
 
   467 set .siliconTarget :meetTarget:silicon
   468 set .titaniumTarget :meetTarget:titanium
   469 set .metaglassTarget :meetTarget:metaglass
-    * set :meetTarget:count 0
-    * set :meetTarget:t :meetTarget:copper
   470 label *label337
   471 op sign *tmp125 :meetTarget:copper
   472 op add :meetTarget:count 0 *tmp125
   473 label *label338
-    * set :meetTarget:t :meetTarget:lead
   474 label *label341
   475 op sign *tmp125 :meetTarget:lead
   476 op add :meetTarget:count :meetTarget:count *tmp125
   477 label *label342
-    * set :meetTarget:t :meetTarget:graphite
   478 label *label345
   479 op sign *tmp125 :meetTarget:graphite
   480 op add :meetTarget:count :meetTarget:count *tmp125
   481 label *label346
-    * set :meetTarget:t :meetTarget:silicon
   482 label *label349
   483 op sign *tmp125 :meetTarget:silicon
   484 op add :meetTarget:count :meetTarget:count *tmp125
   485 label *label350
-    * set :meetTarget:t :meetTarget:titanium
   486 label *label353
   487 op sign *tmp125 :meetTarget:titanium
   488 op add :meetTarget:count :meetTarget:count *tmp125
   489 label *label354
-    * set :meetTarget:t :meetTarget:metaglass
   490 label *label357
   491 op sign *tmp125 :meetTarget:metaglass
   492 op add :meetTarget:count :meetTarget:count *tmp125

Modifications by Replicate loop condition at CoreBuilder.mnd:121:5 (+1 instructions):
 
    35 label *label19
    36 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp4
    37 jump *label21 notEqual *tmp4 false
+   38 label *label362
    39 ucontrol approach :moveTo:x :moveTo:y *tmp6
    40 label *label20
-    * jump *label19 always
+   41 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp4
+   42 jump *label362 equal *tmp4 false
    43 label *label21
    44 label *label17
    45 return :moveTo*retaddr

Modifications by Replicate loop condition at CoreBuilder.mnd:139:5 (+1 instructions):
 
    68 label *label28
    69 sensor *tmp12 @unit @firstItem
    70 jump *label30 equal *tmp12 null
+   71 label *label363
    72 ucontrol itemDrop @air 1000
    73 label *label29
-    * jump *label28 always
+   74 sensor *tmp12 @unit @firstItem
+   75 jump *label363 notEqual *tmp12 null
    76 label *label30
    77 label *label24
    78 return :moveToEmpty*retaddr

Modifications by Replicate loop condition at CoreBuilder.mnd:163:9 (+1 instructions):
 
   123 label *label45
   124 sensor *tmp28 @unit @firstItem
   125 jump *label47 equal *tmp28 null
+  126 label *label364
   127 ucontrol itemDrop @air 1000
   128 label *label46
-    * jump *label45 always
+  129 sensor *tmp28 @unit @firstItem
+  130 jump *label364 notEqual *tmp28 null
   131 label *label47
   132 label *label36
   133 set .transportTarget 0

Modifications by Replicate loop condition at CoreBuilder.mnd:331:5 (+21 instructions):
 
   541 op lessThan *tmp156 *tmp155 .metaglassTarget
   542 op or *tmp158 *tmp153 *tmp156
   543 jump *label167 equal *tmp158 false
+  544 label *label365
   545 setaddr :supplyBlocks*retaddr *label168 (h:*label168)
   546 call *label10 *invalid :supplyBlocks*retval (m:*label168) (h:*label168)
   547 label *label168
   548 label *label166
-    * jump *label165 always
+  549 sensor *tmp137 .core @copper
+  550 op lessThan *tmp138 *tmp137 .copperTarget
+  551 sensor *tmp139 .core @lead
+  552 op lessThan *tmp140 *tmp139 .leadTarget
+  553 op or *tmp142 *tmp138 *tmp140
+  554 op notEqual *tmp141 *tmp142 false
+  555 sensor *tmp143 .core @graphite
+  556 op lessThan *tmp144 *tmp143 .graphiteTarget
+  557 op or *tmp146 *tmp141 *tmp144
+  558 op notEqual *tmp145 *tmp146 false
+  559 sensor *tmp147 .core @silicon
+  560 op lessThan *tmp148 *tmp147 .siliconTarget
+  561 op or *tmp150 *tmp145 *tmp148
+  562 op notEqual *tmp149 *tmp150 false
+  563 sensor *tmp151 .core @titanium
+  564 op lessThan *tmp152 *tmp151 .titaniumTarget
+  565 op or *tmp154 *tmp149 *tmp152
+  566 op notEqual *tmp153 *tmp154 false
+  567 sensor *tmp155 .core @metaglass
+  568 op lessThan *tmp156 *tmp155 .metaglassTarget
+  569 op or *tmp158 *tmp153 *tmp156
+  570 jump *label365 notEqual *tmp158 false
   571 label *label167
   572 label *label151
   573 return :meetTarget*retaddr

Modifications by Unroll iteration loop at CoreBuilder.mnd:424:9 (+52 instructions):
 
   845 set :buildTitaniumDrillCfg:best 0
   846 set :buildTitaniumDrillCfg:bx 0
   847 set :buildTitaniumDrillCfg:by 0
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy 1
-    * setaddr *tmp214 *label241
-    * jump *label238 always
-    * multilabel *label241 (m:marker6)
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy -1
-    * setaddr *tmp214 *label242
-    * jump *label238 always
-    * multilabel *label242 (m:marker6)
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy 1
-    * setaddr *tmp214 *label243
-    * jump *label238 always
-    * multilabel *label243 (m:marker6)
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy -1
-    * setaddr *tmp214 *label244
-    * label *label238
-    * op add :checkOre:x :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
-    * set :checkOre:count 0
-    * ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
-    * jump *label246 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
-    * label *label246
-    * label *label247
-    * label *label245
-    * op add *tmp222 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
-    * set :checkOre.1:count :checkOre:count
-    * ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
-    * jump *label249 notEqual :checkOre.1:floor @ore-titanium
-    * op add :checkOre.1:count :checkOre:count 1
-    * label *label249
-    * label *label250
-    * label *label248
-    * set :checkOre.2:count :checkOre.1:count
-    * ucontrol getBlock :checkOre:x *tmp222 0 0 :checkOre.2:floor
-    * jump *label252 notEqual :checkOre.2:floor @ore-titanium
-    * op add :checkOre.2:count :checkOre.1:count 1
-    * label *label252
-    * label *label253
-    * label *label251
-    * jump *label254 lessThanEq :checkOre.2:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:by :buildTitaniumDrillCfg:yy
-    * set :buildTitaniumDrillCfg:best :checkOre.2:count
-    * jump *label256 lessThan :checkOre.2:count 4
-    * jump *label240 always
-    * label *label256
-    * label *label257
-    * label *label254
-    * label *label255
-    * label *label239
-    * multijump *tmp214 0 0 (m:marker6)
-    * multilabel *label244 (m:marker6)
-    * label *label240
+  848 set :buildTitaniumDrillCfg:xx 1
+  849 set :buildTitaniumDrillCfg:yy 1
+  850 label *label366
+  851 op add :checkOre:x :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
+  852 set :checkOre:count 0
+  853 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
+  854 jump *label367 notEqual :checkOre:floor @ore-titanium
+  855 op add :checkOre:count 0 1
+  856 label *label367
+  857 label *label368
+  858 label *label369
+  859 op add *tmp222 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
+  860 set :checkOre.1:count :checkOre:count
+  861 ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
+  862 jump *label370 notEqual :checkOre.1:floor @ore-titanium
+  863 op add :checkOre.1:count :checkOre:count 1
+  864 label *label370
+  865 label *label371
+  866 label *label372
+  867 set :checkOre.2:count :checkOre.1:count
+  868 ucontrol getBlock :checkOre:x *tmp222 0 0 :checkOre.2:floor
+  869 jump *label373 notEqual :checkOre.2:floor @ore-titanium
+  870 op add :checkOre.2:count :checkOre.1:count 1
+  871 label *label373
+  872 label *label374
+  873 label *label375
+  874 jump *label378 lessThanEq :checkOre.2:count :buildTitaniumDrillCfg:best
+  875 set :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:xx
+  876 set :buildTitaniumDrillCfg:by :buildTitaniumDrillCfg:yy
+  877 set :buildTitaniumDrillCfg:best :checkOre.2:count
+  878 jump *label376 lessThan :checkOre.2:count 4
+  879 jump *label240 always
+  880 label *label376
+  881 label *label377
+  882 label *label378
+  883 label *label379
+  884 label *label380
+  885 set :buildTitaniumDrillCfg:xx 1
+  886 set :buildTitaniumDrillCfg:yy -1
+  887 label *label383
+  888 op add :checkOre:x :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
+  889 set :checkOre:count 0
+  890 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
+  891 jump *label384 notEqual :checkOre:floor @ore-titanium
+  892 op add :checkOre:count 0 1
+  893 label *label384
+  894 label *label385
+  895 label *label386
+  896 op add *tmp222 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
+  897 set :checkOre.1:count :checkOre:count
+  898 ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
+  899 jump *label387 notEqual :checkOre.1:floor @ore-titanium
+  900 op add :checkOre.1:count :checkOre:count 1
+  901 label *label387
+  902 label *label388
+  903 label *label389
+  904 set :checkOre.2:count :checkOre.1:count
+  905 ucontrol getBlock :checkOre:x *tmp222 0 0 :checkOre.2:floor
+  906 jump *label390 notEqual :checkOre.2:floor @ore-titanium
+  907 op add :checkOre.2:count :checkOre.1:count 1
+  908 label *label390
+  909 label *label391
+  910 label *label392
+  911 jump *label395 lessThanEq :checkOre.2:count :buildTitaniumDrillCfg:best
+  912 set :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:xx
+  913 set :buildTitaniumDrillCfg:by :buildTitaniumDrillCfg:yy
+  914 set :buildTitaniumDrillCfg:best :checkOre.2:count
+  915 jump *label393 lessThan :checkOre.2:count 4
+  916 jump *label240 always
+  917 label *label393
+  918 label *label394
+  919 label *label395
+  920 label *label396
+  921 label *label397
+  922 set :buildTitaniumDrillCfg:xx -1
+  923 set :buildTitaniumDrillCfg:yy 1
+  924 label *label400
+  925 op add :checkOre:x :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
+  926 set :checkOre:count 0
+  927 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
+  928 jump *label401 notEqual :checkOre:floor @ore-titanium
+  929 op add :checkOre:count 0 1
+  930 label *label401
+  931 label *label402
+  932 label *label403
+  933 op add *tmp222 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
+  934 set :checkOre.1:count :checkOre:count
+  935 ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
+  936 jump *label404 notEqual :checkOre.1:floor @ore-titanium
+  937 op add :checkOre.1:count :checkOre:count 1
+  938 label *label404
+  939 label *label405
+  940 label *label406
+  941 set :checkOre.2:count :checkOre.1:count
+  942 ucontrol getBlock :checkOre:x *tmp222 0 0 :checkOre.2:floor
+  943 jump *label407 notEqual :checkOre.2:floor @ore-titanium
+  944 op add :checkOre.2:count :checkOre.1:count 1
+  945 label *label407
+  946 label *label408
+  947 label *label409
+  948 jump *label412 lessThanEq :checkOre.2:count :buildTitaniumDrillCfg:best
+  949 set :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:xx
+  950 set :buildTitaniumDrillCfg:by :buildTitaniumDrillCfg:yy
+  951 set :buildTitaniumDrillCfg:best :checkOre.2:count
+  952 jump *label410 lessThan :checkOre.2:count 4
+  953 jump *label240 always
+  954 label *label410
+  955 label *label411
+  956 label *label412
+  957 label *label413
+  958 label *label414
+  959 set :buildTitaniumDrillCfg:xx -1
+  960 set :buildTitaniumDrillCfg:yy -1
+  961 label *label417
+  962 op add :checkOre:x :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
+  963 set :checkOre:count 0
+  964 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
+  965 jump *label418 notEqual :checkOre:floor @ore-titanium
+  966 op add :checkOre:count 0 1
+  967 label *label418
+  968 label *label419
+  969 label *label420
+  970 op add *tmp222 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
+  971 set :checkOre.1:count :checkOre:count
+  972 ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
+  973 jump *label421 notEqual :checkOre.1:floor @ore-titanium
+  974 op add :checkOre.1:count :checkOre:count 1
+  975 label *label421
+  976 label *label422
+  977 label *label423
+  978 set :checkOre.2:count :checkOre.1:count
+  979 ucontrol getBlock :checkOre:x *tmp222 0 0 :checkOre.2:floor
+  980 jump *label424 notEqual :checkOre.2:floor @ore-titanium
+  981 op add :checkOre.2:count :checkOre.1:count 1
+  982 label *label424
+  983 label *label425
+  984 label *label426
+  985 jump *label429 lessThanEq :checkOre.2:count :buildTitaniumDrillCfg:best
+  986 set :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:xx
+  987 set :buildTitaniumDrillCfg:by :buildTitaniumDrillCfg:yy
+  988 set :buildTitaniumDrillCfg:best :checkOre.2:count
+  989 jump *label427 lessThan :checkOre.2:count 4
+  990 jump *label240 always
+  991 label *label427
+  992 label *label428
+  993 label *label429
+  994 label *label430
+  995 label *label431
+  996 label *label240
   997 jump *label258 lessThanEq :buildTitaniumDrillCfg:best 0
   998 op div *tmp243 :buildTitaniumDrillCfg:bx 2
   999 op add :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:x *tmp243

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   848 set :buildTitaniumDrillCfg:xx 1
   849 set :buildTitaniumDrillCfg:yy 1
   850 label *label366
-    * op add :checkOre:x :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
+  851 op add :checkOre:x :buildTitaniumDrillCfg:x 1
   852 set :checkOre:count 0
   853 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
   854 jump *label367 notEqual :checkOre:floor @ore-titanium
 
   856 label *label367
   857 label *label368
   858 label *label369
-    * op add *tmp222 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
+  859 op add *tmp222 :buildTitaniumDrillCfg:y 1
   860 set :checkOre.1:count :checkOre:count
   861 ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
   862 jump *label370 notEqual :checkOre.1:floor @ore-titanium
 
   871 label *label373
   872 label *label374
   873 label *label375
-    * jump *label378 lessThanEq :checkOre.2:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:by :buildTitaniumDrillCfg:yy
+  874 jump *label378 lessThanEq :checkOre.2:count 0
+  875 set :buildTitaniumDrillCfg:bx 1
+  876 set :buildTitaniumDrillCfg:by 1
   877 set :buildTitaniumDrillCfg:best :checkOre.2:count
   878 jump *label376 lessThan :checkOre.2:count 4
   879 jump *label240 always
 
   885 set :buildTitaniumDrillCfg:xx 1
   886 set :buildTitaniumDrillCfg:yy -1
   887 label *label383
-    * op add :checkOre:x :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
+  888 op add :checkOre:x :buildTitaniumDrillCfg:x 1
   889 set :checkOre:count 0
   890 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
   891 jump *label384 notEqual :checkOre:floor @ore-titanium
 
   893 label *label384
   894 label *label385
   895 label *label386
-    * op add *tmp222 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
+  896 op add *tmp222 :buildTitaniumDrillCfg:y -1
   897 set :checkOre.1:count :checkOre:count
   898 ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
   899 jump *label387 notEqual :checkOre.1:floor @ore-titanium
 
   909 label *label391
   910 label *label392
   911 jump *label395 lessThanEq :checkOre.2:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:by :buildTitaniumDrillCfg:yy
+  912 set :buildTitaniumDrillCfg:bx 1
+  913 set :buildTitaniumDrillCfg:by -1
   914 set :buildTitaniumDrillCfg:best :checkOre.2:count
   915 jump *label393 lessThan :checkOre.2:count 4
   916 jump *label240 always
 
   922 set :buildTitaniumDrillCfg:xx -1
   923 set :buildTitaniumDrillCfg:yy 1
   924 label *label400
-    * op add :checkOre:x :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
+  925 op add :checkOre:x :buildTitaniumDrillCfg:x -1
   926 set :checkOre:count 0
   927 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
   928 jump *label401 notEqual :checkOre:floor @ore-titanium
 
   930 label *label401
   931 label *label402
   932 label *label403
-    * op add *tmp222 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
+  933 op add *tmp222 :buildTitaniumDrillCfg:y 1
   934 set :checkOre.1:count :checkOre:count
   935 ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
   936 jump *label404 notEqual :checkOre.1:floor @ore-titanium
 
   946 label *label408
   947 label *label409
   948 jump *label412 lessThanEq :checkOre.2:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:by :buildTitaniumDrillCfg:yy
+  949 set :buildTitaniumDrillCfg:bx -1
+  950 set :buildTitaniumDrillCfg:by 1
   951 set :buildTitaniumDrillCfg:best :checkOre.2:count
   952 jump *label410 lessThan :checkOre.2:count 4
   953 jump *label240 always
 
   959 set :buildTitaniumDrillCfg:xx -1
   960 set :buildTitaniumDrillCfg:yy -1
   961 label *label417
-    * op add :checkOre:x :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:xx
+  962 op add :checkOre:x :buildTitaniumDrillCfg:x -1
   963 set :checkOre:count 0
   964 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
   965 jump *label418 notEqual :checkOre:floor @ore-titanium
 
   967 label *label418
   968 label *label419
   969 label *label420
-    * op add *tmp222 :buildTitaniumDrillCfg:y :buildTitaniumDrillCfg:yy
+  970 op add *tmp222 :buildTitaniumDrillCfg:y -1
   971 set :checkOre.1:count :checkOre:count
   972 ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
   973 jump *label421 notEqual :checkOre.1:floor @ore-titanium
 
   983 label *label425
   984 label *label426
   985 jump *label429 lessThanEq :checkOre.2:count :buildTitaniumDrillCfg:best
-    * set :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:xx
-    * set :buildTitaniumDrillCfg:by :buildTitaniumDrillCfg:yy
+  986 set :buildTitaniumDrillCfg:bx -1
+  987 set :buildTitaniumDrillCfg:by -1
   988 set :buildTitaniumDrillCfg:best :checkOre.2:count
   989 jump *label427 lessThan :checkOre.2:count 4
   990 jump *label240 always

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-8 instructions):
 
   845 set :buildTitaniumDrillCfg:best 0
   846 set :buildTitaniumDrillCfg:bx 0
   847 set :buildTitaniumDrillCfg:by 0
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy 1
   848 label *label366
   849 op add :checkOre:x :buildTitaniumDrillCfg:x 1
   850 set :checkOre:count 0
 
   880 label *label378
   881 label *label379
   882 label *label380
-    * set :buildTitaniumDrillCfg:xx 1
-    * set :buildTitaniumDrillCfg:yy -1
   883 label *label383
   884 op add :checkOre:x :buildTitaniumDrillCfg:x 1
   885 set :checkOre:count 0
 
   915 label *label395
   916 label *label396
   917 label *label397
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy 1
   918 label *label400
   919 op add :checkOre:x :buildTitaniumDrillCfg:x -1
   920 set :checkOre:count 0
 
   950 label *label412
   951 label *label413
   952 label *label414
-    * set :buildTitaniumDrillCfg:xx -1
-    * set :buildTitaniumDrillCfg:yy -1
   953 label *label417
   954 op add :checkOre:x :buildTitaniumDrillCfg:x -1
   955 set :checkOre:count 0

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
   746 label *label205
   747 set .generator *tmp191
   748 set .powerTarget 400
-    * label *label212
-    * op add :buildBlockFromCfg.3:x .coreX -1
-    * op add :buildBlockFromCfg.3:y .coreY 4
-    * set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.3:x
-    * set :buildBlock:y :buildBlockFromCfg.3:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label216 (h:*label216)
-    * call *label13 *invalid :buildBlock*retval (m:*label216) (h:*label216)
-    * label *label216
-    * jump *label211 always
-    * label *label213
-    * multijump *tmp196 0 0 (m:marker4)
-    * multilabel *label215 (m:marker4)
-    * label *label214
+  749 label *label435
+  750 op add :buildBlockFromCfg.3:x .coreX -1
+  751 op add :buildBlockFromCfg.3:y .coreY 4
+  752 set :buildBlock:block @battery
+  753 set :buildBlock:x :buildBlockFromCfg.3:x
+  754 set :buildBlock:y :buildBlockFromCfg.3:y
+  755 set :buildBlock:copper 5
+  756 set :buildBlock:lead 20
+  757 set :buildBlock:graphite 0
+  758 set :buildBlock:silicon 0
+  759 set :buildBlock:titanium 0
+  760 set :buildBlock:metaglass 0
+  761 set :buildBlock:rotation 0
+  762 set :buildBlock:config null
+  763 setaddr :buildBlock*retaddr *label436 (h:*label436)
+  764 call *label13 *invalid :buildBlock*retval (m:*label436) (h:*label436)
+  765 label *label436
+  766 jump *label211 always
+  767 label *label437
+  768 label *label214
   769 label *label211
   770 label *label218
   771 op add :buildBlockFromCfg.4:x .coreX 1.5

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
  1047 label *label269
  1048 label *label266
  1049 set .unloader1 *tmp252
-    * label *label273
-    * op add :buildBlockFromCfg.6:x .coreX -1
-    * op add :buildBlockFromCfg.6:y .coreY -2
-    * set :buildBlock:block @power-node
-    * set :buildBlock:x :buildBlockFromCfg.6:x
-    * set :buildBlock:y :buildBlockFromCfg.6:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 6
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label277 (h:*label277)
-    * call *label13 *invalid :buildBlock*retval (m:*label277) (h:*label277)
-    * label *label277
-    * jump *label272 always
-    * label *label274
-    * multijump *tmp257 0 0 (m:marker8)
-    * multilabel *label276 (m:marker8)
-    * label *label275
+ 1050 label *label441
+ 1051 op add :buildBlockFromCfg.6:x .coreX -1
+ 1052 op add :buildBlockFromCfg.6:y .coreY -2
+ 1053 set :buildBlock:block @power-node
+ 1054 set :buildBlock:x :buildBlockFromCfg.6:x
+ 1055 set :buildBlock:y :buildBlockFromCfg.6:y
+ 1056 set :buildBlock:copper 2
+ 1057 set :buildBlock:lead 6
+ 1058 set :buildBlock:graphite 0
+ 1059 set :buildBlock:silicon 0
+ 1060 set :buildBlock:titanium 0
+ 1061 set :buildBlock:metaglass 0
+ 1062 set :buildBlock:rotation 0
+ 1063 set :buildBlock:config null
+ 1064 setaddr :buildBlock*retaddr *label442 (h:*label442)
+ 1065 call *label13 *invalid :buildBlock*retval (m:*label442) (h:*label442)
+ 1066 label *label442
+ 1067 jump *label272 always
+ 1068 label *label443
+ 1069 label *label275
  1070 label *label272
  1071 label *label279
  1072 op add :buildBlockFromCfg.7:x .coreX 1

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
  1093 label *label281
  1094 label *label278
  1095 set .processor *tmp260
-    * label *label285
-    * op add :buildBlockFromCfg.8:x .coreX -4
-    * op add :buildBlockFromCfg.8:y .coreY -1
-    * set :buildBlock:block @air-factory
-    * set :buildBlock:x :buildBlockFromCfg.8:x
-    * set :buildBlock:y :buildBlockFromCfg.8:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 70
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 3
-    * set :buildBlock:config @mono
-    * setaddr :buildBlock*retaddr *label289 (h:*label289)
-    * call *label13 *invalid :buildBlock*retval (m:*label289) (h:*label289)
-    * label *label289
-    * jump *label284 always
-    * label *label286
-    * multijump *tmp265 0 0 (m:marker10)
-    * multilabel *label288 (m:marker10)
-    * label *label287
+ 1096 label *label447
+ 1097 op add :buildBlockFromCfg.8:x .coreX -4
+ 1098 op add :buildBlockFromCfg.8:y .coreY -1
+ 1099 set :buildBlock:block @air-factory
+ 1100 set :buildBlock:x :buildBlockFromCfg.8:x
+ 1101 set :buildBlock:y :buildBlockFromCfg.8:y
+ 1102 set :buildBlock:copper 60
+ 1103 set :buildBlock:lead 70
+ 1104 set :buildBlock:graphite 0
+ 1105 set :buildBlock:silicon 0
+ 1106 set :buildBlock:titanium 0
+ 1107 set :buildBlock:metaglass 0
+ 1108 set :buildBlock:rotation 3
+ 1109 set :buildBlock:config @mono
+ 1110 setaddr :buildBlock*retaddr *label448 (h:*label448)
+ 1111 call *label13 *invalid :buildBlock*retval (m:*label448) (h:*label448)
+ 1112 label *label448
+ 1113 jump *label284 always
+ 1114 label *label449
+ 1115 label *label287
  1116 label *label284
  1117 label *label291
  1118 op add :buildBlockFromCfg.9:x .coreX -2

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
  1114 label *label449
  1115 label *label287
  1116 label *label284
-    * label *label291
-    * op add :buildBlockFromCfg.9:x .coreX -2
-    * op add :buildBlockFromCfg.9:y .coreY 1
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.9:x
-    * set :buildBlock:y :buildBlockFromCfg.9:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label295 (h:*label295)
-    * call *label13 *invalid :buildBlock*retval (m:*label295) (h:*label295)
-    * label *label295
-    * jump *label290 always
-    * label *label292
-    * multijump *tmp269 0 0 (m:marker11)
-    * multilabel *label294 (m:marker11)
-    * label *label293
+ 1117 label *label453
+ 1118 op add :buildBlockFromCfg.9:x .coreX -2
+ 1119 op add :buildBlockFromCfg.9:y .coreY 1
+ 1120 set :buildBlock:block @unloader
+ 1121 set :buildBlock:x :buildBlockFromCfg.9:x
+ 1122 set :buildBlock:y :buildBlockFromCfg.9:y
+ 1123 set :buildBlock:copper 0
+ 1124 set :buildBlock:lead 0
+ 1125 set :buildBlock:graphite 0
+ 1126 set :buildBlock:silicon 30
+ 1127 set :buildBlock:titanium 25
+ 1128 set :buildBlock:metaglass 0
+ 1129 set :buildBlock:rotation 0
+ 1130 set :buildBlock:config null
+ 1131 setaddr :buildBlock*retaddr *label454 (h:*label454)
+ 1132 call *label13 *invalid :buildBlock*retval (m:*label454) (h:*label454)
+ 1133 label *label454
+ 1134 jump *label290 always
+ 1135 label *label455
+ 1136 label *label293
  1137 label *label290
  1138 label *label297
  1139 op add :buildBlockFromCfg.10:x .coreX -3

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
  1135 label *label455
  1136 label *label293
  1137 label *label290
-    * label *label297
-    * op add :buildBlockFromCfg.10:x .coreX -3
-    * op add :buildBlockFromCfg.10:y .coreY 1
-    * set :buildBlock:block @sorter
-    * set :buildBlock:x :buildBlockFromCfg.10:x
-    * set :buildBlock:y :buildBlockFromCfg.10:y
-    * set :buildBlock:copper 2
-    * set :buildBlock:lead 2
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config @coal
-    * setaddr :buildBlock*retaddr *label301 (h:*label301)
-    * call *label13 *invalid :buildBlock*retval (m:*label301) (h:*label301)
-    * label *label301
-    * jump *label296 always
-    * label *label298
-    * multijump *tmp273 0 0 (m:marker12)
-    * multilabel *label300 (m:marker12)
-    * label *label299
+ 1138 label *label459
+ 1139 op add :buildBlockFromCfg.10:x .coreX -3
+ 1140 op add :buildBlockFromCfg.10:y .coreY 1
+ 1141 set :buildBlock:block @sorter
+ 1142 set :buildBlock:x :buildBlockFromCfg.10:x
+ 1143 set :buildBlock:y :buildBlockFromCfg.10:y
+ 1144 set :buildBlock:copper 2
+ 1145 set :buildBlock:lead 2
+ 1146 set :buildBlock:graphite 0
+ 1147 set :buildBlock:silicon 0
+ 1148 set :buildBlock:titanium 0
+ 1149 set :buildBlock:metaglass 0
+ 1150 set :buildBlock:rotation 0
+ 1151 set :buildBlock:config @coal
+ 1152 setaddr :buildBlock*retaddr *label460 (h:*label460)
+ 1153 call *label13 *invalid :buildBlock*retval (m:*label460) (h:*label460)
+ 1154 label *label460
+ 1155 jump *label296 always
+ 1156 label *label461
+ 1157 label *label299
  1158 label *label296
  1159 write @mono .processor ".unitToProduce"
  1160 label *label303

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
  1157 label *label299
  1158 label *label296
  1159 write @mono .processor ".unitToProduce"
-    * label *label303
-    * op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.11:x
-    * set :buildBlock:y :buildBlockFromCfg.11:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label307 (h:*label307)
-    * call *label13 *invalid :buildBlock*retval (m:*label307) (h:*label307)
-    * label *label307
-    * jump *label302 always
-    * label *label304
-    * multijump *tmp277 0 0 (m:marker13)
-    * multilabel *label306 (m:marker13)
-    * label *label305
+ 1160 label *label465
+ 1161 op add :buildBlockFromCfg.11:x .coreX 2
+ 1162 op add :buildBlockFromCfg.11:y .coreY 0
+ 1163 set :buildBlock:block @unloader
+ 1164 set :buildBlock:x :buildBlockFromCfg.11:x
+ 1165 set :buildBlock:y :buildBlockFromCfg.11:y
+ 1166 set :buildBlock:copper 0
+ 1167 set :buildBlock:lead 0
+ 1168 set :buildBlock:graphite 0
+ 1169 set :buildBlock:silicon 30
+ 1170 set :buildBlock:titanium 25
+ 1171 set :buildBlock:metaglass 0
+ 1172 set :buildBlock:rotation 0
+ 1173 set :buildBlock:config null
+ 1174 setaddr :buildBlock*retaddr *label466 (h:*label466)
+ 1175 call *label13 *invalid :buildBlock*retval (m:*label466) (h:*label466)
+ 1176 label *label466
+ 1177 jump *label302 always
+ 1178 label *label467
+ 1179 label *label305
  1180 label *label302
  1181 label *label309
  1182 op add :buildBlockFromCfg.12:x .coreX 3.5

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
  1178 label *label467
  1179 label *label305
  1180 label *label302
-    * label *label309
-    * op add :buildBlockFromCfg.12:x .coreX 3.5
-    * op add :buildBlockFromCfg.12:y .coreY 0.5
-    * set :buildBlock:block @kiln
-    * set :buildBlock:x :buildBlockFromCfg.12:x
-    * set :buildBlock:y :buildBlockFromCfg.12:y
-    * set :buildBlock:copper 60
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label313 (h:*label313)
-    * call *label13 *invalid :buildBlock*retval (m:*label313) (h:*label313)
-    * label *label313
-    * jump *label308 always
-    * label *label310
-    * multijump *tmp281 0 0 (m:marker14)
-    * multilabel *label312 (m:marker14)
-    * label *label311
+ 1181 label *label471
+ 1182 op add :buildBlockFromCfg.12:x .coreX 3.5
+ 1183 op add :buildBlockFromCfg.12:y .coreY 0.5
+ 1184 set :buildBlock:block @kiln
+ 1185 set :buildBlock:x :buildBlockFromCfg.12:x
+ 1186 set :buildBlock:y :buildBlockFromCfg.12:y
+ 1187 set :buildBlock:copper 60
+ 1188 set :buildBlock:lead 30
+ 1189 set :buildBlock:graphite 30
+ 1190 set :buildBlock:silicon 0
+ 1191 set :buildBlock:titanium 0
+ 1192 set :buildBlock:metaglass 0
+ 1193 set :buildBlock:rotation 0
+ 1194 set :buildBlock:config null
+ 1195 setaddr :buildBlock*retaddr *label472 (h:*label472)
+ 1196 call *label13 *invalid :buildBlock*retval (m:*label472) (h:*label472)
+ 1197 label *label472
+ 1198 jump *label308 always
+ 1199 label *label473
+ 1200 label *label311
  1201 label *label308
  1202 label *label315
  1203 op add :buildBlockFromCfg.13:x .coreX 2

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
  1199 label *label473
  1200 label *label311
  1201 label *label308
-    * label *label315
-    * op add :buildBlockFromCfg.13:x .coreX 2
-    * op add :buildBlockFromCfg.13:y .coreY 1
-    * set :buildBlock:block @junction
-    * set :buildBlock:x :buildBlockFromCfg.13:x
-    * set :buildBlock:y :buildBlockFromCfg.13:y
-    * set :buildBlock:copper 3
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label319 (h:*label319)
-    * call *label13 *invalid :buildBlock*retval (m:*label319) (h:*label319)
-    * label *label319
-    * jump *label314 always
-    * label *label316
-    * multijump *tmp285 0 0 (m:marker15)
-    * multilabel *label318 (m:marker15)
-    * label *label317
+ 1202 label *label477
+ 1203 op add :buildBlockFromCfg.13:x .coreX 2
+ 1204 op add :buildBlockFromCfg.13:y .coreY 1
+ 1205 set :buildBlock:block @junction
+ 1206 set :buildBlock:x :buildBlockFromCfg.13:x
+ 1207 set :buildBlock:y :buildBlockFromCfg.13:y
+ 1208 set :buildBlock:copper 3
+ 1209 set :buildBlock:lead 0
+ 1210 set :buildBlock:graphite 0
+ 1211 set :buildBlock:silicon 0
+ 1212 set :buildBlock:titanium 0
+ 1213 set :buildBlock:metaglass 0
+ 1214 set :buildBlock:rotation 0
+ 1215 set :buildBlock:config null
+ 1216 setaddr :buildBlock*retaddr *label478 (h:*label478)
+ 1217 call *label13 *invalid :buildBlock*retval (m:*label478) (h:*label478)
+ 1218 label *label478
+ 1219 jump *label314 always
+ 1220 label *label479
+ 1221 label *label317
  1222 label *label314
  1223 label *label321
  1224 op add :buildBlockFromCfg.14:x .coreX -3.5

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
  1220 label *label479
  1221 label *label317
  1222 label *label314
-    * label *label321
-    * op add :buildBlockFromCfg.14:x .coreX -3.5
-    * op add :buildBlockFromCfg.14:y .coreY 3.5
-    * set :buildBlock:block @water-extractor
-    * set :buildBlock:x :buildBlockFromCfg.14:x
-    * set :buildBlock:y :buildBlockFromCfg.14:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 30
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 30
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label325 (h:*label325)
-    * call *label13 *invalid :buildBlock*retval (m:*label325) (h:*label325)
-    * label *label325
-    * jump *label320 always
-    * label *label322
-    * multijump *tmp289 0 0 (m:marker16)
-    * multilabel *label324 (m:marker16)
-    * label *label323
+ 1223 label *label483
+ 1224 op add :buildBlockFromCfg.14:x .coreX -3.5
+ 1225 op add :buildBlockFromCfg.14:y .coreY 3.5
+ 1226 set :buildBlock:block @water-extractor
+ 1227 set :buildBlock:x :buildBlockFromCfg.14:x
+ 1228 set :buildBlock:y :buildBlockFromCfg.14:y
+ 1229 set :buildBlock:copper 30
+ 1230 set :buildBlock:lead 30
+ 1231 set :buildBlock:graphite 30
+ 1232 set :buildBlock:silicon 0
+ 1233 set :buildBlock:titanium 0
+ 1234 set :buildBlock:metaglass 30
+ 1235 set :buildBlock:rotation 0
+ 1236 set :buildBlock:config null
+ 1237 setaddr :buildBlock*retaddr *label484 (h:*label484)
+ 1238 call *label13 *invalid :buildBlock*retval (m:*label484) (h:*label484)
+ 1239 label *label484
+ 1240 jump *label320 always
+ 1241 label *label485
+ 1242 label *label323
  1243 label *label320
  1244 label *label327
  1245 op add :buildBlockFromCfg.15:x .coreX -4.5

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
  1241 label *label485
  1242 label *label323
  1243 label *label320
-    * label *label327
-    * op add :buildBlockFromCfg.15:x .coreX -4.5
-    * op add :buildBlockFromCfg.15:y .coreY 1.5
-    * set :buildBlock:block @steam-generator
-    * set :buildBlock:x :buildBlockFromCfg.15:x
-    * set :buildBlock:y :buildBlockFromCfg.15:y
-    * set :buildBlock:copper 35
-    * set :buildBlock:lead 40
-    * set :buildBlock:graphite 25
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label331 (h:*label331)
-    * call *label13 *invalid :buildBlock*retval (m:*label331) (h:*label331)
-    * label *label331
-    * jump *label326 always
-    * label *label328
-    * multijump *tmp293 0 0 (m:marker17)
-    * multilabel *label330 (m:marker17)
-    * label *label329
+ 1244 label *label489
+ 1245 op add :buildBlockFromCfg.15:x .coreX -4.5
+ 1246 op add :buildBlockFromCfg.15:y .coreY 1.5
+ 1247 set :buildBlock:block @steam-generator
+ 1248 set :buildBlock:x :buildBlockFromCfg.15:x
+ 1249 set :buildBlock:y :buildBlockFromCfg.15:y
+ 1250 set :buildBlock:copper 35
+ 1251 set :buildBlock:lead 40
+ 1252 set :buildBlock:graphite 25
+ 1253 set :buildBlock:silicon 30
+ 1254 set :buildBlock:titanium 0
+ 1255 set :buildBlock:metaglass 0
+ 1256 set :buildBlock:rotation 0
+ 1257 set :buildBlock:config null
+ 1258 setaddr :buildBlock*retaddr *label490 (h:*label490)
+ 1259 call *label13 *invalid :buildBlock*retval (m:*label490) (h:*label490)
+ 1260 label *label490
+ 1261 jump *label326 always
+ 1262 label *label491
+ 1263 label *label329
  1264 label *label326
  1265 label *label332
  1266 setaddr :supplyBlocks*retaddr *label335 (h:*label335)

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
   670 label *label191
   671 jump *label190 equal .core null
   672 label *label192
-    * label *label194
-    * op add :buildBlockFromCfg:x .coreX -1.5
-    * op add :buildBlockFromCfg:y .coreY 2.5
-    * set :buildBlock:block @graphite-press
-    * set :buildBlock:x :buildBlockFromCfg:x
-    * set :buildBlock:y :buildBlockFromCfg:y
-    * set :buildBlock:copper 75
-    * set :buildBlock:lead 30
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label198 (h:*label198)
-    * call *label13 *invalid :buildBlock*retval (m:*label198) (h:*label198)
-    * label *label198
-    * set *tmp183 :buildBlock*retval
-    * jump *label193 always
-    * label *label195
-    * multijump *tmp184 0 0 (m:marker1)
-    * multilabel *label197 (m:marker1)
-    * label *label196
+  673 label *label495
+  674 op add :buildBlockFromCfg:x .coreX -1.5
+  675 op add :buildBlockFromCfg:y .coreY 2.5
+  676 set :buildBlock:block @graphite-press
+  677 set :buildBlock:x :buildBlockFromCfg:x
+  678 set :buildBlock:y :buildBlockFromCfg:y
+  679 set :buildBlock:copper 75
+  680 set :buildBlock:lead 30
+  681 set :buildBlock:graphite 0
+  682 set :buildBlock:silicon 0
+  683 set :buildBlock:titanium 0
+  684 set :buildBlock:metaglass 0
+  685 set :buildBlock:rotation 0
+  686 set :buildBlock:config null
+  687 setaddr :buildBlock*retaddr *label496 (h:*label496)
+  688 call *label13 *invalid :buildBlock*retval (m:*label496) (h:*label496)
+  689 label *label496
+  690 set *tmp183 :buildBlock*retval
+  691 jump *label193 always
+  692 label *label497
+  693 label *label196
   694 label *label193
   695 set .press *tmp183
   696 label *label200

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   692 label *label497
   693 label *label196
   694 label *label193
-    * set .press *tmp183
+  695 set .press :buildBlock*retval
   696 label *label200
   697 op add :buildBlockFromCfg.1:x .coreX 0
   698 op add :buildBlockFromCfg.1:y .coreY 4

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   687 setaddr :buildBlock*retaddr *label496 (h:*label496)
   688 call *label13 *invalid :buildBlock*retval (m:*label496) (h:*label496)
   689 label *label496
-    * set *tmp183 :buildBlock*retval
   690 jump *label193 always
   691 label *label497
   692 label *label196

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
   692 label *label196
   693 label *label193
   694 set .press :buildBlock*retval
-    * label *label200
-    * op add :buildBlockFromCfg.1:x .coreX 0
-    * op add :buildBlockFromCfg.1:y .coreY 4
-    * set :buildBlock:block @battery
-    * set :buildBlock:x :buildBlockFromCfg.1:x
-    * set :buildBlock:y :buildBlockFromCfg.1:y
-    * set :buildBlock:copper 5
-    * set :buildBlock:lead 20
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label204 (h:*label204)
-    * call *label13 *invalid :buildBlock*retval (m:*label204) (h:*label204)
-    * label *label204
-    * set *tmp187 :buildBlock*retval
-    * jump *label199 always
-    * label *label201
-    * multijump *tmp188 0 0 (m:marker2)
-    * multilabel *label203 (m:marker2)
-    * label *label202
+  695 label *label501
+  696 op add :buildBlockFromCfg.1:x .coreX 0
+  697 op add :buildBlockFromCfg.1:y .coreY 4
+  698 set :buildBlock:block @battery
+  699 set :buildBlock:x :buildBlockFromCfg.1:x
+  700 set :buildBlock:y :buildBlockFromCfg.1:y
+  701 set :buildBlock:copper 5
+  702 set :buildBlock:lead 20
+  703 set :buildBlock:graphite 0
+  704 set :buildBlock:silicon 0
+  705 set :buildBlock:titanium 0
+  706 set :buildBlock:metaglass 0
+  707 set :buildBlock:rotation 0
+  708 set :buildBlock:config null
+  709 setaddr :buildBlock*retaddr *label502 (h:*label502)
+  710 call *label13 *invalid :buildBlock*retval (m:*label502) (h:*label502)
+  711 label *label502
+  712 set *tmp187 :buildBlock*retval
+  713 jump *label199 always
+  714 label *label503
+  715 label *label202
   716 label *label199
   717 set .battery *tmp187
   718 label *label206

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   714 label *label503
   715 label *label202
   716 label *label199
-    * set .battery *tmp187
+  717 set .battery :buildBlock*retval
   718 label *label206
   719 op add :buildBlockFromCfg.2:x .coreX 0
   720 op add :buildBlockFromCfg.2:y .coreY 3

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   709 setaddr :buildBlock*retaddr *label502 (h:*label502)
   710 call *label13 *invalid :buildBlock*retval (m:*label502) (h:*label502)
   711 label *label502
-    * set *tmp187 :buildBlock*retval
   712 jump *label199 always
   713 label *label503
   714 label *label202

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
   714 label *label202
   715 label *label199
   716 set .battery :buildBlock*retval
-    * label *label206
-    * op add :buildBlockFromCfg.2:x .coreX 0
-    * op add :buildBlockFromCfg.2:y .coreY 3
-    * set :buildBlock:block @combustion-generator
-    * set :buildBlock:x :buildBlockFromCfg.2:x
-    * set :buildBlock:y :buildBlockFromCfg.2:y
-    * set :buildBlock:copper 25
-    * set :buildBlock:lead 15
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label210 (h:*label210)
-    * call *label13 *invalid :buildBlock*retval (m:*label210) (h:*label210)
-    * label *label210
-    * set *tmp191 :buildBlock*retval
-    * jump *label205 always
-    * label *label207
-    * multijump *tmp192 0 0 (m:marker3)
-    * multilabel *label209 (m:marker3)
-    * label *label208
+  717 label *label507
+  718 op add :buildBlockFromCfg.2:x .coreX 0
+  719 op add :buildBlockFromCfg.2:y .coreY 3
+  720 set :buildBlock:block @combustion-generator
+  721 set :buildBlock:x :buildBlockFromCfg.2:x
+  722 set :buildBlock:y :buildBlockFromCfg.2:y
+  723 set :buildBlock:copper 25
+  724 set :buildBlock:lead 15
+  725 set :buildBlock:graphite 0
+  726 set :buildBlock:silicon 0
+  727 set :buildBlock:titanium 0
+  728 set :buildBlock:metaglass 0
+  729 set :buildBlock:rotation 0
+  730 set :buildBlock:config null
+  731 setaddr :buildBlock*retaddr *label508 (h:*label508)
+  732 call *label13 *invalid :buildBlock*retval (m:*label508) (h:*label508)
+  733 label *label508
+  734 set *tmp191 :buildBlock*retval
+  735 jump *label205 always
+  736 label *label509
+  737 label *label208
   738 label *label205
   739 set .generator *tmp191
   740 set .powerTarget 400

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   736 label *label509
   737 label *label208
   738 label *label205
-    * set .generator *tmp191
+  739 set .generator :buildBlock*retval
   740 set .powerTarget 400
   741 label *label435
   742 op add :buildBlockFromCfg.3:x .coreX -1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   731 setaddr :buildBlock*retaddr *label508 (h:*label508)
   732 call *label13 *invalid :buildBlock*retval (m:*label508) (h:*label508)
   733 label *label508
-    * set *tmp191 :buildBlock*retval
   734 jump *label205 always
   735 label *label509
   736 label *label208

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
   758 label *label437
   759 label *label214
   760 label *label211
-    * label *label218
-    * op add :buildBlockFromCfg.4:x .coreX 1.5
-    * op add :buildBlockFromCfg.4:y .coreY 2.5
-    * set :buildBlock:block @silicon-smelter
-    * set :buildBlock:x :buildBlockFromCfg.4:x
-    * set :buildBlock:y :buildBlockFromCfg.4:y
-    * set :buildBlock:copper 30
-    * set :buildBlock:lead 25
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 0
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label222 (h:*label222)
-    * call *label13 *invalid :buildBlock*retval (m:*label222) (h:*label222)
-    * label *label222
-    * set *tmp199 :buildBlock*retval
-    * jump *label217 always
-    * label *label219
-    * multijump *tmp200 0 0 (m:marker5)
-    * multilabel *label221 (m:marker5)
-    * label *label220
+  761 label *label513
+  762 op add :buildBlockFromCfg.4:x .coreX 1.5
+  763 op add :buildBlockFromCfg.4:y .coreY 2.5
+  764 set :buildBlock:block @silicon-smelter
+  765 set :buildBlock:x :buildBlockFromCfg.4:x
+  766 set :buildBlock:y :buildBlockFromCfg.4:y
+  767 set :buildBlock:copper 30
+  768 set :buildBlock:lead 25
+  769 set :buildBlock:graphite 0
+  770 set :buildBlock:silicon 0
+  771 set :buildBlock:titanium 0
+  772 set :buildBlock:metaglass 0
+  773 set :buildBlock:rotation 0
+  774 set :buildBlock:config null
+  775 setaddr :buildBlock*retaddr *label514 (h:*label514)
+  776 call *label13 *invalid :buildBlock*retval (m:*label514) (h:*label514)
+  777 label *label514
+  778 set *tmp199 :buildBlock*retval
+  779 jump *label217 always
+  780 label *label515
+  781 label *label220
   782 label *label217
   783 set .smelter *tmp199
   784 set :buildTitaniumDrillCfg:attempts 0

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
   780 label *label515
   781 label *label220
   782 label *label217
-    * set .smelter *tmp199
+  783 set .smelter :buildBlock*retval
   784 set :buildTitaniumDrillCfg:attempts 0
   785 label *label225
   786 set :meetTarget:block @pneumatic-drill

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
   775 setaddr :buildBlock*retaddr *label514 (h:*label514)
   776 call *label13 *invalid :buildBlock*retval (m:*label514) (h:*label514)
   777 label *label514
-    * set *tmp199 :buildBlock*retval
   778 jump *label217 always
   779 label *label515
   780 label *label220

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
  1010 label *label224
  1011 label *label223
  1012 set .titanium_drill *tmp204
-    * label *label267
-    * op add :buildBlockFromCfg.5:x .coreX 0
-    * op add :buildBlockFromCfg.5:y .coreY 2
-    * set :buildBlock:block @unloader
-    * set :buildBlock:x :buildBlockFromCfg.5:x
-    * set :buildBlock:y :buildBlockFromCfg.5:y
-    * set :buildBlock:copper 0
-    * set :buildBlock:lead 0
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 30
-    * set :buildBlock:titanium 25
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config null
-    * setaddr :buildBlock*retaddr *label271 (h:*label271)
-    * call *label13 *invalid :buildBlock*retval (m:*label271) (h:*label271)
-    * label *label271
-    * set *tmp252 :buildBlock*retval
-    * jump *label266 always
-    * label *label268
-    * multijump *tmp253 0 0 (m:marker7)
-    * multilabel *label270 (m:marker7)
-    * label *label269
+ 1013 label *label519
+ 1014 op add :buildBlockFromCfg.5:x .coreX 0
+ 1015 op add :buildBlockFromCfg.5:y .coreY 2
+ 1016 set :buildBlock:block @unloader
+ 1017 set :buildBlock:x :buildBlockFromCfg.5:x
+ 1018 set :buildBlock:y :buildBlockFromCfg.5:y
+ 1019 set :buildBlock:copper 0
+ 1020 set :buildBlock:lead 0
+ 1021 set :buildBlock:graphite 0
+ 1022 set :buildBlock:silicon 30
+ 1023 set :buildBlock:titanium 25
+ 1024 set :buildBlock:metaglass 0
+ 1025 set :buildBlock:rotation 0
+ 1026 set :buildBlock:config null
+ 1027 setaddr :buildBlock*retaddr *label520 (h:*label520)
+ 1028 call *label13 *invalid :buildBlock*retval (m:*label520) (h:*label520)
+ 1029 label *label520
+ 1030 set *tmp252 :buildBlock*retval
+ 1031 jump *label266 always
+ 1032 label *label521
+ 1033 label *label269
  1034 label *label266
  1035 set .unloader1 *tmp252
  1036 label *label441

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1032 label *label521
  1033 label *label269
  1034 label *label266
-    * set .unloader1 *tmp252
+ 1035 set .unloader1 :buildBlock*retval
  1036 label *label441
  1037 op add :buildBlockFromCfg.6:x .coreX -1
  1038 op add :buildBlockFromCfg.6:y .coreY -2

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
  1027 setaddr :buildBlock*retaddr *label520 (h:*label520)
  1028 call *label13 *invalid :buildBlock*retval (m:*label520) (h:*label520)
  1029 label *label520
-    * set *tmp252 :buildBlock*retval
  1030 jump *label266 always
  1031 label *label521
  1032 label *label269

Modifications by Unroll iteration loop at CoreBuilder.mnd:374:5 (-1 instructions):
 
  1053 label *label443
  1054 label *label275
  1055 label *label272
-    * label *label279
-    * op add :buildBlockFromCfg.7:x .coreX 1
-    * op add :buildBlockFromCfg.7:y .coreY 4
-    * set :buildBlock:block @micro-processor
-    * set :buildBlock:x :buildBlockFromCfg.7:x
-    * set :buildBlock:y :buildBlockFromCfg.7:y
-    * set :buildBlock:copper 90
-    * set :buildBlock:lead 50
-    * set :buildBlock:graphite 0
-    * set :buildBlock:silicon 50
-    * set :buildBlock:titanium 0
-    * set :buildBlock:metaglass 0
-    * set :buildBlock:rotation 0
-    * set :buildBlock:config processor1
-    * setaddr :buildBlock*retaddr *label283 (h:*label283)
-    * call *label13 *invalid :buildBlock*retval (m:*label283) (h:*label283)
-    * label *label283
-    * set *tmp260 :buildBlock*retval
-    * jump *label278 always
-    * label *label280
-    * multijump *tmp261 0 0 (m:marker9)
-    * multilabel *label282 (m:marker9)
-    * label *label281
+ 1056 label *label525
+ 1057 op add :buildBlockFromCfg.7:x .coreX 1
+ 1058 op add :buildBlockFromCfg.7:y .coreY 4
+ 1059 set :buildBlock:block @micro-processor
+ 1060 set :buildBlock:x :buildBlockFromCfg.7:x
+ 1061 set :buildBlock:y :buildBlockFromCfg.7:y
+ 1062 set :buildBlock:copper 90
+ 1063 set :buildBlock:lead 50
+ 1064 set :buildBlock:graphite 0
+ 1065 set :buildBlock:silicon 50
+ 1066 set :buildBlock:titanium 0
+ 1067 set :buildBlock:metaglass 0
+ 1068 set :buildBlock:rotation 0
+ 1069 set :buildBlock:config processor1
+ 1070 setaddr :buildBlock*retaddr *label526 (h:*label526)
+ 1071 call *label13 *invalid :buildBlock*retval (m:*label526) (h:*label526)
+ 1072 label *label526
+ 1073 set *tmp260 :buildBlock*retval
+ 1074 jump *label278 always
+ 1075 label *label527
+ 1076 label *label281
  1077 label *label278
  1078 set .processor *tmp260
  1079 label *label447

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 1:
 
  1075 label *label527
  1076 label *label281
  1077 label *label278
-    * set .processor *tmp260
+ 1078 set .processor :buildBlock*retval
  1079 label *label447
  1080 op add :buildBlockFromCfg.8:x .coreX -4
  1081 op add :buildBlockFromCfg.8:y .coreY -1

Modifications by Iterated phase, Data Flow Optimization, pass 1, iteration 2 (-1 instructions):
 
  1070 setaddr :buildBlock*retaddr *label526 (h:*label526)
  1071 call *label13 *invalid :buildBlock*retval (m:*label526) (h:*label526)
  1072 label *label526
-    * set *tmp260 :buildBlock*retval
  1073 jump *label278 always
  1074 label *label527
  1075 label *label281

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 1 (-23 instructions):
 
    99 op land *tmp20 :depositItems:fromMining *tmp19
   100 jump *label38 equal *tmp20 false
   101 set *tmp21 7
-    * jump *label38 always
   102 label *label38
   103 set :moveToBlock:block :depositItems:block
   104 set :moveToBlock:radius *tmp21
 
   373 set *tmp108 @sand
   374 jump *label124 greaterThanEq :supplyBlocks:coal :supplyBlocks:sand
   375 set *tmp108 @coal
-    * jump *label124 always
   376 label *label124
   377 set .status2 "Mining "
   378 set .item2 *tmp108
 
   434 set *tmp123 @sand
   435 jump *label146 greaterThan :supplyBlocks:coal.1 :supplyBlocks:sand.1
   436 set *tmp123 @coal
-    * jump *label146 always
   437 label *label146
   438 set .status2 "Mining "
   439 set .item2 *tmp123
 
   513 op add *tmp134 .titaniumTarget 10
   514 jump *label164 greaterThanEq *tmp133 *tmp134
   515 set .titaniumTrigger 7
-    * jump *label164 always
   516 label *label164
   517 label *label165
   518 sensor *tmp137 .core @copper
 
   612 jump *label179 notEqual :buildBlockAt:type :buildBlockAt:block
   613 label *label181
   614 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label169 always
   615 label *label169
   616 return :buildBlockAt*retaddr
   617 end
 
   636 call *label12 *invalid :buildBlockAt*retval (m:*label186) (h:*label186)
   637 label *label186
   638 set :buildBlock*retval :buildBlockAt*retval
-    * jump *label184 always
   639 label *label184
   640 return :buildBlock*retaddr
   641 end
 
   681 setaddr :buildBlock*retaddr *label496 (h:*label496)
   682 call *label13 *invalid :buildBlock*retval (m:*label496) (h:*label496)
   683 label *label496
-    * jump *label193 always
   684 label *label497
   685 label *label196
   686 label *label193
 
   702 setaddr :buildBlock*retaddr *label502 (h:*label502)
   703 call *label13 *invalid :buildBlock*retval (m:*label502) (h:*label502)
   704 label *label502
-    * jump *label199 always
   705 label *label503
   706 label *label202
   707 label *label199
 
   723 setaddr :buildBlock*retaddr *label508 (h:*label508)
   724 call *label13 *invalid :buildBlock*retval (m:*label508) (h:*label508)
   725 label *label508
-    * jump *label205 always
   726 label *label509
   727 label *label208
   728 label *label205
 
   745 setaddr :buildBlock*retaddr *label436 (h:*label436)
   746 call *label13 *invalid :buildBlock*retval (m:*label436) (h:*label436)
   747 label *label436
-    * jump *label211 always
   748 label *label437
   749 label *label214
   750 label *label211
 
   765 setaddr :buildBlock*retaddr *label514 (h:*label514)
   766 call *label13 *invalid :buildBlock*retval (m:*label514) (h:*label514)
   767 label *label514
-    * jump *label217 always
   768 label *label515
   769 label *label220
   770 label *label217
 
   954 set :buildTitaniumDrillCfg:by -1
   955 set :buildTitaniumDrillCfg:best :checkOre.2:count
   956 jump *label427 lessThan :checkOre.2:count 4
-    * jump *label240 always
   957 label *label427
   958 label *label428
   959 label *label429
 
  1015 setaddr :buildBlock*retaddr *label520 (h:*label520)
  1016 call *label13 *invalid :buildBlock*retval (m:*label520) (h:*label520)
  1017 label *label520
-    * jump *label266 always
  1018 label *label521
  1019 label *label269
  1020 label *label266
 
  1036 setaddr :buildBlock*retaddr *label442 (h:*label442)
  1037 call *label13 *invalid :buildBlock*retval (m:*label442) (h:*label442)
  1038 label *label442
-    * jump *label272 always
  1039 label *label443
  1040 label *label275
  1041 label *label272
 
  1056 setaddr :buildBlock*retaddr *label526 (h:*label526)
  1057 call *label13 *invalid :buildBlock*retval (m:*label526) (h:*label526)
  1058 label *label526
-    * jump *label278 always
  1059 label *label527
  1060 label *label281
  1061 label *label278
 
  1077 setaddr :buildBlock*retaddr *label448 (h:*label448)
  1078 call *label13 *invalid :buildBlock*retval (m:*label448) (h:*label448)
  1079 label *label448
-    * jump *label284 always
  1080 label *label449
  1081 label *label287
  1082 label *label284
 
  1097 setaddr :buildBlock*retaddr *label454 (h:*label454)
  1098 call *label13 *invalid :buildBlock*retval (m:*label454) (h:*label454)
  1099 label *label454
-    * jump *label290 always
  1100 label *label455
  1101 label *label293
  1102 label *label290
 
  1117 setaddr :buildBlock*retaddr *label460 (h:*label460)
  1118 call *label13 *invalid :buildBlock*retval (m:*label460) (h:*label460)
  1119 label *label460
-    * jump *label296 always
  1120 label *label461
  1121 label *label299
  1122 label *label296
 
  1138 setaddr :buildBlock*retaddr *label466 (h:*label466)
  1139 call *label13 *invalid :buildBlock*retval (m:*label466) (h:*label466)
  1140 label *label466
-    * jump *label302 always
  1141 label *label467
  1142 label *label305
  1143 label *label302
 
  1158 setaddr :buildBlock*retaddr *label472 (h:*label472)
  1159 call *label13 *invalid :buildBlock*retval (m:*label472) (h:*label472)
  1160 label *label472
-    * jump *label308 always
  1161 label *label473
  1162 label *label311
  1163 label *label308
 
  1178 setaddr :buildBlock*retaddr *label478 (h:*label478)
  1179 call *label13 *invalid :buildBlock*retval (m:*label478) (h:*label478)
  1180 label *label478
-    * jump *label314 always
  1181 label *label479
  1182 label *label317
  1183 label *label314
 
  1198 setaddr :buildBlock*retaddr *label484 (h:*label484)
  1199 call *label13 *invalid :buildBlock*retval (m:*label484) (h:*label484)
  1200 label *label484
-    * jump *label320 always
  1201 label *label485
  1202 label *label323
  1203 label *label320
 
  1218 setaddr :buildBlock*retaddr *label490 (h:*label490)
  1219 call *label13 *invalid :buildBlock*retval (m:*label490) (h:*label490)
  1220 label *label490
-    * jump *label326 always
  1221 label *label491
  1222 label *label329
  1223 label *label326

Modifications by Iterated phase, Single Step Elimination, pass 2, iteration 2 (-1 instructions):
 
   953 set :buildTitaniumDrillCfg:bx -1
   954 set :buildTitaniumDrillCfg:by -1
   955 set :buildTitaniumDrillCfg:best :checkOre.2:count
-    * jump *label427 lessThan :checkOre.2:count 4
   956 label *label427
   957 label *label428
   958 label *label429

Modifications by Iterated phase, Expression Optimization, pass 2, iteration 1:
 
   472 set .metaglassTarget :meetTarget:metaglass
   473 label *label337
   474 op sign *tmp125 :meetTarget:copper
-    * op add :meetTarget:count 0 *tmp125
+  475 set :meetTarget:count *tmp125
   476 label *label338
   477 label *label341
   478 op sign *tmp125 :meetTarget:lead
 
   686 label *label193
   687 set .press :buildBlock*retval
   688 label *label501
-    * op add :buildBlockFromCfg.1:x .coreX 0
+  689 set :buildBlockFromCfg.1:x .coreX
   690 op add :buildBlockFromCfg.1:y .coreY 4
   691 set :buildBlock:block @battery
   692 set :buildBlock:x :buildBlockFromCfg.1:x
 
   707 label *label199
   708 set .battery :buildBlock*retval
   709 label *label507
-    * op add :buildBlockFromCfg.2:x .coreX 0
+  710 set :buildBlockFromCfg.2:x .coreX
   711 op add :buildBlockFromCfg.2:y .coreY 3
   712 set :buildBlock:block @combustion-generator
   713 set :buildBlock:x :buildBlockFromCfg.2:x
 
   825 set :checkOre:count 0
   826 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
   827 jump *label367 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  828 set :checkOre:count 1
   829 label *label367
   830 label *label368
   831 label *label369
 
   860 set :checkOre:count 0
   861 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
   862 jump *label384 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  863 set :checkOre:count 1
   864 label *label384
   865 label *label385
   866 label *label386
 
   895 set :checkOre:count 0
   896 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
   897 jump *label401 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  898 set :checkOre:count 1
   899 label *label401
   900 label *label402
   901 label *label403
 
   930 set :checkOre:count 0
   931 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
   932 jump *label418 notEqual :checkOre:floor @ore-titanium
-    * op add :checkOre:count 0 1
+  933 set :checkOre:count 1
   934 label *label418
   935 label *label419
   936 label *label420
 
   998 label *label223
   999 set .titanium_drill *tmp204
  1000 label *label519
-    * op add :buildBlockFromCfg.5:x .coreX 0
+ 1001 set :buildBlockFromCfg.5:x .coreX
  1002 op add :buildBlockFromCfg.5:y .coreY 2
  1003 set :buildBlock:block @unloader
  1004 set :buildBlock:x :buildBlockFromCfg.5:x
 
  1122 write @mono .processor ".unitToProduce"
  1123 label *label465
  1124 op add :buildBlockFromCfg.11:x .coreX 2
-    * op add :buildBlockFromCfg.11:y .coreY 0
+ 1125 set :buildBlockFromCfg.11:y .coreY
  1126 set :buildBlock:block @unloader
  1127 set :buildBlock:x :buildBlockFromCfg.11:x
  1128 set :buildBlock:y :buildBlockFromCfg.11:y

Modifications by Iterated phase, Data Flow Optimization, pass 2, iteration 1 (-1 instructions):
 
   471 set .titaniumTarget :meetTarget:titanium
   472 set .metaglassTarget :meetTarget:metaglass
   473 label *label337
-    * op sign *tmp125 :meetTarget:copper
-    * set :meetTarget:count *tmp125
+  474 op sign :meetTarget:count :meetTarget:copper
   475 label *label338
   476 label *label341
   477 op sign *tmp125 :meetTarget:lead

Modifications by Jumps phase, Jump Normalization, pass 4, iteration 1:
 
    30 end
    31 label *label1
    32 set .status3 "Moving..."
-    * label *label18
    33 op sub *tmp6 :moveTo:radius 0.5
-    * label *label19
    34 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp4
    35 jump *label21 notEqual *tmp4 false
    36 label *label362
    37 ucontrol approach :moveTo:x :moveTo:y *tmp6
-    * label *label20
    38 ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp4
    39 jump *label362 equal *tmp4 false
    40 label *label21
-    * label *label17
    41 return :moveTo*retaddr
    42 end
    43 label *label2
 
    47 setaddr :moveTo*retaddr *label23 (h:*label23)
    48 call *label1 *invalid :moveTo*retval (m:*label23) (h:*label23)
    49 label *label23
-    * label *label22
    50 return :moveTo.1*retaddr
    51 end
    52 label *label3
 
    54 jump *label25 equal *tmp9 null
    55 ucontrol itemDrop @air 1000
    56 label *label25
-    * label *label26
    57 set :moveTo.1:x :moveToEmpty:x
    58 set :moveTo.1:y :moveToEmpty:y
    59 setaddr :moveTo.1*retaddr *label27 (h:*label27)
    60 call *label2 *invalid :moveTo.1*retval (m:*label27) (h:*label27)
    61 label *label27
-    * label *label28
    62 sensor *tmp12 @unit @firstItem
    63 jump *label30 equal *tmp12 null
    64 label *label363
    65 ucontrol itemDrop @air 1000
-    * label *label29
    66 sensor *tmp12 @unit @firstItem
    67 jump *label363 notEqual *tmp12 null
    68 label *label30
-    * label *label24
    69 return :moveToEmpty*retaddr
    70 end
    71 label *label4
 
    77 setaddr :moveTo*retaddr *label32 (h:*label32)
    78 call *label1 *invalid :moveTo*retval (m:*label32) (h:*label32)
    79 label *label32
-    * label *label31
    80 return :moveToBlock*retaddr
    81 end
    82 label *label5
    83 set .status3 "Depositing..."
-    * label *label34
    84 sensor *tmp16 @unit @firstItem
    85 jump *label35 notEqual *tmp16 :depositItems:item
    86 set *tmp21 5
 
   101 jump *label43 lessThan *tmp23 :depositItems:cap
   102 jump *label42 always
   103 label *label43
-    * label *label44
-    * label *label41
   104 sensor *tmp26 @unit @firstItem
   105 jump *label40 notEqual *tmp26 null
   106 label *label42
   107 jump *label36 always
   108 label *label35
-    * label *label45
   109 sensor *tmp28 @unit @firstItem
   110 jump *label47 equal *tmp28 null
   111 label *label364
   112 ucontrol itemDrop @air 1000
-    * label *label46
   113 sensor *tmp28 @unit @firstItem
   114 jump *label364 notEqual *tmp28 null
   115 label *label47
   116 label *label36
   117 set .transportTarget 0
-    * label *label33
   118 return :depositItems*retaddr
   119 end
   120 label *label6
 
   125 print :locateOre:ore
   126 printflush message1
   127 stop
-    * label *label51
   128 label *label49
-    * label *label50
-    * label *label48
   129 return :locateOre*retaddr
   130 end
   131 label *label7
 
   143 call *label3 *invalid :moveToEmpty*retval (m:*label54) (h:*label54)
   144 label *label54
   145 set .status3 "Mining..."
-    * label *label55
   146 label *label56
   147 sensor :mineOre:item @unit @firstItem
   148 op notEqual *tmp35 :mineOre:item null
 
   151 jump *label59 equal *tmp37 false
   152 jump *label58 always
   153 label *label59
-    * label *label60
   154 ucontrol mine :mineOre:x :mineOre:y
-    * label *label57
   155 sensor *tmp39 @unit @totalItems
   156 jump *label56 lessThan *tmp39 :mineOre:amount
   157 label *label58
 
   162 setaddr :depositItems*retaddr *label61 (h:*label61)
   163 call *label5 *invalid :depositItems*retval (m:*label61) (h:*label61)
   164 label *label61
-    * label *label52
   165 return :mineOre*retaddr
   166 end
   167 label *label8
 
   171 setaddr :mineOre*retaddr *label63 (h:*label63)
   172 call *label7 *invalid :mineOre*retval (m:*label63) (h:*label63)
   173 label *label63
-    * label *label62
   174 return :mineOre.1*retaddr
   175 end
   176 label *label9
 
   179 set .status2 "Fetching "
   180 set .item2 :fetchBlock:item
   181 set .block2 :fetchBlock:block
-    * label *label65
   182 sensor *tmp43 :fetchBlock:block @x
   183 sensor *tmp44 :fetchBlock:block @y
   184 set :moveToEmpty:x *tmp43
 
   195 jump *label70 equal *tmp48 false
   196 ucontrol itemDrop @air 1000
   197 label *label70
-    * label *label71
-    * label *label68
   198 sensor *tmp50 @unit :fetchBlock:item
   199 op lessThan *tmp51 *tmp50 30
   200 sensor *tmp52 :fetchBlock:block :fetchBlock:item
   201 op land *tmp53 *tmp51 *tmp52
   202 jump *label67 notEqual *tmp53 false
-    * label *label69
   203 set :depositItems:block .core
   204 set :depositItems:item :fetchBlock:item
   205 set :depositItems:fromMining false
   206 setaddr :depositItems*retaddr *label72 (h:*label72)
   207 call *label5 *invalid :depositItems*retval (m:*label72) (h:*label72)
   208 label *label72
-    * label *label64
   209 return :fetchBlock*retaddr
   210 end
   211 label *label10
 
   216 sensor *tmp59 .press @coal
   217 jump *label78 greaterThanEq *tmp59 5
   218 set .status1 "Meeting the graphite target"
-    * label *label80
   219 set .status2 "Supplying "
   220 set .item2 @coal
   221 set .block2 .press
-    * label *label82
   222 sensor *tmp62 .press @itemCapacity
   223 sensor *tmp63 .press @coal
   224 op sub :supplyBlock:missing *tmp62 *tmp63
 
   230 call *label7 *invalid :mineOre*retval (m:*label85) (h:*label85)
   231 label *label85
   232 label *label83
-    * label *label84
-    * label *label81
   233 set :supplyBlocks:supplied true
   234 label *label78
-    * label *label79
   235 label *label76
-    * label *label77
   236 sensor *tmp67 .core @silicon
   237 jump *label86 greaterThanEq *tmp67 .updatedSiliconTarget
   238 sensor *tmp70 .smelter @coal
   239 jump *label88 greaterThanEq *tmp70 5
   240 set .status1 "Meeting the silicon target (coal)"
-    * label *label90
   241 set .status2 "Supplying "
   242 set .item2 @coal
   243 set .block2 .smelter
-    * label *label92
   244 sensor *tmp73 .smelter @itemCapacity
   245 sensor *tmp74 .smelter @coal
   246 op sub :supplyBlock.1:missing *tmp73 *tmp74
 
   252 call *label7 *invalid :mineOre*retval (m:*label95) (h:*label95)
   253 label *label95
   254 label *label93
-    * label *label94
-    * label *label91
   255 set :supplyBlocks:supplied true
   256 jump *label89 always
   257 label *label88
   258 sensor *tmp78 .smelter @sand
   259 jump *label96 greaterThanEq *tmp78 5
   260 set .status1 "Meeting the silicon target (sand)"
-    * label *label98
   261 set .status2 "Supplying "
   262 set .item2 @sand
   263 set .block2 .smelter
-    * label *label100
   264 sensor *tmp81 .smelter @itemCapacity
   265 sensor *tmp82 .smelter @sand
   266 op sub :supplyBlock.2:missing *tmp81 *tmp82
 
   272 call *label7 *invalid :mineOre*retval (m:*label103) (h:*label103)
   273 label *label103
   274 label *label101
-    * label *label102
-    * label *label99
   275 set :supplyBlocks:supplied true
   276 label *label96
-    * label *label97
   277 label *label89
   278 label *label86
-    * label *label87
   279 sensor *tmp86 .battery @totalPower
   280 jump *label104 greaterThanEq *tmp86 .powerTarget
   281 set .status1 "Supplying generator"
-    * label *label106
   282 set .status2 "Supplying "
   283 set .item2 @coal
   284 set .block2 .generator
-    * label *label108
   285 sensor *tmp89 .generator @itemCapacity
   286 sensor *tmp90 .generator @coal
   287 op sub :supplyBlock.3:missing *tmp89 *tmp90
 
   293 call *label7 *invalid :mineOre*retval (m:*label111) (h:*label111)
   294 label *label111
   295 label *label109
-    * label *label110
-    * label *label107
   296 set :supplyBlocks:supplied true
   297 label *label104
-    * label *label105
   298 jump *label75 always
   299 label *label74
   300 jump *label112 equal .processor null
   301 sensor *tmp96 .core @coal
   302 jump *label114 greaterThanEq *tmp96 10
   303 set .status1 "Supplying base"
-    * label *label116
   304 set :mineOre.1:ore @coal
   305 setaddr :mineOre.1*retaddr *label117 (h:*label117)
   306 call *label8 *invalid :mineOre.1*retval (m:*label117) (h:*label117)
   307 label *label117
   308 jump *label73 always
   309 label *label114
-    * label *label115
   310 label *label112
-    * label *label113
   311 label *label75
   312 sensor *tmp99 .titanium_drill @titanium
   313 jump *label118 greaterThanEq *tmp99 .titaniumTrigger
   314 sensor *tmp102 .core @silicon
   315 jump *label120 greaterThanEq *tmp102 .siliconTarget
   316 set .status1 "Meeting the silicon target"
-    * label *label122
   317 sensor :supplyBlocks:coal .core @coal
   318 sensor :supplyBlocks:sand .core @sand
   319 set *tmp108 @sand
 
   323 set .status2 "Mining "
   324 set .item2 *tmp108
   325 set .block2 "core"
-    * label *label125
   326 set :mineOre.1:ore *tmp108
   327 setaddr :mineOre.1*retaddr *label126 (h:*label126)
   328 call *label8 *invalid :mineOre.1*retval (m:*label126) (h:*label126)
 
   332 sensor *tmp109 .core @copper
   333 jump *label127 greaterThanEq *tmp109 .copperTarget
   334 set .status1 "Meeting the copper target"
-    * label *label129
   335 set .status2 "Mining "
   336 set .item2 @copper
   337 set .block2 "core"
-    * label *label130
   338 set :mineOre.1:ore @copper
   339 setaddr :mineOre.1*retaddr *label131 (h:*label131)
   340 call *label8 *invalid :mineOre.1*retval (m:*label131) (h:*label131)
 
   344 sensor *tmp112 .core @lead
   345 jump *label132 greaterThanEq *tmp112 .leadTarget
   346 set .status1 "Meeting the lead target"
-    * label *label134
   347 set .status2 "Mining "
   348 set .item2 @lead
   349 set .block2 "core"
-    * label *label135
   350 set :mineOre.1:ore @lead
   351 setaddr :mineOre.1*retaddr *label136 (h:*label136)
   352 call *label8 *invalid :mineOre.1*retval (m:*label136) (h:*label136)
 
   356 sensor *tmp115 .core @metaglass
   357 jump *label137 greaterThanEq *tmp115 .metaglassTarget
   358 set .status1 "Meeting the metaglass target"
-    * label *label139
   359 set .status2 "Mining "
   360 set .item2 @sand
   361 set .block2 "core"
-    * label *label140
   362 set :mineOre.1:ore @sand
   363 setaddr :mineOre.1*retaddr *label141 (h:*label141)
   364 call *label8 *invalid :mineOre.1*retval (m:*label141) (h:*label141)
 
   367 label *label137
   368 jump *label142 notEqual :supplyBlocks:supplied false
   369 set .status1 "Supplying base"
-    * label *label144
   370 sensor :supplyBlocks:coal.1 .core @coal
   371 sensor :supplyBlocks:sand.1 .core @sand
   372 set *tmp123 @sand
 
   376 set .status2 "Mining "
   377 set .item2 *tmp123
   378 set .block2 "core"
-    * label *label147
   379 set :mineOre.1:ore *tmp123
   380 setaddr :mineOre.1*retaddr *label148 (h:*label148)
   381 call *label8 *invalid :mineOre.1*retval (m:*label148) (h:*label148)
   382 label *label148
   383 label *label142
-    * label *label143
   384 label *label138
   385 label *label133
   386 label *label128
 
   388 jump *label119 always
   389 label *label118
   390 set .status1 "Fetching titanium"
-    * label *label149
   391 set :fetchBlock:block .titanium_drill
   392 set :fetchBlock:item @titanium
   393 setaddr :fetchBlock*retaddr *label150 (h:*label150)
 
   405 set .siliconTarget :meetTarget:silicon
   406 set .titaniumTarget :meetTarget:titanium
   407 set .metaglassTarget :meetTarget:metaglass
-    * label *label337
   408 op sign :meetTarget:count :meetTarget:copper
-    * label *label338
-    * label *label341
   409 op sign *tmp125 :meetTarget:lead
   410 op add :meetTarget:count :meetTarget:count *tmp125
-    * label *label342
-    * label *label345
   411 op sign *tmp125 :meetTarget:graphite
   412 op add :meetTarget:count :meetTarget:count *tmp125
-    * label *label346
-    * label *label349
   413 op sign *tmp125 :meetTarget:silicon
   414 op add :meetTarget:count :meetTarget:count *tmp125
-    * label *label350
-    * label *label353
   415 op sign *tmp125 :meetTarget:titanium
   416 op add :meetTarget:count :meetTarget:count *tmp125
-    * label *label354
-    * label *label357
   417 op sign *tmp125 :meetTarget:metaglass
   418 op add :meetTarget:count :meetTarget:count *tmp125
-    * label *label358
-    * label *label154
   419 set .totalTargets :meetTarget:count
   420 jump *label161 notEqual .processor null
   421 op max .updatedGraphiteTarget 10 .graphiteTarget
 
   435 jump *label164 greaterThanEq *tmp133 *tmp134
   436 set .titaniumTrigger 7
   437 label *label164
-    * label *label165
   438 sensor *tmp137 .core @copper
   439 op lessThan *tmp138 *tmp137 .copperTarget
   440 sensor *tmp139 .core @lead
 
   461 setaddr :supplyBlocks*retaddr *label168 (h:*label168)
   462 call *label10 *invalid :supplyBlocks*retval (m:*label168) (h:*label168)
   463 label *label168
-    * label *label166
   464 sensor *tmp137 .core @copper
   465 op lessThan *tmp138 *tmp137 .copperTarget
   466 sensor *tmp139 .core @lead
 
   484 op or *tmp158 *tmp153 *tmp156
   485 jump *label365 notEqual *tmp158 false
   486 label *label167
-    * label *label151
   487 return :meetTarget*retaddr
   488 end
   489 label *label12
 
   493 call *label2 *invalid :moveTo.1*retval (m:*label170) (h:*label170)
   494 label *label170
   495 set .status3 "Building..."
-    * label *label171
   496 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
   497 jump *label172 equal :buildBlockAt:building null
   498 jump *label174 notEqual :buildBlockAt:type :buildBlockAt:block
   499 set :buildBlockAt*retval :buildBlockAt:building
   500 jump *label169 always
   501 label *label174
-    * label *label175
   502 jump *label176 equal :buildBlockAt:skipError false
   503 set :buildBlockAt*retval null
   504 jump *label169 always
   505 label *label176
-    * label *label177
   506 print "[salmon]"
   507 print "Cannot build at ("
   508 print :buildBlockAt:x
 
   512 print :buildBlockAt:building
   513 printflush message1
   514 stop
-    * label *label178
   515 label *label172
-    * label *label173
   516 ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt:block :buildBlockAt:rotation :buildBlockAt:config
   517 wait 0.25
   518 label *label179
 
   520 jump *label182 notEqual :buildBlockAt:building null
   521 jump *label181 always
   522 label *label182
-    * label *label183
-    * label *label180
   523 jump *label179 notEqual :buildBlockAt:type :buildBlockAt:block
   524 label *label181
   525 set :buildBlockAt*retval :buildBlockAt:building
 
   547 call *label12 *invalid :buildBlockAt*retval (m:*label186) (h:*label186)
   548 label *label186
   549 set :buildBlock*retval :buildBlockAt*retval
-    * label *label184
   550 return :buildBlock*retaddr
   551 end
   552 label *label14
 
   564 setaddr :moveTo.1*retaddr *label188 (h:*label188)
   565 call *label2 *invalid :moveTo.1*retval (m:*label188) (h:*label188)
   566 label *label188
-    * label *label187
   567 return :moveRandom*retaddr
   568 end
   569 label *label0
   570 label *label190
   571 ubind @poly
   572 ulocate building core false @copper .coreX .coreY 0 .core
-    * label *label191
   573 jump *label190 equal .core null
-    * label *label192
-    * label *label495
   574 op add :buildBlockFromCfg:x .coreX -1.5
   575 op add :buildBlockFromCfg:y .coreY 2.5
   576 set :buildBlock:block @graphite-press
 
   587 setaddr :buildBlock*retaddr *label496 (h:*label496)
   588 call *label13 *invalid :buildBlock*retval (m:*label496) (h:*label496)
   589 label *label496
-    * label *label497
-    * label *label196
-    * label *label193
   590 set .press :buildBlock*retval
-    * label *label501
   591 set :buildBlockFromCfg.1:x .coreX
   592 op add :buildBlockFromCfg.1:y .coreY 4
   593 set :buildBlock:block @battery
 
   604 setaddr :buildBlock*retaddr *label502 (h:*label502)
   605 call *label13 *invalid :buildBlock*retval (m:*label502) (h:*label502)
   606 label *label502
-    * label *label503
-    * label *label202
-    * label *label199
   607 set .battery :buildBlock*retval
-    * label *label507
   608 set :buildBlockFromCfg.2:x .coreX
   609 op add :buildBlockFromCfg.2:y .coreY 3
   610 set :buildBlock:block @combustion-generator
 
   621 setaddr :buildBlock*retaddr *label508 (h:*label508)
   622 call *label13 *invalid :buildBlock*retval (m:*label508) (h:*label508)
   623 label *label508
-    * label *label509
-    * label *label208
-    * label *label205
   624 set .generator :buildBlock*retval
   625 set .powerTarget 400
-    * label *label435
   626 op add :buildBlockFromCfg.3:x .coreX -1
   627 op add :buildBlockFromCfg.3:y .coreY 4
   628 set :buildBlock:block @battery
 
   639 setaddr :buildBlock*retaddr *label436 (h:*label436)
   640 call *label13 *invalid :buildBlock*retval (m:*label436) (h:*label436)
   641 label *label436
-    * label *label437
-    * label *label214
-    * label *label211
-    * label *label513
   642 op add :buildBlockFromCfg.4:x .coreX 1.5
   643 op add :buildBlockFromCfg.4:y .coreY 2.5
   644 set :buildBlock:block @silicon-smelter
 
   655 setaddr :buildBlock*retaddr *label514 (h:*label514)
   656 call *label13 *invalid :buildBlock*retval (m:*label514) (h:*label514)
   657 label *label514
-    * label *label515
-    * label *label220
-    * label *label217
   658 set .smelter :buildBlock*retval
   659 set :buildTitaniumDrillCfg:attempts 0
   660 label *label225
 
   693 label *label234
   694 jump *label232 always
   695 label *label235
-    * label *label231
   696 jump *label230 always
   697 label *label232
-    * label *label229
   698 set :buildTitaniumDrillCfg:x :locateOreAway:x
   699 set :buildTitaniumDrillCfg:y :locateOreAway:y
   700 set :moveTo.1:x :locateOreAway:x
 
   705 set :buildTitaniumDrillCfg:best 0
   706 set :buildTitaniumDrillCfg:bx 0
   707 set :buildTitaniumDrillCfg:by 0
-    * label *label366
   708 op add :checkOre:x :buildTitaniumDrillCfg:x 1
   709 set :checkOre:count 0
   710 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
   711 jump *label367 notEqual :checkOre:floor @ore-titanium
   712 set :checkOre:count 1
   713 label *label367
-    * label *label368
-    * label *label369
   714 op add *tmp222 :buildTitaniumDrillCfg:y 1
   715 set :checkOre.1:count :checkOre:count
   716 ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
   717 jump *label370 notEqual :checkOre.1:floor @ore-titanium
   718 op add :checkOre.1:count :checkOre:count 1
   719 label *label370
-    * label *label371
-    * label *label372
   720 set :checkOre.2:count :checkOre.1:count
   721 ucontrol getBlock :checkOre:x *tmp222 0 0 :checkOre.2:floor
   722 jump *label373 notEqual :checkOre.2:floor @ore-titanium
   723 op add :checkOre.2:count :checkOre.1:count 1
   724 label *label373
-    * label *label374
-    * label *label375
   725 jump *label378 lessThanEq :checkOre.2:count 0
   726 set :buildTitaniumDrillCfg:bx 1
   727 set :buildTitaniumDrillCfg:by 1
 
   729 jump *label376 lessThan :checkOre.2:count 4
   730 jump *label240 always
   731 label *label376
-    * label *label377
   732 label *label378
-    * label *label379
-    * label *label380
-    * label *label383
   733 op add :checkOre:x :buildTitaniumDrillCfg:x 1
   734 set :checkOre:count 0
   735 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
   736 jump *label384 notEqual :checkOre:floor @ore-titanium
   737 set :checkOre:count 1
   738 label *label384
-    * label *label385
-    * label *label386
   739 op add *tmp222 :buildTitaniumDrillCfg:y -1
   740 set :checkOre.1:count :checkOre:count
   741 ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
   742 jump *label387 notEqual :checkOre.1:floor @ore-titanium
   743 op add :checkOre.1:count :checkOre:count 1
   744 label *label387
-    * label *label388
-    * label *label389
   745 set :checkOre.2:count :checkOre.1:count
   746 ucontrol getBlock :checkOre:x *tmp222 0 0 :checkOre.2:floor
   747 jump *label390 notEqual :checkOre.2:floor @ore-titanium
   748 op add :checkOre.2:count :checkOre.1:count 1
   749 label *label390
-    * label *label391
-    * label *label392
   750 jump *label395 lessThanEq :checkOre.2:count :buildTitaniumDrillCfg:best
   751 set :buildTitaniumDrillCfg:bx 1
   752 set :buildTitaniumDrillCfg:by -1
 
   754 jump *label393 lessThan :checkOre.2:count 4
   755 jump *label240 always
   756 label *label393
-    * label *label394
   757 label *label395
-    * label *label396
-    * label *label397
-    * label *label400
   758 op add :checkOre:x :buildTitaniumDrillCfg:x -1
   759 set :checkOre:count 0
   760 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
   761 jump *label401 notEqual :checkOre:floor @ore-titanium
   762 set :checkOre:count 1
   763 label *label401
-    * label *label402
-    * label *label403
   764 op add *tmp222 :buildTitaniumDrillCfg:y 1
   765 set :checkOre.1:count :checkOre:count
   766 ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
   767 jump *label404 notEqual :checkOre.1:floor @ore-titanium
   768 op add :checkOre.1:count :checkOre:count 1
   769 label *label404
-    * label *label405
-    * label *label406
   770 set :checkOre.2:count :checkOre.1:count
   771 ucontrol getBlock :checkOre:x *tmp222 0 0 :checkOre.2:floor
   772 jump *label407 notEqual :checkOre.2:floor @ore-titanium
   773 op add :checkOre.2:count :checkOre.1:count 1
   774 label *label407
-    * label *label408
-    * label *label409
   775 jump *label412 lessThanEq :checkOre.2:count :buildTitaniumDrillCfg:best
   776 set :buildTitaniumDrillCfg:bx -1
   777 set :buildTitaniumDrillCfg:by 1
 
   779 jump *label410 lessThan :checkOre.2:count 4
   780 jump *label240 always
   781 label *label410
-    * label *label411
   782 label *label412
-    * label *label413
-    * label *label414
-    * label *label417
   783 op add :checkOre:x :buildTitaniumDrillCfg:x -1
   784 set :checkOre:count 0
   785 ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 :checkOre:floor
   786 jump *label418 notEqual :checkOre:floor @ore-titanium
   787 set :checkOre:count 1
   788 label *label418
-    * label *label419
-    * label *label420
   789 op add *tmp222 :buildTitaniumDrillCfg:y -1
   790 set :checkOre.1:count :checkOre:count
   791 ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :checkOre.1:floor
   792 jump *label421 notEqual :checkOre.1:floor @ore-titanium
   793 op add :checkOre.1:count :checkOre:count 1
   794 label *label421
-    * label *label422
-    * label *label423
   795 set :checkOre.2:count :checkOre.1:count
   796 ucontrol getBlock :checkOre:x *tmp222 0 0 :checkOre.2:floor
   797 jump *label424 notEqual :checkOre.2:floor @ore-titanium
   798 op add :checkOre.2:count :checkOre.1:count 1
   799 label *label424
-    * label *label425
-    * label *label426
   800 jump *label429 lessThanEq :checkOre.2:count :buildTitaniumDrillCfg:best
   801 set :buildTitaniumDrillCfg:bx -1
   802 set :buildTitaniumDrillCfg:by -1
   803 set :buildTitaniumDrillCfg:best :checkOre.2:count
-    * label *label427
-    * label *label428
   804 label *label429
-    * label *label430
-    * label *label431
   805 label *label240
   806 jump *label258 lessThanEq :buildTitaniumDrillCfg:best 0
   807 op div *tmp243 :buildTitaniumDrillCfg:bx 2
 
   821 set *tmp204 :buildBlockAt*retval
   822 jump *label224 always
   823 label *label261
-    * label *label262
   824 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
   825 label *label258
-    * label *label259
   826 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
   827 jump *label263 lessThanEq :buildTitaniumDrillCfg:attempts 5
   828 set :moveRandom:distance 40
 
   831 label *label265
   832 set :buildTitaniumDrillCfg:attempts 0
   833 label *label263
-    * label *label264
-    * label *label226
   834 jump *label225 always
-    * label *label227
   835 set *tmp204 null
   836 label *label224
-    * label *label223
   837 set .titanium_drill *tmp204
-    * label *label519
   838 set :buildBlockFromCfg.5:x .coreX
   839 op add :buildBlockFromCfg.5:y .coreY 2
   840 set :buildBlock:block @unloader
 
   851 setaddr :buildBlock*retaddr *label520 (h:*label520)
   852 call *label13 *invalid :buildBlock*retval (m:*label520) (h:*label520)
   853 label *label520
-    * label *label521
-    * label *label269
-    * label *label266
   854 set .unloader1 :buildBlock*retval
-    * label *label441
   855 op add :buildBlockFromCfg.6:x .coreX -1
   856 op add :buildBlockFromCfg.6:y .coreY -2
   857 set :buildBlock:block @power-node
 
   868 setaddr :buildBlock*retaddr *label442 (h:*label442)
   869 call *label13 *invalid :buildBlock*retval (m:*label442) (h:*label442)
   870 label *label442
-    * label *label443
-    * label *label275
-    * label *label272
-    * label *label525
   871 op add :buildBlockFromCfg.7:x .coreX 1
   872 op add :buildBlockFromCfg.7:y .coreY 4
   873 set :buildBlock:block @micro-processor
 
   884 setaddr :buildBlock*retaddr *label526 (h:*label526)
   885 call *label13 *invalid :buildBlock*retval (m:*label526) (h:*label526)
   886 label *label526
-    * label *label527
-    * label *label281
-    * label *label278
   887 set .processor :buildBlock*retval
-    * label *label447
   888 op add :buildBlockFromCfg.8:x .coreX -4
   889 op add :buildBlockFromCfg.8:y .coreY -1
   890 set :buildBlock:block @air-factory
 
   901 setaddr :buildBlock*retaddr *label448 (h:*label448)
   902 call *label13 *invalid :buildBlock*retval (m:*label448) (h:*label448)
   903 label *label448
-    * label *label449
-    * label *label287
-    * label *label284
-    * label *label453
   904 op add :buildBlockFromCfg.9:x .coreX -2
   905 op add :buildBlockFromCfg.9:y .coreY 1
   906 set :buildBlock:block @unloader
 
   917 setaddr :buildBlock*retaddr *label454 (h:*label454)
   918 call *label13 *invalid :buildBlock*retval (m:*label454) (h:*label454)
   919 label *label454
-    * label *label455
-    * label *label293
-    * label *label290
-    * label *label459
   920 op add :buildBlockFromCfg.10:x .coreX -3
   921 op add :buildBlockFromCfg.10:y .coreY 1
   922 set :buildBlock:block @sorter
 
   933 setaddr :buildBlock*retaddr *label460 (h:*label460)
   934 call *label13 *invalid :buildBlock*retval (m:*label460) (h:*label460)
   935 label *label460
-    * label *label461
-    * label *label299
-    * label *label296
   936 write @mono .processor ".unitToProduce"
-    * label *label465
   937 op add :buildBlockFromCfg.11:x .coreX 2
   938 set :buildBlockFromCfg.11:y .coreY
   939 set :buildBlock:block @unloader
 
   950 setaddr :buildBlock*retaddr *label466 (h:*label466)
   951 call *label13 *invalid :buildBlock*retval (m:*label466) (h:*label466)
   952 label *label466
-    * label *label467
-    * label *label305
-    * label *label302
-    * label *label471
   953 op add :buildBlockFromCfg.12:x .coreX 3.5
   954 op add :buildBlockFromCfg.12:y .coreY 0.5
   955 set :buildBlock:block @kiln
 
   966 setaddr :buildBlock*retaddr *label472 (h:*label472)
   967 call *label13 *invalid :buildBlock*retval (m:*label472) (h:*label472)
   968 label *label472
-    * label *label473
-    * label *label311
-    * label *label308
-    * label *label477
   969 op add :buildBlockFromCfg.13:x .coreX 2
   970 op add :buildBlockFromCfg.13:y .coreY 1
   971 set :buildBlock:block @junction
 
   982 setaddr :buildBlock*retaddr *label478 (h:*label478)
   983 call *label13 *invalid :buildBlock*retval (m:*label478) (h:*label478)
   984 label *label478
-    * label *label479
-    * label *label317
-    * label *label314
-    * label *label483
   985 op add :buildBlockFromCfg.14:x .coreX -3.5
   986 op add :buildBlockFromCfg.14:y .coreY 3.5
   987 set :buildBlock:block @water-extractor
 
   998 setaddr :buildBlock*retaddr *label484 (h:*label484)
   999 call *label13 *invalid :buildBlock*retval (m:*label484) (h:*label484)
  1000 label *label484
-    * label *label485
-    * label *label323
-    * label *label320
-    * label *label489
  1001 op add :buildBlockFromCfg.15:x .coreX -4.5
  1002 op add :buildBlockFromCfg.15:y .coreY 1.5
  1003 set :buildBlock:block @steam-generator
 
  1014 setaddr :buildBlock*retaddr *label490 (h:*label490)
  1015 call *label13 *invalid :buildBlock*retval (m:*label490) (h:*label490)
  1016 label *label490
-    * label *label491
-    * label *label329
-    * label *label326
  1017 label *label332
  1018 setaddr :supplyBlocks*retaddr *label335 (h:*label335)
  1019 call *label10 *invalid :supplyBlocks*retval (m:*label335) (h:*label335)
  1020 label *label335
-    * label *label333
  1021 jump *label332 always
-    * label *label334
  1022 ucontrol stop
  1023 print "[salmon]"
  1024 print "Done"
  1025 printflush message1
  1026 stop
-    * label *label336
-    * label *label189
  1027 set :buildCore*finished true
  1028 jump *label16 always
  1029 end

Modifications by Jumps phase, Jump Straightening, pass 4, iteration 1 (-6 instructions):
 
    98 label *label40
    99 ucontrol itemDrop :depositItems:block 30
   100 sensor *tmp23 :depositItems:block :depositItems:item
-    * jump *label43 lessThan *tmp23 :depositItems:cap
-    * jump *label42 always
+  101 jump *label42 greaterThanEq *tmp23 :depositItems:cap
   102 label *label43
   103 sensor *tmp26 @unit @firstItem
   104 jump *label40 notEqual *tmp26 null
 
   147 op notEqual *tmp35 :mineOre:item null
   148 op notEqual *tmp36 :mineOre:item :mineOre:ore
   149 op land *tmp37 *tmp35 *tmp36
-    * jump *label59 equal *tmp37 false
-    * jump *label58 always
+  150 jump *label58 notEqual *tmp37 false
   151 label *label59
   152 ucontrol mine :mineOre:x :mineOre:y
   153 sensor *tmp39 @unit @totalItems
 
   515 wait 0.25
   516 label *label179
   517 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
-    * jump *label182 notEqual :buildBlockAt:building null
-    * jump *label181 always
+  518 jump *label181 equal :buildBlockAt:building null
   519 label *label182
   520 jump *label179 notEqual :buildBlockAt:type :buildBlockAt:block
   521 label *label181
 
   723 set :buildTitaniumDrillCfg:bx 1
   724 set :buildTitaniumDrillCfg:by 1
   725 set :buildTitaniumDrillCfg:best :checkOre.2:count
-    * jump *label376 lessThan :checkOre.2:count 4
-    * jump *label240 always
+  726 jump *label240 greaterThanEq :checkOre.2:count 4
   727 label *label376
   728 label *label378
   729 op add :checkOre:x :buildTitaniumDrillCfg:x 1
 
   747 set :buildTitaniumDrillCfg:bx 1
   748 set :buildTitaniumDrillCfg:by -1
   749 set :buildTitaniumDrillCfg:best :checkOre.2:count
-    * jump *label393 lessThan :checkOre.2:count 4
-    * jump *label240 always
+  750 jump *label240 greaterThanEq :checkOre.2:count 4
   751 label *label393
   752 label *label395
   753 op add :checkOre:x :buildTitaniumDrillCfg:x -1
 
   771 set :buildTitaniumDrillCfg:bx -1
   772 set :buildTitaniumDrillCfg:by 1
   773 set :buildTitaniumDrillCfg:best :checkOre.2:count
-    * jump *label410 lessThan :checkOre.2:count 4
-    * jump *label240 always
+  774 jump *label240 greaterThanEq :checkOre.2:count 4
   775 label *label410
   776 label *label412
   777 op add :checkOre:x :buildTitaniumDrillCfg:x -1

Modifications by Jumps phase, Jump Optimization, pass 4, iteration 1:
 
    99 ucontrol itemDrop :depositItems:block 30
   100 sensor *tmp23 :depositItems:block :depositItems:item
   101 jump *label42 greaterThanEq *tmp23 :depositItems:cap
-    * label *label43
   102 sensor *tmp26 @unit @firstItem
   103 jump *label40 notEqual *tmp26 null
   104 label *label42
 
   147 op notEqual *tmp36 :mineOre:item :mineOre:ore
   148 op land *tmp37 *tmp35 *tmp36
   149 jump *label58 notEqual *tmp37 false
-    * label *label59
   150 ucontrol mine :mineOre:x :mineOre:y
   151 sensor *tmp39 @unit @totalItems
   152 jump *label56 lessThan *tmp39 :mineOre:amount
 
   514 label *label179
   515 ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBlockAt:type :buildBlockAt:building 0
   516 jump *label181 equal :buildBlockAt:building null
-    * label *label182
   517 jump *label179 notEqual :buildBlockAt:type :buildBlockAt:block
   518 label *label181
   519 set :buildBlockAt*retval :buildBlockAt:building
 
   721 set :buildTitaniumDrillCfg:by 1
   722 set :buildTitaniumDrillCfg:best :checkOre.2:count
   723 jump *label240 greaterThanEq :checkOre.2:count 4
-    * label *label376
   724 label *label378
   725 op add :checkOre:x :buildTitaniumDrillCfg:x 1
   726 set :checkOre:count 0
 
   744 set :buildTitaniumDrillCfg:by -1
   745 set :buildTitaniumDrillCfg:best :checkOre.2:count
   746 jump *label240 greaterThanEq :checkOre.2:count 4
-    * label *label393
   747 label *label395
   748 op add :checkOre:x :buildTitaniumDrillCfg:x -1
   749 set :checkOre:count 0
 
   767 set :buildTitaniumDrillCfg:by 1
   768 set :buildTitaniumDrillCfg:best :checkOre.2:count
   769 jump *label240 greaterThanEq :checkOre.2:count 4
-    * label *label410
   770 label *label412
   771 op add :checkOre:x :buildTitaniumDrillCfg:x -1
   772 set :checkOre:count 0

Modifications by Jumps phase, Jump Threading, pass 4, iteration 1:
 
    98 label *label40
    99 ucontrol itemDrop :depositItems:block 30
   100 sensor *tmp23 :depositItems:block :depositItems:item
-    * jump *label42 greaterThanEq *tmp23 :depositItems:cap
+  101 jump *label36 greaterThanEq *tmp23 :depositItems:cap
   102 sensor *tmp26 @unit @firstItem
   103 jump *label40 notEqual *tmp26 null
   104 label *label42
 
   273 label *label89
   274 label *label86
   275 sensor *tmp86 .battery @totalPower
-    * jump *label104 greaterThanEq *tmp86 .powerTarget
+  276 jump *label75 greaterThanEq *tmp86 .powerTarget
   277 set .status1 "Supplying generator"
   278 set .status2 "Supplying "
   279 set .item2 @coal
 
   301 setaddr :mineOre.1*retaddr *label117 (h:*label117)
   302 call *label8 *invalid :mineOre.1*retval (m:*label117) (h:*label117)
   303 label *label117
-    * jump *label73 always
+  304 return :supplyBlocks*retaddr
   305 label *label114
   306 label *label112
   307 label *label75
 
   323 setaddr :mineOre.1*retaddr *label126 (h:*label126)
   324 call *label8 *invalid :mineOre.1*retval (m:*label126) (h:*label126)
   325 label *label126
-    * jump *label121 always
+  326 return :supplyBlocks*retaddr
   327 label *label120
   328 sensor *tmp109 .core @copper
   329 jump *label127 greaterThanEq *tmp109 .copperTarget
 
   335 setaddr :mineOre.1*retaddr *label131 (h:*label131)
   336 call *label8 *invalid :mineOre.1*retval (m:*label131) (h:*label131)
   337 label *label131
-    * jump *label128 always
+  338 return :supplyBlocks*retaddr
   339 label *label127
   340 sensor *tmp112 .core @lead
   341 jump *label132 greaterThanEq *tmp112 .leadTarget
 
   347 setaddr :mineOre.1*retaddr *label136 (h:*label136)
   348 call *label8 *invalid :mineOre.1*retval (m:*label136) (h:*label136)
   349 label *label136
-    * jump *label133 always
+  350 return :supplyBlocks*retaddr
   351 label *label132
   352 sensor *tmp115 .core @metaglass
   353 jump *label137 greaterThanEq *tmp115 .metaglassTarget
 
   359 setaddr :mineOre.1*retaddr *label141 (h:*label141)
   360 call *label8 *invalid :mineOre.1*retval (m:*label141) (h:*label141)
   361 label *label141
-    * jump *label138 always
+  362 return :supplyBlocks*retaddr
   363 label *label137
-    * jump *label142 notEqual :supplyBlocks:supplied false
+  364 jump *label119 notEqual :supplyBlocks:supplied false
   365 set .status1 "Supplying base"
   366 sensor :supplyBlocks:coal.1 .core @coal
   367 sensor :supplyBlocks:sand.1 .core @sand
 
   381 label *label133
   382 label *label128
   383 label *label121
-    * jump *label119 always
+  384 return :supplyBlocks*retaddr
   385 label *label118
   386 set .status1 "Fetching titanium"
   387 set :fetchBlock:block .titanium_drill
 
   493 jump *label172 equal :buildBlockAt:building null
   494 jump *label174 notEqual :buildBlockAt:type :buildBlockAt:block
   495 set :buildBlockAt*retval :buildBlockAt:building
-    * jump *label169 always
+  496 return :buildBlockAt*retaddr
   497 label *label174
   498 jump *label176 equal :buildBlockAt:skipError false
   499 set :buildBlockAt*retval null
-    * jump *label169 always
+  500 return :buildBlockAt*retaddr
   501 label *label176
   502 print "[salmon]"
   503 print "Cannot build at ("
 
   678 op abs *tmp210 *tmp209
   679 op lessThan *tmp211 *tmp210 8
   680 op land *tmp212 *tmp208 *tmp211
-    * jump *label234 equal *tmp212 false
+  681 jump *label232 equal *tmp212 false
   682 set :moveRandom:distance :locateOreAway:distance
   683 setaddr :moveRandom*retaddr *label236 (h:*label236)
   684 call *label14 *invalid :moveRandom*retval (m:*label236) (h:*label236)
   685 label *label236
-    * jump *label235 always
+  686 jump *label230 always
   687 label *label234
   688 jump *label232 always
   689 label *label235
 
   812 ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillCfg:y @conveyor 0 null
   813 label *label258
   814 op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCfg:attempts 1
-    * jump *label263 lessThanEq :buildTitaniumDrillCfg:attempts 5
+  815 jump *label225 lessThanEq :buildTitaniumDrillCfg:attempts 5
   816 set :moveRandom:distance 40
   817 setaddr :moveRandom*retaddr *label265 (h:*label265)
   818 call *label14 *invalid :moveRandom*retval (m:*label265) (h:*label265)

Modifications by Jumps phase, Unreachable Code Elimination, pass 4, iteration 1 (-26 instructions):
 
    27 label *label16
    28 wait 1e12
    29 jump *label16 always
-    * end
    30 label *label1
    31 set .status3 "Moving..."
    32 op sub *tmp6 :moveTo:radius 0.5
 
    38 jump *label362 equal *tmp4 false
    39 label *label21
    40 return :moveTo*retaddr
-    * end
    41 label *label2
    42 set :moveTo:x :moveTo.1:x
    43 set :moveTo:y :moveTo.1:y
 
    46 call *label1 *invalid :moveTo*retval (m:*label23) (h:*label23)
    47 label *label23
    48 return :moveTo.1*retaddr
-    * end
    49 label *label3
    50 sensor *tmp9 @unit @firstItem
    51 jump *label25 equal *tmp9 null
 
    64 jump *label363 notEqual *tmp12 null
    65 label *label30
    66 return :moveToEmpty*retaddr
-    * end
    67 label *label4
    68 sensor *tmp14 :moveToBlock:block @x
    69 sensor *tmp15 :moveToBlock:block @y
 
    74 call *label1 *invalid :moveTo*retval (m:*label32) (h:*label32)
    75 label *label32
    76 return :moveToBlock*retaddr
-    * end
    77 label *label5
    78 set .status3 "Depositing..."
    79 sensor *tmp16 @unit @firstItem
 
    96 jump *label36 greaterThanEq *tmp23 :depositItems:cap
    97 sensor *tmp26 @unit @firstItem
    98 jump *label40 notEqual *tmp26 null
-    * label *label42
    99 jump *label36 always
   100 label *label35
   101 sensor *tmp28 @unit @firstItem
 
   108 label *label36
   109 set .transportTarget 0
   110 return :depositItems*retaddr
-    * end
   111 label *label6
   112 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp30 0
   113 jump *label49 notEqual *tmp30 false
 
   118 stop
   119 label *label49
   120 return :locateOre*retaddr
-    * end
   121 label *label7
   122 set .transportTarget :mineOre:amount
   123 set .transportItem :mineOre:ore
 
   151 call *label5 *invalid :depositItems*retval (m:*label61) (h:*label61)
   152 label *label61
   153 return :mineOre*retaddr
-    * end
   154 label *label8
   155 set :mineOre:ore :mineOre.1:ore
   156 set :mineOre:amount 30
 
   159 call *label7 *invalid :mineOre*retval (m:*label63) (h:*label63)
   160 label *label63
   161 return :mineOre.1*retaddr
-    * end
   162 label *label9
   163 sensor .transportTarget :fetchBlock:block @itemCapacity
   164 set .transportItem :fetchBlock:item
 
   193 call *label5 *invalid :depositItems*retval (m:*label72) (h:*label72)
   194 label *label72
   195 return :fetchBlock*retaddr
-    * end
   196 label *label10
   197 set :supplyBlocks:supplied false
   198 jump *label74 notEqual .unloader1 null
 
   279 label *label111
   280 label *label109
   281 set :supplyBlocks:supplied true
-    * label *label104
   282 jump *label75 always
   283 label *label74
   284 jump *label112 equal .processor null
 
   364 setaddr :mineOre.1*retaddr *label148 (h:*label148)
   365 call *label8 *invalid :mineOre.1*retval (m:*label148) (h:*label148)
   366 label *label148
-    * label *label142
-    * label *label138
-    * label *label133
-    * label *label128
-    * label *label121
   367 return :supplyBlocks*retaddr
   368 label *label118
   369 set .status1 "Fetching titanium"
 
   373 call *label9 *invalid :fetchBlock*retval (m:*label150) (h:*label150)
   374 label *label150
   375 label *label119
-    * label *label73
   376 return :supplyBlocks*retaddr
-    * end
   377 label *label11
   378 set .nextBlock :meetTarget:block
   379 set .copperTarget :meetTarget:copper
 
   462 jump *label365 notEqual *tmp158 false
   463 label *label167
   464 return :meetTarget*retaddr
-    * end
   465 label *label12
   466 set :moveTo.1:x :buildBlockAt:x
   467 set :moveTo.1:y :buildBlockAt:y
 
   497 jump *label179 notEqual :buildBlockAt:type :buildBlockAt:block
   498 label *label181
   499 set :buildBlockAt*retval :buildBlockAt:building
-    * label *label169
   500 return :buildBlockAt*retaddr
-    * end
   501 label *label13
   502 set :meetTarget:block :buildBlock:block
   503 set :meetTarget:copper :buildBlock:copper
 
   520 label *label186
   521 set :buildBlock*retval :buildBlockAt*retval
   522 return :buildBlock*retaddr
-    * end
   523 label *label14
   524 op rand :moveRandom:angle 360
   525 sensor *tmp172 @unit @x
 
   536 call *label2 *invalid :moveTo.1*retval (m:*label188) (h:*label188)
   537 label *label188
   538 return :moveRandom*retaddr
-    * end
   539 label *label0
   540 label *label190
   541 ubind @poly
 
   660 call *label14 *invalid :moveRandom*retval (m:*label236) (h:*label236)
   661 label *label236
   662 jump *label230 always
-    * label *label234
-    * jump *label232 always
-    * label *label235
-    * jump *label230 always
   663 label *label232
   664 set :buildTitaniumDrillCfg:x :locateOreAway:x
   665 set :buildTitaniumDrillCfg:y :locateOreAway:y
 
   790 call *label14 *invalid :moveRandom*retval (m:*label265) (h:*label265)
   791 label *label265
   792 set :buildTitaniumDrillCfg:attempts 0
-    * label *label263
   793 jump *label225 always
-    * set *tmp204 null
   794 label *label224
   795 set .titanium_drill *tmp204
   796 set :buildBlockFromCfg.5:x .coreX
 
   977 call *label10 *invalid :supplyBlocks*retval (m:*label335) (h:*label335)
   978 label *label335
   979 jump *label332 always
-    * ucontrol stop
-    * print "[salmon]"
-    * print "Done"
-    * printflush message1
-    * stop
-    * set :buildCore*finished true
-    * jump *label16 always
-    * end

Modifications by Final phase, Print Merging, iteration 1 (-4 instructions):
 
   111 label *label6
   112 ulocate ore core true :locateOre:ore :locateOre:x :locateOre:y *tmp30 0
   113 jump *label49 notEqual *tmp30 false
-    * print "[salmon]"
-    * print "Cannot locate "
+  114 print "[salmon]Cannot locate "
   115 print :locateOre:ore
   116 printflush message1
   117 stop
 
   478 set :buildBlockAt*retval null
   479 return :buildBlockAt*retaddr
   480 label *label176
-    * print "[salmon]"
-    * print "Cannot build at ("
-    * print :buildBlockAt:x
-    * print ", "
-    * print :buildBlockAt:y
-    * print "), tile already contains "
+  481 print "[salmon]Cannot build at ({0}, {0}), tile already contains "
+  482 format :buildBlockAt:x
+  483 format :buildBlockAt:y
   484 print :buildBlockAt:building
   485 printflush message1
   486 stop

Final code before resolving virtual instructions:

    0:  jump *label15 always 0 0                                     CoreBuilder.mnd: #set target = 8;
    1:  jump *label0 always 0 0                                      ...
        label *label15                                               ...
    2:  set .press null                                              CoreBuilder.mnd: var
    3:  set .generator null                                          ...
    4:  set .battery null                                            ...
    5:  set .smelter null                                            ...
    6:  set .titanium_drill null                                     ...
    7:  set .unloader1 null                                          ...
    8:  set .nextBlock ""                                            CoreBuilder.mnd: remote var
    9:  set .copperTarget 0                                          ...
   10:  set .leadTarget 0                                            ...
   11:  set .graphiteTarget 0                                        ...
   12:  set .siliconTarget 0                                         ...
   13:  set .titaniumTarget 0                                        ...
   14:  set .metaglassTarget 0                                       ...
   15:  set .totalTargets 0                                          ...
   16:  set .powerTarget 0                                           ...
   17:  set .transportTarget 0                                       ...
   18:  set .transportItem null                                      ...
   19:  set .status1 ""                                              ...
   20:  set .status2 ""                                              ...
   21:  set .item2 ""                                                ...
   22:  set .block2 ""                                               ...
   23:  set .status3 ""                                              ...
   24:  set .titaniumTrigger 7                                       CoreBuilder.mnd: var
   25:  set *signature "a3ea14ee033c13eb:v1"                         CoreBuilder.mnd: #set target = 8;
        label *label16                                               ...
   26:  wait 1e12                                                    ...
   27:  jump *label16 always 0 0                                     ...
        label *label1                                                CoreBuilder.mnd: void moveTo(x, y, radius)
   28:  set .status3 "Moving..."                                     CoreBuilder.mnd: status3 = text;
   29:  op sub *tmp6 :moveTo:radius 0.5                              CoreBuilder.mnd: while !within(x, y, radius) do
   30:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp4 0   ...
   31:  jump *label21 notEqual *tmp4 false                           ...
        label *label362                                              ...
   32:  ucontrol approach :moveTo:x :moveTo:y *tmp6 0 0              CoreBuilder.mnd: approach(x, y, radius - 0.5);
   33:  ucontrol within :moveTo:x :moveTo:y :moveTo:radius *tmp4 0   CoreBuilder.mnd: while !within(x, y, radius) do
   34:  jump *label362 equal *tmp4 false                             ...
        label *label21                                               ...
   35:  return :moveTo*retaddr                                       CoreBuilder.mnd: void moveTo(x, y, radius)
        label *label2                                                CoreBuilder.mnd: void moveTo(x, y)
   36:  set :moveTo:x :moveTo.1:x                                    CoreBuilder.mnd: moveTo(x, y, REGULAR_RADIUS);
   37:  set :moveTo:y :moveTo.1:y                                    ...
   38:  set :moveTo:radius 5                                         ...
   39:  setaddr :moveTo*retaddr *label23                             ...
   40:  call *label1 *invalid :moveTo*retval                         ...
        label *label23                                               ...
   41:  return :moveTo.1*retaddr                                     CoreBuilder.mnd: void moveTo(x, y)
        label *label3                                                CoreBuilder.mnd: void moveToEmpty(x, y)
   42:  sensor *tmp9 @unit @firstItem                                CoreBuilder.mnd: if @unit.@firstItem != null then itemDrop(@air, 1000); end;
   43:  jump *label25 equal *tmp9 null                               ...
   44:  ucontrol itemDrop @air 1000 0 0 0                            ...
        label *label25                                               ...
   45:  set :moveTo.1:x :moveToEmpty:x                               CoreBuilder.mnd: moveTo(x, y);
   46:  set :moveTo.1:y :moveToEmpty:y                               ...
   47:  setaddr :moveTo.1*retaddr *label27                           ...
   48:  call *label2 *invalid :moveTo.1*retval                       ...
        label *label27                                               ...
   49:  sensor *tmp12 @unit @firstItem                               CoreBuilder.mnd: while @unit.@firstItem != null do
   50:  jump *label30 equal *tmp12 null                              ...
        label *label363                                              ...
   51:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
   52:  sensor *tmp12 @unit @firstItem                               CoreBuilder.mnd: while @unit.@firstItem != null do
   53:  jump *label363 notEqual *tmp12 null                          ...
        label *label30                                               ...
   54:  return :moveToEmpty*retaddr                                  CoreBuilder.mnd: void moveToEmpty(x, y)
        label *label4                                                CoreBuilder.mnd: void moveToBlock(block, radius)
   55:  sensor *tmp14 :moveToBlock:block @x                          CoreBuilder.mnd: moveTo(block.@x, block.@y, radius);
   56:  sensor *tmp15 :moveToBlock:block @y                          ...
   57:  set :moveTo:x *tmp14                                         ...
   58:  set :moveTo:y *tmp15                                         ...
   59:  set :moveTo:radius :moveToBlock:radius                       ...
   60:  setaddr :moveTo*retaddr *label32                             ...
   61:  call *label1 *invalid :moveTo*retval                         ...
        label *label32                                               ...
   62:  return :moveToBlock*retaddr                                  CoreBuilder.mnd: void moveToBlock(block, radius)
        label *label5                                                CoreBuilder.mnd: void depositItems(block, item, fromMining)
   63:  set .status3 "Depositing..."                                 CoreBuilder.mnd: status3 = text;
   64:  sensor *tmp16 @unit @firstItem                               CoreBuilder.mnd: if @unit.@firstItem == item then
   65:  jump *label35 notEqual *tmp16 :depositItems:item             ...
   66:  set *tmp21 5                                                 CoreBuilder.mnd: moveToBlock(block, fromMining && block == core ? DROP_MINING_RADIUS : REGULAR_RADIUS);
   67:  op equal *tmp19 :depositItems:block .core                    ...
   68:  op land *tmp20 :depositItems:fromMining *tmp19               ...
   69:  jump *label38 equal *tmp20 false                             ...
   70:  set *tmp21 7                                                 ...
        label *label38                                               ...
   71:  set :moveToBlock:block :depositItems:block                   ...
   72:  set :moveToBlock:radius *tmp21                               ...
   73:  setaddr :moveToBlock*retaddr *label39                        ...
   74:  call *label4 *invalid :moveToBlock*retval                    ...
        label *label39                                               ...
   75:  sensor :depositItems:cap :depositItems:block @itemCapacity   CoreBuilder.mnd: var cap = block.@itemCapacity;
        label *label40                                               CoreBuilder.mnd: do
   76:  ucontrol itemDrop :depositItems:block 30 0 0 0               CoreBuilder.mnd: itemDrop(block, capacity);
   77:  sensor *tmp23 :depositItems:block :depositItems:item         CoreBuilder.mnd: if block.sensor(item) >= cap then break; end;
   78:  jump *label36 greaterThanEq *tmp23 :depositItems:cap         ...
   79:  sensor *tmp26 @unit @firstItem                               CoreBuilder.mnd: while @unit.@firstItem != null;
   80:  jump *label40 notEqual *tmp26 null                           CoreBuilder.mnd: do
   81:  jump *label36 always 0 0                                     CoreBuilder.mnd: if @unit.@firstItem == item then
        label *label35                                               ...
   82:  sensor *tmp28 @unit @firstItem                               CoreBuilder.mnd: while @unit.@firstItem != null do
   83:  jump *label47 equal *tmp28 null                              ...
        label *label364                                              ...
   84:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
   85:  sensor *tmp28 @unit @firstItem                               CoreBuilder.mnd: while @unit.@firstItem != null do
   86:  jump *label364 notEqual *tmp28 null                          ...
        label *label47                                               ...
        label *label36                                               CoreBuilder.mnd: if @unit.@firstItem == item then
   87:  set .transportTarget 0                                       CoreBuilder.mnd: transportTarget = 0;
   88:  return :depositItems*retaddr                                 CoreBuilder.mnd: void depositItems(block, item, fromMining)
        label *label6                                                CoreBuilder.mnd: void locateOre(ore, out x, out y)
   89:  ulocate ore core true :locateOre:ore :locateOre:x :locateOre CoreBuilder.mnd: if !ulocate(:ore, ore, out x, out y) then
   90:  jump *label49 notEqual *tmp30 false                          ...
   91:  print "[salmon]Cannot locate "                               CoreBuilder.mnd: print("[salmon]", text);
   92:  print :locateOre:ore                                         ...
   93:  printflush message1                                          CoreBuilder.mnd: printflush(message1);
   94:  stop                                                         CoreBuilder.mnd: stopProcessor();
        label *label49                                               CoreBuilder.mnd: if !ulocate(:ore, ore, out x, out y) then
   95:  return :locateOre*retaddr                                    CoreBuilder.mnd: void locateOre(ore, out x, out y)
        label *label7                                                CoreBuilder.mnd: void mineOre(ore, amount, block)
   96:  set .transportTarget :mineOre:amount                         CoreBuilder.mnd: transportTarget = amount;
   97:  set .transportItem :mineOre:ore                              CoreBuilder.mnd: transportItem = ore;
   98:  set :locateOre:ore :mineOre:ore                              CoreBuilder.mnd: locateOre(ore, out x, out y);
   99:  setaddr :locateOre*retaddr *label53                          ...
  100:  call *label6 *invalid :locateOre*retval                      ...
        label *label53                                               ...
  101:  set :mineOre:x :locateOre:x                                  ...
  102:  set :mineOre:y :locateOre:y                                  ...
  103:  set :moveToEmpty:x :locateOre:x                              CoreBuilder.mnd: moveToEmpty(x, y);
  104:  set :moveToEmpty:y :locateOre:y                              ...
  105:  setaddr :moveToEmpty*retaddr *label54                        ...
  106:  call *label3 *invalid :moveToEmpty*retval                    ...
        label *label54                                               ...
  107:  set .status3 "Mining..."                                     CoreBuilder.mnd: status3 = text;
        label *label56                                               CoreBuilder.mnd: do
  108:  sensor :mineOre:item @unit @firstItem                        CoreBuilder.mnd: var item = @unit.@firstItem;
  109:  op notEqual *tmp35 :mineOre:item null                        CoreBuilder.mnd: if item != null && item != ore then break; end;
  110:  op notEqual *tmp36 :mineOre:item :mineOre:ore                ...
  111:  op land *tmp37 *tmp35 *tmp36                                 ...
  112:  jump *label58 notEqual *tmp37 false                          ...
  113:  ucontrol mine :mineOre:x :mineOre:y 0 0 0                    CoreBuilder.mnd: mine(x, y);
  114:  sensor *tmp39 @unit @totalItems                              CoreBuilder.mnd: while @unit.@totalItems < amount;
  115:  jump *label56 lessThan *tmp39 :mineOre:amount                CoreBuilder.mnd: do
        label *label58                                               ...
  116:  ucontrol unbind 0 0 0 0 0                                    CoreBuilder.mnd: unbind();
  117:  set :depositItems:block :mineOre:block                       CoreBuilder.mnd: depositItems(block, ore, true);
  118:  set :depositItems:item :mineOre:ore                          ...
  119:  set :depositItems:fromMining true                            ...
  120:  setaddr :depositItems*retaddr *label61                       ...
  121:  call *label5 *invalid :depositItems*retval                   ...
        label *label61                                               ...
  122:  return :mineOre*retaddr                                      CoreBuilder.mnd: void mineOre(ore, amount, block)
        label *label8                                                CoreBuilder.mnd: void mineOre(ore)
  123:  set :mineOre:ore :mineOre.1:ore                              CoreBuilder.mnd: mineOre(ore, capacity, core);
  124:  set :mineOre:amount 30                                       ...
  125:  set :mineOre:block .core                                     ...
  126:  setaddr :mineOre*retaddr *label63                            ...
  127:  call *label7 *invalid :mineOre*retval                        ...
        label *label63                                               ...
  128:  return :mineOre.1*retaddr                                    CoreBuilder.mnd: void mineOre(ore)
        label *label9                                                CoreBuilder.mnd: void fetchBlock(block, item)
  129:  sensor .transportTarget :fetchBlock:block @itemCapacity      CoreBuilder.mnd: transportTarget = block.@itemCapacity;
  130:  set .transportItem :fetchBlock:item                          CoreBuilder.mnd: transportItem = item;
  131:  set .status2 "Fetching "                                     CoreBuilder.mnd: status2 = text;
  132:  set .item2 :fetchBlock:item                                  CoreBuilder.mnd: item2 = item;
  133:  set .block2 :fetchBlock:block                                CoreBuilder.mnd: block2 = block;
  134:  sensor *tmp43 :fetchBlock:block @x                           CoreBuilder.mnd: moveToEmpty(block.@x, block.@y);
  135:  sensor *tmp44 :fetchBlock:block @y                           ...
  136:  set :moveToEmpty:x *tmp43                                    ...
  137:  set :moveToEmpty:y *tmp44                                    ...
  138:  setaddr :moveToEmpty*retaddr *label66                        ...
  139:  call *label3 *invalid :moveToEmpty*retval                    ...
        label *label66                                               ...
        label *label67                                               CoreBuilder.mnd: do
  140:  ucontrol itemTake :fetchBlock:block :fetchBlock:item 30 0 0  CoreBuilder.mnd: itemTake(block, item, capacity);
  141:  sensor :fetchBlock:unitItem @unit @firstItem                 CoreBuilder.mnd: var unitItem = @unit.@firstItem;
  142:  op notEqual *tmp46 :fetchBlock:unitItem null                 CoreBuilder.mnd: if unitItem != null and unitItem != item then
  143:  op notEqual *tmp47 :fetchBlock:unitItem :fetchBlock:item     ...
  144:  op land *tmp48 *tmp46 *tmp47                                 ...
  145:  jump *label70 equal *tmp48 false                             ...
  146:  ucontrol itemDrop @air 1000 0 0 0                            CoreBuilder.mnd: itemDrop(@air, 1000);
        label *label70                                               CoreBuilder.mnd: if unitItem != null and unitItem != item then
  147:  sensor *tmp50 @unit :fetchBlock:item                         CoreBuilder.mnd: while @unit.sensor(item) < capacity and block.sensor(item);
  148:  op lessThan *tmp51 *tmp50 30                                 ...
  149:  sensor *tmp52 :fetchBlock:block :fetchBlock:item             ...
  150:  op land *tmp53 *tmp51 *tmp52                                 ...
  151:  jump *label67 notEqual *tmp53 false                          CoreBuilder.mnd: do
  152:  set :depositItems:block .core                                CoreBuilder.mnd: depositItems(core, item, false);
  153:  set :depositItems:item :fetchBlock:item                      ...
  154:  set :depositItems:fromMining false                           ...
  155:  setaddr :depositItems*retaddr *label72                       ...
  156:  call *label5 *invalid :depositItems*retval                   ...
        label *label72                                               ...
  157:  return :fetchBlock*retaddr                                   CoreBuilder.mnd: void fetchBlock(block, item)
        label *label10                                               CoreBuilder.mnd: void supplyBlocks()
  158:  set :supplyBlocks:supplied false                             CoreBuilder.mnd: var supplied = false;
  159:  jump *label74 notEqual .unloader1 null                       CoreBuilder.mnd: if unloader1 == null then
  160:  sensor *tmp56 .core @graphite                                CoreBuilder.mnd: if core.@graphite < updatedGraphiteTarget then
  161:  jump *label76 greaterThanEq *tmp56 .updatedGraphiteTarget    ...
  162:  sensor *tmp59 .press @coal                                   CoreBuilder.mnd: if press.@coal < 5 then
  163:  jump *label78 greaterThanEq *tmp59 5                         ...
  164:  set .status1 "Meeting the graphite target"                   CoreBuilder.mnd: status1 = text;
  165:  set .status2 "Supplying "                                    CoreBuilder.mnd: status2 = text;
  166:  set .item2 @coal                                             CoreBuilder.mnd: item2 = item;
  167:  set .block2 .press                                           CoreBuilder.mnd: block2 = block;
  168:  sensor *tmp62 .press @itemCapacity                           CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  169:  sensor *tmp63 .press @coal                                   ...
  170:  op sub :supplyBlock:missing *tmp62 *tmp63                    ...
  171:  jump *label83 lessThanEq :supplyBlock:missing 0              CoreBuilder.mnd: if missing > 0 then
  172:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  173:  set :mineOre:amount :supplyBlock:missing                     ...
  174:  set :mineOre:block .press                                    ...
  175:  setaddr :mineOre*retaddr *label85                            ...
  176:  call *label7 *invalid :mineOre*retval                        ...
        label *label85                                               ...
        label *label83                                               CoreBuilder.mnd: if missing > 0 then
  177:  set :supplyBlocks:supplied true                              CoreBuilder.mnd: supplied = true;
        label *label78                                               CoreBuilder.mnd: if press.@coal < 5 then
        label *label76                                               CoreBuilder.mnd: if core.@graphite < updatedGraphiteTarget then
  178:  sensor *tmp67 .core @silicon                                 CoreBuilder.mnd: if core.@silicon < updatedSiliconTarget then
  179:  jump *label86 greaterThanEq *tmp67 .updatedSiliconTarget     ...
  180:  sensor *tmp70 .smelter @coal                                 CoreBuilder.mnd: if smelter.@coal < 5 then
  181:  jump *label88 greaterThanEq *tmp70 5                         ...
  182:  set .status1 "Meeting the silicon target (coal)"             CoreBuilder.mnd: status1 = text;
  183:  set .status2 "Supplying "                                    CoreBuilder.mnd: status2 = text;
  184:  set .item2 @coal                                             CoreBuilder.mnd: item2 = item;
  185:  set .block2 .smelter                                         CoreBuilder.mnd: block2 = block;
  186:  sensor *tmp73 .smelter @itemCapacity                         CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  187:  sensor *tmp74 .smelter @coal                                 ...
  188:  op sub :supplyBlock.1:missing *tmp73 *tmp74                  ...
  189:  jump *label93 lessThanEq :supplyBlock.1:missing 0            CoreBuilder.mnd: if missing > 0 then
  190:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  191:  set :mineOre:amount :supplyBlock.1:missing                   ...
  192:  set :mineOre:block .smelter                                  ...
  193:  setaddr :mineOre*retaddr *label95                            ...
  194:  call *label7 *invalid :mineOre*retval                        ...
        label *label95                                               ...
        label *label93                                               CoreBuilder.mnd: if missing > 0 then
  195:  set :supplyBlocks:supplied true                              CoreBuilder.mnd: supplied = true;
  196:  jump *label89 always 0 0                                     CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label88                                               ...
  197:  sensor *tmp78 .smelter @sand                                 CoreBuilder.mnd: elsif smelter.@sand < 5 then
  198:  jump *label96 greaterThanEq *tmp78 5                         ...
  199:  set .status1 "Meeting the silicon target (sand)"             CoreBuilder.mnd: status1 = text;
  200:  set .status2 "Supplying "                                    CoreBuilder.mnd: status2 = text;
  201:  set .item2 @sand                                             CoreBuilder.mnd: item2 = item;
  202:  set .block2 .smelter                                         CoreBuilder.mnd: block2 = block;
  203:  sensor *tmp81 .smelter @itemCapacity                         CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  204:  sensor *tmp82 .smelter @sand                                 ...
  205:  op sub :supplyBlock.2:missing *tmp81 *tmp82                  ...
  206:  jump *label101 lessThanEq :supplyBlock.2:missing 0           CoreBuilder.mnd: if missing > 0 then
  207:  set :mineOre:ore @sand                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  208:  set :mineOre:amount :supplyBlock.2:missing                   ...
  209:  set :mineOre:block .smelter                                  ...
  210:  setaddr :mineOre*retaddr *label103                           ...
  211:  call *label7 *invalid :mineOre*retval                        ...
        label *label103                                              ...
        label *label101                                              CoreBuilder.mnd: if missing > 0 then
  212:  set :supplyBlocks:supplied true                              CoreBuilder.mnd: supplied = true;
        label *label96                                               CoreBuilder.mnd: elsif smelter.@sand < 5 then
        label *label89                                               CoreBuilder.mnd: if smelter.@coal < 5 then
        label *label86                                               CoreBuilder.mnd: if core.@silicon < updatedSiliconTarget then
  213:  sensor *tmp86 .battery @totalPower                           CoreBuilder.mnd: if battery.@totalPower < powerTarget then
  214:  jump *label75 greaterThanEq *tmp86 .powerTarget              ...
  215:  set .status1 "Supplying generator"                           CoreBuilder.mnd: status1 = text;
  216:  set .status2 "Supplying "                                    CoreBuilder.mnd: status2 = text;
  217:  set .item2 @coal                                             CoreBuilder.mnd: item2 = item;
  218:  set .block2 .generator                                       CoreBuilder.mnd: block2 = block;
  219:  sensor *tmp89 .generator @itemCapacity                       CoreBuilder.mnd: var missing = block.@itemCapacity - block.sensor(ore);
  220:  sensor *tmp90 .generator @coal                               ...
  221:  op sub :supplyBlock.3:missing *tmp89 *tmp90                  ...
  222:  jump *label109 lessThanEq :supplyBlock.3:missing 0           CoreBuilder.mnd: if missing > 0 then
  223:  set :mineOre:ore @coal                                       CoreBuilder.mnd: mineOre(ore, missing, block);
  224:  set :mineOre:amount :supplyBlock.3:missing                   ...
  225:  set :mineOre:block .generator                                ...
  226:  setaddr :mineOre*retaddr *label111                           ...
  227:  call *label7 *invalid :mineOre*retval                        ...
        label *label111                                              ...
        label *label109                                              CoreBuilder.mnd: if missing > 0 then
  228:  set :supplyBlocks:supplied true                              CoreBuilder.mnd: supplied = true;
  229:  jump *label75 always 0 0                                     CoreBuilder.mnd: if unloader1 == null then
        label *label74                                               ...
  230:  jump *label112 equal .processor null                         CoreBuilder.mnd: elsif processor != null then
  231:  sensor *tmp96 .core @coal                                    CoreBuilder.mnd: if core.@coal < 10 then
  232:  jump *label114 greaterThanEq *tmp96 10                       ...
  233:  set .status1 "Supplying base"                                CoreBuilder.mnd: status1 = text;
  234:  set :mineOre.1:ore @coal                                     CoreBuilder.mnd: mineOre(@coal);
  235:  setaddr :mineOre.1*retaddr *label117                         ...
  236:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label117                                              ...
  237:  return :supplyBlocks*retaddr                                 CoreBuilder.mnd: return;
        label *label114                                              CoreBuilder.mnd: if core.@coal < 10 then
        label *label112                                              CoreBuilder.mnd: elsif processor != null then
        label *label75                                               CoreBuilder.mnd: if unloader1 == null then
  238:  sensor *tmp99 .titanium_drill @titanium                      CoreBuilder.mnd: if titanium_drill.@titanium < titaniumTrigger then
  239:  jump *label118 greaterThanEq *tmp99 .titaniumTrigger         ...
  240:  sensor *tmp102 .core @silicon                                CoreBuilder.mnd: if core.@silicon < siliconTarget then
  241:  jump *label120 greaterThanEq *tmp102 .siliconTarget          ...
  242:  set .status1 "Meeting the silicon target"                    CoreBuilder.mnd: status1 = text;
  243:  sensor :supplyBlocks:coal .core @coal                        CoreBuilder.mnd: var coal = core.@coal;
  244:  sensor :supplyBlocks:sand .core @sand                        CoreBuilder.mnd: var sand = core.@sand;
  245:  set *tmp108 @sand                                            CoreBuilder.mnd: var ore = coal < sand ? @coal : @sand;
  246:  jump *label124 greaterThanEq :supplyBlocks:coal :supplyBlock ...
  247:  set *tmp108 @coal                                            ...
        label *label124                                              ...
  248:  set .status2 "Mining "                                       CoreBuilder.mnd: status2 = text;
  249:  set .item2 *tmp108                                           CoreBuilder.mnd: item2 = item;
  250:  set .block2 "core"                                           CoreBuilder.mnd: block2 = block;
  251:  set :mineOre.1:ore *tmp108                                   CoreBuilder.mnd: mineOre(ore);
  252:  setaddr :mineOre.1*retaddr *label126                         ...
  253:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label126                                              ...
  254:  return :supplyBlocks*retaddr                                 CoreBuilder.mnd: if core.@silicon < siliconTarget then
        label *label120                                              ...
  255:  sensor *tmp109 .core @copper                                 CoreBuilder.mnd: elsif core.@copper < copperTarget then
  256:  jump *label127 greaterThanEq *tmp109 .copperTarget           ...
  257:  set .status1 "Meeting the copper target"                     CoreBuilder.mnd: status1 = text;
  258:  set .status2 "Mining "                                       CoreBuilder.mnd: status2 = text;
  259:  set .item2 @copper                                           CoreBuilder.mnd: item2 = item;
  260:  set .block2 "core"                                           CoreBuilder.mnd: block2 = block;
  261:  set :mineOre.1:ore @copper                                   CoreBuilder.mnd: mineOre(@copper);
  262:  setaddr :mineOre.1*retaddr *label131                         ...
  263:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label131                                              ...
  264:  return :supplyBlocks*retaddr                                 CoreBuilder.mnd: elsif core.@copper < copperTarget then
        label *label127                                              ...
  265:  sensor *tmp112 .core @lead                                   CoreBuilder.mnd: elsif core.@lead < leadTarget then
  266:  jump *label132 greaterThanEq *tmp112 .leadTarget             ...
  267:  set .status1 "Meeting the lead target"                       CoreBuilder.mnd: status1 = text;
  268:  set .status2 "Mining "                                       CoreBuilder.mnd: status2 = text;
  269:  set .item2 @lead                                             CoreBuilder.mnd: item2 = item;
  270:  set .block2 "core"                                           CoreBuilder.mnd: block2 = block;
  271:  set :mineOre.1:ore @lead                                     CoreBuilder.mnd: mineOre(@lead);
  272:  setaddr :mineOre.1*retaddr *label136                         ...
  273:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label136                                              ...
  274:  return :supplyBlocks*retaddr                                 CoreBuilder.mnd: elsif core.@lead < leadTarget then
        label *label132                                              ...
  275:  sensor *tmp115 .core @metaglass                              CoreBuilder.mnd: elsif core.@metaglass < metaglassTarget then
  276:  jump *label137 greaterThanEq *tmp115 .metaglassTarget        ...
  277:  set .status1 "Meeting the metaglass target"                  CoreBuilder.mnd: status1 = text;
  278:  set .status2 "Mining "                                       CoreBuilder.mnd: status2 = text;
  279:  set .item2 @sand                                             CoreBuilder.mnd: item2 = item;
  280:  set .block2 "core"                                           CoreBuilder.mnd: block2 = block;
  281:  set :mineOre.1:ore @sand                                     CoreBuilder.mnd: mineOre(@sand);
  282:  setaddr :mineOre.1*retaddr *label141                         ...
  283:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label141                                              ...
  284:  return :supplyBlocks*retaddr                                 CoreBuilder.mnd: elsif core.@metaglass < metaglassTarget then
        label *label137                                              ...
  285:  jump *label119 notEqual :supplyBlocks:supplied false         CoreBuilder.mnd: elsif !supplied then
  286:  set .status1 "Supplying base"                                CoreBuilder.mnd: status1 = text;
  287:  sensor :supplyBlocks:coal.1 .core @coal                      CoreBuilder.mnd: var coal = core.@coal;
  288:  sensor :supplyBlocks:sand.1 .core @sand                      CoreBuilder.mnd: var sand = core.@sand;
  289:  set *tmp123 @sand                                            CoreBuilder.mnd: var ore = coal <= sand ? @coal : @sand;
  290:  jump *label146 greaterThan :supplyBlocks:coal.1 :supplyBlock ...
  291:  set *tmp123 @coal                                            ...
        label *label146                                              ...
  292:  set .status2 "Mining "                                       CoreBuilder.mnd: status2 = text;
  293:  set .item2 *tmp123                                           CoreBuilder.mnd: item2 = item;
  294:  set .block2 "core"                                           CoreBuilder.mnd: block2 = block;
  295:  set :mineOre.1:ore *tmp123                                   CoreBuilder.mnd: mineOre(ore);
  296:  setaddr :mineOre.1*retaddr *label148                         ...
  297:  call *label8 *invalid :mineOre.1*retval                      ...
        label *label148                                              ...
  298:  return :supplyBlocks*retaddr                                 CoreBuilder.mnd: if titanium_drill.@titanium < titaniumTrigger then
        label *label118                                              ...
  299:  set .status1 "Fetching titanium"                             CoreBuilder.mnd: status1 = text;
  300:  set :fetchBlock:block .titanium_drill                        CoreBuilder.mnd: fetchBlock(titanium_drill, @titanium);
  301:  set :fetchBlock:item @titanium                               ...
  302:  setaddr :fetchBlock*retaddr *label150                        ...
  303:  call *label9 *invalid :fetchBlock*retval                     ...
        label *label150                                              ...
        label *label119                                              CoreBuilder.mnd: if titanium_drill.@titanium < titaniumTrigger then
  304:  return :supplyBlocks*retaddr                                 CoreBuilder.mnd: void supplyBlocks()
        label *label11                                               CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
  305:  set .nextBlock :meetTarget:block                             CoreBuilder.mnd: nextBlock = block;
  306:  set .copperTarget :meetTarget:copper                         CoreBuilder.mnd: copperTarget = copper;
  307:  set .leadTarget :meetTarget:lead                             CoreBuilder.mnd: leadTarget = lead;
  308:  set .graphiteTarget :meetTarget:graphite                     CoreBuilder.mnd: graphiteTarget = graphite;
  309:  set .siliconTarget :meetTarget:silicon                       CoreBuilder.mnd: siliconTarget = silicon;
  310:  set .titaniumTarget :meetTarget:titanium                     CoreBuilder.mnd: titaniumTarget = titanium;
  311:  set .metaglassTarget :meetTarget:metaglass                   CoreBuilder.mnd: metaglassTarget = metaglass;
  312:  op sign :meetTarget:count :meetTarget:copper 0               CoreBuilder.mnd: for var t in copper, lead, graphite, silicon, titanium, metaglass do count += sign(t); end;
  313:  op sign *tmp125 :meetTarget:lead 0                           ...
  314:  op add :meetTarget:count :meetTarget:count *tmp125           ...
  315:  op sign *tmp125 :meetTarget:graphite 0                       ...
  316:  op add :meetTarget:count :meetTarget:count *tmp125           ...
  317:  op sign *tmp125 :meetTarget:silicon 0                        ...
  318:  op add :meetTarget:count :meetTarget:count *tmp125           ...
  319:  op sign *tmp125 :meetTarget:titanium 0                       ...
  320:  op add :meetTarget:count :meetTarget:count *tmp125           ...
  321:  op sign *tmp125 :meetTarget:metaglass 0                      ...
  322:  op add :meetTarget:count :meetTarget:count *tmp125           ...
  323:  set .totalTargets :meetTarget:count                          CoreBuilder.mnd: totalTargets = count;
  324:  jump *label161 notEqual .processor null                      CoreBuilder.mnd: if processor == null then
  325:  op max .updatedGraphiteTarget 10 .graphiteTarget             CoreBuilder.mnd: updatedGraphiteTarget = max(10, graphiteTarget);
  326:  op max .updatedSiliconTarget 10 .siliconTarget               CoreBuilder.mnd: updatedSiliconTarget = max(10, siliconTarget);
  327:  jump *label162 always 0 0                                    CoreBuilder.mnd: if processor == null then
        label *label161                                              ...
  328:  op add *tmp130 .graphiteTarget 30                            CoreBuilder.mnd: processor.pressTarget = graphiteTarget + 30;
  329:  write *tmp130 .processor ".pressTarget"                      ...
  330:  op add *tmp131 .siliconTarget 30                             CoreBuilder.mnd: processor.smelterTarget = siliconTarget + 30;
  331:  write *tmp131 .processor ".smelterTarget"                    ...
  332:  op add *tmp132 .metaglassTarget 30                           CoreBuilder.mnd: processor.kilnTarget = metaglassTarget + 30;
  333:  write *tmp132 .processor ".kilnTarget"                       ...
        label *label162                                              CoreBuilder.mnd: if processor == null then
  334:  set .titaniumTrigger 100                                     CoreBuilder.mnd: titaniumTrigger = core.@titanium < titaniumTarget + 10 ? 7 : 100;
  335:  sensor *tmp133 .core @titanium                               ...
  336:  op add *tmp134 .titaniumTarget 10                            ...
  337:  jump *label164 greaterThanEq *tmp133 *tmp134                 ...
  338:  set .titaniumTrigger 7                                       ...
        label *label164                                              ...
  339:  sensor *tmp137 .core @copper                                 CoreBuilder.mnd: while core.@copper < copperTarget
  340:  op lessThan *tmp138 *tmp137 .copperTarget                    ...
  341:  sensor *tmp139 .core @lead                                   CoreBuilder.mnd: || core.@lead < leadTarget
  342:  op lessThan *tmp140 *tmp139 .leadTarget                      ...
  343:  op or *tmp142 *tmp138 *tmp140                                ...
  344:  op notEqual *tmp141 *tmp142 false                            ...
  345:  sensor *tmp143 .core @graphite                               CoreBuilder.mnd: || core.@graphite < graphiteTarget
  346:  op lessThan *tmp144 *tmp143 .graphiteTarget                  ...
  347:  op or *tmp146 *tmp141 *tmp144                                ...
  348:  op notEqual *tmp145 *tmp146 false                            ...
  349:  sensor *tmp147 .core @silicon                                CoreBuilder.mnd: || core.@silicon < siliconTarget
  350:  op lessThan *tmp148 *tmp147 .siliconTarget                   ...
  351:  op or *tmp150 *tmp145 *tmp148                                ...
  352:  op notEqual *tmp149 *tmp150 false                            ...
  353:  sensor *tmp151 .core @titanium                               CoreBuilder.mnd: || core.@titanium < titaniumTarget
  354:  op lessThan *tmp152 *tmp151 .titaniumTarget                  ...
  355:  op or *tmp154 *tmp149 *tmp152                                ...
  356:  op notEqual *tmp153 *tmp154 false                            ...
  357:  sensor *tmp155 .core @metaglass                              CoreBuilder.mnd: || core.@metaglass < metaglassTarget
  358:  op lessThan *tmp156 *tmp155 .metaglassTarget                 ...
  359:  op or *tmp158 *tmp153 *tmp156                                ...
  360:  jump *label167 equal *tmp158 false                           CoreBuilder.mnd: while core.@copper < copperTarget
        label *label365                                              ...
  361:  setaddr :supplyBlocks*retaddr *label168                      CoreBuilder.mnd: supplyBlocks();
  362:  call *label10 *invalid :supplyBlocks*retval                  ...
        label *label168                                              ...
  363:  sensor *tmp137 .core @copper                                 CoreBuilder.mnd: while core.@copper < copperTarget
  364:  op lessThan *tmp138 *tmp137 .copperTarget                    ...
  365:  sensor *tmp139 .core @lead                                   CoreBuilder.mnd: || core.@lead < leadTarget
  366:  op lessThan *tmp140 *tmp139 .leadTarget                      ...
  367:  op or *tmp142 *tmp138 *tmp140                                ...
  368:  op notEqual *tmp141 *tmp142 false                            ...
  369:  sensor *tmp143 .core @graphite                               CoreBuilder.mnd: || core.@graphite < graphiteTarget
  370:  op lessThan *tmp144 *tmp143 .graphiteTarget                  ...
  371:  op or *tmp146 *tmp141 *tmp144                                ...
  372:  op notEqual *tmp145 *tmp146 false                            ...
  373:  sensor *tmp147 .core @silicon                                CoreBuilder.mnd: || core.@silicon < siliconTarget
  374:  op lessThan *tmp148 *tmp147 .siliconTarget                   ...
  375:  op or *tmp150 *tmp145 *tmp148                                ...
  376:  op notEqual *tmp149 *tmp150 false                            ...
  377:  sensor *tmp151 .core @titanium                               CoreBuilder.mnd: || core.@titanium < titaniumTarget
  378:  op lessThan *tmp152 *tmp151 .titaniumTarget                  ...
  379:  op or *tmp154 *tmp149 *tmp152                                ...
  380:  op notEqual *tmp153 *tmp154 false                            ...
  381:  sensor *tmp155 .core @metaglass                              CoreBuilder.mnd: || core.@metaglass < metaglassTarget
  382:  op lessThan *tmp156 *tmp155 .metaglassTarget                 ...
  383:  op or *tmp158 *tmp153 *tmp156                                ...
  384:  jump *label365 notEqual *tmp158 false                        CoreBuilder.mnd: while core.@copper < copperTarget
        label *label167                                              ...
  385:  return :meetTarget*retaddr                                   CoreBuilder.mnd: void meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass)
        label *label12                                               CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
  386:  set :moveTo.1:x :buildBlockAt:x                              CoreBuilder.mnd: moveTo(x, y);
  387:  set :moveTo.1:y :buildBlockAt:y                              ...
  388:  setaddr :moveTo.1*retaddr *label170                          ...
  389:  call *label2 *invalid :moveTo.1*retval                       ...
        label *label170                                              ...
  390:  set .status3 "Building..."                                   CoreBuilder.mnd: status3 = text;
  391:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: var building = getBlock(x, y, out type);
  392:  jump *label172 equal :buildBlockAt:building null             CoreBuilder.mnd: if building != null then
  393:  jump *label174 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: if type == block then return building; end;
  394:  set :buildBlockAt*retval :buildBlockAt:building              ...
  395:  return :buildBlockAt*retaddr                                 ...
        label *label174                                              ...
  396:  jump *label176 equal :buildBlockAt:skipError false           CoreBuilder.mnd: if skipError then return null; end;
  397:  set :buildBlockAt*retval null                                ...
  398:  return :buildBlockAt*retaddr                                 ...
        label *label176                                              ...
  399:  print "[salmon]Cannot build at ({0}, {0}), tile already cont CoreBuilder.mnd: print("[salmon]", text);
  400:  format :buildBlockAt:x                                       ...
  401:  format :buildBlockAt:y                                       ...
  402:  print :buildBlockAt:building                                 ...
  403:  printflush message1                                          CoreBuilder.mnd: printflush(message1);
  404:  stop                                                         CoreBuilder.mnd: stopProcessor();
        label *label172                                              CoreBuilder.mnd: if building != null then
  405:  ucontrol build :buildBlockAt:x :buildBlockAt:y :buildBlockAt CoreBuilder.mnd: build(x, y, block, rotation, config);
  406:  wait 0.25                                                    CoreBuilder.mnd: wait(0.25);
        label *label179                                              CoreBuilder.mnd: do
  407:  ucontrol getBlock :buildBlockAt:x :buildBlockAt:y :buildBloc CoreBuilder.mnd: building = getBlock(x, y, out type);
  408:  jump *label181 equal :buildBlockAt:building null             CoreBuilder.mnd: if building == null then break; end;
  409:  jump *label179 notEqual :buildBlockAt:type :buildBlockAt:blo CoreBuilder.mnd: do
        label *label181                                              ...
  410:  set :buildBlockAt*retval :buildBlockAt:building              CoreBuilder.mnd: return building;
  411:  return :buildBlockAt*retaddr                                 CoreBuilder.mnd: def buildBlockAt(block, x, y, rotation, config, skipError)
        label *label13                                               CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
  412:  set :meetTarget:block :buildBlock:block                      CoreBuilder.mnd: meetTarget(block, copper, lead, graphite, silicon, titanium, metaglass);
  413:  set :meetTarget:copper :buildBlock:copper                    ...
  414:  set :meetTarget:lead :buildBlock:lead                        ...
  415:  set :meetTarget:graphite :buildBlock:graphite                ...
  416:  set :meetTarget:silicon :buildBlock:silicon                  ...
  417:  set :meetTarget:titanium :buildBlock:titanium                ...
  418:  set :meetTarget:metaglass :buildBlock:metaglass              ...
  419:  setaddr :meetTarget*retaddr *label185                        ...
  420:  call *label11 *invalid :meetTarget*retval                    ...
        label *label185                                              ...
  421:  set :buildBlockAt:block :buildBlock:block                    CoreBuilder.mnd: return buildBlockAt(block, x, y, rotation, config, false);
  422:  set :buildBlockAt:x :buildBlock:x                            ...
  423:  set :buildBlockAt:y :buildBlock:y                            ...
  424:  set :buildBlockAt:rotation :buildBlock:rotation              ...
  425:  set :buildBlockAt:config :buildBlock:config                  ...
  426:  set :buildBlockAt:skipError false                            ...
  427:  setaddr :buildBlockAt*retaddr *label186                      ...
  428:  call *label12 *invalid :buildBlockAt*retval                  ...
        label *label186                                              ...
  429:  set :buildBlock*retval :buildBlockAt*retval                  ...
  430:  return :buildBlock*retaddr                                   CoreBuilder.mnd: def buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config)
        label *label14                                               CoreBuilder.mnd: def moveRandom(distance)
  431:  op rand :moveRandom:angle 360 0                              CoreBuilder.mnd: var angle = rand(360);
  432:  sensor *tmp172 @unit @x                                      CoreBuilder.mnd: moveTo(@unit.@x + sin(angle) * distance, @unit.@y + cos(angle) * distance);
  433:  op sin *tmp173 :moveRandom:angle 0                           ...
  434:  op mul *tmp174 *tmp173 :moveRandom:distance                  ...
  435:  op add *tmp175 *tmp172 *tmp174                               ...
  436:  sensor *tmp176 @unit @y                                      ...
  437:  op cos *tmp177 :moveRandom:angle 0                           ...
  438:  op mul *tmp178 *tmp177 :moveRandom:distance                  ...
  439:  op add *tmp179 *tmp176 *tmp178                               ...
  440:  set :moveTo.1:x *tmp175                                      ...
  441:  set :moveTo.1:y *tmp179                                      ...
  442:  setaddr :moveTo.1*retaddr *label188                          ...
  443:  call *label2 *invalid :moveTo.1*retval                       ...
        label *label188                                              ...
  444:  return :moveRandom*retaddr                                   CoreBuilder.mnd: def moveRandom(distance)
        label *label0                                                CoreBuilder.mnd: remote void buildCore()
        label *label190                                              CoreBuilder.mnd: do
  445:  ubind @poly                                                  CoreBuilder.mnd: ubind(@poly);
  446:  ulocate building core false @copper .coreX .coreY 0 .core    CoreBuilder.mnd: core = ulocate(:building, :core, false, out coreX, out coreY);
  447:  jump *label190 equal .core null                              CoreBuilder.mnd: do
  448:  op add :buildBlockFromCfg:x .coreX -1.5                      CoreBuilder.mnd: var x = coreX + offsetX;
  449:  op add :buildBlockFromCfg:y .coreY 2.5                       CoreBuilder.mnd: var y = coreY + offsetY;
  450:  set :buildBlock:block @graphite-press                        CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  451:  set :buildBlock:x :buildBlockFromCfg:x                       ...
  452:  set :buildBlock:y :buildBlockFromCfg:y                       ...
  453:  set :buildBlock:copper 75                                    ...
  454:  set :buildBlock:lead 30                                      ...
  455:  set :buildBlock:graphite 0                                   ...
  456:  set :buildBlock:silicon 0                                    ...
  457:  set :buildBlock:titanium 0                                   ...
  458:  set :buildBlock:metaglass 0                                  ...
  459:  set :buildBlock:rotation 0                                   ...
  460:  set :buildBlock:config null                                  ...
  461:  setaddr :buildBlock*retaddr *label496                        ...
  462:  call *label13 *invalid :buildBlock*retval                    ...
        label *label496                                              ...
  463:  set .press :buildBlock*retval                                CoreBuilder.mnd: press = buildBlockFromCfg(ref PRESS);
  464:  set :buildBlockFromCfg.1:x .coreX                            CoreBuilder.mnd: var x = coreX + offsetX;
  465:  op add :buildBlockFromCfg.1:y .coreY 4                       CoreBuilder.mnd: var y = coreY + offsetY;
  466:  set :buildBlock:block @battery                               CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  467:  set :buildBlock:x :buildBlockFromCfg.1:x                     ...
  468:  set :buildBlock:y :buildBlockFromCfg.1:y                     ...
  469:  set :buildBlock:copper 5                                     ...
  470:  set :buildBlock:lead 20                                      ...
  471:  set :buildBlock:graphite 0                                   ...
  472:  set :buildBlock:silicon 0                                    ...
  473:  set :buildBlock:titanium 0                                   ...
  474:  set :buildBlock:metaglass 0                                  ...
  475:  set :buildBlock:rotation 0                                   ...
  476:  set :buildBlock:config null                                  ...
  477:  setaddr :buildBlock*retaddr *label502                        ...
  478:  call *label13 *invalid :buildBlock*retval                    ...
        label *label502                                              ...
  479:  set .battery :buildBlock*retval                              CoreBuilder.mnd: battery = buildBlockFromCfg(ref BATTERY1);
  480:  set :buildBlockFromCfg.2:x .coreX                            CoreBuilder.mnd: var x = coreX + offsetX;
  481:  op add :buildBlockFromCfg.2:y .coreY 3                       CoreBuilder.mnd: var y = coreY + offsetY;
  482:  set :buildBlock:block @combustion-generator                  CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  483:  set :buildBlock:x :buildBlockFromCfg.2:x                     ...
  484:  set :buildBlock:y :buildBlockFromCfg.2:y                     ...
  485:  set :buildBlock:copper 25                                    ...
  486:  set :buildBlock:lead 15                                      ...
  487:  set :buildBlock:graphite 0                                   ...
  488:  set :buildBlock:silicon 0                                    ...
  489:  set :buildBlock:titanium 0                                   ...
  490:  set :buildBlock:metaglass 0                                  ...
  491:  set :buildBlock:rotation 0                                   ...
  492:  set :buildBlock:config null                                  ...
  493:  setaddr :buildBlock*retaddr *label508                        ...
  494:  call *label13 *invalid :buildBlock*retval                    ...
        label *label508                                              ...
  495:  set .generator :buildBlock*retval                            CoreBuilder.mnd: generator = buildBlockFromCfg(ref GENERATOR);
  496:  set .powerTarget 400                                         CoreBuilder.mnd: powerTarget = 400;
  497:  op add :buildBlockFromCfg.3:x .coreX -1                      CoreBuilder.mnd: var x = coreX + offsetX;
  498:  op add :buildBlockFromCfg.3:y .coreY 4                       CoreBuilder.mnd: var y = coreY + offsetY;
  499:  set :buildBlock:block @battery                               CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  500:  set :buildBlock:x :buildBlockFromCfg.3:x                     ...
  501:  set :buildBlock:y :buildBlockFromCfg.3:y                     ...
  502:  set :buildBlock:copper 5                                     ...
  503:  set :buildBlock:lead 20                                      ...
  504:  set :buildBlock:graphite 0                                   ...
  505:  set :buildBlock:silicon 0                                    ...
  506:  set :buildBlock:titanium 0                                   ...
  507:  set :buildBlock:metaglass 0                                  ...
  508:  set :buildBlock:rotation 0                                   ...
  509:  set :buildBlock:config null                                  ...
  510:  setaddr :buildBlock*retaddr *label436                        ...
  511:  call *label13 *invalid :buildBlock*retval                    ...
        label *label436                                              ...
  512:  op add :buildBlockFromCfg.4:x .coreX 1.5                     CoreBuilder.mnd: var x = coreX + offsetX;
  513:  op add :buildBlockFromCfg.4:y .coreY 2.5                     CoreBuilder.mnd: var y = coreY + offsetY;
  514:  set :buildBlock:block @silicon-smelter                       CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  515:  set :buildBlock:x :buildBlockFromCfg.4:x                     ...
  516:  set :buildBlock:y :buildBlockFromCfg.4:y                     ...
  517:  set :buildBlock:copper 30                                    ...
  518:  set :buildBlock:lead 25                                      ...
  519:  set :buildBlock:graphite 0                                   ...
  520:  set :buildBlock:silicon 0                                    ...
  521:  set :buildBlock:titanium 0                                   ...
  522:  set :buildBlock:metaglass 0                                  ...
  523:  set :buildBlock:rotation 0                                   ...
  524:  set :buildBlock:config null                                  ...
  525:  setaddr :buildBlock*retaddr *label514                        ...
  526:  call *label13 *invalid :buildBlock*retval                    ...
        label *label514                                              ...
  527:  set .smelter :buildBlock*retval                              CoreBuilder.mnd: smelter = buildBlockFromCfg(ref SMELTER);
  528:  set :buildTitaniumDrillCfg:attempts 0                        CoreBuilder.mnd: var attempts = 0;
        label *label225                                              CoreBuilder.mnd: while true do
  529:  set :meetTarget:block @pneumatic-drill                       CoreBuilder.mnd: meetTarget(
  530:  set :meetTarget:copper 18                                    ...
  531:  set :meetTarget:lead 0                                       ...
  532:  set :meetTarget:graphite 10                                  ...
  533:  set :meetTarget:silicon 0                                    ...
  534:  set :meetTarget:titanium 0                                   ...
  535:  set :meetTarget:metaglass 0                                  ...
  536:  setaddr :meetTarget*retaddr *label228                        ...
  537:  call *label11 *invalid :meetTarget*retval                    ...
        label *label228                                              ...
  538:  set :locateOreAway:ore @titanium                             CoreBuilder.mnd: locateOreAway(@titanium, out x, out y);
  539:  set :locateOreAway:distance 25                               CoreBuilder.mnd: var distance = 25;
        label *label230                                              CoreBuilder.mnd: do
  540:  set :locateOre:ore :locateOreAway:ore                        CoreBuilder.mnd: locateOre(ore, out x, out y);
  541:  setaddr :locateOre*retaddr *label233                         ...
  542:  call *label6 *invalid :locateOre*retval                      ...
        label *label233                                              ...
  543:  set :locateOreAway:x :locateOre:x                            ...
  544:  set :locateOreAway:y :locateOre:y                            ...
  545:  op sub *tmp206 :locateOre:x .coreX                           CoreBuilder.mnd: if abs(x - coreX) < 8 and abs(y - coreY) < 8 then
  546:  op abs *tmp207 *tmp206 0                                     ...
  547:  op lessThan *tmp208 *tmp207 8                                ...
  548:  op sub *tmp209 :locateOre:y .coreY                           ...
  549:  op abs *tmp210 *tmp209 0                                     ...
  550:  op lessThan *tmp211 *tmp210 8                                ...
  551:  op land *tmp212 *tmp208 *tmp211                              ...
  552:  jump *label232 equal *tmp212 false                           ...
  553:  set :moveRandom:distance :locateOreAway:distance             CoreBuilder.mnd: moveRandom(distance);
  554:  setaddr :moveRandom*retaddr *label236                        ...
  555:  call *label14 *invalid :moveRandom*retval                    ...
        label *label236                                              ...
  556:  jump *label230 always 0 0                                    CoreBuilder.mnd: if abs(x - coreX) < 8 and abs(y - coreY) < 8 then
        label *label232                                              CoreBuilder.mnd: do
  557:  set :buildTitaniumDrillCfg:x :locateOreAway:x                CoreBuilder.mnd: locateOreAway(@titanium, out x, out y);
  558:  set :buildTitaniumDrillCfg:y :locateOreAway:y                ...
  559:  set :moveTo.1:x :locateOreAway:x                             CoreBuilder.mnd: moveTo(x, y);
  560:  set :moveTo.1:y :locateOreAway:y                             ...
  561:  setaddr :moveTo.1*retaddr *label237                          ...
  562:  call *label2 *invalid :moveTo.1*retval                       ...
        label *label237                                              ...
  563:  set :buildTitaniumDrillCfg:best 0                            CoreBuilder.mnd: var best = 0, bx = 0, by = 0;
  564:  set :buildTitaniumDrillCfg:bx 0                              ...
  565:  set :buildTitaniumDrillCfg:by 0                              ...
  566:  op add :checkOre:x :buildTitaniumDrillCfg:x 1                CoreBuilder.mnd: checkOre(x + xx, y, in out count);
  567:  set :checkOre:count 0                                        ...
  568:  ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 : CoreBuilder.mnd: getBlock(x, y, , out floor);
  569:  jump *label367 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == @ore-titanium then count++; end;
  570:  set :checkOre:count 1                                        ...
        label *label367                                              ...
  571:  op add *tmp222 :buildTitaniumDrillCfg:y 1                    CoreBuilder.mnd: checkOre(x, y + yy, in out count);
  572:  set :checkOre.1:count :checkOre:count                        ...
  573:  ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  574:  jump *label370 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == @ore-titanium then count++; end;
  575:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label370                                              ...
  576:  set :checkOre.2:count :checkOre.1:count                      CoreBuilder.mnd: checkOre(x + xx, y + yy, in out count);
  577:  ucontrol getBlock :checkOre:x *tmp222 0 0 :checkOre.2:floor  CoreBuilder.mnd: getBlock(x, y, , out floor);
  578:  jump *label373 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == @ore-titanium then count++; end;
  579:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label373                                              ...
  580:  jump *label378 lessThanEq :checkOre.2:count 0                CoreBuilder.mnd: if count > best then
  581:  set :buildTitaniumDrillCfg:bx 1                              CoreBuilder.mnd: bx = xx;
  582:  set :buildTitaniumDrillCfg:by 1                              CoreBuilder.mnd: by = yy;
  583:  set :buildTitaniumDrillCfg:best :checkOre.2:count            CoreBuilder.mnd: best = count;
  584:  jump *label240 greaterThanEq :checkOre.2:count 4             CoreBuilder.mnd: if count >= 4 then break; end;
        label *label378                                              CoreBuilder.mnd: if count > best then
  585:  op add :checkOre:x :buildTitaniumDrillCfg:x 1                CoreBuilder.mnd: checkOre(x + xx, y, in out count);
  586:  set :checkOre:count 0                                        ...
  587:  ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 : CoreBuilder.mnd: getBlock(x, y, , out floor);
  588:  jump *label384 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == @ore-titanium then count++; end;
  589:  set :checkOre:count 1                                        ...
        label *label384                                              ...
  590:  op add *tmp222 :buildTitaniumDrillCfg:y -1                   CoreBuilder.mnd: checkOre(x, y + yy, in out count);
  591:  set :checkOre.1:count :checkOre:count                        ...
  592:  ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  593:  jump *label387 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == @ore-titanium then count++; end;
  594:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label387                                              ...
  595:  set :checkOre.2:count :checkOre.1:count                      CoreBuilder.mnd: checkOre(x + xx, y + yy, in out count);
  596:  ucontrol getBlock :checkOre:x *tmp222 0 0 :checkOre.2:floor  CoreBuilder.mnd: getBlock(x, y, , out floor);
  597:  jump *label390 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == @ore-titanium then count++; end;
  598:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label390                                              ...
  599:  jump *label395 lessThanEq :checkOre.2:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  600:  set :buildTitaniumDrillCfg:bx 1                              CoreBuilder.mnd: bx = xx;
  601:  set :buildTitaniumDrillCfg:by -1                             CoreBuilder.mnd: by = yy;
  602:  set :buildTitaniumDrillCfg:best :checkOre.2:count            CoreBuilder.mnd: best = count;
  603:  jump *label240 greaterThanEq :checkOre.2:count 4             CoreBuilder.mnd: if count >= 4 then break; end;
        label *label395                                              CoreBuilder.mnd: if count > best then
  604:  op add :checkOre:x :buildTitaniumDrillCfg:x -1               CoreBuilder.mnd: checkOre(x + xx, y, in out count);
  605:  set :checkOre:count 0                                        ...
  606:  ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 : CoreBuilder.mnd: getBlock(x, y, , out floor);
  607:  jump *label401 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == @ore-titanium then count++; end;
  608:  set :checkOre:count 1                                        ...
        label *label401                                              ...
  609:  op add *tmp222 :buildTitaniumDrillCfg:y 1                    CoreBuilder.mnd: checkOre(x, y + yy, in out count);
  610:  set :checkOre.1:count :checkOre:count                        ...
  611:  ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  612:  jump *label404 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == @ore-titanium then count++; end;
  613:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label404                                              ...
  614:  set :checkOre.2:count :checkOre.1:count                      CoreBuilder.mnd: checkOre(x + xx, y + yy, in out count);
  615:  ucontrol getBlock :checkOre:x *tmp222 0 0 :checkOre.2:floor  CoreBuilder.mnd: getBlock(x, y, , out floor);
  616:  jump *label407 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == @ore-titanium then count++; end;
  617:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label407                                              ...
  618:  jump *label412 lessThanEq :checkOre.2:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  619:  set :buildTitaniumDrillCfg:bx -1                             CoreBuilder.mnd: bx = xx;
  620:  set :buildTitaniumDrillCfg:by 1                              CoreBuilder.mnd: by = yy;
  621:  set :buildTitaniumDrillCfg:best :checkOre.2:count            CoreBuilder.mnd: best = count;
  622:  jump *label240 greaterThanEq :checkOre.2:count 4             CoreBuilder.mnd: if count >= 4 then break; end;
        label *label412                                              CoreBuilder.mnd: if count > best then
  623:  op add :checkOre:x :buildTitaniumDrillCfg:x -1               CoreBuilder.mnd: checkOre(x + xx, y, in out count);
  624:  set :checkOre:count 0                                        ...
  625:  ucontrol getBlock :checkOre:x :buildTitaniumDrillCfg:y 0 0 : CoreBuilder.mnd: getBlock(x, y, , out floor);
  626:  jump *label418 notEqual :checkOre:floor @ore-titanium        CoreBuilder.mnd: if floor == @ore-titanium then count++; end;
  627:  set :checkOre:count 1                                        ...
        label *label418                                              ...
  628:  op add *tmp222 :buildTitaniumDrillCfg:y -1                   CoreBuilder.mnd: checkOre(x, y + yy, in out count);
  629:  set :checkOre.1:count :checkOre:count                        ...
  630:  ucontrol getBlock :buildTitaniumDrillCfg:x *tmp222 0 0 :chec CoreBuilder.mnd: getBlock(x, y, , out floor);
  631:  jump *label421 notEqual :checkOre.1:floor @ore-titanium      CoreBuilder.mnd: if floor == @ore-titanium then count++; end;
  632:  op add :checkOre.1:count :checkOre:count 1                   ...
        label *label421                                              ...
  633:  set :checkOre.2:count :checkOre.1:count                      CoreBuilder.mnd: checkOre(x + xx, y + yy, in out count);
  634:  ucontrol getBlock :checkOre:x *tmp222 0 0 :checkOre.2:floor  CoreBuilder.mnd: getBlock(x, y, , out floor);
  635:  jump *label424 notEqual :checkOre.2:floor @ore-titanium      CoreBuilder.mnd: if floor == @ore-titanium then count++; end;
  636:  op add :checkOre.2:count :checkOre.1:count 1                 ...
        label *label424                                              ...
  637:  jump *label429 lessThanEq :checkOre.2:count :buildTitaniumDr CoreBuilder.mnd: if count > best then
  638:  set :buildTitaniumDrillCfg:bx -1                             CoreBuilder.mnd: bx = xx;
  639:  set :buildTitaniumDrillCfg:by -1                             CoreBuilder.mnd: by = yy;
  640:  set :buildTitaniumDrillCfg:best :checkOre.2:count            CoreBuilder.mnd: best = count;
        label *label429                                              CoreBuilder.mnd: if count > best then
        label *label240                                              CoreBuilder.mnd: for var xx in 1, 1, -1, -1; var yy in 1, -1, 1, -1 do
  641:  jump *label258 lessThanEq :buildTitaniumDrillCfg:best 0      CoreBuilder.mnd: if best > 0 then
  642:  op div *tmp243 :buildTitaniumDrillCfg:bx 2                   CoreBuilder.mnd: bx = x + bx / 2;
  643:  op add :buildTitaniumDrillCfg:bx :buildTitaniumDrillCfg:x *t ...
  644:  op div *tmp245 :buildTitaniumDrillCfg:by 2                   CoreBuilder.mnd: by = y + by / 2;
  645:  op add :buildTitaniumDrillCfg:by :buildTitaniumDrillCfg:y *t ...
  646:  set :buildBlockAt:block @pneumatic-drill                     CoreBuilder.mnd: var result = buildBlockAt(@pneumatic-drill, bx, by, null, 0, true);
  647:  set :buildBlockAt:x :buildTitaniumDrillCfg:bx                ...
  648:  set :buildBlockAt:y :buildTitaniumDrillCfg:by                ...
  649:  set :buildBlockAt:rotation null                              ...
  650:  set :buildBlockAt:config 0                                   ...
  651:  set :buildBlockAt:skipError true                             ...
  652:  setaddr :buildBlockAt*retaddr *label260                      ...
  653:  call *label12 *invalid :buildBlockAt*retval                  ...
        label *label260                                              ...
  654:  jump *label261 equal :buildBlockAt*retval null               CoreBuilder.mnd: if result != null then return result; end;
  655:  set *tmp204 :buildBlockAt*retval                             ...
  656:  jump *label224 always 0 0                                    ...
        label *label261                                              ...
  657:  ucontrol build :buildTitaniumDrillCfg:x :buildTitaniumDrillC CoreBuilder.mnd: build(x, y, @conveyor, 0, null);
        label *label258                                              CoreBuilder.mnd: if best > 0 then
  658:  op add :buildTitaniumDrillCfg:attempts :buildTitaniumDrillCf CoreBuilder.mnd: if ++attempts > 5 then
  659:  jump *label225 lessThanEq :buildTitaniumDrillCfg:attempts 5  ...
  660:  set :moveRandom:distance 40                                  CoreBuilder.mnd: moveRandom(40);
  661:  setaddr :moveRandom*retaddr *label265                        ...
  662:  call *label14 *invalid :moveRandom*retval                    ...
        label *label265                                              ...
  663:  set :buildTitaniumDrillCfg:attempts 0                        CoreBuilder.mnd: attempts = 0;
  664:  jump *label225 always 0 0                                    CoreBuilder.mnd: while true do
        label *label224                                              CoreBuilder.mnd: buildTitaniumDrillCfg(ref PNEU_DRILL);
  665:  set .titanium_drill *tmp204                                  CoreBuilder.mnd: titanium_drill = buildTitaniumDrill();
  666:  set :buildBlockFromCfg.5:x .coreX                            CoreBuilder.mnd: var x = coreX + offsetX;
  667:  op add :buildBlockFromCfg.5:y .coreY 2                       CoreBuilder.mnd: var y = coreY + offsetY;
  668:  set :buildBlock:block @unloader                              CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  669:  set :buildBlock:x :buildBlockFromCfg.5:x                     ...
  670:  set :buildBlock:y :buildBlockFromCfg.5:y                     ...
  671:  set :buildBlock:copper 0                                     ...
  672:  set :buildBlock:lead 0                                       ...
  673:  set :buildBlock:graphite 0                                   ...
  674:  set :buildBlock:silicon 30                                   ...
  675:  set :buildBlock:titanium 25                                  ...
  676:  set :buildBlock:metaglass 0                                  ...
  677:  set :buildBlock:rotation 0                                   ...
  678:  set :buildBlock:config null                                  ...
  679:  setaddr :buildBlock*retaddr *label520                        ...
  680:  call *label13 *invalid :buildBlock*retval                    ...
        label *label520                                              ...
  681:  set .unloader1 :buildBlock*retval                            CoreBuilder.mnd: unloader1 = buildBlockFromCfg(ref UNLOADER1);
  682:  op add :buildBlockFromCfg.6:x .coreX -1                      CoreBuilder.mnd: var x = coreX + offsetX;
  683:  op add :buildBlockFromCfg.6:y .coreY -2                      CoreBuilder.mnd: var y = coreY + offsetY;
  684:  set :buildBlock:block @power-node                            CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  685:  set :buildBlock:x :buildBlockFromCfg.6:x                     ...
  686:  set :buildBlock:y :buildBlockFromCfg.6:y                     ...
  687:  set :buildBlock:copper 2                                     ...
  688:  set :buildBlock:lead 6                                       ...
  689:  set :buildBlock:graphite 0                                   ...
  690:  set :buildBlock:silicon 0                                    ...
  691:  set :buildBlock:titanium 0                                   ...
  692:  set :buildBlock:metaglass 0                                  ...
  693:  set :buildBlock:rotation 0                                   ...
  694:  set :buildBlock:config null                                  ...
  695:  setaddr :buildBlock*retaddr *label442                        ...
  696:  call *label13 *invalid :buildBlock*retval                    ...
        label *label442                                              ...
  697:  op add :buildBlockFromCfg.7:x .coreX 1                       CoreBuilder.mnd: var x = coreX + offsetX;
  698:  op add :buildBlockFromCfg.7:y .coreY 4                       CoreBuilder.mnd: var y = coreY + offsetY;
  699:  set :buildBlock:block @micro-processor                       CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  700:  set :buildBlock:x :buildBlockFromCfg.7:x                     ...
  701:  set :buildBlock:y :buildBlockFromCfg.7:y                     ...
  702:  set :buildBlock:copper 90                                    ...
  703:  set :buildBlock:lead 50                                      ...
  704:  set :buildBlock:graphite 0                                   ...
  705:  set :buildBlock:silicon 50                                   ...
  706:  set :buildBlock:titanium 0                                   ...
  707:  set :buildBlock:metaglass 0                                  ...
  708:  set :buildBlock:rotation 0                                   ...
  709:  set :buildBlock:config processor1                            ...
  710:  setaddr :buildBlock*retaddr *label526                        ...
  711:  call *label13 *invalid :buildBlock*retval                    ...
        label *label526                                              ...
  712:  set .processor :buildBlock*retval                            CoreBuilder.mnd: processor = buildBlockFromCfg(ref PROCESSOR);
  713:  op add :buildBlockFromCfg.8:x .coreX -4                      CoreBuilder.mnd: var x = coreX + offsetX;
  714:  op add :buildBlockFromCfg.8:y .coreY -1                      CoreBuilder.mnd: var y = coreY + offsetY;
  715:  set :buildBlock:block @air-factory                           CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  716:  set :buildBlock:x :buildBlockFromCfg.8:x                     ...
  717:  set :buildBlock:y :buildBlockFromCfg.8:y                     ...
  718:  set :buildBlock:copper 60                                    ...
  719:  set :buildBlock:lead 70                                      ...
  720:  set :buildBlock:graphite 0                                   ...
  721:  set :buildBlock:silicon 0                                    ...
  722:  set :buildBlock:titanium 0                                   ...
  723:  set :buildBlock:metaglass 0                                  ...
  724:  set :buildBlock:rotation 3                                   ...
  725:  set :buildBlock:config @mono                                 ...
  726:  setaddr :buildBlock*retaddr *label448                        ...
  727:  call *label13 *invalid :buildBlock*retval                    ...
        label *label448                                              ...
  728:  op add :buildBlockFromCfg.9:x .coreX -2                      CoreBuilder.mnd: var x = coreX + offsetX;
  729:  op add :buildBlockFromCfg.9:y .coreY 1                       CoreBuilder.mnd: var y = coreY + offsetY;
  730:  set :buildBlock:block @unloader                              CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  731:  set :buildBlock:x :buildBlockFromCfg.9:x                     ...
  732:  set :buildBlock:y :buildBlockFromCfg.9:y                     ...
  733:  set :buildBlock:copper 0                                     ...
  734:  set :buildBlock:lead 0                                       ...
  735:  set :buildBlock:graphite 0                                   ...
  736:  set :buildBlock:silicon 30                                   ...
  737:  set :buildBlock:titanium 25                                  ...
  738:  set :buildBlock:metaglass 0                                  ...
  739:  set :buildBlock:rotation 0                                   ...
  740:  set :buildBlock:config null                                  ...
  741:  setaddr :buildBlock*retaddr *label454                        ...
  742:  call *label13 *invalid :buildBlock*retval                    ...
        label *label454                                              ...
  743:  op add :buildBlockFromCfg.10:x .coreX -3                     CoreBuilder.mnd: var x = coreX + offsetX;
  744:  op add :buildBlockFromCfg.10:y .coreY 1                      CoreBuilder.mnd: var y = coreY + offsetY;
  745:  set :buildBlock:block @sorter                                CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  746:  set :buildBlock:x :buildBlockFromCfg.10:x                    ...
  747:  set :buildBlock:y :buildBlockFromCfg.10:y                    ...
  748:  set :buildBlock:copper 2                                     ...
  749:  set :buildBlock:lead 2                                       ...
  750:  set :buildBlock:graphite 0                                   ...
  751:  set :buildBlock:silicon 0                                    ...
  752:  set :buildBlock:titanium 0                                   ...
  753:  set :buildBlock:metaglass 0                                  ...
  754:  set :buildBlock:rotation 0                                   ...
  755:  set :buildBlock:config @coal                                 ...
  756:  setaddr :buildBlock*retaddr *label460                        ...
  757:  call *label13 *invalid :buildBlock*retval                    ...
        label *label460                                              ...
  758:  write @mono .processor ".unitToProduce"                      CoreBuilder.mnd: processor.unitToProduce = @mono;
  759:  op add :buildBlockFromCfg.11:x .coreX 2                      CoreBuilder.mnd: var x = coreX + offsetX;
  760:  set :buildBlockFromCfg.11:y .coreY                           CoreBuilder.mnd: var y = coreY + offsetY;
  761:  set :buildBlock:block @unloader                              CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  762:  set :buildBlock:x :buildBlockFromCfg.11:x                    ...
  763:  set :buildBlock:y :buildBlockFromCfg.11:y                    ...
  764:  set :buildBlock:copper 0                                     ...
  765:  set :buildBlock:lead 0                                       ...
  766:  set :buildBlock:graphite 0                                   ...
  767:  set :buildBlock:silicon 30                                   ...
  768:  set :buildBlock:titanium 25                                  ...
  769:  set :buildBlock:metaglass 0                                  ...
  770:  set :buildBlock:rotation 0                                   ...
  771:  set :buildBlock:config null                                  ...
  772:  setaddr :buildBlock*retaddr *label466                        ...
  773:  call *label13 *invalid :buildBlock*retval                    ...
        label *label466                                              ...
  774:  op add :buildBlockFromCfg.12:x .coreX 3.5                    CoreBuilder.mnd: var x = coreX + offsetX;
  775:  op add :buildBlockFromCfg.12:y .coreY 0.5                    CoreBuilder.mnd: var y = coreY + offsetY;
  776:  set :buildBlock:block @kiln                                  CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  777:  set :buildBlock:x :buildBlockFromCfg.12:x                    ...
  778:  set :buildBlock:y :buildBlockFromCfg.12:y                    ...
  779:  set :buildBlock:copper 60                                    ...
  780:  set :buildBlock:lead 30                                      ...
  781:  set :buildBlock:graphite 30                                  ...
  782:  set :buildBlock:silicon 0                                    ...
  783:  set :buildBlock:titanium 0                                   ...
  784:  set :buildBlock:metaglass 0                                  ...
  785:  set :buildBlock:rotation 0                                   ...
  786:  set :buildBlock:config null                                  ...
  787:  setaddr :buildBlock*retaddr *label472                        ...
  788:  call *label13 *invalid :buildBlock*retval                    ...
        label *label472                                              ...
  789:  op add :buildBlockFromCfg.13:x .coreX 2                      CoreBuilder.mnd: var x = coreX + offsetX;
  790:  op add :buildBlockFromCfg.13:y .coreY 1                      CoreBuilder.mnd: var y = coreY + offsetY;
  791:  set :buildBlock:block @junction                              CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  792:  set :buildBlock:x :buildBlockFromCfg.13:x                    ...
  793:  set :buildBlock:y :buildBlockFromCfg.13:y                    ...
  794:  set :buildBlock:copper 3                                     ...
  795:  set :buildBlock:lead 0                                       ...
  796:  set :buildBlock:graphite 0                                   ...
  797:  set :buildBlock:silicon 0                                    ...
  798:  set :buildBlock:titanium 0                                   ...
  799:  set :buildBlock:metaglass 0                                  ...
  800:  set :buildBlock:rotation 0                                   ...
  801:  set :buildBlock:config null                                  ...
  802:  setaddr :buildBlock*retaddr *label478                        ...
  803:  call *label13 *invalid :buildBlock*retval                    ...
        label *label478                                              ...
  804:  op add :buildBlockFromCfg.14:x .coreX -3.5                   CoreBuilder.mnd: var x = coreX + offsetX;
  805:  op add :buildBlockFromCfg.14:y .coreY 3.5                    CoreBuilder.mnd: var y = coreY + offsetY;
  806:  set :buildBlock:block @water-extractor                       CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  807:  set :buildBlock:x :buildBlockFromCfg.14:x                    ...
  808:  set :buildBlock:y :buildBlockFromCfg.14:y                    ...
  809:  set :buildBlock:copper 30                                    ...
  810:  set :buildBlock:lead 30                                      ...
  811:  set :buildBlock:graphite 30                                  ...
  812:  set :buildBlock:silicon 0                                    ...
  813:  set :buildBlock:titanium 0                                   ...
  814:  set :buildBlock:metaglass 30                                 ...
  815:  set :buildBlock:rotation 0                                   ...
  816:  set :buildBlock:config null                                  ...
  817:  setaddr :buildBlock*retaddr *label484                        ...
  818:  call *label13 *invalid :buildBlock*retval                    ...
        label *label484                                              ...
  819:  op add :buildBlockFromCfg.15:x .coreX -4.5                   CoreBuilder.mnd: var x = coreX + offsetX;
  820:  op add :buildBlockFromCfg.15:y .coreY 1.5                    CoreBuilder.mnd: var y = coreY + offsetY;
  821:  set :buildBlock:block @steam-generator                       CoreBuilder.mnd: return buildBlock(block, x, y, copper, lead, graphite, silicon, titanium, metaglass, rotation, config);
  822:  set :buildBlock:x :buildBlockFromCfg.15:x                    ...
  823:  set :buildBlock:y :buildBlockFromCfg.15:y                    ...
  824:  set :buildBlock:copper 35                                    ...
  825:  set :buildBlock:lead 40                                      ...
  826:  set :buildBlock:graphite 25                                  ...
  827:  set :buildBlock:silicon 30                                   ...
  828:  set :buildBlock:titanium 0                                   ...
  829:  set :buildBlock:metaglass 0                                  ...
  830:  set :buildBlock:rotation 0                                   ...
  831:  set :buildBlock:config null                                  ...
  832:  setaddr :buildBlock*retaddr *label490                        ...
  833:  call *label13 *invalid :buildBlock*retval                    ...
        label *label490                                              ...
        label *label332                                              CoreBuilder.mnd: while true do
  834:  setaddr :supplyBlocks*retaddr *label335                      CoreBuilder.mnd: supplyBlocks();
  835:  call *label10 *invalid :supplyBlocks*retval                  ...
        label *label335                                              ...
  836:  jump *label332 always 0 0                                    CoreBuilder.mnd: while true do


Performance: parsed in 352 ms, compiled in 239 ms, optimized in 2,013 ms, run in 7 ms.

Compiled mlog code was sent to Mlog Watcher.
  Mlog Watcher: success.

Program output (26 steps):
The program didn't generate any output.
Execution exception at instruction 26: wait 1e12:
Instruction not supported by Mindcode emulator.
(Use the '#set err-unsupported-opcode = false;' directive or the '--err-unsupported-opcode false' command line option to ignore this exception.)
